{"info": {"author": "Itamar Turner-Trauring", "author_email": "itamar@itamarst.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# dask-memusage\n\nIf you're using Dask with tasks that use a lot of memory, RAM is your bottleneck for parallelism.\nThat means you want to know how much memory each task uses:\n\n1. So you can set the highest parallelism level (process or threads) for each machine, given available to RAM.\n2. In order to know where to focus memory optimization efforts.\n\n`dask-memusage` is an MIT-licensed statistical memory profiler for Dask's Distributed scheduler that can help you with both these problems.\n\n`dask-memusage` polls your processes for memory usage and records the minimum and maximum usage in a CSV:\n\n```csv\ntask_key,min_memory_mb,max_memory_mb\n\"('from_sequence-map-sum-part-e15703211a549e75b11c63e0054b53e5', 0)\",44.84765625,96.98046875\n\"('from_sequence-map-sum-part-e15703211a549e75b11c63e0054b53e5', 1)\",47.015625,97.015625\n\"('sum-part-e15703211a549e75b11c63e0054b53e5', 0)\",0,0\n\"('sum-part-e15703211a549e75b11c63e0054b53e5', 1)\",0,0\nsum-aggregate-apply-no_allocate-4c30eb545d4c778f0320d973d9fc8ea6,0,0\napply-no_allocate-4c30eb545d4c778f0320d973d9fc8ea6,47.265625,47.265625\ntask_key,min_memory_mb,max_memory_mb\n\"('from_sequence-map-sum-part-e15703211a549e75b11c63e0054b53e5', 0)\",44.84765625,96.98046875\n\"('from_sequence-map-sum-part-e15703211a549e75b11c63e0054b53e5', 1)\",47.015625,97.015625\n\"('sum-part-e15703211a549e75b11c63e0054b53e5', 0)\",0,0\n\"('sum-part-e15703211a549e75b11c63e0054b53e5', 1)\",0,0\nsum-aggregate-apply-no_allocate-4c30eb545d4c778f0320d973d9fc8ea6,0,0\napply-no_allocate-4c30eb545d4c778f0320d973d9fc8ea6,47.265625,47.265625\n```\n\n## Usage\n\n*Important:* Make sure your workers only have a single thread! Otherwise the results will be wrong.\n\n### Installation\n\nOn the machine where you are running the Distributed scheduler, run:\n\n```console\n$ pip install dask_memusage\n```\n\nOr if you're using Conda:\n\n```console\n$ conda install -c conda-forge dask-memusage\n```\n\n### API usage\n\n```python\n# Add to your Scheduler object, which is e.g. your LocalCluster's scheduler\n# attribute:\nfrom dask_memoryusage import install\ninstall(scheduler, \"/tmp/memusage.csv\")\n```\n\n### CLI usage\n\n```console\n$ dask-scheduler --preload dask_memusage --memusage.csv /tmp/memusage.csv\n```\n\n## Limitations\n\n* Again, make sure you only have one thread per worker process.\n* This is statistical profiling, running every 10ms.\n  Tasks that take less than that won't have accurate information.\n\n## Help\n\nNeed help? File a ticket at https://github.com/itamarst/dask-memusage/issues/new\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/itamarst/dask-memusage", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dask_memusage", "package_url": "https://pypi.org/project/dask_memusage/", "platform": "", "project_url": "https://pypi.org/project/dask_memusage/", "project_urls": {"Homepage": "https://github.com/itamarst/dask-memusage"}, "release_url": "https://pypi.org/project/dask_memusage/1.1/", "requires_dist": ["distributed", "click", "pytest ; extra == \"test\"", "flake8 ; extra == \"test\"", "numpy ; extra == \"test\"", "dask[bag] ; extra == \"test\""], "requires_python": ">=3.6", "summary": "Low-impact, task-level memory profiling for Dask.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dask-memusage</h1>\n<p>If you're using Dask with tasks that use a lot of memory, RAM is your bottleneck for parallelism.\nThat means you want to know how much memory each task uses:</p>\n<ol>\n<li>So you can set the highest parallelism level (process or threads) for each machine, given available to RAM.</li>\n<li>In order to know where to focus memory optimization efforts.</li>\n</ol>\n<p><code>dask-memusage</code> is an MIT-licensed statistical memory profiler for Dask's Distributed scheduler that can help you with both these problems.</p>\n<p><code>dask-memusage</code> polls your processes for memory usage and records the minimum and maximum usage in a CSV:</p>\n<pre>task_key,min_memory_mb,max_memory_mb\n\"('from_sequence-map-sum-part-e15703211a549e75b11c63e0054b53e5', 0)\",44.84765625,96.98046875\n\"('from_sequence-map-sum-part-e15703211a549e75b11c63e0054b53e5', 1)\",47.015625,97.015625\n\"('sum-part-e15703211a549e75b11c63e0054b53e5', 0)\",0,0\n\"('sum-part-e15703211a549e75b11c63e0054b53e5', 1)\",0,0\nsum-aggregate-apply-no_allocate-4c30eb545d4c778f0320d973d9fc8ea6,0,0\napply-no_allocate-4c30eb545d4c778f0320d973d9fc8ea6,47.265625,47.265625\ntask_key,min_memory_mb,max_memory_mb\n\"('from_sequence-map-sum-part-e15703211a549e75b11c63e0054b53e5', 0)\",44.84765625,96.98046875\n\"('from_sequence-map-sum-part-e15703211a549e75b11c63e0054b53e5', 1)\",47.015625,97.015625\n\"('sum-part-e15703211a549e75b11c63e0054b53e5', 0)\",0,0\n\"('sum-part-e15703211a549e75b11c63e0054b53e5', 1)\",0,0\nsum-aggregate-apply-no_allocate-4c30eb545d4c778f0320d973d9fc8ea6,0,0\napply-no_allocate-4c30eb545d4c778f0320d973d9fc8ea6,47.265625,47.265625\n</pre>\n<h2>Usage</h2>\n<p><em>Important:</em> Make sure your workers only have a single thread! Otherwise the results will be wrong.</p>\n<h3>Installation</h3>\n<p>On the machine where you are running the Distributed scheduler, run:</p>\n<pre><span class=\"gp\">$</span> pip install dask_memusage\n</pre>\n<p>Or if you're using Conda:</p>\n<pre><span class=\"gp\">$</span> conda install -c conda-forge dask-memusage\n</pre>\n<h3>API usage</h3>\n<pre><span class=\"c1\"># Add to your Scheduler object, which is e.g. your LocalCluster's scheduler</span>\n<span class=\"c1\"># attribute:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dask_memoryusage</span> <span class=\"kn\">import</span> <span class=\"n\">install</span>\n<span class=\"n\">install</span><span class=\"p\">(</span><span class=\"n\">scheduler</span><span class=\"p\">,</span> <span class=\"s2\">\"/tmp/memusage.csv\"</span><span class=\"p\">)</span>\n</pre>\n<h3>CLI usage</h3>\n<pre><span class=\"gp\">$</span> dask-scheduler --preload dask_memusage --memusage.csv /tmp/memusage.csv\n</pre>\n<h2>Limitations</h2>\n<ul>\n<li>Again, make sure you only have one thread per worker process.</li>\n<li>This is statistical profiling, running every 10ms.\nTasks that take less than that won't have accurate information.</li>\n</ul>\n<h2>Help</h2>\n<p>Need help? File a ticket at <a href=\"https://github.com/itamarst/dask-memusage/issues/new\" rel=\"nofollow\">https://github.com/itamarst/dask-memusage/issues/new</a></p>\n\n          </div>"}, "last_serial": 6480038, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "7fd515960b056169cc4bb71aa3661ca1", "sha256": "32c82e9a97d1133da9519bf3fc25f31f6e4bf4a45d2a941540c3b0716cc6b67f"}, "downloads": -1, "filename": "dask_memusage-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7fd515960b056169cc4bb71aa3661ca1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7249, "upload_time": "2018-09-28T13:58:41", "upload_time_iso_8601": "2018-09-28T13:58:41.978458Z", "url": "https://files.pythonhosted.org/packages/a8/45/884279ea392565bded3582f835bbeac8681a900c454338eef22b1848c626/dask_memusage-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c53999ddb8af64147a63a7ab401ada5e", "sha256": "44f05a009a256f5fe1af323970b212f024bad9150a649e595776185c3611bf47"}, "downloads": -1, "filename": "dask_memusage-1.0.tar.gz", "has_sig": false, "md5_digest": "c53999ddb8af64147a63a7ab401ada5e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6940, "upload_time": "2018-09-28T13:59:21", "upload_time_iso_8601": "2018-09-28T13:59:21.438271Z", "url": "https://files.pythonhosted.org/packages/72/97/30ba80d5b782fdd4ebf497612f8475d587e8cec3043f6d6a157cb3dc06cc/dask_memusage-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "12630a210959fa028c7c04e651b1ee67", "sha256": "3024bcd9189ac611d2576ab8b3941dd41ea466f1933dd131cf4650f81a4677c4"}, "downloads": -1, "filename": "dask_memusage-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "12630a210959fa028c7c04e651b1ee67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4356, "upload_time": "2020-01-18T23:28:26", "upload_time_iso_8601": "2020-01-18T23:28:26.645994Z", "url": "https://files.pythonhosted.org/packages/e0/51/499c565202a5b892bd9ac5ba98c458d0cf6d1ec9b0b784db20a4e0f5b5cd/dask_memusage-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94f3882eed9009eee13702c1c6ed2565", "sha256": "29d9f25074fecd7ca249e972cb3ec0b909a1dcefaf037c8d5fca24fadbf66757"}, "downloads": -1, "filename": "dask_memusage-1.1.tar.gz", "has_sig": false, "md5_digest": "94f3882eed9009eee13702c1c6ed2565", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6974, "upload_time": "2020-01-18T23:28:31", "upload_time_iso_8601": "2020-01-18T23:28:31.333769Z", "url": "https://files.pythonhosted.org/packages/b6/c4/73b1021d1a9ea5ed29c079faf23cb62d8c29e8ef5794384f237c8927b918/dask_memusage-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12630a210959fa028c7c04e651b1ee67", "sha256": "3024bcd9189ac611d2576ab8b3941dd41ea466f1933dd131cf4650f81a4677c4"}, "downloads": -1, "filename": "dask_memusage-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "12630a210959fa028c7c04e651b1ee67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4356, "upload_time": "2020-01-18T23:28:26", "upload_time_iso_8601": "2020-01-18T23:28:26.645994Z", "url": "https://files.pythonhosted.org/packages/e0/51/499c565202a5b892bd9ac5ba98c458d0cf6d1ec9b0b784db20a4e0f5b5cd/dask_memusage-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94f3882eed9009eee13702c1c6ed2565", "sha256": "29d9f25074fecd7ca249e972cb3ec0b909a1dcefaf037c8d5fca24fadbf66757"}, "downloads": -1, "filename": "dask_memusage-1.1.tar.gz", "has_sig": false, "md5_digest": "94f3882eed9009eee13702c1c6ed2565", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6974, "upload_time": "2020-01-18T23:28:31", "upload_time_iso_8601": "2020-01-18T23:28:31.333769Z", "url": "https://files.pythonhosted.org/packages/b6/c4/73b1021d1a9ea5ed29c079faf23cb62d8c29e8ef5794384f237c8927b918/dask_memusage-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:33 2020"}