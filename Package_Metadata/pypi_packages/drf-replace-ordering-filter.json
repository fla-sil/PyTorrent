{"info": {"author": "Emil Santurio", "author_email": "emilsas@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# drf-replace-ordering-filter\nDjango Rest Framework OrderingFilter backend to replace field name in ordering params.\n\nThis package is useful if you have custom hidden fields in you model to help with a better ordering.\n\n## Usage\nYou can user ```ReplaceFieldOrderingFilter``` as a Default Filter Backend in Rest Framework setting or specifying in a certain APIView.\n\n```ReplaceFieldOrderingFilter``` works in the same way as ```rest_framework.filters.OrderingFilter```, if you do not define fields in a View to be replaced.\n\n\n### 1. As a default setting\nFirst of all, add ```ReplaceFieldOrderingFilter``` to DEFAULT_FILTER_BACKENDS in ```setting.py``` file of your Django's project.\n\n``` python\nREST_FRAMEWORK = {\n  'DEFAULT_FILTER_BACKENDS': (\n    'drf_replace_ordering_filter.filters.ReplaceFieldOrderingFilter',\n  )\n}\n```\n\nLastly, in a view that you want to change some ordering filed to another, add the following attribute.\n\n```python\nfrom rest_framework import views\n\n\nclass MyAPIView(views.APIView):\n  replace_ordering_fields = {\n    'field_to_be_replaced': 'new_field'\n  }\n\n  def get(self, request, *args, **kwargs):\n    pass\n```\n\n### 2. In a specific view\nThe second option is using ```ReplaceFieldOrderingFilter``` only in a specfic view or viewset.\n\nFor example:\n\n```python\nfrom drf_replace_ordering_filter.filters import ReplaceFieldOrderingFilter\nfrom rest_framework import views\n\n\nclass MyAPIView(views.APIView):\n  filter_backends = (ReplaceFieldOrderingFilter,)\n  replace_ordering_fields = {\n    'field_to_be_replaced': 'new_field'\n  }\n\n  def get(self, request, *args, **kwargs):\n    pass\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/emilsas/drf-replace-ordering-filter", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "drf-replace-ordering-filter", "package_url": "https://pypi.org/project/drf-replace-ordering-filter/", "platform": "", "project_url": "https://pypi.org/project/drf-replace-ordering-filter/", "project_urls": {"Homepage": "https://github.com/emilsas/drf-replace-ordering-filter"}, "release_url": "https://pypi.org/project/drf-replace-ordering-filter/1.0.1/", "requires_dist": ["djangorestframework"], "requires_python": "", "summary": "Django Rest Framework OrderingFilter backend to replace field name in ordering params.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # drf-replace-ordering-filter<br>Django Rest Framework OrderingFilter backend to replace field name in ordering params.<br><br>This package is useful if you have custom hidden fields in you model to help with a better ordering.<br><br>## Usage<br>You can user ```ReplaceFieldOrderingFilter``` as a Default Filter Backend in Rest Framework setting or specifying in a certain APIView.<br><br>```ReplaceFieldOrderingFilter``` works in the same way as ```rest_framework.filters.OrderingFilter```, if you do not define fields in a View to be replaced.<br><br><br>### 1. As a default setting<br>First of all, add ```ReplaceFieldOrderingFilter``` to DEFAULT_FILTER_BACKENDS in ```setting.py``` file of your Django's project.<br><br>``` python<br>REST_FRAMEWORK = {<br>  'DEFAULT_FILTER_BACKENDS': (<br>    'drf_replace_ordering_filter.filters.ReplaceFieldOrderingFilter',<br>  )<br>}<br>```<br><br>Lastly, in a view that you want to change some ordering filed to another, add the following attribute.<br><br>```python<br>from rest_framework import views<br><br><br>class MyAPIView(views.APIView):<br>  replace_ordering_fields = {<br>    'field_to_be_replaced': 'new_field'<br>  }<br><br>  def get(self, request, *args, **kwargs):<br>    pass<br>```<br><br>### 2. In a specific view<br>The second option is using ```ReplaceFieldOrderingFilter``` only in a specfic view or viewset.<br><br>For example:<br><br>```python<br>from drf_replace_ordering_filter.filters import ReplaceFieldOrderingFilter<br>from rest_framework import views<br><br><br>class MyAPIView(views.APIView):<br>  filter_backends = (ReplaceFieldOrderingFilter,)<br>  replace_ordering_fields = {<br>    'field_to_be_replaced': 'new_field'<br>  }<br><br>  def get(self, request, *args, **kwargs):<br>    pass<br>```<br><br><br>\n          </div>"}, "last_serial": 4806546, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "d7e1fc622a899b33fa6780075c39f516", "sha256": "f7045625fb4177dea090462e2d8d3c098b56a379c5a1d314b8aa042b51b4341c"}, "downloads": -1, "filename": "drf_replace_ordering_filter-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7e1fc622a899b33fa6780075c39f516", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3604, "upload_time": "2019-02-11T15:20:35", "upload_time_iso_8601": "2019-02-11T15:20:35.242505Z", "url": "https://files.pythonhosted.org/packages/92/fe/aca194d9fe8c1da83fb0c55bed32ac3bbbc9290bce640b8ed44bcb157a74/drf_replace_ordering_filter-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f20ca10771f971d8db55bc943367b77", "sha256": "fd75456cb058217cbf7dbd0c651b1bf380d20a1e26a6b42bdcb70281662acc17"}, "downloads": -1, "filename": "drf-replace-ordering-filter-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0f20ca10771f971d8db55bc943367b77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2105, "upload_time": "2019-02-11T15:20:36", "upload_time_iso_8601": "2019-02-11T15:20:36.371314Z", "url": "https://files.pythonhosted.org/packages/70/97/6f7378cffc3f188368bee349597c95cf0821b82691bd46aad6860babab88/drf-replace-ordering-filter-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7e1fc622a899b33fa6780075c39f516", "sha256": "f7045625fb4177dea090462e2d8d3c098b56a379c5a1d314b8aa042b51b4341c"}, "downloads": -1, "filename": "drf_replace_ordering_filter-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7e1fc622a899b33fa6780075c39f516", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3604, "upload_time": "2019-02-11T15:20:35", "upload_time_iso_8601": "2019-02-11T15:20:35.242505Z", "url": "https://files.pythonhosted.org/packages/92/fe/aca194d9fe8c1da83fb0c55bed32ac3bbbc9290bce640b8ed44bcb157a74/drf_replace_ordering_filter-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f20ca10771f971d8db55bc943367b77", "sha256": "fd75456cb058217cbf7dbd0c651b1bf380d20a1e26a6b42bdcb70281662acc17"}, "downloads": -1, "filename": "drf-replace-ordering-filter-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0f20ca10771f971d8db55bc943367b77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2105, "upload_time": "2019-02-11T15:20:36", "upload_time_iso_8601": "2019-02-11T15:20:36.371314Z", "url": "https://files.pythonhosted.org/packages/70/97/6f7378cffc3f188368bee349597c95cf0821b82691bd46aad6860babab88/drf-replace-ordering-filter-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:41 2020"}