{"info": {"author": "Renato Fabbri", "author_email": "listamacambira@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Other Audience", "Intended Audience :: Religion", "Intended Audience :: Science/Research", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Artistic Software", "Topic :: Multimedia :: Graphics :: Presentation", "Topic :: Multimedia :: Sound/Audio :: Editors", "Topic :: Multimedia :: Sound/Audio :: Mixers", "Topic :: Multimedia :: Sound/Audio :: Sound Synthesis", "Topic :: Multimedia :: Sound/Audio :: Speech", "Topic :: Multimedia :: Video :: Display", "Topic :: Other/Nonlisted Topic", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Text Processing", "Topic :: Text Processing :: Linguistic"], "description": "==================================================================\nSocial participation data analysis and exploitation\n==================================================================\n\nRoutines for analysis and synthesis of RDF social participation data.\nIdealized facilites include:\n\n   - Observance of expected stability and overall measures of each instance.\n   - Integration of data from a number of instances.\n   - Integration of data from a usual social platforms (Facebook, Twitter, LinkedIn).\n   - Recommendation of resources through topological and textual criteria, with explicit routines and potential uses.\n   - Synthesis of audiovisual artifacts to ease observation, probing and exploitation.\n   - Translation of participatory data to RDF.\n   - HTTP utilities, such as bootstrapping participatory ontologies or an access to resource recommendation routines.\n\nPublic data, such as provided by the Gmane database or donated profiles from private networks (e.g. Facebook), or gathered by Twitter, can be incorporated as RDF in the Social Graph.\n\nUsage example\n=================\n\n.. code:: python\n\n    import participation as P\n\n    # downloads Social Participation data from Participabr,\n    # Cidade Democr\u00e1tica and AA from datahub.io\n    P.download()\n\n    # The triplification routines are available:\n    # accesses Participa.br data on PostgreSQL and save RDF Xml and Turtle\n    P.triplification.ParticipaTriplification(\"dbname\",\"username\")\n    # accesses Participa.br data on PostgreSQL and save RDF Xml and Turtle\n    P.triplification.AATriplification(\"dbname\",\"username\",\"dbname2\",\"username2\",\"ircLog.txt\")\n    # accesses Participa.br data on PostgreSQL and save RDF Xml and Turtle\n    P.triplification.OCDTriplify(\"dbname\",\"username\")\n\n    # print number of users in each RDF graph\n    # print number of incidences of each\n    # print vocabulary\n\n    import social as S\n    # To load GDF file:\n    fg=S.GDFgraph(\"../data/RenatoFabbri06022014.gdf\") # graph should be on fg.G\n    # find posts by friends with similar names\n\n    # To make an abstract animation with the overall network:\n    song=S.FSong(fg.G,\"fsong/\",True,True,False,True)\n    # Check mixedVideo.webm\n\n    # Add information about users that are equivalent (through RDF).\n    # make network with and without that information\n\n    # Make recommendation based on a target resource\n    # Make recommendation of percolatory method\n\n    # Rise a flask instance, point an example meteor interface\n\n    # more ***under construction***\n    # Enjoy!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ttm/participation", "keywords": "complexity networks human interaction physics data text mining analysis visualization music physics synthesis toolbox semantic web linked data owl ontology social participation", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "participation", "package_url": "https://pypi.org/project/participation/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/participation/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ttm/participation"}, "release_url": "https://pypi.org/project/participation/0.1.dev1/", "requires_dist": null, "requires_python": null, "summary": "Participation is a python package for social participation ontologies, rdf data (linked data) triplification and analysis", "version": "0.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Routines for analysis and synthesis of RDF social participation data.\nIdealized facilites include:</p>\n<blockquote>\n<ul>\n<li>Observance of expected stability and overall measures of each instance.</li>\n<li>Integration of data from a number of instances.</li>\n<li>Integration of data from a usual social platforms (Facebook, Twitter, LinkedIn).</li>\n<li>Recommendation of resources through topological and textual criteria, with explicit routines and potential uses.</li>\n<li>Synthesis of audiovisual artifacts to ease observation, probing and exploitation.</li>\n<li>Translation of participatory data to RDF.</li>\n<li>HTTP utilities, such as bootstrapping participatory ontologies or an access to resource recommendation routines.</li>\n</ul>\n</blockquote>\n<p>Public data, such as provided by the Gmane database or donated profiles from private networks (e.g. Facebook), or gathered by Twitter, can be incorporated as RDF in the Social Graph.</p>\n<div id=\"usage-example\">\n<h2>Usage example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">participation</span> <span class=\"k\">as</span> <span class=\"nn\">P</span>\n\n<span class=\"c1\"># downloads Social Participation data from Participabr,</span>\n<span class=\"c1\"># Cidade Democr\u00e1tica and AA from datahub.io</span>\n<span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># The triplification routines are available:</span>\n<span class=\"c1\"># accesses Participa.br data on PostgreSQL and save RDF Xml and Turtle</span>\n<span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">triplification</span><span class=\"o\">.</span><span class=\"n\">ParticipaTriplification</span><span class=\"p\">(</span><span class=\"s2\">\"dbname\"</span><span class=\"p\">,</span><span class=\"s2\">\"username\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># accesses Participa.br data on PostgreSQL and save RDF Xml and Turtle</span>\n<span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">triplification</span><span class=\"o\">.</span><span class=\"n\">AATriplification</span><span class=\"p\">(</span><span class=\"s2\">\"dbname\"</span><span class=\"p\">,</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span><span class=\"s2\">\"dbname2\"</span><span class=\"p\">,</span><span class=\"s2\">\"username2\"</span><span class=\"p\">,</span><span class=\"s2\">\"ircLog.txt\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># accesses Participa.br data on PostgreSQL and save RDF Xml and Turtle</span>\n<span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">triplification</span><span class=\"o\">.</span><span class=\"n\">OCDTriplify</span><span class=\"p\">(</span><span class=\"s2\">\"dbname\"</span><span class=\"p\">,</span><span class=\"s2\">\"username\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># print number of users in each RDF graph</span>\n<span class=\"c1\"># print number of incidences of each</span>\n<span class=\"c1\"># print vocabulary</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">social</span> <span class=\"k\">as</span> <span class=\"nn\">S</span>\n<span class=\"c1\"># To load GDF file:</span>\n<span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"n\">S</span><span class=\"o\">.</span><span class=\"n\">GDFgraph</span><span class=\"p\">(</span><span class=\"s2\">\"../data/RenatoFabbri06022014.gdf\"</span><span class=\"p\">)</span> <span class=\"c1\"># graph should be on fg.G</span>\n<span class=\"c1\"># find posts by friends with similar names</span>\n\n<span class=\"c1\"># To make an abstract animation with the overall network:</span>\n<span class=\"n\">song</span><span class=\"o\">=</span><span class=\"n\">S</span><span class=\"o\">.</span><span class=\"n\">FSong</span><span class=\"p\">(</span><span class=\"n\">fg</span><span class=\"o\">.</span><span class=\"n\">G</span><span class=\"p\">,</span><span class=\"s2\">\"fsong/\"</span><span class=\"p\">,</span><span class=\"kc\">True</span><span class=\"p\">,</span><span class=\"kc\">True</span><span class=\"p\">,</span><span class=\"kc\">False</span><span class=\"p\">,</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># Check mixedVideo.webm</span>\n\n<span class=\"c1\"># Add information about users that are equivalent (through RDF).</span>\n<span class=\"c1\"># make network with and without that information</span>\n\n<span class=\"c1\"># Make recommendation based on a target resource</span>\n<span class=\"c1\"># Make recommendation of percolatory method</span>\n\n<span class=\"c1\"># Rise a flask instance, point an example meteor interface</span>\n\n<span class=\"c1\"># more ***under construction***</span>\n<span class=\"c1\"># Enjoy!</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1480412, "releases": {"0.1.dev1": [{"comment_text": "", "digests": {"md5": "ef1e3e7a0f2646c34a4139ed7c459dc9", "sha256": "24b349d56e9871b3c4fd6541e98416db6260250ab32922d77d6092f3f1040421"}, "downloads": -1, "filename": "participation-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "ef1e3e7a0f2646c34a4139ed7c459dc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3911, "upload_time": "2015-03-27T16:37:36", "upload_time_iso_8601": "2015-03-27T16:37:36.138213Z", "url": "https://files.pythonhosted.org/packages/7d/d3/210f55650570afceba30dfa905827c56d8846cbd0808918df9e994655acf/participation-0.1.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef1e3e7a0f2646c34a4139ed7c459dc9", "sha256": "24b349d56e9871b3c4fd6541e98416db6260250ab32922d77d6092f3f1040421"}, "downloads": -1, "filename": "participation-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "ef1e3e7a0f2646c34a4139ed7c459dc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3911, "upload_time": "2015-03-27T16:37:36", "upload_time_iso_8601": "2015-03-27T16:37:36.138213Z", "url": "https://files.pythonhosted.org/packages/7d/d3/210f55650570afceba30dfa905827c56d8846cbd0808918df9e994655acf/participation-0.1.dev1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:13 2020"}