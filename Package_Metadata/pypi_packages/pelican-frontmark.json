{"info": {"author": "Axel Haustant", "author_email": "noirbizarre+github@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Software Distribution"], "description": "Pelican FrontMark\n=================\n\n.. image:: https://travis-ci.org/noirbizarre/pelican-frontmark.svg?tag=1.2.1\n    :target: https://travis-ci.org/noirbizarre/pelican-frontmark\n    :alt: Build Status\n\n.. image:: https://coveralls.io/repos/github/noirbizarre/pelican-frontmark/badge.svg?tag=1.2.1\n    :target: https://coveralls.io/github/noirbizarre/pelican-frontmark?tag=1.2.1\n    :alt: Coverage Status\n\n.. image:: https://img.shields.io/pypi/l/pelican-frontmark.svg\n    :target: https://pypi.python.org/pypi/pelican-frontmark\n    :alt: License\n\n.. image:: https://img.shields.io/pypi/format/pelican-frontmark.svg\n    :target: https://pypi.python.org/pypi/pelican-frontmark\n    :alt: Format\n\n.. image:: https://img.shields.io/pypi/pyversions/pelican-frontmark.svg\n    :target: https://pypi.python.org/pypi/pelican-frontmark\n    :alt: Supported versions\n\n\n\nA Pelican CommonMark/Front Matter reader.\n\nThis reader marse Markdown files with YAML frontmatter headers and formatted using the CommonMark specifications.\n\n\nRequirements\n------------\n\nPelican FrontMark works with Pelican 3.7+ and Python 3.3+\n\nGetting started\n---------------\n\nInstall `pelican-frontmark` with pip:\n\n.. code-block:: shell\n\n    pip install pelican-frontmark\n    \n\n\nAnd enable the plugin in you `pelicanconf.py` (or any configuration file you want to use):\n\n.. code-block:: Python\n\n    PLUGINS = [\n        '...',\n        'frontmark',\n        '...',\n    ]\n    \n\n\nFiles format\n------------\n\nFrontmark will only recognize files using `.md` extension.\n\nHere an article example:\n\n.. code-block:: \n\n    ---\n    title: My article title\n    date: 2017-01-04 13:10\n    modified: 2017-01-04 13:13\n    tags:\n      - tag 1\n      - tag 2\n    slug: my-article-slug\n    lang: en\n    category: A category\n    authors: Me\n    summary: Some summary\n    status: draft\n    \n    custom:\n      title: A custom metadata\n      details: You can add any structured and typed YAML metadata\n    \n    ---\n    \n    My article content\n    \n    \n\n\nAdvanced configuration\n----------------------\n\nSyntax highlighting\n*******************\n\nBy default, `FrontMark` outputs code blocks in a standard html5 way,\nie. a `pre>code` block with a language class.\nThis allow to use any html5 syntax highlight JavaScript lib.\n\nYou can force Pygments usage to output html4 pre rendered syntax highlight\nby setting `FRONTMARK_PYGMENTS` to `True` for default parameters\nor manually setting it to a dict of Pygments HtmlRenderer parameters.\n\n.. code-block:: python\n\n    FRONTMARK_PYGMENTS = {\n        'linenos': 'inline',\n    }\n    \n\n\nSettings\n********\n\n- **`FRONTMARK_PARSE_LITERAL`**: `True` by default. Set it to `False` if you don't want multiline string literals (`|`)\n  to be parsed as markdown.\n\n- **`FRONTMARK_PYGMENTS`**: Not defined by default and output standard html5 code blocks.\n  Can be set to `True` to force Pygments usage with default parameters or a `dict` of\n  `Pygments parameters <http://docs.getpelican.com/en/stable/content.html#internal-pygments-options>`_\n\n\nRegistering custom YAML types\n*****************************\n\nYou can register custom YAML types using the `frontmark_yaml_register` signal:\n\n.. code-block:: python\n\n    from frontmark.signals import frontmark_yaml_register\n    \n    \n    def upper_constructor(loader, noder):\n        return loader.construct_scalar(node).upper()\n    \n    \n    def register_upper(reader):\n        return '!upper', upper_constructor\n    \n    \n    def register():\n        frontmark_yaml_register.connected(register_upper):\n    \n\n\nTesting\n-------\n\nTo test the plugin against all supported Python versions, run tox:\n\n.. code-block:: shell\n\n    tox\n    \n\n\nTo test only within your current Python version with pytest:\n\n.. code-block:: shell\n\n    pip install -e .[test]  # Install with test dependencies\n    pytest  # Launch pytest test suite\n    \n\n\nor let setuptools do the job:\n\n.. code-block:: shell\n\n    python setup.py test\n    \n\n\n\n.. _travis-badge: https://travis-ci.org/noirbizarre/pelican-frontmark.svg?tag=1.2.1\n.. _travis-badge-url: https://travis-ci.org/noirbizarre/pelican-frontmark\n.. _coveralls-badge: https://coveralls.io/repos/github/noirbizarre/pelican-frontmark/badge.svg?tag=1.2.1\n.. _coveralls-badge-url: https://coveralls.io/github/noirbizarre/pelican-frontmark?tag=1.2.1\n.. _license-badge: https://img.shields.io/pypi/l/pelican-frontmark.svg\n.. _license-badge-url: https://pypi.python.org/pypi/pelican-frontmark\n.. _format-badge: https://img.shields.io/pypi/format/pelican-frontmark.svg\n.. _format-badge-url: https://pypi.python.org/pypi/pelican-frontmark\n.. _python-version-badge: https://img.shields.io/pypi/pyversions/pelican-frontmark.svg\n.. _python-version-badge-url: https://pypi.python.org/pypi/pelican-frontmark\n.. _pygments-options: http://docs.getpelican.com/en/stable/content.html#internal-pygments-options\n\nChangelog\n=========\n\n1.2.1 (2019-12-09)\n------------------\n\n- Support CommonMark 0.9.1\n\n1.2.0 (2018-09-08)\n------------------\n\n- Upgrade to CommonMark 0.8+\n- Drop support for Python version prior to 3.5\n\n1.1.0 (2017-01-22)\n------------------\n\n- Added `FRONTMARK_PYGMENTS` optionnal setting for Pygments rendering\n- Fix links handling (ie. `{filename}`...)\n\n1.0.1 (2017-01-08)\n------------------\n\n- Test and fix plugin registeration\n- Make version and description available at module level\n\n1.0.0 (2017-01-08)\n------------------\n\n- Initial release\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/noirbizarre/pelican-frontmark", "keywords": "pelican", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pelican-frontmark", "package_url": "https://pypi.org/project/pelican-frontmark/", "platform": "", "project_url": "https://pypi.org/project/pelican-frontmark/", "project_urls": {"Homepage": "https://github.com/noirbizarre/pelican-frontmark"}, "release_url": "https://pypi.org/project/pelican-frontmark/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "CommonMark/Frontmatter reader for Pelican", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pelican-frontmark\">\n<h2>Pelican FrontMark</h2>\n<a href=\"https://travis-ci.org/noirbizarre/pelican-frontmark\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e347798fc462831bc41324b6aefbd5ae1e5e30f/68747470733a2f2f7472617669732d63692e6f72672f6e6f697262697a617272652f70656c6963616e2d66726f6e746d61726b2e7376673f7461673d312e322e31\"></a>\n<a href=\"https://coveralls.io/github/noirbizarre/pelican-frontmark?tag=1.2.1\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ea029a5e91db2fbf112a10ef6ef81818024f548/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e6f697262697a617272652f70656c6963616e2d66726f6e746d61726b2f62616467652e7376673f7461673d312e322e31\"></a>\n<a href=\"https://pypi.python.org/pypi/pelican-frontmark\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc9bc13ba1ce9f9cb3adf3d759bcb9de768811db/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70656c6963616e2d66726f6e746d61726b2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pelican-frontmark\" rel=\"nofollow\"><img alt=\"Format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5aa348b42b0aa05cf341032d2947b3e4a1d6694/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f70656c6963616e2d66726f6e746d61726b2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pelican-frontmark\" rel=\"nofollow\"><img alt=\"Supported versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bfdbb79922eb09afd776c31b41f37252f0ceb6d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70656c6963616e2d66726f6e746d61726b2e737667\"></a>\n<p>A Pelican CommonMark/Front Matter reader.</p>\n<p>This reader marse Markdown files with YAML frontmatter headers and formatted using the CommonMark specifications.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>Pelican FrontMark works with Pelican 3.7+ and Python 3.3+</p>\n</div>\n<div id=\"getting-started\">\n<h3>Getting started</h3>\n<p>Install <cite>pelican-frontmark</cite> with pip:</p>\n<pre>pip install pelican-frontmark\n</pre>\n<p>And enable the plugin in you <cite>pelicanconf.py</cite> (or any configuration file you want to use):</p>\n<pre><span class=\"n\">PLUGINS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'...'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'frontmark'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'...'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"files-format\">\n<h3>Files format</h3>\n<p>Frontmark will only recognize files using <cite>.md</cite> extension.</p>\n<p>Here an article example:</p>\n<pre>---\ntitle: My article title\ndate: 2017-01-04 13:10\nmodified: 2017-01-04 13:13\ntags:\n  - tag 1\n  - tag 2\nslug: my-article-slug\nlang: en\ncategory: A category\nauthors: Me\nsummary: Some summary\nstatus: draft\n\ncustom:\n  title: A custom metadata\n  details: You can add any structured and typed YAML metadata\n\n---\n\nMy article content\n</pre>\n</div>\n<div id=\"advanced-configuration\">\n<h3>Advanced configuration</h3>\n<div id=\"syntax-highlighting\">\n<h4>Syntax highlighting</h4>\n<p>By default, <cite>FrontMark</cite> outputs code blocks in a standard html5 way,\nie. a <cite>pre&gt;code</cite> block with a language class.\nThis allow to use any html5 syntax highlight JavaScript lib.</p>\n<p>You can force Pygments usage to output html4 pre rendered syntax highlight\nby setting <cite>FRONTMARK_PYGMENTS</cite> to <cite>True</cite> for default parameters\nor manually setting it to a dict of Pygments HtmlRenderer parameters.</p>\n<pre><span class=\"n\">FRONTMARK_PYGMENTS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'linenos'</span><span class=\"p\">:</span> <span class=\"s1\">'inline'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"settings\">\n<h4>Settings</h4>\n<ul>\n<li><strong>`FRONTMARK_PARSE_LITERAL`</strong>: <cite>True</cite> by default. Set it to <cite>False</cite> if you don\u2019t want multiline string literals (<cite>|</cite>)\nto be parsed as markdown.</li>\n<li><strong>`FRONTMARK_PYGMENTS`</strong>: Not defined by default and output standard html5 code blocks.\nCan be set to <cite>True</cite> to force Pygments usage with default parameters or a <cite>dict</cite> of\n<a href=\"http://docs.getpelican.com/en/stable/content.html#internal-pygments-options\" rel=\"nofollow\">Pygments parameters</a></li>\n</ul>\n</div>\n<div id=\"registering-custom-yaml-types\">\n<h4>Registering custom YAML types</h4>\n<p>You can register custom YAML types using the <cite>frontmark_yaml_register</cite> signal:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">frontmark.signals</span> <span class=\"kn\">import</span> <span class=\"n\">frontmark_yaml_register</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">upper_constructor</span><span class=\"p\">(</span><span class=\"n\">loader</span><span class=\"p\">,</span> <span class=\"n\">noder</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">loader</span><span class=\"o\">.</span><span class=\"n\">construct_scalar</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">register_upper</span><span class=\"p\">(</span><span class=\"n\">reader</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'!upper'</span><span class=\"p\">,</span> <span class=\"n\">upper_constructor</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">register</span><span class=\"p\">():</span>\n    <span class=\"n\">frontmark_yaml_register</span><span class=\"o\">.</span><span class=\"n\">connected</span><span class=\"p\">(</span><span class=\"n\">register_upper</span><span class=\"p\">):</span>\n</pre>\n</div>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>To test the plugin against all supported Python versions, run tox:</p>\n<pre>tox\n</pre>\n<p>To test only within your current Python version with pytest:</p>\n<pre>pip install -e .<span class=\"o\">[</span>test<span class=\"o\">]</span>  <span class=\"c1\"># Install with test dependencies\n</span>pytest  <span class=\"c1\"># Launch pytest test suite</span>\n</pre>\n<p>or let setuptools do the job:</p>\n<pre>python setup.py <span class=\"nb\">test</span>\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.2.1 (2019-12-09)</h3>\n<ul>\n<li>Support CommonMark 0.9.1</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.2.0 (2018-09-08)</h3>\n<ul>\n<li>Upgrade to CommonMark 0.8+</li>\n<li>Drop support for Python version prior to 3.5</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1.0 (2017-01-22)</h3>\n<ul>\n<li>Added <cite>FRONTMARK_PYGMENTS</cite> optionnal setting for Pygments rendering</li>\n<li>Fix links handling (ie. <cite>{filename}</cite>\u2026)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0.1 (2017-01-08)</h3>\n<ul>\n<li>Test and fix plugin registeration</li>\n<li>Make version and description available at module level</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.0 (2017-01-08)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6267773, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a3d4e759f0ab614ae5add9cd8c0979fa", "sha256": "a88bfd54c9ac01b064ed9f97b76087554de7efa2329ecdb4760962dd42f7843a"}, "downloads": -1, "filename": "pelican_frontmark-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3d4e759f0ab614ae5add9cd8c0979fa", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 7077, "upload_time": "2017-01-08T16:20:42", "upload_time_iso_8601": "2017-01-08T16:20:42.704273Z", "url": "https://files.pythonhosted.org/packages/c7/1d/e38adbd79f9925672fe16e21c00418d8c413cbc5e44669685f48e2584faf/pelican_frontmark-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6d4f137d7ec3f5132270e1ff61e35a37", "sha256": "56e2840c044eb429a6a424c413bb60da19416dc7001f5306d8bb82789d1d42a3"}, "downloads": -1, "filename": "pelican_frontmark-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6d4f137d7ec3f5132270e1ff61e35a37", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 7179, "upload_time": "2017-01-08T18:02:33", "upload_time_iso_8601": "2017-01-08T18:02:33.857558Z", "url": "https://files.pythonhosted.org/packages/0c/bd/ad4376684a168c6674eeba5cc45740148350cb89f5ef23be54c172a01b7a/pelican_frontmark-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "7ae3d9ff712f08afce428618cd7fbbea", "sha256": "6d23d28f2c34d64f5fe729aab777a3cdefb6d9b95615ce7baa53e4b4783d9b6c"}, "downloads": -1, "filename": "pelican_frontmark-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ae3d9ff712f08afce428618cd7fbbea", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9269, "upload_time": "2017-01-22T19:08:33", "upload_time_iso_8601": "2017-01-22T19:08:33.663045Z", "url": "https://files.pythonhosted.org/packages/1b/32/7f1a620abbbba61045b8a047ccaaec3e1aec22bd92a0eb509a2c76e871a1/pelican_frontmark-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "a14f0578eee1ec5dae7f4851dae1f6b4", "sha256": "da0e91747f06008f29ea833bef4b5fd99c55a87d36d698568ba4c026d4ec17b1"}, "downloads": -1, "filename": "pelican_frontmark-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a14f0578eee1ec5dae7f4851dae1f6b4", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 6534, "upload_time": "2018-09-08T15:23:33", "upload_time_iso_8601": "2018-09-08T15:23:33.561644Z", "url": "https://files.pythonhosted.org/packages/55/f1/17a747bcbb20394df345f4c2895d0533badf1d47ca6f3bee0c7693dc0c88/pelican_frontmark-1.2.0-py2.py3-none-any.whl", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "18ac9085fe1772a5c92d5cc8d67b8796", "sha256": "365c3e0ffdf1e467f3585f3b934300c5b55a2dc13148f158fcb8ea003df1c55a"}, "downloads": -1, "filename": "pelican_frontmark-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18ac9085fe1772a5c92d5cc8d67b8796", "packagetype": "bdist_wheel", "python_version": "3.8", "requires_python": null, "size": 7358, "upload_time": "2019-12-09T18:17:17", "upload_time_iso_8601": "2019-12-09T18:17:17.436405Z", "url": "https://files.pythonhosted.org/packages/42/d9/5d51fb9ef82c0040699c167e729323f2cb8a193bd7b18d1a80358589ea49/pelican_frontmark-1.2.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18ac9085fe1772a5c92d5cc8d67b8796", "sha256": "365c3e0ffdf1e467f3585f3b934300c5b55a2dc13148f158fcb8ea003df1c55a"}, "downloads": -1, "filename": "pelican_frontmark-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18ac9085fe1772a5c92d5cc8d67b8796", "packagetype": "bdist_wheel", "python_version": "3.8", "requires_python": null, "size": 7358, "upload_time": "2019-12-09T18:17:17", "upload_time_iso_8601": "2019-12-09T18:17:17.436405Z", "url": "https://files.pythonhosted.org/packages/42/d9/5d51fb9ef82c0040699c167e729323f2cb8a193bd7b18d1a80358589ea49/pelican_frontmark-1.2.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:56:40 2020"}