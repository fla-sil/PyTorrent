{"info": {"author": "Akinon", "author_email": "dev@akinon.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Django Whisperer\n\n[![Build status](https://img.shields.io/bitbucket/pipelines/akinonteam/dj-whisperer)](https://bitbucket.org/akinonteam/dj-whisperer/addon/pipelines/home)\n[![Documentation status](https://readthedocs.org/projects/dj-whisperer/badge/?version=latest)](https://dj-whisperer.readthedocs.io/en/latest/?badge=latest)\n![PyPI](https://img.shields.io/pypi/v/dj-whisperer)\n![PyPI - Django version](https://img.shields.io/pypi/djversions/dj-whisperer)\n![PyPI - Python version](https://img.shields.io/pypi/pyversions/dj-whisperer)\n![PyPI - License](https://img.shields.io/pypi/l/dj-whisperer)\n\nWhisperer informs subscribed users via an URL when a specific event occurs.\n\n## Installation\n\nInstallation using pip:\n\n```\npip install dj-whisperer\n```\n\n`whisperer` package has to be added to `INSTALLED_APPS` and `migrate` command has to be run.\n\n```python\nINSTALLED_APPS = (\n    # other apps here...\n    'whisperer',\n)\n```\n\n## Sample Scenario\n\nLet's give an example using `Package` model. When an event occurs related to a package, subscribed users are gonna be informed. To do so, firstly which events to subscribe must be determined. In order to learn when a package created:\n\n```python\nfrom django.db.models.signals import post_save\nfrom whisperer.events import WhispererEvent, registry\nfrom whisperer.tasks import deliver_event\n\nclass PackageCreateEvent(WhispererEvent):\n    serializer_class = PackageSerializer\n    event_type = 'package-created'\n\nregistry.register(PackageCreateEvent)\n\n\ndef signal_receiver(instance, created=False, **kwargs):\n    if created:\n        deliver_event(instance, 'package-created')\n\npost_save.connect(signal_receiver, Package)\n```\n\nWhen database transaction succeeds, in short when `transaction.on_commit()`, `deliver_event` must be triggered.\nSubscribed users now can be informed that a package created if they have created a `Webhook`.\n\n```python\nimport requests\n\nrequests.post(\n    url='https://your-app.com/whisperer/hooks/',\n    headers={\n        'Authorization': 'Token <secret-login-token>',\n    },\n    json={\n        'event_type': 'package-created',\n        'secret_key': 'secret',\n        'target_url': 'https://example.com/',\n    }\n)\n```\n\nWhen a package created, `uuid`, `type` & `data` passed through `PackageSerializer` will be posted to https://example.com/.\n\n```python\nimport requests\n\nrequests.post(\n    url='https://example.com/',\n    headers={\n        'Content-Type': 'application/json',\n        'X-Whisperer-Event': 'package-created',\n    },\n    json={\n        'event': {\n            'type': 'package-created',\n            'uuid': 'da81e85139824c6187dd1e58a7d3f971',\n        },\n        'data': {\n            'id': 61,\n            'transfer_id': 49,\n            'order_number': '248398923123',\n            '.....': '......',\n        }\n    }\n)\n```\n\nIn order to cancel the subscription:\n\n```python\nimport requests\n\nrequests.delete(\n    url='https://your-app.com/whisperer/hooks/<webhook-id>/',\n    headers={\n        'Authorization': 'Token <secret-login-token>',\n    }\n)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/akinonteam/dj-whisperer", "keywords": "", "license": "MIT", "maintainer": "Akinon", "maintainer_email": "dev@akinon.com", "name": "dj-whisperer", "package_url": "https://pypi.org/project/dj-whisperer/", "platform": "any", "project_url": "https://pypi.org/project/dj-whisperer/", "project_urls": {"Documentation": "https://dj-whisperer.readthedocs.io", "Homepage": "https://bitbucket.org/akinonteam/dj-whisperer", "Source Code": "https://bitbucket.org/akinonteam/dj-whisperer"}, "release_url": "https://pypi.org/project/dj-whisperer/0.1/", "requires_dist": null, "requires_python": "", "summary": "Stay informed of it", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django Whisperer</h1>\n<p><a href=\"https://bitbucket.org/akinonteam/dj-whisperer/addon/pipelines/home\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/156b5ec66dd1926a927b3189d238d19012c31f25/68747470733a2f2f696d672e736869656c64732e696f2f6269746275636b65742f706970656c696e65732f616b696e6f6e7465616d2f646a2d776869737065726572\"></a>\n<a href=\"https://dj-whisperer.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53f9d049ac35114d34e24f6283a5f9128238d33c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646a2d7768697370657265722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94397d7f2284946df8be630da6576563fd89c984/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a2d776869737065726572\">\n<img alt=\"PyPI - Django version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e097336f2d09bd290245b06557bb1bc0f4b03e0f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646a76657273696f6e732f646a2d776869737065726572\">\n<img alt=\"PyPI - Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1c35f6b30e6380d8343bc9f41beb7eb45cd93ce/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a2d776869737065726572\">\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f4c79e65fcdd44373dfc2a4cb2d9ea2f94ad6af3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a2d776869737065726572\"></p>\n<p>Whisperer informs subscribed users via an URL when a specific event occurs.</p>\n<h2>Installation</h2>\n<p>Installation using pip:</p>\n<pre><code>pip install dj-whisperer\n</code></pre>\n<p><code>whisperer</code> package has to be added to <code>INSTALLED_APPS</code> and <code>migrate</code> command has to be run.</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># other apps here...</span>\n    <span class=\"s1\">'whisperer'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Sample Scenario</h2>\n<p>Let's give an example using <code>Package</code> model. When an event occurs related to a package, subscribed users are gonna be informed. To do so, firstly which events to subscribe must be determined. In order to learn when a package created:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db.models.signals</span> <span class=\"kn\">import</span> <span class=\"n\">post_save</span>\n<span class=\"kn\">from</span> <span class=\"nn\">whisperer.events</span> <span class=\"kn\">import</span> <span class=\"n\">WhispererEvent</span><span class=\"p\">,</span> <span class=\"n\">registry</span>\n<span class=\"kn\">from</span> <span class=\"nn\">whisperer.tasks</span> <span class=\"kn\">import</span> <span class=\"n\">deliver_event</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PackageCreateEvent</span><span class=\"p\">(</span><span class=\"n\">WhispererEvent</span><span class=\"p\">):</span>\n    <span class=\"n\">serializer_class</span> <span class=\"o\">=</span> <span class=\"n\">PackageSerializer</span>\n    <span class=\"n\">event_type</span> <span class=\"o\">=</span> <span class=\"s1\">'package-created'</span>\n\n<span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">PackageCreateEvent</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">signal_receiver</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"n\">created</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">created</span><span class=\"p\">:</span>\n        <span class=\"n\">deliver_event</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"s1\">'package-created'</span><span class=\"p\">)</span>\n\n<span class=\"n\">post_save</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">signal_receiver</span><span class=\"p\">,</span> <span class=\"n\">Package</span><span class=\"p\">)</span>\n</pre>\n<p>When database transaction succeeds, in short when <code>transaction.on_commit()</code>, <code>deliver_event</code> must be triggered.\nSubscribed users now can be informed that a package created if they have created a <code>Webhook</code>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'https://your-app.com/whisperer/hooks/'</span><span class=\"p\">,</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'Authorization'</span><span class=\"p\">:</span> <span class=\"s1\">'Token &lt;secret-login-token&gt;'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'event_type'</span><span class=\"p\">:</span> <span class=\"s1\">'package-created'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'secret_key'</span><span class=\"p\">:</span> <span class=\"s1\">'secret'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'target_url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://example.com/'</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>When a package created, <code>uuid</code>, <code>type</code> &amp; <code>data</code> passed through <code>PackageSerializer</code> will be posted to <a href=\"https://example.com/\" rel=\"nofollow\">https://example.com/</a>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'https://example.com/'</span><span class=\"p\">,</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'application/json'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'X-Whisperer-Event'</span><span class=\"p\">:</span> <span class=\"s1\">'package-created'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'event'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'package-created'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'uuid'</span><span class=\"p\">:</span> <span class=\"s1\">'da81e85139824c6187dd1e58a7d3f971'</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">61</span><span class=\"p\">,</span>\n            <span class=\"s1\">'transfer_id'</span><span class=\"p\">:</span> <span class=\"mi\">49</span><span class=\"p\">,</span>\n            <span class=\"s1\">'order_number'</span><span class=\"p\">:</span> <span class=\"s1\">'248398923123'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'.....'</span><span class=\"p\">:</span> <span class=\"s1\">'......'</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>In order to cancel the subscription:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'https://your-app.com/whisperer/hooks/&lt;webhook-id&gt;/'</span><span class=\"p\">,</span>\n    <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'Authorization'</span><span class=\"p\">:</span> <span class=\"s1\">'Token &lt;secret-login-token&gt;'</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7038954, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b61faa0f51553831aa82a6228f969e68", "sha256": "ec1071b500d8def22a1ea09a2f8949839bf1eedbe0d3e1aad56475d9e2ae28c2"}, "downloads": -1, "filename": "dj_whisperer-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b61faa0f51553831aa82a6228f969e68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13444, "upload_time": "2020-04-17T09:31:16", "upload_time_iso_8601": "2020-04-17T09:31:16.959231Z", "url": "https://files.pythonhosted.org/packages/d7/0e/041a1ca84b49478bb76d11af9b72709f92a69263833b9ef903aeda78c711/dj_whisperer-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc5ec14eca089b6a200767778dbca29d", "sha256": "41ae2da3ee9c47b5b1f7dfdc38b12770256357d05756853219962713b34dadad"}, "downloads": -1, "filename": "dj-whisperer-0.1.tar.gz", "has_sig": false, "md5_digest": "fc5ec14eca089b6a200767778dbca29d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15360, "upload_time": "2020-04-17T09:31:18", "upload_time_iso_8601": "2020-04-17T09:31:18.264451Z", "url": "https://files.pythonhosted.org/packages/fc/c7/5aea51493a31655a71797b02bd7edd5c735a31e52e334d199cb13b6bdb47/dj-whisperer-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b61faa0f51553831aa82a6228f969e68", "sha256": "ec1071b500d8def22a1ea09a2f8949839bf1eedbe0d3e1aad56475d9e2ae28c2"}, "downloads": -1, "filename": "dj_whisperer-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b61faa0f51553831aa82a6228f969e68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13444, "upload_time": "2020-04-17T09:31:16", "upload_time_iso_8601": "2020-04-17T09:31:16.959231Z", "url": "https://files.pythonhosted.org/packages/d7/0e/041a1ca84b49478bb76d11af9b72709f92a69263833b9ef903aeda78c711/dj_whisperer-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc5ec14eca089b6a200767778dbca29d", "sha256": "41ae2da3ee9c47b5b1f7dfdc38b12770256357d05756853219962713b34dadad"}, "downloads": -1, "filename": "dj-whisperer-0.1.tar.gz", "has_sig": false, "md5_digest": "fc5ec14eca089b6a200767778dbca29d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15360, "upload_time": "2020-04-17T09:31:18", "upload_time_iso_8601": "2020-04-17T09:31:18.264451Z", "url": "https://files.pythonhosted.org/packages/fc/c7/5aea51493a31655a71797b02bd7edd5c735a31e52e334d199cb13b6bdb47/dj-whisperer-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:24 2020"}