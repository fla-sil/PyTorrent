{"info": {"author": "Lee Solway", "author_email": "lee@digitalanvil.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "djangocms-masonry\n=================\n\n**djangocms-masonry** is a reuseable plugin for `django-cms` that\nimplements the JavaScript Masonry library.\n\nDependencies\n------------\n\n-  Djangocms>=3.0\n-  Django>=1.6\n\nInstallation\n------------\n\nInstall djangocms-masonry from Pypi.\n\n.. code:: python\n\n    pip install djangocms-masonry\n\nAdd Djangocms\\_masonry to INSTALLED\\_APPS\n\n.. code:: python\n\n    INSTALLED_APPS = (\n        ...\n        'djangocms_masonry',\n        ...\n    )\n\nDjango 1.6 and/or South users will need to add the following to ensure\nmigration compatibility.\n\n.. code:: python\n\n    SOUTH_MIGRATION_MODULES = {\n        ...\n        'djangocms_masonry': 'djangocms_masonry.south_migrations',\n        ...\n    }\n\nConfiguration\n-------------\n\nCSS classes can be added to the plugin via a select box by using the\n**DJANGOCMS\\_MASONRY\\_STYLES** settings tuple.\n\n.. code:: python\n\n    DJANGOCMS_MASONRY_STYLES = (\n        ('style1', 'Style 1'),\n        ('style2', 'Style 2'),\n    )\n\ndjangocms\\_masonry/default.html is rendered by default. The user can select\ncustom templates if the following tuple is set as the example below\ndemonstrates.\n\n.. code:: python\n\n    DJANGOCMS_MASONRY_TEMPLATES = (\n        ('template1', 'Template 1'),\n        ('template2', 'Template 2'),\n    )\n\n\nRestrict the plugins available to Masonry Carousel\n\n.. code:: python\n\n    DJANGOCMS_MASONRY_CHILD_CLASSES = (\n        'PicturePlugin',\n    )\n\nInclude or exclude static files\n\n.. code:: python\n\n    DJANGOCMS_MASONRY_INCLUDE_JS_MASONRY = True\n\n\nTemplates\n---------\n\nbase.html includes all the JavaScript and CSS needed to run the masonry plugin, but it does not render the HTML.\nCustom templates can extend base.html as long as they define a plugin block containing the html and plugin render code as show in the below example.\n\n.. code:: html\n\n    {% extends 'djangocms_masonry/base.html' %}\n    {% load cms_tags %}\n\n    {% block plugin %}\n      <div class=\"masonry-plugin plugin{% if style %} {{ style }}{% endif %}\" id=\"plugin-{{ instance.pk }}\">\n        <div class=\"row\">\n          <div class=\"small-12 columns\">\n\n            <div class=\"masonry-grid\">\n              <div class=\"grid-sizer\"></div>\n              <div class=\"gutter-sizer\"></div>\n              {% for plugin in instance.child_plugin_instances %}\n                <div class=\"grid-item\">\n                  {% render_plugin plugin %}\n                </div>\n              {% endfor %}\n            </div>\n\n          </div>\n        </div>\n      </div>\n    {% endblock plugin %}\n\nContributions\n-------------\n\n-  Lee Solway\n\nHistory\n-------\n\n**0.1.0** (2015-07-24)\n\n- First release on PyPI", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/digital-anvil/djangocms-masonry", "keywords": "djangocms-masonry", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "djangocms-masonry", "package_url": "https://pypi.org/project/djangocms-masonry/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djangocms-masonry/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/digital-anvil/djangocms-masonry"}, "release_url": "https://pypi.org/project/djangocms-masonry/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Djangocms plugin for masonry", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>djangocms-masonry</strong> is a reuseable plugin for <cite>django-cms</cite> that\nimplements the JavaScript Masonry library.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Djangocms&gt;=3.0</li>\n<li>Django&gt;=1.6</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install djangocms-masonry from Pypi.</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">djangocms</span><span class=\"o\">-</span><span class=\"n\">masonry</span>\n</pre>\n<p>Add Djangocms_masonry to INSTALLED_APPS</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'djangocms_masonry'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Django 1.6 and/or South users will need to add the following to ensure\nmigration compatibility.</p>\n<pre><span class=\"n\">SOUTH_MIGRATION_MODULES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'djangocms_masonry'</span><span class=\"p\">:</span> <span class=\"s1\">'djangocms_masonry.south_migrations'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>CSS classes can be added to the plugin via a select box by using the\n<strong>DJANGOCMS_MASONRY_STYLES</strong> settings tuple.</p>\n<pre><span class=\"n\">DJANGOCMS_MASONRY_STYLES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"s1\">'style1'</span><span class=\"p\">,</span> <span class=\"s1\">'Style 1'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'style2'</span><span class=\"p\">,</span> <span class=\"s1\">'Style 2'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>djangocms_masonry/default.html is rendered by default. The user can select\ncustom templates if the following tuple is set as the example below\ndemonstrates.</p>\n<pre><span class=\"n\">DJANGOCMS_MASONRY_TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"s1\">'template1'</span><span class=\"p\">,</span> <span class=\"s1\">'Template 1'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'template2'</span><span class=\"p\">,</span> <span class=\"s1\">'Template 2'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Restrict the plugins available to Masonry Carousel</p>\n<pre><span class=\"n\">DJANGOCMS_MASONRY_CHILD_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'PicturePlugin'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Include or exclude static files</p>\n<pre><span class=\"n\">DJANGOCMS_MASONRY_INCLUDE_JS_MASONRY</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"templates\">\n<h2>Templates</h2>\n<p>base.html includes all the JavaScript and CSS needed to run the masonry plugin, but it does not render the HTML.\nCustom templates can extend base.html as long as they define a plugin block containing the html and plugin render code as show in the below example.</p>\n<pre>{% extends 'djangocms_masonry/base.html' %}\n{% load cms_tags %}\n\n{% block plugin %}\n  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"masonry-plugin plugin{% if style %} {{ style }}{% endif %}\"</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"plugin-{{ instance.pk }}\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"row\"</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"small-12 columns\"</span><span class=\"p\">&gt;</span>\n\n        <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"masonry-grid\"</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"grid-sizer\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"gutter-sizer\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n          {% for plugin in instance.child_plugin_instances %}\n            <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"grid-item\"</span><span class=\"p\">&gt;</span>\n              {% render_plugin plugin %}\n            <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n          {% endfor %}\n        <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n{% endblock plugin %}\n</pre>\n</div>\n<div id=\"contributions\">\n<h2>Contributions</h2>\n<ul>\n<li>Lee Solway</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<p><strong>0.1.0</strong> (2015-07-24)</p>\n<ul>\n<li>First release on PyPI</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1648862, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "94a5c335eba1eb8df3158eca18a261f9", "sha256": "84e7c31b910c0f22ae0f1fa7dc3a8fb84acc2d5819f084b7db3528aaa2ff09d3"}, "downloads": -1, "filename": "djangocms-masonry-0.1.0.tar.gz", "has_sig": false, "md5_digest": "94a5c335eba1eb8df3158eca18a261f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41139, "upload_time": "2015-07-24T22:37:00", "upload_time_iso_8601": "2015-07-24T22:37:00.689968Z", "url": "https://files.pythonhosted.org/packages/d9/97/444897723b6db094905ef1f34a658ec90e464bc4e73b66b7b0090b149c14/djangocms-masonry-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "94a5c335eba1eb8df3158eca18a261f9", "sha256": "84e7c31b910c0f22ae0f1fa7dc3a8fb84acc2d5819f084b7db3528aaa2ff09d3"}, "downloads": -1, "filename": "djangocms-masonry-0.1.0.tar.gz", "has_sig": false, "md5_digest": "94a5c335eba1eb8df3158eca18a261f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41139, "upload_time": "2015-07-24T22:37:00", "upload_time_iso_8601": "2015-07-24T22:37:00.689968Z", "url": "https://files.pythonhosted.org/packages/d9/97/444897723b6db094905ef1f34a658ec90e464bc4e73b66b7b0090b149c14/djangocms-masonry-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:02 2020"}