{"info": {"author": "Preset Inc.", "author_email": "daniel@preset.io", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# ElasticSearch DBAPI\n\n[![Build Status](https://travis-ci.org/preset-io/elasticsearch-dbapi.svg?branch=master)](https://travis-ci.org/preset-io/elasticsearch-dbapi)\n[![PyPI version](https://badge.fury.io/py/elasticsearch-dbapi.svg)](https://badge.fury.io/py/elasticsearch-dbapi)\n[![Coverage Status](https://codecov.io/github/preset-io/elasticsearch-dbapi/coverage.svg?branch=master)](https://codecov.io/github/preset-io/elasticsearch-dbapi)\n\n\n`elasticsearch-dbapi` Implements a DBAPI (PEP-249) and SQLAlchemy dialect, \nthat enables SQL access on elasticsearch clusters for query only access. \nUses Elastic X-Pack [SQL API](https://www.elastic.co/guide/en/elasticsearch/reference/current/xpack-sql.html)\n\nWe are currently building support for `opendistro/_sql` API for AWS ES\n\nThis library supports Elasticsearch 7.X versions.\n\n### Installation\n\n```bash\n$ pip install elasticsearch-dbapi\n```  \n\nTo install support for AWS ES:\n\n```bash\n$ pip install elasticsearch-dbapi[aws]\n```  \n\n### Usage:\n\n#### Using DBAPI:\n\n```python\nfrom es.elastic.api import connect\n\nconn = connect(host='localhost')\ncurs = conn.cursor()\ncurs.execute(\n    \"select * from flights LIMIT 10\"\n)\nprint([row for row in curs])\n```\n\n#### Using SQLAlchemy execute:\n\n```python\nfrom sqlalchemy.engine import create_engine\n\nengine = create_engine(\"elasticsearch+http://localhost:9200/\")\nrows = engine.connect().execute(\n    \"select * from flights LIMIT 10\"\n)\nprint([row for row in rows])\n```\n\n#### Using SQLAlchemy:\n\n```python\nfrom sqlalchemy import func, select\nfrom sqlalchemy.engine import create_engine\nfrom sqlalchemy.schema import MetaData, Table\n\n\nengine = create_engine(\"elasticsearch+http://localhost:9200/\")\nlogs = Table(\"flights\", MetaData(bind=engine), autoload=True)\ncount = select([func.count(\"*\")], from_obj=logs).scalar()\nprint(f\"COUNT: {count}\")\n```\n\n#### Using SQLAlchemy reflection:\n\n```python\n\nfrom sqlalchemy.engine import create_engine\nfrom sqlalchemy.schema import Table, MetaData\n\nengine = create_engine(\"elasticsearch+http://localhost:9200/\")\nlogs = Table(\"flights\", MetaData(bind=engine), autoload=True)\nprint(engine.table_names())\n\nmetadata = MetaData()\nmetadata.reflect(bind=engine)\nprint([table for table in metadata.sorted_tables])\nprint(logs.columns)\n```\n\n#### Connection Parameters:\n\n[elasticsearch-py](https://elasticsearch-py.readthedocs.io/en/master/index.html)\nis used to establish connections and transport, this is the official\nelastic python library. `Elasticsearch` constructor accepts multiple optional parameters\nthat can be used to properly configure your connection on aspects like security, performance \nand high availability. These optional parameters can be set at the connection string, for\nexample:\n\n ```bash\n    elasticsearch+http://localhost:9200/?http_compress=True&timeout=100\n```\nwill set transport to use gzip (http_compress) and timeout to 10 seconds.\n\nFor more information on configuration options, look at `elasticsearch-py`\u2019s documentation:\n- [Transport Options](https://elasticsearch-py.readthedocs.io/en/master/connection.html#transport)\n- [HTTP tranport](https://elasticsearch-py.readthedocs.io/en/master/transports.html#urllib3httpconnection)\n\nThe connection string follows RFC-1738, to support multiple nodes you should use `sniff_*` parameters\n\n### Tests\n\nTo run unittest launch elasticsearch and kibana (kibana is really not required but is a nice to have)\n\n```bash\n$ docker-compose up -d\n$ nosetests -v\n```\n\n### Special case for sql opendistro endpoint (AWS ES)\n\nAWS ES exposes the opendistro SQL plugin, and it follows a different SQL dialect. \nBecause of dialect and API response differences, we provide limited support for opendistro SQL \non this package using the `odelasticsearch` driver:\n\n```python\nfrom sqlalchemy.engine import create_engine\n\nengine = create_engine(\n    \"odelasticsearch+https://search-SOME-CLUSTER.us-west-2.es.amazonaws.com:443/\"\n)\nrows = engine.connect().execute(\n    \"select count(*), Carrier from flights GROUP BY Carrier\"\n)\nprint([row for row in rows])\n```\n\n### Known limitations\n\nThis library does not yet support the following features:\n\n- Array type columns are not supported. Elaticsearch SQL does not support them either. \nSQLAlchemy `get_columns` will exclude them.\n- `object` and `nested` column types are not well supported and are converted to strings\n- Indexes that whose name start with `.`\n- GEO points are not currently well-supported and are converted to strings\n- Very limited support for AWS ES, no AWS Auth yet for example\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/preset-io/elasticsearch-dbapi/releases/tag/0.1.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://preset.io", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "elasticsearch-dbapi", "package_url": "https://pypi.org/project/elasticsearch-dbapi/", "platform": "", "project_url": "https://pypi.org/project/elasticsearch-dbapi/", "project_urls": {"Download": "https://github.com/preset-io/elasticsearch-dbapi/releases/tag/0.1.2", "Homepage": "http://preset.io"}, "release_url": "https://pypi.org/project/elasticsearch-dbapi/0.1.2/", "requires_dist": ["elasticsearch (>7)", "sqlalchemy", "requests-aws4auth ; extra == 'opendistro'"], "requires_python": "", "summary": "A DBAPI and SQLAlchemy dialect for Elasticsearch", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ElasticSearch DBAPI</h1>\n<p><a href=\"https://travis-ci.org/preset-io/elasticsearch-dbapi\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7881626c8d27f8c1f1608c009584d68f0a33021/68747470733a2f2f7472617669732d63692e6f72672f7072657365742d696f2f656c61737469637365617263682d64626170692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/elasticsearch-dbapi\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c9f00237390031c640f76f66de8bd52b1db412a/68747470733a2f2f62616467652e667572792e696f2f70792f656c61737469637365617263682d64626170692e737667\"></a>\n<a href=\"https://codecov.io/github/preset-io/elasticsearch-dbapi\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/495ab9a3056a26d28fdf8a4c58c3f63fef21bb6e/68747470733a2f2f636f6465636f762e696f2f6769746875622f7072657365742d696f2f656c61737469637365617263682d64626170692f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><code>elasticsearch-dbapi</code> Implements a DBAPI (PEP-249) and SQLAlchemy dialect,\nthat enables SQL access on elasticsearch clusters for query only access.\nUses Elastic X-Pack <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/xpack-sql.html\" rel=\"nofollow\">SQL API</a></p>\n<p>We are currently building support for <code>opendistro/_sql</code> API for AWS ES</p>\n<p>This library supports Elasticsearch 7.X versions.</p>\n<h3>Installation</h3>\n<pre>$ pip install elasticsearch-dbapi\n</pre>\n<p>To install support for AWS ES:</p>\n<pre>$ pip install elasticsearch-dbapi<span class=\"o\">[</span>aws<span class=\"o\">]</span>\n</pre>\n<h3>Usage:</h3>\n<h4>Using DBAPI:</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">es.elastic.api</span> <span class=\"kn\">import</span> <span class=\"n\">connect</span>\n\n<span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">)</span>\n<span class=\"n\">curs</span> <span class=\"o\">=</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span>\n<span class=\"n\">curs</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"select * from flights LIMIT 10\"</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"n\">row</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">curs</span><span class=\"p\">])</span>\n</pre>\n<h4>Using SQLAlchemy execute:</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.engine</span> <span class=\"kn\">import</span> <span class=\"n\">create_engine</span>\n\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"s2\">\"elasticsearch+http://localhost:9200/\"</span><span class=\"p\">)</span>\n<span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"select * from flights LIMIT 10\"</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"n\">row</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">rows</span><span class=\"p\">])</span>\n</pre>\n<h4>Using SQLAlchemy:</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">select</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.engine</span> <span class=\"kn\">import</span> <span class=\"n\">create_engine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.schema</span> <span class=\"kn\">import</span> <span class=\"n\">MetaData</span><span class=\"p\">,</span> <span class=\"n\">Table</span>\n\n\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"s2\">\"elasticsearch+http://localhost:9200/\"</span><span class=\"p\">)</span>\n<span class=\"n\">logs</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s2\">\"flights\"</span><span class=\"p\">,</span> <span class=\"n\">MetaData</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">),</span> <span class=\"n\">autoload</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">select</span><span class=\"p\">([</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s2\">\"*\"</span><span class=\"p\">)],</span> <span class=\"n\">from_obj</span><span class=\"o\">=</span><span class=\"n\">logs</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">scalar</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"COUNT: </span><span class=\"si\">{</span><span class=\"n\">count</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<h4>Using SQLAlchemy reflection:</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.engine</span> <span class=\"kn\">import</span> <span class=\"n\">create_engine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.schema</span> <span class=\"kn\">import</span> <span class=\"n\">Table</span><span class=\"p\">,</span> <span class=\"n\">MetaData</span>\n\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"s2\">\"elasticsearch+http://localhost:9200/\"</span><span class=\"p\">)</span>\n<span class=\"n\">logs</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s2\">\"flights\"</span><span class=\"p\">,</span> <span class=\"n\">MetaData</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">),</span> <span class=\"n\">autoload</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">table_names</span><span class=\"p\">())</span>\n\n<span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">MetaData</span><span class=\"p\">()</span>\n<span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">reflect</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"n\">table</span> <span class=\"k\">for</span> <span class=\"n\">table</span> <span class=\"ow\">in</span> <span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">sorted_tables</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">logs</span><span class=\"o\">.</span><span class=\"n\">columns</span><span class=\"p\">)</span>\n</pre>\n<h4>Connection Parameters:</h4>\n<p><a href=\"https://elasticsearch-py.readthedocs.io/en/master/index.html\" rel=\"nofollow\">elasticsearch-py</a>\nis used to establish connections and transport, this is the official\nelastic python library. <code>Elasticsearch</code> constructor accepts multiple optional parameters\nthat can be used to properly configure your connection on aspects like security, performance\nand high availability. These optional parameters can be set at the connection string, for\nexample:</p>\n<pre>   elasticsearch+http://localhost:9200/?http_compress<span class=\"o\">=</span>True<span class=\"p\">&amp;</span><span class=\"nv\">timeout</span><span class=\"o\">=</span><span class=\"m\">100</span>\n</pre>\n<p>will set transport to use gzip (http_compress) and timeout to 10 seconds.</p>\n<p>For more information on configuration options, look at <code>elasticsearch-py</code>\u2019s documentation:</p>\n<ul>\n<li><a href=\"https://elasticsearch-py.readthedocs.io/en/master/connection.html#transport\" rel=\"nofollow\">Transport Options</a></li>\n<li><a href=\"https://elasticsearch-py.readthedocs.io/en/master/transports.html#urllib3httpconnection\" rel=\"nofollow\">HTTP tranport</a></li>\n</ul>\n<p>The connection string follows RFC-1738, to support multiple nodes you should use <code>sniff_*</code> parameters</p>\n<h3>Tests</h3>\n<p>To run unittest launch elasticsearch and kibana (kibana is really not required but is a nice to have)</p>\n<pre>$ docker-compose up -d\n$ nosetests -v\n</pre>\n<h3>Special case for sql opendistro endpoint (AWS ES)</h3>\n<p>AWS ES exposes the opendistro SQL plugin, and it follows a different SQL dialect.\nBecause of dialect and API response differences, we provide limited support for opendistro SQL\non this package using the <code>odelasticsearch</code> driver:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.engine</span> <span class=\"kn\">import</span> <span class=\"n\">create_engine</span>\n\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"odelasticsearch+https://search-SOME-CLUSTER.us-west-2.es.amazonaws.com:443/\"</span>\n<span class=\"p\">)</span>\n<span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"n\">engine</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"select count(*), Carrier from flights GROUP BY Carrier\"</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">([</span><span class=\"n\">row</span> <span class=\"k\">for</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">rows</span><span class=\"p\">])</span>\n</pre>\n<h3>Known limitations</h3>\n<p>This library does not yet support the following features:</p>\n<ul>\n<li>Array type columns are not supported. Elaticsearch SQL does not support them either.\nSQLAlchemy <code>get_columns</code> will exclude them.</li>\n<li><code>object</code> and <code>nested</code> column types are not well supported and are converted to strings</li>\n<li>Indexes that whose name start with <code>.</code></li>\n<li>GEO points are not currently well-supported and are converted to strings</li>\n<li>Very limited support for AWS ES, no AWS Auth yet for example</li>\n</ul>\n\n          </div>"}, "last_serial": 6872414, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "222560817789d66b4898ffd2bbd1bd0f", "sha256": "58c348aac29798533282615214e5035a0f3473a4a60e2362aea7201de135f1fd"}, "downloads": -1, "filename": "elasticsearch_dbapi-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "222560817789d66b4898ffd2bbd1bd0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 80966, "upload_time": "2019-10-24T11:41:03", "upload_time_iso_8601": "2019-10-24T11:41:03.610403Z", "url": "https://files.pythonhosted.org/packages/06/04/6e1b5587bb4b0c098cbfa660f6b9445573f86d32e43b4e29e378a112d537/elasticsearch_dbapi-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed801a534ef24f18b9290000afd1b42c", "sha256": "6a88f544babd5e1de3b9356c0008dc9440ed3520153a776283f542a7db2ea6cf"}, "downloads": -1, "filename": "elasticsearch-dbapi-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ed801a534ef24f18b9290000afd1b42c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48149, "upload_time": "2019-10-24T11:41:06", "upload_time_iso_8601": "2019-10-24T11:41:06.634567Z", "url": "https://files.pythonhosted.org/packages/d1/76/235484ca0c5fac33b9b69b2e63cb107a8b73fb1d115f36af1d244a363301/elasticsearch-dbapi-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "615be532303d9f161d8f97c4f73de11c", "sha256": "33449afaf0850a9509883b59a6639a996f7f83d5113261ec4cea6bce531a8a37"}, "downloads": -1, "filename": "elasticsearch_dbapi-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "615be532303d9f161d8f97c4f73de11c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 83560, "upload_time": "2020-03-16T14:37:37", "upload_time_iso_8601": "2020-03-16T14:37:37.953736Z", "url": "https://files.pythonhosted.org/packages/8d/9a/ac886ac91d9855bd6f8b0e226e6fb017adc3df7fecf1f86b36c902aea555/elasticsearch_dbapi-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26e4023c2e8e41cca5dec9c482393e37", "sha256": "1666d44391449b38c5733fcf5c116ae11b3accadf237a428447e6123044e8e8f"}, "downloads": -1, "filename": "elasticsearch-dbapi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "26e4023c2e8e41cca5dec9c482393e37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32643, "upload_time": "2020-03-16T14:37:39", "upload_time_iso_8601": "2020-03-16T14:37:39.336280Z", "url": "https://files.pythonhosted.org/packages/0d/a2/2f15ba72844ab5cd7a7f2a23e4f2cc1e55108e40f9ac46d4742536785bfc/elasticsearch-dbapi-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "38a9cc0819da2012a0af5fff1ac97dcf", "sha256": "650bf18b5f343b6833d1e3bde827a1c80d4012169aac26e619816e9bf92d8df7"}, "downloads": -1, "filename": "elasticsearch_dbapi-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "38a9cc0819da2012a0af5fff1ac97dcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 83567, "upload_time": "2020-03-24T11:30:53", "upload_time_iso_8601": "2020-03-24T11:30:53.805011Z", "url": "https://files.pythonhosted.org/packages/12/fd/2938ac2c83466efec5044715bdc36584007e1a3731ebe7219899aecb9426/elasticsearch_dbapi-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a35c28b884d624d1b4b0f59dab08f5ca", "sha256": "67ad31468f645fa0298bc29ff5c75dfcc90007bce0966c0e18b66814242147b7"}, "downloads": -1, "filename": "elasticsearch-dbapi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a35c28b884d624d1b4b0f59dab08f5ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42271, "upload_time": "2020-03-24T11:30:55", "upload_time_iso_8601": "2020-03-24T11:30:55.643325Z", "url": "https://files.pythonhosted.org/packages/18/af/eb397f9b1cd28ca7587925bcf4f86a9358ef42a0cb7cf8e9e1d6e7d04b11/elasticsearch-dbapi-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38a9cc0819da2012a0af5fff1ac97dcf", "sha256": "650bf18b5f343b6833d1e3bde827a1c80d4012169aac26e619816e9bf92d8df7"}, "downloads": -1, "filename": "elasticsearch_dbapi-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "38a9cc0819da2012a0af5fff1ac97dcf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 83567, "upload_time": "2020-03-24T11:30:53", "upload_time_iso_8601": "2020-03-24T11:30:53.805011Z", "url": "https://files.pythonhosted.org/packages/12/fd/2938ac2c83466efec5044715bdc36584007e1a3731ebe7219899aecb9426/elasticsearch_dbapi-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a35c28b884d624d1b4b0f59dab08f5ca", "sha256": "67ad31468f645fa0298bc29ff5c75dfcc90007bce0966c0e18b66814242147b7"}, "downloads": -1, "filename": "elasticsearch-dbapi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a35c28b884d624d1b4b0f59dab08f5ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42271, "upload_time": "2020-03-24T11:30:55", "upload_time_iso_8601": "2020-03-24T11:30:55.643325Z", "url": "https://files.pythonhosted.org/packages/18/af/eb397f9b1cd28ca7587925bcf4f86a9358ef42a0cb7cf8e9e1d6e7d04b11/elasticsearch-dbapi-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:01 2020"}