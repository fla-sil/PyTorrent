{"info": {"author": "Jose Borreguero", "author_email": "jose@borreguero.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Physics"], "description": "dsfinterp\n=========\n\nSummary\n=======\nCubic Spline Interpolationf of Dynamics Structure Factors S(Q,E,f) as a function of a parameter \"f\".\n\nDetails\n=======\n\nGiven a discrete series of Dynamics Structure Factors S_i(Q,E) that\ndepends on an extra parameter \"f\", S_i(Q,E) = S(Q,E,f_i), construct\nand object that returns S(Q,E) for any value of f in the range \n[min({f_i} }, max( {f_i} )].\n\nParameter \"f\" can be an environment variable such as Temperature or an\n\"internal\" parameter, such as a component of a force-field.\n\nThis interpolator is geared towards determination of S(Q,E,f) using a\nseries { S_i(Q,E) } computed from molecular dynamics simulations,\nalthough the series could be generated from experiments, too.\n\nIf the { S_i(Q,E) } do not have associated errors, as it is the case\nwhen computed from simulations, an error will be estimated by a\nrunning regression of the S_i(Q,E) versus f. Thus, the object will\nreturn S(Q,E) and and associated error(Q,E) any value of f in the\nallowed range.", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/dsfinterp", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/camm-sns/dsfinterp", "keywords": "AMBER,mdend,energy,molecular dynamics", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "dsfinterp", "package_url": "https://pypi.org/project/dsfinterp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dsfinterp/", "project_urls": {"Download": "http://pypi.python.org/pypi/dsfinterp", "Homepage": "https://github.com/camm-sns/dsfinterp"}, "release_url": "https://pypi.org/project/dsfinterp/0.1/", "requires_dist": null, "requires_python": null, "summary": "Cubic Spline Interpolation of Dynamics Structure Factors", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"dsfinterp\">\n<h2>dsfinterp</h2>\n</div>\n<div id=\"summary\">\n<h2>Summary</h2>\n<p>Cubic Spline Interpolationf of Dynamics Structure Factors S(Q,E,f) as a function of a parameter \u201cf\u201d.</p>\n</div>\n<div id=\"details\">\n<h2>Details</h2>\n<p>Given a discrete series of Dynamics Structure Factors S_i(Q,E) that\ndepends on an extra parameter \u201cf\u201d, S_i(Q,E) = S(Q,E,f_i), construct\nand object that returns S(Q,E) for any value of f in the range\n[min({f_i} }, max( {f_i} )].</p>\n<p>Parameter \u201cf\u201d can be an environment variable such as Temperature or an\n\u201cinternal\u201d parameter, such as a component of a force-field.</p>\n<p>This interpolator is geared towards determination of S(Q,E,f) using a\nseries { S_i(Q,E) } computed from molecular dynamics simulations,\nalthough the series could be generated from experiments, too.</p>\n<p>If the { S_i(Q,E) } do not have associated errors, as it is the case\nwhen computed from simulations, an error will be estimated by a\nrunning regression of the S_i(Q,E) versus f. Thus, the object will\nreturn S(Q,E) and and associated error(Q,E) any value of f in the\nallowed range.</p>\n</div>\n\n          </div>"}, "last_serial": 998517, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3637e10b88aca52de9e26f6bdc03aed0", "sha256": "167ce470384f1ee9de29e284dec668a61b0ac53175f1efb323f807baa2e7e108"}, "downloads": -1, "filename": "dsfinterp-0.1.linux-x86_64.exe", "has_sig": false, "md5_digest": "3637e10b88aca52de9e26f6bdc03aed0", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 79286, "upload_time": "2014-02-12T20:22:51", "upload_time_iso_8601": "2014-02-12T20:22:51.065017Z", "url": "https://files.pythonhosted.org/packages/16/85/9fe618e80087970e6493d443878d0eac18e52e1d19c240202433f3989bf4/dsfinterp-0.1.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "8425aff8a75cc68e559e2c01b19f55a5", "sha256": "0f1a47d80a62a917755d3b75eca7d1af10cf8dac2b48cce4ce0c116731fd84ae"}, "downloads": -1, "filename": "dsfinterp-0.1.tar.gz", "has_sig": false, "md5_digest": "8425aff8a75cc68e559e2c01b19f55a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 916063, "upload_time": "2014-02-12T20:13:38", "upload_time_iso_8601": "2014-02-12T20:13:38.824647Z", "url": "https://files.pythonhosted.org/packages/c9/da/e8cea29cfcaea12d1dc6d1abf5eab326b9e5c7506194a5c2b45e56669244/dsfinterp-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3637e10b88aca52de9e26f6bdc03aed0", "sha256": "167ce470384f1ee9de29e284dec668a61b0ac53175f1efb323f807baa2e7e108"}, "downloads": -1, "filename": "dsfinterp-0.1.linux-x86_64.exe", "has_sig": false, "md5_digest": "3637e10b88aca52de9e26f6bdc03aed0", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 79286, "upload_time": "2014-02-12T20:22:51", "upload_time_iso_8601": "2014-02-12T20:22:51.065017Z", "url": "https://files.pythonhosted.org/packages/16/85/9fe618e80087970e6493d443878d0eac18e52e1d19c240202433f3989bf4/dsfinterp-0.1.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "8425aff8a75cc68e559e2c01b19f55a5", "sha256": "0f1a47d80a62a917755d3b75eca7d1af10cf8dac2b48cce4ce0c116731fd84ae"}, "downloads": -1, "filename": "dsfinterp-0.1.tar.gz", "has_sig": false, "md5_digest": "8425aff8a75cc68e559e2c01b19f55a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 916063, "upload_time": "2014-02-12T20:13:38", "upload_time_iso_8601": "2014-02-12T20:13:38.824647Z", "url": "https://files.pythonhosted.org/packages/c9/da/e8cea29cfcaea12d1dc6d1abf5eab326b9e5c7506194a5c2b45e56669244/dsfinterp-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:23 2020"}