{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Physics"], "description": "dynasor\n=======\n\n`dynasor <http://dynasor.materialsmodeling.org/>`_ is a simple tool for\ncalculating total and partial dynamical structure factors as well as current\ncorrelation functions from molecular dynamics (MD) simulations. The main input\nconsists of a trajectory output from a MD simulation, i.e., a file containing\nsnapshots of the particle coordinates and optionally velocities that correspond\nto consecutive, equally spaced points in (simulation) time.\n\ndynasor can by itself read and parse standard ``lammpsdump``-style\ntrajectories.  If ``libgmx`` (a library in the gromacs package) is available,\ndynasor can use it to read gromacs ``xtc``-files.  If VMD is available, dynasor\ncan use VMD's molfileplugin to read other formats (with some limitations) as\nwell.\n\ndynasor is controlled via command line options, provided at command invocation.\nOutput can be written in the form of standard matlab/octave-stype `m`-files\nand/or python pickle-files.\n\n\nDocumentation\n-------------\n\nA full documentation is provided `here\n<http://dynasor.materialsmodeling.org/userguide>`_.\n\n\n\nRequirements\n------------\n\nPython 3.5+, numpy, and a C99-complient C-compiler.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://dynasor.materialsmodeling.org/", "keywords": "", "license": "GPL2+", "maintainer": "The dynasor developers team", "maintainer_email": "dynasor@materialsmodeling.org", "name": "dynasor", "package_url": "https://pypi.org/project/dynasor/", "platform": "unix", "project_url": "https://pypi.org/project/dynasor/", "project_urls": {"Homepage": "http://dynasor.materialsmodeling.org/"}, "release_url": "https://pypi.org/project/dynasor/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "A tool for calculating dynamical structure factors", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://dynasor.materialsmodeling.org/\" rel=\"nofollow\">dynasor</a> is a simple tool for\ncalculating total and partial dynamical structure factors as well as current\ncorrelation functions from molecular dynamics (MD) simulations. The main input\nconsists of a trajectory output from a MD simulation, i.e., a file containing\nsnapshots of the particle coordinates and optionally velocities that correspond\nto consecutive, equally spaced points in (simulation) time.</p>\n<p>dynasor can by itself read and parse standard <tt>lammpsdump</tt>-style\ntrajectories.  If <tt>libgmx</tt> (a library in the gromacs package) is available,\ndynasor can use it to read gromacs <tt>xtc</tt>-files.  If VMD is available, dynasor\ncan use VMD\u2019s molfileplugin to read other formats (with some limitations) as\nwell.</p>\n<p>dynasor is controlled via command line options, provided at command invocation.\nOutput can be written in the form of standard matlab/octave-stype <cite>m</cite>-files\nand/or python pickle-files.</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>A full documentation is provided <a href=\"http://dynasor.materialsmodeling.org/userguide\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Python 3.5+, numpy, and a C99-complient C-compiler.</p>\n</div>\n\n          </div>"}, "last_serial": 3974980, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "71b20081785434d4bd39254805f16c4a", "sha256": "cba64305cd168bb5942e56a1885d23a0d671b244f67c68ae2dbec2ec319e185b"}, "downloads": -1, "filename": "dynasor-0.1.2.tar.gz", "has_sig": false, "md5_digest": "71b20081785434d4bd39254805f16c4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27761, "upload_time": "2018-06-18T21:42:23", "upload_time_iso_8601": "2018-06-18T21:42:23.710316Z", "url": "https://files.pythonhosted.org/packages/c2/cb/c7c26108fbd8db01abee969e5c8c23559cd8214674929ca49ef662158e27/dynasor-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71b20081785434d4bd39254805f16c4a", "sha256": "cba64305cd168bb5942e56a1885d23a0d671b244f67c68ae2dbec2ec319e185b"}, "downloads": -1, "filename": "dynasor-0.1.2.tar.gz", "has_sig": false, "md5_digest": "71b20081785434d4bd39254805f16c4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27761, "upload_time": "2018-06-18T21:42:23", "upload_time_iso_8601": "2018-06-18T21:42:23.710316Z", "url": "https://files.pythonhosted.org/packages/c2/cb/c7c26108fbd8db01abee969e5c8c23559cd8214674929ca49ef662158e27/dynasor-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:39 2020"}