{"info": {"author": "Stefan H. Holek", "author_email": "stefan@epy.co.at", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Framework :: Zope2", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=============\nPloneTestCase\n=============\n---------------------------------------\nIntegration testing framework for Plone\n---------------------------------------\n\nIntroduction\n============\n\nPloneTestCase is a thin layer on top of the ZopeTestCase package. It has\nbeen developed to simplify testing of Plone-based applications and products.\n\nThe PloneTestCase package provides\n----------------------------------\n\n- The function ``installProduct`` to install a Zope product into the\n  test environment.\n\n- The function ``installPackage`` to install a Python package\n  registered via five:registerPackage into the test environment.\n  Requires Zope 2.10.4 or higher.\n\n- The function ``setupPloneSite`` to create a Plone portal in the test db.\n\n  Note: ``setupPloneSite`` accepts an optional ``products`` argument, which\n  allows you to specify a list of products that will be added to the\n  portal using the quickinstaller tool. Since 0.8.2 you can also pass\n  an ``extension_profiles`` argument to import GS extension profiles.\n\n- The class ``PloneTestCase`` of which to derive your test cases.\n\n- The class ``FunctionalTestCase`` of which to derive your test cases\n  for functional unit testing.\n\n- The classes ``Sandboxed`` and ``Functional`` to mix-in with your own\n  test cases.\n\n- The constants ``portal_name``, ``portal_owner``, ``default_policy``,\n  ``default_products``, ``default_base_profile``, ``default_extension_profiles``,\n  ``default_user``, and ``default_password``.\n\n- The constant ``PLONE21`` which evaluates to true for Plone\n  versions >= 2.1.\n\n- The constant ``PLONE25`` which evaluates to true for Plone\n  versions >= 2.5.\n\n- The constant ``PLONE30`` which evaluates to true for Plone\n  versions >= 3.0.\n\n- The constant ``PLONE31`` which evaluates to true for Plone\n  versions >= 3.1.\n\n- The constant ``PLONE32`` which evaluates to true for Plone\n  versions >= 3.2.\n\n- The constant ``PLONE33`` which evaluates to true for Plone\n  versions >= 3.3.\n\n- The constant ``PLONE40`` which evaluates to true for Plone\n  versions >= 4.0.\n\n- The constant ``PLONE50`` which evaluates to true for Plone\n  versions >= 5.0.\n\n- The module ``utils`` which contains all utility functions from the\n  ZopeTestCase package.\n\nExample PloneTestCase\n---------------------\n::\n\n    from Products.PloneTestCase import PloneTestCase\n\n    PloneTestCase.installProduct('SomeProduct')\n    PloneTestCase.setupPloneSite(products=('SomeProduct',))\n\n    class TestSomething(PloneTestCase.PloneTestCase):\n\n        def afterSetup(self):\n            self.folder.invokeFactory('Document', 'doc')\n\n        def testEditDocument(self):\n            self.folder.doc.edit(text_format='plain', text='data')\n            self.assertEqual(self.folder.doc.EditableBody(), 'data')\n\nExample PloneTestCase setup with GenericSetup\n---------------------------------------------\n::\n\n    from Products.PloneTestCase import PloneTestCase\n\n    PloneTestCase.installProduct('SomeProduct')\n    PloneTestCase.setupPloneSite(extension_profiles=('SomeProduct:default',))\n\nPlease see the docs of the ZopeTestCase package, especially those\nof the PortalTestCase class.\n\nLook at the example tests in this directory to get an idea of how\nto use the PloneTestCase package. Also see the tests shipping with\nPlone.\n\nCopy ``testSkeleton.py`` to start your own tests.\n\n\nChangelog\n=========\n\n0.9.18 (2014-03-02)\n-------------------\n\n- Adjust conditionals for Plone 5 instead of 4.4.\n  [davisagli]\n\n\n0.9.17 (2013-05-23)\n-------------------\n\n- Install plone.app.event conditionally and only for Plone 4.4 and up.\n  [thet]\n\n0.9.16 (2013-04-06)\n-------------------\n\n- Fix broken imports, have plone.app.events conditionnaly loaded.\n  [kiorky]\n\n0.9.15 (2012-07-02)\n-------------------\n\n- Modernize some imports.\n  [hannosch]\n\n- Minor pep8 cleanup, changed has_key() synatax to 'in' syntax in\n  a few areas\n  [pbdiode]\n\n0.9.14 (2012-04-15)\n-------------------\n\n- Install packages earlier so test setup for new collections works\n  correctly in Plone 4.2.\n  [davisagli]\n\n- Fail explicitly (instead of obscurely) if there is no Plone.\n  [stefan]\n\n0.9.13 - 2011-01-03\n-------------------\n\n- Depend on ``Products.CMFPlone`` instead of ``Plone``.\n  [elro]\n\n- Relax the test for # of roles slightly for compatibility with Plone 4.1.\n  [davisagli]\n\n0.9.12 - 2010-09-20\n-------------------\n\n- Fix the cleanup method called by safe_load_site to mark the component\n  registry as uninitialized regardless of whether the flag is in\n  Zope2.App.zcml or Products.Five.zcml.\n  [davisagli]\n\n0.9.11 - 2010-09-15\n-------------------\n\n- Install `plone.app.imaging` monkeypatches during test setup.\n  [davisagli]\n\n- Add layer support coming from zope.testrunner and removed from zope.testing\n  [jfroche]\n\n0.9.10 - 2010-07-13\n-------------------\n\n- Make compatible with Zope 2.13 and avoid setup problems with zope.schema\n  vocabularies.\n  [hannosch]\n\n- Revert r100668 as the issue does not occur anymore.\n  [stefan]\n\n0.9.9 - 2009-11-14\n------------------\n\n- Folder created with _createObjectByType was being reported as having\n  portal_type 'ATFolder' in portal_catalog. Reindexing it flips it to the\n  correct 'Folder'.\n  [esteele]\n\n- Reset memoize RAMCaches on tear down.\n  Fixes http://dev.plone.org/plone/ticket/9425\n  [stefan]\n\n- Install blob-enabled types from `plone.app.blob` during test setup.\n  [witsch]\n\n- Install the TinyMCE product during test runs.\n  [hannosch]\n\n- Add the sunburst theme to the default extension profiles for Plone 4.\n  [davisagli]\n\n- Specify dependencies in a backwards compatible way.\n  [hannosch]\n\n- Changed behavior of `default_extension_profiles`. We always add the default\n  profiles now. You can still override this via passing in an explicit empty\n  `default_extension_profiles` argument to the `setupPloneSite` function.\n  [hannosch]\n\n- Disentangle the product installation code for PLONE50 and before. The base\n  amount of packages is quite different.\n  [hannosch]\n\n- Moved the Plone version determination code into its own module.\n  [hannosch]\n\n- Adjusted the PLONE40 constant to be PLONE50 and check for Plone trunk.\n  [hannosch]\n\n- In Plone trunk manually install the ATContentTypes default profile.\n  [hannosch]\n\n0.9.8 - 2009-04-16\n------------------\n\n- Protect against missing portal_quickinstaller tool.\n  [hannosch]\n\n- Fixed deprecation warnings for use of Globals.\n  [hannosch]\n\n- Adjusted _createHomeFolder to create the 'Members' folder if it isn't\n  created by the site creation code.\n  [hannosch]\n\n- Adjusted PLONE40 check after the migrations have been moved out of the\n  CMFPlone package.\n  [hannosch]\n\n- Added PLONE33 constant.\n  [stefan]\n\n0.9.8b4 - 2008-10-26\n--------------------\n\n- Added PLONE32 constant.\n  [stefan]\n\n0.9.8b3 - 2008-10-16\n--------------------\n\n- Bugfix: The default member-area was created before the portal\n  was fully configured.\n  [stefan]\n\n- Bugfix: Reindex security of member-area after taking ownership.\n  [stefan]\n\n0.9.8b2 - 2008-10-09\n--------------------\n\n- Egg was broken due to use of svn export. Who'd have thunk\n  setuptools makes a difference?\n  [stefan]\n\n0.9.8b1 - 2008-10-05\n--------------------\n\n- Install all Plone products quietly.\n- Eggified Products.PloneTestCase.\n\n0.9.7\n-----\n\n- Added PLONE31 and PLONE40 constants.\n- The PloneSite layer can now be set up more than once. Thanks to\n  Andreas Zeidler and Balazs Ree.\n\n0.9.6\n-----\n\n- Deal with new skin setup in CMF 2.1 and up.\n- Provide hasPackage and installPackage if ZopeTestCase supports it.\n- Changed license to GPL, cleaning up my act.\n- Use new stateless GenericSetup API in Plone 3.0 and up.\n\n0.9.4\n-----\n\n- Minor test fixes to cater for changes in PlonePAS and CMF.\n\n0.9.3\n-----\n\n- In 0.9.2 we accidentally lost the ability to override getPortal. Fixed.\n- Spell 'placefulSetup' like 'placefulSetUp' for consistency with\n  zope.app.testing.\n\n0.9.2\n-----\n\n- Improved support for the local component registry. We now register it\n  right after it has been created in Plone >= 3.0, as it is needed during\n  site setup. We also set the portal as a site whenever it is accessed\n  to get CMF skin acquisition to work.\n\n0.9.0\n-----\n\n- Prepared for switching ZopeTestCase to Zope3 interfaces.\n- Load etc/site.zcml lazily instead of using the wrapper.\n- Import extension profiles one by one to gain better control.\n- Added a PloneTestCase.addProfile() method that allows to import\n  extension profiles into the site. This is an alternative to\n  passing the 'extension_profiles' argument to setupPloneSite().\n- Create Plone site lazily using layer.PloneSite.\n- Renamed utils.py to five.py.\n\n0.8.6\n-----\n\n- Starting with Plone 3.0 the portal is a component registry as well. We\n  perform the necessary registration automatically now.\n- Made sure layer cleanup resets Five.zcml to \"not initialized\".\n\n0.8.4\n-----\n\n- Allow to pass a base profile to the setupPloneSite function.\n- Added PLONE30 constant.\n- Made application of StringIO monkey patch conditional, as it is part of\n  CMFPlone/patches starting with Plone 3.0\n- Added a ZCMLLayer to support recent Zopes and zope.testing.testrunner.\n  Thanks to Whit Morris.\n\n0.8.2\n-----\n\n- Added support for passing a list of GenericSetup extension profiles\n  to the setupPloneSite function.\n\n0.8.0\n-----\n\n- Added support for Plone 2.5.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/plonetestcase", "keywords": "plone testing", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "Products.PloneTestCase", "package_url": "https://pypi.org/project/Products.PloneTestCase/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Products.PloneTestCase/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://plone.org/products/plonetestcase"}, "release_url": "https://pypi.org/project/Products.PloneTestCase/0.9.18/", "requires_dist": null, "requires_python": null, "summary": "Integration testing framework for Plone.", "version": "0.9.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>PloneTestCase is a thin layer on top of the ZopeTestCase package. It has\nbeen developed to simplify testing of Plone-based applications and products.</p>\n<div id=\"the-plonetestcase-package-provides\">\n<h3>The PloneTestCase package provides</h3>\n<ul>\n<li><p>The function <tt>installProduct</tt> to install a Zope product into the\ntest environment.</p>\n</li>\n<li><p>The function <tt>installPackage</tt> to install a Python package\nregistered via five:registerPackage into the test environment.\nRequires Zope 2.10.4 or higher.</p>\n</li>\n<li><p>The function <tt>setupPloneSite</tt> to create a Plone portal in the test db.</p>\n<p>Note: <tt>setupPloneSite</tt> accepts an optional <tt>products</tt> argument, which\nallows you to specify a list of products that will be added to the\nportal using the quickinstaller tool. Since 0.8.2 you can also pass\nan <tt>extension_profiles</tt> argument to import GS extension profiles.</p>\n</li>\n<li><p>The class <tt>PloneTestCase</tt> of which to derive your test cases.</p>\n</li>\n<li><p>The class <tt>FunctionalTestCase</tt> of which to derive your test cases\nfor functional unit testing.</p>\n</li>\n<li><p>The classes <tt>Sandboxed</tt> and <tt>Functional</tt> to mix-in with your own\ntest cases.</p>\n</li>\n<li><p>The constants <tt>portal_name</tt>, <tt>portal_owner</tt>, <tt>default_policy</tt>,\n<tt>default_products</tt>, <tt>default_base_profile</tt>, <tt>default_extension_profiles</tt>,\n<tt>default_user</tt>, and <tt>default_password</tt>.</p>\n</li>\n<li><p>The constant <tt>PLONE21</tt> which evaluates to true for Plone\nversions &gt;= 2.1.</p>\n</li>\n<li><p>The constant <tt>PLONE25</tt> which evaluates to true for Plone\nversions &gt;= 2.5.</p>\n</li>\n<li><p>The constant <tt>PLONE30</tt> which evaluates to true for Plone\nversions &gt;= 3.0.</p>\n</li>\n<li><p>The constant <tt>PLONE31</tt> which evaluates to true for Plone\nversions &gt;= 3.1.</p>\n</li>\n<li><p>The constant <tt>PLONE32</tt> which evaluates to true for Plone\nversions &gt;= 3.2.</p>\n</li>\n<li><p>The constant <tt>PLONE33</tt> which evaluates to true for Plone\nversions &gt;= 3.3.</p>\n</li>\n<li><p>The constant <tt>PLONE40</tt> which evaluates to true for Plone\nversions &gt;= 4.0.</p>\n</li>\n<li><p>The constant <tt>PLONE50</tt> which evaluates to true for Plone\nversions &gt;= 5.0.</p>\n</li>\n<li><p>The module <tt>utils</tt> which contains all utility functions from the\nZopeTestCase package.</p>\n</li>\n</ul>\n</div>\n<div id=\"example-plonetestcase\">\n<h3>Example PloneTestCase</h3>\n<pre>from Products.PloneTestCase import PloneTestCase\n\nPloneTestCase.installProduct('SomeProduct')\nPloneTestCase.setupPloneSite(products=('SomeProduct',))\n\nclass TestSomething(PloneTestCase.PloneTestCase):\n\n    def afterSetup(self):\n        self.folder.invokeFactory('Document', 'doc')\n\n    def testEditDocument(self):\n        self.folder.doc.edit(text_format='plain', text='data')\n        self.assertEqual(self.folder.doc.EditableBody(), 'data')\n</pre>\n</div>\n<div id=\"example-plonetestcase-setup-with-genericsetup\">\n<h3>Example PloneTestCase setup with GenericSetup</h3>\n<pre>from Products.PloneTestCase import PloneTestCase\n\nPloneTestCase.installProduct('SomeProduct')\nPloneTestCase.setupPloneSite(extension_profiles=('SomeProduct:default',))\n</pre>\n<p>Please see the docs of the ZopeTestCase package, especially those\nof the PortalTestCase class.</p>\n<p>Look at the example tests in this directory to get an idea of how\nto use the PloneTestCase package. Also see the tests shipping with\nPlone.</p>\n<p>Copy <tt>testSkeleton.py</tt> to start your own tests.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.9.18 (2014-03-02)</h3>\n<ul>\n<li>Adjust conditionals for Plone 5 instead of 4.4.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.9.17 (2013-05-23)</h3>\n<ul>\n<li>Install plone.app.event conditionally and only for Plone 4.4 and up.\n[thet]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.9.16 (2013-04-06)</h3>\n<ul>\n<li>Fix broken imports, have plone.app.events conditionnaly loaded.\n[kiorky]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.9.15 (2012-07-02)</h3>\n<ul>\n<li>Modernize some imports.\n[hannosch]</li>\n<li>Minor pep8 cleanup, changed has_key() synatax to \u2018in\u2019 syntax in\na few areas\n[pbdiode]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.9.14 (2012-04-15)</h3>\n<ul>\n<li>Install packages earlier so test setup for new collections works\ncorrectly in Plone 4.2.\n[davisagli]</li>\n<li>Fail explicitly (instead of obscurely) if there is no Plone.\n[stefan]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.9.13 - 2011-01-03</h3>\n<ul>\n<li>Depend on <tt>Products.CMFPlone</tt> instead of <tt>Plone</tt>.\n[elro]</li>\n<li>Relax the test for # of roles slightly for compatibility with Plone 4.1.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.9.12 - 2010-09-20</h3>\n<ul>\n<li>Fix the cleanup method called by safe_load_site to mark the component\nregistry as uninitialized regardless of whether the flag is in\nZope2.App.zcml or Products.Five.zcml.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.9.11 - 2010-09-15</h3>\n<ul>\n<li>Install <cite>plone.app.imaging</cite> monkeypatches during test setup.\n[davisagli]</li>\n<li>Add layer support coming from zope.testrunner and removed from zope.testing\n[jfroche]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.9.10 - 2010-07-13</h3>\n<ul>\n<li>Make compatible with Zope 2.13 and avoid setup problems with zope.schema\nvocabularies.\n[hannosch]</li>\n<li>Revert r100668 as the issue does not occur anymore.\n[stefan]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.9.9 - 2009-11-14</h3>\n<ul>\n<li>Folder created with _createObjectByType was being reported as having\nportal_type \u2018ATFolder\u2019 in portal_catalog. Reindexing it flips it to the\ncorrect \u2018Folder\u2019.\n[esteele]</li>\n<li>Reset memoize RAMCaches on tear down.\nFixes <a href=\"http://dev.plone.org/plone/ticket/9425\" rel=\"nofollow\">http://dev.plone.org/plone/ticket/9425</a>\n[stefan]</li>\n<li>Install blob-enabled types from <cite>plone.app.blob</cite> during test setup.\n[witsch]</li>\n<li>Install the TinyMCE product during test runs.\n[hannosch]</li>\n<li>Add the sunburst theme to the default extension profiles for Plone 4.\n[davisagli]</li>\n<li>Specify dependencies in a backwards compatible way.\n[hannosch]</li>\n<li>Changed behavior of <cite>default_extension_profiles</cite>. We always add the default\nprofiles now. You can still override this via passing in an explicit empty\n<cite>default_extension_profiles</cite> argument to the <cite>setupPloneSite</cite> function.\n[hannosch]</li>\n<li>Disentangle the product installation code for PLONE50 and before. The base\namount of packages is quite different.\n[hannosch]</li>\n<li>Moved the Plone version determination code into its own module.\n[hannosch]</li>\n<li>Adjusted the PLONE40 constant to be PLONE50 and check for Plone trunk.\n[hannosch]</li>\n<li>In Plone trunk manually install the ATContentTypes default profile.\n[hannosch]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.9.8 - 2009-04-16</h3>\n<ul>\n<li>Protect against missing portal_quickinstaller tool.\n[hannosch]</li>\n<li>Fixed deprecation warnings for use of Globals.\n[hannosch]</li>\n<li>Adjusted _createHomeFolder to create the \u2018Members\u2019 folder if it isn\u2019t\ncreated by the site creation code.\n[hannosch]</li>\n<li>Adjusted PLONE40 check after the migrations have been moved out of the\nCMFPlone package.\n[hannosch]</li>\n<li>Added PLONE33 constant.\n[stefan]</li>\n</ul>\n</div>\n<div id=\"b4-2008-10-26\">\n<h3>0.9.8b4 - 2008-10-26</h3>\n<ul>\n<li>Added PLONE32 constant.\n[stefan]</li>\n</ul>\n</div>\n<div id=\"b3-2008-10-16\">\n<h3>0.9.8b3 - 2008-10-16</h3>\n<ul>\n<li>Bugfix: The default member-area was created before the portal\nwas fully configured.\n[stefan]</li>\n<li>Bugfix: Reindex security of member-area after taking ownership.\n[stefan]</li>\n</ul>\n</div>\n<div id=\"b2-2008-10-09\">\n<h3>0.9.8b2 - 2008-10-09</h3>\n<ul>\n<li>Egg was broken due to use of svn export. Who\u2019d have thunk\nsetuptools makes a difference?\n[stefan]</li>\n</ul>\n</div>\n<div id=\"b1-2008-10-05\">\n<h3>0.9.8b1 - 2008-10-05</h3>\n<ul>\n<li>Install all Plone products quietly.</li>\n<li>Eggified Products.PloneTestCase.</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.9.7</h3>\n<ul>\n<li>Added PLONE31 and PLONE40 constants.</li>\n<li>The PloneSite layer can now be set up more than once. Thanks to\nAndreas Zeidler and Balazs Ree.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.9.6</h3>\n<ul>\n<li>Deal with new skin setup in CMF 2.1 and up.</li>\n<li>Provide hasPackage and installPackage if ZopeTestCase supports it.</li>\n<li>Changed license to GPL, cleaning up my act.</li>\n<li>Use new stateless GenericSetup API in Plone 3.0 and up.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.9.4</h3>\n<ul>\n<li>Minor test fixes to cater for changes in PlonePAS and CMF.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.9.3</h3>\n<ul>\n<li>In 0.9.2 we accidentally lost the ability to override getPortal. Fixed.</li>\n<li>Spell \u2018placefulSetup\u2019 like \u2018placefulSetUp\u2019 for consistency with\nzope.app.testing.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.9.2</h3>\n<ul>\n<li>Improved support for the local component registry. We now register it\nright after it has been created in Plone &gt;= 3.0, as it is needed during\nsite setup. We also set the portal as a site whenever it is accessed\nto get CMF skin acquisition to work.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.9.0</h3>\n<ul>\n<li>Prepared for switching ZopeTestCase to Zope3 interfaces.</li>\n<li>Load etc/site.zcml lazily instead of using the wrapper.</li>\n<li>Import extension profiles one by one to gain better control.</li>\n<li>Added a PloneTestCase.addProfile() method that allows to import\nextension profiles into the site. This is an alternative to\npassing the \u2018extension_profiles\u2019 argument to setupPloneSite().</li>\n<li>Create Plone site lazily using layer.PloneSite.</li>\n<li>Renamed utils.py to five.py.</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.8.6</h3>\n<ul>\n<li>Starting with Plone 3.0 the portal is a component registry as well. We\nperform the necessary registration automatically now.</li>\n<li>Made sure layer cleanup resets Five.zcml to \u201cnot initialized\u201d.</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>0.8.4</h3>\n<ul>\n<li>Allow to pass a base profile to the setupPloneSite function.</li>\n<li>Added PLONE30 constant.</li>\n<li>Made application of StringIO monkey patch conditional, as it is part of\nCMFPlone/patches starting with Plone 3.0</li>\n<li>Added a ZCMLLayer to support recent Zopes and zope.testing.testrunner.\nThanks to Whit Morris.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.8.2</h3>\n<ul>\n<li>Added support for passing a list of GenericSetup extension profiles\nto the setupPloneSite function.</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>0.8.0</h3>\n<ul>\n<li>Added support for Plone 2.5.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1016520, "releases": {"0.9.10": [{"comment_text": "", "digests": {"md5": "a089b3ca39a916de53c5d3debcf538c7", "sha256": "ad76b1ed5f131f3f99547442862b005f238842d8d0ecfa0c7334ae13ee64592b"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.10.zip", "has_sig": false, "md5_digest": "a089b3ca39a916de53c5d3debcf538c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32732, "upload_time": "2010-07-13T22:10:27", "upload_time_iso_8601": "2010-07-13T22:10:27.610092Z", "url": "https://files.pythonhosted.org/packages/4c/4b/237a4b3781ecbd759a9afd03d43b7f537603a0a014791c6aaecf7cb2dc30/Products.PloneTestCase-0.9.10.zip", "yanked": false}], "0.9.11": [{"comment_text": "", "digests": {"md5": "b0d49e8f14b2aca0e6bcca28e5aabcdb", "sha256": "aac88c6f61d4a42267c05d18ff3a08c334791a67ea7b1271530c16d094206c0d"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.11.zip", "has_sig": false, "md5_digest": "b0d49e8f14b2aca0e6bcca28e5aabcdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32945, "upload_time": "2010-09-15T17:14:53", "upload_time_iso_8601": "2010-09-15T17:14:53.668168Z", "url": "https://files.pythonhosted.org/packages/ff/2e/814052962e6b0fe734468bb3b1c1736485f03c6a4c46ab7d1d636c80886d/Products.PloneTestCase-0.9.11.zip", "yanked": false}], "0.9.12": [{"comment_text": "", "digests": {"md5": "4afa191386592755456cf4ecc900fc5e", "sha256": "5403a42acfc387a891b2a13c16823ca7429d501e976f761235aea8d42e785176"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.12.zip", "has_sig": false, "md5_digest": "4afa191386592755456cf4ecc900fc5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33197, "upload_time": "2010-09-20T22:37:18", "upload_time_iso_8601": "2010-09-20T22:37:18.157958Z", "url": "https://files.pythonhosted.org/packages/80/9f/feeb3a3d79a42f28cd9923b3131a16b3feb0b7055921b06a1e523319ec10/Products.PloneTestCase-0.9.12.zip", "yanked": false}], "0.9.13": [{"comment_text": "", "digests": {"md5": "be15bb96e257430de2d1b94eb1570eb4", "sha256": "47dcfd92efd15a2fb50f1945a42d3de5e5caf9b7f70fa1bf06abd601b3014f26"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.13.zip", "has_sig": false, "md5_digest": "be15bb96e257430de2d1b94eb1570eb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33471, "upload_time": "2011-01-03T22:10:02", "upload_time_iso_8601": "2011-01-03T22:10:02.964259Z", "url": "https://files.pythonhosted.org/packages/03/84/efa07e6cdca23e7e8c27448ffcb4059820c3b0dd02fc04a884d0c0406d5d/Products.PloneTestCase-0.9.13.zip", "yanked": false}], "0.9.14": [{"comment_text": "", "digests": {"md5": "c9539a7901c7d5418e69642ecd1b9d33", "sha256": "399853b7b8f8b57b8c1368b4281a68e325ad85480cd80fe6e3213280a70c9db0"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.14.zip", "has_sig": false, "md5_digest": "c9539a7901c7d5418e69642ecd1b9d33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33586, "upload_time": "2012-04-15T21:48:16", "upload_time_iso_8601": "2012-04-15T21:48:16.794000Z", "url": "https://files.pythonhosted.org/packages/ea/c9/d44bb36e4b1a5ff73ee6102909a26cf0d0e305cec3d4b23be0f1c6200c52/Products.PloneTestCase-0.9.14.zip", "yanked": false}], "0.9.15": [{"comment_text": "", "digests": {"md5": "ddd5810937919ab5233ebd64893c8bae", "sha256": "49572295f32ebb2d48ab56251b1fa934f0a3c3e8624424d5d01d5b5cc8cf525b"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.15.zip", "has_sig": false, "md5_digest": "ddd5810937919ab5233ebd64893c8bae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33894, "upload_time": "2012-07-02T16:24:02", "upload_time_iso_8601": "2012-07-02T16:24:02.757513Z", "url": "https://files.pythonhosted.org/packages/ce/fa/897122ad323c5c478a4353484390793a59537e3a3f8cffe972107efffed1/Products.PloneTestCase-0.9.15.zip", "yanked": false}], "0.9.16": [{"comment_text": "", "digests": {"md5": "968a265bede995f485988158e4e6dd7f", "sha256": "2702648c931bc6bec3414e25871e4eabd57b3451588afbb8a03e7741857ec9c3"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.16.zip", "has_sig": false, "md5_digest": "968a265bede995f485988158e4e6dd7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34372, "upload_time": "2013-04-06T15:46:39", "upload_time_iso_8601": "2013-04-06T15:46:39.385997Z", "url": "https://files.pythonhosted.org/packages/b8/d1/418cea848394e1a5aaa926ad6283cf025325971c29a55a27c794f730d9a4/Products.PloneTestCase-0.9.16.zip", "yanked": false}], "0.9.17": [{"comment_text": "", "digests": {"md5": "2a5bfb94220a520961d710abc92280f2", "sha256": "9d7945a85f2fb2103ace7a80e095edbff7e9f5d3afefc3e4063255861a46f9d1"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.17.zip", "has_sig": false, "md5_digest": "2a5bfb94220a520961d710abc92280f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34453, "upload_time": "2013-05-24T00:27:18", "upload_time_iso_8601": "2013-05-24T00:27:18.325400Z", "url": "https://files.pythonhosted.org/packages/61/25/adf24e45aa59f7f036d2f3d67d773db0dfb2f8de652c45a0e05a7c1c2b08/Products.PloneTestCase-0.9.17.zip", "yanked": false}], "0.9.18": [{"comment_text": "", "digests": {"md5": "0bc6f428a8158a8af29d9d875dbec8d4", "sha256": "c8fd8535f796838d69a1ed570a927b5bd39cd2e47eb1f4db22e8b9ad8d8a5144"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.18.zip", "has_sig": false, "md5_digest": "0bc6f428a8158a8af29d9d875dbec8d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34494, "upload_time": "2014-03-02T18:04:08", "upload_time_iso_8601": "2014-03-02T18:04:08.527002Z", "url": "https://files.pythonhosted.org/packages/35/83/def1f9f9314b784ea7e0e6202efa1f3ec8ae2e6cda20e5bf9b6b8bd833f9/Products.PloneTestCase-0.9.18.zip", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "c6c874284fc7fac659cb1f2e4d016643", "sha256": "2143dcdfeba02e9f38703b18fb6cb18980357b59ec15cfb5877bcdcbfb95f703"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.8.zip", "has_sig": false, "md5_digest": "c6c874284fc7fac659cb1f2e4d016643", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28782, "upload_time": "2009-04-17T00:34:52", "upload_time_iso_8601": "2009-04-17T00:34:52.594231Z", "url": "https://files.pythonhosted.org/packages/c7/57/88f58c1146c9536996fa65734cd4915e4ec0cda789c09436b4006357a867/Products.PloneTestCase-0.9.8.zip", "yanked": false}], "0.9.8b1": [{"comment_text": "", "digests": {"md5": "37d077c8d888fb7ec32783a3b8eef573", "sha256": "7f1a9572b9f580ce7be6463881f6a8b1625690dd6c2464539444c2dc0b49fcc9"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.8b1.tar.gz", "has_sig": false, "md5_digest": "37d077c8d888fb7ec32783a3b8eef573", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14364, "upload_time": "2008-10-05T18:53:28", "upload_time_iso_8601": "2008-10-05T18:53:28Z", "url": "https://files.pythonhosted.org/packages/2f/ba/13fd2d30e26bfaf71f1b8fa8c5bb61fbd7d4838f7d3e8db6754bf67f0422/Products.PloneTestCase-0.9.8b1.tar.gz", "yanked": false}], "0.9.8b2": [{"comment_text": "", "digests": {"md5": "9888680b3c3eaa0890f74e3928273dda", "sha256": "3f390db55e375afd5adb0b21d8099d8e4e1926cf0635b837d0709ff95d04f60c"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.8b2.tar.gz", "has_sig": false, "md5_digest": "9888680b3c3eaa0890f74e3928273dda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14622, "upload_time": "2008-10-08T22:15:31", "upload_time_iso_8601": "2008-10-08T22:15:31Z", "url": "https://files.pythonhosted.org/packages/6e/ea/545e289d47d7277e83074619f9779af16ea12ba2a950bae665fb13b3c54d/Products.PloneTestCase-0.9.8b2.tar.gz", "yanked": false}], "0.9.8b3": [{"comment_text": "", "digests": {"md5": "1d6d2e771c6630f3875d0cf61f88509f", "sha256": "82d9e08b825c58166509586bb26dce91324ed25fdc2b86a19181dcd741f74ded"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.8b3.tar.gz", "has_sig": false, "md5_digest": "1d6d2e771c6630f3875d0cf61f88509f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14806, "upload_time": "2008-10-16T19:21:45", "upload_time_iso_8601": "2008-10-16T19:21:45Z", "url": "https://files.pythonhosted.org/packages/78/ba/ccfd9d2658b4cb21dbc89edf3e38060d8eebcc57a8ce8abe3ed8a9ed7324/Products.PloneTestCase-0.9.8b3.tar.gz", "yanked": false}], "0.9.8b4": [{"comment_text": "", "digests": {"md5": "fd40d7955085db117df46cb68509c462", "sha256": "022d3dc2b59bc5ab30d27f89d18a7679692bcd11e5855c811d32e87ad37d1898"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.8b4.tar.gz", "has_sig": false, "md5_digest": "fd40d7955085db117df46cb68509c462", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14882, "upload_time": "2008-10-26T20:20:54", "upload_time_iso_8601": "2008-10-26T20:20:54Z", "url": "https://files.pythonhosted.org/packages/7a/5c/19ad3a59afcc5d5f0a969a811abce03c579961a466dbd0157a58949cb5f4/Products.PloneTestCase-0.9.8b4.tar.gz", "yanked": false}], "0.9.9": [{"comment_text": "", "digests": {"md5": "fe7822a9d509d918c771188c0611987a", "sha256": "83b4e34041d6c8465174e195fdff5a962f4fb0d6e10cab0d913848791261d122"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.9.zip", "has_sig": false, "md5_digest": "fe7822a9d509d918c771188c0611987a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32153, "upload_time": "2009-11-14T22:38:12", "upload_time_iso_8601": "2009-11-14T22:38:12.511380Z", "url": "https://files.pythonhosted.org/packages/5c/58/872d102f311a9d9f1cb6cd9542e7359b01d2eeb7ca31bda4d420d430c7fe/Products.PloneTestCase-0.9.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0bc6f428a8158a8af29d9d875dbec8d4", "sha256": "c8fd8535f796838d69a1ed570a927b5bd39cd2e47eb1f4db22e8b9ad8d8a5144"}, "downloads": -1, "filename": "Products.PloneTestCase-0.9.18.zip", "has_sig": false, "md5_digest": "0bc6f428a8158a8af29d9d875dbec8d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34494, "upload_time": "2014-03-02T18:04:08", "upload_time_iso_8601": "2014-03-02T18:04:08.527002Z", "url": "https://files.pythonhosted.org/packages/35/83/def1f9f9314b784ea7e0e6202efa1f3ec8ae2e6cda20e5bf9b6b8bd833f9/Products.PloneTestCase-0.9.18.zip", "yanked": false}], "timestamp": "Fri May  8 03:17:53 2020"}