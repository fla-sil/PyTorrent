{"info": {"author": "Pavel Savchenko", "author_email": "pavel@modlinltd.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Django Advanced Filters\n=======================\n\n+-----------+------------------+---------------------+----------+------------+\n| Branch    | Build            | Coverage            | PyPI     | Gitter     |\n+===========+==================+=====================+==========+============+\n| Master    | |Build-Master|   | |Coverage-Master|   | |PyPI|   | |Gitter|   |\n+-----------+------------------+---------------------+----------+------------+\n| Develop   | |Build-Develop|  | |Coverage-Develop|  |          |            |\n+-----------+------------------+---------------------+----------+------------+\n\nA django ModelAdmin mixin which adds advanced filtering abilities to the\nadmin.\n\nMimics the advanced search feature in\n`VTiger <https://www.vtiger.com/>`__, `see here for more\ninfo <https://wiki.vtiger.com/index.php/Create_Custom_Filters>`__\n\n.. figure:: https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/screenshot.png\n   :alt: Creating via a modal\n   :width: 768 px\n\n\nFor release notes, see `Changelog <https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/CHANGELOG.rst>`__\n\nRequirements\n============\n\n-  Django >= 1.7 (Django 1.7 - 2.1 on Python 2/3/PyPy2)\n-  django-braces == 1.4.0\n-  simplejson == 3.6.5\n\n\nInstallation & Set up\n=====================\n\n1. Install from pypi: ``pip install django-advanced-filters``\n2. Add both ``'advanced_filters'`` to ``INSTALLED_APPS``.\n3. Add ``url(r'^advanced_filters/', include('advanced_filters.urls'))``\n   to your project's urlconf.\n4. Run ``python manage.py syncdb`` or ``python manage.py migrate`` (for django >= 1.7)\n\nIntegration Example\n===================\n\nExtending a ModelAdmin is pretty straightforward:\n\n.. code-block:: python\n\n    from advanced_filters.admin import AdminAdvancedFiltersMixin\n\n    class ProfileAdmin(AdminAdvancedFiltersMixin, models.ModelAdmin):\n        list_filter = ('name', 'language', 'ts')   # simple list filters\n\n        # specify which fields can be selected in the advanced filter\n        # creation form\n        advanced_filter_fields = (\n            'name',\n            'language',\n            'ts',\n\n            # even use related fields as lookup fields\n            'country__name',\n            'posts__title',\n            'comments__content',\n        )\n\nAdding a new advanced filter (see below) will display a new list filter\nnamed \"Advanced filters\" which will list all the filter the currently\nlogged in user is allowed to use (by default only those he/she created).\n\nCustom naming of fields\n-----------------------\n\nInitially, each field in ``advanced_filter_fields`` is resolved into an\nactual model field. That field's verbose\\_name attribute is then used as\nthe text of the displayed option. While uncommon, it occasionally makes\nsense to use a custom name, especially when following a relationship, as\nthe context then changes.\n\nFor example, when a profile admin allows filtering by a user name as\nwell as a sales representative name, it'll get confusing:\n\n.. code-block:: python\n\n    class ProfileAdmin(AdminAdvancedFiltersMixin, models.ModelAdmin):\n        advanced_filter_fields = ('name', 'sales_rep__name')\n\nIn this case the field options will both be named \"name\" (by default).\n\nTo fix this, use custom naming:\n\n.. code-block:: python\n\n    class ProfileAdmin(AdminAdvancedFiltersMixin, models.ModelAdmin):\n        advanced_filter_fields = ('name', ('sales_rep__name', 'assigned rep'))\n\nNow, you will get two options, \"name\" and \"assigned rep\".\n\nAdding new advanced filters\n===========================\n\nBy default the mixin uses a template which extends django's built-in\n``change_list`` template. This template is based off of grapelli's fork\nof this template (hence the 'grp' classes and funny looking javascript).\n\nThe default template also uses the superb\n`magnificPopup <dimsemenov/Magnific-Popup>`__ which is currently bundled\nwith the application.\n\nRegardless of the above, you can easily write your own template which\nuses context variables ``{{ advanced_filters }}`` and\n``{{ advanced_filters.formset }}``, to render the advanced filter\ncreation form.\n\nStructure\n=========\n\nEach advanced filter has only a couple of required fields when\nconstructed with the form; namely the title and a formset (consisting of\na form for each sub-query or rule of the filter query).\n\nEach form in the formset requires the following fields: ``field``,\n``operator``, ``value``\n\nAnd allows the optional ``negate`` and ``remove`` fields.\n\nLet us go over each of the fields in a rule fieldset.\n\nField\n-----\n\nThe list of all available fields for this specific instance of the\nModelAdmin as specific by the ```advanced_filter_fields``\nproperty. <#integration-example>`__\n\nThe OR field\n~~~~~~~~~~~~\n\n``OR`` is an additional field that is added to every rule's available\nfields.\n\nIt allows constructing queries with `OR\nstatements <https://docs.djangoproject.com/en/dev/topics/db/queries/#complex-lookups-with-q-objects>`__.\nYou can use it by creating an \"empty\" rule with this field \"between\" a\nset of 1 or more rules.\n\nOperator\n--------\n\nQuery field suffixes which specify how the ``WHERE`` query will be\nconstructed.\n\nThe currently supported are as follows: ``iexact``, ``icontains``,\n``iregex``, ``range``, ``isnull``, ``istrue`` and ``isfalse``\n\nFor more detail on what they mean and how they function, see django's\n`documentation on field\nlookups <https://docs.djangoproject.com/en/dev/ref/models/querysets/#field-lookups>`__.\n\nValue\n-----\n\nThe value which the specific sub-query will be looking for, i.e the\nvalue of the field specified above, or in django query syntax:\n``.filter(field=value)``\n\nNegate\n------\n\nA boolean (check-box) field to specify whether this rule is to be\nnegated, effectively making it a \"exclude\" sub-query.\n\nRemove\n------\n\nSimilarly to other `django\nformsets <https://docs.djangoproject.com/en/dev/topics/forms/formsets/>`__,\nused to remove the selected line on submit.\n\nEditing previously created advanced filters\n===========================================\n\nThe ``AdvancedFilterAdmin`` class (a subclass of ``ModelAdmin``) is\nprovided and registered with ``AdvancedFilter`` in admin.py module.\n\nThe model's change\\_form template is overridden from grapelli's/django's\nstandard template, to mirror the add form modal as closely as possible.\n\n*Note:* currently, adding new filters from the ModelAdmin change page is\nnot supported.\n\nQuery Serialization\n===================\n\n**TODO:** write a few words on how serialization of queries is done.\n\nModel correlation\n=================\n\nSince version 1.0, ``AdvancedFilter`` are tightly coupled with a specific model\nusing the ``model`` field and the app\\_label.Name template.\nOn creation, ``model`` is populated based on the admin changelist it's created\nin.\n\nThis change has a few benefits:\n\n1. The mixin can be used with multiple ``ModelAdmin`` classes while\n   performing specific query serialization and field validation that are\n   at the base of the filter functionality.\n\n2. Users can edit previously created filters outside of the\n   context of a changelist, as we do in the\n   ```AdvancedFilterAdmin`` <#editing-previously-created-advanced-filters>`__.\n\n3. Limit the ``AdvancedListFilters`` to limit queryset (and thus, the\n   underlying options) to a specified model.\n\nViews\n=====\n\nThe GetFieldChoices view is required to dynamically (using javascript)\nfetch a list of valid field choices when creating/changing an\n``AdvancedFilter``.\n\nTODO\n====\n\n-  Add permission user/group selection functionality to the filter form\n-  Allow toggling of predefined templates (grappelli / vanilla django\n   admin), and front-end features.\n-  Support more (newer) python/django versions\n\n.. |Build-Master| image:: https://travis-ci.org/modlinltd/django-advanced-filters.svg?branch=master\n   :target: https://travis-ci.org/modlinltd/django-advanced-filters\n.. |Coverage-Master| image:: https://coveralls.io/repos/modlinltd/django-advanced-filters/badge.svg?branch=master\n   :target: https://coveralls.io/github/modlinltd/django-advanced-filters?branch=master\n.. |PyPI| image:: https://img.shields.io/pypi/pyversions/django-advanced-filters.svg\n   :target: https://pypi.python.org/pypi/django-advanced-filters\n.. |Gitter| image:: https://badges.gitter.im/Join%20Chat.svg\n   :target: https://gitter.im/modlinltd/django-advanced-filters?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n.. |Build-Develop| image:: https://travis-ci.org/modlinltd/django-advanced-filters.svg?branch=develop\n   :target: https://travis-ci.org/modlinltd/django-advanced-filters\n.. |Coverage-Develop| image:: https://coveralls.io/repos/modlinltd/django-advanced-filters/badge.svg?branch=develop\n   :target: https://coveralls.io/github/modlinltd/django-advanced-filters?branch=develop\n\nChangelog\n=========\n\n1.1.1 - CHANGELOG rendering is hard\n-----------------------------------\n\nThis release is for fixing the bug when installing with specific environment (\nlocale that defaults to CP-1252).\n\nBug fixes\n~~~~~~~~~\n\n- Add encoding='utf-8' to open() in setup.py (Merge 2fe81aa)\n\nDocs / Other\n~~~~~~~~~~~~\n\n- add CONTRIBUTING.rst with common processes (Merge ee7907e)\n- Update issue templates (Merge ee7907e)\n\nContributors\n~~~~~~~~~~~~\n\n- Rebecca Turner\n- Pavel Savchenko\n\n\n1.1.0 - The future is bright\n----------------------------\n\nThis release highlights support for Django 2.0 and 2.1 as well as\ndeprecating support for versions Django < 1.7 and Python 2.6 and 3.3\n\nBug fixes\n~~~~~~~~~\n\n- bump django-braces==1.13 for Django 2 support (Merge 80e055e)\n- use request context processor in test_project (Merge 80e055e)\n\nMisc.\n~~~~~\n\n- ignore .DS_Store\n- fixes for Django 2.0 and 1.11, update tests (Merge 80e055e)\n- test in Django 2.1 (Merge d8d236d)\n- add updated migrations of model attributes (Merge 80e055e)\n- fix ValueError while creating empty form (Merge d8d236d)\n- python 2.6 and django < 1.7 are deprecated\n- lower and upper bounds in install_requires\n- avoid all-catch except clause (Merge 80e055e)\n\nTests\n~~~~~\n\n- correct tox env django spec for ver 1.11 (Merge 80e055e)\n- correct make_query assertion for Django>=2 (Merge 80e055e)\n- update pytest-django in diff. envs + tox (Merge d8d236d)\n\nContributors\n~~~~~~~~~~~~\n\n- Goncalo Gomes\n- predatell\n- Petr Dlouh\u00fd\n- benny daon\n- Pavel Savchenko\n\n\n1.0.7.1 - Fix PyPi fail\n-----------------------\n\n- Equivalent to the prev version, bumped since we can't reupload the files to PyPi.\n\n1.0.7 - The holiday edition\n---------------------------\n\nThis is mostly a minor release with the biggest being the `AdvancedFilterForm.Media` fix, 2 additional translations and bunch of docs cleanup (thanks everyone)!\n\nChanges since 1.0.6:\n\nBug Fixes\n~~~~~~~~~\n\n- Fix AdvancedFilterForm Media declaration\n- Fix pep8: E128 on forms.py (Merge d7acb36)\n\nFeatures\n~~~~~~~~\n\n- Add Japanese locale (Merge d7acb36)\n- Add Spanish locale (Merge 1a482cf)\n\nDocumentation:\n~~~~~~~~~~~~~~\n\n- a bit of polishing (Merge 4c88ea3)\n- removing confusing migrations paragraph (Merge 4c88ea3)\n\nContributors:\n~~~~~~~~~~~~~\n\n- KINOSHITA Shinji\n- Pavel Savchenko\n- Benny Daon\n- Mathieu Richardoz\n- Jos\u00e9 S\u00e1nchez Moreno\n\n\n1.0.6 - Bout Time\n-----------------\n\nThis release is long overdue, and includes some important fixes as well as general improvements to code and documentation.\n\nBug Fixes\n~~~~~~~~~\n\n- fixing TypeError: can only concatenate tuple (not \"list\") to tuple\n- ensure select2 is included last (Merge 9831ba5)\n- add script to load jQuery globally\n- remove invalid template variables\n- fix input focusing error in chrome\n- fix error when one missing range parameter caused error + test (Merge 365b646)\n\nFeatures\n~~~~~~~~\n\n- don't override original change_list_templates in AdminAdvancedFiltersMixin\n- make date range placeholder more pleasant (Merge 365b646)\n- add created_at field\n- Russian locale provided\n\nDocumentation\n~~~~~~~~~~~~~\n\n   - make it clear easy-select2 is not required anymore (Merge 9831ba5)\n   - Clarify how to import AdminAdvancedFiltersMixin in README\n\nTests\n~~~~~\n\n   - add more fields/filter to test ModelAdmin\n\nContributors\n~~~~~~~~~~~~\n\n   - Grigoriy Beziuk\n   - \u041d\u0438\u043a\u0438\u0442\u0430 \u041a\u043e\u043d\u0438\u043d\n   - Pavel Savchenko\n   - Yuval Adam\n   - Petr Dlouh\u00fd\n\n\n1.0.5 - Compatibility bump\n--------------------------\n\nBugs\n~~~~\n\n- updated AdvancedFilterQueryForm to include numeric comparison operators (Merge d3ee9f4)\n- Fixed a bug where editing an existing Advanced Filter defaulted all operators to 'Equals' (Merge d3ee9f4)\n- set AFQFormSet extra=0 instead of extra=1. I did this because having to check Delete is not clear to end users. (Merge d3ee9f4)\n- changed the Advanced Filter admin so you a User by default can only view/edit filters that they create (unless they are a superuser) (Merge d3ee9f4)\n- Fixed failing tests. Fixed bug where users weren't properly getting permissions to change or delete their filters (Merge d3ee9f4)\n- changed solution for extra form appearing on editing. Now initialize form checks for falsy value for extra rather than extra just being None (Merge d3ee9f4)\n- removed 'not instance from requirements for no extras (Merge d3ee9f4)\n- pep8 fix (Merge d3ee9f4)\n- Fixed labeling error with 'Greater Than or Equal To' (Merge d3ee9f4)\n- Changes URL declaration to avoid deprecated pattern\n- select2 only initializes if there are choices available. otherwise, the standard text input will be used (Merge 35d7063)\n- Revert \"select2 only initializes if there are choices available. otherwise, the standard text input will be used\" (Merge 35d7063)\n- updated query for choices for select2 field so that it will take only distinct choices. This allows max_choices to be the maximum unique choices. (Merge 35d7063)\n- Changes URL declaration to avoid deprecated pattern (Merge 35d7063)\n- refactored retrieval of choices so that the db is getting distinct values; added test (Merge 35d7063)\n- pep8 (Merge 35d7063)\n- Use order_by to avoid ambiguity\n- drop django-easy-select2 and include select2 directly\n\nTests\n~~~~~\n\n- test with both Python 3.5 and Django 1.10\n- removed print statement from test (Merge 35d7063)\n- fixed failing test to account for new distinct for max choices (Merge 35d7063)\n- added test to make sure all operators are properly restored from Queries (Merge d3ee9f4)\n\nContributors\n~~~~~~~~~~~~\n\n- Pavel Savchenko\n- PJ Passalacqua\n- Hermano Cabral\n\n\n1.0.4 - Unbreak Python 3\n------------------------\n\nThis release contains a fix to allow distribution installation on Python 3 which was broken since 1.0.2\n\n1.0.3 - The Package Fix\n-----------------------\n\nThis is a quick fix for packaging (setup.py) errors and documentation.\n\nBugs\n~~~~\n\n-  add missing Django 1.7 migrations\n-  README updated to mention ``manage.py migrate`` command\n-  Use ReST for README and CHANGELOG: avoid conversion from markdown\n\n\n1.0.2 - A Better Future\n-----------------------\n\nThis release features better test coverage and support for Django 1.9.\n\nBugs\n~~~~\n\n-  stretch formset table to the modal container width\n-  toggle advanced ``vendor/jquery`` dir according to Django version\n-  retain support older Django versions\n-  clean up legacy tags in templates\n\nTests\n~~~~~\n\n-  add admin views tests\n-  add Django 1.9 to test matrix\n-  other minor improvements\n\nDocs\n~~~~\n\n-  Improve README with a newer screenshot and pretty tables for badges\n\nContributors:\n~~~~~~~~~~~~~\n\n-  Pavel Savchenko\n-  Leonardo J. Caballero G\n-  Schuyler Duveen\n\n1.0.1 - A Public Release\n------------------------\n\nBugs\n~~~~\n\n-  proper support for py26 and py3X and different Django releases\n-  avoid querying all instances for choices\n-  resolve settings inside view and refine error handling\n\nTests\n~~~~~\n\n-  add doctests to the ``form_helpers``\n-  add tests for ``forms``\n-  add test case ``views.TestGetFieldChoicesView``\n-  setup.py/travis: add ``test-reqs.txt`` as extras\\_require\n-  refactor testing to use ``py.test`` and run ``tox`` from ``setup.py``\n-  travis: use latest version of each Django release\n\nDocs:\n~~~~~\n\n-  ``README``: explain what we test against\n\n1.0 - First contact\n-------------------\n\nMajor changes\n~~~~~~~~~~~~~\n\n-  Add a new (required) field\n   ```AdvancedFilter.model`` <https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#model-correlation>`__\n-  Add parsing query dict into initialized formsets (allows for `editing\n   existing\n   instance <https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#editing-previously-created-advanced-filters>`__).\n-  Add\n   ```AdvancedFilterAdmin`` <#editing-previously-created-advanced-filters>`__\n   for actually accessing and `editing existing ``AdvancedFilter``\n   instances <https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#editing-previously-created-advanced-filters>`__.\n-  Use `Select2 <https://github.com/asyncee/django-easy-select2>`__ and\n   an AJAX view to dynamically populate ```field``\n   options <https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#fields>`__.\n-  Add proper support for nested serialization of queries.\n\nMinor changes\n~~~~~~~~~~~~~\n\n-  Implement more ```operators`` <https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#operators>`__ (``isnull``,\n   ``istrue`` and ``isfalse``)\n-  Allow `custom verbose naming of fields in\n   advanced\\_filter\\_fields <https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#custom-naming-of-fields>`__\n-  Add helper methods to the model to hide (and decouple) core\n   serialization functionality from users.\n-  Strip whitespace in field values validation\n-  Setup and packaging (``setup.py``/``MANIFEST.in``)\n-  Hide ``QSerializer`` calling logic in the model\n-  Allow modifying ``advanced_filter_form`` property (defaults to\n   ``AdvancedFilterForm``)\n-  Correct documentation regarding position of mixin in subclass (issue\n   #1)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/modlinltd/django-advanced-filters", "keywords": "django-admin admin advanced filters custom query", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-advanced-filters", "package_url": "https://pypi.org/project/django-advanced-filters/", "platform": "", "project_url": "https://pypi.org/project/django-advanced-filters/", "project_urls": {"Homepage": "https://github.com/modlinltd/django-advanced-filters"}, "release_url": "https://pypi.org/project/django-advanced-filters/1.1.1/", "requires_dist": ["django-braces (<2,>=1.4.0)", "simplejson (<4,>=3.6.5)", "coveralls (==0.5); extra == 'test'", "factory-boy (==2.5.2); extra == 'test'", "pep8 (==1.6.2); extra == 'test'"], "requires_python": "", "summary": "A Django application for advanced admin filters", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-advanced-filters\">\n<h2>Django Advanced Filters</h2>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Branch</th>\n<th>Build</th>\n<th>Coverage</th>\n<th>PyPI</th>\n<th>Gitter</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Master</td>\n<td><a href=\"https://travis-ci.org/modlinltd/django-advanced-filters\" rel=\"nofollow\"><img alt=\"Build-Master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9845954ba38af934fc0e64c86fcf5cfd2aea4e6a/68747470733a2f2f7472617669732d63692e6f72672f6d6f646c696e6c74642f646a616e676f2d616476616e6365642d66696c746572732e7376673f6272616e63683d6d6173746572\"></a></td>\n<td><a href=\"https://coveralls.io/github/modlinltd/django-advanced-filters?branch=master\" rel=\"nofollow\"><img alt=\"Coverage-Master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1476389346c845debd461598349945fed25b4dc/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6f646c696e6c74642f646a616e676f2d616476616e6365642d66696c746572732f62616467652e7376673f6272616e63683d6d6173746572\"></a></td>\n<td><a href=\"https://pypi.python.org/pypi/django-advanced-filters\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2947946973deb8c98f21edc941c1a9890e8d2889/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d616476616e6365642d66696c746572732e737667\"></a></td>\n<td><a href=\"https://gitter.im/modlinltd/django-advanced-filters?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a></td>\n</tr>\n<tr><td>Develop</td>\n<td><a href=\"https://travis-ci.org/modlinltd/django-advanced-filters\" rel=\"nofollow\"><img alt=\"Build-Develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/128b678ca2e4ac7e93c6d20e3a8fe3d4e169eb3e/68747470733a2f2f7472617669732d63692e6f72672f6d6f646c696e6c74642f646a616e676f2d616476616e6365642d66696c746572732e7376673f6272616e63683d646576656c6f70\"></a></td>\n<td><a href=\"https://coveralls.io/github/modlinltd/django-advanced-filters?branch=develop\" rel=\"nofollow\"><img alt=\"Coverage-Develop\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/347edcca07ef326175bf4f1e743d89e523a8346f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6d6f646c696e6c74642f646a616e676f2d616476616e6365642d66696c746572732f62616467652e7376673f6272616e63683d646576656c6f70\"></a></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n</tbody>\n</table>\n<p>A django ModelAdmin mixin which adds advanced filtering abilities to the\nadmin.</p>\n<p>Mimics the advanced search feature in\n<a href=\"https://www.vtiger.com/\" rel=\"nofollow\">VTiger</a>, <a href=\"https://wiki.vtiger.com/index.php/Create_Custom_Filters\" rel=\"nofollow\">see here for more\ninfo</a></p>\n<div>\n<img alt=\"Creating via a modal\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/383a624c2c183e738f65dcf9a3232ebf9c36cec0/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6f646c696e6c74642f646a616e676f2d616476616e6365642d66696c746572732f646576656c6f702f73637265656e73686f742e706e67\" width=\"768px\">\n</div>\n<p>For release notes, see <a href=\"https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/CHANGELOG.rst\" rel=\"nofollow\">Changelog</a></p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Django &gt;= 1.7 (Django 1.7 - 2.1 on Python 2/3/PyPy2)</li>\n<li>django-braces == 1.4.0</li>\n<li>simplejson == 3.6.5</li>\n</ul>\n</div>\n<div id=\"installation-set-up\">\n<h2>Installation &amp; Set up</h2>\n<ol>\n<li>Install from pypi: <tt>pip install <span class=\"pre\">django-advanced-filters</span></tt></li>\n<li>Add both <tt>'advanced_filters'</tt> to <tt>INSTALLED_APPS</tt>.</li>\n<li>Add <tt><span class=\"pre\">url(r'^advanced_filters/',</span> <span class=\"pre\">include('advanced_filters.urls'))</span></tt>\nto your project\u2019s urlconf.</li>\n<li>Run <tt>python manage.py syncdb</tt> or <tt>python manage.py migrate</tt> (for django &gt;= 1.7)</li>\n</ol>\n</div>\n<div id=\"integration-example\">\n<h2>Integration Example</h2>\n<p>Extending a ModelAdmin is pretty straightforward:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">advanced_filters.admin</span> <span class=\"kn\">import</span> <span class=\"n\">AdminAdvancedFiltersMixin</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ProfileAdmin</span><span class=\"p\">(</span><span class=\"n\">AdminAdvancedFiltersMixin</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_filter</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'language'</span><span class=\"p\">,</span> <span class=\"s1\">'ts'</span><span class=\"p\">)</span>   <span class=\"c1\"># simple list filters</span>\n\n    <span class=\"c1\"># specify which fields can be selected in the advanced filter</span>\n    <span class=\"c1\"># creation form</span>\n    <span class=\"n\">advanced_filter_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'language'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'ts'</span><span class=\"p\">,</span>\n\n        <span class=\"c1\"># even use related fields as lookup fields</span>\n        <span class=\"s1\">'country__name'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'posts__title'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'comments__content'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>Adding a new advanced filter (see below) will display a new list filter\nnamed \u201cAdvanced filters\u201d which will list all the filter the currently\nlogged in user is allowed to use (by default only those he/she created).</p>\n<div id=\"custom-naming-of-fields\">\n<h3>Custom naming of fields</h3>\n<p>Initially, each field in <tt>advanced_filter_fields</tt> is resolved into an\nactual model field. That field\u2019s verbose_name attribute is then used as\nthe text of the displayed option. While uncommon, it occasionally makes\nsense to use a custom name, especially when following a relationship, as\nthe context then changes.</p>\n<p>For example, when a profile admin allows filtering by a user name as\nwell as a sales representative name, it\u2019ll get confusing:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ProfileAdmin</span><span class=\"p\">(</span><span class=\"n\">AdminAdvancedFiltersMixin</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">advanced_filter_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'sales_rep__name'</span><span class=\"p\">)</span>\n</pre>\n<p>In this case the field options will both be named \u201cname\u201d (by default).</p>\n<p>To fix this, use custom naming:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">ProfileAdmin</span><span class=\"p\">(</span><span class=\"n\">AdminAdvancedFiltersMixin</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">advanced_filter_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"s1\">'sales_rep__name'</span><span class=\"p\">,</span> <span class=\"s1\">'assigned rep'</span><span class=\"p\">))</span>\n</pre>\n<p>Now, you will get two options, \u201cname\u201d and \u201cassigned rep\u201d.</p>\n</div>\n</div>\n<div id=\"adding-new-advanced-filters\">\n<h2>Adding new advanced filters</h2>\n<p>By default the mixin uses a template which extends django\u2019s built-in\n<tt>change_list</tt> template. This template is based off of grapelli\u2019s fork\nof this template (hence the \u2018grp\u2019 classes and funny looking javascript).</p>\n<p>The default template also uses the superb\n<a href=\"dimsemenov/Magnific-Popup\" rel=\"nofollow\">magnificPopup</a> which is currently bundled\nwith the application.</p>\n<p>Regardless of the above, you can easily write your own template which\nuses context variables <tt>{{ advanced_filters }}</tt> and\n<tt>{{ advanced_filters.formset }}</tt>, to render the advanced filter\ncreation form.</p>\n</div>\n<div id=\"structure\">\n<h2>Structure</h2>\n<p>Each advanced filter has only a couple of required fields when\nconstructed with the form; namely the title and a formset (consisting of\na form for each sub-query or rule of the filter query).</p>\n<p>Each form in the formset requires the following fields: <tt>field</tt>,\n<tt>operator</tt>, <tt>value</tt></p>\n<p>And allows the optional <tt>negate</tt> and <tt>remove</tt> fields.</p>\n<p>Let us go over each of the fields in a rule fieldset.</p>\n<div id=\"field\">\n<h3>Field</h3>\n<p>The list of all available fields for this specific instance of the\nModelAdmin as specific by the <tt>`advanced_filter_fields</tt>\nproperty. &lt;#integration-example&gt;`__</p>\n<div id=\"the-or-field\">\n<h4>The OR field</h4>\n<p><tt>OR</tt> is an additional field that is added to every rule\u2019s available\nfields.</p>\n<p>It allows constructing queries with <a href=\"https://docs.djangoproject.com/en/dev/topics/db/queries/#complex-lookups-with-q-objects\" rel=\"nofollow\">OR\nstatements</a>.\nYou can use it by creating an \u201cempty\u201d rule with this field \u201cbetween\u201d a\nset of 1 or more rules.</p>\n</div>\n</div>\n<div id=\"operator\">\n<h3>Operator</h3>\n<p>Query field suffixes which specify how the <tt>WHERE</tt> query will be\nconstructed.</p>\n<p>The currently supported are as follows: <tt>iexact</tt>, <tt>icontains</tt>,\n<tt>iregex</tt>, <tt>range</tt>, <tt>isnull</tt>, <tt>istrue</tt> and <tt>isfalse</tt></p>\n<p>For more detail on what they mean and how they function, see django\u2019s\n<a href=\"https://docs.djangoproject.com/en/dev/ref/models/querysets/#field-lookups\" rel=\"nofollow\">documentation on field\nlookups</a>.</p>\n</div>\n<div id=\"value\">\n<h3>Value</h3>\n<p>The value which the specific sub-query will be looking for, i.e the\nvalue of the field specified above, or in django query syntax:\n<tt>.filter(field=value)</tt></p>\n</div>\n<div id=\"negate\">\n<h3>Negate</h3>\n<p>A boolean (check-box) field to specify whether this rule is to be\nnegated, effectively making it a \u201cexclude\u201d sub-query.</p>\n</div>\n<div id=\"remove\">\n<h3>Remove</h3>\n<p>Similarly to other <a href=\"https://docs.djangoproject.com/en/dev/topics/forms/formsets/\" rel=\"nofollow\">django\nformsets</a>,\nused to remove the selected line on submit.</p>\n</div>\n</div>\n<div id=\"editing-previously-created-advanced-filters\">\n<h2>Editing previously created advanced filters</h2>\n<p>The <tt>AdvancedFilterAdmin</tt> class (a subclass of <tt>ModelAdmin</tt>) is\nprovided and registered with <tt>AdvancedFilter</tt> in admin.py module.</p>\n<p>The model\u2019s change_form template is overridden from grapelli\u2019s/django\u2019s\nstandard template, to mirror the add form modal as closely as possible.</p>\n<p><em>Note:</em> currently, adding new filters from the ModelAdmin change page is\nnot supported.</p>\n</div>\n<div id=\"query-serialization\">\n<h2>Query Serialization</h2>\n<p><strong>TODO:</strong> write a few words on how serialization of queries is done.</p>\n</div>\n<div id=\"model-correlation\">\n<h2>Model correlation</h2>\n<p>Since version 1.0, <tt>AdvancedFilter</tt> are tightly coupled with a specific model\nusing the <tt>model</tt> field and the app_label.Name template.\nOn creation, <tt>model</tt> is populated based on the admin changelist it\u2019s created\nin.</p>\n<p>This change has a few benefits:</p>\n<ol>\n<li>The mixin can be used with multiple <tt>ModelAdmin</tt> classes while\nperforming specific query serialization and field validation that are\nat the base of the filter functionality.</li>\n<li>Users can edit previously created filters outside of the\ncontext of a changelist, as we do in the\n<tt>`AdvancedFilterAdmin</tt> &lt;#editing-previously-created-advanced-filters&gt;`__.</li>\n<li>Limit the <tt>AdvancedListFilters</tt> to limit queryset (and thus, the\nunderlying options) to a specified model.</li>\n</ol>\n</div>\n<div id=\"views\">\n<h2>Views</h2>\n<p>The GetFieldChoices view is required to dynamically (using javascript)\nfetch a list of valid field choices when creating/changing an\n<tt>AdvancedFilter</tt>.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>Add permission user/group selection functionality to the filter form</li>\n<li>Allow toggling of predefined templates (grappelli / vanilla django\nadmin), and front-end features.</li>\n<li>Support more (newer) python/django versions</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"changelog-rendering-is-hard\">\n<h3>1.1.1 - CHANGELOG rendering is hard</h3>\n<p>This release is for fixing the bug when installing with specific environment (\nlocale that defaults to CP-1252).</p>\n<div id=\"bug-fixes\">\n<h4>Bug fixes</h4>\n<ul>\n<li>Add encoding=\u2019utf-8\u2019 to open() in setup.py (Merge 2fe81aa)</li>\n</ul>\n</div>\n<div id=\"docs-other\">\n<h4>Docs / Other</h4>\n<ul>\n<li>add CONTRIBUTING.rst with common processes (Merge ee7907e)</li>\n<li>Update issue templates (Merge ee7907e)</li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h4>Contributors</h4>\n<ul>\n<li>Rebecca Turner</li>\n<li>Pavel Savchenko</li>\n</ul>\n</div>\n</div>\n<div id=\"the-future-is-bright\">\n<h3>1.1.0 - The future is bright</h3>\n<p>This release highlights support for Django 2.0 and 2.1 as well as\ndeprecating support for versions Django &lt; 1.7 and Python 2.6 and 3.3</p>\n<div id=\"id1\">\n<h4>Bug fixes</h4>\n<ul>\n<li>bump django-braces==1.13 for Django 2 support (Merge 80e055e)</li>\n<li>use request context processor in test_project (Merge 80e055e)</li>\n</ul>\n</div>\n<div id=\"misc\">\n<h4>Misc.</h4>\n<ul>\n<li>ignore .DS_Store</li>\n<li>fixes for Django 2.0 and 1.11, update tests (Merge 80e055e)</li>\n<li>test in Django 2.1 (Merge d8d236d)</li>\n<li>add updated migrations of model attributes (Merge 80e055e)</li>\n<li>fix ValueError while creating empty form (Merge d8d236d)</li>\n<li>python 2.6 and django &lt; 1.7 are deprecated</li>\n<li>lower and upper bounds in install_requires</li>\n<li>avoid all-catch except clause (Merge 80e055e)</li>\n</ul>\n</div>\n<div id=\"tests\">\n<h4>Tests</h4>\n<ul>\n<li>correct tox env django spec for ver 1.11 (Merge 80e055e)</li>\n<li>correct make_query assertion for Django&gt;=2 (Merge 80e055e)</li>\n<li>update pytest-django in diff. envs + tox (Merge d8d236d)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>Contributors</h4>\n<ul>\n<li>Goncalo Gomes</li>\n<li>predatell</li>\n<li>Petr Dlouh\u00fd</li>\n<li>benny daon</li>\n<li>Pavel Savchenko</li>\n</ul>\n</div>\n</div>\n<div id=\"fix-pypi-fail\">\n<h3>1.0.7.1 - Fix PyPi fail</h3>\n<ul>\n<li>Equivalent to the prev version, bumped since we can\u2019t reupload the files to PyPi.</li>\n</ul>\n</div>\n<div id=\"the-holiday-edition\">\n<h3>1.0.7 - The holiday edition</h3>\n<p>This is mostly a minor release with the biggest being the <cite>AdvancedFilterForm.Media</cite> fix, 2 additional translations and bunch of docs cleanup (thanks everyone)!</p>\n<p>Changes since 1.0.6:</p>\n<div id=\"id3\">\n<h4>Bug Fixes</h4>\n<ul>\n<li>Fix AdvancedFilterForm Media declaration</li>\n<li>Fix pep8: E128 on forms.py (Merge d7acb36)</li>\n</ul>\n</div>\n<div id=\"features\">\n<h4>Features</h4>\n<ul>\n<li>Add Japanese locale (Merge d7acb36)</li>\n<li>Add Spanish locale (Merge 1a482cf)</li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h4>Documentation:</h4>\n<ul>\n<li>a bit of polishing (Merge 4c88ea3)</li>\n<li>removing confusing migrations paragraph (Merge 4c88ea3)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h4>Contributors:</h4>\n<ul>\n<li>KINOSHITA Shinji</li>\n<li>Pavel Savchenko</li>\n<li>Benny Daon</li>\n<li>Mathieu Richardoz</li>\n<li>Jos\u00e9 S\u00e1nchez Moreno</li>\n</ul>\n</div>\n</div>\n<div id=\"bout-time\">\n<h3>1.0.6 - Bout Time</h3>\n<p>This release is long overdue, and includes some important fixes as well as general improvements to code and documentation.</p>\n<div id=\"id5\">\n<h4>Bug Fixes</h4>\n<ul>\n<li>fixing TypeError: can only concatenate tuple (not \u201clist\u201d) to tuple</li>\n<li>ensure select2 is included last (Merge 9831ba5)</li>\n<li>add script to load jQuery globally</li>\n<li>remove invalid template variables</li>\n<li>fix input focusing error in chrome</li>\n<li>fix error when one missing range parameter caused error + test (Merge 365b646)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h4>Features</h4>\n<ul>\n<li>don\u2019t override original change_list_templates in AdminAdvancedFiltersMixin</li>\n<li>make date range placeholder more pleasant (Merge 365b646)</li>\n<li>add created_at field</li>\n<li>Russian locale provided</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h4>Documentation</h4>\n<blockquote>\n<ul>\n<li>make it clear easy-select2 is not required anymore (Merge 9831ba5)</li>\n<li>Clarify how to import AdminAdvancedFiltersMixin in README</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id8\">\n<h4>Tests</h4>\n<blockquote>\n<ul>\n<li>add more fields/filter to test ModelAdmin</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id9\">\n<h4>Contributors</h4>\n<blockquote>\n<ul>\n<li>Grigoriy Beziuk</li>\n<li>\u041d\u0438\u043a\u0438\u0442\u0430 \u041a\u043e\u043d\u0438\u043d</li>\n<li>Pavel Savchenko</li>\n<li>Yuval Adam</li>\n<li>Petr Dlouh\u00fd</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"compatibility-bump\">\n<h3>1.0.5 - Compatibility bump</h3>\n<div id=\"bugs\">\n<h4>Bugs</h4>\n<ul>\n<li>updated AdvancedFilterQueryForm to include numeric comparison operators (Merge d3ee9f4)</li>\n<li>Fixed a bug where editing an existing Advanced Filter defaulted all operators to \u2018Equals\u2019 (Merge d3ee9f4)</li>\n<li>set AFQFormSet extra=0 instead of extra=1. I did this because having to check Delete is not clear to end users. (Merge d3ee9f4)</li>\n<li>changed the Advanced Filter admin so you a User by default can only view/edit filters that they create (unless they are a superuser) (Merge d3ee9f4)</li>\n<li>Fixed failing tests. Fixed bug where users weren\u2019t properly getting permissions to change or delete their filters (Merge d3ee9f4)</li>\n<li>changed solution for extra form appearing on editing. Now initialize form checks for falsy value for extra rather than extra just being None (Merge d3ee9f4)</li>\n<li>removed \u2018not instance from requirements for no extras (Merge d3ee9f4)</li>\n<li>pep8 fix (Merge d3ee9f4)</li>\n<li>Fixed labeling error with \u2018Greater Than or Equal To\u2019 (Merge d3ee9f4)</li>\n<li>Changes URL declaration to avoid deprecated pattern</li>\n<li>select2 only initializes if there are choices available. otherwise, the standard text input will be used (Merge 35d7063)</li>\n<li>Revert \u201cselect2 only initializes if there are choices available. otherwise, the standard text input will be used\u201d (Merge 35d7063)</li>\n<li>updated query for choices for select2 field so that it will take only distinct choices. This allows max_choices to be the maximum unique choices. (Merge 35d7063)</li>\n<li>Changes URL declaration to avoid deprecated pattern (Merge 35d7063)</li>\n<li>refactored retrieval of choices so that the db is getting distinct values; added test (Merge 35d7063)</li>\n<li>pep8 (Merge 35d7063)</li>\n<li>Use order_by to avoid ambiguity</li>\n<li>drop django-easy-select2 and include select2 directly</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h4>Tests</h4>\n<ul>\n<li>test with both Python 3.5 and Django 1.10</li>\n<li>removed print statement from test (Merge 35d7063)</li>\n<li>fixed failing test to account for new distinct for max choices (Merge 35d7063)</li>\n<li>added test to make sure all operators are properly restored from Queries (Merge d3ee9f4)</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h4>Contributors</h4>\n<ul>\n<li>Pavel Savchenko</li>\n<li>PJ Passalacqua</li>\n<li>Hermano Cabral</li>\n</ul>\n</div>\n</div>\n<div id=\"unbreak-python-3\">\n<h3>1.0.4 - Unbreak Python 3</h3>\n<p>This release contains a fix to allow distribution installation on Python 3 which was broken since 1.0.2</p>\n</div>\n<div id=\"the-package-fix\">\n<h3>1.0.3 - The Package Fix</h3>\n<p>This is a quick fix for packaging (setup.py) errors and documentation.</p>\n<div id=\"id12\">\n<h4>Bugs</h4>\n<ul>\n<li>add missing Django 1.7 migrations</li>\n<li>README updated to mention <tt>manage.py migrate</tt> command</li>\n<li>Use ReST for README and CHANGELOG: avoid conversion from markdown</li>\n</ul>\n</div>\n</div>\n<div id=\"a-better-future\">\n<h3>1.0.2 - A Better Future</h3>\n<p>This release features better test coverage and support for Django 1.9.</p>\n<div id=\"id13\">\n<h4>Bugs</h4>\n<ul>\n<li>stretch formset table to the modal container width</li>\n<li>toggle advanced <tt>vendor/jquery</tt> dir according to Django version</li>\n<li>retain support older Django versions</li>\n<li>clean up legacy tags in templates</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h4>Tests</h4>\n<ul>\n<li>add admin views tests</li>\n<li>add Django 1.9 to test matrix</li>\n<li>other minor improvements</li>\n</ul>\n</div>\n<div id=\"docs\">\n<h4>Docs</h4>\n<ul>\n<li>Improve README with a newer screenshot and pretty tables for badges</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h4>Contributors:</h4>\n<ul>\n<li>Pavel Savchenko</li>\n<li>Leonardo J. Caballero G</li>\n<li>Schuyler Duveen</li>\n</ul>\n</div>\n</div>\n<div id=\"a-public-release\">\n<h3>1.0.1 - A Public Release</h3>\n<div id=\"id16\">\n<h4>Bugs</h4>\n<ul>\n<li>proper support for py26 and py3X and different Django releases</li>\n<li>avoid querying all instances for choices</li>\n<li>resolve settings inside view and refine error handling</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h4>Tests</h4>\n<ul>\n<li>add doctests to the <tt>form_helpers</tt></li>\n<li>add tests for <tt>forms</tt></li>\n<li>add test case <tt>views.TestGetFieldChoicesView</tt></li>\n<li>setup.py/travis: add <tt><span class=\"pre\">test-reqs.txt</span></tt> as extras_require</li>\n<li>refactor testing to use <tt>py.test</tt> and run <tt>tox</tt> from <tt>setup.py</tt></li>\n<li>travis: use latest version of each Django release</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h4>Docs:</h4>\n<ul>\n<li><tt>README</tt>: explain what we test against</li>\n</ul>\n</div>\n</div>\n<div id=\"first-contact\">\n<h3>1.0 - First contact</h3>\n<div id=\"major-changes\">\n<h4>Major changes</h4>\n<ul>\n<li>Add a new (required) field\n<tt>`AdvancedFilter.model</tt> &lt;<a href=\"https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#model-correlation\" rel=\"nofollow\">https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#model-correlation</a>&gt;`__</li>\n<li>Add parsing query dict into initialized formsets (allows for <a href=\"https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#editing-previously-created-advanced-filters\" rel=\"nofollow\">editing\nexisting\ninstance</a>).</li>\n<li>Add\n<tt>`AdvancedFilterAdmin</tt> &lt;#editing-previously-created-advanced-filters&gt;`__\nfor actually accessing and <cite>editing existing ``AdvancedFilter`</cite>\ninstances &lt;<a href=\"https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#editing-previously-created-advanced-filters\" rel=\"nofollow\">https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#editing-previously-created-advanced-filters</a>&gt;`__.</li>\n<li>Use <a href=\"https://github.com/asyncee/django-easy-select2\" rel=\"nofollow\">Select2</a> and\nan AJAX view to dynamically populate <tt>`field</tt>\noptions &lt;<a href=\"https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#fields\" rel=\"nofollow\">https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#fields</a>&gt;`__.</li>\n<li>Add proper support for nested serialization of queries.</li>\n</ul>\n</div>\n<div id=\"minor-changes\">\n<h4>Minor changes</h4>\n<ul>\n<li>Implement more <tt>`operators</tt> &lt;<a href=\"https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#operators\" rel=\"nofollow\">https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#operators</a>&gt;`__ (<tt>isnull</tt>,\n<tt>istrue</tt> and <tt>isfalse</tt>)</li>\n<li>Allow <a href=\"https://raw.githubusercontent.com/modlinltd/django-advanced-filters/develop/README.rst#custom-naming-of-fields\" rel=\"nofollow\">custom verbose naming of fields in\nadvanced_filter_fields</a></li>\n<li>Add helper methods to the model to hide (and decouple) core\nserialization functionality from users.</li>\n<li>Strip whitespace in field values validation</li>\n<li>Setup and packaging (<tt>setup.py</tt>/<tt>MANIFEST.in</tt>)</li>\n<li>Hide <tt>QSerializer</tt> calling logic in the model</li>\n<li>Allow modifying <tt>advanced_filter_form</tt> property (defaults to\n<tt>AdvancedFilterForm</tt>)</li>\n<li>Correct documentation regarding position of mixin in subclass (issue\n#1)</li>\n</ul>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4749450, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "2b92b8811103121ed3e933fd9849df7f", "sha256": "78f7068e5ee699900a42e327cc68893fb174188bb899d0e4bc527b713790f4ef"}, "downloads": -1, "filename": "django-advanced-filters-1.0.1.tar.gz", "has_sig": false, "md5_digest": "2b92b8811103121ed3e933fd9849df7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36052, "upload_time": "2016-01-03T10:27:29", "upload_time_iso_8601": "2016-01-03T10:27:29.589136Z", "url": "https://files.pythonhosted.org/packages/be/b4/18a7eb58550afb3fd8fbf88405ba7f00506e621bbcaac522bae4ca709843/django-advanced-filters-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "549147fb12e85f62fb8a326336c72ada", "sha256": "56e0f875b0887a0a1ab7518f7ed5d29d740187b1cfee0dd1e0c432be716123c5"}, "downloads": -1, "filename": "django-advanced-filters-1.0.2.tar.gz", "has_sig": false, "md5_digest": "549147fb12e85f62fb8a326336c72ada", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36815, "upload_time": "2016-03-20T09:16:56", "upload_time_iso_8601": "2016-03-20T09:16:56.024356Z", "url": "https://files.pythonhosted.org/packages/18/67/74d7001e243bf87a54b1e36ef06f9fd6af1d68664a993efc11a2527e6a3c/django-advanced-filters-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "98a43e882e5fd773405abc141039cab2", "sha256": "f011487cd3851ec83c08460e4db1f3413a325398d86cd255f8b47aee48c9ce1d"}, "downloads": -1, "filename": "django-advanced-filters-1.0.3.tar.gz", "has_sig": false, "md5_digest": "98a43e882e5fd773405abc141039cab2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36843, "upload_time": "2016-03-21T09:13:20", "upload_time_iso_8601": "2016-03-21T09:13:20.663350Z", "url": "https://files.pythonhosted.org/packages/e6/da/5bd3cf1698832868e32d1974fa1e484a81ed4b2feafa50b76b34ef9c1ca0/django-advanced-filters-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "21617c4eab185041b8d8fb386f0c7ba4", "sha256": "0f09a98a84ae2d5dfed17fef36e4bd4a1d5979c2938553e3be59d7f30564dab6"}, "downloads": -1, "filename": "django-advanced-filters-1.0.4.tar.gz", "has_sig": false, "md5_digest": "21617c4eab185041b8d8fb386f0c7ba4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37037, "upload_time": "2016-03-21T10:48:02", "upload_time_iso_8601": "2016-03-21T10:48:02.533830Z", "url": "https://files.pythonhosted.org/packages/e9/99/2d7201a6de4fee99b601c70ea1cc0dfc323bdd735f61db9859b72396c133/django-advanced-filters-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "bb327a75f5445f9b95991fe68e798ade", "sha256": "b13e5116ba4305032c46268b8ba77c2423f493365a22ef232700b5bb76ea4059"}, "downloads": -1, "filename": "django_advanced_filters-1.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "bb327a75f5445f9b95991fe68e798ade", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 69926, "upload_time": "2017-01-03T19:04:35", "upload_time_iso_8601": "2017-01-03T19:04:35.601665Z", "url": "https://files.pythonhosted.org/packages/2e/fb/2071cd3ab5b034bd14897730dcea142631ad47d042738f9cf1c8a4595abc/django_advanced_filters-1.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e05ec04f36474755d4bef9abad387fa6", "sha256": "30712b790ff4cb6344b0d690f759ffcccba42f64cf67aabdc3c04b189fb84067"}, "downloads": -1, "filename": "django-advanced-filters-1.0.5.tar.gz", "has_sig": false, "md5_digest": "e05ec04f36474755d4bef9abad387fa6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58773, "upload_time": "2017-01-03T19:04:37", "upload_time_iso_8601": "2017-01-03T19:04:37.183662Z", "url": "https://files.pythonhosted.org/packages/2e/08/6fb577c0a5d95bf1ee7d0ef50209e4f5ffb86cb5fb12f6e7e585e17239d9/django-advanced-filters-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "09581ab70d4c7600098c5f622c367482", "sha256": "67e52a6f4016ab14e7995d4968b91e72a835e8199e44296d42806d0f481b1105"}, "downloads": -1, "filename": "django_advanced_filters-1.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "09581ab70d4c7600098c5f622c367482", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 74723, "upload_time": "2017-09-03T06:48:50", "upload_time_iso_8601": "2017-09-03T06:48:50.452972Z", "url": "https://files.pythonhosted.org/packages/e1/d1/8959d1815adf840a204bfed9e208148607dc2db109a5e9a719a2c51171c2/django_advanced_filters-1.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c15ec5da703913fdb1b0a9e223c7c034", "sha256": "7e3061f470d6b1be10dd368810133c9fbe3d01a6299975752bef891c00061dc4"}, "downloads": -1, "filename": "django-advanced-filters-1.0.6.tar.gz", "has_sig": false, "md5_digest": "c15ec5da703913fdb1b0a9e223c7c034", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61736, "upload_time": "2017-09-03T06:48:51", "upload_time_iso_8601": "2017-09-03T06:48:51.938945Z", "url": "https://files.pythonhosted.org/packages/83/e7/0de3b34e761a62f892b8cb7298c7c17784ccd8408312a082bdce4dcc4616/django-advanced-filters-1.0.6.tar.gz", "yanked": false}], "1.0.7.1": [{"comment_text": "", "digests": {"md5": "8b50f87eb36a91e7ccd3c743e23660fd", "sha256": "ed1b13c3ae320f45b3a2721a4f0fdbdc8fa5f605a976cb6a95468d784aa94d43"}, "downloads": -1, "filename": "django_advanced_filters-1.0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8b50f87eb36a91e7ccd3c743e23660fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 74064, "upload_time": "2018-03-19T17:19:40", "upload_time_iso_8601": "2018-03-19T17:19:40.976696Z", "url": "https://files.pythonhosted.org/packages/1e/08/53648b55f13c831a70d722be39a3b1addadf4f31b4b03cae149e11b9fbff/django_advanced_filters-1.0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c9690926a50a6b50303e89f7e8f7ddf", "sha256": "45840def08562eade6fcb8dfb5b0b6a719c0e5d89ec09477ad5a32af75909ad9"}, "downloads": -1, "filename": "django-advanced-filters-1.0.7.1.tar.gz", "has_sig": false, "md5_digest": "1c9690926a50a6b50303e89f7e8f7ddf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68268, "upload_time": "2018-03-19T17:19:43", "upload_time_iso_8601": "2018-03-19T17:19:43.135568Z", "url": "https://files.pythonhosted.org/packages/71/73/a4ff46285f8b6baa7ab6033f543a9704f1998961900e2623e63186f742e6/django-advanced-filters-1.0.7.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e97f7d418f61bac186df6d36d716a8fc", "sha256": "4d9c6a3ca38f212fa0000f0a35426a046ead98d8608ffe341912dfcc3b0da87f"}, "downloads": -1, "filename": "django_advanced_filters-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "e97f7d418f61bac186df6d36d716a8fc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 67272, "upload_time": "2018-09-23T11:36:05", "upload_time_iso_8601": "2018-09-23T11:36:05.705904Z", "url": "https://files.pythonhosted.org/packages/bc/d6/49dd01e1560cc2812d990c0268b12a47cd58597e1177bb7f46013a4cbd15/django_advanced_filters-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41cc7e56f75d65c473b21d53840186fc", "sha256": "adee9498daa65125584c4cc0d37f7636427366fb96cc707bef8133b1dc22c405"}, "downloads": -1, "filename": "django-advanced-filters-1.1.0.tar.gz", "has_sig": false, "md5_digest": "41cc7e56f75d65c473b21d53840186fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72645, "upload_time": "2018-09-23T11:36:07", "upload_time_iso_8601": "2018-09-23T11:36:07.543122Z", "url": "https://files.pythonhosted.org/packages/45/68/98aed982c7a56eb47dfed7cf47703c533b7bdc4ea65f85bae7fbf98c48eb/django-advanced-filters-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "538de122d5c822bd5d9e2cb4a665ed87", "sha256": "4b1cd3bea31a95de20192c6ecf211263c90576d2d0630f44e928713e483cb3da"}, "downloads": -1, "filename": "django_advanced_filters-1.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "538de122d5c822bd5d9e2cb4a665ed87", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 67433, "upload_time": "2019-01-28T10:17:50", "upload_time_iso_8601": "2019-01-28T10:17:50.218327Z", "url": "https://files.pythonhosted.org/packages/20/3f/43dcb990add286d572e57d26904a6fe0ed00322798da5c6b523ba5f63f27/django_advanced_filters-1.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61de1bedd819fac2cc7e14f015fc2cb9", "sha256": "3dc3af3b016b350adceb6458958238a5ed68cf90b579c315686129b3979bfcc7"}, "downloads": -1, "filename": "django-advanced-filters-1.1.1.tar.gz", "has_sig": false, "md5_digest": "61de1bedd819fac2cc7e14f015fc2cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73843, "upload_time": "2019-01-28T10:17:53", "upload_time_iso_8601": "2019-01-28T10:17:53.053920Z", "url": "https://files.pythonhosted.org/packages/d9/ec/61c872d95df3944f13c1c41d25b8ba9eecd2200fd0f43c274b6b0882252d/django-advanced-filters-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "538de122d5c822bd5d9e2cb4a665ed87", "sha256": "4b1cd3bea31a95de20192c6ecf211263c90576d2d0630f44e928713e483cb3da"}, "downloads": -1, "filename": "django_advanced_filters-1.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "538de122d5c822bd5d9e2cb4a665ed87", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 67433, "upload_time": "2019-01-28T10:17:50", "upload_time_iso_8601": "2019-01-28T10:17:50.218327Z", "url": "https://files.pythonhosted.org/packages/20/3f/43dcb990add286d572e57d26904a6fe0ed00322798da5c6b523ba5f63f27/django_advanced_filters-1.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61de1bedd819fac2cc7e14f015fc2cb9", "sha256": "3dc3af3b016b350adceb6458958238a5ed68cf90b579c315686129b3979bfcc7"}, "downloads": -1, "filename": "django-advanced-filters-1.1.1.tar.gz", "has_sig": false, "md5_digest": "61de1bedd819fac2cc7e14f015fc2cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73843, "upload_time": "2019-01-28T10:17:53", "upload_time_iso_8601": "2019-01-28T10:17:53.053920Z", "url": "https://files.pythonhosted.org/packages/d9/ec/61c872d95df3944f13c1c41d25b8ba9eecd2200fd0f43c274b6b0882252d/django-advanced-filters-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:46 2020"}