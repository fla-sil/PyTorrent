{"info": {"author": "Jonathan Ballet", "author_email": "jon@multani.info", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Buildout", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Topic :: Software Development :: Build Tools", "Topic :: System :: Systems Administration"], "description": "Introduction\n============\n\nThis recipe installs and configure `supervisor`_ according to a configuration\nfile.\n\nHow to use?\n===========\n\nYou can use by configuration your ``buildout.cfg`` configuration file like\nthis::\n\n    [buildout]\n    parts = supervisor\n\n    [supervisor]\n    recipe = jb.recipe.supervisor\n    configuration-file = supervisor-sample.conf\n\nYou can download a sample configuration file at\nhttps://github.com/multani/jb.recipe.supervisor/raw/master/supervisord-sample.conf\n\nRunning Buildout with this configuration file will generate:\n\n* a `supervisor`_ configuration file using the template from the\n  ``configuration-file`` settings as shown above;\n* ``bin/supervisord``, which is a script to run the `supervisor`_ daemon,\n  according to the content of the configuration file above ;\n* ``bin/supervisorctl``, which is a script to run the `supervisor`_ client,\n  according to the content of the configuration file above.\n\nAdditional settings\n===================\n\nBy default, the configuration file will end in\n``parts/PART_NAME/supervisord.conf``, but you can change it by setting the\n``output-dir`` in your configuration file::\n\n    [buildout]\n    parts = supervisor\n\n    [supervisor]\n    recipe = jb.recipe.supervisor\n    configuration-file = supervisor-sample.conf\n    output-dir = /foo/bar\n    # The configuration will end in /foo/bar/supervisord.conf\n\nThe configuration file is processed by `collective.recipe.template`_. It means\nyou can use Buildout variables inside your template, such as\n``${buildout:parts-directory}``, ``${_buildout_section_name_}``, or any valid\nsettings. See\nhttp://pypi.python.org/pypi/zc.buildout/1.5.2#variable-substitutions for more\ninformations.\n\n\nRelated projects\n================\n\n`collective.recipe.supervisor`_ is a similar project, but with a different\napproach. I liked to be able to configure `supervisor`_ from Buildout but I\nfound the syntax used by `collective.recipe.supervisor`_ to be confusing and\nreally ad-hoc.\n\n\n.. _supervisor: http://supervisord.org\n.. _collective.recipe.template: http://pypi.python.org/pypi/collective.recipe.template\n.. _collective.recipe.supervisor: http://pypi.python.org/pypi/collective.recipe.supervisor\n\n\n\n0.0.1 (2012-03-11)\n==================\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/multani/jb.recipe.supervisor", "keywords": "buildout recipe supervisor template", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "jb.recipe.supervisor", "package_url": "https://pypi.org/project/jb.recipe.supervisor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/jb.recipe.supervisor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/multani/jb.recipe.supervisor"}, "release_url": "https://pypi.org/project/jb.recipe.supervisor/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Recipe for installing Supervisor", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This recipe installs and configure <a href=\"http://supervisord.org\" rel=\"nofollow\">supervisor</a> according to a configuration\nfile.</p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use?</h2>\n<p>You can use by configuration your <tt>buildout.cfg</tt> configuration file like\nthis:</p>\n<pre>[buildout]\nparts = supervisor\n\n[supervisor]\nrecipe = jb.recipe.supervisor\nconfiguration-file = supervisor-sample.conf\n</pre>\n<p>You can download a sample configuration file at\n<a href=\"https://github.com/multani/jb.recipe.supervisor/raw/master/supervisord-sample.conf\" rel=\"nofollow\">https://github.com/multani/jb.recipe.supervisor/raw/master/supervisord-sample.conf</a></p>\n<p>Running Buildout with this configuration file will generate:</p>\n<ul>\n<li>a <a href=\"http://supervisord.org\" rel=\"nofollow\">supervisor</a> configuration file using the template from the\n<tt><span class=\"pre\">configuration-file</span></tt> settings as shown above;</li>\n<li><tt>bin/supervisord</tt>, which is a script to run the <a href=\"http://supervisord.org\" rel=\"nofollow\">supervisor</a> daemon,\naccording to the content of the configuration file above ;</li>\n<li><tt>bin/supervisorctl</tt>, which is a script to run the <a href=\"http://supervisord.org\" rel=\"nofollow\">supervisor</a> client,\naccording to the content of the configuration file above.</li>\n</ul>\n</div>\n<div id=\"additional-settings\">\n<h2>Additional settings</h2>\n<p>By default, the configuration file will end in\n<tt>parts/PART_NAME/supervisord.conf</tt>, but you can change it by setting the\n<tt><span class=\"pre\">output-dir</span></tt> in your configuration file:</p>\n<pre>[buildout]\nparts = supervisor\n\n[supervisor]\nrecipe = jb.recipe.supervisor\nconfiguration-file = supervisor-sample.conf\noutput-dir = /foo/bar\n# The configuration will end in /foo/bar/supervisord.conf\n</pre>\n<p>The configuration file is processed by <a href=\"http://pypi.python.org/pypi/collective.recipe.template\" rel=\"nofollow\">collective.recipe.template</a>. It means\nyou can use Buildout variables inside your template, such as\n<tt><span class=\"pre\">${buildout:parts-directory}</span></tt>, <tt>${_buildout_section_name_}</tt>, or any valid\nsettings. See\n<a href=\"http://pypi.python.org/pypi/zc.buildout/1.5.2#variable-substitutions\" rel=\"nofollow\">http://pypi.python.org/pypi/zc.buildout/1.5.2#variable-substitutions</a> for more\ninformations.</p>\n</div>\n<div id=\"related-projects\">\n<h2>Related projects</h2>\n<p><a href=\"http://pypi.python.org/pypi/collective.recipe.supervisor\" rel=\"nofollow\">collective.recipe.supervisor</a> is a similar project, but with a different\napproach. I liked to be able to configure <a href=\"http://supervisord.org\" rel=\"nofollow\">supervisor</a> from Buildout but I\nfound the syntax used by <a href=\"http://pypi.python.org/pypi/collective.recipe.supervisor\" rel=\"nofollow\">collective.recipe.supervisor</a> to be confusing and\nreally ad-hoc.</p>\n</div>\n<div id=\"id1\">\n<h2>0.0.1 (2012-03-11)</h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 752863, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8962b15b0b44877768a852929baa28e3", "sha256": "3b7a822803c690fc8b9af0f155343fe32c23e48a956ea96f480dd90796abbcf2"}, "downloads": -1, "filename": "jb.recipe.supervisor-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8962b15b0b44877768a852929baa28e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5203, "upload_time": "2012-03-11T12:20:37", "upload_time_iso_8601": "2012-03-11T12:20:37.341229Z", "url": "https://files.pythonhosted.org/packages/e4/64/fb0e9965067f718c3195a0f01a52804ac3595128b93512ba78cce1ddeec4/jb.recipe.supervisor-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8962b15b0b44877768a852929baa28e3", "sha256": "3b7a822803c690fc8b9af0f155343fe32c23e48a956ea96f480dd90796abbcf2"}, "downloads": -1, "filename": "jb.recipe.supervisor-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8962b15b0b44877768a852929baa28e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5203, "upload_time": "2012-03-11T12:20:37", "upload_time_iso_8601": "2012-03-11T12:20:37.341229Z", "url": "https://files.pythonhosted.org/packages/e4/64/fb0e9965067f718c3195a0f01a52804ac3595128b93512ba78cce1ddeec4/jb.recipe.supervisor-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:00 2020"}