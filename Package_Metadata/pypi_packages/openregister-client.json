{"info": {"author": "Ministry of Justice", "author_email": "dev@digital.justice.gov.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "Open Registers Client\n=====================\n\nUsage\n-----\n\n``openregister_client.registers.OpenRegister`` is the base class that accesses a single register and ignores field data typing information.\n``openregister_client.registers.Register`` and ``openregister_client.registers.AlphaRegister`` use\nthe \"register\" register to discover available registers and the field data types their items should contain.\nRecords, entries and items (the actual data contained in records) returned are ``dict`` subclasses that provide typed attributes to access the register data more easily.\n\nCurrently, only compatible with Python 3.6+.\n\nInstall using ``pip install openregister-client``.\n\nUsage samples:\n\n.. code-block:: python\n\n    # direct register usage; field types will not have correct types, but data can be loaded more simply\n    from openregister_client.registers import OpenRegister\n\n    country_register = OpenRegister(name='country')\n    country_record = country_register.get_record('GB')\n    print('The official name for GB is %s' % country_record.item.official_name)\n    if not country_record.item.is_current:\n        print('This country is not currently recognised')\n\n    # using register auto-discovery to process fields and datatypes\n    from openregister_client.registers import Register\n\n    register = Register()\n    territory_register = register.get_register('territory')\n    territory_items = sorted(map(lambda record: record.item, territory_register.get_records()), key=lambda item: item.territory)\n    for territory in territory_items:\n        print('The official name for territory %s is %s' % (territory.territory, territory.official_name))\n\n    # make a Django model class; works best when using auto-discovery\n    from openregister_client.django_compat.model_factory import ModelFactory\n    from openregister_client.registers import Register\n\n    country_register = Register().get_register('country')\n    with open('models.py', 'wt') as f:\n        f.write(ModelFactory(country_register).get_model_code())\n\n    # an API key can be provided when instantiating a register class\n    country_register = OpenRegister(name='country', api_key='YOUR API KEY')\n\nCaching is not implemented. Users of the library can store results of queries or subclass ``OpenRegister.request`` to add caching.\n\nConsuming non-json input formats is not supported and probably not necessary.\n\nDevelopment\n-----------\n\n.. image:: https://travis-ci.org/ministryofjustice/openregister-client.svg?branch=master\n    :target: https://travis-ci.org/ministryofjustice/openregister-client\n\n\nPlease report bugs and open pull requests on `GitHub`_.\n\nUse ``python setup.py test`` to run all tests.\n\nDistribute a new version by updating the ``VERSION`` tuple in ``openregister_client/__init__.py`` and run ``python setup.py sdist bdist_wheel upload``.\n\nTo-do\n-----\n\n* Do not paginate past the end since numbers of entries and records are known\n* Perhaps lower minimum Python version to 3.4 or 3.5; use ``typing`` module\n\nReferences\n----------\n\n* https://www.registers.service.gov.uk/\n* https://docs.registers.service.gov.uk/\n* http://openregister.github.io/specification/ (outdated?)\n* http://open-registers-docs.readthedocs.io/en/latest/ (deleted)\n\nCopyright\n---------\n\nCopyright (C) 2018 HM Government (Ministry of Justice Digital Services).\nSee LICENSE.txt for further details.\n\n.. _GitHub: https://github.com/ministryofjustice/openregister-client\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ministryofjustice/openregister-client", "keywords": "openregister govuk", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "openregister-client", "package_url": "https://pypi.org/project/openregister-client/", "platform": "", "project_url": "https://pypi.org/project/openregister-client/", "project_urls": {"Homepage": "https://github.com/ministryofjustice/openregister-client"}, "release_url": "https://pypi.org/project/openregister-client/0.3/", "requires_dist": null, "requires_python": "", "summary": "A client for reading data from Registers provided by Government Digital Services", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>openregister_client.registers.OpenRegister</tt> is the base class that accesses a single register and ignores field data typing information.\n<tt>openregister_client.registers.Register</tt> and <tt>openregister_client.registers.AlphaRegister</tt> use\nthe \u201cregister\u201d register to discover available registers and the field data types their items should contain.\nRecords, entries and items (the actual data contained in records) returned are <tt>dict</tt> subclasses that provide typed attributes to access the register data more easily.</p>\n<p>Currently, only compatible with Python 3.6+.</p>\n<p>Install using <tt>pip install <span class=\"pre\">openregister-client</span></tt>.</p>\n<p>Usage samples:</p>\n<pre><span class=\"c1\"># direct register usage; field types will not have correct types, but data can be loaded more simply</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openregister_client.registers</span> <span class=\"kn\">import</span> <span class=\"n\">OpenRegister</span>\n\n<span class=\"n\">country_register</span> <span class=\"o\">=</span> <span class=\"n\">OpenRegister</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'country'</span><span class=\"p\">)</span>\n<span class=\"n\">country_record</span> <span class=\"o\">=</span> <span class=\"n\">country_register</span><span class=\"o\">.</span><span class=\"n\">get_record</span><span class=\"p\">(</span><span class=\"s1\">'GB'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The official name for GB is </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">country_record</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">official_name</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">country_record</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">is_current</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'This country is not currently recognised'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># using register auto-discovery to process fields and datatypes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openregister_client.registers</span> <span class=\"kn\">import</span> <span class=\"n\">Register</span>\n\n<span class=\"n\">register</span> <span class=\"o\">=</span> <span class=\"n\">Register</span><span class=\"p\">()</span>\n<span class=\"n\">territory_register</span> <span class=\"o\">=</span> <span class=\"n\">register</span><span class=\"o\">.</span><span class=\"n\">get_register</span><span class=\"p\">(</span><span class=\"s1\">'territory'</span><span class=\"p\">)</span>\n<span class=\"n\">territory_items</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">record</span><span class=\"p\">:</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"p\">,</span> <span class=\"n\">territory_register</span><span class=\"o\">.</span><span class=\"n\">get_records</span><span class=\"p\">()),</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">item</span><span class=\"p\">:</span> <span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">territory</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">territory</span> <span class=\"ow\">in</span> <span class=\"n\">territory_items</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'The official name for territory </span><span class=\"si\">%s</span><span class=\"s1\"> is </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">territory</span><span class=\"o\">.</span><span class=\"n\">territory</span><span class=\"p\">,</span> <span class=\"n\">territory</span><span class=\"o\">.</span><span class=\"n\">official_name</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># make a Django model class; works best when using auto-discovery</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openregister_client.django_compat.model_factory</span> <span class=\"kn\">import</span> <span class=\"n\">ModelFactory</span>\n<span class=\"kn\">from</span> <span class=\"nn\">openregister_client.registers</span> <span class=\"kn\">import</span> <span class=\"n\">Register</span>\n\n<span class=\"n\">country_register</span> <span class=\"o\">=</span> <span class=\"n\">Register</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_register</span><span class=\"p\">(</span><span class=\"s1\">'country'</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'models.py'</span><span class=\"p\">,</span> <span class=\"s1\">'wt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">ModelFactory</span><span class=\"p\">(</span><span class=\"n\">country_register</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_model_code</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># an API key can be provided when instantiating a register class</span>\n<span class=\"n\">country_register</span> <span class=\"o\">=</span> <span class=\"n\">OpenRegister</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'country'</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'YOUR API KEY'</span><span class=\"p\">)</span>\n</pre>\n<p>Caching is not implemented. Users of the library can store results of queries or subclass <tt>OpenRegister.request</tt> to add caching.</p>\n<p>Consuming non-json input formats is not supported and probably not necessary.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<a href=\"https://travis-ci.org/ministryofjustice/openregister-client\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/ministryofjustice/openregister-client.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70703727c0d9d2cf3a0083b714da8d1d091c6ab1/68747470733a2f2f7472617669732d63692e6f72672f6d696e69737472796f666a7573746963652f6f70656e72656769737465722d636c69656e742e7376673f6272616e63683d6d6173746572\"></a>\n<p>Please report bugs and open pull requests on <a href=\"https://github.com/ministryofjustice/openregister-client\" rel=\"nofollow\">GitHub</a>.</p>\n<p>Use <tt>python setup.py test</tt> to run all tests.</p>\n<p>Distribute a new version by updating the <tt>VERSION</tt> tuple in <tt>openregister_client/__init__.py</tt> and run <tt>python setup.py sdist bdist_wheel upload</tt>.</p>\n</div>\n<div id=\"to-do\">\n<h2>To-do</h2>\n<ul>\n<li>Do not paginate past the end since numbers of entries and records are known</li>\n<li>Perhaps lower minimum Python version to 3.4 or 3.5; use <tt>typing</tt> module</li>\n</ul>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<ul>\n<li><a href=\"https://www.registers.service.gov.uk/\" rel=\"nofollow\">https://www.registers.service.gov.uk/</a></li>\n<li><a href=\"https://docs.registers.service.gov.uk/\" rel=\"nofollow\">https://docs.registers.service.gov.uk/</a></li>\n<li><a href=\"http://openregister.github.io/specification/\" rel=\"nofollow\">http://openregister.github.io/specification/</a> (outdated?)</li>\n<li><a href=\"http://open-registers-docs.readthedocs.io/en/latest/\" rel=\"nofollow\">http://open-registers-docs.readthedocs.io/en/latest/</a> (deleted)</li>\n</ul>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Copyright (C) 2018 HM Government (Ministry of Justice Digital Services).\nSee LICENSE.txt for further details.</p>\n</div>\n\n          </div>"}, "last_serial": 5457159, "releases": {"0.1rc1": [{"comment_text": "", "digests": {"md5": "718ac589db6e8f5e3991ffed8312f814", "sha256": "29447076ebc7d5864df26cd1203bda30c477110fda62fac0db1b99dd6e5b1360"}, "downloads": -1, "filename": "openregister_client-0.1rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "718ac589db6e8f5e3991ffed8312f814", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15949, "upload_time": "2017-04-24T16:12:52", "upload_time_iso_8601": "2017-04-24T16:12:52.344757Z", "url": "https://files.pythonhosted.org/packages/3b/6f/996d357b084cdb2d3c543002bac5e2b695d1a2fd19b595875c64050b928b/openregister_client-0.1rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fb3443b28f591f373206e46f25b907e", "sha256": "8c6a87f9d4baf52ccf570690bb3c1970a229177cb1590b52d8b79543f2e80ffc"}, "downloads": -1, "filename": "openregister-client-0.1rc1.tar.gz", "has_sig": false, "md5_digest": "1fb3443b28f591f373206e46f25b907e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12298, "upload_time": "2017-04-24T16:12:55", "upload_time_iso_8601": "2017-04-24T16:12:55.895027Z", "url": "https://files.pythonhosted.org/packages/8c/5b/80602ab0644e8b100389d1107533b777a539fc972e63089abd53bfa2c533/openregister-client-0.1rc1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "c61525cee7007b75a9b24d5e789f976c", "sha256": "fa4771da0c6164124786d4f6c9c4745c77dd2d199448a4bf5d603c5e25c5ad60"}, "downloads": -1, "filename": "openregister_client-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c61525cee7007b75a9b24d5e789f976c", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 16011, "upload_time": "2018-02-26T10:24:19", "upload_time_iso_8601": "2018-02-26T10:24:19.762409Z", "url": "https://files.pythonhosted.org/packages/73/f5/b1e287d848f2a04951350694a9bbcc5d7e4994469ac8192f3f6558ef8709/openregister_client-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58484f39fcd42cabea7884e5c06c6ccf", "sha256": "06faa1a19e8c3bbeec0d3e7cc14ab915727522895d09aacbb57d2ced8dc852d7"}, "downloads": -1, "filename": "openregister-client-0.2.tar.gz", "has_sig": false, "md5_digest": "58484f39fcd42cabea7884e5c06c6ccf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13292, "upload_time": "2018-02-26T10:24:13", "upload_time_iso_8601": "2018-02-26T10:24:13.086495Z", "url": "https://files.pythonhosted.org/packages/35/40/cabb3f201dfc7636eb53415a1c3efd9d09c2eba7aa5a3334048e480ee488/openregister-client-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e7cfd9ed3726c44bd40837f170054bc7", "sha256": "f6e4a69cac1ae9c15ba8af2ec90ca25564450a9fb58d300662d8056587b412eb"}, "downloads": -1, "filename": "openregister_client-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e7cfd9ed3726c44bd40837f170054bc7", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 13742, "upload_time": "2018-07-27T11:47:21", "upload_time_iso_8601": "2018-07-27T11:47:21.422079Z", "url": "https://files.pythonhosted.org/packages/9c/43/c7a240b00ab3baa10eedd461507adf04d0424cb4843ba99e14c7d4c6adec/openregister_client-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49b4f265e0d0044088a52c9a916f4e54", "sha256": "5e740179d37a4fe448931130bc01b6d4d629917965175ea7a932831dd3a56158"}, "downloads": -1, "filename": "openregister-client-0.3.tar.gz", "has_sig": false, "md5_digest": "49b4f265e0d0044088a52c9a916f4e54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13954, "upload_time": "2018-07-27T11:47:19", "upload_time_iso_8601": "2018-07-27T11:47:19.932626Z", "url": "https://files.pythonhosted.org/packages/84/c0/cc616cfc0db9a7a074b839020465708de6a8701ae4c05aaa1c2071e43819/openregister-client-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e7cfd9ed3726c44bd40837f170054bc7", "sha256": "f6e4a69cac1ae9c15ba8af2ec90ca25564450a9fb58d300662d8056587b412eb"}, "downloads": -1, "filename": "openregister_client-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e7cfd9ed3726c44bd40837f170054bc7", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 13742, "upload_time": "2018-07-27T11:47:21", "upload_time_iso_8601": "2018-07-27T11:47:21.422079Z", "url": "https://files.pythonhosted.org/packages/9c/43/c7a240b00ab3baa10eedd461507adf04d0424cb4843ba99e14c7d4c6adec/openregister_client-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49b4f265e0d0044088a52c9a916f4e54", "sha256": "5e740179d37a4fe448931130bc01b6d4d629917965175ea7a932831dd3a56158"}, "downloads": -1, "filename": "openregister-client-0.3.tar.gz", "has_sig": false, "md5_digest": "49b4f265e0d0044088a52c9a916f4e54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13954, "upload_time": "2018-07-27T11:47:19", "upload_time_iso_8601": "2018-07-27T11:47:19.932626Z", "url": "https://files.pythonhosted.org/packages/84/c0/cc616cfc0db9a7a074b839020465708de6a8701ae4c05aaa1c2071e43819/openregister-client-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:37 2020"}