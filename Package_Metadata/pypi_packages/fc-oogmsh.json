{"info": {"author": "Francois Cuvelier", "author_email": "cuvelier@math.univ-paris13.fr", "bugtrack_url": null, "classifiers": ["Topic :: Scientific/Engineering"], "description": ".. _gmsh: http://gmsh.info\n   \n.. _fc-oogmsh: http://www.math.univ-paris13.fr/~cuvelier/software/fc-oogmsh-Python.html\n   \n.. _www.python.org: http://www.python.org/\n\n.. _python: http://www.python.org/\n   \n.. _Anaconda: https://www.anaconda.com\n\n.. _Miniconda: https://conda.io/miniconda.html\n\n.. _Canopy: https://www.enthought.com/product/canopy/\n\n.. image:: http://www.math.univ-paris13.fr/~cuvelier/software/codes/Python/fc-oogmsh/pyfc-oogmsh_400.png\n   :width: 200px\n   :align: left\n\nThe **fc\\_oogmsh** Python package make it possible to generate mesh files from \n*.geo* file by using `gmsh`_ which must be installed. It's also possible\nwith the ``ooGmsh2`` or ``ooGmsh4`` class to read the mesh file and to store its contains in more user-friendly form. \nThis package must be regarded as a very simple interface between gmsh files and Python. \nSo you are free to create any objects you want from an ``ooGmsh2`` or ``ooGmsh4`` object.\nThe ``ooGmsh2`` is used to read MSH files stored with format version '2.2'  and the ``ooGmsh4`` class is used for formats version '4.0' and '4.1'\n\n   \n.. csv-table:: Package test on\n   :header: \"System\", \"Python\", `gmsh`_\n   :widths: 12, 12, 12\n\n   \n   **CentOS 7.6**, \"2,7.16, 3.5.7, 3.6.8, 3.7.3 (`python`_)\", \"4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6\"\n   **Debian 9.9**, \"2,7.16, 3.5.7, 3.6.8, 3.7.3 (`python`_)\", \"4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6\"\n   **Fedora 29**, \"2,7.16, 3.5.7, 3.6.8, 3.7.3 (`python`_)\", \"4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6\"\n   **OpenSuse 15.0**, \"3.5.7, 3.6.8, 3.7.3 (`python`_)\", \"4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6\"\n   **Ubuntu 18.04**, \"2,7.16, 3.5.7, 3.6.8, 3.7.3 (`python`_)\", \"4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6\"\n   **Windows 10 (1809)**, \"3.6.8, 3.7.3 (`python`_)\", \"4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6\"\n   **MacOS Mojave (10.14.4)**, \"3.5.4, 3.6.8, 3.7.3 (`python`_)\", \"4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6\"\n                        \n   \n\nDocumentation is available on `fc-oogmsh`_ dedicated web page.\n\nInstallation:\n-------------\n\nThe **fc\\_oogmsh** Python package is available from the Python Package Index, so to install/upgrade simply type\n\n.. code:: \n\n    pip install fc_oogmsh -U\n    \nConfiguration:\n--------------\n\nOne have to configure the package for using with `gmsh`_.\nFor the default configuration we run under Python:\n\n.. code:: python\n\n    import fc_oogmsh\n    fc_oogmsh.configure()\n    \nThe function ``fc_oogmsh.configure()`` try to guess where is the **gmsh** binary. \nIf this command failed or if we want to specify the **gmsh** binary location, one can use the\n``gmsh`` option to specify the **gmsh** binary file with full path.\n\n- For example, under Linux:\n\n  .. code:: python\n\n      import fc_oogmsh\n      fc_oogmsh.configure(gmsh='/usr/local/GMSH/gmsh-4.2.0-Linux/bin/gmsh')\n      \n- For example,  under Windows:\n\n  .. code:: python\n  \n      import fc_oogmsh\n      fc_oogmsh.configure(gmsh=r'C:\\Users\\toto\\GMSH\\gmsh-4.2.0-Windows\\gmsh.exe')\n      \n- For example,  under MacOS:\n\n  .. code:: python\n  \n      import fc_oogmsh\n      fc_oogmsh.configure(gmsh='/Users/toto/GMSH/4.2.0/Gmsh.app/Contents/MacOS/gmsh')\n      \nNow, it's possible to run one of the demo functions \n\n.. code:: python\n\n      import fc_oogmsh\n      fc_oogmsh.demo02()\n      \nThe output of the ``demo02()`` function under Linux is::\n\n      ***********************\n      Running demo02 function\n      ***********************\n      *** Build mesh file\n      [fc_oogmsh] Using input file: /home/cuvelier/Travail/Recherch/python/fc-oogmsh/src/fc_oogmsh/geodir/2d/condenser11.geo\n      [fc_oogmsh] Overwritting mesh file /home/cuvelier/.local/share/fc_oogmsh/meshes/condenser11-25.msh\n      [fc_oogmsh] Use option verbose=3 to see gmsh output\n      *** Read mesh file\n      *** Print oGh ->\n      ooGmsh4 object \n          dim : 2\n            d : 2\n        types : [1 2]\n          nq : 3483\n            q : ndarray object[float64], size (2, 3483)\n      toGlobal: ndarray object[int32], size (3483,)\n      Entities:<class 'fc_oogmsh.msh.Entities'>\n      Nodes   :<class 'fc_oogmsh.msh.Nodes'>\n      Elements:<class 'fc_oogmsh.msh.Elements'>\n\nExamples usage:\n---------------\n\n-  We use the geometry file ``condenser11.geo`` given with the package to generate a 2D mesh file\n\n   .. code:: python\n   \n       meshfile=fc_oogmsh.buildmesh2d('condenser11',25,force=True)\n       \n\n   The output of this command is::\n   \n      fc_oogmsh] Using input file: /home/cuvelier/Travail/Recherch/python/fc-oogmsh/src/fc_oogmsh/geodir/2d/condenser11.geo\n      [fc_oogmsh] Overwritting mesh file /home/cuvelier/.local/share/fc_oogmsh/meshes/condenser11-25.msh\n      [fc_oogmsh] Use option verbose=3 to see gmsh output\n   \n      \n   Thereafter one can read the mesh file by using the  ``ooGmsh4`` object constructor and print some \n   informations\n   \n   .. code:: python\n   \n       oGh=fc_oogmsh.ooGmsh4(meshfile)\n       print('*** Print oGh ->')\n       print(oGh)\n        \n   The output of these commands are::\n    \n      *** Print oGh ->\n      ooGmsh4 object \n          dim : 2\n            d : 2\n        types : [1 2]\n          nq : 3483\n            q : ndarray object[float64], size (2, 3483)\n      toGlobal: ndarray object[int32], size (3483,)\n      Entities:<class 'fc_oogmsh.msh.Entities'>\n      Nodes   :<class 'fc_oogmsh.msh.Nodes'>\n      Elements:<class 'fc_oogmsh.msh.Elements'>", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.math.univ-paris13.fr/~cuvelier/software", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "fc-oogmsh", "package_url": "https://pypi.org/project/fc-oogmsh/", "platform": "Linux", "project_url": "https://pypi.org/project/fc-oogmsh/", "project_urls": {"Homepage": "http://www.math.univ-paris13.fr/~cuvelier/software"}, "release_url": "https://pypi.org/project/fc-oogmsh/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Generate and read mesh files by using gmsh and given .geo files", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"http://www.math.univ-paris13.fr/~cuvelier/software/codes/Python/fc-oogmsh/pyfc-oogmsh_400.png\" class=\"align-left\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/780c616bb2d4e4d3ccbe84d6faa1932abc4f643c/687474703a2f2f7777772e6d6174682e756e69762d706172697331332e66722f7e637576656c6965722f736f6674776172652f636f6465732f507974686f6e2f66632d6f6f676d73682f707966632d6f6f676d73685f3430302e706e67\" width=\"200px\">\n<p>The <strong>fc_oogmsh</strong> Python package make it possible to generate mesh files from\n<em>.geo</em> file by using <a href=\"http://gmsh.info\" rel=\"nofollow\">gmsh</a> which must be installed. It\u2019s also possible\nwith the <tt>ooGmsh2</tt> or <tt>ooGmsh4</tt> class to read the mesh file and to store its contains in more user-friendly form.\nThis package must be regarded as a very simple interface between gmsh files and Python.\nSo you are free to create any objects you want from an <tt>ooGmsh2</tt> or <tt>ooGmsh4</tt> object.\nThe <tt>ooGmsh2</tt> is used to read MSH files stored with format version \u20182.2\u2019  and the <tt>ooGmsh4</tt> class is used for formats version \u20184.0\u2019 and \u20184.1\u2019</p>\n<table>\n<caption>Package test on</caption>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>System</th>\n<th>Python</th>\n<th><a href=\"http://gmsh.info\" rel=\"nofollow\">gmsh</a></th>\n</tr>\n</thead>\n<tbody>\n<tr><td><strong>CentOS 7.6</strong></td>\n<td>2,7.16, 3.5.7, 3.6.8, 3.7.3 (<a href=\"http://www.python.org/\" rel=\"nofollow\">python</a>)</td>\n<td>4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6</td>\n</tr>\n<tr><td><strong>Debian 9.9</strong></td>\n<td>2,7.16, 3.5.7, 3.6.8, 3.7.3 (<a href=\"http://www.python.org/\" rel=\"nofollow\">python</a>)</td>\n<td>4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6</td>\n</tr>\n<tr><td><strong>Fedora 29</strong></td>\n<td>2,7.16, 3.5.7, 3.6.8, 3.7.3 (<a href=\"http://www.python.org/\" rel=\"nofollow\">python</a>)</td>\n<td>4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6</td>\n</tr>\n<tr><td><strong>OpenSuse 15.0</strong></td>\n<td>3.5.7, 3.6.8, 3.7.3 (<a href=\"http://www.python.org/\" rel=\"nofollow\">python</a>)</td>\n<td>4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6</td>\n</tr>\n<tr><td><strong>Ubuntu 18.04</strong></td>\n<td>2,7.16, 3.5.7, 3.6.8, 3.7.3 (<a href=\"http://www.python.org/\" rel=\"nofollow\">python</a>)</td>\n<td>4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6</td>\n</tr>\n<tr><td><strong>Windows 10 (1809)</strong></td>\n<td>3.6.8, 3.7.3 (<a href=\"http://www.python.org/\" rel=\"nofollow\">python</a>)</td>\n<td>4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6</td>\n</tr>\n<tr><td><strong>MacOS Mojave (10.14.4)</strong></td>\n<td>3.5.4, 3.6.8, 3.7.3 (<a href=\"http://www.python.org/\" rel=\"nofollow\">python</a>)</td>\n<td>4.3.0, 4.2.3, 4.1.5, 4.0.7, 3.0.6</td>\n</tr>\n</tbody>\n</table>\n<p>Documentation is available on <a href=\"http://www.math.univ-paris13.fr/~cuvelier/software/fc-oogmsh-Python.html\" rel=\"nofollow\">fc-oogmsh</a> dedicated web page.</p>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p>The <strong>fc_oogmsh</strong> Python package is available from the Python Package Index, so to install/upgrade simply type</p>\n<pre>pip install fc_oogmsh -U\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration:</h2>\n<p>One have to configure the package for using with <a href=\"http://gmsh.info\" rel=\"nofollow\">gmsh</a>.\nFor the default configuration we run under Python:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fc_oogmsh</span>\n<span class=\"n\">fc_oogmsh</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">()</span>\n</pre>\n<p>The function <tt>fc_oogmsh.configure()</tt> try to guess where is the <strong>gmsh</strong> binary.\nIf this command failed or if we want to specify the <strong>gmsh</strong> binary location, one can use the\n<tt>gmsh</tt> option to specify the <strong>gmsh</strong> binary file with full path.</p>\n<ul>\n<li><p>For example, under Linux:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fc_oogmsh</span>\n<span class=\"n\">fc_oogmsh</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">gmsh</span><span class=\"o\">=</span><span class=\"s1\">'/usr/local/GMSH/gmsh-4.2.0-Linux/bin/gmsh'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>For example,  under Windows:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fc_oogmsh</span>\n<span class=\"n\">fc_oogmsh</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">gmsh</span><span class=\"o\">=</span><span class=\"sa\">r</span><span class=\"s1\">'C:\\Users\\toto\\GMSH\\gmsh-4.2.0-Windows\\gmsh.exe'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>For example,  under MacOS:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fc_oogmsh</span>\n<span class=\"n\">fc_oogmsh</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">gmsh</span><span class=\"o\">=</span><span class=\"s1\">'/Users/toto/GMSH/4.2.0/Gmsh.app/Contents/MacOS/gmsh'</span><span class=\"p\">)</span>\n</pre>\n</li>\n</ul>\n<p>Now, it\u2019s possible to run one of the demo functions</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fc_oogmsh</span>\n<span class=\"n\">fc_oogmsh</span><span class=\"o\">.</span><span class=\"n\">demo02</span><span class=\"p\">()</span>\n</pre>\n<p>The output of the <tt>demo02()</tt> function under Linux is:</p>\n<pre>***********************\nRunning demo02 function\n***********************\n*** Build mesh file\n[fc_oogmsh] Using input file: /home/cuvelier/Travail/Recherch/python/fc-oogmsh/src/fc_oogmsh/geodir/2d/condenser11.geo\n[fc_oogmsh] Overwritting mesh file /home/cuvelier/.local/share/fc_oogmsh/meshes/condenser11-25.msh\n[fc_oogmsh] Use option verbose=3 to see gmsh output\n*** Read mesh file\n*** Print oGh -&gt;\nooGmsh4 object\n    dim : 2\n      d : 2\n  types : [1 2]\n    nq : 3483\n      q : ndarray object[float64], size (2, 3483)\ntoGlobal: ndarray object[int32], size (3483,)\nEntities:&lt;class 'fc_oogmsh.msh.Entities'&gt;\nNodes   :&lt;class 'fc_oogmsh.msh.Nodes'&gt;\nElements:&lt;class 'fc_oogmsh.msh.Elements'&gt;\n</pre>\n</div>\n<div id=\"examples-usage\">\n<h2>Examples usage:</h2>\n<ul>\n<li><p>We use the geometry file <tt>condenser11.geo</tt> given with the package to generate a 2D mesh file</p>\n<pre><span class=\"n\">meshfile</span><span class=\"o\">=</span><span class=\"n\">fc_oogmsh</span><span class=\"o\">.</span><span class=\"n\">buildmesh2d</span><span class=\"p\">(</span><span class=\"s1\">'condenser11'</span><span class=\"p\">,</span><span class=\"mi\">25</span><span class=\"p\">,</span><span class=\"n\">force</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The output of this command is:</p>\n<pre>fc_oogmsh] Using input file: /home/cuvelier/Travail/Recherch/python/fc-oogmsh/src/fc_oogmsh/geodir/2d/condenser11.geo\n[fc_oogmsh] Overwritting mesh file /home/cuvelier/.local/share/fc_oogmsh/meshes/condenser11-25.msh\n[fc_oogmsh] Use option verbose=3 to see gmsh output\n</pre>\n<p>Thereafter one can read the mesh file by using the  <tt>ooGmsh4</tt> object constructor and print some\ninformations</p>\n<pre><span class=\"n\">oGh</span><span class=\"o\">=</span><span class=\"n\">fc_oogmsh</span><span class=\"o\">.</span><span class=\"n\">ooGmsh4</span><span class=\"p\">(</span><span class=\"n\">meshfile</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'*** Print oGh -&gt;'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">oGh</span><span class=\"p\">)</span>\n</pre>\n<p>The output of these commands are:</p>\n<pre>*** Print oGh -&gt;\nooGmsh4 object\n    dim : 2\n      d : 2\n  types : [1 2]\n    nq : 3483\n      q : ndarray object[float64], size (2, 3483)\ntoGlobal: ndarray object[int32], size (3483,)\nEntities:&lt;class 'fc_oogmsh.msh.Entities'&gt;\nNodes   :&lt;class 'fc_oogmsh.msh.Nodes'&gt;\nElements:&lt;class 'fc_oogmsh.msh.Elements'&gt;\n</pre>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5252507, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dc138cbc1765f8b244ec96fd63944dba", "sha256": "2333620ad3f3ecb6b124db015a5d9b0a96ba490c0f887888a5d59815cbd2a496"}, "downloads": -1, "filename": "fc_oogmsh-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dc138cbc1765f8b244ec96fd63944dba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6238, "upload_time": "2017-03-06T17:18:57", "upload_time_iso_8601": "2017-03-06T17:18:57.972371Z", "url": "https://files.pythonhosted.org/packages/c3/64/934451ec0bc384f462150b3f5ebe07ce8b79127b630caa872138a5278acb/fc_oogmsh-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "072f281b86b6cba1c4d1ab673e34486d", "sha256": "563362d2ced783e11b3f190c0e5a43cda4676f16f8b37dbbc38c1d4e1ea7513c"}, "downloads": -1, "filename": "fc_oogmsh-0.0.2.tar.gz", "has_sig": false, "md5_digest": "072f281b86b6cba1c4d1ab673e34486d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15588, "upload_time": "2017-03-06T17:33:58", "upload_time_iso_8601": "2017-03-06T17:33:58.034873Z", "url": "https://files.pythonhosted.org/packages/ca/7e/56b0b6133ea2bde5b0d3b1da5ba0f6315f54c24f2ef034a35f78e4ba6e2c/fc_oogmsh-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "810beb902b450f0250afbbbc8dcc4a88", "sha256": "d06f2ddb95b8fd85fd7bad53990d1a51f181810c5a143a1c699f4d318278dd51"}, "downloads": -1, "filename": "fc_oogmsh-0.0.3.tar.gz", "has_sig": false, "md5_digest": "810beb902b450f0250afbbbc8dcc4a88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17723, "upload_time": "2017-04-22T15:36:37", "upload_time_iso_8601": "2017-04-22T15:36:37.482416Z", "url": "https://files.pythonhosted.org/packages/78/ff/44e2d942a0e3b93a78f9335d08703404fe53001cd5e2b0a03f4b50a97a8b/fc_oogmsh-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a33122a82798140fdce8beee26cbe6bc", "sha256": "592de151d456914fc5642adb747214327953f48fd4bc2681efb0e85c97911b6e"}, "downloads": -1, "filename": "fc_oogmsh-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a33122a82798140fdce8beee26cbe6bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17294, "upload_time": "2017-05-10T05:13:42", "upload_time_iso_8601": "2017-05-10T05:13:42.154527Z", "url": "https://files.pythonhosted.org/packages/37/05/7e170b0068a1284168e7cbf1037217d9460f2171ac9f2c1eb9b58b1dda96/fc_oogmsh-0.0.4.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "a033449ed7ce598b7e69417c2db9e064", "sha256": "9af113febcbdd8992d98d7ef5afcbe7be56babdd22b25d2e026b6d366ed79f94"}, "downloads": -1, "filename": "fc_oogmsh-0.0.6.tar.gz", "has_sig": false, "md5_digest": "a033449ed7ce598b7e69417c2db9e064", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22459, "upload_time": "2018-10-21T13:13:54", "upload_time_iso_8601": "2018-10-21T13:13:54.352899Z", "url": "https://files.pythonhosted.org/packages/54/c6/721cc8ecb0409d8fd51b462097ccfe567f760b62e97f64b7432970433579/fc_oogmsh-0.0.6.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "7ad4f44a1dd6f1f278600d413e1e93e1", "sha256": "797cc6f130aa88ae9b58db9655c5c051a098a802e86a1e3f4e0a8fb0c0608dd9"}, "downloads": -1, "filename": "fc_oogmsh-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7ad4f44a1dd6f1f278600d413e1e93e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28857, "upload_time": "2019-05-10T14:31:45", "upload_time_iso_8601": "2019-05-10T14:31:45.645464Z", "url": "https://files.pythonhosted.org/packages/9a/7f/68ca424f20ee92d906844c7b736f36f3560c78d9a835e9db2540d950b040/fc_oogmsh-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ad4f44a1dd6f1f278600d413e1e93e1", "sha256": "797cc6f130aa88ae9b58db9655c5c051a098a802e86a1e3f4e0a8fb0c0608dd9"}, "downloads": -1, "filename": "fc_oogmsh-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7ad4f44a1dd6f1f278600d413e1e93e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28857, "upload_time": "2019-05-10T14:31:45", "upload_time_iso_8601": "2019-05-10T14:31:45.645464Z", "url": "https://files.pythonhosted.org/packages/9a/7f/68ca424f20ee92d906844c7b736f36f3560c78d9a835e9db2540d950b040/fc_oogmsh-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:11 2020"}