{"info": {"author": "Nikita Sivakov", "author_email": "cryptomaniac.512@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Pytest", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Testing"], "description": "Falcon Toolkit\n==============\n\nCollection of utils for the `Falcon\nFramework <https://github.com/falconry/falcon>`__.\n\n|Build Status| |Coverage Status| |Python versions| |PyPi|\n\nInstallation\n------------\n\n.. code:: python\n\n    pip install falcon-toolkit\n\nProvided fixtures\n-----------------\n\nBefore using it you must define ``api`` that returns instance of your\n``falcon.API`` app\n\n.. code:: python\n\n    import pytest\n\n    from yout_application import create_api\n\n    @pytest.fixture\n    def api():\n        return create_api()\n\nclient\n~~~~~~\n\n.. code:: python\n\n    def test_something(client):\n        got = client.get('/your_url/42/')  # returns json of response and automatically check response status code\n        assert got == {'awesome': 'response'}\n\n        response = client.get('/your_url/100500/')  # returns testing response object and skip status code check\n        assert response.status_code == 400\n        assert response.json = 'Invalid id'\n\n.. |Build Status| image:: https://travis-ci.org/cryptomaniac512/falcon-toolkit.svg?branch=master\n   :target: https://travis-ci.org/cryptomaniac512/falcon-toolkit\n.. |Coverage Status| image:: https://coveralls.io/repos/github/cryptomaniac512/falcon-toolkit/badge.svg?branch=master\n   :target: https://coveralls.io/github/cryptomaniac512/falcon-toolkit?branch=master\n.. |Python versions| image:: https://img.shields.io/badge/python-3.4,%203.5,%203.6-blue.svg\n.. |PyPi| image:: https://img.shields.io/badge/PyPi-0.0.1-yellow.svg\n   :target: https://pypi.python.org/pypi/falcon-toolkit", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cryptomaniac512/falcon-toolkit", "keywords": "pytest,fixtures,falcon,client,api", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "falcon-toolkit", "package_url": "https://pypi.org/project/falcon-toolkit/", "platform": "", "project_url": "https://pypi.org/project/falcon-toolkit/", "project_urls": {"Homepage": "https://github.com/cryptomaniac512/falcon-toolkit"}, "release_url": "https://pypi.org/project/falcon-toolkit/0.0.1/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Collection of utils for the Falcon Framework", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Collection of utils for the <a href=\"https://github.com/falconry/falcon\" rel=\"nofollow\">Falcon\nFramework</a>.</p>\n<p><a href=\"https://travis-ci.org/cryptomaniac512/falcon-toolkit\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/101e51b88f9df232a65629355b53339e9c43e8ed/68747470733a2f2f7472617669732d63692e6f72672f63727970746f6d616e6961633531322f66616c636f6e2d746f6f6c6b69742e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/cryptomaniac512/falcon-toolkit?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0c9e945661319422738d3af01f1f2085a4b7622/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f63727970746f6d616e6961633531322f66616c636f6e2d746f6f6c6b69742f62616467652e7376673f6272616e63683d6d6173746572\"></a> <img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5093caab92017c67f985243e19062841d70cf64b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e342c253230332e352c253230332e362d626c75652e737667\"> <a href=\"https://pypi.python.org/pypi/falcon-toolkit\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46dcee210e527f5c539602e309c75196adf45c37/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507950692d302e302e312d79656c6c6f772e737667\"></a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">falcon</span><span class=\"o\">-</span><span class=\"n\">toolkit</span>\n</pre>\n</div>\n<div id=\"provided-fixtures\">\n<h2>Provided fixtures</h2>\n<p>Before using it you must define <tt>api</tt> that returns instance of your\n<tt>falcon.API</tt> app</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">yout_application</span> <span class=\"kn\">import</span> <span class=\"n\">create_api</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span>\n<span class=\"k\">def</span> <span class=\"nf\">api</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">create_api</span><span class=\"p\">()</span>\n</pre>\n<div id=\"client\">\n<h3>client</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">):</span>\n    <span class=\"n\">got</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/your_url/42/'</span><span class=\"p\">)</span>  <span class=\"c1\"># returns json of response and automatically check response status code</span>\n    <span class=\"k\">assert</span> <span class=\"n\">got</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s1\">'awesome'</span><span class=\"p\">:</span> <span class=\"s1\">'response'</span><span class=\"p\">}</span>\n\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/your_url/100500/'</span><span class=\"p\">)</span>  <span class=\"c1\"># returns testing response object and skip status code check</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">400</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span> <span class=\"o\">=</span> <span class=\"s1\">'Invalid id'</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4849239, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ff9464d3a1d4b0044a7d874048eab220", "sha256": "15ccba9ba05ea53909b18510fe2e3fb2b4e88a6807214681de0d33e1a6189c6a"}, "downloads": -1, "filename": "falcon-toolkit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ff9464d3a1d4b0044a7d874048eab220", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 2129, "upload_time": "2018-02-07T12:02:04", "upload_time_iso_8601": "2018-02-07T12:02:04.516863Z", "url": "https://files.pythonhosted.org/packages/35/80/173a2821d9883a2523cf3038e0a6d02873a26de25a70b0b832e7bd001b46/falcon-toolkit-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff9464d3a1d4b0044a7d874048eab220", "sha256": "15ccba9ba05ea53909b18510fe2e3fb2b4e88a6807214681de0d33e1a6189c6a"}, "downloads": -1, "filename": "falcon-toolkit-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ff9464d3a1d4b0044a7d874048eab220", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 2129, "upload_time": "2018-02-07T12:02:04", "upload_time_iso_8601": "2018-02-07T12:02:04.516863Z", "url": "https://files.pythonhosted.org/packages/35/80/173a2821d9883a2523cf3038e0a6d02873a26de25a70b0b832e7bd001b46/falcon-toolkit-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}