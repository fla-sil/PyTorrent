{"info": {"author": "Gu\u00f0ni Natan Gunnarsson", "author_email": "author@example.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# BetterTimers\nBetter timers for pygame with demo\n\n\nFor in-depth explanation (in Icelandic) see:\nhttps://gudninathan.blogspot.is/2017/05/pygame-og-events-1-genericevent.html\n\n\n## Quick start\n\nStart by downloading the package!\n```\n$ pip install pygame\n$ pip install better_timers-gudninatan\n```\n\n\nImport timer manager\n```\nfrom better_timers import timers\n```\n\n__OR__\n\nCreate a new timer manager\n```\nfrom better_timers import BetterTimers\ntimers = BetterTimers()\n```\n\nAdd new timers that will automatically go to the event queue repeatedly, every N milliseconds using this format.  \n`timers.set_timer(event, ms, *delay_ms)`  \nYou can pass in both the regular USEREVENT types or create your own `pygame.event.Event` with any custom args and kwargs for unlimited possibilities. Override already established timers easily, or delete them entirely by passing in a rate of 0 or less.\n\n```\ngenericEvent = USEREVENT + 1\nrandomEvent = USEREVENT + 2\n\ncoolEvent = pygame.event.Event(genericEvent, code=\"cool\")\nuncoolEvent = pygame.event.Event(genericEvent, code=\"uncool\")\n\ntimers.set_timer(coolEvent, 500) # Sets a timer for 500 milliseconds\ntimers.set_timer(coolEvent, 2000, 300) # Overrides old 500 rate timer, with delay\n\ntimers.set_timer(uncoolEvent, 1000) # New genericEvent timer with a different code\n\ntimers.set_timer(randomEvent, 5000) # Traditional timer set with USEREVENT\ntimers.set_timer(randomEvent, 0) # Timer stopped\n```\n\nYou will recieve these events in the pygame event queue just as you would expect.\n\n\twhile True:\n\t    ...\n\t    for event in pygame.event.get():\n\t        ...\n\t        if event == coolEvent:\n\t            print(\"How cool!\")\n\t    ...\n\nAll timers will be stopped upon calling `pygame.quit()`. You can also stop all the timers with this neat shortcut:\n\n\ttimers.end_all_timers()\n\n\n## Compatability\n\nbetter_timers is compatible with both python 2 & 3.\n\n## Dependencies\n\nbetter_timers is dependant on [pygame](http://www.pygame.org).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GudniNatan/better_timers", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "better-timers-gudninatan", "package_url": "https://pypi.org/project/better-timers-gudninatan/", "platform": "", "project_url": "https://pypi.org/project/better-timers-gudninatan/", "project_urls": {"Homepage": "https://github.com/GudniNatan/better_timers"}, "release_url": "https://pypi.org/project/better-timers-gudninatan/0.0.3/", "requires_dist": ["pygame"], "requires_python": "", "summary": "Better timers for pygame", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>BetterTimers</h1>\n<p>Better timers for pygame with demo</p>\n<p>For in-depth explanation (in Icelandic) see:\n<a href=\"https://gudninathan.blogspot.is/2017/05/pygame-og-events-1-genericevent.html\" rel=\"nofollow\">https://gudninathan.blogspot.is/2017/05/pygame-og-events-1-genericevent.html</a></p>\n<h2>Quick start</h2>\n<p>Start by downloading the package!</p>\n<pre><code>$ pip install pygame\n$ pip install better_timers-gudninatan\n</code></pre>\n<p>Import timer manager</p>\n<pre><code>from better_timers import timers\n</code></pre>\n<p><strong>OR</strong></p>\n<p>Create a new timer manager</p>\n<pre><code>from better_timers import BetterTimers\ntimers = BetterTimers()\n</code></pre>\n<p>Add new timers that will automatically go to the event queue repeatedly, every N milliseconds using this format.<br>\n<code>timers.set_timer(event, ms, *delay_ms)</code><br>\nYou can pass in both the regular USEREVENT types or create your own <code>pygame.event.Event</code> with any custom args and kwargs for unlimited possibilities. Override already established timers easily, or delete them entirely by passing in a rate of 0 or less.</p>\n<pre><code>genericEvent = USEREVENT + 1\nrandomEvent = USEREVENT + 2\n\ncoolEvent = pygame.event.Event(genericEvent, code=\"cool\")\nuncoolEvent = pygame.event.Event(genericEvent, code=\"uncool\")\n\ntimers.set_timer(coolEvent, 500) # Sets a timer for 500 milliseconds\ntimers.set_timer(coolEvent, 2000, 300) # Overrides old 500 rate timer, with delay\n\ntimers.set_timer(uncoolEvent, 1000) # New genericEvent timer with a different code\n\ntimers.set_timer(randomEvent, 5000) # Traditional timer set with USEREVENT\ntimers.set_timer(randomEvent, 0) # Timer stopped\n</code></pre>\n<p>You will recieve these events in the pygame event queue just as you would expect.</p>\n<pre><code>while True:\n    ...\n    for event in pygame.event.get():\n        ...\n        if event == coolEvent:\n            print(\"How cool!\")\n    ...\n</code></pre>\n<p>All timers will be stopped upon calling <code>pygame.quit()</code>. You can also stop all the timers with this neat shortcut:</p>\n<pre><code>timers.end_all_timers()\n</code></pre>\n<h2>Compatability</h2>\n<p>better_timers is compatible with both python 2 &amp; 3.</p>\n<h2>Dependencies</h2>\n<p>better_timers is dependant on <a href=\"http://www.pygame.org\" rel=\"nofollow\">pygame</a>.</p>\n\n          </div>"}, "last_serial": 4775468, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "573e4c269226d1a442fc6d9775672c3f", "sha256": "01d82498082c28f738e5e71717e3387f1b01a023bf0d12ce355b6d8d5b59e63c"}, "downloads": -1, "filename": "better_timers_gudninatan-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "573e4c269226d1a442fc6d9775672c3f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4181, "upload_time": "2019-02-03T19:09:22", "upload_time_iso_8601": "2019-02-03T19:09:22.594608Z", "url": "https://files.pythonhosted.org/packages/17/d3/85f4bd607513ef9f291ef86b6820fb0d2b1bed103dc029ed426b92ae72b5/better_timers_gudninatan-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c773074f39178b4df2a3fa17ef792f24", "sha256": "9a7ec416f764400248db631e8e26740f519b3b1224f8f4a9659bc848f2353ab3"}, "downloads": -1, "filename": "better_timers-gudninatan-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c773074f39178b4df2a3fa17ef792f24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2999, "upload_time": "2019-02-03T19:09:25", "upload_time_iso_8601": "2019-02-03T19:09:25.971111Z", "url": "https://files.pythonhosted.org/packages/f5/8c/bdb1a555ccfa6a2c20b498901e5cf4a00df84c32523262e518baa71570f5/better_timers-gudninatan-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f581579215ec6855663f4e104f51c082", "sha256": "e37481d215fe6fbab6cd29fdefd1ec3adce8702a4457a19cc1a65efb41453cf8"}, "downloads": -1, "filename": "better_timers_gudninatan-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f581579215ec6855663f4e104f51c082", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4198, "upload_time": "2019-02-03T19:09:24", "upload_time_iso_8601": "2019-02-03T19:09:24.648419Z", "url": "https://files.pythonhosted.org/packages/a2/56/7dd7f0ed0091f2a798e90e214a1ec2891e81d968e7af8dd335c6ad4b4f1c/better_timers_gudninatan-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d7408d6f2e956da3c2e3d621aa2919a", "sha256": "f6766c79eee0032c892b822c935346cd138c80a8ff3c2f1bc3ae78127fb15e4c"}, "downloads": -1, "filename": "better_timers-gudninatan-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1d7408d6f2e956da3c2e3d621aa2919a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3048, "upload_time": "2019-02-03T19:09:26", "upload_time_iso_8601": "2019-02-03T19:09:26.995287Z", "url": "https://files.pythonhosted.org/packages/a7/e7/fb3dc24e6ad58466bb93513580832926b8578147046c0ef1e66423262fbb/better_timers-gudninatan-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "70e77fa65d872317cc9fe09a0fc4be28", "sha256": "e061d57799fe4dfe43c3061024659b26fea0f4f41d35474fc7bfa330871be92e"}, "downloads": -1, "filename": "better_timers_gudninatan-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "70e77fa65d872317cc9fe09a0fc4be28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4277, "upload_time": "2019-02-03T19:46:02", "upload_time_iso_8601": "2019-02-03T19:46:02.460181Z", "url": "https://files.pythonhosted.org/packages/13/de/784201d961192ac1bf149448526439fae59ca77475d10f42de752b7b6ef8/better_timers_gudninatan-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e9896406f0c86cbe786a63c2324efd8", "sha256": "ff151ed236af125bfd5daea07b266e41f8a5860d67c578e1e3a0f952e8bfe43f"}, "downloads": -1, "filename": "better_timers-gudninatan-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2e9896406f0c86cbe786a63c2324efd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3142, "upload_time": "2019-02-03T19:46:05", "upload_time_iso_8601": "2019-02-03T19:46:05.604180Z", "url": "https://files.pythonhosted.org/packages/ec/20/581c03148d620aeeb089ec1f18143b06b356e2958c3755fc5386d15aeef0/better_timers-gudninatan-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70e77fa65d872317cc9fe09a0fc4be28", "sha256": "e061d57799fe4dfe43c3061024659b26fea0f4f41d35474fc7bfa330871be92e"}, "downloads": -1, "filename": "better_timers_gudninatan-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "70e77fa65d872317cc9fe09a0fc4be28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4277, "upload_time": "2019-02-03T19:46:02", "upload_time_iso_8601": "2019-02-03T19:46:02.460181Z", "url": "https://files.pythonhosted.org/packages/13/de/784201d961192ac1bf149448526439fae59ca77475d10f42de752b7b6ef8/better_timers_gudninatan-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e9896406f0c86cbe786a63c2324efd8", "sha256": "ff151ed236af125bfd5daea07b266e41f8a5860d67c578e1e3a0f952e8bfe43f"}, "downloads": -1, "filename": "better_timers-gudninatan-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2e9896406f0c86cbe786a63c2324efd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3142, "upload_time": "2019-02-03T19:46:05", "upload_time_iso_8601": "2019-02-03T19:46:05.604180Z", "url": "https://files.pythonhosted.org/packages/ec/20/581c03148d620aeeb089ec1f18143b06b356e2958c3755fc5386d15aeef0/better_timers-gudninatan-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:42 2020"}