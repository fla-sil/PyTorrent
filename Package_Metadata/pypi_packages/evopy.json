{"info": {"author": "evopy", "author_email": "info@gandreadis.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# evopy\n\n[![Build Status](https://travis-ci.com/evopy/evopy.svg?branch=master)](https://travis-ci.com/evopy/evopy)\n[![codecov](https://codecov.io/gh/evopy/evopy/branch/master/graph/badge.svg)](https://codecov.io/gh/evopy/evopy)\n[![PyPI](https://img.shields.io/pypi/v/evopy.svg)](https://pypi.org/project/evopy/)\n[![Docs](https://readthedocs.org/projects/evopy/badge/?version=latest)](http://evopy.readthedocs.io/)\n\n**Evolutionary Strategies made simple!**\n\nUse evopy to easily optimize a vector of floats in Python.\n\n## \ud83c\udfd7 Installation\n\nAll you need to use evopy is [Python 3](https://www.python.org/downloads/)! Run this command to fetch evopy from PyPI:\n\n```\npip install evopy\n```\n\nThen you can import `EvoPy` like this:\n\n```python\nfrom evopy import EvoPy\n```\n\n## \u23e9 Usage\n\n### One-Dimensional Example\n\nLet's say we wanted to find the optimum of a parabola, without using exact methods from calculus! With Evopy, this is as easy as writing the following two lines:\n\n```python\nevopy = EvoPy(lambda x: pow(x, 2), 1)\nbest_coordinates = evopy.run()\n```\n\nThe main ingredient here is the fitness function (the lambda). This can also be a normal function reference, just make sure that it accepts a float or an array of floats and outputs a single float. The other ingredient is the `1` at the end of the first line: This is the dimensionality of the inputs that you expect in your fitness function. `best_coordinates` will contain an array with a single element, which is the best `x` value the algorithm could find in the default number of generations.\n\n### Multi-Dimensional Example\n\nIf the previous example seemed too simple to you, we can also look at the optimum of a more complex, two-dimensional function, like the [Rastrigin function](https://en.wikipedia.org/wiki/Rastrigin_function). We don't have to modify much in our previous code snippet to get this to work:\n\n```python\nevopy = EvoPy(\n    lambda X: 5 + sum([(x**2 - 5 * np.cos(2 * np.pi * x)) for x in X]), \n    2, \n    generations=1000, \n    population_size=100\n)\nbest_coordinates = evopy.run()\n```\n\nCompared to the first example, we have interchanged the fitness function for a more complex one, set the dimensionality to `2`, and given the algorithm more time to find an optimum by setting a higher generation and individual count than the default.\n\n### Docs\n\nFor more detailed information on evopy's functionality, have a look at [the docs](http://evopy.readthedocs.io/)!\n\n## \u26cf Development\n\n[Clone this repository](https://github.com/evopy/evopy) and fetch all dependencies from within the cloned directory:\n\n```\npip install -r requirements.dev.txt\n```\n\nRun all tests with:\n\n```\nnosetests\n```\n\nTo check your code style, run:\n\n```\npylint evopy\n```\n\nTo measure your code coverage, run:\n\n```\nnosetests --with-coverage --cover-package=evopy --cover-html --cover-branches --cover-erase\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/evopy/evopy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "evopy", "package_url": "https://pypi.org/project/evopy/", "platform": "", "project_url": "https://pypi.org/project/evopy/", "project_urls": {"Homepage": "http://github.com/evopy/evopy"}, "release_url": "https://pypi.org/project/evopy/0.3/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Evolutionary Strategies made simple", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>evopy</h1>\n<p><a href=\"https://travis-ci.com/evopy/evopy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69991d20f95025e2c36291e8061099569a7d9014/68747470733a2f2f7472617669732d63692e636f6d2f65766f70792f65766f70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/evopy/evopy\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97d0e44e20b1a6152923a594ad01243b9b1aefbd/68747470733a2f2f636f6465636f762e696f2f67682f65766f70792f65766f70792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/evopy/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2db22f930a0e83c0d8f13b1ddf86b515853e6b8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f65766f70792e737667\"></a>\n<a href=\"http://evopy.readthedocs.io/\" rel=\"nofollow\"><img alt=\"Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/89e9bbbc1427d4c0474a587c8e1659b37b4cacd0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f65766f70792f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p><strong>Evolutionary Strategies made simple!</strong></p>\n<p>Use evopy to easily optimize a vector of floats in Python.</p>\n<h2>\ud83c\udfd7 Installation</h2>\n<p>All you need to use evopy is <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">Python 3</a>! Run this command to fetch evopy from PyPI:</p>\n<pre><code>pip install evopy\n</code></pre>\n<p>Then you can import <code>EvoPy</code> like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">evopy</span> <span class=\"kn\">import</span> <span class=\"n\">EvoPy</span>\n</pre>\n<h2>\u23e9 Usage</h2>\n<h3>One-Dimensional Example</h3>\n<p>Let's say we wanted to find the optimum of a parabola, without using exact methods from calculus! With Evopy, this is as easy as writing the following two lines:</p>\n<pre><span class=\"n\">evopy</span> <span class=\"o\">=</span> <span class=\"n\">EvoPy</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">pow</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">best_coordinates</span> <span class=\"o\">=</span> <span class=\"n\">evopy</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>The main ingredient here is the fitness function (the lambda). This can also be a normal function reference, just make sure that it accepts a float or an array of floats and outputs a single float. The other ingredient is the <code>1</code> at the end of the first line: This is the dimensionality of the inputs that you expect in your fitness function. <code>best_coordinates</code> will contain an array with a single element, which is the best <code>x</code> value the algorithm could find in the default number of generations.</p>\n<h3>Multi-Dimensional Example</h3>\n<p>If the previous example seemed too simple to you, we can also look at the optimum of a more complex, two-dimensional function, like the <a href=\"https://en.wikipedia.org/wiki/Rastrigin_function\" rel=\"nofollow\">Rastrigin function</a>. We don't have to modify much in our previous code snippet to get this to work:</p>\n<pre><span class=\"n\">evopy</span> <span class=\"o\">=</span> <span class=\"n\">EvoPy</span><span class=\"p\">(</span>\n    <span class=\"k\">lambda</span> <span class=\"n\">X</span><span class=\"p\">:</span> <span class=\"mi\">5</span> <span class=\"o\">+</span> <span class=\"nb\">sum</span><span class=\"p\">([(</span><span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">X</span><span class=\"p\">]),</span> \n    <span class=\"mi\">2</span><span class=\"p\">,</span> \n    <span class=\"n\">generations</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span> \n    <span class=\"n\">population_size</span><span class=\"o\">=</span><span class=\"mi\">100</span>\n<span class=\"p\">)</span>\n<span class=\"n\">best_coordinates</span> <span class=\"o\">=</span> <span class=\"n\">evopy</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>Compared to the first example, we have interchanged the fitness function for a more complex one, set the dimensionality to <code>2</code>, and given the algorithm more time to find an optimum by setting a higher generation and individual count than the default.</p>\n<h3>Docs</h3>\n<p>For more detailed information on evopy's functionality, have a look at <a href=\"http://evopy.readthedocs.io/\" rel=\"nofollow\">the docs</a>!</p>\n<h2>\u26cf Development</h2>\n<p><a href=\"https://github.com/evopy/evopy\" rel=\"nofollow\">Clone this repository</a> and fetch all dependencies from within the cloned directory:</p>\n<pre><code>pip install -r requirements.dev.txt\n</code></pre>\n<p>Run all tests with:</p>\n<pre><code>nosetests\n</code></pre>\n<p>To check your code style, run:</p>\n<pre><code>pylint evopy\n</code></pre>\n<p>To measure your code coverage, run:</p>\n<pre><code>nosetests --with-coverage --cover-package=evopy --cover-html --cover-branches --cover-erase\n</code></pre>\n\n          </div>"}, "last_serial": 5345945, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fb18ac7ea53c17a0c52efb7e147a77d6", "sha256": "e56558cb33f91899e7af7f75f0714508b679e0b321c7ab521d567f39404f2d98"}, "downloads": -1, "filename": "evopy-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fb18ac7ea53c17a0c52efb7e147a77d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4159, "upload_time": "2019-05-24T12:59:48", "upload_time_iso_8601": "2019-05-24T12:59:48.170803Z", "url": "https://files.pythonhosted.org/packages/1a/79/07305c10039d1ff1bbd1b9b6e79ac65f9b7690b8d85178a7455fd3e97b9e/evopy-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa2fc501745d2f6098df6295cda7673f", "sha256": "4570cb658611cc8dedbdb41957fb8ec7bbdd846874e6bda3ae0b5499e1921ca0"}, "downloads": -1, "filename": "evopy-0.1.tar.gz", "has_sig": false, "md5_digest": "fa2fc501745d2f6098df6295cda7673f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2888, "upload_time": "2019-05-24T12:59:50", "upload_time_iso_8601": "2019-05-24T12:59:50.294647Z", "url": "https://files.pythonhosted.org/packages/f8/88/cfbbc87dfb573161808503b02cad30020985a0c6d7240306bfc78a26b04f/evopy-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "1acf0ae5020f68fb4a0c47ce799e206b", "sha256": "243fea6f3bf6d37d59bab8417cc1e122006b67c2a75f6f6800637a53fc38a0df"}, "downloads": -1, "filename": "evopy-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1acf0ae5020f68fb4a0c47ce799e206b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7449, "upload_time": "2019-05-29T16:38:09", "upload_time_iso_8601": "2019-05-29T16:38:09.953855Z", "url": "https://files.pythonhosted.org/packages/2a/d7/342a6b7e2c789bb9843d3c796bf2d9895c173d86982923e23757e91ebbc4/evopy-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1fd79979b0d7085237bde2a2275b98a", "sha256": "1c69b2b477f1bffa2c58ad233374f1d3552d38b0668683f0ca11d8af81061c83"}, "downloads": -1, "filename": "evopy-0.2.tar.gz", "has_sig": false, "md5_digest": "e1fd79979b0d7085237bde2a2275b98a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6314, "upload_time": "2019-05-29T16:38:11", "upload_time_iso_8601": "2019-05-29T16:38:11.166055Z", "url": "https://files.pythonhosted.org/packages/84/11/4ca6084d3df8499811a420c728e5ad7accea3c587fa3675f47204f66b3bb/evopy-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cefadd49af63360977f0568949169ce0", "sha256": "6b3a82e71a705ebd584e76979f7573689d26cfd7cadfcd213309e0254e32367d"}, "downloads": -1, "filename": "evopy-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cefadd49af63360977f0568949169ce0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8207, "upload_time": "2019-05-29T17:08:15", "upload_time_iso_8601": "2019-05-29T17:08:15.694903Z", "url": "https://files.pythonhosted.org/packages/27/1e/e05410e4214be65dc304b24e1846d4e030e1a466c31b4c3f6832d7095bc2/evopy-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "972dd0f2879cd81a28fa259a69183657", "sha256": "5b90726c25e120c1993cfb4b13ce3c97f83844576d8ce886570cf0c5f7e9f6d6"}, "downloads": -1, "filename": "evopy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "972dd0f2879cd81a28fa259a69183657", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6653, "upload_time": "2019-05-29T17:08:17", "upload_time_iso_8601": "2019-05-29T17:08:17.315526Z", "url": "https://files.pythonhosted.org/packages/bd/1d/357a9c5ecbc4b315cc40daaa0c45558f3a5ae72fccc035bee7753427d189/evopy-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "2c09fc17e83265733089fdafcbc99977", "sha256": "fa1a5e077d8f46073c7136b0b0c1df0d50fc9a6fc1e6952657b6f9a27f32d1a4"}, "downloads": -1, "filename": "evopy-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2c09fc17e83265733089fdafcbc99977", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8167, "upload_time": "2019-05-30T16:12:30", "upload_time_iso_8601": "2019-05-30T16:12:30.664226Z", "url": "https://files.pythonhosted.org/packages/27/b3/afab82828ffef283190aa57ffc26b65e122070781848109d0372bae5052c/evopy-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a0f921cbff36437c415e5a11ebc91e7", "sha256": "5f3109c4a3366b3d69d6245eabf3529a6435659f1612cda06180c5b05db5326c"}, "downloads": -1, "filename": "evopy-0.2.2.tar.gz", "has_sig": false, "md5_digest": "5a0f921cbff36437c415e5a11ebc91e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6702, "upload_time": "2019-05-30T16:12:32", "upload_time_iso_8601": "2019-05-30T16:12:32.057094Z", "url": "https://files.pythonhosted.org/packages/d5/29/723cadfbcdf0a1d734f3c2592a2142282a1ec99d252f08b78fd2732ed657/evopy-0.2.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "659f4ce7ce1d762d67213bd82b25083c", "sha256": "dd1b909cc949f77564d6cf6eb43cf609660e73d6b6b584d16a5937849eac9a81"}, "downloads": -1, "filename": "evopy-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "659f4ce7ce1d762d67213bd82b25083c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8472, "upload_time": "2019-06-01T09:44:38", "upload_time_iso_8601": "2019-06-01T09:44:38.681481Z", "url": "https://files.pythonhosted.org/packages/25/c1/000d76d1df352ac1353681180d8b778799d4527683781b9447ebe68a15da/evopy-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ee126c894da70ebe55fd3c9f3ac7f24", "sha256": "a3b3c122383a98b3ee9647fb26b07d8cbf656a3ac929cfd2cd98268ea3262fdb"}, "downloads": -1, "filename": "evopy-0.3.tar.gz", "has_sig": false, "md5_digest": "8ee126c894da70ebe55fd3c9f3ac7f24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7132, "upload_time": "2019-06-01T09:44:40", "upload_time_iso_8601": "2019-06-01T09:44:40.111069Z", "url": "https://files.pythonhosted.org/packages/48/1b/9333e30a7930feba44a443be9d06f6e283ea8a1f5df915704a7aba85cfe3/evopy-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "659f4ce7ce1d762d67213bd82b25083c", "sha256": "dd1b909cc949f77564d6cf6eb43cf609660e73d6b6b584d16a5937849eac9a81"}, "downloads": -1, "filename": "evopy-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "659f4ce7ce1d762d67213bd82b25083c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8472, "upload_time": "2019-06-01T09:44:38", "upload_time_iso_8601": "2019-06-01T09:44:38.681481Z", "url": "https://files.pythonhosted.org/packages/25/c1/000d76d1df352ac1353681180d8b778799d4527683781b9447ebe68a15da/evopy-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ee126c894da70ebe55fd3c9f3ac7f24", "sha256": "a3b3c122383a98b3ee9647fb26b07d8cbf656a3ac929cfd2cd98268ea3262fdb"}, "downloads": -1, "filename": "evopy-0.3.tar.gz", "has_sig": false, "md5_digest": "8ee126c894da70ebe55fd3c9f3ac7f24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7132, "upload_time": "2019-06-01T09:44:40", "upload_time_iso_8601": "2019-06-01T09:44:40.111069Z", "url": "https://files.pythonhosted.org/packages/48/1b/9333e30a7930feba44a443be9d06f6e283ea8a1f5df915704a7aba85cfe3/evopy-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:05 2020"}