{"info": {"author": "Mohammadreza Alihoseiny", "author_email": "salam@alihoseiny.ir", "bugtrack_url": null, "classifiers": [], "description": "# WordCloudFa\n[![Downloads](https://pepy.tech/badge/wordcloud-fa)](https://pepy.tech/project/wordcloud-fa)\n![](https://img.shields.io/pypi/v/wordcloud-fa.svg?style=popout)\n\n\n![](https://github.com/alihoseiny/word_cloud_fa/raw/master/Examples/masked-example.png)\n\n\nThis module is an easy-to-use wrapper for [word_cloud module](https://github.com/amueller/word_cloud).\n\nThe original module doesn't support Farsi Texts. But by using **WordCloudFa** you can generate word clouds from \ntexts those are including Persian and English words.\n\nThis module is not only a wrapper, but it adds some features to the original module.\n\n<!-- toc -->\n\n- [How to Install](#how-to-install)\n- [How to Use](#how-to-use)\n  * [Generating Word Cloud from Text](#generating-word-cloud-from-text)\n  * [Generating Word Cloud from Frequencies](#generating-word-cloud-from-frequencies)\n  * [Working with Stopwords](#working-with-stopwords)\n  * [Mask Image](#mask-image)\n  * [Reshaping words](#reshaping-words)\n- [Examples](#examples)\n- [Font](#font)\n- [Persian Tutorial](#persian-tutorial)\n- [Contribution](#contribution)\n- [Common Problems](#Common-Problems)\n  * [Farsi Letters are separated](#Farsi-Letters-are-separated)\n  * [I See Repeated Farsi Words](#I-See-Repeated-Farsi-Words)\n  * [I Have Problem in Running Example Scripts](#I-Have-Problem-in-Running-Example-Scripts)\n- [There is any problem?](#there-is-any-problem)\n- [Citations](#citations)\n\n<!-- tocstop -->\n\n# How to Install\nIf you want to use this module on the Windows operating system, you SHOULD use following command for installation:\n\n`pip install wordcloud-fa==0.1.4`\n\nFor installing this module on other operating systems, you can simply run \n\n`pip install wordcloud-fa`.\n\nThis module tested on `python 3`\n\n*WordCloudFa* depends on `numpy` and `pillow`.\n\nAlso you should have `Hazm` module. Normally, all of them will install automatically when you install this module using \n`pip` as described at the beginning of this section.  \n\nTo save the wordcloud into a file, `matplotlib` can also be installed.\n\n**Attention**\n\nYou need to have `python-dev` for python3 on your system. If you don't have it, you can install it on operating systems \nthose using `apt` as the package manager (Like Ubuntu) by this command:\n\n`sudo apt-get install python3-dev`\n\nAnd you can install it on operating systems those using `yum` as the package manager (like RedHat, Fedora and ...) you can \nuse the following command:\n\n`sudo yum install python3-devel` \n\n# How to Use\nFor creating a word cloud from a text, first you should import the class into your code:\n\n`from wordcloud_fa import WordCloudFa`\n\nyou can create an instance of this class like:\n\n`wodcloud = WordCloudFa()`\n\nYou can pass different parameters to the constructor. For see full documents of them, you can see \n[WordCloud Documentations](https://amueller.github.io/word_cloud/) \n\nThere are three parameters that are not in the original class.\n\nFirst one is `persian_normalize`. If you pass this parameter with `True` value, your data will normalize by using \n[Hazm normalizer](https://github.com/sobhe/hazm). It's recommended to always pass this parameter. That will replace \narabic letters with persian ones and do some other stuff.\nThe default value of this parameter is `False`.\n\n`wodcloud = WordCloudFa(persian_normalize=True)`  \n\nthe second parameter is `include_numbers` that is not in the published original module. If you set this parameter to `False`,\n all Persian, Arabic and English numbers will remove from your data.\n\n The default value of this parameter is `True`\n\n `wodcloud = WordCloudFa(include_numbers=False)`\n\n **Common problem Hint:**\n\n The last and very important parameter is: `no_reshape`. The default value of the parameter is `False`. But if you see \n that the letters of the words in Farsi texts are separated in your local system, you should pass `True` value to this parameter.\n ```python\nwordcloud = WordCloudFa(no_reshape=True)\n ```\n ## Generating Word Cloud from Text\n for generating word cloud from a string, you can simply call `generate` method of you instance:\n\n ```python\nwodcloud = WordCloudFa(persian_normalize=True)\nwc = wodcloud.generate(text)\nimage = wc.to_image()\nimage.show()\nimage.save('wordcloud.png')\n\n ```\n\n## Generating Word Cloud from Frequencies\n\nYou can generate a word cloud from frequencies. You can use the output of `process_text` method as frequencies.\n Also you can use any dictionary like this.\n\n ```python\nwodcloud = WordCloudFa()\nfrequencies = wodcloud.process_text(text)\nwc = wodcloud.generate_from_frequencies(frequencies)\n ```\n\n`generate_from_frequencies` method in this module will exclude stopwords. But the original module will not exclude them \nwhen you are using this method. Also you can use Persian words as keys in frequencies dict without any problem.\n\n## Working with Stopwords\n\nStopwords are the words that we don't want to consider. If you dan't pass any stopword, the default words in the \n[stopwords](https://github.com/alihoseiny/word_cloud_fa/blob/master/wordcloud_fa/stopwords) file will consider as \nstopwords.\n\nYou don't want to use them at all and you want to choose your stopwords? you can simply set `stopwords` parameter when \nyou are creating an instance from `WordCloudFa` and pass a `set` of words into it.\n\n```python\nstop_words = set(['\u06a9\u0644\u0645\u0647\u200c\u06cc \u0627\u0648\u0644', '\u06a9\u0644\u0645\u0647\u200c\u06cc \u062f\u0648\u0645'])\nwc = WordCloudFa(stopwords=stop_words)\n```\n\nIf you want to add additional words to the default stopwords, you can simply call `add_stop_words` method on your \ninstance of `WordCloudFa` and pass an iterable type (`list`, `set`, ...) into it.\n\n```python\nwc = WordCloudFa()\nwc.add_stop_words(['\u06a9\u0644\u0645\u0647\u200c\u06cc \u0627\u0648\u0644', '\u06a9\u0644\u0645\u0647\u200c\u06cc \u062f\u0648\u0645'])\n```\n\nAlso you can add stopwords from a file. That file should include stopwords and each word should be in a separate line.\n\nFor that, you should use `add_stop_words_from_file` method. The only parameter of this \n\nmethod is relative or absolute path to the stop words file.\n\n```python\nwc = WordCloudFa()\nwc.add_stop_words_from_file(\"stopwords.txt\")\n```\n\n## Mask Image\n\nYou can mask the final word cloud by an image. For example, the first image of this document is a wordcloud masked by an image \nof the map of Iran country. For setting a mask, you should pass the `mask` parameter.\n\nBut before, you first should be sure you have a black and white image. Because other images will not create a good result.\n\nThen, you should convert that image to a numpy array. For that, you should do something like this:\n\n```python\nimport numpy as np\nfrom PIL import Image\n\nmask_array = np.array(Image.open(\"mask.png\"))\n\n```\n\nYou just should add those two imports, but you don't need to be worried about installing them, because those have been \ninstalled as dependencies of this module.\n\nThen, you can pass that array to the constructor of the `WordCloudFa` class for masking the result.\n\n```python\nwodcloud = WordCloudFa(mask=mask_array)\n```\n\nNow you can use your worldcloud instance as before.\n\n## Reshaping words\n\nWhen you pass your texts into an instance of this class, all words will reshape for turning to a proper way for showing \nAnd avoiding the invalid shape of Persian or Arabic words (splitted and inverse letters).\n\nIf you want to do the same thing outside of this module, you can call `reshape_words` static method.\n\n```python\nreshaped_words = WordCloudFa.reshape_words(['\u06a9\u0644\u0645\u0647\u200c\u06cc \u0627\u0648\u0644', '\u06a9\u0644\u0645\u0647\u200c\u06cc \u062f\u0648\u0645'])\n```\n\nthis method gets an `Iterable` as input and returns a list of reshaped words.\n\n**DONT FORGET THAT YOU SHOULD NOT PASS RESHAPED WORDS TO THE METHODS OF THIS CLASS AND THIS STATIC METHOD IS ONLY FOR USAGES OUT OF THIS MODULE**\n\n# Examples\nYou can see [Example codes in the Examples directory](https://github.com/alihoseiny/word_cloud_fa/tree/master/Examples).\n\n![](https://github.com/alihoseiny/word_cloud_fa/raw/master/Examples/english-example.png)\n![](https://github.com/alihoseiny/word_cloud_fa/raw/master/Examples/mixed-example.png)\n![](https://github.com/alihoseiny/word_cloud_fa/raw/master/Examples/persian-example.png)\n\n# Font\nThe default font is an unknown! font that supports both Persian and English letters. So you don't need to pass a font for \ngetting results. But if you want to change the font you can pass `font_path` parameter.\n\n# Persian Tutorial\nIf you want to read a brief tutorial about how to use this package in Farsi (Persian), you can \n[click on this link](https://blog.alihoseiny.ir/%da%86%da%af%d9%88%d9%86%d9%87-%d8%a8%d8%a7-%d9%be%d8%a7%db%8c%d8%aa%d9%88%d9%86-%d8%a7%d8%a8%d8%b1-%da%a9%d9%84%d9%85%d8%a7%d8%aa-%d9%81%d8%a7%d8%b1%d8%b3%db%8c-%d8%a8%d8%b3%d8%a7%d8%b2%db%8c%d9%85%d8%9f/?utm_source=github&utm_medium=readme&utm_campaign=wordcloudfa).\n\n# Contribution\nWe want to keep this library fresh and useful for all Iranian developers. So we need your help for adding new features, fixing bugs and adding more documents.\n\nYou are wondering how you can contribute to this project? Here is a list of what you can do:\n\n1. Documents are not enough? You can help us by adding more documents.\n2. The current code could be better? You can make this cleaner or faster.\n3. Do you think one useful feature missed? You can open an issue and tell us about it.\n4. Did you find a good open and free font that supports Farsi and English? You can notify us by a pull request or if opening an issue\n\n# Common Problems\n\n## Farsi Letters are separated\n\nIf you see separated Farsi letters in your output, you should pass `no_reshape=True` parameter to your `WordCoudFa` constructor:\n\n```python\nwodcloud = WordCloudFa(no_reshape=True)\n```\n\n\n\n## I See Repeated Farsi Words\n\nIn some cases you may see repeated Farsi words in the output. For solving that problem, you should pass `collocations=False` Parameter to your `WordCloudFa` constructor:\n\n```python\nwodcloud = WordCloudFa(collocations=False)\n```\n\n## I Have Problem in Running Example Scripts\n\nIn some operating systems like Windows, you should specify the encoding of the example text files. If you can not open example files, add `encoding=\"utf-8\"` to your open statements:\n\n```python\nwith open('persian-example.txt', 'r', encoding=\"utf-8\") as file:\n```\n\n\n\n# There is any problem?\nIf you have questions, find some bugs or need some features, you can open an issue and tell us. For some strange reasons this is not possible? so contact me by this email: `salam@alihoseiny.ir`.\n\n# Citations\nTexts in the `Example` directory are from [this](https://fa.wikipedia.org/wiki/%D8%A7%DB%8C%D8%B1%D8%A7%D9%86) and [this](https://en.wikipedia.org/wiki/Iran) Wikipedia pages.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/alihoseiny/word_cloud_fa/archive/V0.1.6.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alihoseiny/word_cloud_fa", "keywords": "wordcloud,word cloud,Farsi,persian,Iran,nlp,National Language Processing,text processing,data visualization", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wordcloud-fa", "package_url": "https://pypi.org/project/wordcloud-fa/", "platform": "", "project_url": "https://pypi.org/project/wordcloud-fa/", "project_urls": {"Download": "https://github.com/alihoseiny/word_cloud_fa/archive/V0.1.6.tar.gz", "Homepage": "https://github.com/alihoseiny/word_cloud_fa"}, "release_url": "https://pypi.org/project/wordcloud-fa/0.1.6/", "requires_dist": ["numpy (>=1.18.1)", "pillow (>=7.0.0)", "matplotlib (>=3.1.2)", "arabic-reshaper", "python-bidi", "wordcloud (>=1.6.0)", "hazm"], "requires_python": "", "summary": "A wrapper for wordcloud module for creating persian (and other rtl languages) word cloud.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WordCloudFa</h1>\n<p><a href=\"https://pepy.tech/project/wordcloud-fa\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a1bd1b5d70c3564633667e8cca88677d3a2aff1/68747470733a2f2f706570792e746563682f62616467652f776f7264636c6f75642d6661\"></a>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e539467097f41323d42af9f7578d0c5f34d14b95/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f776f7264636c6f75642d66612e7376673f7374796c653d706f706f7574\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ec9eba6e7439bed8033093cc89505517a85dcd9/68747470733a2f2f6769746875622e636f6d2f616c69686f7365696e792f776f72645f636c6f75645f66612f7261772f6d61737465722f4578616d706c65732f6d61736b65642d6578616d706c652e706e67\"></p>\n<p>This module is an easy-to-use wrapper for <a href=\"https://github.com/amueller/word_cloud\" rel=\"nofollow\">word_cloud module</a>.</p>\n<p>The original module doesn't support Farsi Texts. But by using <strong>WordCloudFa</strong> you can generate word clouds from\ntexts those are including Persian and English words.</p>\n<p>This module is not only a wrapper, but it adds some features to the original module.</p>\n\n<ul>\n<li><a href=\"#how-to-install\" rel=\"nofollow\">How to Install</a></li>\n<li><a href=\"#how-to-use\" rel=\"nofollow\">How to Use</a>\n<ul>\n<li><a href=\"#generating-word-cloud-from-text\" rel=\"nofollow\">Generating Word Cloud from Text</a></li>\n<li><a href=\"#generating-word-cloud-from-frequencies\" rel=\"nofollow\">Generating Word Cloud from Frequencies</a></li>\n<li><a href=\"#working-with-stopwords\" rel=\"nofollow\">Working with Stopwords</a></li>\n<li><a href=\"#mask-image\" rel=\"nofollow\">Mask Image</a></li>\n<li><a href=\"#reshaping-words\" rel=\"nofollow\">Reshaping words</a></li>\n</ul>\n</li>\n<li><a href=\"#examples\" rel=\"nofollow\">Examples</a></li>\n<li><a href=\"#font\" rel=\"nofollow\">Font</a></li>\n<li><a href=\"#persian-tutorial\" rel=\"nofollow\">Persian Tutorial</a></li>\n<li><a href=\"#contribution\" rel=\"nofollow\">Contribution</a></li>\n<li><a href=\"#Common-Problems\" rel=\"nofollow\">Common Problems</a>\n<ul>\n<li><a href=\"#Farsi-Letters-are-separated\" rel=\"nofollow\">Farsi Letters are separated</a></li>\n<li><a href=\"#I-See-Repeated-Farsi-Words\" rel=\"nofollow\">I See Repeated Farsi Words</a></li>\n<li><a href=\"#I-Have-Problem-in-Running-Example-Scripts\" rel=\"nofollow\">I Have Problem in Running Example Scripts</a></li>\n</ul>\n</li>\n<li><a href=\"#there-is-any-problem\" rel=\"nofollow\">There is any problem?</a></li>\n<li><a href=\"#citations\" rel=\"nofollow\">Citations</a></li>\n</ul>\n\n<h1>How to Install</h1>\n<p>If you want to use this module on the Windows operating system, you SHOULD use following command for installation:</p>\n<p><code>pip install wordcloud-fa==0.1.4</code></p>\n<p>For installing this module on other operating systems, you can simply run</p>\n<p><code>pip install wordcloud-fa</code>.</p>\n<p>This module tested on <code>python 3</code></p>\n<p><em>WordCloudFa</em> depends on <code>numpy</code> and <code>pillow</code>.</p>\n<p>Also you should have <code>Hazm</code> module. Normally, all of them will install automatically when you install this module using\n<code>pip</code> as described at the beginning of this section.</p>\n<p>To save the wordcloud into a file, <code>matplotlib</code> can also be installed.</p>\n<p><strong>Attention</strong></p>\n<p>You need to have <code>python-dev</code> for python3 on your system. If you don't have it, you can install it on operating systems\nthose using <code>apt</code> as the package manager (Like Ubuntu) by this command:</p>\n<p><code>sudo apt-get install python3-dev</code></p>\n<p>And you can install it on operating systems those using <code>yum</code> as the package manager (like RedHat, Fedora and ...) you can\nuse the following command:</p>\n<p><code>sudo yum install python3-devel</code></p>\n<h1>How to Use</h1>\n<p>For creating a word cloud from a text, first you should import the class into your code:</p>\n<p><code>from wordcloud_fa import WordCloudFa</code></p>\n<p>you can create an instance of this class like:</p>\n<p><code>wodcloud = WordCloudFa()</code></p>\n<p>You can pass different parameters to the constructor. For see full documents of them, you can see\n<a href=\"https://amueller.github.io/word_cloud/\" rel=\"nofollow\">WordCloud Documentations</a></p>\n<p>There are three parameters that are not in the original class.</p>\n<p>First one is <code>persian_normalize</code>. If you pass this parameter with <code>True</code> value, your data will normalize by using\n<a href=\"https://github.com/sobhe/hazm\" rel=\"nofollow\">Hazm normalizer</a>. It's recommended to always pass this parameter. That will replace\narabic letters with persian ones and do some other stuff.\nThe default value of this parameter is <code>False</code>.</p>\n<p><code>wodcloud = WordCloudFa(persian_normalize=True)</code></p>\n<p>the second parameter is <code>include_numbers</code> that is not in the published original module. If you set this parameter to <code>False</code>,\nall Persian, Arabic and English numbers will remove from your data.</p>\n<p>The default value of this parameter is <code>True</code></p>\n<p><code>wodcloud = WordCloudFa(include_numbers=False)</code></p>\n<p><strong>Common problem Hint:</strong></p>\n<p>The last and very important parameter is: <code>no_reshape</code>. The default value of the parameter is <code>False</code>. But if you see\nthat the letters of the words in Farsi texts are separated in your local system, you should pass <code>True</code> value to this parameter.</p>\n<pre><span class=\"n\">wordcloud</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">(</span><span class=\"n\">no_reshape</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Generating Word Cloud from Text</h2>\n<p>for generating word cloud from a string, you can simply call <code>generate</code> method of you instance:</p>\n<pre><span class=\"n\">wodcloud</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">(</span><span class=\"n\">persian_normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">wc</span> <span class=\"o\">=</span> <span class=\"n\">wodcloud</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">wc</span><span class=\"o\">.</span><span class=\"n\">to_image</span><span class=\"p\">()</span>\n<span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n<span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'wordcloud.png'</span><span class=\"p\">)</span>\n</pre>\n<h2>Generating Word Cloud from Frequencies</h2>\n<p>You can generate a word cloud from frequencies. You can use the output of <code>process_text</code> method as frequencies.\nAlso you can use any dictionary like this.</p>\n<pre><span class=\"n\">wodcloud</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">()</span>\n<span class=\"n\">frequencies</span> <span class=\"o\">=</span> <span class=\"n\">wodcloud</span><span class=\"o\">.</span><span class=\"n\">process_text</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"n\">wc</span> <span class=\"o\">=</span> <span class=\"n\">wodcloud</span><span class=\"o\">.</span><span class=\"n\">generate_from_frequencies</span><span class=\"p\">(</span><span class=\"n\">frequencies</span><span class=\"p\">)</span>\n</pre>\n<p><code>generate_from_frequencies</code> method in this module will exclude stopwords. But the original module will not exclude them\nwhen you are using this method. Also you can use Persian words as keys in frequencies dict without any problem.</p>\n<h2>Working with Stopwords</h2>\n<p>Stopwords are the words that we don't want to consider. If you dan't pass any stopword, the default words in the\n<a href=\"https://github.com/alihoseiny/word_cloud_fa/blob/master/wordcloud_fa/stopwords\" rel=\"nofollow\">stopwords</a> file will consider as\nstopwords.</p>\n<p>You don't want to use them at all and you want to choose your stopwords? you can simply set <code>stopwords</code> parameter when\nyou are creating an instance from <code>WordCloudFa</code> and pass a <code>set</code> of words into it.</p>\n<pre><span class=\"n\">stop_words</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">([</span><span class=\"s1\">'\u06a9\u0644\u0645\u0647\u200c\u06cc \u0627\u0648\u0644'</span><span class=\"p\">,</span> <span class=\"s1\">'\u06a9\u0644\u0645\u0647\u200c\u06cc \u062f\u0648\u0645'</span><span class=\"p\">])</span>\n<span class=\"n\">wc</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">(</span><span class=\"n\">stopwords</span><span class=\"o\">=</span><span class=\"n\">stop_words</span><span class=\"p\">)</span>\n</pre>\n<p>If you want to add additional words to the default stopwords, you can simply call <code>add_stop_words</code> method on your\ninstance of <code>WordCloudFa</code> and pass an iterable type (<code>list</code>, <code>set</code>, ...) into it.</p>\n<pre><span class=\"n\">wc</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">()</span>\n<span class=\"n\">wc</span><span class=\"o\">.</span><span class=\"n\">add_stop_words</span><span class=\"p\">([</span><span class=\"s1\">'\u06a9\u0644\u0645\u0647\u200c\u06cc \u0627\u0648\u0644'</span><span class=\"p\">,</span> <span class=\"s1\">'\u06a9\u0644\u0645\u0647\u200c\u06cc \u062f\u0648\u0645'</span><span class=\"p\">])</span>\n</pre>\n<p>Also you can add stopwords from a file. That file should include stopwords and each word should be in a separate line.</p>\n<p>For that, you should use <code>add_stop_words_from_file</code> method. The only parameter of this</p>\n<p>method is relative or absolute path to the stop words file.</p>\n<pre><span class=\"n\">wc</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">()</span>\n<span class=\"n\">wc</span><span class=\"o\">.</span><span class=\"n\">add_stop_words_from_file</span><span class=\"p\">(</span><span class=\"s2\">\"stopwords.txt\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Mask Image</h2>\n<p>You can mask the final word cloud by an image. For example, the first image of this document is a wordcloud masked by an image\nof the map of Iran country. For setting a mask, you should pass the <code>mask</code> parameter.</p>\n<p>But before, you first should be sure you have a black and white image. Because other images will not create a good result.</p>\n<p>Then, you should convert that image to a numpy array. For that, you should do something like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">PIL</span> <span class=\"kn\">import</span> <span class=\"n\">Image</span>\n\n<span class=\"n\">mask_array</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">(</span><span class=\"n\">Image</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"mask.png\"</span><span class=\"p\">))</span>\n</pre>\n<p>You just should add those two imports, but you don't need to be worried about installing them, because those have been\ninstalled as dependencies of this module.</p>\n<p>Then, you can pass that array to the constructor of the <code>WordCloudFa</code> class for masking the result.</p>\n<pre><span class=\"n\">wodcloud</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">(</span><span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"n\">mask_array</span><span class=\"p\">)</span>\n</pre>\n<p>Now you can use your worldcloud instance as before.</p>\n<h2>Reshaping words</h2>\n<p>When you pass your texts into an instance of this class, all words will reshape for turning to a proper way for showing\nAnd avoiding the invalid shape of Persian or Arabic words (splitted and inverse letters).</p>\n<p>If you want to do the same thing outside of this module, you can call <code>reshape_words</code> static method.</p>\n<pre><span class=\"n\">reshaped_words</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"o\">.</span><span class=\"n\">reshape_words</span><span class=\"p\">([</span><span class=\"s1\">'\u06a9\u0644\u0645\u0647\u200c\u06cc \u0627\u0648\u0644'</span><span class=\"p\">,</span> <span class=\"s1\">'\u06a9\u0644\u0645\u0647\u200c\u06cc \u062f\u0648\u0645'</span><span class=\"p\">])</span>\n</pre>\n<p>this method gets an <code>Iterable</code> as input and returns a list of reshaped words.</p>\n<p><strong>DONT FORGET THAT YOU SHOULD NOT PASS RESHAPED WORDS TO THE METHODS OF THIS CLASS AND THIS STATIC METHOD IS ONLY FOR USAGES OUT OF THIS MODULE</strong></p>\n<h1>Examples</h1>\n<p>You can see <a href=\"https://github.com/alihoseiny/word_cloud_fa/tree/master/Examples\" rel=\"nofollow\">Example codes in the Examples directory</a>.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5265a077e6f06049af24058a419d59dd8d75ce18/68747470733a2f2f6769746875622e636f6d2f616c69686f7365696e792f776f72645f636c6f75645f66612f7261772f6d61737465722f4578616d706c65732f656e676c6973682d6578616d706c652e706e67\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/615da68b50aae7dffaf10fb84207f42dcddf4668/68747470733a2f2f6769746875622e636f6d2f616c69686f7365696e792f776f72645f636c6f75645f66612f7261772f6d61737465722f4578616d706c65732f6d697865642d6578616d706c652e706e67\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01bd12071c4dccdc826e98ebb74984053b013735/68747470733a2f2f6769746875622e636f6d2f616c69686f7365696e792f776f72645f636c6f75645f66612f7261772f6d61737465722f4578616d706c65732f7065727369616e2d6578616d706c652e706e67\"></p>\n<h1>Font</h1>\n<p>The default font is an unknown! font that supports both Persian and English letters. So you don't need to pass a font for\ngetting results. But if you want to change the font you can pass <code>font_path</code> parameter.</p>\n<h1>Persian Tutorial</h1>\n<p>If you want to read a brief tutorial about how to use this package in Farsi (Persian), you can\n<a href=\"https://blog.alihoseiny.ir/%da%86%da%af%d9%88%d9%86%d9%87-%d8%a8%d8%a7-%d9%be%d8%a7%db%8c%d8%aa%d9%88%d9%86-%d8%a7%d8%a8%d8%b1-%da%a9%d9%84%d9%85%d8%a7%d8%aa-%d9%81%d8%a7%d8%b1%d8%b3%db%8c-%d8%a8%d8%b3%d8%a7%d8%b2%db%8c%d9%85%d8%9f/?utm_source=github&amp;utm_medium=readme&amp;utm_campaign=wordcloudfa\" rel=\"nofollow\">click on this link</a>.</p>\n<h1>Contribution</h1>\n<p>We want to keep this library fresh and useful for all Iranian developers. So we need your help for adding new features, fixing bugs and adding more documents.</p>\n<p>You are wondering how you can contribute to this project? Here is a list of what you can do:</p>\n<ol>\n<li>Documents are not enough? You can help us by adding more documents.</li>\n<li>The current code could be better? You can make this cleaner or faster.</li>\n<li>Do you think one useful feature missed? You can open an issue and tell us about it.</li>\n<li>Did you find a good open and free font that supports Farsi and English? You can notify us by a pull request or if opening an issue</li>\n</ol>\n<h1>Common Problems</h1>\n<h2>Farsi Letters are separated</h2>\n<p>If you see separated Farsi letters in your output, you should pass <code>no_reshape=True</code> parameter to your <code>WordCoudFa</code> constructor:</p>\n<pre><span class=\"n\">wodcloud</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">(</span><span class=\"n\">no_reshape</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>I See Repeated Farsi Words</h2>\n<p>In some cases you may see repeated Farsi words in the output. For solving that problem, you should pass <code>collocations=False</code> Parameter to your <code>WordCloudFa</code> constructor:</p>\n<pre><span class=\"n\">wodcloud</span> <span class=\"o\">=</span> <span class=\"n\">WordCloudFa</span><span class=\"p\">(</span><span class=\"n\">collocations</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h2>I Have Problem in Running Example Scripts</h2>\n<p>In some operating systems like Windows, you should specify the encoding of the example text files. If you can not open example files, add <code>encoding=\"utf-8\"</code> to your open statements:</p>\n<pre><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'persian-example.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n</pre>\n<h1>There is any problem?</h1>\n<p>If you have questions, find some bugs or need some features, you can open an issue and tell us. For some strange reasons this is not possible? so contact me by this email: <code>salam@alihoseiny.ir</code>.</p>\n<h1>Citations</h1>\n<p>Texts in the <code>Example</code> directory are from <a href=\"https://fa.wikipedia.org/wiki/%D8%A7%DB%8C%D8%B1%D8%A7%D9%86\" rel=\"nofollow\">this</a> and <a href=\"https://en.wikipedia.org/wiki/Iran\" rel=\"nofollow\">this</a> Wikipedia pages.</p>\n\n          </div>"}, "last_serial": 6711237, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "0efeee0c2b79612c574820a6a81b761f", "sha256": "d1f4ee32a65823d0c704813721aa55c25aa7ef0de20b230d226b809e2b401f01"}, "downloads": -1, "filename": "wordcloud_fa-0.1.tar.gz", "has_sig": false, "md5_digest": "0efeee0c2b79612c574820a6a81b761f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3093, "upload_time": "2019-05-17T18:46:02", "upload_time_iso_8601": "2019-05-17T18:46:02.396534Z", "url": "https://files.pythonhosted.org/packages/3e/a6/0abce579a2b35bbe1905fdbbf3cd38d74850aaf60b21025e43c6f13fc4b4/wordcloud_fa-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4b81bbe7552cac83ae9cc7818405dbe6", "sha256": "aba34b0fedf6edb692db417c1235cc1117cb070e67e0b4f890a64824480cb263"}, "downloads": -1, "filename": "wordcloud_fa-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4b81bbe7552cac83ae9cc7818405dbe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64602, "upload_time": "2019-05-17T19:00:39", "upload_time_iso_8601": "2019-05-17T19:00:39.029753Z", "url": "https://files.pythonhosted.org/packages/bb/8b/bdc580bb48c842723f837ace7f8ac0855b9bebe68449297ef02cb9f03965/wordcloud_fa-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c709dd1e1cb1b5f1d5a936ebb5aba731", "sha256": "444a87e770014359a7d7852a84ec35d35f743d2429a71f964cac9e5656f05644"}, "downloads": -1, "filename": "wordcloud_fa-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c709dd1e1cb1b5f1d5a936ebb5aba731", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64726, "upload_time": "2019-05-18T05:03:42", "upload_time_iso_8601": "2019-05-18T05:03:42.552804Z", "url": "https://files.pythonhosted.org/packages/10/cd/fb7f3524811710bc5fc180bb734540627148f7989a555109e8e15996f91d/wordcloud_fa-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "8de1616fd73d1cad8aae3c54c3472fe9", "sha256": "2fd2bbaeeceecec36732066bc748a4905b25849514a12c28babd11d217c3b0db"}, "downloads": -1, "filename": "wordcloud_fa-0.1.3.tar.gz", "has_sig": false, "md5_digest": "8de1616fd73d1cad8aae3c54c3472fe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72687, "upload_time": "2019-06-06T07:42:09", "upload_time_iso_8601": "2019-06-06T07:42:09.377852Z", "url": "https://files.pythonhosted.org/packages/fe/2b/4e765f7d2fe0df1966b5cd8d4b63fd76ba7235f98b970e25b4ebf181e687/wordcloud_fa-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "856c051dd66265c644c6d0b3e11d0ade", "sha256": "ba47a4ea37773698626e20870a551470cb95ae8f7cbf768fbac315efd42470ba"}, "downloads": -1, "filename": "wordcloud_fa-0.1.4.tar.gz", "has_sig": false, "md5_digest": "856c051dd66265c644c6d0b3e11d0ade", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73635, "upload_time": "2019-07-29T18:33:27", "upload_time_iso_8601": "2019-07-29T18:33:27.291809Z", "url": "https://files.pythonhosted.org/packages/49/bb/6904c325a1adba4a98cf8561f452308a8527318bc0e4383c7bc4b9131171/wordcloud_fa-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "8312068d07cc14aca28615b9ca2b32e0", "sha256": "8f9efca5665ce909ba93fbce58774ac32f33d5743799fcf1a727a03f78e3a9e4"}, "downloads": -1, "filename": "wordcloud_fa-0.1.5.tar.gz", "has_sig": false, "md5_digest": "8312068d07cc14aca28615b9ca2b32e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73947, "upload_time": "2020-01-23T12:13:10", "upload_time_iso_8601": "2020-01-23T12:13:10.765511Z", "url": "https://files.pythonhosted.org/packages/e6/4f/910b528dd4a4ed54777e57cf2cada229dae3962fb2342cc486c35b9dc03d/wordcloud_fa-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "813d82ff67eba166683ba480ad050d1f", "sha256": "624634371ede7d8af673bfcd3e556afbb7e8f6e5774c7c842be86651e56835fe"}, "downloads": -1, "filename": "wordcloud_fa-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "813d82ff67eba166683ba480ad050d1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71196, "upload_time": "2020-02-27T14:14:00", "upload_time_iso_8601": "2020-02-27T14:14:00.481346Z", "url": "https://files.pythonhosted.org/packages/ad/aa/7568e7ad95323c3a0269bb778e35df7c90d8f739637ad620334357278083/wordcloud_fa-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ede3a2865ffe81dfde1abda427742544", "sha256": "de6809e3d553c7f8cb56dee283f018ef370a9f51afce8c83cc08bdd55ae79d50"}, "downloads": -1, "filename": "wordcloud_fa-0.1.6.tar.gz", "has_sig": false, "md5_digest": "ede3a2865ffe81dfde1abda427742544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74988, "upload_time": "2020-02-27T14:14:03", "upload_time_iso_8601": "2020-02-27T14:14:03.708060Z", "url": "https://files.pythonhosted.org/packages/48/21/967d11f75024259e5e207d3032d14d750a09698e437ec32fe2056177f57b/wordcloud_fa-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "813d82ff67eba166683ba480ad050d1f", "sha256": "624634371ede7d8af673bfcd3e556afbb7e8f6e5774c7c842be86651e56835fe"}, "downloads": -1, "filename": "wordcloud_fa-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "813d82ff67eba166683ba480ad050d1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 71196, "upload_time": "2020-02-27T14:14:00", "upload_time_iso_8601": "2020-02-27T14:14:00.481346Z", "url": "https://files.pythonhosted.org/packages/ad/aa/7568e7ad95323c3a0269bb778e35df7c90d8f739637ad620334357278083/wordcloud_fa-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ede3a2865ffe81dfde1abda427742544", "sha256": "de6809e3d553c7f8cb56dee283f018ef370a9f51afce8c83cc08bdd55ae79d50"}, "downloads": -1, "filename": "wordcloud_fa-0.1.6.tar.gz", "has_sig": false, "md5_digest": "ede3a2865ffe81dfde1abda427742544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74988, "upload_time": "2020-02-27T14:14:03", "upload_time_iso_8601": "2020-02-27T14:14:03.708060Z", "url": "https://files.pythonhosted.org/packages/48/21/967d11f75024259e5e207d3032d14d750a09698e437ec32fe2056177f57b/wordcloud_fa-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:04 2020"}