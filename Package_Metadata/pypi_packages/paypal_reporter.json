{"info": {"author": "Itai Shirav", "author_email": "itai@platonix.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "PayPal Reporter\n===============\n\nA python library to generate reports about activity in a PayPal account.\nCurrently supports listing transactions from the previous month.\n\nI was looking for a way to get scheduled monthly summaries from PayPal, but could not find an existing solution.\nSo I created this project, which retrieves transaction information via PayPal's NVP API.\n\n*NOTE: This module is not created by, endorsed by, or in any way affiliated with PayPal.*\n\nInstallation\n------------\n\nTo install paypal_reporter::\n\n    pip install paypal_reporter\n\n\nUsage\n-----\n\nTo get a printout of the transactions from the previous month, first create a json file containing your PayPal account's credentials::\n\n    {\n        \"USER\": \"...\",\n        \"PWD\": \"...\",\n        \"SIGNATURE\": \"...\"\n    }\n\nThen run::\n\n    python -m paypal_reporter.transactions <path-to-credentials-file>\n\n\nLimitations\n-----------\n\nPayPal's API returns a maximum of 100 transactions. Currently this library does not handle pagination, therefore\nonly 100 transactions are retrieved.\n\n\nDependencies\n------------\n\n- `requests <http://docs.python-requests.org/>`_\n- `tabulate <https://pypi.python.org/pypi/tabulate>`_\n\n\nAPI\n---\n\nThe following methods are defined in ``paypal_reporter.transactions`` and can be used to create your own reports.\n\nget_transactions(credentials, start_datetime, end_datetime)\n    Gets the list of transactions from PayPal in the given date range. ``credentials`` should be a dictionary containing\n    ``USER``, ``PWD`` and ``SIGNATURE``. Returns a list of dicts, sorted by ascending timestamp. In case\n    of a problem the method raises ``paypal_reporter.transactions.PayPalError``.\n\nprint_transactions(txns, format='simple', columns=DEFAULT_COLUMNS)\n    Given a list of transaction dicts, this method formats them using the ``tabulate`` library and prints then to\n    stdout. ``format`` could be any format supported by ``tabulate``, such as plain / simple / html / tsv. ``columns``\n    is a list of column names to take from the transaction dicts. The default columns are TIMESTAMP, TRANSACTIONID,  \n    STATUS, TYPE, NAME, AMT, FEEAMT, NETAMT, and CURRENCYCODE.\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ishirav/paypal-reporter", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "paypal_reporter", "package_url": "https://pypi.org/project/paypal_reporter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/paypal_reporter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ishirav/paypal-reporter"}, "release_url": "https://pypi.org/project/paypal_reporter/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "A library to generate reports about activity in a PayPal account", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python library to generate reports about activity in a PayPal account.\nCurrently supports listing transactions from the previous month.</p>\n<p>I was looking for a way to get scheduled monthly summaries from PayPal, but could not find an existing solution.\nSo I created this project, which retrieves transaction information via PayPal\u2019s NVP API.</p>\n<p><em>NOTE: This module is not created by, endorsed by, or in any way affiliated with PayPal.</em></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install paypal_reporter:</p>\n<pre>pip install paypal_reporter\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To get a printout of the transactions from the previous month, first create a json file containing your PayPal account\u2019s credentials:</p>\n<pre>{\n    \"USER\": \"...\",\n    \"PWD\": \"...\",\n    \"SIGNATURE\": \"...\"\n}\n</pre>\n<p>Then run:</p>\n<pre>python -m paypal_reporter.transactions &lt;path-to-credentials-file&gt;\n</pre>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>PayPal\u2019s API returns a maximum of 100 transactions. Currently this library does not handle pagination, therefore\nonly 100 transactions are retrieved.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"http://docs.python-requests.org/\" rel=\"nofollow\">requests</a></li>\n<li><a href=\"https://pypi.python.org/pypi/tabulate\" rel=\"nofollow\">tabulate</a></li>\n</ul>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<p>The following methods are defined in <tt>paypal_reporter.transactions</tt> and can be used to create your own reports.</p>\n<dl>\n<dt>get_transactions(credentials, start_datetime, end_datetime)</dt>\n<dd>Gets the list of transactions from PayPal in the given date range. <tt>credentials</tt> should be a dictionary containing\n<tt>USER</tt>, <tt>PWD</tt> and <tt>SIGNATURE</tt>. Returns a list of dicts, sorted by ascending timestamp. In case\nof a problem the method raises <tt>paypal_reporter.transactions.PayPalError</tt>.</dd>\n<dt>print_transactions(txns, format=\u2019simple\u2019, columns=DEFAULT_COLUMNS)</dt>\n<dd>Given a list of transaction dicts, this method formats them using the <tt>tabulate</tt> library and prints then to\nstdout. <tt>format</tt> could be any format supported by <tt>tabulate</tt>, such as plain / simple / html / tsv. <tt>columns</tt>\nis a list of column names to take from the transaction dicts. The default columns are TIMESTAMP, TRANSACTIONID,\nSTATUS, TYPE, NAME, AMT, FEEAMT, NETAMT, and CURRENCYCODE.</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 2154337, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "97564c69a8c53e1d38e632f75dd9a011", "sha256": "a11b80223a7c82aefc38f4040bc35816b1c8d73bceaa4610e01f64e91b637561"}, "downloads": -1, "filename": "paypal_reporter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "97564c69a8c53e1d38e632f75dd9a011", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3934, "upload_time": "2016-04-29T10:11:41", "upload_time_iso_8601": "2016-04-29T10:11:41.118663Z", "url": "https://files.pythonhosted.org/packages/6f/01/1d315ec3db5bb026a984356be9ee5a8d3a6f423334b830413b597151b471/paypal_reporter-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1d4a8c1266160d0de88966ebed8aad17", "sha256": "f33c2cd3dcc64d874d93807491067de20aa56b71ba7832a76efa738f26de44f2"}, "downloads": -1, "filename": "paypal_reporter-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1d4a8c1266160d0de88966ebed8aad17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3959, "upload_time": "2016-06-07T07:01:47", "upload_time_iso_8601": "2016-06-07T07:01:47.884013Z", "url": "https://files.pythonhosted.org/packages/87/00/2febcda68f3cb27a2c67a6345e97a14ef0145a997200168682515af131ee/paypal_reporter-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1d4a8c1266160d0de88966ebed8aad17", "sha256": "f33c2cd3dcc64d874d93807491067de20aa56b71ba7832a76efa738f26de44f2"}, "downloads": -1, "filename": "paypal_reporter-0.1.3.tar.gz", "has_sig": false, "md5_digest": "1d4a8c1266160d0de88966ebed8aad17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3959, "upload_time": "2016-06-07T07:01:47", "upload_time_iso_8601": "2016-06-07T07:01:47.884013Z", "url": "https://files.pythonhosted.org/packages/87/00/2febcda68f3cb27a2c67a6345e97a14ef0145a997200168682515af131ee/paypal_reporter-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:40 2020"}