{"info": {"author": "Lenselle Nicolas", "author_email": "lenselle.nicolas@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "**`\ud83c\uddeb\ud83c\uddf7\nFran\u00e7ais <https://github.com/sne3ks/api_insee/blob/master/README.fr.md>`__**\n\nPython helper to request Sirene API\n\nAPI Sirene give access to French companies and business database.\nEntities are recorded since the creation of this administrative register\nin 1973. To use this API you have to create an account on\nhttps://api.insee.fr/\n\nThe python library ``api_insee`` is a help to request the API Sirene in\nperfect simplicity. You'll find more information about the API in the\n`official\ndocumentation <https://api.insee.fr/catalogue/site/themes/wso2/subthemes/insee/pages/item-info.jag?name=Sirene&version=V3&provider=insee>`__\n\nInstallation\n^^^^^^^^^^^^\n\nFrom a terminal :\n\n``pip install api-insee``\n\nTo request the API you must create a consummer account on\n`api.insee.fr <https://api.insee.fr>`__. Then with your access keys :\n\n.. code:: python\n\n    from api_insee import ApiInsee\n\n    api = ApiInsee(\n        key = # consummer key,\n        secret = # secret key\n    )\n\n--------------\n\nRequest samples\n^^^^^^^^^^^^^^^\n\n-  Fetch data from a siret or sirene number\n\n.. code:: python\n\n    data = api.siren('005520135').get()\n    data = api.siret('39860733300059').get()\n\n\n    # Request executed:\n    # https://api.insee.fr/entreprises/sirene/V3/siren/005520135\n    # https://api.insee.fr/entreprises/sirene/V3/siret/39860733300059\n\n-  Set parameters to the request:\n\n.. code:: python\n\n    data = api.siren('005520135', date='2018-01-01').get()\n\n    # Request executed:\n    # https://api.insee.fr/entreprises/sirene/V3/siren/005520135?date=2018-01-01\n\n-  Perform an advanced search on given criteria using ``q=`` parameter\n\n.. code:: python\n\n    data = api.siren(q='unitePurgeeUniteLegage:True').get()\n\n    # Request executed:\n    # /?q=unitePurgeeUniteLegage:True\n\n-  Filter fields in the response\n\n.. code:: python\n\n    champs = [\n        'siret',\n        'denominationUniteLegale',\n        'nomUsageUniteLegale',\n        'prenom1UniteLegale',\n    ]\n\n    request = api.siret('39860733300059', champs=champs)\n    # Request executed:\n    # /39860733300059?champs=siret,denominationUniteLegale,nomUsageUniteLegale,prenom1UniteLegale\n\n--------------\n\nAdvanced search on criteria\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nClass in ``api_insee.criteria`` let you construct advanced searchs\neasily. All variables available are described in the `official\ndocumentation <https://api.insee.fr/catalogue/site/themes/wso2/subthemes/insee/templates/api/documentation/download.jag?tenant=carbon.super&resourceUrl=/registry/resource/_system/governance/apimgt/applicationdata/provider/insee/Sirene/V3/documentation/files/INSEE%20Documentation%20API%20Sirene%20Variables-V3.7.pdf>`__\n\n-  You can combine several criteria in one request.\n\n.. code:: python\n\n    from api_insee.criteria import Field\n\n    data = api.siren(q=(\n        Field('codeCommuneEtablissement', 92046),\n        Field('unitePurgeeUniteLegale', True)\n    )).get()\n\n\n    # Request executed:\n    # /?q=codeCommuneEtablissement:92046 AND unitePurgeeUniteLegale:True\n\n-  Or using a dictionnary\n\n.. code:: python\n\n\n    data = api.siren(q={\n        'codeCommuneEtablissement' : 92046,\n        'unitePurgeeUniteLegale' : True\n    }).get()\n\n\n    # Request executed:\n    # /?q=codeCommuneEtablissement:92046 AND unitePurgeeUniteLegale:True\n\n-  Use logical operator ``|``, ``&``, ``- (not)`` to specify your\n   requests.\n\n.. code:: python\n\n\n    data = api.siren(q=(\n        Field('codeCommuneEtablissement', 92046) | Field('unitePurgeeUniteLegale', True)\n    )).get()\n\n    data = api.siren(q=-Field('codeCommuneEtablissement', 92046)).get()\n\n    # Request executed:\n    # /?q=codeCommuneEtablissement:92046 OR unitePurgeeUniteLegale:True\n    # /?q=-codeCommuneEtablissement:92046\n\nSpecial Search\n''''''''''''''\n\n+-------+--------------+----------+\n| Type  | Description  | Example  |\n+=======+==============+==========+\n| Field | Search on an | FieldExa |\n| Exact | exact value  | ct('demo |\n|       |              | nination |\n|       |              | UniteLeg |\n|       |              | ale','LE |\n|       |              | TIMBRE') |\n|       |              | )        |\n+-------+--------------+----------+\n| Perio | Search on    | Periodic |\n| dic   | periodic     | (Field(' |\n|       | field        | activite |\n|       |              | Principa |\n|       |              | leUniteL |\n|       |              | egale',' |\n|       |              | 84.23Z') |\n+-------+--------------+----------+\n| Range | Search in a  | Range('n |\n|       | range of     | omUsageU |\n|       | values       | niteLega |\n|       |              | le',     |\n|       |              | 'DUPONT' |\n|       |              | ,        |\n|       |              | 'DURANT' |\n|       |              | )        |\n+-------+--------------+----------+\n\n--------------\n\nPagination\n^^^^^^^^^^\n\nThe ``pages()`` method return an iterator to let you fetch pages from\nthe api. To specify the number of results per page use the ``nombre``\nargument. Results are limited by 10000 per pages.\n\n.. code:: python\n\n    from api_insee import ApiInsee\n\n    api = ApiInsee(\n        key = # consummer key,\n        secret = # secret key\n    )\n\n    request = api.siren(q={\n        'categorieEntreprise': 'PME'\n    })\n\n    for (page_index, page_result) in enumerate(request.pages(nombre=1000)):\n        # process here\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sne3ks/api_insee", "keywords": "", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "api-insee", "package_url": "https://pypi.org/project/api-insee/", "platform": "any", "project_url": "https://pypi.org/project/api-insee/", "project_urls": {"Homepage": "https://github.com/sne3ks/api_insee"}, "release_url": "https://pypi.org/project/api-insee/1.4/", "requires_dist": ["pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": "", "summary": "Python helper to request Sirene Api on api.insee.fr", "version": "1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>`\ud83c\uddeb\ud83c\uddf7\nFran\u00e7ais &lt;https://github.com/sne3ks/api_insee/blob/master/README.fr.md&gt;`__</strong></p>\n<p>Python helper to request Sirene API</p>\n<p>API Sirene give access to French companies and business database.\nEntities are recorded since the creation of this administrative register\nin 1973. To use this API you have to create an account on\n<a href=\"https://api.insee.fr/\" rel=\"nofollow\">https://api.insee.fr/</a></p>\n<p>The python library <tt>api_insee</tt> is a help to request the API Sirene in\nperfect simplicity. You\u2019ll find more information about the API in the\n<a href=\"https://api.insee.fr/catalogue/site/themes/wso2/subthemes/insee/pages/item-info.jag?name=Sirene&amp;version=V3&amp;provider=insee\" rel=\"nofollow\">official\ndocumentation</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>From a terminal :</p>\n<p><tt>pip install <span class=\"pre\">api-insee</span></tt></p>\n<p>To request the API you must create a consummer account on\n<a href=\"https://api.insee.fr\" rel=\"nofollow\">api.insee.fr</a>. Then with your access keys :</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">api_insee</span> <span class=\"kn\">import</span> <span class=\"n\">ApiInsee</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">ApiInsee</span><span class=\"p\">(</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"c1\"># consummer key,</span>\n    <span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"c1\"># secret key</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"request-samples\">\n<h2>Request samples</h2>\n<ul>\n<li>Fetch data from a siret or sirene number</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siren</span><span class=\"p\">(</span><span class=\"s1\">'005520135'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siret</span><span class=\"p\">(</span><span class=\"s1\">'39860733300059'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Request executed:</span>\n<span class=\"c1\"># https://api.insee.fr/entreprises/sirene/V3/siren/005520135</span>\n<span class=\"c1\"># https://api.insee.fr/entreprises/sirene/V3/siret/39860733300059</span>\n</pre>\n<ul>\n<li>Set parameters to the request:</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siren</span><span class=\"p\">(</span><span class=\"s1\">'005520135'</span><span class=\"p\">,</span> <span class=\"n\">date</span><span class=\"o\">=</span><span class=\"s1\">'2018-01-01'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Request executed:</span>\n<span class=\"c1\"># https://api.insee.fr/entreprises/sirene/V3/siren/005520135?date=2018-01-01</span>\n</pre>\n<ul>\n<li>Perform an advanced search on given criteria using <tt>q=</tt> parameter</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siren</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"s1\">'unitePurgeeUniteLegage:True'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Request executed:</span>\n<span class=\"c1\"># /?q=unitePurgeeUniteLegage:True</span>\n</pre>\n<ul>\n<li>Filter fields in the response</li>\n</ul>\n<pre><span class=\"n\">champs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'siret'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'denominationUniteLegale'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'nomUsageUniteLegale'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'prenom1UniteLegale'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siret</span><span class=\"p\">(</span><span class=\"s1\">'39860733300059'</span><span class=\"p\">,</span> <span class=\"n\">champs</span><span class=\"o\">=</span><span class=\"n\">champs</span><span class=\"p\">)</span>\n<span class=\"c1\"># Request executed:</span>\n<span class=\"c1\"># /39860733300059?champs=siret,denominationUniteLegale,nomUsageUniteLegale,prenom1UniteLegale</span>\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"advanced-search-on-criteria\">\n<h2>Advanced search on criteria</h2>\n<p>Class in <tt>api_insee.criteria</tt> let you construct advanced searchs\neasily. All variables available are described in the <a href=\"https://api.insee.fr/catalogue/site/themes/wso2/subthemes/insee/templates/api/documentation/download.jag?tenant=carbon.super&amp;resourceUrl=/registry/resource/_system/governance/apimgt/applicationdata/provider/insee/Sirene/V3/documentation/files/INSEE%20Documentation%20API%20Sirene%20Variables-V3.7.pdf\" rel=\"nofollow\">official\ndocumentation</a></p>\n<ul>\n<li>You can combine several criteria in one request.</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">api_insee.criteria</span> <span class=\"kn\">import</span> <span class=\"n\">Field</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siren</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"p\">(</span>\n    <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"s1\">'codeCommuneEtablissement'</span><span class=\"p\">,</span> <span class=\"mi\">92046</span><span class=\"p\">),</span>\n    <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"s1\">'unitePurgeeUniteLegale'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Request executed:</span>\n<span class=\"c1\"># /?q=codeCommuneEtablissement:92046 AND unitePurgeeUniteLegale:True</span>\n</pre>\n<ul>\n<li>Or using a dictionnary</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siren</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'codeCommuneEtablissement'</span> <span class=\"p\">:</span> <span class=\"mi\">92046</span><span class=\"p\">,</span>\n    <span class=\"s1\">'unitePurgeeUniteLegale'</span> <span class=\"p\">:</span> <span class=\"kc\">True</span>\n<span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Request executed:</span>\n<span class=\"c1\"># /?q=codeCommuneEtablissement:92046 AND unitePurgeeUniteLegale:True</span>\n</pre>\n<ul>\n<li>Use logical operator <tt>|</tt>, <tt>&amp;</tt>, <tt>- (not)</tt> to specify your\nrequests.</li>\n</ul>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siren</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"p\">(</span>\n    <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"s1\">'codeCommuneEtablissement'</span><span class=\"p\">,</span> <span class=\"mi\">92046</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"s1\">'unitePurgeeUniteLegale'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siren</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=-</span><span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"s1\">'codeCommuneEtablissement'</span><span class=\"p\">,</span> <span class=\"mi\">92046</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Request executed:</span>\n<span class=\"c1\"># /?q=codeCommuneEtablissement:92046 OR unitePurgeeUniteLegale:True</span>\n<span class=\"c1\"># /?q=-codeCommuneEtablissement:92046</span>\n</pre>\n<div id=\"special-search\">\n<h3>Special Search</h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Type</th>\n<th>Description</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Field\nExact</td>\n<td>Search on an\nexact value</td>\n<td>FieldExa\nct(\u2018demo\nnination\nUniteLeg\nale\u2019,\u2019LE\nTIMBRE\u2019)\n)</td>\n</tr>\n<tr><td>Perio\ndic</td>\n<td>Search on\nperiodic\nfield</td>\n<td>Periodic\n(Field(\u2018\nactivite\nPrincipa\nleUniteL\negale\u2019,\u2019\n84.23Z\u2019)</td>\n</tr>\n<tr><td>Range</td>\n<td>Search in a\nrange of\nvalues</td>\n<td>Range(\u2018n\nomUsageU\nniteLega\nle\u2019,\n\u2018DUPONT\u2019\n,\n\u2018DURANT\u2019\n)</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"pagination\">\n<h2>Pagination</h2>\n<p>The <tt>pages()</tt> method return an iterator to let you fetch pages from\nthe api. To specify the number of results per page use the <tt>nombre</tt>\nargument. Results are limited by 10000 per pages.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">api_insee</span> <span class=\"kn\">import</span> <span class=\"n\">ApiInsee</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">ApiInsee</span><span class=\"p\">(</span>\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"c1\"># consummer key,</span>\n    <span class=\"n\">secret</span> <span class=\"o\">=</span> <span class=\"c1\"># secret key</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">siren</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'categorieEntreprise'</span><span class=\"p\">:</span> <span class=\"s1\">'PME'</span>\n<span class=\"p\">})</span>\n\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"n\">page_index</span><span class=\"p\">,</span> <span class=\"n\">page_result</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">pages</span><span class=\"p\">(</span><span class=\"n\">nombre</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">)):</span>\n    <span class=\"c1\"># process here</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5780267, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "774027582bb2801a4c5683a73ece8d30", "sha256": "297e07a7640363c636a3c4cfbe170356a1b66f728a264dd5e4bd80c204ebc837"}, "downloads": -1, "filename": "api_insee-1.0.1.tar.gz", "has_sig": false, "md5_digest": "774027582bb2801a4c5683a73ece8d30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9985, "upload_time": "2019-01-04T19:02:38", "upload_time_iso_8601": "2019-01-04T19:02:38.560349Z", "url": "https://files.pythonhosted.org/packages/76/c1/bc26c6b0d5fd8ccf6ad5358492ed703225a3b128ec0cd199c316fefdf370/api_insee-1.0.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "a21b0188a6356906c4f12084c56a331a", "sha256": "dcdffff8a5b5e73237523a50cfa9bca09c9df6fc46d7bcf97ab67db41d0f63a7"}, "downloads": -1, "filename": "api_insee-1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a21b0188a6356906c4f12084c56a331a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13606, "upload_time": "2019-08-22T10:14:23", "upload_time_iso_8601": "2019-08-22T10:14:23.891391Z", "url": "https://files.pythonhosted.org/packages/66/2f/b8dbbfbaf458792bbbe8d373ed2be08c065521edb4425b787fdefc588370/api_insee-1.2-py2.py3-none-any.whl", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "0d88e36634ff68c8e434067e58c1346c", "sha256": "005e078231c4ce7ff30e3716536f0a5e9d682ef946fba1e491c02c80ba922873"}, "downloads": -1, "filename": "api_insee-1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d88e36634ff68c8e434067e58c1346c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13869, "upload_time": "2019-09-03T09:57:23", "upload_time_iso_8601": "2019-09-03T09:57:23.829061Z", "url": "https://files.pythonhosted.org/packages/f2/9a/92da6ba6cb08fffcd9170794695684efe8bf522f77df53a231e6beae6de7/api_insee-1.3-py2.py3-none-any.whl", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "fb4373c1a6dd9b8feb1d14516858f00b", "sha256": "68402aae8e22ee6ecfed5565379e3da6e5eb6ba74b0e134237a862b764248e63"}, "downloads": -1, "filename": "api_insee-1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb4373c1a6dd9b8feb1d14516858f00b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14115, "upload_time": "2019-09-04T09:44:34", "upload_time_iso_8601": "2019-09-04T09:44:34.514588Z", "url": "https://files.pythonhosted.org/packages/3c/dc/f126934a2cf34d7c26717423330aea8227d5c270d41725141bff2912febc/api_insee-1.4-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fb4373c1a6dd9b8feb1d14516858f00b", "sha256": "68402aae8e22ee6ecfed5565379e3da6e5eb6ba74b0e134237a862b764248e63"}, "downloads": -1, "filename": "api_insee-1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb4373c1a6dd9b8feb1d14516858f00b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14115, "upload_time": "2019-09-04T09:44:34", "upload_time_iso_8601": "2019-09-04T09:44:34.514588Z", "url": "https://files.pythonhosted.org/packages/3c/dc/f126934a2cf34d7c26717423330aea8227d5c270d41725141bff2912febc/api_insee-1.4-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:17:48 2020"}