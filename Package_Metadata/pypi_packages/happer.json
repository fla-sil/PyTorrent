{"info": {"author": "Daniel Standage", "author_email": "daniel.standage@nbacc.dhs.gov", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Framework :: IPython", "Framework :: Jupyter", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# happer\n\nDaniel Standage, 2018  \nhttps://github.com/bioforensics/happer\n\n**happer** is a minimal Python library for generating complete haplotype sequences.\nGiven a reference sequence and haplotype alleles annotated in BED format, happer will mutate the reference and produce sequences to match the specified haplotypes.\n\n\n## Installation\n\nTo install:\n\n```bash\npip3 install happer\n```\n\nTo make sure the package installed correctly:\n\n```bash\npip3 install pytest\npy.test --pyargs happer\n```\n\nhapper requires Python version 3.\n\n\n## Usage\n\nReference sequences must be provided in Fasta format, and haplotype alleles must be specified in BED format as follows.\nAlleles corresponding to different haplotypes at the locus are separated by a `|` character, so for example a diploid individual should have 2 `|`-separated alleles annotated at each locus, while a tetraploid would have 4 alleles.\nIn the example below, the `CCGA` alleles are phased and represent one haplotype, while the `TATG` alleles are phased and represent another haplotype.\n\n```txt\n#SeqID    Start  End     Alleles\nchr1     38827  38828   C|T\nchr1     59288  59289   C|A\nchr2     24771  24772   G|T\nchr4     201191 201192  A|G\n```\n\nTo invoke happer from the command line:\n\n```\n[standage@lappy ~]$ happer --out haploseqs.fasta refr.fasta alleles.bed\n```\n\nTo invoke happer directly in Python:\n\n```python\n>>> import happer\n>>> seqfile = open('refr.fasta', 'r')\n>>> alleles = open('alleles.bed', 'r')\n>>> for label, haploseq in happer.mutate.mutate(seqfile, alleles):\n...     # do whatever you'd like with the sequences\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bioforensics/happer", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "happer", "package_url": "https://pypi.org/project/happer/", "platform": "", "project_url": "https://pypi.org/project/happer/", "project_urls": {"Homepage": "https://github.com/bioforensics/happer"}, "release_url": "https://pypi.org/project/happer/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Library for applying haplotypes to reference DNA sequences", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>happer</h1>\n<p>Daniel Standage, 2018<br>\n<a href=\"https://github.com/bioforensics/happer\" rel=\"nofollow\">https://github.com/bioforensics/happer</a></p>\n<p><strong>happer</strong> is a minimal Python library for generating complete haplotype sequences.\nGiven a reference sequence and haplotype alleles annotated in BED format, happer will mutate the reference and produce sequences to match the specified haplotypes.</p>\n<h2>Installation</h2>\n<p>To install:</p>\n<pre>pip3 install happer\n</pre>\n<p>To make sure the package installed correctly:</p>\n<pre>pip3 install pytest\npy.test --pyargs happer\n</pre>\n<p>happer requires Python version 3.</p>\n<h2>Usage</h2>\n<p>Reference sequences must be provided in Fasta format, and haplotype alleles must be specified in BED format as follows.\nAlleles corresponding to different haplotypes at the locus are separated by a <code>|</code> character, so for example a diploid individual should have 2 <code>|</code>-separated alleles annotated at each locus, while a tetraploid would have 4 alleles.\nIn the example below, the <code>CCGA</code> alleles are phased and represent one haplotype, while the <code>TATG</code> alleles are phased and represent another haplotype.</p>\n<pre>#SeqID    Start  End     Alleles\nchr1     38827  38828   C|T\nchr1     59288  59289   C|A\nchr2     24771  24772   G|T\nchr4     201191 201192  A|G\n</pre>\n<p>To invoke happer from the command line:</p>\n<pre><code>[standage@lappy ~]$ happer --out haploseqs.fasta refr.fasta alleles.bed\n</code></pre>\n<p>To invoke happer directly in Python:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">happer</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">seqfile</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'refr.fasta'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">alleles</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'alleles.bed'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">label</span><span class=\"p\">,</span> <span class=\"n\">haploseq</span> <span class=\"ow\">in</span> <span class=\"n\">happer</span><span class=\"o\">.</span><span class=\"n\">mutate</span><span class=\"o\">.</span><span class=\"n\">mutate</span><span class=\"p\">(</span><span class=\"n\">seqfile</span><span class=\"p\">,</span> <span class=\"n\">alleles</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"c1\"># do whatever you'd like with the sequences</span>\n</pre>\n\n          </div>"}, "last_serial": 6088493, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "46adec0694f376dbf794d5918a79b903", "sha256": "20b079dad93b1c0cc39bebd117e77d0535ad3fe8531dad5507635767eddc7678"}, "downloads": -1, "filename": "happer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "46adec0694f376dbf794d5918a79b903", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24735, "upload_time": "2018-10-10T16:03:51", "upload_time_iso_8601": "2018-10-10T16:03:51.501904Z", "url": "https://files.pythonhosted.org/packages/b9/fb/65a8a5e7d38b91de180f9e0a8680b83b8d3a61f6c1579aba32c1173e1351/happer-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fec2bae39f7bb9851ba0be8d28ff339d", "sha256": "95490f3e14f992f849813cd44ac08d7deacbe6cf794483b31a5a7507ac1e9561"}, "downloads": -1, "filename": "happer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fec2bae39f7bb9851ba0be8d28ff339d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23878, "upload_time": "2019-11-06T16:48:11", "upload_time_iso_8601": "2019-11-06T16:48:11.398661Z", "url": "https://files.pythonhosted.org/packages/c9/e7/7c8b98491c3a63bc4766e6656e9d1b4641daa2ccad7b04a638dd23896d6e/happer-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fec2bae39f7bb9851ba0be8d28ff339d", "sha256": "95490f3e14f992f849813cd44ac08d7deacbe6cf794483b31a5a7507ac1e9561"}, "downloads": -1, "filename": "happer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fec2bae39f7bb9851ba0be8d28ff339d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23878, "upload_time": "2019-11-06T16:48:11", "upload_time_iso_8601": "2019-11-06T16:48:11.398661Z", "url": "https://files.pythonhosted.org/packages/c9/e7/7c8b98491c3a63bc4766e6656e9d1b4641daa2ccad7b04a638dd23896d6e/happer-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:31 2020"}