{"info": {"author": "Barton Ip", "author_email": "notbartonip@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\n# django-cached-fields\nCached fields for Django\n\n## Usage\n\nDefining a basic Cached Field\n\nThe first argument of the CachedField constructor can be the name of a method on the class.\n\nThis method only works with field triggers as signal triggers will require a `CachedFieldSignalHandler`.\n```python\nclass Invoice(models.Model):\n    name = models.TextField(null=False)\n    quantity = models.IntegerField()\n    amount = models.IntegerField(null=False)\n\n    def calc_total(self):\n        self.total = self.quantity * self.amount\n\n    total = CachedIntegerField(\n        'calc_total', \n        field_triggers=[\n            'amount',\n        ],\n        timeout=timedelta(seconds=5),\n    )\n```\n\nIf you would like your cached field's callback to be triggered by a signal, you will need to create a signal handler.\n```python\nclass InvoiceSignalHandler(CachedFieldSignalHandler):\n\n    def calc_total(instance):\n        instance.total = instance.quantity * instance.amount\n\n    @for_class('Customer')\n    def cutomer_total(customer):\n        return invoice.quantity * invoice.amount\n\n    @for_class('Supplier')\n    def supplier_total(supplier):\n        invoice = supplier.invoice.last()\n        return invoice.quantity * invoice.amount\n\n```\n\nIf you would like to offload task processing to Celery, django-cached-fields can handle that for you automatically.\n\n`settings.py`\n```python\n\nCACHED_FIELDS_CELERY_ENABLED = True\nCACHED_FIELDS_CELERY = {\n    \"queue\": \"default\"\n}\n\n```\n\nIf you'd like to offload a recalculation to a specific queue, you can do this.\n\n```python\nclass InvoiceSignalHandler(CachedFieldSignalHandler):\n\n    def calc_total(instance):\n        instance.total = instance.quantity * instance.amount\n\n    @for_class('Customer', queue=\"low_priority\")\n    def cutomer_total(customer):\n        invoices = customer.invoices.all()\n        for i in invoices:\n            i.cache_toolkit.update_cache('total', i.quantity * i.amount)\n            i.save()\n\n    @for_class('Supplier')\n    def supplier_total(supplier):\n        invoice = supplier.invoice.last()\n        invoice.total = invoice.quantity * invoice.amount\n\n```\n\nForce Recalculation\n```python\n\nym = YourModel.objects.create(name=\"fart\", amount=6)\n\nym.cache_toolchain.refresh_field('total')\n\n```\n\nGet last time the cache was updated\n\n<br>\nFor when you need to run queries\n```python\nIn [2]: print(ym.total_last_update)\nOut[2]: datetime.datetime(2019,10,30,4,30,54)\n\nIn [3]: YourModel.objcts.filter(total_last_update__date__gte=date(2019,10,1)).exists()\nOut[3]: True\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bartonip/django-cached-fields", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-cached-fields", "package_url": "https://pypi.org/project/django-cached-fields/", "platform": "", "project_url": "https://pypi.org/project/django-cached-fields/", "project_urls": {"Homepage": "https://github.com/bartonip/django-cached-fields"}, "release_url": "https://pypi.org/project/django-cached-fields/0.1.2/", "requires_dist": ["django"], "requires_python": ">=3.0.0", "summary": "Easy value caching on Django.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-cached-fields</h1>\n<p>Cached fields for Django</p>\n<h2>Usage</h2>\n<p>Defining a basic Cached Field</p>\n<p>The first argument of the CachedField constructor can be the name of a method on the class.</p>\n<p>This method only works with field triggers as signal triggers will require a <code>CachedFieldSignalHandler</code>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Invoice</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">quantity</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">()</span>\n    <span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntegerField</span><span class=\"p\">(</span><span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">calc_total</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">*</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">amount</span>\n\n    <span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">CachedIntegerField</span><span class=\"p\">(</span>\n        <span class=\"s1\">'calc_total'</span><span class=\"p\">,</span> \n        <span class=\"n\">field_triggers</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"s1\">'amount'</span><span class=\"p\">,</span>\n        <span class=\"p\">],</span>\n        <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n</pre>\n<p>If you would like your cached field's callback to be triggered by a signal, you will need to create a signal handler.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">InvoiceSignalHandler</span><span class=\"p\">(</span><span class=\"n\">CachedFieldSignalHandler</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">calc_total</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">):</span>\n        <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">*</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">amount</span>\n\n    <span class=\"nd\">@for_class</span><span class=\"p\">(</span><span class=\"s1\">'Customer'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">cutomer_total</span><span class=\"p\">(</span><span class=\"n\">customer</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">*</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">amount</span>\n\n    <span class=\"nd\">@for_class</span><span class=\"p\">(</span><span class=\"s1\">'Supplier'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">supplier_total</span><span class=\"p\">(</span><span class=\"n\">supplier</span><span class=\"p\">):</span>\n        <span class=\"n\">invoice</span> <span class=\"o\">=</span> <span class=\"n\">supplier</span><span class=\"o\">.</span><span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">last</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">*</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">amount</span>\n</pre>\n<p>If you would like to offload task processing to Celery, django-cached-fields can handle that for you automatically.</p>\n<p><code>settings.py</code></p>\n<pre><span class=\"n\">CACHED_FIELDS_CELERY_ENABLED</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">CACHED_FIELDS_CELERY</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"queue\"</span><span class=\"p\">:</span> <span class=\"s2\">\"default\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>If you'd like to offload a recalculation to a specific queue, you can do this.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">InvoiceSignalHandler</span><span class=\"p\">(</span><span class=\"n\">CachedFieldSignalHandler</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">calc_total</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">):</span>\n        <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">*</span> <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">amount</span>\n\n    <span class=\"nd\">@for_class</span><span class=\"p\">(</span><span class=\"s1\">'Customer'</span><span class=\"p\">,</span> <span class=\"n\">queue</span><span class=\"o\">=</span><span class=\"s2\">\"low_priority\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">cutomer_total</span><span class=\"p\">(</span><span class=\"n\">customer</span><span class=\"p\">):</span>\n        <span class=\"n\">invoices</span> <span class=\"o\">=</span> <span class=\"n\">customer</span><span class=\"o\">.</span><span class=\"n\">invoices</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">invoices</span><span class=\"p\">:</span>\n            <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">cache_toolkit</span><span class=\"o\">.</span><span class=\"n\">update_cache</span><span class=\"p\">(</span><span class=\"s1\">'total'</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">*</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">amount</span><span class=\"p\">)</span>\n            <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@for_class</span><span class=\"p\">(</span><span class=\"s1\">'Supplier'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">supplier_total</span><span class=\"p\">(</span><span class=\"n\">supplier</span><span class=\"p\">):</span>\n        <span class=\"n\">invoice</span> <span class=\"o\">=</span> <span class=\"n\">supplier</span><span class=\"o\">.</span><span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">last</span><span class=\"p\">()</span>\n        <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">total</span> <span class=\"o\">=</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">quantity</span> <span class=\"o\">*</span> <span class=\"n\">invoice</span><span class=\"o\">.</span><span class=\"n\">amount</span>\n</pre>\n<p>Force Recalculation</p>\n<pre><span class=\"n\">ym</span> <span class=\"o\">=</span> <span class=\"n\">YourModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"fart\"</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n\n<span class=\"n\">ym</span><span class=\"o\">.</span><span class=\"n\">cache_toolchain</span><span class=\"o\">.</span><span class=\"n\">refresh_field</span><span class=\"p\">(</span><span class=\"s1\">'total'</span><span class=\"p\">)</span>\n</pre>\n<p>Get last time the cache was updated</p>\n<br>\nFor when you need to run queries\n```python\nIn [2]: print(ym.total_last_update)\nOut[2]: datetime.datetime(2019,10,30,4,30,54)\n<p>In [3]: YourModel.objcts.filter(total_last_update__date__gte=date(2019,10,1)).exists()\nOut[3]: True</p>\n<pre><code>\n</code></pre>\n\n          </div>"}, "last_serial": 6531047, "releases": {"0.1.0a0": [{"comment_text": "", "digests": {"md5": "8126666460bb2c69ef01f9e66abfa3a4", "sha256": "7c4e5e9c663c3f7923b8812201c93df09d51f00aad82fc00a95a4baf31e39859"}, "downloads": -1, "filename": "django_cached_fields-0.1.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "8126666460bb2c69ef01f9e66abfa3a4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 7072, "upload_time": "2020-01-27T06:42:34", "upload_time_iso_8601": "2020-01-27T06:42:34.576446Z", "url": "https://files.pythonhosted.org/packages/74/e1/52010cca21cd5916a645a42d80ef8b69b8ead60faefb508a31044914baf1/django_cached_fields-0.1.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49f63fbb5e7372b2b95c95845c7b8b2e", "sha256": "6f198541c69c87b2806d9f506c844014e8d6c99dcc68ac86fbd9305cb176f36d"}, "downloads": -1, "filename": "django-cached-fields-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "49f63fbb5e7372b2b95c95845c7b8b2e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 6614, "upload_time": "2020-01-27T06:42:37", "upload_time_iso_8601": "2020-01-27T06:42:37.009466Z", "url": "https://files.pythonhosted.org/packages/fe/84/5a5a2ceebb5e7b085fd876b6e661d825257ddeb9d2202bee150774f056fe/django-cached-fields-0.1.0a0.tar.gz", "yanked": false}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "8a78e7385507e4eefea4b4e6787c6de3", "sha256": "6181ec3a27c216fbd9cb892324cc68ed5e1b74801d077b5e2c438f1c5111bb98"}, "downloads": -1, "filename": "django_cached_fields-0.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "8a78e7385507e4eefea4b4e6787c6de3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 7095, "upload_time": "2020-01-27T08:14:38", "upload_time_iso_8601": "2020-01-27T08:14:38.972320Z", "url": "https://files.pythonhosted.org/packages/1a/1f/96ed017a8aaf1892802d409d075a3a2dbd29f0bec54af4fe4b2418d27da2/django_cached_fields-0.1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "016e2c93821497563f58a21701c15065", "sha256": "6c66f8f0dc7b1344fa89c40dcb855570b265b2fd43f9201c9a9391d595d1be3b"}, "downloads": -1, "filename": "django-cached-fields-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "016e2c93821497563f58a21701c15065", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 6747, "upload_time": "2020-01-27T08:14:40", "upload_time_iso_8601": "2020-01-27T08:14:40.646990Z", "url": "https://files.pythonhosted.org/packages/73/e8/7486e97fe68aaf6dbba197baad6665d6b9f29a1f57dccd1e1b3e5b541b77/django-cached-fields-0.1.0a1.tar.gz", "yanked": false}], "0.1.0a2": [{"comment_text": "", "digests": {"md5": "8301bd45bc8837b26a4290ef657a7008", "sha256": "9a6369f3be3e746ea4f913b964ef3898d9bbae58cc3ba050632efe08adc84e98"}, "downloads": -1, "filename": "django_cached_fields-0.1.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "8301bd45bc8837b26a4290ef657a7008", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 7184, "upload_time": "2020-01-27T08:18:37", "upload_time_iso_8601": "2020-01-27T08:18:37.215247Z", "url": "https://files.pythonhosted.org/packages/88/7d/b8fe042244a8e66f260378594fc7a478a26ae6a53e89df19cd0b506e0a98/django_cached_fields-0.1.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d31aa087d335e890dc4f994a36db1c9", "sha256": "e56881a7ac40d7667e08f4818e40e9fdb1b87c5650d5753b03892585da072f32"}, "downloads": -1, "filename": "django-cached-fields-0.1.0a2.tar.gz", "has_sig": false, "md5_digest": "7d31aa087d335e890dc4f994a36db1c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 6861, "upload_time": "2020-01-27T08:18:38", "upload_time_iso_8601": "2020-01-27T08:18:38.568736Z", "url": "https://files.pythonhosted.org/packages/fd/df/67202e390289d9b4349bf7bd19b59c99a547519100e27f8cfc62d8862e1e/django-cached-fields-0.1.0a2.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "29dc39012a90eb98517f16110b87ba4b", "sha256": "7d816f4db8d88b333be1de4a51d32832780c7894b77ce62d25decc30d6aaef98"}, "downloads": -1, "filename": "django_cached_fields-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "29dc39012a90eb98517f16110b87ba4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 7048, "upload_time": "2020-01-28T09:18:56", "upload_time_iso_8601": "2020-01-28T09:18:56.070711Z", "url": "https://files.pythonhosted.org/packages/5e/67/a16793aaaf5e8bced0512fbedeb37cd1a535e853aa01113cb32034ca1f2c/django_cached_fields-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef1da785034aed37e03dc1a234616729", "sha256": "44288d4573baeb18f0f7ad1041ca7218341c728b2e2393a3ab5799a802337c13"}, "downloads": -1, "filename": "django-cached-fields-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ef1da785034aed37e03dc1a234616729", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 6844, "upload_time": "2020-01-28T09:18:57", "upload_time_iso_8601": "2020-01-28T09:18:57.402778Z", "url": "https://files.pythonhosted.org/packages/86/a6/9e19b8a40b27648c1964dd7592e5397bab019b4122a0dd198d66f03e237c/django-cached-fields-0.1.1.tar.gz", "yanked": false}], "0.1.1a0": [{"comment_text": "", "digests": {"md5": "d9372adec2750bc678e1a9921693e484", "sha256": "bd593bc364d76be262ee5ac24b5d0b2c87508212aa6366cef0314e05dc90e696"}, "downloads": -1, "filename": "django_cached_fields-0.1.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "d9372adec2750bc678e1a9921693e484", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 7012, "upload_time": "2020-01-28T06:04:06", "upload_time_iso_8601": "2020-01-28T06:04:06.720703Z", "url": "https://files.pythonhosted.org/packages/f5/1c/cea834e31dba8207d6793bc5346a7305a91bffa9789166b19946f59a7f67/django_cached_fields-0.1.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eee0b2efe880a5cb3e702904392887ca", "sha256": "18482fe5b442ed6545781aa5f2ad50dc74788d574365636b24d639a12096c80d"}, "downloads": -1, "filename": "django-cached-fields-0.1.1a0.tar.gz", "has_sig": false, "md5_digest": "eee0b2efe880a5cb3e702904392887ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 6704, "upload_time": "2020-01-28T06:04:08", "upload_time_iso_8601": "2020-01-28T06:04:08.510416Z", "url": "https://files.pythonhosted.org/packages/58/f0/e72bce3e9702187714a21ac978aa81975ec5f7e1c396eb9cee58e7630e71/django-cached-fields-0.1.1a0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8bc0b1e9e62263a2ddb7f7930116c7eb", "sha256": "e370f8e573d32e27f535ec8d996c0845f75914fd6f2f3bc518f4589037add528"}, "downloads": -1, "filename": "django_cached_fields-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8bc0b1e9e62263a2ddb7f7930116c7eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 7048, "upload_time": "2020-01-28T09:30:54", "upload_time_iso_8601": "2020-01-28T09:30:54.180465Z", "url": "https://files.pythonhosted.org/packages/bb/6a/7d2053192d08d4e34aaeb0ad4c9f5d6590cd1b333c805195cec28034ca21/django_cached_fields-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf943c080745f89be6511c841fe415cb", "sha256": "d9a582db63377e5a05d4669631218e1401221255175789c8836d1c07992330b8"}, "downloads": -1, "filename": "django-cached-fields-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bf943c080745f89be6511c841fe415cb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 6839, "upload_time": "2020-01-28T09:30:55", "upload_time_iso_8601": "2020-01-28T09:30:55.871113Z", "url": "https://files.pythonhosted.org/packages/31/3c/5667e91ee421f725d89e8d8b668783c1081e820a93bdbf11d9311ce1c4f5/django-cached-fields-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8bc0b1e9e62263a2ddb7f7930116c7eb", "sha256": "e370f8e573d32e27f535ec8d996c0845f75914fd6f2f3bc518f4589037add528"}, "downloads": -1, "filename": "django_cached_fields-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8bc0b1e9e62263a2ddb7f7930116c7eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0.0", "size": 7048, "upload_time": "2020-01-28T09:30:54", "upload_time_iso_8601": "2020-01-28T09:30:54.180465Z", "url": "https://files.pythonhosted.org/packages/bb/6a/7d2053192d08d4e34aaeb0ad4c9f5d6590cd1b333c805195cec28034ca21/django_cached_fields-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf943c080745f89be6511c841fe415cb", "sha256": "d9a582db63377e5a05d4669631218e1401221255175789c8836d1c07992330b8"}, "downloads": -1, "filename": "django-cached-fields-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bf943c080745f89be6511c841fe415cb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0.0", "size": 6839, "upload_time": "2020-01-28T09:30:55", "upload_time_iso_8601": "2020-01-28T09:30:55.871113Z", "url": "https://files.pythonhosted.org/packages/31/3c/5667e91ee421f725d89e8d8b668783c1081e820a93bdbf11d9311ce1c4f5/django-cached-fields-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:17 2020"}