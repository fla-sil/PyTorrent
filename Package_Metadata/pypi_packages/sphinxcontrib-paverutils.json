{"info": {"author": "Doug Hellmann", "author_email": "doug@doughellmann.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Topic :: Documentation", "Topic :: Utilities"], "description": "########################\nsphinxcontrib.paverutils\n########################\n\nThis module provides an alternative integration of Sphinx and\nPaver_. It supports calling Sphinx from within Paver using multiple\nconfigurations, and does not assume you only want to build HTML\noutput.\n\nBasic Usage\n===========\n\nTo use this module, import it in your pavement.py file as ``from\nsphinxcontrib import paverutils``, then define option Bundles for\n\"html\" and/or \"pdf\" output using the options described in the task\nhelp.\n\nFor example::\n\n    import paver\n    import paver.misctasks\n    from paver.path import path\n    from paver.easy import *\n    import paver.setuputils\n    paver.setuputils.install_distutils_tasks()\n    try:\n        from sphinxcontrib import paverutils\n    except:\n        import warnings\n        warnings.warn('sphinxcontrib.paverutils was not found, you will not be able to produce documentation')\n\n    options(\n        setup=Bunch(\n            name = 'MyProject',\n            version = '1.0',\n\n            # ... more options here ...\n            ),\n\n        # Defaults for sphinxcontrib.paverutils\n        sphinx = Bunch(\n            docroot='.',\n            sourcedir='docsource',\n            builder='html',\n        ),\n\n        # One configuration to build HTML for the package\n        html=Bunch(\n            builddir='docs',\n            confdir='sphinx/pkg',\n        ),\n\n        # Another configuration with different templates\n        # to build HTML to upload to the website\n        website=Bunch(\n            builddir = 'web',\n            confdir='sphinx/web',\n        ),\n\n        # We also want a PDF file for the website,\n        # so the instructions are included in the web\n        # configuration directory.\n        pdf=Bunch(\n            builddir='web',\n            builder='latex',\n            confdir='sphinx/web',\n        ),\n\n    )\n\nTasks\n=====\n\nAfter you have imported ``sphinxcontrib.paverutils`` in your\n``pavement.py`` file, Paver will show two additional tasks.  ``html``\ntakes the place of the task defined in ``paver.doctools`` and can be\nused to build HTML output.  ``pdf`` uses the LaTeX builder and an\nexternal toolset such as TeXLive_ to create a PDF manual.\n\nConfiguration Parameters\n========================\n\ndocroot\n  the root under which Sphinx will be working.\n\n  default: ``docs``\n\nbuilddir\n  directory under the docroot where the resulting files are put.\n\n  default: ``build``\n\nsourcedir\n  directory under the docroot for the source files\n\n  default: ``\"\"`` (empty string)\n\ndoctrees\n  the location of the cached doctrees\n\n  default: ``$builddir/doctrees``\n\nconfdir\n  the location of the sphinx conf.py\n\n  default: ``$sourcedir``\n\noutdir\n  the location of the generated output files\n\n  default: ``$builddir/$builder``\n\nbuilder\n  the name of the sphinx builder to use\n\n  default: ``html``\n\ntemplate_args\n  dictionary of values to be passed as name-value pairs to the HTML\n  builder\n\n  default: ``{}``\n\n\nAdvanced Usage\n==============\n\nYou can also develop your own tasks by calling ``run_sphinx()`` directly::\n\n    @task\n    @needs(['cog'])\n    @cmdopts([\n        ('in-file=', 'b', 'Blog input filename'),\n        ('out-file=', 'B', 'Blog output filename'),\n    ])\n    def blog(options):\n        \"\"\"Generate the blog post version of the HTML for the current module.\n        \"\"\"\n        # Generate html from sphinx\n        paverutils.run_sphinx(options, 'blog')\n\n        blog_file = path(options.blog.outdir) / options.blog.out_file\n        dry(\"Write blog post body to %s\" % blog_file,\n            gen_blog_post,\n            outdir=options.blog.outdir,\n            input_base=options.blog.in_file,\n            blog_base=options.blog.out_file,\n            )\n\n        if 'EDITOR' in os.environ:\n            sh('$EDITOR %s' % blog_file)\n        return\n\n\nCog Extensions\n==============\n\nIn addition to the ``html`` and ``pdf`` tasks, the package includes the function ``run_script()`` to be used with cog to insert the output of a command line program in your documentation.\n\nThis example of reStructuredText source using ``run_script()``::\n\n    .. {{{cog\n    .. cog.out(run_script(cog.inFile, 'anydbm_whichdb.py'))\n    .. }}}\n    .. {{{end}}}\n\nrenders to::\n\n    .. {{{cog\n    .. cog.out(run_script(cog.inFile, 'anydbm_whichdb.py'))\n    .. }}}\n\n    ::\n\n    \t$ python anydbm_whichdb.py\n    \tdbhash\n\n    .. {{{end}}}\n\nThe lines prefixed with ``..`` are comments, and do not appear in the\nfinal HTML or PDF output.\n\nArguments:\n\ninput_file\n  The name of the file being processed by cog.  Usually passed as cog.inFile.\n\nscript_name\n  The name of the Python script living in the same directory as input_file to be run.\n  If not using an interpreter, this can be a complete command line.  If using an\n  alternate interpreter, it can be some other type of file.\n\ninterpreter='python'\n  The external interpreter to use for the program.  Specify 'python',\n  'python3', 'jython', etc.\n\ninclude_prefix=True\n  Boolean controlling whether the ``::`` prefix is included. When chaining multiple\n  commands together, the first instance would typically use the default and subsequent\n  calls would use False.\n\nignore_error=False\n  Boolean controlling whether errors are ignored.  If not ignored, the error\n  is printed to stdout and then the command is run *again* with errors ignored\n  so that the output ends up in the cogged file.\n\ntrailing_newlines=True\n  Boolean controlling whether the trailing newlines are added to the output.\n  If False, the output is passed to rstrip() then one newline is added.  If\n  True, newlines are added to the output until it ends in 2.\n\nbreak_lines_at=0\n  Integer indicating the length where lines should be broken and\n  continued on the next line.  Defaults to 0, meaning no special\n  handling should be done.\n\nline_break_mode='break'\n  Mode to control how the line breaks are inserted.  Options are:\n\n    'break'\n      Insert the newline.\n    'wrap'\n      Use the textwrap module to wrap each line individually to the\n      specified width.\n    'fill'\n      Use the textwrap module to wrap each line individually,\n      inserting an appropriate amount of whitespace to keep the left\n      edge of the lines aligned.\n    'continue'\n      Insert a backslash (``\\``) and then a newline to break the line.\n    'truncate'\n      Break the line at the indicated location and discard the\n      remainder.\n\n\n.. note::\n\n    PyMOTW_ makes heavy use of this function, with several variations in arguments, so\n    refer to the source there for more examples if you need them.\n\nUsers\n=====\n\nPyMOTW_\n    The Python Module of the Week package is built using Paver and\n    Sphinx, including three forms of HTML and a PDF.\n\nvirtualenvwrapper_\n    The documentation for virtualenvwrapper includes the packaged HTML\n    and a website using alternate templates.\n\n.. _Paver: http://www.blueskyonmars.com/projects/paver/\n\n.. _PyMOTW: http://www.doughellmann.com/PyMOTW/\n\n.. _virtualenvwrapper: http://www.doughellmann.com/projects/virtualenvwrapper/\n\n.. _TeXLive: http://tug.org/texlive/\n\n\nHistory\n=======\n\n1.6\n---\n\n* include tox.ini in source dist\n* adjust interpreter for python3\n* redefine cog to allow it to run on specific input file(s)\n* compatibility with paver 1.2, and add support force a full build\n\n1.5\n---\n\nMisc.\n\n1.4\n---\n\n- Add different modes for breaking lines in the output of ``run_script()``.  \n\n- Incorporate a fix from Maciek Starzyk for issue #6 so docroot can be\n  set to something other than ``.``.\n\n1.3\n---\n\nAdded simple line-splitting to ``run_script()``.\n\n1.2\n---\n\nModified ``run_script()`` so that if *ignore_error* is False any\nexception caused by the external application is re-raised.  This\n\"breaks\" a build if there is a problem generating the cog output in an\nrst file, and makes it easier to spot problems with the cog\ninstructions.\n\n1.1\n---\n\nUpdated to include ``run_script()`` function.\n\n1.0\n---\n\nFirst public release based on the versions of these functions\ndeveloped for PyMOTW_.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/dhellmann/sphinxcontrib-paverutils/", "keywords": "sphinx documentation", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "sphinxcontrib-paverutils", "package_url": "https://pypi.org/project/sphinxcontrib-paverutils/", "platform": "", "project_url": "https://pypi.org/project/sphinxcontrib-paverutils/", "project_urls": {"Homepage": "https://bitbucket.org/dhellmann/sphinxcontrib-paverutils/"}, "release_url": "https://pypi.org/project/sphinxcontrib-paverutils/1.17.0/", "requires_dist": ["Sphinx (>=1.7.1)", "Paver (>=1.02.0)"], "requires_python": "", "summary": "Sphinx/Paver integration", "version": "1.17.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This module provides an alternative integration of Sphinx and\n<a href=\"http://www.blueskyonmars.com/projects/paver/\" rel=\"nofollow\">Paver</a>. It supports calling Sphinx from within Paver using multiple\nconfigurations, and does not assume you only want to build HTML\noutput.</p>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>To use this module, import it in your pavement.py file as <tt>from\nsphinxcontrib import paverutils</tt>, then define option Bundles for\n\u201chtml\u201d and/or \u201cpdf\u201d output using the options described in the task\nhelp.</p>\n<p>For example:</p>\n<pre>import paver\nimport paver.misctasks\nfrom paver.path import path\nfrom paver.easy import *\nimport paver.setuputils\npaver.setuputils.install_distutils_tasks()\ntry:\n    from sphinxcontrib import paverutils\nexcept:\n    import warnings\n    warnings.warn('sphinxcontrib.paverutils was not found, you will not be able to produce documentation')\n\noptions(\n    setup=Bunch(\n        name = 'MyProject',\n        version = '1.0',\n\n        # ... more options here ...\n        ),\n\n    # Defaults for sphinxcontrib.paverutils\n    sphinx = Bunch(\n        docroot='.',\n        sourcedir='docsource',\n        builder='html',\n    ),\n\n    # One configuration to build HTML for the package\n    html=Bunch(\n        builddir='docs',\n        confdir='sphinx/pkg',\n    ),\n\n    # Another configuration with different templates\n    # to build HTML to upload to the website\n    website=Bunch(\n        builddir = 'web',\n        confdir='sphinx/web',\n    ),\n\n    # We also want a PDF file for the website,\n    # so the instructions are included in the web\n    # configuration directory.\n    pdf=Bunch(\n        builddir='web',\n        builder='latex',\n        confdir='sphinx/web',\n    ),\n\n)\n</pre>\n</div>\n<div id=\"tasks\">\n<h2>Tasks</h2>\n<p>After you have imported <tt>sphinxcontrib.paverutils</tt> in your\n<tt>pavement.py</tt> file, Paver will show two additional tasks.  <tt>html</tt>\ntakes the place of the task defined in <tt>paver.doctools</tt> and can be\nused to build HTML output.  <tt>pdf</tt> uses the LaTeX builder and an\nexternal toolset such as <a href=\"http://tug.org/texlive/\" rel=\"nofollow\">TeXLive</a> to create a PDF manual.</p>\n</div>\n<div id=\"configuration-parameters\">\n<h2>Configuration Parameters</h2>\n<dl>\n<dt>docroot</dt>\n<dd><p>the root under which Sphinx will be working.</p>\n<p>default: <tt>docs</tt></p>\n</dd>\n<dt>builddir</dt>\n<dd><p>directory under the docroot where the resulting files are put.</p>\n<p>default: <tt>build</tt></p>\n</dd>\n<dt>sourcedir</dt>\n<dd><p>directory under the docroot for the source files</p>\n<p>default: <tt>\"\"</tt> (empty string)</p>\n</dd>\n<dt>doctrees</dt>\n<dd><p>the location of the cached doctrees</p>\n<p>default: <tt>$builddir/doctrees</tt></p>\n</dd>\n<dt>confdir</dt>\n<dd><p>the location of the sphinx conf.py</p>\n<p>default: <tt>$sourcedir</tt></p>\n</dd>\n<dt>outdir</dt>\n<dd><p>the location of the generated output files</p>\n<p>default: <tt><span class=\"pre\">$builddir/$builder</span></tt></p>\n</dd>\n<dt>builder</dt>\n<dd><p>the name of the sphinx builder to use</p>\n<p>default: <tt>html</tt></p>\n</dd>\n<dt>template_args</dt>\n<dd><p>dictionary of values to be passed as name-value pairs to the HTML\nbuilder</p>\n<p>default: <tt>{}</tt></p>\n</dd>\n</dl>\n</div>\n<div id=\"advanced-usage\">\n<h2>Advanced Usage</h2>\n<p>You can also develop your own tasks by calling <tt>run_sphinx()</tt> directly:</p>\n<pre>@task\n@needs(['cog'])\n@cmdopts([\n    ('in-file=', 'b', 'Blog input filename'),\n    ('out-file=', 'B', 'Blog output filename'),\n])\ndef blog(options):\n    \"\"\"Generate the blog post version of the HTML for the current module.\n    \"\"\"\n    # Generate html from sphinx\n    paverutils.run_sphinx(options, 'blog')\n\n    blog_file = path(options.blog.outdir) / options.blog.out_file\n    dry(\"Write blog post body to %s\" % blog_file,\n        gen_blog_post,\n        outdir=options.blog.outdir,\n        input_base=options.blog.in_file,\n        blog_base=options.blog.out_file,\n        )\n\n    if 'EDITOR' in os.environ:\n        sh('$EDITOR %s' % blog_file)\n    return\n</pre>\n</div>\n<div id=\"cog-extensions\">\n<h2>Cog Extensions</h2>\n<p>In addition to the <tt>html</tt> and <tt>pdf</tt> tasks, the package includes the function <tt>run_script()</tt> to be used with cog to insert the output of a command line program in your documentation.</p>\n<p>This example of reStructuredText source using <tt>run_script()</tt>:</p>\n<pre>.. {{{cog\n.. cog.out(run_script(cog.inFile, 'anydbm_whichdb.py'))\n.. }}}\n.. {{{end}}}\n</pre>\n<p>renders to:</p>\n<pre>.. {{{cog\n.. cog.out(run_script(cog.inFile, 'anydbm_whichdb.py'))\n.. }}}\n\n::\n\n    $ python anydbm_whichdb.py\n    dbhash\n\n.. {{{end}}}\n</pre>\n<p>The lines prefixed with <tt>..</tt> are comments, and do not appear in the\nfinal HTML or PDF output.</p>\n<p>Arguments:</p>\n<dl>\n<dt>input_file</dt>\n<dd>The name of the file being processed by cog.  Usually passed as cog.inFile.</dd>\n<dt>script_name</dt>\n<dd>The name of the Python script living in the same directory as input_file to be run.\nIf not using an interpreter, this can be a complete command line.  If using an\nalternate interpreter, it can be some other type of file.</dd>\n<dt>interpreter=\u2019python\u2019</dt>\n<dd>The external interpreter to use for the program.  Specify \u2018python\u2019,\n\u2018python3\u2019, \u2018jython\u2019, etc.</dd>\n<dt>include_prefix=True</dt>\n<dd>Boolean controlling whether the <tt>::</tt> prefix is included. When chaining multiple\ncommands together, the first instance would typically use the default and subsequent\ncalls would use False.</dd>\n<dt>ignore_error=False</dt>\n<dd>Boolean controlling whether errors are ignored.  If not ignored, the error\nis printed to stdout and then the command is run <em>again</em> with errors ignored\nso that the output ends up in the cogged file.</dd>\n<dt>trailing_newlines=True</dt>\n<dd>Boolean controlling whether the trailing newlines are added to the output.\nIf False, the output is passed to rstrip() then one newline is added.  If\nTrue, newlines are added to the output until it ends in 2.</dd>\n<dt>break_lines_at=0</dt>\n<dd>Integer indicating the length where lines should be broken and\ncontinued on the next line.  Defaults to 0, meaning no special\nhandling should be done.</dd>\n<dt>line_break_mode=\u2019break\u2019</dt>\n<dd><p>Mode to control how the line breaks are inserted.  Options are:</p>\n<blockquote>\n<dl>\n<dt>\u2018break\u2019</dt>\n<dd>Insert the newline.</dd>\n<dt>\u2018wrap\u2019</dt>\n<dd>Use the textwrap module to wrap each line individually to the\nspecified width.</dd>\n<dt>\u2018fill\u2019</dt>\n<dd>Use the textwrap module to wrap each line individually,\ninserting an appropriate amount of whitespace to keep the left\nedge of the lines aligned.</dd>\n<dt>\u2018continue\u2019</dt>\n<dd>Insert a backslash (<tt>\\</tt>) and then a newline to break the line.</dd>\n<dt>\u2018truncate\u2019</dt>\n<dd>Break the line at the indicated location and discard the\nremainder.</dd>\n</dl>\n</blockquote>\n</dd>\n</dl>\n<div>\n<p>Note</p>\n<p><a href=\"http://www.doughellmann.com/PyMOTW/\" rel=\"nofollow\">PyMOTW</a> makes heavy use of this function, with several variations in arguments, so\nrefer to the source there for more examples if you need them.</p>\n</div>\n</div>\n<div id=\"users\">\n<h2>Users</h2>\n<dl>\n<dt><a href=\"http://www.doughellmann.com/PyMOTW/\" rel=\"nofollow\">PyMOTW</a></dt>\n<dd>The Python Module of the Week package is built using Paver and\nSphinx, including three forms of HTML and a PDF.</dd>\n<dt><a href=\"http://www.doughellmann.com/projects/virtualenvwrapper/\" rel=\"nofollow\">virtualenvwrapper</a></dt>\n<dd>The documentation for virtualenvwrapper includes the packaged HTML\nand a website using alternate templates.</dd>\n</dl>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.6</h3>\n<ul>\n<li>include tox.ini in source dist</li>\n<li>adjust interpreter for python3</li>\n<li>redefine cog to allow it to run on specific input file(s)</li>\n<li>compatibility with paver 1.2, and add support force a full build</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.5</h3>\n<p>Misc.</p>\n</div>\n<div id=\"id3\">\n<h3>1.4</h3>\n<ul>\n<li>Add different modes for breaking lines in the output of <tt>run_script()</tt>.</li>\n<li>Incorporate a fix from Maciek Starzyk for issue #6 so docroot can be\nset to something other than <tt>.</tt>.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.3</h3>\n<p>Added simple line-splitting to <tt>run_script()</tt>.</p>\n</div>\n<div id=\"id5\">\n<h3>1.2</h3>\n<p>Modified <tt>run_script()</tt> so that if <em>ignore_error</em> is False any\nexception caused by the external application is re-raised.  This\n\u201cbreaks\u201d a build if there is a problem generating the cog output in an\nrst file, and makes it easier to spot problems with the cog\ninstructions.</p>\n</div>\n<div id=\"id6\">\n<h3>1.1</h3>\n<p>Updated to include <tt>run_script()</tt> function.</p>\n</div>\n<div id=\"id7\">\n<h3>1.0</h3>\n<p>First public release based on the versions of these functions\ndeveloped for <a href=\"http://www.doughellmann.com/PyMOTW/\" rel=\"nofollow\">PyMOTW</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3682114, "releases": {"1.0": [], "1.1": [], "1.10.0": [{"comment_text": "", "digests": {"md5": "da6d931eab7b7aa95ef8c608d8c1594d", "sha256": "76f783c8068fe216bc527c6aa04f9babd9566c41190d4c6b6ff06d7a7a16c82b"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.10.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "da6d931eab7b7aa95ef8c608d8c1594d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14150, "upload_time": "2015-11-29T18:25:49", "upload_time_iso_8601": "2015-11-29T18:25:49.671318Z", "url": "https://files.pythonhosted.org/packages/7e/37/a478c8350ae27fe7f7aea56c3db57d255eb37cbb7c2995dee0b85f68e0fa/sphinxcontrib_paverutils-1.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c429602a2d72d3440ed67f414c85fce0", "sha256": "6375ba1be95c061a8e5ae5a1bb888f07e50763cc6c8633509ea2feac1f237b9d"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.10.0.tar.gz", "has_sig": true, "md5_digest": "c429602a2d72d3440ed67f414c85fce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36773, "upload_time": "2015-11-29T18:25:44", "upload_time_iso_8601": "2015-11-29T18:25:44.775005Z", "url": "https://files.pythonhosted.org/packages/01/09/f592f5686109efbe6ea02cc67bbf4b7c3713778cde688d51f030cde0e996/sphinxcontrib-paverutils-1.10.0.tar.gz", "yanked": false}], "1.11.0": [{"comment_text": "", "digests": {"md5": "708177916644094618978c221fbb0349", "sha256": "9fb3feeb1c25cb38da2b26142a3ff5e1ced6827e0728f1b1d877f2f4bcf86c4c"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.11.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "708177916644094618978c221fbb0349", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14354, "upload_time": "2016-06-12T15:35:48", "upload_time_iso_8601": "2016-06-12T15:35:48.642040Z", "url": "https://files.pythonhosted.org/packages/78/e6/ec801e1cf258608c8f47cb72afd00f14c9f242fd5fed9e550455588be9f2/sphinxcontrib_paverutils-1.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f47679b8826a943d4d478179076ebd0d", "sha256": "e4eed68730c5d155a9e65e56f0ee79f8216e7b11977679c347f54a0192172caf"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.11.0.tar.gz", "has_sig": true, "md5_digest": "f47679b8826a943d4d478179076ebd0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37354, "upload_time": "2016-06-12T15:35:44", "upload_time_iso_8601": "2016-06-12T15:35:44.337249Z", "url": "https://files.pythonhosted.org/packages/ac/4d/f700db108867a66227695ef9ba0a636490dca0d972a90fd45b5264d9e662/sphinxcontrib-paverutils-1.11.0.tar.gz", "yanked": false}], "1.12.0": [{"comment_text": "", "digests": {"md5": "ba72d8c45c1da3104a1d97b32596b3f1", "sha256": "5603b0e79966d07f5f44611d069e2e13104316471f7d1ac4c361c89ed950d085"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.12.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "ba72d8c45c1da3104a1d97b32596b3f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14361, "upload_time": "2016-07-10T15:22:27", "upload_time_iso_8601": "2016-07-10T15:22:27.368066Z", "url": "https://files.pythonhosted.org/packages/e0/b1/3b008f84e7bb0b79bde8ef04c37125924e8ca7c62e5784dbb32ec842339d/sphinxcontrib_paverutils-1.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d76d94802c721fec5fe580f1e8b498d", "sha256": "4acee3851cec346511a0053c2fb8b7d517bdc531bb77147d01a54a2c32147957"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.12.0.tar.gz", "has_sig": true, "md5_digest": "4d76d94802c721fec5fe580f1e8b498d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37406, "upload_time": "2016-07-10T15:22:22", "upload_time_iso_8601": "2016-07-10T15:22:22.690150Z", "url": "https://files.pythonhosted.org/packages/d6/7a/75b0a918b7563cc934f261f9f56f3288d9ab16543a0d0b83d9476b0215d5/sphinxcontrib-paverutils-1.12.0.tar.gz", "yanked": false}], "1.13.0": [{"comment_text": "", "digests": {"md5": "1f6c3fa8bfc46a7368d30554b0af5266", "sha256": "d3b7d000aebcffc1c1484e798406faf5da6b03903ead03062478191942a51e23"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.13.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "1f6c3fa8bfc46a7368d30554b0af5266", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14405, "upload_time": "2016-07-10T17:04:41", "upload_time_iso_8601": "2016-07-10T17:04:41.311859Z", "url": "https://files.pythonhosted.org/packages/dd/6d/7fb01fd023d57adce18cfe25e7666f9bc9081e1e9564770b62f95b2b4f07/sphinxcontrib_paverutils-1.13.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "370c6c3bb018b788f281d0fa2f653e7a", "sha256": "8d4acd9822b64e242814021515a0a59040b603d745b38353ad99b573b2f3e784"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.13.0.tar.gz", "has_sig": true, "md5_digest": "370c6c3bb018b788f281d0fa2f653e7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37482, "upload_time": "2016-07-10T17:04:36", "upload_time_iso_8601": "2016-07-10T17:04:36.550174Z", "url": "https://files.pythonhosted.org/packages/fc/e4/768bc4f58d0225aea1ef27412720266dacdfc1f03e3d3f66efdd6ee3d16c/sphinxcontrib-paverutils-1.13.0.tar.gz", "yanked": false}], "1.14.0": [{"comment_text": "", "digests": {"md5": "9ad15cfff51c9a7faa981edd0fe7e2c8", "sha256": "04e2fbeed50286f58c8caf9089910d4bab3c65924b263cd3de5eadbd89a00011"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.14.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "9ad15cfff51c9a7faa981edd0fe7e2c8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14761, "upload_time": "2016-09-11T23:58:11", "upload_time_iso_8601": "2016-09-11T23:58:11.975070Z", "url": "https://files.pythonhosted.org/packages/b0/1a/7c9e1b80b4d9baa636f27368b3b2e2fa8786c943783b18388fb15f738cb7/sphinxcontrib_paverutils-1.14.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab0d3eefffeaf52bbaf4280ae29adc2e", "sha256": "2124c851f96356012ed5c92ce320ca3a842cce8a94ddd2319bcb0835b48b9f80"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.14.0.tar.gz", "has_sig": true, "md5_digest": "ab0d3eefffeaf52bbaf4280ae29adc2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38023, "upload_time": "2016-09-11T23:58:09", "upload_time_iso_8601": "2016-09-11T23:58:09.411931Z", "url": "https://files.pythonhosted.org/packages/97/75/902da5033195d85afcf56f8747466e936f26e6e19d726d3874a408b85d14/sphinxcontrib-paverutils-1.14.0.tar.gz", "yanked": false}], "1.15.0": [{"comment_text": "", "digests": {"md5": "d20b88af9195b09ea4438709206314b4", "sha256": "060b7baaff616a468a2bdfe12742b17b7efa2c4305931aae15d670dd7d8e63cf"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.15.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d20b88af9195b09ea4438709206314b4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14772, "upload_time": "2016-11-27T14:33:38", "upload_time_iso_8601": "2016-11-27T14:33:38.837463Z", "url": "https://files.pythonhosted.org/packages/c3/b9/8d79925c853671e1e7128ddf2a83650de487abedd8da2e1349497fe3e4cb/sphinxcontrib_paverutils-1.15.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adbbbf1d541c4fd5a7b969dc6b6c56e2", "sha256": "f6198d56e56a46c3809ba2c1a4c11d944639ce7c81d3eacaa39d86a3c7938d42"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.15.0.tar.gz", "has_sig": true, "md5_digest": "adbbbf1d541c4fd5a7b969dc6b6c56e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38114, "upload_time": "2016-11-27T14:33:36", "upload_time_iso_8601": "2016-11-27T14:33:36.535333Z", "url": "https://files.pythonhosted.org/packages/2e/9c/3e56cc7b7f74aaf9ad8d30059c94415ba0053d8c235b3bcb25aa1fa8b56c/sphinxcontrib-paverutils-1.15.0.tar.gz", "yanked": false}], "1.15.1": [{"comment_text": "", "digests": {"md5": "6ea29e7bb7f4f1b685d2b598d0e5ab7e", "sha256": "b2a0ed937247952540f0709cb8f02c3ac4eb6ba32b63dbb61fb66b8158931d22"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.15.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "6ea29e7bb7f4f1b685d2b598d0e5ab7e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14797, "upload_time": "2016-11-27T14:39:10", "upload_time_iso_8601": "2016-11-27T14:39:10.647591Z", "url": "https://files.pythonhosted.org/packages/e1/0b/6f680c9781097375574598dd8aa10ddda423ec8dce53e66692b734a8c887/sphinxcontrib_paverutils-1.15.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6b60c790b07e1d05a2638165792efee", "sha256": "82e2af3869d473da9c1af7681333ced5047718e92861c76f193736918977847d"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.15.1.tar.gz", "has_sig": true, "md5_digest": "d6b60c790b07e1d05a2638165792efee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38182, "upload_time": "2016-11-27T14:39:08", "upload_time_iso_8601": "2016-11-27T14:39:08.377717Z", "url": "https://files.pythonhosted.org/packages/78/39/720221e94bbdc2c396b761550bff68a3f1dfb43ff5f48b6755c22dc2c7fc/sphinxcontrib-paverutils-1.15.1.tar.gz", "yanked": false}], "1.16.0": [{"comment_text": "", "digests": {"md5": "813833be275de5aa97f8656da6506936", "sha256": "dcfa49e065a9390e2e5fcb9962628ec255574660b39b8f5913332826573e55a6"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.16.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "813833be275de5aa97f8656da6506936", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14965, "upload_time": "2016-12-29T18:58:20", "upload_time_iso_8601": "2016-12-29T18:58:20.874547Z", "url": "https://files.pythonhosted.org/packages/6c/7e/96fc3bd938aa632de15be205f4fe10cae4bf89644c947eda53df1cf83d7c/sphinxcontrib_paverutils-1.16.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "986686ff7650b48c3cf97dc964e93d1a", "sha256": "124a4e030d4975c0d0d778be7ae1bfda828d896f04272436fe323cd2e8c3bcf5"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.16.0.tar.gz", "has_sig": true, "md5_digest": "986686ff7650b48c3cf97dc964e93d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38345, "upload_time": "2016-12-29T18:58:18", "upload_time_iso_8601": "2016-12-29T18:58:18.892023Z", "url": "https://files.pythonhosted.org/packages/bc/27/78e8aa40eef0b09fb7e9644894e4370dc929bf33a6357bbaa0b6912c7039/sphinxcontrib-paverutils-1.16.0.tar.gz", "yanked": false}], "1.17.0": [{"comment_text": "", "digests": {"md5": "d925e9c189609897b0a1fff363bf4a99", "sha256": "447c412d827bf4d899d56febde45db969c783d49efe9824fed4be5f2fccc4bfb"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.17.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d925e9c189609897b0a1fff363bf4a99", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15048, "upload_time": "2018-03-18T23:54:28", "upload_time_iso_8601": "2018-03-18T23:54:28.675823Z", "url": "https://files.pythonhosted.org/packages/de/92/2b5c16c057c33ab80cd76e21ed82b225dcfac53a04cea3f3b7090d806251/sphinxcontrib_paverutils-1.17.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e255ddc50163201343d25d3263140ab3", "sha256": "daafc4440018c34b0ab3fe55b72e6c1c484a23622fb3caf73f08f77fb458c149"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.17.0.tar.gz", "has_sig": true, "md5_digest": "e255ddc50163201343d25d3263140ab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39373, "upload_time": "2018-03-18T23:54:30", "upload_time_iso_8601": "2018-03-18T23:54:30.501584Z", "url": "https://files.pythonhosted.org/packages/bc/db/4fdd673bbe9e6dd9a83fc4556c9211b7b257a98d3b6646e1bd9a398a4dbd/sphinxcontrib-paverutils-1.17.0.tar.gz", "yanked": false}], "1.2": [], "1.3": [], "1.4": [{"comment_text": "", "digests": {"md5": "38d9d7a6f84d32b5c95b0e424acaca32", "sha256": "5344c413587c71e11458e5c36fdbe0dee2b6e703f436ec06db8b60386276be14"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.4.tar.gz", "has_sig": false, "md5_digest": "38d9d7a6f84d32b5c95b0e424acaca32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12720, "upload_time": "2010-12-27T21:42:26", "upload_time_iso_8601": "2010-12-27T21:42:26.661638Z", "url": "https://files.pythonhosted.org/packages/d1/cb/6ee00834e773846d1c67010392297e6b77ef047fcaf7f756ad01db7a5563/sphinxcontrib-paverutils-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "e78d04e19efa825965839daf454fb241", "sha256": "83fd832ccaca59c465ec61f150f07910c96b11b1ca24d3cf577c013b10172572"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.5-py2.7.egg", "has_sig": false, "md5_digest": "e78d04e19efa825965839daf454fb241", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 20858, "upload_time": "2013-05-29T13:22:02", "upload_time_iso_8601": "2013-05-29T13:22:02.170655Z", "url": "https://files.pythonhosted.org/packages/04/6e/0b7c4c6649287df1ceed8c581c014d9eb5c58d5bf1ecd027bd35dced84a0/sphinxcontrib_paverutils-1.5-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "809d005199a2a04cb617a605f870efcd", "sha256": "5b45e5bbc1bc0d1c734250571d6bcbd55e48a0d450369a2cb40ed64160c5dfa1"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.5.tar.gz", "has_sig": false, "md5_digest": "809d005199a2a04cb617a605f870efcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9721, "upload_time": "2013-05-29T13:22:00", "upload_time_iso_8601": "2013-05-29T13:22:00.144765Z", "url": "https://files.pythonhosted.org/packages/cd/c1/fc54c61eaf0304e6056cfc53209ddc35bb8df5b889bb32b1ce635c86b149/sphinxcontrib-paverutils-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "930c9a450686e0893a8b5893933a4b81", "sha256": "9e7a275bd2d808a592580295b3e1f1a2152a6a626c27fa94b5ef28fbcb1140dd"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.6.tar.gz", "has_sig": true, "md5_digest": "930c9a450686e0893a8b5893933a4b81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94098, "upload_time": "2014-03-23T15:28:56", "upload_time_iso_8601": "2014-03-23T15:28:56.730085Z", "url": "https://files.pythonhosted.org/packages/2b/09/8c62130eee31a84b3f17ef13e6f1f0ec4a8ea843cbee426071220deef23b/sphinxcontrib-paverutils-1.6.tar.gz", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "77872f8ca3386bf4ef64dea507d3efbb", "sha256": "da69cc5d86120d5054bbd6212f5abca8d0b5d06ab2b517b039ed15509e4d1ea3"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.7-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "77872f8ca3386bf4ef64dea507d3efbb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13972, "upload_time": "2015-01-04T15:53:33", "upload_time_iso_8601": "2015-01-04T15:53:33.706546Z", "url": "https://files.pythonhosted.org/packages/e0/58/8b79a3bc8d6d7b445d629a8dd2d383c9981ed2b3a5a34890d2783968becf/sphinxcontrib_paverutils-1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11b5bb2e7774e9a368aa598570084ee9", "sha256": "9eff533f52212caa9ec256aef69976b3e65b17b0efa85741c7f8e6e0e94302fe"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.7.tar.gz", "has_sig": true, "md5_digest": "11b5bb2e7774e9a368aa598570084ee9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94927, "upload_time": "2015-01-04T15:53:31", "upload_time_iso_8601": "2015-01-04T15:53:31.638676Z", "url": "https://files.pythonhosted.org/packages/84/41/75617695ffe600cf3ac991b6c9800eb15f234e86e9cab733473f6f7adb68/sphinxcontrib-paverutils-1.7.tar.gz", "yanked": false}], "1.8": [{"comment_text": "", "digests": {"md5": "b0b61d7ff68c07af626a10721f1aed93", "sha256": "ecc2909027eefe832fca72501c3b292e4a6e50f46f1702b9d50bc9928c52303a"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.8-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "b0b61d7ff68c07af626a10721f1aed93", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14004, "upload_time": "2015-05-31T15:03:58", "upload_time_iso_8601": "2015-05-31T15:03:58.952162Z", "url": "https://files.pythonhosted.org/packages/95/3f/e980db74489fbfe5eb54d08e4e3ed48724ad7695b5c5df5a7675e546d6b6/sphinxcontrib_paverutils-1.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55aa0200da77b5e6450668f26383b10f", "sha256": "bec46887e7336e3d30604f7f959a4ab068724f8d0b7421b67fb8a39a947169fd"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.8.tar.gz", "has_sig": true, "md5_digest": "55aa0200da77b5e6450668f26383b10f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36296, "upload_time": "2015-05-31T15:03:55", "upload_time_iso_8601": "2015-05-31T15:03:55.085499Z", "url": "https://files.pythonhosted.org/packages/e5/84/6d33e9bc5a1232f6c0c7921f1ca1bb5028e629f67f660f1043fa77a7b8bc/sphinxcontrib-paverutils-1.8.tar.gz", "yanked": false}], "1.9.0": [{"comment_text": "", "digests": {"md5": "53f2c53d7e08e811ce5686c22beae305", "sha256": "07c45cb7b8e09ee2b025f07becfb979c264b55c2f454cfcdc65a89a29a2538c4"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.9.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "53f2c53d7e08e811ce5686c22beae305", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14077, "upload_time": "2015-06-04T11:52:57", "upload_time_iso_8601": "2015-06-04T11:52:57.660385Z", "url": "https://files.pythonhosted.org/packages/62/8c/b5ea57139f3d0b0b9d861a253be067a16277efc204be90808579b561e96b/sphinxcontrib_paverutils-1.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "321aa3923f21153b1e75ceeff24d1fc5", "sha256": "a016f4d3ef6fdeb43c64089db0ee4084746181fc3be2fd9a057dd69ca8ed8c6f"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.9.0.tar.gz", "has_sig": true, "md5_digest": "321aa3923f21153b1e75ceeff24d1fc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36695, "upload_time": "2015-06-04T11:52:53", "upload_time_iso_8601": "2015-06-04T11:52:53.846217Z", "url": "https://files.pythonhosted.org/packages/42/2b/eedfc1e0cf9385d91881e13792083967ab41e5ba69b4298a1affc9e83e4c/sphinxcontrib-paverutils-1.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d925e9c189609897b0a1fff363bf4a99", "sha256": "447c412d827bf4d899d56febde45db969c783d49efe9824fed4be5f2fccc4bfb"}, "downloads": -1, "filename": "sphinxcontrib_paverutils-1.17.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d925e9c189609897b0a1fff363bf4a99", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15048, "upload_time": "2018-03-18T23:54:28", "upload_time_iso_8601": "2018-03-18T23:54:28.675823Z", "url": "https://files.pythonhosted.org/packages/de/92/2b5c16c057c33ab80cd76e21ed82b225dcfac53a04cea3f3b7090d806251/sphinxcontrib_paverutils-1.17.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e255ddc50163201343d25d3263140ab3", "sha256": "daafc4440018c34b0ab3fe55b72e6c1c484a23622fb3caf73f08f77fb458c149"}, "downloads": -1, "filename": "sphinxcontrib-paverutils-1.17.0.tar.gz", "has_sig": true, "md5_digest": "e255ddc50163201343d25d3263140ab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39373, "upload_time": "2018-03-18T23:54:30", "upload_time_iso_8601": "2018-03-18T23:54:30.501584Z", "url": "https://files.pythonhosted.org/packages/bc/db/4fdd673bbe9e6dd9a83fc4556c9211b7b257a98d3b6646e1bd9a398a4dbd/sphinxcontrib-paverutils-1.17.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:12 2020"}