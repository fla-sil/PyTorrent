{"info": {"author": "Santanu Mohapatro", "author_email": "mksantanu@me.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SanPySchedule - A Job Scheduler For Docker Environment\n\n## Dependencies\n\n```bash\n1. Install python3 into your local computer\n    Please follow Python install instructions mentioned in\n    https://www.python.org/downloads/\n\nNOTE: No separate package or framework required for running SanPySchedule\n\n```\n\n## Installation\n\n```bash\n\npip install SanPySchedule\n\n```\n\n## Source Code\n\n```bash\n\nClone the git repository to your local computer.\ngit clone https://github.ibm.com/santanu-lab/SanPySchedule.git\n\n```\n\n## Description And Features\n\n```bash\n\nSanPySchedule Python Library\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe library provides a easy solution to job scheduling problem due to unavailability of starndard job schedular like in docker and kubernette environment.\n\n1. A simple to use API for scheduling jobs.\n2. Unlinke crontab file, the sceduling information can be stored in a JSON file\n   which can be input to Library.\n3. Very lightweight and no external dependancy required.\n\n```\n\n## Usage\n\n```bash\n\nStep :1: Create a JSON File \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\na) JSON file name can be anything, but you must follow the follwing key value pair names in JSON.\n\nb) Change the value for pyJobName key to the required job name you want scheduler to execute.\n\nc) You must not change the format of  pyJobSchedule key value.\n   It should be in the format \"every-xxxx-yyyy\"\n   where xxxx should be second, day, minute and\n         yyyy should be time value\n\nd) Incase of weekly job the format should be every-week-aaaa-bbbb\n   where aaaa is the day name like monday, tuesday etc. And\n         bbbb is time value when the scheduler will execute the job.\n{\n    \"pyJobDetails\":[\n        {\n            \"pyJobName\":\"ls -lrt\",\n            \"pyJobSchedule\":\"every-seconds-5\"\n        },\n        {\n            \"pyJobName\": \"cat test.txt\",\n            \"pyJobSchedule\": \"every-day-20:43\"\n        },\n        {\n            \"pyJobName\": \"date\",\n            \"pyJobSchedule\": \"every-minute-30\"\n        },\n        {\n            \"pyJobName\": \"df -k .\",\n            \"pyJobSchedule\": \"every-week-monday-18:57\"\n        }\n    ]\n}\n\nStep :2: Create your main function\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    i)  Import Library to your code and pass the JSON file name to SanPySchedule \n        class, and your JOB scheduler is ready.\n\n        from SanPySchedule import SanPySchedule\n\n    ii) in the main function create the scheduler object.\n\n        from SanPySchedule import SanPySchedule\n        def main():\n            sps = SanPySchedule('SanJobTab.json')\n            sps.scheduleAllJobs()\n\n        if __name__ == \"__main__\":\n            main()\n\nStep :3: Sample Code\n~~~~~~~~~~~~~~~~~~~~~\nPlease refer Example directory for detailed code.\n\n```\n\n## Known Issues\n\n```bash\n\nException handling module need more refinement. I will provide the list ASAP.\n\n```\n\n## License\n\n```bash\n\nMIT License\n\nCopyright (c) 2020 Santanu Mohapatro\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n```\n\n## Author\n\n```bash\n\nSantanu Mohapatro\n(mksantanu@me.com)\nIBMers can contact me via.\nMail: shmohapa@in.ibm.com\nSLACK: @mksantanu\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.ibm.com/santanu-lab/SanPySchedule.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "SanPySchedule", "package_url": "https://pypi.org/project/SanPySchedule/", "platform": "", "project_url": "https://pypi.org/project/SanPySchedule/", "project_urls": {"Homepage": "https://github.ibm.com/santanu-lab/SanPySchedule.git"}, "release_url": "https://pypi.org/project/SanPySchedule/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "SanPySchedule - A Job Scheduler For Docker Environment", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SanPySchedule - A Job Scheduler For Docker Environment</h1>\n<h2>Dependencies</h2>\n<pre><span class=\"m\">1</span>. Install python3 into your <span class=\"nb\">local</span> computer\n    Please follow Python install instructions mentioned in\n    https://www.python.org/downloads/\n\nNOTE: No separate package or framework required <span class=\"k\">for</span> running SanPySchedule\n</pre>\n<h2>Installation</h2>\n<pre>pip install SanPySchedule\n</pre>\n<h2>Source Code</h2>\n<pre>Clone the git repository to your <span class=\"nb\">local</span> computer.\ngit clone https://github.ibm.com/santanu-lab/SanPySchedule.git\n</pre>\n<h2>Description And Features</h2>\n<pre>SanPySchedule Python Library\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nThe library provides a easy solution to job scheduling problem due to unavailability of starndard job schedular like in docker and kubernette environment.\n\n<span class=\"m\">1</span>. A simple to use API <span class=\"k\">for</span> scheduling jobs.\n<span class=\"m\">2</span>. Unlinke crontab file, the sceduling information can be stored in a JSON file\n   which can be input to Library.\n<span class=\"m\">3</span>. Very lightweight and no external dependancy required.\n</pre>\n<h2>Usage</h2>\n<pre>Step :1: Create a JSON File \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\na<span class=\"o\">)</span> JSON file name can be anything, but you must follow the follwing key value pair names in JSON.\n\nb<span class=\"o\">)</span> Change the value <span class=\"k\">for</span> pyJobName key to the required job name you want scheduler to execute.\n\nc<span class=\"o\">)</span> You must not change the format of  pyJobSchedule key value.\n   It should be in the format <span class=\"s2\">\"every-xxxx-yyyy\"</span>\n   where xxxx should be second, day, minute and\n         yyyy should be <span class=\"nb\">time</span> value\n\nd<span class=\"o\">)</span> Incase of weekly job the format should be every-week-aaaa-bbbb\n   where aaaa is the day name like monday, tuesday etc. And\n         bbbb is <span class=\"nb\">time</span> value when the scheduler will execute the job.\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"pyJobDetails\"</span>:<span class=\"o\">[</span>\n        <span class=\"o\">{</span>\n            <span class=\"s2\">\"pyJobName\"</span>:<span class=\"s2\">\"ls -lrt\"</span>,\n            <span class=\"s2\">\"pyJobSchedule\"</span>:<span class=\"s2\">\"every-seconds-5\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"o\">{</span>\n            <span class=\"s2\">\"pyJobName\"</span>: <span class=\"s2\">\"cat test.txt\"</span>,\n            <span class=\"s2\">\"pyJobSchedule\"</span>: <span class=\"s2\">\"every-day-20:43\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"o\">{</span>\n            <span class=\"s2\">\"pyJobName\"</span>: <span class=\"s2\">\"date\"</span>,\n            <span class=\"s2\">\"pyJobSchedule\"</span>: <span class=\"s2\">\"every-minute-30\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"o\">{</span>\n            <span class=\"s2\">\"pyJobName\"</span>: <span class=\"s2\">\"df -k .\"</span>,\n            <span class=\"s2\">\"pyJobSchedule\"</span>: <span class=\"s2\">\"every-week-monday-18:57\"</span>\n        <span class=\"o\">}</span>\n    <span class=\"o\">]</span>\n<span class=\"o\">}</span>\n\nStep :2: Create your main <span class=\"k\">function</span>\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    i<span class=\"o\">)</span>  Import Library to your code and pass the JSON file name to SanPySchedule \n        class, and your JOB scheduler is ready.\n\n        from SanPySchedule import SanPySchedule\n\n    ii<span class=\"o\">)</span> in the main <span class=\"k\">function</span> create the scheduler object.\n\n        from SanPySchedule import SanPySchedule\n        def main<span class=\"o\">()</span>:\n            <span class=\"nv\">sps</span> <span class=\"o\">=</span> SanPySchedule<span class=\"o\">(</span><span class=\"s1\">'SanJobTab.json'</span><span class=\"o\">)</span>\n            sps.scheduleAllJobs<span class=\"o\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"nv\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span>:\n            main<span class=\"o\">()</span>\n\nStep :3: Sample Code\n~~~~~~~~~~~~~~~~~~~~~\nPlease refer Example directory <span class=\"k\">for</span> detailed code.\n</pre>\n<h2>Known Issues</h2>\n<pre>Exception handling module need more refinement. I will provide the list ASAP.\n</pre>\n<h2>License</h2>\n<pre>MIT License\n\nCopyright <span class=\"o\">(</span>c<span class=\"o\">)</span> <span class=\"m\">2020</span> Santanu Mohapatro\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files <span class=\"o\">(</span>the <span class=\"s2\">\"Software\"</span><span class=\"o\">)</span>, to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to <span class=\"k\">do</span> so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED <span class=\"s2\">\"AS IS\"</span>, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</pre>\n<h2>Author</h2>\n<pre>Santanu Mohapatro\n<span class=\"o\">(</span>mksantanu@me.com<span class=\"o\">)</span>\nIBMers can contact me via.\nMail: shmohapa@in.ibm.com\nSLACK: @mksantanu\n</pre>\n\n          </div>"}, "last_serial": 7178014, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a6d713b8c17ccf302709806b8b944069", "sha256": "831968bcbcd36f24fd6a2c3e402d6e7858b2abda2942e38240c7a1be589af16c"}, "downloads": -1, "filename": "SanPySchedule-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a6d713b8c17ccf302709806b8b944069", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7982, "upload_time": "2020-05-06T06:31:56", "upload_time_iso_8601": "2020-05-06T06:31:56.344924Z", "url": "https://files.pythonhosted.org/packages/ab/f6/25daa2ab0ab84c153b03eae7fc032ef78f99bd78ffc671aa5c39f7850190/SanPySchedule-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72a4df6c30273f2e098e850e2688bf8e", "sha256": "d1e89a1c65ac0fc964c6a111607d5722ef250d27e7ac55338ae979829c694a7a"}, "downloads": -1, "filename": "SanPySchedule-1.0.0.tar.gz", "has_sig": false, "md5_digest": "72a4df6c30273f2e098e850e2688bf8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7874, "upload_time": "2020-05-06T06:31:59", "upload_time_iso_8601": "2020-05-06T06:31:59.038646Z", "url": "https://files.pythonhosted.org/packages/f8/9e/c6e2d42e0147f91054951fce623149868a20d4a940e36339dd43061cc48e/SanPySchedule-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6d713b8c17ccf302709806b8b944069", "sha256": "831968bcbcd36f24fd6a2c3e402d6e7858b2abda2942e38240c7a1be589af16c"}, "downloads": -1, "filename": "SanPySchedule-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a6d713b8c17ccf302709806b8b944069", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7982, "upload_time": "2020-05-06T06:31:56", "upload_time_iso_8601": "2020-05-06T06:31:56.344924Z", "url": "https://files.pythonhosted.org/packages/ab/f6/25daa2ab0ab84c153b03eae7fc032ef78f99bd78ffc671aa5c39f7850190/SanPySchedule-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72a4df6c30273f2e098e850e2688bf8e", "sha256": "d1e89a1c65ac0fc964c6a111607d5722ef250d27e7ac55338ae979829c694a7a"}, "downloads": -1, "filename": "SanPySchedule-1.0.0.tar.gz", "has_sig": false, "md5_digest": "72a4df6c30273f2e098e850e2688bf8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7874, "upload_time": "2020-05-06T06:31:59", "upload_time_iso_8601": "2020-05-06T06:31:59.038646Z", "url": "https://files.pythonhosted.org/packages/f8/9e/c6e2d42e0147f91054951fce623149868a20d4a940e36339dd43061cc48e/SanPySchedule-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:39 2020"}