{"info": {"author": "Vadim Statishin", "author_email": "statishin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "==============\nbeaker-mongodb\n==============\nMongoDB backend for Beaker's caching / session system.\n\n.. _Beaker: http://beaker.groovie.org\n.. _MongoDB: http://mongodb.org\n\nConfiguration\n=============\n\nTo set this up in your own project so that beaker can find it, it must\ndefine a setuptools entry point in your setup.py file.  If you install\nfrom the egg distribution, beaker-mongodb setup.py SHOULD create a\nbeaker.backend entry point.  If you need to tweak it/see how it's done\nor it just doesn't work and you need to define your own,\nmine looks like this::\n\n    >>> entry_points=\"\"\"\n    ... [beaker.backends]\n    ... mongodb = beaker.ext.mongodb:MongoDBNamespaceManager\n    ... \"\"\",\n\n\nWith this defined, beaker should automatically find the entry point at startup\n(Beaker 1.4 and higher support custom entry points) and load it as an optional\nbackend called 'mongodb'.\n\nThere are more configuration options and details in the Beaker configuration docs [1]_.\n\n.. [1] Beaker's configuration documentation -\n        http://beaker.groovie.org/configuration.htm\n\nI have a few cache regions in one of my applications, some of which are memcache and some are on mongodb.  The region config looks like this::\n\n    >>> # new style cache settings\n    ... beaker.cache.regions = comic_archives, navigation\n    ... beaker.cache.comic_archives.type = libmemcached\n    ... beaker.cache.comic_archives.url = 127.0.0.1:11211\n    ... beaker.cache.comic_archives.expire = 604800\n    ... beaker.cache.navigation.type = mongodb\n    ... beaker.cache.navigation.url = mongodb://localhost:27017/beaker.navigation\n    ... beaker.cache.navigation.expire = 86400\n \nThe Beaker docs[1] contain detailed information on configuring regions.  The\nitem we're interested in here is the **beaker.cache.navigation** keys.  Each\nbeaker cache definition needs a *type* field, which defines which backend to\nuse.  Specifying mongodb will (if the module is properly installed) tell\nBeaker to cache via mongodb.  Note that if Beaker cannot load the extension,\nit will tell you that mongodb is an invalid backend.\n\nExpiration is standard beaker syntax, although not supported at the moment in\nthis backend.\n\nFinally, you need to define a URL to connect to MongoDB.  This follows the standardized\nMongoDB URI Format[2]_.\n\nIf you want to use MongoDB's optional authentication support, that is also supported.  Simply define your URL as such::\n\n    >>> beaker.cache.navigation.url = mongodb://user@password@localhost:27017/beaker.navigation\n\n\n.. [2] MongoDB URI Format: http://www.mongodb.org/display/DOCS/Connections", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/cent/beaker-mongo/", "keywords": "mongo mongodb beaker cache session", "license": "New BSD License", "maintainer": null, "maintainer_email": null, "name": "beaker-mongo", "package_url": "https://pypi.org/project/beaker-mongo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/beaker-mongo/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://bitbucket.org/cent/beaker-mongo/"}, "release_url": "https://pypi.org/project/beaker-mongo/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Beaker backend MongoDB", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>MongoDB backend for Beaker\u2019s caching / session system.</p>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>To set this up in your own project so that beaker can find it, it must\ndefine a setuptools entry point in your setup.py file.  If you install\nfrom the egg distribution, beaker-mongodb setup.py SHOULD create a\nbeaker.backend entry point.  If you need to tweak it/see how it\u2019s done\nor it just doesn\u2019t work and you need to define your own,\nmine looks like this:</p>\n<pre>&gt;&gt;&gt; entry_points=\"\"\"\n... [beaker.backends]\n... mongodb = beaker.ext.mongodb:MongoDBNamespaceManager\n... \"\"\",\n</pre>\n<p>With this defined, beaker should automatically find the entry point at startup\n(Beaker 1.4 and higher support custom entry points) and load it as an optional\nbackend called \u2018mongodb\u2019.</p>\n<p>There are more configuration options and details in the Beaker configuration docs <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a>.</p>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td>Beaker\u2019s configuration documentation -\n<a href=\"http://beaker.groovie.org/configuration.htm\" rel=\"nofollow\">http://beaker.groovie.org/configuration.htm</a></td></tr>\n</tbody>\n</table>\n<p>I have a few cache regions in one of my applications, some of which are memcache and some are on mongodb.  The region config looks like this:</p>\n<pre>&gt;&gt;&gt; # new style cache settings\n... beaker.cache.regions = comic_archives, navigation\n... beaker.cache.comic_archives.type = libmemcached\n... beaker.cache.comic_archives.url = 127.0.0.1:11211\n... beaker.cache.comic_archives.expire = 604800\n... beaker.cache.navigation.type = mongodb\n... beaker.cache.navigation.url = mongodb://localhost:27017/beaker.navigation\n... beaker.cache.navigation.expire = 86400\n</pre>\n<p>The Beaker docs[1] contain detailed information on configuring regions.  The\nitem we\u2019re interested in here is the <strong>beaker.cache.navigation</strong> keys.  Each\nbeaker cache definition needs a <em>type</em> field, which defines which backend to\nuse.  Specifying mongodb will (if the module is properly installed) tell\nBeaker to cache via mongodb.  Note that if Beaker cannot load the extension,\nit will tell you that mongodb is an invalid backend.</p>\n<p>Expiration is standard beaker syntax, although not supported at the moment in\nthis backend.</p>\n<p>Finally, you need to define a URL to connect to MongoDB.  This follows the standardized\nMongoDB URI Format[2]_.</p>\n<p>If you want to use MongoDB\u2019s optional authentication support, that is also supported.  Simply define your URL as such:</p>\n<pre>&gt;&gt;&gt; beaker.cache.navigation.url = mongodb://user@password@localhost:27017/beaker.navigation\n</pre>\n<table id=\"id3\">\n<col><col>\n<tbody>\n<tr><td>[2]</td><td>MongoDB URI Format: <a href=\"http://www.mongodb.org/display/DOCS/Connections\" rel=\"nofollow\">http://www.mongodb.org/display/DOCS/Connections</a></td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 977970, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3d235cdcbfa77703650a5aa4dfceff62", "sha256": "92fdd202024a90e69b5f937c34e6668185be2961e052973e271efc112b9e66a9"}, "downloads": -1, "filename": "beaker-mongo-0.1.tar.gz", "has_sig": false, "md5_digest": "3d235cdcbfa77703650a5aa4dfceff62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4359, "upload_time": "2013-05-02T20:28:48", "upload_time_iso_8601": "2013-05-02T20:28:48.206632Z", "url": "https://files.pythonhosted.org/packages/39/2d/e38c8d65ae5e6260af6bb9b34557e2b825c27d50f7881306d791d69794f9/beaker-mongo-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "51e7980a8a90c8690f6cac6f516c9670", "sha256": "808145e1de82613a23a5739cadf6e28685d00d67a9f60111d7b1c687de31dcef"}, "downloads": -1, "filename": "beaker-mongo-0.2.tar.gz", "has_sig": false, "md5_digest": "51e7980a8a90c8690f6cac6f516c9670", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4357, "upload_time": "2013-05-02T20:31:28", "upload_time_iso_8601": "2013-05-02T20:31:28.362419Z", "url": "https://files.pythonhosted.org/packages/9e/95/1935f29efd5a3fba46bf122a9bc39146e800c64081f11260c585defb8e34/beaker-mongo-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c962468a0191f00fe537343b921760e6", "sha256": "ae190aa462dc5dc10b0c847a1e6ac1b1b73374c79e0944ece463d5f52dbbcf19"}, "downloads": -1, "filename": "beaker-mongo-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c962468a0191f00fe537343b921760e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4370, "upload_time": "2013-05-02T20:37:13", "upload_time_iso_8601": "2013-05-02T20:37:13.938446Z", "url": "https://files.pythonhosted.org/packages/3f/79/0071ec557b6c40debaa52f1ec433d1176ee15279dd49382f5ad06a0ca211/beaker-mongo-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "54b634b43e32295d08350068577c93fb", "sha256": "469ae9ce20bbba85caf8bdff5bf8df44165c1e46407f87ef68fa812abe4a9d2c"}, "downloads": -1, "filename": "beaker-mongo-0.2.2.tar.gz", "has_sig": false, "md5_digest": "54b634b43e32295d08350068577c93fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4401, "upload_time": "2014-01-23T08:06:33", "upload_time_iso_8601": "2014-01-23T08:06:33.058680Z", "url": "https://files.pythonhosted.org/packages/b1/d5/243446e0d0ff08cfc67f02b32b0d0051dce4a7e248309235678934125abe/beaker-mongo-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "54b634b43e32295d08350068577c93fb", "sha256": "469ae9ce20bbba85caf8bdff5bf8df44165c1e46407f87ef68fa812abe4a9d2c"}, "downloads": -1, "filename": "beaker-mongo-0.2.2.tar.gz", "has_sig": false, "md5_digest": "54b634b43e32295d08350068577c93fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4401, "upload_time": "2014-01-23T08:06:33", "upload_time_iso_8601": "2014-01-23T08:06:33.058680Z", "url": "https://files.pythonhosted.org/packages/b1/d5/243446e0d0ff08cfc67f02b32b0d0051dce4a7e248309235678934125abe/beaker-mongo-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:57 2020"}