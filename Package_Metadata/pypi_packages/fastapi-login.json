{"info": {"author": "Max Rausch-Dupont", "author_email": "maxrd79@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# FastAPI-Login\n\nFastAPI-Login tries to provide similar functionality as [Flask-Login](https://github.com/maxcountryman/flask-login) does.\n\n## Installation\n\n```shell script\n$ pip install fastapi-login\n```\n\n## Usage\n\nTo begin we have to setup our FastAPI app:\n````python\nfrom fastapi import FastAPI\n\nSECRET = \"your-secret-key\"\n\napp = FastAPI()\n````\nTo obtain a suitable secret key you can run ``import os; print(os.urandom(24).hex())``.\n\nNow we can import and setup the LoginManager, which will handle the process of\nencoding and decoding our Json Web Tokens.\n\n````python\nfrom fastapi_login import LoginManager\nmanager = LoginManager(SECRET, tokenUrl='/auth/token')\n````\nFor the example we will use a dictionary to represent our user database. In your\napplication this could also be a real database like sqlite or Postgres. It does not\nmatter as you have to provide the function which retrieves the user.\n\n````python\nfake_db = {'johndoe@e.mail': {'password': 'hunter2'}}\n````\n\nNow we have to provide the ``LoginManager`` with a way to load our user. The \n`user_loader` callback should either return your user object or ``None``\n\n````python\n@manager.user_loader\ndef load_user(email: str):  # could also be an asynchronous function\n    user = fake_db.get(email)\n    return user\n````\n\nNow we have to define a way to let the user login in our app. Therefore we will create\na new route:\n\n````python\nfrom fastapi import Depends\nfrom fastapi.security import OAuth2PasswordRequestForm\nfrom fastapi_login.exceptions import InvalidCredentialsException\n\n@app.post('/auth/token')\ndef login(data: OAuth2PasswordRequestForm = Depends()):\n    email = data.username\n    password = data.password\n\n    user = load_user(email)  # we are using the same function to retrieve the user\n    if not user:\n        raise InvalidCredentialsException  # you can also use your own HTTPException\n    elif password != user['password']:\n        raise InvalidCredentialsException\n\n    access_token = manager.create_access_token(\n        data=dict(sub=email)\n    )\n    return {'access_token': access_token, 'token_type': 'bearer'}\n````\n\nNow whenever you want your user to be logged in to use a route, you can simply\nuse your ``LoginManager`` instance as a dependency.\n\n````python\n@app.get('/protected')\ndef protected_route(user=Depends(manager)):\n    ...\n````\n\nIf you also want to handle a not authenticated error, you can add your own subclass of Exception to the LoginManager.\n````python\nfrom starlette.responses import RedirectResponse\n\nclass NotAuthenticatedException(Exception):\n    pass\n\n# these two argument are mandatory\ndef exc_handler(request, exc):\n    return RedirectResponse(url='/login')\n\nmanager.not_authenticated_exception = NotAuthenticatedException\n# You also have to add an exception handler to the your app instance\napp.add_exception_handler(NotAuthenticatedException, exc_handler)\n````\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MushroomMaula/fastapi_login", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fastapi-login", "package_url": "https://pypi.org/project/fastapi-login/", "platform": "", "project_url": "https://pypi.org/project/fastapi-login/", "project_urls": {"Homepage": "https://github.com/MushroomMaula/fastapi_login"}, "release_url": "https://pypi.org/project/fastapi-login/1.2.2/", "requires_dist": ["fastapi", "passlib", "pyjwt"], "requires_python": "", "summary": "", "version": "1.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>FastAPI-Login</h1>\n<p>FastAPI-Login tries to provide similar functionality as <a href=\"https://github.com/maxcountryman/flask-login\" rel=\"nofollow\">Flask-Login</a> does.</p>\n<h2>Installation</h2>\n<pre>$ pip install fastapi-login\n</pre>\n<h2>Usage</h2>\n<p>To begin we have to setup our FastAPI app:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fastapi</span> <span class=\"kn\">import</span> <span class=\"n\">FastAPI</span>\n\n<span class=\"n\">SECRET</span> <span class=\"o\">=</span> <span class=\"s2\">\"your-secret-key\"</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">FastAPI</span><span class=\"p\">()</span>\n</pre>\n<p>To obtain a suitable secret key you can run <code>import os; print(os.urandom(24).hex())</code>.</p>\n<p>Now we can import and setup the LoginManager, which will handle the process of\nencoding and decoding our Json Web Tokens.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fastapi_login</span> <span class=\"kn\">import</span> <span class=\"n\">LoginManager</span>\n<span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">LoginManager</span><span class=\"p\">(</span><span class=\"n\">SECRET</span><span class=\"p\">,</span> <span class=\"n\">tokenUrl</span><span class=\"o\">=</span><span class=\"s1\">'/auth/token'</span><span class=\"p\">)</span>\n</pre>\n<p>For the example we will use a dictionary to represent our user database. In your\napplication this could also be a real database like sqlite or Postgres. It does not\nmatter as you have to provide the function which retrieves the user.</p>\n<pre><span class=\"n\">fake_db</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'johndoe@e.mail'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"s1\">'hunter2'</span><span class=\"p\">}}</span>\n</pre>\n<p>Now we have to provide the <code>LoginManager</code> with a way to load our user. The\n<code>user_loader</code> callback should either return your user object or <code>None</code></p>\n<pre><span class=\"nd\">@manager</span><span class=\"o\">.</span><span class=\"n\">user_loader</span>\n<span class=\"k\">def</span> <span class=\"nf\">load_user</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>  <span class=\"c1\"># could also be an asynchronous function</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">fake_db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">user</span>\n</pre>\n<p>Now we have to define a way to let the user login in our app. Therefore we will create\na new route:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fastapi</span> <span class=\"kn\">import</span> <span class=\"n\">Depends</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fastapi.security</span> <span class=\"kn\">import</span> <span class=\"n\">OAuth2PasswordRequestForm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fastapi_login.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">InvalidCredentialsException</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'/auth/token'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">login</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">OAuth2PasswordRequestForm</span> <span class=\"o\">=</span> <span class=\"n\">Depends</span><span class=\"p\">()):</span>\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">username</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">password</span>\n\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">load_user</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">)</span>  <span class=\"c1\"># we are using the same function to retrieve the user</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">user</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">InvalidCredentialsException</span>  <span class=\"c1\"># you can also use your own HTTPException</span>\n    <span class=\"k\">elif</span> <span class=\"n\">password</span> <span class=\"o\">!=</span> <span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'password'</span><span class=\"p\">]:</span>\n        <span class=\"k\">raise</span> <span class=\"n\">InvalidCredentialsException</span>\n\n    <span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">create_access_token</span><span class=\"p\">(</span>\n        <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">sub</span><span class=\"o\">=</span><span class=\"n\">email</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'access_token'</span><span class=\"p\">:</span> <span class=\"n\">access_token</span><span class=\"p\">,</span> <span class=\"s1\">'token_type'</span><span class=\"p\">:</span> <span class=\"s1\">'bearer'</span><span class=\"p\">}</span>\n</pre>\n<p>Now whenever you want your user to be logged in to use a route, you can simply\nuse your <code>LoginManager</code> instance as a dependency.</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/protected'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">protected_route</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">Depends</span><span class=\"p\">(</span><span class=\"n\">manager</span><span class=\"p\">)):</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>If you also want to handle a not authenticated error, you can add your own subclass of Exception to the LoginManager.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">starlette.responses</span> <span class=\"kn\">import</span> <span class=\"n\">RedirectResponse</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">NotAuthenticatedException</span><span class=\"p\">(</span><span class=\"ne\">Exception</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"c1\"># these two argument are mandatory</span>\n<span class=\"k\">def</span> <span class=\"nf\">exc_handler</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">exc</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">RedirectResponse</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'/login'</span><span class=\"p\">)</span>\n\n<span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">not_authenticated_exception</span> <span class=\"o\">=</span> <span class=\"n\">NotAuthenticatedException</span>\n<span class=\"c1\"># You also have to add an exception handler to the your app instance</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">add_exception_handler</span><span class=\"p\">(</span><span class=\"n\">NotAuthenticatedException</span><span class=\"p\">,</span> <span class=\"n\">exc_handler</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6960058, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "7bed748f29d7e3a8091b7e06ff62a254", "sha256": "d0d74694c07830a2ae61f590e5950f778a40ffae1f1c584360c30977f6820c1e"}, "downloads": -1, "filename": "fastapi_login-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7bed748f29d7e3a8091b7e06ff62a254", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8363, "upload_time": "2019-10-24T20:13:56", "upload_time_iso_8601": "2019-10-24T20:13:56.145811Z", "url": "https://files.pythonhosted.org/packages/71/4a/ba63329ba4d707cdd315fe87c87589843d79dd332f33342e45fae246e779/fastapi_login-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfe3ab84a26c99664b2f53da4fb46ce3", "sha256": "e99fcfd8a765b76ec9e1d98ee99385af76520b4bac37b2100fbaa958c8032fff"}, "downloads": -1, "filename": "fastapi-login-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cfe3ab84a26c99664b2f53da4fb46ce3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6506, "upload_time": "2019-10-24T20:13:59", "upload_time_iso_8601": "2019-10-24T20:13:59.542779Z", "url": "https://files.pythonhosted.org/packages/bf/5b/643c49972ca227dc87227dcd89fdbf24e64b370b927bd30bdd7032cabb1d/fastapi-login-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "d5409dba80373b4476524071a40c5f23", "sha256": "9ca0e9758c50682e3f2fe110dc02c439c9b6552861513191fc4678f68aa102ee"}, "downloads": -1, "filename": "fastapi_login-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d5409dba80373b4476524071a40c5f23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8568, "upload_time": "2019-10-24T20:13:58", "upload_time_iso_8601": "2019-10-24T20:13:58.244003Z", "url": "https://files.pythonhosted.org/packages/12/ed/712b9bf67ecddf2485c7092bc18c9119581e8f1463e51f618f3a7fb16819/fastapi_login-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5de92ba3211efd3694c1f8e1924d8da1", "sha256": "8941612b4eff60bdb7cc9372ff8efc315b62d7824888c8b69cf4df0245ff2667"}, "downloads": -1, "filename": "fastapi-login-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5de92ba3211efd3694c1f8e1924d8da1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6668, "upload_time": "2019-10-24T20:14:00", "upload_time_iso_8601": "2019-10-24T20:14:00.770961Z", "url": "https://files.pythonhosted.org/packages/59/f8/06f0bea28f90a44195522439bfaaaf9ec01677b9767f17a4e4d655d21968/fastapi-login-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "4d473f0a4a78121ac2fe45b7cde4fffb", "sha256": "f566ff249a5f1824f351d4e0135edff8d82670114d79a1ae34d3943bc7f6fffb"}, "downloads": -1, "filename": "fastapi_login-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4d473f0a4a78121ac2fe45b7cde4fffb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8042, "upload_time": "2019-10-24T20:15:55", "upload_time_iso_8601": "2019-10-24T20:15:55.119205Z", "url": "https://files.pythonhosted.org/packages/d2/f7/9d3340ed257ccb31f3ef144d11af17e7939722d6a8b0beb287e1601a0994/fastapi_login-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9419d7b2b5a697735039053ed7ab4c9", "sha256": "25fe75d67e24075b0a4e53af940d49bf6079d97e7eaeea8fbf63d678747382c2"}, "downloads": -1, "filename": "fastapi-login-1.0.3.tar.gz", "has_sig": false, "md5_digest": "a9419d7b2b5a697735039053ed7ab4c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6239, "upload_time": "2019-10-24T20:15:57", "upload_time_iso_8601": "2019-10-24T20:15:57.954800Z", "url": "https://files.pythonhosted.org/packages/83/1d/69a79f5f857f1bcc05f239001c0299e73352e267372bccefccbf4b5f2104/fastapi-login-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "1a24530d3bc4fa879908e78186d56586", "sha256": "30e6999a3d0130dfbd33edeadfa9325fc886bf8ac5b4af5d6562e00a3d13568b"}, "downloads": -1, "filename": "fastapi_login-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1a24530d3bc4fa879908e78186d56586", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8889, "upload_time": "2019-10-27T14:14:59", "upload_time_iso_8601": "2019-10-27T14:14:59.275731Z", "url": "https://files.pythonhosted.org/packages/de/a0/a283a946d5c29d9bbdccab67605f73f9d397555018acbf4c58b6ab253936/fastapi_login-1.0.4-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4f2617d96a0a91307d1a85e3cd5b4e1d", "sha256": "712a90c527673ffd4f179ca39ccfdadd6f14d2b50f28f8dd4981ff8c3c0184ae"}, "downloads": -1, "filename": "fastapi_login-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4f2617d96a0a91307d1a85e3cd5b4e1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8815, "upload_time": "2019-11-06T16:16:31", "upload_time_iso_8601": "2019-11-06T16:16:31.918056Z", "url": "https://files.pythonhosted.org/packages/28/d9/86e9324c105000ee035f7443caf2b2f6b55ad64f6ac857b97e440cc26c69/fastapi_login-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b59d21e9e459ada73f5c01e2815cc530", "sha256": "233c7b6624dbddf7610fafb8b2e15fc916adf2578134e2f402cba09fecfb2504"}, "downloads": -1, "filename": "fastapi-login-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b59d21e9e459ada73f5c01e2815cc530", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6099, "upload_time": "2019-11-06T16:16:33", "upload_time_iso_8601": "2019-11-06T16:16:33.432405Z", "url": "https://files.pythonhosted.org/packages/9f/c4/bc0f92a4db188353e928636be1dc2e86caa548ce84b53506fefc144d3c57/fastapi-login-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "f163d0e028bb993c9e39f3751dce1ec0", "sha256": "2502a6b5bd015b11bbc0f100c50cf5f73660ddecf08887c95b411af16f421b21"}, "downloads": -1, "filename": "fastapi_login-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f163d0e028bb993c9e39f3751dce1ec0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9140, "upload_time": "2020-01-10T21:40:30", "upload_time_iso_8601": "2020-01-10T21:40:30.953108Z", "url": "https://files.pythonhosted.org/packages/c8/c3/5bd753f367ea77499680b3af96326f4840b419f4165e11ab74247a501aa8/fastapi_login-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57b80a33c5ed2347a2951ddf54bb4e34", "sha256": "c5ae14d1bcd8d76708b9c91eeba82d5bb621ac6256e391769ab148a1abc5cfc4"}, "downloads": -1, "filename": "fastapi-login-1.2.0.tar.gz", "has_sig": false, "md5_digest": "57b80a33c5ed2347a2951ddf54bb4e34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6414, "upload_time": "2020-01-10T21:40:32", "upload_time_iso_8601": "2020-01-10T21:40:32.238435Z", "url": "https://files.pythonhosted.org/packages/0d/ce/f77901676a6a28a6acf5139a2490da678cfce454dbb97e60cd2e6faad8fe/fastapi-login-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "532bcc1c177b375f8dd08e1c13c09d89", "sha256": "f8c1901a607ec38653a0a56fd231db319aec3b1c2c582564d7144f0a7b2224a5"}, "downloads": -1, "filename": "fastapi_login-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "532bcc1c177b375f8dd08e1c13c09d89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9137, "upload_time": "2020-01-10T21:42:59", "upload_time_iso_8601": "2020-01-10T21:42:59.092771Z", "url": "https://files.pythonhosted.org/packages/f6/36/8ea5c3ff6ce06c6da71014019dc73af9407c24c3ed0e9f858f14f7ba4b24/fastapi_login-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f819bcf0b61e80781e69bd78b8a7078", "sha256": "01554a119e07b6989575c8ad749791f64d7c74e96a74a3388ce7d245e249c1e5"}, "downloads": -1, "filename": "fastapi-login-1.2.1.tar.gz", "has_sig": false, "md5_digest": "6f819bcf0b61e80781e69bd78b8a7078", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6411, "upload_time": "2020-01-10T21:43:00", "upload_time_iso_8601": "2020-01-10T21:43:00.329182Z", "url": "https://files.pythonhosted.org/packages/66/cf/d362bd1acb796b5a7f09dc4b34582bf8191173ba38bb7399a242fe04f9d4/fastapi-login-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "44ed336cb41d6e50c2c24b8340b8f061", "sha256": "c9594ed75b6e762ab57e769daab882404df7d75e50e9235e19d13da37607d7b2"}, "downloads": -1, "filename": "fastapi_login-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "44ed336cb41d6e50c2c24b8340b8f061", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7961, "upload_time": "2020-04-06T08:38:53", "upload_time_iso_8601": "2020-04-06T08:38:53.177264Z", "url": "https://files.pythonhosted.org/packages/7d/ea/ab90871a681783f3f8f4e1ed4510846496d60cb30b2e7d26cd13ef8ade16/fastapi_login-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55049db90199578f362ee4d74a219124", "sha256": "9a3aafa4fdaffaa0d5c34441e30b54d1b2393a2b0f33b02a4391b2d7447f8504"}, "downloads": -1, "filename": "fastapi-login-1.2.2.tar.gz", "has_sig": false, "md5_digest": "55049db90199578f362ee4d74a219124", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5713, "upload_time": "2020-04-06T08:38:54", "upload_time_iso_8601": "2020-04-06T08:38:54.680627Z", "url": "https://files.pythonhosted.org/packages/2e/5a/fecdc518e6be87949077c4fcbd9a58eb5505b7591d92018e14e2ff7f4935/fastapi-login-1.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44ed336cb41d6e50c2c24b8340b8f061", "sha256": "c9594ed75b6e762ab57e769daab882404df7d75e50e9235e19d13da37607d7b2"}, "downloads": -1, "filename": "fastapi_login-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "44ed336cb41d6e50c2c24b8340b8f061", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7961, "upload_time": "2020-04-06T08:38:53", "upload_time_iso_8601": "2020-04-06T08:38:53.177264Z", "url": "https://files.pythonhosted.org/packages/7d/ea/ab90871a681783f3f8f4e1ed4510846496d60cb30b2e7d26cd13ef8ade16/fastapi_login-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55049db90199578f362ee4d74a219124", "sha256": "9a3aafa4fdaffaa0d5c34441e30b54d1b2393a2b0f33b02a4391b2d7447f8504"}, "downloads": -1, "filename": "fastapi-login-1.2.2.tar.gz", "has_sig": false, "md5_digest": "55049db90199578f362ee4d74a219124", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5713, "upload_time": "2020-04-06T08:38:54", "upload_time_iso_8601": "2020-04-06T08:38:54.680627Z", "url": "https://files.pythonhosted.org/packages/2e/5a/fecdc518e6be87949077c4fcbd9a58eb5505b7591d92018e14e2ff7f4935/fastapi-login-1.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:40 2020"}