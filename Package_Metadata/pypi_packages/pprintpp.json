{"info": {"author": "David Wolever", "author_email": "david@wolever.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: Utilities"], "description": "``pprint++``: a drop-in replacement for ``pprint`` that's actually pretty\n=========================================================================\n\n.. image:: https://travis-ci.org/wolever/pprintpp.svg?branch=master\n    :target: https://travis-ci.org/wolever/pprintpp\n\nNow with Python 3 support!\n\nInstallation\n------------\n\n\n``pprint++`` can be installed with Python 2 or Python 3 using ``pip`` or\n``easy_install``::\n\n    $ pip install pprintpp\n    - OR -\n    $ easy_install pprintpp\n\nUsage\n-----\n\n``pprint++`` can be used in three ways:\n\n1. Through the separate ``pp`` package::\n\n    $ pip install pp-ez\n    $ python\n    ...\n    >>> import pp\n    >>> pp([\"Hello\", \"world\"])\n    [\"Hello\", \"world\"]\n\n   For more, see https://pypi.python.org/pypi/pp-ez\n\n2. As a command-line program, which will read Python literals from standard in\n   and pretty-print them::\n\n    $ echo \"{'hello': 'world'}\" | pypprint\n    {'hello': 'world'}\n\n3. As an `ipython <https://github.com/ipython/ipython>`_ extension::\n\n    In [1]: %load_ext pprintpp\n   \n   This will use pprintpp for ipython's output.\n   \n   To load this extension when ipython starts, put the previous line in your `startup file <https://ipython.org/ipython-doc/1/config/overview.html#startup-files>`_.\n   \n   You can change the indentation level like so::\n    \n    In [2]: %config PPrintPP.indentation = 4 \n\n4. To monkeypatch ``pprint``::\n\n    >>> import pprintpp\n    >>> pprintpp.monkeypatch()\n    >>> import pprint\n    >>> pprint.pprint(...)\n\n   Note: the original ``pprint`` module will be available with ``import\n   pprint_original``. Additionally, a warning will be issued if ``pprint`` has\n   already been imported. This can be suppressed by passing ``quiet=True``.\n\n5. And, if you *really* want, it can even be imported as a regular module:\n\n   >>> import pprintpp\n   >>> pprintpp.pprint(...)\n\n\nUsability Protips\n-----------------\n\n``pp``\n~~~~~~\n\nFor bonus code aesthetics, ``pprintpp.pprint`` can be imported as ``pp``:\n\n.. code:: pycon\n\n    >>> from pprintpp import pprint as pp\n    >>> pp(...)\n\nAnd if that is just too many letters, the ``pp-ez`` package can be installed\nfrom PyPI, ensuring that pretty-printing is never more than an ``import pp``\naway::\n\n    $ pip install pp-ez\n    $ python\n    ...\n    >>> import pp\n    >>> pp([\"Hello\", \"world\"])\n    [\"Hello\", \"world\"]\n\nFor more, see https://pypi.python.org/pypi/pp-ez\n\n\nWhy is it prettier?\n-------------------\n\nUnlike ``pprint``, ``pprint++`` strives to emit a readable, largely\nPEP8-compliant, representation of its input.\n\nIt also has explicit support for: the ``collections`` module (``defaultdict``\nand ``Counter``) and ``numpy`` arrays:\n\n.. code:: pycon\n\n    >>> import numpy as np\n    >>> from collections import defaultdict, Counter\n    >>> pprint([np.array([[1,2],[3,4]]), defaultdict(int, {\"foo\": 1}), Counter(\"aaabbc\")])\n    [\n        array([[1, 2],\n               [3, 4]]),\n        defaultdict(<type 'int'>, {'foo': 1}),\n        Counter({'a': 3, 'b': 2, 'c': 1}),\n    ]\n\nUnicode characters, when possible, will be printed un-escaped. This is done by\nchecking both the output stream's encoding (defaulting to ``utf-8``) and the\ncharacter's Unicode category. An effort is made to print only characters which\nwill be visually unambiguous: letters and numbers will be printed un-escaped,\nspaces, combining characters, and control characters will be escaped:\n\n.. code:: pycon\n\n    >>> unistr = u\"\\xe9e\\u0301\"\n    >>> print unistr\n    \u00e9\u00e9\n    >>> pprint(unistr)\n    u'\u00e9e\\u0301'\n\nThe output stream's encoding will be considered too:\n\n.. code:: pycon\n\n    >>> import io\n    >>> stream = io.BytesIO()\n    >>> stream.encoding = \"ascii\"\n    >>> pprint(unistr, stream=stream)\n    >>> print stream.getvalue()\n    u'\\xe9e\\u0301'\n\nSubclassess of built-in collection types which don't define a new ``__repr__``\nwill have their class name explicitly added to their repr. For example:\n\n.. code:: pycon\n\n    >>> class MyList(list):\n    ...     pass\n    ...\n    >>> pprint(MyList())\n    MyList()\n    >>> pprint(MyList([1, 2, 3]))\n    MyList([1, 2, 3])\n\nNote that, as you might expect, custom ``__repr__`` methods will be respected:\n\n.. code:: pycon\n\n    >>> class MyList(list):\n    ...     def __repr__(self):\n    ...         return \"custom repr!\"\n    ...\n    >>> pprint(MyList())\n    custom repr!\n\n**Note**: ``pprint++`` is still under development, so the format *will* change\nand improve over time.\n\nExample\n~~~~~~~\n\nWith ``printpp``:\n\n.. code:: pycon\n\n    >>> import pprintpp\n    >>> pprintpp.pprint([\"Hello\", np.array([[1,2],[3,4]])])\n    [\n        'Hello',\n        array([[1, 2],\n               [3, 4]]),\n    ]\n    >>> pprintpp.pprint(tweet)\n    {\n        'coordinates': None,\n        'created_at': 'Mon Jun 27 19:32:19 +0000 2011',\n        'entities': {\n            'hashtags': [],\n            'urls': [\n                {\n                    'display_url': 'tumblr.com/xnr37hf0yz',\n                    'expanded_url': 'http://tumblr.com/xnr37hf0yz',\n                    'indices': [107, 126],\n                    'url': 'http://t.co/cCIWIwg',\n                },\n            ],\n            'user_mentions': [],\n        },\n        'place': None,\n        'source': '<a href=\"http://www.tumblr.com/\" rel=\"nofollow\">Tumblr</a>',\n        'truncated': False,\n        'user': {\n            'contributors_enabled': True,\n            'default_profile': False,\n            'entities': {'hashtags': [], 'urls': [], 'user_mentions': []},\n            'favourites_count': 20,\n            'id_str': '6253282',\n            'profile_link_color': '0094C2',\n        },\n    }\n\nWithout ``printpp``::\n\n    >>> import pprint\n    >>> import numpy as np\n    >>> pprint.pprint([\"Hello\", np.array([[1,2],[3,4]])])\n    ['Hello', array([[1, 2],\n           [3, 4]])]\n    >>> tweet = {'coordinates': None, 'created_at': 'Mon Jun 27 19:32:19 +0000 2011', 'entities': {'hashtags': [], 'urls': [{'display_url': 'tumblr.com/xnr37hf0yz', 'expanded_url': 'http://tumblr.com/xnr37hf0yz', 'indices': [107, 126], 'url': 'http://t.co/cCIWIwg'}], 'user_mentions': []}, 'place': None, 'source': '<a href=\"http://www.tumblr.com/\" rel=\"nofollow\">Tumblr</a>', 'truncated': False, 'user': {'contributors_enabled': True, 'default_profile': False, 'entities': {'hashtags': [], 'urls': [], 'user_mentions': []}, 'favourites_count': 20, 'id_str': '6253282', 'profile_link_color': '0094C2'}} \n    >>> pprint.pprint(tweet)\n    {'coordinates': None,\n     'created_at': 'Mon Jun 27 19:32:19 +0000 2011',\n     'entities': {'hashtags': [],\n                  'urls': [{'display_url': 'tumblr.com/xnr37hf0yz',\n                            'expanded_url': 'http://tumblr.com/xnr37hf0yz',\n                            'indices': [107, 126],\n                            'url': 'http://t.co/cCIWIwg'}],\n                  'user_mentions': []},\n     'place': None,\n     'source': '<a href=\"http://www.tumblr.com/\" rel=\"nofollow\">Tumblr</a>',\n     'truncated': False,\n     'user': {'contributors_enabled': True,\n              'default_profile': False,\n              'entities': {'hashtags': [], 'urls': [], 'user_mentions': []},\n              'favourites_count': 20,\n              'id_str': '6253282',\n              'profile_link_color': '0094C2'}}\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wolever/pprintpp", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pprintpp", "package_url": "https://pypi.org/project/pprintpp/", "platform": "", "project_url": "https://pypi.org/project/pprintpp/", "project_urls": {"Homepage": "https://github.com/wolever/pprintpp"}, "release_url": "https://pypi.org/project/pprintpp/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "A drop-in replacement for pprint that's actually pretty", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/wolever/pprintpp\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/wolever/pprintpp.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8b94bcde16413c346fec541656e303fa8e29e67/68747470733a2f2f7472617669732d63692e6f72672f776f6c657665722f707072696e7470702e7376673f6272616e63683d6d6173746572\"></a>\n<p>Now with Python 3 support!</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pprint++</tt> can be installed with Python 2 or Python 3 using <tt>pip</tt> or\n<tt>easy_install</tt>:</p>\n<pre>$ pip install pprintpp\n- OR -\n$ easy_install pprintpp\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>pprint++</tt> can be used in three ways:</p>\n<ol>\n<li><p>Through the separate <tt>pp</tt> package:</p>\n<pre>$ pip install pp-ez\n$ python\n...\n&gt;&gt;&gt; import pp\n&gt;&gt;&gt; pp([\"Hello\", \"world\"])\n[\"Hello\", \"world\"]\n</pre>\n<p>For more, see <a href=\"https://pypi.python.org/pypi/pp-ez\" rel=\"nofollow\">https://pypi.python.org/pypi/pp-ez</a></p>\n</li>\n<li><p>As a command-line program, which will read Python literals from standard in\nand pretty-print them:</p>\n<pre>$ echo \"{'hello': 'world'}\" | pypprint\n{'hello': 'world'}\n</pre>\n</li>\n<li><p>As an <a href=\"https://github.com/ipython/ipython\" rel=\"nofollow\">ipython</a> extension:</p>\n<pre>In [1]: %load_ext pprintpp\n</pre>\n<p>This will use pprintpp for ipython\u2019s output.</p>\n<p>To load this extension when ipython starts, put the previous line in your <a href=\"https://ipython.org/ipython-doc/1/config/overview.html#startup-files\" rel=\"nofollow\">startup file</a>.</p>\n<p>You can change the indentation level like so:</p>\n<pre>In [2]: %config PPrintPP.indentation = 4\n</pre>\n</li>\n<li><p>To monkeypatch <tt>pprint</tt>:</p>\n<pre>&gt;&gt;&gt; import pprintpp\n&gt;&gt;&gt; pprintpp.monkeypatch()\n&gt;&gt;&gt; import pprint\n&gt;&gt;&gt; pprint.pprint(...)\n</pre>\n<p>Note: the original <tt>pprint</tt> module will be available with <tt>import\npprint_original</tt>. Additionally, a warning will be issued if <tt>pprint</tt> has\nalready been imported. This can be suppressed by passing <tt>quiet=True</tt>.</p>\n</li>\n<li><p>And, if you <em>really</em> want, it can even be imported as a regular module:</p>\n<pre>&gt;&gt;&gt; import pprintpp\n&gt;&gt;&gt; pprintpp.pprint(...)\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"usability-protips\">\n<h2>Usability Protips</h2>\n<h2 id=\"pp\"><span class=\"section-subtitle\"><tt>pp</tt></span></h2>\n<p>For bonus code aesthetics, <tt>pprintpp.pprint</tt> can be imported as <tt>pp</tt>:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pprintpp</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span> <span class=\"k\">as</span> <span class=\"n\">pp</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pp</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<p>And if that is just too many letters, the <tt><span class=\"pre\">pp-ez</span></tt> package can be installed\nfrom PyPI, ensuring that pretty-printing is never more than an <tt>import pp</tt>\naway:</p>\n<pre>$ pip install pp-ez\n$ python\n...\n&gt;&gt;&gt; import pp\n&gt;&gt;&gt; pp([\"Hello\", \"world\"])\n[\"Hello\", \"world\"]\n</pre>\n<p>For more, see <a href=\"https://pypi.python.org/pypi/pp-ez\" rel=\"nofollow\">https://pypi.python.org/pypi/pp-ez</a></p>\n</div>\n<div id=\"why-is-it-prettier\">\n<h2>Why is it prettier?</h2>\n<p>Unlike <tt>pprint</tt>, <tt>pprint++</tt> strives to emit a readable, largely\nPEP8-compliant, representation of its input.</p>\n<p>It also has explicit support for: the <tt>collections</tt> module (<tt>defaultdict</tt>\nand <tt>Counter</tt>) and <tt>numpy</tt> arrays:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdict</span><span class=\"p\">,</span> <span class=\"n\">Counter</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">([</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]]),</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}),</span> <span class=\"n\">Counter</span><span class=\"p\">(</span><span class=\"s2\">\"aaabbc\"</span><span class=\"p\">)])</span>\n<span class=\"go\">[\n    array([[1, 2],\n           [3, 4]]),\n    defaultdict(&lt;type 'int'&gt;, {'foo': 1}),\n    Counter({'a': 3, 'b': 2, 'c': 1}),\n]</span>\n</pre>\n<p>Unicode characters, when possible, will be printed un-escaped. This is done by\nchecking both the output stream\u2019s encoding (defaulting to <tt><span class=\"pre\">utf-8</span></tt>) and the\ncharacter\u2019s Unicode category. An effort is made to print only characters which\nwill be visually unambiguous: letters and numbers will be printed un-escaped,\nspaces, combining characters, and control characters will be escaped:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">unistr</span> <span class=\"o\">=</span> <span class=\"sa\">u</span><span class=\"s2\">\"</span><span class=\"se\">\\xe9</span><span class=\"s2\">e</span><span class=\"se\">\\u0301</span><span class=\"s2\">\"</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span> <span class=\"n\">unistr</span>\n<span class=\"go\">\u00e9\u00e9\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">unistr</span><span class=\"p\">)</span>\n<span class=\"go\">u'\u00e9e\\u0301'</span>\n</pre>\n<p>The output stream\u2019s encoding will be considered too:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">BytesIO</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">encoding</span> <span class=\"o\">=</span> <span class=\"s2\">\"ascii\"</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">unistr</span><span class=\"p\">,</span> <span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">stream</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span> <span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">getvalue</span><span class=\"p\">()</span>\n<span class=\"go\">u'\\xe9e\\u0301'</span>\n</pre>\n<p>Subclassess of built-in collection types which don\u2019t define a new <tt>__repr__</tt>\nwill have their class name explicitly added to their repr. For example:</p>\n<pre><span class=\"k\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MyList</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">pass</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">MyList</span><span class=\"p\">())</span>\n<span class=\"go\">MyList()\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">MyList</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n<span class=\"go\">MyList([1, 2, 3])</span>\n</pre>\n<p>Note that, as you might expect, custom <tt>__repr__</tt> methods will be respected:</p>\n<pre><span class=\"k\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">MyList</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"s2\">\"custom repr!\"</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">MyList</span><span class=\"p\">())</span>\n<span class=\"go\">custom repr!</span>\n</pre>\n<p><strong>Note</strong>: <tt>pprint++</tt> is still under development, so the format <em>will</em> change\nand improve over time.</p>\n<div id=\"example\">\n<h3>Example</h3>\n<p>With <tt>printpp</tt>:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">pprintpp</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprintpp</span><span class=\"o\">.</span><span class=\"n\">pprint</span><span class=\"p\">([</span><span class=\"s2\">\"Hello\"</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">],[</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]])])</span>\n<span class=\"go\">[\n    'Hello',\n    array([[1, 2],\n           [3, 4]]),\n]\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprintpp</span><span class=\"o\">.</span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">tweet</span><span class=\"p\">)</span>\n<span class=\"go\">{\n    'coordinates': None,\n    'created_at': 'Mon Jun 27 19:32:19 +0000 2011',\n    'entities': {\n        'hashtags': [],\n        'urls': [\n            {\n                'display_url': 'tumblr.com/xnr37hf0yz',\n                'expanded_url': 'http://tumblr.com/xnr37hf0yz',\n                'indices': [107, 126],\n                'url': 'http://t.co/cCIWIwg',\n            },\n        ],\n        'user_mentions': [],\n    },\n    'place': None,\n    'source': '&lt;a href=\"http://www.tumblr.com/\" rel=\"nofollow\"&gt;Tumblr&lt;/a&gt;',\n    'truncated': False,\n    'user': {\n        'contributors_enabled': True,\n        'default_profile': False,\n        'entities': {'hashtags': [], 'urls': [], 'user_mentions': []},\n        'favourites_count': 20,\n        'id_str': '6253282',\n        'profile_link_color': '0094C2',\n    },\n}</span>\n</pre>\n<p>Without <tt>printpp</tt>:</p>\n<pre>&gt;&gt;&gt; import pprint\n&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; pprint.pprint([\"Hello\", np.array([[1,2],[3,4]])])\n['Hello', array([[1, 2],\n       [3, 4]])]\n&gt;&gt;&gt; tweet = {'coordinates': None, 'created_at': 'Mon Jun 27 19:32:19 +0000 2011', 'entities': {'hashtags': [], 'urls': [{'display_url': 'tumblr.com/xnr37hf0yz', 'expanded_url': 'http://tumblr.com/xnr37hf0yz', 'indices': [107, 126], 'url': 'http://t.co/cCIWIwg'}], 'user_mentions': []}, 'place': None, 'source': '&lt;a href=\"http://www.tumblr.com/\" rel=\"nofollow\"&gt;Tumblr&lt;/a&gt;', 'truncated': False, 'user': {'contributors_enabled': True, 'default_profile': False, 'entities': {'hashtags': [], 'urls': [], 'user_mentions': []}, 'favourites_count': 20, 'id_str': '6253282', 'profile_link_color': '0094C2'}}\n&gt;&gt;&gt; pprint.pprint(tweet)\n{'coordinates': None,\n 'created_at': 'Mon Jun 27 19:32:19 +0000 2011',\n 'entities': {'hashtags': [],\n              'urls': [{'display_url': 'tumblr.com/xnr37hf0yz',\n                        'expanded_url': 'http://tumblr.com/xnr37hf0yz',\n                        'indices': [107, 126],\n                        'url': 'http://t.co/cCIWIwg'}],\n              'user_mentions': []},\n 'place': None,\n 'source': '&lt;a href=\"http://www.tumblr.com/\" rel=\"nofollow\"&gt;Tumblr&lt;/a&gt;',\n 'truncated': False,\n 'user': {'contributors_enabled': True,\n          'default_profile': False,\n          'entities': {'hashtags': [], 'urls': [], 'user_mentions': []},\n          'favourites_count': 20,\n          'id_str': '6253282',\n          'profile_link_color': '0094C2'}}\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4019316, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a00491837deeb15521d5d3a4a1d83cbf", "sha256": "94e89dd2bc2236bcf9250fbd6116636072a183f404ff1eb1b81df7c5316bd529"}, "downloads": -1, "filename": "pprintpp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a00491837deeb15521d5d3a4a1d83cbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5710, "upload_time": "2014-03-30T22:10:36", "upload_time_iso_8601": "2014-03-30T22:10:36.546326Z", "url": "https://files.pythonhosted.org/packages/4e/4b/256ce654da70ee307c7234ea017ae869cfe4916002b74c3c2c9ab38e84f6/pprintpp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c2e4991e164f6790c5e8065403cdc8fa", "sha256": "c4af74be80329c431a5d67b0e5e1537a1bb92ced42dacbdbb1bb56dab4d6cbdd"}, "downloads": -1, "filename": "pprintpp-0.1.1-py27-none-any.whl", "has_sig": false, "md5_digest": "c2e4991e164f6790c5e8065403cdc8fa", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8263, "upload_time": "2014-03-30T22:57:07", "upload_time_iso_8601": "2014-03-30T22:57:07.641972Z", "url": "https://files.pythonhosted.org/packages/c3/50/fa362aa3ead369a6c162a6f14e168467772b355b16453f5b7c65f10dd544/pprintpp-0.1.1-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "593b8a1ccea610c8ed340ce7405816ec", "sha256": "80f7c4eb3dead3ddd10b3b326fb3be1b752ecef13ac986f0672b49f062f3f28e"}, "downloads": -1, "filename": "pprintpp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "593b8a1ccea610c8ed340ce7405816ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5917, "upload_time": "2014-03-30T22:55:20", "upload_time_iso_8601": "2014-03-30T22:55:20.351180Z", "url": "https://files.pythonhosted.org/packages/97/04/ce6cfed3243957c43ecd77c3480fd3b3b00a93a5b83f9c32325ef123fc22/pprintpp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8543033ad45cdbefb15aed26841767be", "sha256": "7f3c97cd3272f28c11825d90d8701d3988f021070c2b3a479eb6d2efdc1c4f15"}, "downloads": -1, "filename": "pprintpp-0.1.2-py27-none-any.whl", "has_sig": false, "md5_digest": "8543033ad45cdbefb15aed26841767be", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8339, "upload_time": "2014-03-31T17:43:19", "upload_time_iso_8601": "2014-03-31T17:43:19.407125Z", "url": "https://files.pythonhosted.org/packages/bb/25/e50ae11ea121cc379db4a16c907eb47de4bdf5d44df96ada5fad8ee56035/pprintpp-0.1.2-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ea9ec7024f50b7bf2424e47aed0e51c", "sha256": "f2d2860cd2af614177ec8f0ae6407a53fa572b2f0bf046cc3ea8afb838a277c8"}, "downloads": -1, "filename": "pprintpp-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3ea9ec7024f50b7bf2424e47aed0e51c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5987, "upload_time": "2014-03-31T17:43:16", "upload_time_iso_8601": "2014-03-31T17:43:16.794163Z", "url": "https://files.pythonhosted.org/packages/cd/18/e21c38236ebd1037a6e71f8f62f228ed177e65c5d8634141372b9b3272c1/pprintpp-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7720a00aeb6475f56f3d15051753c2a7", "sha256": "6a401c3925e7c4413dad26269b1668e7588c88a2610d95fabecaf57640eb1504"}, "downloads": -1, "filename": "pprintpp-0.1.3-py27-none-any.whl", "has_sig": false, "md5_digest": "7720a00aeb6475f56f3d15051753c2a7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10779, "upload_time": "2014-04-03T17:04:12", "upload_time_iso_8601": "2014-04-03T17:04:12.237958Z", "url": "https://files.pythonhosted.org/packages/e6/37/d0ee36e400160c58493fa7144037407d86eab215f15fcd6fabd803e8cf5e/pprintpp-0.1.3-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98dd5d69e1707e5c1e888d4f4e21bef5", "sha256": "9c146e42f67a83aa7da84a15e45e88b28e5b552eb7afebee51c397cd2aca8c8a"}, "downloads": -1, "filename": "pprintpp-0.1.3.tar.gz", "has_sig": false, "md5_digest": "98dd5d69e1707e5c1e888d4f4e21bef5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7999, "upload_time": "2014-04-03T17:04:09", "upload_time_iso_8601": "2014-04-03T17:04:09.348584Z", "url": "https://files.pythonhosted.org/packages/c7/e8/5fd3a7cca0b4ae3d5c675e67b04fc0cec21f1f7b7b6ccecf6cc9f9bb8f9e/pprintpp-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "95188584aa9500a6d963c0b497e4b2c5", "sha256": "33ae76863786c365063b6a551670b74262527339a0ce353a52bc3efd5945779e"}, "downloads": -1, "filename": "pprintpp-0.2.0-py27-none-any.whl", "has_sig": false, "md5_digest": "95188584aa9500a6d963c0b497e4b2c5", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11587, "upload_time": "2014-04-22T17:22:22", "upload_time_iso_8601": "2014-04-22T17:22:22.017099Z", "url": "https://files.pythonhosted.org/packages/7e/df/1a4eedd177889971f34900fbd281407dedf4e0580e9c30405f05bfb38bc6/pprintpp-0.2.0-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2858224454f256dd3007524c164a73b7", "sha256": "166f979ab92e87c1475da9cee2c24d6cd041761f239dffeae2b891e9e439fd4c"}, "downloads": -1, "filename": "pprintpp-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2858224454f256dd3007524c164a73b7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11207, "upload_time": "2014-04-22T17:24:16", "upload_time_iso_8601": "2014-04-22T17:24:16.371321Z", "url": "https://files.pythonhosted.org/packages/be/34/12897e513e13636600d0027e7034100f674964436560ca75b73e0fad2ba9/pprintpp-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dda04cbeb6fa57ec3f477352ed3b8100", "sha256": "7864a692a902a980a69cb4ebd9d5fbeb57ee765787685dbc186f527f08b30586"}, "downloads": -1, "filename": "pprintpp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "dda04cbeb6fa57ec3f477352ed3b8100", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8624, "upload_time": "2014-04-22T17:22:18", "upload_time_iso_8601": "2014-04-22T17:22:18.931799Z", "url": "https://files.pythonhosted.org/packages/1d/7c/970f82359a284789590eeaf6010211b18acbe64fdd0aa009b3257b138eac/pprintpp-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "130f31debd1077e8387fcff0133e7523", "sha256": "0ddfc719fdf805e57819097ecdcff348f011e7082ff5193a99154649bb248e68"}, "downloads": -1, "filename": "pprintpp-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "130f31debd1077e8387fcff0133e7523", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11217, "upload_time": "2014-04-22T19:07:47", "upload_time_iso_8601": "2014-04-22T19:07:47.076627Z", "url": "https://files.pythonhosted.org/packages/76/22/d8f7a8c74f888df471acb0a747332526414b4919ec58aa01e2d2ea6f7c58/pprintpp-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af3259dd9b20f87a743b1a806d35e303", "sha256": "a90b9abfe73736c40d904205522eb3814f0b1159081dcbd1bffabf9c1fcc7119"}, "downloads": -1, "filename": "pprintpp-0.2.1.tar.gz", "has_sig": false, "md5_digest": "af3259dd9b20f87a743b1a806d35e303", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8699, "upload_time": "2014-04-22T19:07:45", "upload_time_iso_8601": "2014-04-22T19:07:45.396778Z", "url": "https://files.pythonhosted.org/packages/c9/76/b070f77aa9dac675b5fa0a43a03cfd44e4d1e42878b8693fd95c83295e63/pprintpp-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "720404b522c77276d0980635a5463a6d", "sha256": "e6d090de0597d564493728dd9d5a84c75467dd1d948595f2be52db96e133a1b7"}, "downloads": -1, "filename": "pprintpp-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "720404b522c77276d0980635a5463a6d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11236, "upload_time": "2015-05-14T18:44:39", "upload_time_iso_8601": "2015-05-14T18:44:39.705239Z", "url": "https://files.pythonhosted.org/packages/b1/dc/ff0087bd325c2541b1fba49d21a61fb5a9ed3c881401ce01cbbebbcf86a1/pprintpp-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50182a3d73bf1dbeac4e015ec0a9e92f", "sha256": "37d79245034d5894a8fddda947e67bddf189d6905ef3a7d5453ece02ca059929"}, "downloads": -1, "filename": "pprintpp-0.2.2.tar.gz", "has_sig": false, "md5_digest": "50182a3d73bf1dbeac4e015ec0a9e92f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3843, "upload_time": "2015-05-14T18:44:35", "upload_time_iso_8601": "2015-05-14T18:44:35.853852Z", "url": "https://files.pythonhosted.org/packages/de/f4/27f2bb6899773af71b08572b6d8cbf03f3d0bf8ff6c100a8ba22e8dff8fa/pprintpp-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b0f0596e5d41436377e905d5abf26370", "sha256": "e40fd928d12d081201973f22ad88a1458fb8654191845f8fc7675c7a399d01d0"}, "downloads": -1, "filename": "pprintpp-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b0f0596e5d41436377e905d5abf26370", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 17902, "upload_time": "2015-06-01T15:56:38", "upload_time_iso_8601": "2015-06-01T15:56:38.847244Z", "url": "https://files.pythonhosted.org/packages/ab/4f/6731cb2225fbffe9c6b225e7021efba7998864eee4bce5f7552dfb80427c/pprintpp-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "987326140e4cf697c85764a76d6d4f49", "sha256": "0e801107b4d506b69067b6a7da90d3f995cf933a4ad1ef79ce4c2986c9e00737"}, "downloads": -1, "filename": "pprintpp-0.2.3.tar.gz", "has_sig": false, "md5_digest": "987326140e4cf697c85764a76d6d4f49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11496, "upload_time": "2015-06-01T15:56:35", "upload_time_iso_8601": "2015-06-01T15:56:35.398812Z", "url": "https://files.pythonhosted.org/packages/0d/10/1dbbb60930a5f8f32550d1224614cc76fc19cf1d22ae8aaf3a4081119170/pprintpp-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2916010c36d0e50c5b52aef5681db260", "sha256": "7beb0a75214d19f66e89624401eaa4d18c4007d55740bf882bdb81956059dcdf"}, "downloads": -1, "filename": "pprintpp-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2916010c36d0e50c5b52aef5681db260", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 18736, "upload_time": "2016-11-30T04:00:33", "upload_time_iso_8601": "2016-11-30T04:00:33.952088Z", "url": "https://files.pythonhosted.org/packages/45/a1/0af15c87a93f04d281910985bb8da642d55d16ad4aee5e0e4cdce722b702/pprintpp-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68991505ffa751e25795d93b32413377", "sha256": "9fe5fe885f7cb5a1e95dedc4e89d8ef177110b3eda7cf07b6060e518cb2085c4"}, "downloads": -1, "filename": "pprintpp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "68991505ffa751e25795d93b32413377", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16880, "upload_time": "2016-11-30T04:00:31", "upload_time_iso_8601": "2016-11-30T04:00:31.275396Z", "url": "https://files.pythonhosted.org/packages/ff/97/820598ad16533bf9c5ec75af3f6f4678ba1c4b5d8ad7481c2cc6d2106e00/pprintpp-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "6c96b17612b15f7bd78fdb8cc498a6f9", "sha256": "b6b4dcdd0c0c0d75e4d7b2f21a9e933e5b2ce62b26e1a54537f9651ae5a5c01d"}, "downloads": -1, "filename": "pprintpp-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c96b17612b15f7bd78fdb8cc498a6f9", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16952, "upload_time": "2018-07-01T01:42:36", "upload_time_iso_8601": "2018-07-01T01:42:36.496104Z", "url": "https://files.pythonhosted.org/packages/4e/d1/e4ed95fdd3ef13b78630280d9e9e240aeb65cc7c544ec57106149c3942fb/pprintpp-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5b6a310c80986e38eaab9b9a978b966", "sha256": "ea826108e2c7f49dc6d66c752973c3fc9749142a798d6b254e1e301cfdbc6403"}, "downloads": -1, "filename": "pprintpp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b5b6a310c80986e38eaab9b9a978b966", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17995, "upload_time": "2018-07-01T01:42:34", "upload_time_iso_8601": "2018-07-01T01:42:34.870060Z", "url": "https://files.pythonhosted.org/packages/06/1a/7737e7a0774da3c3824d654993cf57adc915cb04660212f03406334d8c0b/pprintpp-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6c96b17612b15f7bd78fdb8cc498a6f9", "sha256": "b6b4dcdd0c0c0d75e4d7b2f21a9e933e5b2ce62b26e1a54537f9651ae5a5c01d"}, "downloads": -1, "filename": "pprintpp-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c96b17612b15f7bd78fdb8cc498a6f9", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16952, "upload_time": "2018-07-01T01:42:36", "upload_time_iso_8601": "2018-07-01T01:42:36.496104Z", "url": "https://files.pythonhosted.org/packages/4e/d1/e4ed95fdd3ef13b78630280d9e9e240aeb65cc7c544ec57106149c3942fb/pprintpp-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5b6a310c80986e38eaab9b9a978b966", "sha256": "ea826108e2c7f49dc6d66c752973c3fc9749142a798d6b254e1e301cfdbc6403"}, "downloads": -1, "filename": "pprintpp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b5b6a310c80986e38eaab9b9a978b966", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17995, "upload_time": "2018-07-01T01:42:34", "upload_time_iso_8601": "2018-07-01T01:42:34.870060Z", "url": "https://files.pythonhosted.org/packages/06/1a/7737e7a0774da3c3824d654993cf57adc915cb04660212f03406334d8c0b/pprintpp-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:25 2020"}