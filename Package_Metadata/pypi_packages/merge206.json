{"info": {"author": "Dylan Jay", "author_email": "software@pretaweb.com", "bugtrack_url": null, "classifiers": [], "description": "Merge206\n========\n\nSmall web log util which parses web logs such as apache or nginx and\nwill attempt to find 206 requests which are likely related to an\noriginal 200 or 206 request and aggregate them into a single request. It\ndoes this by fingerprinting a request to guess if it was from the same\nuser. The fingerprint is based on 'request\\_header\\_referer',\n'remote\\_user', 'request\\_header\\_user\\_agent', 'request\\_http\\_ver',\n'request\\_method', 'request\\_url', 'remote\\_host'.\n\nWARNING: The resulting log will likely be inaccurate. There is no way to\nknow that two 206 requests from the same IP, for the same url, with the\nsame user agent, come from the same user, or even the same user in two\ndifferent browser tabs. Also the same user might pause for a long time\nbefore playing again.\n\nAdjusting ``--delay`` argument can have a big effect on the total number\nof requests. If users typically pause videos for a long time, or take a\nlong time to flip pages in a in browser pdf viewer, then would would\nwant a long delay. However the longer the delay, the more chance of two\ndifferent users with the same fingerprint being wrongly merge into a\nsingle request.\n\n-  The combined request will be first request encountered except for the\n   response bytes which will be a total.\n-  The combined request will take the place of the last request to be\n   combined. This means that log data will not be output in\n   chronological order according to the timestamps\n\nUsage\n-----\n\n::\n\n    Usage:\n      merge206.py [-p PATTERN] [-d SECONDS] [-i FILE]\n\n    Options:\n      -i FILE, --input FILE             Logfile to read\n      -p PATTERN, --pattern PATTERN     Apache log format specification. see https://github.com/rory/apache-log-parser#supported-values\n      -d SECONDS, --delay SECONDS       The max time between 206 partial requests [default: 600]\n      -h --help                         Show this screen.\n      --version                         Show version.\n\nChanges\n-------\n\n1.1 (2017-6-8)\n~~~~~~~~~~~~~~\n\n-  Fixed a bug that meant 404 and other error codes got merged with 206\n-  Fixed some perforance issues\n-  Put in some tests\n\n1.0\n~~~\n\nInitial version\n\nKnown Issues\n------------\n\n-  Currently there is a bug that two 200 requests within the delay\n   perion will get merged.\n-  merged requests don't get output in chronological order.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/merge206", "keywords": "apache,nginx,log analyzer", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "merge206", "package_url": "https://pypi.org/project/merge206/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/merge206/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/merge206"}, "release_url": "https://pypi.org/project/merge206/1.1/", "requires_dist": null, "requires_python": null, "summary": "Web log util to arregate 206 requests", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Small web log util which parses web logs such as apache or nginx and\nwill attempt to find 206 requests which are likely related to an\noriginal 200 or 206 request and aggregate them into a single request. It\ndoes this by fingerprinting a request to guess if it was from the same\nuser. The fingerprint is based on \u2018request_header_referer\u2019,\n\u2018remote_user\u2019, \u2018request_header_user_agent\u2019, \u2018request_http_ver\u2019,\n\u2018request_method\u2019, \u2018request_url\u2019, \u2018remote_host\u2019.</p>\n<p>WARNING: The resulting log will likely be inaccurate. There is no way to\nknow that two 206 requests from the same IP, for the same url, with the\nsame user agent, come from the same user, or even the same user in two\ndifferent browser tabs. Also the same user might pause for a long time\nbefore playing again.</p>\n<p>Adjusting <tt><span class=\"pre\">--delay</span></tt> argument can have a big effect on the total number\nof requests. If users typically pause videos for a long time, or take a\nlong time to flip pages in a in browser pdf viewer, then would would\nwant a long delay. However the longer the delay, the more chance of two\ndifferent users with the same fingerprint being wrongly merge into a\nsingle request.</p>\n<ul>\n<li>The combined request will be first request encountered except for the\nresponse bytes which will be a total.</li>\n<li>The combined request will take the place of the last request to be\ncombined. This means that log data will not be output in\nchronological order according to the timestamps</li>\n</ul>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage:\n  merge206.py [-p PATTERN] [-d SECONDS] [-i FILE]\n\nOptions:\n  -i FILE, --input FILE             Logfile to read\n  -p PATTERN, --pattern PATTERN     Apache log format specification. see https://github.com/rory/apache-log-parser#supported-values\n  -d SECONDS, --delay SECONDS       The max time between 206 partial requests [default: 600]\n  -h --help                         Show this screen.\n  --version                         Show version.\n</pre>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>1.1 (2017-6-8)</h3>\n<ul>\n<li>Fixed a bug that meant 404 and other error codes got merged with 206</li>\n<li>Fixed some perforance issues</li>\n<li>Put in some tests</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0</h3>\n<p>Initial version</p>\n</div>\n</div>\n<div id=\"known-issues\">\n<h2>Known Issues</h2>\n<ul>\n<li>Currently there is a bug that two 200 requests within the delay\nperion will get merged.</li>\n<li>merged requests don\u2019t get output in chronological order.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4706136, "releases": {"1.1": []}, "urls": [], "timestamp": "Fri May  8 00:56:09 2020"}