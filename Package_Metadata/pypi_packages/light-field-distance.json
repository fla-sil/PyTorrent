{"info": {"author": "Kacper Kania", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: C", "Programming Language :: Python :: 3", "Topic :: Multimedia :: Graphics :: 3D Rendering", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Typing :: Typed"], "description": "\nLight Field Distance metric\n===========================\n\nOriginal repo: `link <https://github.com/Sunwinds/ShapeDescriptor>`_\n\nNote\n----\n\nThe code was converted to be able to use LFD metric (distance between two \ndescriptors) that will compare visual appearance between ground truth mesh and \nretrieved mesh.\n\nThis fork\n---------\n\nThe original repository was adapted partially to run on Linux. Only ``LightField`` \nwas changed so it can be used through docker without any dependency. Underneath,\nthe container uses OSMesa for headless rendering. \n\nRequirements\n------------\n\n\n* docker\n* ``pip install docker``\n\nInstallation\n------------\n\n.. code-block:: bash\n\n   pip install light-field-distance\n\nor \n\n.. code-block::\n\n   python setup.py install\n\nNo need to explicitly install anything.\n\nUsage\n-----\n\n.. code-block:: python\n\n   from lfd import get_light_field_distance\n\n   # rest of code\n   path_to_shape_1: str = ...\n   path_to_shape_2: str = ...\n\n   lfd_value: float = get_light_field_distance(path_to_shape_1, path_to_shape_2)\n\nThe script will calculate light field distances \n`[1] <http://www.cs.jhu.edu/~misha/Papers/Chen03.pdf>`_ between two shapes. \nExample usage:\n\n.. code-block:: python\n\n   from lfd import get_light_field_distance\n\n   # rest of code\n   path_to_shape_1 = \"examples/cup1.obj\"\n   path_to_shape_2 = \"examples/airplane.obj\"\n\n   lfd_value: float = get_light_field_distance(path_to_shape_1, path_to_shape_2)\n   print(lfd_value)\n\nThe lower the metric's value, the more similar shapes are in terms of the visual\nappearance\n\nHow does it work\n----------------\n\nThe ``lfd.py`` is a proxy for the container that install all the dependency necessary\nto run a C code. The code performs calculation of Zernike moments and other\ncoefficients that are necessary to calculate the distance (\\ ``3DAlignment`` program).\nThen, these coefficients are saved and run by the ``Distance`` program that calculated the\nLight Field Distance. It prints out the result and the stdout from the printing\nis handled by the python script.\n\nIf an image for the C code is not found, it builds one. The operation is performed\nonce and it takes a while to finish it. After that, the script runs the necessary \ncomputations transparently.\n\nContribution\n------------\n\nFor anyone interested in having a contribution, these are things to be done. \nDue to the time constraints, I'm not able to do these on my own:\n\n\n* [ ] adapt code to handle passing vertices and edges directlt\n* [ ] retrieve calculating coefficients from renders to be returned by a method\n* [ ] bind C code with pybind11 to allow direct computation from the python code\n    without any Docker dependency\n\nHow am I sure that it works as supposed?\n----------------------------------------\n\nI checked descriptor artifacts from the original implementation and compared with results in the docker through md5sum\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "light-field-distance", "package_url": "https://pypi.org/project/light-field-distance/", "platform": "", "project_url": "https://pypi.org/project/light-field-distance/", "project_urls": null, "release_url": "https://pypi.org/project/light-field-distance/0.0.1/", "requires_dist": ["docker (>=4.2.0)"], "requires_python": "", "summary": "light-field-distance is a BSD-licensed package for calculating Light Field Distance from two Wavefront OBJ meshes using OpenGL and Docker underneath", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Original repo: <a href=\"https://github.com/Sunwinds/ShapeDescriptor\" rel=\"nofollow\">link</a></p>\n<div id=\"note\">\n<h2>Note</h2>\n<p>The code was converted to be able to use LFD metric (distance between two\ndescriptors) that will compare visual appearance between ground truth mesh and\nretrieved mesh.</p>\n</div>\n<div id=\"this-fork\">\n<h2>This fork</h2>\n<p>The original repository was adapted partially to run on Linux. Only <tt>LightField</tt>\nwas changed so it can be used through docker without any dependency. Underneath,\nthe container uses OSMesa for headless rendering.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>docker</li>\n<li><tt>pip install docker</tt></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install light-field-distance\n</pre>\n<p>or</p>\n<pre>python setup.py install\n</pre>\n<p>No need to explicitly install anything.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lfd</span> <span class=\"kn\">import</span> <span class=\"n\">get_light_field_distance</span>\n\n<span class=\"c1\"># rest of code</span>\n<span class=\"n\">path_to_shape_1</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n<span class=\"n\">path_to_shape_2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n\n<span class=\"n\">lfd_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">get_light_field_distance</span><span class=\"p\">(</span><span class=\"n\">path_to_shape_1</span><span class=\"p\">,</span> <span class=\"n\">path_to_shape_2</span><span class=\"p\">)</span>\n</pre>\n<p>The script will calculate light field distances\n<a href=\"http://www.cs.jhu.edu/~misha/Papers/Chen03.pdf\" rel=\"nofollow\">[1]</a> between two shapes.\nExample usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">lfd</span> <span class=\"kn\">import</span> <span class=\"n\">get_light_field_distance</span>\n\n<span class=\"c1\"># rest of code</span>\n<span class=\"n\">path_to_shape_1</span> <span class=\"o\">=</span> <span class=\"s2\">\"examples/cup1.obj\"</span>\n<span class=\"n\">path_to_shape_2</span> <span class=\"o\">=</span> <span class=\"s2\">\"examples/airplane.obj\"</span>\n\n<span class=\"n\">lfd_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">get_light_field_distance</span><span class=\"p\">(</span><span class=\"n\">path_to_shape_1</span><span class=\"p\">,</span> <span class=\"n\">path_to_shape_2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">lfd_value</span><span class=\"p\">)</span>\n</pre>\n<p>The lower the metric\u2019s value, the more similar shapes are in terms of the visual\nappearance</p>\n</div>\n<div id=\"how-does-it-work\">\n<h2>How does it work</h2>\n<p>The <tt>lfd.py</tt> is a proxy for the container that install all the dependency necessary\nto run a C code. The code performs calculation of Zernike moments and other\ncoefficients that are necessary to calculate the distance (<tt>3DAlignment</tt> program).\nThen, these coefficients are saved and run by the <tt>Distance</tt> program that calculated the\nLight Field Distance. It prints out the result and the stdout from the printing\nis handled by the python script.</p>\n<p>If an image for the C code is not found, it builds one. The operation is performed\nonce and it takes a while to finish it. After that, the script runs the necessary\ncomputations transparently.</p>\n</div>\n<div id=\"contribution\">\n<h2>Contribution</h2>\n<p>For anyone interested in having a contribution, these are things to be done.\nDue to the time constraints, I\u2019m not able to do these on my own:</p>\n<ul>\n<li>[ ] adapt code to handle passing vertices and edges directlt</li>\n<li>[ ] retrieve calculating coefficients from renders to be returned by a method</li>\n<li><dl>\n<dt>[ ] bind C code with pybind11 to allow direct computation from the python code</dt>\n<dd>without any Docker dependency</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"how-am-i-sure-that-it-works-as-supposed\">\n<h2>How am I sure that it works as supposed?</h2>\n<p>I checked descriptor artifacts from the original implementation and compared with results in the docker through md5sum</p>\n</div>\n\n          </div>"}, "last_serial": 6993635, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e621e161bb4ad132817b8190048dd337", "sha256": "09837deca7f5d787c86819209a75c784207654b574a672b92ce98e7a745d0f1e"}, "downloads": -1, "filename": "light_field_distance-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e621e161bb4ad132817b8190048dd337", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5094, "upload_time": "2020-04-10T14:36:21", "upload_time_iso_8601": "2020-04-10T14:36:21.000154Z", "url": "https://files.pythonhosted.org/packages/18/22/f5d3516b0c491f029711481891b8ec5cc5ff7d35ffb4a0038ce2f1a95f72/light_field_distance-0.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e621e161bb4ad132817b8190048dd337", "sha256": "09837deca7f5d787c86819209a75c784207654b574a672b92ce98e7a745d0f1e"}, "downloads": -1, "filename": "light_field_distance-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e621e161bb4ad132817b8190048dd337", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5094, "upload_time": "2020-04-10T14:36:21", "upload_time_iso_8601": "2020-04-10T14:36:21.000154Z", "url": "https://files.pythonhosted.org/packages/18/22/f5d3516b0c491f029711481891b8ec5cc5ff7d35ffb4a0038ce2f1a95f72/light_field_distance-0.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:46:04 2020"}