{"info": {"author": "Flavio C. Coelho and colaborators", "author_email": "fccoelho@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python"], "description": "==========\npypixplore\n==========\n\nThis tool provides interesting ways to explore python packages, both local and remote. This package is being built as a\nPython teaching exercise. This does not diminish our expectations for a full featured  tool. Please use and report any bugs\nor missing features.\n\nDownload the package to your env with::\n\n    pip install pypixplore\n\n\nGetting Started\n===============\nThese instructions will get you a copy of this package up and running in your local machine for development and test porpouses. Keep reading if you want to deploy and contribute to the project.\n\nPrerequisites\n-------------\nFirst of all, make sure that you have installed:\n\n* Python_ 3.5\n\n.. _Python: http://www.python.org/\n\n* Python Package Index. Usually known as pip_. To install it, open the terminal and type::\n\n      easy_install pip\n\n.. _pip: https://pypi.python.org/pypi/pip\n\n\nInstalling\n----------\n\nLet's do a step-by-step installation:\n\n* Fork the project to your account.\n* Choose a path in your computer to store the project, go to it.\n* Clone the fork that you have just done to this path using the terminal command::\n\n    git clone https://github.com/YOUR-USERNAME/pypiexplorer\n\n* At this point, you should have an exact copy of the latest version of the project on your machine.\n* Now you have to install the requirements of this package. It is really easy, open the terminal in the root of the project and type::\n\n      pip install -r requirements.txt\n      pip install -r test-requirements.txt\n\n* To make sure that everything is working, run a test with::\n\n      python3 setup.py test\n\nCongratulations! Now you have a version of the project running in your machine. If you want to contribute and help to build this incredible tool, keep reading!\n\nUsing\n=====\n\nAfter installation you will get a command-line tool named `ppx`. You can learn how to use it by issuing the following command::\n\n    ppx -h\n    usage: skeleton.py [-h] [--version] [-s NAME] [-l] [-r RELEASES] [-i INFO]\n                   [-p POPULARITY] [-v] [-vv]\n\n    Copyright (C) 2017 Flavio C. Coelho This program comes with ABSOLUTELY NO\n    WARRANTY; This is free software, and you are welcome to redistribute it under\n    certain conditions; For details access:\n    https://www.gnu.org/licenses/gpl-3.0.en.html Explore Python Package Index\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --version             show program's version number and exit\n      -s NAME, --status NAME\n                            Show Status for a given package.\n      -l, --list            List installed packages\n      -r RELEASES, --releases RELEASES\n                            List package latest release\n      -i INFO, --info INFO  Shows package info\n      -p POPULARITY, --popularity POPULARITY\n                            Return the popularity of a package as the number of\n                            recent downloads\n      -v, --verbose         set loglevel to INFO\n      -vv, --very-verbose   set loglevel to DEBUG\n\nfor example, if you want to get the dependency tree of a package, you can::\n\n    ppx -t pypixplore\n    pypixplore\n    \u2560\u2550 asciitree\n    \u2560\u2550 pipdeptree\n    \u2551  \u255a\u2550 pip\n    \u2560\u2550 pip\n    \u2560\u2550 morfessor\n    \u255a\u2550 tinydb\n    note: only two levels shown.\n\nContributing\n============\n\nTo contribute to the project it is better to follow some steps.\n\n* First of all, you should decide on what to contribute to. You can resolve an open issue or create a new one. Whichever the case, ask a repository manager to assign you to the new or existing issue.\n* Now, implement the contribution on your version of the code, i.e. your fork.\n* After that, build some tests on the tests folder. This is an important step: if you do not build a test to your contribution, it will not be accepted.\n* Run those tests typing::\n\n        python3 setup.py test/TEST_FILE.py\n\n. Hint: Make sure that you are running with the last version of the main project. Just type ``git pull fccoelho master`` on terminal.\n\n* Now, you have to write the docstring for your function or class. Follow this template_.\n\n    .. _template: http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\n* If you are pretty sure that everything is working, do a pull request. Someone is going to read and test. After the reviewer approval, your contribution will be accepted.\n\n\nBuilt With\n==========\n\n* This project has been set up using PyScaffold 2.5.7. For details and usage information on PyScaffold see http://pyscaffold.readthedocs.org/\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/fccoelho/pypixplorer", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "pypixplore", "package_url": "https://pypi.org/project/pypixplore/", "platform": "", "project_url": "https://pypi.org/project/pypixplore/", "project_urls": {"Homepage": "http://github.com/fccoelho/pypixplorer"}, "release_url": "https://pypi.org/project/pypixplore/0.2.4/", "requires_dist": null, "requires_python": "", "summary": "Explore PyPI and visualize its contents in unusual and interesting ways", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This tool provides interesting ways to explore python packages, both local and remote. This package is being built as a\nPython teaching exercise. This does not diminish our expectations for a full featured  tool. Please use and report any bugs\nor missing features.</p>\n<p>Download the package to your env with:</p>\n<pre>pip install pypixplore\n</pre>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>These instructions will get you a copy of this package up and running in your local machine for development and test porpouses. Keep reading if you want to deploy and contribute to the project.</p>\n<div id=\"prerequisites\">\n<h3>Prerequisites</h3>\n<p>First of all, make sure that you have installed:</p>\n<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a> 3.5</li>\n</ul>\n<ul>\n<li><p>Python Package Index. Usually known as <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a>. To install it, open the terminal and type:</p>\n<pre>easy_install pip\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"installing\">\n<h3>Installing</h3>\n<p>Let\u2019s do a step-by-step installation:</p>\n<ul>\n<li><p>Fork the project to your account.</p>\n</li>\n<li><p>Choose a path in your computer to store the project, go to it.</p>\n</li>\n<li><p>Clone the fork that you have just done to this path using the terminal command:</p>\n<pre>git clone https://github.com/YOUR-USERNAME/pypiexplorer\n</pre>\n</li>\n<li><p>At this point, you should have an exact copy of the latest version of the project on your machine.</p>\n</li>\n<li><p>Now you have to install the requirements of this package. It is really easy, open the terminal in the root of the project and type:</p>\n<pre>pip install -r requirements.txt\npip install -r test-requirements.txt\n</pre>\n</li>\n<li><p>To make sure that everything is working, run a test with:</p>\n<pre>python3 setup.py test\n</pre>\n</li>\n</ul>\n<p>Congratulations! Now you have a version of the project running in your machine. If you want to contribute and help to build this incredible tool, keep reading!</p>\n</div>\n</div>\n<div id=\"using\">\n<h2>Using</h2>\n<p>After installation you will get a command-line tool named <cite>ppx</cite>. You can learn how to use it by issuing the following command:</p>\n<pre>ppx -h\nusage: skeleton.py [-h] [--version] [-s NAME] [-l] [-r RELEASES] [-i INFO]\n               [-p POPULARITY] [-v] [-vv]\n\nCopyright (C) 2017 Flavio C. Coelho This program comes with ABSOLUTELY NO\nWARRANTY; This is free software, and you are welcome to redistribute it under\ncertain conditions; For details access:\nhttps://www.gnu.org/licenses/gpl-3.0.en.html Explore Python Package Index\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  -s NAME, --status NAME\n                        Show Status for a given package.\n  -l, --list            List installed packages\n  -r RELEASES, --releases RELEASES\n                        List package latest release\n  -i INFO, --info INFO  Shows package info\n  -p POPULARITY, --popularity POPULARITY\n                        Return the popularity of a package as the number of\n                        recent downloads\n  -v, --verbose         set loglevel to INFO\n  -vv, --very-verbose   set loglevel to DEBUG\n</pre>\n<p>for example, if you want to get the dependency tree of a package, you can:</p>\n<pre>ppx -t pypixplore\npypixplore\n\u2560\u2550 asciitree\n\u2560\u2550 pipdeptree\n\u2551  \u255a\u2550 pip\n\u2560\u2550 pip\n\u2560\u2550 morfessor\n\u255a\u2550 tinydb\nnote: only two levels shown.\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>To contribute to the project it is better to follow some steps.</p>\n<ul>\n<li><p>First of all, you should decide on what to contribute to. You can resolve an open issue or create a new one. Whichever the case, ask a repository manager to assign you to the new or existing issue.</p>\n</li>\n<li><p>Now, implement the contribution on your version of the code, i.e. your fork.</p>\n</li>\n<li><p>After that, build some tests on the tests folder. This is an important step: if you do not build a test to your contribution, it will not be accepted.</p>\n</li>\n<li><p>Run those tests typing:</p>\n<pre>python3 setup.py test/TEST_FILE.py\n</pre>\n</li>\n</ul>\n<p>. Hint: Make sure that you are running with the last version of the main project. Just type <tt>git pull fccoelho master</tt> on terminal.</p>\n<ul>\n<li><p>Now, you have to write the docstring for your function or class. Follow this <a href=\"http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\" rel=\"nofollow\">template</a>.</p>\n<blockquote>\n</blockquote>\n</li>\n<li><p>If you are pretty sure that everything is working, do a pull request. Someone is going to read and test. After the reviewer approval, your contribution will be accepted.</p>\n</li>\n</ul>\n</div>\n<div id=\"built-with\">\n<h2>Built With</h2>\n<ul>\n<li>This project has been set up using PyScaffold 2.5.7. For details and usage information on PyScaffold see <a href=\"http://pyscaffold.readthedocs.org/\" rel=\"nofollow\">http://pyscaffold.readthedocs.org/</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2623060, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6d46f6208044b2ec4cbe4d6d7b2bdea4", "sha256": "dcf4a86c850277c5de8199234499d32e0108cdbd2866e42d35b89b12319a3f48"}, "downloads": -1, "filename": "pypixplore-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6d46f6208044b2ec4cbe4d6d7b2bdea4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18658, "upload_time": "2017-01-30T12:04:37", "upload_time_iso_8601": "2017-01-30T12:04:37.988775Z", "url": "https://files.pythonhosted.org/packages/5f/14/75d622fee3a1f82b65e8475a849c65a89883ae1e8916efc3d7c3071c0cc5/pypixplore-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e23ef38a7963f4047fdc67dbeec43d81", "sha256": "6239fecb29fbdf994627e91a5ea7169a6b765129e9f7a8063038f26a95da90df"}, "downloads": -1, "filename": "pypixplore-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e23ef38a7963f4047fdc67dbeec43d81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19305, "upload_time": "2017-02-02T16:54:10", "upload_time_iso_8601": "2017-02-02T16:54:10.341117Z", "url": "https://files.pythonhosted.org/packages/d1/37/69eb0a8f2a3e6af9ad6b9a55f86c82ffc4e863b1a3f72f0bd89bc664be29/pypixplore-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "9825024f65bd0ed23aff638d2a8a9c6a", "sha256": "0d1e75d6e083d39a247d8370df82ed5f6c11acb4495d4af4542f20bc61abc6ef"}, "downloads": -1, "filename": "pypixplore-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9825024f65bd0ed23aff638d2a8a9c6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19287, "upload_time": "2017-02-03T16:10:57", "upload_time_iso_8601": "2017-02-03T16:10:57.643183Z", "url": "https://files.pythonhosted.org/packages/ce/f5/c3ff3e73cc95558f00f0f16bb4a0508b3cb0e44bd27f23dcf9fb26f02e87/pypixplore-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "952c7df1ff2790a0fa364a16601caf53", "sha256": "9de7a1a04620e7cd866f689e45067a8173f534f35454a5237768b27e97d0c816"}, "downloads": -1, "filename": "pypixplore-0.2.3.tar.gz", "has_sig": false, "md5_digest": "952c7df1ff2790a0fa364a16601caf53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18835, "upload_time": "2017-02-06T17:18:27", "upload_time_iso_8601": "2017-02-06T17:18:27.338852Z", "url": "https://files.pythonhosted.org/packages/ae/27/483d26d7eb95f978cebf484a3aedd0e3d15a108458eb05ee6c10e948100f/pypixplore-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "20793efc81de358086cf905cfb7b717a", "sha256": "0e853e2c30bd9a02ad512d3cc2a42ae42c63b49c7e92ec9a6ebb470ebc287d16"}, "downloads": -1, "filename": "pypixplore-0.2.4.tar.gz", "has_sig": false, "md5_digest": "20793efc81de358086cf905cfb7b717a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18897, "upload_time": "2017-02-06T18:03:45", "upload_time_iso_8601": "2017-02-06T18:03:45.806829Z", "url": "https://files.pythonhosted.org/packages/32/bf/4024713f715a123338b9e24ec716072eb037d0a4bb8f7bacc2685ecb7dde/pypixplore-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20793efc81de358086cf905cfb7b717a", "sha256": "0e853e2c30bd9a02ad512d3cc2a42ae42c63b49c7e92ec9a6ebb470ebc287d16"}, "downloads": -1, "filename": "pypixplore-0.2.4.tar.gz", "has_sig": false, "md5_digest": "20793efc81de358086cf905cfb7b717a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18897, "upload_time": "2017-02-06T18:03:45", "upload_time_iso_8601": "2017-02-06T18:03:45.806829Z", "url": "https://files.pythonhosted.org/packages/32/bf/4024713f715a123338b9e24ec716072eb037d0a4bb8f7bacc2685ecb7dde/pypixplore-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:26 2020"}