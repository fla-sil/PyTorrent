{"info": {"author": "RANDOM.ORG", "author_email": "contact@random.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "JSON-RPC-Python\n===============\n\nRANDOM.ORG JSON-RPC API (Release 1) implementation.\n\nThis is a Python implementation of the RANDOM.ORG JSON-RPC API (R1). It provides either serialized or unserialized access to both the signed and unsigned methods of the API through the RandomOrgClient class. It also provides a convenience class through the RandomOrgClient class, the RandomOrgCache, for precaching requests. In the context of this module, a serialized client is one for which the sequence of requests matches the sequence of responses.\n\nInstallation\n------------\n\nTo install, simply:\n\n.. code-block:: bash\n\n    $ pip install rdoclient\n\nRequires the `requests <http://docs.python-requests.org/en/latest/>`_ lib:\n\n.. code-block:: bash\n\n    $ pip install requests\n\nUsage\n-----\n\nThe default setup is best for non-time-critical serialized requests, e.g., batch clients:\n\n.. code-block:: pycon\n\n    >>> from rdoclient import RandomOrgClient\n    >>> r = RandomOrgClient(YOUR_API_KEY_HERE)\n    >>> r.generate_integers(5, 0, 10)\n    [6, 2, 8, 9, 2]\n\n...or for more time sensitive serialized applications, e.g., real-time draws, use:\n\n.. code-block:: pycon\n\n    >>> r = RandomOrgClient(YOUR_API_KEY_HERE, blocking_timeout=2.0, http_timeout=10.0)\n    >>> r.generate_signed_integers(5, 0, 10)\n    {'random': {u'min': 0, u'max': 10, u'completionTime': u'2014-05-19 14:26:14Z', u'serialNumber': 1482, u'n': 5, u'base': 10, u'hashedApiKey': u'HASHED_KEY_HERE', u'data': [10, 9, 0, 1, 5], u'method': u'generateSignedIntegers', u'replacement': True}, 'data': [10, 9, 0, 1, 5], 'signature': u'SIGNATURE_HERE'}\n\nIf obtaining some kind of response instantly is important, a cache should be used. A cache will populate itself as quickly and efficiently as possible allowing pre-obtained randomness to be supplied instantly. If randomness is not available - e.g., the cache is empty - the cache will return an Empty exception allowing the lack of randomness to be handled without delay:\n\n.. code-block:: pycon\n\n    >>> r = RandomOrgClient(YOUR_API_KEY_HERE, blocking_timeout=60.0*60.0, http_timeout=30.0)\n    >>> c = r.create_integer_cache(5, 0, 10)\n    >>> try:\n    ...     c.get()\n    ... except Queue.Empty:\n    ...     # handle lack of true random number here\n    ...     # possibly use a pseudo random number generator\n    ...\n    [1, 4, 6, 9, 10]\n\nNote that caches don't support signed responses as it is assumed that clients using the signing features want full control over the serial numbering of responses.\n\t\nFinally, it is possible to request live results as-soon-as-possible and without serialization, however this may be more prone to timeout failures as the client must obey the server's advisory delay times if the server is overloaded:\n\n.. code-block:: pycon\n\n    >>> r = RandomOrgClient(YOUR_API_KEY_HERE, blocking_timeout=0.0, http_timeout=10.0, serialized=False)\n    >>> r.generate_integers(5, 0, 10)\n    [3, 5, 2, 4, 8]\n\nDocumentation\n-------------\n\nFor a full list of available randomness generation functions and other features see rdoclient.py documentation and https://api.random.org/json-rpc/1/\n\nTests\n-----\n\nNote that to run the accompanying tests the API_KEY fields must be given authentic values.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://packages.python.org/rdoclient", "keywords": "RANDOM.ORG random client implementation", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "rdoclient", "package_url": "https://pypi.org/project/rdoclient/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rdoclient/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://packages.python.org/rdoclient"}, "release_url": "https://pypi.org/project/rdoclient/1.0.2/", "requires_dist": null, "requires_python": null, "summary": "RANDOM.ORG JSON-RPC API (Release 1) implementation.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>RANDOM.ORG JSON-RPC API (Release 1) implementation.</p>\n<p>This is a Python implementation of the RANDOM.ORG JSON-RPC API (R1). It provides either serialized or unserialized access to both the signed and unsigned methods of the API through the RandomOrgClient class. It also provides a convenience class through the RandomOrgClient class, the RandomOrgCache, for precaching requests. In the context of this module, a serialized client is one for which the sequence of requests matches the sequence of responses.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install, simply:</p>\n<pre>$ pip install rdoclient\n</pre>\n<p>Requires the <a href=\"http://docs.python-requests.org/en/latest/\" rel=\"nofollow\">requests</a> lib:</p>\n<pre>$ pip install requests\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The default setup is best for non-time-critical serialized requests, e.g., batch clients:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">rdoclient</span> <span class=\"kn\">import</span> <span class=\"n\">RandomOrgClient</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">RandomOrgClient</span><span class=\"p\">(</span><span class=\"n\">YOUR_API_KEY_HERE</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">generate_integers</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">[6, 2, 8, 9, 2]</span>\n</pre>\n<p>\u2026or for more time sensitive serialized applications, e.g., real-time draws, use:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">RandomOrgClient</span><span class=\"p\">(</span><span class=\"n\">YOUR_API_KEY_HERE</span><span class=\"p\">,</span> <span class=\"n\">blocking_timeout</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">http_timeout</span><span class=\"o\">=</span><span class=\"mf\">10.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">generate_signed_integers</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">{'random': {u'min': 0, u'max': 10, u'completionTime': u'2014-05-19 14:26:14Z', u'serialNumber': 1482, u'n': 5, u'base': 10, u'hashedApiKey': u'HASHED_KEY_HERE', u'data': [10, 9, 0, 1, 5], u'method': u'generateSignedIntegers', u'replacement': True}, 'data': [10, 9, 0, 1, 5], 'signature': u'SIGNATURE_HERE'}</span>\n</pre>\n<p>If obtaining some kind of response instantly is important, a cache should be used. A cache will populate itself as quickly and efficiently as possible allowing pre-obtained randomness to be supplied instantly. If randomness is not available - e.g., the cache is empty - the cache will return an Empty exception allowing the lack of randomness to be handled without delay:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">RandomOrgClient</span><span class=\"p\">(</span><span class=\"n\">YOUR_API_KEY_HERE</span><span class=\"p\">,</span> <span class=\"n\">blocking_timeout</span><span class=\"o\">=</span><span class=\"mf\">60.0</span><span class=\"o\">*</span><span class=\"mf\">60.0</span><span class=\"p\">,</span> <span class=\"n\">http_timeout</span><span class=\"o\">=</span><span class=\"mf\">30.0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">create_integer_cache</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span><span class=\"k\">except</span> <span class=\"n\">Queue</span><span class=\"o\">.</span><span class=\"n\">Empty</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># handle lack of true random number here</span>\n<span class=\"gp\">... </span>    <span class=\"c1\"># possibly use a pseudo random number generator</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">[1, 4, 6, 9, 10]</span>\n</pre>\n<p>Note that caches don\u2019t support signed responses as it is assumed that clients using the signing features want full control over the serial numbering of responses.</p>\n<p>Finally, it is possible to request live results as-soon-as-possible and without serialization, however this may be more prone to timeout failures as the client must obey the server\u2019s advisory delay times if the server is overloaded:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">RandomOrgClient</span><span class=\"p\">(</span><span class=\"n\">YOUR_API_KEY_HERE</span><span class=\"p\">,</span> <span class=\"n\">blocking_timeout</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">http_timeout</span><span class=\"o\">=</span><span class=\"mf\">10.0</span><span class=\"p\">,</span> <span class=\"n\">serialized</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">generate_integers</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">[3, 5, 2, 4, 8]</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For a full list of available randomness generation functions and other features see rdoclient.py documentation and <a href=\"https://api.random.org/json-rpc/1/\" rel=\"nofollow\">https://api.random.org/json-rpc/1/</a></p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Note that to run the accompanying tests the API_KEY fields must be given authentic values.</p>\n</div>\n\n          </div>"}, "last_serial": 1125049, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9da8677ee746b0a381cad5c295073f80", "sha256": "3637f6d603404f87c84b20045e683289d03a3855900bcb820a41a3e066f0b878"}, "downloads": -1, "filename": "rdoclient-1.0.0.macosx-10.9-x86_64-py2.7.exe", "has_sig": false, "md5_digest": "9da8677ee746b0a381cad5c295073f80", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 78921, "upload_time": "2014-05-21T11:54:08", "upload_time_iso_8601": "2014-05-21T11:54:08.348337Z", "url": "https://files.pythonhosted.org/packages/ba/07/0394c158b3f53cf39b5f9a1c8ece8f37ea8e7f4a994df6e3e09fb3b0c50a/rdoclient-1.0.0.macosx-10.9-x86_64-py2.7.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "226020575ae2e91481c1c20c2966a1c7", "sha256": "e3b31d84b3ce6181a5fc856d8467a391b00bcdcfcd716a939e66da33d5622d54"}, "downloads": -1, "filename": "rdoclient-1.0.0-py2.7.egg", "has_sig": false, "md5_digest": "226020575ae2e91481c1c20c2966a1c7", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 26071, "upload_time": "2014-05-21T11:53:52", "upload_time_iso_8601": "2014-05-21T11:53:52.582527Z", "url": "https://files.pythonhosted.org/packages/db/06/be06fe4b293fecf9de5afe36f8996e31e36a6ca2fb9e679e2981a64cea4f/rdoclient-1.0.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9803a2f04e8b7c7a54669141b3b639e7", "sha256": "6c8a09fbab6705d6d39a24b6ddee3cf44e4b971dfad94f12080817acf3009d38"}, "downloads": -1, "filename": "rdoclient-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9803a2f04e8b7c7a54669141b3b639e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13601, "upload_time": "2014-05-21T11:54:32", "upload_time_iso_8601": "2014-05-21T11:54:32.434984Z", "url": "https://files.pythonhosted.org/packages/47/da/4cee6b33aa4f95b9d1ecdb86c11d4859952e8cbc2b4a2b35c2ce990bae33/rdoclient-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c7ec397928cd1daace5bcb28e7061c5b", "sha256": "0fde3a10aa69a285fc0b4c47f92a360b7c7535d7657a308788cdc3a1ea5f6e29"}, "downloads": -1, "filename": "rdoclient-1.0.1.macosx-10.9-x86_64-py2.7.exe", "has_sig": false, "md5_digest": "c7ec397928cd1daace5bcb28e7061c5b", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 79287, "upload_time": "2014-06-14T21:44:03", "upload_time_iso_8601": "2014-06-14T21:44:03.626092Z", "url": "https://files.pythonhosted.org/packages/5f/76/197b63c86e0ae116649a88afbe93bf058156e5da292e8e683ad94e9f3df5/rdoclient-1.0.1.macosx-10.9-x86_64-py2.7.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "01f4955fffd9ba1a80c288a54ada6751", "sha256": "95ae712b28beb49d3d142e452d6c4fcd3fefabae676ea0c804e018a44eb76dc0"}, "downloads": -1, "filename": "rdoclient-1.0.1-py2.7.egg", "has_sig": false, "md5_digest": "01f4955fffd9ba1a80c288a54ada6751", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 26841, "upload_time": "2014-06-14T21:43:21", "upload_time_iso_8601": "2014-06-14T21:43:21.397777Z", "url": "https://files.pythonhosted.org/packages/37/b7/0206398b6318a0c39455600a69770a7985c2d4e83eaa532282b60befedd2/rdoclient-1.0.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaa4cb0292bbf4ca48a9b5a6947887f6", "sha256": "650faa84ba1d9fdcbfc5cfda3e049777de0c9919b38056b7d7d6f7b95ab8445b"}, "downloads": -1, "filename": "rdoclient-1.0.1.tar.gz", "has_sig": false, "md5_digest": "aaa4cb0292bbf4ca48a9b5a6947887f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14022, "upload_time": "2014-06-14T21:44:15", "upload_time_iso_8601": "2014-06-14T21:44:15.191902Z", "url": "https://files.pythonhosted.org/packages/64/ca/7f73fde4a71bb207667dab6faff30b5eef50be529f0c15279e0057ea5d8c/rdoclient-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "61fc5014044a0ced9e53c57914f0c1d7", "sha256": "00094d50bcfca5ce9843befa86f945791e73988ed7ea17336c54f0f4b10cace9"}, "downloads": -1, "filename": "rdoclient-1.0.2.macosx-10.9-x86_64-py2.7.exe", "has_sig": false, "md5_digest": "61fc5014044a0ced9e53c57914f0c1d7", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 79289, "upload_time": "2014-06-14T21:45:37", "upload_time_iso_8601": "2014-06-14T21:45:37.795939Z", "url": "https://files.pythonhosted.org/packages/13/53/099874bbf6d7a2c91f8a33c3bc4dc703bee248ea662f55ccb1c192fd4356/rdoclient-1.0.2.macosx-10.9-x86_64-py2.7.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "695290828d29ad3946849f072b8dffb1", "sha256": "01368600d177d5711709e9c7dd610ecfb023f821f0813354c93ecda1d677bcae"}, "downloads": -1, "filename": "rdoclient-1.0.2-py2.7.egg", "has_sig": false, "md5_digest": "695290828d29ad3946849f072b8dffb1", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 26843, "upload_time": "2014-06-14T21:45:25", "upload_time_iso_8601": "2014-06-14T21:45:25.276629Z", "url": "https://files.pythonhosted.org/packages/86/2d/9a9ef17054ef2dd74b2df2b7d3e3638b2d8580daf500ea19a064744ffadf/rdoclient-1.0.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "eff336a390d4b146bce7d9a4492222e2", "sha256": "7b252185a4ef423b4d1ec34e85e0e776fdefba330641eeae79c5e1b28ae0348d"}, "downloads": -1, "filename": "rdoclient-1.0.2.tar.gz", "has_sig": false, "md5_digest": "eff336a390d4b146bce7d9a4492222e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14018, "upload_time": "2014-06-14T21:45:30", "upload_time_iso_8601": "2014-06-14T21:45:30.496753Z", "url": "https://files.pythonhosted.org/packages/e7/10/aa89426ec4b0f6e4c241325e00dfda4fa8c59681ba72c8b9522a83d4f44f/rdoclient-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61fc5014044a0ced9e53c57914f0c1d7", "sha256": "00094d50bcfca5ce9843befa86f945791e73988ed7ea17336c54f0f4b10cace9"}, "downloads": -1, "filename": "rdoclient-1.0.2.macosx-10.9-x86_64-py2.7.exe", "has_sig": false, "md5_digest": "61fc5014044a0ced9e53c57914f0c1d7", "packagetype": "bdist_wininst", "python_version": "2.7", "requires_python": null, "size": 79289, "upload_time": "2014-06-14T21:45:37", "upload_time_iso_8601": "2014-06-14T21:45:37.795939Z", "url": "https://files.pythonhosted.org/packages/13/53/099874bbf6d7a2c91f8a33c3bc4dc703bee248ea662f55ccb1c192fd4356/rdoclient-1.0.2.macosx-10.9-x86_64-py2.7.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "695290828d29ad3946849f072b8dffb1", "sha256": "01368600d177d5711709e9c7dd610ecfb023f821f0813354c93ecda1d677bcae"}, "downloads": -1, "filename": "rdoclient-1.0.2-py2.7.egg", "has_sig": false, "md5_digest": "695290828d29ad3946849f072b8dffb1", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 26843, "upload_time": "2014-06-14T21:45:25", "upload_time_iso_8601": "2014-06-14T21:45:25.276629Z", "url": "https://files.pythonhosted.org/packages/86/2d/9a9ef17054ef2dd74b2df2b7d3e3638b2d8580daf500ea19a064744ffadf/rdoclient-1.0.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "eff336a390d4b146bce7d9a4492222e2", "sha256": "7b252185a4ef423b4d1ec34e85e0e776fdefba330641eeae79c5e1b28ae0348d"}, "downloads": -1, "filename": "rdoclient-1.0.2.tar.gz", "has_sig": false, "md5_digest": "eff336a390d4b146bce7d9a4492222e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14018, "upload_time": "2014-06-14T21:45:30", "upload_time_iso_8601": "2014-06-14T21:45:30.496753Z", "url": "https://files.pythonhosted.org/packages/e7/10/aa89426ec4b0f6e4c241325e00dfda4fa8c59681ba72c8b9522a83d4f44f/rdoclient-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:35 2020"}