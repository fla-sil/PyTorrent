{"info": {"author": "Azat Ibrakov", "author_email": "azatibrakov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "memoir\n======\n\n[![](https://travis-ci.com/lycantropos/memoir.svg?branch=master)](https://travis-ci.com/lycantropos/memoir \"Travis CI\")\n[![](https://dev.azure.com/lycantropos/memoir/_apis/build/status/lycantropos.memoir?branchName=master)](https://dev.azure.com/lycantropos/memoir/_build/latest?branchName=master \"Azure Pipelines\")\n[![](https://codecov.io/gh/lycantropos/memoir/branch/master/graph/badge.svg)](https://codecov.io/gh/lycantropos/memoir \"Codecov\")\n[![](https://img.shields.io/github/license/lycantropos/memoir.svg)](https://github.com/lycantropos/memoir/blob/master/LICENSE \"License\")\n[![](https://badge.fury.io/py/memoir.svg)](https://badge.fury.io/py/memoir \"PyPI\")\n\nIn what follows\n- `python` is an alias for `python3.5` or any later\nversion (`python3.6` and so on),\n- `pypy` is an alias for `pypy3.5` or any later\nversion (`pypy3.6` and so on).\n\nInstallation\n------------\n\nInstall the latest `pip` & `setuptools` packages versions:\n- with `CPython`\n  ```bash\n  python -m pip install --upgrade pip setuptools\n  ```\n- with `PyPy`\n  ```bash\n  pypy -m pip install --upgrade pip setuptools\n  ```\n\n### User\n\nDownload and install the latest stable version from `PyPI` repository:\n- with `CPython`\n  ```bash\n  python -m pip install --upgrade memoir\n  ```\n- with `PyPy`\n  ```bash\n  pypy -m pip install --upgrade memoir\n  ```\n\n### Developer\n\nDownload the latest version from `GitHub` repository\n```bash\ngit clone https://github.com/lycantropos/memoir.git\ncd memoir\n```\n\nInstall:\n- with `CPython`\n  ```bash\n  python setup.py install\n  ```\n- with `PyPy`\n  ```bash\n  pypy setup.py install\n  ```\n\nUsage\n-----\n\nLet's suppose we are defining a class \nwith expensive read-only [`property`](https://docs.python.org/library/functions.html#property) \nwhich can be calculated once and reused afterwards.\n\nCommon way of solving this is by introducing private'ish attribute like\n```python\n>>> class Example:\n...     @property\n...     def expensive_property(self):\n...         try:\n...             result = self._expensive_property\n...         except AttributeError:\n...             result = do_expensive_calculations(...)\n...             self._expensive_property = result\n...         return result\n\n```\nthis works fine, but each such property\n\n- introduces an extra attribute,\n- requires a lot of boilerplate code.\n\nIf we have\n\n- [weakly-referencable](https://docs.python.org/library/weakref.html) \n(which is by default if not suppressed explicitly, \ne.g. by using [`__slots__` class variable](https://docs.python.org/reference/datamodel.html#slots)),\n- [hashable](https://docs.python.org/glossary.html#term-hashable)\n\nclass we can implement it like\n```python\n>>> from memoir import cached\n>>> class Example:\n...     @cached.property_\n...     def expensive_property(self):\n...         return do_expensive_calculations(...)\n\n```\n\nDevelopment\n-----------\n\n### Bumping version\n\n#### Preparation\n\nInstall\n[bump2version](https://github.com/c4urself/bump2version#installation).\n\n#### Pre-release\n\nChoose which version number category to bump following [semver\nspecification](http://semver.org/).\n\nTest bumping version\n```bash\nbump2version --dry-run --verbose $CATEGORY\n```\n\nwhere `$CATEGORY` is the target version number category name, possible\nvalues are `patch`/`minor`/`major`.\n\nBump version\n```bash\nbump2version --verbose $CATEGORY\n```\n\nThis will set version to `major.minor.patch-alpha`. \n\n#### Release\n\nTest bumping version\n```bash\nbump2version --dry-run --verbose --tag release\n```\n\nBump version\n```bash\nbump2version --verbose --tag release\n```\n\nThis will set version to `major.minor.patch` and add `Git` tag.\n\n#### Notes\n\nTo avoid inconsistency between branches and pull requests,\nbumping version should be merged into `master` branch as separate pull\nrequest.\n\n### Running tests\n\nPlain:\n- with `CPython`\n  ```bash\n  python setup.py test\n  ```\n- with `PyPy`\n  ```bash\n  pypy setup.py test\n  ```\n\nInside `Docker` container:\n- with `CPython`\n  ```bash\n  docker-compose --file docker-compose.cpython.yml up\n  ```\n- with `PyPy`\n  ```bash\n  docker-compose --file docker-compose.pypy.yml up\n  ```\n\n`Bash` script (e.g. can be used in `Git` hooks):\n- with `CPython`\n  ```bash\n  ./run-tests.sh\n  ```\n  or\n  ```bash\n  ./run-tests.sh cpython\n  ```\n\n- with `PyPy`\n  ```bash\n  ./run-tests.sh pypy\n  ```\n\n`PowerShell` script (e.g. can be used in `Git` hooks):\n- with `CPython`\n  ```powershell\n  .\\run-tests.ps1\n  ```\n  or\n  ```powershell\n  .\\run-tests.ps1 cpython\n  ```\n- with `PyPy`\n  ```powershell\n  .\\run-tests.ps1 pypy\n  ```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/lycantropos/memoir/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lycantropos/memoir/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "memoir", "package_url": "https://pypi.org/project/memoir/", "platform": "", "project_url": "https://pypi.org/project/memoir/", "project_urls": {"Download": "https://github.com/lycantropos/memoir/archive/master.zip", "Homepage": "https://github.com/lycantropos/memoir/"}, "release_url": "https://pypi.org/project/memoir/0.0.3/", "requires_dist": null, "requires_python": ">=3.5.3", "summary": "Memoization support.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>memoir</h1>\n<p><a href=\"https://travis-ci.com/lycantropos/memoir\" rel=\"nofollow\" title=\"Travis CI\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80d4b2b89f68b1f2a70a9667d7b3fdc0fcf3affb/68747470733a2f2f7472617669732d63692e636f6d2f6c7963616e74726f706f732f6d656d6f69722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://dev.azure.com/lycantropos/memoir/_build/latest?branchName=master\" rel=\"nofollow\" title=\"Azure Pipelines\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/594355e00af4b2518e0c3c1edae62116dc06bfab/68747470733a2f2f6465762e617a7572652e636f6d2f6c7963616e74726f706f732f6d656d6f69722f5f617069732f6275696c642f7374617475732f6c7963616e74726f706f732e6d656d6f69723f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/lycantropos/memoir\" rel=\"nofollow\" title=\"Codecov\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e75f2c79590b4653bf8283bd7714ad4b137e2c59/68747470733a2f2f636f6465636f762e696f2f67682f6c7963616e74726f706f732f6d656d6f69722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://github.com/lycantropos/memoir/blob/master/LICENSE\" rel=\"nofollow\" title=\"License\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2742faed99e82fb7c6b2b961f5c09e7f670674c2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6c7963616e74726f706f732f6d656d6f69722e737667\"></a>\n<a href=\"https://badge.fury.io/py/memoir\" rel=\"nofollow\" title=\"PyPI\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a80055c861806c0895af2cb63da327b4e4d1c6f8/68747470733a2f2f62616467652e667572792e696f2f70792f6d656d6f69722e737667\"></a></p>\n<p>In what follows</p>\n<ul>\n<li><code>python</code> is an alias for <code>python3.5</code> or any later\nversion (<code>python3.6</code> and so on),</li>\n<li><code>pypy</code> is an alias for <code>pypy3.5</code> or any later\nversion (<code>pypy3.6</code> and so on).</li>\n</ul>\n<h2>Installation</h2>\n<p>Install the latest <code>pip</code> &amp; <code>setuptools</code> packages versions:</p>\n<ul>\n<li>with <code>CPython</code>\n<pre>python -m pip install --upgrade pip setuptools\n</pre>\n</li>\n<li>with <code>PyPy</code>\n<pre>pypy -m pip install --upgrade pip setuptools\n</pre>\n</li>\n</ul>\n<h3>User</h3>\n<p>Download and install the latest stable version from <code>PyPI</code> repository:</p>\n<ul>\n<li>with <code>CPython</code>\n<pre>python -m pip install --upgrade memoir\n</pre>\n</li>\n<li>with <code>PyPy</code>\n<pre>pypy -m pip install --upgrade memoir\n</pre>\n</li>\n</ul>\n<h3>Developer</h3>\n<p>Download the latest version from <code>GitHub</code> repository</p>\n<pre>git clone https://github.com/lycantropos/memoir.git\n<span class=\"nb\">cd</span> memoir\n</pre>\n<p>Install:</p>\n<ul>\n<li>with <code>CPython</code>\n<pre>python setup.py install\n</pre>\n</li>\n<li>with <code>PyPy</code>\n<pre>pypy setup.py install\n</pre>\n</li>\n</ul>\n<h2>Usage</h2>\n<p>Let's suppose we are defining a class\nwith expensive read-only <a href=\"https://docs.python.org/library/functions.html#property\" rel=\"nofollow\"><code>property</code></a>\nwhich can be calculated once and reused afterwards.</p>\n<p>Common way of solving this is by introducing private'ish attribute like</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">Example</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"nd\">@property</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"nf\">expensive_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">try</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>             <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_expensive_property</span>\n<span class=\"o\">...</span>         <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>             <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">do_expensive_calculations</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>             <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_expensive_property</span> <span class=\"o\">=</span> <span class=\"n\">result</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"n\">result</span>\n</pre>\n<p>this works fine, but each such property</p>\n<ul>\n<li>introduces an extra attribute,</li>\n<li>requires a lot of boilerplate code.</li>\n</ul>\n<p>If we have</p>\n<ul>\n<li><a href=\"https://docs.python.org/library/weakref.html\" rel=\"nofollow\">weakly-referencable</a>\n(which is by default if not suppressed explicitly,\ne.g. by using <a href=\"https://docs.python.org/reference/datamodel.html#slots\" rel=\"nofollow\"><code>__slots__</code> class variable</a>),</li>\n<li><a href=\"https://docs.python.org/glossary.html#term-hashable\" rel=\"nofollow\">hashable</a></li>\n</ul>\n<p>class we can implement it like</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">memoir</span> <span class=\"kn\">import</span> <span class=\"n\">cached</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">Example</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"nd\">@cached</span><span class=\"o\">.</span><span class=\"n\">property_</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"nf\">expensive_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"n\">do_expensive_calculations</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<h2>Development</h2>\n<h3>Bumping version</h3>\n<h4>Preparation</h4>\n<p>Install\n<a href=\"https://github.com/c4urself/bump2version#installation\" rel=\"nofollow\">bump2version</a>.</p>\n<h4>Pre-release</h4>\n<p>Choose which version number category to bump following <a href=\"http://semver.org/\" rel=\"nofollow\">semver\nspecification</a>.</p>\n<p>Test bumping version</p>\n<pre>bump2version --dry-run --verbose <span class=\"nv\">$CATEGORY</span>\n</pre>\n<p>where <code>$CATEGORY</code> is the target version number category name, possible\nvalues are <code>patch</code>/<code>minor</code>/<code>major</code>.</p>\n<p>Bump version</p>\n<pre>bump2version --verbose <span class=\"nv\">$CATEGORY</span>\n</pre>\n<p>This will set version to <code>major.minor.patch-alpha</code>.</p>\n<h4>Release</h4>\n<p>Test bumping version</p>\n<pre>bump2version --dry-run --verbose --tag release\n</pre>\n<p>Bump version</p>\n<pre>bump2version --verbose --tag release\n</pre>\n<p>This will set version to <code>major.minor.patch</code> and add <code>Git</code> tag.</p>\n<h4>Notes</h4>\n<p>To avoid inconsistency between branches and pull requests,\nbumping version should be merged into <code>master</code> branch as separate pull\nrequest.</p>\n<h3>Running tests</h3>\n<p>Plain:</p>\n<ul>\n<li>with <code>CPython</code>\n<pre>python setup.py <span class=\"nb\">test</span>\n</pre>\n</li>\n<li>with <code>PyPy</code>\n<pre>pypy setup.py <span class=\"nb\">test</span>\n</pre>\n</li>\n</ul>\n<p>Inside <code>Docker</code> container:</p>\n<ul>\n<li>with <code>CPython</code>\n<pre>docker-compose --file docker-compose.cpython.yml up\n</pre>\n</li>\n<li>with <code>PyPy</code>\n<pre>docker-compose --file docker-compose.pypy.yml up\n</pre>\n</li>\n</ul>\n<p><code>Bash</code> script (e.g. can be used in <code>Git</code> hooks):</p>\n<ul>\n<li>\n<p>with <code>CPython</code></p>\n<pre>./run-tests.sh\n</pre>\n<p>or</p>\n<pre>./run-tests.sh cpython\n</pre>\n</li>\n<li>\n<p>with <code>PyPy</code></p>\n<pre>./run-tests.sh pypy\n</pre>\n</li>\n</ul>\n<p><code>PowerShell</code> script (e.g. can be used in <code>Git</code> hooks):</p>\n<ul>\n<li>with <code>CPython</code>\n<pre><span class=\"p\">.\\</span><span class=\"n\">run-tests</span><span class=\"p\">.</span><span class=\"n\">ps1</span>\n</pre>\nor\n<pre><span class=\"p\">.\\</span><span class=\"n\">run-tests</span><span class=\"p\">.</span><span class=\"n\">ps1</span> <span class=\"n\">cpython</span>\n</pre>\n</li>\n<li>with <code>PyPy</code>\n<pre><span class=\"p\">.\\</span><span class=\"n\">run-tests</span><span class=\"p\">.</span><span class=\"n\">ps1</span> <span class=\"n\">pypy</span>\n</pre>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6834475, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "f898d1d9e5c97cbc2242dc6e5dfe76cd", "sha256": "5ae2b9650f5754ff24e732a8aab463e7f59958d81f855065043aeb21226c7657"}, "downloads": -1, "filename": "memoir-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f898d1d9e5c97cbc2242dc6e5dfe76cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2323, "upload_time": "2019-05-27T18:31:00", "upload_time_iso_8601": "2019-05-27T18:31:00.779745Z", "url": "https://files.pythonhosted.org/packages/2e/56/bf96b767e070491d9e9098931da08283185213070ad29fd33d8801bbd4db/memoir-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "833147a94465b6d10699b9ab884570c6", "sha256": "2691975c7b3779d6faf1185f3de30ff3f2f83efb08a9bd89e5b600aa0e79fdd4"}, "downloads": -1, "filename": "memoir-0.0.0.tar.gz", "has_sig": false, "md5_digest": "833147a94465b6d10699b9ab884570c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 2612, "upload_time": "2019-05-27T18:31:02", "upload_time_iso_8601": "2019-05-27T18:31:02.873444Z", "url": "https://files.pythonhosted.org/packages/53/7c/794eab5e658096605122ec9c7f13b0829d737ee1837b5749a4c2fa3b2670/memoir-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "2bff3ea5c8edbd0ad84b986d118d06a2", "sha256": "fb753d4e71709c16310270a28c641bd6c1fce55a02d552f0304829aea0a369ab"}, "downloads": -1, "filename": "memoir-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2bff3ea5c8edbd0ad84b986d118d06a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 4597, "upload_time": "2019-05-28T16:19:31", "upload_time_iso_8601": "2019-05-28T16:19:31.261103Z", "url": "https://files.pythonhosted.org/packages/f2/d5/8a1c9d1ce0f8c7d65dff879c02ee420b6b1711e62b2d807e84cd68f0cf72/memoir-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41b2acf95e5d014008b324baf87650a8", "sha256": "f1ccc2e8f2be78e4f97133c18c781204b3020ed7ecc761257d40cd3f5310baf4"}, "downloads": -1, "filename": "memoir-0.0.1.tar.gz", "has_sig": false, "md5_digest": "41b2acf95e5d014008b324baf87650a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 3865, "upload_time": "2019-05-28T16:19:32", "upload_time_iso_8601": "2019-05-28T16:19:32.879403Z", "url": "https://files.pythonhosted.org/packages/a8/7c/dd539b8f0a460511bb83dce620f71113c2790c61bf0b7f8b9baf1d3b29a3/memoir-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f25e5b2c413050d8082bf3d85aba416a", "sha256": "6711db9f999c7c864732a0b96d8cf759a2ccc8e307c053fba6ccbb124e57360d"}, "downloads": -1, "filename": "memoir-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f25e5b2c413050d8082bf3d85aba416a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 4919, "upload_time": "2019-10-04T13:12:56", "upload_time_iso_8601": "2019-10-04T13:12:56.698817Z", "url": "https://files.pythonhosted.org/packages/38/6f/d1409229c0f176a5ecbc732d9ee8cf4a34fc558dbeb629b443864f79e813/memoir-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5c3bcca90eaf34d24334eba57b4c842", "sha256": "5da9ac6b3c6a1ca8a2d2cfad34db7c93cdd7af81d8983f37c2ca9e5e49866138"}, "downloads": -1, "filename": "memoir-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d5c3bcca90eaf34d24334eba57b4c842", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 4241, "upload_time": "2019-10-04T13:12:58", "upload_time_iso_8601": "2019-10-04T13:12:58.250783Z", "url": "https://files.pythonhosted.org/packages/d0/92/9a202bddc3d128b3f34e241d157d36f726e8a098c7cf8756ededce933b84/memoir-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "64a64852a9b42beae0fc3feb5ae96a37", "sha256": "24b9038d29cab4a17ef3ec495932f321e76b6cf425eca1d7518dc8af7cd82d37"}, "downloads": -1, "filename": "memoir-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "64a64852a9b42beae0fc3feb5ae96a37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 4905, "upload_time": "2020-03-18T09:01:39", "upload_time_iso_8601": "2020-03-18T09:01:39.037832Z", "url": "https://files.pythonhosted.org/packages/9b/2a/2a97c4c97c28058ef7cb8cc0894dd40ef3a69b1d2c5a0c2fc94e6db83ec7/memoir-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "301a78ddad53b3bf22b0e6fbee15ba1c", "sha256": "1f7fc401da6575f8f03ef7f7147bdecf969499aa41a3532c28cace8fe7237c3d"}, "downloads": -1, "filename": "memoir-0.0.3.tar.gz", "has_sig": false, "md5_digest": "301a78ddad53b3bf22b0e6fbee15ba1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 4044, "upload_time": "2020-03-18T09:01:39", "upload_time_iso_8601": "2020-03-18T09:01:39.918888Z", "url": "https://files.pythonhosted.org/packages/36/e2/5ae0ce6ebb39ca46c6a078820fad82eb8922e11ae19aefecf1c5a09a8f97/memoir-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "64a64852a9b42beae0fc3feb5ae96a37", "sha256": "24b9038d29cab4a17ef3ec495932f321e76b6cf425eca1d7518dc8af7cd82d37"}, "downloads": -1, "filename": "memoir-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "64a64852a9b42beae0fc3feb5ae96a37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.3", "size": 4905, "upload_time": "2020-03-18T09:01:39", "upload_time_iso_8601": "2020-03-18T09:01:39.037832Z", "url": "https://files.pythonhosted.org/packages/9b/2a/2a97c4c97c28058ef7cb8cc0894dd40ef3a69b1d2c5a0c2fc94e6db83ec7/memoir-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "301a78ddad53b3bf22b0e6fbee15ba1c", "sha256": "1f7fc401da6575f8f03ef7f7147bdecf969499aa41a3532c28cace8fe7237c3d"}, "downloads": -1, "filename": "memoir-0.0.3.tar.gz", "has_sig": false, "md5_digest": "301a78ddad53b3bf22b0e6fbee15ba1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.3", "size": 4044, "upload_time": "2020-03-18T09:01:39", "upload_time_iso_8601": "2020-03-18T09:01:39.918888Z", "url": "https://files.pythonhosted.org/packages/36/e2/5ae0ce6ebb39ca46c6a078820fad82eb8922e11ae19aefecf1c5a09a8f97/memoir-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:20 2020"}