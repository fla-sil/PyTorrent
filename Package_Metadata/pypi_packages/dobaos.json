{"info": {"author": "Vladimir Shabunin", "author_email": "va.shabunin@physics.msu.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# dobaos.py\n\n## Installation\n\n```text\npip install dobaos\n```\n\n## Usage\n\n```python\n# simple example, may be wrong\n\nimport time\nimport dobaos\n\ndoba = dobaos.Dobaos()\n\n# description of datapoints\n# all\nprint(doba.get_description(None))\n# single\nprint(doba.get_description(1))\n# multiple\nprint(doba.get_description([1, 2, 3]))\n\n# same for datapoint values: all, single, multiple\nprint(doba.get_value(None))\nprint(doba.get_value(1))\nprint(doba.get_value([1, 2, 3]))\n\n# send read request to bus. datapoints should have \"UPDATE\" flag\ndoba.read_value(1)\ndoba.read_value([1, 2, 3])\n\n# set and send value to bus\ndoba.set_value({ \"id\": 1, \"value\": True })\n# multiple values\ndoba.set_value([{ \"id\": 1, \"value\": True }, { \"id\": 2, \"value\": False}])\n\n# get BAOS information\nprint(doba.get_server_items())\n\n# get programming mode info\nprint(doba.get_progmode())\n\n# set KNX programming mode\ndoba.set_progmode(1)\n\n# get daemon version\nprint(doba.get_version())\n\n# send reset request\ndoba.reset()\n\n# now process incoming messages\nwhile True:\n    time.sleep(0.01)\n    cast = doba.get_cast()\n    if cast:\n        print(cast)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dobaos/dobaos.py", "keywords": "KNX,BAOS,dobaos,bobaos", "license": "", "maintainer": "", "maintainer_email": "", "name": "dobaos", "package_url": "https://pypi.org/project/dobaos/", "platform": "", "project_url": "https://pypi.org/project/dobaos/", "project_urls": {"Homepage": "https://github.com/dobaos/dobaos.py"}, "release_url": "https://pypi.org/project/dobaos/0.0.2/", "requires_dist": ["redis"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Python client for dobaos service.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dobaos.py</h1>\n<h2>Installation</h2>\n<pre>pip install dobaos\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"c1\"># simple example, may be wrong</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">dobaos</span>\n\n<span class=\"n\">doba</span> <span class=\"o\">=</span> <span class=\"n\">dobaos</span><span class=\"o\">.</span><span class=\"n\">Dobaos</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># description of datapoints</span>\n<span class=\"c1\"># all</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_description</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n<span class=\"c1\"># single</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_description</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"c1\"># multiple</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_description</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># same for datapoint values: all, single, multiple</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_value</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_value</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># send read request to bus. datapoints should have \"UPDATE\" flag</span>\n<span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">read_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">read_value</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># set and send value to bus</span>\n<span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">({</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span> <span class=\"p\">})</span>\n<span class=\"c1\"># multiple values</span>\n<span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">([{</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span> <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">\"value\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}])</span>\n\n<span class=\"c1\"># get BAOS information</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_server_items</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># get programming mode info</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_progmode</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># set KNX programming mode</span>\n<span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">set_progmode</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get daemon version</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_version</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># send reset request</span>\n<span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># now process incoming messages</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n    <span class=\"n\">cast</span> <span class=\"o\">=</span> <span class=\"n\">doba</span><span class=\"o\">.</span><span class=\"n\">get_cast</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">cast</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cast</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6227825, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "81c2eb29213e1541713dd937d057d889", "sha256": "427eadba480f7f5a2b702bbfc10d89f7227f665249df9fa8cbaccbc95e2f10a2"}, "downloads": -1, "filename": "dobaos-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "81c2eb29213e1541713dd937d057d889", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 3609, "upload_time": "2019-12-02T10:16:36", "upload_time_iso_8601": "2019-12-02T10:16:36.681130Z", "url": "https://files.pythonhosted.org/packages/59/0a/9124cc981460e8add8f3b46ebc975cb0bd7d6eeaad62f33575082d3c1097/dobaos-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d617d0077f23260e954292367cf2fc72", "sha256": "0db8c43c64915746640e25abea2045ad9435d76a4cdadce5510eb99ea73cc159"}, "downloads": -1, "filename": "dobaos-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d617d0077f23260e954292367cf2fc72", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 2903, "upload_time": "2019-12-02T10:16:39", "upload_time_iso_8601": "2019-12-02T10:16:39.362799Z", "url": "https://files.pythonhosted.org/packages/e9/da/b44c6689de8d7d83b4cdd7395789a3ca76ca7b811cf0cd4e9b612bdb7239/dobaos-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "81c2eb29213e1541713dd937d057d889", "sha256": "427eadba480f7f5a2b702bbfc10d89f7227f665249df9fa8cbaccbc95e2f10a2"}, "downloads": -1, "filename": "dobaos-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "81c2eb29213e1541713dd937d057d889", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 3609, "upload_time": "2019-12-02T10:16:36", "upload_time_iso_8601": "2019-12-02T10:16:36.681130Z", "url": "https://files.pythonhosted.org/packages/59/0a/9124cc981460e8add8f3b46ebc975cb0bd7d6eeaad62f33575082d3c1097/dobaos-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d617d0077f23260e954292367cf2fc72", "sha256": "0db8c43c64915746640e25abea2045ad9435d76a4cdadce5510eb99ea73cc159"}, "downloads": -1, "filename": "dobaos-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d617d0077f23260e954292367cf2fc72", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 2903, "upload_time": "2019-12-02T10:16:39", "upload_time_iso_8601": "2019-12-02T10:16:39.362799Z", "url": "https://files.pythonhosted.org/packages/e9/da/b44c6689de8d7d83b4cdd7395789a3ca76ca7b811cf0cd4e9b612bdb7239/dobaos-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:03 2020"}