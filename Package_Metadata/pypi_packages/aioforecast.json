{"info": {"author": "Xavier Barbosa", "author_email": "clint.northwood@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "AIO Forecast\n------------\n\nWrapper for `Forecast API`_ build on top of async/await syntaxe and aiohttp_.\n\nInstallation::\n\n    pip install aioforecast\n\nUsage::\n\n    from aioforecast import Forecast\n    client = Forecast(API_KEY)\n    data = await client.call(LATITUDE, LONGITUDE, TIME)\n\nTCPConnector_ and 15s timeout are default and can be used as-is in a classic\nservice. But this library can also be used in a constrained infrastructure,\nlike a connected device (IOT). For this purpose, client can be tuned at\ninstantiation time.\n\nFor example, your device needs to talk thru a proxy which may be very slow\nto responde::\n\n    from aioforecast import Forecast\n    from aiohttp import ProxyConnector\n    proxy = ProxyConnector(proxy=\"http://some.proxy.com\")\n    timeout = 60\n    client = Forecast(API_KEY, connector=proxy, timeout=timeout)\n    data = await client.call(LATITUDE, LONGITUDE, TIME)\n\nThe object returned is a mapping_, with an additionnal headers property\nthat expose response headers. For example::\n\n    print('temperature is %s' % data['currently']['temperature'])\n    if int(data.headers['X-Forecast-Api-Calls']) <= 1000:\n        print('still free')\n\n.. _`Forecast API`: https://developer.forecast.io/docs/v2\n.. _aiohttp: http://aiohttp.readthedocs.io\n.. _TCPConnector: http://aiohttp.readthedocs.io/en/stable/client.html#connectors\n.. _mapping: https://docs.python.org/3/glossary.html#term-mapping\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://lab.errorist.xyz/aio/aioforecast", "keywords": "weather,prediction,asyncio", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aioforecast", "package_url": "https://pypi.org/project/aioforecast/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/aioforecast/", "project_urls": {"Homepage": "https://lab.errorist.xyz/aio/aioforecast"}, "release_url": "https://pypi.org/project/aioforecast/0.0.1a2/", "requires_dist": ["aiohttp", "pytz"], "requires_python": "", "summary": "Wrapper for Forecast API", "version": "0.0.1a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Wrapper for <a href=\"https://developer.forecast.io/docs/v2\" rel=\"nofollow\">Forecast API</a> build on top of async/await syntaxe and <a href=\"http://aiohttp.readthedocs.io\" rel=\"nofollow\">aiohttp</a>.</p>\n<p>Installation:</p>\n<pre>pip install aioforecast\n</pre>\n<p>Usage:</p>\n<pre>from aioforecast import Forecast\nclient = Forecast(API_KEY)\ndata = await client.call(LATITUDE, LONGITUDE, TIME)\n</pre>\n<p><a href=\"http://aiohttp.readthedocs.io/en/stable/client.html#connectors\" rel=\"nofollow\">TCPConnector</a> and 15s timeout are default and can be used as-is in a classic\nservice. But this library can also be used in a constrained infrastructure,\nlike a connected device (IOT). For this purpose, client can be tuned at\ninstantiation time.</p>\n<p>For example, your device needs to talk thru a proxy which may be very slow\nto responde:</p>\n<pre>from aioforecast import Forecast\nfrom aiohttp import ProxyConnector\nproxy = ProxyConnector(proxy=\"http://some.proxy.com\")\ntimeout = 60\nclient = Forecast(API_KEY, connector=proxy, timeout=timeout)\ndata = await client.call(LATITUDE, LONGITUDE, TIME)\n</pre>\n<p>The object returned is a <a href=\"https://docs.python.org/3/glossary.html#term-mapping\" rel=\"nofollow\">mapping</a>, with an additionnal headers property\nthat expose response headers. For example:</p>\n<pre>print('temperature is %s' % data['currently']['temperature'])\nif int(data.headers['X-Forecast-Api-Calls']) &lt;= 1000:\n    print('still free')\n</pre>\n\n          </div>"}, "last_serial": 2212761, "releases": {"0.0.1a1": [{"comment_text": "", "digests": {"md5": "e7adcb1e016662861d231a98423f8fa8", "sha256": "8fb92d059085f52b6f71cd15fc2c0be52d72a33c1aac2cb45ff0fabe857e87ae"}, "downloads": -1, "filename": "aioforecast-0.0.1a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e7adcb1e016662861d231a98423f8fa8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5274, "upload_time": "2016-07-09T16:58:34", "upload_time_iso_8601": "2016-07-09T16:58:34.743324Z", "url": "https://files.pythonhosted.org/packages/b7/7f/7caf008bbe8b7736398bbc5b845cc124f2c4556a8ca9ef217e672c036228/aioforecast-0.0.1a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "109827e691d1542e2756f05a9f98e401", "sha256": "de981cfeeb2690466ae73891edd8fd84c4aa778fa7e8ca03612a013b4f11e729"}, "downloads": -1, "filename": "aioforecast-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "109827e691d1542e2756f05a9f98e401", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19230, "upload_time": "2016-07-09T16:58:38", "upload_time_iso_8601": "2016-07-09T16:58:38.674280Z", "url": "https://files.pythonhosted.org/packages/3b/84/0a5707e7fb64dc2d95a156556153eca957ec1ea8ae161935d365b8b48598/aioforecast-0.0.1a1.tar.gz", "yanked": false}], "0.0.1a2": [{"comment_text": "", "digests": {"md5": "1a5e61176c685384f94e7fa0b203c491", "sha256": "4927b78e46db85b8e22e445710b398e3efde197b583ba9698671539bf540b17e"}, "downloads": -1, "filename": "aioforecast-0.0.1a2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1a5e61176c685384f94e7fa0b203c491", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5387, "upload_time": "2016-07-10T13:04:58", "upload_time_iso_8601": "2016-07-10T13:04:58.399581Z", "url": "https://files.pythonhosted.org/packages/8a/e6/bb8b2376bbd542c816ad098956317d6d636ae69e33135271ea3bbbb97cb9/aioforecast-0.0.1a2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd6fc079cb8232810dc11fa318b7a397", "sha256": "c044addb3dc459c9c1237fb94c94e86a3eab3bfdf7e55a8ebd379b3a40e808c9"}, "downloads": -1, "filename": "aioforecast-0.0.1a2.tar.gz", "has_sig": false, "md5_digest": "dd6fc079cb8232810dc11fa318b7a397", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19385, "upload_time": "2016-07-10T13:05:02", "upload_time_iso_8601": "2016-07-10T13:05:02.706956Z", "url": "https://files.pythonhosted.org/packages/f8/93/4f1bb9fb4126373c06c2ee7d88b7ba3156d1df3de10b2fcc7cec087b7b6a/aioforecast-0.0.1a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a5e61176c685384f94e7fa0b203c491", "sha256": "4927b78e46db85b8e22e445710b398e3efde197b583ba9698671539bf540b17e"}, "downloads": -1, "filename": "aioforecast-0.0.1a2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1a5e61176c685384f94e7fa0b203c491", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5387, "upload_time": "2016-07-10T13:04:58", "upload_time_iso_8601": "2016-07-10T13:04:58.399581Z", "url": "https://files.pythonhosted.org/packages/8a/e6/bb8b2376bbd542c816ad098956317d6d636ae69e33135271ea3bbbb97cb9/aioforecast-0.0.1a2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd6fc079cb8232810dc11fa318b7a397", "sha256": "c044addb3dc459c9c1237fb94c94e86a3eab3bfdf7e55a8ebd379b3a40e808c9"}, "downloads": -1, "filename": "aioforecast-0.0.1a2.tar.gz", "has_sig": false, "md5_digest": "dd6fc079cb8232810dc11fa318b7a397", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19385, "upload_time": "2016-07-10T13:05:02", "upload_time_iso_8601": "2016-07-10T13:05:02.706956Z", "url": "https://files.pythonhosted.org/packages/f8/93/4f1bb9fb4126373c06c2ee7d88b7ba3156d1df3de10b2fcc7cec087b7b6a/aioforecast-0.0.1a2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:35 2020"}