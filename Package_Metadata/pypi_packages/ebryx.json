{"info": {"author": "Rana Awais", "author_email": "rana.awais@ebryx.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Installation\nYou can grab the latest .whl file from repository and install it via pip or just simply type:\n```\npip install ebryx\n```\nIf you want build from source code, then.\n```\ngit clone https://github.com/EbryxLabs/ebryx\ncd ebryx/\npython setup.py install\n```\nYou will have a package named **`ebryx`** installed for your python.\n\n# Encryption / Decryption\nYou can encrypt / decrypt data using `ebcrypt` tool. **(AES-256 Encryption)**\n\nFor example, to encrypt you can do following:\n```\nebcrypt <my-file.json> -e --new\n# encrypts myfile.json using newly created crypto-secure key. Keys will be written to _keys file.\n\nebcrypt <my-file.json> -e\n# encrypts using keys in AES_KEY, AES_IV environment variable.\n```\n\nFor decryption, you'll need to have `AES_KEY` and `AES_IV` keys in your environment variables.\n```\nebcrypt <my-file.json> -d\n```\n> This is an optional step in case you want to decode your encrypted data explicitly for manual checking. Program decrypts your encrypted config file automatically.\n\nYou can get detailed help on crypto tool by typing.\n```\nebcrypt -h\n```\n\n## OpenSSL compatibility\nEncryption done by openssl utility can be decrypted by `ebcrypt` utility and vice versa. For example, you can encrypt using openssl as follows.\n```\nopenssl aes-256-cbc -a -e -K <hex-key> -iv <hex-iv> -in <input-file> -out <output-file>\n```\n`hex-key` and `hex-iv` should be replaced with actual keys in hex format. Using the same keys you used in openssl, you can decrypt using `ebcrypt` as follows.\n```\nebcrypt <encrypted-file> -d\n# AES_KEY environment variable should hold <hex-key>.\n# AES_IV environment variable should hold <hex-iv>.\n```\nSimilarly, you can encrypt using `ebcrypt` and decrypt the content using openssl, given that you're using the same keys.\n\n# Code Usage\nYou can also use it in your own code by importing the appropriate module.\n```\n# import main module.\nimport ebryx \n\n# import crypto submodule.\nfrom ebryx import crypto\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EbryxLabs/ebryx", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ebryx", "package_url": "https://pypi.org/project/ebryx/", "platform": "", "project_url": "https://pypi.org/project/ebryx/", "project_urls": {"Homepage": "https://github.com/EbryxLabs/ebryx"}, "release_url": "https://pypi.org/project/ebryx/0.4.1/", "requires_dist": ["cryptography"], "requires_python": "", "summary": "Official library for Ebryx LLC.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Installation</h1>\n<p>You can grab the latest .whl file from repository and install it via pip or just simply type:</p>\n<pre><code>pip install ebryx\n</code></pre>\n<p>If you want build from source code, then.</p>\n<pre><code>git clone https://github.com/EbryxLabs/ebryx\ncd ebryx/\npython setup.py install\n</code></pre>\n<p>You will have a package named <strong><code>ebryx</code></strong> installed for your python.</p>\n<h1>Encryption / Decryption</h1>\n<p>You can encrypt / decrypt data using <code>ebcrypt</code> tool. <strong>(AES-256 Encryption)</strong></p>\n<p>For example, to encrypt you can do following:</p>\n<pre><code>ebcrypt &lt;my-file.json&gt; -e --new\n# encrypts myfile.json using newly created crypto-secure key. Keys will be written to _keys file.\n\nebcrypt &lt;my-file.json&gt; -e\n# encrypts using keys in AES_KEY, AES_IV environment variable.\n</code></pre>\n<p>For decryption, you'll need to have <code>AES_KEY</code> and <code>AES_IV</code> keys in your environment variables.</p>\n<pre><code>ebcrypt &lt;my-file.json&gt; -d\n</code></pre>\n<blockquote>\n<p>This is an optional step in case you want to decode your encrypted data explicitly for manual checking. Program decrypts your encrypted config file automatically.</p>\n</blockquote>\n<p>You can get detailed help on crypto tool by typing.</p>\n<pre><code>ebcrypt -h\n</code></pre>\n<h2>OpenSSL compatibility</h2>\n<p>Encryption done by openssl utility can be decrypted by <code>ebcrypt</code> utility and vice versa. For example, you can encrypt using openssl as follows.</p>\n<pre><code>openssl aes-256-cbc -a -e -K &lt;hex-key&gt; -iv &lt;hex-iv&gt; -in &lt;input-file&gt; -out &lt;output-file&gt;\n</code></pre>\n<p><code>hex-key</code> and <code>hex-iv</code> should be replaced with actual keys in hex format. Using the same keys you used in openssl, you can decrypt using <code>ebcrypt</code> as follows.</p>\n<pre><code>ebcrypt &lt;encrypted-file&gt; -d\n# AES_KEY environment variable should hold &lt;hex-key&gt;.\n# AES_IV environment variable should hold &lt;hex-iv&gt;.\n</code></pre>\n<p>Similarly, you can encrypt using <code>ebcrypt</code> and decrypt the content using openssl, given that you're using the same keys.</p>\n<h1>Code Usage</h1>\n<p>You can also use it in your own code by importing the appropriate module.</p>\n<pre><code># import main module.\nimport ebryx \n\n# import crypto submodule.\nfrom ebryx import crypto\n</code></pre>\n\n          </div>"}, "last_serial": 4959478, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "fd4c510799198579784c3d7703cb3a1a", "sha256": "7ee96443016bd9ed2bf925e387475a91889db2052429e9b03c6b55a825cbcdd9"}, "downloads": -1, "filename": "ebryx-0.2-py3.6.egg", "has_sig": false, "md5_digest": "fd4c510799198579784c3d7703cb3a1a", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 11635, "upload_time": "2019-03-19T16:05:00", "upload_time_iso_8601": "2019-03-19T16:05:00.278493Z", "url": "https://files.pythonhosted.org/packages/63/6b/0e897d035ce2963b7d19674210aece6ab2ace0821a89598bf3f0d6ac2ebb/ebryx-0.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2d08b943a35b2dfde32371560c7bfe0", "sha256": "a8331edc54ffb64e91f8f4abb7c78da3022de262f466fbb8de1f2c5c1c6ad2f4"}, "downloads": -1, "filename": "ebryx-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c2d08b943a35b2dfde32371560c7bfe0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5957, "upload_time": "2019-03-19T16:04:53", "upload_time_iso_8601": "2019-03-19T16:04:53.413696Z", "url": "https://files.pythonhosted.org/packages/94/11/a9db42812f91fc1b5960c9bc558a5107576b6d511a694463ab42f18be4c5/ebryx-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c0a1a796a617365c308ef81db41325bf", "sha256": "bb39d4f5313e818e8eadf6297c4a7d2f871c93b4dafd346a7784238d5d67cf61"}, "downloads": -1, "filename": "ebryx-0.3-py3.6.egg", "has_sig": false, "md5_digest": "c0a1a796a617365c308ef81db41325bf", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 11774, "upload_time": "2019-03-19T16:05:01", "upload_time_iso_8601": "2019-03-19T16:05:01.909240Z", "url": "https://files.pythonhosted.org/packages/27/cb/9e8ff8a96160c52ef5c54bb5e2f72dfbaef9f94b6bf72ac112fb190220d4/ebryx-0.3-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3b4af813c001c1d572a14a06b24031a", "sha256": "4a07cd86ab4a03f1ac7662b83f819afc34cb04a4cde1b6cd4fc2e97635fc4f5b"}, "downloads": -1, "filename": "ebryx-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c3b4af813c001c1d572a14a06b24031a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5977, "upload_time": "2019-03-19T16:04:55", "upload_time_iso_8601": "2019-03-19T16:04:55.508138Z", "url": "https://files.pythonhosted.org/packages/65/a4/e2212cab1bb4383cfe4a10280ce9a5802fb70edd569ccaed0f24d92d6805/ebryx-0.3-py3-none-any.whl", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "41b31580a4d6e2abbd0495ce23c0c7ea", "sha256": "fee7e0f561bcd757f6d4d60c79503889cc7c36050ebd337fa8d066832ed1fae1"}, "downloads": -1, "filename": "ebryx-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "41b31580a4d6e2abbd0495ce23c0c7ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6493, "upload_time": "2019-03-19T16:04:58", "upload_time_iso_8601": "2019-03-19T16:04:58.490987Z", "url": "https://files.pythonhosted.org/packages/16/9e/d372c85cf2b9c2b84461c8cff19802265483395f2d328f12b00c91f455bd/ebryx-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b49b4b3a7aa82482a05db37a49ea6682", "sha256": "5966fd03456e55e6a635be8f11eb6a1a03488a2764968b357246a570969d0cd8"}, "downloads": -1, "filename": "ebryx-0.4.tar.gz", "has_sig": false, "md5_digest": "b49b4b3a7aa82482a05db37a49ea6682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4072, "upload_time": "2019-03-19T16:05:05", "upload_time_iso_8601": "2019-03-19T16:05:05.078118Z", "url": "https://files.pythonhosted.org/packages/97/52/0568f1dd5de82e093216d88f0eaf4a3414c46074397bc19d273069b61170/ebryx-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "8f5c6ce29d029024ca28fb473e7c78be", "sha256": "b8df712b6dc257d09a384388eb37935f45b2c650818fc675a38c075f75da107e"}, "downloads": -1, "filename": "ebryx-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8f5c6ce29d029024ca28fb473e7c78be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7312, "upload_time": "2019-03-19T16:04:56", "upload_time_iso_8601": "2019-03-19T16:04:56.943198Z", "url": "https://files.pythonhosted.org/packages/aa/c1/08f27010cc037e2ed39c8d4a27a9eb9992a4b741a4b37e9072e69b7716b8/ebryx-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f8f78ceba90b1c0b9ad705da1813191", "sha256": "aaf64a4badfcd8b4845a2c3f93d50ae6d4e8d6254ca79915a95d99e30f6a6b11"}, "downloads": -1, "filename": "ebryx-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6f8f78ceba90b1c0b9ad705da1813191", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4076, "upload_time": "2019-03-19T16:05:03", "upload_time_iso_8601": "2019-03-19T16:05:03.551222Z", "url": "https://files.pythonhosted.org/packages/c1/69/1263410b80bdfd21aeb8b52fd89f6aa67d2a3c8747994e1d9c90e722eff4/ebryx-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f5c6ce29d029024ca28fb473e7c78be", "sha256": "b8df712b6dc257d09a384388eb37935f45b2c650818fc675a38c075f75da107e"}, "downloads": -1, "filename": "ebryx-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8f5c6ce29d029024ca28fb473e7c78be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7312, "upload_time": "2019-03-19T16:04:56", "upload_time_iso_8601": "2019-03-19T16:04:56.943198Z", "url": "https://files.pythonhosted.org/packages/aa/c1/08f27010cc037e2ed39c8d4a27a9eb9992a4b741a4b37e9072e69b7716b8/ebryx-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f8f78ceba90b1c0b9ad705da1813191", "sha256": "aaf64a4badfcd8b4845a2c3f93d50ae6d4e8d6254ca79915a95d99e30f6a6b11"}, "downloads": -1, "filename": "ebryx-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6f8f78ceba90b1c0b9ad705da1813191", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4076, "upload_time": "2019-03-19T16:05:03", "upload_time_iso_8601": "2019-03-19T16:05:03.551222Z", "url": "https://files.pythonhosted.org/packages/c1/69/1263410b80bdfd21aeb8b52fd89f6aa67d2a3c8747994e1d9c90e722eff4/ebryx-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:08 2020"}