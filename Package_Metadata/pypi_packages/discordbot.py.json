{"info": {"author": "Zack Rauen", "author_email": "rauenzi@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "Discordbot.py\n=============\n|PyPI| |Python|\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/discordbot.py.svg\n   :target: https://pypi.python.org/pypi/discordbot.py/\n.. |Python| image:: https://img.shields.io/pypi/pyversions/discordbot.py.svg\n   :target: https://pypi.python.org/pypi/discordbot.py/\nThis is an extention of `Rapptz'\ndiscord.py <https://github.com/Rapptz/discord.py>`__ to help make it\neven easier to make new bots, and simpler to make complex ones.\n\nCurrent version of the code should be stable, but use at your own risk.\n\nThe documentation will be built up over time hopefully.\n\nInstallation\n------------\n\nThis is a part of the official PyPI package directory and can be installed with pip.\n\n.. code:: bash\n\n   pip install discordbot.py\n\n\nExamples\n--------\n\nSimple Example\n~~~~~~~~~~~~~~\n\nTo create a bot that will greet new members when they join and greet\nanyone that types ``!greet`` you can do the following:\n\n.. code:: py\n\n    import discordbot\n    import asyncio\n\n    bot = discordbot.DiscordBot()\n\n    @bot.event\n    async def on_member_join(member):\n        await bot.send_message(member.server, \"Welcome {0.mention}, would you like to introduce yourself?\".format(member))\n\n    @bot.command(pass_context=True)\n    async def greet(ctx):\n        \"\"\"Greets the user.\n\n        This is additional help text that will only show up if \n        help is called on the command itself as opposed to the \n        normal short help which shows up in the main help.\n        \"\"\"\n        await bot.responses.say(\"Hi there, {0.mention}, how are you?\".format(ctx.message.author))\n\n    bot.run()\n\nThis should be accompanied by a ``settings.json`` file like this:\n\n.. code:: json\n\n    {\n      \"meta\": {\n        \"owner\": \"YOUR_ID\",\n        \"prefix\": \"!\",\n        \"description\": \"Optional description of the bot.\"\n      },\n      \"credentials\": {\n        \"token\": \"YOUR_TOKEN_HERE\",\n        \"client_id\": \"YOUR_CLIENT_ID\"\n      }\n    }\n\nFeatures\n--------\n\nBuilt-in Cogs\n~~~~~~~~~~~~~\n\nAdministrative and Meta cogs are built-in.\n\nCommands Extension\n~~~~~~~~~~~~~~~~~~\n\nThis bakes the commands extension directly in by default.\n\nFlexible Settings\n~~~~~~~~~~~~~~~~~\n\nThe bot can be fully set up through python with no JSON or vice versa.\n\nThrough JSON\n^^^^^^^^^^^^\n\nYour ``bot.py`` could be as minimal as this:\n\n.. code:: py\n\n    import asyncio\n    import discordbot\n\n    bot = discordbot.DiscordBot()\n\n    if __name__ == '__main__':\n        bot.load_cogs()\n        bot.run()\n\nAs long as you have a JSON file like this:\n\n.. code:: json\n\n    {\n      \"meta\": {\n        \"owner\": \"YOUR_ID\",\n        \"prefix\": \"ANY_PREFIX\",\n        \"description\": \"Optional description of the bot.\"\n      },\n      \"credentials\": {\n        \"token\": \"YOUR_TOKEN_HERE\",\n        \"client_id\": \"YOUR_CLIENT_ID\"\n      },\n      \"cogs\": [\"cog_folder.cog_name\", \"cog_folder.another_cog\"]\n    }\n\nThrough Python\n^^^^^^^^^^^^^^\n\nThis is very similar to how it is done for discord.py\n\nNew Help\n~~~~~~~~\n\nEmbed Formatter\n^^^^^^^^^^^^^^^\n\nThe new help formatter is prettier and done using embeds.\n\nSmarter Searching\n^^^^^^^^^^^^^^^^^\n\nThe searching and matching has been adjusted to better match what the\nuser is looking for including being case insensitive.\n\nHelper Classes\n~~~~~~~~~~~~~~\n\nEmbeds\n^^^^^^\n\nThis includes a simpler and easy to follow embed builder.\n\nColors\n^^^^^^\n\nThis allows a preset of colors for things like success, failure, or the\nDiscord blurple. Also has utility functions for generating ``Color``\nobjects from RGB values.\n\nMessages\n^^^^^^^^\n\nThis allows responses and other messages to be sent using automatically\nbuilt embeds to make the messages look nicer. This also some utility\nfunctions like a toggle which uses the success and failure colors.\n\nUtilities\n^^^^^^^^^\n\nThe utilities include setting constants, asynchronous web requests,\nstring similarity ratios, word counts, and markdown escaping\u2014this is\nespecially useful for those funky usernames.\n\nLogs\n~~~~\n\nIn a separate folder the bot will generate 3 logs, one for errors\n(hopefully empty), one for stats which gives more specifics and can help\ntrack down pesky bugs and the last one which rounds out additional info\nlike where your bot is being added and kicked from. This can be\noverridden of course.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rauenzi/discordbot.py", "keywords": "discord framework development", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "discordbot.py", "package_url": "https://pypi.org/project/discordbot.py/", "platform": "", "project_url": "https://pypi.org/project/discordbot.py/", "project_urls": {"Homepage": "https://github.com/rauenzi/discordbot.py"}, "release_url": "https://pypi.org/project/discordbot.py/0.2.3a3/", "requires_dist": ["discord.py", "psutil", "discord.py[voice]; extra == 'voice'"], "requires_python": ">=3.5", "summary": "A wrapper for discord.py with advanced functionality", "version": "0.2.3a3", "yanked": false, "html_description": "<div class=\"project-description\">\n            Discordbot.py<br>=============<br>|PyPI| |Python|<br><br>.. |PyPI| image:: https://img.shields.io/pypi/v/discordbot.py.svg<br>   :target: https://pypi.python.org/pypi/discordbot.py/<br>.. |Python| image:: https://img.shields.io/pypi/pyversions/discordbot.py.svg<br>   :target: https://pypi.python.org/pypi/discordbot.py/<br>This is an extention of `Rapptz'<br>discord.py &lt;https://github.com/Rapptz/discord.py&gt;`__ to help make it<br>even easier to make new bots, and simpler to make complex ones.<br><br>Current version of the code should be stable, but use at your own risk.<br><br>The documentation will be built up over time hopefully.<br><br>Installation<br>------------<br><br>This is a part of the official PyPI package directory and can be installed with pip.<br><br>.. code:: bash<br><br>   pip install discordbot.py<br><br><br>Examples<br>--------<br><br>Simple Example<br>~~~~~~~~~~~~~~<br><br>To create a bot that will greet new members when they join and greet<br>anyone that types ``!greet`` you can do the following:<br><br>.. code:: py<br><br>    import discordbot<br>    import asyncio<br><br>    bot = discordbot.DiscordBot()<br><br>    @bot.event<br>    async def on_member_join(member):<br>        await bot.send_message(member.server, \"Welcome {0.mention}, would you like to introduce yourself?\".format(member))<br><br>    @bot.command(pass_context=True)<br>    async def greet(ctx):<br>        \"\"\"Greets the user.<br><br>        This is additional help text that will only show up if <br>        help is called on the command itself as opposed to the <br>        normal short help which shows up in the main help.<br>        \"\"\"<br>        await bot.responses.say(\"Hi there, {0.mention}, how are you?\".format(ctx.message.author))<br><br>    bot.run()<br><br>This should be accompanied by a ``settings.json`` file like this:<br><br>.. code:: json<br><br>    {<br>      \"meta\": {<br>        \"owner\": \"YOUR_ID\",<br>        \"prefix\": \"!\",<br>        \"description\": \"Optional description of the bot.\"<br>      },<br>      \"credentials\": {<br>        \"token\": \"YOUR_TOKEN_HERE\",<br>        \"client_id\": \"YOUR_CLIENT_ID\"<br>      }<br>    }<br><br>Features<br>--------<br><br>Built-in Cogs<br>~~~~~~~~~~~~~<br><br>Administrative and Meta cogs are built-in.<br><br>Commands Extension<br>~~~~~~~~~~~~~~~~~~<br><br>This bakes the commands extension directly in by default.<br><br>Flexible Settings<br>~~~~~~~~~~~~~~~~~<br><br>The bot can be fully set up through python with no JSON or vice versa.<br><br>Through JSON<br>^^^^^^^^^^^^<br><br>Your ``bot.py`` could be as minimal as this:<br><br>.. code:: py<br><br>    import asyncio<br>    import discordbot<br><br>    bot = discordbot.DiscordBot()<br><br>    if __name__ == '__main__':<br>        bot.load_cogs()<br>        bot.run()<br><br>As long as you have a JSON file like this:<br><br>.. code:: json<br><br>    {<br>      \"meta\": {<br>        \"owner\": \"YOUR_ID\",<br>        \"prefix\": \"ANY_PREFIX\",<br>        \"description\": \"Optional description of the bot.\"<br>      },<br>      \"credentials\": {<br>        \"token\": \"YOUR_TOKEN_HERE\",<br>        \"client_id\": \"YOUR_CLIENT_ID\"<br>      },<br>      \"cogs\": [\"cog_folder.cog_name\", \"cog_folder.another_cog\"]<br>    }<br><br>Through Python<br>^^^^^^^^^^^^^^<br><br>This is very similar to how it is done for discord.py<br><br>New Help<br>~~~~~~~~<br><br>Embed Formatter<br>^^^^^^^^^^^^^^^<br><br>The new help formatter is prettier and done using embeds.<br><br>Smarter Searching<br>^^^^^^^^^^^^^^^^^<br><br>The searching and matching has been adjusted to better match what the<br>user is looking for including being case insensitive.<br><br>Helper Classes<br>~~~~~~~~~~~~~~<br><br>Embeds<br>^^^^^^<br><br>This includes a simpler and easy to follow embed builder.<br><br>Colors<br>^^^^^^<br><br>This allows a preset of colors for things like success, failure, or the<br>Discord blurple. Also has utility functions for generating ``Color``<br>objects from RGB values.<br><br>Messages<br>^^^^^^^^<br><br>This allows responses and other messages to be sent using automatically<br>built embeds to make the messages look nicer. This also some utility<br>functions like a toggle which uses the success and failure colors.<br><br>Utilities<br>^^^^^^^^^<br><br>The utilities include setting constants, asynchronous web requests,<br>string similarity ratios, word counts, and markdown escaping\u2014this is<br>especially useful for those funky usernames.<br><br>Logs<br>~~~~<br><br>In a separate folder the bot will generate 3 logs, one for errors<br>(hopefully empty), one for stats which gives more specifics and can help<br>track down pesky bugs and the last one which rounds out additional info<br>like where your bot is being added and kicked from. This can be<br>overridden of course.<br><br><br>\n          </div>"}, "last_serial": 3068021, "releases": {"0.2.3a1": [{"comment_text": "", "digests": {"md5": "eee0452ed34b97454ba9998ac0033f01", "sha256": "a497aa62e4a0ec81c54bb6a67250cc6ccac95c667355f71c3f4e1a11c3dc8102"}, "downloads": -1, "filename": "discordbot.py-0.2.3a1-py3-none-any.whl", "has_sig": false, "md5_digest": "eee0452ed34b97454ba9998ac0033f01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28500, "upload_time": "2017-07-27T16:43:17", "upload_time_iso_8601": "2017-07-27T16:43:17.582028Z", "url": "https://files.pythonhosted.org/packages/43/13/00394a03b5be13f4d457d83f93cce952f6f8a4b24b9bdfd7c4f7952ece4e/discordbot.py-0.2.3a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd11f1d599790345fae458a5531d78dd", "sha256": "21afa4d2187c8ac86222cbc0f0d9b32d5a8135a66c703a8d942c16bd80de8bfd"}, "downloads": -1, "filename": "discordbot.py-0.2.3a1.tar.gz", "has_sig": false, "md5_digest": "dd11f1d599790345fae458a5531d78dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23524, "upload_time": "2017-07-27T16:43:19", "upload_time_iso_8601": "2017-07-27T16:43:19.100590Z", "url": "https://files.pythonhosted.org/packages/ec/3a/66cb30a723826785a628db22ff6dd5fd1da0d34687583b1c71256f037060/discordbot.py-0.2.3a1.tar.gz", "yanked": false}], "0.2.3a2": [{"comment_text": "", "digests": {"md5": "ec30347edb2ed5968c3f4ecb35495537", "sha256": "0a836fc30264d9c45bcc6f568c08c039a62f51e44ad1560b6f0b16086966b508"}, "downloads": -1, "filename": "discordbot.py-0.2.3a2-py3-none-any.whl", "has_sig": false, "md5_digest": "ec30347edb2ed5968c3f4ecb35495537", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 28523, "upload_time": "2017-07-27T16:56:31", "upload_time_iso_8601": "2017-07-27T16:56:31.210216Z", "url": "https://files.pythonhosted.org/packages/c1/95/4b883d36830043d37173777f9e64ae18b6a26facabaffdd585cca82a6104/discordbot.py-0.2.3a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d65edd1594ed9f7ccb7167f5365cd6d", "sha256": "9137b6dac398eb51a107a6c6665474d04cfb90d11d20de4d13575631ac9781bf"}, "downloads": -1, "filename": "discordbot.py-0.2.3a2.tar.gz", "has_sig": false, "md5_digest": "1d65edd1594ed9f7ccb7167f5365cd6d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 23560, "upload_time": "2017-07-27T16:56:34", "upload_time_iso_8601": "2017-07-27T16:56:34.292739Z", "url": "https://files.pythonhosted.org/packages/d8/43/0c3e0d254ab892126f544c13905244bb09e54ff86ae897bbf1ce5350a45d/discordbot.py-0.2.3a2.tar.gz", "yanked": false}], "0.2.3a3": [{"comment_text": "", "digests": {"md5": "abe83a8d4647f0aeacca1b48cb858ac0", "sha256": "3c095f2a5fc1981b80e2ba3a09f971e14278a3e3593cd0abddf9874e871c93d9"}, "downloads": -1, "filename": "discordbot.py-0.2.3a3-py3-none-any.whl", "has_sig": false, "md5_digest": "abe83a8d4647f0aeacca1b48cb858ac0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 28821, "upload_time": "2017-08-02T19:19:53", "upload_time_iso_8601": "2017-08-02T19:19:53.693629Z", "url": "https://files.pythonhosted.org/packages/8c/74/822b7c1588ddad91d9630f85e36e6a2328d0d93a77d5e394ee4ea4590a74/discordbot.py-0.2.3a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b2f04a0490468d140a05c4efc9144bd", "sha256": "aca55558d916d5f90481cc944d7023f19720240d3b077eb97756508c62f89c65"}, "downloads": -1, "filename": "discordbot.py-0.2.3a3.tar.gz", "has_sig": false, "md5_digest": "3b2f04a0490468d140a05c4efc9144bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 23904, "upload_time": "2017-08-02T19:19:54", "upload_time_iso_8601": "2017-08-02T19:19:54.753531Z", "url": "https://files.pythonhosted.org/packages/3d/fb/18fa3c07ca8c28df22417f22d16a60e81ebdbeb939dc059137b50cf79b29/discordbot.py-0.2.3a3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "abe83a8d4647f0aeacca1b48cb858ac0", "sha256": "3c095f2a5fc1981b80e2ba3a09f971e14278a3e3593cd0abddf9874e871c93d9"}, "downloads": -1, "filename": "discordbot.py-0.2.3a3-py3-none-any.whl", "has_sig": false, "md5_digest": "abe83a8d4647f0aeacca1b48cb858ac0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 28821, "upload_time": "2017-08-02T19:19:53", "upload_time_iso_8601": "2017-08-02T19:19:53.693629Z", "url": "https://files.pythonhosted.org/packages/8c/74/822b7c1588ddad91d9630f85e36e6a2328d0d93a77d5e394ee4ea4590a74/discordbot.py-0.2.3a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b2f04a0490468d140a05c4efc9144bd", "sha256": "aca55558d916d5f90481cc944d7023f19720240d3b077eb97756508c62f89c65"}, "downloads": -1, "filename": "discordbot.py-0.2.3a3.tar.gz", "has_sig": false, "md5_digest": "3b2f04a0490468d140a05c4efc9144bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 23904, "upload_time": "2017-08-02T19:19:54", "upload_time_iso_8601": "2017-08-02T19:19:54.753531Z", "url": "https://files.pythonhosted.org/packages/3d/fb/18fa3c07ca8c28df22417f22d16a60e81ebdbeb939dc059137b50cf79b29/discordbot.py-0.2.3a3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:13 2020"}