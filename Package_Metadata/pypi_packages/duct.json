{"info": {"author": "Jack O'Connor", "author_email": "oconnor663@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# duct.py [![Actions Status](https://github.com/oconnor663/duct.py/workflows/tests/badge.svg)](https://github.com/oconnor663/duct.py/actions) [![Coverage Status](https://coveralls.io/repos/oconnor663/duct.py/badge.svg?branch=master&service=github)](https://coveralls.io/github/oconnor663/duct.py?branch=master) [![PyPI version](https://badge.fury.io/py/duct.svg)](https://pypi.python.org/pypi/duct) [![Documentation Status](https://readthedocs.org/projects/ductpy/badge/?version=latest)](https://ductpy.readthedocs.io/en/latest/?badge=latest)\n\nDuct is a library for running child processes. Duct makes it easy to\nbuild pipelines and redirect IO like a shell. At the same time, Duct\nhelps you write correct, portable code: whitespace is never significant,\nerrors from child processes get reported by default, and a variety of\n[gotchas, bugs, and platform\ninconsistencies](https://github.com/oconnor663/duct.py/blob/master/gotchas.md)\nare handled for you the Right Way\u2122.\n\n- [Documentation](https://ductpy.readthedocs.io)\n- [PyPI package](https://pypi.python.org/pypi/duct)\n- [the same library, in Rust](https://github.com/oconnor663/duct.rs)\n\nChangelog\n---------\n\n- v0.6.3\n  - Added `Handle.pids` and `ReaderHandle.pids`.\n- v0.6.2\n  - Added `ReaderHandle.try_wait`.\n- v0.6.1\n  - Added `ReaderHandle.kill`.\n  - Kill methods no longer wait on IO threads to complete. This avoids\n    blocking on unkilled grandchildren.\n- v0.6.0\n  - The `kill` method now reaps killed child processes before returning.\n  - Removed the `sh` function.\n  - Removed the `then` method.\n  - Added `Handle.kill`.\n  - Added `ReaderHandle` and `Expression.reader`.\n  - Added `Expression.stdout_stderr_swap`.\n  - Added `Expression.before_spawn`.\n  - Renamed `stdin`/`stdout`/`stderr` to\n    `stdin_path`/`stdout_path`/`stderr_path`.\n  - Renamed `input` to `stdin_bytes`.\n  - This will be the last major release supporting Python 2.\n\nExamples\n--------\n\nRun a command without capturing any output. Here \"hi\" is printed directly to\nthe terminal:\n\n```python\n>>> from duct import cmd\n>>> cmd(\"echo\", \"hi\").run()\nhi\nOutput(status=0, stdout=None, stderr=None)\n```\n\nCapture the standard output of a command. Here \"hi\" is returned as a string:\n\n```python\n>>> cmd(\"echo\", \"hi\").read()\n'hi'\n```\n\nCapture the standard output of a pipeline:\n\n```python\n>>> cmd(\"echo\", \"hi\").pipe(cmd(\"sed\", \"s/i/o/\")).read()\n'ho'\n```\n\nMerge standard error into standard output and read both incrementally:\n\n```python\n>>> big_cmd = cmd(\"bash\", \"-c\", \"echo out && echo err 1>&2\")\n>>> reader = big_cmd.stderr_to_stdout().reader()\n>>> with reader:\n...     reader.readlines()\n[b'out\\n', b'err\\n']\n```\n\nChildren that exit with a non-zero status raise an exception by default:\n\n```python\n>>> cmd(\"false\").run()\nTraceback (most recent call last):\n...\nduct.StatusError: Expression cmd('false') returned non-zero exit status: Output(status=1, stdout=None, stderr=None)\n>>> cmd(\"false\").unchecked().run()\nOutput(status=1, stdout=None, stderr=None)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/oconnor663/duct.py", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "duct", "package_url": "https://pypi.org/project/duct/", "platform": "", "project_url": "https://pypi.org/project/duct/", "project_urls": {"Homepage": "https://github.com/oconnor663/duct.py"}, "release_url": "https://pypi.org/project/duct/0.6.3/", "requires_dist": null, "requires_python": "", "summary": "a library for running child processes", "version": "0.6.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>duct.py <a href=\"https://github.com/oconnor663/duct.py/actions\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dcf8542c9324e1a11ad632a2e916ac6651237a3e/68747470733a2f2f6769746875622e636f6d2f6f636f6e6e6f723636332f647563742e70792f776f726b666c6f77732f74657374732f62616467652e737667\"></a> <a href=\"https://coveralls.io/github/oconnor663/duct.py?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37c4f552ba77bcef2944f8e53e101d7f2e7aba55/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6f636f6e6e6f723636332f647563742e70792f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a> <a href=\"https://pypi.python.org/pypi/duct\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/437f7e0d0a8468496ee95a12233edcc9f06c3d35/68747470733a2f2f62616467652e667572792e696f2f70792f647563742e737667\"></a> <a href=\"https://ductpy.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fef44527d5a86c7613d6ff6a54b51e3ae065e5df/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6475637470792f62616467652f3f76657273696f6e3d6c6174657374\"></a></h1>\n<p>Duct is a library for running child processes. Duct makes it easy to\nbuild pipelines and redirect IO like a shell. At the same time, Duct\nhelps you write correct, portable code: whitespace is never significant,\nerrors from child processes get reported by default, and a variety of\n<a href=\"https://github.com/oconnor663/duct.py/blob/master/gotchas.md\" rel=\"nofollow\">gotchas, bugs, and platform\ninconsistencies</a>\nare handled for you the Right Way\u2122.</p>\n<ul>\n<li><a href=\"https://ductpy.readthedocs.io\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"https://pypi.python.org/pypi/duct\" rel=\"nofollow\">PyPI package</a></li>\n<li><a href=\"https://github.com/oconnor663/duct.rs\" rel=\"nofollow\">the same library, in Rust</a></li>\n</ul>\n<h2>Changelog</h2>\n<ul>\n<li>v0.6.3\n<ul>\n<li>Added <code>Handle.pids</code> and <code>ReaderHandle.pids</code>.</li>\n</ul>\n</li>\n<li>v0.6.2\n<ul>\n<li>Added <code>ReaderHandle.try_wait</code>.</li>\n</ul>\n</li>\n<li>v0.6.1\n<ul>\n<li>Added <code>ReaderHandle.kill</code>.</li>\n<li>Kill methods no longer wait on IO threads to complete. This avoids\nblocking on unkilled grandchildren.</li>\n</ul>\n</li>\n<li>v0.6.0\n<ul>\n<li>The <code>kill</code> method now reaps killed child processes before returning.</li>\n<li>Removed the <code>sh</code> function.</li>\n<li>Removed the <code>then</code> method.</li>\n<li>Added <code>Handle.kill</code>.</li>\n<li>Added <code>ReaderHandle</code> and <code>Expression.reader</code>.</li>\n<li>Added <code>Expression.stdout_stderr_swap</code>.</li>\n<li>Added <code>Expression.before_spawn</code>.</li>\n<li>Renamed <code>stdin</code>/<code>stdout</code>/<code>stderr</code> to\n<code>stdin_path</code>/<code>stdout_path</code>/<code>stderr_path</code>.</li>\n<li>Renamed <code>input</code> to <code>stdin_bytes</code>.</li>\n<li>This will be the last major release supporting Python 2.</li>\n</ul>\n</li>\n</ul>\n<h2>Examples</h2>\n<p>Run a command without capturing any output. Here \"hi\" is printed directly to\nthe terminal:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">duct</span> <span class=\"kn\">import</span> <span class=\"n\">cmd</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s2\">\"echo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hi\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"n\">hi</span>\n<span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Capture the standard output of a command. Here \"hi\" is returned as a string:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s2\">\"echo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hi\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"s1\">'hi'</span>\n</pre>\n<p>Capture the standard output of a pipeline:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s2\">\"echo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hi\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">pipe</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s2\">\"sed\"</span><span class=\"p\">,</span> <span class=\"s2\">\"s/i/o/\"</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"s1\">'ho'</span>\n</pre>\n<p>Merge standard error into standard output and read both incrementally:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">big_cmd</span> <span class=\"o\">=</span> <span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s2\">\"bash\"</span><span class=\"p\">,</span> <span class=\"s2\">\"-c\"</span><span class=\"p\">,</span> <span class=\"s2\">\"echo out &amp;&amp; echo err 1&gt;&amp;2\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">big_cmd</span><span class=\"o\">.</span><span class=\"n\">stderr_to_stdout</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">reader</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"n\">reader</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'out</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'err</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">]</span>\n</pre>\n<p>Children that exit with a non-zero status raise an exception by default:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s2\">\"false\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n<span class=\"n\">duct</span><span class=\"o\">.</span><span class=\"n\">StatusError</span><span class=\"p\">:</span> <span class=\"n\">Expression</span> <span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s1\">'false'</span><span class=\"p\">)</span> <span class=\"n\">returned</span> <span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">zero</span> <span class=\"n\">exit</span> <span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s2\">\"false\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">unchecked</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"n\">Output</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">stdout</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">stderr</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6052787, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7ef7bd8fa7c9753dbe70d269e89aea33", "sha256": "0c75760e427774116c7fe9d620bb69b8db6e13fcb94409ba66d0c548891989d5"}, "downloads": -1, "filename": "duct-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7ef7bd8fa7c9753dbe70d269e89aea33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6707, "upload_time": "2015-10-26T00:59:37", "upload_time_iso_8601": "2015-10-26T00:59:37.681727Z", "url": "https://files.pythonhosted.org/packages/3c/fe/0178edd3dd5264c8d5e5e0eb7b8c80e08702e7264c232de4909146144911/duct-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "55e75ed645c9572b27db0687ac427579", "sha256": "7ce0279e893ba4907ccea7824ef27d22d005ae29311539a9f8f956fa457f2f1d"}, "downloads": -1, "filename": "duct-0.1.0.tar.gz", "has_sig": false, "md5_digest": "55e75ed645c9572b27db0687ac427579", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7887, "upload_time": "2016-01-21T04:10:01", "upload_time_iso_8601": "2016-01-21T04:10:01.832654Z", "url": "https://files.pythonhosted.org/packages/78/8b/faa0df220397b8bec1da03507b06620147eccec078d89179da3dc618c385/duct-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ddf2400d4f0e2d59635e11237194c11a", "sha256": "c127eac22cab02527ffd26335fdcd524a98de604c6e4ab33cba3c9a14cc88f85"}, "downloads": -1, "filename": "duct-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ddf2400d4f0e2d59635e11237194c11a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7837, "upload_time": "2016-03-04T15:45:54", "upload_time_iso_8601": "2016-03-04T15:45:54.665111Z", "url": "https://files.pythonhosted.org/packages/8f/d7/4bcdf42fdfb6214278ba84dcb8d345206a74be7e1733112e0f52cb7d30a7/duct-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "47567e26c2954641b680d51f8210587c", "sha256": "2515077bc5fbb3f60199670d05c3383e622da205ef6d37d3132f3eff17c1ee40"}, "downloads": -1, "filename": "duct-0.3.0.tar.gz", "has_sig": false, "md5_digest": "47567e26c2954641b680d51f8210587c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6190, "upload_time": "2016-06-02T05:39:00", "upload_time_iso_8601": "2016-06-02T05:39:00.394903Z", "url": "https://files.pythonhosted.org/packages/cc/63/091fd701056a3febb9eac35fefcdc97f70e59c95653d5145387bace0e3ff/duct-0.3.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "5219eb87019e07f8126e7e1cd57fdf54", "sha256": "bd40928f50a99cb1f585e902424b51ee4f65ad49ed98d9321eb69dd40961ec5e"}, "downloads": -1, "filename": "duct-0.5.0.tar.gz", "has_sig": false, "md5_digest": "5219eb87019e07f8126e7e1cd57fdf54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7138, "upload_time": "2016-12-31T00:13:41", "upload_time_iso_8601": "2016-12-31T00:13:41.938021Z", "url": "https://files.pythonhosted.org/packages/5a/2d/4a6826176fda256ae4ffaa277bd563e7ee6ba1bec1cb12dd987d62f64ada/duct-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "4aac818fad87a51c21e8b588188101c6", "sha256": "c0e2a22ae1aa55a93eda4b36091ca3a53c5ae76ed1ec79bbb174b35b8a6e3cac"}, "downloads": -1, "filename": "duct-0.5.1.tar.gz", "has_sig": false, "md5_digest": "4aac818fad87a51c21e8b588188101c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10788, "upload_time": "2017-10-17T05:38:01", "upload_time_iso_8601": "2017-10-17T05:38:01.395443Z", "url": "https://files.pythonhosted.org/packages/0d/14/6bd1addc949f614838b8c77e52f2145980fdfaae48511eb50a80134f8e91/duct-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "004c41769d9c82daf7a1b25e52aefb1f", "sha256": "02f65169fdd66ad739493ea724b942925d8901a7825a207a332a01f92186f91d"}, "downloads": -1, "filename": "duct-0.6.0.tar.gz", "has_sig": false, "md5_digest": "004c41769d9c82daf7a1b25e52aefb1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15027, "upload_time": "2019-09-22T16:11:11", "upload_time_iso_8601": "2019-09-22T16:11:11.416785Z", "url": "https://files.pythonhosted.org/packages/78/64/760879e4e28ed2634ecdc3d8528a912a0a66dd5d951aaceea9a73e4597f9/duct-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "1cfa8b67a354c0618d79c610aa77e1e0", "sha256": "6da306292254a8ed2ab1720665c307e52ee1db24130b9417838dfb0b0d45e527"}, "downloads": -1, "filename": "duct-0.6.1.tar.gz", "has_sig": false, "md5_digest": "1cfa8b67a354c0618d79c610aa77e1e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15504, "upload_time": "2019-10-12T06:10:39", "upload_time_iso_8601": "2019-10-12T06:10:39.507801Z", "url": "https://files.pythonhosted.org/packages/17/1a/a6832e71d2391baa2890874fbfded44fbd74e8288f1ab7585a791e4bcf66/duct-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "e5286afce1ba5b7d9a1f25ed7e0c77f4", "sha256": "9f85b30ef12278efba5d61f4a91216b2393773abf9c8c31af28efc5b3a662c85"}, "downloads": -1, "filename": "duct-0.6.2.tar.gz", "has_sig": false, "md5_digest": "e5286afce1ba5b7d9a1f25ed7e0c77f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15722, "upload_time": "2019-10-15T17:17:19", "upload_time_iso_8601": "2019-10-15T17:17:19.852913Z", "url": "https://files.pythonhosted.org/packages/51/ef/e01ebfa1ffeee62dcb2536a6e8b54257997934b0e420132e9d917151cd06/duct-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "63322cfdd458e200b56fabc699e653c0", "sha256": "517ef66b56c8cfcd39be97f72d54efbf788d06bfdac7837eecf06e81b6b235d1"}, "downloads": -1, "filename": "duct-0.6.3.tar.gz", "has_sig": false, "md5_digest": "63322cfdd458e200b56fabc699e653c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15953, "upload_time": "2019-10-30T13:58:12", "upload_time_iso_8601": "2019-10-30T13:58:12.745905Z", "url": "https://files.pythonhosted.org/packages/8a/43/0898e288bc3c929e964c9c9fd2a2c418959d51feff382734ea63910399c0/duct-0.6.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63322cfdd458e200b56fabc699e653c0", "sha256": "517ef66b56c8cfcd39be97f72d54efbf788d06bfdac7837eecf06e81b6b235d1"}, "downloads": -1, "filename": "duct-0.6.3.tar.gz", "has_sig": false, "md5_digest": "63322cfdd458e200b56fabc699e653c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15953, "upload_time": "2019-10-30T13:58:12", "upload_time_iso_8601": "2019-10-30T13:58:12.745905Z", "url": "https://files.pythonhosted.org/packages/8a/43/0898e288bc3c929e964c9c9fd2a2c418959d51feff382734ea63910399c0/duct-0.6.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:07 2020"}