{"info": {"author": "Sven Groot (Mediamoose)", "author_email": "sven@mediamoose.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "***************\nAsync thumbnail\n***************\n\n.. image:: https://badge.fury.io/py/async-thumbnail.png\n    :target: https://badge.fury.io/py/async-thumbnail\n\nOffload sorl thumbnail rendering to a render view.\n\nInstallation\n============\n\n.. code-block:: sh\n\n    pip install async-thumbnail\n\n\nUsage\n=====\n\n.. note:: Make sure you have `sorl thumbnails <https://github.com/jazzband/sorl-thumbnail>`_ configured.\n\n.. code-block:: python\n\n        # settings.py\n        INSTALLED_APPS = (\n            # ...\n            'async_thumbnail',\n            # ...\n        )\n\n        # urls.py\n        urlpatterns = [\n            # ...\n            path('', include('async_thumbnail.urls')),\n            # ...\n        ]\n\n\n.. code-block:: html\n\n    {% load async_thumbnail %}\n\n    <!-- Default -->\n    <img src=\"{% async_thumbnail object.image \"900x600\" crop=\"center\" %}\">\n\n    <!-- Save as var -->\n    {% async_thumbnail object.image \"900x600\" crop=\"center\" as im %}\n    <img src=\"{{ im.url }}\" width=\"{{ im.width }}\" height=\"{{ im.height }}\">\n\n\nFetchFromCacheMiddleware\n------------------------\n\nWhen you use the default full page caching middleware, it may be a good idea\nto replace it with this middleware. This prevents cache from being updated when\nthe content contains a render URL.\n\n.. warning:: In case you're using things like `source sets <https://www.w3schools.com/tags/att_source_srcset.asp>`_\n    or lazy loading techniques this may be a bad idea.\n\n.. code-block:: python\n\n    # settings.py\n    MIDDLEWARE = (\n        'django.middleware.cache.UpdateCacheMiddleware',\n        # ...\n        'async_thumbnail.middleware.FetchFromCacheMiddleware',\n    )\n\n\nSettings\n========\n\n``ASYNC_THUMBNAIL_ENDPOINT``\n----------------------------\n\n- Default: ``''``\n\nOptional setting to determine an absolute path for rendering.\n\n\n``ASYNC_THUMBNAIL_PATTERN_NAME``\n--------------------------------\n\n- Default: ``'async_thumbnail:render'``\n\nPattern name for render URL's.", "description_content_type": "", "docs_url": null, "download_url": "https://gitlab.com/mediamoose/async-thumbnail/repository/v2.0/archive.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/mediamoose/async-thumbnail/tree/v2.0", "keywords": "async,asynchronous,thumbnail,sorl,django", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "async-thumbnail", "package_url": "https://pypi.org/project/async-thumbnail/", "platform": "", "project_url": "https://pypi.org/project/async-thumbnail/", "project_urls": {"Download": "https://gitlab.com/mediamoose/async-thumbnail/repository/v2.0/archive.tar.gz", "Homepage": "https://gitlab.com/mediamoose/async-thumbnail/tree/v2.0"}, "release_url": "https://pypi.org/project/async-thumbnail/2.0/", "requires_dist": null, "requires_python": "", "summary": "Offload sorl thumbnail rendering to a render view.", "version": "2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/async-thumbnail\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/async-thumbnail.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0cdfc41c93f53deb43e9737d24bf0ed71f0f9d4/68747470733a2f2f62616467652e667572792e696f2f70792f6173796e632d7468756d626e61696c2e706e67\"></a>\n<p>Offload sorl thumbnail rendering to a render view.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install async-thumbnail\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div>\n<p>Note</p>\n<p>Make sure you have <a href=\"https://github.com/jazzband/sorl-thumbnail\" rel=\"nofollow\">sorl thumbnails</a> configured.</p>\n</div>\n<pre><span class=\"c1\"># settings.py</span>\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'async_thumbnail'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># urls.py</span>\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'async_thumbnail.urls'</span><span class=\"p\">)),</span>\n    <span class=\"c1\"># ...</span>\n<span class=\"p\">]</span>\n</pre>\n<pre>{% load async_thumbnail %}\n\n<span class=\"c\">&lt;!-- Default --&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% async_thumbnail object.image \"</span><span class=\"na\">900x600</span><span class=\"err\">\"</span> <span class=\"na\">crop</span><span class=\"o\">=</span><span class=\"s\">\"center\"</span> <span class=\"err\">%}\"</span><span class=\"p\">&gt;</span>\n\n<span class=\"c\">&lt;!-- Save as var --&gt;</span>\n{% async_thumbnail object.image \"900x600\" crop=\"center\" as im %}\n<span class=\"p\">&lt;</span><span class=\"nt\">img</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{{ im.url }}\"</span> <span class=\"na\">width</span><span class=\"o\">=</span><span class=\"s\">\"{{ im.width }}\"</span> <span class=\"na\">height</span><span class=\"o\">=</span><span class=\"s\">\"{{ im.height }}\"</span><span class=\"p\">&gt;</span>\n</pre>\n<div id=\"fetchfromcachemiddleware\">\n<h3>FetchFromCacheMiddleware</h3>\n<p>When you use the default full page caching middleware, it may be a good idea\nto replace it with this middleware. This prevents cache from being updated when\nthe content contains a render URL.</p>\n<div>\n<p>Warning</p>\n<p>In case you\u2019re using things like <a href=\"https://www.w3schools.com/tags/att_source_srcset.asp\" rel=\"nofollow\">source sets</a>\nor lazy loading techniques this may be a bad idea.</p>\n</div>\n<pre><span class=\"c1\"># settings.py</span>\n<span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"s1\">'django.middleware.cache.UpdateCacheMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'async_thumbnail.middleware.FetchFromCacheMiddleware'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<div id=\"async-thumbnail-endpoint\">\n<h3><tt>ASYNC_THUMBNAIL_ENDPOINT</tt></h3>\n<ul>\n<li>Default: <tt>''</tt></li>\n</ul>\n<p>Optional setting to determine an absolute path for rendering.</p>\n</div>\n<div id=\"async-thumbnail-pattern-name\">\n<h3><tt>ASYNC_THUMBNAIL_PATTERN_NAME</tt></h3>\n<ul>\n<li>Default: <tt>'async_thumbnail:render'</tt></li>\n</ul>\n<p>Pattern name for render URL\u2019s.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5096457, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "72f02c8789847788d606c8624a3bc267", "sha256": "7fc4d8a1d8c86cc10a30266444c1a8a9fde9caaba4c3d2c01e04a3ee769c5432"}, "downloads": -1, "filename": "async-thumbnail-1.0.tar.gz", "has_sig": false, "md5_digest": "72f02c8789847788d606c8624a3bc267", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8387, "upload_time": "2018-12-13T15:25:34", "upload_time_iso_8601": "2018-12-13T15:25:34.088620Z", "url": "https://files.pythonhosted.org/packages/52/f8/ea09def69d11121dd278a905ba54ae9fad8ddbaeb1e00c24746f704ef0aa/async-thumbnail-1.0.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "1724cca1a75c0dd2833eb7c74d581bf8", "sha256": "83b77b27d92231edc50479136b417a20cdc918fe63e8a59b69fd749696b8d327"}, "downloads": -1, "filename": "async-thumbnail-2.0.tar.gz", "has_sig": false, "md5_digest": "1724cca1a75c0dd2833eb7c74d581bf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8470, "upload_time": "2019-04-04T10:34:50", "upload_time_iso_8601": "2019-04-04T10:34:50.384956Z", "url": "https://files.pythonhosted.org/packages/a1/f6/424faf77a46554ec5a39252d1bde54f09804546dd034fd2487258ec6c4c3/async-thumbnail-2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1724cca1a75c0dd2833eb7c74d581bf8", "sha256": "83b77b27d92231edc50479136b417a20cdc918fe63e8a59b69fd749696b8d327"}, "downloads": -1, "filename": "async-thumbnail-2.0.tar.gz", "has_sig": false, "md5_digest": "1724cca1a75c0dd2833eb7c74d581bf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8470, "upload_time": "2019-04-04T10:34:50", "upload_time_iso_8601": "2019-04-04T10:34:50.384956Z", "url": "https://files.pythonhosted.org/packages/a1/f6/424faf77a46554ec5a39252d1bde54f09804546dd034fd2487258ec6c4c3/async-thumbnail-2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:40 2020"}