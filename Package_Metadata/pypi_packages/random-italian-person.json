{"info": {"author": "LucaCappelletti94", "author_email": "cappelletti.luca94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "random_italian_person\n=========================================================================================\n|travis| |sonar_quality| |sonar_maintainability| |codacy|\n|code_climate_maintainability| |pip| |downloads|\n\nPython package to generate an Italian person randomly.\n\nHow do I install this package?\n----------------------------------------------\nAs usual, just download it using pip:\n\n.. code:: shell\n\n    pip install random_italian_person\n\nTests Coverage\n----------------------------------------------\nSince some software handling coverages sometime\nget slightly different results, here's three of them:\n\n|coveralls| |sonar_coverage| |code_climate_coverage|\n\nPython package to generate an Italian person randomly.\n\nUsage examples\n-----------------------------------------------\n\n.. code:: python\n\n    from random_italian_person import RandomItalianPerson\n\n    person = RandomItalianPerson()\n\n    print(person.describe())\n    # 'Rodrigo Benedetti \u00e8 nata/o a Molazzana (LU) il 1972-12-18. Ora vive a Cagliari (CA) in Via Giuseppe Garibaldi 109.'\n\nGenerate a CSV of random italian persons\n-----------------------------------------------\nOne of the most common usages for this library is to render\nfake datasets for testing porposes. For instance,\nto generate a CSV with 5 random person you can use:\n\n.. code:: python\n\n    import pandas as pd\n    from random_italian_person import RandomItalianPerson\n\n    df = pd.DataFrame([\n        RandomItalianPerson().data\n        for _ in range(5)\n    ])\n\nThe obtained dataframe will look like:\n\n+-----------------------+------------+-----------+-----------+-------+----------------------+------------------+----------------+-------------+-----------------------+-------------+-------------------+----------------+-------+----------------+-----------------+------------------+\n| region                | province   | surname   | name      | sex   | birth_municipality   | birth_province   | birth_region   |   birth_cap | birth_province_code   | birthdate   | address           | house_number   |   cap | municipality   | province_code   | codice_fiscale   |\n+=======================+============+===========+===========+=======+======================+==================+================+=============+=======================+=============+===================+================+=======+================+=================+==================+\n| Marche                | Macerata   | Di Felice | Giacomina | F     | Mosciano Sant'angelo | Teramo           | Abruzzo        |       64023 | TE                    | 1945-09-18  | Viale De Amicis   | 76             | 62020 | Colmurano      | MC              | DFLGMN45P58F764B |\n+-----------------------+------------+-----------+-----------+-------+----------------------+------------------+----------------+-------------+-----------------------+-------------+-------------------+----------------+-------+----------------+-----------------+------------------+\n| Friuli Venezia Giulia | Udine      | Galli     | Imen      | F     | Isola Dovarese       | Cremona          | Lombardia      |       26031 | CR                    | 1942-03-10  | Via Udine         | 2              | 33020 | Verzegnis      | UD              | GLLMNI42C50E356T |\n+-----------------------+------------+-----------+-----------+-------+----------------------+------------------+----------------+-------------+-----------------------+-------------+-------------------+----------------+-------+----------------+-----------------+------------------+\n| Abruzzo               | Pescara    | Rosso     | Eva       | F     | Cellarengo           | Asti             | Piemonte       |       14010 | AT                    | 2001-12-31  | Via G. Fonzi      | 58             | 65010 | Spoltore       | PE              | RSSVEA01T71C438U |\n+-----------------------+------------+-----------+-----------+-------+----------------------+------------------+----------------+-------------+-----------------------+-------------+-------------------+----------------+-------+----------------+-----------------+------------------+\n| Emilia Romagna        | Bologna    | Grasso    | Emanuele  | M     | Caposele             | Avellino         | Campania       |       83040 | AV                    | 1942-08-27  | Via G. Massarenti | 223/5          | 40138 | Bologna        | BO              | GRSMNL42M27B674L |\n+-----------------------+------------+-----------+-----------+-------+----------------------+------------------+----------------+-------------+-----------------------+-------------+-------------------+----------------+-------+----------------+-----------------+------------------+\n| Sicilia               | Palermo    | Pastorino | Lenuta    | F     | Borzonasca           | Genova           | Liguria        |       16041 | GE                    | 1972-09-05  | Via Montalbo      | 124            | 90142 | Palermo        | PA              | PSTLNT72P45B067T |\n+-----------------------+------------+-----------+-----------+-------+----------------------+------------------+----------------+-------------+-----------------------+-------------+-------------------+----------------+-------+----------------+-----------------+------------------+\n\n.. |travis| image:: https://travis-ci.org/LucaCappelletti94/random_italian_person.png\n   :target: https://travis-ci.org/LucaCappelletti94/random_italian_person\n   :alt: Travis CI build\n\n.. |sonar_quality| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_random_italian_person&metric=alert_status\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_italian_person\n    :alt: SonarCloud Quality\n\n.. |sonar_maintainability| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_random_italian_person&metric=sqale_rating\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_italian_person\n    :alt: SonarCloud Maintainability\n\n.. |sonar_coverage| image:: https://sonarcloud.io/api/project_badges/measure?project=LucaCappelletti94_random_italian_person&metric=coverage\n    :target: https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_italian_person\n    :alt: SonarCloud Coverage\n\n.. |coveralls| image:: https://coveralls.io/repos/github/LucaCappelletti94/random_italian_person/badge.svg?branch=master\n    :target: https://coveralls.io/github/LucaCappelletti94/random_italian_person?branch=master\n    :alt: Coveralls Coverage\n\n.. |pip| image:: https://badge.fury.io/py/random-italian-person.svg\n    :target: https://badge.fury.io/py/random-italian-person\n    :alt: Pypi project\n\n.. |downloads| image:: https://pepy.tech/badge/random-italian-person\n    :target: https://pepy.tech/badge/random-italian-person\n    :alt: Pypi total project downloads\n\n.. |codacy| image:: https://api.codacy.com/project/badge/Grade/1e0b901c55b7446bacd7bc5a0fbcbf71\n    :target: https://www.codacy.com/manual/LucaCappelletti94/random_italian_person?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=LucaCappelletti94/random_italian_person&amp;utm_campaign=Badge_Grade\n    :alt: Codacy Maintainability\n\n.. |code_climate_maintainability| image:: https://api.codeclimate.com/v1/badges/5a97d2474feee23f4516/maintainability\n    :target: https://codeclimate.com/github/LucaCappelletti94/random_italian_person/maintainability\n    :alt: Maintainability\n\n.. |code_climate_coverage| image:: https://api.codeclimate.com/v1/badges/5a97d2474feee23f4516/test_coverage\n    :target: https://codeclimate.com/github/LucaCappelletti94/random_italian_person/test_coverage\n    :alt: Code Climate Coverate", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucaCappelletti94/random_italian_person", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "random-italian-person", "package_url": "https://pypi.org/project/random-italian-person/", "platform": "", "project_url": "https://pypi.org/project/random-italian-person/", "project_urls": {"Homepage": "https://github.com/LucaCappelletti94/random_italian_person"}, "release_url": "https://pypi.org/project/random-italian-person/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Python package to generate an Italian person randomly.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/LucaCappelletti94/random_italian_person\" rel=\"nofollow\"><img alt=\"Travis CI build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/315777ee9f54c29830abe5c7ed037b08cf91535b/68747470733a2f2f7472617669732d63692e6f72672f4c75636143617070656c6c6574746939342f72616e646f6d5f6974616c69616e5f706572736f6e2e706e67\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_italian_person\" rel=\"nofollow\"><img alt=\"SonarCloud Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff7a9856cead1f10eef48026eee6f3b95c352972/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f72616e646f6d5f6974616c69616e5f706572736f6e266d65747269633d616c6572745f737461747573\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_italian_person\" rel=\"nofollow\"><img alt=\"SonarCloud Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d388d1233de6b711134488a31a5418949cf419a/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f72616e646f6d5f6974616c69616e5f706572736f6e266d65747269633d7371616c655f726174696e67\"></a> <a href=\"https://www.codacy.com/manual/LucaCappelletti94/random_italian_person?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=LucaCappelletti94/random_italian_person&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff74c69af4cfc7d14def3122d2b987d3364a9b06/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3165306239303163353562373434366261636437626335613066626362663731\"></a>\n<a href=\"https://codeclimate.com/github/LucaCappelletti94/random_italian_person/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04dc0b78829eb43b0446d32019416864b9a46b13/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f35613937643234373466656565323366343531362f6d61696e7461696e6162696c697479\"></a> <a href=\"https://badge.fury.io/py/random-italian-person\" rel=\"nofollow\"><img alt=\"Pypi project\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0dd932685d9030af93c847ae4fd05a9052df99f/68747470733a2f2f62616467652e667572792e696f2f70792f72616e646f6d2d6974616c69616e2d706572736f6e2e737667\"></a> <a href=\"https://pepy.tech/badge/random-italian-person\" rel=\"nofollow\"><img alt=\"Pypi total project downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30b899b1ba50da57b9d25dcddb3bf9c35321caae/68747470733a2f2f706570792e746563682f62616467652f72616e646f6d2d6974616c69616e2d706572736f6e\"></a></p>\n<p>Python package to generate an Italian person randomly.</p>\n<div id=\"how-do-i-install-this-package\">\n<h2>How do I install this package?</h2>\n<p>As usual, just download it using pip:</p>\n<pre>pip install random_italian_person\n</pre>\n</div>\n<div id=\"tests-coverage\">\n<h2>Tests Coverage</h2>\n<p>Since some software handling coverages sometime\nget slightly different results, here\u2019s three of them:</p>\n<p><a href=\"https://coveralls.io/github/LucaCappelletti94/random_italian_person?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a32286cd0f4252ed026e66a2bef81cba013a838c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4c75636143617070656c6c6574746939342f72616e646f6d5f6974616c69616e5f706572736f6e2f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://sonarcloud.io/dashboard/index/LucaCappelletti94_random_italian_person\" rel=\"nofollow\"><img alt=\"SonarCloud Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93322a8d9b48311d2981e663ca7137dc2a3a7142/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d4c75636143617070656c6c6574746939345f72616e646f6d5f6974616c69616e5f706572736f6e266d65747269633d636f766572616765\"></a> <a href=\"https://codeclimate.com/github/LucaCappelletti94/random_italian_person/test_coverage\" rel=\"nofollow\"><img alt=\"Code Climate Coverate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcc6b4ffe08cc089ec7b38a5ec0135fb466c2aa6/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f35613937643234373466656565323366343531362f746573745f636f766572616765\"></a></p>\n<p>Python package to generate an Italian person randomly.</p>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage examples</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">random_italian_person</span> <span class=\"kn\">import</span> <span class=\"n\">RandomItalianPerson</span>\n\n<span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">RandomItalianPerson</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">describe</span><span class=\"p\">())</span>\n<span class=\"c1\"># 'Rodrigo Benedetti \u00e8 nata/o a Molazzana (LU) il 1972-12-18. Ora vive a Cagliari (CA) in Via Giuseppe Garibaldi 109.'</span>\n</pre>\n</div>\n<div id=\"generate-a-csv-of-random-italian-persons\">\n<h2>Generate a CSV of random italian persons</h2>\n<p>One of the most common usages for this library is to render\nfake datasets for testing porposes. For instance,\nto generate a CSV with 5 random person you can use:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">random_italian_person</span> <span class=\"kn\">import</span> <span class=\"n\">RandomItalianPerson</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">([</span>\n    <span class=\"n\">RandomItalianPerson</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">data</span>\n    <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"p\">])</span>\n</pre>\n<p>The obtained dataframe will look like:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>region</th>\n<th>province</th>\n<th>surname</th>\n<th>name</th>\n<th>sex</th>\n<th>birth_municipality</th>\n<th>birth_province</th>\n<th>birth_region</th>\n<th>birth_cap</th>\n<th>birth_province_code</th>\n<th>birthdate</th>\n<th>address</th>\n<th>house_number</th>\n<th>cap</th>\n<th>municipality</th>\n<th>province_code</th>\n<th>codice_fiscale</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Marche</td>\n<td>Macerata</td>\n<td>Di Felice</td>\n<td>Giacomina</td>\n<td>F</td>\n<td>Mosciano Sant\u2019angelo</td>\n<td>Teramo</td>\n<td>Abruzzo</td>\n<td>64023</td>\n<td>TE</td>\n<td>1945-09-18</td>\n<td>Viale De Amicis</td>\n<td>76</td>\n<td>62020</td>\n<td>Colmurano</td>\n<td>MC</td>\n<td>DFLGMN45P58F764B</td>\n</tr>\n<tr><td>Friuli Venezia Giulia</td>\n<td>Udine</td>\n<td>Galli</td>\n<td>Imen</td>\n<td>F</td>\n<td>Isola Dovarese</td>\n<td>Cremona</td>\n<td>Lombardia</td>\n<td>26031</td>\n<td>CR</td>\n<td>1942-03-10</td>\n<td>Via Udine</td>\n<td>2</td>\n<td>33020</td>\n<td>Verzegnis</td>\n<td>UD</td>\n<td>GLLMNI42C50E356T</td>\n</tr>\n<tr><td>Abruzzo</td>\n<td>Pescara</td>\n<td>Rosso</td>\n<td>Eva</td>\n<td>F</td>\n<td>Cellarengo</td>\n<td>Asti</td>\n<td>Piemonte</td>\n<td>14010</td>\n<td>AT</td>\n<td>2001-12-31</td>\n<td>Via G. Fonzi</td>\n<td>58</td>\n<td>65010</td>\n<td>Spoltore</td>\n<td>PE</td>\n<td>RSSVEA01T71C438U</td>\n</tr>\n<tr><td>Emilia Romagna</td>\n<td>Bologna</td>\n<td>Grasso</td>\n<td>Emanuele</td>\n<td>M</td>\n<td>Caposele</td>\n<td>Avellino</td>\n<td>Campania</td>\n<td>83040</td>\n<td>AV</td>\n<td>1942-08-27</td>\n<td>Via G. Massarenti</td>\n<td>223/5</td>\n<td>40138</td>\n<td>Bologna</td>\n<td>BO</td>\n<td>GRSMNL42M27B674L</td>\n</tr>\n<tr><td>Sicilia</td>\n<td>Palermo</td>\n<td>Pastorino</td>\n<td>Lenuta</td>\n<td>F</td>\n<td>Borzonasca</td>\n<td>Genova</td>\n<td>Liguria</td>\n<td>16041</td>\n<td>GE</td>\n<td>1972-09-05</td>\n<td>Via Montalbo</td>\n<td>124</td>\n<td>90142</td>\n<td>Palermo</td>\n<td>PA</td>\n<td>PSTLNT72P45B067T</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 6702796, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2445a4225a1117d7619721893a7fd001", "sha256": "d57d69a0ec5c87f31278c83a008ec36cbaeb5d4cf84a1b6a50fd76f8a768fcb6"}, "downloads": -1, "filename": "random_italian_person-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2445a4225a1117d7619721893a7fd001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5268, "upload_time": "2020-02-26T10:45:34", "upload_time_iso_8601": "2020-02-26T10:45:34.958163Z", "url": "https://files.pythonhosted.org/packages/13/e1/270ce1e03de95b6c8d096c82db17ba9bdb4f5a368b9d5985ec59b6b0f0ea/random_italian_person-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4e0d850d112ba534f319688502f7d103", "sha256": "09d543e3ee30ff63b97f3f7f4f3a2ba729b1f55a39ce07d2575f5378dc03f731"}, "downloads": -1, "filename": "random_italian_person-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4e0d850d112ba534f319688502f7d103", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 451717, "upload_time": "2020-02-26T11:08:21", "upload_time_iso_8601": "2020-02-26T11:08:21.317780Z", "url": "https://files.pythonhosted.org/packages/60/cb/7a70a6bad8717dde289d10c3dcf6d20e7fc11887ff67d762293ab94d7fdb/random_italian_person-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e0d850d112ba534f319688502f7d103", "sha256": "09d543e3ee30ff63b97f3f7f4f3a2ba729b1f55a39ce07d2575f5378dc03f731"}, "downloads": -1, "filename": "random_italian_person-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4e0d850d112ba534f319688502f7d103", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 451717, "upload_time": "2020-02-26T11:08:21", "upload_time_iso_8601": "2020-02-26T11:08:21.317780Z", "url": "https://files.pythonhosted.org/packages/60/cb/7a70a6bad8717dde289d10c3dcf6d20e7fc11887ff67d762293ab94d7fdb/random_italian_person-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:37 2020"}