{"info": {"author": "Piccolo Lab", "author_email": "stephen_piccolo@byu.edu", "bugtrack_url": null, "classifiers": [], "description": "# expressionable Python Module\nThe official repository for the expressionable Python module, which allows for:\n* Transforming tabular data sets from one format to another.\n* Querying large data sets to filter out useful data.\n* Selecting additional columns/features to include in the resulting data set.\n* Merging data sets of various formats into a single file.\n* Gzipping resulting data sets, as well as the ability to read gzipped files.\n\nClick for information on the [ExpressionAble command-line tool](https://github.com/srp33/ShapeShifter-CLI), which combines\nthe features of ExpressionAble with the ease and speed of the command-line!\n\nBasic use is described below, but see the full documentation on [Read the Docs](https://shapeshifter.readthedocs.io/en/latest/).  \n## Install\n`pip install expressionable`\n\n## Basic Use\nAfter installing, import the ExpressionAble class with `from expressionable import ExpressionAble`. An ExpressionAble object \nrepresents the file to be transformed. It is then transformed using the `export_filter_results` method. Here is a simple\nexample of file called `input_file.tsv` being transformed into an HDF5 file called `output_file.h5`, while filtering \nthe data on sex and age:\n```python\nfrom expressionable import ExpressionAble\n\nmy_expressionable = ExpressionAble(\"input_file.tsv\")\nmy_expressionable.export_filter_results(\"output_file.h5\", filters=\"Sex == 'M' and Age > 40\")\n```\nNote that the type of file being read and exported to were not stated explicitly but inferred by ExpressionAble based on\nthe file extensions provided. If necessary, `input_file_type` and `output_file_type` can be named explicitly.\n\n\n## Contributing\nWe welcome contributions that help expand ExpressionAble to be compatible with additional file formats. If you are \ninterested in contributing, please follow the instructions [here](https://github.com/srp33/ExpressionAble/wiki/Adding-Support-for-Additional-File-Types-in-ExpressionAble).\n## Currently Supported Formats\n#### Input Formats:\n* CSV\n* TSV\n* JSON\n* Excel\n* HDF5\n* Parquet\n* MsgPack\n* Stata\n* Pickle\n* SQLite\n* ARFF\n* GCT\n* GCTX\n* PDF\n* Kallisto\n* GEO\n* StarReads\n\n#### Output Formats:\n* CSV \n* TSV\n* JSON\n* Excel\n* HDF5\n* Parquet\n* MsgPack\n* Stata \n* Pickle\n* SQLite \n* ARFF \n* GCT \n* RMarkdown \n* JupyterNotebook\n\n## Future Formats to Support\nWe are working hard to expand ExpressionAble to work with even more file formats! Expect the following formats to be \nincluded in future releases:\n* Fixed-width files (fwf)\n* Genomic Data Commons clinical XML\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/srp33/ExpressionAble", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "expressionable", "package_url": "https://pypi.org/project/expressionable/", "platform": "", "project_url": "https://pypi.org/project/expressionable/", "project_urls": {"Homepage": "https://github.com/srp33/ExpressionAble"}, "release_url": "https://pypi.org/project/expressionable/1.2/", "requires_dist": ["pandas", "pyarrow", "matplotlib", "numpy", "sqlalchemy", "xlsxwriter", "tables", "xlrd", "nbformat", "cmapPy", "tabula-py"], "requires_python": "", "summary": "A tool for managing large datasets", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # expressionable Python Module<br>The official repository for the expressionable Python module, which allows for:<br>* Transforming tabular data sets from one format to another.<br>* Querying large data sets to filter out useful data.<br>* Selecting additional columns/features to include in the resulting data set.<br>* Merging data sets of various formats into a single file.<br>* Gzipping resulting data sets, as well as the ability to read gzipped files.<br><br>Click for information on the [ExpressionAble command-line tool](https://github.com/srp33/ShapeShifter-CLI), which combines<br>the features of ExpressionAble with the ease and speed of the command-line!<br><br>Basic use is described below, but see the full documentation on [Read the Docs](https://shapeshifter.readthedocs.io/en/latest/).  <br>## Install<br>`pip install expressionable`<br><br>## Basic Use<br>After installing, import the ExpressionAble class with `from expressionable import ExpressionAble`. An ExpressionAble object <br>represents the file to be transformed. It is then transformed using the `export_filter_results` method. Here is a simple<br>example of file called `input_file.tsv` being transformed into an HDF5 file called `output_file.h5`, while filtering <br>the data on sex and age:<br>```python<br>from expressionable import ExpressionAble<br><br>my_expressionable = ExpressionAble(\"input_file.tsv\")<br>my_expressionable.export_filter_results(\"output_file.h5\", filters=\"Sex == 'M' and Age &gt; 40\")<br>```<br>Note that the type of file being read and exported to were not stated explicitly but inferred by ExpressionAble based on<br>the file extensions provided. If necessary, `input_file_type` and `output_file_type` can be named explicitly.<br><br><br>## Contributing<br>We welcome contributions that help expand ExpressionAble to be compatible with additional file formats. If you are <br>interested in contributing, please follow the instructions [here](https://github.com/srp33/ExpressionAble/wiki/Adding-Support-for-Additional-File-Types-in-ExpressionAble).<br>## Currently Supported Formats<br>#### Input Formats:<br>* CSV<br>* TSV<br>* JSON<br>* Excel<br>* HDF5<br>* Parquet<br>* MsgPack<br>* Stata<br>* Pickle<br>* SQLite<br>* ARFF<br>* GCT<br>* GCTX<br>* PDF<br>* Kallisto<br>* GEO<br>* StarReads<br><br>#### Output Formats:<br>* CSV <br>* TSV<br>* JSON<br>* Excel<br>* HDF5<br>* Parquet<br>* MsgPack<br>* Stata <br>* Pickle<br>* SQLite <br>* ARFF <br>* GCT <br>* RMarkdown <br>* JupyterNotebook<br><br>## Future Formats to Support<br>We are working hard to expand ExpressionAble to work with even more file formats! Expect the following formats to be <br>included in future releases:<br>* Fixed-width files (fwf)<br>* Genomic Data Commons clinical XML<br><br><br>\n          </div>"}, "last_serial": 5577917, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "9716d922f102ba83a6e029c6b426771c", "sha256": "7dc5a899881129ad6cb781465bb2724b1d2dce0c9276705324b14190bf337933"}, "downloads": -1, "filename": "expressionable-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9716d922f102ba83a6e029c6b426771c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35529, "upload_time": "2019-04-13T19:25:41", "upload_time_iso_8601": "2019-04-13T19:25:41.079165Z", "url": "https://files.pythonhosted.org/packages/e5/6d/209f335445a630057c9df210b970fd463f6346f3c4209cc79de248c1d5a7/expressionable-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebd5379491c82c4fc73f12330f5427fa", "sha256": "2df2099427c0d17b5e77f96f4a2432a89433d9c453d79e4206c14e6863a21628"}, "downloads": -1, "filename": "expressionable-1.0.tar.gz", "has_sig": false, "md5_digest": "ebd5379491c82c4fc73f12330f5427fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20759, "upload_time": "2019-04-13T19:25:43", "upload_time_iso_8601": "2019-04-13T19:25:43.150962Z", "url": "https://files.pythonhosted.org/packages/99/5a/f539e0c538617db4af60a71420e5733e3c78ea3a32584133e224c437af5e/expressionable-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "6a1acb2baf457ab19e59e70951524a28", "sha256": "c6c30441ae15eae1b8591c856bc24f1900ca3eadd802a201e8b730fddf721434"}, "downloads": -1, "filename": "expressionable-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6a1acb2baf457ab19e59e70951524a28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41768, "upload_time": "2019-04-23T17:35:41", "upload_time_iso_8601": "2019-04-23T17:35:41.131566Z", "url": "https://files.pythonhosted.org/packages/7e/52/06594341ff39a5f828c81f816a39832d8b316c039ed308cbe67c4f6c334b/expressionable-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06f2d2cc37d25ef01caf7c370c93e77d", "sha256": "588f60b1cd6067a3e7d80f86b3d2e5408304a2597de2c3e5412747223ee54529"}, "downloads": -1, "filename": "expressionable-1.1.tar.gz", "has_sig": false, "md5_digest": "06f2d2cc37d25ef01caf7c370c93e77d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23904, "upload_time": "2019-04-23T17:35:42", "upload_time_iso_8601": "2019-04-23T17:35:42.569656Z", "url": "https://files.pythonhosted.org/packages/9b/c3/ecc0b89a5d870a254af1e1a82c73619288353de193c8a10ff0c48f52c150/expressionable-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "ee9c8f988e4300e00fc4745db39632a7", "sha256": "4da244b76b621de20e5fba302a0f5e7c7eccc9db3c8586cb3b409fd9f3dd67cd"}, "downloads": -1, "filename": "expressionable-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ee9c8f988e4300e00fc4745db39632a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42050, "upload_time": "2019-04-25T23:30:18", "upload_time_iso_8601": "2019-04-25T23:30:18.674864Z", "url": "https://files.pythonhosted.org/packages/62/e2/b7b0b530491b2042c1fa5fb272eaf3f18cea55717af99db2f3a6284183b3/expressionable-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbf19a69fdbbc31415adf50aeb69e3a1", "sha256": "258f7b970848328755f9102c6e9ec8dc6874f04068020633f73711fc92f82c3f"}, "downloads": -1, "filename": "expressionable-1.2.tar.gz", "has_sig": false, "md5_digest": "dbf19a69fdbbc31415adf50aeb69e3a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24285, "upload_time": "2019-04-25T23:30:20", "upload_time_iso_8601": "2019-04-25T23:30:20.513349Z", "url": "https://files.pythonhosted.org/packages/37/b0/11e2c2fb9503f4419021a7b0cf747fc8671f92458187b4ab7645bee1ecf3/expressionable-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ee9c8f988e4300e00fc4745db39632a7", "sha256": "4da244b76b621de20e5fba302a0f5e7c7eccc9db3c8586cb3b409fd9f3dd67cd"}, "downloads": -1, "filename": "expressionable-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ee9c8f988e4300e00fc4745db39632a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42050, "upload_time": "2019-04-25T23:30:18", "upload_time_iso_8601": "2019-04-25T23:30:18.674864Z", "url": "https://files.pythonhosted.org/packages/62/e2/b7b0b530491b2042c1fa5fb272eaf3f18cea55717af99db2f3a6284183b3/expressionable-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dbf19a69fdbbc31415adf50aeb69e3a1", "sha256": "258f7b970848328755f9102c6e9ec8dc6874f04068020633f73711fc92f82c3f"}, "downloads": -1, "filename": "expressionable-1.2.tar.gz", "has_sig": false, "md5_digest": "dbf19a69fdbbc31415adf50aeb69e3a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24285, "upload_time": "2019-04-25T23:30:20", "upload_time_iso_8601": "2019-04-25T23:30:20.513349Z", "url": "https://files.pythonhosted.org/packages/37/b0/11e2c2fb9503f4419021a7b0cf747fc8671f92458187b4ab7645bee1ecf3/expressionable-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:35 2020"}