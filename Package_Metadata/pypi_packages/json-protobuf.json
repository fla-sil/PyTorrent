{"info": {"author": "Michael Medin", "author_email": "michael@medin.name", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "json-protobuf provides a Json interface to Google's [Protocol Buffers](http://code.google.com/apis/protocolbuffers/) compiled in C++ code.\nThe idea is that you can convert a protocol buffer object to a json representation which can be used in API:s.\n\n# Producing Code\n\njson-protobuf provides a plugin for the _protoc_ protocol buffer compiler (it ships with protocol buffers). This plugin tells _protoc_ to produce a set of C++ output files, which define the JSON interface to protocol buffers using the json-spirit library (other libraries will/coul be supported).\n\nFirst, obtain a copy of json-protobuf:\n\n    $ git clone git@github.com:mickem/json-protobuf.git\n    $ cd json-protobuf\n\nNext, install json-protobuf:\n\n    $ python setup.py install\n\nFinally, launch protoc and tell it to produce Lua output:\n\n    $ protoc -I/path/to/your/proto/files --json_out=/output/path file1.proto file2.proto\n\nYou simply need to add _--json_out_ to the arguments to _protoc_ to get it to produce the Json output files.\n\nUnder the hood, _protoc_ is looking for the program _protoc-gen-json_ somewhere in your $PATH. You can modify $PATH in lieux of installing the package, if you desire.\n\n# Compiling Produced Files\n\nYou should be able to compile the produced .h and .cc files like you would for protocol buffer output files. If you have an existing Makefile, project, etc, just add the produced .h and .cc files to it.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mickem/json-protobuf", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "json-protobuf", "package_url": "https://pypi.org/project/json-protobuf/", "platform": "", "project_url": "https://pypi.org/project/json-protobuf/", "project_urls": {"Homepage": "http://github.com/mickem/json-protobuf"}, "release_url": "https://pypi.org/project/json-protobuf/1.0.0/", "requires_dist": ["protobuf (>=3.0.0)"], "requires_python": ">=3.6", "summary": "Json protocol buffer code generator", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>json-protobuf provides a Json interface to Google's <a href=\"http://code.google.com/apis/protocolbuffers/\" rel=\"nofollow\">Protocol Buffers</a> compiled in C++ code.\nThe idea is that you can convert a protocol buffer object to a json representation which can be used in API:s.</p>\n<h1>Producing Code</h1>\n<p>json-protobuf provides a plugin for the <em>protoc</em> protocol buffer compiler (it ships with protocol buffers). This plugin tells <em>protoc</em> to produce a set of C++ output files, which define the JSON interface to protocol buffers using the json-spirit library (other libraries will/coul be supported).</p>\n<p>First, obtain a copy of json-protobuf:</p>\n<pre><code>$ git clone git@github.com:mickem/json-protobuf.git\n$ cd json-protobuf\n</code></pre>\n<p>Next, install json-protobuf:</p>\n<pre><code>$ python setup.py install\n</code></pre>\n<p>Finally, launch protoc and tell it to produce Lua output:</p>\n<pre><code>$ protoc -I/path/to/your/proto/files --json_out=/output/path file1.proto file2.proto\n</code></pre>\n<p>You simply need to add <em>--json_out</em> to the arguments to <em>protoc</em> to get it to produce the Json output files.</p>\n<p>Under the hood, <em>protoc</em> is looking for the program <em>protoc-gen-json</em> somewhere in your $PATH. You can modify $PATH in lieux of installing the package, if you desire.</p>\n<h1>Compiling Produced Files</h1>\n<p>You should be able to compile the produced .h and .cc files like you would for protocol buffer output files. If you have an existing Makefile, project, etc, just add the produced .h and .cc files to it.</p>\n\n          </div>"}, "last_serial": 5937284, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c5995ef857d40d5414bd09df467940af", "sha256": "0762ff8c0e4b2b64363be5cb82f2ccc3b2a00ceec0f92ac660c5af47584e5184"}, "downloads": -1, "filename": "json_protobuf-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c5995ef857d40d5414bd09df467940af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12496, "upload_time": "2019-10-04T05:59:49", "upload_time_iso_8601": "2019-10-04T05:59:49.053776Z", "url": "https://files.pythonhosted.org/packages/5c/33/2c97ef6fa6dc9612a1a0c23be396fae9777fa167b52ea6f64f93ea65034f/json_protobuf-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e683a550ab30f35bf307e60eb8ee6b5", "sha256": "fdbac55236877da8f4f8392fa5df735e9dfe51f1bee0603c683db67e9ed2284b"}, "downloads": -1, "filename": "json-protobuf-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5e683a550ab30f35bf307e60eb8ee6b5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6722, "upload_time": "2019-10-04T05:59:51", "upload_time_iso_8601": "2019-10-04T05:59:51.481219Z", "url": "https://files.pythonhosted.org/packages/45/dc/1ad678a7e21b54b0aab706ef4a5d8a72257d6a1a5d13258bc21ce7923c7a/json-protobuf-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "f9b399f6b200f3c248aad01c962a5a7d", "sha256": "777830d59a6894b561a1c249dd30537575c252993023032061680aaa45c0e7e5"}, "downloads": -1, "filename": "json_protobuf-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f9b399f6b200f3c248aad01c962a5a7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11781, "upload_time": "2019-10-07T06:36:20", "upload_time_iso_8601": "2019-10-07T06:36:20.784316Z", "url": "https://files.pythonhosted.org/packages/f1/a8/035f4a63125f0dc0edd0c002970d54f1f2eb224c2331413932966fc5e8b2/json_protobuf-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4203ccc055a7fefc0870729684a56136", "sha256": "4e8c88eda096dd29c722fb1f7e19f96fa87ab3e5759f7e836ab801a8cb5c55d2"}, "downloads": -1, "filename": "json-protobuf-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4203ccc055a7fefc0870729684a56136", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5908, "upload_time": "2019-10-07T06:36:21", "upload_time_iso_8601": "2019-10-07T06:36:21.891547Z", "url": "https://files.pythonhosted.org/packages/e0/3c/23937d5979413f63c541de3d849d782da7164e85d6a31bc21251560935e4/json-protobuf-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9b399f6b200f3c248aad01c962a5a7d", "sha256": "777830d59a6894b561a1c249dd30537575c252993023032061680aaa45c0e7e5"}, "downloads": -1, "filename": "json_protobuf-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f9b399f6b200f3c248aad01c962a5a7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11781, "upload_time": "2019-10-07T06:36:20", "upload_time_iso_8601": "2019-10-07T06:36:20.784316Z", "url": "https://files.pythonhosted.org/packages/f1/a8/035f4a63125f0dc0edd0c002970d54f1f2eb224c2331413932966fc5e8b2/json_protobuf-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4203ccc055a7fefc0870729684a56136", "sha256": "4e8c88eda096dd29c722fb1f7e19f96fa87ab3e5759f7e836ab801a8cb5c55d2"}, "downloads": -1, "filename": "json-protobuf-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4203ccc055a7fefc0870729684a56136", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5908, "upload_time": "2019-10-07T06:36:21", "upload_time_iso_8601": "2019-10-07T06:36:21.891547Z", "url": "https://files.pythonhosted.org/packages/e0/3c/23937d5979413f63c541de3d849d782da7164e85d6a31bc21251560935e4/json-protobuf-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:43 2020"}