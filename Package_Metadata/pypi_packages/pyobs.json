{"info": {"author": "Adri\u00e1n \"Adirio\" Orive", "author_email": "adrian.orive.oneca@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries"], "description": "# pyobs\nPython library to communicate with an [obs-websocket](https://github.com/Palakis/obs-websocket) server.\n\n_Licensed under the MIT License_\n\n## Project pages\n\nGitHub project: https://github.com/Adirio/pyobs\n\nPyPI package: https://pypi.python.org/pypi/pyobs\n\n## Installation\n\nJust run `pip install pyobs` in your Python venv or directly on your system.\n\nFor manual install, git clone the github repo and copy the directory **obswebsocket** in your python project root.\n\n**Requires**: websocket-client (from pip)\n\n## Usage\n\nSee python scripts in the [samples](https://github.com/Adirio/pyobs/tree/master/samples) directory.\n\nOr take a look at the documentation below:\n\n_Output of `pydoc pyobs.Client`:_\n\n```\nHelp on class Client in pyobs:\n\npyobs.Client = class Client(builtins.object)\n |  Core class for using pyobs\n |\n |  Simple usage:\n |      >>> from pyobs import Client, requests as obsrequests\n |      >>> client = Client(\"localhost\", 4444, \"secret\")\n |      >>> client.connect()\n |      >>> client.call(obsrequests.GetVersion()).getObsWebsocketVersion()\n |      u'4.1.0'\n |      >>> client.disconnect()\n |\n |  For advanced usage, including events callback, see the 'samples' directory.\n |\n |  Methods defined here:\n |\n |  __init__(self, host='localhost', port=4444, password='')\n |      Construct a new Client wrapper\n |\n |      :param host: Hostname to connect to\n |      :param port: TCP Port to connect to (Default is 4444)\n |      :param password: Password for the websocket server (Leave this field\n |          empty if no auth enabled on the server)\n |\n |  call(self, obj)\n |      Make a call to the OBS server through the Websocket.\n |\n |      :param obj: Request (class from obswebsocket.requests module) to send\n |          to the server.\n |      :return: Request object populated with response data.\n |\n |  connect(self, host=None, port=None)\n |      Connect to the websocket server\n |\n |      :return: Nothing\n |\n |  disconnect(self)\n |      Disconnect from websocket server\n |\n |      :return: Nothing\n |\n |  reconnect(self)\n |      Restart the connection to the websocket server\n |\n |      :return: Nothing\n |\n |  register(self, func, event=None)\n |      Register a new hook in the websocket client\n |\n |      :param func: Callback function pointer for the hook\n |      :param event: Event (class from obswebsocket.events module) to trigger\n |          the hook on. Default is None, which means trigger on all events.\n |      :return: Nothing\n |\n |  send(self, data)\n |      Make a raw json call to the OBS server through the Websocket.\n |\n |      :param data: Request (python dict) to send to the server. Do not\n |          include field \"message-id\".\n |      :return: Response (python dict) from the server.\n |\n |  unregister(self, func, event=None)\n |      Unregister a new hook in the websocket client\n |\n |      :param func: Callback function pointer for the hook\n |      :param event: Event (class from obswebsocket.events module) which\n |          triggered the hook on. Default is None, which means unregister this\n |          function for all events.\n |      :return: Nothing\n |\n |  ----------------------------------------------------------------------\n |  Data descriptors defined here:\n |\n |  __dict__\n |      dictionary for instance variables (if defined)\n |\n |  __weakref__\n |      list of weak references to the object (if defined)\n```\n\n## Problems?\n\nPlease check on [Github project issues](https://github.com/Adirio/pyobs/issues), and if nobody else have experienced it \nbefore, you can [file a new issue](https://github.com/Adirio/pyobs/issues/new).\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Adirio/pyobs/archive/0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Adirio/pyobs", "keywords": "obs,obs-studio,websocket", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyobs", "package_url": "https://pypi.org/project/pyobs/", "platform": "", "project_url": "https://pypi.org/project/pyobs/", "project_urls": {"Download": "https://github.com/Adirio/pyobs/archive/0.1.tar.gz", "Homepage": "https://github.com/Adirio/pyobs"}, "release_url": "https://pypi.org/project/pyobs/0.1/", "requires_dist": ["websocket-client", "six"], "requires_python": "", "summary": "Python library to communicate with an obs-websocket server.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyobs</h1>\n<p>Python library to communicate with an <a href=\"https://github.com/Palakis/obs-websocket\" rel=\"nofollow\">obs-websocket</a> server.</p>\n<p><em>Licensed under the MIT License</em></p>\n<h2>Project pages</h2>\n<p>GitHub project: <a href=\"https://github.com/Adirio/pyobs\" rel=\"nofollow\">https://github.com/Adirio/pyobs</a></p>\n<p>PyPI package: <a href=\"https://pypi.python.org/pypi/pyobs\" rel=\"nofollow\">https://pypi.python.org/pypi/pyobs</a></p>\n<h2>Installation</h2>\n<p>Just run <code>pip install pyobs</code> in your Python venv or directly on your system.</p>\n<p>For manual install, git clone the github repo and copy the directory <strong>obswebsocket</strong> in your python project root.</p>\n<p><strong>Requires</strong>: websocket-client (from pip)</p>\n<h2>Usage</h2>\n<p>See python scripts in the <a href=\"https://github.com/Adirio/pyobs/tree/master/samples\" rel=\"nofollow\">samples</a> directory.</p>\n<p>Or take a look at the documentation below:</p>\n<p><em>Output of <code>pydoc pyobs.Client</code>:</em></p>\n<pre><code>Help on class Client in pyobs:\n\npyobs.Client = class Client(builtins.object)\n |  Core class for using pyobs\n |\n |  Simple usage:\n |      &gt;&gt;&gt; from pyobs import Client, requests as obsrequests\n |      &gt;&gt;&gt; client = Client(\"localhost\", 4444, \"secret\")\n |      &gt;&gt;&gt; client.connect()\n |      &gt;&gt;&gt; client.call(obsrequests.GetVersion()).getObsWebsocketVersion()\n |      u'4.1.0'\n |      &gt;&gt;&gt; client.disconnect()\n |\n |  For advanced usage, including events callback, see the 'samples' directory.\n |\n |  Methods defined here:\n |\n |  __init__(self, host='localhost', port=4444, password='')\n |      Construct a new Client wrapper\n |\n |      :param host: Hostname to connect to\n |      :param port: TCP Port to connect to (Default is 4444)\n |      :param password: Password for the websocket server (Leave this field\n |          empty if no auth enabled on the server)\n |\n |  call(self, obj)\n |      Make a call to the OBS server through the Websocket.\n |\n |      :param obj: Request (class from obswebsocket.requests module) to send\n |          to the server.\n |      :return: Request object populated with response data.\n |\n |  connect(self, host=None, port=None)\n |      Connect to the websocket server\n |\n |      :return: Nothing\n |\n |  disconnect(self)\n |      Disconnect from websocket server\n |\n |      :return: Nothing\n |\n |  reconnect(self)\n |      Restart the connection to the websocket server\n |\n |      :return: Nothing\n |\n |  register(self, func, event=None)\n |      Register a new hook in the websocket client\n |\n |      :param func: Callback function pointer for the hook\n |      :param event: Event (class from obswebsocket.events module) to trigger\n |          the hook on. Default is None, which means trigger on all events.\n |      :return: Nothing\n |\n |  send(self, data)\n |      Make a raw json call to the OBS server through the Websocket.\n |\n |      :param data: Request (python dict) to send to the server. Do not\n |          include field \"message-id\".\n |      :return: Response (python dict) from the server.\n |\n |  unregister(self, func, event=None)\n |      Unregister a new hook in the websocket client\n |\n |      :param func: Callback function pointer for the hook\n |      :param event: Event (class from obswebsocket.events module) which\n |          triggered the hook on. Default is None, which means unregister this\n |          function for all events.\n |      :return: Nothing\n |\n |  ----------------------------------------------------------------------\n |  Data descriptors defined here:\n |\n |  __dict__\n |      dictionary for instance variables (if defined)\n |\n |  __weakref__\n |      list of weak references to the object (if defined)\n</code></pre>\n<h2>Problems?</h2>\n<p>Please check on <a href=\"https://github.com/Adirio/pyobs/issues\" rel=\"nofollow\">Github project issues</a>, and if nobody else have experienced it\nbefore, you can <a href=\"https://github.com/Adirio/pyobs/issues/new\" rel=\"nofollow\">file a new issue</a>.</p>\n\n          </div>"}, "last_serial": 5813581, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4d8b7b50aabdec52d165a316970bae32", "sha256": "5c6fe613f715f714663228df3ebd5b78ed1ffc9c5984666995f46063acc9b057"}, "downloads": -1, "filename": "pyobs-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d8b7b50aabdec52d165a316970bae32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22951, "upload_time": "2019-09-11T08:17:19", "upload_time_iso_8601": "2019-09-11T08:17:19.177445Z", "url": "https://files.pythonhosted.org/packages/57/36/f63e8e878eef91363936c175f3183cf7cd2ab70b8b6a762e44f529443b19/pyobs-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "053be0e5ddb093511f62038f76fb7b3f", "sha256": "60f69dc65f761ce83da0afe30d84572d8ad5dab2178ae2966c9e4cf42a935a6e"}, "downloads": -1, "filename": "pyobs-0.1.tar.gz", "has_sig": false, "md5_digest": "053be0e5ddb093511f62038f76fb7b3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23432, "upload_time": "2019-09-11T08:17:22", "upload_time_iso_8601": "2019-09-11T08:17:22.288586Z", "url": "https://files.pythonhosted.org/packages/68/bb/58bcb907555e27e07ef7c31d83dde9ff4198bb10cbb5ee93ec72a1bd9606/pyobs-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d8b7b50aabdec52d165a316970bae32", "sha256": "5c6fe613f715f714663228df3ebd5b78ed1ffc9c5984666995f46063acc9b057"}, "downloads": -1, "filename": "pyobs-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d8b7b50aabdec52d165a316970bae32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22951, "upload_time": "2019-09-11T08:17:19", "upload_time_iso_8601": "2019-09-11T08:17:19.177445Z", "url": "https://files.pythonhosted.org/packages/57/36/f63e8e878eef91363936c175f3183cf7cd2ab70b8b6a762e44f529443b19/pyobs-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "053be0e5ddb093511f62038f76fb7b3f", "sha256": "60f69dc65f761ce83da0afe30d84572d8ad5dab2178ae2966c9e4cf42a935a6e"}, "downloads": -1, "filename": "pyobs-0.1.tar.gz", "has_sig": false, "md5_digest": "053be0e5ddb093511f62038f76fb7b3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23432, "upload_time": "2019-09-11T08:17:22", "upload_time_iso_8601": "2019-09-11T08:17:22.288586Z", "url": "https://files.pythonhosted.org/packages/68/bb/58bcb907555e27e07ef7c31d83dde9ff4198bb10cbb5ee93ec72a1bd9606/pyobs-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:27 2020"}