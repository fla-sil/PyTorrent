{"info": {"author": "Eileen Kuehn, Max Fischer", "author_email": "mainekuehn@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Adaptive Technologies", "Topic :: Office/Business :: Scheduling", "Topic :: System :: Distributed Computing"], "description": "===============================================================================\nLapis is an adaptable, performant, and interactive scheduling (Lapis) simulator\n===============================================================================\n\nThe ``lapis`` library provides a framework and runtime for simulating the scheduling and usage of opportunistic\nand static resources.\n\nCommand Line Interface\n----------------------\n\nCurrently the library provides a simple command line interface that allows three modes of operation:\n\n* static provisioning of resources,\n* dynamic provisioning of resources, and\n* hybrid provisioning of resources.\n\nIn the most simple case you can apply a given workload, e.g. downloaded from the parallel workload archive to a\nstatic resource configuration:\n\n\n.. code:: bash\n\n    python3 simulate.py --log-file - static --job-file <path-to-workload> swf --pool-file <path-to-pool-definition> htcondor\n\nThe output of simulation is given to stdout. You have further options you can explore via\n\n.. code:: bash\n\n    python3 simulate.py --help\n\nand more specifically for the different operation modes with\n\n.. code:: bash\n\n    python3 simulate.py static --help\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MatterMiners/lapis", "keywords": "htcondor simulation python cobald tardis opportunistic scheduling scheduler", "license": "", "maintainer": "", "maintainer_email": "", "name": "lapis-sim", "package_url": "https://pypi.org/project/lapis-sim/", "platform": "", "project_url": "https://pypi.org/project/lapis-sim/", "project_urls": {"Documentation": "https://lapis-sim.readthedocs.io/en/latest/", "Homepage": "https://github.com/MatterMiners/lapis"}, "release_url": "https://pypi.org/project/lapis-sim/0.3.0/", "requires_dist": ["cobald", "usim == 0.4", "click", "pre-commit; extra == \"dev\"", "sphinx; extra == \"doc\"", "sphinx_rtd_theme; extra == \"doc\"", "pytest >=4.3.0; extra == \"test\"", "flake8; extra == \"test\"", "flake8-bugbear; extra == \"test\"", "black; extra == \"test\""], "requires_python": "", "summary": "Lapis is an adaptable, performant, and interactive scheduling (Lapis) simulator", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <tt>lapis</tt> library provides a framework and runtime for simulating the scheduling and usage of opportunistic\nand static resources.</p>\n<div id=\"command-line-interface\">\n<h2>Command Line Interface</h2>\n<p>Currently the library provides a simple command line interface that allows three modes of operation:</p>\n<ul>\n<li>static provisioning of resources,</li>\n<li>dynamic provisioning of resources, and</li>\n<li>hybrid provisioning of resources.</li>\n</ul>\n<p>In the most simple case you can apply a given workload, e.g. downloaded from the parallel workload archive to a\nstatic resource configuration:</p>\n<pre>python3 simulate.py --log-file - static --job-file &lt;path-to-workload&gt; swf --pool-file &lt;path-to-pool-definition&gt; htcondor\n</pre>\n<p>The output of simulation is given to stdout. You have further options you can explore via</p>\n<pre>python3 simulate.py --help\n</pre>\n<p>and more specifically for the different operation modes with</p>\n<pre>python3 simulate.py static --help\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6038561, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "212a8ddd51fe639f5cb6f8f04286a5b3", "sha256": "04287e22d7aabfdc7961a38da272a6f9ced8f05f836d86f290b7decb49c1957f"}, "downloads": -1, "filename": "lapis_sim-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "212a8ddd51fe639f5cb6f8f04286a5b3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 52578, "upload_time": "2019-10-24T20:25:26", "upload_time_iso_8601": "2019-10-24T20:25:26.069008Z", "url": "https://files.pythonhosted.org/packages/38/2e/faffa131a60bd2e0a64a03d6a1fc92e7111ea96ed0f44d76e192c22e4c10/lapis_sim-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "408e560e009ba9dde48ef34a273782da", "sha256": "c31013d704b7c981329ee1a05ffa72e837aad7a1f4bb11b915d2becec7df9af3"}, "downloads": -1, "filename": "lapis-sim-0.1.1.tar.gz", "has_sig": false, "md5_digest": "408e560e009ba9dde48ef34a273782da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23781, "upload_time": "2019-10-24T20:25:32", "upload_time_iso_8601": "2019-10-24T20:25:32.787607Z", "url": "https://files.pythonhosted.org/packages/a2/90/c334e5b9e13383f9a42f717b6355053259f39d4fbf164ce37aa2daff01c8/lapis-sim-0.1.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "0a78d24eae7fa45e90148f09e22578d6", "sha256": "4cc92b667fbd7704daed793842646ab157a7a96bc2229da615bb35719b217042"}, "downloads": -1, "filename": "lapis_sim-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0a78d24eae7fa45e90148f09e22578d6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57622, "upload_time": "2019-10-27T22:07:05", "upload_time_iso_8601": "2019-10-27T22:07:05.316843Z", "url": "https://files.pythonhosted.org/packages/8f/83/956a1e41b0480a4e26842db0eadd007e9253661afabeefbb5fc9085ca841/lapis_sim-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5564cb046cd3b3c439c36dac48faeae9", "sha256": "c8e7af402d6b08478b7fb359f00ad86f27ddcaf380ef1ba2b9a308458c884786"}, "downloads": -1, "filename": "lapis-sim-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5564cb046cd3b3c439c36dac48faeae9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25369, "upload_time": "2019-10-27T22:07:09", "upload_time_iso_8601": "2019-10-27T22:07:09.713387Z", "url": "https://files.pythonhosted.org/packages/90/ea/99ae409539e5ff82e9efb799606da2c9df7e8bb1f253f36d25c3790be82e/lapis-sim-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a78d24eae7fa45e90148f09e22578d6", "sha256": "4cc92b667fbd7704daed793842646ab157a7a96bc2229da615bb35719b217042"}, "downloads": -1, "filename": "lapis_sim-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0a78d24eae7fa45e90148f09e22578d6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57622, "upload_time": "2019-10-27T22:07:05", "upload_time_iso_8601": "2019-10-27T22:07:05.316843Z", "url": "https://files.pythonhosted.org/packages/8f/83/956a1e41b0480a4e26842db0eadd007e9253661afabeefbb5fc9085ca841/lapis_sim-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5564cb046cd3b3c439c36dac48faeae9", "sha256": "c8e7af402d6b08478b7fb359f00ad86f27ddcaf380ef1ba2b9a308458c884786"}, "downloads": -1, "filename": "lapis-sim-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5564cb046cd3b3c439c36dac48faeae9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25369, "upload_time": "2019-10-27T22:07:09", "upload_time_iso_8601": "2019-10-27T22:07:09.713387Z", "url": "https://files.pythonhosted.org/packages/90/ea/99ae409539e5ff82e9efb799606da2c9df7e8bb1f253f36d25c3790be82e/lapis-sim-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:54 2020"}