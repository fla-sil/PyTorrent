{"info": {"author": "JeanMichel FRANCOIS aka toutpt", "author_email": "toutpt@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.0", "Framework :: Plone :: 4.1", "Framework :: Plone :: 4.2", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "Framework :: Zope2", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "Introduction\n============\n\nThis add-on does not provide feature to Plone.\nIt is intended to plone add-ons developers.\n\nIt provides base class to let your view being configurable (ie have 'settings').\n\nFeatures:\n\n* Configuration providers\n* Configuration structure defined with zope.interface & zope.schema\n* Store configuration using plugins\n* Generated form from the schema to let owner configure the current view\n\nNotes on VERSIONS\n=================\n\n\n.. image:: https://secure.travis-ci.org/collective/collective.configviews.png\n    :target: http://travis-ci.org/collective/collective.configviews\n\n\n3.0 is a back to 1.0.\n\n2.0 branch was about to use plone.app.registry on the context using\ncollective.registry. After doing this the addon loose the ability to have\noptimized settings (mixin of globals and locals). So lets revert this and\ncontinue the 1.0 in 3.0 !\n\nWhy doing this in an add-on\n===========================\n\nBecause most of the time developers faced to this issue store data in the\ncontent type, or with annotation on context without trying to optimize,\nor without form, ...\n\nHow it works\n============\n\nThis add-ons define three components:\n\n* ConfigurableView\n* ConfigurationProvider\n* ConfigurationMutator\n\nThe main idea, is you just have to create an zope.interface to define settings\nschema and set this schema in the 'settings_schema' attributes of the view.\n\nFor example::\n\n    class IMyViewSettings(interface.Interface):\n        width = schema.ASCIILine(title=u\"Width\",\n                                 default='620')\n\n        height = schema.ASCIILine(title=u\"Height\",\n                                  default='620')\n\n    class MyView(ConfigurableBaseView):\n        settings_schema = IMyViewSettings\n\n        def width(self):\n            return self.settings.width\n\n        def height(self):\n            return self.settings.height\n\n\nIConfigurationProvider\n======================\n\nThis component is responsible to return settings.\nIt has been implemented in different adapters\n\nProvider (no named adapter): this provider load default values from the\ninterface fields defaults values and it let other providers override values.\nIt is an aggregation of all providers specified in the view throw the\nsettings_providers attribute. Warning: The order is important, each settings\nare taken from the last provider which provide it.\n\n'site.plone.app.registry': this provider return values from plone.app.registry\n(you have to register your settings_schema as records in registry.xml)\n\n'context.zope.app.annotation': this provider return values stored in annotation\non the context of the view.\n\nIConfigurationMutator\n=====================\n\nThis component is an extension of IConfigurationProvider with the write\nsettings capabilities (throw its 'set' method).\n\n'context.zope.app.annontation': this mutator store the configuration in\nthe context of the view.\n\nIConfigurableView\n=================\n\nThis component is implemented in a browserview you are supposed to inherits\nfrom in your own browser view.\n\nThe default behavior is to use 'context.zope.app.annotation' as mutator and\nthe following providers:\n\n* site.plone.app.registry\n* context.zope.app.annotation\n\nCommon use case: use a javascript library for a view\n====================================================\n\nMost of javascript libraries wait for a dict to load their configuration. You\ncan achieve this in a very easy way. You just have to define a configuration\nschema and add the following snippet in your template to create a javascript\nvariable with the configuration ::\n\n  <script type=\"text/javascript\" tal:content=\"view/settings_javascripts\"></script>\n\nYou can set the variable name throw the jsvarname attribute of your browserview.\n\nYou will find examples in the following addons:\n\n* collective.galleria\n* collective.galleriffic\n* collective.googledocsviewer\n\nCredits\n=======\n\nCompanies\n---------\n\n|makinacom|_\n\n* `Planet Makina Corpus <http://www.makina-corpus.org>`_\n* `Contact us <mailto:python@makina-corpus.org>`_\n\nPeople\n------\n\n- JeanMichel FRANCOIS aka toutpt <toutpt@gmail.com>\n- Radim Novotny aka naro\n- Luca Fabbri aka keul <luca@keul.it>\n\n.. |makinacom| image:: http://depot.makina-corpus.org/public/logo.gif\n.. _makinacom:  http://www.makina-corpus.com\n\nChangelog\n=========\n\n3.1.0 (2016-08-23)\n------------------\n\n- When configuration is changed, an ``IConfigurationChangedEvent`` event is fired\n  [keul]\n- When view settings is modified also store a modification date inside a ``__modified__`` key.\n  This may help in rare cases when you need to check if configuration is \"fresh\"\n  [keul]\n\n3.0.3 (2016-05-12)\n------------------\n\n- Added italian translation\n  [keul]\n- Fixed i18n machinery\n  [keul]\n- Add uninstall profile.\n  [thet]\n\n\n3.0.2 (2013-04-30)\n------------------\n\n- Fix configuration error by forcing the load zcml of CMFDynamicViewFTI [toutpt]\n\n\n3.0.1 (2013-04-29)\n------------------\n\n- protect configviews form with a permission [toutpt]\n\n\n3.0 (2013-03-25)\n----------------\n\n- add support for viewlet [toutpt]\n\n\n3.0a1 (2013-02-15)\n------------------\n\n- Revert to 1.0 internal design. [toutpt]\n\n\n2.0 (2012-01-30)\n----------------\n\n- Use collective.registry instead of provider/mutator [toutpt]\n\n1.0b4 (2011-12-07)\n------------------\n\n- add new classifiers [toutpt]\n- fix tests [toutpt]\n- fix issue making edit configuration not working [naro]\n\n1.0b3 (2011-08-01)\n------------------\n\n- Optimization of storage: defaults are now based on all provider except zope.app.annotation\n  [toutpt]\n- fix case where site.plone.app.registry are not set (value was set to None)\n  [toutpt]\n\n1.0b2 (2011-06-30)\n------------------\n\n- Fix config form (http://stackoverflow.com/q/6524304/622081)\n\n\n1.0b1 (2011-06-08)\n------------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.configviews", "keywords": "plone configuration view", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.configviews", "package_url": "https://pypi.org/project/collective.configviews/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.configviews/", "project_urls": {"Homepage": "https://github.com/collective/collective.configviews"}, "release_url": "https://pypi.org/project/collective.configviews/3.1.0/", "requires_dist": null, "requires_python": "", "summary": "Manage configuration of browser views", "version": "3.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This add-on does not provide feature to Plone.\nIt is intended to plone add-ons developers.</p>\n<p>It provides base class to let your view being configurable (ie have \u2018settings\u2019).</p>\n<p>Features:</p>\n<ul>\n<li>Configuration providers</li>\n<li>Configuration structure defined with zope.interface &amp; zope.schema</li>\n<li>Store configuration using plugins</li>\n<li>Generated form from the schema to let owner configure the current view</li>\n</ul>\n</div>\n<div id=\"notes-on-versions\">\n<h2>Notes on VERSIONS</h2>\n<a href=\"http://travis-ci.org/collective/collective.configviews\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/collective/collective.configviews.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cea2f036fe88dedc983a81708ca1cad86dd7354a/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f636f6c6c6563746976652f636f6c6c6563746976652e636f6e66696776696577732e706e67\"></a>\n<p>3.0 is a back to 1.0.</p>\n<p>2.0 branch was about to use plone.app.registry on the context using\ncollective.registry. After doing this the addon loose the ability to have\noptimized settings (mixin of globals and locals). So lets revert this and\ncontinue the 1.0 in 3.0 !</p>\n</div>\n<div id=\"why-doing-this-in-an-add-on\">\n<h2>Why doing this in an add-on</h2>\n<p>Because most of the time developers faced to this issue store data in the\ncontent type, or with annotation on context without trying to optimize,\nor without form, \u2026</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<p>This add-ons define three components:</p>\n<ul>\n<li>ConfigurableView</li>\n<li>ConfigurationProvider</li>\n<li>ConfigurationMutator</li>\n</ul>\n<p>The main idea, is you just have to create an zope.interface to define settings\nschema and set this schema in the \u2018settings_schema\u2019 attributes of the view.</p>\n<p>For example:</p>\n<pre>class IMyViewSettings(interface.Interface):\n    width = schema.ASCIILine(title=u\"Width\",\n                             default='620')\n\n    height = schema.ASCIILine(title=u\"Height\",\n                              default='620')\n\nclass MyView(ConfigurableBaseView):\n    settings_schema = IMyViewSettings\n\n    def width(self):\n        return self.settings.width\n\n    def height(self):\n        return self.settings.height\n</pre>\n</div>\n<div id=\"iconfigurationprovider\">\n<h2>IConfigurationProvider</h2>\n<p>This component is responsible to return settings.\nIt has been implemented in different adapters</p>\n<p>Provider (no named adapter): this provider load default values from the\ninterface fields defaults values and it let other providers override values.\nIt is an aggregation of all providers specified in the view throw the\nsettings_providers attribute. Warning: The order is important, each settings\nare taken from the last provider which provide it.</p>\n<p>\u2018site.plone.app.registry\u2019: this provider return values from plone.app.registry\n(you have to register your settings_schema as records in registry.xml)</p>\n<p>\u2018context.zope.app.annotation\u2019: this provider return values stored in annotation\non the context of the view.</p>\n</div>\n<div id=\"iconfigurationmutator\">\n<h2>IConfigurationMutator</h2>\n<p>This component is an extension of IConfigurationProvider with the write\nsettings capabilities (throw its \u2018set\u2019 method).</p>\n<p>\u2018context.zope.app.annontation\u2019: this mutator store the configuration in\nthe context of the view.</p>\n</div>\n<div id=\"iconfigurableview\">\n<h2>IConfigurableView</h2>\n<p>This component is implemented in a browserview you are supposed to inherits\nfrom in your own browser view.</p>\n<p>The default behavior is to use \u2018context.zope.app.annotation\u2019 as mutator and\nthe following providers:</p>\n<ul>\n<li>site.plone.app.registry</li>\n<li>context.zope.app.annotation</li>\n</ul>\n</div>\n<div id=\"common-use-case-use-a-javascript-library-for-a-view\">\n<h2>Common use case: use a javascript library for a view</h2>\n<p>Most of javascript libraries wait for a dict to load their configuration. You\ncan achieve this in a very easy way. You just have to define a configuration\nschema and add the following snippet in your template to create a javascript\nvariable with the configuration</p>\n<pre>&lt;script type=\"text/javascript\" tal:content=\"view/settings_javascripts\"&gt;&lt;/script&gt;\n</pre>\n<p>You can set the variable name throw the jsvarname attribute of your browserview.</p>\n<p>You will find examples in the following addons:</p>\n<ul>\n<li>collective.galleria</li>\n<li>collective.galleriffic</li>\n<li>collective.googledocsviewer</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<div id=\"companies\">\n<h3>Companies</h3>\n<p><a href=\"http://www.makina-corpus.com\" rel=\"nofollow\"><img alt=\"makinacom\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a7ff2c6fc5ab8cd2f425946f19dbfbf0aa4c1d7/687474703a2f2f6465706f742e6d616b696e612d636f727075732e6f72672f7075626c69632f6c6f676f2e676966\"></a></p>\n<ul>\n<li><a href=\"http://www.makina-corpus.org\" rel=\"nofollow\">Planet Makina Corpus</a></li>\n<li><a href=\"mailto:python%40makina-corpus.org\">Contact us</a></li>\n</ul>\n</div>\n<div id=\"people\">\n<h3>People</h3>\n<ul>\n<li>JeanMichel FRANCOIS aka toutpt &lt;<a href=\"mailto:toutpt%40gmail.com\">toutpt<span>@</span>gmail<span>.</span>com</a>&gt;</li>\n<li>Radim Novotny aka naro</li>\n<li>Luca Fabbri aka keul &lt;<a href=\"mailto:luca%40keul.it\">luca<span>@</span>keul<span>.</span>it</a>&gt;</li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>3.1.0 (2016-08-23)</h3>\n<ul>\n<li>When configuration is changed, an <tt>IConfigurationChangedEvent</tt> event is fired\n[keul]</li>\n<li>When view settings is modified also store a modification date inside a <tt>__modified__</tt> key.\nThis may help in rare cases when you need to check if configuration is \u201cfresh\u201d\n[keul]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>3.0.3 (2016-05-12)</h3>\n<ul>\n<li>Added italian translation\n[keul]</li>\n<li>Fixed i18n machinery\n[keul]</li>\n<li>Add uninstall profile.\n[thet]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>3.0.2 (2013-04-30)</h3>\n<ul>\n<li>Fix configuration error by forcing the load zcml of CMFDynamicViewFTI [toutpt]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>3.0.1 (2013-04-29)</h3>\n<ul>\n<li>protect configviews form with a permission [toutpt]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>3.0 (2013-03-25)</h3>\n<ul>\n<li>add support for viewlet [toutpt]</li>\n</ul>\n</div>\n<div id=\"a1-2013-02-15\">\n<h3>3.0a1 (2013-02-15)</h3>\n<ul>\n<li>Revert to 1.0 internal design. [toutpt]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>2.0 (2012-01-30)</h3>\n<ul>\n<li>Use collective.registry instead of provider/mutator [toutpt]</li>\n</ul>\n</div>\n<div id=\"b4-2011-12-07\">\n<h3>1.0b4 (2011-12-07)</h3>\n<ul>\n<li>add new classifiers [toutpt]</li>\n<li>fix tests [toutpt]</li>\n<li>fix issue making edit configuration not working [naro]</li>\n</ul>\n</div>\n<div id=\"b3-2011-08-01\">\n<h3>1.0b3 (2011-08-01)</h3>\n<ul>\n<li>Optimization of storage: defaults are now based on all provider except zope.app.annotation\n[toutpt]</li>\n<li>fix case where site.plone.app.registry are not set (value was set to None)\n[toutpt]</li>\n</ul>\n</div>\n<div id=\"b2-2011-06-30\">\n<h3>1.0b2 (2011-06-30)</h3>\n<ul>\n<li>Fix config form (<a href=\"http://stackoverflow.com/q/6524304/622081\" rel=\"nofollow\">http://stackoverflow.com/q/6524304/622081</a>)</li>\n</ul>\n</div>\n<div id=\"b1-2011-06-08\">\n<h3>1.0b1 (2011-06-08)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3422856, "releases": {"1.0b1": [{"comment_text": "", "digests": {"md5": "a97195b3df572e5176c43160dab41486", "sha256": "5a9725bdb5588fcd60e8101e1f3e981213bb36573c110ad96f83285bc2235afd"}, "downloads": -1, "filename": "collective.configviews-1.0b1.tar.gz", "has_sig": false, "md5_digest": "a97195b3df572e5176c43160dab41486", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11611, "upload_time": "2011-06-08T16:53:44", "upload_time_iso_8601": "2011-06-08T16:53:44.016417Z", "url": "https://files.pythonhosted.org/packages/6f/33/2ad27522d84048c663044658691cd2d1569a542070823216e948c5816dc6/collective.configviews-1.0b1.tar.gz", "yanked": false}], "1.0b2": [{"comment_text": "", "digests": {"md5": "e9d17498dced9cb88b41e43c16ff0f79", "sha256": "64f28c4bfb98a2618fb92441737bed8e3ccd34c57fe38bf01133cdbcf34b8e28"}, "downloads": -1, "filename": "collective.configviews-1.0b2.tar.gz", "has_sig": false, "md5_digest": "e9d17498dced9cb88b41e43c16ff0f79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11982, "upload_time": "2011-06-30T09:53:00", "upload_time_iso_8601": "2011-06-30T09:53:00.897766Z", "url": "https://files.pythonhosted.org/packages/65/1b/b076e51bb5dfe043f24d1c8c6d6644ee97b54081da982f7eed055dd5afba/collective.configviews-1.0b2.tar.gz", "yanked": false}], "1.0b3": [{"comment_text": "", "digests": {"md5": "22744d004790754c2c2eb3b495e06544", "sha256": "6c92a09cc2c79190e20fc72ad6fd307b9f87975230cdee03836d977f3eec8bdd"}, "downloads": -1, "filename": "collective.configviews-1.0b3.tar.gz", "has_sig": false, "md5_digest": "22744d004790754c2c2eb3b495e06544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12231, "upload_time": "2011-08-01T17:52:24", "upload_time_iso_8601": "2011-08-01T17:52:24.250571Z", "url": "https://files.pythonhosted.org/packages/e9/fc/7340a97685d91a97dacbee6ce75076eba3bbfa197efbf328108fb5962b66/collective.configviews-1.0b3.tar.gz", "yanked": false}], "1.0b4": [{"comment_text": "", "digests": {"md5": "418587c2dba08eaf986e13ebf2fa3523", "sha256": "8cd37a21a45591500b95ac2be30a161a1178e61a6a6b462c493e7167a27d83d3"}, "downloads": -1, "filename": "collective.configviews-1.0b4.tar.gz", "has_sig": false, "md5_digest": "418587c2dba08eaf986e13ebf2fa3523", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22549, "upload_time": "2011-12-07T14:24:08", "upload_time_iso_8601": "2011-12-07T14:24:08.633030Z", "url": "https://files.pythonhosted.org/packages/a0/88/a1b2e7072916643668bfed6f708e2a6b93d46063b9df94562d7021ca688f/collective.configviews-1.0b4.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "d9880e6288f40017c14c2588a8e6cf70", "sha256": "cb94bfb3b0d00806e412332ad1657b7bada975a6ec4aabc7d0441df60e8890cc"}, "downloads": -1, "filename": "collective.configviews-2.0.tar.gz", "has_sig": false, "md5_digest": "d9880e6288f40017c14c2588a8e6cf70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22501, "upload_time": "2012-01-30T22:31:46", "upload_time_iso_8601": "2012-01-30T22:31:46.889938Z", "url": "https://files.pythonhosted.org/packages/42/70/fbf42fb3b936c9ea1b6211833b447d669382c60efe59a28f10e9ab9b2f5a/collective.configviews-2.0.tar.gz", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "c40912492c8ea6e284b0352833f4c9e8", "sha256": "fabcb1fc9fa94a9310e0d19f1b0b4381c70cd83edf132d25a8fa47d708a8500c"}, "downloads": -1, "filename": "collective.configviews-3.0.zip", "has_sig": false, "md5_digest": "c40912492c8ea6e284b0352833f4c9e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27633, "upload_time": "2013-03-25T11:12:43", "upload_time_iso_8601": "2013-03-25T11:12:43.595845Z", "url": "https://files.pythonhosted.org/packages/7f/e8/88b962090dc0e987487c408e300e10b654c34ab789b532d7343911d6918d/collective.configviews-3.0.zip", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "8bfca6b6922e57224e1a20be74d02d34", "sha256": "50a9d07871fcdd0995bf8f7de92a4505814cfd16013c90ddc162b29141a1d779"}, "downloads": -1, "filename": "collective.configviews-3.0.1.zip", "has_sig": false, "md5_digest": "8bfca6b6922e57224e1a20be74d02d34", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28000, "upload_time": "2013-04-29T10:05:57", "upload_time_iso_8601": "2013-04-29T10:05:57.662001Z", "url": "https://files.pythonhosted.org/packages/07/06/1068bbe2b4db68edbac5d35c9690f8db216c9ea57a9f4883a0dc37758dd1/collective.configviews-3.0.1.zip", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "d05fabbf7d9b4c22c7b229c1645d4982", "sha256": "793d097e4562b97fcc1dc95297d0ea732566783dec25e4bdb7843ad8bf2c286b"}, "downloads": -1, "filename": "collective.configviews-3.0.2.zip", "has_sig": false, "md5_digest": "d05fabbf7d9b4c22c7b229c1645d4982", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28158, "upload_time": "2013-04-30T13:36:56", "upload_time_iso_8601": "2013-04-30T13:36:56.222339Z", "url": "https://files.pythonhosted.org/packages/6f/3b/324ce3d66e6c3a93abfdb5d376bfd4a225486b70035e57182bdca6e59cb1/collective.configviews-3.0.2.zip", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "2a2bf98736360954bc6989625196cad3", "sha256": "8c94051729d587b21fc1335b68d3b7496c99f9f97b0da2271071ef2a8c3177d7"}, "downloads": -1, "filename": "collective.configviews-3.0.3.tar.gz", "has_sig": false, "md5_digest": "2a2bf98736360954bc6989625196cad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21441, "upload_time": "2016-05-12T13:48:31", "upload_time_iso_8601": "2016-05-12T13:48:31.277909Z", "url": "https://files.pythonhosted.org/packages/cc/fb/a24491a524147a749256548d2a4a22eb36eb74b161914924d2e316cc5699/collective.configviews-3.0.3.tar.gz", "yanked": false}], "3.0a1": [{"comment_text": "", "digests": {"md5": "1cecb77643a6f1e4eaac75165c700730", "sha256": "050abd8dad6740e92d585d7142a89e65be44c899c189411bbbb8ad7ca570e418"}, "downloads": -1, "filename": "collective.configviews-3.0a1.zip", "has_sig": false, "md5_digest": "1cecb77643a6f1e4eaac75165c700730", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39633, "upload_time": "2013-02-15T10:18:55", "upload_time_iso_8601": "2013-02-15T10:18:55.231231Z", "url": "https://files.pythonhosted.org/packages/39/c8/e0787ae6927ee52e280441c555f4c552116f362d429e8720b39d69c375de/collective.configviews-3.0a1.zip", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "025766ed746dd964b7d17b57143add35", "sha256": "2b7f2f4f705dd55408f720143ec27143e1e6d67ce918fbca9fc8d5861e258b6a"}, "downloads": -1, "filename": "collective.configviews-3.1.0.tar.gz", "has_sig": false, "md5_digest": "025766ed746dd964b7d17b57143add35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21999, "upload_time": "2016-08-23T13:41:03", "upload_time_iso_8601": "2016-08-23T13:41:03.212748Z", "url": "https://files.pythonhosted.org/packages/e6/8e/697df24ce2a8539be2bf1569f7f0d8218290b1babc48b068067d6395bb0a/collective.configviews-3.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "025766ed746dd964b7d17b57143add35", "sha256": "2b7f2f4f705dd55408f720143ec27143e1e6d67ce918fbca9fc8d5861e258b6a"}, "downloads": -1, "filename": "collective.configviews-3.1.0.tar.gz", "has_sig": false, "md5_digest": "025766ed746dd964b7d17b57143add35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21999, "upload_time": "2016-08-23T13:41:03", "upload_time_iso_8601": "2016-08-23T13:41:03.212748Z", "url": "https://files.pythonhosted.org/packages/e6/8e/697df24ce2a8539be2bf1569f7f0d8218290b1babc48b068067d6395bb0a/collective.configviews-3.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:59 2020"}