{"info": {"author": "Ryan Castner", "author_email": "castner.rr@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "=============================\nDjango Shib Auth RIT\n=============================\n\n.. image:: https://badge.fury.io/py/django-shibauth-rit.svg\n    :target: https://badge.fury.io/py/django-shibauth-rit\n\n.. image:: https://travis-ci.org/audiolion/django-shibauth-rit.svg?branch=master\n    :target: https://travis-ci.org/audiolion/django-shibauth-rit\n\n.. image:: https://codecov.io/gh/audiolion/django-shibauth-rit/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/audiolion/django-shibauth-rit\n\nIntegrate Shibboleth Authentication with your RIT projects\n\nQuickstart\n----------\n\nInstall Django Shib Auth RIT::\n\n    pip install django-shibauth-rit\n\nAdd it to your `INSTALLED_APPS`:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'shibauth_rit',\n        ...\n    )\n\nAdd the authentication backend:\n\n.. code-block:: python\n\n    AUTHENTICATION_BACKENDS = [\n        'shibauth_rit.backends.ShibauthRitBackend',\n        ...\n    ]\n\nAdd the middleware to process requests:\n\n.. code-block:: python\n\n    # use MIDDLEWARE_CLASSES on Django 1.8\n    MIDDLEWARE = (\n      ...\n      'django.contrib.auth.middleware.AuthenticationMiddleware',\n      'shibauth_rit.middleware.ShibauthRitMiddleware',\n      ...\n    )\n\nAdd Django Shib Auth RIT's URL patterns:\n\n.. code-block:: python\n\n    urlpatterns = [\n        ...\n        url(r'^', include('shibauth_rit.urls')),\n        ...\n    ]\n\nSet the `LOGIN_URL` setting to the login handler of RIT's Shibboleth installation:\n\n.. code-block:: python\n\n    LOGIN_URL = 'https://<your-site-root>/Shibboleth.sso/Login'\n\nMap Shibboleth's return attributes to your user model:\n\n.. code-block:: python\n\n    SHIBAUTH_ATTRIBUTE_MAP = {\n        'uid': (True, 'username'),\n        'mail': (False, 'email'),\n    }\n\nShibboleth returns a number of attributes after a successful authentication. According to RIT's\ndocs the current attributes returned are:\n\n.. code-block::\n    uid - the user's RIT username\n    givenName - the user's given (first) name\n    sn -the user's surname (last/family name)\n    mail - the user's email address (note that this can be null)\n    ritEduMemberOfUid - groups the account is a member of (Ex: forklift-operators, vendingmach-admins, historyintegrator, etc.)\n    ritEduAffiliation - multi-valued attribute showing relationship to RIT (Ex: Student, Staff, StudentWorker, Adjust, Retiree etc.)\n\nNote: Additional attributes can be configured on a site-by-site basis. Please contact the ITS Service Desk with requests for additional attributes.\n\nWhen you map attributes, you use a Tuple of `(Boolean, 'UserModelField')` where `Boolean` indicates if the field is `REQUIRED`. This should match your\nUser model's requirements. If your User model is as follow:\n\n.. code-block:: python\n\n    class User(AbstractBaseUser, PermissionsMixin):\n        USERNAME_FIELD = 'email'\n        EMAIL_FIELD = 'email'\n\n        email = models.EmailField(_('email address'), unique=True, blank=True, null=True)\n        username = models.CharField(_('username'), unique=True, required=True, max_length=50)\n        name = models.CharField(_('Name of User'), blank=True, max_length=100)\n\nThen `username` is a required attribute and should be `'uid': (True, 'username')` but email is not\nrequired and should be `'mail': (False, 'email')`.\n\nNote: If email is a required field on your model, shibboleth doesn't guarantee that `mail` will be populated so you will need to handle that exception. You can do this by subclassing `ShibauthRitBackend` and overriding `handle_parse_exception()` method. See [Subclassing ShibauthRitBackend]().\n\n.htaccess Setup\n---------------\n\nThis package requires your site to be hosted on RIT's servers. The .htaccess should look like this\n\n.. code-block:: apache\n\n  # Ensure https is on. required for shibboleth auth\n  RewriteCond ${HTTPS} off\n  RewriteRule (.*) https://%{HTTP_HOST} [R,L]\n\n  # Two options, lazy loading where people do not need to authenticate to get to your site\n  <If \"%{HTTPS} == 'on'\">\n    SSLRequireSSL\n    AuthType shibboleth\n    Require shibboleth\n    ShibRequestSetting requireSession false\n    ShibRedirectToSSL 443\n  </If>\n\n  # Or no lazy loading, strict requirement of shib authentication before accesing site\n  <If \"%{HTTPS} == 'on'\">\n    SSLRequireSSL\n    AuthType shibboleth\n    ShibRequireSession On\n    require valid-user\n    # see https://www.rit.edu/webdev/authenticating-and-authorizing-rit-users for other require options\n  </If>\n\nThis sets up some stuff with the Apache webserver so when people go to https://<your-site-root>/Shibboleth.sso/Login it initiates the redirect to RIT's Shibboleth logon. Don't put a url route there, though I think Apache would always pick it up before it got to your code, might as well not mess with it.\n\nContext Processors\n------------------\n\nThere are two context processors included which allow you to place `{{ login_link }}` or `{{ logout_link }}` in your templates for routing users to the login or logout page. These are available as a convenience and are not required. To activate, add the following to your settings:\n\n.. code-block:: python\n\n    TEMPLATES = [\n        {\n        ...\n            'OPTIONS': {\n                'context_processors': [\n                    ...\n                    'shibauth_rit.context_processors.login_link',\n                    'shibauth_rit.context_processors.logout_link',\n                    ...\n                ],\n            },\n        ...\n        },\n    ]\n\n\nRunning Tests\n-------------\n\nTo do a simple test run with your current config\n\n.. code-block:: bash\n\n    $ python runtests.py\n\nTo comprehensively test the suite across versions of python and django\n\n.. code-block:: bash\n\n    source <YOURVIRTUALENV>/bin/activate\n    (myenv) $ pip install tox\n    (myenv) $ tox\n\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------\n\n0.1.0 (2017-02-15)\n++++++++++++++++++\n\n* First release on PyPI.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/audiolion/django-shibauth-rit", "keywords": "django-shibauth-rit", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-shibauth-rit", "package_url": "https://pypi.org/project/django-shibauth-rit/", "platform": "", "project_url": "https://pypi.org/project/django-shibauth-rit/", "project_urls": {"Homepage": "https://github.com/audiolion/django-shibauth-rit"}, "release_url": "https://pypi.org/project/django-shibauth-rit/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "Integrate Shibboleth Authentication with your RIT projects", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =============================<br>Django Shib Auth RIT<br>=============================<br><br>.. image:: https://badge.fury.io/py/django-shibauth-rit.svg<br>    :target: https://badge.fury.io/py/django-shibauth-rit<br><br>.. image:: https://travis-ci.org/audiolion/django-shibauth-rit.svg?branch=master<br>    :target: https://travis-ci.org/audiolion/django-shibauth-rit<br><br>.. image:: https://codecov.io/gh/audiolion/django-shibauth-rit/branch/master/graph/badge.svg<br>    :target: https://codecov.io/gh/audiolion/django-shibauth-rit<br><br>Integrate Shibboleth Authentication with your RIT projects<br><br>Quickstart<br>----------<br><br>Install Django Shib Auth RIT::<br><br>    pip install django-shibauth-rit<br><br>Add it to your `INSTALLED_APPS`:<br><br>.. code-block:: python<br><br>    INSTALLED_APPS = (<br>        ...<br>        'shibauth_rit',<br>        ...<br>    )<br><br>Add the authentication backend:<br><br>.. code-block:: python<br><br>    AUTHENTICATION_BACKENDS = [<br>        'shibauth_rit.backends.ShibauthRitBackend',<br>        ...<br>    ]<br><br>Add the middleware to process requests:<br><br>.. code-block:: python<br><br>    # use MIDDLEWARE_CLASSES on Django 1.8<br>    MIDDLEWARE = (<br>      ...<br>      'django.contrib.auth.middleware.AuthenticationMiddleware',<br>      'shibauth_rit.middleware.ShibauthRitMiddleware',<br>      ...<br>    )<br><br>Add Django Shib Auth RIT's URL patterns:<br><br>.. code-block:: python<br><br>    urlpatterns = [<br>        ...<br>        url(r'^', include('shibauth_rit.urls')),<br>        ...<br>    ]<br><br>Set the `LOGIN_URL` setting to the login handler of RIT's Shibboleth installation:<br><br>.. code-block:: python<br><br>    LOGIN_URL = 'https://&lt;your-site-root&gt;/Shibboleth.sso/Login'<br><br>Map Shibboleth's return attributes to your user model:<br><br>.. code-block:: python<br><br>    SHIBAUTH_ATTRIBUTE_MAP = {<br>        'uid': (True, 'username'),<br>        'mail': (False, 'email'),<br>    }<br><br>Shibboleth returns a number of attributes after a successful authentication. According to RIT's<br>docs the current attributes returned are:<br><br>.. code-block::<br>    uid - the user's RIT username<br>    givenName - the user's given (first) name<br>    sn -the user's surname (last/family name)<br>    mail - the user's email address (note that this can be null)<br>    ritEduMemberOfUid - groups the account is a member of (Ex: forklift-operators, vendingmach-admins, historyintegrator, etc.)<br>    ritEduAffiliation - multi-valued attribute showing relationship to RIT (Ex: Student, Staff, StudentWorker, Adjust, Retiree etc.)<br><br>Note: Additional attributes can be configured on a site-by-site basis. Please contact the ITS Service Desk with requests for additional attributes.<br><br>When you map attributes, you use a Tuple of `(Boolean, 'UserModelField')` where `Boolean` indicates if the field is `REQUIRED`. This should match your<br>User model's requirements. If your User model is as follow:<br><br>.. code-block:: python<br><br>    class User(AbstractBaseUser, PermissionsMixin):<br>        USERNAME_FIELD = 'email'<br>        EMAIL_FIELD = 'email'<br><br>        email = models.EmailField(_('email address'), unique=True, blank=True, null=True)<br>        username = models.CharField(_('username'), unique=True, required=True, max_length=50)<br>        name = models.CharField(_('Name of User'), blank=True, max_length=100)<br><br>Then `username` is a required attribute and should be `'uid': (True, 'username')` but email is not<br>required and should be `'mail': (False, 'email')`.<br><br>Note: If email is a required field on your model, shibboleth doesn't guarantee that `mail` will be populated so you will need to handle that exception. You can do this by subclassing `ShibauthRitBackend` and overriding `handle_parse_exception()` method. See [Subclassing ShibauthRitBackend]().<br><br>.htaccess Setup<br>---------------<br><br>This package requires your site to be hosted on RIT's servers. The .htaccess should look like this<br><br>.. code-block:: apache<br><br>  # Ensure https is on. required for shibboleth auth<br>  RewriteCond ${HTTPS} off<br>  RewriteRule (.*) https://%{HTTP_HOST} [R,L]<br><br>  # Two options, lazy loading where people do not need to authenticate to get to your site<br>  &lt;If \"%{HTTPS} == 'on'\"&gt;<br>    SSLRequireSSL<br>    AuthType shibboleth<br>    Require shibboleth<br>    ShibRequestSetting requireSession false<br>    ShibRedirectToSSL 443<br>  &lt;/If&gt;<br><br>  # Or no lazy loading, strict requirement of shib authentication before accesing site<br>  &lt;If \"%{HTTPS} == 'on'\"&gt;<br>    SSLRequireSSL<br>    AuthType shibboleth<br>    ShibRequireSession On<br>    require valid-user<br>    # see https://www.rit.edu/webdev/authenticating-and-authorizing-rit-users for other require options<br>  &lt;/If&gt;<br><br>This sets up some stuff with the Apache webserver so when people go to https://&lt;your-site-root&gt;/Shibboleth.sso/Login it initiates the redirect to RIT's Shibboleth logon. Don't put a url route there, though I think Apache would always pick it up before it got to your code, might as well not mess with it.<br><br>Context Processors<br>------------------<br><br>There are two context processors included which allow you to place `{{ login_link }}` or `{{ logout_link }}` in your templates for routing users to the login or logout page. These are available as a convenience and are not required. To activate, add the following to your settings:<br><br>.. code-block:: python<br><br>    TEMPLATES = [<br>        {<br>        ...<br>            'OPTIONS': {<br>                'context_processors': [<br>                    ...<br>                    'shibauth_rit.context_processors.login_link',<br>                    'shibauth_rit.context_processors.logout_link',<br>                    ...<br>                ],<br>            },<br>        ...<br>        },<br>    ]<br><br><br>Running Tests<br>-------------<br><br>To do a simple test run with your current config<br><br>.. code-block:: bash<br><br>    $ python runtests.py<br><br>To comprehensively test the suite across versions of python and django<br><br>.. code-block:: bash<br><br>    source &lt;YOURVIRTUALENV&gt;/bin/activate<br>    (myenv) $ pip install tox<br>    (myenv) $ tox<br><br><br>Credits<br>-------<br><br>Tools used in rendering this package:<br><br>*  Cookiecutter_<br>*  `cookiecutter-djangopackage`_<br><br>.. _Cookiecutter: https://github.com/audreyr/cookiecutter<br>.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage<br><br><br><br><br>History<br>-------<br><br>0.1.0 (2017-02-15)<br>++++++++++++++++++<br><br>* First release on PyPI.<br>\n          </div>"}, "last_serial": 2910794, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "de5fc5e0c2ccb403c3301b8f09c852dc", "sha256": "a407a24c133ce56ac76c63375b6d4d508b6c20b2b68eadad38ad14a8020068cf"}, "downloads": -1, "filename": "django_shibauth_rit-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "de5fc5e0c2ccb403c3301b8f09c852dc", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 16386, "upload_time": "2017-05-30T20:45:32", "upload_time_iso_8601": "2017-05-30T20:45:32.192564Z", "url": "https://files.pythonhosted.org/packages/f0/64/b03dbc078fd2ae5a609805e63ac5f2b20a1c0809b5d720cedf925013f43a/django_shibauth_rit-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ce343fbd8be27589dcce1f833622a0c", "sha256": "44896b1afe5a7864c7f41a0e5b71694a36b40c216608ab93d905c639200244f1"}, "downloads": -1, "filename": "django-shibauth-rit-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9ce343fbd8be27589dcce1f833622a0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12828, "upload_time": "2017-05-30T20:45:30", "upload_time_iso_8601": "2017-05-30T20:45:30.129178Z", "url": "https://files.pythonhosted.org/packages/41/15/8a40063f439bf4c5aa290dfc167cf915e40f22c94ccc630cd98c1c6accfe/django-shibauth-rit-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "de5fc5e0c2ccb403c3301b8f09c852dc", "sha256": "a407a24c133ce56ac76c63375b6d4d508b6c20b2b68eadad38ad14a8020068cf"}, "downloads": -1, "filename": "django_shibauth_rit-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "de5fc5e0c2ccb403c3301b8f09c852dc", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 16386, "upload_time": "2017-05-30T20:45:32", "upload_time_iso_8601": "2017-05-30T20:45:32.192564Z", "url": "https://files.pythonhosted.org/packages/f0/64/b03dbc078fd2ae5a609805e63ac5f2b20a1c0809b5d720cedf925013f43a/django_shibauth_rit-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ce343fbd8be27589dcce1f833622a0c", "sha256": "44896b1afe5a7864c7f41a0e5b71694a36b40c216608ab93d905c639200244f1"}, "downloads": -1, "filename": "django-shibauth-rit-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9ce343fbd8be27589dcce1f833622a0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12828, "upload_time": "2017-05-30T20:45:30", "upload_time_iso_8601": "2017-05-30T20:45:30.129178Z", "url": "https://files.pythonhosted.org/packages/41/15/8a40063f439bf4c5aa290dfc167cf915e40f22c94ccc630cd98c1c6accfe/django-shibauth-rit-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:31 2020"}