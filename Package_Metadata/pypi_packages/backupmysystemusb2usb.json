{"info": {"author": "St\u00e9phane Bressani", "author_email": "s.bressani@bluewin.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: No Input/Output (Daemon)", "Environment :: X11 Applications :: GTK", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Topic :: System :: Archiving :: Backup", "Topic :: System :: Archiving :: Mirroring", "Topic :: Utilities"], "description": "backupmystemusb2usb: Backup my system usb to usb\n================================================\n\nbackupmystemusb2usb is a Creative Commons Python package to copy usb key.\n\nIts runs on Python 3.7 and has a dependency for yaml, and another one for the gui.\n\nInstallation without the source\n-------------------------------\n\nTo install *backupmysytemusb2usb* package run the following command:\n\n.. code-block:: bash\n\n   sudo apt-get install libyaml-dev python3-gi\n   sudo -H pip3 install backupmystemusb2usb\n\nYou have to create a config.yml file (you can save it into your ~/.local/share/backupmysystemusb2usb directory)\n\n.. code-block:: bash\n   \n   UUID_1_Master: 790d1fbb-96ed-46c3-868d-08e05e223fa7\n   UUID_1_Slave: 790d1fbb-96ed-46c3-868d-08e05e223fa7\n   Temp_img: /home/stephane/Temp/Linux.img\n   Temp_log: /home/stephane/Temp/BackupMySystem-Temp.log\n   Kill_dd: True\n\nUUID list\n\n.. code-block:: bash\n   \n   sudo blkid\n\nFind your device and to change the label if the device master UUID is the same as the slave UUID (for exemple: if you cancel in copying temporary img to disk slave), you have to put a date upper on master than slave\n\n*Warning* UUID is not Label !\n\n.. code-block:: bash\n\n   sudo e2label /dev/sd_1 \"19991231235959\"\n   \nFor the deamon, write a *run.py* for running by user root with chmod 700\n\n.. code-block:: bash\n\n   #!/usr/bin/env python3\n   import sys\n   import yaml\n   from backupmysystemusb2usb.usb2usb import usb2usb\n   try:\n      u2u = usb2usb(sys.argv[1])\n      u2u.backup()\n   except yaml.YAMLError:\n      exit()\n\nYou can create a service systemd if you planed to backup your usb key every day in the morning. You can wakeonlan from a raspberrypi or with another technic\n\n.. code-block:: bash\n\n   wakeonlan MACADRESS\n   crontab -e\n   # write your cron\n   sudo service cron reload\n\nNow to create a daemon in startup (without console).\n\nUse this name \"backupmysystemusb2usb\" because in source const.py this file is a constant for GUI progress for non-root user\n\n.. code-block:: bash\n\n   cd /etc/systemd/system\n   vi backupmysystemusb2usb.service\n\nWrite\n   \n.. code-block:: bash\n\n   [Unit]\n   After=ssh.service\n\n   [Service]\n   WorkingDirectory=/your/working/path/\n   ExecStart=/usr/bin/sh -c \"/your/working/path/run.py /your/working/path/config.yml\"\n\n   [Install]\n   WantedBy=default.target\n\nEnable and start\n\n.. code-block:: bash\n   \n   sudo systemctl daemon-reload\n   sudo systemctl enable backupmysystemusb2usb\n\nThen the service start on reboot.\nIf you will test now the service :\n\n.. code-block:: bash\n\n   sudo systemctl start backupmysystemusb2usb\n\nCheck the log (the last 20 messages)\n\n.. code-block:: bash\n\n   sudo journalctl --unit backupmysystemusb2usb -n 20\n\nYou can go to check your output log file configured by config.yml\n   \nNow we have to create the shell return for non-root user gui.py\n\n.. code-block:: bash\n   \n   touch gui.py\n   chmod 700 gui.py\n   vi gui.py\n  \nAnd write in file\n\n.. code-block:: bash\n\n   #!/usr/bin/env python3\n   import yaml\n   from backupmysystemusb2usb.usb2usb import usb2usb\n   u2u = usb2usb('/path/to/your/config.yml')\n   u2u.gui()\n\nYou can create a autostart Gnome desktop startup\n\n.. code-block:: bash\n\n   cd ~/.config/autostart\n   touch backupmysystemusb2usb.desktop\n   chmod 744\n   vi backupmysystemusb2usb.desktop\n\nAnd in your editor enter\n\n.. code-block:: bash\n\n   [Desktop Entry]\n   Name=Backup my system usb to usb\n   Comment=Copy disk with the same space\n   Exec=/your/working/path/gui.py\n   Icon=org.gnome.Terminal\n   Path=/your/working/path/\n   Terminal=true\n   Hidden=false\n   Type=Application\n   Categories=Utility;Application;\n\nInstallation from source\n------------------------\n\nTo install the latest developement version run the following command:\n\n.. code-block:: bash\n\n   git clone https://github.com/stephaneworkspace/backupmysystemusb2usb\n\nVersions\n--------\n1.04\n - Change license to Creative Commons\n\n1.03\n - Change license to Creative Commons\n\n1.02\n - Fix bug and rename label usb key\n\n1.0.1\n - Add gui Gtk\n\n0.0.16\n - Alpha version", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stephaneworkspace/backupmysystemusb2usb.git", "keywords": "", "license": "cc0", "maintainer": "", "maintainer_email": "", "name": "backupmysystemusb2usb", "package_url": "https://pypi.org/project/backupmysystemusb2usb/", "platform": "", "project_url": "https://pypi.org/project/backupmysystemusb2usb/", "project_urls": {"Homepage": "https://github.com/stephaneworkspace/backupmysystemusb2usb.git"}, "release_url": "https://pypi.org/project/backupmysystemusb2usb/1.0.4/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Backup a usb key to another usb key with the same space disk", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>backupmystemusb2usb is a Creative Commons Python package to copy usb key.</p>\n<p>Its runs on Python 3.7 and has a dependency for yaml, and another one for the gui.</p>\n<div id=\"installation-without-the-source\">\n<h2>Installation without the source</h2>\n<p>To install <em>backupmysytemusb2usb</em> package run the following command:</p>\n<pre>sudo apt-get install libyaml-dev python3-gi\nsudo -H pip3 install backupmystemusb2usb\n</pre>\n<p>You have to create a config.yml file (you can save it into your ~/.local/share/backupmysystemusb2usb directory)</p>\n<pre>UUID_1_Master: 790d1fbb-96ed-46c3-868d-08e05e223fa7\nUUID_1_Slave: 790d1fbb-96ed-46c3-868d-08e05e223fa7\nTemp_img: /home/stephane/Temp/Linux.img\nTemp_log: /home/stephane/Temp/BackupMySystem-Temp.log\nKill_dd: True\n</pre>\n<p>UUID list</p>\n<pre>sudo blkid\n</pre>\n<p>Find your device and to change the label if the device master UUID is the same as the slave UUID (for exemple: if you cancel in copying temporary img to disk slave), you have to put a date upper on master than slave</p>\n<p><em>Warning</em> UUID is not Label !</p>\n<pre>sudo e2label /dev/sd_1 <span class=\"s2\">\"19991231235959\"</span>\n</pre>\n<p>For the deamon, write a <em>run.py</em> for running by user root with chmod 700</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3\n</span>import sys\nimport yaml\nfrom backupmysystemusb2usb.usb2usb import usb2usb\ntry:\n   <span class=\"nv\">u2u</span> <span class=\"o\">=</span> usb2usb<span class=\"o\">(</span>sys.argv<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">])</span>\n   u2u.backup<span class=\"o\">()</span>\nexcept yaml.YAMLError:\n   exit<span class=\"o\">()</span>\n</pre>\n<p>You can create a service systemd if you planed to backup your usb key every day in the morning. You can wakeonlan from a raspberrypi or with another technic</p>\n<pre>wakeonlan MACADRESS\ncrontab -e\n<span class=\"c1\"># write your cron\n</span>sudo service cron reload\n</pre>\n<p>Now to create a daemon in startup (without console).</p>\n<p>Use this name \u201cbackupmysystemusb2usb\u201d because in source const.py this file is a constant for GUI progress for non-root user</p>\n<pre><span class=\"nb\">cd</span> /etc/systemd/system\nvi backupmysystemusb2usb.service\n</pre>\n<p>Write</p>\n<pre><span class=\"o\">[</span>Unit<span class=\"o\">]</span>\n<span class=\"nv\">After</span><span class=\"o\">=</span>ssh.service\n\n<span class=\"o\">[</span>Service<span class=\"o\">]</span>\n<span class=\"nv\">WorkingDirectory</span><span class=\"o\">=</span>/your/working/path/\n<span class=\"nv\">ExecStart</span><span class=\"o\">=</span>/usr/bin/sh -c <span class=\"s2\">\"/your/working/path/run.py /your/working/path/config.yml\"</span>\n\n<span class=\"o\">[</span>Install<span class=\"o\">]</span>\n<span class=\"nv\">WantedBy</span><span class=\"o\">=</span>default.target\n</pre>\n<p>Enable and start</p>\n<pre>sudo systemctl daemon-reload\nsudo systemctl <span class=\"nb\">enable</span> backupmysystemusb2usb\n</pre>\n<p>Then the service start on reboot.\nIf you will test now the service :</p>\n<pre>sudo systemctl start backupmysystemusb2usb\n</pre>\n<p>Check the log (the last 20 messages)</p>\n<pre>sudo journalctl --unit backupmysystemusb2usb -n <span class=\"m\">20</span>\n</pre>\n<p>You can go to check your output log file configured by config.yml</p>\n<p>Now we have to create the shell return for non-root user gui.py</p>\n<pre>touch gui.py\nchmod <span class=\"m\">700</span> gui.py\nvi gui.py\n</pre>\n<p>And write in file</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3\n</span>import yaml\nfrom backupmysystemusb2usb.usb2usb import usb2usb\n<span class=\"nv\">u2u</span> <span class=\"o\">=</span> usb2usb<span class=\"o\">(</span><span class=\"s1\">'/path/to/your/config.yml'</span><span class=\"o\">)</span>\nu2u.gui<span class=\"o\">()</span>\n</pre>\n<p>You can create a autostart Gnome desktop startup</p>\n<pre><span class=\"nb\">cd</span> ~/.config/autostart\ntouch backupmysystemusb2usb.desktop\nchmod <span class=\"m\">744</span>\nvi backupmysystemusb2usb.desktop\n</pre>\n<p>And in your editor enter</p>\n<pre><span class=\"o\">[</span>Desktop Entry<span class=\"o\">]</span>\n<span class=\"nv\">Name</span><span class=\"o\">=</span>Backup my system usb to usb\n<span class=\"nv\">Comment</span><span class=\"o\">=</span>Copy disk with the same space\n<span class=\"nv\">Exec</span><span class=\"o\">=</span>/your/working/path/gui.py\n<span class=\"nv\">Icon</span><span class=\"o\">=</span>org.gnome.Terminal\n<span class=\"nv\">Path</span><span class=\"o\">=</span>/your/working/path/\n<span class=\"nv\">Terminal</span><span class=\"o\">=</span><span class=\"nb\">true</span>\n<span class=\"nv\">Hidden</span><span class=\"o\">=</span><span class=\"nb\">false</span>\n<span class=\"nv\">Type</span><span class=\"o\">=</span>Application\n<span class=\"nv\">Categories</span><span class=\"o\">=</span>Utility<span class=\"p\">;</span>Application<span class=\"p\">;</span>\n</pre>\n</div>\n<div id=\"installation-from-source\">\n<h2>Installation from source</h2>\n<p>To install the latest developement version run the following command:</p>\n<pre>git clone https://github.com/stephaneworkspace/backupmysystemusb2usb\n</pre>\n</div>\n<div id=\"versions\">\n<h2>Versions</h2>\n<dl>\n<dt>1.04</dt>\n<dd><ul>\n<li>Change license to Creative Commons</li>\n</ul>\n</dd>\n<dt>1.03</dt>\n<dd><ul>\n<li>Change license to Creative Commons</li>\n</ul>\n</dd>\n<dt>1.02</dt>\n<dd><ul>\n<li>Fix bug and rename label usb key</li>\n</ul>\n</dd>\n<dt>1.0.1</dt>\n<dd><ul>\n<li>Add gui Gtk</li>\n</ul>\n</dd>\n<dt>0.0.16</dt>\n<dd><ul>\n<li>Alpha version</li>\n</ul>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 6597568, "releases": {"0.0.16": [{"comment_text": "", "digests": {"md5": "8c40e705ae723bd263e37877d69ac11f", "sha256": "1a8975bc875bba66ce991b17999b6adea1c18ebd29361a12275bb9923ddc298b"}, "downloads": -1, "filename": "backupmysystemusb2usb-0.0.16.tar.gz", "has_sig": false, "md5_digest": "8c40e705ae723bd263e37877d69ac11f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10053, "upload_time": "2019-11-13T01:53:40", "upload_time_iso_8601": "2019-11-13T01:53:40.443217Z", "url": "https://files.pythonhosted.org/packages/15/42/0dd64e45373c1e47b003fd6797f9d94fe9029b0c0ce4b972d6280fc9c4b5/backupmysystemusb2usb-0.0.16.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "5156972d0d25e516a048a76b68ced812", "sha256": "66d19702c79a4af8775df641345d33bc7130d089bb89795e483b13a0345d40a0"}, "downloads": -1, "filename": "backupmysystemusb2usb-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5156972d0d25e516a048a76b68ced812", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10812, "upload_time": "2019-11-14T16:46:07", "upload_time_iso_8601": "2019-11-14T16:46:07.961438Z", "url": "https://files.pythonhosted.org/packages/ed/de/97e69520344a2828aa8d95c8fec14ef859272014f732ffcb672d3c22b209/backupmysystemusb2usb-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ce80eb90f2cf707779b4cf041fc90ad5", "sha256": "702a6564c8e59841e8e5e5ad49c2bea06b2204ddf87e7b813b0bcd6d9401e0ff"}, "downloads": -1, "filename": "backupmysystemusb2usb-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ce80eb90f2cf707779b4cf041fc90ad5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10826, "upload_time": "2019-11-15T11:35:35", "upload_time_iso_8601": "2019-11-15T11:35:35.090782Z", "url": "https://files.pythonhosted.org/packages/8d/7f/f6bf6a71acb8bd1976bec2a547437d0c31225bc6e2e52b72b5ef9a70414e/backupmysystemusb2usb-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "def62161396f83eb5744fc28fc15bd90", "sha256": "d065277d604642e8ccc77f3e693265be45ae3ea744c2f273a6928be26cbf7c04"}, "downloads": -1, "filename": "backupmysystemusb2usb-1.0.2.tar.gz", "has_sig": false, "md5_digest": "def62161396f83eb5744fc28fc15bd90", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10812, "upload_time": "2019-11-15T14:45:09", "upload_time_iso_8601": "2019-11-15T14:45:09.846780Z", "url": "https://files.pythonhosted.org/packages/1e/bb/8b3953ca74bc6fd8afda16af6e4afd2eba360fced5a8f27d487e4a36b526/backupmysystemusb2usb-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "a9399739b5a2afc13523a07ee46b28dd", "sha256": "884bdbfab0d4648f60433c0c4ff4dbde595ecf56837b9756791b0b8321bfebac"}, "downloads": -1, "filename": "backupmysystemusb2usb-1.0.3.tar.gz", "has_sig": false, "md5_digest": "a9399739b5a2afc13523a07ee46b28dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11122, "upload_time": "2020-02-09T13:04:17", "upload_time_iso_8601": "2020-02-09T13:04:17.147411Z", "url": "https://files.pythonhosted.org/packages/74/52/0698b497e2e4114232d288485a681e8054e7e0c59cbb6ce5151a42d70460/backupmysystemusb2usb-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "3ecd97304ec8a5db08f19171cc6c002e", "sha256": "6d893e604469da7efe09f92564410433899fde0d23d4d1eea739f815524cce21"}, "downloads": -1, "filename": "backupmysystemusb2usb-1.0.4.tar.gz", "has_sig": false, "md5_digest": "3ecd97304ec8a5db08f19171cc6c002e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11127, "upload_time": "2020-02-09T13:12:16", "upload_time_iso_8601": "2020-02-09T13:12:16.028500Z", "url": "https://files.pythonhosted.org/packages/d6/ff/bd5db835fb5e10478359fed2a405503bb9df2e59b4458a5d6b2a62298b58/backupmysystemusb2usb-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ecd97304ec8a5db08f19171cc6c002e", "sha256": "6d893e604469da7efe09f92564410433899fde0d23d4d1eea739f815524cce21"}, "downloads": -1, "filename": "backupmysystemusb2usb-1.0.4.tar.gz", "has_sig": false, "md5_digest": "3ecd97304ec8a5db08f19171cc6c002e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11127, "upload_time": "2020-02-09T13:12:16", "upload_time_iso_8601": "2020-02-09T13:12:16.028500Z", "url": "https://files.pythonhosted.org/packages/d6/ff/bd5db835fb5e10478359fed2a405503bb9df2e59b4458a5d6b2a62298b58/backupmysystemusb2usb-1.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:06 2020"}