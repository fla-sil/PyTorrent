{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-ds1307/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/ds1307/en/latest/\n    :alt: Documentation Status\n\n.. image :: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_DS1307/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_DS1307/actions/\n    :alt: Build Status\n\nThis is a great battery-backed real time clock (RTC) that allows your\nmicrocontroller project to keep track of time even if it is reprogrammed,\nor if the power is lost. Perfect for datalogging, clock-building,\ntime stamping, timers and alarms, etc. The DS1307 is the most popular\nRTC - but it requires 5V power to work.\n\nThe DS1307 is simple and inexpensive but not a high precision device. It may\nlose or gain up to two seconds a day. For a high-precision, temperature\ncompensated alternative, please check out the\n`DS3231 precision RTC <https://www.adafruit.com/products/3013/>`_.\nIf you do not need a DS1307, or you need a 3.3V-power/logic capable RTC\nplease check out our affordable\n`PCF8523 RTC breakout <https://www.adafruit.com/products/3295>`_.\n\n.. image:: ../docs/_static/3296-00.jpg\n    :alt: DS1307\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n* `Bus Device <https://github.com/adafruit/Adafruit_CircuitPython_BusDevice>`_\n* `Register <https://github.com/adafruit/Adafruit_CircuitPython_Register>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.\n\nInstalling from PyPI\n=====================\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-ds1307/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-ds1307\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-ds1307\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-ds1307\n\nUsage Notes\n===========\n\nOf course, you must import the library to use it:\n\n.. code:: python\n\n    import busio\n    import adafruit_ds1307\n    import time\n\nAll the Adafruit RTC libraries take an instantiated and active I2C object\n(from the ``busio`` library) as an argument to their constructor. The way to\ncreate an I2C object depends on the board you are using. For boards with labeled\nSCL and SDA pins, you can:\n\n.. code:: python\n\n    from board import *\n\nYou can also use pins defined by the onboard ``microcontroller`` through the\n``microcontroller.pin`` module.\n\nNow, to initialize the I2C bus:\n\n.. code:: python\n\n    myI2C = busio.I2C(SCL, SDA)\n\nOnce you have created the I2C interface object, you can use it to instantiate\nthe RTC object:\n\n.. code:: python\n\n    rtc = adafruit_ds1307.DS1307(myI2C)\n\nTo set the time, you need to set ``datetime`` to a `time.struct_time` object:\n\n.. code:: python\n\n    rtc.datetime = time.struct_time((2017,1,9,15,6,0,0,9,-1))\n\nAfter the RTC is set, you retrieve the time by reading the ``datetime``\nattribute and access the standard attributes of a struct_time such as ``tm_year``,\n``tm_hour`` and ``tm_min``.\n\n.. code:: python\n\n    t = rtc.datetime\n    print(t)\n    print(t.tm_hour, t.tm_min)\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_DS1307/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_DS1307", "keywords": "adafruit real time clock rtc breakout hardware micropython circuitpython", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-ds1307", "package_url": "https://pypi.org/project/adafruit-circuitpython-ds1307/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-ds1307/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_DS1307"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-ds1307/2.1.1/", "requires_dist": null, "requires_python": "", "summary": "CircuitPython library for DS1307 real time clock.", "version": "2.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/ds1307/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a575e7ec9ec4cef21e6c12129bf40b3fc5482b5/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d6473313330372f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_DS1307/actions/\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d645d489b4b08d3adf2b4105c5a96cfe0b94c79/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f4453313330372f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<p>This is a great battery-backed real time clock (RTC) that allows your\nmicrocontroller project to keep track of time even if it is reprogrammed,\nor if the power is lost. Perfect for datalogging, clock-building,\ntime stamping, timers and alarms, etc. The DS1307 is the most popular\nRTC - but it requires 5V power to work.</p>\n<p>The DS1307 is simple and inexpensive but not a high precision device. It may\nlose or gain up to two seconds a day. For a high-precision, temperature\ncompensated alternative, please check out the\n<a href=\"https://www.adafruit.com/products/3013/\" rel=\"nofollow\">DS3231 precision RTC</a>.\nIf you do not need a DS1307, or you need a 3.3V-power/logic capable RTC\nplease check out our affordable\n<a href=\"https://www.adafruit.com/products/3295\" rel=\"nofollow\">PCF8523 RTC breakout</a>.</p>\n<img alt=\"DS1307\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35178c540d9032acd995eb426c4ccd7d9e773500/2e2e2f646f63732f5f7374617469632f333239362d30302e6a7067\">\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython</a></li>\n<li><a href=\"https://github.com/adafruit/Adafruit_CircuitPython_BusDevice\" rel=\"nofollow\">Bus Device</a></li>\n<li><a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Register\" rel=\"nofollow\">Register</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Bundle\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n</div>\n<div id=\"installing-from-pypi\">\n<h2>Installing from PyPI</h2>\n<p>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally <a href=\"https://pypi.org/project/adafruit-circuitpython-ds1307/\" rel=\"nofollow\">from\nPyPI</a>. To install for current user:</p>\n<pre>pip3 install adafruit-circuitpython-ds1307\n</pre>\n<p>To install system-wide (this may be required in some cases):</p>\n<pre>sudo pip3 install adafruit-circuitpython-ds1307\n</pre>\n<p>To install in a virtual environment in your current project:</p>\n<pre>mkdir project-name <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> project-name\npython3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip3 install adafruit-circuitpython-ds1307\n</pre>\n</div>\n<div id=\"usage-notes\">\n<h2>Usage Notes</h2>\n<p>Of course, you must import the library to use it:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">busio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_ds1307</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n</pre>\n<p>All the Adafruit RTC libraries take an instantiated and active I2C object\n(from the <tt>busio</tt> library) as an argument to their constructor. The way to\ncreate an I2C object depends on the board you are using. For boards with labeled\nSCL and SDA pins, you can:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">board</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<p>You can also use pins defined by the onboard <tt>microcontroller</tt> through the\n<tt>microcontroller.pin</tt> module.</p>\n<p>Now, to initialize the I2C bus:</p>\n<pre><span class=\"n\">myI2C</span> <span class=\"o\">=</span> <span class=\"n\">busio</span><span class=\"o\">.</span><span class=\"n\">I2C</span><span class=\"p\">(</span><span class=\"n\">SCL</span><span class=\"p\">,</span> <span class=\"n\">SDA</span><span class=\"p\">)</span>\n</pre>\n<p>Once you have created the I2C interface object, you can use it to instantiate\nthe RTC object:</p>\n<pre><span class=\"n\">rtc</span> <span class=\"o\">=</span> <span class=\"n\">adafruit_ds1307</span><span class=\"o\">.</span><span class=\"n\">DS1307</span><span class=\"p\">(</span><span class=\"n\">myI2C</span><span class=\"p\">)</span>\n</pre>\n<p>To set the time, you need to set <tt>datetime</tt> to a <cite>time.struct_time</cite> object:</p>\n<pre><span class=\"n\">rtc</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">struct_time</span><span class=\"p\">((</span><span class=\"mi\">2017</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n<p>After the RTC is set, you retrieve the time by reading the <tt>datetime</tt>\nattribute and access the standard attributes of a struct_time such as <tt>tm_year</tt>,\n<tt>tm_hour</tt> and <tt>tm_min</tt>.</p>\n<pre><span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">rtc</span><span class=\"o\">.</span><span class=\"n\">datetime</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">tm_hour</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">tm_min</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_DS1307/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For information on building library documentation, please check out <a href=\"https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1\" rel=\"nofollow\">this guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6995254, "releases": {"1.3.0": [{"comment_text": "", "digests": {"md5": "209108379526978f362a2975a88fd667", "sha256": "76ccb15c3709f1948baf25bda5d3ca480541212c03abe906db43e28cc81b1ac2"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-1.3.0.tar.gz", "has_sig": false, "md5_digest": "209108379526978f362a2975a88fd667", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 273261, "upload_time": "2018-08-04T00:07:35", "upload_time_iso_8601": "2018-08-04T00:07:35.434574Z", "url": "https://files.pythonhosted.org/packages/50/76/5f27767739d995700f52f9da54a5cd9167fb0543bbb8d8a01ec62b177bae/adafruit-circuitpython-ds1307-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "19b401d021c34f4b7639e97bb89571de", "sha256": "5e5f55801f17d35d6d3b343cc686ce2e0bb62583f31e03b472a3bf8d2db1a219"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-1.3.1.tar.gz", "has_sig": false, "md5_digest": "19b401d021c34f4b7639e97bb89571de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 273264, "upload_time": "2018-11-12T17:19:30", "upload_time_iso_8601": "2018-11-12T17:19:30.679115Z", "url": "https://files.pythonhosted.org/packages/ca/58/67a8745b23acdb9c3760a8d06836dc03b23535f6791b97620b36d96ab346/adafruit-circuitpython-ds1307-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "e465113c16fb0d1e2d182a1a08561e30", "sha256": "91ed263163a29f5cca6e7bfa3f9d233e5d2b267ec6ffe34b08d2e1848adac64c"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-1.3.2.tar.gz", "has_sig": false, "md5_digest": "e465113c16fb0d1e2d182a1a08561e30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 271105, "upload_time": "2018-12-29T00:11:54", "upload_time_iso_8601": "2018-12-29T00:11:54.561559Z", "url": "https://files.pythonhosted.org/packages/d3/ab/9780103b76f5b28d33fb6cf666dfd83bff5ef1cf4bd61b6226a56a193a4b/adafruit-circuitpython-ds1307-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "ec0a764a916fbfe6b1019fb984ab6d61", "sha256": "92bba29e43a8f445666697b6b13ef8c8ca805ebb29db61a22dd4a31b2988ac3a"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-1.3.3.tar.gz", "has_sig": false, "md5_digest": "ec0a764a916fbfe6b1019fb984ab6d61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 271111, "upload_time": "2019-02-25T22:17:42", "upload_time_iso_8601": "2019-02-25T22:17:42.699327Z", "url": "https://files.pythonhosted.org/packages/d4/34/271f314be41167a0a7f0a55cb405c672b01663a5dc5eb5bef3fdeae4edd0/adafruit-circuitpython-ds1307-1.3.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "55f6f8aae95919fffde3d601018f3bf8", "sha256": "6f30069c9a0b51e6d5769a0aa2488d9b6fe8a6f2b9ea32cb69d182c49dc61916"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-2.0.0.tar.gz", "has_sig": false, "md5_digest": "55f6f8aae95919fffde3d601018f3bf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 271056, "upload_time": "2019-08-27T18:23:50", "upload_time_iso_8601": "2019-08-27T18:23:50.864210Z", "url": "https://files.pythonhosted.org/packages/b2/3c/42f5aee22ebe4a3071df497ce0fa842ddeca12a27a054c0bf33c8a794469/adafruit-circuitpython-ds1307-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "7a5df924f5d783c8879c939480d56aa5", "sha256": "996bd50fb7179c223326b82294f61c44fe084bd729565c459130c1472ed8a0cc"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-2.0.1.tar.gz", "has_sig": false, "md5_digest": "7a5df924f5d783c8879c939480d56aa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 271396, "upload_time": "2019-09-24T18:20:23", "upload_time_iso_8601": "2019-09-24T18:20:23.499337Z", "url": "https://files.pythonhosted.org/packages/cf/d4/12b9dfd55c8f01355ce1899badbbf44aa5d0f8170e5629d6bde9866c6126/adafruit-circuitpython-ds1307-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "53d07dedd42c070ec3d9fdd0ebcd0d3e", "sha256": "2868d6e0342f6d89b2ceea066ee1ca34fb3fefa2101ea82a5884f8d55774b5f5"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-2.0.2.tar.gz", "has_sig": false, "md5_digest": "53d07dedd42c070ec3d9fdd0ebcd0d3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 273362, "upload_time": "2020-01-22T15:38:52", "upload_time_iso_8601": "2020-01-22T15:38:52.004379Z", "url": "https://files.pythonhosted.org/packages/2a/9c/11b94e2afdec05c2b7ba407242a8ca8272c4365d2ca165591b0e0e3d9a82/adafruit-circuitpython-ds1307-2.0.2.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "eac51fb7af508e1e498904d68be7c40f", "sha256": "c348011e05418eafa69b7637ecc6faadfa13d3630d5f06d90c078d6320724209"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-2.1.0.tar.gz", "has_sig": false, "md5_digest": "eac51fb7af508e1e498904d68be7c40f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 273509, "upload_time": "2020-03-20T15:22:10", "upload_time_iso_8601": "2020-03-20T15:22:10.938855Z", "url": "https://files.pythonhosted.org/packages/a2/44/dd4c044b7f5c5b3cb0d3b499081429edd1601218fe0aaaa7973a59c46dbe/adafruit-circuitpython-ds1307-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "4c4964d21e209a819ecdebac8545c452", "sha256": "61d107f24a5af98cefe52d04a15f3b5b5f9dc652be7608273e965e2e5e1cb210"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-2.1.1.tar.gz", "has_sig": false, "md5_digest": "4c4964d21e209a819ecdebac8545c452", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 273578, "upload_time": "2020-04-10T17:46:40", "upload_time_iso_8601": "2020-04-10T17:46:40.380588Z", "url": "https://files.pythonhosted.org/packages/3e/d4/9778785c5966fc69f55c2f7bcea49a4e7e7fc0a763774bb711aec9c15e58/adafruit-circuitpython-ds1307-2.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c4964d21e209a819ecdebac8545c452", "sha256": "61d107f24a5af98cefe52d04a15f3b5b5f9dc652be7608273e965e2e5e1cb210"}, "downloads": -1, "filename": "adafruit-circuitpython-ds1307-2.1.1.tar.gz", "has_sig": false, "md5_digest": "4c4964d21e209a819ecdebac8545c452", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 273578, "upload_time": "2020-04-10T17:46:40", "upload_time_iso_8601": "2020-04-10T17:46:40.380588Z", "url": "https://files.pythonhosted.org/packages/3e/d4/9778785c5966fc69f55c2f7bcea49a4e7e7fc0a763774bb711aec9c15e58/adafruit-circuitpython-ds1307-2.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:04 2020"}