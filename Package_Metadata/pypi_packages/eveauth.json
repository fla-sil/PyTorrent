{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# eveauth\n[![Travis](https://img.shields.io/travis/Regner/eveauth.svg)](https://travis-ci.org/Regner/eveauth) [![PyPI](https://img.shields.io/pypi/v/eveauth.svg)](https://pypi.python.org/pypi/eveauth/)\n\nA simple library for verifying authorization tokens provided against the EVE\nOnline SSO. Helper methods and decorators are provided for simplysimplifying the\nability to restrict access based on scopes or a character ID.\n\n## Using\n```python\n\nfrom eveauth import authenticate\n\n# Just get the token information back\ntoken = authenticate(request)\n\n# Require a specific scope\ntoken = authenticate(request, ['character'])\n\n# By default using the authenticate method directly will raise either a\n# eveauth.Unauthorized or eveauth.Forbidden exception if something goes wrong or\n# missing a scope.\n\n# Decorate a flask view\nfrom eveauth.contrib.flask import authenticate\n\n@authenticate()\n@app.route('/v1/<int:character_id>/')\ndef get_char_stats(character_id):\n    if request.token['character_id'] != character_id:\n        abort(403)\n\n# The flask decorator will abort with a 401 or 403 if the eveauth package raises\n# one if its exceptions. You only need to handle making sure the character the\n# token is for is allowed the resource they are requesting.\n```\n\n## Environment Variables\n* __EVEAUTH_URL:__ Defaults to 'https://login.eveonline.com/oauth/verify/'. The\nURL which will be used to validate the authorization token.\n* __EVEAUTH_CACHE_TIME:__ Defaults to 300. How long, in seconds, to cache the\nresponse from the SSO server for.\n* __AUTH_TESTING:__ \n* __TEST_TOKEN_DATA:__", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/regner/eveauth", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "eveauth", "package_url": "https://pypi.org/project/eveauth/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/eveauth/", "project_urls": {"Homepage": "https://github.com/regner/eveauth"}, "release_url": "https://pypi.org/project/eveauth/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "A library for working with the EVE Online SSO.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # eveauth<br>[![Travis](https://img.shields.io/travis/Regner/eveauth.svg)](https://travis-ci.org/Regner/eveauth) [![PyPI](https://img.shields.io/pypi/v/eveauth.svg)](https://pypi.python.org/pypi/eveauth/)<br><br>A simple library for verifying authorization tokens provided against the EVE<br>Online SSO. Helper methods and decorators are provided for simplysimplifying the<br>ability to restrict access based on scopes or a character ID.<br><br>## Using<br>```python<br><br>from eveauth import authenticate<br><br># Just get the token information back<br>token = authenticate(request)<br><br># Require a specific scope<br>token = authenticate(request, ['character'])<br><br># By default using the authenticate method directly will raise either a<br># eveauth.Unauthorized or eveauth.Forbidden exception if something goes wrong or<br># missing a scope.<br><br># Decorate a flask view<br>from eveauth.contrib.flask import authenticate<br><br>@authenticate()<br>@app.route('/v1/&lt;int:character_id&gt;/')<br>def get_char_stats(character_id):<br>    if request.token['character_id'] != character_id:<br>        abort(403)<br><br># The flask decorator will abort with a 401 or 403 if the eveauth package raises<br># one if its exceptions. You only need to handle making sure the character the<br># token is for is allowed the resource they are requesting.<br>```<br><br>## Environment Variables<br>* __EVEAUTH_URL:__ Defaults to 'https://login.eveonline.com/oauth/verify/'. The<br>URL which will be used to validate the authorization token.<br>* __EVEAUTH_CACHE_TIME:__ Defaults to 300. How long, in seconds, to cache the<br>response from the SSO server for.<br>* __AUTH_TESTING:__ <br>* __TEST_TOKEN_DATA:__\n          </div>"}, "last_serial": 1951047, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "15448f31e8a9d5e857b7f54c876c8016", "sha256": "097b06c54d457504a2a5c96c99d282e196233eb065761c2b403bdc5c29c5e7fa"}, "downloads": -1, "filename": "eveauth-0.0.2.tar.gz", "has_sig": false, "md5_digest": "15448f31e8a9d5e857b7f54c876c8016", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2738, "upload_time": "2016-02-10T23:51:28", "upload_time_iso_8601": "2016-02-10T23:51:28.443837Z", "url": "https://files.pythonhosted.org/packages/94/1f/de42f64e290301613a559e707def602b325921f0b7c1a3c4ac362296e934/eveauth-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "bad8b84dd1849261e6eca568817d9cad", "sha256": "7ab1a552e76affffc95ca585a93bd4b4c8bd8cf104e30a384ea5224ff52dd75a"}, "downloads": -1, "filename": "eveauth-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bad8b84dd1849261e6eca568817d9cad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2993, "upload_time": "2016-02-11T12:06:16", "upload_time_iso_8601": "2016-02-11T12:06:16.201352Z", "url": "https://files.pythonhosted.org/packages/27/b9/a9ac15e61e496415d20ee1ed734e3ba2df6fe6071c575d41d856a75b9b6f/eveauth-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bad8b84dd1849261e6eca568817d9cad", "sha256": "7ab1a552e76affffc95ca585a93bd4b4c8bd8cf104e30a384ea5224ff52dd75a"}, "downloads": -1, "filename": "eveauth-0.0.3.tar.gz", "has_sig": false, "md5_digest": "bad8b84dd1849261e6eca568817d9cad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2993, "upload_time": "2016-02-11T12:06:16", "upload_time_iso_8601": "2016-02-11T12:06:16.201352Z", "url": "https://files.pythonhosted.org/packages/27/b9/a9ac15e61e496415d20ee1ed734e3ba2df6fe6071c575d41d856a75b9b6f/eveauth-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:16 2020"}