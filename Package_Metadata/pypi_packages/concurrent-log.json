{"info": {"author": "HuangYiwei", "author_email": "huanghyw@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# concurrent_log\n\u652f\u6301\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u73af\u5883\u4f7f\u7528\u7684\u65e5\u5fd7\u5904\u7406\u5668\n\n## ConcurrentTimedRotatingFileHandler\n\n### \u652f\u6301\u7684\u529f\u80fd\n1. \u6309\u7167\u65f6\u95f4\u8fdb\u884c\u5207\u5272\u65e5\u5fd7  \n1. \u652f\u6301\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u73af\u5883\u4f7f\u7528\n\n### \u600e\u4e48\u7528  \n\u4e0e\u6807\u51c6\u5e93`TimedRotatingFileHandler`\u5b8c\u5168\u517c\u5bb9\u3002  \n\u5982\u679c\u9879\u76ee\u5df2\u7ecf\u4f7f\u7528\u4e86`TimedRotatingFileHandler`\uff0c\u6765\u8fdb\u884c\u65e5\u5fd7\u5904\u7406\uff0c\u56e0\u4e3a\u5f15\u5165\u4e86\u591a\u8fdb\u7a0b\u673a\u5236\u9700\u8981\u4e00\u4e2a\u652f\u6301\u591a\u8fdb\u7a0b\u73af\u5883\u7684\u65e5\u5fd7\u5904\u7406\u5668\uff0c\u53ea\u9700\u8981\u5728\n\u65e5\u5fd7\u914d\u7f6e\u754c\u9762\u5f15\u5165`concurrent_log`\u6a21\u5757\uff0c\u7136\u540e\u5c06`TimedRotatingFileHandler`\u66ff\u6362\u4e3a`ConcurrentTimedRotatingFileHandler`\u5373\n\u53ef\uff0c\u5176\u4ed6\u4ee3\u7801\u4e0d\u9700\u8981\u4efb\u4f55\u6539\u52a8\u3002\n\n### \u538b\u6d4b\u793a\u4f8b\u4ee3\u7801\n```python\nimport time\nfrom concurrent.futures import ProcessPoolExecutor, ThreadPoolExecutor\n\nclass ConcurrentTimedRotatingFileHandlerTest:\n    \"\"\"\n    ConcurrentTimedRotatingFileHandler \u6d4b\u8bd5\n    \"\"\"\n\n    def __init__(self):\n        import logging\n        import logging.config\n\n        import concurrent_log\n\n        log_conf = {\n            'version': 1,\n            'formatters': {\n                'default': {\n                    'format': '%(asctime)s - %(process)d-%(threadName)s - '\n                              '%(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s',\n                    'datefmt': \"%Y-%m-%d %H:%M:%S\"\n                },\n            },\n            'handlers': {\n                'file': {\n                    'level': 'DEBUG',\n                    'class': 'logging.handlers.ConcurrentTimedRotatingFileHandler',\n                    'backupCount': 100,\n                    'when': 's',\n                    'delay': True,\n                    'filename': 'log/test.log',\n                    'encoding': 'utf-8',\n                    'formatter': 'default',\n                }\n            },\n            'root': {\n                'handlers': ['file'],\n                'level': 'DEBUG',\n            },\n        }\n\n        logging.config.dictConfig(log_conf)\n        self.logger = logging.getLogger(__name__)\n\n    def write_log(self, index):\n        self.logger.debug('debug-%s' % index)\n        self.logger.info('info-%s' % index)\n        self.logger.warning('\u8b66\u544a-%s' % index)\n        self.logger.error('\u62a5\u9519-%s' % index)\n        self.logger.critical('\u4e25\u91cd-%s' % index)\n\n    def mutil_thread_write_log(self):\n        with ThreadPoolExecutor(100) as thread_pool:\n            for i in range(1000):\n                thread_pool.submit(self.write_log, i).add_done_callback(self._executor_callback)\n\n    def mutil_process_write_log(self):\n        with ProcessPoolExecutor() as process_pool:\n            for i in range(100):\n                process_pool.submit(self.mutil_thread_write_log).add_done_callback(self._executor_callback)\n\n    def _executor_callback(self, worker):\n        worker_exception = worker.exception()\n        if worker_exception:\n            print(\"Worker return exception: \", self.worker_exception)\n\n\nclass TimedRotatingFileHandlerTest:\n    \"\"\"\n    TimedRotatingFileHandler \u6d4b\u8bd5\n    \"\"\"\n\n    def __init__(self):\n        import logging\n        import logging.config\n\n        log_conf = {\n            'version': 1,\n            'disable_existing_loggers': False,\n            'formatters': {\n                'default': {\n                    'format': '%(asctime)s - %(process)d-%(threadName)s - '\n                              '%(pathname)s[line:%(lineno)d] - %(levelname)s: %(message)s',\n                    'datefmt': \"%Y-%m-%d %H:%M:%S\"\n                },\n            },\n            'handlers': {\n                'file': {\n                    'level': 'DEBUG',\n                    'class': 'logging.handlers.TimedRotatingFileHandler',\n                    'backupCount': 100,\n                    'when': 's',\n                    'delay': True,\n                    'filename': 'log2/test.log',\n                    'encoding': 'utf-8',\n                    'formatter': 'default',\n                }\n            },\n            'root': {\n                'handlers': ['file'],\n                'level': 'DEBUG',\n            },\n        }\n\n        import os\n        file_path = os.path.split(log_conf.get(\"handlers\").get(\"file\").get(\"filename\"))[0]\n        if not os.path.exists(file_path):\n            os.makedirs(file_path)\n        logging.config.dictConfig(log_conf)\n        self.logger = logging.getLogger(__name__)\n\n    def write_log(self, index):\n        self.logger.debug('debug-%s' % index)\n        self.logger.info('info-%s' % index)\n        self.logger.warning('\u8b66\u544a-%s' % index)\n        self.logger.error('\u62a5\u9519-%s' % index)\n        self.logger.critical('\u4e25\u91cd-%s' % index)\n\n    def mutil_thread_write_log(self):\n        with ThreadPoolExecutor(100) as thread_pool:\n            for i in range(100000):\n                thread_pool.submit(self.write_log, i).add_done_callback(self._executor_callback)\n\n    def _executor_callback(self, worker):\n        worker_exception = worker.exception()\n        if worker_exception:\n            print(\"Worker return exception: \", self.worker_exception)\n\n\nif __name__ == \"__main__\":\n    print(\"50W\u65e5\u5fd7\u5199\u5165\u6d4b\u8bd5\")\n    begin_time = time.time()\n    # \u591a\u8fdb\u7a0b\u5199\u5165\u65e5\u5fd7\uff0c\u8fdb\u7a0b\u6570\u4e0eCPU\u6838\u5fc3\u6570\u4e00\u81f4\uff0c\u4f7f\u7528\u6587\u4ef6\u9501\u5b9e\u73b0\u8fdb\u7a0b\u5e76\u53d1\u63a7\u5236\uff0c\u9632\u6b62\u810f\u6570\u636e\u4ee5\u53ca\u65e5\u5fd7\u4e22\u5931\n    # \u6bcf\u4e2a\u8fdb\u7a0b100\u4e2a\u7ebf\u7a0b\u5171\u9700\u5199\u5165\u4e94\u5343\u884c\u65e5\u5fd7\uff0c\u7531\u4e8eGIL\u539f\u56e0\uff0c\u5e76\u53d1\u53ea\u5b58\u5728\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4f46\u662f\u4f1a\u5b58\u5728\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4f7f\u7528\u7ebf\u7a0b\u9501\u9632\u6b62\u810f\u6570\u636e\u548c\u65e5\u5fd7\u4e22\u5931\n    ConcurrentTimedRotatingFileHandlerTest().mutil_process_write_log()\n    use_time = time.time() - begin_time\n    print(\"ConcurrentTimedRotatingFileHandler \u8017\u65f6:%s\u79d2\" % use_time)\n    begin_time = time.time()\n    # \u6bcf\u4e2a\u8fdb\u7a0b100\u4e2a\u7ebf\u7a0b\u5171\u9700\u5199\u5165\u6240\u6709\u65e5\u5fd7\uff0c\u7531\u4e8eGIL\u539f\u56e0\uff0c\u5e76\u53d1\u53ea\u5b58\u5728\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4f46\u662f\u4f1a\u5b58\u5728\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u540c\u6837\u9700\u8981\u9501\u673a\u5236\u9632\u6b62\u810f\u6570\u636e\u548c\u65e5\u5fd7\u4e22\u5931\n    TimedRotatingFileHandlerTest().mutil_thread_write_log()\n    use_time = time.time() - begin_time\n    print(\"TimedRotatingFileHandler \u8017\u65f6:%s\u79d2\" % use_time)\n```\n\n### \u538b\u6d4b\u7ed3\u679c\n\u7ecf\u9a8c\u8bc1\uff0c\u65e5\u5fd7\u5185\u5bb9\u5b8c\u6574\uff0c\u6309\u7167\u65f6\u95f4\u5207\u5272\u6b63\u786e  \n\n**\u73af\u5883**  \nCPU\uff1aIntel\u00ae Core\u2122 i9-7940X  \n\u5185\u5b58\uff1a64G  \n\u78c1\u76d8\uff1a\u4e09\u661f 970Pro 1T  \n\n**\u8f93\u51fa**  \n50W\u65e5\u5fd7\u5199\u5165\u6d4b\u8bd5  \nConcurrentTimedRotatingFileHandler \u8017\u65f6:84.82415437698364\u79d2  \nTimedRotatingFileHandler \u8017\u65f6:100.73775053024292\u79d2", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/huanghyw/concurrent_log", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "concurrent-log", "package_url": "https://pypi.org/project/concurrent-log/", "platform": "", "project_url": "https://pypi.org/project/concurrent-log/", "project_urls": {"Homepage": "https://github.com/huanghyw/concurrent_log"}, "release_url": "https://pypi.org/project/concurrent-log/1.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "\u591a\u8fdb\u7a0b\u5e76\u53d1\u65e5\u5fd7\u5904\u7406\u5668", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>concurrent_log</h1>\n<p>\u652f\u6301\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u73af\u5883\u4f7f\u7528\u7684\u65e5\u5fd7\u5904\u7406\u5668</p>\n<h2>ConcurrentTimedRotatingFileHandler</h2>\n<h3>\u652f\u6301\u7684\u529f\u80fd</h3>\n<ol>\n<li>\u6309\u7167\u65f6\u95f4\u8fdb\u884c\u5207\u5272\u65e5\u5fd7</li>\n<li>\u652f\u6301\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u73af\u5883\u4f7f\u7528</li>\n</ol>\n<h3>\u600e\u4e48\u7528</h3>\n<p>\u4e0e\u6807\u51c6\u5e93<code>TimedRotatingFileHandler</code>\u5b8c\u5168\u517c\u5bb9\u3002<br>\n\u5982\u679c\u9879\u76ee\u5df2\u7ecf\u4f7f\u7528\u4e86<code>TimedRotatingFileHandler</code>\uff0c\u6765\u8fdb\u884c\u65e5\u5fd7\u5904\u7406\uff0c\u56e0\u4e3a\u5f15\u5165\u4e86\u591a\u8fdb\u7a0b\u673a\u5236\u9700\u8981\u4e00\u4e2a\u652f\u6301\u591a\u8fdb\u7a0b\u73af\u5883\u7684\u65e5\u5fd7\u5904\u7406\u5668\uff0c\u53ea\u9700\u8981\u5728\n\u65e5\u5fd7\u914d\u7f6e\u754c\u9762\u5f15\u5165<code>concurrent_log</code>\u6a21\u5757\uff0c\u7136\u540e\u5c06<code>TimedRotatingFileHandler</code>\u66ff\u6362\u4e3a<code>ConcurrentTimedRotatingFileHandler</code>\u5373\n\u53ef\uff0c\u5176\u4ed6\u4ee3\u7801\u4e0d\u9700\u8981\u4efb\u4f55\u6539\u52a8\u3002</p>\n<h3>\u538b\u6d4b\u793a\u4f8b\u4ee3\u7801</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">concurrent.futures</span> <span class=\"kn\">import</span> <span class=\"n\">ProcessPoolExecutor</span><span class=\"p\">,</span> <span class=\"n\">ThreadPoolExecutor</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ConcurrentTimedRotatingFileHandlerTest</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    ConcurrentTimedRotatingFileHandler \u6d4b\u8bd5</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n\n        <span class=\"kn\">import</span> <span class=\"nn\">concurrent_log</span>\n\n        <span class=\"n\">log_conf</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s1\">'formatters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> - </span><span class=\"si\">%(process)d</span><span class=\"s1\">-</span><span class=\"si\">%(threadName)s</span><span class=\"s1\"> - '</span>\n                              <span class=\"s1\">'</span><span class=\"si\">%(pathname)s</span><span class=\"s1\">[line:</span><span class=\"si\">%(lineno)d</span><span class=\"s1\">] - </span><span class=\"si\">%(levelname)s</span><span class=\"s1\">: </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'datefmt'</span><span class=\"p\">:</span> <span class=\"s2\">\"%Y-%m-</span><span class=\"si\">%d</span><span class=\"s2\"> %H:%M:%S\"</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'logging.handlers.ConcurrentTimedRotatingFileHandler'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'backupCount'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'when'</span><span class=\"p\">:</span> <span class=\"s1\">'s'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'delay'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'filename'</span><span class=\"p\">:</span> <span class=\"s1\">'log/test.log'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'encoding'</span><span class=\"p\">:</span> <span class=\"s1\">'utf-8'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'formatter'</span><span class=\"p\">:</span> <span class=\"s1\">'default'</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">'root'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'file'</span><span class=\"p\">],</span>\n                <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">(</span><span class=\"n\">log_conf</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">write_log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'debug-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'info-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s1\">'\u8b66\u544a-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'\u62a5\u9519-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'\u4e25\u91cd-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">mutil_thread_write_log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"n\">ThreadPoolExecutor</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">thread_pool</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">):</span>\n                <span class=\"n\">thread_pool</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">write_log</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add_done_callback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_executor_callback</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">mutil_process_write_log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"n\">ProcessPoolExecutor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">process_pool</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n                <span class=\"n\">process_pool</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mutil_thread_write_log</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add_done_callback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_executor_callback</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_executor_callback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">worker</span><span class=\"p\">):</span>\n        <span class=\"n\">worker_exception</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">worker_exception</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Worker return exception: \"</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">worker_exception</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TimedRotatingFileHandlerTest</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    TimedRotatingFileHandler \u6d4b\u8bd5</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n        <span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n\n        <span class=\"n\">log_conf</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'version'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n            <span class=\"s1\">'disable_existing_loggers'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s1\">'formatters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'format'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> - </span><span class=\"si\">%(process)d</span><span class=\"s1\">-</span><span class=\"si\">%(threadName)s</span><span class=\"s1\"> - '</span>\n                              <span class=\"s1\">'</span><span class=\"si\">%(pathname)s</span><span class=\"s1\">[line:</span><span class=\"si\">%(lineno)d</span><span class=\"s1\">] - </span><span class=\"si\">%(levelname)s</span><span class=\"s1\">: </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'datefmt'</span><span class=\"p\">:</span> <span class=\"s2\">\"%Y-%m-</span><span class=\"si\">%d</span><span class=\"s2\"> %H:%M:%S\"</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'class'</span><span class=\"p\">:</span> <span class=\"s1\">'logging.handlers.TimedRotatingFileHandler'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'backupCount'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'when'</span><span class=\"p\">:</span> <span class=\"s1\">'s'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'delay'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'filename'</span><span class=\"p\">:</span> <span class=\"s1\">'log2/test.log'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'encoding'</span><span class=\"p\">:</span> <span class=\"s1\">'utf-8'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'formatter'</span><span class=\"p\">:</span> <span class=\"s1\">'default'</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">'root'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'handlers'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'file'</span><span class=\"p\">],</span>\n                <span class=\"s1\">'level'</span><span class=\"p\">:</span> <span class=\"s1\">'DEBUG'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"kn\">import</span> <span class=\"nn\">os</span>\n        <span class=\"n\">file_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">log_conf</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"handlers\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"file\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"filename\"</span><span class=\"p\">))[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">(</span><span class=\"n\">log_conf</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">write_log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'debug-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'info-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s1\">'\u8b66\u544a-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'\u62a5\u9519-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'\u4e25\u91cd-</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">index</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">mutil_thread_write_log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"n\">ThreadPoolExecutor</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">thread_pool</span><span class=\"p\">:</span>\n            <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100000</span><span class=\"p\">):</span>\n                <span class=\"n\">thread_pool</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">write_log</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add_done_callback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_executor_callback</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_executor_callback</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">worker</span><span class=\"p\">):</span>\n        <span class=\"n\">worker_exception</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">()</span>\n        <span class=\"k\">if</span> <span class=\"n\">worker_exception</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Worker return exception: \"</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">worker_exception</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"50W\u65e5\u5fd7\u5199\u5165\u6d4b\u8bd5\"</span><span class=\"p\">)</span>\n    <span class=\"n\">begin_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"c1\"># \u591a\u8fdb\u7a0b\u5199\u5165\u65e5\u5fd7\uff0c\u8fdb\u7a0b\u6570\u4e0eCPU\u6838\u5fc3\u6570\u4e00\u81f4\uff0c\u4f7f\u7528\u6587\u4ef6\u9501\u5b9e\u73b0\u8fdb\u7a0b\u5e76\u53d1\u63a7\u5236\uff0c\u9632\u6b62\u810f\u6570\u636e\u4ee5\u53ca\u65e5\u5fd7\u4e22\u5931</span>\n    <span class=\"c1\"># \u6bcf\u4e2a\u8fdb\u7a0b100\u4e2a\u7ebf\u7a0b\u5171\u9700\u5199\u5165\u4e94\u5343\u884c\u65e5\u5fd7\uff0c\u7531\u4e8eGIL\u539f\u56e0\uff0c\u5e76\u53d1\u53ea\u5b58\u5728\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4f46\u662f\u4f1a\u5b58\u5728\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4f7f\u7528\u7ebf\u7a0b\u9501\u9632\u6b62\u810f\u6570\u636e\u548c\u65e5\u5fd7\u4e22\u5931</span>\n    <span class=\"n\">ConcurrentTimedRotatingFileHandlerTest</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mutil_process_write_log</span><span class=\"p\">()</span>\n    <span class=\"n\">use_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">begin_time</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"ConcurrentTimedRotatingFileHandler \u8017\u65f6:</span><span class=\"si\">%s</span><span class=\"s2\">\u79d2\"</span> <span class=\"o\">%</span> <span class=\"n\">use_time</span><span class=\"p\">)</span>\n    <span class=\"n\">begin_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n    <span class=\"c1\"># \u6bcf\u4e2a\u8fdb\u7a0b100\u4e2a\u7ebf\u7a0b\u5171\u9700\u5199\u5165\u6240\u6709\u65e5\u5fd7\uff0c\u7531\u4e8eGIL\u539f\u56e0\uff0c\u5e76\u53d1\u53ea\u5b58\u5728\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4f46\u662f\u4f1a\u5b58\u5728\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u540c\u6837\u9700\u8981\u9501\u673a\u5236\u9632\u6b62\u810f\u6570\u636e\u548c\u65e5\u5fd7\u4e22\u5931</span>\n    <span class=\"n\">TimedRotatingFileHandlerTest</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mutil_thread_write_log</span><span class=\"p\">()</span>\n    <span class=\"n\">use_time</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">begin_time</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"TimedRotatingFileHandler \u8017\u65f6:</span><span class=\"si\">%s</span><span class=\"s2\">\u79d2\"</span> <span class=\"o\">%</span> <span class=\"n\">use_time</span><span class=\"p\">)</span>\n</pre>\n<h3>\u538b\u6d4b\u7ed3\u679c</h3>\n<p>\u7ecf\u9a8c\u8bc1\uff0c\u65e5\u5fd7\u5185\u5bb9\u5b8c\u6574\uff0c\u6309\u7167\u65f6\u95f4\u5207\u5272\u6b63\u786e</p>\n<p><strong>\u73af\u5883</strong><br>\nCPU\uff1aIntel\u00ae Core\u2122 i9-7940X<br>\n\u5185\u5b58\uff1a64G<br>\n\u78c1\u76d8\uff1a\u4e09\u661f 970Pro 1T</p>\n<p><strong>\u8f93\u51fa</strong><br>\n50W\u65e5\u5fd7\u5199\u5165\u6d4b\u8bd5<br>\nConcurrentTimedRotatingFileHandler \u8017\u65f6:84.82415437698364\u79d2<br>\nTimedRotatingFileHandler \u8017\u65f6:100.73775053024292\u79d2</p>\n\n          </div>"}, "last_serial": 6374556, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "960aad1def355bc72adafa7c83c5ee70", "sha256": "d49081399b998d787355f08001d87ca507fdaafe6199721cf0d389ea3446e478"}, "downloads": -1, "filename": "concurrent_log-1.0.0-py3.7.egg", "has_sig": false, "md5_digest": "960aad1def355bc72adafa7c83c5ee70", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 8180, "upload_time": "2019-12-29T07:57:30", "upload_time_iso_8601": "2019-12-29T07:57:30.329226Z", "url": "https://files.pythonhosted.org/packages/77/c0/7ccf4f6eb642e2d5ea5de92a512908c2e651bcb14af012d941ad20a58282/concurrent_log-1.0.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5c67714864abd276301fb6abe70511b", "sha256": "0ff31c055a1808ad0c922e71ffdc915348db92e02f30df1b67e0e149434862f8"}, "downloads": -1, "filename": "concurrent_log-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a5c67714864abd276301fb6abe70511b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5654, "upload_time": "2019-12-29T07:57:31", "upload_time_iso_8601": "2019-12-29T07:57:31.818954Z", "url": "https://files.pythonhosted.org/packages/93/3d/e293ca13aca4e211c7e867e7478adb4ac54b4a6f9943d768efc52003fd7a/concurrent_log-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7574be51e984475716856c451080bacb", "sha256": "94e006d53bb1c235a66b7edf47ccd520a1d392c7f1bedb68ceec16469a4f61ce"}, "downloads": -1, "filename": "concurrent_log-1.0.1-py3.7.egg", "has_sig": false, "md5_digest": "7574be51e984475716856c451080bacb", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 8379, "upload_time": "2019-12-30T09:07:53", "upload_time_iso_8601": "2019-12-30T09:07:53.814260Z", "url": "https://files.pythonhosted.org/packages/74/07/77798c6caa7426fa569b996a24ce5dfe6c3c133c90530b5a600ca437e5b1/concurrent_log-1.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "812535a244e91ae9e65024bcda0b8911", "sha256": "cc4dff5b68c6510483908b19e3dd75372c5509851a77002e184e0448f8b3e37b"}, "downloads": -1, "filename": "concurrent_log-1.0.1.tar.gz", "has_sig": false, "md5_digest": "812535a244e91ae9e65024bcda0b8911", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5889, "upload_time": "2019-12-30T09:07:55", "upload_time_iso_8601": "2019-12-30T09:07:55.411279Z", "url": "https://files.pythonhosted.org/packages/55/ba/464ffcb0c1042050cd6dd68981c2534b498fe28a908738f2a97268e7eba9/concurrent_log-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7574be51e984475716856c451080bacb", "sha256": "94e006d53bb1c235a66b7edf47ccd520a1d392c7f1bedb68ceec16469a4f61ce"}, "downloads": -1, "filename": "concurrent_log-1.0.1-py3.7.egg", "has_sig": false, "md5_digest": "7574be51e984475716856c451080bacb", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 8379, "upload_time": "2019-12-30T09:07:53", "upload_time_iso_8601": "2019-12-30T09:07:53.814260Z", "url": "https://files.pythonhosted.org/packages/74/07/77798c6caa7426fa569b996a24ce5dfe6c3c133c90530b5a600ca437e5b1/concurrent_log-1.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "812535a244e91ae9e65024bcda0b8911", "sha256": "cc4dff5b68c6510483908b19e3dd75372c5509851a77002e184e0448f8b3e37b"}, "downloads": -1, "filename": "concurrent_log-1.0.1.tar.gz", "has_sig": false, "md5_digest": "812535a244e91ae9e65024bcda0b8911", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5889, "upload_time": "2019-12-30T09:07:55", "upload_time_iso_8601": "2019-12-30T09:07:55.411279Z", "url": "https://files.pythonhosted.org/packages/55/ba/464ffcb0c1042050cd6dd68981c2534b498fe28a908738f2a97268e7eba9/concurrent_log-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:04 2020"}