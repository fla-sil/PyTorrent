{"info": {"author": "Michael Warkentin", "author_email": "mwarkentin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "=============================\ndjango-watchman\n=============================\n\n.. image:: http://img.shields.io/pypi/v/django-watchman.svg\n    :target: http://badge.fury.io/py/django-watchman\n\n.. image:: http://img.shields.io/travis/mwarkentin/django-watchman/master.svg\n    :target: https://travis-ci.org/mwarkentin/django-watchman\n\n.. image:: http://img.shields.io/coveralls/mwarkentin/django-watchman.svg\n    :target: https://coveralls.io/r/mwarkentin/django-watchman?branch=master\n\ndjango-watchman exposes a status endpoint for your backing services like\ndatabases, caches, etc.\n\n.. image:: https://s3.amazonaws.com/snaps.michaelwarkentin.com/watchmenozy.jpg\n\nDocumentation\n-------------\n\nThe full documentation is at http://django-watchman.rtfd.org.\n\nTestimonials\n------------\n\n    We're in love with django-watchman. External monitoring is a vital part of our service offering. Using django-watchman we can introspect the infrastructure of an application via a secure URL. It's very well written and easy to extend. We've recommended it to many of our clients already.\n\n\u2014 Hany Fahim, CEO, `VM Farms <https://vmfarms.com/>`_.\n\nQuickstart\n----------\n\n1. Install ``django-watchman``::\n\n    pip install django-watchman\n\n2. Add ``watchman`` to your ``INSTALLED_APPS`` setting like this::\n\n    INSTALLED_APPS = (\n        ...\n        'watchman',\n    )\n\n3. Include the watchman URLconf in your project ``urls.py`` like this::\n\n    url(r'^watchman/', include('watchman.urls')),\n\n4. Start the development server and visit ``http://127.0.0.1:8000/watchman/`` to\n   get a JSON response of your backing service statuses::\n\n    {\n        \"databases\": [\n            {\n                \"default\": {\n                    \"ok\": true\n                }\n            }\n        ],\n        \"caches\": [\n            {\n                \"default\": {\n                    \"ok\": true\n                }\n            }\n        ],\n        \"storage\": {\"ok\": true}\n    }\n\nPycon Canada Presentation (10 minutes)\n--------------------------------------\n\n.. image:: http://snaps.michaelwarkentin.com.s3.amazonaws.com/Full-stack_Django_application_monitoring_with_django-watchman_Michael_Warkentin_-_YouTube_2015-11-27_17-56-52.jpg\n   :target: https://www.youtube.com/watch?v=iEgOCY7_zGI\n\nFeatures\n--------\n\nHuman-friendly dashboard\n************************\n\nVisit ``http://127.0.0.1:8000/watchman/dashboard/`` to get a human-friendly HTML\nrepresentation of all of your watchman checks.\n\nToken based authentication\n**************************\n\nIf you want to protect the status endpoint, you can use the ``WATCHMAN_TOKENS`` setting.\nThis is a comma-separated list of tokens.\nWhen this setting is added, you must pass one of the tokens in as the ``watchman-token`` **GET** parameter::\n\n    GET http://127.0.0.1:8000/watchman/?watchman-token=:token\n\nOr by setting the ``Authorization: WATCHMAN-TOKEN`` header on the request::\n\n    curl -X GET -H \"Authorization: WATCHMAN-TOKEN Token=\\\":token\\\"\" http://127.0.0.1:8000/watchman/\n\nIf you want to change the token name, you can set the ``WATCHMAN_TOKEN_NAME``.\nThe value of this setting will be the **GET** parameter that you must pass in::\n\n    WATCHMAN_TOKEN_NAME = 'custom-token-name'\n\n    GET http://127.0.0.1:8000/watchman/?custom-token-name=:token\n\n**DEPRECATION WARNING**: ``WATCHMAN_TOKEN`` was replaced by the ``WATCHMAN_TOKENS`` setting to support multiple authentication tokens in django-watchman ``0.11``.\nIt will continue to work until it's removed in django-watchman ``1.0``.\n\nCustom authentication/authorization\n***********************************\n\nIf you want to protect the status endpoint with a customized\nauthentication/authorization decorator, you can add ``WATCHMAN_AUTH_DECORATOR``\nto your settings. This needs to be a dotted-path to a decorator, and defaults\nto ``watchman.decorators.token_required``::\n\n    WATCHMAN_AUTH_DECORATOR = 'django.contrib.admin.views.decorators.staff_member_required'\n\nNote that the ``token_required`` decorator does not protect a view unless\n``WATCHMAN_TOKENS`` is set in settings.\n\nCustom checks\n*************\n\ndjango-watchman allows you to customize the checks which are run by modifying\nthe ``WATCHMAN_CHECKS`` setting. In ``settings.py``::\n\n    WATCHMAN_CHECKS = (\n        'module.path.to.callable',\n        'another.module.path.to.callable',\n    )\n\nYou can also import the watchman.constants to include the DEFAULT_CHECKS and PAID_CHECKS in your ``settings.py``::\n\n   from watchman import constants as watchman_constants\n\n   WATCHMAN_CHECKS = watchman_constants.DEFAULT_CHECKS + ('module.path.to.callable', )\n\n\nChecks take no arguments, and must return a ``dict`` whose keys are applied to the JSON response. Use the ``watchman.decorators.check`` decorator to capture exceptions::\n\n    from watchman.decorators import check\n\n    @check\n    def my_check():\n        return {'x': 1}\n\nIn the absence of any checks, a 404 is thrown, which is then handled by the\n``json_view`` decorator.\n\nRun a subset of available checks\n********************************\n\nA subset of checks may be run, by passing ``?check=module.path.to.callable&check=...``\nin the request URL. Only the callables given in the querystring which are also\nin ``WATCHMAN_CHECKS`` should be run, eg::\n\n    curl -XGET http://127.0.0.1:8080/watchman/?check=watchman.checks.caches\n\nSkip specific checks\n********************\n\nYou can skip any number of checks, by passing ``?skip=module.path.to.callable&skip=...``\nin the request URL. Only the checks in ``WATCHMAN_CHECKS`` which are not in the\nquerystring should be run, eg::\n\n    curl -XGET http://127.0.0.1:8080/watchman/?skip=watchman.checks.email\n\nCheck a subset of databases or caches\n*************************************\n\nIf your application has a large number of databases or caches configured,\nwatchman may open too many connections as it checks each database or cache.\n\nYou can set the ``WATCHMAN_DATABASES`` or ``WATCHMAN_CACHES`` settings in order\nto override the default set of databases and caches to be monitored.\n\nPing\n****\n\nIf you want to simply check that your application is running and able to handle\nrequests, you can call ping:\n\n    GET http://127.0.0.1:8000/watchman/ping/\n\nIt will return the text ``pong`` with a 200 status code. Calling this doesn't\nrun any of the checks.\n\nBare status view\n****************\n\nIf you would like a \"bare\" status view (one that doesn't report any details,\njust ``HTTP 200`` if checks pass, and ``HTTP 500`` if any checks fail), you\ncan use the ``bare_status`` view by putting the following into ``urls.py``::\n\n    import watchman.views\n    # ...\n    url(r'^status/?$', watchman.views.bare_status),\n\nDjango management command\n*************************\n\nYou can also run your checks without starting the webserver and making requests.\nThis can be useful for testing your configuration before enabling a server,\nchecking configuration on worker servers, etc. Run the management command like so::\n\n    python manage.py watchman\n\nBy default, successful checks will not print any output. If all checks pass\nsuccessfully, the exit code will be ``0``. If a check fails, the exit code will\nbe ``1``, and the error message including stack trace will be printed to ``stderr``.\n\nIf you'd like to see output for successful checks as well, set verbosity to\n``2`` or higher::\n\n    python manage.py watchman -v 2\n    {\"storage\": {\"ok\": true}}\n    {\"caches\": [{\"default\": {\"ok\": true}}]}\n    {\"databases\": [{\"default\": {\"ok\": true}}]}\n\nIf you'd like to run a subset of checks, use ``-c`` and a comma-separated list\nof python module paths::\n\n    python manage.py watchman -c watchman.checks.caches,watchman.checks.databases -v 2\n    {\"caches\": [{\"default\": {\"ok\": true}}]}\n    {\"databases\": [{\"default\": {\"ok\": true}}]}\n\nIf you'd like to skip certain checks, use ``-s`` and a comma-separated list of\npython module paths::\n\n    python manage.py watchman -s watchman.checks.caches,watchman.checks.databases -v 2\n    {\"storage\": {\"ok\": true}}\n\nUse ``-h`` to see a full list of options::\n\n    python manage.py watchman -h\n\nX-Watchman-Version response header\n**********************************\n\nWatchman can return the version of watchman which is running to help you keep\ntrack of whether or not your sites are using an up-to-date version. This is\ndisabled by default to prevent any unintended information leakage for websites\nwithout authentication. To enable, update the ``EXPOSE_WATCHMAN_VERSION``\nsetting::\n\n    EXPOSE_WATCHMAN_VERSION = True\n\nCustom response code\n********************\n\nBy default, watchman will return a ``500`` HTTP response code, even if there's a\nfailing check. You can specify a different response code for failing checks\nusing the ``WATCHMAN_ERROR_CODE`` setting::\n\n    WATCHMAN_ERROR_CODE = 200\n\nLogging\n*******\n\nwatchman includes log messages using a logger called ``watchman``.\nYou can configure this by configuring the ``LOGGING`` section of your Django\nsettings file.\n\nHere is a simple example that would log to the console::\n\n    LOGGING = {\n        'version': 1,\n        'disable_existing_loggers': False,\n        'handlers': {\n            'console': {\n                'class': 'logging.StreamHandler',\n            },\n        },\n        'loggers': {\n            'watchman': {\n                'handlers': ['console'],\n                'level': 'DEBUG',\n            },\n        },\n    }\n\nMore information is available in the `Django documentation\n<https://docs.djangoproject.com/en/2.0/topics/logging/#configuring-logging]>`_.\n\nAPM (Datadog, New Relic)\n************************\n\nIf you're using APM and watchman is being often hit for health checks (such as an ELB on\nAWS), you will find some stats based on averages will be affected (average transaction\ntime, apdex, etc):\n\nYou can disable APM instrumentation for watchman by using the ``WATCHMAN_DISABLE_APM``\nsetting::\n\n    WATCHMAN_DISABLE_APM = True\n\nThis currently supports the following agents:\n\n* Datadog\n* New Relic\n\nPlease open an issue if there's another APM you use which is being affected.\n\n\nAvailable checks\n----------------\n\ncaches\n******\n\nFor each cache in ``django.conf.settings.CACHES``:\n\n* Set a test cache item\n* Get test item\n* Delete test item\n\ndatabases\n*********\n\nFor each database in ``django.conf.settings.DATABASES``:\n\n* Verify connection by calling ``connections[database].introspection.table_names()``\n\nemail\n*****\n\nSend a test email to ``to@example.com`` using ``django.core.mail.send_mail``.\n\nIf you're using a 3rd party mail provider, this check could end up costing you\nmoney, depending how aggressive you are with your monitoring. For this reason,\nthis check is **not enabled** by default.\n\nFor reference, if you were using Mandrill, and hitting your watchman endpoint\nonce per minute, this would cost you ~$5.60/month.\n\n**Custom Settings**\n\n* ``WATCHMAN_EMAIL_SENDER`` (default: ``watchman@example.com``): Specify an email to be the sender of the test email\n* ``WATCHMAN_EMAIL_RECIPIENTS`` (default: ``[to@example.com]``): Specify a list of email addresses to send the test email\n* ``WATCHMAN_EMAIL_HEADERS`` (default: ``{}``): Specify a dict of custom headers to be added to the test email\n\nstorage\n*******\n\nUsing ``django.core.files.storage.default_storage``:\n\n* Write a test file\n* Check the test file's size\n* Read the test file's contents\n* Delete the test file\n\nBy default the test file gets written on the root of the django ``MEDIA_ROOT``. If for whatever reasons this path is not writable by the user that runs the application you can override it by setting ``WATCHMAN_STORAGE_PATH`` to a specific path.\nRemember that this must be within the ``MEDIA_ROOT``, which by default is your project root. In ``settings.py``::\n\n  WATCHMAN_STORAGE_PATH = \"/path_to_your_app/foo/bar/\"\n\nIf the ``MEDIA_ROOT`` is already defined::\n\n  from os.path import join as joinpath\n  WATCHMAN_STORAGE_PATH = joinpath(MEDIA_ROOT, \"foo/bar\")\n\nDefault checks\n**************\n\nBy default, django-watchman will run checks against your databases\n(``watchman.checks.databases``), caches (``watchman.checks.caches``), and\nstorage (``watchman.checks.storage``).\n\nPaid checks\n***********\n\nCurrently there is only one \"paid\" check - ``watchman.checks.email``. You can\nenable it by setting the ``WATCHMAN_ENABLE_PAID_CHECKS`` to ``True``, or by\noverriding the ``WATCHMAN_CHECKS`` setting.\n\nTrying it out with Docker\n--------------------------\n\nA sample project is available along with a Dockerfile to make it easy to try\nout django-watchman.\n\nRequirements\n************\n\n* `Docker <https://www.docker.com/get-docker>`\n\nInstructions\n************\n\n1. Build and run the Docker image with the current local code: ``make run``\n2. Visit watchman json endpoint in your browser: http://127.0.0.1:8000/watchman/\n3. Visit watchman dashboard in your browser: http://127.0.0.1:8000/watchman/dashboard/\n4. Visit watchman ping in your browser: http://127.0.0.1:8000/watchman/ping/\n5. Visit watchman bare status in your browser: http://127.0.0.1:8000/watchman/bare/\n\n\n\n\n=======\nHistory\n=======\n\n1.1.1 (2020-05-04)\n------------------\n\n* [`#159 <https://github.com/mwarkentin/django-watchman/pull/159>`_] Fixed invalid escape sequence in decorators by changing to a raw string\n\n1.1.0 (2020-03-16)\n------------------\n\n* [`#154 <https://github.com/mwarkentin/django-watchman/pull/155>`_] Added custom path support for storage check\n\n1.0.1 (YYYY-MM-DD)\n------------------\n\n* Fix modal popups on dashboards when Type or Name fields contains spaces (@maikeps)\n\n1.0.0 (2019-12-18)\n-------------------\n\n* Official django-watchman 1.0 release! Releases will (try to) follow semantic versioning from now on.\n* Drop support for python 2 and Django<2 (@JBKahn)\n* Drop usage of ``django-jsonview`` in favor of the Django's built in JsonResponse (@JBKahn)\n\n0.18.0 (2019-08-19)\n-------------------\n\n* [`#142 <https://github.com/mwarkentin/django-watchman/pull/142>`_] Skip traces in Datadog if ``WATCHMAN_DISABLE_APM`` is enabled (@robatwave)\n\n0.17.0 (2019-06-14)\n-------------------\n\n* [`#141 <https://github.com/mwarkentin/django-watchman/pull/141>`_] Disable APM monitoring on ``ping`` endpoint if ``settings.WATCHMAN_DISABLE_APM`` is configured (@JBKahn)\n\n0.16.0 (2019-03-19)\n-------------------\n\n* [`#131 <https://github.com/mwarkentin/django-watchman/pull/131>`_] Make watchman constants importable (@jonespm)\n* [`#134 <https://github.com/mwarkentin/django-watchman/pull/134>`_] Update Django/Python versions & clean up sample site Docker (@JayH5)\n\n0.15.0 (2018-02-27)\n-------------------\n\n* [`#114 <https://github.com/mwarkentin/django-watchman/pull/114>`_] Add \"bare\" status view (@jamesmallen)\n* [`#115 <https://github.com/mwarkentin/django-watchman/pull/115>`_] Adds ``WATCHMAN_DISABLE_APM`` option (@xfxf)\n* [`#63 <https://github.com/mwarkentin/django-watchman/pull/63>`_] Disable watchman version output by default, add ``EXPOSE_WATCHMAN_VERSION`` setting (@mwarkentin)\n\n0.14.0 (2018-01-09)\n-------------------\n\n* [`#110 <https://github.com/mwarkentin/django-watchman/pull/110>`_] Replace vagrant + ansible with Dockerfile (@ryanwilsonperkin)\n* [`#111 <https://github.com/mwarkentin/django-watchman/pull/111>`_] Configure Django logging for checks (@dhoffman34)\n* [`#112 <https://github.com/mwarkentin/django-watchman/pull/112>`_] Add simple HTTP ping endpoint (@dhoffman34)\n\n0.13.1 (2017-05-27)\n-------------------\n\n* [`#101 <https://github.com/mwarkentin/django-watchman/pull/101>`_] Write ``bytes`` to dummy file on storage check to fix an issue in Python 3 (thanks @saily!)\n\n0.13.0 (2017-05-23)\n-------------------\n\n* [`#105 <https://github.com/mwarkentin/django-watchman/pull/105>`_] Add ``WATCHMAN_CACHES`` and ``WATCHMAN_DATABASES`` settings to override the Django defaults\n\n  * When using watchman with a large number of databases, the default checks can cause an excess of connections to the database / cache\n  * New settings allow you to check only a subset of databases / caches\n  * Watchman will still default to checking all databases / caches, so no changes necessary for most apps\n\n0.12.0 (2017-02-22)\n-------------------\n\n* [`#100 <https://github.com/mwarkentin/django-watchman/pull/100>`_] Add ``WATCHMAN_EMAIL_SENDER`` setting to customize email check \"from\" address\n\n0.11.1 (2017-02-14)\n-------------------\n\n* [`#99 <https://github.com/mwarkentin/django-watchman/pull/99>`_] Fix verbose output in management command on Django 1.8+\n\n0.11.0 (2016-08-02)\n-------------------\n\n* Update tests to run on Django 1.7 - 1.10\n* [`#87 <https://github.com/mwarkentin/django-watchman/pull/87>`_] Fix 500 errors with ATOMIC_REQUESTS enabled\n\n  * Disables atomic transactions on the watchman views to prevent generic 500 errors\n\n* [`#88 <https://github.com/mwarkentin/django-watchman/pull/88>`_] Restructure dashboard and switch icon libraries\n\n  * Make check types singular on dashboard\n  * Switch to FontAwesome instead of Glyphicon to track Bootstrap updates\n  * Improve traceback display width\n\n* [`#92 <https://github.com/mwarkentin/django-watchman/pull/92>`_] Support multiple auth tokens\n\n  * Fixes [`#86 <https://github.com/mwarkentin/django-watchman/pull/86>`_]\n  * Deprecates ``settings.WATCHMAN_TOKEN`` and adds ``settings.WATCHMAN_TOKENS``\n\n0.10.1 (2016-05-03)\n-------------------\n\n* [`#81 <https://github.com/mwarkentin/django-watchman/pull/81>`_] Fix header-based authentication for tokens w/ dashes (`-`)\n\n  * Regex was overly specific for header values (`\\w`)\n  * Added TODO to follow up with a full regex for valid characters according to the spec\n\n0.10.0 (2016-05-02)\n-------------------\n\n* [`#75 <https://github.com/mwarkentin/django-watchman/pull/75>`_] Enable header-based authentication\n\n  * Set a header instead of passing the token via GET param: ``\"Authorization: WATCHMAN-TOKEN Token=\\\":token\\\"\"``\n  * Improves security by keeping tokens out of logs\n\n* [`#79 <https://github.com/mwarkentin/django-watchman/pull/79>`_] Enable customization of email check\n\n  * Add ``WATCHMAN_EMAIL_RECIPIENTS`` setting - pass a list of recipients the email should be sent to\n  * Add ``WATCHMAN_EMAIL_HEADERS`` setting - pass a dict of custom headers to be set on the email\n\n\n0.9.0 (2015-12-16)\n------------------\n\n* [`#51 <https://github.com/mwarkentin/django-watchman/pull/51>`_] Update TravisCI Python / Django versions\n* [`#52 <https://github.com/mwarkentin/django-watchman/pull/52>`_] Fix deprecated ``url_patterns``\n* [`#53 <https://github.com/mwarkentin/django-watchman/pull/54>`_] Change default error response code to ``500``\n* [`#56 <https://github.com/mwarkentin/django-watchman/pull/56>`_] Add ``@check`` decorator and refactor existing checks to use it (thanks @benwebber!)\n* [`#57 <https://github.com/mwarkentin/django-watchman/pull/57>`_] Sort ``caches`` / ``databases`` in response for more consistent responses\n* [`#59 <https://github.com/mwarkentin/django-watchman/pull/59>`_] Add ``.editorconfig`` for improved consistency in contributions\n* [`#61 <https://github.com/mwarkentin/django-watchman/pull/61>`_] Add ``Vagrantfile`` and docs for how to run and develop on Vagrant instance\n* [`#65 <https://github.com/mwarkentin/django-watchman/pull/65>`_] Include assets in source tarball for Debian packaging (thanks @fladi)\n* [`#71 <https://github.com/mwarkentin/django-watchman/pull/71>`_] Unpin `django-jsonview` in setup.py\n* [`#72 <https://github.com/mwarkentin/django-watchman/pull/72>`_] Fix stacktrace on dashboard modal and increase width for better readability\n\n0.8.0 (2015-10-03)\n------------------\n\n* [`#46 <https://github.com/mwarkentin/django-watchman/pull/46>`_] Allow custom response codes with the ``WATCHMAN_ERROR_CODE`` setting\n\n0.7.1 (2015-08-14)\n------------------\n\n* Update headers in ``HISTORY.rst`` to attempt to fix localshop parsing issues\n\n0.7.0 (2015-08-14)\n------------------\n\n* [`#40 <https://github.com/mwarkentin/django-watchman/pull/40>`_] Bump ``django-jsonview`` for improved Django 1.8 compatibility\n\n  * Also brought travis Django test versions in line with currently supported Django versions (1.4.x, 1.7.x, 1.8.x)\n\n0.6.0 (2015-07-02)\n------------------\n\n* [`#30 <https://github.com/mwarkentin/django-watchman/pull/30>`_] Allow users to specify a custom authentication/authorization decorator\n\n  * Override the ``@auth`` decorator by setting ``WATCHMAN_AUTH_DECORATOR`` to a dot-separated path to your own decorator\n  * eg. ``WATCHMAN_AUTH_DECORATOR = 'django.contrib.admin.views.decorators.staff_member_required'``\n  * Token-based authentication remains the default\n\n* [`#31 <https://github.com/mwarkentin/django-watchman/pull/31>`_], [`#34 <https://github.com/mwarkentin/django-watchman/pull/34>`_] Add a human-friendly status dashboard\n\n  * Available at ``<watchman url>/dashboard/``\n  * ``?check`` & ``?skip`` GET params work on the dashboard as well\n\n* [`#35 <https://github.com/mwarkentin/django-watchman/pull/35>`_] Add ``X-Watchman-Version`` header to responses\n\n0.5.0 (2015-01-25)\n------------------\n\n* Add ``watchman`` management command\n\n  * Exit code of ``0`` if all checks pass, ``1`` otherwise\n  * Print json stacktrace to ``stderr`` if check fails\n  * Handles ``--verbosity`` option to print all status checks\n  * ``-c``, ``--checks``, ``-s``, ``--skips`` options take comma-separated list of python paths to run / skip\n\n* Improve identifiability of emails sent from a django-watchman endpoint\n\n  * From: watchman@example.com\n  * Subject: django-watchman email check\n  * Body: This is an automated test of the email system.\n  * Add ``X-DJANGO-WATCHMAN: True`` custom header\n\n* Add new default check: ``storage`` check\n\n  * Checks that files can be both written and read with the current Django storage engine\n  * Add ``WATCHMAN_ENABLE_PAID_CHECKS`` setting to enable all paid checks without modifying ``WATCHMAN_CHECKS``\n\n* Remove ``email_status`` from default checks\n* Refactor ``utils.get_checks`` to allow reuse in management command\n\n  * ``get_checks`` now performs the optional check inclusion / skipping\n  * ``status`` refactored to pull ``check_list`` / ``skip_list`` from GET params and pass them to ``get_checks``\n\n* Namespace cache keys\n* Update documentation\n\n0.4.0 (2014-09-08)\n------------------\n\n* Add the ability to skip certain checks by passing one or more\n  ``skip=path.to.callable`` GET params when hitting the watchman URL\n\n0.3.0 (2014-09-05)\n------------------\n\n* New check - email (``watchman.checks.email_status``)! django-watchman will now\n  check that your email settings are working too!\n* Fix a few small issues in the readme\n* Rearrange some of the code in checks.py\n\n0.2.2 (2014-09-05)\n------------------\n\n* Fix and run tests on Python 2.7 and 3.4\n* Bump django-jsonview dependency to latest\n* Update tox envlist and travis config to test 2.7 / 3.4\n\n0.2.1 (2014-09-04)\n------------------\n\n* Initialize django during tests to prevent app loading issue for Django >= 1.7\n* Suppress ``MIDDLEWARE_CLASSES`` warning for Django >= 1.7\n* Reorganize test imports\n* Fix ``make test``, ``make coverage``, ``make release`` commands\n* Add htmlcov/ directory to .gitignore\n* Test django 1.4, 1.6, 1.7\n\n0.2.0 (2014-09-04)\n------------------\n\n* Custom checks can now be written and run using the ``WATCHMAN_CHECKS`` setting\n* A subset of the available checks can be run by passing the ``check`` GET param\n  when hitting the watchman url\n\n0.1.2 (2014-02-21)\n------------------\n\n* Move package requirements out of requirements.txt and into setup.py\n\n0.1.1 (2014-02-09)\n------------------\n\n* Remove ``django>=1.5.5`` version specification\n* Remove ``wheel`` requirement\n\n\n0.1.0 (2014-02-08)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mwarkentin/django-watchman", "keywords": "django-watchman", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-watchman", "package_url": "https://pypi.org/project/django-watchman/", "platform": "", "project_url": "https://pypi.org/project/django-watchman/", "project_urls": {"Homepage": "https://github.com/mwarkentin/django-watchman"}, "release_url": "https://pypi.org/project/django-watchman/1.1.1/", "requires_dist": ["django (>=2.0)"], "requires_python": "", "summary": "django-watchman exposes a status endpoint for your backing services", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-watchman\">\n<h2>django-watchman</h2>\n<a href=\"http://badge.fury.io/py/django-watchman\" rel=\"nofollow\"><img alt=\"http://img.shields.io/pypi/v/django-watchman.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ef7f010c8c67b63298cf0cb730c5bc7f0a15421/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d77617463686d616e2e737667\"></a>\n<a href=\"https://travis-ci.org/mwarkentin/django-watchman\" rel=\"nofollow\"><img alt=\"http://img.shields.io/travis/mwarkentin/django-watchman/master.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7a0ab4432b95ee06b859ae769db908fbcf1b8b3/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6d7761726b656e74696e2f646a616e676f2d77617463686d616e2f6d61737465722e737667\"></a>\n<a href=\"https://coveralls.io/r/mwarkentin/django-watchman?branch=master\" rel=\"nofollow\"><img alt=\"http://img.shields.io/coveralls/mwarkentin/django-watchman.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b895701427754b1aa2be39f9e20cc641b4e015f/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6d7761726b656e74696e2f646a616e676f2d77617463686d616e2e737667\"></a>\n<p>django-watchman exposes a status endpoint for your backing services like\ndatabases, caches, etc.</p>\n<img alt=\"https://s3.amazonaws.com/snaps.michaelwarkentin.com/watchmenozy.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df84d058836ec0ae4111b9e2899362198cead2eb/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f736e6170732e6d69636861656c7761726b656e74696e2e636f6d2f77617463686d656e6f7a792e6a7067\">\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>The full documentation is at <a href=\"http://django-watchman.rtfd.org\" rel=\"nofollow\">http://django-watchman.rtfd.org</a>.</p>\n</div>\n<div id=\"testimonials\">\n<h3>Testimonials</h3>\n<blockquote>\nWe\u2019re in love with django-watchman. External monitoring is a vital part of our service offering. Using django-watchman we can introspect the infrastructure of an application via a secure URL. It\u2019s very well written and easy to extend. We\u2019ve recommended it to many of our clients already.</blockquote>\n<p>\u2014 Hany Fahim, CEO, <a href=\"https://vmfarms.com/\" rel=\"nofollow\">VM Farms</a>.</p>\n</div>\n<div id=\"quickstart\">\n<h3>Quickstart</h3>\n<ol>\n<li><p>Install <tt><span class=\"pre\">django-watchman</span></tt>:</p>\n<pre>pip install django-watchman\n</pre>\n</li>\n<li><p>Add <tt>watchman</tt> to your <tt>INSTALLED_APPS</tt> setting like this:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'watchman',\n)\n</pre>\n</li>\n<li><p>Include the watchman URLconf in your project <tt>urls.py</tt> like this:</p>\n<pre>url(r'^watchman/', include('watchman.urls')),\n</pre>\n</li>\n<li><p>Start the development server and visit <tt><span class=\"pre\">http://127.0.0.1:8000/watchman/</span></tt> to\nget a JSON response of your backing service statuses:</p>\n<pre>{\n    \"databases\": [\n        {\n            \"default\": {\n                \"ok\": true\n            }\n        }\n    ],\n    \"caches\": [\n        {\n            \"default\": {\n                \"ok\": true\n            }\n        }\n    ],\n    \"storage\": {\"ok\": true}\n}\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"pycon-canada-presentation-10-minutes\">\n<h3>Pycon Canada Presentation (10 minutes)</h3>\n<a href=\"https://www.youtube.com/watch?v=iEgOCY7_zGI\" rel=\"nofollow\"><img alt=\"http://snaps.michaelwarkentin.com.s3.amazonaws.com/Full-stack_Django_application_monitoring_with_django-watchman_Michael_Warkentin_-_YouTube_2015-11-27_17-56-52.jpg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25343b4e96049406c5683704cd826a8334f95cc2/687474703a2f2f736e6170732e6d69636861656c7761726b656e74696e2e636f6d2e73332e616d617a6f6e6177732e636f6d2f46756c6c2d737461636b5f446a616e676f5f6170706c69636174696f6e5f6d6f6e69746f72696e675f776974685f646a616e676f2d77617463686d616e5f4d69636861656c5f5761726b656e74696e5f2d5f596f75547562655f323031352d31312d32375f31372d35362d35322e6a7067\"></a>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<div id=\"human-friendly-dashboard\">\n<h4>Human-friendly dashboard</h4>\n<p>Visit <tt><span class=\"pre\">http://127.0.0.1:8000/watchman/dashboard/</span></tt> to get a human-friendly HTML\nrepresentation of all of your watchman checks.</p>\n</div>\n<div id=\"token-based-authentication\">\n<h4>Token based authentication</h4>\n<p>If you want to protect the status endpoint, you can use the <tt>WATCHMAN_TOKENS</tt> setting.\nThis is a comma-separated list of tokens.\nWhen this setting is added, you must pass one of the tokens in as the <tt><span class=\"pre\">watchman-token</span></tt> <strong>GET</strong> parameter:</p>\n<pre>GET http://127.0.0.1:8000/watchman/?watchman-token=:token\n</pre>\n<p>Or by setting the <tt>Authorization: <span class=\"pre\">WATCHMAN-TOKEN</span></tt> header on the request:</p>\n<pre>curl -X GET -H \"Authorization: WATCHMAN-TOKEN Token=\\\":token\\\"\" http://127.0.0.1:8000/watchman/\n</pre>\n<p>If you want to change the token name, you can set the <tt>WATCHMAN_TOKEN_NAME</tt>.\nThe value of this setting will be the <strong>GET</strong> parameter that you must pass in:</p>\n<pre>WATCHMAN_TOKEN_NAME = 'custom-token-name'\n\nGET http://127.0.0.1:8000/watchman/?custom-token-name=:token\n</pre>\n<p><strong>DEPRECATION WARNING</strong>: <tt>WATCHMAN_TOKEN</tt> was replaced by the <tt>WATCHMAN_TOKENS</tt> setting to support multiple authentication tokens in django-watchman <tt>0.11</tt>.\nIt will continue to work until it\u2019s removed in django-watchman <tt>1.0</tt>.</p>\n</div>\n<div id=\"custom-authentication-authorization\">\n<h4>Custom authentication/authorization</h4>\n<p>If you want to protect the status endpoint with a customized\nauthentication/authorization decorator, you can add <tt>WATCHMAN_AUTH_DECORATOR</tt>\nto your settings. This needs to be a dotted-path to a decorator, and defaults\nto <tt>watchman.decorators.token_required</tt>:</p>\n<pre>WATCHMAN_AUTH_DECORATOR = 'django.contrib.admin.views.decorators.staff_member_required'\n</pre>\n<p>Note that the <tt>token_required</tt> decorator does not protect a view unless\n<tt>WATCHMAN_TOKENS</tt> is set in settings.</p>\n</div>\n<div id=\"custom-checks\">\n<h4>Custom checks</h4>\n<p>django-watchman allows you to customize the checks which are run by modifying\nthe <tt>WATCHMAN_CHECKS</tt> setting. In <tt>settings.py</tt>:</p>\n<pre>WATCHMAN_CHECKS = (\n    'module.path.to.callable',\n    'another.module.path.to.callable',\n)\n</pre>\n<p>You can also import the watchman.constants to include the DEFAULT_CHECKS and PAID_CHECKS in your <tt>settings.py</tt>:</p>\n<pre>from watchman import constants as watchman_constants\n\nWATCHMAN_CHECKS = watchman_constants.DEFAULT_CHECKS + ('module.path.to.callable', )\n</pre>\n<p>Checks take no arguments, and must return a <tt>dict</tt> whose keys are applied to the JSON response. Use the <tt>watchman.decorators.check</tt> decorator to capture exceptions:</p>\n<pre>from watchman.decorators import check\n\n@check\ndef my_check():\n    return {'x': 1}\n</pre>\n<p>In the absence of any checks, a 404 is thrown, which is then handled by the\n<tt>json_view</tt> decorator.</p>\n</div>\n<div id=\"run-a-subset-of-available-checks\">\n<h4>Run a subset of available checks</h4>\n<p>A subset of checks may be run, by passing <tt><span class=\"pre\">?check=module.path.to.callable&amp;check=...</span></tt>\nin the request URL. Only the callables given in the querystring which are also\nin <tt>WATCHMAN_CHECKS</tt> should be run, eg:</p>\n<pre>curl -XGET http://127.0.0.1:8080/watchman/?check=watchman.checks.caches\n</pre>\n</div>\n<div id=\"skip-specific-checks\">\n<h4>Skip specific checks</h4>\n<p>You can skip any number of checks, by passing <tt><span class=\"pre\">?skip=module.path.to.callable&amp;skip=...</span></tt>\nin the request URL. Only the checks in <tt>WATCHMAN_CHECKS</tt> which are not in the\nquerystring should be run, eg:</p>\n<pre>curl -XGET http://127.0.0.1:8080/watchman/?skip=watchman.checks.email\n</pre>\n</div>\n<div id=\"check-a-subset-of-databases-or-caches\">\n<h4>Check a subset of databases or caches</h4>\n<p>If your application has a large number of databases or caches configured,\nwatchman may open too many connections as it checks each database or cache.</p>\n<p>You can set the <tt>WATCHMAN_DATABASES</tt> or <tt>WATCHMAN_CACHES</tt> settings in order\nto override the default set of databases and caches to be monitored.</p>\n</div>\n<div id=\"ping\">\n<h4>Ping</h4>\n<p>If you want to simply check that your application is running and able to handle\nrequests, you can call ping:</p>\n<blockquote>\nGET <a href=\"http://127.0.0.1:8000/watchman/ping/\" rel=\"nofollow\">http://127.0.0.1:8000/watchman/ping/</a></blockquote>\n<p>It will return the text <tt>pong</tt> with a 200 status code. Calling this doesn\u2019t\nrun any of the checks.</p>\n</div>\n<div id=\"bare-status-view\">\n<h4>Bare status view</h4>\n<p>If you would like a \u201cbare\u201d status view (one that doesn\u2019t report any details,\njust <tt>HTTP 200</tt> if checks pass, and <tt>HTTP 500</tt> if any checks fail), you\ncan use the <tt>bare_status</tt> view by putting the following into <tt>urls.py</tt>:</p>\n<pre>import watchman.views\n# ...\nurl(r'^status/?$', watchman.views.bare_status),\n</pre>\n</div>\n<div id=\"django-management-command\">\n<h4>Django management command</h4>\n<p>You can also run your checks without starting the webserver and making requests.\nThis can be useful for testing your configuration before enabling a server,\nchecking configuration on worker servers, etc. Run the management command like so:</p>\n<pre>python manage.py watchman\n</pre>\n<p>By default, successful checks will not print any output. If all checks pass\nsuccessfully, the exit code will be <tt>0</tt>. If a check fails, the exit code will\nbe <tt>1</tt>, and the error message including stack trace will be printed to <tt>stderr</tt>.</p>\n<p>If you\u2019d like to see output for successful checks as well, set verbosity to\n<tt>2</tt> or higher:</p>\n<pre>python manage.py watchman -v 2\n{\"storage\": {\"ok\": true}}\n{\"caches\": [{\"default\": {\"ok\": true}}]}\n{\"databases\": [{\"default\": {\"ok\": true}}]}\n</pre>\n<p>If you\u2019d like to run a subset of checks, use <tt><span class=\"pre\">-c</span></tt> and a comma-separated list\nof python module paths:</p>\n<pre>python manage.py watchman -c watchman.checks.caches,watchman.checks.databases -v 2\n{\"caches\": [{\"default\": {\"ok\": true}}]}\n{\"databases\": [{\"default\": {\"ok\": true}}]}\n</pre>\n<p>If you\u2019d like to skip certain checks, use <tt><span class=\"pre\">-s</span></tt> and a comma-separated list of\npython module paths:</p>\n<pre>python manage.py watchman -s watchman.checks.caches,watchman.checks.databases -v 2\n{\"storage\": {\"ok\": true}}\n</pre>\n<p>Use <tt><span class=\"pre\">-h</span></tt> to see a full list of options:</p>\n<pre>python manage.py watchman -h\n</pre>\n</div>\n<div id=\"x-watchman-version-response-header\">\n<h4>X-Watchman-Version response header</h4>\n<p>Watchman can return the version of watchman which is running to help you keep\ntrack of whether or not your sites are using an up-to-date version. This is\ndisabled by default to prevent any unintended information leakage for websites\nwithout authentication. To enable, update the <tt>EXPOSE_WATCHMAN_VERSION</tt>\nsetting:</p>\n<pre>EXPOSE_WATCHMAN_VERSION = True\n</pre>\n</div>\n<div id=\"custom-response-code\">\n<h4>Custom response code</h4>\n<p>By default, watchman will return a <tt>500</tt> HTTP response code, even if there\u2019s a\nfailing check. You can specify a different response code for failing checks\nusing the <tt>WATCHMAN_ERROR_CODE</tt> setting:</p>\n<pre>WATCHMAN_ERROR_CODE = 200\n</pre>\n</div>\n<div id=\"logging\">\n<h4>Logging</h4>\n<p>watchman includes log messages using a logger called <tt>watchman</tt>.\nYou can configure this by configuring the <tt>LOGGING</tt> section of your Django\nsettings file.</p>\n<p>Here is a simple example that would log to the console:</p>\n<pre>LOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'handlers': {\n        'console': {\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'loggers': {\n        'watchman': {\n            'handlers': ['console'],\n            'level': 'DEBUG',\n        },\n    },\n}\n</pre>\n<p>More information is available in the <a href=\"https://docs.djangoproject.com/en/2.0/topics/logging/#configuring-logging%5D\" rel=\"nofollow\">Django documentation</a>.</p>\n</div>\n<div id=\"apm-datadog-new-relic\">\n<h4>APM (Datadog, New Relic)</h4>\n<p>If you\u2019re using APM and watchman is being often hit for health checks (such as an ELB on\nAWS), you will find some stats based on averages will be affected (average transaction\ntime, apdex, etc):</p>\n<p>You can disable APM instrumentation for watchman by using the <tt>WATCHMAN_DISABLE_APM</tt>\nsetting:</p>\n<pre>WATCHMAN_DISABLE_APM = True\n</pre>\n<p>This currently supports the following agents:</p>\n<ul>\n<li>Datadog</li>\n<li>New Relic</li>\n</ul>\n<p>Please open an issue if there\u2019s another APM you use which is being affected.</p>\n</div>\n</div>\n<div id=\"available-checks\">\n<h3>Available checks</h3>\n<div id=\"caches\">\n<h4>caches</h4>\n<p>For each cache in <tt>django.conf.settings.CACHES</tt>:</p>\n<ul>\n<li>Set a test cache item</li>\n<li>Get test item</li>\n<li>Delete test item</li>\n</ul>\n</div>\n<div id=\"databases\">\n<h4>databases</h4>\n<p>For each database in <tt>django.conf.settings.DATABASES</tt>:</p>\n<ul>\n<li>Verify connection by calling <tt><span class=\"pre\">connections[database].introspection.table_names()</span></tt></li>\n</ul>\n</div>\n<div id=\"email\">\n<h4>email</h4>\n<p>Send a test email to <tt>to@example.com</tt> using <tt>django.core.mail.send_mail</tt>.</p>\n<p>If you\u2019re using a 3rd party mail provider, this check could end up costing you\nmoney, depending how aggressive you are with your monitoring. For this reason,\nthis check is <strong>not enabled</strong> by default.</p>\n<p>For reference, if you were using Mandrill, and hitting your watchman endpoint\nonce per minute, this would cost you ~$5.60/month.</p>\n<p><strong>Custom Settings</strong></p>\n<ul>\n<li><tt>WATCHMAN_EMAIL_SENDER</tt> (default: <tt>watchman@example.com</tt>): Specify an email to be the sender of the test email</li>\n<li><tt>WATCHMAN_EMAIL_RECIPIENTS</tt> (default: <tt>[to@example.com]</tt>): Specify a list of email addresses to send the test email</li>\n<li><tt>WATCHMAN_EMAIL_HEADERS</tt> (default: <tt>{}</tt>): Specify a dict of custom headers to be added to the test email</li>\n</ul>\n</div>\n<div id=\"storage\">\n<h4>storage</h4>\n<p>Using <tt>django.core.files.storage.default_storage</tt>:</p>\n<ul>\n<li>Write a test file</li>\n<li>Check the test file\u2019s size</li>\n<li>Read the test file\u2019s contents</li>\n<li>Delete the test file</li>\n</ul>\n<p>By default the test file gets written on the root of the django <tt>MEDIA_ROOT</tt>. If for whatever reasons this path is not writable by the user that runs the application you can override it by setting <tt>WATCHMAN_STORAGE_PATH</tt> to a specific path.\nRemember that this must be within the <tt>MEDIA_ROOT</tt>, which by default is your project root. In <tt>settings.py</tt>:</p>\n<pre>WATCHMAN_STORAGE_PATH = \"/path_to_your_app/foo/bar/\"\n</pre>\n<p>If the <tt>MEDIA_ROOT</tt> is already defined:</p>\n<pre>from os.path import join as joinpath\nWATCHMAN_STORAGE_PATH = joinpath(MEDIA_ROOT, \"foo/bar\")\n</pre>\n</div>\n<div id=\"default-checks\">\n<h4>Default checks</h4>\n<p>By default, django-watchman will run checks against your databases\n(<tt>watchman.checks.databases</tt>), caches (<tt>watchman.checks.caches</tt>), and\nstorage (<tt>watchman.checks.storage</tt>).</p>\n</div>\n<div id=\"paid-checks\">\n<h4>Paid checks</h4>\n<p>Currently there is only one \u201cpaid\u201d check - <tt>watchman.checks.email</tt>. You can\nenable it by setting the <tt>WATCHMAN_ENABLE_PAID_CHECKS</tt> to <tt>True</tt>, or by\noverriding the <tt>WATCHMAN_CHECKS</tt> setting.</p>\n</div>\n</div>\n<div id=\"trying-it-out-with-docker\">\n<h3>Trying it out with Docker</h3>\n<p>A sample project is available along with a Dockerfile to make it easy to try\nout django-watchman.</p>\n<div id=\"requirements\">\n<h4>Requirements</h4>\n<ul>\n<li><cite>Docker &lt;https://www.docker.com/get-docker&gt;</cite></li>\n</ul>\n</div>\n<div id=\"instructions\">\n<h4>Instructions</h4>\n<ol>\n<li>Build and run the Docker image with the current local code: <tt>make run</tt></li>\n<li>Visit watchman json endpoint in your browser: <a href=\"http://127.0.0.1:8000/watchman/\" rel=\"nofollow\">http://127.0.0.1:8000/watchman/</a></li>\n<li>Visit watchman dashboard in your browser: <a href=\"http://127.0.0.1:8000/watchman/dashboard/\" rel=\"nofollow\">http://127.0.0.1:8000/watchman/dashboard/</a></li>\n<li>Visit watchman ping in your browser: <a href=\"http://127.0.0.1:8000/watchman/ping/\" rel=\"nofollow\">http://127.0.0.1:8000/watchman/ping/</a></li>\n<li>Visit watchman bare status in your browser: <a href=\"http://127.0.0.1:8000/watchman/bare/\" rel=\"nofollow\">http://127.0.0.1:8000/watchman/bare/</a></li>\n</ol>\n</div>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.1.1 (2020-05-04)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/159\" rel=\"nofollow\">#159</a>] Fixed invalid escape sequence in decorators by changing to a raw string</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1.0 (2020-03-16)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/155\" rel=\"nofollow\">#154</a>] Added custom path support for storage check</li>\n</ul>\n</div>\n<div id=\"yyyy-mm-dd\">\n<h3>1.0.1 (YYYY-MM-DD)</h3>\n<ul>\n<li>Fix modal popups on dashboards when Type or Name fields contains spaces (@maikeps)</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.0 (2019-12-18)</h3>\n<ul>\n<li>Official django-watchman 1.0 release! Releases will (try to) follow semantic versioning from now on.</li>\n<li>Drop support for python 2 and Django&lt;2 (@JBKahn)</li>\n<li>Drop usage of <tt><span class=\"pre\">django-jsonview</span></tt> in favor of the Django\u2019s built in JsonResponse (@JBKahn)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.18.0 (2019-08-19)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/142\" rel=\"nofollow\">#142</a>] Skip traces in Datadog if <tt>WATCHMAN_DISABLE_APM</tt> is enabled (@robatwave)</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.17.0 (2019-06-14)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/141\" rel=\"nofollow\">#141</a>] Disable APM monitoring on <tt>ping</tt> endpoint if <tt>settings.WATCHMAN_DISABLE_APM</tt> is configured (@JBKahn)</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.16.0 (2019-03-19)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/131\" rel=\"nofollow\">#131</a>] Make watchman constants importable (@jonespm)</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/134\" rel=\"nofollow\">#134</a>] Update Django/Python versions &amp; clean up sample site Docker (@JayH5)</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.15.0 (2018-02-27)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/114\" rel=\"nofollow\">#114</a>] Add \u201cbare\u201d status view (@jamesmallen)</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/115\" rel=\"nofollow\">#115</a>] Adds <tt>WATCHMAN_DISABLE_APM</tt> option (@xfxf)</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/63\" rel=\"nofollow\">#63</a>] Disable watchman version output by default, add <tt>EXPOSE_WATCHMAN_VERSION</tt> setting (@mwarkentin)</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.14.0 (2018-01-09)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/110\" rel=\"nofollow\">#110</a>] Replace vagrant + ansible with Dockerfile (@ryanwilsonperkin)</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/111\" rel=\"nofollow\">#111</a>] Configure Django logging for checks (@dhoffman34)</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/112\" rel=\"nofollow\">#112</a>] Add simple HTTP ping endpoint (@dhoffman34)</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>0.13.1 (2017-05-27)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/101\" rel=\"nofollow\">#101</a>] Write <tt>bytes</tt> to dummy file on storage check to fix an issue in Python 3 (thanks @saily!)</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>0.13.0 (2017-05-23)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/105\" rel=\"nofollow\">#105</a>] Add <tt>WATCHMAN_CACHES</tt> and <tt>WATCHMAN_DATABASES</tt> settings to override the Django defaults<ul>\n<li>When using watchman with a large number of databases, the default checks can cause an excess of connections to the database / cache</li>\n<li>New settings allow you to check only a subset of databases / caches</li>\n<li>Watchman will still default to checking all databases / caches, so no changes necessary for most apps</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>0.12.0 (2017-02-22)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/100\" rel=\"nofollow\">#100</a>] Add <tt>WATCHMAN_EMAIL_SENDER</tt> setting to customize email check \u201cfrom\u201d address</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>0.11.1 (2017-02-14)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/99\" rel=\"nofollow\">#99</a>] Fix verbose output in management command on Django 1.8+</li>\n</ul>\n</div>\n<div id=\"id29\">\n<h3>0.11.0 (2016-08-02)</h3>\n<ul>\n<li>Update tests to run on Django 1.7 - 1.10</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/87\" rel=\"nofollow\">#87</a>] Fix 500 errors with ATOMIC_REQUESTS enabled<ul>\n<li>Disables atomic transactions on the watchman views to prevent generic 500 errors</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/88\" rel=\"nofollow\">#88</a>] Restructure dashboard and switch icon libraries<ul>\n<li>Make check types singular on dashboard</li>\n<li>Switch to FontAwesome instead of Glyphicon to track Bootstrap updates</li>\n<li>Improve traceback display width</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/92\" rel=\"nofollow\">#92</a>] Support multiple auth tokens<ul>\n<li>Fixes [<a href=\"https://github.com/mwarkentin/django-watchman/pull/86\" rel=\"nofollow\">#86</a>]</li>\n<li>Deprecates <tt>settings.WATCHMAN_TOKEN</tt> and adds <tt>settings.WATCHMAN_TOKENS</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h3>0.10.1 (2016-05-03)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/81\" rel=\"nofollow\">#81</a>] Fix header-based authentication for tokens w/ dashes (<cite>-</cite>)<ul>\n<li>Regex was overly specific for header values (<cite>w</cite>)</li>\n<li>Added TODO to follow up with a full regex for valid characters according to the spec</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id36\">\n<h3>0.10.0 (2016-05-02)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/75\" rel=\"nofollow\">#75</a>] Enable header-based authentication<ul>\n<li>Set a header instead of passing the token via GET param: <tt>\"Authorization: <span class=\"pre\">WATCHMAN-TOKEN</span> <span class=\"pre\">Token=\\\":token\\\"\"</span></tt></li>\n<li>Improves security by keeping tokens out of logs</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/79\" rel=\"nofollow\">#79</a>] Enable customization of email check<ul>\n<li>Add <tt>WATCHMAN_EMAIL_RECIPIENTS</tt> setting - pass a list of recipients the email should be sent to</li>\n<li>Add <tt>WATCHMAN_EMAIL_HEADERS</tt> setting - pass a dict of custom headers to be set on the email</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id39\">\n<h3>0.9.0 (2015-12-16)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/51\" rel=\"nofollow\">#51</a>] Update TravisCI Python / Django versions</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/52\" rel=\"nofollow\">#52</a>] Fix deprecated <tt>url_patterns</tt></li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/54\" rel=\"nofollow\">#53</a>] Change default error response code to <tt>500</tt></li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/56\" rel=\"nofollow\">#56</a>] Add <tt>@check</tt> decorator and refactor existing checks to use it (thanks @benwebber!)</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/57\" rel=\"nofollow\">#57</a>] Sort <tt>caches</tt> / <tt>databases</tt> in response for more consistent responses</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/59\" rel=\"nofollow\">#59</a>] Add <tt>.editorconfig</tt> for improved consistency in contributions</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/61\" rel=\"nofollow\">#61</a>] Add <tt>Vagrantfile</tt> and docs for how to run and develop on Vagrant instance</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/65\" rel=\"nofollow\">#65</a>] Include assets in source tarball for Debian packaging (thanks @fladi)</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/71\" rel=\"nofollow\">#71</a>] Unpin <cite>django-jsonview</cite> in setup.py</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/72\" rel=\"nofollow\">#72</a>] Fix stacktrace on dashboard modal and increase width for better readability</li>\n</ul>\n</div>\n<div id=\"id50\">\n<h3>0.8.0 (2015-10-03)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/46\" rel=\"nofollow\">#46</a>] Allow custom response codes with the <tt>WATCHMAN_ERROR_CODE</tt> setting</li>\n</ul>\n</div>\n<div id=\"id52\">\n<h3>0.7.1 (2015-08-14)</h3>\n<ul>\n<li>Update headers in <tt>HISTORY.rst</tt> to attempt to fix localshop parsing issues</li>\n</ul>\n</div>\n<div id=\"id53\">\n<h3>0.7.0 (2015-08-14)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/40\" rel=\"nofollow\">#40</a>] Bump <tt><span class=\"pre\">django-jsonview</span></tt> for improved Django 1.8 compatibility<ul>\n<li>Also brought travis Django test versions in line with currently supported Django versions (1.4.x, 1.7.x, 1.8.x)</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id55\">\n<h3>0.6.0 (2015-07-02)</h3>\n<ul>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/30\" rel=\"nofollow\">#30</a>] Allow users to specify a custom authentication/authorization decorator<ul>\n<li>Override the <tt>@auth</tt> decorator by setting <tt>WATCHMAN_AUTH_DECORATOR</tt> to a dot-separated path to your own decorator</li>\n<li>eg. <tt>WATCHMAN_AUTH_DECORATOR = 'django.contrib.admin.views.decorators.staff_member_required'</tt></li>\n<li>Token-based authentication remains the default</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/31\" rel=\"nofollow\">#31</a>], [<a href=\"https://github.com/mwarkentin/django-watchman/pull/34\" rel=\"nofollow\">#34</a>] Add a human-friendly status dashboard<ul>\n<li>Available at <tt>&lt;watchman <span class=\"pre\">url&gt;/dashboard/</span></tt></li>\n<li><tt><span class=\"pre\">?check</span></tt> &amp; <tt><span class=\"pre\">?skip</span></tt> GET params work on the dashboard as well</li>\n</ul>\n</li>\n<li>[<a href=\"https://github.com/mwarkentin/django-watchman/pull/35\" rel=\"nofollow\">#35</a>] Add <tt><span class=\"pre\">X-Watchman-Version</span></tt> header to responses</li>\n</ul>\n</div>\n<div id=\"id60\">\n<h3>0.5.0 (2015-01-25)</h3>\n<ul>\n<li>Add <tt>watchman</tt> management command<ul>\n<li>Exit code of <tt>0</tt> if all checks pass, <tt>1</tt> otherwise</li>\n<li>Print json stacktrace to <tt>stderr</tt> if check fails</li>\n<li>Handles <tt><span class=\"pre\">--verbosity</span></tt> option to print all status checks</li>\n<li><tt><span class=\"pre\">-c</span></tt>, <tt><span class=\"pre\">--checks</span></tt>, <tt><span class=\"pre\">-s</span></tt>, <tt><span class=\"pre\">--skips</span></tt> options take comma-separated list of python paths to run / skip</li>\n</ul>\n</li>\n<li>Improve identifiability of emails sent from a django-watchman endpoint<ul>\n<li>From: <a href=\"mailto:watchman%40example.com\">watchman<span>@</span>example<span>.</span>com</a></li>\n<li>Subject: django-watchman email check</li>\n<li>Body: This is an automated test of the email system.</li>\n<li>Add <tt><span class=\"pre\">X-DJANGO-WATCHMAN:</span> True</tt> custom header</li>\n</ul>\n</li>\n<li>Add new default check: <tt>storage</tt> check<ul>\n<li>Checks that files can be both written and read with the current Django storage engine</li>\n<li>Add <tt>WATCHMAN_ENABLE_PAID_CHECKS</tt> setting to enable all paid checks without modifying <tt>WATCHMAN_CHECKS</tt></li>\n</ul>\n</li>\n<li>Remove <tt>email_status</tt> from default checks</li>\n<li>Refactor <tt>utils.get_checks</tt> to allow reuse in management command<ul>\n<li><tt>get_checks</tt> now performs the optional check inclusion / skipping</li>\n<li><tt>status</tt> refactored to pull <tt>check_list</tt> / <tt>skip_list</tt> from GET params and pass them to <tt>get_checks</tt></li>\n</ul>\n</li>\n<li>Namespace cache keys</li>\n<li>Update documentation</li>\n</ul>\n</div>\n<div id=\"id61\">\n<h3>0.4.0 (2014-09-08)</h3>\n<ul>\n<li>Add the ability to skip certain checks by passing one or more\n<tt>skip=path.to.callable</tt> GET params when hitting the watchman URL</li>\n</ul>\n</div>\n<div id=\"id62\">\n<h3>0.3.0 (2014-09-05)</h3>\n<ul>\n<li>New check - email (<tt>watchman.checks.email_status</tt>)! django-watchman will now\ncheck that your email settings are working too!</li>\n<li>Fix a few small issues in the readme</li>\n<li>Rearrange some of the code in checks.py</li>\n</ul>\n</div>\n<div id=\"id63\">\n<h3>0.2.2 (2014-09-05)</h3>\n<ul>\n<li>Fix and run tests on Python 2.7 and 3.4</li>\n<li>Bump django-jsonview dependency to latest</li>\n<li>Update tox envlist and travis config to test 2.7 / 3.4</li>\n</ul>\n</div>\n<div id=\"id64\">\n<h3>0.2.1 (2014-09-04)</h3>\n<ul>\n<li>Initialize django during tests to prevent app loading issue for Django &gt;= 1.7</li>\n<li>Suppress <tt>MIDDLEWARE_CLASSES</tt> warning for Django &gt;= 1.7</li>\n<li>Reorganize test imports</li>\n<li>Fix <tt>make test</tt>, <tt>make coverage</tt>, <tt>make release</tt> commands</li>\n<li>Add htmlcov/ directory to .gitignore</li>\n<li>Test django 1.4, 1.6, 1.7</li>\n</ul>\n</div>\n<div id=\"id65\">\n<h3>0.2.0 (2014-09-04)</h3>\n<ul>\n<li>Custom checks can now be written and run using the <tt>WATCHMAN_CHECKS</tt> setting</li>\n<li>A subset of the available checks can be run by passing the <tt>check</tt> GET param\nwhen hitting the watchman url</li>\n</ul>\n</div>\n<div id=\"id66\">\n<h3>0.1.2 (2014-02-21)</h3>\n<ul>\n<li>Move package requirements out of requirements.txt and into setup.py</li>\n</ul>\n</div>\n<div id=\"id67\">\n<h3>0.1.1 (2014-02-09)</h3>\n<ul>\n<li>Remove <tt><span class=\"pre\">django&gt;=1.5.5</span></tt> version specification</li>\n<li>Remove <tt>wheel</tt> requirement</li>\n</ul>\n</div>\n<div id=\"id68\">\n<h3>0.1.0 (2014-02-08)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7169182, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a905567e4b41e92640620d6df4a3a95c", "sha256": "33763e862bd0adb8ff341fcf3f55d1fee057bc579da1a42f4a4a78cb43140ba2"}, "downloads": -1, "filename": "django_watchman-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a905567e4b41e92640620d6df4a3a95c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6811, "upload_time": "2014-02-09T22:45:11", "upload_time_iso_8601": "2014-02-09T22:45:11.244272Z", "url": "https://files.pythonhosted.org/packages/86/e4/dc134a0fda5c8a7d188ffa17f4f1e6666bc0fe5d72e9b5f07cbbfcba6a90/django_watchman-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3cada1c0f1fa9a3a0ed75bc7c9bfc13", "sha256": "af51d34868bf8d5351fba677125a1708239ed42395e1a05c7e0cd2ffe05faf91"}, "downloads": -1, "filename": "django-watchman-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e3cada1c0f1fa9a3a0ed75bc7c9bfc13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6344, "upload_time": "2014-02-09T22:45:06", "upload_time_iso_8601": "2014-02-09T22:45:06.275320Z", "url": "https://files.pythonhosted.org/packages/62/15/aab8c6e02a92e911db5b9860124585c7b0995f6fdd7803e4eef75cf62cbc/django-watchman-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4f3de4acbaf5285401f293a486d1c375", "sha256": "df7190fa972c997059183ebca7bdb574d62e3800d778c5335637929a3f8a3cfa"}, "downloads": -1, "filename": "django_watchman-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f3de4acbaf5285401f293a486d1c375", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7009, "upload_time": "2014-02-09T23:30:47", "upload_time_iso_8601": "2014-02-09T23:30:47.496740Z", "url": "https://files.pythonhosted.org/packages/1a/35/0e16f9e7386ab5c5d528adf2fb62276c80b6613142304ff5824b3a04b4c5/django_watchman-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "340455eaaf24df33a453c1bd3edcc2f2", "sha256": "e90d2dc2b01a81f2b6610c9719ed054c03ea1b96032f94b12e48eb5ec2582072"}, "downloads": -1, "filename": "django-watchman-0.1.1.tar.gz", "has_sig": false, "md5_digest": "340455eaaf24df33a453c1bd3edcc2f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6464, "upload_time": "2014-02-09T23:30:41", "upload_time_iso_8601": "2014-02-09T23:30:41.289060Z", "url": "https://files.pythonhosted.org/packages/12/d7/3ca5f5418fbd79237716e7a59324f1f1b4ed341e676e2273c08b573a8ea8/django-watchman-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d6f21fcffcb45e1072ecc7f3ec4e2d47", "sha256": "3171e3593d2180845d526f02d7762007009abf12f59528193bbcf6c031978a86"}, "downloads": -1, "filename": "django_watchman-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d6f21fcffcb45e1072ecc7f3ec4e2d47", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7077, "upload_time": "2014-02-21T16:03:07", "upload_time_iso_8601": "2014-02-21T16:03:07.162661Z", "url": "https://files.pythonhosted.org/packages/cb/99/8191538b3cbb5b985e1abb3fa09073dd4dfe63682d2b02cef15511c9e359/django_watchman-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "797cb200fe24f91279dba0d2b81550fe", "sha256": "cca35bc92095913e5b70f7f0cf8fc1c816f0f21b69cdac53e2566fdfa423feb7"}, "downloads": -1, "filename": "django-watchman-0.1.2.tar.gz", "has_sig": false, "md5_digest": "797cb200fe24f91279dba0d2b81550fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6446, "upload_time": "2014-02-21T16:02:41", "upload_time_iso_8601": "2014-02-21T16:02:41.626813Z", "url": "https://files.pythonhosted.org/packages/4b/d4/c43af8962083809db5b0ae24cbc0eb71374c3d54ee330a88cfab88c47ccf/django-watchman-0.1.2.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "7467ff85e8f8f7110e5b5e0f6d4e5b3f", "sha256": "87a1465608904bd54000dedcd7ad9bcff9659d25d01563cab3f9d23fe521f2ea"}, "downloads": -1, "filename": "django_watchman-0.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7467ff85e8f8f7110e5b5e0f6d4e5b3f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21107, "upload_time": "2016-05-02T19:34:35", "upload_time_iso_8601": "2016-05-02T19:34:35.247749Z", "url": "https://files.pythonhosted.org/packages/e7/84/a4e2a379a4416b400a5fd2dc932ac04a5e97223bc8b7f2f41c5cede86d90/django_watchman-0.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4cae27707ad84f0606d2f20accb5754", "sha256": "4b64710f01f3d571d6a098b4197ce0add9919050f8aba1f806a4a2cd1e82bb61"}, "downloads": -1, "filename": "django-watchman-0.10.0.tar.gz", "has_sig": false, "md5_digest": "e4cae27707ad84f0606d2f20accb5754", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30028, "upload_time": "2016-05-02T19:34:17", "upload_time_iso_8601": "2016-05-02T19:34:17.054844Z", "url": "https://files.pythonhosted.org/packages/22/1f/ce4eb7a868646ac378e8e23f55eb54664ee1f1e8fb6bbc4e68b9819f3c2b/django-watchman-0.10.0.tar.gz", "yanked": false}], "0.10.0rc0": [{"comment_text": "", "digests": {"md5": "28f98295273c6c3116056c5a7d09ea76", "sha256": "453fc78a20cc815d6c7568e78c3b3b675bc00007a88b91d0bde7f5f104aa6a7a"}, "downloads": -1, "filename": "django_watchman-0.10.0rc0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "28f98295273c6c3116056c5a7d09ea76", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21135, "upload_time": "2016-05-02T17:55:27", "upload_time_iso_8601": "2016-05-02T17:55:27.671035Z", "url": "https://files.pythonhosted.org/packages/60/d0/efeeb24c6841e51cb42a08b9a557806d7a0651334f3bd4f5da247b6d6291/django_watchman-0.10.0rc0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d15f6928489e08a213e772637ae0c41f", "sha256": "da4011453aa2a6469598770fd604efa51041a69f590235e131a9b9f42dc5b90b"}, "downloads": -1, "filename": "django-watchman-0.10.0rc0.tar.gz", "has_sig": false, "md5_digest": "d15f6928489e08a213e772637ae0c41f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30031, "upload_time": "2016-05-02T17:55:07", "upload_time_iso_8601": "2016-05-02T17:55:07.477817Z", "url": "https://files.pythonhosted.org/packages/4e/02/efc3ae1246b2cdabf3d5847bf4847ca6781170e35338f304f95bdeee175e/django-watchman-0.10.0rc0.tar.gz", "yanked": false}], "0.10.0rc1": [{"comment_text": "", "digests": {"md5": "f974e9c1cf66971ee5ed3ec97fbd0e87", "sha256": "f389a698f7784dac063949d8cf8527eec68bdebfc464d75bece3bb71c010741b"}, "downloads": -1, "filename": "django_watchman-0.10.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f974e9c1cf66971ee5ed3ec97fbd0e87", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21149, "upload_time": "2016-05-02T18:50:59", "upload_time_iso_8601": "2016-05-02T18:50:59.499572Z", "url": "https://files.pythonhosted.org/packages/b3/8d/9d194266c54117e9ad64084bf34271a9c0abea30e6bc6e3ec472c622ab66/django_watchman-0.10.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82af1ea7551bcf602804f39a115b53e5", "sha256": "b0cd20a08772b93067f8c99fc2374ce46bf1a03d33b11aab9a54fda721f6b737"}, "downloads": -1, "filename": "django-watchman-0.10.0rc1.tar.gz", "has_sig": false, "md5_digest": "82af1ea7551bcf602804f39a115b53e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30024, "upload_time": "2016-05-02T18:50:51", "upload_time_iso_8601": "2016-05-02T18:50:51.265638Z", "url": "https://files.pythonhosted.org/packages/55/04/757f15f4c82cb2ec1d41bfcc866a6dd2bd536be5cf2601ed785e0ce5f301/django-watchman-0.10.0rc1.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "de04fbeaaf7b37328fae0d957900349f", "sha256": "7b6b931e95bb9253a82f1a52313e25dff6e569280f224fe12232645a0836863f"}, "downloads": -1, "filename": "django_watchman-0.10.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "de04fbeaaf7b37328fae0d957900349f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21468, "upload_time": "2016-05-03T15:39:55", "upload_time_iso_8601": "2016-05-03T15:39:55.843953Z", "url": "https://files.pythonhosted.org/packages/60/da/604dd920705463b560eacc90de4e65c4e0d4afba284a4e432553f58893ba/django_watchman-0.10.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72a3a3ab4a52fdd4f52302c17ef4aa48", "sha256": "4e18485e1327d6d737c82d57551fdc592a19e5632234a11a66deb8f2139bab08"}, "downloads": -1, "filename": "django-watchman-0.10.1.tar.gz", "has_sig": false, "md5_digest": "72a3a3ab4a52fdd4f52302c17ef4aa48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30486, "upload_time": "2016-05-03T15:39:48", "upload_time_iso_8601": "2016-05-03T15:39:48.429661Z", "url": "https://files.pythonhosted.org/packages/1f/64/358947e66ef3494b3cf64575873516f461e795679f9b94cfa7cf3d93ca50/django-watchman-0.10.1.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "cb84407b3823b0e031bbc53ae1010b51", "sha256": "36df2387978745902c7e6480bc7c6a15b1083bb8e3793e6bcc3bc3805777059c"}, "downloads": -1, "filename": "django_watchman-0.11.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cb84407b3823b0e031bbc53ae1010b51", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22455, "upload_time": "2016-08-15T15:58:17", "upload_time_iso_8601": "2016-08-15T15:58:17.641113Z", "url": "https://files.pythonhosted.org/packages/de/17/ebf077170239c46556ca34f1fb65acb27f64c38df40c05bacba670d58679/django_watchman-0.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30caa08241912eb9bc860cac675658bc", "sha256": "7086dcd7e20a8c8262a68bf7a26cd122ede38eee38666df0b52e1527d95f5538"}, "downloads": -1, "filename": "django-watchman-0.11.0.tar.gz", "has_sig": false, "md5_digest": "30caa08241912eb9bc860cac675658bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32373, "upload_time": "2016-08-15T15:58:13", "upload_time_iso_8601": "2016-08-15T15:58:13.278149Z", "url": "https://files.pythonhosted.org/packages/ce/cd/66a1e9fbc895ad30779a02b4a6ad5baeb8968b901eb8c9f895cfbe9bb3ee/django-watchman-0.11.0.tar.gz", "yanked": false}], "0.11.0rc1": [{"comment_text": "", "digests": {"md5": "658aac7fc81786fa5a4e9fe75546c50a", "sha256": "c2e83eb323cdef42bc6540b362abcdc34292cc6c71290024a9fa67856f63bcbd"}, "downloads": -1, "filename": "django_watchman-0.11.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "658aac7fc81786fa5a4e9fe75546c50a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22475, "upload_time": "2016-08-02T18:26:09", "upload_time_iso_8601": "2016-08-02T18:26:09.259235Z", "url": "https://files.pythonhosted.org/packages/47/3f/0650096fa8bed1190ebde26171ab2da2519a30f49294eb5cbf94ad4dbbbf/django_watchman-0.11.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6be1a8c7fef5e805617a4a11db32e33", "sha256": "9c141c9dc7f5d8049902a85ca0e31cab41c5206dc41e8acf1f985d1faea0d6a8"}, "downloads": -1, "filename": "django-watchman-0.11.0rc1.tar.gz", "has_sig": false, "md5_digest": "b6be1a8c7fef5e805617a4a11db32e33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32340, "upload_time": "2016-08-02T18:26:02", "upload_time_iso_8601": "2016-08-02T18:26:02.393358Z", "url": "https://files.pythonhosted.org/packages/1c/b9/2109594b2e5331dcd7c27a752f1c1bcccce40c70e9c632ade8af785f041d/django-watchman-0.11.0rc1.tar.gz", "yanked": false}], "0.11.1": [{"comment_text": "", "digests": {"md5": "d920383c55ad082218ef8f7393c8f26a", "sha256": "36a49854388c3a37820af24599c3bad9f36fba220113cb4df719ed8367622ad8"}, "downloads": -1, "filename": "django_watchman-0.11.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d920383c55ad082218ef8f7393c8f26a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22384, "upload_time": "2017-02-14T21:26:10", "upload_time_iso_8601": "2017-02-14T21:26:10.185138Z", "url": "https://files.pythonhosted.org/packages/f7/11/b9ffc2123e74ecbccaca55f4bec2d01e9d889b17e358289fa840a0bab4bc/django_watchman-0.11.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "882339600ba2604315205c95e1cb6cb2", "sha256": "b50fe39895d30c6f10827c5367bf93af0ec8088e1e453d484302476140250f4e"}, "downloads": -1, "filename": "django-watchman-0.11.1.tar.gz", "has_sig": false, "md5_digest": "882339600ba2604315205c95e1cb6cb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32432, "upload_time": "2017-02-14T21:26:07", "upload_time_iso_8601": "2017-02-14T21:26:07.058854Z", "url": "https://files.pythonhosted.org/packages/45/03/7fd9c63b0394d34587e4aa1e3f16dd120f5a1714580ebbb3b848ea6251fa/django-watchman-0.11.1.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "a35bdbbac10a2934a7d914bab84a8981", "sha256": "b1822c9a74caf729b9261f6e617f7e2112388cd908355ce8792227b7a03fa487"}, "downloads": -1, "filename": "django_watchman-0.12.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a35bdbbac10a2934a7d914bab84a8981", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22518, "upload_time": "2017-02-22T18:22:05", "upload_time_iso_8601": "2017-02-22T18:22:05.473146Z", "url": "https://files.pythonhosted.org/packages/44/fe/02540b6a47bd2490bfc55e2886429ae333cb56b229c4e2392a17a785944d/django_watchman-0.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a1a56a26ca4c1e95d5859ed3ed6b7b5", "sha256": "fca6bafe5c9135316afcdbc854aa7d185214cad7e8d7e34802b2a999788efa5b"}, "downloads": -1, "filename": "django-watchman-0.12.0.tar.gz", "has_sig": false, "md5_digest": "1a1a56a26ca4c1e95d5859ed3ed6b7b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32657, "upload_time": "2017-02-22T18:22:01", "upload_time_iso_8601": "2017-02-22T18:22:01.789914Z", "url": "https://files.pythonhosted.org/packages/5a/c9/16325281276e0aa4385eda62d624d1cfc3b5ee1ed04b7e65cb86c4334f23/django-watchman-0.12.0.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "947fa66609d72b8f140a8dcc2dbafe1f", "sha256": "b45b2eb4c56b855488c1584f596b5527d6ef95576703b856a751b41a0c6e83a3"}, "downloads": -1, "filename": "django_watchman-0.13.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "947fa66609d72b8f140a8dcc2dbafe1f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 23034, "upload_time": "2017-05-24T03:12:27", "upload_time_iso_8601": "2017-05-24T03:12:27.808459Z", "url": "https://files.pythonhosted.org/packages/c9/0f/6ba1e6f24017c1f5d04001adfda911789cd155a5554526d761e0beb078a8/django_watchman-0.13.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b80817f4a10fd8342ed30355f890c6bb", "sha256": "1e45e0e63691d8268551092df85f16207adc3fa6be4c09adb05c2872d6e9c876"}, "downloads": -1, "filename": "django-watchman-0.13.0.tar.gz", "has_sig": false, "md5_digest": "b80817f4a10fd8342ed30355f890c6bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33213, "upload_time": "2017-05-24T03:12:24", "upload_time_iso_8601": "2017-05-24T03:12:24.949058Z", "url": "https://files.pythonhosted.org/packages/b9/c2/97939193b0d170b0228ad341abeb86ce96ac8e5f963704e58d856687e310/django-watchman-0.13.0.tar.gz", "yanked": false}], "0.13.0a1": [{"comment_text": "", "digests": {"md5": "2198effeece453825881ceea933a4e68", "sha256": "33c61f389e396c39529c1b3a6572fef5d37034b040c95d67106091b02976d254"}, "downloads": -1, "filename": "django_watchman-0.13.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2198effeece453825881ceea933a4e68", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22578, "upload_time": "2017-05-19T21:32:08", "upload_time_iso_8601": "2017-05-19T21:32:08.900816Z", "url": "https://files.pythonhosted.org/packages/8f/d5/d21a14ebe435e5e831d41e76b3045326f56ebd27edb71312a12993aba330/django_watchman-0.13.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "258e138881c9179452bbbb51ef152d3d", "sha256": "7d3d01975ba19de8335d9e17cea96f5e9e90dce9268914d9d9bae3de55051bc8"}, "downloads": -1, "filename": "django-watchman-0.13.0a1.tar.gz", "has_sig": false, "md5_digest": "258e138881c9179452bbbb51ef152d3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32708, "upload_time": "2017-05-19T21:32:05", "upload_time_iso_8601": "2017-05-19T21:32:05.990328Z", "url": "https://files.pythonhosted.org/packages/a7/8a/9c6896ad2b95823631cf1b80d0658eea48b68e07a3de078863665ae87505/django-watchman-0.13.0a1.tar.gz", "yanked": false}], "0.13.1": [{"comment_text": "", "digests": {"md5": "82d43a5e4f52e154e1e684a08988bd56", "sha256": "39940165c98fcd14906baa9bbcf9c0aa6be70ece94f7babf3d224be7634f2cef"}, "downloads": -1, "filename": "django_watchman-0.13.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "82d43a5e4f52e154e1e684a08988bd56", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 23159, "upload_time": "2017-05-27T18:35:31", "upload_time_iso_8601": "2017-05-27T18:35:31.428124Z", "url": "https://files.pythonhosted.org/packages/d9/c6/74ae59b308a0160e0b28281e8eb09f39521817cd06355e4072a6fac74b58/django_watchman-0.13.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4192ca77b879f6624062e714fbcbc214", "sha256": "221fc2d1aa45926a4ca5c80e102e5cc9c70e634833ddf5135a94f285f521929b"}, "downloads": -1, "filename": "django-watchman-0.13.1.tar.gz", "has_sig": false, "md5_digest": "4192ca77b879f6624062e714fbcbc214", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33390, "upload_time": "2017-05-27T18:35:28", "upload_time_iso_8601": "2017-05-27T18:35:28.197193Z", "url": "https://files.pythonhosted.org/packages/01/cc/04cbcd4bb77504fdcecc121e203d68e5d99f18da12c3cde624819e464dc5/django-watchman-0.13.1.tar.gz", "yanked": false}], "0.13.1a1": [{"comment_text": "", "digests": {"md5": "4b97b26b273e7ccf76ff9369b4c2d02b", "sha256": "150ff63a32b795a6a8d217b9b56d7fbad944a50020101c260b6da1ecd22d7a5e"}, "downloads": -1, "filename": "django_watchman-0.13.1a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b97b26b273e7ccf76ff9369b4c2d02b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 23156, "upload_time": "2017-05-27T17:52:41", "upload_time_iso_8601": "2017-05-27T17:52:41.473070Z", "url": "https://files.pythonhosted.org/packages/0f/2f/f4cdca68f14ed45a45c5d96c32cd02101eb59140b1c267544b4ff9424952/django_watchman-0.13.1a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f7857cc6e29c51d024a92fd56efc8cb", "sha256": "7ce26cca0a4859aa92c00d56476722bd4e4092f8c8b971d552380ec6c451e3e0"}, "downloads": -1, "filename": "django-watchman-0.13.1a1.tar.gz", "has_sig": false, "md5_digest": "4f7857cc6e29c51d024a92fd56efc8cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33383, "upload_time": "2017-05-27T17:52:38", "upload_time_iso_8601": "2017-05-27T17:52:38.184889Z", "url": "https://files.pythonhosted.org/packages/92/60/2dd17cbb1ef828f566bb9fe9f2fc3c14ccdbea0c2cb7f2d3d388d8c68c67/django-watchman-0.13.1a1.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "acfd5994bcb2f6449be32f18629cc332", "sha256": "d2094f09d1bdaa0f24e710da69d77433bd9011c18f74024acb332a2fcfcafe68"}, "downloads": -1, "filename": "django_watchman-0.14.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "acfd5994bcb2f6449be32f18629cc332", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24152, "upload_time": "2018-01-09T21:17:54", "upload_time_iso_8601": "2018-01-09T21:17:54.833250Z", "url": "https://files.pythonhosted.org/packages/cc/a3/0053717535a31c284e779a27a6d4cd02fe94f72084bb178beb20cf97f733/django_watchman-0.14.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7fd6c7dd5d2caae34ffa661a842647a6", "sha256": "0e953c27b8f4c07dcb96712ea4a304de085cf44e7829a33c6e12477cd60b8673"}, "downloads": -1, "filename": "django-watchman-0.14.0.tar.gz", "has_sig": false, "md5_digest": "7fd6c7dd5d2caae34ffa661a842647a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34674, "upload_time": "2018-01-09T21:18:03", "upload_time_iso_8601": "2018-01-09T21:18:03.078299Z", "url": "https://files.pythonhosted.org/packages/b3/6f/7fd34f4a1dfaf41b8f9b3b8ad0c4a2f5d6f0e9986b403f656c754fbaa385/django-watchman-0.14.0.tar.gz", "yanked": false}], "0.14.0a0": [{"comment_text": "", "digests": {"md5": "d484f32b5c6fe0dbfbaec752959d8578", "sha256": "45d46e22595b47bbc0ca79e1038f8926e1cacaf1bd229c8076ed38e2eaa9f863"}, "downloads": -1, "filename": "django_watchman-0.14.0a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d484f32b5c6fe0dbfbaec752959d8578", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23974, "upload_time": "2018-01-08T13:40:38", "upload_time_iso_8601": "2018-01-08T13:40:38.254775Z", "url": "https://files.pythonhosted.org/packages/a7/9a/d8748e8274e66d7b81f9c07f5790becda43e3e8ecf726e497267cb3f0d70/django_watchman-0.14.0a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bffbb2054c5cdd225c24be21c900c225", "sha256": "76c58f228a0999bf2d3548454a519787df2c0e1929a8263397e8c5a06e2e79a6"}, "downloads": -1, "filename": "django-watchman-0.14.0a0.tar.gz", "has_sig": false, "md5_digest": "bffbb2054c5cdd225c24be21c900c225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34415, "upload_time": "2018-01-08T13:40:40", "upload_time_iso_8601": "2018-01-08T13:40:40.029724Z", "url": "https://files.pythonhosted.org/packages/f7/0a/421b30d51b3a6a3523b278a4376ca3a63cb2dec26e63fee6e7b923e97836/django-watchman-0.14.0a0.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "58b59757dc8cc336452edbf6acf2885b", "sha256": "8faa4bd7cfc092721ffc4662c139313ded92c85c7d16396b8ccc2e31d40350e4"}, "downloads": -1, "filename": "django_watchman-0.15.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "58b59757dc8cc336452edbf6acf2885b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25699, "upload_time": "2018-02-27T22:12:17", "upload_time_iso_8601": "2018-02-27T22:12:17.139629Z", "url": "https://files.pythonhosted.org/packages/e1/48/88bb1f4998801ec9ee629a0b16d44bdf008ef29f593549a79c1ecea885f0/django_watchman-0.15.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d444a1eb349d9f8dadabd0019c75d89", "sha256": "1be3019ede05804414a67c116d28a2f1589befaf13aabe47bfc6882a00561db7"}, "downloads": -1, "filename": "django-watchman-0.15.0.tar.gz", "has_sig": false, "md5_digest": "2d444a1eb349d9f8dadabd0019c75d89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36617, "upload_time": "2018-02-27T22:12:18", "upload_time_iso_8601": "2018-02-27T22:12:18.301469Z", "url": "https://files.pythonhosted.org/packages/b5/21/e4570a26f27cc8f580a6a5eb9895bd25c4fc946223a343cd4a61aed86a37/django-watchman-0.15.0.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "499e6bb937ff5e114ffbc3a1931f29f1", "sha256": "c1cc4f87b7821421086db3a2d5f71cd200e7a769630419bcf78770bcbbd26c8e"}, "downloads": -1, "filename": "django_watchman-0.16.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "499e6bb937ff5e114ffbc3a1931f29f1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19589, "upload_time": "2019-03-19T17:29:37", "upload_time_iso_8601": "2019-03-19T17:29:37.311373Z", "url": "https://files.pythonhosted.org/packages/7a/de/08a7ed87155a50056b7241ab3da675ef6b892c2233acc4248d0662e1e20a/django_watchman-0.16.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f51787efc75df491efea64a0656ba8cc", "sha256": "e5ef8276f4a4e622304ad841ce51491f93d299d9a4fecf76d6a40bfa3378ca22"}, "downloads": -1, "filename": "django-watchman-0.16.0.tar.gz", "has_sig": false, "md5_digest": "f51787efc75df491efea64a0656ba8cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36887, "upload_time": "2019-03-19T17:29:39", "upload_time_iso_8601": "2019-03-19T17:29:39.191197Z", "url": "https://files.pythonhosted.org/packages/cd/1d/03b90a702adf92d939306e4e770c411a412b237c093ca8efcfedf85a25a4/django-watchman-0.16.0.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "cc8bd76347a283a84c1e89e6ca38bec4", "sha256": "6d2fed545ef3128b25927dfe61da46d7bdc2754dc1e76ba1c96576a168a1a506"}, "downloads": -1, "filename": "django_watchman-0.17.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc8bd76347a283a84c1e89e6ca38bec4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19641, "upload_time": "2019-06-14T17:21:45", "upload_time_iso_8601": "2019-06-14T17:21:45.902503Z", "url": "https://files.pythonhosted.org/packages/c3/d6/70a2277124b2be0510cd13ca9639ed3678b91f7d3168e07cb24895a5b46c/django_watchman-0.17.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7cd20c01c69c8dfb0be675b1ac44a47", "sha256": "5b847fb742a0fa572864641d2c809dfeecb512cf58b45a2adabc0107e67d001d"}, "downloads": -1, "filename": "django-watchman-0.17.0.tar.gz", "has_sig": false, "md5_digest": "f7cd20c01c69c8dfb0be675b1ac44a47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34302, "upload_time": "2019-06-14T17:21:47", "upload_time_iso_8601": "2019-06-14T17:21:47.976583Z", "url": "https://files.pythonhosted.org/packages/f5/22/bb64bedb64e627bdee18472ea85d066e6e97a3620d8e63f57b77b819d48a/django-watchman-0.17.0.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "80a5ffd13938b3d3aa3f0f5622d95c72", "sha256": "9a2b8442d4791afc995dc3ba67ab7cf9461488f7aa07e0f4c0d2f4e52d2266d6"}, "downloads": -1, "filename": "django_watchman-0.18.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "80a5ffd13938b3d3aa3f0f5622d95c72", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19786, "upload_time": "2019-08-19T20:45:48", "upload_time_iso_8601": "2019-08-19T20:45:48.314062Z", "url": "https://files.pythonhosted.org/packages/46/57/e214dab305046d0dad5695d9de26d2cc92ae4e9126ce69912aaed93ac053/django_watchman-0.18.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce61678ebd5d0c21250fca915e6c5abd", "sha256": "3977ede248f6dce17a6936834efbf0b201376ea3c2aa98b8352935f3d09ed7e3"}, "downloads": -1, "filename": "django-watchman-0.18.0.tar.gz", "has_sig": false, "md5_digest": "ce61678ebd5d0c21250fca915e6c5abd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42588, "upload_time": "2019-08-19T20:45:50", "upload_time_iso_8601": "2019-08-19T20:45:50.452403Z", "url": "https://files.pythonhosted.org/packages/51/25/97a6960503dcd6c5b804334aebbb51a04d5f8e6b5405151076b470331ca4/django-watchman-0.18.0.tar.gz", "yanked": false}], "0.18.0.dev1": [{"comment_text": "", "digests": {"md5": "c13890c4139e0cfe6dfa266d0599715f", "sha256": "d8e1756296b96063d27f42d7766aaf61246964a1f95b00afb39d97e0c2a1eb1c"}, "downloads": -1, "filename": "django_watchman-0.18.0.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c13890c4139e0cfe6dfa266d0599715f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19794, "upload_time": "2019-08-18T13:33:11", "upload_time_iso_8601": "2019-08-18T13:33:11.709083Z", "url": "https://files.pythonhosted.org/packages/f9/9a/4401a1bf3696646ddeae92e67009b97750b1d841aaa8445057f4fe54cc59/django_watchman-0.18.0.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43021075e9c7055c615c9dfb49d67555", "sha256": "4ede2c3328be32bbfe17cf0086429e927d75fb26480c01696543beb5c58ccd9a"}, "downloads": -1, "filename": "django-watchman-0.18.0.dev1.tar.gz", "has_sig": false, "md5_digest": "43021075e9c7055c615c9dfb49d67555", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42483, "upload_time": "2019-08-18T13:33:13", "upload_time_iso_8601": "2019-08-18T13:33:13.095566Z", "url": "https://files.pythonhosted.org/packages/23/dc/a0551776fb6b1c11c6ada255e5cc0b50593ace12622c12740e2c38bcae5f/django-watchman-0.18.0.dev1.tar.gz", "yanked": false}], "0.18.0.dev2": [{"comment_text": "", "digests": {"md5": "97a8074822548936d904d9ba75278e88", "sha256": "8ed09e524bbfc625be9608ba9c1cd038e7131c4a355b483826e3bd21a37d5c64"}, "downloads": -1, "filename": "django_watchman-0.18.0.dev2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "97a8074822548936d904d9ba75278e88", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19812, "upload_time": "2019-08-19T12:20:30", "upload_time_iso_8601": "2019-08-19T12:20:30.287146Z", "url": "https://files.pythonhosted.org/packages/0d/0f/2cc5fd7165983d57fd3423365e257c4b3a4890f0c38dbf671cf393cf7315/django_watchman-0.18.0.dev2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2d947ebe412be34103b08c408fddcde", "sha256": "6b236e21e0c1ea5ad394663a07c8cb574537ed8b37d632675aa87ebeb1ca68ac"}, "downloads": -1, "filename": "django-watchman-0.18.0.dev2.tar.gz", "has_sig": false, "md5_digest": "f2d947ebe412be34103b08c408fddcde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42480, "upload_time": "2019-08-19T12:20:32", "upload_time_iso_8601": "2019-08-19T12:20:32.383060Z", "url": "https://files.pythonhosted.org/packages/80/eb/dabd437911a0a74aa9eb5f2cb8b59c4cf9d5e42d775be77347af98a3da33/django-watchman-0.18.0.dev2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "51fd5a475761f4ce6f20cda34efd3d11", "sha256": "f4577d952b7b32170d360335e72a4df2d47f1fa9190b84646d7204264a8f64a8"}, "downloads": -1, "filename": "django_watchman-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "51fd5a475761f4ce6f20cda34efd3d11", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9301, "upload_time": "2014-09-04T22:55:21", "upload_time_iso_8601": "2014-09-04T22:55:21.792312Z", "url": "https://files.pythonhosted.org/packages/75/02/ccf1923fc98f1fa87f0367c3dba18b0a62718a1ccf52df982d48f6a4b9fc/django_watchman-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c8219088305f957242a933f32fed9f8", "sha256": "d5e7d38e0f2f8da43a736fd21f6f3a36186fe58bc473cd32149ea3ab6224fe9c"}, "downloads": -1, "filename": "django-watchman-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8c8219088305f957242a933f32fed9f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7876, "upload_time": "2014-09-04T22:55:19", "upload_time_iso_8601": "2014-09-04T22:55:19.047111Z", "url": "https://files.pythonhosted.org/packages/4e/2f/c76b18db2800e88c266d242912ed2338c3569dce40fc71efc74923255d37/django-watchman-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d81079cadd0029e6dfd9d89ef5e1cab9", "sha256": "05369704d8da5346242084d5a03183b64870a80de5955ef1a5364d8fb56a1186"}, "downloads": -1, "filename": "django_watchman-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d81079cadd0029e6dfd9d89ef5e1cab9", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9636, "upload_time": "2014-09-05T01:46:59", "upload_time_iso_8601": "2014-09-05T01:46:59.123243Z", "url": "https://files.pythonhosted.org/packages/c3/ed/6f9e6f86097ddda848d466350d78b8d4c0650b710b85dd284005561efbbc/django_watchman-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb0d1ad1c4feaf66dd073f6e687e0341", "sha256": "9a47a3209a0e27c0d17f8faaf9acbc7499d0bd001678a7c92c8e95a59d46d545"}, "downloads": -1, "filename": "django-watchman-0.2.1.tar.gz", "has_sig": false, "md5_digest": "eb0d1ad1c4feaf66dd073f6e687e0341", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8059, "upload_time": "2014-09-05T01:46:55", "upload_time_iso_8601": "2014-09-05T01:46:55.562698Z", "url": "https://files.pythonhosted.org/packages/f4/63/ce4634f744b8aaecb20322464d62a28baffce550079d7be8892b06eed1fe/django-watchman-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ca76601913ebef73951d83411283445f", "sha256": "6aba151f46f878129e6b2db9a789264b2422baf2a2192b35ef1d52c9689a293e"}, "downloads": -1, "filename": "django_watchman-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca76601913ebef73951d83411283445f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9789, "upload_time": "2014-09-05T16:22:10", "upload_time_iso_8601": "2014-09-05T16:22:10.720897Z", "url": "https://files.pythonhosted.org/packages/86/77/7c9046fed5357926d74860f0a33ca6df62075c4cdced129998f4bf8fdad3/django_watchman-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "342fa5dd6bbc2cc2395b9a396a49ee29", "sha256": "16478ad7ee9fd65bf6a26255a339774e3ff1a9a1d2733d549f23a2f69c4630e9"}, "downloads": -1, "filename": "django-watchman-0.2.2.tar.gz", "has_sig": false, "md5_digest": "342fa5dd6bbc2cc2395b9a396a49ee29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8131, "upload_time": "2014-09-05T16:22:07", "upload_time_iso_8601": "2014-09-05T16:22:07.210656Z", "url": "https://files.pythonhosted.org/packages/4c/5c/5749187f0cb3d4dc70e9431a6a5c291f27fc59d3cb25028b7c1e4b243ebe/django-watchman-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "6f87e46c729f5250dce2d45c23f90e89", "sha256": "4cebbd6e0d3968a32652b340bd0d79d19751094f1f689b2e76c09ee8aa451d5d"}, "downloads": -1, "filename": "django_watchman-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6f87e46c729f5250dce2d45c23f90e89", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10041, "upload_time": "2014-09-06T03:06:59", "upload_time_iso_8601": "2014-09-06T03:06:59.504660Z", "url": "https://files.pythonhosted.org/packages/58/e8/025df38144171203c711d797ffd75acb843cedc0c66b399ae2843018f115/django_watchman-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c080aeb4a5cbfc9ba74bd5593f1904d", "sha256": "872f19cac492a2f305e86fc9f8be8787f9c812a8105e7d2ac94915dbc164caae"}, "downloads": -1, "filename": "django-watchman-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5c080aeb4a5cbfc9ba74bd5593f1904d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8324, "upload_time": "2014-09-06T03:06:55", "upload_time_iso_8601": "2014-09-06T03:06:55.795648Z", "url": "https://files.pythonhosted.org/packages/d7/09/e3bdab509245a62bf6dd9af4406425be09977d09b74df8a3f1d32fbb651f/django-watchman-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "0543a94af4c1bc2e0905d962d28b2b3e", "sha256": "e3e38d273fcebbedb05d18f6b6177e2219dbd88fb1b88f7a8ed6346686f3ed14"}, "downloads": -1, "filename": "django_watchman-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0543a94af4c1bc2e0905d962d28b2b3e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10273, "upload_time": "2014-09-08T12:48:04", "upload_time_iso_8601": "2014-09-08T12:48:04.480949Z", "url": "https://files.pythonhosted.org/packages/97/a9/f452561ce443809c2141b9820e33801f357bd52d1229c45b8ee60e63d1d5/django_watchman-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05ea34908888e3681fd80cf7d68c8ed9", "sha256": "db29357819a4512c9337f688da46777a2483f745dea70554b825708201b76080"}, "downloads": -1, "filename": "django-watchman-0.4.0.tar.gz", "has_sig": false, "md5_digest": "05ea34908888e3681fd80cf7d68c8ed9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8492, "upload_time": "2014-09-08T12:48:01", "upload_time_iso_8601": "2014-09-08T12:48:01.659659Z", "url": "https://files.pythonhosted.org/packages/f1/be/18ab4b2ec6e47b16e8b85ce28e2c6946a42bd57a01a2ff3ca3fda246ba9d/django-watchman-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "347c969d0e34eab2d468a001793fa904", "sha256": "177e3d741cd57d95c75e0ac41756de6932bc50cd4a4f5122d63d91b50be67b39"}, "downloads": -1, "filename": "django-watchman-0.5.0.tar.gz", "has_sig": false, "md5_digest": "347c969d0e34eab2d468a001793fa904", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10837, "upload_time": "2015-02-24T00:26:01", "upload_time_iso_8601": "2015-02-24T00:26:01.448638Z", "url": "https://files.pythonhosted.org/packages/81/d0/ec253dff64a24f44219c3033f8df67176a051168180aed1de86b81341525/django-watchman-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "fb09e8b92f9917518ec196487ed9ea78", "sha256": "6aad2287b3741bd69819836174eafa3e8963ebee4e12e5ec41b14ec890201894"}, "downloads": -1, "filename": "django_watchman-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb09e8b92f9917518ec196487ed9ea78", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 17295, "upload_time": "2015-07-02T20:48:53", "upload_time_iso_8601": "2015-07-02T20:48:53.082703Z", "url": "https://files.pythonhosted.org/packages/b0/e7/ab347248739d5ef5354daf1123684b4f9897a21a24ec314bb96df32a5019/django_watchman-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eae667e93cb8028de33e5d1dc12fbd92", "sha256": "804274d171c22527753e33e8c4aa1fe705239ff8c4c6b15ebb8cc9322fb68f88"}, "downloads": -1, "filename": "django-watchman-0.6.0.tar.gz", "has_sig": false, "md5_digest": "eae667e93cb8028de33e5d1dc12fbd92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13232, "upload_time": "2015-07-02T20:48:48", "upload_time_iso_8601": "2015-07-02T20:48:48.285488Z", "url": "https://files.pythonhosted.org/packages/16/13/582dc0b4afbe50b5f9f868e553b6576a7087e4da2ab3c28032fda1cf0cd2/django-watchman-0.6.0.tar.gz", "yanked": false}], "0.6.0a0": [{"comment_text": "", "digests": {"md5": "79d7e88347ca5d8fa865a891f83d07c7", "sha256": "4ffeb7fc41c511624a6d99bf76b633a74941bd5e14a2820a5c8e2760eb68d5c9"}, "downloads": -1, "filename": "django_watchman-0.6.0a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "79d7e88347ca5d8fa865a891f83d07c7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16761, "upload_time": "2015-07-02T17:57:20", "upload_time_iso_8601": "2015-07-02T17:57:20.043855Z", "url": "https://files.pythonhosted.org/packages/0d/fe/db0ea851aaa1a9427ad4d363ebae63e1b7baeffbeb87ac7b62dd87da3cf6/django_watchman-0.6.0a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70eb9cdcd09474fc94c042c30a26f834", "sha256": "e52bbe28ea912561b16d06cf879529c0f05ae50505efd43d167bdd5ca2c28065"}, "downloads": -1, "filename": "django-watchman-0.6.0a0.tar.gz", "has_sig": false, "md5_digest": "70eb9cdcd09474fc94c042c30a26f834", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12895, "upload_time": "2015-07-02T17:57:14", "upload_time_iso_8601": "2015-07-02T17:57:14.932336Z", "url": "https://files.pythonhosted.org/packages/90/aa/74b2e83ae71ec81cfdb749d8001e4c3d265bbd3794aad66050775f966628/django-watchman-0.6.0a0.tar.gz", "yanked": false}], "0.6.0a1": [{"comment_text": "", "digests": {"md5": "6294f28fd28c70f755c56a0ab458e334", "sha256": "6fbd5c7046a5a185c3281d527f2b4a46b0ec854df2cdc66abfa1db00e4237cf6"}, "downloads": -1, "filename": "django_watchman-0.6.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6294f28fd28c70f755c56a0ab458e334", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 17331, "upload_time": "2015-07-02T20:37:03", "upload_time_iso_8601": "2015-07-02T20:37:03.622319Z", "url": "https://files.pythonhosted.org/packages/a2/18/b6a218db6cb4ddded6314cb6958fbcdfe2c16e516a44614bcda902fad774/django_watchman-0.6.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3a3e06f055b0d0d11b81dffdf56777e", "sha256": "0c79390adc3cf248ce1bb3e43711c192e86a452fa269d1f0515c3eb8f9b83ad0"}, "downloads": -1, "filename": "django-watchman-0.6.0a1.tar.gz", "has_sig": false, "md5_digest": "b3a3e06f055b0d0d11b81dffdf56777e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13228, "upload_time": "2015-07-02T20:36:58", "upload_time_iso_8601": "2015-07-02T20:36:58.354101Z", "url": "https://files.pythonhosted.org/packages/fd/0e/485906204a09443c07fbd7eaf46c9aea6ad11f3fc878a5a5777666d235da/django-watchman-0.6.0a1.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "e4654875f2a7f07c7bafdc983f6372f2", "sha256": "6deb38b3adf1f448ec2692f1fd9fc4db26a5c18a203bdc2129cfc5058470a04a"}, "downloads": -1, "filename": "django_watchman-0.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4654875f2a7f07c7bafdc983f6372f2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 17856, "upload_time": "2015-08-14T21:30:31", "upload_time_iso_8601": "2015-08-14T21:30:31.765145Z", "url": "https://files.pythonhosted.org/packages/b3/09/636b431f8fdfa4c223a81f32250481d2e12ecdde0f583ff7bb9b3b2c3922/django_watchman-0.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23c196cc47ccb489596691f8fa0b266f", "sha256": "de9a0f8a086af9d3463011013c0b918b3a3d278e0aa3b977bbb80f80d8f884b5"}, "downloads": -1, "filename": "django-watchman-0.7.1.tar.gz", "has_sig": false, "md5_digest": "23c196cc47ccb489596691f8fa0b266f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13460, "upload_time": "2015-08-14T21:30:27", "upload_time_iso_8601": "2015-08-14T21:30:27.758838Z", "url": "https://files.pythonhosted.org/packages/5e/3a/a12e3bc6c5a35b9a157846aa1ffc38dd18910c470ab03b8db5898d0ae3c2/django-watchman-0.7.1.tar.gz", "yanked": false}], "0.7.2a0": [{"comment_text": "", "digests": {"md5": "4d6a11d4b9de313f3bb47aac968bc293", "sha256": "9cb32c3480330cfda27f7a698c0315e2226d9635af83f56d9b5756625fbd1104"}, "downloads": -1, "filename": "django_watchman-0.7.2a0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d6a11d4b9de313f3bb47aac968bc293", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 17892, "upload_time": "2015-08-17T17:40:41", "upload_time_iso_8601": "2015-08-17T17:40:41.397031Z", "url": "https://files.pythonhosted.org/packages/a8/01/9282e5eed3f82407bb3906b44007e04ac3a430811e39eff6510fb868e624/django_watchman-0.7.2a0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1470498c6eb9d8bb93ce210838bd67f9", "sha256": "daf3fa9db8c8e3f0a3c39e02ac9f098ea64251b6481d3d5d3b10a639d01a406d"}, "downloads": -1, "filename": "django-watchman-0.7.2a0.tar.gz", "has_sig": false, "md5_digest": "1470498c6eb9d8bb93ce210838bd67f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13471, "upload_time": "2015-08-17T17:40:37", "upload_time_iso_8601": "2015-08-17T17:40:37.049214Z", "url": "https://files.pythonhosted.org/packages/36/74/a7a92f401d6a7ab2ed0d76e88a950bd723d61adfae182ba6b3cbc1974891/django-watchman-0.7.2a0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "2a5113270d1472d657df61a23aeb31a6", "sha256": "dd0683c9f9f0554035dd44887934862d15ead0cbcec12120813486560c9646ea"}, "downloads": -1, "filename": "django_watchman-0.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2a5113270d1472d657df61a23aeb31a6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 18627, "upload_time": "2015-10-03T20:27:59", "upload_time_iso_8601": "2015-10-03T20:27:59.964148Z", "url": "https://files.pythonhosted.org/packages/51/2d/91d8da61a267c577ec4c6395cf100ceb74433f7ac064d06c205c842c9ccc/django_watchman-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8ccb933ac32d04eadf036d0b27f92c4", "sha256": "936423d0d7eaf08fefd84c4b876ebd6c28562b9d573916aac6620a3c5296395a"}, "downloads": -1, "filename": "django-watchman-0.8.0.tar.gz", "has_sig": false, "md5_digest": "f8ccb933ac32d04eadf036d0b27f92c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13965, "upload_time": "2015-10-03T20:27:55", "upload_time_iso_8601": "2015-10-03T20:27:55.245173Z", "url": "https://files.pythonhosted.org/packages/77/bf/007bb14f8af552e86936421bffe02e8ecb4ec42d2264c071fcd6dd9a8ce9/django-watchman-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "72645afebef7e0d589262b8d74a941c6", "sha256": "af53b38f500aedbb220c89c58ee8d88ec6e160f279eeb85773c941a4ad4bfc1b"}, "downloads": -1, "filename": "django_watchman-0.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "72645afebef7e0d589262b8d74a941c6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 20368, "upload_time": "2015-12-16T22:26:40", "upload_time_iso_8601": "2015-12-16T22:26:40.340577Z", "url": "https://files.pythonhosted.org/packages/95/d9/611560c48f2fcc1c92a769951482ac06749c2a6ab6d64e66c2fcffd4abe3/django_watchman-0.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "250cc3bde284a04b95215da198ccfc6c", "sha256": "4d0c4a21f4325d2047f0cebb164ebb136bdff8cdf61ed808dfc7f92081ace790"}, "downloads": -1, "filename": "django-watchman-0.9.0.tar.gz", "has_sig": false, "md5_digest": "250cc3bde284a04b95215da198ccfc6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28841, "upload_time": "2015-12-16T22:26:33", "upload_time_iso_8601": "2015-12-16T22:26:33.693505Z", "url": "https://files.pythonhosted.org/packages/54/ab/42c61b579a6edd4f6caca020963d2363bf8b6fa1544c4953df8aa512ad0f/django-watchman-0.9.0.tar.gz", "yanked": false}], "0.9.0a1": [{"comment_text": "", "digests": {"md5": "900b788733f81b739d6b1977ac47fcfc", "sha256": "b51700cb372b5e506a5e30860b0e1cbcc6f3b8b2b5c461029819e3a0dc9d9908"}, "downloads": -1, "filename": "django_watchman-0.9.0a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "900b788733f81b739d6b1977ac47fcfc", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 19929, "upload_time": "2015-11-26T01:30:38", "upload_time_iso_8601": "2015-11-26T01:30:38.396998Z", "url": "https://files.pythonhosted.org/packages/9d/cf/391e666c281c624aee80158cf664464f50dd8cf39a6fa56ca7e8fdfe628c/django_watchman-0.9.0a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16cb34323ea92ca66e5877e1a903d98b", "sha256": "0f17e433e5d6268234e29ed10482cde9201bcd9bca137d07a03dda311ec164f7"}, "downloads": -1, "filename": "django-watchman-0.9.0a1.tar.gz", "has_sig": false, "md5_digest": "16cb34323ea92ca66e5877e1a903d98b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27990, "upload_time": "2015-11-26T01:30:26", "upload_time_iso_8601": "2015-11-26T01:30:26.910041Z", "url": "https://files.pythonhosted.org/packages/c8/0f/e5afb0f8936fc889397d0a7e012e794d522482dd2ef3009d1f831cd437c6/django-watchman-0.9.0a1.tar.gz", "yanked": false}], "0.9.0a2": [{"comment_text": "", "digests": {"md5": "791f390b90e482688ff1d6dafd2129d7", "sha256": "b6cb411c6a59f2c33261c8c2b73613c6635e270c095faa27c8e3c78ca5cfb910"}, "downloads": -1, "filename": "django_watchman-0.9.0a2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "791f390b90e482688ff1d6dafd2129d7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 20253, "upload_time": "2015-12-11T23:30:20", "upload_time_iso_8601": "2015-12-11T23:30:20.670186Z", "url": "https://files.pythonhosted.org/packages/0a/22/d61979b37eb62aeae55cc67d2f50d5ebc5b26f0b9f7731f246a5eb10136b/django_watchman-0.9.0a2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e649e7bea3197bcd56bf27b8b103cb7", "sha256": "b0f612d3132a87a6e1e1d5f884f34f1e2d6732630a1cf6e4212e1e09c3d204fc"}, "downloads": -1, "filename": "django-watchman-0.9.0a2.tar.gz", "has_sig": false, "md5_digest": "3e649e7bea3197bcd56bf27b8b103cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28652, "upload_time": "2015-12-11T23:30:14", "upload_time_iso_8601": "2015-12-11T23:30:14.671564Z", "url": "https://files.pythonhosted.org/packages/d3/e8/848b587ce50a37386bb82f339c7060a4aa7af452b3f05670f6f2cd34757b/django-watchman-0.9.0a2.tar.gz", "yanked": false}], "0.9.0a3": [{"comment_text": "", "digests": {"md5": "e0ed5eec355beccf60193a0b8224b37c", "sha256": "c26411abb5ac2c8a67257d281f755e6b0ab9971d57d78dc77d8e13f30a4eebd0"}, "downloads": -1, "filename": "django_watchman-0.9.0a3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e0ed5eec355beccf60193a0b8224b37c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 20294, "upload_time": "2015-12-11T23:39:49", "upload_time_iso_8601": "2015-12-11T23:39:49.254157Z", "url": "https://files.pythonhosted.org/packages/dc/46/c71454542077595fdaf0e3a4ec9370fc539658febe14867c82cfcb37bc78/django_watchman-0.9.0a3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d3c30f9fae12f56575363441dac6fe2", "sha256": "8f5f410069ee56aff97f8f119210465e44f1b759dbbb93bc297b12507217ecab"}, "downloads": -1, "filename": "django-watchman-0.9.0a3.tar.gz", "has_sig": false, "md5_digest": "9d3c30f9fae12f56575363441dac6fe2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28691, "upload_time": "2015-12-11T23:39:37", "upload_time_iso_8601": "2015-12-11T23:39:37.399492Z", "url": "https://files.pythonhosted.org/packages/d5/60/1c0bd8b7207dc3a57792c0b7cb0360914788ef263039192730f9389e6208/django-watchman-0.9.0a3.tar.gz", "yanked": false}], "0.9.0a4": [{"comment_text": "", "digests": {"md5": "fd7c267bf61a89ddc056431832315e72", "sha256": "4b649b49596c52c6b75132457d3482d2adb40e84925b9f357876f07e3f9fa8a8"}, "downloads": -1, "filename": "django_watchman-0.9.0a4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd7c267bf61a89ddc056431832315e72", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 20395, "upload_time": "2015-12-12T00:11:19", "upload_time_iso_8601": "2015-12-12T00:11:19.318166Z", "url": "https://files.pythonhosted.org/packages/a4/5f/867d80bb6126ee6f7ca758f6fbe104c4f9d6c07ba531c7be4ced3ede5ca0/django_watchman-0.9.0a4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09873ab2d0649564615ad93e2b4953e1", "sha256": "ae7867c336efe0a987107ed19a23a8001c60f2b9b58faa279e233cca7f105079"}, "downloads": -1, "filename": "django-watchman-0.9.0a4.tar.gz", "has_sig": false, "md5_digest": "09873ab2d0649564615ad93e2b4953e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28802, "upload_time": "2015-12-12T00:11:13", "upload_time_iso_8601": "2015-12-12T00:11:13.106763Z", "url": "https://files.pythonhosted.org/packages/c1/80/5c6282513449d294ef11e8cc0e2006a6fa4af3f878bd6d094291a45b57e3/django-watchman-0.9.0a4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "00fe6fecdf08edf3bd3912451e5049f8", "sha256": "2953ce54d24a4c7558231cdb96761828aaa2dbb600f478d98ab2312a21143504"}, "downloads": -1, "filename": "django_watchman-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00fe6fecdf08edf3bd3912451e5049f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19428, "upload_time": "2019-12-18T20:59:01", "upload_time_iso_8601": "2019-12-18T20:59:01.570712Z", "url": "https://files.pythonhosted.org/packages/39/f5/2ca422754cb9fa0e1e7a6af52f3895e7f474201cf614341fc742cb3b1336/django_watchman-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33da8e8566a24581bb8bf71ec985447a", "sha256": "55b08482f36200552bdfd8e8ac41c0f1738df1c05e49b186ddd975340deedfa6"}, "downloads": -1, "filename": "django-watchman-1.0.0.tar.gz", "has_sig": false, "md5_digest": "33da8e8566a24581bb8bf71ec985447a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34043, "upload_time": "2019-12-18T20:59:03", "upload_time_iso_8601": "2019-12-18T20:59:03.408544Z", "url": "https://files.pythonhosted.org/packages/82/d5/b063b35a172eaa94d1bd8b34e7213124747ba0afe47c5c292dec356ee80b/django-watchman-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "3b1870d21f571511283b639e59c0b58a", "sha256": "709c5c612c33c0a37a7ac84743c5b4b8eff87788140ac87d5f00536bb1f08e84"}, "downloads": -1, "filename": "django_watchman-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3b1870d21f571511283b639e59c0b58a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19805, "upload_time": "2020-03-16T18:17:32", "upload_time_iso_8601": "2020-03-16T18:17:32.697443Z", "url": "https://files.pythonhosted.org/packages/40/bf/b06dd2c862480f7868af0671e864546c095cca9130d2cda643a01cb2efa5/django_watchman-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38e696d2807df8157784a248af0c5c3f", "sha256": "f999fe69dcbd43202ee02f8b78ff58b1340365533b7f36677daed2ba391d8bc0"}, "downloads": -1, "filename": "django-watchman-1.1.0.tar.gz", "has_sig": false, "md5_digest": "38e696d2807df8157784a248af0c5c3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34752, "upload_time": "2020-03-16T18:17:34", "upload_time_iso_8601": "2020-03-16T18:17:34.158228Z", "url": "https://files.pythonhosted.org/packages/be/bd/7195b72fefa4840a990f9ea1a369337a11b8ba7dae04fa4deca6bf285e21/django-watchman-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "67344ec79c383cdfa2cfb22f2608ac48", "sha256": "809097717254534ef4fb251787b35dd4f00e3da68ae8b9361d340062ef966e5e"}, "downloads": -1, "filename": "django_watchman-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67344ec79c383cdfa2cfb22f2608ac48", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19841, "upload_time": "2020-05-05T03:06:15", "upload_time_iso_8601": "2020-05-05T03:06:15.953504Z", "url": "https://files.pythonhosted.org/packages/8b/b8/42bc819bd31b3be7f0deb7b34a3521d0103f1d22f1684c79c4ab907e7341/django_watchman-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54f76c333744581018a7de187676ce56", "sha256": "63ed14c13a535ff53540dfea504448588274f96bbd872db67379609274cdf837"}, "downloads": -1, "filename": "django-watchman-1.1.1.tar.gz", "has_sig": false, "md5_digest": "54f76c333744581018a7de187676ce56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34944, "upload_time": "2020-05-05T03:06:17", "upload_time_iso_8601": "2020-05-05T03:06:17.399332Z", "url": "https://files.pythonhosted.org/packages/13/35/66bf09c77d3f67ae9c7a82c7548a21122816ac70ed5b8caede305fd5fd80/django-watchman-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "67344ec79c383cdfa2cfb22f2608ac48", "sha256": "809097717254534ef4fb251787b35dd4f00e3da68ae8b9361d340062ef966e5e"}, "downloads": -1, "filename": "django_watchman-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67344ec79c383cdfa2cfb22f2608ac48", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19841, "upload_time": "2020-05-05T03:06:15", "upload_time_iso_8601": "2020-05-05T03:06:15.953504Z", "url": "https://files.pythonhosted.org/packages/8b/b8/42bc819bd31b3be7f0deb7b34a3521d0103f1d22f1684c79c4ab907e7341/django_watchman-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54f76c333744581018a7de187676ce56", "sha256": "63ed14c13a535ff53540dfea504448588274f96bbd872db67379609274cdf837"}, "downloads": -1, "filename": "django-watchman-1.1.1.tar.gz", "has_sig": false, "md5_digest": "54f76c333744581018a7de187676ce56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34944, "upload_time": "2020-05-05T03:06:17", "upload_time_iso_8601": "2020-05-05T03:06:17.399332Z", "url": "https://files.pythonhosted.org/packages/13/35/66bf09c77d3f67ae9c7a82c7548a21122816ac70ed5b8caede305fd5fd80/django-watchman-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:57 2020"}