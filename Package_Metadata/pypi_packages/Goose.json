{"info": {"author": "Mike Steder", "author_email": "steder@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database", "Topic :: Software Development", "Topic :: Utilities"], "description": "Goose_\n----------------------\n\nAbout\n======================\n\nGoose is a tool for managing and applying SQL Database Migrations.\n\nBecause our geese use SQLAlchemy to manage their migration tables\nyou can connect to and migrate any database supported by SQLAlchemy.\n\nMigrations are just plain SQL files and the order migrations are applied\nis specified through configuration in a YAML file.\n\nUsage\n=======================\n\nFirst initialize your database by installing the migration_info table::\n\n  goose -d sqlite:///my.db -m migrations/ init\n\nNow go ahead and migrate::\n  \n  goose -d sqlite:///my.db -m migrations/ migrate\n\nTo find out what migrations have been applied you can do::\n\n  goose -d sqlite:///my.db -m migrations/ list\n\nInstallation\n======================\n\npip install pyyaml\npip install sqlalchemy\n\nAnd install whichever DB API driver you need for your specific DB:\n\npip install psycopg2\n\nProject Layout\n======================\n\nAssuming you have a project you want to add migrations to in a directory like this::\n\n  MyApp\n  |-- README\n  `-- package\n      |-- __init__.py\n      `-- somecode.py\n  \nYou could add migrations like this::\n\n  MyApp\n  |-- README\n  |-- package/\n  |   |-- __init__.py\n  |   `-- somecode.py\n  `-- migrations/\n      |-- create_user_tables.sql\n      |-- db_skeleton.sql\n      |-- index.yaml\n      `-- update_users.sql\n\nThe contents of index.yaml would look like::\n\n  migrations:\n    - db_skeleton.sql\n    - create_user_tables.sql\n    - update_users.sql\n    \n.. _goose: http://bitbucket.org/steder/goose\n.. _Michael Steder: http://penzilla.net", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/steder/goose", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "Goose", "package_url": "https://pypi.org/project/Goose/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Goose/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/steder/goose"}, "release_url": "https://pypi.org/project/Goose/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Basic SQL migration tool favoring configuration over convention.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>Goose is a tool for managing and applying SQL Database Migrations.</p>\n<p>Because our geese use SQLAlchemy to manage their migration tables\nyou can connect to and migrate any database supported by SQLAlchemy.</p>\n<p>Migrations are just plain SQL files and the order migrations are applied\nis specified through configuration in a YAML file.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First initialize your database by installing the migration_info table:</p>\n<pre>goose -d sqlite:///my.db -m migrations/ init\n</pre>\n<p>Now go ahead and migrate:</p>\n<pre>goose -d sqlite:///my.db -m migrations/ migrate\n</pre>\n<p>To find out what migrations have been applied you can do:</p>\n<pre>goose -d sqlite:///my.db -m migrations/ list\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>pip install pyyaml\npip install sqlalchemy</p>\n<p>And install whichever DB API driver you need for your specific DB:</p>\n<p>pip install psycopg2</p>\n</div>\n<div id=\"project-layout\">\n<h2>Project Layout</h2>\n<p>Assuming you have a project you want to add migrations to in a directory like this:</p>\n<pre>MyApp\n|-- README\n`-- package\n    |-- __init__.py\n    `-- somecode.py\n</pre>\n<p>You could add migrations like this:</p>\n<pre>MyApp\n|-- README\n|-- package/\n|   |-- __init__.py\n|   `-- somecode.py\n`-- migrations/\n    |-- create_user_tables.sql\n    |-- db_skeleton.sql\n    |-- index.yaml\n    `-- update_users.sql\n</pre>\n<p>The contents of index.yaml would look like:</p>\n<pre>migrations:\n  - db_skeleton.sql\n  - create_user_tables.sql\n  - update_users.sql\n</pre>\n</div>\n\n          </div>"}, "last_serial": 417592, "releases": {"1.0.0": []}, "urls": [], "timestamp": "Fri May  8 00:55:31 2020"}