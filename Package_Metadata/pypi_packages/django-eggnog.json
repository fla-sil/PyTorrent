{"info": {"author": "Mridang Agarwalla", "author_email": "mridang.agarwalla@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "View all available updates for your installed eggs right from within the administration console. \r\n\r\nEggnog is a simple wrapper on Yolk. Eggnog works best when it is scheduled to run at a periodic internal. It fetches the list of installed eggs and queries PyPI for any available updates.\r\n\r\nIf there's a feature that you're missing and you'd like added, please create an issue on the project page at Github or create the fix yourself and send me a pull request. Adding a few small features here and there are okay but this is in no way aimed to encompass all the functionality of a full-blown package management tool like Pip.\r\n\r\nInstallation\r\n======================\r\n\r\nGrab the latest release from PyPI by running::\r\n\r\n\tpip install django-eggnog\r\n\r\nPlease note that this requires Django 1.3+ to work properly.\r\n\r\nConfiguration\r\n======================\r\n\r\nAdd ``eggnog`` to your project's ``INSTALLED_APPS`` setting and run ``syncdb`` (or ``migrate`` if you're using South).\r\n\r\n``django-eggnog`` relies on the ``apscheduler`` module to provide the periodical checks for updates. In order to configure this, please add the following two lines to your ``urls.py``::\r\n\r\n    import eggnog\r\n    eggnog.periodicallycheckforupdates()\r\n\r\nIf you have a very small Django installation, I suggest you stick with this but if you wish to not use ``apscheduler``, disregard the above step and uninstall ``apscheduler`` by running::\r\n\r\n    pip uninstall apscheduler\r\n\r\nThere isn't much else than that to get it up and running.\r\n\r\nScheduling\r\n==========\r\n\r\nEggnog works best when it is shcheduled to run at periodic intervals. Checking for updates once a day is quite enough.\r\n\r\nEggnog has a management-command built-in caleed ``checkupdates`` that it relies on to check for updates and here a few ways that that you can use to schedule it:\r\n\r\n- Cron: You can configure cron to execute the management command once a day using this:    \r\n  ``* * * * * cd /home/path/to/project && python manage.py checkupdates``\r\n\r\n\r\n- Use a package like ``django-kronos`` or ``django-chrnonograph``. Both the Django modules . once configured . make it extremely simple schedule management-commands using cron. They are both available on PyPI and you should consult their documentation on further instructions.\r\n\r\n\r\n- Celery: If your Django project already deals with distributed task queues, it's extremely likely that you're using ``django-celery``. In that case, configure ``django-celery`` to execute ``checkupdates`` periodically. Explaining the configuration of ``django-celery`` is outside the scope of this document.\r\n\r\n- APScheduler: ``APScheduler`` is is an extremely lightweight module to running tasks periodically within Python. This is what ``django-eggnog`` ships with.", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/mridang/django-eggnog/downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.org/mridang/django-eggnog", "keywords": "", "license": "BSD License", "maintainer": "Mridang Agarwalla", "maintainer_email": "mridang.agarwalla@gmail.com", "name": "django-eggnog", "package_url": "https://pypi.org/project/django-eggnog/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-eggnog/", "project_urls": {"Download": "http://github.com/mridang/django-eggnog/downloads", "Homepage": "http://github.org/mridang/django-eggnog"}, "release_url": "https://pypi.org/project/django-eggnog/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Displays available egg updates from PyPi", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>View all available updates for your installed eggs right from within the administration console.</p>\n<p>Eggnog is a simple wrapper on Yolk. Eggnog works best when it is scheduled to run at a periodic internal. It fetches the list of installed eggs and queries PyPI for any available updates.</p>\n<p>If there\u2019s a feature that you\u2019re missing and you\u2019d like added, please create an issue on the project page at Github or create the fix yourself and send me a pull request. Adding a few small features here and there are okay but this is in no way aimed to encompass all the functionality of a full-blown package management tool like Pip.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Grab the latest release from PyPI by running:</p>\n<pre>pip install django-eggnog\n</pre>\n<p>Please note that this requires Django 1.3+ to work properly.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Add <tt>eggnog</tt> to your project\u2019s <tt>INSTALLED_APPS</tt> setting and run <tt>syncdb</tt> (or <tt>migrate</tt> if you\u2019re using South).</p>\n<p><tt><span class=\"pre\">django-eggnog</span></tt> relies on the <tt>apscheduler</tt> module to provide the periodical checks for updates. In order to configure this, please add the following two lines to your <tt>urls.py</tt>:</p>\n<pre>import eggnog\neggnog.periodicallycheckforupdates()\n</pre>\n<p>If you have a very small Django installation, I suggest you stick with this but if you wish to not use <tt>apscheduler</tt>, disregard the above step and uninstall <tt>apscheduler</tt> by running:</p>\n<pre>pip uninstall apscheduler\n</pre>\n<p>There isn\u2019t much else than that to get it up and running.</p>\n</div>\n<div id=\"scheduling\">\n<h2>Scheduling</h2>\n<p>Eggnog works best when it is shcheduled to run at periodic intervals. Checking for updates once a day is quite enough.</p>\n<p>Eggnog has a management-command built-in caleed <tt>checkupdates</tt> that it relies on to check for updates and here a few ways that that you can use to schedule it:</p>\n<ul>\n<li>Cron: You can configure cron to execute the management command once a day using this:\n<tt>* * * * * cd /home/path/to/project &amp;&amp; python manage.py checkupdates</tt></li>\n<li>Use a package like <tt><span class=\"pre\">django-kronos</span></tt> or <tt><span class=\"pre\">django-chrnonograph</span></tt>. Both the Django modules . once configured . make it extremely simple schedule management-commands using cron. They are both available on PyPI and you should consult their documentation on further instructions.</li>\n<li>Celery: If your Django project already deals with distributed task queues, it\u2019s extremely likely that you\u2019re using <tt><span class=\"pre\">django-celery</span></tt>. In that case, configure <tt><span class=\"pre\">django-celery</span></tt> to execute <tt>checkupdates</tt> periodically. Explaining the configuration of <tt><span class=\"pre\">django-celery</span></tt> is outside the scope of this document.</li>\n<li>APScheduler: <tt>APScheduler</tt> is is an extremely lightweight module to running tasks periodically within Python. This is what <tt><span class=\"pre\">django-eggnog</span></tt> ships with.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 789540, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d0fa401f8e505921cca97578eeb44912", "sha256": "0da45f134fa3d79a677c0be181e30a7b3dc0686c84a54259156741c0efb1fe84"}, "downloads": -1, "filename": "django-eggnog-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d0fa401f8e505921cca97578eeb44912", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5737, "upload_time": "2013-02-07T12:52:39", "upload_time_iso_8601": "2013-02-07T12:52:39.241821Z", "url": "https://files.pythonhosted.org/packages/f3/18/0de62fb32e38c4db4560afb30b48aa565ab401729dbc7d4cd2f7db82bbac/django-eggnog-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d0fa401f8e505921cca97578eeb44912", "sha256": "0da45f134fa3d79a677c0be181e30a7b3dc0686c84a54259156741c0efb1fe84"}, "downloads": -1, "filename": "django-eggnog-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d0fa401f8e505921cca97578eeb44912", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5737, "upload_time": "2013-02-07T12:52:39", "upload_time_iso_8601": "2013-02-07T12:52:39.241821Z", "url": "https://files.pythonhosted.org/packages/f3/18/0de62fb32e38c4db4560afb30b48aa565ab401729dbc7d4cd2f7db82bbac/django-eggnog-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:25 2020"}