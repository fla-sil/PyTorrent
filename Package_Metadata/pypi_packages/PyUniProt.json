{"info": {"author": "Christian Ebeling", "author_email": "christian.ebeling@scai.fraunhofer.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Database", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "PyUniProt |stable_build|\n========================\n\n|project_logo_large|\n\n|stable_documentation| |pypi_license|\n\n`PyUniProt <http://pyUniProt.readthedocs.io>`_ is a Python package\nto access and query UniProt data provided by the European Bioinformatics Institute (EMBL-EBI),\nthe SIB Swiss Institute of Bioinformatics and the Protein Information Resource (PIR).\n\nData are installed in a (local or remote) RDBMS enabling bioinformatic algorithms very fast response times\nto sophisticated queries and high flexibility by using SOLAlchemy database layer.\nPyUniProt is developed by the\n`Department of Bioinformatics <https://www.scai.fraunhofer.de/en/business-research-areas/bioinformatics.html>`_\nat the Fraunhofer Institute for Algorithms and Scientific Computing\n`SCAI <https://www.scai.fraunhofer.de/en.html>`_\nFor more in for information about pyUniProt go to\n`the documentation <http://pyUniProt.readthedocs.io>`_.\n\n|er_model|\n\nThis development is supported by following `IMI <https://www.imi.europa.eu/>`_ projects:\n\n- `AETIONOMY <http://www.aetionomy.eu/>`_ and\n- `PHAGO <http://www.phago.eu/>`_.\n\n|imi_logo| |aetionomy_logo| |phago_logo| |scai_logo|\n\nSupported databases\n-------------------\n\n`PyUniProt` uses `SQLAlchemy <http://sqlalchemy.readthedocs.io>`_ to cover a wide spectrum of RDMSs\n(Relational database management system). For best performance MySQL or MariaDB is recommended. But if you have no\npossibility to install software on your system SQLite - which needs no further\ninstallation - also works. Following RDMSs are supported (by SQLAlchemy):\n\n1. Firebird\n2. Microsoft SQL Server\n3. MySQL / `MariaDB <https://mariadb.org/>`_\n4. Oracle\n5. PostgreSQL\n6. SQLite\n7. Sybase\n\nGetting Started\n---------------\nThis is a quick start tutorial for impatient.\n\nInstallation |pypi_version| |python_versions|\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPyUniProt can be installed with `pip <https://pip.pypa.io/en/stable/>`_.\n\n.. code-block:: bash\n\n    pip install pyuniprot\n\nIf you fail because you have no rights to install use superuser (sudo on Linux before the commend) or ...\n\n.. code-block:: bash\n\n    pip install --user pyuniprot\n\nIf you want to make sure you are installing this under python3 use ...\n\n.. code-block:: bash\n\n    python3 -m pip install pyuniprot\n\nSQLite\n~~~~~~\n.. note:: If you want to use SQLite as your database system, because you ...\n\n    - have no possibility to use RDMSs like MySQL/MariaDB\n    - just test PyUniProt, but don't want to spend time in setting up a database\n\n    skip the next *MySQL/MariaDB setup* section. But in general we strongly recommend MySQL or MariaDB as your\n    relational database management system.\n\nIf you don't know what all that means skip the section *MySQL/MariaDB setup*.\n\nDon't worry! You can always later change the configuration. For more information about\nchanging database system later go to the subtitle *Changing database configuration*\n`Changing database configuration <http://pyuniport.readthedocs.io/en/latest/installation.html>`_\nin the documentation on readthedocs.\n\nMySQL/MariaDB setup\n~~~~~~~~~~~~~~~~~~~\nLog in MySQL as root user and create a new database, create a user, assign the rights and flush privileges.\n\n.. code-block:: mysql\n\n    CREATE DATABASE pyuniprot CHARACTER SET utf8 COLLATE utf8_general_ci;\n    GRANT ALL PRIVILEGES ON pyuniprot.* TO 'pyuniprot_user'@'%' IDENTIFIED BY 'pyuniprot_passwd';\n    FLUSH PRIVILEGES;\n\nThere are two options to set the MySQL/MariaDB.\n\n1. The simplest is to start the command line tool\n\n.. code-block:: sh\n\n    pyuniprot mysql\n\nYou will be guided with input prompts. Accept the default value in squared brackets with RETURN. You will see\nsomething like this\n\n.. code-block:: sh\n\n    server name/ IP address database is hosted [localhost]:\n    MySQL/MariaDB user [pyuniprot_user]:\n    MySQL/MariaDB password [pyuniprot_passwd]:\n    database name [pyuniprot]:\n    character set [utf8]:\n\nConnection will be tested and in case of success return `Connection was successful`.\nOtherwise you will see following hinte\n\n.. code-block:: sh\n\n    Test was NOT successful\n\n    Please use one of the following connection schemas\n    MySQL/MariaDB (strongly recommended):\n            mysql+pymysql://user:passwd@localhost/database?charset=utf8\n\n    PostgreSQL:\n            postgresql://user:passwd@localhost/database\n\n    MsSQL (pyodbc needed):\n            mssql+pyodbc://user:passwd@database\n\n    SQLite (always works):\n\n    - Linux:\n            sqlite:////absolute/path/to/database.db\n\n    - Windows:\n            sqlite:///C:\\absolute\\path\\to\\database.db\n\n    Oracle:\n            oracle://user:passwd@localhost:1521/database\n\n2. The second option is to start a python shell and set the MySQL configuration.\nIf you have not changed anything in the SQL statements above ...\n\n.. code-block:: python\n\n    import pyuniprot\n    pyuniprot.set_mysql_connection()\n\nIf you have used you own settings, please adapt the following command to you requirements.\n\n.. code-block:: python\n\n    import pyuniprot\n    pyuniprot.set_mysql_connection(host='localhost', user='pyuniprot_user', passwd='pyuniprot_passwd', db='pyuniprot')\n\nUpdating\n~~~~~~~~\nThe updating process will download the *uniprot_sprot.xml.gz* file provided by the UniProt team on their ftp server\n`download page <ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/>`_\n\n.. warning::\n\n    Please note that UniProt download file needs ~700 Mb of disk space and the update takes ~2h only for\n    human, mouse and rat (depending on your computer)\n\nIt is strongly recommended to restrict the entries liked to specific organisms your are interested in by parsing a list\nof NCBI Taxonomy IDs to the parameter `taxids`. To identify correct NCBI Taxonomy IDs please go to\n`NCBI Taxonomy web form <https://www.ncbi.nlm.nih.gov/taxonomy/>`_. In the following example we use 9606 as identifier\nfor Homo sapiens, 10090 for Mus musculus and 10116 for Rattus norvegicus.\n\nThere are two options to import the data:\n\n1. Command line import\n\n    .. code-block:: sh\n\n        pyuniprot update --taxids 9606,10090,10116\n\n2. Python\n\n    .. code-block:: python\n\n        import pyuniprot\n        pyuniprot.update(taxids=[9606, 10090, 10116])\n\nWe only recommend to import the whole UniProt dataset if you don't want to restrict your search. Import with no\nrestrictions will take several hours and take a lot of disk space.\n\nIf you want to load all UniProt entries in the database:\n\n.. code-block:: python\n\n    import pyuniprot\n    pyuniprot.update() # not recommended, please read the notes above\n\nThe update uses the download file if it still exists on you system (~/.pyuniprot/data/uniprot_sprot.xml.gz). If you use\nthe parameter `force_download` the current file from UniProt will be downloaded.\n\n.. code-block:: python\n\n    import pyuniprot\n    pyuniprot.update(force_download=True, taxids=[9606, 10090, 10116])\n\nQuick start with query functions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nInitialize the query object\n\n.. code-block:: python\n\n    query = pyuniprot.query()\n\nGet all entries\n\n.. code-block:: python\n\n    all_entries = query.entry()\n\n\nUse parameters like gene_name to find specific entries\n\n.. code-block:: python\n\n    >>> entry = query.entry(gene_name='YWHAE', taxid=9606, recommended_short_name='14-3-3E', name='1433E_HUMAN')[0]\n    >>> entry\n    14-3-3 protein epsilon\n\nEntry is the root element in the database. Form here you can reach all other data\n    >>> entry.accessions\n    [P62258, B3KY71, D3DTH5, P29360, P42655, Q4VJB6, Q53XZ5, Q63631, Q7M4R4]\n    >>> entry.functions\n    [\"Adapter protein implicated in the regulation of a large spectrum of both ...\"]\n\nIf a parameter ends on a **s** you can search\n    >>> alcohol_dehydrogenases = q.entry(ec_numbers='1.1.1.1')\n    >>> [x.name for x in q.get_entry(ec_numbers='1.1.1.1')]\n    ['ADHX_RAT', 'ADH1_RAT', 'ADHX_HUMAN', 'ADHX_MOUSE']\n    >>> query.entry(ec_numbers=('1.1.1.1', '1.1.1.2'))\n    ['Adh5', 'Adh1', 'ADH5', 'Adh5', 'Adh6', 'ADH7', 'Adh7', 'Adh7', 'Adh1']\n\nAs dataframe with a limit of 10 and accession number starts with Q9 (% used as wildcard)\n\n.. code-block:: python\n\n    >>> query.accession(as_df=True, limit=3, accession='Q9%')\n       id accession  entry_id\n    0   1    Q9CQV8         1\n    1  32    Q9GIK8         6\n    2  33    Q9TQB4         6\n\nFull documentation on query function you will find\n`here <http://pyuniprot.readthedocs.io/en/latest/query_functions.html>`_\n\nMore information\n----------------\nSee the `installation documentation <http://pyuniprot.readthedocs.io/en/latest/installation.html>`_ for more advanced\ninstructions. Also, check the change log at :code:`CHANGELOG.rst`.\n\nUniProt tools and licence (use of data)\n---------------------------------------\nUniProt provides also many online `query interfaces <http://www.uniprot.org>`_ on their website.\n\nPlease be aware of the `UniProt licence <http://www.uniprot.org/help/license>`_.\n\nLinks\n-----\nUniversal Protein Resource (UniProt)\n\n- `UniProt website <http://www.uniprot.org/>`_\n- `About UniProt <http://www.uniprot.org/help/about>`_\n\nPyUniProt\n\n- Documented on `Read the Docs <http://pyuniprot.readthedocs.io/>`_\n- Versioned on `GitHub <https://github.com/cebel/pyuniprot>`_\n- Tested on `Travis CI <https://travis-ci.org/cebel/pyuniprot>`_\n- Distributed by `PyPI <https://pypi.python.org/pypi/pyuniprot>`_\n- Chat on `Gitter <https://gitter.im/pyuniprot/Lobby>`_\n\n.. |stable_build| image:: https://api.travis-ci.org/cebel/pyuniprot.svg?branch=master\n    :target: https://travis-ci.org/cebel/pyuniprot\n    :alt: Stable Build Status\n\n.. |stable_documentation| image:: https://readthedocs.org/projects/pyuniprot/badge/?version=latest\n    :target: http://pyuniprot.readthedocs.io/en/latest/\n    :alt: Development Documentation Status\n\n.. |pypi_license| image:: https://img.shields.io/pypi/l/pyuniprot.svg\n    :alt: Apache 2.0 License\n\n.. |python_versions| image:: https://img.shields.io/pypi/pyversions/pyuniprot.svg\n    :alt: Stable Supported Python Versions\n\n.. |pypi_version| image:: https://img.shields.io/pypi/v/pyuniprot.svg\n    :alt: Current version on PyPI\n\n.. |phago_logo| image:: https://raw.githubusercontent.com/cebel/pyuniprot/master/docs/source/_static/logos/phago_logo.jpeg\n    :target: https://www.imi.europa.eu/content/phago\n    :alt: PHAGO project logo\n\n.. |aetionomy_logo| image:: https://raw.githubusercontent.com/cebel/pyuniprot/master/docs/source/_static/logos/aetionomy_logo.png\n    :target: http://www.aetionomy.eu/en/vision.html\n    :alt: AETIONOMY project logo\n\n.. |imi_logo| image:: https://raw.githubusercontent.com/cebel/pyuniprot/master/docs/source/_static/logos/imi_logo.png\n    :target: https://www.imi.europa.eu/\n    :alt: IMI project logo\n\n.. |scai_logo| image:: https://raw.githubusercontent.com/cebel/pyuniprot/master/docs/source/_static/logos/scai_logo.png\n    :target: https://www.scai.fraunhofer.de/en/business-research-areas/bioinformatics.html\n    :alt: SCAI project logo\n\n.. |er_model| image:: https://owncloud.scai.fraunhofer.de/index.php/apps/files_sharing/ajax/publicpreview.php?x=1921&y=445&a=true&file=all.png&t=6d3ZxWeBX6Jndgu&scalingup=0\n    :target: http://pyuniprot.readthedocs.io/en/latest/\n    :alt: Entity relationship model\n\n.. |project_logo_large| image:: https://raw.githubusercontent.com/cebel/pyuniprot/master/docs/source/_static/logos/project_logo_large.png\n    :alt: Project logo\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cebel/pyuniprot", "keywords": "UniProt,Database,Protein", "license": "Apache 2.0 License", "maintainer": "", "maintainer_email": "", "name": "PyUniProt", "package_url": "https://pypi.org/project/PyUniProt/", "platform": "", "project_url": "https://pypi.org/project/PyUniProt/", "project_urls": {"Homepage": "https://github.com/cebel/pyuniprot"}, "release_url": "https://pypi.org/project/PyUniProt/0.0.10/", "requires_dist": ["click", "configparser", "flasgger", "pandas", "passlib", "pymysql", "requests", "sqlalchemy", "tqdm", "wtforms"], "requires_python": "", "summary": "Importing and querying UniProt", "version": "0.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Project logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fe1f24cd5bd7457e6dea9fd76a7c212e3d4bb85/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f636562656c2f7079756e6970726f742f6d61737465722f646f63732f736f757263652f5f7374617469632f6c6f676f732f70726f6a6563745f6c6f676f5f6c617267652e706e67\"></p>\n<p><a href=\"http://pyuniprot.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"Development Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f737a36e321b40abe2d727b050d67443995ae05/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079756e6970726f742f62616467652f3f76657273696f6e3d6c6174657374\"></a> <img alt=\"Apache 2.0 License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6cf95ec9a53e1587ba7b842ca16def137dc74a9b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7079756e6970726f742e737667\"></p>\n<p><a href=\"http://pyUniProt.readthedocs.io\" rel=\"nofollow\">PyUniProt</a> is a Python package\nto access and query UniProt data provided by the European Bioinformatics Institute (EMBL-EBI),\nthe SIB Swiss Institute of Bioinformatics and the Protein Information Resource (PIR).</p>\n<p>Data are installed in a (local or remote) RDBMS enabling bioinformatic algorithms very fast response times\nto sophisticated queries and high flexibility by using SOLAlchemy database layer.\nPyUniProt is developed by the\n<a href=\"https://www.scai.fraunhofer.de/en/business-research-areas/bioinformatics.html\" rel=\"nofollow\">Department of Bioinformatics</a>\nat the Fraunhofer Institute for Algorithms and Scientific Computing\n<a href=\"https://www.scai.fraunhofer.de/en.html\" rel=\"nofollow\">SCAI</a>\nFor more in for information about pyUniProt go to\n<a href=\"http://pyUniProt.readthedocs.io\" rel=\"nofollow\">the documentation</a>.</p>\n<p><a href=\"http://pyuniprot.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"Entity relationship model\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67d69723e6ddae674262734c964b8522382b1f79/68747470733a2f2f6f776e636c6f75642e736361692e667261756e686f6665722e64652f696e6465782e7068702f617070732f66696c65735f73686172696e672f616a61782f7075626c6963707265766965772e7068703f783d3139323126793d34343526613d747275652666696c653d616c6c2e706e6726743d3664335a7857654258364a6e646775267363616c696e6775703d30\"></a></p>\n<p>This development is supported by following <a href=\"https://www.imi.europa.eu/\" rel=\"nofollow\">IMI</a> projects:</p>\n<ul>\n<li><a href=\"http://www.aetionomy.eu/\" rel=\"nofollow\">AETIONOMY</a> and</li>\n<li><a href=\"http://www.phago.eu/\" rel=\"nofollow\">PHAGO</a>.</li>\n</ul>\n<p><a href=\"https://www.imi.europa.eu/\" rel=\"nofollow\"><img alt=\"IMI project logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6bfe658ef30821dad0b5c0dd4f96063749445709/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f636562656c2f7079756e6970726f742f6d61737465722f646f63732f736f757263652f5f7374617469632f6c6f676f732f696d695f6c6f676f2e706e67\"></a> <a href=\"http://www.aetionomy.eu/en/vision.html\" rel=\"nofollow\"><img alt=\"AETIONOMY project logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40ec7c03f2b61674166dc9003f3df152c56c5037/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f636562656c2f7079756e6970726f742f6d61737465722f646f63732f736f757263652f5f7374617469632f6c6f676f732f616574696f6e6f6d795f6c6f676f2e706e67\"></a> <a href=\"https://www.imi.europa.eu/content/phago\" rel=\"nofollow\"><img alt=\"PHAGO project logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a7f5de0120a9d2447278aa4f0f35ce081cc65bff/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f636562656c2f7079756e6970726f742f6d61737465722f646f63732f736f757263652f5f7374617469632f6c6f676f732f706861676f5f6c6f676f2e6a706567\"></a> <a href=\"https://www.scai.fraunhofer.de/en/business-research-areas/bioinformatics.html\" rel=\"nofollow\"><img alt=\"SCAI project logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5649bc5c45c961655e5734c37b39b2759c37f40c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f636562656c2f7079756e6970726f742f6d61737465722f646f63732f736f757263652f5f7374617469632f6c6f676f732f736361695f6c6f676f2e706e67\"></a></p>\n<div id=\"supported-databases\">\n<h2>Supported databases</h2>\n<p><cite>PyUniProt</cite> uses <a href=\"http://sqlalchemy.readthedocs.io\" rel=\"nofollow\">SQLAlchemy</a> to cover a wide spectrum of RDMSs\n(Relational database management system). For best performance MySQL or MariaDB is recommended. But if you have no\npossibility to install software on your system SQLite - which needs no further\ninstallation - also works. Following RDMSs are supported (by SQLAlchemy):</p>\n<ol>\n<li>Firebird</li>\n<li>Microsoft SQL Server</li>\n<li>MySQL / <a href=\"https://mariadb.org/\" rel=\"nofollow\">MariaDB</a></li>\n<li>Oracle</li>\n<li>PostgreSQL</li>\n<li>SQLite</li>\n<li>Sybase</li>\n</ol>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>This is a quick start tutorial for impatient.</p>\n<div id=\"installation-pypi-version-python-versions\">\n<h3>Installation <img alt=\"Current version on PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1903ae8d11f2c8ee29f84dfce33f4b1ea8d88733/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079756e6970726f742e737667\"> <img alt=\"Stable Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94a82f98e35db9c1b07fad65d2268de814bb54e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079756e6970726f742e737667\"></h3>\n<p>PyUniProt can be installed with <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>.</p>\n<pre>pip install pyuniprot\n</pre>\n<p>If you fail because you have no rights to install use superuser (sudo on Linux before the commend) or \u2026</p>\n<pre>pip install --user pyuniprot\n</pre>\n<p>If you want to make sure you are installing this under python3 use \u2026</p>\n<pre>python3 -m pip install pyuniprot\n</pre>\n</div>\n<div id=\"sqlite\">\n<h3>SQLite</h3>\n<div>\n<p>Note</p>\n<p>If you want to use SQLite as your database system, because you \u2026</p>\n<ul>\n<li>have no possibility to use RDMSs like MySQL/MariaDB</li>\n<li>just test PyUniProt, but don\u2019t want to spend time in setting up a database</li>\n</ul>\n<p>skip the next <em>MySQL/MariaDB setup</em> section. But in general we strongly recommend MySQL or MariaDB as your\nrelational database management system.</p>\n</div>\n<p>If you don\u2019t know what all that means skip the section <em>MySQL/MariaDB setup</em>.</p>\n<p>Don\u2019t worry! You can always later change the configuration. For more information about\nchanging database system later go to the subtitle <em>Changing database configuration</em>\n<a href=\"http://pyuniport.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">Changing database configuration</a>\nin the documentation on readthedocs.</p>\n</div>\n<div id=\"mysql-mariadb-setup\">\n<h3>MySQL/MariaDB setup</h3>\n<p>Log in MySQL as root user and create a new database, create a user, assign the rights and flush privileges.</p>\n<pre><span class=\"k\">CREATE</span> <span class=\"k\">DATABASE</span> <span class=\"n\">pyuniprot</span> <span class=\"k\">CHARACTER</span> <span class=\"kt\">SET</span> <span class=\"n\">utf8</span> <span class=\"k\">COLLATE</span> <span class=\"n\">utf8_general_ci</span><span class=\"p\">;</span>\n<span class=\"k\">GRANT</span> <span class=\"k\">ALL</span> <span class=\"n\">PRIVILEGES</span> <span class=\"k\">ON</span> <span class=\"n\">pyuniprot</span><span class=\"p\">.</span><span class=\"o\">*</span> <span class=\"k\">TO</span> <span class=\"s1\">'pyuniprot_user'</span><span class=\"o\">@</span><span class=\"s1\">'%'</span> <span class=\"n\">IDENTIFIED</span> <span class=\"k\">BY</span> <span class=\"s1\">'pyuniprot_passwd'</span><span class=\"p\">;</span>\n<span class=\"k\">FLUSH</span> <span class=\"n\">PRIVILEGES</span><span class=\"p\">;</span>\n</pre>\n<p>There are two options to set the MySQL/MariaDB.</p>\n<ol>\n<li>The simplest is to start the command line tool</li>\n</ol>\n<pre>pyuniprot mysql\n</pre>\n<p>You will be guided with input prompts. Accept the default value in squared brackets with RETURN. You will see\nsomething like this</p>\n<pre>server name/ IP address database is hosted <span class=\"o\">[</span>localhost<span class=\"o\">]</span>:\nMySQL/MariaDB user <span class=\"o\">[</span>pyuniprot_user<span class=\"o\">]</span>:\nMySQL/MariaDB password <span class=\"o\">[</span>pyuniprot_passwd<span class=\"o\">]</span>:\ndatabase name <span class=\"o\">[</span>pyuniprot<span class=\"o\">]</span>:\ncharacter <span class=\"nb\">set</span> <span class=\"o\">[</span>utf8<span class=\"o\">]</span>:\n</pre>\n<p>Connection will be tested and in case of success return <cite>Connection was successful</cite>.\nOtherwise you will see following hinte</p>\n<pre>Test was NOT successful\n\nPlease use one of the following connection schemas\nMySQL/MariaDB <span class=\"o\">(</span>strongly recommended<span class=\"o\">)</span>:\n        mysql+pymysql://user:passwd@localhost/database?charset<span class=\"o\">=</span>utf8\n\nPostgreSQL:\n        postgresql://user:passwd@localhost/database\n\nMsSQL <span class=\"o\">(</span>pyodbc needed<span class=\"o\">)</span>:\n        mssql+pyodbc://user:passwd@database\n\nSQLite <span class=\"o\">(</span>always works<span class=\"o\">)</span>:\n\n- Linux:\n        sqlite:////absolute/path/to/database.db\n\n- Windows:\n        sqlite:///C:<span class=\"se\">\\a</span>bsolute<span class=\"se\">\\p</span>ath<span class=\"se\">\\t</span>o<span class=\"se\">\\d</span>atabase.db\n\nOracle:\n        oracle://user:passwd@localhost:1521/database\n</pre>\n<p>2. The second option is to start a python shell and set the MySQL configuration.\nIf you have not changed anything in the SQL statements above \u2026</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyuniprot</span>\n<span class=\"n\">pyuniprot</span><span class=\"o\">.</span><span class=\"n\">set_mysql_connection</span><span class=\"p\">()</span>\n</pre>\n<p>If you have used you own settings, please adapt the following command to you requirements.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyuniprot</span>\n<span class=\"n\">pyuniprot</span><span class=\"o\">.</span><span class=\"n\">set_mysql_connection</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">'pyuniprot_user'</span><span class=\"p\">,</span> <span class=\"n\">passwd</span><span class=\"o\">=</span><span class=\"s1\">'pyuniprot_passwd'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"s1\">'pyuniprot'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"updating\">\n<h3>Updating</h3>\n<p>The updating process will download the <em>uniprot_sprot.xml.gz</em> file provided by the UniProt team on their ftp server\n<a>download page</a></p>\n<div>\n<p>Warning</p>\n<p>Please note that UniProt download file needs ~700 Mb of disk space and the update takes ~2h only for\nhuman, mouse and rat (depending on your computer)</p>\n</div>\n<p>It is strongly recommended to restrict the entries liked to specific organisms your are interested in by parsing a list\nof NCBI Taxonomy IDs to the parameter <cite>taxids</cite>. To identify correct NCBI Taxonomy IDs please go to\n<a href=\"https://www.ncbi.nlm.nih.gov/taxonomy/\" rel=\"nofollow\">NCBI Taxonomy web form</a>. In the following example we use 9606 as identifier\nfor Homo sapiens, 10090 for Mus musculus and 10116 for Rattus norvegicus.</p>\n<p>There are two options to import the data:</p>\n<ol>\n<li><p>Command line import</p>\n<blockquote>\n<pre>pyuniprot update --taxids <span class=\"m\">9606</span>,10090,10116\n</pre>\n</blockquote>\n</li>\n<li><p>Python</p>\n<blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyuniprot</span>\n<span class=\"n\">pyuniprot</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">taxids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">9606</span><span class=\"p\">,</span> <span class=\"mi\">10090</span><span class=\"p\">,</span> <span class=\"mi\">10116</span><span class=\"p\">])</span>\n</pre>\n</blockquote>\n</li>\n</ol>\n<p>We only recommend to import the whole UniProt dataset if you don\u2019t want to restrict your search. Import with no\nrestrictions will take several hours and take a lot of disk space.</p>\n<p>If you want to load all UniProt entries in the database:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyuniprot</span>\n<span class=\"n\">pyuniprot</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span> <span class=\"c1\"># not recommended, please read the notes above</span>\n</pre>\n<p>The update uses the download file if it still exists on you system (~/.pyuniprot/data/uniprot_sprot.xml.gz). If you use\nthe parameter <cite>force_download</cite> the current file from UniProt will be downloaded.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyuniprot</span>\n<span class=\"n\">pyuniprot</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">force_download</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">taxids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">9606</span><span class=\"p\">,</span> <span class=\"mi\">10090</span><span class=\"p\">,</span> <span class=\"mi\">10116</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"quick-start-with-query-functions\">\n<h3>Quick start with query functions</h3>\n<p>Initialize the query object</p>\n<pre><span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">pyuniprot</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">()</span>\n</pre>\n<p>Get all entries</p>\n<pre><span class=\"n\">all_entries</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">entry</span><span class=\"p\">()</span>\n</pre>\n<p>Use parameters like gene_name to find specific entries</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">entry</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">entry</span><span class=\"p\">(</span><span class=\"n\">gene_name</span><span class=\"o\">=</span><span class=\"s1\">'YWHAE'</span><span class=\"p\">,</span> <span class=\"n\">taxid</span><span class=\"o\">=</span><span class=\"mi\">9606</span><span class=\"p\">,</span> <span class=\"n\">recommended_short_name</span><span class=\"o\">=</span><span class=\"s1\">'14-3-3E'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'1433E_HUMAN'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">entry</span>\n<span class=\"mi\">14</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"mi\">3</span> <span class=\"n\">protein</span> <span class=\"n\">epsilon</span>\n</pre>\n<dl>\n<dt>Entry is the root element in the database. Form here you can reach all other data</dt>\n<dd><pre>&gt;&gt;&gt; entry.accessions\n[P62258, B3KY71, D3DTH5, P29360, P42655, Q4VJB6, Q53XZ5, Q63631, Q7M4R4]\n&gt;&gt;&gt; entry.functions\n[\"Adapter protein implicated in the regulation of a large spectrum of both ...\"]\n</pre>\n</dd>\n<dt>If a parameter ends on a <strong>s</strong> you can search</dt>\n<dd><pre>&gt;&gt;&gt; alcohol_dehydrogenases = q.entry(ec_numbers='1.1.1.1')\n&gt;&gt;&gt; [x.name for x in q.get_entry(ec_numbers='1.1.1.1')]\n['ADHX_RAT', 'ADH1_RAT', 'ADHX_HUMAN', 'ADHX_MOUSE']\n&gt;&gt;&gt; query.entry(ec_numbers=('1.1.1.1', '1.1.1.2'))\n['Adh5', 'Adh1', 'ADH5', 'Adh5', 'Adh6', 'ADH7', 'Adh7', 'Adh7', 'Adh1']\n</pre>\n</dd>\n</dl>\n<p>As dataframe with a limit of 10 and accession number starts with Q9 (% used as wildcard)</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">accession</span><span class=\"p\">(</span><span class=\"n\">as_df</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">accession</span><span class=\"o\">=</span><span class=\"s1\">'Q9%'</span><span class=\"p\">)</span>\n   <span class=\"nb\">id</span> <span class=\"n\">accession</span>  <span class=\"n\">entry_id</span>\n<span class=\"mi\">0</span>   <span class=\"mi\">1</span>    <span class=\"n\">Q9CQV8</span>         <span class=\"mi\">1</span>\n<span class=\"mi\">1</span>  <span class=\"mi\">32</span>    <span class=\"n\">Q9GIK8</span>         <span class=\"mi\">6</span>\n<span class=\"mi\">2</span>  <span class=\"mi\">33</span>    <span class=\"n\">Q9TQB4</span>         <span class=\"mi\">6</span>\n</pre>\n<p>Full documentation on query function you will find\n<a href=\"http://pyuniprot.readthedocs.io/en/latest/query_functions.html\" rel=\"nofollow\">here</a></p>\n</div>\n</div>\n<div id=\"more-information\">\n<h2>More information</h2>\n<p>See the <a href=\"http://pyuniprot.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">installation documentation</a> for more advanced\ninstructions. Also, check the change log at <code>CHANGELOG.rst</code>.</p>\n</div>\n<div id=\"uniprot-tools-and-licence-use-of-data\">\n<h2>UniProt tools and licence (use of data)</h2>\n<p>UniProt provides also many online <a href=\"http://www.uniprot.org\" rel=\"nofollow\">query interfaces</a> on their website.</p>\n<p>Please be aware of the <a href=\"http://www.uniprot.org/help/license\" rel=\"nofollow\">UniProt licence</a>.</p>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<p>Universal Protein Resource (UniProt)</p>\n<ul>\n<li><a href=\"http://www.uniprot.org/\" rel=\"nofollow\">UniProt website</a></li>\n<li><a href=\"http://www.uniprot.org/help/about\" rel=\"nofollow\">About UniProt</a></li>\n</ul>\n<p>PyUniProt</p>\n<ul>\n<li>Documented on <a href=\"http://pyuniprot.readthedocs.io/\" rel=\"nofollow\">Read the Docs</a></li>\n<li>Versioned on <a href=\"https://github.com/cebel/pyuniprot\" rel=\"nofollow\">GitHub</a></li>\n<li>Tested on <a href=\"https://travis-ci.org/cebel/pyuniprot\" rel=\"nofollow\">Travis CI</a></li>\n<li>Distributed by <a href=\"https://pypi.python.org/pypi/pyuniprot\" rel=\"nofollow\">PyPI</a></li>\n<li>Chat on <a href=\"https://gitter.im/pyuniprot/Lobby\" rel=\"nofollow\">Gitter</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3129156, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "b9e947232664713ee26d5828feae288c", "sha256": "da6940f6b8ab96e9c7847e72e79694c77c77ced280aaa0b178e5ee1d4b1a59b2"}, "downloads": -1, "filename": "PyUniProt-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "b9e947232664713ee26d5828feae288c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36629, "upload_time": "2017-08-28T14:08:56", "upload_time_iso_8601": "2017-08-28T14:08:56.393337Z", "url": "https://files.pythonhosted.org/packages/1a/a7/c196ad1877cf0b69c293df79ccad540bab827de861c2fd4f91ccc96c1c69/PyUniProt-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe7be155c049869a71cdd34409026047", "sha256": "433d2ae73ca05b9952ca9e346e5ddd940e3c1a7f07aba9186cd3bc7c730df6c6"}, "downloads": -1, "filename": "PyUniProt-0.0.10.tar.gz", "has_sig": false, "md5_digest": "fe7be155c049869a71cdd34409026047", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1651194, "upload_time": "2017-08-28T14:09:01", "upload_time_iso_8601": "2017-08-28T14:09:01.558912Z", "url": "https://files.pythonhosted.org/packages/db/0d/88ddb56df96eae453f609cec6dae4176bbc781b04d6c66bbfbb7d738c1df/PyUniProt-0.0.10.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "a666a07ff68befeadee2f33382eb7e87", "sha256": "44a31a3fb5fafe85376dafccef53a8cc159251933da868d4ac74c5ad0ebad655"}, "downloads": -1, "filename": "PyUniProt-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a666a07ff68befeadee2f33382eb7e87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34995, "upload_time": "2017-08-21T11:21:22", "upload_time_iso_8601": "2017-08-21T11:21:22.497359Z", "url": "https://files.pythonhosted.org/packages/f6/dd/bc59feb4c4372a88d17f1307644b389dc26a54395973d6a10ea5fa0d2fef/PyUniProt-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69a941a89ce03e937f08f9e9f4264845", "sha256": "0de3729f5246063bfbdc8fa3fc7f2a24ba26890e7d46bf6e6d7ae02f76d13b88"}, "downloads": -1, "filename": "PyUniProt-0.0.2.tar.gz", "has_sig": false, "md5_digest": "69a941a89ce03e937f08f9e9f4264845", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1679202, "upload_time": "2017-08-21T11:21:25", "upload_time_iso_8601": "2017-08-21T11:21:25.409423Z", "url": "https://files.pythonhosted.org/packages/d5/00/6a41406f44bf7f23a8a2e35012c8a86e118bcd98fffe0821276fcf0ad31e/PyUniProt-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "71033437c1c0ab87986a217f7fa31fb7", "sha256": "0c712836b54c9389acbcef1442ead4c3053ac305c0a37cf044a3f2bc8f219cf3"}, "downloads": -1, "filename": "PyUniProt-0.0.3.tar.gz", "has_sig": false, "md5_digest": "71033437c1c0ab87986a217f7fa31fb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 855658, "upload_time": "2017-08-21T12:44:12", "upload_time_iso_8601": "2017-08-21T12:44:12.621392Z", "url": "https://files.pythonhosted.org/packages/ea/25/4f9afc8dfed0f7dad5993e75a70a18ef4273a4bd2542e9192e3a14852243/PyUniProt-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "64276b03eea2f352b8ba936e728d2a2d", "sha256": "657af05c1e28e81c3a9c243a6965c4be62b2f36ff603c753f820a7ad42293df9"}, "downloads": -1, "filename": "PyUniProt-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "64276b03eea2f352b8ba936e728d2a2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35003, "upload_time": "2017-08-21T13:50:19", "upload_time_iso_8601": "2017-08-21T13:50:19.564995Z", "url": "https://files.pythonhosted.org/packages/e7/b1/f4e094b2be74ab21ca753765c2c73cbbb1e7a857fa2b51a493fa882aa92a/PyUniProt-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29bb380267a4dfd1eecfa91d7722686f", "sha256": "dde42cd004581011187893aa7334da84d0a6faea941413b6f00c95a68e87c828"}, "downloads": -1, "filename": "PyUniProt-0.0.4.tar.gz", "has_sig": false, "md5_digest": "29bb380267a4dfd1eecfa91d7722686f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1672201, "upload_time": "2017-08-21T13:50:23", "upload_time_iso_8601": "2017-08-21T13:50:23.068879Z", "url": "https://files.pythonhosted.org/packages/6b/22/83f1206671ff36a717136cbf3c87b2460c160d60a48d33663d48fb98bc46/PyUniProt-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ec7be1a96c035637c34c38461e86063d", "sha256": "cee642101187779440335b406cc02bc320f55ebdd93815f8362e11692285d781"}, "downloads": -1, "filename": "PyUniProt-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ec7be1a96c035637c34c38461e86063d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35068, "upload_time": "2017-08-21T14:31:09", "upload_time_iso_8601": "2017-08-21T14:31:09.693865Z", "url": "https://files.pythonhosted.org/packages/50/d3/73bcc14bea398c7be6a79afa983a54a3fed969db967cf13d50fc739c470b/PyUniProt-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c09e1d29ee90bed8fd2b079e3b7793bb", "sha256": "0defd93352580a871ff0db4c7c49ffe1faee3764c5d02469497cd8ddc45ef5ee"}, "downloads": -1, "filename": "PyUniProt-0.0.5.tar.gz", "has_sig": false, "md5_digest": "c09e1d29ee90bed8fd2b079e3b7793bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1672224, "upload_time": "2017-08-21T14:31:11", "upload_time_iso_8601": "2017-08-21T14:31:11.578969Z", "url": "https://files.pythonhosted.org/packages/b1/d4/4aaa9f671b5c3dde2f2b10a9008327c8815e3d07c7b08e5e67814ae0b7fa/PyUniProt-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "97524592c7a85e9d9e4439b775dc0661", "sha256": "fb4e2622f78046a1e3978ebff42ce224a2be4d2b699b862f4f3231ddfc9aeaa7"}, "downloads": -1, "filename": "PyUniProt-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "97524592c7a85e9d9e4439b775dc0661", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35100, "upload_time": "2017-08-21T15:22:32", "upload_time_iso_8601": "2017-08-21T15:22:32.724188Z", "url": "https://files.pythonhosted.org/packages/7c/83/c134efbd5b0e1fe55fdbeb43c31f042b6158b4e56ccec892b78766b35bde/PyUniProt-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ca6595618ba4e952e0476e07864c04f", "sha256": "da2cbd38a7e127fbe47b34aea2f43c8545d312adc0e5504f4588b2978ae32190"}, "downloads": -1, "filename": "PyUniProt-0.0.6.tar.gz", "has_sig": false, "md5_digest": "2ca6595618ba4e952e0476e07864c04f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1672291, "upload_time": "2017-08-21T15:22:35", "upload_time_iso_8601": "2017-08-21T15:22:35.042890Z", "url": "https://files.pythonhosted.org/packages/92/f4/8e3efd5e8e01ccd04e3b26be4a3f0f67042426748253e1dab68f3e8219ee/PyUniProt-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "699de5303f593fe0542f38f551f3307b", "sha256": "aa95f57cddb1d9e194a995e75f7901164a1fb0cedb8e76d96451c5cb5dc69b57"}, "downloads": -1, "filename": "PyUniProt-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "699de5303f593fe0542f38f551f3307b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36310, "upload_time": "2017-08-22T07:43:15", "upload_time_iso_8601": "2017-08-22T07:43:15.149113Z", "url": "https://files.pythonhosted.org/packages/9e/fa/e820524c39e0a3c017217320d941a63e6ed3125c8869888f52af920e83ee/PyUniProt-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5677d1fdde66e4f53c9a2614d97a9ce9", "sha256": "fae9e230a045cba4f9ce1c68af98336f4831695a501f9bbda7b2874290b0f74b"}, "downloads": -1, "filename": "PyUniProt-0.0.7.tar.gz", "has_sig": false, "md5_digest": "5677d1fdde66e4f53c9a2614d97a9ce9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1673222, "upload_time": "2017-08-22T07:43:17", "upload_time_iso_8601": "2017-08-22T07:43:17.480490Z", "url": "https://files.pythonhosted.org/packages/da/7f/d9ee880bf86ccac4095783f45787c0b97daeeb2515c7141079573034c82d/PyUniProt-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "d7be4b094a8ab6be2db485ead4ef606b", "sha256": "0805697c26127e3f5e845e094d301ff96d78517c0d6d61d5c689d6aa9f0a1a63"}, "downloads": -1, "filename": "PyUniProt-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "d7be4b094a8ab6be2db485ead4ef606b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36260, "upload_time": "2017-08-22T11:48:49", "upload_time_iso_8601": "2017-08-22T11:48:49.978381Z", "url": "https://files.pythonhosted.org/packages/dc/58/7fa1e60d2b69391db598fd098c6beae3867ce9d22fd4a712a53faf9d89d3/PyUniProt-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1cbeddec111a1763415017bd03397ff", "sha256": "2c8c2d3e4dc45f69f550137589df02ee2dee0921e6170ef0b8d5f877c79c87e1"}, "downloads": -1, "filename": "PyUniProt-0.0.8.tar.gz", "has_sig": false, "md5_digest": "d1cbeddec111a1763415017bd03397ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1673216, "upload_time": "2017-08-22T11:48:53", "upload_time_iso_8601": "2017-08-22T11:48:53.591225Z", "url": "https://files.pythonhosted.org/packages/85/15/82cef852e966eee1e0e3a8d0c2d1c7869f0de66b7a424ea0cf34ff7db3d8/PyUniProt-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "fdc7c1a9f35eecc4c6858d84a261b17f", "sha256": "4afb4da7ee027d10c007ab9c0d3801b88902273d5c96c6d2f5b1f326841eb6f1"}, "downloads": -1, "filename": "PyUniProt-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "fdc7c1a9f35eecc4c6858d84a261b17f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36261, "upload_time": "2017-08-22T12:17:21", "upload_time_iso_8601": "2017-08-22T12:17:21.969455Z", "url": "https://files.pythonhosted.org/packages/99/d4/19f48a461b3084c4ee9f18b2ef6405df1625fbc7eae2652d747aadb68f73/PyUniProt-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d189d30f096cbcd399113d6559bb1ac6", "sha256": "ec72beafa4e9a5cb38a47d879a2b62eb9770882c7665ac3e14d4b7a73b461ea6"}, "downloads": -1, "filename": "PyUniProt-0.0.9.tar.gz", "has_sig": false, "md5_digest": "d189d30f096cbcd399113d6559bb1ac6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1673225, "upload_time": "2017-08-22T12:17:25", "upload_time_iso_8601": "2017-08-22T12:17:25.509925Z", "url": "https://files.pythonhosted.org/packages/c7/19/6ff6c706ebd121803c5f3701107339916111acd7e44a07c8e836a53685c9/PyUniProt-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9e947232664713ee26d5828feae288c", "sha256": "da6940f6b8ab96e9c7847e72e79694c77c77ced280aaa0b178e5ee1d4b1a59b2"}, "downloads": -1, "filename": "PyUniProt-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "b9e947232664713ee26d5828feae288c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 36629, "upload_time": "2017-08-28T14:08:56", "upload_time_iso_8601": "2017-08-28T14:08:56.393337Z", "url": "https://files.pythonhosted.org/packages/1a/a7/c196ad1877cf0b69c293df79ccad540bab827de861c2fd4f91ccc96c1c69/PyUniProt-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe7be155c049869a71cdd34409026047", "sha256": "433d2ae73ca05b9952ca9e346e5ddd940e3c1a7f07aba9186cd3bc7c730df6c6"}, "downloads": -1, "filename": "PyUniProt-0.0.10.tar.gz", "has_sig": false, "md5_digest": "fe7be155c049869a71cdd34409026047", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1651194, "upload_time": "2017-08-28T14:09:01", "upload_time_iso_8601": "2017-08-28T14:09:01.558912Z", "url": "https://files.pythonhosted.org/packages/db/0d/88ddb56df96eae453f609cec6dae4176bbc781b04d6c66bbfbb7d738c1df/PyUniProt-0.0.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:34 2020"}