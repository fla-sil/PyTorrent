{"info": {"author": "Javinator9889", "author_email": "javialonso007@hotmail.es", "bugtrack_url": null, "classifiers": [], "description": "        ==================================================\r\r\n        \r\r\n        A tool for searching the entire web with the Google technology\r\r\n        \r\r\n        |PyPi| |ZIP| |GIT|\r\r\n        \r\r\n        Index\r\r\n        -----\r\r\n        \r\r\n        1. `Introduction <https://github.com/Javinator9889/pyGle#1-introduction>`__\r\r\n        2. `Purpose <https://github.com/Javinator9889/pyGle#2-purpose>`__\r\r\n        3. `Installation <https://github.com/Javinator9889/pyGle#3-installation>`__\r\r\n        4. `Instructions <https://github.com/Javinator9889/pyGle#4-instructions>`__\r\r\n        5. `Contribute <https://github.com/Javinator9889/pyGle#5-contribute>`__\r\r\n        6. `License <https://github.com/Javinator9889/pyGle#6-license>`__\r\r\n        \r\r\n        1. Introduction\r\r\n        ---------------\r\r\n        \r\r\n        `pyGle <https://github.com/Javinator9889/pyGle>`__ aims to be a *very powerful* tool for just **searching the entire web** by using the *Google* technology, without **any limitations** (or almost no one).\r\r\n        \r\r\n        Just with a *few lines* of code you will be able to:\r\r\n        \r\r\n        -  Perform a *normal search* on Google \ud83d\udd0e\r\r\n        -  Look at *Google Images* for obtaining all the information you need about a pic \ud83c\udf05\r\r\n        -  Search *the latest news* and also **a lot of articles** on *Google News* \ud83d\udcf0\r\r\n        -  Filter and obtain *patents* by using *Google Patents* \ud83d\udcdd\r\r\n        -  Have a look at hundreds of *different products* at *Google Shops* \ud83d\uded2\r\r\n        -  Look for *books*, *magazines* and more at *Google Books* \ud83d\udcd8\r\r\n        -  Videos, videos and more videos at *Google Videos* \ud83c\udfa5\r\r\n        \r\r\n        As the speed is a crucial factor, I developed this library in order to be the fastest one for each possible situation.\r\r\n        \r\r\n        With every search, a little log is included at the end of the result with the **available stats** for the web scrapping. After some test, I noticed that using `requests <https://github.com/requests/requests>`__ **slow down** the overall speed. For that reason is why you can see the lib performs all *Internet access* by using `urllib <https://docs.python.org/3/library/urllib.html>`__, which has two advantages:\r\r\n        \r\r\n        1. Is included with **all Python installations**, so it is a less library to install.\r\r\n        2. The requests overall time has been reduced at almost **70%**: with *requests*, it took about **3~4 seconds**. With *urllib*, that time now becomes about **~1 second** or less.\r\r\n        \r\r\n        With the motivation of the said before, when performing a *research*, the lib **instantly** returns the object that you will use in the future for gathering the results. That object is also known as a **Future** (*you can read more information right here* `\ud83d\udc49 Python Concurrent Futures <https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future>`__), whose functionality is the following:\r\r\n        \r\r\n        -  You want to *do a research* at Google.\r\r\n        -  As explained before, it needs about **~1 second** to complete, so it is a lot of time for you to do *other things* that do not depend on the result of your search.\r\r\n        -  So when you ask `pyGle <https://github.com/Javinator9889/pyGle>`__ to scrap the web with Google, it returns a **Future** object. At the first moment, it does have **nothing**, but when `pyGle <https://github.com/Javinator9889/pyGle>`__ ends its work, the Future object will contain all the data.\r\r\n        -  `pyGle <https://github.com/Javinator9889/pyGle>`__ automatically detects the *number of processors* of your system so it can speed-up all the process.\r\r\n        \r\r\n        2. Purpose\r\r\n        ----------\r\r\n        \r\r\n        Searching the web with Google *is very easy* from a web browser such as Chrome or Firefox, but sometimes we need that **information** to be available for a program that we are developing or similar. Or just we need to *transform and work with that info*.\r\r\n        \r\r\n        For that situation, `pyGle <https://github.com/Javinator9889/pyGle>`__ is the real solution. By using the powerful `Python lists <https://docs.python.org/3/tutorial/datastructures.html#more-on-lists>`__ and also `Python dictionaries <https://docs.python.org/3/tutorial/datastructures.html#dictionaries>`__, `pyGle <https://github.com/Javinator9889/pyGle>`__ will give you all what you need. Let me exemplify you with a simple search of the term *\"test\"*:\r\r\n        \r\r\n        1. Here is the simplicity of `pyGle <https://github.com/Javinator9889/pyGle>`__ in code for achieving that:\r\r\n        \r\r\n           .. code:: python\r\r\n        \r\r\n               from pprint import pprint  # Not necessary but for a beautiful print\r\r\n               from pyGle import PyGle\r\r\n        \r\r\n               pSearch = PyGle(query=\"test\")\r\r\n               ft = pSearch.doSearch()  # A Future object\r\r\n               pprint(ft.result())\r\r\n        \r\r\n        2. And now, when the Future is done, here is the result:\r\r\n        \r\r\n           .. code:: python\r\r\n        \r\r\n               [   {   'cached_version': 'http://webcache.googleusercontent.com/search?q=cache:jNPwduM3zRgJ:www.eljueves.es/news/test-que-meme-eres_2448+&cd=1&hl=es&ct=clnk&gl=es',\r\r\n                   'date': '30 may. 2018',\r\r\n                   'description': '30 may. 2018 -Olv\u00eddalas Lo mejor para definir tu '\r\r\n                                  'personalidad son los memes. Descubre cu\u00e1l es el tuyo '\r\r\n                                  'con este rigurosotestavalado por la Universidad...',\r\r\n                   'link': 'http://www.eljueves.es/news/test-que-meme-eres_2448',\r\r\n                   'title': 'TEST: \u00bfQu\u00e9 meme eres? - El Jueves'},\r\r\n               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:nbx31tovq8UJ:https://www.enfemenino.com/psico/tests-ssc17.html+&cd=2&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'Tests-Testde personalidad de inteligencia de '\r\r\n                                  'belleza... todo tipo detestque te pueden ayudar a '\r\r\n                                  'tomar decisiones o simplemente aclararte las ideas.',\r\r\n                   'link': 'https://www.enfemenino.com/psico/tests-ssc17.html',\r\r\n                   'title': 'Tests - Tests de personalidad, inteligencia, moda, belleza, '\r\r\n                            '| enfemenino'},\r\r\n               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:PQFS2G6QNgAJ:https://www.muyinteresante.es/tests+&cd=3&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'TestsMuyInteresante.es. Mide tu ingenio y lo que sabes '\r\r\n                                  'de forma divertida y amena.',\r\r\n                   'link': 'https://www.muyinteresante.es/tests',\r\r\n                   'title': 'Tests inteligentes y curiosos en Muy Interesante Espa\u00f1a'},\r\r\n               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:iQ_U_r5BkKkJ:https://www.testdevelocidad.es/+&cd=4&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'Testde velocidad para medir la calidad de tu acceso a '\r\r\n                                  'Internet con ADSL o fibra \u00f3ptica . Comprueba la '\r\r\n                                  'velocidad real de tu conexi\u00f3n.',\r\r\n                   'link': 'https://www.testdevelocidad.es/',\r\r\n                   'title': 'Test de velocidad : Mide tu ADSL o fibra con el SpeedTest de '\r\r\n                            'www ...'},\r\r\n               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:m6vzOP8qmEsJ:https://www.arealme.com/mental/es/+&cd=5&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'Testde edad mental. cual es tu edad mental. Estetestes '\r\r\n                                  'de origen japon\u00e9s y se llama . Por favor s\u00e9 sincero al '\r\r\n                                  'responder a las preguntas.',\r\r\n                   'link': 'https://www.arealme.com/mental/es/',\r\r\n                   'title': 'Test de edad mental (cual es tu edad mental) - A Real Me'},\r\r\n               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:gU4XOSuOIR0J:https://www.clara.es/temas/test+&cd=6&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'Haz nuestrostesty descubre cu\u00e1l es la mejor dieta para '\r\r\n                                  'adelgazar los mejores tratamientos est\u00e9ticos y de '\r\r\n                                  'belleza los alimentos que mejor te sientan.',\r\r\n                   'link': 'https://www.clara.es/temas/test',\r\r\n                   'title': 'Test dieta, belleza, salud, alimentaci\u00f3n, nutrici\u00f3n, '\r\r\n                            'psicolog\u00eda, moda\u2026'},\r\r\n               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:2C5cLoSzSKoJ:https://testdivertidos.es/+&cd=7&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'TestDivertidos.es - Lostestsgratis m\u00e1s divertidos de '\r\r\n                                  'internet:testde inteligencia personalidad psicol\u00f3gicos '\r\r\n                                  'de amor para ni\u00f1os...',\r\r\n                   'link': 'https://testdivertidos.es/',\r\r\n                   'title': 'Test Divertidos | Los tests m\u00e1s divertidos de la web'},\r\r\n               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:hBp-w20VAWEJ:https://www.psicoactiva.com/tests/personalidad/test-personalidad-5factores.htm+&cd=8&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'Testgratis que eval\u00faa la Personalidad a partir de sus '\r\r\n                                  'cinco Dimensiones llamadas Los Cinco Grandes.',\r\r\n                   'link': 'https://www.psicoactiva.com/tests/personalidad/test-personalidad-5factores.htm',\r\r\n                   'title': 'PsicoActiva.com: Test de personalidad de cinco factores.'},\r\r\n               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:3_8PsvuNwh0J:https://www.nationalgeographic.com.es/temas/tests-ng+&cd=9&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'Pon a prueba tus conocimientos con losTESTde National '\r\r\n                                  'Geographic sobre historia naturaleza pa\u00edses ciencia '\r\r\n                                  'personajes hist\u00f3ricos ciudades...',\r\r\n                   'link': 'https://www.nationalgeographic.com.es/temas/tests-ng',\r\r\n                   'title': 'Los mejores TEST de National Geographic'},\r\r\n               {   'cached_version': 'http://webcache.googleusercontent.com/search?q=cache:-7iUEjuLNkMJ:www.movistar.es/particulares/test-de-velocidad/+&cd=10&hl=es&ct=clnk&gl=es',\r\r\n                   'date': 'unavailable',\r\r\n                   'description': 'Comprueba la velocidad de tu conexi\u00f3n a Internet con '\r\r\n                                  'eltestde velocidad que usan los instaladores de '\r\r\n                                  'Movistar OFERTA FIBRA -63 DESCUENTO 900 104...',\r\r\n                   'link': 'http://www.movistar.es/particulares/test-de-velocidad/',\r\r\n                   'title': 'Test Velocidad ADSL y Fibra - Mide la velocidad de tu '\r\r\n                            'Internet - Movistar'},\r\r\n               {   'google_stats': 'Aproximadamente 3.090.000.000 resultados(0,34 '\r\r\n                                   'segundos)',\r\r\n                   'how_many_results': 10,\r\r\n                   'related_search': [   'testcuriosos',\r\r\n                                         'testdivertidos',\r\r\n                                         'testpara adolescentes',\r\r\n                                         'tests de personalidad',\r\r\n                                         'tests divertidos para pasar el rato',\r\r\n                                         'testjuegos',\r\r\n                                         'testde belleza',\r\r\n                                         'tests de amor'],\r\r\n                   'stats': {   'google_search_time': '0.8270025253295898 s',\r\r\n                                'overall_time': '0.8999979496002197 s',\r\r\n                                'parsing_page_time': '0.040498971939086914 s'},\r\r\n                   'url': 'https://www.google.com/search?q=test'}]\r\r\n        \r\r\n           At this case, I am in Spain, so the results language are based on your **current location** (if you *do not specify one*).\r\r\n        \r\r\n        If another page must be searched, all the methods start with: ``with``. You can find more instructions at the `wiki <https://github.com/Javinator9889/pyGle/wiki>`__.\r\r\n        \r\r\n        3. Installation\r\r\n        ---------------\r\r\n        \r\r\n        As usual, you have the `pip <https://pypi.org/project/pip/>`__ mode or the `easy install <https://setuptools.readthedocs.io/en/latest/easy_install.html>`__ methods:\r\r\n        \r\r\n        *The commands for Windows are the same but without* ``sudo``\r\r\n        \r\r\n        *Installing via PyPi (pip)*\r\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\r\n        \r\r\n        -  In some Linux systems, *pip* is not directly available in command line, so we have two options:\r\r\n        \r\r\n           *Installing pip for Python 3* (assuming that you **already have Python 3 installed**):\r\r\n        \r\r\n           .. code:: bash\r\r\n        \r\r\n               ## DEBIAN SYSTEMS ##\r\r\n               sudo apt update && sudo apt upgrade\r\r\n               sudo apt-get install python3-pip\r\r\n        \r\r\n           .. code:: bash\r\r\n        \r\r\n               ## CENTOS ##\r\r\n               sudo yum install python34-setuptools\r\r\n               sudo easy_install pip\r\r\n        \r\r\n        -  Installing `pyGle <https://github.com/Javinator9889/pyGle>`__:\r\r\n        \r\r\n           Once you did what said before, now you are able to install `pyGle <https://github.com/Javinator9889/pyGle>`__\r\r\n        \r\r\n           .. code:: bash\r\r\n        \r\r\n               #### USING PIP ####\r\r\n               sudo pip3 install g-pyGle\r\r\n        \r\r\n               ## If pip3 is not available ##\r\r\n               sudo pip install g-pyGle\r\r\n        \r\r\n               ## Via Python 3 ##\r\r\n               sudo python3 -m pip install g-pyGle\r\r\n        \r\r\n               ## Without admin permissions ##\r\r\n               pip3 install -U g-pyGle\r\r\n               OR\r\r\n               python3 -m pip install -U g-pyGle\r\r\n        \r\r\n        *Installing via easy install*\r\r\n        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\r\n        \r\r\n        -  Basically, we will install *Python 3* on our systems, and then we will be able to install `pyGle <https://github.com/Javinator9889/pyGle>`__:\r\r\n        \r\r\n           -  `Windows <https://realpython.com/installing-python/#windows>`__\r\r\n           -  `Linux (all systems) <https://realpython.com/installing-python/#linux>`__\r\r\n           -  `MacOS <https://realpython.com/installing-python/#macos-mac-os-x>`__\r\r\n           -  `iOS <https://realpython.com/installing-python/#ios-iphone-ipad>`__\r\r\n           -  `Android <https://realpython.com/installing-python/#android-phones-tablets>`__\r\r\n        \r\r\n        -  Now, we can install `pyGle <https://github.com/Javinator9889/pyGle>`__ as follows:\r\r\n        \r\r\n           .. code:: bash\r\r\n        \r\r\n               #### USING EASY INSTALL ####\r\r\n               git clone https://github.com/Javinator9889/pyGle.git\r\r\n               cd pyGle\r\r\n               sudo python3 setup.py install\r\r\n        \r\r\n        4. Instructions\r\r\n        ---------------\r\r\n        \r\r\n        Every time we want to use `pyGle <https://github.com/Javinator9889/pyGle>`__, we will do the following:\r\r\n        \r\r\n        .. code:: python\r\r\n        \r\r\n            from pyGle import PyGle\r\r\n        \r\r\n        `pyGle <https://github.com/Javinator9889/pyGle>`__ allows us to **enable a history** and **keep the session cookies** (for a faster browsing):\r\r\n        \r\r\n        .. code:: python\r\r\n        \r\r\n            pSearch = PyGle(enable_history=True, use_session_cookies=True)\r\r\n        \r\r\n        As normal, `pyGle <https://github.com/Javinator9889/pyGle>`__ will only do a normal Google search if we add a query:\r\r\n        \r\r\n        .. code:: python\r\r\n        \r\r\n            pSearch.withQuery(\"what we want to search\")\r\r\n        \r\r\n        Also, with every method, you can continue *defining your needs* without **creating thousands** of lines of code:\r\r\n        \r\r\n        .. code:: python\r\r\n        \r\r\n            pSearch.withQuery(\"what we want to search\").withContainingTwoTerms(\"term 1\", \"term 2\").withTextInTitle(\"text in title\").withSafeModeDeactivated().withSearchStartPositionAt(25)\r\r\n        \r\r\n        Once we are done, searching is as simple as:\r\r\n        \r\r\n        .. code:: python\r\r\n        \r\r\n            ft = pSearch.doSearch()\r\r\n        \r\r\n            # Wait for the result to be available\r\r\n            search_results = ft.result()\r\r\n        \r\r\n        Finally, we can recover (if enabled) all the history of the search we did just:\r\r\n        \r\r\n        .. code:: python\r\r\n        \r\r\n            history = pSearch.getHistory()\r\r\n        \r\r\n            # Or printing history\r\r\n            pSearch.pprintHistory()\r\r\n        \r\r\n        *If you want to read more, have a look at the *`wiki <https://github.com/Javinator9889/pyGle/wiki>`__.\r\r\n        \r\r\n        *Torify*\r\r\n        ~~~~~~~~\r\r\n        \r\r\n        Another functionality included with this lib is the possibility to work under **Tor**.\r\r\n        \r\r\n        If you do not know what is it, **Tor** is the *easiest way* to browse the web anonymously by using proxies that hide yourself. You can read more `right here <https://lifehacker.com/what-is-tor-and-should-i-use-it-1527891029>`__.\r\r\n        \r\r\n        If you want *to use this functionality*, you need to have Tor installed on your system. Here you have the instructions for your systems:\r\r\n        \r\r\n        -  `Windows <https://www.quora.com/How-do-I-run-Tor-headless-on-Windows-10>`__\r\r\n        -  `Linux <https://www.torproject.org/docs/debian.html.en>`__\r\r\n        -  `MacOS <https://www.torproject.org/docs/tor-doc-osx.html.en>`__\r\r\n        -  `Android <https://www.torproject.org/docs/android.html.en>`__\r\r\n        \r\r\n        Finally, once Tor is configured on your system, for using it is as simple as (*following the latest example*):\r\r\n        \r\r\n        .. code:: python\r\r\n        \r\r\n            ft = pSearch.doSearch(torify=True)\r\r\n        \r\r\n        5. Contribute\r\r\n        -------------\r\r\n        \r\r\n        If you really appreciate my work, you can *contribute to this project* perfectly, for example:\r\r\n        \r\r\n        1. If you find **bugs** \ud83d\udd0e\ud83d\udc1e, you can comment at `issues <https://github.com/Javinator9889/pyGle/issues>`__ what happened to you and *I will try to find a solution*.\r\r\n        2. You can **fork** this repository and *include all what you think* `pyGle <https://github.com/Javinator9889/pyGle>`__ should have. Create a pull request and, if I like your changes, I will include it on the official repo and you will automatically become a developer and maintainer \ud83d\ude04\r\r\n        3. Also, if you are a great fan, you can donate me what you want by clicking here \ud83e\udd11\r\r\n        \r\r\n        |Donate me|\r\r\n        \r\r\n        6. License\r\r\n        ----------\r\r\n        \r\r\n        ::\r\r\n        \r\r\n            Copyright (C) 2018 - Javinator9889 - pyGle\r\r\n        \r\r\n            This program is free software: you can redistribute it and/or modify\r\r\n            it under the terms of the GNU General Public License as published by\r\r\n            the Free Software Foundation, either version 3 of the License, or\r\r\n            (at your option) any later version.\r\r\n        \r\r\n            This program is distributed in the hope that it will be useful,\r\r\n            but WITHOUT ANY WARRANTY; without even the implied warranty of\r\r\n            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\r\n            GNU General Public License for more details.\r\r\n        \r\r\n            You should have received a copy of the GNU General Public License\r\r\n            along with this program.  If not, see <https://www.gnu.org/licenses/>.`\r\r\n        \r\r\n        .. |PyPi| image:: https://img.shields.io/badge/v1.24%20-PyPi-green.svg\r\r\n           :target: https://pypi.org/project/g-pyGle/\r\r\n        .. |ZIP| image:: https://img.shields.io/badge/Package%20-Zip-blue.svg\r\r\n           :target: https://github.com/Javinator9889/pyGle/archive/master.zip\r\r\n        .. |GIT| image:: https://img.shields.io/badge/Package%20-Git-red.svg\r\r\n           :target: https://github.com/Javinator9889/pyGle.git\r\r\n        .. |Donate me| image:: http://pluspng.com/img-png/paypal-donate-button-png-paypal-donate-button-png-file-png-image-200.png\r\r\n           :target: https://paypal.me/Javinator9889\r\r\n        \r\nPlatform: UNKNOWN\r\nClassifier: Development Status :: 5 - Production/Stable\r\nClassifier: Programming Language :: Python\r\nClassifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)\r\nClassifier: Natural Language :: English\r\nClassifier: Programming Language :: Python :: 2.6\r\nClassifier: Programming Language :: Python :: 2.7\r\nClassifier: Programming Language :: Python :: 3\r\nClassifier: Programming Language :: Python :: 3.1\r\nClassifier: Programming Language :: Python :: 3.2\r\nClassifier: Programming Language :: Python :: 3.3\r\nClassifier: Programming Language :: Python :: 3.4\r\nClassifier: Programming Language :: Python :: 3.5\r\nClassifier: Programming Language :: Python :: 3.6\r\nClassifier: Programming Language :: Python :: 3.7\r\nDescription-Content-Type: text/x-rst\r\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/Javinator9889/pyGle/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Javinator9889/pyGle", "keywords": "", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "g-pyGle", "package_url": "https://pypi.org/project/g-pyGle/", "platform": "", "project_url": "https://pypi.org/project/g-pyGle/", "project_urls": {"Download": "https://github.com/Javinator9889/pyGle/archive/master.zip", "Homepage": "https://github.com/Javinator9889/pyGle"}, "release_url": "https://pypi.org/project/g-pyGle/1.25/", "requires_dist": null, "requires_python": "", "summary": "A tool for searching the entire web with the Google technology", "version": "1.25", "yanked": false, "html_description": "<div class=\"project-description\">\n            ==================================================\n\n<br>        \n\n<br>        A tool for searching the entire web with the Google technology\n\n<br>        \n\n<br>        |PyPi| |ZIP| |GIT|\n\n<br>        \n\n<br>        Index\n\n<br>        -----\n\n<br>        \n\n<br>        1. `Introduction &lt;https://github.com/Javinator9889/pyGle#1-introduction&gt;`__\n\n<br>        2. `Purpose &lt;https://github.com/Javinator9889/pyGle#2-purpose&gt;`__\n\n<br>        3. `Installation &lt;https://github.com/Javinator9889/pyGle#3-installation&gt;`__\n\n<br>        4. `Instructions &lt;https://github.com/Javinator9889/pyGle#4-instructions&gt;`__\n\n<br>        5. `Contribute &lt;https://github.com/Javinator9889/pyGle#5-contribute&gt;`__\n\n<br>        6. `License &lt;https://github.com/Javinator9889/pyGle#6-license&gt;`__\n\n<br>        \n\n<br>        1. Introduction\n\n<br>        ---------------\n\n<br>        \n\n<br>        `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ aims to be a *very powerful* tool for just **searching the entire web** by using the *Google* technology, without **any limitations** (or almost no one).\n\n<br>        \n\n<br>        Just with a *few lines* of code you will be able to:\n\n<br>        \n\n<br>        -  Perform a *normal search* on Google \ud83d\udd0e\n\n<br>        -  Look at *Google Images* for obtaining all the information you need about a pic \ud83c\udf05\n\n<br>        -  Search *the latest news* and also **a lot of articles** on *Google News* \ud83d\udcf0\n\n<br>        -  Filter and obtain *patents* by using *Google Patents* \ud83d\udcdd\n\n<br>        -  Have a look at hundreds of *different products* at *Google Shops* \ud83d\uded2\n\n<br>        -  Look for *books*, *magazines* and more at *Google Books* \ud83d\udcd8\n\n<br>        -  Videos, videos and more videos at *Google Videos* \ud83c\udfa5\n\n<br>        \n\n<br>        As the speed is a crucial factor, I developed this library in order to be the fastest one for each possible situation.\n\n<br>        \n\n<br>        With every search, a little log is included at the end of the result with the **available stats** for the web scrapping. After some test, I noticed that using `requests &lt;https://github.com/requests/requests&gt;`__ **slow down** the overall speed. For that reason is why you can see the lib performs all *Internet access* by using `urllib &lt;https://docs.python.org/3/library/urllib.html&gt;`__, which has two advantages:\n\n<br>        \n\n<br>        1. Is included with **all Python installations**, so it is a less library to install.\n\n<br>        2. The requests overall time has been reduced at almost **70%**: with *requests*, it took about **3~4 seconds**. With *urllib*, that time now becomes about **~1 second** or less.\n\n<br>        \n\n<br>        With the motivation of the said before, when performing a *research*, the lib **instantly** returns the object that you will use in the future for gathering the results. That object is also known as a **Future** (*you can read more information right here* `\ud83d\udc49 Python Concurrent Futures &lt;https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future&gt;`__), whose functionality is the following:\n\n<br>        \n\n<br>        -  You want to *do a research* at Google.\n\n<br>        -  As explained before, it needs about **~1 second** to complete, so it is a lot of time for you to do *other things* that do not depend on the result of your search.\n\n<br>        -  So when you ask `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ to scrap the web with Google, it returns a **Future** object. At the first moment, it does have **nothing**, but when `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ ends its work, the Future object will contain all the data.\n\n<br>        -  `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ automatically detects the *number of processors* of your system so it can speed-up all the process.\n\n<br>        \n\n<br>        2. Purpose\n\n<br>        ----------\n\n<br>        \n\n<br>        Searching the web with Google *is very easy* from a web browser such as Chrome or Firefox, but sometimes we need that **information** to be available for a program that we are developing or similar. Or just we need to *transform and work with that info*.\n\n<br>        \n\n<br>        For that situation, `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ is the real solution. By using the powerful `Python lists &lt;https://docs.python.org/3/tutorial/datastructures.html#more-on-lists&gt;`__ and also `Python dictionaries &lt;https://docs.python.org/3/tutorial/datastructures.html#dictionaries&gt;`__, `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ will give you all what you need. Let me exemplify you with a simple search of the term *\"test\"*:\n\n<br>        \n\n<br>        1. Here is the simplicity of `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ in code for achieving that:\n\n<br>        \n\n<br>           .. code:: python\n\n<br>        \n\n<br>               from pprint import pprint  # Not necessary but for a beautiful print\n\n<br>               from pyGle import PyGle\n\n<br>        \n\n<br>               pSearch = PyGle(query=\"test\")\n\n<br>               ft = pSearch.doSearch()  # A Future object\n\n<br>               pprint(ft.result())\n\n<br>        \n\n<br>        2. And now, when the Future is done, here is the result:\n\n<br>        \n\n<br>           .. code:: python\n\n<br>        \n\n<br>               [   {   'cached_version': 'http://webcache.googleusercontent.com/search?q=cache:jNPwduM3zRgJ:www.eljueves.es/news/test-que-meme-eres_2448+&amp;cd=1&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': '30 may. 2018',\n\n<br>                   'description': '30 may. 2018 -Olv\u00eddalas Lo mejor para definir tu '\n\n<br>                                  'personalidad son los memes. Descubre cu\u00e1l es el tuyo '\n\n<br>                                  'con este rigurosotestavalado por la Universidad...',\n\n<br>                   'link': 'http://www.eljueves.es/news/test-que-meme-eres_2448',\n\n<br>                   'title': 'TEST: \u00bfQu\u00e9 meme eres? - El Jueves'},\n\n<br>               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:nbx31tovq8UJ:https://www.enfemenino.com/psico/tests-ssc17.html+&amp;cd=2&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'Tests-Testde personalidad de inteligencia de '\n\n<br>                                  'belleza... todo tipo detestque te pueden ayudar a '\n\n<br>                                  'tomar decisiones o simplemente aclararte las ideas.',\n\n<br>                   'link': 'https://www.enfemenino.com/psico/tests-ssc17.html',\n\n<br>                   'title': 'Tests - Tests de personalidad, inteligencia, moda, belleza, '\n\n<br>                            '| enfemenino'},\n\n<br>               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:PQFS2G6QNgAJ:https://www.muyinteresante.es/tests+&amp;cd=3&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'TestsMuyInteresante.es. Mide tu ingenio y lo que sabes '\n\n<br>                                  'de forma divertida y amena.',\n\n<br>                   'link': 'https://www.muyinteresante.es/tests',\n\n<br>                   'title': 'Tests inteligentes y curiosos en Muy Interesante Espa\u00f1a'},\n\n<br>               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:iQ_U_r5BkKkJ:https://www.testdevelocidad.es/+&amp;cd=4&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'Testde velocidad para medir la calidad de tu acceso a '\n\n<br>                                  'Internet con ADSL o fibra \u00f3ptica . Comprueba la '\n\n<br>                                  'velocidad real de tu conexi\u00f3n.',\n\n<br>                   'link': 'https://www.testdevelocidad.es/',\n\n<br>                   'title': 'Test de velocidad : Mide tu ADSL o fibra con el SpeedTest de '\n\n<br>                            'www ...'},\n\n<br>               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:m6vzOP8qmEsJ:https://www.arealme.com/mental/es/+&amp;cd=5&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'Testde edad mental. cual es tu edad mental. Estetestes '\n\n<br>                                  'de origen japon\u00e9s y se llama . Por favor s\u00e9 sincero al '\n\n<br>                                  'responder a las preguntas.',\n\n<br>                   'link': 'https://www.arealme.com/mental/es/',\n\n<br>                   'title': 'Test de edad mental (cual es tu edad mental) - A Real Me'},\n\n<br>               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:gU4XOSuOIR0J:https://www.clara.es/temas/test+&amp;cd=6&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'Haz nuestrostesty descubre cu\u00e1l es la mejor dieta para '\n\n<br>                                  'adelgazar los mejores tratamientos est\u00e9ticos y de '\n\n<br>                                  'belleza los alimentos que mejor te sientan.',\n\n<br>                   'link': 'https://www.clara.es/temas/test',\n\n<br>                   'title': 'Test dieta, belleza, salud, alimentaci\u00f3n, nutrici\u00f3n, '\n\n<br>                            'psicolog\u00eda, moda\u2026'},\n\n<br>               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:2C5cLoSzSKoJ:https://testdivertidos.es/+&amp;cd=7&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'TestDivertidos.es - Lostestsgratis m\u00e1s divertidos de '\n\n<br>                                  'internet:testde inteligencia personalidad psicol\u00f3gicos '\n\n<br>                                  'de amor para ni\u00f1os...',\n\n<br>                   'link': 'https://testdivertidos.es/',\n\n<br>                   'title': 'Test Divertidos | Los tests m\u00e1s divertidos de la web'},\n\n<br>               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:hBp-w20VAWEJ:https://www.psicoactiva.com/tests/personalidad/test-personalidad-5factores.htm+&amp;cd=8&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'Testgratis que eval\u00faa la Personalidad a partir de sus '\n\n<br>                                  'cinco Dimensiones llamadas Los Cinco Grandes.',\n\n<br>                   'link': 'https://www.psicoactiva.com/tests/personalidad/test-personalidad-5factores.htm',\n\n<br>                   'title': 'PsicoActiva.com: Test de personalidad de cinco factores.'},\n\n<br>               {   'cached_version': 'https://webcache.googleusercontent.com/search?q=cache:3_8PsvuNwh0J:https://www.nationalgeographic.com.es/temas/tests-ng+&amp;cd=9&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'Pon a prueba tus conocimientos con losTESTde National '\n\n<br>                                  'Geographic sobre historia naturaleza pa\u00edses ciencia '\n\n<br>                                  'personajes hist\u00f3ricos ciudades...',\n\n<br>                   'link': 'https://www.nationalgeographic.com.es/temas/tests-ng',\n\n<br>                   'title': 'Los mejores TEST de National Geographic'},\n\n<br>               {   'cached_version': 'http://webcache.googleusercontent.com/search?q=cache:-7iUEjuLNkMJ:www.movistar.es/particulares/test-de-velocidad/+&amp;cd=10&amp;hl=es&amp;ct=clnk&amp;gl=es',\n\n<br>                   'date': 'unavailable',\n\n<br>                   'description': 'Comprueba la velocidad de tu conexi\u00f3n a Internet con '\n\n<br>                                  'eltestde velocidad que usan los instaladores de '\n\n<br>                                  'Movistar OFERTA FIBRA -63 DESCUENTO 900 104...',\n\n<br>                   'link': 'http://www.movistar.es/particulares/test-de-velocidad/',\n\n<br>                   'title': 'Test Velocidad ADSL y Fibra - Mide la velocidad de tu '\n\n<br>                            'Internet - Movistar'},\n\n<br>               {   'google_stats': 'Aproximadamente 3.090.000.000 resultados(0,34 '\n\n<br>                                   'segundos)',\n\n<br>                   'how_many_results': 10,\n\n<br>                   'related_search': [   'testcuriosos',\n\n<br>                                         'testdivertidos',\n\n<br>                                         'testpara adolescentes',\n\n<br>                                         'tests de personalidad',\n\n<br>                                         'tests divertidos para pasar el rato',\n\n<br>                                         'testjuegos',\n\n<br>                                         'testde belleza',\n\n<br>                                         'tests de amor'],\n\n<br>                   'stats': {   'google_search_time': '0.8270025253295898 s',\n\n<br>                                'overall_time': '0.8999979496002197 s',\n\n<br>                                'parsing_page_time': '0.040498971939086914 s'},\n\n<br>                   'url': 'https://www.google.com/search?q=test'}]\n\n<br>        \n\n<br>           At this case, I am in Spain, so the results language are based on your **current location** (if you *do not specify one*).\n\n<br>        \n\n<br>        If another page must be searched, all the methods start with: ``with``. You can find more instructions at the `wiki &lt;https://github.com/Javinator9889/pyGle/wiki&gt;`__.\n\n<br>        \n\n<br>        3. Installation\n\n<br>        ---------------\n\n<br>        \n\n<br>        As usual, you have the `pip &lt;https://pypi.org/project/pip/&gt;`__ mode or the `easy install &lt;https://setuptools.readthedocs.io/en/latest/easy_install.html&gt;`__ methods:\n\n<br>        \n\n<br>        *The commands for Windows are the same but without* ``sudo``\n\n<br>        \n\n<br>        *Installing via PyPi (pip)*\n\n<br>        ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n<br>        \n\n<br>        -  In some Linux systems, *pip* is not directly available in command line, so we have two options:\n\n<br>        \n\n<br>           *Installing pip for Python 3* (assuming that you **already have Python 3 installed**):\n\n<br>        \n\n<br>           .. code:: bash\n\n<br>        \n\n<br>               ## DEBIAN SYSTEMS ##\n\n<br>               sudo apt update &amp;&amp; sudo apt upgrade\n\n<br>               sudo apt-get install python3-pip\n\n<br>        \n\n<br>           .. code:: bash\n\n<br>        \n\n<br>               ## CENTOS ##\n\n<br>               sudo yum install python34-setuptools\n\n<br>               sudo easy_install pip\n\n<br>        \n\n<br>        -  Installing `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__:\n\n<br>        \n\n<br>           Once you did what said before, now you are able to install `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__\n\n<br>        \n\n<br>           .. code:: bash\n\n<br>        \n\n<br>               #### USING PIP ####\n\n<br>               sudo pip3 install g-pyGle\n\n<br>        \n\n<br>               ## If pip3 is not available ##\n\n<br>               sudo pip install g-pyGle\n\n<br>        \n\n<br>               ## Via Python 3 ##\n\n<br>               sudo python3 -m pip install g-pyGle\n\n<br>        \n\n<br>               ## Without admin permissions ##\n\n<br>               pip3 install -U g-pyGle\n\n<br>               OR\n\n<br>               python3 -m pip install -U g-pyGle\n\n<br>        \n\n<br>        *Installing via easy install*\n\n<br>        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n<br>        \n\n<br>        -  Basically, we will install *Python 3* on our systems, and then we will be able to install `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__:\n\n<br>        \n\n<br>           -  `Windows &lt;https://realpython.com/installing-python/#windows&gt;`__\n\n<br>           -  `Linux (all systems) &lt;https://realpython.com/installing-python/#linux&gt;`__\n\n<br>           -  `MacOS &lt;https://realpython.com/installing-python/#macos-mac-os-x&gt;`__\n\n<br>           -  `iOS &lt;https://realpython.com/installing-python/#ios-iphone-ipad&gt;`__\n\n<br>           -  `Android &lt;https://realpython.com/installing-python/#android-phones-tablets&gt;`__\n\n<br>        \n\n<br>        -  Now, we can install `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ as follows:\n\n<br>        \n\n<br>           .. code:: bash\n\n<br>        \n\n<br>               #### USING EASY INSTALL ####\n\n<br>               git clone https://github.com/Javinator9889/pyGle.git\n\n<br>               cd pyGle\n\n<br>               sudo python3 setup.py install\n\n<br>        \n\n<br>        4. Instructions\n\n<br>        ---------------\n\n<br>        \n\n<br>        Every time we want to use `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__, we will do the following:\n\n<br>        \n\n<br>        .. code:: python\n\n<br>        \n\n<br>            from pyGle import PyGle\n\n<br>        \n\n<br>        `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ allows us to **enable a history** and **keep the session cookies** (for a faster browsing):\n\n<br>        \n\n<br>        .. code:: python\n\n<br>        \n\n<br>            pSearch = PyGle(enable_history=True, use_session_cookies=True)\n\n<br>        \n\n<br>        As normal, `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ will only do a normal Google search if we add a query:\n\n<br>        \n\n<br>        .. code:: python\n\n<br>        \n\n<br>            pSearch.withQuery(\"what we want to search\")\n\n<br>        \n\n<br>        Also, with every method, you can continue *defining your needs* without **creating thousands** of lines of code:\n\n<br>        \n\n<br>        .. code:: python\n\n<br>        \n\n<br>            pSearch.withQuery(\"what we want to search\").withContainingTwoTerms(\"term 1\", \"term 2\").withTextInTitle(\"text in title\").withSafeModeDeactivated().withSearchStartPositionAt(25)\n\n<br>        \n\n<br>        Once we are done, searching is as simple as:\n\n<br>        \n\n<br>        .. code:: python\n\n<br>        \n\n<br>            ft = pSearch.doSearch()\n\n<br>        \n\n<br>            # Wait for the result to be available\n\n<br>            search_results = ft.result()\n\n<br>        \n\n<br>        Finally, we can recover (if enabled) all the history of the search we did just:\n\n<br>        \n\n<br>        .. code:: python\n\n<br>        \n\n<br>            history = pSearch.getHistory()\n\n<br>        \n\n<br>            # Or printing history\n\n<br>            pSearch.pprintHistory()\n\n<br>        \n\n<br>        *If you want to read more, have a look at the *`wiki &lt;https://github.com/Javinator9889/pyGle/wiki&gt;`__.\n\n<br>        \n\n<br>        *Torify*\n\n<br>        ~~~~~~~~\n\n<br>        \n\n<br>        Another functionality included with this lib is the possibility to work under **Tor**.\n\n<br>        \n\n<br>        If you do not know what is it, **Tor** is the *easiest way* to browse the web anonymously by using proxies that hide yourself. You can read more `right here &lt;https://lifehacker.com/what-is-tor-and-should-i-use-it-1527891029&gt;`__.\n\n<br>        \n\n<br>        If you want *to use this functionality*, you need to have Tor installed on your system. Here you have the instructions for your systems:\n\n<br>        \n\n<br>        -  `Windows &lt;https://www.quora.com/How-do-I-run-Tor-headless-on-Windows-10&gt;`__\n\n<br>        -  `Linux &lt;https://www.torproject.org/docs/debian.html.en&gt;`__\n\n<br>        -  `MacOS &lt;https://www.torproject.org/docs/tor-doc-osx.html.en&gt;`__\n\n<br>        -  `Android &lt;https://www.torproject.org/docs/android.html.en&gt;`__\n\n<br>        \n\n<br>        Finally, once Tor is configured on your system, for using it is as simple as (*following the latest example*):\n\n<br>        \n\n<br>        .. code:: python\n\n<br>        \n\n<br>            ft = pSearch.doSearch(torify=True)\n\n<br>        \n\n<br>        5. Contribute\n\n<br>        -------------\n\n<br>        \n\n<br>        If you really appreciate my work, you can *contribute to this project* perfectly, for example:\n\n<br>        \n\n<br>        1. If you find **bugs** \ud83d\udd0e\ud83d\udc1e, you can comment at `issues &lt;https://github.com/Javinator9889/pyGle/issues&gt;`__ what happened to you and *I will try to find a solution*.\n\n<br>        2. You can **fork** this repository and *include all what you think* `pyGle &lt;https://github.com/Javinator9889/pyGle&gt;`__ should have. Create a pull request and, if I like your changes, I will include it on the official repo and you will automatically become a developer and maintainer \ud83d\ude04\n\n<br>        3. Also, if you are a great fan, you can donate me what you want by clicking here \ud83e\udd11\n\n<br>        \n\n<br>        |Donate me|\n\n<br>        \n\n<br>        6. License\n\n<br>        ----------\n\n<br>        \n\n<br>        ::\n\n<br>        \n\n<br>            Copyright (C) 2018 - Javinator9889 - pyGle\n\n<br>        \n\n<br>            This program is free software: you can redistribute it and/or modify\n\n<br>            it under the terms of the GNU General Public License as published by\n\n<br>            the Free Software Foundation, either version 3 of the License, or\n\n<br>            (at your option) any later version.\n\n<br>        \n\n<br>            This program is distributed in the hope that it will be useful,\n\n<br>            but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n<br>            MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n<br>            GNU General Public License for more details.\n\n<br>        \n\n<br>            You should have received a copy of the GNU General Public License\n\n<br>            along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.`\n\n<br>        \n\n<br>        .. |PyPi| image:: https://img.shields.io/badge/v1.24%20-PyPi-green.svg\n\n<br>           :target: https://pypi.org/project/g-pyGle/\n\n<br>        .. |ZIP| image:: https://img.shields.io/badge/Package%20-Zip-blue.svg\n\n<br>           :target: https://github.com/Javinator9889/pyGle/archive/master.zip\n\n<br>        .. |GIT| image:: https://img.shields.io/badge/Package%20-Git-red.svg\n\n<br>           :target: https://github.com/Javinator9889/pyGle.git\n\n<br>        .. |Donate me| image:: http://pluspng.com/img-png/paypal-donate-button-png-paypal-donate-button-png-file-png-image-200.png\n\n<br>           :target: https://paypal.me/Javinator9889\n\n<br>        \n<br>Platform: UNKNOWN\n<br>Classifier: Development Status :: 5 - Production/Stable\n<br>Classifier: Programming Language :: Python\n<br>Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)\n<br>Classifier: Natural Language :: English\n<br>Classifier: Programming Language :: Python :: 2.6\n<br>Classifier: Programming Language :: Python :: 2.7\n<br>Classifier: Programming Language :: Python :: 3\n<br>Classifier: Programming Language :: Python :: 3.1\n<br>Classifier: Programming Language :: Python :: 3.2\n<br>Classifier: Programming Language :: Python :: 3.3\n<br>Classifier: Programming Language :: Python :: 3.4\n<br>Classifier: Programming Language :: Python :: 3.5\n<br>Classifier: Programming Language :: Python :: 3.6\n<br>Classifier: Programming Language :: Python :: 3.7\n<br>Description-Content-Type: text/x-rst\n<br>\n          </div>"}, "last_serial": 4227202, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "5dfecb55bd20ad75f82c507a0c6c5c93", "sha256": "52f224fafa329315c315b96d351776ee7dfef6762c9c78612f88e5ae6a27a178"}, "downloads": -1, "filename": "g-pyGle-1.0.tar.gz", "has_sig": false, "md5_digest": "5dfecb55bd20ad75f82c507a0c6c5c93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34725, "upload_time": "2018-08-10T14:58:05", "upload_time_iso_8601": "2018-08-10T14:58:05.681359Z", "url": "https://files.pythonhosted.org/packages/b1/d7/049deb1a2a550226798bc1e3fe29605f5cfa7259acb327e6d3c253b4cf10/g-pyGle-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "37ac511ddcf057e622978edef90b03e8", "sha256": "8169d51bc0f1b02023c9919c4f013a523afad048ceceed80c155cc49d08d1c1c"}, "downloads": -1, "filename": "g-pyGle-1.1.tar.gz", "has_sig": false, "md5_digest": "37ac511ddcf057e622978edef90b03e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34808, "upload_time": "2018-08-10T15:17:00", "upload_time_iso_8601": "2018-08-10T15:17:00.487017Z", "url": "https://files.pythonhosted.org/packages/48/32/e3200a2a2b689dc24f12fb5341061a9247e18284c1d880fc72eaefeeb6f6/g-pyGle-1.1.tar.gz", "yanked": false}], "1.11": [{"comment_text": "", "digests": {"md5": "57cc11a94c845dc9b043d6a7d8a230eb", "sha256": "6e23f76672eaf3de27c4b088b57578fd9edd37b01ae0f31be3bb0314b420d296"}, "downloads": -1, "filename": "g-pyGle-1.11.tar.gz", "has_sig": false, "md5_digest": "57cc11a94c845dc9b043d6a7d8a230eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36164, "upload_time": "2018-08-11T10:41:55", "upload_time_iso_8601": "2018-08-11T10:41:55.972030Z", "url": "https://files.pythonhosted.org/packages/b4/25/f2471129b815b4aefbd894b85288e397d3c69f67e5d6555102f242bd4301/g-pyGle-1.11.tar.gz", "yanked": false}], "1.12": [{"comment_text": "", "digests": {"md5": "0e242d76eeaebe8b05599e1a06e65865", "sha256": "a9c870d549355b5c1549bcaf11227c833bff4bee9476784c8e0de3a99d6bf413"}, "downloads": -1, "filename": "g-pyGle-1.12.tar.gz", "has_sig": false, "md5_digest": "0e242d76eeaebe8b05599e1a06e65865", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35923, "upload_time": "2018-08-14T17:20:48", "upload_time_iso_8601": "2018-08-14T17:20:48.727295Z", "url": "https://files.pythonhosted.org/packages/81/be/8d9397ac5df9abb65f425f9cbdbae41034ec635f1608d8b7d850ddb50d32/g-pyGle-1.12.tar.gz", "yanked": false}], "1.24": [{"comment_text": "", "digests": {"md5": "8f9e110db033163925e4edc38a23b21b", "sha256": "f032ab11408298f866e52b250649b3649cd03fa37c187dccc115acf29135e301"}, "downloads": -1, "filename": "g-pyGle-1.24.tar.gz", "has_sig": false, "md5_digest": "8f9e110db033163925e4edc38a23b21b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36580, "upload_time": "2018-08-31T17:31:06", "upload_time_iso_8601": "2018-08-31T17:31:06.022457Z", "url": "https://files.pythonhosted.org/packages/b6/4a/f6188bfe656a2201d9e3493f68b36f191e9ddca8445c7489e43a567f547c/g-pyGle-1.24.tar.gz", "yanked": false}], "1.25": [{"comment_text": "", "digests": {"md5": "6214b470d89c2c6f8dba8f098dfa852b", "sha256": "f2cbfe6bd829098e55ce58a101b107791315212fd8e8a2d55ba53b3f276fa696"}, "downloads": -1, "filename": "g-pyGle-1.25.tar.gz", "has_sig": false, "md5_digest": "6214b470d89c2c6f8dba8f098dfa852b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36593, "upload_time": "2018-08-31T17:59:11", "upload_time_iso_8601": "2018-08-31T17:59:11.274219Z", "url": "https://files.pythonhosted.org/packages/59/5a/349778ef51e846a1f08c00f87038efc95dbf7a96809d5e483afbd678d59e/g-pyGle-1.25.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6214b470d89c2c6f8dba8f098dfa852b", "sha256": "f2cbfe6bd829098e55ce58a101b107791315212fd8e8a2d55ba53b3f276fa696"}, "downloads": -1, "filename": "g-pyGle-1.25.tar.gz", "has_sig": false, "md5_digest": "6214b470d89c2c6f8dba8f098dfa852b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36593, "upload_time": "2018-08-31T17:59:11", "upload_time_iso_8601": "2018-08-31T17:59:11.274219Z", "url": "https://files.pythonhosted.org/packages/59/5a/349778ef51e846a1f08c00f87038efc95dbf7a96809d5e483afbd678d59e/g-pyGle-1.25.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:04 2020"}