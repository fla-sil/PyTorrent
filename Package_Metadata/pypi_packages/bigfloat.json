{"info": {"author": "Mark Dickinson", "author_email": "dickinsm@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering :: Mathematics"], "description": "The ``bigfloat`` package is a Python package providing arbitrary-precision\ncorrectly-rounded binary floating-point arithmetic.  It is implemented as a\n`Cython <http://cython.org>`_ wrapper around the `GNU MPFR library\n<http://www.mpfr.org>`_.  A couple of lines of Python code should give the\nidea::\n\n    >>> from bigfloat import *\n    >>> with precision(200) + RoundTowardZero:\n    ...     print(sqrt(2))\n    ...\n    1.4142135623730950488016887242096980785696718753769480731766796\n    >>> with quadruple_precision:\n    ...     const_pi()\n    ...\n    BigFloat.exact('3.14159265358979323846264338327950280', precision=113)\n\nFeatures\n--------\n\n- Supports Python 2 (version 2.7) and Python 3 (version 3.5 or later).\n\n- Exactly reproducible correctly-rounded results across platforms;\n  precisely-defined semantics compatible with the IEEE 754-2008 standard.\n\n- Support for mixed-type operations with Python integers and floats.\n\n- Support for emulating IEEE 754 arithmetic in any of the IEEE binary\n  interchange formats described in IEEE 754-2008.  Infinities, NaNs,\n  signed zeros, and subnormals are all supported.\n\n- Easy control of rounding modes and precisions via ``Context`` objects\n  and Python's ``with`` statement.\n\nDocumentation\n-------------\n\nFull `package documentation <http://bigfloat.readthedocs.org>`_ is hosted at\nRead the Docs.  Read on for a quick tour.\n\nA quick tour\n------------\n\nThe ``bigfloat`` package is small and simple to use.  Here's a quick\ntour of some of its features.\n\nFor demonstration purposes, start with::\n\n    >>> from bigfloat import *\n\nNote that this import shadows some builtin Python functions, namely ``abs``,\n``max``, ``min``, ``pow``, ``round`` and (on Python 2 only) ``cmp``.  In normal\nusage you'll probably only want to import the classes and functions that you\nactually need.\n\nThe main class is the ``BigFloat`` class::\n\n    >>> BigFloat(1)  # can be constructed from an integer, float or string\n    BigFloat.exact('1.0000000000000000', precision=53)\n    >>> BigFloat('3.14159') ** 2 / 6.0  # can combine with ints and floats\n    BigFloat.exact('1.6449312880166664', precision=53)\n    >>> BigFloat('0.1', precision(200)) # high-precision value from string\n    BigFloat.exact('0.1000000000000000000000000000000000000000000000000000\n    0000000002', precision=200)\n\nNewly-created ``BigFloat`` instances refer to the current *context* to\ndetermine what precision and rounding modes to use.  This current\ncontext is represented by a ``Context`` instance, and can be retrieved\nby calling ``getcontext``::\n\n    >>> getcontext()\n    Context(precision=53, emax=1073741823, emin=-1073741823,\n            subnormalize=False, rounding=ROUND_TIES_TO_EVEN)\n\nThe ``precision(200)`` argument passed to the ``BigFloat`` constructor\nabove is also an example of a ``Context``::\n\n    >>> precision(200)\n    Context(precision=200)\n\nThe context used for a calculation can be set using the ``setcontext``\nfunction, but a better way to make a temporary change to the context\nis to use Python's ``with`` statement::\n\n    >>> with precision(1000):\n    ...     print sqrt(2)\n    ...\n    1.41421356237309504880168872420969807856967187537694807317667973\n    7990732478462107038850387534327641572735013846230912297024924836\n    0558507372126441214970999358314132226659275055927557999505011527\n    8206057147010955997160597027453459686201472851741864088919860955\n    232923048430871432145083976260362799525140798964\n\nHere, ``sqrt`` is one of a number of mathematical functions that the\n``bigfloat`` package exports.  As you can see, these functions operate on\nintegers and floats as well as ``BigFloat`` instances, but always\nreturn a ``BigFloat`` instance.\n\nRounding modes can be controlled similarly.  Here are upper and lower\nbounds for \u03c0, accurate to 53 significant bits::\n\n    >>> with RoundTowardPositive:\n    ...     const_pi()\n    ...\n    BigFloat.exact('3.1415926535897936', precision=53)\n    >>> with RoundTowardNegative:\n    ...     const_pi()\n    ...\n    BigFloat.exact('3.1415926535897931', precision=53)\n\nAnd as you'd expect, ``with`` statements like those above can be\nnested.  ``Context`` objects can also be combined using addition::\n\n    >>> with RoundTowardPositive + precision(24):\n    ...     BigFloat(1) / 3\n    ...\n    BigFloat.exact('0.333333343', precision=24)\n\nVarious ``Context`` objects corresponding to IEEE 754 interchange\nformats are predefined::\n\n    >>> quadruple_precision\n    Context(precision=113, emax=16384, emin=-16493, subnormalize=True)\n    >>> half_precision\n    Context(precision=11, emax=16, emin=-23, subnormalize=True)\n    >>> with half_precision:\n            log(2)\n    ...\n    BigFloat.exact('0.69336', precision=11)\n\nInstallation\n------------\n\nThe ``bigfloat`` package is `available on the Python package index\n<https://pypi.python.org/pypi/bigfloat>`_, and can be installed in the usual\nway using ``easy_install`` or ``pip``.  Alternatively, the development sources\nmay be downloaded from the project's `homepage\n<https:/github.com/mdickinson/bigfloat>`_ on GitHub.\n\nFor more comprehensive installation instructions, please see the `full\ndocumentation <http://bigfloat.readthedocs.org/en/latest/#installation>`_.\n\nFeedback\n--------\n\nFeedback is welcome!  Please use the `GitHub issue tracker\n<https://github.com/mdickinson/bigfloat/issues>`_ to report issues.\nAlternatively, you can contact Mark Dickinson directly at dickinsm@gmail.com\nwith suggestions, complaints, bug reports, etc.\n\nLicense\n-------\n\nThe bigfloat package is copyright (C) 2009--2019 Mark Dickinson\n\nThe bigfloat package is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or (at your\noption) any later version.\n\nThe bigfloat package is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\nfor more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with the bigfloat package.  If not, see <http://www.gnu.org/licenses/>.\n\nLinks\n-----\n- `Documentation at Read the Docs <http://bigfloat.readthedocs.org>`_\n- `Python package index <https://pypi.python.org/pypi/bigfloat>`_\n- `Project homepage at GitHub <https://github.com/mdickinson/bigfloat>`_\n- `Issue tracker <https://github.com/mdickinson/bigfloat/issues>`_", "description_content_type": "text/x-rst", "docs_url": "https://pythonhosted.org/bigfloat/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mdickinson/bigfloat", "keywords": "", "license": "GNU Library or Lesser General Public License (LGPL)", "maintainer": "", "maintainer_email": "", "name": "bigfloat", "package_url": "https://pypi.org/project/bigfloat/", "platform": "Linux", "project_url": "https://pypi.org/project/bigfloat/", "project_urls": {"Homepage": "http://github.com/mdickinson/bigfloat"}, "release_url": "https://pypi.org/project/bigfloat/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Arbitrary-precision correctly-rounded floating-point arithmetic, via MPFR.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <tt>bigfloat</tt> package is a Python package providing arbitrary-precision\ncorrectly-rounded binary floating-point arithmetic.  It is implemented as a\n<a href=\"http://cython.org\" rel=\"nofollow\">Cython</a> wrapper around the <a href=\"http://www.mpfr.org\" rel=\"nofollow\">GNU MPFR library</a>.  A couple of lines of Python code should give the\nidea:</p>\n<pre>&gt;&gt;&gt; from bigfloat import *\n&gt;&gt;&gt; with precision(200) + RoundTowardZero:\n...     print(sqrt(2))\n...\n1.4142135623730950488016887242096980785696718753769480731766796\n&gt;&gt;&gt; with quadruple_precision:\n...     const_pi()\n...\nBigFloat.exact('3.14159265358979323846264338327950280', precision=113)\n</pre>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Supports Python 2 (version 2.7) and Python 3 (version 3.5 or later).</li>\n<li>Exactly reproducible correctly-rounded results across platforms;\nprecisely-defined semantics compatible with the IEEE 754-2008 standard.</li>\n<li>Support for mixed-type operations with Python integers and floats.</li>\n<li>Support for emulating IEEE 754 arithmetic in any of the IEEE binary\ninterchange formats described in IEEE 754-2008.  Infinities, NaNs,\nsigned zeros, and subnormals are all supported.</li>\n<li>Easy control of rounding modes and precisions via <tt>Context</tt> objects\nand Python\u2019s <tt>with</tt> statement.</li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Full <a href=\"http://bigfloat.readthedocs.org\" rel=\"nofollow\">package documentation</a> is hosted at\nRead the Docs.  Read on for a quick tour.</p>\n</div>\n<div id=\"a-quick-tour\">\n<h2>A quick tour</h2>\n<p>The <tt>bigfloat</tt> package is small and simple to use.  Here\u2019s a quick\ntour of some of its features.</p>\n<p>For demonstration purposes, start with:</p>\n<pre>&gt;&gt;&gt; from bigfloat import *\n</pre>\n<p>Note that this import shadows some builtin Python functions, namely <tt>abs</tt>,\n<tt>max</tt>, <tt>min</tt>, <tt>pow</tt>, <tt>round</tt> and (on Python 2 only) <tt>cmp</tt>.  In normal\nusage you\u2019ll probably only want to import the classes and functions that you\nactually need.</p>\n<p>The main class is the <tt>BigFloat</tt> class:</p>\n<pre>&gt;&gt;&gt; BigFloat(1)  # can be constructed from an integer, float or string\nBigFloat.exact('1.0000000000000000', precision=53)\n&gt;&gt;&gt; BigFloat('3.14159') ** 2 / 6.0  # can combine with ints and floats\nBigFloat.exact('1.6449312880166664', precision=53)\n&gt;&gt;&gt; BigFloat('0.1', precision(200)) # high-precision value from string\nBigFloat.exact('0.1000000000000000000000000000000000000000000000000000\n0000000002', precision=200)\n</pre>\n<p>Newly-created <tt>BigFloat</tt> instances refer to the current <em>context</em> to\ndetermine what precision and rounding modes to use.  This current\ncontext is represented by a <tt>Context</tt> instance, and can be retrieved\nby calling <tt>getcontext</tt>:</p>\n<pre>&gt;&gt;&gt; getcontext()\nContext(precision=53, emax=1073741823, emin=-1073741823,\n        subnormalize=False, rounding=ROUND_TIES_TO_EVEN)\n</pre>\n<p>The <tt>precision(200)</tt> argument passed to the <tt>BigFloat</tt> constructor\nabove is also an example of a <tt>Context</tt>:</p>\n<pre>&gt;&gt;&gt; precision(200)\nContext(precision=200)\n</pre>\n<p>The context used for a calculation can be set using the <tt>setcontext</tt>\nfunction, but a better way to make a temporary change to the context\nis to use Python\u2019s <tt>with</tt> statement:</p>\n<pre>&gt;&gt;&gt; with precision(1000):\n...     print sqrt(2)\n...\n1.41421356237309504880168872420969807856967187537694807317667973\n7990732478462107038850387534327641572735013846230912297024924836\n0558507372126441214970999358314132226659275055927557999505011527\n8206057147010955997160597027453459686201472851741864088919860955\n232923048430871432145083976260362799525140798964\n</pre>\n<p>Here, <tt>sqrt</tt> is one of a number of mathematical functions that the\n<tt>bigfloat</tt> package exports.  As you can see, these functions operate on\nintegers and floats as well as <tt>BigFloat</tt> instances, but always\nreturn a <tt>BigFloat</tt> instance.</p>\n<p>Rounding modes can be controlled similarly.  Here are upper and lower\nbounds for \u03c0, accurate to 53 significant bits:</p>\n<pre>&gt;&gt;&gt; with RoundTowardPositive:\n...     const_pi()\n...\nBigFloat.exact('3.1415926535897936', precision=53)\n&gt;&gt;&gt; with RoundTowardNegative:\n...     const_pi()\n...\nBigFloat.exact('3.1415926535897931', precision=53)\n</pre>\n<p>And as you\u2019d expect, <tt>with</tt> statements like those above can be\nnested.  <tt>Context</tt> objects can also be combined using addition:</p>\n<pre>&gt;&gt;&gt; with RoundTowardPositive + precision(24):\n...     BigFloat(1) / 3\n...\nBigFloat.exact('0.333333343', precision=24)\n</pre>\n<p>Various <tt>Context</tt> objects corresponding to IEEE 754 interchange\nformats are predefined:</p>\n<pre>&gt;&gt;&gt; quadruple_precision\nContext(precision=113, emax=16384, emin=-16493, subnormalize=True)\n&gt;&gt;&gt; half_precision\nContext(precision=11, emax=16, emin=-23, subnormalize=True)\n&gt;&gt;&gt; with half_precision:\n        log(2)\n...\nBigFloat.exact('0.69336', precision=11)\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The <tt>bigfloat</tt> package is <a href=\"https://pypi.python.org/pypi/bigfloat\" rel=\"nofollow\">available on the Python package index</a>, and can be installed in the usual\nway using <tt>easy_install</tt> or <tt>pip</tt>.  Alternatively, the development sources\nmay be downloaded from the project\u2019s <a href=\"https:/github.com/mdickinson/bigfloat\" rel=\"nofollow\">homepage</a> on GitHub.</p>\n<p>For more comprehensive installation instructions, please see the <a href=\"http://bigfloat.readthedocs.org/en/latest/#installation\" rel=\"nofollow\">full\ndocumentation</a>.</p>\n</div>\n<div id=\"feedback\">\n<h2>Feedback</h2>\n<p>Feedback is welcome!  Please use the <a href=\"https://github.com/mdickinson/bigfloat/issues\" rel=\"nofollow\">GitHub issue tracker</a> to report issues.\nAlternatively, you can contact Mark Dickinson directly at <a href=\"mailto:dickinsm%40gmail.com\">dickinsm<span>@</span>gmail<span>.</span>com</a>\nwith suggestions, complaints, bug reports, etc.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The bigfloat package is copyright (C) 2009\u20132019 Mark Dickinson</p>\n<p>The bigfloat package is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or (at your\noption) any later version.</p>\n<p>The bigfloat package is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License\nfor more details.</p>\n<p>You should have received a copy of the GNU Lesser General Public License\nalong with the bigfloat package.  If not, see &lt;<a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a>&gt;.</p>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li><a href=\"http://bigfloat.readthedocs.org\" rel=\"nofollow\">Documentation at Read the Docs</a></li>\n<li><a href=\"https://pypi.python.org/pypi/bigfloat\" rel=\"nofollow\">Python package index</a></li>\n<li><a href=\"https://github.com/mdickinson/bigfloat\" rel=\"nofollow\">Project homepage at GitHub</a></li>\n<li><a href=\"https://github.com/mdickinson/bigfloat/issues\" rel=\"nofollow\">Issue tracker</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6376047, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "fe666415f36d888a8fc4a0b2b80790aa", "sha256": "832bc46e568686682c1276686cc44faee07c174d68a4d55a53032e98c52a9829"}, "downloads": -1, "filename": "bigfloat-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fe666415f36d888a8fc4a0b2b80790aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32306, "upload_time": "2009-10-10T23:44:37", "upload_time_iso_8601": "2009-10-10T23:44:37.234397Z", "url": "https://files.pythonhosted.org/packages/5c/6f/50ff4c05a671bac92f6630b1f87802d30ef8ac9f4eab7f3511fd54b1a5eb/bigfloat-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "eff005ad0fbbb46a5a9549df9889b1f6", "sha256": "024f14be500cea9babeef8033ebeec818fbe64cb5fb66805bbdddf62c1ec56e8"}, "downloads": -1, "filename": "bigfloat-0.1.2.tar.gz", "has_sig": false, "md5_digest": "eff005ad0fbbb46a5a9549df9889b1f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 102378, "upload_time": "2010-05-16T19:44:50", "upload_time_iso_8601": "2010-05-16T19:44:50.402919Z", "url": "https://files.pythonhosted.org/packages/95/96/453ccfbda307df0ddfef6e4a59c31f3d0f4692fff7e54c357207ba3a1a92/bigfloat-0.1.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "5260728c060ce511b6e23018b76fc2e0", "sha256": "26ffdff7c3cd47489921cc8ed30a7f72752a434499baf30fa9b8213d862adf6b"}, "downloads": -1, "filename": "bigfloat-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5260728c060ce511b6e23018b76fc2e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129540, "upload_time": "2010-08-20T18:15:26", "upload_time_iso_8601": "2010-08-20T18:15:26.769977Z", "url": "https://files.pythonhosted.org/packages/0d/60/8bbaba333335c5ff3bb93ef06deb96199ffa5d2ddf4f9cb76c158b4ce06c/bigfloat-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "7343f72b02bad33676df57e10a13508a", "sha256": "262ebf31eaff44175dc52db7642f407a2acad3245bda1fdb30c4817d28c1a775"}, "downloads": -1, "filename": "bigfloat-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7343f72b02bad33676df57e10a13508a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 216720, "upload_time": "2014-07-06T16:03:44", "upload_time_iso_8601": "2014-07-06T16:03:44.378666Z", "url": "https://files.pythonhosted.org/packages/77/5c/ad7b6ff34308a15928728fd609980a0cc5c9df78d8f168dcf4996f9b0181/bigfloat-0.3.0.tar.gz", "yanked": false}], "0.3.0a2": [{"comment_text": "", "digests": {"md5": "d4384ec7aea0f8228185c9ea86c83f9a", "sha256": "1d6b052e302858eaf11fff107e198f70853dbcb70de420ae7c9173c6da17feb6"}, "downloads": -1, "filename": "bigfloat-0.3.0a2.tar.gz", "has_sig": false, "md5_digest": "d4384ec7aea0f8228185c9ea86c83f9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 439554, "upload_time": "2011-12-04T21:08:58", "upload_time_iso_8601": "2011-12-04T21:08:58.984044Z", "url": "https://files.pythonhosted.org/packages/64/74/fecbaad34343a72de1be18a75dd04716ffc32ba9ada54470ebede7321c7c/bigfloat-0.3.0a2.tar.gz", "yanked": false}], "0.3.0b1": [{"comment_text": "", "digests": {"md5": "0678588c0e9a9b7cc9add1d32f2a8cb3", "sha256": "332a3e33f4ecc4db35815dceaad1186948c35f1ce4796a21c56fdcd627185673"}, "downloads": -1, "filename": "bigfloat-0.3.0b1.tar.gz", "has_sig": false, "md5_digest": "0678588c0e9a9b7cc9add1d32f2a8cb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 213207, "upload_time": "2014-07-05T14:48:58", "upload_time_iso_8601": "2014-07-05T14:48:58.755462Z", "url": "https://files.pythonhosted.org/packages/d6/47/7a8ee2e2786a246670f5ed37ea0d03f37b22cd04ea45dd0b84c53869b613/bigfloat-0.3.0b1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d0bcbd4cbb5ee09b717fab02b3541cca", "sha256": "58b96bde872aca5989d13d82eba3acf2aa1b94e22117dd72a16ba5911b0c0cb8"}, "downloads": -1, "filename": "bigfloat-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d0bcbd4cbb5ee09b717fab02b3541cca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 258208, "upload_time": "2019-12-30T17:07:42", "upload_time_iso_8601": "2019-12-30T17:07:42.253624Z", "url": "https://files.pythonhosted.org/packages/e0/6c/34784aecbd34d8eaad938106a8b0e5af57dc7282baf613cb8414ef949c20/bigfloat-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d0bcbd4cbb5ee09b717fab02b3541cca", "sha256": "58b96bde872aca5989d13d82eba3acf2aa1b94e22117dd72a16ba5911b0c0cb8"}, "downloads": -1, "filename": "bigfloat-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d0bcbd4cbb5ee09b717fab02b3541cca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 258208, "upload_time": "2019-12-30T17:07:42", "upload_time_iso_8601": "2019-12-30T17:07:42.253624Z", "url": "https://files.pythonhosted.org/packages/e0/6c/34784aecbd34d8eaad938106a8b0e5af57dc7282baf613cb8414ef949c20/bigfloat-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:34 2020"}