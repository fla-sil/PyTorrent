{"info": {"author": "Paul van Gool", "author_email": "pvangool@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# rcs_chatbot\n\nA Python SDK for [RCS MaaP chatbots](https://www.gsma.com/futurenetworks/wp-content/uploads/2017/11/FNW.11_v1.0.pdf).\n\n## Installation\n\n```bash\npip install rcs_chatbot\n```\n\n## Example\n\nSee more examples in [the example folder](https://github.com/pvangool/py-rcs-chatbot/tree/master/example).\n\n```python\nimport flask\nimport logging\nimport rcs_chatbot\n\nchatbot = rcs_chatbot.Chatbot(\n  \"API_URL\",\n  \"BOT_ID\",\n  \"TOKEN\",\n  None,\n  logging.DEBUG\n)\n\napp = flask.Flask(__name__)\n\n@app.route('/', methods=['POST'])\ndef event():\n  try:\n    chatbot.processEvent(flask.request.get_json())\n    return \"ok\", 200\n  except maap.RequestFailed as ex:\n    print(\"Request failed: \" + str(ex))\n    return \"ok\", 200\n\n@chatbot.registerEventHandler(rcs_chatbot.EventType.MESSAGE)\ndef messageHandler(event):\n  userContact = None\n  chatId = None\n\n  if \"userContact\" in event[\"messageContact\"]:\n    userContact = event[\"messageContact\"][\"userContact\"]\n  if \"chatId\" in event[\"messageContact\"]:\n    chatId = event[\"messageContact\"][\"chatId\"]\n\n  contact = rcs_chatbot.MessageContact(userContact, chatId)\n\n  suggestions = rcs_chatbot.Suggestions()\n  suggestions.addReply(\"reply\", \"reply\")\n  suggestions.addUrlAction(\"url\", \"url\", \"http://example.com\")\n\n  chatbot.sendMessage(\n    contact,\n    \"You wrote: \" + event[\"RCSMessage\"][\"textMessage\"],\n    suggestions\n  )\n\n@chatbot.registerEventHandler(rcs_chatbot.EventType.ISTYPING)\ndef isTypingHandler(event):\n  print(\"isTypingHandler\")\n\n@chatbot.registerEventHandler(rcs_chatbot.EventType.MESSAGESTATUS)\ndef messageStatusHandler(event):\n  print(\"messageStatusHandler\")\n\n@chatbot.registerEventHandler(rcs_chatbot.EventType.FILESTATUS)\ndef fileStatusHandler(event):\n  print(\"fileStatusHandler\")\n\n@chatbot.registerEventHandler(rcs_chatbot.EventType.RESPONSE)\ndef responseHandler(event):\n  print(\"responseHandler\")\n\n@chatbot.registerEventHandler(rcs_chatbot.EventType.ALIAS)\ndef aliasHandler(event):\n  print(\"aliasHandler\")\n\n@chatbot.registerEventHandler(rcs_chatbot.EventType.NEWUSER)\ndef newUserHandler(event):\n  print(\"newUserHandler\")\n\nif __name__ == '__main__':\n    app.run(port=5000, debug=False)\n```\n\nInstead of a simple message, you can also use `sendMessage` to send an `AudioMessage`, etc. Show below is\nhow to send a `RichcardCarousel` message.\n\n```python\n@chatbot.registerEventHandler(maap.EventType.MESSAGE)\ndef messageHandler(event):\n  userContact = None\n  chatId = None\n\n  if \"userContact\" in event[\"messageContact\"]:\n    userContact = event[\"messageContact\"][\"userContact\"]\n  if \"chatId\" in event[\"messageContact\"]:\n    chatId = event[\"messageContact\"][\"chatId\"]\n\n  contact = maap.MessageContact(userContact, chatId)\n\n  card1 = maap.Richcard()\n  card1.setTitle(\"title\")\n\n  card2 = maap.Richcard()\n  card2.setTitle(\"title\")\n\n  carousel = maap.RichcardCarousel()\n  carousel.addRichcard(card1)\n  carousel.addRichcard(card2)\n\n  chatbot.sendMessage(\n    contact,\n    carousel\n  )\n```\n\n## Usage\n\n### Chatbot Functions\n\n#### constructor\n\n#### sendMessage(recipient, content, suggestions = None)\n\nSends a message with `content` and optional `suggestions` to the target `recipient`.\n\n* `recipient` - Object: A `MessageContact` object.\n* `content` - Object: The message payload. Either a string, an `AudioMessage` object, a `FileMessage` object, a `GeolocationPushMessage` object, a `Richcard` object, or a `RichcardCarousel` object.\n* `suggestions` - (Optional) Object: A `Suggestions` object.\n\n#### getMessageStatus(messageId)\n\nGets the status of a message with `messageId`.\n\n* `messageId` - String: The message identifier.\n\n#### updateMessageStatus(messageId, status)\n\nUpdates the status of a message with `messageId` to `status`.\n\n* `messageId` - String: The message identifier.\n* `status` - String: The requested status. Needs to be either `rcs_chatbot.MessageStatus.CANCELLED` or `rcs_chatbot.MessageStatus.DISPLAYED`.\n\n#### getContactCapabilities(userContact, chatId)\n\nGets the capabilities for a subscriber. Either `userContact` or `chatId` needs to be specified.\n\n* `userContact` - String: The subscriber's MSISDN.\n* `chatId` - String: The user's anonymous token.\n\n#### uploadFile(path, url, fileType, until)\n\nUploads a file of type `fileType` to the MaaP content storage until it expires at date `until`Either `path` or `url` needs to be specified.\n\n* `path` - String: The path to the file.\n* `url` - String: The URL to the file.\n* `fileType` - String: The file's content type.\n* `until` - Date: The date at which time the content should be expired.\n\n#### deleteFile(fileId)\n\nDeletes a file with identifier `fileId` from the MaaP content storage.\n\n* `fileId` - String: The file identifier.\n\n#### getFile(fileId)\n\nGets info for a file with identifier `fileId` from the MaaP content storage.\n\n* `fileId` - String: The file identifier.\n\n#### startTyping(recipient)\n\nStarts the 'is typing' indicator for the target `recipient`.\n\n* `recipient` - Object: A `MessageContact` object.\n\n#### stopTyping(recipient)\n\nStops the 'is typing' indicator for the target `recipient`.\n\n* `recipient` - Object: A `MessageContact` object.\n\n#### processEvent(json)\n\nThe main middleware for your bot's webhook. It parses the message payload, and fire the appropriate event.\n\n### FileMessage Functions\n\nAn `FileMessage` object representes a file and has the following properties:\n\n| Property | Type | Mandatory | Description |\n| --- | --- | --- | --- |\n| `fileUrl` | String | Yes | The URL of the file. |\n| `fileName` | String | No | The file name. |\n| `fileMIMEType` | String | No | The MIME type of the file. |\n| `fileSize` | Number | No | The size of the file. |\n| `thumbnailUrl` | String | No | The URL of the thumbnail. |\n| `thumbnailFileName` | String | No | The file name of the thumbnail. |\n| `thumbnailMIMEType` | String | No | The MIME type of the thumbnail. |\n| `thumbnailFileSize` | Number | No | The size of the thumbnail. |\n\n#### constructor(fileUrl)\n\nReturns a new `FileMessage` instance.\n\n* `fileUrl` - String: The URL of the file.\n\n#### setFileName(fileName)\n\nSet the `fileName` property.\n\n* `fileName` - String: The file name.\n\n#### setFileMIMEType(fileMIMEType)\n\nSet the `fileMIMEType` property.\n\n* `fileMIMEType` - String: The MIME type of the file.\n\n#### setFileSize(fileSize)\n\nSet the `fileSize` property.\n\n* `fileSize` - Number: The size of the file.\n\n#### setThumbnailUrl(thumbnailUrl)\n\nSet the `thumbnailUrl` property.\n\n* `thumbnailUrl` - String: The URL of the thumbnail.\n\n#### setThumbnailFileName(thumbnailFileName)\n\net the `thumbnailFileName` property.\n\n* `thumbnailFileName` - String: The file name of the thumbnail.\n\n#### setThumbnailMIMEType(thumbnailMIMEType)\n\nSet the `thumbnailMIMEType` property.\n\n* `thumbnailMIMEType` - String: The MIME type of the thumbnail.\n\n#### setThumbnailFileSize(thumbnailFileSize)\n\nSet the `thumbnailFileSize` property.\n\n* `thumbnailFileSize` - Number: The size of the thumbnail.\n\n### AudioMessage Functions\n\nAn `AudioMessage` object representes an audio file and has the following properties:\n\n| Property | Type | Mandatory | Description |\n| --- | --- | --- | --- |\n| `fileUrl` | String | Yes | The URL of the file. |\n| `fileName` | String | No | The file name. |\n| `fileMIMEType` | String | No | The MIME type of the file. |\n| `fileSize` | Number | No | The size of the file. |\n| `playingLength` | Number | No | The playing length of the audio. |\n\n#### constructor(fileUrl)\n\nReturns a new `AudioMessage` instance.\n\n* `fileUrl` - String: The URL of the file.\n\n#### setFileName(fileName)\n\nSet the `fileName` property.\n\n* `fileName` - String: The file name.\n\n#### setFileMIMEType(fileMIMEType)\n\nSet the `fileMIMEType` property.\n\n* `fileMIMEType` - String: The MIME type of the file.\n\n#### setFileSize(fileSize)\n\nSet the `fileSize` property.\n\n* `fileSize` - Number: The size of the file.\n\n#### setPlayingLength(playingLength)\n\nSet the `playingLength` property.\n\n* `playingLength` - Number: The playing length of the audio.\n\n### GeolocationPushMessage\n\n Property | Type | Mandatory | Description |\n| --- | --- | --- | --- |\n| `pos` | String | Yes | This are the coordinates in WGS 84 (latitude, longitude) decimal notation. Example \"26.118 1289 - 80.1283921\" |\n| `label` | String | No | This can be used to tag the nature of the location. |\n| `timestamp` | String | No | This is the time when the location information was pushed. |\n| `expiry` | String | No | This is an absolute date at which time the recipient is no longer permitted to possess the location information. |\n| `timeOffset` | Number | No | This is the time zone where the location information was pushed, expressed as the number of minutes away from UTC. |\n| `radius` | Number | No | The radius of the circle will be represented in meters. |\n\n#### constructor(pos)\n\nReturns a new `GeolocationPushMessage` instance. This is a geolocation push to be sent via RCS Geolocation Push.\n\n* `pos` - String: This are the coordinates in WGS 84 (latitude, longitude) decimal notation.\n\n#### setLabel(label)\n\nSet the `label` property.\n\n* `label` - String: This can be used to tag the nature of the location.\n\n#### setTimestamp(timestamp)\n\nSet the `timestamp` property.\n\n* `timestamp` - String: This is the time when the location information was pushed.\n\n#### setExpiry(expiry)\n\nSet the `expiry` property.\n\n* `expiry` - String: This is an absolute date at which time the recipient is no longer permitted to possess the location information.\n\n#### setTimeOffset(timeOffset)\n\nSet the `timeOffset` property.\n\n* `timeOffset` - Number: This is the time zone where the location information was pushed, expressed as the number of minutes away from UTC.\n\n#### setRadius(radius)\n\nSet the `radius` property.\n\n* `radius` - Number: The radius of the circle will be represented in meters.\n\n### Richcard Functions\n\n#### constructor()\n\nReturns a new `Richcard` instance.\n\nReturns a new `Richcard` instance.\n\n#### setCardOrientation(cardOrientation)\n\nSet the orientation of the card.\n\n* `cardOrientation` - String: Either `rcs_chatbot.CardOrientation.HORIZONTAL` or `rcs_chatbot.CardOrientation.VERTICAL`.\n\n#### setImageAlignment(imageAlignment)\n\nSet the alignment of the image on the card.\n\n* `imageAlignment` - String: Either `rcs_chatbot.ImageAlignment.LEFT` or `rcs_chatbot.ImageAlignment.RIGHT`.\n\n#### setMedia(mediaUrl, mediaContentType, mediaFileSize, height, [thumbnailUrl], [thumbnailContentType], [thumbnailFileSize], [contentDescription])\n\nSet the media (image) to be displayed on the richcard.\n\n* `mediaUrl` - String: The URL to the image.\n* `mediaContentType` - String: The content type of the image.\n* `mediaFileSize` - Number: The size of the image.\n* `height` - String: Either `rcs_chatbot.MediaHeight.SHORT` or `rcs_chatbot.MediaHeight.MEDIUM` or `rcs_chatbot.MediaHeight.TALL`.\n* `thumbnailUrl` - (Optional) String: The URL to the thumbnail for the image.\n* `thumbnailContentType` - (Optional) String: The content type of the thumbnail.\n* `thumbnailFileSize` - (Optional) Number: The size of the thumbnail.\n* `contentDescription` - (Optional) String: Textual description of media content.\n\nThe `thumbnailUrl` property is optional, but if used, `thumbnailContentType` and `thumbnailFileSize` must be provided as well.\n\n#### setTitle(title)\n\nSet the title of the card.\n\n* `title` - String: The title.\n\n#### setDescription(description)\n\nSet the description of the card.\n\n* `description` - String: The description.\n\n#### setSuggestions(suggestions)\n\nAdd suggestions to the card.\n\n* `suggestions` - Suggestions: The suggestions.\n\n### RichcardCarousel Functions\n\n#### constructor()\n\nReturns a new `RichcardCarousel` instance.\n\n#### setCardWidth(cardWidth)\n\nSet the width of the cards in the carousel.\n\n* `cardWidth` - String: Either `rcs_chatbot.CardWidth.SMALL` or `rcs_chatbot.CardWidth.MEDIUM`.\n\n#### addRichcard(richcard)\n\nAdd a card to the carousel.\n\n* `richcard` - Richcard: The `Richcard` object.\n\n### Suggestions Functions\n\nSuggested Replies consist of a display text and a set of postback data.\n\nSuggested Actions are grouped into seven different categories supporting a total of twelve different suggested actions:\n\n* urlAction:\n  * openUrl - Opens a web site or app via deep linking.\n* dialerAction:\n  * dialPhoneNumber - Calls a phone number via the user's dialer app.\n  * dialEnrichedCall - Start an Enriched Call via the user\u2019s dialer app.\n  * dialVideoCall - Start a video call via the user\u2019s dialer app.\n* mapAction:\n  * showLocation - Show location(s) on a map for given coordinates or search query.\n  * requestLocationPush - Request for a one-time geo location push.\n* calendarAction:\n  * createCalendarEvent - Creates a new event on the user's calendar.\n* composeAction:\n  * composeTextMessage - Compose a draft text message.\n  * composeRecordingMessage - Compose a draft message and start recording audio or video.\n* deviceAction:\n  * requestDeviceSpecifics - Request for a one-time share of device specifics (device model, operating system version, messaging client identifier and version, and remaining battery charge in minutes).\n* settingsAction:\n  * disableAnonymization - Ask the user to disable the anonymization setting.\n  * enableDisplayedNotifications - Ask the user to enable sending displayed notifications.\n\nMost actions allow fallback URLs in case a user does not have any app of the required type installed. Chatbot platforms can use the fallback URL to suggest an appropriate app to the user.\n\n#### constructor()\n\nReturns a new `Suggestions` instance.\n\n#### addReply(displayText, postbackData)\n\nOn-the-wire example:\n\n```json\n{\n  \"reply\": {\n    \"displayText\": \"Yes\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_reply_yes\"\n    }\n  }\n}\n```\n\n#### addUrlAction(displayText, postbackData, url)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"urlAction\": {\n      \"openUrl\": {\n        \"url\": \"https://www.google.com\"\n      }\n    },\n    \"displayText\": \"Open website or deep link\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_open_url\"\n    }\n  }\n}\n```\n\n#### addDialerAction(displayText, postbackData, dialType, phoneNumber, fallbackUrl, subject = None)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"dialerAction\": {\n      \"dialPhoneNumber\": {\n        \"phoneNumber\": \"+1650253000\"\n      }\n    },\n    \"displayText\": \"Call a phone number\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_dial_phone_number\"\n    }\n  }\n},\n{\n  \"action\": {\n    \"dialerAction\": {\n      \"dialEnrichedCall\": {\n        \"phoneNumber\": \"+1650253000\",\n        \"subject\": \"The optional subject for the enriched call\"\n      }\n    },\n    \"displayText\": \"Start enriched call\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_dial_enriched_call\"\n    }\n  }\n},\n{\n  \"action\": {\n    \"dialerAction\": {\n      \"dialVideoCall\": {\n        \"phoneNumber\": \"+1650253000\"\n      }\n    },\n    \"displayText\": \"Start video call\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_dial_video_call\"\n    }\n  }\n}\n```\n\n#### addRequestLocationPushMapAction(displayText, postbackData)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"mapAction\": {\n      \"requestLocationPush\": {}\n    },\n    \"displayText\": \"Request a geo location\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_request_location_push\"\n    }\n  }\n}\n```\n\n#### addShowLocationMapAction(displayText, postbackData, latitude, longitude, label, query, fallbackUrl)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"mapAction\": {\n      \"showLocation\": {\n        \"location\": {\n          \"latitude\": 37.4220041,\n          \"longitude\": -122.0862515,\n          \"label\": \"Googleplex\"\n        },\n        \"fallbackUrl\": \"https://www.google.com/maps/@37.4219162,-122.078063,15z\"\n      }\n    },\n    \"displayText\": \"Show location on a map\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_show_location\"\n    }\n  }\n},\n{\n  \"action\": {\n    \"mapAction\": {\n      \"showLocation\": {\n        \"location\": {\n          \"query\": \"restaurants\"\n        },\n        \"fallbackUrl\": \"https://www.google.com/maps/search/restaurants\"\n      }\n    },\n    \"displayText\": \"Search location(s) on map\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_search_locations\"\n    }\n  }\n}\n```\n\n#### addCalendarAction(displayText, postbackData, startTime, endTime, title, description, fallbackUrl)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"calendarAction\": {\n      \"createCalendarEvent\": {\n        \"startTime\": \"2017-03-14T00:00:00Z\",\n        \"endTime\": \"2017-03-14T23:59:59Z\",\n        \"title\": \"Meeting\",\n        \"description\": \"GSG review meeting\"\n      }\n    },\n    \"displayText\": \"Schedule Meeting\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_create_calendar_event\"\n    }\n  }\n}\n```\n\n#### addTextComposeAction(displayText, postbackData, phoneNumber, text)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"composeAction\": {\n      \"composeTextMessage\": {\n        \"phoneNumber\": \"+1650253000\",\n        \"text\": \"Draft to go into the send message text field.\"\n      }\n    },\n    \"displayText\": \"Draft a text message\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_compose_text_message\"\n    }\n  }\n}\n```\n\n#### addRecordingComposeAction(displayText, postbackData, phoneNumber, type)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"composeAction\": {\n      \"composeRecordingMessage\": {\n        \"phoneNumber\": \"+1650253000\",\n        \"type\": \"VIDEO\"\n      }\n    },\n    \"displayText\": \"Record audio or video\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_compose_recording_message\"\n    }\n  }\n}\n```\n\n#### addDeviceAction(displayText, postbackData)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"deviceAction\": {\n      \"requestDeviceSpecifics\": {}\n    },\n    \"displayText\": \"Request device specifics\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_request_device_specifics\"\n    }\n  }\n}\n```\n\n#### addSettingsAction(displayText, postbackData, settingsType)\n\nOn-the-wire example:\n\n```json\n{\n  \"action\": {\n    \"settingsAction\": {\n      \"disableAnonymization\": {}\n    },\n    \"displayText\": \"Share your phone number\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_disable_anonymization\"\n    }\n  }\n},\n{\n  \"action\": {\n    \"settingsAction\": {\n      \"enableDisplayedNotifications\": {}\n    },\n    \"displayText\": \"Send read receipts\",\n    \"postback\": {\n      \"data\": \"set_by_chatbot_enable_displayed_notifications\"\n    }\n  }\n}\n```\n\n### Events\n\nA different event is triggered for each type of event an RCS chatbot can receive. Below are all\nthe possible events with an example of the payload they provide.\n\n#### EventType.MESSAGE\n\nTriggered when a 'message' event is sent to the bot.\n\n* `event` - Object: An object containing the 'message' event payload.\n\nExample usage:\n\n```python\n@chatbot.registerEventHandler(rcs_chatbot.EventType.MESSAGE)\ndef messageHandler(event):\n  print(\"messageHandler\")\n```\n\nSample payload:\n\n```json\n{\n  \"RCSMessage\": {\n    \"msgId\": \"Xs8CI3tdf\",\n    \"textMessage\": \"hello world\",\n    \"timestamp\": \"2017-09-26T01:33:20.315Z\"\n  },\n  \"messageContact\": {\n    \"userContact\": \"+14251234567\"\n  },\n  \"event\": \"message\"\n}\n```\n\n#### EventType.ISTYPING\n\nTriggered when an 'isTyping' event is sent to the bot.\n\n* `event` - Object: An object containing the 'isTyping' event payload.\n\nExample usage:\n\n```python\n@chatbot.registerEventHandler(rcs_chatbot.EventType.ISTYPING)\ndef isTypingHandler(event):\n  print(\"isTypingHandler\")\n```\n\nSample payload:\n\n```json\n{\n  \"RCSMessage\": {\n    \"msgId\": \"Xs8CI3tdf\",\n    \"isTyping\": \"active\",\n    \"timestamp\": \"2017-09-26T01:33:20.315Z\"\n  },\n  \"messageContact\": {\n    \"userContact\": \"+14251234567\"\n  },\n  \"event\": \"isTyping\"\n}\n```\n\n#### EventType.MESSAGESTATUS\n\nTriggered when a 'messageStatus' event is sent to the bot.\n\n* `event` - Object: An object containing the 'messageStatus' event payload.\n\nExample usage:\n\n```python\n@chatbot.registerEventHandler(rcs_chatbot.EventType.MESSAGESTATUS)\ndef messageStatusHandler(event):\n  print(\"messageStatusHandler\")\n```\n\nSample payload:\n\n```json\n{\n  \"RCSMessage\": {\n    \"msgId\": \"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\",\n    \"status\": \"displayed\",\n    \"timestamp\": \"2017-09-26T01:33:20.315Z\"\n  },\n  \"messageContact\": {\n    \"userContact\": \"+14251234567\"\n  },\n  \"event\": \"messageStatus\"\n}\n```\n\n#### EventType.FILESTATUS\n\nTriggered when a 'fileStatus' event is sent to the bot.\n\n* `event` - Object: An object containing the 'fileStatus' event payload.\n\nExample usage:\n\n```python\n@chatbot.registerEventHandler(rcs_chatbot.EventType.FILESTATUS)\ndef fileStatusHandler(event):\n  print(\"fileStatusHandler\")\n```\n\nSample payload:\n\n```json\n{\n  \"file\": {\n    \"fileId\": \"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\",\n    \"fileUrl\": \"http://www.example.com/files/f.jpg\",\n    \"fileSize\": 123456,\n    \"status\": \"ready\",\n    \"validity\": \"2017-10-03T22:31:00.597Z\"\n  },\n  \"event\": \"fileStatus\"\n}\n```\n\n#### EventType.RESPONSE\n\nTriggered when a 'response' event is sent to the bot.\n\n* `event` - Object: An object containing the 'response' event payload.\n\nExample usage:\n\n```python\n@chatbot.registerEventHandler(rcs_chatbot.EventType.RESPONSE)\ndef responseHandler(event):\n  print(\"responseHandler\")\n```\n\nSample payload:\n\n```json\n{\n  \"RCSMessage\": {\n    \"msgId\": \"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\",\n    \"suggestedResponse\": {\n      \"response\": {\n        \"action\": {\n          \"displayText\": \"Visit Website\",\n          \"postback\": {\n            \"data\": \"set_by_chatbot_reply_yes\"\n          }\n        }\n      }\n    },\n    \"timestamp\": \"2017-09-26T01:33:20.315Z\"\n  },\n  \"messageContact\": {\n    \"userContact\": \"+14251234567\"\n  },\n  \"event\": \"response\"\n}\n```\n\n#### EventType.ALIAS\n\nTriggered when a 'alias' event is sent to the bot.\n\n* `event` - Object: An object containing the 'alias' event payload.\n\nExample usage:\n\n```python\n@chatbot.registerEventHandler(rcs_chatbot.EventType.ALIAS)\ndef aliasHandler(event):\n  print(\"aliasHandler\")\n```\n\nSample payload:\n\n```json\n{\n  \"RCSMessage\": {\n    \"msgId\": \"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\",\n    \"timestamp\": \"2017-09-26T01:33:20.315Z\"\n  },\n  \"messageContact\": {\n    \"userContact\": \"+14251234567\",\n    \"chatId\": \"93JF93SEIJFE\"\n  },\n  \"event\": \"alias\"\n}\n```\n\n#### EventType.NEWUSER\n\nTriggered when a 'newUser' event is sent to the bot.\n\n* `event` - Object: An object containing the 'newUser' event payload.\n\nExample usage:\n\n```python\n@chatbot.registerEventHandler(rcs_chatbot.EventType.NEWUSER)\ndef newUserHandler(event):\n  print(\"newUserHandler\")\n```\n\nSample payload:\n\n```json\n{\n  \"RCSMessage\": {\n    \"msgId\": \"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\",\n    \"suggestedResponse\": {\n      \"response\": {\n        \"reply\": {\n          \"displayText\": \"Start Chat\",\n          \"postback\": {\n            \"data\": \"new_bot_user_initiation\"\n          }\n        }\n      }\n    },\n    \"timestamp\": \"2017-09-26T01:33:20.315Z\"\n  },\n  \"messageContact\": {\n    \"userContact\": \"+14251234567\"\n  },\n  \"event\": \"newUser\"\n}\n```\n\n## To Do\n\n* Verify constraints before sending\n* Look for missing fields like trafficType (there may be more)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pvangool/py-rcs-chatbot", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rcs-chatbot", "package_url": "https://pypi.org/project/rcs-chatbot/", "platform": "", "project_url": "https://pypi.org/project/rcs-chatbot/", "project_urls": {"Homepage": "https://github.com/pvangool/py-rcs-chatbot"}, "release_url": "https://pypi.org/project/rcs-chatbot/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "Python SDK for RCS MaaP chatbot", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>rcs_chatbot</h1>\n<p>A Python SDK for <a href=\"https://www.gsma.com/futurenetworks/wp-content/uploads/2017/11/FNW.11_v1.0.pdf\" rel=\"nofollow\">RCS MaaP chatbots</a>.</p>\n<h2>Installation</h2>\n<pre>pip install rcs_chatbot\n</pre>\n<h2>Example</h2>\n<p>See more examples in <a href=\"https://github.com/pvangool/py-rcs-chatbot/tree/master/example\" rel=\"nofollow\">the example folder</a>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">flask</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">rcs_chatbot</span>\n\n<span class=\"n\">chatbot</span> <span class=\"o\">=</span> <span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">Chatbot</span><span class=\"p\">(</span>\n  <span class=\"s2\">\"API_URL\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"BOT_ID\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"TOKEN\"</span><span class=\"p\">,</span>\n  <span class=\"kc\">None</span><span class=\"p\">,</span>\n  <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">event</span><span class=\"p\">():</span>\n  <span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">chatbot</span><span class=\"o\">.</span><span class=\"n\">processEvent</span><span class=\"p\">(</span><span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"ok\"</span><span class=\"p\">,</span> <span class=\"mi\">200</span>\n  <span class=\"k\">except</span> <span class=\"n\">maap</span><span class=\"o\">.</span><span class=\"n\">RequestFailed</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Request failed: \"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"ok\"</span><span class=\"p\">,</span> <span class=\"mi\">200</span>\n\n<span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">MESSAGE</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">messageHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"n\">userContact</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n  <span class=\"n\">chatId</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n  <span class=\"k\">if</span> <span class=\"s2\">\"userContact\"</span> <span class=\"ow\">in</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"messageContact\"</span><span class=\"p\">]:</span>\n    <span class=\"n\">userContact</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"messageContact\"</span><span class=\"p\">][</span><span class=\"s2\">\"userContact\"</span><span class=\"p\">]</span>\n  <span class=\"k\">if</span> <span class=\"s2\">\"chatId\"</span> <span class=\"ow\">in</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"messageContact\"</span><span class=\"p\">]:</span>\n    <span class=\"n\">chatId</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"messageContact\"</span><span class=\"p\">][</span><span class=\"s2\">\"chatId\"</span><span class=\"p\">]</span>\n\n  <span class=\"n\">contact</span> <span class=\"o\">=</span> <span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">MessageContact</span><span class=\"p\">(</span><span class=\"n\">userContact</span><span class=\"p\">,</span> <span class=\"n\">chatId</span><span class=\"p\">)</span>\n\n  <span class=\"n\">suggestions</span> <span class=\"o\">=</span> <span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">Suggestions</span><span class=\"p\">()</span>\n  <span class=\"n\">suggestions</span><span class=\"o\">.</span><span class=\"n\">addReply</span><span class=\"p\">(</span><span class=\"s2\">\"reply\"</span><span class=\"p\">,</span> <span class=\"s2\">\"reply\"</span><span class=\"p\">)</span>\n  <span class=\"n\">suggestions</span><span class=\"o\">.</span><span class=\"n\">addUrlAction</span><span class=\"p\">(</span><span class=\"s2\">\"url\"</span><span class=\"p\">,</span> <span class=\"s2\">\"url\"</span><span class=\"p\">,</span> <span class=\"s2\">\"http://example.com\"</span><span class=\"p\">)</span>\n\n  <span class=\"n\">chatbot</span><span class=\"o\">.</span><span class=\"n\">sendMessage</span><span class=\"p\">(</span>\n    <span class=\"n\">contact</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"You wrote: \"</span> <span class=\"o\">+</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"RCSMessage\"</span><span class=\"p\">][</span><span class=\"s2\">\"textMessage\"</span><span class=\"p\">],</span>\n    <span class=\"n\">suggestions</span>\n  <span class=\"p\">)</span>\n\n<span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">ISTYPING</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">isTypingHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"isTypingHandler\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">MESSAGESTATUS</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">messageStatusHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"messageStatusHandler\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">FILESTATUS</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">fileStatusHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"fileStatusHandler\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">RESPONSE</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">responseHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"responseHandler\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">ALIAS</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">aliasHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"aliasHandler\"</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">NEWUSER</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">newUserHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"newUserHandler\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">,</span> <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Instead of a simple message, you can also use <code>sendMessage</code> to send an <code>AudioMessage</code>, etc. Show below is\nhow to send a <code>RichcardCarousel</code> message.</p>\n<pre><span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">maap</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">MESSAGE</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">messageHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"n\">userContact</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n  <span class=\"n\">chatId</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n  <span class=\"k\">if</span> <span class=\"s2\">\"userContact\"</span> <span class=\"ow\">in</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"messageContact\"</span><span class=\"p\">]:</span>\n    <span class=\"n\">userContact</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"messageContact\"</span><span class=\"p\">][</span><span class=\"s2\">\"userContact\"</span><span class=\"p\">]</span>\n  <span class=\"k\">if</span> <span class=\"s2\">\"chatId\"</span> <span class=\"ow\">in</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"messageContact\"</span><span class=\"p\">]:</span>\n    <span class=\"n\">chatId</span> <span class=\"o\">=</span> <span class=\"n\">event</span><span class=\"p\">[</span><span class=\"s2\">\"messageContact\"</span><span class=\"p\">][</span><span class=\"s2\">\"chatId\"</span><span class=\"p\">]</span>\n\n  <span class=\"n\">contact</span> <span class=\"o\">=</span> <span class=\"n\">maap</span><span class=\"o\">.</span><span class=\"n\">MessageContact</span><span class=\"p\">(</span><span class=\"n\">userContact</span><span class=\"p\">,</span> <span class=\"n\">chatId</span><span class=\"p\">)</span>\n\n  <span class=\"n\">card1</span> <span class=\"o\">=</span> <span class=\"n\">maap</span><span class=\"o\">.</span><span class=\"n\">Richcard</span><span class=\"p\">()</span>\n  <span class=\"n\">card1</span><span class=\"o\">.</span><span class=\"n\">setTitle</span><span class=\"p\">(</span><span class=\"s2\">\"title\"</span><span class=\"p\">)</span>\n\n  <span class=\"n\">card2</span> <span class=\"o\">=</span> <span class=\"n\">maap</span><span class=\"o\">.</span><span class=\"n\">Richcard</span><span class=\"p\">()</span>\n  <span class=\"n\">card2</span><span class=\"o\">.</span><span class=\"n\">setTitle</span><span class=\"p\">(</span><span class=\"s2\">\"title\"</span><span class=\"p\">)</span>\n\n  <span class=\"n\">carousel</span> <span class=\"o\">=</span> <span class=\"n\">maap</span><span class=\"o\">.</span><span class=\"n\">RichcardCarousel</span><span class=\"p\">()</span>\n  <span class=\"n\">carousel</span><span class=\"o\">.</span><span class=\"n\">addRichcard</span><span class=\"p\">(</span><span class=\"n\">card1</span><span class=\"p\">)</span>\n  <span class=\"n\">carousel</span><span class=\"o\">.</span><span class=\"n\">addRichcard</span><span class=\"p\">(</span><span class=\"n\">card2</span><span class=\"p\">)</span>\n\n  <span class=\"n\">chatbot</span><span class=\"o\">.</span><span class=\"n\">sendMessage</span><span class=\"p\">(</span>\n    <span class=\"n\">contact</span><span class=\"p\">,</span>\n    <span class=\"n\">carousel</span>\n  <span class=\"p\">)</span>\n</pre>\n<h2>Usage</h2>\n<h3>Chatbot Functions</h3>\n<h4>constructor</h4>\n<h4>sendMessage(recipient, content, suggestions = None)</h4>\n<p>Sends a message with <code>content</code> and optional <code>suggestions</code> to the target <code>recipient</code>.</p>\n<ul>\n<li><code>recipient</code> - Object: A <code>MessageContact</code> object.</li>\n<li><code>content</code> - Object: The message payload. Either a string, an <code>AudioMessage</code> object, a <code>FileMessage</code> object, a <code>GeolocationPushMessage</code> object, a <code>Richcard</code> object, or a <code>RichcardCarousel</code> object.</li>\n<li><code>suggestions</code> - (Optional) Object: A <code>Suggestions</code> object.</li>\n</ul>\n<h4>getMessageStatus(messageId)</h4>\n<p>Gets the status of a message with <code>messageId</code>.</p>\n<ul>\n<li><code>messageId</code> - String: The message identifier.</li>\n</ul>\n<h4>updateMessageStatus(messageId, status)</h4>\n<p>Updates the status of a message with <code>messageId</code> to <code>status</code>.</p>\n<ul>\n<li><code>messageId</code> - String: The message identifier.</li>\n<li><code>status</code> - String: The requested status. Needs to be either <code>rcs_chatbot.MessageStatus.CANCELLED</code> or <code>rcs_chatbot.MessageStatus.DISPLAYED</code>.</li>\n</ul>\n<h4>getContactCapabilities(userContact, chatId)</h4>\n<p>Gets the capabilities for a subscriber. Either <code>userContact</code> or <code>chatId</code> needs to be specified.</p>\n<ul>\n<li><code>userContact</code> - String: The subscriber's MSISDN.</li>\n<li><code>chatId</code> - String: The user's anonymous token.</li>\n</ul>\n<h4>uploadFile(path, url, fileType, until)</h4>\n<p>Uploads a file of type <code>fileType</code> to the MaaP content storage until it expires at date <code>until</code>Either <code>path</code> or <code>url</code> needs to be specified.</p>\n<ul>\n<li><code>path</code> - String: The path to the file.</li>\n<li><code>url</code> - String: The URL to the file.</li>\n<li><code>fileType</code> - String: The file's content type.</li>\n<li><code>until</code> - Date: The date at which time the content should be expired.</li>\n</ul>\n<h4>deleteFile(fileId)</h4>\n<p>Deletes a file with identifier <code>fileId</code> from the MaaP content storage.</p>\n<ul>\n<li><code>fileId</code> - String: The file identifier.</li>\n</ul>\n<h4>getFile(fileId)</h4>\n<p>Gets info for a file with identifier <code>fileId</code> from the MaaP content storage.</p>\n<ul>\n<li><code>fileId</code> - String: The file identifier.</li>\n</ul>\n<h4>startTyping(recipient)</h4>\n<p>Starts the 'is typing' indicator for the target <code>recipient</code>.</p>\n<ul>\n<li><code>recipient</code> - Object: A <code>MessageContact</code> object.</li>\n</ul>\n<h4>stopTyping(recipient)</h4>\n<p>Stops the 'is typing' indicator for the target <code>recipient</code>.</p>\n<ul>\n<li><code>recipient</code> - Object: A <code>MessageContact</code> object.</li>\n</ul>\n<h4>processEvent(json)</h4>\n<p>The main middleware for your bot's webhook. It parses the message payload, and fire the appropriate event.</p>\n<h3>FileMessage Functions</h3>\n<p>An <code>FileMessage</code> object representes a file and has the following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fileUrl</code></td>\n<td>String</td>\n<td>Yes</td>\n<td>The URL of the file.</td>\n</tr>\n<tr>\n<td><code>fileName</code></td>\n<td>String</td>\n<td>No</td>\n<td>The file name.</td>\n</tr>\n<tr>\n<td><code>fileMIMEType</code></td>\n<td>String</td>\n<td>No</td>\n<td>The MIME type of the file.</td>\n</tr>\n<tr>\n<td><code>fileSize</code></td>\n<td>Number</td>\n<td>No</td>\n<td>The size of the file.</td>\n</tr>\n<tr>\n<td><code>thumbnailUrl</code></td>\n<td>String</td>\n<td>No</td>\n<td>The URL of the thumbnail.</td>\n</tr>\n<tr>\n<td><code>thumbnailFileName</code></td>\n<td>String</td>\n<td>No</td>\n<td>The file name of the thumbnail.</td>\n</tr>\n<tr>\n<td><code>thumbnailMIMEType</code></td>\n<td>String</td>\n<td>No</td>\n<td>The MIME type of the thumbnail.</td>\n</tr>\n<tr>\n<td><code>thumbnailFileSize</code></td>\n<td>Number</td>\n<td>No</td>\n<td>The size of the thumbnail.</td>\n</tr></tbody></table>\n<h4>constructor(fileUrl)</h4>\n<p>Returns a new <code>FileMessage</code> instance.</p>\n<ul>\n<li><code>fileUrl</code> - String: The URL of the file.</li>\n</ul>\n<h4>setFileName(fileName)</h4>\n<p>Set the <code>fileName</code> property.</p>\n<ul>\n<li><code>fileName</code> - String: The file name.</li>\n</ul>\n<h4>setFileMIMEType(fileMIMEType)</h4>\n<p>Set the <code>fileMIMEType</code> property.</p>\n<ul>\n<li><code>fileMIMEType</code> - String: The MIME type of the file.</li>\n</ul>\n<h4>setFileSize(fileSize)</h4>\n<p>Set the <code>fileSize</code> property.</p>\n<ul>\n<li><code>fileSize</code> - Number: The size of the file.</li>\n</ul>\n<h4>setThumbnailUrl(thumbnailUrl)</h4>\n<p>Set the <code>thumbnailUrl</code> property.</p>\n<ul>\n<li><code>thumbnailUrl</code> - String: The URL of the thumbnail.</li>\n</ul>\n<h4>setThumbnailFileName(thumbnailFileName)</h4>\n<p>et the <code>thumbnailFileName</code> property.</p>\n<ul>\n<li><code>thumbnailFileName</code> - String: The file name of the thumbnail.</li>\n</ul>\n<h4>setThumbnailMIMEType(thumbnailMIMEType)</h4>\n<p>Set the <code>thumbnailMIMEType</code> property.</p>\n<ul>\n<li><code>thumbnailMIMEType</code> - String: The MIME type of the thumbnail.</li>\n</ul>\n<h4>setThumbnailFileSize(thumbnailFileSize)</h4>\n<p>Set the <code>thumbnailFileSize</code> property.</p>\n<ul>\n<li><code>thumbnailFileSize</code> - Number: The size of the thumbnail.</li>\n</ul>\n<h3>AudioMessage Functions</h3>\n<p>An <code>AudioMessage</code> object representes an audio file and has the following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fileUrl</code></td>\n<td>String</td>\n<td>Yes</td>\n<td>The URL of the file.</td>\n</tr>\n<tr>\n<td><code>fileName</code></td>\n<td>String</td>\n<td>No</td>\n<td>The file name.</td>\n</tr>\n<tr>\n<td><code>fileMIMEType</code></td>\n<td>String</td>\n<td>No</td>\n<td>The MIME type of the file.</td>\n</tr>\n<tr>\n<td><code>fileSize</code></td>\n<td>Number</td>\n<td>No</td>\n<td>The size of the file.</td>\n</tr>\n<tr>\n<td><code>playingLength</code></td>\n<td>Number</td>\n<td>No</td>\n<td>The playing length of the audio.</td>\n</tr></tbody></table>\n<h4>constructor(fileUrl)</h4>\n<p>Returns a new <code>AudioMessage</code> instance.</p>\n<ul>\n<li><code>fileUrl</code> - String: The URL of the file.</li>\n</ul>\n<h4>setFileName(fileName)</h4>\n<p>Set the <code>fileName</code> property.</p>\n<ul>\n<li><code>fileName</code> - String: The file name.</li>\n</ul>\n<h4>setFileMIMEType(fileMIMEType)</h4>\n<p>Set the <code>fileMIMEType</code> property.</p>\n<ul>\n<li><code>fileMIMEType</code> - String: The MIME type of the file.</li>\n</ul>\n<h4>setFileSize(fileSize)</h4>\n<p>Set the <code>fileSize</code> property.</p>\n<ul>\n<li><code>fileSize</code> - Number: The size of the file.</li>\n</ul>\n<h4>setPlayingLength(playingLength)</h4>\n<p>Set the <code>playingLength</code> property.</p>\n<ul>\n<li><code>playingLength</code> - Number: The playing length of the audio.</li>\n</ul>\n<h3>GeolocationPushMessage</h3>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Type</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>pos</code></td>\n<td>String</td>\n<td>Yes</td>\n<td>This are the coordinates in WGS 84 (latitude, longitude) decimal notation. Example \"26.118 1289 - 80.1283921\"</td>\n</tr>\n<tr>\n<td><code>label</code></td>\n<td>String</td>\n<td>No</td>\n<td>This can be used to tag the nature of the location.</td>\n</tr>\n<tr>\n<td><code>timestamp</code></td>\n<td>String</td>\n<td>No</td>\n<td>This is the time when the location information was pushed.</td>\n</tr>\n<tr>\n<td><code>expiry</code></td>\n<td>String</td>\n<td>No</td>\n<td>This is an absolute date at which time the recipient is no longer permitted to possess the location information.</td>\n</tr>\n<tr>\n<td><code>timeOffset</code></td>\n<td>Number</td>\n<td>No</td>\n<td>This is the time zone where the location information was pushed, expressed as the number of minutes away from UTC.</td>\n</tr>\n<tr>\n<td><code>radius</code></td>\n<td>Number</td>\n<td>No</td>\n<td>The radius of the circle will be represented in meters.</td>\n</tr></tbody></table>\n<h4>constructor(pos)</h4>\n<p>Returns a new <code>GeolocationPushMessage</code> instance. This is a geolocation push to be sent via RCS Geolocation Push.</p>\n<ul>\n<li><code>pos</code> - String: This are the coordinates in WGS 84 (latitude, longitude) decimal notation.</li>\n</ul>\n<h4>setLabel(label)</h4>\n<p>Set the <code>label</code> property.</p>\n<ul>\n<li><code>label</code> - String: This can be used to tag the nature of the location.</li>\n</ul>\n<h4>setTimestamp(timestamp)</h4>\n<p>Set the <code>timestamp</code> property.</p>\n<ul>\n<li><code>timestamp</code> - String: This is the time when the location information was pushed.</li>\n</ul>\n<h4>setExpiry(expiry)</h4>\n<p>Set the <code>expiry</code> property.</p>\n<ul>\n<li><code>expiry</code> - String: This is an absolute date at which time the recipient is no longer permitted to possess the location information.</li>\n</ul>\n<h4>setTimeOffset(timeOffset)</h4>\n<p>Set the <code>timeOffset</code> property.</p>\n<ul>\n<li><code>timeOffset</code> - Number: This is the time zone where the location information was pushed, expressed as the number of minutes away from UTC.</li>\n</ul>\n<h4>setRadius(radius)</h4>\n<p>Set the <code>radius</code> property.</p>\n<ul>\n<li><code>radius</code> - Number: The radius of the circle will be represented in meters.</li>\n</ul>\n<h3>Richcard Functions</h3>\n<h4>constructor()</h4>\n<p>Returns a new <code>Richcard</code> instance.</p>\n<p>Returns a new <code>Richcard</code> instance.</p>\n<h4>setCardOrientation(cardOrientation)</h4>\n<p>Set the orientation of the card.</p>\n<ul>\n<li><code>cardOrientation</code> - String: Either <code>rcs_chatbot.CardOrientation.HORIZONTAL</code> or <code>rcs_chatbot.CardOrientation.VERTICAL</code>.</li>\n</ul>\n<h4>setImageAlignment(imageAlignment)</h4>\n<p>Set the alignment of the image on the card.</p>\n<ul>\n<li><code>imageAlignment</code> - String: Either <code>rcs_chatbot.ImageAlignment.LEFT</code> or <code>rcs_chatbot.ImageAlignment.RIGHT</code>.</li>\n</ul>\n<h4>setMedia(mediaUrl, mediaContentType, mediaFileSize, height, [thumbnailUrl], [thumbnailContentType], [thumbnailFileSize], [contentDescription])</h4>\n<p>Set the media (image) to be displayed on the richcard.</p>\n<ul>\n<li><code>mediaUrl</code> - String: The URL to the image.</li>\n<li><code>mediaContentType</code> - String: The content type of the image.</li>\n<li><code>mediaFileSize</code> - Number: The size of the image.</li>\n<li><code>height</code> - String: Either <code>rcs_chatbot.MediaHeight.SHORT</code> or <code>rcs_chatbot.MediaHeight.MEDIUM</code> or <code>rcs_chatbot.MediaHeight.TALL</code>.</li>\n<li><code>thumbnailUrl</code> - (Optional) String: The URL to the thumbnail for the image.</li>\n<li><code>thumbnailContentType</code> - (Optional) String: The content type of the thumbnail.</li>\n<li><code>thumbnailFileSize</code> - (Optional) Number: The size of the thumbnail.</li>\n<li><code>contentDescription</code> - (Optional) String: Textual description of media content.</li>\n</ul>\n<p>The <code>thumbnailUrl</code> property is optional, but if used, <code>thumbnailContentType</code> and <code>thumbnailFileSize</code> must be provided as well.</p>\n<h4>setTitle(title)</h4>\n<p>Set the title of the card.</p>\n<ul>\n<li><code>title</code> - String: The title.</li>\n</ul>\n<h4>setDescription(description)</h4>\n<p>Set the description of the card.</p>\n<ul>\n<li><code>description</code> - String: The description.</li>\n</ul>\n<h4>setSuggestions(suggestions)</h4>\n<p>Add suggestions to the card.</p>\n<ul>\n<li><code>suggestions</code> - Suggestions: The suggestions.</li>\n</ul>\n<h3>RichcardCarousel Functions</h3>\n<h4>constructor()</h4>\n<p>Returns a new <code>RichcardCarousel</code> instance.</p>\n<h4>setCardWidth(cardWidth)</h4>\n<p>Set the width of the cards in the carousel.</p>\n<ul>\n<li><code>cardWidth</code> - String: Either <code>rcs_chatbot.CardWidth.SMALL</code> or <code>rcs_chatbot.CardWidth.MEDIUM</code>.</li>\n</ul>\n<h4>addRichcard(richcard)</h4>\n<p>Add a card to the carousel.</p>\n<ul>\n<li><code>richcard</code> - Richcard: The <code>Richcard</code> object.</li>\n</ul>\n<h3>Suggestions Functions</h3>\n<p>Suggested Replies consist of a display text and a set of postback data.</p>\n<p>Suggested Actions are grouped into seven different categories supporting a total of twelve different suggested actions:</p>\n<ul>\n<li>urlAction:\n<ul>\n<li>openUrl - Opens a web site or app via deep linking.</li>\n</ul>\n</li>\n<li>dialerAction:\n<ul>\n<li>dialPhoneNumber - Calls a phone number via the user's dialer app.</li>\n<li>dialEnrichedCall - Start an Enriched Call via the user\u2019s dialer app.</li>\n<li>dialVideoCall - Start a video call via the user\u2019s dialer app.</li>\n</ul>\n</li>\n<li>mapAction:\n<ul>\n<li>showLocation - Show location(s) on a map for given coordinates or search query.</li>\n<li>requestLocationPush - Request for a one-time geo location push.</li>\n</ul>\n</li>\n<li>calendarAction:\n<ul>\n<li>createCalendarEvent - Creates a new event on the user's calendar.</li>\n</ul>\n</li>\n<li>composeAction:\n<ul>\n<li>composeTextMessage - Compose a draft text message.</li>\n<li>composeRecordingMessage - Compose a draft message and start recording audio or video.</li>\n</ul>\n</li>\n<li>deviceAction:\n<ul>\n<li>requestDeviceSpecifics - Request for a one-time share of device specifics (device model, operating system version, messaging client identifier and version, and remaining battery charge in minutes).</li>\n</ul>\n</li>\n<li>settingsAction:\n<ul>\n<li>disableAnonymization - Ask the user to disable the anonymization setting.</li>\n<li>enableDisplayedNotifications - Ask the user to enable sending displayed notifications.</li>\n</ul>\n</li>\n</ul>\n<p>Most actions allow fallback URLs in case a user does not have any app of the required type installed. Chatbot platforms can use the fallback URL to suggest an appropriate app to the user.</p>\n<h4>constructor()</h4>\n<p>Returns a new <code>Suggestions</code> instance.</p>\n<h4>addReply(displayText, postbackData)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"reply\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Yes\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_reply_yes\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addUrlAction(displayText, postbackData, url)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"urlAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"openUrl\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.google.com\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Open website or deep link\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_open_url\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addDialerAction(displayText, postbackData, dialType, phoneNumber, fallbackUrl, subject = None)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"dialerAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"dialPhoneNumber\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"phoneNumber\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+1650253000\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Call a phone number\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_dial_phone_number\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"dialerAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"dialEnrichedCall\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"phoneNumber\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+1650253000\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"subject\"</span><span class=\"p\">:</span> <span class=\"s2\">\"The optional subject for the enriched call\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Start enriched call\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_dial_enriched_call\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"dialerAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"dialVideoCall\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"phoneNumber\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+1650253000\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Start video call\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_dial_video_call\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addRequestLocationPushMapAction(displayText, postbackData)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"mapAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"requestLocationPush\"</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Request a geo location\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_request_location_push\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addShowLocationMapAction(displayText, postbackData, latitude, longitude, label, query, fallbackUrl)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"mapAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"showLocation\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"location\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"latitude\"</span><span class=\"p\">:</span> <span class=\"mf\">37.4220041</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"longitude\"</span><span class=\"p\">:</span> <span class=\"mf\">-122.0862515</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Googleplex\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"fallbackUrl\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.google.com/maps/@37.4219162,-122.078063,15z\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Show location on a map\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_show_location\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"mapAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"showLocation\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"location\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"query\"</span><span class=\"p\">:</span> <span class=\"s2\">\"restaurants\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"fallbackUrl\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://www.google.com/maps/search/restaurants\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Search location(s) on map\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_search_locations\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addCalendarAction(displayText, postbackData, startTime, endTime, title, description, fallbackUrl)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"calendarAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"createCalendarEvent\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"startTime\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-03-14T00:00:00Z\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"endTime\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-03-14T23:59:59Z\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Meeting\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"GSG review meeting\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Schedule Meeting\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_create_calendar_event\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addTextComposeAction(displayText, postbackData, phoneNumber, text)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"composeAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"composeTextMessage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"phoneNumber\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+1650253000\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Draft to go into the send message text field.\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Draft a text message\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_compose_text_message\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addRecordingComposeAction(displayText, postbackData, phoneNumber, type)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"composeAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"composeRecordingMessage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"phoneNumber\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+1650253000\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"VIDEO\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Record audio or video\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_compose_recording_message\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addDeviceAction(displayText, postbackData)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"deviceAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"requestDeviceSpecifics\"</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Request device specifics\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_request_device_specifics\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>addSettingsAction(displayText, postbackData, settingsType)</h4>\n<p>On-the-wire example:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"settingsAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"disableAnonymization\"</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Share your phone number\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_disable_anonymization\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"settingsAction\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"enableDisplayedNotifications\"</span><span class=\"p\">:</span> <span class=\"p\">{}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Send read receipts\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_enable_displayed_notifications\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Events</h3>\n<p>A different event is triggered for each type of event an RCS chatbot can receive. Below are all\nthe possible events with an example of the payload they provide.</p>\n<h4>EventType.MESSAGE</h4>\n<p>Triggered when a 'message' event is sent to the bot.</p>\n<ul>\n<li><code>event</code> - Object: An object containing the 'message' event payload.</li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">MESSAGE</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">messageHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"messageHandler\"</span><span class=\"p\">)</span>\n</pre>\n<p>Sample payload:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"RCSMessage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"msgId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Xs8CI3tdf\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"textMessage\"</span><span class=\"p\">:</span> <span class=\"s2\">\"hello world\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-09-26T01:33:20.315Z\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"messageContact\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"userContact\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+14251234567\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"event\"</span><span class=\"p\">:</span> <span class=\"s2\">\"message\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>EventType.ISTYPING</h4>\n<p>Triggered when an 'isTyping' event is sent to the bot.</p>\n<ul>\n<li><code>event</code> - Object: An object containing the 'isTyping' event payload.</li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">ISTYPING</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">isTypingHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"isTypingHandler\"</span><span class=\"p\">)</span>\n</pre>\n<p>Sample payload:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"RCSMessage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"msgId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Xs8CI3tdf\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"isTyping\"</span><span class=\"p\">:</span> <span class=\"s2\">\"active\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-09-26T01:33:20.315Z\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"messageContact\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"userContact\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+14251234567\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"event\"</span><span class=\"p\">:</span> <span class=\"s2\">\"isTyping\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>EventType.MESSAGESTATUS</h4>\n<p>Triggered when a 'messageStatus' event is sent to the bot.</p>\n<ul>\n<li><code>event</code> - Object: An object containing the 'messageStatus' event payload.</li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">MESSAGESTATUS</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">messageStatusHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"messageStatusHandler\"</span><span class=\"p\">)</span>\n</pre>\n<p>Sample payload:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"RCSMessage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"msgId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"displayed\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-09-26T01:33:20.315Z\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"messageContact\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"userContact\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+14251234567\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"event\"</span><span class=\"p\">:</span> <span class=\"s2\">\"messageStatus\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>EventType.FILESTATUS</h4>\n<p>Triggered when a 'fileStatus' event is sent to the bot.</p>\n<ul>\n<li><code>event</code> - Object: An object containing the 'fileStatus' event payload.</li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">FILESTATUS</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">fileStatusHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"fileStatusHandler\"</span><span class=\"p\">)</span>\n</pre>\n<p>Sample payload:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"file\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"fileId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"fileUrl\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://www.example.com/files/f.jpg\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"fileSize\"</span><span class=\"p\">:</span> <span class=\"mi\">123456</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ready\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"validity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-10-03T22:31:00.597Z\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"event\"</span><span class=\"p\">:</span> <span class=\"s2\">\"fileStatus\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>EventType.RESPONSE</h4>\n<p>Triggered when a 'response' event is sent to the bot.</p>\n<ul>\n<li><code>event</code> - Object: An object containing the 'response' event payload.</li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">RESPONSE</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">responseHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"responseHandler\"</span><span class=\"p\">)</span>\n</pre>\n<p>Sample payload:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"RCSMessage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"msgId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"suggestedResponse\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"response\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Visit Website\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"set_by_chatbot_reply_yes\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-09-26T01:33:20.315Z\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"messageContact\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"userContact\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+14251234567\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"event\"</span><span class=\"p\">:</span> <span class=\"s2\">\"response\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>EventType.ALIAS</h4>\n<p>Triggered when a 'alias' event is sent to the bot.</p>\n<ul>\n<li><code>event</code> - Object: An object containing the 'alias' event payload.</li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">ALIAS</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">aliasHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"aliasHandler\"</span><span class=\"p\">)</span>\n</pre>\n<p>Sample payload:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"RCSMessage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"msgId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-09-26T01:33:20.315Z\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"messageContact\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"userContact\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+14251234567\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"chatId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"93JF93SEIJFE\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"event\"</span><span class=\"p\">:</span> <span class=\"s2\">\"alias\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h4>EventType.NEWUSER</h4>\n<p>Triggered when a 'newUser' event is sent to the bot.</p>\n<ul>\n<li><code>event</code> - Object: An object containing the 'newUser' event payload.</li>\n</ul>\n<p>Example usage:</p>\n<pre><span class=\"nd\">@chatbot</span><span class=\"o\">.</span><span class=\"n\">registerEventHandler</span><span class=\"p\">(</span><span class=\"n\">rcs_chatbot</span><span class=\"o\">.</span><span class=\"n\">EventType</span><span class=\"o\">.</span><span class=\"n\">NEWUSER</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">newUserHandler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"newUserHandler\"</span><span class=\"p\">)</span>\n</pre>\n<p>Sample payload:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"RCSMessage\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"msgId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MzJmajlmamVzZGZ8bmk5MHNlbmRmZTAz\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"suggestedResponse\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"response\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"reply\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"displayText\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Start Chat\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"postback\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"new_bot_user_initiation\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"timestamp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2017-09-26T01:33:20.315Z\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"messageContact\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"userContact\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+14251234567\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"event\"</span><span class=\"p\">:</span> <span class=\"s2\">\"newUser\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>To Do</h2>\n<ul>\n<li>Verify constraints before sending</li>\n<li>Look for missing fields like trafficType (there may be more)</li>\n</ul>\n\n          </div>"}, "last_serial": 5396867, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "1e3b24fdcb8e6e197ea003fb9b3dca15", "sha256": "5fcf829cdf36884167fb75ec69961dd0b5c944d439b55e39de2ee7e344b4c09e"}, "downloads": -1, "filename": "rcs_chatbot-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1e3b24fdcb8e6e197ea003fb9b3dca15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6409, "upload_time": "2019-06-10T15:01:10", "upload_time_iso_8601": "2019-06-10T15:01:10.769610Z", "url": "https://files.pythonhosted.org/packages/01/b4/31e9d1466eac30aed92f601ff1b7717b689b15c5876ebf297719f243bcb3/rcs_chatbot-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c6c077b77342ba4378cb130baf6e5fd", "sha256": "f28d3fdc1b8f25d8710e34bba7c6cb7036da192333e75e324bf6721f281a50fb"}, "downloads": -1, "filename": "rcs_chatbot-0.0.2.tar.gz", "has_sig": false, "md5_digest": "0c6c077b77342ba4378cb130baf6e5fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3369, "upload_time": "2019-06-10T15:01:12", "upload_time_iso_8601": "2019-06-10T15:01:12.718276Z", "url": "https://files.pythonhosted.org/packages/21/31/bba5acc11eec3a2788e5ba7968edc7849beac77e892b6916280d7660d40f/rcs_chatbot-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "8587b6325dca4406d26abb4c58eed145", "sha256": "4b3e6cd4f9c0be08cfed2a06aae8640a8809e1774c52f267be0567251d8ebeef"}, "downloads": -1, "filename": "rcs_chatbot-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8587b6325dca4406d26abb4c58eed145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6937, "upload_time": "2019-06-10T16:20:02", "upload_time_iso_8601": "2019-06-10T16:20:02.787339Z", "url": "https://files.pythonhosted.org/packages/02/f9/99bbbdfbe115e79347e65f01062f8c2086a53bcfd9071684e3a3f01f26c1/rcs_chatbot-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b5e2bd2d5266fa996b7555ec738e553", "sha256": "b3626a8ac518d1d661b425b551117ee7f7f9d6336fd8e84c02e94d9af8331632"}, "downloads": -1, "filename": "rcs_chatbot-0.0.3.tar.gz", "has_sig": false, "md5_digest": "7b5e2bd2d5266fa996b7555ec738e553", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7926, "upload_time": "2019-06-10T16:20:04", "upload_time_iso_8601": "2019-06-10T16:20:04.870650Z", "url": "https://files.pythonhosted.org/packages/fd/db/396767ddd4726c0aeeba0810d800000e7e0ee7220aa7d1564e4b738ec3d6/rcs_chatbot-0.0.3.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "6ce81549b001bd7cd24b8ee3d9fbf99a", "sha256": "e2dd1d49fb1ad82878a0f8c7258b96ceb82dd5afb559eee94bfad8cd045e1206"}, "downloads": -1, "filename": "rcs_chatbot-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "6ce81549b001bd7cd24b8ee3d9fbf99a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10433, "upload_time": "2019-06-10T20:07:06", "upload_time_iso_8601": "2019-06-10T20:07:06.103310Z", "url": "https://files.pythonhosted.org/packages/3e/08/29706838fff80c8f4ea79b3536fde92bec6f134b8e9aaf07b261a1048b5d/rcs_chatbot-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5d61149960db73ed852391efcbb73a3", "sha256": "b3df51bf7f9c06fa2d23714c75ccfda9ea8550b0922a0da4db91aa093ebda11e"}, "downloads": -1, "filename": "rcs_chatbot-0.0.5.tar.gz", "has_sig": false, "md5_digest": "c5d61149960db73ed852391efcbb73a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15771, "upload_time": "2019-06-10T20:07:07", "upload_time_iso_8601": "2019-06-10T20:07:07.974594Z", "url": "https://files.pythonhosted.org/packages/f4/1c/ff0ee3e904c0c1c72be16b068384a48294afa3aebe967570a458c811cd6d/rcs_chatbot-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "d18dcdc15556555223e0303f5f695b64", "sha256": "1590f7d75a9337bd0435445abe114e8bb1d796240f3e69eb76a50d3a8f145fd8"}, "downloads": -1, "filename": "rcs_chatbot-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d18dcdc15556555223e0303f5f695b64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10612, "upload_time": "2019-06-13T16:58:57", "upload_time_iso_8601": "2019-06-13T16:58:57.481630Z", "url": "https://files.pythonhosted.org/packages/de/7f/2c89eba85499a92bbc45dfd5b9a8c6bb5b840734ee4f0c65999f6bcd1a7e/rcs_chatbot-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35457a5c11adf83c36d73e7820fc076a", "sha256": "842a9203f2aa0569672e77597db36804f9ebb02189160afe6f317ca3695a4a6a"}, "downloads": -1, "filename": "rcs_chatbot-0.0.6.tar.gz", "has_sig": false, "md5_digest": "35457a5c11adf83c36d73e7820fc076a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15987, "upload_time": "2019-06-13T16:58:59", "upload_time_iso_8601": "2019-06-13T16:58:59.136438Z", "url": "https://files.pythonhosted.org/packages/88/17/efe5e0016f2af7b9c6d435534d749440acb50343ff0548e1b19ad56a4927/rcs_chatbot-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d18dcdc15556555223e0303f5f695b64", "sha256": "1590f7d75a9337bd0435445abe114e8bb1d796240f3e69eb76a50d3a8f145fd8"}, "downloads": -1, "filename": "rcs_chatbot-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "d18dcdc15556555223e0303f5f695b64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10612, "upload_time": "2019-06-13T16:58:57", "upload_time_iso_8601": "2019-06-13T16:58:57.481630Z", "url": "https://files.pythonhosted.org/packages/de/7f/2c89eba85499a92bbc45dfd5b9a8c6bb5b840734ee4f0c65999f6bcd1a7e/rcs_chatbot-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35457a5c11adf83c36d73e7820fc076a", "sha256": "842a9203f2aa0569672e77597db36804f9ebb02189160afe6f317ca3695a4a6a"}, "downloads": -1, "filename": "rcs_chatbot-0.0.6.tar.gz", "has_sig": false, "md5_digest": "35457a5c11adf83c36d73e7820fc076a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15987, "upload_time": "2019-06-13T16:58:59", "upload_time_iso_8601": "2019-06-13T16:58:59.136438Z", "url": "https://files.pythonhosted.org/packages/88/17/efe5e0016f2af7b9c6d435534d749440acb50343ff0548e1b19ad56a4927/rcs_chatbot-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:42 2020"}