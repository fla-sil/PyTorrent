{"info": {"author": "Matthew Story", "author_email": "matt.story@axial.net", "bugtrack_url": null, "classifiers": [], "description": "========\nroutelog\n========\n\nroutelog is a flexible execution-based log processing program and Domain\nSpecific Language. routelog takes a rules file in the following format::\n\n    /pattern/    command $1 $2\n\nAnd operates on one or more log files, executing ``command $1 $2`` for all\nlines matching the regular expression ``/pattern/`` substituting the first and\nsecond items in the log line for ``$1`` and ``$2`` respectively. A rules file\nwith the following directive::\n\n    /ERROR/      echo \"$*\" | mail -s \"Error executing ${3%:} on $2 at $1\" error@example.com\n\nWould process a log entry like::\n\n    2012-12-07T12:06:11-05:00 server1 program_name: ERROR foo\n\nand send an email to error@example.com with the subject::\n\n    Error executing program_name on server1 at 2012-12-07T12:06:11-05:00'\n\nand the body::\n\n    2012-12-07T12:06:11-05:00 server1 program_name: ERROR foo\n\nRules files are processed by the routelog program::\n\n    routelog mail-errors.rules /var/log/*.log\n\nThe routelog program acts as a filter, passing all log lines to stdout, which\nis useful for doing additional processing in a single pipeline::\n\n    routelog mail-errors.rules /var/log/*.log | bzip2 > todays-logs.`date +%s`.bz2\n\nFor more on rules files, see ``man 5 routelog``, for more on routelog see\n``man 1 routelog``.\n\nInstalling\n==========\n\nThe routelog project lives on github_, and is available via pip_.\n\n.. _github: https://github.com/axialmarket/routelog\n.. _pip: https://pypi.python.org/pypi?:action=display&name=routelog\n\nInstalling v0.1 From Pip\n------------------------\n\n::\n\n    sudo pip install routelog==0.1\n\nInstalling v0.1 From Source\n---------------------------\n\n::\n\n    wget https://github.com/axialmarket/routelog/archive/routelog-0.1.tar.gz | tar vzxf -\n    cd routelog-0.1\n    sudo python setup.py install\n\nUsage\n=====\n\n::\n\n    routelog [-h|--help] [-c|--comments] [-n|--no-output] rules_file [ log_file [...]]\n\nOptional Arguments\n------------------\n\n\\-h, --help\n  Print an extended usage to stdout and exit.\n\\-c, --comments\n  Treat comments in log lines (anything following a ' #') as arguments, rather\n  than ignoring them.\n\\-n, --no-output\n  Suppress the (default) behavior of printing each log line to stdout.\n\nMore documentation is available via for the routelog program\n(``man 1 routelog``) and routelog rules file formats (``man 5 routelog``)\nafter install.\n\nLicense\n=======\n\nroutelog is made available for use under a 3-clause BSD license (see:\nLICENSE.txt in the package).\n\nAuthors\n=======\n\nMatthew Story (matt.story@axial.net)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/axialmarket/routelog", "keywords": null, "license": "3-BSD", "maintainer": null, "maintainer_email": null, "name": "routelog", "package_url": "https://pypi.org/project/routelog/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/routelog/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/axialmarket/routelog"}, "release_url": "https://pypi.org/project/routelog/0.1/", "requires_dist": null, "requires_python": null, "summary": "A Flexible DSL For Processing Logs", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>routelog is a flexible execution-based log processing program and Domain\nSpecific Language. routelog takes a rules file in the following format:</p>\n<pre>/pattern/    command $1 $2\n</pre>\n<p>And operates on one or more log files, executing <tt>command $1 $2</tt> for all\nlines matching the regular expression <tt>/pattern/</tt> substituting the first and\nsecond items in the log line for <tt>$1</tt> and <tt>$2</tt> respectively. A rules file\nwith the following directive:</p>\n<pre>/ERROR/      echo \"$*\" | mail -s \"Error executing ${3%:} on $2 at $1\" error@example.com\n</pre>\n<p>Would process a log entry like:</p>\n<pre>2012-12-07T12:06:11-05:00 server1 program_name: ERROR foo\n</pre>\n<p>and send an email to <a href=\"mailto:error%40example.com\">error<span>@</span>example<span>.</span>com</a> with the subject:</p>\n<pre>Error executing program_name on server1 at 2012-12-07T12:06:11-05:00'\n</pre>\n<p>and the body:</p>\n<pre>2012-12-07T12:06:11-05:00 server1 program_name: ERROR foo\n</pre>\n<p>Rules files are processed by the routelog program:</p>\n<pre>routelog mail-errors.rules /var/log/*.log\n</pre>\n<p>The routelog program acts as a filter, passing all log lines to stdout, which\nis useful for doing additional processing in a single pipeline:</p>\n<pre>routelog mail-errors.rules /var/log/*.log | bzip2 &gt; todays-logs.`date +%s`.bz2\n</pre>\n<p>For more on rules files, see <tt>man 5 routelog</tt>, for more on routelog see\n<tt>man 1 routelog</tt>.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>The routelog project lives on <a href=\"https://github.com/axialmarket/routelog\" rel=\"nofollow\">github</a>, and is available via <a href=\"https://pypi.python.org/pypi?:action=display&amp;name=routelog\" rel=\"nofollow\">pip</a>.</p>\n<div id=\"installing-v0-1-from-pip\">\n<h3>Installing v0.1 From Pip</h3>\n<pre>sudo pip install routelog==0.1\n</pre>\n</div>\n<div id=\"installing-v0-1-from-source\">\n<h3>Installing v0.1 From Source</h3>\n<pre>wget https://github.com/axialmarket/routelog/archive/routelog-0.1.tar.gz | tar vzxf -\ncd routelog-0.1\nsudo python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>routelog [-h|--help] [-c|--comments] [-n|--no-output] rules_file [ log_file [...]]\n</pre>\n<div id=\"optional-arguments\">\n<h3>Optional Arguments</h3>\n<dl>\n<dt>-h, \u2013help</dt>\n<dd>Print an extended usage to stdout and exit.</dd>\n<dt>-c, \u2013comments</dt>\n<dd>Treat comments in log lines (anything following a \u2018 #\u2019) as arguments, rather\nthan ignoring them.</dd>\n<dt>-n, \u2013no-output</dt>\n<dd>Suppress the (default) behavior of printing each log line to stdout.</dd>\n</dl>\n<p>More documentation is available via for the routelog program\n(<tt>man 1 routelog</tt>) and routelog rules file formats (<tt>man 5 routelog</tt>)\nafter install.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>routelog is made available for use under a 3-clause BSD license (see:\nLICENSE.txt in the package).</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Matthew Story (<a href=\"mailto:matt.story%40axial.net\">matt<span>.</span>story<span>@</span>axial<span>.</span>net</a>)</p>\n</div>\n\n          </div>"}, "last_serial": 882191, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "daa96ab884e79d7ffd3adbd148ba96ea", "sha256": "9987fe2cd9778f5df2e4b76fc8ce04937a3ceefb500aaeb5086475c68131aa41"}, "downloads": -1, "filename": "routelog-0.1.tar.gz", "has_sig": false, "md5_digest": "daa96ab884e79d7ffd3adbd148ba96ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7791, "upload_time": "2013-10-05T23:14:32", "upload_time_iso_8601": "2013-10-05T23:14:32.420604Z", "url": "https://files.pythonhosted.org/packages/0a/84/f7a74de966697d7e7f997fe0e1ee58b94af529773b798206dd549539657a/routelog-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "daa96ab884e79d7ffd3adbd148ba96ea", "sha256": "9987fe2cd9778f5df2e4b76fc8ce04937a3ceefb500aaeb5086475c68131aa41"}, "downloads": -1, "filename": "routelog-0.1.tar.gz", "has_sig": false, "md5_digest": "daa96ab884e79d7ffd3adbd148ba96ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7791, "upload_time": "2013-10-05T23:14:32", "upload_time_iso_8601": "2013-10-05T23:14:32.420604Z", "url": "https://files.pythonhosted.org/packages/0a/84/f7a74de966697d7e7f997fe0e1ee58b94af529773b798206dd549539657a/routelog-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:08 2020"}