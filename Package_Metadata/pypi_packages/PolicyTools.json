{"info": {"author": "Sam Keen", "author_email": "sam.sjk@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# policy-tools\n\n[![CircleCI](https://circleci.com/gh/samkeen/policy-tools.svg?style=svg)](https://circleci.com/gh/samkeen/policy-tools)\n\n[![codecov](https://codecov.io/gh/samkeen/policy-tools/branch/master/graph/badge.svg)](https://codecov.io/gh/samkeen/policy-tools)\n\n[![Requirements Status](https://requires.io/github/samkeen/policy-tools/requirements.svg?branch=master)](https://requires.io/github/samkeen/policy-tools/requirements/?branch=master)\n\n## Summary\n\nThis is a utility of helper tools for working with AWS IAM Policies.\n\nCurrently it programmatically determine the effect of an AWS Organizations \n[Service Control Policy](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html) \non a given user policy.\n\n```python\nresult = scp.effect_on(user_policy)\nprint result.denied_actions\n```\n\n## Usage\n\nCreate your \"All IAM actions\" set\n```python \n# policies-gen.json.js is the content of https://awspolicygen.s3.amazonaws.com/js/policies.js\nwith open('policies-gen.json.js') as file_stream:\n    all_actions_source_data = file_stream.read()\n```\nCreate your ActionExpander utility.  It simply expands *glob* statements (e.g. `s3:*`) into the full matched set of IAM actions.\n```python \npolicy_actions_expander = ActionExpander(PolicyGenActionsMasterList(all_actions_source_data))\n```\nCreate the user policy and the service control policy\n```python\nuser_policy = Policy(\"\"\"{\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Sid\": \"AllowSts\",\n                \"Effect\": \"Allow\",\n                \"Resource\": \"*\",\n                \"Action\": [\n                    \"sqs:*\"\n                ]\n            },\n            {\n                \"Sid\": \"AllowEfs\",\n                \"Effect\": \"Allow\",\n                \"Resource\": \"*\",\n                \"Action\": [\n                    \"elastictranscoder:*\"\n                ]\n            }\n        ]\n    }\"\"\", action_expander)\n\n scp = ServiceControlPolicy(\"\"\"{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Sid\": \"AllowS3Read\",\n                    \"Effect\": \"Allow\",\n                    \"Resource\": \"*\",\n                    \"Action\": [\n                        \"sqs:Get*\",\n                        \"sqs:List*\"\n                    ]\n                },\n                {\n                    \"Sid\": \"AllowElasticTranscoderRead\",\n                    \"Effect\": \"Allow\",\n                    \"Resource\": \"*\",\n                    \"Action\": [\n                        \"elastictranscoder:Read*\",\n                        \"elastictranscoder:List*\"\n                    ]\n                }\n            ]\n        }\"\"\", action_expander) \n```\nDetermine the effect of the SCP on the user policy\n```python\nresult = scp.effect_on(user_policy)\nprint result.denied_actions\n\n{  'sqs:SetQueueAttributes',\n     'sqs:PurgeQueue',\n     'sqs:DeleteMessageBatch',\n     'sqs:ReceiveMessage',\n     'sqs:RemovePermission',\n     'sqs:ChangeMessageVisibilityBatch',\n     'sqs:SendMessageBatch',\n     'sqs:CreateQueue',\n     'sqs:TagQueue',\n     'sqs:AddPermission',\n     'sqs:UntagQueue',\n     'sqs:SendMessage',\n     'sqs:DeleteMessage',\n     'sqs:ChangeMessageVisibility',\n     'sqs:DeleteQueue',\n     'elastictranscoder:TestRole',\n     'elastictranscoder:CreatePipeline',\n     'elastictranscoder:DeletePipeline',\n     'elastictranscoder:UpdatePipelineNotifications',\n     'elastictranscoder:DeletePreset',\n     'elastictranscoder:CancelJob',\n     'elastictranscoder:CreateJob',\n     'elastictranscoder:UpdatePipelineStatus',\n     'elastictranscoder:CreatePreset',\n     'elastictranscoder:UpdatePipeline'\n  }\n\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/samkeen/policy-tools", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "PolicyTools", "package_url": "https://pypi.org/project/PolicyTools/", "platform": "", "project_url": "https://pypi.org/project/PolicyTools/", "project_urls": {"Homepage": "https://github.com/samkeen/policy-tools"}, "release_url": "https://pypi.org/project/PolicyTools/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>policy-tools</h1>\n<p><a href=\"https://circleci.com/gh/samkeen/policy-tools\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94f7f4a20073f5218ac5476f8eb71b96418056ba/68747470733a2f2f636972636c6563692e636f6d2f67682f73616d6b65656e2f706f6c6963792d746f6f6c732e7376673f7374796c653d737667\"></a></p>\n<p><a href=\"https://codecov.io/gh/samkeen/policy-tools\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57511d39d87a1c29fa5c06d9957a9afa68441332/68747470733a2f2f636f6465636f762e696f2f67682f73616d6b65656e2f706f6c6963792d746f6f6c732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p><a href=\"https://requires.io/github/samkeen/policy-tools/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/041f72a66f10cc929ee6d1bd2282148dec498d59/68747470733a2f2f72657175697265732e696f2f6769746875622f73616d6b65656e2f706f6c6963792d746f6f6c732f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Summary</h2>\n<p>This is a utility of helper tools for working with AWS IAM Policies.</p>\n<p>Currently it programmatically determine the effect of an AWS Organizations\n<a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html\" rel=\"nofollow\">Service Control Policy</a>\non a given user policy.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">scp</span><span class=\"o\">.</span><span class=\"n\">effect_on</span><span class=\"p\">(</span><span class=\"n\">user_policy</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">denied_actions</span>\n</pre>\n<h2>Usage</h2>\n<p>Create your \"All IAM actions\" set</p>\n<pre><span class=\"c1\"># policies-gen.json.js is the content of https://awspolicygen.s3.amazonaws.com/js/policies.js</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'policies-gen.json.js'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file_stream</span><span class=\"p\">:</span>\n    <span class=\"n\">all_actions_source_data</span> <span class=\"o\">=</span> <span class=\"n\">file_stream</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n</pre>\n<p>Create your ActionExpander utility.  It simply expands <em>glob</em> statements (e.g. <code>s3:*</code>) into the full matched set of IAM actions.</p>\n<pre><span class=\"n\">policy_actions_expander</span> <span class=\"o\">=</span> <span class=\"n\">ActionExpander</span><span class=\"p\">(</span><span class=\"n\">PolicyGenActionsMasterList</span><span class=\"p\">(</span><span class=\"n\">all_actions_source_data</span><span class=\"p\">))</span>\n</pre>\n<p>Create the user policy and the service control policy</p>\n<pre><span class=\"n\">user_policy</span> <span class=\"o\">=</span> <span class=\"n\">Policy</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"{</span>\n<span class=\"s2\">        \"Version\": \"2012-10-17\",</span>\n<span class=\"s2\">        \"Statement\": [</span>\n<span class=\"s2\">            {</span>\n<span class=\"s2\">                \"Sid\": \"AllowSts\",</span>\n<span class=\"s2\">                \"Effect\": \"Allow\",</span>\n<span class=\"s2\">                \"Resource\": \"*\",</span>\n<span class=\"s2\">                \"Action\": [</span>\n<span class=\"s2\">                    \"sqs:*\"</span>\n<span class=\"s2\">                ]</span>\n<span class=\"s2\">            },</span>\n<span class=\"s2\">            {</span>\n<span class=\"s2\">                \"Sid\": \"AllowEfs\",</span>\n<span class=\"s2\">                \"Effect\": \"Allow\",</span>\n<span class=\"s2\">                \"Resource\": \"*\",</span>\n<span class=\"s2\">                \"Action\": [</span>\n<span class=\"s2\">                    \"elastictranscoder:*\"</span>\n<span class=\"s2\">                ]</span>\n<span class=\"s2\">            }</span>\n<span class=\"s2\">        ]</span>\n<span class=\"s2\">    }\"\"\"</span><span class=\"p\">,</span> <span class=\"n\">action_expander</span><span class=\"p\">)</span>\n\n <span class=\"n\">scp</span> <span class=\"o\">=</span> <span class=\"n\">ServiceControlPolicy</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"{</span>\n<span class=\"s2\">            \"Version\": \"2012-10-17\",</span>\n<span class=\"s2\">            \"Statement\": [</span>\n<span class=\"s2\">                {</span>\n<span class=\"s2\">                    \"Sid\": \"AllowS3Read\",</span>\n<span class=\"s2\">                    \"Effect\": \"Allow\",</span>\n<span class=\"s2\">                    \"Resource\": \"*\",</span>\n<span class=\"s2\">                    \"Action\": [</span>\n<span class=\"s2\">                        \"sqs:Get*\",</span>\n<span class=\"s2\">                        \"sqs:List*\"</span>\n<span class=\"s2\">                    ]</span>\n<span class=\"s2\">                },</span>\n<span class=\"s2\">                {</span>\n<span class=\"s2\">                    \"Sid\": \"AllowElasticTranscoderRead\",</span>\n<span class=\"s2\">                    \"Effect\": \"Allow\",</span>\n<span class=\"s2\">                    \"Resource\": \"*\",</span>\n<span class=\"s2\">                    \"Action\": [</span>\n<span class=\"s2\">                        \"elastictranscoder:Read*\",</span>\n<span class=\"s2\">                        \"elastictranscoder:List*\"</span>\n<span class=\"s2\">                    ]</span>\n<span class=\"s2\">                }</span>\n<span class=\"s2\">            ]</span>\n<span class=\"s2\">        }\"\"\"</span><span class=\"p\">,</span> <span class=\"n\">action_expander</span><span class=\"p\">)</span> \n</pre>\n<p>Determine the effect of the SCP on the user policy</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">scp</span><span class=\"o\">.</span><span class=\"n\">effect_on</span><span class=\"p\">(</span><span class=\"n\">user_policy</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">denied_actions</span>\n\n<span class=\"p\">{</span>  <span class=\"s1\">'sqs:SetQueueAttributes'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:PurgeQueue'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:DeleteMessageBatch'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:ReceiveMessage'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:RemovePermission'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:ChangeMessageVisibilityBatch'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:SendMessageBatch'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:CreateQueue'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:TagQueue'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:AddPermission'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:UntagQueue'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:SendMessage'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:DeleteMessage'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:ChangeMessageVisibility'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'sqs:DeleteQueue'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:TestRole'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:CreatePipeline'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:DeletePipeline'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:UpdatePipelineNotifications'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:DeletePreset'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:CancelJob'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:CreateJob'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:UpdatePipelineStatus'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:CreatePreset'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'elastictranscoder:UpdatePipeline'</span>\n  <span class=\"p\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 5298482, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "345cd75b65272017620814de9f04470f", "sha256": "077a9d2d10e59098ec3821a9c714c1fb1f0a3bc42fa0e915259302982d206b9b"}, "downloads": -1, "filename": "PolicyTools-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "345cd75b65272017620814de9f04470f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20230, "upload_time": "2019-05-21T15:36:37", "upload_time_iso_8601": "2019-05-21T15:36:37.936925Z", "url": "https://files.pythonhosted.org/packages/3b/bf/7359bab8fe33c73d2265a4b07ed548a4b0ec18be9acd4ebf455e8718fb0a/PolicyTools-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "345cd75b65272017620814de9f04470f", "sha256": "077a9d2d10e59098ec3821a9c714c1fb1f0a3bc42fa0e915259302982d206b9b"}, "downloads": -1, "filename": "PolicyTools-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "345cd75b65272017620814de9f04470f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20230, "upload_time": "2019-05-21T15:36:37", "upload_time_iso_8601": "2019-05-21T15:36:37.936925Z", "url": "https://files.pythonhosted.org/packages/3b/bf/7359bab8fe33c73d2265a4b07ed548a4b0ec18be9acd4ebf455e8718fb0a/PolicyTools-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:51:55 2020"}