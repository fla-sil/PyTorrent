{"info": {"author": "Sebastian H\u00f6ffner", "author_email": "info@sebastian-hoeffner.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Topic :: Text Processing :: Filters"], "description": "pandoc-img-glob\n===============\n\n``pandoc-img-glob`` is a `panflute`_ `pandoc`_ `filter`_.\n\nIn multi file and GitHub stored markdown projects, many images are\nspecified relative to their documents. For example consider the\nfollowing `document tree <example>`__:\n\n::\n\n    example\n    |-- section1\n    |   |-- image1.png\n    |   `-- section1.md\n    |-- section2\n    |   |-- images\n    |   |   |-- image3.png\n    |   |   `-- image2.png\n    |   `-- section2.md\n    `-- Makefile\n\nAssuming the ``Makefile`` would compile my full book, it might look like\nthis:\n\n.. code-block:: Makefile\n\n    book:\n    \tpandoc -o book.pdf section*/*.md\n\nAnd in ``section1.md`` there would be a line referencing ``image1.png``,\netc. This is often used because then the GitHub preview looks awesome!\nHowever, pandoc has no way of telling where files came from, so it loses\ntrack of image references, resulting in errors like this:\n\n::\n\n    [pandoc warning] Could not find image `image1.png', skipping...\n    [pandoc warning] Could not find image `images/image2.png', skipping...\n    [pandoc warning] Could not find image `images/image3.png', skipping...\n\n``pandoc-img-glob`` solves this problem by just searching recursivly\nthrough the path find images matching the given filenames and providing\npandoc (and pandoc only) with the absolute paths. This allows for both:\nBeautiful pdfs and GitHub previews using the updated Makefile.\n\n.. code-block:: Makefile\n\n    fixedbook:\n    \tpandoc --filter pandoc-img-glob -o book.pdf section*/*.md\n\nHowever, this filter becomes slow if you have very deep and complex\nfile trees, and if you have multiple images with the same name, it\nwill just silently use the first it finds.\n\nInstallation\n------------\n\nJust use pip to install it from `pypi`_\n\n.. code-block:: shell\n\n    pip install pandoc-img-glob\n\n\n.. _`filter`: https://pandoc.org/scripting.html\n.. _`pandoc`: https://pandoc.org/index.html\n.. _`panflute`: http://scorreia.com/software/panflute/index.html\n.. _`pypi`: https://pypi.python.org/pypi/pandoc-img-glob", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/shoeffner/pandoc-img-glob/tarball/0.1.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shoeffner/pandoc-img-glob", "keywords": "pandoc,image,multifile,filter", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pandoc-img-glob", "package_url": "https://pypi.org/project/pandoc-img-glob/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pandoc-img-glob/", "project_urls": {"Download": "https://github.com/shoeffner/pandoc-img-glob/tarball/0.1.3", "Homepage": "https://github.com/shoeffner/pandoc-img-glob"}, "release_url": "https://pypi.org/project/pandoc-img-glob/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "A pandoc filter for globbing image paths in multi file projects.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt><span class=\"pre\">pandoc-img-glob</span></tt> is a <a href=\"http://scorreia.com/software/panflute/index.html\" rel=\"nofollow\">panflute</a> <a href=\"https://pandoc.org/index.html\" rel=\"nofollow\">pandoc</a> <a href=\"https://pandoc.org/scripting.html\" rel=\"nofollow\">filter</a>.</p>\n<p>In multi file and GitHub stored markdown projects, many images are\nspecified relative to their documents. For example consider the\nfollowing <a href=\"example\" rel=\"nofollow\">document tree</a>:</p>\n<pre>example\n|-- section1\n|   |-- image1.png\n|   `-- section1.md\n|-- section2\n|   |-- images\n|   |   |-- image3.png\n|   |   `-- image2.png\n|   `-- section2.md\n`-- Makefile\n</pre>\n<p>Assuming the <tt>Makefile</tt> would compile my full book, it might look like\nthis:</p>\n<pre><span class=\"nf\">book</span><span class=\"o\">:</span>\n    pandoc -o book.pdf section*/*.md\n</pre>\n<p>And in <tt>section1.md</tt> there would be a line referencing <tt>image1.png</tt>,\netc. This is often used because then the GitHub preview looks awesome!\nHowever, pandoc has no way of telling where files came from, so it loses\ntrack of image references, resulting in errors like this:</p>\n<pre>[pandoc warning] Could not find image `image1.png', skipping...\n[pandoc warning] Could not find image `images/image2.png', skipping...\n[pandoc warning] Could not find image `images/image3.png', skipping...\n</pre>\n<p><tt><span class=\"pre\">pandoc-img-glob</span></tt> solves this problem by just searching recursivly\nthrough the path find images matching the given filenames and providing\npandoc (and pandoc only) with the absolute paths. This allows for both:\nBeautiful pdfs and GitHub previews using the updated Makefile.</p>\n<pre><span class=\"nf\">fixedbook</span><span class=\"o\">:</span>\n    pandoc --filter pandoc-img-glob -o book.pdf section*/*.md\n</pre>\n<p>However, this filter becomes slow if you have very deep and complex\nfile trees, and if you have multiple images with the same name, it\nwill just silently use the first it finds.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Just use pip to install it from <a href=\"https://pypi.python.org/pypi/pandoc-img-glob\" rel=\"nofollow\">pypi</a></p>\n<pre>pip install pandoc-img-glob\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2677723, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2f019dacb7e622c15ba3ffd85b89d70d", "sha256": "8da185a137cda7b7674b1559b290a7710d4f7511a415df2a0e873ff7d0a2e72d"}, "downloads": -1, "filename": "pandoc-img-glob-0.1.0.tar.gz", "has_sig": true, "md5_digest": "2f019dacb7e622c15ba3ffd85b89d70d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3546, "upload_time": "2017-02-24T10:10:04", "upload_time_iso_8601": "2017-02-24T10:10:04.756436Z", "url": "https://files.pythonhosted.org/packages/b4/56/a64fe5572dca74276137ec3d0d49d07309db4c1ab56085378792b6469b9e/pandoc-img-glob-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "47a44ec2368c44aaee903a738a4f32d1", "sha256": "dac78f442a3a23d240fae6844efdebf7ce90ce56501570fcefd8a67fad292003"}, "downloads": -1, "filename": "pandoc-img-glob-0.1.1.tar.gz", "has_sig": true, "md5_digest": "47a44ec2368c44aaee903a738a4f32d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3606, "upload_time": "2017-03-01T15:02:51", "upload_time_iso_8601": "2017-03-01T15:02:51.168948Z", "url": "https://files.pythonhosted.org/packages/7b/75/d5064c96fcefae69172afd2fd350134ea3f6f3aeff76fd569018fdc5b3e2/pandoc-img-glob-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d6ecbb510bdec874c49dd7b7c6af8db9", "sha256": "40042dbd3a7497c7ba8adb65ff37e96178aa20a3076df6cec6af719f722cfdf7"}, "downloads": -1, "filename": "pandoc-img-glob-0.1.3.tar.gz", "has_sig": true, "md5_digest": "d6ecbb510bdec874c49dd7b7c6af8db9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3686, "upload_time": "2017-03-02T09:19:46", "upload_time_iso_8601": "2017-03-02T09:19:46.768019Z", "url": "https://files.pythonhosted.org/packages/bc/a0/02bbb3a19b71325db4d6d0b7334d9c3ab3e6718c299370ce177c2283846d/pandoc-img-glob-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6ecbb510bdec874c49dd7b7c6af8db9", "sha256": "40042dbd3a7497c7ba8adb65ff37e96178aa20a3076df6cec6af719f722cfdf7"}, "downloads": -1, "filename": "pandoc-img-glob-0.1.3.tar.gz", "has_sig": true, "md5_digest": "d6ecbb510bdec874c49dd7b7c6af8db9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3686, "upload_time": "2017-03-02T09:19:46", "upload_time_iso_8601": "2017-03-02T09:19:46.768019Z", "url": "https://files.pythonhosted.org/packages/bc/a0/02bbb3a19b71325db4d6d0b7334d9c3ab3e6718c299370ce177c2283846d/pandoc-img-glob-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:23 2020"}