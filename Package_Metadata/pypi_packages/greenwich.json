{"info": {"author": "Brian Galey", "author_email": "bkgaley@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "Greenwich\n=========\n\n.. image:: https://travis-ci.org/bkg/greenwich.svg?branch=master\n    :target: https://travis-ci.org/bkg/greenwich\n.. image:: https://coveralls.io/repos/bkg/greenwich/badge.png?branch=master\n    :target: https://coveralls.io/r/bkg/greenwich?branch=master \n\nAdding Python conveniences to the wonderful world of `GDAL <http://www.gdal.org/>`_.\n\nGreenwich provides a wrapper for the GDAL SWIG Python bindings. The focus here is on\nproviding some higher level behavior mainly to the raster side of the GDAL/OGR fence.\n\nInstallation\n------------\n\nThe GDAL Python bindings need a little assistance in finding the pertinent\nheaders when building from within a virtualenv. If the usual ``pip install greenwich``\nfails, specify the GDAL header directory wherever that may be for you such as:\n\n.. code-block:: sh\n\n    CFLAGS=-I/usr/include/gdal pip install greenwich\n\nBasic Usage\n-----------\n\nOpen any raster data set you have lying around, perhaps some climate data from\n`WorldClim <http://worldclim.org/>`_.\n\n.. code-block:: python\n\n    from greenwich import Geometry, Raster\n    from greenwich.io import MemFileIO\n\n    with Raster('cc85tn701.tif') as tmax:\n        # Save as a NetCDF file.\n        tmax.save('cc85tn701.nc')\n        geom = Geometry(\n            wkt='POLYGON((-123 47,-123 48,-122 49,-121 48,-121 47,-123 47))',\n            srs=4326)\n        # Clip the raster with a geometry and save the result as a GeoTIFF.\n        with tmax.clip(geom) as clipped:\n            clipped.save('clipped.tif')\n\n        # Return a NumPy MaskedArray using nodata values for a given bounding box.\n        m = tmax.masked_array((-120, 38, -118, 44))\n\n        # Convert to an Erdas Imagine file in memory.\n        imgio = MemFileIO(suffix='.img')\n        tmax.save(imgio)\n        imgdata = imgio.read()\n        imgio.close()\n\n        # Iterate over bands and retrieve the maximum pixel values.\n        maxvals = [band.GetMaximum() for band in tmax]\n\nRetrieve a NumPy array for a specific area by providing the extent as a 4-tuple of min/max x, y coordinates::\n\n    arr = tmax.array((-120, 38, -118, 44))\n\nReproject the raster to another coordinate system. You may pass EPSG codes, WKT,\nproj4 formatted projections, or a SpatialReference instance as an argument::\n\n    warped = tmax.warp(3857)\n\nPerhaps you would like to resample your image to a new resolution which can be\nachieved with::\n\n    resampled = tmax.resample((100, 100))\n\nRaster instances still behave like a gdal.Dataset::\n\n    meta = tmax.GetMetadata()\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bkg/greenwich", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "greenwich", "package_url": "https://pypi.org/project/greenwich/", "platform": "", "project_url": "https://pypi.org/project/greenwich/", "project_urls": {"Homepage": "https://github.com/bkg/greenwich"}, "release_url": "https://pypi.org/project/greenwich/0.8.0/", "requires_dist": null, "requires_python": "", "summary": "A GDAL wrapper with Python conveniences", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/bkg/greenwich\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/bkg/greenwich.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcd41424d015bbe111f8a8c308d75e2b14259431/68747470733a2f2f7472617669732d63692e6f72672f626b672f677265656e776963682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/bkg/greenwich?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/bkg/greenwich/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b3a111d4c1156ff326e27cc1b841f0548809ba0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f626b672f677265656e776963682f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<p>Adding Python conveniences to the wonderful world of <a href=\"http://www.gdal.org/\" rel=\"nofollow\">GDAL</a>.</p>\n<p>Greenwich provides a wrapper for the GDAL SWIG Python bindings. The focus here is on\nproviding some higher level behavior mainly to the raster side of the GDAL/OGR fence.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The GDAL Python bindings need a little assistance in finding the pertinent\nheaders when building from within a virtualenv. If the usual <tt>pip install greenwich</tt>\nfails, specify the GDAL header directory wherever that may be for you such as:</p>\n<pre><span class=\"nv\">CFLAGS</span><span class=\"o\">=</span>-I/usr/include/gdal pip install greenwich\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>Open any raster data set you have lying around, perhaps some climate data from\n<a href=\"http://worldclim.org/\" rel=\"nofollow\">WorldClim</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">greenwich</span> <span class=\"kn\">import</span> <span class=\"n\">Geometry</span><span class=\"p\">,</span> <span class=\"n\">Raster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">greenwich.io</span> <span class=\"kn\">import</span> <span class=\"n\">MemFileIO</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Raster</span><span class=\"p\">(</span><span class=\"s1\">'cc85tn701.tif'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">tmax</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Save as a NetCDF file.</span>\n    <span class=\"n\">tmax</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'cc85tn701.nc'</span><span class=\"p\">)</span>\n    <span class=\"n\">geom</span> <span class=\"o\">=</span> <span class=\"n\">Geometry</span><span class=\"p\">(</span>\n        <span class=\"n\">wkt</span><span class=\"o\">=</span><span class=\"s1\">'POLYGON((-123 47,-123 48,-122 49,-121 48,-121 47,-123 47))'</span><span class=\"p\">,</span>\n        <span class=\"n\">srs</span><span class=\"o\">=</span><span class=\"mi\">4326</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Clip the raster with a geometry and save the result as a GeoTIFF.</span>\n    <span class=\"k\">with</span> <span class=\"n\">tmax</span><span class=\"o\">.</span><span class=\"n\">clip</span><span class=\"p\">(</span><span class=\"n\">geom</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">clipped</span><span class=\"p\">:</span>\n        <span class=\"n\">clipped</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'clipped.tif'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Return a NumPy MaskedArray using nodata values for a given bounding box.</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">tmax</span><span class=\"o\">.</span><span class=\"n\">masked_array</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">120</span><span class=\"p\">,</span> <span class=\"mi\">38</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">118</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># Convert to an Erdas Imagine file in memory.</span>\n    <span class=\"n\">imgio</span> <span class=\"o\">=</span> <span class=\"n\">MemFileIO</span><span class=\"p\">(</span><span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"s1\">'.img'</span><span class=\"p\">)</span>\n    <span class=\"n\">tmax</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">imgio</span><span class=\"p\">)</span>\n    <span class=\"n\">imgdata</span> <span class=\"o\">=</span> <span class=\"n\">imgio</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n    <span class=\"n\">imgio</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Iterate over bands and retrieve the maximum pixel values.</span>\n    <span class=\"n\">maxvals</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">band</span><span class=\"o\">.</span><span class=\"n\">GetMaximum</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">band</span> <span class=\"ow\">in</span> <span class=\"n\">tmax</span><span class=\"p\">]</span>\n</pre>\n<p>Retrieve a NumPy array for a specific area by providing the extent as a 4-tuple of min/max x, y coordinates:</p>\n<pre>arr = tmax.array((-120, 38, -118, 44))\n</pre>\n<p>Reproject the raster to another coordinate system. You may pass EPSG codes, WKT,\nproj4 formatted projections, or a SpatialReference instance as an argument:</p>\n<pre>warped = tmax.warp(3857)\n</pre>\n<p>Perhaps you would like to resample your image to a new resolution which can be\nachieved with:</p>\n<pre>resampled = tmax.resample((100, 100))\n</pre>\n<p>Raster instances still behave like a gdal.Dataset:</p>\n<pre>meta = tmax.GetMetadata()\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3342208, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fe0f4f1119e1d07dff4d7100deb73636", "sha256": "23f4e340c27650dc618042c776f1b0b12dcd3d9144e2cea73a2ef796dd86cff8"}, "downloads": -1, "filename": "greenwich-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fe0f4f1119e1d07dff4d7100deb73636", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12531, "upload_time": "2014-07-14T05:36:11", "upload_time_iso_8601": "2014-07-14T05:36:11.416772Z", "url": "https://files.pythonhosted.org/packages/88/33/00355fcc3d0cd40674d44f37d2eafa5277b833502b719a9b20ac9eb5536c/greenwich-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f5c5e357681543a91a4fba82504c17f1", "sha256": "2ed5bf082ae345a70428af18a8e46605e56e24aef0fe2318cd0c924b0a4c4d04"}, "downloads": -1, "filename": "greenwich-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f5c5e357681543a91a4fba82504c17f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13712, "upload_time": "2014-08-27T23:35:07", "upload_time_iso_8601": "2014-08-27T23:35:07.887698Z", "url": "https://files.pythonhosted.org/packages/2d/60/0a4a9e1172abbbbb78fc22943f653bd8d71910f59275687dda1738d8b668/greenwich-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "6dbd9df13fbef4119fcc5a7024812377", "sha256": "c1b442af9d88a97aa9eb038f5f20778be7ddfc2b494d8d2e85c217b86df33065"}, "downloads": -1, "filename": "greenwich-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6dbd9df13fbef4119fcc5a7024812377", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14123, "upload_time": "2014-11-19T20:33:59", "upload_time_iso_8601": "2014-11-19T20:33:59.070020Z", "url": "https://files.pythonhosted.org/packages/80/98/b333328d5614b593dad12e04b3641fae5fc26da3d777279148e95c576690/greenwich-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "80071ccfc36f7e63d98e317c9128f6b4", "sha256": "0da1b5d2e95d0070505ef47024b73e230a6c21fb04bf0983c00937d54dee55c8"}, "downloads": -1, "filename": "greenwich-0.4.0.tar.gz", "has_sig": false, "md5_digest": "80071ccfc36f7e63d98e317c9128f6b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14818, "upload_time": "2015-05-15T20:42:09", "upload_time_iso_8601": "2015-05-15T20:42:09.245543Z", "url": "https://files.pythonhosted.org/packages/f1/a7/9a22fe81011dfa0e90ae7382e86dfb01d5bd594107f95d95af1c78b41d5e/greenwich-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "a02ca1f0d32974de0eec4eddea50d599", "sha256": "4912056649c392c41cb39bb8897d21a5781de300bd6d86b77bed01febf1dec88"}, "downloads": -1, "filename": "greenwich-0.4.1.tar.gz", "has_sig": false, "md5_digest": "a02ca1f0d32974de0eec4eddea50d599", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14835, "upload_time": "2015-08-12T04:36:41", "upload_time_iso_8601": "2015-08-12T04:36:41.744956Z", "url": "https://files.pythonhosted.org/packages/f6/9d/6bcb537b7220eacf74068db196adc900c4fb9e9e6e574ae24d3dfae206ee/greenwich-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "303b919fd6743a405a4d7f1f07ca6905", "sha256": "d30885dc8de65e0d9f6f2b5d39ed2d803ce804ed262163fcf7515444b692e232"}, "downloads": -1, "filename": "greenwich-0.4.2.tar.gz", "has_sig": false, "md5_digest": "303b919fd6743a405a4d7f1f07ca6905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14840, "upload_time": "2015-08-12T18:23:19", "upload_time_iso_8601": "2015-08-12T18:23:19.876204Z", "url": "https://files.pythonhosted.org/packages/5b/e0/85626ab893e64377a89ab02e767f2dff9a9350590f3bca7c8b5a55bb02fc/greenwich-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "63fe4db4d40153fbec32697cb6ed7307", "sha256": "bcb440763143180b1742c6a54937ff0a22c1433c440a061439e50090d1745342"}, "downloads": -1, "filename": "greenwich-0.5.0.tar.gz", "has_sig": false, "md5_digest": "63fe4db4d40153fbec32697cb6ed7307", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18121, "upload_time": "2016-04-04T21:02:01", "upload_time_iso_8601": "2016-04-04T21:02:01.900779Z", "url": "https://files.pythonhosted.org/packages/77/ff/98e12d3fa5c4e7fd99b6a0aea25fdda22b019688d060ebda2eef67e1d0b6/greenwich-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "599be705fc89b162edce827282178f72", "sha256": "d1c8e9bb48133e2bc62dc04a5ef50b47559366d84e3fd1811a4759cafb262819"}, "downloads": -1, "filename": "greenwich-0.5.1.tar.gz", "has_sig": false, "md5_digest": "599be705fc89b162edce827282178f72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15054, "upload_time": "2016-04-21T23:37:25", "upload_time_iso_8601": "2016-04-21T23:37:25.493898Z", "url": "https://files.pythonhosted.org/packages/5a/0c/11d5c80a7e3326ee67d4906eebfa14639b4dec7e79330e6f8dfe7bf5aad1/greenwich-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "154de619df883ed3666fbbc52607d41e", "sha256": "4bbb08fbfd183912bb61e01ed229cf17e2c179f8e7791a24e2e574ad6de56d9c"}, "downloads": -1, "filename": "greenwich-0.6.0.tar.gz", "has_sig": false, "md5_digest": "154de619df883ed3666fbbc52607d41e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15181, "upload_time": "2016-06-23T17:32:57", "upload_time_iso_8601": "2016-06-23T17:32:57.361522Z", "url": "https://files.pythonhosted.org/packages/2f/53/cb09898b6ee4478704ea0c925505b2b555e45239e4914576fba918248da7/greenwich-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "f295bf4713fb2c5f70f66bf93bfba94c", "sha256": "10ac6b14c4a3cfadad1f131577c7dbef4063f60a369ce0cfb403786a9a74d86c"}, "downloads": -1, "filename": "greenwich-0.6.1.tar.gz", "has_sig": false, "md5_digest": "f295bf4713fb2c5f70f66bf93bfba94c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15189, "upload_time": "2016-06-24T00:28:53", "upload_time_iso_8601": "2016-06-24T00:28:53.980933Z", "url": "https://files.pythonhosted.org/packages/d8/e7/419dce3f30b8b85904ed3a0a3b23113160e504c466731f7bfcca22721d80/greenwich-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "d4505b92bf771d52d9d820c7c233886d", "sha256": "d9a8c5b6d22da4c74bb2b296957b1e5f39a2dfea12fc2024791e8f9d598ae5b7"}, "downloads": -1, "filename": "greenwich-0.6.2.tar.gz", "has_sig": false, "md5_digest": "d4505b92bf771d52d9d820c7c233886d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15186, "upload_time": "2016-08-28T19:41:33", "upload_time_iso_8601": "2016-08-28T19:41:33.725469Z", "url": "https://files.pythonhosted.org/packages/d0/b6/d211edcd5d8704e13a6b7bf22424d444e39560f0ee8995c0c388b8220e30/greenwich-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "aa00a3d9aee6386da83ad05effb9f185", "sha256": "0dfd7bc9a4f43c618f6364987b14dc8a4bdd9ed98522031c7e3f1bc6c2202267"}, "downloads": -1, "filename": "greenwich-0.6.3.tar.gz", "has_sig": false, "md5_digest": "aa00a3d9aee6386da83ad05effb9f185", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15326, "upload_time": "2016-10-04T20:18:14", "upload_time_iso_8601": "2016-10-04T20:18:14.171563Z", "url": "https://files.pythonhosted.org/packages/3e/c9/833ddf7cd8626679c910b8697799777ec6c6b7b5d84ab6eadab41372a5ae/greenwich-0.6.3.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "b278eca31e5423e8c24f05b830d409f6", "sha256": "c0ac161b38eba6123b715924ebf99bcb14488369956d1c34fd7e868947cf9ac3"}, "downloads": -1, "filename": "greenwich-0.7.0.tar.gz", "has_sig": false, "md5_digest": "b278eca31e5423e8c24f05b830d409f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15771, "upload_time": "2016-10-14T21:24:37", "upload_time_iso_8601": "2016-10-14T21:24:37.947777Z", "url": "https://files.pythonhosted.org/packages/4e/c0/af46a207e12a9d68deaeb33f7b409478b0f6a0da59f80363e818e75aca49/greenwich-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "c37083cdbeffd4cedbbe9896d9363629", "sha256": "43a8eb308b2dcf22ed17ccf315ac4bf288a4c0cd98b3b442e74c692597f06fa4"}, "downloads": -1, "filename": "greenwich-0.7.1.tar.gz", "has_sig": false, "md5_digest": "c37083cdbeffd4cedbbe9896d9363629", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15782, "upload_time": "2016-12-08T01:44:38", "upload_time_iso_8601": "2016-12-08T01:44:38.001373Z", "url": "https://files.pythonhosted.org/packages/85/eb/d1960b2ac96324f6059b753e85e5a90c3792650367d29465b20d1d6a256b/greenwich-0.7.1.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "94c1aeeca44351b9f971d7176638827b", "sha256": "8517dbb7da91964751e671adcd184a7954f70a1cbb0db30bc68be86808d464c4"}, "downloads": -1, "filename": "greenwich-0.8.0.tar.gz", "has_sig": false, "md5_digest": "94c1aeeca44351b9f971d7176638827b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16532, "upload_time": "2017-11-17T18:42:35", "upload_time_iso_8601": "2017-11-17T18:42:35.550324Z", "url": "https://files.pythonhosted.org/packages/c7/75/526521d575cc67452936acc61036ee10161fa23f0abdfcfd9ebabfac81af/greenwich-0.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "94c1aeeca44351b9f971d7176638827b", "sha256": "8517dbb7da91964751e671adcd184a7954f70a1cbb0db30bc68be86808d464c4"}, "downloads": -1, "filename": "greenwich-0.8.0.tar.gz", "has_sig": false, "md5_digest": "94c1aeeca44351b9f971d7176638827b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16532, "upload_time": "2017-11-17T18:42:35", "upload_time_iso_8601": "2017-11-17T18:42:35.550324Z", "url": "https://files.pythonhosted.org/packages/c7/75/526521d575cc67452936acc61036ee10161fa23f0abdfcfd9ebabfac81af/greenwich-0.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:18 2020"}