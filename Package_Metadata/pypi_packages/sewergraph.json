{"info": {"author": "Adam Erispaha", "author_email": "aerispaha@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6"], "description": "# sewergraph\n*v0.1.2*\n\n[![Build status](https://ci.appveyor.com/api/projects/status/tjxw4f4vhm79v3fu/branch/master?svg=true)](https://ci.appveyor.com/project/aerispaha/sewergraph/branch/master)\n[![Build Status](https://travis-ci.com/aerispaha/sewergraph.svg?branch=master)](https://travis-ci.com/aerispaha/sewergraph)\n\nBuilding upon Networkx, this package provides tools for analysis and manipulation\nof sewer network data.\n\n## Goals\nProvide graph functions to tackle analytical problems typical in sewer\ncollections systems:  \n- traverse sewer networks up/downstream\n- accumulation calculations\n- downstream choke-point analysis\n- data gap handling (within reason, folks)\n- design capacity analysis\n\n## Installation\nInspired by [osmnx](https://github.com/gboeing/osmnx), sewergraph depends on [Networkx](https://github.com/networkx/networkx) and [Pandas](https://pandas.pydata.org/). For most use cases, installation is easy:\n```bash\n$ pip install sewergraph\n```\n\nAdditional functionality is provided that makes use of [GeoPandas](https://github.com/geopandas/geopandas),\nscipy and Shapely. It's recommended to install GeoPandas with conda first, then install\nsewergraph via pip:\n\n```bash\n$ conda install geopandas\n$ pip install sewergraph\n```\nIf you have ArcMap installed, be sure that the GeoPandas installation doesn't conflict with `arcpy`. To avoid risks, install sewergraph in a `conda` environment:\n\n```bash\n$ conda create --name myenv\n$ activate myenv #enter the new environment\n$ conda install geopandas\n$ pip install sewergraph\n```\n\n\n### Examples\nCreate a Networkx DiGraph with a shapefile of a sewer network.\n```python\nimport sewergraph as sg\n\n#read shapefile into DiGraph\nshapefile_path = r'path/to/sewers.shp'\nG = sg.graph_from_shp(shapefile_path)\n```\n\nAttributes of each sewer segment are stored as edge data. Geometry is parse and stored in the `geometry` attribute along with whatever other fields exist in the shapefile.\n```python\n#sewer connecting node 0 to node 1\nprint(G[0][1])\n```\n```bash\n{\n  'OBJECTID': 115081,\n  'STREET': 'ADAINVILLE DR',\n  'ShpName': 'sample_sewer_network_1',\n  'diameter': 8,\n  'facilityid': 'BCE7B25E',\n  'geometry': <shapely.geometry.linestring.LineString at 0x12a6caf0>,\n  'height': 0,\n  'length': 164.758,\n  'local_area': 39449.474,\n  'material': 'VCP',\n  'pipeshape': 'CIR',\n  'slope': 0.01,\n  'width': 0\n}\n```\n\nCalculate the total drainage area at each sewer by accumulating `local_area` from the top to bottom of the network (i.e. sewershed).\n\n```python\n#accumulate drainage area\nG = sg.accumulate_downstream(G, 'local_area', 'total_area')\n\n#convert to GeoDataFrame and sort the sewers by total_area\nsewers = sg.gdf_from_graph(G)\nsewers = sewers.sort_values(by = 'total_area', ascending=False)\nsewers.head()\n```\n\n<div>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_area</th>\n      <th>OBJECTID</th>\n      <th>facilityid</th>\n      <th>pipeshape</th>\n      <th>diameter</th>\n      <th>height</th>\n      <th>width</th>\n      <th>length</th>\n      <th>slope</th>\n      <th>material</th>\n      <th>STREET</th>\n      <th>local_area</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>19</th>\n      <td>4,233,504</td>\n      <td>112545</td>\n      <td>A58064DF</td>\n      <td>BOX</td>\n      <td>0</td>\n      <td>12</td>\n      <td>16</td>\n      <td>327.279370</td>\n      <td>0.0075</td>\n      <td>RCP</td>\n      <td>None</td>\n      <td>119043.524941</td>\n      <td>LINESTRING (6558821.45028765 2032961.24586616,...</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>4,114,461</td>\n      <td>112546</td>\n      <td>5890D18F</td>\n      <td>BOX</td>\n      <td>0</td>\n      <td>12</td>\n      <td>16</td>\n      <td>318.081402</td>\n      <td>0.0100</td>\n      <td>RCP</td>\n      <td>None</td>\n      <td>171961.403740</td>\n      <td>LINESTRING (6558826.08945222 2032643.19829701,...</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>3,942,499</td>\n      <td>112563</td>\n      <td>12FF7372</td>\n      <td>BOX</td>\n      <td>0</td>\n      <td>12</td>\n      <td>16</td>\n      <td>131.352534</td>\n      <td>0.0100</td>\n      <td>RCP</td>\n      <td>None</td>\n      <td>16557.605522</td>\n      <td>LINESTRING (6558821.78250872 2032511.9163921, ...</td>\n    </tr>\n\n  </tbody>\n</table>\n</div>\n\nMore functions are provided for calculating basic hydraulic capacity, outfall loading, flow splits, travel time, and identifying downstream constrictions from every point of the network.  \n\n```python\n#perform basic sewer capacity calculations (full flow Mannings capacity)\nG = hhcalcs_on_network(G)\n\n#id flow split sewers and calculate split fractions\nG = analyze_flow_splits(G)\n\n#accumulating travel times\nG = accumulate_travel_time(G)\n```\n\n## Running Tests\nTest are located in the sewergraph > tests directory and are run with `pytest`.  \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aerispaha/sewergraph", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "sewergraph", "package_url": "https://pypi.org/project/sewergraph/", "platform": "OS Independent", "project_url": "https://pypi.org/project/sewergraph/", "project_urls": {"Homepage": "https://github.com/aerispaha/sewergraph"}, "release_url": "https://pypi.org/project/sewergraph/0.1.2/", "requires_dist": ["pandas", "networkx (>=2)", "numpy"], "requires_python": "", "summary": "Tools for graph calculations on sewer networks", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sewergraph</h1>\n<p><em>v0.1.2</em></p>\n<p><a href=\"https://ci.appveyor.com/project/aerispaha/sewergraph/branch/master\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4b0c458e41cc658453ce767ffc7c61f33e5243e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f746a787734663476686d3739763366752f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://travis-ci.com/aerispaha/sewergraph\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bfc3df62ff23ae45cc19b6ee6711c7111e541d6/68747470733a2f2f7472617669732d63692e636f6d2f6165726973706168612f736577657267726170682e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Building upon Networkx, this package provides tools for analysis and manipulation\nof sewer network data.</p>\n<h2>Goals</h2>\n<p>Provide graph functions to tackle analytical problems typical in sewer\ncollections systems:</p>\n<ul>\n<li>traverse sewer networks up/downstream</li>\n<li>accumulation calculations</li>\n<li>downstream choke-point analysis</li>\n<li>data gap handling (within reason, folks)</li>\n<li>design capacity analysis</li>\n</ul>\n<h2>Installation</h2>\n<p>Inspired by <a href=\"https://github.com/gboeing/osmnx\" rel=\"nofollow\">osmnx</a>, sewergraph depends on <a href=\"https://github.com/networkx/networkx\" rel=\"nofollow\">Networkx</a> and <a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">Pandas</a>. For most use cases, installation is easy:</p>\n<pre>$ pip install sewergraph\n</pre>\n<p>Additional functionality is provided that makes use of <a href=\"https://github.com/geopandas/geopandas\" rel=\"nofollow\">GeoPandas</a>,\nscipy and Shapely. It's recommended to install GeoPandas with conda first, then install\nsewergraph via pip:</p>\n<pre>$ conda install geopandas\n$ pip install sewergraph\n</pre>\n<p>If you have ArcMap installed, be sure that the GeoPandas installation doesn't conflict with <code>arcpy</code>. To avoid risks, install sewergraph in a <code>conda</code> environment:</p>\n<pre>$ conda create --name myenv\n$ activate myenv <span class=\"c1\">#enter the new environment</span>\n$ conda install geopandas\n$ pip install sewergraph\n</pre>\n<h3>Examples</h3>\n<p>Create a Networkx DiGraph with a shapefile of a sewer network.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sewergraph</span> <span class=\"k\">as</span> <span class=\"nn\">sg</span>\n\n<span class=\"c1\">#read shapefile into DiGraph</span>\n<span class=\"n\">shapefile_path</span> <span class=\"o\">=</span> <span class=\"sa\">r</span><span class=\"s1\">'path/to/sewers.shp'</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">graph_from_shp</span><span class=\"p\">(</span><span class=\"n\">shapefile_path</span><span class=\"p\">)</span>\n</pre>\n<p>Attributes of each sewer segment are stored as edge data. Geometry is parse and stored in the <code>geometry</code> attribute along with whatever other fields exist in the shapefile.</p>\n<pre><span class=\"c1\">#sewer connecting node 0 to node 1</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n</pre>\n<pre><span class=\"o\">{</span>\n  <span class=\"s1\">'OBJECTID'</span>: <span class=\"m\">115081</span>,\n  <span class=\"s1\">'STREET'</span>: <span class=\"s1\">'ADAINVILLE DR'</span>,\n  <span class=\"s1\">'ShpName'</span>: <span class=\"s1\">'sample_sewer_network_1'</span>,\n  <span class=\"s1\">'diameter'</span>: <span class=\"m\">8</span>,\n  <span class=\"s1\">'facilityid'</span>: <span class=\"s1\">'BCE7B25E'</span>,\n  <span class=\"s1\">'geometry'</span>: &lt;shapely.geometry.linestring.LineString at 0x12a6caf0&gt;,\n  <span class=\"s1\">'height'</span>: <span class=\"m\">0</span>,\n  <span class=\"s1\">'length'</span>: <span class=\"m\">164</span>.758,\n  <span class=\"s1\">'local_area'</span>: <span class=\"m\">39449</span>.474,\n  <span class=\"s1\">'material'</span>: <span class=\"s1\">'VCP'</span>,\n  <span class=\"s1\">'pipeshape'</span>: <span class=\"s1\">'CIR'</span>,\n  <span class=\"s1\">'slope'</span>: <span class=\"m\">0</span>.01,\n  <span class=\"s1\">'width'</span>: <span class=\"m\">0</span>\n<span class=\"o\">}</span>\n</pre>\n<p>Calculate the total drainage area at each sewer by accumulating <code>local_area</code> from the top to bottom of the network (i.e. sewershed).</p>\n<pre><span class=\"c1\">#accumulate drainage area</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">accumulate_downstream</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span> <span class=\"s1\">'local_area'</span><span class=\"p\">,</span> <span class=\"s1\">'total_area'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#convert to GeoDataFrame and sort the sewers by total_area</span>\n<span class=\"n\">sewers</span> <span class=\"o\">=</span> <span class=\"n\">sg</span><span class=\"o\">.</span><span class=\"n\">gdf_from_graph</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">)</span>\n<span class=\"n\">sewers</span> <span class=\"o\">=</span> <span class=\"n\">sewers</span><span class=\"o\">.</span><span class=\"n\">sort_values</span><span class=\"p\">(</span><span class=\"n\">by</span> <span class=\"o\">=</span> <span class=\"s1\">'total_area'</span><span class=\"p\">,</span> <span class=\"n\">ascending</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">sewers</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n</pre>\n<div>\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>total_area</th>\n      <th>OBJECTID</th>\n      <th>facilityid</th>\n      <th>pipeshape</th>\n      <th>diameter</th>\n      <th>height</th>\n      <th>width</th>\n      <th>length</th>\n      <th>slope</th>\n      <th>material</th>\n      <th>STREET</th>\n      <th>local_area</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>19</th>\n      <td>4,233,504</td>\n      <td>112545</td>\n      <td>A58064DF</td>\n      <td>BOX</td>\n      <td>0</td>\n      <td>12</td>\n      <td>16</td>\n      <td>327.279370</td>\n      <td>0.0075</td>\n      <td>RCP</td>\n      <td>None</td>\n      <td>119043.524941</td>\n      <td>LINESTRING (6558821.45028765 2032961.24586616,...</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>4,114,461</td>\n      <td>112546</td>\n      <td>5890D18F</td>\n      <td>BOX</td>\n      <td>0</td>\n      <td>12</td>\n      <td>16</td>\n      <td>318.081402</td>\n      <td>0.0100</td>\n      <td>RCP</td>\n      <td>None</td>\n      <td>171961.403740</td>\n      <td>LINESTRING (6558826.08945222 2032643.19829701,...</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>3,942,499</td>\n      <td>112563</td>\n      <td>12FF7372</td>\n      <td>BOX</td>\n      <td>0</td>\n      <td>12</td>\n      <td>16</td>\n      <td>131.352534</td>\n      <td>0.0100</td>\n      <td>RCP</td>\n      <td>None</td>\n      <td>16557.605522</td>\n      <td>LINESTRING (6558821.78250872 2032511.9163921, ...</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<p>More functions are provided for calculating basic hydraulic capacity, outfall loading, flow splits, travel time, and identifying downstream constrictions from every point of the network.</p>\n<pre><span class=\"c1\">#perform basic sewer capacity calculations (full flow Mannings capacity)</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">hhcalcs_on_network</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#id flow split sewers and calculate split fractions</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">analyze_flow_splits</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#accumulating travel times</span>\n<span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">accumulate_travel_time</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">)</span>\n</pre>\n<h2>Running Tests</h2>\n<p>Test are located in the sewergraph &gt; tests directory and are run with <code>pytest</code>.</p>\n\n          </div>"}, "last_serial": 5615749, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a8bd518292c393eae4f7647f72342d69", "sha256": "1e990cd7d42a2ce8ef8ffd689cd0965f8fb2d3813426858654ca17ce36e5f737"}, "downloads": -1, "filename": "sewergraph-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a8bd518292c393eae4f7647f72342d69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16484, "upload_time": "2017-07-11T14:13:51", "upload_time_iso_8601": "2017-07-11T14:13:51.387923Z", "url": "https://files.pythonhosted.org/packages/82/13/9a91ebe1a9fdb1b19ad34209d15c9c157a360f4c993f5d2764ef3a1b8c15/sewergraph-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "53386e95b9381400e8fdd41559532da8", "sha256": "61aa6c77f8bf6eddade217d87d8e0af975859c419adeb5c1281fe9bfeb17642f"}, "downloads": -1, "filename": "sewergraph-0.0.2.tar.gz", "has_sig": false, "md5_digest": "53386e95b9381400e8fdd41559532da8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16504, "upload_time": "2017-07-11T14:36:27", "upload_time_iso_8601": "2017-07-11T14:36:27.651978Z", "url": "https://files.pythonhosted.org/packages/19/85/f22e7cbce9111162e53bf9ab57196036e6a6697589eeeaa37c0ecb867541/sewergraph-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "323eec11e12925712aa52d688700ffa7", "sha256": "1bc21a792f6fc34c008b9c9ea7083f264df6d6a3dfce68138dc03dd0c1990c89"}, "downloads": -1, "filename": "sewergraph-0.0.3.tar.gz", "has_sig": false, "md5_digest": "323eec11e12925712aa52d688700ffa7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16513, "upload_time": "2017-07-11T15:07:04", "upload_time_iso_8601": "2017-07-11T15:07:04.689988Z", "url": "https://files.pythonhosted.org/packages/72/52/7ea514d80d4ab4a1b05da43382dc720eed67b2e556bf1b53869992ca8934/sewergraph-0.0.3.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "bc645d30c1af5c4d42ad94f5c2afb3e0", "sha256": "3083db9d0062f4ddc754598e5ac1f0d09b2d18998e70e8226127f3923a3b2248"}, "downloads": -1, "filename": "sewergraph-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bc645d30c1af5c4d42ad94f5c2afb3e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22089, "upload_time": "2018-06-26T17:19:03", "upload_time_iso_8601": "2018-06-26T17:19:03.958553Z", "url": "https://files.pythonhosted.org/packages/12/49/d9739f59542e42dcbe973566eec80c89586129436d914151c73f49039577/sewergraph-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1a613d25547c2bb9da4f70e8fea8da75", "sha256": "3718e71dbc156fc386392ea1f33706f5d8922571f3a52dd33156820046cd6aea"}, "downloads": -1, "filename": "sewergraph-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1a613d25547c2bb9da4f70e8fea8da75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22046, "upload_time": "2018-06-26T20:42:26", "upload_time_iso_8601": "2018-06-26T20:42:26.528126Z", "url": "https://files.pythonhosted.org/packages/68/0e/d837e4de5fb0e518c860729cdd401f5ee5ac460fa5360bb8f5384806005c/sewergraph-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a693a82a75de8a2c88d9e3616a6bdf71", "sha256": "6b01d67267da537d7f6c00ae850105f3fe93580f5e549ab9ade89d216122fef2"}, "downloads": -1, "filename": "sewergraph-0.1.2-py3.7.egg", "has_sig": false, "md5_digest": "a693a82a75de8a2c88d9e3616a6bdf71", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 60363, "upload_time": "2019-07-31T21:44:19", "upload_time_iso_8601": "2019-07-31T21:44:19.824173Z", "url": "https://files.pythonhosted.org/packages/b1/00/e37966a26755b57920372e96e1409acb895136fe04d25b618fe8d3bd59da/sewergraph-0.1.2-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "989da629a29c4b5e08d3b9196390c287", "sha256": "0456ab105af97d658ebc61ff86e196c6f5fc685633f420c233abea340bbde7c9"}, "downloads": -1, "filename": "sewergraph-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "989da629a29c4b5e08d3b9196390c287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28115, "upload_time": "2019-07-31T21:44:16", "upload_time_iso_8601": "2019-07-31T21:44:16.303908Z", "url": "https://files.pythonhosted.org/packages/24/98/533cca598c102aba23c0724244034e5296291b3513db8131088edd72076d/sewergraph-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f16f839daf0ce0eccb98f00e29ad5e6", "sha256": "9ff5fb4857167da34f6a217fcf7f4ff389287d627e6e8c40e69ccdf3d6556968"}, "downloads": -1, "filename": "sewergraph-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8f16f839daf0ce0eccb98f00e29ad5e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26525, "upload_time": "2019-07-31T21:44:21", "upload_time_iso_8601": "2019-07-31T21:44:21.076107Z", "url": "https://files.pythonhosted.org/packages/89/56/b15a24029006804dff1ee047612b60aad046666d597c48893884355edc28/sewergraph-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a693a82a75de8a2c88d9e3616a6bdf71", "sha256": "6b01d67267da537d7f6c00ae850105f3fe93580f5e549ab9ade89d216122fef2"}, "downloads": -1, "filename": "sewergraph-0.1.2-py3.7.egg", "has_sig": false, "md5_digest": "a693a82a75de8a2c88d9e3616a6bdf71", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 60363, "upload_time": "2019-07-31T21:44:19", "upload_time_iso_8601": "2019-07-31T21:44:19.824173Z", "url": "https://files.pythonhosted.org/packages/b1/00/e37966a26755b57920372e96e1409acb895136fe04d25b618fe8d3bd59da/sewergraph-0.1.2-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "989da629a29c4b5e08d3b9196390c287", "sha256": "0456ab105af97d658ebc61ff86e196c6f5fc685633f420c233abea340bbde7c9"}, "downloads": -1, "filename": "sewergraph-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "989da629a29c4b5e08d3b9196390c287", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28115, "upload_time": "2019-07-31T21:44:16", "upload_time_iso_8601": "2019-07-31T21:44:16.303908Z", "url": "https://files.pythonhosted.org/packages/24/98/533cca598c102aba23c0724244034e5296291b3513db8131088edd72076d/sewergraph-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f16f839daf0ce0eccb98f00e29ad5e6", "sha256": "9ff5fb4857167da34f6a217fcf7f4ff389287d627e6e8c40e69ccdf3d6556968"}, "downloads": -1, "filename": "sewergraph-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8f16f839daf0ce0eccb98f00e29ad5e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26525, "upload_time": "2019-07-31T21:44:21", "upload_time_iso_8601": "2019-07-31T21:44:21.076107Z", "url": "https://files.pythonhosted.org/packages/89/56/b15a24029006804dff1ee047612b60aad046666d597c48893884355edc28/sewergraph-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:20 2020"}