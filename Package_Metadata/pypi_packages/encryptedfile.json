{"info": {"author": "thenoviceoof", "author_email": "thenoviceoof@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "=============\nencryptedfile\n=============\n\nWrite OpenPGP compatible-encrypted files like it ain't no thang.\nSymmetric ciphers only.\n\n-----\nUsage\n-----\n\nUse it by itself::\n\n    from encryptedfile import EncryptedFile\n    f = EncryptedFile(\"hello.gpg\", passphrase=getpass.getpass(),\n                      encryption_algo=EncryptedFile.ALGO_AES256)\n    f.write(\"super secret message\")\n    f.close()\n\nOr with something passed through it::\n\n    from encryptedfile import EncryptedFile\n    import PIL\n    img = ... # obtain image somehow\n    f = EncryptedFile(\"pic.png.gpg\", passphrase=getpass.getpass(),\n                      encryption_algo=EncryptedFile.ALGO_BLOWFISH)\n    img.save(f, \"png\")\n\nOr use it in a `PEP-343 <http://www.python.org/dev/peps/pep-0343/>`_\nblock::\n\n    from encryptedfile import EncryptedFile\n    with EncryptedFile(\"txt.gpg\", passphrase=getpass.getpass()) as f:\n         ... use f ...\n\n-------\nDecrypt\n-------\n\nLet's say we're using gpg::\n\n    gpg filename\n\nSupply the right passphrase, and tada!\n\n---\nFAQ\n---\n\n-  Do you support reading?\n\nNo, reading would mean supporting the bajillion ways that OpenPGP files\nhave been created throughout history. That would be a pain. I may at\nsome point in time support reading well enough to be able to read\nwhatever written by this module.\n\n-------\nLicense\n-------\n\n\"THE BEER-WARE LICENSE\" (Revision 42): wrote this file. As long as you\nretain this notice you can do whatever you want with this stuff. If we\nmeet some day, and you think this stuff is worth it, you can buy me a\nbeer in return", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thenoviceoof/encryptedfile", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "encryptedfile", "package_url": "https://pypi.org/project/encryptedfile/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/encryptedfile/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/thenoviceoof/encryptedfile"}, "release_url": "https://pypi.org/project/encryptedfile/1.1.1/", "requires_dist": null, "requires_python": null, "summary": "Easily encrypted OpenPGP compatible files with python", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Write OpenPGP compatible-encrypted files like it ain\u2019t no thang.\nSymmetric ciphers only.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Use it by itself:</p>\n<pre>from encryptedfile import EncryptedFile\nf = EncryptedFile(\"hello.gpg\", passphrase=getpass.getpass(),\n                  encryption_algo=EncryptedFile.ALGO_AES256)\nf.write(\"super secret message\")\nf.close()\n</pre>\n<p>Or with something passed through it:</p>\n<pre>from encryptedfile import EncryptedFile\nimport PIL\nimg = ... # obtain image somehow\nf = EncryptedFile(\"pic.png.gpg\", passphrase=getpass.getpass(),\n                  encryption_algo=EncryptedFile.ALGO_BLOWFISH)\nimg.save(f, \"png\")\n</pre>\n<p>Or use it in a <a href=\"http://www.python.org/dev/peps/pep-0343/\" rel=\"nofollow\">PEP-343</a>\nblock:</p>\n<pre>from encryptedfile import EncryptedFile\nwith EncryptedFile(\"txt.gpg\", passphrase=getpass.getpass()) as f:\n     ... use f ...\n</pre>\n</div>\n<div id=\"decrypt\">\n<h2>Decrypt</h2>\n<p>Let\u2019s say we\u2019re using gpg:</p>\n<pre>gpg filename\n</pre>\n<p>Supply the right passphrase, and tada!</p>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<ul>\n<li>Do you support reading?</li>\n</ul>\n<p>No, reading would mean supporting the bajillion ways that OpenPGP files\nhave been created throughout history. That would be a pain. I may at\nsome point in time support reading well enough to be able to read\nwhatever written by this module.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>\u201cTHE BEER-WARE LICENSE\u201d (Revision 42): wrote this file. As long as you\nretain this notice you can do whatever you want with this stuff. If we\nmeet some day, and you think this stuff is worth it, you can buy me a\nbeer in return</p>\n</div>\n\n          </div>"}, "last_serial": 763066, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "2e054e9a083f1ae997960fa1c85bc831", "sha256": "f00b47acae410179b191246c8fb22b33d1e1591236adf60ba609cbb102cb20ba"}, "downloads": -1, "filename": "encryptedfile-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2e054e9a083f1ae997960fa1c85bc831", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4871, "upload_time": "2013-01-28T03:09:53", "upload_time_iso_8601": "2013-01-28T03:09:53.657619Z", "url": "https://files.pythonhosted.org/packages/9c/3b/797e5926acbdf136de201af80b221e77a71e8ebae11108eb1d5440a41c73/encryptedfile-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "8961fbceeada447a7cfdb254f40d0f91", "sha256": "7bcdf1dcd787d3acd0830444874dd353f686e28657e23b3d6ccfc58c2a848bc5"}, "downloads": -1, "filename": "encryptedfile-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8961fbceeada447a7cfdb254f40d0f91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5100, "upload_time": "2013-01-28T12:34:35", "upload_time_iso_8601": "2013-01-28T12:34:35.526268Z", "url": "https://files.pythonhosted.org/packages/e2/6b/fbdd60b6b9fc9209f70546960bb9a273ade9efc1e1d82ff7efd953cf311d/encryptedfile-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1b2bc476dea0259d9a268a4cf364df94", "sha256": "cfa0b577284983017d7cd9204bb863d6b6b2af60ee7f3069a1c61c7e754c9c18"}, "downloads": -1, "filename": "encryptedfile-1.1.0.tar.gz", "has_sig": false, "md5_digest": "1b2bc476dea0259d9a268a4cf364df94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5028, "upload_time": "2013-01-30T04:27:39", "upload_time_iso_8601": "2013-01-30T04:27:39.631963Z", "url": "https://files.pythonhosted.org/packages/8f/0f/a3cff494fd89451cefff75bd511e2c8f269a113f901713fcd4ff4fa224b7/encryptedfile-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "a100d1fc7ee5afbc39dfc67c2cc2b602", "sha256": "84bbc0e8edde69611e2a1f5653f1ac49129f02955c7f1777d2ff0865a1c07c8e"}, "downloads": -1, "filename": "encryptedfile-1.1.1.tar.gz", "has_sig": false, "md5_digest": "a100d1fc7ee5afbc39dfc67c2cc2b602", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5052, "upload_time": "2013-01-31T03:51:37", "upload_time_iso_8601": "2013-01-31T03:51:37.160839Z", "url": "https://files.pythonhosted.org/packages/c0/93/6c764ace7b53652be79386dff9a8997dd4182b4662b85d9bd86a3dd69491/encryptedfile-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a100d1fc7ee5afbc39dfc67c2cc2b602", "sha256": "84bbc0e8edde69611e2a1f5653f1ac49129f02955c7f1777d2ff0865a1c07c8e"}, "downloads": -1, "filename": "encryptedfile-1.1.1.tar.gz", "has_sig": false, "md5_digest": "a100d1fc7ee5afbc39dfc67c2cc2b602", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5052, "upload_time": "2013-01-31T03:51:37", "upload_time_iso_8601": "2013-01-31T03:51:37.160839Z", "url": "https://files.pythonhosted.org/packages/c0/93/6c764ace7b53652be79386dff9a8997dd4182b4662b85d9bd86a3dd69491/encryptedfile-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:26 2020"}