{"info": {"author": "Henry Fredrick Schreiner III, Eduardo Rodrigues", "author_email": "henry.schreiner@cern.ch, eduardo.rodrigues@cern.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"], "description": "\n    <a href=\"https://decaylanguage.readthedocs.io/en/latest/\"><img align=\"left\" src=\"https://raw.githubusercontent.com/scikit-hep/decaylanguage/master/images/DecayLanguage.png\"></img></a><br>\n\n\n\nDecayLanguage implements a language to describe and convert particle decays\nbetween digital representations, effectively making it possible to interoperate\nseveral fitting programs. Particular interest is given to programs dedicated\nto amplitude analyses.\n\nDecayLanguage provides tools to parse so-called .dec decay files,\nand describe, manipulate and visualize decay chains.\n\n\n## Installation\n\nJust run the following:\n\n```bash\npip install decaylanguage\n```\n\nYou can use a virtual environment through pipenv or with `--user` if you know\nwhat those are. [Python 2.7 and 3.4+](http://docs.python-guide.org/en/latest/starting/installation) are supported.\n\n<details><summary>Dependencies: (click to expand)</summary><p>\n\nRequired and compatibility dependencies will be automatically installed by pip.\n\n### Required dependencies:\n\n-   [particle](https://github.com/scikit-hep/particle): PDG particle data and identification codes\n-   [Numpy](https://scipy.org/install.html): The numerical library for Python\n-   [pandas](https://pandas.pydata.org/): Tabular data in Python\n-   [attrs](https://github.com/python-attrs/attrs): DataClasses for Python\n-   [plumbum](https://github.com/tomerfiliba/plumbum): Command line tools\n-   [lark-parser](https://github.com/lark-parser/lark): A modern parsing library for Python\n\n### Python compatibility:\n-   [six](https://github.com/benjaminp/six): Compatibility library\n-   [pathlib2](https://github.com/mcmtroffaes/pathlib2) backport if using Python 2.7\n-   [enum34](https://bitbucket.org/stoneleaf/enum34) backport if using Python /< 3.5\n-   [importlib_resources](http://importlib-resources.readthedocs.io/en/latest/) backport if using Python /< 3.7\n\n\n### Recommended dependencies:\n-   [graphviz](https://gitlab.com/graphviz/graphviz/) to render (DOT\n    language) graph descriptions of decay chains.\n-   [pydot](https://github.com/pydot/pydot), a Python interface to\n    Graphviz's Dot language, used to visualize particle decay chains.\n</p></details>\n\n\n## Getting started\n\nThe [Binder demo](https://mybinder.org/v2/gh/scikit-hep/decaylanguage/master?urlpath=lab/tree/notebooks/DecayLanguageDemo.ipynb)\nis an excellent way to get started with `DecayLanguage`.\n\nThis is a quick user guide. For a full API docs, go [here](https://decaylanguage.readthedocs.io/en/latest/)\n(note that it is presently work-in-progress).\n\n### What is DecayLanguage?\n\n`DecayLanguage` is a set of tools for building and transforming particle\ndecays:\n\n1. It provides tools to parse so-called `.dec` decay files,\nand describe, manipulate and visualize the resulting decay chains.\n\n2. It implements a language to describe and convert particle decays\nbetween digital representations, effectively making it possible to interoperate\nseveral fitting programs. Particular interest is given to programs dedicated\nto amplitude analyses.\n\n### Particles\n\nParticles are a key component when dealing with decays.\nRefer to the [particle package](https://github.com/scikit-hep/particle)\nfor how to deal with particles and Monte Carlo particle identification codes.\n\n### Parse decay files\n\nDecay `.dec` files can be parsed simply with\n\n```python\nfrom decaylanguage import DecFileParser\n\nparser = DecFileParser('my-decay-file.dec')\nparser.parse()\n\n# Inspect what decays are defined\nparser.list_decay_mother_names()\n\n# Print decay modes, etc. ...\n```\n\nA copy of the master DECAY.DEC file used by the LHCb experiment is provided\n[here](https://github.com/scikit-hep/decaylanguage/tree/master/decaylanguage/data)\nfor convenience.\n\nThe `DecFileParser` class implements a series of methods giving access to all\ninformation stored in decay files: the decays themselves, particle name aliases,\ndefinitions of charge-conjugate particles, variable and Pythia-specific\ndefinitions, etc.\n\nIt can be handy to parse from a multi-line string rather than a file:\n\n```python\ns = \"\"\"Decay pi0\n0.988228297   gamma   gamma                   PHSP;\n0.011738247   e+      e-      gamma           PI0_DALITZ;\n0.000033392   e+      e+      e-      e-      PHSP;\n0.000000065   e+      e-                      PHSP;\nEnddecay\n\"\"\"\n\ndfp = DecFileParser.from_string(s)\ndfp.parse()\n```\n\n#### Advanced usage\n\nThe list of `.dec` file decay models known to the package can be inspected via\n\n```python\nfrom decaylanguage.dec import known_decay_models\n```\n\nSay you have to deal with a decay file containing a new model not yet on the list above.\nRunning the parser as usual will result in a `UnexpectedToken` exception.\nIt is nevertheless easy to deal with this issue; no need to wait for a new release.\nIt is just a matter of adding the model name to the list in `decaylanguage/data/decfile.lark`\n(or your private copy), see the line\n`MODEL_NAME.2 : \"BaryonPCR\"|\"BTO3PI_CP\"|\"BTOSLLALI\"|...`,\nand then proceed as usual apart from adding an extra line to call to `load_grammar`\nto specify the Lark grammar to use:\n\n```python\ndfp = DecFileParser('my_decfile.dec')\ndfp.load_grammar('path/to/my_updated_decfile.lark')\ndfp.parse()\n...\n```\n\nThis being said, please do submit a pull request to add new models,\nif you spot missing ones ...\n\n### Visualize decay files\n\nThe class `DecayChainViewer` allows the visualization of parsed decay chains:\n\n```python\nfrom decaylanguage import DecayChainViewer\n\n# Build the (dictionary-like) D*+ decay chain representation setting the D+ and D0 mesons to stable,\n# to avoid too cluttered an image\nd = dfp.build_decay_chains('D*+', stable_particles=['D+', 'D0'])\nDecayChainViewer(d)  # works in a notebook\n```\n\n![DecayChain D*](https://raw.githubusercontent.com/scikit-hep/decaylanguage/master/images/DecayChain_Dst_stable-D0-and-D+.png)\n\nThe actual graph is available as\n\n```python\n# ...\ndcv = DecayChainViewer(d)\ndcv.graph\n```\n\nmaking all `pydot.Dot` class properties and methods available, such as\n\n```python\ndcv.graph.write_pdf('mygraph.pdf')\n```\n\nIn the same way, all `pydot.Dot` class attributes are settable\nupon instantiation of `DecayChainViewer`:\n\n```python\ndcv = DecayChainViewer(chain, graph_name='TEST', rankdir='TB')\n```\n\n### Universal representation of decay chains\n\nA series of classes and methods have been designed to provide universal representations\nof particle decay chains of any complexity, and to provide the ability\nto convert between these representations.\nSpecifically, class- and dictionary-based representations have been implemented.\n\nAn example of a class-based representation of a decay chain is the following:\n\n```python\n>>> from decaylanguage import DaughtersDict, DecayMode, DecayChain\n>>>\n>>> dm1 = DecayMode(0.0124, 'K_S0 pi0', model='PHSP')\n>>> dm2 = DecayMode(0.692, 'pi+ pi-')\n>>> dm3 = DecayMode(0.98823, 'gamma gamma')\n>>> dc = DecayChain('D0', {'D0':dm1, 'K_S0':dm2, 'pi0':dm3})\n>>> dc\n<DecayChain: D0 -> K_S0 pi0 (2 sub-decays), BF=0.0124>\n```\n\nDecay chains can be visualised with the `DecayChainViewer` class making use\nof the dictionary representation `dc.to_dict()`, which is the simple\nrepresentation understood by `DecayChainViewer`, as see above:\n\n```python\nDecayChainViewer(dc.to_dict())\n```\n\nThe fact that 2 representations of particle decay chains are provided ensures\nthe following:\n\n1. Human-readable (class) and computer-efficient (dictionary) alternatives.\n2. Flexibility for parsing, manipulation and storage of decay chain information.\n\n### Decay modeling\n\nThe most common way to create a decay chain is to read in an [AmpGen]\nstyle syntax from a file or a string. You can use:\n\n```python\nfrom decaylanguage.modeling import AmplitudeChain\nlines, parameters, constants, states = AmplitudeChain.read_ampgen(text='''\nEventType D0 K- pi+ pi+ pi-\n\nD0[D]{K*(892)bar0{K-,pi+},rho(770)0{pi+,pi-}}                            0 1 0.1 0 1 0.1\n\nK(1460)bar-_mass  0 1460 1\nK(1460)bar-_width 0  250 1\n\na(1)(1260)+::Spline::Min 0.18412\na(1)(1260)+::Spline::Max 1.86869\na(1)(1260)+::Spline::N 34\n''')\n```\n\nHere, `lines` will be a list of AmplitudeChain lines (pretty print supported in Jupyter notebooks),\n`parameters` will be a table of parameters (ranged parameters not yet supported),\n`constants` will be a table of constants,\nand `states` will be the list of known states (EventType).\n\n#### Converters\n\nYou can output to a format (currently only [GooFit] supported, feel free\nto make a PR to add more). Use a subclass of DecayChain, in this case,\nGooFitChain. To use the [GooFit] output, type from the shell:\n\n```bash\npython -m decaylanguage -G goofit myinput.opts\n```\n\n## Acknowledgements\n\nSupport for this work was provided by the National Science Foundation\ncooperative agreement OAC-1450377 (DIANA/HEP) and OAC-1836650 (IRIS-HEP).\nAny opinions, findings, conclusions or recommendations expressed in this material\nare those of the authors and do not necessarily reflect the views of the National Science Foundation.\n\n\n[AmpGen]: https://gitlab.cern.ch/lhcb/Gauss/tree/LHCBGAUSS-1058.AmpGenDev/Gen/AmpGen\n[GooFit]: https://GooFit.github.io\n\n\n# Changelog\n\n## Version 0.6.1 (2020-01-15)\n\n* Parsing of decay files (aka .dec files):\n  - Simpifications in various methods of class ``DecFileParser``.\n  - A couple more tests added.\n* Minor fixes.\n\n\n## Version 0.6.0 (2020-01-10)\n\n* Parsing of decay files (aka .dec files):\n  - Master Belle II DECAY.DEC file added to the package.\n  - Certain ``DecFileParser`` class methods made more versatile.\n  - ``Lark`` parsing grammar file improved.\n* Universal representation of decay chains:\n  - Classes ``DecayChain``, ``DecayMode``, ``DaughtersDict`` and ``DecayChainViewer`` enhanced.\n* Dependencies and Python version support:\n  - Package dependent on ``Particle`` versions 0.9.*.\n  - Support for Python 3.8 added.\n\n\n## Version 0.5.3 (2019-10-28)\n\n* Dict-like representation of particle decay chains improved.\n* Documentation added to README.\n\n\n## Version 0.5.2 (2019-10-23)\n\n* Parsing of decay files (aka .dec files):\n  - New Belle II decay models added.\n* README updated to provide basic coverage of recent new features.\n* Clean-up of obsolete files.\n\n\n## Version 0.5.1 (2019-10-14)\n\n* Universal representation of decay chains:\n  - Classes ``DecayChain`` and ``DecayMode`` enhanced.\n  - Tests for class ``DecayChain`` added.\n* Parsing of decay files (aka .dec files):\n  - ``DecFileParser`` class extended.\n\n\n## Version 0.5.0 (2019-10-11)\n\n* Universal representation of decay chains:\n  - Class ``DecayChain`` introduced.\n  - Classes ``DaughtersDict`` and ``DecayMode`` enhanced.\n* Changes in API:\n  - ``DecFileParser.build_decay_chain()`` renamed to ``DecFileParser.build_decay_chains()``.\n* Package dependent on ``Particle`` package version 0.6.\n\n\n## Version 0.4.0 (2019-09-02)\n\n* Package dependent on ``Particle`` version 0.6.0.\n  Otherwise identical to version 0.3.2.\n\n\n## Version 0.3.2 (2019-08-29)\n\n* Parsing of decay files (aka .dec files):\n  - ``DecFileParser`` class extended to understand JETSET definitions.\n* Visualisation of decay chains:\n  - ``DecayChainViewer`` class simplified and improved.\n  - Decay chain DOT graphs now display HTML particle names.\n  - More tests.\n\n\n## Version 0.3.1 (2019-07-18)\n\n* Parsing of decay files (aka .dec files):\n  - Update to latest LHCb DECAY.DEC file.\n* Visualisation of decay chains:\n  - ``DecayChainViewer`` class made more robust.\n  - Better tests.\n* Miscellaneous:\n  - Demo notebook updated.\n  - README updated with latest package functionality.\n  - Python wheels generation added.\n  - Zenodo DOI badge added to README.\n\n\n## Version 0.3.0 (2019-06-26)\n\n* Decays modelling:\n  - Updates to Mint related particle data files.\n* Parsing of decay files (aka .dec files):\n  - Lark parser files added, for ``.dec`` decay files.\n  - ``DecFileParser`` class introduced, with documentation and test suite.\n  - Various ``.dec`` test decay files added.\n* Visualisation of decay chains:\n  - ``DecayChainViewer`` class introduced, with documentation and test suite.\n* Universal representation of decay chains:\n  - First \"building block\" classes ``DaughtersDict`` and ``DecayMode`` introduced,\n    with documentation and test suite.\n* Package dependencies:\n  - Package made dependent on Scikit-HEP's ``Particle`` package.\n  - Redundant code removed.\n* Continuous integration:\n  - CI with Azure pipelines introduced.\n  - CI with Travis and AppVeyor removed.\n* Miscellaneous:\n  - Demo notebook added, with a launcher for Binder.\n  - Copyright statements added to repository files.\n  - General clean-up and minor bug fixes.\n\n\n## Version 0.2.0 (2018-08-02)\n\n* First release as part of Scikit-HEP.\n* Using new data package with ``importlib_resources`` (or ``importlib.resources`` on Python 3.7).\n* Better docs and examples.\n* Some method renaming.\n* Generalized converter script.\n\n\n## Version 0.1.0 (2018-03-13)\n\n* First release on PyPI.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scikit-hep/decaylanguage", "keywords": "HEP,particle,decay,representation", "license": "BSD 3-Clause License", "maintainer": "The Scikit-HEP admins", "maintainer_email": "scikit-hep-admins@googlegroups.com", "name": "DecayLanguage", "package_url": "https://pypi.org/project/DecayLanguage/", "platform": "Any", "project_url": "https://pypi.org/project/DecayLanguage/", "project_urls": {"Homepage": "https://github.com/scikit-hep/decaylanguage"}, "release_url": "https://pypi.org/project/DecayLanguage/0.6.1/", "requires_dist": ["attrs (>=17.4)", "plumbum (>=1.6.6)", "numpy (>=1.12)", "pandas (>=0.22)", "six (>=1.11)", "lark-parser (>=0.6.3)", "particle (==0.9.*)", "cachetools ; python_version < \"3.3\"", "enum34 (>=1.1) ; python_version < \"3.4\"", "pathlib2 (>=2.3) ; python_version < \"3.5\"", "importlib-resources (>=1.0) ; python_version < \"3.7\"", "graphviz ; extra == 'notebook'", "pydot ; extra == 'notebook'", "pytest ; extra == 'test'", "pydot ; extra == 'test'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "A language to describe particle decays, and tools to work with them.", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre><code>&lt;a href=\"https://decaylanguage.readthedocs.io/en/latest/\"&gt;&lt;img align=\"left\" src=\"https://raw.githubusercontent.com/scikit-hep/decaylanguage/master/images/DecayLanguage.png\"&gt;&lt;/img&gt;&lt;/a&gt;&lt;br&gt;\n</code></pre>\n<p>DecayLanguage implements a language to describe and convert particle decays\nbetween digital representations, effectively making it possible to interoperate\nseveral fitting programs. Particular interest is given to programs dedicated\nto amplitude analyses.</p>\n<p>DecayLanguage provides tools to parse so-called .dec decay files,\nand describe, manipulate and visualize decay chains.</p>\n<h2>Installation</h2>\n<p>Just run the following:</p>\n<pre>pip install decaylanguage\n</pre>\n<p>You can use a virtual environment through pipenv or with <code>--user</code> if you know\nwhat those are. <a href=\"http://docs.python-guide.org/en/latest/starting/installation\" rel=\"nofollow\">Python 2.7 and 3.4+</a> are supported.</p>\n<details><summary>Dependencies: (click to expand)</summary><p>\n</p><p>Required and compatibility dependencies will be automatically installed by pip.</p>\n<h3>Required dependencies:</h3>\n<ul>\n<li><a href=\"https://github.com/scikit-hep/particle\" rel=\"nofollow\">particle</a>: PDG particle data and identification codes</li>\n<li><a href=\"https://scipy.org/install.html\" rel=\"nofollow\">Numpy</a>: The numerical library for Python</li>\n<li><a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">pandas</a>: Tabular data in Python</li>\n<li><a href=\"https://github.com/python-attrs/attrs\" rel=\"nofollow\">attrs</a>: DataClasses for Python</li>\n<li><a href=\"https://github.com/tomerfiliba/plumbum\" rel=\"nofollow\">plumbum</a>: Command line tools</li>\n<li><a href=\"https://github.com/lark-parser/lark\" rel=\"nofollow\">lark-parser</a>: A modern parsing library for Python</li>\n</ul>\n<h3>Python compatibility:</h3>\n<ul>\n<li><a href=\"https://github.com/benjaminp/six\" rel=\"nofollow\">six</a>: Compatibility library</li>\n<li><a href=\"https://github.com/mcmtroffaes/pathlib2\" rel=\"nofollow\">pathlib2</a> backport if using Python 2.7</li>\n<li><a href=\"https://bitbucket.org/stoneleaf/enum34\" rel=\"nofollow\">enum34</a> backport if using Python /&lt; 3.5</li>\n<li><a href=\"http://importlib-resources.readthedocs.io/en/latest/\" rel=\"nofollow\">importlib_resources</a> backport if using Python /&lt; 3.7</li>\n</ul>\n<h3>Recommended dependencies:</h3>\n<ul>\n<li><a href=\"https://gitlab.com/graphviz/graphviz/\" rel=\"nofollow\">graphviz</a> to render (DOT\nlanguage) graph descriptions of decay chains.</li>\n<li><a href=\"https://github.com/pydot/pydot\" rel=\"nofollow\">pydot</a>, a Python interface to\nGraphviz's Dot language, used to visualize particle decay chains.</li>\n</ul>\n<p></p></details>\n<h2>Getting started</h2>\n<p>The <a href=\"https://mybinder.org/v2/gh/scikit-hep/decaylanguage/master?urlpath=lab/tree/notebooks/DecayLanguageDemo.ipynb\" rel=\"nofollow\">Binder demo</a>\nis an excellent way to get started with <code>DecayLanguage</code>.</p>\n<p>This is a quick user guide. For a full API docs, go <a href=\"https://decaylanguage.readthedocs.io/en/latest/\" rel=\"nofollow\">here</a>\n(note that it is presently work-in-progress).</p>\n<h3>What is DecayLanguage?</h3>\n<p><code>DecayLanguage</code> is a set of tools for building and transforming particle\ndecays:</p>\n<ol>\n<li>\n<p>It provides tools to parse so-called <code>.dec</code> decay files,\nand describe, manipulate and visualize the resulting decay chains.</p>\n</li>\n<li>\n<p>It implements a language to describe and convert particle decays\nbetween digital representations, effectively making it possible to interoperate\nseveral fitting programs. Particular interest is given to programs dedicated\nto amplitude analyses.</p>\n</li>\n</ol>\n<h3>Particles</h3>\n<p>Particles are a key component when dealing with decays.\nRefer to the <a href=\"https://github.com/scikit-hep/particle\" rel=\"nofollow\">particle package</a>\nfor how to deal with particles and Monte Carlo particle identification codes.</p>\n<h3>Parse decay files</h3>\n<p>Decay <code>.dec</code> files can be parsed simply with</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">decaylanguage</span> <span class=\"kn\">import</span> <span class=\"n\">DecFileParser</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">DecFileParser</span><span class=\"p\">(</span><span class=\"s1\">'my-decay-file.dec'</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Inspect what decays are defined</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">list_decay_mother_names</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Print decay modes, etc. ...</span>\n</pre>\n<p>A copy of the master DECAY.DEC file used by the LHCb experiment is provided\n<a href=\"https://github.com/scikit-hep/decaylanguage/tree/master/decaylanguage/data\" rel=\"nofollow\">here</a>\nfor convenience.</p>\n<p>The <code>DecFileParser</code> class implements a series of methods giving access to all\ninformation stored in decay files: the decays themselves, particle name aliases,\ndefinitions of charge-conjugate particles, variable and Pythia-specific\ndefinitions, etc.</p>\n<p>It can be handy to parse from a multi-line string rather than a file:</p>\n<pre><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"Decay pi0</span>\n<span class=\"s2\">0.988228297   gamma   gamma                   PHSP;</span>\n<span class=\"s2\">0.011738247   e+      e-      gamma           PI0_DALITZ;</span>\n<span class=\"s2\">0.000033392   e+      e+      e-      e-      PHSP;</span>\n<span class=\"s2\">0.000000065   e+      e-                      PHSP;</span>\n<span class=\"s2\">Enddecay</span>\n<span class=\"s2\">\"\"\"</span>\n\n<span class=\"n\">dfp</span> <span class=\"o\">=</span> <span class=\"n\">DecFileParser</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n<span class=\"n\">dfp</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n</pre>\n<h4>Advanced usage</h4>\n<p>The list of <code>.dec</code> file decay models known to the package can be inspected via</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">decaylanguage.dec</span> <span class=\"kn\">import</span> <span class=\"n\">known_decay_models</span>\n</pre>\n<p>Say you have to deal with a decay file containing a new model not yet on the list above.\nRunning the parser as usual will result in a <code>UnexpectedToken</code> exception.\nIt is nevertheless easy to deal with this issue; no need to wait for a new release.\nIt is just a matter of adding the model name to the list in <code>decaylanguage/data/decfile.lark</code>\n(or your private copy), see the line\n<code>MODEL_NAME.2 : \"BaryonPCR\"|\"BTO3PI_CP\"|\"BTOSLLALI\"|...</code>,\nand then proceed as usual apart from adding an extra line to call to <code>load_grammar</code>\nto specify the Lark grammar to use:</p>\n<pre><span class=\"n\">dfp</span> <span class=\"o\">=</span> <span class=\"n\">DecFileParser</span><span class=\"p\">(</span><span class=\"s1\">'my_decfile.dec'</span><span class=\"p\">)</span>\n<span class=\"n\">dfp</span><span class=\"o\">.</span><span class=\"n\">load_grammar</span><span class=\"p\">(</span><span class=\"s1\">'path/to/my_updated_decfile.lark'</span><span class=\"p\">)</span>\n<span class=\"n\">dfp</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n</pre>\n<p>This being said, please do submit a pull request to add new models,\nif you spot missing ones ...</p>\n<h3>Visualize decay files</h3>\n<p>The class <code>DecayChainViewer</code> allows the visualization of parsed decay chains:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">decaylanguage</span> <span class=\"kn\">import</span> <span class=\"n\">DecayChainViewer</span>\n\n<span class=\"c1\"># Build the (dictionary-like) D*+ decay chain representation setting the D+ and D0 mesons to stable,</span>\n<span class=\"c1\"># to avoid too cluttered an image</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">dfp</span><span class=\"o\">.</span><span class=\"n\">build_decay_chains</span><span class=\"p\">(</span><span class=\"s1\">'D*+'</span><span class=\"p\">,</span> <span class=\"n\">stable_particles</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'D+'</span><span class=\"p\">,</span> <span class=\"s1\">'D0'</span><span class=\"p\">])</span>\n<span class=\"n\">DecayChainViewer</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>  <span class=\"c1\"># works in a notebook</span>\n</pre>\n<p><img alt=\"DecayChain D*\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/629bea8df1d07ea9590c8ddb5d8de02c13498b7d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7363696b69742d6865702f64656361796c616e67756167652f6d61737465722f696d616765732f4465636179436861696e5f4473745f737461626c652d44302d616e642d442b2e706e67\"></p>\n<p>The actual graph is available as</p>\n<pre><span class=\"c1\"># ...</span>\n<span class=\"n\">dcv</span> <span class=\"o\">=</span> <span class=\"n\">DecayChainViewer</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n<span class=\"n\">dcv</span><span class=\"o\">.</span><span class=\"n\">graph</span>\n</pre>\n<p>making all <code>pydot.Dot</code> class properties and methods available, such as</p>\n<pre><span class=\"n\">dcv</span><span class=\"o\">.</span><span class=\"n\">graph</span><span class=\"o\">.</span><span class=\"n\">write_pdf</span><span class=\"p\">(</span><span class=\"s1\">'mygraph.pdf'</span><span class=\"p\">)</span>\n</pre>\n<p>In the same way, all <code>pydot.Dot</code> class attributes are settable\nupon instantiation of <code>DecayChainViewer</code>:</p>\n<pre><span class=\"n\">dcv</span> <span class=\"o\">=</span> <span class=\"n\">DecayChainViewer</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"p\">,</span> <span class=\"n\">graph_name</span><span class=\"o\">=</span><span class=\"s1\">'TEST'</span><span class=\"p\">,</span> <span class=\"n\">rankdir</span><span class=\"o\">=</span><span class=\"s1\">'TB'</span><span class=\"p\">)</span>\n</pre>\n<h3>Universal representation of decay chains</h3>\n<p>A series of classes and methods have been designed to provide universal representations\nof particle decay chains of any complexity, and to provide the ability\nto convert between these representations.\nSpecifically, class- and dictionary-based representations have been implemented.</p>\n<p>An example of a class-based representation of a decay chain is the following:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">decaylanguage</span> <span class=\"kn\">import</span> <span class=\"n\">DaughtersDict</span><span class=\"p\">,</span> <span class=\"n\">DecayMode</span><span class=\"p\">,</span> <span class=\"n\">DecayChain</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dm1</span> <span class=\"o\">=</span> <span class=\"n\">DecayMode</span><span class=\"p\">(</span><span class=\"mf\">0.0124</span><span class=\"p\">,</span> <span class=\"s1\">'K_S0 pi0'</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s1\">'PHSP'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dm2</span> <span class=\"o\">=</span> <span class=\"n\">DecayMode</span><span class=\"p\">(</span><span class=\"mf\">0.692</span><span class=\"p\">,</span> <span class=\"s1\">'pi+ pi-'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dm3</span> <span class=\"o\">=</span> <span class=\"n\">DecayMode</span><span class=\"p\">(</span><span class=\"mf\">0.98823</span><span class=\"p\">,</span> <span class=\"s1\">'gamma gamma'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dc</span> <span class=\"o\">=</span> <span class=\"n\">DecayChain</span><span class=\"p\">(</span><span class=\"s1\">'D0'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'D0'</span><span class=\"p\">:</span><span class=\"n\">dm1</span><span class=\"p\">,</span> <span class=\"s1\">'K_S0'</span><span class=\"p\">:</span><span class=\"n\">dm2</span><span class=\"p\">,</span> <span class=\"s1\">'pi0'</span><span class=\"p\">:</span><span class=\"n\">dm3</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dc</span>\n<span class=\"o\">&lt;</span><span class=\"n\">DecayChain</span><span class=\"p\">:</span> <span class=\"n\">D0</span> <span class=\"o\">-&gt;</span> <span class=\"n\">K_S0</span> <span class=\"n\">pi0</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"n\">sub</span><span class=\"o\">-</span><span class=\"n\">decays</span><span class=\"p\">),</span> <span class=\"n\">BF</span><span class=\"o\">=</span><span class=\"mf\">0.0124</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Decay chains can be visualised with the <code>DecayChainViewer</code> class making use\nof the dictionary representation <code>dc.to_dict()</code>, which is the simple\nrepresentation understood by <code>DecayChainViewer</code>, as see above:</p>\n<pre><span class=\"n\">DecayChainViewer</span><span class=\"p\">(</span><span class=\"n\">dc</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">())</span>\n</pre>\n<p>The fact that 2 representations of particle decay chains are provided ensures\nthe following:</p>\n<ol>\n<li>Human-readable (class) and computer-efficient (dictionary) alternatives.</li>\n<li>Flexibility for parsing, manipulation and storage of decay chain information.</li>\n</ol>\n<h3>Decay modeling</h3>\n<p>The most common way to create a decay chain is to read in an <a href=\"https://gitlab.cern.ch/lhcb/Gauss/tree/LHCBGAUSS-1058.AmpGenDev/Gen/AmpGen\" rel=\"nofollow\">AmpGen</a>\nstyle syntax from a file or a string. You can use:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">decaylanguage.modeling</span> <span class=\"kn\">import</span> <span class=\"n\">AmplitudeChain</span>\n<span class=\"n\">lines</span><span class=\"p\">,</span> <span class=\"n\">parameters</span><span class=\"p\">,</span> <span class=\"n\">constants</span><span class=\"p\">,</span> <span class=\"n\">states</span> <span class=\"o\">=</span> <span class=\"n\">AmplitudeChain</span><span class=\"o\">.</span><span class=\"n\">read_ampgen</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'''</span>\n<span class=\"s1\">EventType D0 K- pi+ pi+ pi-</span>\n\n<span class=\"s1\">D0[D]{K*(892)bar0{K-,pi+},rho(770)0{pi+,pi-}}                            0 1 0.1 0 1 0.1</span>\n\n<span class=\"s1\">K(1460)bar-_mass  0 1460 1</span>\n<span class=\"s1\">K(1460)bar-_width 0  250 1</span>\n\n<span class=\"s1\">a(1)(1260)+::Spline::Min 0.18412</span>\n<span class=\"s1\">a(1)(1260)+::Spline::Max 1.86869</span>\n<span class=\"s1\">a(1)(1260)+::Spline::N 34</span>\n<span class=\"s1\">'''</span><span class=\"p\">)</span>\n</pre>\n<p>Here, <code>lines</code> will be a list of AmplitudeChain lines (pretty print supported in Jupyter notebooks),\n<code>parameters</code> will be a table of parameters (ranged parameters not yet supported),\n<code>constants</code> will be a table of constants,\nand <code>states</code> will be the list of known states (EventType).</p>\n<h4>Converters</h4>\n<p>You can output to a format (currently only <a href=\"https://GooFit.github.io\" rel=\"nofollow\">GooFit</a> supported, feel free\nto make a PR to add more). Use a subclass of DecayChain, in this case,\nGooFitChain. To use the <a href=\"https://GooFit.github.io\" rel=\"nofollow\">GooFit</a> output, type from the shell:</p>\n<pre>python -m decaylanguage -G goofit myinput.opts\n</pre>\n<h2>Acknowledgements</h2>\n<p>Support for this work was provided by the National Science Foundation\ncooperative agreement OAC-1450377 (DIANA/HEP) and OAC-1836650 (IRIS-HEP).\nAny opinions, findings, conclusions or recommendations expressed in this material\nare those of the authors and do not necessarily reflect the views of the National Science Foundation.</p>\n<h1>Changelog</h1>\n<h2>Version 0.6.1 (2020-01-15)</h2>\n<ul>\n<li>Parsing of decay files (aka .dec files):\n<ul>\n<li>Simpifications in various methods of class <code>DecFileParser</code>.</li>\n<li>A couple more tests added.</li>\n</ul>\n</li>\n<li>Minor fixes.</li>\n</ul>\n<h2>Version 0.6.0 (2020-01-10)</h2>\n<ul>\n<li>Parsing of decay files (aka .dec files):\n<ul>\n<li>Master Belle II DECAY.DEC file added to the package.</li>\n<li>Certain <code>DecFileParser</code> class methods made more versatile.</li>\n<li><code>Lark</code> parsing grammar file improved.</li>\n</ul>\n</li>\n<li>Universal representation of decay chains:\n<ul>\n<li>Classes <code>DecayChain</code>, <code>DecayMode</code>, <code>DaughtersDict</code> and <code>DecayChainViewer</code> enhanced.</li>\n</ul>\n</li>\n<li>Dependencies and Python version support:\n<ul>\n<li>Package dependent on <code>Particle</code> versions 0.9.*.</li>\n<li>Support for Python 3.8 added.</li>\n</ul>\n</li>\n</ul>\n<h2>Version 0.5.3 (2019-10-28)</h2>\n<ul>\n<li>Dict-like representation of particle decay chains improved.</li>\n<li>Documentation added to README.</li>\n</ul>\n<h2>Version 0.5.2 (2019-10-23)</h2>\n<ul>\n<li>Parsing of decay files (aka .dec files):\n<ul>\n<li>New Belle II decay models added.</li>\n</ul>\n</li>\n<li>README updated to provide basic coverage of recent new features.</li>\n<li>Clean-up of obsolete files.</li>\n</ul>\n<h2>Version 0.5.1 (2019-10-14)</h2>\n<ul>\n<li>Universal representation of decay chains:\n<ul>\n<li>Classes <code>DecayChain</code> and <code>DecayMode</code> enhanced.</li>\n<li>Tests for class <code>DecayChain</code> added.</li>\n</ul>\n</li>\n<li>Parsing of decay files (aka .dec files):\n<ul>\n<li><code>DecFileParser</code> class extended.</li>\n</ul>\n</li>\n</ul>\n<h2>Version 0.5.0 (2019-10-11)</h2>\n<ul>\n<li>Universal representation of decay chains:\n<ul>\n<li>Class <code>DecayChain</code> introduced.</li>\n<li>Classes <code>DaughtersDict</code> and <code>DecayMode</code> enhanced.</li>\n</ul>\n</li>\n<li>Changes in API:\n<ul>\n<li><code>DecFileParser.build_decay_chain()</code> renamed to <code>DecFileParser.build_decay_chains()</code>.</li>\n</ul>\n</li>\n<li>Package dependent on <code>Particle</code> package version 0.6.</li>\n</ul>\n<h2>Version 0.4.0 (2019-09-02)</h2>\n<ul>\n<li>Package dependent on <code>Particle</code> version 0.6.0.\nOtherwise identical to version 0.3.2.</li>\n</ul>\n<h2>Version 0.3.2 (2019-08-29)</h2>\n<ul>\n<li>Parsing of decay files (aka .dec files):\n<ul>\n<li><code>DecFileParser</code> class extended to understand JETSET definitions.</li>\n</ul>\n</li>\n<li>Visualisation of decay chains:\n<ul>\n<li><code>DecayChainViewer</code> class simplified and improved.</li>\n<li>Decay chain DOT graphs now display HTML particle names.</li>\n<li>More tests.</li>\n</ul>\n</li>\n</ul>\n<h2>Version 0.3.1 (2019-07-18)</h2>\n<ul>\n<li>Parsing of decay files (aka .dec files):\n<ul>\n<li>Update to latest LHCb DECAY.DEC file.</li>\n</ul>\n</li>\n<li>Visualisation of decay chains:\n<ul>\n<li><code>DecayChainViewer</code> class made more robust.</li>\n<li>Better tests.</li>\n</ul>\n</li>\n<li>Miscellaneous:\n<ul>\n<li>Demo notebook updated.</li>\n<li>README updated with latest package functionality.</li>\n<li>Python wheels generation added.</li>\n<li>Zenodo DOI badge added to README.</li>\n</ul>\n</li>\n</ul>\n<h2>Version 0.3.0 (2019-06-26)</h2>\n<ul>\n<li>Decays modelling:\n<ul>\n<li>Updates to Mint related particle data files.</li>\n</ul>\n</li>\n<li>Parsing of decay files (aka .dec files):\n<ul>\n<li>Lark parser files added, for <code>.dec</code> decay files.</li>\n<li><code>DecFileParser</code> class introduced, with documentation and test suite.</li>\n<li>Various <code>.dec</code> test decay files added.</li>\n</ul>\n</li>\n<li>Visualisation of decay chains:\n<ul>\n<li><code>DecayChainViewer</code> class introduced, with documentation and test suite.</li>\n</ul>\n</li>\n<li>Universal representation of decay chains:\n<ul>\n<li>First \"building block\" classes <code>DaughtersDict</code> and <code>DecayMode</code> introduced,\nwith documentation and test suite.</li>\n</ul>\n</li>\n<li>Package dependencies:\n<ul>\n<li>Package made dependent on Scikit-HEP's <code>Particle</code> package.</li>\n<li>Redundant code removed.</li>\n</ul>\n</li>\n<li>Continuous integration:\n<ul>\n<li>CI with Azure pipelines introduced.</li>\n<li>CI with Travis and AppVeyor removed.</li>\n</ul>\n</li>\n<li>Miscellaneous:\n<ul>\n<li>Demo notebook added, with a launcher for Binder.</li>\n<li>Copyright statements added to repository files.</li>\n<li>General clean-up and minor bug fixes.</li>\n</ul>\n</li>\n</ul>\n<h2>Version 0.2.0 (2018-08-02)</h2>\n<ul>\n<li>First release as part of Scikit-HEP.</li>\n<li>Using new data package with <code>importlib_resources</code> (or <code>importlib.resources</code> on Python 3.7).</li>\n<li>Better docs and examples.</li>\n<li>Some method renaming.</li>\n<li>Generalized converter script.</li>\n</ul>\n<h2>Version 0.1.0 (2018-03-13)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n\n          </div>"}, "last_serial": 6457657, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "89a8cf9257743ac7bf6b429bf34f0d0b", "sha256": "60a264f49ae520cab3a6e9174509720ab2aca1cb7c7beadba2bef4cdf761586f"}, "downloads": -1, "filename": "decaylanguage-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89a8cf9257743ac7bf6b429bf34f0d0b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 38391, "upload_time": "2018-03-14T20:36:31", "upload_time_iso_8601": "2018-03-14T20:36:31.048346Z", "url": "https://files.pythonhosted.org/packages/56/5f/1c36fb109aa545e78874262134838dedd63c049a86635c6b4c7dbe9a445e/decaylanguage-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48abb46622fce4f7e44ee8ae70b52b33", "sha256": "2c00f5d54ce3ba488e0a92f37eed804f26122acd627f578ff52f036934d03f5e"}, "downloads": -1, "filename": "decaylanguage-0.1.0.tar.gz", "has_sig": false, "md5_digest": "48abb46622fce4f7e44ee8ae70b52b33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1697203, "upload_time": "2018-03-14T20:36:36", "upload_time_iso_8601": "2018-03-14T20:36:36.332588Z", "url": "https://files.pythonhosted.org/packages/87/91/95bbeb556baa6e8e47efbf3f144cf9efbb1f2a3dffcab9f76bbc1f871832/decaylanguage-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "45306b24c88f6930dd42ca055f83e17c", "sha256": "5b4e5c5b2179421300476626fa085084b846ee7db26141b3b4ab92bcd18b076d"}, "downloads": -1, "filename": "decaylanguage-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "45306b24c88f6930dd42ca055f83e17c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 40329, "upload_time": "2018-08-03T07:51:43", "upload_time_iso_8601": "2018-08-03T07:51:43.392855Z", "url": "https://files.pythonhosted.org/packages/f0/05/c715bb1d17645d19c39c9051607aef571e814a4254547ed74b3d77c90489/decaylanguage-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4602026ed25cdad019378a277044e1da", "sha256": "0dc902827631741760f296cfff8115dd4356ba0de599d2c54d79173fc1635229"}, "downloads": -1, "filename": "decaylanguage-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4602026ed25cdad019378a277044e1da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 134964, "upload_time": "2018-08-03T07:51:45", "upload_time_iso_8601": "2018-08-03T07:51:45.009922Z", "url": "https://files.pythonhosted.org/packages/34/4f/10909ea217afbaeaafa050b490f14959259fbcd49f4917f38569934e29f4/decaylanguage-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d1833bf30f20e242f59569d4b4bed1f0", "sha256": "db83274c678a969709a2160413d70b2d36ad2c299638ca496c4ff384b058aea5"}, "downloads": -1, "filename": "decaylanguage-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1833bf30f20e242f59569d4b4bed1f0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 209159, "upload_time": "2019-06-26T16:03:55", "upload_time_iso_8601": "2019-06-26T16:03:55.677820Z", "url": "https://files.pythonhosted.org/packages/8d/c2/271197c87e6918ba5c8b9894d31b4ffbc9ebe36f6fb68d81ffb4740c67e1/decaylanguage-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "187f6655641ba51175343846ee6545bd", "sha256": "eb63492803cf803696f5988feb294d338ae6884adb2716199c423b34f10a2eeb"}, "downloads": -1, "filename": "decaylanguage-0.3.0.tar.gz", "has_sig": false, "md5_digest": "187f6655641ba51175343846ee6545bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 651391, "upload_time": "2019-06-26T16:03:57", "upload_time_iso_8601": "2019-06-26T16:03:57.805484Z", "url": "https://files.pythonhosted.org/packages/2a/35/c35b40fb8a9962d2322c99112d80eca4d248c1ebc4ea3af35b91b30b2f17/decaylanguage-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "5f546abe79e83d89c6cd9ccf312a4279", "sha256": "c37544445262bcb526f7f2ecedd370d1ad9ee6e3c8746338a65356cd0548625b"}, "downloads": -1, "filename": "decaylanguage-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5f546abe79e83d89c6cd9ccf312a4279", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 210537, "upload_time": "2019-07-18T09:31:23", "upload_time_iso_8601": "2019-07-18T09:31:23.533038Z", "url": "https://files.pythonhosted.org/packages/09/cf/498fff2c8dcbd4d1cc1d581fddf6769c3b2ef4c23cae14b255d5ef3008b9/decaylanguage-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e363ed3fa2f0dab4af511658c162d775", "sha256": "42c8c7fa60e5073b21697fb8aed7b3b0009a6ce2caa9a680f255783e6e2e53eb"}, "downloads": -1, "filename": "decaylanguage-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e363ed3fa2f0dab4af511658c162d775", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 501081, "upload_time": "2019-07-18T09:31:25", "upload_time_iso_8601": "2019-07-18T09:31:25.409604Z", "url": "https://files.pythonhosted.org/packages/97/da/bb09b9dbeab7985c8220ca7c7558b6946ec404e91d699588f5a53fa6014e/decaylanguage-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "61a9800964cd3517960d88a418bacc94", "sha256": "5892c9d1b427c5daddeac87305ff248efe3910df3e29a6cbc19322c802247b33"}, "downloads": -1, "filename": "decaylanguage-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "61a9800964cd3517960d88a418bacc94", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 270332, "upload_time": "2019-08-30T07:18:31", "upload_time_iso_8601": "2019-08-30T07:18:31.930434Z", "url": "https://files.pythonhosted.org/packages/9a/b8/1917ce289178350ea327d7285e793cb15644c5b80c0055690a616d9ac143/decaylanguage-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7187bff882728dc4fec65601c643ad7c", "sha256": "58b2cc6fe9ecc81f5d7950f22f327bab5944738056191c1d2d021521f9fdefa2"}, "downloads": -1, "filename": "decaylanguage-0.3.2.tar.gz", "has_sig": false, "md5_digest": "7187bff882728dc4fec65601c643ad7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 615821, "upload_time": "2019-08-30T07:18:34", "upload_time_iso_8601": "2019-08-30T07:18:34.133209Z", "url": "https://files.pythonhosted.org/packages/24/33/4831f79343d25a06cb74bb4772c732fe01133d3f5e19fed8c08aedb890c1/decaylanguage-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a8ae0bf455dcf486667529bcfac9784d", "sha256": "f2c3e07b5658a07e078b08a0b6bda8622fb09cda8779234f3c6c7698d2fd906a"}, "downloads": -1, "filename": "decaylanguage-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8ae0bf455dcf486667529bcfac9784d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 270596, "upload_time": "2019-09-02T08:08:35", "upload_time_iso_8601": "2019-09-02T08:08:35.469180Z", "url": "https://files.pythonhosted.org/packages/67/7f/314fdd75571ba2b505c8e5cc37c5a25e415894b2e0bd4836aa7ae0c26470/decaylanguage-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "545c1118785420d07882c4600053f26d", "sha256": "8214e6e616a7d4546c5c851a3bf3270fbcdc0764c5ccbaffce50f051ed2d88d2"}, "downloads": -1, "filename": "decaylanguage-0.4.0.tar.gz", "has_sig": false, "md5_digest": "545c1118785420d07882c4600053f26d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 616077, "upload_time": "2019-09-02T08:08:37", "upload_time_iso_8601": "2019-09-02T08:08:37.835042Z", "url": "https://files.pythonhosted.org/packages/f8/b7/8a2f17905ccc7a89cab4c6b5fb6554cb9b73d3d5f5c0962ab6e9fd078802/decaylanguage-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "9d3c55a451504c5c285fefaf15f2ff59", "sha256": "3ebdaa5c3c3db0b02c44dbae590b26b145cf57fabeec137865a24cc79958086d"}, "downloads": -1, "filename": "decaylanguage-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d3c55a451504c5c285fefaf15f2ff59", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 268976, "upload_time": "2019-10-11T13:20:50", "upload_time_iso_8601": "2019-10-11T13:20:50.159561Z", "url": "https://files.pythonhosted.org/packages/46/83/41dd9505c5e05eeb7499e25707711e6ecf870fa85435a1fc5b79e0af2d11/decaylanguage-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f93389c5796c325ef53710067e2e26e", "sha256": "2608649630b0c6c23ad6e4f0b187a619386a0073bade89a872965e4cb7949b53"}, "downloads": -1, "filename": "decaylanguage-0.5.0.tar.gz", "has_sig": false, "md5_digest": "1f93389c5796c325ef53710067e2e26e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 617474, "upload_time": "2019-10-11T13:20:52", "upload_time_iso_8601": "2019-10-11T13:20:52.531217Z", "url": "https://files.pythonhosted.org/packages/9a/7d/597475ba7821b137d65f5f670d08335b3704a6c756bd9fa6e3f48915cde4/decaylanguage-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "02c6377695191e45a5e2d722df871b89", "sha256": "b7587bc960af2037ee4766988a76a413f7b6efff678fccd4ac33385b8e5c0930"}, "downloads": -1, "filename": "decaylanguage-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "02c6377695191e45a5e2d722df871b89", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 269430, "upload_time": "2019-10-14T08:56:41", "upload_time_iso_8601": "2019-10-14T08:56:41.866782Z", "url": "https://files.pythonhosted.org/packages/2e/86/101a5368fb1e55355c1d690dcf34f5b7da2c85d488c692b6350e30e819a2/decaylanguage-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "149f7aee5aac15f5edfbdb6c0e362050", "sha256": "ed56516e3e0d5bd89518ea79bad37ea6f6193d0b5b8b701a781bc0f9f51e1f78"}, "downloads": -1, "filename": "decaylanguage-0.5.1.tar.gz", "has_sig": false, "md5_digest": "149f7aee5aac15f5edfbdb6c0e362050", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 618631, "upload_time": "2019-10-14T08:56:44", "upload_time_iso_8601": "2019-10-14T08:56:44.336683Z", "url": "https://files.pythonhosted.org/packages/6a/80/4f95dd03396a3661732873e7ceafee8a1919d02bff77b97eeccf8803bb52/decaylanguage-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "a8b65b2feae2e1e62403360503ffe284", "sha256": "7928b7ce5f091fc381e070defbdd2da518181fc7c11004b0b318c49ce6566bb0"}, "downloads": -1, "filename": "decaylanguage-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8b65b2feae2e1e62403360503ffe284", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 146477, "upload_time": "2019-10-23T12:55:13", "upload_time_iso_8601": "2019-10-23T12:55:13.884487Z", "url": "https://files.pythonhosted.org/packages/05/0d/4373e1626353863ea4a8535ecbe25ad7b4877191c1ec8a6e2fd85a010c21/decaylanguage-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93c242e5301ef57fb0acb8af42b7d213", "sha256": "a17aab702f5f5fd1186116554b2403690c035e4edf440149a04b2a9626bff3ca"}, "downloads": -1, "filename": "decaylanguage-0.5.2.tar.gz", "has_sig": false, "md5_digest": "93c242e5301ef57fb0acb8af42b7d213", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 446229, "upload_time": "2019-10-23T12:55:15", "upload_time_iso_8601": "2019-10-23T12:55:15.966776Z", "url": "https://files.pythonhosted.org/packages/a7/d4/6e8722b5fd6f8e9cca623ed8202da958aad5c74cefcdc72b17588aabed1d/decaylanguage-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "55bbcb0ad730c5bbc2aa6e38ff7f327b", "sha256": "968d754ac506779ac0193ac3e2236196786a68ccba2c90b00e9e4b0fe2ad3061"}, "downloads": -1, "filename": "decaylanguage-0.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "55bbcb0ad730c5bbc2aa6e38ff7f327b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 146536, "upload_time": "2019-10-28T12:18:20", "upload_time_iso_8601": "2019-10-28T12:18:20.022298Z", "url": "https://files.pythonhosted.org/packages/a4/5f/b9dd5dfb00478780261a54125568045de1adfa1d384d505f775d0ba0f360/decaylanguage-0.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "589ae7c7c73c1f154ea6fe896b20f3d7", "sha256": "f408ff573d52c30f165e9b58d0a08264981aca0ef11ca924ce3fb188e5d72c69"}, "downloads": -1, "filename": "decaylanguage-0.5.3.tar.gz", "has_sig": false, "md5_digest": "589ae7c7c73c1f154ea6fe896b20f3d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 446804, "upload_time": "2019-10-28T12:18:22", "upload_time_iso_8601": "2019-10-28T12:18:22.702787Z", "url": "https://files.pythonhosted.org/packages/73/79/b9f65751fe2590009643614d800943ab6f1e49c83fef398d9f16efabee17/decaylanguage-0.5.3.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "1698bbe2bd55681eb18b38c6c4ff0779", "sha256": "563ec9773d817a11162e02daa53d45fa00ab70f2796a66079fc7a029282c56a0"}, "downloads": -1, "filename": "DecayLanguage-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1698bbe2bd55681eb18b38c6c4ff0779", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 225089, "upload_time": "2020-01-10T14:05:25", "upload_time_iso_8601": "2020-01-10T14:05:25.192002Z", "url": "https://files.pythonhosted.org/packages/df/cd/20456b02de094861080bc8f09029c3e43d86fb25d44fb6db6549249799ae/DecayLanguage-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "985d02817eb3d71bc9d1a1cbfcc2af3d", "sha256": "d6ac8fa00fac508dd199f99cbb4fb4d33ed6fc7765fddd3db9176e767bda15b2"}, "downloads": -1, "filename": "DecayLanguage-0.6.0.tar.gz", "has_sig": false, "md5_digest": "985d02817eb3d71bc9d1a1cbfcc2af3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 711787, "upload_time": "2020-01-10T14:05:27", "upload_time_iso_8601": "2020-01-10T14:05:27.058777Z", "url": "https://files.pythonhosted.org/packages/79/c6/130008724b071c3b4dc999f1fbe41a1e75570b79e45dacdd6a44b095438d/DecayLanguage-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "875582db5f812c1837905a59e4002a4c", "sha256": "1e3547b295f49748e22a6eaa6bd774b635c88d49e723454dd756a9c279afddc5"}, "downloads": -1, "filename": "DecayLanguage-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "875582db5f812c1837905a59e4002a4c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 224947, "upload_time": "2020-01-15T10:09:29", "upload_time_iso_8601": "2020-01-15T10:09:29.674668Z", "url": "https://files.pythonhosted.org/packages/d6/f8/75f827847de112066c6c703e1cb763c67c6901aeb7a50ba70dba41aeaa76/DecayLanguage-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4da3924a1777eed4f76300fb9c26aacf", "sha256": "cc6daa42ca4f89e5f1b460b6b16330b3f4e2ee4856fec96b511c457e6f4ba45f"}, "downloads": -1, "filename": "DecayLanguage-0.6.1.tar.gz", "has_sig": false, "md5_digest": "4da3924a1777eed4f76300fb9c26aacf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 711639, "upload_time": "2020-01-15T10:09:31", "upload_time_iso_8601": "2020-01-15T10:09:31.542782Z", "url": "https://files.pythonhosted.org/packages/9a/d3/4b44e4626be90cd2f7bfff4f1af323b2caf432b60de77cc121ab8e59ecf4/DecayLanguage-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "875582db5f812c1837905a59e4002a4c", "sha256": "1e3547b295f49748e22a6eaa6bd774b635c88d49e723454dd756a9c279afddc5"}, "downloads": -1, "filename": "DecayLanguage-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "875582db5f812c1837905a59e4002a4c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 224947, "upload_time": "2020-01-15T10:09:29", "upload_time_iso_8601": "2020-01-15T10:09:29.674668Z", "url": "https://files.pythonhosted.org/packages/d6/f8/75f827847de112066c6c703e1cb763c67c6901aeb7a50ba70dba41aeaa76/DecayLanguage-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4da3924a1777eed4f76300fb9c26aacf", "sha256": "cc6daa42ca4f89e5f1b460b6b16330b3f4e2ee4856fec96b511c457e6f4ba45f"}, "downloads": -1, "filename": "DecayLanguage-0.6.1.tar.gz", "has_sig": false, "md5_digest": "4da3924a1777eed4f76300fb9c26aacf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 711639, "upload_time": "2020-01-15T10:09:31", "upload_time_iso_8601": "2020-01-15T10:09:31.542782Z", "url": "https://files.pythonhosted.org/packages/9a/d3/4b44e4626be90cd2f7bfff4f1af323b2caf432b60de77cc121ab8e59ecf4/DecayLanguage-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:37 2020"}