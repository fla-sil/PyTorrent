{"info": {"author": "Yuba Solutions LLC", "author_email": "dmw@yubasoluions.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Communications :: Email :: Address Book", "Topic :: Utilities"], "description": "# vcardtools\nCommand line tools for splitting and merging vCard files.\n\nThere are a lot of tutorials for setting up contact servers and syncing -- but few cover the most basic step we need to take.\n\n_Getting our vCards into a sensible shape where we can use them._\n\nThus far there are two operations available in vcardtools:\n- splitting giant .vcf files into lots of little ones with nice names\n- **and**\n- merging little .vcf files two at a time with interactive prompting\n\n##Installation\n`pip install vcardtools`\n\n##vcardtool split --help\n```bash\n$ vcardtool split -h\nusage: vcardtool split [-h] [--pretend] [--filename_charset {utf-8,latin-1}]\n                       [--output_dir OUTPUT_DIR]\n                       vcard_file\n\npositional arguments:\n  vcard_file            A multi-entry vCard to split.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --pretend             Print summary but do not write files\n  --filename_charset {utf-8,latin-1}\n                        Restrict filenames to character set\n  --output_dir OUTPUT_DIR\n                        Write output files in provided directory\n```\n\n##vCard Split Sample Usage\n`vcardtool split --output_dir <new contacts directory> everyone-you-ever-met.vcf`\n\n\n## Notes about split filenames\n- By default the .vcf files are written into the current directory, there can be a lot of them, you have been warned.\n- File names take the form `lastname_firstname.vcf` or as the fields are available. \n- Fall back is to use the login section of an email address.\n- If insufficient data is available to make a name a warning is shown and the record is skipped.\n- If file names become duplicated say 'john.vcf'; *all* the John's get an extension so you can easily identify them later: `['john-1.vcf', 'john-2.vcf', ...]`  (View them with something like: `ls *-?.vcf`)\n- By default filenames are forced into the latin-1 character set.  So you'll find some of your friends with non-ascii vCard names by their email login instead.  (if you want to change this set `--filename_charset=utf-8` ... and use Python 3, see Issues above to track progress on the Python 2.7 fix)\n- If you cancel midway or anything goes wrong -- feel free to re-run it.  `vcardtool split` skips writing files with the same name in the given output directory so you can safely re-run to get those last 5 vCards at the end created.\n\n\n##vcardtool merge --help\n```bash\n$ vcardtool merge -h\nusage: vcardtool merge [-h] [--outfile [OUTFILE]] vcard_files vcard_files\n\npositional arguments:\n  vcard_files          Two vCard files to merge\n\noptional arguments:\n  -h, --help           show this help message and exit\n  --outfile [OUTFILE]  Write merged vCard to file\n\nvcardtool merge john-1.vcf john-2.vcf\n```\n\n##vCard Merge Sample Usage\n`$ vcardtool merge john-1.vcf john-2.vcf`\n<output editted for brevity>\n\nIn the even of a conflict you'll see something like:\n```\nPlease select one of the following options for field \"label\"\n[ 1 ] \"[<LABEL{'TYPE': ['WORK']}100 Waters Edge Baytown, LA 30314 United States of America>,\n        <LABEL{'TYPE': ['HOME']}42 Plantation St. Baytown, LA 30314 United States of America>]\"\n[ 2 ] \"[<LABEL{'TYPE': ['HOME']}42 Plantation St. Baytown, LA 30314 United States of America>]\"\noption> 5\noption> 1\n```\n\nAnd then hopefully victory.\n```\nBEGIN:VCARD\nVERSION:3.0\nADR;TYPE=HOME:;;42 Plantation St.;Baytown;LA;30314;United States of America\nADR;TYPE=WORK:;;100 Waters Edge;Baytown;LA;30314;United States of America\nEMAIL;TYPE=PREF,INTERNET:forrestgump@example.com\nFN:Forrest Gump\nLABEL;TYPE=WORK:100 Waters Edge\\nBaytown\\, LA 30314\\nUnited States of Ameri\n ca\nLABEL;TYPE=HOME:42 Plantation St.\\nBaytown\\, LA 30314\\nUnited States of Ame\n rica\nN:Gump;Forrest;;Mr.;\nPHOTO;TYPE=JPEG;VALUE=URL:http://www.example.com/dir_photos/my_photo.gif\nREV:2008-04-24T19:52:43Z\nTEL;TYPE=HOME,VOICE:(111) 555-5555\nTEL;TYPE=WORK,VOICE:(111) 555-1212\nTEL;TYPE=HOME,VOICE:(404) 555-1212\nTITLE:Shrimp Man\nEND:VCARD\n```\n\nBy default the merge command writes to stdout although it can be directed to a file with `--outfile shiny_new.vcf`.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dmwilcox/vcard-tools", "keywords": "vCard vcf", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "vcardtools", "package_url": "https://pypi.org/project/vcardtools/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/vcardtools/", "project_urls": {"Homepage": "https://github.com/dmwilcox/vcard-tools"}, "release_url": "https://pypi.org/project/vcardtools/0.1.1/", "requires_dist": ["argparse", "six", "vobject"], "requires_python": "", "summary": "Tools to split and merge vCard files.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # vcardtools<br>Command line tools for splitting and merging vCard files.<br><br>There are a lot of tutorials for setting up contact servers and syncing -- but few cover the most basic step we need to take.<br><br>_Getting our vCards into a sensible shape where we can use them._<br><br>Thus far there are two operations available in vcardtools:<br>- splitting giant .vcf files into lots of little ones with nice names<br>- **and**<br>- merging little .vcf files two at a time with interactive prompting<br><br>##Installation<br>`pip install vcardtools`<br><br>##vcardtool split --help<br>```bash<br>$ vcardtool split -h<br>usage: vcardtool split [-h] [--pretend] [--filename_charset {utf-8,latin-1}]<br>                       [--output_dir OUTPUT_DIR]<br>                       vcard_file<br><br>positional arguments:<br>  vcard_file            A multi-entry vCard to split.<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --pretend             Print summary but do not write files<br>  --filename_charset {utf-8,latin-1}<br>                        Restrict filenames to character set<br>  --output_dir OUTPUT_DIR<br>                        Write output files in provided directory<br>```<br><br>##vCard Split Sample Usage<br>`vcardtool split --output_dir &lt;new contacts directory&gt; everyone-you-ever-met.vcf`<br><br><br>## Notes about split filenames<br>- By default the .vcf files are written into the current directory, there can be a lot of them, you have been warned.<br>- File names take the form `lastname_firstname.vcf` or as the fields are available. <br>- Fall back is to use the login section of an email address.<br>- If insufficient data is available to make a name a warning is shown and the record is skipped.<br>- If file names become duplicated say 'john.vcf'; *all* the John's get an extension so you can easily identify them later: `['john-1.vcf', 'john-2.vcf', ...]`  (View them with something like: `ls *-?.vcf`)<br>- By default filenames are forced into the latin-1 character set.  So you'll find some of your friends with non-ascii vCard names by their email login instead.  (if you want to change this set `--filename_charset=utf-8` ... and use Python 3, see Issues above to track progress on the Python 2.7 fix)<br>- If you cancel midway or anything goes wrong -- feel free to re-run it.  `vcardtool split` skips writing files with the same name in the given output directory so you can safely re-run to get those last 5 vCards at the end created.<br><br><br>##vcardtool merge --help<br>```bash<br>$ vcardtool merge -h<br>usage: vcardtool merge [-h] [--outfile [OUTFILE]] vcard_files vcard_files<br><br>positional arguments:<br>  vcard_files          Two vCard files to merge<br><br>optional arguments:<br>  -h, --help           show this help message and exit<br>  --outfile [OUTFILE]  Write merged vCard to file<br><br>vcardtool merge john-1.vcf john-2.vcf<br>```<br><br>##vCard Merge Sample Usage<br>`$ vcardtool merge john-1.vcf john-2.vcf`<br>&lt;output editted for brevity&gt;<br><br>In the even of a conflict you'll see something like:<br>```<br>Please select one of the following options for field \"label\"<br>[ 1 ] \"[&lt;LABEL{'TYPE': ['WORK']}100 Waters Edge Baytown, LA 30314 United States of America&gt;,<br>        &lt;LABEL{'TYPE': ['HOME']}42 Plantation St. Baytown, LA 30314 United States of America&gt;]\"<br>[ 2 ] \"[&lt;LABEL{'TYPE': ['HOME']}42 Plantation St. Baytown, LA 30314 United States of America&gt;]\"<br>option&gt; 5<br>option&gt; 1<br>```<br><br>And then hopefully victory.<br>```<br>BEGIN:VCARD<br>VERSION:3.0<br>ADR;TYPE=HOME:;;42 Plantation St.;Baytown;LA;30314;United States of America<br>ADR;TYPE=WORK:;;100 Waters Edge;Baytown;LA;30314;United States of America<br>EMAIL;TYPE=PREF,INTERNET:forrestgump@example.com<br>FN:Forrest Gump<br>LABEL;TYPE=WORK:100 Waters Edge\\nBaytown\\, LA 30314\\nUnited States of Ameri<br> ca<br>LABEL;TYPE=HOME:42 Plantation St.\\nBaytown\\, LA 30314\\nUnited States of Ame<br> rica<br>N:Gump;Forrest;;Mr.;<br>PHOTO;TYPE=JPEG;VALUE=URL:http://www.example.com/dir_photos/my_photo.gif<br>REV:2008-04-24T19:52:43Z<br>TEL;TYPE=HOME,VOICE:(111) 555-5555<br>TEL;TYPE=WORK,VOICE:(111) 555-1212<br>TEL;TYPE=HOME,VOICE:(404) 555-1212<br>TITLE:Shrimp Man<br>END:VCARD<br>```<br><br>By default the merge command writes to stdout although it can be directed to a file with `--outfile shiny_new.vcf`.\n          </div>"}, "last_serial": 2013215, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0d819d895e486ba16b0ce9d9594ab9f3", "sha256": "f0392e55d95a4f6cac0767b651ada82b4f027217fe699a3300c2d1f778ee545f"}, "downloads": -1, "filename": "vcardtools-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d819d895e486ba16b0ce9d9594ab9f3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8312, "upload_time": "2016-03-17T11:41:06", "upload_time_iso_8601": "2016-03-17T11:41:06.643407Z", "url": "https://files.pythonhosted.org/packages/88/a0/a50f6bdff322a538aeb9de8e69bde83497b0820524a0c440f0358531352b/vcardtools-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7b8743166e0a7553387f854026da3c7", "sha256": "751fc1dc12a2137d452ec22a24fece257bbeebf342b1733a2b61ff074eacff70"}, "downloads": -1, "filename": "vcardtools-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c7b8743166e0a7553387f854026da3c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18166, "upload_time": "2016-03-17T11:41:13", "upload_time_iso_8601": "2016-03-17T11:41:13.327933Z", "url": "https://files.pythonhosted.org/packages/c7/1f/93216abb991efad85352511e1eea858fe27906990f70e71e86b0a8a0aad9/vcardtools-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "66b0851a85adecb2dff61f623f02875d", "sha256": "b5d831cb9976d5c0e864b1ba406529d74316716504643dcb1a217669bbc2bc6f"}, "downloads": -1, "filename": "vcardtools-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "66b0851a85adecb2dff61f623f02875d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12041, "upload_time": "2016-03-17T22:13:28", "upload_time_iso_8601": "2016-03-17T22:13:28.718971Z", "url": "https://files.pythonhosted.org/packages/35/9d/920b32476ef69486744272c3188286b373790740a6325143d7a83c1b9593/vcardtools-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a5e67ee4ddf6f91decd604b0e3ba1de", "sha256": "06dd131a99559c8d4aaf34c386140bdcd6624b5dc4c82fb306fae37626a2c710"}, "downloads": -1, "filename": "vcardtools-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7a5e67ee4ddf6f91decd604b0e3ba1de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21562, "upload_time": "2016-03-17T22:13:36", "upload_time_iso_8601": "2016-03-17T22:13:36.299845Z", "url": "https://files.pythonhosted.org/packages/78/56/e44689f60157d3af18c1974f575f84ad5c1ffa48127e590a82eed62afe5a/vcardtools-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66b0851a85adecb2dff61f623f02875d", "sha256": "b5d831cb9976d5c0e864b1ba406529d74316716504643dcb1a217669bbc2bc6f"}, "downloads": -1, "filename": "vcardtools-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "66b0851a85adecb2dff61f623f02875d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12041, "upload_time": "2016-03-17T22:13:28", "upload_time_iso_8601": "2016-03-17T22:13:28.718971Z", "url": "https://files.pythonhosted.org/packages/35/9d/920b32476ef69486744272c3188286b373790740a6325143d7a83c1b9593/vcardtools-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a5e67ee4ddf6f91decd604b0e3ba1de", "sha256": "06dd131a99559c8d4aaf34c386140bdcd6624b5dc4c82fb306fae37626a2c710"}, "downloads": -1, "filename": "vcardtools-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7a5e67ee4ddf6f91decd604b0e3ba1de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21562, "upload_time": "2016-03-17T22:13:36", "upload_time_iso_8601": "2016-03-17T22:13:36.299845Z", "url": "https://files.pythonhosted.org/packages/78/56/e44689f60157d3af18c1974f575f84ad5c1ffa48127e590a82eed62afe5a/vcardtools-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:33 2020"}