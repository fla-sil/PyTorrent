{"info": {"author": "Sean Wilson and Paul Glotfelter", "author_email": "Sean.T.Wilson@gatech.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython"], "description": "\nIntroduction\n============\n\nThis is a Python simulator for Robotarium! The Robotarium is a project at Georgia Institute of Technology allowing public, remote access to a state-of-the-art multi-robot testbed.\n\nThis is an open-source, re-implementation of the [MATLAB simulator]  (https://github.com/robotarium/robotarium-matlab-simulator) in Python.\n\n## Installation\nThe simulator can run on all major platforms (Windows, Linux, and macOS). All that is required is cloning the repository and installing some necessary dependencies.\n\n```\nhttps://github.com/robotarium/robotarium_python_simulator\n```\n\nThe following dependencies are required for utilization of the simulator:\n- [NumPy] (http://www.numpy.org)\n- [matplotlib] (http://matplotlib.org/index.html)\n- [CVXOPT] (http://cvxopt.org/index.html)\n\nNOTE: The SciPy stack and matplotlib can be difficult to install on Windows. However, [this] (http://www.lfd.uci.edu/~gohlke/pythonlibs/) link provides .whl files necessary for installation. Make sure to install all the dependencies for each version part of the SciPy and matplotlib stack!\n\n## Dependency Installation\n\nThe guide below will show you how to install the necessary dependencies. The simulator has been thoroughly tested on Python 3.5.x+ versions.\n\n### Linux\nTo install the simulator on linux requires the installation of the dependencies labeled above. The installation varies depending on the distribution used. The easiest way to install CVXOPT is to use pip, which is typically installed with the default python installation.\n\n#### Ubuntu, Debian, and other Ubuntu/Debian based distributions.\n```\n# Automatically\nNavigate to the cloned simulator directory containing the setup.py script. Then run,\npip3 install .\n**Note the dot after install** \n\n# Manually\nsudo apt-get install python3-numpy python3-scipy python3-matplotlib python3-pip\npip3 install cvxopt --user\n```\n\n#### Fedora, CentOS, and other RPM based distributions.\n```\n# Python 3.5.x+\nsudo yum install numpy scipy python3-matplotlib python3-pip  # For YUM package manager.\nsudo dnf install numpy scipy python3-matplotlib python3-pip  # For DNF package manager.\npip3 install cvxopt --user\n```\n\n#### pip\nIf you are already using python with (or without) pip installed and configured, the installation can be done simply with the following commands:\n\n```\n# Python 3.5.x+\nsudo apt-get install python3-pip  # Ubuntu/Debian based\nsudo yum install python3-pip  # Fedora/CentOS based (RPM Yum based)\nsudo dnf install python3-pip  # Fedora/CentOS based (RPM dnf based)\n\npip3 install scipy\npip3 install numpy\npip3 install matplotlib\npip3 install cvxopt --user\n```\n### Windows\nOf the three installations, this one will be the most difficult due to the fact that Windows does not come with a native or easily installable package manager. To circumvent these problems, it will be necessary to install the packages using pip. The issue with using pip, however, is that NumPy, SciPy, and matplotlib require the packages to be installed without compiling. Therefore, each wheel must be installed individually. This is a simple process using pip 8.x version. The following commands are for python installations that are using PIP 8.x version. The wheel files used here can be found [here] (http://www.lfd.uci.edu/~gohlke/pythonlibs/).\n\nNOTE: The following files installed are for 64-bit architectures. If you have a 32-bit CPU, download the corresponding 32-bit and python versions of the files specified below.\n\n#### Install NumPy\nIt is important to note the naming conventions and install the correct version according to your python version.\n```\n# Install NumPy (64-bit)\npip install numpy-1.11.1+mkl-cp27-cp27m-win_amd64.whl  # Python 2.7.x Version\npip install numpy-1.11.1+mkl-cp34-cp34m-win_amd64.whl  # Python 3.4.x Version\npip install numpy-1.11.1+mkl-cp35-cp35m-win_amd64.whl  # Python 3.5.x Version\n\n# Install NumPy (32-bit)\npip install numpy-1.11.1+mkl-cp27-cp27m-win32.whl  # Python 2.7.x Version\npip install numpy-1.11.1+mkl-cp34-cp34m-win32.whl  # Python 3.4.x Version\npip install numpy-1.11.1+mkl-cp35-cp35m-win32.whl  # Python 3.5.x Version\n```\n\n#### Install SciPy\nIt is important to note the naming conventions and install the correct version according to your python version.\n```\n# Install SciPy (64-bit)\npip install scipy-0.18.0-cp27-cp27m-win_amd64.whl  # Python 2.7.x Version\npip install scipy-0.18.0-cp34-cp34m-win_amd64.whl  # Python 3.4.x Version\npip install scipy-0.18.0-cp35-cp35m-win_amd64.whl  # Python 3.5.x Version\n\n# Install SciPy (32-bit)\npip install scipy-0.18.0-cp27-cp27m-win32.whl  # Python 2.7.x Version\npip install scipy-0.18.0-cp34-cp34m-win32.whl  # Python 3.4.x Version\npip install scipy-0.18.0-cp35-cp35m-win32.whl  # Python 3.5.x Version\n```\n\n#### Install matplotlib\nInstallation of matplotlib requires extra dependencies to be installed first. Again, it is important to note the naming conventions for the matplotlib module and install the correct version according to your python version.\n\n```\n# Install dateutil\npip install python_dateutil-2.5.3-py2.py3-none-any.whl\n\n# Install pytz\npip install pytz-2016.6.1-py2.py3-none-any.whl\n\n# Install pyparsing\npip install pyparsing-2.1.8-py2.py3-none-any.whl\n\n# Install cycler\npip install cycler-0.10.0-py2.py3-none-any.whl\n\n# Install setuptools\npip install setuptools-25.2.0-py2.py3-none-any.whl\n\n# Install matplotlib (64-bit)\npip install matplotlib-1.5.2-cp27-cp27m-win_amd64.whl  # Python 2.7.x Version \npip install matplotlib-1.5.2-cp34-cp34m-win_amd64.whl  # Python 3.4.x Version\npip install matplotlib-1.5.2-cp35-cp35m-win_amd64.whl  # Python 3.5.x Version\n\n# Install matplotlib (32-bit)\npip install matplotlib-1.5.2-cp27-cp27m-win32.whl  # Python 2.7.x Version \npip install matplotlib-1.5.2-cp34-cp34m-win32.whl  # Python 3.4.x Version\npip install matplotlib-1.5.2-cp35-cp35m-win32.whl  # Python 3.5.x Version\n```\n\n#### Install the Robotarium Module\n# Install RPS\nIn your command terminal, navigate to the cloned python simulator repository containing setup.py. Then run,\n\npip install .\n\n### macOS\nTo install the simulator on macOS, it is recommended to install a package manager for easy installation. CVXOPT will have to be installed using PIP.\n\n#### Homebrew\nTo use [Homebrew] (http://brew.sh) for dependency installation requires a bit of extra work due to the scipy stack not being a part of the main repository. You can then install the dependencies labeled above using the following work around (Requires PIP). A more detailed explanation can be found [here] (https://penandpants.com/2012/02/24/install-python/).\n\n```\n# Install Python (Choose Python 2.7.x or 3.5.x)\nbrew install python\nbrew install python3\n\n# Restart terminal to allow the path to python to be updated.\n# make sure \"which python\" command returns \"/usr/local/bin/python\"\n\n# Install pip\neasy_install pip\n\n# Install NumPy\npip install numpy\n\n# Install SciPy\nbrew install gfortran  # Install to prevent an error inherent in SciPy.\npip install scipy\n\n# Install matplotlib\nbrew install pkg-config\npip install matplotlib\n\n# Install CVXOPT\npip install cvxopt --user\n```\n\n#### Macports\nTo use [Macports] (https://www.macports.org/), use the following commands to install the scipy stack. At the time of writing, a Python 3.5.x version for the NumPy stack do not exist. \n```\n# For Python 2.7+\nsudo port install py27-numpy py27-scipy py27-matplotlib\n\n# Install pip\neasy_install pip\n\n# Install CVXOPT\npip install cvxopt --user\n```\n\n## Usage\nTo run one of the examples:\n\n ```\n python \"path_to_simulator\"/rps/examples/plotting/barrier_certificates_with_plotting.py\n ```\n\n## Issues\nPlease enter a ticket in the [issue tracker](https://github.com/robotarium/robotarium_python_simulator/issues).\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/robotarium/robotarium_python_simulator", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "robotarium-python-simulator", "package_url": "https://pypi.org/project/robotarium-python-simulator/", "platform": "", "project_url": "https://pypi.org/project/robotarium-python-simulator/", "project_urls": {"Homepage": "https://github.com/robotarium/robotarium_python_simulator"}, "release_url": "https://pypi.org/project/robotarium-python-simulator/0.0.0/", "requires_dist": ["cvxopt", "scipy", "numpy", "matplotlib"], "requires_python": "", "summary": "A Python-based simulator for the Robotarium.", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Introduction</h1>\n<p>This is a Python simulator for Robotarium! The Robotarium is a project at Georgia Institute of Technology allowing public, remote access to a state-of-the-art multi-robot testbed.</p>\n<p>This is an open-source, re-implementation of the [MATLAB simulator]  (<a href=\"https://github.com/robotarium/robotarium-matlab-simulator\" rel=\"nofollow\">https://github.com/robotarium/robotarium-matlab-simulator</a>) in Python.</p>\n<h2>Installation</h2>\n<p>The simulator can run on all major platforms (Windows, Linux, and macOS). All that is required is cloning the repository and installing some necessary dependencies.</p>\n<pre><code>https://github.com/robotarium/robotarium_python_simulator\n</code></pre>\n<p>The following dependencies are required for utilization of the simulator:</p>\n<ul>\n<li>[NumPy] (<a href=\"http://www.numpy.org\" rel=\"nofollow\">http://www.numpy.org</a>)</li>\n<li>[matplotlib] (<a href=\"http://matplotlib.org/index.html\" rel=\"nofollow\">http://matplotlib.org/index.html</a>)</li>\n<li>[CVXOPT] (<a href=\"http://cvxopt.org/index.html\" rel=\"nofollow\">http://cvxopt.org/index.html</a>)</li>\n</ul>\n<p>NOTE: The SciPy stack and matplotlib can be difficult to install on Windows. However, [this] (<a href=\"http://www.lfd.uci.edu/%7Egohlke/pythonlibs/\" rel=\"nofollow\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>) link provides .whl files necessary for installation. Make sure to install all the dependencies for each version part of the SciPy and matplotlib stack!</p>\n<h2>Dependency Installation</h2>\n<p>The guide below will show you how to install the necessary dependencies. The simulator has been thoroughly tested on Python 3.5.x+ versions.</p>\n<h3>Linux</h3>\n<p>To install the simulator on linux requires the installation of the dependencies labeled above. The installation varies depending on the distribution used. The easiest way to install CVXOPT is to use pip, which is typically installed with the default python installation.</p>\n<h4>Ubuntu, Debian, and other Ubuntu/Debian based distributions.</h4>\n<pre><code># Automatically\nNavigate to the cloned simulator directory containing the setup.py script. Then run,\npip3 install .\n**Note the dot after install** \n\n# Manually\nsudo apt-get install python3-numpy python3-scipy python3-matplotlib python3-pip\npip3 install cvxopt --user\n</code></pre>\n<h4>Fedora, CentOS, and other RPM based distributions.</h4>\n<pre><code># Python 3.5.x+\nsudo yum install numpy scipy python3-matplotlib python3-pip  # For YUM package manager.\nsudo dnf install numpy scipy python3-matplotlib python3-pip  # For DNF package manager.\npip3 install cvxopt --user\n</code></pre>\n<h4>pip</h4>\n<p>If you are already using python with (or without) pip installed and configured, the installation can be done simply with the following commands:</p>\n<pre><code># Python 3.5.x+\nsudo apt-get install python3-pip  # Ubuntu/Debian based\nsudo yum install python3-pip  # Fedora/CentOS based (RPM Yum based)\nsudo dnf install python3-pip  # Fedora/CentOS based (RPM dnf based)\n\npip3 install scipy\npip3 install numpy\npip3 install matplotlib\npip3 install cvxopt --user\n</code></pre>\n<h3>Windows</h3>\n<p>Of the three installations, this one will be the most difficult due to the fact that Windows does not come with a native or easily installable package manager. To circumvent these problems, it will be necessary to install the packages using pip. The issue with using pip, however, is that NumPy, SciPy, and matplotlib require the packages to be installed without compiling. Therefore, each wheel must be installed individually. This is a simple process using pip 8.x version. The following commands are for python installations that are using PIP 8.x version. The wheel files used here can be found [here] (<a href=\"http://www.lfd.uci.edu/%7Egohlke/pythonlibs/\" rel=\"nofollow\">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a>).</p>\n<p>NOTE: The following files installed are for 64-bit architectures. If you have a 32-bit CPU, download the corresponding 32-bit and python versions of the files specified below.</p>\n<h4>Install NumPy</h4>\n<p>It is important to note the naming conventions and install the correct version according to your python version.</p>\n<pre><code># Install NumPy (64-bit)\npip install numpy-1.11.1+mkl-cp27-cp27m-win_amd64.whl  # Python 2.7.x Version\npip install numpy-1.11.1+mkl-cp34-cp34m-win_amd64.whl  # Python 3.4.x Version\npip install numpy-1.11.1+mkl-cp35-cp35m-win_amd64.whl  # Python 3.5.x Version\n\n# Install NumPy (32-bit)\npip install numpy-1.11.1+mkl-cp27-cp27m-win32.whl  # Python 2.7.x Version\npip install numpy-1.11.1+mkl-cp34-cp34m-win32.whl  # Python 3.4.x Version\npip install numpy-1.11.1+mkl-cp35-cp35m-win32.whl  # Python 3.5.x Version\n</code></pre>\n<h4>Install SciPy</h4>\n<p>It is important to note the naming conventions and install the correct version according to your python version.</p>\n<pre><code># Install SciPy (64-bit)\npip install scipy-0.18.0-cp27-cp27m-win_amd64.whl  # Python 2.7.x Version\npip install scipy-0.18.0-cp34-cp34m-win_amd64.whl  # Python 3.4.x Version\npip install scipy-0.18.0-cp35-cp35m-win_amd64.whl  # Python 3.5.x Version\n\n# Install SciPy (32-bit)\npip install scipy-0.18.0-cp27-cp27m-win32.whl  # Python 2.7.x Version\npip install scipy-0.18.0-cp34-cp34m-win32.whl  # Python 3.4.x Version\npip install scipy-0.18.0-cp35-cp35m-win32.whl  # Python 3.5.x Version\n</code></pre>\n<h4>Install matplotlib</h4>\n<p>Installation of matplotlib requires extra dependencies to be installed first. Again, it is important to note the naming conventions for the matplotlib module and install the correct version according to your python version.</p>\n<pre><code># Install dateutil\npip install python_dateutil-2.5.3-py2.py3-none-any.whl\n\n# Install pytz\npip install pytz-2016.6.1-py2.py3-none-any.whl\n\n# Install pyparsing\npip install pyparsing-2.1.8-py2.py3-none-any.whl\n\n# Install cycler\npip install cycler-0.10.0-py2.py3-none-any.whl\n\n# Install setuptools\npip install setuptools-25.2.0-py2.py3-none-any.whl\n\n# Install matplotlib (64-bit)\npip install matplotlib-1.5.2-cp27-cp27m-win_amd64.whl  # Python 2.7.x Version \npip install matplotlib-1.5.2-cp34-cp34m-win_amd64.whl  # Python 3.4.x Version\npip install matplotlib-1.5.2-cp35-cp35m-win_amd64.whl  # Python 3.5.x Version\n\n# Install matplotlib (32-bit)\npip install matplotlib-1.5.2-cp27-cp27m-win32.whl  # Python 2.7.x Version \npip install matplotlib-1.5.2-cp34-cp34m-win32.whl  # Python 3.4.x Version\npip install matplotlib-1.5.2-cp35-cp35m-win32.whl  # Python 3.5.x Version\n</code></pre>\n<h4>Install the Robotarium Module</h4>\n<h1>Install RPS</h1>\n<p>In your command terminal, navigate to the cloned python simulator repository containing setup.py. Then run,</p>\n<p>pip install .</p>\n<h3>macOS</h3>\n<p>To install the simulator on macOS, it is recommended to install a package manager for easy installation. CVXOPT will have to be installed using PIP.</p>\n<h4>Homebrew</h4>\n<p>To use [Homebrew] (<a href=\"http://brew.sh\" rel=\"nofollow\">http://brew.sh</a>) for dependency installation requires a bit of extra work due to the scipy stack not being a part of the main repository. You can then install the dependencies labeled above using the following work around (Requires PIP). A more detailed explanation can be found [here] (<a href=\"https://penandpants.com/2012/02/24/install-python/\" rel=\"nofollow\">https://penandpants.com/2012/02/24/install-python/</a>).</p>\n<pre><code># Install Python (Choose Python 2.7.x or 3.5.x)\nbrew install python\nbrew install python3\n\n# Restart terminal to allow the path to python to be updated.\n# make sure \"which python\" command returns \"/usr/local/bin/python\"\n\n# Install pip\neasy_install pip\n\n# Install NumPy\npip install numpy\n\n# Install SciPy\nbrew install gfortran  # Install to prevent an error inherent in SciPy.\npip install scipy\n\n# Install matplotlib\nbrew install pkg-config\npip install matplotlib\n\n# Install CVXOPT\npip install cvxopt --user\n</code></pre>\n<h4>Macports</h4>\n<p>To use [Macports] (<a href=\"https://www.macports.org/\" rel=\"nofollow\">https://www.macports.org/</a>), use the following commands to install the scipy stack. At the time of writing, a Python 3.5.x version for the NumPy stack do not exist.</p>\n<pre><code># For Python 2.7+\nsudo port install py27-numpy py27-scipy py27-matplotlib\n\n# Install pip\neasy_install pip\n\n# Install CVXOPT\npip install cvxopt --user\n</code></pre>\n<h2>Usage</h2>\n<p>To run one of the examples:</p>\n<pre><code>python \"path_to_simulator\"/rps/examples/plotting/barrier_certificates_with_plotting.py\n</code></pre>\n<h2>Issues</h2>\n<p>Please enter a ticket in the <a href=\"https://github.com/robotarium/robotarium_python_simulator/issues\" rel=\"nofollow\">issue tracker</a>.</p>\n\n          </div>"}, "last_serial": 6747292, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "d3ba320137ab22ad5a769a7b91c449c3", "sha256": "94f0836817dbe94ee2ad50cede470ae8e5862b409172e5f41b84ba8f77982384"}, "downloads": -1, "filename": "robotarium_python_simulator-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3ba320137ab22ad5a769a7b91c449c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24990, "upload_time": "2020-03-04T11:44:01", "upload_time_iso_8601": "2020-03-04T11:44:01.517628Z", "url": "https://files.pythonhosted.org/packages/2b/a4/01667c5979490c9851bd0c4becaf4d5c72b9ce7206e26a5c36987ae1823b/robotarium_python_simulator-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "424c0f1bbdd6d9136d544cec1275e276", "sha256": "381d4a805900ea3b5cab4b9a0e30fee6dc7e501772f22bee98eeeb5a5a4fe617"}, "downloads": -1, "filename": "robotarium_python_simulator-0.0.0.tar.gz", "has_sig": false, "md5_digest": "424c0f1bbdd6d9136d544cec1275e276", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20179, "upload_time": "2020-03-04T11:44:03", "upload_time_iso_8601": "2020-03-04T11:44:03.959162Z", "url": "https://files.pythonhosted.org/packages/8a/bc/3ff32e9f421514a4b766ecc22eb55a4f42a1d78c5bbf0bf23cff1288deed/robotarium_python_simulator-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3ba320137ab22ad5a769a7b91c449c3", "sha256": "94f0836817dbe94ee2ad50cede470ae8e5862b409172e5f41b84ba8f77982384"}, "downloads": -1, "filename": "robotarium_python_simulator-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3ba320137ab22ad5a769a7b91c449c3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24990, "upload_time": "2020-03-04T11:44:01", "upload_time_iso_8601": "2020-03-04T11:44:01.517628Z", "url": "https://files.pythonhosted.org/packages/2b/a4/01667c5979490c9851bd0c4becaf4d5c72b9ce7206e26a5c36987ae1823b/robotarium_python_simulator-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "424c0f1bbdd6d9136d544cec1275e276", "sha256": "381d4a805900ea3b5cab4b9a0e30fee6dc7e501772f22bee98eeeb5a5a4fe617"}, "downloads": -1, "filename": "robotarium_python_simulator-0.0.0.tar.gz", "has_sig": false, "md5_digest": "424c0f1bbdd6d9136d544cec1275e276", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20179, "upload_time": "2020-03-04T11:44:03", "upload_time_iso_8601": "2020-03-04T11:44:03.959162Z", "url": "https://files.pythonhosted.org/packages/8a/bc/3ff32e9f421514a4b766ecc22eb55a4f42a1d78c5bbf0bf23cff1288deed/robotarium_python_simulator-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:00 2020"}