{"info": {"author": "R\u00e9mi 'Mr e-RL'LANGDORPH", "author_email": "r.langdorph@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# MrlDB by R\u00e9mi \"Mr e-RL\" LANGDORPH\n## Copyright (c) 2019 R\u00e9mi LANGDORPH - mrerl@warlegend.net (under MIT license)\n\n# mrldb is a powerfull database handler for python\n## Links:\n#### [pypi project](https://pypi.org/project/mrldb/)\n#### [github repo](https://github.com/merlleu/mrldb)\n\n## Install with pypi:\n```\npip install mrldb\n```\n\n### This package supports the followings database systems: mariadb, mysql, cassandra, sqlite3\n# DOCUMENTATION\n\n* **MrlDBCluster**(): a cluster of databases, the last created *MrlDBCluster* can be accessible via **mdbcl**\n  * *MrlDBCluster*.**get**(*name*): return the **MrlDB** from the alias or the name\n  * *MrlDBCluster*.**add**(*name, db, aliases=[]*): add a ***MrlDB*** object with the name (overwrite if an object has the same name), and link the aliases\n  * *MrlDBCluster*.**addalias**(*name, aliases*): link aliases to the name\n  * *MrlDBCluster*.**get_cluster_infos**(): return a **dict** with all the config of the connections `{\"name\": {config...}}`\n\n  * *MrlDBCluster* **[name]**: return the db from the alias or the name\n  * **for name, connection in** *MrlDBCluster*: iterate over a list of **tuple** `(dbname, connection)`\n\n  * *MrlDBCluster*.**dbs**: a **dict** with all the connections `{\"conn1\": <MrlDB>, ...}`\n  * *MrlDBCluster*.**aliases**: a **dict** with all the aliases and the realname `{\"alias\": \"realname\", ...}`\n```python\nfrom mrldb import MrlDBCluster, mdbcl\nmycluster=MrlDBCluster()\n```\n* **mdbcl**: return  the last created **MrlDBCluster**\n```python\nprint(mdbcl)\n```\n\n* **mdbstr**: an object to generate sql commands(**str**), (the same as the one included in the **MrlDB** classes)\n  * *mdbstr*.**insert**(*table, data*): return **str** command to insert a new record\n    * table is a **str** of the table where the insert must be executed\n    * data is **dict** with the columns and the values to insert {\"col1\": \"value1\", \"col2\", 3.14}\n  * *mdbstr*.**update**(*table, data, conds=None*): return **str** command to update an existing(s) record(s)\n    * table is a **str** of the table where the update must be executed\n    * data is **dict** with the columns and the values to update {\"col1\": \"value1\", \"col2\", 3.14}\n    * conds are a **str** object as `\"col1='test' and col2=5\"` or a **NoneType** object if you want to update all the records of your table\n  * *mdbstr*.**select**(*table, columns, conds=None*): return **str** command to get record(s) value(s)\n    * table is a **str** of the table where the select is executed\n    * data is **list** with the columns to get or a `\"*\"` to get all the columns\n    * conds are a **str** object as `\"col1='test' and col2=5\"` or a **NoneType** object if you want to select all the records of your table\n\n## ***MrlDB*** classes\n* **MrlDB** base class: (Base of MrlDBCassandra, MrlDBMsql, MrlDBSqlite)\n  * *MrlDB*.**insert**(*table, data*): insert a new record\n    * table is a **str** of the table where the insert must be executed\n    * data is **dict** with the columns and the values to insert {\"col1\": \"value1\", \"col2\", 3.14}\n  * *MrlDB*.**update**(*table, data, conds=None*): update an existing(s) record(s)\n    * table is a **str** of the table where the update must be executed\n    * data is **dict** with the columns and the values to update {\"col1\": \"value1\", \"col2\", 3.14}\n    * conds are a **str** object as `\"col1='test' and col2=5\"` or a **NoneType** object if you want to update all the records of your table\n  * *MrlDB*.**select**(*table, columns, conds=None*): get record(s) value(s)\n    * table is a **str** of the table where the select is executed\n    * data is **list** with the columns to get or a `\"*\"` to get all the columns\n    * conds are a **str** object as `\"col1='test' and col2=5\"` or a **NoneType** object if you want to select all the records of your table\n  * *MrlDB*.**init**(): create (or ignoreif they already exists) the tables from the db structure\n  * *MrlDB*.**cursor**: a connection, you can use *MrlDB*.**cursor**.*execute*(command)\n  * *MrlDB*.**structure**: a **dict** of the db structure or a **NoneType** object if not specified\n  * *MrlDB*.**_config**: a **dict** of the connexion config\n  * *MrlDB*.**_getinfos**(): return *MrlDB*.**_config**\n\n\n* **MrlDBCassandra**(*cluster, db=None, structure=None, username=None, password=None*): a cassandra cluster handler, require library `cassandra-driver`\n  * you can use the database you want or don't use it\n  * username and passsword are only used with PlainTextAuthProvider, if you've configured users and password for your db, else, we're connecting as anonymous\n\n* **MrlDBMsql**(*host, database=None, structure=None, user=None, password=None*): a cassandra cluster handler, require library `mysql`\n  * host is the ip adress of the host or a dns-resolvable name of the host\n  * you can use the database you want\n  * username and passsword are only used with PlainTextAuthProvider, if you've configured users and password for your db, else, we're connecting as anonymous\n\n* **MrlDBSqlite**(*file, structure=None, autocommit=0*): a sqlite file handler, require base library `sqlite3` (not recommanded)\n  * the file is sqlite3 db file\n  * autocommit is the time in seconds (can be a float) between each autocommit, disabled if set 0 (by default)\n\n\n## STRUCTURE argument\n#### with structure, you can get the column names with the results in a dict for each records\n#### structure is an argument for all the DB classes, it must be a None oject or a dictionnary:\n```python\nMrlDBCassandra(... ,structure={\"table0\": {\"col1\": \"integer unique\", \"col2\": \"text\"}, \"table2\": {\"name\": \"text\"}}, ...)\n```\n\n\n\n# Tutorial script:\n```python\nfrom mrldb import MrlDBCassandra, MrlDBCluster, mdbcl, mdbstr\n```\n\n* we add a simple cassandra cluster as connection to the mrldb cluster, we set cc0 as an alias to the db\n```python\nmdbcl.add(\"cassandracluster0\", MrlDBCassandra(\"127.0.0.2\"), aliases=[\"cc0\"])\n```\n* we can add other aliases to this connection:\n```python\nmdbcl.addalias(\"cassandracluster0\", [\"cc0_\", \"cassandra0\", \"testcluster\"])\n```\n* you can connect to your host with password and username\n```python\nmdbcl.add(\"cassandracluster1\", MrlDBCassandra(\"127.0.0.3\", username=\"admin\", password=\"something\"))\n```\n* you can specify the database too\n```python\nmdbcl.add(\"cassandracluster2\", MrlDBCassandra(\"127.0.0.4\", database=\"mydbtest\", aliases=[\"cc3\"]))\n```\n* and the best, you can provide database structure to have advanced features\n```python\nmdbcl.add(\"cassandracluster3\", MrlDBCassandra(\"127.0.0.5\", database=\"mydbtest\",\nstructure={\"table0\": {\"col1\": \"integer unique\", \"col2\": \"text\"}, \"table2\": {\"name\": \"text\"}}), aliases=[\"cc3\"])\n```\n\nthe following examples are working for all the differents database systems\n## SELECT\n* with the correct structure, the following command will give you for each records a dict with the col name and the value, (you can replace the columns by a `\"*\"`\n```python\nmdbcl.get(\"cc3\").select(table=\"table0\", columns=[\"col1\"], conds=None)\n```\n`result= [{\"col1\": 0}, {\"col1\": 1}...]`\n\n* you can use this without structure, it just return the results without dictionnarys\n```python\nmdbcl.get(\"cc2\").select(table=\"table0\", columns=[\"col1\"], conds=None)\n```\n`result= [(0, ), (1, )...]`\n\n* you can use conditions\n```python\nmdbcl.get(\"cc3\").select(table=\"table0\", columns=\"*\", conds=\"col2='test'\")\n```\n`result= [{\"col1\": 0, \"col2\": \"test\"}, ...]`\n* in sql (not in cql !), you can do sql subrequests, we are formatting them with **mdbstr** class\n```python\nmdbcl.get(\"cc3\").select(table=\"table0\", columns=\"*\", conds=f\"\"\"(col2='test') or (col1 not in ({mdbstr.select(table='table2', columns='*', conds=\"name='john' \")}))\"\"\")\n```\nwill execute this command: `\"SELECT * FROM table0 WHERE (col2='test') or (in (SELECT * FROM table2 WHERE name='john' ))\"`\n###### `result= [{\"col1\": 0, \"col2\": \"test\"}, ...]`\n\n\n## INSERT\n* data is a dict with all the values to insert\n```python\nmdbcl.get(\"cc3\").insert(table=\"table0\", data={\"col1\": 5, \"col2\": \"ok\"})\n```\n\n## UPDATE\n* use data as the insert command, you can specify conditions with conds\n```python\nmdbcl.get(\"cc3\").update(table=\"table0\", data={\"col1\": 5, \"col2\": \"ok\"}, conds=\"col2='test'\")\n```\n\n\n## DB init\n* will create the table (or ignore if exists) as the structure\n```python\nmdbcl.get(\"cc3\").init()\n```\n\n### with `structure={\"table0\": {\"col1\": \"integer unique\", \"col2\": \"text\"}, \"table2\": {\"name\": \"text\"}}`\n### will execute the following commands:\n```python\n['CREATE TABLE IF NOT EXISTS table0(col1 integer unique, col2 text)',\n 'CREATE TABLE IF NOT EXISTS table2(name text)']\n ```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/merlleu/mrldb", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mrldb", "package_url": "https://pypi.org/project/mrldb/", "platform": "", "project_url": "https://pypi.org/project/mrldb/", "project_urls": {"Homepage": "https://github.com/merlleu/mrldb"}, "release_url": "https://pypi.org/project/mrldb/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "A library to handle your databases: cassandra, mariadb, (mysql), sqlite3", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MrlDB by R\u00e9mi \"Mr e-RL\" LANGDORPH</h1>\n<h2>Copyright (c) 2019 R\u00e9mi LANGDORPH - <a href=\"mailto:mrerl@warlegend.net\">mrerl@warlegend.net</a> (under MIT license)</h2>\n<h1>mrldb is a powerfull database handler for python</h1>\n<h2>Links:</h2>\n<h4><a href=\"https://pypi.org/project/mrldb/\" rel=\"nofollow\">pypi project</a></h4>\n<h4><a href=\"https://github.com/merlleu/mrldb\" rel=\"nofollow\">github repo</a></h4>\n<h2>Install with pypi:</h2>\n<pre><code>pip install mrldb\n</code></pre>\n<h3>This package supports the followings database systems: mariadb, mysql, cassandra, sqlite3</h3>\n<h1>DOCUMENTATION</h1>\n<ul>\n<li><strong>MrlDBCluster</strong>(): a cluster of databases, the last created <em>MrlDBCluster</em> can be accessible via <strong>mdbcl</strong>\n<ul>\n<li>\n<p><em>MrlDBCluster</em>.<strong>get</strong>(<em>name</em>): return the <strong>MrlDB</strong> from the alias or the name</p>\n</li>\n<li>\n<p><em>MrlDBCluster</em>.<strong>add</strong>(<em>name, db, aliases=[]</em>): add a <em><strong>MrlDB</strong></em> object with the name (overwrite if an object has the same name), and link the aliases</p>\n</li>\n<li>\n<p><em>MrlDBCluster</em>.<strong>addalias</strong>(<em>name, aliases</em>): link aliases to the name</p>\n</li>\n<li>\n<p><em>MrlDBCluster</em>.<strong>get_cluster_infos</strong>(): return a <strong>dict</strong> with all the config of the connections <code>{\"name\": {config...}}</code></p>\n</li>\n<li>\n<p><em>MrlDBCluster</em> <strong>[name]</strong>: return the db from the alias or the name</p>\n</li>\n<li>\n<p><strong>for name, connection in</strong> <em>MrlDBCluster</em>: iterate over a list of <strong>tuple</strong> <code>(dbname, connection)</code></p>\n</li>\n<li>\n<p><em>MrlDBCluster</em>.<strong>dbs</strong>: a <strong>dict</strong> with all the connections <code>{\"conn1\": &lt;MrlDB&gt;, ...}</code></p>\n</li>\n<li>\n<p><em>MrlDBCluster</em>.<strong>aliases</strong>: a <strong>dict</strong> with all the aliases and the realname <code>{\"alias\": \"realname\", ...}</code></p>\n</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mrldb</span> <span class=\"kn\">import</span> <span class=\"n\">MrlDBCluster</span><span class=\"p\">,</span> <span class=\"n\">mdbcl</span>\n<span class=\"n\">mycluster</span><span class=\"o\">=</span><span class=\"n\">MrlDBCluster</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><strong>mdbcl</strong>: return  the last created <strong>MrlDBCluster</strong></li>\n</ul>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mdbcl</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li><strong>mdbstr</strong>: an object to generate sql commands(<strong>str</strong>), (the same as the one included in the <strong>MrlDB</strong> classes)\n<ul>\n<li><em>mdbstr</em>.<strong>insert</strong>(<em>table, data</em>): return <strong>str</strong> command to insert a new record\n<ul>\n<li>table is a <strong>str</strong> of the table where the insert must be executed</li>\n<li>data is <strong>dict</strong> with the columns and the values to insert {\"col1\": \"value1\", \"col2\", 3.14}</li>\n</ul>\n</li>\n<li><em>mdbstr</em>.<strong>update</strong>(<em>table, data, conds=None</em>): return <strong>str</strong> command to update an existing(s) record(s)\n<ul>\n<li>table is a <strong>str</strong> of the table where the update must be executed</li>\n<li>data is <strong>dict</strong> with the columns and the values to update {\"col1\": \"value1\", \"col2\", 3.14}</li>\n<li>conds are a <strong>str</strong> object as <code>\"col1='test' and col2=5\"</code> or a <strong>NoneType</strong> object if you want to update all the records of your table</li>\n</ul>\n</li>\n<li><em>mdbstr</em>.<strong>select</strong>(<em>table, columns, conds=None</em>): return <strong>str</strong> command to get record(s) value(s)\n<ul>\n<li>table is a <strong>str</strong> of the table where the select is executed</li>\n<li>data is <strong>list</strong> with the columns to get or a <code>\"*\"</code> to get all the columns</li>\n<li>conds are a <strong>str</strong> object as <code>\"col1='test' and col2=5\"</code> or a <strong>NoneType</strong> object if you want to select all the records of your table</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2><em><strong>MrlDB</strong></em> classes</h2>\n<ul>\n<li>\n<p><strong>MrlDB</strong> base class: (Base of MrlDBCassandra, MrlDBMsql, MrlDBSqlite)</p>\n<ul>\n<li><em>MrlDB</em>.<strong>insert</strong>(<em>table, data</em>): insert a new record\n<ul>\n<li>table is a <strong>str</strong> of the table where the insert must be executed</li>\n<li>data is <strong>dict</strong> with the columns and the values to insert {\"col1\": \"value1\", \"col2\", 3.14}</li>\n</ul>\n</li>\n<li><em>MrlDB</em>.<strong>update</strong>(<em>table, data, conds=None</em>): update an existing(s) record(s)\n<ul>\n<li>table is a <strong>str</strong> of the table where the update must be executed</li>\n<li>data is <strong>dict</strong> with the columns and the values to update {\"col1\": \"value1\", \"col2\", 3.14}</li>\n<li>conds are a <strong>str</strong> object as <code>\"col1='test' and col2=5\"</code> or a <strong>NoneType</strong> object if you want to update all the records of your table</li>\n</ul>\n</li>\n<li><em>MrlDB</em>.<strong>select</strong>(<em>table, columns, conds=None</em>): get record(s) value(s)\n<ul>\n<li>table is a <strong>str</strong> of the table where the select is executed</li>\n<li>data is <strong>list</strong> with the columns to get or a <code>\"*\"</code> to get all the columns</li>\n<li>conds are a <strong>str</strong> object as <code>\"col1='test' and col2=5\"</code> or a <strong>NoneType</strong> object if you want to select all the records of your table</li>\n</ul>\n</li>\n<li><em>MrlDB</em>.<strong>init</strong>(): create (or ignoreif they already exists) the tables from the db structure</li>\n<li><em>MrlDB</em>.<strong>cursor</strong>: a connection, you can use <em>MrlDB</em>.<strong>cursor</strong>.<em>execute</em>(command)</li>\n<li><em>MrlDB</em>.<strong>structure</strong>: a <strong>dict</strong> of the db structure or a <strong>NoneType</strong> object if not specified</li>\n<li><em>MrlDB</em>.<strong>_config</strong>: a <strong>dict</strong> of the connexion config</li>\n<li><em>MrlDB</em>.<strong>_getinfos</strong>(): return <em>MrlDB</em>.<strong>_config</strong></li>\n</ul>\n</li>\n<li>\n<p><strong>MrlDBCassandra</strong>(<em>cluster, db=None, structure=None, username=None, password=None</em>): a cassandra cluster handler, require library <code>cassandra-driver</code></p>\n<ul>\n<li>you can use the database you want or don't use it</li>\n<li>username and passsword are only used with PlainTextAuthProvider, if you've configured users and password for your db, else, we're connecting as anonymous</li>\n</ul>\n</li>\n<li>\n<p><strong>MrlDBMsql</strong>(<em>host, database=None, structure=None, user=None, password=None</em>): a cassandra cluster handler, require library <code>mysql</code></p>\n<ul>\n<li>host is the ip adress of the host or a dns-resolvable name of the host</li>\n<li>you can use the database you want</li>\n<li>username and passsword are only used with PlainTextAuthProvider, if you've configured users and password for your db, else, we're connecting as anonymous</li>\n</ul>\n</li>\n<li>\n<p><strong>MrlDBSqlite</strong>(<em>file, structure=None, autocommit=0</em>): a sqlite file handler, require base library <code>sqlite3</code> (not recommanded)</p>\n<ul>\n<li>the file is sqlite3 db file</li>\n<li>autocommit is the time in seconds (can be a float) between each autocommit, disabled if set 0 (by default)</li>\n</ul>\n</li>\n</ul>\n<h2>STRUCTURE argument</h2>\n<h4>with structure, you can get the column names with the results in a dict for each records</h4>\n<h4>structure is an argument for all the DB classes, it must be a None oject or a dictionnary:</h4>\n<pre><span class=\"n\">MrlDBCassandra</span><span class=\"p\">(</span><span class=\"o\">...</span> <span class=\"p\">,</span><span class=\"n\">structure</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"table0\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"col1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"integer unique\"</span><span class=\"p\">,</span> <span class=\"s2\">\"col2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"text\"</span><span class=\"p\">},</span> <span class=\"s2\">\"table2\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"text\"</span><span class=\"p\">}},</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<h1>Tutorial script:</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mrldb</span> <span class=\"kn\">import</span> <span class=\"n\">MrlDBCassandra</span><span class=\"p\">,</span> <span class=\"n\">MrlDBCluster</span><span class=\"p\">,</span> <span class=\"n\">mdbcl</span><span class=\"p\">,</span> <span class=\"n\">mdbstr</span>\n</pre>\n<ul>\n<li>we add a simple cassandra cluster as connection to the mrldb cluster, we set cc0 as an alias to the db</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"cassandracluster0\"</span><span class=\"p\">,</span> <span class=\"n\">MrlDBCassandra</span><span class=\"p\">(</span><span class=\"s2\">\"127.0.0.2\"</span><span class=\"p\">),</span> <span class=\"n\">aliases</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"cc0\"</span><span class=\"p\">])</span>\n</pre>\n<ul>\n<li>we can add other aliases to this connection:</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">addalias</span><span class=\"p\">(</span><span class=\"s2\">\"cassandracluster0\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"cc0_\"</span><span class=\"p\">,</span> <span class=\"s2\">\"cassandra0\"</span><span class=\"p\">,</span> <span class=\"s2\">\"testcluster\"</span><span class=\"p\">])</span>\n</pre>\n<ul>\n<li>you can connect to your host with password and username</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"cassandracluster1\"</span><span class=\"p\">,</span> <span class=\"n\">MrlDBCassandra</span><span class=\"p\">(</span><span class=\"s2\">\"127.0.0.3\"</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"admin\"</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">\"something\"</span><span class=\"p\">))</span>\n</pre>\n<ul>\n<li>you can specify the database too</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"cassandracluster2\"</span><span class=\"p\">,</span> <span class=\"n\">MrlDBCassandra</span><span class=\"p\">(</span><span class=\"s2\">\"127.0.0.4\"</span><span class=\"p\">,</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">\"mydbtest\"</span><span class=\"p\">,</span> <span class=\"n\">aliases</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"cc3\"</span><span class=\"p\">]))</span>\n</pre>\n<ul>\n<li>and the best, you can provide database structure to have advanced features</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"cassandracluster3\"</span><span class=\"p\">,</span> <span class=\"n\">MrlDBCassandra</span><span class=\"p\">(</span><span class=\"s2\">\"127.0.0.5\"</span><span class=\"p\">,</span> <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">\"mydbtest\"</span><span class=\"p\">,</span>\n<span class=\"n\">structure</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"table0\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"col1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"integer unique\"</span><span class=\"p\">,</span> <span class=\"s2\">\"col2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"text\"</span><span class=\"p\">},</span> <span class=\"s2\">\"table2\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"text\"</span><span class=\"p\">}}),</span> <span class=\"n\">aliases</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"cc3\"</span><span class=\"p\">])</span>\n</pre>\n<p>the following examples are working for all the differents database systems</p>\n<h2>SELECT</h2>\n<ul>\n<li>with the correct structure, the following command will give you for each records a dict with the col name and the value, (you can replace the columns by a <code>\"*\"</code></li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"cc3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s2\">\"table0\"</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"col1\"</span><span class=\"p\">],</span> <span class=\"n\">conds</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p><code>result= [{\"col1\": 0}, {\"col1\": 1}...]</code></p>\n<ul>\n<li>you can use this without structure, it just return the results without dictionnarys</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"cc2\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s2\">\"table0\"</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"col1\"</span><span class=\"p\">],</span> <span class=\"n\">conds</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p><code>result= [(0, ), (1, )...]</code></p>\n<ul>\n<li>you can use conditions</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"cc3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s2\">\"table0\"</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"s2\">\"*\"</span><span class=\"p\">,</span> <span class=\"n\">conds</span><span class=\"o\">=</span><span class=\"s2\">\"col2='test'\"</span><span class=\"p\">)</span>\n</pre>\n<p><code>result= [{\"col1\": 0, \"col2\": \"test\"}, ...]</code></p>\n<ul>\n<li>in sql (not in cql !), you can do sql subrequests, we are formatting them with <strong>mdbstr</strong> class</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"cc3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s2\">\"table0\"</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"s2\">\"*\"</span><span class=\"p\">,</span> <span class=\"n\">conds</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">\"\"\"(col2='test') or (col1 not in (</span><span class=\"si\">{</span><span class=\"n\">mdbstr</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s1\">'table2'</span><span class=\"p\">,</span> <span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"n\">conds</span><span class=\"o\">=</span><span class=\"s2\">\"name='john' \"</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">))\"\"\"</span><span class=\"p\">)</span>\n</pre>\n<p>will execute this command: <code>\"SELECT * FROM table0 WHERE (col2='test') or (in (SELECT * FROM table2 WHERE name='john' ))\"</code></p>\n<h6><code>result= [{\"col1\": 0, \"col2\": \"test\"}, ...]</code></h6>\n<h2>INSERT</h2>\n<ul>\n<li>data is a dict with all the values to insert</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"cc3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s2\">\"table0\"</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"col1\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s2\">\"col2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ok\"</span><span class=\"p\">})</span>\n</pre>\n<h2>UPDATE</h2>\n<ul>\n<li>use data as the insert command, you can specify conditions with conds</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"cc3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s2\">\"table0\"</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"col1\"</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s2\">\"col2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ok\"</span><span class=\"p\">},</span> <span class=\"n\">conds</span><span class=\"o\">=</span><span class=\"s2\">\"col2='test'\"</span><span class=\"p\">)</span>\n</pre>\n<h2>DB init</h2>\n<ul>\n<li>will create the table (or ignore if exists) as the structure</li>\n</ul>\n<pre><span class=\"n\">mdbcl</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"cc3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>\n</pre>\n<h3>with <code>structure={\"table0\": {\"col1\": \"integer unique\", \"col2\": \"text\"}, \"table2\": {\"name\": \"text\"}}</code></h3>\n<h3>will execute the following commands:</h3>\n<pre><span class=\"p\">[</span><span class=\"s1\">'CREATE TABLE IF NOT EXISTS table0(col1 integer unique, col2 text)'</span><span class=\"p\">,</span>\n <span class=\"s1\">'CREATE TABLE IF NOT EXISTS table2(name text)'</span><span class=\"p\">]</span>\n</pre>\n\n          </div>"}, "last_serial": 6479700, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9b34725fd3aaa3daa7cdffa7c85ed88f", "sha256": "6ce440a54a3f022ca9df3116b586ceba054cef65499ae141055229f4891c4d42"}, "downloads": -1, "filename": "mrldb-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9b34725fd3aaa3daa7cdffa7c85ed88f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4456, "upload_time": "2019-04-30T01:03:41", "upload_time_iso_8601": "2019-04-30T01:03:41.854108Z", "url": "https://files.pythonhosted.org/packages/0e/0d/ca60aca9ef8a6991f097ce1d1d7d31ec24d8bff05f902e3339ab8302bf0c/mrldb-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "eac4177ee2a8ba4f0aa973e6ff7443b7", "sha256": "4189e2bb3976e4b84e798190525f8828da78bb89320a0d01a11617c6323230bc"}, "downloads": -1, "filename": "mrldb-0.0.10.tar.gz", "has_sig": false, "md5_digest": "eac4177ee2a8ba4f0aa973e6ff7443b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6859, "upload_time": "2019-04-30T21:05:04", "upload_time_iso_8601": "2019-04-30T21:05:04.095260Z", "url": "https://files.pythonhosted.org/packages/02/68/e15d1983f14b8383255238847b942b258a2f58f100d6109ce7115dfec653/mrldb-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "95b708ce2877653d50e3135f9f62d8a5", "sha256": "31b2faed85969f8ca7b81ff3022c1171faa051ef7f8b4806b2b7635bc81d9b36"}, "downloads": -1, "filename": "mrldb-0.0.11.tar.gz", "has_sig": false, "md5_digest": "95b708ce2877653d50e3135f9f62d8a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6867, "upload_time": "2019-04-30T21:18:54", "upload_time_iso_8601": "2019-04-30T21:18:54.775028Z", "url": "https://files.pythonhosted.org/packages/c6/b1/e8c1a8b15fbadf6a6cbed5bfcd9fb0ecd760a86e9ccb1ca784b729300d83/mrldb-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "69dd084dbc42b4ad7e2b45206bee7aea", "sha256": "cd6edfb5e51ae3787593577eb35a91240265bb6d55f471b9e10bc3e35e90b6c9"}, "downloads": -1, "filename": "mrldb-0.0.12.tar.gz", "has_sig": false, "md5_digest": "69dd084dbc42b4ad7e2b45206bee7aea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6844, "upload_time": "2019-04-30T22:37:02", "upload_time_iso_8601": "2019-04-30T22:37:02.066873Z", "url": "https://files.pythonhosted.org/packages/d9/ad/a95a4d0c6f254ded3e51107ee43dd6819e7f47d4cff195d0216898db3c80/mrldb-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "0b7cb0edbbef5f8262d01d30976b3913", "sha256": "3741878b4979173316f156e8f3299923113a09d490cb1cda91cc4717b2b38dab"}, "downloads": -1, "filename": "mrldb-0.0.13.tar.gz", "has_sig": false, "md5_digest": "0b7cb0edbbef5f8262d01d30976b3913", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6839, "upload_time": "2019-04-30T22:57:51", "upload_time_iso_8601": "2019-04-30T22:57:51.234567Z", "url": "https://files.pythonhosted.org/packages/dc/ff/6e86f6e315bd734da91c88f7a882be963c36fbaf0b3e4db88abf12862194/mrldb-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "141b529945fc2bf540317206556e89a0", "sha256": "41b16573cbccdb74aaaaee8a636086197d157897675e6c3e897825341c6b15ee"}, "downloads": -1, "filename": "mrldb-0.0.14.tar.gz", "has_sig": false, "md5_digest": "141b529945fc2bf540317206556e89a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6847, "upload_time": "2019-04-30T23:02:50", "upload_time_iso_8601": "2019-04-30T23:02:50.159402Z", "url": "https://files.pythonhosted.org/packages/1e/66/ead6e92fb5ff8050743a5775fe5699a600f9c98855f8fa3641f5154bf526/mrldb-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "8c488116701e7f2e698050af84d1a8e2", "sha256": "1ff846aa5ce3315cc2a2dd1046467964aaefffa35ce1509a1076478b80b07803"}, "downloads": -1, "filename": "mrldb-0.0.15.tar.gz", "has_sig": false, "md5_digest": "8c488116701e7f2e698050af84d1a8e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6840, "upload_time": "2019-04-30T23:07:05", "upload_time_iso_8601": "2019-04-30T23:07:05.230988Z", "url": "https://files.pythonhosted.org/packages/aa/4f/b506a725e582522efbd91d52ce99d266f1a8717de1f4835e6623b469db23/mrldb-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "a73f9ed410911b71b795f8e29a67378c", "sha256": "c39d21a3b3f077ba35b3baf6e4cdf037fc7b785d8528bae30ce1f92274395659"}, "downloads": -1, "filename": "mrldb-0.0.16.tar.gz", "has_sig": false, "md5_digest": "a73f9ed410911b71b795f8e29a67378c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6898, "upload_time": "2019-05-01T10:35:50", "upload_time_iso_8601": "2019-05-01T10:35:50.747892Z", "url": "https://files.pythonhosted.org/packages/80/12/457fbfdf9ef48d1850446db010ed79788b947d6af7e3ddb3e568b0533d77/mrldb-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "9f12bb92c9273ea2b407620b34186c11", "sha256": "1f763d076fb50d96374f74622327caa13f25ff32686325bab4be63d63366a916"}, "downloads": -1, "filename": "mrldb-0.0.17.tar.gz", "has_sig": false, "md5_digest": "9f12bb92c9273ea2b407620b34186c11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6924, "upload_time": "2019-05-01T10:48:29", "upload_time_iso_8601": "2019-05-01T10:48:29.364334Z", "url": "https://files.pythonhosted.org/packages/eb/f1/f60e403c69576da61db3430e380e6a8e59cce98bab3d2ecac340a4a0dc8d/mrldb-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "bd5c1aea8d1e8faea3ef1c9f6c1b4b60", "sha256": "16fc7644c5f8fc02223f23ce65c703e7a033584e66bbe5e1e9729fa8c3ca37f3"}, "downloads": -1, "filename": "mrldb-0.0.18.tar.gz", "has_sig": false, "md5_digest": "bd5c1aea8d1e8faea3ef1c9f6c1b4b60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6927, "upload_time": "2019-05-01T10:49:27", "upload_time_iso_8601": "2019-05-01T10:49:27.698503Z", "url": "https://files.pythonhosted.org/packages/c3/63/949af879a8dc948cef5a143f325470627f4df47e87860c2ca8dde12074dd/mrldb-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "b8cafd1d4f9935577244546327b6402f", "sha256": "e4de382817322f02c57ed76d300b3d0ccedac750e07d1fe4347e2045dd877014"}, "downloads": -1, "filename": "mrldb-0.0.19.tar.gz", "has_sig": false, "md5_digest": "b8cafd1d4f9935577244546327b6402f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7532, "upload_time": "2019-05-01T11:42:06", "upload_time_iso_8601": "2019-05-01T11:42:06.451488Z", "url": "https://files.pythonhosted.org/packages/7a/9f/c235975d80afa46e0dae7a3bb2ca9eeb4604cfa337448cbdcfa04c53b989/mrldb-0.0.19.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "70cdf1fbaa6f340ad032c240348823c2", "sha256": "1785b0193ac7294e2cf4a1cdd302ba8ecaad7c274ef4da0d8ad2e5c3a34cb465"}, "downloads": -1, "filename": "mrldb-0.0.2.tar.gz", "has_sig": false, "md5_digest": "70cdf1fbaa6f340ad032c240348823c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4461, "upload_time": "2019-04-30T01:04:33", "upload_time_iso_8601": "2019-04-30T01:04:33.062488Z", "url": "https://files.pythonhosted.org/packages/19/de/70bfbb318594e5d323c1c714b85bd5824fac68c4b79ed64b27fed0858bcb/mrldb-0.0.2.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "0009ab552885d5a726e7b79562968733", "sha256": "7ecc32f54b9b2e7e3d92cec0de3b162096d5480e352c74ca80c7aa7d3344ff20"}, "downloads": -1, "filename": "mrldb-0.0.20.tar.gz", "has_sig": false, "md5_digest": "0009ab552885d5a726e7b79562968733", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7265, "upload_time": "2019-05-04T11:38:16", "upload_time_iso_8601": "2019-05-04T11:38:16.761731Z", "url": "https://files.pythonhosted.org/packages/c1/42/e609345e71121dda39c1373614b730aec2225011dfe8574a4971170e159d/mrldb-0.0.20.tar.gz", "yanked": false}], "0.0.21": [{"comment_text": "", "digests": {"md5": "f40d7d66f72b0f4e0872e4eb60a68858", "sha256": "68690da446e69b19226a35d3d97abf6ebf3b4f3197e3ab9280f48fdc8baa5d9c"}, "downloads": -1, "filename": "mrldb-0.0.21.tar.gz", "has_sig": false, "md5_digest": "f40d7d66f72b0f4e0872e4eb60a68858", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7303, "upload_time": "2019-05-28T16:44:49", "upload_time_iso_8601": "2019-05-28T16:44:49.512001Z", "url": "https://files.pythonhosted.org/packages/5b/66/e26ebec56cf2e14c59c4f7bca3f7f491a56370c4e2bff0de16eae27fa964/mrldb-0.0.21.tar.gz", "yanked": false}], "0.0.22": [{"comment_text": "", "digests": {"md5": "2e889d686675535a43d0ef8ce6877cb7", "sha256": "ed9d673aae5aa4756c1867edb5b48074e10593299aee949cf5baff106923872a"}, "downloads": -1, "filename": "mrldb-0.0.22.tar.gz", "has_sig": false, "md5_digest": "2e889d686675535a43d0ef8ce6877cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7302, "upload_time": "2019-06-02T14:05:53", "upload_time_iso_8601": "2019-06-02T14:05:53.729006Z", "url": "https://files.pythonhosted.org/packages/93/34/fa86942e35d724b9e1c3045d3a0976efa1207478b66a4774539f7f0a0049/mrldb-0.0.22.tar.gz", "yanked": false}], "0.0.23": [{"comment_text": "", "digests": {"md5": "c513e731124a234dc9b14121889b30ee", "sha256": "d4db274eb4a7ba5c586e4414c5091c01711d9aa0fc69859364a8998788e86404"}, "downloads": -1, "filename": "mrldb-0.0.23.tar.gz", "has_sig": false, "md5_digest": "c513e731124a234dc9b14121889b30ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7307, "upload_time": "2019-06-02T14:09:48", "upload_time_iso_8601": "2019-06-02T14:09:48.335395Z", "url": "https://files.pythonhosted.org/packages/1d/eb/b169811ff2149eb4008146553ff8fa6fbc68d698aeef31c346b03d072039/mrldb-0.0.23.tar.gz", "yanked": false}], "0.0.24": [{"comment_text": "", "digests": {"md5": "e78b050111ca0d3767c9e6fac8871546", "sha256": "e3c3ed00738d22e3f3e17030899777616121a84f3048392a2679432e20462c7d"}, "downloads": -1, "filename": "mrldb-0.0.24.tar.gz", "has_sig": false, "md5_digest": "e78b050111ca0d3767c9e6fac8871546", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7310, "upload_time": "2019-06-02T14:12:48", "upload_time_iso_8601": "2019-06-02T14:12:48.365033Z", "url": "https://files.pythonhosted.org/packages/12/fb/20fffd74f07741eb0cd298a7d7ffbbc197534611f6c4d2808f7029391a8f/mrldb-0.0.24.tar.gz", "yanked": false}], "0.0.25": [{"comment_text": "", "digests": {"md5": "69e5f1fd2e6783b100ec61eba3fc3a9c", "sha256": "7aa109355628f2efb8cd837fa1279288cd6eebf5c3d93563b90fb528dbd9d8f7"}, "downloads": -1, "filename": "mrldb-0.0.25.tar.gz", "has_sig": false, "md5_digest": "69e5f1fd2e6783b100ec61eba3fc3a9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7293, "upload_time": "2019-06-02T14:16:34", "upload_time_iso_8601": "2019-06-02T14:16:34.764212Z", "url": "https://files.pythonhosted.org/packages/f7/b4/94453ea90c2fb9eab00c9077230d7ff717257e5819d722cc299a91a9bbf2/mrldb-0.0.25.tar.gz", "yanked": false}], "0.0.26": [{"comment_text": "", "digests": {"md5": "43ca43f97639f363d16a99d68cb396d6", "sha256": "8463c5394f55f9b17d7d35788327c8cc618e2bf6094c7c9f77ef31060e3c3582"}, "downloads": -1, "filename": "mrldb-0.0.26.tar.gz", "has_sig": false, "md5_digest": "43ca43f97639f363d16a99d68cb396d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7292, "upload_time": "2019-06-02T14:18:25", "upload_time_iso_8601": "2019-06-02T14:18:25.124452Z", "url": "https://files.pythonhosted.org/packages/05/48/50397ab0b4bff578bc584a937361eec4a410e13d9cee4ca5b6e5efe36cc1/mrldb-0.0.26.tar.gz", "yanked": false}], "0.0.27": [{"comment_text": "", "digests": {"md5": "59aad365db69a5e5bff04253906a4a02", "sha256": "d7b6f85b221408bad3401386c5c0b78b5112f61b9dcb9ebefbcbd87040cdddac"}, "downloads": -1, "filename": "mrldb-0.0.27.tar.gz", "has_sig": false, "md5_digest": "59aad365db69a5e5bff04253906a4a02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7316, "upload_time": "2019-06-19T16:20:41", "upload_time_iso_8601": "2019-06-19T16:20:41.986413Z", "url": "https://files.pythonhosted.org/packages/62/c2/ce58b67eb53b3cdd03bf15a11d4f8837e8cbb3fb5bd04cd628a3f42f724a/mrldb-0.0.27.tar.gz", "yanked": false}], "0.0.28": [{"comment_text": "", "digests": {"md5": "d2edd971ed11f96fdc033d96d1d61b47", "sha256": "cd805dd7c0314b9ccc6e29508102b31addb3ada43d8e6c06d7e915c15c3377dd"}, "downloads": -1, "filename": "mrldb-0.0.28.tar.gz", "has_sig": false, "md5_digest": "d2edd971ed11f96fdc033d96d1d61b47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7313, "upload_time": "2019-06-19T18:50:42", "upload_time_iso_8601": "2019-06-19T18:50:42.866909Z", "url": "https://files.pythonhosted.org/packages/c6/fd/63efca9bec59e3817f17347eafd79f7fd53b1ad2777c48d80218823c1bab/mrldb-0.0.28.tar.gz", "yanked": false}], "0.0.29": [{"comment_text": "", "digests": {"md5": "9b72e464689445d0cf0929c1c481fbdd", "sha256": "3294d0eaa2df24d81101faaa5d5860141941b3c8779bcf04c033156f6b1ecc2d"}, "downloads": -1, "filename": "mrldb-0.0.29.tar.gz", "has_sig": false, "md5_digest": "9b72e464689445d0cf0929c1c481fbdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8296, "upload_time": "2019-06-28T10:59:39", "upload_time_iso_8601": "2019-06-28T10:59:39.604733Z", "url": "https://files.pythonhosted.org/packages/57/f4/af72bcb212fdddb3c3dc2e9c6fec5e0ac82fea0482395620d5f06131df60/mrldb-0.0.29.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f5ec60056a01b010a63d725dc6b6cafd", "sha256": "7f0eb5b0478a224c964f3434193fc4081ff050125964aaf45520b781a6f53edb"}, "downloads": -1, "filename": "mrldb-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f5ec60056a01b010a63d725dc6b6cafd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5086, "upload_time": "2019-04-30T11:24:13", "upload_time_iso_8601": "2019-04-30T11:24:13.175101Z", "url": "https://files.pythonhosted.org/packages/80/af/11501aefebbee3592a6afefe60150fa2331782a31f148a1cee2f589027b5/mrldb-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "35e93c7f04be14e71be2957f884e121d", "sha256": "1b4b2e545d11a95f2c8036c5ef750dc7ed69e45f802977eced745143f1c01acf"}, "downloads": -1, "filename": "mrldb-0.0.4.tar.gz", "has_sig": false, "md5_digest": "35e93c7f04be14e71be2957f884e121d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6622, "upload_time": "2019-04-30T13:20:30", "upload_time_iso_8601": "2019-04-30T13:20:30.192633Z", "url": "https://files.pythonhosted.org/packages/31/5f/0875fa8615a9640709047cecfb21dea3930cf768c1ba20e6a9a9799aceb0/mrldb-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1d8f256ad23defc58de4aade91e5f313", "sha256": "809b3f4d5fcb8f5885ff296906548c51bfa67ed342ea38eadccd68e7f77c9ebb"}, "downloads": -1, "filename": "mrldb-0.0.5.tar.gz", "has_sig": false, "md5_digest": "1d8f256ad23defc58de4aade91e5f313", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6713, "upload_time": "2019-04-30T13:36:13", "upload_time_iso_8601": "2019-04-30T13:36:13.050801Z", "url": "https://files.pythonhosted.org/packages/55/35/623cc148494b2c21b21512f1b6f3ea2a00ab8f3d3facfcac48d30f82ca1e/mrldb-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "b63e2b7020b6aec1563605b7063d165d", "sha256": "9c3fdcd1b4922720305259a95e46faff01e58838789bc31638a91dce5d691fa0"}, "downloads": -1, "filename": "mrldb-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b63e2b7020b6aec1563605b7063d165d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6748, "upload_time": "2019-04-30T13:41:22", "upload_time_iso_8601": "2019-04-30T13:41:22.114793Z", "url": "https://files.pythonhosted.org/packages/8f/56/7ec197254a7fa23165e38a50b55d106ee5c511f305dcdebaf0fbf95a63d5/mrldb-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "a977308d7c24e6c24eac9098ef8595b1", "sha256": "76db349f9489a8b2cd3bc7e5bff699033a3b3feaef56eda9ab96a37e1976210c"}, "downloads": -1, "filename": "mrldb-0.0.7.tar.gz", "has_sig": false, "md5_digest": "a977308d7c24e6c24eac9098ef8595b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6844, "upload_time": "2019-04-30T20:05:07", "upload_time_iso_8601": "2019-04-30T20:05:07.150815Z", "url": "https://files.pythonhosted.org/packages/65/15/7cc6fc822a69b6c26083f57027f775d62c3b6ce2f10a5f304dc5ef7c66a4/mrldb-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "b331cd3d358f611b04510bda342af67f", "sha256": "b57b1a45dab93b0559b67c58935704e5b7ee9a88b0bf9abba6c08480a3883a2e"}, "downloads": -1, "filename": "mrldb-0.0.8.tar.gz", "has_sig": false, "md5_digest": "b331cd3d358f611b04510bda342af67f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6840, "upload_time": "2019-04-30T20:46:23", "upload_time_iso_8601": "2019-04-30T20:46:23.474872Z", "url": "https://files.pythonhosted.org/packages/7b/d7/94d08956dd5272117a6a05d8c42afd6db235feaf9804a55706832ee54505/mrldb-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "f712c2f387880e31b2a2faafa598fd39", "sha256": "b57d128f02618514999925f02fcf2e9be29b010e96007c2b76fad2eed622173d"}, "downloads": -1, "filename": "mrldb-0.0.9.tar.gz", "has_sig": false, "md5_digest": "f712c2f387880e31b2a2faafa598fd39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6849, "upload_time": "2019-04-30T20:50:03", "upload_time_iso_8601": "2019-04-30T20:50:03.882653Z", "url": "https://files.pythonhosted.org/packages/7d/96/11f3fc9ae7471ba7739503af1cfa8ea645451d834f77220ff15b6fbc9628/mrldb-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "bab50e4db0ab719693b82c6f797489be", "sha256": "6ea7cc151515a4739343989316c764ef5eaac03b6930b3235438a2b294ec18a4"}, "downloads": -1, "filename": "mrldb-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bab50e4db0ab719693b82c6f797489be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8293, "upload_time": "2019-10-29T01:55:17", "upload_time_iso_8601": "2019-10-29T01:55:17.132151Z", "url": "https://files.pythonhosted.org/packages/19/17/2abb4ed26faa6d06021efe665cf91485fc255fab66cd77b11afd2e672474/mrldb-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "bffe5050e9db90f788af6415973af3e0", "sha256": "86aea52a4465a9fe14480698a55fcf965b880a76d1bb7139b1d1613a289eae69"}, "downloads": -1, "filename": "mrldb-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bffe5050e9db90f788af6415973af3e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9466, "upload_time": "2020-01-18T21:56:17", "upload_time_iso_8601": "2020-01-18T21:56:17.745242Z", "url": "https://files.pythonhosted.org/packages/63/4a/7300acc9924df11e625b2879b05302e1513f74a3ece2701bc02ae24ea62a/mrldb-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bffe5050e9db90f788af6415973af3e0", "sha256": "86aea52a4465a9fe14480698a55fcf965b880a76d1bb7139b1d1613a289eae69"}, "downloads": -1, "filename": "mrldb-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bffe5050e9db90f788af6415973af3e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9466, "upload_time": "2020-01-18T21:56:17", "upload_time_iso_8601": "2020-01-18T21:56:17.745242Z", "url": "https://files.pythonhosted.org/packages/63/4a/7300acc9924df11e625b2879b05302e1513f74a3ece2701bc02ae24ea62a/mrldb-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:00 2020"}