{"info": {"author": "Brett Langdon", "author_email": "me@brett.is", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "============\nresumeschema\n============\n\n``resumeschema`` is a `json-schema <http://json-schema.org/>`_ validator for the `resume-schema <https://github.com/jsonresume/resume-schema>`_ spec.\n\n``resumeschema`` is mostly just a wrapper around `jsonschema <https://github.com/Julian/jsonschema>`_.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n   $ [sudo] pip install resumeschema\n\n\nAPI\n---\nvalidate(instance)\n~~~~~~~~~~~~~~~~~~\nCheck if the provided ``instance`` is valid under the ``resume-schema`` spec.\n\nReturns nothing.\n\nRaises a ``jsonschema.ValidationError`` on error.\n\n.. code:: python\n\n   import resumeschema\n   instance = {\n       'basics': {\n           'name': 'Resume Schema',\n       },\n   }\n   resumeschema.validate(instance)\n\n\nis_valid(instance)\n~~~~~~~~~~~~~~~~~~\nCheck if the provided ``instance`` is valid under the ``resume-schema`` spec.\n\nReturns ``True`` if valid ``False`` if not.\n\n.. code:: python\n\n   import resumeschema\n   instance = {\n       'basics': {\n           'name': 'Resume Schema',\n       },\n   }\n   if resumeschema.is_valid(instance):\n       print 'It is valid!'\n\n\niter_errors(instance)\n~~~~~~~~~~~~~~~~~~~~~\nGet an iterator to iterate any ``jsonschema.ValidationErrors`` from the provided ``instance``.\n\nReturns an iterator of ``jsonschema.ValidationErrors``.\n\n.. code:: python\n\n   import resumeschema\n   invalid_instance = {\n       'basics': {\n           # `first_name` is not a supported field\n           'first_name': 'Resume Schema',\n       },\n   }\n   for error in resumeschema.iter_errors(invalid_instance):\n       print error.message\n\n\nvalidator\n~~~~~~~~~\nAn instance of ``jsonschema.Draft4Validator`` to use as you so choose.\n\n\n.. code:: python\n\n   import resumeschema\n   instance = {\n       'basics': {\n           'name': 'Resume Schema',\n       },\n   }\n   resumeschema.validator.validate(instance)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/underdogio/resumeschema-python", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "resumeschema", "package_url": "https://pypi.org/project/resumeschema/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/resumeschema/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/underdogio/resumeschema-python"}, "release_url": "https://pypi.org/project/resumeschema/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "JSON schema validator for the resume-schema (https://github.com/jsonresume/resume-schema) spec", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>resumeschema</tt> is a <a href=\"http://json-schema.org/\" rel=\"nofollow\">json-schema</a> validator for the <a href=\"https://github.com/jsonresume/resume-schema\" rel=\"nofollow\">resume-schema</a> spec.</p>\n<p><tt>resumeschema</tt> is mostly just a wrapper around <a href=\"https://github.com/Julian/jsonschema\" rel=\"nofollow\">jsonschema</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ <span class=\"o\">[</span>sudo<span class=\"o\">]</span> pip install resumeschema\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<div id=\"validate-instance\">\n<h3>validate(instance)</h3>\n<p>Check if the provided <tt>instance</tt> is valid under the <tt><span class=\"pre\">resume-schema</span></tt> spec.</p>\n<p>Returns nothing.</p>\n<p>Raises a <tt>jsonschema.ValidationError</tt> on error.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">resumeschema</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'basics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Resume Schema'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n<span class=\"n\">resumeschema</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"is-valid-instance\">\n<h3>is_valid(instance)</h3>\n<p>Check if the provided <tt>instance</tt> is valid under the <tt><span class=\"pre\">resume-schema</span></tt> spec.</p>\n<p>Returns <tt>True</tt> if valid <tt>False</tt> if not.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">resumeschema</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'basics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Resume Schema'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n<span class=\"k\">if</span> <span class=\"n\">resumeschema</span><span class=\"o\">.</span><span class=\"n\">is_valid</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'It is valid!'</span>\n</pre>\n</div>\n<div id=\"iter-errors-instance\">\n<h3>iter_errors(instance)</h3>\n<p>Get an iterator to iterate any <tt>jsonschema.ValidationErrors</tt> from the provided <tt>instance</tt>.</p>\n<p>Returns an iterator of <tt>jsonschema.ValidationErrors</tt>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">resumeschema</span>\n<span class=\"n\">invalid_instance</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'basics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"c1\"># `first_name` is not a supported field</span>\n        <span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'Resume Schema'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n<span class=\"k\">for</span> <span class=\"n\">error</span> <span class=\"ow\">in</span> <span class=\"n\">resumeschema</span><span class=\"o\">.</span><span class=\"n\">iter_errors</span><span class=\"p\">(</span><span class=\"n\">invalid_instance</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"n\">error</span><span class=\"o\">.</span><span class=\"n\">message</span>\n</pre>\n</div>\n<div id=\"validator\">\n<h3>validator</h3>\n<p>An instance of <tt>jsonschema.Draft4Validator</tt> to use as you so choose.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">resumeschema</span>\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'basics'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Resume Schema'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n<span class=\"n\">resumeschema</span><span class=\"o\">.</span><span class=\"n\">validator</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2013109, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "63d72c617c641374907ff97b7524f530", "sha256": "0cab4f6eb671c48dac6a851d91661ee474ab54f54e06a499dd290f58728c2e0b"}, "downloads": -1, "filename": "resumeschema-1.0.0.tar.gz", "has_sig": false, "md5_digest": "63d72c617c641374907ff97b7524f530", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6968, "upload_time": "2016-03-17T21:19:00", "upload_time_iso_8601": "2016-03-17T21:19:00.615356Z", "url": "https://files.pythonhosted.org/packages/0b/e9/e86287caf4c778f45514b698da302290a7538f38790b4a4591522defb3a4/resumeschema-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63d72c617c641374907ff97b7524f530", "sha256": "0cab4f6eb671c48dac6a851d91661ee474ab54f54e06a499dd290f58728c2e0b"}, "downloads": -1, "filename": "resumeschema-1.0.0.tar.gz", "has_sig": false, "md5_digest": "63d72c617c641374907ff97b7524f530", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6968, "upload_time": "2016-03-17T21:19:00", "upload_time_iso_8601": "2016-03-17T21:19:00.615356Z", "url": "https://files.pythonhosted.org/packages/0b/e9/e86287caf4c778f45514b698da302290a7538f38790b4a4591522defb3a4/resumeschema-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:28 2020"}