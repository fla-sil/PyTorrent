{"info": {"author": "Farhan Khan", "author_email": "farhan0581@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![PyPI version](https://badge.fury.io/py/django-admin-autocomplete-filter.svg)](https://badge.fury.io/py/django-admin-autocomplete-filter)\n\nDjango Admin Autocomplete Filter\n================================\nA simple Django app to render list filters in django admin using autocomplete widget. This app is heavily inspired from [dal-admin-filters.](https://github.com/shamanu4/dal_admin_filters)\n\nOverview:\n---------\n\nDjango comes preshipped with an admin panel which is a great utility to create quick CRUD's.\nThe django 2.0 came with much needed [autocomplete_fields](https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#django.contrib.admin.ModelAdmin.autocomplete_fields \"autocomplete_fields\") which uses select2 widget that comes with a search feature that loads the options asynchronously.\nWe can use this in django admin list filter.\n\n\n\nRequirements:\n-----------\nRequires Django version >= 2.0\n\nInstallation:\n------------\nYou can install it via pip or to get the latest version clone this repo.\n\n```shell script\npip install django-admin-autocomplete-filter\n```\n\nAdd `admin_auto_filters` to your `INSTALLED_APPS` inside settings.py of your project.\n\nUsage:\n-----\nLet's say we have following models:\n```python\nfrom django.db import models\n\nclass Artist(models.Model):\n    name = models.CharField(max_length=128)\n\nclass Album(models.Model):\n    name = models.CharField(max_length=64)\n    artist = models.ForeignKey(Artist, on_delete=models.CASCADE)\n    cover = models.CharField(max_length=256, null=True, default=None)\n```\nAnd you would like to filter results in Album Admin on the basis of artist, then you can define `search fields` in Artist and then define filter as:\n\n```python\nfrom django.contrib import admin\nfrom admin_auto_filters.filters import AutocompleteFilter\n\n\nclass ArtistFilter(AutocompleteFilter):\n    title = 'Artist' # display title\n    field_name = 'artist' # name of the foreign key field\n\n\nclass ArtistAdmin(admin.ModelAdmin):\n    search_fields = ['name'] # this is required for django's autocomplete functionality\n    # ...\n\n\nclass AlbumAdmin(admin.ModelAdmin):\n    list_filter = [ArtistFilter]\n\n    \"\"\"\n        defining this class is required for AutocompleteFilter\n        it's a bug and I am working on it.\n    \"\"\"\n    class Media:\n        pass\n\n    # ...\n```\n\nAfter following these steps you may see the filter as:\n\n![](https://raw.githubusercontent.com/farhan0581/django-admin-autocomplete-filter/master/admin_auto_filters/media/screenshot1.png)\n\n![](https://raw.githubusercontent.com/farhan0581/django-admin-autocomplete-filter/master/admin_auto_filters/media/screenshot2.png)\n\nFunctionality to provide custom view for search:\n-----------------------------------------------\n\nNow you can also register your custom view instead of using django admin's search_results to control the results in the autocomplete. For this you will need to create your custom view and register the url in your admin class as shown below:\n\nIn your views.py:\n\n```python\nfrom admin_auto_filters.views import AutocompleteJsonView\n\n\nclass CustomSearchView(AutocompleteJsonView):\n    def get_queryset(self):\n        \"\"\"\n           your custom logic goes here.\n        \"\"\"\n        queryset = Artist.objects.all().order_by('name')\n        return queryset\n```\n\nAfter this, register this view in your admin class as:\n\n```python\nfrom django.contrib import admin\nfrom django.urls import path\n\n\nclass AlbumAdmin(admin.ModelAdmin):\n    list_filter = [ArtistFilter]\n\n    class Media:\n        pass\n\n    def get_urls(self):\n        urls = super().get_urls()\n        custom_urls = [\n            path('custom_search/', self.admin_site.admin_view(CustomSearchView.as_view(model_admin=self)),\n                 name='custom_search'),\n        ]\n        return custom_urls + urls\n```\n\nFinally just tell the filter class to use this new view as:\n\n```python\nfrom django.shortcuts import reverse\nfrom admin_auto_filters.filters import AutocompleteFilter\n\n\nclass ArtistFilter(AutocompleteFilter):\n    title = 'Artist'\n    field_name = 'artist'\n\n    def get_autocomplete_url(self, request, model_admin):\n        return reverse('admin:custom_search')\n```\n\nLicense:\n--------\nDjango Admin Autocomplete Filter is an Open Source project licensed under the terms of the GNU GENERAL PUBLIC LICENSE.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/farhan0581/django-admin-autocomplete-filter", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "django-admin-autocomplete-filter", "package_url": "https://pypi.org/project/django-admin-autocomplete-filter/", "platform": "", "project_url": "https://pypi.org/project/django-admin-autocomplete-filter/", "project_urls": {"Homepage": "https://github.com/farhan0581/django-admin-autocomplete-filter"}, "release_url": "https://pypi.org/project/django-admin-autocomplete-filter/0.5/", "requires_dist": ["django (>=2.0)"], "requires_python": "", "summary": "A simple Django app to render list filters in django admin using autocomplete widget", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/django-admin-autocomplete-filter\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8e1fd03d3a93db5fbfbebb78d56a24d8401ba11/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d61646d696e2d6175746f636f6d706c6574652d66696c7465722e737667\"></a></p>\n<h1>Django Admin Autocomplete Filter</h1>\n<p>A simple Django app to render list filters in django admin using autocomplete widget. This app is heavily inspired from <a href=\"https://github.com/shamanu4/dal_admin_filters\" rel=\"nofollow\">dal-admin-filters.</a></p>\n<h2>Overview:</h2>\n<p>Django comes preshipped with an admin panel which is a great utility to create quick CRUD's.\nThe django 2.0 came with much needed <a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#django.contrib.admin.ModelAdmin.autocomplete_fields\" rel=\"nofollow\" title=\"autocomplete_fields\">autocomplete_fields</a> which uses select2 widget that comes with a search feature that loads the options asynchronously.\nWe can use this in django admin list filter.</p>\n<h2>Requirements:</h2>\n<p>Requires Django version &gt;= 2.0</p>\n<h2>Installation:</h2>\n<p>You can install it via pip or to get the latest version clone this repo.</p>\n<pre>pip install django-admin-autocomplete-filter\n</pre>\n<p>Add <code>admin_auto_filters</code> to your <code>INSTALLED_APPS</code> inside settings.py of your project.</p>\n<h2>Usage:</h2>\n<p>Let's say we have following models:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Artist</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Album</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n    <span class=\"n\">artist</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">Artist</span><span class=\"p\">,</span> <span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n    <span class=\"n\">cover</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"n\">null</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>And you would like to filter results in Album Admin on the basis of artist, then you can define <code>search fields</code> in Artist and then define filter as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">admin_auto_filters.filters</span> <span class=\"kn\">import</span> <span class=\"n\">AutocompleteFilter</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ArtistFilter</span><span class=\"p\">(</span><span class=\"n\">AutocompleteFilter</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'Artist'</span> <span class=\"c1\"># display title</span>\n    <span class=\"n\">field_name</span> <span class=\"o\">=</span> <span class=\"s1\">'artist'</span> <span class=\"c1\"># name of the foreign key field</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ArtistAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span> <span class=\"c1\"># this is required for django's autocomplete functionality</span>\n    <span class=\"c1\"># ...</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AlbumAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_filter</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ArtistFilter</span><span class=\"p\">]</span>\n\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">        defining this class is required for AutocompleteFilter</span>\n<span class=\"sd\">        it's a bug and I am working on it.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Media</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"c1\"># ...</span>\n</pre>\n<p>After following these steps you may see the filter as:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d028ef83f75e084fd9aa38151b8c140a09d9176/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f66617268616e303538312f646a616e676f2d61646d696e2d6175746f636f6d706c6574652d66696c7465722f6d61737465722f61646d696e5f6175746f5f66696c746572732f6d656469612f73637265656e73686f74312e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a818184a806cb1640db915135a85bb7f2afe7f1d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f66617268616e303538312f646a616e676f2d61646d696e2d6175746f636f6d706c6574652d66696c7465722f6d61737465722f61646d696e5f6175746f5f66696c746572732f6d656469612f73637265656e73686f74322e706e67\"></p>\n<h2>Functionality to provide custom view for search:</h2>\n<p>Now you can also register your custom view instead of using django admin's search_results to control the results in the autocomplete. For this you will need to create your custom view and register the url in your admin class as shown below:</p>\n<p>In your views.py:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">admin_auto_filters.views</span> <span class=\"kn\">import</span> <span class=\"n\">AutocompleteJsonView</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomSearchView</span><span class=\"p\">(</span><span class=\"n\">AutocompleteJsonView</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">           your custom logic goes here.</span>\n<span class=\"sd\">        \"\"\"</span>\n        <span class=\"n\">queryset</span> <span class=\"o\">=</span> <span class=\"n\">Artist</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">queryset</span>\n</pre>\n<p>After this, register this view in your admin class as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AlbumAdmin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">list_filter</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">ArtistFilter</span><span class=\"p\">]</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Media</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_urls</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">urls</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_urls</span><span class=\"p\">()</span>\n        <span class=\"n\">custom_urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'custom_search/'</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">admin_site</span><span class=\"o\">.</span><span class=\"n\">admin_view</span><span class=\"p\">(</span><span class=\"n\">CustomSearchView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">(</span><span class=\"n\">model_admin</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">)),</span>\n                 <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'custom_search'</span><span class=\"p\">),</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">custom_urls</span> <span class=\"o\">+</span> <span class=\"n\">urls</span>\n</pre>\n<p>Finally just tell the filter class to use this new view as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">reverse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">admin_auto_filters.filters</span> <span class=\"kn\">import</span> <span class=\"n\">AutocompleteFilter</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ArtistFilter</span><span class=\"p\">(</span><span class=\"n\">AutocompleteFilter</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s1\">'Artist'</span>\n    <span class=\"n\">field_name</span> <span class=\"o\">=</span> <span class=\"s1\">'artist'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_autocomplete_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">model_admin</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"s1\">'admin:custom_search'</span><span class=\"p\">)</span>\n</pre>\n<h2>License:</h2>\n<p>Django Admin Autocomplete Filter is an Open Source project licensed under the terms of the GNU GENERAL PUBLIC LICENSE.</p>\n\n          </div>"}, "last_serial": 7049682, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "d9c2dd6957dbb98e7a6f305cbf6fe4ad", "sha256": "7f60555cc05953df9255024135510f677a2aedfa12c2182ca080119011c36f18"}, "downloads": -1, "filename": "django_admin_autocomplete_filter-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d9c2dd6957dbb98e7a6f305cbf6fe4ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17626, "upload_time": "2018-11-16T13:27:33", "upload_time_iso_8601": "2018-11-16T13:27:33.111706Z", "url": "https://files.pythonhosted.org/packages/2f/44/7ddd3ab446db3383f0c949b296b8209d029466fe38dfd7f2a0becea89919/django_admin_autocomplete_filter-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7657adcc1c548a8803072db06c5221b", "sha256": "54296f334f1642b59086feee5375d8dcf92cb0c545502738942735b6cca2d8af"}, "downloads": -1, "filename": "django-admin-autocomplete-filter-0.2.tar.gz", "has_sig": false, "md5_digest": "a7657adcc1c548a8803072db06c5221b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17033, "upload_time": "2018-11-16T13:27:34", "upload_time_iso_8601": "2018-11-16T13:27:34.971045Z", "url": "https://files.pythonhosted.org/packages/1a/29/505ee3c8a4875d481baa76417ab8d1335b017800bb73b68cb9d2bb12dd66/django-admin-autocomplete-filter-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ad1b803db1f99269da72d8e2b222225e", "sha256": "775b4110da8aed62c52772480030b009c412524c39bbc5e4d3b48e9dd5442359"}, "downloads": -1, "filename": "django_admin_autocomplete_filter-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ad1b803db1f99269da72d8e2b222225e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17552, "upload_time": "2019-06-26T18:52:55", "upload_time_iso_8601": "2019-06-26T18:52:55.483890Z", "url": "https://files.pythonhosted.org/packages/e2/8a/768f1dfa1277632bf3c4130e3a53cc386d29add9a0d513071059919122f7/django_admin_autocomplete_filter-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c39dd48f92d46e3770a3835a90e414f", "sha256": "d5b4bb7f1cbbac25ee285c053a637e61baf9988de3607934936bfbd0b0b3d1f6"}, "downloads": -1, "filename": "django-admin-autocomplete-filter-0.3.tar.gz", "has_sig": false, "md5_digest": "2c39dd48f92d46e3770a3835a90e414f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17369, "upload_time": "2019-06-26T18:52:57", "upload_time_iso_8601": "2019-06-26T18:52:57.391851Z", "url": "https://files.pythonhosted.org/packages/21/14/06f7895be7d4053c8d958e073c95c8b27a22dcc12c999cd778c40f152a2a/django-admin-autocomplete-filter-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "e526d3b17005ee00871003a6ea8fb648", "sha256": "b479ddf145d5f342bc5c9913f6e5977ccbcf20fa5b6036b86e79b2b74966da61"}, "downloads": -1, "filename": "django_admin_autocomplete_filter-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e526d3b17005ee00871003a6ea8fb648", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19715, "upload_time": "2019-12-25T07:04:33", "upload_time_iso_8601": "2019-12-25T07:04:33.103274Z", "url": "https://files.pythonhosted.org/packages/f8/59/40434298e0a793fa3bd55d0ba4175545dcd87dcbf23422e45e26d84fb995/django_admin_autocomplete_filter-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a230783e7335587ed54491c016e4a7ed", "sha256": "c7aa61b95821603157b85be39ba03b4d788c82d74f144921f1300e2ce647740a"}, "downloads": -1, "filename": "django-admin-autocomplete-filter-0.4.tar.gz", "has_sig": false, "md5_digest": "a230783e7335587ed54491c016e4a7ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18133, "upload_time": "2019-12-25T07:04:35", "upload_time_iso_8601": "2019-12-25T07:04:35.406788Z", "url": "https://files.pythonhosted.org/packages/8f/d0/ad2018723bcc74c9e45c76c486b3cc9f56bf07bb7080659433a1e3d8ecb6/django-admin-autocomplete-filter-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "78d67523a51999873f3934cc0c52e664", "sha256": "44556b4b4d02c09a7ccdfc43e38c1e0f032741c6d484e9a6c542d7180b029418"}, "downloads": -1, "filename": "django_admin_autocomplete_filter-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "78d67523a51999873f3934cc0c52e664", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19755, "upload_time": "2020-04-18T19:08:29", "upload_time_iso_8601": "2020-04-18T19:08:29.544574Z", "url": "https://files.pythonhosted.org/packages/a1/ec/c11543871c2b20575657a7531f15a0a2625584cf2e0ce7fc27345c8bc2a3/django_admin_autocomplete_filter-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9a48f6d00ee6395f218416d9767d3fa", "sha256": "9d95a4407c3289e823c3486ddb200124c4ec8edf11064a0b8cb998d32c39530e"}, "downloads": -1, "filename": "django-admin-autocomplete-filter-0.5.tar.gz", "has_sig": false, "md5_digest": "a9a48f6d00ee6395f218416d9767d3fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18839, "upload_time": "2020-04-18T19:08:31", "upload_time_iso_8601": "2020-04-18T19:08:31.632917Z", "url": "https://files.pythonhosted.org/packages/11/79/a344b0e5c93054a12df443b31bebd21a7b209b42ef117aaede38e43281bf/django-admin-autocomplete-filter-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "78d67523a51999873f3934cc0c52e664", "sha256": "44556b4b4d02c09a7ccdfc43e38c1e0f032741c6d484e9a6c542d7180b029418"}, "downloads": -1, "filename": "django_admin_autocomplete_filter-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "78d67523a51999873f3934cc0c52e664", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19755, "upload_time": "2020-04-18T19:08:29", "upload_time_iso_8601": "2020-04-18T19:08:29.544574Z", "url": "https://files.pythonhosted.org/packages/a1/ec/c11543871c2b20575657a7531f15a0a2625584cf2e0ce7fc27345c8bc2a3/django_admin_autocomplete_filter-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9a48f6d00ee6395f218416d9767d3fa", "sha256": "9d95a4407c3289e823c3486ddb200124c4ec8edf11064a0b8cb998d32c39530e"}, "downloads": -1, "filename": "django-admin-autocomplete-filter-0.5.tar.gz", "has_sig": false, "md5_digest": "a9a48f6d00ee6395f218416d9767d3fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18839, "upload_time": "2020-04-18T19:08:31", "upload_time_iso_8601": "2020-04-18T19:08:31.632917Z", "url": "https://files.pythonhosted.org/packages/11/79/a344b0e5c93054a12df443b31bebd21a7b209b42ef117aaede38e43281bf/django-admin-autocomplete-filter-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:51 2020"}