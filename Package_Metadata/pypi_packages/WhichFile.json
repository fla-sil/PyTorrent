{"info": {"author": "Christopher Welborn", "author_email": "cjwelborn@live.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only"], "description": "WhichFile\n=========\n\nBasic Operation:\n----------------\n\nThis is a combination of the ``which`` and ``file`` commands. It will\nfollow symlinks, reporting each link on the way, and then use\n``libmagic`` to tell you what type of file it is. If you happen to be\nusing ``BASH``, this commands offers some of the same features as the\n``type`` command, only prettier. Also,\n`findfunc <https://github.com/welbornprod/findfunc>`__ is installed so\nany bash functions that are found will be syntax highlighted. On\n``apt``-based systems it will use the ``CommandNotFound`` module to show\ninstallable packages for missing commands.\n\nExample:\n~~~~~~~~\n\nDetermine where ``rlogin`` is linked, and what type of file it is:\n\n::\n\n    whichfile rlogin\n\nOutput:\n^^^^^^^\n\n::\n\n    /usr/bin/rlogin:\n        -> /etc/alternatives/rlogin\n            -> /usr/bin/slogin\n                -> /usr/bin/ssh\n                    Type: ELF 64-bit LSB  shared object, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=2d691144f816b05319ba27679df4b847107b99d7, stripped\n\nThis means that ``rlogin`` links to ``/etc/alternatives/rlogin``, which\nlinks to ``slogin``, and finally ``ssh``.\n\nExtended operation for BASH users:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf an executable binary can't be found, it will look for an\nalias/function in ``~/bash.alias.sh`` or ``~/.bash_aliases``.\n\nExample:\n^^^^^^^^\n\nDetermine whether ``ll`` is a BASH function or alias:\n\n::\n\n    whichfile ll\n\nOutput:\n'''''''\n\n::\n\n    /home/cj/bash.alias.sh:\n        -> ll\n            -> alias ll=\"ls -alh --group-directories-first --color=always\" # Long list dir\n\nThis means that ``ll`` is an alias in ``~/bash.alias.sh``.\n\nExtended operation for CommandNotFound-enabled systems:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf all of that fails, and you have ``CommandNotFound`` installed\n(pre-installed on debian-based machines) it will look for a package\ncontaining the executable, and suggest install instructions.\n\nExample:\n^^^^^^^^\n\nDetermine whether ``mess`` is an installed executable:\n\n::\n\n    whichfile mess\n\nOutput:\n'''''''\n\n::\n\n    There were errors resolving 1 path, 1 is installable.\n\n        The program 'mess' is currently not installed.\n            You can install it by typing: sudo apt install mess\n\nThis means that the ``mess`` executable cannot be found, but is\ninstallable through the ``mess`` package.\n\nOptions:\n--------\n\n::\n\n    Usage:\n        whichfile -h | -p | -v\n        whichfile PATH... [-b | -B] [-c] [-D] [-N] [-s]\n        whichfile PATH... [-d | -m] [-c] [-D] [-N] [-s]\n\n    Options:\n        PATH             : Directory path or paths to resolve.\n        -b,--builtins    : Only show builtins when another binary exists.\n        -B,--nobuiltins  : Don't check BASH builtins.\n        -c,--ignorecwd   : Ignore files in the CWD, and try $PATH instead.\n        -d,--dir         : Print the parent directory of the final target.\n                           This enables --nobuiltins.\n        -D,--debug       : Print some debugging info.\n        -h,--help        : Show this help message.\n        -m,--mime        : Show mime type instead of human readable form.\n                           This enables --nobuiltins.\n        -N,--debugname   : Shows bash alias/function lines that don't match\n                           a function/alias pattern, but were found in the\n                           line. This is for debugging `whichfile` itself.\n        -p,--path        : List directories in $PATH, like:\n                           echo \"$PATH\" | tr ':' '\\n'\n        -s,--short       : Short output, print only the target.\n                           On error nothing is printed and non-zero is\n                           returned.\n                           Broken symlinks will be prepended with 'dead:'.\n        -v,--version     : Show version.\n\nInstallation:\n-------------\n\nPip:\n~~~~\n\n**whichfile** is a PyPi package, and can be installed with pip:\n\n.. code:: bash\n\n    pip install whichfile\n\nThis will create a ``whichfile`` executable that you can run.\n\nGit:\n~~~~\n\nYou can also clone the repo and do a manual install:\n\n.. code:: bash\n\n    git clone https://github.com/welbornprod/whichfile.git\n\n    cd whichfile\n    python3 setup.py install --user\n\nDemo:\n-----\n\nThis is a recording of several runs, showing WhichFile's output for the\nvarious types it can handle. Error output was included to show how\ninstallable ``apt`` packages are handled.\n\n|asciicast|\n\n.. |asciicast| image:: https://asciinema.org/a/112299.png\n   :target: https://asciinema.org/a/112299\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/welbornprod/whichfile", "keywords": "python python3 2 3 which file whichfile tool executable", "license": "", "maintainer": "", "maintainer_email": "", "name": "WhichFile", "package_url": "https://pypi.org/project/WhichFile/", "platform": "", "project_url": "https://pypi.org/project/WhichFile/", "project_urls": {"Homepage": "https://github.com/welbornprod/whichfile"}, "release_url": "https://pypi.org/project/WhichFile/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "Reports symlink targets and file types, like `which` and `file`.\n", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"basic-operation\">\n<h2>Basic Operation:</h2>\n<p>This is a combination of the <tt>which</tt> and <tt>file</tt> commands. It will\nfollow symlinks, reporting each link on the way, and then use\n<tt>libmagic</tt> to tell you what type of file it is. If you happen to be\nusing <tt>BASH</tt>, this commands offers some of the same features as the\n<tt>type</tt> command, only prettier. Also,\n<a href=\"https://github.com/welbornprod/findfunc\" rel=\"nofollow\">findfunc</a> is installed so\nany bash functions that are found will be syntax highlighted. On\n<tt>apt</tt>-based systems it will use the <tt>CommandNotFound</tt> module to show\ninstallable packages for missing commands.</p>\n<div id=\"example\">\n<h3>Example:</h3>\n<p>Determine where <tt>rlogin</tt> is linked, and what type of file it is:</p>\n<pre>whichfile rlogin\n</pre>\n<div id=\"output\">\n<h4>Output:</h4>\n<pre>/usr/bin/rlogin:\n    -&gt; /etc/alternatives/rlogin\n        -&gt; /usr/bin/slogin\n            -&gt; /usr/bin/ssh\n                Type: ELF 64-bit LSB  shared object, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=2d691144f816b05319ba27679df4b847107b99d7, stripped\n</pre>\n<p>This means that <tt>rlogin</tt> links to <tt>/etc/alternatives/rlogin</tt>, which\nlinks to <tt>slogin</tt>, and finally <tt>ssh</tt>.</p>\n</div>\n</div>\n<div id=\"extended-operation-for-bash-users\">\n<h3>Extended operation for BASH users:</h3>\n<p>If an executable binary can\u2019t be found, it will look for an\nalias/function in <tt>~/bash.alias.sh</tt> or <tt><span class=\"pre\">~/.bash_aliases</span></tt>.</p>\n<div id=\"id1\">\n<h4>Example:</h4>\n<p>Determine whether <tt>ll</tt> is a BASH function or alias:</p>\n<pre>whichfile ll\n</pre>\n<div id=\"id2\">\n<h5>Output:</h5>\n<pre>/home/cj/bash.alias.sh:\n    -&gt; ll\n        -&gt; alias ll=\"ls -alh --group-directories-first --color=always\" # Long list dir\n</pre>\n<p>This means that <tt>ll</tt> is an alias in <tt>~/bash.alias.sh</tt>.</p>\n</div>\n</div>\n</div>\n<div id=\"extended-operation-for-commandnotfound-enabled-systems\">\n<h3>Extended operation for CommandNotFound-enabled systems:</h3>\n<p>If all of that fails, and you have <tt>CommandNotFound</tt> installed\n(pre-installed on debian-based machines) it will look for a package\ncontaining the executable, and suggest install instructions.</p>\n<div id=\"id3\">\n<h4>Example:</h4>\n<p>Determine whether <tt>mess</tt> is an installed executable:</p>\n<pre>whichfile mess\n</pre>\n<div id=\"id4\">\n<h5>Output:</h5>\n<pre>There were errors resolving 1 path, 1 is installable.\n\n    The program 'mess' is currently not installed.\n        You can install it by typing: sudo apt install mess\n</pre>\n<p>This means that the <tt>mess</tt> executable cannot be found, but is\ninstallable through the <tt>mess</tt> package.</p>\n</div>\n</div>\n</div>\n</div>\n<div id=\"options\">\n<h2>Options:</h2>\n<pre>Usage:\n    whichfile -h | -p | -v\n    whichfile PATH... [-b | -B] [-c] [-D] [-N] [-s]\n    whichfile PATH... [-d | -m] [-c] [-D] [-N] [-s]\n\nOptions:\n    PATH             : Directory path or paths to resolve.\n    -b,--builtins    : Only show builtins when another binary exists.\n    -B,--nobuiltins  : Don't check BASH builtins.\n    -c,--ignorecwd   : Ignore files in the CWD, and try $PATH instead.\n    -d,--dir         : Print the parent directory of the final target.\n                       This enables --nobuiltins.\n    -D,--debug       : Print some debugging info.\n    -h,--help        : Show this help message.\n    -m,--mime        : Show mime type instead of human readable form.\n                       This enables --nobuiltins.\n    -N,--debugname   : Shows bash alias/function lines that don't match\n                       a function/alias pattern, but were found in the\n                       line. This is for debugging `whichfile` itself.\n    -p,--path        : List directories in $PATH, like:\n                       echo \"$PATH\" | tr ':' '\\n'\n    -s,--short       : Short output, print only the target.\n                       On error nothing is printed and non-zero is\n                       returned.\n                       Broken symlinks will be prepended with 'dead:'.\n    -v,--version     : Show version.\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<div id=\"pip\">\n<h3>Pip:</h3>\n<p><strong>whichfile</strong> is a PyPi package, and can be installed with pip:</p>\n<pre>pip install whichfile\n</pre>\n<p>This will create a <tt>whichfile</tt> executable that you can run.</p>\n</div>\n<div id=\"git\">\n<h3>Git:</h3>\n<p>You can also clone the repo and do a manual install:</p>\n<pre>git clone https://github.com/welbornprod/whichfile.git\n\n<span class=\"nb\">cd</span> whichfile\npython3 setup.py install --user\n</pre>\n</div>\n</div>\n<div id=\"demo\">\n<h2>Demo:</h2>\n<p>This is a recording of several runs, showing WhichFile\u2019s output for the\nvarious types it can handle. Error output was included to show how\ninstallable <tt>apt</tt> packages are handled.</p>\n<p><a href=\"https://asciinema.org/a/112299\" rel=\"nofollow\"><img alt=\"asciicast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f120c5cbcf80b3c224c413a249955f94e318cdd5/68747470733a2f2f61736369696e656d612e6f72672f612f3131323239392e706e67\"></a></p>\n</div>\n\n          </div>"}, "last_serial": 6857353, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "9db974c6196403f4d8956e8360ab9533", "sha256": "db2434da7ff468121e039759d5915e9eff9e549f14ecadb05389dce4c73e7a92"}, "downloads": -1, "filename": "whichfile-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9db974c6196403f4d8956e8360ab9533", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16736, "upload_time": "2020-03-21T21:15:52", "upload_time_iso_8601": "2020-03-21T21:15:52.401143Z", "url": "https://files.pythonhosted.org/packages/7b/8c/f95a5bee591d4d9c1cbabad9e6aec18deec1eabe590f8b7cee7768effc7e/whichfile-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "131249886d395200bc967f0a74edd4d6", "sha256": "75b1ccd24fbcaef95849e44e7eb94c7d9f8e5d396650cee5da13ead5faae189d"}, "downloads": -1, "filename": "whichfile-1.0.2.tar.gz", "has_sig": false, "md5_digest": "131249886d395200bc967f0a74edd4d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16766, "upload_time": "2020-03-21T21:37:43", "upload_time_iso_8601": "2020-03-21T21:37:43.240564Z", "url": "https://files.pythonhosted.org/packages/0f/7d/5d7f5b312126175ea247a2d504ae050ca6b2c7f9db89691e2322d145ad4a/whichfile-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "84f8572c3ab2930687a31bd72755f140", "sha256": "922e1f9bdbbe70c98ae850eb16c0bbb01d8b542794acd79a46fa21a28eeff38b"}, "downloads": -1, "filename": "WhichFile-1.0.3.tar.gz", "has_sig": false, "md5_digest": "84f8572c3ab2930687a31bd72755f140", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16807, "upload_time": "2020-03-21T21:49:38", "upload_time_iso_8601": "2020-03-21T21:49:38.823084Z", "url": "https://files.pythonhosted.org/packages/be/93/09d20a1cc605d3577a8ecdfbd7092d49df2268b73b6a8e666360bc136d02/WhichFile-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "84f8572c3ab2930687a31bd72755f140", "sha256": "922e1f9bdbbe70c98ae850eb16c0bbb01d8b542794acd79a46fa21a28eeff38b"}, "downloads": -1, "filename": "WhichFile-1.0.3.tar.gz", "has_sig": false, "md5_digest": "84f8572c3ab2930687a31bd72755f140", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16807, "upload_time": "2020-03-21T21:49:38", "upload_time_iso_8601": "2020-03-21T21:49:38.823084Z", "url": "https://files.pythonhosted.org/packages/be/93/09d20a1cc605d3577a8ecdfbd7092d49df2268b73b6a8e666360bc136d02/WhichFile-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:44 2020"}