{"info": {"author": "Jeremy S. Perkins (fermiPy)", "author_email": "jeremy.s.perkins@nasa.gov", "bugtrack_url": null, "classifiers": [], "description": "Fermi LAT Multi-Processor Scripts (version 1.4)\r\n\r\nThe Fermi Science Tools (http://fermi.gsfc.nasa.gov/ssc) are a suite\r\nof tools developed for the analysis of both Fermi LAT and GBM\r\ndata. This suite was developed by the FSSC and the instrument teams,\r\nand was reviewed by the Fermi Users' Group.  The LAT Multi-Processor\r\nScripts are a set of python scripts to facilitate the analysis of LAT\r\ndata.  This package depends on the Fermi Science Tools.\r\n\r\nThe current tools available are\r\n\r\n    * gtdiffrsp_mp.py\r\n    * gtexpmap_mp.py\r\n    * gtltcube_mp.py\r\n    * gttsmap_mp.py (Unbinned Only)\r\n\r\nInstallation: navigate to the gtapps_mp directory and execute\r\n\r\n   > python setup.py install\r\n\r\nTo receive information on program execution for a specific script execute:\r\n\r\n   > python <gtapp>_mp.py -h\r\n\r\nSee below for details on each tool.\r\n\r\n* gtdiffrsp_mp.py *\r\n\r\n  Submits the gtdiffrsp program as separate threads via python and\r\n  joins up the resulting temporary files at the end resulting in a\r\n  single file. This greatly reduces the running time. For more details\r\n  on gtdiffrsp see the gtdiffrsp help file.\r\n\r\n  usage: gtdiffrsp_mp.py [-h] [--savetmp SAVETMP]\r\n         \t\t jobs evfile scfile srcmdl irf outfile\r\n\r\n  positional arguments:\t    \r\n  jobs               The number of jobs you wish to spawn (usually the number\r\n                     of cores on your machine).\r\n  evfile             Input event file. See gtdiffrsp help for more\r\n                     information.\r\n  scfile             Spacecraft file. See gtdiffrsp help for more information.\r\n  srcmdl             The source model file to use. See gtdiffrsp help for more\r\n                     information.\r\n  irf                The IRFs to use. See gtdiffrsp help for more information.\r\n  outfile            Output file name.\r\n\r\n  optional arguments:\r\n  -h, --help         show this help message and exit\r\n  --savetmp SAVETMP  Save the temporary files (default is False).\r\n\r\n  example: \r\n  This computes the diffuse response for the data in the file\r\n  '3C279_events.fits' using 4 separate threads using the spacecraft\r\n  file 'SC.fits', the model file '3C279_model.xml' and the P7SOURCE_V6\r\n  instrument response functions.  It saves the output in\r\n  '3C279_events_diffrsp.fits'\r\n\r\n  > python gtdiffrsp_mp.py 4 3C279_events.fits SC.fits 3C279_model.xml\r\n    P7SOURCE_V6 3C279_events_diffrsp.fits\r\n\r\n* gtexpmap_mp.py *\r\n\r\n  Submits the gtexpmap program as operate threads via python and joins\r\n  up the resulting temporary exposure maps at the end resulting in a\r\n  single exposure map for the input event file. This greatly reduces the\r\n  running time. For more details on gtexpmap see the gtexpmap help\r\n  file. Note that the checksum and datasum are incorrect for the final\r\n  file. The number of spawned jobs is equal to xbins x ybins.\r\n\r\n  usage: gtexpmap_mp.py [-h] [--savetmp SAVETMP]\r\n  \t          \tnlong nlat xbins ybins sfile evfile expcube IRFS srcrad\r\n         \t\tnenergies outfile\r\n\r\n  positional arguments:\r\n  nlong              Number of longitude points. See gtexpmap help for more\r\n                     information.\r\n  nlat               Number of latitude points. See gtexpmap help for more\r\n                     information.\r\n  xbins              The number of bins along the x-axis. Must divide evenly\r\n                     into nlong.\r\n  ybins              The number of bins along the y-axis. Must divide evenly\r\n                     into nlat.\r\n  sfile              The spacecraft data file. See gtexpmap help for more\r\n                     information.\r\n  evfile             Input event file. See gtexpmap help for more information.\r\n  expcube            Input livetime cube. See gtexpmap help for more\r\n                     information.\r\n  IRFS               IRFs to use. See gtexpmap help for more information.\r\n  srcrad             Radius. See gtexpmap help for more information.\r\n  nenergies          Number of energy slices. See gtexpmap help for more\r\n                     information.\r\n  outfile            Output file name.\r\n\r\n  optional arguments:\r\n  -h, --help         show this help message and exit\r\n  --savetmp SAVETMP  Save the temporary files (default is False).\r\n\r\n  example: \r\n  This computes a 30 degree radius exposure map for a the data in\r\n  '3C279_filtered_gti.fits' with 120 by 120 pixels and 20 energy bins\r\n  using the spacecraft file 'SC.fits', the exposure cube\r\n  '3C279_ltcube.fits' and the P7SOURCE_V6 instrument response files.\r\n  It submits 6 jobs by making xbins = 3 and ybins = 2 (3*2 = 6).  Both\r\n  3 and 2 divide equally into 120.  The resulting file is saved as\r\n  '3C279_expmap.fits'.\r\n\r\n  > python gtexpmap_mp.py 120 120 3 2 SC.fits 3C279_filtered_gti.fits\r\n    3C279_ltcube.fits P7SOURCE_V6 30 20 3C279_expmap.fits\r\n\r\n* gtltcube_mp.py *\r\n\r\n  Submits the gtltcube program as operate threads via python and joins\r\n  up the resulting temporary exposure cubes at the end resulting in a\r\n  single exposure cube for the input event file. This greatly reduces\r\n  the running time. For more details on gtltcube see the gtltcube help\r\n  file.\r\n\r\n  usage: gtltcube_mp.py [-h] [--savetmp SAVETMP] [--zmax ZMAX]\r\n  \t                jobs sfile evfile outfile\r\n\r\n  positional arguments:\r\n  jobs               The number of jobs you wish to spawn (usually the number\r\n                     of cores on your machine).\r\n  sfile              The spacecraft data file. See gtltcube help for more\r\n                     information.\r\n  evfile             Input event file. See gtltcube help for more information.\r\n  outfile            Output file name.\r\n\r\n  optional arguments:\r\n  -h, --help         show this help message and exit\r\n  --savetmp SAVETMP  Save the temporary files (default is False).\r\n  --zmax ZMAX        zmax parameter for gtltcube (default is 180)\r\n\r\n  example:\r\n  This example creates a livetime cube for the file\r\n  '3C279_filtered_gti.fits' using 8 threads and the 'SC.fits'\r\n  spacecraft file.  It saves the output to '3C279_ltcube.fits'.  It\r\n  also sets the zmax value to 100 (the recommended value).\r\n\r\n  > python gtltcube_mp.py 8 SC.fits 3C279_filtered_gti.fits\r\n    3C279_ltcube.fits --zmax 100\r\n\r\n* gttsmap_mp.py *\r\n\r\n  Generates a TS Map by running separate pixels on separate\r\n  threads. It creates a template counts map to determine the location\r\n  of the pixels and the calculates the TS of a test source at each\r\n  pixel on that map. It then merges the results at the end. The map is\r\n  divided into separate regions (called 000,001,002...) depending on\r\n  the number of jobs the user requests. It creates subdirectories for\r\n  each region and operates on them within the subdirectory.  For more\r\n  details on the parameters see the gttsmap help file. NOTE: ONLY DOES\r\n  AN UNBINNED ANALYSIS. NOTE2: Any files referenced in the model XML\r\n  file must be referenced by absolute and not relative directories\r\n  (ie. not ./ or ../)\"\r\n\r\n  usage: gttsmap_mp.py [-h] [--savetmp SAVETMP]\r\n  \t               nxpix nypix jobs evfile scfile expcube srcmdl IRFS\r\n                       optimizer ftol toltype binsz coordsys xref yref proj\r\n                       outfile UNBINNED expmap\r\n\r\n\t\t       \t  \r\n  positional arguments:\r\n  nxpix              Number of pixels along x-axis. See gttsmap help for more\r\n                     information.\r\n  nypix              Number of pixels along y-axis. See gttsmap help for more\r\n                     information.\r\n  jobs               The number of concurrent jobs.\r\n  evfile             Input event file. See gttsmap help for more information.\r\n  scfile             The spacecraft data file. See gttsmap help for more\r\n                     information.\r\n  expcube            Input livetime cube. See gttsmap help for more\r\n                     information.\r\n  srcmdl \t     XML source model definition. See gttsmap help for more\r\n                     information.  Any files in the xml (like the\r\n                     diffuse models) need to be referenced by absolute\r\n                     directories.\r\n  IRFS               IRFs to use. See gttsmap help for more information.\r\n  optimizer          The optimizer (e.g. NEWMINUIT). See gttsmap help for more\r\n                     information.\r\n  ftol               Fit tolerance. See gttsmap help for more information.\r\n  toltype            Tolerance type (0 for RELATIVE and 1 for ABSOLUTE). See\r\n                     gttsmap help for more information.\r\n  binsz              Image scale (deg/pix). See gttsmap help for more\r\n                     information.\r\n  coordsys           CEL or GAL. See gttsmap help for more information.\r\n  xref               x-coord of center (RA or l). See gttsmap help for more\r\n                     information.\r\n  yref               y-coord of center (DEC or b). See gttsmap help for more\r\n                     information.\r\n  proj               Coordinate projection. See gttsmap help for more\r\n                     information.\r\n  outfile            Output file name.\r\n  analysis           UNBINNED. Only unbinned analysis supported.\r\n  expmap             Input exposure map. See gttsmap help for more\r\n                     information.\r\n\r\n  optional arguments:\r\n  -h, --help         show this help message and exit\r\n  --savetmp SAVETMP  Save the temporary files (default is False).\r\n\r\n  example:\r\n  This example creates a TS Map called '3C279_tsmap.fits' with 100\r\n  bins and using 6 threads.  Each bin is 0.5 degrees square.  It uses\r\n  the event file '3C279_filtered_gti.fits', the spacecraft file\r\n  'SC.fits', the exposure map '3C279_expmap.fits', the livetime cube\r\n  '3C279_ltcube.fits', the model file '3C279_model.xml' and the\r\n  P7SOURCE_V6.  The optimization is done by the MINUIT optimizer at an\r\n  absolute tolerance of 1e-5.  The map is centered on 193.98,-5.82 and\r\n  is created using the STG celestial coordinate system.\r\n\r\n  > python gttsmap_mp.py 10 10 6 3C279_filtered_gti.fits SC.fits\r\n    3C279_ltcube.fits 3C279_model.xml P7SOURCE_V6\r\n    MINUIT 1e-05 1 0.5 CEL 193.98 -5.82 STG 3C279_tsmap.fits UNBINNED\r\n    3C279_expmap.fits", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fermiPy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gtapps-mp", "package_url": "https://pypi.org/project/gtapps-mp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gtapps-mp/", "project_urls": {"Homepage": "https://github.com/fermiPy"}, "release_url": "https://pypi.org/project/gtapps-mp/1.5/", "requires_dist": null, "requires_python": null, "summary": "Fermi LAT Multicore Scripts", "version": "1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            Fermi LAT Multi-Processor Scripts (version 1.4)\n<br>\n<br>The Fermi Science Tools (http://fermi.gsfc.nasa.gov/ssc) are a suite\n<br>of tools developed for the analysis of both Fermi LAT and GBM\n<br>data. This suite was developed by the FSSC and the instrument teams,\n<br>and was reviewed by the Fermi Users' Group.  The LAT Multi-Processor\n<br>Scripts are a set of python scripts to facilitate the analysis of LAT\n<br>data.  This package depends on the Fermi Science Tools.\n<br>\n<br>The current tools available are\n<br>\n<br>    * gtdiffrsp_mp.py\n<br>    * gtexpmap_mp.py\n<br>    * gtltcube_mp.py\n<br>    * gttsmap_mp.py (Unbinned Only)\n<br>\n<br>Installation: navigate to the gtapps_mp directory and execute\n<br>\n<br>   &gt; python setup.py install\n<br>\n<br>To receive information on program execution for a specific script execute:\n<br>\n<br>   &gt; python &lt;gtapp&gt;_mp.py -h\n<br>\n<br>See below for details on each tool.\n<br>\n<br>* gtdiffrsp_mp.py *\n<br>\n<br>  Submits the gtdiffrsp program as separate threads via python and\n<br>  joins up the resulting temporary files at the end resulting in a\n<br>  single file. This greatly reduces the running time. For more details\n<br>  on gtdiffrsp see the gtdiffrsp help file.\n<br>\n<br>  usage: gtdiffrsp_mp.py [-h] [--savetmp SAVETMP]\n<br>         \t\t jobs evfile scfile srcmdl irf outfile\n<br>\n<br>  positional arguments:\t    \n<br>  jobs               The number of jobs you wish to spawn (usually the number\n<br>                     of cores on your machine).\n<br>  evfile             Input event file. See gtdiffrsp help for more\n<br>                     information.\n<br>  scfile             Spacecraft file. See gtdiffrsp help for more information.\n<br>  srcmdl             The source model file to use. See gtdiffrsp help for more\n<br>                     information.\n<br>  irf                The IRFs to use. See gtdiffrsp help for more information.\n<br>  outfile            Output file name.\n<br>\n<br>  optional arguments:\n<br>  -h, --help         show this help message and exit\n<br>  --savetmp SAVETMP  Save the temporary files (default is False).\n<br>\n<br>  example: \n<br>  This computes the diffuse response for the data in the file\n<br>  '3C279_events.fits' using 4 separate threads using the spacecraft\n<br>  file 'SC.fits', the model file '3C279_model.xml' and the P7SOURCE_V6\n<br>  instrument response functions.  It saves the output in\n<br>  '3C279_events_diffrsp.fits'\n<br>\n<br>  &gt; python gtdiffrsp_mp.py 4 3C279_events.fits SC.fits 3C279_model.xml\n<br>    P7SOURCE_V6 3C279_events_diffrsp.fits\n<br>\n<br>* gtexpmap_mp.py *\n<br>\n<br>  Submits the gtexpmap program as operate threads via python and joins\n<br>  up the resulting temporary exposure maps at the end resulting in a\n<br>  single exposure map for the input event file. This greatly reduces the\n<br>  running time. For more details on gtexpmap see the gtexpmap help\n<br>  file. Note that the checksum and datasum are incorrect for the final\n<br>  file. The number of spawned jobs is equal to xbins x ybins.\n<br>\n<br>  usage: gtexpmap_mp.py [-h] [--savetmp SAVETMP]\n<br>  \t          \tnlong nlat xbins ybins sfile evfile expcube IRFS srcrad\n<br>         \t\tnenergies outfile\n<br>\n<br>  positional arguments:\n<br>  nlong              Number of longitude points. See gtexpmap help for more\n<br>                     information.\n<br>  nlat               Number of latitude points. See gtexpmap help for more\n<br>                     information.\n<br>  xbins              The number of bins along the x-axis. Must divide evenly\n<br>                     into nlong.\n<br>  ybins              The number of bins along the y-axis. Must divide evenly\n<br>                     into nlat.\n<br>  sfile              The spacecraft data file. See gtexpmap help for more\n<br>                     information.\n<br>  evfile             Input event file. See gtexpmap help for more information.\n<br>  expcube            Input livetime cube. See gtexpmap help for more\n<br>                     information.\n<br>  IRFS               IRFs to use. See gtexpmap help for more information.\n<br>  srcrad             Radius. See gtexpmap help for more information.\n<br>  nenergies          Number of energy slices. See gtexpmap help for more\n<br>                     information.\n<br>  outfile            Output file name.\n<br>\n<br>  optional arguments:\n<br>  -h, --help         show this help message and exit\n<br>  --savetmp SAVETMP  Save the temporary files (default is False).\n<br>\n<br>  example: \n<br>  This computes a 30 degree radius exposure map for a the data in\n<br>  '3C279_filtered_gti.fits' with 120 by 120 pixels and 20 energy bins\n<br>  using the spacecraft file 'SC.fits', the exposure cube\n<br>  '3C279_ltcube.fits' and the P7SOURCE_V6 instrument response files.\n<br>  It submits 6 jobs by making xbins = 3 and ybins = 2 (3*2 = 6).  Both\n<br>  3 and 2 divide equally into 120.  The resulting file is saved as\n<br>  '3C279_expmap.fits'.\n<br>\n<br>  &gt; python gtexpmap_mp.py 120 120 3 2 SC.fits 3C279_filtered_gti.fits\n<br>    3C279_ltcube.fits P7SOURCE_V6 30 20 3C279_expmap.fits\n<br>\n<br>* gtltcube_mp.py *\n<br>\n<br>  Submits the gtltcube program as operate threads via python and joins\n<br>  up the resulting temporary exposure cubes at the end resulting in a\n<br>  single exposure cube for the input event file. This greatly reduces\n<br>  the running time. For more details on gtltcube see the gtltcube help\n<br>  file.\n<br>\n<br>  usage: gtltcube_mp.py [-h] [--savetmp SAVETMP] [--zmax ZMAX]\n<br>  \t                jobs sfile evfile outfile\n<br>\n<br>  positional arguments:\n<br>  jobs               The number of jobs you wish to spawn (usually the number\n<br>                     of cores on your machine).\n<br>  sfile              The spacecraft data file. See gtltcube help for more\n<br>                     information.\n<br>  evfile             Input event file. See gtltcube help for more information.\n<br>  outfile            Output file name.\n<br>\n<br>  optional arguments:\n<br>  -h, --help         show this help message and exit\n<br>  --savetmp SAVETMP  Save the temporary files (default is False).\n<br>  --zmax ZMAX        zmax parameter for gtltcube (default is 180)\n<br>\n<br>  example:\n<br>  This example creates a livetime cube for the file\n<br>  '3C279_filtered_gti.fits' using 8 threads and the 'SC.fits'\n<br>  spacecraft file.  It saves the output to '3C279_ltcube.fits'.  It\n<br>  also sets the zmax value to 100 (the recommended value).\n<br>\n<br>  &gt; python gtltcube_mp.py 8 SC.fits 3C279_filtered_gti.fits\n<br>    3C279_ltcube.fits --zmax 100\n<br>\n<br>* gttsmap_mp.py *\n<br>\n<br>  Generates a TS Map by running separate pixels on separate\n<br>  threads. It creates a template counts map to determine the location\n<br>  of the pixels and the calculates the TS of a test source at each\n<br>  pixel on that map. It then merges the results at the end. The map is\n<br>  divided into separate regions (called 000,001,002...) depending on\n<br>  the number of jobs the user requests. It creates subdirectories for\n<br>  each region and operates on them within the subdirectory.  For more\n<br>  details on the parameters see the gttsmap help file. NOTE: ONLY DOES\n<br>  AN UNBINNED ANALYSIS. NOTE2: Any files referenced in the model XML\n<br>  file must be referenced by absolute and not relative directories\n<br>  (ie. not ./ or ../)\"\n<br>\n<br>  usage: gttsmap_mp.py [-h] [--savetmp SAVETMP]\n<br>  \t               nxpix nypix jobs evfile scfile expcube srcmdl IRFS\n<br>                       optimizer ftol toltype binsz coordsys xref yref proj\n<br>                       outfile UNBINNED expmap\n<br>\n<br>\t\t       \t  \n<br>  positional arguments:\n<br>  nxpix              Number of pixels along x-axis. See gttsmap help for more\n<br>                     information.\n<br>  nypix              Number of pixels along y-axis. See gttsmap help for more\n<br>                     information.\n<br>  jobs               The number of concurrent jobs.\n<br>  evfile             Input event file. See gttsmap help for more information.\n<br>  scfile             The spacecraft data file. See gttsmap help for more\n<br>                     information.\n<br>  expcube            Input livetime cube. See gttsmap help for more\n<br>                     information.\n<br>  srcmdl \t     XML source model definition. See gttsmap help for more\n<br>                     information.  Any files in the xml (like the\n<br>                     diffuse models) need to be referenced by absolute\n<br>                     directories.\n<br>  IRFS               IRFs to use. See gttsmap help for more information.\n<br>  optimizer          The optimizer (e.g. NEWMINUIT). See gttsmap help for more\n<br>                     information.\n<br>  ftol               Fit tolerance. See gttsmap help for more information.\n<br>  toltype            Tolerance type (0 for RELATIVE and 1 for ABSOLUTE). See\n<br>                     gttsmap help for more information.\n<br>  binsz              Image scale (deg/pix). See gttsmap help for more\n<br>                     information.\n<br>  coordsys           CEL or GAL. See gttsmap help for more information.\n<br>  xref               x-coord of center (RA or l). See gttsmap help for more\n<br>                     information.\n<br>  yref               y-coord of center (DEC or b). See gttsmap help for more\n<br>                     information.\n<br>  proj               Coordinate projection. See gttsmap help for more\n<br>                     information.\n<br>  outfile            Output file name.\n<br>  analysis           UNBINNED. Only unbinned analysis supported.\n<br>  expmap             Input exposure map. See gttsmap help for more\n<br>                     information.\n<br>\n<br>  optional arguments:\n<br>  -h, --help         show this help message and exit\n<br>  --savetmp SAVETMP  Save the temporary files (default is False).\n<br>\n<br>  example:\n<br>  This example creates a TS Map called '3C279_tsmap.fits' with 100\n<br>  bins and using 6 threads.  Each bin is 0.5 degrees square.  It uses\n<br>  the event file '3C279_filtered_gti.fits', the spacecraft file\n<br>  'SC.fits', the exposure map '3C279_expmap.fits', the livetime cube\n<br>  '3C279_ltcube.fits', the model file '3C279_model.xml' and the\n<br>  P7SOURCE_V6.  The optimization is done by the MINUIT optimizer at an\n<br>  absolute tolerance of 1e-5.  The map is centered on 193.98,-5.82 and\n<br>  is created using the STG celestial coordinate system.\n<br>\n<br>  &gt; python gttsmap_mp.py 10 10 6 3C279_filtered_gti.fits SC.fits\n<br>    3C279_ltcube.fits 3C279_model.xml P7SOURCE_V6\n<br>    MINUIT 1e-05 1 0.5 CEL 193.98 -5.82 STG 3C279_tsmap.fits UNBINNED\n<br>    3C279_expmap.fits\n          </div>"}, "last_serial": 2170868, "releases": {"1.4": [{"comment_text": "", "digests": {"md5": "bcbc2d17356d42a94655c449159b7381", "sha256": "e6e87d57e2636ffc5586aadb02603c99d04780a635f11e4cce229233f8c74bbd"}, "downloads": -1, "filename": "gtapps_mp-1.4.tar.gz", "has_sig": false, "md5_digest": "bcbc2d17356d42a94655c449159b7381", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13610, "upload_time": "2016-06-10T15:53:22", "upload_time_iso_8601": "2016-06-10T15:53:22.651022Z", "url": "https://files.pythonhosted.org/packages/91/d4/1e0b16946cb6895a30f6bacd4ecdecf776b7cb33fb1d00c9b5f4de73e1c1/gtapps_mp-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "79a1861afc3449cf5d3eca10955ba03b", "sha256": "faf16b26e062f8b4668a193739e5207d45b7f8ac8f14e9b1862e329e5880d44c"}, "downloads": -1, "filename": "gtapps_mp-1.5b.tar.gz", "has_sig": false, "md5_digest": "79a1861afc3449cf5d3eca10955ba03b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13623, "upload_time": "2016-06-16T13:33:19", "upload_time_iso_8601": "2016-06-16T13:33:19.603168Z", "url": "https://files.pythonhosted.org/packages/aa/38/a9574e321511409f8cab5698beb75da21afc4f73e7f93d3baa1dc3402a5d/gtapps_mp-1.5b.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79a1861afc3449cf5d3eca10955ba03b", "sha256": "faf16b26e062f8b4668a193739e5207d45b7f8ac8f14e9b1862e329e5880d44c"}, "downloads": -1, "filename": "gtapps_mp-1.5b.tar.gz", "has_sig": false, "md5_digest": "79a1861afc3449cf5d3eca10955ba03b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13623, "upload_time": "2016-06-16T13:33:19", "upload_time_iso_8601": "2016-06-16T13:33:19.603168Z", "url": "https://files.pythonhosted.org/packages/aa/38/a9574e321511409f8cab5698beb75da21afc4f73e7f93d3baa1dc3402a5d/gtapps_mp-1.5b.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:34 2020"}