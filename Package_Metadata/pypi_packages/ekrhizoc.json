{"info": {"author": "Nicholas Elia", "author_email": "me@nichelia.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "[![github latest release](https://badgen.net/github/release/nichelia/ekrhizoc?icon=github)](https://github.com/nichelia/ekrhizoc/releases/latest/)\n[![pypi latest package](https://badgen.net/pypi/v/ekrhizoc?label=pypi%20pacakge)](https://pypi.org/project/ekrhizoc/)\n[![docker latest image](https://img.shields.io/docker/v/nichelia/ekrhizoc?label=image&logo=docker&logoColor=white)](https://hub.docker.com/repository/docker/nichelia/ekrhizoc)\n[![project license](https://badgen.net/github/license/nichelia/ekrhizoc?color=purple)](https://github.com/nichelia/ekrhizoc/blob/master/LICENSE)\n\n![e6c CI](https://github.com/nichelia/ekrhizoc/workflows/e6c%20CI/badge.svg)\n![e6c CD](https://github.com/nichelia/ekrhizoc/workflows/e6c%20CD/badge.svg)\n[![security scan](https://badgen.net/dependabot/nichelia/ekrhizoc/?label=security%20scan)](https://github.com/nichelia/ekrhizoc/labels/security%20patch)\n[![pre-commit](https://img.shields.io/badge/pre--commit-enabled-brightgreen)](https://github.com/pre-commit/pre-commit)\n[![code coverage](https://badgen.net/codecov/c/github/nichelia/ekrhizoc?label=code%20coverage)](https://codecov.io/gh/nichelia/ekrhizoc)\n[![code alerts](https://badgen.net/lgtm/alerts/g/nichelia/ekrhizoc?label=code%20alerts)](https://lgtm.com/projects/g/nichelia/ekrhizoc/alerts/)\n[![code quality](https://badgen.net/lgtm/grade/g/nichelia/ekrhizoc?label=code%20quality)](https://lgtm.com/projects/g/nichelia/ekrhizoc/context:python)\n[![code style](https://badgen.net/badge/code%20style/black/color=black)](https://github.com/ambv/black)\n\n# ekrhizoc\nekrhizoc (E6c): A web crawler\n\n## Contents\n1. [Definition](#definition)\n2. [Use Case](#use-case)\n3. [Configuration](#configuration)\n4. [Development](#development)\n5. [Testing](#testing)\n6. [Versioning](#versioning)\n7. [Deployment](#deployment)\n8. [Production](#production)\n\n## Definition\n\n\u03b5\u03ba\u03c1\u03af\u03b6\u03c9\u03c3\u03b7 (Greek)\nekr\u00edzosi / uprooting, eradication\n\nAlso known as __E6c__.\n\n## Use Case\n\nImplementation of a simple python web crawler.  \nInput: URL (seed).  \nOutput: simple textual sitemap (to show links between pages).\n\n### Requirements\n\n* The crawler is limited to *__one__* subdomain (exclude external links).\n* No use of web crawling libraries/frameworks (e.g. scrapy).\n* (Optional) Use of HTML handling Libraries/Frameworks.\n* Production-ready code.\n\n### Assumptions\n\n* The input URL (seed) is limited to __only__ one at every run.\n* The targeted URL(s) are static pages (no backend javascript parsing required).\n* Links to be extracted from HTML anchor `<a>` elements.\n* Valid links include\n    - Valid URL\n        + Non empty\n        + Matches a valid url pattern\n        + Does not exceed the `E6C_MAX_URL_LENGTH` length in characters\n        + Possible to convert a relative urls to a full url\n    - Link is not visited before\n    - Link is not part of an ignored file type\n    - Link has the same domain as the seed url\n    - Link is not restricted by the robots.txt file\n\n### Design\n\nThis project implements a Basic Universal Crawler based on breadth first search graph traversal.\n\n## Configuration\n\nBehaviour of the application can be configured via Environment Variables.\n\n| Environment Variable | Description | Type | Default Value |\n| -------------- | -------------- | -------------- | -------------- |\n| `E6C_LOG_LEVEL` | Level of logging - overrides verbose/quiet flag | string | - |\n| `E6C_LOG_DIR` | Directory to save logs | string | - |\n| `E6C_BIN_DIR` | Directory to save any output (bin) | string | bin |\n| `E6C_IGNORE_FILETYPES` | File types of websites to ignore (e.g. \".filetype1,.filetype2\") | string | \".png,.pdf,.txt,.doc,.jpg,.gif\" |\n| `E6C_URL_REQUEST_TIMER` | Time (in seconds) to wait per request (not to populate server with multiple requests) | float | 0.1 |\n| `E6C_MAX_URLS` | The maximum number of urls to fetch/crawl | integer | 10000 |\n| `E6C_MAX_URL_LENGTH` | The maximum length (character count) of a url to fetch/crawl | integer | 300 |\n\n## Development\n\n### Configure for local development\n\n* Clone [repo](https://github.com/nichelia/ekrhizoc) on your local machine\n* Install [`conda`](https://www.anaconda.com) or [`miniconda`](https://docs.conda.io/en/latest/miniconda.html)\n* Create your local project environment (based on [`conda`](https://www.anaconda.com), [`poetry`](https://python-poetry.org), [`pre-commit`](https://pre-commit.com)):  \n`$ make env`\n* (Optional) Update existing local project environment:  \n`$ make env-update`\n\n### Run locally\n\nOn a terminal, run the following (execute on project's root directory):\n\n* Activate project environment:  \n`$ . ./scripts/helpers/environment.sh`\n* Run the CLI using `poetry`:  \n`$ poetry run ekrhizoc`\n\n### Contribute\n\n[ Not Available ]\n\n## Testing\n(part of CI/CD)\n\n[ Work in progress... ]\n\nTo run the tests, open a terminal and run the following (execute on project's root directory):\n\n* Activate project environment:  \n`$ . ./scripts/helpers/environment.sh`\n* To run pytest:  \n`$ make test`\n* To check test coverage:  \n`$ make test-coverage`\n\n## Versioning\n\nIncrement the version number:  \n`$ poetry version {bump rule}`  \nwhere valid bump rules are:\n\n1. patch\n2. minor\n3. major\n4. prepatch\n5. preminor\n6. premajor\n7. prerelease\n\n### Changelog\n\nUse `CHANGELOG.md` to track the evolution of this package.  \nThe `[UNRELEASED]` tag at the top of the file should always be there to log the work until a release occurs.  \n\nWork should be logged under one of the following subtitles:\n* Added\n* Changed\n* Fixed\n* Removed\n\nOn a release, a version of the following format should be added to all the current unreleased changes in the file.  \n`## [major.minor.patch] - YYYY-MM-DD`\n\n## Deployment\n\n### Pip package\n\nOn a terminal, run the following (execute on project's root directory):\n\n* Activate project environment:  \n`$ . ./scripts/helpers/environment.sh`\n* To build pip package:  \n`$ make build-package`\n* To publish pip package (requires credentials to PyPi):  \n`$ make publish-package`\n\n### Docker image\n\nOn a terminal, run the following (execute on project's root directory):\n\n* Activate project environment:  \n`$ . ./scripts/helpers/environment.sh`\n* To build docker image:  \n`$ make build-docker`\n\n## Production\n\nFor production, a Docker image is used.\nThis image is published publicly on [docker hub](https://hub.docker.com/repository/docker/nichelia/ekrhizoc).\n\n* First pull image from docker hub:  \n`$ docker pull nichelia/ekrhizoc:[version]`\n* First pull image from docker hub:  \n`$ docker run --rm -it -v ~/ekrhizoc_bin:/usr/src/bin nichelia/ekrhizoc:[version]`  \nThis command mounts the application's bin (outcome) to user's root directory under ekrhizoc_bin folder.\n\nwhere version is the published application version (e.g. 0.1.0)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nichelia/ekrhizoc", "keywords": "python,web,crawl", "license": "MIT", "maintainer": "Nicholas Elia", "maintainer_email": "me@nichelia.com", "name": "ekrhizoc", "package_url": "https://pypi.org/project/ekrhizoc/", "platform": "", "project_url": "https://pypi.org/project/ekrhizoc/", "project_urls": {"Homepage": "https://github.com/nichelia/ekrhizoc", "Repository": "https://github.com/nichelia/ekrhizoc"}, "release_url": "https://pypi.org/project/ekrhizoc/0.1.1/", "requires_dist": ["aiodns (>=2.0.0,<3.0.0)", "aiohttp (>=3.6.2,<4.0.0)", "asyncio (>=3.4.3,<4.0.0)", "beautifulsoup4 (>=4.8.1,<5.0.0)", "matplotlib (>=3.1.3,<4.0.0)", "networkx (>=2.4,<3.0)", "pyyaml (>=5.3.1,<6.0.0)", "reppy (>=0.4.14,<0.5.0)", "urlcanon (>=0.3.1,<0.4.0)"], "requires_python": ">=3.7,<4.0", "summary": "A simple python web crawler", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/nichelia/ekrhizoc/releases/latest/\" rel=\"nofollow\"><img alt=\"github latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/211e45c05d03f4ccf906c38e54515127454bbcc9/68747470733a2f2f62616467656e2e6e65742f6769746875622f72656c656173652f6e696368656c69612f656b7268697a6f633f69636f6e3d676974687562\"></a>\n<a href=\"https://pypi.org/project/ekrhizoc/\" rel=\"nofollow\"><img alt=\"pypi latest package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e16331dd216e7cef957288b88c4d42c73519af1f/68747470733a2f2f62616467656e2e6e65742f707970692f762f656b7268697a6f633f6c6162656c3d70797069253230706163616b6765\"></a>\n<a href=\"https://hub.docker.com/repository/docker/nichelia/ekrhizoc\" rel=\"nofollow\"><img alt=\"docker latest image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e6e280a9c2ba864faae0e02306a6ea68427f671/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f762f6e696368656c69612f656b7268697a6f633f6c6162656c3d696d616765266c6f676f3d646f636b6572266c6f676f436f6c6f723d7768697465\"></a>\n<a href=\"https://github.com/nichelia/ekrhizoc/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"project license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03b59ef534202c1f9fc67c8a130d04f638c34a18/68747470733a2f2f62616467656e2e6e65742f6769746875622f6c6963656e73652f6e696368656c69612f656b7268697a6f633f636f6c6f723d707572706c65\"></a></p>\n<p><img alt=\"e6c CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60fe2a339e4bccbe2ddf03aba238c965d8a33d70/68747470733a2f2f6769746875622e636f6d2f6e696368656c69612f656b7268697a6f632f776f726b666c6f77732f65366325323043492f62616467652e737667\">\n<img alt=\"e6c CD\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3099e7f43cf1ba150d9d257497c97927c95e9a3b/68747470733a2f2f6769746875622e636f6d2f6e696368656c69612f656b7268697a6f632f776f726b666c6f77732f65366325323043442f62616467652e737667\">\n<a href=\"https://github.com/nichelia/ekrhizoc/labels/security%20patch\" rel=\"nofollow\"><img alt=\"security scan\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10952ad708706417af51682e7498a54a9d7e0d09/68747470733a2f2f62616467656e2e6e65742f646570656e6461626f742f6e696368656c69612f656b7268697a6f632f3f6c6162656c3d73656375726974792532307363616e\"></a>\n<a href=\"https://github.com/pre-commit/pre-commit\" rel=\"nofollow\"><img alt=\"pre-commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8035f0e12897cc145508b57c046a1212f6c1e27c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7072652d2d636f6d6d69742d656e61626c65642d627269676874677265656e\"></a>\n<a href=\"https://codecov.io/gh/nichelia/ekrhizoc\" rel=\"nofollow\"><img alt=\"code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c491fd0012f70e258772d71015c404305fe5e406/68747470733a2f2f62616467656e2e6e65742f636f6465636f762f632f6769746875622f6e696368656c69612f656b7268697a6f633f6c6162656c3d636f6465253230636f766572616765\"></a>\n<a href=\"https://lgtm.com/projects/g/nichelia/ekrhizoc/alerts/\" rel=\"nofollow\"><img alt=\"code alerts\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/121785c03447ba7a1f86b65125007cba439f6b8c/68747470733a2f2f62616467656e2e6e65742f6c67746d2f616c657274732f672f6e696368656c69612f656b7268697a6f633f6c6162656c3d636f6465253230616c65727473\"></a>\n<a href=\"https://lgtm.com/projects/g/nichelia/ekrhizoc/context:python\" rel=\"nofollow\"><img alt=\"code quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6baba5afa221a0000b3cf6a8bf1e1299524e4e3f/68747470733a2f2f62616467656e2e6e65742f6c67746d2f67726164652f672f6e696368656c69612f656b7268697a6f633f6c6162656c3d636f64652532307175616c697479\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"code style\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f1717939dc14257fa794e754e9662f198760fe2/68747470733a2f2f62616467656e2e6e65742f62616467652f636f64652532307374796c652f626c61636b2f636f6c6f723d626c61636b\"></a></p>\n<h1>ekrhizoc</h1>\n<p>ekrhizoc (E6c): A web crawler</p>\n<h2>Contents</h2>\n<ol>\n<li><a href=\"#definition\" rel=\"nofollow\">Definition</a></li>\n<li><a href=\"#use-case\" rel=\"nofollow\">Use Case</a></li>\n<li><a href=\"#configuration\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#development\" rel=\"nofollow\">Development</a></li>\n<li><a href=\"#testing\" rel=\"nofollow\">Testing</a></li>\n<li><a href=\"#versioning\" rel=\"nofollow\">Versioning</a></li>\n<li><a href=\"#deployment\" rel=\"nofollow\">Deployment</a></li>\n<li><a href=\"#production\" rel=\"nofollow\">Production</a></li>\n</ol>\n<h2>Definition</h2>\n<p>\u03b5\u03ba\u03c1\u03af\u03b6\u03c9\u03c3\u03b7 (Greek)\nekr\u00edzosi / uprooting, eradication</p>\n<p>Also known as <strong>E6c</strong>.</p>\n<h2>Use Case</h2>\n<p>Implementation of a simple python web crawler.<br>\nInput: URL (seed).<br>\nOutput: simple textual sitemap (to show links between pages).</p>\n<h3>Requirements</h3>\n<ul>\n<li>The crawler is limited to <em><strong>one</strong></em> subdomain (exclude external links).</li>\n<li>No use of web crawling libraries/frameworks (e.g. scrapy).</li>\n<li>(Optional) Use of HTML handling Libraries/Frameworks.</li>\n<li>Production-ready code.</li>\n</ul>\n<h3>Assumptions</h3>\n<ul>\n<li>The input URL (seed) is limited to <strong>only</strong> one at every run.</li>\n<li>The targeted URL(s) are static pages (no backend javascript parsing required).</li>\n<li>Links to be extracted from HTML anchor <code>&lt;a&gt;</code> elements.</li>\n<li>Valid links include\n<ul>\n<li>Valid URL\n<ul>\n<li>Non empty</li>\n<li>Matches a valid url pattern</li>\n<li>Does not exceed the <code>E6C_MAX_URL_LENGTH</code> length in characters</li>\n<li>Possible to convert a relative urls to a full url</li>\n</ul>\n</li>\n<li>Link is not visited before</li>\n<li>Link is not part of an ignored file type</li>\n<li>Link has the same domain as the seed url</li>\n<li>Link is not restricted by the robots.txt file</li>\n</ul>\n</li>\n</ul>\n<h3>Design</h3>\n<p>This project implements a Basic Universal Crawler based on breadth first search graph traversal.</p>\n<h2>Configuration</h2>\n<p>Behaviour of the application can be configured via Environment Variables.</p>\n<table>\n<thead>\n<tr>\n<th>Environment Variable</th>\n<th>Description</th>\n<th>Type</th>\n<th>Default Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>E6C_LOG_LEVEL</code></td>\n<td>Level of logging - overrides verbose/quiet flag</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>E6C_LOG_DIR</code></td>\n<td>Directory to save logs</td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td><code>E6C_BIN_DIR</code></td>\n<td>Directory to save any output (bin)</td>\n<td>string</td>\n<td>bin</td>\n</tr>\n<tr>\n<td><code>E6C_IGNORE_FILETYPES</code></td>\n<td>File types of websites to ignore (e.g. \".filetype1,.filetype2\")</td>\n<td>string</td>\n<td>\".png,.pdf,.txt,.doc,.jpg,.gif\"</td>\n</tr>\n<tr>\n<td><code>E6C_URL_REQUEST_TIMER</code></td>\n<td>Time (in seconds) to wait per request (not to populate server with multiple requests)</td>\n<td>float</td>\n<td>0.1</td>\n</tr>\n<tr>\n<td><code>E6C_MAX_URLS</code></td>\n<td>The maximum number of urls to fetch/crawl</td>\n<td>integer</td>\n<td>10000</td>\n</tr>\n<tr>\n<td><code>E6C_MAX_URL_LENGTH</code></td>\n<td>The maximum length (character count) of a url to fetch/crawl</td>\n<td>integer</td>\n<td>300</td>\n</tr></tbody></table>\n<h2>Development</h2>\n<h3>Configure for local development</h3>\n<ul>\n<li>Clone <a href=\"https://github.com/nichelia/ekrhizoc\" rel=\"nofollow\">repo</a> on your local machine</li>\n<li>Install <a href=\"https://www.anaconda.com\" rel=\"nofollow\"><code>conda</code></a> or <a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\"><code>miniconda</code></a></li>\n<li>Create your local project environment (based on <a href=\"https://www.anaconda.com\" rel=\"nofollow\"><code>conda</code></a>, <a href=\"https://python-poetry.org\" rel=\"nofollow\"><code>poetry</code></a>, <a href=\"https://pre-commit.com\" rel=\"nofollow\"><code>pre-commit</code></a>):<br>\n<code>$ make env</code></li>\n<li>(Optional) Update existing local project environment:<br>\n<code>$ make env-update</code></li>\n</ul>\n<h3>Run locally</h3>\n<p>On a terminal, run the following (execute on project's root directory):</p>\n<ul>\n<li>Activate project environment:<br>\n<code>$ . ./scripts/helpers/environment.sh</code></li>\n<li>Run the CLI using <code>poetry</code>:<br>\n<code>$ poetry run ekrhizoc</code></li>\n</ul>\n<h3>Contribute</h3>\n<p>[ Not Available ]</p>\n<h2>Testing</h2>\n<p>(part of CI/CD)</p>\n<p>[ Work in progress... ]</p>\n<p>To run the tests, open a terminal and run the following (execute on project's root directory):</p>\n<ul>\n<li>Activate project environment:<br>\n<code>$ . ./scripts/helpers/environment.sh</code></li>\n<li>To run pytest:<br>\n<code>$ make test</code></li>\n<li>To check test coverage:<br>\n<code>$ make test-coverage</code></li>\n</ul>\n<h2>Versioning</h2>\n<p>Increment the version number:<br>\n<code>$ poetry version {bump rule}</code><br>\nwhere valid bump rules are:</p>\n<ol>\n<li>patch</li>\n<li>minor</li>\n<li>major</li>\n<li>prepatch</li>\n<li>preminor</li>\n<li>premajor</li>\n<li>prerelease</li>\n</ol>\n<h3>Changelog</h3>\n<p>Use <code>CHANGELOG.md</code> to track the evolution of this package.<br>\nThe <code>[UNRELEASED]</code> tag at the top of the file should always be there to log the work until a release occurs.</p>\n<p>Work should be logged under one of the following subtitles:</p>\n<ul>\n<li>Added</li>\n<li>Changed</li>\n<li>Fixed</li>\n<li>Removed</li>\n</ul>\n<p>On a release, a version of the following format should be added to all the current unreleased changes in the file.<br>\n<code>## [major.minor.patch] - YYYY-MM-DD</code></p>\n<h2>Deployment</h2>\n<h3>Pip package</h3>\n<p>On a terminal, run the following (execute on project's root directory):</p>\n<ul>\n<li>Activate project environment:<br>\n<code>$ . ./scripts/helpers/environment.sh</code></li>\n<li>To build pip package:<br>\n<code>$ make build-package</code></li>\n<li>To publish pip package (requires credentials to PyPi):<br>\n<code>$ make publish-package</code></li>\n</ul>\n<h3>Docker image</h3>\n<p>On a terminal, run the following (execute on project's root directory):</p>\n<ul>\n<li>Activate project environment:<br>\n<code>$ . ./scripts/helpers/environment.sh</code></li>\n<li>To build docker image:<br>\n<code>$ make build-docker</code></li>\n</ul>\n<h2>Production</h2>\n<p>For production, a Docker image is used.\nThis image is published publicly on <a href=\"https://hub.docker.com/repository/docker/nichelia/ekrhizoc\" rel=\"nofollow\">docker hub</a>.</p>\n<ul>\n<li>First pull image from docker hub:<br>\n<code>$ docker pull nichelia/ekrhizoc:[version]</code></li>\n<li>First pull image from docker hub:<br>\n<code>$ docker run --rm -it -v ~/ekrhizoc_bin:/usr/src/bin nichelia/ekrhizoc:[version]</code><br>\nThis command mounts the application's bin (outcome) to user's root directory under ekrhizoc_bin folder.</li>\n</ul>\n<p>where version is the published application version (e.g. 0.1.0)</p>\n\n          </div>"}, "last_serial": 7006667, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "8cf21ec37e035ca5ce9090c7328d5da7", "sha256": "693ea686bea1254ce1b53109909e0dea10f2edce04b732b9f97b1706f7789712"}, "downloads": -1, "filename": "ekrhizoc-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8cf21ec37e035ca5ce9090c7328d5da7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 15356, "upload_time": "2020-02-24T02:32:38", "upload_time_iso_8601": "2020-02-24T02:32:38.982795Z", "url": "https://files.pythonhosted.org/packages/82/e0/6d5927651639f54074859983899a7c563b8425fdba740d9188e2550263f2/ekrhizoc-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f641ec63c1ad97c9118345537d753d8", "sha256": "3d7704d48603078f5c16cb538487c5ac757fc51b61dacf9b39e17159a9c3cbbe"}, "downloads": -1, "filename": "ekrhizoc-0.0.5.tar.gz", "has_sig": false, "md5_digest": "0f641ec63c1ad97c9118345537d753d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 11940, "upload_time": "2020-02-24T02:32:40", "upload_time_iso_8601": "2020-02-24T02:32:40.053159Z", "url": "https://files.pythonhosted.org/packages/02/d3/e31acd3d45ed7a3215bcdc671e42bdaec96afd53b9951b3c7699b00c90e5/ekrhizoc-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ee49b59ca63d5312efc7c0fb9236336a", "sha256": "dfb33c17edc2f22b0cff5df367c869bfea781958dc3547f94282696fee1ccd78"}, "downloads": -1, "filename": "ekrhizoc-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ee49b59ca63d5312efc7c0fb9236336a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 16415, "upload_time": "2020-02-25T01:18:40", "upload_time_iso_8601": "2020-02-25T01:18:40.426970Z", "url": "https://files.pythonhosted.org/packages/ee/73/be2f3cea4595a40b6007ba815a29b014b8de9dc8ade7bd9c7a0984b8e16b/ekrhizoc-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35b65c80b8a58223f1cbea83fdc4b785", "sha256": "f22e58db3a83ccec163ce3b5f0c072269853df486010bf603758abdb80a8fe8e"}, "downloads": -1, "filename": "ekrhizoc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "35b65c80b8a58223f1cbea83fdc4b785", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 15454, "upload_time": "2020-02-25T01:18:42", "upload_time_iso_8601": "2020-02-25T01:18:42.017652Z", "url": "https://files.pythonhosted.org/packages/11/65/8c1efe72e6f2f070bef87b32c1abf3df7e8ce281694ef1d384dd0e150459/ekrhizoc-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3a550493e6756de6a26751db7de43af1", "sha256": "64d0967208e370997019db2140253c20e0eef5e7b6498d5b3702c8f1cc6a4b32"}, "downloads": -1, "filename": "ekrhizoc-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a550493e6756de6a26751db7de43af1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 17623, "upload_time": "2020-04-12T22:34:36", "upload_time_iso_8601": "2020-04-12T22:34:36.727428Z", "url": "https://files.pythonhosted.org/packages/85/39/dd89b01a7b6fe1d35ea534fe9f6fb971789c68c2ef52cecde642139d7dec/ekrhizoc-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3246dbe32f0c7d97defebb2bd092e51c", "sha256": "21a8249f0a918007cb025fdd26b110c9be58e69ae11b9370f34af1bc93258d4b"}, "downloads": -1, "filename": "ekrhizoc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3246dbe32f0c7d97defebb2bd092e51c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 16753, "upload_time": "2020-04-12T22:34:37", "upload_time_iso_8601": "2020-04-12T22:34:37.907465Z", "url": "https://files.pythonhosted.org/packages/42/2b/ef316aef352bfba02667f3bfa8b09885222da80bcd58863e18900f3ae1ea/ekrhizoc-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a550493e6756de6a26751db7de43af1", "sha256": "64d0967208e370997019db2140253c20e0eef5e7b6498d5b3702c8f1cc6a4b32"}, "downloads": -1, "filename": "ekrhizoc-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3a550493e6756de6a26751db7de43af1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 17623, "upload_time": "2020-04-12T22:34:36", "upload_time_iso_8601": "2020-04-12T22:34:36.727428Z", "url": "https://files.pythonhosted.org/packages/85/39/dd89b01a7b6fe1d35ea534fe9f6fb971789c68c2ef52cecde642139d7dec/ekrhizoc-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3246dbe32f0c7d97defebb2bd092e51c", "sha256": "21a8249f0a918007cb025fdd26b110c9be58e69ae11b9370f34af1bc93258d4b"}, "downloads": -1, "filename": "ekrhizoc-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3246dbe32f0c7d97defebb2bd092e51c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 16753, "upload_time": "2020-04-12T22:34:37", "upload_time_iso_8601": "2020-04-12T22:34:37.907465Z", "url": "https://files.pythonhosted.org/packages/42/2b/ef316aef352bfba02667f3bfa8b09885222da80bcd58863e18900f3ae1ea/ekrhizoc-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:09 2020"}