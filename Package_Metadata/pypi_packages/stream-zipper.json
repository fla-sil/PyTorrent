{"info": {"author": "Maurice Benink", "author_email": "MauriceBenink@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "[![Downloads](https://img.shields.io/pypi/dm/stream_zipper.svg?color=orange)](https://pypi.python.org/pypi/stream_zipper)\n[![Latest Version](https://img.shields.io/pypi/v/stream_zipper.svg)](https://pypi.python.org/pypi/stream_zipper)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/stream_zipper.svg)](https://pypi.python.org/pypi/stream_zipper)\n## StreamZipper\nThis package allows you to collect several streams of files and then turn several streams into one single zipped stream\n\nThis can be usefull if you want to serve multiple files from a file server as a single zip file. but you dont to load all files in memory\n\n## installation\n```\npip install stream-zipper\n```\n\n## Usage\n\n```python\nfrom stream_zipper import ZipStream\n\nzip_stream = ZipStream()\nzip_stream.prepare_stream(file_stream_1)\nzip_stream.prepare_stream(file_stream_2)\nzip_stream.prepare_stream(file_stream_3)\nzipped_stream = zip_stream.stream()\n```\n\nthe first argument is always the stream of the file. all other arguments must be passed as keyword argument (key=val)\n\nin the method prepare_stream you can also specify the following kwargs : \n - file_name: the name of the file (in the zip)\n - zip_info: Can be used to pass a ZipInfo object. (makes other variables useless)\n - file_size: size of the file, if set to 0 or not set then it will find the file_length for you\n - crc: crc code of the file,  if set to 0 or not set then it will find the crc for you\n\nWhen you provide the crc or file_size it will check the provided value against the data it processed in the stream of that file\nIf these values do not match then an exception will be thrown.\n\n#### Notes\nIf you do not know the file_size or crc code then that file will have to be streamed twice to get these variables\n\nif you do know the crc code of the files and you know the file_size then it will only call the stream once\n\nit will check per file if it needs to get these values. so it is possible that only some files/streams have the crc and file_size variables. \n\n```python\nfrom stream_zipper import ZipStream\n\nzip_stream = ZipStream()\nzip_stream.prepare_stream(file_stream_1)                                # no crc or file_size. calls the stream 2 times\nzip_stream.prepare_stream(file_stream_2, file_size=100)                 # no crc calls the stream 2 times\nzip_stream.prepare_stream(file_stream_3, crc=\"CRC-CODE\")                # no file_size calls the stream 2 times\nzip_stream.prepare_stream(file_stream_4, file_size=100, crc=\"CRC-CODE\") # both file_size and crc present will call stream 1 time\nzipped_stream = zip_stream.stream()                                     # total streams called 7\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MauriceBenink/python_stream_zipper", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "stream-zipper", "package_url": "https://pypi.org/project/stream-zipper/", "platform": "", "project_url": "https://pypi.org/project/stream-zipper/", "project_urls": {"Homepage": "https://github.com/MauriceBenink/python_stream_zipper"}, "release_url": "https://pypi.org/project/stream-zipper/1.0.1/", "requires_dist": ["io", "itertools", "zipfile"], "requires_python": ">=3.6", "summary": "Package which allows you to take several file streams and turn them into a single zipfile stream", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/stream_zipper\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05456b49561dc41a80bf32fe1567708756ee38c0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f73747265616d5f7a69707065722e7376673f636f6c6f723d6f72616e6765\"></a>\n<a href=\"https://pypi.python.org/pypi/stream_zipper\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6541e54512e849942a5298424622fb96300d975/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73747265616d5f7a69707065722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/stream_zipper\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34ab69858499d157d40f04fbf86c024e350af8bf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f73747265616d5f7a69707065722e737667\"></a></p>\n<h2>StreamZipper</h2>\n<p>This package allows you to collect several streams of files and then turn several streams into one single zipped stream</p>\n<p>This can be usefull if you want to serve multiple files from a file server as a single zip file. but you dont to load all files in memory</p>\n<h2>installation</h2>\n<pre><code>pip install stream-zipper\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stream_zipper</span> <span class=\"kn\">import</span> <span class=\"n\">ZipStream</span>\n\n<span class=\"n\">zip_stream</span> <span class=\"o\">=</span> <span class=\"n\">ZipStream</span><span class=\"p\">()</span>\n<span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">prepare_stream</span><span class=\"p\">(</span><span class=\"n\">file_stream_1</span><span class=\"p\">)</span>\n<span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">prepare_stream</span><span class=\"p\">(</span><span class=\"n\">file_stream_2</span><span class=\"p\">)</span>\n<span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">prepare_stream</span><span class=\"p\">(</span><span class=\"n\">file_stream_3</span><span class=\"p\">)</span>\n<span class=\"n\">zipped_stream</span> <span class=\"o\">=</span> <span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>\n</pre>\n<p>the first argument is always the stream of the file. all other arguments must be passed as keyword argument (key=val)</p>\n<p>in the method prepare_stream you can also specify the following kwargs :</p>\n<ul>\n<li>file_name: the name of the file (in the zip)</li>\n<li>zip_info: Can be used to pass a ZipInfo object. (makes other variables useless)</li>\n<li>file_size: size of the file, if set to 0 or not set then it will find the file_length for you</li>\n<li>crc: crc code of the file,  if set to 0 or not set then it will find the crc for you</li>\n</ul>\n<p>When you provide the crc or file_size it will check the provided value against the data it processed in the stream of that file\nIf these values do not match then an exception will be thrown.</p>\n<h4>Notes</h4>\n<p>If you do not know the file_size or crc code then that file will have to be streamed twice to get these variables</p>\n<p>if you do know the crc code of the files and you know the file_size then it will only call the stream once</p>\n<p>it will check per file if it needs to get these values. so it is possible that only some files/streams have the crc and file_size variables.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stream_zipper</span> <span class=\"kn\">import</span> <span class=\"n\">ZipStream</span>\n\n<span class=\"n\">zip_stream</span> <span class=\"o\">=</span> <span class=\"n\">ZipStream</span><span class=\"p\">()</span>\n<span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">prepare_stream</span><span class=\"p\">(</span><span class=\"n\">file_stream_1</span><span class=\"p\">)</span>                                <span class=\"c1\"># no crc or file_size. calls the stream 2 times</span>\n<span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">prepare_stream</span><span class=\"p\">(</span><span class=\"n\">file_stream_2</span><span class=\"p\">,</span> <span class=\"n\">file_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>                 <span class=\"c1\"># no crc calls the stream 2 times</span>\n<span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">prepare_stream</span><span class=\"p\">(</span><span class=\"n\">file_stream_3</span><span class=\"p\">,</span> <span class=\"n\">crc</span><span class=\"o\">=</span><span class=\"s2\">\"CRC-CODE\"</span><span class=\"p\">)</span>                <span class=\"c1\"># no file_size calls the stream 2 times</span>\n<span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">prepare_stream</span><span class=\"p\">(</span><span class=\"n\">file_stream_4</span><span class=\"p\">,</span> <span class=\"n\">file_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">crc</span><span class=\"o\">=</span><span class=\"s2\">\"CRC-CODE\"</span><span class=\"p\">)</span> <span class=\"c1\"># both file_size and crc present will call stream 1 time</span>\n<span class=\"n\">zipped_stream</span> <span class=\"o\">=</span> <span class=\"n\">zip_stream</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">()</span>                                     <span class=\"c1\"># total streams called 7</span>\n</pre>\n\n          </div>"}, "last_serial": 6717142, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "81b439c5a84bbd679fd29faef4761512", "sha256": "c38aac75edda7f5dc43cce94dec77f3996034ad403db9984bc2d244abf852a3b"}, "downloads": -1, "filename": "stream_zipper-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "81b439c5a84bbd679fd29faef4761512", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5978, "upload_time": "2020-02-28T12:21:08", "upload_time_iso_8601": "2020-02-28T12:21:08.367427Z", "url": "https://files.pythonhosted.org/packages/85/20/8b42745806d88c0793d328b581b85726fb61a17d2f182dec495801dc659f/stream_zipper-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cb81945f1d3895519004ff2a242f6bf", "sha256": "9c8dc06ee1a6cfed4f422c7ec9a028347406d137518079e8ae88954df0d9984b"}, "downloads": -1, "filename": "stream-zipper-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3cb81945f1d3895519004ff2a242f6bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4702, "upload_time": "2020-02-28T12:21:10", "upload_time_iso_8601": "2020-02-28T12:21:10.318335Z", "url": "https://files.pythonhosted.org/packages/64/17/46d5c46240f31fe85b8b8ba0658b460a909a61bb26eab3e0373f1b8f117a/stream-zipper-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f517303f892c3fc27950ef944da6e3fe", "sha256": "4702aa23043460d111eb260f9dc84c9a2f994c2b4f6baddfe3646be215d4b7c2"}, "downloads": -1, "filename": "stream_zipper-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f517303f892c3fc27950ef944da6e3fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6641, "upload_time": "2020-02-28T13:09:39", "upload_time_iso_8601": "2020-02-28T13:09:39.715661Z", "url": "https://files.pythonhosted.org/packages/20/ce/a9ef93b14e9d0efbe5b973a1e6d4aba77fc9bb38aa30e68b70e4829ab73f/stream_zipper-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5a959aa06880f71e37acdb280524683", "sha256": "7077eac2337fb6686c93f16ab5d8f59111bd79b989d7d60ae2d8f2533ee273a1"}, "downloads": -1, "filename": "stream-zipper-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c5a959aa06880f71e37acdb280524683", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5507, "upload_time": "2020-02-28T13:09:41", "upload_time_iso_8601": "2020-02-28T13:09:41.162372Z", "url": "https://files.pythonhosted.org/packages/41/f5/c42b1e4dc18c680de42ef7d87098a76cd8f6b01d9beb7233589dafdf6a70/stream-zipper-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f517303f892c3fc27950ef944da6e3fe", "sha256": "4702aa23043460d111eb260f9dc84c9a2f994c2b4f6baddfe3646be215d4b7c2"}, "downloads": -1, "filename": "stream_zipper-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f517303f892c3fc27950ef944da6e3fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6641, "upload_time": "2020-02-28T13:09:39", "upload_time_iso_8601": "2020-02-28T13:09:39.715661Z", "url": "https://files.pythonhosted.org/packages/20/ce/a9ef93b14e9d0efbe5b973a1e6d4aba77fc9bb38aa30e68b70e4829ab73f/stream_zipper-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5a959aa06880f71e37acdb280524683", "sha256": "7077eac2337fb6686c93f16ab5d8f59111bd79b989d7d60ae2d8f2533ee273a1"}, "downloads": -1, "filename": "stream-zipper-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c5a959aa06880f71e37acdb280524683", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5507, "upload_time": "2020-02-28T13:09:41", "upload_time_iso_8601": "2020-02-28T13:09:41.162372Z", "url": "https://files.pythonhosted.org/packages/41/f5/c42b1e4dc18c680de42ef7d87098a76cd8f6b01d9beb7233589dafdf6a70/stream-zipper-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:16 2020"}