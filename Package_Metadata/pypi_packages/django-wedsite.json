{"info": {"author": "Dan Pipe-Mazo", "author_email": "dpipemazo@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-wedsite\n==============\n\nOverview\n--------\n\n``django-wedsite`` aims to provide a quick, easy-to-use open source\ndjango app that allows you to flexibly build a custom website for your\nwedding without needing to jump through the typical hoops of getting a\nsite up and running.\n\nYou can see an `example of the app running on\nHeroku <https://wedsite.io>`__ and can see the source of that app on\n`Github <https://github.com/dpipemazo/wedsite>`__.\n\n``django-wedsite`` ships with default settings/text that can easily be\noverriden in your main web app.\n\nQuick setup\n-----------\n\nClone the example app\n~~~~~~~~~~~~~~~~~~~~~\n\nThe easiest way to get up and running is to clone the `example wedsite\napp <https://github.com/dpipemazo/wedsite>`__ and then make\nmodifications from there as needed\n\n::\n\n   git clone https://github.com/dpipemazo/wedsite.git\n\nIf you prefer not to clone, it\u2019s recommended to take a look at and/or\ncopy the\n```settings.py`` <https://github.com/dpipemazo/wedsite/blob/master/example_wedsite/settings.py>`__\nand\n```urls.py`` <https://github.com/dpipemazo/wedsite/blob/master/example_wedsite/urls.py>`__\nfrom the provided `example wedsite\napp <https://github.com/dpipemazo/wedsite>`__. These files configure all\nof your example app\u2019s setup to get the basic default wedsite up and\nrunning.\n\nInitialize Database\n~~~~~~~~~~~~~~~~~~~\n\nIn order to run migrations and initialize the database, you will first\nneed to set a ``SECRET_KEY`` by doing the following in root\n``django-wedsite`` directory:\n\n::\n\n   $ echo \"DJANGO_SECRET_KEY='$(python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())')'\" >> .env\n   $ source .env\n   $ export DJANGO_SECRET_KEY\n\nNow, all you need to do to initialize the database is run the django\nmigrations, and while you\u2019re at it, create a superuser for later use.\n\n::\n\n   $ python manage.py migrate\n   $ python manage.py createsuperuser\n\nLaunch\n~~~~~~\n\nWith that done you should be all set and your site should be serving the\ndefault ``django-wedsite`` app. Launch and test!\n\nCustomization\n~~~~~~~~~~~~~\n\nOnce the basic site is launched, it\u2019s fun to try out some quick\ncustomization that will give you a feel for how the more advanced\ncustomization will work. In your django app, add a file that will be\nused for configuring wedsite. You can use any name, but something like\n``wedsite_conf.py`` is recommended. In this file, try out the following\ncode:\n\n::\n\n   from copy import deepcopy\n   from wedsite.settings import DEFAULT_JSON\n\n   CUSTOMIZED_JSON = deepcopy(DEFAULT_JSON)\n   CUSTOMIZED_JSON['broom']['last_name'] = \"Pandas\"\n\nAnd now in your ``settings.py`` file, add the following\n\n::\n\n   from myapp.wedsite_conf import CUSTOMIZED_JSON\n\n   ...\n\n   WEDSITE_JSON = CUSTOMIZED_JSON\n\nYou should now see that the Broom\u2019s last name on the landing page is\n\u201cPandas\u201d. The concept for customizing the whole site would then be to\nadd as much detail as you\u2019d like to your ``CUSTOMIZED_JSON``. You should\nfind that everything you need is in there. See\n```settings.py`` <wedsite/settings.py>`__ for all of the fields you can\nchange.\n\nPages and access restriction\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPages\n^^^^^\n\nThe site offers the following pages:\n\n+---------------------+------------------------------------------------+\n| Page                | Description                                    |\n+=====================+================================================+\n| index               | Main landing page                              |\n+---------------------+------------------------------------------------+\n| story               | Cute stories about the couple                  |\n+---------------------+------------------------------------------------+\n| wedding             | Info about the ceremony                        |\n+---------------------+------------------------------------------------+\n| events              | Info about the schedule for the days           |\n|                     | surrounding the wedding                        |\n+---------------------+------------------------------------------------+\n| travel              | Info about airports, hotels, traffic, etc.     |\n+---------------------+------------------------------------------------+\n| explore             | Info about what to do in the wedding city      |\n+---------------------+------------------------------------------------+\n| gifts               | Info about registries, gifts, donations, etc.  |\n+---------------------+------------------------------------------------+\n| team                | Info about the wedding team                    |\n+---------------------+------------------------------------------------+\n| contact             | Who your guests should contact if they need    |\n|                     | help                                           |\n+---------------------+------------------------------------------------+\n| traditions          | Info about any cultural traditions you\u2019d like  |\n|                     | your guests to know                            |\n+---------------------+------------------------------------------------+\n\nPage Access\n^^^^^^^^^^^\n\nAll of the above pages can have three access settings, set in the\n``access`` parameter of the ``WEDSITE_JSON`` in ``settings.py``\n\n+----------------------------+-----------------------------------------+\n| Setting                    | Description                             |\n+============================+=========================================+\n| ``\"all\"``                  | Everyone can view the page. The page is |\n|                            | public                                  |\n+----------------------------+-----------------------------------------+\n| ``\"login\"``                | Only authenticated and logged-in users  |\n|                            | can view the page. The page is private  |\n+----------------------------+-----------------------------------------+\n| ``False``                  | The page is not included in the site.   |\n|                            | Nobody can view the page and it is      |\n|                            | removed from the navbar, site URLS,     |\n|                            | etc.                                    |\n+----------------------------+-----------------------------------------+\n\nIn your ``wedsite_conf.py``, you can add\n\n::\n\n   CUSTOMIZED_JSON['access']['team'] = 'login'\n\nto make the team page or any other page login-only.\n\nIf you\u2019d like to remove a page altogether from the site, you can add\n\n::\n\n   CUSTOMIZED_JSON['access']['contact'] = False\n\nThere is one special page, the RSVP page, which cannot be removed from\nthe site and is always restricted to only logged-in users.\n\nPackage Architecture\n--------------------\n\n.. _overview-1:\n\nOverview\n~~~~~~~~\n\nThe site primarily serves up static pages of django-templated HTML. The\nmain dynamic features of the site are:\n\n1. User Accounts\n2. User RSVPs\n3. User mass emailing\n4. Page view restriction to authorized users\n5. Admin UI\n\nStatic Pages\n~~~~~~~~~~~~\n\nTemplates\n^^^^^^^^^\n\nPage templates are split into two categories: blocks and pages. Blocks\nare pieces of code that are utilized in multiple pages and pages utilize\nblocks to build a full web page.\n\nThe main block for the site is\n```base.html`` <templates/wedding/blocks/base.html>`__ which defines the\nnavbar, javascript, title, footer and all other shared resources for the\nsite.\n\nEach of the ```pages`` <wedding/blocks/pages>`__ then imports the base\ntemplate and generally just fills in the page title and content.\n\nURLs and access restriction\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe site map is defined in ```urls.py`` <wedding/urls.py>`__. If you\nwere going to add/remove a page it should be done here. For each page\nthat you want to serve on the site, add a line to the ``urlpatterns``\nlist. In the line you\u2019ll need to specify the page template for the site\nas well as the view class you\u2019d like to use to serve the template. Note\nthat for static HTML pages there are two view choices:\n\n1. ``StaticView``\n2. ``StaticViewNoAuth``\n\nIf you choose ``StaticView`` then it will require a user to log in to\naccess the page, else if you choose ``StaticViewNoAuth`` the page will\nbe accessible without login.\n\nAdding a basic page to the site\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nUsing just your knowledge of templates and URLS from above you can go\nahead and add a new page to the site! Simply make a new template in the\n``pages`` directory and add its desired URL to the ``urlpatterns`` with\neither ``StaticView`` or ``StaticViewNoAuth`` and you should be good to\ngo!\n\nUsers and RSVPs\n~~~~~~~~~~~~~~~\n\nUser Model\n^^^^^^^^^^\n\nThis site uses the standard Django user model. The standard django\naccount pages have been skinned in the theme of the site in the\n```registration`` templates <templates/registration>`__. In order to get\nsome flexibility in the user data a ```Profile`` <wedding/models.py>`__\nmodel has been added as a 1:1 field with a user, created when the user\nis created. Eventually the goal is to add a \u201cuser account\u201d page to the\nsite where users can update their address and contact info using this\nprofile but those features aren\u2019t yet built.\n\nUser Account Creation\n^^^^^^^^^^^^^^^^^^^^^\n\nA custom account creation view has been built such that only users who\nhave a valid RSVP in the system can create an account. The site\ncurrently checks a user\u2019s last name and the numerical digits of their\naddress for a match in the \u201cunclaimed\u201d RSVPs in the database. An\n\u201cunclaimed\u201d RSVP is an RSVP which does not have a Foreign Key to a user.\nThe admin of the site needs to manually enter all of their guests into\nthe database as described below.\n\nRSVP Models\n^^^^^^^^^^^\n\nThe RSVP system consists of two models: RSVP and RSVP Person\n\nRSVP Model\n''''''''''\n\nThe RSVP maps 1:1 to an invitation you sent out. It has the following\nimportant fields:\n\n+------------------------+---------------------------------------------+\n| Field                  | Description                                 |\n+========================+=============================================+\n| ``last_names``         | Comma-separated last names for anyone       |\n|                        | expected to claim the invite                |\n+------------------------+---------------------------------------------+\n| ``address``            | Full address that the invite was sent to.   |\n|                        | Only the numbers really matter              |\n+------------------------+---------------------------------------------+\n| ``response``           | Coment section the user can fill out when   |\n|                        | submitting their response                   |\n+------------------------+---------------------------------------------+\n\nAn RSVP contains a 1:many relationship with RSVP Persons\n\nRSVP Person Models\n''''''''''''''''''\n\nEach RSVP Person has the following important fields\n\n+----------+---------------+\n| Field    | Description   |\n+==========+===============+\n| ``name`` | Person\u2019s Name |\n+----------+---------------+\n\nAlong with the above fields, the RSVP person model can and should be\nmodified to contain any/all of the information you\u2019d like to gather from\nthe person when they submit their response on the web site. The default\nRSVP person contains the following additional fields\n\n+------------------+---------------+-----------------------------------+\n| Field            | Type          | Description                       |\n+==================+===============+===================================+\n| ``is_attending_r | Boolean       | Whether or not they\u2019re attending  |\n| ehearsal``       |               | the rehearsal dinner              |\n+------------------+---------------+-----------------------------------+\n| ``is_attending_w | Boolean       | Whether or not they\u2019re attending  |\n| edding``         |               | the wedding                       |\n+------------------+---------------+-----------------------------------+\n| ``is_child``     | Boolean       | Whether or not the guest counts   |\n|                  |               | as a child                        |\n+------------------+---------------+-----------------------------------+\n| ``dietary_*``    | Boolean       | Various dietary restrictions      |\n+------------------+---------------+-----------------------------------+\n| ``table``        | Integer       | Currently unused, but would be    |\n|                  |               | nice for building a seating       |\n|                  |               | assignment chart                  |\n+------------------+---------------+-----------------------------------+\n\nLoading RSVPs into the site\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWith a basic understanding of the above RSVP system, you\u2019ll want to go\nahead and load your RSVPs into the system so that your users can claim\nthem. To do this, log into the admin UI at\n\n::\n\n   https://my_site/admin\n\nusing your superuser credentials. Then go to the ``RSVP`` page and you\ncan manually add RSVPs. This can indeed be a bit tedious; it would be\nnice to create a management command to take in a CSV or JSON data file\nand make all of the RSVP objects.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.wedsite.io/", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "django-wedsite", "package_url": "https://pypi.org/project/django-wedsite/", "platform": "", "project_url": "https://pypi.org/project/django-wedsite/", "project_urls": {"Homepage": "https://www.wedsite.io/"}, "release_url": "https://pypi.org/project/django-wedsite/0.0.11/", "requires_dist": ["dj-database-url (==0.4.1)", "Django (==1.11)", "gunicorn (==19.6.0)", "psycopg2 (==2.7.3)", "whitenoise (==3.3.0)", "requests (==2.9.1)", "django-easy-maps (==0.9.3)", "raven (>=3)", "django-tz-detect (==0.2.8)", "django-inlinecss (==0.1.2)", "lorem", "django-appconf"], "requires_python": "", "summary": "A simple open-source django wedding website", "version": "0.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p><tt><span class=\"pre\">django-wedsite</span></tt> aims to provide a quick, easy-to-use open source\ndjango app that allows you to flexibly build a custom website for your\nwedding without needing to jump through the typical hoops of getting a\nsite up and running.</p>\n<p>You can see an <a href=\"https://wedsite.io\" rel=\"nofollow\">example of the app running on\nHeroku</a> and can see the source of that app on\n<a href=\"https://github.com/dpipemazo/wedsite\" rel=\"nofollow\">Github</a>.</p>\n<p><tt><span class=\"pre\">django-wedsite</span></tt> ships with default settings/text that can easily be\noverriden in your main web app.</p>\n</div>\n<div id=\"quick-setup\">\n<h2>Quick setup</h2>\n<div id=\"clone-the-example-app\">\n<h3>Clone the example app</h3>\n<p>The easiest way to get up and running is to clone the <a href=\"https://github.com/dpipemazo/wedsite\" rel=\"nofollow\">example wedsite\napp</a> and then make\nmodifications from there as needed</p>\n<pre>git clone https://github.com/dpipemazo/wedsite.git\n</pre>\n<p>If you prefer not to clone, it\u2019s recommended to take a look at and/or\ncopy the\n<tt>`settings.py</tt> &lt;<a href=\"https://github.com/dpipemazo/wedsite/blob/master/example_wedsite/settings.py\" rel=\"nofollow\">https://github.com/dpipemazo/wedsite/blob/master/example_wedsite/settings.py</a>&gt;`__\nand\n<tt>`urls.py</tt> &lt;<a href=\"https://github.com/dpipemazo/wedsite/blob/master/example_wedsite/urls.py\" rel=\"nofollow\">https://github.com/dpipemazo/wedsite/blob/master/example_wedsite/urls.py</a>&gt;`__\nfrom the provided <a href=\"https://github.com/dpipemazo/wedsite\" rel=\"nofollow\">example wedsite\napp</a>. These files configure all\nof your example app\u2019s setup to get the basic default wedsite up and\nrunning.</p>\n</div>\n<div id=\"initialize-database\">\n<h3>Initialize Database</h3>\n<p>In order to run migrations and initialize the database, you will first\nneed to set a <tt>SECRET_KEY</tt> by doing the following in root\n<tt><span class=\"pre\">django-wedsite</span></tt> directory:</p>\n<pre>$ echo \"DJANGO_SECRET_KEY='$(python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())')'\" &gt;&gt; .env\n$ source .env\n$ export DJANGO_SECRET_KEY\n</pre>\n<p>Now, all you need to do to initialize the database is run the django\nmigrations, and while you\u2019re at it, create a superuser for later use.</p>\n<pre>$ python manage.py migrate\n$ python manage.py createsuperuser\n</pre>\n</div>\n<div id=\"launch\">\n<h3>Launch</h3>\n<p>With that done you should be all set and your site should be serving the\ndefault <tt><span class=\"pre\">django-wedsite</span></tt> app. Launch and test!</p>\n</div>\n<div id=\"customization\">\n<h3>Customization</h3>\n<p>Once the basic site is launched, it\u2019s fun to try out some quick\ncustomization that will give you a feel for how the more advanced\ncustomization will work. In your django app, add a file that will be\nused for configuring wedsite. You can use any name, but something like\n<tt>wedsite_conf.py</tt> is recommended. In this file, try out the following\ncode:</p>\n<pre>from copy import deepcopy\nfrom wedsite.settings import DEFAULT_JSON\n\nCUSTOMIZED_JSON = deepcopy(DEFAULT_JSON)\nCUSTOMIZED_JSON['broom']['last_name'] = \"Pandas\"\n</pre>\n<p>And now in your <tt>settings.py</tt> file, add the following</p>\n<pre>from myapp.wedsite_conf import CUSTOMIZED_JSON\n\n...\n\nWEDSITE_JSON = CUSTOMIZED_JSON\n</pre>\n<p>You should now see that the Broom\u2019s last name on the landing page is\n\u201cPandas\u201d. The concept for customizing the whole site would then be to\nadd as much detail as you\u2019d like to your <tt>CUSTOMIZED_JSON</tt>. You should\nfind that everything you need is in there. See\n<tt>`settings.py</tt> &lt;wedsite/settings.py&gt;`__ for all of the fields you can\nchange.</p>\n</div>\n<div id=\"pages-and-access-restriction\">\n<h3>Pages and access restriction</h3>\n<div id=\"pages\">\n<h4>Pages</h4>\n<p>The site offers the following pages:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Page</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>index</td>\n<td>Main landing page</td>\n</tr>\n<tr><td>story</td>\n<td>Cute stories about the couple</td>\n</tr>\n<tr><td>wedding</td>\n<td>Info about the ceremony</td>\n</tr>\n<tr><td>events</td>\n<td>Info about the schedule for the days\nsurrounding the wedding</td>\n</tr>\n<tr><td>travel</td>\n<td>Info about airports, hotels, traffic, etc.</td>\n</tr>\n<tr><td>explore</td>\n<td>Info about what to do in the wedding city</td>\n</tr>\n<tr><td>gifts</td>\n<td>Info about registries, gifts, donations, etc.</td>\n</tr>\n<tr><td>team</td>\n<td>Info about the wedding team</td>\n</tr>\n<tr><td>contact</td>\n<td>Who your guests should contact if they need\nhelp</td>\n</tr>\n<tr><td>traditions</td>\n<td>Info about any cultural traditions you\u2019d like\nyour guests to know</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"page-access\">\n<h4>Page Access</h4>\n<p>All of the above pages can have three access settings, set in the\n<tt>access</tt> parameter of the <tt>WEDSITE_JSON</tt> in <tt>settings.py</tt></p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Setting</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>\"all\"</tt></td>\n<td>Everyone can view the page. The page is\npublic</td>\n</tr>\n<tr><td><tt>\"login\"</tt></td>\n<td>Only authenticated and logged-in users\ncan view the page. The page is private</td>\n</tr>\n<tr><td><tt>False</tt></td>\n<td>The page is not included in the site.\nNobody can view the page and it is\nremoved from the navbar, site URLS,\netc.</td>\n</tr>\n</tbody>\n</table>\n<p>In your <tt>wedsite_conf.py</tt>, you can add</p>\n<pre>CUSTOMIZED_JSON['access']['team'] = 'login'\n</pre>\n<p>to make the team page or any other page login-only.</p>\n<p>If you\u2019d like to remove a page altogether from the site, you can add</p>\n<pre>CUSTOMIZED_JSON['access']['contact'] = False\n</pre>\n<p>There is one special page, the RSVP page, which cannot be removed from\nthe site and is always restricted to only logged-in users.</p>\n</div>\n</div>\n</div>\n<div id=\"package-architecture\">\n<h2>Package Architecture</h2>\n<div id=\"id1\">\n<span id=\"overview-1\"></span><h3>Overview</h3>\n<p>The site primarily serves up static pages of django-templated HTML. The\nmain dynamic features of the site are:</p>\n<ol>\n<li>User Accounts</li>\n<li>User RSVPs</li>\n<li>User mass emailing</li>\n<li>Page view restriction to authorized users</li>\n<li>Admin UI</li>\n</ol>\n</div>\n<div id=\"static-pages\">\n<h3>Static Pages</h3>\n<div id=\"templates\">\n<h4>Templates</h4>\n<p>Page templates are split into two categories: blocks and pages. Blocks\nare pieces of code that are utilized in multiple pages and pages utilize\nblocks to build a full web page.</p>\n<p>The main block for the site is\n<tt>`base.html</tt> &lt;templates/wedding/blocks/base.html&gt;`__ which defines the\nnavbar, javascript, title, footer and all other shared resources for the\nsite.</p>\n<p>Each of the <tt>`pages</tt> &lt;wedding/blocks/pages&gt;`__ then imports the base\ntemplate and generally just fills in the page title and content.</p>\n</div>\n<div id=\"urls-and-access-restriction\">\n<h4>URLs and access restriction</h4>\n<p>The site map is defined in <tt>`urls.py</tt> &lt;wedding/urls.py&gt;`__. If you\nwere going to add/remove a page it should be done here. For each page\nthat you want to serve on the site, add a line to the <tt>urlpatterns</tt>\nlist. In the line you\u2019ll need to specify the page template for the site\nas well as the view class you\u2019d like to use to serve the template. Note\nthat for static HTML pages there are two view choices:</p>\n<ol>\n<li><tt>StaticView</tt></li>\n<li><tt>StaticViewNoAuth</tt></li>\n</ol>\n<p>If you choose <tt>StaticView</tt> then it will require a user to log in to\naccess the page, else if you choose <tt>StaticViewNoAuth</tt> the page will\nbe accessible without login.</p>\n</div>\n<div id=\"adding-a-basic-page-to-the-site\">\n<h4>Adding a basic page to the site</h4>\n<p>Using just your knowledge of templates and URLS from above you can go\nahead and add a new page to the site! Simply make a new template in the\n<tt>pages</tt> directory and add its desired URL to the <tt>urlpatterns</tt> with\neither <tt>StaticView</tt> or <tt>StaticViewNoAuth</tt> and you should be good to\ngo!</p>\n</div>\n</div>\n<div id=\"users-and-rsvps\">\n<h3>Users and RSVPs</h3>\n<div id=\"user-model\">\n<h4>User Model</h4>\n<p>This site uses the standard Django user model. The standard django\naccount pages have been skinned in the theme of the site in the\n<tt>`registration</tt> templates &lt;templates/registration&gt;`__. In order to get\nsome flexibility in the user data a <tt>`Profile</tt> &lt;wedding/models.py&gt;`__\nmodel has been added as a 1:1 field with a user, created when the user\nis created. Eventually the goal is to add a \u201cuser account\u201d page to the\nsite where users can update their address and contact info using this\nprofile but those features aren\u2019t yet built.</p>\n</div>\n<div id=\"user-account-creation\">\n<h4>User Account Creation</h4>\n<p>A custom account creation view has been built such that only users who\nhave a valid RSVP in the system can create an account. The site\ncurrently checks a user\u2019s last name and the numerical digits of their\naddress for a match in the \u201cunclaimed\u201d RSVPs in the database. An\n\u201cunclaimed\u201d RSVP is an RSVP which does not have a Foreign Key to a user.\nThe admin of the site needs to manually enter all of their guests into\nthe database as described below.</p>\n</div>\n<div id=\"rsvp-models\">\n<h4>RSVP Models</h4>\n<p>The RSVP system consists of two models: RSVP and RSVP Person</p>\n<div id=\"rsvp-model\">\n<h5>RSVP Model</h5>\n<p>The RSVP maps 1:1 to an invitation you sent out. It has the following\nimportant fields:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Field</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>last_names</tt></td>\n<td>Comma-separated last names for anyone\nexpected to claim the invite</td>\n</tr>\n<tr><td><tt>address</tt></td>\n<td>Full address that the invite was sent to.\nOnly the numbers really matter</td>\n</tr>\n<tr><td><tt>response</tt></td>\n<td>Coment section the user can fill out when\nsubmitting their response</td>\n</tr>\n</tbody>\n</table>\n<p>An RSVP contains a 1:many relationship with RSVP Persons</p>\n</div>\n<div id=\"rsvp-person-models\">\n<h5>RSVP Person Models</h5>\n<p>Each RSVP Person has the following important fields</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Field</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>name</tt></td>\n<td>Person\u2019s Name</td>\n</tr>\n</tbody>\n</table>\n<p>Along with the above fields, the RSVP person model can and should be\nmodified to contain any/all of the information you\u2019d like to gather from\nthe person when they submit their response on the web site. The default\nRSVP person contains the following additional fields</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Field</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>is_attending_r\nehearsal</tt></td>\n<td>Boolean</td>\n<td>Whether or not they\u2019re attending\nthe rehearsal dinner</td>\n</tr>\n<tr><td><tt>is_attending_w\nedding</tt></td>\n<td>Boolean</td>\n<td>Whether or not they\u2019re attending\nthe wedding</td>\n</tr>\n<tr><td><tt>is_child</tt></td>\n<td>Boolean</td>\n<td>Whether or not the guest counts\nas a child</td>\n</tr>\n<tr><td><tt>dietary_*</tt></td>\n<td>Boolean</td>\n<td>Various dietary restrictions</td>\n</tr>\n<tr><td><tt>table</tt></td>\n<td>Integer</td>\n<td>Currently unused, but would be\nnice for building a seating\nassignment chart</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"loading-rsvps-into-the-site\">\n<h4>Loading RSVPs into the site</h4>\n<p>With a basic understanding of the above RSVP system, you\u2019ll want to go\nahead and load your RSVPs into the system so that your users can claim\nthem. To do this, log into the admin UI at</p>\n<pre>https://my_site/admin\n</pre>\n<p>using your superuser credentials. Then go to the <tt>RSVP</tt> page and you\ncan manually add RSVPs. This can indeed be a bit tedious; it would be\nnice to create a management command to take in a CSV or JSON data file\nand make all of the RSVP objects.</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3926922, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0b7a1a5cfc01de06b32d009fb2b0aeeb", "sha256": "3e7ea50c206bc85e6b9edd8a3e779908a75152ba4dfd73c59d45918504fd95e0"}, "downloads": -1, "filename": "django_wedsite-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0b7a1a5cfc01de06b32d009fb2b0aeeb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1500061, "upload_time": "2018-03-25T23:01:13", "upload_time_iso_8601": "2018-03-25T23:01:13.378113Z", "url": "https://files.pythonhosted.org/packages/54/0d/b308d0bd0dee1f532ecb4bb1acf5a48d175b5c2968666dfad6131dc4874e/django_wedsite-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84c5ca91e7daa540685d972ad1a5010e", "sha256": "280101d96031d9738ee2ea9af461f3762980a9b0cac788836f590fecc2e887e0"}, "downloads": -1, "filename": "django-wedsite-0.0.1.tar.gz", "has_sig": false, "md5_digest": "84c5ca91e7daa540685d972ad1a5010e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1499008, "upload_time": "2018-03-25T23:01:16", "upload_time_iso_8601": "2018-03-25T23:01:16.730668Z", "url": "https://files.pythonhosted.org/packages/33/4b/d096057a0532c1fc9c8e9d2aa9cb5a316c0acb101f12b02d8932d88aca97/django-wedsite-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "894342ef75b79305d793c92d78337734", "sha256": "79c6eb2eacc4106f26945742b3391941d04eed1abfee0d7dbe8ba1e3d4388875"}, "downloads": -1, "filename": "django_wedsite-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "894342ef75b79305d793c92d78337734", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1503174, "upload_time": "2018-06-03T20:34:25", "upload_time_iso_8601": "2018-06-03T20:34:25.090302Z", "url": "https://files.pythonhosted.org/packages/d0/54/eede19cf26231bd04780c3d058f11e4645cbccc883fcdb1f167471712be4/django_wedsite-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd85ce13881a1189167d9bbcd5e48d23", "sha256": "a5c4d47ceef1b2a1e3e7cc1669b06e52ab689151004be721f5c90bbfed0ea13b"}, "downloads": -1, "filename": "django-wedsite-0.0.10.tar.gz", "has_sig": false, "md5_digest": "fd85ce13881a1189167d9bbcd5e48d23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1501558, "upload_time": "2018-06-03T20:34:32", "upload_time_iso_8601": "2018-06-03T20:34:32.005425Z", "url": "https://files.pythonhosted.org/packages/1e/df/d562f0206b477525408a2a4d6833d3ec2e74b0d7cc15ad120bf4d581a1ae/django-wedsite-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "398828436a75d95711cbeb56c19cc2af", "sha256": "9857b4b4085920b13f0995bfbdce3ae9fd39d3e769f018a2e7589734de8ffadf"}, "downloads": -1, "filename": "django_wedsite-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "398828436a75d95711cbeb56c19cc2af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1504909, "upload_time": "2018-06-04T03:57:01", "upload_time_iso_8601": "2018-06-04T03:57:01.600451Z", "url": "https://files.pythonhosted.org/packages/81/ce/cac15a43ccf4775a45a0933549f41e22f79266233b6f4419cea0d5eb95dc/django_wedsite-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54288af800ce790b1ec3d2e114151de0", "sha256": "849d2ff6ae28c631354fe4e10cf083b647a27bce4c31f3c419327ba6d97d5b7c"}, "downloads": -1, "filename": "django-wedsite-0.0.11.tar.gz", "has_sig": false, "md5_digest": "54288af800ce790b1ec3d2e114151de0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1503672, "upload_time": "2018-06-04T03:57:09", "upload_time_iso_8601": "2018-06-04T03:57:09.799706Z", "url": "https://files.pythonhosted.org/packages/fa/bd/37495b5c2cc924044b671af1c5b6f4a9b264a0d5c840f87eed9368f6ae45/django-wedsite-0.0.11.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8bc5eaa9de3d9d4b7ecb03f9140b1d2f", "sha256": "7cdeab230a21e045b388a9f6fecd888e3d4fbf4d977eed18a76f656f4a8c86cb"}, "downloads": -1, "filename": "django_wedsite-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8bc5eaa9de3d9d4b7ecb03f9140b1d2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1500105, "upload_time": "2018-03-26T00:08:57", "upload_time_iso_8601": "2018-03-26T00:08:57.741857Z", "url": "https://files.pythonhosted.org/packages/80/6c/a98eac605106a6e337cb3e4e53190f64855af20cd9ddf890f829eda0a1a3/django_wedsite-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aeee24361e0b304782c2b314c7074126", "sha256": "6f7c15e1e6c3928e1138b0230e5a66256038fe1d28aa6ca65745b51722386122"}, "downloads": -1, "filename": "django-wedsite-0.0.2.tar.gz", "has_sig": false, "md5_digest": "aeee24361e0b304782c2b314c7074126", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1499106, "upload_time": "2018-03-26T00:09:02", "upload_time_iso_8601": "2018-03-26T00:09:02.346845Z", "url": "https://files.pythonhosted.org/packages/e4/61/2818df2f095e4f76ff4bf688077a2a63e68c049aaf81790123fd2aeb9532/django-wedsite-0.0.2.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "e6a3a974dc6cfe4fe16bb24c5c44a0a4", "sha256": "e72c4fd24d4d3f4b14df33e108e29586eeab9d441f6fcad7c61346abc95ed069"}, "downloads": -1, "filename": "django_wedsite-0.0.5-py3.6.egg", "has_sig": false, "md5_digest": "e6a3a974dc6cfe4fe16bb24c5c44a0a4", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 1519866, "upload_time": "2018-06-03T18:18:18", "upload_time_iso_8601": "2018-06-03T18:18:18.377945Z", "url": "https://files.pythonhosted.org/packages/ae/32/0a3daeadff6574bd7e606bcbf8cf65eaad06bcb6c47bd7a42b6046af274e/django_wedsite-0.0.5-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "013b52e157fca45a00083c6259e1ba61", "sha256": "2875af541e16315910420f6003a62b62cfddd808e0b60b732193ea7774314bd6"}, "downloads": -1, "filename": "django_wedsite-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "013b52e157fca45a00083c6259e1ba61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1502924, "upload_time": "2018-06-03T18:18:11", "upload_time_iso_8601": "2018-06-03T18:18:11.600626Z", "url": "https://files.pythonhosted.org/packages/c0/c1/afe059d1bd2c877e2e16542e666c6d71f1685257b2b3bcbb8e6205a94320/django_wedsite-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82264f8e7260c2aa66611d87bba8e2a8", "sha256": "7b0b7c86690177e97d9a5a204bfad9801ddad0d53be2992d5fa13b8006332023"}, "downloads": -1, "filename": "django-wedsite-0.0.5.tar.gz", "has_sig": false, "md5_digest": "82264f8e7260c2aa66611d87bba8e2a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1501509, "upload_time": "2018-06-03T18:18:15", "upload_time_iso_8601": "2018-06-03T18:18:15.097800Z", "url": "https://files.pythonhosted.org/packages/04/56/98320ffd3c673c1f4d93d64c6c5061116db7e34acab67ed8c43671ac2e00/django-wedsite-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "33dcc508bea1febb9e7fb71008080983", "sha256": "c010a590795049b9fa9bddb391f736bf8d71dbc7664c4d5c2d69573bb37b8f99"}, "downloads": -1, "filename": "django_wedsite-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "33dcc508bea1febb9e7fb71008080983", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1502928, "upload_time": "2018-06-03T18:53:22", "upload_time_iso_8601": "2018-06-03T18:53:22.203260Z", "url": "https://files.pythonhosted.org/packages/0f/e7/e3808496a93f4f3a0c5cbac3d322990a9cb2520be95aeb3141368983209c/django_wedsite-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42e3e68092e9f6374628f845d93eda17", "sha256": "9a1cf2069e375f6876e7b76237b7e1b679981bd0ce41927b71ab40aad420bfdc"}, "downloads": -1, "filename": "django-wedsite-0.0.6.tar.gz", "has_sig": false, "md5_digest": "42e3e68092e9f6374628f845d93eda17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1501522, "upload_time": "2018-06-03T18:53:26", "upload_time_iso_8601": "2018-06-03T18:53:26.797355Z", "url": "https://files.pythonhosted.org/packages/67/08/0a83bfb986ef8cbbea741911ee0cd04994ab973b519142d4f59bbd861f15/django-wedsite-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "697aab062b0a7c62cee629c8b6b65c51", "sha256": "daac11847dc3a9133c4512044d34b7c2dab42b15c3f646bf1226ef775765d55a"}, "downloads": -1, "filename": "django_wedsite-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "697aab062b0a7c62cee629c8b6b65c51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1502919, "upload_time": "2018-06-03T19:20:46", "upload_time_iso_8601": "2018-06-03T19:20:46.427972Z", "url": "https://files.pythonhosted.org/packages/e2/c0/fbc8d32dcbfae5667b5cdb5c2cfa1fcd40098f5e6fcc34573343a19bb007/django_wedsite-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11300c7ef5d2597bbfb1f32889dcbf62", "sha256": "0deed10536ced020b20a7463bc134419b74815d6841b3785d64b9881b04246f6"}, "downloads": -1, "filename": "django-wedsite-0.0.7.tar.gz", "has_sig": false, "md5_digest": "11300c7ef5d2597bbfb1f32889dcbf62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1501511, "upload_time": "2018-06-03T19:20:49", "upload_time_iso_8601": "2018-06-03T19:20:49.977984Z", "url": "https://files.pythonhosted.org/packages/84/09/690b01dc67d29537ccb881ef4f37b3a59923b7ee6b39fcffc2a49ef1e1ad/django-wedsite-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "4d3dca00ce9099b39f9b882b466529ca", "sha256": "4671a6bffc8ea444f59e9af7c089d34f4c5ddb867f99f27dbc54dab68e7a1a05"}, "downloads": -1, "filename": "django_wedsite-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "4d3dca00ce9099b39f9b882b466529ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1503128, "upload_time": "2018-06-03T20:04:31", "upload_time_iso_8601": "2018-06-03T20:04:31.786682Z", "url": "https://files.pythonhosted.org/packages/dc/50/f1b5d49ed9ebf984e2910ee094c13d7cd64b1996adc5805be006da4a2e17/django_wedsite-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "852fdbdda5f9a508b9248284eed5c137", "sha256": "0053c3fc90129999bcc9e863ecc46ff61ba7941e2c2bac21b371f0143ef85527"}, "downloads": -1, "filename": "django-wedsite-0.0.8.tar.gz", "has_sig": false, "md5_digest": "852fdbdda5f9a508b9248284eed5c137", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1501523, "upload_time": "2018-06-03T20:04:36", "upload_time_iso_8601": "2018-06-03T20:04:36.401837Z", "url": "https://files.pythonhosted.org/packages/08/78/52e8d36dc4750860ba308051b1de5620c590381a0b4d5e8ed70562f04e7b/django-wedsite-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "398828436a75d95711cbeb56c19cc2af", "sha256": "9857b4b4085920b13f0995bfbdce3ae9fd39d3e769f018a2e7589734de8ffadf"}, "downloads": -1, "filename": "django_wedsite-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "398828436a75d95711cbeb56c19cc2af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1504909, "upload_time": "2018-06-04T03:57:01", "upload_time_iso_8601": "2018-06-04T03:57:01.600451Z", "url": "https://files.pythonhosted.org/packages/81/ce/cac15a43ccf4775a45a0933549f41e22f79266233b6f4419cea0d5eb95dc/django_wedsite-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54288af800ce790b1ec3d2e114151de0", "sha256": "849d2ff6ae28c631354fe4e10cf083b647a27bce4c31f3c419327ba6d97d5b7c"}, "downloads": -1, "filename": "django-wedsite-0.0.11.tar.gz", "has_sig": false, "md5_digest": "54288af800ce790b1ec3d2e114151de0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1503672, "upload_time": "2018-06-04T03:57:09", "upload_time_iso_8601": "2018-06-04T03:57:09.799706Z", "url": "https://files.pythonhosted.org/packages/fa/bd/37495b5c2cc924044b671af1c5b6f4a9b264a0d5c840f87eed9368f6ae45/django-wedsite-0.0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:53 2020"}