{"info": {"author": "Christoph Zwerschke", "author_email": "cito@online.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries"], "description": "# GraphQL-core-next\n\nGraphQL-core-next is a Python 3.6+ port of [GraphQL.js](https://github.com/graphql/graphql-js),\nthe JavaScript reference implementation for [GraphQL](https://graphql.org/),\na query language for APIs created by Facebook.\n\n[![PyPI version](https://badge.fury.io/py/GraphQL-core-next.svg)](https://badge.fury.io/py/GraphQL-core-next)\n[![Documentation Status](https://readthedocs.org/projects/graphql-core-next/badge/)](https://graphql-core-next.readthedocs.io)\n[![Build Status](https://travis-ci.com/graphql-python/graphql-core-next.svg?branch=master)](https://travis-ci.com/graphql-python/graphql-core-next)\n[![Coverage Status](https://codecov.io/gh/graphql-python/graphql-core-next/branch/master/graph/badge.svg)](https://codecov.io/gh/graphql-python/graphql-core-next)\n[![Dependency Updates](https://pyup.io/repos/github/graphql-python/graphql-core-next/shield.svg)](https://pyup.io/repos/github/graphql-python/graphql-core-next/)\n[![Python 3 Status](https://pyup.io/repos/github/graphql-python/graphql-core-next/python-3-shield.svg)](https://pyup.io/repos/github/graphql-python/graphql-core-next/)\n[![Code Style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nThe current version 1.1.1 of GraphQL-core-next is up-to-date with GraphQL.js version\n14.4.0. All parts of the API are covered by an extensive test suite of currently 1885\nunit tests.\n\nDevelopment will be continued with the new distribution name GraphQL-core from now on.\n\n\n## GraphQL-core-next is now GraphQL-core 3\n\nGraphQL-core-next has been discontinued as a separate Python distribution.\nInstead, it is now released as GraphQL-core version 3 and newer, replacing\nthe existing GraphQL-core distribution. The old versions of GraphQL-core,\nwhich also support older Python versions, are still available.\n\n\n## Documentation\n\nA more detailed documentation for GraphQL-core-next can be found at\n[graphql-core-next.readthedocs.io](https://graphql-core-next.readthedocs.io/).\n\nThe documentation for GraphQL.js can be found at [graphql.org/graphql-js/](https://graphql.org/graphql-js/).\n\nThe documentation for GraphQL itself can be found at [graphql.org](https://graphql.org/).\n\n\nThere will be also [blog articles](https://cito.github.io/tags/graphql/) with more usage\nexamples.\n\n\n## Getting started\n\nAn overview of GraphQL in general is available in the\n[README](https://github.com/graphql/graphql-spec/blob/master/README.md) for the\n[Specification for GraphQL](https://github.com/graphql/graphql-spec). That overview\ndescribes a simple set of GraphQL examples that exist as [tests](tests) in this\nrepository. A good way to get started with this repository is to walk through that\nREADME and the corresponding tests in parallel.\n\n\n## Installation\n\nGraphQL-core-next can be installed from PyPI using the built-in pip command:\n\n    python -m pip install graphql-core-next\n\nAlternatively, you can also use [pipenv](https://docs.pipenv.org/) for installation in a\nvirtual environment:\n\n    pipenv install graphql-core-next\n\n\n## Usage\n\nGraphQL-core-next provides two important capabilities: building a type schema, and\nserving queries against that type schema.\n\nFirst, build a GraphQL type schema which maps to your code base:\n\n```python\nfrom graphql import (\n    GraphQLSchema, GraphQLObjectType, GraphQLField, GraphQLString)\n\nschema = GraphQLSchema(\n    query=GraphQLObjectType(\n        name='RootQueryType',\n        fields={\n            'hello': GraphQLField(\n                GraphQLString,\n                resolve=lambda obj, info: 'world')\n        }))\n```\n\nThis defines a simple schema with one type and one field, that resolves to a fixed\nvalue. The `resolve` function can return a value, a co-routine object or a list of\nthese. It takes two positional arguments; the first one provides the root or the\nresolved parent field, the second one provides a `GraphQLResolveInfo` object which\ncontains information about the execution state of the query, including a `context`\nattribute holding per-request state such as authentication information or database\nsession. Any GraphQL arguments are passed to the `resolve` functions as individual\nkeyword arguments.\n\nNote that the signature of the resolver functions is a bit different in GraphQL.js,\nwhere the context is passed separately and arguments are passed as a single object.\nAlso note that GraphQL fields must be passed as a `GraphQLField` object explicitly.\nSimilarly, GraphQL arguments must be passed as `GraphQLArgument` objects.\n\nA more complex example is included in the top level [tests](tests) directory.\n\nThen, serve the result of a query against that type schema.\n\n```python\nfrom graphql import graphql_sync\n\nquery = '{ hello }'\n\nprint(graphql_sync(schema, query))\n```\n\nThis runs a query fetching the one field defined, and then prints the result:\n\n```python\nExecutionResult(data={'hello': 'world'}, errors=None)\n```\n\nThe `graphql_sync` function will first ensure the query is syntactically and\nsemantically valid before executing it, reporting errors otherwise.\n\n```python\nfrom graphql import graphql_sync\n\nquery = '{ boyhowdy }'\n\nprint(graphql_sync(schema, query))\n```\n\nBecause we queried a non-existing field, we will get the following result:\n\n```python\nExecutionResult(data=None, errors=[GraphQLError(\n    \"Cannot query field 'boyhowdy' on type 'RootQueryType'.\",\n    locations=[SourceLocation(line=1, column=3)])])\n```\n\nThe `graphql_sync` function assumes that all resolvers return values synchronously. By\nusing coroutines as resolvers, you can also create results in an asynchronous fashion\nwith the `graphql` function.\n\n```python\nimport asyncio\nfrom graphql import (\n    graphql, GraphQLSchema, GraphQLObjectType, GraphQLField, GraphQLString)\n\n\nasync def resolve_hello(obj, info):\n    await asyncio.sleep(3)\n    return 'world'\n\nschema = GraphQLSchema(\n    query=GraphQLObjectType(\n        name='RootQueryType',\n        fields={\n            'hello': GraphQLField(\n                GraphQLString,\n                resolve=resolve_hello)\n        }))\n\n\nasync def main():\n    query = '{ hello }'\n    print('Fetching the result...')\n    result = await graphql(schema, query)\n    print(result)\n\n\nloop = asyncio.get_event_loop()\ntry:\n    loop.run_until_complete(main())\nfinally:\n    loop.close()\n```\n\n\n## Goals and restrictions\n\nGraphQL-core-next tries to reproduce the code of the reference implementation GraphQL.js\nin Python as closely as possible and to stay up-to-date with the latest development of\nGraphQL.js.\n\nIt has been created as a modern alternative to\n[GraphQL-core](https://github.com/graphql-python/graphql-core), a prior work\nby Syrus Akbary, based on an older version of GraphQL.js and also targeting\nolder Python versions. Some parts of GraphQL-core-next have been inspired by\nGraphQL-core or directly taken over with only slight modifications, but most of the code\nhas been re-implemented from scratch, replicating the latest code in GraphQL.js very\nclosely and adding type hints for Python.\n\nDesign goals for the GraphQL-core-next library are:\n\n* to be a simple, cruft-free, state-of-the-art implementation of GraphQL using current\n  library and language versions\n* to be very close to the GraphQL.js reference implementation, while still using a\n  Pythonic API and code style\n* to make extensive use of Python type hints, similar to how GraphQL.js makes use of Flow\n* to use [black](https://github.com/ambv/black) for automatic code formatting\n* to replicate the complete Mocha-based test suite of GraphQL.js using\n  [pytest](https://docs.pytest.org/)\n\nSome restrictions (mostly in line with the design goals):\n\n* requires Python 3.6 or 3.7\n* does not support some already deprecated methods and options of GraphQL.js\n* supports asynchronous operations only via async.io\n  (does not support the additional executors in GraphQL-core)\n* the benchmarks have not yet been ported to Python\n\n\n## Integration with other libraries and roadmap\n\n* [Graphene](http://graphene-python.org/) is a more high-level framework for building\n  GraphQL APIs in Python, and there is already a whole ecosystem of libraries, server\n  integrations and tools built on top of Graphene. Most of this Graphene ecosystem has\n  also been created by Syrus Akbary, who meanwhile has handed over the maintenance\n  and future development to members of the GraphQL-Python community.\n\n  The current version 2 of Graphene is using Graphql-core as core library for much of\n  the heavy lifting. Note that Graphene 2 is not compatible with GraphQL-core-next.\n  The  new version 3 of Graphene however is planned to use GraphQL-core-next instead of\n  GraphQL-core, and GraphQL-core-next will be renamed to Graphql-core 3.\n\n* [Ariadne](https://github.com/mirumee/ariadne) is a Python library for implementing\n  GraphQL servers using schema-first approach created by Mirumee Software.\n\n  Ariadne is already using GraphQL-core-next as its GraphQL implementation.\n\n* [Strawberry](https://github.com/strawberry-graphql/strawberry), created by Patrick\n  Arminio, is a new GraphQL library for Python 3, inspired by dataclasses,\n  that is also using GraphQL-core-next as underpinning.\n\n\n## Changelog\n\nChanges are tracked as\n[GitHub releases](https://github.com/graphql-python/graphql-core-next/releases).\n\n\n## Credits and history\n\nThe GraphQL-core-next library\n* has been created and is maintained by Christoph Zwerschke\n* uses ideas and code from GraphQL-core, a prior work by Syrus Akbary\n* is a Python port of GraphQL.js which has been developed by Lee Byron and others\n  at Facebook, Inc. and is now maintained\n  by the [GraphQL foundation](https://gql.foundation/join/)\n\nPlease watch the recording of Lee Byron's short keynote on the\n[history of GraphQL](https://www.youtube.com/watch?v=VjHWkBr3tjI) \nat the open source leadership summit 2019 to better understand\nhow and why GraphQL was created at Facebook and then became open sourced\nand ported to many different programming languages. \n\n\n## License\n\nGraphQL-core-next is\n[MIT-licensed](https://github.com/graphql-python/graphql-core-next/blob/master/LICENSE),\njust like GraphQL.js.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/graphql-python/graphql-core-next", "keywords": "graphql", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "GraphQL-core-next", "package_url": "https://pypi.org/project/GraphQL-core-next/", "platform": "", "project_url": "https://pypi.org/project/GraphQL-core-next/", "project_urls": {"Homepage": "https://github.com/graphql-python/graphql-core-next"}, "release_url": "https://pypi.org/project/GraphQL-core-next/1.1.1/", "requires_dist": null, "requires_python": ">=3.6,<4", "summary": "GraphQL-core-next is a Python port of GraphQL.js, the JavaScript reference implementation for GraphQL.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GraphQL-core-next</h1>\n<p>GraphQL-core-next is a Python 3.6+ port of <a href=\"https://github.com/graphql/graphql-js\" rel=\"nofollow\">GraphQL.js</a>,\nthe JavaScript reference implementation for <a href=\"https://graphql.org/\" rel=\"nofollow\">GraphQL</a>,\na query language for APIs created by Facebook.</p>\n<p><a href=\"https://badge.fury.io/py/GraphQL-core-next\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdc7575734a547113056cf8fd3710a30eede6a6e/68747470733a2f2f62616467652e667572792e696f2f70792f4772617068514c2d636f72652d6e6578742e737667\"></a>\n<a href=\"https://graphql-core-next.readthedocs.io\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6332a2d4f02e13e3b55ac9867eacae8a45386d8/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6772617068716c2d636f72652d6e6578742f62616467652f\"></a>\n<a href=\"https://travis-ci.com/graphql-python/graphql-core-next\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2c125aaabc7d3683da706ccb24fa4ff3cab84df/68747470733a2f2f7472617669732d63692e636f6d2f6772617068716c2d707974686f6e2f6772617068716c2d636f72652d6e6578742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/graphql-python/graphql-core-next\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c052d43d40f87ffcc9d8cd8dcc236773867125f/68747470733a2f2f636f6465636f762e696f2f67682f6772617068716c2d707974686f6e2f6772617068716c2d636f72652d6e6578742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pyup.io/repos/github/graphql-python/graphql-core-next/\" rel=\"nofollow\"><img alt=\"Dependency Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f336a2893a4fc1eae90b9ce77e9e62df1f26e39/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6772617068716c2d707974686f6e2f6772617068716c2d636f72652d6e6578742f736869656c642e737667\"></a>\n<a href=\"https://pyup.io/repos/github/graphql-python/graphql-core-next/\" rel=\"nofollow\"><img alt=\"Python 3 Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d3e0de560086e133f58c4179a9ed4214ac9619d/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6772617068716c2d707974686f6e2f6772617068716c2d636f72652d6e6578742f707974686f6e2d332d736869656c642e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code Style\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>The current version 1.1.1 of GraphQL-core-next is up-to-date with GraphQL.js version\n14.4.0. All parts of the API are covered by an extensive test suite of currently 1885\nunit tests.</p>\n<p>Development will be continued with the new distribution name GraphQL-core from now on.</p>\n<h2>GraphQL-core-next is now GraphQL-core 3</h2>\n<p>GraphQL-core-next has been discontinued as a separate Python distribution.\nInstead, it is now released as GraphQL-core version 3 and newer, replacing\nthe existing GraphQL-core distribution. The old versions of GraphQL-core,\nwhich also support older Python versions, are still available.</p>\n<h2>Documentation</h2>\n<p>A more detailed documentation for GraphQL-core-next can be found at\n<a href=\"https://graphql-core-next.readthedocs.io/\" rel=\"nofollow\">graphql-core-next.readthedocs.io</a>.</p>\n<p>The documentation for GraphQL.js can be found at <a href=\"https://graphql.org/graphql-js/\" rel=\"nofollow\">graphql.org/graphql-js/</a>.</p>\n<p>The documentation for GraphQL itself can be found at <a href=\"https://graphql.org/\" rel=\"nofollow\">graphql.org</a>.</p>\n<p>There will be also <a href=\"https://cito.github.io/tags/graphql/\" rel=\"nofollow\">blog articles</a> with more usage\nexamples.</p>\n<h2>Getting started</h2>\n<p>An overview of GraphQL in general is available in the\n<a href=\"https://github.com/graphql/graphql-spec/blob/master/README.md\" rel=\"nofollow\">README</a> for the\n<a href=\"https://github.com/graphql/graphql-spec\" rel=\"nofollow\">Specification for GraphQL</a>. That overview\ndescribes a simple set of GraphQL examples that exist as <a href=\"tests\" rel=\"nofollow\">tests</a> in this\nrepository. A good way to get started with this repository is to walk through that\nREADME and the corresponding tests in parallel.</p>\n<h2>Installation</h2>\n<p>GraphQL-core-next can be installed from PyPI using the built-in pip command:</p>\n<pre><code>python -m pip install graphql-core-next\n</code></pre>\n<p>Alternatively, you can also use <a href=\"https://docs.pipenv.org/\" rel=\"nofollow\">pipenv</a> for installation in a\nvirtual environment:</p>\n<pre><code>pipenv install graphql-core-next\n</code></pre>\n<h2>Usage</h2>\n<p>GraphQL-core-next provides two important capabilities: building a type schema, and\nserving queries against that type schema.</p>\n<p>First, build a GraphQL type schema which maps to your code base:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">graphql</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">GraphQLSchema</span><span class=\"p\">,</span> <span class=\"n\">GraphQLObjectType</span><span class=\"p\">,</span> <span class=\"n\">GraphQLField</span><span class=\"p\">,</span> <span class=\"n\">GraphQLString</span><span class=\"p\">)</span>\n\n<span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">GraphQLSchema</span><span class=\"p\">(</span>\n    <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">GraphQLObjectType</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'RootQueryType'</span><span class=\"p\">,</span>\n        <span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">'hello'</span><span class=\"p\">:</span> <span class=\"n\">GraphQLField</span><span class=\"p\">(</span>\n                <span class=\"n\">GraphQLString</span><span class=\"p\">,</span>\n                <span class=\"n\">resolve</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">:</span> <span class=\"s1\">'world'</span><span class=\"p\">)</span>\n        <span class=\"p\">}))</span>\n</pre>\n<p>This defines a simple schema with one type and one field, that resolves to a fixed\nvalue. The <code>resolve</code> function can return a value, a co-routine object or a list of\nthese. It takes two positional arguments; the first one provides the root or the\nresolved parent field, the second one provides a <code>GraphQLResolveInfo</code> object which\ncontains information about the execution state of the query, including a <code>context</code>\nattribute holding per-request state such as authentication information or database\nsession. Any GraphQL arguments are passed to the <code>resolve</code> functions as individual\nkeyword arguments.</p>\n<p>Note that the signature of the resolver functions is a bit different in GraphQL.js,\nwhere the context is passed separately and arguments are passed as a single object.\nAlso note that GraphQL fields must be passed as a <code>GraphQLField</code> object explicitly.\nSimilarly, GraphQL arguments must be passed as <code>GraphQLArgument</code> objects.</p>\n<p>A more complex example is included in the top level <a href=\"tests\" rel=\"nofollow\">tests</a> directory.</p>\n<p>Then, serve the result of a query against that type schema.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">graphql</span> <span class=\"kn\">import</span> <span class=\"n\">graphql_sync</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s1\">'{ hello }'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">graphql_sync</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">))</span>\n</pre>\n<p>This runs a query fetching the one field defined, and then prints the result:</p>\n<pre><span class=\"n\">ExecutionResult</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'hello'</span><span class=\"p\">:</span> <span class=\"s1\">'world'</span><span class=\"p\">},</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>graphql_sync</code> function will first ensure the query is syntactically and\nsemantically valid before executing it, reporting errors otherwise.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">graphql</span> <span class=\"kn\">import</span> <span class=\"n\">graphql_sync</span>\n\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s1\">'{ boyhowdy }'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">graphql_sync</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">))</span>\n</pre>\n<p>Because we queried a non-existing field, we will get the following result:</p>\n<pre><span class=\"n\">ExecutionResult</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">errors</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">GraphQLError</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"Cannot query field 'boyhowdy' on type 'RootQueryType'.\"</span><span class=\"p\">,</span>\n    <span class=\"n\">locations</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">SourceLocation</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)])])</span>\n</pre>\n<p>The <code>graphql_sync</code> function assumes that all resolvers return values synchronously. By\nusing coroutines as resolvers, you can also create results in an asynchronous fashion\nwith the <code>graphql</code> function.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">graphql</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">graphql</span><span class=\"p\">,</span> <span class=\"n\">GraphQLSchema</span><span class=\"p\">,</span> <span class=\"n\">GraphQLObjectType</span><span class=\"p\">,</span> <span class=\"n\">GraphQLField</span><span class=\"p\">,</span> <span class=\"n\">GraphQLString</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">resolve_hello</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">):</span>\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'world'</span>\n\n<span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">GraphQLSchema</span><span class=\"p\">(</span>\n    <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">GraphQLObjectType</span><span class=\"p\">(</span>\n        <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'RootQueryType'</span><span class=\"p\">,</span>\n        <span class=\"n\">fields</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">'hello'</span><span class=\"p\">:</span> <span class=\"n\">GraphQLField</span><span class=\"p\">(</span>\n                <span class=\"n\">GraphQLString</span><span class=\"p\">,</span>\n                <span class=\"n\">resolve</span><span class=\"o\">=</span><span class=\"n\">resolve_hello</span><span class=\"p\">)</span>\n        <span class=\"p\">}))</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s1\">'{ hello }'</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Fetching the result...'</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">graphql</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n<span class=\"k\">finally</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<h2>Goals and restrictions</h2>\n<p>GraphQL-core-next tries to reproduce the code of the reference implementation GraphQL.js\nin Python as closely as possible and to stay up-to-date with the latest development of\nGraphQL.js.</p>\n<p>It has been created as a modern alternative to\n<a href=\"https://github.com/graphql-python/graphql-core\" rel=\"nofollow\">GraphQL-core</a>, a prior work\nby Syrus Akbary, based on an older version of GraphQL.js and also targeting\nolder Python versions. Some parts of GraphQL-core-next have been inspired by\nGraphQL-core or directly taken over with only slight modifications, but most of the code\nhas been re-implemented from scratch, replicating the latest code in GraphQL.js very\nclosely and adding type hints for Python.</p>\n<p>Design goals for the GraphQL-core-next library are:</p>\n<ul>\n<li>to be a simple, cruft-free, state-of-the-art implementation of GraphQL using current\nlibrary and language versions</li>\n<li>to be very close to the GraphQL.js reference implementation, while still using a\nPythonic API and code style</li>\n<li>to make extensive use of Python type hints, similar to how GraphQL.js makes use of Flow</li>\n<li>to use <a href=\"https://github.com/ambv/black\" rel=\"nofollow\">black</a> for automatic code formatting</li>\n<li>to replicate the complete Mocha-based test suite of GraphQL.js using\n<a href=\"https://docs.pytest.org/\" rel=\"nofollow\">pytest</a></li>\n</ul>\n<p>Some restrictions (mostly in line with the design goals):</p>\n<ul>\n<li>requires Python 3.6 or 3.7</li>\n<li>does not support some already deprecated methods and options of GraphQL.js</li>\n<li>supports asynchronous operations only via async.io\n(does not support the additional executors in GraphQL-core)</li>\n<li>the benchmarks have not yet been ported to Python</li>\n</ul>\n<h2>Integration with other libraries and roadmap</h2>\n<ul>\n<li>\n<p><a href=\"http://graphene-python.org/\" rel=\"nofollow\">Graphene</a> is a more high-level framework for building\nGraphQL APIs in Python, and there is already a whole ecosystem of libraries, server\nintegrations and tools built on top of Graphene. Most of this Graphene ecosystem has\nalso been created by Syrus Akbary, who meanwhile has handed over the maintenance\nand future development to members of the GraphQL-Python community.</p>\n<p>The current version 2 of Graphene is using Graphql-core as core library for much of\nthe heavy lifting. Note that Graphene 2 is not compatible with GraphQL-core-next.\nThe  new version 3 of Graphene however is planned to use GraphQL-core-next instead of\nGraphQL-core, and GraphQL-core-next will be renamed to Graphql-core 3.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/mirumee/ariadne\" rel=\"nofollow\">Ariadne</a> is a Python library for implementing\nGraphQL servers using schema-first approach created by Mirumee Software.</p>\n<p>Ariadne is already using GraphQL-core-next as its GraphQL implementation.</p>\n</li>\n<li>\n<p><a href=\"https://github.com/strawberry-graphql/strawberry\" rel=\"nofollow\">Strawberry</a>, created by Patrick\nArminio, is a new GraphQL library for Python 3, inspired by dataclasses,\nthat is also using GraphQL-core-next as underpinning.</p>\n</li>\n</ul>\n<h2>Changelog</h2>\n<p>Changes are tracked as\n<a href=\"https://github.com/graphql-python/graphql-core-next/releases\" rel=\"nofollow\">GitHub releases</a>.</p>\n<h2>Credits and history</h2>\n<p>The GraphQL-core-next library</p>\n<ul>\n<li>has been created and is maintained by Christoph Zwerschke</li>\n<li>uses ideas and code from GraphQL-core, a prior work by Syrus Akbary</li>\n<li>is a Python port of GraphQL.js which has been developed by Lee Byron and others\nat Facebook, Inc. and is now maintained\nby the <a href=\"https://gql.foundation/join/\" rel=\"nofollow\">GraphQL foundation</a></li>\n</ul>\n<p>Please watch the recording of Lee Byron's short keynote on the\n<a href=\"https://www.youtube.com/watch?v=VjHWkBr3tjI\" rel=\"nofollow\">history of GraphQL</a>\nat the open source leadership summit 2019 to better understand\nhow and why GraphQL was created at Facebook and then became open sourced\nand ported to many different programming languages.</p>\n<h2>License</h2>\n<p>GraphQL-core-next is\n<a href=\"https://github.com/graphql-python/graphql-core-next/blob/master/LICENSE\" rel=\"nofollow\">MIT-licensed</a>,\njust like GraphQL.js.</p>\n\n          </div>"}, "last_serial": 5545923, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "89940aed4d7050d78b6189a0f44e82cf", "sha256": "62ded5cfa50af4e3bfc60dc4483c3b2c61d27fff4217086655a6b2d85393f363"}, "downloads": -1, "filename": "GraphQL_core_next-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "89940aed4d7050d78b6189a0f44e82cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 159888, "upload_time": "2018-09-06T15:54:33", "upload_time_iso_8601": "2018-09-06T15:54:33.667348Z", "url": "https://files.pythonhosted.org/packages/03/9f/97ac2795dce7fe75f851f2495b1b08d989be1c9534bd0a70955b615fc622/GraphQL_core_next-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2b9e96763f7a55698b0ae2997bda72d", "sha256": "2e8f0daa1e1815c2f21f45b662a2a27bb602ca4dd018178b0b948bcf8cc50b25"}, "downloads": -1, "filename": "GraphQL-core-next-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a2b9e96763f7a55698b0ae2997bda72d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 252514, "upload_time": "2018-09-06T15:54:36", "upload_time_iso_8601": "2018-09-06T15:54:36.710894Z", "url": "https://files.pythonhosted.org/packages/b3/cc/7b2dfafe4c880a7a10f90e4933f8a18789a6123eef879e0e3c2f8e654b9b/GraphQL-core-next-1.0.0.tar.gz", "yanked": false}], "1.0.0rc1": [{"comment_text": "", "digests": {"md5": "1a741b7a93f3dc5d4b1f865651f4e76e", "sha256": "c9e8c8df32f358b6f53f6c6809939b0a60971b1b051022cb50547d00085ab71e"}, "downloads": -1, "filename": "GraphQL_core_next-1.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a741b7a93f3dc5d4b1f865651f4e76e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 154702, "upload_time": "2018-08-01T21:33:20", "upload_time_iso_8601": "2018-08-01T21:33:20.470025Z", "url": "https://files.pythonhosted.org/packages/36/2f/34a14a34380090d5e940b87793f0ba19006971a627b7f4d25a993d01217c/GraphQL_core_next-1.0.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34095e7fa7958f5e7673e2fde103ed65", "sha256": "b0f0b9e4605d4bb0056352c1a3f32f9c3ab930addac64b15fee8771e0b67227d"}, "downloads": -1, "filename": "GraphQL-core-next-1.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "34095e7fa7958f5e7673e2fde103ed65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 242543, "upload_time": "2018-08-01T11:48:37", "upload_time_iso_8601": "2018-08-01T11:48:37.987261Z", "url": "https://files.pythonhosted.org/packages/a0/c1/c2ffb77ca3ed471387335ff28e2832f9ed35ef7158dd14557feb72f72873/GraphQL-core-next-1.0.0rc1.tar.gz", "yanked": false}], "1.0.0rc2": [{"comment_text": "", "digests": {"md5": "2c4f07c65f27f1d4ff818cc0a5792cc6", "sha256": "75f613343b7479dd0cb10eff2f498394062d5d5044baf2b81859007263a34d5d"}, "downloads": -1, "filename": "GraphQL_core_next-1.0.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "2c4f07c65f27f1d4ff818cc0a5792cc6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 154700, "upload_time": "2018-08-01T21:37:28", "upload_time_iso_8601": "2018-08-01T21:37:28.560416Z", "url": "https://files.pythonhosted.org/packages/95/b7/fca16e9c2d90346252d3407e52ae0dbf99a5929979f85ff34ea3a2875182/GraphQL_core_next-1.0.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c9478aa66db62ff860766b73dea61d8", "sha256": "7eeff8671f6b1b2197f210c7bd96ae7cd7688ada7edca5fb298ddc0d46dd9331"}, "downloads": -1, "filename": "GraphQL-core-next-1.0.0rc2.tar.gz", "has_sig": false, "md5_digest": "7c9478aa66db62ff860766b73dea61d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 248567, "upload_time": "2018-08-01T21:37:30", "upload_time_iso_8601": "2018-08-01T21:37:30.957988Z", "url": "https://files.pythonhosted.org/packages/24/f9/16af6b56f423d935f6779635c8bd8b32d7ba52ebb945679a2ecb670db2d8/GraphQL-core-next-1.0.0rc2.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "aeaaf199eacb3cebeeff199187beec3c", "sha256": "95509fc50cd632c5b004b959ffc397d47c709ba297162aa841839f610f1a6c70"}, "downloads": -1, "filename": "GraphQL_core_next-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aeaaf199eacb3cebeeff199187beec3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 163557, "upload_time": "2018-10-22T20:29:12", "upload_time_iso_8601": "2018-10-22T20:29:12.065068Z", "url": "https://files.pythonhosted.org/packages/47/df/c9b903e411c70aab82d2896a481da59a8a12c9e72cc04ac009d609fe8e22/GraphQL_core_next-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6362d3329b800140b831ca936b5d58b", "sha256": "e40b5a6cb879fd269f4cfa0db267496273b575a6bfe487dfc46559fa46781c51"}, "downloads": -1, "filename": "GraphQL-core-next-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b6362d3329b800140b831ca936b5d58b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 264923, "upload_time": "2018-10-22T20:29:15", "upload_time_iso_8601": "2018-10-22T20:29:15.668373Z", "url": "https://files.pythonhosted.org/packages/83/6c/ed6ab3cacd5d110396d5b481669b3b6277449a615658298ee6c92115ddac/GraphQL-core-next-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "48e3e8bff6ba269dc6c41ee491215f60", "sha256": "6acc14924c111cb532ae373a6c2d06850ec29d861b8884c86ab2d6f57f0e4c0b"}, "downloads": -1, "filename": "GraphQL_core_next-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "48e3e8bff6ba269dc6c41ee491215f60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 169941, "upload_time": "2019-03-10T21:58:44", "upload_time_iso_8601": "2019-03-10T21:58:44.045816Z", "url": "https://files.pythonhosted.org/packages/41/64/cc955b6ba15dc5d2db71df62f6e7ab406a358f04cee34904925733be1856/GraphQL_core_next-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d8996ef7c0e03888a46c7a181380144", "sha256": "04d34cd701fdc5a51b0bdd33f857f125a73727bc251be35aa08bad2699ee087d"}, "downloads": -1, "filename": "GraphQL-core-next-1.0.2.tar.gz", "has_sig": false, "md5_digest": "8d8996ef7c0e03888a46c7a181380144", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 270955, "upload_time": "2019-03-10T21:58:46", "upload_time_iso_8601": "2019-03-10T21:58:46.705456Z", "url": "https://files.pythonhosted.org/packages/0f/24/0c27eed060d0605521b7b300add420718e86f27156e6317903d68c2205bc/GraphQL-core-next-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "13275481acd33a6a5dc6b6f682e5c0d1", "sha256": "f077b8c945e039239e60afe55342c7fd4e2a2b22ff519a991e912f0535094b5c"}, "downloads": -1, "filename": "GraphQL_core_next-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "13275481acd33a6a5dc6b6f682e5c0d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 171349, "upload_time": "2019-05-03T23:02:14", "upload_time_iso_8601": "2019-05-03T23:02:14.438406Z", "url": "https://files.pythonhosted.org/packages/2d/f7/a36635b28655b41a621ee2d329442536198eb026556e32111e73b728b3c0/GraphQL_core_next-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78a61be550ccf548bc82451dcfa8c5e7", "sha256": "9177ad5d02af6fd1260a2dc63ac1f4c5a86b408fc77db22ba55c30dfc7c1bba4"}, "downloads": -1, "filename": "GraphQL-core-next-1.0.3.tar.gz", "has_sig": false, "md5_digest": "78a61be550ccf548bc82451dcfa8c5e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 273056, "upload_time": "2019-05-03T23:02:17", "upload_time_iso_8601": "2019-05-03T23:02:17.358373Z", "url": "https://files.pythonhosted.org/packages/5c/41/8917c7a18503ed6c2a74a122b6fa2149041c62317aa2c32cd09590345944/GraphQL-core-next-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "a4aad3f0231c773057b30865e899f2f1", "sha256": "078232883ca3d9dcccfcddadd031d393f837fea6170e262892a36f3265ad1177"}, "downloads": -1, "filename": "GraphQL_core_next-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a4aad3f0231c773057b30865e899f2f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 174710, "upload_time": "2019-05-18T17:12:38", "upload_time_iso_8601": "2019-05-18T17:12:38.993445Z", "url": "https://files.pythonhosted.org/packages/1d/81/3822057854c69b4c051992c151d79041550ea862a100889b1d4767fd9bbb/GraphQL_core_next-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6bc84973af024ccf29f0b7c077a6fc87", "sha256": "6da7c218e905d2a57eb920efeaf9dfca632465599371dfaf5fb59623cd84043d"}, "downloads": -1, "filename": "GraphQL-core-next-1.0.4.tar.gz", "has_sig": false, "md5_digest": "6bc84973af024ccf29f0b7c077a6fc87", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 292520, "upload_time": "2019-05-18T17:12:41", "upload_time_iso_8601": "2019-05-18T17:12:41.628861Z", "url": "https://files.pythonhosted.org/packages/30/9f/ff0581abaa55bcda4bb7936d0e06d0132aa0ebe0cb1a1f1336015b23e699/GraphQL-core-next-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "64bd5b6e35b455d7527c80dc4ec38ea2", "sha256": "5a6cdf23a3b24fa738a903b9fcdaa1db2768a6552f8d1fb8fb79d9add16d090d"}, "downloads": -1, "filename": "GraphQL_core_next-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "64bd5b6e35b455d7527c80dc4ec38ea2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 174725, "upload_time": "2019-05-25T14:08:43", "upload_time_iso_8601": "2019-05-25T14:08:43.755501Z", "url": "https://files.pythonhosted.org/packages/55/61/1836ccd1f7ecd12be87bbb5e9c97b313c36e308644ea8fd9708bfc6fc864/GraphQL_core_next-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5930d49eb9abfb8c79c0bae236f1d45c", "sha256": "c663ccc36d9a5ece606b5b4f5509835f0ec8d6e6b941992ced67384edcbfd045"}, "downloads": -1, "filename": "GraphQL-core-next-1.0.5.tar.gz", "has_sig": false, "md5_digest": "5930d49eb9abfb8c79c0bae236f1d45c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 291956, "upload_time": "2019-05-25T14:08:48", "upload_time_iso_8601": "2019-05-25T14:08:48.351692Z", "url": "https://files.pythonhosted.org/packages/62/d1/8ba9bc8d9a549633d902b33ffe99b4830003fcf3cebe6ed2a5f7ab1da809/GraphQL-core-next-1.0.5.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "8e4d743c72f00755b56e125f369d4d40", "sha256": "720b2ebbaa1ce5faa0876e2c2b9a36f77c984b5d5731c9963741bb947cd8ab04"}, "downloads": -1, "filename": "GraphQL_core_next-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8e4d743c72f00755b56e125f369d4d40", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4", "size": 177090, "upload_time": "2019-07-13T19:20:37", "upload_time_iso_8601": "2019-07-13T19:20:37.810887Z", "url": "https://files.pythonhosted.org/packages/bc/a3/9cc4ff674e79d08ab2f57db3a2adeaaf71088845ecf1985b6942c659fca2/GraphQL_core_next-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5785c6049569eea25c418bdd2fbd4ddc", "sha256": "9b6d148280f8f3039bf2ae5e563e941c3d21b783e012209ab8d4cfaa6f206c1b"}, "downloads": -1, "filename": "GraphQL-core-next-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5785c6049569eea25c418bdd2fbd4ddc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 306719, "upload_time": "2019-07-13T19:20:41", "upload_time_iso_8601": "2019-07-13T19:20:41.458173Z", "url": "https://files.pythonhosted.org/packages/29/d7/46b907555628d4a6f481a811b9cb48780109a0222a019dadf06ea251d773/GraphQL-core-next-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "bb5d8145d354dddb0d20c143d314474b", "sha256": "254187ad5f5acdfd521429d87fd3c05896dc1b74ddcb30b1fa37905dc1dc7c13"}, "downloads": -1, "filename": "GraphQL_core_next-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bb5d8145d354dddb0d20c143d314474b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4", "size": 178192, "upload_time": "2019-07-17T13:48:10", "upload_time_iso_8601": "2019-07-17T13:48:10.219193Z", "url": "https://files.pythonhosted.org/packages/fa/63/2bebc0a51568bbc70c36945611c666febf7b90f19b60fa8516ab0a86ecc4/GraphQL_core_next-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2de6923aa6068bd29b704e73559af8fc", "sha256": "76b52e7f654d8fc6abefc8583ebfd869a3939590813110ad27c0c0908b7d0659"}, "downloads": -1, "filename": "GraphQL-core-next-1.1.1.tar.gz", "has_sig": false, "md5_digest": "2de6923aa6068bd29b704e73559af8fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 304076, "upload_time": "2019-07-17T13:48:13", "upload_time_iso_8601": "2019-07-17T13:48:13.871591Z", "url": "https://files.pythonhosted.org/packages/e2/ae/b1fc0f5dc4f0d6ccf4b41f18f5dc031ab2ab9fda07c27550c3fb38173025/GraphQL-core-next-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb5d8145d354dddb0d20c143d314474b", "sha256": "254187ad5f5acdfd521429d87fd3c05896dc1b74ddcb30b1fa37905dc1dc7c13"}, "downloads": -1, "filename": "GraphQL_core_next-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bb5d8145d354dddb0d20c143d314474b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4", "size": 178192, "upload_time": "2019-07-17T13:48:10", "upload_time_iso_8601": "2019-07-17T13:48:10.219193Z", "url": "https://files.pythonhosted.org/packages/fa/63/2bebc0a51568bbc70c36945611c666febf7b90f19b60fa8516ab0a86ecc4/GraphQL_core_next-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2de6923aa6068bd29b704e73559af8fc", "sha256": "76b52e7f654d8fc6abefc8583ebfd869a3939590813110ad27c0c0908b7d0659"}, "downloads": -1, "filename": "GraphQL-core-next-1.1.1.tar.gz", "has_sig": false, "md5_digest": "2de6923aa6068bd29b704e73559af8fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 304076, "upload_time": "2019-07-17T13:48:13", "upload_time_iso_8601": "2019-07-17T13:48:13.871591Z", "url": "https://files.pythonhosted.org/packages/e2/ae/b1fc0f5dc4f0d6ccf4b41f18f5dc031ab2ab9fda07c27550c3fb38173025/GraphQL-core-next-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:33 2020"}