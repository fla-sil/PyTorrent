{"info": {"author": "Max Payne", "author_email": "forgge@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "theCore embedded framework CLI tools\n====================================\n\n.. image:: https://travis-ci.org/theCore-embedded/tcore_cli.svg?branch=master\n    :target: https://travis-ci.org/theCore-embedded/tcore_cli\n\nUsage:\n\n::\n\n    usage: tcore [-h] {bootstrap,purge,init,fetch,compile,flash,runenv} ...\n\n    theCore framework CLI\n\n    positional arguments:\n      {bootstrap,purge,init,fetch,compile,flash,runenv}\n                            theCore subcommands\n        bootstrap           Installs theCore development environment\n        purge               Deletes theCore development environment\n        init                Initialize project based on theCore\n        fetch               Fetches given theCore revision, globally changing its\n                            state. Such change will be visible for every theCore-\n                            based project of current user\n        compile             Build project\n        flash               flash project on the target\n        runenv              Run arbitrary command inside theCore environment\n\n    optional arguments:\n      -h, --help            show this help message and exit\n\nBoostrap theCore\n----------------\n\n::\n\n    usage: tcore bootstrap [-h] [-f]\n\n    optional arguments:\n      -h, --help   show this help message and exit\n      -f, --force  Force (re)install theCore dev environment\n\nPurge theCore\n-------------\n\n::\n\n    usage: tcore purge [-h]\n\n    optional arguments:\n      -h, --help  show this help message and exit\n\nFetch theCore\n-------------\n\n::\n\n   usage: tcore fetch [-h] [-r REMOTE] [-e REF]\n\n   optional arguments:\n     -h, --help            show this help message and exit\n     -r REMOTE, --remote REMOTE\n                           Git remote to fetch theCore, defaults to `upstream`\n     -e REF, --ref REF     Optional Git reference: commit id, branch or tag. If\n                           not given, `develop` branch will be used.\n\nInitialize project\n------------------\n\n::\n\n    usage: tcore init [-h] [-r REMOTE] [-o OUTDIR]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -r REMOTE, --remote REMOTE\n                            Git remote to download project from\n      -o OUTDIR, --outdir OUTDIR\n                            Output directory to place a project in\n\nCompile project\n---------------\n\n::\n\n    usage: tcore compile [-h] [-s SOURCE] [-b BUILDDIR]\n                         [--buildtype {debug,release,min_size,none}] [-t TARGET]\n                         [-j JOBS] [-l] [-c]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -s SOURCE, --source SOURCE\n                            Path to the source code. Defaults to current\n                            directory.\n      -b BUILDDIR, --builddir BUILDDIR\n                            Path to the build directory. Defaults to\n                            ./build/<target_name>-<build_type>, where\n                            <target_name> is the selected target and <build_type>\n                            is a build type supplied with --buildtype parameter\n      --buildtype {debug,release,min_size,none}\n                            Build type. Default is none\n      -t TARGET, --target TARGET\n                            Target name to compile for\n      -j JOBS, --jobs JOBS  Specifies the number of `make` jobs (commands) to run\n                            simultaneously. Default is 1.\n      -l, --list-targets    List supported targets\n      -c, --clean           Clean build\n\nFlash binary\n------------\n\n::\n\n    usage: tcore flash [-h] [-s SOURCE] [-b BUILDDIR] [-l] [-d DEBUGGER]\n                       [-c DEBUGGER_CONFIG] [-u]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -s SOURCE, --source SOURCE\n                            Path to the source code. Defaults to current\n                            directory.\n      -b BUILDDIR, --builddir BUILDDIR\n                            Explicit path to the build directory where binary\n                            files are placed. By default the `build` directory and\n                            subdirectories are scanned for binaries.\n      -l, --list-bin        List built binaries and avaliable debuggers to perform\n                            flash operation\n      -d DEBUGGER, --debugger DEBUGGER\n                            Use debugger to perform flash. By default the first\n                            supported debugger in meta.json is used\n      -c DEBUGGER_CONFIG, --debugger-config DEBUGGER_CONFIG\n                            Specify debugger configuration. For example, different\n                            configurations can represent different debugger\n                            versions. By default, first suitable debugger\n                            configuration, defined in meta.json, will be used\n      -u, --sudo            Run flash command with root privileges using sudo.\n\nRun custom command within theCore environment\n---------------------------------------------\n\n::\n\n    usage: tcore runenv [-h] [-s] command [command ...]\n\n    positional arguments:\n      command     Command to execute.\n\n    optional arguments:\n      -h, --help  show this help message and exit\n      -s, --sudo  Run command with root privileges using sudo.\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/theCore-embedded/tcore_cli/archive/v0.2.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/theCore-embedded/tcore_cli", "keywords": "embedded", "license": "MPL", "maintainer": "", "maintainer_email": "", "name": "tcore", "package_url": "https://pypi.org/project/tcore/", "platform": "", "project_url": "https://pypi.org/project/tcore/", "project_urls": {"Download": "https://github.com/theCore-embedded/tcore_cli/archive/v0.2.3.tar.gz", "Homepage": "https://github.com/theCore-embedded/tcore_cli"}, "release_url": "https://pypi.org/project/tcore/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "theCore C++ embedded framework CLI tools", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/theCore-embedded/tcore_cli\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/theCore-embedded/tcore_cli.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d29cd20c38adca09a828a6a5ffbb96698b55637/68747470733a2f2f7472617669732d63692e6f72672f746865436f72652d656d6265646465642f74636f72655f636c692e7376673f6272616e63683d6d6173746572\"></a>\n<p>Usage:</p>\n<pre>usage: tcore [-h] {bootstrap,purge,init,fetch,compile,flash,runenv} ...\n\ntheCore framework CLI\n\npositional arguments:\n  {bootstrap,purge,init,fetch,compile,flash,runenv}\n                        theCore subcommands\n    bootstrap           Installs theCore development environment\n    purge               Deletes theCore development environment\n    init                Initialize project based on theCore\n    fetch               Fetches given theCore revision, globally changing its\n                        state. Such change will be visible for every theCore-\n                        based project of current user\n    compile             Build project\n    flash               flash project on the target\n    runenv              Run arbitrary command inside theCore environment\n\noptional arguments:\n  -h, --help            show this help message and exit\n</pre>\n<div id=\"boostrap-thecore\">\n<h2>Boostrap theCore</h2>\n<pre>usage: tcore bootstrap [-h] [-f]\n\noptional arguments:\n  -h, --help   show this help message and exit\n  -f, --force  Force (re)install theCore dev environment\n</pre>\n</div>\n<div id=\"purge-thecore\">\n<h2>Purge theCore</h2>\n<pre>usage: tcore purge [-h]\n\noptional arguments:\n  -h, --help  show this help message and exit\n</pre>\n</div>\n<div id=\"fetch-thecore\">\n<h2>Fetch theCore</h2>\n<pre>usage: tcore fetch [-h] [-r REMOTE] [-e REF]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REMOTE, --remote REMOTE\n                        Git remote to fetch theCore, defaults to `upstream`\n  -e REF, --ref REF     Optional Git reference: commit id, branch or tag. If\n                        not given, `develop` branch will be used.\n</pre>\n</div>\n<div id=\"initialize-project\">\n<h2>Initialize project</h2>\n<pre>usage: tcore init [-h] [-r REMOTE] [-o OUTDIR]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r REMOTE, --remote REMOTE\n                        Git remote to download project from\n  -o OUTDIR, --outdir OUTDIR\n                        Output directory to place a project in\n</pre>\n</div>\n<div id=\"compile-project\">\n<h2>Compile project</h2>\n<pre>usage: tcore compile [-h] [-s SOURCE] [-b BUILDDIR]\n                     [--buildtype {debug,release,min_size,none}] [-t TARGET]\n                     [-j JOBS] [-l] [-c]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        Path to the source code. Defaults to current\n                        directory.\n  -b BUILDDIR, --builddir BUILDDIR\n                        Path to the build directory. Defaults to\n                        ./build/&lt;target_name&gt;-&lt;build_type&gt;, where\n                        &lt;target_name&gt; is the selected target and &lt;build_type&gt;\n                        is a build type supplied with --buildtype parameter\n  --buildtype {debug,release,min_size,none}\n                        Build type. Default is none\n  -t TARGET, --target TARGET\n                        Target name to compile for\n  -j JOBS, --jobs JOBS  Specifies the number of `make` jobs (commands) to run\n                        simultaneously. Default is 1.\n  -l, --list-targets    List supported targets\n  -c, --clean           Clean build\n</pre>\n</div>\n<div id=\"flash-binary\">\n<h2>Flash binary</h2>\n<pre>usage: tcore flash [-h] [-s SOURCE] [-b BUILDDIR] [-l] [-d DEBUGGER]\n                   [-c DEBUGGER_CONFIG] [-u]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        Path to the source code. Defaults to current\n                        directory.\n  -b BUILDDIR, --builddir BUILDDIR\n                        Explicit path to the build directory where binary\n                        files are placed. By default the `build` directory and\n                        subdirectories are scanned for binaries.\n  -l, --list-bin        List built binaries and avaliable debuggers to perform\n                        flash operation\n  -d DEBUGGER, --debugger DEBUGGER\n                        Use debugger to perform flash. By default the first\n                        supported debugger in meta.json is used\n  -c DEBUGGER_CONFIG, --debugger-config DEBUGGER_CONFIG\n                        Specify debugger configuration. For example, different\n                        configurations can represent different debugger\n                        versions. By default, first suitable debugger\n                        configuration, defined in meta.json, will be used\n  -u, --sudo            Run flash command with root privileges using sudo.\n</pre>\n</div>\n<div id=\"run-custom-command-within-thecore-environment\">\n<h2>Run custom command within theCore environment</h2>\n<pre>usage: tcore runenv [-h] [-s] command [command ...]\n\npositional arguments:\n  command     Command to execute.\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -s, --sudo  Run command with root privileges using sudo.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4020739, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "73e19abd112d64cc46eb8bf20bb4c876", "sha256": "7bf87d5253903ca7814581ff569c7bf23cf4f83be98ae28a33333251d267becf"}, "downloads": -1, "filename": "tcore-0.0.3.tar.gz", "has_sig": false, "md5_digest": "73e19abd112d64cc46eb8bf20bb4c876", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8379, "upload_time": "2018-05-01T20:40:18", "upload_time_iso_8601": "2018-05-01T20:40:18.968826Z", "url": "https://files.pythonhosted.org/packages/90/1d/73f180d35be74920b81f23507496c3afa2ecbdfb1fad002fff94226e8b81/tcore-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b55f19df9601252c0b7862331a7830f9", "sha256": "81c649866b8066e843587be24710945a6c9ddc84353981c5d4a82ed3e9a9f9d3"}, "downloads": -1, "filename": "tcore-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b55f19df9601252c0b7862331a7830f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5193, "upload_time": "2018-04-27T13:06:31", "upload_time_iso_8601": "2018-04-27T13:06:31.388606Z", "url": "https://files.pythonhosted.org/packages/c8/16/335f4f898631829bde7a036cbd9b9effc629feb62498308a6d8da12a8dd3/tcore-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "2b906efce61bf2d4781d6ddb4c937ef7", "sha256": "9246e8c69f31800c09894d59cc4cf74b6c77a3445d5da4dc2ae41eeb94e320d1"}, "downloads": -1, "filename": "tcore-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2b906efce61bf2d4781d6ddb4c937ef7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8382, "upload_time": "2018-05-01T20:44:06", "upload_time_iso_8601": "2018-05-01T20:44:06.674536Z", "url": "https://files.pythonhosted.org/packages/73/f3/8d45311380189566a98bdfa425a1c6a0c1fea6eaf8485426e22ae032671d/tcore-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c0fb049e700ff1c0aa894b8b622876e1", "sha256": "185adb677205419c835ec6043b923ac7c38b459c024328f0ff6f0ecc16465ad4"}, "downloads": -1, "filename": "tcore-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c0fb049e700ff1c0aa894b8b622876e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8861, "upload_time": "2018-05-12T22:20:20", "upload_time_iso_8601": "2018-05-12T22:20:20.507995Z", "url": "https://files.pythonhosted.org/packages/7a/18/423a0b0ca7ad7ab6da83aba9d9bd9698362cf8f4f77e6a3b06f3f082046b/tcore-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ee7463a67bf1b6ce865cdb7439448703", "sha256": "86b325aca2acbb2e862197429959297c903a2e06e36cf88114997b387ba255a1"}, "downloads": -1, "filename": "tcore-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ee7463a67bf1b6ce865cdb7439448703", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8838, "upload_time": "2018-05-16T21:31:46", "upload_time_iso_8601": "2018-05-16T21:31:46.411446Z", "url": "https://files.pythonhosted.org/packages/b5/13/e9d5409ee01c425f8d536fee4314d108232c184b595bd8f54749e07f50db/tcore-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0e0590f372cc745a5e4dafde74bd44ca", "sha256": "cdeee02d3696690eb588256701b4491fd76c1e4b5af8f0d4303785bd254280fa"}, "downloads": -1, "filename": "tcore-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0e0590f372cc745a5e4dafde74bd44ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27138, "upload_time": "2018-06-23T16:18:56", "upload_time_iso_8601": "2018-06-23T16:18:56.177939Z", "url": "https://files.pythonhosted.org/packages/db/da/703e234e93ffb86bec7597df4d35a887ffe9eaccd17a4141f5dde64a0f89/tcore-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "51783cdbf621e459fb402daf91468223", "sha256": "88b72d753aa0512b70f407fdcfe88230c8e033c9713436c376e74c7ed71fe945"}, "downloads": -1, "filename": "tcore-0.2.1.tar.gz", "has_sig": false, "md5_digest": "51783cdbf621e459fb402daf91468223", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27477, "upload_time": "2018-06-30T17:10:33", "upload_time_iso_8601": "2018-06-30T17:10:33.849318Z", "url": "https://files.pythonhosted.org/packages/f8/7e/3da63805114c7623f98e832eaf1267c167627a72afd963f255b89249b599/tcore-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "fb3626f732459642ea038981be21c1d5", "sha256": "e7ce7db8480dba33e9c5576bde3b7530f28daed20318f539bb5351d8aa3ea44a"}, "downloads": -1, "filename": "tcore-0.2.2.tar.gz", "has_sig": false, "md5_digest": "fb3626f732459642ea038981be21c1d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27497, "upload_time": "2018-07-01T11:46:27", "upload_time_iso_8601": "2018-07-01T11:46:27.246072Z", "url": "https://files.pythonhosted.org/packages/ba/20/5b20e539789fe0c6e546223cead2506007c4aae8f2632fd670f3ada0a1de/tcore-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "379c12323883b61a1d992370138eb660", "sha256": "0602eba463b451f64b16616d1652f9d15202ea673638da78905fbef79bc2ef36"}, "downloads": -1, "filename": "tcore-0.2.3.tar.gz", "has_sig": false, "md5_digest": "379c12323883b61a1d992370138eb660", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27598, "upload_time": "2018-07-01T19:03:36", "upload_time_iso_8601": "2018-07-01T19:03:36.188568Z", "url": "https://files.pythonhosted.org/packages/6e/7b/25a72f0921c0e2ddd15fcb7ca632161989d306db3dc46416740892d54c11/tcore-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "379c12323883b61a1d992370138eb660", "sha256": "0602eba463b451f64b16616d1652f9d15202ea673638da78905fbef79bc2ef36"}, "downloads": -1, "filename": "tcore-0.2.3.tar.gz", "has_sig": false, "md5_digest": "379c12323883b61a1d992370138eb660", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27598, "upload_time": "2018-07-01T19:03:36", "upload_time_iso_8601": "2018-07-01T19:03:36.188568Z", "url": "https://files.pythonhosted.org/packages/6e/7b/25a72f0921c0e2ddd15fcb7ca632161989d306db3dc46416740892d54c11/tcore-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:19 2020"}