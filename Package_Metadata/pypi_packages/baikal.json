{"info": {"author": "Alejandro Gonz\u00e1lez Tineo", "author_email": "alejandrojgt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "\n**baikal is a graph-based, functional API for building complex machine learning \npipelines of objects that implement the scikit-learn API**. It is mostly inspired \non the excellent `Keras <https://keras.io>`__ API for Deep Learning, and borrows \na  few concepts from the `TensorFlow <https://www.tensorflow.org>`__ framework \nand the (perhaps lesser known) `graphkit <https://github.com/yahoo/graphkit>`__\npackage.\n\n**baikal** aims to provide an API that allows to build complex, non-linear \nmachine learning pipelines that looks like this: \n\n.. image:: https://raw.githubusercontent.com/alegonz/baikal/master/illustrations/multiple_input_nonlinear_pipeline_example_diagram.png\n\nwith code that looks like this:\n\n.. code-block:: python\n\n    x1 = Input()\n    x2 = Input()\n    y_t = Input()\n\n    y1 = ExtraTreesClassifier()(x1, y_t)\n    y2 = RandomForestClassifier()(x2, y_t)\n    z = PowerTransformer()(x2)\n    z = PCA()(z)\n    y3 = LogisticRegression()(z, y_t)\n\n    stacked_features = Stack()([y1, y2, y3])\n    y = SVC()(stacked_features, y_t)\n\n    model = Model([x1, x2], y, y_t)\n\n**baikal** is compatible with Python >=3.5 and is distributed under the \nBSD 3-clause license.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alegonz/baikal", "keywords": "", "license": "new BSD", "maintainer": "", "maintainer_email": "", "name": "baikal", "package_url": "https://pypi.org/project/baikal/", "platform": "", "project_url": "https://pypi.org/project/baikal/", "project_urls": {"Homepage": "https://github.com/alegonz/baikal"}, "release_url": "https://pypi.org/project/baikal/0.3.1/", "requires_dist": ["numpy", "codecov ; extra == 'dev'", "joblib ; extra == 'dev'", "mypy ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "scikit-learn ; extra == 'dev'", "pydot ; extra == 'viz'"], "requires_python": ">=3.5", "summary": "A graph-based functional API for building complex scikit-learn pipelines.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>baikal is a graph-based, functional API for building complex machine learning\npipelines of objects that implement the scikit-learn API</strong>. It is mostly inspired\non the excellent <a href=\"https://keras.io\" rel=\"nofollow\">Keras</a> API for Deep Learning, and borrows\na  few concepts from the <a href=\"https://www.tensorflow.org\" rel=\"nofollow\">TensorFlow</a> framework\nand the (perhaps lesser known) <a href=\"https://github.com/yahoo/graphkit\" rel=\"nofollow\">graphkit</a>\npackage.</p>\n<p><strong>baikal</strong> aims to provide an API that allows to build complex, non-linear\nmachine learning pipelines that looks like this:</p>\n<img alt=\"https://raw.githubusercontent.com/alegonz/baikal/master/illustrations/multiple_input_nonlinear_pipeline_example_diagram.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd8a384f6112baecdb18eb06efee0a868a028e1e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616c65676f6e7a2f6261696b616c2f6d61737465722f696c6c757374726174696f6e732f6d756c7469706c655f696e7075745f6e6f6e6c696e6561725f706970656c696e655f6578616d706c655f6469616772616d2e706e67\">\n<p>with code that looks like this:</p>\n<pre><span class=\"n\">x1</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">()</span>\n<span class=\"n\">x2</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">()</span>\n<span class=\"n\">y_t</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">()</span>\n\n<span class=\"n\">y1</span> <span class=\"o\">=</span> <span class=\"n\">ExtraTreesClassifier</span><span class=\"p\">()(</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">y_t</span><span class=\"p\">)</span>\n<span class=\"n\">y2</span> <span class=\"o\">=</span> <span class=\"n\">RandomForestClassifier</span><span class=\"p\">()(</span><span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y_t</span><span class=\"p\">)</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">PowerTransformer</span><span class=\"p\">()(</span><span class=\"n\">x2</span><span class=\"p\">)</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">PCA</span><span class=\"p\">()(</span><span class=\"n\">z</span><span class=\"p\">)</span>\n<span class=\"n\">y3</span> <span class=\"o\">=</span> <span class=\"n\">LogisticRegression</span><span class=\"p\">()(</span><span class=\"n\">z</span><span class=\"p\">,</span> <span class=\"n\">y_t</span><span class=\"p\">)</span>\n\n<span class=\"n\">stacked_features</span> <span class=\"o\">=</span> <span class=\"n\">Stack</span><span class=\"p\">()([</span><span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"n\">y2</span><span class=\"p\">,</span> <span class=\"n\">y3</span><span class=\"p\">])</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">SVC</span><span class=\"p\">()(</span><span class=\"n\">stacked_features</span><span class=\"p\">,</span> <span class=\"n\">y_t</span><span class=\"p\">)</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">([</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">],</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">y_t</span><span class=\"p\">)</span>\n</pre>\n<p><strong>baikal</strong> is compatible with Python &gt;=3.5 and is distributed under the\nBSD 3-clause license.</p>\n\n          </div>"}, "last_serial": 7102295, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8076ffe9abf493daae32200c742d9940", "sha256": "c9529ad688e002e7da90ee91676a230c99968826b9989940ff589498316543a8"}, "downloads": -1, "filename": "baikal-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8076ffe9abf493daae32200c742d9940", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19568, "upload_time": "2019-06-01T02:09:30", "upload_time_iso_8601": "2019-06-01T02:09:30.831864Z", "url": "https://files.pythonhosted.org/packages/75/9f/f1eb85dc5e9e72b7942ad761278aa1968c94799099e2b9d6ec277c762e63/baikal-0.1.0-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "38943fac207f544ad6cddbbdb4e3e977", "sha256": "72152eeca8bd14655fd00a9a711e91c79586edd228ef6f67bc5d9a18488e668e"}, "downloads": -1, "filename": "baikal-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "38943fac207f544ad6cddbbdb4e3e977", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 22425, "upload_time": "2019-11-16T15:25:46", "upload_time_iso_8601": "2019-11-16T15:25:46.113944Z", "url": "https://files.pythonhosted.org/packages/16/cc/e2f7e4a6ca59549250b16d8d0daf249b61014e912be428834850542ca85f/baikal-0.2.0-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4fc1df00cdd7e351da7ed46e64d6d381", "sha256": "dc657c0dbe3e14756414d37eed7b647bf38cb2ee45550a910797bb5dd80c2620"}, "downloads": -1, "filename": "baikal-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4fc1df00cdd7e351da7ed46e64d6d381", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 26802, "upload_time": "2020-02-23T08:04:50", "upload_time_iso_8601": "2020-02-23T08:04:50.204502Z", "url": "https://files.pythonhosted.org/packages/ab/a9/a4894b730357aca2ae5cb1f7f24be8c5a86bd08e4e5c07cb84b2caa47f01/baikal-0.3.0-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "c8f465af51159c7f81d464d1ede4befd", "sha256": "ddec8737eccfc72f6d6919a1a0bb200d9b3df2ff5bf477fa895ba9182a16bd21"}, "downloads": -1, "filename": "baikal-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c8f465af51159c7f81d464d1ede4befd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 26916, "upload_time": "2020-04-26T02:23:01", "upload_time_iso_8601": "2020-04-26T02:23:01.937548Z", "url": "https://files.pythonhosted.org/packages/a1/da/6f74bbea98af9f70e54416e5cab6f7c4bfe22208e3297d1ee19cbf01cf37/baikal-0.3.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8f465af51159c7f81d464d1ede4befd", "sha256": "ddec8737eccfc72f6d6919a1a0bb200d9b3df2ff5bf477fa895ba9182a16bd21"}, "downloads": -1, "filename": "baikal-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c8f465af51159c7f81d464d1ede4befd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 26916, "upload_time": "2020-04-26T02:23:01", "upload_time_iso_8601": "2020-04-26T02:23:01.937548Z", "url": "https://files.pythonhosted.org/packages/a1/da/6f74bbea98af9f70e54416e5cab6f7c4bfe22208e3297d1ee19cbf01cf37/baikal-0.3.1-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:15:02 2020"}