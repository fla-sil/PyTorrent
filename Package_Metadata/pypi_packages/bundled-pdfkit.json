{"info": {"author": "Golovanov Stanislav", "author_email": "stgolovanov@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Topic :: Text Processing", "Topic :: Text Processing :: General", "Topic :: Text Processing :: Markup", "Topic :: Text Processing :: Markup :: HTML", "Topic :: Text Processing :: Markup :: XML", "Topic :: Utilities"], "description": "Bundled-Python-PDFKit\n=====================\n\nThis is Python-PDFKit bundled with wkhtmltopdf, so you don't have to install it separately. Only works\non Gnu/Linux. Only tested on Debian. WKHTMLtoPDF is installed in your virtualenv, so it won't be available\nsystem-wide.\n\nTo update the version of wkhtml... in this package, run the :code:`bundle.sh` script (change the version in\n it first).\n\nPython-PDFKit: HTML to PDF wrapper\n==================================\n\n\n.. image:: https://travis-ci.org/JazzCore/python-pdfkit.png?branch=master\n        :target: https://travis-ci.org/JazzCore/python-pdfkit\n\n.. image:: https://badge.fury.io/py/pdfkit.svg\n        :target: http://badge.fury.io/py/pdfkit\n\nPython 2 and 3 wrapper for wkhtmltopdf utility to convert HTML to PDF using Webkit.\n\nThis is adapted version of `ruby PDFKit <https://github.com/pdfkit/pdfkit>`_ library, so big thanks to them!\n\nInstallation\n------------\n\n1. Install python-pdfkit::\n\n\t$ pip install bundled-pdfkit  (or pip3 for python3)\n\n2. Install wkhtmltopdf (no need to do that):\n\n* Debian/Ubuntu::\n\n\t$ sudo apt-get install wkhtmltopdf\n\t\n* macOS::\n\n\t$ brew install caskroom/cask/wkhtmltopdf\n\n**Warning!** Version in debian/ubuntu repos have reduced functionality (because it compiled without the wkhtmltopdf QT patches), such as adding outlines, headers, footers, TOC etc. To use this options you should install static binary from `wkhtmltopdf <http://wkhtmltopdf.org/>`_ site or you can use `this script <https://github.com/JazzCore/python-pdfkit/blob/master/travis/before-script.sh>`_.\n\n* Windows and other options: check wkhtmltopdf `homepage <http://wkhtmltopdf.org/>`_ for binary installers\n\nUsage\n-----\n\nFor simple tasks::\n\n\timport pdfkit\n\n\tpdfkit.from_url('http://google.com', 'out.pdf')\n\tpdfkit.from_file('test.html', 'out.pdf')\n\tpdfkit.from_string('Hello!', 'out.pdf')\n\nYou can pass a list with multiple URLs or files::\n\n\tpdfkit.from_url(['google.com', 'yandex.ru', 'engadget.com'], 'out.pdf')\n\tpdfkit.from_file(['file1.html', 'file2.html'], 'out.pdf')\n\nAlso you can pass an opened file::\n\n    with open('file.html') as f:\n        pdfkit.from_file(f, 'out.pdf')\n\nIf you wish to further process generated PDF, you can read it to a variable::\n\n    # Use False instead of output path to save pdf to a variable\n    pdf = pdfkit.from_url('http://google.com', False)\n\nYou can specify all wkhtmltopdf `options <http://wkhtmltopdf.org/usage/wkhtmltopdf.txt>`_. You can drop '--' in option name. If option without value, use *None, False* or *''* for dict value:. For repeatable options (incl. allow, cookie, custom-header, post, postfile, run-script, replace) you may use a list or a tuple. With option that need multiple values (e.g. --custom-header Authorization secret) we may use a 2-tuple (see example below).\n\n::\n\n\toptions = {\n\t    'page-size': 'Letter',\n\t    'margin-top': '0.75in',\n\t    'margin-right': '0.75in',\n\t    'margin-bottom': '0.75in',\n\t    'margin-left': '0.75in',\n\t    'encoding': \"UTF-8\",\n\t    'custom-header' : [\n\t    \t('Accept-Encoding', 'gzip')\n\t    ]\n\t    'cookie': [\n\t    \t('cookie-name1', 'cookie-value1'),\n\t    \t('cookie-name2', 'cookie-value2'),\n\t    ],\n\t    'no-outline': None\n\t}\n\n\tpdfkit.from_url('http://google.com', 'out.pdf', options=options)\n\nBy default, PDFKit will show all ``wkhtmltopdf`` output. If you don't want it, you need to pass ``quiet`` option::\n\n    options = {\n        'quiet': ''\n        }\n\n    pdfkit.from_url('google.com', 'out.pdf', options=options)\n\nDue to wkhtmltopdf command syntax, **TOC** and **Cover** options must be specified separately. If you need cover before TOC, use ``cover_first`` option::\n\n\ttoc = {\n\t    'xsl-style-sheet': 'toc.xsl'\n\t}\n\n\tcover = 'cover.html'\n\n\tpdfkit.from_file('file.html', options=options, toc=toc, cover=cover)\n\tpdfkit.from_file('file.html', options=options, toc=toc, cover=cover, cover_first=True)\n\nYou can specify external CSS files when converting files or strings using *css* option.\n\n**Warning** This is a workaround for `this bug <http://code.google.com/p/wkhtmltopdf/issues/detail?id=144>`_ in wkhtmltopdf. You should try *--user-style-sheet* option first.\n\n::\n\n    # Single CSS file\n    css = 'example.css'\n    pdfkit.from_file('file.html', options=options, css=css)\n\n    # Multiple CSS files\n    css = ['example.css', 'example2.css']\n    pdfkit.from_file('file.html', options=options, css=css)\n\nYou can also pass any options through meta tags in your HTML::\n\n\tbody = \"\"\"\n\t    <html>\n\t      <head>\n\t        <meta name=\"pdfkit-page-size\" content=\"Legal\"/>\n\t        <meta name=\"pdfkit-orientation\" content=\"Landscape\"/>\n\t      </head>\n\t      Hello World!\n\t      </html>\n\t    \"\"\"\n\n\tpdfkit.from_string(body, 'out.pdf') #with --page-size=Legal and --orientation=Landscape\n\nConfiguration\n-------------\n\nEach API call takes an optional configuration paramater. This should be an instance of ``pdfkit.configuration()`` API call. It takes the configuration options as initial paramaters. The available options are:\n\n* ``wkhtmltopdf`` - the location of the ``wkhtmltopdf`` binary. By default ``pdfkit`` will attempt to locate this using ``which`` (on UNIX type systems) or ``where`` (on Windows).\n* ``meta_tag_prefix`` - the prefix for ``pdfkit`` specific meta tags - by default this is ``pdfkit-``\n\nExample - for when ``wkhtmltopdf`` is not on ``$PATH``::\n\n    config = pdfkit.configuration(wkhtmltopdf='/opt/bin/wkhtmltopdf')\n    pdfkit.from_string(html_string, output_file, configuration=config)\n\n\nTroubleshooting\n---------------\n\n- ``IOError: 'No wkhtmltopdf executable found'``:\n\n  Make sure that you have wkhtmltopdf in your `$PATH` or set via custom configuration (see preceding section). *where wkhtmltopdf* in Windows or *which wkhtmltopdf* on Linux should return actual path to binary.\n\n- ``IOError: 'Command Failed'``\n\n  This error means that PDFKit was unable to process an input. You can try to directly run a command from error message and see what error caused failure (on some wkhtmltopdf versions this can be cause by segmentation faults)\n\n\nChangelog\n---------\n* `0.6.1`\n    * Fix regression on python 3+ when trying to decode pdf output\n* `0.6.0`\n    * Support repeatable options\n    * Support multiple values for some options\n    * Fix some corner cases when specific argument order is required\n    * Some Python 3+ compatibility fixes\n    * Update README\n* `0.5.0`\n    * Allow passing multiple css files\n    * Fix problems with external file encodings\n    * Rise an error when X server is missing on \\*nix systems\n    * Fix tests that was broken with latest wkhtmltopdf release\n    * Update README\n* `0.4.1`\n    * More easier custom configuration setting\n    * Update README\n* `0.4.0`\n    * Allow passing file-like objects\n    * Ability to return PDF as a string\n    * Allow user specification of configuration\n    * API calls now returns True on success\n    * bugfixes\n* `0.3.0`\n    * Python 3 support\n* `0.2.4`\n    * Add History\n    * Update setup.py\n* `0.2.3`\n    * Fix installing with setup.py\n    * Update README", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/mpnowacki/python-pdfkit", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bundled-pdfkit", "package_url": "https://pypi.org/project/bundled-pdfkit/", "platform": "", "project_url": "https://pypi.org/project/bundled-pdfkit/", "project_urls": {"Download": "https://github.com/mpnowacki/python-pdfkit"}, "release_url": "https://pypi.org/project/bundled-pdfkit/0.6.1/", "requires_dist": null, "requires_python": "", "summary": "Wkhtmltopdf python wrapper to convert html to pdf using the webkit rendering engine and qt", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"bundled-python-pdfkit\">\n<h2>Bundled-Python-PDFKit</h2>\n<p>This is Python-PDFKit bundled with wkhtmltopdf, so you don\u2019t have to install it separately. Only works\non Gnu/Linux. Only tested on Debian. WKHTMLtoPDF is installed in your virtualenv, so it won\u2019t be available\nsystem-wide.</p>\n<dl>\n<dt>To update the version of wkhtml\u2026 in this package, run the <code>bundle.sh</code> script (change the version in</dt>\n<dd>it first).</dd>\n</dl>\n</div>\n<div id=\"python-pdfkit-html-to-pdf-wrapper\">\n<h2>Python-PDFKit: HTML to PDF wrapper</h2>\n<a href=\"https://travis-ci.org/JazzCore/python-pdfkit\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/JazzCore/python-pdfkit.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1aa04221ae41672bc3865b32a91d6b9fbb4fa234/68747470733a2f2f7472617669732d63692e6f72672f4a617a7a436f72652f707974686f6e2d7064666b69742e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://badge.fury.io/py/pdfkit\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pdfkit.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75adcaf4ddb02e4ca98a36b3ba4a3bf5e47f258c/68747470733a2f2f62616467652e667572792e696f2f70792f7064666b69742e737667\"></a>\n<p>Python 2 and 3 wrapper for wkhtmltopdf utility to convert HTML to PDF using Webkit.</p>\n<p>This is adapted version of <a href=\"https://github.com/pdfkit/pdfkit\" rel=\"nofollow\">ruby PDFKit</a> library, so big thanks to them!</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<ol>\n<li><p>Install python-pdfkit:</p>\n<pre>$ pip install bundled-pdfkit  (or pip3 for python3)\n</pre>\n</li>\n<li><p>Install wkhtmltopdf (no need to do that):</p>\n</li>\n</ol>\n<ul>\n<li><p>Debian/Ubuntu:</p>\n<pre>$ sudo apt-get install wkhtmltopdf\n</pre>\n</li>\n<li><p>macOS:</p>\n<pre>$ brew install caskroom/cask/wkhtmltopdf\n</pre>\n</li>\n</ul>\n<p><strong>Warning!</strong> Version in debian/ubuntu repos have reduced functionality (because it compiled without the wkhtmltopdf QT patches), such as adding outlines, headers, footers, TOC etc. To use this options you should install static binary from <a href=\"http://wkhtmltopdf.org/\" rel=\"nofollow\">wkhtmltopdf</a> site or you can use <a href=\"https://github.com/JazzCore/python-pdfkit/blob/master/travis/before-script.sh\" rel=\"nofollow\">this script</a>.</p>\n<ul>\n<li>Windows and other options: check wkhtmltopdf <a href=\"http://wkhtmltopdf.org/\" rel=\"nofollow\">homepage</a> for binary installers</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>For simple tasks:</p>\n<pre>import pdfkit\n\npdfkit.from_url('http://google.com', 'out.pdf')\npdfkit.from_file('test.html', 'out.pdf')\npdfkit.from_string('Hello!', 'out.pdf')\n</pre>\n<p>You can pass a list with multiple URLs or files:</p>\n<pre>pdfkit.from_url(['google.com', 'yandex.ru', 'engadget.com'], 'out.pdf')\npdfkit.from_file(['file1.html', 'file2.html'], 'out.pdf')\n</pre>\n<p>Also you can pass an opened file:</p>\n<pre>with open('file.html') as f:\n    pdfkit.from_file(f, 'out.pdf')\n</pre>\n<p>If you wish to further process generated PDF, you can read it to a variable:</p>\n<pre># Use False instead of output path to save pdf to a variable\npdf = pdfkit.from_url('http://google.com', False)\n</pre>\n<p>You can specify all wkhtmltopdf <a href=\"http://wkhtmltopdf.org/usage/wkhtmltopdf.txt\" rel=\"nofollow\">options</a>. You can drop \u2018\u2013\u2019 in option name. If option without value, use <em>None, False</em> or <em>\u2018\u2019</em> for dict value:. For repeatable options (incl. allow, cookie, custom-header, post, postfile, run-script, replace) you may use a list or a tuple. With option that need multiple values (e.g. \u2013custom-header Authorization secret) we may use a 2-tuple (see example below).</p>\n<pre>options = {\n    'page-size': 'Letter',\n    'margin-top': '0.75in',\n    'margin-right': '0.75in',\n    'margin-bottom': '0.75in',\n    'margin-left': '0.75in',\n    'encoding': \"UTF-8\",\n    'custom-header' : [\n        ('Accept-Encoding', 'gzip')\n    ]\n    'cookie': [\n        ('cookie-name1', 'cookie-value1'),\n        ('cookie-name2', 'cookie-value2'),\n    ],\n    'no-outline': None\n}\n\npdfkit.from_url('http://google.com', 'out.pdf', options=options)\n</pre>\n<p>By default, PDFKit will show all <tt>wkhtmltopdf</tt> output. If you don\u2019t want it, you need to pass <tt>quiet</tt> option:</p>\n<pre>options = {\n    'quiet': ''\n    }\n\npdfkit.from_url('google.com', 'out.pdf', options=options)\n</pre>\n<p>Due to wkhtmltopdf command syntax, <strong>TOC</strong> and <strong>Cover</strong> options must be specified separately. If you need cover before TOC, use <tt>cover_first</tt> option:</p>\n<pre>toc = {\n    'xsl-style-sheet': 'toc.xsl'\n}\n\ncover = 'cover.html'\n\npdfkit.from_file('file.html', options=options, toc=toc, cover=cover)\npdfkit.from_file('file.html', options=options, toc=toc, cover=cover, cover_first=True)\n</pre>\n<p>You can specify external CSS files when converting files or strings using <em>css</em> option.</p>\n<p><strong>Warning</strong> This is a workaround for <a href=\"http://code.google.com/p/wkhtmltopdf/issues/detail?id=144\" rel=\"nofollow\">this bug</a> in wkhtmltopdf. You should try <em>\u2013user-style-sheet</em> option first.</p>\n<pre># Single CSS file\ncss = 'example.css'\npdfkit.from_file('file.html', options=options, css=css)\n\n# Multiple CSS files\ncss = ['example.css', 'example2.css']\npdfkit.from_file('file.html', options=options, css=css)\n</pre>\n<p>You can also pass any options through meta tags in your HTML:</p>\n<pre>body = \"\"\"\n    &lt;html&gt;\n      &lt;head&gt;\n        &lt;meta name=\"pdfkit-page-size\" content=\"Legal\"/&gt;\n        &lt;meta name=\"pdfkit-orientation\" content=\"Landscape\"/&gt;\n      &lt;/head&gt;\n      Hello World!\n      &lt;/html&gt;\n    \"\"\"\n\npdfkit.from_string(body, 'out.pdf') #with --page-size=Legal and --orientation=Landscape\n</pre>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>Each API call takes an optional configuration paramater. This should be an instance of <tt>pdfkit.configuration()</tt> API call. It takes the configuration options as initial paramaters. The available options are:</p>\n<ul>\n<li><tt>wkhtmltopdf</tt> - the location of the <tt>wkhtmltopdf</tt> binary. By default <tt>pdfkit</tt> will attempt to locate this using <tt>which</tt> (on UNIX type systems) or <tt>where</tt> (on Windows).</li>\n<li><tt>meta_tag_prefix</tt> - the prefix for <tt>pdfkit</tt> specific meta tags - by default this is <tt>pdfkit-</tt></li>\n</ul>\n<p>Example - for when <tt>wkhtmltopdf</tt> is not on <tt>$PATH</tt>:</p>\n<pre>config = pdfkit.configuration(wkhtmltopdf='/opt/bin/wkhtmltopdf')\npdfkit.from_string(html_string, output_file, configuration=config)\n</pre>\n</div>\n<div id=\"troubleshooting\">\n<h3>Troubleshooting</h3>\n<ul>\n<li><p><tt>IOError: 'No wkhtmltopdf executable found'</tt>:</p>\n<p>Make sure that you have wkhtmltopdf in your <cite>$PATH</cite> or set via custom configuration (see preceding section). <em>where wkhtmltopdf</em> in Windows or <em>which wkhtmltopdf</em> on Linux should return actual path to binary.</p>\n</li>\n<li><p><tt>IOError: 'Command Failed'</tt></p>\n<p>This error means that PDFKit was unable to process an input. You can try to directly run a command from error message and see what error caused failure (on some wkhtmltopdf versions this can be cause by segmentation faults)</p>\n</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<ul>\n<li><dl>\n<dt><cite>0.6.1</cite></dt>\n<dd><ul>\n<li>Fix regression on python 3+ when trying to decode pdf output</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><cite>0.6.0</cite></dt>\n<dd><ul>\n<li>Support repeatable options</li>\n<li>Support multiple values for some options</li>\n<li>Fix some corner cases when specific argument order is required</li>\n<li>Some Python 3+ compatibility fixes</li>\n<li>Update README</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><cite>0.5.0</cite></dt>\n<dd><ul>\n<li>Allow passing multiple css files</li>\n<li>Fix problems with external file encodings</li>\n<li>Rise an error when X server is missing on *nix systems</li>\n<li>Fix tests that was broken with latest wkhtmltopdf release</li>\n<li>Update README</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><cite>0.4.1</cite></dt>\n<dd><ul>\n<li>More easier custom configuration setting</li>\n<li>Update README</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><cite>0.4.0</cite></dt>\n<dd><ul>\n<li>Allow passing file-like objects</li>\n<li>Ability to return PDF as a string</li>\n<li>Allow user specification of configuration</li>\n<li>API calls now returns True on success</li>\n<li>bugfixes</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><cite>0.3.0</cite></dt>\n<dd><ul>\n<li>Python 3 support</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><cite>0.2.4</cite></dt>\n<dd><ul>\n<li>Add History</li>\n<li>Update setup.py</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt><cite>0.2.3</cite></dt>\n<dd><ul>\n<li>Fix installing with setup.py</li>\n<li>Update README</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6154340, "releases": {"0.6.1": [{"comment_text": "", "digests": {"md5": "d7955d08f38e390381bee230b47536dc", "sha256": "7c4d7480d3e839aa3f8e97f3e58368b1ddc1e4d6694c8879fc4dbd1a672ff6d6"}, "downloads": -1, "filename": "bundled-pdfkit-0.6.1.tar.gz", "has_sig": false, "md5_digest": "d7955d08f38e390381bee230b47536dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31258765, "upload_time": "2019-11-18T08:09:16", "upload_time_iso_8601": "2019-11-18T08:09:16.997343Z", "url": "https://files.pythonhosted.org/packages/0a/6f/781e680b9132e1e6ee06cabb0f6a86bb337f33626264ead057915dd5464e/bundled-pdfkit-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7955d08f38e390381bee230b47536dc", "sha256": "7c4d7480d3e839aa3f8e97f3e58368b1ddc1e4d6694c8879fc4dbd1a672ff6d6"}, "downloads": -1, "filename": "bundled-pdfkit-0.6.1.tar.gz", "has_sig": false, "md5_digest": "d7955d08f38e390381bee230b47536dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31258765, "upload_time": "2019-11-18T08:09:16", "upload_time_iso_8601": "2019-11-18T08:09:16.997343Z", "url": "https://files.pythonhosted.org/packages/0a/6f/781e680b9132e1e6ee06cabb0f6a86bb337f33626264ead057915dd5464e/bundled-pdfkit-0.6.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:58 2020"}