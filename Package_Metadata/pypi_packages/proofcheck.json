{"info": {"author": "Bob Neveln", "author_email": "neveln@cs.widener.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Education", "Intended Audience :: Science/Research", "Natural Language :: English", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.3", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Mathematics"], "description": "============================================================\nProofCheck:  Checking Mathematical Proofs Written in TeX\n============================================================\n\n\nMathematical proofs are sequences of\nsteps which take expressions in a formal language which\nstate something already known to another formal expression\nwhich becomes known as a result.\nEach step must be justified by a rule of inference.  The notion\nof proof is sharpened when the set of inference rules is \nreduced to a small number.  But the effect of such reduction\non proofs is to make them cumbersome, like the\ncomputations of a Turing Machine.  ProofCheck uses \na really large rule set to make possible proofs which are not\ncumbersome.   The default inference rule set currently contains over 1500 rules\nand is still growing.  \n\nEither TeX or LaTeX may be used. What is\nrequired in the way of document structure  is that:\n\n  1. Each theorem must be labeled and \n  numbered in number-dot-number style,\n\n  2. Each theorem and proof must be \n  expressed in a language that ProofCheck can learn to parse, and\n\n  3. Proof steps must be numbered and annotated \n  following ProofCheck syntax.\n\nThe work cycle is as follows:\n\n  1. Edit the document using your preferred text editor:\n\n      emacs article.tex\n\n  2. TeX the document:\n\n      tex article\n\n  3. Parse the document:\n\n      parse.py article\n\n  4. Check a proof of, say theorem 1.23:\n\n      check.py article 1.23\n\nErrors at any stage of course send you back to the text editor.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.proofcheck.org/", "keywords": null, "license": "GNU General Public License", "maintainer": null, "maintainer_email": null, "name": "proofcheck", "package_url": "https://pypi.org/project/proofcheck/", "platform": "linux,windows,mac", "project_url": "https://pypi.org/project/proofcheck/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.proofcheck.org/"}, "release_url": "https://pypi.org/project/proofcheck/1.0/", "requires_dist": null, "requires_python": null, "summary": "Checks mathematical proofs written in TeX", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mathematical proofs are sequences of\nsteps which take expressions in a formal language which\nstate something already known to another formal expression\nwhich becomes known as a result.\nEach step must be justified by a rule of inference.  The notion\nof proof is sharpened when the set of inference rules is\nreduced to a small number.  But the effect of such reduction\non proofs is to make them cumbersome, like the\ncomputations of a Turing Machine.  ProofCheck uses\na really large rule set to make possible proofs which are not\ncumbersome.   The default inference rule set currently contains over 1500 rules\nand is still growing.</p>\n<p>Either TeX or LaTeX may be used. What is\nrequired in the way of document structure  is that:</p>\n<blockquote>\n<p>1. Each theorem must be labeled and\nnumbered in number-dot-number style,</p>\n<p>2. Each theorem and proof must be\nexpressed in a language that ProofCheck can learn to parse, and</p>\n<p>3. Proof steps must be numbered and annotated\nfollowing ProofCheck syntax.</p>\n</blockquote>\n<p>The work cycle is as follows:</p>\n<blockquote>\n<ol>\n<li><p>Edit the document using your preferred text editor:</p>\n<blockquote>\n<p>emacs article.tex</p>\n</blockquote>\n</li>\n<li><p>TeX the document:</p>\n<blockquote>\n<p>tex article</p>\n</blockquote>\n</li>\n<li><p>Parse the document:</p>\n<blockquote>\n<p>parse.py article</p>\n</blockquote>\n</li>\n<li><p>Check a proof of, say theorem 1.23:</p>\n<blockquote>\n<p>check.py article 1.23</p>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n<p>Errors at any stage of course send you back to the text editor.</p>\n\n          </div>"}, "last_serial": 796735, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "f553160cf073f0e1c017a74b22317b7c", "sha256": "de050ce172c04d99473e06af72267d1e26e6b109484c179b97943879c4c585fe"}, "downloads": -1, "filename": "proofcheck-1.0.tar.gz", "has_sig": false, "md5_digest": "f553160cf073f0e1c017a74b22317b7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 149464, "upload_time": "2012-03-07T21:28:51", "upload_time_iso_8601": "2012-03-07T21:28:51.387495Z", "url": "https://files.pythonhosted.org/packages/80/0a/cb9b75995104af93ce7b151f0e134ca476359a8b5001319649a866d9dea3/proofcheck-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f553160cf073f0e1c017a74b22317b7c", "sha256": "de050ce172c04d99473e06af72267d1e26e6b109484c179b97943879c4c585fe"}, "downloads": -1, "filename": "proofcheck-1.0.tar.gz", "has_sig": false, "md5_digest": "f553160cf073f0e1c017a74b22317b7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 149464, "upload_time": "2012-03-07T21:28:51", "upload_time_iso_8601": "2012-03-07T21:28:51.387495Z", "url": "https://files.pythonhosted.org/packages/80/0a/cb9b75995104af93ce7b151f0e134ca476359a8b5001319649a866d9dea3/proofcheck-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:01 2020"}