{"info": {"author": "Daniel Savoiu, Guenter Quast, Joerg Schindler", "author_email": "daniel.savoiu@cern.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Education", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization"], "description": ".. -*- mode: rst -*-\n\n**********************************\n*kafe* - Karlsruhe Fit Environment\n**********************************\n\n=====\nAbout\n=====\n\n**kafe** is a data fitting framework designed for use in undergraduate\nphysics lab courses. It is open-source software licensed under the GNU\nPublic License.\n\nIt provides a basic Python toolkit for fitting models to data as well as\nfor visualizing the fit result. It relies on Python packages such as *NumPy*\nand *matplotlib*, and uses the Python interface to the minimizer *MINUIT*\ncontained in CERN's data analysis framework ROOT or to *iminuit*, which is\navailable as a separate Python package.\n\nThe software originated as part of a bachelor's thesis in physics *Institut\nf\u00fcr Experimentelle Kernphysik* (IEKP) at the *Karlsruhe Insitute of Technology*\n(KIT). Development is currently slow, but ongoing.\n\nContributors:\n\n* G\u00fcnter Quast <guenter (dot) quast (at) online (dot) de>\n* Daniel Savoiu <daniel (dot) savoiu (at) cern (dot) ch>\n\n\nFor more information, please consult the HTML documentation in ``doc/html/index.html``\nor on `ReadTheDocs <http://kafe.readthedocs.org/en/latest/>`_.\n\n\n============\nRequirements\n============\n\n*kafe* runs under both Python 2 (`>=2.7.9`) and Python 3 (tested with `3.5.2`).\n\nSome additional Python packages are required. The recommended versions of these are\nas follows. Please note that more recent versions of these packages should work\nas well:\n\n* `SciPy <http://www.scipy.org>`_ >= 0.17.0\n* `NumPy <http://www.numpy.org>`_ >= 1.11.2\n* `matplotlib <http://matplotlib.org>`_ >= 1.5.0\n\n\nAdditionally, a function minimizer is needed. *kafe* implements interfaces to two\nfunction minimizers and requires at least one of them to be installed:\n\n* *MINUIT*, which is included in *CERN*'s data analysis package `ROOT <http://root.cern.ch>`_ (>= 5.34), or\n* `iminuit <https://github.com/iminuit/iminuit>`_ (>= 1.2), which is independent of ROOT\n\n\nFinally, *kafe* requires a number of external programs:\n\n* A *LaTeX* distribution (tested with `TeX Live <https://www.tug.org/texlive/>`_), since *LaTeX* is\n  used by matplotlib for typesetting labels and mathematical expressions.\n* `dvipng <http://www.nongnu.org/dvipng/>`_ for converting DVI files to PNG graphics\n\n==========================\nInstallation notes (Linux)\n==========================\n\n\nMost of the above packages and programs can be installed through the package manager on most Linux\ndistributions.\n\n*kafe* was developed for use on Linux desktop systems. Please note that all\ncommands below should be run as root.\n\n-----------------------------------------\nInstall *NumPy*, *SciPy* and *matplotlib*\n-----------------------------------------\n\nThese packages should be available in the package manager.\n\nIn Ubuntu/Mint/Debian:\n\n    .. code:: bash\n\n        apt-get install python-numpy python-scipy python-matplotlib\n\nIn Fedora/RHEL/CentOS:\n\n    .. code:: bash\n\n        yum install numpy scipy python-matplotlib\n\n\n--------------\nInstall *ROOT*\n--------------\n\n**Note**: This section is written with ROOT version 5.34 in mind.\nWhen using this version, take care that the Python bindings (PyROOT)\nare compiled for the version of Python you intend to use (either 2.x or 3.x),\nas it is not possible to use both. For newer versions of ROOT (i.e. 6 and\nabove), this should no longer be an issue.\n\n\nROOT and its Python bindings can be obtained via the package manager in\nUbuntu/Mint/Debian:\n\n    .. code:: bash\n\n        apt-get install root-system libroot-bindings-python5.34 libroot-bindings-python-dev\n\nOr, in Fedora/RHEL/CentOS:\n\n    .. code:: bash\n\n        yum install root root-python\n\n\nThis setup is usually sufficient. However, you may decide to build ROOT yourself. In this case,\nbe sure to compile with *PyROOT* support. Additionally, for Python to see the *PyROOT* bindings,\nthe following environment variables have to be set correctly:\n\n    .. code:: bash\n\n        export ROOTSYS=<directory where ROOT is installed>\n        export LD_LIBRARY_PATH=$ROOTSYS/lib:$PYTHONDIR/lib:$LD_LIBRARY_PATH\n        export PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH\n\n\nFor more info, refer to `<http://root.cern.ch/drupal/content/pyroot>`_.\n\n-----------------\nInstall `iminuit`\n-----------------\n\n*iminuit* is a Python wrapper for the Minuit minimizer which is\nindependent of ROOT. If compiling/installing ROOT is not possible,\nthis minimizer can be used instead.\n\nTo install the *iminuit* package for Python, the `Pip installer\n<http://www.pip-installer.org/>`_ is recommended:\n\n    .. code:: bash\n\n        pip install iminuit\n\nIf you don't have *Pip* installed, get it from the package manager.\n\nIn Ubuntu/Mint/Debian, do:\n\n    .. code:: bash\n\n        apt-get install python-pip\n\nIn Fedora/RHEL/CentOS, do:\n\n    .. code:: bash\n\n        yum install python-pip\n\nor use ``easy_install`` (included with `setuptools <https://pypi.python.org/pypi/setuptools>`_):\n\n    .. code:: bash\n\n        easy_install pip\n\nYou might also need to install the Python headers for *iminuit* to\ncompile properly.\n\nIn Ubuntu/Mint/Debian, do:\n\n    .. code:: bash\n\n        apt-get install libpython2.7-dev\n\nIn Fedora/RHEL/CentOS, do:\n\n    .. code:: bash\n\n        yum install python-devel\n\n\nRead the README file for more information on other dependencies\n(there should be adequate packages for your Linux distribution\nto satisfy these).\n\n--------------\nInstall *kafe*\n--------------\n\nTo install *kafe* using *Pip*, simply run the helper script as root:\n\n    .. code:: bash\n\n        ./install.sh\n\nTo remove kafe using *Pip*, just run the helper script:\n\n    .. code:: bash\n\n        ./uninstall.sh\n\n\nAlternatively, installing using Python's *setuptools* also works, but may not\nprovide a clean uninstall. Use this method if installing with *Pip* is not possible:\n\n    .. code:: bash\n\n        python setup.py install\n\n============================\nInstallation notes (Windows)\n============================\n\n*kafe* can be installed under Windows, but requires some additional configuration.\n\nThe recommended Python distribution for working with *kafe* under Windows is\n`WinPython <https://winpython.github.io/>`_, which has the advantage that it is\nportable and comes with a number of useful pre-installed packages. Particularly,\n*NumPy*, *SciPy* and *matplotlib* are all pre-installed in *WinPython*.\n\n-----------------\nInstall `iminuit`\n-----------------\n\nAfter installing *WinPython*, start 'WinPython Command Prompt.exe' in the\n*WinPython* installation directory and run\n\n    .. code:: bash\n\n        pip install iminuit\n\n--------------\nInstall `kafe`\n--------------\n\nNow *kafe* can be installed from PyPI by running:\n\n    .. code:: bash\n\n        pip install kafe\n\nAlternatively, it may be installed directly using *setuptools*. Just run\nthe following in 'WinPython Command Prompt.exe' after switching to the\ndirectory into which you have downloaded *kafe*:\n\n    .. code:: bash\n\n        python setup.py install\n\n--------------------------------------\nUsing *kafe* with ROOT under Windows\n--------------------------------------\n\nIf you want *kafe* to work with ROOT's ``TMinuit`` instead of using\n*iminuit*, then ROOT has to be installed. Please note that ROOT releases\nfor Windows are 32-bit and using the PyROOT bindings on a 64-bit *WinPython*\ndistribution will not work.\n\nA pre-built verson of ROOT for Windows is available on the ROOT homepage as a Windows\nInstaller package. The recommended version is\n`ROOT 5.34 <https://root.cern.ch/content/release-53434>`_.\nDuring the installation process, select \"Add ROOT to the system PATH for all users\"\nwhen prompted. This will set the ``PATH`` environment variable to include\nthe relevant ROOT directories. The installer also sets the ``ROOTSYS`` environment\nvariable, which points to the directory where ROOT in installed. By default,\nthis is ``C:\\root_v5.34.34``.\n\nAdditionally, for Python to find the *PyROOT* bindings, the ``PYTHONPATH``\nenvironment variable must be modified to include the ``bin`` subdirectory\nof path where ROOT is installed. On Windows 10, assuming ROOT has been installed\nin the default directory (``C:\\root_v5.34.34``), this is achieved as follows:\n\n  1)  open the Start Menu and start typing \"environment variables\"\n  2)  select \"Edit the system environment variables\"\n  3)  click the \"Environment Variables...\" button\n  4)  in the lower part, under \"System variables\", look for the \"PYTHONPATH\" entry\n\n  5)  modify/add the \"PYTHONPATH\" entry:\n\n      * if it doesn't exist, create it by choosing \"New...\",\n        enter PYTHONPATH as the variable name\n        and ``C:\\root_v5.34.34\\bin`` as the variable value\n      * if it already exists and contains only one path, edit it via \"Edit...\" and\n        insert ``C:\\root_v5.34.34\\bin;`` at the beginning of the variable value.\n        (Note the semicolon!)\n      * if the variable already contains several paths, choosing \"Edit...\" will\n        show a dialog box to manage them. Choose \"New\" and write\n        ``C:\\root_v5.34.34\\bin``\n\n  6)  close all opened dialogs with \"OK\"\n\n\nNow you may try to ``import ROOT`` in the *WinPython* interpreter to check\nif everything has been set up correctly.\n\nFor more information please refer to ROOT's official\n`PyROOT Guide <https://root.cern.ch/pyroot>`_.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dsavoiu/kafe", "keywords": "data analysis lab courses education students physics fitting minimization", "license": "GNU Public Licence v3", "maintainer": "", "maintainer_email": "", "name": "kafe", "package_url": "https://pypi.org/project/kafe/", "platform": "", "project_url": "https://pypi.org/project/kafe/", "project_urls": {"Homepage": "https://github.com/dsavoiu/kafe"}, "release_url": "https://pypi.org/project/kafe/1.3.1/", "requires_dist": null, "requires_python": "", "summary": "A Python Package for Introduction to         Data Analysis in Physics Lab Courses", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p><strong>kafe</strong> is a data fitting framework designed for use in undergraduate\nphysics lab courses. It is open-source software licensed under the GNU\nPublic License.</p>\n<p>It provides a basic Python toolkit for fitting models to data as well as\nfor visualizing the fit result. It relies on Python packages such as <em>NumPy</em>\nand <em>matplotlib</em>, and uses the Python interface to the minimizer <em>MINUIT</em>\ncontained in CERN\u2019s data analysis framework ROOT or to <em>iminuit</em>, which is\navailable as a separate Python package.</p>\n<p>The software originated as part of a bachelor\u2019s thesis in physics <em>Institut\nf\u00fcr Experimentelle Kernphysik</em> (IEKP) at the <em>Karlsruhe Insitute of Technology</em>\n(KIT). Development is currently slow, but ongoing.</p>\n<p>Contributors:</p>\n<ul>\n<li>G\u00fcnter Quast &lt;guenter (dot) quast (at) online (dot) de&gt;</li>\n<li>Daniel Savoiu &lt;daniel (dot) savoiu (at) cern (dot) ch&gt;</li>\n</ul>\n<p>For more information, please consult the HTML documentation in <tt>doc/html/index.html</tt>\nor on <a href=\"http://kafe.readthedocs.org/en/latest/\" rel=\"nofollow\">ReadTheDocs</a>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p><em>kafe</em> runs under both Python 2 (<cite>&gt;=2.7.9</cite>) and Python 3 (tested with <cite>3.5.2</cite>).</p>\n<p>Some additional Python packages are required. The recommended versions of these are\nas follows. Please note that more recent versions of these packages should work\nas well:</p>\n<ul>\n<li><a href=\"http://www.scipy.org\" rel=\"nofollow\">SciPy</a> &gt;= 0.17.0</li>\n<li><a href=\"http://www.numpy.org\" rel=\"nofollow\">NumPy</a> &gt;= 1.11.2</li>\n<li><a href=\"http://matplotlib.org\" rel=\"nofollow\">matplotlib</a> &gt;= 1.5.0</li>\n</ul>\n<p>Additionally, a function minimizer is needed. <em>kafe</em> implements interfaces to two\nfunction minimizers and requires at least one of them to be installed:</p>\n<ul>\n<li><em>MINUIT</em>, which is included in <em>CERN</em>\u2019s data analysis package <a href=\"http://root.cern.ch\" rel=\"nofollow\">ROOT</a> (&gt;= 5.34), or</li>\n<li><a href=\"https://github.com/iminuit/iminuit\" rel=\"nofollow\">iminuit</a> (&gt;= 1.2), which is independent of ROOT</li>\n</ul>\n<p>Finally, <em>kafe</em> requires a number of external programs:</p>\n<ul>\n<li>A <em>LaTeX</em> distribution (tested with <a href=\"https://www.tug.org/texlive/\" rel=\"nofollow\">TeX Live</a>), since <em>LaTeX</em> is\nused by matplotlib for typesetting labels and mathematical expressions.</li>\n<li><a href=\"http://www.nongnu.org/dvipng/\" rel=\"nofollow\">dvipng</a> for converting DVI files to PNG graphics</li>\n</ul>\n</div>\n<div id=\"installation-notes-linux\">\n<h2>Installation notes (Linux)</h2>\n<p>Most of the above packages and programs can be installed through the package manager on most Linux\ndistributions.</p>\n<p><em>kafe</em> was developed for use on Linux desktop systems. Please note that all\ncommands below should be run as root.</p>\n<div id=\"install-numpy-scipy-and-matplotlib\">\n<h3>Install <em>NumPy</em>, <em>SciPy</em> and <em>matplotlib</em></h3>\n<p>These packages should be available in the package manager.</p>\n<p>In Ubuntu/Mint/Debian:</p>\n<blockquote>\n<pre>apt-get install python-numpy python-scipy python-matplotlib\n</pre>\n</blockquote>\n<p>In Fedora/RHEL/CentOS:</p>\n<blockquote>\n<pre>yum install numpy scipy python-matplotlib\n</pre>\n</blockquote>\n</div>\n<div id=\"install-root\">\n<h3>Install <em>ROOT</em></h3>\n<p><strong>Note</strong>: This section is written with ROOT version 5.34 in mind.\nWhen using this version, take care that the Python bindings (PyROOT)\nare compiled for the version of Python you intend to use (either 2.x or 3.x),\nas it is not possible to use both. For newer versions of ROOT (i.e. 6 and\nabove), this should no longer be an issue.</p>\n<p>ROOT and its Python bindings can be obtained via the package manager in\nUbuntu/Mint/Debian:</p>\n<blockquote>\n<pre>apt-get install root-system libroot-bindings-python5.34 libroot-bindings-python-dev\n</pre>\n</blockquote>\n<p>Or, in Fedora/RHEL/CentOS:</p>\n<blockquote>\n<pre>yum install root root-python\n</pre>\n</blockquote>\n<p>This setup is usually sufficient. However, you may decide to build ROOT yourself. In this case,\nbe sure to compile with <em>PyROOT</em> support. Additionally, for Python to see the <em>PyROOT</em> bindings,\nthe following environment variables have to be set correctly:</p>\n<blockquote>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">ROOTSYS</span><span class=\"o\">=</span>&lt;directory where ROOT is installed&gt;\n<span class=\"nb\">export</span> <span class=\"nv\">LD_LIBRARY_PATH</span><span class=\"o\">=</span><span class=\"nv\">$ROOTSYS</span>/lib:<span class=\"nv\">$PYTHONDIR</span>/lib:<span class=\"nv\">$LD_LIBRARY_PATH</span>\n<span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span><span class=\"nv\">$ROOTSYS</span>/lib:<span class=\"nv\">$PYTHONPATH</span>\n</pre>\n</blockquote>\n<p>For more info, refer to <a href=\"http://root.cern.ch/drupal/content/pyroot\" rel=\"nofollow\">http://root.cern.ch/drupal/content/pyroot</a>.</p>\n</div>\n<div id=\"install-iminuit\">\n<h3>Install <cite>iminuit</cite></h3>\n<p><em>iminuit</em> is a Python wrapper for the Minuit minimizer which is\nindependent of ROOT. If compiling/installing ROOT is not possible,\nthis minimizer can be used instead.</p>\n<p>To install the <em>iminuit</em> package for Python, the <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">Pip installer</a> is recommended:</p>\n<blockquote>\n<pre>pip install iminuit\n</pre>\n</blockquote>\n<p>If you don\u2019t have <em>Pip</em> installed, get it from the package manager.</p>\n<p>In Ubuntu/Mint/Debian, do:</p>\n<blockquote>\n<pre>apt-get install python-pip\n</pre>\n</blockquote>\n<p>In Fedora/RHEL/CentOS, do:</p>\n<blockquote>\n<pre>yum install python-pip\n</pre>\n</blockquote>\n<p>or use <tt>easy_install</tt> (included with <a href=\"https://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a>):</p>\n<blockquote>\n<pre>easy_install pip\n</pre>\n</blockquote>\n<p>You might also need to install the Python headers for <em>iminuit</em> to\ncompile properly.</p>\n<p>In Ubuntu/Mint/Debian, do:</p>\n<blockquote>\n<pre>apt-get install libpython2.7-dev\n</pre>\n</blockquote>\n<p>In Fedora/RHEL/CentOS, do:</p>\n<blockquote>\n<pre>yum install python-devel\n</pre>\n</blockquote>\n<p>Read the README file for more information on other dependencies\n(there should be adequate packages for your Linux distribution\nto satisfy these).</p>\n</div>\n<div id=\"install-kafe\">\n<h3>Install <em>kafe</em></h3>\n<p>To install <em>kafe</em> using <em>Pip</em>, simply run the helper script as root:</p>\n<blockquote>\n<pre>./install.sh\n</pre>\n</blockquote>\n<p>To remove kafe using <em>Pip</em>, just run the helper script:</p>\n<blockquote>\n<pre>./uninstall.sh\n</pre>\n</blockquote>\n<p>Alternatively, installing using Python\u2019s <em>setuptools</em> also works, but may not\nprovide a clean uninstall. Use this method if installing with <em>Pip</em> is not possible:</p>\n<blockquote>\n<pre>python setup.py install\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"installation-notes-windows\">\n<h2>Installation notes (Windows)</h2>\n<p><em>kafe</em> can be installed under Windows, but requires some additional configuration.</p>\n<p>The recommended Python distribution for working with <em>kafe</em> under Windows is\n<a href=\"https://winpython.github.io/\" rel=\"nofollow\">WinPython</a>, which has the advantage that it is\nportable and comes with a number of useful pre-installed packages. Particularly,\n<em>NumPy</em>, <em>SciPy</em> and <em>matplotlib</em> are all pre-installed in <em>WinPython</em>.</p>\n<div id=\"id1\">\n<h3>Install <cite>iminuit</cite></h3>\n<p>After installing <em>WinPython</em>, start \u2018WinPython Command Prompt.exe\u2019 in the\n<em>WinPython</em> installation directory and run</p>\n<blockquote>\n<pre>pip install iminuit\n</pre>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h3>Install <cite>kafe</cite></h3>\n<p>Now <em>kafe</em> can be installed from PyPI by running:</p>\n<blockquote>\n<pre>pip install kafe\n</pre>\n</blockquote>\n<p>Alternatively, it may be installed directly using <em>setuptools</em>. Just run\nthe following in \u2018WinPython Command Prompt.exe\u2019 after switching to the\ndirectory into which you have downloaded <em>kafe</em>:</p>\n<blockquote>\n<pre>python setup.py install\n</pre>\n</blockquote>\n</div>\n<div id=\"using-kafe-with-root-under-windows\">\n<h3>Using <em>kafe</em> with ROOT under Windows</h3>\n<p>If you want <em>kafe</em> to work with ROOT\u2019s <tt>TMinuit</tt> instead of using\n<em>iminuit</em>, then ROOT has to be installed. Please note that ROOT releases\nfor Windows are 32-bit and using the PyROOT bindings on a 64-bit <em>WinPython</em>\ndistribution will not work.</p>\n<p>A pre-built verson of ROOT for Windows is available on the ROOT homepage as a Windows\nInstaller package. The recommended version is\n<a href=\"https://root.cern.ch/content/release-53434\" rel=\"nofollow\">ROOT 5.34</a>.\nDuring the installation process, select \u201cAdd ROOT to the system PATH for all users\u201d\nwhen prompted. This will set the <tt>PATH</tt> environment variable to include\nthe relevant ROOT directories. The installer also sets the <tt>ROOTSYS</tt> environment\nvariable, which points to the directory where ROOT in installed. By default,\nthis is <tt><span class=\"pre\">C:\\root_v5.34.34</span></tt>.</p>\n<p>Additionally, for Python to find the <em>PyROOT</em> bindings, the <tt>PYTHONPATH</tt>\nenvironment variable must be modified to include the <tt>bin</tt> subdirectory\nof path where ROOT is installed. On Windows 10, assuming ROOT has been installed\nin the default directory (<tt><span class=\"pre\">C:\\root_v5.34.34</span></tt>), this is achieved as follows:</p>\n<blockquote>\n<ol>\n<li>open the Start Menu and start typing \u201cenvironment variables\u201d</li>\n<li>select \u201cEdit the system environment variables\u201d</li>\n<li>click the \u201cEnvironment Variables\u2026\u201d button</li>\n<li>in the lower part, under \u201cSystem variables\u201d, look for the \u201cPYTHONPATH\u201d entry</li>\n<li>modify/add the \u201cPYTHONPATH\u201d entry:<ul>\n<li>if it doesn\u2019t exist, create it by choosing \u201cNew\u2026\u201d,\nenter PYTHONPATH as the variable name\nand <tt><span class=\"pre\">C:\\root_v5.34.34\\bin</span></tt> as the variable value</li>\n<li>if it already exists and contains only one path, edit it via \u201cEdit\u2026\u201d and\ninsert <tt><span class=\"pre\">C:\\root_v5.34.34\\bin;</span></tt> at the beginning of the variable value.\n(Note the semicolon!)</li>\n<li>if the variable already contains several paths, choosing \u201cEdit\u2026\u201d will\nshow a dialog box to manage them. Choose \u201cNew\u201d and write\n<tt><span class=\"pre\">C:\\root_v5.34.34\\bin</span></tt></li>\n</ul>\n</li>\n<li>close all opened dialogs with \u201cOK\u201d</li>\n</ol>\n</blockquote>\n<p>Now you may try to <tt>import ROOT</tt> in the <em>WinPython</em> interpreter to check\nif everything has been set up correctly.</p>\n<p>For more information please refer to ROOT\u2019s official\n<a href=\"https://root.cern.ch/pyroot\" rel=\"nofollow\">PyROOT Guide</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4124849, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "0964226f5f6584c71ca6f14460d7b5b1", "sha256": "38b3655dc2b789f4450e3fa1e63558365eb0b305e1509a03f180b129450d9dc0"}, "downloads": -1, "filename": "kafe-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0964226f5f6584c71ca6f14460d7b5b1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 74061, "upload_time": "2016-03-15T12:02:55", "upload_time_iso_8601": "2016-03-15T12:02:55.007749Z", "url": "https://files.pythonhosted.org/packages/96/df/401436ce379a4cc13c9c68c711b4ff21ac1f30dfe5aaaba3057b232f3814/kafe-1.0.1-py2-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "15bf25b0e0ae8bd5438e549720337a96", "sha256": "21faf905e629b260566c92858c8e8a499c5dc1cd41ec6d81278d58aaf4a6f4ee"}, "downloads": -1, "filename": "kafe-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "15bf25b0e0ae8bd5438e549720337a96", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 76833, "upload_time": "2016-06-24T08:59:27", "upload_time_iso_8601": "2016-06-24T08:59:27.894581Z", "url": "https://files.pythonhosted.org/packages/be/19/5f87552e0f787e2e79d73f834c10243a4f0491121bfeef12bebbb618aa67/kafe-1.1.0-py2-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "4247f4a900878570fcd3c5d30c921590", "sha256": "b93fd99cf512a203408ac3286778218e6d70b2a7d02396d38639e06383cb1a48"}, "downloads": -1, "filename": "kafe-1.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "4247f4a900878570fcd3c5d30c921590", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 85664, "upload_time": "2016-10-17T00:30:19", "upload_time_iso_8601": "2016-10-17T00:30:19.451408Z", "url": "https://files.pythonhosted.org/packages/b9/f0/348626ce6e290cce9dc21f67062ee50c9c74799406e691d72d65cd4e0de8/kafe-1.2.0-py2-none-any.whl", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "9623149a6a88901325647c2d0396a55a", "sha256": "3bcc80e05db04ad2f0e656a2642fe96997052a936253f5fd73a7c8e85bd82476"}, "downloads": -1, "filename": "kafe-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9623149a6a88901325647c2d0396a55a", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 102410, "upload_time": "2017-06-14T18:16:25", "upload_time_iso_8601": "2017-06-14T18:16:25.627926Z", "url": "https://files.pythonhosted.org/packages/47/13/bc5db859327e5ab13b08b1ab76521e2a79280206085d8fd924f64c271d7d/kafe-1.3.0-py2.py3-none-any.whl", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "b136aa64c02d1bfb0e3b0bfc58f7ff81", "sha256": "71f454b20a633c772c42ab0c6462dd979d4d768209375515d00955d6180ef4d0"}, "downloads": -1, "filename": "kafe-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b136aa64c02d1bfb0e3b0bfc58f7ff81", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 98219, "upload_time": "2018-08-01T13:43:09", "upload_time_iso_8601": "2018-08-01T13:43:09.571192Z", "url": "https://files.pythonhosted.org/packages/8f/31/36827e2224197b282afde2b18e53b83b89199f8261cbdeeebc901f2fa774/kafe-1.3.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b136aa64c02d1bfb0e3b0bfc58f7ff81", "sha256": "71f454b20a633c772c42ab0c6462dd979d4d768209375515d00955d6180ef4d0"}, "downloads": -1, "filename": "kafe-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b136aa64c02d1bfb0e3b0bfc58f7ff81", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 98219, "upload_time": "2018-08-01T13:43:09", "upload_time_iso_8601": "2018-08-01T13:43:09.571192Z", "url": "https://files.pythonhosted.org/packages/8f/31/36827e2224197b282afde2b18e53b83b89199f8261cbdeeebc901f2fa774/kafe-1.3.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:52 2020"}