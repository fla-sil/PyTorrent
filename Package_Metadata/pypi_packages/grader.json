{"info": {"author": "Jose Luis Naranjo Gomez", "author_email": "luisnaranjo733@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Utilities"], "description": "Grader\n******\n\nGrader is a custom assignment checker for a 3D modeling class, but it is flexible enough that it could be useful for some other purpose.\nWritten by Luis Naranjo\n\n**Usage**\n\nWhen grader is run for the first time it creates a folder called 'grader' in My Documents (Windows) or Documents (Mac).\n\nHere are the contents of 'grader':\n\nsettings.conf\n\nstudents.txt\n\ngrader_files\\\n\nlog.txt\n\nsettings.conf\n*************\n\nSettings\n========\n\nThis file is where the projects are defined.\n\nThe file starts out with the following program settings:\n\n**show members**\n\nThis controls whether the contents of a student's missing project are to be reported missing or not.\n\nIt can be either True or False\n\nFor example::\n\n   show members = True\n\nPutting this in settings.conf would make the grader report each missing file within a missing project.\n\nIf it were set to false, the grader would only report that the project is missing.\n\n**capitalization**\n\nThis controls the capitalization of the student projects.\n\nThe grader relies on the consistency of the project/exercise naming.\n\nStudents are not the most reliable for correct formatting, so grader includes a way to normalize all of the files/folders in the grader_files folder.\n\ncapitalization has the following possible values: capitalize, lower, upper, title\n\ncapitalize only capitalizes the first word.\n\nlower makes everything lower case.\n\nupper makes everything upper case.\n\ntitle capitalizes every word.\n\nFor example::\n\n   capitalization = lower\n\nThis would make every folder and file in the grader_files folder lowercase.\n\nNote:\n\n* Watch out for upper and title, they can mess up your file extensions.\n* If you don't set this correctly, grader won't function.\n\n**log**\n\nThis controls where grader's results are reported.\n\nIt can be either True or False\n\nIf it is True, the results are recorded in My Documents/grader/log.txt\n\nIf it is False, the results are printed to the command line and not saved.\n\nProjects\n========\n\nYou can define as many projects as you want\n\nEach project can have as many exercises as you want.\n\nEach exercise can have as many file extensions as you want.\n\nFor example::\n\n   [project 3]\n   exercise 1 = .jpg,.3dm\n   exercise 2 = .3dm\n\nNotice that exercise 1 has two file extensions, and they are separated by commas, not spaces.\n\nIf we only had one student (naranjo) defined in students.txt, grader would look for the following files and folders in grader_files\\\\:\n\nnaranjo project 3\\\\ (folder)\n\nnaranjo exercise 1.jpg (inside of naranjo project 3)\n\nnaranjo exercise 1.3dm (inside of naranjo project 3)\n\nnaranjo exercise 2.3dm (inside of naranjo project 3)\n\nstudents.txt\n************\n\nThis is where the students are defined.\n\nstudents.txt is very simple.\n\nEach line in the file should have the last name of the student, and nothing more.\n\nDo not skip any lines.\n\nThis will work::\n\n   depp\n   clooney\n   naranjo\n\nThis will not::\n\n   depp\n\n   clooney\n\n   naranjo\n\ngrader_files\n************\n\nThis is the folder where you put the student projects.\nEach folder should be named according to the following convention (things enclosed by brackets are variables):\n\n{lastname} {projectname}\n\nThe exercises contained in these folders should match the following convention:\n\n{lastname} {exercisename}\n\nlog.txt\n*******\n\nResults can be stored here.\n\nThis is controlled via the log variable in settings.conf\n\n\nInstallation\n************\n\nGrader is written in python2.7.3, so python must be installed before it can be run.\n\nThere is a great guide on how to install here: http://docs.python-guide.org/en/latest/index.html\n\nIt has only one dependency (configobj), which is bundled with the program.\n\nIt is available on the python package index at http://pypi.python.org/pypi/grader\n\nSource code is up on https://github.com/doubledubba/grader\n\nOnce it is installed, grader sets up a console script called 'grader'.\n\nThis allows you to open the command prompt/terminal and type 'grader' and hit enter.\n\nThis should activate grader.\n\nWhat you would see on the command prompt depends on what you set your log variable as in settings.config\n\nGrader also adds a batch file (grader.bat) which automates this process for clicking.\n\nIf you are on Windows, you should be able to click this to run grader.\n\nA similar file is created for Linux and Mac operating systems called grader.sh", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/doubledubba/grader", "keywords": null, "license": "GNU GPL", "maintainer": null, "maintainer_email": null, "name": "grader", "package_url": "https://pypi.org/project/grader/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/grader/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/doubledubba/grader"}, "release_url": "https://pypi.org/project/grader/1.2/", "requires_dist": null, "requires_python": null, "summary": "A homework checker for a 3d Modeling class", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"grader\">\n<h2>Grader</h2>\n<p>Grader is a custom assignment checker for a 3D modeling class, but it is flexible enough that it could be useful for some other purpose.\nWritten by Luis Naranjo</p>\n<p><strong>Usage</strong></p>\n<p>When grader is run for the first time it creates a folder called \u2018grader\u2019 in My Documents (Windows) or Documents (Mac).</p>\n<p>Here are the contents of \u2018grader\u2019:</p>\n<p>settings.conf</p>\n<p>students.txt</p>\n<p>grader_files</p>\n<p>log.txt</p>\n</div>\n<div id=\"settings-conf\">\n<h2>settings.conf</h2>\n<div id=\"settings\">\n<h3>Settings</h3>\n<p>This file is where the projects are defined.</p>\n<p>The file starts out with the following program settings:</p>\n<p><strong>show members</strong></p>\n<p>This controls whether the contents of a student\u2019s missing project are to be reported missing or not.</p>\n<p>It can be either True or False</p>\n<p>For example:</p>\n<pre>show members = True\n</pre>\n<p>Putting this in settings.conf would make the grader report each missing file within a missing project.</p>\n<p>If it were set to false, the grader would only report that the project is missing.</p>\n<p><strong>capitalization</strong></p>\n<p>This controls the capitalization of the student projects.</p>\n<p>The grader relies on the consistency of the project/exercise naming.</p>\n<p>Students are not the most reliable for correct formatting, so grader includes a way to normalize all of the files/folders in the grader_files folder.</p>\n<p>capitalization has the following possible values: capitalize, lower, upper, title</p>\n<p>capitalize only capitalizes the first word.</p>\n<p>lower makes everything lower case.</p>\n<p>upper makes everything upper case.</p>\n<p>title capitalizes every word.</p>\n<p>For example:</p>\n<pre>capitalization = lower\n</pre>\n<p>This would make every folder and file in the grader_files folder lowercase.</p>\n<p>Note:</p>\n<ul>\n<li>Watch out for upper and title, they can mess up your file extensions.</li>\n<li>If you don\u2019t set this correctly, grader won\u2019t function.</li>\n</ul>\n<p><strong>log</strong></p>\n<p>This controls where grader\u2019s results are reported.</p>\n<p>It can be either True or False</p>\n<p>If it is True, the results are recorded in My Documents/grader/log.txt</p>\n<p>If it is False, the results are printed to the command line and not saved.</p>\n</div>\n<div id=\"projects\">\n<h3>Projects</h3>\n<p>You can define as many projects as you want</p>\n<p>Each project can have as many exercises as you want.</p>\n<p>Each exercise can have as many file extensions as you want.</p>\n<p>For example:</p>\n<pre>[project 3]\nexercise 1 = .jpg,.3dm\nexercise 2 = .3dm\n</pre>\n<p>Notice that exercise 1 has two file extensions, and they are separated by commas, not spaces.</p>\n<p>If we only had one student (naranjo) defined in students.txt, grader would look for the following files and folders in grader_files\\:</p>\n<p>naranjo project 3\\ (folder)</p>\n<p>naranjo exercise 1.jpg (inside of naranjo project 3)</p>\n<p>naranjo exercise 1.3dm (inside of naranjo project 3)</p>\n<p>naranjo exercise 2.3dm (inside of naranjo project 3)</p>\n</div>\n</div>\n<div id=\"students-txt\">\n<h2>students.txt</h2>\n<p>This is where the students are defined.</p>\n<p>students.txt is very simple.</p>\n<p>Each line in the file should have the last name of the student, and nothing more.</p>\n<p>Do not skip any lines.</p>\n<p>This will work:</p>\n<pre>depp\nclooney\nnaranjo\n</pre>\n<p>This will not:</p>\n<pre>depp\n\nclooney\n\nnaranjo\n</pre>\n</div>\n<div id=\"grader-files\">\n<h2>grader_files</h2>\n<p>This is the folder where you put the student projects.\nEach folder should be named according to the following convention (things enclosed by brackets are variables):</p>\n<p>{lastname} {projectname}</p>\n<p>The exercises contained in these folders should match the following convention:</p>\n<p>{lastname} {exercisename}</p>\n</div>\n<div id=\"log-txt\">\n<h2>log.txt</h2>\n<p>Results can be stored here.</p>\n<p>This is controlled via the log variable in settings.conf</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Grader is written in python2.7.3, so python must be installed before it can be run.</p>\n<p>There is a great guide on how to install here: <a href=\"http://docs.python-guide.org/en/latest/index.html\" rel=\"nofollow\">http://docs.python-guide.org/en/latest/index.html</a></p>\n<p>It has only one dependency (configobj), which is bundled with the program.</p>\n<p>It is available on the python package index at <a href=\"http://pypi.python.org/pypi/grader\" rel=\"nofollow\">http://pypi.python.org/pypi/grader</a></p>\n<p>Source code is up on <a href=\"https://github.com/doubledubba/grader\" rel=\"nofollow\">https://github.com/doubledubba/grader</a></p>\n<p>Once it is installed, grader sets up a console script called \u2018grader\u2019.</p>\n<p>This allows you to open the command prompt/terminal and type \u2018grader\u2019 and hit enter.</p>\n<p>This should activate grader.</p>\n<p>What you would see on the command prompt depends on what you set your log variable as in settings.config</p>\n<p>Grader also adds a batch file (grader.bat) which automates this process for clicking.</p>\n<p>If you are on Windows, you should be able to click this to run grader.</p>\n<p>A similar file is created for Linux and Mac operating systems called grader.sh</p>\n</div>\n\n          </div>"}, "last_serial": 792656, "releases": {"1": [{"comment_text": "", "digests": {"md5": "cb637075729b770184ec7f53af33c07c", "sha256": "ce75b4a6f9d22a22d68d9bc1a7145511b1172fddc270bd9f05ffa4ba7d5f02e8"}, "downloads": -1, "filename": "grader-1-py2.7.egg", "has_sig": false, "md5_digest": "cb637075729b770184ec7f53af33c07c", "packagetype": "bdist_egg", "python_version": "any", "requires_python": null, "size": 17840, "upload_time": "2012-03-04T10:47:24", "upload_time_iso_8601": "2012-03-04T10:47:24.485241Z", "url": "https://files.pythonhosted.org/packages/67/08/78fd79c73cce402cc7d2579dbd2458d832919ab5076d6c2f6d02bc75d967/grader-1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8722f0239c0371645590ab190ff719a", "sha256": "b90b9cdc263a5635564a0b7a22ee1ab827af33aa132277b6fa9f7ca8b83d8041"}, "downloads": -1, "filename": "grader-1.win32.exe", "has_sig": false, "md5_digest": "c8722f0239c0371645590ab190ff719a", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 211974, "upload_time": "2012-03-04T10:46:46", "upload_time_iso_8601": "2012-03-04T10:46:46.263576Z", "url": "https://files.pythonhosted.org/packages/5e/01/664c4215be0a5119a516b5910578b29573c6b94ca440c9d97f4fc26c7f26/grader-1.win32.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "8787ead67f837bd407444d02c75f393d", "sha256": "c79b86fc6e843e2e8176281d423b8f1b0bbaa01554a7f3d6b1c466d19b3e955e"}, "downloads": -1, "filename": "grader-1.zip", "has_sig": false, "md5_digest": "8787ead67f837bd407444d02c75f393d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12216, "upload_time": "2012-03-04T10:47:09", "upload_time_iso_8601": "2012-03-04T10:47:09.136606Z", "url": "https://files.pythonhosted.org/packages/f3/0c/c6d4d28f46879db51e296e7c3bd13d7e7ca067fb8b47dcf223e8cdef68e1/grader-1.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "dd7147b929e95b05c30aed166bda09ad", "sha256": "dab74dcb60b81a1370525a8c27b560f04bfa8d263f6033a06e2b8e4763b735a0"}, "downloads": -1, "filename": "grader-1.1.tar.gz", "has_sig": false, "md5_digest": "dd7147b929e95b05c30aed166bda09ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6382, "upload_time": "2012-03-08T07:48:08", "upload_time_iso_8601": "2012-03-08T07:48:08.493261Z", "url": "https://files.pythonhosted.org/packages/12/e9/f9c5116c7fcc3b616e6b747b94eb49c03e4c831434f246930a7cf5af69ca/grader-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "541971bb521a126a071c7ff70e2786d9", "sha256": "9fce6b4a62fcbfc3f6b48322c99ee11babe054dc82d3570815e0367771b2e591"}, "downloads": -1, "filename": "grader-1.2.tar.gz", "has_sig": false, "md5_digest": "541971bb521a126a071c7ff70e2786d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50163, "upload_time": "2012-06-08T07:14:52", "upload_time_iso_8601": "2012-06-08T07:14:52.191855Z", "url": "https://files.pythonhosted.org/packages/76/28/65ae5f11fa6e6c44f532d8057dff807b26c005501c533790853abed0f628/grader-1.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dbb49ad3922a57d579d8d86c3b87a1c", "sha256": "b4e8bc3121ec04f2fbad592679dd4313cc82a18f13b374fbe971e07c6df08ce8"}, "downloads": -1, "filename": "grader-1.2.zip", "has_sig": false, "md5_digest": "6dbb49ad3922a57d579d8d86c3b87a1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60365, "upload_time": "2012-06-08T07:14:59", "upload_time_iso_8601": "2012-06-08T07:14:59.821934Z", "url": "https://files.pythonhosted.org/packages/9b/ab/ac18497b25d3ce9907ea44a55a503da3ac8824244df71c3dc53b6f6451ef/grader-1.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "541971bb521a126a071c7ff70e2786d9", "sha256": "9fce6b4a62fcbfc3f6b48322c99ee11babe054dc82d3570815e0367771b2e591"}, "downloads": -1, "filename": "grader-1.2.tar.gz", "has_sig": false, "md5_digest": "541971bb521a126a071c7ff70e2786d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50163, "upload_time": "2012-06-08T07:14:52", "upload_time_iso_8601": "2012-06-08T07:14:52.191855Z", "url": "https://files.pythonhosted.org/packages/76/28/65ae5f11fa6e6c44f532d8057dff807b26c005501c533790853abed0f628/grader-1.2.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dbb49ad3922a57d579d8d86c3b87a1c", "sha256": "b4e8bc3121ec04f2fbad592679dd4313cc82a18f13b374fbe971e07c6df08ce8"}, "downloads": -1, "filename": "grader-1.2.zip", "has_sig": false, "md5_digest": "6dbb49ad3922a57d579d8d86c3b87a1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60365, "upload_time": "2012-06-08T07:14:59", "upload_time_iso_8601": "2012-06-08T07:14:59.821934Z", "url": "https://files.pythonhosted.org/packages/9b/ab/ac18497b25d3ce9907ea44a55a503da3ac8824244df71c3dc53b6f6451ef/grader-1.2.zip", "yanked": false}], "timestamp": "Fri May  8 00:54:59 2020"}