{"info": {"author": "litefeel", "author_email": "litefeel@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Adbtool\nA friendly android adb command-line tool\n\n[![Test \ud83d\ude0e](https://github.com/litefeel/adbtool/workflows/Test%20%F0%9F%98%8E/badge.svg)](https://github.com/litefeel/adbtool/actions)\n[![PyPI](https://img.shields.io/pypi/v/adbtool.svg)](https://pypi.org/project/adbtool/)\n[![PyPI](https://img.shields.io/pypi/l/adbtool.svg)](https://pypi.org/project/adbtool/)\n\n\n### Python Requirements\n* python 3.6+\n* Android SDK\n\n\n### Commands\n\n\n~~~\nadbt -h\nusage: adbt [options]\n\nshow android device list\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        global config\n  --version             show program's version number and exit\n\nsub commands:\n  {devices,push,install,apk}\n    devices             show android device list\n    push                push files to android device\n    install             install apk file\n    apk                 show apk packageName/activityName\n~~~\n\n---\n\n~~~\nadbt devices -h\nusage: adbt [options] devices [-h] [-d DEVICES [DEVICES ...]] [-l]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DEVICES [DEVICES ...], --devices DEVICES [DEVICES ...]\n                        filter of devices, [n | serial | a] n:index of list(start with 1), serial:at least 2 char,\n                        a:all\n  -l, --list            show devices list\n~~~\n---\n~~~\nadbt push -h\nusage: adbt [options] push [-h] [-r] [-n] [-j [HASHJSON]] [--hash [{sha1,mtime}]] [--localdir LOCALDIR]\n                           [--remotedir REMOTEDIR] [--dontpush] [-d [DEVICES [DEVICES ...]]]\n                           [path [path ...]]\n\npositional arguments:\n  path                  file or directory\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r                    recursion all file\n  -n                    only push new file by last modify files, see -j\n  -j [HASHJSON]         hash json file, default: ./$deviceMode_$deviceSerial.json\n  --hash [{sha1,mtime}]\n                        hash function: mtime or sha1, default:mtime\n  --localdir LOCALDIR   local prefix and remote prefix, will replace local prefix to remote prefix\n  --remotedir REMOTEDIR\n                        local prefix and remote prefix, will replace local prefix to remote prefix\n  --dontpush            only outout json file, not really push file to remote\n  -d [DEVICES [DEVICES ...]], --devices [DEVICES [DEVICES ...]]\n                        filter of devices, [a | n | serial] a: all devices n: index of devices list(start with 1)\n                        serial: devices serial (at least 2 char) not argument is show device list\n~~~\n---\n~~~\nadbt install -h\nusage: adbt [options] install [-h] [-f [FILTER [FILTER ...]]] [-r] [-d [DEVICES [DEVICES ...]]] [apkpath]\n\npositional arguments:\n  apkpath\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f [FILTER [FILTER ...]], --filter [FILTER [FILTER ...]]\n                        filtered by file name\n  -r, --run             run app after install\n  -d [DEVICES [DEVICES ...]], --devices [DEVICES [DEVICES ...]]\n                        filter of devices, [a | n | serial] a: all devices n: index of devices list(start with 1)\n                        serial: devices serial (at least 2 char) not argument is show device list\n~~~\n---\n~~~\nadbt apk -h\nusage: adbt [options] apk [-h] [-r] [-d [DEVICES [DEVICES ...]]] [apkpath]\n\npositional arguments:\n  apkpath\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r, --run             run app\n  -d [DEVICES [DEVICES ...]], --devices [DEVICES [DEVICES ...]]\n                        filter of devices, [a | n | serial] a: all devices n: index of devices list(start with 1)\n                        serial: devices serial (at least 2 char) not argument is show device list\n~~~\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/litefeel/adbtool", "keywords": "Android,adb", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adbtool", "package_url": "https://pypi.org/project/adbtool/", "platform": "any", "project_url": "https://pypi.org/project/adbtool/", "project_urls": {"Homepage": "https://github.com/litefeel/adbtool"}, "release_url": "https://pypi.org/project/adbtool/0.0.2/", "requires_dist": ["litefeel-pycommon", "PyYAML", "semantic-version"], "requires_python": ">=3.6", "summary": "A friendly android adb command-line tool", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Adbtool</h1>\n<p>A friendly android adb command-line tool</p>\n<p><a href=\"https://github.com/litefeel/adbtool/actions\" rel=\"nofollow\"><img alt=\"Test \ud83d\ude0e\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86b574787fcc3c46cc18ffdd0be97fbe8d69c623/68747470733a2f2f6769746875622e636f6d2f6c6974656665656c2f616462746f6f6c2f776f726b666c6f77732f546573742532302546302539462539382538452f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/adbtool/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc825751c2b9b119ef421763be232f849f49bca9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616462746f6f6c2e737667\"></a>\n<a href=\"https://pypi.org/project/adbtool/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c313d0f9db299824542d4a3cf7b2555c2d6591e8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f616462746f6f6c2e737667\"></a></p>\n<h3>Python Requirements</h3>\n<ul>\n<li>python 3.6+</li>\n<li>Android SDK</li>\n</ul>\n<h3>Commands</h3>\n<pre><code>adbt -h\nusage: adbt [options]\n\nshow android device list\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n                        global config\n  --version             show program's version number and exit\n\nsub commands:\n  {devices,push,install,apk}\n    devices             show android device list\n    push                push files to android device\n    install             install apk file\n    apk                 show apk packageName/activityName\n</code></pre>\n<hr>\n<pre><code>adbt devices -h\nusage: adbt [options] devices [-h] [-d DEVICES [DEVICES ...]] [-l]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DEVICES [DEVICES ...], --devices DEVICES [DEVICES ...]\n                        filter of devices, [n | serial | a] n:index of list(start with 1), serial:at least 2 char,\n                        a:all\n  -l, --list            show devices list\n</code></pre>\n<hr>\n<pre><code>adbt push -h\nusage: adbt [options] push [-h] [-r] [-n] [-j [HASHJSON]] [--hash [{sha1,mtime}]] [--localdir LOCALDIR]\n                           [--remotedir REMOTEDIR] [--dontpush] [-d [DEVICES [DEVICES ...]]]\n                           [path [path ...]]\n\npositional arguments:\n  path                  file or directory\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r                    recursion all file\n  -n                    only push new file by last modify files, see -j\n  -j [HASHJSON]         hash json file, default: ./$deviceMode_$deviceSerial.json\n  --hash [{sha1,mtime}]\n                        hash function: mtime or sha1, default:mtime\n  --localdir LOCALDIR   local prefix and remote prefix, will replace local prefix to remote prefix\n  --remotedir REMOTEDIR\n                        local prefix and remote prefix, will replace local prefix to remote prefix\n  --dontpush            only outout json file, not really push file to remote\n  -d [DEVICES [DEVICES ...]], --devices [DEVICES [DEVICES ...]]\n                        filter of devices, [a | n | serial] a: all devices n: index of devices list(start with 1)\n                        serial: devices serial (at least 2 char) not argument is show device list\n</code></pre>\n<hr>\n<pre><code>adbt install -h\nusage: adbt [options] install [-h] [-f [FILTER [FILTER ...]]] [-r] [-d [DEVICES [DEVICES ...]]] [apkpath]\n\npositional arguments:\n  apkpath\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f [FILTER [FILTER ...]], --filter [FILTER [FILTER ...]]\n                        filtered by file name\n  -r, --run             run app after install\n  -d [DEVICES [DEVICES ...]], --devices [DEVICES [DEVICES ...]]\n                        filter of devices, [a | n | serial] a: all devices n: index of devices list(start with 1)\n                        serial: devices serial (at least 2 char) not argument is show device list\n</code></pre>\n<hr>\n<pre><code>adbt apk -h\nusage: adbt [options] apk [-h] [-r] [-d [DEVICES [DEVICES ...]]] [apkpath]\n\npositional arguments:\n  apkpath\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r, --run             run app\n  -d [DEVICES [DEVICES ...]], --devices [DEVICES [DEVICES ...]]\n                        filter of devices, [a | n | serial] a: all devices n: index of devices list(start with 1)\n                        serial: devices serial (at least 2 char) not argument is show device list\n</code></pre>\n\n          </div>"}, "last_serial": 6756344, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2dac90d799244c2aced228dc8215ab0d", "sha256": "27973d5d5bf8d487ee48c0ed099cc683159a32a0b4e6777b68bc935119f28954"}, "downloads": -1, "filename": "adbtool-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2dac90d799244c2aced228dc8215ab0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11824, "upload_time": "2019-10-21T15:26:03", "upload_time_iso_8601": "2019-10-21T15:26:03.106006Z", "url": "https://files.pythonhosted.org/packages/33/ff/87d63d8c736a3866b7fe4176b2a7ed1f5169346c0e6cecf307367c9b508b/adbtool-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bffb1244793242933b622f3466cbaeb", "sha256": "91616fe0aec2e9a05fcff862fd1d0e209f57af620926d36ec978481c2cfb9b62"}, "downloads": -1, "filename": "adbtool-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2bffb1244793242933b622f3466cbaeb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9987, "upload_time": "2019-10-21T16:58:08", "upload_time_iso_8601": "2019-10-21T16:58:08.132929Z", "url": "https://files.pythonhosted.org/packages/44/9f/a959613626c87b15d2b52aa8b126a698b3d1f22149bf750e8d1206fa2762/adbtool-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "84d77c00b3340c300e696ebd73e6bfe7", "sha256": "0d2ec94e8e2804257da254a0d9d53a0da55e6803612f441d73371ba3f82a95a0"}, "downloads": -1, "filename": "adbtool-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "84d77c00b3340c300e696ebd73e6bfe7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11866, "upload_time": "2020-03-05T17:07:26", "upload_time_iso_8601": "2020-03-05T17:07:26.724172Z", "url": "https://files.pythonhosted.org/packages/21/55/ff4952fb1f58ab83d049b978d9a48c7e8f29da79df5f883ecb8841f921aa/adbtool-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa7edfac81e67521af150cd1ff52c399", "sha256": "1a3f84bad9184d4d4605898f25186868cd5bf0e61207b557095e791228ce1ee2"}, "downloads": -1, "filename": "adbtool-0.0.2.tar.gz", "has_sig": false, "md5_digest": "aa7edfac81e67521af150cd1ff52c399", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9933, "upload_time": "2020-03-05T17:07:27", "upload_time_iso_8601": "2020-03-05T17:07:27.746794Z", "url": "https://files.pythonhosted.org/packages/7d/99/ea3d6c055d0dc591117b799f25fe410df99a0e2ccb39224ae2c0912b96e0/adbtool-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "84d77c00b3340c300e696ebd73e6bfe7", "sha256": "0d2ec94e8e2804257da254a0d9d53a0da55e6803612f441d73371ba3f82a95a0"}, "downloads": -1, "filename": "adbtool-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "84d77c00b3340c300e696ebd73e6bfe7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11866, "upload_time": "2020-03-05T17:07:26", "upload_time_iso_8601": "2020-03-05T17:07:26.724172Z", "url": "https://files.pythonhosted.org/packages/21/55/ff4952fb1f58ab83d049b978d9a48c7e8f29da79df5f883ecb8841f921aa/adbtool-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa7edfac81e67521af150cd1ff52c399", "sha256": "1a3f84bad9184d4d4605898f25186868cd5bf0e61207b557095e791228ce1ee2"}, "downloads": -1, "filename": "adbtool-0.0.2.tar.gz", "has_sig": false, "md5_digest": "aa7edfac81e67521af150cd1ff52c399", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9933, "upload_time": "2020-03-05T17:07:27", "upload_time_iso_8601": "2020-03-05T17:07:27.746794Z", "url": "https://files.pythonhosted.org/packages/7d/99/ea3d6c055d0dc591117b799f25fe410df99a0e2ccb39224ae2c0912b96e0/adbtool-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:34 2020"}