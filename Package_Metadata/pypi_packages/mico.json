{"info": {"author": "Andres J. Diaz", "author_email": "ajdiaz@connectical.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "===========================================\nMico: a monkey driven cloud management tool\n===========================================\n\nMico is a tool-toy to manage a number of hosts deployed in cloud services\n(currently only support Amazon AWS), and also allows you to deploy new hosts\nwith specified template or create autoscaling groups and manage them easily.\n\nInstallation\n------------\nAs usual, mico is available from pypi_, and can be installed using ``pip``\nor ``easy_install``::\n\n  pip install mico\n\nOr::\n\n  easy_install mico\n\n.. _pypi: http://pypi.python.org/pypi\n\nConfigure Mico\n--------------\n\nMico just need an AWS key ID and AWS secret key to run. By default mico just\ntake this variables from the OS environment::\n\n    export AWS_ACCESS_KEY_ID=\"*foo*\"\n    export AWS_SECRET_ACCESS_KEY=\"*bar*\"\n\nCreating templates\n------------------\n\nMico works using the concept of template. A template is just a python code\n(with steroids which we call *libraries*), the template can implements\na number of functions. Here are a simple and stupid template (``stupid.py``)\n\n.. code:: python\n\n    def hello():\n      print \"Hello world!\"\n\n    def bye():\n      print \"Bye cruel world!\"\n\n    def hola(args):\n      print \"Hola %s\" % args\n\n\nOnce, your template is created, you need to put it into a mico template path\n(by default uses ``/etc/mico`` and ``~/.config/mico/``, and the current\nworking directory.\n\nThen you can just run mico::\n\n    mico -H my_new_host stupid:hello\n    Hello world!\n\n    mico -H my_new_host stupid:bye\n    Bye cruel world!\n\n    mico stupid:hola everyone\n    Hola everyone\n\nYou can see more complex (and useful!) templates in `examples directory`_.\n\n.. _`examples directory`: tree/master/examples", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://ajdiaz.github.com/mico", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "mico", "package_url": "https://pypi.org/project/mico/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mico/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://ajdiaz.github.com/mico"}, "release_url": "https://pypi.org/project/mico/0.1/", "requires_dist": null, "requires_python": null, "summary": "A monkey driven cloud management", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mico is a tool-toy to manage a number of hosts deployed in cloud services\n(currently only support Amazon AWS), and also allows you to deploy new hosts\nwith specified template or create autoscaling groups and manage them easily.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>As usual, mico is available from <a href=\"http://pypi.python.org/pypi\" rel=\"nofollow\">pypi</a>, and can be installed using <tt>pip</tt>\nor <tt>easy_install</tt>:</p>\n<pre>pip install mico\n</pre>\n<p>Or:</p>\n<pre>easy_install mico\n</pre>\n</div>\n<div id=\"configure-mico\">\n<h2>Configure Mico</h2>\n<p>Mico just need an AWS key ID and AWS secret key to run. By default mico just\ntake this variables from the OS environment:</p>\n<pre>export AWS_ACCESS_KEY_ID=\"*foo*\"\nexport AWS_SECRET_ACCESS_KEY=\"*bar*\"\n</pre>\n</div>\n<div id=\"creating-templates\">\n<h2>Creating templates</h2>\n<p>Mico works using the concept of template. A template is just a python code\n(with steroids which we call <em>libraries</em>), the template can implements\na number of functions. Here are a simple and stupid template (<tt>stupid.py</tt>)</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">hello</span><span class=\"p\">():</span>\n  <span class=\"nb\">print</span> <span class=\"s2\">\"Hello world!\"</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">bye</span><span class=\"p\">():</span>\n  <span class=\"nb\">print</span> <span class=\"s2\">\"Bye cruel world!\"</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">hola</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n  <span class=\"nb\">print</span> <span class=\"s2\">\"Hola </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">args</span>\n</pre>\n<p>Once, your template is created, you need to put it into a mico template path\n(by default uses <tt>/etc/mico</tt> and <tt><span class=\"pre\">~/.config/mico/</span></tt>, and the current\nworking directory.</p>\n<p>Then you can just run mico:</p>\n<pre>mico -H my_new_host stupid:hello\nHello world!\n\nmico -H my_new_host stupid:bye\nBye cruel world!\n\nmico stupid:hola everyone\nHola everyone\n</pre>\n<p>You can see more complex (and useful!) templates in <a href=\"tree/master/examples\" rel=\"nofollow\">examples directory</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 709778, "releases": {"0.1": [{"comment_text": "built for Linux-3.8.0-22-generic-x86_64-with-glibc2.7", "digests": {"md5": "b2ce4a3ba317efe1e0ded4cdedfc3d71", "sha256": "d5c3349b5cf5972ad44990a1ee911dbf487d4d934affcec98eaac03efef6246e"}, "downloads": -1, "filename": "mico-0.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "b2ce4a3ba317efe1e0ded4cdedfc3d71", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 78314, "upload_time": "2013-05-27T18:57:34", "upload_time_iso_8601": "2013-05-27T18:57:34.846043Z", "url": "https://files.pythonhosted.org/packages/7c/94/b649c354bf6f4b42f82dcef180170980a0c2ac812c497364bc94b6899b98/mico-0.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "92a78f33e219797a18c9fca9bf946e88", "sha256": "977ca1a4d143567910d6df00b59e44285e35e4d34e3d8f1eabd065e78c11b544"}, "downloads": -1, "filename": "mico-0.1.tar.gz", "has_sig": false, "md5_digest": "92a78f33e219797a18c9fca9bf946e88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34337, "upload_time": "2013-05-27T18:57:30", "upload_time_iso_8601": "2013-05-27T18:57:30.016331Z", "url": "https://files.pythonhosted.org/packages/8e/8a/dbdb177e4da52176545e7435f00b71d1104b7a7f6aefa02bc7f3c47f9c66/mico-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Linux-3.8.0-22-generic-x86_64-with-glibc2.7", "digests": {"md5": "b2ce4a3ba317efe1e0ded4cdedfc3d71", "sha256": "d5c3349b5cf5972ad44990a1ee911dbf487d4d934affcec98eaac03efef6246e"}, "downloads": -1, "filename": "mico-0.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "b2ce4a3ba317efe1e0ded4cdedfc3d71", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 78314, "upload_time": "2013-05-27T18:57:34", "upload_time_iso_8601": "2013-05-27T18:57:34.846043Z", "url": "https://files.pythonhosted.org/packages/7c/94/b649c354bf6f4b42f82dcef180170980a0c2ac812c497364bc94b6899b98/mico-0.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "92a78f33e219797a18c9fca9bf946e88", "sha256": "977ca1a4d143567910d6df00b59e44285e35e4d34e3d8f1eabd065e78c11b544"}, "downloads": -1, "filename": "mico-0.1.tar.gz", "has_sig": false, "md5_digest": "92a78f33e219797a18c9fca9bf946e88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34337, "upload_time": "2013-05-27T18:57:30", "upload_time_iso_8601": "2013-05-27T18:57:30.016331Z", "url": "https://files.pythonhosted.org/packages/8e/8a/dbdb177e4da52176545e7435f00b71d1104b7a7f6aefa02bc7f3c47f9c66/mico-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:22 2020"}