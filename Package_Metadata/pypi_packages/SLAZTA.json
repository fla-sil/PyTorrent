{"info": {"author": "Ash Munro", "author_email": "anne.munro@canada.com", "bugtrack_url": null, "classifiers": [], "description": "La version fran\u00e7aise suit.\n\nThe SLAZTA scripts are a set of tools used to create Self-contained Labour Areas (in French Zones de Travail Autonomes) from labour commuting data. In the international literature SLAs are also referred to as functional areas. \n\nThe script is designed to take a set of commuting flows between areas of any type and group areas into clusters meeting a user\u0092s definition for self-containment. As a result of this clustering, the self-contained labour areas created are territorial units where most of the residents with jobs are working in the same area and most of the jobs in each area are filled by workers residing in the area.\nDeveloped at the Centre for Special Business Projects (Statistics Canada), this is a Python version of a code that was originally implemented in SAS\u00ae. It has been rewritten in Python to improve the replicability, transferability and adaptability of this methodology through open source software. \n\nIn the current specification, SLAZTA focuses on the creation of self-contained clusters for the non-metropolitan municipalities of Canada, preserving in this way the pre-existing census metropolitan area and census agglomeration geography.\n\nThe only requirement to run the program is a commuting data file formatted as a CSV file with three columns: RES, POW, and TotalFlow. The RES and POW columns should contain a numeric code representing the origin and destination areas for the flow, while the TotalFlow column should contain the numeric value of that commuting flow.\n\n**Description du projet**\n\nLes scripts SLAZTA sont un ensemble d'outils utilis\u00e9s pour cr\u00e9er des Zones de Travail Autonomes \u0096 ZTA \u0096 en anglais Self-contained Labour Areas) \u00e0 partir de donn\u00e9es sur les d\u00e9placements domicile-travail. Dans la litt\u00e9rature internationale, les ZTA sont aussi appel\u00e9s zones fonctionnelles. \n\nLe script est con\u00e7u pour considerer un ensemble de flux de migration alternante entre les zones de tout type et de regrouper les zones en clusters r\u00e9pondant \u00e0 la d\u00e9finition de l'utilisateur pour l'autonomie. En cons\u00e9quence de ce regroupement, les zones de travail autonomes cr\u00e9\u00e9es sont des unit\u00e9s territoriales o\u00f9 la plupart des r\u00e9sidents ayant un emploi travaillent dans la m\u00eame zone et o\u00f9 la plupart des emplois de chaque zone sont occup\u00e9s par des travailleurs r\u00e9sidants dans la zone.\nD\u00e9velopp\u00e9 au Centre des Projets Sp\u00e9ciaux sur les Entreprise (Statistique Canada), il s'agit d'une version Python d'un code qui a \u00e9t\u00e9 developp\u00e9 \u00e0 l'origine sous SAS\u00ae. Il a \u00e9t\u00e9 r\u00e9\u00e9crit en Python pour am\u00e9liorer la reproductibilit\u00e9, la transf\u00e9rabilit\u00e9 et l'adaptabilit\u00e9 de cette m\u00e9thodologie par le biais de logiciels libres.\n \nDans la sp\u00e9cification actuelle, SLAZTA se concentre sur la cr\u00e9ation de grappes autonomes pour les municipalit\u00e9s non m\u00e9tropolitaines du Canada, pr\u00e9servant ainsi la g\u00e9ographie pr\u00e9existante des r\u00e9gions m\u00e9tropolitaines de recensement et des agglom\u00e9rations de recensement.\n\nLa seule exigence pour ex\u00e9cuter le programme est un fichier de donn\u00e9es sur les d\u00e9placements domicile-travail format\u00e9 en fichier CSV \u00e0 trois colonnes : RES, POW et TotalFlow. Les colonnes RES et POW doivent contenir un code num\u00e9rique repr\u00e9sentant les zones d'origine et de destination du flux, tandis que la colonne TotalFlow doit contenir la valeur num\u00e9rique de ce flux de d\u00e9placement domicile-travail.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CSBP-CPSE/SLA-ZTA/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "SLAZTA", "package_url": "https://pypi.org/project/SLAZTA/", "platform": "", "project_url": "https://pypi.org/project/SLAZTA/", "project_urls": {"Homepage": "https://github.com/CSBP-CPSE/SLA-ZTA/"}, "release_url": "https://pypi.org/project/SLAZTA/0.42/", "requires_dist": null, "requires_python": "", "summary": "SLAZTA is a tool to create self-contained areas from commuting data.", "version": "0.42", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>La version fran\u00e7aise suit.</p>\n<p>The SLAZTA scripts are a set of tools used to create Self-contained Labour Areas (in French Zones de Travail Autonomes) from labour commuting data. In the international literature SLAs are also referred to as functional areas.</p>\n<p>The script is designed to take a set of commuting flows between areas of any type and group areas into clusters meeting a user\u0092s definition for self-containment. As a result of this clustering, the self-contained labour areas created are territorial units where most of the residents with jobs are working in the same area and most of the jobs in each area are filled by workers residing in the area.\nDeveloped at the Centre for Special Business Projects (Statistics Canada), this is a Python version of a code that was originally implemented in SAS\u00ae. It has been rewritten in Python to improve the replicability, transferability and adaptability of this methodology through open source software.</p>\n<p>In the current specification, SLAZTA focuses on the creation of self-contained clusters for the non-metropolitan municipalities of Canada, preserving in this way the pre-existing census metropolitan area and census agglomeration geography.</p>\n<p>The only requirement to run the program is a commuting data file formatted as a CSV file with three columns: RES, POW, and TotalFlow. The RES and POW columns should contain a numeric code representing the origin and destination areas for the flow, while the TotalFlow column should contain the numeric value of that commuting flow.</p>\n<p><strong>Description du projet</strong></p>\n<p>Les scripts SLAZTA sont un ensemble d\u2019outils utilis\u00e9s pour cr\u00e9er des Zones de Travail Autonomes \u0096 ZTA \u0096 en anglais Self-contained Labour Areas) \u00e0 partir de donn\u00e9es sur les d\u00e9placements domicile-travail. Dans la litt\u00e9rature internationale, les ZTA sont aussi appel\u00e9s zones fonctionnelles.</p>\n<p>Le script est con\u00e7u pour considerer un ensemble de flux de migration alternante entre les zones de tout type et de regrouper les zones en clusters r\u00e9pondant \u00e0 la d\u00e9finition de l\u2019utilisateur pour l\u2019autonomie. En cons\u00e9quence de ce regroupement, les zones de travail autonomes cr\u00e9\u00e9es sont des unit\u00e9s territoriales o\u00f9 la plupart des r\u00e9sidents ayant un emploi travaillent dans la m\u00eame zone et o\u00f9 la plupart des emplois de chaque zone sont occup\u00e9s par des travailleurs r\u00e9sidants dans la zone.\nD\u00e9velopp\u00e9 au Centre des Projets Sp\u00e9ciaux sur les Entreprise (Statistique Canada), il s\u2019agit d\u2019une version Python d\u2019un code qui a \u00e9t\u00e9 developp\u00e9 \u00e0 l\u2019origine sous SAS\u00ae. Il a \u00e9t\u00e9 r\u00e9\u00e9crit en Python pour am\u00e9liorer la reproductibilit\u00e9, la transf\u00e9rabilit\u00e9 et l\u2019adaptabilit\u00e9 de cette m\u00e9thodologie par le biais de logiciels libres.</p>\n<p>Dans la sp\u00e9cification actuelle, SLAZTA se concentre sur la cr\u00e9ation de grappes autonomes pour les municipalit\u00e9s non m\u00e9tropolitaines du Canada, pr\u00e9servant ainsi la g\u00e9ographie pr\u00e9existante des r\u00e9gions m\u00e9tropolitaines de recensement et des agglom\u00e9rations de recensement.</p>\n<p>La seule exigence pour ex\u00e9cuter le programme est un fichier de donn\u00e9es sur les d\u00e9placements domicile-travail format\u00e9 en fichier CSV \u00e0 trois colonnes : RES, POW et TotalFlow. Les colonnes RES et POW doivent contenir un code num\u00e9rique repr\u00e9sentant les zones d\u2019origine et de destination du flux, tandis que la colonne TotalFlow doit contenir la valeur num\u00e9rique de ce flux de d\u00e9placement domicile-travail.</p>\n\n          </div>"}, "last_serial": 6410806, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "49dd198c10bbb544325ed16cc54c37e9", "sha256": "cc02fbf86a7e1b63e83f7238e826d63fc804667f334bcdb5ed6391922c5ac5ae"}, "downloads": -1, "filename": "SLAZTA-0.1.zip", "has_sig": false, "md5_digest": "49dd198c10bbb544325ed16cc54c37e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6315, "upload_time": "2019-11-14T16:34:16", "upload_time_iso_8601": "2019-11-14T16:34:16.317690Z", "url": "https://files.pythonhosted.org/packages/ff/c8/47ceed91f2b2d7b1832f75921d077104188501aa169fcf6ebd1e409c6da7/SLAZTA-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "fe029dc608dbde8c586b9bce4741c70a", "sha256": "b32cec96d31f0fe59b023e6d45b230acd0f5cdd0661f29c80adb3306a69282d4"}, "downloads": -1, "filename": "SLAZTA-0.2.zip", "has_sig": false, "md5_digest": "fe029dc608dbde8c586b9bce4741c70a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6188, "upload_time": "2019-11-14T16:47:27", "upload_time_iso_8601": "2019-11-14T16:47:27.964033Z", "url": "https://files.pythonhosted.org/packages/d5/47/5524e09fdacdd10406c43d46959dc6b4213978962c59623028b45cab02f0/SLAZTA-0.2.zip", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "5730354b4d51bdad6600b8bf091296b8", "sha256": "d6e370dd5226e01472bf75811a8dde9887dce7d8a9e05d320f0d8f928ee83bbf"}, "downloads": -1, "filename": "SLAZTA-0.3.zip", "has_sig": false, "md5_digest": "5730354b4d51bdad6600b8bf091296b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8226, "upload_time": "2020-01-07T19:59:28", "upload_time_iso_8601": "2020-01-07T19:59:28.522411Z", "url": "https://files.pythonhosted.org/packages/b0/fa/b68a0862b9da2f0ceb2bd8eabf169f4fb611fad901821d7d19d22c5c7dc2/SLAZTA-0.3.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "fd68ada50997f2e5eb6ae39417a6d32d", "sha256": "54b271029f7f649d0d15fc27c04d2fc11a47279de67de702c5a96d986b305b0a"}, "downloads": -1, "filename": "SLAZTA-0.4.zip", "has_sig": false, "md5_digest": "fd68ada50997f2e5eb6ae39417a6d32d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6633, "upload_time": "2020-01-07T20:44:28", "upload_time_iso_8601": "2020-01-07T20:44:28.178859Z", "url": "https://files.pythonhosted.org/packages/d6/52/61ccc93b827efe0476904d7e3a51137dfd1a943a4de27230a53bcf22f72f/SLAZTA-0.4.zip", "yanked": false}], "0.41": [{"comment_text": "", "digests": {"md5": "6447f5d342ed2dd762a4e1c777745eef", "sha256": "7dc8c8c5563f0ef80878e1a2a7137c54eff57b8af1a43940feaecfd3db4bf35a"}, "downloads": -1, "filename": "SLAZTA-0.41.zip", "has_sig": false, "md5_digest": "6447f5d342ed2dd762a4e1c777745eef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6642, "upload_time": "2020-01-07T20:46:07", "upload_time_iso_8601": "2020-01-07T20:46:07.819258Z", "url": "https://files.pythonhosted.org/packages/2a/17/29eee6116b0bee8cd6e8b7cdc875894b7739d60ee79ab4ba62ea2adf70d9/SLAZTA-0.41.zip", "yanked": false}], "0.42": [{"comment_text": "", "digests": {"md5": "7dad8c7a1d95af0b65b8f246301c32b5", "sha256": "16994662b12b3c6283b1e645ae9c1cdedbaf77b0e2c837b1b828ec00b8af24a1"}, "downloads": -1, "filename": "SLAZTA-0.42.zip", "has_sig": false, "md5_digest": "7dad8c7a1d95af0b65b8f246301c32b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6637, "upload_time": "2020-01-07T20:52:04", "upload_time_iso_8601": "2020-01-07T20:52:04.758784Z", "url": "https://files.pythonhosted.org/packages/7e/3e/1136e2407e00e64b68cef14d86e379ee06c68dd0afb4dc1f2cbdfd00e7f5/SLAZTA-0.42.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7dad8c7a1d95af0b65b8f246301c32b5", "sha256": "16994662b12b3c6283b1e645ae9c1cdedbaf77b0e2c837b1b828ec00b8af24a1"}, "downloads": -1, "filename": "SLAZTA-0.42.zip", "has_sig": false, "md5_digest": "7dad8c7a1d95af0b65b8f246301c32b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6637, "upload_time": "2020-01-07T20:52:04", "upload_time_iso_8601": "2020-01-07T20:52:04.758784Z", "url": "https://files.pythonhosted.org/packages/7e/3e/1136e2407e00e64b68cef14d86e379ee06c68dd0afb4dc1f2cbdfd00e7f5/SLAZTA-0.42.zip", "yanked": false}], "timestamp": "Fri May  8 03:08:30 2020"}