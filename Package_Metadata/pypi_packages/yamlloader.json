{"info": {"author": "Jonas Eschle \"Mayou36\", Johannes Lade \"SebastianJL\"", "author_email": "jonas.eschle@phynix.science, johannes.lade@phynix.science", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": ".. image:: https://travis-ci.org/Phynix/yamlloader.svg?branch=master\n    :target: https://travis-ci.org/Phynix/yamlloader\n.. image:: https://img.shields.io/pypi/pyversions/yamlloader.svg\n    :target: https://pypi.org/project/yamlloader/\n.. image:: https://landscape.io/github/Phynix/yamlloader/master/landscape.svg?style=flat\n    :target: https://landscape.io/github/Phynix/yamlloader/master\n    :alt: Code Health\n.. image:: https://www.versioneye.com/user/projects/5a2f00060fb24f07e40988bf/badge.svg?style=flat-square\n    :target: https://www.versioneye.com/user/projects/5a2f00060fb24f07e40988bf\n    :alt: Dependency Status\n.. image:: https://coveralls.io/repos/github/Phynix/yamlloader/badge.svg\n    :target: https://coveralls.io/github/Phynix/yamlloader\n\nyamlloader\n==========\n\n\nThis module provides loaders and dumpers for PyYAML. Currently, an OrderedDict loader/dumper is\nimplemented, allowing to keep items order\nwhen loading resp. dumping a file from/to an OrderedDict (Python 3.7: Also regular dicts are supported and are the default items to be loaded to. As of Python 3.7 preservation of insertion order is a language feature of regular dicts.)\n\nThis project was originally mirrored from\n`yamlordereddict <https://github.com/fmenabe/python-yamlordereddictloader>`_\nMany thanks to the original author Fran\u00e7ois M\u00e9nab\u00e9!\nThe library contains several improvements including automated testing and\nthe much faster C-versions of the Loaders/Dumpers.\n\n\n`API Documentation <https://phynix.github.io/yamlloader/index.html>`_\n\n\nInstall\n-------\nThere is a pip and a conda version available\n\n.. code-block:: bash\n\n    $ pip install yamlloader\n\nor\n\n.. code-block:: bash\n\n    $ conda install yamlloader -c phynix  # it is also in conda-forge\n\n\nBut does [your special case here] also work?\n--------------------------------------------\n\nTests are run continuously using randomly generated yaml files.\nAlso, there are no fails to be expected.\n\nStill, if you are concerned that *your* special case may breaks in the future, please\nadd your own tests as `test_ext_anyname.py` under `tests/` or let us know about your needs.\nThis guarantees that no code will be added that breaks *your* case.\n\n\nC vs non-C version\n------------------\n\nA significant speedup can be reached by replacing the Loader* and Dumper* classes by CLoader*\nand CDumper*. The package hereby relies on the implementations from PyYAML. If they have not\nbeen compiled, *yamlloader* **automatically** falls back to the non-C versions.\n\nTherefore using the C-version is safe: if it is not available, the pure Python version is\nautomatically used.\n\nUsage examples\n==============\n\n\nLoader usage\n------------\n\n.. code-block:: python\n\n    import yaml\n    import yamlloader\n\n    with open('myfile.yml') as yaml_file:\n        data = yaml.load(yaml_file,\n                         Loader=yamlloader.ordereddict.CLoader)\n                         # CLoader is faster than Loader\n\n**Note:** For using the safe loader (which takes standard YAML tags and does\nnot construct arbitrary Python objects), replace ``yamlloader.ordereddict.CLoader`` by\n``yamlloader.ordereddict.CSafeLoader``.\n\nDumper usage\n------------\n\n.. code-block:: python\n\n    import yaml\n    import yamlloader\n    from collections import OrderedDict\n\n    data = OrderedDict([('key1', 'val1'),\n                        ('key2', OrderedDict([('key21', 'val21'),\n                                              ('key22', 'val22')]))])\n\n    with open('myfile.yaml', 'w') as yaml_file:\n        yaml.dump(data, yaml_file,\n                  Dumper=yamlloader.ordereddict.CDumper)\n\n**Note:** For using the safe dumper (which produce standard YAML tags and does\nnot represent arbitrary Python objects), replace ``yamlloader.ordereddict.CDumper`` by\n``yamlloader.ordereddict.CSafeDumper``.\n\n\nFAQ\n===\n\nThe C version does not work\n---------------------------\nCheck if yaml.cyaml exists. If not, the cyaml module was not compiled during the installation of\nyaml (pyyaml). Make sure that cython is installed (`pip install Cython`) and the yaml.h file is\nthere (apt: libyaml-dev).\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/Phynix/yamlloader", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Phynix/yamlloader", "keywords": "YAML,loader,dumper,ordered,OrderedDict,pyyaml", "license": "MIT License", "maintainer": "Jonas Eschle \"Mayou36\"", "maintainer_email": "jonas.eschle@phynix.science", "name": "yamlloader", "package_url": "https://pypi.org/project/yamlloader/", "platform": "", "project_url": "https://pypi.org/project/yamlloader/", "project_urls": {"Download": "https://github.com/Phynix/yamlloader", "Homepage": "https://github.com/Phynix/yamlloader"}, "release_url": "https://pypi.org/project/yamlloader/0.5.5/", "requires_dist": ["pyyaml"], "requires_python": ">=2.7", "summary": "Ordered YAML loader and dumper for PyYAML.", "version": "0.5.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Phynix/yamlloader\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Phynix/yamlloader.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23e34d4be695b8652b9d0162e9cb83ec8d05df22/68747470733a2f2f7472617669732d63692e6f72672f5068796e69782f79616d6c6c6f616465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.org/project/yamlloader/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/yamlloader.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/afb630b55afcdeabff3d9424eb2b3d690c1c59da/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f79616d6c6c6f616465722e737667\"></a>\n<a href=\"https://landscape.io/github/Phynix/yamlloader/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca0a100c1f16bcaa8e735cdef3ade2ce89bc7268/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f5068796e69782f79616d6c6c6f616465722f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://www.versioneye.com/user/projects/5a2f00060fb24f07e40988bf\" rel=\"nofollow\"><img alt=\"Dependency Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29859edc53e1c383b9d6ccac7311f49d611c163b/68747470733a2f2f7777772e76657273696f6e6579652e636f6d2f757365722f70726f6a656374732f3561326630303036306662323466303765343039383862662f62616467652e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://coveralls.io/github/Phynix/yamlloader\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/Phynix/yamlloader/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcf0ea3f05fcbdef582c8b2b91e839471386ef8e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f5068796e69782f79616d6c6c6f616465722f62616467652e737667\"></a>\n<div id=\"yamlloader\">\n<h2>yamlloader</h2>\n<p>This module provides loaders and dumpers for PyYAML. Currently, an OrderedDict loader/dumper is\nimplemented, allowing to keep items order\nwhen loading resp. dumping a file from/to an OrderedDict (Python 3.7: Also regular dicts are supported and are the default items to be loaded to. As of Python 3.7 preservation of insertion order is a language feature of regular dicts.)</p>\n<p>This project was originally mirrored from\n<a href=\"https://github.com/fmenabe/python-yamlordereddictloader\" rel=\"nofollow\">yamlordereddict</a>\nMany thanks to the original author Fran\u00e7ois M\u00e9nab\u00e9!\nThe library contains several improvements including automated testing and\nthe much faster C-versions of the Loaders/Dumpers.</p>\n<p><a href=\"https://phynix.github.io/yamlloader/index.html\" rel=\"nofollow\">API Documentation</a></p>\n<div id=\"install\">\n<h3>Install</h3>\n<p>There is a pip and a conda version available</p>\n<pre>$ pip install yamlloader\n</pre>\n<p>or</p>\n<pre>$ conda install yamlloader -c phynix  <span class=\"c1\"># it is also in conda-forge</span>\n</pre>\n</div>\n<div id=\"but-does-your-special-case-here-also-work\">\n<h3>But does [your special case here] also work?</h3>\n<p>Tests are run continuously using randomly generated yaml files.\nAlso, there are no fails to be expected.</p>\n<p>Still, if you are concerned that <em>your</em> special case may breaks in the future, please\nadd your own tests as <cite>test_ext_anyname.py</cite> under <cite>tests/</cite> or let us know about your needs.\nThis guarantees that no code will be added that breaks <em>your</em> case.</p>\n</div>\n<div id=\"c-vs-non-c-version\">\n<h3>C vs non-C version</h3>\n<p>A significant speedup can be reached by replacing the Loader* and Dumper* classes by CLoader*\nand CDumper*. The package hereby relies on the implementations from PyYAML. If they have not\nbeen compiled, <em>yamlloader</em> <strong>automatically</strong> falls back to the non-C versions.</p>\n<p>Therefore using the C-version is safe: if it is not available, the pure Python version is\nautomatically used.</p>\n</div>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage examples</h2>\n<div id=\"loader-usage\">\n<h3>Loader usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">yaml</span>\n<span class=\"kn\">import</span> <span class=\"nn\">yamlloader</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'myfile.yml'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">yaml_file</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">yaml</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">yaml_file</span><span class=\"p\">,</span>\n                     <span class=\"n\">Loader</span><span class=\"o\">=</span><span class=\"n\">yamlloader</span><span class=\"o\">.</span><span class=\"n\">ordereddict</span><span class=\"o\">.</span><span class=\"n\">CLoader</span><span class=\"p\">)</span>\n                     <span class=\"c1\"># CLoader is faster than Loader</span>\n</pre>\n<p><strong>Note:</strong> For using the safe loader (which takes standard YAML tags and does\nnot construct arbitrary Python objects), replace <tt>yamlloader.ordereddict.CLoader</tt> by\n<tt>yamlloader.ordereddict.CSafeLoader</tt>.</p>\n</div>\n<div id=\"dumper-usage\">\n<h3>Dumper usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">yaml</span>\n<span class=\"kn\">import</span> <span class=\"nn\">yamlloader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">OrderedDict</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'key1'</span><span class=\"p\">,</span> <span class=\"s1\">'val1'</span><span class=\"p\">),</span>\n                    <span class=\"p\">(</span><span class=\"s1\">'key2'</span><span class=\"p\">,</span> <span class=\"n\">OrderedDict</span><span class=\"p\">([(</span><span class=\"s1\">'key21'</span><span class=\"p\">,</span> <span class=\"s1\">'val21'</span><span class=\"p\">),</span>\n                                          <span class=\"p\">(</span><span class=\"s1\">'key22'</span><span class=\"p\">,</span> <span class=\"s1\">'val22'</span><span class=\"p\">)]))])</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'myfile.yaml'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">yaml_file</span><span class=\"p\">:</span>\n    <span class=\"n\">yaml</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">yaml_file</span><span class=\"p\">,</span>\n              <span class=\"n\">Dumper</span><span class=\"o\">=</span><span class=\"n\">yamlloader</span><span class=\"o\">.</span><span class=\"n\">ordereddict</span><span class=\"o\">.</span><span class=\"n\">CDumper</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Note:</strong> For using the safe dumper (which produce standard YAML tags and does\nnot represent arbitrary Python objects), replace <tt>yamlloader.ordereddict.CDumper</tt> by\n<tt>yamlloader.ordereddict.CSafeDumper</tt>.</p>\n</div>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<h2 id=\"the-c-version-does-not-work\"><span class=\"section-subtitle\">The C version does not work</span></h2>\n<p>Check if yaml.cyaml exists. If not, the cyaml module was not compiled during the installation of\nyaml (pyyaml). Make sure that cython is installed (<cite>pip install Cython</cite>) and the yaml.h file is\nthere (apt: libyaml-dev).</p>\n</div>\n\n          </div>"}, "last_serial": 4112001, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "110c351c386851f599be670c04680c09", "sha256": "7d9cad95e01aad1188bd4144dabd0cc682eb9b0c5b4ea3ac11845b734f8ae254"}, "downloads": -1, "filename": "yamlloader-0.5.0.tar.gz", "has_sig": false, "md5_digest": "110c351c386851f599be670c04680c09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4920, "upload_time": "2018-01-22T09:48:33", "upload_time_iso_8601": "2018-01-22T09:48:33.582845Z", "url": "https://files.pythonhosted.org/packages/c5/1b/ac3879d7a012978dfb79985783ef77ea43e91a993133577760ed075821e6/yamlloader-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "a1af6e1f599b0bd47e50ce34158d9aa1", "sha256": "1d06eb8cbe7a508fb8d02daaf11d630f8f8041081dbac834b5c20a7306953208"}, "downloads": -1, "filename": "yamlloader-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a1af6e1f599b0bd47e50ce34158d9aa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 7086, "upload_time": "2018-01-26T19:36:50", "upload_time_iso_8601": "2018-01-26T19:36:50.151584Z", "url": "https://files.pythonhosted.org/packages/75/be/ade5cdcabfc1b7255786e7850d95950738cfff4dbd4be1efd1a2c88d5516/yamlloader-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aadb338c43180aa6cc484a3a16a0ca66", "sha256": "8b04f73e98853b618dbb1ccddc2e1b786d34aecd7e8cca3060aada969da02b4e"}, "downloads": -1, "filename": "yamlloader-0.5.1.tar.gz", "has_sig": false, "md5_digest": "aadb338c43180aa6cc484a3a16a0ca66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 4868, "upload_time": "2018-01-26T19:36:51", "upload_time_iso_8601": "2018-01-26T19:36:51.689796Z", "url": "https://files.pythonhosted.org/packages/8d/5c/c06b2f24ca2156809b20311ee0c66c57396b4b1a6d18d7ef3a1d5a50019c/yamlloader-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "be070f1a82e6f482cb3be6c9efaffa9b", "sha256": "334b205b586211c9fc40380a2fc94d565154fa82926880c75143f44cfa6c8261"}, "downloads": -1, "filename": "yamlloader-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "be070f1a82e6f482cb3be6c9efaffa9b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 7893, "upload_time": "2018-02-08T14:54:01", "upload_time_iso_8601": "2018-02-08T14:54:01.000713Z", "url": "https://files.pythonhosted.org/packages/70/cb/164edc3f9f46280c9a654ea395bb3c56017c93cc813fd83430faca691cb1/yamlloader-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4148b7e3c8b679edc6919ef7f1391248", "sha256": "ea7b1e855d58cc80ba45c9d05566c7bbf3893d1335797a17d372145f81c0cb8a"}, "downloads": -1, "filename": "yamlloader-0.5.2.tar.gz", "has_sig": false, "md5_digest": "4148b7e3c8b679edc6919ef7f1391248", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 5305, "upload_time": "2018-02-08T14:54:02", "upload_time_iso_8601": "2018-02-08T14:54:02.126970Z", "url": "https://files.pythonhosted.org/packages/9a/1a/8cd5a568b843f63b0282cb6e4b1667b1b9e1a934a2e456f8ca0aec4da620/yamlloader-0.5.2.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "804c652566fb84c2aa10a1cc6254caec", "sha256": "814c39f5f5c4e2d201e8421f4869221dcba0561fc30857d4437395b5e50b3162"}, "downloads": -1, "filename": "yamlloader-0.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "804c652566fb84c2aa10a1cc6254caec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 6024, "upload_time": "2018-07-28T17:27:16", "upload_time_iso_8601": "2018-07-28T17:27:16.703845Z", "url": "https://files.pythonhosted.org/packages/93/a2/2f0c2394af1559021703c8cbb1bc7419bb5a94ea6bde0ab8cd1e973bb605/yamlloader-0.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e0750ace81235f750c072833d79c4c3", "sha256": "dcab5f16b39bb03d10dda4cd4f30c943675ec4c7771807fc67e7f1bb319bf4c8"}, "downloads": -1, "filename": "yamlloader-0.5.5.tar.gz", "has_sig": false, "md5_digest": "2e0750ace81235f750c072833d79c4c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 5793, "upload_time": "2018-07-28T17:27:17", "upload_time_iso_8601": "2018-07-28T17:27:17.753547Z", "url": "https://files.pythonhosted.org/packages/d5/93/11628e0d09213b7570d625b3399045f0eb413bbe49a400d764d1d612d807/yamlloader-0.5.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "804c652566fb84c2aa10a1cc6254caec", "sha256": "814c39f5f5c4e2d201e8421f4869221dcba0561fc30857d4437395b5e50b3162"}, "downloads": -1, "filename": "yamlloader-0.5.5-py3-none-any.whl", "has_sig": false, "md5_digest": "804c652566fb84c2aa10a1cc6254caec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 6024, "upload_time": "2018-07-28T17:27:16", "upload_time_iso_8601": "2018-07-28T17:27:16.703845Z", "url": "https://files.pythonhosted.org/packages/93/a2/2f0c2394af1559021703c8cbb1bc7419bb5a94ea6bde0ab8cd1e973bb605/yamlloader-0.5.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e0750ace81235f750c072833d79c4c3", "sha256": "dcab5f16b39bb03d10dda4cd4f30c943675ec4c7771807fc67e7f1bb319bf4c8"}, "downloads": -1, "filename": "yamlloader-0.5.5.tar.gz", "has_sig": false, "md5_digest": "2e0750ace81235f750c072833d79c4c3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 5793, "upload_time": "2018-07-28T17:27:17", "upload_time_iso_8601": "2018-07-28T17:27:17.753547Z", "url": "https://files.pythonhosted.org/packages/d5/93/11628e0d09213b7570d625b3399045f0eb413bbe49a400d764d1d612d807/yamlloader-0.5.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:18 2020"}