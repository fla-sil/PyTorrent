{"info": {"author": "Phil Budne", "author_email": "phil@ultimate.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Database", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup"], "description": "JSAM's basic operations are get, put and remove, with basic support\nfor transactions via begin, commit and rollback.  All stored objects\nare identified by an integer key.\n\nA JSAM database is opened by supplying a URL to jsam.jsurl.parse()\nand calling the open() method on the returned object.  The syntax of\nURL depends on the particular \"access method\".\n\nThe following URL types currently exist::\n\n    * file:   directory plain text JSON files\n    * rcs:    directory plain text JSON files under RCS\n    * cvs:    directory plain text JSON files under CVS (not tested)\n    * svn:    directory plain text JSON files under SVN (not tested)\n    * sqlite: object trees stored in an SQLite3 database\n    * mysql:  object trees stored in a MySQL database (lightly tested)\n    * pgsql:  object trees stored in a PostgreSQL database (lightly tested)\n\nQuery methods include::\n\n    * Collections: a jQuery/Django-like method-chained interface\n    * XPath query language subset (only supported for SQL backends)\n    * P4J (E4X-like) query language (only supported for SQL backends)\n        which allows construction of \"xpath\" queries in Python using\n        method chaining and operator overload, bridging the lexical divide\n        between code and query.\n\npydoc jsam.<URLTYPE>_jsam\n  gives information on the URL syntax for <URLTYPE>\n\npydoc jsam.jsam.JSAM\n  gives information on jsam object methods\n\npydoc jsam.xpath\n  gives information on XPath query syntax (SQL backends only)\n\npydoc jsam.p4j\n  gives information on P4J Python native query syntax\n\nNOTE::\n\n    * uses Python 2.6+ supplied \"json\"; requires \"simplejson\" on Python 2.5\n    * file-based storage depends on POSIX file semantics\n    * requires \"MySQLdb\" for MySQL\n    * requires \"psycopg2\" for PostgreSQL\n\nThe name \"JSAM\" is a joke on IBM Mainframe O/S data \"Access Methods\"\n(BDAM, BSAM, VSAM, ISAM, QSAM, BPAM).\n\nThe obvious name 'jsonstore' was already taken by another package\nin the Python Package Index (PyPI).\n\nThe URL/URI syntax was cribbed from Django, which copied SQLAlchemy.", "description_content_type": null, "docs_url": null, "download_url": "http://www.ultimate.com/phil/python/download/jsam-0.7.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.ultimate.com/phil/python/#jsam", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "jsam", "package_url": "https://pypi.org/project/jsam/", "platform": "POSIX", "project_url": "https://pypi.org/project/jsam/", "project_urls": {"Download": "http://www.ultimate.com/phil/python/download/jsam-0.7.tar.gz", "Homepage": "http://www.ultimate.com/phil/python/#jsam"}, "release_url": "https://pypi.org/project/jsam/0.7/", "requires_dist": null, "requires_python": null, "summary": "JSAM (JSON Storage Access Methods) is a \"NoSQL\" Database for JSON objects.", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>JSAM\u2019s basic operations are get, put and remove, with basic support\nfor transactions via begin, commit and rollback.  All stored objects\nare identified by an integer key.</p>\n<p>A JSAM database is opened by supplying a URL to jsam.jsurl.parse()\nand calling the open() method on the returned object.  The syntax of\nURL depends on the particular \u201caccess method\u201d.</p>\n<p>The following URL types currently exist:</p>\n<pre>* file:   directory plain text JSON files\n* rcs:    directory plain text JSON files under RCS\n* cvs:    directory plain text JSON files under CVS (not tested)\n* svn:    directory plain text JSON files under SVN (not tested)\n* sqlite: object trees stored in an SQLite3 database\n* mysql:  object trees stored in a MySQL database (lightly tested)\n* pgsql:  object trees stored in a PostgreSQL database (lightly tested)\n</pre>\n<p>Query methods include:</p>\n<pre>* Collections: a jQuery/Django-like method-chained interface\n* XPath query language subset (only supported for SQL backends)\n* P4J (E4X-like) query language (only supported for SQL backends)\n    which allows construction of \"xpath\" queries in Python using\n    method chaining and operator overload, bridging the lexical divide\n    between code and query.\n</pre>\n<dl>\n<dt>pydoc jsam.&lt;URLTYPE&gt;_jsam</dt>\n<dd>gives information on the URL syntax for &lt;URLTYPE&gt;</dd>\n<dt>pydoc jsam.jsam.JSAM</dt>\n<dd>gives information on jsam object methods</dd>\n<dt>pydoc jsam.xpath</dt>\n<dd>gives information on XPath query syntax (SQL backends only)</dd>\n<dt>pydoc jsam.p4j</dt>\n<dd>gives information on P4J Python native query syntax</dd>\n</dl>\n<p>NOTE:</p>\n<pre>* uses Python 2.6+ supplied \"json\"; requires \"simplejson\" on Python 2.5\n* file-based storage depends on POSIX file semantics\n* requires \"MySQLdb\" for MySQL\n* requires \"psycopg2\" for PostgreSQL\n</pre>\n<p>The name \u201cJSAM\u201d is a joke on IBM Mainframe O/S data \u201cAccess Methods\u201d\n(BDAM, BSAM, VSAM, ISAM, QSAM, BPAM).</p>\n<p>The obvious name \u2018jsonstore\u2019 was already taken by another package\nin the Python Package Index (PyPI).</p>\n<p>The URL/URI syntax was cribbed from Django, which copied SQLAlchemy.</p>\n\n          </div>"}, "last_serial": 2558742, "releases": {"0.6.2": [], "0.6.3": [], "0.7": [{"comment_text": "", "digests": {"md5": "24a0e972ee5ec93724fa2ad03f9d2d9e", "sha256": "a985479d61e144e8dee55d2d0fc97a8ca92d7663e36b272ba61aa4091ad3c27d"}, "downloads": -1, "filename": "jsam-0.7.tar.gz", "has_sig": false, "md5_digest": "24a0e972ee5ec93724fa2ad03f9d2d9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56895, "upload_time": "2017-01-06T23:56:23", "upload_time_iso_8601": "2017-01-06T23:56:23.868691Z", "url": "https://files.pythonhosted.org/packages/71/b7/246b5f1a05c23f0f87615833466cfd6bcbec4d486c13ab78ae6509886c52/jsam-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "24a0e972ee5ec93724fa2ad03f9d2d9e", "sha256": "a985479d61e144e8dee55d2d0fc97a8ca92d7663e36b272ba61aa4091ad3c27d"}, "downloads": -1, "filename": "jsam-0.7.tar.gz", "has_sig": false, "md5_digest": "24a0e972ee5ec93724fa2ad03f9d2d9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56895, "upload_time": "2017-01-06T23:56:23", "upload_time_iso_8601": "2017-01-06T23:56:23.868691Z", "url": "https://files.pythonhosted.org/packages/71/b7/246b5f1a05c23f0f87615833466cfd6bcbec4d486c13ab78ae6509886c52/jsam-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:04 2020"}