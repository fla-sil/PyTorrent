{"info": {"author": "The NOESIS project team", "author_email": "noesis-support@ikor.org", "bugtrack_url": null, "classifiers": [], "description": "Official Python API for [NOESIS](http://noesis.ikor.org), an open source framework for network data mining that provides a large collection of network analysis techniques, including the analysis of network structural properties, community detection methods, link scoring, and link prediction, as well as network visualization algorithms.\n\n## Installation\nFrom [PyPi](https://pypi.python.org/pypi/noesis):\n```\npip install noesis\n```\n\nFrom source:\n```\ngit clone https://github.com/fvictor/noesis-python.git\ncd noesis-python\npython setup.py install\n```\n\n## Getting started\nNOESIS for Python provides simple and unified interfaces for most of the implemented techniques. The following example loads a network from a GML file and detects its communities using the Kernighan\u00e2\u20ac\u201cLin algorithm:\n```python\nfrom noesis import Noesis\n\nns = Noesis()\n\nnetwork_reader = ns.create_network_reader('GML')\nnetwork = network_reader.read('my_network.gml')\n\ncommunity_detector = ns.create_community_detector('KernighanLin')\ncommunities = community_detector.compute(network)\n\nfor node in range(network.nodes()):\n\tprint('Node {} belongs to community {}'.format(node, communities[node]))\n\nns.end()\n```\n\nThe following example generates a network of 20 nodes and 100 links using the Erd\u00c3\u00b6s\u00e2\u20ac\u201cR\u00c3\u00a9nyi model and computes the PageRank score of each node:\n```python\nfrom noesis import Noesis\n\nns = Noesis()\n\nnetwork = ns.create_network_from_model('ErdosRenyi', 20, 100)\n\npagerank_scorer = ns.create_node_scorer('PageRank', 0.9)\nscores = pagerank_scorer.compute(network)\n\nfor node in range(network.nodes()):\n\tprint('Node {} has a PageRank score of {}'.format(node, scores[node]))\n\nns.end()\n```\n\n\nAlways remember to call the *end* method of *Noesis* class to properly terminate the NOESIS session and finish the execution of your program.\n\n## Documentation\nThe documentation of the project, which can be built using [SPHINX](http://www.sphinx-doc.org/), is located in the **doc** folder. A readily available up-to-date version of the documentation can be found at [http://noesis-python.readthedocs.io](http://noesis-python.readthedocs.io).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://noesis.ikor.org/", "keywords": "noesis,network", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "noesis", "package_url": "https://pypi.org/project/noesis/", "platform": "", "project_url": "https://pypi.org/project/noesis/", "project_urls": {"Homepage": "http://noesis.ikor.org/"}, "release_url": "https://pypi.org/project/noesis/0.2.8/", "requires_dist": ["numpy", "javabridge"], "requires_python": "", "summary": "An open source framework for network data mining that provides a large collection of network analysis techniques", "version": "0.2.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Official Python API for <a href=\"http://noesis.ikor.org\" rel=\"nofollow\">NOESIS</a>, an open source framework for network data mining that provides a large collection of network analysis techniques, including the analysis of network structural properties, community detection methods, link scoring, and link prediction, as well as network visualization algorithms.</p>\n<h2>Installation</h2>\n<p>From <a href=\"https://pypi.python.org/pypi/noesis\" rel=\"nofollow\">PyPi</a>:</p>\n<pre><code>pip install noesis\n</code></pre>\n<p>From source:</p>\n<pre><code>git clone https://github.com/fvictor/noesis-python.git\ncd noesis-python\npython setup.py install\n</code></pre>\n<h2>Getting started</h2>\n<p>NOESIS for Python provides simple and unified interfaces for most of the implemented techniques. The following example loads a network from a GML file and detects its communities using the Kernighan\u00e2\u20ac\u201cLin algorithm:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">noesis</span> <span class=\"kn\">import</span> <span class=\"n\">Noesis</span>\n\n<span class=\"n\">ns</span> <span class=\"o\">=</span> <span class=\"n\">Noesis</span><span class=\"p\">()</span>\n\n<span class=\"n\">network_reader</span> <span class=\"o\">=</span> <span class=\"n\">ns</span><span class=\"o\">.</span><span class=\"n\">create_network_reader</span><span class=\"p\">(</span><span class=\"s1\">'GML'</span><span class=\"p\">)</span>\n<span class=\"n\">network</span> <span class=\"o\">=</span> <span class=\"n\">network_reader</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s1\">'my_network.gml'</span><span class=\"p\">)</span>\n\n<span class=\"n\">community_detector</span> <span class=\"o\">=</span> <span class=\"n\">ns</span><span class=\"o\">.</span><span class=\"n\">create_community_detector</span><span class=\"p\">(</span><span class=\"s1\">'KernighanLin'</span><span class=\"p\">)</span>\n<span class=\"n\">communities</span> <span class=\"o\">=</span> <span class=\"n\">community_detector</span><span class=\"o\">.</span><span class=\"n\">compute</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"p\">()):</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Node </span><span class=\"si\">{}</span><span class=\"s1\"> belongs to community </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">communities</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"p\">]))</span>\n\n<span class=\"n\">ns</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">()</span>\n</pre>\n<p>The following example generates a network of 20 nodes and 100 links using the Erd\u00c3\u00b6s\u00e2\u20ac\u201cR\u00c3\u00a9nyi model and computes the PageRank score of each node:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">noesis</span> <span class=\"kn\">import</span> <span class=\"n\">Noesis</span>\n\n<span class=\"n\">ns</span> <span class=\"o\">=</span> <span class=\"n\">Noesis</span><span class=\"p\">()</span>\n\n<span class=\"n\">network</span> <span class=\"o\">=</span> <span class=\"n\">ns</span><span class=\"o\">.</span><span class=\"n\">create_network_from_model</span><span class=\"p\">(</span><span class=\"s1\">'ErdosRenyi'</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"n\">pagerank_scorer</span> <span class=\"o\">=</span> <span class=\"n\">ns</span><span class=\"o\">.</span><span class=\"n\">create_node_scorer</span><span class=\"p\">(</span><span class=\"s1\">'PageRank'</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">)</span>\n<span class=\"n\">scores</span> <span class=\"o\">=</span> <span class=\"n\">pagerank_scorer</span><span class=\"o\">.</span><span class=\"n\">compute</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">nodes</span><span class=\"p\">()):</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Node </span><span class=\"si\">{}</span><span class=\"s1\"> has a PageRank score of </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">scores</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"p\">]))</span>\n\n<span class=\"n\">ns</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">()</span>\n</pre>\n<p>Always remember to call the <em>end</em> method of <em>Noesis</em> class to properly terminate the NOESIS session and finish the execution of your program.</p>\n<h2>Documentation</h2>\n<p>The documentation of the project, which can be built using <a href=\"http://www.sphinx-doc.org/\" rel=\"nofollow\">SPHINX</a>, is located in the <strong>doc</strong> folder. A readily available up-to-date version of the documentation can be found at <a href=\"http://noesis-python.readthedocs.io\" rel=\"nofollow\">http://noesis-python.readthedocs.io</a>.</p>\n\n          </div>"}, "last_serial": 4287982, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "8c3d99dd7d5c169c305fcb64a61b28a6", "sha256": "705f1348a5dab0c04431ddf559b8a3fd8e82c1a870e155829474dc0cbf0a5151"}, "downloads": -1, "filename": "noesis-0.2.2.tar.gz", "has_sig": false, "md5_digest": "8c3d99dd7d5c169c305fcb64a61b28a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1142489, "upload_time": "2018-03-26T19:28:38", "upload_time_iso_8601": "2018-03-26T19:28:38.898228Z", "url": "https://files.pythonhosted.org/packages/be/a6/03d1775ee4720c714ef397baae2c2a4979b9eee8350b9bb012c09c714a98/noesis-0.2.2.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "e880add217ce9830487602f6ac455dcc", "sha256": "91684a99420026c15a531b9f9f283141e2d79c2fec4036e5f764fe968d222ad1"}, "downloads": -1, "filename": "noesis-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "e880add217ce9830487602f6ac455dcc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1145839, "upload_time": "2018-08-30T08:21:06", "upload_time_iso_8601": "2018-08-30T08:21:06.077198Z", "url": "https://files.pythonhosted.org/packages/51/b6/1c2f85559050a4441228bf0f09f5d68ef8a5d1f5fb9cb1e597086dd0dbc2/noesis-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b7fe56349273c4ea7869f757923cabd", "sha256": "6ff2109d8b911690fe347c81ddb7aa336aa32868f182ce9aceef17160ba1be21"}, "downloads": -1, "filename": "noesis-0.2.7.tar.gz", "has_sig": false, "md5_digest": "1b7fe56349273c4ea7869f757923cabd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1142706, "upload_time": "2018-08-30T08:21:07", "upload_time_iso_8601": "2018-08-30T08:21:07.992562Z", "url": "https://files.pythonhosted.org/packages/43/c7/2d4bd78a1af99f51b24acff07e5d34fbc0d7b48b48a959218d49c9df543b/noesis-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "b3fc4f3ceed5e581c29177c604cf7009", "sha256": "6e46041fa8bf66044e999817c13688ddb40daa9648f233ee58cab103ac55bb38"}, "downloads": -1, "filename": "noesis-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "b3fc4f3ceed5e581c29177c604cf7009", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1145953, "upload_time": "2018-09-19T10:37:03", "upload_time_iso_8601": "2018-09-19T10:37:03.482702Z", "url": "https://files.pythonhosted.org/packages/2d/80/8f433234897c6649c4375cb1ec07b72051bb915862e99c9f8256aacc09d8/noesis-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60812a74292fdcbb8a23eaa1522f3d1a", "sha256": "23ec6df39bb0e38eddb368bbb04f2b60e0a83f310cc85b655aee8de9dc1a3dbd"}, "downloads": -1, "filename": "noesis-0.2.8.tar.gz", "has_sig": false, "md5_digest": "60812a74292fdcbb8a23eaa1522f3d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1142845, "upload_time": "2018-09-19T10:37:05", "upload_time_iso_8601": "2018-09-19T10:37:05.716682Z", "url": "https://files.pythonhosted.org/packages/27/a2/c40d08b933aef121a96f110e58c4228e18c65ad15e8d354afb001239d5d4/noesis-0.2.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3fc4f3ceed5e581c29177c604cf7009", "sha256": "6e46041fa8bf66044e999817c13688ddb40daa9648f233ee58cab103ac55bb38"}, "downloads": -1, "filename": "noesis-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "b3fc4f3ceed5e581c29177c604cf7009", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1145953, "upload_time": "2018-09-19T10:37:03", "upload_time_iso_8601": "2018-09-19T10:37:03.482702Z", "url": "https://files.pythonhosted.org/packages/2d/80/8f433234897c6649c4375cb1ec07b72051bb915862e99c9f8256aacc09d8/noesis-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60812a74292fdcbb8a23eaa1522f3d1a", "sha256": "23ec6df39bb0e38eddb368bbb04f2b60e0a83f310cc85b655aee8de9dc1a3dbd"}, "downloads": -1, "filename": "noesis-0.2.8.tar.gz", "has_sig": false, "md5_digest": "60812a74292fdcbb8a23eaa1522f3d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1142845, "upload_time": "2018-09-19T10:37:05", "upload_time_iso_8601": "2018-09-19T10:37:05.716682Z", "url": "https://files.pythonhosted.org/packages/27/a2/c40d08b933aef121a96f110e58c4228e18c65ad15e8d354afb001239d5d4/noesis-0.2.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:56 2020"}