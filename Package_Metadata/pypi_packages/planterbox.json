{"info": {"author": "Nick Pilon", "author_email": "npilon@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Testing"], "description": "planterbox\n==========\n\n.. image:: https://api.travis-ci.org/npilon/planterbox.png?branch=master\n        :target: https://travis-ci.org/npilon/planterbox\n\nA plugin for running behavior-driven tests using\n`gherkin <https://github.com/cucumber/cucumber/wiki/Gherkin>`__ inside\n``nose2``.\n\nUsage\n-----\n\nTo enable ``planterbox`` for your project, you'll want to add the\nfollowing lines (or similar) to your ``unittest.cfg``:\n\n.. code:: ini\n\n    [unittest]\n    plugins = planterbox\n\n    [planterbox]\n    always-on = True\n\n``planterbox`` is compatible with ``nose2.plugins.mp``.\n\nWriting Tests\n-------------\n\n``planterbox`` tests exist inside a python package which provides a\ncontext for their execution. You should write your tests in ``.feature``\nfiles in the package directory. ``.feature`` files have access to all\nsteps defined in or imported into their package's ``__init__.py``. For\nexample, with the directory structure:\n\n::\n\n    planterbox/\n      tests/\n        test_feature/\n          __init__.py\n          basic.feature\n\nIf ``__init__.py`` contains:\n\n.. code:: python\n\n    from planterbox import step\n\n\n    @step(r'I add (\\d+) and (\\d+)')\n    def add(test, a, b):\n        a = int(a)\n        b = int(b)\n        test.result = a + b\n\n\n    @step(r'the result should be (\\d+)')\n    def check_result(test, value):\n        value = int(value)\n        test.assertEqual(test.result, value)\n\n``basic.feature`` could contain:\n\n.. code:: gherkin\n\n    Feature: Basic Tests\n        I want to exercise generation of a simple test from a feature.\n\n        Scenario: I need to verify basic arithmetic.\n            Given I add 1 and 1\n            Then the result should be 2\n\nWe could then run this test either by running all of the tests in the\nsuite with ``nose2`` or run it specifically with\n``nose2 planterbox.tests.test_feature:basic.feature``. We could even run\nthe first scenario specifically with\n``nose2 planterbox.tests.test_feature:basic.feature:0``.\n\nWriting Steps\n-------------\n\n``planterbox`` steps are python functions decorated with\n``@planterbox.step(PATTERN)``. ``PATTERN`` can be a python regular\nexpression, which must start matching expected step text after the\n`gherkin step\nprefixes <https://github.com/cucumber/cucumber/wiki/Given-When-Then>`__.\n\nGroups matched within ``PATTERN`` are provided to the decorated function\nas arguments. All steps are provided with the ``ScenarioTestCase``\nobject for the currently executing scenario as their first argument.\nUnnamed groups are provided to the step as positional arguments after\nthis. Named groups will be passed as keyword arguments. ``PATTERN``\ncannot mix unnamed and named groups. If any named groups are used, all\ngroups must be named groups.\n\nAll the steps in a feature's package will be available to that feature's\nscenario. These steps can be defined in the package or imported from\nsomewhere else.\n\nHooks, Setup, and Teardown\n--------------------------\n\n``setUpModule`` and ``tearDownModule`` methods in a feature's\n``__init__.py`` will be run before and after all features in that\npackage, respectively. ``planterbox`` provides some extra hooks for\ndoing preparation or cleanup. Functions can be registered as hooks by\ndecorating them with ``@planterbox.hook(TIMING, STAGE)``. ``TIMING`` can\nbe ``'before'`` or ``'after'`` and ``STAGE`` any of ``'feature'``,\n``'scenario'``, ``'step'``, ``'failure'``, or ``'error'``.\n\nAll hooks are expected to take one argument: the ``TestCase`` subclass\nfor the active feature.\n\nAs with steps, hooks must be directly present in the feature's\n``__init__.py`` in order to be run.\n\nScenario Outlines\n-----------------\n\n``planterbox`` supports scenario outlines. These allow you to execute a\nscenario multiple times with different values. For example:\n\n.. code:: gherkin\n\n    Feature: Example Tests\n        I want to exercise generation of a test with examples from a feature.\n\n        Scenario Outline: I need to verify basic arithmetic with examples.\n            Given I add <x> and <y>\n            Then the result should be <z>\n            Examples:\n                x | y | z\n                1 | 1 | 2\n                1 | 2 | 3\n                2 | 1 | 3\n                2 | 2 | 4\n\nYour ``'before'`` and ``'after'`` ``'scenario'`` hooks will only run\nonce for the entire scenario outline.\n\nInvoking Tests\n--------------\n\nYou can run tests by allowing nose2's autodiscovery to find all of your tests,\nor you can specify specific tests to be run on the command line. When\nspecifying specific tests, you can either specify an entire package,\nan entire feature, or individual scenarios. Individual scenarios can be\nspecified either by index (from 0) or by name.\n\n.. code::\n\n    nose2 planterbox.tests.test_feature\n    nose2 planterbox.tests.test_feature:basic.feature planterbox.tests.test_hooks:hooks.feature\n    nose2 planterbox.tests.test_feature:basic.feature:1\n    nose2 planterbox.tests.test_feature:basic.feature:0\n    nose2 planterbox.tests.test_feature:basic.feature:\"I need to verify basic arithmetic\"\n    nose2 planterbox.tests.test_feature:basic.feature:\"I need to verify basic arithmetic.\"\n\nIf your feature includes multiple scenarios with the same name, all will be\nrun when that name is given. Names with a trailing period can be specified with\nor without the trailing period.\n\nValidating Tests\n----------------\n\nYou can use the ``--planterbox-check-only`` flag to verify that your features\nare correct without running them::\n\n  nose2 --planterbox-check-only planterbox.tests.test_feature\n\n  ----------------------------------------------------------------------\n  Ran 0 tests in 0.000s\n\n  OK\n\nWhile a failure would produce a traceback::\n\n  nose2 --planterbox-check-only planterbox.tests.test_feature\n  Traceback (most recent call last):\n    File \"planterbox_ve/bin/nose2\", line 11, in <module>\n      sys.exit(discover())\n    File \"nose2/main.py\", line 306, in discover\n      return main(*args, **kwargs)\n    File \"nose2/main.py\", line 100, in __init__\n      super(PluggableTestProgram, self).__init__(**kw)\n    File \"/opt/python/lib/python3.6/unittest/main.py\", line 94, in __init__\n      self.parseArgs(argv)\n    File \"nose2/main.py\", line 133, in parseArgs\n      self.createTests()\n    File \"nose2/main.py\", line 258, in createTests\n      self.testNames, self.module)\n    File \"nose2/loader.py\", line 68, in loadTestsFromNames\n      for name in event.names]\n    File \"nose2/loader.py\", line 68, in <listcomp>\n      for name in event.names]\n    File \"nose2/loader.py\", line 83, in loadTestsFromName\n      result = self.session.hooks.loadTestsFromName(event)\n    File \"nose2/events.py\", line 225, in __call__\n      result = getattr(plugin, self.method)(event)\n    File \"nose2/plugins/loader/discovery.py\", line 247, in loadTestsFromName\n      return Discoverer.loadTestsFromName(self, event)\n    File \"nose2/plugins/loader/discovery.py\", line 84, in loadTestsFromName\n      self._find_tests_in_module(event, module, top_level_dir))\n    File \"nose2/plugins/loader/discovery.py\", line 229, in _find_tests_in_module\n      event, full_path, top_level_dir):\n    File \"nose2/plugins/loader/discovery.py\", line 161, in _find_tests_in_dir\n      event, path, entry_path, top_level):\n    File \"nose2/plugins/loader/discovery.py\", line 176, in _find_tests_in_file\n      result = self.session.hooks.handleFile(evt)\n    File \"nose2/events.py\", line 225, in __call__\n      result = getattr(plugin, self.method)(event)\n    File \"planterbox/planterbox/plugin.py\", line 106, in handleFile\n      feature_path=feature_path,\n    File \"planterbox/planterbox/plugin.py\", line 75, in makeSuiteFromFeature\n      config=self.config,\n    File \"planterbox/planterbox/feature.py\", line 81, in __init__\n      self.check_scenarios()\n    File \"planterbox/planterbox/feature.py\", line 227, in check_scenarios\n      raise UnmatchedStepException(\"Unmatched steps:\\n\" + '\\n'.join(unmatched))\n  planterbox.exceptions.UnmatchedStepException: Unmatched steps:\n          Given I bad 1 and 1\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/npilon/planterbox", "keywords": "testing test bdd lettuce cucumber gherkin nosetests nose2", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "planterbox", "package_url": "https://pypi.org/project/planterbox/", "platform": "", "project_url": "https://pypi.org/project/planterbox/", "project_urls": {"Homepage": "https://github.com/npilon/planterbox"}, "release_url": "https://pypi.org/project/planterbox/0.7.0/", "requires_dist": ["nose2 (>=0.6.0)", "mock", "six"], "requires_python": "", "summary": "A plugin for nose2 implementing behavior-driven testing.", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/npilon/planterbox\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/npilon/planterbox.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/387fffba5f8f3d48f4cfd26520c374d9aec2698a/68747470733a2f2f6170692e7472617669732d63692e6f72672f6e70696c6f6e2f706c616e746572626f782e706e673f6272616e63683d6d6173746572\"></a>\n<p>A plugin for running behavior-driven tests using\n<a href=\"https://github.com/cucumber/cucumber/wiki/Gherkin\" rel=\"nofollow\">gherkin</a> inside\n<tt>nose2</tt>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To enable <tt>planterbox</tt> for your project, you\u2019ll want to add the\nfollowing lines (or similar) to your <tt>unittest.cfg</tt>:</p>\n<pre><span class=\"k\">[unittest]</span>\n<span class=\"na\">plugins</span> <span class=\"o\">=</span> <span class=\"s\">planterbox</span>\n\n<span class=\"k\">[planterbox]</span>\n<span class=\"na\">always-on</span> <span class=\"o\">=</span> <span class=\"s\">True</span>\n</pre>\n<p><tt>planterbox</tt> is compatible with <tt>nose2.plugins.mp</tt>.</p>\n</div>\n<div id=\"writing-tests\">\n<h2>Writing Tests</h2>\n<p><tt>planterbox</tt> tests exist inside a python package which provides a\ncontext for their execution. You should write your tests in <tt>.feature</tt>\nfiles in the package directory. <tt>.feature</tt> files have access to all\nsteps defined in or imported into their package\u2019s <tt>__init__.py</tt>. For\nexample, with the directory structure:</p>\n<pre>planterbox/\n  tests/\n    test_feature/\n      __init__.py\n      basic.feature\n</pre>\n<p>If <tt>__init__.py</tt> contains:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">planterbox</span> <span class=\"kn\">import</span> <span class=\"n\">step</span>\n\n\n<span class=\"nd\">@step</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'I add (\\d+) and (\\d+)'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n\n<span class=\"nd\">@step</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'the result should be (\\d+)'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">check_result</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n</pre>\n<p><tt>basic.feature</tt> could contain:</p>\n<pre><span class=\"k\">Feature:</span><span class=\"nf\"> Basic Tests\n    I want to exercise generation of a simple test from a feature.\n\n    </span><span class=\"k\">Scenario:</span><span class=\"nf\"> I need to verify basic arithmetic.\n</span><span class=\"k\">        Given </span><span class=\"nf\">I add </span><span class=\"s\">1</span><span class=\"nf\"> and </span><span class=\"s\">1</span><span class=\"nf\">\n        </span><span class=\"k\">Then </span><span class=\"nf\">the result should be </span><span class=\"s\">2</span><span class=\"k\"></span>\n</pre>\n<p>We could then run this test either by running all of the tests in the\nsuite with <tt>nose2</tt> or run it specifically with\n<tt>nose2 planterbox.tests.test_feature:basic.feature</tt>. We could even run\nthe first scenario specifically with\n<tt>nose2 planterbox.tests.test_feature:basic.feature:0</tt>.</p>\n</div>\n<div id=\"writing-steps\">\n<h2>Writing Steps</h2>\n<p><tt>planterbox</tt> steps are python functions decorated with\n<tt>@planterbox.step(PATTERN)</tt>. <tt>PATTERN</tt> can be a python regular\nexpression, which must start matching expected step text after the\n<a href=\"https://github.com/cucumber/cucumber/wiki/Given-When-Then\" rel=\"nofollow\">gherkin step\nprefixes</a>.</p>\n<p>Groups matched within <tt>PATTERN</tt> are provided to the decorated function\nas arguments. All steps are provided with the <tt>ScenarioTestCase</tt>\nobject for the currently executing scenario as their first argument.\nUnnamed groups are provided to the step as positional arguments after\nthis. Named groups will be passed as keyword arguments. <tt>PATTERN</tt>\ncannot mix unnamed and named groups. If any named groups are used, all\ngroups must be named groups.</p>\n<p>All the steps in a feature\u2019s package will be available to that feature\u2019s\nscenario. These steps can be defined in the package or imported from\nsomewhere else.</p>\n</div>\n<div id=\"hooks-setup-and-teardown\">\n<h2>Hooks, Setup, and Teardown</h2>\n<p><tt>setUpModule</tt> and <tt>tearDownModule</tt> methods in a feature\u2019s\n<tt>__init__.py</tt> will be run before and after all features in that\npackage, respectively. <tt>planterbox</tt> provides some extra hooks for\ndoing preparation or cleanup. Functions can be registered as hooks by\ndecorating them with <tt>@planterbox.hook(TIMING, STAGE)</tt>. <tt>TIMING</tt> can\nbe <tt>'before'</tt> or <tt>'after'</tt> and <tt>STAGE</tt> any of <tt>'feature'</tt>,\n<tt>'scenario'</tt>, <tt>'step'</tt>, <tt>'failure'</tt>, or <tt>'error'</tt>.</p>\n<p>All hooks are expected to take one argument: the <tt>TestCase</tt> subclass\nfor the active feature.</p>\n<p>As with steps, hooks must be directly present in the feature\u2019s\n<tt>__init__.py</tt> in order to be run.</p>\n</div>\n<div id=\"scenario-outlines\">\n<h2>Scenario Outlines</h2>\n<p><tt>planterbox</tt> supports scenario outlines. These allow you to execute a\nscenario multiple times with different values. For example:</p>\n<pre><span class=\"k\">Feature:</span><span class=\"nf\"> Example Tests\n    I want to exercise generation of a test with examples from a feature.\n\n    </span><span class=\"k\">Scenario Outline:</span><span class=\"nf\"> I need to verify basic arithmetic with examples.\n</span><span class=\"k\">        Given </span><span class=\"nf\">I add </span><span class=\"nv\">&lt;x&gt;</span><span class=\"nf\"> and </span><span class=\"nv\">&lt;y&gt;</span><span class=\"nf\">\n        </span><span class=\"k\">Then </span><span class=\"nf\">the result should be </span><span class=\"nv\">&lt;z&gt;</span><span class=\"k\"></span><span class=\"nf\">\n        </span><span class=\"k\">Examples:</span><span class=\"nf\">\n            x</span><span class=\"k\"> |</span><span class=\"nv\"> y</span><span class=\"k\"> |</span><span class=\"nv\"> z\n            1</span><span class=\"k\"> |</span><span class=\"nv\"> 1</span><span class=\"k\"> |</span><span class=\"nv\"> 2\n            1</span><span class=\"k\"> |</span><span class=\"nv\"> 2</span><span class=\"k\"> |</span><span class=\"nv\"> 3\n            2</span><span class=\"k\"> |</span><span class=\"nv\"> 1</span><span class=\"k\"> |</span><span class=\"nv\"> 3\n            2</span><span class=\"k\"> |</span><span class=\"nv\"> 2</span><span class=\"k\"> |</span><span class=\"nv\"> 4</span>\n</pre>\n<p>Your <tt>'before'</tt> and <tt>'after'</tt> <tt>'scenario'</tt> hooks will only run\nonce for the entire scenario outline.</p>\n</div>\n<div id=\"invoking-tests\">\n<h2>Invoking Tests</h2>\n<p>You can run tests by allowing nose2\u2019s autodiscovery to find all of your tests,\nor you can specify specific tests to be run on the command line. When\nspecifying specific tests, you can either specify an entire package,\nan entire feature, or individual scenarios. Individual scenarios can be\nspecified either by index (from 0) or by name.</p>\n<pre>nose2 planterbox.tests.test_feature\nnose2 planterbox.tests.test_feature:basic.feature planterbox.tests.test_hooks:hooks.feature\nnose2 planterbox.tests.test_feature:basic.feature:1\nnose2 planterbox.tests.test_feature:basic.feature:0\nnose2 planterbox.tests.test_feature:basic.feature:\"I need to verify basic arithmetic\"\nnose2 planterbox.tests.test_feature:basic.feature:\"I need to verify basic arithmetic.\"\n</pre>\n<p>If your feature includes multiple scenarios with the same name, all will be\nrun when that name is given. Names with a trailing period can be specified with\nor without the trailing period.</p>\n</div>\n<div id=\"validating-tests\">\n<h2>Validating Tests</h2>\n<p>You can use the <tt><span class=\"pre\">--planterbox-check-only</span></tt> flag to verify that your features\nare correct without running them:</p>\n<pre>nose2 --planterbox-check-only planterbox.tests.test_feature\n\n----------------------------------------------------------------------\nRan 0 tests in 0.000s\n\nOK\n</pre>\n<p>While a failure would produce a traceback:</p>\n<pre>nose2 --planterbox-check-only planterbox.tests.test_feature\nTraceback (most recent call last):\n  File \"planterbox_ve/bin/nose2\", line 11, in &lt;module&gt;\n    sys.exit(discover())\n  File \"nose2/main.py\", line 306, in discover\n    return main(*args, **kwargs)\n  File \"nose2/main.py\", line 100, in __init__\n    super(PluggableTestProgram, self).__init__(**kw)\n  File \"/opt/python/lib/python3.6/unittest/main.py\", line 94, in __init__\n    self.parseArgs(argv)\n  File \"nose2/main.py\", line 133, in parseArgs\n    self.createTests()\n  File \"nose2/main.py\", line 258, in createTests\n    self.testNames, self.module)\n  File \"nose2/loader.py\", line 68, in loadTestsFromNames\n    for name in event.names]\n  File \"nose2/loader.py\", line 68, in &lt;listcomp&gt;\n    for name in event.names]\n  File \"nose2/loader.py\", line 83, in loadTestsFromName\n    result = self.session.hooks.loadTestsFromName(event)\n  File \"nose2/events.py\", line 225, in __call__\n    result = getattr(plugin, self.method)(event)\n  File \"nose2/plugins/loader/discovery.py\", line 247, in loadTestsFromName\n    return Discoverer.loadTestsFromName(self, event)\n  File \"nose2/plugins/loader/discovery.py\", line 84, in loadTestsFromName\n    self._find_tests_in_module(event, module, top_level_dir))\n  File \"nose2/plugins/loader/discovery.py\", line 229, in _find_tests_in_module\n    event, full_path, top_level_dir):\n  File \"nose2/plugins/loader/discovery.py\", line 161, in _find_tests_in_dir\n    event, path, entry_path, top_level):\n  File \"nose2/plugins/loader/discovery.py\", line 176, in _find_tests_in_file\n    result = self.session.hooks.handleFile(evt)\n  File \"nose2/events.py\", line 225, in __call__\n    result = getattr(plugin, self.method)(event)\n  File \"planterbox/planterbox/plugin.py\", line 106, in handleFile\n    feature_path=feature_path,\n  File \"planterbox/planterbox/plugin.py\", line 75, in makeSuiteFromFeature\n    config=self.config,\n  File \"planterbox/planterbox/feature.py\", line 81, in __init__\n    self.check_scenarios()\n  File \"planterbox/planterbox/feature.py\", line 227, in check_scenarios\n    raise UnmatchedStepException(\"Unmatched steps:\\n\" + '\\n'.join(unmatched))\nplanterbox.exceptions.UnmatchedStepException: Unmatched steps:\n        Given I bad 1 and 1\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4728384, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "44308b6a6c9bc56adab48b6fd8dff38c", "sha256": "25756b78770303f7372a0d73022d404c84ffde1192f05e297a6e4753b1775b23"}, "downloads": -1, "filename": "planterbox-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "44308b6a6c9bc56adab48b6fd8dff38c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9149, "upload_time": "2015-05-07T20:17:12", "upload_time_iso_8601": "2015-05-07T20:17:12.321405Z", "url": "https://files.pythonhosted.org/packages/7c/4e/1aac9a920ad5aa18b9b6ec7e40cf7461d7850a4f232900712b7b03057407/planterbox-0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58fcc69fcd6d4c20cae326f489f4cf21", "sha256": "04b1ac8ed452189ee521fe42cdf7fb6b009167bdb735ad76e8069b6c12ac09dd"}, "downloads": -1, "filename": "planterbox-0.1.tar.gz", "has_sig": false, "md5_digest": "58fcc69fcd6d4c20cae326f489f4cf21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6569, "upload_time": "2015-05-07T20:16:04", "upload_time_iso_8601": "2015-05-07T20:16:04.087125Z", "url": "https://files.pythonhosted.org/packages/74/4a/f4114b6fb9e7ec5f163969d180c67c95864930353c49fcac787c14cdc39a/planterbox-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2c33d5f62782de84b61114b35acc5496", "sha256": "f0b912325bca0c156019ef0b04ccb4cace0c1155e06e9502b62b52369301cdaa"}, "downloads": -1, "filename": "planterbox-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "2c33d5f62782de84b61114b35acc5496", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9341, "upload_time": "2015-05-08T21:38:55", "upload_time_iso_8601": "2015-05-08T21:38:55.447573Z", "url": "https://files.pythonhosted.org/packages/71/3e/1e22640674fd3433c62326e79fe23c53844b1c06a6e4089215c5b158bca1/planterbox-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a53a93a3afc91fabdaf59a5c3a54fa49", "sha256": "f71e32222ea2fa6fc397ad8579f223290ea083097ce61aa185fd38c12851c394"}, "downloads": -1, "filename": "planterbox-0.2.tar.gz", "has_sig": false, "md5_digest": "a53a93a3afc91fabdaf59a5c3a54fa49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6842, "upload_time": "2015-05-08T21:38:46", "upload_time_iso_8601": "2015-05-08T21:38:46.091726Z", "url": "https://files.pythonhosted.org/packages/7b/05/deeebe00faf7705002a3c894646179b33bd937ec70669a4376840ea1b05f/planterbox-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "20166e6539823ecc42269fe6730d4b33", "sha256": "f965cb44cdba7372e3dce253d91983b278a7c35dbf385c3ca11855898ef23bbd"}, "downloads": -1, "filename": "planterbox-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "20166e6539823ecc42269fe6730d4b33", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9388, "upload_time": "2015-05-12T23:23:36", "upload_time_iso_8601": "2015-05-12T23:23:36.532461Z", "url": "https://files.pythonhosted.org/packages/8d/bb/4c9907d7699ea066dbb7249488a68d7f28e6caa01d3ddc76fd5d0f5e82d5/planterbox-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5aa1872fc02015eb3bd8d2bc0c22815c", "sha256": "f15d9737fd1e52018f7c3851cc8b41db6fa1899ee9b5c91c7be3e8cf5651ec28"}, "downloads": -1, "filename": "planterbox-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5aa1872fc02015eb3bd8d2bc0c22815c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8335, "upload_time": "2015-05-12T23:23:21", "upload_time_iso_8601": "2015-05-12T23:23:21.791459Z", "url": "https://files.pythonhosted.org/packages/58/f5/945d6d54f325b077ebf9401784abc76d139dce22dbf169fd58e0576c7db4/planterbox-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ba1b08bd7c9ba14e034cc8730d67dd55", "sha256": "4d0037abac02adffbfae2bde640e35072fe81d56f92125abf381774bb045da71"}, "downloads": -1, "filename": "planterbox-0.2.2-py2-none-any.whl", "has_sig": false, "md5_digest": "ba1b08bd7c9ba14e034cc8730d67dd55", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9392, "upload_time": "2015-05-12T23:28:19", "upload_time_iso_8601": "2015-05-12T23:28:19.619940Z", "url": "https://files.pythonhosted.org/packages/df/fe/395eff547aa943d62d24fe7c228ecbd5af2d0ef5ccfd753bb6b89ff4a101/planterbox-0.2.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18be2fe7e5802d9b21b3319b929dff0a", "sha256": "64af930e2007c920ed89e9faedaa8fbeff734122ba2f619671734554a4da8baa"}, "downloads": -1, "filename": "planterbox-0.2.2.tar.gz", "has_sig": false, "md5_digest": "18be2fe7e5802d9b21b3319b929dff0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8339, "upload_time": "2015-05-12T23:28:06", "upload_time_iso_8601": "2015-05-12T23:28:06.597299Z", "url": "https://files.pythonhosted.org/packages/d1/b1/7137d436926ac159e40acd2a423dd8a9335958f6905effc143882e882098/planterbox-0.2.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "d38f837e10d9bfccac01711cc1395476", "sha256": "43f6f81cc2c0d16dd609161080725beafb8c3554c72b2afd74829a26407e54db"}, "downloads": -1, "filename": "planterbox-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "d38f837e10d9bfccac01711cc1395476", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10280, "upload_time": "2015-05-13T23:01:29", "upload_time_iso_8601": "2015-05-13T23:01:29.489465Z", "url": "https://files.pythonhosted.org/packages/81/51/58e2a142b83bd51052c5abbfcb2333f74db2843e4a4d275508c8f29f6a28/planterbox-0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26fdb73af43fbd9026066397c978b2fc", "sha256": "9d10d17b2b367444d219fc37537db17483d92cfe473029397af0dc22c20d9c3b"}, "downloads": -1, "filename": "planterbox-0.3.tar.gz", "has_sig": false, "md5_digest": "26fdb73af43fbd9026066397c978b2fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8899, "upload_time": "2015-05-13T23:01:13", "upload_time_iso_8601": "2015-05-13T23:01:13.029600Z", "url": "https://files.pythonhosted.org/packages/86/a7/0148003a1fb635966b67c5561d07f115d4ea372cfdc92ab0e12c2cbaf040/planterbox-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "309fe0aee2f8a10b22c5e8215ea4d06a", "sha256": "b11b665a658b798d9d91a8e041217b83b7bf466fe6d012d8ed7770d437ba9cfe"}, "downloads": -1, "filename": "planterbox-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "309fe0aee2f8a10b22c5e8215ea4d06a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11178, "upload_time": "2015-06-04T22:50:50", "upload_time_iso_8601": "2015-06-04T22:50:50.367534Z", "url": "https://files.pythonhosted.org/packages/a6/eb/0f8c0e51c35edb941c1642580c76d78f32d82898b76cdcf15072fe176dc9/planterbox-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed28e34e84460682f3c2f8d169692239", "sha256": "47dd60fe106eabfd7f7039741804e50fee3ede0e3738d8e39e1e72526d93967d"}, "downloads": -1, "filename": "planterbox-0.4.tar.gz", "has_sig": false, "md5_digest": "ed28e34e84460682f3c2f8d169692239", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9509, "upload_time": "2015-06-04T22:50:27", "upload_time_iso_8601": "2015-06-04T22:50:27.147317Z", "url": "https://files.pythonhosted.org/packages/06/b3/da0afd12a31062c2d6d48c5d0356fbd3cc256d05f36c435dafcf313eb513/planterbox-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "993f7b11006cb1d5ad552ec8bd5c2b39", "sha256": "8eec20633911a5d31d5bdfe3a0d9fd6edfb9462295d423d3ef102386962f14a3"}, "downloads": -1, "filename": "planterbox-0.4.1-py2-none-any.whl", "has_sig": false, "md5_digest": "993f7b11006cb1d5ad552ec8bd5c2b39", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11445, "upload_time": "2015-07-24T18:50:50", "upload_time_iso_8601": "2015-07-24T18:50:50.085731Z", "url": "https://files.pythonhosted.org/packages/0d/76/385db525a7db2de8746f527b3a5b1dbf8b93b9ee15492d86920a9e9dbbde/planterbox-0.4.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47a4022b922e123423b348ed3ea8f28f", "sha256": "65c1152ee5633e6482692ed88cd3a54662fa42d69d8a2bef7167b9ac439ff7a2"}, "downloads": -1, "filename": "planterbox-0.4.1.tar.gz", "has_sig": false, "md5_digest": "47a4022b922e123423b348ed3ea8f28f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9762, "upload_time": "2015-07-24T18:50:40", "upload_time_iso_8601": "2015-07-24T18:50:40.547873Z", "url": "https://files.pythonhosted.org/packages/d3/b8/63674d3083c6f1363cb4b649038697a244cb660e037c9b814a1c0017cd5e/planterbox-0.4.1.tar.gz", "yanked": false}], "0.4.2": [], "0.4.3": [{"comment_text": "", "digests": {"md5": "696b1096819c02fd6b170f49f7a951ca", "sha256": "43691c7ea2c386173ada2928ed3d2289d4df01855547dbb9e2bd3acbb6cb0ec0"}, "downloads": -1, "filename": "planterbox-0.4.3-py2-none-any.whl", "has_sig": false, "md5_digest": "696b1096819c02fd6b170f49f7a951ca", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11479, "upload_time": "2015-11-09T20:15:57", "upload_time_iso_8601": "2015-11-09T20:15:57.183184Z", "url": "https://files.pythonhosted.org/packages/f1/09/8191fd48fa70abec308838602818eefa48b37127fac253bc00aeffcd0ac5/planterbox-0.4.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94d8444bf82a434ba9280f1e50ca16a5", "sha256": "9f9f52a109093aba4b95d597d80a265bfc73b8de05b6c56b1d6cff9cec758f1e"}, "downloads": -1, "filename": "planterbox-0.4.3.tar.gz", "has_sig": false, "md5_digest": "94d8444bf82a434ba9280f1e50ca16a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9791, "upload_time": "2015-11-09T20:15:46", "upload_time_iso_8601": "2015-11-09T20:15:46.338861Z", "url": "https://files.pythonhosted.org/packages/6b/a0/025962e14b4c307b591983e244aa67eaf98f359ce5db0ba96b152a8921e3/planterbox-0.4.3.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "456bf8f4407b4facefb46bfc797b4e87", "sha256": "86e05a79b649a2a8aaa049f7e79f16ebb6b9686cfb8adfd63f1aa82802c56ca5"}, "downloads": -1, "filename": "planterbox-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "456bf8f4407b4facefb46bfc797b4e87", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 11464, "upload_time": "2016-01-28T17:43:00", "upload_time_iso_8601": "2016-01-28T17:43:00.269517Z", "url": "https://files.pythonhosted.org/packages/c1/a3/868b1a6bb48a705d3cd850d5e2ee2bdebb48bdb3a4ce79495433161525b5/planterbox-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9d9eb352d766c11252b86de707d16ea", "sha256": "8e467e8c26350df5f36701a575e1bc9ba0ade9ee4d96b4ce9816cf773851bd9e"}, "downloads": -1, "filename": "planterbox-0.5.tar.gz", "has_sig": false, "md5_digest": "b9d9eb352d766c11252b86de707d16ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9817, "upload_time": "2016-01-28T17:42:41", "upload_time_iso_8601": "2016-01-28T17:42:41.283834Z", "url": "https://files.pythonhosted.org/packages/2b/00/c21cd504df7f156d05420689392aa32397bad36adc4261c5428d63ac3f53/planterbox-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "782058f1e859cb447bbce22cea507cac", "sha256": "2568cfce4f4e3765ecccd6264fed21784dda5e860dcf8500b2e76a91eddfafe6"}, "downloads": -1, "filename": "planterbox-0.5.1-py2-none-any.whl", "has_sig": false, "md5_digest": "782058f1e859cb447bbce22cea507cac", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 13617, "upload_time": "2016-08-30T19:30:55", "upload_time_iso_8601": "2016-08-30T19:30:55.797344Z", "url": "https://files.pythonhosted.org/packages/ac/5b/2c1b3506576715414acf21eeca2235621fa8464b403965bc2cfd7790e3a1/planterbox-0.5.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f2d51d96b5ba28f596bd3239e4eda0c", "sha256": "642993d89138346b4768b438313fa0735304dd6c0d45ba6102336a35a83fddb3"}, "downloads": -1, "filename": "planterbox-0.5.1.tar.gz", "has_sig": false, "md5_digest": "3f2d51d96b5ba28f596bd3239e4eda0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10648, "upload_time": "2016-08-30T19:30:44", "upload_time_iso_8601": "2016-08-30T19:30:44.920864Z", "url": "https://files.pythonhosted.org/packages/63/0f/8ea1f07fce736b6280c1c58589e601f332386736721fbd6117cdbba9e5ad/planterbox-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "07b52119909e40c9b591cfee92c4bff2", "sha256": "1bdd9a7d5ced89ebc74f25405b3227a3fb80769f7e788d96e4b61dbb18fdf2b9"}, "downloads": -1, "filename": "planterbox-0.6.0-py2-none-any.whl", "has_sig": false, "md5_digest": "07b52119909e40c9b591cfee92c4bff2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14063, "upload_time": "2016-10-06T21:45:02", "upload_time_iso_8601": "2016-10-06T21:45:02.259250Z", "url": "https://files.pythonhosted.org/packages/f3/4d/eafaab6fc2a5d561879dd4c1f92ff2c9e98fc1f79af2b28e8ce584993f62/planterbox-0.6.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5d59f9d923a77fe20f122ed60fb8b5f", "sha256": "248d880c48a4e6120ae19a0977a8099c97ba991b7c056fb25d72d09406be93a1"}, "downloads": -1, "filename": "planterbox-0.6.0.tar.gz", "has_sig": false, "md5_digest": "d5d59f9d923a77fe20f122ed60fb8b5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10803, "upload_time": "2016-10-06T21:44:49", "upload_time_iso_8601": "2016-10-06T21:44:49.013712Z", "url": "https://files.pythonhosted.org/packages/8f/99/cc91a3902c6df41e25cd35a7cfacdf69d60a5391794a584fadd947788576/planterbox-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "e2441d36342bb1f0d7657c6f386a9d81", "sha256": "cb6aa5dd1180ae3575737a5c02f5d9d5cc250c67b7531a2307bfa228a2217f9e"}, "downloads": -1, "filename": "planterbox-0.6.1-py2-none-any.whl", "has_sig": false, "md5_digest": "e2441d36342bb1f0d7657c6f386a9d81", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14064, "upload_time": "2016-10-13T20:16:37", "upload_time_iso_8601": "2016-10-13T20:16:37.034921Z", "url": "https://files.pythonhosted.org/packages/87/c7/65752e20d3ea1fea09a030e9930c51da365e46f6f60ce98434eaecd9b842/planterbox-0.6.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d361e2f3fd5940debc521d70bdebec8c", "sha256": "81d9e47b1f6df7f02fcc58bc0863f01ce6cddb6733e54d9f6e2ba546e47ac5a0"}, "downloads": -1, "filename": "planterbox-0.6.1.tar.gz", "has_sig": false, "md5_digest": "d361e2f3fd5940debc521d70bdebec8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10816, "upload_time": "2016-10-13T20:16:24", "upload_time_iso_8601": "2016-10-13T20:16:24.596119Z", "url": "https://files.pythonhosted.org/packages/b5/33/3d91da5e52505a4fa4fa1693c0a41573d54e1f239a42e06ec27d01f08f93/planterbox-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "6f69629fbcc97f9aaa0b53416b093d3c", "sha256": "66127b35836aa3ca096a3e95d8fad89116d0ebf682d15caf1cde80a1491d67d0"}, "downloads": -1, "filename": "planterbox-0.6.2-py2-none-any.whl", "has_sig": false, "md5_digest": "6f69629fbcc97f9aaa0b53416b093d3c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16380, "upload_time": "2017-01-19T00:11:05", "upload_time_iso_8601": "2017-01-19T00:11:05.343360Z", "url": "https://files.pythonhosted.org/packages/d8/b1/67957fc55802771ad8c3402ce50a14570aa40b8937b7e5f309cb02fac981/planterbox-0.6.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4dcc482141f97cda3c4b97cbb01a13c", "sha256": "c6ba7b172785dba716d3f80816e075409ecfc4c6a4d5968f301c12c7e6826a5d"}, "downloads": -1, "filename": "planterbox-0.6.2.tar.gz", "has_sig": false, "md5_digest": "b4dcc482141f97cda3c4b97cbb01a13c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12984, "upload_time": "2017-01-19T00:10:54", "upload_time_iso_8601": "2017-01-19T00:10:54.315091Z", "url": "https://files.pythonhosted.org/packages/58/83/07f3376edf46bb0314ed425c43e8c5c4ccffce346cf11a8c994d1c5a5499/planterbox-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "1a8a5e108dbb48f701a9181d25eff8e9", "sha256": "9f679c33d3ce7e88e2370dc5538cd03933d9a9651b7b68341eae61627515ccbe"}, "downloads": -1, "filename": "planterbox-0.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1a8a5e108dbb48f701a9181d25eff8e9", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 16801, "upload_time": "2017-05-22T18:57:49", "upload_time_iso_8601": "2017-05-22T18:57:49.852238Z", "url": "https://files.pythonhosted.org/packages/38/10/08dc0790721c02b7f77b5851e8e2564e99d9761fe7cc4e1d1d246cc56ab5/planterbox-0.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab45acc1274974622e5bc139e144e146", "sha256": "2bb97b109cae2292464fa8533183c6a36a15045d6f7c973486660891896a468c"}, "downloads": -1, "filename": "planterbox-0.6.3.tar.gz", "has_sig": false, "md5_digest": "ab45acc1274974622e5bc139e144e146", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13453, "upload_time": "2017-05-22T18:57:40", "upload_time_iso_8601": "2017-05-22T18:57:40.344159Z", "url": "https://files.pythonhosted.org/packages/32/69/b34ab80f63cbecbacce34018f7501d0ab30c054cdbb8adfabd1602f06b9a/planterbox-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "2e7e3a0f2a55628eb18f5c2b480b689f", "sha256": "196026988629f228a5eee33f50e622637d883f8eee1261360fe65578d6a74b43"}, "downloads": -1, "filename": "planterbox-0.6.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e7e3a0f2a55628eb18f5c2b480b689f", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 16800, "upload_time": "2017-06-12T22:13:54", "upload_time_iso_8601": "2017-06-12T22:13:54.121319Z", "url": "https://files.pythonhosted.org/packages/bf/4a/0904fc8cb71b4e5040fe85ca9345b707293e25ecdc0db20421cf644c7959/planterbox-0.6.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c5cad0b3700dc69eab3e9b8632088af", "sha256": "e76e33e31d62b57039dc3b1293a434cf3b13614b8aec21c88f12149e8f59de92"}, "downloads": -1, "filename": "planterbox-0.6.4.tar.gz", "has_sig": false, "md5_digest": "4c5cad0b3700dc69eab3e9b8632088af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13451, "upload_time": "2017-06-12T22:13:44", "upload_time_iso_8601": "2017-06-12T22:13:44.342572Z", "url": "https://files.pythonhosted.org/packages/b6/25/883a906c4f5c413d7637fcc0a0e093014273d21560d9853783ad4b82d1e9/planterbox-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "76840102a4be19a170fa3b9d91955c46", "sha256": "f57c41c3a8fde71701b3019bf5ed0007d33b9bc2a8596e1cdae7569e02fdb46d"}, "downloads": -1, "filename": "planterbox-0.6.5-py2-none-any.whl", "has_sig": false, "md5_digest": "76840102a4be19a170fa3b9d91955c46", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15928, "upload_time": "2018-05-22T23:29:47", "upload_time_iso_8601": "2018-05-22T23:29:47.619228Z", "url": "https://files.pythonhosted.org/packages/8d/20/0147d05c4cbf9257d85e78a916ed8acff8f08ed4ff8ef4d677f427b4615e/planterbox-0.6.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54a2be420e73da9dff93a2e7dfdd62e3", "sha256": "b38ded3b0cd333cc0fffb127b0dae1a6594cf315ed28100f3d83fc3a84212537"}, "downloads": -1, "filename": "planterbox-0.6.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "54a2be420e73da9dff93a2e7dfdd62e3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15934, "upload_time": "2018-05-22T23:33:48", "upload_time_iso_8601": "2018-05-22T23:33:48.452553Z", "url": "https://files.pythonhosted.org/packages/31/fc/e3bd828f032f0b654e0cec8e6737aa1ae132f1e53e282a14977817f31618/planterbox-0.6.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13edb73c916b7c0e4650a3fbcdd686c0", "sha256": "3cb16f400cdc685250e3053bf922607e14bac1a8b14d062d3f6f7b4cb944083a"}, "downloads": -1, "filename": "planterbox-0.6.5.tar.gz", "has_sig": false, "md5_digest": "13edb73c916b7c0e4650a3fbcdd686c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13117, "upload_time": "2018-05-22T23:29:48", "upload_time_iso_8601": "2018-05-22T23:29:48.921805Z", "url": "https://files.pythonhosted.org/packages/d2/03/38db7546a48e9727cd36b6631e322592cfa776ccac0f7fd77239de3c8f35/planterbox-0.6.5.tar.gz", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "b03c7a52626534c4f297b60c350b7a4e", "sha256": "d14418784f88ca9428031c3980d49412bc0bced0c9d343499ebce565738ac743"}, "downloads": -1, "filename": "planterbox-0.6.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b03c7a52626534c4f297b60c350b7a4e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17818, "upload_time": "2018-05-23T00:00:35", "upload_time_iso_8601": "2018-05-23T00:00:35.297194Z", "url": "https://files.pythonhosted.org/packages/43/cb/2d8f4936fcc74e500686b718aabfeadfc0564e0fa117bad8a523f03ba460/planterbox-0.6.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd74730265cc7a13c6b9c19a2289d776", "sha256": "52ff1163a776240be8454033f11973e8955027eb8874a58f0559ff62fba01928"}, "downloads": -1, "filename": "planterbox-0.6.6.tar.gz", "has_sig": false, "md5_digest": "fd74730265cc7a13c6b9c19a2289d776", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13657, "upload_time": "2018-05-23T00:00:36", "upload_time_iso_8601": "2018-05-23T00:00:36.852429Z", "url": "https://files.pythonhosted.org/packages/27/76/05bdb0d40f50de7febf1030cd0153d05af147a47e289a011770f23ea68f6/planterbox-0.6.6.tar.gz", "yanked": false}], "0.6.7": [{"comment_text": "", "digests": {"md5": "589a7f9ff6abd7bb287b08c80564fdc8", "sha256": "eff2f5dc5b6b327352259a5f50d9a70101b4e9375b29a905cd2d2df3e134c5d4"}, "downloads": -1, "filename": "planterbox-0.6.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "589a7f9ff6abd7bb287b08c80564fdc8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19133, "upload_time": "2018-08-02T21:09:22", "upload_time_iso_8601": "2018-08-02T21:09:22.966830Z", "url": "https://files.pythonhosted.org/packages/7a/12/1cabe846b36bf69856567811906913e0dd9dff95b19ad851536cf2a713e3/planterbox-0.6.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdb1d7e9e0e136a8568a141afadb8a62", "sha256": "760c365ffa181324f5fce4d0bf2c37b9e2e92e70e308d1eaec2de6ef5e69c546"}, "downloads": -1, "filename": "planterbox-0.6.7.tar.gz", "has_sig": false, "md5_digest": "fdb1d7e9e0e136a8568a141afadb8a62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15202, "upload_time": "2018-08-02T21:09:24", "upload_time_iso_8601": "2018-08-02T21:09:24.841222Z", "url": "https://files.pythonhosted.org/packages/3b/14/33d9280c7a9c971d59b86d18b790534fb8fc1e5fdf45e55ba4011e8379cc/planterbox-0.6.7.tar.gz", "yanked": false}], "0.6.8": [{"comment_text": "", "digests": {"md5": "827e99ba8e9fb462a4a8381a9d19e63a", "sha256": "47ef940655ea632360117e725d8106db6a11fec824baa048993610cb3e3a3bd4"}, "downloads": -1, "filename": "planterbox-0.6.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "827e99ba8e9fb462a4a8381a9d19e63a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19149, "upload_time": "2018-08-15T17:12:48", "upload_time_iso_8601": "2018-08-15T17:12:48.904253Z", "url": "https://files.pythonhosted.org/packages/24/ae/234e9198bb1628bab0c34d43e6921dda7239480b8d0ffcd65aca698b010b/planterbox-0.6.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97051f1c5ee4cf98e8cd1685bee57167", "sha256": "419da407b3f98768545b5ea8928748b5ee36434c8a950c37299f3e6c6b6afb4a"}, "downloads": -1, "filename": "planterbox-0.6.8.tar.gz", "has_sig": false, "md5_digest": "97051f1c5ee4cf98e8cd1685bee57167", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15207, "upload_time": "2018-08-15T17:12:50", "upload_time_iso_8601": "2018-08-15T17:12:50.913567Z", "url": "https://files.pythonhosted.org/packages/79/c1/facb4eaed98c92fffcde766b2ad7a364fdf5a0b1c4e81a9816df31533f7f/planterbox-0.6.8.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "79d9bcb8abe3189480dc060d87e4f6f4", "sha256": "bcf843aa16dfad5bfa050da79be7c2d3f2ef34c9f21cf10e12021d6c15623328"}, "downloads": -1, "filename": "planterbox-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "79d9bcb8abe3189480dc060d87e4f6f4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20448, "upload_time": "2019-01-22T23:37:14", "upload_time_iso_8601": "2019-01-22T23:37:14.402308Z", "url": "https://files.pythonhosted.org/packages/3a/d2/65d11e573b504a4d4ac615d04b143575f1c2cac47e0bb6ec88428404a21d/planterbox-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "234d01b3d47ac23d1f6344ee60108b4b", "sha256": "5cf020106c9baee79552898997927a8d6105559ccce9321a772aae06d246c5b4"}, "downloads": -1, "filename": "planterbox-0.7.0.tar.gz", "has_sig": false, "md5_digest": "234d01b3d47ac23d1f6344ee60108b4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18285, "upload_time": "2019-01-22T23:37:15", "upload_time_iso_8601": "2019-01-22T23:37:15.894012Z", "url": "https://files.pythonhosted.org/packages/a9/72/c1a49ea62b34922c24856b05ad7dd97d10ccc4938ac30a5a7cb16c9c5850/planterbox-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79d9bcb8abe3189480dc060d87e4f6f4", "sha256": "bcf843aa16dfad5bfa050da79be7c2d3f2ef34c9f21cf10e12021d6c15623328"}, "downloads": -1, "filename": "planterbox-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "79d9bcb8abe3189480dc060d87e4f6f4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20448, "upload_time": "2019-01-22T23:37:14", "upload_time_iso_8601": "2019-01-22T23:37:14.402308Z", "url": "https://files.pythonhosted.org/packages/3a/d2/65d11e573b504a4d4ac615d04b143575f1c2cac47e0bb6ec88428404a21d/planterbox-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "234d01b3d47ac23d1f6344ee60108b4b", "sha256": "5cf020106c9baee79552898997927a8d6105559ccce9321a772aae06d246c5b4"}, "downloads": -1, "filename": "planterbox-0.7.0.tar.gz", "has_sig": false, "md5_digest": "234d01b3d47ac23d1f6344ee60108b4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18285, "upload_time": "2019-01-22T23:37:15", "upload_time_iso_8601": "2019-01-22T23:37:15.894012Z", "url": "https://files.pythonhosted.org/packages/a9/72/c1a49ea62b34922c24856b05ad7dd97d10ccc4938ac30a5a7cb16c9c5850/planterbox-0.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:40 2020"}