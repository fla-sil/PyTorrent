{"info": {"author": "Tobias Kunze", "author_email": "r@rixx.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "django-context-decorator\n------------------------\n\n.. image:: https://img.shields.io/travis/rixx/django-context-decorator.svg\n   :target: https://travis-ci.org/rixx/django-context-decorator\n   :alt: Continuous integration\n\n.. image:: https://img.shields.io/codecov/c/github/rixx/django-context-decorator.svg\n   :target: https://codecov.io/gh/rixx/django-context-decorator\n   :alt: Coverage\n\n.. image:: https://img.shields.io/pypi/v/django-context-decorator.svg\n   :target: https://pypi.python.org/pypi/django-context-decorator\n   :alt: PyPI\n\n``django-context-decorator`` is a Python package for Django removing the need\nto call ``super().get_context_data(**kwargs)`` in nearly every Django view.\n\nYou can also read the `blog post`_ about this package.\n\nUsage\n=====\n\n.. code-block:: python\n\n   from django_context_decorator import context\n   from django.utils.functional import cached_property\n   from django.views.generic import TemplateView\n\n   class MyView(TemplateView):\n       template_name = 'path/to/template.html'\n\n       @context\n       def context_variable(self):\n           return 'context value'\n\n       @context\n       @property\n       def context_property(self):\n           return 'context property'\n\n       @context\n       @cached_property\n       def expensive_context_property(self):\n           return 'expensive context property'\n\nNow you'll have access to ``{{ context_variable }}``, ``{{ context_property }}``\nand ``{{ expensive_context_property }}`` in your template.\n\nPlease note: While this package works with the ``@cached_property`` decorator,\nplease make sure to add the ``@context`` decorator **above** the\n``@cached_property`` decorator.\n\nThis is especially useful when you couple it with inheritance, because it\nallows you to re-use parent class variables without having to extract them from\nyour ``context``. So you could write a long-form like this:\n\n.. code-block:: python\n\n    from django.views.generic import TemplateView\n\n\n    class BaseMixin:\n\n        def get_context_data(self, **kwargs):\n            ctx = super().get_context_data(**kwargs)\n            ctx['var_from_base_mixin'] = 'var_from_base_mixin'\n            return ctx\n\n\n    class View1(BaseMixin, TemplateView):\n\n        def get_context_data(self, **kwargs):\n            ctx = super().get_context_data(**kwargs)\n            ctx['var_from_view_1'] = 'value_from_view_1'\n            return ctx\n\n\n    class View2(View1):\n\n        def get_context_data(self, **kwargs):\n            ctx = super().get_context_data(**kwargs)\n            ctx['var_from_view_2'] = 'value_from_view_2'\n            return ctx\n\ninstead like this:\n\n.. code-block:: python\n\n    from django.views.generic import TemplateView\n    from django_context_decorator import context\n\n\n    class BaseMixin:\n\n        @context\n        def var_from_base_mixin(self):\n            return 'var_from_base_mixin'\n\n\n    class View1(BaseMixin, TemplateView):\n\n        @context\n        def var_from_view_1(self):\n            return 'value_from_view_1'\n\n\n    class View2(View1):\n\n        @context\n        def var_from_view_2(self):\n            return 'value_from_view_2'\n\n\n\nLimitations\n===========\n\nDue to the usage of ``__set_name__``, this package is limited to Python 3.6+.\n\nDevelopment\n===========\n\nAll code resides in ``django_context_decorator.py``. Tests are collected by\n``pytest`` from all files starting with ``test_``. To run tests, start a\nvirtual environment, install the dependencies, and run ``pytest``::\n\n    pip install django pytest pytest-cov\n    pytest --cov-report term --cov=django_context_decorator\n\n.. _blog post: https://rixx.de/blog/a-context-decorator-for-django/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rixx/django-context-decorator", "keywords": "django context templates", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "django-context-decorator", "package_url": "https://pypi.org/project/django-context-decorator/", "platform": "", "project_url": "https://pypi.org/project/django-context-decorator/", "project_urls": {"Homepage": "https://github.com/rixx/django-context-decorator"}, "release_url": "https://pypi.org/project/django-context-decorator/1.6.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A context decorator for Django views", "version": "1.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/rixx/django-context-decorator\" rel=\"nofollow\"><img alt=\"Continuous integration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea5569173d37153808d5d654f8086878dea3127b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f726978782f646a616e676f2d636f6e746578742d6465636f7261746f722e737667\"></a>\n<a href=\"https://codecov.io/gh/rixx/django-context-decorator\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d7298e718d0b9448a984dedbe178b5a2ecdc7cf/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f726978782f646a616e676f2d636f6e746578742d6465636f7261746f722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-context-decorator\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a5f174dc00d453753a209ad90cf8346e5c76532/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d636f6e746578742d6465636f7261746f722e737667\"></a>\n<p><tt><span class=\"pre\">django-context-decorator</span></tt> is a Python package for Django removing the need\nto call <tt><span class=\"pre\">super().get_context_data(**kwargs)</span></tt> in nearly every Django view.</p>\n<p>You can also read the <a href=\"https://rixx.de/blog/a-context-decorator-for-django/\" rel=\"nofollow\">blog post</a> about this package.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_context_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">context</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.functional</span> <span class=\"kn\">import</span> <span class=\"n\">cached_property</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyView</span><span class=\"p\">(</span><span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n    <span class=\"n\">template_name</span> <span class=\"o\">=</span> <span class=\"s1\">'path/to/template.html'</span>\n\n    <span class=\"nd\">@context</span>\n    <span class=\"k\">def</span> <span class=\"nf\">context_variable</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'context value'</span>\n\n    <span class=\"nd\">@context</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">context_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'context property'</span>\n\n    <span class=\"nd\">@context</span>\n    <span class=\"nd\">@cached_property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">expensive_context_property</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'expensive context property'</span>\n</pre>\n<p>Now you\u2019ll have access to <tt>{{ context_variable }}</tt>, <tt>{{ context_property }}</tt>\nand <tt>{{ expensive_context_property }}</tt> in your template.</p>\n<p>Please note: While this package works with the <tt>@cached_property</tt> decorator,\nplease make sure to add the <tt>@context</tt> decorator <strong>above</strong> the\n<tt>@cached_property</tt> decorator.</p>\n<p>This is especially useful when you couple it with inheritance, because it\nallows you to re-use parent class variables without having to extract them from\nyour <tt>context</tt>. So you could write a long-form like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BaseMixin</span><span class=\"p\">:</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">ctx</span><span class=\"p\">[</span><span class=\"s1\">'var_from_base_mixin'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'var_from_base_mixin'</span>\n        <span class=\"k\">return</span> <span class=\"n\">ctx</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">View1</span><span class=\"p\">(</span><span class=\"n\">BaseMixin</span><span class=\"p\">,</span> <span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">ctx</span><span class=\"p\">[</span><span class=\"s1\">'var_from_view_1'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'value_from_view_1'</span>\n        <span class=\"k\">return</span> <span class=\"n\">ctx</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">View2</span><span class=\"p\">(</span><span class=\"n\">View1</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_context_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_context_data</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">ctx</span><span class=\"p\">[</span><span class=\"s1\">'var_from_view_2'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'value_from_view_2'</span>\n        <span class=\"k\">return</span> <span class=\"n\">ctx</span>\n</pre>\n<p>instead like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_context_decorator</span> <span class=\"kn\">import</span> <span class=\"n\">context</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BaseMixin</span><span class=\"p\">:</span>\n\n    <span class=\"nd\">@context</span>\n    <span class=\"k\">def</span> <span class=\"nf\">var_from_base_mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'var_from_base_mixin'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">View1</span><span class=\"p\">(</span><span class=\"n\">BaseMixin</span><span class=\"p\">,</span> <span class=\"n\">TemplateView</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@context</span>\n    <span class=\"k\">def</span> <span class=\"nf\">var_from_view_1</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'value_from_view_1'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">View2</span><span class=\"p\">(</span><span class=\"n\">View1</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@context</span>\n    <span class=\"k\">def</span> <span class=\"nf\">var_from_view_2</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'value_from_view_2'</span>\n</pre>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>Due to the usage of <tt>__set_name__</tt>, this package is limited to Python 3.6+.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>All code resides in <tt>django_context_decorator.py</tt>. Tests are collected by\n<tt>pytest</tt> from all files starting with <tt>test_</tt>. To run tests, start a\nvirtual environment, install the dependencies, and run <tt>pytest</tt>:</p>\n<pre>pip install django pytest pytest-cov\npytest --cov-report term --cov=django_context_decorator\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6119117, "releases": {"1.0.0.post1": [{"comment_text": "", "digests": {"md5": "cacd12b23617d6725186645775aebb54", "sha256": "0af53ad13a287b058ef7ec28944cbbb461007c92ea87f91d0d846519b21c2874"}, "downloads": -1, "filename": "django_context_decorator-1.0.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "cacd12b23617d6725186645775aebb54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 1910, "upload_time": "2019-04-13T11:00:32", "upload_time_iso_8601": "2019-04-13T11:00:32.297698Z", "url": "https://files.pythonhosted.org/packages/96/f1/4b668319ed5f8c3e73c0ebfa0da57316d49269ebdd3f539c4b4163920d0d/django_context_decorator-1.0.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72294f6426c6d26d54772b5a78a188e0", "sha256": "cd8ce0c5905be7f8cb2028620957e1225126099fe65e9999ed55c53448768b39"}, "downloads": -1, "filename": "django_context_decorator-1.0.0.post1.tar.gz", "has_sig": false, "md5_digest": "72294f6426c6d26d54772b5a78a188e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1971, "upload_time": "2019-04-13T11:00:35", "upload_time_iso_8601": "2019-04-13T11:00:35.080344Z", "url": "https://files.pythonhosted.org/packages/ca/b2/c83c2b59dc0735596be25a0f2d3f1c3886b1013719be23c001945523c30e/django_context_decorator-1.0.0.post1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "1c40c85e57b8fec6f5608ba1311da711", "sha256": "09671e4b96e816382e5c009c428970fb762a82e1fbc9c01fd9062d8316350f64"}, "downloads": -1, "filename": "django_context_decorator-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1c40c85e57b8fec6f5608ba1311da711", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 1831, "upload_time": "2019-04-13T14:56:00", "upload_time_iso_8601": "2019-04-13T14:56:00.165188Z", "url": "https://files.pythonhosted.org/packages/85/5a/f921947e20c912d5949be569693cdf2aa412140a1c66725ab6961cca3b4e/django_context_decorator-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4981b9051c0ed4cc7a8cab119eb9e044", "sha256": "b058f9bcc041cdf2053ed94d3653afe5179b22abaec94f14d75ad2cb1fd6eb38"}, "downloads": -1, "filename": "django_context_decorator-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4981b9051c0ed4cc7a8cab119eb9e044", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1944, "upload_time": "2019-04-13T14:56:01", "upload_time_iso_8601": "2019-04-13T14:56:01.516748Z", "url": "https://files.pythonhosted.org/packages/2c/a6/33032c23ae16b452ca6a551c08b2281aac54cca7752d5827968daf000804/django_context_decorator-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "d4a1d342549b24f85a6aa1b200d57cc7", "sha256": "a158dbebc428a84819e961369f273a1b9e8e295b4d80d4387aa035280fb40a6b"}, "downloads": -1, "filename": "django_context_decorator-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4a1d342549b24f85a6aa1b200d57cc7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2531, "upload_time": "2019-04-13T15:56:02", "upload_time_iso_8601": "2019-04-13T15:56:02.657324Z", "url": "https://files.pythonhosted.org/packages/67/4e/18957dce5a8764982cd9dc726dd7561db9a409ded6aa446280874b2f9750/django_context_decorator-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d6c5945f75f7f515984aac6ad3fc765", "sha256": "662105fec57253b9cfe0b01e05e81f3b4d80ed7354bc8524de195715062ab081"}, "downloads": -1, "filename": "django_context_decorator-1.2.0.tar.gz", "has_sig": false, "md5_digest": "3d6c5945f75f7f515984aac6ad3fc765", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2393, "upload_time": "2019-04-13T15:56:04", "upload_time_iso_8601": "2019-04-13T15:56:04.208678Z", "url": "https://files.pythonhosted.org/packages/a5/bb/1f1773b53321dd31f313d66f178fa5a3a7102ba978549483272c6c1c01a4/django_context_decorator-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "b6d3f9e08006063d661bbf4c23d8cdfc", "sha256": "6d18966ff647708dc522fbc1c319a78f45b55cfbc6c67db36d455d2940a1c759"}, "downloads": -1, "filename": "django_context_decorator-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b6d3f9e08006063d661bbf4c23d8cdfc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2652, "upload_time": "2019-04-13T17:40:44", "upload_time_iso_8601": "2019-04-13T17:40:44.325727Z", "url": "https://files.pythonhosted.org/packages/0c/50/1f191ae05b092d9a25b900c0e5c3b6587cbfaa6c4001c5f6cb518e487b39/django_context_decorator-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eac6ea8413aeb7018f394ce1080d7192", "sha256": "16f637f3d1603653c29b9e5b9a9bf323f771c0a74be24f96f6aa9aba06e3e66e"}, "downloads": -1, "filename": "django_context_decorator-1.3.0.tar.gz", "has_sig": false, "md5_digest": "eac6ea8413aeb7018f394ce1080d7192", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2544, "upload_time": "2019-04-13T17:40:46", "upload_time_iso_8601": "2019-04-13T17:40:46.054113Z", "url": "https://files.pythonhosted.org/packages/0c/a9/1c89f3a00a307649c9c04e01a859abfe8762d8a0ee4987ad9ead6d5a96db/django_context_decorator-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "f8596053ce818e3577684cc3ba0b061d", "sha256": "c6400d6be661faa4b76541db0d768f3a3ebb2384964f68c54266f7cd5e96820d"}, "downloads": -1, "filename": "django_context_decorator-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f8596053ce818e3577684cc3ba0b061d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2707, "upload_time": "2019-04-14T09:56:01", "upload_time_iso_8601": "2019-04-14T09:56:01.030874Z", "url": "https://files.pythonhosted.org/packages/5f/c1/5dd7f389838ba0a8a461e4916310b0ea246acb117746d4e1d2382d564e79/django_context_decorator-1.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0162c3ca3681cefb0ae6987bc6f237dd", "sha256": "13d659ce3ef46d5301bdfc7fcdef1f60b49baedf58c37788304477830f89c4c2"}, "downloads": -1, "filename": "django_context_decorator-1.4.0.tar.gz", "has_sig": false, "md5_digest": "0162c3ca3681cefb0ae6987bc6f237dd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2598, "upload_time": "2019-04-14T09:56:02", "upload_time_iso_8601": "2019-04-14T09:56:02.421167Z", "url": "https://files.pythonhosted.org/packages/99/51/2692f8a52a9a7431252696ac1cc133a275993ddd33b550cd207e2f864125/django_context_decorator-1.4.0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "7625c2e8293d4eb013f232f5fb7eb60f", "sha256": "fe71ce1f822999c84e29b01fdd87de75fcda8979057bc0a2af916bed4e818106"}, "downloads": -1, "filename": "django_context_decorator-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7625c2e8293d4eb013f232f5fb7eb60f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2853, "upload_time": "2019-04-14T12:53:38", "upload_time_iso_8601": "2019-04-14T12:53:38.684787Z", "url": "https://files.pythonhosted.org/packages/a6/f3/cf0a3644996f07f970508ba08cbf8cfaf01d0b52873e042df2dbac75b030/django_context_decorator-1.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9700f8668c8a8dfa62916d469cd7bcb2", "sha256": "389f67e54079c3b1dd130ced31ade9bf79045f456d39b050c940d61135dccb9a"}, "downloads": -1, "filename": "django_context_decorator-1.5.0.tar.gz", "has_sig": false, "md5_digest": "9700f8668c8a8dfa62916d469cd7bcb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2818, "upload_time": "2019-04-14T12:53:40", "upload_time_iso_8601": "2019-04-14T12:53:40.133950Z", "url": "https://files.pythonhosted.org/packages/32/75/8bf5c0492791baf69da873b0af2e3fbf7fb66a1ca110cfb0f910cc184ee8/django_context_decorator-1.5.0.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "fdc67689201bac9c902318d2af053aef", "sha256": "6b4ba53811362c359221da243dd8db19c02891bb493e984e4dbe5edfd54f40b5"}, "downloads": -1, "filename": "django_context_decorator-1.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fdc67689201bac9c902318d2af053aef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3255, "upload_time": "2019-11-11T19:19:46", "upload_time_iso_8601": "2019-11-11T19:19:46.675410Z", "url": "https://files.pythonhosted.org/packages/65/9d/4f4ab5c8d7d4355fe57d68d4f114d7dfa37c19facfea54c3328caa04bd3b/django_context_decorator-1.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a338b1c0ab020f4b5cf62b8ba9f239f", "sha256": "4a70acd422165807710873cfa5e0cbf9e24ad2548b065f726e404f9473997e29"}, "downloads": -1, "filename": "django_context_decorator-1.6.0.tar.gz", "has_sig": false, "md5_digest": "5a338b1c0ab020f4b5cf62b8ba9f239f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3336, "upload_time": "2019-11-11T19:19:48", "upload_time_iso_8601": "2019-11-11T19:19:48.083238Z", "url": "https://files.pythonhosted.org/packages/e9/b6/438d311b3b53e92ecc8083b890758157120dad763567bbb3e42b439a3947/django_context_decorator-1.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fdc67689201bac9c902318d2af053aef", "sha256": "6b4ba53811362c359221da243dd8db19c02891bb493e984e4dbe5edfd54f40b5"}, "downloads": -1, "filename": "django_context_decorator-1.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fdc67689201bac9c902318d2af053aef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3255, "upload_time": "2019-11-11T19:19:46", "upload_time_iso_8601": "2019-11-11T19:19:46.675410Z", "url": "https://files.pythonhosted.org/packages/65/9d/4f4ab5c8d7d4355fe57d68d4f114d7dfa37c19facfea54c3328caa04bd3b/django_context_decorator-1.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a338b1c0ab020f4b5cf62b8ba9f239f", "sha256": "4a70acd422165807710873cfa5e0cbf9e24ad2548b065f726e404f9473997e29"}, "downloads": -1, "filename": "django_context_decorator-1.6.0.tar.gz", "has_sig": false, "md5_digest": "5a338b1c0ab020f4b5cf62b8ba9f239f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3336, "upload_time": "2019-11-11T19:19:48", "upload_time_iso_8601": "2019-11-11T19:19:48.083238Z", "url": "https://files.pythonhosted.org/packages/e9/b6/438d311b3b53e92ecc8083b890758157120dad763567bbb3e42b439a3947/django_context_decorator-1.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:51 2020"}