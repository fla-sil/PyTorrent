{"info": {"author": "Simon Willison", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# datasette-configure-asgi\n\n[![PyPI](https://img.shields.io/pypi/v/datasette-configure-asgi.svg)](https://pypi.org/project/datasette-configure-asgi/)\n[![CircleCI](https://circleci.com/gh/simonw/datasette-configure-asgi.svg?style=svg)](https://circleci.com/gh/simonw/datasette-configure-asgi)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/datasette-configure-asgi/blob/master/LICENSE)\n\nDatasette plugin for configuring arbitrary ASGI middleware\n\n## Installation\n\n    pip install datasette-configure-asgi\n\n## Usage\n\nThis plugin only takes effect if your `metadata.json` file contains relevant top-level plugin configuration in a `\"datasette-configure-asgi\"` configuration key.\n\nFor example, to wrap your Datasette instance in the `asgi-log-to-sqlite` middleware configured to write logs to `/tmp/log.db` you would use the following:\n\n```json\n{\n    \"plugins\": {\n        \"datasette-configure-asgi\": [\n            {\n                \"class\": \"asgi_log_to_sqlite.AsgiLogToSqlite\",\n                \"args\": {\n                    \"file\": \"/tmp/log.db\"\n                }\n            }\n        ]\n    }\n}\n```\n\nThe `\"datasette-configure-asgi\"` key should be a list of JSON objects. Each object should have a `\"class\"` key indicating the class to be used, and an optional `\"args\"` key providing any necessary arguments to be passed to that class constructor.\n\n## Plugin structure\n\nThis plugin can be used to wrap your Datasette instance in any ASGI middleware that conforms to the following structure:\n\n```python\nclass SomeAsgiMiddleware:\n    def __init__(self, app, arg1, arg2):\n        self.app = app\n        self.arg1 = arg1\n        self.arg2 = arg2\n\n    async def __call__(self, scope, receive, send):\n        start = time.time()\n        await self.app(scope, receive, send)\n        end = time.time()\n        print(\"Time taken: {}\".format(end - start))\n```\n\nSo the middleware is a class with a constructor which takes the wrapped application as a first argument, `app`, followed by further named arguments to configure the middleware. It provides an `async def __call__(self, scope, receive, send)` method to implement the middleware's behavior.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonw/datasette-configure-asgi", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "datasette-configure-asgi", "package_url": "https://pypi.org/project/datasette-configure-asgi/", "platform": "", "project_url": "https://pypi.org/project/datasette-configure-asgi/", "project_urls": {"Homepage": "https://github.com/simonw/datasette-configure-asgi"}, "release_url": "https://pypi.org/project/datasette-configure-asgi/0.1/", "requires_dist": ["pytest ; extra == 'test'", "pytest-asyncio ; extra == 'test'", "asgiref (==3.1.2) ; extra == 'test'", "datasette ; extra == 'test'"], "requires_python": "", "summary": "Datasette plugin for configuring arbitrary ASGI middleware", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>datasette-configure-asgi</h1>\n<p><a href=\"https://pypi.org/project/datasette-configure-asgi/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ee4d7e91c4f79e2c55dea8f62e19df786cb0fdf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6461746173657474652d636f6e6669677572652d617367692e737667\"></a>\n<a href=\"https://circleci.com/gh/simonw/datasette-configure-asgi\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f13c76cb9d5305330dd91d4cba9fb22373fe2c9/68747470733a2f2f636972636c6563692e636f6d2f67682f73696d6f6e772f6461746173657474652d636f6e6669677572652d617367692e7376673f7374796c653d737667\"></a>\n<a href=\"https://github.com/simonw/datasette-configure-asgi/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bad0ad2a7195b40874e3a10488118122d89489fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>Datasette plugin for configuring arbitrary ASGI middleware</p>\n<h2>Installation</h2>\n<pre><code>pip install datasette-configure-asgi\n</code></pre>\n<h2>Usage</h2>\n<p>This plugin only takes effect if your <code>metadata.json</code> file contains relevant top-level plugin configuration in a <code>\"datasette-configure-asgi\"</code> configuration key.</p>\n<p>For example, to wrap your Datasette instance in the <code>asgi-log-to-sqlite</code> middleware configured to write logs to <code>/tmp/log.db</code> you would use the following:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"datasette-configure-asgi\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"nt\">\"class\"</span><span class=\"p\">:</span> <span class=\"s2\">\"asgi_log_to_sqlite.AsgiLogToSqlite\"</span><span class=\"p\">,</span>\n                <span class=\"nt\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"file\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/tmp/log.db\"</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The <code>\"datasette-configure-asgi\"</code> key should be a list of JSON objects. Each object should have a <code>\"class\"</code> key indicating the class to be used, and an optional <code>\"args\"</code> key providing any necessary arguments to be passed to that class constructor.</p>\n<h2>Plugin structure</h2>\n<p>This plugin can be used to wrap your Datasette instance in any ASGI middleware that conforms to the following structure:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">SomeAsgiMiddleware</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">app</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg1</span> <span class=\"o\">=</span> <span class=\"n\">arg1</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"n\">arg2</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">scope</span><span class=\"p\">,</span> <span class=\"n\">receive</span><span class=\"p\">,</span> <span class=\"n\">send</span><span class=\"p\">):</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"p\">,</span> <span class=\"n\">receive</span><span class=\"p\">,</span> <span class=\"n\">send</span><span class=\"p\">)</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Time taken: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">end</span> <span class=\"o\">-</span> <span class=\"n\">start</span><span class=\"p\">))</span>\n</pre>\n<p>So the middleware is a class with a constructor which takes the wrapped application as a first argument, <code>app</code>, followed by further named arguments to configure the middleware. It provides an <code>async def __call__(self, scope, receive, send)</code> method to implement the middleware's behavior.</p>\n\n          </div>"}, "last_serial": 6314159, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "79b55380adfb541b4c33cf952eb9264e", "sha256": "2061cf5184f5d9aaa7909f6fef54702c2595fcc731bdd4472518c07ce3fa8cb2"}, "downloads": -1, "filename": "datasette_configure_asgi-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79b55380adfb541b4c33cf952eb9264e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7012, "upload_time": "2019-12-16T22:20:35", "upload_time_iso_8601": "2019-12-16T22:20:35.354777Z", "url": "https://files.pythonhosted.org/packages/f7/76/c2ae1907ff0c5e8f3366c2041c1d73019b7825d6948ce880eb3ddf60be20/datasette_configure_asgi-0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "79b55380adfb541b4c33cf952eb9264e", "sha256": "2061cf5184f5d9aaa7909f6fef54702c2595fcc731bdd4472518c07ce3fa8cb2"}, "downloads": -1, "filename": "datasette_configure_asgi-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "79b55380adfb541b4c33cf952eb9264e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7012, "upload_time": "2019-12-16T22:20:35", "upload_time_iso_8601": "2019-12-16T22:20:35.354777Z", "url": "https://files.pythonhosted.org/packages/f7/76/c2ae1907ff0c5e8f3366c2041c1d73019b7825d6948ce880eb3ddf60be20/datasette_configure_asgi-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:40:11 2020"}