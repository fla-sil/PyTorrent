{"info": {"author": "Brett Langdon", "author_email": "brett@blangdon.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Utilities"], "description": "BuildParser\n===========\n\nA [specification](SPECIFICATION.md) and parser for project build configuration.\n\n## Setup\n\n### pip\n```bash\npip install buildparser\n````\n\n### git\n```bash\ngit clone git://github.com/brettlangdon/buildparser.git\ncd ./buildparser\npython setup.py install\n```\n\n## Basic Usage\n\n```python\nimport buildparser\n\nbuilds = buildparser.parse(\"./path/to/project\")\nfor build in builds:\n    print build.env\n    print build.before_build\n    print build.build\n    print build.after_build\n    print build.after_success\n    print build.after_failure\n```\n\n## API\n\n### Environment(object)\n#### Properties\n* `type` - string\n* `options` - mixed\n\n#### Methods\n* `__init__(self, type, options)`\n* `__repr__(self)`\n* `as_dict(self)`\n* `as_json(self)`\n* `as_yaml(self)`\n\n### Script(object)\n#### Properties\n* `commands` - list\n\n#### Methods\n* `__init__(self, commands)`\n* `__repr__(self)`\n* `as_dict(self)`\n* `as_json(self)`\n* `as_yaml(self)`\n\n### Build(object)\n#### Properties\n* `env` - Environment\n* `before_build` - Script\n* `build` - Script\n* `after_build` - Script\n* `after_success` - Script\n* `after_failure` - Script\n\n#### Methods\n* `__init__(self, env, before_build, build, after_build, after_success, after_failure)`\n* `__repr__(self)`\n* `as_dict(self)`\n* `as_json(self)`\n* `as_yaml(self)`\n\n## UnknownExtensionException(Exception)\n\n## parse(directory, name=\"build\")\n*returns*: list\n\nLook for an appropriate `name` file or directory in the directory `directory`\nand parse all possible build configurations found.\n\n`parse` defaults to looking for the following files:\n* `.build.yml`\n* `.build.yaml`\n* `.build.json`\n* `.build.ini`\n* `.build.cfg`\n\nor for the directory `.build` which contains one or many configuration files\n(name doesn't have to be \"build\").\n\n## parse_directory(dir_name)\n*returns*: list\n\nLook for all appropriate files inside of `dir_name` and parse configurations found.\n\n## parse_file(file_name)\n*returns*: list\n\nParse any available build configurations from `file_name`\n\n## parse_yaml(file_name)\n*returns*: list\n\nParse any available build configurations from `file_name` as though it was yaml.\n\n## parse_json(file_name)\n*returns*: list\n\nParse any available build configurations from `file_name` as though it was json.\n\n## parse_ini(file_name)\n*returns*: list\n\nParse any available build configurations from `file_name` as though it was an ini file.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brettlangdon/buildparser", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "buildparser", "package_url": "https://pypi.org/project/buildparser/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/buildparser/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/brettlangdon/buildparser"}, "release_url": "https://pypi.org/project/buildparser/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Generic job build specification parser", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            BuildParser<br>===========<br><br>A [specification](SPECIFICATION.md) and parser for project build configuration.<br><br>## Setup<br><br>### pip<br>```bash<br>pip install buildparser<br>````<br><br>### git<br>```bash<br>git clone git://github.com/brettlangdon/buildparser.git<br>cd ./buildparser<br>python setup.py install<br>```<br><br>## Basic Usage<br><br>```python<br>import buildparser<br><br>builds = buildparser.parse(\"./path/to/project\")<br>for build in builds:<br>    print build.env<br>    print build.before_build<br>    print build.build<br>    print build.after_build<br>    print build.after_success<br>    print build.after_failure<br>```<br><br>## API<br><br>### Environment(object)<br>#### Properties<br>* `type` - string<br>* `options` - mixed<br><br>#### Methods<br>* `__init__(self, type, options)`<br>* `__repr__(self)`<br>* `as_dict(self)`<br>* `as_json(self)`<br>* `as_yaml(self)`<br><br>### Script(object)<br>#### Properties<br>* `commands` - list<br><br>#### Methods<br>* `__init__(self, commands)`<br>* `__repr__(self)`<br>* `as_dict(self)`<br>* `as_json(self)`<br>* `as_yaml(self)`<br><br>### Build(object)<br>#### Properties<br>* `env` - Environment<br>* `before_build` - Script<br>* `build` - Script<br>* `after_build` - Script<br>* `after_success` - Script<br>* `after_failure` - Script<br><br>#### Methods<br>* `__init__(self, env, before_build, build, after_build, after_success, after_failure)`<br>* `__repr__(self)`<br>* `as_dict(self)`<br>* `as_json(self)`<br>* `as_yaml(self)`<br><br>## UnknownExtensionException(Exception)<br><br>## parse(directory, name=\"build\")<br>*returns*: list<br><br>Look for an appropriate `name` file or directory in the directory `directory`<br>and parse all possible build configurations found.<br><br>`parse` defaults to looking for the following files:<br>* `.build.yml`<br>* `.build.yaml`<br>* `.build.json`<br>* `.build.ini`<br>* `.build.cfg`<br><br>or for the directory `.build` which contains one or many configuration files<br>(name doesn't have to be \"build\").<br><br>## parse_directory(dir_name)<br>*returns*: list<br><br>Look for all appropriate files inside of `dir_name` and parse configurations found.<br><br>## parse_file(file_name)<br>*returns*: list<br><br>Parse any available build configurations from `file_name`<br><br>## parse_yaml(file_name)<br>*returns*: list<br><br>Parse any available build configurations from `file_name` as though it was yaml.<br><br>## parse_json(file_name)<br>*returns*: list<br><br>Parse any available build configurations from `file_name` as though it was json.<br><br>## parse_ini(file_name)<br>*returns*: list<br><br>Parse any available build configurations from `file_name` as though it was an ini file.<br>\n          </div>"}, "last_serial": 1294835, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "42a6dc83235b3348b752378e037a6ddc", "sha256": "cfdeb6d315b2c500368c6042feb2771a7c692fbe6010b75afe28b824728110b1"}, "downloads": -1, "filename": "buildparser-0.1.0.tar.gz", "has_sig": false, "md5_digest": "42a6dc83235b3348b752378e037a6ddc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4524, "upload_time": "2014-10-14T01:26:49", "upload_time_iso_8601": "2014-10-14T01:26:49.810283Z", "url": "https://files.pythonhosted.org/packages/4d/75/661c84e1a798d9efcfbdd884c54dea0a467b021df15c7af3a4e45db76615/buildparser-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "682df479eb4358ca4f497afec03a8cac", "sha256": "087acaeb9c0bc0ecdee3d416c1f65f6ca3758df97bf3608381f5e88e8058f3a7"}, "downloads": -1, "filename": "buildparser-0.1.1.tar.gz", "has_sig": false, "md5_digest": "682df479eb4358ca4f497afec03a8cac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4523, "upload_time": "2014-11-05T02:40:39", "upload_time_iso_8601": "2014-11-05T02:40:39.187847Z", "url": "https://files.pythonhosted.org/packages/c5/e7/70bc098b267de7fa0d0761fa0123f178e358cc414749aa22e70b0e8def9d/buildparser-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "682df479eb4358ca4f497afec03a8cac", "sha256": "087acaeb9c0bc0ecdee3d416c1f65f6ca3758df97bf3608381f5e88e8058f3a7"}, "downloads": -1, "filename": "buildparser-0.1.1.tar.gz", "has_sig": false, "md5_digest": "682df479eb4358ca4f497afec03a8cac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4523, "upload_time": "2014-11-05T02:40:39", "upload_time_iso_8601": "2014-11-05T02:40:39.187847Z", "url": "https://files.pythonhosted.org/packages/c5/e7/70bc098b267de7fa0d0761fa0123f178e358cc414749aa22e70b0e8def9d/buildparser-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:02 2020"}