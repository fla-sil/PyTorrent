{"info": {"author": "Level Up", "author_email": "os@lvlup.us", "bugtrack_url": null, "classifiers": [], "description": "Send HTML Email\n===============\n\nDjango app to send html emails. Email can be template uses django templates\nand can be populated from an instance of an object, a dictionary or both.\n\nUsage\n-----\nIn this example we populate the object using the User model with and\nadditional dictionary for the time.\n\n\n::\n        from send_html_email.send_email import HtmlEmail\n        from django.contrib.auth.models import User\n        from datetime import datetime\n        \n        #get instance and value for additional dict\n        now = datetime.now()\n        user = User.objects.get(id=1)\n        \n        #create headers (subject. recipient list, sender)\n        headers = ('subject', ['recipient@test.com','optional_recipeint@test.com'], 'sender@test.com')\n        \n        #create HtmlEmail instance accepts arguements header, html email template and optionally text email template\n        email = HtmlEmail(headers, 'user_notification')\n        #Send email using instance to populate values and optionally sending an additional dictionary.\n        email.send_instance_email(user,{'today':now,})\n        #send email populated by dictionary.\n        email= HtmlEmail(headers, 'what_day_is_it')\n        email.send_dict_email({'today': now})\n\n::\n        from send_html_email.send_email import HtmlEmail\n        from django.contrib.auth.models import User\n        \n        user = User.objects.get(id=1)\n        \n        #do not need to create headers, done automatically\n        #create HtmlEmail instance accepts arguements header, html email template and optionally text email template\n        email = HtmlEmail(False, 'user_notification')\n        #Send email using instance to populate values and optionally sending an additional dictionary.\n        email.send_instance_email(user)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "thisislevelup.com", "keywords": null, "license": "GPL v3", "maintainer": null, "maintainer_email": null, "name": "send_html_email", "package_url": "https://pypi.org/project/send_html_email/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/send_html_email/", "project_urls": {"Download": "UNKNOWN", "Homepage": "thisislevelup.com"}, "release_url": "https://pypi.org/project/send_html_email/1.0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Sends an html email that populates a template with and object, dictionary or both", "version": "1.0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django app to send html emails. Email can be template uses django templates\nand can be populated from an instance of an object, a dictionary or both.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In this example we populate the object using the User model with and\nadditional dictionary for the time.</p>\n<dl>\n<dt>::</dt>\n<dd><p>from send_html_email.send_email import HtmlEmail\nfrom django.contrib.auth.models import User\nfrom datetime import datetime</p>\n<p>#get instance and value for additional dict\nnow = datetime.now()\nuser = User.objects.get(id=1)</p>\n<p>#create headers (subject. recipient list, sender)\nheaders = (\u2018subject\u2019, [<a href=\"mailto:'recipient%40test.com\">\u2018recipient<span>@</span>test<span>.</span>com</a>\u2019,\u2019<a href=\"mailto:optional_recipeint%40test.com\">optional_recipeint<span>@</span>test<span>.</span>com</a>\u2019], <a href=\"mailto:'sender%40test.com\">\u2018sender<span>@</span>test<span>.</span>com</a>\u2019)</p>\n<p>#create HtmlEmail instance accepts arguements header, html email template and optionally text email template\nemail = HtmlEmail(headers, \u2018user_notification\u2019)\n#Send email using instance to populate values and optionally sending an additional dictionary.\nemail.send_instance_email(user,{\u2018today\u2019:now,})\n#send email populated by dictionary.\nemail= HtmlEmail(headers, \u2018what_day_is_it\u2019)\nemail.send_dict_email({\u2018today\u2019: now})</p>\n</dd>\n</dl>\n<dl>\n<dt>::</dt>\n<dd><p>from send_html_email.send_email import HtmlEmail\nfrom django.contrib.auth.models import User</p>\n<p>user = User.objects.get(id=1)</p>\n<p>#do not need to create headers, done automatically\n#create HtmlEmail instance accepts arguements header, html email template and optionally text email template\nemail = HtmlEmail(False, \u2018user_notification\u2019)\n#Send email using instance to populate values and optionally sending an additional dictionary.\nemail.send_instance_email(user)</p>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 2582810, "releases": {"1.0.0.5": [{"comment_text": "", "digests": {"md5": "2b1a9bd122b3187c571773d0c0d0a93b", "sha256": "36f40d8583bbcde2792d1af2bcec8476de4421184f6af25a49edd4a495ae81a1"}, "downloads": -1, "filename": "send-html-email-1.0.0.5.tar.gz", "has_sig": false, "md5_digest": "2b1a9bd122b3187c571773d0c0d0a93b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4002, "upload_time": "2017-01-18T16:38:54", "upload_time_iso_8601": "2017-01-18T16:38:54.660918Z", "url": "https://files.pythonhosted.org/packages/c2/8f/83db51687296ade8fda37491c524ebb2c62cdbfac7b2f08fb5d51fd4076a/send-html-email-1.0.0.5.tar.gz", "yanked": false}], "1.0.0.6": [{"comment_text": "", "digests": {"md5": "d4b28886c8aef93608f61a24bab26c80", "sha256": "83251f63623526e8655dcc934d1e6fc80083d0a9f7c7e89bdfd3b2bdf2c419b4"}, "downloads": -1, "filename": "send-html-email-1.0.0.6.tar.gz", "has_sig": false, "md5_digest": "d4b28886c8aef93608f61a24bab26c80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4005, "upload_time": "2017-01-18T16:37:29", "upload_time_iso_8601": "2017-01-18T16:37:29.548769Z", "url": "https://files.pythonhosted.org/packages/8d/66/fb2885d64b3e7c29a77559ae7dfe0fc3aa36ced73228c0870e73be49b312/send-html-email-1.0.0.6.tar.gz", "yanked": false}], "1.0.1.0": []}, "urls": [], "timestamp": "Fri May  8 02:55:16 2020"}