{"info": {"author": "Vitor Mazzi", "author_email": "vitor.mazzi@intelie.com.br", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: System :: Monitoring"], "description": "# Live Client\n\nA toolset to interact with the Intelie LIVE Platform\n\n\n## Usage examples\n\n```\nimport sys\nimport argparse\n\nfrom live_client.query import on_event\nfrom live_client.events import messenger\n\n\ndef parse_arguments(argv):\n    parser = argparse.ArgumentParser(\n        description=\"Connects to a live instance and watches every query which is started\",\n        epilog=\"For each query, sends a message to one of the messenger's rooms\"\n    )\n    parser.add_argument(\"--live_url\", dest=\"live_url\", required=True, help=\"The url Intelie Live\")\n    parser.add_argument(\"--username\", dest=\"username\", required=True, help=\"Live username\")\n    parser.add_argument(\"--password\", dest=\"password\", required=True, help=\"Live password\")\n    parser.add_argument(\n        \"--rest_input\", dest=\"rest_input\", required=True, help=\"Path of the rest input integration\"\n    )\n    parser.add_argument(\"--user_id\", dest=\"user_id\", required=True, help=\"Live user id\")\n    parser.add_argument(\"--room_id\", dest=\"room_id\", required=True, help=\"Target room id\")\n\n    return parser.parse_args(argv[1:])\n\n\ndef build_settings(args):\n    return {\n        \"output\": {\n            \"author\": {\"id\": args.user_id, \"name\": \"\ud83e\udd16  Messages bot \"},\n            \"room\": {\"id\": args.room_id},\n        },\n        \"live\": {\n            \"url\": args.live_url,\n            \"rest_input\": args.rest_input,\n            \"username\": args.username,\n            \"password\": args.password,\n            \"user_id\": args.user_id,\n        },\n    }\n\n\nif __name__ == \"__main__\":\n    \"\"\"\n    Connects to a live instance and watches every query which is started\n    For each query, sends a message to one of the messenger's rooms\n    \"\"\"\n    args = parse_arguments(sys.argv)\n    settings = build_settings(args)\n\n    example_query = \"__queries action:start => expression, description\"\n    span = f\"last 60 seconds\"\n\n    @on_event(example_query, settings, span=span, timeout=120)\n    def handle_events(event):\n        event_data = event.get(\"data\", {})\n        content = event_data.get(\"content\", {})\n        template = \"New query: '{}'\"\n        for item in content:\n            message = template.format(item[\"expression\"])\n            print(message)\n            messenger.send_message(\n                message, timestamp=item[\"timestamp\"], process_settings=settings\n            )\n\n        return\n\n    handle_events()\n```\n\nMore examples can be found on the folder `docs/examples`.\n\n## Development\n\nThis project uses [black](https://github.com/psf/black) and [pre-commit](https://pre-commit.com/)\n\n### Running the Tests\n\nIf you installled `dev-requirements.txt` you already have `pytest` installed.\nThen just `cd` to the `tests` directory and run `pytest`.\n\n### Publishing to pypi\n\n```\n# Build the packages\n$ python setup.py egg_info sdist\n\n# Validate the package\n$ twine check dist/*\n\n# Upload the package\n$ twine upload dist/*\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/intelie/liveclient-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "live-client", "package_url": "https://pypi.org/project/live-client/", "platform": "", "project_url": "https://pypi.org/project/live-client/", "project_urls": {"Homepage": "https://github.com/intelie/liveclient-python"}, "release_url": "https://pypi.org/project/live-client/0.7.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Client libraries to connect with the Intelie LIVE platform", "version": "0.7.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Live Client</h1>\n<p>A toolset to interact with the Intelie LIVE Platform</p>\n<h2>Usage examples</h2>\n<pre><code>import sys\nimport argparse\n\nfrom live_client.query import on_event\nfrom live_client.events import messenger\n\n\ndef parse_arguments(argv):\n    parser = argparse.ArgumentParser(\n        description=\"Connects to a live instance and watches every query which is started\",\n        epilog=\"For each query, sends a message to one of the messenger's rooms\"\n    )\n    parser.add_argument(\"--live_url\", dest=\"live_url\", required=True, help=\"The url Intelie Live\")\n    parser.add_argument(\"--username\", dest=\"username\", required=True, help=\"Live username\")\n    parser.add_argument(\"--password\", dest=\"password\", required=True, help=\"Live password\")\n    parser.add_argument(\n        \"--rest_input\", dest=\"rest_input\", required=True, help=\"Path of the rest input integration\"\n    )\n    parser.add_argument(\"--user_id\", dest=\"user_id\", required=True, help=\"Live user id\")\n    parser.add_argument(\"--room_id\", dest=\"room_id\", required=True, help=\"Target room id\")\n\n    return parser.parse_args(argv[1:])\n\n\ndef build_settings(args):\n    return {\n        \"output\": {\n            \"author\": {\"id\": args.user_id, \"name\": \"\ud83e\udd16  Messages bot \"},\n            \"room\": {\"id\": args.room_id},\n        },\n        \"live\": {\n            \"url\": args.live_url,\n            \"rest_input\": args.rest_input,\n            \"username\": args.username,\n            \"password\": args.password,\n            \"user_id\": args.user_id,\n        },\n    }\n\n\nif __name__ == \"__main__\":\n    \"\"\"\n    Connects to a live instance and watches every query which is started\n    For each query, sends a message to one of the messenger's rooms\n    \"\"\"\n    args = parse_arguments(sys.argv)\n    settings = build_settings(args)\n\n    example_query = \"__queries action:start =&gt; expression, description\"\n    span = f\"last 60 seconds\"\n\n    @on_event(example_query, settings, span=span, timeout=120)\n    def handle_events(event):\n        event_data = event.get(\"data\", {})\n        content = event_data.get(\"content\", {})\n        template = \"New query: '{}'\"\n        for item in content:\n            message = template.format(item[\"expression\"])\n            print(message)\n            messenger.send_message(\n                message, timestamp=item[\"timestamp\"], process_settings=settings\n            )\n\n        return\n\n    handle_events()\n</code></pre>\n<p>More examples can be found on the folder <code>docs/examples</code>.</p>\n<h2>Development</h2>\n<p>This project uses <a href=\"https://github.com/psf/black\" rel=\"nofollow\">black</a> and <a href=\"https://pre-commit.com/\" rel=\"nofollow\">pre-commit</a></p>\n<h3>Running the Tests</h3>\n<p>If you installled <code>dev-requirements.txt</code> you already have <code>pytest</code> installed.\nThen just <code>cd</code> to the <code>tests</code> directory and run <code>pytest</code>.</p>\n<h3>Publishing to pypi</h3>\n<pre><code># Build the packages\n$ python setup.py egg_info sdist\n\n# Validate the package\n$ twine check dist/*\n\n# Upload the package\n$ twine upload dist/*\n</code></pre>\n\n          </div>"}, "last_serial": 7172874, "releases": {"0.5.0": [{"comment_text": "", "digests": {"md5": "ab292de5b0aeab169a66b31173577071", "sha256": "294bdd15eb5e3e9394bf3a426c90c1ba0b9d821b0a7f1ee6f7f37e72fb02d47a"}, "downloads": -1, "filename": "live_client-0.5.0.tar.gz", "has_sig": false, "md5_digest": "ab292de5b0aeab169a66b31173577071", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14721, "upload_time": "2020-03-02T19:16:10", "upload_time_iso_8601": "2020-03-02T19:16:10.504829Z", "url": "https://files.pythonhosted.org/packages/8e/75/81907b8dffc8c69ab1ed9a5dd5ab7780d01cd400b5ecd57843f2a75085d7/live_client-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8289f4ea8ba79681fc1ce40037ce67a8", "sha256": "65690dd25852c03f70076243096c5e371f989b3e277f01e3db069ccc9000f834"}, "downloads": -1, "filename": "live_client-0.5.1.tar.gz", "has_sig": false, "md5_digest": "8289f4ea8ba79681fc1ce40037ce67a8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15070, "upload_time": "2020-03-03T13:42:28", "upload_time_iso_8601": "2020-03-03T13:42:28.251984Z", "url": "https://files.pythonhosted.org/packages/07/d4/8a99b46f7ebfec74fef3822fd0d268fff33b4649ccfc3e74ac3a7feb1f4a/live_client-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "441fc13a297fc4eabca312ef0f4a6337", "sha256": "75d5c830e40eea309df7e0be22e7bd3c29861fb3979a84a13eae93bddff23822"}, "downloads": -1, "filename": "live_client-0.5.2.tar.gz", "has_sig": false, "md5_digest": "441fc13a297fc4eabca312ef0f4a6337", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18527, "upload_time": "2020-03-23T20:18:06", "upload_time_iso_8601": "2020-03-23T20:18:06.729371Z", "url": "https://files.pythonhosted.org/packages/79/4b/b0787c4098f657bb98e2061cd8e0e6f678c8786bcb3b200ae69afe57590d/live_client-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "97f5131f9d118db66a33fd95b68d67e1", "sha256": "76b3746b4af1948024dcba9ec5a81458e64c13cb3ec98286e209b9922b886ee1"}, "downloads": -1, "filename": "live_client-0.6.0.tar.gz", "has_sig": false, "md5_digest": "97f5131f9d118db66a33fd95b68d67e1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19256, "upload_time": "2020-03-23T22:12:56", "upload_time_iso_8601": "2020-03-23T22:12:56.111087Z", "url": "https://files.pythonhosted.org/packages/ba/6b/9608ae60cd9079562de816524e1d6d44c292c94deb5778ca20806cb24c1d/live_client-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "56f49b9ee5dab7536dfc9b933c1be933", "sha256": "881846fd517b4dd1b1015ed52f9950419cb3f046bc368d8d3521f6d9129b719f"}, "downloads": -1, "filename": "live_client-0.6.1.tar.gz", "has_sig": false, "md5_digest": "56f49b9ee5dab7536dfc9b933c1be933", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19239, "upload_time": "2020-03-24T16:39:41", "upload_time_iso_8601": "2020-03-24T16:39:41.260637Z", "url": "https://files.pythonhosted.org/packages/cf/d0/cff5421aa5f430fd60cbf18d861060d228522fb3ef316028e85a9014bcc9/live_client-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "5751581a81e163ab35d3b153d828d267", "sha256": "899ac9dadf3b36f4e70fbf1c865edbcaa56c7e7d28f2f22ff2bba42f8499fea2"}, "downloads": -1, "filename": "live_client-0.6.2.tar.gz", "has_sig": false, "md5_digest": "5751581a81e163ab35d3b153d828d267", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19269, "upload_time": "2020-03-27T14:22:14", "upload_time_iso_8601": "2020-03-27T14:22:14.462238Z", "url": "https://files.pythonhosted.org/packages/4f/dc/b6a8054a0a20ba3dd8775974fd48cdfd7ba51d38754a157a8dfdd508b84d/live_client-0.6.2.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "531d33fd7c7e29e830a45647c6e2187f", "sha256": "81d9f8492a9be1bd7233fcdb5cf6e988ba9b315d9c8444b09c9a5fd8331c754d"}, "downloads": -1, "filename": "live_client-0.7.0.tar.gz", "has_sig": false, "md5_digest": "531d33fd7c7e29e830a45647c6e2187f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19334, "upload_time": "2020-04-15T15:15:50", "upload_time_iso_8601": "2020-04-15T15:15:50.632951Z", "url": "https://files.pythonhosted.org/packages/90/5e/6055138d7cd5462333cd7435836152c57ba398366a3b7e5d471908a1a957/live_client-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "003be2a19427fc773590360e25313222", "sha256": "b602f889fd00006dbd702eabeaae4fc26a8d83f7f377f959e44eb2497360d651"}, "downloads": -1, "filename": "live_client-0.7.1.tar.gz", "has_sig": false, "md5_digest": "003be2a19427fc773590360e25313222", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19374, "upload_time": "2020-04-19T00:12:35", "upload_time_iso_8601": "2020-04-19T00:12:35.239663Z", "url": "https://files.pythonhosted.org/packages/3e/0f/8fa89bc52328997e1804ce1b6a1a044c4939c1dde192bac5deae30139453/live_client-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "d4e5a26b7cac6dbb60788e38194bc483", "sha256": "6bfe027e8b4a73a778f6e6038b474cfb02c472e65cbd5b0d726717ddb152a708"}, "downloads": -1, "filename": "live_client-0.7.2.tar.gz", "has_sig": false, "md5_digest": "d4e5a26b7cac6dbb60788e38194bc483", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19410, "upload_time": "2020-05-05T15:40:08", "upload_time_iso_8601": "2020-05-05T15:40:08.810269Z", "url": "https://files.pythonhosted.org/packages/b4/1e/7cbaebfba037061aeba8477ee01efae678bf17e238b76a8321a4c38a8f2a/live_client-0.7.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4e5a26b7cac6dbb60788e38194bc483", "sha256": "6bfe027e8b4a73a778f6e6038b474cfb02c472e65cbd5b0d726717ddb152a708"}, "downloads": -1, "filename": "live_client-0.7.2.tar.gz", "has_sig": false, "md5_digest": "d4e5a26b7cac6dbb60788e38194bc483", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19410, "upload_time": "2020-05-05T15:40:08", "upload_time_iso_8601": "2020-05-05T15:40:08.810269Z", "url": "https://files.pythonhosted.org/packages/b4/1e/7cbaebfba037061aeba8477ee01efae678bf17e238b76a8321a4c38a8f2a/live_client-0.7.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:07 2020"}