{"info": {"author": "Chris Dent", "author_email": "cdent@peermore.com", "bugtrack_url": null, "classifiers": [], "description": "Experiment with using redis as a store for TiddlyWeb.\n\nYou must be running a redis server for the tests to pass. The 'redis' module\nfor Python is required. If you have hiredis, parsing will be improved.\n\nThis code supports the full StorageInterface, including policies and\ntiddler revisions.\n\nIt makes no assumptions about how you are managing your redis server.\nYou will need to start that, and if you use any non-default configuration\nyou will need to put that in tiddlywebconfig.py. For example if you want\ndo use db 5, then you could have:\n\n    config = {\n        'server_store': ['redisstore', {'db': 5}],\n    }\n\n!ToDo\n\n* Consider using r->keys('tid:1:*') and similar to gather keys for\n  deletion. This may not be ideal though, as matching for keys when\n  there are many may be expensive.\n\n* Dealing with keys that might have ':' in them.\n\n* Manage keys that operate as reverse indexes for things we might\n  like to index_query, such as modifier, tags and fields. This has\n  not been done thus far as diddling with that would distract from\n  getting the core set of keys in place.\n\n* Consider reverse indexes for things like bags in recipes, and \n  users in policies. (Such things have been useful in TiddlySpace).\n  Again these are not yet done so as to maintain focus.\n\n* See what the options are for pub/sub.\n\n!Copyright Etc\n\nCopyright 2011, Chris Dent <cdent@peermore.com>\nReleased under the BSD License", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/tiddlywebplugins.redisstore", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "tiddlywebplugins.redisstore", "package_url": "https://pypi.org/project/tiddlywebplugins.redisstore/", "platform": "Posix; MacOS X; Windows", "project_url": "https://pypi.org/project/tiddlywebplugins.redisstore/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/tiddlywebplugins.redisstore"}, "release_url": "https://pypi.org/project/tiddlywebplugins.redisstore/0.3/", "requires_dist": null, "requires_python": null, "summary": "TiddlyWeb store using Redis", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            Experiment with using redis as a store for TiddlyWeb.<br><br>You must be running a redis server for the tests to pass. The 'redis' module<br>for Python is required. If you have hiredis, parsing will be improved.<br><br>This code supports the full StorageInterface, including policies and<br>tiddler revisions.<br><br>It makes no assumptions about how you are managing your redis server.<br>You will need to start that, and if you use any non-default configuration<br>you will need to put that in tiddlywebconfig.py. For example if you want<br>do use db 5, then you could have:<br><br>    config = {<br>        'server_store': ['redisstore', {'db': 5}],<br>    }<br><br>!ToDo<br><br>* Consider using r-&gt;keys('tid:1:*') and similar to gather keys for<br>  deletion. This may not be ideal though, as matching for keys when<br>  there are many may be expensive.<br><br>* Dealing with keys that might have ':' in them.<br><br>* Manage keys that operate as reverse indexes for things we might<br>  like to index_query, such as modifier, tags and fields. This has<br>  not been done thus far as diddling with that would distract from<br>  getting the core set of keys in place.<br><br>* Consider reverse indexes for things like bags in recipes, and <br>  users in policies. (Such things have been useful in TiddlySpace).<br>  Again these are not yet done so as to maintain focus.<br><br>* See what the options are for pub/sub.<br><br>!Copyright Etc<br><br>Copyright 2011, Chris Dent &lt;cdent@peermore.com&gt;<br>Released under the BSD License\n          </div>"}, "last_serial": 800647, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "645f99e2d786abbad876dfde3ac5a2b3", "sha256": "76b1e8e0ee48051ee69c113b142d5b41b9566ee4aa4aea4d17287f1f14300759"}, "downloads": -1, "filename": "tiddlywebplugins.redisstore-0.2.tar.gz", "has_sig": false, "md5_digest": "645f99e2d786abbad876dfde3ac5a2b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9471, "upload_time": "2011-08-30T16:18:13", "upload_time_iso_8601": "2011-08-30T16:18:13.746846Z", "url": "https://files.pythonhosted.org/packages/4d/34/1ef7e3b15cac6455ca674ab4a37df6a7a62e1a07c5caca245e969f44978c/tiddlywebplugins.redisstore-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "32cdc68f026f77d2311c78be99dc3260", "sha256": "bdd9e0f57ee624a408e43bbe75b5b56fe48b995f4a8a8f1f162d3259bb2210b0"}, "downloads": -1, "filename": "tiddlywebplugins.redisstore-0.3.tar.gz", "has_sig": false, "md5_digest": "32cdc68f026f77d2311c78be99dc3260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9487, "upload_time": "2011-08-30T16:45:48", "upload_time_iso_8601": "2011-08-30T16:45:48.191778Z", "url": "https://files.pythonhosted.org/packages/07/be/af3bab1eb990c0b4fe6e1ad4e41a19d13e44e5d5343634ebe050840b8bc1/tiddlywebplugins.redisstore-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "32cdc68f026f77d2311c78be99dc3260", "sha256": "bdd9e0f57ee624a408e43bbe75b5b56fe48b995f4a8a8f1f162d3259bb2210b0"}, "downloads": -1, "filename": "tiddlywebplugins.redisstore-0.3.tar.gz", "has_sig": false, "md5_digest": "32cdc68f026f77d2311c78be99dc3260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9487, "upload_time": "2011-08-30T16:45:48", "upload_time_iso_8601": "2011-08-30T16:45:48.191778Z", "url": "https://files.pythonhosted.org/packages/07/be/af3bab1eb990c0b4fe6e1ad4e41a19d13e44e5d5343634ebe050840b8bc1/tiddlywebplugins.redisstore-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:26 2020"}