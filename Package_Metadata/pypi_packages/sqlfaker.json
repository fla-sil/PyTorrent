{"info": {"author": "Michael Kohlegger", "author_email": "michael.kohlegger@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Data Structure Creation with `sqlfaker`\n\n`sqlfaker` is a python library that can be used to generate relational data structures and fill these structures with fake data.\n\n## Installation\n\n`sqlfaker` can be installed via pip from [pypi.org](https://pypi.org/). Just run the following command in your terminal or command prompt.\n\n```shell\npip install sqlfaker\n```\n\n## Class structure\n\nThis projet lets you define relational data structures that are build upon the concepts of `Database`, `Table` and `Column`.\n\nA `Database` can have multiple `Table` objects which again can each have multible `Column` objects. There are two classes that inherit from the `Column` class - `ForeignKey` and `PrimaryKey`. These allow you to create key colums.\n\n## Usage example\n\n`sqlfaker` can be used to generate a new database. So far, the `Database` class only supports MySQL/MariaDB syntax (when it comes to SQL-Export). New database types will be implemented over time.\n\n```python\nfrom sqlfaker.database import Database\n\n# add database\nmy_db = Database(db_name=\"campusdb\")\n\n# add tables\nmy_db.add_table(table_name=\"student\", n_rows=500)\nmy_db.add_table(table_name=\"studyprogram\", n_rows=15)\n```\n\n`sqlfaker` can be used to also specify the schema of the tables. This is supported by three methods: `add_primary_key`, `add_column` and `add_foreign_key`. Depending on the type of column that should be created, the add methods need different parameters.\n\n> The order of column creation must follow consider their interdependencies (much like in SQL). If you e.g. create a foreign key column, you need to create the referenced primary key column first.\n\n```python\n# add columns to studyprogram table\nmy_db.tables[\"studyprogram\"].add_primary_key(column_name=\"studyprogram_id\")\nmy_db.tables[\"studyprogram\"].add_column(column_name=\"shortname\", data_type=\"varchar(50)\", data_target=\"name\")\nmy_db.tables[\"studyprogram\"].add_column(column_name=\"startdate\", data_type=\"date\", data_target=\"date\")\n\n# add columns to student table\nmy_db.tables[\"student\"].add_primary_key(column_name=\"student_id\")\nmy_db.tables[\"student\"].add_column(column_name=\"firstname\", data_type=\"varchar(50)\", data_target=\"first_name\")\nmy_db.tables[\"student\"].add_column(column_name=\"lastname\", data_type=\"varchar(50)\", data_target=\"last_name\")\nmy_db.tables[\"student\"].add_foreign_key(column_name=\"studiengang_id\", target_table=\"studiengang\", target_column=\"studiengang_id\")\n```\n\nAs soon as the database structure has been defined, `sqlfaker` can be used to generate data and then export the complete (or also parts of the) sql script to disk. The syntax of all generated SQL scripts follows MySQL/MariaDB.\n\n>`data_target` is used to specify the type of fake data that is generated to fill the respective column. `sqlfaker` uses Python `faker` for fake data generation. You can therefore reference all `faker` data types as `data target`. See `faker`'s [documentation](https://faker.readthedocs.io/en/master/) for more details.\n\n```python\nmy_db.generate_data()\nmy_db.export_sql(\"test.sql\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://documentation.web.fh-kufstein.ac.at/sqlfaker/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sqlfaker", "package_url": "https://pypi.org/project/sqlfaker/", "platform": "", "project_url": "https://pypi.org/project/sqlfaker/", "project_urls": {"Homepage": "https://documentation.web.fh-kufstein.ac.at/sqlfaker/"}, "release_url": "https://pypi.org/project/sqlfaker/0.5/", "requires_dist": null, "requires_python": "", "summary": "A fake sql database generator package", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Data Structure Creation with <code>sqlfaker</code></h1>\n<p><code>sqlfaker</code> is a python library that can be used to generate relational data structures and fill these structures with fake data.</p>\n<h2>Installation</h2>\n<p><code>sqlfaker</code> can be installed via pip from <a href=\"https://pypi.org/\" rel=\"nofollow\">pypi.org</a>. Just run the following command in your terminal or command prompt.</p>\n<pre>pip install sqlfaker\n</pre>\n<h2>Class structure</h2>\n<p>This projet lets you define relational data structures that are build upon the concepts of <code>Database</code>, <code>Table</code> and <code>Column</code>.</p>\n<p>A <code>Database</code> can have multiple <code>Table</code> objects which again can each have multible <code>Column</code> objects. There are two classes that inherit from the <code>Column</code> class - <code>ForeignKey</code> and <code>PrimaryKey</code>. These allow you to create key colums.</p>\n<h2>Usage example</h2>\n<p><code>sqlfaker</code> can be used to generate a new database. So far, the <code>Database</code> class only supports MySQL/MariaDB syntax (when it comes to SQL-Export). New database types will be implemented over time.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlfaker.database</span> <span class=\"kn\">import</span> <span class=\"n\">Database</span>\n\n<span class=\"c1\"># add database</span>\n<span class=\"n\">my_db</span> <span class=\"o\">=</span> <span class=\"n\">Database</span><span class=\"p\">(</span><span class=\"n\">db_name</span><span class=\"o\">=</span><span class=\"s2\">\"campusdb\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># add tables</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">add_table</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s2\">\"student\"</span><span class=\"p\">,</span> <span class=\"n\">n_rows</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">)</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">add_table</span><span class=\"p\">(</span><span class=\"n\">table_name</span><span class=\"o\">=</span><span class=\"s2\">\"studyprogram\"</span><span class=\"p\">,</span> <span class=\"n\">n_rows</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n</pre>\n<p><code>sqlfaker</code> can be used to also specify the schema of the tables. This is supported by three methods: <code>add_primary_key</code>, <code>add_column</code> and <code>add_foreign_key</code>. Depending on the type of column that should be created, the add methods need different parameters.</p>\n<blockquote>\n<p>The order of column creation must follow consider their interdependencies (much like in SQL). If you e.g. create a foreign key column, you need to create the referenced primary key column first.</p>\n</blockquote>\n<pre><span class=\"c1\"># add columns to studyprogram table</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">tables</span><span class=\"p\">[</span><span class=\"s2\">\"studyprogram\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add_primary_key</span><span class=\"p\">(</span><span class=\"n\">column_name</span><span class=\"o\">=</span><span class=\"s2\">\"studyprogram_id\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">tables</span><span class=\"p\">[</span><span class=\"s2\">\"studyprogram\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"n\">column_name</span><span class=\"o\">=</span><span class=\"s2\">\"shortname\"</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"s2\">\"varchar(50)\"</span><span class=\"p\">,</span> <span class=\"n\">data_target</span><span class=\"o\">=</span><span class=\"s2\">\"name\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">tables</span><span class=\"p\">[</span><span class=\"s2\">\"studyprogram\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"n\">column_name</span><span class=\"o\">=</span><span class=\"s2\">\"startdate\"</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"s2\">\"date\"</span><span class=\"p\">,</span> <span class=\"n\">data_target</span><span class=\"o\">=</span><span class=\"s2\">\"date\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># add columns to student table</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">tables</span><span class=\"p\">[</span><span class=\"s2\">\"student\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add_primary_key</span><span class=\"p\">(</span><span class=\"n\">column_name</span><span class=\"o\">=</span><span class=\"s2\">\"student_id\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">tables</span><span class=\"p\">[</span><span class=\"s2\">\"student\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"n\">column_name</span><span class=\"o\">=</span><span class=\"s2\">\"firstname\"</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"s2\">\"varchar(50)\"</span><span class=\"p\">,</span> <span class=\"n\">data_target</span><span class=\"o\">=</span><span class=\"s2\">\"first_name\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">tables</span><span class=\"p\">[</span><span class=\"s2\">\"student\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"n\">column_name</span><span class=\"o\">=</span><span class=\"s2\">\"lastname\"</span><span class=\"p\">,</span> <span class=\"n\">data_type</span><span class=\"o\">=</span><span class=\"s2\">\"varchar(50)\"</span><span class=\"p\">,</span> <span class=\"n\">data_target</span><span class=\"o\">=</span><span class=\"s2\">\"last_name\"</span><span class=\"p\">)</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">tables</span><span class=\"p\">[</span><span class=\"s2\">\"student\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">add_foreign_key</span><span class=\"p\">(</span><span class=\"n\">column_name</span><span class=\"o\">=</span><span class=\"s2\">\"studiengang_id\"</span><span class=\"p\">,</span> <span class=\"n\">target_table</span><span class=\"o\">=</span><span class=\"s2\">\"studiengang\"</span><span class=\"p\">,</span> <span class=\"n\">target_column</span><span class=\"o\">=</span><span class=\"s2\">\"studiengang_id\"</span><span class=\"p\">)</span>\n</pre>\n<p>As soon as the database structure has been defined, <code>sqlfaker</code> can be used to generate data and then export the complete (or also parts of the) sql script to disk. The syntax of all generated SQL scripts follows MySQL/MariaDB.</p>\n<blockquote>\n<p><code>data_target</code> is used to specify the type of fake data that is generated to fill the respective column. <code>sqlfaker</code> uses Python <code>faker</code> for fake data generation. You can therefore reference all <code>faker</code> data types as <code>data target</code>. See <code>faker</code>'s <a href=\"https://faker.readthedocs.io/en/master/\" rel=\"nofollow\">documentation</a> for more details.</p>\n</blockquote>\n<pre><span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">generate_data</span><span class=\"p\">()</span>\n<span class=\"n\">my_db</span><span class=\"o\">.</span><span class=\"n\">export_sql</span><span class=\"p\">(</span><span class=\"s2\">\"test.sql\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6457485, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f609792de2b18719afa0bc8f3ea1467d", "sha256": "48c5d34765f16ef48209653d1231ec5f9b74b2ef198d05d69e133dc4b043ea5f"}, "downloads": -1, "filename": "sqlfaker-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f609792de2b18719afa0bc8f3ea1467d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9968, "upload_time": "2020-01-08T20:07:36", "upload_time_iso_8601": "2020-01-08T20:07:36.813766Z", "url": "https://files.pythonhosted.org/packages/3c/22/0feeef5451808148dfb9ff0e17b679455685a552016184be43ea7aa616bc/sqlfaker-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7f903bedae6705617a35ed87ca5301ca", "sha256": "b3f3d2d4d6a2f2e12ee4ec5a232491152d5d457186c9c7c2ef61a0ecfaef2969"}, "downloads": -1, "filename": "sqlfaker-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7f903bedae6705617a35ed87ca5301ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10102, "upload_time": "2020-01-08T20:07:39", "upload_time_iso_8601": "2020-01-08T20:07:39.190191Z", "url": "https://files.pythonhosted.org/packages/72/e7/f92a620e9b26887671da1a3819a1acb545bf927db6a6e5bec5146efdeedf/sqlfaker-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6c3fa70441bb4c74093dbb20c16cc10b", "sha256": "9fd37812ce7639113fa1602c0e9e31b4722d8495cae4c4532bf80622cac34166"}, "downloads": -1, "filename": "sqlfaker-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6c3fa70441bb4c74093dbb20c16cc10b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10102, "upload_time": "2020-01-08T20:07:40", "upload_time_iso_8601": "2020-01-08T20:07:40.396455Z", "url": "https://files.pythonhosted.org/packages/94/ea/b245935e816e59339e5ffa98b9a3349bdda1dc976010120a57723a6b375a/sqlfaker-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "306428eec0226c62a4e601b46bc273c7", "sha256": "f9b95a64033f18f3aac37059d7acd074501fdeecd14f46cc7e5065d09a232dc2"}, "downloads": -1, "filename": "sqlfaker-0.3.tar.gz", "has_sig": false, "md5_digest": "306428eec0226c62a4e601b46bc273c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8493, "upload_time": "2020-01-08T20:07:41", "upload_time_iso_8601": "2020-01-08T20:07:41.851294Z", "url": "https://files.pythonhosted.org/packages/a8/05/da1796e86dcd0fed363f877dd332867dfdcab71597097385b5fe303f4654/sqlfaker-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "5767f8e0081b68bcb1fd8b18c1741a1c", "sha256": "32e79dcd24b7c10bb767e39b99bb89d38d1de02330b99bd59cb2acd3adc6e59e"}, "downloads": -1, "filename": "sqlfaker-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5767f8e0081b68bcb1fd8b18c1741a1c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10373, "upload_time": "2020-01-09T06:02:08", "upload_time_iso_8601": "2020-01-09T06:02:08.804434Z", "url": "https://files.pythonhosted.org/packages/5b/d7/4cb41347d6764a96dadb78e5bc31d945f81cdec5be9853720dab06cb8096/sqlfaker-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5282757f14ff8e34ad190cbc234bf0c0", "sha256": "664e4d7a81b197ca6465a99ee4ac6a5a7247dbb1f2c311409cfdb427c3575c3d"}, "downloads": -1, "filename": "sqlfaker-0.4.tar.gz", "has_sig": false, "md5_digest": "5282757f14ff8e34ad190cbc234bf0c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28572, "upload_time": "2020-01-09T06:02:10", "upload_time_iso_8601": "2020-01-09T06:02:10.426492Z", "url": "https://files.pythonhosted.org/packages/21/5d/a6f09934ef4f7b70c19e5524e683e96d5920859464884567faf80039198b/sqlfaker-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "5bf535e8bbec6f1bff8a7febd12e14d5", "sha256": "2dca8209d3be0620240e24eff0aca5d8fd9876dd19b8baf4ec8c6a009afc0b71"}, "downloads": -1, "filename": "sqlfaker-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5bf535e8bbec6f1bff8a7febd12e14d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11652, "upload_time": "2020-01-15T09:42:09", "upload_time_iso_8601": "2020-01-15T09:42:09.916423Z", "url": "https://files.pythonhosted.org/packages/b5/56/9035a09eca405c38451d1be7ad4d5c44a333497ba30cd50f5078f10e851c/sqlfaker-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba8215c169f07175ac374998e53cef05", "sha256": "f41d0889c17a4d2a4233e050305901f1ca32b6b84a75c535d642ab8f7182815a"}, "downloads": -1, "filename": "sqlfaker-0.5.tar.gz", "has_sig": false, "md5_digest": "ba8215c169f07175ac374998e53cef05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29583, "upload_time": "2020-01-15T09:42:12", "upload_time_iso_8601": "2020-01-15T09:42:12.098933Z", "url": "https://files.pythonhosted.org/packages/5c/eb/4cb7df94300c064f028df4532eaabba92b04496afcf533fab7a7e0a6b7cb/sqlfaker-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5bf535e8bbec6f1bff8a7febd12e14d5", "sha256": "2dca8209d3be0620240e24eff0aca5d8fd9876dd19b8baf4ec8c6a009afc0b71"}, "downloads": -1, "filename": "sqlfaker-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5bf535e8bbec6f1bff8a7febd12e14d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11652, "upload_time": "2020-01-15T09:42:09", "upload_time_iso_8601": "2020-01-15T09:42:09.916423Z", "url": "https://files.pythonhosted.org/packages/b5/56/9035a09eca405c38451d1be7ad4d5c44a333497ba30cd50f5078f10e851c/sqlfaker-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba8215c169f07175ac374998e53cef05", "sha256": "f41d0889c17a4d2a4233e050305901f1ca32b6b84a75c535d642ab8f7182815a"}, "downloads": -1, "filename": "sqlfaker-0.5.tar.gz", "has_sig": false, "md5_digest": "ba8215c169f07175ac374998e53cef05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29583, "upload_time": "2020-01-15T09:42:12", "upload_time_iso_8601": "2020-01-15T09:42:12.098933Z", "url": "https://files.pythonhosted.org/packages/5c/eb/4cb7df94300c064f028df4532eaabba92b04496afcf533fab7a7e0a6b7cb/sqlfaker-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:45 2020"}