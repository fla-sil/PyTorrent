{"info": {"author": "Dag Brattli", "author_email": "dag@brattli.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==========================================\nThe Reactive Extensions for Python (RxPY)\n==========================================\n\n.. image:: https://img.shields.io/travis/ReactiveX/RxPY.svg\n        :target: https://travis-ci.org/ReactiveX/RxPY\n\n.. image:: https://img.shields.io/coveralls/ReactiveX/RxPY.svg\n        :target: https://coveralls.io/github/ReactiveX/RxPY\n\n.. image:: https://img.shields.io/pypi/v/rx.svg\n        :target: https://pypi.python.org/pypi/Rx\n\n.. image:: https://img.shields.io/readthedocs/rxpy.svg\n        :target: https://readthedocs.org/projects/rxpy/builds/\n        :alt: Documentation Status\n\n\n*A library for composing asynchronous and event-based programs using observable collections and\nquery operator functions in Python*\n\nRxPY v3.0\n----------------\n\nFor v1.X please go to the `v1 branch <https://github.com/ReactiveX/RxPY/tree/release/v1.6.x>`_.\n\nRxPY v3.x runs on `Python <http://www.python.org/>`_ 3.6 or above. To install\nRxPY:\n\n.. code:: console\n\n    pip3 install rx\n\n\nAbout ReactiveX\n------------------\n\nReactive Extensions for Python (RxPY) is a set of libraries for composing\nasynchronous and event-based programs using observable sequences and pipable\nquery operators in Python. Using Rx, developers represent asynchronous data\nstreams with Observables, query asynchronous data streams using operators, and\nparameterize concurrency in data/event streams using Schedulers.\n\n.. code:: python\n\n    import rx\n    from rx import operators as ops\n\n    source = rx.of(\"Alpha\", \"Beta\", \"Gamma\", \"Delta\", \"Epsilon\")\n\n    composed = source.pipe(\n        ops.map(lambda s: len(s)),\n        ops.filter(lambda i: i >= 5)\n    )\n    composed.subscribe(lambda value: print(\"Received {0}\".format(value)))\n\n\nLearning RxPY\n--------------\n\nRead the `documentation\n<https://rxpy.readthedocs.io/en/latest/>`_ to learn\nthe principles of RxPY and get the complete reference of the available\noperators.\n\nI you need to migrate code from RxPY v1.x, read the `migration\n<https://rxpy.readthedocs.io/en/latest/migration.html>`_ section.\n\nThere is also a list of third party documentation available `here\n<https://rxpy.readthedocs.io/en/latest/additional_readings.html>`_.\n\n\nCommunity\n----------\n\nJoin the conversation on Slack!\n\nThe gracious folks at `PySlackers <https://pyslackers.com/>`_ have given us a home\nin the `#rxpy <https://pythondev.slack.com/messages/rxpy>`_ Slack channel. Please\njoin us there for questions, conversations, and all things related to RxPy.\n\nTo join, navigate the page above to receive an email invite. After signing up,\njoin us in the #rxpy channel.\n\nPlease follow the community guidelines and terms of service.\n\n\nDifferences from .NET and RxJS\n------------------------------\n\nRxPY is a fairly complete implementation of\n`Rx <http://reactivex.io/>`_ with more than\n`120 operators <https://rxpy.readthedocs.io/en/latest/operators.html>`_, and\nover `1300 passing unit-tests <https://coveralls.io/github/ReactiveX/RxPY>`_. RxPY\nis mostly a direct port of RxJS, but also borrows a bit from RxNET and RxJava in\nterms of threading and blocking operators.\n\nRxPY follows `PEP 8 <http://legacy.python.org/dev/peps/pep-0008/>`_, so all\nfunction and method names are lowercase with words separated by underscores as\nnecessary to improve readability.\n\nThus .NET code such as:\n\n.. code:: c#\n\n    var group = source.GroupBy(i => i % 3);\n\n\nneed to be written with an `_` in Python:\n\n.. code:: python\n\n    group = source.pipe(ops.group_by(lambda i: i % 3))\n\nWith RxPY you should use `named keyword arguments\n<https://docs.python.org/3/glossary.html>`_ instead of positional arguments when\nan operator has multiple optional arguments. RxPY will not try to detect which\narguments you are giving to the operator (or not).\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/ReactiveX/RxPY", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://reactivex.io", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "Rx3", "package_url": "https://pypi.org/project/Rx3/", "platform": "", "project_url": "https://pypi.org/project/Rx3/", "project_urls": {"Download": "https://github.com/ReactiveX/RxPY", "Homepage": "http://reactivex.io"}, "release_url": "https://pypi.org/project/Rx3/3.0.1/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "Reactive Extensions (Rx) for Python", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/ReactiveX/RxPY\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/ReactiveX/RxPY.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12e86e8b4078f92f2bc0ef1017eaacc57cf47935/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f5265616374697665582f527850592e737667\"></a>\n<a href=\"https://coveralls.io/github/ReactiveX/RxPY\" rel=\"nofollow\"><img alt=\"https://img.shields.io/coveralls/ReactiveX/RxPY.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8aabe5cb774b98ba610d4537ac3b66e9ac9704d/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f5265616374697665582f527850592e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/Rx\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/rx.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2e018f50414d552c727d606316c64e504539450/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f72782e737667\"></a>\n<a href=\"https://readthedocs.org/projects/rxpy/builds/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d5c62f4e14c2f0664331296f69bf8de6ed7acbce/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f727870792e737667\"></a>\n<p><em>A library for composing asynchronous and event-based programs using observable collections and\nquery operator functions in Python</em></p>\n<div id=\"rxpy-v3-0\">\n<h2>RxPY v3.0</h2>\n<p>For v1.X please go to the <a href=\"https://github.com/ReactiveX/RxPY/tree/release/v1.6.x\" rel=\"nofollow\">v1 branch</a>.</p>\n<p>RxPY v3.x runs on <a href=\"http://www.python.org/\" rel=\"nofollow\">Python</a> 3.6 or above. To install\nRxPY:</p>\n<pre><span class=\"go\">pip3 install rx</span>\n</pre>\n</div>\n<div id=\"about-reactivex\">\n<h2>About ReactiveX</h2>\n<p>Reactive Extensions for Python (RxPY) is a set of libraries for composing\nasynchronous and event-based programs using observable sequences and pipable\nquery operators in Python. Using Rx, developers represent asynchronous data\nstreams with Observables, query asynchronous data streams using operators, and\nparameterize concurrency in data/event streams using Schedulers.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">rx</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rx</span> <span class=\"kn\">import</span> <span class=\"n\">operators</span> <span class=\"k\">as</span> <span class=\"n\">ops</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">rx</span><span class=\"o\">.</span><span class=\"n\">of</span><span class=\"p\">(</span><span class=\"s2\">\"Alpha\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Beta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Gamma\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Delta\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Epsilon\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">composed</span> <span class=\"o\">=</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">pipe</span><span class=\"p\">(</span>\n    <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)),</span>\n    <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">composed</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Received </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)))</span>\n</pre>\n</div>\n<div id=\"learning-rxpy\">\n<h2>Learning RxPY</h2>\n<p>Read the <a href=\"https://rxpy.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation</a> to learn\nthe principles of RxPY and get the complete reference of the available\noperators.</p>\n<p>I you need to migrate code from RxPY v1.x, read the <a href=\"https://rxpy.readthedocs.io/en/latest/migration.html\" rel=\"nofollow\">migration</a> section.</p>\n<p>There is also a list of third party documentation available <a href=\"https://rxpy.readthedocs.io/en/latest/additional_readings.html\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"community\">\n<h2>Community</h2>\n<p>Join the conversation on Slack!</p>\n<p>The gracious folks at <a href=\"https://pyslackers.com/\" rel=\"nofollow\">PySlackers</a> have given us a home\nin the <a href=\"https://pythondev.slack.com/messages/rxpy\" rel=\"nofollow\">#rxpy</a> Slack channel. Please\njoin us there for questions, conversations, and all things related to RxPy.</p>\n<p>To join, navigate the page above to receive an email invite. After signing up,\njoin us in the #rxpy channel.</p>\n<p>Please follow the community guidelines and terms of service.</p>\n</div>\n<div id=\"differences-from-net-and-rxjs\">\n<h2>Differences from .NET and RxJS</h2>\n<p>RxPY is a fairly complete implementation of\n<a href=\"http://reactivex.io/\" rel=\"nofollow\">Rx</a> with more than\n<a href=\"https://rxpy.readthedocs.io/en/latest/operators.html\" rel=\"nofollow\">120 operators</a>, and\nover <a href=\"https://coveralls.io/github/ReactiveX/RxPY\" rel=\"nofollow\">1300 passing unit-tests</a>. RxPY\nis mostly a direct port of RxJS, but also borrows a bit from RxNET and RxJava in\nterms of threading and blocking operators.</p>\n<p>RxPY follows <a href=\"http://legacy.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP 8</a>, so all\nfunction and method names are lowercase with words separated by underscores as\nnecessary to improve readability.</p>\n<p>Thus .NET code such as:</p>\n<pre><span class=\"kt\">var</span> <span class=\"k\">group</span> <span class=\"p\">=</span> <span class=\"n\">source</span><span class=\"p\">.</span><span class=\"n\">GroupBy</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"p\">=&gt;</span> <span class=\"n\">i</span> <span class=\"p\">%</span> <span class=\"m\">3</span><span class=\"p\">);</span>\n</pre>\n<p>need to be written with an <cite>_</cite> in Python:</p>\n<pre><span class=\"n\">group</span> <span class=\"o\">=</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">pipe</span><span class=\"p\">(</span><span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">group_by</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n</pre>\n<p>With RxPY you should use <a href=\"https://docs.python.org/3/glossary.html\" rel=\"nofollow\">named keyword arguments</a> instead of positional arguments when\nan operator has multiple optional arguments. RxPY will not try to detect which\narguments you are giving to the operator (or not).</p>\n</div>\n\n          </div>"}, "last_serial": 5997151, "releases": {"3.0.1": [{"comment_text": "", "digests": {"md5": "14a14320a8a46b26d0a40c953163df1b", "sha256": "f1b7da5463786764e78ef4cbdd0a42bd50152c72f6e7477517f917656e7a3def"}, "downloads": -1, "filename": "Rx3-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "14a14320a8a46b26d0a40c953163df1b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 196170, "upload_time": "2019-10-18T19:19:04", "upload_time_iso_8601": "2019-10-18T19:19:04.602577Z", "url": "https://files.pythonhosted.org/packages/1f/cf/2a00a918fa49160f28ee72516041c004a513cfec50bb576f3a687a41e72a/Rx3-3.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14a14320a8a46b26d0a40c953163df1b", "sha256": "f1b7da5463786764e78ef4cbdd0a42bd50152c72f6e7477517f917656e7a3def"}, "downloads": -1, "filename": "Rx3-3.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "14a14320a8a46b26d0a40c953163df1b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 196170, "upload_time": "2019-10-18T19:19:04", "upload_time_iso_8601": "2019-10-18T19:19:04.602577Z", "url": "https://files.pythonhosted.org/packages/1f/cf/2a00a918fa49160f28ee72516041c004a513cfec50bb576f3a687a41e72a/Rx3-3.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:46 2020"}