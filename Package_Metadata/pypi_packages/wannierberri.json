{"info": {"author": "Stepan S. Tsirkin", "author_email": "stepan.tsirkin@uzh.ch", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": ".::    .   .:::  :::.     :::.    :::.:::.    :::. :::.,::::::  :::::::..       :::::::.  .,::::::  :::::::..   :::::::..   :::\n';;,  ;;  ;;;'   ;;`;;    `;;;;,  `;;;`;;;;,  `;;; ;;;;;;;''''  ;;;;``;;;;       ;;;'';;' ;;;;''''  ;;;;``;;;;  ;;;;``;;;;  ;;;\n '[[, [[, [['   ,[[ '[[,    [[[[[. '[[  [[[[[. '[[ [[[ [[cccc    [[[,/[[['       [[[__[[\\. [[cccc    [[[,/[[['   [[[,/[[['  [[[\n   Y$c$$$c$P   c$$$cc$$$c   $$$ \"Y$c$$  $$$ \"Y$c$$ $$$ $$\"\"\"\"    $$$$$$c         $$\"\"\"\"Y$$ $$\"\"\"\"    $$$$$$c     $$$$$$c    $$$\n    \"88\"888     888   888,  888    Y88  888    Y88 888 888oo,__  888b \"88bo,    _88o,,od8P 888oo,__  888b \"88bo, 888b \"88bo,888\n     \"M \"M\"     YMM   \"\"`   MMM     YM  MMM     YM MMM \"\"\"\"YUMMM MMMM   \"W\"     \"\"YUMMMP\"  \"\"\"\"YUMMM MMMM   \"W\"  MMMM   \"W\" MMM\n\na.k.a. Wannier19\n                  __                     ___                  \n        |_       (_  |_  _  _   _   _     |   _ .  _ |  .  _  \n        |_) \\/   __) |_ (- |_) (_| | )    |  _) | |  |( | | ) \n            /              |                                  ```\n\n\nI started this project by python realization of some of postw90 functional.\nSome parts of the code are an adapted translation of Wannier90 Fortran code:\nhttp://www.wannier.org/\nhttps://github.com/wannier-developers/wannier90\n\nThe code is distributed under the terms of  GNU GENERAL PUBLIC LICENSE  Version 2, the same as Wannier90\n\nAt the moment the code calculates Anomalous Hall conductivity very fast (much faster then wannier90) with high precision over an \nultradense k-grid. This is achieved due to :\n\n1) Using Fast Fourier Transform\n2) account of symmetries, to reduce integration to irreducible part of the Brillouin zone\n3) recursive refinement algorithm\n4) optimizing the implementation of scan of Fermi level and 'use_ws_distance' parameter (see wannier90 documentation for details) \n\nObject oriented structure also makes it potentially easier to implement further features. \n\nThe usage of the code  is demonstrated by \"exampleFe\" in the examples folder.\nAHC can also be calcualted for any tight-binding model, for which a \"_tb.dat\" file was generated in watever way.\n\nWannierBerri can be run in parallel by means of multiprocessing module\n\n\ninstllation is possible by pip\n\npip3 install wannierberri\n\nA simple exmple is contained in \"tutorial/example.py\" . That will produce AHC and tabulate the berry curvature and velocity of bcc iron\nmore sofisticated features will be described soon.\n\n\nThe project started on June, 25th 2019. \nAny interest from the community will be motivating for developing.\n\n\nStepan Tsirkin, \nUniversity of Zurich\nstepan.tsirkin@physik.uzh.ch\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stepan-tsirkin/wannier-berri", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "wannierberri", "package_url": "https://pypi.org/project/wannierberri/", "platform": "", "project_url": "https://pypi.org/project/wannierberri/", "project_urls": {"Homepage": "https://github.com/stepan-tsirkin/wannier-berri"}, "release_url": "https://pypi.org/project/wannierberri/0.3.2/", "requires_dist": ["colorama", "lazy-property", "numpy", "pyfiglet", "scipy (>=1.0)", "termcolor"], "requires_python": "", "summary": "Advanced tool for Wannier interpolation", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>.::    .   .:::  :::.     :::.    :::.:::.    :::. :::.,::::::  :::::::..       :::::::.  .,::::::  :::::::..   :::::::..   :::\n';;,  ;;  ;;;'   ;;<code>;;</code>;;;;,  <code>;;;</code>;;;;,  <code>;;; ;;;;;;;'''' ;;;;``;;;; ;;;'';;' ;;;;'''' ;;;;``;;;; ;;;;``;;;; ;;; '[[, [[, [[' ,[[ '[[, [[[[[. '[[ [[[[[. '[[ [[[ [[cccc [[[,/[[[' [[[__[[\\. [[cccc [[[,/[[[' [[[,/[[[' [[[ Y$c$$$c$P c$$$cc$$$c $$$ \"Y$c$$ $$$ \"Y$c$$ $$$ $$\"\"\"\" $$$$$$c $$\"\"\"\"Y$$ $$\"\"\"\" $$$$$$c $$$$$$c $$$ \"88\"888 888 888, 888 Y88 888 Y88 888 888oo,__ 888b \"88bo, _88o,,od8P 888oo,__ 888b \"88bo, 888b \"88bo,888 \"M \"M\" YMM \"\"</code>   MMM     YM  MMM     YM MMM \"\"\"\"YUMMM MMMM   \"W\"     \"\"YUMMMP\"  \"\"\"\"YUMMM MMMM   \"W\"  MMMM   \"W\" MMM</p>\n<p>a.k.a. Wannier19\n__                     ___<br>\n|_       (_  |_  _  _   _   _     |   _ .  _ |  .  _<br>\n|<em>) /   _<em>) |</em> (- |</em>) (_| | )    |  _) | |  |( | | )\n/              |                                  ```</p>\n<p>I started this project by python realization of some of postw90 functional.\nSome parts of the code are an adapted translation of Wannier90 Fortran code:\n<a href=\"http://www.wannier.org/\" rel=\"nofollow\">http://www.wannier.org/</a>\n<a href=\"https://github.com/wannier-developers/wannier90\" rel=\"nofollow\">https://github.com/wannier-developers/wannier90</a></p>\n<p>The code is distributed under the terms of  GNU GENERAL PUBLIC LICENSE  Version 2, the same as Wannier90</p>\n<p>At the moment the code calculates Anomalous Hall conductivity very fast (much faster then wannier90) with high precision over an\nultradense k-grid. This is achieved due to :</p>\n<ol>\n<li>Using Fast Fourier Transform</li>\n<li>account of symmetries, to reduce integration to irreducible part of the Brillouin zone</li>\n<li>recursive refinement algorithm</li>\n<li>optimizing the implementation of scan of Fermi level and 'use_ws_distance' parameter (see wannier90 documentation for details)</li>\n</ol>\n<p>Object oriented structure also makes it potentially easier to implement further features.</p>\n<p>The usage of the code  is demonstrated by \"exampleFe\" in the examples folder.\nAHC can also be calcualted for any tight-binding model, for which a \"_tb.dat\" file was generated in watever way.</p>\n<p>WannierBerri can be run in parallel by means of multiprocessing module</p>\n<p>instllation is possible by pip</p>\n<p>pip3 install wannierberri</p>\n<p>A simple exmple is contained in \"tutorial/example.py\" . That will produce AHC and tabulate the berry curvature and velocity of bcc iron\nmore sofisticated features will be described soon.</p>\n<p>The project started on June, 25th 2019.\nAny interest from the community will be motivating for developing.</p>\n<p>Stepan Tsirkin,\nUniversity of Zurich\n<a href=\"mailto:stepan.tsirkin@physik.uzh.ch\">stepan.tsirkin@physik.uzh.ch</a></p>\n\n          </div>"}, "last_serial": 7045255, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "f35f82e2614b4eaf72cc4fee583db50a", "sha256": "a59dc1a470a7ba1c68f3ba5cb9f265845938ad54496bb1c3fd7107bb14ecc4cd"}, "downloads": -1, "filename": "wannierberri-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f35f82e2614b4eaf72cc4fee583db50a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 77877, "upload_time": "2020-01-10T23:48:04", "upload_time_iso_8601": "2020-01-10T23:48:04.007619Z", "url": "https://files.pythonhosted.org/packages/71/aa/e4cdce357a275a486a818c152e8e0a27ca4b92563535e47d181c01b45b3e/wannierberri-0.2.0-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b64a2b510c119e39d450cc78535a2006", "sha256": "564e3235b6f30d2203e7ae1f560662c54a2a3ea22599b10770f5bdb83c79c9a3"}, "downloads": -1, "filename": "wannierberri-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b64a2b510c119e39d450cc78535a2006", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49013, "upload_time": "2020-04-17T18:01:42", "upload_time_iso_8601": "2020-04-17T18:01:42.344736Z", "url": "https://files.pythonhosted.org/packages/a4/8e/68f20277d7df370c02eff057c143ee55d40ee2080bb25b5cf8f467c06414/wannierberri-0.3.0-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "dd79d811e405a7e4e8e52af20b94bbdf", "sha256": "77b8d514caed0175e8ed26cefe8afdb053da657d526bc754e5b6a927ccdaf99a"}, "downloads": -1, "filename": "wannierberri-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dd79d811e405a7e4e8e52af20b94bbdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49015, "upload_time": "2020-04-17T18:10:40", "upload_time_iso_8601": "2020-04-17T18:10:40.900866Z", "url": "https://files.pythonhosted.org/packages/55/e6/ecf9d220b5f9ce0d59a6dbdcca0bf85c8afbb2faa52430034db89c3a2224/wannierberri-0.3.1-py3-none-any.whl", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0642c84c9f372102c0e8b30c74a97690", "sha256": "acbcef7002ac8385893f21b200139bc2cc2c324e12290a4245f12f625a4a334f"}, "downloads": -1, "filename": "wannierberri-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0642c84c9f372102c0e8b30c74a97690", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49094, "upload_time": "2020-04-18T01:12:07", "upload_time_iso_8601": "2020-04-18T01:12:07.437926Z", "url": "https://files.pythonhosted.org/packages/8a/1f/b7cf085f9a9b5cb7e11c242fb937f9b60962ab803824d83f20ec2c48ee70/wannierberri-0.3.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0642c84c9f372102c0e8b30c74a97690", "sha256": "acbcef7002ac8385893f21b200139bc2cc2c324e12290a4245f12f625a4a334f"}, "downloads": -1, "filename": "wannierberri-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0642c84c9f372102c0e8b30c74a97690", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49094, "upload_time": "2020-04-18T01:12:07", "upload_time_iso_8601": "2020-04-18T01:12:07.437926Z", "url": "https://files.pythonhosted.org/packages/8a/1f/b7cf085f9a9b5cb7e11c242fb937f9b60962ab803824d83f20ec2c48ee70/wannierberri-0.3.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:32:29 2020"}