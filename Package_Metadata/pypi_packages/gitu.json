{"info": {"author": "Howyoung Zhou", "author_email": "howyoungzhou@yahoo.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# gitu\nAccount manager for git users with multiple accounts.\n\n## Install\nInstall gitu from PyPi:\n\n```\npip install gitu\n```\n\n## Usage\n```\nusage: gitu [-h] {login,l,add,a,view,v,edit,e,remove,r} ...\n\npositional arguments:\n  {login,l,add,a,view,v,edit,e,remove,r}\n    login (l)           switch users\n    add (a)             add a new user\n    view (v)            view information of users\n    edit (e)            edit the information of a user\n    remove (r)          remove a user\n\noptional arguments:\n  -h, --help            show this help message and exit\n```\n\n### Add a user\n#### Usage\n```\nusage: gitu add [-h] [-r] [-a ALIAS] [-g] name email\n\npositional arguments:\n  name                  name of the user\n  email                 email of the user\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r, --replace         replace the user if the name or alias already exists\n  -a ALIAS, --alias ALIAS\n                        add a alias to the user\n  -g, --gpgsign         set commit.gpgsign to true\n```\n\n#### Example\n```bash\n# Add a new user Misaka\ngitu add Misaka misaka@example.com\n# Add a new user Shirai with alias Kuroko\ngitu a -a Kuroko Shirai shirai@example.com\n```\n\n### Switch users\n#### Usage\n```\nusage: gitu login [-h] [--local] [-g] [-s] [-w] name\n\npositional arguments:\n  name            name or alias of the user\n\noptional arguments:\n  -h, --help      show this help message and exit\n  --local         write to or read from the repository .git/config file\n                  (default)\n  -g, --global    write to or read from global ~/.gitconfig file\n  -s, --system    write to or read from system-wide $(prefix)/etc/gitconfig\n  -w, --worktree  write to or read from .git/config.worktree if\n                  extensions.worktreeConfig is present\n```\n\n#### Example\n```bash\n# Login as Misaka\ngitu login Misaka\n# Login as Shirai Kuroko globally\ngitu l -g Kuroko\n```\n\n### View users\n#### Usage\n```\nusage: gitu view [-h] [--local] [-g] [-s] [-w] [-l] [-a]\n\noptional arguments:\n  -h, --help      show this help message and exit\n  --local         write to or read from the repository .git/config file\n                  (default)\n  -g, --global    write to or read from global ~/.gitconfig file\n  -s, --system    write to or read from system-wide $(prefix)/etc/gitconfig\n  -w, --worktree  write to or read from .git/config.worktree if\n                  extensions.worktreeConfig is present\n  -l, --list      list all users\n  -a, --all       show all information of users\n```\n\n#### Example\n```bash\n# View local user\ngitu view\n# View global user\ngitu v -g\n# List all users\ngitu v -l\n# List all users in details\ngitu v -la\n```\n\n### Edit a user\n#### Usage\n```\nusage: gitu edit [-h] [-n NEW_NAME] [-e EMAIL] [-a ALIAS]\n                     [--remove-alias ALIAS] [-g] [-r]\n                     name\n\npositional arguments:\n  name                  name or alias of the user\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -n NEW_NAME, --name NEW_NAME\n                        new name of the user\n  -e EMAIL, --email EMAIL\n                        new email of the user\n  -a ALIAS, --alias ALIAS\n                        add a new alias to the user\n  --remove-alias ALIAS  remove the alias of the user\n  -g, --gpgsign         set commit.gpgsign to true\n  -r, --replace         replace the user if the name or alias already exists\n```\n\n#### Example\n```bash\n# Rename Misaka to Mikoto\ngitu edit Misaka -n Mikoto\n# Change Email\ngitu e Shirai -e shirai@gakuen-toshi.tech\n# Add alias\ngitu e -a Onee-sama Mikoto\n# Remove alias\ngitu e --remove-alias Onee-sama Mikoto\n```\n\n### Remove a user\n#### Usage\n```\nusage: gitu remove [-h] name\n\npositional arguments:\n  name        name or alias of the user\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n#### Example\n```bash\n# Remove a user\ngitu remove Kamijou\n```\n\n## Exit status\n\nThe status is one of the follows:\n\n- `0 (SUCCESS)`: the operation succeeded.\n- `1 (USER_NOT_FOUND)`: the user does not exist.\n- `2 (USER_EXISTS)`: the user already exists. To replace the user, use `-r`/`--replace`.\n- `3 (GIT_ERROR)`: failed to execute a git command.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HowyoungZhou/gitu", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gitu", "package_url": "https://pypi.org/project/gitu/", "platform": "", "project_url": "https://pypi.org/project/gitu/", "project_urls": {"Homepage": "https://github.com/HowyoungZhou/gitu"}, "release_url": "https://pypi.org/project/gitu/0.1.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Account manager for git users with multiple accounts.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gitu</h1>\n<p>Account manager for git users with multiple accounts.</p>\n<h2>Install</h2>\n<p>Install gitu from PyPi:</p>\n<pre><code>pip install gitu\n</code></pre>\n<h2>Usage</h2>\n<pre><code>usage: gitu [-h] {login,l,add,a,view,v,edit,e,remove,r} ...\n\npositional arguments:\n  {login,l,add,a,view,v,edit,e,remove,r}\n    login (l)           switch users\n    add (a)             add a new user\n    view (v)            view information of users\n    edit (e)            edit the information of a user\n    remove (r)          remove a user\n\noptional arguments:\n  -h, --help            show this help message and exit\n</code></pre>\n<h3>Add a user</h3>\n<h4>Usage</h4>\n<pre><code>usage: gitu add [-h] [-r] [-a ALIAS] [-g] name email\n\npositional arguments:\n  name                  name of the user\n  email                 email of the user\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r, --replace         replace the user if the name or alias already exists\n  -a ALIAS, --alias ALIAS\n                        add a alias to the user\n  -g, --gpgsign         set commit.gpgsign to true\n</code></pre>\n<h4>Example</h4>\n<pre><span class=\"c1\"># Add a new user Misaka</span>\ngitu add Misaka misaka@example.com\n<span class=\"c1\"># Add a new user Shirai with alias Kuroko</span>\ngitu a -a Kuroko Shirai shirai@example.com\n</pre>\n<h3>Switch users</h3>\n<h4>Usage</h4>\n<pre><code>usage: gitu login [-h] [--local] [-g] [-s] [-w] name\n\npositional arguments:\n  name            name or alias of the user\n\noptional arguments:\n  -h, --help      show this help message and exit\n  --local         write to or read from the repository .git/config file\n                  (default)\n  -g, --global    write to or read from global ~/.gitconfig file\n  -s, --system    write to or read from system-wide $(prefix)/etc/gitconfig\n  -w, --worktree  write to or read from .git/config.worktree if\n                  extensions.worktreeConfig is present\n</code></pre>\n<h4>Example</h4>\n<pre><span class=\"c1\"># Login as Misaka</span>\ngitu login Misaka\n<span class=\"c1\"># Login as Shirai Kuroko globally</span>\ngitu l -g Kuroko\n</pre>\n<h3>View users</h3>\n<h4>Usage</h4>\n<pre><code>usage: gitu view [-h] [--local] [-g] [-s] [-w] [-l] [-a]\n\noptional arguments:\n  -h, --help      show this help message and exit\n  --local         write to or read from the repository .git/config file\n                  (default)\n  -g, --global    write to or read from global ~/.gitconfig file\n  -s, --system    write to or read from system-wide $(prefix)/etc/gitconfig\n  -w, --worktree  write to or read from .git/config.worktree if\n                  extensions.worktreeConfig is present\n  -l, --list      list all users\n  -a, --all       show all information of users\n</code></pre>\n<h4>Example</h4>\n<pre><span class=\"c1\"># View local user</span>\ngitu view\n<span class=\"c1\"># View global user</span>\ngitu v -g\n<span class=\"c1\"># List all users</span>\ngitu v -l\n<span class=\"c1\"># List all users in details</span>\ngitu v -la\n</pre>\n<h3>Edit a user</h3>\n<h4>Usage</h4>\n<pre><code>usage: gitu edit [-h] [-n NEW_NAME] [-e EMAIL] [-a ALIAS]\n                     [--remove-alias ALIAS] [-g] [-r]\n                     name\n\npositional arguments:\n  name                  name or alias of the user\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -n NEW_NAME, --name NEW_NAME\n                        new name of the user\n  -e EMAIL, --email EMAIL\n                        new email of the user\n  -a ALIAS, --alias ALIAS\n                        add a new alias to the user\n  --remove-alias ALIAS  remove the alias of the user\n  -g, --gpgsign         set commit.gpgsign to true\n  -r, --replace         replace the user if the name or alias already exists\n</code></pre>\n<h4>Example</h4>\n<pre><span class=\"c1\"># Rename Misaka to Mikoto</span>\ngitu edit Misaka -n Mikoto\n<span class=\"c1\"># Change Email</span>\ngitu e Shirai -e shirai@gakuen-toshi.tech\n<span class=\"c1\"># Add alias</span>\ngitu e -a Onee-sama Mikoto\n<span class=\"c1\"># Remove alias</span>\ngitu e --remove-alias Onee-sama Mikoto\n</pre>\n<h3>Remove a user</h3>\n<h4>Usage</h4>\n<pre><code>usage: gitu remove [-h] name\n\npositional arguments:\n  name        name or alias of the user\n\noptional arguments:\n  -h, --help  show this help message and exit\n</code></pre>\n<h4>Example</h4>\n<pre><span class=\"c1\"># Remove a user</span>\ngitu remove Kamijou\n</pre>\n<h2>Exit status</h2>\n<p>The status is one of the follows:</p>\n<ul>\n<li><code>0 (SUCCESS)</code>: the operation succeeded.</li>\n<li><code>1 (USER_NOT_FOUND)</code>: the user does not exist.</li>\n<li><code>2 (USER_EXISTS)</code>: the user already exists. To replace the user, use <code>-r</code>/<code>--replace</code>.</li>\n<li><code>3 (GIT_ERROR)</code>: failed to execute a git command.</li>\n</ul>\n\n          </div>"}, "last_serial": 6607822, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "50010b02911dc16eb8bd94ff8d4bf7c1", "sha256": "943bfc9ea5adf3146bfb4c1f0e7401a2a6d22537414389f1e2777033eb06c7d2"}, "downloads": -1, "filename": "gitu-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50010b02911dc16eb8bd94ff8d4bf7c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7273, "upload_time": "2020-02-11T08:13:07", "upload_time_iso_8601": "2020-02-11T08:13:07.321078Z", "url": "https://files.pythonhosted.org/packages/b4/82/14ece51f8012ee2a3496481d0a09ab3156ff5623a1d4f6d8c084882de330/gitu-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe6ac46fc78d55db59d9ca04cf8f1a26", "sha256": "d7ec320928819444138bc024623fb28805514adf9685a41b1c007da88ac9e423"}, "downloads": -1, "filename": "gitu-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fe6ac46fc78d55db59d9ca04cf8f1a26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5474, "upload_time": "2020-02-11T08:13:10", "upload_time_iso_8601": "2020-02-11T08:13:10.772761Z", "url": "https://files.pythonhosted.org/packages/3c/4a/376730b3fb76985f531ad9f5f753ca166a1b39244101d8fd62c823f501e7/gitu-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "50010b02911dc16eb8bd94ff8d4bf7c1", "sha256": "943bfc9ea5adf3146bfb4c1f0e7401a2a6d22537414389f1e2777033eb06c7d2"}, "downloads": -1, "filename": "gitu-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "50010b02911dc16eb8bd94ff8d4bf7c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 7273, "upload_time": "2020-02-11T08:13:07", "upload_time_iso_8601": "2020-02-11T08:13:07.321078Z", "url": "https://files.pythonhosted.org/packages/b4/82/14ece51f8012ee2a3496481d0a09ab3156ff5623a1d4f6d8c084882de330/gitu-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe6ac46fc78d55db59d9ca04cf8f1a26", "sha256": "d7ec320928819444138bc024623fb28805514adf9685a41b1c007da88ac9e423"}, "downloads": -1, "filename": "gitu-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fe6ac46fc78d55db59d9ca04cf8f1a26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5474, "upload_time": "2020-02-11T08:13:10", "upload_time_iso_8601": "2020-02-11T08:13:10.772761Z", "url": "https://files.pythonhosted.org/packages/3c/4a/376730b3fb76985f531ad9f5f753ca166a1b39244101d8fd62c823f501e7/gitu-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:45 2020"}