{"info": {"author": "Aaron Dettmann", "author_email": "dettmann@kth.se", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": ".. image:: https://img.shields.io/pypi/v/model-framework.svg?style=flat\n   :target: https://pypi.org/project/model-framework/\n   :alt: Latest PyPI version\n\n.. image:: https://readthedocs.org/projects/mframework/badge/?version=latest\n    :target: https://mframework.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/badge/license-Apache%202-blue.svg\n    :target: https://github.com/airinnova/model-framework/blob/master/LICENSE.txt\n    :alt: License\n\n.. image:: https://travis-ci.org/airinnova/model-framework.svg?branch=master\n    :target: https://travis-ci.org/airinnova/model-framework\n    :alt: Build status\n\n.. image:: https://codecov.io/gh/airinnova/model-framework/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/airinnova/model-framework\n    :alt: Coverage\n\n|\n\n.. image:: https://raw.githubusercontent.com/airinnova/model-framework/master/docs/source/_static/images/logo.png\n   :target: https://github.com/airinnova/model-framework/\n   :alt: logo\n\n\u26a0 **Work in progress!** This project is in an early prototyping phase.\n\nVision\n======\n\nThis *Python* package provides two classes (``FeatureSpec()`` and ``ModelSpec()``) to build simple, understandable and consistent user interfaces for (physics) models. A *model* is made up of *features*, and each feature is made up of *properties*. The *developer* defines the *model* using specifications of model *features* and feature *properties* (user input).\n\nThe end-user of the final model object can only interact with safe \"setter\" and \"getter\" methods of the specified model object. Due to the small number of simple methods which follow a clear \"key-value paradigm\" the model API is very easy to learn and to document. As a model developer, you can easily enforce user-input checks to avoid invalid data. Expected input is defined in a simple schema format, and user-input checks are performed when data entered by the user.\n\nBasic system\n------------\n\n* Provide specification classes that enable to easily define a complex (physics) models (e.g. a beam structure)\n* A *model* is made up of one or more *features* (singleton/non-singleton)\n\n    * A model has user methods ``add_feature``, ``set_feature`` and ``get``/``iter``\n\n* Each feature has one or more *properties* (singleton/non-singleton)\n\n    * A feature has user methods ``set``/``add`` and ``get``/``iter`` methods to interact with properties\n\nAdditional features\n-------------------\n\n* Built-in validation of user data using *schemadicts*\n* Serialization of the entire model to disk (e.g. JSON) and deserialization\n* Auto-generation of user-documentation for the model interface\n* Model generation based on default values provided in the specifications in case of missing user input (!?)\n* Abstract method ``run()`` to run the entire model\n* Attach immediate actions to model definitions (?)\n\nBasic usage\n===========\n\nDeveloper code\n--------------\n\nThe model developer provides the specification of the model. Two classes are available:\n\n    * Class ``FeatureSpec()`` defines a feature with its properties.\n    * Class ``ModelSpec()`` defines a model with its features.\n\n.. code:: python\n\n    fspec_global = FeatureSpec()\n    fspec_global.add_prop_spec('name', str)\n    fspec_global.add_prop_spec('mass', float)\n    fspec_global.add_prop_spec('pax', int)\n\n    fspec_wing = FeatureSpec()\n    fspec_wing.add_prop_spec('span', float)\n    fspec_wing.add_prop_spec('area', {'type': float, '>': 0})\n\n    mspec_aircraft = ModelSpec()\n    mspec_aircraft.add_feature_spec('global', fspec_global, singleton=True)\n    mspec_aircraft.add_feature_spec('wing', fspec_wing, singleton=False)\n\n    Aircraft = mspec_aircraft.getUserModel()\n\nUser code\n---------\n\nThe end-user builds the model with actual values. Errors are thrown if invalid data is provided.\n\n.. code:: python\n\n    from somewhere import Aircraft\n\n    ac = Aircraft()\n\n    glob_info = ac.add_feature('global')\n    glob_info.set('name', 'BoxWing')\n    glob_info.set('mass', 10e3)\n    glob_info.set('pax', 20)\n\n    main_wing = ac.add_feature('wing')\n    main_wing.set('span', 20)\n    main_wing.set('area', 40)\n\n    horiz_tail = ac.add_feature('wing')\n    horiz_tail.set('span', 6)\n    horiz_tail.set('area', 12)\n\n    ac.run()\n\n* A *model* has the following user methods\n\n    * ``set_feature()`` (for singleton features)\n    * ``add_feature()`` (for non-singleton features)\n    * ``get()``\n    * ``iter()`` (for non-singleton features)\n\n* A *feature* has the following user methods\n\n    * ``set()`` (for singleton features)\n    * ``add()`` (for non-singleton features)\n    * ``get()``\n    * ``iter()`` (for non-singleton features)\n\nInstallation\n============\n\n*Model-Framework* is available on `PyPI <https://pypi.org/project/model-framework/>`_ and may simply be installed with\n\n.. code::\n\n    pip install model-framework\n\nLicense\n=======\n\n**License:** Apache-2.0\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/airinnova/model-framework", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "model-framework", "package_url": "https://pypi.org/project/model-framework/", "platform": "", "project_url": "https://pypi.org/project/model-framework/", "project_urls": {"Homepage": "https://github.com/airinnova/model-framework"}, "release_url": "https://pypi.org/project/model-framework/0.0.3/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "Framework to build consistent model interfaces", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/model-framework/\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e33deb73fde8aeff9f714c501aad4e8618c3c130/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6f64656c2d6672616d65776f726b2e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://mframework.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe341a507ec2b863921f5663da35abcaaf55673f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d6672616d65776f726b2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://github.com/airinnova/model-framework/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f3fc97f8a56b0816bf00a50c634ed430032cfa2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322d626c75652e737667\"></a>\n<a href=\"https://travis-ci.org/airinnova/model-framework\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b0bc39149d891a762edea2c0a255d4fb71dc801/68747470733a2f2f7472617669732d63692e6f72672f616972696e6e6f76612f6d6f64656c2d6672616d65776f726b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/airinnova/model-framework\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7ca9d12bf96642844e35e70fa205308d82018c8/68747470733a2f2f636f6465636f762e696f2f67682f616972696e6e6f76612f6d6f64656c2d6672616d65776f726b2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<div>\n<div><br></div>\n</div>\n<a href=\"https://github.com/airinnova/model-framework/\" rel=\"nofollow\"><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9e9b6375cc8fd5041af2f08ba2de2c374d26bd6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616972696e6e6f76612f6d6f64656c2d6672616d65776f726b2f6d61737465722f646f63732f736f757263652f5f7374617469632f696d616765732f6c6f676f2e706e67\"></a>\n<p>\u26a0 <strong>Work in progress!</strong> This project is in an early prototyping phase.</p>\n<div id=\"vision\">\n<h2>Vision</h2>\n<p>This <em>Python</em> package provides two classes (<tt>FeatureSpec()</tt> and <tt>ModelSpec()</tt>) to build simple, understandable and consistent user interfaces for (physics) models. A <em>model</em> is made up of <em>features</em>, and each feature is made up of <em>properties</em>. The <em>developer</em> defines the <em>model</em> using specifications of model <em>features</em> and feature <em>properties</em> (user input).</p>\n<p>The end-user of the final model object can only interact with safe \u201csetter\u201d and \u201cgetter\u201d methods of the specified model object. Due to the small number of simple methods which follow a clear \u201ckey-value paradigm\u201d the model API is very easy to learn and to document. As a model developer, you can easily enforce user-input checks to avoid invalid data. Expected input is defined in a simple schema format, and user-input checks are performed when data entered by the user.</p>\n<div id=\"basic-system\">\n<h3>Basic system</h3>\n<ul>\n<li><p>Provide specification classes that enable to easily define a complex (physics) models (e.g. a beam structure)</p>\n</li>\n<li><p>A <em>model</em> is made up of one or more <em>features</em> (singleton/non-singleton)</p>\n<blockquote>\n<ul>\n<li>A model has user methods <tt>add_feature</tt>, <tt>set_feature</tt> and <tt>get</tt>/<tt>iter</tt></li>\n</ul>\n</blockquote>\n</li>\n<li><p>Each feature has one or more <em>properties</em> (singleton/non-singleton)</p>\n<blockquote>\n<ul>\n<li>A feature has user methods <tt>set</tt>/<tt>add</tt> and <tt>get</tt>/<tt>iter</tt> methods to interact with properties</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"additional-features\">\n<h3>Additional features</h3>\n<ul>\n<li>Built-in validation of user data using <em>schemadicts</em></li>\n<li>Serialization of the entire model to disk (e.g. JSON) and deserialization</li>\n<li>Auto-generation of user-documentation for the model interface</li>\n<li>Model generation based on default values provided in the specifications in case of missing user input (!?)</li>\n<li>Abstract method <tt>run()</tt> to run the entire model</li>\n<li>Attach immediate actions to model definitions (?)</li>\n</ul>\n</div>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<div id=\"developer-code\">\n<h3>Developer code</h3>\n<p>The model developer provides the specification of the model. Two classes are available:</p>\n<blockquote>\n<ul>\n<li>Class <tt>FeatureSpec()</tt> defines a feature with its properties.</li>\n<li>Class <tt>ModelSpec()</tt> defines a model with its features.</li>\n</ul>\n</blockquote>\n<pre><span class=\"n\">fspec_global</span> <span class=\"o\">=</span> <span class=\"n\">FeatureSpec</span><span class=\"p\">()</span>\n<span class=\"n\">fspec_global</span><span class=\"o\">.</span><span class=\"n\">add_prop_spec</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span>\n<span class=\"n\">fspec_global</span><span class=\"o\">.</span><span class=\"n\">add_prop_spec</span><span class=\"p\">(</span><span class=\"s1\">'mass'</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">)</span>\n<span class=\"n\">fspec_global</span><span class=\"o\">.</span><span class=\"n\">add_prop_spec</span><span class=\"p\">(</span><span class=\"s1\">'pax'</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">)</span>\n\n<span class=\"n\">fspec_wing</span> <span class=\"o\">=</span> <span class=\"n\">FeatureSpec</span><span class=\"p\">()</span>\n<span class=\"n\">fspec_wing</span><span class=\"o\">.</span><span class=\"n\">add_prop_spec</span><span class=\"p\">(</span><span class=\"s1\">'span'</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">)</span>\n<span class=\"n\">fspec_wing</span><span class=\"o\">.</span><span class=\"n\">add_prop_spec</span><span class=\"p\">(</span><span class=\"s1\">'area'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"s1\">'&gt;'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">})</span>\n\n<span class=\"n\">mspec_aircraft</span> <span class=\"o\">=</span> <span class=\"n\">ModelSpec</span><span class=\"p\">()</span>\n<span class=\"n\">mspec_aircraft</span><span class=\"o\">.</span><span class=\"n\">add_feature_spec</span><span class=\"p\">(</span><span class=\"s1\">'global'</span><span class=\"p\">,</span> <span class=\"n\">fspec_global</span><span class=\"p\">,</span> <span class=\"n\">singleton</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">mspec_aircraft</span><span class=\"o\">.</span><span class=\"n\">add_feature_spec</span><span class=\"p\">(</span><span class=\"s1\">'wing'</span><span class=\"p\">,</span> <span class=\"n\">fspec_wing</span><span class=\"p\">,</span> <span class=\"n\">singleton</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"n\">Aircraft</span> <span class=\"o\">=</span> <span class=\"n\">mspec_aircraft</span><span class=\"o\">.</span><span class=\"n\">getUserModel</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"user-code\">\n<h3>User code</h3>\n<p>The end-user builds the model with actual values. Errors are thrown if invalid data is provided.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">somewhere</span> <span class=\"kn\">import</span> <span class=\"n\">Aircraft</span>\n\n<span class=\"n\">ac</span> <span class=\"o\">=</span> <span class=\"n\">Aircraft</span><span class=\"p\">()</span>\n\n<span class=\"n\">glob_info</span> <span class=\"o\">=</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">add_feature</span><span class=\"p\">(</span><span class=\"s1\">'global'</span><span class=\"p\">)</span>\n<span class=\"n\">glob_info</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'BoxWing'</span><span class=\"p\">)</span>\n<span class=\"n\">glob_info</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'mass'</span><span class=\"p\">,</span> <span class=\"mf\">10e3</span><span class=\"p\">)</span>\n<span class=\"n\">glob_info</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'pax'</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"n\">main_wing</span> <span class=\"o\">=</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">add_feature</span><span class=\"p\">(</span><span class=\"s1\">'wing'</span><span class=\"p\">)</span>\n<span class=\"n\">main_wing</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'span'</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">main_wing</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'area'</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">)</span>\n\n<span class=\"n\">horiz_tail</span> <span class=\"o\">=</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">add_feature</span><span class=\"p\">(</span><span class=\"s1\">'wing'</span><span class=\"p\">)</span>\n<span class=\"n\">horiz_tail</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'span'</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">horiz_tail</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'area'</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">)</span>\n\n<span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li><p>A <em>model</em> has the following user methods</p>\n<blockquote>\n<ul>\n<li><tt>set_feature()</tt> (for singleton features)</li>\n<li><tt>add_feature()</tt> (for non-singleton features)</li>\n<li><tt>get()</tt></li>\n<li><tt>iter()</tt> (for non-singleton features)</li>\n</ul>\n</blockquote>\n</li>\n<li><p>A <em>feature</em> has the following user methods</p>\n<blockquote>\n<ul>\n<li><tt>set()</tt> (for singleton features)</li>\n<li><tt>add()</tt> (for non-singleton features)</li>\n<li><tt>get()</tt></li>\n<li><tt>iter()</tt> (for non-singleton features)</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><em>Model-Framework</em> is available on <a href=\"https://pypi.org/project/model-framework/\" rel=\"nofollow\">PyPI</a> and may simply be installed with</p>\n<pre>pip install model-framework\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><strong>License:</strong> Apache-2.0</p>\n</div>\n\n          </div>"}, "last_serial": 7183392, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b82980fcc0b8e6a85b8b0ab935f1c6c1", "sha256": "bec6f13850ec564c13e90a56a294be954105407496ee0385ddd64a41b354a2ea"}, "downloads": -1, "filename": "model_framework-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b82980fcc0b8e6a85b8b0ab935f1c6c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 1162, "upload_time": "2020-04-25T15:49:45", "upload_time_iso_8601": "2020-04-25T15:49:45.217993Z", "url": "https://files.pythonhosted.org/packages/a6/16/7c2b30295b9f0f522fee4854bafd91b4a8d3372e5eff6d905cb66f031c39/model_framework-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "514d5a6cc5df7e1f242923804a5d3216", "sha256": "7985baf93d6228f0a5a8a6717a14075bdc26c832206a5f8f9c816421d503b6f7"}, "downloads": -1, "filename": "model-framework-0.0.1.tar.gz", "has_sig": false, "md5_digest": "514d5a6cc5df7e1f242923804a5d3216", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 915, "upload_time": "2020-04-25T15:49:47", "upload_time_iso_8601": "2020-04-25T15:49:47.611138Z", "url": "https://files.pythonhosted.org/packages/fd/e6/7d38d1fe95de90ba7081d6279b466f31a21cdb7a1af0c0751944c7b69ea0/model-framework-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "add86edae30e2bb5161184ebe4cfd49f", "sha256": "70ca80922e271855c2b3a37276b5d64e408be0217b40b038d6a64aff44e70e1a"}, "downloads": -1, "filename": "model_framework-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "add86edae30e2bb5161184ebe4cfd49f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 11141, "upload_time": "2020-05-06T20:39:20", "upload_time_iso_8601": "2020-05-06T20:39:20.225445Z", "url": "https://files.pythonhosted.org/packages/d8/dc/a6e4215dcfb885c41db355735d0a4096b6cd5a6b6024f54a4e90d995f83c/model_framework-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cad131a030d5ef8d7000d9d78ad7c95e", "sha256": "3937e2251dad7d0fd8706201dc55886bd89dbc9e4825397f9c2b000511adf799"}, "downloads": -1, "filename": "model-framework-0.0.3.tar.gz", "has_sig": false, "md5_digest": "cad131a030d5ef8d7000d9d78ad7c95e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12057, "upload_time": "2020-05-06T20:39:26", "upload_time_iso_8601": "2020-05-06T20:39:26.449544Z", "url": "https://files.pythonhosted.org/packages/1b/4f/b003e806640946ec3227b22c8849c6e1d78eec71e4ba36fd72b3ad81e8f8/model-framework-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "add86edae30e2bb5161184ebe4cfd49f", "sha256": "70ca80922e271855c2b3a37276b5d64e408be0217b40b038d6a64aff44e70e1a"}, "downloads": -1, "filename": "model_framework-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "add86edae30e2bb5161184ebe4cfd49f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 11141, "upload_time": "2020-05-06T20:39:20", "upload_time_iso_8601": "2020-05-06T20:39:20.225445Z", "url": "https://files.pythonhosted.org/packages/d8/dc/a6e4215dcfb885c41db355735d0a4096b6cd5a6b6024f54a4e90d995f83c/model_framework-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cad131a030d5ef8d7000d9d78ad7c95e", "sha256": "3937e2251dad7d0fd8706201dc55886bd89dbc9e4825397f9c2b000511adf799"}, "downloads": -1, "filename": "model-framework-0.0.3.tar.gz", "has_sig": false, "md5_digest": "cad131a030d5ef8d7000d9d78ad7c95e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 12057, "upload_time": "2020-05-06T20:39:26", "upload_time_iso_8601": "2020-05-06T20:39:26.449544Z", "url": "https://files.pythonhosted.org/packages/1b/4f/b003e806640946ec3227b22c8849c6e1d78eec71e4ba36fd72b3ad81e8f8/model-framework-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:54 2020"}