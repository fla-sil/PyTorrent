{"info": {"author": "Filippo Bovo", "author_email": "bovo.filippo@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "# Robustats\n\nRobustats is a Python library for high-performance computation of robust statistical estimators.\n\nThe functions that compute the robust estimators are [implemented in C](c) for speed and [called by Python](robustats).\n\nEstimators implemented in the library:\n\n- **Weighted Median** (temporal complexity: `O(n)`) \\[1, 2, 3\\]\n- **Medcouple** (temporal complexity: `O(n * log(n))`) [4, 5, 6, 7]\n- **Mode** (temporal complexity: `O(n * log(n))`) [8]\n\n## How to Install\n\nThis library requires Python 3.\n\nYou can install the library using Pip.\n\n```shell\npip install robustats\n```\n\nYou can also install the library directly from GitHub using the following command.\n\n```shell\npip install -e 'git+https://github.com/FilippoBovo/robustats.git#egg=robustats'\n```\n\nOtherwise, you may clone the repository, and install and test the Robustats package in the following way.\n\n```shell\ngit clone https://github.com/FilippoBovo/robustats.git\ncd robustats\npip install -e .\npython -m unittest\n```\n\n## How to Use\n\nThis is an example of how to use the Robustats library in Python.\n\n```python\nimport numpy as np\nimport robustats\n\n\n# Weighted Median\nx = np.array([1.1, 5.3, 3.7, 2.1, 7.0, 9.9])\nweights = np.array([1.1, 0.4, 2.1, 3.5, 1.2, 0.8])\n\nweighted_median = robustats.weighted_median(x, weights)\n\nprint(\"The weighted median is {}\".format(weighted_median))\n# Output: The weighted median is 2.1\n\n\n# Medcouple\nx = np.array([0.2, 0.17, 0.08, 0.16, 0.88, 0.86, 0.09, 0.54, 0.27, 0.14])\n\nmedcouple = robustats.medcouple(x)\n\nprint(\"The medcouple is {}\".format(medcouple))\n# Output: The medcouple is 0.7692307692307692\n\n\n# Mode\nx = np.array([1., 2., 2., 3., 3., 3., 4., 4., 5.])\n\nmode = robustats.mode(x)\n\nprint(\"The mode is {}\".format(mode))\n# Output: The mode is 3.0\n```\n\n## How to Contribute\n\nIf you wish to contribute to this library, please follow the patterns and style of the rest of the code.\n\nTips:\n\n- In C, use `malloc` to allocate memory to the heap, instead of creating arrays that allocate memory to the stack, as with large array we would incur in a [segmentation fault due to stack overflow](https://stackoverflow.com/a/1847886).\n- Avoid recursions where possible to limit the spatial complexity of the problem. In place of recursions, use loops.\n\n## References\n\n\\[1\\] [Cormen, Leiserson, Rivest, Stein - Introduction to Algorithms (3rd Edition)](https://books.google.co.uk/books?id=aefUBQAAQBAJ&lpg=PR5&ots=dN8rWuZQaW&dq=Cormen%2C%20Leiserson%2C%20Rivest%2C%20Stein%20-%20Introduction%20to%20Algorithms&lr&pg=PP1#v=onepage&q&f=false).\n\n\\[2\\] [Cormen - Introduction to Algorithms (3rd Edition) - Instructor's Manual](https://cdn.manesht.ir/19908/Introduction%20to%20Algorithms.pdf).\n\n\\[3\\] [Weighted median on Wikipedia](https://en.wikipedia.org/wiki/Weighted_median).\n\n\\[4\\] [G. Brys; M. Hubert; A. Struyf (November 2004). \"A Robust Measure of Skewness\". *Journal of Computational and Graphical Statistics*. **13** (4): 996\u20131017.](https://doi.org/10.1198%2F106186004X12632)\n\n\\[5\\] [Donald B. Johnson; Tetsuo Mizoguchi (May 1978). \"Selecting The Kth Element In X + Y And X1 + X2 +...+ Xm\". *SIAM Journal on Computing*. **7** (2): 147\u2013153.](https://doi.org/10.1137%2F0207013)\n\n\\[6\\] [Medcouple implementation in Python by Jordi Guti\u00e9rrez Hermoso.](http://inversethought.com/hg/)\n\n\\[7\\] [Medcouple on Wikipedia.](https://en.wikipedia.org/wiki/Medcouple)\n\n\\[8\\] [David R. Bickel, Rudolf Fr\u00fchwirth. \"On a fast, robust estimator of the mode: Comparisons to other robust estimators with applications\", *Computational Statistics & Data Analysis*, Volume 50, Issue 12, 2006, Pages 3500-3530, ISSN 0167-9473.](https://doi.org/10.1016/j.csda.2005.07.011)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/FilippoBovo/robustats/archive/v0.1.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FilippoBovo/robustats", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "robustats", "package_url": "https://pypi.org/project/robustats/", "platform": "", "project_url": "https://pypi.org/project/robustats/", "project_urls": {"Download": "https://github.com/FilippoBovo/robustats/archive/v0.1.5.tar.gz", "Homepage": "https://github.com/FilippoBovo/robustats"}, "release_url": "https://pypi.org/project/robustats/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Robustats is a Python library for high-performance computation of robust statistical estimators.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Robustats</h1>\n<p>Robustats is a Python library for high-performance computation of robust statistical estimators.</p>\n<p>The functions that compute the robust estimators are <a href=\"c\" rel=\"nofollow\">implemented in C</a> for speed and <a href=\"robustats\" rel=\"nofollow\">called by Python</a>.</p>\n<p>Estimators implemented in the library:</p>\n<ul>\n<li><strong>Weighted Median</strong> (temporal complexity: <code>O(n)</code>) [1, 2, 3]</li>\n<li><strong>Medcouple</strong> (temporal complexity: <code>O(n * log(n))</code>) [4, 5, 6, 7]</li>\n<li><strong>Mode</strong> (temporal complexity: <code>O(n * log(n))</code>) [8]</li>\n</ul>\n<h2>How to Install</h2>\n<p>This library requires Python 3.</p>\n<p>You can install the library using Pip.</p>\n<pre>pip install robustats\n</pre>\n<p>You can also install the library directly from GitHub using the following command.</p>\n<pre>pip install -e <span class=\"s1\">'git+https://github.com/FilippoBovo/robustats.git#egg=robustats'</span>\n</pre>\n<p>Otherwise, you may clone the repository, and install and test the Robustats package in the following way.</p>\n<pre>git clone https://github.com/FilippoBovo/robustats.git\n<span class=\"nb\">cd</span> robustats\npip install -e .\npython -m unittest\n</pre>\n<h2>How to Use</h2>\n<p>This is an example of how to use the Robustats library in Python.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">robustats</span>\n\n\n<span class=\"c1\"># Weighted Median</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.1</span><span class=\"p\">,</span> <span class=\"mf\">5.3</span><span class=\"p\">,</span> <span class=\"mf\">3.7</span><span class=\"p\">,</span> <span class=\"mf\">2.1</span><span class=\"p\">,</span> <span class=\"mf\">7.0</span><span class=\"p\">,</span> <span class=\"mf\">9.9</span><span class=\"p\">])</span>\n<span class=\"n\">weights</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.1</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">2.1</span><span class=\"p\">,</span> <span class=\"mf\">3.5</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">])</span>\n\n<span class=\"n\">weighted_median</span> <span class=\"o\">=</span> <span class=\"n\">robustats</span><span class=\"o\">.</span><span class=\"n\">weighted_median</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">weights</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The weighted median is </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">weighted_median</span><span class=\"p\">))</span>\n<span class=\"c1\"># Output: The weighted median is 2.1</span>\n\n\n<span class=\"c1\"># Medcouple</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.17</span><span class=\"p\">,</span> <span class=\"mf\">0.08</span><span class=\"p\">,</span> <span class=\"mf\">0.16</span><span class=\"p\">,</span> <span class=\"mf\">0.88</span><span class=\"p\">,</span> <span class=\"mf\">0.86</span><span class=\"p\">,</span> <span class=\"mf\">0.09</span><span class=\"p\">,</span> <span class=\"mf\">0.54</span><span class=\"p\">,</span> <span class=\"mf\">0.27</span><span class=\"p\">,</span> <span class=\"mf\">0.14</span><span class=\"p\">])</span>\n\n<span class=\"n\">medcouple</span> <span class=\"o\">=</span> <span class=\"n\">robustats</span><span class=\"o\">.</span><span class=\"n\">medcouple</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The medcouple is </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">medcouple</span><span class=\"p\">))</span>\n<span class=\"c1\"># Output: The medcouple is 0.7692307692307692</span>\n\n\n<span class=\"c1\"># Mode</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">3.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"mf\">4.</span><span class=\"p\">,</span> <span class=\"mf\">5.</span><span class=\"p\">])</span>\n\n<span class=\"n\">mode</span> <span class=\"o\">=</span> <span class=\"n\">robustats</span><span class=\"o\">.</span><span class=\"n\">mode</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The mode is </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"p\">))</span>\n<span class=\"c1\"># Output: The mode is 3.0</span>\n</pre>\n<h2>How to Contribute</h2>\n<p>If you wish to contribute to this library, please follow the patterns and style of the rest of the code.</p>\n<p>Tips:</p>\n<ul>\n<li>In C, use <code>malloc</code> to allocate memory to the heap, instead of creating arrays that allocate memory to the stack, as with large array we would incur in a <a href=\"https://stackoverflow.com/a/1847886\" rel=\"nofollow\">segmentation fault due to stack overflow</a>.</li>\n<li>Avoid recursions where possible to limit the spatial complexity of the problem. In place of recursions, use loops.</li>\n</ul>\n<h2>References</h2>\n<p>[1] <a href=\"https://books.google.co.uk/books?id=aefUBQAAQBAJ&amp;lpg=PR5&amp;ots=dN8rWuZQaW&amp;dq=Cormen%2C%20Leiserson%2C%20Rivest%2C%20Stein%20-%20Introduction%20to%20Algorithms&amp;lr&amp;pg=PP1#v=onepage&amp;q&amp;f=false\" rel=\"nofollow\">Cormen, Leiserson, Rivest, Stein - Introduction to Algorithms (3rd Edition)</a>.</p>\n<p>[2] <a href=\"https://cdn.manesht.ir/19908/Introduction%20to%20Algorithms.pdf\" rel=\"nofollow\">Cormen - Introduction to Algorithms (3rd Edition) - Instructor's Manual</a>.</p>\n<p>[3] <a href=\"https://en.wikipedia.org/wiki/Weighted_median\" rel=\"nofollow\">Weighted median on Wikipedia</a>.</p>\n<p>[4] <a href=\"https://doi.org/10.1198%2F106186004X12632\" rel=\"nofollow\">G. Brys; M. Hubert; A. Struyf (November 2004). \"A Robust Measure of Skewness\". <em>Journal of Computational and Graphical Statistics</em>. <strong>13</strong> (4): 996\u20131017.</a></p>\n<p>[5] <a href=\"https://doi.org/10.1137%2F0207013\" rel=\"nofollow\">Donald B. Johnson; Tetsuo Mizoguchi (May 1978). \"Selecting The Kth Element In X + Y And X1 + X2 +...+ Xm\". <em>SIAM Journal on Computing</em>. <strong>7</strong> (2): 147\u2013153.</a></p>\n<p>[6] <a href=\"http://inversethought.com/hg/\" rel=\"nofollow\">Medcouple implementation in Python by Jordi Guti\u00e9rrez Hermoso.</a></p>\n<p>[7] <a href=\"https://en.wikipedia.org/wiki/Medcouple\" rel=\"nofollow\">Medcouple on Wikipedia.</a></p>\n<p>[8] <a href=\"https://doi.org/10.1016/j.csda.2005.07.011\" rel=\"nofollow\">David R. Bickel, Rudolf Fr\u00fchwirth. \"On a fast, robust estimator of the mode: Comparisons to other robust estimators with applications\", <em>Computational Statistics &amp; Data Analysis</em>, Volume 50, Issue 12, 2006, Pages 3500-3530, ISSN 0167-9473.</a></p>\n\n          </div>"}, "last_serial": 7151096, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "5ef7af428420d6ee00b4951c4a170ec2", "sha256": "d773fb7e4d1560acdfa55cd1e6a4772535d881b00254449a8e8e7ee151e365bb"}, "downloads": -1, "filename": "robustats-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5ef7af428420d6ee00b4951c4a170ec2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11528, "upload_time": "2019-08-11T15:19:35", "upload_time_iso_8601": "2019-08-11T15:19:35.906706Z", "url": "https://files.pythonhosted.org/packages/7e/a5/b0faef6b30b69f9f8763e544c47e37f0103ba8a9d2fa61159b7957aa63c1/robustats-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "9aa21d461a48b859085239b29ccb2244", "sha256": "c64a0b671c3b0462e8438827325cc03da8cd354db56884f8e38f3a7a5bf6a55f"}, "downloads": -1, "filename": "robustats-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9aa21d461a48b859085239b29ccb2244", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11563, "upload_time": "2020-02-07T22:55:16", "upload_time_iso_8601": "2020-02-07T22:55:16.737658Z", "url": "https://files.pythonhosted.org/packages/a8/a0/5e078aa2364aa3415f5fbb49ddf9368b69182371480d439c3578c81b1ba7/robustats-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "ae1db36fb4e482ef1edc50626ce02160", "sha256": "cced7d73e240a5869988c427d6acb133870eca565080efe9af69601c2103b810"}, "downloads": -1, "filename": "robustats-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ae1db36fb4e482ef1edc50626ce02160", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11597, "upload_time": "2020-03-26T11:55:47", "upload_time_iso_8601": "2020-03-26T11:55:47.647653Z", "url": "https://files.pythonhosted.org/packages/5b/ed/4547a586d185b5a0dd4c4d5c44da03e7e87dd27432b3787b3cbfce224ddb/robustats-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "985945b4d123780047883006fff407b5", "sha256": "7052016670777451950446813de188ebc15382f87cb149326416ac770bbc93d1"}, "downloads": -1, "filename": "robustats-0.1.5.tar.gz", "has_sig": false, "md5_digest": "985945b4d123780047883006fff407b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11611, "upload_time": "2020-05-02T11:43:47", "upload_time_iso_8601": "2020-05-02T11:43:47.254779Z", "url": "https://files.pythonhosted.org/packages/ad/17/1c2ba6e18316ae11ab5fd15c9a8d5e8621f72d4b4cd552f3e7c463a1c772/robustats-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "985945b4d123780047883006fff407b5", "sha256": "7052016670777451950446813de188ebc15382f87cb149326416ac770bbc93d1"}, "downloads": -1, "filename": "robustats-0.1.5.tar.gz", "has_sig": false, "md5_digest": "985945b4d123780047883006fff407b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11611, "upload_time": "2020-05-02T11:43:47", "upload_time_iso_8601": "2020-05-02T11:43:47.254779Z", "url": "https://files.pythonhosted.org/packages/ad/17/1c2ba6e18316ae11ab5fd15c9a8d5e8621f72d4b4cd552f3e7c463a1c772/robustats-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:37 2020"}