{"info": {"author": "DavidM42", "author_email": "david@merz.dev", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# OpenEAN\nLibrary to use the api of the Open EAN/GTIN Database\n\nserves as API wrapper for the api of [this EAN/GTIN database service](https://opengtindb.org/)\n\n## Getting started\nInstall the library from pypi via `pip install openean`\n\nThen you need an user_id for the service; [more info how you get that](https://opengtindb.org/userid.php)\n\nThere is also an id for small tests: \"400000000\" as described here https://opengtindb.org/faq.php#g\n\n```python\nfrom openean.OpenEAN import OpenEAN\n\n\nuserID = 400000000  #user your own id here\n\nopenean = OpenEAN(userID)\n\nbarcode_num = 1111 #barcode number of you product\n\nitems = openean.parse(barcode_num)\n#items is a list of possible products associated with the code\n# the properties of each item are described here https://opengtindb.org/api.php\n\n#only to show you structure of working results\n#not needed for use\nfrom pprint import pprint\nfor item in items:\n    pprint(vars(item))\n```\n\n## Thanks to\nThe creators of the API for making this possible and please consider donating to [\"Kueste gegen Plastik\"](https://www.kueste-gegen-plastik.de/unterstuetzen/) if you like this service to help the creators of the database running it.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DavidM42/OpenEAN", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "openean", "package_url": "https://pypi.org/project/openean/", "platform": "", "project_url": "https://pypi.org/project/openean/", "project_urls": {"Homepage": "https://github.com/DavidM42/OpenEAN"}, "release_url": "https://pypi.org/project/openean/0.1.2/", "requires_dist": ["requests"], "requires_python": "", "summary": "Unofficial API wrapper for Open EAN/GTIN Database", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>OpenEAN</h1>\n<p>Library to use the api of the Open EAN/GTIN Database</p>\n<p>serves as API wrapper for the api of <a href=\"https://opengtindb.org/\" rel=\"nofollow\">this EAN/GTIN database service</a></p>\n<h2>Getting started</h2>\n<p>Install the library from pypi via <code>pip install openean</code></p>\n<p>Then you need an user_id for the service; <a href=\"https://opengtindb.org/userid.php\" rel=\"nofollow\">more info how you get that</a></p>\n<p>There is also an id for small tests: \"400000000\" as described here <a href=\"https://opengtindb.org/faq.php#g\" rel=\"nofollow\">https://opengtindb.org/faq.php#g</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">openean.OpenEAN</span> <span class=\"kn\">import</span> <span class=\"n\">OpenEAN</span>\n\n\n<span class=\"n\">userID</span> <span class=\"o\">=</span> <span class=\"mi\">400000000</span>  <span class=\"c1\">#user your own id here</span>\n\n<span class=\"n\">openean</span> <span class=\"o\">=</span> <span class=\"n\">OpenEAN</span><span class=\"p\">(</span><span class=\"n\">userID</span><span class=\"p\">)</span>\n\n<span class=\"n\">barcode_num</span> <span class=\"o\">=</span> <span class=\"mi\">1111</span> <span class=\"c1\">#barcode number of you product</span>\n\n<span class=\"n\">items</span> <span class=\"o\">=</span> <span class=\"n\">openean</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">barcode_num</span><span class=\"p\">)</span>\n<span class=\"c1\">#items is a list of possible products associated with the code</span>\n<span class=\"c1\"># the properties of each item are described here https://opengtindb.org/api.php</span>\n\n<span class=\"c1\">#only to show you structure of working results</span>\n<span class=\"c1\">#not needed for use</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">items</span><span class=\"p\">:</span>\n    <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"nb\">vars</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">))</span>\n</pre>\n<h2>Thanks to</h2>\n<p>The creators of the API for making this possible and please consider donating to <a href=\"https://www.kueste-gegen-plastik.de/unterstuetzen/\" rel=\"nofollow\">\"Kueste gegen Plastik\"</a> if you like this service to help the creators of the database running it.</p>\n\n          </div>"}, "last_serial": 5348505, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c61067518dfebe99aea1f53ccc7b5c72", "sha256": "75e7676231dcae029cfad7217242b95f6a0f1df737041c02ba88a184b25e714b"}, "downloads": -1, "filename": "openean-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c61067518dfebe99aea1f53ccc7b5c72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5630, "upload_time": "2019-06-02T10:25:50", "upload_time_iso_8601": "2019-06-02T10:25:50.278796Z", "url": "https://files.pythonhosted.org/packages/11/21/c91b48d4a9e79b6b0e3c4495b4b86993605ef905b438132f75b6f644722b/openean-0.1-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "eb15da692d9356355e6339dbaf4a8837", "sha256": "fd9320d7d1c3ead1121fe624fa92fd142932f47bc8b19183a41342fdccb81595"}, "downloads": -1, "filename": "openean-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "eb15da692d9356355e6339dbaf4a8837", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5678, "upload_time": "2019-06-02T10:32:15", "upload_time_iso_8601": "2019-06-02T10:32:15.873009Z", "url": "https://files.pythonhosted.org/packages/7f/37/4796e8a6b4c237e0efd5273ae3e1a19ef2304c736cacc8ef60b2bd9f9863/openean-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6f39f5f9314caf478397b21084202932", "sha256": "0c8014c62fa4b00db0cb31fe6d19200b0433ee52344febb41737a2485e04a354"}, "downloads": -1, "filename": "openean-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f39f5f9314caf478397b21084202932", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5683, "upload_time": "2019-06-02T10:39:31", "upload_time_iso_8601": "2019-06-02T10:39:31.173975Z", "url": "https://files.pythonhosted.org/packages/0b/70/00fbbfa775b84504c3f480f83caea37a686d15f1f35619c908340a0c8ea4/openean-0.1.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f39f5f9314caf478397b21084202932", "sha256": "0c8014c62fa4b00db0cb31fe6d19200b0433ee52344febb41737a2485e04a354"}, "downloads": -1, "filename": "openean-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f39f5f9314caf478397b21084202932", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5683, "upload_time": "2019-06-02T10:39:31", "upload_time_iso_8601": "2019-06-02T10:39:31.173975Z", "url": "https://files.pythonhosted.org/packages/0b/70/00fbbfa775b84504c3f480f83caea37a686d15f1f35619c908340a0c8ea4/openean-0.1.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:03:09 2020"}