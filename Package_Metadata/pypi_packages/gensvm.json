{"info": {"author": "Gertjan van den Burg", "author_email": "gertjanvandenburg@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# GenSVM Python Package\n\n[![Build Status](https://travis-ci.org/GjjvdBurg/PyGenSVM.svg?branch=master)](https://travis-ci.org/GjjvdBurg/PyGenSVM)\n[![Documentation Status](https://readthedocs.org/projects/gensvm/badge/?version=latest)](https://gensvm.readthedocs.io/en/latest/?badge=latest)\n\nThis is the Python package for the GenSVM multiclass classifier by [Gerrit \nJ.J. van den Burg](https://gertjanvandenburg.com) and [Patrick J.F. \nGroenen](https://personal.eur.nl/groenen/).\n\n**Useful links:**\n\n- [PyGenSVM on GitHub](https://github.com/GjjvdBurg/PyGenSVM)\n- [PyGenSVM on PyPI](https://pypi.org/project/gensvm/)\n- [Package documentation](https://gensvm.readthedocs.io/en/latest/)\n- Journal paper: [GenSVM: A Generalized Multiclass Support Vector \n  Machine](http://www.jmlr.org/papers/v17/14-526.html) JMLR, 17(225):1\u221242, \n  2016.\n- There is also an [R package](https://github.com/GjjvdBurg/RGenSVM)\n- Or you can directly use [the C library](https://github.com/GjjvdBurg/GenSVM)\n\n\n## Installation\n\n**Before** GenSVM can be installed, a working NumPy installation is required. \nso GenSVM can be installed using the following command:\n\n```bash\n$ pip install numpy && pip install gensvm\n```\n\nIf you encounter any errors, please [open an issue on \nGitHub](https://github.com/GjjvdBurg/PyGenSVM). Don't hesitate, you're helping \nto make this project better!\n\n\n## Citing\n\nIf you use this package in your research please cite the paper, for instance \nusing the following BibTeX entry::\n\n```bib\n@article{JMLR:v17:14-526,\n        author  = {{van den Burg}, G. J. J. and Groenen, P. J. F.},\n        title   = {{GenSVM}: A Generalized Multiclass Support Vector Machine},\n        journal = {Journal of Machine Learning Research},\n        year    = {2016},\n        volume  = {17},\n        number  = {225},\n        pages   = {1-42},\n        url     = {http://jmlr.org/papers/v17/14-526.html}\n}\n```\n\n## Usage\n\nThe package contains two classes to fit the GenSVM model: [GenSVM] and \n[GenSVMGridSearchCV].  These classes respectively fit a single GenSVM model or \nfit a series of models for a parameter grid search. The interface to these \nclasses is the same as that of classifiers in [Scikit-Learn]  so users \nfamiliar with Scikit-Learn should have no trouble using this package.  Below \nwe will show some examples of using the GenSVM classifier and the \nGenSVMGridSearchCV class in practice.\n\nIn the examples we assume that we have loaded the [iris \ndataset](http://scikit-learn.org/stable/auto_examples/datasets/plot_iris_dataset.html) \nfrom Scikit-Learn as follows:\n\n\n```python\n>>> from sklearn.datasets import load_iris\n>>> from sklearn.model_selection import train_test_split\n>>> from sklearn.preprocessing import MaxAbsScaler\n>>> X, y = load_iris(return_X_y=True)\n>>> X_train, X_test, y_train, y_test = train_test_split(X, y)\n>>> scaler = MaxAbsScaler().fit(X_train)\n>>> X_train, X_test = scaler.transform(X_train), scaler.transform(X_test)\n```\n\nNote that we scale the data using the \n[MaxAbsScaler](http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MaxAbsScaler.html)\nfunction. This scales the columns of the data matrix to ``[-1, 1]`` without \nbreaking sparsity. Scaling the dataset can have a significant effect on the \ncomputation time of GenSVM and is [generally recommended for \nSVMs](https://stats.stackexchange.com/q/65094).\n\n\n### Example 1: Fitting a single GenSVM model\n\nLet's start by fitting the most basic GenSVM model on the training data:\n\n\n```python\n>>> from gensvm import GenSVM\n>>> clf = GenSVM()\n>>> clf.fit(X_train, y_train)\nGenSVM(coef=0.0, degree=2.0, epsilon=1e-06, gamma='auto', kappa=0.0,\nkernel='linear', kernel_eigen_cutoff=1e-08, lmd=1e-05,\nmax_iter=100000000.0, p=1.0, random_state=None, verbose=0,\nweights='unit')\n```\n\nWith the model fitted, we can predict the test dataset:\n\n```python\n>>> y_pred = clf.predict(X_test)\n```\n\nNext, we can compute a score for the predictions. The GenSVM class has a \n``score`` method which computes the \n[accuracy_score](http://scikit-learn.org/stable/modules/generated/sklearn.metrics.accuracy_score.html)\nfor the predictions. In the GenSVM paper, the [adjusted Rand \nindex](https://en.wikipedia.org/wiki/Rand_index#Adjusted_Rand_index) is often \nused to compare performance. We illustrate both options below (your results \nmay be different depending on the exact train/test split):\n\n```python\n>>> clf.score(X_test, y_test)\n1.0\n>>> from sklearn.metrics import adjusted_rand_score\n>>> adjusted_rand_score(clf.predict(X_test), y_test)\n1.0\n```\n\nWe can try this again by changing the model parameters, for instance we can \nturn on verbosity and use the Euclidean norm in the GenSVM model by setting ``p = 2``:\n\n```python\n>>> clf2 = GenSVM(verbose=True, p=2)\n>>> clf2.fit(X_train, y_train)\nStarting main loop.\nDataset:\n    n = 112\n    m = 4\n    K = 3\nParameters:\n    kappa = 0.000000\n    p = 2.000000\n    lambda = 0.0000100000000000\n    epsilon = 1e-06\n\niter = 0, L = 3.4499531579689533, Lbar = 7.3369415851139745, reldiff = 1.1266786095824437\n...\nOptimization finished, iter = 4046, loss = 0.0230726364692517, rel. diff. = 0.0000009998645783\nNumber of support vectors: 9\nGenSVM(coef=0.0, degree=2.0, epsilon=1e-06, gamma='auto', kappa=0.0,\n    kernel='linear', kernel_eigen_cutoff=1e-08, lmd=1e-05,\n    max_iter=100000000.0, p=2, random_state=None, verbose=True,\n    weights='unit')\n```\n\nFor other parameters that can be tuned in the GenSVM model, see [GenSVM].\n\n### Example 2: Fitting a GenSVM model with a \"warm start\"\n\nOne of the key features of the GenSVM classifier is that training can be \naccelerated by using so-called \"warm-starts\". This way the optimization can be \nstarted in a location that is closer to the final solution than a random \nstarting position would be. To support this, the ``fit`` method of the GenSVM \nclass has an optional ``seed_V`` parameter. We'll illustrate how this can be \nused below.\n\nWe start with relatively large value for the ``epsilon`` parameter in the \nmodel. This is the stopping parameter that determines how long the \noptimization continues (and therefore how exact the fit is).\n\n```python\n>>> clf1 = GenSVM(epsilon=1e-3)\n>>> clf1.fit(X_train, y_train)\n...\n>>> clf1.n_iter_\n163\n```\n\nThe ``n_iter_`` attribute tells us how many iterations the model did. Now, we \ncan use the solution of this model to start the training for the next model:\n\n```python\n>>> clf2 = GenSVM(epsilon=1e-8)\n>>> clf2.fit(X_train, y_train, seed_V=clf1.combined_coef_)\n...\n>>> clf2.n_iter_\n3196\n```\n\nCompare this to a model with the same stopping parameter, but without the warm \nstart:\n\n```python\n>>> clf2.fit(X_train, y_train)\n...\n>>> clf2.n_iter_\n3699\n```\n\nSo we saved about 500 iterations! This effect will be especially significant \nwith large datasets and when you try out many parameter configurations. \nTherefore this technique is built into the [GenSVMGridSearchCV] class that can \nbe used to do a grid search of parameters.\n\n### Example 3: Running a GenSVM grid search\n\nOften when we're fitting a machine learning model such as GenSVM, we have to \ntry several parameter configurations to figure out which one performs best on \nour given dataset. This is usually combined with [cross \nvalidation](http://scikit-learn.org/stable/modules/cross_validation.html) to \navoid overfitting. To do this efficiently and to make use of warm starts, the \n[GenSVMGridSearchCV] class is available. This class works in the same way as \nthe \n[GridSearchCV](http://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html)\nclass of [Scikit-Learn], but uses the GenSVM C library for speed.\n\nTo do a grid search, we first have to define the parameters that we want to \nvary and what values we want to try:\n\n```python\n>>> from gensvm import GenSVMGridSearchCV\n>>> param_grid = {'p': [1.0, 2.0], 'lmd': [1e-8, 1e-6, 1e-4, 1e-2, 1.0], 'kappa': [-0.9, 0.0] }\n```\n\nFor the values that are not varied in the parameter grid, the default values \nwill be used. This means that if you want to change a specific value (such as \n``epsilon`` for instance), you can add this to the parameter grid as a \nparameter with a single value to try (e.g. ``'epsilon': [1e-8]``).\n\nRunning the grid search is now straightforward:\n\n```python\n>>> gg = GenSVMGridSearchCV(param_grid)\n>>> gg.fit(X_train, y_train)\nGenSVMGridSearchCV(cv=None, iid=True,\n      param_grid={'p': [1.0, 2.0], 'lmd': [1e-06, 0.0001, 0.01, 1.0], 'kappa': [-0.9, 0.0]},\n      refit=True, return_train_score=True, scoring=None, verbose=0)\n```\n\nNote that if we have set ``refit=True`` (the default), then we can use the \n[GenSVMGridSearchCV] instance to predict or score using the best estimator \nfound in the grid search:\n\n```python\n>>> y_pred = gg.predict(X_test)\n>>> gg.score(X_test, y_test)\n1.0\n```\n\nA nice feature borrowed from `Scikit-Learn`_ is that the results from the grid \nsearch can be represented as a ``pandas`` DataFrame:\n\n```python\n>>> from pandas import DataFrame\n>>> df = DataFrame(gg.cv_results_)\n```\n\nThis can make it easier to explore the results of the grid search.\n\n## Known Limitations\n\nThe following are known limitations that are on the roadmap for a future \nrelease of the package. If you need any of these features, please vote on them \non the linked GitHub issues (this can make us add them sooner!).\n\n1. [Support for sparse \n   matrices](https://github.com/GjjvdBurg/PyGenSVM/issues/1). NumPy supports \n   sparse matrices, as does the GenSVM C library. Getting them to work \n   together requires some additional effort. In the meantime, if you really \n   want to use sparse data with GenSVM (this can lead to significant \n   speedups!), check out the GenSVM C library.\n2. [Specification of class misclassification \n   weights](https://github.com/GjjvdBurg/PyGenSVM/issues/3). Currently, \n   incorrectly classification an object from class A to class C is as bad as \n   incorrectly classifying an object from class B to class C. Depending on the \n   application, this may not be the desired effect. Adding class \n   misclassification weights can solve this issue.\n\n\n## Questions and Issues\n\nIf you have any questions or encounter any issues with using this package, \nplease ask them on [GitHub](https://github.com/GjjvdBurg/PyGenSVM).\n\n## License\n\nThis package is licensed under the GNU General Public License version 3. \n\nCopyright (c) G.J.J. van den Burg, excluding the sections of the code that are \nexplicitly marked to come from Scikit-Learn.\n\n[Scikit-Learn]: http://scikit-learn.org/stable/index.html\n\n[GenSVM]: https://gensvm.readthedocs.io/en/latest/#gensvm\n\n[GenSVMGridSearchCV]: https://gensvm.readthedocs.io/en/latest/#gensvmgridsearchcv", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GjjvdBurg/PyGenSVM", "keywords": "", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "gensvm", "package_url": "https://pypi.org/project/gensvm/", "platform": "", "project_url": "https://pypi.org/project/gensvm/", "project_urls": {"Homepage": "https://github.com/GjjvdBurg/PyGenSVM"}, "release_url": "https://pypi.org/project/gensvm/0.2.6/", "requires_dist": null, "requires_python": "", "summary": "Generalized Multiclass Support Vector Machines", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GenSVM Python Package</h1>\n<p><a href=\"https://travis-ci.org/GjjvdBurg/PyGenSVM\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1b042165aa62652a4eb55a3d1f70bba77012fdc/68747470733a2f2f7472617669732d63692e6f72672f476a6a7664427572672f507947656e53564d2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://gensvm.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35efd47b1676ba0072ebec064687669ba2c78761/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f67656e73766d2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>This is the Python package for the GenSVM multiclass classifier by <a href=\"https://gertjanvandenburg.com\" rel=\"nofollow\">Gerrit\nJ.J. van den Burg</a> and <a href=\"https://personal.eur.nl/groenen/\" rel=\"nofollow\">Patrick J.F.\nGroenen</a>.</p>\n<p><strong>Useful links:</strong></p>\n<ul>\n<li><a href=\"https://github.com/GjjvdBurg/PyGenSVM\" rel=\"nofollow\">PyGenSVM on GitHub</a></li>\n<li><a href=\"https://pypi.org/project/gensvm/\" rel=\"nofollow\">PyGenSVM on PyPI</a></li>\n<li><a href=\"https://gensvm.readthedocs.io/en/latest/\" rel=\"nofollow\">Package documentation</a></li>\n<li>Journal paper: <a href=\"http://www.jmlr.org/papers/v17/14-526.html\" rel=\"nofollow\">GenSVM: A Generalized Multiclass Support Vector\nMachine</a> JMLR, 17(225):1\u221242,\n2016.</li>\n<li>There is also an <a href=\"https://github.com/GjjvdBurg/RGenSVM\" rel=\"nofollow\">R package</a></li>\n<li>Or you can directly use <a href=\"https://github.com/GjjvdBurg/GenSVM\" rel=\"nofollow\">the C library</a></li>\n</ul>\n<h2>Installation</h2>\n<p><strong>Before</strong> GenSVM can be installed, a working NumPy installation is required.\nso GenSVM can be installed using the following command:</p>\n<pre>$ pip install numpy <span class=\"o\">&amp;&amp;</span> pip install gensvm\n</pre>\n<p>If you encounter any errors, please <a href=\"https://github.com/GjjvdBurg/PyGenSVM\" rel=\"nofollow\">open an issue on\nGitHub</a>. Don't hesitate, you're helping\nto make this project better!</p>\n<h2>Citing</h2>\n<p>If you use this package in your research please cite the paper, for instance\nusing the following BibTeX entry::</p>\n<pre><span class=\"nc\">@article</span><span class=\"p\">{</span><span class=\"nl\">JMLR:v17:14-526</span><span class=\"p\">,</span>\n        <span class=\"na\">author</span>  <span class=\"p\">=</span> <span class=\"s\">{{van den Burg}, G. J. J. and Groenen, P. J. F.}</span><span class=\"p\">,</span>\n        <span class=\"na\">title</span>   <span class=\"p\">=</span> <span class=\"s\">{{GenSVM}: A Generalized Multiclass Support Vector Machine}</span><span class=\"p\">,</span>\n        <span class=\"na\">journal</span> <span class=\"p\">=</span> <span class=\"s\">{Journal of Machine Learning Research}</span><span class=\"p\">,</span>\n        <span class=\"na\">year</span>    <span class=\"p\">=</span> <span class=\"s\">{2016}</span><span class=\"p\">,</span>\n        <span class=\"na\">volume</span>  <span class=\"p\">=</span> <span class=\"s\">{17}</span><span class=\"p\">,</span>\n        <span class=\"na\">number</span>  <span class=\"p\">=</span> <span class=\"s\">{225}</span><span class=\"p\">,</span>\n        <span class=\"na\">pages</span>   <span class=\"p\">=</span> <span class=\"s\">{1-42}</span><span class=\"p\">,</span>\n        <span class=\"na\">url</span>     <span class=\"p\">=</span> <span class=\"s\">{http://jmlr.org/papers/v17/14-526.html}</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Usage</h2>\n<p>The package contains two classes to fit the GenSVM model: <a href=\"https://gensvm.readthedocs.io/en/latest/#gensvm\" rel=\"nofollow\">GenSVM</a> and\n<a href=\"https://gensvm.readthedocs.io/en/latest/#gensvmgridsearchcv\" rel=\"nofollow\">GenSVMGridSearchCV</a>.  These classes respectively fit a single GenSVM model or\nfit a series of models for a parameter grid search. The interface to these\nclasses is the same as that of classifiers in <a href=\"http://scikit-learn.org/stable/index.html\" rel=\"nofollow\">Scikit-Learn</a>  so users\nfamiliar with Scikit-Learn should have no trouble using this package.  Below\nwe will show some examples of using the GenSVM classifier and the\nGenSVMGridSearchCV class in practice.</p>\n<p>In the examples we assume that we have loaded the <a href=\"http://scikit-learn.org/stable/auto_examples/datasets/plot_iris_dataset.html\" rel=\"nofollow\">iris\ndataset</a>\nfrom Scikit-Learn as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.preprocessing</span> <span class=\"kn\">import</span> <span class=\"n\">MaxAbsScaler</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">y_test</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">scaler</span> <span class=\"o\">=</span> <span class=\"n\">MaxAbsScaler</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">X_test</span> <span class=\"o\">=</span> <span class=\"n\">scaler</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">),</span> <span class=\"n\">scaler</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n</pre>\n<p>Note that we scale the data using the\n<a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MaxAbsScaler.html\" rel=\"nofollow\">MaxAbsScaler</a>\nfunction. This scales the columns of the data matrix to <code>[-1, 1]</code> without\nbreaking sparsity. Scaling the dataset can have a significant effect on the\ncomputation time of GenSVM and is <a href=\"https://stats.stackexchange.com/q/65094\" rel=\"nofollow\">generally recommended for\nSVMs</a>.</p>\n<h3>Example 1: Fitting a single GenSVM model</h3>\n<p>Let's start by fitting the most basic GenSVM model on the training data:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">gensvm</span> <span class=\"kn\">import</span> <span class=\"n\">GenSVM</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span> <span class=\"o\">=</span> <span class=\"n\">GenSVM</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">GenSVM</span><span class=\"p\">(</span><span class=\"n\">coef</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">degree</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mf\">1e-06</span><span class=\"p\">,</span> <span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"s1\">'auto'</span><span class=\"p\">,</span> <span class=\"n\">kappa</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span>\n<span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"s1\">'linear'</span><span class=\"p\">,</span> <span class=\"n\">kernel_eigen_cutoff</span><span class=\"o\">=</span><span class=\"mf\">1e-08</span><span class=\"p\">,</span> <span class=\"n\">lmd</span><span class=\"o\">=</span><span class=\"mf\">1e-05</span><span class=\"p\">,</span>\n<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mf\">100000000.0</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"s1\">'unit'</span><span class=\"p\">)</span>\n</pre>\n<p>With the model fitted, we can predict the test dataset:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n</pre>\n<p>Next, we can compute a score for the predictions. The GenSVM class has a\n<code>score</code> method which computes the\n<a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.metrics.accuracy_score.html\" rel=\"nofollow\">accuracy_score</a>\nfor the predictions. In the GenSVM paper, the <a href=\"https://en.wikipedia.org/wiki/Rand_index#Adjusted_Rand_index\" rel=\"nofollow\">adjusted Rand\nindex</a> is often\nused to compare performance. We illustrate both options below (your results\nmay be different depending on the exact train/test split):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">)</span>\n<span class=\"mf\">1.0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sklearn.metrics</span> <span class=\"kn\">import</span> <span class=\"n\">adjusted_rand_score</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">adjusted_rand_score</span><span class=\"p\">(</span><span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">),</span> <span class=\"n\">y_test</span><span class=\"p\">)</span>\n<span class=\"mf\">1.0</span>\n</pre>\n<p>We can try this again by changing the model parameters, for instance we can\nturn on verbosity and use the Euclidean norm in the GenSVM model by setting <code>p = 2</code>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf2</span> <span class=\"o\">=</span> <span class=\"n\">GenSVM</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf2</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">Starting</span> <span class=\"n\">main</span> <span class=\"n\">loop</span><span class=\"o\">.</span>\n<span class=\"n\">Dataset</span><span class=\"p\">:</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"mi\">112</span>\n    <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n    <span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"n\">Parameters</span><span class=\"p\">:</span>\n    <span class=\"n\">kappa</span> <span class=\"o\">=</span> <span class=\"mf\">0.000000</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"mf\">2.000000</span>\n    <span class=\"k\">lambda</span> <span class=\"o\">=</span> <span class=\"mf\">0.0000100000000000</span>\n    <span class=\"n\">epsilon</span> <span class=\"o\">=</span> <span class=\"mf\">1e-06</span>\n\n<span class=\"nb\">iter</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"mf\">3.4499531579689533</span><span class=\"p\">,</span> <span class=\"n\">Lbar</span> <span class=\"o\">=</span> <span class=\"mf\">7.3369415851139745</span><span class=\"p\">,</span> <span class=\"n\">reldiff</span> <span class=\"o\">=</span> <span class=\"mf\">1.1266786095824437</span>\n<span class=\"o\">...</span>\n<span class=\"n\">Optimization</span> <span class=\"n\">finished</span><span class=\"p\">,</span> <span class=\"nb\">iter</span> <span class=\"o\">=</span> <span class=\"mi\">4046</span><span class=\"p\">,</span> <span class=\"n\">loss</span> <span class=\"o\">=</span> <span class=\"mf\">0.0230726364692517</span><span class=\"p\">,</span> <span class=\"n\">rel</span><span class=\"o\">.</span> <span class=\"n\">diff</span><span class=\"o\">.</span> <span class=\"o\">=</span> <span class=\"mf\">0.0000009998645783</span>\n<span class=\"n\">Number</span> <span class=\"n\">of</span> <span class=\"n\">support</span> <span class=\"n\">vectors</span><span class=\"p\">:</span> <span class=\"mi\">9</span>\n<span class=\"n\">GenSVM</span><span class=\"p\">(</span><span class=\"n\">coef</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"n\">degree</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mf\">1e-06</span><span class=\"p\">,</span> <span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"s1\">'auto'</span><span class=\"p\">,</span> <span class=\"n\">kappa</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">,</span>\n    <span class=\"n\">kernel</span><span class=\"o\">=</span><span class=\"s1\">'linear'</span><span class=\"p\">,</span> <span class=\"n\">kernel_eigen_cutoff</span><span class=\"o\">=</span><span class=\"mf\">1e-08</span><span class=\"p\">,</span> <span class=\"n\">lmd</span><span class=\"o\">=</span><span class=\"mf\">1e-05</span><span class=\"p\">,</span>\n    <span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"mf\">100000000.0</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">weights</span><span class=\"o\">=</span><span class=\"s1\">'unit'</span><span class=\"p\">)</span>\n</pre>\n<p>For other parameters that can be tuned in the GenSVM model, see <a href=\"https://gensvm.readthedocs.io/en/latest/#gensvm\" rel=\"nofollow\">GenSVM</a>.</p>\n<h3>Example 2: Fitting a GenSVM model with a \"warm start\"</h3>\n<p>One of the key features of the GenSVM classifier is that training can be\naccelerated by using so-called \"warm-starts\". This way the optimization can be\nstarted in a location that is closer to the final solution than a random\nstarting position would be. To support this, the <code>fit</code> method of the GenSVM\nclass has an optional <code>seed_V</code> parameter. We'll illustrate how this can be\nused below.</p>\n<p>We start with relatively large value for the <code>epsilon</code> parameter in the\nmodel. This is the stopping parameter that determines how long the\noptimization continues (and therefore how exact the fit is).</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf1</span> <span class=\"o\">=</span> <span class=\"n\">GenSVM</span><span class=\"p\">(</span><span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mf\">1e-3</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf1</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf1</span><span class=\"o\">.</span><span class=\"n\">n_iter_</span>\n<span class=\"mi\">163</span>\n</pre>\n<p>The <code>n_iter_</code> attribute tells us how many iterations the model did. Now, we\ncan use the solution of this model to start the training for the next model:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf2</span> <span class=\"o\">=</span> <span class=\"n\">GenSVM</span><span class=\"p\">(</span><span class=\"n\">epsilon</span><span class=\"o\">=</span><span class=\"mf\">1e-8</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf2</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">seed_V</span><span class=\"o\">=</span><span class=\"n\">clf1</span><span class=\"o\">.</span><span class=\"n\">combined_coef_</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf2</span><span class=\"o\">.</span><span class=\"n\">n_iter_</span>\n<span class=\"mi\">3196</span>\n</pre>\n<p>Compare this to a model with the same stopping parameter, but without the warm\nstart:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf2</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">clf2</span><span class=\"o\">.</span><span class=\"n\">n_iter_</span>\n<span class=\"mi\">3699</span>\n</pre>\n<p>So we saved about 500 iterations! This effect will be especially significant\nwith large datasets and when you try out many parameter configurations.\nTherefore this technique is built into the <a href=\"https://gensvm.readthedocs.io/en/latest/#gensvmgridsearchcv\" rel=\"nofollow\">GenSVMGridSearchCV</a> class that can\nbe used to do a grid search of parameters.</p>\n<h3>Example 3: Running a GenSVM grid search</h3>\n<p>Often when we're fitting a machine learning model such as GenSVM, we have to\ntry several parameter configurations to figure out which one performs best on\nour given dataset. This is usually combined with <a href=\"http://scikit-learn.org/stable/modules/cross_validation.html\" rel=\"nofollow\">cross\nvalidation</a> to\navoid overfitting. To do this efficiently and to make use of warm starts, the\n<a href=\"https://gensvm.readthedocs.io/en/latest/#gensvmgridsearchcv\" rel=\"nofollow\">GenSVMGridSearchCV</a> class is available. This class works in the same way as\nthe\n<a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html\" rel=\"nofollow\">GridSearchCV</a>\nclass of <a href=\"http://scikit-learn.org/stable/index.html\" rel=\"nofollow\">Scikit-Learn</a>, but uses the GenSVM C library for speed.</p>\n<p>To do a grid search, we first have to define the parameters that we want to\nvary and what values we want to try:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">gensvm</span> <span class=\"kn\">import</span> <span class=\"n\">GenSVMGridSearchCV</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">param_grid</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'p'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">],</span> <span class=\"s1\">'lmd'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">1e-8</span><span class=\"p\">,</span> <span class=\"mf\">1e-6</span><span class=\"p\">,</span> <span class=\"mf\">1e-4</span><span class=\"p\">,</span> <span class=\"mf\">1e-2</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">],</span> <span class=\"s1\">'kappa'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]</span> <span class=\"p\">}</span>\n</pre>\n<p>For the values that are not varied in the parameter grid, the default values\nwill be used. This means that if you want to change a specific value (such as\n<code>epsilon</code> for instance), you can add this to the parameter grid as a\nparameter with a single value to try (e.g. <code>'epsilon': [1e-8]</code>).</p>\n<p>Running the grid search is now straightforward:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gg</span> <span class=\"o\">=</span> <span class=\"n\">GenSVMGridSearchCV</span><span class=\"p\">(</span><span class=\"n\">param_grid</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gg</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">GenSVMGridSearchCV</span><span class=\"p\">(</span><span class=\"n\">cv</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">iid</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n      <span class=\"n\">param_grid</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'p'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">],</span> <span class=\"s1\">'lmd'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">1e-06</span><span class=\"p\">,</span> <span class=\"mf\">0.0001</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">],</span> <span class=\"s1\">'kappa'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">]},</span>\n      <span class=\"n\">refit</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">return_train_score</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">scoring</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>Note that if we have set <code>refit=True</code> (the default), then we can use the\n<a href=\"https://gensvm.readthedocs.io/en/latest/#gensvmgridsearchcv\" rel=\"nofollow\">GenSVMGridSearchCV</a> instance to predict or score using the best estimator\nfound in the grid search:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">gg</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gg</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">,</span> <span class=\"n\">y_test</span><span class=\"p\">)</span>\n<span class=\"mf\">1.0</span>\n</pre>\n<p>A nice feature borrowed from <code>Scikit-Learn</code>_ is that the results from the grid\nsearch can be represented as a <code>pandas</code> DataFrame:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pandas</span> <span class=\"kn\">import</span> <span class=\"n\">DataFrame</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"n\">gg</span><span class=\"o\">.</span><span class=\"n\">cv_results_</span><span class=\"p\">)</span>\n</pre>\n<p>This can make it easier to explore the results of the grid search.</p>\n<h2>Known Limitations</h2>\n<p>The following are known limitations that are on the roadmap for a future\nrelease of the package. If you need any of these features, please vote on them\non the linked GitHub issues (this can make us add them sooner!).</p>\n<ol>\n<li><a href=\"https://github.com/GjjvdBurg/PyGenSVM/issues/1\" rel=\"nofollow\">Support for sparse\nmatrices</a>. NumPy supports\nsparse matrices, as does the GenSVM C library. Getting them to work\ntogether requires some additional effort. In the meantime, if you really\nwant to use sparse data with GenSVM (this can lead to significant\nspeedups!), check out the GenSVM C library.</li>\n<li><a href=\"https://github.com/GjjvdBurg/PyGenSVM/issues/3\" rel=\"nofollow\">Specification of class misclassification\nweights</a>. Currently,\nincorrectly classification an object from class A to class C is as bad as\nincorrectly classifying an object from class B to class C. Depending on the\napplication, this may not be the desired effect. Adding class\nmisclassification weights can solve this issue.</li>\n</ol>\n<h2>Questions and Issues</h2>\n<p>If you have any questions or encounter any issues with using this package,\nplease ask them on <a href=\"https://github.com/GjjvdBurg/PyGenSVM\" rel=\"nofollow\">GitHub</a>.</p>\n<h2>License</h2>\n<p>This package is licensed under the GNU General Public License version 3.</p>\n<p>Copyright (c) G.J.J. van den Burg, excluding the sections of the code that are\nexplicitly marked to come from Scikit-Learn.</p>\n\n          </div>"}, "last_serial": 6765839, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "6ff426e654588332c09b7b118ef40346", "sha256": "6e745a525cc5610a206dad8c068b2edb9524d5a821c6e174d79420afe1c3239a"}, "downloads": -1, "filename": "gensvm-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6ff426e654588332c09b7b118ef40346", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159014, "upload_time": "2017-12-13T02:32:31", "upload_time_iso_8601": "2017-12-13T02:32:31.264892Z", "url": "https://files.pythonhosted.org/packages/71/7d/087bb4464cf60f3d2fdded7f464380e45295fe63822b69c7e2cfb8ed1240/gensvm-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5418ce70d9c541af654607358427d441", "sha256": "c6dbe851a3e7a9237cd48dfe8fed2e72408e93cd1803dd4bd96a0e992bfe8d16"}, "downloads": -1, "filename": "gensvm-0.1.4.tar.gz", "has_sig": false, "md5_digest": "5418ce70d9c541af654607358427d441", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159019, "upload_time": "2017-12-13T02:43:31", "upload_time_iso_8601": "2017-12-13T02:43:31.460488Z", "url": "https://files.pythonhosted.org/packages/c7/9b/2279c0b305d49fe1ea0dad7f407636b0ed5ab478f525b2d8b53915fe78cf/gensvm-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "610e3480f8a4c8b97bcc94b1f1226dbb", "sha256": "5bbe394505e983082454750248bb1335025171c9fdfa7729e2c06fd24c52158f"}, "downloads": -1, "filename": "gensvm-0.1.5.tar.gz", "has_sig": false, "md5_digest": "610e3480f8a4c8b97bcc94b1f1226dbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159218, "upload_time": "2017-12-13T19:39:52", "upload_time_iso_8601": "2017-12-13T19:39:52.135323Z", "url": "https://files.pythonhosted.org/packages/6f/a7/d8671d408c025572973a09a804c64aeb533394c1238218279514187e8b25/gensvm-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "1bde2e3660b64165714a905fd2449a87", "sha256": "ff14e3bfc776bcf49e6d40428e122a431283e44954d1ea142f1813f935ca2e88"}, "downloads": -1, "filename": "gensvm-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1bde2e3660b64165714a905fd2449a87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160038, "upload_time": "2017-12-30T13:47:00", "upload_time_iso_8601": "2017-12-30T13:47:00.981620Z", "url": "https://files.pythonhosted.org/packages/ff/89/e272fd059daea2dcc43d8c5bb921840145c8916f61d700e6a17deaba55e8/gensvm-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "efbc8537983b9917120d26fa305ee303", "sha256": "884aa74e16e12cdfc52dbef149f9a1908eb6dadbb3729561c9573b54263ec7ac"}, "downloads": -1, "filename": "gensvm-0.1.7.tar.gz", "has_sig": false, "md5_digest": "efbc8537983b9917120d26fa305ee303", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160274, "upload_time": "2018-02-28T16:25:44", "upload_time_iso_8601": "2018-02-28T16:25:44.233280Z", "url": "https://files.pythonhosted.org/packages/a1/fb/f0f3976b83fb02067076727a0774a37a4e5b1565b6cfe29b97be38fc3ab2/gensvm-0.1.7.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e60138f8426e49f4119f447c28c38439", "sha256": "8b1b7ac9d2398b2ab5bf4c000a8c92837c241c63b89b0bdb53738064f9f78804"}, "downloads": -1, "filename": "gensvm-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e60138f8426e49f4119f447c28c38439", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188475, "upload_time": "2019-03-07T16:56:35", "upload_time_iso_8601": "2019-03-07T16:56:35.740825Z", "url": "https://files.pythonhosted.org/packages/38/b8/1a9f2693e65ecda52cf83560cfaf184e78c51d0e56ea08cbd10e1eefcc66/gensvm-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "fd46c50b342a7cf25478b893bc448c95", "sha256": "6338235c58b6896d3e66afcd1c5f26e6b40dae9e0c91aabd8200faa2003f2e8b"}, "downloads": -1, "filename": "gensvm-0.2.1.tar.gz", "has_sig": false, "md5_digest": "fd46c50b342a7cf25478b893bc448c95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188759, "upload_time": "2019-03-07T17:56:06", "upload_time_iso_8601": "2019-03-07T17:56:06.168051Z", "url": "https://files.pythonhosted.org/packages/03/0a/cdee188ae458349c03a3fc6f05df05f517f9651d1ef4f0125a2bab39408a/gensvm-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "c5cbd810911a2bf996f18a8324dac7d1", "sha256": "638b60fde965d2ad95626ac4cec96e62fc8ec4991fb30fb6f0d22cd13eefe934"}, "downloads": -1, "filename": "gensvm-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c5cbd810911a2bf996f18a8324dac7d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 189079, "upload_time": "2019-03-08T01:30:35", "upload_time_iso_8601": "2019-03-08T01:30:35.001724Z", "url": "https://files.pythonhosted.org/packages/6a/1a/ad6b51035a4d64b6581329369840606f72bb9554a6c3296b4d74a7fc3c5e/gensvm-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b3f87d2099090fcbf9c6d522842da274", "sha256": "8ef296650ac3a93d90cbf2b54100f9b53f0af43449fff7cb932905fcdc082d57"}, "downloads": -1, "filename": "gensvm-0.2.3.tar.gz", "has_sig": false, "md5_digest": "b3f87d2099090fcbf9c6d522842da274", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 189149, "upload_time": "2019-05-17T19:18:31", "upload_time_iso_8601": "2019-05-17T19:18:31.978310Z", "url": "https://files.pythonhosted.org/packages/70/e2/0e4971e310d81fb7768631d107cea68e32b628c72af8966c4191d50d29e2/gensvm-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "b6455b8a65c988a171f1b4e47657aab1", "sha256": "df35c2ec8703841afda8bab8c5f6d9758577a2e6881240dc90747b96d5a8fd27"}, "downloads": -1, "filename": "gensvm-0.2.4.tar.gz", "has_sig": false, "md5_digest": "b6455b8a65c988a171f1b4e47657aab1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 189873, "upload_time": "2019-05-30T16:35:22", "upload_time_iso_8601": "2019-05-30T16:35:22.964967Z", "url": "https://files.pythonhosted.org/packages/fe/f0/dd2c7006c509b62bb40acb9d4f41937a7834afde431610a1a4e9ea055fb1/gensvm-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "738054336a7848a9cf16bc691f863dd8", "sha256": "839857dd687840626e87f7899f9a1dfd1cfed36b5daa9e61d43c30da8191f7d5"}, "downloads": -1, "filename": "gensvm-0.2.5-cp36-cp36m-macosx_10_14_intel.whl", "has_sig": false, "md5_digest": "738054336a7848a9cf16bc691f863dd8", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 134193, "upload_time": "2020-03-06T20:51:42", "upload_time_iso_8601": "2020-03-06T20:51:42.434910Z", "url": "https://files.pythonhosted.org/packages/ce/d9/8b3ee2c378cdf7d8288dda65dc9fe56ff24b2312675fe63dfd13c578858e/gensvm-0.2.5-cp36-cp36m-macosx_10_14_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a71d157ea2b799e23d498d4f348fca8", "sha256": "96473a4c2c8978afd8d95b78b8e46781a7434f20e0d2f2ca65d157a42d0967cd"}, "downloads": -1, "filename": "gensvm-0.2.5-cp36-cp36m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "9a71d157ea2b799e23d498d4f348fca8", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 3456215, "upload_time": "2020-03-06T20:47:52", "upload_time_iso_8601": "2020-03-06T20:47:52.715673Z", "url": "https://files.pythonhosted.org/packages/ba/6a/02c3290f0254d83635c2038730f7126ce6f3de5cc3b87f833a875b5b111c/gensvm-0.2.5-cp36-cp36m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b20329d3d110c510f0d97165a90cda9", "sha256": "01ed5f69b93edd97f175962b0fa0c405b394e6b26cb7ad12fccb4247d000d8e4"}, "downloads": -1, "filename": "gensvm-0.2.5-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "2b20329d3d110c510f0d97165a90cda9", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 4058377, "upload_time": "2020-03-06T20:47:54", "upload_time_iso_8601": "2020-03-06T20:47:54.846242Z", "url": "https://files.pythonhosted.org/packages/74/ff/a010932cb90b4e016862bc886ca1a44cf5b67e26fdb425a38eee1991b3c0/gensvm-0.2.5-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd0376a4b85ded7adb0fcf21ef0f6b6c", "sha256": "f0f59f475591b6c0c5de6869b75327669f1da018c931951c427cc652caba7cb2"}, "downloads": -1, "filename": "gensvm-0.2.5-cp37-cp37m-macosx_10_14_intel.whl", "has_sig": false, "md5_digest": "fd0376a4b85ded7adb0fcf21ef0f6b6c", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 215367, "upload_time": "2020-03-06T20:51:43", "upload_time_iso_8601": "2020-03-06T20:51:43.804884Z", "url": "https://files.pythonhosted.org/packages/df/7f/c7a5b25308bdb650fce40890cd0f51f9e6713141db2827a71bcaff30bad0/gensvm-0.2.5-cp37-cp37m-macosx_10_14_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41cb3e10d3f34d97499c1f256f52f615", "sha256": "cd82531ca75f7d48d15eca99ad2f8171d13f27b7f7b0fd947cc96798d31b55b0"}, "downloads": -1, "filename": "gensvm-0.2.5-cp37-cp37m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "41cb3e10d3f34d97499c1f256f52f615", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3457879, "upload_time": "2020-03-06T20:47:56", "upload_time_iso_8601": "2020-03-06T20:47:56.266786Z", "url": "https://files.pythonhosted.org/packages/3f/9e/b2520b632f02cff2538b57170e01be2db3306bc51deb95cd30c52ca28495/gensvm-0.2.5-cp37-cp37m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c911691f7a5e6c7edb9dcfeadf44c09", "sha256": "59a3b9971a9d28e0a099a01d25166e63de4390cd9c5921da2a10eef10b1ef459"}, "downloads": -1, "filename": "gensvm-0.2.5-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "3c911691f7a5e6c7edb9dcfeadf44c09", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 4060130, "upload_time": "2020-03-06T20:47:57", "upload_time_iso_8601": "2020-03-06T20:47:57.643641Z", "url": "https://files.pythonhosted.org/packages/38/9a/4eb4a24f8af21a4a6854b9262ec6adf1dcc736f6452082cef36604f109ba/gensvm-0.2.5-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6becc89c4ef7b332daca1025b57f7cf", "sha256": "c44bbd1081a45da0d95eab865eb6a78fcba0d39b6da246ccb4738ed328b3cacf"}, "downloads": -1, "filename": "gensvm-0.2.5-cp38-cp38-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "f6becc89c4ef7b332daca1025b57f7cf", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 133580, "upload_time": "2020-03-06T20:51:44", "upload_time_iso_8601": "2020-03-06T20:51:44.766337Z", "url": "https://files.pythonhosted.org/packages/52/0b/3d1920050622064f7783c3614a1dd01a41d19f7063929d8b98d98f979791/gensvm-0.2.5-cp38-cp38-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4c3dc25f90334d63130c70f1a543492", "sha256": "47ed6492e91f8884e73dc4dfd69d345a5f7b08a88df434ee46311ad0d58cf06c"}, "downloads": -1, "filename": "gensvm-0.2.5-cp38-cp38-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "a4c3dc25f90334d63130c70f1a543492", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 3473937, "upload_time": "2020-03-06T20:47:59", "upload_time_iso_8601": "2020-03-06T20:47:59.324460Z", "url": "https://files.pythonhosted.org/packages/97/7d/d64e9a628b633f0aecc85b44aa4e7ace31df7da88705b178f90c24d96827/gensvm-0.2.5-cp38-cp38-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07a18b0fbe8510ec96251d88dba154a8", "sha256": "a6e3bc4dee5b2cf1727c00b7aa6e71a2e1dfcd3bdf79abd465147a82158c353f"}, "downloads": -1, "filename": "gensvm-0.2.5-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "07a18b0fbe8510ec96251d88dba154a8", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 4084179, "upload_time": "2020-03-06T20:48:00", "upload_time_iso_8601": "2020-03-06T20:48:00.944138Z", "url": "https://files.pythonhosted.org/packages/ae/ab/170a308f936c6eb52f585e821bc291bcbdda78cc5f8e8283f6e4fafb47e2/gensvm-0.2.5-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "175559ba185293a3c051d0d7deb4561d", "sha256": "2e70a708361901ae7973efebccc07cb4ea47d106064955cd5f7ce14cf61b6242"}, "downloads": -1, "filename": "gensvm-0.2.5.tar.gz", "has_sig": false, "md5_digest": "175559ba185293a3c051d0d7deb4561d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 186731, "upload_time": "2020-03-06T20:36:49", "upload_time_iso_8601": "2020-03-06T20:36:49.703125Z", "url": "https://files.pythonhosted.org/packages/c8/fb/6bad818b79735ebe9da77d4e896589bc3350fd4d34769f9e55b2bcaf9fe0/gensvm-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "60869f20f8a506ec5f3f4d45c1844427", "sha256": "c9e8f1c47de1c4b3368bd2038ca957dfcfafe47f6a7e74be6204536928a0cf4e"}, "downloads": -1, "filename": "gensvm-0.2.6-cp36-cp36m-macosx_10_14_intel.whl", "has_sig": false, "md5_digest": "60869f20f8a506ec5f3f4d45c1844427", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 138623, "upload_time": "2020-03-06T23:43:59", "upload_time_iso_8601": "2020-03-06T23:43:59.142860Z", "url": "https://files.pythonhosted.org/packages/27/47/d2b6f0aaa777a7fde71bb7c97830d913f10a902e4b4bd1346b32d9c6f851/gensvm-0.2.6-cp36-cp36m-macosx_10_14_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3af259eb17ff5f6c67fab848e0c1c6bf", "sha256": "10dc079c820c418a210d244e492c5099ef86dba3200a89296c5463c4340d00cb"}, "downloads": -1, "filename": "gensvm-0.2.6-cp36-cp36m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "3af259eb17ff5f6c67fab848e0c1c6bf", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 3460653, "upload_time": "2020-03-06T23:40:07", "upload_time_iso_8601": "2020-03-06T23:40:07.520381Z", "url": "https://files.pythonhosted.org/packages/c3/7b/02697b464a09b2aa3b57ea601d3d5c3ea2d198216f3f7f554e99027b0d0d/gensvm-0.2.6-cp36-cp36m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9ad785ae1110e8585b214047b566216", "sha256": "7a956243d29d94409d4e2a11612bb38d5433ed37a76cc5d9b8ada223abdad537"}, "downloads": -1, "filename": "gensvm-0.2.6-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "b9ad785ae1110e8585b214047b566216", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 4062822, "upload_time": "2020-03-06T23:40:09", "upload_time_iso_8601": "2020-03-06T23:40:09.353384Z", "url": "https://files.pythonhosted.org/packages/e6/07/3199c73b39fc41abf3701f6fbd0ec4bbc3bec4533a782e8b1921ceff90cc/gensvm-0.2.6-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a34f6ad394acf0a4e8dbe859e67adb85", "sha256": "c608163f5d884758fef0f6092e6486a4932d5c9252ce6bcab952a64bed359e2e"}, "downloads": -1, "filename": "gensvm-0.2.6-cp37-cp37m-macosx_10_14_intel.whl", "has_sig": false, "md5_digest": "a34f6ad394acf0a4e8dbe859e67adb85", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 219798, "upload_time": "2020-03-06T23:44:00", "upload_time_iso_8601": "2020-03-06T23:44:00.365192Z", "url": "https://files.pythonhosted.org/packages/57/fa/800cccb1030192400b7b5c604b317c2a19716f3fea08a91589657e2d6897/gensvm-0.2.6-cp37-cp37m-macosx_10_14_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be3a25839d9390b64cab5a168f35f6c5", "sha256": "76368f344ca8a064e63b45186ca887091d3b5640ffa66260ac11b9ea9c3c417a"}, "downloads": -1, "filename": "gensvm-0.2.6-cp37-cp37m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "be3a25839d9390b64cab5a168f35f6c5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3462328, "upload_time": "2020-03-06T23:40:11", "upload_time_iso_8601": "2020-03-06T23:40:11.742714Z", "url": "https://files.pythonhosted.org/packages/0b/f7/7ab23ac992af518299f1b50fbfcda4a5642b43634faf656b8f28ce5c49bd/gensvm-0.2.6-cp37-cp37m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edc89f69eaeb282b1599a86484e7e52e", "sha256": "8fd94a53e46bae71ae36c7595fb3bc2e09ab762da0152b9a389c963c5a04e110"}, "downloads": -1, "filename": "gensvm-0.2.6-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "edc89f69eaeb282b1599a86484e7e52e", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 4064555, "upload_time": "2020-03-06T23:40:13", "upload_time_iso_8601": "2020-03-06T23:40:13.131983Z", "url": "https://files.pythonhosted.org/packages/21/cf/4847df87fe0588ff6f7ef29259969df82efa76c4034b08e2233cebfb29cd/gensvm-0.2.6-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b89dd34aa97bba4394a3c885f773a86d", "sha256": "c9d795bf4dff7d2fa801c860b38f5aa2aab6cc12acafae68cf8f31e25372398c"}, "downloads": -1, "filename": "gensvm-0.2.6-cp38-cp38-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "b89dd34aa97bba4394a3c885f773a86d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 138012, "upload_time": "2020-03-06T23:44:01", "upload_time_iso_8601": "2020-03-06T23:44:01.747064Z", "url": "https://files.pythonhosted.org/packages/de/25/f63b3491cff93540090f97f6306a38ac8c899a94888121a0a03ec10fe1a7/gensvm-0.2.6-cp38-cp38-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "193fb666127dd538c7064f13e53ca5ca", "sha256": "ad67a4efb83c2bde002dca46f50dc8b4f6fae613c6efdb9126d5fd48480873d6"}, "downloads": -1, "filename": "gensvm-0.2.6-cp38-cp38-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "193fb666127dd538c7064f13e53ca5ca", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 3478377, "upload_time": "2020-03-06T23:40:15", "upload_time_iso_8601": "2020-03-06T23:40:15.015748Z", "url": "https://files.pythonhosted.org/packages/c4/b7/2222b4628d3106cf2218eebb74a01799ffd0355311b3b2a57d2675e17b9f/gensvm-0.2.6-cp38-cp38-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fd98cdf4218747d7418899702a9103f", "sha256": "59a8505c8a64842729dc144cf82a1f44af17d56db602e8da175e8930462093d5"}, "downloads": -1, "filename": "gensvm-0.2.6-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "2fd98cdf4218747d7418899702a9103f", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 4088605, "upload_time": "2020-03-06T23:40:16", "upload_time_iso_8601": "2020-03-06T23:40:16.584007Z", "url": "https://files.pythonhosted.org/packages/01/2d/8f73bf96b6f2cedd68ff0933d9c27e7ee5e2035cbb4a4ab139a6dfd8968b/gensvm-0.2.6-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03d2ba2a9a8c5c7bc1b1e26185bb9f76", "sha256": "8dabed91a72941a84879b2cd12dc3c96d872214e799da612565d4f3c688c15eb"}, "downloads": -1, "filename": "gensvm-0.2.6.tar.gz", "has_sig": false, "md5_digest": "03d2ba2a9a8c5c7bc1b1e26185bb9f76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188141, "upload_time": "2020-03-06T23:29:18", "upload_time_iso_8601": "2020-03-06T23:29:18.678748Z", "url": "https://files.pythonhosted.org/packages/2c/81/ec456a8786eae2ec8afd15ead31039be3a3c878cce2aee0498ce176564b8/gensvm-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60869f20f8a506ec5f3f4d45c1844427", "sha256": "c9e8f1c47de1c4b3368bd2038ca957dfcfafe47f6a7e74be6204536928a0cf4e"}, "downloads": -1, "filename": "gensvm-0.2.6-cp36-cp36m-macosx_10_14_intel.whl", "has_sig": false, "md5_digest": "60869f20f8a506ec5f3f4d45c1844427", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 138623, "upload_time": "2020-03-06T23:43:59", "upload_time_iso_8601": "2020-03-06T23:43:59.142860Z", "url": "https://files.pythonhosted.org/packages/27/47/d2b6f0aaa777a7fde71bb7c97830d913f10a902e4b4bd1346b32d9c6f851/gensvm-0.2.6-cp36-cp36m-macosx_10_14_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3af259eb17ff5f6c67fab848e0c1c6bf", "sha256": "10dc079c820c418a210d244e492c5099ef86dba3200a89296c5463c4340d00cb"}, "downloads": -1, "filename": "gensvm-0.2.6-cp36-cp36m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "3af259eb17ff5f6c67fab848e0c1c6bf", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 3460653, "upload_time": "2020-03-06T23:40:07", "upload_time_iso_8601": "2020-03-06T23:40:07.520381Z", "url": "https://files.pythonhosted.org/packages/c3/7b/02697b464a09b2aa3b57ea601d3d5c3ea2d198216f3f7f554e99027b0d0d/gensvm-0.2.6-cp36-cp36m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9ad785ae1110e8585b214047b566216", "sha256": "7a956243d29d94409d4e2a11612bb38d5433ed37a76cc5d9b8ada223abdad537"}, "downloads": -1, "filename": "gensvm-0.2.6-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "b9ad785ae1110e8585b214047b566216", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 4062822, "upload_time": "2020-03-06T23:40:09", "upload_time_iso_8601": "2020-03-06T23:40:09.353384Z", "url": "https://files.pythonhosted.org/packages/e6/07/3199c73b39fc41abf3701f6fbd0ec4bbc3bec4533a782e8b1921ceff90cc/gensvm-0.2.6-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a34f6ad394acf0a4e8dbe859e67adb85", "sha256": "c608163f5d884758fef0f6092e6486a4932d5c9252ce6bcab952a64bed359e2e"}, "downloads": -1, "filename": "gensvm-0.2.6-cp37-cp37m-macosx_10_14_intel.whl", "has_sig": false, "md5_digest": "a34f6ad394acf0a4e8dbe859e67adb85", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 219798, "upload_time": "2020-03-06T23:44:00", "upload_time_iso_8601": "2020-03-06T23:44:00.365192Z", "url": "https://files.pythonhosted.org/packages/57/fa/800cccb1030192400b7b5c604b317c2a19716f3fea08a91589657e2d6897/gensvm-0.2.6-cp37-cp37m-macosx_10_14_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be3a25839d9390b64cab5a168f35f6c5", "sha256": "76368f344ca8a064e63b45186ca887091d3b5640ffa66260ac11b9ea9c3c417a"}, "downloads": -1, "filename": "gensvm-0.2.6-cp37-cp37m-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "be3a25839d9390b64cab5a168f35f6c5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3462328, "upload_time": "2020-03-06T23:40:11", "upload_time_iso_8601": "2020-03-06T23:40:11.742714Z", "url": "https://files.pythonhosted.org/packages/0b/f7/7ab23ac992af518299f1b50fbfcda4a5642b43634faf656b8f28ce5c49bd/gensvm-0.2.6-cp37-cp37m-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edc89f69eaeb282b1599a86484e7e52e", "sha256": "8fd94a53e46bae71ae36c7595fb3bc2e09ab762da0152b9a389c963c5a04e110"}, "downloads": -1, "filename": "gensvm-0.2.6-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "edc89f69eaeb282b1599a86484e7e52e", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 4064555, "upload_time": "2020-03-06T23:40:13", "upload_time_iso_8601": "2020-03-06T23:40:13.131983Z", "url": "https://files.pythonhosted.org/packages/21/cf/4847df87fe0588ff6f7ef29259969df82efa76c4034b08e2233cebfb29cd/gensvm-0.2.6-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b89dd34aa97bba4394a3c885f773a86d", "sha256": "c9d795bf4dff7d2fa801c860b38f5aa2aab6cc12acafae68cf8f31e25372398c"}, "downloads": -1, "filename": "gensvm-0.2.6-cp38-cp38-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "b89dd34aa97bba4394a3c885f773a86d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 138012, "upload_time": "2020-03-06T23:44:01", "upload_time_iso_8601": "2020-03-06T23:44:01.747064Z", "url": "https://files.pythonhosted.org/packages/de/25/f63b3491cff93540090f97f6306a38ac8c899a94888121a0a03ec10fe1a7/gensvm-0.2.6-cp38-cp38-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "193fb666127dd538c7064f13e53ca5ca", "sha256": "ad67a4efb83c2bde002dca46f50dc8b4f6fae613c6efdb9126d5fd48480873d6"}, "downloads": -1, "filename": "gensvm-0.2.6-cp38-cp38-manylinux2010_i686.whl", "has_sig": false, "md5_digest": "193fb666127dd538c7064f13e53ca5ca", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 3478377, "upload_time": "2020-03-06T23:40:15", "upload_time_iso_8601": "2020-03-06T23:40:15.015748Z", "url": "https://files.pythonhosted.org/packages/c4/b7/2222b4628d3106cf2218eebb74a01799ffd0355311b3b2a57d2675e17b9f/gensvm-0.2.6-cp38-cp38-manylinux2010_i686.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fd98cdf4218747d7418899702a9103f", "sha256": "59a8505c8a64842729dc144cf82a1f44af17d56db602e8da175e8930462093d5"}, "downloads": -1, "filename": "gensvm-0.2.6-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "2fd98cdf4218747d7418899702a9103f", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 4088605, "upload_time": "2020-03-06T23:40:16", "upload_time_iso_8601": "2020-03-06T23:40:16.584007Z", "url": "https://files.pythonhosted.org/packages/01/2d/8f73bf96b6f2cedd68ff0933d9c27e7ee5e2035cbb4a4ab139a6dfd8968b/gensvm-0.2.6-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03d2ba2a9a8c5c7bc1b1e26185bb9f76", "sha256": "8dabed91a72941a84879b2cd12dc3c96d872214e799da612565d4f3c688c15eb"}, "downloads": -1, "filename": "gensvm-0.2.6.tar.gz", "has_sig": false, "md5_digest": "03d2ba2a9a8c5c7bc1b1e26185bb9f76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188141, "upload_time": "2020-03-06T23:29:18", "upload_time_iso_8601": "2020-03-06T23:29:18.678748Z", "url": "https://files.pythonhosted.org/packages/2c/81/ec456a8786eae2ec8afd15ead31039be3a3c878cce2aee0498ce176564b8/gensvm-0.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:12 2020"}