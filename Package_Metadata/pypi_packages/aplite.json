{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "aplite\n======\n\nSimple tool for managing the docker containers dependency suitable for\nlocal development envorionment.\n\nCurrent version: **none**\n\nRelease date: **not released yet**\n\nLicense: **MIT**\n\nIntroduction\n~~~~~~~~~~~~\n\nThis tool has been created to manage your docker containers while you\ndeveloping an application especially when it uses depending services and\neach service is running in a separate container. For example, imagine\nyou have a microservices architecture and want to work on one of the\nservices but to run it on your local machine you may have to run other\nservices at the same time to get it working properly. You could still\nuse docker-compose tool but it is not as flexible and easy to manage\nwhen it comes to choose which services you want to run at the moment.\n\nUsing aplite you can: - run a docker container with all it's depending\ncontainers using a single command - stop any container (or pause) and\nstart again any time without touching any other containers - run only\ndepending containers which are needed to run for the project you working\non (don't need to run whole architecture at the same time) - add extra\ntasks when container starts or stop using apltie configuration file\n\nInstallation\n~~~~~~~~~~~~\n\nThere are no special requirements apart from having Docker installed on\nyour machine. Then to install aplite you need to run these commands:\n\n.. code:: sh\n\n    $ wget https://gitlab.com/barell/aplite/master.zip\n    $ sudo unzip master.zip /etc\n    $ sudo symlink /usr/bin/aplite /etc/aplite/bin/aplite\n\nTo check if aplite has been successfully installed on your computer use:\n\n.. code:: sh\n\n    $ aplite version\n\nIt should output something like:\n\n.. code:: sh\n\n    $ aplite v0.1 (2017-02-22); docker-api: v1.24\n\nYou may also want to check if your docker installation is compatible\nwith aplite (more info to add).\n\nBasic Usage\n~~~~~~~~~~~\n\nTo start using aplite in your project you need to create an\naplite.config file which must contain some basic info about handling\nyour docker container:\n\n::\n\n    name test-project\n    image php7-apache\n\nIf you put this file inside your project and run\n\n.. code:: sh\n\n    $ aplite up\n\nIt will run a new container using php7-apache image. By default, there\nare no files mounted to the image but it can be simply done by adding\nmount command to the config file:\n\n::\n\n    name test-project\n    image php7-apache\n    mount . /var/www/html\n\nEvery time you change the aplite.config, run the \"up\" command to re-run\nall the containers. To stop all containers, use \"down\" command:\n\n.. code:: sh\n\n    $ aplite down\n\nNote: it will only stop containers initialized by aplite. You can also\nstop and remove containers by adding the -r flag:\n\n.. code:: sh\n\n    $ aplite down -r\n\nLinking containers\n~~~~~~~~~~~~~~~~~~\n\nMore complexity is added when your project depends on other services and\nyou need to run them all. In wich case you need to install all your\nservices first so aplite can localize them on your machine. When you are\ninside your project directory, just run:\n\n.. code:: sh\n\n    $ aplite install\n\nFrom now you can use the name of the project (from aplite.config) inside\nother project's configurations. For example, let's say project-alpha\nuses project-bravo. First you need to install both and inside\nproject-alpha aplite.config add:\n\n::\n\n    link project-bravo using project-bravo.com\n\nAnd run the up command inside project-alpha, and it will start both\ncontainers. If your code inside project-alpha will call\nproject-bravo.com, the traffic will be redirected to project-bravo\nservice.\n\nOccasionally you may want your project-alpha directly connect to\nproject-bravo.com (skipping container running on your machine) in which\ncase you can just stop project-bravo container:\n\n.. code:: sh\n\n    $ aplite stop project-bravo\n\nTo start it again, just use start command:\n\n.. code:: sh\n\n    $ aplite start project-bravo\n\nYou can use start and stop commands even if you haven't used up command\nbefore, so you can immidietaly start any of your installed container on\nyour machine and manually choose which one do you want to run. These\ncommands will also skip the linking from your configuration files.\n\nYou can also have multi-depth dependency, where project-bravo could link\nto another project and so on. Every time you use up command, all\ncontainers will start automatically so the whole flow will be kept.\n\nTo see which containers are running and their's links run the ps\ncommand:\n\n.. code:: sh\n\n    $ aplite ps\n    Service                                    Port  Image\n    project-alpha                              8000  php7-apache\n        -> project-bravo (project-bravo.com)   8001  php5-apache\n            -> project-charlie (charilie.com)  8002  php7-apache\n\nIssues and feedback\n~~~~~~~~~~~~~~~~~~~\n\nPlease feel free to report any issues or give us some feedback on new\nfeatures.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/barell/aplite", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aplite", "package_url": "https://pypi.org/project/aplite/", "platform": "", "project_url": "https://pypi.org/project/aplite/", "project_urls": {"Homepage": "https://github.com/barell/aplite"}, "release_url": "https://pypi.org/project/aplite/0.1.dev1/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.1.dev1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple tool for managing the docker containers dependency suitable for\nlocal development envorionment.</p>\n<p>Current version: <strong>none</strong></p>\n<p>Release date: <strong>not released yet</strong></p>\n<p>License: <strong>MIT</strong></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This tool has been created to manage your docker containers while you\ndeveloping an application especially when it uses depending services and\neach service is running in a separate container. For example, imagine\nyou have a microservices architecture and want to work on one of the\nservices but to run it on your local machine you may have to run other\nservices at the same time to get it working properly. You could still\nuse docker-compose tool but it is not as flexible and easy to manage\nwhen it comes to choose which services you want to run at the moment.</p>\n<p>Using aplite you can: - run a docker container with all it\u2019s depending\ncontainers using a single command - stop any container (or pause) and\nstart again any time without touching any other containers - run only\ndepending containers which are needed to run for the project you working\non (don\u2019t need to run whole architecture at the same time) - add extra\ntasks when container starts or stop using apltie configuration file</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>There are no special requirements apart from having Docker installed on\nyour machine. Then to install aplite you need to run these commands:</p>\n<pre>$ wget https://gitlab.com/barell/aplite/master.zip\n$ sudo unzip master.zip /etc\n$ sudo symlink /usr/bin/aplite /etc/aplite/bin/aplite\n</pre>\n<p>To check if aplite has been successfully installed on your computer use:</p>\n<pre>$ aplite version\n</pre>\n<p>It should output something like:</p>\n<pre>$ aplite v0.1 <span class=\"o\">(</span><span class=\"m\">2017</span>-02-22<span class=\"o\">)</span><span class=\"p\">;</span> docker-api: v1.24\n</pre>\n<p>You may also want to check if your docker installation is compatible\nwith aplite (more info to add).</p>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>To start using aplite in your project you need to create an\naplite.config file which must contain some basic info about handling\nyour docker container:</p>\n<pre>name test-project\nimage php7-apache\n</pre>\n<p>If you put this file inside your project and run</p>\n<pre>$ aplite up\n</pre>\n<p>It will run a new container using php7-apache image. By default, there\nare no files mounted to the image but it can be simply done by adding\nmount command to the config file:</p>\n<pre>name test-project\nimage php7-apache\nmount . /var/www/html\n</pre>\n<p>Every time you change the aplite.config, run the \u201cup\u201d command to re-run\nall the containers. To stop all containers, use \u201cdown\u201d command:</p>\n<pre>$ aplite down\n</pre>\n<p>Note: it will only stop containers initialized by aplite. You can also\nstop and remove containers by adding the -r flag:</p>\n<pre>$ aplite down -r\n</pre>\n</div>\n<div id=\"linking-containers\">\n<h2>Linking containers</h2>\n<p>More complexity is added when your project depends on other services and\nyou need to run them all. In wich case you need to install all your\nservices first so aplite can localize them on your machine. When you are\ninside your project directory, just run:</p>\n<pre>$ aplite install\n</pre>\n<p>From now you can use the name of the project (from aplite.config) inside\nother project\u2019s configurations. For example, let\u2019s say project-alpha\nuses project-bravo. First you need to install both and inside\nproject-alpha aplite.config add:</p>\n<pre>link project-bravo using project-bravo.com\n</pre>\n<p>And run the up command inside project-alpha, and it will start both\ncontainers. If your code inside project-alpha will call\nproject-bravo.com, the traffic will be redirected to project-bravo\nservice.</p>\n<p>Occasionally you may want your project-alpha directly connect to\nproject-bravo.com (skipping container running on your machine) in which\ncase you can just stop project-bravo container:</p>\n<pre>$ aplite stop project-bravo\n</pre>\n<p>To start it again, just use start command:</p>\n<pre>$ aplite start project-bravo\n</pre>\n<p>You can use start and stop commands even if you haven\u2019t used up command\nbefore, so you can immidietaly start any of your installed container on\nyour machine and manually choose which one do you want to run. These\ncommands will also skip the linking from your configuration files.</p>\n<p>You can also have multi-depth dependency, where project-bravo could link\nto another project and so on. Every time you use up command, all\ncontainers will start automatically so the whole flow will be kept.</p>\n<p>To see which containers are running and their\u2019s links run the ps\ncommand:</p>\n<pre>$ aplite ps\nService                                    Port  Image\nproject-alpha                              <span class=\"m\">8000</span>  php7-apache\n    -&gt; project-bravo <span class=\"o\">(</span>project-bravo.com<span class=\"o\">)</span>   <span class=\"m\">8001</span>  php5-apache\n        -&gt; project-charlie <span class=\"o\">(</span>charilie.com<span class=\"o\">)</span>  <span class=\"m\">8002</span>  php7-apache\n</pre>\n</div>\n<div id=\"issues-and-feedback\">\n<h2>Issues and feedback</h2>\n<p>Please feel free to report any issues or give us some feedback on new\nfeatures.</p>\n</div>\n\n          </div>"}, "last_serial": 2716275, "releases": {"0.1.dev1": [{"comment_text": "", "digests": {"md5": "becf261b82fd446538d942ce3926e138", "sha256": "c79449658333b693f12a2150246d51c6a30af94566da7e597b807a2c219f9238"}, "downloads": -1, "filename": "aplite-0.1.dev1-py3.5.egg", "has_sig": false, "md5_digest": "becf261b82fd446538d942ce3926e138", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 4261, "upload_time": "2017-03-19T20:33:31", "upload_time_iso_8601": "2017-03-19T20:33:31.360984Z", "url": "https://files.pythonhosted.org/packages/3f/44/6109d5cc13c46a3000f8fb166bbf50cfe427ffc3f80651b68f6034a24a98/aplite-0.1.dev1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "334e433457d628b44b8c1c01a0d5b952", "sha256": "ee4bca309b9b5fcf42d701498f2e0ff10f9d6aabb236f0260aa720c04a9526c8"}, "downloads": -1, "filename": "aplite-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "334e433457d628b44b8c1c01a0d5b952", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3440, "upload_time": "2017-03-19T20:33:33", "upload_time_iso_8601": "2017-03-19T20:33:33.501658Z", "url": "https://files.pythonhosted.org/packages/30/93/116fed35eeac0e0b40fde9e2bf3d8231b8697d6ef0e9c2971f15b5399a67/aplite-0.1.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "becf261b82fd446538d942ce3926e138", "sha256": "c79449658333b693f12a2150246d51c6a30af94566da7e597b807a2c219f9238"}, "downloads": -1, "filename": "aplite-0.1.dev1-py3.5.egg", "has_sig": false, "md5_digest": "becf261b82fd446538d942ce3926e138", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 4261, "upload_time": "2017-03-19T20:33:31", "upload_time_iso_8601": "2017-03-19T20:33:31.360984Z", "url": "https://files.pythonhosted.org/packages/3f/44/6109d5cc13c46a3000f8fb166bbf50cfe427ffc3f80651b68f6034a24a98/aplite-0.1.dev1-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "334e433457d628b44b8c1c01a0d5b952", "sha256": "ee4bca309b9b5fcf42d701498f2e0ff10f9d6aabb236f0260aa720c04a9526c8"}, "downloads": -1, "filename": "aplite-0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "334e433457d628b44b8c1c01a0d5b952", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3440, "upload_time": "2017-03-19T20:33:33", "upload_time_iso_8601": "2017-03-19T20:33:33.501658Z", "url": "https://files.pythonhosted.org/packages/30/93/116fed35eeac0e0b40fde9e2bf3d8231b8697d6ef0e9c2971f15b5399a67/aplite-0.1.dev1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:43 2020"}