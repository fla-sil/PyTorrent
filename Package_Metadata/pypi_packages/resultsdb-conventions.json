{"info": {"author": "Adam Williamson", "author_email": "awilliam@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Topic :: Utilities"], "description": "resultsdb\\_conventions\n======================\n\nresultsdb\\_conventions is a Python library that represents various\nconventions for reporting test results to\n`ResultsDB <https://fedoraproject.org/wiki/ResultsDB>`__. It allows you\nto report results easily and without a lot of boilerplate, and be\nrelatively confident their ResultsDB metadata will be consistent with\nother results of the same basic nature.\n\nInstallation\n------------\n\nresultsdb\\_conventions packages are available in the Fedora and\n`EPEL <https://fedoraproject.org/wiki/EPEL>`__ 7 repositories. The core\npackage is ``python2-resultsdb_conventions``, and the ``fedora`` module\nis in the package ``python2-resultsdb_conventions-fedora``. For other\ndistributions, or if you want to use the git code, you can simply make\nthe library available in the Python path for your consumer in some way,\nor to install the library systemwide, just run\n``sudo python setup.py install``. You will need the ``cached-property``\nlibrary as well, and the ``fedfind`` library if you wish to use the\nFedora conventions (these are both packaged for Fedora and EPEL). For\nactually submitting results, you will need the ``ResultsDBapi`` class\nfrom the ``resultsdb_api`` module.\n\nresultsdb\\_conventions is intended to be compatible with Python 2.6+ and\ncurrent Python 3. Please report bugs if you find compatibility problems.\n\nUse\n---\n\nThe simplest way to use resultsdb\\_conventions is to pick the ``Result``\nsubclass that most closely represents the kind of result you wish to\nsubmit, instantiate it with appropriate arguments, get an instance of\n``ResultsDBapi``, and run the ``report()`` method. This will apply the\n'default' metadata for the result (based on the kind of result and the\nargs used for instantiation), and submit it to whichever ResultsDB you\ngot an API instance for. The ``Result`` subclasses should all document\ntheir required and optional arguments.\n\nFor simple modifications of the submitted result, you can simply adjust\nthe ``extradata`` property (which is just a dict of arbitrary string\nkey:value pairs that are passed to ResultsDB and stored as-is) after\ngetting the instance but before running ``report()``. You can also cause\nthe result to be added to more groups by including an iterable of group\ndicts or UUID strings as the ``groups`` arg when instantiating the\nresult class, or by adjusting the instance's ``groups`` property\ndirectly.\n\nFor more complex changes to the behaviour, you can of course start from\nthe most relevant class and create a subclass, then adjust things as\nappropriate. The important conventions for how subclasses should be\nimplemented are documented in the ``Result`` class. If your subclass is\nlikely to have utility outside your project, you may want to submit a\npull request for it, so other projects can conveniently report results\naccording to the same conventions.\n\nA simple validation mechanism has been included, but currently none of\nthe included classes implements any significant validation. The\nvalidation is intended to enforce the convention being encoded, not to\ndo fundamental checks on the validity of the result in ResultsDB terms;\nResultsDB will reject any outright invalid submission. Please consider\nimplementing validation for any pull requests you submit.\n\nBugs, pull requests etc.\n------------------------\n\nYou can file issues and pull requests on the `resultsdb\\_conventions\nproject <https://pagure.io/taskotron/resultsdb_conventions>`__ in\nPagure.\n\nCredits\n-------\n\nJan Sedlak and Josef Skladanka contributed valuable inspiration, ideas\nand reviews.\n\nLicensing\n---------\n\nresultsdb\\_conventions is available under the GPL, version 3 or any\nlater version. A copy is included as COPYING.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pagure.io/fedora-qa/resultsdb_conventions", "keywords": "fedora rhel epel resultsdb test taskotron", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "resultsdb-conventions", "package_url": "https://pypi.org/project/resultsdb-conventions/", "platform": "", "project_url": "https://pypi.org/project/resultsdb-conventions/", "project_urls": {"Homepage": "https://pagure.io/fedora-qa/resultsdb_conventions"}, "release_url": "https://pypi.org/project/resultsdb-conventions/2.0.3/", "requires_dist": null, "requires_python": "", "summary": "Module for conveniently reporting to ResultsDB following conventions", "version": "2.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>resultsdb_conventions is a Python library that represents various\nconventions for reporting test results to\n<a href=\"https://fedoraproject.org/wiki/ResultsDB\" rel=\"nofollow\">ResultsDB</a>. It allows you\nto report results easily and without a lot of boilerplate, and be\nrelatively confident their ResultsDB metadata will be consistent with\nother results of the same basic nature.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>resultsdb_conventions packages are available in the Fedora and\n<a href=\"https://fedoraproject.org/wiki/EPEL\" rel=\"nofollow\">EPEL</a> 7 repositories. The core\npackage is <tt><span class=\"pre\">python2-resultsdb_conventions</span></tt>, and the <tt>fedora</tt> module\nis in the package <tt><span class=\"pre\">python2-resultsdb_conventions-fedora</span></tt>. For other\ndistributions, or if you want to use the git code, you can simply make\nthe library available in the Python path for your consumer in some way,\nor to install the library systemwide, just run\n<tt>sudo python setup.py install</tt>. You will need the <tt><span class=\"pre\">cached-property</span></tt>\nlibrary as well, and the <tt>fedfind</tt> library if you wish to use the\nFedora conventions (these are both packaged for Fedora and EPEL). For\nactually submitting results, you will need the <tt>ResultsDBapi</tt> class\nfrom the <tt>resultsdb_api</tt> module.</p>\n<p>resultsdb_conventions is intended to be compatible with Python 2.6+ and\ncurrent Python 3. Please report bugs if you find compatibility problems.</p>\n</div>\n<div id=\"use\">\n<h2>Use</h2>\n<p>The simplest way to use resultsdb_conventions is to pick the <tt>Result</tt>\nsubclass that most closely represents the kind of result you wish to\nsubmit, instantiate it with appropriate arguments, get an instance of\n<tt>ResultsDBapi</tt>, and run the <tt>report()</tt> method. This will apply the\n\u2018default\u2019 metadata for the result (based on the kind of result and the\nargs used for instantiation), and submit it to whichever ResultsDB you\ngot an API instance for. The <tt>Result</tt> subclasses should all document\ntheir required and optional arguments.</p>\n<p>For simple modifications of the submitted result, you can simply adjust\nthe <tt>extradata</tt> property (which is just a dict of arbitrary string\nkey:value pairs that are passed to ResultsDB and stored as-is) after\ngetting the instance but before running <tt>report()</tt>. You can also cause\nthe result to be added to more groups by including an iterable of group\ndicts or UUID strings as the <tt>groups</tt> arg when instantiating the\nresult class, or by adjusting the instance\u2019s <tt>groups</tt> property\ndirectly.</p>\n<p>For more complex changes to the behaviour, you can of course start from\nthe most relevant class and create a subclass, then adjust things as\nappropriate. The important conventions for how subclasses should be\nimplemented are documented in the <tt>Result</tt> class. If your subclass is\nlikely to have utility outside your project, you may want to submit a\npull request for it, so other projects can conveniently report results\naccording to the same conventions.</p>\n<p>A simple validation mechanism has been included, but currently none of\nthe included classes implements any significant validation. The\nvalidation is intended to enforce the convention being encoded, not to\ndo fundamental checks on the validity of the result in ResultsDB terms;\nResultsDB will reject any outright invalid submission. Please consider\nimplementing validation for any pull requests you submit.</p>\n</div>\n<div id=\"bugs-pull-requests-etc\">\n<h2>Bugs, pull requests etc.</h2>\n<p>You can file issues and pull requests on the <a href=\"https://pagure.io/taskotron/resultsdb_conventions\" rel=\"nofollow\">resultsdb_conventions\nproject</a> in\nPagure.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Jan Sedlak and Josef Skladanka contributed valuable inspiration, ideas\nand reviews.</p>\n</div>\n<div id=\"licensing\">\n<h2>Licensing</h2>\n<p>resultsdb_conventions is available under the GPL, version 3 or any\nlater version. A copy is included as COPYING.</p>\n</div>\n\n          </div>"}, "last_serial": 3505955, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8236a556ef9ba58c1da858e135f454a4", "sha256": "58c58da8501e0903c214b71672c595840f439711b365ccc4ea7d1d7a9325ff85"}, "downloads": -1, "filename": "resultsdb_conventions-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8236a556ef9ba58c1da858e135f454a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8736, "upload_time": "2017-02-16T21:48:11", "upload_time_iso_8601": "2017-02-16T21:48:11.267924Z", "url": "https://files.pythonhosted.org/packages/02/2f/399e94faa3fd1c4a6ca867ec0256ba309cca874144e0bfaf2643be280cf0/resultsdb_conventions-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "71c89ba4b7c992ea1e039ef3bf92ffa2", "sha256": "96721e59a85904e60b3b88c67605921932eca008098e0c231f5c831dfc6fe001"}, "downloads": -1, "filename": "resultsdb_conventions-1.0.1.tar.gz", "has_sig": false, "md5_digest": "71c89ba4b7c992ea1e039ef3bf92ffa2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8829, "upload_time": "2017-02-16T21:48:13", "upload_time_iso_8601": "2017-02-16T21:48:13.283957Z", "url": "https://files.pythonhosted.org/packages/5a/a4/0f91c9364325746e884df9f391840794d2126e8c2952de146eeb4be72bee/resultsdb_conventions-1.0.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "33686becb66e23399c61caea955c3528", "sha256": "4c7d921b3f799c6998f3ac160622466faafe500c34f338e450f3670ed466defd"}, "downloads": -1, "filename": "resultsdb_conventions-2.0.0.tar.gz", "has_sig": false, "md5_digest": "33686becb66e23399c61caea955c3528", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11954, "upload_time": "2017-02-16T19:45:14", "upload_time_iso_8601": "2017-02-16T19:45:14.282651Z", "url": "https://files.pythonhosted.org/packages/5e/81/075fa47590a5b6d1d3dc213bee6b0e27187ea7770ffb02ecff23402082c5/resultsdb_conventions-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "e0e45fff867922b4479347252098b21d", "sha256": "8eb16b4fcb9f253d563475c34da662f31939db65447ee9e616330c034d7160f9"}, "downloads": -1, "filename": "resultsdb_conventions-2.0.1.tar.gz", "has_sig": false, "md5_digest": "e0e45fff867922b4479347252098b21d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25137, "upload_time": "2017-02-16T19:45:16", "upload_time_iso_8601": "2017-02-16T19:45:16.056421Z", "url": "https://files.pythonhosted.org/packages/8d/49/18cfe0e55e72db949f2b2de8a7a6bf7bffbad4b79878ab8f7ec21db63f2e/resultsdb_conventions-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "481f0ac4700a36c7aeecc63f56224001", "sha256": "b28e78f2c82eec5fb41fdab9d3e5be416f42f48fc84e14eb75e472e558c7e104"}, "downloads": -1, "filename": "resultsdb_conventions-2.0.2.tar.gz", "has_sig": false, "md5_digest": "481f0ac4700a36c7aeecc63f56224001", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26383, "upload_time": "2017-02-24T23:59:14", "upload_time_iso_8601": "2017-02-24T23:59:14.894995Z", "url": "https://files.pythonhosted.org/packages/25/89/a94eee4e8900af04a2057b8544e108f62f667e562627d23c0ab96de2229a/resultsdb_conventions-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "6bdf4aa589443d8b43c28b7fc54eb3d9", "sha256": "54335f9adb7aa3ad04229a1ba29a47e70ac26e3170742c8eafd255981705ed6a"}, "downloads": -1, "filename": "resultsdb_conventions-2.0.3.tar.gz", "has_sig": false, "md5_digest": "6bdf4aa589443d8b43c28b7fc54eb3d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25259, "upload_time": "2018-01-19T22:59:06", "upload_time_iso_8601": "2018-01-19T22:59:06.413092Z", "url": "https://files.pythonhosted.org/packages/e3/57/eef9226bfb83651e1afd58b5511784f9b2703e9498d447e78db7684e5068/resultsdb_conventions-2.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6bdf4aa589443d8b43c28b7fc54eb3d9", "sha256": "54335f9adb7aa3ad04229a1ba29a47e70ac26e3170742c8eafd255981705ed6a"}, "downloads": -1, "filename": "resultsdb_conventions-2.0.3.tar.gz", "has_sig": false, "md5_digest": "6bdf4aa589443d8b43c28b7fc54eb3d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25259, "upload_time": "2018-01-19T22:59:06", "upload_time_iso_8601": "2018-01-19T22:59:06.413092Z", "url": "https://files.pythonhosted.org/packages/e3/57/eef9226bfb83651e1afd58b5511784f9b2703e9498d447e78db7684e5068/resultsdb_conventions-2.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:29 2020"}