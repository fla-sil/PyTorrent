{"info": {"author": "Tarjei Hus\u00f8y", "author_email": "git@thusoy.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Communications :: Email", "Topic :: System :: Monitoring", "Topic :: System :: Systems Administration"], "description": "# Laim (pronounced like lime, anagram of mail)\n\n[![Build Status](https://travis-ci.org/thusoy/laim.svg?branch=master)](https://travis-ci.org/thusoy/laim)\n\nFlexible library to handle local SMTP on servers.\n\nModern &ast;nix servers use mail for a lot of reporting. Cron uses mail to notify about failing jobs, unattended-upgrades sends reports by mail, and sudo can send mail when invoked. Having a standardized way to report somewhere is great, but having to run a full-blown email infrastructure to receive these messages is hard.\n\nLaim makes it easy to run a secure, local-only SMTP agent, where you define how messages are handled in python. Laim takes care of the hard parts of SMTP, dropping privileges and reading configuration, you just have to write the code to handle the message however you like. Post to slack? Write to log? Send text message? All three? Up to you!\n\nExample handler that posts to slack:\n\n```py\nimport socket\n\nimport requests\nfrom laim import Laim\n\nclass SlackHandler(Laim):\n\n    def __init__(self):\n        super().__init__()\n        self.session = requests.Session()\n        self.session.headers.update({\n            'Authorization': 'Bearer %s' % self.config['SLACK_TOKEN']\n        })\n        self.channel_id = self.config['SLACK_CHANNEL_ID']\n        self.hostname = socket.gethostname()\n\n    def handle_message(self, sender, recipients, message):\n        self.session.post('https://slack.com/api/chat.postMessage', json={\n            'channel': self.channel_id,\n            'text': '%s received mail for %s:\\n%s' % (\n                self.hostname, ', '.join(recipients), message.get_payload()),\n        })\n\nif __name__ == '__main__':\n    handler = SlackHandler()\n    handler.run()\n```\n\nA couple of things are worth noting here that laim helped out with.\n\n\n## Configuration\n\nLaim reads the root-only readable yaml file `/etc/laim/config.yml` on startup, and saves the contents to `self.config`. This makes it easy to add arbitrary configuration you need in your handler, that will be read in a secure way.\n\nNote that until the line calling `super().__init__()`, the script was running as root. After that it dropped privileges to the user 'laim'.\n\n\n## Async\n\nLaim is not written for high throughput, but does do some basic queuing to make sure you can handle a message synchronously without blocking the reception of other messages. This is done by running the SMTP listener on one thread, and the handler on another. Messages to be delivered are passed to the handler on a bounded in-memory queue, which prevents arbitrarily high memory usage if the handler fails to process messages fast enough by dropping new messages (this event is logged by laim). You can configure the max size of the queue by passing `max_queue_size` to the Laim constructor (default is 50).\n\n\n## Security considerations\n\nLaim will bind to localhost port 25 to handle SMTP, and will by itself not do any filtering of messages. Since it only binds to localhost there's no extra attack surface for an external attacker, but if an attacker has gotten non-root access to the server they can craft arbitrary messages that will be forwarded to your handler. This could be exploited to send trojans that might get executed by developers on their own machines or similar, thus remain skeptical to any suspicious messages that gets delivered by laim.\n\nThe service will start as root, but drops privileges once it has bound to the port and opened a handle to the config file.\n\n\n# Installation\n\nIn decreasing order of stuff you have to do:\n\n* Use the salt state [here](https://github.com/thusoy/salt-states/salt/laim), write a state that\n  deploys your handler, and add any configuration to pillar. If you're using a different\n  automation tool and have written a cookbook/playbook/module/thing for laim, please let me know\n  and I'll add a link to it here!\n\n* Install from my apt repo:\n  ```\n  $ echo \"deb https://repo.thusoy.com/apt/debian $(lsb_release -cs) main\" | sudo tee -a /etc/apt/sources.list\n  $ curl https://raw.githubusercontent.com/thusoy/repo/master/release-key.asc | sudo apt-key add -\n  $ sudo apt-get update\n  $ sudo apt-get install laim\n  ```\n  Write your handler in `/etc/laim/handler.py`, put any configuration in `/etc/laim/config.yml` and restart the service.\n\n* Build the debian package yourself and upload to your own repo:\n  `./tools/build_deb.sh`\n\n* Install from PyPI and deploy a handler however you prefer.\n\n\n# Configuring laim\n\nBeyond writing a handler laim doesn't require any configuration. There's a couple of knobs available though:\n\n- **`max_queue_size`**: The max number of outstanding messages held in memory. This multiplied by the data size limit is the max memory usage of the process, if full new messages will be dropped. Default is 50.\n- **`user`**: The user to drop privileges to. Defaults to `laim`, which is created upon installation of the debian package.\n- **`config_file`**: Path to a YAML config file that should be read before dropping privileges. The handler can access this through `self.config`.\n\nAll the above are keyword arguments to the Laim constructor.\n\nThere's also some SMTP related configuration:\n- **`data_size_limit`**: Max size of a individual message, in bytes. Default is 32MB. Set to 0 to disable the limit.\n- **`ident`**: How the SMTP server identifies itself. Default is `laim <version>`.\n- **`enable_SMTPUTF8`**: Whether to announce support for UTF8 in the SMTP EHLO. Default is `True`.\n- **`hostname`**: The hostname the SMTP server greets clients with. Defaults to the server's FQDN.\n- **`timeout`**: The number of seconds to wait between valid SMTP commands. After this time the connection will be closed by the server. The default is 300 seconds.\n\nThe above should be given in the `smtp_kwargs` argument to the Laim constructor, and are forwarded directly to the [aiosmtpd constructor](https://aiosmtpd.readthedocs.io/en/latest/aiosmtpd/docs/smtp.html#SMTP).\n\n\n# Local testing\n\nApart from the test suite you can use the included `./devhandler.py` to run laim on port 2525 for testing. To send mail you can modify the file in `smtp-session.txt`, which can be piped to netcat to send a sample mail:\n\n    $ nc localhost 2525 < smtp-session.txt\n\nTo send lots of mail to test the queuing system or simple load testing:\n\n    $ count=0; while :; do echo \"Sending $count\"; sed s/COUNT/$count/ smtp-session.txt | nc localhost 2525 || break; count=$((count+1)); done; echo \"Sent $count mails\"\n\nLaim stops gracefully on SIGINT and SIGTERM, so you can stop the handler from a third shell and observe that it shuts down cleanly after having processed all queued messages:\n\n    $ pkill -f devhandler.py\n\nThere are some more example handlers in the [examples/](/examples/) directory.\n\n\nLicense\n-------\n\nThis project uses the [Hippocratic License](https://firstdonoharm.dev/), and is thus freely\navailable to use for purposes that do not infringe on the United Nations Universal Declaration of\nHuman Rights. Note that the python package is tagged with the MIT trove classifier until PyPI\nsupports a trove classifier for the\nHippocratic License (https://github.com/pypa/warehouse/issues/7157).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thusoy/laim", "keywords": "", "license": "Hippocratic", "maintainer": "", "maintainer_email": "", "name": "laim", "package_url": "https://pypi.org/project/laim/", "platform": "", "project_url": "https://pypi.org/project/laim/", "project_urls": {"Homepage": "https://github.com/thusoy/laim"}, "release_url": "https://pypi.org/project/laim/0.7.1/", "requires_dist": ["aiosmtpd (>=1.2)", "pyyaml", "sdnotify", "setproctitle"], "requires_python": "", "summary": "Local SMTP helper", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Laim (pronounced like lime, anagram of mail)</h1>\n<p><a href=\"https://travis-ci.org/thusoy/laim\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5866b7a15b5f3ca7297efdfda287f6635912767c/68747470733a2f2f7472617669732d63692e6f72672f746875736f792f6c61696d2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Flexible library to handle local SMTP on servers.</p>\n<p>Modern *nix servers use mail for a lot of reporting. Cron uses mail to notify about failing jobs, unattended-upgrades sends reports by mail, and sudo can send mail when invoked. Having a standardized way to report somewhere is great, but having to run a full-blown email infrastructure to receive these messages is hard.</p>\n<p>Laim makes it easy to run a secure, local-only SMTP agent, where you define how messages are handled in python. Laim takes care of the hard parts of SMTP, dropping privileges and reading configuration, you just have to write the code to handle the message however you like. Post to slack? Write to log? Send text message? All three? Up to you!</p>\n<p>Example handler that posts to slack:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">socket</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">laim</span> <span class=\"kn\">import</span> <span class=\"n\">Laim</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SlackHandler</span><span class=\"p\">(</span><span class=\"n\">Laim</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span>\n            <span class=\"s1\">'Authorization'</span><span class=\"p\">:</span> <span class=\"s1\">'Bearer </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SLACK_TOKEN'</span><span class=\"p\">]</span>\n        <span class=\"p\">})</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">channel_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'SLACK_CHANNEL_ID'</span><span class=\"p\">]</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hostname</span> <span class=\"o\">=</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">gethostname</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">handle_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">recipients</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'https://slack.com/api/chat.postMessage'</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span>\n            <span class=\"s1\">'channel'</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">channel_id</span><span class=\"p\">,</span>\n            <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%s</span><span class=\"s1\"> received mail for </span><span class=\"si\">%s</span><span class=\"s1\">:</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">hostname</span><span class=\"p\">,</span> <span class=\"s1\">', '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">recipients</span><span class=\"p\">),</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">get_payload</span><span class=\"p\">()),</span>\n        <span class=\"p\">})</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">SlackHandler</span><span class=\"p\">()</span>\n    <span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>A couple of things are worth noting here that laim helped out with.</p>\n<h2>Configuration</h2>\n<p>Laim reads the root-only readable yaml file <code>/etc/laim/config.yml</code> on startup, and saves the contents to <code>self.config</code>. This makes it easy to add arbitrary configuration you need in your handler, that will be read in a secure way.</p>\n<p>Note that until the line calling <code>super().__init__()</code>, the script was running as root. After that it dropped privileges to the user 'laim'.</p>\n<h2>Async</h2>\n<p>Laim is not written for high throughput, but does do some basic queuing to make sure you can handle a message synchronously without blocking the reception of other messages. This is done by running the SMTP listener on one thread, and the handler on another. Messages to be delivered are passed to the handler on a bounded in-memory queue, which prevents arbitrarily high memory usage if the handler fails to process messages fast enough by dropping new messages (this event is logged by laim). You can configure the max size of the queue by passing <code>max_queue_size</code> to the Laim constructor (default is 50).</p>\n<h2>Security considerations</h2>\n<p>Laim will bind to localhost port 25 to handle SMTP, and will by itself not do any filtering of messages. Since it only binds to localhost there's no extra attack surface for an external attacker, but if an attacker has gotten non-root access to the server they can craft arbitrary messages that will be forwarded to your handler. This could be exploited to send trojans that might get executed by developers on their own machines or similar, thus remain skeptical to any suspicious messages that gets delivered by laim.</p>\n<p>The service will start as root, but drops privileges once it has bound to the port and opened a handle to the config file.</p>\n<h1>Installation</h1>\n<p>In decreasing order of stuff you have to do:</p>\n<ul>\n<li>\n<p>Use the salt state <a href=\"https://github.com/thusoy/salt-states/salt/laim\" rel=\"nofollow\">here</a>, write a state that\ndeploys your handler, and add any configuration to pillar. If you're using a different\nautomation tool and have written a cookbook/playbook/module/thing for laim, please let me know\nand I'll add a link to it here!</p>\n</li>\n<li>\n<p>Install from my apt repo:</p>\n<pre><code>$ echo \"deb https://repo.thusoy.com/apt/debian $(lsb_release -cs) main\" | sudo tee -a /etc/apt/sources.list\n$ curl https://raw.githubusercontent.com/thusoy/repo/master/release-key.asc | sudo apt-key add -\n$ sudo apt-get update\n$ sudo apt-get install laim\n</code></pre>\n<p>Write your handler in <code>/etc/laim/handler.py</code>, put any configuration in <code>/etc/laim/config.yml</code> and restart the service.</p>\n</li>\n<li>\n<p>Build the debian package yourself and upload to your own repo:\n<code>./tools/build_deb.sh</code></p>\n</li>\n<li>\n<p>Install from PyPI and deploy a handler however you prefer.</p>\n</li>\n</ul>\n<h1>Configuring laim</h1>\n<p>Beyond writing a handler laim doesn't require any configuration. There's a couple of knobs available though:</p>\n<ul>\n<li><strong><code>max_queue_size</code></strong>: The max number of outstanding messages held in memory. This multiplied by the data size limit is the max memory usage of the process, if full new messages will be dropped. Default is 50.</li>\n<li><strong><code>user</code></strong>: The user to drop privileges to. Defaults to <code>laim</code>, which is created upon installation of the debian package.</li>\n<li><strong><code>config_file</code></strong>: Path to a YAML config file that should be read before dropping privileges. The handler can access this through <code>self.config</code>.</li>\n</ul>\n<p>All the above are keyword arguments to the Laim constructor.</p>\n<p>There's also some SMTP related configuration:</p>\n<ul>\n<li><strong><code>data_size_limit</code></strong>: Max size of a individual message, in bytes. Default is 32MB. Set to 0 to disable the limit.</li>\n<li><strong><code>ident</code></strong>: How the SMTP server identifies itself. Default is <code>laim &lt;version&gt;</code>.</li>\n<li><strong><code>enable_SMTPUTF8</code></strong>: Whether to announce support for UTF8 in the SMTP EHLO. Default is <code>True</code>.</li>\n<li><strong><code>hostname</code></strong>: The hostname the SMTP server greets clients with. Defaults to the server's FQDN.</li>\n<li><strong><code>timeout</code></strong>: The number of seconds to wait between valid SMTP commands. After this time the connection will be closed by the server. The default is 300 seconds.</li>\n</ul>\n<p>The above should be given in the <code>smtp_kwargs</code> argument to the Laim constructor, and are forwarded directly to the <a href=\"https://aiosmtpd.readthedocs.io/en/latest/aiosmtpd/docs/smtp.html#SMTP\" rel=\"nofollow\">aiosmtpd constructor</a>.</p>\n<h1>Local testing</h1>\n<p>Apart from the test suite you can use the included <code>./devhandler.py</code> to run laim on port 2525 for testing. To send mail you can modify the file in <code>smtp-session.txt</code>, which can be piped to netcat to send a sample mail:</p>\n<pre><code>$ nc localhost 2525 &lt; smtp-session.txt\n</code></pre>\n<p>To send lots of mail to test the queuing system or simple load testing:</p>\n<pre><code>$ count=0; while :; do echo \"Sending $count\"; sed s/COUNT/$count/ smtp-session.txt | nc localhost 2525 || break; count=$((count+1)); done; echo \"Sent $count mails\"\n</code></pre>\n<p>Laim stops gracefully on SIGINT and SIGTERM, so you can stop the handler from a third shell and observe that it shuts down cleanly after having processed all queued messages:</p>\n<pre><code>$ pkill -f devhandler.py\n</code></pre>\n<p>There are some more example handlers in the <a href=\"/examples/\" rel=\"nofollow\">examples/</a> directory.</p>\n<h2>License</h2>\n<p>This project uses the <a href=\"https://firstdonoharm.dev/\" rel=\"nofollow\">Hippocratic License</a>, and is thus freely\navailable to use for purposes that do not infringe on the United Nations Universal Declaration of\nHuman Rights. Note that the python package is tagged with the MIT trove classifier until PyPI\nsupports a trove classifier for the\nHippocratic License (<a href=\"https://github.com/pypa/warehouse/issues/7157\" rel=\"nofollow\">https://github.com/pypa/warehouse/issues/7157</a>).</p>\n\n          </div>"}, "last_serial": 6577542, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "da987ef7a345a7c72e7f65649453898b", "sha256": "bd5c436e95b51a3e3599770fbca8fd2367a3f3fb60ba07e22ca9215d4d7e3a64"}, "downloads": -1, "filename": "laim-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "da987ef7a345a7c72e7f65649453898b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13997, "upload_time": "2019-07-09T23:26:10", "upload_time_iso_8601": "2019-07-09T23:26:10.052934Z", "url": "https://files.pythonhosted.org/packages/db/4b/304670b92af07207732132c564cab6390128be1086b1619a0b7cdbb520ea/laim-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fb60483446df64bf868207c085d7477", "sha256": "40c9726e10b3092f630a0f72c9fd692fdac099f02dab74d8dd88d4ba0bd7818e"}, "downloads": -1, "filename": "laim-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5fb60483446df64bf868207c085d7477", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12011, "upload_time": "2019-07-09T23:26:12", "upload_time_iso_8601": "2019-07-09T23:26:12.863247Z", "url": "https://files.pythonhosted.org/packages/a3/59/16fca53e7ab852e31e63aaba70ea6b99669d7f0b6a49d2efd489b27ad191/laim-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5d1bcc5e49b8912ace88df1e8d685d42", "sha256": "dd6ca9b68a048abcf5dbe7285516aa3844dacb1be3dc76c9fde3f5ce466f5c80"}, "downloads": -1, "filename": "laim-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5d1bcc5e49b8912ace88df1e8d685d42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14199, "upload_time": "2019-07-10T12:30:09", "upload_time_iso_8601": "2019-07-10T12:30:09.894728Z", "url": "https://files.pythonhosted.org/packages/4e/0b/4f619213e9c19167ca6da4cdbe0f1c899ffdba807abc0146d94df62b8be8/laim-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9aef49b6ce0c5c81ba74dabb1918f61", "sha256": "f2f9a23da1d578c5a4c2cb5cf76d9514d161880be7219e6f4138a376826e9712"}, "downloads": -1, "filename": "laim-0.2.0.tar.gz", "has_sig": false, "md5_digest": "a9aef49b6ce0c5c81ba74dabb1918f61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12380, "upload_time": "2019-07-10T12:30:11", "upload_time_iso_8601": "2019-07-10T12:30:11.752765Z", "url": "https://files.pythonhosted.org/packages/d9/10/5a419d403d82a6464bfef21aa2b0429afafeaa5904464583fc4c5774a556/laim-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8a8be24c7af7d52134955d04617c8e19", "sha256": "d3b6c53550b127fbcee240c116acf92ee6ea873b5feba86b1b429a21619efca7"}, "downloads": -1, "filename": "laim-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8a8be24c7af7d52134955d04617c8e19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14301, "upload_time": "2019-07-16T17:31:51", "upload_time_iso_8601": "2019-07-16T17:31:51.642166Z", "url": "https://files.pythonhosted.org/packages/ab/b7/ea8c998edbf714f1209e8f4efdbc8e3ff409b9233da2e6aac996caa2ae0d/laim-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bc400159135c1bb809e26956e71aa82", "sha256": "32d9d093e5b75322a427364dc0c523cac54c1c3efd4962961c8fd95b83664051"}, "downloads": -1, "filename": "laim-0.3.0.tar.gz", "has_sig": false, "md5_digest": "9bc400159135c1bb809e26956e71aa82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12496, "upload_time": "2019-07-16T17:31:53", "upload_time_iso_8601": "2019-07-16T17:31:53.210679Z", "url": "https://files.pythonhosted.org/packages/69/0c/5e76d2f2e102db2adeb47000639d3869b24e8945c7f7af7227eb8c93d27c/laim-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a03fef324580cd304aaa9dfde909e5af", "sha256": "b46e3796791edeaba6b8b89f647d695b4f0e9443ade36d86c9db41564cbf3306"}, "downloads": -1, "filename": "laim-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a03fef324580cd304aaa9dfde909e5af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14549, "upload_time": "2019-07-20T18:07:18", "upload_time_iso_8601": "2019-07-20T18:07:18.524092Z", "url": "https://files.pythonhosted.org/packages/f8/3d/4677aadb81df3d8e4d706f8c4c0e25a70ecb0f897e62796b21b965bf4887/laim-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af16a9b306ac401560f1e5c685e0c029", "sha256": "7b6644d1119621e78fd3b09f854a4217bb0d17cb83b9a6743a8e70d479ca82b9"}, "downloads": -1, "filename": "laim-0.4.0.tar.gz", "has_sig": false, "md5_digest": "af16a9b306ac401560f1e5c685e0c029", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12668, "upload_time": "2019-07-20T18:07:20", "upload_time_iso_8601": "2019-07-20T18:07:20.137150Z", "url": "https://files.pythonhosted.org/packages/bd/a1/a9e67403811e8837040fc57e87da114bab935071c7ca952ee7324d44e0f9/laim-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "99505667c1da69ac52c29f79914edd9d", "sha256": "5b408e6d4641af1e5235e5b9571eda20fe2a9adf43db340c3a0c845d1e49600e"}, "downloads": -1, "filename": "laim-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "99505667c1da69ac52c29f79914edd9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15417, "upload_time": "2019-07-21T03:09:02", "upload_time_iso_8601": "2019-07-21T03:09:02.231212Z", "url": "https://files.pythonhosted.org/packages/a4/4d/5d60050778a4bb0966a8b5df3d432bf535cc662803ceeb88e44b46cac94a/laim-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14f635f92e192a9f65f8b4e8551d6dfb", "sha256": "f64775432ad1349c97ee35cab6d7696ed928b5e94de29fb75468484152a66d13"}, "downloads": -1, "filename": "laim-0.5.0.tar.gz", "has_sig": false, "md5_digest": "14f635f92e192a9f65f8b4e8551d6dfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14101, "upload_time": "2019-07-21T03:09:03", "upload_time_iso_8601": "2019-07-21T03:09:03.577444Z", "url": "https://files.pythonhosted.org/packages/de/01/88eb779011040d6ab6981ce6157c6ce5f07bf8d234e1353f5de072d3a8b3/laim-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "41799394d60349e5b2ec74fede848c23", "sha256": "2719998254b6dede0d8ac356d66235c37433ad8f963064b79ee4f62e2222b5f1"}, "downloads": -1, "filename": "laim-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "41799394d60349e5b2ec74fede848c23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15166, "upload_time": "2019-07-27T17:14:24", "upload_time_iso_8601": "2019-07-27T17:14:24.795321Z", "url": "https://files.pythonhosted.org/packages/1b/ee/59df70553217be01985915b8ece49d89d3fc40023bf6cb7163365da41dc8/laim-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec374b37a46d05f49e7bc34c110e427f", "sha256": "9fe7d5422d3b6ba0ef78b5792865bc8e1a6f908db2417cf15adf05113a40bfaa"}, "downloads": -1, "filename": "laim-0.5.1.tar.gz", "has_sig": false, "md5_digest": "ec374b37a46d05f49e7bc34c110e427f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11868, "upload_time": "2019-07-27T17:14:26", "upload_time_iso_8601": "2019-07-27T17:14:26.390230Z", "url": "https://files.pythonhosted.org/packages/54/a6/6fdd81081e651d3fd50892ffbdc43c6729fc0dbb9aeffb27066cdf327243/laim-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "296bc183db79f90f9442a30c8921456f", "sha256": "b9572da7b86b074e2135328683a9e4c6f6cf36fb47cfad98a550bbd47a2ee2ea"}, "downloads": -1, "filename": "laim-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "296bc183db79f90f9442a30c8921456f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15198, "upload_time": "2019-07-27T17:43:20", "upload_time_iso_8601": "2019-07-27T17:43:20.194491Z", "url": "https://files.pythonhosted.org/packages/85/2f/7732db777347c325c920e1392bc3253a5c15968d164fbc2b6665398b75c6/laim-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f715144eb325a00f1647782bb8eb7ead", "sha256": "26d65ea90070b14ca3dbc10c5efed1ae7ca9f3ff7088edf7f5305b855bb7ccc0"}, "downloads": -1, "filename": "laim-0.6.0.tar.gz", "has_sig": false, "md5_digest": "f715144eb325a00f1647782bb8eb7ead", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11896, "upload_time": "2019-07-27T17:43:21", "upload_time_iso_8601": "2019-07-27T17:43:21.521513Z", "url": "https://files.pythonhosted.org/packages/1f/e9/9a53deea3ffe8a2caf67f999c4936c99355431c3acbd4c59e144a8c64b32/laim-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "6f3ae71a7cfdb8b998feb8d39489a1bd", "sha256": "b9125b6300aaeae3028dd563d6ea5c7059a0f7e19c1696346b2bd91aa398062b"}, "downloads": -1, "filename": "laim-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6f3ae71a7cfdb8b998feb8d39489a1bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15194, "upload_time": "2019-07-27T18:29:20", "upload_time_iso_8601": "2019-07-27T18:29:20.718331Z", "url": "https://files.pythonhosted.org/packages/e0/aa/42931ecfc95c683adf5055751206b1383ab8a30e3f4dc3c95ec6609e593a/laim-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dc9aba5355d23c0febe5cc1633231d2", "sha256": "925d7929fab1e56285a56a64887ebe73f80d77c00f2a10ff567ef06101fb482a"}, "downloads": -1, "filename": "laim-0.6.1.tar.gz", "has_sig": false, "md5_digest": "0dc9aba5355d23c0febe5cc1633231d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11904, "upload_time": "2019-07-27T18:29:22", "upload_time_iso_8601": "2019-07-27T18:29:22.375859Z", "url": "https://files.pythonhosted.org/packages/85/c6/87fbdbb381fc8ef668bc3cb30ec6224842eff9e2a6c84d17de40333d599c/laim-0.6.1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "206e8cfa17d3f23895eb5b5883fd8ccf", "sha256": "400979f162a7021c1ce85e5b80ea4fe8f4c2dae741290db9d5ffc7abcf1cf34e"}, "downloads": -1, "filename": "laim-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "206e8cfa17d3f23895eb5b5883fd8ccf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17238, "upload_time": "2020-01-07T14:24:15", "upload_time_iso_8601": "2020-01-07T14:24:15.390787Z", "url": "https://files.pythonhosted.org/packages/8e/e6/e0ed2ed67fd3bb9c2d5a521ed576f40ed64bf8a7966ce9d8cbae5ddb8518/laim-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a8051e53b492968cb76fea8f30e8cbe", "sha256": "2eea5414006c1cb16d6dff61a668d79c77c128ebb916e95b0d1654566d043310"}, "downloads": -1, "filename": "laim-0.7.0.tar.gz", "has_sig": false, "md5_digest": "9a8051e53b492968cb76fea8f30e8cbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13388, "upload_time": "2020-01-07T14:24:16", "upload_time_iso_8601": "2020-01-07T14:24:16.882086Z", "url": "https://files.pythonhosted.org/packages/b2/81/1f9f913d5e60a9d1e877951c1082e4d8db0260876fc947ec5f12acae1db3/laim-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "2788cba02f201ef25557e50b089b24bd", "sha256": "f887f05caa941b346d866dcd8c3ddf347781d5cb710f8b522768aeba4d56cd48"}, "downloads": -1, "filename": "laim-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2788cba02f201ef25557e50b089b24bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17237, "upload_time": "2020-02-05T18:41:00", "upload_time_iso_8601": "2020-02-05T18:41:00.109498Z", "url": "https://files.pythonhosted.org/packages/51/d1/44237ad6d8a636f8ec6764631645af54b65aef114940813acf5723f389a7/laim-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f27173a5b8a6dd56a93098cba82a56fd", "sha256": "574ac417c3f777f9abd95f08d4e60fcfddeec4ac9c23473e8b3bce1adeaa8775"}, "downloads": -1, "filename": "laim-0.7.1.tar.gz", "has_sig": false, "md5_digest": "f27173a5b8a6dd56a93098cba82a56fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13392, "upload_time": "2020-02-05T18:41:02", "upload_time_iso_8601": "2020-02-05T18:41:02.010433Z", "url": "https://files.pythonhosted.org/packages/8e/ba/401208b263628772979077faf4104adca6083aa2d40a56522537502bbb29/laim-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2788cba02f201ef25557e50b089b24bd", "sha256": "f887f05caa941b346d866dcd8c3ddf347781d5cb710f8b522768aeba4d56cd48"}, "downloads": -1, "filename": "laim-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2788cba02f201ef25557e50b089b24bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17237, "upload_time": "2020-02-05T18:41:00", "upload_time_iso_8601": "2020-02-05T18:41:00.109498Z", "url": "https://files.pythonhosted.org/packages/51/d1/44237ad6d8a636f8ec6764631645af54b65aef114940813acf5723f389a7/laim-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f27173a5b8a6dd56a93098cba82a56fd", "sha256": "574ac417c3f777f9abd95f08d4e60fcfddeec4ac9c23473e8b3bce1adeaa8775"}, "downloads": -1, "filename": "laim-0.7.1.tar.gz", "has_sig": false, "md5_digest": "f27173a5b8a6dd56a93098cba82a56fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13392, "upload_time": "2020-02-05T18:41:02", "upload_time_iso_8601": "2020-02-05T18:41:02.010433Z", "url": "https://files.pythonhosted.org/packages/8e/ba/401208b263628772979077faf4104adca6083aa2d40a56522537502bbb29/laim-0.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:15 2020"}