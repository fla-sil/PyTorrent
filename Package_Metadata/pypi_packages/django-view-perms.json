{"info": {"author": "Ali Zaade", "author_email": "zaadeh.ali@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development"], "description": "Automatically create and check dedicated permissions for all Django views\n\nThis Django app can create a dedicated permission for any or all\nviews in a given app, manage their lifecycle (exclude some views,\nremove them all or remove the ones that no longer have an associated\nview) and also enforce the created permissions for the logged-in\nuser. Users will only be able to process the views that they have\nbeen explicitly given the related permission to.\n\nAfter adding ``view_perms`` to the ``INSTALLED_APPS`` list, use the\n``create_view_perms`` Django management command to create all target\npermissions automatically. Permissions need to be created before\nbeing enforced. See the command help message for details about\nsupported options.\n\nTo automatically enforce the created view permissions, add\n``view_perms.middleware.check_view_perms.ViewPermissionMiddleware``\nto the ``MIDDLEWARE`` list in Django settings. Make sure to put this\nmiddleware after ``django.contrib.auth.middleware.AuthenticationMiddleware``.\n\nIt is possible to put some views in an ignore list, which results in them\nnot having the permission created or enforced. This makes sense for parts of\nthe application like authentication views (user needs *some* way to\nauthenticate, after all), or for public-facing parts of the application.\nTo do so add the fully qualified view name in ``VIEW_PERMS_IGNORE_LIST``\nlist in the Django settings module. This app enforces the views\non a per-app basis and does not enforce view permissions for views\nthat do not have a permission to their name (it's permissive by\ndefault). So it's possible to have apps that none of their views are\npermission enforced.\n\nNames of permissions that this app created (ones which are displayed\nin Django admin interface) are composed of a fixed prefix (``view_perm_``)\nand the fully qualified view name (module name + ``.`` + view function or\nclass name). If these names are too cryptic for users of the admin\ninterface or you want them to be in a local language, it has been made\npossible for the programmer to provide a translation for this string by\nassigning the proper ``gettext`` translation to the ``__name_trans__``\nattribute of the view function or class.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/zaade/django-view-perms", "keywords": "permission,authentication,django,views", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "django-view-perms", "package_url": "https://pypi.org/project/django-view-perms/", "platform": "any", "project_url": "https://pypi.org/project/django-view-perms/", "project_urls": {"Homepage": "https://gitlab.com/zaade/django-view-perms"}, "release_url": "https://pypi.org/project/django-view-perms/0.1.3/", "requires_dist": null, "requires_python": ">=2.7", "summary": "Django per-view permission checker", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Automatically create and check dedicated permissions for all Django views</p>\n<p>This Django app can create a dedicated permission for any or all\nviews in a given app, manage their lifecycle (exclude some views,\nremove them all or remove the ones that no longer have an associated\nview) and also enforce the created permissions for the logged-in\nuser. Users will only be able to process the views that they have\nbeen explicitly given the related permission to.</p>\n<p>After adding <tt>view_perms</tt> to the <tt>INSTALLED_APPS</tt> list, use the\n<tt>create_view_perms</tt> Django management command to create all target\npermissions automatically. Permissions need to be created before\nbeing enforced. See the command help message for details about\nsupported options.</p>\n<p>To automatically enforce the created view permissions, add\n<tt>view_perms.middleware.check_view_perms.ViewPermissionMiddleware</tt>\nto the <tt>MIDDLEWARE</tt> list in Django settings. Make sure to put this\nmiddleware after <tt>django.contrib.auth.middleware.AuthenticationMiddleware</tt>.</p>\n<p>It is possible to put some views in an ignore list, which results in them\nnot having the permission created or enforced. This makes sense for parts of\nthe application like authentication views (user needs <em>some</em> way to\nauthenticate, after all), or for public-facing parts of the application.\nTo do so add the fully qualified view name in <tt>VIEW_PERMS_IGNORE_LIST</tt>\nlist in the Django settings module. This app enforces the views\non a per-app basis and does not enforce view permissions for views\nthat do not have a permission to their name (it\u2019s permissive by\ndefault). So it\u2019s possible to have apps that none of their views are\npermission enforced.</p>\n<p>Names of permissions that this app created (ones which are displayed\nin Django admin interface) are composed of a fixed prefix (<tt>view_perm_</tt>)\nand the fully qualified view name (module name + <tt>.</tt> + view function or\nclass name). If these names are too cryptic for users of the admin\ninterface or you want them to be in a local language, it has been made\npossible for the programmer to provide a translation for this string by\nassigning the proper <tt>gettext</tt> translation to the <tt>__name_trans__</tt>\nattribute of the view function or class.</p>\n\n          </div>"}, "last_serial": 6408751, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fd5f67b941988730dae83bcc06900225", "sha256": "80d218496cd15be1a830aa1680e37b942984ae787d384c53e6814efe5302e8d9"}, "downloads": -1, "filename": "django-view-perms-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fd5f67b941988730dae83bcc06900225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4162, "upload_time": "2019-12-04T11:14:25", "upload_time_iso_8601": "2019-12-04T11:14:25.254693Z", "url": "https://files.pythonhosted.org/packages/35/24/772dc4538cc38bae383c5f5842ec4b3d8374a577dccf6da01c4469a81f25/django-view-perms-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7d698748af8f76b4ccca1c59b6c134e6", "sha256": "2a781bea880762e9c9cf28bf6978e6e710b57d6f1761f8e54303aa0c2d416238"}, "downloads": -1, "filename": "django-view-perms-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7d698748af8f76b4ccca1c59b6c134e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4175, "upload_time": "2019-12-04T12:34:19", "upload_time_iso_8601": "2019-12-04T12:34:19.056996Z", "url": "https://files.pythonhosted.org/packages/4b/70/09acfe600b42b822a5ae226c05f1852e9a2aa7e65214c5a201bd215ab9d5/django-view-perms-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ebc297c2233e94ed537937b06c3bac74", "sha256": "aac4b05658f0879e5e4bae7f090cdf4383e5cd63574fdd93b42783a52ec4e208"}, "downloads": -1, "filename": "django-view-perms-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ebc297c2233e94ed537937b06c3bac74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4177, "upload_time": "2019-12-04T12:38:14", "upload_time_iso_8601": "2019-12-04T12:38:14.202089Z", "url": "https://files.pythonhosted.org/packages/6f/44/9296589c6ea3954fea45bea4ad9b69b7f3e2c78f4d3caaca4f59dff706fd/django-view-perms-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "80dfc568415167d3258f9b9281642c01", "sha256": "c3e7f8adcdeb658cf20d609089eff3e62019152cc5fb803dda541e0507a4173e"}, "downloads": -1, "filename": "django-view-perms-0.1.3.tar.gz", "has_sig": false, "md5_digest": "80dfc568415167d3258f9b9281642c01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 4248, "upload_time": "2020-01-07T14:13:05", "upload_time_iso_8601": "2020-01-07T14:13:05.186662Z", "url": "https://files.pythonhosted.org/packages/01/81/b15dd0ed106c3a40f3d0d5103446ec05cff47017976b5fca598c19c11898/django-view-perms-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "80dfc568415167d3258f9b9281642c01", "sha256": "c3e7f8adcdeb658cf20d609089eff3e62019152cc5fb803dda541e0507a4173e"}, "downloads": -1, "filename": "django-view-perms-0.1.3.tar.gz", "has_sig": false, "md5_digest": "80dfc568415167d3258f9b9281642c01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 4248, "upload_time": "2020-01-07T14:13:05", "upload_time_iso_8601": "2020-01-07T14:13:05.186662Z", "url": "https://files.pythonhosted.org/packages/01/81/b15dd0ed106c3a40f3d0d5103446ec05cff47017976b5fca598c19c11898/django-view-perms-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:01 2020"}