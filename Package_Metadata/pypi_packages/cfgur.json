{"info": {"author": "Bray Almini", "author_email": "bray@coreforge.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.0"], "description": "# cfgur (configure)\n\n_Load environment vars, and command line arguments in a predictable, standardized way._\n\nThis package wraps argparse, loading config from environment variables as well as the usual command line arguments / flags. A config object is passed into init(), configuring argparse. The environment variables are implied from the arg name (stripped, uppercased and underscored), but can be manually defined using the key \"env_var\" in args config. Once args are loaded, config is accessable using a getter function \"get()\". To get all variables, use get_all(). The args object keys are passed to parser.add_argument().\n\n### Installation\n\nThe cfgur package is available on PyPI which means installation should be as simple as:\n\n```\n$ pip install cfgur\n```\n\n### Usage\n\n```python\nimport cfgur\n\n# Initialize once, pass in config\ncfgur.init({\n    \"parser\": {\n        \"description\": \"this is the service description\"\n    },\n    \"args\": [\n        {\n            \"name\": \"-test\",\n            \"help\": \"Description of test\",\n            \"default\": \"test-db\",\n            \"required\": False,\n        }, {\n            \"name\": \"--foo\",\n            \"required\": True,\n        }, {\n            \"name\": \"-f\",\n            \"required\": False,\n            \"env_var\": \"LETTER_F\",\n        }\n    ]\n})\n\n# Return value of config. If missing, return None\nmy_config = cfgur.get_all()\n\n# Return value of config. If missing, return None\ntest_val = cfgur.get(\"test\")\n\n# Return value of config. If missing, raise KeyError\ntest_val = cfgur.get(\"test\", True)\n```\n\n\n### License\nThis software is licensed under the MIT license.\n\n\u00a9 2018 Bray Almini.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Brayyy/cfgur-py/tarball/0.1.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Brayyy/cfgur-py", "keywords": "environment,arguments,env,args", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cfgur", "package_url": "https://pypi.org/project/cfgur/", "platform": "", "project_url": "https://pypi.org/project/cfgur/", "project_urls": {"Download": "https://github.com/Brayyy/cfgur-py/tarball/0.1.3", "Homepage": "https://github.com/Brayyy/cfgur-py"}, "release_url": "https://pypi.org/project/cfgur/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Load environment vars, and command line arguments in a predictable, standardized way", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cfgur (configure)</h1>\n<p><em>Load environment vars, and command line arguments in a predictable, standardized way.</em></p>\n<p>This package wraps argparse, loading config from environment variables as well as the usual command line arguments / flags. A config object is passed into init(), configuring argparse. The environment variables are implied from the arg name (stripped, uppercased and underscored), but can be manually defined using the key \"env_var\" in args config. Once args are loaded, config is accessable using a getter function \"get()\". To get all variables, use get_all(). The args object keys are passed to parser.add_argument().</p>\n<h3>Installation</h3>\n<p>The cfgur package is available on PyPI which means installation should be as simple as:</p>\n<pre><code>$ pip install cfgur\n</code></pre>\n<h3>Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cfgur</span>\n\n<span class=\"c1\"># Initialize once, pass in config</span>\n<span class=\"n\">cfgur</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"parser\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"this is the service description\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"-test\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"help\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Description of test\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test-db\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"required\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"--foo\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"required\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"-f\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"required\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"env_var\"</span><span class=\"p\">:</span> <span class=\"s2\">\"LETTER_F\"</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\"># Return value of config. If missing, return None</span>\n<span class=\"n\">my_config</span> <span class=\"o\">=</span> <span class=\"n\">cfgur</span><span class=\"o\">.</span><span class=\"n\">get_all</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Return value of config. If missing, return None</span>\n<span class=\"n\">test_val</span> <span class=\"o\">=</span> <span class=\"n\">cfgur</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Return value of config. If missing, raise KeyError</span>\n<span class=\"n\">test_val</span> <span class=\"o\">=</span> <span class=\"n\">cfgur</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h3>License</h3>\n<p>This software is licensed under the MIT license.</p>\n<p>\u00a9 2018 Bray Almini.</p>\n\n          </div>"}, "last_serial": 3901005, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "1137c78d7b3c33f0a6d8815230b49846", "sha256": "a7a1cb336981c965ad2d6ac682a29c8dc93c9563640b356dde1d293bf38dfd37"}, "downloads": -1, "filename": "cfgur-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1137c78d7b3c33f0a6d8815230b49846", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2433, "upload_time": "2018-05-26T05:11:47", "upload_time_iso_8601": "2018-05-26T05:11:47.052383Z", "url": "https://files.pythonhosted.org/packages/22/61/12939dfebf21fdfaf8aee302fe0ae98d7bbebfe4611900c8a723b7250565/cfgur-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "eb0f25668cba116071e4b3b36edde611", "sha256": "fff7c9877d8c9a24c67a554539740f5057c61351098b0863c16266a4b1d419f6"}, "downloads": -1, "filename": "cfgur-0.1.2.tar.gz", "has_sig": false, "md5_digest": "eb0f25668cba116071e4b3b36edde611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2409, "upload_time": "2018-05-26T05:51:45", "upload_time_iso_8601": "2018-05-26T05:51:45.390958Z", "url": "https://files.pythonhosted.org/packages/2a/41/15a1ac642f51c8d440348045cd77ddf313464e6ca6a0fabf9bb15501d576/cfgur-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "eadc5c0443ea3bd9232320f0574ec828", "sha256": "69b9af1a241ed471646589be825b4d3291a82529898eb157fe530ad4474957cc"}, "downloads": -1, "filename": "cfgur-0.1.3.tar.gz", "has_sig": false, "md5_digest": "eadc5c0443ea3bd9232320f0574ec828", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2848, "upload_time": "2018-05-26T08:50:32", "upload_time_iso_8601": "2018-05-26T08:50:32.950488Z", "url": "https://files.pythonhosted.org/packages/d1/37/6c900e2853451ffcdb2a255bdc24b83c259a0d08f0df7d6119dcfdcae76f/cfgur-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eadc5c0443ea3bd9232320f0574ec828", "sha256": "69b9af1a241ed471646589be825b4d3291a82529898eb157fe530ad4474957cc"}, "downloads": -1, "filename": "cfgur-0.1.3.tar.gz", "has_sig": false, "md5_digest": "eadc5c0443ea3bd9232320f0574ec828", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2848, "upload_time": "2018-05-26T08:50:32", "upload_time_iso_8601": "2018-05-26T08:50:32.950488Z", "url": "https://files.pythonhosted.org/packages/d1/37/6c900e2853451ffcdb2a255bdc24b83c259a0d08f0df7d6119dcfdcae76f/cfgur-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:39 2020"}