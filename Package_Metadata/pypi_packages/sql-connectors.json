{"info": {"author": "Diego Fernandez", "author_email": "aiguo.fernandez@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "==============\nSQL Connectors\n==============\n\n\n.. image:: https://img.shields.io/pypi/v/sql_connectors.svg\n        :target: https://pypi.python.org/pypi/sql_connectors\n\n.. image:: https://img.shields.io/travis/aiguofer/sql_connectors.svg\n        :target: https://travis-ci.org/aiguofer/sql_connectors\n\n.. image:: https://readthedocs.org/projects/sql-connectors/badge/?version=latest\n        :target: https://sql-connectors.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/aiguofer/sql_connectors/shield.svg\n     :target: https://pyup.io/repos/github/aiguofer/sql_connectors/\n     :alt: Updates\n\n\n\nA simple wrapper for SQL connections using SQLAlchemy and Pandas read_sql to standardize SQL workflow. The main goals of this project is to reduce boilerplate code when working with SQL based data sources and to enable interactive exploration of data sources in Python.\n\n\n* Free software: MIT license\n* Documentation: https://sql-connectors.readthedocs.io.\n* Repo: https://github.com/aiguofer/sql_connectors.\n\n\nFeatures\n--------\n\n* Standardized client for working with different SQL datasources, including a standardized format for defining your connection configurations\n* A SqlClient interface based off the SQLAlchemy ``Engine`` with some helpful functions like Pandas' ``read_sql`` and functions to leverage ``reflection`` from SQLAlchemy\n\nInstallation\n------------\n\nStable release\n~~~~~~~~~~~~~~\n\nTo install SQL Connectors, run this command in your terminal:\n\n.. code-block:: console\n\n    $ pip install --process-dependency-links sql_connectors\n\nThis is the preferred method to install SQL Connectors, as it will always install the most recent stable release.\n\nIf you don't have `pip`_ installed, this `Python installation guide`_ can guide\nyou through the process.\n\n.. _pip: https://pip.pypa.io\n.. _Python installation guide: http://docs.python-guide.org/en/latest/starting/installation/\n\n\nDev install\n~~~~~~~~~~~\n\nThe sources for SQL Connectors can be downloaded from the `Github repo`_.\n\nYou can clone the public repository and install in development mode:\n\n.. code-block:: console\n\n    $ git clone git://github.com/aiguofer/sql_connectors\n    $ cd sql_connectors\n    $ pip install --process-dependency-links -e .[dev]\n\n\nConfigurations\n--------------\n\nConfigurations can be stored wherever you want by implementing your own ``Storage``. However, the default is ``LocalStorage`` reading in configuration files from ``~/.config/sql_connectors``.\n\nYou can change the ``Storage`` class using the ``SQL_CONNECTORS_STORAGE`` environment variable (for example ``sql_connectors.storage.LocalStorage``), and you can specify a different configuration directory or URI with ``SQL_CONNECTORS_PATH_OR_URI``.\n\nThe ``example_connection.json`` file is provided as a template; feel free to replace this with your own connection details and re-name the file.\n\nThe contents of the example file are:\n\n.. code:: javascript\n\n   {\n       \"drivername\": \"sqlite\",\n       \"relative_paths\": [\"database\"],\n       \"default_env\": \"default\",\n       \"default\": {\n           \"database\": \"example_connection.db\"\n       }\n   }\n\nThe fields mean the following:\n\n   drivername (string)\n      This required field is a SQLAlchemy dialect or dialect+driver. See the `SQLAlchemy Engine documentation <http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls>`_ for more details. You may first have to install the required python modules for your dialect+driver to work if it's a third party plug-in.\n\n   relative_paths (list of strings)\n      This optional field lets you specify if an option for your connection needs to load a file relative to your config directory. For example, if you had a connection that needed to use a cert, you could add ``query.sslrootcert`` to this list, set ``\"query\": { \"sslmode\": \"verify-ca\", \"sslrootcert\": \"certs/root.crt\"}``, and drop the cert in ``$SQL_CONNECTORS_CONFIG_DIR/certs/root.crt``.\n\n   default_env (string)\n      This optional field lets you specify which environment should be used by default. If not included, it will use ``default``.\n\n   default_schema (string)\n      This optional field lets you specify which schema should be used by default. If not included, it will use ``None``.\n\n   default_reflect (boolean)\n      This optional field lets you specify whether it should reflect the data source by default. If not included, it will use ``False``.\n\n   env.username (string)\n      This optional field specifies the username for the connection. If it's left out or set to null and the driver is not 'sqlite', the user will be prompte when they try to create the client. If the connection doesn't have credentials, set this to an empty string. Should not be set for 'sqlite'.\n\n   env.password (string)\n      This optional field specifies the password for the connection. If it's left out or set to null and the driver is not 'sqlite', the user will be prompte when they try to create the client. If the connection doesn't have credentials, set this to an empty string. Should not be set for 'sqlite'.\n\n   env.host (string)\n      This optional field specifies the host for the connection. Should not be set for 'sqlite'.\n\n   env.port (string or integer)\n      This optional field specifies the port for the connection. Should not be set for 'sqlite'.\n\n   env.database (string)\n      This optional field specifies the database name for the connection. If it's a 'sqlite' connection and left empty, it will use ``:memory:``. Otherwise, you can specify a relative path or an absolute path; if you want the file in your config directory, you can use the ``relative_paths`` property.\n\n   env.query (object)\n      This optional field is a json object with options to pass onto the dialect and/or DBAPI upon connect.\n\n   env.allowed_hosts (list of strings)\n      This optional field is a list of strings containing hostnames where the given credentials are accepted. If the hostname is not in the list, it will prompt the user for credentials. This was added due to some specific usecase where we share service credentials but they're only allowed on our common servers.\n\nHow-To\n------\n\nThe module will check your available connection configurations and create variables within the top level module for each of them. It will create 2 variables for each config, ``connection_name`` and ``connection_name_envs``; these are both functions, the first will return a ``get_client`` function with some defaults set based on the config, and the second will return a ``get_available_envs`` function that when called returns available environments for the given data source. When ``reflection`` is enabled, the client will hold metadata about the available tables.\n\nHere's a basic usage example assuming the example config file exists:\n\n.. code:: python\n\n   from sql_connectors import connections\n   client = connections.example_connection()\n   client.read_sql('select 1')\n\n\nHere's a more complex example that's pretty redundant but shows more functionality\n\n.. code:: python\n\n   from sql_connectors import connections\n\n   available_envs = connections.example_connection_envs()\n   client = connections.example_connection(env=available_envs[0], reflect=True)\n\n   client.read_sql('select 1').to_sql('example_table', client, if_exists='replace')\n   available_tables = client.table_names()\n   table1 = client.get_table(available_tables[0])\n   df = client.read_sql(table1.select())\n\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _Github repo: https://github.com/aiguofer/sql_connectors\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aiguofer/sql_connectors", "keywords": "sql_connectors", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "sql-connectors", "package_url": "https://pypi.org/project/sql-connectors/", "platform": "", "project_url": "https://pypi.org/project/sql-connectors/", "project_urls": {"Homepage": "https://github.com/aiguofer/sql_connectors"}, "release_url": "https://pypi.org/project/sql-connectors/1.0.2/", "requires_dist": ["decorator", "future", "memoized", "pandas", "SQLAlchemy", "traitlets", "pip (>=9.0.1) ; extra == 'dev'", "bumpversion (>=0.5.3) ; extra == 'dev'", "wheel (>=0.30.0) ; extra == 'dev'", "watchdog (>=0.8.3) ; extra == 'dev'", "flake8 (>=3.5.0) ; extra == 'dev'", "tox (>=2.9.1) ; extra == 'dev'", "coverage (>=4.5.1) ; extra == 'dev'", "Sphinx (>=1.7.1) ; extra == 'dev'", "twine (>=1.10.0) ; extra == 'dev'", "pytest ; extra == 'dev'"], "requires_python": "", "summary": "A simple wrapper for SQL connections using SQLAlchemy and Pandas read_sql to standardize SQL workflow.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/sql_connectors\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/sql_connectors.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/075caafe4c44779e4506bb66376e681bd2cc6e9c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73716c5f636f6e6e6563746f72732e737667\"></a>\n<a href=\"https://travis-ci.org/aiguofer/sql_connectors\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/aiguofer/sql_connectors.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/603f03e763f6900b552392d5db1097b943cab5fc/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f616967756f6665722f73716c5f636f6e6e6563746f72732e737667\"></a>\n<a href=\"https://sql-connectors.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9cdc9ad97c18f9680d1badd1af6b05f91f637be/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73716c2d636f6e6e6563746f72732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pyup.io/repos/github/aiguofer/sql_connectors/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/203ff2e8aac4597b5408e7b1598d9125dd317882/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f616967756f6665722f73716c5f636f6e6e6563746f72732f736869656c642e737667\"></a>\n<p>A simple wrapper for SQL connections using SQLAlchemy and Pandas read_sql to standardize SQL workflow. The main goals of this project is to reduce boilerplate code when working with SQL based data sources and to enable interactive exploration of data sources in Python.</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://sql-connectors.readthedocs.io\" rel=\"nofollow\">https://sql-connectors.readthedocs.io</a>.</li>\n<li>Repo: <a href=\"https://github.com/aiguofer/sql_connectors\" rel=\"nofollow\">https://github.com/aiguofer/sql_connectors</a>.</li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Standardized client for working with different SQL datasources, including a standardized format for defining your connection configurations</li>\n<li>A SqlClient interface based off the SQLAlchemy <tt>Engine</tt> with some helpful functions like Pandas\u2019 <tt>read_sql</tt> and functions to leverage <tt>reflection</tt> from SQLAlchemy</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"stable-release\">\n<h3>Stable release</h3>\n<p>To install SQL Connectors, run this command in your terminal:</p>\n<pre><span class=\"gp\">$</span> pip install --process-dependency-links sql_connectors\n</pre>\n<p>This is the preferred method to install SQL Connectors, as it will always install the most recent stable release.</p>\n<p>If you don\u2019t have <a href=\"https://pip.pypa.io\" rel=\"nofollow\">pip</a> installed, this <a href=\"http://docs.python-guide.org/en/latest/starting/installation/\" rel=\"nofollow\">Python installation guide</a> can guide\nyou through the process.</p>\n</div>\n<div id=\"dev-install\">\n<h3>Dev install</h3>\n<p>The sources for SQL Connectors can be downloaded from the <a href=\"https://github.com/aiguofer/sql_connectors\" rel=\"nofollow\">Github repo</a>.</p>\n<p>You can clone the public repository and install in development mode:</p>\n<pre><span class=\"gp\">$</span> git clone git://github.com/aiguofer/sql_connectors\n<span class=\"gp\">$</span> <span class=\"nb\">cd</span> sql_connectors\n<span class=\"gp\">$</span> pip install --process-dependency-links -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n</div>\n</div>\n<div id=\"configurations\">\n<h2>Configurations</h2>\n<p>Configurations can be stored wherever you want by implementing your own <tt>Storage</tt>. However, the default is <tt>LocalStorage</tt> reading in configuration files from <tt><span class=\"pre\">~/.config/sql_connectors</span></tt>.</p>\n<p>You can change the <tt>Storage</tt> class using the <tt>SQL_CONNECTORS_STORAGE</tt> environment variable (for example <tt>sql_connectors.storage.LocalStorage</tt>), and you can specify a different configuration directory or URI with <tt>SQL_CONNECTORS_PATH_OR_URI</tt>.</p>\n<p>The <tt>example_connection.json</tt> file is provided as a template; feel free to replace this with your own connection details and re-name the file.</p>\n<p>The contents of the example file are:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"drivername\"</span><span class=\"o\">:</span> <span class=\"s2\">\"sqlite\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"relative_paths\"</span><span class=\"o\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"database\"</span><span class=\"p\">],</span>\n    <span class=\"s2\">\"default_env\"</span><span class=\"o\">:</span> <span class=\"s2\">\"default\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"default\"</span><span class=\"o\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"database\"</span><span class=\"o\">:</span> <span class=\"s2\">\"example_connection.db\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The fields mean the following:</p>\n<blockquote>\n<dl>\n<dt>drivername (string)</dt>\n<dd>This required field is a SQLAlchemy dialect or dialect+driver. See the <a href=\"http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls\" rel=\"nofollow\">SQLAlchemy Engine documentation</a> for more details. You may first have to install the required python modules for your dialect+driver to work if it\u2019s a third party plug-in.</dd>\n<dt>relative_paths (list of strings)</dt>\n<dd>This optional field lets you specify if an option for your connection needs to load a file relative to your config directory. For example, if you had a connection that needed to use a cert, you could add <tt>query.sslrootcert</tt> to this list, set <tt>\"query\": { \"sslmode\": <span class=\"pre\">\"verify-ca\",</span> \"sslrootcert\": \"certs/root.crt\"}</tt>, and drop the cert in <tt>$SQL_CONNECTORS_CONFIG_DIR/certs/root.crt</tt>.</dd>\n<dt>default_env (string)</dt>\n<dd>This optional field lets you specify which environment should be used by default. If not included, it will use <tt>default</tt>.</dd>\n<dt>default_schema (string)</dt>\n<dd>This optional field lets you specify which schema should be used by default. If not included, it will use <tt>None</tt>.</dd>\n<dt>default_reflect (boolean)</dt>\n<dd>This optional field lets you specify whether it should reflect the data source by default. If not included, it will use <tt>False</tt>.</dd>\n<dt>env.username (string)</dt>\n<dd>This optional field specifies the username for the connection. If it\u2019s left out or set to null and the driver is not \u2018sqlite\u2019, the user will be prompte when they try to create the client. If the connection doesn\u2019t have credentials, set this to an empty string. Should not be set for \u2018sqlite\u2019.</dd>\n<dt>env.password (string)</dt>\n<dd>This optional field specifies the password for the connection. If it\u2019s left out or set to null and the driver is not \u2018sqlite\u2019, the user will be prompte when they try to create the client. If the connection doesn\u2019t have credentials, set this to an empty string. Should not be set for \u2018sqlite\u2019.</dd>\n<dt>env.host (string)</dt>\n<dd>This optional field specifies the host for the connection. Should not be set for \u2018sqlite\u2019.</dd>\n<dt>env.port (string or integer)</dt>\n<dd>This optional field specifies the port for the connection. Should not be set for \u2018sqlite\u2019.</dd>\n<dt>env.database (string)</dt>\n<dd>This optional field specifies the database name for the connection. If it\u2019s a \u2018sqlite\u2019 connection and left empty, it will use <tt>:memory:</tt>. Otherwise, you can specify a relative path or an absolute path; if you want the file in your config directory, you can use the <tt>relative_paths</tt> property.</dd>\n<dt>env.query (object)</dt>\n<dd>This optional field is a json object with options to pass onto the dialect and/or DBAPI upon connect.</dd>\n<dt>env.allowed_hosts (list of strings)</dt>\n<dd>This optional field is a list of strings containing hostnames where the given credentials are accepted. If the hostname is not in the list, it will prompt the user for credentials. This was added due to some specific usecase where we share service credentials but they\u2019re only allowed on our common servers.</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"how-to\">\n<h2>How-To</h2>\n<p>The module will check your available connection configurations and create variables within the top level module for each of them. It will create 2 variables for each config, <tt>connection_name</tt> and <tt>connection_name_envs</tt>; these are both functions, the first will return a <tt>get_client</tt> function with some defaults set based on the config, and the second will return a <tt>get_available_envs</tt> function that when called returns available environments for the given data source. When <tt>reflection</tt> is enabled, the client will hold metadata about the available tables.</p>\n<p>Here\u2019s a basic usage example assuming the example config file exists:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sql_connectors</span> <span class=\"kn\">import</span> <span class=\"n\">connections</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">example_connection</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">read_sql</span><span class=\"p\">(</span><span class=\"s1\">'select 1'</span><span class=\"p\">)</span>\n</pre>\n<p>Here\u2019s a more complex example that\u2019s pretty redundant but shows more functionality</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sql_connectors</span> <span class=\"kn\">import</span> <span class=\"n\">connections</span>\n\n<span class=\"n\">available_envs</span> <span class=\"o\">=</span> <span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">example_connection_envs</span><span class=\"p\">()</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">example_connection</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"o\">=</span><span class=\"n\">available_envs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">reflect</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">read_sql</span><span class=\"p\">(</span><span class=\"s1\">'select 1'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to_sql</span><span class=\"p\">(</span><span class=\"s1\">'example_table'</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">if_exists</span><span class=\"o\">=</span><span class=\"s1\">'replace'</span><span class=\"p\">)</span>\n<span class=\"n\">available_tables</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">table_names</span><span class=\"p\">()</span>\n<span class=\"n\">table1</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_table</span><span class=\"p\">(</span><span class=\"n\">available_tables</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">read_sql</span><span class=\"p\">(</span><span class=\"n\">table1</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n\n          </div>"}, "last_serial": 4701144, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "53a203bccdc5a5ea312d5f1da6b9ecbd", "sha256": "ba5560be98b0ff3a5c29f38965466b0fd7dc0348110717283cb1b7ed9d082e83"}, "downloads": -1, "filename": "sql_connectors-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "53a203bccdc5a5ea312d5f1da6b9ecbd", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 18871, "upload_time": "2018-03-22T04:06:17", "upload_time_iso_8601": "2018-03-22T04:06:17.292166Z", "url": "https://files.pythonhosted.org/packages/af/d5/e8bae421399a08aede85e3ddaa15b61632d0c546b53706094b58479ad43a/sql_connectors-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "64aca18ccca28ead21aedb85651b1097", "sha256": "13ada4b4bfaccc1ca8ff4a85aa2c95e513a2f2f8bf20c979e59730e3e4d76bd2"}, "downloads": -1, "filename": "sql_connectors-0.1.0-py3.6.egg", "has_sig": false, "md5_digest": "64aca18ccca28ead21aedb85651b1097", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 19207, "upload_time": "2018-03-22T04:06:20", "upload_time_iso_8601": "2018-03-22T04:06:20.735482Z", "url": "https://files.pythonhosted.org/packages/f7/67/c39623f5b9c6b09b3dc6dd4b8ac6eab75c70e7f5f31d730f9dc8866789c4/sql_connectors-0.1.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5bd62c925e8fcb03a1f069468f4780e", "sha256": "f2d63d51bb569957e1421e795966a204ae6af173bf8b990369361956258ef3f1"}, "downloads": -1, "filename": "sql_connectors-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c5bd62c925e8fcb03a1f069468f4780e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22878, "upload_time": "2018-03-22T04:06:14", "upload_time_iso_8601": "2018-03-22T04:06:14.376188Z", "url": "https://files.pythonhosted.org/packages/0b/ec/a8b7b3e89d8520d584baf48ba82329891533b7104f7d44ca7328b0527416/sql_connectors-0.1.0.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "85a2bee9019003a7777357b211c06131", "sha256": "8ba2d551d6f78bce2c211364d8e8b6b7f76dff782446180a53e2d5722f389183"}, "downloads": -1, "filename": "sql_connectors-0.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "85a2bee9019003a7777357b211c06131", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13235, "upload_time": "2018-03-22T05:46:40", "upload_time_iso_8601": "2018-03-22T05:46:40.944979Z", "url": "https://files.pythonhosted.org/packages/34/38/9d921f00f2169cead9cf448883f7e0c71964fd2ee7a87eaf4aa8240966c3/sql_connectors-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2621d54be2e92e2cd45754478da93575", "sha256": "aeb8bbb1b6f328116abc3120e426f88385ba60ab129d184e9548fb169004338b"}, "downloads": -1, "filename": "sql_connectors-0.3.3.tar.gz", "has_sig": false, "md5_digest": "2621d54be2e92e2cd45754478da93575", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15542, "upload_time": "2018-03-22T05:46:42", "upload_time_iso_8601": "2018-03-22T05:46:42.622417Z", "url": "https://files.pythonhosted.org/packages/5c/b5/8c33537df7500155a5191d2640539a1bcbe27eafb926055c2eb28c49f645/sql_connectors-0.3.3.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "edb55753e6e116908f350427c12339d4", "sha256": "a92b7c1eb89c0f022ad8ab20635dc15dbcc7f105022a880d5235ecccf3a98b22"}, "downloads": -1, "filename": "sql_connectors-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "edb55753e6e116908f350427c12339d4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13560, "upload_time": "2018-03-22T06:29:59", "upload_time_iso_8601": "2018-03-22T06:29:59.314434Z", "url": "https://files.pythonhosted.org/packages/0b/6c/531f448e4f78ca732ca41a2790025a50e92dfe5c02064aa602edea1c43aa/sql_connectors-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8e93e67b5a7eb91703f4e6ed30f3eb4", "sha256": "95e81ef518d75e0051c9367a967b80248d0a99b3ea4bfb2b7103a2c1c9354057"}, "downloads": -1, "filename": "sql_connectors-0.4.1.tar.gz", "has_sig": false, "md5_digest": "d8e93e67b5a7eb91703f4e6ed30f3eb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15779, "upload_time": "2018-03-22T06:30:00", "upload_time_iso_8601": "2018-03-22T06:30:00.696190Z", "url": "https://files.pythonhosted.org/packages/7c/63/4ff9097cd5980093f1eb0027cce0f7b6d11ab26b9d3c1726536eca47ed6e/sql_connectors-0.4.1.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "f09f70958c548e256ec2b886f4018a49", "sha256": "7fbcaaf4e86cda80a954bb1bf6812acbca6aa6fd9769511a54699a3d1c7b7c31"}, "downloads": -1, "filename": "sql_connectors-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f09f70958c548e256ec2b886f4018a49", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10450, "upload_time": "2018-04-09T11:24:02", "upload_time_iso_8601": "2018-04-09T11:24:02.121792Z", "url": "https://files.pythonhosted.org/packages/c8/d7/775ae92ac1f07eacbdab08da408abc0d371bded00bfe0cf43117aa8e3af7/sql_connectors-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bfbfeef9fa6bd99c9a70756f3bd2338", "sha256": "ff98cc71fcb0827c99eb67f6cb537de741564c5fe9730872fb422273e075ab24"}, "downloads": -1, "filename": "sql_connectors-0.4.3.tar.gz", "has_sig": false, "md5_digest": "5bfbfeef9fa6bd99c9a70756f3bd2338", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15955, "upload_time": "2018-04-09T11:24:03", "upload_time_iso_8601": "2018-04-09T11:24:03.091813Z", "url": "https://files.pythonhosted.org/packages/ee/01/b50087e497494aa08b46eb14f4f864d20ed84a6714018b61fbc21e3fd7bc/sql_connectors-0.4.3.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "9cc45f2c835b4deb6e542c2ae69c37b9", "sha256": "2c782442f71b391c92495a7eafd994272e9cc4358ce01062537580ca3df1edb5"}, "downloads": -1, "filename": "sql_connectors-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9cc45f2c835b4deb6e542c2ae69c37b9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10772, "upload_time": "2018-04-10T04:50:03", "upload_time_iso_8601": "2018-04-10T04:50:03.846776Z", "url": "https://files.pythonhosted.org/packages/f5/da/a25f9743e6e24d9900bbb377f8f41a044f37e1464bd41b2b2261db65af1e/sql_connectors-0.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "92abd632121a58aba1de6fc894e62aca", "sha256": "8bdb27c7f73df6e20e87517a32f1ef0ffa7db8818b3297791b860b3440b8f1c6"}, "downloads": -1, "filename": "sql_connectors-0.4.5.tar.gz", "has_sig": false, "md5_digest": "92abd632121a58aba1de6fc894e62aca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16305, "upload_time": "2018-04-10T04:50:04", "upload_time_iso_8601": "2018-04-10T04:50:04.787930Z", "url": "https://files.pythonhosted.org/packages/9b/73/ec483fdf1fe14a78f4ca4d9cff8c949f14d365ce737466ed9a3eaf576f68/sql_connectors-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "f232c67b070f741599c0494d66b3f6a1", "sha256": "97543ada7def45530171cb6635a8c9dffe20d5ba9994e99cb16c9e5ca49eed57"}, "downloads": -1, "filename": "sql_connectors-0.4.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f232c67b070f741599c0494d66b3f6a1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10822, "upload_time": "2018-06-01T17:18:19", "upload_time_iso_8601": "2018-06-01T17:18:19.888135Z", "url": "https://files.pythonhosted.org/packages/80/9e/5d5c915b4491acbaa2ac115e0e25904ce2e3f7fc9fc098131317ef062bc6/sql_connectors-0.4.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e99093fbb72b17a87b5867958431135a", "sha256": "97d7b4cb87f1fc7af45d5a32e6731cc143c4d8df4d20dba092864a030adee537"}, "downloads": -1, "filename": "sql_connectors-0.4.6.tar.gz", "has_sig": false, "md5_digest": "e99093fbb72b17a87b5867958431135a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16354, "upload_time": "2018-06-01T17:18:20", "upload_time_iso_8601": "2018-06-01T17:18:20.673835Z", "url": "https://files.pythonhosted.org/packages/c0/26/cb52c2773da8eeb5464336b9a894c4b4115a95a70b0b9aff980609791860/sql_connectors-0.4.6.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "f9da229a4809147f4f74c83346b5ce45", "sha256": "caef8c17eae74b22fa6d95aa5812d9e20ace0912d10bdf464ca57fc8fb4d60b1"}, "downloads": -1, "filename": "sql_connectors-0.4.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f9da229a4809147f4f74c83346b5ce45", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10517, "upload_time": "2018-06-01T17:36:57", "upload_time_iso_8601": "2018-06-01T17:36:57.575942Z", "url": "https://files.pythonhosted.org/packages/0b/2e/31b6d71161469f8721eb4daddf9874d689c4fc982f9c30f5f7e52977cd9f/sql_connectors-0.4.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4648b6b46c3f1cf474a7393071c92e8", "sha256": "9ee6bcf02ff23e43264891f0fd005f54b781d2ea71bf2941874ee9f8cbcd8f18"}, "downloads": -1, "filename": "sql_connectors-0.4.8.tar.gz", "has_sig": false, "md5_digest": "d4648b6b46c3f1cf474a7393071c92e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16439, "upload_time": "2018-06-01T17:36:58", "upload_time_iso_8601": "2018-06-01T17:36:58.686025Z", "url": "https://files.pythonhosted.org/packages/54/bf/29cc8aee869e8b2323900bee08d73695b1614b701b7919444c184d141fd8/sql_connectors-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "cd58e11a6f29221ff17f485e98563e85", "sha256": "7cfb4efaab26b6cea07c0fae6e2c04e46db30a2c2a7d7515652ccbeb98aef873"}, "downloads": -1, "filename": "sql_connectors-0.4.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd58e11a6f29221ff17f485e98563e85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10542, "upload_time": "2018-06-23T15:20:47", "upload_time_iso_8601": "2018-06-23T15:20:47.145038Z", "url": "https://files.pythonhosted.org/packages/46/79/df918e32b105d517fb13638cac004c9339934ecd5c04cc1d1abc825bb9d2/sql_connectors-0.4.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59412416417f4110df608dadb1da65c7", "sha256": "b66b3ff6ac8af69574315333744e0276fa0bf737e663ef4d4d5659d204f80eb6"}, "downloads": -1, "filename": "sql_connectors-0.4.9.tar.gz", "has_sig": false, "md5_digest": "59412416417f4110df608dadb1da65c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16465, "upload_time": "2018-06-23T15:20:48", "upload_time_iso_8601": "2018-06-23T15:20:48.283007Z", "url": "https://files.pythonhosted.org/packages/92/78/bdfc6e9be2bc26e9ccfa292e9236917ef5d5d2869dd952b827eae11056bb/sql_connectors-0.4.9.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "f353ed7ab5eadff38413d1d0cabbabad", "sha256": "daa7beec890caad41f040ab9015c3e20698b295ce5805dbcfca5af0b855db163"}, "downloads": -1, "filename": "sql_connectors-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f353ed7ab5eadff38413d1d0cabbabad", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15999, "upload_time": "2019-01-14T17:18:23", "upload_time_iso_8601": "2019-01-14T17:18:23.147694Z", "url": "https://files.pythonhosted.org/packages/2c/26/f65e91a164cc21c0f65cbac1c3469f4729742dbe4c21982b42d5a80bea06/sql_connectors-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0ec221666159fbbdb48eb00249f846f", "sha256": "aa3271f1b83678da8ec1ac47a4d0b1ee572106f54778fcdde1eff838c399a41a"}, "downloads": -1, "filename": "sql_connectors-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c0ec221666159fbbdb48eb00249f846f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25370, "upload_time": "2019-01-14T17:18:24", "upload_time_iso_8601": "2019-01-14T17:18:24.931185Z", "url": "https://files.pythonhosted.org/packages/4f/17/022813a18b9ca174413ff94ecf421ce868760a82d138df1ac59fb6a1d86d/sql_connectors-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "8b64e3b2b838bb8574dd086787791547", "sha256": "63df7a6bf42096c3075b2a7d7986ba8a64a14522e460cff53adc138d4d09dd93"}, "downloads": -1, "filename": "sql_connectors-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b64e3b2b838bb8574dd086787791547", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13092, "upload_time": "2019-01-14T17:42:25", "upload_time_iso_8601": "2019-01-14T17:42:25.104410Z", "url": "https://files.pythonhosted.org/packages/48/44/4f463dfcfca56e3c70828e19687d34a4384d206b64cda160f576312770b0/sql_connectors-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c664dfa75aba0fb51b5e4c640235a29", "sha256": "559573f2e461a689da9c6a82fafcc475f05faa6a49ae9b597ab4944a8454e539"}, "downloads": -1, "filename": "sql_connectors-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5c664dfa75aba0fb51b5e4c640235a29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16773, "upload_time": "2019-01-14T17:42:26", "upload_time_iso_8601": "2019-01-14T17:42:26.251093Z", "url": "https://files.pythonhosted.org/packages/6b/69/4397609a267417c84d91ef043266e766a731363f07619a9ece17b073f62b/sql_connectors-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "13b010ce193ac9ff1675c03cf930d87a", "sha256": "96212aea5cbbac4d255e43b08dc1fbf8839e5729e5c4ad4c9d6e13eae30fc7af"}, "downloads": -1, "filename": "sql_connectors-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "13b010ce193ac9ff1675c03cf930d87a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13113, "upload_time": "2019-01-16T01:36:11", "upload_time_iso_8601": "2019-01-16T01:36:11.813253Z", "url": "https://files.pythonhosted.org/packages/42/50/be46e610096fe1006d49143dab0f5aeb9b57404ec40970bfe6c59ad558df/sql_connectors-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4e383b11151596222d5a74ada1aaef0", "sha256": "335df65e9b25572af18f9db2bacc4462af246f2140aedb5f5004d93fe56e8656"}, "downloads": -1, "filename": "sql_connectors-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a4e383b11151596222d5a74ada1aaef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16792, "upload_time": "2019-01-16T01:36:13", "upload_time_iso_8601": "2019-01-16T01:36:13.562937Z", "url": "https://files.pythonhosted.org/packages/70/5f/bc950f71eca889a3a9dc311c8941215cd58b385b373db8a440aaf9f14312/sql_connectors-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13b010ce193ac9ff1675c03cf930d87a", "sha256": "96212aea5cbbac4d255e43b08dc1fbf8839e5729e5c4ad4c9d6e13eae30fc7af"}, "downloads": -1, "filename": "sql_connectors-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "13b010ce193ac9ff1675c03cf930d87a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13113, "upload_time": "2019-01-16T01:36:11", "upload_time_iso_8601": "2019-01-16T01:36:11.813253Z", "url": "https://files.pythonhosted.org/packages/42/50/be46e610096fe1006d49143dab0f5aeb9b57404ec40970bfe6c59ad558df/sql_connectors-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4e383b11151596222d5a74ada1aaef0", "sha256": "335df65e9b25572af18f9db2bacc4462af246f2140aedb5f5004d93fe56e8656"}, "downloads": -1, "filename": "sql_connectors-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a4e383b11151596222d5a74ada1aaef0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16792, "upload_time": "2019-01-16T01:36:13", "upload_time_iso_8601": "2019-01-16T01:36:13.562937Z", "url": "https://files.pythonhosted.org/packages/70/5f/bc950f71eca889a3a9dc311c8941215cd58b385b373db8a440aaf9f14312/sql_connectors-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:47 2020"}