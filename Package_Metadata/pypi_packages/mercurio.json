{"info": {"author": "Pietro Giuffrida", "author_email": "pietro.giuffri@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Mercurio\n\nSend email with python, my way.\n\nMercurio is a simple class to send email with python, managing\nsmtp, attachments and mimetypes, multiple recipients,\nattachments with a specific content id (to html email templating)...\n\n## Installation\n\nInstallation is as easy as run:\n```pip install mercurio```\n\n## Usage\n\nTo initialize a mercurio instance simply call it with\ntypical smtp parameters. No connection will be opened\nat this stage, then you can initialize and reuse it\nduring the whole code.\n\n```python\nfrom mercurio import mercurio\n\nhg = mercurio(\n    host=\"smtp.test.com\",\n    port=25,\n    smtp_user=\"myuser\",\n    smtp_pwd=\"mypwd\"\n)\n```\n\nTo debug purposes, you can create the message and save it in a file\nwithout send it thgrougth smtp. You can open such file\nwith a normal email client.\n\n```python\nmessage = hg.make_message(\n    fromaddress=\"from@me.com\",\n    recipient=\"to@me.com\",\n    reply_to_address=\"reply@to.me\",\n    text=\"a long text, very long.\",\n    sbj=\"The subject, or the object?\",\n    attachments=[],\n    cid_attachments={}\n)\n\nwith open('test_email.eml', 'w') as o:\n    o.write(message.as_string())\n```\n\n\nSend a real message is easy: use\nan hg instance, and call\nsend method with its parameters. Note that you can\nsend multiple type of attachments (images, xlsx, json,\ntxt). Mercurio can choice the correct mime type.\nYou can also use attachment with a specific content\nid, that can be used in html email to include\nimages in the body of the message.\n\n```python\nhg.send(\n    fromaddress=\"from@me.com\",\n    recipients=[\"to@me.com\"],\n    reply_to_address=\"reply@to.me\",\n    text=\"a long text, very long.\",\n    sbj=\"The subject, or the object?\",\n    attachments=[],\n    cid_attachments={\"content_id_01\": \"mylogo.png\"}\n)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pietrogiuffrida/mercurio/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mercurio", "package_url": "https://pypi.org/project/mercurio/", "platform": "", "project_url": "https://pypi.org/project/mercurio/", "project_urls": {"Homepage": "https://github.com/pietrogiuffrida/mercurio/"}, "release_url": "https://pypi.org/project/mercurio/0.10.2/", "requires_dist": null, "requires_python": "", "summary": "Send email with python, my way", "version": "0.10.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Mercurio</h1>\n<p>Send email with python, my way.</p>\n<p>Mercurio is a simple class to send email with python, managing\nsmtp, attachments and mimetypes, multiple recipients,\nattachments with a specific content id (to html email templating)...</p>\n<h2>Installation</h2>\n<p>Installation is as easy as run:\n<code>pip install mercurio</code></p>\n<h2>Usage</h2>\n<p>To initialize a mercurio instance simply call it with\ntypical smtp parameters. No connection will be opened\nat this stage, then you can initialize and reuse it\nduring the whole code.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mercurio</span> <span class=\"kn\">import</span> <span class=\"n\">mercurio</span>\n\n<span class=\"n\">hg</span> <span class=\"o\">=</span> <span class=\"n\">mercurio</span><span class=\"p\">(</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"smtp.test.com\"</span><span class=\"p\">,</span>\n    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span>\n    <span class=\"n\">smtp_user</span><span class=\"o\">=</span><span class=\"s2\">\"myuser\"</span><span class=\"p\">,</span>\n    <span class=\"n\">smtp_pwd</span><span class=\"o\">=</span><span class=\"s2\">\"mypwd\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>To debug purposes, you can create the message and save it in a file\nwithout send it thgrougth smtp. You can open such file\nwith a normal email client.</p>\n<pre><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">hg</span><span class=\"o\">.</span><span class=\"n\">make_message</span><span class=\"p\">(</span>\n    <span class=\"n\">fromaddress</span><span class=\"o\">=</span><span class=\"s2\">\"from@me.com\"</span><span class=\"p\">,</span>\n    <span class=\"n\">recipient</span><span class=\"o\">=</span><span class=\"s2\">\"to@me.com\"</span><span class=\"p\">,</span>\n    <span class=\"n\">reply_to_address</span><span class=\"o\">=</span><span class=\"s2\">\"reply@to.me\"</span><span class=\"p\">,</span>\n    <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"a long text, very long.\"</span><span class=\"p\">,</span>\n    <span class=\"n\">sbj</span><span class=\"o\">=</span><span class=\"s2\">\"The subject, or the object?\"</span><span class=\"p\">,</span>\n    <span class=\"n\">attachments</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"n\">cid_attachments</span><span class=\"o\">=</span><span class=\"p\">{}</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test_email.eml'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">o</span><span class=\"p\">:</span>\n    <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">as_string</span><span class=\"p\">())</span>\n</pre>\n<p>Send a real message is easy: use\nan hg instance, and call\nsend method with its parameters. Note that you can\nsend multiple type of attachments (images, xlsx, json,\ntxt). Mercurio can choice the correct mime type.\nYou can also use attachment with a specific content\nid, that can be used in html email to include\nimages in the body of the message.</p>\n<pre><span class=\"n\">hg</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span>\n    <span class=\"n\">fromaddress</span><span class=\"o\">=</span><span class=\"s2\">\"from@me.com\"</span><span class=\"p\">,</span>\n    <span class=\"n\">recipients</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"to@me.com\"</span><span class=\"p\">],</span>\n    <span class=\"n\">reply_to_address</span><span class=\"o\">=</span><span class=\"s2\">\"reply@to.me\"</span><span class=\"p\">,</span>\n    <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"a long text, very long.\"</span><span class=\"p\">,</span>\n    <span class=\"n\">sbj</span><span class=\"o\">=</span><span class=\"s2\">\"The subject, or the object?\"</span><span class=\"p\">,</span>\n    <span class=\"n\">attachments</span><span class=\"o\">=</span><span class=\"p\">[],</span>\n    <span class=\"n\">cid_attachments</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"content_id_01\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mylogo.png\"</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5553358, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2525842394e2118b1f03440e50523df1", "sha256": "3365b1d6c27e5f74cd82c48099c4e55c256dcb4dbc9b560931b9d9f98e7096d7"}, "downloads": -1, "filename": "mercurio-0.1.tar.gz", "has_sig": false, "md5_digest": "2525842394e2118b1f03440e50523df1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4726, "upload_time": "2019-07-18T21:03:29", "upload_time_iso_8601": "2019-07-18T21:03:29.660422Z", "url": "https://files.pythonhosted.org/packages/e3/25/0958f4dd1688d7406920794bdc0a004e915daa096c1e0a67e8a08cb71ff0/mercurio-0.1.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "27b2f8c0a340b25560dd00aafdc9eaf9", "sha256": "ceebb2229e85df3d8b97fa9a3477c44fe651f377e97074eeca7829670c0831f3"}, "downloads": -1, "filename": "mercurio-0.10.1.tar.gz", "has_sig": false, "md5_digest": "27b2f8c0a340b25560dd00aafdc9eaf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5391, "upload_time": "2019-07-18T21:09:00", "upload_time_iso_8601": "2019-07-18T21:09:00.616292Z", "url": "https://files.pythonhosted.org/packages/56/ce/4984fe148ae488aa7fc1726deb7269ca273c776100d1e39f09316a010ce2/mercurio-0.10.1.tar.gz", "yanked": false}], "0.10.2": [{"comment_text": "", "digests": {"md5": "dcf60e71941ffd94797820aa7df88495", "sha256": "d20bcfdbac3a130f4381d9742589cd5881bfbbc8040b2d8838de969c7e10c4dc"}, "downloads": -1, "filename": "mercurio-0.10.2.tar.gz", "has_sig": false, "md5_digest": "dcf60e71941ffd94797820aa7df88495", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5440, "upload_time": "2019-07-18T21:14:56", "upload_time_iso_8601": "2019-07-18T21:14:56.459850Z", "url": "https://files.pythonhosted.org/packages/2f/a8/4fa4da1a435ed58f6ab9e91e61596390bed039ae6c54be4c25a744eed1b0/mercurio-0.10.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dcf60e71941ffd94797820aa7df88495", "sha256": "d20bcfdbac3a130f4381d9742589cd5881bfbbc8040b2d8838de969c7e10c4dc"}, "downloads": -1, "filename": "mercurio-0.10.2.tar.gz", "has_sig": false, "md5_digest": "dcf60e71941ffd94797820aa7df88495", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5440, "upload_time": "2019-07-18T21:14:56", "upload_time_iso_8601": "2019-07-18T21:14:56.459850Z", "url": "https://files.pythonhosted.org/packages/2f/a8/4fa4da1a435ed58f6ab9e91e61596390bed039ae6c54be4c25a744eed1b0/mercurio-0.10.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:10 2020"}