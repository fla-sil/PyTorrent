{"info": {"author": "Camptocamp, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": "================================\nStock Picking Purchase Propagate\n================================\n\n.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fstock--logistics--workflow-lightgray.png?logo=github\n    :target: https://github.com/OCA/stock-logistics-workflow/tree/12.0/stock_picking_purchase_propagate\n    :alt: OCA/stock-logistics-workflow\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/stock-logistics-workflow-12-0/stock-logistics-workflow-12-0-stock_picking_purchase_propagate\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png\n    :target: https://runbot.odoo-community.org/runbot/154/12.0\n    :alt: Try me on Runbot\n\n|badge1| |badge2| |badge3| |badge4| |badge5| \n\nThis module allows to propagate the procurement group and the quantity of the\npurchase order at its confirmation to the ensuing picking and stock moves and\ntheir destination moves and pickings.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nUsage\n=====\n\nThis module can help you if your warehouse uses two- or three- steps reception.\n\nIn such a case, odoo's scheduler will generate internal transfers pickings with\nthe procurement group defined on each orderpoint of the products in need.\n\nSo, if no procurement group is defined on the orderpoints, Odoo will generate\nonly one internal transfer picking for all the products having needs, even if\nsuppliers and delays could be totally different.\n\nIf the product is to be purchased, the scheduler will also generate a purchase\norder. However when confirming this purchase order, the generated receipt\npicking and its move will get the procurement group from the sale order, which\ndoesn't match the procurement group of the ensuing internal transfers, what\ncould be baffling for the stock operator who has to find the ensuing internal\ntransfer.\n\nMoreover, if the quantity is changed before confirming the purchase order, the\nreceipt picking will be generated with the PO's quantity, whereas the ensuing\nmoves and picking will still have the original quantity from the orderpoint.\nTherefore, if the quantity was reduced on the purchase order, the stock\noperator won't be able to close the move line in waiting state, although it's\nnot expected to receive more quantity until the next purchase order.\n\nInstead of provoking such headaches to stock operators, this module will\npropagate the procurement group and the quantity of the purchase order to the\nwhole chain of moves and reassign them to new pickings.\n\nThis allows to have a clear match through the procurement group between\npurchase order, receipts and internal transfers, and allows as well stock\noperators not to worry about missing quantities which weren't ordered in the\nfirst place.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/stock-logistics-workflow/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us smashing it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/stock-logistics-workflow/issues/new?body=module:%20stock_picking_purchase_propagate%0Aversion:%2012.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n~~~~~~~\n\n* Camptocamp\n\nContributors\n~~~~~~~~~~~~\n\n* Vincent Renaville <vincent.renaville@camptocamp.com>\n* Akim Juillerat <akim.juillerat@camptocamp.com>\n* Kitti Upariphutthiphong <kittiu@ecosoft.co.th>\n\nMaintainers\n~~~~~~~~~~~\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/stock-logistics-workflow <https://github.com/OCA/stock-logistics-workflow/tree/12.0/stock_picking_purchase_propagate>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/OCA/stock-logistics-workflow", "keywords": "", "license": "AGPL-3", "maintainer": "", "maintainer_email": "", "name": "odoo12-addon-stock-picking-purchase-propagate", "package_url": "https://pypi.org/project/odoo12-addon-stock-picking-purchase-propagate/", "platform": "", "project_url": "https://pypi.org/project/odoo12-addon-stock-picking-purchase-propagate/", "project_urls": {"Homepage": "https://github.com/OCA/stock-logistics-workflow"}, "release_url": "https://pypi.org/project/odoo12-addon-stock-picking-purchase-propagate/12.0.1.0.0.99.dev2/", "requires_dist": ["odoo12-addon-purchase-line-procurement-group", "odoo (<12.1dev,>=12.0a)"], "requires_python": ">=3.5", "summary": "Propagate procurement group and quantity from purchase order", "version": "12.0.1.0.0.99.dev2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://odoo-community.org/page/development-status\" rel=\"nofollow\"><img alt=\"Beta\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a04ae8da7552b164fe11128bde830ddc5ac5b64c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d617475726974792d426574612d79656c6c6f772e706e67\"></a> <a href=\"http://www.gnu.org/licenses/agpl-3.0-standalone.html\" rel=\"nofollow\"><img alt=\"License: AGPL-3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/423ee917e92d78d49de65390a067f99a5a9793e1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e63652d4147504c2d2d332d626c75652e706e67\"></a> <a href=\"https://github.com/OCA/stock-logistics-workflow/tree/12.0/stock_picking_purchase_propagate\" rel=\"nofollow\"><img alt=\"OCA/stock-logistics-workflow\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e623e31ed8a7a596dee86fde77c050ff7021dee0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622d4f434125324673746f636b2d2d6c6f676973746963732d2d776f726b666c6f772d6c69676874677261792e706e673f6c6f676f3d676974687562\"></a> <a href=\"https://translation.odoo-community.org/projects/stock-logistics-workflow-12-0/stock-logistics-workflow-12-0-stock_picking_purchase_propagate\" rel=\"nofollow\"><img alt=\"Translate me on Weblate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c635db5d64b125cbcaa3924ccc0bc5a537d514d5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7765626c6174652d5472616e736c6174652532306d652d4634374434322e706e67\"></a> <a href=\"https://runbot.odoo-community.org/runbot/154/12.0\" rel=\"nofollow\"><img alt=\"Try me on Runbot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2c838644982a81b103c63e731d11fb9d6e46a465/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72756e626f742d5472792532306d652d3837354137422e706e67\"></a></p>\n<p>This module allows to propagate the procurement group and the quantity of the\npurchase order at its confirmation to the ensuing picking and stock moves and\ntheir destination moves and pickings.</p>\n<p><strong>Table of contents</strong></p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#usage\" id=\"id1\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#bug-tracker\" id=\"id2\" rel=\"nofollow\">Bug Tracker</a></li>\n<li><a href=\"#credits\" id=\"id3\" rel=\"nofollow\">Credits</a><ul>\n<li><a href=\"#authors\" id=\"id4\" rel=\"nofollow\">Authors</a></li>\n<li><a href=\"#contributors\" id=\"id5\" rel=\"nofollow\">Contributors</a></li>\n<li><a href=\"#maintainers\" id=\"id6\" rel=\"nofollow\">Maintainers</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Usage</a></h2>\n<p>This module can help you if your warehouse uses two- or three- steps reception.</p>\n<p>In such a case, odoo\u2019s scheduler will generate internal transfers pickings with\nthe procurement group defined on each orderpoint of the products in need.</p>\n<p>So, if no procurement group is defined on the orderpoints, Odoo will generate\nonly one internal transfer picking for all the products having needs, even if\nsuppliers and delays could be totally different.</p>\n<p>If the product is to be purchased, the scheduler will also generate a purchase\norder. However when confirming this purchase order, the generated receipt\npicking and its move will get the procurement group from the sale order, which\ndoesn\u2019t match the procurement group of the ensuing internal transfers, what\ncould be baffling for the stock operator who has to find the ensuing internal\ntransfer.</p>\n<p>Moreover, if the quantity is changed before confirming the purchase order, the\nreceipt picking will be generated with the PO\u2019s quantity, whereas the ensuing\nmoves and picking will still have the original quantity from the orderpoint.\nTherefore, if the quantity was reduced on the purchase order, the stock\noperator won\u2019t be able to close the move line in waiting state, although it\u2019s\nnot expected to receive more quantity until the next purchase order.</p>\n<p>Instead of provoking such headaches to stock operators, this module will\npropagate the procurement group and the quantity of the purchase order to the\nwhole chain of moves and reassign them to new pickings.</p>\n<p>This allows to have a clear match through the procurement group between\npurchase order, receipts and internal transfers, and allows as well stock\noperators not to worry about missing quantities which weren\u2019t ordered in the\nfirst place.</p>\n</div>\n<div id=\"bug-tracker\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Bug Tracker</a></h2>\n<p>Bugs are tracked on <a href=\"https://github.com/OCA/stock-logistics-workflow/issues\" rel=\"nofollow\">GitHub Issues</a>.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us smashing it by providing a detailed and welcomed\n<a href=\"https://github.com/OCA/stock-logistics-workflow/issues/new?body=module:%20stock_picking_purchase_propagate%0Aversion:%2012.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**\" rel=\"nofollow\">feedback</a>.</p>\n<p>Do not contact contributors directly about support or help with technical issues.</p>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Credits</a></h2>\n<div id=\"authors\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Authors</a></h3>\n<ul>\n<li>Camptocamp</li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Contributors</a></h3>\n<ul>\n<li>Vincent Renaville &lt;<a href=\"mailto:vincent.renaville%40camptocamp.com\">vincent<span>.</span>renaville<span>@</span>camptocamp<span>.</span>com</a>&gt;</li>\n<li>Akim Juillerat &lt;<a href=\"mailto:akim.juillerat%40camptocamp.com\">akim<span>.</span>juillerat<span>@</span>camptocamp<span>.</span>com</a>&gt;</li>\n<li>Kitti Upariphutthiphong &lt;<a href=\"mailto:kittiu%40ecosoft.co.th\">kittiu<span>@</span>ecosoft<span>.</span>co<span>.</span>th</a>&gt;</li>\n</ul>\n</div>\n<div id=\"maintainers\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Maintainers</a></h3>\n<p>This module is maintained by the OCA.</p>\n<a href=\"https://odoo-community.org\" rel=\"nofollow\"><img alt=\"Odoo Community Association\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fead5bf585dfb174a18c49640c17a861db11f5e2/68747470733a2f2f6f646f6f2d636f6d6d756e6974792e6f72672f6c6f676f2e706e67\"></a>\n<p>OCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.</p>\n<p>This module is part of the <a href=\"https://github.com/OCA/stock-logistics-workflow/tree/12.0/stock_picking_purchase_propagate\" rel=\"nofollow\">OCA/stock-logistics-workflow</a> project on GitHub.</p>\n<p>You are welcome to contribute. To learn how please visit <a href=\"https://odoo-community.org/page/Contribute\" rel=\"nofollow\">https://odoo-community.org/page/Contribute</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6658434, "releases": {"12.0.1.0.0.99.dev2": [{"comment_text": "", "digests": {"md5": "90227df09460710b363de16236938734", "sha256": "9719cbb2640bcb7f65f8972d737ef0f96985eac6a91fee1ab5f0e1f7a0bc2eba"}, "downloads": -1, "filename": "odoo12_addon_stock_picking_purchase_propagate-12.0.1.0.0.99.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "90227df09460710b363de16236938734", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 28540, "upload_time": "2020-02-19T05:37:14", "upload_time_iso_8601": "2020-02-19T05:37:14.088180Z", "url": "https://files.pythonhosted.org/packages/8d/61/78022253bc187232b77d6d3c010b37d847bb0c14fa6644d725968108cdb8/odoo12_addon_stock_picking_purchase_propagate-12.0.1.0.0.99.dev2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "90227df09460710b363de16236938734", "sha256": "9719cbb2640bcb7f65f8972d737ef0f96985eac6a91fee1ab5f0e1f7a0bc2eba"}, "downloads": -1, "filename": "odoo12_addon_stock_picking_purchase_propagate-12.0.1.0.0.99.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "90227df09460710b363de16236938734", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 28540, "upload_time": "2020-02-19T05:37:14", "upload_time_iso_8601": "2020-02-19T05:37:14.088180Z", "url": "https://files.pythonhosted.org/packages/8d/61/78022253bc187232b77d6d3c010b37d847bb0c14fa6644d725968108cdb8/odoo12_addon_stock_picking_purchase_propagate-12.0.1.0.0.99.dev2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:08:06 2020"}