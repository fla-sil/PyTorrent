{"info": {"author": "Ed Crewe", "author_email": "edmundcrewe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Django CSV Import\n=================\n\nEd Crewe - April 2020\n\nOverview\n--------\n\ndjango-csvimport is a generic importer tool to allow the upload of CSV files for\npopulating data. The egg installs an admin csvimport model that has a file upload field.\nAdd a new csvimport and upload a comma separated values file or MS Excel file.\n\nThe upload triggers the import mechanism which matches the header line of the files\nfield names to the fields in the selected model. Importing any rows that include all required fields.\nOptionally required fields can be specified as part of the upload.\nBy default duplicate value rows are not inserted.\n\nThe import can also be run as a custom command, ie manage.py importcsv filename\nfor possible use via cronjob etc.\n\nFor CSV files import where their schema is unknown, and there is no existing model to import to, there\nis another command, inspectcsv, to generate the model code from the CSV file, guessing data types from the data\nusing https://messytables.readthedocs.org - to use this command please pip install messytables.\n\nThe core import code was based on http://djangosnippets.org/snippets/633/ by Jonathan Holst.\nIt adds character encoding handling, model field and column autodetection, admin interface,\ncustom command etc.\n\nVersion 2 - Sept 2014\n---------------------\n\n#. New management command csvinspect to generate models from CSV files\n#. General code refactor\n#. Management command renamed from csvimport to importcsv\n#. More features to cope with bad encoding and date types\n\nVersion Compatibility\n---------------------\n\nversion 2.14 was tested with Django 3.0.5 on Python 3.7.6 and Python 3.8.2\n  \n(NOTE To use the inspectcsv model generation command, requires messytables. Latest messytables needs older \npython magic...\n\n#. pip install python-magic-bin==0.4.14\n#. pip install messytables)\n    \nversion 2.13 was tested with Django 2.2.5 on Python 3.7.3\nversion 2.6 was tested with Django 1.7, 1.8, 1.9, 1.10, 1.11 on Python 2.7.13 and Python 3.5.6\n\nPlease use version 2.1, eg. pip install django-csvimport==2.1\nfor Django versions prior to 1.7\n\nThis Django >= 1.7 requirement is because django-csvimport uses the newly added AppConfig for versions > 2.1\n(NB: To fix this issue you could install django-appconf to django 1.6 or earlier\nand tweak csvimport to use it in csvimport.app)\n\nFor really old Django versions < 1.4 you may have to dial back the versions until it works!\n\nNote that only versions > 2.2 are compatible with Python 3.4\n\n\nInstallation instructions\n-------------------------\n\nAdd the following to the INSTALLED_APPS in the settings.py of your project:\n\n>>>  pip install django-csvimport\n...\n...  INSTALLED_APPS = (\n...  ...\n...  'csvimport.app.CSVImportConf',  # use AppConfig for django >=1.7 csvimport >=2.2\n...  )\n...\n...  python manage.py migrate  (or syncdb if django < 1.9)\n\nNote that migrate has the core tables in 0001_initial migration and test tables in 0002 so\nrm migrations/0002_test_models.py if you do not want these cluttering your database\n\nCustom commands\n---------------\n\nINSPECTCSV\n\n(pip install messytables to use this command)\n\nmanage.py inspectcsv importfile.csv > models.py\n\nThis returns the code for a new models file with a guesstimated model for the CSV file.\nAdd it to your app then run\n\n>>> makemigrations your_app\n>>> migrate\n\nYou can then run the import to that model for importfile.csv\n\nNB: As it says its a guesstimate, you may have to manually tweak the generated models.py to get\nthe import to work better.\n\nIf there are no headings in the CSV file, then it just uses automated ones col_1, col_2 ... etc.\n\nIMPORTCSV\n\n(Please note this command used to be csvimport but that caused name clash issues with the module)\n\nmanage.py importcsv --mappings='' --model='app_label.model_name' --delimiter='\\t' importfile.csv\n\nFor mappings enter a list of fields in order only if you dont have a header row\nwith matching field names - or you want to override it, eg.\n\n--mappings = '1=shared_code,2=org(otherapp.Organisation|name),3=date'\n\nwhere (model|foreign key field) is used to specify relations if again, you want to\noverride what would be looked up from your models.\n\nIf you have no real field names in your csv file, then you can use\n--mappings='none' and it will assume the fields are named col_1, col_2 ... etc.\n\nNote that if you have a header row and specify mappings then it will treat the header as a data row, so delete it first.\n\nAdmin interface import\n----------------------\n\nJust add a csvimport item, fill in the form and submit.\nFailed import rows are added to the log field.\n\nDemonstration installation instructions\n---------------------------------------\n\nTo see how it works, you can install a demo easily enough eg. via virtual environment,\nthen use the tests settings to have some sample models for importing data, and the fixtures are sample csv files.\n\n- Run the following in your shell:\n\n>>> virtualenv mysite\n... cd mysite\n... pip install django\n... pip install django-csvimport\n...\n... cat > bin/django-admin.py << EOF\n... #!/usr/bin/env python\n... from django.core import management\n... import os\n... os.environ[\"DJANGO_SETTINGS_MODULE\"] = \"csvimport.settings\"\n... if __name__ == \"__main__\":\n...     management.execute_from_command_line()\n... EOF\n...\n... django-admin.py migrate\n... django-admin.py runserver\n\n- Go to http://127.0.0.1:8000/admin/ in your browser - pay attention to the trailing / !\n- Click on add Csvimport\n- Pick the django-csvimport/csvimport/tests/fixtures/countries.csv [1] and upload it\n- Check to see if the Country model is now populated.\n\n[1] also available from https://raw.github.com/edcrewe/django-importcsv/master/importcsv/tests/fixtures/countries.csv\n\nAlternatively you can use the command line to upload\n\ndjango-admin.py importcsv --model='csvimport.Country' django-csvimport/csvimport/tests/fixtures/countries.csv --settings='csvimport.settings'\n\nForeign Keys\n------------\n\nIt is not viable for csvimport to determine complex table relations.\nHowever if it finds something marked as an ForeignKey with a lookup field in its model mappings, then it checks if the data exists already for the related model and pulls back an id for the field or creates a new entry if possible in the fkey model and pulls back a new id.\n\nFor this to be useful then you need a related table that has a unique and more meaningful field that is being used in your data than a numeric primary key.\n\neg. for an organisation column, org, that holds the unique name of the organisation from a separate table, you can add\n\ncolumn2=org(Organisation|name)\n\nto the mappings, so it knows that the org field relates to a separate Organisation table with a unique name field to be used for it to lookup and replace with org_id FKey\n\nMore complex relations\n----------------------\n\nFor any more sophisticated relations, eg. multiple keys, many to many fields etc.\nThe recommended approach is to create a temporary or intermediate import table that holds the data from your CSV file\nwith the lookup data in as columns, you can use\n\ninspectcsv importfile.csv > models.py\n\nto automatically generate the import model from your CSV file.\n\nWhenever you do an import to that table you would use a bulk insert database query to take the data in it and populate complex relations of the final model tables appropriately.\nIf imports are happening repeatedly, eg. once a day, you retain your import CSV format table, and can add a database trigger for the table to automatically run your stored data conversion synchronisation query into the target tables.\n\nDateTime  data\n--------------\n\nNote that the importer uses the standard date input format list in settings to try to convert any datetime types you have in your CSV file.\nSo add this to your settings with a list of any formats that you want to be handled.\n\nDATE_INPUT_FORMATS = ['%Y-%m-%d %H:%M:%S']\n\nIn order for dates to be imported outside of the timezone range of 1970-2037\nfor certain database backends such as sqlite there is a patch of django.utils.timezone\nusing tzinfo monkeypatch\n\nAcknowledgements\n----------------\n\nThis package was created as part of a django dash at the House of Omni, Bristol UK, organised\nby Dan Fairs and my local django users group, #DBBUG. It was a core component for an application\nfor aid agency supply chain sharing, prompted by Fraser Stephens of the HELIOS foundation\nand developed by Ed Crewe and Tom Dunham.\n\nOther Django CSV importers\n--------------------------\n\n- https://github.com/uptick/django-model-import\n- https://pypi.org/project/csvImporter/\n- https://pypi.org/project/django-csv-import/\n\nChangelog\n=========\n\nContributors listed as [github.com username] where they are on github\n\n2.15 - Fix compatiblity issue for Django 3 - 27 April 2020\n----------------------------------------------------------\n\n2.13 - Fix issue with inspectcsv for different header and data line number of cols - 26th Sept 2019\n---------------------------------------------------------------------------------------------------\n\n2.12 - Fix for latest django required on_delete and duplicated log msgs - 24 April 2019\n---------------------------------------------------------------------------------------\n\n2.11 - Fix command line summary messages - 14 July 2017\n-------------------------------------------------------\n\n2.10 - Bug with models var not set if not bulk import - 6 July 2017\n--------------------------------------------------------------------\n\n2.9 - Fix for using foreign keys from other apps - 4 July 2017\n--------------------------------------------------------------\n\n#. Handle boolean types actually being ints for sqlite\n#. Allow dots in --mappings so app labels of foreign keys can be set by the user, since model lookup may assume wrong label.\n\n2.8 - Minor fixes - 19 June 2017\n--------------------------------\n\n#. Force datetimes to local timezone to prevent warning on insert\n#. Rebuild initial migrations file\n#. Add option to do bulk create with --bulk to speed up import\n\n2.7 - Merge in pull requests for minor fixes and test with Django 1.11 - 30 May 2017\n------------------------------------------------------------------------------------\n\n#. Fix uninitiated variable bug if type not detected\n#. Fix command line arg usage for Django 1.10 or 1.11 and make it backwards compatible down to 1.7\n#. For multiple django version compatibility code try excepts make sure new syntax is first to avoid deprecation warnings\n#. Add test shell script to make it easy to run test suite and a command line test\n#. Report back matched and unmatched cols in CSV rather than just showing list of all of them\n#. Allow clean=false option to not fix numeric values to match allowed range\n#. Use atomic to wrap row inserts so we can still report count of inserts Ok after a transactional exception\n\n2.5 - Merge in various pull requests and test with Django 1.7 to 1.10 - 15 Nov 2016\n-----------------------------------------------------------------------------------\n\n#. Fix for all recent versions of Django and Python\n#. Add in delimiter option eg. for tab separated values\n#. Add migrations\n#. Make importcsv parsing more tolerant of unparsable rows in CSV\n\n2.4 - Fix app config path so that management commands are found - 11 Nov 2014\n-----------------------------------------------------------------------------\n\n#. Fix log print for commands\n\n2.3 - Make compatible with Python 3 - 29 October 2014\n-----------------------------------------------------\n\n2.2 - Move to core appconfig usage - 28 October 2014\n----------------------------------------------------\n\n#. Add appconfig path to cater for module install test running\n#. Check for SMALLINT_DBS including sqlite - since can fail big int imports\n\n2.1 - Fix for django 1.7 - 27 October 2014\n------------------------------------------\n\n2.0 - Added model creation and datetime clean up - 29th Sept 2014\n-----------------------------------------------------------------\n\n#. Generate django model files based on CSV data type sniffing with messytables\n#. Use flag to generate model code eg. --model=create_new_model.modelname and add test\n#. Use the settings date formats and add clean up for them\n#. Factor out type clean up method for data values\n#. Allow defaults to be passed as a command line argument\n#. Use --mappings=none for CSV created models with no column name row\n#. Handle badly encoded files as raw\n#. Set date limit in case of strftime bug for pre-1900 dates\n\n[edcrewe]\n\n1.1 - Added mappings and defaults tests - 18 March 2014\n-------------------------------------------------------\n\n#. Allow mapping format to be simple header row style\n#. Refactored heading parsing and added tests for optional args\n\n[edcrewe]\n\n1.0 - Added signals and code cleanup - 29th January 2013\n--------------------------------------------------------\n\n#. Fixed number overflow test and tested with django 1.5.1 [edcrewe]\n#. Added signals to the app, to allow the model to custom format a row.\n#. added appconf to allow the app to be more customizable - eg. select models for import.\n#. Removed except all and return database errors.\n\n[cwood]\n\n0.9 - Missed import of re for change to display of error log - 9th Dec 2012\n---------------------------------------------------------------------------\n\n#. Import re in csvimport/models.py [blorenz]\n\n0.8 - Tidy up logging and Boolean handling - 9th Dec 2012\n---------------------------------------------------------\n\n#. Fix display of error log so there are newlines for each entry [smeyfroi]\n#. Log processed rows to the csvimport.management.commands.csvimport logger [smeyfroi]\n#. Fix for boolean data [smeyfroi]\n#. Add setting for using standard logging machinery for Admin UI log lines [edcrewe]\n#. Add test to check creation and content of csvimport log file [edcrewe]\n\n0.7 - Fixes and merge in changes for running up the test app - 24th Nov 2012\n----------------------------------------------------------------------------\n\n#. Merge in changes for 1.4 templates in settings [elena]\n#. Merge in doc changes [elena, valhallasw]\n#. Fix bug with columns that are floats [imposeren]\n#. Fix imports via the admin not having charset encoding argument [edcrewe]\n\n0.6 - Handle text not number or special float to integer - 7th March 2012\n-------------------------------------------------------------------------\n\n#. Handle numeric columns with text in - zero if not nan or inf\n\n[edcrewe]\n\n0.5 - Add command line encoding option and error return - 6th March 2012\n------------------------------------------------------------------------\n\n#. Make sure command line usage returns errors and warnings\n#. Add the option to force --charset=utf-8 for example rather than chardet\n#. Add numeric type handling for empty fields or other issues plus tests\n\n[Tessa Alexander, edcrewe]\n\n0.4 - Add settings to allow demo site install from tests - 4th October 2011\n---------------------------------------------------------------------------\n\n#. Add demo countries.csv file\n#. Add MEDIA_ROOT for file uploads\n\n[edcrewe]\n\n0.3 - Fix issue with adding in admin - 25th Sept 2011\n-----------------------------------------------------\n\n#. Fix empty mapping submitted\n#. Remove non-generic filename country processing code\n#. Use get_models to populate drop down for admin import form\n#. Add upload message about whether mapping is from CSV header row\n#. Ensure header row only used if mapping is not supplied.\n\n[edcrewe]\n\n0.2 - Initial beta release version - 29th July 2011\n---------------------------------------------------\n\n#. Build it as a django-csvimport egg\n#. Create csvimport management command\n#. Improve character set detection and unicode handling\n#. Add admin csvimport model to upload CSV files with logging of import\n#. Use file upload save to trigger csvimport command\n#. Autodetect column mappings by matching model fields and CSV header text\n#. Add a deduplicate feature\n#. Start to add test suite with data / app for HELIOS cross agency supply chain\n   data sharing http://www.helios-foundation.org/cbha-project/index_html\n\n[edcrewe]\n\n0.1 - Unreleased\n----------------\n\n#. Use django snippet as starting point\n   http://djangosnippets.org/snippets/633/\n\n[Jonathan Holst]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/edcrewe/django-csvimport", "keywords": "CVS import django fixture", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "django-csvimport", "package_url": "https://pypi.org/project/django-csvimport/", "platform": "", "project_url": "https://pypi.org/project/django-csvimport/", "project_urls": {"Homepage": "https://github.com/edcrewe/django-csvimport"}, "release_url": "https://pypi.org/project/django-csvimport/2.15/", "requires_dist": null, "requires_python": "", "summary": "Import CSV files to django models", "version": "2.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-csv-import\">\n<h2>Django CSV Import</h2>\n<p>Ed Crewe - April 2020</p>\n<div id=\"overview\">\n<h3>Overview</h3>\n<p>django-csvimport is a generic importer tool to allow the upload of CSV files for\npopulating data. The egg installs an admin csvimport model that has a file upload field.\nAdd a new csvimport and upload a comma separated values file or MS Excel file.</p>\n<p>The upload triggers the import mechanism which matches the header line of the files\nfield names to the fields in the selected model. Importing any rows that include all required fields.\nOptionally required fields can be specified as part of the upload.\nBy default duplicate value rows are not inserted.</p>\n<p>The import can also be run as a custom command, ie manage.py importcsv filename\nfor possible use via cronjob etc.</p>\n<p>For CSV files import where their schema is unknown, and there is no existing model to import to, there\nis another command, inspectcsv, to generate the model code from the CSV file, guessing data types from the data\nusing <a href=\"https://messytables.readthedocs.org\" rel=\"nofollow\">https://messytables.readthedocs.org</a> - to use this command please pip install messytables.</p>\n<p>The core import code was based on <a href=\"http://djangosnippets.org/snippets/633/\" rel=\"nofollow\">http://djangosnippets.org/snippets/633/</a> by Jonathan Holst.\nIt adds character encoding handling, model field and column autodetection, admin interface,\ncustom command etc.</p>\n</div>\n<div id=\"version-2-sept-2014\">\n<h3>Version 2 - Sept 2014</h3>\n<ol>\n<li>New management command csvinspect to generate models from CSV files</li>\n<li>General code refactor</li>\n<li>Management command renamed from csvimport to importcsv</li>\n<li>More features to cope with bad encoding and date types</li>\n</ol>\n</div>\n<div id=\"version-compatibility\">\n<h3>Version Compatibility</h3>\n<p>version 2.14 was tested with Django 3.0.5 on Python 3.7.6 and Python 3.8.2</p>\n<p>(NOTE To use the inspectcsv model generation command, requires messytables. Latest messytables needs older\npython magic\u2026</p>\n<ol>\n<li>pip install python-magic-bin==0.4.14</li>\n<li>pip install messytables)</li>\n</ol>\n<p>version 2.13 was tested with Django 2.2.5 on Python 3.7.3\nversion 2.6 was tested with Django 1.7, 1.8, 1.9, 1.10, 1.11 on Python 2.7.13 and Python 3.5.6</p>\n<p>Please use version 2.1, eg. pip install django-csvimport==2.1\nfor Django versions prior to 1.7</p>\n<p>This Django &gt;= 1.7 requirement is because django-csvimport uses the newly added AppConfig for versions &gt; 2.1\n(NB: To fix this issue you could install django-appconf to django 1.6 or earlier\nand tweak csvimport to use it in csvimport.app)</p>\n<p>For really old Django versions &lt; 1.4 you may have to dial back the versions until it works!</p>\n<p>Note that only versions &gt; 2.2 are compatible with Python 3.4</p>\n</div>\n<div id=\"installation-instructions\">\n<h3>Installation instructions</h3>\n<p>Add the following to the INSTALLED_APPS in the settings.py of your project:</p>\n<pre>&gt;&gt;&gt;  pip install django-csvimport\n...\n...  INSTALLED_APPS = (\n...  ...\n...  'csvimport.app.CSVImportConf',  # use AppConfig for django &gt;=1.7 csvimport &gt;=2.2\n...  )\n...\n...  python manage.py migrate  (or syncdb if django &lt; 1.9)\n</pre>\n<p>Note that migrate has the core tables in 0001_initial migration and test tables in 0002 so\nrm migrations/0002_test_models.py if you do not want these cluttering your database</p>\n</div>\n<div id=\"custom-commands\">\n<h3>Custom commands</h3>\n<p>INSPECTCSV</p>\n<p>(pip install messytables to use this command)</p>\n<p>manage.py inspectcsv importfile.csv &gt; models.py</p>\n<p>This returns the code for a new models file with a guesstimated model for the CSV file.\nAdd it to your app then run</p>\n<pre>&gt;&gt;&gt; makemigrations your_app\n&gt;&gt;&gt; migrate\n</pre>\n<p>You can then run the import to that model for importfile.csv</p>\n<p>NB: As it says its a guesstimate, you may have to manually tweak the generated models.py to get\nthe import to work better.</p>\n<p>If there are no headings in the CSV file, then it just uses automated ones col_1, col_2 \u2026 etc.</p>\n<p>IMPORTCSV</p>\n<p>(Please note this command used to be csvimport but that caused name clash issues with the module)</p>\n<p>manage.py importcsv \u2013mappings=\u2019\u2019 \u2013model=\u2019app_label.model_name\u2019 \u2013delimiter=\u2019t\u2019 importfile.csv</p>\n<p>For mappings enter a list of fields in order only if you dont have a header row\nwith matching field names - or you want to override it, eg.</p>\n<p>\u2013mappings = \u20181=shared_code,2=org(otherapp.Organisation|name),3=date\u2019</p>\n<p>where (model|foreign key field) is used to specify relations if again, you want to\noverride what would be looked up from your models.</p>\n<p>If you have no real field names in your csv file, then you can use\n\u2013mappings=\u2019none\u2019 and it will assume the fields are named col_1, col_2 \u2026 etc.</p>\n<p>Note that if you have a header row and specify mappings then it will treat the header as a data row, so delete it first.</p>\n</div>\n<div id=\"admin-interface-import\">\n<h3>Admin interface import</h3>\n<p>Just add a csvimport item, fill in the form and submit.\nFailed import rows are added to the log field.</p>\n</div>\n<div id=\"demonstration-installation-instructions\">\n<h3>Demonstration installation instructions</h3>\n<p>To see how it works, you can install a demo easily enough eg. via virtual environment,\nthen use the tests settings to have some sample models for importing data, and the fixtures are sample csv files.</p>\n<ul>\n<li>Run the following in your shell:</li>\n</ul>\n<pre>&gt;&gt;&gt; virtualenv mysite\n... cd mysite\n... pip install django\n... pip install django-csvimport\n...\n... cat &gt; bin/django-admin.py &lt;&lt; EOF\n... #!/usr/bin/env python\n... from django.core import management\n... import os\n... os.environ[\"DJANGO_SETTINGS_MODULE\"] = \"csvimport.settings\"\n... if __name__ == \"__main__\":\n...     management.execute_from_command_line()\n... EOF\n...\n... django-admin.py migrate\n... django-admin.py runserver\n</pre>\n<ul>\n<li>Go to <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a> in your browser - pay attention to the trailing / !</li>\n<li>Click on add Csvimport</li>\n<li>Pick the django-csvimport/csvimport/tests/fixtures/countries.csv [1] and upload it</li>\n<li>Check to see if the Country model is now populated.</li>\n</ul>\n<p>[1] also available from <a href=\"https://raw.github.com/edcrewe/django-importcsv/master/importcsv/tests/fixtures/countries.csv\" rel=\"nofollow\">https://raw.github.com/edcrewe/django-importcsv/master/importcsv/tests/fixtures/countries.csv</a></p>\n<p>Alternatively you can use the command line to upload</p>\n<p>django-admin.py importcsv \u2013model=\u2019csvimport.Country\u2019 django-csvimport/csvimport/tests/fixtures/countries.csv \u2013settings=\u2019csvimport.settings\u2019</p>\n</div>\n<div id=\"foreign-keys\">\n<h3>Foreign Keys</h3>\n<p>It is not viable for csvimport to determine complex table relations.\nHowever if it finds something marked as an ForeignKey with a lookup field in its model mappings, then it checks if the data exists already for the related model and pulls back an id for the field or creates a new entry if possible in the fkey model and pulls back a new id.</p>\n<p>For this to be useful then you need a related table that has a unique and more meaningful field that is being used in your data than a numeric primary key.</p>\n<p>eg. for an organisation column, org, that holds the unique name of the organisation from a separate table, you can add</p>\n<p>column2=org(Organisation|name)</p>\n<p>to the mappings, so it knows that the org field relates to a separate Organisation table with a unique name field to be used for it to lookup and replace with org_id FKey</p>\n</div>\n<div id=\"more-complex-relations\">\n<h3>More complex relations</h3>\n<p>For any more sophisticated relations, eg. multiple keys, many to many fields etc.\nThe recommended approach is to create a temporary or intermediate import table that holds the data from your CSV file\nwith the lookup data in as columns, you can use</p>\n<p>inspectcsv importfile.csv &gt; models.py</p>\n<p>to automatically generate the import model from your CSV file.</p>\n<p>Whenever you do an import to that table you would use a bulk insert database query to take the data in it and populate complex relations of the final model tables appropriately.\nIf imports are happening repeatedly, eg. once a day, you retain your import CSV format table, and can add a database trigger for the table to automatically run your stored data conversion synchronisation query into the target tables.</p>\n</div>\n<div id=\"datetime-data\">\n<h3>DateTime  data</h3>\n<p>Note that the importer uses the standard date input format list in settings to try to convert any datetime types you have in your CSV file.\nSo add this to your settings with a list of any formats that you want to be handled.</p>\n<p>DATE_INPUT_FORMATS = [\u2018%Y-%m-%d %H:%M:%S\u2019]</p>\n<p>In order for dates to be imported outside of the timezone range of 1970-2037\nfor certain database backends such as sqlite there is a patch of django.utils.timezone\nusing tzinfo monkeypatch</p>\n</div>\n<div id=\"acknowledgements\">\n<h3>Acknowledgements</h3>\n<p>This package was created as part of a django dash at the House of Omni, Bristol UK, organised\nby Dan Fairs and my local django users group, #DBBUG. It was a core component for an application\nfor aid agency supply chain sharing, prompted by Fraser Stephens of the HELIOS foundation\nand developed by Ed Crewe and Tom Dunham.</p>\n</div>\n<div id=\"other-django-csv-importers\">\n<h3>Other Django CSV importers</h3>\n<ul>\n<li><a href=\"https://github.com/uptick/django-model-import\" rel=\"nofollow\">https://github.com/uptick/django-model-import</a></li>\n<li><a href=\"https://pypi.org/project/csvImporter/\" rel=\"nofollow\">https://pypi.org/project/csvImporter/</a></li>\n<li><a href=\"https://pypi.org/project/django-csv-import/\" rel=\"nofollow\">https://pypi.org/project/django-csv-import/</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>Contributors listed as [github.com username] where they are on github</p>\n<div id=\"fix-compatiblity-issue-for-django-3-27-april-2020\">\n<h3>2.15 - Fix compatiblity issue for Django 3 - 27 April 2020</h3>\n</div>\n<div id=\"fix-issue-with-inspectcsv-for-different-header-and-data-line-number-of-cols-26th-sept-2019\">\n<h3>2.13 - Fix issue with inspectcsv for different header and data line number of cols - 26th Sept 2019</h3>\n</div>\n<div id=\"fix-for-latest-django-required-on-delete-and-duplicated-log-msgs-24-april-2019\">\n<h3>2.12 - Fix for latest django required on_delete and duplicated log msgs - 24 April 2019</h3>\n</div>\n<div id=\"fix-command-line-summary-messages-14-july-2017\">\n<h3>2.11 - Fix command line summary messages - 14 July 2017</h3>\n</div>\n<div id=\"bug-with-models-var-not-set-if-not-bulk-import-6-july-2017\">\n<h3>2.10 - Bug with models var not set if not bulk import - 6 July 2017</h3>\n</div>\n<div id=\"fix-for-using-foreign-keys-from-other-apps-4-july-2017\">\n<h3>2.9 - Fix for using foreign keys from other apps - 4 July 2017</h3>\n<ol>\n<li>Handle boolean types actually being ints for sqlite</li>\n<li>Allow dots in \u2013mappings so app labels of foreign keys can be set by the user, since model lookup may assume wrong label.</li>\n</ol>\n</div>\n<div id=\"minor-fixes-19-june-2017\">\n<h3>2.8 - Minor fixes - 19 June 2017</h3>\n<ol>\n<li>Force datetimes to local timezone to prevent warning on insert</li>\n<li>Rebuild initial migrations file</li>\n<li>Add option to do bulk create with \u2013bulk to speed up import</li>\n</ol>\n</div>\n<div id=\"merge-in-pull-requests-for-minor-fixes-and-test-with-django-1-11-30-may-2017\">\n<h3>2.7 - Merge in pull requests for minor fixes and test with Django 1.11 - 30 May 2017</h3>\n<ol>\n<li>Fix uninitiated variable bug if type not detected</li>\n<li>Fix command line arg usage for Django 1.10 or 1.11 and make it backwards compatible down to 1.7</li>\n<li>For multiple django version compatibility code try excepts make sure new syntax is first to avoid deprecation warnings</li>\n<li>Add test shell script to make it easy to run test suite and a command line test</li>\n<li>Report back matched and unmatched cols in CSV rather than just showing list of all of them</li>\n<li>Allow clean=false option to not fix numeric values to match allowed range</li>\n<li>Use atomic to wrap row inserts so we can still report count of inserts Ok after a transactional exception</li>\n</ol>\n</div>\n<div id=\"merge-in-various-pull-requests-and-test-with-django-1-7-to-1-10-15-nov-2016\">\n<h3>2.5 - Merge in various pull requests and test with Django 1.7 to 1.10 - 15 Nov 2016</h3>\n<ol>\n<li>Fix for all recent versions of Django and Python</li>\n<li>Add in delimiter option eg. for tab separated values</li>\n<li>Add migrations</li>\n<li>Make importcsv parsing more tolerant of unparsable rows in CSV</li>\n</ol>\n</div>\n<div id=\"fix-app-config-path-so-that-management-commands-are-found-11-nov-2014\">\n<h3>2.4 - Fix app config path so that management commands are found - 11 Nov 2014</h3>\n<ol>\n<li>Fix log print for commands</li>\n</ol>\n</div>\n<div id=\"make-compatible-with-python-3-29-october-2014\">\n<h3>2.3 - Make compatible with Python 3 - 29 October 2014</h3>\n</div>\n<div id=\"move-to-core-appconfig-usage-28-october-2014\">\n<h3>2.2 - Move to core appconfig usage - 28 October 2014</h3>\n<ol>\n<li>Add appconfig path to cater for module install test running</li>\n<li>Check for SMALLINT_DBS including sqlite - since can fail big int imports</li>\n</ol>\n</div>\n<div id=\"fix-for-django-1-7-27-october-2014\">\n<h3>2.1 - Fix for django 1.7 - 27 October 2014</h3>\n</div>\n<div id=\"added-model-creation-and-datetime-clean-up-29th-sept-2014\">\n<h3>2.0 - Added model creation and datetime clean up - 29th Sept 2014</h3>\n<ol>\n<li>Generate django model files based on CSV data type sniffing with messytables</li>\n<li>Use flag to generate model code eg. \u2013model=create_new_model.modelname and add test</li>\n<li>Use the settings date formats and add clean up for them</li>\n<li>Factor out type clean up method for data values</li>\n<li>Allow defaults to be passed as a command line argument</li>\n<li>Use \u2013mappings=none for CSV created models with no column name row</li>\n<li>Handle badly encoded files as raw</li>\n<li>Set date limit in case of strftime bug for pre-1900 dates</li>\n</ol>\n<p>[edcrewe]</p>\n</div>\n<div id=\"added-mappings-and-defaults-tests-18-march-2014\">\n<h3>1.1 - Added mappings and defaults tests - 18 March 2014</h3>\n<ol>\n<li>Allow mapping format to be simple header row style</li>\n<li>Refactored heading parsing and added tests for optional args</li>\n</ol>\n<p>[edcrewe]</p>\n</div>\n<div id=\"added-signals-and-code-cleanup-29th-january-2013\">\n<h3>1.0 - Added signals and code cleanup - 29th January 2013</h3>\n<ol>\n<li>Fixed number overflow test and tested with django 1.5.1 [edcrewe]</li>\n<li>Added signals to the app, to allow the model to custom format a row.</li>\n<li>added appconf to allow the app to be more customizable - eg. select models for import.</li>\n<li>Removed except all and return database errors.</li>\n</ol>\n<p>[cwood]</p>\n</div>\n<div id=\"missed-import-of-re-for-change-to-display-of-error-log-9th-dec-2012\">\n<h3>0.9 - Missed import of re for change to display of error log - 9th Dec 2012</h3>\n<ol>\n<li>Import re in csvimport/models.py [blorenz]</li>\n</ol>\n</div>\n<div id=\"tidy-up-logging-and-boolean-handling-9th-dec-2012\">\n<h3>0.8 - Tidy up logging and Boolean handling - 9th Dec 2012</h3>\n<ol>\n<li>Fix display of error log so there are newlines for each entry [smeyfroi]</li>\n<li>Log processed rows to the csvimport.management.commands.csvimport logger [smeyfroi]</li>\n<li>Fix for boolean data [smeyfroi]</li>\n<li>Add setting for using standard logging machinery for Admin UI log lines [edcrewe]</li>\n<li>Add test to check creation and content of csvimport log file [edcrewe]</li>\n</ol>\n</div>\n<div id=\"fixes-and-merge-in-changes-for-running-up-the-test-app-24th-nov-2012\">\n<h3>0.7 - Fixes and merge in changes for running up the test app - 24th Nov 2012</h3>\n<ol>\n<li>Merge in changes for 1.4 templates in settings [elena]</li>\n<li>Merge in doc changes [elena, valhallasw]</li>\n<li>Fix bug with columns that are floats [imposeren]</li>\n<li>Fix imports via the admin not having charset encoding argument [edcrewe]</li>\n</ol>\n</div>\n<div id=\"handle-text-not-number-or-special-float-to-integer-7th-march-2012\">\n<h3>0.6 - Handle text not number or special float to integer - 7th March 2012</h3>\n<ol>\n<li>Handle numeric columns with text in - zero if not nan or inf</li>\n</ol>\n<p>[edcrewe]</p>\n</div>\n<div id=\"add-command-line-encoding-option-and-error-return-6th-march-2012\">\n<h3>0.5 - Add command line encoding option and error return - 6th March 2012</h3>\n<ol>\n<li>Make sure command line usage returns errors and warnings</li>\n<li>Add the option to force \u2013charset=utf-8 for example rather than chardet</li>\n<li>Add numeric type handling for empty fields or other issues plus tests</li>\n</ol>\n<p>[Tessa Alexander, edcrewe]</p>\n</div>\n<div id=\"add-settings-to-allow-demo-site-install-from-tests-4th-october-2011\">\n<h3>0.4 - Add settings to allow demo site install from tests - 4th October 2011</h3>\n<ol>\n<li>Add demo countries.csv file</li>\n<li>Add MEDIA_ROOT for file uploads</li>\n</ol>\n<p>[edcrewe]</p>\n</div>\n<div id=\"fix-issue-with-adding-in-admin-25th-sept-2011\">\n<h3>0.3 - Fix issue with adding in admin - 25th Sept 2011</h3>\n<ol>\n<li>Fix empty mapping submitted</li>\n<li>Remove non-generic filename country processing code</li>\n<li>Use get_models to populate drop down for admin import form</li>\n<li>Add upload message about whether mapping is from CSV header row</li>\n<li>Ensure header row only used if mapping is not supplied.</li>\n</ol>\n<p>[edcrewe]</p>\n</div>\n<div id=\"initial-beta-release-version-29th-july-2011\">\n<h3>0.2 - Initial beta release version - 29th July 2011</h3>\n<ol>\n<li>Build it as a django-csvimport egg</li>\n<li>Create csvimport management command</li>\n<li>Improve character set detection and unicode handling</li>\n<li>Add admin csvimport model to upload CSV files with logging of import</li>\n<li>Use file upload save to trigger csvimport command</li>\n<li>Autodetect column mappings by matching model fields and CSV header text</li>\n<li>Add a deduplicate feature</li>\n<li>Start to add test suite with data / app for HELIOS cross agency supply chain\ndata sharing <a href=\"http://www.helios-foundation.org/cbha-project/index_html\" rel=\"nofollow\">http://www.helios-foundation.org/cbha-project/index_html</a></li>\n</ol>\n<p>[edcrewe]</p>\n</div>\n<div id=\"unreleased\">\n<h3>0.1 - Unreleased</h3>\n<ol>\n<li>Use django snippet as starting point\n<a href=\"http://djangosnippets.org/snippets/633/\" rel=\"nofollow\">http://djangosnippets.org/snippets/633/</a></li>\n</ol>\n<p>[Jonathan Holst]</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7111329, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "d0ad67c744e71398416e707410f7d992", "sha256": "8ae0e92f65139687959eae605a62ae592109918a53bfdc9928b49fbeb449b4e6"}, "downloads": -1, "filename": "django_csvimport-0.2-py2.6.egg", "has_sig": false, "md5_digest": "d0ad67c744e71398416e707410f7d992", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 26984, "upload_time": "2011-07-29T16:18:10", "upload_time_iso_8601": "2011-07-29T16:18:10.092299Z", "url": "https://files.pythonhosted.org/packages/81/3c/93a32ad5517d637ae1a338fe9e48e0a0cb1479821d40f8dadc4f21b19ecf/django_csvimport-0.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc0cb29635f548cd783840b2631aeaca", "sha256": "ccb962124c837a3e9e1212cc4d8daa022b1252aed0e0f786e14c46b59514bb30"}, "downloads": -1, "filename": "django-csvimport-0.2.tar.gz", "has_sig": false, "md5_digest": "fc0cb29635f548cd783840b2631aeaca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10964, "upload_time": "2011-07-29T16:08:52", "upload_time_iso_8601": "2011-07-29T16:08:52.107529Z", "url": "https://files.pythonhosted.org/packages/3b/67/d6ee74700c4038660c87d7442536384539fd07c91ce1fc08b86ce18e2f5b/django-csvimport-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "13f44a39369ebb588122968d44123575", "sha256": "f367759318a9b0647964612f4a199123cc0556a912897f455e27d2eb3a11f2b2"}, "downloads": -1, "filename": "django_csvimport-0.3-py2.6.egg", "has_sig": false, "md5_digest": "13f44a39369ebb588122968d44123575", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 28836, "upload_time": "2011-09-26T01:00:07", "upload_time_iso_8601": "2011-09-26T01:00:07.329679Z", "url": "https://files.pythonhosted.org/packages/2e/b6/2d71e7fc13a1404d0aeb67ffd1e3661b7b61e3549fe9a40d9089cab8bc15/django_csvimport-0.3-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f3cfd3d5e6e69a53fcd075c74d52b76", "sha256": "341dddaa36284550b3e1de7820a2394c727b2fc94fa881ea853a2a8d26a1707d"}, "downloads": -1, "filename": "django_csvimport-0.3-py2.7.egg", "has_sig": false, "md5_digest": "4f3cfd3d5e6e69a53fcd075c74d52b76", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 28724, "upload_time": "2011-09-26T00:52:57", "upload_time_iso_8601": "2011-09-26T00:52:57.261692Z", "url": "https://files.pythonhosted.org/packages/39/f0/9c9e85791b801bace8c512531cfafce10681691478be097ab7d6855fbcdc/django_csvimport-0.3-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "48bedb288cc5be44c60fd5bcb6bf503d", "sha256": "49359e8ef7a94b9491e0b603571d319f18ecf4ceb2d80d24e2f05606492735a4"}, "downloads": -1, "filename": "django-csvimport-0.3.tar.gz", "has_sig": false, "md5_digest": "48bedb288cc5be44c60fd5bcb6bf503d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12012, "upload_time": "2011-09-26T00:52:55", "upload_time_iso_8601": "2011-09-26T00:52:55.836400Z", "url": "https://files.pythonhosted.org/packages/79/fd/a98a6d8a43eb3f80f213e9e24a207d9b55e89475659b94e7bcb897a01565/django-csvimport-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4f342f5834860c49571eb0b1fc87f75e", "sha256": "ff2d570006c9b1790ed040da4e6996a9c86a658730644980e26d49f63bb81148"}, "downloads": -1, "filename": "django_csvimport-0.4-py2.6.egg", "has_sig": false, "md5_digest": "4f342f5834860c49571eb0b1fc87f75e", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 37642, "upload_time": "2011-10-04T14:37:17", "upload_time_iso_8601": "2011-10-04T14:37:17.881788Z", "url": "https://files.pythonhosted.org/packages/1f/73/4e35c9ae84d09cb2f0e2b944c8e158eaf4f92022ba3fcd150c58fb136f84/django_csvimport-0.4-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c2c50a84085d1e80a674cd6852f29ae", "sha256": "468a205659f0f5607da5342063e5cef2ddcf97883353a969f9efaa4cfd69ab52"}, "downloads": -1, "filename": "django_csvimport-0.4-py2.7.egg", "has_sig": false, "md5_digest": "1c2c50a84085d1e80a674cd6852f29ae", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 37964, "upload_time": "2011-10-04T14:38:05", "upload_time_iso_8601": "2011-10-04T14:38:05.504045Z", "url": "https://files.pythonhosted.org/packages/8e/db/0893c090b21521dcd505bfee786104d990c1370a4c7e548e213c9615fddf/django_csvimport-0.4-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d1417273cade8d2cf97fce3ff7362cb", "sha256": "d28d43414ff5bd99c72620f345235ab70d28e1a23bad2af4182af969427c4e5c"}, "downloads": -1, "filename": "django-csvimport-0.4.tar.gz", "has_sig": false, "md5_digest": "3d1417273cade8d2cf97fce3ff7362cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19806, "upload_time": "2011-10-04T14:37:18", "upload_time_iso_8601": "2011-10-04T14:37:18.156639Z", "url": "https://files.pythonhosted.org/packages/e6/35/d559a9ad4705646e7b2abaad009e38edfabe9c06070cd63f7ccec3eaa6ec/django-csvimport-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "ee5dec016de01a7590a18782efcff4ab", "sha256": "2c8b116b50f3e74187c6aacc34f91f41c68da52c335972e2c48a93ab735085b8"}, "downloads": -1, "filename": "django-csvimport-0.5.tar.gz", "has_sig": false, "md5_digest": "ee5dec016de01a7590a18782efcff4ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21461, "upload_time": "2012-04-06T18:33:25", "upload_time_iso_8601": "2012-04-06T18:33:25.393141Z", "url": "https://files.pythonhosted.org/packages/8b/f5/32ffaf2ffd6b29e778a550ac116d70f2721724ad6723cbab471432bd0b9c/django-csvimport-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "d18ea0bcc6181f0c76ba1e6109c56bec", "sha256": "701669eca67bb8f634d23be4fecab94af642c65ce68b2afa8723911cde26456b"}, "downloads": -1, "filename": "django-csvimport-0.6.tar.gz", "has_sig": false, "md5_digest": "d18ea0bcc6181f0c76ba1e6109c56bec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21721, "upload_time": "2012-04-07T15:47:47", "upload_time_iso_8601": "2012-04-07T15:47:47.688174Z", "url": "https://files.pythonhosted.org/packages/1e/1d/022b22ef6cf4288311fce71d059be80677e0df6e44c90890709f215643ed/django-csvimport-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "01d60ac0e0eb336122a7fa733b9fd7da", "sha256": "0f729f42977832730ab06c4e0ec635a217ebfcccb7f869fa244bcae67818d8a5"}, "downloads": -1, "filename": "django-csvimport-0.7.tar.gz", "has_sig": false, "md5_digest": "01d60ac0e0eb336122a7fa733b9fd7da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22709, "upload_time": "2012-11-24T21:10:35", "upload_time_iso_8601": "2012-11-24T21:10:35.537976Z", "url": "https://files.pythonhosted.org/packages/91/31/78eeadafc25f210709b616d02b2328761d694371ba67e03f8e3cb2024345/django-csvimport-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "2de94bb41d2e0672498099a6ff9e62be", "sha256": "c18f72a70eb8c0cad1197160165cf4a02354d3402c12160f4d90b8e011767365"}, "downloads": -1, "filename": "django-csvimport-0.8.tar.gz", "has_sig": false, "md5_digest": "2de94bb41d2e0672498099a6ff9e62be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24172, "upload_time": "2012-12-09T15:27:39", "upload_time_iso_8601": "2012-12-09T15:27:39.923064Z", "url": "https://files.pythonhosted.org/packages/24/5f/7c4917d2f3adf26acdea86974f3fc5ff8813286f3f5a9e0bcc80066b73ad/django-csvimport-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "553217f6a5f60b286ea4ca6512b4d44a", "sha256": "df5299888fb83fbb1c2ecab1c9c4db774a678312cc516d82a0847738143e0e7e"}, "downloads": -1, "filename": "django-csvimport-0.9.tar.gz", "has_sig": false, "md5_digest": "553217f6a5f60b286ea4ca6512b4d44a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24256, "upload_time": "2012-12-09T20:05:46", "upload_time_iso_8601": "2012-12-09T20:05:46.552132Z", "url": "https://files.pythonhosted.org/packages/bd/74/c172c7aa35682afc60709fff1d779e608d1598f92e29de818661128f6998/django-csvimport-0.9.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "8028dbb938b3bb63c1f83257d40bcab9", "sha256": "b478aa37e11327bcbec0194e3a43535569742feb11d0a4d57764970bf72c2911"}, "downloads": -1, "filename": "django_csvimport-1.0-py2.7.egg", "has_sig": false, "md5_digest": "8028dbb938b3bb63c1f83257d40bcab9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 47610, "upload_time": "2013-06-24T22:38:50", "upload_time_iso_8601": "2013-06-24T22:38:50.962103Z", "url": "https://files.pythonhosted.org/packages/e5/bc/4213fec6131e6a79e84b6b57871593d66766f6a6d2cf5407d5d4f16c211b/django_csvimport-1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "166ef3f12711f9e2092ba636275b9d6b", "sha256": "29b3513eb654263b38d87e7f65190de4401cd67c2dc16db0abc1e66ea6d0090a"}, "downloads": -1, "filename": "django-csvimport-1.0.tar.gz", "has_sig": false, "md5_digest": "166ef3f12711f9e2092ba636275b9d6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23778, "upload_time": "2013-06-24T22:38:54", "upload_time_iso_8601": "2013-06-24T22:38:54.060526Z", "url": "https://files.pythonhosted.org/packages/db/6e/6ba6c7e10300e2e9d99256dfc763520060ea22d7cfb85f223e950e769ab6/django-csvimport-1.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "d74efd8a325f539e9947678b89035d01", "sha256": "84dfb4f1b929b1ac4150d152275104fa3db8f34f5e2c089f5a93203432e1b699"}, "downloads": -1, "filename": "django-csvimport-2.1.tar.gz", "has_sig": false, "md5_digest": "d74efd8a325f539e9947678b89035d01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33328, "upload_time": "2014-10-27T15:41:43", "upload_time_iso_8601": "2014-10-27T15:41:43.821334Z", "url": "https://files.pythonhosted.org/packages/39/2f/06403a5757552b4d1e6eefe7a560122f0c2675deb4f8bd7cfd48dd50b73e/django-csvimport-2.1.tar.gz", "yanked": false}], "2.10": [{"comment_text": "", "digests": {"md5": "3644432516391d870deb1d256a84abc3", "sha256": "9ccb8282745b68214f0931920d8650c010c7467872d1a4cc66dbd86a1984bd63"}, "downloads": -1, "filename": "django-csvimport-2.10.tar.gz", "has_sig": false, "md5_digest": "3644432516391d870deb1d256a84abc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44273, "upload_time": "2017-07-06T07:48:34", "upload_time_iso_8601": "2017-07-06T07:48:34.074860Z", "url": "https://files.pythonhosted.org/packages/b4/61/3c651aaef527446bf21fbbb0cb12359faa33873a08ce64550c6b2bea49d4/django-csvimport-2.10.tar.gz", "yanked": false}], "2.11": [{"comment_text": "", "digests": {"md5": "5be03d8a2d2302499a1b5b14cf34e3e5", "sha256": "416f8a5af1b594bda341b1e29bda3175645737fa817d1c023353cfbaae87988e"}, "downloads": -1, "filename": "django-csvimport-2.11.tar.gz", "has_sig": false, "md5_digest": "5be03d8a2d2302499a1b5b14cf34e3e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45229, "upload_time": "2017-07-14T07:49:19", "upload_time_iso_8601": "2017-07-14T07:49:19.182956Z", "url": "https://files.pythonhosted.org/packages/bf/f4/cab3d646eed435a7badddc88c6e37439c8abf4b4ac5e225aee0299b463cc/django-csvimport-2.11.tar.gz", "yanked": false}], "2.12": [{"comment_text": "", "digests": {"md5": "0a3f8155e500739245fd78d964669773", "sha256": "d4ac77da8b20f57a1d68432881149d50386a4575a72846dd78c95428c361f5f1"}, "downloads": -1, "filename": "django_csvimport-2.12-py3-none-any.whl", "has_sig": false, "md5_digest": "0a3f8155e500739245fd78d964669773", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51594, "upload_time": "2019-04-24T16:14:06", "upload_time_iso_8601": "2019-04-24T16:14:06.576126Z", "url": "https://files.pythonhosted.org/packages/10/18/b1e6738c8815460c0411bf7840b875157c436df681ce5bdedf931f3a702f/django_csvimport-2.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c91394565f3de2ad835bbcdcd618ee5c", "sha256": "00c44dda6e10eb77c3bf10247f5c47b694c6b417d2ecde67e8e3cc52a2a7e806"}, "downloads": -1, "filename": "django-csvimport-2.12.tar.gz", "has_sig": false, "md5_digest": "c91394565f3de2ad835bbcdcd618ee5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45733, "upload_time": "2019-04-24T16:14:08", "upload_time_iso_8601": "2019-04-24T16:14:08.130610Z", "url": "https://files.pythonhosted.org/packages/ef/27/f4f19fe15fd1d57ccf831f110ed50622cfc202c4ea55684f48d67f970fea/django-csvimport-2.12.tar.gz", "yanked": false}], "2.13": [{"comment_text": "", "digests": {"md5": "2061eceda6685e05df04f48559f3aae3", "sha256": "185d452328c061b48c23559253841ebe0ca4bbe9e8bf26ce07cc51e5128fc444"}, "downloads": -1, "filename": "django-csvimport-2.13.tar.gz", "has_sig": false, "md5_digest": "2061eceda6685e05df04f48559f3aae3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46054, "upload_time": "2019-09-26T15:11:47", "upload_time_iso_8601": "2019-09-26T15:11:47.142859Z", "url": "https://files.pythonhosted.org/packages/b9/b3/b273a69bfcd8c545d08a84c97b341db7ba8d18fc7b37ca9576b3cf4e69a6/django-csvimport-2.13.tar.gz", "yanked": false}], "2.14": [{"comment_text": "", "digests": {"md5": "26ae2be66f3dce025cba692a3f449849", "sha256": "d2b2e2da6e34e841d2a1e84fb3c3f703708ad9c522b2d6d5b3705ca0f33acdfd"}, "downloads": -1, "filename": "django-csvimport-2.14.tar.gz", "has_sig": false, "md5_digest": "26ae2be66f3dce025cba692a3f449849", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46112, "upload_time": "2020-04-26T17:07:25", "upload_time_iso_8601": "2020-04-26T17:07:25.536831Z", "url": "https://files.pythonhosted.org/packages/de/09/88972ef654212434216fddabcb5e3d0d6b01d9313194fdb07da91cde9844/django-csvimport-2.14.tar.gz", "yanked": true}], "2.15": [{"comment_text": "", "digests": {"md5": "2fec26afcba185320ef5de78e82afc1a", "sha256": "9a7e03a74df3c2a2621f3454a4a91c6ff8d237bbda15441a016c8b531a5acac9"}, "downloads": -1, "filename": "django-csvimport-2.15.tar.gz", "has_sig": false, "md5_digest": "2fec26afcba185320ef5de78e82afc1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48175, "upload_time": "2020-04-27T12:21:46", "upload_time_iso_8601": "2020-04-27T12:21:46.274840Z", "url": "https://files.pythonhosted.org/packages/8b/da/743157770538027bd96f3e81a12e56d1c40bc9e61d861ea2c6994eb22b27/django-csvimport-2.15.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "c5b66dc536dc80b5430c4ab5f2a6c8ee", "sha256": "5767e4aaf2e4a7a88e995afb3bfd941a85c1a03820a3d611c7ae8448a366f896"}, "downloads": -1, "filename": "django-csvimport-2.2.tar.gz", "has_sig": false, "md5_digest": "c5b66dc536dc80b5430c4ab5f2a6c8ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31703, "upload_time": "2014-10-28T12:47:59", "upload_time_iso_8601": "2014-10-28T12:47:59.567144Z", "url": "https://files.pythonhosted.org/packages/f8/87/af79cb7bc7c1ad46fbc809e6bb87351b75d8abf39e734d0228fb7aaeb788/django-csvimport-2.2.tar.gz", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "045ce2705a7dec0a69e4257853d76ed8", "sha256": "05fdb7bd6a4410e877df7750d4a744c0043f4b069fafe803d51085cb24abd359"}, "downloads": -1, "filename": "django-csvimport-2.3.tar.gz", "has_sig": false, "md5_digest": "045ce2705a7dec0a69e4257853d76ed8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34057, "upload_time": "2014-10-30T15:54:02", "upload_time_iso_8601": "2014-10-30T15:54:02.554324Z", "url": "https://files.pythonhosted.org/packages/fd/d6/8616db79ad6dfbf1d0aa5a19f32fde83cbb28b08e6b93e2dbda3b706a85d/django-csvimport-2.3.tar.gz", "yanked": false}], "2.4": [{"comment_text": "", "digests": {"md5": "63ec428ebf5ecc299cf9f97cc9cd6c84", "sha256": "d95b521f4c76fbf238164664a863fde9f83d33efeb65aa217b73de61ce36176c"}, "downloads": -1, "filename": "django-csvimport-2.4.tar.gz", "has_sig": false, "md5_digest": "63ec428ebf5ecc299cf9f97cc9cd6c84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35166, "upload_time": "2014-11-12T11:33:08", "upload_time_iso_8601": "2014-11-12T11:33:08.351771Z", "url": "https://files.pythonhosted.org/packages/6b/b3/77b30e10655313e41866c10442881ce13e982d175d5ccacf65d2f08e00ed/django-csvimport-2.4.tar.gz", "yanked": false}], "2.5": [{"comment_text": "", "digests": {"md5": "8464e36e41eebac5a3d8ef91ee87398e", "sha256": "90632708483c4baa1d95bd13663417f6c1314edfa5828e2589d59c654f01abf6"}, "downloads": -1, "filename": "django-csvimport-2.5.tar.gz", "has_sig": false, "md5_digest": "8464e36e41eebac5a3d8ef91ee87398e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36223, "upload_time": "2016-11-15T15:31:44", "upload_time_iso_8601": "2016-11-15T15:31:44.224686Z", "url": "https://files.pythonhosted.org/packages/dd/76/b790c3f297694d09fb8958c679691502095e9045907f2ce6cd1882006035/django-csvimport-2.5.tar.gz", "yanked": false}], "2.7": [{"comment_text": "", "digests": {"md5": "29d642be2e213d22843f92637da57e04", "sha256": "927bcf9d8ef329895f4dcdd939b0d78621293bc9132b0cdf46fefaee2395b2a8"}, "downloads": -1, "filename": "django-csvimport-2.7.tar.gz", "has_sig": false, "md5_digest": "29d642be2e213d22843f92637da57e04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37667, "upload_time": "2017-05-30T16:21:58", "upload_time_iso_8601": "2017-05-30T16:21:58.577733Z", "url": "https://files.pythonhosted.org/packages/ec/d3/42b96110881ea3ec0da07f22f5abb265b220d48ccf7659082720058bd367/django-csvimport-2.7.tar.gz", "yanked": false}], "2.8": [{"comment_text": "", "digests": {"md5": "cf4b18ee8db266d9882c215602f3b411", "sha256": "7d4852968951413d969956d8665bc2ae2da7569977dfb003a02342a6c923b522"}, "downloads": -1, "filename": "django-csvimport-2.8.tar.gz", "has_sig": false, "md5_digest": "cf4b18ee8db266d9882c215602f3b411", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42848, "upload_time": "2017-06-19T12:39:00", "upload_time_iso_8601": "2017-06-19T12:39:00.187610Z", "url": "https://files.pythonhosted.org/packages/86/57/665bdce92592be83f0e51ab51d1924416ce330d997e3b66bb0595504cf4c/django-csvimport-2.8.tar.gz", "yanked": false}], "2.9": [{"comment_text": "", "digests": {"md5": "29a3b0b917e721ab6f2a8cc4ddd71591", "sha256": "eb040cce99ab54ed2444cf1b9da879c63df4c37ed2c3dc7a8ddcd6e078798af0"}, "downloads": -1, "filename": "django-csvimport-2.9.tar.gz", "has_sig": false, "md5_digest": "29a3b0b917e721ab6f2a8cc4ddd71591", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44177, "upload_time": "2017-07-04T19:01:05", "upload_time_iso_8601": "2017-07-04T19:01:05.896955Z", "url": "https://files.pythonhosted.org/packages/9e/cc/4573ec79e09979de6f7d22475e3cb341e6d672ed17f5cc2bed1feca971fe/django-csvimport-2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2fec26afcba185320ef5de78e82afc1a", "sha256": "9a7e03a74df3c2a2621f3454a4a91c6ff8d237bbda15441a016c8b531a5acac9"}, "downloads": -1, "filename": "django-csvimport-2.15.tar.gz", "has_sig": false, "md5_digest": "2fec26afcba185320ef5de78e82afc1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48175, "upload_time": "2020-04-27T12:21:46", "upload_time_iso_8601": "2020-04-27T12:21:46.274840Z", "url": "https://files.pythonhosted.org/packages/8b/da/743157770538027bd96f3e81a12e56d1c40bc9e61d861ea2c6994eb22b27/django-csvimport-2.15.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:45 2020"}