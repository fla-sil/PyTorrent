{"info": {"author": "Libor Martinek", "author_email": "libasmartinek@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Quality Assurance"], "description": "# aedificator\nPython project scaffolding tool.\n\n## Installation\n\n```bash\n$ pip install aedificator\n```\n\n## Usage\nIn the directory where you want the scaffolding to happen, type\n```bash\n$ aedificate your_project_name\n```\nThis will create a following structure:\n```\ncurrent_working_directory\n\u2502   .dockerignore    \n\u2502   .gitignore\n\u2502   dev-requirements.txt\n\u2502   setup.cfg\n\u2502   setup.py\n\u2502   requirements.txt\n\u2502   tox.ini\n\u2514\u2500\u2500\u2500src\n\u2502   \u2514\u2500\u2500\u2500your_project_name\n\u2502       \u2502   __init__.py\n\u2502   \n\u2514\u2500\u2500\u2500tests\n    \u2502   __init__.py\n```\n\nYou can now start putting your code in the `src/your_project_name` directory. \n\n---------------------------------------------------------------------------------------\nTo start developing, first, tweak `setup.py` file and type (preferably in some\ndedicated virtual environment)\n```bash\n$ python setup.py develop\n```\n---------------------------------------------------------------------------------------\nAedificator comes with preconfigured formatting, linting, type checking and testing\noptions, leveraging the power of `tox`. If you do not have `tox` installed, type\n```bash\n$ pip install -U -r dev-requirements.txt \n```\n\nNow, use\n```bash\n$ tox -e linters\n```\nfor formatting, linting, and type checking (or `tox -e format|flake8|mypy` for just one\nof them) and\n```bash\n$ tox -e py37|py38\n```\nfor your test suites. \n\nUse\n```\n$ tox\n``` \nif you want it all. ;)\n\n---------------------------------------------------------------------------------------\nA small note: `tox` will fail as long as you have no tests in your `tests` directory.\nIf you like to see green colour, while you still have no tests, limit yourself to\n`tox -e linters` (and hurry to add some tests)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bibajz/aedificator", "keywords": "automation scaffolding", "license": "", "maintainer": "", "maintainer_email": "", "name": "aedificator", "package_url": "https://pypi.org/project/aedificator/", "platform": "", "project_url": "https://pypi.org/project/aedificator/", "project_urls": {"Homepage": "https://github.com/bibajz/aedificator"}, "release_url": "https://pypi.org/project/aedificator/1.1.3/", "requires_dist": ["Jinja2", "click"], "requires_python": "", "summary": "aedificator - Python project scaffolding tool", "version": "1.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aedificator</h1>\n<p>Python project scaffolding tool.</p>\n<h2>Installation</h2>\n<pre>$ pip install aedificator\n</pre>\n<h2>Usage</h2>\n<p>In the directory where you want the scaffolding to happen, type</p>\n<pre>$ aedificate your_project_name\n</pre>\n<p>This will create a following structure:</p>\n<pre><code>current_working_directory\n\u2502   .dockerignore    \n\u2502   .gitignore\n\u2502   dev-requirements.txt\n\u2502   setup.cfg\n\u2502   setup.py\n\u2502   requirements.txt\n\u2502   tox.ini\n\u2514\u2500\u2500\u2500src\n\u2502   \u2514\u2500\u2500\u2500your_project_name\n\u2502       \u2502   __init__.py\n\u2502   \n\u2514\u2500\u2500\u2500tests\n    \u2502   __init__.py\n</code></pre>\n<p>You can now start putting your code in the <code>src/your_project_name</code> directory.</p>\n<hr>\n<p>To start developing, first, tweak <code>setup.py</code> file and type (preferably in some\ndedicated virtual environment)</p>\n<pre>$ python setup.py develop\n</pre>\n<hr>\n<p>Aedificator comes with preconfigured formatting, linting, type checking and testing\noptions, leveraging the power of <code>tox</code>. If you do not have <code>tox</code> installed, type</p>\n<pre>$ pip install -U -r dev-requirements.txt \n</pre>\n<p>Now, use</p>\n<pre>$ tox -e linters\n</pre>\n<p>for formatting, linting, and type checking (or <code>tox -e format|flake8|mypy</code> for just one\nof them) and</p>\n<pre>$ tox -e py37<span class=\"p\">|</span>py38\n</pre>\n<p>for your test suites.</p>\n<p>Use</p>\n<pre><code>$ tox\n</code></pre>\n<p>if you want it all. ;)</p>\n<hr>\n<p>A small note: <code>tox</code> will fail as long as you have no tests in your <code>tests</code> directory.\nIf you like to see green colour, while you still have no tests, limit yourself to\n<code>tox -e linters</code> (and hurry to add some tests)</p>\n\n          </div>"}, "last_serial": 7106021, "releases": {"1.1.3": [{"comment_text": "", "digests": {"md5": "0748721b4f7df094b2d135892b4e9d43", "sha256": "9014c17b99f8885ed58a0aa54e565bf3af350f486d3c18618ea7a9a2006b6d66"}, "downloads": -1, "filename": "aedificator-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0748721b4f7df094b2d135892b4e9d43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6390, "upload_time": "2020-04-26T17:39:33", "upload_time_iso_8601": "2020-04-26T17:39:33.784356Z", "url": "https://files.pythonhosted.org/packages/8f/43/df8fe82df9d27539f202ea9963b1896ec0b04f14150366a9873e00862991/aedificator-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acaa764b6a818f306daac7f2cdd22ba0", "sha256": "360aea3bfdbb614b1fc0fc13b6f97228a6788070fa9eb13af941164d2e46f79c"}, "downloads": -1, "filename": "aedificator-1.1.3.tar.gz", "has_sig": false, "md5_digest": "acaa764b6a818f306daac7f2cdd22ba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3320, "upload_time": "2020-04-26T17:39:35", "upload_time_iso_8601": "2020-04-26T17:39:35.994988Z", "url": "https://files.pythonhosted.org/packages/29/09/ce542ed84c812892c02966f67d08cfd0402f3fa70721c35d433fa67c49f3/aedificator-1.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0748721b4f7df094b2d135892b4e9d43", "sha256": "9014c17b99f8885ed58a0aa54e565bf3af350f486d3c18618ea7a9a2006b6d66"}, "downloads": -1, "filename": "aedificator-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0748721b4f7df094b2d135892b4e9d43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6390, "upload_time": "2020-04-26T17:39:33", "upload_time_iso_8601": "2020-04-26T17:39:33.784356Z", "url": "https://files.pythonhosted.org/packages/8f/43/df8fe82df9d27539f202ea9963b1896ec0b04f14150366a9873e00862991/aedificator-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acaa764b6a818f306daac7f2cdd22ba0", "sha256": "360aea3bfdbb614b1fc0fc13b6f97228a6788070fa9eb13af941164d2e46f79c"}, "downloads": -1, "filename": "aedificator-1.1.3.tar.gz", "has_sig": false, "md5_digest": "acaa764b6a818f306daac7f2cdd22ba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3320, "upload_time": "2020-04-26T17:39:35", "upload_time_iso_8601": "2020-04-26T17:39:35.994988Z", "url": "https://files.pythonhosted.org/packages/29/09/ce542ed84c812892c02966f67d08cfd0402f3fa70721c35d433fa67c49f3/aedificator-1.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:01 2020"}