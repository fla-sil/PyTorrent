{"info": {"author": "Clearcode - The A Room", "author_email": "thearoom@clearcode.cc", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. image:: https://raw.githubusercontent.com/ClearcodeHQ/pytest-postgresql/master/logo.png\n    :width: 100px\n    :height: 100px\n\npytest-postgresql\n=================\n\n.. image:: https://img.shields.io/pypi/v/pytest-postgresql.svg\n    :target: https://pypi.python.org/pypi/pytest-postgresql/\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/wheel/pytest-postgresql.svg\n    :target: https://pypi.python.org/pypi/pytest-postgresql/\n    :alt: Wheel Status\n\n.. image:: https://img.shields.io/pypi/pyversions/pytest-postgresql.svg\n    :target: https://pypi.python.org/pypi/pytest-postgresql/\n    :alt: Supported Python Versions\n\n.. image:: https://img.shields.io/pypi/l/pytest-postgresql.svg\n    :target: https://pypi.python.org/pypi/pytest-postgresql/\n    :alt: License\n\nPackage status\n--------------\n\n.. image:: https://travis-ci.org/ClearcodeHQ/pytest-postgresql.svg?branch=v2.3.0\n    :target: https://travis-ci.org/ClearcodeHQ/pytest-postgresql\n    :alt: Tests\n\n.. image:: https://coveralls.io/repos/ClearcodeHQ/pytest-postgresql/badge.png?branch=v2.3.0\n    :target: https://coveralls.io/r/ClearcodeHQ/pytest-postgresql?branch=v2.3.0\n    :alt: Coverage Status\n\nWhat is this?\n=============\n\nThis is a pytest plugin, that enables you to test your code that relies on a running PostgreSQL Database.\nIt allows you to specify fixtures for PostgreSQL process and client.\n\nHow to use\n==========\n\n.. warning::\n\n    Tested on PostgreSQL versions > 9.x. See tests for more details.\n\nInstall with:\n\n.. code-block:: sh\n\n    pip install pytest-postgresql\n\nYou will also need to install ``psycopg2``, or one of its alternative packagings such as ``psycopg2-binary``\n(pre-compiled wheels) or ``psycopg2cffi`` (CFFI based, useful on PyPy).\n\nPlugin contains three fixtures:\n\n* **postgresql** - it's a client fixture that has functional scope. After each test it ends all leftover connections, and drops test database from PostgreSQL ensuring repeatability.\n* **postgresql_proc** - session scoped fixture, that starts PostgreSQL instance at it's first use and stops at the end of the tests.\n* **postgresql_nooproc** - a nooprocess fixture, that's connecting to already running postgresql\n\nSimply include one of these fixtures into your tests fixture list.\n\nYou can also create additional postgresql client and process fixtures if you'd need to:\n\n\n.. code-block:: python\n\n    from pytest_postgresql import factories\n\n    postgresql_my_proc = factories.postgresql_proc(\n        port=None, unixsocketdir='/var/run')\n    postgresql_my = factories.postgresql('postgresql_my_proc')\n\n.. note::\n\n    Each PostgreSQL process fixture can be configured in a different way than the others through the fixture factory arguments.\n\nConnecting to already existing postgresql database\n--------------------------------------------------\n\nSome projects are using already running postgresql servers (ie on docker instances).\nIn order to connect to them, one would be using the ``postgresql_nooproc`` fixture.\n\n.. code-block:: python\n\n    postgresql_external = factories.postgresql('postgresql_nooproc')\n\nBy default the  ``postgresql_nooproc`` fixture would connect to postgresql instance using **5432** port. Standard configuration options apply to it.\n\nThese are the configuration options that are working on all levels with the ``postgresql_nooproc`` fixture:\n\nConfiguration\n=============\n\nYou can define your settings in three ways, it's fixture factory argument, command line option and pytest.ini configuration option.\nYou can pick which you prefer, but remember that these settings are handled in the following order:\n\n    * ``Fixture factory argument``\n    * ``Command line option``\n    * ``Configuration option in your pytest.ini file``\n\n\n.. list-table:: Configuration options\n   :header-rows: 1\n\n   * - PostgreSQL option\n     - Fixture factory argument\n     - Command line option\n     - pytest.ini option\n     - Noop process fixture\n     - Default\n   * - Path to executable\n     - executable\n     - --postgresql-exec\n     - postgresql_exec\n     - -\n     - /usr/lib/postgresql/9.1/bin/pg_ctl\n   * - host\n     - host\n     - --postgresql-host\n     - postgresql_host\n     - yes\n     - 127.0.0.1\n   * - port\n     - port\n     - --postgresql-port\n     - postgresql_port\n     - yes (5432)\n     - random\n   * - postgresql user\n     - user\n     - --postgresql-user\n     - postgresql_user\n     - yes\n     - postgres\n   * - password\n     - password\n     - --postgresql-password\n     - postgresql_password\n     - yes\n     -\n   * - Starting parameters\n     - startparams\n     - --postgresql-startparams\n     - postgresql_startparams\n     - -\n     - -w\n   * - Log filename's prefix\n     - logsprefix\n     - --postgresql-logsprefix\n     - postgresql_logsprefix\n     - -\n     -\n   * - Location for unixsockets\n     - unixsocket\n     - --postgresql-unixsocketdir\n     - postgresql_unixsocketdir\n     - -\n     - $TMPDIR\n   * - Database name\n     - db_name\n     - --postgresql-dbname\n     - postgresql_dbname\n     - -\n     - test\n   * - PostgreSQL connection options\n     - options\n     - --postgresql-options\n     - postgresql_options\n     - yes\n     -\n\n\nExample usage:\n\n* pass it as an argument in your own fixture\n\n    .. code-block:: python\n\n        postgresql_proc = factories.postgresql_proc(\n            port=8888)\n\n* use ``--postgresql-port`` command line option when you run your tests\n\n    .. code-block::\n\n        py.test tests --postgresql-port=8888\n\n\n* specify your port as ``postgresql_port`` in your ``pytest.ini`` file.\n\n    To do so, put a line like the following under the ``[pytest]`` section of your ``pytest.ini``:\n\n    .. code-block:: ini\n\n        [pytest]\n        postgresql_port = 8888\n\nMaintaining database state outside of the fixtures\n--------------------------------------------------\n\nIt is possible and appears it's used in other libraries for tests,\nto maintain database state with the use of the ``pytest-postgresql`` database\nmanaging functionality:\n\nFor this import DatabaseJanitor and use its init and drop methods:\n\n\n.. code-block:: python\n\n    from pytest_postgresql.factories import DatabaseJanitor\n\n    # variable definition\n\n    janitor = DatabaseJanitor(user, host, port, db_name, version)\n    janitor.init()\n    # your code, or yield\n    janitor.drop()\n    # at this moment you'll have clean database step\n\nor use it as a context manager:\n\n.. code-block:: python\n\n    from pytest_postgresql.factories import DatabaseJanitor\n\n    # variable definition\n\n    with DatabaseJanitor(user, host, port, db_name, version):\n        # do something here\n\nPackage resources\n-----------------\n\n* Bug tracker: https://github.com/ClearcodeHQ/pytest-postgresql/issues\n\n\n\nCHANGELOG\n=========\n\n2.3.0\n----------\n\n- [feature] Allow to set password for postgresql. Use it throughout the flow.\n- [bugfix] Default Janitor's connections to postgres database. When using custom users, \n  postgres attempts to use user's database and it might not exist.\n- [bugfix] NoopExecutor connects to read version by context manager to properly handle cases\n  where it can't connect to the server.\n\n2.2.1\n----------\n\n- [bugfix] Fix drop_postgresql_database to actually use DatabaseJanitor.drop instead of an init\n\n2.2.0\n----------\n\n- [feature] ability to properly connect to already existing postgresql server using ``postgresql_nooproc`` fixture.\n\n2.1.0\n----------\n\n- [enhancement] Gather helper functions maintaining postgresql database in DatabaseJanitor class.\n- [deprecate] Deprecate ``init_postgresql_database`` in favour of ``DatabaseJanitor.init``\n- [deprecate] Deprecate ``drop_postgresql_database`` in favour of ``DatabaseJanitor.drop``\n\n2.0.0\n----------\n\n- [feature] Drop support for python 2.7. From now on, only support python 3.5 and up\n- [feature] Ability to configure database name through plugin options\n- [enhancement] Use tmpdir_factory. Drop ``logsdir`` parameter\n- [ehnancement] Support only Postgresql 9.0 and up\n- [bugfix] Always start postgresql with LC_ALL, LC_TYPE and LANG set to C.UTF-8.\n  It makes postgresql start in english.\n\n1.4.1\n----------\n\n- [bugfix] Allow creating test databse with hyphens \n\n1.4.0\n----------\n\n- [enhancements] Ability to configure additional options for postgresql process and connection\n- [bugfix] - removed hard dependency on ``psycopg2``, allowing any of its alternative packages, like\n  ``psycopg2-binary``, to be used.\n- [maintenance] Drop support for python 3.4 and use 3.7 instead\n\n1.3.4\n----------\n\n- [bugfix] properly detect if executor running and clean after executor is being stopped\n\n    .. note::\n\n        Previously if a test failed, there was a possibility of the executor being removed when python was closing,\n        causing it to print ignored errors on already unloaded modules.\n\n1.3.3\n----------\n\n- [enhancement] use executor's context manager to start/stop postrgesql server in a fixture\n\n1.3.2\n----------\n\n- [bugfix] version regexp to correctly catch postgresql 10\n\n1.3.1\n----------\n\n- [enhancement] explicitly turn off logging_collector\n\n1.3.0\n----------\n\n- [feature] pypy compatibility\n\n1.2.0\n----------\n\n- [bugfix] - disallow connection to database before it gets dropped.\n\n    .. note::\n\n        Otherwise it caused random test subprocess to connect again and this the drop was unsucessfull which resulted in many more test failes on setup.\n\n- [cleanup] - removed path.py dependency\n\n1.1.1\n----------\n\n- [bugfix] - Fixing the default pg_ctl path creation\n\n1.1.0\n----------\n\n- [feature] - migrate usage of getfuncargvalue to getfixturevalue. require at least pytest 3.0.0\n\n1.0.0\n----------\n\n- create command line and pytest.ini configuration options for postgresql starting parameters\n- create command line and pytest.ini configuration options for postgresql username\n- make the port random by default\n- create command line and pytest.ini configuration options for executable\n- create command line and pytest.ini configuration options for host\n- create command line and pytest.ini configuration options for port\n- Extracted code from pytest-dbfixtures\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ClearcodeHQ/pytest-postgresql", "keywords": "tests py.test pytest fixture postgresql", "license": "LGPLv3+", "maintainer": "", "maintainer_email": "", "name": "pytest-postgresql", "package_url": "https://pypi.org/project/pytest-postgresql/", "platform": "", "project_url": "https://pypi.org/project/pytest-postgresql/", "project_urls": {"Homepage": "https://github.com/ClearcodeHQ/pytest-postgresql"}, "release_url": "https://pypi.org/project/pytest-postgresql/2.3.0/", "requires_dist": ["pytest (>=3.0.0)", "port-for", "mirakuru (>=2.0.0)", "sphinx ; extra == 'docs'", "pytest-cov (==2.7.1) ; extra == 'tests'", "pytest-xdist (==1.29.0) ; extra == 'tests'"], "requires_python": ">=3.5", "summary": "Postgresql fixtures and fixture factories for Pytest.", "version": "2.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://raw.githubusercontent.com/ClearcodeHQ/pytest-postgresql/master/logo.png\" height=\"100px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ca63e157496ea13d0c7d3a23d257bebc3b282dd/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f436c656172636f646548512f7079746573742d706f737467726573716c2f6d61737465722f6c6f676f2e706e67\" width=\"100px\">\n<div id=\"pytest-postgresql\">\n<h2>pytest-postgresql</h2>\n<a href=\"https://pypi.python.org/pypi/pytest-postgresql/\" rel=\"nofollow\"><img alt=\"Latest PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5ac1031c46f00dd1907020e9a71b56e4d9542f5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079746573742d706f737467726573716c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-postgresql/\" rel=\"nofollow\"><img alt=\"Wheel Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95180368f081e65ac038f3167f13cd36df034345/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f7079746573742d706f737467726573716c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-postgresql/\" rel=\"nofollow\"><img alt=\"Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ed60a747c202b8989d398f688a1bf52a144048b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079746573742d706f737467726573716c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pytest-postgresql/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b921aa4ba2085acbcd94e4f3fa17ac6cd72dc804/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7079746573742d706f737467726573716c2e737667\"></a>\n<div id=\"package-status\">\n<h3>Package status</h3>\n<a href=\"https://travis-ci.org/ClearcodeHQ/pytest-postgresql\" rel=\"nofollow\"><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41e315a6765a0f6a019b906ff67fb8d2c700a5e2/68747470733a2f2f7472617669732d63692e6f72672f436c656172636f646548512f7079746573742d706f737467726573716c2e7376673f6272616e63683d76322e332e30\"></a>\n<a href=\"https://coveralls.io/r/ClearcodeHQ/pytest-postgresql?branch=v2.3.0\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c59e1e232c2c27a73baa75b303c6fc3c76448b1c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f436c656172636f646548512f7079746573742d706f737467726573716c2f62616467652e706e673f6272616e63683d76322e332e30\"></a>\n</div>\n</div>\n<div id=\"what-is-this\">\n<h2>What is this?</h2>\n<p>This is a pytest plugin, that enables you to test your code that relies on a running PostgreSQL Database.\nIt allows you to specify fixtures for PostgreSQL process and client.</p>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<div>\n<p>Warning</p>\n<p>Tested on PostgreSQL versions &gt; 9.x. See tests for more details.</p>\n</div>\n<p>Install with:</p>\n<pre>pip install pytest-postgresql\n</pre>\n<p>You will also need to install <tt>psycopg2</tt>, or one of its alternative packagings such as <tt><span class=\"pre\">psycopg2-binary</span></tt>\n(pre-compiled wheels) or <tt>psycopg2cffi</tt> (CFFI based, useful on PyPy).</p>\n<p>Plugin contains three fixtures:</p>\n<ul>\n<li><strong>postgresql</strong> - it\u2019s a client fixture that has functional scope. After each test it ends all leftover connections, and drops test database from PostgreSQL ensuring repeatability.</li>\n<li><strong>postgresql_proc</strong> - session scoped fixture, that starts PostgreSQL instance at it\u2019s first use and stops at the end of the tests.</li>\n<li><strong>postgresql_nooproc</strong> - a nooprocess fixture, that\u2019s connecting to already running postgresql</li>\n</ul>\n<p>Simply include one of these fixtures into your tests fixture list.</p>\n<p>You can also create additional postgresql client and process fixtures if you\u2019d need to:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_postgresql</span> <span class=\"kn\">import</span> <span class=\"n\">factories</span>\n\n<span class=\"n\">postgresql_my_proc</span> <span class=\"o\">=</span> <span class=\"n\">factories</span><span class=\"o\">.</span><span class=\"n\">postgresql_proc</span><span class=\"p\">(</span>\n    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">unixsocketdir</span><span class=\"o\">=</span><span class=\"s1\">'/var/run'</span><span class=\"p\">)</span>\n<span class=\"n\">postgresql_my</span> <span class=\"o\">=</span> <span class=\"n\">factories</span><span class=\"o\">.</span><span class=\"n\">postgresql</span><span class=\"p\">(</span><span class=\"s1\">'postgresql_my_proc'</span><span class=\"p\">)</span>\n</pre>\n<div>\n<p>Note</p>\n<p>Each PostgreSQL process fixture can be configured in a different way than the others through the fixture factory arguments.</p>\n</div>\n<div id=\"connecting-to-already-existing-postgresql-database\">\n<h3>Connecting to already existing postgresql database</h3>\n<p>Some projects are using already running postgresql servers (ie on docker instances).\nIn order to connect to them, one would be using the <tt>postgresql_nooproc</tt> fixture.</p>\n<pre><span class=\"n\">postgresql_external</span> <span class=\"o\">=</span> <span class=\"n\">factories</span><span class=\"o\">.</span><span class=\"n\">postgresql</span><span class=\"p\">(</span><span class=\"s1\">'postgresql_nooproc'</span><span class=\"p\">)</span>\n</pre>\n<p>By default the  <tt>postgresql_nooproc</tt> fixture would connect to postgresql instance using <strong>5432</strong> port. Standard configuration options apply to it.</p>\n<p>These are the configuration options that are working on all levels with the <tt>postgresql_nooproc</tt> fixture:</p>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>You can define your settings in three ways, it\u2019s fixture factory argument, command line option and pytest.ini configuration option.\nYou can pick which you prefer, but remember that these settings are handled in the following order:</p>\n<blockquote>\n<ul>\n<li><tt>Fixture factory argument</tt></li>\n<li><tt>Command line option</tt></li>\n<li><tt>Configuration option in your pytest.ini file</tt></li>\n</ul>\n</blockquote>\n<table>\n<caption>Configuration options</caption>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>PostgreSQL option</th>\n<th>Fixture factory argument</th>\n<th>Command line option</th>\n<th>pytest.ini option</th>\n<th>Noop process fixture</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Path to executable</td>\n<td>executable</td>\n<td>\u2013postgresql-exec</td>\n<td>postgresql_exec</td>\n<td><ul>\n<li>\n</ul>\n</td>\n<td>/usr/lib/postgresql/9.1/bin/pg_ctl</td>\n</tr>\n<tr><td>host</td>\n<td>host</td>\n<td>\u2013postgresql-host</td>\n<td>postgresql_host</td>\n<td>yes</td>\n<td>127.0.0.1</td>\n</tr>\n<tr><td>port</td>\n<td>port</td>\n<td>\u2013postgresql-port</td>\n<td>postgresql_port</td>\n<td>yes (5432)</td>\n<td>random</td>\n</tr>\n<tr><td>postgresql user</td>\n<td>user</td>\n<td>\u2013postgresql-user</td>\n<td>postgresql_user</td>\n<td>yes</td>\n<td>postgres</td>\n</tr>\n<tr><td>password</td>\n<td>password</td>\n<td>\u2013postgresql-password</td>\n<td>postgresql_password</td>\n<td>yes</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>Starting parameters</td>\n<td>startparams</td>\n<td>\u2013postgresql-startparams</td>\n<td>postgresql_startparams</td>\n<td><ul>\n<li>\n</ul>\n</td>\n<td>-w</td>\n</tr>\n<tr><td>Log filename\u2019s prefix</td>\n<td>logsprefix</td>\n<td>\u2013postgresql-logsprefix</td>\n<td>postgresql_logsprefix</td>\n<td><ul>\n<li>\n</ul>\n</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>Location for unixsockets</td>\n<td>unixsocket</td>\n<td>\u2013postgresql-unixsocketdir</td>\n<td>postgresql_unixsocketdir</td>\n<td><ul>\n<li>\n</ul>\n</td>\n<td>$TMPDIR</td>\n</tr>\n<tr><td>Database name</td>\n<td>db_name</td>\n<td>\u2013postgresql-dbname</td>\n<td>postgresql_dbname</td>\n<td><ul>\n<li>\n</ul>\n</td>\n<td>test</td>\n</tr>\n<tr><td>PostgreSQL connection options</td>\n<td>options</td>\n<td>\u2013postgresql-options</td>\n<td>postgresql_options</td>\n<td>yes</td>\n<td>\u00a0</td>\n</tr>\n</tbody>\n</table>\n<p>Example usage:</p>\n<ul>\n<li><p>pass it as an argument in your own fixture</p>\n<blockquote>\n<pre><span class=\"n\">postgresql_proc</span> <span class=\"o\">=</span> <span class=\"n\">factories</span><span class=\"o\">.</span><span class=\"n\">postgresql_proc</span><span class=\"p\">(</span>\n    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8888</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</li>\n<li><p>use <tt><span class=\"pre\">--postgresql-port</span></tt> command line option when you run your tests</p>\n<blockquote>\n<pre>py.test tests --postgresql-port=8888\n</pre>\n</blockquote>\n</li>\n<li><p>specify your port as <tt>postgresql_port</tt> in your <tt>pytest.ini</tt> file.</p>\n<blockquote>\n<p>To do so, put a line like the following under the <tt>[pytest]</tt> section of your <tt>pytest.ini</tt>:</p>\n<pre><span class=\"k\">[pytest]</span>\n<span class=\"na\">postgresql_port</span> <span class=\"o\">=</span> <span class=\"s\">8888</span>\n</pre>\n</blockquote>\n</li>\n</ul>\n<div id=\"maintaining-database-state-outside-of-the-fixtures\">\n<h3>Maintaining database state outside of the fixtures</h3>\n<p>It is possible and appears it\u2019s used in other libraries for tests,\nto maintain database state with the use of the <tt><span class=\"pre\">pytest-postgresql</span></tt> database\nmanaging functionality:</p>\n<p>For this import DatabaseJanitor and use its init and drop methods:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_postgresql.factories</span> <span class=\"kn\">import</span> <span class=\"n\">DatabaseJanitor</span>\n\n<span class=\"c1\"># variable definition</span>\n\n<span class=\"n\">janitor</span> <span class=\"o\">=</span> <span class=\"n\">DatabaseJanitor</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">db_name</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">)</span>\n<span class=\"n\">janitor</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>\n<span class=\"c1\"># your code, or yield</span>\n<span class=\"n\">janitor</span><span class=\"o\">.</span><span class=\"n\">drop</span><span class=\"p\">()</span>\n<span class=\"c1\"># at this moment you'll have clean database step</span>\n</pre>\n<p>or use it as a context manager:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_postgresql.factories</span> <span class=\"kn\">import</span> <span class=\"n\">DatabaseJanitor</span>\n\n<span class=\"c1\"># variable definition</span>\n\n<span class=\"k\">with</span> <span class=\"n\">DatabaseJanitor</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"n\">db_name</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do something here</span>\n</pre>\n</div>\n<div id=\"package-resources\">\n<h3>Package resources</h3>\n<ul>\n<li>Bug tracker: <a href=\"https://github.com/ClearcodeHQ/pytest-postgresql/issues\" rel=\"nofollow\">https://github.com/ClearcodeHQ/pytest-postgresql/issues</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>CHANGELOG</h2>\n<div id=\"id1\">\n<h3>2.3.0</h3>\n<ul>\n<li>[feature] Allow to set password for postgresql. Use it throughout the flow.</li>\n<li>[bugfix] Default Janitor\u2019s connections to postgres database. When using custom users,\npostgres attempts to use user\u2019s database and it might not exist.</li>\n<li>[bugfix] NoopExecutor connects to read version by context manager to properly handle cases\nwhere it can\u2019t connect to the server.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>2.2.1</h3>\n<ul>\n<li>[bugfix] Fix drop_postgresql_database to actually use DatabaseJanitor.drop instead of an init</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>2.2.0</h3>\n<ul>\n<li>[feature] ability to properly connect to already existing postgresql server using <tt>postgresql_nooproc</tt> fixture.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>2.1.0</h3>\n<ul>\n<li>[enhancement] Gather helper functions maintaining postgresql database in DatabaseJanitor class.</li>\n<li>[deprecate] Deprecate <tt>init_postgresql_database</tt> in favour of <tt>DatabaseJanitor.init</tt></li>\n<li>[deprecate] Deprecate <tt>drop_postgresql_database</tt> in favour of <tt>DatabaseJanitor.drop</tt></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>2.0.0</h3>\n<ul>\n<li>[feature] Drop support for python 2.7. From now on, only support python 3.5 and up</li>\n<li>[feature] Ability to configure database name through plugin options</li>\n<li>[enhancement] Use tmpdir_factory. Drop <tt>logsdir</tt> parameter</li>\n<li>[ehnancement] Support only Postgresql 9.0 and up</li>\n<li>[bugfix] Always start postgresql with LC_ALL, LC_TYPE and LANG set to C.UTF-8.\nIt makes postgresql start in english.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.4.1</h3>\n<ul>\n<li>[bugfix] Allow creating test databse with hyphens</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.4.0</h3>\n<ul>\n<li>[enhancements] Ability to configure additional options for postgresql process and connection</li>\n<li>[bugfix] - removed hard dependency on <tt>psycopg2</tt>, allowing any of its alternative packages, like\n<tt><span class=\"pre\">psycopg2-binary</span></tt>, to be used.</li>\n<li>[maintenance] Drop support for python 3.4 and use 3.7 instead</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.3.4</h3>\n<ul>\n<li><p>[bugfix] properly detect if executor running and clean after executor is being stopped</p>\n<blockquote>\n<div>\n<p>Note</p>\n<p>Previously if a test failed, there was a possibility of the executor being removed when python was closing,\ncausing it to print ignored errors on already unloaded modules.</p>\n</div>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.3.3</h3>\n<ul>\n<li>[enhancement] use executor\u2019s context manager to start/stop postrgesql server in a fixture</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.3.2</h3>\n<ul>\n<li>[bugfix] version regexp to correctly catch postgresql 10</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.3.1</h3>\n<ul>\n<li>[enhancement] explicitly turn off logging_collector</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>1.3.0</h3>\n<ul>\n<li>[feature] pypy compatibility</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>1.2.0</h3>\n<ul>\n<li><p>[bugfix] - disallow connection to database before it gets dropped.</p>\n<blockquote>\n<div>\n<p>Note</p>\n<p>Otherwise it caused random test subprocess to connect again and this the drop was unsucessfull which resulted in many more test failes on setup.</p>\n</div>\n</blockquote>\n</li>\n<li><p>[cleanup] - removed path.py dependency</p>\n</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>1.1.1</h3>\n<ul>\n<li>[bugfix] - Fixing the default pg_ctl path creation</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>1.1.0</h3>\n<ul>\n<li>[feature] - migrate usage of getfuncargvalue to getfixturevalue. require at least pytest 3.0.0</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>1.0.0</h3>\n<ul>\n<li>create command line and pytest.ini configuration options for postgresql starting parameters</li>\n<li>create command line and pytest.ini configuration options for postgresql username</li>\n<li>make the port random by default</li>\n<li>create command line and pytest.ini configuration options for executable</li>\n<li>create command line and pytest.ini configuration options for host</li>\n<li>create command line and pytest.ini configuration options for port</li>\n<li>Extracted code from pytest-dbfixtures</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6842177, "releases": {"0.0.0": [], "1.0.0": [{"comment_text": "", "digests": {"md5": "597aab161394fbabf50262921ad710a2", "sha256": "1a4bd8148610780582c4c16f7e668c95c65ce31d3ef6ff81f24d2aefdee77e6f"}, "downloads": -1, "filename": "pytest_postgresql-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "597aab161394fbabf50262921ad710a2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14555, "upload_time": "2016-10-10T22:13:39", "upload_time_iso_8601": "2016-10-10T22:13:39.727098Z", "url": "https://files.pythonhosted.org/packages/73/f6/9132e5975415becf7dc131dfd8cb761d0eda00e3659ea4b6618234cc055c/pytest_postgresql-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b39d6d0e45880510c22401175e9f981f", "sha256": "046854bacf2313cf1fd9c8539f9b3979a0fcb73fe356312c90eab515f796aa98"}, "downloads": -1, "filename": "pytest-postgresql-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b39d6d0e45880510c22401175e9f981f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16906, "upload_time": "2016-10-10T22:13:42", "upload_time_iso_8601": "2016-10-10T22:13:42.257202Z", "url": "https://files.pythonhosted.org/packages/ad/c6/e09c743a0a897ece90a60eb2a8521627c7f38f2aacb647ae3dab836b584a/pytest-postgresql-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "a77ea5b650d24211e134ed625bf25b04", "sha256": "497faa32af8f81d5f090adc54d95895a2bfee3f1d237021ee8d45ea2e2341024"}, "downloads": -1, "filename": "pytest_postgresql-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a77ea5b650d24211e134ed625bf25b04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14679, "upload_time": "2016-10-24T23:16:37", "upload_time_iso_8601": "2016-10-24T23:16:37.291025Z", "url": "https://files.pythonhosted.org/packages/77/e6/6636ec832e6781ffbf0bf2a24256bc1d355984f0cb01e3df9d9c80c8b795/pytest_postgresql-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bed7ff6b90cc4b03feb83a55ce78ac0", "sha256": "38aa1dd642a650c91ea9ac1e6460e45905eb24f5c74f455407ef475cddf9d4bb"}, "downloads": -1, "filename": "pytest-postgresql-1.1.0.tar.gz", "has_sig": false, "md5_digest": "8bed7ff6b90cc4b03feb83a55ce78ac0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16976, "upload_time": "2016-10-24T23:16:39", "upload_time_iso_8601": "2016-10-24T23:16:39.143342Z", "url": "https://files.pythonhosted.org/packages/d4/59/94195de88a124a81d5e1fbec3275eda07325eec4029ea181de6ba9cb028f/pytest-postgresql-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "ad1a7b774543308df3ed5fa9994bb9af", "sha256": "d7badfa680369d68e4a311b4c2ea347a62d6c9d8f269860445aa98ece3b0c383"}, "downloads": -1, "filename": "pytest_postgresql-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ad1a7b774543308df3ed5fa9994bb9af", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14753, "upload_time": "2016-12-15T20:25:17", "upload_time_iso_8601": "2016-12-15T20:25:17.620202Z", "url": "https://files.pythonhosted.org/packages/1e/4b/0abbee69e4be5434bf62b2a7cfb9e9df01c7da47c58a2b065416a281b515/pytest_postgresql-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9dafc14b185c761eba0f5a8a1bae53c", "sha256": "835537fed648ef0909b1b9e9e7a934f14fd9133cad8fd017ab7e7149b60958d9"}, "downloads": -1, "filename": "pytest-postgresql-1.1.1.tar.gz", "has_sig": false, "md5_digest": "a9dafc14b185c761eba0f5a8a1bae53c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16964, "upload_time": "2016-12-15T20:25:19", "upload_time_iso_8601": "2016-12-15T20:25:19.541000Z", "url": "https://files.pythonhosted.org/packages/35/68/8dddcb91c7473b4b42b29c74d6d7f9cd1930f80ce8ab4c427da57f36fbac/pytest-postgresql-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "941efe6930a9965d90b7be4252ebe610", "sha256": "4f3fb4b0bda3ea7c52f377628b3bbf5c576acafd6d8a82255352ccb62911e6db"}, "downloads": -1, "filename": "pytest_postgresql-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "941efe6930a9965d90b7be4252ebe610", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15082, "upload_time": "2017-01-25T13:09:30", "upload_time_iso_8601": "2017-01-25T13:09:30.636356Z", "url": "https://files.pythonhosted.org/packages/8a/25/d0e7ca2ca99633b3138353c7caf53fa4754394603a0ec73308417fc18761/pytest_postgresql-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c862208744b4eb709197ef8b95c67da", "sha256": "29a985c10b51ae4ed0df64258656d167269c9ca93c12747e0a8f4f543f67be75"}, "downloads": -1, "filename": "pytest-postgresql-1.2.0.tar.gz", "has_sig": false, "md5_digest": "3c862208744b4eb709197ef8b95c67da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17275, "upload_time": "2017-01-25T13:09:32", "upload_time_iso_8601": "2017-01-25T13:09:32.635106Z", "url": "https://files.pythonhosted.org/packages/d6/e1/e83afca3dffc471c2259f24b75a063885ee2c2612217b0004a78cc468b34/pytest-postgresql-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "6346127d29a8943eaa9ebbfa10b6933a", "sha256": "af9f8827396246bf99b5b1a1e5099a639661eade3501562a9a2f62fa61957d0b"}, "downloads": -1, "filename": "pytest_postgresql-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6346127d29a8943eaa9ebbfa10b6933a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15266, "upload_time": "2017-06-14T23:00:46", "upload_time_iso_8601": "2017-06-14T23:00:46.267037Z", "url": "https://files.pythonhosted.org/packages/b7/b5/f3b15cb0432851dcb63263088d877b447a6752a3d84767ba686bd2c45bff/pytest_postgresql-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "176b6b4db7c489e83611aced1f600782", "sha256": "e60459c4cf66d0b6051c38bec3529c0355e60717b4f9090127ffe59d113ca728"}, "downloads": -1, "filename": "pytest-postgresql-1.3.0.tar.gz", "has_sig": false, "md5_digest": "176b6b4db7c489e83611aced1f600782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17459, "upload_time": "2017-06-14T23:00:48", "upload_time_iso_8601": "2017-06-14T23:00:48.119839Z", "url": "https://files.pythonhosted.org/packages/fb/b3/584ff9eb44145614517e366e629a604a9858b61d70df8a6d52f947335b24/pytest-postgresql-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "9ba1bae57724650c84f61c9b8c6ecc3e", "sha256": "88086743b2e8c67346a3bc224c481ef71a88784c8abd00940a95e79797f18dbf"}, "downloads": -1, "filename": "pytest_postgresql-1.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9ba1bae57724650c84f61c9b8c6ecc3e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15373, "upload_time": "2017-10-06T21:20:19", "upload_time_iso_8601": "2017-10-06T21:20:19.274067Z", "url": "https://files.pythonhosted.org/packages/67/fa/177a4d8e21631e11885646e13cc97246d8427796975fdf6e22e742d09ef8/pytest_postgresql-1.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "adad90a156a2f01e1a751dd6c227d5e6", "sha256": "012cfdb2f28f4defe165419bf497f874eac073208d46df28a31dcf6183c3d393"}, "downloads": -1, "filename": "pytest-postgresql-1.3.1.tar.gz", "has_sig": false, "md5_digest": "adad90a156a2f01e1a751dd6c227d5e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17541, "upload_time": "2017-10-06T21:20:20", "upload_time_iso_8601": "2017-10-06T21:20:20.555544Z", "url": "https://files.pythonhosted.org/packages/0b/14/f54280b4dc4aaaedbdbf9c9e2d5c3bd852faa7670c7bf19c48a0bb5d45fb/pytest-postgresql-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "1683850c04e0246b79ae6ea246846696", "sha256": "85d5de8ad42cfbb518c5c645673f469c77a351db07d07b5b2c7120885ed13c13"}, "downloads": -1, "filename": "pytest_postgresql-1.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1683850c04e0246b79ae6ea246846696", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15459, "upload_time": "2017-11-22T10:46:54", "upload_time_iso_8601": "2017-11-22T10:46:54.981398Z", "url": "https://files.pythonhosted.org/packages/c3/4f/c9a87c379188e10289c3a351207d5f95c73621f7342e940f64c95117bbba/pytest_postgresql-1.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c397417d22837d1a60d9de767bab30a", "sha256": "a9df32bcf60e134ea22571b2c5185680f133557ca2eafd2b484ae09f19e20995"}, "downloads": -1, "filename": "pytest-postgresql-1.3.2.tar.gz", "has_sig": false, "md5_digest": "5c397417d22837d1a60d9de767bab30a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17605, "upload_time": "2017-11-22T10:46:57", "upload_time_iso_8601": "2017-11-22T10:46:57.249668Z", "url": "https://files.pythonhosted.org/packages/a7/e2/90a24d22970ac1f916bd6ba05991acfff48307d2e47f9dc9fabd20d3383a/pytest-postgresql-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "4b7c2be2d52acd871d2029b1445e93c7", "sha256": "45d6785d97f1e7ff3986cf912048ce78384ed3b58e771683fd160d896d056cdc"}, "downloads": -1, "filename": "pytest_postgresql-1.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b7c2be2d52acd871d2029b1445e93c7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15523, "upload_time": "2018-03-20T14:47:46", "upload_time_iso_8601": "2018-03-20T14:47:46.724653Z", "url": "https://files.pythonhosted.org/packages/d2/8b/485eef840d5d71fef67f4dcac31f0cf4f190bf9b2d4d823f43a6ec5e4607/pytest_postgresql-1.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d80db1b6c0d801bafb94d127fe94daa6", "sha256": "48441e4808699d8c1e86342dd82b7fc338fe1851284c377f132a34b9c78a5736"}, "downloads": -1, "filename": "pytest-postgresql-1.3.3.tar.gz", "has_sig": false, "md5_digest": "d80db1b6c0d801bafb94d127fe94daa6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17652, "upload_time": "2018-03-20T14:47:48", "upload_time_iso_8601": "2018-03-20T14:47:48.208383Z", "url": "https://files.pythonhosted.org/packages/21/d1/954e09b9cc982fcb0e62d517367a76a09c1c22d3a76516cf80747338edfc/pytest-postgresql-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "3bef1a49cacb8dba461e232f9dd6db3b", "sha256": "dd9585d02bdf971cf0fd9b7787133e1829f7bb7ec620943cf251e462588d0a93"}, "downloads": -1, "filename": "pytest_postgresql-1.3.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3bef1a49cacb8dba461e232f9dd6db3b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15848, "upload_time": "2018-03-23T12:24:06", "upload_time_iso_8601": "2018-03-23T12:24:06.328866Z", "url": "https://files.pythonhosted.org/packages/c7/a9/ce3500073226d84be57f7e0958ee46446dd77ac2157804180b3b8e403c01/pytest_postgresql-1.3.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b975b35701a03ee0e478a644d0d72ac5", "sha256": "9085d04bc3cb920b3264c5dccb73a989846c2700771e682f8037fdbb02a43b1f"}, "downloads": -1, "filename": "pytest-postgresql-1.3.4.tar.gz", "has_sig": false, "md5_digest": "b975b35701a03ee0e478a644d0d72ac5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17874, "upload_time": "2018-03-23T12:24:07", "upload_time_iso_8601": "2018-03-23T12:24:07.302599Z", "url": "https://files.pythonhosted.org/packages/ac/4a/5f33fab9ce6cfb5a8fd2bca0cd7a12ca864cac2d1d68d8698f1b5caa61c4/pytest-postgresql-1.3.4.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "240c6cd825d5609cdaffa02b0c69bbed", "sha256": "382819aa484aec3eaf74974036787dbdd8f159b78abf7129899006cc3684c907"}, "downloads": -1, "filename": "pytest_postgresql-1.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "240c6cd825d5609cdaffa02b0c69bbed", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28526, "upload_time": "2019-04-09T10:05:11", "upload_time_iso_8601": "2019-04-09T10:05:11.798073Z", "url": "https://files.pythonhosted.org/packages/22/f9/a0a70cee801fccc69d3a2513d23e11b52c5574c45d94594d8e0ee3899ba5/pytest_postgresql-1.4.0-py2.py3-none-any.whl", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "683180770674f4f585830d25aa8d5cfb", "sha256": "9fe4fda8884ae979abc83ae1517423e206cb556de356aa8f071122547854aa75"}, "downloads": -1, "filename": "pytest_postgresql-1.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "683180770674f4f585830d25aa8d5cfb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28550, "upload_time": "2019-05-02T22:19:10", "upload_time_iso_8601": "2019-05-02T22:19:10.331748Z", "url": "https://files.pythonhosted.org/packages/93/84/62458473a5f0529c159d9cd1494cec65660ac34ff007c7922a324d6996d4/pytest_postgresql-1.4.1-py2.py3-none-any.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "649670d85319447f4f65d3ac5b4dd717", "sha256": "8d98f2ae36e6e02c6abb1250d8f5fba88f9bf9657bed6ddaedad4d2e627d2337"}, "downloads": -1, "filename": "pytest_postgresql-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "649670d85319447f4f65d3ac5b4dd717", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 29170, "upload_time": "2019-08-01T15:58:06", "upload_time_iso_8601": "2019-08-01T15:58:06.979631Z", "url": "https://files.pythonhosted.org/packages/89/93/0bb2f41773e2d030c2b8da5d09d15e2a1d430c391645b9f3c857c1b30302/pytest_postgresql-2.0.0-py3-none-any.whl", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "e63dfb955faef9035ae0cec387ea7b13", "sha256": "59802da70581d091f32ed542d77c76a2f29181d70f64dd4782fab4caceba1107"}, "downloads": -1, "filename": "pytest_postgresql-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e63dfb955faef9035ae0cec387ea7b13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 30490, "upload_time": "2019-09-10T13:25:19", "upload_time_iso_8601": "2019-09-10T13:25:19.071926Z", "url": "https://files.pythonhosted.org/packages/66/e1/1539137b403712ce388cee96a664da4f53e86372419ae2a3569aaa22481d/pytest_postgresql-2.1.0-py3-none-any.whl", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "15e620b8341560946f714ed2c8d9d61b", "sha256": "eacf0dc8e294bb5a7973e1a20e5df1eeefca84ddedf4af062caedf2b8b04563a"}, "downloads": -1, "filename": "pytest_postgresql-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "15e620b8341560946f714ed2c8d9d61b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31233, "upload_time": "2019-10-11T15:53:56", "upload_time_iso_8601": "2019-10-11T15:53:56.525853Z", "url": "https://files.pythonhosted.org/packages/2d/50/5f7aecd16022e69e6bbd83c5eacc3ddae8577118f7a84c8a71d7e1e554e2/pytest_postgresql-2.2.0-py3-none-any.whl", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "024894b3cf13a271f4bfe82965f918f6", "sha256": "6f5c63e779184f27b124afa2e249a3d1df3349a3c025adad48351225ae3a7577"}, "downloads": -1, "filename": "pytest_postgresql-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "024894b3cf13a271f4bfe82965f918f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31274, "upload_time": "2019-10-31T09:23:13", "upload_time_iso_8601": "2019-10-31T09:23:13.304499Z", "url": "https://files.pythonhosted.org/packages/59/b7/4687e9b4707344cadfdedb77c80a5a77ef44099d5e37dd654b5af8864f80/pytest_postgresql-2.2.1-py3-none-any.whl", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "d3d556114601aa08084944fc34e6442e", "sha256": "f4afd5b8bede11ef8aaf3803a0c87603ee50494144a722b30c7e34dcd63057ee"}, "downloads": -1, "filename": "pytest_postgresql-2.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3d556114601aa08084944fc34e6442e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31728, "upload_time": "2020-03-19T09:34:53", "upload_time_iso_8601": "2020-03-19T09:34:53.672085Z", "url": "https://files.pythonhosted.org/packages/5b/bf/7fba7a4e48101d512f043516c93d7557af04614a16cfc1eb4692efb439f6/pytest_postgresql-2.3.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3d556114601aa08084944fc34e6442e", "sha256": "f4afd5b8bede11ef8aaf3803a0c87603ee50494144a722b30c7e34dcd63057ee"}, "downloads": -1, "filename": "pytest_postgresql-2.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3d556114601aa08084944fc34e6442e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31728, "upload_time": "2020-03-19T09:34:53", "upload_time_iso_8601": "2020-03-19T09:34:53.672085Z", "url": "https://files.pythonhosted.org/packages/5b/bf/7fba7a4e48101d512f043516c93d7557af04614a16cfc1eb4692efb439f6/pytest_postgresql-2.3.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:50 2020"}