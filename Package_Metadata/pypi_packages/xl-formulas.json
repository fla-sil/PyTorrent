{"info": {"author": "Joe Tatusko", "author_email": "tatuskojc@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# xlFormulas\nHelper class to write Excel-style formula strings to worksheets when saving from a Pandas dataframe.\n\nDefault initialization assumes the worksheet will be saved with an index and header row (the first real 'data' cell would be B2) but an index and header parameter are available to ensure alignment.\n\nPass in mathematical operators with strings, limited support currently for Excel built-in functions. If a value is not a column name in df.columns it is passed in as it is, whether that means it's an operator or builtin function.\n\nThe ```.formula()``` method returns a list of strings beginning with '=' and containing the row index for the Excel formula\n\nInstallation:\n\n```pip install xl-formulas```\n\nBasic usage:\n\n```\nimport pandas as pd\nfrom xlFormulas import ExcelFormulas\n\ndf = pd.read_excel('sample_data.xlsx')\n\n# Pass in Pandas dataframe to intialize ExcelFormulas helper\nef = ExcelFormulas(df)\n\n# Returns a column like \"=B2+C2\" in df['C']\ndf['C'] = ef.formula('A + B')\n\n# Makes a \"=(B2 + C2)/(C2 - D2)\" column in df['D']\ndf['D'] = ef.formula(f'{ef.paren('A + B')} / {ef.paren('B - C')}'\n\n# Use Excel built-in functions (Still pretty buggy)\n# This would get a column of \"=SUM(B2,C2,5)\" in df['E']\ndf['E'] = ef.formula(ef.builtin('SUM', 'A', 'B', 'C'))\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/joetats/xlFormulas", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "xl-formulas", "package_url": "https://pypi.org/project/xl-formulas/", "platform": "", "project_url": "https://pypi.org/project/xl-formulas/", "project_urls": {"Homepage": "https://github.com/joetats/xlFormulas"}, "release_url": "https://pypi.org/project/xl-formulas/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Helper to save Excel formulas from Pandas dataframes", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>xlFormulas</h1>\n<p>Helper class to write Excel-style formula strings to worksheets when saving from a Pandas dataframe.</p>\n<p>Default initialization assumes the worksheet will be saved with an index and header row (the first real 'data' cell would be B2) but an index and header parameter are available to ensure alignment.</p>\n<p>Pass in mathematical operators with strings, limited support currently for Excel built-in functions. If a value is not a column name in df.columns it is passed in as it is, whether that means it's an operator or builtin function.</p>\n<p>The <code>.formula()</code> method returns a list of strings beginning with '=' and containing the row index for the Excel formula</p>\n<p>Installation:</p>\n<p><code>pip install xl-formulas</code></p>\n<p>Basic usage:</p>\n<pre><code>import pandas as pd\nfrom xlFormulas import ExcelFormulas\n\ndf = pd.read_excel('sample_data.xlsx')\n\n# Pass in Pandas dataframe to intialize ExcelFormulas helper\nef = ExcelFormulas(df)\n\n# Returns a column like \"=B2+C2\" in df['C']\ndf['C'] = ef.formula('A + B')\n\n# Makes a \"=(B2 + C2)/(C2 - D2)\" column in df['D']\ndf['D'] = ef.formula(f'{ef.paren('A + B')} / {ef.paren('B - C')}'\n\n# Use Excel built-in functions (Still pretty buggy)\n# This would get a column of \"=SUM(B2,C2,5)\" in df['E']\ndf['E'] = ef.formula(ef.builtin('SUM', 'A', 'B', 'C'))\n</code></pre>\n\n          </div>"}, "last_serial": 4995674, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dbf218465fde17a7b3d03255d0e7e945", "sha256": "a2aea6df1cd4415cfaaed839fede0332041bd79252eea366225f86f7895d953c"}, "downloads": -1, "filename": "xl_formulas-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dbf218465fde17a7b3d03255d0e7e945", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3888, "upload_time": "2019-03-28T02:16:14", "upload_time_iso_8601": "2019-03-28T02:16:14.547790Z", "url": "https://files.pythonhosted.org/packages/ed/04/ed6f13033d5e4c766f895a27733d6c3bdeaa6be35db2faec81757c5e9725/xl_formulas-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2cf1e1a951ce5ed2563bd3ad4dd586d", "sha256": "b9551c256bb6bf9c248d3efcc5d965f3b0c72f55de554c47b737463df33731a5"}, "downloads": -1, "filename": "xl-formulas-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b2cf1e1a951ce5ed2563bd3ad4dd586d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2690, "upload_time": "2019-03-28T02:16:16", "upload_time_iso_8601": "2019-03-28T02:16:16.653141Z", "url": "https://files.pythonhosted.org/packages/98/b5/5b4cc973a68918211f48ab2ee78a1881577261e7e240f2edaa762f5cd1a8/xl-formulas-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dbf218465fde17a7b3d03255d0e7e945", "sha256": "a2aea6df1cd4415cfaaed839fede0332041bd79252eea366225f86f7895d953c"}, "downloads": -1, "filename": "xl_formulas-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dbf218465fde17a7b3d03255d0e7e945", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3888, "upload_time": "2019-03-28T02:16:14", "upload_time_iso_8601": "2019-03-28T02:16:14.547790Z", "url": "https://files.pythonhosted.org/packages/ed/04/ed6f13033d5e4c766f895a27733d6c3bdeaa6be35db2faec81757c5e9725/xl_formulas-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2cf1e1a951ce5ed2563bd3ad4dd586d", "sha256": "b9551c256bb6bf9c248d3efcc5d965f3b0c72f55de554c47b737463df33731a5"}, "downloads": -1, "filename": "xl-formulas-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b2cf1e1a951ce5ed2563bd3ad4dd586d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2690, "upload_time": "2019-03-28T02:16:16", "upload_time_iso_8601": "2019-03-28T02:16:16.653141Z", "url": "https://files.pythonhosted.org/packages/98/b5/5b4cc973a68918211f48ab2ee78a1881577261e7e240f2edaa762f5cd1a8/xl-formulas-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:21 2020"}