{"info": {"author": "Jack Peterson", "author_email": "<jack@tinybike.net>", "bugtrack_url": null, "classifiers": [], "description": "Bitcoin/PostgreSQL bridge\n-------------------------\n\n.. image:: https://travis-ci.org/tinybike/coinbridge.svg?branch=master\n    :target: https://travis-ci.org/tinybike/coinbridge\n\n.. image:: https://badge.fury.io/py/coinbridge.svg\n    :target: http://badge.fury.io/py/coinbridge\n\nBridge between Bitcoin and PostgreSQL.\n\nCoinbridge connects the Bitcoin daemon (bitcoind) and a local PostgreSQL\ndatabase. It listens for transaction confirmations and automatically\nupdates a transactions table in your database.\n\nIncludes a \"payment\" method which uses free, instant Bitcoin transfers\nbetween accounts in the same wallet, and standard Bitcoin transactions\notherwise. Also includes a comprehensive wrapper for\nBitcoin's JSON-RPC functionality.\n\nCoinbridge has been tested with Bitcoin, but it should work for any\naltcoin that shares Bitcoin's RPC command suite (i.e., most of them). To\nadd a different coin, enter the new coin's information into\n``coinbridge/data/coins.json``. For wallet listener functionality, you\nalso need to create a ``coinbridge/newcoin-listen`` script with\n``newcoin-cli`` (or ``newcoind``) in place of ``bitcoin-cli``, and point\nthe new coin's ``walletnotify`` to this script in newcoin's configuration\nfile.\n\nBitcoin: 1CjevDn76Yg5TsEZLkbKy2A6g5hYPE3gAG\n\nInstallation\n~~~~~~~~~~~~\n\n::\n\n    $ pip install coinbridge\n\nDepending on your system, compiling Bitcoin from scratch can be a\nheadache. On Ubuntu, you can simply install ``bitcoind`` from the\nbitcoin PPA:\n\n::\n\n    $ apt-get install python-software-properties\n    $ add-apt-repository ppa:bitcoin/bitcoin\n    $ apt-get update\n    $ apt-get install bitcoind\n\nA convenience script, ``init.sh``, is included that will do some initial\nconfiguration for you. I have only tested this on Ubuntu 12.04/14.04 so\nfar. The below steps are only necessary if ``init.sh`` does not work for\nyou:\n\n1. Set up a ``pgpass`` file so transaction confirmations can be\n   autologged to Postgres. Replace HOST, PORT, USER, DATABASE, PASSWORD\n   with your own settings. Note: ``coinbridge/db.py`` expects the\n   username to be ``coinbridge``. If you use a different username, you\n   must also create a ``coinbridge/data/pg.cfg`` file (containing the\n   ``HOST:PORT:USER:DATABASE:PASSWORD`` string) so that Python can\n   connect to Postgres.\n\n   ::\n\n       $ touch ~/.pgpass\n       $ echo HOST:PORT:USER:DATABASE:PASSWORD >> ~/.pgpass\n       $ chmod 600 ~/.pgpass\n\n2. Set environment variables:\n\n   ::\n\n       $ echo \"export BRIDGE=/path/to/coinbridge\" >> ~/.profile\n       $ echo \"export PGPASSFILE=$HOME/.pgpass\" >> ~/.profile\n       $ source ~/.profile\n\n3. Finally, you need to point Bitcoin's ``walletnotify`` at\n   ``coinbridge/bitcoin-listen``:\n\n   ::\n\n       $ apt-get install jq\n       $ echo \"walletnotify=$BRIDGE/coinbridge/bitcoin-listen %s\" >> ~/.bitcoin/bitcoin.conf\n\nUsage\n~~~~~\n\n.. code-block:: python\n\n    from coinbridge import Bridge\n\n    bridge = Bridge()\n    bridge.payment(from_account, to_account, amount)\n\n.. |Build Status| image:: https://travis-ci.org/tinybike/coinbridge.svg\n   :target: https://travis-ci.org/tinybike/coinbridge\n.. |PyPI version| image:: https://badge.fury.io/py/coinbridge.svg\n   :target: http://badge.fury.io/py/coinbridge\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/tinybike/coinbridge/tarball/0.1.4", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tinybike/coinbridge", "keywords": "bitcoin,postgres,transaction,bridge", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "coinbridge", "package_url": "https://pypi.org/project/coinbridge/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/coinbridge/", "project_urls": {"Download": "https://github.com/tinybike/coinbridge/tarball/0.1.4", "Homepage": "https://github.com/tinybike/coinbridge"}, "release_url": "https://pypi.org/project/coinbridge/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Bitcoin/PostgreSQL bridge", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/tinybike/coinbridge\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/tinybike/coinbridge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/339e50e7627981b3cfe994948cdb314ca4872d32/68747470733a2f2f7472617669732d63692e6f72672f74696e7962696b652f636f696e6272696467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://badge.fury.io/py/coinbridge\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/coinbridge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e3b2e75f0943a0fdecf2afeedff74cc7195242b/68747470733a2f2f62616467652e667572792e696f2f70792f636f696e6272696467652e737667\"></a>\n<p>Bridge between Bitcoin and PostgreSQL.</p>\n<p>Coinbridge connects the Bitcoin daemon (bitcoind) and a local PostgreSQL\ndatabase. It listens for transaction confirmations and automatically\nupdates a transactions table in your database.</p>\n<p>Includes a \u201cpayment\u201d method which uses free, instant Bitcoin transfers\nbetween accounts in the same wallet, and standard Bitcoin transactions\notherwise. Also includes a comprehensive wrapper for\nBitcoin\u2019s JSON-RPC functionality.</p>\n<p>Coinbridge has been tested with Bitcoin, but it should work for any\naltcoin that shares Bitcoin\u2019s RPC command suite (i.e., most of them). To\nadd a different coin, enter the new coin\u2019s information into\n<tt>coinbridge/data/coins.json</tt>. For wallet listener functionality, you\nalso need to create a <tt><span class=\"pre\">coinbridge/newcoin-listen</span></tt> script with\n<tt><span class=\"pre\">newcoin-cli</span></tt> (or <tt>newcoind</tt>) in place of <tt><span class=\"pre\">bitcoin-cli</span></tt>, and point\nthe new coin\u2019s <tt>walletnotify</tt> to this script in newcoin\u2019s configuration\nfile.</p>\n<p>Bitcoin: 1CjevDn76Yg5TsEZLkbKy2A6g5hYPE3gAG</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install coinbridge\n</pre>\n<p>Depending on your system, compiling Bitcoin from scratch can be a\nheadache. On Ubuntu, you can simply install <tt>bitcoind</tt> from the\nbitcoin PPA:</p>\n<pre>$ apt-get install python-software-properties\n$ add-apt-repository ppa:bitcoin/bitcoin\n$ apt-get update\n$ apt-get install bitcoind\n</pre>\n<p>A convenience script, <tt>init.sh</tt>, is included that will do some initial\nconfiguration for you. I have only tested this on Ubuntu 12.04/14.04 so\nfar. The below steps are only necessary if <tt>init.sh</tt> does not work for\nyou:</p>\n<ol>\n<li><p>Set up a <tt>pgpass</tt> file so transaction confirmations can be\nautologged to Postgres. Replace HOST, PORT, USER, DATABASE, PASSWORD\nwith your own settings. Note: <tt>coinbridge/db.py</tt> expects the\nusername to be <tt>coinbridge</tt>. If you use a different username, you\nmust also create a <tt>coinbridge/data/pg.cfg</tt> file (containing the\n<tt>HOST:PORT:USER:DATABASE:PASSWORD</tt> string) so that Python can\nconnect to Postgres.</p>\n<pre>$ touch ~/.pgpass\n$ echo HOST:PORT:USER:DATABASE:PASSWORD &gt;&gt; ~/.pgpass\n$ chmod 600 ~/.pgpass\n</pre>\n</li>\n<li><p>Set environment variables:</p>\n<pre>$ echo \"export BRIDGE=/path/to/coinbridge\" &gt;&gt; ~/.profile\n$ echo \"export PGPASSFILE=$HOME/.pgpass\" &gt;&gt; ~/.profile\n$ source ~/.profile\n</pre>\n</li>\n<li><p>Finally, you need to point Bitcoin\u2019s <tt>walletnotify</tt> at\n<tt><span class=\"pre\">coinbridge/bitcoin-listen</span></tt>:</p>\n<pre>$ apt-get install jq\n$ echo \"walletnotify=$BRIDGE/coinbridge/bitcoin-listen %s\" &gt;&gt; ~/.bitcoin/bitcoin.conf\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">coinbridge</span> <span class=\"kn\">import</span> <span class=\"n\">Bridge</span>\n\n<span class=\"n\">bridge</span> <span class=\"o\">=</span> <span class=\"n\">Bridge</span><span class=\"p\">()</span>\n<span class=\"n\">bridge</span><span class=\"o\">.</span><span class=\"n\">payment</span><span class=\"p\">(</span><span class=\"n\">from_account</span><span class=\"p\">,</span> <span class=\"n\">to_account</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1647855, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "977bea447916954eec25c121173e8a25", "sha256": "2dc72780bbc880f391f87c7b17391d1cbbce17b6813db29cae927c906f1e4bf6"}, "downloads": -1, "filename": "coinbridge-0.1.1.tar.gz", "has_sig": false, "md5_digest": "977bea447916954eec25c121173e8a25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14728, "upload_time": "2014-08-24T10:50:12", "upload_time_iso_8601": "2014-08-24T10:50:12.358684Z", "url": "https://files.pythonhosted.org/packages/9d/8a/b84533d7c993a9f2be72ca72e91cdca757252e39a0deaed85ae650261037/coinbridge-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "54f2cbc52f98c4acede8756bb1afb7e1", "sha256": "a927be4e8f374753d2b8899cd3bce70148c5854acec4824c82488f9d3c2fda63"}, "downloads": -1, "filename": "coinbridge-0.1.2.tar.gz", "has_sig": false, "md5_digest": "54f2cbc52f98c4acede8756bb1afb7e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14719, "upload_time": "2014-08-24T11:03:13", "upload_time_iso_8601": "2014-08-24T11:03:13.161356Z", "url": "https://files.pythonhosted.org/packages/dc/c8/7a428ee62a790990ac6838f3facdc1938954de2f0f7ecdb274a92713693b/coinbridge-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c00b99fc86c2eece757a7f333524a13c", "sha256": "66c8d1fb197cd4c9a918a1f1f3798a4e08ad0a449901742f37b79b51bf4ca720"}, "downloads": -1, "filename": "coinbridge-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c00b99fc86c2eece757a7f333524a13c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11643, "upload_time": "2014-11-15T10:59:46", "upload_time_iso_8601": "2014-11-15T10:59:46.828861Z", "url": "https://files.pythonhosted.org/packages/c8/a5/44a6c6aa0b8042082234b943130c78f373b0ce0251dd60d1accd2c6d5247/coinbridge-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "03d80e593cbebb0b925c66ad8b4dbe3c", "sha256": "68286bfc77f43434bad840bf5827e74a113e2e93f5dc0ed25c9d215ecf2e42b1"}, "downloads": -1, "filename": "coinbridge-0.1.4.tar.gz", "has_sig": false, "md5_digest": "03d80e593cbebb0b925c66ad8b4dbe3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11122, "upload_time": "2015-07-24T10:43:07", "upload_time_iso_8601": "2015-07-24T10:43:07.481175Z", "url": "https://files.pythonhosted.org/packages/4a/60/41b41be89279da47a44c747cb05eed66a90706752bf9e5c2841be6defdd3/coinbridge-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03d80e593cbebb0b925c66ad8b4dbe3c", "sha256": "68286bfc77f43434bad840bf5827e74a113e2e93f5dc0ed25c9d215ecf2e42b1"}, "downloads": -1, "filename": "coinbridge-0.1.4.tar.gz", "has_sig": false, "md5_digest": "03d80e593cbebb0b925c66ad8b4dbe3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11122, "upload_time": "2015-07-24T10:43:07", "upload_time_iso_8601": "2015-07-24T10:43:07.481175Z", "url": "https://files.pythonhosted.org/packages/4a/60/41b41be89279da47a44c747cb05eed66a90706752bf9e5c2841be6defdd3/coinbridge-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:08 2020"}