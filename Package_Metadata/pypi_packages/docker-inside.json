{"info": {"author": "Manuel Huber", "author_email": "Manuel.h87@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Topic :: System :: Systems Administration"], "description": "Docker Inside\n=============\n\n|Build Status| |PyPI|\n\n``dockerinside`` is a python package that shall simplify running docker\nimages as the current user similar to the way *Jenkins* awesome\n``docker.inside()`` works. There are two main use-cases:\n\n-  You want to easily share access between a container and your\n   environment without having to manually modify the user id and group\n   id of the files created by the running container.\n-  You want to run *dockerized* GUI applications but share your home\n   environment\n\nYou don't have to write a Dockerfile just to adapt to your environment\n(user id / group id). It is a much more elegant approach to adapt the\nenvironment during startup of the container on the fly as *Jenkins* does\nit.\n\nInstallation\n------------\n\nInstall current *stable* version:\n\n::\n\n        pip install git+https://github.com/boon-code/docker-inside.git\n\nFor convenience, ``dockerinside`` uses\n`su-exec <https://github.com/ncopa/su-exec>`__ which is statically\ncompiled using ``alpine`` and ``musl-c`` library. To build it, you have\nto run\n\n::\n\n        # use --auto-pull to download alpine image for compilation if it's not available\n        docker-inside-setup --auto-pull\n\nThis will create a directory ``~/.config/docker_inside/`` and put a file\nnamed ``su-exec`` there. You can also compile ``su-exec`` and create the\nfile structure yourself or not use it at all. If this file doesn't\nexist, ``su`` is used to switch user id which might cause problems with\n``tty`` handling, so it's highly recommended to use ``su-exec``.\n\nBig thanks to **Natanael Copa** (*ncopa*) for sharing ``su-exec``.\n\nUsage\n-----\n\nBasic\n~~~~~\n\nRunning an ``ubuntu:16.04`` container as current user with the home\ndirectory mounted:\n\n::\n\n        docker-inside -H ubuntu:16.04\n\nwhich is roughly equivalent to running\n\n::\n\n        docker run --rm -ti --user \"$(id -u)\" -v \"${HOME}:${HOME}\" ubuntu:16.04\n\nbut does already add users and groups so you won't see\n``I have no name!`` in your shell prompt.\n\nFake Home\n~~~~~~~~~\n\nYou can also use a *fake* home directory\n\n::\n\n        mkdir -p /tmp/fake-home\n        docker-inside --mount-as-home /tmp/fake-home ubuntu:16.04 -- echo \"Hello, World\" \\>~/readme.txt\n        #DockerInside : MainThread : INFO : Starting container: 59133ebeb3a3116999f66b4e302ba675a74f02ac83ae526704f2f4cdbd82ed5d\n        #DockerInside : MainThread : INFO : Container 59133ebeb3a3116999f66b4e302ba675a74f02ac83ae526704f2f4cdbd82ed5d stopped\n        cat /tmp/fake-home/readme.txt\n        #Hello, World\n\nJenkins Debugging\n~~~~~~~~~~~~~~~~~\n\nSometimes, I just quickly want to debug a problem on a failing *Jenkins*\njob which uses docker with lot's of bind mounts which is as simple as\nthis:\n\n::\n\n        cd <WORKSPACE>\n        docker-inside -v <first-mount>:<some-path> \\\n                      -v <second-mount>:<some-other-path> \\\n                      -v <WORKSPACE> \\\n                      -w <WORKSPACE> \\\n                      <IMAGE_TO_USE> \\\n                      [optional-command]\n\nAdditional Use-Cases\n~~~~~~~~~~~~~~~~~~~~\n\nPlease let me know I you need support for more options from original\n``docker run`` command or have any other suggestions how to improve this\npackage. Please also let me know if your Docker image is failing using\nthis package and I will see if I can fix the issue. Adding users and\ngroups is unfortunately quite different among distributions.\n\n.. |Build Status| image:: https://travis-ci.org/boon-code/docker-inside.svg\n   :target: https://travis-ci.org/boon-code/docker-inside\n.. |PyPI| image:: https://img.shields.io/pypi/v/docker-inside.svg\n   :target: https://pypi.python.org/pypi/docker-inside", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/boon-code/docker-inside", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "docker-inside", "package_url": "https://pypi.org/project/docker-inside/", "platform": "", "project_url": "https://pypi.org/project/docker-inside/", "project_urls": {"Homepage": "https://github.com/boon-code/docker-inside"}, "release_url": "https://pypi.org/project/docker-inside/0.3.14/", "requires_dist": null, "requires_python": "", "summary": "Run a docker container with you workspace and user", "version": "0.3.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/boon-code/docker-inside\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aeef12f1834e718a9f6a150e4f092676c3f9e661/68747470733a2f2f7472617669732d63692e6f72672f626f6f6e2d636f64652f646f636b65722d696e736964652e737667\"></a> <a href=\"https://pypi.python.org/pypi/docker-inside\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74e255009db9f6113b33dd9ea0bb850bcc551d31/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646f636b65722d696e736964652e737667\"></a></p>\n<p><tt>dockerinside</tt> is a python package that shall simplify running docker\nimages as the current user similar to the way <em>Jenkins</em> awesome\n<tt>docker.inside()</tt> works. There are two main use-cases:</p>\n<ul>\n<li>You want to easily share access between a container and your\nenvironment without having to manually modify the user id and group\nid of the files created by the running container.</li>\n<li>You want to run <em>dockerized</em> GUI applications but share your home\nenvironment</li>\n</ul>\n<p>You don\u2019t have to write a Dockerfile just to adapt to your environment\n(user id / group id). It is a much more elegant approach to adapt the\nenvironment during startup of the container on the fly as <em>Jenkins</em> does\nit.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install current <em>stable</em> version:</p>\n<pre>pip install git+https://github.com/boon-code/docker-inside.git\n</pre>\n<p>For convenience, <tt>dockerinside</tt> uses\n<a href=\"https://github.com/ncopa/su-exec\" rel=\"nofollow\">su-exec</a> which is statically\ncompiled using <tt>alpine</tt> and <tt><span class=\"pre\">musl-c</span></tt> library. To build it, you have\nto run</p>\n<pre># use --auto-pull to download alpine image for compilation if it's not available\ndocker-inside-setup --auto-pull\n</pre>\n<p>This will create a directory <tt><span class=\"pre\">~/.config/docker_inside/</span></tt> and put a file\nnamed <tt><span class=\"pre\">su-exec</span></tt> there. You can also compile <tt><span class=\"pre\">su-exec</span></tt> and create the\nfile structure yourself or not use it at all. If this file doesn\u2019t\nexist, <tt>su</tt> is used to switch user id which might cause problems with\n<tt>tty</tt> handling, so it\u2019s highly recommended to use <tt><span class=\"pre\">su-exec</span></tt>.</p>\n<p>Big thanks to <strong>Natanael Copa</strong> (<em>ncopa</em>) for sharing <tt><span class=\"pre\">su-exec</span></tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"basic\">\n<h3>Basic</h3>\n<p>Running an <tt>ubuntu:16.04</tt> container as current user with the home\ndirectory mounted:</p>\n<pre>docker-inside -H ubuntu:16.04\n</pre>\n<p>which is roughly equivalent to running</p>\n<pre>docker run --rm -ti --user \"$(id -u)\" -v \"${HOME}:${HOME}\" ubuntu:16.04\n</pre>\n<p>but does already add users and groups so you won\u2019t see\n<tt>I have no name!</tt> in your shell prompt.</p>\n</div>\n<div id=\"fake-home\">\n<h3>Fake Home</h3>\n<p>You can also use a <em>fake</em> home directory</p>\n<pre>mkdir -p /tmp/fake-home\ndocker-inside --mount-as-home /tmp/fake-home ubuntu:16.04 -- echo \"Hello, World\" \\&gt;~/readme.txt\n#DockerInside : MainThread : INFO : Starting container: 59133ebeb3a3116999f66b4e302ba675a74f02ac83ae526704f2f4cdbd82ed5d\n#DockerInside : MainThread : INFO : Container 59133ebeb3a3116999f66b4e302ba675a74f02ac83ae526704f2f4cdbd82ed5d stopped\ncat /tmp/fake-home/readme.txt\n#Hello, World\n</pre>\n</div>\n<div id=\"jenkins-debugging\">\n<h3>Jenkins Debugging</h3>\n<p>Sometimes, I just quickly want to debug a problem on a failing <em>Jenkins</em>\njob which uses docker with lot\u2019s of bind mounts which is as simple as\nthis:</p>\n<pre>cd &lt;WORKSPACE&gt;\ndocker-inside -v &lt;first-mount&gt;:&lt;some-path&gt; \\\n              -v &lt;second-mount&gt;:&lt;some-other-path&gt; \\\n              -v &lt;WORKSPACE&gt; \\\n              -w &lt;WORKSPACE&gt; \\\n              &lt;IMAGE_TO_USE&gt; \\\n              [optional-command]\n</pre>\n</div>\n<div id=\"additional-use-cases\">\n<h3>Additional Use-Cases</h3>\n<p>Please let me know I you need support for more options from original\n<tt>docker run</tt> command or have any other suggestions how to improve this\npackage. Please also let me know if your Docker image is failing using\nthis package and I will see if I can fix the issue. Adding users and\ngroups is unfortunately quite different among distributions.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4037961, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "d8eeef79968bbeb179b55d1cf07940f1", "sha256": "3fc976cbe8795582bd27fc8d8fc68984b7eeebb69ae53eb6c196df797deee7c0"}, "downloads": -1, "filename": "docker_inside-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d8eeef79968bbeb179b55d1cf07940f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11189, "upload_time": "2018-01-07T21:13:12", "upload_time_iso_8601": "2018-01-07T21:13:12.438511Z", "url": "https://files.pythonhosted.org/packages/6a/5f/2039221e7efff59858894286ea224a744ae2fa4f099eec5095990a2f8d3b/docker_inside-0.3.0-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "78126fe2e3c64dc306b7baf7c7571a6c", "sha256": "09eca4a29319c3c59d4340cae893b784cb16ae0ecd8e2fd20a85d247c02d72e9"}, "downloads": -1, "filename": "docker_inside-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "78126fe2e3c64dc306b7baf7c7571a6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11252, "upload_time": "2018-01-09T19:34:14", "upload_time_iso_8601": "2018-01-09T19:34:14.907082Z", "url": "https://files.pythonhosted.org/packages/2c/df/110328d43e08d39efd2572bff0c2f6a993d59bf90491fecad97fcee9c6a5/docker_inside-0.3.1-py3-none-any.whl", "yanked": false}], "0.3.10": [{"comment_text": "", "digests": {"md5": "166a1d66b66359329f03cd3ba52aabbd", "sha256": "9b54407c6518a9d87a55771910f959e33287366235a19c57190dc2e38df3308f"}, "downloads": -1, "filename": "docker-inside-0.3.10.tar.gz", "has_sig": false, "md5_digest": "166a1d66b66359329f03cd3ba52aabbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10527, "upload_time": "2018-05-26T21:58:58", "upload_time_iso_8601": "2018-05-26T21:58:58.819840Z", "url": "https://files.pythonhosted.org/packages/6c/5c/96834aff65391f8bd5cbc400a295ec0cada5c1d539a34a1b35a692f72849/docker-inside-0.3.10.tar.gz", "yanked": false}], "0.3.11": [{"comment_text": "", "digests": {"md5": "0989ab339738d4dc75bcbdff72e193a7", "sha256": "0f60b175cbc8df2c0ae400746b4962797e273cefbab9f8027ff3378492a0c645"}, "downloads": -1, "filename": "docker-inside-0.3.11.tar.gz", "has_sig": false, "md5_digest": "0989ab339738d4dc75bcbdff72e193a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10532, "upload_time": "2018-05-27T00:14:43", "upload_time_iso_8601": "2018-05-27T00:14:43.550579Z", "url": "https://files.pythonhosted.org/packages/8c/1e/4f1fa2427ce519de6586b0c3c7668f250841d2039920d8cf15c6d945e09b/docker-inside-0.3.11.tar.gz", "yanked": false}], "0.3.12": [{"comment_text": "", "digests": {"md5": "d7d31b5cbd9d70ea8594889dcde88890", "sha256": "693420089929c00299407875151b12885ac03c4180ffb7e1878816994957031c"}, "downloads": -1, "filename": "docker-inside-0.3.12.tar.gz", "has_sig": false, "md5_digest": "d7d31b5cbd9d70ea8594889dcde88890", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10602, "upload_time": "2018-05-27T02:05:39", "upload_time_iso_8601": "2018-05-27T02:05:39.343452Z", "url": "https://files.pythonhosted.org/packages/33/cb/5aebd5038a08bdfb64c2278f2b3f33659ff7da3024d165a74d0c19748e23/docker-inside-0.3.12.tar.gz", "yanked": false}], "0.3.13": [{"comment_text": "", "digests": {"md5": "1421afcb062a60b1c0662b916950d433", "sha256": "877138f6ff11208b67261f706b43cb8258e406fd78106293730abfc18d64edda"}, "downloads": -1, "filename": "docker-inside-0.3.13.tar.gz", "has_sig": false, "md5_digest": "1421afcb062a60b1c0662b916950d433", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12634, "upload_time": "2018-06-13T23:36:24", "upload_time_iso_8601": "2018-06-13T23:36:24.797269Z", "url": "https://files.pythonhosted.org/packages/44/f3/4575dfeb6beddcbd2c6ea52f7f0a05080fe6e19158d14026da5d2ca8d580/docker-inside-0.3.13.tar.gz", "yanked": false}], "0.3.14": [{"comment_text": "", "digests": {"md5": "e1fdf8004100fa984fd23c30e1a10dbf", "sha256": "9388f8fa0de9712c70ac1240a58f2a8a91f32dd5baf8b67c333f8506a3c11e20"}, "downloads": -1, "filename": "docker-inside-0.3.14.tar.gz", "has_sig": false, "md5_digest": "e1fdf8004100fa984fd23c30e1a10dbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13060, "upload_time": "2018-07-06T23:14:48", "upload_time_iso_8601": "2018-07-06T23:14:48.664419Z", "url": "https://files.pythonhosted.org/packages/e9/c4/cdcd827dfdeef89ca327c8ebb912b6230bd4491a2b22da5d0494bfdc6278/docker-inside-0.3.14.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "d8ab159c77982276c945ee7d2a8a2644", "sha256": "d65ea8a5e4eef83eaa3244f124986fe9cd5899d4236a76d1c714ec151afaf7f1"}, "downloads": -1, "filename": "docker_inside-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "d8ab159c77982276c945ee7d2a8a2644", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14455, "upload_time": "2018-01-09T20:26:16", "upload_time_iso_8601": "2018-01-09T20:26:16.536133Z", "url": "https://files.pythonhosted.org/packages/25/bc/8a87dd01b4ef2309b296cea196746221be577f31aea439b1c0c308a00182/docker_inside-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c806ab3e181f94e087bb1da1d63cd535", "sha256": "38b930bf76d712c3791f6e56355bb4fc4dfeb25fdf01be01e687df96c476c2a0"}, "downloads": -1, "filename": "docker-inside-0.3.4.tar.gz", "has_sig": false, "md5_digest": "c806ab3e181f94e087bb1da1d63cd535", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9978, "upload_time": "2018-01-09T20:26:19", "upload_time_iso_8601": "2018-01-09T20:26:19.325942Z", "url": "https://files.pythonhosted.org/packages/c5/a5/00105e8dc5a356531cd505db3c47f021e677154b68b92d07c6952be48a36/docker-inside-0.3.4.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "ebb3d635f7e35b048153bda48e160f3e", "sha256": "b245985342ebbcc4b5e28822755a03e17bef171bb4c7c81af935c8b5423dbe6f"}, "downloads": -1, "filename": "docker-inside-0.3.7.tar.gz", "has_sig": false, "md5_digest": "ebb3d635f7e35b048153bda48e160f3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10013, "upload_time": "2018-01-20T13:43:27", "upload_time_iso_8601": "2018-01-20T13:43:27.099786Z", "url": "https://files.pythonhosted.org/packages/af/7a/37470ea6f8e9fde8d947871d80ce1db1041809085bafdafc5bdedcbb65e0/docker-inside-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "67fe1b355326cd6a2368f73d252068b8", "sha256": "6fb53df7844f26f459ca85d56432eff2b842ec6cef681a32420aaa3a23fe13f3"}, "downloads": -1, "filename": "docker-inside-0.3.8.tar.gz", "has_sig": false, "md5_digest": "67fe1b355326cd6a2368f73d252068b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10199, "upload_time": "2018-02-18T00:58:46", "upload_time_iso_8601": "2018-02-18T00:58:46.381298Z", "url": "https://files.pythonhosted.org/packages/b1/b9/16203b531ee3d6d322381dea61a0f4bf8ca67ce0b55d016f57d7b0177d6b/docker-inside-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "542a7ffa229b771714873cf38bfb4f0c", "sha256": "3a374008c4d75b1541948cb6159ae308bdac8cfbe5175b32203657e31f32c96b"}, "downloads": -1, "filename": "docker-inside-0.3.9.tar.gz", "has_sig": false, "md5_digest": "542a7ffa229b771714873cf38bfb4f0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10375, "upload_time": "2018-05-13T09:54:09", "upload_time_iso_8601": "2018-05-13T09:54:09.340563Z", "url": "https://files.pythonhosted.org/packages/2d/5c/f9f5b46a8202ca96a17ab19a6e2d0590807e150a112b0605b223ae5ba4c4/docker-inside-0.3.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1fdf8004100fa984fd23c30e1a10dbf", "sha256": "9388f8fa0de9712c70ac1240a58f2a8a91f32dd5baf8b67c333f8506a3c11e20"}, "downloads": -1, "filename": "docker-inside-0.3.14.tar.gz", "has_sig": false, "md5_digest": "e1fdf8004100fa984fd23c30e1a10dbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13060, "upload_time": "2018-07-06T23:14:48", "upload_time_iso_8601": "2018-07-06T23:14:48.664419Z", "url": "https://files.pythonhosted.org/packages/e9/c4/cdcd827dfdeef89ca327c8ebb912b6230bd4491a2b22da5d0494bfdc6278/docker-inside-0.3.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:51 2020"}