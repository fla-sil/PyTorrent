{"info": {"author": "pymetrics Data Team", "author_email": "data@pymetrics.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Healthcare Industry", "Intended Audience :: Legal Industry", "Intended Audience :: Other Audience", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Visualization"], "description": "![Python package](https://github.com/pymetrics/audit-ai/workflows/Python%20package/badge.svg)\n# audit-AI\n\n<img src=\"https://www.pymetrics.com/static/base/img/branding/favicon.ico\">\n\nOpen Sourced Bias Testing for Generalized Machine Learning Applications\n\n`audit-AI` is a Python library built on top of `pandas` and `sklearn` that\nimplements fairness-aware machine learning algorithms. `audit-AI` was developed\nby the Data Science team at [pymetrics](https://www.pymetrics.com/)\n\n# Bias Testing for Generalized Machine Learning Applications\n\n`audit-AI` is a tool to measure and mitigate the effects of discriminatory\npatterns in training data and the predictions made by machine learning\nalgorithms trained for the purposes of socially sensitive decision processes.\n\nThe overall goal of this research is to come up with a reasonable way to think\nabout how to make machine learning algorithms more fair. While identifying\npotential bias in training datasets and by consequence the machine learning\nalgorithms trained on them is not sufficient to solve the problem of\ndiscrimination, in a world where more and more decisions are being automated\nby Artificial Intelligence, our ability to understand and identify the degree\nto which an algorithm is fair or biased is a step in the right direction.\n\n# Regulatory Compliance and Checks for Practical and Statistical Bias\n\nAccording to the Uniform Guidelines on Employee Selection Procedures (UGESP;\nEEOC et al., 1978), all assessment tools should comply to fair standard of\ntreatment for all protected groups. Audit-ai extends this to machine learning\nmethods. Let's say we build a model that makes some prediction about people.\nThis model could theoretically be anything -- a prediction of credit scores,\nthe likelihood of prison recidivism, the cost of a home loan, etc. Audit-ai\ntakes data from a known population (e.g., credit information from people of\nmultiple genders and ethnicities), and runs them through the model in question.\nThe proportional pass rates of the highest-passing demographic group are compared\nto the lowest-passing group for each demographic category (gender and\nethnicity). This proportion is known as the bias ratio.\n\nAudit-ai determines whether groups are different according to a standard of\nstatistical significance (within a statistically different margin of error) or\npractical significance (whether a difference is large enough to matter on a\npractical level). The exact threshold of statistical and practical significance\ndepends on the field and use-case. Within the hiring space, the EEOC often\nuses a statistical significance of p < .05 to determine bias, and a bias ratio\nbelow the 4/5ths rule to demonstrate practical significance.\n\nThe 4/5ths rule effectively states that the lowest-passing group has to be\nwithin 4/5ths of the pass rate of the highest-passing group. Consider an example\nwith 4,000 users, 1,000 of each of the following groups: Asian, Black,\nHispanic/Latino, and White, who pass at a frequency of 250, 270, 240 and 260\nusers, respectively. The highest and lowest passing groups are Black (27%) and\nHispanic/Latino (24%), respectively. The bias ratio is therefore 24/27 or .889.\nAs this ratio is greater than .80 (4/5ths), the legal requirement enforced by\nthe EEOC, the model would pass the check for practical significance. Likewise,\na chi-squared test (a common statistical test for count data) would report that\nthese groups are above the p = .05 threshold, and therefore pass the check for\nstatistical significance.\n\nAudit-ai also offers tools to check for differences over time or across\ndifferent regions, using the Cochran-Mantel-Hanzel test, a common test in\nregulatory circles. To our knowledge this is the first implementation of this\nmeasure in an open-source python format.\n\n# Features\n\nHere are a few of the bias testing and algorithm auditing techniques\nthat this library implements.\n\n### Classification tasks\n\n- 4/5th, fisher, z-test, bayes factor, chi squared\n- sim_beta_ratio, classifier_posterior_probabilities\n\n### Regression tasks\n\n- anova\n- 4/5th, fisher, z-test, bayes factor, chi squared\n- group proportions at different thresholds\n\n# Installation\n\nThe source code is currently hosted on GitHub: https://github.com/pymetrics/audit-ai\n\nYou can install the latest released version with `pip`.\n\n```\n# pip\npip install audit-AI\n```\n\nIf you install with pip, you'll need to install scikit-learn, numpy, and pandas\nwith either pip or conda. Version requirements:\n\n- numpy\n- scipy\n- pandas\n\nFor vizualization:\n- matplotlib\n- seaborn\n\n# How to use this package:\n\nSee our implementation paper here: https://github.com/pymetrics/audit-ai/blob/master/examples/implementation_suggestions.md\n\n```python\n\nfrom auditai.misc import bias_test_check\n\nX = df.loc[:,features]\ny_pred = clf.predict_proba(X)\n\n# test for bias\nbias_test_check(labels=df['gender'], results=y_pred, category='Gender')\n\n>>> *Gender passes 4/5 test, Fisher p-value, Chi-Squared p-value, z-test p-value and Bayes Factor at 50.00*\n\n```\nTo get a plot of the different tests at different thresholds:\n\n```python\n\nfrom auditai.viz import plot_threshold_tests\n\nX = df.loc[:,features]\ny_pred = clf.predict_proba(X)\n\n# test for bias\nplot_threshold_tests(labels=df['gender'], results=y_pred, category='Gender')\n\n```\n<img alt=\"Sample audit-AI Plot\" src=\"data/auditAI_gender_plot.png\" width=1600>\n\n# Example Datasets\n\n- [german-credit](https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data))\n- [student-performance](https://archive.ics.uci.edu/ml/datasets/student+performance)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pymetrics/audit-ai", "keywords": "audit,adverse impact,artificial intelligence,machine learning,fairness,bias,accountability,transparency,discrimination", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "audit-AI", "package_url": "https://pypi.org/project/audit-AI/", "platform": "", "project_url": "https://pypi.org/project/audit-AI/", "project_urls": {"Company": "https://www.pymetrics.com/science/", "Homepage": "https://github.com/pymetrics/audit-ai"}, "release_url": "https://pypi.org/project/audit-AI/0.0.6/", "requires_dist": ["numpy", "scipy", "pandas", "matplotlib", "statsmodels", "sklearn", "pytest-cov ; extra == 'dev'", "flake8 ; extra == 'dev'", "detox ; extra == 'dev'", "mock ; extra == 'dev'", "six ; extra == 'dev'"], "requires_python": "", "summary": "audit-AI detects demographic differences in the output of machine learning models or other assessments", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Python package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/970df7771d8f27c82a74e37720fbcb911cd298e8/68747470733a2f2f6769746875622e636f6d2f70796d6574726963732f61756469742d61692f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></p>\n<h1>audit-AI</h1>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcf081a14f12287dcd068bb6bdb05c4df9b9d4ff/68747470733a2f2f7777772e70796d6574726963732e636f6d2f7374617469632f626173652f696d672f6272616e64696e672f66617669636f6e2e69636f\">\n<p>Open Sourced Bias Testing for Generalized Machine Learning Applications</p>\n<p><code>audit-AI</code> is a Python library built on top of <code>pandas</code> and <code>sklearn</code> that\nimplements fairness-aware machine learning algorithms. <code>audit-AI</code> was developed\nby the Data Science team at <a href=\"https://www.pymetrics.com/\" rel=\"nofollow\">pymetrics</a></p>\n<h1>Bias Testing for Generalized Machine Learning Applications</h1>\n<p><code>audit-AI</code> is a tool to measure and mitigate the effects of discriminatory\npatterns in training data and the predictions made by machine learning\nalgorithms trained for the purposes of socially sensitive decision processes.</p>\n<p>The overall goal of this research is to come up with a reasonable way to think\nabout how to make machine learning algorithms more fair. While identifying\npotential bias in training datasets and by consequence the machine learning\nalgorithms trained on them is not sufficient to solve the problem of\ndiscrimination, in a world where more and more decisions are being automated\nby Artificial Intelligence, our ability to understand and identify the degree\nto which an algorithm is fair or biased is a step in the right direction.</p>\n<h1>Regulatory Compliance and Checks for Practical and Statistical Bias</h1>\n<p>According to the Uniform Guidelines on Employee Selection Procedures (UGESP;\nEEOC et al., 1978), all assessment tools should comply to fair standard of\ntreatment for all protected groups. Audit-ai extends this to machine learning\nmethods. Let's say we build a model that makes some prediction about people.\nThis model could theoretically be anything -- a prediction of credit scores,\nthe likelihood of prison recidivism, the cost of a home loan, etc. Audit-ai\ntakes data from a known population (e.g., credit information from people of\nmultiple genders and ethnicities), and runs them through the model in question.\nThe proportional pass rates of the highest-passing demographic group are compared\nto the lowest-passing group for each demographic category (gender and\nethnicity). This proportion is known as the bias ratio.</p>\n<p>Audit-ai determines whether groups are different according to a standard of\nstatistical significance (within a statistically different margin of error) or\npractical significance (whether a difference is large enough to matter on a\npractical level). The exact threshold of statistical and practical significance\ndepends on the field and use-case. Within the hiring space, the EEOC often\nuses a statistical significance of p &lt; .05 to determine bias, and a bias ratio\nbelow the 4/5ths rule to demonstrate practical significance.</p>\n<p>The 4/5ths rule effectively states that the lowest-passing group has to be\nwithin 4/5ths of the pass rate of the highest-passing group. Consider an example\nwith 4,000 users, 1,000 of each of the following groups: Asian, Black,\nHispanic/Latino, and White, who pass at a frequency of 250, 270, 240 and 260\nusers, respectively. The highest and lowest passing groups are Black (27%) and\nHispanic/Latino (24%), respectively. The bias ratio is therefore 24/27 or .889.\nAs this ratio is greater than .80 (4/5ths), the legal requirement enforced by\nthe EEOC, the model would pass the check for practical significance. Likewise,\na chi-squared test (a common statistical test for count data) would report that\nthese groups are above the p = .05 threshold, and therefore pass the check for\nstatistical significance.</p>\n<p>Audit-ai also offers tools to check for differences over time or across\ndifferent regions, using the Cochran-Mantel-Hanzel test, a common test in\nregulatory circles. To our knowledge this is the first implementation of this\nmeasure in an open-source python format.</p>\n<h1>Features</h1>\n<p>Here are a few of the bias testing and algorithm auditing techniques\nthat this library implements.</p>\n<h3>Classification tasks</h3>\n<ul>\n<li>4/5th, fisher, z-test, bayes factor, chi squared</li>\n<li>sim_beta_ratio, classifier_posterior_probabilities</li>\n</ul>\n<h3>Regression tasks</h3>\n<ul>\n<li>anova</li>\n<li>4/5th, fisher, z-test, bayes factor, chi squared</li>\n<li>group proportions at different thresholds</li>\n</ul>\n<h1>Installation</h1>\n<p>The source code is currently hosted on GitHub: <a href=\"https://github.com/pymetrics/audit-ai\" rel=\"nofollow\">https://github.com/pymetrics/audit-ai</a></p>\n<p>You can install the latest released version with <code>pip</code>.</p>\n<pre><code># pip\npip install audit-AI\n</code></pre>\n<p>If you install with pip, you'll need to install scikit-learn, numpy, and pandas\nwith either pip or conda. Version requirements:</p>\n<ul>\n<li>numpy</li>\n<li>scipy</li>\n<li>pandas</li>\n</ul>\n<p>For vizualization:</p>\n<ul>\n<li>matplotlib</li>\n<li>seaborn</li>\n</ul>\n<h1>How to use this package:</h1>\n<p>See our implementation paper here: <a href=\"https://github.com/pymetrics/audit-ai/blob/master/examples/implementation_suggestions.md\" rel=\"nofollow\">https://github.com/pymetrics/audit-ai/blob/master/examples/implementation_suggestions.md</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">auditai.misc</span> <span class=\"kn\">import</span> <span class=\"n\">bias_test_check</span>\n\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[:,</span><span class=\"n\">features</span><span class=\"p\">]</span>\n<span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># test for bias</span>\n<span class=\"n\">bias_test_check</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'gender'</span><span class=\"p\">],</span> <span class=\"n\">results</span><span class=\"o\">=</span><span class=\"n\">y_pred</span><span class=\"p\">,</span> <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'Gender'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">*</span><span class=\"n\">Gender</span> <span class=\"n\">passes</span> <span class=\"mi\">4</span><span class=\"o\">/</span><span class=\"mi\">5</span> <span class=\"n\">test</span><span class=\"p\">,</span> <span class=\"n\">Fisher</span> <span class=\"n\">p</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">Chi</span><span class=\"o\">-</span><span class=\"n\">Squared</span> <span class=\"n\">p</span><span class=\"o\">-</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"o\">-</span><span class=\"n\">test</span> <span class=\"n\">p</span><span class=\"o\">-</span><span class=\"n\">value</span> <span class=\"ow\">and</span> <span class=\"n\">Bayes</span> <span class=\"n\">Factor</span> <span class=\"n\">at</span> <span class=\"mf\">50.00</span><span class=\"o\">*</span>\n</pre>\n<p>To get a plot of the different tests at different thresholds:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">auditai.viz</span> <span class=\"kn\">import</span> <span class=\"n\">plot_threshold_tests</span>\n\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[:,</span><span class=\"n\">features</span><span class=\"p\">]</span>\n<span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">clf</span><span class=\"o\">.</span><span class=\"n\">predict_proba</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># test for bias</span>\n<span class=\"n\">plot_threshold_tests</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'gender'</span><span class=\"p\">],</span> <span class=\"n\">results</span><span class=\"o\">=</span><span class=\"n\">y_pred</span><span class=\"p\">,</span> <span class=\"n\">category</span><span class=\"o\">=</span><span class=\"s1\">'Gender'</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"Sample audit-AI Plot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d818a3a24e53a221e9b7a776966915350806bba/646174612f617564697441495f67656e6465725f706c6f742e706e67\" width=\"1600\">\n<h1>Example Datasets</h1>\n<ul>\n<li><a href=\"https://archive.ics.uci.edu/ml/datasets/statlog+(german+credit+data)\" rel=\"nofollow\">german-credit</a></li>\n<li><a href=\"https://archive.ics.uci.edu/ml/datasets/student+performance\" rel=\"nofollow\">student-performance</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7089834, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d25861feaf008479e94a286ae6dff38b", "sha256": "a5a40ba383b2184792508ef2b4396b839f626d0a4887b664c1800c6602531ef7"}, "downloads": -1, "filename": "audit_AI-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d25861feaf008479e94a286ae6dff38b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23087, "upload_time": "2018-05-18T20:29:10", "upload_time_iso_8601": "2018-05-18T20:29:10.735986Z", "url": "https://files.pythonhosted.org/packages/06/70/dec9ffba6826e82a05ac48a74b845dbdfc22382e32c4d1da8eac09a0178e/audit_AI-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.1a1": [{"comment_text": "", "digests": {"md5": "f1ed4be4ab93c6f70816382b9fcb9df7", "sha256": "9c50ae34f5f322440affad01f753d899e2230e24ea2e5d25edc19da0d5654371"}, "downloads": -1, "filename": "audit_AI-0.0.1a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f1ed4be4ab93c6f70816382b9fcb9df7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23116, "upload_time": "2018-05-18T17:52:34", "upload_time_iso_8601": "2018-05-18T17:52:34.110471Z", "url": "https://files.pythonhosted.org/packages/f8/71/8063187367abf31d1e358e22f24cb4625f9dfd6c9bdfdfa1fcebd1c2115a/audit_AI-0.0.1a1-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "824c751aa14802397f3de3e9e2c6deb2", "sha256": "5bc193361cabb3a1f6804a3d4f5fa1812a860d9b3b1ac81325ae78a334623067"}, "downloads": -1, "filename": "audit_AI-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "824c751aa14802397f3de3e9e2c6deb2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28715, "upload_time": "2019-06-10T15:22:26", "upload_time_iso_8601": "2019-06-10T15:22:26.083206Z", "url": "https://files.pythonhosted.org/packages/a3/74/ab201ec9c5f670422e2d1cb11bfa9109aad93946cb68c6e421dc1d17f67e/audit_AI-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3f292a412b43080d1098b6c1b5ea141f", "sha256": "00556d9d5d38b4f77eeb1a49cea102170b73a6c584c76f5830ba6bc761b59e36"}, "downloads": -1, "filename": "audit_AI-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f292a412b43080d1098b6c1b5ea141f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30140, "upload_time": "2019-11-14T01:33:50", "upload_time_iso_8601": "2019-11-14T01:33:50.353960Z", "url": "https://files.pythonhosted.org/packages/80/0e/f91eeb5b75e070fff9e58cd50024663d12587aa2874162fd45b904d0f24c/audit_AI-0.0.5-py2.py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "cbaa047180ce3e11a529a98e5c31400a", "sha256": "f93de9c9379deeece4497612af9265013814ac85135ebb8a58aaefcdfb7d234c"}, "downloads": -1, "filename": "audit_AI-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbaa047180ce3e11a529a98e5c31400a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31143, "upload_time": "2020-04-24T04:39:58", "upload_time_iso_8601": "2020-04-24T04:39:58.021122Z", "url": "https://files.pythonhosted.org/packages/16/b4/50bd9ed9b4ef8da3ec9b11e5705625d070799cf63a74fa961607759f9118/audit_AI-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2000df7b18523d593cce9cea7b0f6bb", "sha256": "1b3ed9e77cf98f3cd1e502bdc5b439d1705b9af2f29f7cb3f93a90969de303e1"}, "downloads": -1, "filename": "audit-AI-0.0.6.tar.gz", "has_sig": false, "md5_digest": "f2000df7b18523d593cce9cea7b0f6bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26737, "upload_time": "2020-04-24T04:39:59", "upload_time_iso_8601": "2020-04-24T04:39:59.187735Z", "url": "https://files.pythonhosted.org/packages/e6/fc/f18a11a0194620d88a42dc0076c753ab8f404bbb0423044b8a6685c7430d/audit-AI-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbaa047180ce3e11a529a98e5c31400a", "sha256": "f93de9c9379deeece4497612af9265013814ac85135ebb8a58aaefcdfb7d234c"}, "downloads": -1, "filename": "audit_AI-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbaa047180ce3e11a529a98e5c31400a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31143, "upload_time": "2020-04-24T04:39:58", "upload_time_iso_8601": "2020-04-24T04:39:58.021122Z", "url": "https://files.pythonhosted.org/packages/16/b4/50bd9ed9b4ef8da3ec9b11e5705625d070799cf63a74fa961607759f9118/audit_AI-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2000df7b18523d593cce9cea7b0f6bb", "sha256": "1b3ed9e77cf98f3cd1e502bdc5b439d1705b9af2f29f7cb3f93a90969de303e1"}, "downloads": -1, "filename": "audit-AI-0.0.6.tar.gz", "has_sig": false, "md5_digest": "f2000df7b18523d593cce9cea7b0f6bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26737, "upload_time": "2020-04-24T04:39:59", "upload_time_iso_8601": "2020-04-24T04:39:59.187735Z", "url": "https://files.pythonhosted.org/packages/e6/fc/f18a11a0194620d88a42dc0076c753ab8f404bbb0423044b8a6685c7430d/audit-AI-0.0.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:26 2020"}