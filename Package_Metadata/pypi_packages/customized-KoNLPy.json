{"info": {"author": "Lovit", "author_email": "soy.lovit@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# customized KoNLPy\n\n\ud55c\uad6d\uc5b4 \uc790\uc5f0\uc5b4\ucc98\ub9ac\ub97c \ud560 \uc218 \uc788\ub294 \ud30c\uc774\uc36c \ud328\ud0a4\uc9c0, KoNLPy\uc758 customized version\uc785\ub2c8\ub2e4. \n\ncustomized_KoNLPy\ub294 \ud655\uc2e4\ud788 \uc54c\uace0 \uc788\ub294 \ub2e8\uc5b4\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uac70\uce58\uc9c0 \uc54a\uace0 \uc8fc\uc5b4\uc9c4 \uc5b4\uc808\uc744 \uc544\ub294 \ub2e8\uc5b4\ub4e4\ub85c \ud1a0\ud06c\ub098\uc774\uc9d5 / \ud488\uc0ac\ud310\ubcc4\uc744 \ud558\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 template \uae30\ubc18 \ud1a0\ud06c\ub098\uc774\uc9d5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4.\n\n    \uc0ac\uc804: {'\uc544\uc774\uc624\uc544\uc774': 'Noun', '\ub294': 'Josa'}\n    \ud0ec\ud50c\ub9bf: Noun + Josa\n\n\uc704\uc640 \uac19\uc740 \ub2e8\uc5b4 \ub9ac\uc2a4\ud2b8\uc640 \ud0ec\ud50c\ub9bf\uc774 \uc788\ub2e4\uba74 '\uc544\uc774\uc624\uc544\uc774\ub294' \uc774\ub77c\ub294 \uc5b4\uc808\uc740 [('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\ub294', 'Josa')]\ub85c \ubd84\ub9ac\ub429\ub2c8\ub2e4.\n\n## Install\n\n    $ git clone https://github.com/lovit/customized_konlpy.git\n\n    $ pip install customized_konlpy\n\n### Requires\n\n- JPype >= 0.6.1\n- KoNLPy >= 0.4.4\n\n## Usage\n\n### Part of speech tagging\n\nKoNLPy\uc640 \ub3d9\uc77c\ud558\uac8c Twitter.pos(phrase)\ub97c \uc785\ub825\ud569\ub2c8\ub2e4. \uac01 \uc5b4\uc808\ubcc4\ub85c \uc0ac\uc6a9\uc790 \uc0ac\uc804\uc5d0 \uc54c\ub824\uc9c4 \ub2e8\uc5b4\uac00 \uc778\uc2dd\ub418\uba74 customized_tagger\ub85c \uc5b4\uc808\uc744 \ubd84\ub9ac\ud558\uba70, \uc0ac\uc6a9\uc790 \uc0ac\uc804\uc5d0 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc740 \ub2e8\uc5b4\ub85c \uad6c\uc131\ub41c \uc5b4\uc808\uc740 \ud2b8\uc704\ud130 \ud615\ud0dc\uc18c \ubd84\uc11d\uae30\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4. \n\n    twitter.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc774\ubed0\uc694')\n\n    > [('\uc6b0\ub9ac', 'Noun'), ('\uc544\uc774\uc624', 'Noun'), ('\uc544\uc774', 'Noun'), ('\ub294', 'Josa'), ('\uc774\ubed0', 'Adjective'), ('\uc694', 'Eomi')] \n\n'\uc544\uc774\uc624\uc544\uc774'\uac00 \uc54c\ub824\uc9c4 \ub2e8\uc5b4\uac00 \uc544\ub2c8\uc5c8\uae30 \ub54c\ubb38\uc5d0 \ud2b8\uc704\ud130 \ubd84\uc11d\uae30\uc5d0\uc11c \ub2e8\uc5b4\ub97c \uc81c\ub300\ub85c \uc778\uc2dd\ud558\uc9c0 \ubabb\ud569\ub2c8\ub2e4. \uc544\ub798\uc758 \uc0ac\uc6a9\uc790 \uc0ac\uc804\uc73c\ub85c \ub2e8\uc5b4 \ucd94\uac00\ub97c \ud55c \ub4a4 \ub3d9\uc77c\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud558\uba74 \uc544\ub798\uc640 \uac19\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \n\n    twitter.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc774\ubed0\uc694')\n\n    > [('\uc6b0\ub9ac', 'Modifier'), ('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\ub294', 'Josa'), ('\uc774\ubed0', 'Adjective'), ('\uc694', 'Eomi')]\n\n\n    twitter.pos('\ud2b8\uc640\uc774\uc2a4tt\ub294 \uc88b\uc544\uc694')\n\n    > [('\ud2b8\uc640\uc774\uc2a4', 'Noun'), ('tt', 'Noun'), ('\ub294', 'Josa'), ('\uc88b', 'Adjective'), ('\uc544\uc694', 'Eomi')]\n\n### Add words to dictioanry\n\nckonlpy.tag\uc758 Twitter\ub294 add_dictionary\ub97c \ud1b5\ud558\uc5ec str \ud639\uc740 list of str \ud615\uc2dd\uc758 \uc0ac\uc6a9\uc790 \uc0ac\uc804\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \n\n    from ckonlpy.tag import Twitter\n\n    twitter.add_dictionary('\uc544\uc774\uc624\uc544\uc774', 'Noun')\n    twitter.add_dictionary(['\ud2b8\uc640\uc774\uc2a4', 'tt'], 'Noun')\n\n\ud2b8\uc704\ud130 \ud55c\uad6d\uc5b4 \ubd84\uc11d\uae30\uc5d0\uc11c \uc774\uc6a9\ud558\uc9c0 \uc54a\ub294 \ud488\uc0ac (\ub2e8\uc5b4 \ud074\ub798\uc2a4)\ub97c \ucd94\uac00\ud558\uace0 \uc2f6\uc744 \uacbd\uc6b0\uc5d0\ub294 \ubc18\ub4dc\uc2dc force=True\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4. \n\n    twitter.add_dictionary('lovit', 'Name', force=True)\n\n### Add template to customized tagger\n\n\ud604\uc7ac \uc0ac\uc6a9\uc911\uc778 \ud0ec\ud50c\ub9bf \uae30\ubc18 \ud1a0\ud06c\ub098\uc774\uc800\ub294 \ucf54\ub4dc \uc0ac\uc6a9 \uc911 \ud0ec\ud50c\ub9bf\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac \uc0ac\uc6a9\uc911\uc778 \ud0ec\ud50c\ub9bf\uc758 \ub9ac\uc2a4\ud2b8\ub294 \uc544\ub798\ucc98\ub7fc \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \n\n    twitter.template_tagger.templates\n    > [('Noun', 'Josa'), ('Modifier', 'Noun'), ('Modifier', 'Noun', 'Josa')]\n\n\ud0ec\ud50c\ub9bf\uc740 tuple of str \ud615\uc2dd\uc73c\ub85c \uc785\ub825\ud569\ub2c8\ub2e4. \n\n    twitter.template_tagger.add_a_template(('Noun', 'Noun', 'Josa'))\n\n### Set templates tagger selector\n\nTemplates\ub97c \uc774\uc6a9\ud558\uc5ec\ub3c4 \ud6c4\ubcf4\uac00 \uc5ec\ub7ec \uac1c \ub098\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec \uac1c \ud6c4\ubcf4 \uc911\uc5d0\uc11c best \ub97c \uc120\ud0dd\ud558\ub294 \ud568\uc218\ub97c \uc9c1\uc811 \ub514\uc790\uc778 \ud560 \uc218 \ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ucc98\ub7fc \uba87 \uac1c\uc758 \uc810\uc218 \uae30\uc900\uc744 \ub9cc\ub4e4\uace0, \uac01 \uae30\uc900\uc758 weight\ub97c \ubd80\uc5ec\ud558\ub294 \ubc29\uc2dd\uc740 \ud2b8\uc704\ud130 \ubd84\uc11d\uae30\uc5d0\uc11c \uc774\uc6a9\ud558\ub294 \ubc29\uc2dd\uc778\ub370, \uc9c1\uad00\uc801\uc774\uace0 \ud29c\ub2dd \uac00\ub2a5\ud574\uc11c \ub9e4\uc6b0 \uc88b\uc740 \ubc29\uc2dd\uc774\ub77c \uc0dd\uac01\ud569\ub2c8\ub2e4.\n\n    my_weights = [\n        ('num_nouns', -0.1),\n        ('num_words', -0.2),\n        ('no_noun', -1),\n        ('len_sum_of_nouns', 0.2)\n    ]\n\n    def my_evaluate_function(candidate):\n        num_nouns = len([word for word, pos, begin, e in candidate if pos == 'Noun'])\n        num_words = len(candidate)\n        has_no_nouns = (num_nouns == 0)\n        len_sum_of_nouns = 0 if has_no_nouns else sum(\n            (len(word) for word, pos, _, _ in candidate if pos == 'Noun'))\n\n        scores = (num_nouns, num_words, has_no_nouns, len_sum_of_nouns)\n        score = sum((score * weight for score, (_, weight) in zip(scores, my_weights)))\n        return score\n\n\uc704\uc758 \uc608\uc81c\ucc98\ub7fc my_weights \uc640 my_evaluate_function \ud568\uc218\ub97c \uc815\uc758\ud558\uc5ec twitter.set_evaluator()\uc5d0 \uc785\ub825\ud558\uba74, \ud574\ub2f9 \ud568\uc218 \uae30\uc900\uc73c\ub85c best candidate\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4.\n\n    twitter.set_evaluator(my_weights, my_evaluate_function)\n\n### Postprocessor\n\npasswords, stopwords, passtags, \ub2e8\uc5b4 \uce58\ud658\uc744 \uc704\ud55c \ud6c4\ucc98\ub9ac\ub97c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \n\npasswords \uc5d0 \ub4f1\ub85d\ub41c \ub2e8\uc5b4, (\ub2e8\uc5b4, \ud488\uc0ac)\ub9cc \ucd9c\ub825\ub429\ub2c8\ub2e4.\n\n    from ckonlpy.tag import Postprocessor\n\n    passwords = {'\uc544\uc774\uc624\uc544\uc774', ('\uc815\ub9d0', 'Noun')}\n    postprocessor = Postprocessor(twitter, passwords = passwords)\n    postprocessor.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc815\ub9d0 \uc774\ubed0\uc694')\n    # [('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\uc815\ub9d0', 'Noun')]\n\nstopwords \uc5d0 \ub4f1\ub85d\ub41c \ub2e8\uc5b4, (\ub2e8\uc5b4, \ud488\uc0ac)\ub294 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \n\n    stopwords = {'\ub294'}\n    postprocessor = Postprocessor(twitter, stopwords = stopwords)\n    postprocessor.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc815\ub9d0 \uc774\ubed0\uc694')\n    # [('\uc6b0\ub9ac', 'Modifier'), ('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\uc815\ub9d0', 'Noun'), ('\uc774\ubed0', 'Adjective'), ('\uc694', 'Eomi')]\n\n\ud2b9\uc815 \ud488\uc0ac\ub97c \uc9c0\uc815\ud558\uba74, \ud574\ub2f9 \ud488\uc0ac\ub9cc \ucd9c\ub825\ub429\ub2c8\ub2e4. \n\n    passtags = {'Noun'}\n    postprocessor = Postprocessor(twitter, passtags = passtags)\n    postprocessor.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc815\ub9d0 \uc774\ubed0\uc694')\n    # [('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\uc815\ub9d0', 'Noun')]\n\n\uce58\ud658\ud560 \ub2e8\uc5b4, (\ub2e8\uc5b4, \ud488\uc0ac)\ub97c dict \ud615\uc2dd\uc73c\ub85c \uc815\uc758\ud558\uba74 tag \uc5d0\uc11c \ub2e8\uc5b4\uac00 \uce58\ud658\ub418\uc5b4 \ucd9c\ub825\ub429\ub2c8\ub2e4.\n\n    replace = {'\uc544\uc774\uc624\uc544\uc774': '\uc544\uc774\ub3cc', ('\uc774\ubed0', 'Adjective'): '\uc608\uc058\ub2e4'}\n    postprocessor = Postprocessor(twitter, replace = replace)\n    postprocessor.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc815\ub9d0 \uc774\ubed0\uc694')\n    # [('\uc6b0\ub9ac', 'Modifier'), ('\uc544\uc774\ub3cc', 'Noun'), ('\ub294', 'Josa'), ('\uc815\ub9d0', 'Noun'), ('\uc608\uc058\ub2e4', 'Adjective'), ('\uc694', 'Eomi')]\n\n\uc5f0\uc18d\ub41c \ub2e8\uc5b4\ub97c \ud558\ub098\uc758 \ub2e8\uc5b4\ub8e8 \ubb36\uae30 \uc704\ud574\uc11c nested tuple \uc774\ub098 tuple of str \ud615\uc2dd\uc758 ngram \uc744 \uc785\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. tuple of str \uc758 \ud615\uc2dd\uc73c\ub85c \uc785\ub825\ub41c ngram \uc740 Noun \uc73c\ub85c \uc778\uc2dd\ub429\ub2c8\ub2e4.\n\n    ngrams = [(('\ubbf8\uc2a4', '\ud568\ubb34\ub77c\ube44'), 'Noun'), ('\ubc14\ub78c', '\uc758', '\ub098\ub77c')]\n    postprocessor = Postprocessor(twitter, ngrams = ngrams)\n    postprocessor.pos('\ubbf8\uc2a4 \ud568\ubb34\ub77c\ube44\ub294 \uc7ac\ubc0c\ub294 \ub4dc\ub77c\ub9c8\uc785\ub2c8\ub2e4')\n    # [('\ubbf8\uc2a4 - \ud568\ubb34\ub77c\ube44', 'Noun'), ('\ub294', 'Josa'), ('\uc7ac\ubc0c\ub294', 'Adjective'), ('\ub4dc\ub77c\ub9c8', 'Noun'), ('\uc785\ub2c8', 'Adjective'), ('\ub2e4', 'Eomi')]\n\n### Loading wordset\n\nutils \uc5d0\ub294 stopwords, passwords, replace word pair \ub97c \ud30c\uc77c\ub85c \uc800\uc7a5\ud558\uc600\uc744 \uacbd\uc6b0, \uc774\ub97c \uc190\uc27d\uac8c \ubd88\ub7ec\uc624\ub294 \ud568\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4.\n\nload_wordset \uc740 set of str \ud639\uc740 set of tuple \uc744 return \ud569\ub2c8\ub2e4. \uc608\uc2dc\uc758 passwords.txt \uc758 \ub0b4\uc6a9\uc740 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4. \ub2e8\uc5b4\uc758 \ud488\uc0ac\ub294 \ud55c \uce78 \ub744\uc5b4\uc4f0\uae30\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4. stopwords.txt \ub3c4 \ub3d9\uc77c\ud55c \ud3ec\uba67\uc785\ub2c8\ub2e4.\n\n    \uc544\uc774\uc624\uc544\uc774\n    \uc544\uc774\uc624\uc544\uc774 Noun\n    \uacf5\uc5f0\n\nload_wordset \uc744 \uc774\uc6a9\ud558\ub294 \uc608\uc2dc\ucf54\ub4dc \uc785\ub2c8\ub2e4.\n\n    from ckonlpy.utils import load_wordset\n\n    passwords = load_wordset('./passwords.txt')\n    print(passwords) # {('\uc544\uc774\uc624\uc544\uc774', 'Noun'), '\uc544\uc774\uc624\uc544\uc774', '\uacf5\uc5f0'}\n\n    stopwords = load_wordset('./stopwords.txt')\n    print(stopwords) # {'\uc740', '\ub294', ('\uc774', 'Josa')}\n\n\uce58\ud658\ud560 \ub2e8\uc5b4\uc30d\uc740 tap \uad6c\ubd84\uc774 \ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4. \uce58\ud658\ub420 \ub2e8\uc5b4\uc5d0 \ud488\uc0ac \ud0dc\uadf8\uac00 \uc788\uc744 \uacbd\uc6b0 \ud55c \uce78 \ub744\uc5b4\uc4f0\uae30\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4.\n\n    str\\tstr\n    str str\\tstr\n\n\uc544\ub798\ub294 replacewords.txt \uc758 \uc608\uc2dc\uc785\ub2c8\ub2e4.\n\n    \uc544\ube60\t\uc544\ubc84\uc9c0\n    \uc5c4\ub9c8 Noun\t\uc5b4\uba38\ub2c8\n\nload_replace_wordpair \uc744 \uc774\uc6a9\ud558\ub294 \uc608\uc2dc\ucf54\ub4dc \uc785\ub2c8\ub2e4.\n\n    from ckonlpy.utils import load_replace_wordpair\n\n    replace = load_replace_wordpair('./replacewords.txt')\n    print(replace) # {'\uc544\ube60': '\uc544\ubc84\uc9c0', ('\uc5c4\ub9c8', 'Noun'): '\uc5b4\uba38\ub2c8'}\n\nngram \ub2e8\uc5b4\ub4e4\uc758 \uac01 \ub2e8\uc5b4\ub294 \ud55c \uce78 \ub744\uc5b4\uc4f0\uae30\ub85c, ngram \uc758 \ud488\uc0ac\ub294 tap \uc73c\ub85c \uad6c\ubd84\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.\n\n    str str\n    str str\\tstr\n\n\uc544\ub798\ub294 ngrams.txt \uc758 \uc608\uc2dc\uc785\ub2c8\ub2e4.\n\n    \ubc14\ub78c \uc758 \ub098\ub77c\n    \ubbf8\uc2a4 \ud568\ubb34\ub77c\ube44\tNoun\n\nload_ngram \uc744 \uc774\uc6a9\ud558\ub294 \uc608\uc2dc\ucf54\ub4dc \uc785\ub2c8\ub2e4.\n\n    from ckonlpy.utils import load_ngram\n\n    ngrams = load_ngram('./ngrams.txt')\n    print(ngrams) # [('\ubc14\ub78c', '\uc758', '\ub098\ub77c'), (('\ubbf8\uc2a4', '\ud568\ubb34\ub77c\ube44'), 'Noun')]\n\n## 0.0.6+ vs 0.0.5x\n\n0.0.5x \uc5d0\uc11c\uc758 \ubcc0\uc218\uc640 \ud568\uc218\uc758 \uc774\ub984, \ubcc0\uc218\uc758 \ud0c0\uc785 \uc77c\ubd80\ub97c \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4.\n\n| \ubcc0\uacbd \uc804 | \ubcc0\uacbd \ud6c4 |\n| --- | --- |\n| ckonlpy.tag.Twitter._loaded_twitter_default_dictionary | ckonlpy.tag.Twitter.use_twitter_dictionary |\n| ckonlpy.tag.Twitter._dictionary | ckonlpy.tag.Twitter.dictionary |\n| ckonlpy.tag.Twitter._customized_tagger | ckonlpy.tag.Twitter.template_tagger |\n| ckonlpy.tag.Postprocessor.tag | ckonlpy.tag.Postprocessor.pos |\n| ckonlpy.custom_tag.SimpleSelector | ckonlpy.custom_tag.SimpleEvalator |\n| ckonlpy.custom_tag.SimpleSelector.score | ckonlpy.custom_tag.SimpleEvalator.evaluate |\n| ckonlpy.tag.Twitter.set_selector | ckonlpy.tag.AbstractTagger.set_evaluator |\n| ckonlpy.custom_tag.SimpleSelector.weight | ckonlpy.custom_tag.SimpleEvaluator.weight |\n\n| \ubcc0\uacbd \ud6c4 | \ubcc0\uacbd \uc774\uc720 |\n| --- | --- |\n| ckonlpy.tag.Twitter.use_twitter_dictionary | konlpy.tag.Twitter \uc758 \uc0ac\uc804 \uc0ac\uc6a9 \uc720\ubb34 |\n| ckonlpy.tag.Twitter.dictionary | public \uc73c\ub85c \ubcc0\ud658\ud558\uc600\uc2b5\ub2c8\ub2e4 |\n| ckonlpy.tag.Twitter.template_tagger | Template \uae30\ubc18\uc73c\ub85c \uc791\ub3d9\ud558\ub294 tagger \uc784\uc744 \uba85\uc2dc\ud558\uace0, public \uc73c\ub85c \ubcc0\ud658\ud558\uc600\uc2b5\ub2c8\ub2e4 |\n| ckonlpy.tag.Postprocessor.pos | \uae30\ubcf8 tagger \uc758 \uacb0\uacfc\ub97c \ud6c4\ucc98\ub9ac\ud558\ub294 \uae30\ub2a5\uc774\uae30 \ub54c\ubb38\uc5d0 \ub3d9\uc77c\ud55c \ud568\uc218\uba85\uc73c\ub85c \ud1b5\uc77c\ud558\uc600\uc2b5\ub2c8\ub2e4 |\n| ckonlpy.custom_tag.SimpleEvalator | \ud074\ub798\uc2a4 \uc774\ub984\uc744 Selector \uc5d0\uc11c Evaluator \ub85c \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4 |\n| ckonlpy.custom_tag.SimpleEvalator.evaluate | \ud488\uc0ac\uc5f4 \ud6c4\ubcf4\uc758 \uc810\uc218 \uacc4\uc0b0 \ubd80\ubd84\uc744 score --> evaluate \ub85c \ud568\uc218\uba85\uc744 \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4 |\n| ckonlpy.tag.AbstractTagger.set_evaluator | \ud488\uc0ac\uc5f4 \ud6c4\ubcf4\uc758 \uc810\uc218 \uacc4\uc0b0 \ud568\uc218\ub97c \uc124\uc815\ud558\ub294 \ud568\uc218\uc758 \uc774\ub984\uc744 \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 \ud568\uc218\ub294 ckonlpy.tag.Twitter \uc5d0\uc11c ckonlpy.tag.AbstractTagger \ub85c \uc774\ub3d9\ud558\uc600\uc2b5\ub2c8\ub2e4 |\n| ckonlpy.custom_tag.SimpleEvaluator.weight | {str:float} \ud615\uc2dd\uc758 weight \ub97c [(str, float)] \ud615\uc2dd\uc73c\ub85c \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4 |\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lovit/customized_konlpy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "customized-KoNLPy", "package_url": "https://pypi.org/project/customized-KoNLPy/", "platform": "", "project_url": "https://pypi.org/project/customized-KoNLPy/", "project_urls": {"Homepage": "https://github.com/lovit/customized_konlpy"}, "release_url": "https://pypi.org/project/customized-KoNLPy/0.0.64/", "requires_dist": ["Jpype1 (>=0.6.1)", "konlpy (>=0.4.4)"], "requires_python": "", "summary": "KoNLPy wrapping package", "version": "0.0.64", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>customized KoNLPy</h1>\n<p>\ud55c\uad6d\uc5b4 \uc790\uc5f0\uc5b4\ucc98\ub9ac\ub97c \ud560 \uc218 \uc788\ub294 \ud30c\uc774\uc36c \ud328\ud0a4\uc9c0, KoNLPy\uc758 customized version\uc785\ub2c8\ub2e4.</p>\n<p>customized_KoNLPy\ub294 \ud655\uc2e4\ud788 \uc54c\uace0 \uc788\ub294 \ub2e8\uc5b4\ub4e4\uc5d0 \ub300\ud574\uc11c\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uac70\uce58\uc9c0 \uc54a\uace0 \uc8fc\uc5b4\uc9c4 \uc5b4\uc808\uc744 \uc544\ub294 \ub2e8\uc5b4\ub4e4\ub85c \ud1a0\ud06c\ub098\uc774\uc9d5 / \ud488\uc0ac\ud310\ubcc4\uc744 \ud558\ub294 \uae30\ub2a5\uc744 \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\ub97c \uc704\ud574 template \uae30\ubc18 \ud1a0\ud06c\ub098\uc774\uc9d5\uc744 \uc218\ud589\ud569\ub2c8\ub2e4.</p>\n<pre><code>\uc0ac\uc804: {'\uc544\uc774\uc624\uc544\uc774': 'Noun', '\ub294': 'Josa'}\n\ud0ec\ud50c\ub9bf: Noun + Josa\n</code></pre>\n<p>\uc704\uc640 \uac19\uc740 \ub2e8\uc5b4 \ub9ac\uc2a4\ud2b8\uc640 \ud0ec\ud50c\ub9bf\uc774 \uc788\ub2e4\uba74 '\uc544\uc774\uc624\uc544\uc774\ub294' \uc774\ub77c\ub294 \uc5b4\uc808\uc740 [('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\ub294', 'Josa')]\ub85c \ubd84\ub9ac\ub429\ub2c8\ub2e4.</p>\n<h2>Install</h2>\n<pre><code>$ git clone https://github.com/lovit/customized_konlpy.git\n\n$ pip install customized_konlpy\n</code></pre>\n<h3>Requires</h3>\n<ul>\n<li>JPype &gt;= 0.6.1</li>\n<li>KoNLPy &gt;= 0.4.4</li>\n</ul>\n<h2>Usage</h2>\n<h3>Part of speech tagging</h3>\n<p>KoNLPy\uc640 \ub3d9\uc77c\ud558\uac8c Twitter.pos(phrase)\ub97c \uc785\ub825\ud569\ub2c8\ub2e4. \uac01 \uc5b4\uc808\ubcc4\ub85c \uc0ac\uc6a9\uc790 \uc0ac\uc804\uc5d0 \uc54c\ub824\uc9c4 \ub2e8\uc5b4\uac00 \uc778\uc2dd\ub418\uba74 customized_tagger\ub85c \uc5b4\uc808\uc744 \ubd84\ub9ac\ud558\uba70, \uc0ac\uc6a9\uc790 \uc0ac\uc804\uc5d0 \uc54c\ub824\uc9c0\uc9c0 \uc54a\uc740 \ub2e8\uc5b4\ub85c \uad6c\uc131\ub41c \uc5b4\uc808\uc740 \ud2b8\uc704\ud130 \ud615\ud0dc\uc18c \ubd84\uc11d\uae30\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4.</p>\n<pre><code>twitter.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc774\ubed0\uc694')\n\n&gt; [('\uc6b0\ub9ac', 'Noun'), ('\uc544\uc774\uc624', 'Noun'), ('\uc544\uc774', 'Noun'), ('\ub294', 'Josa'), ('\uc774\ubed0', 'Adjective'), ('\uc694', 'Eomi')] \n</code></pre>\n<p>'\uc544\uc774\uc624\uc544\uc774'\uac00 \uc54c\ub824\uc9c4 \ub2e8\uc5b4\uac00 \uc544\ub2c8\uc5c8\uae30 \ub54c\ubb38\uc5d0 \ud2b8\uc704\ud130 \ubd84\uc11d\uae30\uc5d0\uc11c \ub2e8\uc5b4\ub97c \uc81c\ub300\ub85c \uc778\uc2dd\ud558\uc9c0 \ubabb\ud569\ub2c8\ub2e4. \uc544\ub798\uc758 \uc0ac\uc6a9\uc790 \uc0ac\uc804\uc73c\ub85c \ub2e8\uc5b4 \ucd94\uac00\ub97c \ud55c \ub4a4 \ub3d9\uc77c\ud55c \uc791\uc5c5\uc744 \uc218\ud589\ud558\uba74 \uc544\ub798\uc640 \uac19\uc740 \uacb0\uacfc\ub97c \uc5bb\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>\n<pre><code>twitter.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc774\ubed0\uc694')\n\n&gt; [('\uc6b0\ub9ac', 'Modifier'), ('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\ub294', 'Josa'), ('\uc774\ubed0', 'Adjective'), ('\uc694', 'Eomi')]\n\n\ntwitter.pos('\ud2b8\uc640\uc774\uc2a4tt\ub294 \uc88b\uc544\uc694')\n\n&gt; [('\ud2b8\uc640\uc774\uc2a4', 'Noun'), ('tt', 'Noun'), ('\ub294', 'Josa'), ('\uc88b', 'Adjective'), ('\uc544\uc694', 'Eomi')]\n</code></pre>\n<h3>Add words to dictioanry</h3>\n<p>ckonlpy.tag\uc758 Twitter\ub294 add_dictionary\ub97c \ud1b5\ud558\uc5ec str \ud639\uc740 list of str \ud615\uc2dd\uc758 \uc0ac\uc6a9\uc790 \uc0ac\uc804\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>\n<pre><code>from ckonlpy.tag import Twitter\n\ntwitter.add_dictionary('\uc544\uc774\uc624\uc544\uc774', 'Noun')\ntwitter.add_dictionary(['\ud2b8\uc640\uc774\uc2a4', 'tt'], 'Noun')\n</code></pre>\n<p>\ud2b8\uc704\ud130 \ud55c\uad6d\uc5b4 \ubd84\uc11d\uae30\uc5d0\uc11c \uc774\uc6a9\ud558\uc9c0 \uc54a\ub294 \ud488\uc0ac (\ub2e8\uc5b4 \ud074\ub798\uc2a4)\ub97c \ucd94\uac00\ud558\uace0 \uc2f6\uc744 \uacbd\uc6b0\uc5d0\ub294 \ubc18\ub4dc\uc2dc force=True\ub85c \uc124\uc815\ud574\uc57c \ud569\ub2c8\ub2e4.</p>\n<pre><code>twitter.add_dictionary('lovit', 'Name', force=True)\n</code></pre>\n<h3>Add template to customized tagger</h3>\n<p>\ud604\uc7ac \uc0ac\uc6a9\uc911\uc778 \ud0ec\ud50c\ub9bf \uae30\ubc18 \ud1a0\ud06c\ub098\uc774\uc800\ub294 \ucf54\ub4dc \uc0ac\uc6a9 \uc911 \ud0ec\ud50c\ub9bf\uc744 \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud604\uc7ac \uc0ac\uc6a9\uc911\uc778 \ud0ec\ud50c\ub9bf\uc758 \ub9ac\uc2a4\ud2b8\ub294 \uc544\ub798\ucc98\ub7fc \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>\n<pre><code>twitter.template_tagger.templates\n&gt; [('Noun', 'Josa'), ('Modifier', 'Noun'), ('Modifier', 'Noun', 'Josa')]\n</code></pre>\n<p>\ud0ec\ud50c\ub9bf\uc740 tuple of str \ud615\uc2dd\uc73c\ub85c \uc785\ub825\ud569\ub2c8\ub2e4.</p>\n<pre><code>twitter.template_tagger.add_a_template(('Noun', 'Noun', 'Josa'))\n</code></pre>\n<h3>Set templates tagger selector</h3>\n<p>Templates\ub97c \uc774\uc6a9\ud558\uc5ec\ub3c4 \ud6c4\ubcf4\uac00 \uc5ec\ub7ec \uac1c \ub098\uc62c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc5ec\ub7ec \uac1c \ud6c4\ubcf4 \uc911\uc5d0\uc11c best \ub97c \uc120\ud0dd\ud558\ub294 \ud568\uc218\ub97c \uc9c1\uc811 \ub514\uc790\uc778 \ud560 \uc218 \ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ucc98\ub7fc \uba87 \uac1c\uc758 \uc810\uc218 \uae30\uc900\uc744 \ub9cc\ub4e4\uace0, \uac01 \uae30\uc900\uc758 weight\ub97c \ubd80\uc5ec\ud558\ub294 \ubc29\uc2dd\uc740 \ud2b8\uc704\ud130 \ubd84\uc11d\uae30\uc5d0\uc11c \uc774\uc6a9\ud558\ub294 \ubc29\uc2dd\uc778\ub370, \uc9c1\uad00\uc801\uc774\uace0 \ud29c\ub2dd \uac00\ub2a5\ud574\uc11c \ub9e4\uc6b0 \uc88b\uc740 \ubc29\uc2dd\uc774\ub77c \uc0dd\uac01\ud569\ub2c8\ub2e4.</p>\n<pre><code>my_weights = [\n    ('num_nouns', -0.1),\n    ('num_words', -0.2),\n    ('no_noun', -1),\n    ('len_sum_of_nouns', 0.2)\n]\n\ndef my_evaluate_function(candidate):\n    num_nouns = len([word for word, pos, begin, e in candidate if pos == 'Noun'])\n    num_words = len(candidate)\n    has_no_nouns = (num_nouns == 0)\n    len_sum_of_nouns = 0 if has_no_nouns else sum(\n        (len(word) for word, pos, _, _ in candidate if pos == 'Noun'))\n\n    scores = (num_nouns, num_words, has_no_nouns, len_sum_of_nouns)\n    score = sum((score * weight for score, (_, weight) in zip(scores, my_weights)))\n    return score\n</code></pre>\n<p>\uc704\uc758 \uc608\uc81c\ucc98\ub7fc my_weights \uc640 my_evaluate_function \ud568\uc218\ub97c \uc815\uc758\ud558\uc5ec twitter.set_evaluator()\uc5d0 \uc785\ub825\ud558\uba74, \ud574\ub2f9 \ud568\uc218 \uae30\uc900\uc73c\ub85c best candidate\ub97c \uc120\ud0dd\ud569\ub2c8\ub2e4.</p>\n<pre><code>twitter.set_evaluator(my_weights, my_evaluate_function)\n</code></pre>\n<h3>Postprocessor</h3>\n<p>passwords, stopwords, passtags, \ub2e8\uc5b4 \uce58\ud658\uc744 \uc704\ud55c \ud6c4\ucc98\ub9ac\ub97c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>\n<p>passwords \uc5d0 \ub4f1\ub85d\ub41c \ub2e8\uc5b4, (\ub2e8\uc5b4, \ud488\uc0ac)\ub9cc \ucd9c\ub825\ub429\ub2c8\ub2e4.</p>\n<pre><code>from ckonlpy.tag import Postprocessor\n\npasswords = {'\uc544\uc774\uc624\uc544\uc774', ('\uc815\ub9d0', 'Noun')}\npostprocessor = Postprocessor(twitter, passwords = passwords)\npostprocessor.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc815\ub9d0 \uc774\ubed0\uc694')\n# [('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\uc815\ub9d0', 'Noun')]\n</code></pre>\n<p>stopwords \uc5d0 \ub4f1\ub85d\ub41c \ub2e8\uc5b4, (\ub2e8\uc5b4, \ud488\uc0ac)\ub294 \ucd9c\ub825\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</p>\n<pre><code>stopwords = {'\ub294'}\npostprocessor = Postprocessor(twitter, stopwords = stopwords)\npostprocessor.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc815\ub9d0 \uc774\ubed0\uc694')\n# [('\uc6b0\ub9ac', 'Modifier'), ('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\uc815\ub9d0', 'Noun'), ('\uc774\ubed0', 'Adjective'), ('\uc694', 'Eomi')]\n</code></pre>\n<p>\ud2b9\uc815 \ud488\uc0ac\ub97c \uc9c0\uc815\ud558\uba74, \ud574\ub2f9 \ud488\uc0ac\ub9cc \ucd9c\ub825\ub429\ub2c8\ub2e4.</p>\n<pre><code>passtags = {'Noun'}\npostprocessor = Postprocessor(twitter, passtags = passtags)\npostprocessor.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc815\ub9d0 \uc774\ubed0\uc694')\n# [('\uc544\uc774\uc624\uc544\uc774', 'Noun'), ('\uc815\ub9d0', 'Noun')]\n</code></pre>\n<p>\uce58\ud658\ud560 \ub2e8\uc5b4, (\ub2e8\uc5b4, \ud488\uc0ac)\ub97c dict \ud615\uc2dd\uc73c\ub85c \uc815\uc758\ud558\uba74 tag \uc5d0\uc11c \ub2e8\uc5b4\uac00 \uce58\ud658\ub418\uc5b4 \ucd9c\ub825\ub429\ub2c8\ub2e4.</p>\n<pre><code>replace = {'\uc544\uc774\uc624\uc544\uc774': '\uc544\uc774\ub3cc', ('\uc774\ubed0', 'Adjective'): '\uc608\uc058\ub2e4'}\npostprocessor = Postprocessor(twitter, replace = replace)\npostprocessor.pos('\uc6b0\ub9ac\uc544\uc774\uc624\uc544\uc774\ub294 \uc815\ub9d0 \uc774\ubed0\uc694')\n# [('\uc6b0\ub9ac', 'Modifier'), ('\uc544\uc774\ub3cc', 'Noun'), ('\ub294', 'Josa'), ('\uc815\ub9d0', 'Noun'), ('\uc608\uc058\ub2e4', 'Adjective'), ('\uc694', 'Eomi')]\n</code></pre>\n<p>\uc5f0\uc18d\ub41c \ub2e8\uc5b4\ub97c \ud558\ub098\uc758 \ub2e8\uc5b4\ub8e8 \ubb36\uae30 \uc704\ud574\uc11c nested tuple \uc774\ub098 tuple of str \ud615\uc2dd\uc758 ngram \uc744 \uc785\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. tuple of str \uc758 \ud615\uc2dd\uc73c\ub85c \uc785\ub825\ub41c ngram \uc740 Noun \uc73c\ub85c \uc778\uc2dd\ub429\ub2c8\ub2e4.</p>\n<pre><code>ngrams = [(('\ubbf8\uc2a4', '\ud568\ubb34\ub77c\ube44'), 'Noun'), ('\ubc14\ub78c', '\uc758', '\ub098\ub77c')]\npostprocessor = Postprocessor(twitter, ngrams = ngrams)\npostprocessor.pos('\ubbf8\uc2a4 \ud568\ubb34\ub77c\ube44\ub294 \uc7ac\ubc0c\ub294 \ub4dc\ub77c\ub9c8\uc785\ub2c8\ub2e4')\n# [('\ubbf8\uc2a4 - \ud568\ubb34\ub77c\ube44', 'Noun'), ('\ub294', 'Josa'), ('\uc7ac\ubc0c\ub294', 'Adjective'), ('\ub4dc\ub77c\ub9c8', 'Noun'), ('\uc785\ub2c8', 'Adjective'), ('\ub2e4', 'Eomi')]\n</code></pre>\n<h3>Loading wordset</h3>\n<p>utils \uc5d0\ub294 stopwords, passwords, replace word pair \ub97c \ud30c\uc77c\ub85c \uc800\uc7a5\ud558\uc600\uc744 \uacbd\uc6b0, \uc774\ub97c \uc190\uc27d\uac8c \ubd88\ub7ec\uc624\ub294 \ud568\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4.</p>\n<p>load_wordset \uc740 set of str \ud639\uc740 set of tuple \uc744 return \ud569\ub2c8\ub2e4. \uc608\uc2dc\uc758 passwords.txt \uc758 \ub0b4\uc6a9\uc740 \uc544\ub798\uc640 \uac19\uc2b5\ub2c8\ub2e4. \ub2e8\uc5b4\uc758 \ud488\uc0ac\ub294 \ud55c \uce78 \ub744\uc5b4\uc4f0\uae30\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4. stopwords.txt \ub3c4 \ub3d9\uc77c\ud55c \ud3ec\uba67\uc785\ub2c8\ub2e4.</p>\n<pre><code>\uc544\uc774\uc624\uc544\uc774\n\uc544\uc774\uc624\uc544\uc774 Noun\n\uacf5\uc5f0\n</code></pre>\n<p>load_wordset \uc744 \uc774\uc6a9\ud558\ub294 \uc608\uc2dc\ucf54\ub4dc \uc785\ub2c8\ub2e4.</p>\n<pre><code>from ckonlpy.utils import load_wordset\n\npasswords = load_wordset('./passwords.txt')\nprint(passwords) # {('\uc544\uc774\uc624\uc544\uc774', 'Noun'), '\uc544\uc774\uc624\uc544\uc774', '\uacf5\uc5f0'}\n\nstopwords = load_wordset('./stopwords.txt')\nprint(stopwords) # {'\uc740', '\ub294', ('\uc774', 'Josa')}\n</code></pre>\n<p>\uce58\ud658\ud560 \ub2e8\uc5b4\uc30d\uc740 tap \uad6c\ubd84\uc774 \ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4. \uce58\ud658\ub420 \ub2e8\uc5b4\uc5d0 \ud488\uc0ac \ud0dc\uadf8\uac00 \uc788\uc744 \uacbd\uc6b0 \ud55c \uce78 \ub744\uc5b4\uc4f0\uae30\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4.</p>\n<pre><code>str\\tstr\nstr str\\tstr\n</code></pre>\n<p>\uc544\ub798\ub294 replacewords.txt \uc758 \uc608\uc2dc\uc785\ub2c8\ub2e4.</p>\n<pre><code>\uc544\ube60\t\uc544\ubc84\uc9c0\n\uc5c4\ub9c8 Noun\t\uc5b4\uba38\ub2c8\n</code></pre>\n<p>load_replace_wordpair \uc744 \uc774\uc6a9\ud558\ub294 \uc608\uc2dc\ucf54\ub4dc \uc785\ub2c8\ub2e4.</p>\n<pre><code>from ckonlpy.utils import load_replace_wordpair\n\nreplace = load_replace_wordpair('./replacewords.txt')\nprint(replace) # {'\uc544\ube60': '\uc544\ubc84\uc9c0', ('\uc5c4\ub9c8', 'Noun'): '\uc5b4\uba38\ub2c8'}\n</code></pre>\n<p>ngram \ub2e8\uc5b4\ub4e4\uc758 \uac01 \ub2e8\uc5b4\ub294 \ud55c \uce78 \ub744\uc5b4\uc4f0\uae30\ub85c, ngram \uc758 \ud488\uc0ac\ub294 tap \uc73c\ub85c \uad6c\ubd84\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.</p>\n<pre><code>str str\nstr str\\tstr\n</code></pre>\n<p>\uc544\ub798\ub294 ngrams.txt \uc758 \uc608\uc2dc\uc785\ub2c8\ub2e4.</p>\n<pre><code>\ubc14\ub78c \uc758 \ub098\ub77c\n\ubbf8\uc2a4 \ud568\ubb34\ub77c\ube44\tNoun\n</code></pre>\n<p>load_ngram \uc744 \uc774\uc6a9\ud558\ub294 \uc608\uc2dc\ucf54\ub4dc \uc785\ub2c8\ub2e4.</p>\n<pre><code>from ckonlpy.utils import load_ngram\n\nngrams = load_ngram('./ngrams.txt')\nprint(ngrams) # [('\ubc14\ub78c', '\uc758', '\ub098\ub77c'), (('\ubbf8\uc2a4', '\ud568\ubb34\ub77c\ube44'), 'Noun')]\n</code></pre>\n<h2>0.0.6+ vs 0.0.5x</h2>\n<p>0.0.5x \uc5d0\uc11c\uc758 \ubcc0\uc218\uc640 \ud568\uc218\uc758 \uc774\ub984, \ubcc0\uc218\uc758 \ud0c0\uc785 \uc77c\ubd80\ub97c \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4.</p>\n<table>\n<thead>\n<tr>\n<th>\ubcc0\uacbd \uc804</th>\n<th>\ubcc0\uacbd \ud6c4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ckonlpy.tag.Twitter._loaded_twitter_default_dictionary</td>\n<td>ckonlpy.tag.Twitter.use_twitter_dictionary</td>\n</tr>\n<tr>\n<td>ckonlpy.tag.Twitter._dictionary</td>\n<td>ckonlpy.tag.Twitter.dictionary</td>\n</tr>\n<tr>\n<td>ckonlpy.tag.Twitter._customized_tagger</td>\n<td>ckonlpy.tag.Twitter.template_tagger</td>\n</tr>\n<tr>\n<td>ckonlpy.tag.Postprocessor.tag</td>\n<td>ckonlpy.tag.Postprocessor.pos</td>\n</tr>\n<tr>\n<td>ckonlpy.custom_tag.SimpleSelector</td>\n<td>ckonlpy.custom_tag.SimpleEvalator</td>\n</tr>\n<tr>\n<td>ckonlpy.custom_tag.SimpleSelector.score</td>\n<td>ckonlpy.custom_tag.SimpleEvalator.evaluate</td>\n</tr>\n<tr>\n<td>ckonlpy.tag.Twitter.set_selector</td>\n<td>ckonlpy.tag.AbstractTagger.set_evaluator</td>\n</tr>\n<tr>\n<td>ckonlpy.custom_tag.SimpleSelector.weight</td>\n<td>ckonlpy.custom_tag.SimpleEvaluator.weight</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>\ubcc0\uacbd \ud6c4</th>\n<th>\ubcc0\uacbd \uc774\uc720</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ckonlpy.tag.Twitter.use_twitter_dictionary</td>\n<td>konlpy.tag.Twitter \uc758 \uc0ac\uc804 \uc0ac\uc6a9 \uc720\ubb34</td>\n</tr>\n<tr>\n<td>ckonlpy.tag.Twitter.dictionary</td>\n<td>public \uc73c\ub85c \ubcc0\ud658\ud558\uc600\uc2b5\ub2c8\ub2e4</td>\n</tr>\n<tr>\n<td>ckonlpy.tag.Twitter.template_tagger</td>\n<td>Template \uae30\ubc18\uc73c\ub85c \uc791\ub3d9\ud558\ub294 tagger \uc784\uc744 \uba85\uc2dc\ud558\uace0, public \uc73c\ub85c \ubcc0\ud658\ud558\uc600\uc2b5\ub2c8\ub2e4</td>\n</tr>\n<tr>\n<td>ckonlpy.tag.Postprocessor.pos</td>\n<td>\uae30\ubcf8 tagger \uc758 \uacb0\uacfc\ub97c \ud6c4\ucc98\ub9ac\ud558\ub294 \uae30\ub2a5\uc774\uae30 \ub54c\ubb38\uc5d0 \ub3d9\uc77c\ud55c \ud568\uc218\uba85\uc73c\ub85c \ud1b5\uc77c\ud558\uc600\uc2b5\ub2c8\ub2e4</td>\n</tr>\n<tr>\n<td>ckonlpy.custom_tag.SimpleEvalator</td>\n<td>\ud074\ub798\uc2a4 \uc774\ub984\uc744 Selector \uc5d0\uc11c Evaluator \ub85c \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4</td>\n</tr>\n<tr>\n<td>ckonlpy.custom_tag.SimpleEvalator.evaluate</td>\n<td>\ud488\uc0ac\uc5f4 \ud6c4\ubcf4\uc758 \uc810\uc218 \uacc4\uc0b0 \ubd80\ubd84\uc744 score --&gt; evaluate \ub85c \ud568\uc218\uba85\uc744 \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4</td>\n</tr>\n<tr>\n<td>ckonlpy.tag.AbstractTagger.set_evaluator</td>\n<td>\ud488\uc0ac\uc5f4 \ud6c4\ubcf4\uc758 \uc810\uc218 \uacc4\uc0b0 \ud568\uc218\ub97c \uc124\uc815\ud558\ub294 \ud568\uc218\uc758 \uc774\ub984\uc744 \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4. \ud574\ub2f9 \ud568\uc218\ub294 ckonlpy.tag.Twitter \uc5d0\uc11c ckonlpy.tag.AbstractTagger \ub85c \uc774\ub3d9\ud558\uc600\uc2b5\ub2c8\ub2e4</td>\n</tr>\n<tr>\n<td>ckonlpy.custom_tag.SimpleEvaluator.weight</td>\n<td>{str:float} \ud615\uc2dd\uc758 weight \ub97c [(str, float)] \ud615\uc2dd\uc73c\ub85c \ubcc0\uacbd\ud558\uc600\uc2b5\ub2c8\ub2e4</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 4155994, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "51b092cd1b3732770cd6943ef88295e4", "sha256": "0f46d9234c73b68e20a039d4922fdc1bf2a1e1ec4f0b5ba80bdd7e68af3d05ad"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "51b092cd1b3732770cd6943ef88295e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11369, "upload_time": "2017-06-21T05:01:27", "upload_time_iso_8601": "2017-06-21T05:01:27.468399Z", "url": "https://files.pythonhosted.org/packages/ab/8c/4ecee4ece7d1ef56f2212de0531d4513d9b3beeb5f6a8435673699f51bda/customized_KoNLPy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b49518a76d769866c1daf201638721f", "sha256": "71df5d8a63280220c67977fb8f4a9aeab13e8c2478a07640fe46faab3ab49084"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5b49518a76d769866c1daf201638721f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7924, "upload_time": "2017-06-21T05:01:28", "upload_time_iso_8601": "2017-06-21T05:01:28.740983Z", "url": "https://files.pythonhosted.org/packages/c6/4a/1d1e09b723f945ef0673898964179f8af0b797ae6c1333f283b2f44a1f58/customized_KoNLPy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2469d985273439628eed5aad2d56a475", "sha256": "fcb9af80138d5f798b3f9f34f85726a02883ecd4d07bff60d9e99dbdc9bd64d5"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2469d985273439628eed5aad2d56a475", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11378, "upload_time": "2017-06-21T05:52:19", "upload_time_iso_8601": "2017-06-21T05:52:19.845163Z", "url": "https://files.pythonhosted.org/packages/a1/2c/1fffb2902862398b28f174c51b7d142c469022d36628e0ed4adeaeb7e72a/customized_KoNLPy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b94734913edb729ebbc6e9a0d6516d25", "sha256": "74d414eb0f21c3bec2484f7084901a1cda5a88469d6eaecf6b0c3addd0f882cd"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b94734913edb729ebbc6e9a0d6516d25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7936, "upload_time": "2017-06-21T05:52:20", "upload_time_iso_8601": "2017-06-21T05:52:20.974691Z", "url": "https://files.pythonhosted.org/packages/eb/9f/c3c2a30b58358f5035fb86e27ee5db6524c7aac81cd9e84f52e4263e7ca5/customized_KoNLPy-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b1456797e90ae4cb2b788608bf31d349", "sha256": "9f2ea9b9adaa4e40011a114b08ad453a7b8232a5b938761b7e42921dc75c15ed"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b1456797e90ae4cb2b788608bf31d349", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12104, "upload_time": "2017-07-16T19:10:00", "upload_time_iso_8601": "2017-07-16T19:10:00.044747Z", "url": "https://files.pythonhosted.org/packages/41/a7/58f1bb5060c1714ed9b0cf6ebef532ce0af14ef4a180b5c7fd66fb12d221/customized_KoNLPy-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a270e8fa0098ddfaf747caf639f7a604", "sha256": "f477bfebb57e8144a44812a5ca71c07deaafa98ad77b42ac65f9cf5273bf374b"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a270e8fa0098ddfaf747caf639f7a604", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8416, "upload_time": "2017-07-16T19:10:01", "upload_time_iso_8601": "2017-07-16T19:10:01.370035Z", "url": "https://files.pythonhosted.org/packages/2b/83/a04ede5a6923332b3e6cd23313349b6e89660609f35c63eb959157fc0649/customized_KoNLPy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a505fb8d170b69b3382220b585e21104", "sha256": "f3f5466066242d0fbeb787121a41d426a490ef3031e1bad1ab656aef5a8cb87c"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a505fb8d170b69b3382220b585e21104", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5116, "upload_time": "2017-08-12T13:04:21", "upload_time_iso_8601": "2017-08-12T13:04:21.489318Z", "url": "https://files.pythonhosted.org/packages/62/78/4e93b4283288abb00e600932cdf02dfe584c9bdf2ef5d0694dc4a5b47a12/customized_KoNLPy-0.0.4.tar.gz", "yanked": false}], "0.0.41": [{"comment_text": "", "digests": {"md5": "40713fba3e2ef6aeed38559c213283e6", "sha256": "9ca2bfde65b1cf571913f32e371565e20e8e85da2bf82ac2ff79565bd20bb3d1"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.41.tar.gz", "has_sig": false, "md5_digest": "40713fba3e2ef6aeed38559c213283e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5117, "upload_time": "2017-09-13T06:09:20", "upload_time_iso_8601": "2017-09-13T06:09:20.802506Z", "url": "https://files.pythonhosted.org/packages/dc/92/9edf7dcad353f3932c1137f9b8e0b823b2e38278f594dfdc46a7616d0151/customized_KoNLPy-0.0.41.tar.gz", "yanked": false}], "0.0.42": [{"comment_text": "", "digests": {"md5": "cc5f784d37488856c4f160519fe87b3a", "sha256": "7fed1a9e63df00d4447197a849abd48884ccddf9329fc44d59d174346a90830d"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.42-py3-none-any.whl", "has_sig": false, "md5_digest": "cc5f784d37488856c4f160519fe87b3a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 875979, "upload_time": "2017-09-13T06:15:02", "upload_time_iso_8601": "2017-09-13T06:15:02.582812Z", "url": "https://files.pythonhosted.org/packages/30/08/83f683941311064d911b54f920c693d97d6d7299db3309f5607168aa3c76/customized_KoNLPy-0.0.42-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bf4687bbc91d7d1528e38adedf9dc76", "sha256": "892338e9309a8b35e7e4a8d3b4d35d55b86527f576a9b16a14fcbc5d69a7a034"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.42.tar.gz", "has_sig": false, "md5_digest": "5bf4687bbc91d7d1528e38adedf9dc76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 867323, "upload_time": "2017-09-13T06:15:06", "upload_time_iso_8601": "2017-09-13T06:15:06.917888Z", "url": "https://files.pythonhosted.org/packages/9b/24/968a6398e8dfb26aa4cb09205aadce685c1cd9ea1d2f6e23c40aec95b683/customized_KoNLPy-0.0.42.tar.gz", "yanked": false}], "0.0.43": [{"comment_text": "", "digests": {"md5": "ddbc39d267650d3a998f7241c43f0c0d", "sha256": "4dd54919e52654db1ef89c3ee6f39839739da13285f2eaf7dd3f13f05fe1acb1"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.43-py3-none-any.whl", "has_sig": false, "md5_digest": "ddbc39d267650d3a998f7241c43f0c0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 875994, "upload_time": "2017-09-13T07:09:05", "upload_time_iso_8601": "2017-09-13T07:09:05.457192Z", "url": "https://files.pythonhosted.org/packages/c5/f9/7bc91d48ce28d5764e4eb4bd8fc6898c0aa611e1fc26ca8610e89ac90952/customized_KoNLPy-0.0.43-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60f1911bde3627e6ed44c11455eab758", "sha256": "c90b78ecfd454e545525789effd58749491ef5e7d47fbf30f5d1025c3ab18c74"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.43.tar.gz", "has_sig": false, "md5_digest": "60f1911bde3627e6ed44c11455eab758", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 867347, "upload_time": "2017-09-13T07:09:08", "upload_time_iso_8601": "2017-09-13T07:09:08.847092Z", "url": "https://files.pythonhosted.org/packages/3f/6e/4a5fdf56918eca522c4badd6e110442f8a300111ed7147902fe125a8c331/customized_KoNLPy-0.0.43.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d82349779c3de4be9b49672f2e743e87", "sha256": "a18fea4d324398b9ec409ab72ddff7b253a44bbebb980ccda70f39546eded09b"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d82349779c3de4be9b49672f2e743e87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 876010, "upload_time": "2018-02-13T12:14:16", "upload_time_iso_8601": "2018-02-13T12:14:16.853562Z", "url": "https://files.pythonhosted.org/packages/e0/6f/d4f713dc47b949bf7911fbd9f0a4f5d81511338e18f3f9755c37644f138d/customized_KoNLPy-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "552dde9424c2be9d886f38f62f399c28", "sha256": "a94ea8140657522d79b32887efc23491891aa307f45f0393523fca1be4770f1f"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.5.tar.gz", "has_sig": false, "md5_digest": "552dde9424c2be9d886f38f62f399c28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 867375, "upload_time": "2018-02-13T12:14:20", "upload_time_iso_8601": "2018-02-13T12:14:20.995777Z", "url": "https://files.pythonhosted.org/packages/fa/c9/5bddf6d5213c28d8b65638b13c2bb6f1e9d822ede1ce3b355d3d5529664e/customized_KoNLPy-0.0.5.tar.gz", "yanked": false}], "0.0.51": [{"comment_text": "", "digests": {"md5": "d3973e358381e2e11acfcb08c0749079", "sha256": "0badc1602199a074d67b2cd63e6bb564016d36b18e1d228421a0da82172b857d"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.51-py3-none-any.whl", "has_sig": false, "md5_digest": "d3973e358381e2e11acfcb08c0749079", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 876056, "upload_time": "2018-02-19T09:19:16", "upload_time_iso_8601": "2018-02-19T09:19:16.281671Z", "url": "https://files.pythonhosted.org/packages/ee/21/babb3af10e6a94e46e589aaf2f43a0f0bdd57fae73f07d7b4be03e5cfd7a/customized_KoNLPy-0.0.51-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee0cc4e73186b6e9946da562447fbe93", "sha256": "b6090e286b9ca3f47b6c1913d6d553175e29c703d2a4fb0d12232d42b417f045"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.51.tar.gz", "has_sig": false, "md5_digest": "ee0cc4e73186b6e9946da562447fbe93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 867412, "upload_time": "2018-02-19T09:19:21", "upload_time_iso_8601": "2018-02-19T09:19:21.214773Z", "url": "https://files.pythonhosted.org/packages/86/7c/13a537cfb8d3ff59f1d05bc47a0596572ae714b8e66bc1928d12104f70a9/customized_KoNLPy-0.0.51.tar.gz", "yanked": false}], "0.0.52": [{"comment_text": "", "digests": {"md5": "0baf99c1160fa2d749818b8cc05ab176", "sha256": "daecc31516fcf2218417f902a2267b0175c93e0ae43088835bc78b74e8d568ec"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.52-py3-none-any.whl", "has_sig": false, "md5_digest": "0baf99c1160fa2d749818b8cc05ab176", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 876260, "upload_time": "2018-05-22T10:27:58", "upload_time_iso_8601": "2018-05-22T10:27:58.824135Z", "url": "https://files.pythonhosted.org/packages/df/55/8f99de9f601d8358d24a277f0cbe43152c002b2caddf12d6ebe5fcade2d0/customized_KoNLPy-0.0.52-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da2c1c21a95a6ba4be36b7187fdfc19c", "sha256": "cdb58bf30d812dcd78098865cc9260d7dcdba058ec491d28e002caa9dd7d2dc5"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.52.tar.gz", "has_sig": false, "md5_digest": "da2c1c21a95a6ba4be36b7187fdfc19c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 867628, "upload_time": "2018-05-22T10:28:01", "upload_time_iso_8601": "2018-05-22T10:28:01.845966Z", "url": "https://files.pythonhosted.org/packages/dc/25/b4f7a5b230cabe14dc1ca6c2baea507eab4333adbc7b0ce74f5f57a2a662/customized_KoNLPy-0.0.52.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "09f0300871f9c90b3c9431ad7530f40f", "sha256": "413fa930ca3465c82607b8645fa0c38851ce7d309a0b8760dc0258d554614d4a"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "09f0300871f9c90b3c9431ad7530f40f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 873812, "upload_time": "2018-07-30T11:49:46", "upload_time_iso_8601": "2018-07-30T11:49:46.634213Z", "url": "https://files.pythonhosted.org/packages/66/ff/bc4d653f6359e13cf261d3d5b8f94bfe9108f1689413ef30d3bcf62ee6f8/customized_KoNLPy-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16d2ad541e65b55e8e87256a0918f2bb", "sha256": "2663675636861a868016a6bfad93b6d21c76b70d6aaa6d6e47c80a6ece480189"}, "downloads": -1, "filename": "customized_KoNLPy-0.0.6.tar.gz", "has_sig": false, "md5_digest": "16d2ad541e65b55e8e87256a0918f2bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 868421, "upload_time": "2018-07-30T11:49:48", "upload_time_iso_8601": "2018-07-30T11:49:48.939429Z", "url": "https://files.pythonhosted.org/packages/de/99/f6528c48d61da73bb5fe20d73250e5cfd508df13db59b0fc6cd03c2799d2/customized_KoNLPy-0.0.6.tar.gz", "yanked": false}], "0.0.62": [{"comment_text": "", "digests": {"md5": "096695bc83e023d58c4cdd6eab807599", "sha256": "a617b23f0aa3db8c221467836b193e8728a1e4d469a4c1bbc0d4c922d1733988"}, "downloads": -1, "filename": "customized_konlpy-0.0.62-py3-none-any.whl", "has_sig": false, "md5_digest": "096695bc83e023d58c4cdd6eab807599", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 881326, "upload_time": "2018-07-30T14:06:56", "upload_time_iso_8601": "2018-07-30T14:06:56.028609Z", "url": "https://files.pythonhosted.org/packages/2f/a6/d41c82904579308857e4ff2fd995b59008850c5386c9bfb33a61e22313bd/customized_konlpy-0.0.62-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8329ec594655249aa39fd8a1ca4b980", "sha256": "c14c08c5d15bffab3df46981309f88fae700f486f917cb875b3847e834d5d854"}, "downloads": -1, "filename": "customized-konlpy-0.0.62.tar.gz", "has_sig": false, "md5_digest": "b8329ec594655249aa39fd8a1ca4b980", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 875350, "upload_time": "2018-07-30T14:06:58", "upload_time_iso_8601": "2018-07-30T14:06:58.112344Z", "url": "https://files.pythonhosted.org/packages/36/74/4832290b99baf75269b4cee32e17ef8c517e32440c25d3151f1b6fb77aa7/customized-konlpy-0.0.62.tar.gz", "yanked": false}], "0.0.63": [{"comment_text": "", "digests": {"md5": "1674e955ef8295501db1b94d544e2541", "sha256": "0595184dfe24bf2c2156b08dd7473f0dffc1a3eafb3850df8144b3c4cd456807"}, "downloads": -1, "filename": "customized_konlpy-0.0.63-py3-none-any.whl", "has_sig": false, "md5_digest": "1674e955ef8295501db1b94d544e2541", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 881403, "upload_time": "2018-08-10T09:01:07", "upload_time_iso_8601": "2018-08-10T09:01:07.445023Z", "url": "https://files.pythonhosted.org/packages/7a/a5/d337a46512994359675fe634b35c1167ffd4a39b49185926337a9db5dcb9/customized_konlpy-0.0.63-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7440f382e02fdab4dea347b2e6a97245", "sha256": "a2d0e93a9ca1bf5259106fd0b4edcb34d9a6ee2dc25ff1ffc99f5a1d7b1f8c48"}, "downloads": -1, "filename": "customized-konlpy-0.0.63.tar.gz", "has_sig": false, "md5_digest": "7440f382e02fdab4dea347b2e6a97245", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 875543, "upload_time": "2018-08-10T09:01:10", "upload_time_iso_8601": "2018-08-10T09:01:10.296439Z", "url": "https://files.pythonhosted.org/packages/4b/24/880edd055738f56492a3af93e001b015864a670346c3f204105be0ac88c5/customized-konlpy-0.0.63.tar.gz", "yanked": false}], "0.0.64": [{"comment_text": "", "digests": {"md5": "821e0caa33bbf13254f173a71c4c0770", "sha256": "a39c6c9b9a3add7d9dbf083a94c95d158014579496a9111ad4a755cf431da99d"}, "downloads": -1, "filename": "customized_konlpy-0.0.64-py3-none-any.whl", "has_sig": false, "md5_digest": "821e0caa33bbf13254f173a71c4c0770", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 881465, "upload_time": "2018-08-10T09:18:16", "upload_time_iso_8601": "2018-08-10T09:18:16.084293Z", "url": "https://files.pythonhosted.org/packages/07/8c/d39c483b637a6d85ab2d6da50012810628982bbd5279818bdc5dd1e7da51/customized_konlpy-0.0.64-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02ffb0e7a7fe9af922134f4469b35ba4", "sha256": "9355dbfb2c3b202db60b11f9e495de28791c6a76155e5f5bf0e8b7969715f92f"}, "downloads": -1, "filename": "customized-konlpy-0.0.64.tar.gz", "has_sig": false, "md5_digest": "02ffb0e7a7fe9af922134f4469b35ba4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 875614, "upload_time": "2018-08-10T09:18:19", "upload_time_iso_8601": "2018-08-10T09:18:19.041706Z", "url": "https://files.pythonhosted.org/packages/52/02/eb65f75bf275a49ba6faf189cb7566d5de41e971e435a60332591323b365/customized-konlpy-0.0.64.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "821e0caa33bbf13254f173a71c4c0770", "sha256": "a39c6c9b9a3add7d9dbf083a94c95d158014579496a9111ad4a755cf431da99d"}, "downloads": -1, "filename": "customized_konlpy-0.0.64-py3-none-any.whl", "has_sig": false, "md5_digest": "821e0caa33bbf13254f173a71c4c0770", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 881465, "upload_time": "2018-08-10T09:18:16", "upload_time_iso_8601": "2018-08-10T09:18:16.084293Z", "url": "https://files.pythonhosted.org/packages/07/8c/d39c483b637a6d85ab2d6da50012810628982bbd5279818bdc5dd1e7da51/customized_konlpy-0.0.64-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02ffb0e7a7fe9af922134f4469b35ba4", "sha256": "9355dbfb2c3b202db60b11f9e495de28791c6a76155e5f5bf0e8b7969715f92f"}, "downloads": -1, "filename": "customized-konlpy-0.0.64.tar.gz", "has_sig": false, "md5_digest": "02ffb0e7a7fe9af922134f4469b35ba4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 875614, "upload_time": "2018-08-10T09:18:19", "upload_time_iso_8601": "2018-08-10T09:18:19.041706Z", "url": "https://files.pythonhosted.org/packages/52/02/eb65f75bf275a49ba6faf189cb7566d5de41e971e435a60332591323b365/customized-konlpy-0.0.64.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:18 2020"}