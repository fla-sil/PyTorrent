{"info": {"author": "rdb", "author_email": "me@rdb.name", "bugtrack_url": null, "classifiers": ["Framework :: Sphinx", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Documentation", "Topic :: Software Development :: Documentation"], "description": "sphinx-interrogatedb\n====================\n\nThis is a [Sphinx](https://www.sphinx-doc.org/) extension that provides\nautodoc support for modules created by interrogate, by augmenting it with\ninformation provided by interrogate databases (.in files).\n\nUsage\n-----\n\nTo make use of this extension, the following steps are needed:\n\n1. Install the module using pip.\n```\npip install sphinx-interrogatedb\n```\n2. Enable it in `conf.py`.\n```python\nextensions = ['sphinx.ext.autodoc', 'sphinx_interrogatedb']\n```\n3. Configure the search path for interrogatedb files.\n```python\ninterrogatedb_search_path = ['dir/containing/in/files/']\n```\n4. Just use autodoc, autosummary or [autopackagesummary](https://pypi.org/project/sphinx-autopackagesummary/)\nas you would normally, and the .in files will automatically be processed.\n\nConfiguration\n-------------\n\nThe following configuration options are supported:\n\n* `interrogatedb_search_path`: list of folders to search for .in files.\n* `autodoc_interrogatedb_mangle_type_names`: if True, converts type names in\n  the way that interrogate's python-native back-end does by default.\n* `autodoc_interrogatedb_mangle_type_names`: if True, converts type names from\n  snake-case to camel-case.  False by default.\n* `autodoc_interrogatedb_type_annotations`: if True, shows argument and return\n  types in function signatures using type hint syntax.  True by default.\n* `autodoc_interrogatedb_add_rtype`: if True, adds an `:rtype:` directive to\n  the bodies of docstrings with the return type.  True by default.\n\nLicense\n-------\n\nThis extension has been licensed under the terms of the Modified BSD License.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/panda3d/sphinx-interrogatedb", "keywords": "", "license": "Modified BSD License", "maintainer": "", "maintainer_email": "", "name": "sphinx-interrogatedb", "package_url": "https://pypi.org/project/sphinx-interrogatedb/", "platform": "", "project_url": "https://pypi.org/project/sphinx-interrogatedb/", "project_urls": {"Homepage": "https://github.com/panda3d/sphinx-interrogatedb"}, "release_url": "https://pypi.org/project/sphinx-interrogatedb/1.0.1/", "requires_dist": ["sphinx (>=2.2.0)", "panda3d"], "requires_python": "", "summary": "Sphinx extension to enhance autodoc for interrogated modules", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sphinx-interrogatedb</h1>\n<p>This is a <a href=\"https://www.sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a> extension that provides\nautodoc support for modules created by interrogate, by augmenting it with\ninformation provided by interrogate databases (.in files).</p>\n<h2>Usage</h2>\n<p>To make use of this extension, the following steps are needed:</p>\n<ol>\n<li>Install the module using pip.</li>\n</ol>\n<pre><code>pip install sphinx-interrogatedb\n</code></pre>\n<ol>\n<li>Enable it in <code>conf.py</code>.</li>\n</ol>\n<pre><span class=\"n\">extensions</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'sphinx.ext.autodoc'</span><span class=\"p\">,</span> <span class=\"s1\">'sphinx_interrogatedb'</span><span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Configure the search path for interrogatedb files.</li>\n</ol>\n<pre><span class=\"n\">interrogatedb_search_path</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'dir/containing/in/files/'</span><span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Just use autodoc, autosummary or <a href=\"https://pypi.org/project/sphinx-autopackagesummary/\" rel=\"nofollow\">autopackagesummary</a>\nas you would normally, and the .in files will automatically be processed.</li>\n</ol>\n<h2>Configuration</h2>\n<p>The following configuration options are supported:</p>\n<ul>\n<li><code>interrogatedb_search_path</code>: list of folders to search for .in files.</li>\n<li><code>autodoc_interrogatedb_mangle_type_names</code>: if True, converts type names in\nthe way that interrogate's python-native back-end does by default.</li>\n<li><code>autodoc_interrogatedb_mangle_type_names</code>: if True, converts type names from\nsnake-case to camel-case.  False by default.</li>\n<li><code>autodoc_interrogatedb_type_annotations</code>: if True, shows argument and return\ntypes in function signatures using type hint syntax.  True by default.</li>\n<li><code>autodoc_interrogatedb_add_rtype</code>: if True, adds an <code>:rtype:</code> directive to\nthe bodies of docstrings with the return type.  True by default.</li>\n</ul>\n<h2>License</h2>\n<p>This extension has been licensed under the terms of the Modified BSD License.</p>\n\n          </div>"}, "last_serial": 6068539, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "73e68aeca8d4c4769d984bd116b102a6", "sha256": "bb4c7485a2432baf636bb44e67bfe74c4f090fdb4164b174a7c1805661600df4"}, "downloads": -1, "filename": "sphinx_interrogatedb-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "73e68aeca8d4c4769d984bd116b102a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9334, "upload_time": "2019-11-01T21:32:10", "upload_time_iso_8601": "2019-11-01T21:32:10.333077Z", "url": "https://files.pythonhosted.org/packages/09/e5/591268c55d7bf65319a2e8bd5518227655f7eb955c898eae815f8c816d2c/sphinx_interrogatedb-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4f35ef8526a15d5a1ce90b9a1b05e05d", "sha256": "10b5bf2dec4a7051c54a8c9ca8ebed3816738757952401b255cc903bcb47a05a"}, "downloads": -1, "filename": "sphinx_interrogatedb-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4f35ef8526a15d5a1ce90b9a1b05e05d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9334, "upload_time": "2019-11-02T16:57:20", "upload_time_iso_8601": "2019-11-02T16:57:20.730335Z", "url": "https://files.pythonhosted.org/packages/c3/f9/348cb70c38ebbff2fd952dcaf4f26940f7933481618118416651e8ae6a9f/sphinx_interrogatedb-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f35ef8526a15d5a1ce90b9a1b05e05d", "sha256": "10b5bf2dec4a7051c54a8c9ca8ebed3816738757952401b255cc903bcb47a05a"}, "downloads": -1, "filename": "sphinx_interrogatedb-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4f35ef8526a15d5a1ce90b9a1b05e05d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9334, "upload_time": "2019-11-02T16:57:20", "upload_time_iso_8601": "2019-11-02T16:57:20.730335Z", "url": "https://files.pythonhosted.org/packages/c3/f9/348cb70c38ebbff2fd952dcaf4f26940f7933481618118416651e8ae6a9f/sphinx_interrogatedb-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:05:05 2020"}