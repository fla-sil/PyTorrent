{"info": {"author": "Balthazar Rouberol", "author_email": "brouberol@imap.cc", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Multimedia :: Sound/Audio :: Conversion", "Topic :: Multimedia :: Video :: Conversion"], "description": "Mashdown will download and split a Youtube mashup video into individual audio files, with documented audio tags.\n\n**Warning**: For Mashdown to work, the video must come with a tracklist listing the start time and track name for each track. The tracklist can either be in the Youtube description or in a local file. Here is a `Youtube video <https://www.youtube.com/watch?v=53eclAZXp2M>`_ that is a perfect candidate.\n\n\nInstallation\n============\n\nTo install Mashdown, you can simply use pip:\n\n.. code-block:: bash\n\n  $ pip install mashdown\n\n\nExamples\n========\n\nDownloading and splitting the mashup\n------------------------------------\n\n.. code-block:: bash\n\n    $ mashdown \\\n        --audioformat ogg \\\n        --album \"The Lord of the Rings Sountrack\" \\\n        --artist \"Howard Shore\" \\\n        https://www.youtube.com/watch\\?v\\=upzOSSQWSYU\n\n\nSplitting a local mashup\n------------------------\nIn this example, the mashup will not be downloaded. The youtube URL is only used to fetch the tracklist information.\n\n.. code-block:: bash\n\n    $ mashdown \\\n        --audioformat ogg \\\n        --mashupfile path/to/mashupfile\n        --album \"The Lord of the Rings Sountrack\" \\\n        --artist \"Howard Shore\" \\\n        https://www.youtube.com/watch\\?v\\=upzOSSQWSYU\n\n\nUsage\n=====\n\n..\n\n    usage: mashdown [-h] [-m MASHUPFILE] [--input-audioformat INPUT_AUDIOFORMAT]\n                   [-f AUDIOFORMAT] [-o OUTPUT_DIR] [-q] [--artist ARTIST]\n                   [--album ALBUM]\n                   url\n\n    Split a Youtube mashup video into a list of tagged audio tracks\n\n    positional arguments:\n      url                   The youtube link to the mashup.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -m MASHUPFILE, --mashupfile MASHUPFILE\n                            The local path, relative or absolute, to the mashup\n                            file.\n      --input-audioformat INPUT_AUDIOFORMAT\n                            The prefered audio format for the source mashup file.\n      -f AUDIOFORMAT, --audioformat AUDIOFORMAT\n                            The export audio format. Examples: 'mp3', 'ogg',\n                            'mp4', 'flac', ...\n      -o OUTPUT_DIR, --output-dir OUTPUT_DIR\n                            The directory in which the output directory will be\n                            created.By default, the current directory will be\n                            used.\n      -q, --quiet           Remove non important log messages\n\n    metadata:\n      --artist ARTIST       The artist name\n      --album ALBUM         The album name\n\n\nDependencies\n============\n\nMashdown is depends on the following libraries:\n\n- ``pydub`` (which requires ``ffmpeg`` or ``avconv`` to be installed on the system), to cut the video file and export the audio segments\n- ``pafy``, to download the Youtube video and get its metadata\n- ``mutagen``, to edit the audiofile metadata\n\n\nReleases\n========\n\n0.1.1\n-----\n\n- The track name can be located before or after the track start time\n- Added unit tests\n\n0.1.0\n-----\ninitial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "License :: OSI Approved :: MIT License", "maintainer": null, "maintainer_email": null, "name": "mashdown", "package_url": "https://pypi.org/project/mashdown/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mashdown/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/mashdown/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Download and split a youtube mashup video in a list of tagged audio files", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mashdown will download and split a Youtube mashup video into individual audio files, with documented audio tags.</p>\n<p><strong>Warning</strong>: For Mashdown to work, the video must come with a tracklist listing the start time and track name for each track. The tracklist can either be in the Youtube description or in a local file. Here is a <a href=\"https://www.youtube.com/watch?v=53eclAZXp2M\" rel=\"nofollow\">Youtube video</a> that is a perfect candidate.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install Mashdown, you can simply use pip:</p>\n<pre>$ pip install mashdown\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"downloading-and-splitting-the-mashup\">\n<h3>Downloading and splitting the mashup</h3>\n<pre>$ mashdown <span class=\"se\">\\\n</span>    --audioformat ogg <span class=\"se\">\\\n</span>    --album <span class=\"s2\">\"The Lord of the Rings Sountrack\"</span> <span class=\"se\">\\\n</span>    --artist <span class=\"s2\">\"Howard Shore\"</span> <span class=\"se\">\\\n</span>    https://www.youtube.com/watch<span class=\"se\">\\?</span>v<span class=\"se\">\\=</span>upzOSSQWSYU\n</pre>\n</div>\n<div id=\"splitting-a-local-mashup\">\n<h3>Splitting a local mashup</h3>\n<p>In this example, the mashup will not be downloaded. The youtube URL is only used to fetch the tracklist information.</p>\n<pre>$ mashdown <span class=\"se\">\\\n</span>    --audioformat ogg <span class=\"se\">\\\n</span>    --mashupfile path/to/mashupfile\n    --album <span class=\"s2\">\"The Lord of the Rings Sountrack\"</span> <span class=\"se\">\\\n</span>    --artist <span class=\"s2\">\"Howard Shore\"</span> <span class=\"se\">\\\n</span>    https://www.youtube.com/watch<span class=\"se\">\\?</span>v<span class=\"se\">\\=</span>upzOSSQWSYU\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<blockquote>\n<dl>\n<dt>usage: mashdown [-h] [-m MASHUPFILE] [\u2013input-audioformat INPUT_AUDIOFORMAT]</dt>\n<dd>[-f AUDIOFORMAT] [-o OUTPUT_DIR] [-q] [\u2013artist ARTIST]\n[\u2013album ALBUM]\nurl</dd>\n</dl>\n<p>Split a Youtube mashup video into a list of tagged audio tracks</p>\n<dl>\n<dt>positional arguments:</dt>\n<dd>url                   The youtube link to the mashup.</dd>\n<dt>optional arguments:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-m <var>MASHUPFILE</var></span>, <span class=\"option\">--mashupfile <var>MASHUPFILE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The local path, relative or absolute, to the mashup\nfile.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--input-audioformat <var>INPUT_AUDIOFORMAT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The prefered audio format for the source mashup file.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-f <var>AUDIOFORMAT</var></span>, <span class=\"option\">--audioformat <var>AUDIOFORMAT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The export audio format. Examples: \u2018mp3\u2019, \u2018ogg\u2019,\n\u2018mp4\u2019, \u2018flac\u2019, \u2026</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-o <var>OUTPUT_DIR</var></span>, <span class=\"option\">--output-dir <var>OUTPUT_DIR</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The directory in which the output directory will be\ncreated.By default, the current directory will be\nused.</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-q</span>, <span class=\"option\">--quiet</span></kbd></td>\n<td>Remove non important log messages</td></tr>\n</tbody>\n</table>\n</dd>\n<dt>metadata:</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">--artist <var>ARTIST</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>The artist name</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--album <var>ALBUM</var></span></kbd></td>\n<td>The album name</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>Mashdown is depends on the following libraries:</p>\n<ul>\n<li><tt>pydub</tt> (which requires <tt>ffmpeg</tt> or <tt>avconv</tt> to be installed on the system), to cut the video file and export the audio segments</li>\n<li><tt>pafy</tt>, to download the Youtube video and get its metadata</li>\n<li><tt>mutagen</tt>, to edit the audiofile metadata</li>\n</ul>\n</div>\n<div id=\"releases\">\n<h2>Releases</h2>\n<div id=\"id1\">\n<h3>0.1.1</h3>\n<ul>\n<li>The track name can be located before or after the track start time</li>\n<li>Added unit tests</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0</h3>\n<p>initial release</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1749629, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "776e00669960ad5cbcc0f3678653b497", "sha256": "6075bbb18c654fed3a8210e26fbd84dc588ebc19d975ae7cc539ffd5087b661c"}, "downloads": -1, "filename": "mashdown-0.1.0.tar.gz", "has_sig": false, "md5_digest": "776e00669960ad5cbcc0f3678653b497", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5370, "upload_time": "2015-01-06T09:01:46", "upload_time_iso_8601": "2015-01-06T09:01:46.785601Z", "url": "https://files.pythonhosted.org/packages/12/45/22694be82fa03a2796b2ac68281caf86c7d8b342bd60337d68ed4c28e984/mashdown-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c86fc2674e20b25db5168e8af891fd2d", "sha256": "33f4a171e78f639fdbe71a10a462931a91bf1b44f982a8615073a6952d4ad476"}, "downloads": -1, "filename": "mashdown-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c86fc2674e20b25db5168e8af891fd2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6252, "upload_time": "2015-10-02T21:23:51", "upload_time_iso_8601": "2015-10-02T21:23:51.998161Z", "url": "https://files.pythonhosted.org/packages/73/e8/62595ee6747e0f95bc268d972ad4a8905a1a35f87bdb70d468113f215d03/mashdown-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c86fc2674e20b25db5168e8af891fd2d", "sha256": "33f4a171e78f639fdbe71a10a462931a91bf1b44f982a8615073a6952d4ad476"}, "downloads": -1, "filename": "mashdown-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c86fc2674e20b25db5168e8af891fd2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6252, "upload_time": "2015-10-02T21:23:51", "upload_time_iso_8601": "2015-10-02T21:23:51.998161Z", "url": "https://files.pythonhosted.org/packages/73/e8/62595ee6747e0f95bc268d972ad4a8905a1a35f87bdb70d468113f215d03/mashdown-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:31 2020"}