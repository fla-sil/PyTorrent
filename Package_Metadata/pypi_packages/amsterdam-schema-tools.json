{"info": {"author": "Jan Murre", "author_email": "jan.murre@catalyz.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# amsterdam-schema-tools\n\nSet of libraries and tools to work with Amsterdam schema.\n\nInstall the package with: `pip install amsterdam-schema-tools`\n\nCurrently, the following cli commands are available:\n\n- schema import schema\n- schema import ndjson\n- schema show schema <dataset-id>\n- schema show tablenames\n- schema introspect db <dataset-id> <list-of-tablenames>\n- schema introspect geojson <dataset-id> \\*.geojson\n- schema validate\n\nThe tools expect either a `DATABASE_URL` environment variable or a command-line option `--db-url` with a DSN.\n\nThe output is a json-schema output according to the Amsterdam schemas\ndefinition for the tables that are being processed.\n\n## Generate amsterdam schema from existing database tables\n\nThe --prefix argument controls whether table prefixes are removed in the\nschema, because that is required for Django models.\n\nAs example we can generate a BAG schema. Point `DATABASE_URL` to `bag_v11` database and then run :\n\n    schema show tablenames | sort | awk '/^bag_/{print}' | xargs schema introspect db bag --prefix bag_ | jq\n\nThe **jq** formats it nicely and it can be redirected to the correct directory\nin the schemas repository directly.\n\n## Express amsterdam schema information in relational tables\n\nAmsterdam schema is expressed as jsonschema. However, to make it easier for people with a\nmore relational mind- or toolset it is possible to express amsterdam schema as a set of\nrelational tables. These tables are *meta_dataset*, *meta_table* and *meta_field*.\n\nIt is possible to convert a jsonschema into the relational table structure and vice-versa.\n\nThis command converts a dataset from an existing dataset in jsonschema format:\n\n    schema import schema <id of dataset>\n\nTo convert from relational tables back to jsonschema:\n\n    schema show schema <id of dataset>\n\n\n## Generating amsterdam schema from existing GeoJSON files\n\nThe following command can be used to inspect and import the GeoJSON files:\n\n    schema introspect geojson <dataset-id> *.geojson > schema.json\n    edit schema.json  # fine-tune the table names\n    schema import geojson schema.json <table1> file1.geojson\n    schema import geojson schema.json <table2> file2.geojson", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amsterdam/schema-tools", "keywords": "", "license": "Mozilla Public 2.0", "maintainer": "", "maintainer_email": "", "name": "amsterdam-schema-tools", "package_url": "https://pypi.org/project/amsterdam-schema-tools/", "platform": "", "project_url": "https://pypi.org/project/amsterdam-schema-tools/", "project_urls": {"Homepage": "https://github.com/amsterdam/schema-tools"}, "release_url": "https://pypi.org/project/amsterdam-schema-tools/0.5.0/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Tools to work with Amsterdam schema.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>amsterdam-schema-tools</h1>\n<p>Set of libraries and tools to work with Amsterdam schema.</p>\n<p>Install the package with: <code>pip install amsterdam-schema-tools</code></p>\n<p>Currently, the following cli commands are available:</p>\n<ul>\n<li>schema import schema</li>\n<li>schema import ndjson</li>\n<li>schema show schema &lt;dataset-id&gt;</li>\n<li>schema show tablenames</li>\n<li>schema introspect db &lt;dataset-id&gt; &lt;list-of-tablenames&gt;</li>\n<li>schema introspect geojson &lt;dataset-id&gt; *.geojson</li>\n<li>schema validate</li>\n</ul>\n<p>The tools expect either a <code>DATABASE_URL</code> environment variable or a command-line option <code>--db-url</code> with a DSN.</p>\n<p>The output is a json-schema output according to the Amsterdam schemas\ndefinition for the tables that are being processed.</p>\n<h2>Generate amsterdam schema from existing database tables</h2>\n<p>The --prefix argument controls whether table prefixes are removed in the\nschema, because that is required for Django models.</p>\n<p>As example we can generate a BAG schema. Point <code>DATABASE_URL</code> to <code>bag_v11</code> database and then run :</p>\n<pre><code>schema show tablenames | sort | awk '/^bag_/{print}' | xargs schema introspect db bag --prefix bag_ | jq\n</code></pre>\n<p>The <strong>jq</strong> formats it nicely and it can be redirected to the correct directory\nin the schemas repository directly.</p>\n<h2>Express amsterdam schema information in relational tables</h2>\n<p>Amsterdam schema is expressed as jsonschema. However, to make it easier for people with a\nmore relational mind- or toolset it is possible to express amsterdam schema as a set of\nrelational tables. These tables are <em>meta_dataset</em>, <em>meta_table</em> and <em>meta_field</em>.</p>\n<p>It is possible to convert a jsonschema into the relational table structure and vice-versa.</p>\n<p>This command converts a dataset from an existing dataset in jsonschema format:</p>\n<pre><code>schema import schema &lt;id of dataset&gt;\n</code></pre>\n<p>To convert from relational tables back to jsonschema:</p>\n<pre><code>schema show schema &lt;id of dataset&gt;\n</code></pre>\n<h2>Generating amsterdam schema from existing GeoJSON files</h2>\n<p>The following command can be used to inspect and import the GeoJSON files:</p>\n<pre><code>schema introspect geojson &lt;dataset-id&gt; *.geojson &gt; schema.json\nedit schema.json  # fine-tune the table names\nschema import geojson schema.json &lt;table1&gt; file1.geojson\nschema import geojson schema.json &lt;table2&gt; file2.geojson\n</code></pre>\n\n          </div>"}, "last_serial": 7188047, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "813d7cff85749dde259be7047d57e197", "sha256": "d3ae8c4c6f6aafce9b4c167ae529ab1edb31c42eb557afe98939ee6ab3197356"}, "downloads": -1, "filename": "amsterdam_schema_tools-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "813d7cff85749dde259be7047d57e197", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9843, "upload_time": "2020-02-04T11:00:40", "upload_time_iso_8601": "2020-02-04T11:00:40.210802Z", "url": "https://files.pythonhosted.org/packages/29/d4/a84f5e3f3c3917f86421df8047b23b67a1850040273c14d96a6175a4f836/amsterdam_schema_tools-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "45a91a0d07c9a250f362acaec54823da", "sha256": "f7e45c5bcd46c98a721d68b051f64dd0e9997c1b39d69eae1c77da35afd64005"}, "downloads": -1, "filename": "amsterdam_schema_tools-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "45a91a0d07c9a250f362acaec54823da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11089, "upload_time": "2020-03-11T14:46:26", "upload_time_iso_8601": "2020-03-11T14:46:26.014768Z", "url": "https://files.pythonhosted.org/packages/ab/2e/6919f2058a213b37805780f57d7329a95e7c98c350ff97762188d6fea2b3/amsterdam_schema_tools-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "13097122da0c02168389408a646bef48", "sha256": "3401f3186646b70c90885e073408570d8e8fa892bd5a3ebe93d93af620adb933"}, "downloads": -1, "filename": "amsterdam_schema_tools-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "13097122da0c02168389408a646bef48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 26880, "upload_time": "2020-04-20T11:57:57", "upload_time_iso_8601": "2020-04-20T11:57:57.704427Z", "url": "https://files.pythonhosted.org/packages/aa/93/2bf100008cd9f54290469ae30ddf5f17dc175bf0b44d50cbdbf9c2642737/amsterdam_schema_tools-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5291233777d67d7a4a658ad720f7730a", "sha256": "c077d5139d01813741c97b6716f7f5fc2ac9c864ee0386719126d6a3ffe862a8"}, "downloads": -1, "filename": "amsterdam-schema-tools-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5291233777d67d7a4a658ad720f7730a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 24559, "upload_time": "2020-04-23T08:49:06", "upload_time_iso_8601": "2020-04-23T08:49:06.302698Z", "url": "https://files.pythonhosted.org/packages/f8/74/165fab7cd6c5bcbe74d8ce77638e9715d93cad1af4914c8cb603d3ce9a28/amsterdam-schema-tools-0.0.4.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "5e50abbac2d3207f6d7bd18e11c7fa2d", "sha256": "e216da80ce12b7b204003069d3b798cf9020eba8398d0c6a44e3c57c39602bc8"}, "downloads": -1, "filename": "amsterdam-schema-tools-0.4.0.tar.gz", "has_sig": false, "md5_digest": "5e50abbac2d3207f6d7bd18e11c7fa2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 24573, "upload_time": "2020-04-23T09:01:08", "upload_time_iso_8601": "2020-04-23T09:01:08.003649Z", "url": "https://files.pythonhosted.org/packages/6a/fd/0776cfc7cc8e8f25eb36f243eda07a50c8fbc0b303f140f394d4cc62ad4f/amsterdam-schema-tools-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "9d84fe0abadc40816ad0ed475b54b389", "sha256": "47c4d85ff06c05eb17e203eaece1a5a7057c94eda6b179b1ec956a033a7a2fd6"}, "downloads": -1, "filename": "amsterdam-schema-tools-0.4.1.tar.gz", "has_sig": false, "md5_digest": "9d84fe0abadc40816ad0ed475b54b389", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 24691, "upload_time": "2020-04-23T09:33:08", "upload_time_iso_8601": "2020-04-23T09:33:08.058969Z", "url": "https://files.pythonhosted.org/packages/8d/94/afb1983aff7e66b8846ecf8f6c07192e94975c88b0b54b00e08a2b3e5cfc/amsterdam-schema-tools-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "5914388bf58c12bfce7ea27f63d44511", "sha256": "bb5389bcb08f03a7f6261d1c6a3093c3ad35bc1914dce5cbbe4ab82eedfbbd02"}, "downloads": -1, "filename": "amsterdam_schema_tools-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5914388bf58c12bfce7ea27f63d44511", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 43224, "upload_time": "2020-05-04T14:20:50", "upload_time_iso_8601": "2020-05-04T14:20:50.385585Z", "url": "https://files.pythonhosted.org/packages/d8/94/47f5477875b08c36c5485efa9f05037986daa5f960a9fef5f1471d1708ec/amsterdam_schema_tools-0.4.2-py3-none-any.whl", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "6718e8e1e66377f243615cccf91fda88", "sha256": "354d53e3e94d2aae576af975558e66c50cfcef76172f8e1f7f90ce6f11f1b688"}, "downloads": -1, "filename": "amsterdam-schema-tools-0.5.0.tar.gz", "has_sig": false, "md5_digest": "6718e8e1e66377f243615cccf91fda88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 25447, "upload_time": "2020-05-07T12:25:26", "upload_time_iso_8601": "2020-05-07T12:25:26.598814Z", "url": "https://files.pythonhosted.org/packages/d2/f6/989d3e5955100958077fb0dd412a9ebc6a7dfd1ed008367ab8ecbca74e04/amsterdam-schema-tools-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6718e8e1e66377f243615cccf91fda88", "sha256": "354d53e3e94d2aae576af975558e66c50cfcef76172f8e1f7f90ce6f11f1b688"}, "downloads": -1, "filename": "amsterdam-schema-tools-0.5.0.tar.gz", "has_sig": false, "md5_digest": "6718e8e1e66377f243615cccf91fda88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 25447, "upload_time": "2020-05-07T12:25:26", "upload_time_iso_8601": "2020-05-07T12:25:26.598814Z", "url": "https://files.pythonhosted.org/packages/d2/f6/989d3e5955100958077fb0dd412a9ebc6a7dfd1ed008367ab8ecbca74e04/amsterdam-schema-tools-0.5.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:18 2020"}