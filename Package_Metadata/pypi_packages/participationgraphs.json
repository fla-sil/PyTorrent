{"info": {"author": "Matt Riggott", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "If you want to display snazzy Github participation graphs on your Django-based\nweb site, this is for you.\n\nThis is a small Django app that provides a template tag to allow you to include\nsparklines of the 52-week commit history for a project on Github. Think of the\ngraphs you see down the left-hand side of a Github user's home page -- only, as\nI said, snazzy sparklines instead of bar charts. Examples can be found on the\n`introductory blog post`_. A `real-world example`_ can be found on the author's\n\"About\" page:\n\n.. _`introductory blog post`: http://www.flother.com/blog/2009/django-github-sparklines/\n.. _`real-world example`: http://www.flother.com/about/\n\n\nRequirements\n============\n\nOther than Django itself, no external libraries are required. The sparklines\nare generated using Google Charts so no image processing is done locally. The\napp has been tested with the latest Subversion trunk version of Django, but\nshould be quite happy working with older releases too.\n\n\nInstallation\n============\n\nYou can download the package from PyPI using either PIP or ``easy_install``::\n\n  pip install participationgraphs\n  easy_install participationgraphs\n\nAlternatively you can install the latest version from Github::\n\n  pip install -U -e git+git://github.com/flother/participationgraphs.git#egg=participationgraphs\n\nAdd the ``participationgraphs`` app to ``INSTALLED_APPS`` in your Django\nsettings file::\n\n  INSTALLED_APPS = (\n      # ...\n      'participationgraphs',\n  )\n\nIf you're been running the development server while you do this, restart it so\nDjango can find the new template tag library.\n\n\nUsage\n=====\n\nIn each template you want to show participation graphs, load the\n``githubgraphs`` library::\n\n  {% load githubgraphs %}\n\nThis can appear anywhere in your template as long as it comes before the first\nuse of the ``github_participation_graph`` template tag.\n\nAt the point in the template you want to display a participation graph,\ninclude::\n\n  {% github_participation_graph \"brosner\" \"django\" %}\n\nThis will output an img element for the sparkline, showing the commit history\nfor the *django* project belonging to the Github user *brosner*. The ``img``\nelement's ``src`` attribute will point to a dynamically-generated Google Charts\nimage.\n\nBy default the sparkline will be a grey data-line on a white background, 400\npixels wide by 50 pixels high, but if you want to change the colours or\ndimensions you can. The following example will display a sparkline 100 pixels\nwide by 40 pixels high, with a red data-line on a black background::\n\n  {% github_participation_graph \"brosner\" \"django\" \"100x40\" \"ff0000\" \"000000\" %}\n\nThere are seven parameters in total; two are mandatory and five are optional:\n\n1. ``username``: Github username (mandatory)\n2. ``project_name``: Github project name (mandatory)\n3. ``dimensions``: height and width of the image in pixels in the format\n   \"HxW\"\n4. ``foreground_colour``: six-digit hex colour of the sparkline data\n5. ``background_colour``: six-digit hex colour of the graph background\n6. ``fill_colour``: six-digit hex colour of the graph's data fill\n7. ``marker_colour``: six-digit hex colour for the final data marker\n\nCaveat emptor\n=============\n\nTo get the commit data for the graph the template tag makes an HTTP request to\n``github.com`` -- so for every sparkline there will be two HTTP requests: one\nclient-side to a Google server to get the chart image and one server-side to\nGithub. Although it's optional I highly recommend using Django's built-in\ncaching to cache either the template or the template fragment.\n\n\nLicence\n=======\n\nAll code in this repository is released under the GNU General Public licence\nversion 2. For details see the LICENCE file in the root directory.\n\nIf you'd like to use the code under a different (open-source) licence, contact\nme and we'll see what we can do.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/flother/participationgraphs", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "participationgraphs", "package_url": "https://pypi.org/project/participationgraphs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/participationgraphs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/flother/participationgraphs"}, "release_url": "https://pypi.org/project/participationgraphs/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Django app with a template tag to allow you to include sparklines of the 52-week commit history for a project on Github", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>If you want to display snazzy Github participation graphs on your Django-based\nweb site, this is for you.</p>\n<p>This is a small Django app that provides a template tag to allow you to include\nsparklines of the 52-week commit history for a project on Github. Think of the\ngraphs you see down the left-hand side of a Github user\u2019s home page \u2013 only, as\nI said, snazzy sparklines instead of bar charts. Examples can be found on the\n<a href=\"http://www.flother.com/blog/2009/django-github-sparklines/\" rel=\"nofollow\">introductory blog post</a>. A <a href=\"http://www.flother.com/about/\" rel=\"nofollow\">real-world example</a> can be found on the author\u2019s\n\u201cAbout\u201d page:</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Other than Django itself, no external libraries are required. The sparklines\nare generated using Google Charts so no image processing is done locally. The\napp has been tested with the latest Subversion trunk version of Django, but\nshould be quite happy working with older releases too.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can download the package from PyPI using either PIP or <tt>easy_install</tt>:</p>\n<pre>pip install participationgraphs\neasy_install participationgraphs\n</pre>\n<p>Alternatively you can install the latest version from Github:</p>\n<pre>pip install -U -e git+git://github.com/flother/participationgraphs.git#egg=participationgraphs\n</pre>\n<p>Add the <tt>participationgraphs</tt> app to <tt>INSTALLED_APPS</tt> in your Django\nsettings file:</p>\n<pre>INSTALLED_APPS = (\n    # ...\n    'participationgraphs',\n)\n</pre>\n<p>If you\u2019re been running the development server while you do this, restart it so\nDjango can find the new template tag library.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In each template you want to show participation graphs, load the\n<tt>githubgraphs</tt> library:</p>\n<pre>{% load githubgraphs %}\n</pre>\n<p>This can appear anywhere in your template as long as it comes before the first\nuse of the <tt>github_participation_graph</tt> template tag.</p>\n<p>At the point in the template you want to display a participation graph,\ninclude:</p>\n<pre>{% github_participation_graph \"brosner\" \"django\" %}\n</pre>\n<p>This will output an img element for the sparkline, showing the commit history\nfor the <em>django</em> project belonging to the Github user <em>brosner</em>. The <tt>img</tt>\nelement\u2019s <tt>src</tt> attribute will point to a dynamically-generated Google Charts\nimage.</p>\n<p>By default the sparkline will be a grey data-line on a white background, 400\npixels wide by 50 pixels high, but if you want to change the colours or\ndimensions you can. The following example will display a sparkline 100 pixels\nwide by 40 pixels high, with a red data-line on a black background:</p>\n<pre>{% github_participation_graph \"brosner\" \"django\" \"100x40\" \"ff0000\" \"000000\" %}\n</pre>\n<p>There are seven parameters in total; two are mandatory and five are optional:</p>\n<ol>\n<li><tt>username</tt>: Github username (mandatory)</li>\n<li><tt>project_name</tt>: Github project name (mandatory)</li>\n<li><tt>dimensions</tt>: height and width of the image in pixels in the format\n\u201cHxW\u201d</li>\n<li><tt>foreground_colour</tt>: six-digit hex colour of the sparkline data</li>\n<li><tt>background_colour</tt>: six-digit hex colour of the graph background</li>\n<li><tt>fill_colour</tt>: six-digit hex colour of the graph\u2019s data fill</li>\n<li><tt>marker_colour</tt>: six-digit hex colour for the final data marker</li>\n</ol>\n</div>\n<div id=\"caveat-emptor\">\n<h2>Caveat emptor</h2>\n<p>To get the commit data for the graph the template tag makes an HTTP request to\n<tt>github.com</tt> \u2013 so for every sparkline there will be two HTTP requests: one\nclient-side to a Google server to get the chart image and one server-side to\nGithub. Although it\u2019s optional I highly recommend using Django\u2019s built-in\ncaching to cache either the template or the template fragment.</p>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>All code in this repository is released under the GNU General Public licence\nversion 2. For details see the LICENCE file in the root directory.</p>\n<p>If you\u2019d like to use the code under a different (open-source) licence, contact\nme and we\u2019ll see what we can do.</p>\n</div>\n\n          </div>"}, "last_serial": 2067681, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "51bbff3449e158ef8fb055347ca48a76", "sha256": "05ce4954beca8e6db66f216edc74a6e8417fbfbd04d784e1d6f70c7b7583b5ce"}, "downloads": -1, "filename": "participationgraphs-0.1.1.tar.gz", "has_sig": false, "md5_digest": "51bbff3449e158ef8fb055347ca48a76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5563, "upload_time": "2010-09-25T12:54:44", "upload_time_iso_8601": "2010-09-25T12:54:44.180892Z", "url": "https://files.pythonhosted.org/packages/4b/de/222dc9f74e474cd34f01b0d9fc78d528b98e4d85725cc176fff54bb46640/participationgraphs-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51bbff3449e158ef8fb055347ca48a76", "sha256": "05ce4954beca8e6db66f216edc74a6e8417fbfbd04d784e1d6f70c7b7583b5ce"}, "downloads": -1, "filename": "participationgraphs-0.1.1.tar.gz", "has_sig": false, "md5_digest": "51bbff3449e158ef8fb055347ca48a76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5563, "upload_time": "2010-09-25T12:54:44", "upload_time_iso_8601": "2010-09-25T12:54:44.180892Z", "url": "https://files.pythonhosted.org/packages/4b/de/222dc9f74e474cd34f01b0d9fc78d528b98e4d85725cc176fff54bb46640/participationgraphs-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:13 2020"}