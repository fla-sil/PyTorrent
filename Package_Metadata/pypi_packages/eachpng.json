{"info": {"author": "Pebble Technology", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": ".. image:: https://travis-ci.org/pebble/eachpng.svg?branch=master\n    :target: https://travis-ci.org/pebble/eachpng\n    \neachpng\n=======\n\nExecutes command line for each PNG from standard input and forwards their output to stdout.\nThis can be useful if you are want to generate an animated GIF (e.g. which gifsicle) but\ncoming from a stream of of PNGs (which cannot be converted via ImageMagick as such).\n\n\nInstalling\n----------\n\n.. code-block:: bash\n  \n  $ pip install .\n\n\nRunning tests\n-------------\n\n.. code-block:: bash\n\n  $ nosetests tests\n\n\nUsage\n-----\n\nHere's an example how to convert a stream of PNGs to an animated GIF. This example uses:\n\n- `seq` to create a sequence of numbers (stream: many lines with a number each line), uses\n- `xargs` to call a fictitious program `./tool` that produces a PNG for each call (stream: sequence of PNGs)\n- `eachpng` calling ImageMagick `convert` for each PNG to convert it to GIF (stream: sequence if GIFs)\n- `gifsicle` operating taking the sequence of GIFs to produce an animated GIF\n\n\n.. code-block:: bash\n\n  $ seq 0 33 12000 | \\\n    xargs -L 1 -I TC ./tool -t TC -o - | \\\n    eachpng convert - GIF:- | \\\n    gifsicle --multifile --delay 3 -O3 >out.gif", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/pebble/eachpng/tarball/0.0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pebble/eachpng", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "eachpng", "package_url": "https://pypi.org/project/eachpng/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/eachpng/", "project_urls": {"Download": "https://github.com/pebble/eachpng/tarball/0.0.2", "Homepage": "https://github.com/pebble/eachpng"}, "release_url": "https://pypi.org/project/eachpng/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Executes command line for each PNG from standard input and forwards their output to stdout.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/pebble/eachpng\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/pebble/eachpng.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/902b1b02390e499da7e2279364f26cddbb368ba3/68747470733a2f2f7472617669732d63692e6f72672f706562626c652f65616368706e672e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"eachpng\">\n<h2>eachpng</h2>\n<p>Executes command line for each PNG from standard input and forwards their output to stdout.\nThis can be useful if you are want to generate an animated GIF (e.g. which gifsicle) but\ncoming from a stream of of PNGs (which cannot be converted via ImageMagick as such).</p>\n<div id=\"installing\">\n<h3>Installing</h3>\n<pre>$ pip install .\n</pre>\n</div>\n<div id=\"running-tests\">\n<h3>Running tests</h3>\n<pre>$ nosetests tests\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Here\u2019s an example how to convert a stream of PNGs to an animated GIF. This example uses:</p>\n<ul>\n<li><cite>seq</cite> to create a sequence of numbers (stream: many lines with a number each line), uses</li>\n<li><cite>xargs</cite> to call a fictitious program <cite>./tool</cite> that produces a PNG for each call (stream: sequence of PNGs)</li>\n<li><cite>eachpng</cite> calling ImageMagick <cite>convert</cite> for each PNG to convert it to GIF (stream: sequence if GIFs)</li>\n<li><cite>gifsicle</cite> operating taking the sequence of GIFs to produce an animated GIF</li>\n</ul>\n<pre>$ seq <span class=\"m\">0</span> <span class=\"m\">33</span> <span class=\"m\">12000</span> <span class=\"p\">|</span> <span class=\"se\">\\\n</span>  xargs -L <span class=\"m\">1</span> -I TC ./tool -t TC -o - <span class=\"p\">|</span> <span class=\"se\">\\\n</span>  eachpng convert - GIF:- <span class=\"p\">|</span> <span class=\"se\">\\\n</span>  gifsicle --multifile --delay <span class=\"m\">3</span> -O3 &gt;out.gif\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2196828, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "5bf24da6ceffa9820462cae600ab651a", "sha256": "57d7bd147464a8d0680e77c8af310d7451e429659567da52e2fa948f5a3f7125"}, "downloads": -1, "filename": "eachpng-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5bf24da6ceffa9820462cae600ab651a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2511, "upload_time": "2016-06-30T21:17:55", "upload_time_iso_8601": "2016-06-30T21:17:55.006377Z", "url": "https://files.pythonhosted.org/packages/61/30/9b1a94d52f03a2a0215b6b84872f77c96570528f91a02eccdc8395569d89/eachpng-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5bf24da6ceffa9820462cae600ab651a", "sha256": "57d7bd147464a8d0680e77c8af310d7451e429659567da52e2fa948f5a3f7125"}, "downloads": -1, "filename": "eachpng-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5bf24da6ceffa9820462cae600ab651a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2511, "upload_time": "2016-06-30T21:17:55", "upload_time_iso_8601": "2016-06-30T21:17:55.006377Z", "url": "https://files.pythonhosted.org/packages/61/30/9b1a94d52f03a2a0215b6b84872f77c96570528f91a02eccdc8395569d89/eachpng-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:34 2020"}