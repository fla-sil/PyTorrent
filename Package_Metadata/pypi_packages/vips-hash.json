{"info": {"author": "Jason Carver", "author_email": "ethcalibur+pip@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# eth-hash\n\n[![Join the chat at https://gitter.im/ethereum/web3.py](https://badges.gitter.im/ethereum/web3.py.svg)](https://gitter.im/ethereum/web3.py?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://travis-ci.org/ethereum/eth-hash.png)](https://travis-ci.org/ethereum/eth-hash)\n[![PyPI version](https://badge.fury.io/py/eth-hash.svg)](https://badge.fury.io/py/eth-hash)\n[![Python versions](https://img.shields.io/pypi/pyversions/eth-hash.svg)](https://pypi.python.org/pypi/eth-hash)\n[![Docs build](https://readthedocs.org/projects/eth-hash/badge/?version=latest)](http://eth-hash.readthedocs.io/en/latest/?badge=latest)\n\n\nThe Ethereum hashing function, keccak256, sometimes (erroneously) called sha3\n\nNote: the similarly named [pyethash](https://github.com/ethereum/ethash)\nhas a completely different use: it generates proofs of work.\n\nThis is a low-level library, intended to be used internally by other Ethereum tools.\nIf you're looking for a convenient hashing tool, check out\n[`eth_utils.keccak()`](https://github.com/ethereum/eth-utils#crypto-utils)\nwhich will be a little friendlier, and provide access to other helpful utilities.\n\nRead more in the [documentation on ReadTheDocs](http://eth-hash.readthedocs.io/). [View the change log](http://eth-hash.readthedocs.io/en/latest/releases.html).\n\n## Quickstart\n\n```sh\npip install eth-hash[pycryptodomex]\n```\n\n```py\n>>> from eth_hash.auto import keccak\n>>> keccak(b'')\nb\"\\xc5\\xd2F\\x01\\x86\\xf7#<\\x92~}\\xb2\\xdc\\xc7\\x03\\xc0\\xe5\\x00\\xb6S\\xca\\x82';{\\xfa\\xd8\\x04]\\x85\\xa4p\"\n```\n\nSee the [docs](http://eth-hash.readthedocs.io/en/latest/quickstart.html#quickstart)\nfor more about choosing and installing backends.\n\n## Developer setup\n\nIf you would like to hack on eth-hash, please check out the\n[Ethereum Development Tactical Manual](https://github.com/pipermerriam/ethereum-dev-tactical-manual)\nfor information on how we do:\n\n- Testing\n- Pull Requests\n- Code Style\n- Documentation\n\n### Development Environment Setup\n\nYou can set up your dev environment with:\n\n\ngit clone git@github.com:ethereum/eth-hash.git\ncd eth-hash\nvirtualenv -p python3 venv\n. venv/bin/activate\npip install -e .[dev]\n\n\n### Testing Setup\n\nDuring development, you might like to have tests run on every file save.\n\nShow flake8 errors on file change:\n\n```sh\n# Test flake8\nwhen-changed -v -s -r -1 eth_hash/ tests/ -c \"clear; flake8 eth_hash tests && echo 'flake8 success' || echo 'error'\"\n```\n\nRun multi-process tests in one command, but without color:\n\n```sh\n# in the project root:\npytest --numprocesses=4 --looponfail --maxfail=1\n# the same thing, succinctly:\npytest -n 4 -f --maxfail=1\n```\n\nRun in one thread, with color and desktop notifications:\n\n```sh\ncd venv\nptw --onfail \"notify-send -t 5000 'Test failure \u26a0\u26a0\u26a0\u26a0\u26a0' 'python 3 test on eth-hash failed'\" ../tests ../eth_hash\n```\n\n### Release setup\n\nFor Debian-like systems:\n```\napt install pandoc\n```\n\nTo release a new version:\n\n```sh\nmake release bump=$$VERSION_PART_TO_BUMP$$\n```\n\n#### How to bumpversion\n\nThe version format for this repo is `{major}.{minor}.{patch}` for stable, and\n`{major}.{minor}.{patch}-{stage}.{devnum}` for unstable (`stage` can be alpha or beta).\n\nTo issue the next version in line, specify which part to bump,\nlike `make release bump=minor` or `make release bump=devnum`.\n\nIf you are in a beta version, `make release bump=stage` will switch to a stable.\n\nTo issue an unstable version when the current version is stable, specify the\nnew version explicitly, like `make release bump=\"--new-version 4.0.0-alpha.1 devnum\"`\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/VIPSTARCOIN-electrum/vips-hash", "keywords": "ethereum", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vips-hash", "package_url": "https://pypi.org/project/vips-hash/", "platform": "", "project_url": "https://pypi.org/project/vips-hash/", "project_urls": {"Homepage": "https://github.com/VIPSTARCOIN-electrum/vips-hash"}, "release_url": "https://pypi.org/project/vips-hash/0.2.0/", "requires_dist": ["bumpversion (<1,>=0.5.3) ; extra == 'dev'", "pytest-xdist ; extra == 'dev'", "pytest-watch (<5,>=4.1.0) ; extra == 'dev'", "wheel ; extra == 'dev'", "ipython ; extra == 'dev'", "pytest (==3.3.2) ; extra == 'dev'", "tox (<3,>=2.9.1) ; extra == 'dev'", "flake8 (==3.4.1) ; extra == 'dev'", "isort (<5,>=4.2.15) ; extra == 'dev'", "Sphinx (<2,>=1.6.5) ; extra == 'dev'", "sphinx-rtd-theme (>=0.1.9) ; extra == 'dev'", "Sphinx (<2,>=1.6.5) ; extra == 'doc'", "sphinx-rtd-theme (>=0.1.9) ; extra == 'doc'", "flake8 (==3.4.1) ; extra == 'lint'", "isort (<5,>=4.2.15) ; extra == 'lint'", "pycryptodomex (<4,>=3.6.6) ; extra == 'pycryptodomex'", "pysha3 (<2.0.0,>=1.0.0) ; extra == 'pysha3'", "pytest (==3.3.2) ; extra == 'test'", "tox (<3,>=2.9.1) ; extra == 'test'"], "requires_python": ">=3.5, <4", "summary": "vips-hash: The Ethereum hashing function, keccak256, sometimes (erroneously) called sha3", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># eth-hash</p>\n<p>[![Join the chat at <a href=\"https://gitter.im/ethereum/web3.py%5D(https://badges.gitter.im/ethereum/web3.py.svg)%5D(https://gitter.im/ethereum/web3.py?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\">https://gitter.im/ethereum/web3.py](https://badges.gitter.im/ethereum/web3.py.svg)](https://gitter.im/ethereum/web3.py?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge</a>)\n[![Build Status](<a href=\"https://travis-ci.org/ethereum/eth-hash.png)%5D(https://travis-ci.org/ethereum/eth-hash\" rel=\"nofollow\">https://travis-ci.org/ethereum/eth-hash.png)](https://travis-ci.org/ethereum/eth-hash</a>)\n[![PyPI version](<a href=\"https://badge.fury.io/py/eth-hash.svg)%5D(https://badge.fury.io/py/eth-hash\" rel=\"nofollow\">https://badge.fury.io/py/eth-hash.svg)](https://badge.fury.io/py/eth-hash</a>)\n[![Python versions](<a href=\"https://img.shields.io/pypi/pyversions/eth-hash.svg)%5D(https://pypi.python.org/pypi/eth-hash\" rel=\"nofollow\">https://img.shields.io/pypi/pyversions/eth-hash.svg)](https://pypi.python.org/pypi/eth-hash</a>)\n[![Docs build](<a href=\"https://readthedocs.org/projects/eth-hash/badge/?version=latest)%5D(http://eth-hash.readthedocs.io/en/latest/\" rel=\"nofollow\">https://readthedocs.org/projects/eth-hash/badge/?version=latest)](http://eth-hash.readthedocs.io/en/latest/</a>?badge=latest)</p>\n<p>The Ethereum hashing function, keccak256, sometimes (erroneously) called sha3</p>\n<p>Note: the similarly named [pyethash](<a href=\"https://github.com/ethereum/ethash\" rel=\"nofollow\">https://github.com/ethereum/ethash</a>)\nhas a completely different use: it generates proofs of work.</p>\n<p>This is a low-level library, intended to be used internally by other Ethereum tools.\nIf you\u2019re looking for a convenient hashing tool, check out\n[<cite>eth_utils.keccak()</cite>](<a href=\"https://github.com/ethereum/eth-utils#crypto-utils\" rel=\"nofollow\">https://github.com/ethereum/eth-utils#crypto-utils</a>)\nwhich will be a little friendlier, and provide access to other helpful utilities.</p>\n<p>Read more in the [documentation on ReadTheDocs](<a href=\"http://eth-hash.readthedocs.io/\" rel=\"nofollow\">http://eth-hash.readthedocs.io/</a>). [View the change log](<a href=\"http://eth-hash.readthedocs.io/en/latest/releases.html\" rel=\"nofollow\">http://eth-hash.readthedocs.io/en/latest/releases.html</a>).</p>\n<p>## Quickstart</p>\n<p><tt>`sh\npip install <span class=\"pre\">eth-hash[pycryptodomex]</span>\n`</tt></p>\n<p><tt>`py\n&gt;&gt;&gt; from eth_hash.auto import keccak\n&gt;&gt;&gt; <span class=\"pre\">keccak(b'')</span>\n<span class=\"pre\">b\"\\xc5\\xd2F\\x01\\x86\\xf7#&lt;\\x92~}\\xb2\\xdc\\xc7\\x03\\xc0\\xe5\\x00\\xb6S\\xca\\x82';{\\xfa\\xd8\\x04]\\x85\\xa4p\"</span>\n`</tt></p>\n<p>See the [docs](<a href=\"http://eth-hash.readthedocs.io/en/latest/quickstart.html#quickstart\" rel=\"nofollow\">http://eth-hash.readthedocs.io/en/latest/quickstart.html#quickstart</a>)\nfor more about choosing and installing backends.</p>\n<p>## Developer setup</p>\n<p>If you would like to hack on eth-hash, please check out the\n[Ethereum Development Tactical Manual](<a href=\"https://github.com/pipermerriam/ethereum-dev-tactical-manual\" rel=\"nofollow\">https://github.com/pipermerriam/ethereum-dev-tactical-manual</a>)\nfor information on how we do:</p>\n<ul>\n<li>Testing</li>\n<li>Pull Requests</li>\n<li>Code Style</li>\n<li>Documentation</li>\n</ul>\n<p>### Development Environment Setup</p>\n<p>You can set up your dev environment with:</p>\n<p>git clone <a href=\"mailto:git%40github.com\">git<span>@</span>github<span>.</span>com</a>:ethereum/eth-hash.git\ncd eth-hash\nvirtualenv -p python3 venv\n. venv/bin/activate\npip install -e .[dev]</p>\n<p>### Testing Setup</p>\n<p>During development, you might like to have tests run on every file save.</p>\n<p>Show flake8 errors on file change:</p>\n<p><tt>`sh\n# Test flake8\n<span class=\"pre\">when-changed</span> <span class=\"pre\">-v</span> <span class=\"pre\">-s</span> <span class=\"pre\">-r</span> <span class=\"pre\">-1</span> eth_hash/ tests/ <span class=\"pre\">-c</span> \"clear; flake8 eth_hash tests &amp;&amp; echo 'flake8 success' || echo 'error'\"\n`</tt></p>\n<p>Run multi-process tests in one command, but without color:</p>\n<p><tt>`sh\n# in the project root:\npytest <span class=\"pre\">--numprocesses=4</span> <span class=\"pre\">--looponfail</span> <span class=\"pre\">--maxfail=1</span>\n# the same thing, succinctly:\npytest <span class=\"pre\">-n</span> 4 <span class=\"pre\">-f</span> <span class=\"pre\">--maxfail=1</span>\n`</tt></p>\n<p>Run in one thread, with color and desktop notifications:</p>\n<p><tt>`sh\ncd venv\nptw <span class=\"pre\">--onfail</span> <span class=\"pre\">\"notify-send</span> <span class=\"pre\">-t</span> 5000 'Test failure <span class=\"pre\">\u26a0\u26a0\u26a0\u26a0\u26a0'</span> 'python 3 test on <span class=\"pre\">eth-hash</span> failed'\" <span class=\"pre\">../tests</span> <span class=\"pre\">../eth_hash</span>\n`</tt></p>\n<p>### Release setup</p>\n<p>For Debian-like systems:\n<tt>`\napt install pandoc\n`</tt></p>\n<p>To release a new version:</p>\n<p><tt>`sh\nmake release <span class=\"pre\">bump=$$VERSION_PART_TO_BUMP$$</span>\n`</tt></p>\n<p>#### How to bumpversion</p>\n<p>The version format for this repo is <cite>{major}.{minor}.{patch}</cite> for stable, and\n<cite>{major}.{minor}.{patch}-{stage}.{devnum}</cite> for unstable (<cite>stage</cite> can be alpha or beta).</p>\n<p>To issue the next version in line, specify which part to bump,\nlike <cite>make release bump=minor</cite> or <cite>make release bump=devnum</cite>.</p>\n<p>If you are in a beta version, <cite>make release bump=stage</cite> will switch to a stable.</p>\n<p>To issue an unstable version when the current version is stable, specify the\nnew version explicitly, like <cite>make release bump=\u201d\u2013new-version 4.0.0-alpha.1 devnum\u201d</cite></p>\n\n          </div>"}, "last_serial": 5647442, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "2f9781b15cd801878d5f3c38eb25d5d5", "sha256": "9c797bdcf0b432f69badf59256c30bc68f676b847d86aaf77eb059b399c6f276"}, "downloads": -1, "filename": "vips_hash-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2f9781b15cd801878d5f3c38eb25d5d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <4", "size": 7970, "upload_time": "2019-08-07T23:45:08", "upload_time_iso_8601": "2019-08-07T23:45:08.737499Z", "url": "https://files.pythonhosted.org/packages/77/4c/69528928a337f8b8765a31eb79db0fb307a86847f54c6001ce1c9dc98e1f/vips_hash-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "700fb80573d8ebbc552e1b77471f951c", "sha256": "5640c573ac0e458b45ab6ebfb4cc1d7b1f2eb1dcb7397ae18d894a9aeb9401cf"}, "downloads": -1, "filename": "vips-hash-0.2.0.tar.gz", "has_sig": false, "md5_digest": "700fb80573d8ebbc552e1b77471f951c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <4", "size": 9069, "upload_time": "2019-08-07T23:45:11", "upload_time_iso_8601": "2019-08-07T23:45:11.678786Z", "url": "https://files.pythonhosted.org/packages/56/1b/63eee593bb2d8768c156c5055b0911d5badda05bae179d25f0e23c06af77/vips-hash-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f9781b15cd801878d5f3c38eb25d5d5", "sha256": "9c797bdcf0b432f69badf59256c30bc68f676b847d86aaf77eb059b399c6f276"}, "downloads": -1, "filename": "vips_hash-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2f9781b15cd801878d5f3c38eb25d5d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <4", "size": 7970, "upload_time": "2019-08-07T23:45:08", "upload_time_iso_8601": "2019-08-07T23:45:08.737499Z", "url": "https://files.pythonhosted.org/packages/77/4c/69528928a337f8b8765a31eb79db0fb307a86847f54c6001ce1c9dc98e1f/vips_hash-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "700fb80573d8ebbc552e1b77471f951c", "sha256": "5640c573ac0e458b45ab6ebfb4cc1d7b1f2eb1dcb7397ae18d894a9aeb9401cf"}, "downloads": -1, "filename": "vips-hash-0.2.0.tar.gz", "has_sig": false, "md5_digest": "700fb80573d8ebbc552e1b77471f951c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <4", "size": 9069, "upload_time": "2019-08-07T23:45:11", "upload_time_iso_8601": "2019-08-07T23:45:11.678786Z", "url": "https://files.pythonhosted.org/packages/56/1b/63eee593bb2d8768c156c5055b0911d5badda05bae179d25f0e23c06af77/vips-hash-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:46 2020"}