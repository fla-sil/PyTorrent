{"info": {"author": "Juha Mustonen", "author_email": "juha.p.mustonen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "This package contains the xfiles - `Fabric <http://fabfile.org/>`_\r\nextension. The module adds the support to work with XML files in Fabric.\r\n\r\nRead the official documentation for installation, usage and examples:\r\nhttp://packages.python.org/fabric-contrib.xfiles\r\n\r\nUsage\r\n=====\r\nBrief introduction for xfiles -extension usage:\r\n\r\n#. Create Fabric configuration file ``fabfile.py``, for example with following\r\n   contents::\r\n\r\n    from fabric.api import env, run \r\n    from fabric.contrib import xfiles\r\n\r\n    def test():\r\n      for elem in xfiles.query('~/document.xml', '/root/item[id=test*]'):\r\n        # List all the elements having the attribute 'id'\u00b7\r\n        # and it with value 'test', or something that starts with it\r\n        print elem.text\r\n\r\n   In this example, it is expected you have XML -document in your home \r\n   directory (on ``remotehost`` -server), for example::\r\n\r\n      <root>\r\n        <item id=\"foo\">value1</item>\r\n        <item id=\"testing\">value2</item>\r\n        <item id=\"test\">value3</item>\r\n      </root>\r\n\r\n#. To see the outcome, run the command::\r\n\r\n    fab --username hostaccount -H remotehost test\r\n\r\n   Unless you have SSH private key provided for the remotehost, it'll\r\n   prompt for the password. After successful login, the XML file is read and \r\n   text from all ``/root/item`` -elements is listed.\r\n\r\n   .. TIP::\r\n\r\n      If the ``host`` parameter is not provided, or it is localhost, no SSH \r\n      connection is needed/created and the file path is expected to be found\r\n      from local filesystem. For example, following query reads the XML from\u00b7\r\n      same directory where the ``fabfile.py`` is::\r\n\r\n         for elem in xfiles.query('test.xml', '/root/sub'):\r\n           print elem\r\n\r\nSee more examples and detailed information from official documentation:\r\nhttp://packages.python.org/fabric-contrib.xfiles", "description_content_type": null, "docs_url": "https://pythonhosted.org/fabric-contrib.xfiles/", "download_url": "http://pypi.python.org/pypi/xfiles", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/jmu/fabric-contrib", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fabric-contrib.xfiles", "package_url": "https://pypi.org/project/fabric-contrib.xfiles/", "platform": "any", "project_url": "https://pypi.org/project/fabric-contrib.xfiles/", "project_urls": {"Download": "http://pypi.python.org/pypi/xfiles", "Homepage": "http://bitbucket.org/jmu/fabric-contrib"}, "release_url": "https://pypi.org/project/fabric-contrib.xfiles/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Fabric extension: xfiles", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package contains the xfiles - <a href=\"http://fabfile.org/\" rel=\"nofollow\">Fabric</a>\nextension. The module adds the support to work with XML files in Fabric.</p>\n<p>Read the official documentation for installation, usage and examples:\n<a href=\"http://packages.python.org/fabric-contrib.xfiles\" rel=\"nofollow\">http://packages.python.org/fabric-contrib.xfiles</a></p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Brief introduction for xfiles -extension usage:</p>\n<ol>\n<li><p>Create Fabric configuration file <tt>fabfile.py</tt>, for example with following\ncontents:</p>\n<pre>from fabric.api import env, run\nfrom fabric.contrib import xfiles\n\ndef test():\n  for elem in xfiles.query('~/document.xml', '/root/item[id=test*]'):\n    # List all the elements having the attribute 'id'\u00b7\n    # and it with value 'test', or something that starts with it\n    print elem.text\n</pre>\n<p>In this example, it is expected you have XML -document in your home\ndirectory (on <tt>remotehost</tt> -server), for example:</p>\n<pre>&lt;root&gt;\n  &lt;item id=\"foo\"&gt;value1&lt;/item&gt;\n  &lt;item id=\"testing\"&gt;value2&lt;/item&gt;\n  &lt;item id=\"test\"&gt;value3&lt;/item&gt;\n&lt;/root&gt;\n</pre>\n</li>\n<li><p>To see the outcome, run the command:</p>\n<pre>fab --username hostaccount -H remotehost test\n</pre>\n<p>Unless you have SSH private key provided for the remotehost, it\u2019ll\nprompt for the password. After successful login, the XML file is read and\ntext from all <tt>/root/item</tt> -elements is listed.</p>\n<div>\n<p>Tip</p>\n<p>If the <tt>host</tt> parameter is not provided, or it is localhost, no SSH\nconnection is needed/created and the file path is expected to be found\nfrom local filesystem. For example, following query reads the XML from\u00b7\nsame directory where the <tt>fabfile.py</tt> is:</p>\n<pre>for elem in xfiles.query('test.xml', '/root/sub'):\n  print elem\n</pre>\n</div>\n</li>\n</ol>\n<p>See more examples and detailed information from official documentation:\n<a href=\"http://packages.python.org/fabric-contrib.xfiles\" rel=\"nofollow\">http://packages.python.org/fabric-contrib.xfiles</a></p>\n</div>\n\n          </div>"}, "last_serial": 791850, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "7523a3bef150bc6d0a200948b41c5484", "sha256": "21694046b4032d3a675ebf10e8fdb2baa0202637efe86d03d522c99ef24ec412"}, "downloads": -1, "filename": "fabric_contrib.xfiles-0.1.1-py2.6.egg", "has_sig": false, "md5_digest": "7523a3bef150bc6d0a200948b41c5484", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 10477, "upload_time": "2010-04-28T18:51:58", "upload_time_iso_8601": "2010-04-28T18:51:58.883661Z", "url": "https://files.pythonhosted.org/packages/5f/2b/a7379552351f53b8a0d36eba074540a86f4d82fa5e09d0587b5643a3d7aa/fabric_contrib.xfiles-0.1.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d57bdde3462efe150c42713dea3218e5", "sha256": "ffb5326885c605d77f8197b8d088de0ef6ee3d3ecb0dbd897fc500eb7f62f14c"}, "downloads": -1, "filename": "fabric-contrib.xfiles-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d57bdde3462efe150c42713dea3218e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8635, "upload_time": "2010-04-28T18:47:28", "upload_time_iso_8601": "2010-04-28T18:47:28.386926Z", "url": "https://files.pythonhosted.org/packages/24/05/e6d1720ec34abdd6b6f3f3fba29ab5ef3d107fe793cf5405f98357d54545/fabric-contrib.xfiles-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7523a3bef150bc6d0a200948b41c5484", "sha256": "21694046b4032d3a675ebf10e8fdb2baa0202637efe86d03d522c99ef24ec412"}, "downloads": -1, "filename": "fabric_contrib.xfiles-0.1.1-py2.6.egg", "has_sig": false, "md5_digest": "7523a3bef150bc6d0a200948b41c5484", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 10477, "upload_time": "2010-04-28T18:51:58", "upload_time_iso_8601": "2010-04-28T18:51:58.883661Z", "url": "https://files.pythonhosted.org/packages/5f/2b/a7379552351f53b8a0d36eba074540a86f4d82fa5e09d0587b5643a3d7aa/fabric_contrib.xfiles-0.1.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d57bdde3462efe150c42713dea3218e5", "sha256": "ffb5326885c605d77f8197b8d088de0ef6ee3d3ecb0dbd897fc500eb7f62f14c"}, "downloads": -1, "filename": "fabric-contrib.xfiles-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d57bdde3462efe150c42713dea3218e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8635, "upload_time": "2010-04-28T18:47:28", "upload_time_iso_8601": "2010-04-28T18:47:28.386926Z", "url": "https://files.pythonhosted.org/packages/24/05/e6d1720ec34abdd6b6f3f3fba29ab5ef3d107fe793cf5405f98357d54545/fabric-contrib.xfiles-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:12 2020"}