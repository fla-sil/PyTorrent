{"info": {"author": "procamora", "author_email": "pablojoserocamora@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Database", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Logging", "Topic :: System :: Networking"], "description": "# python3-utils\n\nThis repository contains a set of libraries that I use in other projects\n\n## Installation\n\nInstallation can be done through the _pip3_ command:\n\n```bash\npip3 install procamora-utils --user\n```\n\nYou can also update the library with:\n\n```bash\npython3 -m pip install --user --upgrade procamora-utils\n```\n\n\n## Libraries\n\n\n- logger\n- interface_sqlite\n- ip\n- ping\n\n\n\n\n## logger\n\nLibrary to run the logging library with colors according to the type of log.\n\n\n### Basic Usage\n\n\nTo use this class the first thing to do is import the library:\n\n\n```python\nimport logging\nfrom procamora_utils.logger import get_logging\n\nlogger: logging = get_logging(verbose=False, name='test')\n\nlogger.debug('hi')\nlogger.info('hi')\nlogger.warning('hi')\nlogger.error('hi')\nlogger.critical('hi')\n```\n\n\n\n\n\n\n\n\n## interface_sqlite\n\nThis library provides an easy way to manage a sqlite database. To do this, use the _sqlite3_ library to connect to the database and the _logging_ library to display information about errors and debugging.\n\n### Basic Usage\n\nTo use this class the first thing to do is import the library:\n\n```python\nfrom procamora_utils.logger import get_logging\nfrom procamora_utils.interface_sqlite import *\n```\n\nThe _interface_sqlite_ file when doing an _import *_ we are importing three functions, these are:\n\n\n\n    __all__ = ['conection_sqlite', 'execute_script_sqlite', 'dump_database']\n\n\n\n#### conection_sqlite\n\nThis function is responsible for carrying out the main SQL operations, such as: _SELECT_, _INSERT_, _UPDATE_ or _DELETE_.\n\n\nAn example of some of these functions would be:\n\n\n```python\nfrom pathlib import Path\nfrom typing import List, Dict, Text, Any\nfrom procamora_utils.interface_sqlite import *\n\ndb: Path = Path('database.db')\ndef select_all_hosts() -> List[Dict[Text, Any]]:\n    query: Text = \"SELECT * FROM Hosts\"\n    response_query: List[Dict[Text, Any]] = conection_sqlite(db, query, is_dict=True)\n    return response_query\n\ndef update_host_offline(date: Text):\n    query: Text = f\"UPDATE Hosts SET active=0 WHERE date <> '{date}';\"\n    conection_sqlite(db, query)\n```\n\n\n##### Parameterized query\n\nThis library allows the Parameterized of sql queries, here is an example of how to use it\n\n```python\nfrom pathlib import Path\nfrom typing import List, Dict, Text, Any, Tuple\nfrom procamora_utils.interface_sqlite import *\ndb: Path = Path('database.db')\n\nquery: Text = \"SELECT * FROM table1 WHERE value=?\"\nparams: Tuple = ('Python',)\nresponse_query: List[Dict[Text, Any]] = conection_sqlite(db, query, query_params=params, is_dict=True)\n```\n\n\n\n#### execute_script_sqlite\n\n\nThis function allows you to run a script or dump that you receive in string format. With this function, databases could be created.\n\n\n```python\nfrom pathlib import Path\nfrom typing import Text\nfrom procamora_utils.interface_sqlite import *\n\ndb: Path = Path('database.db')\ndump: Text = '''INSERT INTO() VALUES();\nINSERT INTO() VALUES();'''\nexecute_script_sqlite(db, dump)\n```\n\n#### dump_database\n\n\nThis function allows you to perform a complete dump of the database.\n\n\n\n\n```python\nfrom pathlib import Path\nfrom procamora_utils.interface_sqlite import *\n\ndb: Path = Path('database.db')\nresponse = dump_database(db)\n```\n\n\n\n## ip\n\nThis library provides a high-level abstraction for storing an IP address or FQDN. In case of entering a wrong value it will raise an exception.\n\n### Basic Usage\n\n```python\nimport logging\nfrom typing import Text\n\nfrom procamora_utils.ip import IP\nfrom procamora_utils.logger import get_logging\nlogger: logging = get_logging(False, 'ip')\n\n\nfqdn: Text = 'google.es'\nip: IP = IP(fqdn=fqdn)\nlogger.info(ip.get_addr())\n\nipv4: Text = '192.168.1.1'\nip: IP = IP(ip=ipv4)\nlogger.info(ip.get_addr())\n```\n\n\n\n## ping\n\nThis library provides an easy way to ping using the _ping_ command provided by the operating system. The reason for using the operating system command is so that you do not need to be root to send an ICMP packet.\n\n### Basic Usage\n\n\nTo use this class the first thing to do is import the library:\n\n\n```python\nimport logging\nfrom typing import List\nfrom procamora_utils.ip import IP\nfrom procamora_utils.ping import ping\nfrom procamora_utils.logger import get_logging\nlogger: logging = get_logging(False, 'ping')\n\nips: List[IP] = [IP(ip=\"127.0.0.1\"), IP(ip=\"192.168.0.103\"), IP(fqdn=\"google.es\"), IP(fqdn=\"google.false\")]\nfor ip in ips:\n    texto: bool = ping(ip)\n    if texto:\n        logger.info(\"{} up\".format(ip.get_addr()))\n    else:\n        logger.info(\"{} down\".format(ip.get_addr()))\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/procamora/python3-utils/archive/v1.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/procamora/python3-utils", "keywords": "sqlite,sql,sqlite3,network,fqdn,ip,ipv4,ipv6,icmp,ping,logging,color,log", "license": "gpl-3.0", "maintainer": "", "maintainer_email": "", "name": "procamora-utils", "package_url": "https://pypi.org/project/procamora-utils/", "platform": "", "project_url": "https://pypi.org/project/procamora-utils/", "project_urls": {"Download": "https://github.com/procamora/python3-utils/archive/v1.5.tar.gz", "Homepage": "https://github.com/procamora/python3-utils"}, "release_url": "https://pypi.org/project/procamora-utils/1.5/", "requires_dist": null, "requires_python": "<4, >=3.5", "summary": "This repository contains a set of libraries that i use in other projects", "version": "1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python3-utils</h1>\n<p>This repository contains a set of libraries that I use in other projects</p>\n<h2>Installation</h2>\n<p>Installation can be done through the <em>pip3</em> command:</p>\n<pre>pip3 install procamora-utils --user\n</pre>\n<p>You can also update the library with:</p>\n<pre>python3 -m pip install --user --upgrade procamora-utils\n</pre>\n<h2>Libraries</h2>\n<ul>\n<li>logger</li>\n<li>interface_sqlite</li>\n<li>ip</li>\n<li>ping</li>\n</ul>\n<h2>logger</h2>\n<p>Library to run the logging library with colors according to the type of log.</p>\n<h3>Basic Usage</h3>\n<p>To use this class the first thing to do is import the library:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.logger</span> <span class=\"kn\">import</span> <span class=\"n\">get_logging</span>\n\n<span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">logging</span> <span class=\"o\">=</span> <span class=\"n\">get_logging</span><span class=\"p\">(</span><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'hi'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'hi'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s1\">'hi'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'hi'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'hi'</span><span class=\"p\">)</span>\n</pre>\n<h2>interface_sqlite</h2>\n<p>This library provides an easy way to manage a sqlite database. To do this, use the <em>sqlite3</em> library to connect to the database and the <em>logging</em> library to display information about errors and debugging.</p>\n<h3>Basic Usage</h3>\n<p>To use this class the first thing to do is import the library:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.logger</span> <span class=\"kn\">import</span> <span class=\"n\">get_logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.interface_sqlite</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<p>The <em>interface_sqlite</em> file when doing an <em>import *</em> we are importing three functions, these are:</p>\n<pre><code>__all__ = ['conection_sqlite', 'execute_script_sqlite', 'dump_database']\n</code></pre>\n<h4>conection_sqlite</h4>\n<p>This function is responsible for carrying out the main SQL operations, such as: <em>SELECT</em>, <em>INSERT</em>, <em>UPDATE</em> or <em>DELETE</em>.</p>\n<p>An example of some of these functions would be:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">Any</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.interface_sqlite</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">Path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'database.db'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">select_all_hosts</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]:</span>\n    <span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">Text</span> <span class=\"o\">=</span> <span class=\"s2\">\"SELECT * FROM Hosts\"</span>\n    <span class=\"n\">response_query</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">conection_sqlite</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">is_dict</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">response_query</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">update_host_offline</span><span class=\"p\">(</span><span class=\"n\">date</span><span class=\"p\">:</span> <span class=\"n\">Text</span><span class=\"p\">):</span>\n    <span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">Text</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\"UPDATE Hosts SET active=0 WHERE date &lt;&gt; '</span><span class=\"si\">{</span><span class=\"n\">date</span><span class=\"si\">}</span><span class=\"s2\">';\"</span>\n    <span class=\"n\">conection_sqlite</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">)</span>\n</pre>\n<h5>Parameterized query</h5>\n<p>This library allows the Parameterized of sql queries, here is an example of how to use it</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.interface_sqlite</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">Path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'database.db'</span><span class=\"p\">)</span>\n\n<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">Text</span> <span class=\"o\">=</span> <span class=\"s2\">\"SELECT * FROM table1 WHERE value=?\"</span>\n<span class=\"n\">params</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'Python'</span><span class=\"p\">,)</span>\n<span class=\"n\">response_query</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Text</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">conection_sqlite</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">query_params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"n\">is_dict</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h4>execute_script_sqlite</h4>\n<p>This function allows you to run a script or dump that you receive in string format. With this function, databases could be created.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Text</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.interface_sqlite</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">Path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'database.db'</span><span class=\"p\">)</span>\n<span class=\"n\">dump</span><span class=\"p\">:</span> <span class=\"n\">Text</span> <span class=\"o\">=</span> <span class=\"s1\">'''INSERT INTO() VALUES();</span>\n<span class=\"s1\">INSERT INTO() VALUES();'''</span>\n<span class=\"n\">execute_script_sqlite</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">dump</span><span class=\"p\">)</span>\n</pre>\n<h4>dump_database</h4>\n<p>This function allows you to perform a complete dump of the database.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.interface_sqlite</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">db</span><span class=\"p\">:</span> <span class=\"n\">Path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'database.db'</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">dump_database</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"p\">)</span>\n</pre>\n<h2>ip</h2>\n<p>This library provides a high-level abstraction for storing an IP address or FQDN. In case of entering a wrong value it will raise an exception.</p>\n<h3>Basic Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Text</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.ip</span> <span class=\"kn\">import</span> <span class=\"n\">IP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.logger</span> <span class=\"kn\">import</span> <span class=\"n\">get_logging</span>\n<span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">logging</span> <span class=\"o\">=</span> <span class=\"n\">get_logging</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">'ip'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">fqdn</span><span class=\"p\">:</span> <span class=\"n\">Text</span> <span class=\"o\">=</span> <span class=\"s1\">'google.es'</span>\n<span class=\"n\">ip</span><span class=\"p\">:</span> <span class=\"n\">IP</span> <span class=\"o\">=</span> <span class=\"n\">IP</span><span class=\"p\">(</span><span class=\"n\">fqdn</span><span class=\"o\">=</span><span class=\"n\">fqdn</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">.</span><span class=\"n\">get_addr</span><span class=\"p\">())</span>\n\n<span class=\"n\">ipv4</span><span class=\"p\">:</span> <span class=\"n\">Text</span> <span class=\"o\">=</span> <span class=\"s1\">'192.168.1.1'</span>\n<span class=\"n\">ip</span><span class=\"p\">:</span> <span class=\"n\">IP</span> <span class=\"o\">=</span> <span class=\"n\">IP</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"n\">ipv4</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">.</span><span class=\"n\">get_addr</span><span class=\"p\">())</span>\n</pre>\n<h2>ping</h2>\n<p>This library provides an easy way to ping using the <em>ping</em> command provided by the operating system. The reason for using the operating system command is so that you do not need to be root to send an ICMP packet.</p>\n<h3>Basic Usage</h3>\n<p>To use this class the first thing to do is import the library:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.ip</span> <span class=\"kn\">import</span> <span class=\"n\">IP</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.ping</span> <span class=\"kn\">import</span> <span class=\"n\">ping</span>\n<span class=\"kn\">from</span> <span class=\"nn\">procamora_utils.logger</span> <span class=\"kn\">import</span> <span class=\"n\">get_logging</span>\n<span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">logging</span> <span class=\"o\">=</span> <span class=\"n\">get_logging</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">'ping'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ips</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">IP</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">IP</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">),</span> <span class=\"n\">IP</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"192.168.0.103\"</span><span class=\"p\">),</span> <span class=\"n\">IP</span><span class=\"p\">(</span><span class=\"n\">fqdn</span><span class=\"o\">=</span><span class=\"s2\">\"google.es\"</span><span class=\"p\">),</span> <span class=\"n\">IP</span><span class=\"p\">(</span><span class=\"n\">fqdn</span><span class=\"o\">=</span><span class=\"s2\">\"google.false\"</span><span class=\"p\">)]</span>\n<span class=\"k\">for</span> <span class=\"n\">ip</span> <span class=\"ow\">in</span> <span class=\"n\">ips</span><span class=\"p\">:</span>\n    <span class=\"n\">texto</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"n\">ping</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">texto</span><span class=\"p\">:</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> up\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">.</span><span class=\"n\">get_addr</span><span class=\"p\">()))</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\"> down\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">.</span><span class=\"n\">get_addr</span><span class=\"p\">()))</span>\n</pre>\n\n          </div>"}, "last_serial": 7086552, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "9be5ee266595e283e67dd9601e6214a1", "sha256": "8e0424bc8016554853e7fbd5e30918b568f274a2398ddeaaecd6e7a917bfadb4"}, "downloads": -1, "filename": "procamora-utils-1.0.tar.gz", "has_sig": false, "md5_digest": "9be5ee266595e283e67dd9601e6214a1", "packagetype": "sdist", "python_version": "source", "requires_python": "<4, >=3.5", "size": 20351, "upload_time": "2020-04-20T17:07:39", "upload_time_iso_8601": "2020-04-20T17:07:39.980415Z", "url": "https://files.pythonhosted.org/packages/2a/d7/a1c70a61939821162172dad67c9038c1b7020a3ea586efc5d3c09c6d97d1/procamora-utils-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "45e4d69d8716958567de04075ada3beb", "sha256": "e3bfede5566191f993cf4d754a7f43e756189c05d536cbc2319e56e0bd72ca94"}, "downloads": -1, "filename": "procamora-utils-1.1.tar.gz", "has_sig": false, "md5_digest": "45e4d69d8716958567de04075ada3beb", "packagetype": "sdist", "python_version": "source", "requires_python": "<4, >=3.5", "size": 20355, "upload_time": "2020-04-20T18:08:52", "upload_time_iso_8601": "2020-04-20T18:08:52.649851Z", "url": "https://files.pythonhosted.org/packages/c6/15/3d014f76aa20349a767881fdf882684205d7e2c31d45af08c5a2c09ffd12/procamora-utils-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "dee693b1ecbb7376f3a5da96995bbe47", "sha256": "1d5504ae20d7d0db3058830aa9549810060a87cc747bb7553a4f16e3fb8a106c"}, "downloads": -1, "filename": "procamora-utils-1.2.tar.gz", "has_sig": false, "md5_digest": "dee693b1ecbb7376f3a5da96995bbe47", "packagetype": "sdist", "python_version": "source", "requires_python": "<4, >=3.5", "size": 20351, "upload_time": "2020-04-20T18:21:57", "upload_time_iso_8601": "2020-04-20T18:21:57.024855Z", "url": "https://files.pythonhosted.org/packages/27/1a/2dc6b51dbd6789927ac00350e0dcd4e4941eb9475880ca2929d7224e3062/procamora-utils-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "52ac51af8e47f8364466b5f361e42bc7", "sha256": "32f053bafdc7a88df3abccd4056c8c7159df0680993b652488dfc95adaccdaff"}, "downloads": -1, "filename": "procamora-utils-1.3.tar.gz", "has_sig": false, "md5_digest": "52ac51af8e47f8364466b5f361e42bc7", "packagetype": "sdist", "python_version": "source", "requires_python": "<4, >=3.5", "size": 20420, "upload_time": "2020-04-22T17:14:58", "upload_time_iso_8601": "2020-04-22T17:14:58.095063Z", "url": "https://files.pythonhosted.org/packages/0f/86/7edc43956fd7c9ae0ac37d49380bd00f3c1518ba5384f948ff86e750135c/procamora-utils-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "9fadb03ef35347ffb6ec18de420e4de2", "sha256": "48eca0d90a3985e8ec2108c9b41c50610bb3d9daba0a4acb427e72963030a0bd"}, "downloads": -1, "filename": "procamora-utils-1.4.tar.gz", "has_sig": false, "md5_digest": "9fadb03ef35347ffb6ec18de420e4de2", "packagetype": "sdist", "python_version": "source", "requires_python": "<4, >=3.5", "size": 20425, "upload_time": "2020-04-22T17:21:47", "upload_time_iso_8601": "2020-04-22T17:21:47.854306Z", "url": "https://files.pythonhosted.org/packages/a4/3a/3190123820a41eacaba2033a9592a9e4f4fb58f3b2811c08afced065f1b5/procamora-utils-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "1eb15de831ef29691b7b22ba33099167", "sha256": "09d0e9a03ecd4266d27300b9e2e6347124408642d288b678c7f07b10373e1e4d"}, "downloads": -1, "filename": "procamora-utils-1.5.tar.gz", "has_sig": false, "md5_digest": "1eb15de831ef29691b7b22ba33099167", "packagetype": "sdist", "python_version": "source", "requires_python": "<4, >=3.5", "size": 20634, "upload_time": "2020-04-23T18:44:52", "upload_time_iso_8601": "2020-04-23T18:44:52.627828Z", "url": "https://files.pythonhosted.org/packages/37/38/5ee42d3a1d60efb99958ffb589a8c8d212ecfa67f64406cbf57b02a0c70f/procamora-utils-1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1eb15de831ef29691b7b22ba33099167", "sha256": "09d0e9a03ecd4266d27300b9e2e6347124408642d288b678c7f07b10373e1e4d"}, "downloads": -1, "filename": "procamora-utils-1.5.tar.gz", "has_sig": false, "md5_digest": "1eb15de831ef29691b7b22ba33099167", "packagetype": "sdist", "python_version": "source", "requires_python": "<4, >=3.5", "size": 20634, "upload_time": "2020-04-23T18:44:52", "upload_time_iso_8601": "2020-04-23T18:44:52.627828Z", "url": "https://files.pythonhosted.org/packages/37/38/5ee42d3a1d60efb99958ffb589a8c8d212ecfa67f64406cbf57b02a0c70f/procamora-utils-1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:57 2020"}