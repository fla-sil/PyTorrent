{"info": {"author": "Max Wittig", "author_email": "max.wittig@siemens.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "Operating System :: OS Independent", "Topic :: Software Development"], "description": "OpenIDConnect Auth for Sentry\n=============================\n\nAn SSO provider for Sentry which enables `OpenID Connect <http://openid.net/connect/>`_ Apps authentication.\n\nThis is a fork of `sentry-auth-google <https://github.com/getsentry/sentry-auth-google/>`_.\n\nWhy fork, instead of adapting sentry-auth-google to work with every OpenID Connect provider?\n--------------------------------------------------------------------------------------------\nThe maintainer has different ideas with sentry-auth-google. See:\n\n* https://github.com/getsentry/sentry-auth-google/pull/29\n* https://github.com/getsentry/sentry/issues/5650\n\nInstall\n-------\n\n::\n\n    $ pip install sentry-auth-oidc\n\nExample Setup for Google\n------------------------\n\nStart by `creating a project in the Google Developers Console <https://console.developers.google.com>`_.\n\nIn the **Authorized redirect URIs** add the SSO endpoint for your installation::\n\n    https://sentry.example.com/auth/sso/\n\nNaturally other providers, that are supporting OpenID-Connect can also be used (like GitLab).\n\nFinally, obtain the API keys and the well-known account URL and plug them into your ``sentry.conf.py``:\n\n.. code-block:: python\n\n    OIDC_CLIENT_ID = \"\"\n\n    OIDC_CLIENT_SECRET = \"\"\n\n    OIDC_SCOPE = \"openid email\"\n\n    OIDC_DOMAIN = \"https://accounts.google.com\"  # e.g. for Google\n\nThe ``OIDC_DOMAIN`` defines where the OIDC configuration is going to be pulled from.\nBasically it specifies the OIDC server and adds the path ``.well-known/openid-configuration`` to it.\nThat's where different endpoint paths can be found.\n\nDetailed information can be found in the `ProviderConfig <https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig>`_ specification.\n\nIf your provider doesn't support the ``OIDC_DOMAIN``, then you have to set these\nrequired endpoints by yourself (autorization_endpoint, token_endpoint, userinfo_endpoint, issuer).\n\n.. code-block:: python\n\n    OIDC_AUTHORIZATION_ENDPOINT = \"https://accounts.google.com/o/oauth2/v2/auth\"  # e.g. for Google\n\n    OIDC_TOKEN_ENDPOINT = \"https://www.googleapis.com/oauth2/v4/token\"  # e.g. for Google\n\n    OIDC_USERINFO_ENDPOINT = \"https://www.googleapis.com/oauth2/v3/userinfo\" # e.g. for Google\n\n    OIDC_ISSUER = \"Google\"", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.getsentry.com", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "g85-sentry-auth-oidc", "package_url": "https://pypi.org/project/g85-sentry-auth-oidc/", "platform": "", "project_url": "https://pypi.org/project/g85-sentry-auth-oidc/", "project_urls": {"Homepage": "https://www.getsentry.com"}, "release_url": "https://pypi.org/project/g85-sentry-auth-oidc/2.0.2/", "requires_dist": null, "requires_python": "", "summary": "OpenID Connect authentication provider for Sentry", "version": "2.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An SSO provider for Sentry which enables <a href=\"http://openid.net/connect/\" rel=\"nofollow\">OpenID Connect</a> Apps authentication.</p>\n<p>This is a fork of <a href=\"https://github.com/getsentry/sentry-auth-google/\" rel=\"nofollow\">sentry-auth-google</a>.</p>\n<div id=\"why-fork-instead-of-adapting-sentry-auth-google-to-work-with-every-openid-connect-provider\">\n<h2>Why fork, instead of adapting sentry-auth-google to work with every OpenID Connect provider?</h2>\n<p>The maintainer has different ideas with sentry-auth-google. See:</p>\n<ul>\n<li><a href=\"https://github.com/getsentry/sentry-auth-google/pull/29\" rel=\"nofollow\">https://github.com/getsentry/sentry-auth-google/pull/29</a></li>\n<li><a href=\"https://github.com/getsentry/sentry/issues/5650\" rel=\"nofollow\">https://github.com/getsentry/sentry/issues/5650</a></li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install sentry-auth-oidc\n</pre>\n</div>\n<div id=\"example-setup-for-google\">\n<h2>Example Setup for Google</h2>\n<p>Start by <a href=\"https://console.developers.google.com\" rel=\"nofollow\">creating a project in the Google Developers Console</a>.</p>\n<p>In the <strong>Authorized redirect URIs</strong> add the SSO endpoint for your installation:</p>\n<pre>https://sentry.example.com/auth/sso/\n</pre>\n<p>Naturally other providers, that are supporting OpenID-Connect can also be used (like GitLab).</p>\n<p>Finally, obtain the API keys and the well-known account URL and plug them into your <tt>sentry.conf.py</tt>:</p>\n<pre><span class=\"n\">OIDC_CLIENT_ID</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"n\">OIDC_CLIENT_SECRET</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n\n<span class=\"n\">OIDC_SCOPE</span> <span class=\"o\">=</span> <span class=\"s2\">\"openid email\"</span>\n\n<span class=\"n\">OIDC_DOMAIN</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://accounts.google.com\"</span>  <span class=\"c1\"># e.g. for Google</span>\n</pre>\n<p>The <tt>OIDC_DOMAIN</tt> defines where the OIDC configuration is going to be pulled from.\nBasically it specifies the OIDC server and adds the path <tt><span class=\"pre\">.well-known/openid-configuration</span></tt> to it.\nThat\u2019s where different endpoint paths can be found.</p>\n<p>Detailed information can be found in the <a href=\"https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig\" rel=\"nofollow\">ProviderConfig</a> specification.</p>\n<p>If your provider doesn\u2019t support the <tt>OIDC_DOMAIN</tt>, then you have to set these\nrequired endpoints by yourself (autorization_endpoint, token_endpoint, userinfo_endpoint, issuer).</p>\n<pre><span class=\"n\">OIDC_AUTHORIZATION_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://accounts.google.com/o/oauth2/v2/auth\"</span>  <span class=\"c1\"># e.g. for Google</span>\n\n<span class=\"n\">OIDC_TOKEN_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://www.googleapis.com/oauth2/v4/token\"</span>  <span class=\"c1\"># e.g. for Google</span>\n\n<span class=\"n\">OIDC_USERINFO_ENDPOINT</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://www.googleapis.com/oauth2/v3/userinfo\"</span> <span class=\"c1\"># e.g. for Google</span>\n\n<span class=\"n\">OIDC_ISSUER</span> <span class=\"o\">=</span> <span class=\"s2\">\"Google\"</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5415739, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "4d32c57b6ce9c92ab521411bf9f849e1", "sha256": "81672bd6554505d5917b5087311cc44ac8939317587d52c8c6c9785df9ae89f8"}, "downloads": -1, "filename": "g85-sentry-auth-oidc-2.0.0.tar.gz", "has_sig": false, "md5_digest": "4d32c57b6ce9c92ab521411bf9f849e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10034, "upload_time": "2019-04-22T12:14:00", "upload_time_iso_8601": "2019-04-22T12:14:00.106407Z", "url": "https://files.pythonhosted.org/packages/a7/5f/16f84a9d9e731f50d2610737ec86f772508b6760ab12b7169888d522a699/g85-sentry-auth-oidc-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "44e5e47758ad13dff7692e7e5563fe24", "sha256": "2a08f12894fa371baaa50abbe50e8577962964ff360e55326daec08a7eb931ac"}, "downloads": -1, "filename": "g85-sentry-auth-oidc-2.0.1.tar.gz", "has_sig": false, "md5_digest": "44e5e47758ad13dff7692e7e5563fe24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10060, "upload_time": "2019-04-26T07:43:49", "upload_time_iso_8601": "2019-04-26T07:43:49.122855Z", "url": "https://files.pythonhosted.org/packages/53/2c/ed39e386aff37e529753871967678a06ac9eb79b82f91a4ecd6827976f55/g85-sentry-auth-oidc-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "97e32a7b6c197f367a0460ae6d59c9a4", "sha256": "22d83d0245fd377c4240ef6568f3c0c370111dd0bcced59cfe54e3fb0872ecf5"}, "downloads": -1, "filename": "g85-sentry-auth-oidc-2.0.2.tar.gz", "has_sig": false, "md5_digest": "97e32a7b6c197f367a0460ae6d59c9a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10074, "upload_time": "2019-06-18T14:43:25", "upload_time_iso_8601": "2019-06-18T14:43:25.677588Z", "url": "https://files.pythonhosted.org/packages/33/13/9ca1f739535bedecd34706a7f8abb1f109d07e20d1705def1deae81b5fc4/g85-sentry-auth-oidc-2.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "97e32a7b6c197f367a0460ae6d59c9a4", "sha256": "22d83d0245fd377c4240ef6568f3c0c370111dd0bcced59cfe54e3fb0872ecf5"}, "downloads": -1, "filename": "g85-sentry-auth-oidc-2.0.2.tar.gz", "has_sig": false, "md5_digest": "97e32a7b6c197f367a0460ae6d59c9a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10074, "upload_time": "2019-06-18T14:43:25", "upload_time_iso_8601": "2019-06-18T14:43:25.677588Z", "url": "https://files.pythonhosted.org/packages/33/13/9ca1f739535bedecd34706a7f8abb1f109d07e20d1705def1deae81b5fc4/g85-sentry-auth-oidc-2.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:25 2020"}