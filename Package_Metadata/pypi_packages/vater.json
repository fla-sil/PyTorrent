{"info": {"author": "myslak71", "author_email": "myslak@protonmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Vater\n[![Build Status](https://travis-ci.org/myslak71/vater.svg?branch=master)](https://travis-ci.org/myslak71/vater)\n[![Coverage Status](https://coveralls.io/repos/github/myslak71/vater/badge.svg?branch=master)](https://coveralls.io/github/myslak71/vater?branch=master)\n![PyPI](https://img.shields.io/pypi/v/vater?color=blue)\n[![Documentation Status](https://readthedocs.org/projects/vater/badge/?version=latest)](https://vater.readthedocs.io/en/latest/?badge=latest)\n\nPython client providing convenient way to access polish VAT payers register API (version 1.3.0).\n\n#### Installation\n\n`pip install vater`\n\n#### Usage\n\n##### Scripts\n\n```\n>>> import vater\n>>> client = vater.Client(base_url='https://wl-api.mf.gov.pl')\n>>> client.search_nip(nip='0000000000')\n(\n  Subject(\n    name='Beastie Boys',\n    nip='0000000000',\n    status_vat='Czynny',\n    regon='111111111',\n    pesel=None,\n    krs='0000000000',\n    residence_address=None,\n    working_address='Brooklyn',\n    representatives=[],\n    authorized_clerks=[],\n    partners=[\n      Company(\n        company_name='Mike D',\n        first_name='Michael',\n        last_name='Diamond',\n        nip=None,\n        pesel=None\n      )\n    ],\n    registration_legal_date=datetime.date(2001, 1, 1),\n    registration_denial_basis=None,\n    registration_denial_date=None,\n    restoration_basis=None,\n    restoration_date=None,\n    removal_basis=None,\n    removal_date=None,\n    account_numbers=['00000000000000000000000000'],\n    has_virtual_accounts=False\n  ),\n  'z5x71-85a8gl5'\n)\n```\n\nIf you want to get raw server json just set `raw` to True:\n\n```\n>>> client.search_nip(nip='0000000000', raw=True)\n{\n  'result': {\n    'subject': {\n        'name': 'Eminem',\n        'nip': '0000000000', \n        'statusVat': 'Active', \n        'regon': '777777777', \n        'pesel': '77777777777', \n        'krs': '6969696969', \n        'residenceAddress': '8 mile', \n        'workingAddress': '8 mile', \n        'representatives': [\n            {\n              'companyName': 'Moby Dick Inc',\n              'firstName': 'sir Richard',\n              'lastName': 'Lion Heart',\n              'nip': '0000000000',\n              'pesel': '77777777777'\n            }\n        ],\n        'authorizedClerks': [],\n        'partners': [],\n        'registrationLegalDate': '2001-01-01',\n        'registrationDenialBasis': 'Denial Basis',\n        'registrationDenialDate': '2002-02-02',\n        'restorationBasis': 'Restoration Basis',\n        'restorationDate': '2003-03-03',\n        'removalBasis': 'Removal Basis',\n        'removalDate': '2004-04-04',\n        'accountNumbers': ['00000000000000000000000000'],\n        'hasVirtualAccounts': False\n  },\n  'requestId': 'aa111-aa111aaa',\n  }\n}\n```\n\nBy default the data is fetched from today's date,\nit can be changed by setting `date` argument:\n```\n>>> import datetime\n>>> client.search_nip(nip='0000000000', date=datetime.date(2001, 1, 1))\n```\n\nString may also be passed as a `date`:\n```\n>>> client.search_nip(nip='0000000000', date='2001-01-01')\n```\n\nKeep in mind the API limits maximum number of requested subjects to 30.\n\n##### CLI\n\n| command | \n| --- |\n| `vater search-nip [ACCOUNT]` |\n| `vater search-nip [ACCOUNTS]` |\n| `vater search-nip [NIP]` |\n| `vater search-nips [NIPS]` |\n| `vater search-nips [REGON]` |\n| `vater search-nips [REGONS]` |\n| `vater check-nip [NIP] [ACCOUNT]` |\n| `vater check-regon [REGON] [ACCOUNT]` |\n\nEach command allows to set `--date` parameter formatted as follows `YYYY-MM-DD`.\nDefault value is today's date.\n\n#### Docs\nProject docs may be found here:\nhttps://vater.readthedocs.io", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/myslak71/vater/archive/v0.1.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "vat,client,api", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vater", "package_url": "https://pypi.org/project/vater/", "platform": "", "project_url": "https://pypi.org/project/vater/", "project_urls": {"Download": "https://github.com/myslak71/vater/archive/v0.1.2.tar.gz"}, "release_url": "https://pypi.org/project/vater/0.1.2/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Client for polish VAT payers register API", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Vater</h1>\n<p><a href=\"https://travis-ci.org/myslak71/vater\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8ae950e4bb7c7448333d02a6c27c829a42892d9/68747470733a2f2f7472617669732d63692e6f72672f6d79736c616b37312f76617465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/myslak71/vater?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0038ce67411d8e87650c889ce86a19b6ae82b44f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d79736c616b37312f76617465722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e15728366185a6850ecad02125c5d209f3c17f3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f76617465723f636f6c6f723d626c7565\">\n<a href=\"https://vater.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/95eb293dab9974d65e67f1551a1f4e7b91843eef/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f76617465722f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Python client providing convenient way to access polish VAT payers register API (version 1.3.0).</p>\n<h4>Installation</h4>\n<p><code>pip install vater</code></p>\n<h4>Usage</h4>\n<h5>Scripts</h5>\n<pre><code>&gt;&gt;&gt; import vater\n&gt;&gt;&gt; client = vater.Client(base_url='https://wl-api.mf.gov.pl')\n&gt;&gt;&gt; client.search_nip(nip='0000000000')\n(\n  Subject(\n    name='Beastie Boys',\n    nip='0000000000',\n    status_vat='Czynny',\n    regon='111111111',\n    pesel=None,\n    krs='0000000000',\n    residence_address=None,\n    working_address='Brooklyn',\n    representatives=[],\n    authorized_clerks=[],\n    partners=[\n      Company(\n        company_name='Mike D',\n        first_name='Michael',\n        last_name='Diamond',\n        nip=None,\n        pesel=None\n      )\n    ],\n    registration_legal_date=datetime.date(2001, 1, 1),\n    registration_denial_basis=None,\n    registration_denial_date=None,\n    restoration_basis=None,\n    restoration_date=None,\n    removal_basis=None,\n    removal_date=None,\n    account_numbers=['00000000000000000000000000'],\n    has_virtual_accounts=False\n  ),\n  'z5x71-85a8gl5'\n)\n</code></pre>\n<p>If you want to get raw server json just set <code>raw</code> to True:</p>\n<pre><code>&gt;&gt;&gt; client.search_nip(nip='0000000000', raw=True)\n{\n  'result': {\n    'subject': {\n        'name': 'Eminem',\n        'nip': '0000000000', \n        'statusVat': 'Active', \n        'regon': '777777777', \n        'pesel': '77777777777', \n        'krs': '6969696969', \n        'residenceAddress': '8 mile', \n        'workingAddress': '8 mile', \n        'representatives': [\n            {\n              'companyName': 'Moby Dick Inc',\n              'firstName': 'sir Richard',\n              'lastName': 'Lion Heart',\n              'nip': '0000000000',\n              'pesel': '77777777777'\n            }\n        ],\n        'authorizedClerks': [],\n        'partners': [],\n        'registrationLegalDate': '2001-01-01',\n        'registrationDenialBasis': 'Denial Basis',\n        'registrationDenialDate': '2002-02-02',\n        'restorationBasis': 'Restoration Basis',\n        'restorationDate': '2003-03-03',\n        'removalBasis': 'Removal Basis',\n        'removalDate': '2004-04-04',\n        'accountNumbers': ['00000000000000000000000000'],\n        'hasVirtualAccounts': False\n  },\n  'requestId': 'aa111-aa111aaa',\n  }\n}\n</code></pre>\n<p>By default the data is fetched from today's date,\nit can be changed by setting <code>date</code> argument:</p>\n<pre><code>&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; client.search_nip(nip='0000000000', date=datetime.date(2001, 1, 1))\n</code></pre>\n<p>String may also be passed as a <code>date</code>:</p>\n<pre><code>&gt;&gt;&gt; client.search_nip(nip='0000000000', date='2001-01-01')\n</code></pre>\n<p>Keep in mind the API limits maximum number of requested subjects to 30.</p>\n<h5>CLI</h5>\n<table>\n<thead>\n<tr>\n<th>command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>vater search-nip [ACCOUNT]</code></td>\n</tr>\n<tr>\n<td><code>vater search-nip [ACCOUNTS]</code></td>\n</tr>\n<tr>\n<td><code>vater search-nip [NIP]</code></td>\n</tr>\n<tr>\n<td><code>vater search-nips [NIPS]</code></td>\n</tr>\n<tr>\n<td><code>vater search-nips [REGON]</code></td>\n</tr>\n<tr>\n<td><code>vater search-nips [REGONS]</code></td>\n</tr>\n<tr>\n<td><code>vater check-nip [NIP] [ACCOUNT]</code></td>\n</tr>\n<tr>\n<td><code>vater check-regon [REGON] [ACCOUNT]</code></td>\n</tr></tbody></table>\n<p>Each command allows to set <code>--date</code> parameter formatted as follows <code>YYYY-MM-DD</code>.\nDefault value is today's date.</p>\n<h4>Docs</h4>\n<p>Project docs may be found here:\n<a href=\"https://vater.readthedocs.io\" rel=\"nofollow\">https://vater.readthedocs.io</a></p>\n\n          </div>"}, "last_serial": 6128746, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "16dc07ae6e7157acd6e7635815ad9841", "sha256": "0791b2144b73303a2ce09aeacdc478325b4801e781193d29288190eec09b14f9"}, "downloads": -1, "filename": "vater-0.1.0.tar.gz", "has_sig": false, "md5_digest": "16dc07ae6e7157acd6e7635815ad9841", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 13657, "upload_time": "2019-11-12T10:14:12", "upload_time_iso_8601": "2019-11-12T10:14:12.737555Z", "url": "https://files.pythonhosted.org/packages/f0/fb/a5c543b5df9aa84d83934aa4066deccf25be2db2b989787e5a0e1ce9873d/vater-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ec80c78ae3f0e60152d85ec0f9532b95", "sha256": "6daf44536bc78e222f8020b8edd419ea0364c8d68c387f4ee1f0f768131b6e00"}, "downloads": -1, "filename": "vater-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ec80c78ae3f0e60152d85ec0f9532b95", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14085, "upload_time": "2019-11-12T17:53:56", "upload_time_iso_8601": "2019-11-12T17:53:56.620153Z", "url": "https://files.pythonhosted.org/packages/83/23/aa6c0ebffd620df7eefc9dee44511ce864c6e4703695242d1e78f547cf5d/vater-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a871613a813188f21bc66ccaaad4f7b0", "sha256": "3446e171e4038f5a70788b556146fedafed7dc29c7c7a3b01782bb1b00a21c55"}, "downloads": -1, "filename": "vater-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a871613a813188f21bc66ccaaad4f7b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14146, "upload_time": "2019-11-13T08:55:51", "upload_time_iso_8601": "2019-11-13T08:55:51.550221Z", "url": "https://files.pythonhosted.org/packages/09/2b/0aeddfc1cc62e2dec8a8f93f74128deee125bce5794f1a6fb92923054e91/vater-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a871613a813188f21bc66ccaaad4f7b0", "sha256": "3446e171e4038f5a70788b556146fedafed7dc29c7c7a3b01782bb1b00a21c55"}, "downloads": -1, "filename": "vater-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a871613a813188f21bc66ccaaad4f7b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14146, "upload_time": "2019-11-13T08:55:51", "upload_time_iso_8601": "2019-11-13T08:55:51.550221Z", "url": "https://files.pythonhosted.org/packages/09/2b/0aeddfc1cc62e2dec8a8f93f74128deee125bce5794f1a6fb92923054e91/vater-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:41 2020"}