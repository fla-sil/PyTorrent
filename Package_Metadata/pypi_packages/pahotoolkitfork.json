{"info": {"author": "Arnulfo Solis", "author_email": "arnulfojr94@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Paho's MQTT toolkit\n\nWelcome to Paho's MQTT Toolkit.\n\n## For who? and why?\n\nThis toolkit if for those who have gone through the documentation of the [Paho's MQTT library and its examples](https://www.eclipse.org/paho/clients/python/) and, like me, have felt that the API is somehow off and complicated to onboard applications.\n\nI, personally, like Paho's MQTT library and I don't wish to replace it in anyway. However, I want to write applications that in a way, are familiar to the frameworks I use, e.g., Flask or Sanic.\nAnd therefore, abstracting the underlying implementation by using a solid configuration base with a simplified API.\n\n### What's the base configuration?\n\nThe base configuration of this toolkit uses Paho's event loop implementation by using the `start_loop` and `stop_loop` methods and creating a single entrypoint method that accepts different configuration parameters, `start_async`.\n\n## Simple Usage\n\nFor more examples refer to the examples directory.\n\n\n```python\nimport time\n\nfrom paho.mqtt.client import Client\n\nfrom pahotoolkit import (\n    init,\n    start_async,\n    stop_async,\n    subscribe,\n    json_message,\n)\n\nfrom my_settings import (\n    HOST,\n    PORT,\n    USERNAME,\n    PASSWORD,\n    LOG_CONFIG\n)\n\n\n@subscribe('/temperature')\ndef handle_temperature(mqtt_client: Client, userdata, message):\n    print(f'Got {message}')\n\n\n@subscribe('/my/topic')\n@json_message()  # by default, non-json messages in the topic are ignored\ndef listen_my_topic(payload: dict, *args, **kwargs):\n    # todo: do something with the payload\n    pass\n\n\n@on_connect()\ndef client_connected(mqtt_client: Client, *args, **kwargs):\n    \"\"\"Publish something on_connect.\"\"\"\n    mqtt_client.publish('/clients', 'Paho\\'s MQTT toolkit message!')\n\n\n# log_config => https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig\n# the default MQTT Client uses the default's MQTT Client constructor\n# https://github.com/eclipse/paho.mqtt.python#client-1\ndef main():\n    client: Client = start_async(host=HOST, port=PORT,  # port default to 1883 if not given\n                                 username=USERNAME, password=PASSWORD,  # optional fields\n                                 initialize=False, log_config=LOG_CONFIG)  # optional fields\n\n    init(client)  # only required if initialize=False, else by default is automatically called\n\n    while True:\n        time.sleep(1)  # or do something in this thread...\n\n\nif __name__ == '__main__':\n    try:\n        main()\n    finally:\n        stop_async()\n```\n\n## Contact\n\nArnulfo Solis\n\n* arnulfojr94@gmail.com\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/kiotsystem/paho-toolkit", "keywords": "paho,eclipse,mqtt,toolkit,framework", "license": "", "maintainer": "", "maintainer_email": "", "name": "pahotoolkitfork", "package_url": "https://pypi.org/project/pahotoolkitfork/", "platform": "any", "project_url": "https://pypi.org/project/pahotoolkitfork/", "project_urls": {"Homepage": "https://bitbucket.org/kiotsystem/paho-toolkit"}, "release_url": "https://pypi.org/project/pahotoolkitfork/0.1.4/", "requires_dist": ["paho-mqtt (==1.4.0)"], "requires_python": "", "summary": "Paho's MQTT dev Toolkit", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Paho's MQTT toolkit</h1>\n<p>Welcome to Paho's MQTT Toolkit.</p>\n<h2>For who? and why?</h2>\n<p>This toolkit if for those who have gone through the documentation of the <a href=\"https://www.eclipse.org/paho/clients/python/\" rel=\"nofollow\">Paho's MQTT library and its examples</a> and, like me, have felt that the API is somehow off and complicated to onboard applications.</p>\n<p>I, personally, like Paho's MQTT library and I don't wish to replace it in anyway. However, I want to write applications that in a way, are familiar to the frameworks I use, e.g., Flask or Sanic.\nAnd therefore, abstracting the underlying implementation by using a solid configuration base with a simplified API.</p>\n<h3>What's the base configuration?</h3>\n<p>The base configuration of this toolkit uses Paho's event loop implementation by using the <code>start_loop</code> and <code>stop_loop</code> methods and creating a single entrypoint method that accepts different configuration parameters, <code>start_async</code>.</p>\n<h2>Simple Usage</h2>\n<p>For more examples refer to the examples directory.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">paho.mqtt.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pahotoolkit</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">init</span><span class=\"p\">,</span>\n    <span class=\"n\">start_async</span><span class=\"p\">,</span>\n    <span class=\"n\">stop_async</span><span class=\"p\">,</span>\n    <span class=\"n\">subscribe</span><span class=\"p\">,</span>\n    <span class=\"n\">json_message</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">my_settings</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">HOST</span><span class=\"p\">,</span>\n    <span class=\"n\">PORT</span><span class=\"p\">,</span>\n    <span class=\"n\">USERNAME</span><span class=\"p\">,</span>\n    <span class=\"n\">PASSWORD</span><span class=\"p\">,</span>\n    <span class=\"n\">LOG_CONFIG</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"nd\">@subscribe</span><span class=\"p\">(</span><span class=\"s1\">'/temperature'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">handle_temperature</span><span class=\"p\">(</span><span class=\"n\">mqtt_client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"n\">userdata</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Got </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@subscribe</span><span class=\"p\">(</span><span class=\"s1\">'/my/topic'</span><span class=\"p\">)</span>\n<span class=\"nd\">@json_message</span><span class=\"p\">()</span>  <span class=\"c1\"># by default, non-json messages in the topic are ignored</span>\n<span class=\"k\">def</span> <span class=\"nf\">listen_my_topic</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># todo: do something with the payload</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"nd\">@on_connect</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">client_connected</span><span class=\"p\">(</span><span class=\"n\">mqtt_client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Publish something on_connect.\"\"\"</span>\n    <span class=\"n\">mqtt_client</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"s1\">'/clients'</span><span class=\"p\">,</span> <span class=\"s1\">'Paho</span><span class=\"se\">\\'</span><span class=\"s1\">s MQTT toolkit message!'</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># log_config =&gt; https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig</span>\n<span class=\"c1\"># the default MQTT Client uses the default's MQTT Client constructor</span>\n<span class=\"c1\"># https://github.com/eclipse/paho.mqtt.python#client-1</span>\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">start_async</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">HOST</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">PORT</span><span class=\"p\">,</span>  <span class=\"c1\"># port default to 1883 if not given</span>\n                                 <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">USERNAME</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">PASSWORD</span><span class=\"p\">,</span>  <span class=\"c1\"># optional fields</span>\n                                 <span class=\"n\">initialize</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">log_config</span><span class=\"o\">=</span><span class=\"n\">LOG_CONFIG</span><span class=\"p\">)</span>  <span class=\"c1\"># optional fields</span>\n\n    <span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>  <span class=\"c1\"># only required if initialize=False, else by default is automatically called</span>\n\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># or do something in this thread...</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">main</span><span class=\"p\">()</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"n\">stop_async</span><span class=\"p\">()</span>\n</pre>\n<h2>Contact</h2>\n<p>Arnulfo Solis</p>\n<ul>\n<li><a href=\"mailto:arnulfojr94@gmail.com\">arnulfojr94@gmail.com</a></li>\n</ul>\n\n          </div>"}, "last_serial": 4399154, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "2bface5e77c0d5aef45a59aae308909b", "sha256": "210c00b3736df77ef8038d6a39a9c73bde1b272bb7f76c45a21431eb93601a01"}, "downloads": -1, "filename": "pahotoolkitfork-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2bface5e77c0d5aef45a59aae308909b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11959, "upload_time": "2018-10-21T10:49:33", "upload_time_iso_8601": "2018-10-21T10:49:33.133871Z", "url": "https://files.pythonhosted.org/packages/38/23/3a90396e02d58acd71d8a498ab236e967679739b6dc62afe7489b9f9e751/pahotoolkitfork-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d5349efa11e2476bb48d37d37b3b968", "sha256": "cef244ca29397249353010cef86d064f40a38cd64454e15926c4eee9344b6829"}, "downloads": -1, "filename": "pahotoolkitfork-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1d5349efa11e2476bb48d37d37b3b968", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6325, "upload_time": "2018-10-21T10:49:34", "upload_time_iso_8601": "2018-10-21T10:49:34.637032Z", "url": "https://files.pythonhosted.org/packages/7f/27/a4b16e7a1ebf204f62927314ce88dfbcff806f5787c0e8e1edcccf18e7ad/pahotoolkitfork-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2bface5e77c0d5aef45a59aae308909b", "sha256": "210c00b3736df77ef8038d6a39a9c73bde1b272bb7f76c45a21431eb93601a01"}, "downloads": -1, "filename": "pahotoolkitfork-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2bface5e77c0d5aef45a59aae308909b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11959, "upload_time": "2018-10-21T10:49:33", "upload_time_iso_8601": "2018-10-21T10:49:33.133871Z", "url": "https://files.pythonhosted.org/packages/38/23/3a90396e02d58acd71d8a498ab236e967679739b6dc62afe7489b9f9e751/pahotoolkitfork-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d5349efa11e2476bb48d37d37b3b968", "sha256": "cef244ca29397249353010cef86d064f40a38cd64454e15926c4eee9344b6829"}, "downloads": -1, "filename": "pahotoolkitfork-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1d5349efa11e2476bb48d37d37b3b968", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6325, "upload_time": "2018-10-21T10:49:34", "upload_time_iso_8601": "2018-10-21T10:49:34.637032Z", "url": "https://files.pythonhosted.org/packages/7f/27/a4b16e7a1ebf204f62927314ce88dfbcff806f5787c0e8e1edcccf18e7ad/pahotoolkitfork-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:50 2020"}