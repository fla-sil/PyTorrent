{"info": {"author": "sashgorokhov", "author_email": "sashgorokhov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Plugins", "Framework :: Scrapy", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: System :: Monitoring"], "description": "scrapy_prometheus\n*****************\n\n.. image:: https://img.shields.io/pypi/status/scrapy_prometheus.svg\n    :target: https://github.com/sashgorokhov/scrapy_prometheus\n\n.. image:: https://travis-ci.org/sashgorokhov/scrapy_prometheus.svg?branch=master\n    :target: https://travis-ci.org/sashgorokhov/scrapy_prometheus\n\n.. image:: https://img.shields.io/github/license/sashgorokhov/scrapy_prometheus.svg\n    :target: https://raw.githubusercontent.com/sashgorokhov/scrapy_prometheus/master/LICENSE\n\n.. image:: https://img.shields.io/pypi/pyversions/scrapy_prometheus.svg\n    :target: https://pypi.python.org/pypi/scrapy-prometheus\n\n.. image:: https://badge.fury.io/py/scrapy_prometheus.svg \n    :target: https://badge.fury.io/py/scrapy-prometheus\n\nScrapy stats collector that exports scrapy stats as prometheus metrics through pushgateway service.\n\nInstallation\n============\n\nVia pip:\n\n.. code-block:: console\n\n    pip install scrapy_prometheus\n\n\nUsage\n=====\n\nTo start using, add ``scrapy_prometheus.PrometheusStatsCollector`` to STATS_CLASS setting:\n\n.. code-block:: python\n\n    STATS_CLASS = 'scrapy_prometheus.PrometheusStatsCollector'\n\n\nThis stats collector works exactly like the vanilla one (because it subclasses it), but also\ncreates prometheus metrics and pushes them to pushgateway service on spider close signal.\n\nIt supports two metric types: ``Counter`` and ``Gauge``. Stat metric type is determined by operation used on\nthe stat: ``stats.inc_value`` will create a ``Counter`` metric, while other methods,\n``stats.set_value``, ``stats.max_value``, ``stats.min_value``, will create ``Gauge``.\n\nAll metrics will have a `spider` label attached with spider name.\n\nStat value must be either ``int`` or ``float``.\n\nNote, that trying to perform action on a metric, that is not supposed to be used with this\naction (set_value on Counter or inc_value on Gauge) will produce\n``scrapy_prometheus.InvalidMetricType`` error. To suppress it, set ``PROMETHEUS_SUPPRESS_TYPE_CHECK`` to True.\n\nIf you want to create custom metrics, you can access your spider's CollectorRegistry by using ``stats.get_registry(spider)``.\n\nAvailable settings\n==================\n\n.. code-block:: python\n\n    # Prometheus pushgateway host\n    PROMETHEUS_PUSHGATEWAY = 'localhost:9091'  # default\n\n    # Metric name prefix\n    PROMETHEUS_METRIC_PREFIX = 'scrapy_prometheus'  # default\n    \n    # Timeout for pushing metrics to pushgateway\n    PROMETHEUS_PUSH_TIMEOUT = 5  # default\n    \n    # Method to use when pushing metrics\n    # Read https://github.com/prometheus/pushgateway#put-method\n    PROMETHEUS_PUSH_METHOD = 'POST'  # default\n\n    # Do not raise scrapy_prometheus.InvalidMetricType when stat is accessed as different type metric.\n    # For example, doing stats.inc_value('foo', 1) and then stats.set_value('foo', 2) will raise an error,\n    # Because metric of type Counter was already created for stat foo.\n    PROMETHEUS_SUPPRESS_TYPE_CHECK = False\n\n    # job label value, applied to all metrics.\n    PROMETHEUS_JOB = 'scrapy'  # default\n\n    # grouping label dict, applied to all metrics.\n    # by default it is an instance key with hostname value.\n    PROMETHEUS_GROUPING_KEY = {'instance': <hostname>}\n\n\nHow metrics are created\n=======================\n\nMetric name is build from ``PROMETHEUS_METRIC_PREFIX`` and stat name, where all ``/`` are replaced with ``_``.\n\nFor example:\n\n* stat ``foo: 67`` whill produce metric ``scrapy_prometheus_foo{instance=\"...\",job=\"scrapy\",spider=\"...\"} 67``\n* stat ``foo/bar: 67`` whill produce metric ``scrapy_prometheus_foo_bar{instance=\"...\",job=\"scrapy\",spider=\"...\"} 67``\n* stat ``foo/bar/baz: 67`` whill produce metric ``scrapy_prometheus_foo_bar_baz{instance=\"...\",job=\"scrapy\",spider=\"...\"} 67``", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/sashgorokhov/scrapy_prometheus/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sashgorokhov/scrapy_prometheus", "keywords": "scrapy,prometheus,pushgateway,monitoring", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "scrapy-prometheus", "package_url": "https://pypi.org/project/scrapy-prometheus/", "platform": "", "project_url": "https://pypi.org/project/scrapy-prometheus/", "project_urls": {"Download": "https://github.com/sashgorokhov/scrapy_prometheus/archive/master.zip", "Homepage": "https://github.com/sashgorokhov/scrapy_prometheus"}, "release_url": "https://pypi.org/project/scrapy-prometheus/0.4.4/", "requires_dist": null, "requires_python": "", "summary": "Exporting scrapy stats as prometheus metrics through pushgateway service", "version": "0.4.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/sashgorokhov/scrapy_prometheus\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/status/scrapy_prometheus.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33ca5d207f1bd113e1cd7a25d3c0637ab562699f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f7363726170795f70726f6d6574686575732e737667\"></a>\n<a href=\"https://travis-ci.org/sashgorokhov/scrapy_prometheus\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/sashgorokhov/scrapy_prometheus.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b9be0ecf58077227b63a3231b2ebcab6add9208/68747470733a2f2f7472617669732d63692e6f72672f73617368676f726f6b686f762f7363726170795f70726f6d6574686575732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://raw.githubusercontent.com/sashgorokhov/scrapy_prometheus/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/license/sashgorokhov/scrapy_prometheus.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff8031e909b863d8be872a9d0e77e897a1a149a9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f73617368676f726f6b686f762f7363726170795f70726f6d6574686575732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/scrapy-prometheus\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/scrapy_prometheus.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d8620d40cb87d48043ebe7a3b50faf5df6b105b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7363726170795f70726f6d6574686575732e737667\"></a>\n<a href=\"https://badge.fury.io/py/scrapy-prometheus\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/scrapy_prometheus.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5159b6f5a410606a2e6388bf203968d9fe9aa583/68747470733a2f2f62616467652e667572792e696f2f70792f7363726170795f70726f6d6574686575732e737667\"></a>\n<p>Scrapy stats collector that exports scrapy stats as prometheus metrics through pushgateway service.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Via pip:</p>\n<pre><span class=\"go\">pip install scrapy_prometheus</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To start using, add <tt>scrapy_prometheus.PrometheusStatsCollector</tt> to STATS_CLASS setting:</p>\n<pre><span class=\"n\">STATS_CLASS</span> <span class=\"o\">=</span> <span class=\"s1\">'scrapy_prometheus.PrometheusStatsCollector'</span>\n</pre>\n<p>This stats collector works exactly like the vanilla one (because it subclasses it), but also\ncreates prometheus metrics and pushes them to pushgateway service on spider close signal.</p>\n<p>It supports two metric types: <tt>Counter</tt> and <tt>Gauge</tt>. Stat metric type is determined by operation used on\nthe stat: <tt>stats.inc_value</tt> will create a <tt>Counter</tt> metric, while other methods,\n<tt>stats.set_value</tt>, <tt>stats.max_value</tt>, <tt>stats.min_value</tt>, will create <tt>Gauge</tt>.</p>\n<p>All metrics will have a <cite>spider</cite> label attached with spider name.</p>\n<p>Stat value must be either <tt>int</tt> or <tt>float</tt>.</p>\n<p>Note, that trying to perform action on a metric, that is not supposed to be used with this\naction (set_value on Counter or inc_value on Gauge) will produce\n<tt>scrapy_prometheus.InvalidMetricType</tt> error. To suppress it, set <tt>PROMETHEUS_SUPPRESS_TYPE_CHECK</tt> to True.</p>\n<p>If you want to create custom metrics, you can access your spider\u2019s CollectorRegistry by using <tt>stats.get_registry(spider)</tt>.</p>\n</div>\n<div id=\"available-settings\">\n<h2>Available settings</h2>\n<pre><span class=\"c1\"># Prometheus pushgateway host</span>\n<span class=\"n\">PROMETHEUS_PUSHGATEWAY</span> <span class=\"o\">=</span> <span class=\"s1\">'localhost:9091'</span>  <span class=\"c1\"># default</span>\n\n<span class=\"c1\"># Metric name prefix</span>\n<span class=\"n\">PROMETHEUS_METRIC_PREFIX</span> <span class=\"o\">=</span> <span class=\"s1\">'scrapy_prometheus'</span>  <span class=\"c1\"># default</span>\n\n<span class=\"c1\"># Timeout for pushing metrics to pushgateway</span>\n<span class=\"n\">PROMETHEUS_PUSH_TIMEOUT</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>  <span class=\"c1\"># default</span>\n\n<span class=\"c1\"># Method to use when pushing metrics</span>\n<span class=\"c1\"># Read https://github.com/prometheus/pushgateway#put-method</span>\n<span class=\"n\">PROMETHEUS_PUSH_METHOD</span> <span class=\"o\">=</span> <span class=\"s1\">'POST'</span>  <span class=\"c1\"># default</span>\n\n<span class=\"c1\"># Do not raise scrapy_prometheus.InvalidMetricType when stat is accessed as different type metric.</span>\n<span class=\"c1\"># For example, doing stats.inc_value('foo', 1) and then stats.set_value('foo', 2) will raise an error,</span>\n<span class=\"c1\"># Because metric of type Counter was already created for stat foo.</span>\n<span class=\"n\">PROMETHEUS_SUPPRESS_TYPE_CHECK</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<span class=\"c1\"># job label value, applied to all metrics.</span>\n<span class=\"n\">PROMETHEUS_JOB</span> <span class=\"o\">=</span> <span class=\"s1\">'scrapy'</span>  <span class=\"c1\"># default</span>\n\n<span class=\"c1\"># grouping label dict, applied to all metrics.</span>\n<span class=\"c1\"># by default it is an instance key with hostname value.</span>\n<span class=\"n\">PROMETHEUS_GROUPING_KEY</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'instance'</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">hostname</span><span class=\"o\">&gt;</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"how-metrics-are-created\">\n<h2>How metrics are created</h2>\n<p>Metric name is build from <tt>PROMETHEUS_METRIC_PREFIX</tt> and stat name, where all <tt>/</tt> are replaced with <tt>_</tt>.</p>\n<p>For example:</p>\n<ul>\n<li>stat <tt>foo: 67</tt> whill produce metric <tt><span class=\"pre\">scrapy_prometheus_foo{instance=\"...\",job=\"scrapy\",spider=\"...\"}</span> 67</tt></li>\n<li>stat <tt>foo/bar: 67</tt> whill produce metric <tt><span class=\"pre\">scrapy_prometheus_foo_bar{instance=\"...\",job=\"scrapy\",spider=\"...\"}</span> 67</tt></li>\n<li>stat <tt>foo/bar/baz: 67</tt> whill produce metric <tt><span class=\"pre\">scrapy_prometheus_foo_bar_baz{instance=\"...\",job=\"scrapy\",spider=\"...\"}</span> 67</tt></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3178923, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dedaa6575bd079dc06f86d1f5727f049", "sha256": "3858e1112446d140dca2be4e8f6a34cc8d33570560771aa1ae615b84d8dc3e71"}, "downloads": -1, "filename": "scrapy_prometheus-0.1.tar.gz", "has_sig": false, "md5_digest": "dedaa6575bd079dc06f86d1f5727f049", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2470, "upload_time": "2017-09-12T00:48:22", "upload_time_iso_8601": "2017-09-12T00:48:22.406365Z", "url": "https://files.pythonhosted.org/packages/cb/e2/adef9394dcc0a374d84483a2aaec9b52e9c871deda64fa0cc603ca152da0/scrapy_prometheus-0.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "554361ab2317f34554c5c80650a5c104", "sha256": "d11e2058390e91810486d85ae047252d677563c7bcf4ec5329d2fd0d1d4479b0"}, "downloads": -1, "filename": "scrapy_prometheus-0.3.tar.gz", "has_sig": false, "md5_digest": "554361ab2317f34554c5c80650a5c104", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3476, "upload_time": "2017-09-12T23:32:03", "upload_time_iso_8601": "2017-09-12T23:32:03.830732Z", "url": "https://files.pythonhosted.org/packages/aa/90/2a52351bdb1c14e079983b560ca68c583a145786dca177492534c1df0b5c/scrapy_prometheus-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9ec791888348c240affe95ed1af4feec", "sha256": "2c36f672c772cd4333343321c03a9d7999b32634fbff2a9f73aa2fc9171a54e5"}, "downloads": -1, "filename": "scrapy_prometheus-0.3.1.tar.gz", "has_sig": false, "md5_digest": "9ec791888348c240affe95ed1af4feec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3479, "upload_time": "2017-09-13T10:42:13", "upload_time_iso_8601": "2017-09-13T10:42:13.882362Z", "url": "https://files.pythonhosted.org/packages/82/58/0d24808e9200294b08b4dafaa5cd408b17b780a477617298b4af17ec9d45/scrapy_prometheus-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "df78fadaaab1246d3c57bf71e5685b3a", "sha256": "f38170ea53a59bd2f9399e5f47974a9bc36dae4e7931efebb8a5ca0a12330559"}, "downloads": -1, "filename": "scrapy_prometheus-0.3.2.tar.gz", "has_sig": false, "md5_digest": "df78fadaaab1246d3c57bf71e5685b3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3549, "upload_time": "2017-09-15T16:00:45", "upload_time_iso_8601": "2017-09-15T16:00:45.100223Z", "url": "https://files.pythonhosted.org/packages/8d/2e/7be980ce6d18e2ae657257124d4ea9cdf8e31004b80593067be1a57fc3e6/scrapy_prometheus-0.3.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "a9332982cf7710324a8dd8462abb46b7", "sha256": "664f9791c8a745a0524f42e620e4a1f66c46f3233ff66142f7b8112c5c0f316c"}, "downloads": -1, "filename": "scrapy_prometheus-0.4.tar.gz", "has_sig": false, "md5_digest": "a9332982cf7710324a8dd8462abb46b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3661, "upload_time": "2017-09-15T16:53:45", "upload_time_iso_8601": "2017-09-15T16:53:45.403610Z", "url": "https://files.pythonhosted.org/packages/e7/79/b815c7040b418369dd5adb8ab93dc12620fc8c4653a00bee6404d0d7e769/scrapy_prometheus-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "a420a7dc2ee1de9bf2396e9fcedc6212", "sha256": "23d1f364f2173c3b23f596410b9db56e81589cb8f107217a4a500260b83ff04e"}, "downloads": -1, "filename": "scrapy_prometheus-0.4.1.tar.gz", "has_sig": false, "md5_digest": "a420a7dc2ee1de9bf2396e9fcedc6212", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3672, "upload_time": "2017-09-15T17:44:29", "upload_time_iso_8601": "2017-09-15T17:44:29.551742Z", "url": "https://files.pythonhosted.org/packages/6f/c5/127c6ab888c7fa46beb65a2db2d4fd9ac954bfca88ba2d90081e4a439281/scrapy_prometheus-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "b7a3d208a27599e844a068695a06ae57", "sha256": "ed0adb08be798729c4c23063d99d92e680162c9cfc2db6e3bb80d54718485077"}, "downloads": -1, "filename": "scrapy_prometheus-0.4.2.tar.gz", "has_sig": false, "md5_digest": "b7a3d208a27599e844a068695a06ae57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3687, "upload_time": "2017-09-15T19:06:06", "upload_time_iso_8601": "2017-09-15T19:06:06.813017Z", "url": "https://files.pythonhosted.org/packages/45/9c/64e931345cab6f2659ae1672f9ce737b154a9b957c715224961ebb11fd8a/scrapy_prometheus-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "29460b4e1ef484ec70a0a354cd7da34f", "sha256": "41a5de1e881f308ae35a75cc874c357d9432e5e6135153704f46dd5bd99f5a6f"}, "downloads": -1, "filename": "scrapy_prometheus-0.4.3.tar.gz", "has_sig": false, "md5_digest": "29460b4e1ef484ec70a0a354cd7da34f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3984, "upload_time": "2017-09-15T20:15:38", "upload_time_iso_8601": "2017-09-15T20:15:38.122666Z", "url": "https://files.pythonhosted.org/packages/1d/23/24e8b9f3a0bb3d943965b32e1023b2e15732b36722b18bb2ca1546c8a149/scrapy_prometheus-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "5fd8a51e1f138f482a3ded5710c92430", "sha256": "0c501c33ccfa4483533f18e101b3892ecdb1a2fd851d1af8a6e8e8503d9ba20f"}, "downloads": -1, "filename": "scrapy_prometheus-0.4.4.tar.gz", "has_sig": false, "md5_digest": "5fd8a51e1f138f482a3ded5710c92430", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3996, "upload_time": "2017-09-16T16:19:02", "upload_time_iso_8601": "2017-09-16T16:19:02.418269Z", "url": "https://files.pythonhosted.org/packages/ab/32/f5effba16931631289b76bbcaaaea29a5ac07ced80409cb95e45139d585a/scrapy_prometheus-0.4.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5fd8a51e1f138f482a3ded5710c92430", "sha256": "0c501c33ccfa4483533f18e101b3892ecdb1a2fd851d1af8a6e8e8503d9ba20f"}, "downloads": -1, "filename": "scrapy_prometheus-0.4.4.tar.gz", "has_sig": false, "md5_digest": "5fd8a51e1f138f482a3ded5710c92430", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3996, "upload_time": "2017-09-16T16:19:02", "upload_time_iso_8601": "2017-09-16T16:19:02.418269Z", "url": "https://files.pythonhosted.org/packages/ab/32/f5effba16931631289b76bbcaaaea29a5ac07ced80409cb95e45139d585a/scrapy_prometheus-0.4.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:44 2020"}