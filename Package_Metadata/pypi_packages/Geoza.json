{"info": {"author": "Tanner Baldus", "author_email": "tbaldus285@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "## Intro\nThis a prototype on that plays Songza playlists based on geolocation data.\nRight now it works on forests and us cities. It will then pull data from \naskgeo and coordinates2statistics api to determine what type of forest and us city.\n \n\n\n## Installation\nOn Linux/OSX:\n```\nsudo pip install geoza\n\n```\nOn Windows:\n\n```\npip install geoza\n```\n\n\n## Usage\ngeoza \"<place>\"\"\n\nWhere place can be a place name or a latittude and longitude.\nexample calls:\n\ngeoza \"Eugene Or\"\n\ngeoza \"44.104071, -123.270008\"\n\n\n\n##Notes.\n\nLooks like I'll have to switch data sources as coordinates to statistics is great for getting the land cover (i.e if the area is covered with trees, city, water etc.) but the rainfall seems off, as it's giving the toal yearly rainfall of the amazon rainforest as 45 inches.\n\nI avoided using weather.com api because it only gives the average rainfall one call at a time and\nI wanted to avoid making 12 api calls, but I might have to. Wolfram alpha is also a possibility \nbut it is rather slow.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/geoza/", "keywords": null, "license": "Creative Commons Attribution-Noncommercial-Share Alike license", "maintainer": null, "maintainer_email": null, "name": "Geoza", "package_url": "https://pypi.org/project/Geoza/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Geoza/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/geoza/"}, "release_url": "https://pypi.org/project/Geoza/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "A prototype for playing songza playlists based on geoloction.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            ## Intro<br>This a prototype on that plays Songza playlists based on geolocation data.<br>Right now it works on forests and us cities. It will then pull data from <br>askgeo and coordinates2statistics api to determine what type of forest and us city.<br> <br><br><br>## Installation<br>On Linux/OSX:<br>```<br>sudo pip install geoza<br><br>```<br>On Windows:<br><br>```<br>pip install geoza<br>```<br><br><br>## Usage<br>geoza \"&lt;place&gt;\"\"<br><br>Where place can be a place name or a latittude and longitude.<br>example calls:<br><br>geoza \"Eugene Or\"<br><br>geoza \"44.104071, -123.270008\"<br><br><br><br>##Notes.<br><br>Looks like I'll have to switch data sources as coordinates to statistics is great for getting the land cover (i.e if the area is covered with trees, city, water etc.) but the rainfall seems off, as it's giving the toal yearly rainfall of the amazon rainforest as 45 inches.<br><br>I avoided using weather.com api because it only gives the average rainfall one call at a time and<br>I wanted to avoid making 12 api calls, but I might have to. Wolfram alpha is also a possibility <br>but it is rather slow.\n          </div>"}, "last_serial": 1105256, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "439a7a1052b49dcfc7c2e17743789da2", "sha256": "4b19b070c64e1e06a0246c0043bc2fc67d0689643a725aad47a02e86d7307e32"}, "downloads": -1, "filename": "Geoza-0.0.1.tar.gz", "has_sig": false, "md5_digest": "439a7a1052b49dcfc7c2e17743789da2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4319, "upload_time": "2014-05-27T07:17:31", "upload_time_iso_8601": "2014-05-27T07:17:31.404271Z", "url": "https://files.pythonhosted.org/packages/e0/59/4a31439e6829e86656a8ace24b33b370c57392462ed15c621e1f32bc6739/Geoza-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8c9a27146a0ff7bf04149be3118abc5a", "sha256": "3db1a3822e37f8cdfb5d8a58ed9dd3d8adbd75249f85d946e6566b4b557eeaa9"}, "downloads": -1, "filename": "Geoza-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8c9a27146a0ff7bf04149be3118abc5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4318, "upload_time": "2014-05-27T07:21:30", "upload_time_iso_8601": "2014-05-27T07:21:30.233728Z", "url": "https://files.pythonhosted.org/packages/a5/81/ca5a1433917091e27bd55e14abd74371a9dc1c8f8d4572537d4c84cf2531/Geoza-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "be87ca165d179b5038330ca48a750403", "sha256": "363f2be67d76a98cfee0a7953d781b66706a16d9df5a7153a63b2a4a0f80a9e9"}, "downloads": -1, "filename": "Geoza-0.0.3.tar.gz", "has_sig": false, "md5_digest": "be87ca165d179b5038330ca48a750403", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4318, "upload_time": "2014-05-27T07:22:00", "upload_time_iso_8601": "2014-05-27T07:22:00.348946Z", "url": "https://files.pythonhosted.org/packages/0d/f2/1e95c146bee0b9c7a17baee361b973cb930090eaa5071fc7a36994ae2d72/Geoza-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be87ca165d179b5038330ca48a750403", "sha256": "363f2be67d76a98cfee0a7953d781b66706a16d9df5a7153a63b2a4a0f80a9e9"}, "downloads": -1, "filename": "Geoza-0.0.3.tar.gz", "has_sig": false, "md5_digest": "be87ca165d179b5038330ca48a750403", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4318, "upload_time": "2014-05-27T07:22:00", "upload_time_iso_8601": "2014-05-27T07:22:00.348946Z", "url": "https://files.pythonhosted.org/packages/0d/f2/1e95c146bee0b9c7a17baee361b973cb930090eaa5071fc7a36994ae2d72/Geoza-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:53 2020"}