{"info": {"author": "Nick Timkovich", "author_email": "prometheus235@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "============\nMail Mangler\n============\n\nA simple Django app providing template tags that attempt to obfuscate raw\ne-mail addresses to make them ever so slightly more difficult to scrape.\n\nTo be less-obtrusive, JavaScript is used to translate mangled source into a\nnormal e-mail address. If JavaScript is not present, the reCAPTCHA mailhide\nservice is offered to deobfuscate the addresses.\n\nUsing images, LTR-RTL hacks, or forcing reCAPTCHA access might be better at\nkeeping your address safe from bots, but it's annoying for legitimate users.\nBy using JavaScript, hopefully we can thwart some of the dumbest bots into\nfarming someone else's email address without much of a usability hit.\n\nQuick start\n-----------\n\n1. In your Django's settings:\n\n  * Add ``'mailmangler'`` to your ``INSTALLED_APPS``.\n\n  * Add ``MAILMANGLE_PUBLIC`` and ``MAILMANGLE_SECRET``,\n    with keys from the reCAPTCHA Mailhide API:\n    <http://www.google.com/recaptcha/mailhide/apikey>, e.g. ::\n\n      MAILMANGLE_PUBLIC = 'your-key...=='\n      MAILMANGLE_SECRET = '123789...abcd'\n\n2. Load the tag library with ``{% load mailmangler %}``\n\n3. In the ``<head>`` of your template, add ``{% mailmangle_js %}``\n\n4. Pipe (filter) email addresses through ``mailmangle`` or\n   ``mailmangle_linked``, e.g. ::\n\n    {{ my_email_var|mailmangle }}\n    {{ \"alice@example.com\"|mailmangle }}\n    {{ \"bob@example.net\"|mailmangle_linked }}\n\n   will produce:\n\n   1. A JS obfuscated, unlinked string of whatever ``my_email_var`` was.\n   2. A JS obfuscated, unlinked string of \"alice@example.com\"\n   3. A JS obfuscated, string with mailto link of \"bob@example.com\"\n\n   If JS is not present, a reCAPTCHA mailhide link is available in\n   ``<noscript>`` tags.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nicktimko/django-mailmangler", "keywords": "captcha recaptcha mailhide django", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-mailmangler", "package_url": "https://pypi.org/project/django-mailmangler/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-mailmangler/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/nicktimko/django-mailmangler"}, "release_url": "https://pypi.org/project/django-mailmangler/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Template tags to weakly obfuscate an email behind JavaScript or a CAPTCHA (a reCAPTCHA)", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple Django app providing template tags that attempt to obfuscate raw\ne-mail addresses to make them ever so slightly more difficult to scrape.</p>\n<p>To be less-obtrusive, JavaScript is used to translate mangled source into a\nnormal e-mail address. If JavaScript is not present, the reCAPTCHA mailhide\nservice is offered to deobfuscate the addresses.</p>\n<p>Using images, LTR-RTL hacks, or forcing reCAPTCHA access might be better at\nkeeping your address safe from bots, but it\u2019s annoying for legitimate users.\nBy using JavaScript, hopefully we can thwart some of the dumbest bots into\nfarming someone else\u2019s email address without much of a usability hit.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li>In your Django\u2019s settings:</li>\n</ol>\n<blockquote>\n<ul>\n<li><p>Add <tt>'mailmangler'</tt> to your <tt>INSTALLED_APPS</tt>.</p>\n</li>\n<li><p>Add <tt>MAILMANGLE_PUBLIC</tt> and <tt>MAILMANGLE_SECRET</tt>,\nwith keys from the reCAPTCHA Mailhide API:\n&lt;<a href=\"http://www.google.com/recaptcha/mailhide/apikey\" rel=\"nofollow\">http://www.google.com/recaptcha/mailhide/apikey</a>&gt;, e.g.</p>\n<pre>MAILMANGLE_PUBLIC = 'your-key...=='\nMAILMANGLE_SECRET = '123789...abcd'\n</pre>\n</li>\n</ul>\n</blockquote>\n<ol>\n<li><p>Load the tag library with <tt>{% load mailmangler %}</tt></p>\n</li>\n<li><p>In the <tt>&lt;head&gt;</tt> of your template, add <tt>{% mailmangle_js %}</tt></p>\n</li>\n<li><p>Pipe (filter) email addresses through <tt>mailmangle</tt> or\n<tt>mailmangle_linked</tt>, e.g.</p>\n<pre>{{ my_email_var|mailmangle }}\n{{ \"alice@example.com\"|mailmangle }}\n{{ \"bob@example.net\"|mailmangle_linked }}\n</pre>\n<p>will produce:</p>\n<ol>\n<li>A JS obfuscated, unlinked string of whatever <tt>my_email_var</tt> was.</li>\n<li>A JS obfuscated, unlinked string of \u201c<a href=\"mailto:alice%40example.com\">alice<span>@</span>example<span>.</span>com</a>\u201d</li>\n<li>A JS obfuscated, string with mailto link of \u201c<a href=\"mailto:bob%40example.com\">bob<span>@</span>example<span>.</span>com</a>\u201d</li>\n</ol>\n<p>If JS is not present, a reCAPTCHA mailhide link is available in\n<tt>&lt;noscript&gt;</tt> tags.</p>\n</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 1515159, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7a1191edf170db3567832588904e27e4", "sha256": "de3c56af3f65cad39e8fbc48d3ac7e2562f3945321c8b8f8d56301323e2d0947"}, "downloads": -1, "filename": "django_mailmangler-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7a1191edf170db3567832588904e27e4", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 5007, "upload_time": "2015-04-21T18:36:37", "upload_time_iso_8601": "2015-04-21T18:36:37.139881Z", "url": "https://files.pythonhosted.org/packages/47/bb/b5294ccfa295f3e7080c2d4cfc4a4e0439fbf2acb67346e3dbeb0bb65430/django_mailmangler-0.1.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a1191edf170db3567832588904e27e4", "sha256": "de3c56af3f65cad39e8fbc48d3ac7e2562f3945321c8b8f8d56301323e2d0947"}, "downloads": -1, "filename": "django_mailmangler-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7a1191edf170db3567832588904e27e4", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 5007, "upload_time": "2015-04-21T18:36:37", "upload_time_iso_8601": "2015-04-21T18:36:37.139881Z", "url": "https://files.pythonhosted.org/packages/47/bb/b5294ccfa295f3e7080c2d4cfc4a4e0439fbf2acb67346e3dbeb0bb65430/django_mailmangler-0.1.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:35:13 2020"}