{"info": {"author": "Jes\u00fas Espino, Curtis Malone", "author_email": "jespinog@gmail.com, curtis@tinbrain.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "Django Login over Token\n=======================\n\n.. image:: https://travis-ci.org/jespino/django-lot.png?branch=master\n    :target: https://travis-ci.org/jespino/django-lot\n\n.. image:: https://coveralls.io/repos/jespino/django-lot/badge.png?branch=master\n    :target: https://coveralls.io/r/jespino/django-lot?branch=master\n\n.. image:: https://pypip.in/v/django-lot/badge.png\n    :target: https://crate.io/packages/django-lot\n\n.. image:: https://pypip.in/d/django-lot/badge.png\n    :target: https://crate.io/packages/django-lot\n\nDjango Login over Token easy the creation of token based logins. Can be\none-time-logins, temporary valid logins or permanent logins, always based on\nyour settings.\n\nHow to install\n--------------\n\nYou can also install it with: ``pip install django-lot``\n\n\nConfiguration\n-------------\n\nAdd the lot app to your installed apps and define your settings :code:`LOT`\nvariable as a dictionary and :code:`LOT_MIDDLEWARE_PARAM_NAME` if you use the\nlot middleware.\n\nExample::\n\n  LOT = {\n    'fast-login': {\n        'name': _(u'Fast login'),\n        'duration': 60,\n        'one-time': True,\n    },\n    'slow-login': {\n        'name': _(u'Slow login'),\n        'duration': 60*60*24,\n        'one-time': True,\n    },\n    'always-login': {\n        'name': _(u'Always login'),\n        'one-time': False,\n        'duration': None,\n    },\n    'morning-login': {\n        'name': _(u'Morning login'),\n        'one-time': False,\n        'duration': None,\n        'verify-func': lambda x: datetime.now().hour < 12,\n        'delete-on-fail': False\n    },\n  }\n\n  LOT_MIDDLEWARE_PARAM_NAME = 'uuid-login'\n\nGET key\n-------\n\nAdd the lot authentication backend to the :code:`AUTHENTICATION_BACKENDS`\nsettings variable.\n\nExample::\n\n  AUTHENTICATION_BACKENDS = (\n      \"django.contrib.auth.backends.ModelBackend\",\n      \"lot.auth_backend.LOTBackend\",\n  )\n\n\nHeader Key\n----------\n\nAdd the lot authentication middleware to the :code:`MIDDLEWARE_CLASSES`\nsettings variable.  Ensure it is __after__ Django's AuthenticationMiddleware.\n\nExample::\n\n    MIDDLEWARE_CLASSES = (\n        'django.middleware.common.CommonMiddleware',\n        'django.contrib.sessions.middleware.SessionMiddleware',\n        'django.middleware.csrf.CsrfViewMiddleware',\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        'lot.middleware.LOTAuthenticationMiddleware',\n        'django.contrib.messages.middleware.MessageMiddleware',\n    )\n\nwarning::\n\n   This method should ONLY be used over HTTPS.\n\nUsage\n-----\n\nYou have to create the LOT instances with a user and a type (the uuid and the\ncreated date are auto-generated). Then you can use the lot login view, or the\nthe lot login middleware. You can set the session_data attribute to add data\nto the user session when login with LOT.\n\nIf you use the lot middleware you can login in any url that have the param\ndefined in the :code:`LOT_MIDDLEWARE_PARAM_NAME` and have a valid LOT instance\nrelated to it.\n\nIf you use the view you can add the next param to redirect the user to an url\nafter the login. By default will redirect you to the \"/\" url.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jespino/django-lot", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-lot", "package_url": "https://pypi.org/project/django-lot/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-lot/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jespino/django-lot"}, "release_url": "https://pypi.org/project/django-lot/0.0.6/", "requires_dist": null, "requires_python": null, "summary": "Django Login over Token.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jespino/django-lot\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jespino/django-lot.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae6cbb4063da19dfdd068bd41d65e0a784bc5726/68747470733a2f2f7472617669732d63692e6f72672f6a657370696e6f2f646a616e676f2d6c6f742e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/jespino/django-lot?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/jespino/django-lot/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b5b9c8e8ed3181f961a0f82fa36a09ec4130c81/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6a657370696e6f2f646a616e676f2d6c6f742f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://crate.io/packages/django-lot\" rel=\"nofollow\"><img alt=\"https://pypip.in/v/django-lot/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3c1536d36cd18116077a2860a63e0204e65775c/68747470733a2f2f70797069702e696e2f762f646a616e676f2d6c6f742f62616467652e706e67\"></a>\n<a href=\"https://crate.io/packages/django-lot\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/django-lot/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e161767a3cc5ce0670f36595d533f724d56359d9/68747470733a2f2f70797069702e696e2f642f646a616e676f2d6c6f742f62616467652e706e67\"></a>\n<p>Django Login over Token easy the creation of token based logins. Can be\none-time-logins, temporary valid logins or permanent logins, always based on\nyour settings.</p>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<p>You can also install it with: <tt>pip install <span class=\"pre\">django-lot</span></tt></p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Add the lot app to your installed apps and define your settings <code>LOT</code>\nvariable as a dictionary and <code>LOT_MIDDLEWARE_PARAM_NAME</code> if you use the\nlot middleware.</p>\n<p>Example:</p>\n<pre>LOT = {\n  'fast-login': {\n      'name': _(u'Fast login'),\n      'duration': 60,\n      'one-time': True,\n  },\n  'slow-login': {\n      'name': _(u'Slow login'),\n      'duration': 60*60*24,\n      'one-time': True,\n  },\n  'always-login': {\n      'name': _(u'Always login'),\n      'one-time': False,\n      'duration': None,\n  },\n  'morning-login': {\n      'name': _(u'Morning login'),\n      'one-time': False,\n      'duration': None,\n      'verify-func': lambda x: datetime.now().hour &lt; 12,\n      'delete-on-fail': False\n  },\n}\n\nLOT_MIDDLEWARE_PARAM_NAME = 'uuid-login'\n</pre>\n</div>\n<div id=\"get-key\">\n<h2>GET key</h2>\n<p>Add the lot authentication backend to the <code>AUTHENTICATION_BACKENDS</code>\nsettings variable.</p>\n<p>Example:</p>\n<pre>AUTHENTICATION_BACKENDS = (\n    \"django.contrib.auth.backends.ModelBackend\",\n    \"lot.auth_backend.LOTBackend\",\n)\n</pre>\n</div>\n<div id=\"header-key\">\n<h2>Header Key</h2>\n<p>Add the lot authentication middleware to the <code>MIDDLEWARE_CLASSES</code>\nsettings variable.  Ensure it is __after__ Django\u2019s AuthenticationMiddleware.</p>\n<p>Example:</p>\n<pre>MIDDLEWARE_CLASSES = (\n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'lot.middleware.LOTAuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n)\n</pre>\n<p>warning:</p>\n<pre>This method should ONLY be used over HTTPS.\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You have to create the LOT instances with a user and a type (the uuid and the\ncreated date are auto-generated). Then you can use the lot login view, or the\nthe lot login middleware. You can set the session_data attribute to add data\nto the user session when login with LOT.</p>\n<p>If you use the lot middleware you can login in any url that have the param\ndefined in the <code>LOT_MIDDLEWARE_PARAM_NAME</code> and have a valid LOT instance\nrelated to it.</p>\n<p>If you use the view you can add the next param to redirect the user to an url\nafter the login. By default will redirect you to the \u201c/\u201d url.</p>\n</div>\n\n          </div>"}, "last_serial": 1594044, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "735912f15c75f7a5e72ef664ca5b16c7", "sha256": "9ce416cd2d96516a0f674746aeb8ca8bdbf1eea6b80a44c2207f61f2c991be9e"}, "downloads": -1, "filename": "django-lot-0.0.3.tar.gz", "has_sig": false, "md5_digest": "735912f15c75f7a5e72ef664ca5b16c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4418, "upload_time": "2013-06-09T00:35:44", "upload_time_iso_8601": "2013-06-09T00:35:44.851028Z", "url": "https://files.pythonhosted.org/packages/81/94/2ad09b393f84fbf95000d7d71587f6be6f5b582c9dc613a85a772e995891/django-lot-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "4a5f617ad79ffe16cff0e40398c71ecb", "sha256": "086e0e7aade5e51411846f37118713b6e74095cdb610c4632504b4d5e222dfb4"}, "downloads": -1, "filename": "django-lot-0.0.4.tar.gz", "has_sig": false, "md5_digest": "4a5f617ad79ffe16cff0e40398c71ecb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4584, "upload_time": "2013-07-15T11:07:17", "upload_time_iso_8601": "2013-07-15T11:07:17.974653Z", "url": "https://files.pythonhosted.org/packages/eb/57/80c3a7da26e25d6bbbabdea21f83a122b52c9a0a987bb796f38dbea77908/django-lot-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f128ec4bb3e0d34d7b3254755ddbbd70", "sha256": "352b760ef8997b45cf9860a76643c2fdabdf19b22fd5cb40fe47da669ba98554"}, "downloads": -1, "filename": "django-lot-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f128ec4bb3e0d34d7b3254755ddbbd70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4974, "upload_time": "2014-07-16T08:29:24", "upload_time_iso_8601": "2014-07-16T08:29:24.301022Z", "url": "https://files.pythonhosted.org/packages/b2/45/8643481cd3b02ffa5ee2fe5d1b795f1aa562eef46d400827e57fac7c06f5/django-lot-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "90941f366334576c4d94f75d015a01b0", "sha256": "0640e450cbaa85592c4b77d0d166bbb6520946879f23c9a4adbd14122a2ccc4d"}, "downloads": -1, "filename": "django-lot-0.0.6.tar.gz", "has_sig": false, "md5_digest": "90941f366334576c4d94f75d015a01b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5675, "upload_time": "2015-06-16T09:57:35", "upload_time_iso_8601": "2015-06-16T09:57:35.783824Z", "url": "https://files.pythonhosted.org/packages/c3/03/281109b41f9a510a50b749f75b02aeb0525f004f1d508eea441bd87f61f7/django-lot-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "90941f366334576c4d94f75d015a01b0", "sha256": "0640e450cbaa85592c4b77d0d166bbb6520946879f23c9a4adbd14122a2ccc4d"}, "downloads": -1, "filename": "django-lot-0.0.6.tar.gz", "has_sig": false, "md5_digest": "90941f366334576c4d94f75d015a01b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5675, "upload_time": "2015-06-16T09:57:35", "upload_time_iso_8601": "2015-06-16T09:57:35.783824Z", "url": "https://files.pythonhosted.org/packages/c3/03/281109b41f9a510a50b749f75b02aeb0525f004f1d508eea441bd87f61f7/django-lot-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:15 2020"}