{"info": {"author": "Arrai Innovations", "author_email": "support@arrai.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# transmogrifydict\n\nThe \"map a dict from one API into a dict for another\" python module.\n\n![That dict is so cool...](https://docs.arrai-dev.com/transmogrifydict/transmogrifydict.png)\n\n###### master\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/master.python38.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/master.python38.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python38/)\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/master.python37.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/master.python37.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python37/)\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/master.python36.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/master.python36.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python36/)\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/master.python35.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/master.python35.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python35/)\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/master.python27.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/master.python27.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python27/)\n\n![Flake8](https://docs.arrai-dev.com/transmogrifydict/master.flake8.svg)\n\n###### develop\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/develop.python38.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/develop.python38.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python38/)\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/develop.python37.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/develop.python37.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python37/)\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/develop.python36.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/develop.python36.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python36/)\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/develop.python35.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/develop.python35.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python35/)\n\n![Tests](https://docs.arrai-dev.com/transmogrifydict/develop.python27.svg) [![Coverage](https://docs.arrai-dev.com/transmogrifydict/develop.python27.coverage.svg)](https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python27/)\n\n![Flake8](https://docs.arrai-dev.com/transmogrifydict/develop.flake8.svg)\n\n\n## methods\n\n*   `resolve_mapping_to_dict(mapping, source)` - move values from `source` into a returned dict, using `mapping` for paths and returned keys.\n\n    ```python\n    from transmogrifydict import resolve_mapping_to_dict\n\n    mapping = {\n        'a': 'd',\n        'b': 'e',\n        'c': 'f'\n    }\n\n    source = {\n        'd': 1,\n        'e': 2,\n        'f': 3\n    }\n\n    resolve_mapping_to_dict(mapping, source)\n    # {\n    #     'a': 1,\n    #     'b': 2,\n    #     'c': 3,\n    # }\n    ```\n\n*   `resolve_path_to_value(source, path)` - fetch a value out of `source` using `path` as the pointer to the desired value. see docstring for path string formats.\n\n    ```python\n    from transmogrifydict import resolve_path_to_value\n\n    source = {\n        'd': 1,\n        'e': 2,\n        'f': 3\n    }\n\n    found, value = resolve_path_to_value(source, 'e')\n\n    print((found, value))\n    # (True, 2)\n    ```\n\n## `path` or `mapping` value format\n```python\nfrom transmogrifydict import resolve_path_to_value\n\nsource = {\n    'some-key': {\n        'another-key': '123'\n    }\n}\n\n# dot notation can be used to descend into dictionaries.\nresolve_path_to_value(source, 'some-key.another-key')\n# (True, '123')\n\nsource = {\n    'some-key': '{\"another-key\":\"123\"}'\n}\n\n# dot notation can also be used to descend into json strings that are dictionary like\nresolve_path_to_value(source, 'some-key.another-key')\n# (True, '123')\n\nsource = {\n    'some-key': {\n        'another-key': ['1', '2', '3']\n    }\n}\n\n# square brackets can be used to get specific indexes from a list\nresolve_path_to_value(source, 'some-key.another-key[1]')\n# (True, '2')\n\nsource = {\n    'some-key': {\n        'another-key': [\n            {\n                'filter-key': 'yeah',\n                'each-key': 'a',\n            },\n            {\n                'filter-key': 'yeah',\n                'each-key': 'b',\n            },\n            {\n                'filter-key': 'nah',\n                'each-key': 'c',\n            }\n        ]\n    }\n}\n\n# dot notation can be used after square brackets if the list contains dict-like values\nresolve_path_to_value(source, 'some-key.another-key[1].each-key')\n# (True, ['b']) \n\n# square brackets can be used to iterate over arrays to descend into the items\nresolve_path_to_value(source, 'some-key.another-key[].each-key')\n# (True, ['a', 'b', 'c'])\n\n# when iterating over a list, a filter can be applied using [key=value]\nresolve_path_to_value(source, 'some-key.another-key[filter-key=yeah].each-key')\n# (True, ['a', 'b'])\n\nsource = {\n    'a-key': [\n        {\n            'b-key': {\n                'c-key': 1,\n                'd-key': 2,\n            }\n        },\n        {\n            'b-key': {\n                'c-key': 1,\n                'd-key': 3,\n            }\n        },\n        {\n            'b-key': {\n                'c-key': 0,\n                'd-key': 4,\n            }\n        }\n    ]\n}\n# tidle notation can be used to filter on sub keys of dict list items.\nresolve_path_to_value(source, 'a-key[b-key~c-key=1].b-key.d-key')\n# (True, [2, 3, 4])\n# \n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arrai-innovations/transmogrifydict", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "transmogrifydict", "package_url": "https://pypi.org/project/transmogrifydict/", "platform": "", "project_url": "https://pypi.org/project/transmogrifydict/", "project_urls": {"Homepage": "https://github.com/arrai-innovations/transmogrifydict"}, "release_url": "https://pypi.org/project/transmogrifydict/1.1.3.post1/", "requires_dist": ["six (<2.0.0,>=1.10.0)"], "requires_python": "", "summary": "The \"turn a dict from one API into a dict for another\" python module.", "version": "1.1.3.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>transmogrifydict</h1>\n<p>The \"map a dict from one API into a dict for another\" python module.</p>\n<p><img alt=\"That dict is so cool...\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7da0f54320cd6aaf5b4093dea914e2dcbb1269e3/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f7472616e736d6f6772696679646963742e706e67\"></p>\n<h6>master</h6>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/809d79b196fc98dd330b8d5732c5470eb5f87274/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e33382e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python38/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5286fa2c241f562b2cef18f65403aed4889676de/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e33382e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d35191dbcba37572c68d41c0aaad2eaf64688b00/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e33372e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python37/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac05f5d24fca01754596b867c3b41033c7389657/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e33372e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2cdb57760f9b7ba09d8de2f2246975c8b5b4b65/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e33362e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python36/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c8288e82cfe31f1e463c0362575f9748062f473/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e33362e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/daaf8f7a32433245361a6c429b3ae93dca805849/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e33352e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python35/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d6a6914b9a6df76e3f5e1b5c3562ec801b42e25/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e33352e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/afa33f7ba0662ce9ac239892b7d8644ac81a5a3a/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e32372e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_master_python27/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83df37e6fc87c804d9b35c7cc65a23b624f88844/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e707974686f6e32372e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Flake8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/068ce13b3076d585ca1a685f2786fef8af332584/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f6d61737465722e666c616b65382e737667\"></p>\n<h6>develop</h6>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2254853af54ecf25802ef6269221ce2afb602a7a/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e33382e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python38/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8457ab52ddd45dac969ac6da1695a02e67c8050e/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e33382e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5237a45c0f39604a10173b1d06dc27806c39c8c7/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e33372e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python37/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a841b3f646a690e1f6ab9aa7106cfc23a872428/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e33372e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb815ede6b4cb4aa35a8155652432cb676de6519/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e33362e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python36/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c09e084bc2282527f916a29f478a6f02cd2f00a/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e33362e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69b0e50b64459d2f170b7dfbb0300655f70319eb/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e33352e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python35/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86bc8f6413e7d5d227c2fd8ce7bdb8697acc428f/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e33352e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68ee37929c161387890d0a618b90583e4e5ba6be/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e32372e737667\"> <a href=\"https://docs.arrai-dev.com/transmogrifydict/htmlcov_develop_python27/\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f300d2a6950663c6ba09626a9ba78b45c6b32457/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e707974686f6e32372e636f7665726167652e737667\"></a></p>\n<p><img alt=\"Flake8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67adbdb4d87a48a6e0efae457b3a1b33fce703a3/68747470733a2f2f646f63732e61727261692d6465762e636f6d2f7472616e736d6f6772696679646963742f646576656c6f702e666c616b65382e737667\"></p>\n<h2>methods</h2>\n<ul>\n<li>\n<p><code>resolve_mapping_to_dict(mapping, source)</code> - move values from <code>source</code> into a returned dict, using <code>mapping</code> for paths and returned keys.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">transmogrifydict</span> <span class=\"kn\">import</span> <span class=\"n\">resolve_mapping_to_dict</span>\n\n<span class=\"n\">mapping</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"s1\">'d'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"s1\">'e'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"s1\">'f'</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'d'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'e'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"s1\">'f'</span><span class=\"p\">:</span> <span class=\"mi\">3</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">resolve_mapping_to_dict</span><span class=\"p\">(</span><span class=\"n\">mapping</span><span class=\"p\">,</span> <span class=\"n\">source</span><span class=\"p\">)</span>\n<span class=\"c1\"># {</span>\n<span class=\"c1\">#     'a': 1,</span>\n<span class=\"c1\">#     'b': 2,</span>\n<span class=\"c1\">#     'c': 3,</span>\n<span class=\"c1\"># }</span>\n</pre>\n</li>\n<li>\n<p><code>resolve_path_to_value(source, path)</code> - fetch a value out of <code>source</code> using <code>path</code> as the pointer to the desired value. see docstring for path string formats.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">transmogrifydict</span> <span class=\"kn\">import</span> <span class=\"n\">resolve_path_to_value</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'d'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'e'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"s1\">'f'</span><span class=\"p\">:</span> <span class=\"mi\">3</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">found</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">resolve_path_to_value</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'e'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">((</span><span class=\"n\">found</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">))</span>\n<span class=\"c1\"># (True, 2)</span>\n</pre>\n</li>\n</ul>\n<h2><code>path</code> or <code>mapping</code> value format</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">transmogrifydict</span> <span class=\"kn\">import</span> <span class=\"n\">resolve_path_to_value</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'some-key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'another-key'</span><span class=\"p\">:</span> <span class=\"s1\">'123'</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># dot notation can be used to descend into dictionaries.</span>\n<span class=\"n\">resolve_path_to_value</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'some-key.another-key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># (True, '123')</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'some-key'</span><span class=\"p\">:</span> <span class=\"s1\">'{\"another-key\":\"123\"}'</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># dot notation can also be used to descend into json strings that are dictionary like</span>\n<span class=\"n\">resolve_path_to_value</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'some-key.another-key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># (True, '123')</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'some-key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'another-key'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"s1\">'3'</span><span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># square brackets can be used to get specific indexes from a list</span>\n<span class=\"n\">resolve_path_to_value</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'some-key.another-key[1]'</span><span class=\"p\">)</span>\n<span class=\"c1\"># (True, '2')</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'some-key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'another-key'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'filter-key'</span><span class=\"p\">:</span> <span class=\"s1\">'yeah'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'each-key'</span><span class=\"p\">:</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'filter-key'</span><span class=\"p\">:</span> <span class=\"s1\">'yeah'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'each-key'</span><span class=\"p\">:</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'filter-key'</span><span class=\"p\">:</span> <span class=\"s1\">'nah'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'each-key'</span><span class=\"p\">:</span> <span class=\"s1\">'c'</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># dot notation can be used after square brackets if the list contains dict-like values</span>\n<span class=\"n\">resolve_path_to_value</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'some-key.another-key[1].each-key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># (True, ['b']) </span>\n\n<span class=\"c1\"># square brackets can be used to iterate over arrays to descend into the items</span>\n<span class=\"n\">resolve_path_to_value</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'some-key.another-key[].each-key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># (True, ['a', 'b', 'c'])</span>\n\n<span class=\"c1\"># when iterating over a list, a filter can be applied using [key=value]</span>\n<span class=\"n\">resolve_path_to_value</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'some-key.another-key[filter-key=yeah].each-key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># (True, ['a', 'b'])</span>\n\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'a-key'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'b-key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'c-key'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s1\">'d-key'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'b-key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'c-key'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"s1\">'d-key'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'b-key'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'c-key'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"s1\">'d-key'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n<span class=\"c1\"># tidle notation can be used to filter on sub keys of dict list items.</span>\n<span class=\"n\">resolve_path_to_value</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'a-key[b-key~c-key=1].b-key.d-key'</span><span class=\"p\">)</span>\n<span class=\"c1\"># (True, [2, 3, 4])</span>\n<span class=\"c1\"># </span>\n</pre>\n\n          </div>"}, "last_serial": 6392143, "releases": {"1.1.2": [{"comment_text": "", "digests": {"md5": "0483fec30f192134b4b606baa4a1aedc", "sha256": "8432bf2e4cc9e267e08ed269a66332ad89cfac99c72f7d6a1f56d33b2fb713cd"}, "downloads": -1, "filename": "transmogrifydict-1.1.2.tar.gz", "has_sig": false, "md5_digest": "0483fec30f192134b4b606baa4a1aedc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10482, "upload_time": "2018-05-31T21:32:39", "upload_time_iso_8601": "2018-05-31T21:32:39.799443Z", "url": "https://files.pythonhosted.org/packages/1e/e6/3bbcfdf0f99e99e3b8032c08b7fc269aae1509795749cd4ea1cda842fe00/transmogrifydict-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "dcac761f766d7e6a947cb695d17efa62", "sha256": "a6232dc1dec2ac52fc27cde22e68f21bd037f12bbdeca4b32d899e12308ca639"}, "downloads": -1, "filename": "transmogrifydict-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "dcac761f766d7e6a947cb695d17efa62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6629, "upload_time": "2019-08-02T23:14:52", "upload_time_iso_8601": "2019-08-02T23:14:52.652529Z", "url": "https://files.pythonhosted.org/packages/ed/69/ce3cfa3ca6a34ad37729580b3784c15d73d7ae5811ac5c809e7d454f5145/transmogrifydict-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea5e9ebc54e6a922cabea9b3641e697d", "sha256": "56a48b274c413fc95f2a7523ccae275979bbc71f088c8070c1c897394edea243"}, "downloads": -1, "filename": "transmogrifydict-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ea5e9ebc54e6a922cabea9b3641e697d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11754, "upload_time": "2019-08-02T23:14:54", "upload_time_iso_8601": "2019-08-02T23:14:54.071777Z", "url": "https://files.pythonhosted.org/packages/5f/e2/0f215aff8dbeea78423ff7a21d10c78665685483b56dc9eca4d3f42d7281/transmogrifydict-1.1.3.tar.gz", "yanked": false}], "1.1.3.post1": [{"comment_text": "", "digests": {"md5": "0a98a761283fb9f3166016881ce27a3e", "sha256": "9e624db49b400e2c32e26ad139f9d45d19156e06ffeac17f808453408cc0ea16"}, "downloads": -1, "filename": "transmogrifydict-1.1.3.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "0a98a761283fb9f3166016881ce27a3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6705, "upload_time": "2020-01-03T18:09:01", "upload_time_iso_8601": "2020-01-03T18:09:01.412204Z", "url": "https://files.pythonhosted.org/packages/38/4f/705a865d700e8e1858c8adbabd787cf1f5beb246a8b0d46988a45c8b617f/transmogrifydict-1.1.3.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a2f92ebdea8ea96220bda57c6f387e9", "sha256": "38991572abd66ea7a657917be94751cf32278f5d742b5d2fef3963b34211d05e"}, "downloads": -1, "filename": "transmogrifydict-1.1.3.post1.tar.gz", "has_sig": false, "md5_digest": "7a2f92ebdea8ea96220bda57c6f387e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11808, "upload_time": "2020-01-03T18:09:02", "upload_time_iso_8601": "2020-01-03T18:09:02.996418Z", "url": "https://files.pythonhosted.org/packages/fa/d5/e5bef42bb9378149ad909c070010666a1d2620ac8eae3235e52a99832b5d/transmogrifydict-1.1.3.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a98a761283fb9f3166016881ce27a3e", "sha256": "9e624db49b400e2c32e26ad139f9d45d19156e06ffeac17f808453408cc0ea16"}, "downloads": -1, "filename": "transmogrifydict-1.1.3.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "0a98a761283fb9f3166016881ce27a3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6705, "upload_time": "2020-01-03T18:09:01", "upload_time_iso_8601": "2020-01-03T18:09:01.412204Z", "url": "https://files.pythonhosted.org/packages/38/4f/705a865d700e8e1858c8adbabd787cf1f5beb246a8b0d46988a45c8b617f/transmogrifydict-1.1.3.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a2f92ebdea8ea96220bda57c6f387e9", "sha256": "38991572abd66ea7a657917be94751cf32278f5d742b5d2fef3963b34211d05e"}, "downloads": -1, "filename": "transmogrifydict-1.1.3.post1.tar.gz", "has_sig": false, "md5_digest": "7a2f92ebdea8ea96220bda57c6f387e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11808, "upload_time": "2020-01-03T18:09:02", "upload_time_iso_8601": "2020-01-03T18:09:02.996418Z", "url": "https://files.pythonhosted.org/packages/fa/d5/e5bef42bb9378149ad909c070010666a1d2620ac8eae3235e52a99832b5d/transmogrifydict-1.1.3.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:48:02 2020"}