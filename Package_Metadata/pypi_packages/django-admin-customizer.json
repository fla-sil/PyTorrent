{"info": {"author": "Ionel Cristian M\u0103rie\u0219", "author_email": "contact@ionelmc.ro", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "===============================\n    django-admin-customizer\n===============================\n\nDjango admin customizing interface\n\n\nFeatures\n========\n\n* Multiple admin instances for the same model\n* Customization of:\n\n  * list_display\n  * list_filter\n  * raw_id_fields\n  * search_fields\n\nTODO\n====\n\n* actions configurator\n* base admin class support\n\nRequirements\n============\n\n* Django 1.2, 1.3, 1.4, trunk. Django 1.1 is NOT supported.\n* Python 2.6 or 2.7\n\n|status|_\n\n.. |status| image:: http://travis-ci.org/ionelmc/django-admin-customizer.png\n.. _status: http://travis-ci.org/ionelmc/django-admin-customizer\n\nInstallation guide\n==================\n\nInstall from pypi, with pip::\n\n    pip install django-admin-customizer\n\nOr with setuptools::\n\n    easy_install django-admin-customizer\n\nAdd ``admin_customizer`` to ``INSTALLED_APPS``::\n\n    INSTALLED_APPS += (\"admin_customizer\", )\n\nAdd the admin customizer's urls to your root url conf. This is the url where\nyour will access your custom admin instances. Eg: in your project's urls.py add::\n\n    (r'^admin/_/', include('admin_customizer.urls')),\n\nAfter that you need to run::\n\n    manage.py syncdb\n\nOr if you use south::\n\n    manage.py syncdb --migrate\n\nYou need to update ``admin_customizer``'s models to get it working, initially and\nafter each model change with::\n\n    manage.py refresh_available_fields\n\n**Note:**\n\n    If you delete models the registered admins will be deleted for them.\n\n    If you delete fields from models the registered admins will have them\n    removed after you run refresh_available_fields.\n\n``django-admin-customizer`` has static files for widgets in the edit interface.\nIf you use staticfiles just run::\n\n    manage.py collectstatic\n\nIf you do not use django.contrib.staticfiles you must manually symlink the\nsite-packages/admin_customizer/static/admin_customizer dir to <your media root>/admin_customizer.\n\nMaking extra actions available\n==============================\n\n*TODO*\n\nSettings\n========\n\n``ADMIN_CUSTOMIZER_MAX_FIELD_DEPTH`` - depth to look for relations when\ninspecting models.\n\nMiddleware\n==========\n\nTo enable urlpattern reloading add\n``'admin_customizer.middleware.URLResolverReloadMiddleware'`` to\n``MIDDLEWARE_CLASSES``.\n\n**Warning!**\n\n    You must have working django cache for this to work properly ! See django's\n    `cache documentation\n    <https://docs.djangoproject.com/en/dev/topics/cache/#setting-up-the-cache>`_\n    on this.\n\nIf you do not enable this you will have to restart the webserver after every\nAdminSite or RegisteredModel change !\n\n\nScreenshots\n===========\n\nEdit page:\n\n.. image:: https://github.com/downloads/ionelmc/django-admin-customizer/admin-customizer-registered-model-edit-page.png", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ionelmc/django-admin-customizer", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-admin-customizer", "package_url": "https://pypi.org/project/django-admin-customizer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-admin-customizer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ionelmc/django-admin-customizer"}, "release_url": "https://pypi.org/project/django-admin-customizer/0.2/", "requires_dist": null, "requires_python": null, "summary": "Django admin customizing interface", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django admin customizing interface</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Multiple admin instances for the same model</li>\n<li>Customization of:<ul>\n<li>list_display</li>\n<li>list_filter</li>\n<li>raw_id_fields</li>\n<li>search_fields</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>actions configurator</li>\n<li>base admin class support</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Django 1.2, 1.3, 1.4, trunk. Django 1.1 is NOT supported.</li>\n<li>Python 2.6 or 2.7</li>\n</ul>\n<p><a href=\"http://travis-ci.org/ionelmc/django-admin-customizer\" rel=\"nofollow\"><img alt=\"status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46024fe5cd77da6894d8a0eb187ad02f7dcd51e2/687474703a2f2f7472617669732d63692e6f72672f696f6e656c6d632f646a616e676f2d61646d696e2d637573746f6d697a65722e706e67\"></a></p>\n</div>\n<div id=\"installation-guide\">\n<h2>Installation guide</h2>\n<p>Install from pypi, with pip:</p>\n<pre>pip install django-admin-customizer\n</pre>\n<p>Or with setuptools:</p>\n<pre>easy_install django-admin-customizer\n</pre>\n<p>Add <tt>admin_customizer</tt> to <tt>INSTALLED_APPS</tt>:</p>\n<pre>INSTALLED_APPS += (\"admin_customizer\", )\n</pre>\n<p>Add the admin customizer\u2019s urls to your root url conf. This is the url where\nyour will access your custom admin instances. Eg: in your project\u2019s urls.py add:</p>\n<pre>(r'^admin/_/', include('admin_customizer.urls')),\n</pre>\n<p>After that you need to run:</p>\n<pre>manage.py syncdb\n</pre>\n<p>Or if you use south:</p>\n<pre>manage.py syncdb --migrate\n</pre>\n<p>You need to update <tt>admin_customizer</tt>\u2019s models to get it working, initially and\nafter each model change with:</p>\n<pre>manage.py refresh_available_fields\n</pre>\n<p><strong>Note:</strong></p>\n<blockquote>\n<p>If you delete models the registered admins will be deleted for them.</p>\n<p>If you delete fields from models the registered admins will have them\nremoved after you run refresh_available_fields.</p>\n</blockquote>\n<p><tt><span class=\"pre\">django-admin-customizer</span></tt> has static files for widgets in the edit interface.\nIf you use staticfiles just run:</p>\n<pre>manage.py collectstatic\n</pre>\n<p>If you do not use django.contrib.staticfiles you must manually symlink the\nsite-packages/admin_customizer/static/admin_customizer dir to &lt;your media root&gt;/admin_customizer.</p>\n</div>\n<div id=\"making-extra-actions-available\">\n<h2>Making extra actions available</h2>\n<p><em>TODO</em></p>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p><tt>ADMIN_CUSTOMIZER_MAX_FIELD_DEPTH</tt> - depth to look for relations when\ninspecting models.</p>\n</div>\n<div id=\"middleware\">\n<h2>Middleware</h2>\n<p>To enable urlpattern reloading add\n<tt>'admin_customizer.middleware.URLResolverReloadMiddleware'</tt> to\n<tt>MIDDLEWARE_CLASSES</tt>.</p>\n<p><strong>Warning!</strong></p>\n<blockquote>\nYou must have working django cache for this to work properly ! See django\u2019s\n<a href=\"https://docs.djangoproject.com/en/dev/topics/cache/#setting-up-the-cache\" rel=\"nofollow\">cache documentation</a>\non this.</blockquote>\n<p>If you do not enable this you will have to restart the webserver after every\nAdminSite or RegisteredModel change !</p>\n</div>\n<div id=\"screenshots\">\n<h2>Screenshots</h2>\n<p>Edit page:</p>\n<img alt=\"https://github.com/downloads/ionelmc/django-admin-customizer/admin-customizer-registered-model-edit-page.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59c52d515ffda87e762f29617e3d06f728f095f9/68747470733a2f2f6769746875622e636f6d2f646f776e6c6f6164732f696f6e656c6d632f646a616e676f2d61646d696e2d637573746f6d697a65722f61646d696e2d637573746f6d697a65722d726567697374657265642d6d6f64656c2d656469742d706167652e706e67\">\n</div>\n\n          </div>"}, "last_serial": 789041, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7d3134d578c6e3179d6e191f9bdbb84b", "sha256": "4a30d793d8c55ed4b3f3cc3545c242a17d8e8c701f93b2eb6f17d23022bd2869"}, "downloads": -1, "filename": "django-admin-customizer-0.1.tar.gz", "has_sig": false, "md5_digest": "7d3134d578c6e3179d6e191f9bdbb84b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51694, "upload_time": "2012-04-02T02:50:10", "upload_time_iso_8601": "2012-04-02T02:50:10.740374Z", "url": "https://files.pythonhosted.org/packages/87/f3/67355627712a4b997723973c2510b84c03575d0fcb8e6442fca71fcf9b4a/django-admin-customizer-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "1bcc0bf7c7b0b2f4944f7ce479d87176", "sha256": "d9ac40dc08015482e343554b1703b4a1cb6186237931ba6d21805b642601c1e1"}, "downloads": -1, "filename": "django-admin-customizer-0.2.tar.gz", "has_sig": false, "md5_digest": "1bcc0bf7c7b0b2f4944f7ce479d87176", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52410, "upload_time": "2012-04-04T22:45:12", "upload_time_iso_8601": "2012-04-04T22:45:12.217321Z", "url": "https://files.pythonhosted.org/packages/37/68/50cce5f12025b28f9d6b3cc02075ea22d5395d64841a5e62a65800966a0f/django-admin-customizer-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1bcc0bf7c7b0b2f4944f7ce479d87176", "sha256": "d9ac40dc08015482e343554b1703b4a1cb6186237931ba6d21805b642601c1e1"}, "downloads": -1, "filename": "django-admin-customizer-0.2.tar.gz", "has_sig": false, "md5_digest": "1bcc0bf7c7b0b2f4944f7ce479d87176", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52410, "upload_time": "2012-04-04T22:45:12", "upload_time_iso_8601": "2012-04-04T22:45:12.217321Z", "url": "https://files.pythonhosted.org/packages/37/68/50cce5f12025b28f9d6b3cc02075ea22d5395d64841a5e62a65800966a0f/django-admin-customizer-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:50 2020"}