{"info": {"author": "Philip Cooper", "author_email": "philip.cooper@openvest.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "RDFAlchemy is an abstraction layer, allowing python\ndevelopers to use familiar *dot notation* to access and update an rdf triplestore.\n    \n      * RDFAlchemy is an **ORM** (Object Rdf Mapper) for graph data as:\n      * SQLAlchemy is an **ORM** (Object Relational Mapper) for relalational databases\n      \nAllows access to:\n    \n      * rdflib_ datastores\n      * Sesame_ Repositories\n      * SPARQL_ endpoints\n  \nProvides intuitive access to RDF values by accessing predicate values \nthrough dot notation. ::    \n\n\n  ov = Namespace('http://owl.openvest.org/2005/10/Portfolio#')\n  \n  class Company(rdfSubject):\n    rdf_type = ov.Company\n    symbol = rdfSingle(ov.symbol,'symbol')  #second param is optional\n    cik = rdfSingle(ov.secCik)\n    companyName = rdfSingle(ov.companyName)\n  \n  c = Company.get_by(symbol = 'IBM')\n  print \"%s has an SEC symbol of %s\" % (c.companyName, c.cik)\n\nIncludes advanced descriptors for read/write access to lists and collections.\n      \n.. _rdflib: http://rdflib.net\n.. _Sesame: http://www.openrdf.org\n.. _SPARQL: http://www.w3.org/TR/rdf-sparql-query/", "description_content_type": null, "docs_url": null, "download_url": "http://www.openvest.com/public/downloads/RDFAlchemy-0.2.9.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.openvest.com/trac/wiki/RDFAlchemy", "keywords": "RDF SPARQL", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "RDFAlchemy", "package_url": "https://pypi.org/project/RDFAlchemy/", "platform": "any", "project_url": "https://pypi.org/project/RDFAlchemy/", "project_urls": {"Download": "http://www.openvest.com/public/downloads/RDFAlchemy-0.2.9.tar.gz", "Homepage": "http://www.openvest.com/trac/wiki/RDFAlchemy"}, "release_url": "https://pypi.org/project/RDFAlchemy/0.2.9/", "requires_dist": null, "requires_python": null, "summary": "rdflib wrapper", "version": "0.2.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>RDFAlchemy is an abstraction layer, allowing python\ndevelopers to use familiar <em>dot notation</em> to access and update an rdf triplestore.</p>\n<blockquote>\n<ul>\n<li>RDFAlchemy is an <strong>ORM</strong> (Object Rdf Mapper) for graph data as:</li>\n<li>SQLAlchemy is an <strong>ORM</strong> (Object Relational Mapper) for relalational databases</li>\n</ul>\n</blockquote>\n<p>Allows access to:</p>\n<blockquote>\n<ul>\n<li><a href=\"http://rdflib.net\" rel=\"nofollow\">rdflib</a> datastores</li>\n<li><a href=\"http://www.openrdf.org\" rel=\"nofollow\">Sesame</a> Repositories</li>\n<li><a href=\"http://www.w3.org/TR/rdf-sparql-query/\" rel=\"nofollow\">SPARQL</a> endpoints</li>\n</ul>\n</blockquote>\n<p>Provides intuitive access to RDF values by accessing predicate values\nthrough dot notation.</p>\n<pre>ov = Namespace('http://owl.openvest.org/2005/10/Portfolio#')\n\nclass Company(rdfSubject):\n  rdf_type = ov.Company\n  symbol = rdfSingle(ov.symbol,'symbol')  #second param is optional\n  cik = rdfSingle(ov.secCik)\n  companyName = rdfSingle(ov.companyName)\n\nc = Company.get_by(symbol = 'IBM')\nprint \"%s has an SEC symbol of %s\" % (c.companyName, c.cik)\n</pre>\n<p>Includes advanced descriptors for read/write access to lists and collections.</p>\n\n          </div>"}, "last_serial": 802664, "releases": {"0.2.9": [], "0.2b1": [], "0.2b2dev-r106": []}, "urls": [], "timestamp": "Fri May  8 03:06:39 2020"}