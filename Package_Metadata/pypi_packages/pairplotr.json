{"info": {"author": "Christopher Shymansky", "author_email": "CMShymansky@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: Apache Software License", "Topic :: Utilities"], "description": "<img src=\"https://github.com/JaggedParadigm/pairplotr/blob/master/pairplot_demo.png\" width=\"500\" />\n\n# How\n## Installation\nUse:\n\npip install pairplotr\n\n## Use\nSee the [demo](https://nbviewer.jupyter.org/github/JaggedParadigm/pairplotr/blob/master/pairplotr_demo.ipynb) for use of pairplotr.\n\n# What\nPairplotr is a Python library used to graph combinations of numerical and categorical data in a pair plot,\nsimilar to Seaborn's pairplot(), given a cleaned Pandas dataframe with a mixture of categorical and numerical\nvalues.\n\nHere are the formats for Row feature|Column feature combinations in either on- or off-diagonal cells: \n\n- On-diagonal:        \n  - Categorical|Categorical:\n    - Value counts of feature values ordered by ascending value count and colored by feature values\n  - Numerical|Numerical:\n    - Histogram of feature w/ no coloring (or by desired label)\n- Off-diagonal:\n  - Categorical|Categorical:\n    - Stacked value count of row feature values colored by column feature values\n  - Categorical|Numerical:\n    - Histograms of column feature for each row feature value colored by row feature value\n  - Numerical|Numerical:\n    - Scatter plot of row feature values vs column feature values w/ no coloring (or by desired label)\n\n# Why\nThe available tools I've found don't seem to be able to combine numerical and categorical feature data\nin a quick and easy way and I wanted to customize the comparisons as the plot types I find most useful.\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://packages.python.org/pairplotr", "keywords": "scikit-learn pandas data visualization pairplot", "license": "OSI Approved :: Apache Software License", "maintainer": "", "maintainer_email": "", "name": "pairplotr", "package_url": "https://pypi.org/project/pairplotr/", "platform": "", "project_url": "https://pypi.org/project/pairplotr/", "project_urls": {"Homepage": "http://packages.python.org/pairplotr"}, "release_url": "https://pypi.org/project/pairplotr/1.3/", "requires_dist": ["matplotlib", "numpy", "pandas", "seaborn"], "requires_python": "", "summary": "Pairplotr is a Python library used to graph combinations of numerical and categorical data in a pair plot", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            &lt;img src=\"https://github.com/JaggedParadigm/pairplotr/blob/master/pairplot_demo.png\" width=\"500\" /&gt;<br><br># How<br>## Installation<br>Use:<br><br>pip install pairplotr<br><br>## Use<br>See the [demo](https://nbviewer.jupyter.org/github/JaggedParadigm/pairplotr/blob/master/pairplotr_demo.ipynb) for use of pairplotr.<br><br># What<br>Pairplotr is a Python library used to graph combinations of numerical and categorical data in a pair plot,<br>similar to Seaborn's pairplot(), given a cleaned Pandas dataframe with a mixture of categorical and numerical<br>values.<br><br>Here are the formats for Row feature|Column feature combinations in either on- or off-diagonal cells: <br><br>- On-diagonal:        <br>  - Categorical|Categorical:<br>    - Value counts of feature values ordered by ascending value count and colored by feature values<br>  - Numerical|Numerical:<br>    - Histogram of feature w/ no coloring (or by desired label)<br>- Off-diagonal:<br>  - Categorical|Categorical:<br>    - Stacked value count of row feature values colored by column feature values<br>  - Categorical|Numerical:<br>    - Histograms of column feature for each row feature value colored by row feature value<br>  - Numerical|Numerical:<br>    - Scatter plot of row feature values vs column feature values w/ no coloring (or by desired label)<br><br># Why<br>The available tools I've found don't seem to be able to combine numerical and categorical feature data<br>in a quick and easy way and I wanted to customize the comparisons as the plot types I find most useful.<br><br>\n          </div>"}, "last_serial": 3525095, "releases": {"1.2.3": [{"comment_text": "", "digests": {"md5": "18462c0d438d133a1ce4d8ca754ad035", "sha256": "3933d4ac8d6b8cf678f5859038d07f02f0b3794de9af653093a9bbb45157dad6"}, "downloads": -1, "filename": "pairplotr-1.2.3-py2-none-any.whl", "has_sig": false, "md5_digest": "18462c0d438d133a1ce4d8ca754ad035", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11773, "upload_time": "2017-07-13T03:29:36", "upload_time_iso_8601": "2017-07-13T03:29:36.470482Z", "url": "https://files.pythonhosted.org/packages/f2/23/38a8ecc7723e63aea879fb73a03aa3484db07b357c0c68c0e9f786b7b904/pairplotr-1.2.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec5e05e81f50c340a1b400785aa4eb07", "sha256": "fe98cfd0d6a808b081668a2ffddf87a6c6b457d02f395b45e6f5a88f205fa652"}, "downloads": -1, "filename": "pairplotr-1.2.3.tar.gz", "has_sig": false, "md5_digest": "ec5e05e81f50c340a1b400785aa4eb07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9705, "upload_time": "2017-07-13T03:29:41", "upload_time_iso_8601": "2017-07-13T03:29:41.259186Z", "url": "https://files.pythonhosted.org/packages/2b/5f/44ef9c4689a24b825ec9349c977dec6d3a003ba766ef99cd96d25b332143/pairplotr-1.2.3.tar.gz", "yanked": false}], "1.2.3.1": [{"comment_text": "", "digests": {"md5": "595f6254952e5ef0b6e60608e8c9bbe1", "sha256": "dea1a98786ab9155222f2d8e128dc5fe2c3f75820abc34988536cb6465d83c86"}, "downloads": -1, "filename": "pairplotr-1.2.3.1-py2-none-any.whl", "has_sig": false, "md5_digest": "595f6254952e5ef0b6e60608e8c9bbe1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11791, "upload_time": "2017-07-13T03:29:38", "upload_time_iso_8601": "2017-07-13T03:29:38.739757Z", "url": "https://files.pythonhosted.org/packages/6b/95/d4b49bd547f34e50cec22969a70a6800e1c62382e398a5c7cd557138e408/pairplotr-1.2.3.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fad5f01f25eb0cfca967532275ddde51", "sha256": "769c060b42704efb6484fd407191a9280598356ef5b519a1cdced0454531acd2"}, "downloads": -1, "filename": "pairplotr-1.2.3.1.tar.gz", "has_sig": false, "md5_digest": "fad5f01f25eb0cfca967532275ddde51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9720, "upload_time": "2017-07-13T03:29:39", "upload_time_iso_8601": "2017-07-13T03:29:39.815703Z", "url": "https://files.pythonhosted.org/packages/78/aa/689e90da00c72f1cd090138f9f10028e38a86ac8828ac5c6e872186ff588/pairplotr-1.2.3.1.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "be9e12ad5795d3617316f7e217ad3d78", "sha256": "6cb89c310b3910a194372bb9feda438c1e31c05e6870cfa08c2790e72c7ce212"}, "downloads": -1, "filename": "pairplotr-1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "be9e12ad5795d3617316f7e217ad3d78", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25132, "upload_time": "2018-01-26T19:40:27", "upload_time_iso_8601": "2018-01-26T19:40:27.018086Z", "url": "https://files.pythonhosted.org/packages/2c/8c/2174336471de8c946afa29c89e3973123015bae3f79326b3017867b1e406/pairplotr-1.3-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be9e12ad5795d3617316f7e217ad3d78", "sha256": "6cb89c310b3910a194372bb9feda438c1e31c05e6870cfa08c2790e72c7ce212"}, "downloads": -1, "filename": "pairplotr-1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "be9e12ad5795d3617316f7e217ad3d78", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25132, "upload_time": "2018-01-26T19:40:27", "upload_time_iso_8601": "2018-01-26T19:40:27.018086Z", "url": "https://files.pythonhosted.org/packages/2c/8c/2174336471de8c946afa29c89e3973123015bae3f79326b3017867b1e406/pairplotr-1.3-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:47 2020"}