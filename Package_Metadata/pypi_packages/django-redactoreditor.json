{"info": {"author": "James Stevenson", "author_email": "james.m.stevenson at gmail dot com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "Django-Redactor-Editor\n========================\n\n\nThis package helps integrate the `Redactor <http://redactorjs.com/>`_ Javascript WYSIWYG-editor in Django.\n\nInstallation\n----------------\n\n#. Pip install: ``pip install django-redactoreditor`` (or add the ``redactor`` directory to your Python path)\n#. Add the ``redactor`` application to your `INSTALLED_APPS <https://docs.djangoproject.com/en/1.4/ref/settings/#installed-apps>`_ setting.\n\nUsage\n----------------\n\nThe redactor app provides a Django widget called ``RedactorEditor``. It is a drop-in replacement for any ``TextArea`` widget. Example usage::\n\n    from django import forms\n    from django.db import models\n\n    from redactor.widgets import RedactorEditor\n\n    class MyForm(forms.Form):\n        about_me = forms.CharField(widget=RedactorEditor())\n\n\nYou can also customize any of the Redactor editor's `settings <http://imperavi.com/redactor/docs/settings/>`_ when instantiating the widget::\n\n    class MyForm(forms.Form):\n\n        about_me = forms.CharField(widget=RedactorEditor(redactor_settings={\n            'autoformat': True,\n            'overlay': False\n        }))\n\n\nDjango-redactor also includes a widget with some some customizations that make it function and look better in the Django admin::\n\n    class MyAdmin(admin.ModelAdmin):\n        formfield_overrides = {\n                models.TextField: {'widget': AdminRedactorEditor},\n        }\n\nFinally, you can connect a custom CSS file to the editable area of the editor::\n\n    class MyForm(forms.Form):\n        about_me = forms.CharField(widget=RedactorEditor(\n            redactor_css=\"styles/text.css\")\n        )\n\nPaths used to specify CSS can be either relative or absolute. If a path starts with '/', 'http://' or 'https://', it will be interpreted as an absolute path, and left as-is. All other paths will be prepended with the value of the ``STATIC_URL`` setting (or ``MEDIA_URL`` if static is not defined).\n\nFor the sake of convenience, there is also a form field that can be used that accepts the same inputs. This field can be used anywhere ``forms.CharField`` can and accepts the same arguments, but always renders a Redactor widget::\n\n    from redactor.fields import RedactorField\n\n    class MyForm(forms.Form):\n        about_me = RedactorField(\n            in_admin=True,\n            redactor_css=\"styles/text.css\",\n            redactor_settings={'overlay': True}\n        )\n\njQuery\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe redactor javascript library requires jQuery 1.9 or better to function. By default, jQuery is included as part of the field and widget media. However, this can cause issues where other widgets or forms on a page are using a *different* version of jQuery. It is possible to exclude jQuery from the media of the redactor field and wdiget if you wish to handle JavaScript dependency management yourself::\n\n    class MyForm(forms.Form):\n        about_me = RedactorField(include_jquery=False)\n\n\nTemplating\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you are using a redactor widget outside the admin, you'll need to be sure that you render `the form's media <https://docs.djangoproject.com/en/dev/topics/forms/media/#media-on-forms>`_. Redactor widgets need to include some CSS and JavaScript to work properly::\n\n    <form>\n        {{ myform.media }}\n        {{ myform.as_p }}\n        <input type=\"submit\"/>\n    </form>\n\nInternationalization\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf you wish to use Redactor in other languages, you only need to specify the ``lang`` setting. The correct javascript language files will be loaded automatically::\n\n    class MyForm(forms.Form):\n\n        about_me = forms.CharField(widget=RedactorEditor(redactor_settings={\n            'autoformat': True,\n            'lang': 'es',\n            'overlay': False\n        }))\n\n\nDjango-Redactor is licensed under a `Creative Commons Attribution-NonCommercial 3.0 <http://creativecommons.org/licenses/by-nc/3.0/>`_ license. However, the noncommercial restrictions of the license (e.g., Section 4(b)) are waived for any user who purchases a\nlegitimate commercial license to the redactor.js library. Open source users are still under the noncommercial clause, but legitimate Imperavi license holders are not.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mazelife/django-redactoreditor", "keywords": null, "license": "CC licence, see LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "django-redactoreditor", "package_url": "https://pypi.org/project/django-redactoreditor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-redactoreditor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mazelife/django-redactoreditor"}, "release_url": "https://pypi.org/project/django-redactoreditor/1.2.10/", "requires_dist": null, "requires_python": null, "summary": "Integrates the Redactor Javascript WYSIWYG editor with Django.", "version": "1.2.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package helps integrate the <a href=\"http://redactorjs.com/\" rel=\"nofollow\">Redactor</a> Javascript WYSIWYG-editor in Django.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>Pip install: <tt>pip install <span class=\"pre\">django-redactoreditor</span></tt> (or add the <tt>redactor</tt> directory to your Python path)</li>\n<li>Add the <tt>redactor</tt> application to your <a href=\"https://docs.djangoproject.com/en/1.4/ref/settings/#installed-apps\" rel=\"nofollow\">INSTALLED_APPS</a> setting.</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The redactor app provides a Django widget called <tt>RedactorEditor</tt>. It is a drop-in replacement for any <tt>TextArea</tt> widget. Example usage:</p>\n<pre>from django import forms\nfrom django.db import models\n\nfrom redactor.widgets import RedactorEditor\n\nclass MyForm(forms.Form):\n    about_me = forms.CharField(widget=RedactorEditor())\n</pre>\n<p>You can also customize any of the Redactor editor\u2019s <a href=\"http://imperavi.com/redactor/docs/settings/\" rel=\"nofollow\">settings</a> when instantiating the widget:</p>\n<pre>class MyForm(forms.Form):\n\n    about_me = forms.CharField(widget=RedactorEditor(redactor_settings={\n        'autoformat': True,\n        'overlay': False\n    }))\n</pre>\n<p>Django-redactor also includes a widget with some some customizations that make it function and look better in the Django admin:</p>\n<pre>class MyAdmin(admin.ModelAdmin):\n    formfield_overrides = {\n            models.TextField: {'widget': AdminRedactorEditor},\n    }\n</pre>\n<p>Finally, you can connect a custom CSS file to the editable area of the editor:</p>\n<pre>class MyForm(forms.Form):\n    about_me = forms.CharField(widget=RedactorEditor(\n        redactor_css=\"styles/text.css\")\n    )\n</pre>\n<p>Paths used to specify CSS can be either relative or absolute. If a path starts with \u2018/\u2019, \u2018<a href=\"http://\" rel=\"nofollow\">http://</a>\u2019 or \u2018<a href=\"https://\" rel=\"nofollow\">https://</a>\u2019, it will be interpreted as an absolute path, and left as-is. All other paths will be prepended with the value of the <tt>STATIC_URL</tt> setting (or <tt>MEDIA_URL</tt> if static is not defined).</p>\n<p>For the sake of convenience, there is also a form field that can be used that accepts the same inputs. This field can be used anywhere <tt>forms.CharField</tt> can and accepts the same arguments, but always renders a Redactor widget:</p>\n<pre>from redactor.fields import RedactorField\n\nclass MyForm(forms.Form):\n    about_me = RedactorField(\n        in_admin=True,\n        redactor_css=\"styles/text.css\",\n        redactor_settings={'overlay': True}\n    )\n</pre>\n<div id=\"jquery\">\n<h3>jQuery</h3>\n<p>The redactor javascript library requires jQuery 1.9 or better to function. By default, jQuery is included as part of the field and widget media. However, this can cause issues where other widgets or forms on a page are using a <em>different</em> version of jQuery. It is possible to exclude jQuery from the media of the redactor field and wdiget if you wish to handle JavaScript dependency management yourself:</p>\n<pre>class MyForm(forms.Form):\n    about_me = RedactorField(include_jquery=False)\n</pre>\n</div>\n<div id=\"templating\">\n<h3>Templating</h3>\n<p>If you are using a redactor widget outside the admin, you\u2019ll need to be sure that you render <a href=\"https://docs.djangoproject.com/en/dev/topics/forms/media/#media-on-forms\" rel=\"nofollow\">the form\u2019s media</a>. Redactor widgets need to include some CSS and JavaScript to work properly:</p>\n<pre>&lt;form&gt;\n    {{ myform.media }}\n    {{ myform.as_p }}\n    &lt;input type=\"submit\"/&gt;\n&lt;/form&gt;\n</pre>\n</div>\n<div id=\"internationalization\">\n<h3>Internationalization</h3>\n<p>If you wish to use Redactor in other languages, you only need to specify the <tt>lang</tt> setting. The correct javascript language files will be loaded automatically:</p>\n<pre>class MyForm(forms.Form):\n\n    about_me = forms.CharField(widget=RedactorEditor(redactor_settings={\n        'autoformat': True,\n        'lang': 'es',\n        'overlay': False\n    }))\n</pre>\n<p>Django-Redactor is licensed under a <a href=\"http://creativecommons.org/licenses/by-nc/3.0/\" rel=\"nofollow\">Creative Commons Attribution-NonCommercial 3.0</a> license. However, the noncommercial restrictions of the license (e.g., Section 4(b)) are waived for any user who purchases a\nlegitimate commercial license to the redactor.js library. Open source users are still under the noncommercial clause, but legitimate Imperavi license holders are not.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1160063, "releases": {"1.2.10": [{"comment_text": "", "digests": {"md5": "2bab8d61b26ede6b908a27614f3160f1", "sha256": "704544432e3f079be7970b01613cbf359daf908d87f0dc683148bcb485a7f40e"}, "downloads": -1, "filename": "django-redactoreditor-1.2.10.tar.gz", "has_sig": false, "md5_digest": "2bab8d61b26ede6b908a27614f3160f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210610, "upload_time": "2014-07-16T19:46:09", "upload_time_iso_8601": "2014-07-16T19:46:09.786433Z", "url": "https://files.pythonhosted.org/packages/65/be/1607b1e425045f65776c226c3dae7d9a91af94f8d921a3e1b74267ec736f/django-redactoreditor-1.2.10.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "04770855814082c8427d726b76a19d76", "sha256": "111933c1998132d42ccdbc398486ddfa85ef86a3ef147e79976a5c4ab9efcb43"}, "downloads": -1, "filename": "django-redactoreditor-1.2.6.macosx-10.8-x86_64.exe", "has_sig": false, "md5_digest": "04770855814082c8427d726b76a19d76", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 73170, "upload_time": "2014-04-24T21:02:04", "upload_time_iso_8601": "2014-04-24T21:02:04.307042Z", "url": "https://files.pythonhosted.org/packages/4e/dc/1bd5ccada31d62107aac4bb660b5872a48b8a21eeab319965ebc34ae4ec0/django-redactoreditor-1.2.6.macosx-10.8-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f6ac5d0b20d685ebfee62e0c0e737bf", "sha256": "b8a7cb4b6a67c30aef52e8d1a158cdf09b97ea7ea3a6448125b3ccfa2cf02e34"}, "downloads": -1, "filename": "django-redactoreditor-1.2.6.tar.gz", "has_sig": false, "md5_digest": "6f6ac5d0b20d685ebfee62e0c0e737bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208260, "upload_time": "2014-04-24T21:02:01", "upload_time_iso_8601": "2014-04-24T21:02:01.034462Z", "url": "https://files.pythonhosted.org/packages/ed/ef/e92e4be9558f1cea4ba03f38c938781d33e5f26bac158cfe325f4ede96f7/django-redactoreditor-1.2.6.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "b33fbe320e001efe2358aec8a99184f6", "sha256": "094e22f6119e9a40a9a41e93089e6d9f8ea5c620c35b0d12784605cce16d42e7"}, "downloads": -1, "filename": "django-redactoreditor-1.2.7.tar.gz", "has_sig": false, "md5_digest": "b33fbe320e001efe2358aec8a99184f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208920, "upload_time": "2014-06-10T16:45:06", "upload_time_iso_8601": "2014-06-10T16:45:06.292272Z", "url": "https://files.pythonhosted.org/packages/d6/aa/e45d48b59e258a235d3e23330176867801e72c75e867236344a7e3984636/django-redactoreditor-1.2.7.tar.gz", "yanked": false}], "1.2.8": [{"comment_text": "", "digests": {"md5": "a60613efc7f4ff508d98ea382f7a84d5", "sha256": "1ce96662ade90bd48d070bca92a6182ce9544b59b68eedb630f41bdd0713432c"}, "downloads": -1, "filename": "django-redactoreditor-1.2.8.tar.gz", "has_sig": false, "md5_digest": "a60613efc7f4ff508d98ea382f7a84d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208944, "upload_time": "2014-07-13T16:56:06", "upload_time_iso_8601": "2014-07-13T16:56:06.859244Z", "url": "https://files.pythonhosted.org/packages/3a/bf/f22b68cd6c66dcc89a2277d37eea5dc1b24f637442f341827178b4eebda7/django-redactoreditor-1.2.8.tar.gz", "yanked": false}], "1.2.9": [{"comment_text": "", "digests": {"md5": "80af34619e8080a1005ca04dd159fd0f", "sha256": "e8462ac9a8c6ac84a59dbe5fbf1ca4fc5b229631cb88c6c24583a76f24bbe62c"}, "downloads": -1, "filename": "django-redactoreditor-1.2.9.tar.gz", "has_sig": false, "md5_digest": "80af34619e8080a1005ca04dd159fd0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208928, "upload_time": "2014-07-13T16:57:48", "upload_time_iso_8601": "2014-07-13T16:57:48.205476Z", "url": "https://files.pythonhosted.org/packages/59/8b/8a1cb3a8f2124310798713ced98091b2eb2e03e7020e9fc3ca85c79b5069/django-redactoreditor-1.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2bab8d61b26ede6b908a27614f3160f1", "sha256": "704544432e3f079be7970b01613cbf359daf908d87f0dc683148bcb485a7f40e"}, "downloads": -1, "filename": "django-redactoreditor-1.2.10.tar.gz", "has_sig": false, "md5_digest": "2bab8d61b26ede6b908a27614f3160f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210610, "upload_time": "2014-07-16T19:46:09", "upload_time_iso_8601": "2014-07-16T19:46:09.786433Z", "url": "https://files.pythonhosted.org/packages/65/be/1607b1e425045f65776c226c3dae7d9a91af94f8d921a3e1b74267ec736f/django-redactoreditor-1.2.10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:22 2020"}