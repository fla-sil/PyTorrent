{"info": {"author": "CyberArk Software, Inc", "author_email": "CyberArk Maintainers <conj_maintainers@cyberark.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3 :: Only", "Topic :: Office/Business", "Topic :: Security", "Topic :: Security :: Cryptography", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Systems Administration", "Topic :: System :: Systems Administration :: Authentication/Directory", "Topic :: Utilities"], "description": "# conjur-api-python3\n\nPython3-based API SDK for [Conjur OSS](https://www.conjur.org/). The repo\nalso includes a self-contained CLI tool (`conjur-cli`) that wraps the API\nin a simple executable script/binary.\n\n---\n\n### **Status**: Alpha\n\n#### **Warning: Naming and APIs are still subject to breaking changes!**\n\n---\n\n\n## Installing the code\n\n### From PyPI\n\n```\n$ pip3 install conjur-client\n```\n\n### From source\n\n```\n$ pip3 install .\n```\n\nNote: On some machines, you have to use `pip` instead of `pip3` but in most cases,\nyou will want to use `pip3` if it's available for your platform.\n\n## Usage\n\n### CLI\n\nCLI can either be used with the included executable script:\n\n```shell\nconjur-cli --insecure -l https://myserver -a orgname -u admin -p secret \\\n  variable get foo/bar\n```\n\nOr through the installed module:\n\n```shell\npython -m conjur --insecure -l https://myserver -a orgname -u admin -p secret list\n```\n\n### API\n\nMost usage is done by creating a Client instance and then invoking the API on it:\n\n#### With login ID and password\n\n```python3\n#!/usr/bin/env python3\n\nfrom conjur import Client\n\nclient = Client(url='https://conjur.myorg.com',\n                account='default',\n                login_id='admin',\n                password='mypassword',\n                ca_bundle='/path/to/my/ca/bundle')\n\nprint(\"Setting variable...\")\nclient.set('conjur/my/variable', 'new value')\n\nprint(\"Fetching variable...\")\nnew_value = client.get('conjur/my/variable')\n\nprint(\"Variable value is:\", new_value.decode('utf-8'))\n```\n\n#### With login Id and API key\n\nWrite the code same as in the first example but create the client with the following arguments:\n\n```python3\nclient = Client(url='https://conjur.myorg.com',\n                account='default',\n                login_id='admin',\n                api_key='myapikey',\n                ca_bundle='/path/to/my/ca/bundle')\n```\n\n#### With `.netrc` and `.conjurrc` settings\n\nWrite the code same as in the first example but create the client with the following arguments:\n\n```python3\nclient = Client()\n```\n\n## Currently supported client methods:\n\n#### `get(variable_id)`\n\nGets a variable value based on its ID. Variable is binary data\nthat should be decoded to your system's encoding (e.g.\n`get(variable_id).decode('utf-8')`.\n\n#### `get_many(variable_id[,variable_id...])`\n\nGets multiple variable values based on their IDs. Variables are\nreturned in a dictionary that maps the variable name to its value.\n\n#### `set(variable_id, value)`\n\nSets a variable to a specific value based on its ID.\n\nNote: Policy to create the variable must have been already loaded\notherwise you will get a 404 error during invocation.\n\n#### `apply_policy_file(policy_name, policy_file)`\n\nApplies a file-based YAML to a named policy. This method only\nsupports additive changes. Result is a dictionary object constructed\nfrom the returned JSON data.\n\n#### `replace_policy_file(policy_name, policy_file)`\n\nReplaces a named policy with one from the provided file. This is\nusually a destructive invocation. Result is a dictionary object\nconstructed from the returned JSON data.\n\n#### `delete_policy_file(policy_name, policy_file)`\n\nModifies an existing Conjur policy. Data may be explicitly\ndeleted using the !delete, !revoke, and !deny statements. Unlike\n\"replace\" mode, no data is ever implicitly deleted. Result is a\ndictionary object constructed from the returned JSON data.\n\n#### `list()`\n\nReturns a Python list of all the available resources for the current\naccount.\n\n\n## Contributing\n\nWe store instructions for development and guidelines for how to build and test this\nproject in the [CONTRIBUTING.md](CONTRIBUTING.md) - please refer to that document\nif you would like to contribute.\n\n## License\n\nThis project is [licensed under Apache License v2.0](LICENSE.md)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/conjurinc/conjur-api-python3", "keywords": "conjur,cyberark,microservicesprivileged access,security,vault", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "conjur-client", "package_url": "https://pypi.org/project/conjur-client/", "platform": "", "project_url": "https://pypi.org/project/conjur-client/", "project_urls": {"Homepage": "https://github.com/conjurinc/conjur-api-python3"}, "release_url": "https://pypi.org/project/conjur-client/0.1.0/", "requires_dist": ["PyYAML (>=3.13)", "nose2 (>=0.8.0)", "requests (>=2.21.0)"], "requires_python": ">=3.5", "summary": "APIs for interacting with the Conjur v5 appliance", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>conjur-api-python3</h1>\n<p>Python3-based API SDK for <a href=\"https://www.conjur.org/\" rel=\"nofollow\">Conjur OSS</a>. The repo\nalso includes a self-contained CLI tool (<code>conjur-cli</code>) that wraps the API\nin a simple executable script/binary.</p>\n<hr>\n<h3><strong>Status</strong>: Alpha</h3>\n<h4><strong>Warning: Naming and APIs are still subject to breaking changes!</strong></h4>\n<hr>\n<h2>Installing the code</h2>\n<h3>From PyPI</h3>\n<pre><code>$ pip3 install conjur-client\n</code></pre>\n<h3>From source</h3>\n<pre><code>$ pip3 install .\n</code></pre>\n<p>Note: On some machines, you have to use <code>pip</code> instead of <code>pip3</code> but in most cases,\nyou will want to use <code>pip3</code> if it's available for your platform.</p>\n<h2>Usage</h2>\n<h3>CLI</h3>\n<p>CLI can either be used with the included executable script:</p>\n<pre>conjur-cli --insecure -l https://myserver -a orgname -u admin -p secret <span class=\"se\">\\</span>\n  variable get foo/bar\n</pre>\n<p>Or through the installed module:</p>\n<pre>python -m conjur --insecure -l https://myserver -a orgname -u admin -p secret list\n</pre>\n<h3>API</h3>\n<p>Most usage is done by creating a Client instance and then invoking the API on it:</p>\n<h4>With login ID and password</h4>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">conjur</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'https://conjur.myorg.com'</span><span class=\"p\">,</span>\n                <span class=\"n\">account</span><span class=\"o\">=</span><span class=\"s1\">'default'</span><span class=\"p\">,</span>\n                <span class=\"n\">login_id</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span>\n                <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'mypassword'</span><span class=\"p\">,</span>\n                <span class=\"n\">ca_bundle</span><span class=\"o\">=</span><span class=\"s1\">'/path/to/my/ca/bundle'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Setting variable...\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'conjur/my/variable'</span><span class=\"p\">,</span> <span class=\"s1\">'new value'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Fetching variable...\"</span><span class=\"p\">)</span>\n<span class=\"n\">new_value</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'conjur/my/variable'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Variable value is:\"</span><span class=\"p\">,</span> <span class=\"n\">new_value</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">))</span>\n</pre>\n<h4>With login Id and API key</h4>\n<p>Write the code same as in the first example but create the client with the following arguments:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'https://conjur.myorg.com'</span><span class=\"p\">,</span>\n                <span class=\"n\">account</span><span class=\"o\">=</span><span class=\"s1\">'default'</span><span class=\"p\">,</span>\n                <span class=\"n\">login_id</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span>\n                <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">'myapikey'</span><span class=\"p\">,</span>\n                <span class=\"n\">ca_bundle</span><span class=\"o\">=</span><span class=\"s1\">'/path/to/my/ca/bundle'</span><span class=\"p\">)</span>\n</pre>\n<h4>With <code>.netrc</code> and <code>.conjurrc</code> settings</h4>\n<p>Write the code same as in the first example but create the client with the following arguments:</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">()</span>\n</pre>\n<h2>Currently supported client methods:</h2>\n<h4><code>get(variable_id)</code></h4>\n<p>Gets a variable value based on its ID. Variable is binary data\nthat should be decoded to your system's encoding (e.g.\n<code>get(variable_id).decode('utf-8')</code>.</p>\n<h4><code>get_many(variable_id[,variable_id...])</code></h4>\n<p>Gets multiple variable values based on their IDs. Variables are\nreturned in a dictionary that maps the variable name to its value.</p>\n<h4><code>set(variable_id, value)</code></h4>\n<p>Sets a variable to a specific value based on its ID.</p>\n<p>Note: Policy to create the variable must have been already loaded\notherwise you will get a 404 error during invocation.</p>\n<h4><code>apply_policy_file(policy_name, policy_file)</code></h4>\n<p>Applies a file-based YAML to a named policy. This method only\nsupports additive changes. Result is a dictionary object constructed\nfrom the returned JSON data.</p>\n<h4><code>replace_policy_file(policy_name, policy_file)</code></h4>\n<p>Replaces a named policy with one from the provided file. This is\nusually a destructive invocation. Result is a dictionary object\nconstructed from the returned JSON data.</p>\n<h4><code>delete_policy_file(policy_name, policy_file)</code></h4>\n<p>Modifies an existing Conjur policy. Data may be explicitly\ndeleted using the !delete, !revoke, and !deny statements. Unlike\n\"replace\" mode, no data is ever implicitly deleted. Result is a\ndictionary object constructed from the returned JSON data.</p>\n<h4><code>list()</code></h4>\n<p>Returns a Python list of all the available resources for the current\naccount.</p>\n<h2>Contributing</h2>\n<p>We store instructions for development and guidelines for how to build and test this\nproject in the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> - please refer to that document\nif you would like to contribute.</p>\n<h2>License</h2>\n<p>This project is <a href=\"LICENSE.md\" rel=\"nofollow\">licensed under Apache License v2.0</a></p>\n\n          </div>"}, "last_serial": 6392915, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "5106e1e1919e150d8e2a736e2a0d585f", "sha256": "ed6c9e063fe777386db1267856606516df047eb9056de58d560f8ebc0b611817"}, "downloads": -1, "filename": "conjur_client-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5106e1e1919e150d8e2a736e2a0d585f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 29315, "upload_time": "2019-07-12T17:14:21", "upload_time_iso_8601": "2019-07-12T17:14:21.950962Z", "url": "https://files.pythonhosted.org/packages/42/b5/94748aef6f33a35022eabd022317a1e13f8d0252f0a1df0d3c17b7c2aa0c/conjur_client-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "383c08086ab3a9ba68c43e9ad14ff6e5", "sha256": "b60167adc43767471be765160c31cb5a41c6d1884e342adf9760e2abb16d9e0d"}, "downloads": -1, "filename": "conjur-client-0.0.2.tar.gz", "has_sig": false, "md5_digest": "383c08086ab3a9ba68c43e9ad14ff6e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21142, "upload_time": "2019-07-12T17:14:24", "upload_time_iso_8601": "2019-07-12T17:14:24.283670Z", "url": "https://files.pythonhosted.org/packages/2c/c0/9fb52d6570ce9f415305a26e8dccc630359d5c80b3079e27cc9b62232237/conjur-client-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "44d45034313c5a504e59d30efc466067", "sha256": "c3197eefdb321d4433331f25963a20d1133e63228f0ec8be1fba8eb94832b84f"}, "downloads": -1, "filename": "conjur_client-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "44d45034313c5a504e59d30efc466067", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 29444, "upload_time": "2019-08-20T18:18:40", "upload_time_iso_8601": "2019-08-20T18:18:40.416127Z", "url": "https://files.pythonhosted.org/packages/ff/6b/216ba702bf4894b646afa1ab40b50c9c812c8f426432dc422073d9986f75/conjur_client-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a4f327b5d98e49f403d55e65314f0ed", "sha256": "e07b4e7344543baa2f9cad77666dd39c3fe883b260574beee73e5596b4e0a98f"}, "downloads": -1, "filename": "conjur-client-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2a4f327b5d98e49f403d55e65314f0ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21231, "upload_time": "2019-08-20T18:18:41", "upload_time_iso_8601": "2019-08-20T18:18:41.993828Z", "url": "https://files.pythonhosted.org/packages/17/71/fc7fa70a9b678440fbee106f22872f07adf9aea6dc3b18537dfc42cde867/conjur-client-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0230764fb4161a0e86943dc175cadcaf", "sha256": "0543b3cf18c9d1105d4da2d4965fe07b6610919ac8f14507a6e91917e5b1bd2d"}, "downloads": -1, "filename": "conjur_client-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0230764fb4161a0e86943dc175cadcaf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 30238, "upload_time": "2019-11-21T22:36:26", "upload_time_iso_8601": "2019-11-21T22:36:26.602778Z", "url": "https://files.pythonhosted.org/packages/cd/36/cfb53e48c693e27e3e07ea6f34ac9066678200bbe45e3e64b68de1a8b4bb/conjur_client-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "716aaf7e9241cc68554c8f740d036c86", "sha256": "2d1b104736e7a9b64d2b93dcb0009bc3a0bbac8c9601ab9c869e8c29fe384a3c"}, "downloads": -1, "filename": "conjur-client-0.0.4.tar.gz", "has_sig": false, "md5_digest": "716aaf7e9241cc68554c8f740d036c86", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 21912, "upload_time": "2019-11-21T22:36:28", "upload_time_iso_8601": "2019-11-21T22:36:28.187328Z", "url": "https://files.pythonhosted.org/packages/2c/a1/7f04e979d520c1263e5c6785198ac60e6dd19a63b30a63db34a28590220d/conjur-client-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "046592c0c8fb42d5638c7bbad7190b12", "sha256": "7ea14a4edfd5b39341364a644a9f0796ea4e107c3a01b143206307806e57e160"}, "downloads": -1, "filename": "conjur_client-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "046592c0c8fb42d5638c7bbad7190b12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 30721, "upload_time": "2019-12-06T15:11:39", "upload_time_iso_8601": "2019-12-06T15:11:39.513933Z", "url": "https://files.pythonhosted.org/packages/2b/d9/f0d597568d5caaffb947e1a9cf7d5bae10cd650478e0fd7b92e2b3467b96/conjur_client-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1272959afe7da9f77668e95c272569b", "sha256": "21356e55fb505d7e0a791cc6d73d9d3808dc7a8c9ff29c8419442e8805d6fd49"}, "downloads": -1, "filename": "conjur-client-0.0.5.tar.gz", "has_sig": false, "md5_digest": "c1272959afe7da9f77668e95c272569b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 22545, "upload_time": "2019-12-06T15:11:41", "upload_time_iso_8601": "2019-12-06T15:11:41.131952Z", "url": "https://files.pythonhosted.org/packages/e0/c1/a6895fe14549d54651016071e4c239f9d5934610e4a29e9bc5ee814bfae5/conjur-client-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "5f5d9017224ba8cabcad5b705bcc2145", "sha256": "060aa895f5928887eaee077f02478a31edbebb3e22cd637ddcd877de141bc708"}, "downloads": -1, "filename": "conjur_client-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5f5d9017224ba8cabcad5b705bcc2145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31133, "upload_time": "2020-01-03T22:06:26", "upload_time_iso_8601": "2020-01-03T22:06:26.694240Z", "url": "https://files.pythonhosted.org/packages/33/ba/5ce344dcc1df11980f3dea6db66e1b7ead46476df31eac89f8be7de7f044/conjur_client-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cce730db40e9ef8e3e6056f487f036c6", "sha256": "b860f9520dfdc7d77b54170c44375bcede7284832933795761f7b465abf378ac"}, "downloads": -1, "filename": "conjur-client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cce730db40e9ef8e3e6056f487f036c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 22548, "upload_time": "2020-01-03T22:06:28", "upload_time_iso_8601": "2020-01-03T22:06:28.345976Z", "url": "https://files.pythonhosted.org/packages/ca/ec/289afec1ea2c8300eb0ff6bae3f962f2e8423442ecff53994b58cd6669d0/conjur-client-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f5d9017224ba8cabcad5b705bcc2145", "sha256": "060aa895f5928887eaee077f02478a31edbebb3e22cd637ddcd877de141bc708"}, "downloads": -1, "filename": "conjur_client-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5f5d9017224ba8cabcad5b705bcc2145", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31133, "upload_time": "2020-01-03T22:06:26", "upload_time_iso_8601": "2020-01-03T22:06:26.694240Z", "url": "https://files.pythonhosted.org/packages/33/ba/5ce344dcc1df11980f3dea6db66e1b7ead46476df31eac89f8be7de7f044/conjur_client-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cce730db40e9ef8e3e6056f487f036c6", "sha256": "b860f9520dfdc7d77b54170c44375bcede7284832933795761f7b465abf378ac"}, "downloads": -1, "filename": "conjur-client-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cce730db40e9ef8e3e6056f487f036c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 22548, "upload_time": "2020-01-03T22:06:28", "upload_time_iso_8601": "2020-01-03T22:06:28.345976Z", "url": "https://files.pythonhosted.org/packages/ca/ec/289afec1ea2c8300eb0ff6bae3f962f2e8423442ecff53994b58cd6669d0/conjur-client-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:46 2020"}