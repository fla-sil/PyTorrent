{"info": {"author": "rahul", "author_email": "rahul@cs.cornell.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Topic :: Utilities"], "description": "# Passwords  \nI have been working with password leaks for a while, and dealing with them is\nnot always fun due to multiple reasons. They are often large, takes a lot of time\nto load in memory, and have mix of strings in different format, such as `UTF-8`,\n`UTF-16`, `ASCII`.  These make the files very annoying to process. The result is a\nmess of error handling and memory management, instead of quickly compute the\nstatistics we want to compute.\n\nI have to do it for living (at least for now), and so I decided to create this\nlittle module to efficiently store and process the password leak files. This\nlibrary expects a clean password file, and it will not clean it for you.  It\njust makes life easy afterwards to process this file for other purposes.  Not\nsure how generic is the purpose, as I am the only one who is using it right now.\nAll feedbacks are very welcome.\n\nCleaned password-leak files can be downloaded from https://wiki.skullsecurity.org/Passwords.\n\n## How to install?  \nDependencies:\n* `numpy`\n* `marisa_trie`\n\nDownload the `readpw.py` file into your main code and it should work. Or, install via pip, \n`pip install readpw`\n\n\n\n## How to use?\n```ipython\nIn [1]: from readpw import Passwords\n\nIn [2]: ry = Passwords('/home/rahul/passwords/rockyou-withcount.txt.bz2')\n\nIn [3]: for id_, pw, f in ry.iterpws(10):\n   ...:     print id_, pw, f\n      ...: \n      3121838 123456 290729.0\n      919221 12345 79076.0\n      12769146 123456789 76789.0\n      11327966 password 59462.0\n      11789229 iloveyou 49952.0\n      11389450 princess 33291.0\n      6851250 1234567 21725.0\n      8034161 rockyou 20901.0\n      10680580 12345678 20553.0\n      2902439 abc123 16648.0\n\nIn [5]: ry.sumvalues(10) # sums the frequency of most frequent 10 passwords.\nOut[5]: 669126.0\n\nIn [6]: list(ry.sample_pws(10))\nOut[6]: \n[u'lilmarvin09',\n u'evan*love',\n u'mylove',\n u'mmmsss',\n u'whudafxup?',\n u'123456',\n u'123456',\n u'beautiful',\n u'james123',\n u'foodie123']\n         \n\n```\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rchatterjee/Passwords", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "readpw", "package_url": "https://pypi.org/project/readpw/", "platform": "", "project_url": "https://pypi.org/project/readpw/", "project_urls": {"Homepage": "https://github.com/rchatterjee/Passwords"}, "release_url": "https://pypi.org/project/readpw/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A project to read password leak files easily. More documentation in github page.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Passwords  <br>I have been working with password leaks for a while, and dealing with them is<br>not always fun due to multiple reasons. They are often large, takes a lot of time<br>to load in memory, and have mix of strings in different format, such as `UTF-8`,<br>`UTF-16`, `ASCII`.  These make the files very annoying to process. The result is a<br>mess of error handling and memory management, instead of quickly compute the<br>statistics we want to compute.<br><br>I have to do it for living (at least for now), and so I decided to create this<br>little module to efficiently store and process the password leak files. This<br>library expects a clean password file, and it will not clean it for you.  It<br>just makes life easy afterwards to process this file for other purposes.  Not<br>sure how generic is the purpose, as I am the only one who is using it right now.<br>All feedbacks are very welcome.<br><br>Cleaned password-leak files can be downloaded from https://wiki.skullsecurity.org/Passwords.<br><br>## How to install?  <br>Dependencies:<br>* `numpy`<br>* `marisa_trie`<br><br>Download the `readpw.py` file into your main code and it should work. Or, install via pip, <br>`pip install readpw`<br><br><br><br>## How to use?<br>```ipython<br>In [1]: from readpw import Passwords<br><br>In [2]: ry = Passwords('/home/rahul/passwords/rockyou-withcount.txt.bz2')<br><br>In [3]: for id_, pw, f in ry.iterpws(10):<br>   ...:     print id_, pw, f<br>      ...: <br>      3121838 123456 290729.0<br>      919221 12345 79076.0<br>      12769146 123456789 76789.0<br>      11327966 password 59462.0<br>      11789229 iloveyou 49952.0<br>      11389450 princess 33291.0<br>      6851250 1234567 21725.0<br>      8034161 rockyou 20901.0<br>      10680580 12345678 20553.0<br>      2902439 abc123 16648.0<br><br>In [5]: ry.sumvalues(10) # sums the frequency of most frequent 10 passwords.<br>Out[5]: 669126.0<br><br>In [6]: list(ry.sample_pws(10))<br>Out[6]: <br>[u'lilmarvin09',<br> u'evan*love',<br> u'mylove',<br> u'mmmsss',<br> u'whudafxup?',<br> u'123456',<br> u'123456',<br> u'beautiful',<br> u'james123',<br> u'foodie123']<br>         <br><br>```<br>\n          </div>"}, "last_serial": 3572927, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "aadb77ca49daea82983fee77e81d6a75", "sha256": "75c9101c81959483f0cd5791211175ac758928a63fceb07ceda22f4604bdc852"}, "downloads": -1, "filename": "readpw-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "aadb77ca49daea82983fee77e81d6a75", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 6941, "upload_time": "2018-02-11T21:46:53", "upload_time_iso_8601": "2018-02-11T21:46:53.127756Z", "url": "https://files.pythonhosted.org/packages/f9/f3/0c3e75d7babf085966378e8226b7b29714193031ffd4089fd57113c416ad/readpw-1.0.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fc4879542033857ba0ff981810a9502", "sha256": "b93599f57d04ac5f7ba1e0f45a981d6c41787c3d82c1a989f1fba71295564625"}, "downloads": -1, "filename": "readpw-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9fc4879542033857ba0ff981810a9502", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9034, "upload_time": "2018-02-11T21:46:51", "upload_time_iso_8601": "2018-02-11T21:46:51.309560Z", "url": "https://files.pythonhosted.org/packages/a7/c3/9fc178f8dcfdfa2ff9a7d95bca35b405a98f401d15d0b935232a967d1a75/readpw-1.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aadb77ca49daea82983fee77e81d6a75", "sha256": "75c9101c81959483f0cd5791211175ac758928a63fceb07ceda22f4604bdc852"}, "downloads": -1, "filename": "readpw-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "aadb77ca49daea82983fee77e81d6a75", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 6941, "upload_time": "2018-02-11T21:46:53", "upload_time_iso_8601": "2018-02-11T21:46:53.127756Z", "url": "https://files.pythonhosted.org/packages/f9/f3/0c3e75d7babf085966378e8226b7b29714193031ffd4089fd57113c416ad/readpw-1.0.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fc4879542033857ba0ff981810a9502", "sha256": "b93599f57d04ac5f7ba1e0f45a981d6c41787c3d82c1a989f1fba71295564625"}, "downloads": -1, "filename": "readpw-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9fc4879542033857ba0ff981810a9502", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9034, "upload_time": "2018-02-11T21:46:51", "upload_time_iso_8601": "2018-02-11T21:46:51.309560Z", "url": "https://files.pythonhosted.org/packages/a7/c3/9fc178f8dcfdfa2ff9a7d95bca35b405a98f401d15d0b935232a967d1a75/readpw-1.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:06:25 2020"}