{"info": {"author": "Caleb P. Burns", "author_email": "cpburnz@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Database", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "SQL Params\n==========\n\n*sqlparams* is a utility package for converting between various SQL\nparameter styles. This can simplify the use of SQL parameters in queries by\nallowing the use of named parameters where only ordinal are supported. Some\n`Python DB API 2.0`_ compliant modules only support the ordinal *qmark* or\n*format* style parameters (e.g., `pyodbc`_ only supports *qmark*). This\npackage provides a helper class, `SQLParams`_, that is used to convert\nfrom any parameter style (*qmark*, *numeric*, *named*, *format*, *pyformat*;\nand the non-standard *numeric_dollar* and *named_dollar*), and have them\nsafely converted to the desired parameter style.\n\n.. _`Python DB API 2.0`: http://www.python.org/dev/peps/pep-0249/\n.. _`pyodbc`: https://github.com/mkleehammer/pyodbc\n\n\nTutorial\n--------\n\nYou first create an `SQLParams`_ instance specifying the named\nparameter style you're converting from, and what ordinal style you're\nconverting to. Let's convert from *named* to *qmark* style::\n\n  >>> import sqlparams\n  >>> query = sqlparams.SQLParams('named', 'qmark')\n\nNow, lets to convert a simple SQL SELECT query using the `SQLParams.format`_\nmethod which accepts an SQL query, and a *dict* of parameters::\n\n  >>> sql, params = query.format('SELECT * FROM users WHERE name = :name;', {'name': \"Thorin\"})\n\nThis returns the new SQL query using ordinal *qmark* parameters with the\ncorresponding list of ordinal parameters, which can be passed to the\n`.execute()`_ method on a database cursor::\n\n  >>> print sql\n  SELECT * FROM users WHERE name = ?;\n  >>> print params\n  ['Thorin']\n\n.. _`.execute()`: http://www.python.org/dev/peps/pep-0249/#id15\n\n*tuple*\\ s are also supported which allows for safe use of the SQL IN\noperator::\n\n  >>> sql, params = query.format(\"SELECT * FROM users WHERE name IN :names;\", {'names': (\"Dori\", \"Nori\", \"Ori\")})\n  >>> print sql\n  SELECT * FROM users WHERE name in (?,?,?);\n  >>> print params\n  ['Dori', 'Nori', 'Ori']\n\nYou can also format multiple parameters for a single, shared query useful with\nthe `.executemany()`_ method of a database cursor::\n\n  >>> sql, manyparams = query.formatmany(\"UPDATE users SET age = :age WHERE name = :name;\", [{'name': \"Dwalin\", 'age': 169}, {'name': \"Balin\", 'age': 178}])\n  >>> print sql\n  UPDATE users SET age = ? WHERE name = ?;\n  >>> print manyparams\n  [[169, 'Dwalin'], [178, 'Balin']]\n\n.. _`.executemany()`: http://www.python.org/dev/peps/pep-0249/#executemany\n\nPlease note that if an expanded *tuple* is used in `SQLParams.formatmany`_,\nthe tuple must be the same size in each of the parameter lists. Otherwise, you\nmight well use `SQLParams.format`_ in a for-loop.\n\n\nSource\n------\n\nThe source code for *sqlparams* is available from the GitHub repo\n`cpburnz/python-sql-parameters`_.\n\n.. _`cpburnz/python-sql-parameters`: https://github.com/cpburnz/python-sql-parameters.git\n\n\nInstallation\n------------\n\n*sqlparams* can be installed from source with::\n\n  python setup.py install\n\n*sqlparams* is also available for install through `PyPI`_::\n\n  pip install sqlparams\n\n.. _`PyPI`: http://pypi.python.org/pypi/sqlparams\n\n\nDocumentation\n-------------\n\nDocumentation for *sqlparams* is available on `Read the Docs`_.\n\n.. _`Read the Docs`: https://python-sql-parameters.readthedocs.org\n\n.. _`SQLParams`: https://python-sql-parameters.readthedocs.io/en/latest/sqlparams.html#sqlparams.SQLParams\n.. _`SQLParams.format`: https://python-sql-parameters.readthedocs.io/en/latest/sqlparams.html#sqlparams.SQLParams.format\n.. _`SQLParams.formatmany`: https://python-sql-parameters.readthedocs.io/en/latest/sqlparams.html#sqlparams.SQLParams.formatmany\n\n\nChange History\n==============\n\n3.0.0 (2020-04-04)\n------------------\n\n- Major changes to internal implementation.\n- Support converting any parameter style to any parameter style (all named,\n  numeric, and ordinal styles).\n- Renamed attribute `named` to `in_style` on `sqlparams.SQLParams`.\n- Renamed attribute `ordinal` to `out_style` on `sqlparams.SQLParams`.\n- Removed attributes `match` and `replace` from `sqlparams.SQLParams` which\n  should have been private.\n- Named parameters must now be valid identifiers (can no longer start with a\n  digit to help prevent incorrectly matching common strings such as\n  datetimes). Fixes `Issue #4`_.\n- `Issue #7`_: Support dollar sign style for numeric and named parameters: ``\n\n.. _`Issue #4`: https://github.com/cpburnz/python-sql-parameters/issues/4\n.. _`Issue #7`: https://github.com/cpburnz/python-sql-parameters/issues/7\n\n\n2.0.0 (2020-02-26)\n------------------\n\n- Drop support for EOL Python 2.7, 3.2, 3.3, 3.4.\n\n\n1.2.0 (2020-02-26)\n------------------\n\n- Require setuptools.\n- Support up to Python 3.8.\n\n\n1.1.2 (2018-05-04)\n------------------\n\n- Improved support for byte strings.\n\n\n1.1.1 (2017-09-07)\n------------------\n\n- Fixed support for byte strings.\n\n\n1.1.0 (2017-08-30)\n------------------\n\n- Support Python 3.2+.\n\n\n1.0.3 (2012-12-28)\n------------------\n\n- Fixed documentation for `issue 1`_.\n\n.. _`issue 1`: https://github.com/cpburnz/python-sql-parameters/issues/1\n\n\n1.0.2 (2012-12-22)\n------------------\n\n- Added sphinx documentation.\n\n\n1.0.1 (2012-12-20)\n------------------\n\n- Fixed running test as a script.\n\n\n1.0.0 (2012-12-20)\n------------------\n\n- Initial release.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cpburnz/python-sql-parameters.git", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "sqlparams", "package_url": "https://pypi.org/project/sqlparams/", "platform": "", "project_url": "https://pypi.org/project/sqlparams/", "project_urls": {"Homepage": "https://github.com/cpburnz/python-sql-parameters.git"}, "release_url": "https://pypi.org/project/sqlparams/3.0.0/", "requires_dist": null, "requires_python": "", "summary": "Convert between various DB API 2.0 parameter styles.", "version": "3.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"sql-params\">\n<h2>SQL Params</h2>\n<p><em>sqlparams</em> is a utility package for converting between various SQL\nparameter styles. This can simplify the use of SQL parameters in queries by\nallowing the use of named parameters where only ordinal are supported. Some\n<a href=\"http://www.python.org/dev/peps/pep-0249/\" rel=\"nofollow\">Python DB API 2.0</a> compliant modules only support the ordinal <em>qmark</em> or\n<em>format</em> style parameters (e.g., <a href=\"https://github.com/mkleehammer/pyodbc\" rel=\"nofollow\">pyodbc</a> only supports <em>qmark</em>). This\npackage provides a helper class, <a href=\"https://python-sql-parameters.readthedocs.io/en/latest/sqlparams.html#sqlparams.SQLParams\" rel=\"nofollow\">SQLParams</a>, that is used to convert\nfrom any parameter style (<em>qmark</em>, <em>numeric</em>, <em>named</em>, <em>format</em>, <em>pyformat</em>;\nand the non-standard <em>numeric_dollar</em> and <em>named_dollar</em>), and have them\nsafely converted to the desired parameter style.</p>\n<div id=\"tutorial\">\n<h3>Tutorial</h3>\n<p>You first create an <a href=\"https://python-sql-parameters.readthedocs.io/en/latest/sqlparams.html#sqlparams.SQLParams\" rel=\"nofollow\">SQLParams</a> instance specifying the named\nparameter style you\u2019re converting from, and what ordinal style you\u2019re\nconverting to. Let\u2019s convert from <em>named</em> to <em>qmark</em> style:</p>\n<pre>&gt;&gt;&gt; import sqlparams\n&gt;&gt;&gt; query = sqlparams.SQLParams('named', 'qmark')\n</pre>\n<p>Now, lets to convert a simple SQL SELECT query using the <a href=\"https://python-sql-parameters.readthedocs.io/en/latest/sqlparams.html#sqlparams.SQLParams.format\" rel=\"nofollow\">SQLParams.format</a>\nmethod which accepts an SQL query, and a <em>dict</em> of parameters:</p>\n<pre>&gt;&gt;&gt; sql, params = query.format('SELECT * FROM users WHERE name = :name;', {'name': \"Thorin\"})\n</pre>\n<p>This returns the new SQL query using ordinal <em>qmark</em> parameters with the\ncorresponding list of ordinal parameters, which can be passed to the\n<a href=\"http://www.python.org/dev/peps/pep-0249/#id15\" rel=\"nofollow\">.execute()</a> method on a database cursor:</p>\n<pre>&gt;&gt;&gt; print sql\nSELECT * FROM users WHERE name = ?;\n&gt;&gt;&gt; print params\n['Thorin']\n</pre>\n<p><em>tuple</em>s are also supported which allows for safe use of the SQL IN\noperator:</p>\n<pre>&gt;&gt;&gt; sql, params = query.format(\"SELECT * FROM users WHERE name IN :names;\", {'names': (\"Dori\", \"Nori\", \"Ori\")})\n&gt;&gt;&gt; print sql\nSELECT * FROM users WHERE name in (?,?,?);\n&gt;&gt;&gt; print params\n['Dori', 'Nori', 'Ori']\n</pre>\n<p>You can also format multiple parameters for a single, shared query useful with\nthe <a href=\"http://www.python.org/dev/peps/pep-0249/#executemany\" rel=\"nofollow\">.executemany()</a> method of a database cursor:</p>\n<pre>&gt;&gt;&gt; sql, manyparams = query.formatmany(\"UPDATE users SET age = :age WHERE name = :name;\", [{'name': \"Dwalin\", 'age': 169}, {'name': \"Balin\", 'age': 178}])\n&gt;&gt;&gt; print sql\nUPDATE users SET age = ? WHERE name = ?;\n&gt;&gt;&gt; print manyparams\n[[169, 'Dwalin'], [178, 'Balin']]\n</pre>\n<p>Please note that if an expanded <em>tuple</em> is used in <a href=\"https://python-sql-parameters.readthedocs.io/en/latest/sqlparams.html#sqlparams.SQLParams.formatmany\" rel=\"nofollow\">SQLParams.formatmany</a>,\nthe tuple must be the same size in each of the parameter lists. Otherwise, you\nmight well use <a href=\"https://python-sql-parameters.readthedocs.io/en/latest/sqlparams.html#sqlparams.SQLParams.format\" rel=\"nofollow\">SQLParams.format</a> in a for-loop.</p>\n</div>\n<div id=\"source\">\n<h3>Source</h3>\n<p>The source code for <em>sqlparams</em> is available from the GitHub repo\n<a href=\"https://github.com/cpburnz/python-sql-parameters.git\" rel=\"nofollow\">cpburnz/python-sql-parameters</a>.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p><em>sqlparams</em> can be installed from source with:</p>\n<pre>python setup.py install\n</pre>\n<p><em>sqlparams</em> is also available for install through <a href=\"http://pypi.python.org/pypi/sqlparams\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>pip install sqlparams\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Documentation for <em>sqlparams</em> is available on <a href=\"https://python-sql-parameters.readthedocs.org\" rel=\"nofollow\">Read the Docs</a>.</p>\n</div>\n</div>\n<div id=\"change-history\">\n<h2>Change History</h2>\n<div id=\"id1\">\n<h3>3.0.0 (2020-04-04)</h3>\n<ul>\n<li>Major changes to internal implementation.</li>\n<li>Support converting any parameter style to any parameter style (all named,\nnumeric, and ordinal styles).</li>\n<li>Renamed attribute <cite>named</cite> to <cite>in_style</cite> on <cite>sqlparams.SQLParams</cite>.</li>\n<li>Renamed attribute <cite>ordinal</cite> to <cite>out_style</cite> on <cite>sqlparams.SQLParams</cite>.</li>\n<li>Removed attributes <cite>match</cite> and <cite>replace</cite> from <cite>sqlparams.SQLParams</cite> which\nshould have been private.</li>\n<li>Named parameters must now be valid identifiers (can no longer start with a\ndigit to help prevent incorrectly matching common strings such as\ndatetimes). Fixes <a href=\"https://github.com/cpburnz/python-sql-parameters/issues/4\" rel=\"nofollow\">Issue #4</a>.</li>\n<li><a href=\"https://github.com/cpburnz/python-sql-parameters/issues/7\" rel=\"nofollow\">Issue #7</a>: Support dollar sign style for numeric and named parameters: ``</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>2.0.0 (2020-02-26)</h3>\n<ul>\n<li>Drop support for EOL Python 2.7, 3.2, 3.3, 3.4.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.2.0 (2020-02-26)</h3>\n<ul>\n<li>Require setuptools.</li>\n<li>Support up to Python 3.8.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.1.2 (2018-05-04)</h3>\n<ul>\n<li>Improved support for byte strings.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.1.1 (2017-09-07)</h3>\n<ul>\n<li>Fixed support for byte strings.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.1.0 (2017-08-30)</h3>\n<ul>\n<li>Support Python 3.2+.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.0.3 (2012-12-28)</h3>\n<ul>\n<li>Fixed documentation for <a href=\"https://github.com/cpburnz/python-sql-parameters/issues/1\" rel=\"nofollow\">issue 1</a>.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.0.2 (2012-12-22)</h3>\n<ul>\n<li>Added sphinx documentation.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.0.1 (2012-12-20)</h3>\n<ul>\n<li>Fixed running test as a script.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.0.0 (2012-12-20)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6951665, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "652641ea5d0f7005e4ebefb831c76cad", "sha256": "e5bb86ba3ab4e495038657ecec9e48e7d93bad74622ae2601baeb863b1a1036d"}, "downloads": -1, "filename": "sqlparams-1.0.0.tar.gz", "has_sig": false, "md5_digest": "652641ea5d0f7005e4ebefb831c76cad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6532, "upload_time": "2012-12-20T05:52:42", "upload_time_iso_8601": "2012-12-20T05:52:42.750440Z", "url": "https://files.pythonhosted.org/packages/06/44/263f1efdfd48c5ce79056285d4d76903d659492cfa4629fd0c4640529a57/sqlparams-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4d9dfe673df4d3db1efb2959db4f2169", "sha256": "4271f758c1330887cb8e6e154e9f989645648551a53f0f130c4fed5f07041b80"}, "downloads": -1, "filename": "sqlparams-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4d9dfe673df4d3db1efb2959db4f2169", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6578, "upload_time": "2012-12-20T05:58:39", "upload_time_iso_8601": "2012-12-20T05:58:39.043521Z", "url": "https://files.pythonhosted.org/packages/1f/e4/4abba3403ea59b1b0a36336389aeecf082e18967d64a0a9233b527177479/sqlparams-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "42d86fd678d7f04afe1543da3d83ff48", "sha256": "a63df4cc6a5d29fff9c7c45aecd5ace3b749a60ae5e6103ffcde91068bf05fee"}, "downloads": -1, "filename": "sqlparams-1.0.2.tar.gz", "has_sig": false, "md5_digest": "42d86fd678d7f04afe1543da3d83ff48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11725, "upload_time": "2012-12-22T05:32:02", "upload_time_iso_8601": "2012-12-22T05:32:02.961472Z", "url": "https://files.pythonhosted.org/packages/77/3d/041ffea39d2d3ba29f108a3441ee72001345ba6fecd73a9ae9c05c2ee049/sqlparams-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "34be61c11f96a907b715665667833c55", "sha256": "07fdd7f5a822d7b04466c690751183df2db5ffffb21d5eb562eee422a0b11161"}, "downloads": -1, "filename": "sqlparams-1.0.3.tar.gz", "has_sig": false, "md5_digest": "34be61c11f96a907b715665667833c55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12817, "upload_time": "2012-12-28T11:56:09", "upload_time_iso_8601": "2012-12-28T11:56:09.886876Z", "url": "https://files.pythonhosted.org/packages/27/3f/121bcd3d1dcf6e38f6afa298fed9fc6c799f8b2d492129ef66ee95fea575/sqlparams-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9d63baca5f65c24bcd695ef7d7df19de", "sha256": "4ff8fcdf1c1e56159562b4aabce9761116b149aeb1f1b9eb8f27e4211b46bea7"}, "downloads": -1, "filename": "sqlparams-1.1.0.tar.gz", "has_sig": false, "md5_digest": "9d63baca5f65c24bcd695ef7d7df19de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13313, "upload_time": "2017-08-30T23:09:36", "upload_time_iso_8601": "2017-08-30T23:09:36.143726Z", "url": "https://files.pythonhosted.org/packages/ad/04/91d8f1d5330739ee471ff09cc8077a854d73a440b80f5758f61b14efe2bd/sqlparams-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "f1acf34bdb435f4142d4d5b01a241f92", "sha256": "242659638ed8de6a96686d9be73deefc3dd70c1ee91dd2e60a4dd41cdd38b92e"}, "downloads": -1, "filename": "sqlparams-1.1.1.tar.gz", "has_sig": false, "md5_digest": "f1acf34bdb435f4142d4d5b01a241f92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13357, "upload_time": "2017-09-08T01:34:50", "upload_time_iso_8601": "2017-09-08T01:34:50.909292Z", "url": "https://files.pythonhosted.org/packages/14/eb/f70bc18481a1e4bfce0f38b1bdbabc5b30489f62c9b2e191d7f5ce71d5c3/sqlparams-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "e1818cef6ffd7f6a2321eb7c7d7407c0", "sha256": "a59975569ef97083b215eaca21c80e5213e66396a4def1f00db0c661574641f6"}, "downloads": -1, "filename": "sqlparams-1.1.2.tar.gz", "has_sig": false, "md5_digest": "e1818cef6ffd7f6a2321eb7c7d7407c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13482, "upload_time": "2018-05-05T01:02:13", "upload_time_iso_8601": "2018-05-05T01:02:13.521474Z", "url": "https://files.pythonhosted.org/packages/79/82/381b904e8685c207594ef8ded7f2fc4d63f27aea87bbbaf64eff8d87bce4/sqlparams-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "f95394b2092944bf54cb29fc43c5e5e7", "sha256": "629975da0d0e2a2d0c36388dc13b336b35d0707a5efc93fb9906fee1461d370a"}, "downloads": -1, "filename": "sqlparams-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f95394b2092944bf54cb29fc43c5e5e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14965, "upload_time": "2020-02-26T05:34:52", "upload_time_iso_8601": "2020-02-26T05:34:52.593718Z", "url": "https://files.pythonhosted.org/packages/5c/10/8391ed9d06eeed38f00a1aa29e6b5ace3d8672522520a82e7e147a329710/sqlparams-1.2.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "4f22e7d05b537b9df49f45629c46175b", "sha256": "e9697e31466226e827ec374285d96822f62f6af10273f2707ddbc88554c1682f"}, "downloads": -1, "filename": "sqlparams-2.0.0.tar.gz", "has_sig": false, "md5_digest": "4f22e7d05b537b9df49f45629c46175b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13955, "upload_time": "2020-02-26T05:55:10", "upload_time_iso_8601": "2020-02-26T05:55:10.344696Z", "url": "https://files.pythonhosted.org/packages/c6/8c/fa69a0122bf13fe3cc7ac8eb4540082afc9a0592863cb62831af8da64fe2/sqlparams-2.0.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "80dcfd33ff6878d51ea576dcb704e820", "sha256": "3ced99c6be7dd9d9af64c87a28e89d8e180e90194156bb2f31113791ffe693e7"}, "downloads": -1, "filename": "sqlparams-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "80dcfd33ff6878d51ea576dcb704e820", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 13478, "upload_time": "2020-04-04T17:01:15", "upload_time_iso_8601": "2020-04-04T17:01:15.795689Z", "url": "https://files.pythonhosted.org/packages/1b/72/e01570409286e92f19280beb0dc3f225198faad3d6efdce3268279977196/sqlparams-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38d86ada7464e74e78ede3b11fd32b6c", "sha256": "2ad27aab848e9b678c70d3fd2aa0c2aa486a22c4d2e492e28051455704218d6b"}, "downloads": -1, "filename": "sqlparams-3.0.0.tar.gz", "has_sig": false, "md5_digest": "38d86ada7464e74e78ede3b11fd32b6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27767, "upload_time": "2020-04-04T17:01:14", "upload_time_iso_8601": "2020-04-04T17:01:14.356752Z", "url": "https://files.pythonhosted.org/packages/26/e7/1718b2e8a6622662412ba8d0f5b4ad5fd43c8079980f8810b1462b3d043d/sqlparams-3.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "80dcfd33ff6878d51ea576dcb704e820", "sha256": "3ced99c6be7dd9d9af64c87a28e89d8e180e90194156bb2f31113791ffe693e7"}, "downloads": -1, "filename": "sqlparams-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "80dcfd33ff6878d51ea576dcb704e820", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 13478, "upload_time": "2020-04-04T17:01:15", "upload_time_iso_8601": "2020-04-04T17:01:15.795689Z", "url": "https://files.pythonhosted.org/packages/1b/72/e01570409286e92f19280beb0dc3f225198faad3d6efdce3268279977196/sqlparams-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "38d86ada7464e74e78ede3b11fd32b6c", "sha256": "2ad27aab848e9b678c70d3fd2aa0c2aa486a22c4d2e492e28051455704218d6b"}, "downloads": -1, "filename": "sqlparams-3.0.0.tar.gz", "has_sig": false, "md5_digest": "38d86ada7464e74e78ede3b11fd32b6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27767, "upload_time": "2020-04-04T17:01:14", "upload_time_iso_8601": "2020-04-04T17:01:14.356752Z", "url": "https://files.pythonhosted.org/packages/26/e7/1718b2e8a6622662412ba8d0f5b4ad5fd43c8079980f8810b1462b3d043d/sqlparams-3.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:35 2020"}