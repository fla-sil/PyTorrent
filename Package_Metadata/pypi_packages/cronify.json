{"info": {"author": "Panos Kittenis", "author_email": "pkittenis@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "cronify\n============\n\nCronify is a file event based task scheduler that uses the Linux kernels' inotify API. An Inotify cron implementation if you will.\n\nIt allows for triggering of actions when a file event occurs, with configurable action parameters that can be file data such as file name and file datetime and for scheduling actions to be run within a certain time period among other things.\n\nOnce installed, it is run as a service, or daemon, much like cron itself. Cronify may also be used as a python library.\n\nThe service's configuration is YAML based.\n\n.. image:: https://api.travis-ci.org/pkittenis/cronify.png?branch=master\n\t:target: https://travis-ci.org/pkittenis/cronify\n\n************\nInstallation\n************\n\nRequires a running Linux kernel >=2.6.13\n\n::\n\n\t$ sudo pip install cronify\n\t$ sudo chmod +x /etc/init.d/cronifyd\n\t# Install a /etc/cronify.yaml file as in the examples below\n\t# Once a configuration file is in place, start the cronify daemon with the provided init script\n\t$ sudo /etc/init.d/cronifyd start\n\n***********************\nConfiguration Example\n***********************\n\n``$ cat /etc/cronify.yaml``\n\n.. code-block:: yaml\n\n\t/tmp/testdir :\n\t    name : Access log watcher\n\t    recurse : false\n\t    filemasks :\n\t      somefile.* :\n\t        actions :\n\t          - processFile :\n\t              args:\n\t                - $filename\n\t                - YYYYMMDD\n\t              cmd: echo\n\n::\n\n\t$ sudo /etc/init.d/cronifyd start\n\t$ touch /tmp/testdir/somefile.txt\n\t$ tail /var/log/cronify/cronify.log\n\n\tcronify.cronify - Thread-1 - 2013-03-26 17:40:40,485 - INFO - Got result from action {'cmd': 'echo', 'args': ['echo', '/tmp/testdir/somefile.txt', '20130326']} - /tmp/testdir/somefile.txt 20130326\n\n\n***********************************************************************\nMore complex configuration with multiple watchers and delayed actions\n***********************************************************************\n\nSee example.yaml in repository for complete list of accepted configuration\n\n\n``$ cat /etc/cronify.yaml``\n\n.. code-block:: yaml\n\n\t/tmp/testdir :\n\t    name : Access log watcher\n\t    recurse : false\n\t    filemasks :\n\t      access_log_YYYYMMDD.* :\n\t        actions :\n\t          - processFile :\n\t              args:\n\t                - $filename\n\t                - YYYYMMDD\n\t              cmd: process\n\n\t/tmp/testdir2 :\n\t    name : Other log watcher\n\t    recurse : true\n\t    filemasks :\n\t      other_log_YYYYMMDD.* :\n\t         actions :\n\t          # Actions to perform on the file in sequence.\n\t          - processFile :\n\t            # Do not start action before this time. Action is queued until start_time if triggered prior to it.\n\t            # This configuration setting is optional\n\t            start_time: 0800\n\t            # Do not start action after this time. Action is queued until next start_time if triggered after end time\n\t            # This configuration setting is optional\n\t            end_time: 1000\n\t            args:\n\t              - $filename\n\t              - YYYYMMDD\n\t            cmd: process\n\n\n*******************\nKnown limitations\n*******************\n\n- Currently queued actions will be _lost_ upon a service restart.\n\n- When using recurse, inotify is limited to watching N number of subdirectories in the tree, where N is value of /proc/sys/fs/inotify/max_user_watches. See http://linux.die.net/man/7/inotify\n\n  User can increase this limit by modifying /proc/sys/fs/inotify/max_user_watches\n\n- When watching an NFS directory on NFS server side, only events made by the NFS *server* will be seen by the inotify API and following, cronify itself.\n\n  When watching an NFS directory on NFS client side, no events are seen by inotify at all.\n\n  In other words if you were planning on watching for a file that is created by an NFS *client*, this is currently not possible.\n\n.. image:: https://cruel-carlota.pagodabox.com/f1d73b292eef6e399205a85d1bc7657b\n   :alt: githalytics.com\n   :target: http://githalytics.com/pkittenis/cronify", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pkittenis/cronify", "keywords": null, "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "cronify", "package_url": "https://pypi.org/project/cronify/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cronify/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/pkittenis/cronify"}, "release_url": "https://pypi.org/project/cronify/0.13/", "requires_dist": null, "requires_python": null, "summary": "File event based task scheduler using the linux kernel's inotify API", "version": "0.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Cronify is a file event based task scheduler that uses the Linux kernels\u2019 inotify API. An Inotify cron implementation if you will.</p>\n<p>It allows for triggering of actions when a file event occurs, with configurable action parameters that can be file data such as file name and file datetime and for scheduling actions to be run within a certain time period among other things.</p>\n<p>Once installed, it is run as a service, or daemon, much like cron itself. Cronify may also be used as a python library.</p>\n<p>The service\u2019s configuration is YAML based.</p>\n<a href=\"https://travis-ci.org/pkittenis/cronify\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/pkittenis/cronify.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc0790ecf7f1beed77b738b0c6aee65d84565c4e/68747470733a2f2f6170692e7472617669732d63692e6f72672f706b697474656e69732f63726f6e6966792e706e673f6272616e63683d6d6173746572\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Requires a running Linux kernel &gt;=2.6.13</p>\n<pre>$ sudo pip install cronify\n$ sudo chmod +x /etc/init.d/cronifyd\n# Install a /etc/cronify.yaml file as in the examples below\n# Once a configuration file is in place, start the cronify daemon with the provided init script\n$ sudo /etc/init.d/cronifyd start\n</pre>\n</div>\n<div id=\"configuration-example\">\n<h2>Configuration Example</h2>\n<p><tt>$ cat /etc/cronify.yaml</tt></p>\n<pre><span class=\"nt\">/tmp/testdir </span><span class=\"p\">:</span>\n    <span class=\"nt\">name </span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Access log watcher</span>\n    <span class=\"nt\">recurse </span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">false</span>\n    <span class=\"nt\">filemasks </span><span class=\"p\">:</span>\n      <span class=\"nt\">somefile.* </span><span class=\"p\">:</span>\n        <span class=\"nt\">actions </span><span class=\"p\">:</span>\n          <span class=\"p-Indicator\">-</span> <span class=\"nt\">processFile </span><span class=\"p\">:</span>\n              <span class=\"nt\">args</span><span class=\"p\">:</span>\n                <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">$filename</span>\n                <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">YYYYMMDD</span>\n              <span class=\"nt\">cmd</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">echo</span>\n</pre>\n<pre>$ sudo /etc/init.d/cronifyd start\n$ touch /tmp/testdir/somefile.txt\n$ tail /var/log/cronify/cronify.log\n\ncronify.cronify - Thread-1 - 2013-03-26 17:40:40,485 - INFO - Got result from action {'cmd': 'echo', 'args': ['echo', '/tmp/testdir/somefile.txt', '20130326']} - /tmp/testdir/somefile.txt 20130326\n</pre>\n</div>\n<div id=\"more-complex-configuration-with-multiple-watchers-and-delayed-actions\">\n<h2>More complex configuration with multiple watchers and delayed actions</h2>\n<p>See example.yaml in repository for complete list of accepted configuration</p>\n<p><tt>$ cat /etc/cronify.yaml</tt></p>\n<pre><span class=\"nt\">/tmp/testdir </span><span class=\"p\">:</span>\n    <span class=\"nt\">name </span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Access log watcher</span>\n    <span class=\"nt\">recurse </span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">false</span>\n    <span class=\"nt\">filemasks </span><span class=\"p\">:</span>\n      <span class=\"nt\">access_log_YYYYMMDD.* </span><span class=\"p\">:</span>\n        <span class=\"nt\">actions </span><span class=\"p\">:</span>\n          <span class=\"p-Indicator\">-</span> <span class=\"nt\">processFile </span><span class=\"p\">:</span>\n              <span class=\"nt\">args</span><span class=\"p\">:</span>\n                <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">$filename</span>\n                <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">YYYYMMDD</span>\n              <span class=\"nt\">cmd</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">process</span>\n\n<span class=\"nt\">/tmp/testdir2 </span><span class=\"p\">:</span>\n    <span class=\"nt\">name </span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Other log watcher</span>\n    <span class=\"nt\">recurse </span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n    <span class=\"nt\">filemasks </span><span class=\"p\">:</span>\n      <span class=\"nt\">other_log_YYYYMMDD.* </span><span class=\"p\">:</span>\n         <span class=\"nt\">actions </span><span class=\"p\">:</span>\n          <span class=\"c1\"># Actions to perform on the file in sequence.</span>\n          <span class=\"p-Indicator\">-</span> <span class=\"nt\">processFile </span><span class=\"p\">:</span>\n            <span class=\"c1\"># Do not start action before this time. Action is queued until start_time if triggered prior to it.</span>\n            <span class=\"c1\"># This configuration setting is optional</span>\n            <span class=\"nt\">start_time</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">0800</span>\n            <span class=\"c1\"># Do not start action after this time. Action is queued until next start_time if triggered after end time</span>\n            <span class=\"c1\"># This configuration setting is optional</span>\n            <span class=\"nt\">end_time</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">1000</span>\n            <span class=\"nt\">args</span><span class=\"p\">:</span>\n              <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">$filename</span>\n              <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">YYYYMMDD</span>\n            <span class=\"nt\">cmd</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">process</span>\n</pre>\n</div>\n<div id=\"known-limitations\">\n<h2>Known limitations</h2>\n<ul>\n<li><p>Currently queued actions will be _lost_ upon a service restart.</p>\n</li>\n<li><p>When using recurse, inotify is limited to watching N number of subdirectories in the tree, where N is value of /proc/sys/fs/inotify/max_user_watches. See <a href=\"http://linux.die.net/man/7/inotify\" rel=\"nofollow\">http://linux.die.net/man/7/inotify</a></p>\n<p>User can increase this limit by modifying /proc/sys/fs/inotify/max_user_watches</p>\n</li>\n<li><p>When watching an NFS directory on NFS server side, only events made by the NFS <em>server</em> will be seen by the inotify API and following, cronify itself.</p>\n<p>When watching an NFS directory on NFS client side, no events are seen by inotify at all.</p>\n<p>In other words if you were planning on watching for a file that is created by an NFS <em>client</em>, this is currently not possible.</p>\n</li>\n</ul>\n<a href=\"http://githalytics.com/pkittenis/cronify\" rel=\"nofollow\"><img alt=\"githalytics.com\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08261a2a3526ee54c62bc4d53fce320e9f5c5683/68747470733a2f2f637275656c2d6361726c6f74612e7061676f6461626f782e636f6d2f6631643733623239326565663665333939323035613835643162633736353762\"></a>\n</div>\n\n          </div>"}, "last_serial": 2111093, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d88b0b9fb4a777d1520ae98fb4ebdcaa", "sha256": "fa59559c28a1256e37b176224be4901dede18d7d82f56f6d83418f9a97758e3c"}, "downloads": -1, "filename": "cronify-0.1.tar.gz", "has_sig": false, "md5_digest": "d88b0b9fb4a777d1520ae98fb4ebdcaa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9710, "upload_time": "2013-03-27T11:23:09", "upload_time_iso_8601": "2013-03-27T11:23:09.240541Z", "url": "https://files.pythonhosted.org/packages/e6/aa/9c996027e638d6b6ec0d956edf86f13a01b8e73a02f075e55dd0771dadae/cronify-0.1.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "a5ceefa8e584a9f6a8827b65be52c6c1", "sha256": "377e676f71d4944805ae32d37c5beccd1dc4af12bf15ebf74a50f63b4986207f"}, "downloads": -1, "filename": "cronify-0.12.tar.gz", "has_sig": false, "md5_digest": "a5ceefa8e584a9f6a8827b65be52c6c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11170, "upload_time": "2013-04-17T10:23:53", "upload_time_iso_8601": "2013-04-17T10:23:53.633250Z", "url": "https://files.pythonhosted.org/packages/f8/a3/d8603476d122d2b1a8ca117d51f5eb868e0c025a8ccde793334d4eeff403/cronify-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "69e4958fd5c39ea0e28beb6fd506edf3", "sha256": "c2fbfa861da0895f1f388f892bc89b1f383d6a7d61c40d60e192beb1ddf658e8"}, "downloads": -1, "filename": "cronify-0.13-py2-none-any.whl", "has_sig": false, "md5_digest": "69e4958fd5c39ea0e28beb6fd506edf3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 15975, "upload_time": "2016-05-11T17:56:24", "upload_time_iso_8601": "2016-05-11T17:56:24.510417Z", "url": "https://files.pythonhosted.org/packages/8c/5f/95b9c4e10f15724ee0660072f167ad5a1d2e499ec186480af123c6a58ba7/cronify-0.13-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9f4487aadf96ba0ed8929f0a69a7eaa", "sha256": "6fbd676ecb1716ade159c5e4d9469df91534b83c28f034549235b1f09a0161d5"}, "downloads": -1, "filename": "cronify-0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "f9f4487aadf96ba0ed8929f0a69a7eaa", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 28924, "upload_time": "2016-05-11T17:57:35", "upload_time_iso_8601": "2016-05-11T17:57:35.802220Z", "url": "https://files.pythonhosted.org/packages/31/c9/97fa09d67f74eb40191b93fbedeb4dd511691f66e7a6b04782663ceecb26/cronify-0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ded46ead7fb76f19be97e78dbab79de", "sha256": "2a4f7690a1d23add92a91026bccd7303e6682cf3cabfa1d97bef495dec108114"}, "downloads": -1, "filename": "cronify-0.13.tar.gz", "has_sig": false, "md5_digest": "5ded46ead7fb76f19be97e78dbab79de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12684, "upload_time": "2016-05-11T17:51:24", "upload_time_iso_8601": "2016-05-11T17:51:24.623988Z", "url": "https://files.pythonhosted.org/packages/36/34/0c8f2d8fafbc6686fc883d5048961daaf42bfd6c630ecb3027dd8780b5cd/cronify-0.13.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "69e4958fd5c39ea0e28beb6fd506edf3", "sha256": "c2fbfa861da0895f1f388f892bc89b1f383d6a7d61c40d60e192beb1ddf658e8"}, "downloads": -1, "filename": "cronify-0.13-py2-none-any.whl", "has_sig": false, "md5_digest": "69e4958fd5c39ea0e28beb6fd506edf3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 15975, "upload_time": "2016-05-11T17:56:24", "upload_time_iso_8601": "2016-05-11T17:56:24.510417Z", "url": "https://files.pythonhosted.org/packages/8c/5f/95b9c4e10f15724ee0660072f167ad5a1d2e499ec186480af123c6a58ba7/cronify-0.13-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9f4487aadf96ba0ed8929f0a69a7eaa", "sha256": "6fbd676ecb1716ade159c5e4d9469df91534b83c28f034549235b1f09a0161d5"}, "downloads": -1, "filename": "cronify-0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "f9f4487aadf96ba0ed8929f0a69a7eaa", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 28924, "upload_time": "2016-05-11T17:57:35", "upload_time_iso_8601": "2016-05-11T17:57:35.802220Z", "url": "https://files.pythonhosted.org/packages/31/c9/97fa09d67f74eb40191b93fbedeb4dd511691f66e7a6b04782663ceecb26/cronify-0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ded46ead7fb76f19be97e78dbab79de", "sha256": "2a4f7690a1d23add92a91026bccd7303e6682cf3cabfa1d97bef495dec108114"}, "downloads": -1, "filename": "cronify-0.13.tar.gz", "has_sig": false, "md5_digest": "5ded46ead7fb76f19be97e78dbab79de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12684, "upload_time": "2016-05-11T17:51:24", "upload_time_iso_8601": "2016-05-11T17:51:24.623988Z", "url": "https://files.pythonhosted.org/packages/36/34/0c8f2d8fafbc6686fc883d5048961daaf42bfd6c630ecb3027dd8780b5cd/cronify-0.13.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:14 2020"}