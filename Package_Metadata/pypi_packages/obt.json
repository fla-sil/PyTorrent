{"info": {"author": "Mats Byrkjeland", "author_email": "matsbyr@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "The Oslo-Bergen Tagger for Python\n=================================\n\nThis is a Python library for `The Oslo-Bergen\nTagger <http://www.tekstlab.uio.no/obt-ny/>`__, which parses the output\nof the tagger to a friendly format. Only Python 3 is supported at this\ntime.\n\nThe library is in beta. See `Roadmap <#roadmap>`__ for things that need\nto get implemented before a v1.0.0 can be released.\n\nInstallation\n------------\n\nYou need to have The Oslo-Bergen Tagger installed, and the environment\nvariable ``OBT_PATH`` set to the path of its installation directory. You\ncan use the provided code snippet below, or install it using the\ninstructions in `The-Oslo-Bergen-Tagger GitHub\nrepository <https://github.com/noklesta/The-Oslo-Bergen-Tagger>`__. The\nfollowing code snippet installs it in your home directory. If you want\nto install it somewhere else, you can change the ``INSTALL_DIR``\nvariable on the first line to your preferred installation directory.\n\n.. code:: bash\n\n    INSTALL_DIR=$HOME\n    THIS_DIR=$PWD\n    cd $INSTALL_DIR\n    git clone git@github.com:noklesta/The-Oslo-Bergen-Tagger.git\n    cd The-Oslo-Bergen-Tagger\n    ./bootstrap.sh\n    export OBT_PATH=$INSTALL_DIR/The-Oslo-Bergen-Tagger\n    echo 'export OBT_PATH=$OBT_PATH' >> $HOME/.bashrc\n    cd $THIS_DIR\n\nYou can then install this Python library with pip. To install for all\nusers, do:\n\n.. code:: bash\n\n    sudo pip3 install obt\n\nTo just install for your user, do:\n\n.. code:: bash\n\n    pip3 install --user obt\n\nAnd you are good to go!\n\nUsage\n-----\n\nFirst, import the library\n\n.. code:: python\n\n    import obt\n\nThen, you can tag a string by passing it to the ``tag_bm`` function:\n\n.. code:: python\n\n    my_string = \"Jeg er streng.\"\n    tags = obt.tag_bm(my_string)\n\nOr you can pass a file name using the ``file`` keyword argument:\n\n.. code:: python\n\n    tags = obt.tag_bm(file=\"my_document.txt\")\n\nThe resulting ``tags`` will be an array of tag objects, like so:\n\n.. code:: python\n\n    [\n      {\n        \"tall\": \"ent\",\n        \"type\": \"pers hum\",\n        \"base\": \"jeg\",\n        \"person\": \"1\",\n        \"word_tag\": \"<jeg>\",\n        \"kasus\": \"nom\",\n        \"raw_tags\": \"pron ent pers hum nom 1\",\n        \"word\": \"Jeg\",\n        \"ordklasse\": \"pron\"\n      },\n      {\n        \"word_tag\": \"<er>\",\n        \"base\": \"v\\u00e6re\",\n        \"tilleggstagger\": [\n          \"a5\",\n          \"pr1\",\n          \"pr2\",\n          \"<aux1/perf_part>\"\n        ],\n        \"tid\": \"pres\",\n        \"raw_tags\": \"verb pres a5 pr1 pr2 <aux1/perf_part>\",\n        \"word\": \"er\",\n        \"ordklasse\": \"verb\"\n      },\n      {\n        \"type\": \"appell\",\n        \"best\": \"ub\",\n        \"base\": \"streng\",\n        \"word_tag\": \"<streng>\",\n        \"tall\": \"ent\",\n        \"ordklasse\": \"subst\",\n        \"raw_tags\": \"subst appell mask ub ent\",\n        \"word\": \"streng\",\n        \"kj\\u00f8nn\": \"mask\"\n      },\n      {\n        \"word_tag\": \"<.>\",\n        \"base\": \"$.\",\n        \"tilleggstagger\": [\n          \"<<<\",\n          \"<punkt>\",\n          \"<<<\"\n        ],\n        \"raw_tags\": \"clb <<< <punkt> <<<\",\n        \"word\": \".\",\n        \"ordklasse\": \"clb\"\n      }\n    ]\n\nYou can easily save this to a JSON file with the ``obt.save_json``\nfunction:\n\n.. code:: python\n\n    obt.save_json(tags, 'my_tags.json')\n\nFormat\n------\n\nA documentation of the tag format will come here.\n\nRoadmap\n-------\n\nBefore a v1.0.0 release, the following boxes should be checked: - [ ]\nPut \"tilleggstagger\" in proper items in tags object. - [ ] Implement\nfunction for ``./tag-nostat-bm.sh`` from\nhttps://github.com/noklesta/The-Oslo-Bergen-Tagger - [ ] Implement\nfunction for ``./tag-nostat-nn.sh`` from\nhttps://github.com/noklesta/The-Oslo-Bergen-Tagger - [ ] Python 2\nsupport", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/draperunner/obt", "keywords": "pos-tagging nlp pos", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "obt", "package_url": "https://pypi.org/project/obt/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/obt/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/draperunner/obt"}, "release_url": "https://pypi.org/project/obt/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A Python library for The Oslo-Bergen Tagger", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a Python library for <a href=\"http://www.tekstlab.uio.no/obt-ny/\" rel=\"nofollow\">The Oslo-Bergen\nTagger</a>, which parses the output\nof the tagger to a friendly format. Only Python 3 is supported at this\ntime.</p>\n<p>The library is in beta. See <a href=\"#roadmap\" rel=\"nofollow\">Roadmap</a> for things that need\nto get implemented before a v1.0.0 can be released.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You need to have The Oslo-Bergen Tagger installed, and the environment\nvariable <tt>OBT_PATH</tt> set to the path of its installation directory. You\ncan use the provided code snippet below, or install it using the\ninstructions in <a href=\"https://github.com/noklesta/The-Oslo-Bergen-Tagger\" rel=\"nofollow\">The-Oslo-Bergen-Tagger GitHub\nrepository</a>. The\nfollowing code snippet installs it in your home directory. If you want\nto install it somewhere else, you can change the <tt>INSTALL_DIR</tt>\nvariable on the first line to your preferred installation directory.</p>\n<pre><span class=\"nv\">INSTALL_DIR</span><span class=\"o\">=</span><span class=\"nv\">$HOME</span>\n<span class=\"nv\">THIS_DIR</span><span class=\"o\">=</span><span class=\"nv\">$PWD</span>\n<span class=\"nb\">cd</span> <span class=\"nv\">$INSTALL_DIR</span>\ngit clone git@github.com:noklesta/The-Oslo-Bergen-Tagger.git\n<span class=\"nb\">cd</span> The-Oslo-Bergen-Tagger\n./bootstrap.sh\n<span class=\"nb\">export</span> <span class=\"nv\">OBT_PATH</span><span class=\"o\">=</span><span class=\"nv\">$INSTALL_DIR</span>/The-Oslo-Bergen-Tagger\n<span class=\"nb\">echo</span> <span class=\"s1\">'export OBT_PATH=$OBT_PATH'</span> &gt;&gt; <span class=\"nv\">$HOME</span>/.bashrc\n<span class=\"nb\">cd</span> <span class=\"nv\">$THIS_DIR</span>\n</pre>\n<p>You can then install this Python library with pip. To install for all\nusers, do:</p>\n<pre>sudo pip3 install obt\n</pre>\n<p>To just install for your user, do:</p>\n<pre>pip3 install --user obt\n</pre>\n<p>And you are good to go!</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First, import the library</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">obt</span>\n</pre>\n<p>Then, you can tag a string by passing it to the <tt>tag_bm</tt> function:</p>\n<pre><span class=\"n\">my_string</span> <span class=\"o\">=</span> <span class=\"s2\">\"Jeg er streng.\"</span>\n<span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"n\">obt</span><span class=\"o\">.</span><span class=\"n\">tag_bm</span><span class=\"p\">(</span><span class=\"n\">my_string</span><span class=\"p\">)</span>\n</pre>\n<p>Or you can pass a file name using the <tt>file</tt> keyword argument:</p>\n<pre><span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"n\">obt</span><span class=\"o\">.</span><span class=\"n\">tag_bm</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"o\">=</span><span class=\"s2\">\"my_document.txt\"</span><span class=\"p\">)</span>\n</pre>\n<p>The resulting <tt>tags</tt> will be an array of tag objects, like so:</p>\n<pre><span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"s2\">\"tall\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ent\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pers hum\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"base\"</span><span class=\"p\">:</span> <span class=\"s2\">\"jeg\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"person\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"word_tag\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;jeg&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"kasus\"</span><span class=\"p\">:</span> <span class=\"s2\">\"nom\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"raw_tags\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pron ent pers hum nom 1\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"word\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Jeg\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ordklasse\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pron\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"s2\">\"word_tag\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;er&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"base\"</span><span class=\"p\">:</span> <span class=\"s2\">\"v</span><span class=\"se\">\\u00e6</span><span class=\"s2\">re\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tilleggstagger\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"a5\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"pr1\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"pr2\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"&lt;aux1/perf_part&gt;\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"tid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pres\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"raw_tags\"</span><span class=\"p\">:</span> <span class=\"s2\">\"verb pres a5 pr1 pr2 &lt;aux1/perf_part&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"word\"</span><span class=\"p\">:</span> <span class=\"s2\">\"er\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ordklasse\"</span><span class=\"p\">:</span> <span class=\"s2\">\"verb\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"appell\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"best\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ub\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"base\"</span><span class=\"p\">:</span> <span class=\"s2\">\"streng\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"word_tag\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;streng&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tall\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ent\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ordklasse\"</span><span class=\"p\">:</span> <span class=\"s2\">\"subst\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"raw_tags\"</span><span class=\"p\">:</span> <span class=\"s2\">\"subst appell mask ub ent\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"word\"</span><span class=\"p\">:</span> <span class=\"s2\">\"streng\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"kj</span><span class=\"se\">\\u00f8</span><span class=\"s2\">nn\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mask\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"s2\">\"word_tag\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;.&gt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"base\"</span><span class=\"p\">:</span> <span class=\"s2\">\"$.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"tilleggstagger\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"&lt;&lt;&lt;\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"&lt;punkt&gt;\"</span><span class=\"p\">,</span>\n      <span class=\"s2\">\"&lt;&lt;&lt;\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">\"raw_tags\"</span><span class=\"p\">:</span> <span class=\"s2\">\"clb &lt;&lt;&lt; &lt;punkt&gt; &lt;&lt;&lt;\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"word\"</span><span class=\"p\">:</span> <span class=\"s2\">\".\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"ordklasse\"</span><span class=\"p\">:</span> <span class=\"s2\">\"clb\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>You can easily save this to a JSON file with the <tt>obt.save_json</tt>\nfunction:</p>\n<pre><span class=\"n\">obt</span><span class=\"o\">.</span><span class=\"n\">save_json</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"s1\">'my_tags.json'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"format\">\n<h2>Format</h2>\n<p>A documentation of the tag format will come here.</p>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<p>Before a v1.0.0 release, the following boxes should be checked: - [ ]\nPut \u201ctilleggstagger\u201d in proper items in tags object. - [ ] Implement\nfunction for <tt><span class=\"pre\">./tag-nostat-bm.sh</span></tt> from\n<a href=\"https://github.com/noklesta/The-Oslo-Bergen-Tagger\" rel=\"nofollow\">https://github.com/noklesta/The-Oslo-Bergen-Tagger</a> - [ ] Implement\nfunction for <tt><span class=\"pre\">./tag-nostat-nn.sh</span></tt> from\n<a href=\"https://github.com/noklesta/The-Oslo-Bergen-Tagger\" rel=\"nofollow\">https://github.com/noklesta/The-Oslo-Bergen-Tagger</a> - [ ] Python 2\nsupport</p>\n</div>\n\n          </div>"}, "last_serial": 2918442, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f7d3d8f69471e62f5acd173a59c7babb", "sha256": "472a6ff553dbccf69250b3242e9a04599cd7d07ff3c6616ea4b4fe454cc2ca48"}, "downloads": -1, "filename": "obt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f7d3d8f69471e62f5acd173a59c7babb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4309, "upload_time": "2017-06-01T22:37:39", "upload_time_iso_8601": "2017-06-01T22:37:39.162575Z", "url": "https://files.pythonhosted.org/packages/8a/8e/5b47b6a88f031683323c59f449b752b15ee4fb302c33c05fbdbb61d10791/obt-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f7d3d8f69471e62f5acd173a59c7babb", "sha256": "472a6ff553dbccf69250b3242e9a04599cd7d07ff3c6616ea4b4fe454cc2ca48"}, "downloads": -1, "filename": "obt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f7d3d8f69471e62f5acd173a59c7babb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4309, "upload_time": "2017-06-01T22:37:39", "upload_time_iso_8601": "2017-06-01T22:37:39.162575Z", "url": "https://files.pythonhosted.org/packages/8a/8e/5b47b6a88f031683323c59f449b752b15ee4fb302c33c05fbdbb61d10791/obt-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:45 2020"}