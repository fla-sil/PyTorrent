{"info": {"author": "Quanhu Sheng", "author_email": "quanhu.sheng.1@vumc.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# CPDSeqer\n\nThis package is used to do CPD sequence data analysis.\n\n# Prerequisites\n\nInstall tabix\n\n```\napt-get install -y tabix\n```\n\n# Installation\n\nInstall python main package\n\n```\npip install git+git://github.com/shengqh/cpdseqer.git\n```\n\n# Usage\n\n## Demultiplex fastq file\n\n```\nusage: cpdseqer demultiplex [-h] -i [INPUT] -o [OUTPUT] -b [BARCODEFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i [INPUT], --input [INPUT]\n                        Input fastq gzipped file\n  -o [OUTPUT], --output [OUTPUT]\n                        Output folder\n  -b [BARCODEFILE], --barcodeFile [BARCODEFILE]\n                        Tab-delimited file, first column is barcode, second\n                        column is sample name\n```\nfor example:\n```\ncpdseqer demultiplex -i sample.fastq.gz -o . -b barcode.txt\n```\n\nExample of [barcode.txt](https://github.com/shengqh/cpdseqer/raw/master/data/barcode.txt), columns are separated by tab\n```\nATCGCGAT        Control\nGAACTGAT        UV\n```\n\n## Align reads to genome using bowtie2\n\n```\nbowtie2 -p 8  -x hg38/bowtie2_index_2.3.5.1/GRCh38.p12.genome -U Control.fastq.gz \\\n  --sam-RG ID:Control --sam-RG LB:Control --sam-RG SM:Control --sam-RG PL:ILLUMINA \\\n  -S Control.sam 2> Control.log\n  \nsamtools view -Shu -F 256 Control.sam | samtools sort -o Control.bam -T Control -\n\nsamtools index Control.bam\n\nrm Control.sam\n```\n\nYou can download hg38 bowtie2 index files:\n\n```\nmkdir hg38\ncd hg38\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/hg38_bowtie2.tar.gz\ntar -xzvf hg38_bowtie2.tar.gz\ncd ..\n```\n\n## Extract dinucleotide from bam file\n\n```\nusage: cpdseqer bam2dinucleotide [-h] -i [INPUT] -g [GENOME_SEQ_FILE]\n                                 [-q [MAPPING_QUALITY]] -o [OUTPUT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i [INPUT], --input [INPUT]\n                        Input BAM file\n  -g [GENOME_SEQ_FILE], --genome_seq_file [GENOME_SEQ_FILE]\n                        Input genome seq file\n  -q [MAPPING_QUALITY], --mapping_quality [MAPPING_QUALITY]\n                        Minimum mapping quality of read (default 20)\n  -o [OUTPUT], --output [OUTPUT]\n                        Output file name\n```\n\nfor example:\n\n```\ncpdseqer bam2dinucleotide \\\n  -i Control.bam \\\n  -g hg38/bowtie2_index_2.3.4.1/GRCh38.p12.genome.fa \\\n  -o Control.dinucleotide.bed.bgz\n```\n\nYou can download bam files:\n\n```\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/UV.bam\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/UV.bam.bai\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/Control.bam\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/Control.bam.bai\n```\n\n## Get statistic based on bed file\n\n```\nusage: cpdseqer statistic [-h] -i [INPUT] -c [COORDINATE_LIST_FILE] [-s]\n                          [--category_index CATEGORY_INDEX] [--add_chr] -o\n                          [OUTPUT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i [INPUT], --input [INPUT]\n                        Input dinucleotide list file, first column is file\n                        location, second column is file name\n  -c [COORDINATE_LIST_FILE], --coordinate_list_file [COORDINATE_LIST_FILE]\n                        Input coordinate list file, first column is file\n                        location, second column is file name\n  -s, --space           Use space rather than tab in coordinate files\n  --category_index CATEGORY_INDEX\n                        Zero-based category column index in coordinate file\n  --add_chr             Add chr in chromosome name in coordinate file\n  -o [OUTPUT], --output [OUTPUT]\n                        Output file name\n\n```\n\nfor example:\n\n```\ncpdseqer statistic --category_index 3 \\\n  -i cpd__fileList1.list \\\n  -c cpd__fileList2.list \\\n  -o cpd.dinucleotide.statistic.tsv\n```\n\ncpd__fileList1.list (separated by tab)\n\n```\nControl.dinucleotide.bed.bgz      Control\nUV.dinucleotide.bed.bgz           UV\n```\n\ncpd__fileList2.list (separated by tab)\n\n```\nhg38_promoter.bed      Promoter\nhg38_tf.bed            TFBinding\n```\n\nYou can download example files as following scripts. The hg38_promoter.bed contains three columns only. So, Promoter (from  cpd__fileList2.list definition) will be used as category name for all entries in the hg38_promoter.bed. The hg38_tf.bed contians four columns. The forth column in hg38_tf.bed indicates TF name which will be used as category name (--category_index 3) instead of TFBinding.\n\n```\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/UV.dinucleotide.bed.bgz\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/UV.dinucleotide.bed.bgz.tbi\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/Control.dinucleotide.bed.bgz\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/Control.dinucleotide.bed.bgz.tbi\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/cpd__fileList1.list\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/cpd__fileList2.list\nwget https://github.com/shengqh/cpdseqer/raw/master/data/hg38_promoter.bed\nwget https://github.com/shengqh/cpdseqer/raw/master/data/hg38_tf.bed\n\n\n```\n\n# Running cpdseqer using singularity\n\nWe also build docker container for cpdseqer which can be used by singularity.\n\n## Running directly\n\n```\nsingularity exec -e docker://shengqh/cpdseqer bowtie2 -h\nsingularity exec -e docker://shengqh/cpdseqer cpdseqer -h\n```\n\n## Convert docker image to singularity image first\n\n```\nsingularity build cpdseqer.simg docker://shengqh/cpdseqer\nsingularity exec -e cpdseqer.simg bowtie2 -h\nsingularity exec -e cpdseqer.simg cpdseqer -h\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/shengqh/cpdseqer/archive/v0.2.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shengqh/cpdseqer", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cpdseqer", "package_url": "https://pypi.org/project/cpdseqer/", "platform": "", "project_url": "https://pypi.org/project/cpdseqer/", "project_urls": {"Download": "https://github.com/shengqh/cpdseqer/archive/v0.2.0.tar.gz", "Homepage": "https://github.com/shengqh/cpdseqer"}, "release_url": "https://pypi.org/project/cpdseqer/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "CPDseq data analysis", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>CPDSeqer</h1>\n<p>This package is used to do CPD sequence data analysis.</p>\n<h1>Prerequisites</h1>\n<p>Install tabix</p>\n<pre><code>apt-get install -y tabix\n</code></pre>\n<h1>Installation</h1>\n<p>Install python main package</p>\n<pre><code>pip install git+git://github.com/shengqh/cpdseqer.git\n</code></pre>\n<h1>Usage</h1>\n<h2>Demultiplex fastq file</h2>\n<pre><code>usage: cpdseqer demultiplex [-h] -i [INPUT] -o [OUTPUT] -b [BARCODEFILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i [INPUT], --input [INPUT]\n                        Input fastq gzipped file\n  -o [OUTPUT], --output [OUTPUT]\n                        Output folder\n  -b [BARCODEFILE], --barcodeFile [BARCODEFILE]\n                        Tab-delimited file, first column is barcode, second\n                        column is sample name\n</code></pre>\n<p>for example:</p>\n<pre><code>cpdseqer demultiplex -i sample.fastq.gz -o . -b barcode.txt\n</code></pre>\n<p>Example of <a href=\"https://github.com/shengqh/cpdseqer/raw/master/data/barcode.txt\" rel=\"nofollow\">barcode.txt</a>, columns are separated by tab</p>\n<pre><code>ATCGCGAT        Control\nGAACTGAT        UV\n</code></pre>\n<h2>Align reads to genome using bowtie2</h2>\n<pre><code>bowtie2 -p 8  -x hg38/bowtie2_index_2.3.5.1/GRCh38.p12.genome -U Control.fastq.gz \\\n  --sam-RG ID:Control --sam-RG LB:Control --sam-RG SM:Control --sam-RG PL:ILLUMINA \\\n  -S Control.sam 2&gt; Control.log\n  \nsamtools view -Shu -F 256 Control.sam | samtools sort -o Control.bam -T Control -\n\nsamtools index Control.bam\n\nrm Control.sam\n</code></pre>\n<p>You can download hg38 bowtie2 index files:</p>\n<pre><code>mkdir hg38\ncd hg38\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/hg38_bowtie2.tar.gz\ntar -xzvf hg38_bowtie2.tar.gz\ncd ..\n</code></pre>\n<h2>Extract dinucleotide from bam file</h2>\n<pre><code>usage: cpdseqer bam2dinucleotide [-h] -i [INPUT] -g [GENOME_SEQ_FILE]\n                                 [-q [MAPPING_QUALITY]] -o [OUTPUT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i [INPUT], --input [INPUT]\n                        Input BAM file\n  -g [GENOME_SEQ_FILE], --genome_seq_file [GENOME_SEQ_FILE]\n                        Input genome seq file\n  -q [MAPPING_QUALITY], --mapping_quality [MAPPING_QUALITY]\n                        Minimum mapping quality of read (default 20)\n  -o [OUTPUT], --output [OUTPUT]\n                        Output file name\n</code></pre>\n<p>for example:</p>\n<pre><code>cpdseqer bam2dinucleotide \\\n  -i Control.bam \\\n  -g hg38/bowtie2_index_2.3.4.1/GRCh38.p12.genome.fa \\\n  -o Control.dinucleotide.bed.bgz\n</code></pre>\n<p>You can download bam files:</p>\n<pre><code>wget https://cqsweb.app.vumc.org/download1/cpdseqer/UV.bam\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/UV.bam.bai\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/Control.bam\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/Control.bam.bai\n</code></pre>\n<h2>Get statistic based on bed file</h2>\n<pre><code>usage: cpdseqer statistic [-h] -i [INPUT] -c [COORDINATE_LIST_FILE] [-s]\n                          [--category_index CATEGORY_INDEX] [--add_chr] -o\n                          [OUTPUT]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i [INPUT], --input [INPUT]\n                        Input dinucleotide list file, first column is file\n                        location, second column is file name\n  -c [COORDINATE_LIST_FILE], --coordinate_list_file [COORDINATE_LIST_FILE]\n                        Input coordinate list file, first column is file\n                        location, second column is file name\n  -s, --space           Use space rather than tab in coordinate files\n  --category_index CATEGORY_INDEX\n                        Zero-based category column index in coordinate file\n  --add_chr             Add chr in chromosome name in coordinate file\n  -o [OUTPUT], --output [OUTPUT]\n                        Output file name\n\n</code></pre>\n<p>for example:</p>\n<pre><code>cpdseqer statistic --category_index 3 \\\n  -i cpd__fileList1.list \\\n  -c cpd__fileList2.list \\\n  -o cpd.dinucleotide.statistic.tsv\n</code></pre>\n<p>cpd__fileList1.list (separated by tab)</p>\n<pre><code>Control.dinucleotide.bed.bgz      Control\nUV.dinucleotide.bed.bgz           UV\n</code></pre>\n<p>cpd__fileList2.list (separated by tab)</p>\n<pre><code>hg38_promoter.bed      Promoter\nhg38_tf.bed            TFBinding\n</code></pre>\n<p>You can download example files as following scripts. The hg38_promoter.bed contains three columns only. So, Promoter (from  cpd__fileList2.list definition) will be used as category name for all entries in the hg38_promoter.bed. The hg38_tf.bed contians four columns. The forth column in hg38_tf.bed indicates TF name which will be used as category name (--category_index 3) instead of TFBinding.</p>\n<pre><code>wget https://cqsweb.app.vumc.org/download1/cpdseqer/UV.dinucleotide.bed.bgz\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/UV.dinucleotide.bed.bgz.tbi\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/Control.dinucleotide.bed.bgz\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/Control.dinucleotide.bed.bgz.tbi\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/cpd__fileList1.list\nwget https://cqsweb.app.vumc.org/download1/cpdseqer/cpd__fileList2.list\nwget https://github.com/shengqh/cpdseqer/raw/master/data/hg38_promoter.bed\nwget https://github.com/shengqh/cpdseqer/raw/master/data/hg38_tf.bed\n\n\n</code></pre>\n<h1>Running cpdseqer using singularity</h1>\n<p>We also build docker container for cpdseqer which can be used by singularity.</p>\n<h2>Running directly</h2>\n<pre><code>singularity exec -e docker://shengqh/cpdseqer bowtie2 -h\nsingularity exec -e docker://shengqh/cpdseqer cpdseqer -h\n</code></pre>\n<h2>Convert docker image to singularity image first</h2>\n<pre><code>singularity build cpdseqer.simg docker://shengqh/cpdseqer\nsingularity exec -e cpdseqer.simg bowtie2 -h\nsingularity exec -e cpdseqer.simg cpdseqer -h\n</code></pre>\n\n          </div>"}, "last_serial": 6973188, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "4248306be7ebc04596187f08d4b0a740", "sha256": "7b5865d1ca397a91459b4eac33922b65980defb60ae51475ca50f6d1fef51d91"}, "downloads": -1, "filename": "cpdseqer-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4248306be7ebc04596187f08d4b0a740", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 423094, "upload_time": "2020-03-03T19:47:22", "upload_time_iso_8601": "2020-03-03T19:47:22.265459Z", "url": "https://files.pythonhosted.org/packages/2f/8d/e04f98dd235d1ffb5cac0c524fb9b2764792e2723da968cab6a80a4f1d9e/cpdseqer-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2b84245bbb346f62065fc3c8f9ad6417", "sha256": "ff7800bb65c65529f09ee92d60dbb1f78b9c50eedcda2fd0bcd21eec57718b17"}, "downloads": -1, "filename": "cpdseqer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2b84245bbb346f62065fc3c8f9ad6417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17986187, "upload_time": "2020-04-07T21:59:43", "upload_time_iso_8601": "2020-04-07T21:59:43.624828Z", "url": "https://files.pythonhosted.org/packages/2f/38/3d1c889e06a14013c29e29a0f1c46f0b4b4e10b060114c71e5a9d733a65f/cpdseqer-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b84245bbb346f62065fc3c8f9ad6417", "sha256": "ff7800bb65c65529f09ee92d60dbb1f78b9c50eedcda2fd0bcd21eec57718b17"}, "downloads": -1, "filename": "cpdseqer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2b84245bbb346f62065fc3c8f9ad6417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17986187, "upload_time": "2020-04-07T21:59:43", "upload_time_iso_8601": "2020-04-07T21:59:43.624828Z", "url": "https://files.pythonhosted.org/packages/2f/38/3d1c889e06a14013c29e29a0f1c46f0b4b4e10b060114c71e5a9d733a65f/cpdseqer-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:41 2020"}