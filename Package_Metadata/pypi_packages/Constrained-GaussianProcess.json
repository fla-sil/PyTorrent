{"info": {"author": "Liaowang Huang", "author_email": "liahuang@student.ethz.ch", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Constrained_GaussianProcess\n\nConstrained_GaussianProcess is able to deal with linear inequality constraints in Gaussian Process frameworks. Check out the paper [Finite-Dimensional Gaussian Approximation with Linear Inequality Constraints](https://epubs.siam.org/doi/pdf/10.1137/17M1153157) for a detail explanation.\n\n![A toy example](https://github.com/liaowangh/LeetCode/raw/master/HMC.png)\n\nThere are also [Hamiltonian Monte Carlo](https://arxiv.org/abs/1208.4118) method and Gibbs sampling method to sample from truncated multivariate Gaussian.\n\n\n\n## Requirement\n\nThe code requires [Python 3.7](https://www.python.org/downloads/release/python-373/) , as well as the following python libraries:\n\n- [cvxpy](https://www.cvxpy.org/#)==1.0.25\n- numpy==1.17.3\n- scipy==1.2.1\n\nThose modules can be installed using: `pip install numpy scipy cvxpy` or `pip install -r requirements.txt`.\n\n\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install Constrained_GaussianProcess.\n\n```bash\npip install Constrained-GaussianProcess\n```\n\n\n\n## Usage\n\n\n\n```python\nfrom Constrained_GaussianProcess import ConstrainedGP\nm=30\n# specify the constraints\nconstraints={'increasing': True, 'bounded': [0,1], 'convex': False}  \ninterval=[0,1]\nGp = ConstrainedGP(m, constraints=constraints, interval=interval)\n\n# Training data\nx_train = np.array([0.25, 0.5, 0.75])\ny_train = norm().cdf((x-0.5)/0.2)\n\n# the MCMC methods are used to approximate the posterior distribution, \n# so apart from training data, 'method' ('HMC' or 'Gibbs'), required number of samples \n# 'n' and the burn in numbers 'burn_in' should be specified when fitting the data.\nGp.fit_gp(x_train, y_train, n=100, burn_in=100, method='HMC')\n\nx_test = np.arange(0, 1 + 0.01, 0.5)\ny_pred = Gp.mean(x_test)  # get the conditional mean\n```\n\nSampling from <img src=\"https://render.githubusercontent.com/render/math?math=X\\sim \\mathcal{N}(\\mu, \\Sigma)\"> with constraints ![f\\cdot X+g\\ge 0](https://render.githubusercontent.com/render/math?math=f%5Ccdot%20X%2Bg%5Cge%200)\n\n```python\nfrom Constrained_GaussianProcess import tmg\n\n# set the number of samples and number in burn in phase\nn = 150  \nburn_in = 30\n\n#Define the covariance matrix and mean vector\nM = np.array([[0.5, -0.4], [-0.4, 0.5]])  \nmu = np.array([0,0])\n\n# Set initial point for the Markov chain\ninitial = np.array([4,1])\n\n# Define two linear constraints\nf = np.array([[1,1],[1,0]])\ng = np.array([0,0])\n\n# Sample \nsamples = tmg(n, mu, M, initial, f, g, burn_in=burn_in)\n```\n\n\n\n\n\n## Acknowledment\n\nThe `HMC` method for MCMC is based on  the R package [tmg](https://cran.r-project.org/web/packages/tmg/index.html).\n\n\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.inf.ethz.ch/mmutny/contrained-gps", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Constrained-GaussianProcess", "package_url": "https://pypi.org/project/Constrained-GaussianProcess/", "platform": "", "project_url": "https://pypi.org/project/Constrained-GaussianProcess/", "project_urls": {"Homepage": "https://gitlab.inf.ethz.ch/mmutny/contrained-gps"}, "release_url": "https://pypi.org/project/Constrained-GaussianProcess/0.1.1/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Implementation of Python package for Fitting and Inference of Linearly Constrained Gaussian Processes", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Constrained_GaussianProcess</h1>\n<p>Constrained_GaussianProcess is able to deal with linear inequality constraints in Gaussian Process frameworks. Check out the paper <a href=\"https://epubs.siam.org/doi/pdf/10.1137/17M1153157\" rel=\"nofollow\">Finite-Dimensional Gaussian Approximation with Linear Inequality Constraints</a> for a detail explanation.</p>\n<p><img alt=\"A toy example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/256ea147b50f919cc9a7c576d75646a80c980a0c/68747470733a2f2f6769746875622e636f6d2f6c69616f77616e67682f4c656574436f64652f7261772f6d61737465722f484d432e706e67\"></p>\n<p>There are also <a href=\"https://arxiv.org/abs/1208.4118\" rel=\"nofollow\">Hamiltonian Monte Carlo</a> method and Gibbs sampling method to sample from truncated multivariate Gaussian.</p>\n<h2>Requirement</h2>\n<p>The code requires <a href=\"https://www.python.org/downloads/release/python-373/\" rel=\"nofollow\">Python 3.7</a> , as well as the following python libraries:</p>\n<ul>\n<li><a href=\"https://www.cvxpy.org/#\" rel=\"nofollow\">cvxpy</a>==1.0.25</li>\n<li>numpy==1.17.3</li>\n<li>scipy==1.2.1</li>\n</ul>\n<p>Those modules can be installed using: <code>pip install numpy scipy cvxpy</code> or <code>pip install -r requirements.txt</code>.</p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install Constrained_GaussianProcess.</p>\n<pre>pip install Constrained-GaussianProcess\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">Constrained_GaussianProcess</span> <span class=\"kn\">import</span> <span class=\"n\">ConstrainedGP</span>\n<span class=\"n\">m</span><span class=\"o\">=</span><span class=\"mi\">30</span>\n<span class=\"c1\"># specify the constraints</span>\n<span class=\"n\">constraints</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'increasing'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'bounded'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"s1\">'convex'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">}</span>  \n<span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">Gp</span> <span class=\"o\">=</span> <span class=\"n\">ConstrainedGP</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">constraints</span><span class=\"o\">=</span><span class=\"n\">constraints</span><span class=\"p\">,</span> <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"n\">interval</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Training data</span>\n<span class=\"n\">x_train</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.75</span><span class=\"p\">])</span>\n<span class=\"n\">y_train</span> <span class=\"o\">=</span> <span class=\"n\">norm</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">cdf</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"mf\">0.2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># the MCMC methods are used to approximate the posterior distribution, </span>\n<span class=\"c1\"># so apart from training data, 'method' ('HMC' or 'Gibbs'), required number of samples </span>\n<span class=\"c1\"># 'n' and the burn in numbers 'burn_in' should be specified when fitting the data.</span>\n<span class=\"n\">Gp</span><span class=\"o\">.</span><span class=\"n\">fit_gp</span><span class=\"p\">(</span><span class=\"n\">x_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">burn_in</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'HMC'</span><span class=\"p\">)</span>\n\n<span class=\"n\">x_test</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)</span>\n<span class=\"n\">y_pred</span> <span class=\"o\">=</span> <span class=\"n\">Gp</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(</span><span class=\"n\">x_test</span><span class=\"p\">)</span>  <span class=\"c1\"># get the conditional mean</span>\n</pre>\n<p>Sampling from <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4857c0bcd161b0ff2e04914deff921eb7396bd47/68747470733a2f2f72656e6465722e67697468756275736572636f6e74656e742e636f6d2f72656e6465722f6d6174683f6d6174683d585c73696d205c6d61746863616c7b4e7d285c6d752c205c5369676d6129\"> with constraints <img alt=\"f\\cdot X+g\\ge 0\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6c809d2e94d68310383b8c2a02e26ed7d99feee/68747470733a2f2f72656e6465722e67697468756275736572636f6e74656e742e636f6d2f72656e6465722f6d6174683f6d6174683d6625354363646f742532305825324267253543676525323030\"></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">Constrained_GaussianProcess</span> <span class=\"kn\">import</span> <span class=\"n\">tmg</span>\n\n<span class=\"c1\"># set the number of samples and number in burn in phase</span>\n<span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"mi\">150</span>  \n<span class=\"n\">burn_in</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>\n\n<span class=\"c1\">#Define the covariance matrix and mean vector</span>\n<span class=\"n\">M</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.4</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">]])</span>  \n<span class=\"n\">mu</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Set initial point for the Markov chain</span>\n<span class=\"n\">initial</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Define two linear constraints</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">]])</span>\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Sample </span>\n<span class=\"n\">samples</span> <span class=\"o\">=</span> <span class=\"n\">tmg</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">mu</span><span class=\"p\">,</span> <span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">burn_in</span><span class=\"o\">=</span><span class=\"n\">burn_in</span><span class=\"p\">)</span>\n</pre>\n<h2>Acknowledment</h2>\n<p>The <code>HMC</code> method for MCMC is based on  the R package <a href=\"https://cran.r-project.org/web/packages/tmg/index.html\" rel=\"nofollow\">tmg</a>.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6554889, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "755d04a7d73c97e0787e7ced2d54153a", "sha256": "74c5e4ae2a2295bf0774d5f14df9e1fa84cf69575e70beb86d8750bc72084796"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "755d04a7d73c97e0787e7ced2d54153a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19530, "upload_time": "2020-01-30T09:56:06", "upload_time_iso_8601": "2020-01-30T09:56:06.190257Z", "url": "https://files.pythonhosted.org/packages/ca/bd/39b1bd8eb786c21933adf82e897109af2e2c16c6d73705576a202febb8b4/Constrained_GaussianProcess-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e2ef98b5740eb4ec80d105cf36dce26", "sha256": "87611e141c90c3cb07be711c35db92e573e0712f1a3c81fd0b8358dc13431795"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6e2ef98b5740eb4ec80d105cf36dce26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12915, "upload_time": "2020-01-30T09:56:08", "upload_time_iso_8601": "2020-01-30T09:56:08.586104Z", "url": "https://files.pythonhosted.org/packages/02/b3/196ba12433dcf757c6465d90b6e7ce9fc07f43908da3ff5fc642cb9fd946/Constrained_GaussianProcess-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5e31979e1bd38839e46e23852aa56403", "sha256": "25209ebeb8d366b06cef3c71ce68efa6a87bf0883a3a67308fd2a19aae31899b"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5e31979e1bd38839e46e23852aa56403", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19876, "upload_time": "2020-01-30T11:22:41", "upload_time_iso_8601": "2020-01-30T11:22:41.816634Z", "url": "https://files.pythonhosted.org/packages/da/1e/002f9ee7701f03514f993596ddf3e883169dabb79d19ed6b7c1143c8c490/Constrained_GaussianProcess-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47cb83c97422c8f417823384017f6e3e", "sha256": "f4c8ac467c00554df9097b1fb51c44f401576479dc07d33443131cb44b4a31de"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.2.tar.gz", "has_sig": false, "md5_digest": "47cb83c97422c8f417823384017f6e3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13333, "upload_time": "2020-01-30T11:22:43", "upload_time_iso_8601": "2020-01-30T11:22:43.388658Z", "url": "https://files.pythonhosted.org/packages/d6/b7/d6ed6a5bd2484d0767809346868bdc2cd2839fe4d15268388b72bc89d141/Constrained_GaussianProcess-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "4686ccc2c2794c5a8c4bed15851a90a3", "sha256": "905e8009c2576235800b003da5acec8b8b0e2ef55d1528e535145b332f03b055"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4686ccc2c2794c5a8c4bed15851a90a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19893, "upload_time": "2020-01-30T11:35:29", "upload_time_iso_8601": "2020-01-30T11:35:29.955877Z", "url": "https://files.pythonhosted.org/packages/02/4f/00f63b061b17b29fe2253e4a5f6382cd941cd219b30d9e5d780f1c131415/Constrained_GaussianProcess-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05aacdba8a4a3a8a11cf31d2d8e6b901", "sha256": "8e065e10cbf39bf21494ecab38f7cdd9fb583911cecebaaaec969db227ff804d"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.3.tar.gz", "has_sig": false, "md5_digest": "05aacdba8a4a3a8a11cf31d2d8e6b901", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13351, "upload_time": "2020-01-30T11:35:31", "upload_time_iso_8601": "2020-01-30T11:35:31.586783Z", "url": "https://files.pythonhosted.org/packages/c7/17/91cbd164355209769b0a1501a994101a945a4702dd325e41faedf9c6c151/Constrained_GaussianProcess-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "050d873aaa9ffa963e846d7eee597661", "sha256": "105c77a9fed7263808874589a52ae28af63ac210e460e4e392a501dd010a8b21"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "050d873aaa9ffa963e846d7eee597661", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19886, "upload_time": "2020-01-30T14:29:50", "upload_time_iso_8601": "2020-01-30T14:29:50.262961Z", "url": "https://files.pythonhosted.org/packages/11/11/497d7c62d45dc57dc21ca5f709d6d8d4c93268604f4be5fa9070657160d9/Constrained_GaussianProcess-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a99eb2b099274f90dea81b9377f68e16", "sha256": "d113c7d862e9fa3610fc01cf298f3fc95f31cf3f2327b47d6ea9b827a8efbe58"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a99eb2b099274f90dea81b9377f68e16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13359, "upload_time": "2020-01-30T14:29:51", "upload_time_iso_8601": "2020-01-30T14:29:51.866778Z", "url": "https://files.pythonhosted.org/packages/93/08/752c2baab31e5eded291b702127be40b0b4a3e525fe41cca7734906b75a8/Constrained_GaussianProcess-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "7598fbb0b3e97dd43c811818aca77a64", "sha256": "8c33969be44e5339cb0fdce3ecff118820d6f62a222c68f267e8d6ccaf267f28"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7598fbb0b3e97dd43c811818aca77a64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 37336, "upload_time": "2020-02-01T14:33:02", "upload_time_iso_8601": "2020-02-01T14:33:02.898827Z", "url": "https://files.pythonhosted.org/packages/0b/48/4e38a58a52aa7f6f9e7ee92ef27bbc8c3dc3e6f5733d00d744a6e3e83aaa/Constrained_GaussianProcess-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2e179e1f6fd3ef9a6c32ac1e2c0512e", "sha256": "eb654f7b5cdde012a6d6f813d00ac829569c73d71c4dc1f8f798ad5744c66656"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d2e179e1f6fd3ef9a6c32ac1e2c0512e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14101, "upload_time": "2020-02-01T14:33:04", "upload_time_iso_8601": "2020-02-01T14:33:04.535809Z", "url": "https://files.pythonhosted.org/packages/32/3c/4dc54f18560b982ba680ed8e37e2bdb7b9f9b5c46d9578bb8ffc8af66606/Constrained_GaussianProcess-0.0.5.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "fd9335ff8448036d1ac5f43a5990bebb", "sha256": "78a72311d3a2ce2a09034f7478f172f081b88cc89be35bcf7263c9c3055de415"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fd9335ff8448036d1ac5f43a5990bebb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 20454, "upload_time": "2020-02-01T16:23:07", "upload_time_iso_8601": "2020-02-01T16:23:07.448488Z", "url": "https://files.pythonhosted.org/packages/27/a0/cb17c87201197bf044c2debe9026eaa61d05baaed12acb99ed337cccdd87/Constrained_GaussianProcess-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c127df3fdab5808dfaeb575211ffef3e", "sha256": "1058d348ba826c31a9e23b3f0af0d84d054579eacd1c7a3bad000a2b4489c7e0"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c127df3fdab5808dfaeb575211ffef3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14150, "upload_time": "2020-02-01T16:23:08", "upload_time_iso_8601": "2020-02-01T16:23:08.948813Z", "url": "https://files.pythonhosted.org/packages/d6/5c/681c01245f8ea52fbab75d3a854c3dbe3b47cebdf8b5c2cc7ac8a08e258e/Constrained_GaussianProcess-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6dae3a5a2be3eca9f5850cbe6ae00ef6", "sha256": "92f2b8dbcd359cbb0ce780cfbe8329b57cc9bc967e1d4cf3aed8d2662b42f9b9"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6dae3a5a2be3eca9f5850cbe6ae00ef6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 20477, "upload_time": "2020-02-01T16:43:27", "upload_time_iso_8601": "2020-02-01T16:43:27.712429Z", "url": "https://files.pythonhosted.org/packages/53/ce/112b909196cdb260675b005922db88f4ada04e49ff6943bb35c0caba7c33/Constrained_GaussianProcess-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b121093b39c32971130147f8b54b7984", "sha256": "799673b2d3ee8641385a0aa54ca446a5eb95b34b1b27f5d8994eaef4236d0699"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b121093b39c32971130147f8b54b7984", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14179, "upload_time": "2020-02-01T16:43:29", "upload_time_iso_8601": "2020-02-01T16:43:29.070866Z", "url": "https://files.pythonhosted.org/packages/15/2f/0ec2f0aa5eeb68b4560e32a7e97038d22189bb466271d54709972e250bb2/Constrained_GaussianProcess-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6dae3a5a2be3eca9f5850cbe6ae00ef6", "sha256": "92f2b8dbcd359cbb0ce780cfbe8329b57cc9bc967e1d4cf3aed8d2662b42f9b9"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6dae3a5a2be3eca9f5850cbe6ae00ef6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 20477, "upload_time": "2020-02-01T16:43:27", "upload_time_iso_8601": "2020-02-01T16:43:27.712429Z", "url": "https://files.pythonhosted.org/packages/53/ce/112b909196cdb260675b005922db88f4ada04e49ff6943bb35c0caba7c33/Constrained_GaussianProcess-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b121093b39c32971130147f8b54b7984", "sha256": "799673b2d3ee8641385a0aa54ca446a5eb95b34b1b27f5d8994eaef4236d0699"}, "downloads": -1, "filename": "Constrained_GaussianProcess-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b121093b39c32971130147f8b54b7984", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 14179, "upload_time": "2020-02-01T16:43:29", "upload_time_iso_8601": "2020-02-01T16:43:29.070866Z", "url": "https://files.pythonhosted.org/packages/15/2f/0ec2f0aa5eeb68b4560e32a7e97038d22189bb466271d54709972e250bb2/Constrained_GaussianProcess-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:39 2020"}