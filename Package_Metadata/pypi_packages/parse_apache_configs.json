{"info": {"author": "Miguel Alex Cantu", "author_email": "miguel.cantu@rackspace.com", "bugtrack_url": null, "classifiers": [], "description": "# parse_apache_configs\nA simple python library that will parse apache configs and convert them to a python data structure.\n\n====================\nparse_apache_configs\n====================\nA simple python library that will parse apache configs and convert them to a python data structure.\nThis will then allow the configs to be manipulated programatically.\n\n\n==============\nMain Functions\n==============\n\nTo use:\n\n.. code-block:: python\n  \n    from parse_apache_configs import parse_config\n\nParse the apache config via file path, and return a python object representation:\n\n.. code-block:: python\n\n    apache_parse_obj = parse_config.ParseApacheConfig(apache_config_path=\"/some/path/to/file\")\n    apache_config = apache_parse_obj.parse_config()\n\nor to parse the apache config as a string:\n\n.. code-block:: python\n\n    apache_parse_obj = parse_config.ParseApacheConfig(apache_file_as_string=apache_string_obj)\n    apache_config = apache_parse_obj.parse_config()\n\nNow you can use the apache_config object to manipulate the apache config.\n\nTo add or override an existing directive and return the result:\n\n.. code-block:: python\n\n    apache_config = apache_parse_obj.add_directive(apache_config, \"SomeDirectiveName\", \"SomeDirectiveArguments\", \"<VirtualHost *:80>\")\n\n\nThe code above will add the line \"SomeDirectiveName SomeDirectiveArguments\" under <VirtualHost \\*:80>. If the directive\nis already there, then it's arguments will be overridden.\nKeep in mind that directives in nested tags can also be added/overridden, but their full \"path\" must be fed into\nadd_directive. For example, given the following apache file:\n\n.. code-block:: apache\n\n    <VirtualHost *:80>\n      ServerName example.org\n      ServerAlias *.example.org\n      ErrorLog /var/log/httpd/example.err\n      DocumentRoot /var/www/example.org\n      <Directory \"/var/www/example.org\">\n        Order allow,deny\n        Allow from all\n      </Directory>\n    </VirtualHost>\n\nTo override the \"Order\" directive under <Directory \"/var/www/example.org\">, the invocation to add_directive would look like this:\n\n.. code-block:: python\n\n    apache_config = apache_parse_obj.add_directive(apache_config, \"Order\", \"deny,allow\", \"<VirtualHost *:80>\", \"<Directory \"/var/www/example.org\">\")\n\n\nTo convert the apache_config object into a printable string:\n\n.. code-block:: python\n\n    apache_config_string = apache_parse_obj.get_apache_config(apache_config)\n    print apache_config_string\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/alextricity25/parse_apache_configs/tarball/0.0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/alextricity25/parse_apache_configs", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "parse_apache_configs", "package_url": "https://pypi.org/project/parse_apache_configs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/parse_apache_configs/", "project_urls": {"Download": "https://github.com/alextricity25/parse_apache_configs/tarball/0.0.2", "Homepage": "http://github.com/alextricity25/parse_apache_configs"}, "release_url": "https://pypi.org/project/parse_apache_configs/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "A python module to parse apache config files.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># parse_apache_configs\nA simple python library that will parse apache configs and convert them to a python data structure.</p>\n<div id=\"parse-apache-configs\">\n<h2>parse_apache_configs</h2>\n<p>A simple python library that will parse apache configs and convert them to a python data structure.\nThis will then allow the configs to be manipulated programatically.</p>\n</div>\n<div id=\"main-functions\">\n<h2>Main Functions</h2>\n<p>To use:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">parse_apache_configs</span> <span class=\"kn\">import</span> <span class=\"n\">parse_config</span>\n</pre>\n<p>Parse the apache config via file path, and return a python object representation:</p>\n<pre><span class=\"n\">apache_parse_obj</span> <span class=\"o\">=</span> <span class=\"n\">parse_config</span><span class=\"o\">.</span><span class=\"n\">ParseApacheConfig</span><span class=\"p\">(</span><span class=\"n\">apache_config_path</span><span class=\"o\">=</span><span class=\"s2\">\"/some/path/to/file\"</span><span class=\"p\">)</span>\n<span class=\"n\">apache_config</span> <span class=\"o\">=</span> <span class=\"n\">apache_parse_obj</span><span class=\"o\">.</span><span class=\"n\">parse_config</span><span class=\"p\">()</span>\n</pre>\n<p>or to parse the apache config as a string:</p>\n<pre><span class=\"n\">apache_parse_obj</span> <span class=\"o\">=</span> <span class=\"n\">parse_config</span><span class=\"o\">.</span><span class=\"n\">ParseApacheConfig</span><span class=\"p\">(</span><span class=\"n\">apache_file_as_string</span><span class=\"o\">=</span><span class=\"n\">apache_string_obj</span><span class=\"p\">)</span>\n<span class=\"n\">apache_config</span> <span class=\"o\">=</span> <span class=\"n\">apache_parse_obj</span><span class=\"o\">.</span><span class=\"n\">parse_config</span><span class=\"p\">()</span>\n</pre>\n<p>Now you can use the apache_config object to manipulate the apache config.</p>\n<p>To add or override an existing directive and return the result:</p>\n<pre><span class=\"n\">apache_config</span> <span class=\"o\">=</span> <span class=\"n\">apache_parse_obj</span><span class=\"o\">.</span><span class=\"n\">add_directive</span><span class=\"p\">(</span><span class=\"n\">apache_config</span><span class=\"p\">,</span> <span class=\"s2\">\"SomeDirectiveName\"</span><span class=\"p\">,</span> <span class=\"s2\">\"SomeDirectiveArguments\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;VirtualHost *:80&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<p>The code above will add the line \u201cSomeDirectiveName SomeDirectiveArguments\u201d under &lt;VirtualHost *:80&gt;. If the directive\nis already there, then it\u2019s arguments will be overridden.\nKeep in mind that directives in nested tags can also be added/overridden, but their full \u201cpath\u201d must be fed into\nadd_directive. For example, given the following apache file:</p>\n<pre><span class=\"nt\">&lt;VirtualHost</span> <span class=\"s\">*:80</span><span class=\"nt\">&gt;</span>\n  <span class=\"nb\">ServerName</span> example.org\n  <span class=\"nb\">ServerAlias</span> *.example.org\n  <span class=\"nb\">ErrorLog</span> <span class=\"sx\">/var/log/httpd/example.err</span>\n  <span class=\"nb\">DocumentRoot</span> <span class=\"sx\">/var/www/example.org</span>\n  <span class=\"nt\">&lt;Directory</span> <span class=\"s\">\"/var/www/example.org\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nb\">Order</span> allow,deny\n    <span class=\"nb\">Allow</span> from <span class=\"k\">all</span>\n  <span class=\"nt\">&lt;/Directory&gt;</span>\n<span class=\"nt\">&lt;/VirtualHost&gt;</span>\n</pre>\n<p>To override the \u201cOrder\u201d directive under &lt;Directory \u201c/var/www/example.org\u201d&gt;, the invocation to add_directive would look like this:</p>\n<pre><span class=\"n\">apache_config</span> <span class=\"o\">=</span> <span class=\"n\">apache_parse_obj</span><span class=\"o\">.</span><span class=\"n\">add_directive</span><span class=\"p\">(</span><span class=\"n\">apache_config</span><span class=\"p\">,</span> <span class=\"s2\">\"Order\"</span><span class=\"p\">,</span> <span class=\"s2\">\"deny,allow\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;VirtualHost *:80&gt;\"</span><span class=\"p\">,</span> <span class=\"s2\">\"&lt;Directory \"</span><span class=\"o\">/</span><span class=\"n\">var</span><span class=\"o\">/</span><span class=\"n\">www</span><span class=\"o\">/</span><span class=\"n\">example</span><span class=\"o\">.</span><span class=\"n\">org</span><span class=\"s2\">\"&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<p>To convert the apache_config object into a printable string:</p>\n<pre><span class=\"n\">apache_config_string</span> <span class=\"o\">=</span> <span class=\"n\">apache_parse_obj</span><span class=\"o\">.</span><span class=\"n\">get_apache_config</span><span class=\"p\">(</span><span class=\"n\">apache_config</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">apache_config_string</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1934135, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "522c1de21a110e3e20b907ffc65371df", "sha256": "6608637688cb01515496995cc4c23e14dad4fad0800b5eba69df5606de6974b9"}, "downloads": -1, "filename": "parse_apache_configs-0.0.1.tar.gz", "has_sig": false, "md5_digest": "522c1de21a110e3e20b907ffc65371df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3903, "upload_time": "2016-01-21T23:29:57", "upload_time_iso_8601": "2016-01-21T23:29:57.154938Z", "url": "https://files.pythonhosted.org/packages/26/89/5e53c0ccf76f001a3d8f60ad97082755cb5ca7ec3040a5854486d147a8a6/parse_apache_configs-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "87cb2c95657680a67f7462b18c667b27", "sha256": "000a98f518636bc9f8c06ba6ea2f7fb8fb0298c780b6a8e9a242ec393ecd29ac"}, "downloads": -1, "filename": "parse_apache_configs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "87cb2c95657680a67f7462b18c667b27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4658, "upload_time": "2016-02-01T17:19:15", "upload_time_iso_8601": "2016-02-01T17:19:15.364687Z", "url": "https://files.pythonhosted.org/packages/3a/59/bfb842d06d90d3c1b55e097726061eb51da34dc4b23b6591c202094318cf/parse_apache_configs-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87cb2c95657680a67f7462b18c667b27", "sha256": "000a98f518636bc9f8c06ba6ea2f7fb8fb0298c780b6a8e9a242ec393ecd29ac"}, "downloads": -1, "filename": "parse_apache_configs-0.0.2.tar.gz", "has_sig": false, "md5_digest": "87cb2c95657680a67f7462b18c667b27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4658, "upload_time": "2016-02-01T17:19:15", "upload_time_iso_8601": "2016-02-01T17:19:15.364687Z", "url": "https://files.pythonhosted.org/packages/3a/59/bfb842d06d90d3c1b55e097726061eb51da34dc4b23b6591c202094318cf/parse_apache_configs-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:22 2020"}