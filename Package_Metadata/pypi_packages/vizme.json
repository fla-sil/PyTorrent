{"info": {"author": "Yonathan Klijnsma", "author_email": "admin@0x3a.com", "bugtrack_url": null, "classifiers": [], "description": "# vizme\nA simple python-based command-line utility to to visualize random blobs of data. It is heavily inspired by `pixd` made by `FireFly`: https://github.com/FireyFly/pixd\n\n`vizme` can be used convert a raw data-stream to a visual representation in image format (or terminal viewing in ANSI). \n\n## Usage\n`vizme` is installed as a command-line utility accessible as `vizme` from the command-line. Vizme has a (small) help menu.\nFor the most part `vizme` expects input data from either a filepath or from /dev/stdin and a way to output it. By default\nvizme will output the data in PNG format which can be written to a file.\n\nThe help section:\n```text\nvizme -h\nusage: vizme [-h] [-t] [-w WIDTH] [-s SCALE] [-p {pixd,greyscale}]\n             [INPUT] [OUTPUT]\n\npositional arguments:\n  INPUT                 Data to convert (can be a file, don't specify for\n                        stdin)\n  OUTPUT                Where to write output to (can be a file, don't specify\n                        for stdout)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t, --terminal        Sets output to be terminal (colored) ANSI.\n  -w WIDTH, --width WIDTH\n                        Output columns width\n  -s SCALE, --scale SCALE\n                        Scales the output pixels (2 means 2 times the amount\n                        of columns/rows for the same data)\n  -p {pixd,greyscale}, --palette {pixd,greyscale}\n                        Sets the palette to use for output\n```\n\nWe can take some data from `/dev/random` and pipe it through head to limit it to 256 bytes, set a width of 16 and pipe it to a PNG file:\n```text\ncat /dev/random | head -c256 | vizme -w16 > image.png\n```\n\nWhich gives us a really tiny PNG with random data using the default palette.\n\n![Example PNG](example_command_1.png)\n\nWe can scale it up times 10 to see whats going on:\n```text\ncat /dev/random | head -c256 | vizme -w16 -s10 > image.png\n```\n\nWhich gives us a bigger image:\n\n![Example PNG 2](example_command_2.png)\n\n\n`vizme` also has a terminal output option which outputs ANSI full-block characters with the same color output.\n\n## Examples\n\nThis is the very bare-basic of what you can do with `vizme`. While it doesn't have implementations for image manipulation\nor some specific data cutting from what it reads/writes you can do this yourself on the command-line quite easily.\nIf you still want to see a feature in `vizme` feel free to raise tickets / pull requests.\n\n### Converting output\n\nConverting the PNG output to JPG (or any image format) which requires imagemagick:\n\n```text\ncat /dev/random | head -c256 | vizme -w16 -s10 | convert /dev/stdin my_image.jpg\n```\n\n### Preview output image in terminal \n\nPreviewing your output image in your terminal, required imgcat shell extension:\n```text\ncat /dev/random | head -c256 | vizme -w16 -s10 | imgcat\n```\n\n![Imgcat Example](imgcat_example.png)\n\n### Greyscale output through palette changing\n\n`vizme` comes with two palettes by default. Standard output uses the `pixd` palette and also contains a greyscale:\n```text\ncat /dev/random | head -c256 | vizme -w16 -s10 -p greyscale | imgcat\n```\n\n![Greyscale example](greyscale_example.png)\n\n## Bugs\nFeel free to report issues, this 'utility' was build out of ease as I got frustrated with manual conversion of timestamps and strings the whole time.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/0x3a/vizme", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "vizme", "package_url": "https://pypi.org/project/vizme/", "platform": "", "project_url": "https://pypi.org/project/vizme/", "project_urls": {"Homepage": "https://github.com/0x3a/vizme"}, "release_url": "https://pypi.org/project/vizme/0.1.3/", "requires_dist": null, "requires_python": ">=3", "summary": "A simple python-based command-line utility to to visualize random blobs of data.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vizme</h1>\n<p>A simple python-based command-line utility to to visualize random blobs of data. It is heavily inspired by <code>pixd</code> made by <code>FireFly</code>: <a href=\"https://github.com/FireyFly/pixd\" rel=\"nofollow\">https://github.com/FireyFly/pixd</a></p>\n<p><code>vizme</code> can be used convert a raw data-stream to a visual representation in image format (or terminal viewing in ANSI).</p>\n<h2>Usage</h2>\n<p><code>vizme</code> is installed as a command-line utility accessible as <code>vizme</code> from the command-line. Vizme has a (small) help menu.\nFor the most part <code>vizme</code> expects input data from either a filepath or from /dev/stdin and a way to output it. By default\nvizme will output the data in PNG format which can be written to a file.</p>\n<p>The help section:</p>\n<pre>vizme -h\nusage: vizme [-h] [-t] [-w WIDTH] [-s SCALE] [-p {pixd,greyscale}]\n             [INPUT] [OUTPUT]\n\npositional arguments:\n  INPUT                 Data to convert (can be a file, don't specify for\n                        stdin)\n  OUTPUT                Where to write output to (can be a file, don't specify\n                        for stdout)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t, --terminal        Sets output to be terminal (colored) ANSI.\n  -w WIDTH, --width WIDTH\n                        Output columns width\n  -s SCALE, --scale SCALE\n                        Scales the output pixels (2 means 2 times the amount\n                        of columns/rows for the same data)\n  -p {pixd,greyscale}, --palette {pixd,greyscale}\n                        Sets the palette to use for output\n</pre>\n<p>We can take some data from <code>/dev/random</code> and pipe it through head to limit it to 256 bytes, set a width of 16 and pipe it to a PNG file:</p>\n<pre>cat /dev/random | head -c256 | vizme -w16 &gt; image.png\n</pre>\n<p>Which gives us a really tiny PNG with random data using the default palette.</p>\n<p><img alt=\"Example PNG\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/face7795c7335fa361ab66cb93d1a5f615d10678/6578616d706c655f636f6d6d616e645f312e706e67\"></p>\n<p>We can scale it up times 10 to see whats going on:</p>\n<pre>cat /dev/random | head -c256 | vizme -w16 -s10 &gt; image.png\n</pre>\n<p>Which gives us a bigger image:</p>\n<p><img alt=\"Example PNG 2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d42d0db7655c48e8aa4766590474b2a823f94cc/6578616d706c655f636f6d6d616e645f322e706e67\"></p>\n<p><code>vizme</code> also has a terminal output option which outputs ANSI full-block characters with the same color output.</p>\n<h2>Examples</h2>\n<p>This is the very bare-basic of what you can do with <code>vizme</code>. While it doesn't have implementations for image manipulation\nor some specific data cutting from what it reads/writes you can do this yourself on the command-line quite easily.\nIf you still want to see a feature in <code>vizme</code> feel free to raise tickets / pull requests.</p>\n<h3>Converting output</h3>\n<p>Converting the PNG output to JPG (or any image format) which requires imagemagick:</p>\n<pre>cat /dev/random | head -c256 | vizme -w16 -s10 | convert /dev/stdin my_image.jpg\n</pre>\n<h3>Preview output image in terminal</h3>\n<p>Previewing your output image in your terminal, required imgcat shell extension:</p>\n<pre>cat /dev/random | head -c256 | vizme -w16 -s10 | imgcat\n</pre>\n<p><img alt=\"Imgcat Example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d6d7a6f63e5cbe6d9cfa8a5693465bd2f6fd0b6/696d676361745f6578616d706c652e706e67\"></p>\n<h3>Greyscale output through palette changing</h3>\n<p><code>vizme</code> comes with two palettes by default. Standard output uses the <code>pixd</code> palette and also contains a greyscale:</p>\n<pre>cat /dev/random | head -c256 | vizme -w16 -s10 -p greyscale | imgcat\n</pre>\n<p><img alt=\"Greyscale example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/74b6db18df267ad29d5a1b3b0a4b5773f6d1fe80/677265797363616c655f6578616d706c652e706e67\"></p>\n<h2>Bugs</h2>\n<p>Feel free to report issues, this 'utility' was build out of ease as I got frustrated with manual conversion of timestamps and strings the whole time.</p>\n\n          </div>"}, "last_serial": 5680523, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "6c5e01f454c6f11e3a57cc2f0531e6f4", "sha256": "be0917b2fae6b9cbcb6967ba4b8029b2f502261a7e984a3ae2e488fd8b1662c5"}, "downloads": -1, "filename": "vizme-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6c5e01f454c6f11e3a57cc2f0531e6f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 7852, "upload_time": "2019-08-15T04:15:59", "upload_time_iso_8601": "2019-08-15T04:15:59.936578Z", "url": "https://files.pythonhosted.org/packages/56/eb/22c1463931ff8114fd55c9a19f58bcebd97f4bc04cef38028b1a5e4da4a0/vizme-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "87411324b425a48975b207293e879751", "sha256": "4519a275705b4fc375342d0294a8bcb830c5a0c6c0cb69990c6a016dfdce0869"}, "downloads": -1, "filename": "vizme-0.1.3.tar.gz", "has_sig": false, "md5_digest": "87411324b425a48975b207293e879751", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8161, "upload_time": "2019-08-15T04:46:01", "upload_time_iso_8601": "2019-08-15T04:46:01.972392Z", "url": "https://files.pythonhosted.org/packages/25/e9/08ba27ee6f22f93fb585ce97adb2ae669f8ec476193fb0b50f4d82f222dc/vizme-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87411324b425a48975b207293e879751", "sha256": "4519a275705b4fc375342d0294a8bcb830c5a0c6c0cb69990c6a016dfdce0869"}, "downloads": -1, "filename": "vizme-0.1.3.tar.gz", "has_sig": false, "md5_digest": "87411324b425a48975b207293e879751", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 8161, "upload_time": "2019-08-15T04:46:01", "upload_time_iso_8601": "2019-08-15T04:46:01.972392Z", "url": "https://files.pythonhosted.org/packages/25/e9/08ba27ee6f22f93fb585ce97adb2ae669f8ec476193fb0b50f4d82f222dc/vizme-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:35:03 2020"}