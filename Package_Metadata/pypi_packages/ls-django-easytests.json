{"info": {"author": "Scott Sharkey", "author_email": "ssharkey@lanshark.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "===================\nls-django-easytests\n===================\n\nForked and updated for Django 1.7\n\nUtils for test setup based on test utils from django-cms\n\n\nInstallation\n------------\n\nFor the current stable version:\n\n::\n\n    pip install ls-django-easytests\n\nFor the development version:\n\n::\n\n    pip install -e git+git://github.com/lanshark/ls-django-easytests.git@develop#egg=ls-django-easytests\n\n\nExample usage in develop.py:\n-----------------------------\n\n::\n\n    #!/usr/bin/env python\n\n    from djeasytests.testsetup import TestSetup\n\n    settings = dict(\n        ROOT_URLCONF='appname_test_project.urls',\n        INSTALLED_APPS = [\n            'appname_test_project',\n            'appname',\n            'django.contrib.auth',\n            'django.contrib.contenttypes',\n            'django.contrib.sessions',\n            'django.contrib.admin',\n            'django.contrib.sites',\n            'django.contrib.staticfiles'\n        ]\n    )\n\n    testsetup = TestSetup(\n        appname='appname',\n        test_settings=settings\n    )\n\n    if __name__ == '__main__':\n        testsetup.run(__file__)\n\n\nProject structure\n-----------------\n\nHow to lay out files for using ls-django-easytests::\n\n    django-appname\n      ...\n      appname/\n        __init__.py\n        views.py\n        urls.py\n        models.py\n        tests.py\n      testing/\n        appname_test_project/\n            __init__.py\n            templates/appname/\n      README.rst\n      MANIFEST.in\n      LICENSE\n      .travis.yml\n      develop.py\n      ...\n\n\nRunning tests and commands\n--------------------------\n\n::\n\n    develop.py test\n    develop.py --failfast test\n    develop.py --parallel test\n    develop.py --migrate test\n    develop.py test test_labels here\n    develop.py timed test\n    develop.py isolated test\n    develop.py manage help\n    develop.py manage syncdb\n    develop.py server\n\n\nUsing a custom database\n-----------------------\n\nSimply set a environment varable::\n\n    export DATABASE_URL=\"postgres://myuser:mypass@localhost/mydb\"\n\nThen test, server and manage will use this database.\n\n\nUsing existing settings:\n-----------------------\n\nUseful for testing projects\n\n\nappname/base_settings.py\n========================\n\n::\n\n    ROOT_URLCONF = 'appname.urls',\n    INSTALLED_APPS = [\n        'appname'.\n        'django.contrib.auth',\n        'django.contrib.contenttypes',\n        'django.contrib.sessions',\n        'django.contrib.admin',\n        'django.contrib.sites',\n        'django.contrib.staticfiles'\n    ]\n\n\nappname/settings.py\n===================\n\n::\n\n    from appname.base_settings import *\n    from local_settings import *\n\n\nappname/local_settings.py\n=========================\n\n::\n\n    SOME_LOCAL_SETTING = False\n\n\ndevelop.py\n==========\n\n::\n\n    settings = dict(\n        DEBUG = True\n    )\n\n    from appname import base_settings\n    testsetup = TestSetup(\n       appname='appname',\n       test_settings=settings,\n       fallback_settings=base_settings\n    )\n\n    if __name__ == '__main__':\n        testsetup.run(__file__)\n\n\ndefault_settings\n================\n\nBy default fallback_settings gets merged with default_settings (by default django.conf.global_settings) like in djangos settings.configure.\n\nThis can be changed by passing default_settings with a module/object other than global_settings to TestSetup.\n\n::\n\n    from appname import other_global_settings\n    testsetup = TestSetup(\n        appname='appname',\n        test_settings=settings,\n        fallback_settings=base_settings,\n        default_settings=other_global_settings\n    )\n\n\nAdditional apps (test_modules) for testing\n==========================================\n\nSay you want this filestructure when the amount of test increase exponentially::\n\n    django-appname\n      ...\n      appname/\n        __init__.py\n        views.py\n        urls.py\n        models.py\n      testing/\n        appname_test_project/\n            __init__.py\n            templates/appname/\n        appname_modeltests/\n            __init__.py\n            tests.py\n            models.py\n        appname_admintests/\n            __init__.py\n            tests.py\n            models.py\n        appname_somothertests/\n            __init__.py\n            tests.py\n            models.py\n      README.rst\n      MANIFEST.in\n      LICENSE\n      .travis.yml\n      develop.py\n      ...\n\nIn develop.py::\n\n    from djeasytests.testsetup import TestSetup\n\n    settings = dict(\n        ROOT_URLCONF='appname_test_project.urls',\n        INSTALLED_APPS = [\n            'appname_modeltests',\n            'appname_admintests',\n            'appname_somothertests',\n            'appname_test_project',\n            'appname',\n            'django.contrib.auth',\n            'django.contrib.contenttypes',\n            'django.contrib.sessions',\n            'django.contrib.admin',\n            'django.contrib.sites',\n            'django.contrib.staticfiles'\n        ]\n    )\n\n    testsetup = TestSetup(\n        appname='appname',\n        test_settings=settings,\n        test_modules=['appname_modeltests','appname_admintests','appname_somothertests']\n    )\n\n\n    if __name__ == '__main__':\n        testsetup.run(__file__)\n\n\n0.9.5\n\nForked, Renamed, Updated By Scott Sharkey\nAdded compatibility with Django 1.7+, and eventually Python 3\n\n0.9.4\n\nLast release by original author", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/lanshark/ls-django-easytests/tarball/0.9.5", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/lanshark/ls-django-easytests/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "ls-django-easytests", "package_url": "https://pypi.org/project/ls-django-easytests/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ls-django-easytests/", "project_urls": {"Download": "https://github.com/lanshark/ls-django-easytests/tarball/0.9.5", "Homepage": "http://github.com/lanshark/ls-django-easytests/"}, "release_url": "https://pypi.org/project/ls-django-easytests/0.9.5/", "requires_dist": null, "requires_python": null, "summary": "Modified test utils from django-cms as a own module", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            ===================<br>ls-django-easytests<br>===================<br><br>Forked and updated for Django 1.7<br><br>Utils for test setup based on test utils from django-cms<br><br><br>Installation<br>------------<br><br>For the current stable version:<br><br>::<br><br>    pip install ls-django-easytests<br><br>For the development version:<br><br>::<br><br>    pip install -e git+git://github.com/lanshark/ls-django-easytests.git@develop#egg=ls-django-easytests<br><br><br>Example usage in develop.py:<br>-----------------------------<br><br>::<br><br>    #!/usr/bin/env python<br><br>    from djeasytests.testsetup import TestSetup<br><br>    settings = dict(<br>        ROOT_URLCONF='appname_test_project.urls',<br>        INSTALLED_APPS = [<br>            'appname_test_project',<br>            'appname',<br>            'django.contrib.auth',<br>            'django.contrib.contenttypes',<br>            'django.contrib.sessions',<br>            'django.contrib.admin',<br>            'django.contrib.sites',<br>            'django.contrib.staticfiles'<br>        ]<br>    )<br><br>    testsetup = TestSetup(<br>        appname='appname',<br>        test_settings=settings<br>    )<br><br>    if __name__ == '__main__':<br>        testsetup.run(__file__)<br><br><br>Project structure<br>-----------------<br><br>How to lay out files for using ls-django-easytests::<br><br>    django-appname<br>      ...<br>      appname/<br>        __init__.py<br>        views.py<br>        urls.py<br>        models.py<br>        tests.py<br>      testing/<br>        appname_test_project/<br>            __init__.py<br>            templates/appname/<br>      README.rst<br>      MANIFEST.in<br>      LICENSE<br>      .travis.yml<br>      develop.py<br>      ...<br><br><br>Running tests and commands<br>--------------------------<br><br>::<br><br>    develop.py test<br>    develop.py --failfast test<br>    develop.py --parallel test<br>    develop.py --migrate test<br>    develop.py test test_labels here<br>    develop.py timed test<br>    develop.py isolated test<br>    develop.py manage help<br>    develop.py manage syncdb<br>    develop.py server<br><br><br>Using a custom database<br>-----------------------<br><br>Simply set a environment varable::<br><br>    export DATABASE_URL=\"postgres://myuser:mypass@localhost/mydb\"<br><br>Then test, server and manage will use this database.<br><br><br>Using existing settings:<br>-----------------------<br><br>Useful for testing projects<br><br><br>appname/base_settings.py<br>========================<br><br>::<br><br>    ROOT_URLCONF = 'appname.urls',<br>    INSTALLED_APPS = [<br>        'appname'.<br>        'django.contrib.auth',<br>        'django.contrib.contenttypes',<br>        'django.contrib.sessions',<br>        'django.contrib.admin',<br>        'django.contrib.sites',<br>        'django.contrib.staticfiles'<br>    ]<br><br><br>appname/settings.py<br>===================<br><br>::<br><br>    from appname.base_settings import *<br>    from local_settings import *<br><br><br>appname/local_settings.py<br>=========================<br><br>::<br><br>    SOME_LOCAL_SETTING = False<br><br><br>develop.py<br>==========<br><br>::<br><br>    settings = dict(<br>        DEBUG = True<br>    )<br><br>    from appname import base_settings<br>    testsetup = TestSetup(<br>       appname='appname',<br>       test_settings=settings,<br>       fallback_settings=base_settings<br>    )<br><br>    if __name__ == '__main__':<br>        testsetup.run(__file__)<br><br><br>default_settings<br>================<br><br>By default fallback_settings gets merged with default_settings (by default django.conf.global_settings) like in djangos settings.configure.<br><br>This can be changed by passing default_settings with a module/object other than global_settings to TestSetup.<br><br>::<br><br>    from appname import other_global_settings<br>    testsetup = TestSetup(<br>        appname='appname',<br>        test_settings=settings,<br>        fallback_settings=base_settings,<br>        default_settings=other_global_settings<br>    )<br><br><br>Additional apps (test_modules) for testing<br>==========================================<br><br>Say you want this filestructure when the amount of test increase exponentially::<br><br>    django-appname<br>      ...<br>      appname/<br>        __init__.py<br>        views.py<br>        urls.py<br>        models.py<br>      testing/<br>        appname_test_project/<br>            __init__.py<br>            templates/appname/<br>        appname_modeltests/<br>            __init__.py<br>            tests.py<br>            models.py<br>        appname_admintests/<br>            __init__.py<br>            tests.py<br>            models.py<br>        appname_somothertests/<br>            __init__.py<br>            tests.py<br>            models.py<br>      README.rst<br>      MANIFEST.in<br>      LICENSE<br>      .travis.yml<br>      develop.py<br>      ...<br><br>In develop.py::<br><br>    from djeasytests.testsetup import TestSetup<br><br>    settings = dict(<br>        ROOT_URLCONF='appname_test_project.urls',<br>        INSTALLED_APPS = [<br>            'appname_modeltests',<br>            'appname_admintests',<br>            'appname_somothertests',<br>            'appname_test_project',<br>            'appname',<br>            'django.contrib.auth',<br>            'django.contrib.contenttypes',<br>            'django.contrib.sessions',<br>            'django.contrib.admin',<br>            'django.contrib.sites',<br>            'django.contrib.staticfiles'<br>        ]<br>    )<br><br>    testsetup = TestSetup(<br>        appname='appname',<br>        test_settings=settings,<br>        test_modules=['appname_modeltests','appname_admintests','appname_somothertests']<br>    )<br><br><br>    if __name__ == '__main__':<br>        testsetup.run(__file__)<br><br><br>0.9.5<br><br>Forked, Renamed, Updated By Scott Sharkey<br>Added compatibility with Django 1.7+, and eventually Python 3<br><br>0.9.4<br><br>Last release by original author\n          </div>"}, "last_serial": 1327684, "releases": {"0.9.5": [{"comment_text": "", "digests": {"md5": "a00c71b6f1069a3409ef520494e958ce", "sha256": "141fa568e9ea2228c151a1abdeb67d5385b2df3e4b2eb01aac4b292decea7a39"}, "downloads": -1, "filename": "ls-django-easytests-0.9.5.tar.gz", "has_sig": false, "md5_digest": "a00c71b6f1069a3409ef520494e958ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7134, "upload_time": "2014-12-02T05:36:30", "upload_time_iso_8601": "2014-12-02T05:36:30.494208Z", "url": "https://files.pythonhosted.org/packages/13/25/7684753056736654a301220c7de6a7824f00c949db3f910708109f5c088d/ls-django-easytests-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a00c71b6f1069a3409ef520494e958ce", "sha256": "141fa568e9ea2228c151a1abdeb67d5385b2df3e4b2eb01aac4b292decea7a39"}, "downloads": -1, "filename": "ls-django-easytests-0.9.5.tar.gz", "has_sig": false, "md5_digest": "a00c71b6f1069a3409ef520494e958ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7134, "upload_time": "2014-12-02T05:36:30", "upload_time_iso_8601": "2014-12-02T05:36:30.494208Z", "url": "https://files.pythonhosted.org/packages/13/25/7684753056736654a301220c7de6a7824f00c949db3f910708109f5c088d/ls-django-easytests-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:29 2020"}