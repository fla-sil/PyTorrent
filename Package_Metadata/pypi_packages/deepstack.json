{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# DeepStack\n\nDeepStack: Ensembles for Deep Learning\n\n[![Travis](https://travis-ci.com/jcborges/DeepStack.svg?branch=master)](https://travis-ci.com/jcborges/DeepStack) [![PyPI version](https://badge.fury.io/py/deepstack.svg)](https://badge.fury.io/py/deepstack) [![Download Stats](https://img.shields.io/pypi/dm/deepstack?color=bright%20green&label=installs&logoColor=bright%20green)](https://pypistats.org/packages/deepstack)\n---\n\nDeepStack is a Python module for building Deep Learning Ensembles originally built on top of Keras and distributed under the MIT license.\n\n\n## Installation\n```\npip install deepstack\n```\n\n## Stacking\nStacking is based on training a Meta-Learner on top of pre-trained Base-Learners.\nDeepStack offers an interface to fit the Meta-Learner on the predictions of the Base-Learners.\nIn the following an Example based on top of pre-trained Keras Models (there is also an interface for generic models):\n\n![](./Stacking.png)\n\n\n#### Usage \n\n```python\nfrom deepstack.base import KerasMember  # For a generic (i.e., Non-Keras Model) check the class `Member`\nfrom deepstack.ensemble import StackEnsemble\n\nmodel1 = ...  # A Keras pre-trained Model (Base-Learner)\ntrain_batches1 =  ...  # A numpy tuple (X_train, y_train) or Keras Data Iterator - Training Data for Meta-Learner\nval_batches1 =  ...  # A numpy tuple (X_val, y_val) or Keras Data Iterator - Validation Data for Meta-Learner\nmember1 = KerasMember(name=\"Model1\", keras_model=model1, train_batches=train_batches1, val_batches=val_batches1)\n\nmodel2 = ...  \ntrain_batches2 =  ...  \nval_batches2 =  ...  \nmember2 = KerasMember(name=\"Model2\", keras_model=model2, train_batches=train_batches2, val_batches=val_batches2)\n\nstack = StackEnsemble()\nstack.add_member(member1)  # Assumption: the data iterators of base-learners iterate over the same data and have same shape and classes.\nstack.add_member(member2)\nstack.fit()  # Fits meta-learner based on training batches from its members (base-learners)\nstack.describe()  # Prints information about ensemble performance based on validation data\n```\n\nCheck an example on the CIFAR-10 dataset: [Cifar10.py](./examples/Cifar10.py).\n\n## Randomized Weighted Ensemble\n\nEnsemble Technique that weights the prediction of each ensemble member, combining the weights to calculate a combined prediction.  Weight optimization search is performed with randomized search based on the dirichlet distribution on a validation dataset. \n\n![](./WeightedEnsemble.png)\n\nIt follows the same interface of the StackEnsemble. An example can be found in [Cifar10.py](./examples/Cifar10.py).\n\n## Citing DeepStack\nIf you use DeepStack in a scientific publication, we would appreciate citations:\n\n```bibtex\n@misc{\n    title   = {DeepStack: Ensembles for Deep Learning},\n    author  = {Julio Borges},\n    url = {https://github.com/jcborges/DeepStack},\n    date = {2019}\n}\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/jcborges/DeepStack/archive/v_0.0.9.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jcborges/DeepStack", "keywords": "", "license": "MIT", "maintainer": "Julio Borges", "maintainer_email": "", "name": "deepstack", "package_url": "https://pypi.org/project/deepstack/", "platform": "", "project_url": "https://pypi.org/project/deepstack/", "project_urls": {"Download": "https://github.com/jcborges/DeepStack/archive/v_0.0.9.tar.gz", "Homepage": "https://github.com/jcborges/DeepStack"}, "release_url": "https://pypi.org/project/deepstack/0.0.9/", "requires_dist": ["numpy (>=1.16.4)", "keras (>=2.2.5)", "tensorflow (>=1.14.0)", "scikit-learn (>=0.21.2)"], "requires_python": "", "summary": "DeepStack: Ensembles for Deep Learning", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DeepStack</h1>\n<p>DeepStack: Ensembles for Deep Learning</p>\n<h2><a href=\"https://travis-ci.com/jcborges/DeepStack\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/33cccdf61051e71b969db909b8218ec155e27d5e/68747470733a2f2f7472617669732d63692e636f6d2f6a63626f726765732f44656570537461636b2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://badge.fury.io/py/deepstack\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca55e23e150c08a997118d9e49bf423981b1b04f/68747470733a2f2f62616467652e667572792e696f2f70792f64656570737461636b2e737667\"></a> <a href=\"https://pypistats.org/packages/deepstack\" rel=\"nofollow\"><img alt=\"Download Stats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab116e525fbe6ec6da865e2c3ae9a81e8982e669/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f64656570737461636b3f636f6c6f723d627269676874253230677265656e266c6162656c3d696e7374616c6c73266c6f676f436f6c6f723d627269676874253230677265656e\"></a></h2>\n<p>DeepStack is a Python module for building Deep Learning Ensembles originally built on top of Keras and distributed under the MIT license.</p>\n<h2>Installation</h2>\n<pre><code>pip install deepstack\n</code></pre>\n<h2>Stacking</h2>\n<p>Stacking is based on training a Meta-Learner on top of pre-trained Base-Learners.\nDeepStack offers an interface to fit the Meta-Learner on the predictions of the Base-Learners.\nIn the following an Example based on top of pre-trained Keras Models (there is also an interface for generic models):</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0132c54d11c1b5831380bd8bf5904c50f162069/2e2f537461636b696e672e706e67\"></p>\n<h4>Usage</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">deepstack.base</span> <span class=\"kn\">import</span> <span class=\"n\">KerasMember</span>  <span class=\"c1\"># For a generic (i.e., Non-Keras Model) check the class `Member`</span>\n<span class=\"kn\">from</span> <span class=\"nn\">deepstack.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">StackEnsemble</span>\n\n<span class=\"n\">model1</span> <span class=\"o\">=</span> <span class=\"o\">...</span>  <span class=\"c1\"># A Keras pre-trained Model (Base-Learner)</span>\n<span class=\"n\">train_batches1</span> <span class=\"o\">=</span>  <span class=\"o\">...</span>  <span class=\"c1\"># A numpy tuple (X_train, y_train) or Keras Data Iterator - Training Data for Meta-Learner</span>\n<span class=\"n\">val_batches1</span> <span class=\"o\">=</span>  <span class=\"o\">...</span>  <span class=\"c1\"># A numpy tuple (X_val, y_val) or Keras Data Iterator - Validation Data for Meta-Learner</span>\n<span class=\"n\">member1</span> <span class=\"o\">=</span> <span class=\"n\">KerasMember</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Model1\"</span><span class=\"p\">,</span> <span class=\"n\">keras_model</span><span class=\"o\">=</span><span class=\"n\">model1</span><span class=\"p\">,</span> <span class=\"n\">train_batches</span><span class=\"o\">=</span><span class=\"n\">train_batches1</span><span class=\"p\">,</span> <span class=\"n\">val_batches</span><span class=\"o\">=</span><span class=\"n\">val_batches1</span><span class=\"p\">)</span>\n\n<span class=\"n\">model2</span> <span class=\"o\">=</span> <span class=\"o\">...</span>  \n<span class=\"n\">train_batches2</span> <span class=\"o\">=</span>  <span class=\"o\">...</span>  \n<span class=\"n\">val_batches2</span> <span class=\"o\">=</span>  <span class=\"o\">...</span>  \n<span class=\"n\">member2</span> <span class=\"o\">=</span> <span class=\"n\">KerasMember</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"Model2\"</span><span class=\"p\">,</span> <span class=\"n\">keras_model</span><span class=\"o\">=</span><span class=\"n\">model2</span><span class=\"p\">,</span> <span class=\"n\">train_batches</span><span class=\"o\">=</span><span class=\"n\">train_batches2</span><span class=\"p\">,</span> <span class=\"n\">val_batches</span><span class=\"o\">=</span><span class=\"n\">val_batches2</span><span class=\"p\">)</span>\n\n<span class=\"n\">stack</span> <span class=\"o\">=</span> <span class=\"n\">StackEnsemble</span><span class=\"p\">()</span>\n<span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">add_member</span><span class=\"p\">(</span><span class=\"n\">member1</span><span class=\"p\">)</span>  <span class=\"c1\"># Assumption: the data iterators of base-learners iterate over the same data and have same shape and classes.</span>\n<span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">add_member</span><span class=\"p\">(</span><span class=\"n\">member2</span><span class=\"p\">)</span>\n<span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">()</span>  <span class=\"c1\"># Fits meta-learner based on training batches from its members (base-learners)</span>\n<span class=\"n\">stack</span><span class=\"o\">.</span><span class=\"n\">describe</span><span class=\"p\">()</span>  <span class=\"c1\"># Prints information about ensemble performance based on validation data</span>\n</pre>\n<p>Check an example on the CIFAR-10 dataset: <a href=\"./examples/Cifar10.py\" rel=\"nofollow\">Cifar10.py</a>.</p>\n<h2>Randomized Weighted Ensemble</h2>\n<p>Ensemble Technique that weights the prediction of each ensemble member, combining the weights to calculate a combined prediction.  Weight optimization search is performed with randomized search based on the dirichlet distribution on a validation dataset.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd209038915853202c3d76839464fa2efe239bd3/2e2f5765696768746564456e73656d626c652e706e67\"></p>\n<p>It follows the same interface of the StackEnsemble. An example can be found in <a href=\"./examples/Cifar10.py\" rel=\"nofollow\">Cifar10.py</a>.</p>\n<h2>Citing DeepStack</h2>\n<p>If you use DeepStack in a scientific publication, we would appreciate citations:</p>\n<pre><span class=\"nc\">@misc</span><span class=\"p\">{</span>\n    <span class=\"nl\">title</span>   <span class=\"err\">=</span> <span class=\"err\">{DeepStack:</span> <span class=\"err\">Ensembles</span> <span class=\"err\">for</span> <span class=\"err\">Deep</span> <span class=\"err\">Learning</span><span class=\"p\">}</span><span class=\"c\">,</span>\n    <span class=\"c\">author  = {Julio Borges},</span>\n    <span class=\"c\">url = {https://github.com/jcborges/DeepStack},</span>\n    <span class=\"c\">date = {2019}</span>\n<span class=\"c\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 6151060, "releases": {"0.0.6": [{"comment_text": "", "digests": {"md5": "f6c0ea76597cc7b50d4a6583043e0bb9", "sha256": "c5072d7faf02ebe3cecd4dc025d6884b3d7293d5e6fc4cd93daca518b62d28ea"}, "downloads": -1, "filename": "deepstack-0.0.6.tar.gz", "has_sig": false, "md5_digest": "f6c0ea76597cc7b50d4a6583043e0bb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4812, "upload_time": "2019-10-14T19:58:13", "upload_time_iso_8601": "2019-10-14T19:58:13.586898Z", "url": "https://files.pythonhosted.org/packages/1b/a5/722a1683ce4822609e9d7c394bce4a464e58b650d1e98fd5a2f05063656a/deepstack-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "1b7cca2d7c859d3a57f4cce014339fd0", "sha256": "f9199f0159e465a452bfc795f4c2271fe89d105e12365a1f96008839275a71d3"}, "downloads": -1, "filename": "deepstack-0.0.7.tar.gz", "has_sig": false, "md5_digest": "1b7cca2d7c859d3a57f4cce014339fd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5018, "upload_time": "2019-10-19T10:32:21", "upload_time_iso_8601": "2019-10-19T10:32:21.607170Z", "url": "https://files.pythonhosted.org/packages/20/e9/826c0f93609c8d77e1292480a2e4318529ab7c20bc201b3da4e6f5fc7c0f/deepstack-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "693dc8a3e3fbc8171f2116b7e3e6b24a", "sha256": "312f78dd93ec89397f40ac64de49a75a5ee1252a04db946c07b9b72b7b41f7c9"}, "downloads": -1, "filename": "deepstack-0.0.8.tar.gz", "has_sig": false, "md5_digest": "693dc8a3e3fbc8171f2116b7e3e6b24a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5746, "upload_time": "2019-11-09T15:31:23", "upload_time_iso_8601": "2019-11-09T15:31:23.067158Z", "url": "https://files.pythonhosted.org/packages/4f/ef/11295d377f04fd1bdd70845c550a692b76e96365e84afc7aa1a5f1a9d624/deepstack-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "14d6801a43b8363c05b29c9395ce9ddc", "sha256": "c11f7ee09084a5f9d5cef85db9240dca75d50859a2da4556fed5846878c4bade"}, "downloads": -1, "filename": "deepstack-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "14d6801a43b8363c05b29c9395ce9ddc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8894, "upload_time": "2019-11-17T17:34:24", "upload_time_iso_8601": "2019-11-17T17:34:24.097076Z", "url": "https://files.pythonhosted.org/packages/36/0a/7555b16579570cad2ec2b02b7a52ae6406f983e8fdde156ac3fe109fd16f/deepstack-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fb97c4e66be5ae21029242c65a189a7", "sha256": "3e5012dec6914d8009e0c5759772614ff78fb036e62b2617a89706b81704e393"}, "downloads": -1, "filename": "deepstack-0.0.9.tar.gz", "has_sig": false, "md5_digest": "6fb97c4e66be5ae21029242c65a189a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7520, "upload_time": "2019-11-17T17:34:26", "upload_time_iso_8601": "2019-11-17T17:34:26.163287Z", "url": "https://files.pythonhosted.org/packages/03/ee/afa7a702f50407bcebea660718bfba7544965bf853174abc9ba1e04262d3/deepstack-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14d6801a43b8363c05b29c9395ce9ddc", "sha256": "c11f7ee09084a5f9d5cef85db9240dca75d50859a2da4556fed5846878c4bade"}, "downloads": -1, "filename": "deepstack-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "14d6801a43b8363c05b29c9395ce9ddc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8894, "upload_time": "2019-11-17T17:34:24", "upload_time_iso_8601": "2019-11-17T17:34:24.097076Z", "url": "https://files.pythonhosted.org/packages/36/0a/7555b16579570cad2ec2b02b7a52ae6406f983e8fdde156ac3fe109fd16f/deepstack-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fb97c4e66be5ae21029242c65a189a7", "sha256": "3e5012dec6914d8009e0c5759772614ff78fb036e62b2617a89706b81704e393"}, "downloads": -1, "filename": "deepstack-0.0.9.tar.gz", "has_sig": false, "md5_digest": "6fb97c4e66be5ae21029242c65a189a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7520, "upload_time": "2019-11-17T17:34:26", "upload_time_iso_8601": "2019-11-17T17:34:26.163287Z", "url": "https://files.pythonhosted.org/packages/03/ee/afa7a702f50407bcebea660718bfba7544965bf853174abc9ba1e04262d3/deepstack-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:19 2020"}