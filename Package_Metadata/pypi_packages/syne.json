{"info": {"author": "Lucas Bourneuf", "author_email": "lucas.bourneuf@laposte.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "\n\n\n## Watch your collections\n```python\nfrom syne import pprint\n\nlinear = 1, 2, 3, 4, 5\ndouble_dim = (\n    (1, 2, 3, 4, 5),\n    (1, 3, 2, 4, 5),\n    (1, 2, 1, 4, 7),\n)\nmap = {\n    'a': 2,\n    3: 'b',\n    4: 'c',\n    5: 'e',\n    7: 'c',\n}\npprint(linear)\npprint(double_dim)\npprint(map)\n```\n\n## Listen to your collections\nTODO\n\n## Coloring of sources to detect defects\nTODO\nA parenthesis is missing ? A syntax error is raised ?\nInvoke syne on your source file, and get the syntax errors highlighted :\n\n    python -m syne check-source myfile.py\n\n\n## soundpoints\n\n```python\nfrom syne import soundpoint\n\ndef func():\n    soundpoint()\n    soundpoint(duration=.5)\n    soundpoint()\n\nfunc()\nfunc()\n```\n\nWill play two times the three sounds associated to function func, with a longer middle sound.\n\nThe sounds are chosen following a note scale, and based on the stacktrace,\nmeaning that each calls in function `a` will sound differently between them\nand will be the same for second call.\n\nYou can change the scale with the options:\n\n```python\nfrom syne import soundpoint\nsoundpoint.setopt(scale='C2 major')\n```\n\nSee [examples](examples/soundpoint.py) for more.\n\n\n### soundpoints as an extension of synepoints\nIn fact, soundpoints are implemented following the standard interface of Synepoint metaclass,\nallowing one to define its own way to work on breakpoints.\n\n\n\n\n# Inspiration sources\n- The J language, as described [here](https://prog21.dadgum.com/28.html).\n- the expression \u00aba signal, it's musical\u00bb\n- [the new matplotlib colormap justification](https://www.youtube.com/watch?v=xAoljeRJ3lU)\n- [the story of the sound-based dial server debugging]()\n\n# Requirements\n- [magwitch](https://github.com/aluriak/magwitch)\n- [musthe](https://github.com/gciruelos/musthe), for music theory (see soundpoint)\n- [midi](https://github.com/vishnubob/python-midi)\n- [music21](http://web.mit.edu/music21/), for music theory (alternative to previous two ?)\n- [PyAudio](http://people.csail.mit.edu/hubert/pyaudio/), access to audio\n- [pyglet](https://bitbucket.org/pyglet/pyglet/wiki/Home), for colored view of collections\n- [numpy]() to implement some computation operations\n- [pytest](https://pytest.org) for testing\n\nTo install them all, `pip install -r requirements.txt`.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aluriak/syne", "keywords": "debugging,synesthesia", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "syne", "package_url": "https://pypi.org/project/syne/", "platform": "", "project_url": "https://pypi.org/project/syne/", "project_urls": {"Homepage": "https://github.com/aluriak/syne"}, "release_url": "https://pypi.org/project/syne/0.0.1/", "requires_dist": ["magwitch (==0.1.0)", "musthe (==1.0.0)", "numpy (==1.14.5)", "PyAudio (==0.2.11)", "pytest (==3.6.3)"], "requires_python": "", "summary": "synesthesia-based debugging", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br><br><br>## Watch your collections<br>```python<br>from syne import pprint<br><br>linear = 1, 2, 3, 4, 5<br>double_dim = (<br>    (1, 2, 3, 4, 5),<br>    (1, 3, 2, 4, 5),<br>    (1, 2, 1, 4, 7),<br>)<br>map = {<br>    'a': 2,<br>    3: 'b',<br>    4: 'c',<br>    5: 'e',<br>    7: 'c',<br>}<br>pprint(linear)<br>pprint(double_dim)<br>pprint(map)<br>```<br><br>## Listen to your collections<br>TODO<br><br>## Coloring of sources to detect defects<br>TODO<br>A parenthesis is missing ? A syntax error is raised ?<br>Invoke syne on your source file, and get the syntax errors highlighted :<br><br>    python -m syne check-source myfile.py<br><br><br>## soundpoints<br><br>```python<br>from syne import soundpoint<br><br>def func():<br>    soundpoint()<br>    soundpoint(duration=.5)<br>    soundpoint()<br><br>func()<br>func()<br>```<br><br>Will play two times the three sounds associated to function func, with a longer middle sound.<br><br>The sounds are chosen following a note scale, and based on the stacktrace,<br>meaning that each calls in function `a` will sound differently between them<br>and will be the same for second call.<br><br>You can change the scale with the options:<br><br>```python<br>from syne import soundpoint<br>soundpoint.setopt(scale='C2 major')<br>```<br><br>See [examples](examples/soundpoint.py) for more.<br><br><br>### soundpoints as an extension of synepoints<br>In fact, soundpoints are implemented following the standard interface of Synepoint metaclass,<br>allowing one to define its own way to work on breakpoints.<br><br><br><br><br># Inspiration sources<br>- The J language, as described [here](https://prog21.dadgum.com/28.html).<br>- the expression \u00aba signal, it's musical\u00bb<br>- [the new matplotlib colormap justification](https://www.youtube.com/watch?v=xAoljeRJ3lU)<br>- [the story of the sound-based dial server debugging]()<br><br># Requirements<br>- [magwitch](https://github.com/aluriak/magwitch)<br>- [musthe](https://github.com/gciruelos/musthe), for music theory (see soundpoint)<br>- [midi](https://github.com/vishnubob/python-midi)<br>- [music21](http://web.mit.edu/music21/), for music theory (alternative to previous two ?)<br>- [PyAudio](http://people.csail.mit.edu/hubert/pyaudio/), access to audio<br>- [pyglet](https://bitbucket.org/pyglet/pyglet/wiki/Home), for colored view of collections<br>- [numpy]() to implement some computation operations<br>- [pytest](https://pytest.org) for testing<br><br>To install them all, `pip install -r requirements.txt`.<br><br><br>\n          </div>"}, "last_serial": 4308211, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e6c9e734050815bab05b6984772aeb78", "sha256": "529f5cdcb6fa2f6fea877f2617026fe6276ebf3d9d2ad81f29721d14f096cc3d"}, "downloads": -1, "filename": "syne-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e6c9e734050815bab05b6984772aeb78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6087, "upload_time": "2018-09-25T11:30:34", "upload_time_iso_8601": "2018-09-25T11:30:34.002270Z", "url": "https://files.pythonhosted.org/packages/ab/a8/beed4c43f10ce9542c57aa9402b9da54416d3b446b740466f6367fddb358/syne-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7b7adb726f92ea9b8475ef8deaeab9b", "sha256": "ec965c6144961452434bf4a79fca9a53ef0fe4c514952812b8e85d453fd54f44"}, "downloads": -1, "filename": "syne-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d7b7adb726f92ea9b8475ef8deaeab9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5082, "upload_time": "2018-09-25T11:30:35", "upload_time_iso_8601": "2018-09-25T11:30:35.310823Z", "url": "https://files.pythonhosted.org/packages/0c/be/59409534d26b0c7fb49c3e0fac3a79413e00c0802bcb175b0a09d01e4e94/syne-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6c9e734050815bab05b6984772aeb78", "sha256": "529f5cdcb6fa2f6fea877f2617026fe6276ebf3d9d2ad81f29721d14f096cc3d"}, "downloads": -1, "filename": "syne-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e6c9e734050815bab05b6984772aeb78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6087, "upload_time": "2018-09-25T11:30:34", "upload_time_iso_8601": "2018-09-25T11:30:34.002270Z", "url": "https://files.pythonhosted.org/packages/ab/a8/beed4c43f10ce9542c57aa9402b9da54416d3b446b740466f6367fddb358/syne-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7b7adb726f92ea9b8475ef8deaeab9b", "sha256": "ec965c6144961452434bf4a79fca9a53ef0fe4c514952812b8e85d453fd54f44"}, "downloads": -1, "filename": "syne-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d7b7adb726f92ea9b8475ef8deaeab9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5082, "upload_time": "2018-09-25T11:30:35", "upload_time_iso_8601": "2018-09-25T11:30:35.310823Z", "url": "https://files.pythonhosted.org/packages/0c/be/59409534d26b0c7fb49c3e0fac3a79413e00c0802bcb175b0a09d01e4e94/syne-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:02 2020"}