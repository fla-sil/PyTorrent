{"info": {"author": "Asher Noel", "author_email": "asher13a@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Topic :: Software Development :: Build Tools"], "description": "# InfiniteTrends\n\n [![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/dwyl/esta/issues) [![Inline docs](http://inch-ci.org/github/ashernoel/infinitetrends.svg?branch=master)](http://inch-ci.org/github/ashernoel/infinitetrends) [![HitCount](http://hits.dwyl.io/ashernoel/infinitetrends.svg)](http://hits.dwyl.io/ashernoel/infinitetrends)\n\n**InfiniteTrends** is a Python API built upon [pytrends](https://github.com/GeneralMills/pytrends) to query data from [trends.google.com](http://www.trends.google.com).\n\nInstallation\n------------\n\nTo install with pip, run\n\n```\npip install InfiniteTrends\n```\nYou can also clone this repository and run `python setup.py install`.\n\nDocumentation\n------------\n### Interest Over Time For Many Keywords\n\nUse the `get_interest_over_time(keywords, region, timeframe, topic_flag)` function to list all chart names:\n\n```Python\n>>> import InfiniteTrends\n>>> output = InfiniteTrends.get_interest_over_time([\"Harvard University\", \"Yale University\"], \"US\", \"2019-01-01 2020-01-01\", True)\n```\n\nThe arguments are:\n\n* `keywords` &ndash; The input terms. \n    - Keywords cannot contain duplicates. \n    - There is no cap on the number of inputted keywords. \n    - All terms are scaled by the 1st (0th index) keyword.\n* `region` &ndash; The geographic region of interest.   \n  - This is usually a two letter country abbreviation\n  - For example, the United States is ```'US'``` and the world is ```''```\n  - There is more detail available for states, provinces, and cities by specifying additonal abbreviations. For example, Alabama is ```'US-AL'``` and England is ```'GB-ENG'```.\n* `timeframe` &ndash; A string in \"YYYY-MM-DD YYYY-MM-DD\" that signifies the start and end of the interval of interest. \n* `topic_flag` &ndash; A boolean indicator. \n    - If this is FALSE, then keywords will be vanilla \"Search Terms\" in Google Trends. \n    - If this is TRUE, then results will use the first \"Topic\" that come up when typing in a keyword into the searchbar on the Google Trends website.\n\n\n### Viral Terms Related to One Keyword\n\nUse the `get_viral_keywords(keyword, region, timeframe, interval, cutoff)` function to return a list of all of the **'Viral'** terms that people searching for a keyword also searched for over a period of time. \n\n**Definition of a Viral Term:** Any keyword related to searches of a master `keyword` that saw an increase in Google Trends traffic of over `cutoff`% during at least one period of `interval` days in a specified `region` during a longer `timeframe`. A keyword is *related* to another if people searching for one often search for another. \n\n```Python\n>>> import InfiniteTrends\n>>> output = InfiniteTrends.get_viral_keywords(\"Netflix\", \"US\", \"2019-01-01 2020-01-01\", 7, 300)\n```\n\n\nThe arguments are:\n\n* `keyword` &ndash; This is the ONE input term. \n* `region` &ndash; The geographic region of interest.   \n  - This is usually a two letter country abbreviation\n  - For example, the United States is ```'US'``` and the world is ```''```\n  - There is more detail available for states, provinces, and cities by specifying additonal abbreviations. For example, Alabama is ```'US-AL'``` and England is ```'GB-ENG'```.\n* `timeframe` &ndash; A string in \"YYYY-MM-DD YYYY-MM-DD\" that signifies the start and end of the total interval of interest. \n* `interval` &ndash; The length of time that a keyword has to increase in traffic a `cutoff` amount. See the **Definition of a Viral Term** above for a more precise wording. \n* `cutoff` &ndash; An integer indicating the percentage increase in traffic that a keyword related to the master `keyword` must experience to be recognized as a **Viral Term**. For example, 100 would indicate 100%. \n\nMade with InfiniteTrends\n------------\n\n[\"Analyzing College Prestige and Virality Through Google Trends\"](https://medium.com/harvard-open-data-project/analyzing-college-prestige-and-virality-through-google-trends-218b9ea767e6). This project and accompanying [github repository](https://github.com/ashernoel/Viral-Trends-Clustering) analyzed interest in colleges and then the clustered viral keywords related to Harvard and MIT specifically. The unsupervised clusterings of the viral topics reflect a divergence in the cultures of the two Cambridge institutions.\n\n\n\nDependencies\n------------\n* [Pandas](https://pandas.pydata.org/)\n* [Pytrends](https://github.com/GeneralMills/pytrends)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/ashernoel/InfiniteTrends/archive/v_03.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.ashernoel.io", "keywords": "Google Trends,Interest,Viral,Related", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "InfiniteTrends", "package_url": "https://pypi.org/project/InfiniteTrends/", "platform": "", "project_url": "https://pypi.org/project/InfiniteTrends/", "project_urls": {"Download": "https://github.com/ashernoel/InfiniteTrends/archive/v_03.tar.gz", "Homepage": "https://www.ashernoel.io"}, "release_url": "https://pypi.org/project/InfiniteTrends/0.3/", "requires_dist": null, "requires_python": "", "summary": "An upgraded Google Trends API that can query infinitely many terms.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>InfiniteTrends</h1>\n<p><a href=\"https://github.com/dwyl/esta/issues\" rel=\"nofollow\"><img alt=\"contributions welcome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/793ef3fadef48113e66f3c652ebc9b591bcb1745/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174\"></a> <a href=\"http://inch-ci.org/github/ashernoel/infinitetrends\" rel=\"nofollow\"><img alt=\"Inline docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7ec70f2f8f5579c53849596492224dc1ce8c823/687474703a2f2f696e63682d63692e6f72672f6769746875622f61736865726e6f656c2f696e66696e6974657472656e64732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"http://hits.dwyl.io/ashernoel/infinitetrends\" rel=\"nofollow\"><img alt=\"HitCount\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68ee1186ccd94ebf1337c6a768bebf43c02f76ec/687474703a2f2f686974732e6477796c2e696f2f61736865726e6f656c2f696e66696e6974657472656e64732e737667\"></a></p>\n<p><strong>InfiniteTrends</strong> is a Python API built upon <a href=\"https://github.com/GeneralMills/pytrends\" rel=\"nofollow\">pytrends</a> to query data from <a href=\"http://www.trends.google.com\" rel=\"nofollow\">trends.google.com</a>.</p>\n<h2>Installation</h2>\n<p>To install with pip, run</p>\n<pre><code>pip install InfiniteTrends\n</code></pre>\n<p>You can also clone this repository and run <code>python setup.py install</code>.</p>\n<h2>Documentation</h2>\n<h3>Interest Over Time For Many Keywords</h3>\n<p>Use the <code>get_interest_over_time(keywords, region, timeframe, topic_flag)</code> function to list all chart names:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">InfiniteTrends</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">InfiniteTrends</span><span class=\"o\">.</span><span class=\"n\">get_interest_over_time</span><span class=\"p\">([</span><span class=\"s2\">\"Harvard University\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Yale University\"</span><span class=\"p\">],</span> <span class=\"s2\">\"US\"</span><span class=\"p\">,</span> <span class=\"s2\">\"2019-01-01 2020-01-01\"</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The arguments are:</p>\n<ul>\n<li><code>keywords</code> \u2013 The input terms.\n<ul>\n<li>Keywords cannot contain duplicates.</li>\n<li>There is no cap on the number of inputted keywords.</li>\n<li>All terms are scaled by the 1st (0th index) keyword.</li>\n</ul>\n</li>\n<li><code>region</code> \u2013 The geographic region of interest.\n<ul>\n<li>This is usually a two letter country abbreviation</li>\n<li>For example, the United States is <code>'US'</code> and the world is <code>''</code></li>\n<li>There is more detail available for states, provinces, and cities by specifying additonal abbreviations. For example, Alabama is <code>'US-AL'</code> and England is <code>'GB-ENG'</code>.</li>\n</ul>\n</li>\n<li><code>timeframe</code> \u2013 A string in \"YYYY-MM-DD YYYY-MM-DD\" that signifies the start and end of the interval of interest.</li>\n<li><code>topic_flag</code> \u2013 A boolean indicator.\n<ul>\n<li>If this is FALSE, then keywords will be vanilla \"Search Terms\" in Google Trends.</li>\n<li>If this is TRUE, then results will use the first \"Topic\" that come up when typing in a keyword into the searchbar on the Google Trends website.</li>\n</ul>\n</li>\n</ul>\n<h3>Viral Terms Related to One Keyword</h3>\n<p>Use the <code>get_viral_keywords(keyword, region, timeframe, interval, cutoff)</code> function to return a list of all of the <strong>'Viral'</strong> terms that people searching for a keyword also searched for over a period of time.</p>\n<p><strong>Definition of a Viral Term:</strong> Any keyword related to searches of a master <code>keyword</code> that saw an increase in Google Trends traffic of over <code>cutoff</code>% during at least one period of <code>interval</code> days in a specified <code>region</code> during a longer <code>timeframe</code>. A keyword is <em>related</em> to another if people searching for one often search for another.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">InfiniteTrends</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">InfiniteTrends</span><span class=\"o\">.</span><span class=\"n\">get_viral_keywords</span><span class=\"p\">(</span><span class=\"s2\">\"Netflix\"</span><span class=\"p\">,</span> <span class=\"s2\">\"US\"</span><span class=\"p\">,</span> <span class=\"s2\">\"2019-01-01 2020-01-01\"</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>\n</pre>\n<p>The arguments are:</p>\n<ul>\n<li><code>keyword</code> \u2013 This is the ONE input term.</li>\n<li><code>region</code> \u2013 The geographic region of interest.\n<ul>\n<li>This is usually a two letter country abbreviation</li>\n<li>For example, the United States is <code>'US'</code> and the world is <code>''</code></li>\n<li>There is more detail available for states, provinces, and cities by specifying additonal abbreviations. For example, Alabama is <code>'US-AL'</code> and England is <code>'GB-ENG'</code>.</li>\n</ul>\n</li>\n<li><code>timeframe</code> \u2013 A string in \"YYYY-MM-DD YYYY-MM-DD\" that signifies the start and end of the total interval of interest.</li>\n<li><code>interval</code> \u2013 The length of time that a keyword has to increase in traffic a <code>cutoff</code> amount. See the <strong>Definition of a Viral Term</strong> above for a more precise wording.</li>\n<li><code>cutoff</code> \u2013 An integer indicating the percentage increase in traffic that a keyword related to the master <code>keyword</code> must experience to be recognized as a <strong>Viral Term</strong>. For example, 100 would indicate 100%.</li>\n</ul>\n<h2>Made with InfiniteTrends</h2>\n<p><a href=\"https://medium.com/harvard-open-data-project/analyzing-college-prestige-and-virality-through-google-trends-218b9ea767e6\" rel=\"nofollow\">\"Analyzing College Prestige and Virality Through Google Trends\"</a>. This project and accompanying <a href=\"https://github.com/ashernoel/Viral-Trends-Clustering\" rel=\"nofollow\">github repository</a> analyzed interest in colleges and then the clustered viral keywords related to Harvard and MIT specifically. The unsupervised clusterings of the viral topics reflect a divergence in the cultures of the two Cambridge institutions.</p>\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">Pandas</a></li>\n<li><a href=\"https://github.com/GeneralMills/pytrends\" rel=\"nofollow\">Pytrends</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6463877, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6b793eac79a3108c355577fc10178463", "sha256": "1bddd01d8f3c5f24fca34eb716deac76d2ed200f454664f6c69a658e474b2d52"}, "downloads": -1, "filename": "InfiniteTrends-0.1.tar.gz", "has_sig": false, "md5_digest": "6b793eac79a3108c355577fc10178463", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3808, "upload_time": "2020-01-16T00:43:29", "upload_time_iso_8601": "2020-01-16T00:43:29.941270Z", "url": "https://files.pythonhosted.org/packages/22/4f/76dec93d314e6263c4af9aceee787fc324fc17c209b323e75995918eb372/InfiniteTrends-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f583ddc166160cd54f805b387ba73621", "sha256": "23478a7b0e07e3eff1151958ac892aa23d7f11d0e76d29a1208feb66f2a2deb0"}, "downloads": -1, "filename": "InfiniteTrends-0.2.tar.gz", "has_sig": false, "md5_digest": "f583ddc166160cd54f805b387ba73621", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3383, "upload_time": "2020-01-16T01:15:18", "upload_time_iso_8601": "2020-01-16T01:15:18.682998Z", "url": "https://files.pythonhosted.org/packages/45/95/9fcd4d768f4157080fec6dfb502e39d3f2b09ccf32b2da6b8d23ede447ed/InfiniteTrends-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "eaa0858559e662ce97b30f5fb867eada", "sha256": "607cb634b592bcc246343b3950f39f1ee35d6512d62197cba78c38b1893e618f"}, "downloads": -1, "filename": "InfiniteTrends-0.3.tar.gz", "has_sig": false, "md5_digest": "eaa0858559e662ce97b30f5fb867eada", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5413, "upload_time": "2020-01-16T04:59:29", "upload_time_iso_8601": "2020-01-16T04:59:29.629793Z", "url": "https://files.pythonhosted.org/packages/31/b2/8febbe1c23861094a738c704c1efa82b421a7f9f2d109b61112523a4f4c6/InfiniteTrends-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eaa0858559e662ce97b30f5fb867eada", "sha256": "607cb634b592bcc246343b3950f39f1ee35d6512d62197cba78c38b1893e618f"}, "downloads": -1, "filename": "InfiniteTrends-0.3.tar.gz", "has_sig": false, "md5_digest": "eaa0858559e662ce97b30f5fb867eada", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5413, "upload_time": "2020-01-16T04:59:29", "upload_time_iso_8601": "2020-01-16T04:59:29.629793Z", "url": "https://files.pythonhosted.org/packages/31/b2/8febbe1c23861094a738c704c1efa82b421a7f9f2d109b61112523a4f4c6/InfiniteTrends-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:10 2020"}