{"info": {"author": "Bernhard Walter", "author_email": "b_walter@arcor.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# SSH Kernel - an ipykernel over ssh\n\nA remote jupyterkernel via ssh\n\n* Free software: MIT license\n\nThe ideas are heavily based on [remote_ikernel](https://bitbucket.org/tdaff/remote_ikernel), however `ssh_ipykernel`adds some important features\n\n* `jupyter_client`'s function `write_connection_file` is used on the remote server to get free ports\n* Local ports (obtained by jupyter also via `write_connection_file`) will be ssh forwarded to the remote ports\n* The ssh connection and the tunnel command will be retried in case of network or similar errors\n* introduced signal handling with python's `signal` module\n\n## Usage\n\n* Usage of ssh_ipykernel\n\n  ```text\n  $ python -m ssh_ipykernel -h\n  usage: __main__.py [--help] [--timeout TIMEOUT] [--env [ENV [ENV ...]]] [-s]\n                    --file FILE --host HOST --python PYTHON\n\n  optional arguments:\n    --help, -h            show this help message and exit\n    --timeout TIMEOUT, -t TIMEOUT\n                          timeout for remote commands\n    --env [ENV [ENV ...]], -e [ENV [ENV ...]]\n                          environment variables for the remote kernel in the\n                          form: VAR1=value1 VAR2=value2\n    -s                    sudo required to start kernel on the remote machine\n\n  required arguments:\n    --file FILE, -f FILE  jupyter kernel connection file\n    --host HOST, -H HOST  remote host\n    --python PYTHON, -p PYTHON\n                          remote python_path\n  ```\n\n* Creation of kernel specification\n\n  * from python\n\n    ```python\n    import ssh_ipykernel.manage\n    ssh_ipykernel.manage.add_kernel(\n        host=\"btest\",\n        display_name=\"SSH btest:demo(abc)\",\n        local_python_path=\"/opt/miniconda/envs/test36/bin/python\",\n        remote_python_path=\"/opt/anaconda/envs/python36\",\n        sudo=False,\n        env=\"VAR1=demo VAR2=abc\",\n        timeout=10\n    )\n    ```\n\n  * from terminal\n\n    ```bash\n    python -m ssh_ipykernel.manage --display-name \"SSH btest:demo(abc) \\\n                                   --host btest \\\n                                   --python /opt/anaconda/envs/python36 \\\n                                   --env \"VAR1=demo VAR2=abc\"\n    ```\n\n    ```bash\n    $ python -m ssh_ipykernel.manage --help\n\n    usage: manage.py [--help] [--display-name DISPLAY_NAME] [--sudo]\n                    [--timeout TIMEOUT] [--env [ENV [ENV ...]]] --host HOST\n                    --python PYTHON\n\n    optional arguments:\n      --help, -h            show this help message and exit\n      --display-name DISPLAY_NAME, -d DISPLAY_NAME\n                            kernel display name (default is host name)\n      --sudo, -s            sudo required to start kernel on the remote machine\n      --timeout TIMEOUT, -t TIMEOUT\n                            timeout for remote commands\n      --env [ENV [ENV ...]], -e [ENV [ENV ...]]\n                            environment variables for the remote kernel in the\n                            form: VAR1=value1 VAR2=value2\n\n    required arguments:\n      --host HOST, -H HOST  remote host\n      --python PYTHON, -p PYTHON\n                            remote python_path\n    ```\n\n* Checking of kernel specification\n\n  ```bash\n  $ jupyter-kernelspec list\n  Available kernels:\n    ssh__ssh_btest_demo_abc_         /Users/bernhard/Library/Jupyter/kernels/ssh__ssh_btest_demo_abc_\n  ```\n\n  ```bash\n  $ cat /Users/bernhard/Library/Jupyter/kernels/ssh__ssh_btest_demo_abc_/kernel.json\n  {\n    \"argv\": [\n      \"/opt/miniconda/envs/test36/bin/python\",\n      \"-m\",\n      \"ssh_ipykernel\",\n      \"--host\",\n      \"btest\",\n      \"--python\",\n      \"/opt/anaconda/envs/python36\",\n      \"--timeout\",\n      \"10\",\n      \"--env\",\n      \"VAR1=demo VAR2=abc\",\n      \"-f\",\n      \"{connection_file}\"\n    ],\n    \"display_name\": \"SSH btest:demo(abc)\",\n    \"language\": \"python\"\n  }\n  ```\n\n## Credits\n\nThe ideas are heavily based on\n\n* [remote_ikernel](https://bitbucket.org/tdaff/remote_ikernel)\n\n\n# History\n\n## 0.1.0 (2019-09-01)\n\n* First release on github\n\n## 0.9.0 (2019-09-03)\n\n* Restructured pxssh calls\n* Rewrote keeping alive routine\n* Stabilized error detection (cluster not reachable, VPN cut, ipykernel missing)\n\n## 0.9.2 (2019-09-20)\n\n* Added code to call ssh_ipykernel as a module to add a kernel\n* Added doc strings to all classes and methods\n\n## 0.9.3 (2019-09-20)\n\n* Fixed argument error for env variables in ssh_ipykernel.manage\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bernhard-42/ssh_ipykernel", "keywords": "ssh_ipykernel", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "ssh-ipykernel", "package_url": "https://pypi.org/project/ssh-ipykernel/", "platform": "", "project_url": "https://pypi.org/project/ssh-ipykernel/", "project_urls": {"Homepage": "https://github.com/bernhard-42/ssh_ipykernel"}, "release_url": "https://pypi.org/project/ssh-ipykernel/1.0.0/", "requires_dist": ["pexpect (==4.7.0)", "tornado (>=6.0.3)", "jupyter-client (<5.4.0,>=5.3.1)", "jupyterlab (<2.2.0,>=2.1.0)"], "requires_python": ">=3.5", "summary": "A remote jupyter ipykernel via ssh", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SSH Kernel - an ipykernel over ssh</h1>\n<p>A remote jupyterkernel via ssh</p>\n<ul>\n<li>Free software: MIT license</li>\n</ul>\n<p>The ideas are heavily based on <a href=\"https://bitbucket.org/tdaff/remote_ikernel\" rel=\"nofollow\">remote_ikernel</a>, however <code>ssh_ipykernel</code>adds some important features</p>\n<ul>\n<li><code>jupyter_client</code>'s function <code>write_connection_file</code> is used on the remote server to get free ports</li>\n<li>Local ports (obtained by jupyter also via <code>write_connection_file</code>) will be ssh forwarded to the remote ports</li>\n<li>The ssh connection and the tunnel command will be retried in case of network or similar errors</li>\n<li>introduced signal handling with python's <code>signal</code> module</li>\n</ul>\n<h2>Usage</h2>\n<ul>\n<li>\n<p>Usage of ssh_ipykernel</p>\n<pre>$ python -m ssh_ipykernel -h\nusage: __main__.py [--help] [--timeout TIMEOUT] [--env [ENV [ENV ...]]] [-s]\n                  --file FILE --host HOST --python PYTHON\n\noptional arguments:\n  --help, -h            show this help message and exit\n  --timeout TIMEOUT, -t TIMEOUT\n                        timeout for remote commands\n  --env [ENV [ENV ...]], -e [ENV [ENV ...]]\n                        environment variables for the remote kernel in the\n                        form: VAR1=value1 VAR2=value2\n  -s                    sudo required to start kernel on the remote machine\n\nrequired arguments:\n  --file FILE, -f FILE  jupyter kernel connection file\n  --host HOST, -H HOST  remote host\n  --python PYTHON, -p PYTHON\n                        remote python_path\n</pre>\n</li>\n<li>\n<p>Creation of kernel specification</p>\n<ul>\n<li>\n<p>from python</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ssh_ipykernel.manage</span>\n<span class=\"n\">ssh_ipykernel</span><span class=\"o\">.</span><span class=\"n\">manage</span><span class=\"o\">.</span><span class=\"n\">add_kernel</span><span class=\"p\">(</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"btest\"</span><span class=\"p\">,</span>\n    <span class=\"n\">display_name</span><span class=\"o\">=</span><span class=\"s2\">\"SSH btest:demo(abc)\"</span><span class=\"p\">,</span>\n    <span class=\"n\">local_python_path</span><span class=\"o\">=</span><span class=\"s2\">\"/opt/miniconda/envs/test36/bin/python\"</span><span class=\"p\">,</span>\n    <span class=\"n\">remote_python_path</span><span class=\"o\">=</span><span class=\"s2\">\"/opt/anaconda/envs/python36\"</span><span class=\"p\">,</span>\n    <span class=\"n\">sudo</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">env</span><span class=\"o\">=</span><span class=\"s2\">\"VAR1=demo VAR2=abc\"</span><span class=\"p\">,</span>\n    <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">10</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>from terminal</p>\n<pre>python -m ssh_ipykernel.manage --display-name <span class=\"s2\">\"SSH btest:demo(abc) \\</span>\n<span class=\"s2\">                               --host btest \\</span>\n<span class=\"s2\">                               --python /opt/anaconda/envs/python36 \\</span>\n<span class=\"s2\">                               --env \"</span><span class=\"nv\">VAR1</span><span class=\"o\">=</span>demo <span class=\"nv\">VAR2</span><span class=\"o\">=</span>abc<span class=\"s2\">\"</span>\n</pre>\n<pre>$ python -m ssh_ipykernel.manage --help\n\nusage: manage.py <span class=\"o\">[</span>--help<span class=\"o\">]</span> <span class=\"o\">[</span>--display-name DISPLAY_NAME<span class=\"o\">]</span> <span class=\"o\">[</span>--sudo<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--timeout TIMEOUT<span class=\"o\">]</span> <span class=\"o\">[</span>--env <span class=\"o\">[</span>ENV <span class=\"o\">[</span>ENV ...<span class=\"o\">]]]</span> --host HOST\n                --python PYTHON\n\noptional arguments:\n  --help, -h            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --display-name DISPLAY_NAME, -d DISPLAY_NAME\n                        kernel display name <span class=\"o\">(</span>default is host name<span class=\"o\">)</span>\n  --sudo, -s            sudo required to start kernel on the remote machine\n  --timeout TIMEOUT, -t TIMEOUT\n                        timeout <span class=\"k\">for</span> remote commands\n  --env <span class=\"o\">[</span>ENV <span class=\"o\">[</span>ENV ...<span class=\"o\">]]</span>, -e <span class=\"o\">[</span>ENV <span class=\"o\">[</span>ENV ...<span class=\"o\">]]</span>\n                        environment variables <span class=\"k\">for</span> the remote kernel in the\n                        form: <span class=\"nv\">VAR1</span><span class=\"o\">=</span>value1 <span class=\"nv\">VAR2</span><span class=\"o\">=</span>value2\n\nrequired arguments:\n  --host HOST, -H HOST  remote host\n  --python PYTHON, -p PYTHON\n                        remote python_path\n</pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Checking of kernel specification</p>\n<pre>$ jupyter-kernelspec list\nAvailable kernels:\n  ssh__ssh_btest_demo_abc_         /Users/bernhard/Library/Jupyter/kernels/ssh__ssh_btest_demo_abc_\n</pre>\n<pre>$ cat /Users/bernhard/Library/Jupyter/kernels/ssh__ssh_btest_demo_abc_/kernel.json\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"argv\"</span>: <span class=\"o\">[</span>\n    <span class=\"s2\">\"/opt/miniconda/envs/test36/bin/python\"</span>,\n    <span class=\"s2\">\"-m\"</span>,\n    <span class=\"s2\">\"ssh_ipykernel\"</span>,\n    <span class=\"s2\">\"--host\"</span>,\n    <span class=\"s2\">\"btest\"</span>,\n    <span class=\"s2\">\"--python\"</span>,\n    <span class=\"s2\">\"/opt/anaconda/envs/python36\"</span>,\n    <span class=\"s2\">\"--timeout\"</span>,\n    <span class=\"s2\">\"10\"</span>,\n    <span class=\"s2\">\"--env\"</span>,\n    <span class=\"s2\">\"VAR1=demo VAR2=abc\"</span>,\n    <span class=\"s2\">\"-f\"</span>,\n    <span class=\"s2\">\"{connection_file}\"</span>\n  <span class=\"o\">]</span>,\n  <span class=\"s2\">\"display_name\"</span>: <span class=\"s2\">\"SSH btest:demo(abc)\"</span>,\n  <span class=\"s2\">\"language\"</span>: <span class=\"s2\">\"python\"</span>\n<span class=\"o\">}</span>\n</pre>\n</li>\n</ul>\n<h2>Credits</h2>\n<p>The ideas are heavily based on</p>\n<ul>\n<li><a href=\"https://bitbucket.org/tdaff/remote_ikernel\" rel=\"nofollow\">remote_ikernel</a></li>\n</ul>\n<h1>History</h1>\n<h2>0.1.0 (2019-09-01)</h2>\n<ul>\n<li>First release on github</li>\n</ul>\n<h2>0.9.0 (2019-09-03)</h2>\n<ul>\n<li>Restructured pxssh calls</li>\n<li>Rewrote keeping alive routine</li>\n<li>Stabilized error detection (cluster not reachable, VPN cut, ipykernel missing)</li>\n</ul>\n<h2>0.9.2 (2019-09-20)</h2>\n<ul>\n<li>Added code to call ssh_ipykernel as a module to add a kernel</li>\n<li>Added doc strings to all classes and methods</li>\n</ul>\n<h2>0.9.3 (2019-09-20)</h2>\n<ul>\n<li>Fixed argument error for env variables in ssh_ipykernel.manage</li>\n</ul>\n\n          </div>"}, "last_serial": 7189670, "releases": {"0.9.3": [{"comment_text": "", "digests": {"md5": "59950beee10c1e23b556a8254739b9f6", "sha256": "33b7ad005ab61ef51603960867f94a375a00d065403f534309d99334ae2db2e3"}, "downloads": -1, "filename": "ssh_ipykernel-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "59950beee10c1e23b556a8254739b9f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12257, "upload_time": "2019-09-20T18:33:15", "upload_time_iso_8601": "2019-09-20T18:33:15.054781Z", "url": "https://files.pythonhosted.org/packages/20/fd/c531ad1dfff518f577871e15fd82bc9c9324c67b962d23f397e18fea8851/ssh_ipykernel-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd39fbe8acbbb9c5bf9acf4e7b86ffa0", "sha256": "8b1ec12b86907295383348640d43b84341e9a58db08e49aa6623df5b1ef604f8"}, "downloads": -1, "filename": "ssh_ipykernel-0.9.3.tar.gz", "has_sig": false, "md5_digest": "cd39fbe8acbbb9c5bf9acf4e7b86ffa0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11560, "upload_time": "2019-09-20T18:33:16", "upload_time_iso_8601": "2019-09-20T18:33:16.621753Z", "url": "https://files.pythonhosted.org/packages/5c/2a/4e391b2c480fb7d8f1516bc6565cb37a887739307ad60b08c7afe172950f/ssh_ipykernel-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "96876bd2b81770cd09656f2888f2c34f", "sha256": "1f437af34b097caa95c9ec88a91a473555609d5d16a8022b401914def830ea89"}, "downloads": -1, "filename": "ssh_ipykernel-0.9.4-py3-none-any.whl", "has_sig": false, "md5_digest": "96876bd2b81770cd09656f2888f2c34f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 12254, "upload_time": "2019-11-06T14:47:48", "upload_time_iso_8601": "2019-11-06T14:47:48.877790Z", "url": "https://files.pythonhosted.org/packages/b4/31/0e5b23b13a8a1d8d8229a7d4d3bdf6d2f322b95425dd98e7353e805e11d9/ssh_ipykernel-0.9.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4e5d851a591e60aa2245f5e1bb34de9", "sha256": "921876802c67634fd67a78e0663a0990083014aa3facd41f4b1deaa87d5430ed"}, "downloads": -1, "filename": "ssh_ipykernel-0.9.4.tar.gz", "has_sig": false, "md5_digest": "c4e5d851a591e60aa2245f5e1bb34de9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11543, "upload_time": "2019-11-06T14:47:50", "upload_time_iso_8601": "2019-11-06T14:47:50.541932Z", "url": "https://files.pythonhosted.org/packages/75/77/c9092340b352e40e058665b4b7f55d97ad2a222a05133f960a8895cc5b95/ssh_ipykernel-0.9.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "31526e029476be6bb4c12ddbfd64fa57", "sha256": "24928234142d57ca7833d09481bb90509acefd635b8a5155fd97c928fa0a5419"}, "downloads": -1, "filename": "ssh_ipykernel-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "31526e029476be6bb4c12ddbfd64fa57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15819, "upload_time": "2020-05-07T15:49:38", "upload_time_iso_8601": "2020-05-07T15:49:38.870849Z", "url": "https://files.pythonhosted.org/packages/f8/49/16961c88affadb876861e74579ed44a11bdfcbdce682b9462cdf864f7e1e/ssh_ipykernel-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b761b0f5c1390d84f0e9dd054e4a41f4", "sha256": "4dc866ce657f7bfe8f014a09d64e6a94525901cf00b46ff79e09222d0c75d694"}, "downloads": -1, "filename": "ssh_ipykernel-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b761b0f5c1390d84f0e9dd054e4a41f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13557, "upload_time": "2020-05-07T15:49:40", "upload_time_iso_8601": "2020-05-07T15:49:40.393145Z", "url": "https://files.pythonhosted.org/packages/68/53/6003e247a46a064fcefe617f8ad60d2ecf46e71128525886717a45565841/ssh_ipykernel-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31526e029476be6bb4c12ddbfd64fa57", "sha256": "24928234142d57ca7833d09481bb90509acefd635b8a5155fd97c928fa0a5419"}, "downloads": -1, "filename": "ssh_ipykernel-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "31526e029476be6bb4c12ddbfd64fa57", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15819, "upload_time": "2020-05-07T15:49:38", "upload_time_iso_8601": "2020-05-07T15:49:38.870849Z", "url": "https://files.pythonhosted.org/packages/f8/49/16961c88affadb876861e74579ed44a11bdfcbdce682b9462cdf864f7e1e/ssh_ipykernel-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b761b0f5c1390d84f0e9dd054e4a41f4", "sha256": "4dc866ce657f7bfe8f014a09d64e6a94525901cf00b46ff79e09222d0c75d694"}, "downloads": -1, "filename": "ssh_ipykernel-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b761b0f5c1390d84f0e9dd054e4a41f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13557, "upload_time": "2020-05-07T15:49:40", "upload_time_iso_8601": "2020-05-07T15:49:40.393145Z", "url": "https://files.pythonhosted.org/packages/68/53/6003e247a46a064fcefe617f8ad60d2ecf46e71128525886717a45565841/ssh_ipykernel-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:08 2020"}