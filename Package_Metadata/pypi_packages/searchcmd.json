{"info": {"author": "Jimmy Petersson", "author_email": "jimmy.petersson@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: POSIX", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Software Development", "Topic :: System :: Systems Administration"], "description": "===============================\nsearchcmd\n===============================\n\n.. image:: https://img.shields.io/travis/jimmyppi/searchcmd.svg\n        :target: https://travis-ci.org/jimmyppi/searchcmd\n\n.. image:: https://img.shields.io/pypi/v/searchcmd.svg\n        :target: https://pypi.python.org/pypi/searchcmd\n\n* Free software: BSD license\n\nGet help from your friends on the internets without leaving your best friend the cli.\n\nMotivation\n----------\n\nMany commands have really many flags and the man pages often lack examples. It is usually faster to go to your browser and search for what you want to do.\n\nInstallation\n------------\n\n::\n\n sudo apt-get install libxml2-dev libxslt-dev python-dev\n pip install searchcmd\n\nExamples\n--------\n\n::\n\n # searchcmd git commit \"change last commit message\"\n git commit      (git-scm.com, kernel.org)\n git commit --amend      (help.github.com)\n git commit \u2013amend -m \u2018new message\u2019      (makandracards.com)\n git commit --amend --no-edit    (kernel.org)\n git commit -c ORIG_HEAD (kernel.org)\n\n::\n\n # searchcmd find \"sort files by size\"\n find . -type f -printf \"%s\\t%p\\n\" | sort -n     (unix.stackexchange.com)\n find . -type f | xargs du -h | sort -rn (unix.stackexchange.com)\n find . -type f -print0 | xargs -0 ls -la | awk '{print int($5/1000) \" KB\\t\" $9}' | sort -n -r -k1       (unix.stackexchange.com)\n find . -type f -ls | sort -r -n -k7     (unix.stackexchange.com)\n find . -type f -ls -printf '\\0' | sort -zk7rn | tr -d '\\0'      (unix.stackexchange.com)\n\nManual\n------\n\n::\n\n usage: searchcmd [-h] [-v] [--no-cache] [--engine {bing,google}] [-n MAX_HITS]\n                  [--max-download MAX_DOWNLOAD]\n                  query [query ...]\n\n positional arguments:\n   query                 Type a command and/or describe what you want to do in\n                         quotes.\n\n optional arguments:\n   -h, --help            show this help message and exit\n   -v, --verbose         Include source url in output.\n   --no-cache            Skip cache, always do a new search.\n   --engine {bing,google}\n                         The search engine to use.\n   -n MAX_HITS, --max-hits MAX_HITS\n                         Max number of commands to show.\n   --max-download MAX_DOWNLOAD\n                         Download max this number of search hits.\n\n Examples:\n searchcmd git commit \"change last commit message\"\n searchcmd find directory\n searchcmd \"search replace\"\n\nSimilar projects\n----------------\n\nUseful examples at the command line:\nhttps://github.com/srsudar/eg\n\nSearch commandlinefu.com from the terminal:\nhttps://github.com/ncrocfer/clf\n\nTodo\n----\n\n* Support for recognizing more advanced prompts. Example: `um@server#find . -name \"*sh*\"`\n* Merge commands that do the same thing.\n* Support for beautifulsoup in py3.\n* An open ended search (for example \"search replace\") will only find commands that are installed on the system. Better filtering of false positives is needed to allow unknown commands. A solution could be to train a probabilistic parser like https://github.com/datamade/parserator\n\n\n\n\nHistory\n-------\n\n0.1.0 (2015-06-01)\n---------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jimmyppi/searchcmd/", "keywords": "searchcmd cli", "license": "lite BSD", "maintainer": null, "maintainer_email": null, "name": "searchcmd", "package_url": "https://pypi.org/project/searchcmd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/searchcmd/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jimmyppi/searchcmd/"}, "release_url": "https://pypi.org/project/searchcmd/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Search the internets for commands from the command line.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jimmyppi/searchcmd\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/jimmyppi/searchcmd.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7985980c984875764c7ac4971d6d2968518d35dc/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a696d6d797070692f736561726368636d642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/searchcmd\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/searchcmd.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/65b7d05ed08b8bde25f61d2729fdaca1c8355b85/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736561726368636d642e737667\"></a>\n<ul>\n<li>Free software: BSD license</li>\n</ul>\n<p>Get help from your friends on the internets without leaving your best friend the cli.</p>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<p>Many commands have really many flags and the man pages often lack examples. It is usually faster to go to your browser and search for what you want to do.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>sudo apt-get install libxml2-dev libxslt-dev python-dev\npip install searchcmd\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre># searchcmd git commit \"change last commit message\"\ngit commit      (git-scm.com, kernel.org)\ngit commit --amend      (help.github.com)\ngit commit \u2013amend -m \u2018new message\u2019      (makandracards.com)\ngit commit --amend --no-edit    (kernel.org)\ngit commit -c ORIG_HEAD (kernel.org)\n</pre>\n<pre># searchcmd find \"sort files by size\"\nfind . -type f -printf \"%s\\t%p\\n\" | sort -n     (unix.stackexchange.com)\nfind . -type f | xargs du -h | sort -rn (unix.stackexchange.com)\nfind . -type f -print0 | xargs -0 ls -la | awk '{print int($5/1000) \" KB\\t\" $9}' | sort -n -r -k1       (unix.stackexchange.com)\nfind . -type f -ls | sort -r -n -k7     (unix.stackexchange.com)\nfind . -type f -ls -printf '\\0' | sort -zk7rn | tr -d '\\0'      (unix.stackexchange.com)\n</pre>\n</div>\n<div id=\"manual\">\n<h2>Manual</h2>\n<pre>usage: searchcmd [-h] [-v] [--no-cache] [--engine {bing,google}] [-n MAX_HITS]\n                 [--max-download MAX_DOWNLOAD]\n                 query [query ...]\n\npositional arguments:\n  query                 Type a command and/or describe what you want to do in\n                        quotes.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --verbose         Include source url in output.\n  --no-cache            Skip cache, always do a new search.\n  --engine {bing,google}\n                        The search engine to use.\n  -n MAX_HITS, --max-hits MAX_HITS\n                        Max number of commands to show.\n  --max-download MAX_DOWNLOAD\n                        Download max this number of search hits.\n\nExamples:\nsearchcmd git commit \"change last commit message\"\nsearchcmd find directory\nsearchcmd \"search replace\"\n</pre>\n</div>\n<div id=\"similar-projects\">\n<h2>Similar projects</h2>\n<p>Useful examples at the command line:\n<a href=\"https://github.com/srsudar/eg\" rel=\"nofollow\">https://github.com/srsudar/eg</a></p>\n<p>Search commandlinefu.com from the terminal:\n<a href=\"https://github.com/ncrocfer/clf\" rel=\"nofollow\">https://github.com/ncrocfer/clf</a></p>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<ul>\n<li>Support for recognizing more advanced prompts. Example: <cite>um@server#find . -name \u201c*sh*\u201d</cite></li>\n<li>Merge commands that do the same thing.</li>\n<li>Support for beautifulsoup in py3.</li>\n<li>An open ended search (for example \u201csearch replace\u201d) will only find commands that are installed on the system. Better filtering of false positives is needed to allow unknown commands. A solution could be to train a probabilistic parser like <a href=\"https://github.com/datamade/parserator\" rel=\"nofollow\">https://github.com/datamade/parserator</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n</div>\n<div id=\"id1\">\n<h2>0.1.0 (2015-06-01)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1591363, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b182c156376b899cbb0a387601418100", "sha256": "35093c06d9ee4c7cd0d9e03ca33028727b8a895cf2c1a362bc7a3102e0dce5e1"}, "downloads": -1, "filename": "searchcmd-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b182c156376b899cbb0a387601418100", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167287, "upload_time": "2015-06-14T05:54:39", "upload_time_iso_8601": "2015-06-14T05:54:39.294680Z", "url": "https://files.pythonhosted.org/packages/e6/21/2622ba671c40411d6e29b353c34dafe63a00ecfcadad898f4b94cbe991dd/searchcmd-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b182c156376b899cbb0a387601418100", "sha256": "35093c06d9ee4c7cd0d9e03ca33028727b8a895cf2c1a362bc7a3102e0dce5e1"}, "downloads": -1, "filename": "searchcmd-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b182c156376b899cbb0a387601418100", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167287, "upload_time": "2015-06-14T05:54:39", "upload_time_iso_8601": "2015-06-14T05:54:39.294680Z", "url": "https://files.pythonhosted.org/packages/e6/21/2622ba671c40411d6e29b353c34dafe63a00ecfcadad898f4b94cbe991dd/searchcmd-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:05 2020"}