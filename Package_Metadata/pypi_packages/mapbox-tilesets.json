{"info": {"author": "Mapbox", "author_email": "sam@mapbox.com", "bugtrack_url": null, "classifiers": [], "description": "# tilesets-cli\n\n[![Build Status](https://travis-ci.com/mapbox/tilesets-cli.svg?token=wqR3RcWUEprcQ1ttsgiP&branch=master)](https://travis-ci.com/mapbox/tilesets-cli) [![codecov](https://codecov.io/gh/mapbox/tilesets-cli/branch/master/graph/badge.svg?token=YBTKyc2o3j)](https://codecov.io/gh/mapbox/tilesets-cli)\n\nCLI for interacting with and preparing data for [Mapbox Tilesets API](https://docs.mapbox.com/api/maps/#tilesets).\n\n# Contributing\n\n[CONTRIBUTING.md](/CONTRIBUTING.md) includes information about release processes & running tests. :raised_hands:\n\n# Installation\n`pip install mapbox-tilesets`\n\n#### Requirements\n\n- Python >= 3.6 (can be installed via virtualenv)\n- Recommended: [virtualenv](https://virtualenv.pypa.io/) / [virtualenvwrapper](https://virtualenvwrapper.readthedocs.io/en/latest/)\n\n#### Mapbox Access Tokens\n\nIn order to use the tilesets endpoints, you need a Mapbox Access Token with `tilesets:write` and `tilesets:read` scopes. This is a secret token, so do not share it publicly!\n\nYou can either pass the Mapbox access token to each command with the `--token` flag or export it as an environment variable. Acceptable values are:\n\n* `MAPBOX_ACCESS_TOKEN`\n* `MapboxAccessToken`\n\nSet the environment variable with `export`\n```\nexport MAPBOX_ACCESS_TOKEN=my.token\n```\n\n# Commands\n\n* Tileset Sources\n  * [`add-source`](#add-source)\n  * [`validate-source`](#validate-source)\n  * [`view-source`](#view-source)\n  * [`list-sources`](#list-source)\n  * [`delete-source`](#delete-source)\n* Recipes\n  * [`view-recipe`](#view-recipe)\n  * [`validate-recipe`](#validate-recipe)\n  * [`update-recipe`](#update-recipe)\n* Tilesets\n  * [`create`](#create)\n  * [`publish`](#publish)\n  * [`status`](#status)\n  * [`job`](#job)\n  * [`jobs`](#jobs)\n  * [`list`](#list)\n\n### add-source\n\n```shell\ntilesets add-source <username> <id> <file>\n```\n\nFlags:\n\n* `--no-validation` [optional]: do not validate source data locally before uploading\n\nUsage\n\n```shell\n# single file\ntilesets add-source <username> <id> ./file.geojson\n\n# multiple files\ntilesets add-source <username> <id> file-1.geojson file-4.geojson\n\n# directory of files\ntilesets add-source <username> <id> ./path/to/multiple/files/\n```\n\nReading from a directory will not distinguish between GeoJSON files and non GeoJSON files. All source files will be run through our validator unless you pass the `--no-validation` flag.\n\n### validate-source\n\n```shell\ntilesets validate-source <path>\n```\n\nValidates a line delimited GeoJSON source file locally. Example error output:\n\n```JSON\nInvalid line delimited geojson.\n```\n\n### view-source\n\n```\ntilesets view-source <username> <id>\n```\n\nGet information for a tileset source, such as number of files, the size in bytes, and the ID in mapbox:// protocol format.\n\n### list-sources\n\n```\ntilesets list-sources <username>\n```\n\nList all tileset sources from a particular account. Response is an array of sources.\n\n### delete-source\n\n```\ntilesets delete-source\n```\n\nPermanently delete a tileset source and all of its files. This is not a recoverable action!\n\n### view-recipe\n\nPrints the Recipe JSON to stdout.\n\n```shell\ntilesets view-recipe <tileset_id>\n```\n\n### validate-recipe\n\nValidates a Recipe JSON document.\n\n```shell\ntilesets validate-recipe /path/to/recipe.json\n```\n\nExample `recipe.json`:\n```\n{\n  \"version\": 1,\n  \"layers\": {\n    \"trees\": {\n      \"source\": \"mapbox://tileset-source/{username}/trees-data\",\n      \"minzoom\": 4,\n      \"maxzoom\": 8\n    }\n  }\n}\n```\nSee more details about the recipe spec [here](https://docs.mapbox.com/help/troubleshooting/tileset-recipe-reference).\nSee recipe examples [here](https://docs.mapbox.com/help/troubleshooting/tileset-recipe-examples).\n\nExample error output:\n\n```JSON\n{\n  \"errors\": [\n    \"Unknown top-level key \\\"potato\\\".\"\n  ],\n  \"valid\": false\n}\n```\n\n### update-recipe\n\nUpdate the Recipe JSON for a tileset. Performs a server-side validation of the new document.\n\n```shell\ntilesets update-recipe <tileset_id> /path/to/recipe.json\n```\n\n### create\n\nCreates a brand new, empty tileset with a recipe passed in from your local filesystem.\n\n```shell\ntilesets create <tileset_id> --recipe /path/to/recipe.json --name \"My neat tileset\"\n```\n\nFlags:\n\n* `--recipe` or `-r` [required]: path to your Recipe JSON document\n* `--name` or `-n` [required]: human-readable name of your tileset. (If your tileset_id is user.my_amazing_tileset, you might want your `name` field to be \"My Amazing Tileset\".)\n* `--description` or `-d`: description of your tileset\n* `--privacy` or `-p`: Set the privacy of the tileset. Allowed values are `private` and `public`. If not provided, will default to your plan level on Mapbox.com. Pay-As-You-Go plans only support public maps.\n\n### publish\n\nQueues a tiling _job_ using the recipe provided. Use to publish a new tileset or update an existing one. Returns a job ID for progress tracking.\n\n```\ntilesets publish <tileset_id>\n```\n\n### status\n\nView the status of a tileset. This includes how many jobs are queued, processing, and complete.\n\n```\ntilesets status <tileset_id>\n```\n\n### job\n\nRetrieve a single job for a tileset.\n\n```shell\ntilesets job <tileset_id> <job_id>\n```\n\n**What is a job?** Each time you generate or regenerate your output tileset via the `publish` command (whether that's a new recipe or new source data), a single job is created that processes your data. A tileset can have many jobs, each with a unique identifier. When you publish a tileset, the HTTP response includes the unique job identifier that corresponds to the most recent job. To read more about HTTP design, see this [documentation](https://docs.mapbox.com/api/maps/#tilesets).\n\n### jobs\n\nCheck all jobs associated with a tileset. You can filter jobs by a particular `stage` - processing, queued, success, or failed.\n\n\n```shell\ntilesets jobs <tileset_id> --stage=processing\n```\n\n- --stage: Filter by the stage of jobs. (Optional.)\n\n### list\n\nList all tilesets for an account. Just lists tileset IDs by default. Use the `--verbose` option for more information.\n\n```shell\ntilesets list <username>\n```\n\n- --verbose: will list out the entire response object from the API\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mapbox/tilesets-cli", "keywords": "", "license": "BSD-2", "maintainer": "", "maintainer_email": "", "name": "mapbox-tilesets", "package_url": "https://pypi.org/project/mapbox-tilesets/", "platform": "", "project_url": "https://pypi.org/project/mapbox-tilesets/", "project_urls": {"Homepage": "https://github.com/mapbox/tilesets-cli"}, "release_url": "https://pypi.org/project/mapbox-tilesets/1.0.1.dev0/", "requires_dist": ["boto3", "click (~=7.0)", "cligj", "requests", "requests-toolbelt", "jsonschema (~=3.0)", "jsonseq (~=1.0)", "pytest (>=3.6.0) ; extra == 'test'", "pytest-cov ; extra == 'test'", "pre-commit ; extra == 'test'", "black ; extra == 'test'", "pep8 ; extra == 'test'"], "requires_python": "", "summary": "CLI for interacting with and preparing data for the Tilesets API", "version": "1.0.1.dev0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tilesets-cli</h1>\n<p><a href=\"https://travis-ci.com/mapbox/tilesets-cli\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5cbe05596f8785294b3a497b23d2140d76ee9c59/68747470733a2f2f7472617669732d63692e636f6d2f6d6170626f782f74696c65736574732d636c692e7376673f746f6b656e3d7771523352635755457072635131747473676950266272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/mapbox/tilesets-cli\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84b9dcae960b4ac84685736039808affa077b7cf/68747470733a2f2f636f6465636f762e696f2f67682f6d6170626f782f74696c65736574732d636c692f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d5942544b7963326f336a\"></a></p>\n<p>CLI for interacting with and preparing data for <a href=\"https://docs.mapbox.com/api/maps/#tilesets\" rel=\"nofollow\">Mapbox Tilesets API</a>.</p>\n<h1>Contributing</h1>\n<p><a href=\"/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> includes information about release processes &amp; running tests. :raised_hands:</p>\n<h1>Installation</h1>\n<p><code>pip install mapbox-tilesets</code></p>\n<h4>Requirements</h4>\n<ul>\n<li>Python &gt;= 3.6 (can be installed via virtualenv)</li>\n<li>Recommended: <a href=\"https://virtualenv.pypa.io/\" rel=\"nofollow\">virtualenv</a> / <a href=\"https://virtualenvwrapper.readthedocs.io/en/latest/\" rel=\"nofollow\">virtualenvwrapper</a></li>\n</ul>\n<h4>Mapbox Access Tokens</h4>\n<p>In order to use the tilesets endpoints, you need a Mapbox Access Token with <code>tilesets:write</code> and <code>tilesets:read</code> scopes. This is a secret token, so do not share it publicly!</p>\n<p>You can either pass the Mapbox access token to each command with the <code>--token</code> flag or export it as an environment variable. Acceptable values are:</p>\n<ul>\n<li><code>MAPBOX_ACCESS_TOKEN</code></li>\n<li><code>MapboxAccessToken</code></li>\n</ul>\n<p>Set the environment variable with <code>export</code></p>\n<pre><code>export MAPBOX_ACCESS_TOKEN=my.token\n</code></pre>\n<h1>Commands</h1>\n<ul>\n<li>Tileset Sources\n<ul>\n<li><a href=\"#add-source\" rel=\"nofollow\"><code>add-source</code></a></li>\n<li><a href=\"#validate-source\" rel=\"nofollow\"><code>validate-source</code></a></li>\n<li><a href=\"#view-source\" rel=\"nofollow\"><code>view-source</code></a></li>\n<li><a href=\"#list-source\" rel=\"nofollow\"><code>list-sources</code></a></li>\n<li><a href=\"#delete-source\" rel=\"nofollow\"><code>delete-source</code></a></li>\n</ul>\n</li>\n<li>Recipes\n<ul>\n<li><a href=\"#view-recipe\" rel=\"nofollow\"><code>view-recipe</code></a></li>\n<li><a href=\"#validate-recipe\" rel=\"nofollow\"><code>validate-recipe</code></a></li>\n<li><a href=\"#update-recipe\" rel=\"nofollow\"><code>update-recipe</code></a></li>\n</ul>\n</li>\n<li>Tilesets\n<ul>\n<li><a href=\"#create\" rel=\"nofollow\"><code>create</code></a></li>\n<li><a href=\"#publish\" rel=\"nofollow\"><code>publish</code></a></li>\n<li><a href=\"#status\" rel=\"nofollow\"><code>status</code></a></li>\n<li><a href=\"#job\" rel=\"nofollow\"><code>job</code></a></li>\n<li><a href=\"#jobs\" rel=\"nofollow\"><code>jobs</code></a></li>\n<li><a href=\"#list\" rel=\"nofollow\"><code>list</code></a></li>\n</ul>\n</li>\n</ul>\n<h3>add-source</h3>\n<pre>tilesets add-source &lt;username&gt; &lt;id&gt; &lt;file&gt;\n</pre>\n<p>Flags:</p>\n<ul>\n<li><code>--no-validation</code> [optional]: do not validate source data locally before uploading</li>\n</ul>\n<p>Usage</p>\n<pre><span class=\"c1\"># single file</span>\ntilesets add-source &lt;username&gt; &lt;id&gt; ./file.geojson\n\n<span class=\"c1\"># multiple files</span>\ntilesets add-source &lt;username&gt; &lt;id&gt; file-1.geojson file-4.geojson\n\n<span class=\"c1\"># directory of files</span>\ntilesets add-source &lt;username&gt; &lt;id&gt; ./path/to/multiple/files/\n</pre>\n<p>Reading from a directory will not distinguish between GeoJSON files and non GeoJSON files. All source files will be run through our validator unless you pass the <code>--no-validation</code> flag.</p>\n<h3>validate-source</h3>\n<pre>tilesets validate-source &lt;path&gt;\n</pre>\n<p>Validates a line delimited GeoJSON source file locally. Example error output:</p>\n<pre><span class=\"err\">Invalid</span> <span class=\"err\">line</span> <span class=\"err\">delimited</span> <span class=\"err\">geojson.</span>\n</pre>\n<h3>view-source</h3>\n<pre><code>tilesets view-source &lt;username&gt; &lt;id&gt;\n</code></pre>\n<p>Get information for a tileset source, such as number of files, the size in bytes, and the ID in mapbox:// protocol format.</p>\n<h3>list-sources</h3>\n<pre><code>tilesets list-sources &lt;username&gt;\n</code></pre>\n<p>List all tileset sources from a particular account. Response is an array of sources.</p>\n<h3>delete-source</h3>\n<pre><code>tilesets delete-source\n</code></pre>\n<p>Permanently delete a tileset source and all of its files. This is not a recoverable action!</p>\n<h3>view-recipe</h3>\n<p>Prints the Recipe JSON to stdout.</p>\n<pre>tilesets view-recipe &lt;tileset_id&gt;\n</pre>\n<h3>validate-recipe</h3>\n<p>Validates a Recipe JSON document.</p>\n<pre>tilesets validate-recipe /path/to/recipe.json\n</pre>\n<p>Example <code>recipe.json</code>:</p>\n<pre><code>{\n  \"version\": 1,\n  \"layers\": {\n    \"trees\": {\n      \"source\": \"mapbox://tileset-source/{username}/trees-data\",\n      \"minzoom\": 4,\n      \"maxzoom\": 8\n    }\n  }\n}\n</code></pre>\n<p>See more details about the recipe spec <a href=\"https://docs.mapbox.com/help/troubleshooting/tileset-recipe-reference\" rel=\"nofollow\">here</a>.\nSee recipe examples <a href=\"https://docs.mapbox.com/help/troubleshooting/tileset-recipe-examples\" rel=\"nofollow\">here</a>.</p>\n<p>Example error output:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"errors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"Unknown top-level key \\\"potato\\\".\"</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"valid\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>update-recipe</h3>\n<p>Update the Recipe JSON for a tileset. Performs a server-side validation of the new document.</p>\n<pre>tilesets update-recipe &lt;tileset_id&gt; /path/to/recipe.json\n</pre>\n<h3>create</h3>\n<p>Creates a brand new, empty tileset with a recipe passed in from your local filesystem.</p>\n<pre>tilesets create &lt;tileset_id&gt; --recipe /path/to/recipe.json --name <span class=\"s2\">\"My neat tileset\"</span>\n</pre>\n<p>Flags:</p>\n<ul>\n<li><code>--recipe</code> or <code>-r</code> [required]: path to your Recipe JSON document</li>\n<li><code>--name</code> or <code>-n</code> [required]: human-readable name of your tileset. (If your tileset_id is user.my_amazing_tileset, you might want your <code>name</code> field to be \"My Amazing Tileset\".)</li>\n<li><code>--description</code> or <code>-d</code>: description of your tileset</li>\n<li><code>--privacy</code> or <code>-p</code>: Set the privacy of the tileset. Allowed values are <code>private</code> and <code>public</code>. If not provided, will default to your plan level on Mapbox.com. Pay-As-You-Go plans only support public maps.</li>\n</ul>\n<h3>publish</h3>\n<p>Queues a tiling <em>job</em> using the recipe provided. Use to publish a new tileset or update an existing one. Returns a job ID for progress tracking.</p>\n<pre><code>tilesets publish &lt;tileset_id&gt;\n</code></pre>\n<h3>status</h3>\n<p>View the status of a tileset. This includes how many jobs are queued, processing, and complete.</p>\n<pre><code>tilesets status &lt;tileset_id&gt;\n</code></pre>\n<h3>job</h3>\n<p>Retrieve a single job for a tileset.</p>\n<pre>tilesets job &lt;tileset_id&gt; &lt;job_id&gt;\n</pre>\n<p><strong>What is a job?</strong> Each time you generate or regenerate your output tileset via the <code>publish</code> command (whether that's a new recipe or new source data), a single job is created that processes your data. A tileset can have many jobs, each with a unique identifier. When you publish a tileset, the HTTP response includes the unique job identifier that corresponds to the most recent job. To read more about HTTP design, see this <a href=\"https://docs.mapbox.com/api/maps/#tilesets\" rel=\"nofollow\">documentation</a>.</p>\n<h3>jobs</h3>\n<p>Check all jobs associated with a tileset. You can filter jobs by a particular <code>stage</code> - processing, queued, success, or failed.</p>\n<pre>tilesets <span class=\"nb\">jobs</span> &lt;tileset_id&gt; --stage<span class=\"o\">=</span>processing\n</pre>\n<ul>\n<li>--stage: Filter by the stage of jobs. (Optional.)</li>\n</ul>\n<h3>list</h3>\n<p>List all tilesets for an account. Just lists tileset IDs by default. Use the <code>--verbose</code> option for more information.</p>\n<pre>tilesets list &lt;username&gt;\n</pre>\n<ul>\n<li>--verbose: will list out the entire response object from the API</li>\n</ul>\n\n          </div>"}, "last_serial": 6970040, "releases": {"1.0.0.dev0": [{"comment_text": "", "digests": {"md5": "f76bd2524f5bb15b082c2a6a9a11bb08", "sha256": "a86ad13380f1570b8a6242abf6d306b35b45ca635de3c6f366f565bbcbe6fe9f"}, "downloads": -1, "filename": "mapbox_tilesets-1.0.0.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "f76bd2524f5bb15b082c2a6a9a11bb08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9376, "upload_time": "2020-04-01T23:10:45", "upload_time_iso_8601": "2020-04-01T23:10:45.501430Z", "url": "https://files.pythonhosted.org/packages/c4/22/48da325e5338eb5b309938df27af2b0e519e1a9a02e0c14a9ac61427274c/mapbox_tilesets-1.0.0.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ad279f55f32efde603d9e83cc88fa51", "sha256": "d17425860c0364fc6fce8a6bf38bbdef986b9d6228f88d57a205b8695c2f4259"}, "downloads": -1, "filename": "mapbox-tilesets-1.0.0.dev0.tar.gz", "has_sig": false, "md5_digest": "3ad279f55f32efde603d9e83cc88fa51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8391, "upload_time": "2020-04-01T23:10:47", "upload_time_iso_8601": "2020-04-01T23:10:47.625527Z", "url": "https://files.pythonhosted.org/packages/f4/01/491815e8041076555a956a6efd1a5df74ea81813a7bf936dc87a97a06380/mapbox-tilesets-1.0.0.dev0.tar.gz", "yanked": false}], "1.0.1.dev0": [{"comment_text": "", "digests": {"md5": "0a8602bf6a02f6ffc96418512159f44b", "sha256": "069822a1ec976b6412899fbce4e0e340aa4027400f2ecea7e9eb1a0465b50e1b"}, "downloads": -1, "filename": "mapbox_tilesets-1.0.1.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a8602bf6a02f6ffc96418512159f44b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9381, "upload_time": "2020-04-07T13:42:17", "upload_time_iso_8601": "2020-04-07T13:42:17.482527Z", "url": "https://files.pythonhosted.org/packages/5c/be/11d852e7128cac8de4f3b800dabc433c6bf2f07477a4dc755e6acab0d799/mapbox_tilesets-1.0.1.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eb556ad798eb612076d6196bf27fb3a", "sha256": "aa611dc63940162821cdbe2c9c9ea67419aa619aae7dd0fa8c7a679a6d68adec"}, "downloads": -1, "filename": "mapbox-tilesets-1.0.1.dev0.tar.gz", "has_sig": false, "md5_digest": "5eb556ad798eb612076d6196bf27fb3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8392, "upload_time": "2020-04-07T13:42:18", "upload_time_iso_8601": "2020-04-07T13:42:18.861880Z", "url": "https://files.pythonhosted.org/packages/e6/00/1361aa5a42ab08c6b000d74d8b626575a0455962e67cb622f3b61e4a3759/mapbox-tilesets-1.0.1.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a8602bf6a02f6ffc96418512159f44b", "sha256": "069822a1ec976b6412899fbce4e0e340aa4027400f2ecea7e9eb1a0465b50e1b"}, "downloads": -1, "filename": "mapbox_tilesets-1.0.1.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "0a8602bf6a02f6ffc96418512159f44b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9381, "upload_time": "2020-04-07T13:42:17", "upload_time_iso_8601": "2020-04-07T13:42:17.482527Z", "url": "https://files.pythonhosted.org/packages/5c/be/11d852e7128cac8de4f3b800dabc433c6bf2f07477a4dc755e6acab0d799/mapbox_tilesets-1.0.1.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eb556ad798eb612076d6196bf27fb3a", "sha256": "aa611dc63940162821cdbe2c9c9ea67419aa619aae7dd0fa8c7a679a6d68adec"}, "downloads": -1, "filename": "mapbox-tilesets-1.0.1.dev0.tar.gz", "has_sig": false, "md5_digest": "5eb556ad798eb612076d6196bf27fb3a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8392, "upload_time": "2020-04-07T13:42:18", "upload_time_iso_8601": "2020-04-07T13:42:18.861880Z", "url": "https://files.pythonhosted.org/packages/e6/00/1361aa5a42ab08c6b000d74d8b626575a0455962e67cb622f3b61e4a3759/mapbox-tilesets-1.0.1.dev0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:56 2020"}