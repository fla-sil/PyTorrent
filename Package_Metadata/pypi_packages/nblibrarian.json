{"info": {"author": "Lindsey Heagy", "author_email": "lindseyheagy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python"], "description": "nblibrarian\n===========\n\nTools for maintaining a library of Jupyter notebooks that are sourced\nfrom a \"warehouse\" of notebooks (another github repository). \n\nInstalling\n----------\n\nYou can install nblibrarian from pypi\n\n.. code:: shell\n\n  pip install nblibrarian \n  \nor from source\n\n.. code:: shell\n\n  git clone https://github.com/lheagy/nblibrarian\n  cd nblibrarian\n  pip install -e .\n  \n\nConfiguring nblibrarian\n-----------------------\n\nThere are two files that you need in order to configure `nblibrarian`:\n\n- `.library-config.yml <.library-config.yml>`_\n- `.jupyter-include <.jupyter-include>`_\n\n.library-config.yml\n^^^^^^^^^^^^^^^^^^^\n\nThe `.library-config.yml` file specifies details of the source repository and if you would like to include the `environment.yml` file and / or the `requirements.txt` file. (We recommend you download at least one of these). The structure of the `.library-config.yml` is as follows:\n\n.. code:: yaml\n\n  # information about the source library\n  source:\n    github:\n      user: geoscixyz  # github username or organization\n      repo: geosci-labs  # github repository\n      branch: master  # [optional] branch to fetch material from \n      directory: notebooks  # [optional] directory where the notebooks are in the repository - including it will speed up the search for the desired notebooks\n\n  # setup options for the library\n  setup:\n    environment: environment.yml  # [optional] include the environment.yml from the source\n    requirements: requirements.txt  # [optional] include the requirements.txt file\n\n.jupyter-include\n^^^^^^^^^^^^^^^^\n\nThe `.jupyter-include` file describes which notebooks you would like included in your library. It follows the same \nsyntax as a `.gitignore <https://git-scm.com/docs/gitignore>`_ file. \n\n.. code::\n\n  # this is a comment\n\n  # dc resistivity\n  notebooks/dcip/DCIP_2D_Overburden_Pseudosections.ipynb  # you can specify the full path\n  notebooks/dcip/DC_Building_Pseudosections  # also without the .ipynb extension\n  DC_Cylinder_2D.ipynb  # or just specify the notebook name\n\n  # em\n  /em/EM_Pipeline.ipynb\n  em/EM_ThreeLoopModel.ipynb\n  em/*Sphere*.ipynb  # includes all notebooks in a directory called em with \"Sphere\" in the title\n\n  # magnetics\n  mag/*.ipynb  # includes all notebooks in the mag directory\n\n  # inversion\n  inversion  # includes notebooks in the inversion directory\n\nUsage\n-----\n\nOnce you have specified the `.library-config.yml` and the `.jupyter-include`, you can run nblibrarian from the command line to \ndownload the files you specified. \n\n.. code:: shell\n\n  nblibrarian\n\nThere are also a few options, to run in `verbose` mode use\n\n.. code:: shell\n\n  nblibrarian -v \n  \nIf you ever want to update your library, you can always alter the `.jupyter-include` and re-run `nblibrarian`. By default, it will not overwrite your current notebooks. If you do want it to overwrite them, then run \n\n.. code:: shell\n\n  nblibrarian --overwrite=True\n\nIf you would like to specify the path to the jupyter include and config files (for example if you put them in a different directory), then use\n\n.. code:: shell\n\n  nblibrarian --config=.library-config.yml --jupyter-include=.jupyter-include\n\nIssues\n------\n\nIf you run into any bugs, questions or problems using `nblibrarian`, please `create an issue <https://github.com/lheagy/nblibrarian/issues/new>`_ on github. \n\nLicense\n-------\n\nThis work is Licensed under the `BSD 3-Clause License <LICENSE>`_.", "description_content_type": "", "docs_url": null, "download_url": "http://github.com/lheagy/nblibrarian", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/lheagy/nblibrarian", "keywords": "jupyter notebooks", "license": "3-clause BSD", "maintainer": "", "maintainer_email": "", "name": "nblibrarian", "package_url": "https://pypi.org/project/nblibrarian/", "platform": "Windows", "project_url": "https://pypi.org/project/nblibrarian/", "project_urls": {"Download": "http://github.com/lheagy/nblibrarian", "Homepage": "http://github.com/lheagy/nblibrarian"}, "release_url": "https://pypi.org/project/nblibrarian/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "nblibrarian: a utility for fetching notebooks from a source repository", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Tools for maintaining a library of Jupyter notebooks that are sourced\nfrom a \u201cwarehouse\u201d of notebooks (another github repository).</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>You can install nblibrarian from pypi</p>\n<pre>pip install nblibrarian\n</pre>\n<p>or from source</p>\n<pre>git clone https://github.com/lheagy/nblibrarian\n<span class=\"nb\">cd</span> nblibrarian\npip install -e .\n</pre>\n</div>\n<div id=\"configuring-nblibrarian\">\n<h2>Configuring nblibrarian</h2>\n<p>There are two files that you need in order to configure <cite>nblibrarian</cite>:</p>\n<ul>\n<li><a href=\".library-config.yml\" rel=\"nofollow\">.library-config.yml</a></li>\n<li><a href=\".jupyter-include\" rel=\"nofollow\">.jupyter-include</a></li>\n</ul>\n<div id=\"id1\">\n<h3>.library-config.yml</h3>\n<p>The <cite>.library-config.yml</cite> file specifies details of the source repository and if you would like to include the <cite>environment.yml</cite> file and / or the <cite>requirements.txt</cite> file. (We recommend you download at least one of these). The structure of the <cite>.library-config.yml</cite> is as follows:</p>\n<pre><span class=\"c1\"># information about the source library</span>\n<span class=\"nt\">source</span><span class=\"p\">:</span>\n  <span class=\"nt\">github</span><span class=\"p\">:</span>\n    <span class=\"nt\">user</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">geoscixyz</span>  <span class=\"c1\"># github username or organization</span>\n    <span class=\"nt\">repo</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">geosci-labs</span>  <span class=\"c1\"># github repository</span>\n    <span class=\"nt\">branch</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">master</span>  <span class=\"c1\"># [optional] branch to fetch material from</span>\n    <span class=\"nt\">directory</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">notebooks</span>  <span class=\"c1\"># [optional] directory where the notebooks are in the repository - including it will speed up the search for the desired notebooks</span>\n\n<span class=\"c1\"># setup options for the library</span>\n<span class=\"nt\">setup</span><span class=\"p\">:</span>\n  <span class=\"nt\">environment</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">environment.yml</span>  <span class=\"c1\"># [optional] include the environment.yml from the source</span>\n  <span class=\"nt\">requirements</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">requirements.txt</span>  <span class=\"c1\"># [optional] include the requirements.txt file</span>\n</pre>\n</div>\n<div id=\"id2\">\n<h3>.jupyter-include</h3>\n<p>The <cite>.jupyter-include</cite> file describes which notebooks you would like included in your library. It follows the same\nsyntax as a <a href=\"https://git-scm.com/docs/gitignore\" rel=\"nofollow\">.gitignore</a> file.</p>\n<pre># this is a comment\n\n# dc resistivity\nnotebooks/dcip/DCIP_2D_Overburden_Pseudosections.ipynb  # you can specify the full path\nnotebooks/dcip/DC_Building_Pseudosections  # also without the .ipynb extension\nDC_Cylinder_2D.ipynb  # or just specify the notebook name\n\n# em\n/em/EM_Pipeline.ipynb\nem/EM_ThreeLoopModel.ipynb\nem/*Sphere*.ipynb  # includes all notebooks in a directory called em with \"Sphere\" in the title\n\n# magnetics\nmag/*.ipynb  # includes all notebooks in the mag directory\n\n# inversion\ninversion  # includes notebooks in the inversion directory\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Once you have specified the <cite>.library-config.yml</cite> and the <cite>.jupyter-include</cite>, you can run nblibrarian from the command line to\ndownload the files you specified.</p>\n<pre>nblibrarian\n</pre>\n<p>There are also a few options, to run in <cite>verbose</cite> mode use</p>\n<pre>nblibrarian -v\n</pre>\n<p>If you ever want to update your library, you can always alter the <cite>.jupyter-include</cite> and re-run <cite>nblibrarian</cite>. By default, it will not overwrite your current notebooks. If you do want it to overwrite them, then run</p>\n<pre>nblibrarian --overwrite<span class=\"o\">=</span>True\n</pre>\n<p>If you would like to specify the path to the jupyter include and config files (for example if you put them in a different directory), then use</p>\n<pre>nblibrarian --config<span class=\"o\">=</span>.library-config.yml --jupyter-include<span class=\"o\">=</span>.jupyter-include\n</pre>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>If you run into any bugs, questions or problems using <cite>nblibrarian</cite>, please <a href=\"https://github.com/lheagy/nblibrarian/issues/new\" rel=\"nofollow\">create an issue</a> on github.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This work is Licensed under the <a href=\"LICENSE\" rel=\"nofollow\">BSD 3-Clause License</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4732528, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7d19defa308507c28a9462e9f2c1affb", "sha256": "05a3827e83f84a46758f5378fe49bba7f48fef820446606b2084d6c621b7dc3a"}, "downloads": -1, "filename": "nblibrarian-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7d19defa308507c28a9462e9f2c1affb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6346, "upload_time": "2019-01-23T18:30:50", "upload_time_iso_8601": "2019-01-23T18:30:50.950041Z", "url": "https://files.pythonhosted.org/packages/2c/03/1d2eaff4b273ef6319c6fbd898e7b297c90f5e180edf925b03ab58c3596e/nblibrarian-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d19defa308507c28a9462e9f2c1affb", "sha256": "05a3827e83f84a46758f5378fe49bba7f48fef820446606b2084d6c621b7dc3a"}, "downloads": -1, "filename": "nblibrarian-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7d19defa308507c28a9462e9f2c1affb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6346, "upload_time": "2019-01-23T18:30:50", "upload_time_iso_8601": "2019-01-23T18:30:50.950041Z", "url": "https://files.pythonhosted.org/packages/2c/03/1d2eaff4b273ef6319c6fbd898e7b297c90f5e180edf925b03ab58c3596e/nblibrarian-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:55 2020"}