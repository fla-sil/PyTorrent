{"info": {"author": "CenTdemeern1", "author_email": "timo.herngreen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development"], "description": "\ufeff># StdGet\n>StdGet is a small python 2 and 3 compatible library that doesn't require any modules to work.\n>\n>What does it do?\n>\n>StdGet's purpose is to be a way to capture the StdOut (Standard Output) and StdErr (Standard Error Output).\n>\n>Sounds great! How does it work and how do I use it?\n>\n>>How to use it:\n>>\n>>First, let's import StdGet:\n> `import stdget` \n> Then, let's say we want to capture the StdOut:\n> `stdget.startstdoutcapture()`\n> And you're done!\n> \"But how do I get the information it captures?\"\n> `stdget.stdouthook` will give you a list.\n> You can just do `stdget.stdouthook=[]` to empty it.\n> \n> >How it works:\n> >\n> >What it does is it adds a layer on top of the original 'sys.stdout.write' that actually 'takes' the data and copies it into the 'stdget.stdouthook' list.\n> It works outside of the module's layer because the sys.stdout / -in and -err are global all across the session.\n> That's also why you can just do `import stdget` and you don't have to do `from stdget import *` (it doesn't matter).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CenTdemeern1/stdget", "keywords": "sys std stdout stderr get stdget sys.stdout sys.stderr capture", "license": "", "maintainer": "", "maintainer_email": "", "name": "stdget", "package_url": "https://pypi.org/project/stdget/", "platform": "", "project_url": "https://pypi.org/project/stdget/", "project_urls": {"Homepage": "https://github.com/CenTdemeern1/stdget"}, "release_url": "https://pypi.org/project/stdget/1.1.2/", "requires_dist": null, "requires_python": "", "summary": "A library to capture sys.stdout and -err", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<h1>StdGet</h1>\n<p>StdGet is a small python 2 and 3 compatible library that doesn't require any modules to work.</p>\n<p>What does it do?</p>\n<p>StdGet's purpose is to be a way to capture the StdOut (Standard Output) and StdErr (Standard Error Output).</p>\n<p>Sounds great! How does it work and how do I use it?</p>\n<blockquote>\n<p>How to use it:</p>\n<p>First, let's import StdGet:\n<code>import stdget</code>\nThen, let's say we want to capture the StdOut:\n<code>stdget.startstdoutcapture()</code>\nAnd you're done!\n\"But how do I get the information it captures?\"\n<code>stdget.stdouthook</code> will give you a list.\nYou can just do <code>stdget.stdouthook=[]</code> to empty it.</p>\n</blockquote>\n<blockquote>\n<p>How it works:</p>\n<p>What it does is it adds a layer on top of the original 'sys.stdout.write' that actually 'takes' the data and copies it into the 'stdget.stdouthook' list.\nIt works outside of the module's layer because the sys.stdout / -in and -err are global all across the session.\nThat's also why you can just do <code>import stdget</code> and you don't have to do <code>from stdget import *</code> (it doesn't matter).</p>\n</blockquote>\n</blockquote>\n\n          </div>"}, "last_serial": 4336082, "releases": {"1.1.2": [{"comment_text": "", "digests": {"md5": "01510cb351b05865a4a84754b67b57b7", "sha256": "ed6bedf1adada9a48a3d24339b79a1891ddf8d7c42259b098e2471d09cbedbff"}, "downloads": -1, "filename": "stdget-1.1.2.tar.gz", "has_sig": false, "md5_digest": "01510cb351b05865a4a84754b67b57b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1970, "upload_time": "2018-10-03T10:26:31", "upload_time_iso_8601": "2018-10-03T10:26:31.337883Z", "url": "https://files.pythonhosted.org/packages/af/cd/7182fd5d77b564c2b07792b904c485ee8e0dd519e94efdf5901c4a1e3fa3/stdget-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "01510cb351b05865a4a84754b67b57b7", "sha256": "ed6bedf1adada9a48a3d24339b79a1891ddf8d7c42259b098e2471d09cbedbff"}, "downloads": -1, "filename": "stdget-1.1.2.tar.gz", "has_sig": false, "md5_digest": "01510cb351b05865a4a84754b67b57b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1970, "upload_time": "2018-10-03T10:26:31", "upload_time_iso_8601": "2018-10-03T10:26:31.337883Z", "url": "https://files.pythonhosted.org/packages/af/cd/7182fd5d77b564c2b07792b904c485ee8e0dd519e94efdf5901c4a1e3fa3/stdget-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:15 2020"}