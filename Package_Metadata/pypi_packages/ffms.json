{"info": {"author": "spirit", "author_email": "hiddenspirit@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2"], "description": "ffms \u2013 Python bindings for FFmpegSource\n=======================================\n\n\nExample usage\n-------------\n\nIf you don\u2019t need to keep the index, create a video source right away:\n\n>>> import ffms\n>>> source_file = \"test/x264.mkv\"\n>>> vsource = ffms.VideoSource(source_file)\n\n\nOr you can create an indexer:\n\n>>> indexer = ffms.Indexer(source_file)\n>>> indexer.format_name\n'matroska'\n>>> indexer.track_info_list\n[TrackInfo(type=0, codec_name='h264')]\n\n\nThen create the index for the video source:\n\n>>> index = indexer.do_indexing(-1)\n>>> track_number = index.get_first_indexed_track_of_type(ffms.FFMS_TYPE_VIDEO)\n>>> vsource = ffms.VideoSource(source_file, track_number, index)\n\n\nExtract information from the video source:\n\n>>> vsource.properties.NumFrames\n8\n>>> vsource.track.keyframes\n[0, 5]\n>>> vsource.track.timecodes\n[0.0, 1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0]\n\n\nRetrieve a video frame:\n\n>>> frame = vsource.get_frame(0)\n>>> frame.EncodedWidth, frame.EncodedHeight\n(128, 72)\n>>> frame.planes[0]\narray([16, 16, 16, ..., 16, 16, 16], dtype=uint8)\n\n\n``ffmsinfo.py`` is a demo script showing how this package can be used.\n\n\nInstallation\n------------\n\nTo install the package for Python 3, use::\n\n  $ ./setup.py install\n\nTo install the package for Python 2, use::\n\n  $ python2 setup.py install\n\nOn Windows, you may use one of the MSI binary packages provided on the\n`download page <https://bitbucket.org/spirit/ffms/downloads>`_.\n\n\nRequirements\n------------\n\n- `Python 3.2+ <http://www.python.org>`_ (or 2.7)\n- `FFmpegSource <http://code.google.com/p/ffmpegsource>`_\n- `numpy <http://www.numpy.org>`_\n- `pywin32 <http://sourceforge.net/projects/pywin32>`_ (Windows only)\n- `lib3to2 <https://bitbucket.org/amentajo/lib3to2>`_\n  (if installing for Python 2)\n\n\nThe API was designed to be an object-oriented and Pythonic version\nof `the original FFmpegSource API\n<http://ffmpegsource.googlecode.com/svn/trunk/doc/ffms2-api.html>`_.", "description_content_type": null, "docs_url": null, "download_url": "https://bitbucket.org/spirit/ffms/downloads", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/spirit/ffms", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "ffms", "package_url": "https://pypi.org/project/ffms/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ffms/", "project_urls": {"Download": "https://bitbucket.org/spirit/ffms/downloads", "Homepage": "https://bitbucket.org/spirit/ffms"}, "release_url": "https://pypi.org/project/ffms/0.3a2/", "requires_dist": ["numpy", "pywin32; sys.platform == 'win32'"], "requires_python": ">=2.7,!=3.0,!=3.1", "summary": "Bindings for FFmpegSource", "version": "0.3a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>If you don\u2019t need to keep the index, create a video source right away:</p>\n<pre>&gt;&gt;&gt; import ffms\n&gt;&gt;&gt; source_file = \"test/x264.mkv\"\n&gt;&gt;&gt; vsource = ffms.VideoSource(source_file)\n</pre>\n<p>Or you can create an indexer:</p>\n<pre>&gt;&gt;&gt; indexer = ffms.Indexer(source_file)\n&gt;&gt;&gt; indexer.format_name\n'matroska'\n&gt;&gt;&gt; indexer.track_info_list\n[TrackInfo(type=0, codec_name='h264')]\n</pre>\n<p>Then create the index for the video source:</p>\n<pre>&gt;&gt;&gt; index = indexer.do_indexing(-1)\n&gt;&gt;&gt; track_number = index.get_first_indexed_track_of_type(ffms.FFMS_TYPE_VIDEO)\n&gt;&gt;&gt; vsource = ffms.VideoSource(source_file, track_number, index)\n</pre>\n<p>Extract information from the video source:</p>\n<pre>&gt;&gt;&gt; vsource.properties.NumFrames\n8\n&gt;&gt;&gt; vsource.track.keyframes\n[0, 5]\n&gt;&gt;&gt; vsource.track.timecodes\n[0.0, 1000.0, 2000.0, 3000.0, 4000.0, 5000.0, 6000.0, 7000.0]\n</pre>\n<p>Retrieve a video frame:</p>\n<pre>&gt;&gt;&gt; frame = vsource.get_frame(0)\n&gt;&gt;&gt; frame.EncodedWidth, frame.EncodedHeight\n(128, 72)\n&gt;&gt;&gt; frame.planes[0]\narray([16, 16, 16, ..., 16, 16, 16], dtype=uint8)\n</pre>\n<p><tt>ffmsinfo.py</tt> is a demo script showing how this package can be used.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install the package for Python 3, use:</p>\n<pre>$ ./setup.py install\n</pre>\n<p>To install the package for Python 2, use:</p>\n<pre>$ python2 setup.py install\n</pre>\n<p>On Windows, you may use one of the MSI binary packages provided on the\n<a href=\"https://bitbucket.org/spirit/ffms/downloads\" rel=\"nofollow\">download page</a>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://www.python.org\" rel=\"nofollow\">Python 3.2+</a> (or 2.7)</li>\n<li><a href=\"http://code.google.com/p/ffmpegsource\" rel=\"nofollow\">FFmpegSource</a></li>\n<li><a href=\"http://www.numpy.org\" rel=\"nofollow\">numpy</a></li>\n<li><a href=\"http://sourceforge.net/projects/pywin32\" rel=\"nofollow\">pywin32</a> (Windows only)</li>\n<li><a href=\"https://bitbucket.org/amentajo/lib3to2\" rel=\"nofollow\">lib3to2</a>\n(if installing for Python 2)</li>\n</ul>\n<p>The API was designed to be an object-oriented and Pythonic version\nof <a href=\"http://ffmpegsource.googlecode.com/svn/trunk/doc/ffms2-api.html\" rel=\"nofollow\">the original FFmpegSource API</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1774578, "releases": {"0.3a1": [], "0.3a2": [{"comment_text": "", "digests": {"md5": "445c4d76b2b163df5a76ae5a2b78bfe0", "sha256": "5bcdfee6f1a344cb97a00834748242a40b1686ecfacd08aead536c12e55d1314"}, "downloads": -1, "filename": "ffms-0.3a2.tar.bz2", "has_sig": false, "md5_digest": "445c4d76b2b163df5a76ae5a2b78bfe0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0,!=3.1", "size": 33534, "upload_time": "2015-10-18T12:33:13", "upload_time_iso_8601": "2015-10-18T12:33:13.977428Z", "url": "https://files.pythonhosted.org/packages/39/34/bbd3436958d8de139d88065e9c2f760e3a79691cdbc79ea4e8510a204672/ffms-0.3a2.tar.bz2", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "445c4d76b2b163df5a76ae5a2b78bfe0", "sha256": "5bcdfee6f1a344cb97a00834748242a40b1686ecfacd08aead536c12e55d1314"}, "downloads": -1, "filename": "ffms-0.3a2.tar.bz2", "has_sig": false, "md5_digest": "445c4d76b2b163df5a76ae5a2b78bfe0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0,!=3.1", "size": 33534, "upload_time": "2015-10-18T12:33:13", "upload_time_iso_8601": "2015-10-18T12:33:13.977428Z", "url": "https://files.pythonhosted.org/packages/39/34/bbd3436958d8de139d88065e9c2f760e3a79691cdbc79ea4e8510a204672/ffms-0.3a2.tar.bz2", "yanked": false}], "timestamp": "Fri May  8 00:42:47 2020"}