{"info": {"author": "Anthony Khong", "author_email": "anthony@arithmox.ai", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database"], "description": "# HyFive\n\n## What Is HyFive?\n\nHyFive is a [Hy](https://github.com/hylang/hy) library that provides a Lispy functional interface by wrapping Python's popular data libraries, such as [Pandas](https://pandas.pydata.org/) and [Matplotlib](https://matplotlib.org).\n\n## HyFive vs. Vanilla Pandas\n\nPandas `DataFrame` has its own quirks. It ranges from not having a `filter` method to having a different definiton of `join` to that of SQL. This is evident from the bewildering comparison between [Pandas and SQL](https://pandas.pydata.org/pandas-docs/stable/getting_started/comparison/comparison_with_sql.html). HyFive aims to provide a Lispy interface that is as close as possible to that of [Spark's](https://spark.apache.org/) [SQL and DataFrame](https://spark.apache.org/docs/latest/sql-programming-guide.html).\n\nFrom a functional programming perspective, Pandas interfaces are oddly difficult to compose unlike Spark SQL's method-chaining convention. Due to this difficulty, Pandas often perversely incentivises short names for dataframes in favour of creating intermediate variables, which litters the namespace.\n\nHyFive utilises Hy's threading macros to mimic Spark DataFrame's method chaining convention, whilst staying with the familiar Pandas dataframe. Consider the following HyFive snippet:\n\n```hy\n(setv DATAFRAME\n  (-> NAME-REGISTRY\n      (hf.with-column \"variant\"\n        (let [mod-res-id (hf.mod \"resident_id\" 3)]\n          (hf.cond-col [(hf.eq? mod-res-id 1) (hf.lit \"a\")]\n                       [(hf.eq? mod-res-id 2) (hf.lit \"b\")]\n                       [:else                 (hf.lit \"c\")])))\n      (hf.filter (hf.is-in \"variant\" [\"a\" \"b\"]))\n      (hf.join AGE-REGISTRY :on \"resident_id\")\n      (hf.group-by \"variant\")\n      (hf.agg {\"min_age\"  (hf.min \"age\")\n               \"mean_age\" (hf.mean \"age\")\n               \"std_age\"  (hf.std \"age\")\n               \"max_age\"  (hf.max \"age\")})\n      (hf.order-by \"min_age\" :desc True)))\n```\n\nHere, we carry out simple operations of adding a column, filtering rows, joining tables, aggregating groups and sorting rows. Apart from the Lispy `cond`, these operations would have a one-to-one translation to Spark dataframe or SQL.\n\nIn contrast, one would have to work a bit harder in pure Pandas:\n\n```python\nmod_res_id = NAME_REGISTRY.resident_id % 3\nvariant = np.where(mod_res_id == 1, 'a', np.where(mod_res_id == 2, 'b', 'c'))\nselect_ix = np.isin(variant, ['a', 'b'])\ndataframe = (NAME_REGISTRY\n                .assign(variant=variant)\n                [select_ix]\n                .merge(AGE_REGISTRY, on='resident_id')\n                .groupby('variant')\n                .apply(lambda df: pd.Series({\n                    'min_age': df.age.min(),\n                    'mean_age': df.age.mean(),\n                    'std_age': df.age.std(),\n                    'max_age': df.age.max()\n                }))\n                .reset_index()\n                .sort_values(by='min_age', ascending=False)\n                .reset_index(drop=True))\n```\n\nThe Pandas version is less readable and we lose the one-to-one translation to Spark dataframe or SQL.\n\n## Trying HyFive\n\nClone the repository, and on the root directory of the enter the following command on terminal:\n\n```bash\n./run build-docker\n```\n\nRun the unit tests with the following command:\n\n```bash\n./run unit-tests .\n````\n\nInvoke the Hy REPL by running:\n\n```bash\n./run repl\n```\n\nAnd finally, import HyFive using:\n\n```hy\n(import [hyfive :as hf])\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/arithmox/hyfive", "keywords": "", "license": "gpl-3.0", "maintainer": "", "maintainer_email": "", "name": "hyfive", "package_url": "https://pypi.org/project/hyfive/", "platform": "", "project_url": "https://pypi.org/project/hyfive/", "project_urls": {"Homepage": "https://gitlab.com/arithmox/hyfive"}, "release_url": "https://pypi.org/project/hyfive/0.1.7/", "requires_dist": ["cytoolz (>=0.10.0)", "dask-ml (>=1.0.0)", "dask (>=2.3.0)", "hy (>=0.17.0)", "hypothesis (>=4.32.3)", "ipython (>=7.7.0)", "matplotlib (>=3.1.1)", "pandas (>=0.25.0)", "pdbpp (>=0.10.0)", "pytest-cov (>=2.7.1)", "pytest (>=5.0.1)", "scikit-learn (>=0.21.3)", "scipy (>=1.3.1)"], "requires_python": "", "summary": "A Hy library that provides a Lispy functional                 interface by wrapping Python's popular data libraries,                 such as Pandas and Matplotlib.", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>HyFive</h1>\n<h2>What Is HyFive?</h2>\n<p>HyFive is a <a href=\"https://github.com/hylang/hy\" rel=\"nofollow\">Hy</a> library that provides a Lispy functional interface by wrapping Python's popular data libraries, such as <a href=\"https://pandas.pydata.org/\" rel=\"nofollow\">Pandas</a> and <a href=\"https://matplotlib.org\" rel=\"nofollow\">Matplotlib</a>.</p>\n<h2>HyFive vs. Vanilla Pandas</h2>\n<p>Pandas <code>DataFrame</code> has its own quirks. It ranges from not having a <code>filter</code> method to having a different definiton of <code>join</code> to that of SQL. This is evident from the bewildering comparison between <a href=\"https://pandas.pydata.org/pandas-docs/stable/getting_started/comparison/comparison_with_sql.html\" rel=\"nofollow\">Pandas and SQL</a>. HyFive aims to provide a Lispy interface that is as close as possible to that of <a href=\"https://spark.apache.org/\" rel=\"nofollow\">Spark's</a> <a href=\"https://spark.apache.org/docs/latest/sql-programming-guide.html\" rel=\"nofollow\">SQL and DataFrame</a>.</p>\n<p>From a functional programming perspective, Pandas interfaces are oddly difficult to compose unlike Spark SQL's method-chaining convention. Due to this difficulty, Pandas often perversely incentivises short names for dataframes in favour of creating intermediate variables, which litters the namespace.</p>\n<p>HyFive utilises Hy's threading macros to mimic Spark DataFrame's method chaining convention, whilst staying with the familiar Pandas dataframe. Consider the following HyFive snippet:</p>\n<pre><span class=\"o\">(</span><span class=\"n\">setv</span> <span class=\"n\">DATAFRAME</span>\n  <span class=\"o\">(-&gt;</span> <span class=\"n\">NAME</span><span class=\"o\">-</span><span class=\"n\">REGISTRY</span>\n      <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">with</span><span class=\"o\">-</span><span class=\"n\">column</span> <span class=\"s\">\"variant\"</span>\n        <span class=\"o\">(</span><span class=\"n\">let</span> <span class=\"o\">[</span><span class=\"n\">mod</span><span class=\"o\">-</span><span class=\"n\">res</span><span class=\"o\">-</span><span class=\"n\">id</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">mod</span> <span class=\"s\">\"resident_id\"</span> <span class=\"mi\">3</span><span class=\"o\">)]</span>\n          <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">cond</span><span class=\"o\">-</span><span class=\"n\">col</span> <span class=\"o\">[(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">eq</span><span class=\"o\">?</span> <span class=\"n\">mod</span><span class=\"o\">-</span><span class=\"n\">res</span><span class=\"o\">-</span><span class=\"n\">id</span> <span class=\"mi\">1</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">lit</span> <span class=\"s\">\"a\"</span><span class=\"o\">)]</span>\n                       <span class=\"o\">[(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">eq</span><span class=\"o\">?</span> <span class=\"n\">mod</span><span class=\"o\">-</span><span class=\"n\">res</span><span class=\"o\">-</span><span class=\"n\">id</span> <span class=\"mi\">2</span><span class=\"o\">)</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">lit</span> <span class=\"s\">\"b\"</span><span class=\"o\">)]</span>\n                       <span class=\"o\">[:</span><span class=\"k\">else</span>                 <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">lit</span> <span class=\"s\">\"c\"</span><span class=\"o\">)])))</span>\n      <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">filter</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">is</span><span class=\"o\">-</span><span class=\"n\">in</span> <span class=\"s\">\"variant\"</span> <span class=\"o\">[</span><span class=\"s\">\"a\"</span> <span class=\"s\">\"b\"</span><span class=\"o\">]))</span>\n      <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">join</span> <span class=\"n\">AGE</span><span class=\"o\">-</span><span class=\"n\">REGISTRY</span> <span class=\"o\">:</span><span class=\"n\">on</span> <span class=\"s\">\"resident_id\"</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">group</span><span class=\"o\">-</span><span class=\"n\">by</span> <span class=\"s\">\"variant\"</span><span class=\"o\">)</span>\n      <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">agg</span> <span class=\"o\">{</span><span class=\"s\">\"min_age\"</span>  <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">min</span> <span class=\"s\">\"age\"</span><span class=\"o\">)</span>\n               <span class=\"s\">\"mean_age\"</span> <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">mean</span> <span class=\"s\">\"age\"</span><span class=\"o\">)</span>\n               <span class=\"s\">\"std_age\"</span>  <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">std</span> <span class=\"s\">\"age\"</span><span class=\"o\">)</span>\n               <span class=\"s\">\"max_age\"</span>  <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">max</span> <span class=\"s\">\"age\"</span><span class=\"o\">)})</span>\n      <span class=\"o\">(</span><span class=\"n\">hf</span><span class=\"o\">.</span><span class=\"na\">order</span><span class=\"o\">-</span><span class=\"n\">by</span> <span class=\"s\">\"min_age\"</span> <span class=\"o\">:</span><span class=\"n\">desc</span> <span class=\"n\">True</span><span class=\"o\">)))</span>\n</pre>\n<p>Here, we carry out simple operations of adding a column, filtering rows, joining tables, aggregating groups and sorting rows. Apart from the Lispy <code>cond</code>, these operations would have a one-to-one translation to Spark dataframe or SQL.</p>\n<p>In contrast, one would have to work a bit harder in pure Pandas:</p>\n<pre><span class=\"n\">mod_res_id</span> <span class=\"o\">=</span> <span class=\"n\">NAME_REGISTRY</span><span class=\"o\">.</span><span class=\"n\">resident_id</span> <span class=\"o\">%</span> <span class=\"mi\">3</span>\n<span class=\"n\">variant</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">mod_res_id</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">mod_res_id</span> <span class=\"o\">==</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">))</span>\n<span class=\"n\">select_ix</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">isin</span><span class=\"p\">(</span><span class=\"n\">variant</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">])</span>\n<span class=\"n\">dataframe</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">NAME_REGISTRY</span>\n                <span class=\"o\">.</span><span class=\"n\">assign</span><span class=\"p\">(</span><span class=\"n\">variant</span><span class=\"o\">=</span><span class=\"n\">variant</span><span class=\"p\">)</span>\n                <span class=\"p\">[</span><span class=\"n\">select_ix</span><span class=\"p\">]</span>\n                <span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">(</span><span class=\"n\">AGE_REGISTRY</span><span class=\"p\">,</span> <span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">'resident_id'</span><span class=\"p\">)</span>\n                <span class=\"o\">.</span><span class=\"n\">groupby</span><span class=\"p\">(</span><span class=\"s1\">'variant'</span><span class=\"p\">)</span>\n                <span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">df</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">Series</span><span class=\"p\">({</span>\n                    <span class=\"s1\">'min_age'</span><span class=\"p\">:</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">.</span><span class=\"n\">min</span><span class=\"p\">(),</span>\n                    <span class=\"s1\">'mean_age'</span><span class=\"p\">:</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">(),</span>\n                    <span class=\"s1\">'std_age'</span><span class=\"p\">:</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">.</span><span class=\"n\">std</span><span class=\"p\">(),</span>\n                    <span class=\"s1\">'max_age'</span><span class=\"p\">:</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">age</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>\n                <span class=\"p\">}))</span>\n                <span class=\"o\">.</span><span class=\"n\">reset_index</span><span class=\"p\">()</span>\n                <span class=\"o\">.</span><span class=\"n\">sort_values</span><span class=\"p\">(</span><span class=\"n\">by</span><span class=\"o\">=</span><span class=\"s1\">'min_age'</span><span class=\"p\">,</span> <span class=\"n\">ascending</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n                <span class=\"o\">.</span><span class=\"n\">reset_index</span><span class=\"p\">(</span><span class=\"n\">drop</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<p>The Pandas version is less readable and we lose the one-to-one translation to Spark dataframe or SQL.</p>\n<h2>Trying HyFive</h2>\n<p>Clone the repository, and on the root directory of the enter the following command on terminal:</p>\n<pre>./run build-docker\n</pre>\n<p>Run the unit tests with the following command:</p>\n<pre>./run unit-tests .\n</pre>\n<p>Invoke the Hy REPL by running:</p>\n<pre>./run repl\n</pre>\n<p>And finally, import HyFive using:</p>\n<pre><span class=\"o\">(</span><span class=\"kn\">import</span> <span class=\"err\">[</span><span class=\"nn\">hyfive</span> <span class=\"o\">:</span><span class=\"n\">as</span> <span class=\"n\">hf</span><span class=\"o\">])</span>\n</pre>\n\n          </div>"}, "last_serial": 5916915, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "267e84541d16635fec090cc194caac55", "sha256": "895a95cc72e05ff28e882a5021b5623a0708ba45d3af0188ff68a606d786fc52"}, "downloads": -1, "filename": "hyfive-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "267e84541d16635fec090cc194caac55", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15167, "upload_time": "2019-09-27T09:22:19", "upload_time_iso_8601": "2019-09-27T09:22:19.000936Z", "url": "https://files.pythonhosted.org/packages/1e/0f/1ccae02e313c84f2e56df5e6b400164b15c2a60dd0614a4844bae5588d9d/hyfive-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c68a8a3a1d70abbc213ed27576dd2e9d", "sha256": "4a15fa87621cfd38cb0fa16478f386db7bb43e02937c2ccd1b90dff7df8ee1db"}, "downloads": -1, "filename": "hyfive-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c68a8a3a1d70abbc213ed27576dd2e9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3106, "upload_time": "2019-09-27T09:22:23", "upload_time_iso_8601": "2019-09-27T09:22:23.306408Z", "url": "https://files.pythonhosted.org/packages/77/60/f0dd4a1280c7071676bb4ff0cc36c5be8e706fd73c14056719cbdfbbb4a0/hyfive-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c001c5750148a62a16297fe449d5f3cf", "sha256": "c351e171516233e35658ca9d81c8d01c72375796903cf3bfec77c6a953ac6bda"}, "downloads": -1, "filename": "hyfive-0.1.1-py3.7.egg", "has_sig": false, "md5_digest": "c001c5750148a62a16297fe449d5f3cf", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 6070, "upload_time": "2019-09-30T07:51:56", "upload_time_iso_8601": "2019-09-30T07:51:56.498995Z", "url": "https://files.pythonhosted.org/packages/0b/b4/c376685e89803131c52bbeedab7ae1b3094fc062234d827a57163c6b44a5/hyfive-0.1.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a061d0cb19044e0a39ecacf9df481c11", "sha256": "a7326334a1287d4ee93f73eecb9d20321c497a42785dba36400bd166621a4f0c"}, "downloads": -1, "filename": "hyfive-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a061d0cb19044e0a39ecacf9df481c11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15164, "upload_time": "2019-09-30T07:51:50", "upload_time_iso_8601": "2019-09-30T07:51:50.766892Z", "url": "https://files.pythonhosted.org/packages/d0/7c/c42474fef9853e95742b5dcb5f033b599e70c1cf98e157f4db743910f33e/hyfive-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fcafdb1a787034bf7be30f3c11b8296", "sha256": "ef4397f3293c209220f5a2d82688d4ee870794437a5cf2e1f0e6b1ab28a3087d"}, "downloads": -1, "filename": "hyfive-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4fcafdb1a787034bf7be30f3c11b8296", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5542, "upload_time": "2019-09-30T07:52:00", "upload_time_iso_8601": "2019-09-30T07:52:00.021640Z", "url": "https://files.pythonhosted.org/packages/79/d5/b3815c0338327a9f64a4addc8180f8fd927a2afcb3dc4b19ee2a5db83a52/hyfive-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c9e73a9748b7b3456f03f53ba54dd6eb", "sha256": "b4c672aae4cd35fbb66a10616b9784dc6eed894e7542ea2d8b382f88569a6dc1"}, "downloads": -1, "filename": "hyfive-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c9e73a9748b7b3456f03f53ba54dd6eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15167, "upload_time": "2019-09-30T07:53:24", "upload_time_iso_8601": "2019-09-30T07:53:24.767656Z", "url": "https://files.pythonhosted.org/packages/39/4b/bed4d5213c8b53d3793017a1c4a0c60e08e533764c68cf5b9ddfc35d3d96/hyfive-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d92539f1100b2a237db9ad0d15d5b5a9", "sha256": "a5d042ed05b745fc9e4681644dbdd2fd7cab4adf1fdbc2891f6a27181159be71"}, "downloads": -1, "filename": "hyfive-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d92539f1100b2a237db9ad0d15d5b5a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5532, "upload_time": "2019-09-30T07:53:28", "upload_time_iso_8601": "2019-09-30T07:53:28.558777Z", "url": "https://files.pythonhosted.org/packages/93/79/8d930c0c0079011955536040fd763f04ef2a6586ee435cde7233065cd62d/hyfive-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "03f6f8ba12b6a1a727b91b7a20dbd4d8", "sha256": "6c7b6401e2f3ba04f5cc2bdda7b7fe08fe15206bb01f0e7e4e46201ff698e0e6"}, "downloads": -1, "filename": "hyfive-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "03f6f8ba12b6a1a727b91b7a20dbd4d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15166, "upload_time": "2019-10-01T08:08:30", "upload_time_iso_8601": "2019-10-01T08:08:30.337563Z", "url": "https://files.pythonhosted.org/packages/0e/da/9ae5aab3c63378964f54f9eae9a011e1487fa5de979cf85feb4491e05374/hyfive-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a48c1e4249ed06269233714419cff707", "sha256": "96627f14a5de9f0e62df73b193cadbb69545e40d207b3c4d55750fd662468d97"}, "downloads": -1, "filename": "hyfive-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a48c1e4249ed06269233714419cff707", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5495, "upload_time": "2019-10-01T08:08:33", "upload_time_iso_8601": "2019-10-01T08:08:33.218790Z", "url": "https://files.pythonhosted.org/packages/ed/aa/f28de165f0dcdd2660f80a334f205a39f859fa7933615576bedc29d6c461/hyfive-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5969a663bb240b359dfe37c1dad45016", "sha256": "51774d45f6c4832da99d78ca2837f4a244a609df220683b348c91b76dd586124"}, "downloads": -1, "filename": "hyfive-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5969a663bb240b359dfe37c1dad45016", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15167, "upload_time": "2019-10-01T08:11:23", "upload_time_iso_8601": "2019-10-01T08:11:23.841764Z", "url": "https://files.pythonhosted.org/packages/39/85/c85dc13b9fcc0fc1938c218ea3975e7d6a83690507c495fea71c2e0a63b9/hyfive-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "183c2271ffb76455661b30555d8cd0b9", "sha256": "46ed65e53d1886763d4fd5d4910efc100391907295136bc9eadc28b8b47f76a0"}, "downloads": -1, "filename": "hyfive-0.1.4.tar.gz", "has_sig": false, "md5_digest": "183c2271ffb76455661b30555d8cd0b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5559, "upload_time": "2019-10-01T08:11:26", "upload_time_iso_8601": "2019-10-01T08:11:26.365729Z", "url": "https://files.pythonhosted.org/packages/7d/f5/483ea96447d6622e3ea901e91ee513f006b52ebaadda8b58282df939cbe7/hyfive-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "c991bad6f30f7d90b7455398818434e0", "sha256": "5e8f58db6838b977578c986dd7350b3d1469f7103588b8125d6c927c2613ded9"}, "downloads": -1, "filename": "hyfive-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "c991bad6f30f7d90b7455398818434e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18739, "upload_time": "2019-10-01T08:15:36", "upload_time_iso_8601": "2019-10-01T08:15:36.099999Z", "url": "https://files.pythonhosted.org/packages/cb/4a/945cd56cadb37ae54d74ab6d68082f5e43c81341cdd0705c9188ef257196/hyfive-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0154128e473a4b18f097ebd487298af5", "sha256": "9e9d5e7397985a0cbe14137c8fac8656bc16425f2c415e1f0a8da81c0b72cd87"}, "downloads": -1, "filename": "hyfive-0.1.5.tar.gz", "has_sig": false, "md5_digest": "0154128e473a4b18f097ebd487298af5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5605, "upload_time": "2019-10-01T08:15:40", "upload_time_iso_8601": "2019-10-01T08:15:40.421332Z", "url": "https://files.pythonhosted.org/packages/d2/cd/3f4ee88090475142a1075924f9d5b4b1b1269c3411feeef63e8001cbc241/hyfive-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "5b3e13148d8894a4bee8147a76d125f9", "sha256": "4603c76aa3ec490707d3e5e98f9e2899678744a9dfe5efaa399411fa5daa19db"}, "downloads": -1, "filename": "hyfive-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5b3e13148d8894a4bee8147a76d125f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18739, "upload_time": "2019-10-02T03:53:25", "upload_time_iso_8601": "2019-10-02T03:53:25.355332Z", "url": "https://files.pythonhosted.org/packages/15/8f/7974483c4aea79750ba72397fb4551c19c738b82113f77e1b9d500aab446/hyfive-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be58f1ba3b975dc3fa93b0209558c22e", "sha256": "5e8dfd42f432c651cdd8ce8daa431744ec91af39abf728a75f7d96aef58f2ffb"}, "downloads": -1, "filename": "hyfive-0.1.6.tar.gz", "has_sig": false, "md5_digest": "be58f1ba3b975dc3fa93b0209558c22e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5546, "upload_time": "2019-10-02T03:53:28", "upload_time_iso_8601": "2019-10-02T03:53:28.142995Z", "url": "https://files.pythonhosted.org/packages/f3/af/13b14f5e7c779d5bd041e6959e18d5c448897d960cb407bc0397745e94d9/hyfive-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2d0e1e587c2af2c2421239f5a67097b4", "sha256": "769b909863560a2cef2ad517bc7aa7f90f9ffcc4852c5423e1813b56c1d80c74"}, "downloads": -1, "filename": "hyfive-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "2d0e1e587c2af2c2421239f5a67097b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18939, "upload_time": "2019-10-02T09:24:47", "upload_time_iso_8601": "2019-10-02T09:24:47.850782Z", "url": "https://files.pythonhosted.org/packages/02/74/492c600639712bf5b449643f51668771657c4025af26a5d244dd084de7a1/hyfive-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6199c58f992cbf546c67acfc780f048e", "sha256": "fc3f41cff0b5bac6d0ca91cc52ada64a6f601b3877929502b0bce9ae0cc3021d"}, "downloads": -1, "filename": "hyfive-0.1.7.tar.gz", "has_sig": false, "md5_digest": "6199c58f992cbf546c67acfc780f048e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3367, "upload_time": "2019-10-02T09:24:50", "upload_time_iso_8601": "2019-10-02T09:24:50.046807Z", "url": "https://files.pythonhosted.org/packages/a8/b1/3cfd1edab9cd065b56ba6fa84427aceae9101b0e07d2a466e547da72dc37/hyfive-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d0e1e587c2af2c2421239f5a67097b4", "sha256": "769b909863560a2cef2ad517bc7aa7f90f9ffcc4852c5423e1813b56c1d80c74"}, "downloads": -1, "filename": "hyfive-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "2d0e1e587c2af2c2421239f5a67097b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18939, "upload_time": "2019-10-02T09:24:47", "upload_time_iso_8601": "2019-10-02T09:24:47.850782Z", "url": "https://files.pythonhosted.org/packages/02/74/492c600639712bf5b449643f51668771657c4025af26a5d244dd084de7a1/hyfive-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6199c58f992cbf546c67acfc780f048e", "sha256": "fc3f41cff0b5bac6d0ca91cc52ada64a6f601b3877929502b0bce9ae0cc3021d"}, "downloads": -1, "filename": "hyfive-0.1.7.tar.gz", "has_sig": false, "md5_digest": "6199c58f992cbf546c67acfc780f048e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3367, "upload_time": "2019-10-02T09:24:50", "upload_time_iso_8601": "2019-10-02T09:24:50.046807Z", "url": "https://files.pythonhosted.org/packages/a8/b1/3cfd1edab9cd065b56ba6fa84427aceae9101b0e07d2a466e547da72dc37/hyfive-0.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:37 2020"}