{"info": {"author": "Michael Kuty", "author_email": "kutymichael@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "=================\nLeonardo Newswall\n=================\n\nIntegration of https://github.com/matthiask/django-newswall to Leonardo CMS.\n\nThis module uses this fork https://github.com/michaelkuty/django-newswall.git#egg=newswall\npy of newswall wich is compatibile with Django 1.7<1.9\n\n.. contents::\n    :local:\n\nInstallation\n============\n\n.. code-block:: bash\n\n    pip install leonardo-newswall\n\nor as leonardo bundle\n\n.. code-block:: bash\n\n    pip install django-leonardo[\"newswall\"]\n\nOptionally use ``leonardo-celery`` for periodical update, or just call ``update_newswall`` however you want.\n\nLoad new templates to db\n\n.. code-block:: bash\n\n\tpython manage.py sync_all -f\n\nProviders\n=========\n\n``newswall`` has a few bundled providers, those being:\n\n\nElephantblog\n------------\n\nAdds news entries for every active entry in a elephantblog installation on the\nsame website. No additional configuration required (or possible). Add the\nfollowing JSON configuration to the ``Source`` entry::\n\n    {\"provider\": \"newswall.providers.elephantblog\"}\n\n\nFacebook Graph Feed\n-------------------\n\nThis provider adds news entries for every wall post on a Facebook page. The\nwall posts are accessed through the Graph API; you'll need a copy of the Python\nFacebook SDK somewhere on your Python path. You'll need an access token with\n``offline_access`` permission for this provider. Required configuration\nfollows::\n\n    {\"provider\": \"newswall.providers.fb_graph_feed\",\n    \"object\": \"FEINHEIT\",      // used to construct the Graph request URL\n    \"from_id\": \"239846135569\", // used to filter stories created by the\n                               // object referenced above, ignores stories\n                               // sent by others\n    \"access_token\": \"...\"\n    }\n\nWe suggest to use App Access Tokens to query the Facebook Page feed, because they don't expire.\nTo get an App Access Token, simply open this URL with your browser, after\nfilling in the required fields (the all caps words)::\n\n    https://graph.facebook.com/oauth/access_token?client_id=YOUR_APP_ID&client_secret=YOUR_APP_SECRET&grant_type=client_credentials\n\nMore infos according the App Access Tokens can be found on the official Facebook documentation:\n<https://developers.facebook.com/docs/opengraph/using-app-tokens/>\n\nTo obtain the \"from_id\" configuration parameter, you can query the Facebook Open Graph\nAPI Backend with your Browser::\n\n    https://graph.facebook.com/OBJECT\n\nf.e.:\n<https://graph.facebook.com/FEINHEIT>\n\nRSS Feed\n--------\n\nThe RSS feed provider can take any RSS or Atom feed (in fact anything parseable\nby ``feedparser`` and turn the stories into news entries::\n\n    {\n    \"provider\": \"newswall.providers.feed\",\n    \"source\": \"http://twitter.com/statuses/user_timeline/unsocialrider.rss\"\n    }\n\n\nTwitter API Feed\n----------------\n\nRequired: tweepy::\n\n    pip install leonardo-newswall[twitter]\n\nUsage:\n\nCreate a twitter app.\nYou'll find the consumer_key/secret on the detail page.\nBecause this is a read-only application, you can create\nyour oauth_token/secret directly on the bottom of the app detail page.\n\nRequired configuration keys::\n\n    {\n    \"provider\": \"newswall.providers.twitter\",\n    \"user\": \"feinheit\",\n    \"consumer_key\": \"...\",\n    \"consumer_secret\": \"...\",\n    \"oauth_token\": \"...\",\n    \"oauth_secret\": \"...\"\n    }\n\nRead More\n=========\n\n* https://github.com/matthiask/django-newswall", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/leonardo-modules/leonardo-newswall.git", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "leonardo-newswall", "package_url": "https://pypi.org/project/leonardo-newswall/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/leonardo-newswall/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/leonardo-modules/leonardo-newswall.git"}, "release_url": "https://pypi.org/project/leonardo-newswall/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Feincms Newswall integration module to Leonardo (Support Django 1.8 +)", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Integration of <a href=\"https://github.com/matthiask/django-newswall\" rel=\"nofollow\">https://github.com/matthiask/django-newswall</a> to Leonardo CMS.</p>\n<p>This module uses this fork <a href=\"https://github.com/michaelkuty/django-newswall.git#egg=newswall\" rel=\"nofollow\">https://github.com/michaelkuty/django-newswall.git#egg=newswall</a>\npy of newswall wich is compatibile with Django 1.7&lt;1.9</p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#providers\" id=\"id2\" rel=\"nofollow\">Providers</a><ul>\n<li><a href=\"#elephantblog\" id=\"id3\" rel=\"nofollow\">Elephantblog</a></li>\n<li><a href=\"#facebook-graph-feed\" id=\"id4\" rel=\"nofollow\">Facebook Graph Feed</a></li>\n<li><a href=\"#rss-feed\" id=\"id5\" rel=\"nofollow\">RSS Feed</a></li>\n<li><a href=\"#twitter-api-feed\" id=\"id6\" rel=\"nofollow\">Twitter API Feed</a></li>\n</ul>\n</li>\n<li><a href=\"#read-more\" id=\"id7\" rel=\"nofollow\">Read More</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Installation</a></h2>\n<pre>pip install leonardo-newswall\n</pre>\n<p>or as leonardo bundle</p>\n<pre>pip install django-leonardo<span class=\"o\">[</span><span class=\"s2\">\"newswall\"</span><span class=\"o\">]</span>\n</pre>\n<p>Optionally use <tt><span class=\"pre\">leonardo-celery</span></tt> for periodical update, or just call <tt>update_newswall</tt> however you want.</p>\n<p>Load new templates to db</p>\n<pre>python manage.py sync_all -f\n</pre>\n</div>\n<div id=\"providers\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Providers</a></h2>\n<p><tt>newswall</tt> has a few bundled providers, those being:</p>\n<div id=\"elephantblog\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Elephantblog</a></h3>\n<p>Adds news entries for every active entry in a elephantblog installation on the\nsame website. No additional configuration required (or possible). Add the\nfollowing JSON configuration to the <tt>Source</tt> entry:</p>\n<pre>{\"provider\": \"newswall.providers.elephantblog\"}\n</pre>\n</div>\n<div id=\"facebook-graph-feed\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Facebook Graph Feed</a></h3>\n<p>This provider adds news entries for every wall post on a Facebook page. The\nwall posts are accessed through the Graph API; you\u2019ll need a copy of the Python\nFacebook SDK somewhere on your Python path. You\u2019ll need an access token with\n<tt>offline_access</tt> permission for this provider. Required configuration\nfollows:</p>\n<pre>{\"provider\": \"newswall.providers.fb_graph_feed\",\n\"object\": \"FEINHEIT\",      // used to construct the Graph request URL\n\"from_id\": \"239846135569\", // used to filter stories created by the\n                           // object referenced above, ignores stories\n                           // sent by others\n\"access_token\": \"...\"\n}\n</pre>\n<p>We suggest to use App Access Tokens to query the Facebook Page feed, because they don\u2019t expire.\nTo get an App Access Token, simply open this URL with your browser, after\nfilling in the required fields (the all caps words):</p>\n<pre>https://graph.facebook.com/oauth/access_token?client_id=YOUR_APP_ID&amp;client_secret=YOUR_APP_SECRET&amp;grant_type=client_credentials\n</pre>\n<p>More infos according the App Access Tokens can be found on the official Facebook documentation:\n&lt;<a href=\"https://developers.facebook.com/docs/opengraph/using-app-tokens/\" rel=\"nofollow\">https://developers.facebook.com/docs/opengraph/using-app-tokens/</a>&gt;</p>\n<p>To obtain the \u201cfrom_id\u201d configuration parameter, you can query the Facebook Open Graph\nAPI Backend with your Browser:</p>\n<pre>https://graph.facebook.com/OBJECT\n</pre>\n<p>f.e.:\n&lt;<a href=\"https://graph.facebook.com/FEINHEIT\" rel=\"nofollow\">https://graph.facebook.com/FEINHEIT</a>&gt;</p>\n</div>\n<div id=\"rss-feed\">\n<h3><a href=\"#id5\" rel=\"nofollow\">RSS Feed</a></h3>\n<p>The RSS feed provider can take any RSS or Atom feed (in fact anything parseable\nby <tt>feedparser</tt> and turn the stories into news entries:</p>\n<pre>{\n\"provider\": \"newswall.providers.feed\",\n\"source\": \"http://twitter.com/statuses/user_timeline/unsocialrider.rss\"\n}\n</pre>\n</div>\n<div id=\"twitter-api-feed\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Twitter API Feed</a></h3>\n<p>Required: tweepy:</p>\n<pre>pip install leonardo-newswall[twitter]\n</pre>\n<p>Usage:</p>\n<p>Create a twitter app.\nYou\u2019ll find the consumer_key/secret on the detail page.\nBecause this is a read-only application, you can create\nyour oauth_token/secret directly on the bottom of the app detail page.</p>\n<p>Required configuration keys:</p>\n<pre>{\n\"provider\": \"newswall.providers.twitter\",\n\"user\": \"feinheit\",\n\"consumer_key\": \"...\",\n\"consumer_secret\": \"...\",\n\"oauth_token\": \"...\",\n\"oauth_secret\": \"...\"\n}\n</pre>\n</div>\n</div>\n<div id=\"read-more\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Read More</a></h2>\n<ul>\n<li><a href=\"https://github.com/matthiask/django-newswall\" rel=\"nofollow\">https://github.com/matthiask/django-newswall</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1767515, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a00fb831a51e457346d766d17a7575dc", "sha256": "2530cf55ab2f31ad13351b22406884c29d918d4a810c1be1343f90d3eccc0fd6"}, "downloads": -1, "filename": "leonardo-newswall-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a00fb831a51e457346d766d17a7575dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6186, "upload_time": "2015-09-04T14:56:40", "upload_time_iso_8601": "2015-09-04T14:56:40.105984Z", "url": "https://files.pythonhosted.org/packages/77/ae/369f1944b0fe9fd126db2b020f608f877909a613e46d8fcb43f36945dba8/leonardo-newswall-0.0.1.tar.gz", "yanked": false}], "0.0.1.dev1": [{"comment_text": "", "digests": {"md5": "5247acce60aa3a442cecce804aa4baba", "sha256": "86a133031c4fa4fdfba6d57bafeafcaa82cdafad1dfe578d36b058096197cd74"}, "downloads": -1, "filename": "leonardo-newswall-0.0.1.dev1.tar.gz", "has_sig": false, "md5_digest": "5247acce60aa3a442cecce804aa4baba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6294, "upload_time": "2015-09-22T20:54:18", "upload_time_iso_8601": "2015-09-22T20:54:18.867141Z", "url": "https://files.pythonhosted.org/packages/61/ae/b81393c4f8fc3611bdd133100f7ead1dec7ba2a98278e55285055b3fcf35/leonardo-newswall-0.0.1.dev1.tar.gz", "yanked": false}], "0.1.0.post1": [{"comment_text": "", "digests": {"md5": "f982011df02fb1a6d00fbc413c9d752b", "sha256": "38f570cb52bb2cb87141094b77b79a7c4d3e24831215c6c5055c969f1d9224f2"}, "downloads": -1, "filename": "leonardo-newswall-0.1.0.post1.tar.gz", "has_sig": false, "md5_digest": "f982011df02fb1a6d00fbc413c9d752b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6295, "upload_time": "2015-09-22T20:53:37", "upload_time_iso_8601": "2015-09-22T20:53:37.110890Z", "url": "https://files.pythonhosted.org/packages/6a/38/b68e316bf764822717b9a2804acc9bd717332774526ff5b81701be93517e/leonardo-newswall-0.1.0.post1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f25f4c07444be92631ffdda2e9bffba3", "sha256": "fa79e3aa48c46973af69afa86ab65c89b2e2cc4e78a2beb2ee2c6810771d0598"}, "downloads": -1, "filename": "leonardo-newswall-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f25f4c07444be92631ffdda2e9bffba3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6719, "upload_time": "2015-10-13T22:36:19", "upload_time_iso_8601": "2015-10-13T22:36:19.856260Z", "url": "https://files.pythonhosted.org/packages/31/c2/e8f35f11e8cfc9bf22ce0110e03c900db584c112ec08af261ef2c51fbebf/leonardo-newswall-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f25f4c07444be92631ffdda2e9bffba3", "sha256": "fa79e3aa48c46973af69afa86ab65c89b2e2cc4e78a2beb2ee2c6810771d0598"}, "downloads": -1, "filename": "leonardo-newswall-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f25f4c07444be92631ffdda2e9bffba3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6719, "upload_time": "2015-10-13T22:36:19", "upload_time_iso_8601": "2015-10-13T22:36:19.856260Z", "url": "https://files.pythonhosted.org/packages/31/c2/e8f35f11e8cfc9bf22ce0110e03c900db584c112ec08af261ef2c51fbebf/leonardo-newswall-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:58 2020"}