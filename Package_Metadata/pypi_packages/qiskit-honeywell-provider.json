{"info": {"author": "Honeywell", "author_email": "jack.suen@honeywell.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering"], "description": "# Qiskit Honeywell Provider\n\n[![License](https://img.shields.io/github/license/Qiskit/qiskit-honeywell-provider.svg?style=popout-square)](https://opensource.org/licenses/Apache-2.0)[![Build Status](https://img.shields.io/travis/com/Qiskit/qiskit-honeywell-provider/master.svg?style=popout-square)](https://travis-ci.com/Qiskit/qiskit-honeywell-provider)[![](https://img.shields.io/github/release/Qiskit/qiskit-honeywell-provider.svg?style=popout-square)](https://github.com/Qiskit/qiskit-honeywell-provider/releases)[![](https://img.shields.io/pypi/dm/qiskit-honeywell-provider.svg?style=popout-square)](https://pypi.org/project/qiskit-honeywell-provider/)\n\n**Qiskit** is an open-source framework for working with noisy quantum computers at the level of pulses, circuits, and algorithms.\n\nThis project contains a provider that allows access to Honeywell quantum\ndevices.\n\n## Installation\n\nYou can install the provider using pip:\n\n```bash\npip3 install qiskit-honeywell-provider\n```\n\n`pip` will handle installing all the python dependencies automatically and you\nwill always install the latest version.\n\n## Setting up the Honeywell Provider\n\nOnce the package is installed, you can access the provider from Qiskit via the following import:\n\n```python3\nfrom qiskit.providers.honeywell import Honeywell\n```\n\nYou will need credentials for the Honeywell Quantum Service. This can either be\nset via the `HQS_API_KEY` environment variable, or you can save that token to\ndisk with:\n\n```python3\nHoneywell.save_account('MYToken')\n```\n\nThe credentials will then be loaded automatically on calls that return Backends,\nor you can manually load the credentials with:\n\n```python3\nHoneywell.load_account()\n```\n\nwhich will first check if the env variable is set and use that token and if not\nit will load any save credentials from disk.\n\nWith credentials loaded then you can access the backends from the provider:\n\n```python3\nbackends = Honeywell.backends()\nbackend = Honeywell.get_backend(device)\n```\n\nYou can then use that backend like you would use any other qiskit backend. For\nexample, running a bell state circuit:\n\n```python3\nfrom qiskit import *\nqc = QuantumCircuit(2, 2)\nqc.h(0)\nqc.cx(0, 1)\nqc.measure([0,1], [0,1])\nresult = execute(qc, backend).result()\nprint(result.get_counts(qc))\n```\n\n## Authors and Citation\n\nThe Qiskit Honeywell provider is the work of many people who contribute to the\nproject at different levels. If you use Qiskit, please cite as per the included\n[BibTeX file].\n\n## License\n\n[Apache License 2.0].\n\n[BibTeX file]: https://github.com/Qiskit/qiskit/blob/master/Qiskit.bib\n[Apache License 2.0]: https://github.com/Qiskit/qiskit-honeywell-provider/blob/master/LICENSE.txt\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Qiskit/qiskit-honeywell-provider", "keywords": "qiskit quantum", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "qiskit-honeywell-provider", "package_url": "https://pypi.org/project/qiskit-honeywell-provider/", "platform": "", "project_url": "https://pypi.org/project/qiskit-honeywell-provider/", "project_urls": {"Bug Tracker": "https://github.com/Qiskit/qiskit-honeywell-provider/issues", "Documentation": "https://qiskit.org/documentation/", "Homepage": "https://github.com/Qiskit/qiskit-honeywell-provider", "Source Code": "https://github.com/Qiskit/qiskit-honeywell-provider"}, "release_url": "https://pypi.org/project/qiskit-honeywell-provider/0.1.0/", "requires_dist": ["nest-asyncio (>=1.2.0)", "qiskit-terra (>=0.10)", "requests (>=2.19)", "websockets (>=7)"], "requires_python": ">=3.5", "summary": "Qiskit provider for accessing the quantum devices at Honeywell", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Qiskit Honeywell Provider</h1>\n<p><a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be1e1b8fbe5a7e40243fc8cd4355dfaff9dc513f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5169736b69742f7169736b69742d686f6e657977656c6c2d70726f76696465722e7376673f7374796c653d706f706f75742d737175617265\"></a><a href=\"https://travis-ci.com/Qiskit/qiskit-honeywell-provider\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d42fa5a702a33a0402c8121cbd220d6726b3ac6/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f5169736b69742f7169736b69742d686f6e657977656c6c2d70726f76696465722f6d61737465722e7376673f7374796c653d706f706f75742d737175617265\"></a><a href=\"https://github.com/Qiskit/qiskit-honeywell-provider/releases\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ee500145617c01ed02ef1ace54bd492d5022622/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5169736b69742f7169736b69742d686f6e657977656c6c2d70726f76696465722e7376673f7374796c653d706f706f75742d737175617265\"></a><a href=\"https://pypi.org/project/qiskit-honeywell-provider/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0b0337c51dff799812b6df6a8cc3e276b12a7258/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7169736b69742d686f6e657977656c6c2d70726f76696465722e7376673f7374796c653d706f706f75742d737175617265\"></a></p>\n<p><strong>Qiskit</strong> is an open-source framework for working with noisy quantum computers at the level of pulses, circuits, and algorithms.</p>\n<p>This project contains a provider that allows access to Honeywell quantum\ndevices.</p>\n<h2>Installation</h2>\n<p>You can install the provider using pip:</p>\n<pre>pip3 install qiskit-honeywell-provider\n</pre>\n<p><code>pip</code> will handle installing all the python dependencies automatically and you\nwill always install the latest version.</p>\n<h2>Setting up the Honeywell Provider</h2>\n<p>Once the package is installed, you can access the provider from Qiskit via the following import:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qiskit.providers.honeywell</span> <span class=\"kn\">import</span> <span class=\"n\">Honeywell</span>\n</pre>\n<p>You will need credentials for the Honeywell Quantum Service. This can either be\nset via the <code>HQS_API_KEY</code> environment variable, or you can save that token to\ndisk with:</p>\n<pre><span class=\"n\">Honeywell</span><span class=\"o\">.</span><span class=\"n\">save_account</span><span class=\"p\">(</span><span class=\"s1\">'MYToken'</span><span class=\"p\">)</span>\n</pre>\n<p>The credentials will then be loaded automatically on calls that return Backends,\nor you can manually load the credentials with:</p>\n<pre><span class=\"n\">Honeywell</span><span class=\"o\">.</span><span class=\"n\">load_account</span><span class=\"p\">()</span>\n</pre>\n<p>which will first check if the env variable is set and use that token and if not\nit will load any save credentials from disk.</p>\n<p>With credentials loaded then you can access the backends from the provider:</p>\n<pre><span class=\"n\">backends</span> <span class=\"o\">=</span> <span class=\"n\">Honeywell</span><span class=\"o\">.</span><span class=\"n\">backends</span><span class=\"p\">()</span>\n<span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">Honeywell</span><span class=\"o\">.</span><span class=\"n\">get_backend</span><span class=\"p\">(</span><span class=\"n\">device</span><span class=\"p\">)</span>\n</pre>\n<p>You can then use that backend like you would use any other qiskit backend. For\nexample, running a bell state circuit:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qiskit</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">qc</span> <span class=\"o\">=</span> <span class=\"n\">QuantumCircuit</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">qc</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">qc</span><span class=\"o\">.</span><span class=\"n\">cx</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">qc</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">qc</span><span class=\"p\">,</span> <span class=\"n\">backend</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get_counts</span><span class=\"p\">(</span><span class=\"n\">qc</span><span class=\"p\">))</span>\n</pre>\n<h2>Authors and Citation</h2>\n<p>The Qiskit Honeywell provider is the work of many people who contribute to the\nproject at different levels. If you use Qiskit, please cite as per the included\n<a href=\"https://github.com/Qiskit/qiskit/blob/master/Qiskit.bib\" rel=\"nofollow\">BibTeX file</a>.</p>\n<h2>License</h2>\n<p><a href=\"https://github.com/Qiskit/qiskit-honeywell-provider/blob/master/LICENSE.txt\" rel=\"nofollow\">Apache License 2.0</a>.</p>\n\n          </div>"}, "last_serial": 6786835, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f89531d0cb2563bf47c7107985c6ee7b", "sha256": "faf22155156011b402cef9447440388be2fc6842bae100841c46e97b70af414c"}, "downloads": -1, "filename": "qiskit_honeywell_provider-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f89531d0cb2563bf47c7107985c6ee7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31732, "upload_time": "2020-03-10T18:22:13", "upload_time_iso_8601": "2020-03-10T18:22:13.458082Z", "url": "https://files.pythonhosted.org/packages/42/27/7bad8a8003a9a5a13086e9fb41cc794e7ee505d0326aa09e3c6069f3f006/qiskit_honeywell_provider-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9232a302e0115948a304a0ca00cd80c5", "sha256": "fde5d43b7aab74d294a30e21783af00345c86679825167a49b431db4576a7b03"}, "downloads": -1, "filename": "qiskit-honeywell-provider-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9232a302e0115948a304a0ca00cd80c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15420, "upload_time": "2020-03-10T18:22:15", "upload_time_iso_8601": "2020-03-10T18:22:15.584098Z", "url": "https://files.pythonhosted.org/packages/4b/92/9de74a01b7552ab5ecb19b144646cd6a92540f8ecbbcf72e89e573185b86/qiskit-honeywell-provider-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f89531d0cb2563bf47c7107985c6ee7b", "sha256": "faf22155156011b402cef9447440388be2fc6842bae100841c46e97b70af414c"}, "downloads": -1, "filename": "qiskit_honeywell_provider-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f89531d0cb2563bf47c7107985c6ee7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 31732, "upload_time": "2020-03-10T18:22:13", "upload_time_iso_8601": "2020-03-10T18:22:13.458082Z", "url": "https://files.pythonhosted.org/packages/42/27/7bad8a8003a9a5a13086e9fb41cc794e7ee505d0326aa09e3c6069f3f006/qiskit_honeywell_provider-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9232a302e0115948a304a0ca00cd80c5", "sha256": "fde5d43b7aab74d294a30e21783af00345c86679825167a49b431db4576a7b03"}, "downloads": -1, "filename": "qiskit-honeywell-provider-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9232a302e0115948a304a0ca00cd80c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15420, "upload_time": "2020-03-10T18:22:15", "upload_time_iso_8601": "2020-03-10T18:22:15.584098Z", "url": "https://files.pythonhosted.org/packages/4b/92/9de74a01b7552ab5ecb19b144646cd6a92540f8ecbbcf72e89e573185b86/qiskit-honeywell-provider-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:30 2020"}