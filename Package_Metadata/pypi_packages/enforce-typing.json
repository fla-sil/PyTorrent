{"info": {"author": "Joshua Logan", "author_email": "joshua@matcha.wine", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Adds a simple decorator `enforce_types` that enables enforcing strict\ntyping on a function or dataclass using annotations.\n\nWorks with collection types and subtypes for example `Dict[str,\nTuple[int, int]]`, and with special types as `Optional` and `Any`.\n\nSeeing as this uses type annotations from\n[PEP 484](https://www.python.org/dev/peps/pep-0484/), \\>=Python 3.5 is\nrequired.\n\nPyPi project page: <https://pypi.org/project/enforce-typing/>\n\nHeavily inspired from [this SO post](https://stackoverflow.com/questions/50563546/validating-detailed-types-in-python-dataclasses/50622643#50622643) so credit goes mostly to him.\n\n## Installation\n\nOther than downloading from PyPi with\n<span class=\"title-ref\">pip</span>, you may also clone the repository\nand run the usual setuptools process:\n\n    $> git clone https://github.com/matchawine/python-enforce-typing.git && cd python-enforce-typing\n    $> python setup.py {build,install}\n\n## Usage\n\n``` python\nfrom typing import Any, Union, Optional\nfrom dataclasses import dataclass\nfrom enforce_typing import enforce_types\n\n@enforce_types\n@dataclass(frozen=True)\nclass Toto(object):\n    this_or_that: Union[str, int]\n    anything: Any\n    name: str = \"\"\n    value: int = 1\n    maybe_not: Optional[bool] = None\n\n>>> Toto(this_or_that=list(), anything=2)\nTypeError: Expected type 'typing.Union[str, int]' for attribute 'this_or_that' but received type '<class 'list'>')\n\n>>> Toto(this_or_that=1, anything=2, maybe_not=0)\nTypeError: Expected type 'typing.Union[bool, NoneType]' for attribute 'maybe_not' but received type '<class 'int'>')\n\n>>> Toto(this_or_that=1, anything=2, name=3)\nTypeError: Expected type '<class 'str'>' for attribute 'name' but received type '<class 'int'>')\n\n>>> Toto(this_or_that=1, anything=2, value=3.0)\nTypeError: Expected type '<class 'int'>' for attribute 'value' but received type '<class 'float'>')\n\n>>> Toto(this_or_that=1, anything=2)\nToto(this_or_that=1, anything=2, name='', value=1, maybe_not=None)\n\n>>> Toto(this_or_that=\"titi\", anything=list(), maybe_not=False)\nToto(this_or_that='titi', anything=[], name='', value=1, maybe_not=False)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matchawine/python-enforce-typing", "keywords": "decorators typing", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "enforce-typing", "package_url": "https://pypi.org/project/enforce-typing/", "platform": "", "project_url": "https://pypi.org/project/enforce-typing/", "project_urls": {"Homepage": "https://github.com/matchawine/python-enforce-typing"}, "release_url": "https://pypi.org/project/enforce-typing/1.0.0.post1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "An easy to use decorator to enforce static typing for function and dataclasses.", "version": "1.0.0.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Adds a simple decorator <code>enforce_types</code> that enables enforcing strict\ntyping on a function or dataclass using annotations.</p>\n<p>Works with collection types and subtypes for example <code>Dict[str, Tuple[int, int]]</code>, and with special types as <code>Optional</code> and <code>Any</code>.</p>\n<p>Seeing as this uses type annotations from\n<a href=\"https://www.python.org/dev/peps/pep-0484/\" rel=\"nofollow\">PEP 484</a>, &gt;=Python 3.5 is\nrequired.</p>\n<p>PyPi project page: <a href=\"https://pypi.org/project/enforce-typing/\" rel=\"nofollow\">https://pypi.org/project/enforce-typing/</a></p>\n<p>Heavily inspired from <a href=\"https://stackoverflow.com/questions/50563546/validating-detailed-types-in-python-dataclasses/50622643#50622643\" rel=\"nofollow\">this SO post</a> so credit goes mostly to him.</p>\n<h2>Installation</h2>\n<p>Other than downloading from PyPi with\n<span class=\"title-ref\">pip</span>, you may also clone the repository\nand run the usual setuptools process:</p>\n<pre><code>$&gt; git clone https://github.com/matchawine/python-enforce-typing.git &amp;&amp; cd python-enforce-typing\n$&gt; python setup.py {build,install}\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n<span class=\"kn\">from</span> <span class=\"nn\">enforce_typing</span> <span class=\"kn\">import</span> <span class=\"n\">enforce_types</span>\n\n<span class=\"nd\">@enforce_types</span>\n<span class=\"nd\">@dataclass</span><span class=\"p\">(</span><span class=\"n\">frozen</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Toto</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"n\">this_or_that</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>\n    <span class=\"n\">anything</span><span class=\"p\">:</span> <span class=\"n\">Any</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span>\n    <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">maybe_not</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Toto</span><span class=\"p\">(</span><span class=\"n\">this_or_that</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">(),</span> <span class=\"n\">anything</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Expected</span> <span class=\"nb\">type</span> <span class=\"s1\">'typing.Union[str, int]'</span> <span class=\"k\">for</span> <span class=\"n\">attribute</span> <span class=\"s1\">'this_or_that'</span> <span class=\"n\">but</span> <span class=\"n\">received</span> <span class=\"nb\">type</span> <span class=\"s1\">'&lt;class '</span><span class=\"nb\">list</span><span class=\"s1\">'&gt;'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Toto</span><span class=\"p\">(</span><span class=\"n\">this_or_that</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">anything</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">maybe_not</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Expected</span> <span class=\"nb\">type</span> <span class=\"s1\">'typing.Union[bool, NoneType]'</span> <span class=\"k\">for</span> <span class=\"n\">attribute</span> <span class=\"s1\">'maybe_not'</span> <span class=\"n\">but</span> <span class=\"n\">received</span> <span class=\"nb\">type</span> <span class=\"s1\">'&lt;class '</span><span class=\"nb\">int</span><span class=\"s1\">'&gt;'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Toto</span><span class=\"p\">(</span><span class=\"n\">this_or_that</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">anything</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Expected</span> <span class=\"nb\">type</span> <span class=\"s1\">'&lt;class '</span><span class=\"nb\">str</span><span class=\"s1\">'&gt;'</span> <span class=\"k\">for</span> <span class=\"n\">attribute</span> <span class=\"s1\">'name'</span> <span class=\"n\">but</span> <span class=\"n\">received</span> <span class=\"nb\">type</span> <span class=\"s1\">'&lt;class '</span><span class=\"nb\">int</span><span class=\"s1\">'&gt;'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Toto</span><span class=\"p\">(</span><span class=\"n\">this_or_that</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">anything</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mf\">3.0</span><span class=\"p\">)</span>\n<span class=\"ne\">TypeError</span><span class=\"p\">:</span> <span class=\"n\">Expected</span> <span class=\"nb\">type</span> <span class=\"s1\">'&lt;class '</span><span class=\"nb\">int</span><span class=\"s1\">'&gt;'</span> <span class=\"k\">for</span> <span class=\"n\">attribute</span> <span class=\"s1\">'value'</span> <span class=\"n\">but</span> <span class=\"n\">received</span> <span class=\"nb\">type</span> <span class=\"s1\">'&lt;class '</span><span class=\"nb\">float</span><span class=\"s1\">'&gt;'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Toto</span><span class=\"p\">(</span><span class=\"n\">this_or_that</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">anything</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">Toto</span><span class=\"p\">(</span><span class=\"n\">this_or_that</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">anything</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">maybe_not</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Toto</span><span class=\"p\">(</span><span class=\"n\">this_or_that</span><span class=\"o\">=</span><span class=\"s2\">\"titi\"</span><span class=\"p\">,</span> <span class=\"n\">anything</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">(),</span> <span class=\"n\">maybe_not</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">Toto</span><span class=\"p\">(</span><span class=\"n\">this_or_that</span><span class=\"o\">=</span><span class=\"s1\">'titi'</span><span class=\"p\">,</span> <span class=\"n\">anything</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">maybe_not</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6181477, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c0ecd3b2e9c447cec8534df5d64e2f8f", "sha256": "34cee2afdbad84404e6ace8303c67de6144f0bcc21fac8c76638a2217e6d5568"}, "downloads": -1, "filename": "enforce_typing-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c0ecd3b2e9c447cec8534df5d64e2f8f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 15420, "upload_time": "2019-11-22T13:45:58", "upload_time_iso_8601": "2019-11-22T13:45:58.023402Z", "url": "https://files.pythonhosted.org/packages/78/a7/715551f12856fb48c51b6389fe7d113113d57fb9ce5275c0a75014de6349/enforce_typing-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86a6d6ab0beebc1f91e0fa1969d47860", "sha256": "560b69cfed663e0a4268f3a409d3f06db4e7084d8f2eeca768a7ebcf8b6f7996"}, "downloads": -1, "filename": "enforce-typing-1.0.0.tar.gz", "has_sig": false, "md5_digest": "86a6d6ab0beebc1f91e0fa1969d47860", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15520, "upload_time": "2019-11-22T13:46:00", "upload_time_iso_8601": "2019-11-22T13:46:00.157859Z", "url": "https://files.pythonhosted.org/packages/8d/eb/986a28a4597b00969cdd48c3d7974e94c6ca16e24e5040562a74355ee89a/enforce-typing-1.0.0.tar.gz", "yanked": false}], "1.0.0.post1": [{"comment_text": "", "digests": {"md5": "a134007c557d44c00386f74a65b27d6f", "sha256": "d3184dfdbfd7f9520c884986561751a6106c57cdd65d730470645d2d40c47e18"}, "downloads": -1, "filename": "enforce_typing-1.0.0.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a134007c557d44c00386f74a65b27d6f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 15595, "upload_time": "2019-11-22T14:02:24", "upload_time_iso_8601": "2019-11-22T14:02:24.806371Z", "url": "https://files.pythonhosted.org/packages/6a/b5/eea1c6b9f5e739e00b2ceb2925ce25a2a36c7503a5e23d6d818d22ca2631/enforce_typing-1.0.0.post1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bad80e84559be98dd6891cad61bcdb5", "sha256": "90347a61d08e7f7578d9714b4f0fd8abd9b6bc48c8ac8d46d7f290d413afabb7"}, "downloads": -1, "filename": "enforce-typing-1.0.0.post1.tar.gz", "has_sig": false, "md5_digest": "7bad80e84559be98dd6891cad61bcdb5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15676, "upload_time": "2019-11-22T14:02:26", "upload_time_iso_8601": "2019-11-22T14:02:26.334001Z", "url": "https://files.pythonhosted.org/packages/c0/7e/aa1aef70bafe87d88184c20f140596995127ecc7949ca50410b43993ee10/enforce-typing-1.0.0.post1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a134007c557d44c00386f74a65b27d6f", "sha256": "d3184dfdbfd7f9520c884986561751a6106c57cdd65d730470645d2d40c47e18"}, "downloads": -1, "filename": "enforce_typing-1.0.0.post1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a134007c557d44c00386f74a65b27d6f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 15595, "upload_time": "2019-11-22T14:02:24", "upload_time_iso_8601": "2019-11-22T14:02:24.806371Z", "url": "https://files.pythonhosted.org/packages/6a/b5/eea1c6b9f5e739e00b2ceb2925ce25a2a36c7503a5e23d6d818d22ca2631/enforce_typing-1.0.0.post1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bad80e84559be98dd6891cad61bcdb5", "sha256": "90347a61d08e7f7578d9714b4f0fd8abd9b6bc48c8ac8d46d7f290d413afabb7"}, "downloads": -1, "filename": "enforce-typing-1.0.0.post1.tar.gz", "has_sig": false, "md5_digest": "7bad80e84559be98dd6891cad61bcdb5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 15676, "upload_time": "2019-11-22T14:02:26", "upload_time_iso_8601": "2019-11-22T14:02:26.334001Z", "url": "https://files.pythonhosted.org/packages/c0/7e/aa1aef70bafe87d88184c20f140596995127ecc7949ca50410b43993ee10/enforce-typing-1.0.0.post1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:21 2020"}