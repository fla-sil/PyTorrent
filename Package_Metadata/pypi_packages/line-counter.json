{"info": {"author": "Morgan Zhang", "author_email": "MorganZhang100@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "line-counter\n============\n\n| A command line tool to analyze the amount of lines and files under\n  current directory.\n| It supports 'line.select' rules which works like '.gitignore'.\n\nInstallation\n------------\n\nYou can install, upgrade, uninstall line-counter.py with these commands:\n\n::\n\n    $ pip install line-counter  \n    $ pip install --upgrade line-counter  \n    $ pip uninstall line-counter  \n\nUsage\n-----\n\n::\n\n    Usage: line [options] [args]\n\n    Analyze the amount of lines and files under current directory following the\n    rules in 'line.select' or analyze all files if 'line.select' doesn't exist\n\n    Options:\n      --version     show program's version number and exit\n      -h, --help    show this help message and exit\n      -d, --detail  show more detail in the result\n      -s, --show    show rules in 'line.select'\n\nExample usage and output\n------------------------\n\nAnalyze all files (when 'line.select' doesn't exist) or specific files\n(when 'line.select' exists) under current directory.\n\n::\n\n    $ line\n    Search in /Users/Morgan/Documents/Example/\n    file count: 4\n    line count: 839\n\n| Analyze all files (when 'line.select' doesn't exist) or specific files\n  (when 'line.select' exists) under current directory.\n| And show results in detail.\n\n::\n\n    $ line -d\n    Search in /Users/Morgan/Documents/Example/\n    Dir A/file C.c                                             72\n    Dir A/file D.py                                           268\n    file A.py                                                 467\n    file B.c                                                   32\n    file count: 4\n    line count: 839\n\nShow the rules in 'line.select'\n\n::\n\n    $ line -s\n    Here are the rules in 'line.select' under /Users/Morgan/Documents/Example/:\n    #Select rules:\n    *.c\n\n    #Ignore rules:\n    !Dir A\n    !*.py\n\nCheck current version\n\n::\n\n    $ line --version\n    line 0.7.4\n\nline.select\n-----------\n\nThis file works like '.gitignore'. \\* Each line is a rule \\* Each line\nstarts with a '#' means that's a comment \\* Each line starts with a '!'\nmeans it's a ignore rule \\* Otherwise it's a select rule \\* The order of\nrules is irrelevant and ignore rules can always override select rules \\*\nThe rules can find all the pathnames matching a specified pattern\naccording to the rules used by the Unix shell. No tilde expansion is\ndone, but \\*, ?, and character ranges expressed with [ ] will be\ncorrectly matched.\n\nRoadmap\n-------\n\n-  Add order output function\n-  Add option to only count file amount or line amount\n\nChange Log\n----------\n\n-  | **0.7.4** 03/25/2017\n   | Fix distribution on PyPI.\n\n-  | **0.7.3** 03/25/2017\n   | Fix the long description format on PyPI.\n\n-  | **0.7.2** 03/25/2017\n   | Fix a bug that file cannot be matched when there is a '[' in the\n     path.\n\nAuthor\n------\n\nI'm Morgan Zhang, a graduate computer science student in University of\nSan Francisco.\n\nWhy I made it\n^^^^^^^^^^^^^\n\n| I always want to know how many lines of code that I have done, but\n  there isn't a easy way to get it.\n| So I decide to make a tool for this.\n\nContact Information\n^^^^^^^^^^^^^^^^^^^\n\nMorganZhang100@gmail.com\n\nLicense\n-------\n\nThe MIT license.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MorganZhang100/line-counter", "keywords": "file line code count", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "line-counter", "package_url": "https://pypi.org/project/line-counter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/line-counter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/MorganZhang100/line-counter"}, "release_url": "https://pypi.org/project/line-counter/0.7.4/", "requires_dist": null, "requires_python": null, "summary": "A command line tool to analyze the amount of lines and files under current directory.", "version": "0.7.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div>A command line tool to analyze the amount of lines and files under\ncurrent directory.</div>\n<div>It supports \u2018line.select\u2019 rules which works like \u2018.gitignore\u2019.</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install, upgrade, uninstall line-counter.py with these commands:</p>\n<pre>$ pip install line-counter\n$ pip install --upgrade line-counter\n$ pip uninstall line-counter\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage: line [options] [args]\n\nAnalyze the amount of lines and files under current directory following the\nrules in 'line.select' or analyze all files if 'line.select' doesn't exist\n\nOptions:\n  --version     show program's version number and exit\n  -h, --help    show this help message and exit\n  -d, --detail  show more detail in the result\n  -s, --show    show rules in 'line.select'\n</pre>\n</div>\n<div id=\"example-usage-and-output\">\n<h2>Example usage and output</h2>\n<p>Analyze all files (when \u2018line.select\u2019 doesn\u2019t exist) or specific files\n(when \u2018line.select\u2019 exists) under current directory.</p>\n<pre>$ line\nSearch in /Users/Morgan/Documents/Example/\nfile count: 4\nline count: 839\n</pre>\n<div>\n<div>Analyze all files (when \u2018line.select\u2019 doesn\u2019t exist) or specific files\n(when \u2018line.select\u2019 exists) under current directory.</div>\n<div>And show results in detail.</div>\n</div>\n<pre>$ line -d\nSearch in /Users/Morgan/Documents/Example/\nDir A/file C.c                                             72\nDir A/file D.py                                           268\nfile A.py                                                 467\nfile B.c                                                   32\nfile count: 4\nline count: 839\n</pre>\n<p>Show the rules in \u2018line.select\u2019</p>\n<pre>$ line -s\nHere are the rules in 'line.select' under /Users/Morgan/Documents/Example/:\n#Select rules:\n*.c\n\n#Ignore rules:\n!Dir A\n!*.py\n</pre>\n<p>Check current version</p>\n<pre>$ line --version\nline 0.7.4\n</pre>\n</div>\n<div id=\"line-select\">\n<h2>line.select</h2>\n<p>This file works like \u2018.gitignore\u2019. * Each line is a rule * Each line\nstarts with a \u2018#\u2019 means that\u2019s a comment * Each line starts with a \u2018!\u2019\nmeans it\u2019s a ignore rule * Otherwise it\u2019s a select rule * The order of\nrules is irrelevant and ignore rules can always override select rules *\nThe rules can find all the pathnames matching a specified pattern\naccording to the rules used by the Unix shell. No tilde expansion is\ndone, but *, ?, and character ranges expressed with [ ] will be\ncorrectly matched.</p>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<ul>\n<li>Add order output function</li>\n<li>Add option to only count file amount or line amount</li>\n</ul>\n</div>\n<div id=\"change-log\">\n<h2>Change Log</h2>\n<ul>\n<li><div>\n<div><strong>0.7.4</strong> 03/25/2017</div>\n<div>Fix distribution on PyPI.</div>\n</div>\n</li>\n<li><div>\n<div><strong>0.7.3</strong> 03/25/2017</div>\n<div>Fix the long description format on PyPI.</div>\n</div>\n</li>\n<li><div>\n<div><strong>0.7.2</strong> 03/25/2017</div>\n<div>Fix a bug that file cannot be matched when there is a \u2018[\u2018 in the\npath.</div>\n</div>\n</li>\n</ul>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>I\u2019m Morgan Zhang, a graduate computer science student in University of\nSan Francisco.</p>\n<div id=\"why-i-made-it\">\n<h3>Why I made it</h3>\n<div>\n<div>I always want to know how many lines of code that I have done, but\nthere isn\u2019t a easy way to get it.</div>\n<div>So I decide to make a tool for this.</div>\n</div>\n</div>\n<div id=\"contact-information\">\n<h3>Contact Information</h3>\n<p><a href=\"mailto:MorganZhang100%40gmail.com\">MorganZhang100<span>@</span>gmail<span>.</span>com</a></p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 2731091, "releases": {"0.7.3": [], "0.7.4": [{"comment_text": "", "digests": {"md5": "8fbd398e800d138d1be8467b597ff6ad", "sha256": "704156df899011fde2a717af579e8e514172779b7bfdfa0c8a6dc6e542ab917f"}, "downloads": -1, "filename": "line_counter-0.7.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8fbd398e800d138d1be8467b597ff6ad", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6876, "upload_time": "2017-03-26T00:23:52", "upload_time_iso_8601": "2017-03-26T00:23:52.862540Z", "url": "https://files.pythonhosted.org/packages/65/30/87c634ec23bb553731201d18b5837e214725a731081f6ac1323346c65117/line_counter-0.7.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6af3f372211caf40b0341958f107a5db", "sha256": "44016e456970d6e453a2f46fd1423a83195de69d235c0754bd95b69a29255216"}, "downloads": -1, "filename": "line-counter-0.7.4.tar.gz", "has_sig": false, "md5_digest": "6af3f372211caf40b0341958f107a5db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4337, "upload_time": "2017-03-26T00:23:51", "upload_time_iso_8601": "2017-03-26T00:23:51.329925Z", "url": "https://files.pythonhosted.org/packages/b9/36/11c28cd85456e3310684b7e9ad934ef712b786c1c74610e0e3b0f742b511/line-counter-0.7.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8fbd398e800d138d1be8467b597ff6ad", "sha256": "704156df899011fde2a717af579e8e514172779b7bfdfa0c8a6dc6e542ab917f"}, "downloads": -1, "filename": "line_counter-0.7.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8fbd398e800d138d1be8467b597ff6ad", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 6876, "upload_time": "2017-03-26T00:23:52", "upload_time_iso_8601": "2017-03-26T00:23:52.862540Z", "url": "https://files.pythonhosted.org/packages/65/30/87c634ec23bb553731201d18b5837e214725a731081f6ac1323346c65117/line_counter-0.7.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6af3f372211caf40b0341958f107a5db", "sha256": "44016e456970d6e453a2f46fd1423a83195de69d235c0754bd95b69a29255216"}, "downloads": -1, "filename": "line-counter-0.7.4.tar.gz", "has_sig": false, "md5_digest": "6af3f372211caf40b0341958f107a5db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4337, "upload_time": "2017-03-26T00:23:51", "upload_time_iso_8601": "2017-03-26T00:23:51.329925Z", "url": "https://files.pythonhosted.org/packages/b9/36/11c28cd85456e3310684b7e9ad934ef712b786c1c74610e0e3b0f742b511/line-counter-0.7.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:45 2020"}