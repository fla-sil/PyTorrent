{"info": {"author": "Andr\u00e9 Bleier", "author_email": "andrebleier@live.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "Simulating Supervised Learning Data <img src=\"/img/Xy.png\" alt=\"drawing\" width=\"150px\" align=\"right\"/> \n===================================\n\n\nWith `xypy.Xy()` you can convienently simulate supervised learning data, e.g. regression and classification problems. \nThe simulation can be very specific, since there are many degrees of freedom for the user. For instance, the functional \nshape of the nonlinearity is user-defined as well. Interactions can be formed and (co)variances altered. For a more \nspecific motivation you can visit our [blog](https://www.statworx.com/de/blog/simulating-regression-data-with-xy-in-python/). \nI have adapted this package from my R version, which you can check out [here](https://www.github.com/andrebeleier/Xy).\n\n### Usage\n\nYou can can checkout details about the package on [testPYPI](https://test.pypi.org/project/xypy/) or on \n[GitHub](https://www.github.com/andrebleier/xypy).\n\nYou can convienently install the package via PYPI with the following command.\n```\npip install xypy\n```\nThere is an example test script on my [GitHub](https://www.github.com/andrebleier/xypy), which will you get started\nwith the simulation.\n\n### Simulate data \n\nYou can simulate regression and classification data with interactions and a user-specified non-linearity. With \nthe <code>stn</code> argument you can alter the signal to noise ratio of your simulation. I strongly encourage you to \nread this [blog post](https://www.statworx.com/de/blog/pushing-ordinary-least-squares-to-the-limit-with-xy/), \nwhere I've analyzed OLS coefficients with different signal to noise ratios.\n\n```\n# load the library\nfrom xypy import Xy\n# simulate regression data\nmy_sim = Xy(n = 1000, \n            numvars = [10,10], \n            catvars = [3, 2], \n            noisevars = 50, \n            stn = 100.0)\n\n# get a glimpse of the simulation\nmy_sim\n\n# plot the true underlying effects\nmy_sim.plot()\n\n# extract the data\nX, y = my_sim.data\n\n# extract the true underlying model weights\nmy_sim.coef_\n```\n\n### Feature Selection\n\nYou can extract a feature importance of your simulation. For instance, to benchmark feature selection algorithms. \nYou can read up on a small benchmark I did with this feature \non our [blog](https://www.statworx.com/de/blog/benchmarking-feature-selection-algorithms-with-xy/). \nYou can perform the same analysis easily in Python as well.\n\n```\n# Feature Importance \nmy_sim.varimp()\n```\n<img src=\"/img/imp.png\" alt=\"drawing\"/> \n\nFeel free to [contact](mailto:andre.bleier@live.de) me with input and ideas.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/andrebleier/XyPy", "keywords": "simulation machine learning supervised feature selection", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xypy", "package_url": "https://pypi.org/project/xypy/", "platform": "", "project_url": "https://pypi.org/project/xypy/", "project_urls": {"Homepage": "http://github.com/andrebleier/XyPy"}, "release_url": "https://pypi.org/project/xypy/0.0.7/", "requires_dist": ["scipy", "numpy", "pandas", "seaborn", "matplotlib", "statsmodels", "sklearn"], "requires_python": "", "summary": "A simulation framework for supervised learning data. The functionalities are specifically                   designed to let the user a maximum degrees of freedom, to ultimately fulfill the research purpose.                   Furthermore, feature importances of the simulation can be created on a local and a global level.                    This is particular interesting, for instance, to benchmark feature selection algorithms.", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Simulating Supervised Learning Data <img align=\"right\" alt=\"drawing\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b25ffda40c357367d166a49735ad438c0cc0934/2f696d672f58792e706e67\" width=\"150px\"></h1>\n<p>With <code>xypy.Xy()</code> you can convienently simulate supervised learning data, e.g. regression and classification problems.\nThe simulation can be very specific, since there are many degrees of freedom for the user. For instance, the functional\nshape of the nonlinearity is user-defined as well. Interactions can be formed and (co)variances altered. For a more\nspecific motivation you can visit our <a href=\"https://www.statworx.com/de/blog/simulating-regression-data-with-xy-in-python/\" rel=\"nofollow\">blog</a>.\nI have adapted this package from my R version, which you can check out <a href=\"https://www.github.com/andrebeleier/Xy\" rel=\"nofollow\">here</a>.</p>\n<h3>Usage</h3>\n<p>You can can checkout details about the package on <a href=\"https://test.pypi.org/project/xypy/\" rel=\"nofollow\">testPYPI</a> or on\n<a href=\"https://www.github.com/andrebleier/xypy\" rel=\"nofollow\">GitHub</a>.</p>\n<p>You can convienently install the package via PYPI with the following command.</p>\n<pre><code>pip install xypy\n</code></pre>\n<p>There is an example test script on my <a href=\"https://www.github.com/andrebleier/xypy\" rel=\"nofollow\">GitHub</a>, which will you get started\nwith the simulation.</p>\n<h3>Simulate data</h3>\n<p>You can simulate regression and classification data with interactions and a user-specified non-linearity. With\nthe <code>stn</code> argument you can alter the signal to noise ratio of your simulation. I strongly encourage you to\nread this <a href=\"https://www.statworx.com/de/blog/pushing-ordinary-least-squares-to-the-limit-with-xy/\" rel=\"nofollow\">blog post</a>,\nwhere I've analyzed OLS coefficients with different signal to noise ratios.</p>\n<pre><code># load the library\nfrom xypy import Xy\n# simulate regression data\nmy_sim = Xy(n = 1000, \n            numvars = [10,10], \n            catvars = [3, 2], \n            noisevars = 50, \n            stn = 100.0)\n\n# get a glimpse of the simulation\nmy_sim\n\n# plot the true underlying effects\nmy_sim.plot()\n\n# extract the data\nX, y = my_sim.data\n\n# extract the true underlying model weights\nmy_sim.coef_\n</code></pre>\n<h3>Feature Selection</h3>\n<p>You can extract a feature importance of your simulation. For instance, to benchmark feature selection algorithms.\nYou can read up on a small benchmark I did with this feature\non our <a href=\"https://www.statworx.com/de/blog/benchmarking-feature-selection-algorithms-with-xy/\" rel=\"nofollow\">blog</a>.\nYou can perform the same analysis easily in Python as well.</p>\n<pre><code># Feature Importance \nmy_sim.varimp()\n</code></pre>\n<img alt=\"drawing\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35f804262fe4d44679018945665079b6dc84252b/2f696d672f696d702e706e67\"> \n<p>Feel free to <a href=\"mailto:andre.bleier@live.de\">contact</a> me with input and ideas.</p>\n\n          </div>"}, "last_serial": 4925166, "releases": {"0.0.6": [{"comment_text": "", "digests": {"md5": "4d6dcf49c4e2c81b3ff4c834f99b65e1", "sha256": "657cd6f78d8655ddd9aa2e1e239d09c299804604912d6737cbfd12ea54f98073"}, "downloads": -1, "filename": "xypy-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4d6dcf49c4e2c81b3ff4c834f99b65e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9279, "upload_time": "2019-03-11T11:10:06", "upload_time_iso_8601": "2019-03-11T11:10:06.604484Z", "url": "https://files.pythonhosted.org/packages/22/89/f23e76992304cbe6335815ae27d19f576d95bf84e2b28a6fee2d1d68360e/xypy-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfbb78b7f1dad30104e498f639513745", "sha256": "856f3293e9ed321949dc5661ad8009a49b6183af43998b19ecc9269d1ab98305"}, "downloads": -1, "filename": "xypy-0.0.6.tar.gz", "has_sig": false, "md5_digest": "bfbb78b7f1dad30104e498f639513745", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8801, "upload_time": "2019-03-11T11:10:09", "upload_time_iso_8601": "2019-03-11T11:10:09.134257Z", "url": "https://files.pythonhosted.org/packages/5b/b8/1d7f176892bf1822e8fbde1050fc58ab0676521bfca7f5e04719899ca3a2/xypy-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "6baae0e1fbeae6d8f59a752a435abd6a", "sha256": "4dfc6caf3ca0e567e55e30e30c040769cb18fca821e194b0f754f353c888dc57"}, "downloads": -1, "filename": "xypy-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "6baae0e1fbeae6d8f59a752a435abd6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9272, "upload_time": "2019-03-11T13:18:04", "upload_time_iso_8601": "2019-03-11T13:18:04.394429Z", "url": "https://files.pythonhosted.org/packages/00/59/56fc61398eb43d380a94afd973cb4b13d8488b79a87e9411486ba390873e/xypy-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "187a408217d6519f19abc64093bc5a47", "sha256": "0128baff588fd13d1a9aef95a1dcb4d8bd7f7fc71ff366f1fee25e6f36a0717e"}, "downloads": -1, "filename": "xypy-0.0.7.tar.gz", "has_sig": false, "md5_digest": "187a408217d6519f19abc64093bc5a47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8790, "upload_time": "2019-03-11T13:18:05", "upload_time_iso_8601": "2019-03-11T13:18:05.921166Z", "url": "https://files.pythonhosted.org/packages/df/1e/bf5ded2067a2de675f1085975da317df919abd0533e9f8cbf7a2b6be862c/xypy-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6baae0e1fbeae6d8f59a752a435abd6a", "sha256": "4dfc6caf3ca0e567e55e30e30c040769cb18fca821e194b0f754f353c888dc57"}, "downloads": -1, "filename": "xypy-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "6baae0e1fbeae6d8f59a752a435abd6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9272, "upload_time": "2019-03-11T13:18:04", "upload_time_iso_8601": "2019-03-11T13:18:04.394429Z", "url": "https://files.pythonhosted.org/packages/00/59/56fc61398eb43d380a94afd973cb4b13d8488b79a87e9411486ba390873e/xypy-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "187a408217d6519f19abc64093bc5a47", "sha256": "0128baff588fd13d1a9aef95a1dcb4d8bd7f7fc71ff366f1fee25e6f36a0717e"}, "downloads": -1, "filename": "xypy-0.0.7.tar.gz", "has_sig": false, "md5_digest": "187a408217d6519f19abc64093bc5a47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8790, "upload_time": "2019-03-11T13:18:05", "upload_time_iso_8601": "2019-03-11T13:18:05.921166Z", "url": "https://files.pythonhosted.org/packages/df/1e/bf5ded2067a2de675f1085975da317df919abd0533e9f8cbf7a2b6be862c/xypy-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:55 2020"}