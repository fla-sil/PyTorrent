{"info": {"author": "Guilhem Vellut", "author_email": "g@vellut.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Other Audience", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Utilities"], "description": "# jncep\n\nSimple command-line tool to generate EPUB files for [J-Novel Club](https://j-novel.club/) pre-pub novels\n\n# Install\n\nThe tool requires Python 3.6+.\n\nTo install, launch :\n\n```console\npip install jncep\n```\n\nThe command above will install the `jncep` Python library and its dependencies. The library includes a command-line script, also named `jncep`, whose functionality is described below.\n\n# Limitations\n\nThis tool only works with J-Novel Club __novels__, not manga.\n\n# Usage\n\nThe `jncep` tool must be launched on the command-line. It has 3 commands:\n\n- `epub`: To simply generate an EPUB file\n- `track`: To tell the tool that a series is of interest\n- `update`: To generate EPUB files for newly updated series of interest\n\n## J-Novel Club account credentials\n\nAll the commands need some user credentials (email and password) in order to communicate with the J-Novel Club API. They are the same values as the ones used to log in to the J-Novel Club website with a browser.\n\nThose credentials can be passed directly on the command line using the `--email` and `--password` arguments to the __command__ (not the `jncep` tool directly). For example, using the `epub` command:\n\n```console\njncep epub --email user@example.com --password \"foo%bar666!\" https://j-novel.club/c/tearmoon-empire-volume-1-part-1\n```\n\nOptionally, the JNCEP_EMAIL and JNCEP_PASSWORD env vars can be set instead of passing the `--email` and `--password` arguments when launching the commands. For example, if they are set in the .bashrc in the following way:\n\n```console\nexport JNCEP_EMAIL=user@example.com\nexport JNCEP_PASSWORD=\"foo%bar666!\"\n```\n\nThen, the same command as above can be simply launched as follows:\n\n```console\njncep epub https://j-novel.club/c/tearmoon-empire-volume-1-part-1\n```\n\nIn order to make them more readable, all the examples in the rest of this documentation will assume that the env vars are set.\n\n## epub\n\nThe `epub` command is used for simple EPUB generation, based on a URL link to a part or volume or series on the J-Novel Club website.\n\n### Options\n\nTo get some help about the arguments to the `epub` command, just launch with the --help option:\n\n```console\n~$ jncep epub --help\nUsage: jncep epub [OPTIONS] JNOVEL_CLUB_URL\n\n  Generate EPUB files for J-Novel Club pre-pub novels\n\nOptions:\n  -l, --email TEXT        Login email for J-Novel Club account  [required]\n  -p, --password TEXT     Login password for J-Novel Club account  [required]\n  -o, --output DIRECTORY  Existing folder to write the output [default: The\n                          current directory]\n  -s, --parts TEXT        Specification of a range of parts to download in the\n                          form of <vol>[.part]:<vol>[.part] [default: All the\n                          content linked by the JNOVEL_CLUB_URL argument,\n                          either a single part, a whole volume or the whole\n                          series]\n  -a, --absolute          Flag to indicate that the --parts option specifies\n                          part numbers globally, instead of relative to a\n                          volume i.e. <part>:<part>\n  -v, --byvolume          Flag to indicate that the parts of different volumes\n                          shoud be output in separate EPUBs\n  -i, --images            Flag to indicate that the images of the novel should\n                          be extracted into the output folder\n  -n, --no-replace        Flag to indicate that some unicode characters\n                          unlikely to be in an EPUB reader font should NOT be\n                          replaced and instead kept as is\n  --help                  Show this message and exit.\n```\n\n### Examples\n\n#### Basic usage\n\nThe following command will create a single EPUB file of part 1 of Volume 1 of the 'Tearmoon Empire' novel in the specified `.../jncbooks` directory:\n\n```console\njncep epub -o /Users/guilhem/Documents/jncbooks https://j-novel.club/c/tearmoon-empire-volume-1-part-1\n```\n\nAccount credentials must be passed (in this case, by using the env vars, as explained above), as well as a URL link to a part or volume or series on the J-Novel Club website. Whatever the URL links to is downloaded (single part or whole volume or whole series).\n\nThe tool will then communicate with the J-Novel Club API using the specified credentials and download the necessary parts (texts and images), as well as a book cover. The EPUB file will be created inside the specified (optional) output directory, `/Users/guilhem/Documents/jncbooks`, which must exist (not created by the tool). If the `--output` switch is not present, the EPUB is output in the current directory.\n\n#### Range of parts\n\nThe following command will create a single EPUB file with Parts 5 to 10 of Volume 1 of the 'Tearmoon Empire' novel (as long as the pre-pubs have not expired) in the current directory:\n\n```console\njncep epub --parts 1.5:1.10 https://j-novel.club/c/tearmoon-empire-volume-1-part-1\n```\n\nCompared to the previous example, a range of parts / volumes has been specified, in which case the URL is simply used to indicate the series (even if it is a link to just a part or volume of a series).\n\nThe specified range is in the shape of `<volume>[.part]:<volume>[.part]`. The specific part numbers are optional and are relative to the volume. If the part number is not specified, it is equivalent to `<volume>.1` if on the left and, if on the right, until the last part of the volume.\n\nAny of the 2 sides of the `:` range separator is optional, like `<volume>[.part]:`, which means 'every part starting with the specified part until the last in the series', or even `:`, which means 'every part in the series'.\n\nIf the flag `--absolute` is passed, the range must be of the form `<part>:<part>` where each part number refers to the part number from the beginning of the series i.e. if the first volume in the series has 11 parts, then `12` is the same as `2.1` without the `--absolute` flag.\n\nMoreover, the `:` itself is also optional: It is possible to specify just `<volume>[.part]` (or `<part>` with the `--absolute` flag), in which case it is not interpreted as a range. If only the volume is specified (e.g. `2`), then all the parts of the volume will be downloaded and if there is also a part (e.g. `2.1`), only that part will be downloaded.\n\n### Rare Unicode characters\n\nOriginally, the tool copied into the EPUB the text obtained from J-Novel Club as is, simply adding a bit of styling through an external CSS. Depending on the font used by the ePub reader, some rare Unicode characters did not display. I noticed it in a series where the string used as the scene separator is [\u2671](https://emojipedia.org/emoji/%E2%99%B1/) (East Syriac Cross): My Kobo eBook reader would not show it with any of the fonts present on the device. Using [Crimson Text](https://www.typewolf.com/site-of-the-day/fonts/crimson-text), the font used by J-Novel Club for its web reader, gave the same result. It turns out it was only rendered in the web reader by a fallback font, which on my Mac is Menlo (a monospace font by Apple). This issue also happened with the Calibre EPUB reader. However, the iBooks reader app on macOS displayed the character.\n\nTo solve this issue (without having to mess with fonts), by default, this specific character is now replaced with \"\\*\\*\". This behaviour can be overridden with the `-n` switch. Both the characters to replace and the replacement string are hardcoded. If another character is unable to display properly, [an issue can be filed](https://github.com/gvellut/jncep/issues) and it will be processed by the tool in a later version.\n\n## track\n\nThis command is used to tell the tool that it should track updates for a series. A flag `--rm` can be used to untrack a series. In both cases, a URL link to a part or volume or series on the J-Novel Club website must be passed and is used to specify the series.\n\n### Tracking configuration\n\nThe tracking is performed by updating the local config file `<home>/.jncep/tracked.json` (where `<home>` is either `/Users/<user>` on macOS, `C:\\Users\\<user>` on Windows or `/home/<user>` on Linux). That file will be created by the tool if it doesn't exist.\n\nThe `tracked.json` file can be updated manually with a text editor if needed. It is a JSON dictionary with keys the canonical URLs of the series and values another dictionary with keys \"name\" and \"part\". The value for \"part\" is a string in relative format (\"<volume>.<part>\").\n\n### Options\n\nTo get some help about the arguments to the `track` command, just launch with the --help option:\n\n```console\n~$ jncep track --help\nUsage: jncep track [OPTIONS] (JNOVEL_CLUB_URL?)\n\n  Track updates to a series\n\nOptions:\n  -l, --email TEXT     Login email for J-Novel Club account  [required]\n  -p, --password TEXT  Login password for J-Novel Club account  [required]\n  --rm                 Flag to indicate that the series identified by the\n                       JNOVEL_CLUB_URL argument should be untracked\n  --help               Show this message and exit.\n```\n\n### Examples\n\n#### Tracking\n\nThe following command will set up tracking for the \"Tearmoon Empire\" series:\n\n```console\njncep track https://j-novel.club/c/tearmoon-empire-volume-1-part-1\n```\n\nCurrently the last part is Volume 1 Part 14, so an entry \"tearmoon-empire\" with volume 14 will be added to the `tracked.json` file.\n\n#### Untracking\n\nThe following command will disable tracking for the \"Tearmoon Empire\" series, using the `--rm` flag:\n\n```console\njncep track --rm https://j-novel.club/c/tearmoon-empire-volume-1-part-14\n```\n\nNote that the URL is different from the first example: It doesn't matter since it resolves to the same series.\n\n#### List tracked series\n\nWithout any argument the command will list the tracked series:\n\n```console\njncep track\n```\n\nThis will display something like:\n\n```console\n2 series are tracked:\n'Kobold King' (https://j-novel.club/s/kobold-king): 2.2\n'The Tales of Marielle Clarac' (https://j-novel.club/s/the-tales-of-marielle-clarac): 1.4\n```\n\n## update\n\nThis command is used to generate EPUB files for newly updated series that were previously added using the `track` command. Optionally, a URL link to a part or volume or series on the J-Novel Club website can be passed, in order to only update that series.\n\n### Options\n\nTo get some help about the arguments to the `update` command, just launch with the --help option:\n\n```console\n~$ jncep update --help\nUsage: jncep update [OPTIONS] (JNOVEL_CLUB_URL?)\n\n  Generate EPUB files for new parts of all tracked series (or specific\n  series if a URL argument is passed)\n\nOptions:\n  -l, --email TEXT        Login email for J-Novel Club account  [required]\n  -p, --password TEXT     Login password for J-Novel Club account  [required]\n  -o, --output DIRECTORY  Existing folder to write the output [default: The\n                          current directory]\n  -v, --byvolume          Flag to indicate that the parts of different volumes\n                          shoud be output in separate EPUBs\n  -i, --images            Flag to indicate that the images of the novel should\n                          be extracted into the output folder\n  -n, --no-replace        Flag to indicate that some unicode characters\n                          unlikely to be in an EPUB reader font should NOT be\n                          replaced and instead kept as is\n  --help                  Show this message and exit.\n```\n\nMost of the arguments to the `epub` command are also found here.\n\n### Example\n\nThe following command will update all the series:\n\n```console\njncep update\n```\n\nDepending on which series were configured, something like the following should be displayed on the last line:\n\n```console\n2 series sucessfully updated!\n```\n\nOr if no tracked series has seen any updates:\n\n```console\nAll series are already up to date!\n```\n\n### Automation\n\nThe `update` command can be called in the background from launchd (on macOS) or a scheduled task (on Windows) or cron (on Linux) in order to regularly download new content if available and create EPUBs (for example, once a day). \n\nThere is no notification built in the `jncep update` command but the text output can be combined with other tools to make something suitable. For example, on __macOS__:\n\n```console\njncep update | tail -n 1 | sed -En '/^[[:digit:]]+ series/p' | (grep -q ^ && osascript -e 'display notification \"New J-Novel Club EPUBs available!\" with title \"JNCEP\" sound name \"Glass\"')\n```\n\nIf there are updates, the last line output by `jncep update` is something like `2 series sucessfully updated!`, in which case some AppleScript sends a notification message with a sound. It pops up and is kept in the macOS Notification Center.\n\n# Issues\n\nReport issues at https://github.com/gvellut/jncep/issues\n\n# TODO (maybe)\n\n- self-contained executable for macOS and Windows with PyInstaller\n- config file for account\n- async IO for faster downloads\n- replace prints with logging\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gvellut/jncep", "keywords": "epub jnc jnovel", "license": "", "maintainer": "", "maintainer_email": "", "name": "jncep", "package_url": "https://pypi.org/project/jncep/", "platform": "", "project_url": "https://pypi.org/project/jncep/", "project_urls": {"Bug Reports": "https://github.com/gvellut/jncep/issues", "Homepage": "https://github.com/gvellut/jncep", "Source": "https://github.com/gvellut/jncep"}, "release_url": "https://pypi.org/project/jncep/0.12/", "requires_dist": ["requests (==2.22.0)", "requests-toolbelt (==0.9.1)", "ebooklib (==0.17.1)", "addict (==2.2.1)", "attrs (==19.3.0)", "click (==7.0)", "colorama (==0.4.3)", "termcolor (==1.1.0)", "atomicwrites (==1.3.0)", "black ; extra == 'dev'", "flake8 ; extra == 'dev'", "twine ; extra == 'dev'"], "requires_python": "", "summary": "Simple command-line tool to generate EPUB files for J-Novel Club pre-pub novels", "version": "0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>jncep</h1>\n<p>Simple command-line tool to generate EPUB files for <a href=\"https://j-novel.club/\" rel=\"nofollow\">J-Novel Club</a> pre-pub novels</p>\n<h1>Install</h1>\n<p>The tool requires Python 3.6+.</p>\n<p>To install, launch :</p>\n<pre><span class=\"go\">pip install jncep</span>\n</pre>\n<p>The command above will install the <code>jncep</code> Python library and its dependencies. The library includes a command-line script, also named <code>jncep</code>, whose functionality is described below.</p>\n<h1>Limitations</h1>\n<p>This tool only works with J-Novel Club <strong>novels</strong>, not manga.</p>\n<h1>Usage</h1>\n<p>The <code>jncep</code> tool must be launched on the command-line. It has 3 commands:</p>\n<ul>\n<li><code>epub</code>: To simply generate an EPUB file</li>\n<li><code>track</code>: To tell the tool that a series is of interest</li>\n<li><code>update</code>: To generate EPUB files for newly updated series of interest</li>\n</ul>\n<h2>J-Novel Club account credentials</h2>\n<p>All the commands need some user credentials (email and password) in order to communicate with the J-Novel Club API. They are the same values as the ones used to log in to the J-Novel Club website with a browser.</p>\n<p>Those credentials can be passed directly on the command line using the <code>--email</code> and <code>--password</code> arguments to the <strong>command</strong> (not the <code>jncep</code> tool directly). For example, using the <code>epub</code> command:</p>\n<pre><span class=\"go\">jncep epub --email user@example.com --password \"foo%bar666!\" https://j-novel.club/c/tearmoon-empire-volume-1-part-1</span>\n</pre>\n<p>Optionally, the JNCEP_EMAIL and JNCEP_PASSWORD env vars can be set instead of passing the <code>--email</code> and <code>--password</code> arguments when launching the commands. For example, if they are set in the .bashrc in the following way:</p>\n<pre><span class=\"go\">export JNCEP_EMAIL=user@example.com</span>\n<span class=\"go\">export JNCEP_PASSWORD=\"foo%bar666!\"</span>\n</pre>\n<p>Then, the same command as above can be simply launched as follows:</p>\n<pre><span class=\"go\">jncep epub https://j-novel.club/c/tearmoon-empire-volume-1-part-1</span>\n</pre>\n<p>In order to make them more readable, all the examples in the rest of this documentation will assume that the env vars are set.</p>\n<h2>epub</h2>\n<p>The <code>epub</code> command is used for simple EPUB generation, based on a URL link to a part or volume or series on the J-Novel Club website.</p>\n<h3>Options</h3>\n<p>To get some help about the arguments to the <code>epub</code> command, just launch with the --help option:</p>\n<pre><span class=\"go\">~$ jncep epub --help</span>\n<span class=\"go\">Usage: jncep epub [OPTIONS] JNOVEL_CLUB_URL</span>\n\n<span class=\"go\">  Generate EPUB files for J-Novel Club pre-pub novels</span>\n\n<span class=\"go\">Options:</span>\n<span class=\"go\">  -l, --email TEXT        Login email for J-Novel Club account  [required]</span>\n<span class=\"go\">  -p, --password TEXT     Login password for J-Novel Club account  [required]</span>\n<span class=\"go\">  -o, --output DIRECTORY  Existing folder to write the output [default: The</span>\n<span class=\"go\">                          current directory]</span>\n<span class=\"go\">  -s, --parts TEXT        Specification of a range of parts to download in the</span>\n<span class=\"go\">                          form of &lt;vol&gt;[.part]:&lt;vol&gt;[.part] [default: All the</span>\n<span class=\"go\">                          content linked by the JNOVEL_CLUB_URL argument,</span>\n<span class=\"go\">                          either a single part, a whole volume or the whole</span>\n<span class=\"go\">                          series]</span>\n<span class=\"go\">  -a, --absolute          Flag to indicate that the --parts option specifies</span>\n<span class=\"go\">                          part numbers globally, instead of relative to a</span>\n<span class=\"go\">                          volume i.e. &lt;part&gt;:&lt;part&gt;</span>\n<span class=\"go\">  -v, --byvolume          Flag to indicate that the parts of different volumes</span>\n<span class=\"go\">                          shoud be output in separate EPUBs</span>\n<span class=\"go\">  -i, --images            Flag to indicate that the images of the novel should</span>\n<span class=\"go\">                          be extracted into the output folder</span>\n<span class=\"go\">  -n, --no-replace        Flag to indicate that some unicode characters</span>\n<span class=\"go\">                          unlikely to be in an EPUB reader font should NOT be</span>\n<span class=\"go\">                          replaced and instead kept as is</span>\n<span class=\"go\">  --help                  Show this message and exit.</span>\n</pre>\n<h3>Examples</h3>\n<h4>Basic usage</h4>\n<p>The following command will create a single EPUB file of part 1 of Volume 1 of the 'Tearmoon Empire' novel in the specified <code>.../jncbooks</code> directory:</p>\n<pre><span class=\"go\">jncep epub -o /Users/guilhem/Documents/jncbooks https://j-novel.club/c/tearmoon-empire-volume-1-part-1</span>\n</pre>\n<p>Account credentials must be passed (in this case, by using the env vars, as explained above), as well as a URL link to a part or volume or series on the J-Novel Club website. Whatever the URL links to is downloaded (single part or whole volume or whole series).</p>\n<p>The tool will then communicate with the J-Novel Club API using the specified credentials and download the necessary parts (texts and images), as well as a book cover. The EPUB file will be created inside the specified (optional) output directory, <code>/Users/guilhem/Documents/jncbooks</code>, which must exist (not created by the tool). If the <code>--output</code> switch is not present, the EPUB is output in the current directory.</p>\n<h4>Range of parts</h4>\n<p>The following command will create a single EPUB file with Parts 5 to 10 of Volume 1 of the 'Tearmoon Empire' novel (as long as the pre-pubs have not expired) in the current directory:</p>\n<pre><span class=\"go\">jncep epub --parts 1.5:1.10 https://j-novel.club/c/tearmoon-empire-volume-1-part-1</span>\n</pre>\n<p>Compared to the previous example, a range of parts / volumes has been specified, in which case the URL is simply used to indicate the series (even if it is a link to just a part or volume of a series).</p>\n<p>The specified range is in the shape of <code>&lt;volume&gt;[.part]:&lt;volume&gt;[.part]</code>. The specific part numbers are optional and are relative to the volume. If the part number is not specified, it is equivalent to <code>&lt;volume&gt;.1</code> if on the left and, if on the right, until the last part of the volume.</p>\n<p>Any of the 2 sides of the <code>:</code> range separator is optional, like <code>&lt;volume&gt;[.part]:</code>, which means 'every part starting with the specified part until the last in the series', or even <code>:</code>, which means 'every part in the series'.</p>\n<p>If the flag <code>--absolute</code> is passed, the range must be of the form <code>&lt;part&gt;:&lt;part&gt;</code> where each part number refers to the part number from the beginning of the series i.e. if the first volume in the series has 11 parts, then <code>12</code> is the same as <code>2.1</code> without the <code>--absolute</code> flag.</p>\n<p>Moreover, the <code>:</code> itself is also optional: It is possible to specify just <code>&lt;volume&gt;[.part]</code> (or <code>&lt;part&gt;</code> with the <code>--absolute</code> flag), in which case it is not interpreted as a range. If only the volume is specified (e.g. <code>2</code>), then all the parts of the volume will be downloaded and if there is also a part (e.g. <code>2.1</code>), only that part will be downloaded.</p>\n<h3>Rare Unicode characters</h3>\n<p>Originally, the tool copied into the EPUB the text obtained from J-Novel Club as is, simply adding a bit of styling through an external CSS. Depending on the font used by the ePub reader, some rare Unicode characters did not display. I noticed it in a series where the string used as the scene separator is <a href=\"https://emojipedia.org/emoji/%E2%99%B1/\" rel=\"nofollow\">\u2671</a> (East Syriac Cross): My Kobo eBook reader would not show it with any of the fonts present on the device. Using <a href=\"https://www.typewolf.com/site-of-the-day/fonts/crimson-text\" rel=\"nofollow\">Crimson Text</a>, the font used by J-Novel Club for its web reader, gave the same result. It turns out it was only rendered in the web reader by a fallback font, which on my Mac is Menlo (a monospace font by Apple). This issue also happened with the Calibre EPUB reader. However, the iBooks reader app on macOS displayed the character.</p>\n<p>To solve this issue (without having to mess with fonts), by default, this specific character is now replaced with \"**\". This behaviour can be overridden with the <code>-n</code> switch. Both the characters to replace and the replacement string are hardcoded. If another character is unable to display properly, <a href=\"https://github.com/gvellut/jncep/issues\" rel=\"nofollow\">an issue can be filed</a> and it will be processed by the tool in a later version.</p>\n<h2>track</h2>\n<p>This command is used to tell the tool that it should track updates for a series. A flag <code>--rm</code> can be used to untrack a series. In both cases, a URL link to a part or volume or series on the J-Novel Club website must be passed and is used to specify the series.</p>\n<h3>Tracking configuration</h3>\n<p>The tracking is performed by updating the local config file <code>&lt;home&gt;/.jncep/tracked.json</code> (where <code>&lt;home&gt;</code> is either <code>/Users/&lt;user&gt;</code> on macOS, <code>C:\\Users\\&lt;user&gt;</code> on Windows or <code>/home/&lt;user&gt;</code> on Linux). That file will be created by the tool if it doesn't exist.</p>\n<p>The <code>tracked.json</code> file can be updated manually with a text editor if needed. It is a JSON dictionary with keys the canonical URLs of the series and values another dictionary with keys \"name\" and \"part\". The value for \"part\" is a string in relative format (\"&lt;volume&gt;.&lt;part&gt;\").</p>\n<h3>Options</h3>\n<p>To get some help about the arguments to the <code>track</code> command, just launch with the --help option:</p>\n<pre><span class=\"go\">~$ jncep track --help</span>\n<span class=\"go\">Usage: jncep track [OPTIONS] (JNOVEL_CLUB_URL?)</span>\n\n<span class=\"go\">  Track updates to a series</span>\n\n<span class=\"go\">Options:</span>\n<span class=\"go\">  -l, --email TEXT     Login email for J-Novel Club account  [required]</span>\n<span class=\"go\">  -p, --password TEXT  Login password for J-Novel Club account  [required]</span>\n<span class=\"go\">  --rm                 Flag to indicate that the series identified by the</span>\n<span class=\"go\">                       JNOVEL_CLUB_URL argument should be untracked</span>\n<span class=\"go\">  --help               Show this message and exit.</span>\n</pre>\n<h3>Examples</h3>\n<h4>Tracking</h4>\n<p>The following command will set up tracking for the \"Tearmoon Empire\" series:</p>\n<pre><span class=\"go\">jncep track https://j-novel.club/c/tearmoon-empire-volume-1-part-1</span>\n</pre>\n<p>Currently the last part is Volume 1 Part 14, so an entry \"tearmoon-empire\" with volume 14 will be added to the <code>tracked.json</code> file.</p>\n<h4>Untracking</h4>\n<p>The following command will disable tracking for the \"Tearmoon Empire\" series, using the <code>--rm</code> flag:</p>\n<pre><span class=\"go\">jncep track --rm https://j-novel.club/c/tearmoon-empire-volume-1-part-14</span>\n</pre>\n<p>Note that the URL is different from the first example: It doesn't matter since it resolves to the same series.</p>\n<h4>List tracked series</h4>\n<p>Without any argument the command will list the tracked series:</p>\n<pre><span class=\"go\">jncep track</span>\n</pre>\n<p>This will display something like:</p>\n<pre><span class=\"go\">2 series are tracked:</span>\n<span class=\"go\">'Kobold King' (https://j-novel.club/s/kobold-king): 2.2</span>\n<span class=\"go\">'The Tales of Marielle Clarac' (https://j-novel.club/s/the-tales-of-marielle-clarac): 1.4</span>\n</pre>\n<h2>update</h2>\n<p>This command is used to generate EPUB files for newly updated series that were previously added using the <code>track</code> command. Optionally, a URL link to a part or volume or series on the J-Novel Club website can be passed, in order to only update that series.</p>\n<h3>Options</h3>\n<p>To get some help about the arguments to the <code>update</code> command, just launch with the --help option:</p>\n<pre><span class=\"go\">~$ jncep update --help</span>\n<span class=\"go\">Usage: jncep update [OPTIONS] (JNOVEL_CLUB_URL?)</span>\n\n<span class=\"go\">  Generate EPUB files for new parts of all tracked series (or specific</span>\n<span class=\"go\">  series if a URL argument is passed)</span>\n\n<span class=\"go\">Options:</span>\n<span class=\"go\">  -l, --email TEXT        Login email for J-Novel Club account  [required]</span>\n<span class=\"go\">  -p, --password TEXT     Login password for J-Novel Club account  [required]</span>\n<span class=\"go\">  -o, --output DIRECTORY  Existing folder to write the output [default: The</span>\n<span class=\"go\">                          current directory]</span>\n<span class=\"go\">  -v, --byvolume          Flag to indicate that the parts of different volumes</span>\n<span class=\"go\">                          shoud be output in separate EPUBs</span>\n<span class=\"go\">  -i, --images            Flag to indicate that the images of the novel should</span>\n<span class=\"go\">                          be extracted into the output folder</span>\n<span class=\"go\">  -n, --no-replace        Flag to indicate that some unicode characters</span>\n<span class=\"go\">                          unlikely to be in an EPUB reader font should NOT be</span>\n<span class=\"go\">                          replaced and instead kept as is</span>\n<span class=\"go\">  --help                  Show this message and exit.</span>\n</pre>\n<p>Most of the arguments to the <code>epub</code> command are also found here.</p>\n<h3>Example</h3>\n<p>The following command will update all the series:</p>\n<pre><span class=\"go\">jncep update</span>\n</pre>\n<p>Depending on which series were configured, something like the following should be displayed on the last line:</p>\n<pre><span class=\"go\">2 series sucessfully updated!</span>\n</pre>\n<p>Or if no tracked series has seen any updates:</p>\n<pre><span class=\"go\">All series are already up to date!</span>\n</pre>\n<h3>Automation</h3>\n<p>The <code>update</code> command can be called in the background from launchd (on macOS) or a scheduled task (on Windows) or cron (on Linux) in order to regularly download new content if available and create EPUBs (for example, once a day).</p>\n<p>There is no notification built in the <code>jncep update</code> command but the text output can be combined with other tools to make something suitable. For example, on <strong>macOS</strong>:</p>\n<pre><span class=\"go\">jncep update | tail -n 1 | sed -En '/^[[:digit:]]+ series/p' | (grep -q ^ &amp;&amp; osascript -e 'display notification \"New J-Novel Club EPUBs available!\" with title \"JNCEP\" sound name \"Glass\"')</span>\n</pre>\n<p>If there are updates, the last line output by <code>jncep update</code> is something like <code>2 series sucessfully updated!</code>, in which case some AppleScript sends a notification message with a sound. It pops up and is kept in the macOS Notification Center.</p>\n<h1>Issues</h1>\n<p>Report issues at <a href=\"https://github.com/gvellut/jncep/issues\" rel=\"nofollow\">https://github.com/gvellut/jncep/issues</a></p>\n<h1>TODO (maybe)</h1>\n<ul>\n<li>self-contained executable for macOS and Windows with PyInstaller</li>\n<li>config file for account</li>\n<li>async IO for faster downloads</li>\n<li>replace prints with logging</li>\n</ul>\n\n          </div>"}, "last_serial": 7004474, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "3acfea60aee11ca94e773b1fce3e5f18", "sha256": "8b7bece22d66407929cff8c9b07566770bc0a732ff39218b3d251b51057a8e8a"}, "downloads": -1, "filename": "jncep-0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "3acfea60aee11ca94e773b1fce3e5f18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19516, "upload_time": "2020-03-04T13:40:58", "upload_time_iso_8601": "2020-03-04T13:40:58.099914Z", "url": "https://files.pythonhosted.org/packages/3e/2a/8d1a6e212525f0958b48dfb2171106c2941752d77f228c95fa4394408768/jncep-0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "868b38515887519f28014d862ddaf0e1", "sha256": "e4d965e646666dc804f427cdcdba84aaad1de6cbcf135909458152e11b741814"}, "downloads": -1, "filename": "jncep-0.10.tar.gz", "has_sig": false, "md5_digest": "868b38515887519f28014d862ddaf0e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18965, "upload_time": "2020-03-04T13:41:00", "upload_time_iso_8601": "2020-03-04T13:41:00.161580Z", "url": "https://files.pythonhosted.org/packages/f4/79/695e48db1c15255da1afbd4eb377f3561f6f2113260d82f1297ad78fb876/jncep-0.10.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "4e343de1133b45b20aa8b57e693fc52f", "sha256": "036897f5385500f400d74b6235977525975fc5f7ca01b7e9b19a2b6cc0ce7841"}, "downloads": -1, "filename": "jncep-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "4e343de1133b45b20aa8b57e693fc52f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20178, "upload_time": "2020-03-12T22:11:36", "upload_time_iso_8601": "2020-03-12T22:11:36.212667Z", "url": "https://files.pythonhosted.org/packages/5a/c5/a15d197a98354ab91958a1293f5a7bbd9d19e8c77fa71ea9a8a1b786004c/jncep-0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8eb4cae518b4943ce0552ff6f767326b", "sha256": "79b4ab4ae1da813296b50f87da87654163a78a5c0ebb14f3ea3686ff5fe9a0a8"}, "downloads": -1, "filename": "jncep-0.11.tar.gz", "has_sig": false, "md5_digest": "8eb4cae518b4943ce0552ff6f767326b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19816, "upload_time": "2020-03-12T22:11:37", "upload_time_iso_8601": "2020-03-12T22:11:37.557900Z", "url": "https://files.pythonhosted.org/packages/ab/dd/3e2fd15ad5612b1ff96dc5f2ff4dd2a45ea6f3ecfd9a3049304b6fd3ab83/jncep-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "8805ec4d33906977da73018e7f9c545f", "sha256": "18c905b7db5a2c3e9a2ae72a0298cbdceb8f2dc86a76a0a110871b5ef7f29e7d"}, "downloads": -1, "filename": "jncep-0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "8805ec4d33906977da73018e7f9c545f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28652, "upload_time": "2020-04-12T13:27:57", "upload_time_iso_8601": "2020-04-12T13:27:57.721511Z", "url": "https://files.pythonhosted.org/packages/3e/0c/74d847136d55c3f82562d68a840f50abae16ecb1d4888c3622a0bd1dbeb2/jncep-0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e7c1f68cf72f9b442a173fb8d38c92e", "sha256": "60a4959e5b616a62a99705a0108dcef84b00625f39a3f0d73e996ed9c2fa8dc6"}, "downloads": -1, "filename": "jncep-0.12.tar.gz", "has_sig": false, "md5_digest": "9e7c1f68cf72f9b442a173fb8d38c92e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20264, "upload_time": "2020-04-12T13:27:59", "upload_time_iso_8601": "2020-04-12T13:27:59.230925Z", "url": "https://files.pythonhosted.org/packages/a2/0f/df8b90d98d67e892cd11ee9fa821c3f66e262c7b2191b5549f1b0ebffdc5/jncep-0.12.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6752292d9e56802a4359df30530f99b6", "sha256": "2a497c29eb3251ff7357b996d1dda2b0c9c649266a3302b7e4b358f1def61b25"}, "downloads": -1, "filename": "jncep-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6752292d9e56802a4359df30530f99b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12902, "upload_time": "2020-01-26T19:40:40", "upload_time_iso_8601": "2020-01-26T19:40:40.706852Z", "url": "https://files.pythonhosted.org/packages/65/ea/a7857f110109ffae7e3f0c3a5a6d7ba2bc2d39af98c63984812569f18424/jncep-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cffb290da7020c2d2616851c126dff01", "sha256": "93e20c198cf0718a6edea476a52e3dc2afe128bcf0b4e4568082a212f03570b0"}, "downloads": -1, "filename": "jncep-0.2.tar.gz", "has_sig": false, "md5_digest": "cffb290da7020c2d2616851c126dff01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9964, "upload_time": "2020-01-26T19:40:43", "upload_time_iso_8601": "2020-01-26T19:40:43.141940Z", "url": "https://files.pythonhosted.org/packages/b3/5f/b10a25d081bbe31c5a1e2b8b34592c441676ca1100cbeffa3bb1eb380df2/jncep-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "50a177ebd381bb3ab065a5f4a324bd0d", "sha256": "6316e109e42933cc7d7586c5c663114995d3630dcfa9a3b86c8538e16b2af80f"}, "downloads": -1, "filename": "jncep-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "50a177ebd381bb3ab065a5f4a324bd0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12902, "upload_time": "2020-01-26T21:12:55", "upload_time_iso_8601": "2020-01-26T21:12:55.598850Z", "url": "https://files.pythonhosted.org/packages/f9/7c/46c210c2aac9527bfd0ff485e21c6a610c45ec45587698cf0a3ce326e922/jncep-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f722d1ff6b72279d39881b5164ae59fb", "sha256": "170b187bcc2c3696a2fabb704ed6046df0f011cc1897cac38bf46bf69cfe60a6"}, "downloads": -1, "filename": "jncep-0.3.tar.gz", "has_sig": false, "md5_digest": "f722d1ff6b72279d39881b5164ae59fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9975, "upload_time": "2020-01-26T21:12:58", "upload_time_iso_8601": "2020-01-26T21:12:58.291164Z", "url": "https://files.pythonhosted.org/packages/5c/71/c7d12ec17c19fd876211cecdb94b51ea087547363c7226e71d8b222f7450/jncep-0.3.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "05462cb38b38198124d59ec02c0b6e4f", "sha256": "f55f25cfbf811de3fb7262d3679774c275e7843901250466636d6dda5ca1a956"}, "downloads": -1, "filename": "jncep-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "05462cb38b38198124d59ec02c0b6e4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17374, "upload_time": "2020-02-01T23:17:23", "upload_time_iso_8601": "2020-02-01T23:17:23.463787Z", "url": "https://files.pythonhosted.org/packages/35/39/636fd5a6e0603a23abfcce24c98f61fe09c93d384edbd8f3884624704089/jncep-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d33c62112d7df4d1bceeffb4dccb2524", "sha256": "aaf234f195292432cd64c109c2e46081822d3253fb40974312a86683c91bafa0"}, "downloads": -1, "filename": "jncep-0.5.tar.gz", "has_sig": false, "md5_digest": "d33c62112d7df4d1bceeffb4dccb2524", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15823, "upload_time": "2020-02-01T23:17:27", "upload_time_iso_8601": "2020-02-01T23:17:27.230592Z", "url": "https://files.pythonhosted.org/packages/b5/71/1fd13d0080541bf0f8d162f948b61b897f080514d2eb4ce858ed13e18a4b/jncep-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "4e680239c9402a81f614f53ae70267a9", "sha256": "917d6afe829ab3e276b040356dbef084d0d3148896ee35f329b223b1c0364b56"}, "downloads": -1, "filename": "jncep-0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4e680239c9402a81f614f53ae70267a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18605, "upload_time": "2020-02-12T08:57:45", "upload_time_iso_8601": "2020-02-12T08:57:45.195590Z", "url": "https://files.pythonhosted.org/packages/d3/c4/ad64b2175a89fcfc4cad3010c31eec8de9bf6cad73557968d09187c7c3d1/jncep-0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c217913e52556306cc3ee87a7f3b3e03", "sha256": "dc20e022e8e061765b04dbc0e4f77062b09b2a5d4ad1ef58a334310cd94d5c4b"}, "downloads": -1, "filename": "jncep-0.6.tar.gz", "has_sig": false, "md5_digest": "c217913e52556306cc3ee87a7f3b3e03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17727, "upload_time": "2020-02-12T08:57:47", "upload_time_iso_8601": "2020-02-12T08:57:47.392047Z", "url": "https://files.pythonhosted.org/packages/e2/43/4cbe4de7d60dffd1f5bcf28338de46316910efae70ac85b99ef253f9adb1/jncep-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "10245cae9d0f8ca6abfa810a10f2dce6", "sha256": "7fa8b46383338935d20faa0c0acd59c15247feb4c789dd07679d52e575c142d5"}, "downloads": -1, "filename": "jncep-0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "10245cae9d0f8ca6abfa810a10f2dce6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18650, "upload_time": "2020-02-12T16:26:26", "upload_time_iso_8601": "2020-02-12T16:26:26.650587Z", "url": "https://files.pythonhosted.org/packages/19/02/40c847e9f30e9f1a32604df8d6c76f01dbf8705edd88296f539111e4d6c6/jncep-0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "758dc581e17157e58146a407c7dc2ff6", "sha256": "334fd43884d0191122bea035b5b66e27be2330ad6c9c4cd5a802b07b62f9d6d6"}, "downloads": -1, "filename": "jncep-0.7.tar.gz", "has_sig": false, "md5_digest": "758dc581e17157e58146a407c7dc2ff6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17771, "upload_time": "2020-02-12T16:26:28", "upload_time_iso_8601": "2020-02-12T16:26:28.170429Z", "url": "https://files.pythonhosted.org/packages/21/13/e5b91866d12a7e05c003908c85e9f4b10c0629cd5e0ed7ddb43b92b21c75/jncep-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "422d56acf3950f87c954b52b04cef400", "sha256": "1ae84767e484f955ce052f426016770b0c7ed75622acc570fd05e6bc1c146c3f"}, "downloads": -1, "filename": "jncep-0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "422d56acf3950f87c954b52b04cef400", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19013, "upload_time": "2020-02-25T22:59:56", "upload_time_iso_8601": "2020-02-25T22:59:56.320607Z", "url": "https://files.pythonhosted.org/packages/bb/05/d32e6018c180a0f7487f6ce2d4c31bda90b36de41e90fb15098ccb6d8119/jncep-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d57404eb7d061b4c8420baa98e7ff3f", "sha256": "f704d14a2fa837d16855bacc02a8aa09c5c5e5b8edb35e295d3bb3ab17e9f31e"}, "downloads": -1, "filename": "jncep-0.8.tar.gz", "has_sig": false, "md5_digest": "5d57404eb7d061b4c8420baa98e7ff3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18155, "upload_time": "2020-02-25T22:59:57", "upload_time_iso_8601": "2020-02-25T22:59:57.975045Z", "url": "https://files.pythonhosted.org/packages/29/bb/165cfd3f0c746a4aada2521670bdb426bc30df9a3a329c71885ff97c15f3/jncep-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "6be42bf3103f9bcab637ebeba5702bb7", "sha256": "714e43576dcd0504351e607665b84d85d2af68f287f688ef9c22b5c086e6ae52"}, "downloads": -1, "filename": "jncep-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "6be42bf3103f9bcab637ebeba5702bb7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19009, "upload_time": "2020-02-25T23:02:42", "upload_time_iso_8601": "2020-02-25T23:02:42.121079Z", "url": "https://files.pythonhosted.org/packages/47/33/bb35e9565c15376de13fa678339c99f21748890b9f116b4916baad37a5fb/jncep-0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c5c68ce5762391b352aaaf2595fb103", "sha256": "bf487264ce21a23ed4b8da7e8331dbe13a4d2dc3d34e583fe7ee2fda3e326955"}, "downloads": -1, "filename": "jncep-0.9.tar.gz", "has_sig": false, "md5_digest": "5c5c68ce5762391b352aaaf2595fb103", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18144, "upload_time": "2020-02-25T23:02:44", "upload_time_iso_8601": "2020-02-25T23:02:44.104561Z", "url": "https://files.pythonhosted.org/packages/19/1c/105969dfc7d20b0e5c65fe587065aa27f496c70dc331cd1cc06045b2edf5/jncep-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8805ec4d33906977da73018e7f9c545f", "sha256": "18c905b7db5a2c3e9a2ae72a0298cbdceb8f2dc86a76a0a110871b5ef7f29e7d"}, "downloads": -1, "filename": "jncep-0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "8805ec4d33906977da73018e7f9c545f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28652, "upload_time": "2020-04-12T13:27:57", "upload_time_iso_8601": "2020-04-12T13:27:57.721511Z", "url": "https://files.pythonhosted.org/packages/3e/0c/74d847136d55c3f82562d68a840f50abae16ecb1d4888c3622a0bd1dbeb2/jncep-0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e7c1f68cf72f9b442a173fb8d38c92e", "sha256": "60a4959e5b616a62a99705a0108dcef84b00625f39a3f0d73e996ed9c2fa8dc6"}, "downloads": -1, "filename": "jncep-0.12.tar.gz", "has_sig": false, "md5_digest": "9e7c1f68cf72f9b442a173fb8d38c92e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20264, "upload_time": "2020-04-12T13:27:59", "upload_time_iso_8601": "2020-04-12T13:27:59.230925Z", "url": "https://files.pythonhosted.org/packages/a2/0f/df8b90d98d67e892cd11ee9fa821c3f66e262c7b2191b5549f1b0ebffdc5/jncep-0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:21 2020"}