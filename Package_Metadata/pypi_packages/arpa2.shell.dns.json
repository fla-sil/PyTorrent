{"info": {"author": "Rick van Rein (for the ARPA2 Shell project)", "author_email": "rick@openfortress.nl", "bugtrack_url": null, "classifiers": [], "description": "# ARPA2 Shell to edit Resource Records in DNS\n\n> *This shell manages a master DNS node.  We generally send\n> the same DNS commands to multiple masters and let them work\n> in parallel, with the exception of key management operations\n> which must be co-ordinated so the signers produce exchangeable\n> signatures.*\n\nThis shell assumes that Knot DNS is running.\nIf this is true you can start the DNS shell, either from an\noperating system prompt or from the meta-shell `arpa2shell` with\nthe command\n\n```\narpa2dns\n```\n\nIn the DNS shell, you can do things like (more to come)\n\n```\nzone add orvelte.nep ns1.orvelte.nep. admin.orvelte.nep.\ndane config pkix-end pubkey sha512\ndane add orvelte.nep _tcp 443 web 666999aaabbbcccdddeeefff\nacme add orvelte.nep www 1122334455\nzone del orvelte.nep\nexit\n```\n\nIf you hadn't deleted the zone, you could have queried it\nwith commands like\n\n```\nkdig @localhost _443._tcp.web.orvelte.nep tlsa\nkdig @localhost _acme-challenge.www.orvelte.nep txt\n```\n\nBut alas, you had to go and delete that zone.  That ought\nto teach you, following up orders without thinking about\ntheir consequences ;-)\n\n**ENUM support.**\nThere is some special support for ENUM.  Any place that\nreceive a zone can also process +ddddd form numbers,\nwhich will be mapped to the ENUM form d.d.d.d.d.e164.arpa\nbefore working with it:\n\n```\nzone add +12345 ns1.example.com admin@example.com\nenum add +12345          1 E2U+xmpp     xmpp:1\\\\1@jabber.nep\nenum add +12345 wildcard 1 E2U+xmpp xmpp:1\\\\1+\\\\2@jabber.nep\nenum del +12345          1 E2U+xmpp     xmpp:1\\\\1@jabber.nep\nenum del +12345 wildcard 1 E2U+xmpp xmpp:1\\\\1+\\\\2@jabber.nep\nzone del +12345\n```\n\nThe form without `wildcard` simply adds an NAPTR to reference\nthe service field and URI for the indicated number; the form\nwith `wildcard` adds an NAPTR for all numbers with additional\ndigits, like `+123456789`.  The `\\\\1` variable expands to\nthe matched domain minus the skip (here set to 1) and the\n`\\\\2` variable expands to the wildcarded part.\n\nOn an operating system's commandline could query for\n\n```\nkdig @localhost         5.4.3.2.1.e164.arpa naptr\nkdig @localhost 9.8.7.6.5.4.3.2.1.e164.arpa naptr\n```\n\n\n## Learning about DNS Cache Timing\n\nWhen publishing security-bound information, such as the\nrecords `DNSKEY`, `DS`, `TLSA`, `SSHFP` it can be important\nto not make such claims too early or too late.  Having to\nfigure out how long to wait can be rather tedious, but a\ngeneral structure might be\n[min(DNS) and max(DNS)](https://github.com/arpa2/DNS-mixer/blob/master/doc/min-max-DNS.MD)\nas we intend to build it into the anticipated\n[DNS mixer](https://github.com/arpa2/DNS-mixer/blob/master/doc/dns-mixer-from-partial-masters.md)\ncomponent.\n\nUntil we have a DNS mixer, we can at least satisfy ourselves\nby returning cache delays from knowledge central, which is\nthe DNS shell.  So, even simple update returns cache delay\ntimes:\n\n```\nshell$ docker run -it demo-dns\n# /etc/init.d/knot start\n# arpa2dns\narpa2dns> ?\narpa2dns> ?record\narpa2dns> record add orvelte.nep www 7200 AAAA 2001:db8:1::80\nCache-Update-Delay: 3600\narpa2dns> record add orvelte.nep www 7200 AAAA 2001:db8:2::80\nCache-Update-Delay: 7200\narpa2dns> quit\n# kdig +short @::1 www.orvelte.nep aaaa\n2001:db8:1::80\n2001:db8:2::80\n# exit\nshell$ \n```\n\nNote the two responses, and how they are different.  The\nfirst record is a freshly added `AAAA` record that will\ntake the negative caching time to come through.  This is\nthe lowest of the SOA minimum and the SOA TTL, in this\ncase 3600 seconds from now.  The second addition is made\nto an existing record that has a cache time of 7200, and\nsince that may already be loaded somewhere it may take\nthat long for the second record added to come through.\n(I am aware that the shell could try to combine these,\nand we probably will, at some point.)\n\nFor security-related operations, this is a great asset.\nWhen you post something that ends up as a security\ninstruction, you always risk breaking things if the\ninstruction is expected but not yet found.  The same\nholds when you remove things.  In those cases, it is\nreally helpful to have a timer for the records added\nor removed, to know when they are globally available,\nor globally retracted.  This facility takes away a\nlot of complexity related to caching in DNS.\n\n\n## Current and Future Work\n\nThis DNS demonstration takes in zone changes and publishes\nthem with DNSSEC signatures on everything.  For now, there\nis one master.  Future versions will also support multiple\nmasters that sign independently, with only the DNSSEC keys\nas shared state.  Yes, DNSSEC can do that :-)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arpa2/arpa2shell/tree/master/src/arpa2dns", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "arpa2.shell.dns", "package_url": "https://pypi.org/project/arpa2.shell.dns/", "platform": "", "project_url": "https://pypi.org/project/arpa2.shell.dns/", "project_urls": {"Homepage": "https://github.com/arpa2/arpa2shell/tree/master/src/arpa2dns"}, "release_url": "https://pypi.org/project/arpa2.shell.dns/0.0.3/", "requires_dist": ["arpa2.shell", "libknot"], "requires_python": "", "summary": "The ARPA2 Shell for DNS", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ARPA2 Shell to edit Resource Records in DNS</h1>\n<blockquote>\n<p><em>This shell manages a master DNS node.  We generally send\nthe same DNS commands to multiple masters and let them work\nin parallel, with the exception of key management operations\nwhich must be co-ordinated so the signers produce exchangeable\nsignatures.</em></p>\n</blockquote>\n<p>This shell assumes that Knot DNS is running.\nIf this is true you can start the DNS shell, either from an\noperating system prompt or from the meta-shell <code>arpa2shell</code> with\nthe command</p>\n<pre><code>arpa2dns\n</code></pre>\n<p>In the DNS shell, you can do things like (more to come)</p>\n<pre><code>zone add orvelte.nep ns1.orvelte.nep. admin.orvelte.nep.\ndane config pkix-end pubkey sha512\ndane add orvelte.nep _tcp 443 web 666999aaabbbcccdddeeefff\nacme add orvelte.nep www 1122334455\nzone del orvelte.nep\nexit\n</code></pre>\n<p>If you hadn't deleted the zone, you could have queried it\nwith commands like</p>\n<pre><code>kdig @localhost _443._tcp.web.orvelte.nep tlsa\nkdig @localhost _acme-challenge.www.orvelte.nep txt\n</code></pre>\n<p>But alas, you had to go and delete that zone.  That ought\nto teach you, following up orders without thinking about\ntheir consequences ;-)</p>\n<p><strong>ENUM support.</strong>\nThere is some special support for ENUM.  Any place that\nreceive a zone can also process +ddddd form numbers,\nwhich will be mapped to the ENUM form d.d.d.d.d.e164.arpa\nbefore working with it:</p>\n<pre><code>zone add +12345 ns1.example.com admin@example.com\nenum add +12345          1 E2U+xmpp     xmpp:1\\\\1@jabber.nep\nenum add +12345 wildcard 1 E2U+xmpp xmpp:1\\\\1+\\\\2@jabber.nep\nenum del +12345          1 E2U+xmpp     xmpp:1\\\\1@jabber.nep\nenum del +12345 wildcard 1 E2U+xmpp xmpp:1\\\\1+\\\\2@jabber.nep\nzone del +12345\n</code></pre>\n<p>The form without <code>wildcard</code> simply adds an NAPTR to reference\nthe service field and URI for the indicated number; the form\nwith <code>wildcard</code> adds an NAPTR for all numbers with additional\ndigits, like <code>+123456789</code>.  The <code>\\\\1</code> variable expands to\nthe matched domain minus the skip (here set to 1) and the\n<code>\\\\2</code> variable expands to the wildcarded part.</p>\n<p>On an operating system's commandline could query for</p>\n<pre><code>kdig @localhost         5.4.3.2.1.e164.arpa naptr\nkdig @localhost 9.8.7.6.5.4.3.2.1.e164.arpa naptr\n</code></pre>\n<h2>Learning about DNS Cache Timing</h2>\n<p>When publishing security-bound information, such as the\nrecords <code>DNSKEY</code>, <code>DS</code>, <code>TLSA</code>, <code>SSHFP</code> it can be important\nto not make such claims too early or too late.  Having to\nfigure out how long to wait can be rather tedious, but a\ngeneral structure might be\n<a href=\"https://github.com/arpa2/DNS-mixer/blob/master/doc/min-max-DNS.MD\" rel=\"nofollow\">min(DNS) and max(DNS)</a>\nas we intend to build it into the anticipated\n<a href=\"https://github.com/arpa2/DNS-mixer/blob/master/doc/dns-mixer-from-partial-masters.md\" rel=\"nofollow\">DNS mixer</a>\ncomponent.</p>\n<p>Until we have a DNS mixer, we can at least satisfy ourselves\nby returning cache delays from knowledge central, which is\nthe DNS shell.  So, even simple update returns cache delay\ntimes:</p>\n<pre><code>shell$ docker run -it demo-dns\n# /etc/init.d/knot start\n# arpa2dns\narpa2dns&gt; ?\narpa2dns&gt; ?record\narpa2dns&gt; record add orvelte.nep www 7200 AAAA 2001:db8:1::80\nCache-Update-Delay: 3600\narpa2dns&gt; record add orvelte.nep www 7200 AAAA 2001:db8:2::80\nCache-Update-Delay: 7200\narpa2dns&gt; quit\n# kdig +short @::1 www.orvelte.nep aaaa\n2001:db8:1::80\n2001:db8:2::80\n# exit\nshell$ \n</code></pre>\n<p>Note the two responses, and how they are different.  The\nfirst record is a freshly added <code>AAAA</code> record that will\ntake the negative caching time to come through.  This is\nthe lowest of the SOA minimum and the SOA TTL, in this\ncase 3600 seconds from now.  The second addition is made\nto an existing record that has a cache time of 7200, and\nsince that may already be loaded somewhere it may take\nthat long for the second record added to come through.\n(I am aware that the shell could try to combine these,\nand we probably will, at some point.)</p>\n<p>For security-related operations, this is a great asset.\nWhen you post something that ends up as a security\ninstruction, you always risk breaking things if the\ninstruction is expected but not yet found.  The same\nholds when you remove things.  In those cases, it is\nreally helpful to have a timer for the records added\nor removed, to know when they are globally available,\nor globally retracted.  This facility takes away a\nlot of complexity related to caching in DNS.</p>\n<h2>Current and Future Work</h2>\n<p>This DNS demonstration takes in zone changes and publishes\nthem with DNSSEC signatures on everything.  For now, there\nis one master.  Future versions will also support multiple\nmasters that sign independently, with only the DNSSEC keys\nas shared state.  Yes, DNSSEC can do that :-)</p>\n\n          </div>"}, "last_serial": 6630624, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "990f68160a82e1f2d79967467d0219c6", "sha256": "2761cd6dd4d6aece41c78955cbf2ef3cc96dc37bd694deaa435b5465ee2e4f59"}, "downloads": -1, "filename": "arpa2.shell.dns-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "990f68160a82e1f2d79967467d0219c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47020, "upload_time": "2020-02-14T12:42:45", "upload_time_iso_8601": "2020-02-14T12:42:45.860580Z", "url": "https://files.pythonhosted.org/packages/8b/3b/6a04713363718587242078c5aba78795563231e3ebdd5a9e96a7529e1499/arpa2.shell.dns-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afc88242c78328cc777fd1d1cc32db61", "sha256": "8a156c73803a936c4e78632702c1f4f9347f11b99bdb18e4548d877da8b36958"}, "downloads": -1, "filename": "arpa2.shell.dns-0.0.3.tar.gz", "has_sig": false, "md5_digest": "afc88242c78328cc777fd1d1cc32db61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4094, "upload_time": "2020-02-14T12:42:53", "upload_time_iso_8601": "2020-02-14T12:42:53.634257Z", "url": "https://files.pythonhosted.org/packages/e1/93/b6c9c6e5b39c3d1683747301713143ebfa90a8343e2acf7f2cb71d871b37/arpa2.shell.dns-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "990f68160a82e1f2d79967467d0219c6", "sha256": "2761cd6dd4d6aece41c78955cbf2ef3cc96dc37bd694deaa435b5465ee2e4f59"}, "downloads": -1, "filename": "arpa2.shell.dns-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "990f68160a82e1f2d79967467d0219c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47020, "upload_time": "2020-02-14T12:42:45", "upload_time_iso_8601": "2020-02-14T12:42:45.860580Z", "url": "https://files.pythonhosted.org/packages/8b/3b/6a04713363718587242078c5aba78795563231e3ebdd5a9e96a7529e1499/arpa2.shell.dns-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afc88242c78328cc777fd1d1cc32db61", "sha256": "8a156c73803a936c4e78632702c1f4f9347f11b99bdb18e4548d877da8b36958"}, "downloads": -1, "filename": "arpa2.shell.dns-0.0.3.tar.gz", "has_sig": false, "md5_digest": "afc88242c78328cc777fd1d1cc32db61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4094, "upload_time": "2020-02-14T12:42:53", "upload_time_iso_8601": "2020-02-14T12:42:53.634257Z", "url": "https://files.pythonhosted.org/packages/e1/93/b6c9c6e5b39c3d1683747301713143ebfa90a8343e2acf7f2cb71d871b37/arpa2.shell.dns-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:11 2020"}