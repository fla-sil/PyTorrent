{"info": {"author": "Tr-Jono", "author_email": "omgthisissouseless@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Games/Entertainment"], "description": "# clashroyaleapi v0.2.1\n\nA sync __Python 3.6+__ wrapper for [RoyaleAPI](https://royaleapi.com/). (WIP)\n\nThis wrapper's code style is inspired by\n[python-telegram-bot](https://github.com/python-telegram-bot/python-telegram-bot),\n[Telethon](https://github.com/LonamiWebs/Telethon)\nand [Jeff](https://github.com/jeffffc)'s [crpy](https://test.pypi.org/project/crpy/).\nThis wrapper attempts to provide an alternative which uses dataclasses to the existing Python wrappers for RoyaleAPI.\n\nYou are recommended to read [RoyaleAPI's documentation](https://docs.royaleapi.com) before using this wrapper\nas the documentation for this wrapper is to be written. You may also reference the\n[short examples](https://github.com/Tr-Jono/clashroyaleapi#short-examples-of-using-the-wrapper) below.\n\n_This content is not affiliated with, endorsed, sponsored,\nor specifically approved by Supercell and Supercell is not responsible for it.\nFor more information see [Supercell\u2019s Fan Content Policy](http://supercell.com/en/fan-content-policy/)._\n\n## Installation\nThis project is on [PyPI](https://pypi.org/project/clashroyaleapi/).\n```\npip install clashroyaleapi\n```\n\n## Obtaining Developer Key\nFollow [these instructions](https://docs.royaleapi.com/#/authentication?id=generating-new-keys)\nto obtain your developer key.\n\n## Currently Supported Methods\nMethods with an alias indicate that multiple tags can be passed to them.\n```python\nclient.get_player()          # alias: client.get_players()\nclient.get_player_chests()   # alias: client.get_players_chests()\nclient.get_player_battles()  # alias: client.get_players_battles()\nclient.get_clan()            # alias: client.get_clans()\nclient.get_clan_battles()\nclient.get_clan_war()\nclient.get_clan_war_log()\nclient.get_clan_tracking()   # alias: client.get_clans_tracking()\nclient.track_clan()          # alias: client.track_clans()\nclient.search_clans()\nclient.get_tournament()      # alias: client.get_tournaments()\nclient.get_known_tournaments()\nclient.search_tournaments()\nclient.get_top_players()\nclient.get_top_clans()\nclient.get_top_war_clans()\nclient.get_version()\nclient.get_health()\nclient.get_status()\nclient.get_endpoints()\n```\nLists, tuples, dicts, sets and generators can be used when passing arguments to methods accepting multiple tags.\nAll of the following method calls are valid and return the same result.\n```python\np = [tag1, tag2, tag3]\n\nclient.get_players(p)\nclient.get_players(*p)\nclient.get_players(tuple(p))\nclient.get_players(set(p))\nclient.get_players(dict.fromkeys(p))\nclient.get_players(tag for tag in p)   # If you want to do this somehow\n```\n\n## Short examples of using the wrapper\nPlayer/Clan/Tournament tags will be \"corrected\" and validated before requesting the API.\n### Example 1: `with` statement\n```python\nimport royaleapi\n\nwith royaleapi.RoyaleAPIClient(\"YOUR_DEVELOPER_KEY\") as client:\n    p = client.get_player(\"2RQJ0OYYC\", timeout=100)\n    print(p.name, p.stats.favorite_card.name, p.deck[0].name, sep=\", \")\n    c1, c2 = client.get_clans(\"c9c8pcp\", \"#8LYRRV2\")\n    print(c1.badge == c2.badge, c1.location == c2.location, sep=\", \")\n    print([(c.name, c.members[0].name, c.members[0].trophies) for c in (c1, c2)])\n\n# My results:\n# Trainer Jono, Golem, The Log\n# False, True\n# [('\u65b0\u9999\u6e2f\u90e8\u843d123', '\u82b1\u679c\u5c71\u5289\u5fb7\u83ef', 5073), ('\u9999\u6e2f\u90e8\u843d\u00b7\u4e8c\u90e8', 'Gnuelnam', 4479)]\n```\n(2nd clan does not exist anymore, you will get an error trying this.)\n\n### Example 2: Using cached data\n```python\nimport time\nfrom royaleapi import RoyaleAPIClient\n\nclient = RoyaleAPIClient(\"YOUR_DEVELOPER_KEY\", use_cache=True)\nplayer_tag = \"9YJ2RR8G\"\nt1 = time.time()\np1 = client.get_player(player_tag)\nt2 = time.time()\np2 = client.get_player(player_tag)\nt3 = time.time()\np3 = client.get_player(player_tag, use_cache=False)\nt4 = time.time()\nprint(t2 - t1, t3 - t2, t4 - t3, p1 == p2 == p3, sep=\", \")\n\n# My results\n# 2.3867766857147217, 0.28074216842651367, 1.4506447315216064, True\n\n# The first call takes the longest time since the data is not cached locally or on RoyaleAPI's server.\n# The second call takes the shortest time since the data is cached locally.\n# The third call takes less time than the first call since the data is cached on RoyaleAPI's server.\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Tr-Jono/clashroyaleapi", "keywords": "clash royale cr crapi royaleapi", "license": "GNU General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "clashroyaleapi", "package_url": "https://pypi.org/project/clashroyaleapi/", "platform": "", "project_url": "https://pypi.org/project/clashroyaleapi/", "project_urls": {"Homepage": "https://github.com/Tr-Jono/clashroyaleapi"}, "release_url": "https://pypi.org/project/clashroyaleapi/0.2.1/", "requires_dist": ["requests", "dataclasses ; python_version < \"3.7\""], "requires_python": "", "summary": "A sync Python 3.6+ wrapper for RoyaleAPI.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>clashroyaleapi v0.2.1</h1>\n<p>A sync <strong>Python 3.6+</strong> wrapper for <a href=\"https://royaleapi.com/\" rel=\"nofollow\">RoyaleAPI</a>. (WIP)</p>\n<p>This wrapper's code style is inspired by\n<a href=\"https://github.com/python-telegram-bot/python-telegram-bot\" rel=\"nofollow\">python-telegram-bot</a>,\n<a href=\"https://github.com/LonamiWebs/Telethon\" rel=\"nofollow\">Telethon</a>\nand <a href=\"https://github.com/jeffffc\" rel=\"nofollow\">Jeff</a>'s <a href=\"https://test.pypi.org/project/crpy/\" rel=\"nofollow\">crpy</a>.\nThis wrapper attempts to provide an alternative which uses dataclasses to the existing Python wrappers for RoyaleAPI.</p>\n<p>You are recommended to read <a href=\"https://docs.royaleapi.com\" rel=\"nofollow\">RoyaleAPI's documentation</a> before using this wrapper\nas the documentation for this wrapper is to be written. You may also reference the\n<a href=\"https://github.com/Tr-Jono/clashroyaleapi#short-examples-of-using-the-wrapper\" rel=\"nofollow\">short examples</a> below.</p>\n<p><em>This content is not affiliated with, endorsed, sponsored,\nor specifically approved by Supercell and Supercell is not responsible for it.\nFor more information see <a href=\"http://supercell.com/en/fan-content-policy/\" rel=\"nofollow\">Supercell\u2019s Fan Content Policy</a>.</em></p>\n<h2>Installation</h2>\n<p>This project is on <a href=\"https://pypi.org/project/clashroyaleapi/\" rel=\"nofollow\">PyPI</a>.</p>\n<pre><code>pip install clashroyaleapi\n</code></pre>\n<h2>Obtaining Developer Key</h2>\n<p>Follow <a href=\"https://docs.royaleapi.com/#/authentication?id=generating-new-keys\" rel=\"nofollow\">these instructions</a>\nto obtain your developer key.</p>\n<h2>Currently Supported Methods</h2>\n<p>Methods with an alias indicate that multiple tags can be passed to them.</p>\n<pre><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_player</span><span class=\"p\">()</span>          <span class=\"c1\"># alias: client.get_players()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_player_chests</span><span class=\"p\">()</span>   <span class=\"c1\"># alias: client.get_players_chests()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_player_battles</span><span class=\"p\">()</span>  <span class=\"c1\"># alias: client.get_players_battles()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_clan</span><span class=\"p\">()</span>            <span class=\"c1\"># alias: client.get_clans()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_clan_battles</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_clan_war</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_clan_war_log</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_clan_tracking</span><span class=\"p\">()</span>   <span class=\"c1\"># alias: client.get_clans_tracking()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">track_clan</span><span class=\"p\">()</span>          <span class=\"c1\"># alias: client.track_clans()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">search_clans</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_tournament</span><span class=\"p\">()</span>      <span class=\"c1\"># alias: client.get_tournaments()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_known_tournaments</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">search_tournaments</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_top_players</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_top_clans</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_top_war_clans</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_version</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_health</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_status</span><span class=\"p\">()</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_endpoints</span><span class=\"p\">()</span>\n</pre>\n<p>Lists, tuples, dicts, sets and generators can be used when passing arguments to methods accepting multiple tags.\nAll of the following method calls are valid and return the same result.</p>\n<pre><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">tag1</span><span class=\"p\">,</span> <span class=\"n\">tag2</span><span class=\"p\">,</span> <span class=\"n\">tag3</span><span class=\"p\">]</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_players</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_players</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">p</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_players</span><span class=\"p\">(</span><span class=\"nb\">tuple</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">))</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_players</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">))</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_players</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"o\">.</span><span class=\"n\">fromkeys</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">))</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_players</span><span class=\"p\">(</span><span class=\"n\">tag</span> <span class=\"k\">for</span> <span class=\"n\">tag</span> <span class=\"ow\">in</span> <span class=\"n\">p</span><span class=\"p\">)</span>   <span class=\"c1\"># If you want to do this somehow</span>\n</pre>\n<h2>Short examples of using the wrapper</h2>\n<p>Player/Clan/Tournament tags will be \"corrected\" and validated before requesting the API.</p>\n<h3>Example 1: <code>with</code> statement</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">royaleapi</span>\n\n<span class=\"k\">with</span> <span class=\"n\">royaleapi</span><span class=\"o\">.</span><span class=\"n\">RoyaleAPIClient</span><span class=\"p\">(</span><span class=\"s2\">\"YOUR_DEVELOPER_KEY\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_player</span><span class=\"p\">(</span><span class=\"s2\">\"2RQJ0OYYC\"</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">favorite_card</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">deck</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s2\">\", \"</span><span class=\"p\">)</span>\n    <span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_clans</span><span class=\"p\">(</span><span class=\"s2\">\"c9c8pcp\"</span><span class=\"p\">,</span> <span class=\"s2\">\"#8LYRRV2\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"o\">.</span><span class=\"n\">badge</span> <span class=\"o\">==</span> <span class=\"n\">c2</span><span class=\"o\">.</span><span class=\"n\">badge</span><span class=\"p\">,</span> <span class=\"n\">c1</span><span class=\"o\">.</span><span class=\"n\">location</span> <span class=\"o\">==</span> <span class=\"n\">c2</span><span class=\"o\">.</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s2\">\", \"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">([(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">members</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">members</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">trophies</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">c2</span><span class=\"p\">)])</span>\n\n<span class=\"c1\"># My results:</span>\n<span class=\"c1\"># Trainer Jono, Golem, The Log</span>\n<span class=\"c1\"># False, True</span>\n<span class=\"c1\"># [('\u65b0\u9999\u6e2f\u90e8\u843d123', '\u82b1\u679c\u5c71\u5289\u5fb7\u83ef', 5073), ('\u9999\u6e2f\u90e8\u843d\u00b7\u4e8c\u90e8', 'Gnuelnam', 4479)]</span>\n</pre>\n<p>(2nd clan does not exist anymore, you will get an error trying this.)</p>\n<h3>Example 2: Using cached data</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">royaleapi</span> <span class=\"kn\">import</span> <span class=\"n\">RoyaleAPIClient</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">RoyaleAPIClient</span><span class=\"p\">(</span><span class=\"s2\">\"YOUR_DEVELOPER_KEY\"</span><span class=\"p\">,</span> <span class=\"n\">use_cache</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">player_tag</span> <span class=\"o\">=</span> <span class=\"s2\">\"9YJ2RR8G\"</span>\n<span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"n\">p1</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_player</span><span class=\"p\">(</span><span class=\"n\">player_tag</span><span class=\"p\">)</span>\n<span class=\"n\">t2</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"n\">p2</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_player</span><span class=\"p\">(</span><span class=\"n\">player_tag</span><span class=\"p\">)</span>\n<span class=\"n\">t3</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"n\">p3</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_player</span><span class=\"p\">(</span><span class=\"n\">player_tag</span><span class=\"p\">,</span> <span class=\"n\">use_cache</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">t4</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t2</span> <span class=\"o\">-</span> <span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">t3</span> <span class=\"o\">-</span> <span class=\"n\">t2</span><span class=\"p\">,</span> <span class=\"n\">t4</span> <span class=\"o\">-</span> <span class=\"n\">t3</span><span class=\"p\">,</span> <span class=\"n\">p1</span> <span class=\"o\">==</span> <span class=\"n\">p2</span> <span class=\"o\">==</span> <span class=\"n\">p3</span><span class=\"p\">,</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s2\">\", \"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># My results</span>\n<span class=\"c1\"># 2.3867766857147217, 0.28074216842651367, 1.4506447315216064, True</span>\n\n<span class=\"c1\"># The first call takes the longest time since the data is not cached locally or on RoyaleAPI's server.</span>\n<span class=\"c1\"># The second call takes the shortest time since the data is cached locally.</span>\n<span class=\"c1\"># The third call takes less time than the first call since the data is cached on RoyaleAPI's server.</span>\n</pre>\n\n          </div>"}, "last_serial": 4656805, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6bfa96380a753056382cdddecb830719", "sha256": "40dc52680ca672e2422a39f7cde6a7e300deed3b322fdee3a2405a8b56b9d24c"}, "downloads": -1, "filename": "clashroyaleapi-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6bfa96380a753056382cdddecb830719", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13507, "upload_time": "2018-06-27T12:29:19", "upload_time_iso_8601": "2018-06-27T12:29:19.783399Z", "url": "https://files.pythonhosted.org/packages/87/40/9805c9e566ce718aa7524f5c369769b78cfada6adc859946ae6731e1a250/clashroyaleapi-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f6a5a47c671b6315f024d040a8b61de", "sha256": "8005262f474abbc9e283f4775a916a949d80b8606dfc89fc5dbd34737b07204e"}, "downloads": -1, "filename": "clashroyaleapi-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2f6a5a47c671b6315f024d040a8b61de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21059, "upload_time": "2018-06-27T12:29:20", "upload_time_iso_8601": "2018-06-27T12:29:20.989187Z", "url": "https://files.pythonhosted.org/packages/ce/e3/bcbe6323839d82620b3cd8a8a3842fe6e9fc994a2ce2bf960d0cd2b7e5f3/clashroyaleapi-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "eeb129cd569b489171d0aa2c4ca22a89", "sha256": "8ba963cb23ce946efaa136ce1538a6315fdd15e3504b1d3fd1cfaca21de1b688"}, "downloads": -1, "filename": "clashroyaleapi-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "eeb129cd569b489171d0aa2c4ca22a89", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25003, "upload_time": "2018-08-17T09:51:20", "upload_time_iso_8601": "2018-08-17T09:51:20.039159Z", "url": "https://files.pythonhosted.org/packages/bf/b9/1451de80472cfaac9e18301afa37713f0d843c3034a534db6119f3a0a238/clashroyaleapi-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ce4ca7ce4139500df60b8beb1c41b25", "sha256": "dab450c3472056b8c79b58d5b1bc3190176d1629b25f55d31e03721d997142f7"}, "downloads": -1, "filename": "clashroyaleapi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8ce4ca7ce4139500df60b8beb1c41b25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22157, "upload_time": "2018-08-17T09:51:21", "upload_time_iso_8601": "2018-08-17T09:51:21.240142Z", "url": "https://files.pythonhosted.org/packages/18/73/e24db09ebf11dc4f521445ee227d2a3f88d494de672a5d3d0581019f8d61/clashroyaleapi-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "db5cfceb563a4df214031e625c50f9f4", "sha256": "dd15597713f315d2583c10953a11df761fd3867a3d063d76ae5e5d1ee987c27d"}, "downloads": -1, "filename": "clashroyaleapi-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "db5cfceb563a4df214031e625c50f9f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44440, "upload_time": "2018-12-24T16:54:59", "upload_time_iso_8601": "2018-12-24T16:54:59.461109Z", "url": "https://files.pythonhosted.org/packages/22/78/63150eb8d776087d117b51ee444cdf59fe3da230e6319d87c7ff8e41fedf/clashroyaleapi-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c33e88cdb03d69fbbc1c47a234fd254", "sha256": "4e0253cc6769bc2d2dafaeb7c10f90a0754167991185ee92110f912220ca53f4"}, "downloads": -1, "filename": "clashroyaleapi-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4c33e88cdb03d69fbbc1c47a234fd254", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26719, "upload_time": "2018-12-24T16:55:01", "upload_time_iso_8601": "2018-12-24T16:55:01.484765Z", "url": "https://files.pythonhosted.org/packages/76/d4/fcc6a11571c4cbc79048d24e69fd999caa17808be2b1481af4657ef77023/clashroyaleapi-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "38030fea6d13b4cdb78a1d00d15afca9", "sha256": "e30f737b99af831733398c2a7c88d2cd2e77bb3e0ed293e8b9842b81c74ad1eb"}, "downloads": -1, "filename": "clashroyaleapi-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38030fea6d13b4cdb78a1d00d15afca9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44614, "upload_time": "2019-01-03T15:35:43", "upload_time_iso_8601": "2019-01-03T15:35:43.438786Z", "url": "https://files.pythonhosted.org/packages/e8/35/2aaeb960a133c76a9df2ddd3487461a4a9b8376b1410d0c06970c79a0093/clashroyaleapi-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "915a636146f2ce20d506a7852b4b640f", "sha256": "b519d6d809650ba527ddbca0f73e3406240f2fd4a973fe3e888575bc68eed668"}, "downloads": -1, "filename": "clashroyaleapi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "915a636146f2ce20d506a7852b4b640f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26734, "upload_time": "2019-01-03T15:35:45", "upload_time_iso_8601": "2019-01-03T15:35:45.063722Z", "url": "https://files.pythonhosted.org/packages/50/26/f41cca1590df8b4fca7b0d32f2956115bf3b3534436f4c91f353d8c625c8/clashroyaleapi-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38030fea6d13b4cdb78a1d00d15afca9", "sha256": "e30f737b99af831733398c2a7c88d2cd2e77bb3e0ed293e8b9842b81c74ad1eb"}, "downloads": -1, "filename": "clashroyaleapi-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38030fea6d13b4cdb78a1d00d15afca9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44614, "upload_time": "2019-01-03T15:35:43", "upload_time_iso_8601": "2019-01-03T15:35:43.438786Z", "url": "https://files.pythonhosted.org/packages/e8/35/2aaeb960a133c76a9df2ddd3487461a4a9b8376b1410d0c06970c79a0093/clashroyaleapi-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "915a636146f2ce20d506a7852b4b640f", "sha256": "b519d6d809650ba527ddbca0f73e3406240f2fd4a973fe3e888575bc68eed668"}, "downloads": -1, "filename": "clashroyaleapi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "915a636146f2ce20d506a7852b4b640f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26734, "upload_time": "2019-01-03T15:35:45", "upload_time_iso_8601": "2019-01-03T15:35:45.063722Z", "url": "https://files.pythonhosted.org/packages/50/26/f41cca1590df8b4fca7b0d32f2956115bf3b3534436f4c91f353d8c625c8/clashroyaleapi-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:09 2020"}