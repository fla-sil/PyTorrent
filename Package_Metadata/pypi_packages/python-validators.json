{"info": {"author": "Adib Mohsin", "author_email": "adibmohsin.root@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Python Validatord [![forthebadge](https://forthebadge.com/images/badges/made-with-python.svg)](https://forthebadge.com)[![forthebadge](https://forthebadge.com/images/badges/makes-people-smile.svg)](https://forthebadge.com)\n\n![PyPI](https://img.shields.io/pypi/v/nine.svg)\n![license](https://img.shields.io/github/license/mashape/apistatus.svg)\n![PyPI - Wheel](https://img.shields.io/pypi/wheel/Django.svg)\n\n\n\nA python validators module that makes validation easy with functions like <code>mail()</code> . Please note that this module is still\nunder active development and it is dependency free .\n\n## Table of contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Example](#example)\n\n# Installation\n\nIn order to install it you can use pip the defualt Python Package Installer . It's easy , on windows open cmd as adminsistrator and type\n```bash\npip install pyvalidator\n```\n\nFor linux systems\n```bash\nsudo pip3 install pyvalidator\n```\n\n# Usage\nUsing pyvalidator is easy . Here are some examples with the pyvalidator functions ...\n```python\nimport pyvalidator\nprint(pyvalidator.email('email@email.com'))\nprint(pyvalidator.ipv4('255.255.255.0'))\nprint(pyvalidator.url(\"https://www.google.com\"))\nprint(pyvalidator.equals('testish', 'testish'))\nprint(pyvalidator.islower('test'))\nprint(pyvalidator.number('1'))\nprint(pyvalidator.md5('8b1a9953c4611296a827abf8c47804d7'))\n```\n\n### email(str) -> Checks if given parameter is a string\n```python\nimport pyvalidator\nprint(pyvalidator.email('adiba@a.com'))\n```\n\n### currency(str) -> Checks if given parameter is a currency type\n```python\nimport pyvalidator\nprint(pyvalidator.currency('$4.4'))\n```\n\n### equals(str1, str2) -> Checks if given parameters are same\n```python\nimport pyvalidator\nprint(pyvalidator.equals('testish', 'testish'))\n```\n\n### ipv4(ip) -> Checks if given parameter is a valid ipv4 / IP address\n```python\nimport pyvalidator\nprint(pyvalidator.ipv4('255.255.255.0'))\n```\n\n### url(str) -> Checks if given parameter is an url\n```python\nimport pyvalidator\nprint(pyvalidator.url(\"https://www.google.com\"))\n```\n\n### lower(str) -> Checks if given parameter is a lower cased string\n```python\nimport pyvalidator\nprint(pyvalidator.islower('test'))\n```\n\n### md5(str) -> Checks if given parameter is a md5 hash\n```python\nimport pyvalidator\nprint(pyvalidator.md5('8b1a9953c4611296a827abf8c47804d7'))\n```\n\n### number(str / int) -> Checks if given parameter is a number\n```python\nimport pyvalidator\nprint(pyvalidator.number('1'))\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pacifio/validators", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "python-validators", "package_url": "https://pypi.org/project/python-validators/", "platform": "", "project_url": "https://pypi.org/project/python-validators/", "project_urls": {"Homepage": "https://github.com/pacifio/validators"}, "release_url": "https://pypi.org/project/python-validators/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A python utility that can validate strings and so much . Still under active development", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Validatord <a href=\"https://forthebadge.com\" rel=\"nofollow\"><img alt=\"forthebadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7cefdfa620eb623843291a3c32383f169b6a60e0/68747470733a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f6d6164652d776974682d707974686f6e2e737667\"></a><a href=\"https://forthebadge.com\" rel=\"nofollow\"><img alt=\"forthebadge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a49e8a1a6e6f81ce368635d2595bd47b8a3f0259/68747470733a2f2f666f7274686562616467652e636f6d2f696d616765732f6261646765732f6d616b65732d70656f706c652d736d696c652e737667\"></a></h1>\n<p><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f29022db0ad0a3f5fa52f522194565aafce70e73/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e696e652e737667\">\n<img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36686084675cebbeff3809cb9d8291b8e6ebd672/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667\">\n<img alt=\"PyPI - Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77092aba8e4b8c9d36078651f46411d44319671f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f446a616e676f2e737667\"></p>\n<p>A python validators module that makes validation easy with functions like <code>mail()</code> . Please note that this module is still\nunder active development and it is dependency free .</p>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#example\" rel=\"nofollow\">Example</a></li>\n</ul>\n<h1>Installation</h1>\n<p>In order to install it you can use pip the defualt Python Package Installer . It's easy , on windows open cmd as adminsistrator and type</p>\n<pre>pip install pyvalidator\n</pre>\n<p>For linux systems</p>\n<pre>sudo pip3 install pyvalidator\n</pre>\n<h1>Usage</h1>\n<p>Using pyvalidator is easy . Here are some examples with the pyvalidator functions ...</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">(</span><span class=\"s1\">'email@email.com'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">ipv4</span><span class=\"p\">(</span><span class=\"s1\">'255.255.255.0'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.google.com\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">equals</span><span class=\"p\">(</span><span class=\"s1\">'testish'</span><span class=\"p\">,</span> <span class=\"s1\">'testish'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">islower</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">(</span><span class=\"s1\">'1'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">md5</span><span class=\"p\">(</span><span class=\"s1\">'8b1a9953c4611296a827abf8c47804d7'</span><span class=\"p\">))</span>\n</pre>\n<h3>email(str) -&gt; Checks if given parameter is a string</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">(</span><span class=\"s1\">'adiba@a.com'</span><span class=\"p\">))</span>\n</pre>\n<h3>currency(str) -&gt; Checks if given parameter is a currency type</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">currency</span><span class=\"p\">(</span><span class=\"s1\">'$4.4'</span><span class=\"p\">))</span>\n</pre>\n<h3>equals(str1, str2) -&gt; Checks if given parameters are same</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">equals</span><span class=\"p\">(</span><span class=\"s1\">'testish'</span><span class=\"p\">,</span> <span class=\"s1\">'testish'</span><span class=\"p\">))</span>\n</pre>\n<h3>ipv4(ip) -&gt; Checks if given parameter is a valid ipv4 / IP address</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">ipv4</span><span class=\"p\">(</span><span class=\"s1\">'255.255.255.0'</span><span class=\"p\">))</span>\n</pre>\n<h3>url(str) -&gt; Checks if given parameter is an url</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s2\">\"https://www.google.com\"</span><span class=\"p\">))</span>\n</pre>\n<h3>lower(str) -&gt; Checks if given parameter is a lower cased string</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">islower</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">))</span>\n</pre>\n<h3>md5(str) -&gt; Checks if given parameter is a md5 hash</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">md5</span><span class=\"p\">(</span><span class=\"s1\">'8b1a9953c4611296a827abf8c47804d7'</span><span class=\"p\">))</span>\n</pre>\n<h3>number(str / int) -&gt; Checks if given parameter is a number</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyvalidator</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">pyvalidator</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">(</span><span class=\"s1\">'1'</span><span class=\"p\">))</span>\n</pre>\n\n          </div>"}, "last_serial": 4133292, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f82006c7420da41c90985848522bc174", "sha256": "087889c727e9f8b51b1e4a4b9b5f900f76a213647e6d1f776b9a435a046532e8"}, "downloads": -1, "filename": "python_validators-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f82006c7420da41c90985848522bc174", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5785, "upload_time": "2018-08-03T17:24:01", "upload_time_iso_8601": "2018-08-03T17:24:01.700201Z", "url": "https://files.pythonhosted.org/packages/c6/0c/995bcd625bde691532258c943e2d584e9ecfd7580ff1f50ea20e8ff4d736/python_validators-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2f60b4b79da0040ee7c9ea82ccd8a52", "sha256": "5e10926076263031779b5e3e605c8f1635af5346193c7bb194cda96f0ab60434"}, "downloads": -1, "filename": "python-validators-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f2f60b4b79da0040ee7c9ea82ccd8a52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3232, "upload_time": "2018-08-03T17:24:03", "upload_time_iso_8601": "2018-08-03T17:24:03.043950Z", "url": "https://files.pythonhosted.org/packages/b5/7e/86c9f5c30e3332efca2c2bdb137d25b22793649ac5479a6412a90f404242/python-validators-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f82006c7420da41c90985848522bc174", "sha256": "087889c727e9f8b51b1e4a4b9b5f900f76a213647e6d1f776b9a435a046532e8"}, "downloads": -1, "filename": "python_validators-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f82006c7420da41c90985848522bc174", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5785, "upload_time": "2018-08-03T17:24:01", "upload_time_iso_8601": "2018-08-03T17:24:01.700201Z", "url": "https://files.pythonhosted.org/packages/c6/0c/995bcd625bde691532258c943e2d584e9ecfd7580ff1f50ea20e8ff4d736/python_validators-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2f60b4b79da0040ee7c9ea82ccd8a52", "sha256": "5e10926076263031779b5e3e605c8f1635af5346193c7bb194cda96f0ab60434"}, "downloads": -1, "filename": "python-validators-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f2f60b4b79da0040ee7c9ea82ccd8a52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3232, "upload_time": "2018-08-03T17:24:03", "upload_time_iso_8601": "2018-08-03T17:24:03.043950Z", "url": "https://files.pythonhosted.org/packages/b5/7e/86c9f5c30e3332efca2c2bdb137d25b22793649ac5479a6412a90f404242/python-validators-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:45 2020"}