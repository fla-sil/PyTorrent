{"info": {"author": "Piper Merriam", "author_email": "pipermerriam@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "# Python Implementation of the Ethereum Trie structure\n\n\n```shell\n$ pip install ethereum-trie\n```\n\n> Warning: This is an early release and is likely to contain bugs as well as\n> breaking API changes.\n\n\n# Usage\n\n```python\n>>> from trie import Trie\n>>> from trie.db.memory import MemoryDB\n>>> t = Trie(MemoryDB())\n>>> t.root_hash\nb'V\\xe8\\x1f\\x17\\x1b\\xccU\\xa6\\xff\\x83E\\xe6\\x92\\xc0\\xf8n[H\\xe0\\x1b\\x99l\\xad\\xc0\\x01b/\\xb5\\xe3c\\xb4!'\n>>> t.set(b'my-key', b'some-value')\n>>> t.get(b'my-key')\nb'some-value'\n>>> t.exists(b'another-key')\nFalse\n>>> t.set(b'another-key', b'another-value')\n>>> t.exists(b'another-key')\nTrue\n>>> t.delete(b'another-key')\n>>> t.exists(b'another-key')\nFalse\n```\n\nYou can also use it like a dictionary.\n\n```python\n>>> from trie import Trie\n>>> from trie.db.memory import MemoryDB\n>>> t = Trie(MemoryDB())\n>>> t.root_hash\nb'V\\xe8\\x1f\\x17\\x1b\\xccU\\xa6\\xff\\x83E\\xe6\\x92\\xc0\\xf8n[H\\xe0\\x1b\\x99l\\xad\\xc0\\x01b/\\xb5\\xe3c\\xb4!'\n>>> t[b'my-key'] = b'some-value'\n>>> t[b'my-key']\nb'some-value'\n>>> b'another-key' in t\nFalse\n>>> t[b'another-key']  = b'another-value'\n>>> b'another-key' in t\nTrue\n>>> del t[b'another-key']\n>>> b'another-key' in t\nFalse\n```\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pipermerriam/trie", "keywords": "ethereum blockchain evm trie merkle", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ethereum-trie", "package_url": "https://pypi.org/project/ethereum-trie/", "platform": "", "project_url": "https://pypi.org/project/ethereum-trie/", "project_urls": {"Homepage": "https://github.com/pipermerriam/trie"}, "release_url": "https://pypi.org/project/ethereum-trie/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Python implementation of the Ethereum Trie structure", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Python Implementation of the Ethereum Trie structure</p>\n<p><tt>`shell\n$ pip install <span class=\"pre\">ethereum-trie</span>\n`</tt></p>\n<p>&gt; Warning: This is an early release and is likely to contain bugs as well as\n&gt; breaking API changes.</p>\n<p># Usage</p>\n<p><tt>`python\n&gt;&gt;&gt; from trie import Trie\n&gt;&gt;&gt; from trie.db.memory import MemoryDB\n&gt;&gt;&gt; t = <span class=\"pre\">Trie(MemoryDB())</span>\n&gt;&gt;&gt; t.root_hash\n<span class=\"pre\">b'V\\xe8\\x1f\\x17\\x1b\\xccU\\xa6\\xff\\x83E\\xe6\\x92\\xc0\\xf8n[H\\xe0\\x1b\\x99l\\xad\\xc0\\x01b/\\xb5\\xe3c\\xb4!'</span>\n&gt;&gt;&gt; <span class=\"pre\">t.set(b'my-key',</span> <span class=\"pre\">b'some-value')</span>\n&gt;&gt;&gt; <span class=\"pre\">t.get(b'my-key')</span>\n<span class=\"pre\">b'some-value'</span>\n&gt;&gt;&gt; <span class=\"pre\">t.exists(b'another-key')</span>\nFalse\n&gt;&gt;&gt; <span class=\"pre\">t.set(b'another-key',</span> <span class=\"pre\">b'another-value')</span>\n&gt;&gt;&gt; <span class=\"pre\">t.exists(b'another-key')</span>\nTrue\n&gt;&gt;&gt; <span class=\"pre\">t.delete(b'another-key')</span>\n&gt;&gt;&gt; <span class=\"pre\">t.exists(b'another-key')</span>\nFalse\n`</tt></p>\n<p>You can also use it like a dictionary.</p>\n<p><tt>`python\n&gt;&gt;&gt; from trie import Trie\n&gt;&gt;&gt; from trie.db.memory import MemoryDB\n&gt;&gt;&gt; t = <span class=\"pre\">Trie(MemoryDB())</span>\n&gt;&gt;&gt; t.root_hash\n<span class=\"pre\">b'V\\xe8\\x1f\\x17\\x1b\\xccU\\xa6\\xff\\x83E\\xe6\\x92\\xc0\\xf8n[H\\xe0\\x1b\\x99l\\xad\\xc0\\x01b/\\xb5\\xe3c\\xb4!'</span>\n&gt;&gt;&gt; <span class=\"pre\">t[b'my-key']</span> = <span class=\"pre\">b'some-value'</span>\n&gt;&gt;&gt; <span class=\"pre\">t[b'my-key']</span>\n<span class=\"pre\">b'some-value'</span>\n&gt;&gt;&gt; <span class=\"pre\">b'another-key'</span> in t\nFalse\n&gt;&gt;&gt; <span class=\"pre\">t[b'another-key']</span>\u00a0 = <span class=\"pre\">b'another-value'</span>\n&gt;&gt;&gt; <span class=\"pre\">b'another-key'</span> in t\nTrue\n&gt;&gt;&gt; del <span class=\"pre\">t[b'another-key']</span>\n&gt;&gt;&gt; <span class=\"pre\">b'another-key'</span> in t\nFalse\n`</tt></p>\n\n          </div>"}, "last_serial": 3877176, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ffe23b578073a31f86efd5c4c3cb089e", "sha256": "ea40c97b92c5e681ef9daf305f0f28f16b553f134580d0b65de359b73b0a12ba"}, "downloads": -1, "filename": "ethereum-trie-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ffe23b578073a31f86efd5c4c3cb089e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6057, "upload_time": "2017-03-31T21:56:12", "upload_time_iso_8601": "2017-03-31T21:56:12.678942Z", "url": "https://files.pythonhosted.org/packages/06/1b/9cd49f5f053eb2d8ae44d767a1c8aad0aab1a050fe36f92de49628b028e1/ethereum-trie-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ffe23b578073a31f86efd5c4c3cb089e", "sha256": "ea40c97b92c5e681ef9daf305f0f28f16b553f134580d0b65de359b73b0a12ba"}, "downloads": -1, "filename": "ethereum-trie-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ffe23b578073a31f86efd5c4c3cb089e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6057, "upload_time": "2017-03-31T21:56:12", "upload_time_iso_8601": "2017-03-31T21:56:12.678942Z", "url": "https://files.pythonhosted.org/packages/06/1b/9cd49f5f053eb2d8ae44d767a1c8aad0aab1a050fe36f92de49628b028e1/ethereum-trie-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:28 2020"}