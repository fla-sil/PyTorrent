{"info": {"author": "Andre Goncalves", "author_email": "andre@intk.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python"], "description": "Introduction\r\n============\r\n\r\nProvides external methods to sync and create content from Adlib API\r\n\r\nFeatures\r\n============\r\n- Creates Object content type in a Plone site based on Adlib API data.\r\n- Synchronization of content from Adlib API with a Plone site.\r\n\r\nInstallation\r\n===================\r\nIf you are using zc.buildout and the plone.recipe.zope2instance recipe to manage your project, you can do this:\r\nAdd collective.adlibsyncmanager to the list of eggs to install, e.g.::\r\n\r\n\t[buildout]\r\n\t\t\u2026\r\n\t\teggs =\r\n\t\t\t\u2026\r\n\t\t\tcollective.adlibsyncmanager\r\n\r\nHow to use method as a cron job?\r\n=======================================================\r\nAdd to your buildout.cfg::\r\n\r\n\tzope-conf-additional = \r\n\t<clock-server> \r\n\t\tmethod /SiteName/adlib_sync \r\n\t\tperiod 60 \r\n\t\tuser username-to-invoke-method-with\r\n\t\tpassword password-for-user \r\n\t\thost localhost \r\n\t</clock-server>\r\n\r\nDependencies\r\n===============\r\n- collective.object\r\n\r\nThe following dependencies are not required unless the creation of pictures and translations is requested.\r\n\r\n- plone.namedfile\r\n- plone.app.multilingual \r\n\r\nTodos\r\n==========\r\n- Get deleted records from API and update content\r\n- Create log document with every request result details\r\n- Send email after several failed API request attempts\r\n\r\nChangelog\r\n=========\r\n\r\n0.1 (2014-11-14)\r\n-------------------\r\n\r\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/collective/collective.adlibsyncmanager/tarball/0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.adlibsyncmanager", "keywords": "Plone", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.adlibsyncmanager", "package_url": "https://pypi.org/project/collective.adlibsyncmanager/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.adlibsyncmanager/", "project_urls": {"Download": "https://github.com/collective/collective.adlibsyncmanager/tarball/0.1", "Homepage": "https://github.com/collective/collective.adlibsyncmanager"}, "release_url": "https://pypi.org/project/collective.adlibsyncmanager/0.1/", "requires_dist": null, "requires_python": null, "summary": "Provides external methods to sync and create content from Adlib API", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Provides external methods to sync and create content from Adlib API</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Creates Object content type in a Plone site based on Adlib API data.</li>\n<li>Synchronization of content from Adlib API with a Plone site.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you are using zc.buildout and the plone.recipe.zope2instance recipe to manage your project, you can do this:\nAdd collective.adlibsyncmanager to the list of eggs to install, e.g.:</p>\n<pre>[buildout]\n        \u2026\n        eggs =\n                \u2026\n                collective.adlibsyncmanager\n</pre>\n</div>\n<div id=\"how-to-use-method-as-a-cron-job\">\n<h2>How to use method as a cron job?</h2>\n<p>Add to your buildout.cfg:</p>\n<pre>zope-conf-additional =\n&lt;clock-server&gt;\n        method /SiteName/adlib_sync\n        period 60\n        user username-to-invoke-method-with\n        password password-for-user\n        host localhost\n&lt;/clock-server&gt;\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>collective.object</li>\n</ul>\n<p>The following dependencies are not required unless the creation of pictures and translations is requested.</p>\n<ul>\n<li>plone.namedfile</li>\n<li>plone.app.multilingual</li>\n</ul>\n</div>\n<div id=\"todos\">\n<h2>Todos</h2>\n<ul>\n<li>Get deleted records from API and update content</li>\n<li>Create log document with every request result details</li>\n<li>Send email after several failed API request attempts</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1 (2014-11-14)</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1307325, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cbaa32e562732c2bbdde27a4da4b9b0a", "sha256": "ead58c29cbe74e69152cb2d8bab9b08c8a51835c69e833add4cd7de0a63d0cb0"}, "downloads": -1, "filename": "collective.adlibsyncmanager-0.1.tar.gz", "has_sig": false, "md5_digest": "cbaa32e562732c2bbdde27a4da4b9b0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23578, "upload_time": "2014-11-14T17:35:59", "upload_time_iso_8601": "2014-11-14T17:35:59.699069Z", "url": "https://files.pythonhosted.org/packages/ae/4f/bd5618e52b20607e18f2878d9dcb21f6452c697520fdcd506b0a20194e35/collective.adlibsyncmanager-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cbaa32e562732c2bbdde27a4da4b9b0a", "sha256": "ead58c29cbe74e69152cb2d8bab9b08c8a51835c69e833add4cd7de0a63d0cb0"}, "downloads": -1, "filename": "collective.adlibsyncmanager-0.1.tar.gz", "has_sig": false, "md5_digest": "cbaa32e562732c2bbdde27a4da4b9b0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23578, "upload_time": "2014-11-14T17:35:59", "upload_time_iso_8601": "2014-11-14T17:35:59.699069Z", "url": "https://files.pythonhosted.org/packages/ae/4f/bd5618e52b20607e18f2878d9dcb21f6452c697520fdcd506b0a20194e35/collective.adlibsyncmanager-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:02 2020"}