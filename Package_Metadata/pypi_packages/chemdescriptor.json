{"info": {"author": "DRP Project", "author_email": "darkreactionproject@haverford.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# chemdescriptor - Molecular descriptor generator\nGeneric molecular descriptor generator wrapper around various software packages to simplify the process of getting descriptors\n\n## To install\nType:\n```git clone https://github.com/darkreactions/chemdescriptor```\n\n```cd chemdescriptor```\n\n```git checkout cxcalc_rewrite```\n\n```pip install .```\n\n## Requirements\n1. Pandas\n2. ChemAxon descriptors\n    - Working copy of ChemAxon cxcalc\n3. RDKit descriptors\n    - RDKit installed\n\n## Usage\nCurrently only supports ChemAxon cxcalc and RDKit. The module can be expanded to cover other generators as well.\nExample input files can be found in the examples/ folder of this repo as well as the pip installed package.\n\n### CXCalc\n\n**Important! The code requires an environment variable CXCALC_PATH to be set, which points to the folder where cxcalc is installed!**\n\n### Command Line\n```\nchemdescriptor-cx -m /path/to/SMILES/file -d /path/to/descriptor/whitelist/json -p 6.8 7.0 7.2 -o output.csv\n```\n\n```\nusage: chemdescriptor-cx [-h] -m MOLECULE -d DESCRIPTORS -p PH [PH ...]\n                         [-c COMMANDS] -o OUTPUT\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m MOLECULE, --molecule MOLECULE\n                        Path to input SMILES file\n  -d DESCRIPTORS, --descriptors DESCRIPTORS\n                        Path to descriptor white list json file\n  -p PH [PH ...], --pH PH [PH ...]\n                        List of pH values at which to calculate descriptors\n  -c COMMANDS, --commands COMMANDS\n                        Optional command stems for descriptors in json format\n  -o OUTPUT, --output OUTPUT\n                        Path to output file\n```\n\n### In code\n\nThe package will initially search cxcalc executable in the PATH variable if not\nwill fall back to CXCALC_PATH\n\nSet CXCALC_PATH\n\n```\nimport os\nos.environ['CXCALC_PATH'] = '/path/to/cxcalc'\n```\n\nImport the generator class\n\n``` from chemdescriptor.generator.chemaxon import ChemAxonDescriptorGenerator as CAG```\n\nImport SMILES and whitelist\n\n```\nwith open('/path/to/SMILES/file', 'r') as f:\n    smiles_list = f.read().splitlines()\n\nwith open('/path/to/descriptor/whitelist/json', 'r') as f:\n    whitelist = json.load(f)\n```\n\nInstantiate a generator. ```smiles_list``` is a list of smiles and ```whitelist```\nis a dictionary of keys in the command_dict \n```logfile``` is the path to a log which contains information such as the final cxcalc\ncommand, columns that were renamed and other errors for debugging\n\nChemaxon standardize command can be used to remove small fragments in the smiles_list\nSet standardize=True and also set STANDARDIZE_PATH\n\n`os.environ['STANDARDIZE_PATH'] = '/path/to/standardize'`\n\n``` \ncag = CAG(smiles_list,\n          whitelist,\n          ph_values=[6, 7, 8],\n          command_dict={},\n          logfile='/path/to/logfile',\n          standardize=True)\n```\n\nGenerate csv output\n``` cag.generate('output.csv', dataframe=False, lec=False) ```\n\nOptional keyword arguments for `generate` include `dataframe` boolean (default False) which returns a pandas dataframe in addition to writing a csv if True\nand `lec` boolean (default False) which converts the Smiles code to an intermediate \"Low Energy Conformer (LEC)\" representation before generating descriptors.\nA license is most likely required to generate LECs.\n\n## Notes:\n\nDescriptor whitelist is a python dictionary of the form:\n```\n{\n    \"descriptors\": [\n        \"refractivity\",\n        \"maximalprojectionarea\",\n        \"maximalprojectionradius\",\n        \"maximalprojectionsize\",\n        \"minimalprojectionarea\",\n        \"minimalprojectionradius\",\n        \"minimalprojectionsize\"\n    ],\n    \"ph_descriptors\": [\n        \"avgpol\",\n        \"molpol\",\n        \"vanderwaals\",\n        \"asa\",\n        \"asa+\",\n        \"asa-\",\n        \"asa_hydrophobic\",\n        \"asa_polar\",\n        \"hbda_acc\",\n        \"hbda_don\",\n        \"polar_surface_area\"\n    ]\n}\n```\n\nchemdescriptor expects 2 keys in the whitelist where \"descriptors\" are generic and \"ph_descriptors\" are ph dependent descriptors\n\nAn **optional** dictionary can be passed to the ChemAxonDescriptorGenerator, \"command_dict\" which\n\"translates\" the above descriptor names into commands that ChemAxon cxcalc can understand.\n\nIt also consists of column names that will be added to the final output.\n\n**Note:** If the command_dict is not given or is empty, a default command dict is used whose definition is [here](https://github.com/darkreactions/chemdescriptor/blob/cxcalc_rewrite/chemdescriptor/defaults/cxcalc.py)\n\nAn example of a command_dict is:\n\n```\ncommand_dict = {\n    \"descriptors\": {\n        \"atomcount_c\": {\n            \"command\": [\n                \"atomcount\",\n                \"-z\",\n                \"6\"\n            ],\n            \"column_names\": [\n                \"_feat_AtomCount_C\"\n            ]\n        },\n        \"wateraccessiblesurfacearea\": {\n            \"command\": [\n                \"wateraccessiblesurfacearea\"\n            ],\n            \"column_names\": [\n                \"_feat_ASA\",\n                \"_feat_ASA+\",\n                \"_feat_ASA-\",\n                \"_feat_ASA_H\",\n                \"_feat_ASA_P\"\n            ]\n        }\n    \"ph_descriptors\": {\n        \"acceptorcount\": {\n            \"command\": [\n                \"acceptorcount\"\n            ],\n            \"column_names\": [\n                \"_feat_Hacceptorcount\"\n            ]\n        },\n        \"donorcount\": {\n            \"command\": [\n                \"donorcount\"\n            ],\n            \"column_names\": [\n                \"_feat_Hdonorcount\"\n            ]\n        }\n    }\n\n```\n```command_dict``` consists of 2 dictionaries with keys ```descriptors``` and \n```ph_descriptors```. Within each dictionary are descriptor names referred in the whitelist. \n\nUnder each descriptor, two lists are required ```command``` and ```column_names```\n\nCommand refers to the command line options for cxcalc as documented \n[here](https://docs.chemaxon.com/display/docs/cxcalc+calculator+functions)\n**Note:** that commands with multiple words are entries in a list. For example, the command \n```atomcount -z 6``` is represented in the dictionary as ```['atomcount', '-z', '6']```\n\n```column_names``` is a list of names the user wants to rename the cxcalc generated\ncsv column names.\n\nCertain commands generate multiple columns for example, ```wateraccessiblesurfacearea```\ngenerates 5 columns. Therefore, the ```column_names``` list becomes\n```\n\"column_names\": [\n                \"_feat_ASA\",\n                \"_feat_ASA+\",\n                \"_feat_ASA-\",\n                \"_feat_ASA_H\",\n                \"_feat_ASA_P\"\n            ]\n```\n\n**Note** : If the number of columns generated by cxcalc do not match the expected count, \nnone of the column names are renamed.\n\n### RDKit\n\nMuch easier to use. Only needs a list of descriptors similar to cxcalc. \n\n\n# To Do\n[ ] Test on different machines\n\n[ ] Get feedback on what needs to be changed/improved\n\n[ ] Expand to cover other descriptor generators\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/darkreactions/chemdescriptor", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "chemdescriptor", "package_url": "https://pypi.org/project/chemdescriptor/", "platform": "", "project_url": "https://pypi.org/project/chemdescriptor/", "project_urls": {"Homepage": "https://github.com/darkreactions/chemdescriptor"}, "release_url": "https://pypi.org/project/chemdescriptor/0.2.4/", "requires_dist": ["pandas"], "requires_python": "", "summary": "A standalone module to help generate molecular descriptors from various cheminformatics software", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>chemdescriptor - Molecular descriptor generator</h1>\n<p>Generic molecular descriptor generator wrapper around various software packages to simplify the process of getting descriptors</p>\n<h2>To install</h2>\n<p>Type:\n<code>git clone https://github.com/darkreactions/chemdescriptor</code></p>\n<p><code>cd chemdescriptor</code></p>\n<p><code>git checkout cxcalc_rewrite</code></p>\n<p><code>pip install .</code></p>\n<h2>Requirements</h2>\n<ol>\n<li>Pandas</li>\n<li>ChemAxon descriptors\n<ul>\n<li>Working copy of ChemAxon cxcalc</li>\n</ul>\n</li>\n<li>RDKit descriptors\n<ul>\n<li>RDKit installed</li>\n</ul>\n</li>\n</ol>\n<h2>Usage</h2>\n<p>Currently only supports ChemAxon cxcalc and RDKit. The module can be expanded to cover other generators as well.\nExample input files can be found in the examples/ folder of this repo as well as the pip installed package.</p>\n<h3>CXCalc</h3>\n<p><strong>Important! The code requires an environment variable CXCALC_PATH to be set, which points to the folder where cxcalc is installed!</strong></p>\n<h3>Command Line</h3>\n<pre><code>chemdescriptor-cx -m /path/to/SMILES/file -d /path/to/descriptor/whitelist/json -p 6.8 7.0 7.2 -o output.csv\n</code></pre>\n<pre><code>usage: chemdescriptor-cx [-h] -m MOLECULE -d DESCRIPTORS -p PH [PH ...]\n                         [-c COMMANDS] -o OUTPUT\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -m MOLECULE, --molecule MOLECULE\n                        Path to input SMILES file\n  -d DESCRIPTORS, --descriptors DESCRIPTORS\n                        Path to descriptor white list json file\n  -p PH [PH ...], --pH PH [PH ...]\n                        List of pH values at which to calculate descriptors\n  -c COMMANDS, --commands COMMANDS\n                        Optional command stems for descriptors in json format\n  -o OUTPUT, --output OUTPUT\n                        Path to output file\n</code></pre>\n<h3>In code</h3>\n<p>The package will initially search cxcalc executable in the PATH variable if not\nwill fall back to CXCALC_PATH</p>\n<p>Set CXCALC_PATH</p>\n<pre><code>import os\nos.environ['CXCALC_PATH'] = '/path/to/cxcalc'\n</code></pre>\n<p>Import the generator class</p>\n<p><code>from chemdescriptor.generator.chemaxon import ChemAxonDescriptorGenerator as CAG</code></p>\n<p>Import SMILES and whitelist</p>\n<pre><code>with open('/path/to/SMILES/file', 'r') as f:\n    smiles_list = f.read().splitlines()\n\nwith open('/path/to/descriptor/whitelist/json', 'r') as f:\n    whitelist = json.load(f)\n</code></pre>\n<p>Instantiate a generator. <code>smiles_list</code> is a list of smiles and <code>whitelist</code>\nis a dictionary of keys in the command_dict\n<code>logfile</code> is the path to a log which contains information such as the final cxcalc\ncommand, columns that were renamed and other errors for debugging</p>\n<p>Chemaxon standardize command can be used to remove small fragments in the smiles_list\nSet standardize=True and also set STANDARDIZE_PATH</p>\n<p><code>os.environ['STANDARDIZE_PATH'] = '/path/to/standardize'</code></p>\n<pre><code>cag = CAG(smiles_list,\n          whitelist,\n          ph_values=[6, 7, 8],\n          command_dict={},\n          logfile='/path/to/logfile',\n          standardize=True)\n</code></pre>\n<p>Generate csv output\n<code>cag.generate('output.csv', dataframe=False, lec=False)</code></p>\n<p>Optional keyword arguments for <code>generate</code> include <code>dataframe</code> boolean (default False) which returns a pandas dataframe in addition to writing a csv if True\nand <code>lec</code> boolean (default False) which converts the Smiles code to an intermediate \"Low Energy Conformer (LEC)\" representation before generating descriptors.\nA license is most likely required to generate LECs.</p>\n<h2>Notes:</h2>\n<p>Descriptor whitelist is a python dictionary of the form:</p>\n<pre><code>{\n    \"descriptors\": [\n        \"refractivity\",\n        \"maximalprojectionarea\",\n        \"maximalprojectionradius\",\n        \"maximalprojectionsize\",\n        \"minimalprojectionarea\",\n        \"minimalprojectionradius\",\n        \"minimalprojectionsize\"\n    ],\n    \"ph_descriptors\": [\n        \"avgpol\",\n        \"molpol\",\n        \"vanderwaals\",\n        \"asa\",\n        \"asa+\",\n        \"asa-\",\n        \"asa_hydrophobic\",\n        \"asa_polar\",\n        \"hbda_acc\",\n        \"hbda_don\",\n        \"polar_surface_area\"\n    ]\n}\n</code></pre>\n<p>chemdescriptor expects 2 keys in the whitelist where \"descriptors\" are generic and \"ph_descriptors\" are ph dependent descriptors</p>\n<p>An <strong>optional</strong> dictionary can be passed to the ChemAxonDescriptorGenerator, \"command_dict\" which\n\"translates\" the above descriptor names into commands that ChemAxon cxcalc can understand.</p>\n<p>It also consists of column names that will be added to the final output.</p>\n<p><strong>Note:</strong> If the command_dict is not given or is empty, a default command dict is used whose definition is <a href=\"https://github.com/darkreactions/chemdescriptor/blob/cxcalc_rewrite/chemdescriptor/defaults/cxcalc.py\" rel=\"nofollow\">here</a></p>\n<p>An example of a command_dict is:</p>\n<pre><code>command_dict = {\n    \"descriptors\": {\n        \"atomcount_c\": {\n            \"command\": [\n                \"atomcount\",\n                \"-z\",\n                \"6\"\n            ],\n            \"column_names\": [\n                \"_feat_AtomCount_C\"\n            ]\n        },\n        \"wateraccessiblesurfacearea\": {\n            \"command\": [\n                \"wateraccessiblesurfacearea\"\n            ],\n            \"column_names\": [\n                \"_feat_ASA\",\n                \"_feat_ASA+\",\n                \"_feat_ASA-\",\n                \"_feat_ASA_H\",\n                \"_feat_ASA_P\"\n            ]\n        }\n    \"ph_descriptors\": {\n        \"acceptorcount\": {\n            \"command\": [\n                \"acceptorcount\"\n            ],\n            \"column_names\": [\n                \"_feat_Hacceptorcount\"\n            ]\n        },\n        \"donorcount\": {\n            \"command\": [\n                \"donorcount\"\n            ],\n            \"column_names\": [\n                \"_feat_Hdonorcount\"\n            ]\n        }\n    }\n\n</code></pre>\n<p><code>command_dict</code> consists of 2 dictionaries with keys <code>descriptors</code> and\n<code>ph_descriptors</code>. Within each dictionary are descriptor names referred in the whitelist.</p>\n<p>Under each descriptor, two lists are required <code>command</code> and <code>column_names</code></p>\n<p>Command refers to the command line options for cxcalc as documented\n<a href=\"https://docs.chemaxon.com/display/docs/cxcalc+calculator+functions\" rel=\"nofollow\">here</a>\n<strong>Note:</strong> that commands with multiple words are entries in a list. For example, the command\n<code>atomcount -z 6</code> is represented in the dictionary as <code>['atomcount', '-z', '6']</code></p>\n<p><code>column_names</code> is a list of names the user wants to rename the cxcalc generated\ncsv column names.</p>\n<p>Certain commands generate multiple columns for example, <code>wateraccessiblesurfacearea</code>\ngenerates 5 columns. Therefore, the <code>column_names</code> list becomes</p>\n<pre><code>\"column_names\": [\n                \"_feat_ASA\",\n                \"_feat_ASA+\",\n                \"_feat_ASA-\",\n                \"_feat_ASA_H\",\n                \"_feat_ASA_P\"\n            ]\n</code></pre>\n<p><strong>Note</strong> : If the number of columns generated by cxcalc do not match the expected count,\nnone of the column names are renamed.</p>\n<h3>RDKit</h3>\n<p>Much easier to use. Only needs a list of descriptors similar to cxcalc.</p>\n<h1>To Do</h1>\n<p>[ ] Test on different machines</p>\n<p>[ ] Get feedback on what needs to be changed/improved</p>\n<p>[ ] Expand to cover other descriptor generators</p>\n\n          </div>"}, "last_serial": 7069236, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "31d63a44c2e9c8abcf46e6c48f3645ec", "sha256": "bab0f03e79ce7e98cfe8367e116ba65a00723e1fffa08ec97b63f0f989daee1d"}, "downloads": -1, "filename": "chemdescriptor-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "31d63a44c2e9c8abcf46e6c48f3645ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6274, "upload_time": "2019-05-08T19:00:54", "upload_time_iso_8601": "2019-05-08T19:00:54.504110Z", "url": "https://files.pythonhosted.org/packages/70/a0/dfdd1f438b2d0c0a48f9ee37b9139302f68ddc1b0745811bdf31452d4020/chemdescriptor-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb2b6ee4e0d647eaf1d106bf83b565ed", "sha256": "632e2699ae5812f62a251cd8504583c5d2ef8ec1ddf37642a58adecf50abb1a2"}, "downloads": -1, "filename": "chemdescriptor-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fb2b6ee4e0d647eaf1d106bf83b565ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5393, "upload_time": "2019-05-08T19:00:56", "upload_time_iso_8601": "2019-05-08T19:00:56.429417Z", "url": "https://files.pythonhosted.org/packages/d8/9e/e68bbc1d4887c0ba764e3eea2d8ebdc31ad3799083e1b8621b3db5c3e5c4/chemdescriptor-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f56326b6f6f2c7b793be1aa4e1b9a531", "sha256": "b953d4f6395a341e66b9667e5346c13982187afdc43e214d1eb132f14dd11f63"}, "downloads": -1, "filename": "chemdescriptor-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f56326b6f6f2c7b793be1aa4e1b9a531", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8523, "upload_time": "2019-05-30T20:10:58", "upload_time_iso_8601": "2019-05-30T20:10:58.487780Z", "url": "https://files.pythonhosted.org/packages/98/c9/267b091126665c54d2574dbff5373bcf370d22b555a73531bdf129448cde/chemdescriptor-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5d5b55fcba520bb433eae21c6bc766ca", "sha256": "55d87785c2aecbaf73e39a0d4b38a90f0163d3c9b900a92ab790acc6de5e1471"}, "downloads": -1, "filename": "chemdescriptor-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5d5b55fcba520bb433eae21c6bc766ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8164, "upload_time": "2019-06-04T20:37:53", "upload_time_iso_8601": "2019-06-04T20:37:53.845621Z", "url": "https://files.pythonhosted.org/packages/86/4a/04606af7b2c1444c2a27f4e5cbfd8d279a4f3ead24def2f752415e828b04/chemdescriptor-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acc339c47d129a858879511a39314d16", "sha256": "736412bde87fb9c1a556c31c78dd9e4c558c525caa49573ef2ede172724a8aa6"}, "downloads": -1, "filename": "chemdescriptor-0.0.3.tar.gz", "has_sig": false, "md5_digest": "acc339c47d129a858879511a39314d16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7299, "upload_time": "2019-06-04T20:37:55", "upload_time_iso_8601": "2019-06-04T20:37:55.630319Z", "url": "https://files.pythonhosted.org/packages/7b/9a/efc04c83d6352e282eea4b4a9544b3a248bcb3a95ee8c6eb2bd1de2f2114/chemdescriptor-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0c027cdaaaddde238f02bddf059a039f", "sha256": "03000980d5c9bf4aaae9367880723914b14e5b14e1020165e614e5fd59e9b911"}, "downloads": -1, "filename": "chemdescriptor-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0c027cdaaaddde238f02bddf059a039f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8338, "upload_time": "2019-08-07T15:50:01", "upload_time_iso_8601": "2019-08-07T15:50:01.976405Z", "url": "https://files.pythonhosted.org/packages/05/22/5e982bd7617d7c721a5eb7973790224ae4c9a0405f3a844613ce7e789fca/chemdescriptor-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f7058140e1ce5671f55c853322fe2bf", "sha256": "c366d20841e6e617a828dc90a84c01d8ef5b0517e309339d599b94e1105f218b"}, "downloads": -1, "filename": "chemdescriptor-0.0.4.tar.gz", "has_sig": false, "md5_digest": "7f7058140e1ce5671f55c853322fe2bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7445, "upload_time": "2019-08-07T15:50:03", "upload_time_iso_8601": "2019-08-07T15:50:03.731347Z", "url": "https://files.pythonhosted.org/packages/6e/d9/02266388dfa062c57a6b8edfad8fd2dd60ba08daa2f34ba95fb1954d1bbc/chemdescriptor-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5a8b7b21bc4998f6e467949d9f17be8b", "sha256": "51d73c8d013530758ca43902f5adf59724acf5f94fc2ad893525c0fd1153df1b"}, "downloads": -1, "filename": "chemdescriptor-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5a8b7b21bc4998f6e467949d9f17be8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8536, "upload_time": "2019-08-07T17:11:20", "upload_time_iso_8601": "2019-08-07T17:11:20.907275Z", "url": "https://files.pythonhosted.org/packages/44/a3/31b6239ab3eb57bc36abc1bc017006e64bf048af129f88999c46febabe80/chemdescriptor-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2d0a9c6269c509ef9a7c13173703391", "sha256": "f283f225d85500419d8e3cdefc1e492129bd9e2115cc6d950c01e18bd2d7b4d3"}, "downloads": -1, "filename": "chemdescriptor-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d2d0a9c6269c509ef9a7c13173703391", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7649, "upload_time": "2019-08-07T17:11:22", "upload_time_iso_8601": "2019-08-07T17:11:22.534143Z", "url": "https://files.pythonhosted.org/packages/d5/ca/64a9c856879533ce8bd01d36f670fa0715f7b76c63fd047ef94f414b3b02/chemdescriptor-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "84a289bbf88533d9efdc90f155087ac4", "sha256": "a765f5e5c90ad809c8cac7c78db873fb1a28c0bc0dcc5c23f84a9ecbbafb4e7a"}, "downloads": -1, "filename": "chemdescriptor-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "84a289bbf88533d9efdc90f155087ac4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8586, "upload_time": "2019-08-09T18:41:08", "upload_time_iso_8601": "2019-08-09T18:41:08.190612Z", "url": "https://files.pythonhosted.org/packages/ee/96/f59a7255a0d1fcd84c02ce0c375b29e399804cc002bba48c69619757f35b/chemdescriptor-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82a90260218ac0d051706dc72ab24261", "sha256": "432b25e3b496a1d70cbf65a33ff48147f68dc8076907caea334c79667b910a37"}, "downloads": -1, "filename": "chemdescriptor-0.0.6.tar.gz", "has_sig": false, "md5_digest": "82a90260218ac0d051706dc72ab24261", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7715, "upload_time": "2019-08-09T18:41:09", "upload_time_iso_8601": "2019-08-09T18:41:09.182743Z", "url": "https://files.pythonhosted.org/packages/a0/d5/7600afc908fe6df14d3b19e9dbd0ea343d75994a5bef2991b6ad42917c93/chemdescriptor-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "11d3dfcca79492844ee0cca6b1d82148", "sha256": "75ea9a8e8dcd48cc92ede0d416b10d027d6aa22a44713e0848e7008c5773ce50"}, "downloads": -1, "filename": "chemdescriptor-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "11d3dfcca79492844ee0cca6b1d82148", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8563, "upload_time": "2019-08-20T15:06:09", "upload_time_iso_8601": "2019-08-20T15:06:09.387543Z", "url": "https://files.pythonhosted.org/packages/5d/f0/8fa2a9cce579f8bb3ab7e51a8faca0613f19af6e31e0d3dbb60d06f04af4/chemdescriptor-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0ab1f35bc47dd6b7d689853839d2151", "sha256": "fa1f0cd7c887f4707630bcd01b463d45ac34042636d650889c4c7e94b08902e7"}, "downloads": -1, "filename": "chemdescriptor-0.0.7.tar.gz", "has_sig": false, "md5_digest": "c0ab1f35bc47dd6b7d689853839d2151", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7727, "upload_time": "2019-08-20T15:06:10", "upload_time_iso_8601": "2019-08-20T15:06:10.614550Z", "url": "https://files.pythonhosted.org/packages/09/42/fc7f25ce7e711e68988fe2efc8aa139f8874cb818e4d4bc54ffc6867f4e4/chemdescriptor-0.0.7.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "6438197c451683d4ae34cd0e3a36ca8d", "sha256": "9e4632e9160715be4e3ec3de34988a3bce4a5fcbaf36fa0b6b11e08380be4586"}, "downloads": -1, "filename": "chemdescriptor-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6438197c451683d4ae34cd0e3a36ca8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10498, "upload_time": "2020-02-19T19:50:30", "upload_time_iso_8601": "2020-02-19T19:50:30.082708Z", "url": "https://files.pythonhosted.org/packages/ab/96/cc41027736cb137039528451e7111a1c5dd50a29d27ffdd2292edade60c5/chemdescriptor-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b036b20f839b223cdbed084896d2994a", "sha256": "ccb6acb9bae095d8a98a4e2025e629cb06d86bbbedac585a6e8eb51bdef0c8be"}, "downloads": -1, "filename": "chemdescriptor-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b036b20f839b223cdbed084896d2994a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10169, "upload_time": "2020-02-19T19:50:33", "upload_time_iso_8601": "2020-02-19T19:50:33.769627Z", "url": "https://files.pythonhosted.org/packages/c4/55/a0fd044ce2d8157dd28b1ac9f3b757f35f1a604bcffb525d498ee7b5b876/chemdescriptor-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ad6cc5a9fb79ff9bd0d523f33849aeb2", "sha256": "6e9aeac93507ace6b33ff029e620998b307aecb3f4b5d09a36f2bac18cda54df"}, "downloads": -1, "filename": "chemdescriptor-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ad6cc5a9fb79ff9bd0d523f33849aeb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15833, "upload_time": "2020-03-31T16:00:41", "upload_time_iso_8601": "2020-03-31T16:00:41.520808Z", "url": "https://files.pythonhosted.org/packages/11/15/28ac25504b2a6847eb99bcaa200acd4b1ae2ef3cdb4e74be17b9fcf74120/chemdescriptor-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e77d9dd8df4b06519e3618ab1f2db45a", "sha256": "a22a14539ceaedc43f7fe72976e7d96546f7e4084dbdf7c347517206fb07828c"}, "downloads": -1, "filename": "chemdescriptor-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e77d9dd8df4b06519e3618ab1f2db45a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16436, "upload_time": "2020-03-31T16:00:43", "upload_time_iso_8601": "2020-03-31T16:00:43.010838Z", "url": "https://files.pythonhosted.org/packages/c4/76/dbe563f34c358998324c9cf0391226367ace6b62054d7b2938cf75f0c150/chemdescriptor-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "aeb8a3c3e47ba524a8e40553fd51def9", "sha256": "35c2e049666388c7ad51af6f4b931466034cce4b363a6266b21d188bd40684ad"}, "downloads": -1, "filename": "chemdescriptor-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aeb8a3c3e47ba524a8e40553fd51def9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16185, "upload_time": "2020-04-07T18:44:46", "upload_time_iso_8601": "2020-04-07T18:44:46.527419Z", "url": "https://files.pythonhosted.org/packages/15/73/4f330e268da33090a69f7c6854f36955f1048feea1b2b4e63ea2e42b86f3/chemdescriptor-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11b4e54be33e4ebf2afe80f9e1e0f778", "sha256": "2fa8dc854ae68307bb9d88cbe61e345743ea841d3f76c25e0300f93dcb2b3409"}, "downloads": -1, "filename": "chemdescriptor-0.2.1.tar.gz", "has_sig": false, "md5_digest": "11b4e54be33e4ebf2afe80f9e1e0f778", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16858, "upload_time": "2020-04-07T18:44:48", "upload_time_iso_8601": "2020-04-07T18:44:48.033153Z", "url": "https://files.pythonhosted.org/packages/8a/36/7cef90a4bab458d35c7fb30b25cbb93bdc9afdb9daada6f3f0ee355346fc/chemdescriptor-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "8099eb91c42694b3ee607f7903b3c45b", "sha256": "c65143b4ff3afb476855832cd1dfaf8189bab7bc200bc53eb1f9f9babd904acd"}, "downloads": -1, "filename": "chemdescriptor-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8099eb91c42694b3ee607f7903b3c45b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16187, "upload_time": "2020-04-08T16:19:56", "upload_time_iso_8601": "2020-04-08T16:19:56.611496Z", "url": "https://files.pythonhosted.org/packages/1a/d7/4eb535b0df4ce10a5805ac640b17d5fd601f730aaba65a1b938fcfb81b72/chemdescriptor-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20f24688810d4223192b7a87044beda8", "sha256": "9274666bffe077a6c96b1a27196a6683940be2e4287898e0fd86f7b3d5dc3794"}, "downloads": -1, "filename": "chemdescriptor-0.2.2.tar.gz", "has_sig": false, "md5_digest": "20f24688810d4223192b7a87044beda8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16866, "upload_time": "2020-04-08T16:19:58", "upload_time_iso_8601": "2020-04-08T16:19:58.769374Z", "url": "https://files.pythonhosted.org/packages/57/89/a61161ad7e01c5f9ae68b81630a980653a19f491d9b55ee851612fb90ca7/chemdescriptor-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "72715206732cc92b8670f8d8f0b438f3", "sha256": "e673e2b723a011825a7eb35230de7ef5d7369934ad038cca882ff0f58fce7cd2"}, "downloads": -1, "filename": "chemdescriptor-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "72715206732cc92b8670f8d8f0b438f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16241, "upload_time": "2020-04-08T20:34:42", "upload_time_iso_8601": "2020-04-08T20:34:42.398033Z", "url": "https://files.pythonhosted.org/packages/3c/b5/e70a6a64933dc75fe71f45dcb674c38042c6174c5de52c3db1168ddc7676/chemdescriptor-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "582ef4c02a03a05face632f8825b8371", "sha256": "5bc2bb7a7765b468157f08d2300d2e5b252f7e361a93d12cf4d0634aecde609c"}, "downloads": -1, "filename": "chemdescriptor-0.2.3.tar.gz", "has_sig": false, "md5_digest": "582ef4c02a03a05face632f8825b8371", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16931, "upload_time": "2020-04-08T20:34:45", "upload_time_iso_8601": "2020-04-08T20:34:45.270602Z", "url": "https://files.pythonhosted.org/packages/cd/07/e930fcec61b910158d6de87bcbbd34617d8e06dd658f002d86d35906caaa/chemdescriptor-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "42d4639bce4485aee5e29cac64d3dbb0", "sha256": "594235f68cde494851094cf0880db37d7c1285c5f0b938862ab2156648919872"}, "downloads": -1, "filename": "chemdescriptor-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "42d4639bce4485aee5e29cac64d3dbb0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16265, "upload_time": "2020-04-21T16:36:21", "upload_time_iso_8601": "2020-04-21T16:36:21.986098Z", "url": "https://files.pythonhosted.org/packages/4b/28/afc9b9131e6de41007213b58a8d8c93fb64b41b408184cfa5733bfcbd558/chemdescriptor-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f81295ac8d778c6460527ec253489f9b", "sha256": "fdd34eae883cf165ff03af36e049d13a8f98e05f299808aa3195f20239a5a07b"}, "downloads": -1, "filename": "chemdescriptor-0.2.4.tar.gz", "has_sig": false, "md5_digest": "f81295ac8d778c6460527ec253489f9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16956, "upload_time": "2020-04-21T16:36:25", "upload_time_iso_8601": "2020-04-21T16:36:25.176104Z", "url": "https://files.pythonhosted.org/packages/b9/cb/eddc3229440f7c4b754fb776aae4422f1e2621db8d57a6a7f889f489e667/chemdescriptor-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42d4639bce4485aee5e29cac64d3dbb0", "sha256": "594235f68cde494851094cf0880db37d7c1285c5f0b938862ab2156648919872"}, "downloads": -1, "filename": "chemdescriptor-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "42d4639bce4485aee5e29cac64d3dbb0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16265, "upload_time": "2020-04-21T16:36:21", "upload_time_iso_8601": "2020-04-21T16:36:21.986098Z", "url": "https://files.pythonhosted.org/packages/4b/28/afc9b9131e6de41007213b58a8d8c93fb64b41b408184cfa5733bfcbd558/chemdescriptor-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f81295ac8d778c6460527ec253489f9b", "sha256": "fdd34eae883cf165ff03af36e049d13a8f98e05f299808aa3195f20239a5a07b"}, "downloads": -1, "filename": "chemdescriptor-0.2.4.tar.gz", "has_sig": false, "md5_digest": "f81295ac8d778c6460527ec253489f9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16956, "upload_time": "2020-04-21T16:36:25", "upload_time_iso_8601": "2020-04-21T16:36:25.176104Z", "url": "https://files.pythonhosted.org/packages/b9/cb/eddc3229440f7c4b754fb776aae4422f1e2621db8d57a6a7f889f489e667/chemdescriptor-0.2.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:40 2020"}