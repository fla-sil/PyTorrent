{"info": {"author": "Aleksey Rezvov", "author_email": "aleksey.rezvov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "django-before, before django project\n====================================\n\ndjango-before - tools that are needed BEFORE any others in each django project.\n\nsubpather\n---------\nmake_subpather - tool to calculate relative paths from root directory.\n\n.. code-block:: python\n\n    # at the beginning of settings.py\n    from django_before import make_subpather\n\n    # e.g. I have project structure where this file is here: project_root/src/django_project/settings/base.py\n    # so root of my project is 4 levels higher:\n    subroot = make_subpather(__file__, 4)\n\n    # know I can handy get paths relative to root of the project:\n    MEDIA_ROOT = subroot('static_content/media/')\n\n    DIR_SAMPLE_IMAGES = subroot('src/crm/res/sample_images')\n\njson settings reader\n-------------------------\nmake_json_settings_reader - tool to read settings from json file (e.g. secret settings).\n\n.. code-block:: python\n\n    # create settings reader\n    secrets = make_json_settings_reader(subroot('conf/secrets.json'))\n\n    # use it for reading settings\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.postgresql_psycopg2',\n            'NAME': 'mydbname',\n            'USER': 'mydbuser',\n            'PASSWORD': secrets['DATABASE_PASSWORD'],\n        }\n    }\n\n    SECRET_KEY = secrets['SECRET_KEY']\n\n\nData in json file must be represented as dict:\n\n.. code-block:: json\n\n    {\n      \"SECRET_KEY\": \"user123\",\n      \"DATABASE_PASSWORD\": \"user123\"\n    }", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alekseyr/django-before", "keywords": "django settings.py", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-before", "package_url": "https://pypi.org/project/django-before/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-before/", "project_urls": {"Homepage": "https://github.com/alekseyr/django-before"}, "release_url": "https://pypi.org/project/django-before/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Tools that are needed BEFORE any others in each django project", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>django-before - tools that are needed BEFORE any others in each django project.</p>\n<div id=\"subpather\">\n<h2>subpather</h2>\n<p>make_subpather - tool to calculate relative paths from root directory.</p>\n<pre><span class=\"c1\"># at the beginning of settings.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_before</span> <span class=\"kn\">import</span> <span class=\"n\">make_subpather</span>\n\n<span class=\"c1\"># e.g. I have project structure where this file is here: project_root/src/django_project/settings/base.py</span>\n<span class=\"c1\"># so root of my project is 4 levels higher:</span>\n<span class=\"n\">subroot</span> <span class=\"o\">=</span> <span class=\"n\">make_subpather</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># know I can handy get paths relative to root of the project:</span>\n<span class=\"n\">MEDIA_ROOT</span> <span class=\"o\">=</span> <span class=\"n\">subroot</span><span class=\"p\">(</span><span class=\"s1\">'static_content/media/'</span><span class=\"p\">)</span>\n\n<span class=\"n\">DIR_SAMPLE_IMAGES</span> <span class=\"o\">=</span> <span class=\"n\">subroot</span><span class=\"p\">(</span><span class=\"s1\">'src/crm/res/sample_images'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"json-settings-reader\">\n<h2>json settings reader</h2>\n<p>make_json_settings_reader - tool to read settings from json file (e.g. secret settings).</p>\n<pre><span class=\"c1\"># create settings reader</span>\n<span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"n\">make_json_settings_reader</span><span class=\"p\">(</span><span class=\"n\">subroot</span><span class=\"p\">(</span><span class=\"s1\">'conf/secrets.json'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># use it for reading settings</span>\n<span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'ENGINE'</span><span class=\"p\">:</span> <span class=\"s1\">'django.db.backends.postgresql_psycopg2'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'NAME'</span><span class=\"p\">:</span> <span class=\"s1\">'mydbname'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'USER'</span><span class=\"p\">:</span> <span class=\"s1\">'mydbuser'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'PASSWORD'</span><span class=\"p\">:</span> <span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s1\">'DATABASE_PASSWORD'</span><span class=\"p\">],</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s1\">'SECRET_KEY'</span><span class=\"p\">]</span>\n</pre>\n<p>Data in json file must be represented as dict:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"SECRET_KEY\"</span><span class=\"p\">:</span> <span class=\"s2\">\"user123\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"DATABASE_PASSWORD\"</span><span class=\"p\">:</span> <span class=\"s2\">\"user123\"</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2122057, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "970f01abb54e35303c7767a76bb27f84", "sha256": "d6efd5ce660206f566aa3b8ba47b8c507e4c065122639cc50e5d497e53339548"}, "downloads": -1, "filename": "django_before-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "970f01abb54e35303c7767a76bb27f84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5243, "upload_time": "2016-05-18T16:14:37", "upload_time_iso_8601": "2016-05-18T16:14:37.190483Z", "url": "https://files.pythonhosted.org/packages/15/7a/bf7a2f44ca3aa20e4b31e8dd983067a2b8fb485720e3f9ca476221b3621e/django_before-1.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "970f01abb54e35303c7767a76bb27f84", "sha256": "d6efd5ce660206f566aa3b8ba47b8c507e4c065122639cc50e5d497e53339548"}, "downloads": -1, "filename": "django_before-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "970f01abb54e35303c7767a76bb27f84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5243, "upload_time": "2016-05-18T16:14:37", "upload_time_iso_8601": "2016-05-18T16:14:37.190483Z", "url": "https://files.pythonhosted.org/packages/15/7a/bf7a2f44ca3aa20e4b31e8dd983067a2b8fb485720e3f9ca476221b3621e/django_before-1.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:37:26 2020"}