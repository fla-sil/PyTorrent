{"info": {"author": "timothy.mugayi", "author_email": "django.course@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Boto3 SQS Extended Client Library for Python\n===========================================\n\n[![Build Status](https://travis-ci.org/timothymugayi/boto3-sqs-extended-client-lib.svg?branch=master)](https://travis-ci.org/timothymugayi/boto3-sqs-extended-client-lib)\n[![codecov](https://codecov.io/gh/timothymugayi/boto3-sqs-extended-client-lib/branch/master/graph/badge.svg)](https://codecov.io/gh/timothymugayi/boto3-sqs-extended-client-lib)\n\nThe **Amazon SQS Extended Client Library for Python has been modelled after the original Amazon SQS Extended client library** This python library enables you to manage Amazon SQS message payloads with Amazon S3. This is especially useful for storing and retrieving messages with a message payload size greater than the current SQS limit of 256 KB, up to a maximum of 2 GB. Specifically, you can use this library to:\n\n* Specify whether message payloads are always stored in Amazon S3 or only when a message's size exceeds 256 KB.\n\n* Send a message that references a single message object stored in an Amazon S3 bucket.\n\n* Get the corresponding message object from an Amazon S3 bucket.\n\n* Delete the corresponding message object from an Amazon S3 bucket.\n\n## Getting Started\n\n* **Sign up for AWS** -- Before you begin, you need an AWS account. For more information about creating an AWS account and retrieving your AWS credentials, see [AWS Account and Credentials.\n* **Sign up for Amazon SQS** -- Go to the Amazon [SQS console](https://console.aws.amazon.com/sqs/home?region=us-east-1) to sign up for the service.\n\n* **Minimum requirements** -- To use the sample application, you'll need python 3 (and above)\n\n* **Further information** - Read the [API documentation](http://aws.amazon.com/documentation/sqs/).\n\n\n## Usage\n```\n    import base64\n\n    from pysqs_extended_client.SQSClientExtended import SQSClientExtended\n    \n    # from string import ascii_letters, digits\n    # from random import choice\n    \n    from pysqs_extended_client.config import (AWS_SQS_QUEUE_URL, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION)\n    \n    if __name__ == '__main__':\n    \n        sqs = SQSClientExtended(AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION, 'tiptapcode-sqs-data')\n    \n        # _100mb_large_string = ''.join([choice(ascii_letters + digits) for i in range(104857600)])\n    \n        # message = \"_100mb_large_string\"\n    \n        message = None\n        with open(\"C:\\\\DjangoCourse\\\\Courses\\\\celery\\\\introduction-promo.mp4\", \"rb\") as image_file:\n            encoded_string = base64.b64encode(image_file.read())\n            message = encoded_string.decode(\"utf-8\")\n    \n        sqs.send_message(AWS_SQS_QUEUE_URL, message)\n    \n        res = sqs.receive_message(AWS_SQS_QUEUE_URL)\n    \n        for message in res:\n            sqs.delete_message(AWS_SQS_QUEUE_URL, message.get('ReceiptHandle'))\n\n```\n\n\n## Feedback\n* Give feedback [here](https://github.com/timothymugayi/boto3-sqs-extended-client-lib/issues).\n* If you'd like to contribute a new feature or bug fix, go ahead submit a pull request.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/timothymugayi/boto3-sqs-extended-client-lib", "keywords": "SQS client python,SQS client,sqs extended client,aws sqs client,boto sqs client,large message sqs,sqs s3,sqs", "license": "", "maintainer": "", "maintainer_email": "", "name": "pysqs-extended-client", "package_url": "https://pypi.org/project/pysqs-extended-client/", "platform": "any", "project_url": "https://pypi.org/project/pysqs-extended-client/", "project_urls": {"Homepage": "https://github.com/timothymugayi/boto3-sqs-extended-client-lib"}, "release_url": "https://pypi.org/project/pysqs-extended-client/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Amazon SQS Extended Client Library for Python for sending large payloads that exceed sqs limitations via S3", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Boto3 SQS Extended Client Library for Python</h1>\n<p><a href=\"https://travis-ci.org/timothymugayi/boto3-sqs-extended-client-lib\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f4ba0ae4bece5e15047b6dbabf1c6f6924ed9a66/68747470733a2f2f7472617669732d63692e6f72672f74696d6f7468796d75676179692f626f746f332d7371732d657874656e6465642d636c69656e742d6c69622e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/timothymugayi/boto3-sqs-extended-client-lib\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8055651e12d778af50347f1922b9554a96d0517d/68747470733a2f2f636f6465636f762e696f2f67682f74696d6f7468796d75676179692f626f746f332d7371732d657874656e6465642d636c69656e742d6c69622f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>The <strong>Amazon SQS Extended Client Library for Python has been modelled after the original Amazon SQS Extended client library</strong> This python library enables you to manage Amazon SQS message payloads with Amazon S3. This is especially useful for storing and retrieving messages with a message payload size greater than the current SQS limit of 256 KB, up to a maximum of 2 GB. Specifically, you can use this library to:</p>\n<ul>\n<li>\n<p>Specify whether message payloads are always stored in Amazon S3 or only when a message's size exceeds 256 KB.</p>\n</li>\n<li>\n<p>Send a message that references a single message object stored in an Amazon S3 bucket.</p>\n</li>\n<li>\n<p>Get the corresponding message object from an Amazon S3 bucket.</p>\n</li>\n<li>\n<p>Delete the corresponding message object from an Amazon S3 bucket.</p>\n</li>\n</ul>\n<h2>Getting Started</h2>\n<ul>\n<li>\n<p><strong>Sign up for AWS</strong> -- Before you begin, you need an AWS account. For more information about creating an AWS account and retrieving your AWS credentials, see [AWS Account and Credentials.</p>\n</li>\n<li>\n<p><strong>Sign up for Amazon SQS</strong> -- Go to the Amazon <a href=\"https://console.aws.amazon.com/sqs/home?region=us-east-1\" rel=\"nofollow\">SQS console</a> to sign up for the service.</p>\n</li>\n<li>\n<p><strong>Minimum requirements</strong> -- To use the sample application, you'll need python 3 (and above)</p>\n</li>\n<li>\n<p><strong>Further information</strong> - Read the <a href=\"http://aws.amazon.com/documentation/sqs/\" rel=\"nofollow\">API documentation</a>.</p>\n</li>\n</ul>\n<h2>Usage</h2>\n<pre><code>    import base64\n\n    from pysqs_extended_client.SQSClientExtended import SQSClientExtended\n    \n    # from string import ascii_letters, digits\n    # from random import choice\n    \n    from pysqs_extended_client.config import (AWS_SQS_QUEUE_URL, AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION)\n    \n    if __name__ == '__main__':\n    \n        sqs = SQSClientExtended(AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION, 'tiptapcode-sqs-data')\n    \n        # _100mb_large_string = ''.join([choice(ascii_letters + digits) for i in range(104857600)])\n    \n        # message = \"_100mb_large_string\"\n    \n        message = None\n        with open(\"C:\\\\DjangoCourse\\\\Courses\\\\celery\\\\introduction-promo.mp4\", \"rb\") as image_file:\n            encoded_string = base64.b64encode(image_file.read())\n            message = encoded_string.decode(\"utf-8\")\n    \n        sqs.send_message(AWS_SQS_QUEUE_URL, message)\n    \n        res = sqs.receive_message(AWS_SQS_QUEUE_URL)\n    \n        for message in res:\n            sqs.delete_message(AWS_SQS_QUEUE_URL, message.get('ReceiptHandle'))\n\n</code></pre>\n<h2>Feedback</h2>\n<ul>\n<li>Give feedback <a href=\"https://github.com/timothymugayi/boto3-sqs-extended-client-lib/issues\" rel=\"nofollow\">here</a>.</li>\n<li>If you'd like to contribute a new feature or bug fix, go ahead submit a pull request.</li>\n</ul>\n\n          </div>"}, "last_serial": 6149092, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "30bcf1aca75878eaf2c51f6f2f981465", "sha256": "4671baf6970f2dd99f0195144f11c1527fff8741511c5c2bc750dd88cf30c928"}, "downloads": -1, "filename": "pysqs-extended-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "30bcf1aca75878eaf2c51f6f2f981465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6964, "upload_time": "2019-11-17T01:10:16", "upload_time_iso_8601": "2019-11-17T01:10:16.381333Z", "url": "https://files.pythonhosted.org/packages/f5/b4/fc4bdd7470fc8f8ae3581008f91dbe36ec2fbf494fce9291d16e52bcd2e7/pysqs-extended-client-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30bcf1aca75878eaf2c51f6f2f981465", "sha256": "4671baf6970f2dd99f0195144f11c1527fff8741511c5c2bc750dd88cf30c928"}, "downloads": -1, "filename": "pysqs-extended-client-0.0.1.tar.gz", "has_sig": false, "md5_digest": "30bcf1aca75878eaf2c51f6f2f981465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6964, "upload_time": "2019-11-17T01:10:16", "upload_time_iso_8601": "2019-11-17T01:10:16.381333Z", "url": "https://files.pythonhosted.org/packages/f5/b4/fc4bdd7470fc8f8ae3581008f91dbe36ec2fbf494fce9291d16e52bcd2e7/pysqs-extended-client-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:08 2020"}