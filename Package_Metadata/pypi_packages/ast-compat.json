{"info": {"author": "thautwarm", "author_email": "twshere@outlook.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython"], "description": "# AST-Compat\n\nbackward compatibility library for Python standard library `ast`.\n\n## What is AST-Compat for?\n\n- **backward compatibility for constructing ASTs**\n\n    For instance, `ast.arguments` is changed since Python 3.8, that another field `posonlyarg` is introduced,\n    hence you should construct an `ast.arguments` with an additional argument `posonlyarg=...` since Python 3.8\n    and it wouldn't work if your code is written before Python 3.8.\n\n    Through `ast_compat`, you don't have to worry about above question if a new argument is **optional or a list**.\n\n    **Note that you should use `ast_compat.XXX` instead of `ast.XXX` to construct ASTs.**\n\n- Support **ast.Constant** before Python 3.6.\n\n    `ast.Constant` is convenient, and things like `ast.Num` are redundant according to this observation and improvement: https://bugs.python.org/issue32892\n\n    However, `ast.Constant` is not available in 3.5 or earlier versions, thus we backport `ast.Constant` in this library.\n\n    To access the content of `ast.Constant` in a compatible way, use `ast_compat.get_constant` instead of `.value`.\n\n- Support dumping AST to string with **ast_compat.unparse**, which synchronizes the tooling code provided by CPython official repo.\n\n## Usage        \n\n```python\nimport ast_compat as astc\nfrom ast_compat import get_constant\n\nassert get_constant(astc.Constant((1, 2))) == (1, 2)\n\nempty_args = astc.arguments() # work for all of Python 3.5-3.9\n```\n\n\n## Implementation, and rebuild\n\nThe compatibility is following the specification of Python ASTs, i.e,\nthe ADSL file you can find at\n\n`https://github.com/python/cpython/blob/<branch/tag>/Parser/Python.asdl`.\n\nWe parse the file, and generate verifications and default argument factories,\ncheck `ast_compat/compat3k*_{ast|unparse}.py`. To explain, `ast_compat/compat3k5_*.py` is for\nPython 3.5, and `ast_compat/compat3k9_*.py` is for Python 3.9.\n\nThe file of generator is `generate_ast_compat.py`, and the use of generator API is in this way:\n\n```python\nfrom generate_ast_compat import compat\ncompat((3, 5)) # generate ast_compat/compat3k5_ast.py and  ast_compat/compat3k5_unparse.py\ncompat((3, 6))\ncompat((3, 7))\ncompat((3, 8))\nprerelease_url = \"https://raw.githubusercontent.com/python/cpython/v3.9.0a3/parser/python.asdl\"\ncompat((3, 9), prerelease_url)\n```\n\nThe code generation needs Python 3.7+,\nthough this library works for Python 3.5 and 3.5+.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/python-compiler-tools/ast-compat", "keywords": "ast compat", "license": "mit", "maintainer": "", "maintainer_email": "", "name": "ast-compat", "package_url": "https://pypi.org/project/ast-compat/", "platform": "any", "project_url": "https://pypi.org/project/ast-compat/", "project_urls": {"Homepage": "https://github.com/python-compiler-tools/ast-compat"}, "release_url": "https://pypi.org/project/ast-compat/0.10.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "cross-version compatible ast library", "version": "0.10.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AST-Compat</h1>\n<p>backward compatibility library for Python standard library <code>ast</code>.</p>\n<h2>What is AST-Compat for?</h2>\n<ul>\n<li>\n<p><strong>backward compatibility for constructing ASTs</strong></p>\n<p>For instance, <code>ast.arguments</code> is changed since Python 3.8, that another field <code>posonlyarg</code> is introduced,\nhence you should construct an <code>ast.arguments</code> with an additional argument <code>posonlyarg=...</code> since Python 3.8\nand it wouldn't work if your code is written before Python 3.8.</p>\n<p>Through <code>ast_compat</code>, you don't have to worry about above question if a new argument is <strong>optional or a list</strong>.</p>\n<p><strong>Note that you should use <code>ast_compat.XXX</code> instead of <code>ast.XXX</code> to construct ASTs.</strong></p>\n</li>\n<li>\n<p>Support <strong>ast.Constant</strong> before Python 3.6.</p>\n<p><code>ast.Constant</code> is convenient, and things like <code>ast.Num</code> are redundant according to this observation and improvement: <a href=\"https://bugs.python.org/issue32892\" rel=\"nofollow\">https://bugs.python.org/issue32892</a></p>\n<p>However, <code>ast.Constant</code> is not available in 3.5 or earlier versions, thus we backport <code>ast.Constant</code> in this library.</p>\n<p>To access the content of <code>ast.Constant</code> in a compatible way, use <code>ast_compat.get_constant</code> instead of <code>.value</code>.</p>\n</li>\n<li>\n<p>Support dumping AST to string with <strong>ast_compat.unparse</strong>, which synchronizes the tooling code provided by CPython official repo.</p>\n</li>\n</ul>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ast_compat</span> <span class=\"k\">as</span> <span class=\"nn\">astc</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ast_compat</span> <span class=\"kn\">import</span> <span class=\"n\">get_constant</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">get_constant</span><span class=\"p\">(</span><span class=\"n\">astc</span><span class=\"o\">.</span><span class=\"n\">Constant</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)))</span> <span class=\"o\">==</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">empty_args</span> <span class=\"o\">=</span> <span class=\"n\">astc</span><span class=\"o\">.</span><span class=\"n\">arguments</span><span class=\"p\">()</span> <span class=\"c1\"># work for all of Python 3.5-3.9</span>\n</pre>\n<h2>Implementation, and rebuild</h2>\n<p>The compatibility is following the specification of Python ASTs, i.e,\nthe ADSL file you can find at</p>\n<p><code>https://github.com/python/cpython/blob/&lt;branch/tag&gt;/Parser/Python.asdl</code>.</p>\n<p>We parse the file, and generate verifications and default argument factories,\ncheck <code>ast_compat/compat3k*_{ast|unparse}.py</code>. To explain, <code>ast_compat/compat3k5_*.py</code> is for\nPython 3.5, and <code>ast_compat/compat3k9_*.py</code> is for Python 3.9.</p>\n<p>The file of generator is <code>generate_ast_compat.py</code>, and the use of generator API is in this way:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">generate_ast_compat</span> <span class=\"kn\">import</span> <span class=\"n\">compat</span>\n<span class=\"n\">compat</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span> <span class=\"c1\"># generate ast_compat/compat3k5_ast.py and  ast_compat/compat3k5_unparse.py</span>\n<span class=\"n\">compat</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">))</span>\n<span class=\"n\">compat</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">))</span>\n<span class=\"n\">compat</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">))</span>\n<span class=\"n\">prerelease_url</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://raw.githubusercontent.com/python/cpython/v3.9.0a3/parser/python.asdl\"</span>\n<span class=\"n\">compat</span><span class=\"p\">((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"n\">prerelease_url</span><span class=\"p\">)</span>\n</pre>\n<p>The code generation needs Python 3.7+,\nthough this library works for Python 3.5 and 3.5+.</p>\n\n          </div>"}, "last_serial": 7045024, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0cab980ea722e312aa955cde522dc301", "sha256": "b16934829176bfcc840693f308693c6022fdf6fc33fcf2ed20f699eb586f9693"}, "downloads": -1, "filename": "ast_compat-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0cab980ea722e312aa955cde522dc301", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 2318, "upload_time": "2020-01-07T20:00:04", "upload_time_iso_8601": "2020-01-07T20:00:04.121385Z", "url": "https://files.pythonhosted.org/packages/54/c2/7e88fdc420252e74ef8d07839fd6e24f270eb8a8f39e8ae90446141fa6e2/ast_compat-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c92c3941a5526a6ef77f487a0d4d44f", "sha256": "1b881a39c03d8e43747e26888a621259ebf533ab8f4f618d12bd50809b78dbbd"}, "downloads": -1, "filename": "ast-compat-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0c92c3941a5526a6ef77f487a0d4d44f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 1797, "upload_time": "2020-01-07T20:00:06", "upload_time_iso_8601": "2020-01-07T20:00:06.282655Z", "url": "https://files.pythonhosted.org/packages/fd/34/d185ccabba091258694f7ed3c0e8da933bfafadb302f26616f5829936fe4/ast-compat-0.1.0.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "66f4061d7888c7a4008971df68f45dd0", "sha256": "f9643690db32fa0768832c025a5b506e3b8d058beb2f4e576bbddcb40000608d"}, "downloads": -1, "filename": "ast_compat-0.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "66f4061d7888c7a4008971df68f45dd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 38254, "upload_time": "2020-04-18T00:27:09", "upload_time_iso_8601": "2020-04-18T00:27:09.687348Z", "url": "https://files.pythonhosted.org/packages/66/63/af6af3e03f418c523a99ef40aa18788bf3c4a987cca4cae1b949038e87a1/ast_compat-0.10.0-py3-none-any.whl", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "706973e2cb7cb611d608faa6336d1f0c", "sha256": "767588b335725d6fa96ba9985e41fd8ee1587dc2beff25dbea7549493925c13c"}, "downloads": -1, "filename": "ast_compat-0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "706973e2cb7cb611d608faa6336d1f0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17687, "upload_time": "2020-02-11T11:54:10", "upload_time_iso_8601": "2020-02-11T11:54:10.991497Z", "url": "https://files.pythonhosted.org/packages/4c/70/e5d85036db53871e920f2eb0e51cee0fbb6672018a0553e5b1f25e7de6a6/ast_compat-0.9-py3-none-any.whl", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "f898f788406a41e758079844982676ea", "sha256": "68d6a0c35656a78a77dc9a253b7fdecc02ac6c4d592d0173d2f1681265825d25"}, "downloads": -1, "filename": "ast_compat-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f898f788406a41e758079844982676ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19623, "upload_time": "2020-02-12T06:10:33", "upload_time_iso_8601": "2020-02-12T06:10:33.488294Z", "url": "https://files.pythonhosted.org/packages/3c/e0/eaa1a67288e35c17915376c649a8caadd02a6c2fe703ed7c4d50de924a2b/ast_compat-0.9.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66f4061d7888c7a4008971df68f45dd0", "sha256": "f9643690db32fa0768832c025a5b506e3b8d058beb2f4e576bbddcb40000608d"}, "downloads": -1, "filename": "ast_compat-0.10.0-py3-none-any.whl", "has_sig": false, "md5_digest": "66f4061d7888c7a4008971df68f45dd0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 38254, "upload_time": "2020-04-18T00:27:09", "upload_time_iso_8601": "2020-04-18T00:27:09.687348Z", "url": "https://files.pythonhosted.org/packages/66/63/af6af3e03f418c523a99ef40aa18788bf3c4a987cca4cae1b949038e87a1/ast_compat-0.10.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 18:16:51 2020"}