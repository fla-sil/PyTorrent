{"info": {"author": "Bigcommerce Engineering", "author_email": "vip@bigcommerce.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Office/Business", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Bigcommerce API V2 - Python Client\r\n==================================\r\n\r\n**Note:** The Bigcommerce API client is now located in the\r\n`bigcommerce <https://pypi.python.org/pypi/bigcommerce>`__ package.\r\n\r\nWrapper over the ``requests`` library for communicating with the\r\nBigcommerce v2 API.\r\n\r\nNeeds ``requests`` and ``streql`` (run ``pip install bigcommerce-api``\r\nfor easiest way to install), and ``nose`` and ``vcrpy`` to run the\r\ntests.\r\n\r\nUsage\r\n-----\r\n\r\nConnecting\r\n~~~~~~~~~~\r\n\r\n.. code:: python\r\n\r\n    import bigcommerce\r\n\r\n    # OAuth2-based connection\r\n    # Access_token is optional, if you don't have one you can use oauth_fetch_token (see below)\r\n    api = bigcommerce.api.BigcommerceApi(client_id='', store_hash='', access_token='')\r\n\r\n    # Legacy Basic authentication\r\n    api = bigcommerce.api.BigcommerceApi(host='https://store.mybigcommerce.com', auth=('username', 'api token'))\r\n\r\n``BigcommerceApi`` also provides two helper methods for connection with\r\nOAuth2:\r\n\r\n-  ``api.oauth_fetch_token(client_secret, client_secret, code, context, scope, redirect_uri)``\r\n   \u2013 fetches and returns an access token for your application. As a side\r\n   effect, configures ``api`` to be ready for use.\r\n\r\n-  ``BigcommerceApi.oauth_verify_payload(signed_payload, client_secret)``\r\n   \u2013 Returns user data from a signed payload.\r\n\r\nAccessing and objects\r\n~~~~~~~~~~~~~~~~~~~~~\r\n\r\nThe ``api`` object provides access to each API resource, each of which\r\nprovides CRUD operations, depending on capabilities of the resource:\r\n\r\n.. code:: python\r\n\r\n    api.Products.all()                         # GET /products\r\n    api.Products.get(1)                        # GET /products/1\r\n    api.Products.create(name='', type='', ...) # POST /products\r\n    api.Products.get(1).update(price='199.90') # PUT /products/1\r\n    api.Products.delete_all()                  # DELETE /products\r\n    api.Products.get(1).delete()               # DELETE /products/1\r\n\r\nThe client provides full access to subresources, both as independent\r\nresources:\r\n\r\n::\r\n\r\n    api.ProductOptions.get(1)                  # GET /products/1/options\r\n    api.ProductOptions.get(1, 2)               # GET /products/1/options/2\r\n\r\nAnd as helper methods on the parent resoource:\r\n\r\n::\r\n\r\n    api.Products.get(1).options()              # GET /products/1/options\r\n    api.Products.get(1).options(1)             # GET /products/1/options/1\r\n\r\nThese subresources implement CRUD methods in exactly the same way as\r\nregular resources:\r\n\r\n::\r\n\r\n    api.Products.get(1).options(1).delete()\r\n\r\nFilters\r\n~~~~~~~\r\n\r\nFilters can be applied to ``all`` methods as keyword arguments:\r\n\r\n.. code:: python\r\n\r\n    customer = api.Customers.all(first_name='John', last_name='Smith')[0]\r\n    orders = api.Orders.all(customer_id=customer.id)\r\n\r\nError handling\r\n~~~~~~~~~~~~~~\r\n\r\nMinimal validation of data is performed by the client, instead deferring\r\nthis to the server. A ``HttpException`` will be raised for any unusual\r\nstatus code:\r\n\r\n-  3xx status code: ``RedirectionException``\r\n-  4xx status code: ``ClientRequestException``\r\n-  5xx status code: ``ServerException``\r\n\r\nThe low level API\r\n-----------------\r\n\r\nThe high level API provided by ``bigcommerce.api.BigcommerceApi`` is a\r\nwrapper around a lower level api in ``bigcommerce.connection``. This can\r\nbe accessed through ``api.connection``, and provides helper methods for\r\nget/post/put/delete operations.\r\n\r\nFurther documentation\r\n---------------------\r\n\r\nFull documentation of the API is available at\r\n`developer.bigcommerce.com <http://developer.bigcommerce.com>`__\r\n\r\nTo do\r\n-----\r\n\r\n-  Count endpoints\r\n-  Automatic enumeration of multiple page responses", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bigcommerce/bigcommerce-api-python", "keywords": "bigcommerce api client", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bigcommerce-api", "package_url": "https://pypi.org/project/bigcommerce-api/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bigcommerce-api/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bigcommerce/bigcommerce-api-python"}, "release_url": "https://pypi.org/project/bigcommerce-api/0.10.1/", "requires_dist": null, "requires_python": null, "summary": "(Deprecated) Connect Python applications with the Bigcommerce API", "version": "0.10.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Note:</strong> The Bigcommerce API client is now located in the\n<a href=\"https://pypi.python.org/pypi/bigcommerce\" rel=\"nofollow\">bigcommerce</a> package.</p>\n<p>Wrapper over the <tt>requests</tt> library for communicating with the\nBigcommerce v2 API.</p>\n<p>Needs <tt>requests</tt> and <tt>streql</tt> (run <tt>pip install <span class=\"pre\">bigcommerce-api</span></tt>\nfor easiest way to install), and <tt>nose</tt> and <tt>vcrpy</tt> to run the\ntests.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"connecting\">\n<h3>Connecting</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">bigcommerce</span>\n\n<span class=\"c1\"># OAuth2-based connection</span>\n<span class=\"c1\"># Access_token is optional, if you don't have one you can use oauth_fetch_token (see below)</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">bigcommerce</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">BigcommerceApi</span><span class=\"p\">(</span><span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">store_hash</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">access_token</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Legacy Basic authentication</span>\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">bigcommerce</span><span class=\"o\">.</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">BigcommerceApi</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'https://store.mybigcommerce.com'</span><span class=\"p\">,</span> <span class=\"n\">auth</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'username'</span><span class=\"p\">,</span> <span class=\"s1\">'api token'</span><span class=\"p\">))</span>\n</pre>\n<p><tt>BigcommerceApi</tt> also provides two helper methods for connection with\nOAuth2:</p>\n<ul>\n<li><tt>api.oauth_fetch_token(client_secret, client_secret, code, context, scope, redirect_uri)</tt>\n\u2013 fetches and returns an access token for your application. As a side\neffect, configures <tt>api</tt> to be ready for use.</li>\n<li><tt>BigcommerceApi.oauth_verify_payload(signed_payload, client_secret)</tt>\n\u2013 Returns user data from a signed payload.</li>\n</ul>\n</div>\n<div id=\"accessing-and-objects\">\n<h3>Accessing and objects</h3>\n<p>The <tt>api</tt> object provides access to each API resource, each of which\nprovides CRUD operations, depending on capabilities of the resource:</p>\n<pre><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Products</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>                         <span class=\"c1\"># GET /products</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Products</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>                        <span class=\"c1\"># GET /products/1</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Products</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"c1\"># POST /products</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Products</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">price</span><span class=\"o\">=</span><span class=\"s1\">'199.90'</span><span class=\"p\">)</span> <span class=\"c1\"># PUT /products/1</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Products</span><span class=\"o\">.</span><span class=\"n\">delete_all</span><span class=\"p\">()</span>                  <span class=\"c1\"># DELETE /products</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Products</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>               <span class=\"c1\"># DELETE /products/1</span>\n</pre>\n<p>The client provides full access to subresources, both as independent\nresources:</p>\n<pre>api.ProductOptions.get(1)                  # GET /products/1/options\napi.ProductOptions.get(1, 2)               # GET /products/1/options/2\n</pre>\n<p>And as helper methods on the parent resoource:</p>\n<pre>api.Products.get(1).options()              # GET /products/1/options\napi.Products.get(1).options(1)             # GET /products/1/options/1\n</pre>\n<p>These subresources implement CRUD methods in exactly the same way as\nregular resources:</p>\n<pre>api.Products.get(1).options(1).delete()\n</pre>\n</div>\n<div id=\"filters\">\n<h3>Filters</h3>\n<p>Filters can be applied to <tt>all</tt> methods as keyword arguments:</p>\n<pre><span class=\"n\">customer</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Customers</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"n\">last_name</span><span class=\"o\">=</span><span class=\"s1\">'Smith'</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">orders</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">Orders</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">customer_id</span><span class=\"o\">=</span><span class=\"n\">customer</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"error-handling\">\n<h3>Error handling</h3>\n<p>Minimal validation of data is performed by the client, instead deferring\nthis to the server. A <tt>HttpException</tt> will be raised for any unusual\nstatus code:</p>\n<ul>\n<li>3xx status code: <tt>RedirectionException</tt></li>\n<li>4xx status code: <tt>ClientRequestException</tt></li>\n<li>5xx status code: <tt>ServerException</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"the-low-level-api\">\n<h2>The low level API</h2>\n<p>The high level API provided by <tt>bigcommerce.api.BigcommerceApi</tt> is a\nwrapper around a lower level api in <tt>bigcommerce.connection</tt>. This can\nbe accessed through <tt>api.connection</tt>, and provides helper methods for\nget/post/put/delete operations.</p>\n</div>\n<div id=\"further-documentation\">\n<h2>Further documentation</h2>\n<p>Full documentation of the API is available at\n<a href=\"http://developer.bigcommerce.com\" rel=\"nofollow\">developer.bigcommerce.com</a></p>\n</div>\n<div id=\"to-do\">\n<h2>To do</h2>\n<ul>\n<li>Count endpoints</li>\n<li>Automatic enumeration of multiple page responses</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1755632, "releases": {"0.10.1": [{"comment_text": "", "digests": {"md5": "541e55afc4e93f66ac89f196ae5d7554", "sha256": "cb3d318a5fcf8d328028e878cb2aa1be9f4864d6a2a214c6d1bbbd39338c5316"}, "downloads": -1, "filename": "bigcommerce-api-0.10.1.tar.gz", "has_sig": false, "md5_digest": "541e55afc4e93f66ac89f196ae5d7554", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9981, "upload_time": "2014-02-09T07:27:42", "upload_time_iso_8601": "2014-02-09T07:27:42.077575Z", "url": "https://files.pythonhosted.org/packages/af/98/dcb1cc74b0df40d5cbe7dc5ff7cfc95b612c7c5df787492f863cb148797f/bigcommerce-api-0.10.1.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "9bd769c7f2b02d269ce53953eff4d2d7", "sha256": "606336616a03f2de93aeaddd238624509255f5812535937491580001d3c0d95c"}, "downloads": -1, "filename": "bigcommerce-api-0.9.0.tar.gz", "has_sig": false, "md5_digest": "9bd769c7f2b02d269ce53953eff4d2d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5697, "upload_time": "2014-01-07T00:59:14", "upload_time_iso_8601": "2014-01-07T00:59:14.586861Z", "url": "https://files.pythonhosted.org/packages/a6/75/70fea9f4673793034af39777544cb5c695bdd0a894473520171f718c44a3/bigcommerce-api-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "a24511f058e4318d94653e64ab70d208", "sha256": "2fe6b7178f429ec507e4085b5634825efb1aa2b84148429d7790aafb449c4c39"}, "downloads": -1, "filename": "bigcommerce-api-0.9.1.tar.gz", "has_sig": false, "md5_digest": "a24511f058e4318d94653e64ab70d208", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5846, "upload_time": "2014-01-07T01:13:16", "upload_time_iso_8601": "2014-01-07T01:13:16.143381Z", "url": "https://files.pythonhosted.org/packages/d9/c1/33d190091af5ea5b271730f29e2350aa5e19509dbacd7297e50f0e8970b4/bigcommerce-api-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "ad87a2afb609991bc384e4cd13efa4f5", "sha256": "6a8278015e80ebfb87dd5e6c0e2354783c3daaf4be6b85e5687dccc9540f5d5c"}, "downloads": -1, "filename": "bigcommerce-api-0.9.2.tar.gz", "has_sig": false, "md5_digest": "ad87a2afb609991bc384e4cd13efa4f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8885, "upload_time": "2014-01-07T03:44:29", "upload_time_iso_8601": "2014-01-07T03:44:29.759425Z", "url": "https://files.pythonhosted.org/packages/b1/d0/34f3492ea6bfc104d66dce0b754116937164a5359cb9a56daee760cc5e75/bigcommerce-api-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "6d4af0ccd5d591bfe8eb0c4bfdd9853d", "sha256": "051c00c5245ff7066a69944d740bd58beacdca4c8d5ed01fa9da61d646542f2f"}, "downloads": -1, "filename": "bigcommerce-api-0.9.3.tar.gz", "has_sig": false, "md5_digest": "6d4af0ccd5d591bfe8eb0c4bfdd9853d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7632, "upload_time": "2014-01-08T04:04:05", "upload_time_iso_8601": "2014-01-08T04:04:05.028970Z", "url": "https://files.pythonhosted.org/packages/67/65/d24f459712d47a2fa6eab2a682f0b3ade6db398ad69cbfb56645d1d437b6/bigcommerce-api-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "016c4316ba357b5fe09dfde3f5d5a4f0", "sha256": "db5542b8167a6fdc83d9442096a8fe5f55d5c311b82a34424516735acb9d65a8"}, "downloads": -1, "filename": "bigcommerce-api-0.9.4.tar.gz", "has_sig": false, "md5_digest": "016c4316ba357b5fe09dfde3f5d5a4f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8676, "upload_time": "2014-01-09T03:43:21", "upload_time_iso_8601": "2014-01-09T03:43:21.659650Z", "url": "https://files.pythonhosted.org/packages/b6/94/8958fed0e94373b132fd235a848ad2342467e67d39cd98c83e3975df1a2f/bigcommerce-api-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "be9921f3ec5121bdba3fad80b4ea759d", "sha256": "9b3b506d0e36f8adf5f336b2af936e4eb06b795f2b99f614ca58508329e06e1d"}, "downloads": -1, "filename": "bigcommerce-api-0.9.5.tar.gz", "has_sig": false, "md5_digest": "be9921f3ec5121bdba3fad80b4ea759d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8323, "upload_time": "2014-01-30T04:22:49", "upload_time_iso_8601": "2014-01-30T04:22:49.873268Z", "url": "https://files.pythonhosted.org/packages/2a/3e/cd537e951b62c83a25f51890d27c27b20cf74e539a6eba37fd00f18813c3/bigcommerce-api-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "541e55afc4e93f66ac89f196ae5d7554", "sha256": "cb3d318a5fcf8d328028e878cb2aa1be9f4864d6a2a214c6d1bbbd39338c5316"}, "downloads": -1, "filename": "bigcommerce-api-0.10.1.tar.gz", "has_sig": false, "md5_digest": "541e55afc4e93f66ac89f196ae5d7554", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9981, "upload_time": "2014-02-09T07:27:42", "upload_time_iso_8601": "2014-02-09T07:27:42.077575Z", "url": "https://files.pythonhosted.org/packages/af/98/dcb1cc74b0df40d5cbe7dc5ff7cfc95b612c7c5df787492f863cb148797f/bigcommerce-api-0.10.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:35 2020"}