{"info": {"author": "Enigma Bridge", "author_email": "info@enigmabridge.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Security"], "description": "EnigmaBridge Amazon EC2 utils for PKI\n=====================================\n\nThis CLI setups a new fresh EJBCA (PKI) installation on EC2 instance\nwith a new `EnigmaBridge <https://enigmabridge.com>`__ identity.\n`EnigmaBridge <https://enigmabridge.com>`__ is integrated with EJBCA as\na new PKCS#11 crypto token, you can start using it to securely store\nyour root CA keys.\n\nThe cli looks like the following:\n\n::\n\n    --------------------------------------------------------------------------------\n        Enigma Bridge AWS command line interface (v0.0.14) \n\n        usage - shows simple command list\n        init  - initializes the key management system\n\n        More info: https://enigmabridge.com/amazonpki \n    --------------------------------------------------------------------------------\n    $> \n\nSpecific AMI is required - with JBoss EAP & EJBCA installed. More\ninformation on image setup can be found in\n`IMG-INSTALL <https://github.com/EnigmaBridge/ebaws.py/blob/master/IMG-INSTALL.md>`__\npage.\n\nFor info on the network communication flow during the installation\nplease refer to\n`connections <https://github.com/EnigmaBridge/ebaws.py/blob/master/connections.md>`__\npage.\n\nFeatures\n========\n\n-  EJBCA 6.3.1.1\n-  JBoss EAP 6.4\n-  SoftHSMv1-EnigmaBridge PKCS#11 adapter\n-  EnigmaBridge Dynamic DNS for AWS\n\nSoftHSMv1-EnigmaBridge PKCS#11 adapter\n--------------------------------------\n\n`SoftHSMv1-EB <https://github.com/EnigmaBridge/SoftHSMv1>`__ is a\nPKCS#11 interface for `EnigmaBridge <https://enigmabridge.com>`__\nservices. Using this adapter one can use our services using the generic\nPKCS#11 interface without need to modify the software.\n\nLike in EJBCA case, there is no need to modify the software which\nsupports PKCS#11, just plug our adapter to it and it starts working.\n\nOne can for example generate RSA keys via PKCS#11 adapter and call\nencrypt, decrypt, sign, verify operations on it. The keys are securely\nstored on EnigmaBridge servers, in the secure hardware. The\ncryptographic operation itself is performed in the secure hardware in a\ntransparent way.\n\nDynamic DNS\n-----------\n\nAmazon provides IP address to your EC2 instance from the IP pool. This\nkind of address is re-allocated after your instance is turned off. After\nnext start it will get a new IP address.\n\nUsually its convenient to have a static IP so you can map it to the\ndomain name or put in the config files, manuals, etc... You can buy\nAmazon Elastic IP which remains static even after instance restart or\nyou can use our `EnigmaBridge <https://enigmabridge.com>`__ Dynamic DNS\nfeature for the AWS.\n\nDuring the initialization we allocate a new domains for your running\ninstance, e.g., sunderland1.pki.enigmabridge.com. It has A record\npointing to your current IP address.\n\nAfter you restart your instance, our script is started. It connects to\nour DNS server and updates the A record for your domain in a secure way\n- request is signed with the key generated when domain was created.\n\nTime to live of the record is 600 seconds so after the restart the\nhostname is updated in 10 minutes.\n\nIn this way you will get the static DNS name even if your IP changes.\n\nRequirements\n============\n\nGenerally the host need to have TCP port 443 open for LetsEncrypt domain\nverification. Without that you won't get valid SSL certificate for your\nCA domain and you won't be able to access administration console of your\nEJBCA installation in a secure way.\n\nThe EJBCA itself runs on TCP port 8443. It depends on you how you set\nit. It don't necessarily have to be open to the world-fine. Its enough\nif you can access it somehow. e.g., it's possible to access EJBCA admin\nvia SSH tunnel. ``ssh -L 8443:localhost:8443 ami_ip``\n\nInit\n====\n\nThe init command starts a new fresh installation. If a previous\ninstallation is present it asks user whether to proceed, backups the old\ninstallation databases and config files and installs a new one.\n\nThe installation process looks like this:\n\n::\n\n    --------------------------------------------------------------------------------\n        Enigma Bridge AWS command line interface (v0.0.14) \n\n        usage - shows simple command list\n        init  - initializes the key management system\n\n        More info: https://enigmabridge.com/amazonpki \n    --------------------------------------------------------------------------------\n    $> init\n    Going to install PKI system and enrol it to the Enigma Bridge FIPS140-2 encryption service.\n\n    We need your email address for:\n       a) identity verification in case of a recovery / support \n       b) LetsEncrypt certificate registration\n    It's optional but we highly recommend to enter a valid e-mail address (especially on a production system)\n\n    Please enter your email address [empty]: tester@enigmabridge.com\n    Is this email correct? 'tester@enigmabridge.com' (Y/n):y\n\n    Checking if port 443 is open for LetsEncrypt, ip: 52.212.77.52\n\n    New domains registered for this host: \n      - sunderland1.pki.enigmabridge.com\n      - sr1.pki.enigmabridge.com\n\n    New configuration was written to: /etc/enigma/config.json\n\n    SoftHSMv1 configuration has been backed up to: None\n    New SoftHSMv1 configuration has been written to: /etc/softhsm.conf\n\n    SoftHSMv1 previous token database moved to: /var/lib/softhsm.old/softhsm_0018\n    SoftHSMv1 initialization: The token has been initialized.\n\n    Going to install PKI system\n      This may take 15 minutes or less. Please, do not interrupt the installation\n      and wait until the process completes.\n\n     - Updating settings\n\n     - Restarting application server, please wait...\n    .........\n     - Preparing environment for application server\n    ...................\n     - Restarting application server, please wait...\n    ...\n     - Deploying the PKI system\nn     - Installing the PKI system\nn    PKI installed successfully.\n\n    Going to generate EnigmaBridge keys in the crypto token:\n    ..................\n    EnigmaBridge tokens generated successfully\n    You can use these newly generated keys for your CA or generate another ones with:\n      sudo -E -H -u jboss /opt/ejbca_ce_6_3_1_1/bin/pkcs11HSM.sh generate /usr/lib64/softhsm/libsofthsm.so 2048 signKey 0\n      sudo -E -H -u jboss /opt/ejbca_ce_6_3_1_1/bin/pkcs11HSM.sh generate /usr/lib64/softhsm/libsofthsm.so 2048 defaultKey 0\n      sudo -E -H -u jboss /opt/ejbca_ce_6_3_1_1/bin/pkcs11HSM.sh generate /usr/lib64/softhsm/libsofthsm.so 1024 testKey 0\n\n    Adding an EnigmaBridge crypto token to your PKI instance:\n    .\n    EnigmaBridgeToken added to the PKI instance\n\n    Installing LetsEncrypt certificate for: sunderland1.pki.enigmabridge.com, sr1.pki.enigmabridge.com\n    ....\n    Publicly trusted certificate installed (issued by LetsEncrypt\n\n    --------------------------------------------------------------------------------\n\n\n\n    [OK] System installation is completed\n\n\n\n    --------------------------------------------------------------------------------\n\n    Please setup your computer for secure connections to your PKI key management system:\n\n    Download p12 file: /home/ec2-user/ejbca-admin.p12\n      scp -i <your_Amazon_PEM_key> ec2-user@sunderland1.pki.enigmabridge.com:/home/ec2-user/ejbca-admin.p12 .\n      Key import password is: g5Bkg79Lvk3Q8jVC\n\n    The following page can guide you through p12 import: https://enigmabridge.com/support/aws13076\n    Once you import the p12 file to your computer browser/keychain you can connect to the PKI admin interface:\n      https://sunderland1.pki.enigmabridge.com:8443/ejbca/adminweb/\n      https://sr1.pki.enigmabridge.com:8443/ejbca/adminweb/\n\nTroubleshooting\n===============\n\nError in installation of dependencies (cryptography, pyOpenSSL):\n``sorry, but this version only supports 100 named groups``\n[`100-named-groups <https://community.letsencrypt.org/t/certbot-auto-fails-while-setting-up-virtual-environment-complains-about-package-hashes/20529/18>`__]\n\nSolution: Install downgraded version of pycparser and pyOpenSSL:\n\n::\n\n    pip install pycparser==2.13\n    pip install pyOpenSSL==0.13\n    pip install cryptography\n\nYou may need to install some deps for the python packages\n\n::\n\n    yum install gcc g++ openssl-devel libffi-devel dialog\n\nSNI on Python < 2.7.9\n---------------------\n\nTLS SNI support was added to Python. For earlier versions SNI needs to\nbe added to Requests networking library.\n\n::\n\n    pip install urllib3\n    pip install pyopenssl\n    pip install ndg-httpsclient\n    pip install pyasn1\n\nMac OSX installation\n--------------------\n\nFor new OSX versions (El Capitan and above) the default system python\ninstallation cannot be modified with standard means. There are some\nworkarounds, but one can also use ``--user`` switch for pip.\n\n::\n\n    pip install --user cryptography", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EnigmaBridge/ebaws.py", "keywords": null, "license": "MIT License\n\nCopyright (c) 2016 Enigma bridge\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "ebaws.py", "package_url": "https://pypi.org/project/ebaws.py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ebaws.py/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/EnigmaBridge/ebaws.py"}, "release_url": "https://pypi.org/project/ebaws.py/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Enigma Bridge Python Utilities for AWS", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"enigmabridge-amazon-ec2-utils-for-pki\">\n<h2>EnigmaBridge Amazon EC2 utils for PKI</h2>\n<p>This CLI setups a new fresh EJBCA (PKI) installation on EC2 instance\nwith a new <a href=\"https://enigmabridge.com\" rel=\"nofollow\">EnigmaBridge</a> identity.\n<a href=\"https://enigmabridge.com\" rel=\"nofollow\">EnigmaBridge</a> is integrated with EJBCA as\na new PKCS#11 crypto token, you can start using it to securely store\nyour root CA keys.</p>\n<p>The cli looks like the following:</p>\n<pre>--------------------------------------------------------------------------------\n    Enigma Bridge AWS command line interface (v0.0.14)\n\n    usage - shows simple command list\n    init  - initializes the key management system\n\n    More info: https://enigmabridge.com/amazonpki\n--------------------------------------------------------------------------------\n$&gt;\n</pre>\n<p>Specific AMI is required - with JBoss EAP &amp; EJBCA installed. More\ninformation on image setup can be found in\n<a href=\"https://github.com/EnigmaBridge/ebaws.py/blob/master/IMG-INSTALL.md\" rel=\"nofollow\">IMG-INSTALL</a>\npage.</p>\n<p>For info on the network communication flow during the installation\nplease refer to\n<a href=\"https://github.com/EnigmaBridge/ebaws.py/blob/master/connections.md\" rel=\"nofollow\">connections</a>\npage.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>EJBCA 6.3.1.1</li>\n<li>JBoss EAP 6.4</li>\n<li>SoftHSMv1-EnigmaBridge PKCS#11 adapter</li>\n<li>EnigmaBridge Dynamic DNS for AWS</li>\n</ul>\n<div id=\"softhsmv1-enigmabridge-pkcs-11-adapter\">\n<h3>SoftHSMv1-EnigmaBridge PKCS#11 adapter</h3>\n<p><a href=\"https://github.com/EnigmaBridge/SoftHSMv1\" rel=\"nofollow\">SoftHSMv1-EB</a> is a\nPKCS#11 interface for <a href=\"https://enigmabridge.com\" rel=\"nofollow\">EnigmaBridge</a>\nservices. Using this adapter one can use our services using the generic\nPKCS#11 interface without need to modify the software.</p>\n<p>Like in EJBCA case, there is no need to modify the software which\nsupports PKCS#11, just plug our adapter to it and it starts working.</p>\n<p>One can for example generate RSA keys via PKCS#11 adapter and call\nencrypt, decrypt, sign, verify operations on it. The keys are securely\nstored on EnigmaBridge servers, in the secure hardware. The\ncryptographic operation itself is performed in the secure hardware in a\ntransparent way.</p>\n</div>\n<div id=\"dynamic-dns\">\n<h3>Dynamic DNS</h3>\n<p>Amazon provides IP address to your EC2 instance from the IP pool. This\nkind of address is re-allocated after your instance is turned off. After\nnext start it will get a new IP address.</p>\n<p>Usually its convenient to have a static IP so you can map it to the\ndomain name or put in the config files, manuals, etc\u2026 You can buy\nAmazon Elastic IP which remains static even after instance restart or\nyou can use our <a href=\"https://enigmabridge.com\" rel=\"nofollow\">EnigmaBridge</a> Dynamic DNS\nfeature for the AWS.</p>\n<p>During the initialization we allocate a new domains for your running\ninstance, e.g., sunderland1.pki.enigmabridge.com. It has A record\npointing to your current IP address.</p>\n<p>After you restart your instance, our script is started. It connects to\nour DNS server and updates the A record for your domain in a secure way\n- request is signed with the key generated when domain was created.</p>\n<p>Time to live of the record is 600 seconds so after the restart the\nhostname is updated in 10 minutes.</p>\n<p>In this way you will get the static DNS name even if your IP changes.</p>\n</div>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Generally the host need to have TCP port 443 open for LetsEncrypt domain\nverification. Without that you won\u2019t get valid SSL certificate for your\nCA domain and you won\u2019t be able to access administration console of your\nEJBCA installation in a secure way.</p>\n<p>The EJBCA itself runs on TCP port 8443. It depends on you how you set\nit. It don\u2019t necessarily have to be open to the world-fine. Its enough\nif you can access it somehow. e.g., it\u2019s possible to access EJBCA admin\nvia SSH tunnel. <tt>ssh <span class=\"pre\">-L</span> 8443:localhost:8443 ami_ip</tt></p>\n</div>\n<div id=\"init\">\n<h2>Init</h2>\n<p>The init command starts a new fresh installation. If a previous\ninstallation is present it asks user whether to proceed, backups the old\ninstallation databases and config files and installs a new one.</p>\n<p>The installation process looks like this:</p>\n<pre>--------------------------------------------------------------------------------\n    Enigma Bridge AWS command line interface (v0.0.14)\n\n    usage - shows simple command list\n    init  - initializes the key management system\n\n    More info: https://enigmabridge.com/amazonpki\n--------------------------------------------------------------------------------\n$&gt; init\nGoing to install PKI system and enrol it to the Enigma Bridge FIPS140-2 encryption service.\n\nWe need your email address for:\n   a) identity verification in case of a recovery / support\n   b) LetsEncrypt certificate registration\nIt's optional but we highly recommend to enter a valid e-mail address (especially on a production system)\n\nPlease enter your email address [empty]: tester@enigmabridge.com\nIs this email correct? 'tester@enigmabridge.com' (Y/n):y\n\nChecking if port 443 is open for LetsEncrypt, ip: 52.212.77.52\n\nNew domains registered for this host:\n  - sunderland1.pki.enigmabridge.com\n  - sr1.pki.enigmabridge.com\n\nNew configuration was written to: /etc/enigma/config.json\n\nSoftHSMv1 configuration has been backed up to: None\nNew SoftHSMv1 configuration has been written to: /etc/softhsm.conf\n\nSoftHSMv1 previous token database moved to: /var/lib/softhsm.old/softhsm_0018\nSoftHSMv1 initialization: The token has been initialized.\n\nGoing to install PKI system\n  This may take 15 minutes or less. Please, do not interrupt the installation\n  and wait until the process completes.\n\n - Updating settings\n\n - Restarting application server, please wait...\n.........\n - Preparing environment for application server\n...................\n - Restarting application server, please wait...\n...\n - Deploying the PKI system\nn - Installing the PKI system\nnPKI installed successfully.\n\nGoing to generate EnigmaBridge keys in the crypto token:\n..................\nEnigmaBridge tokens generated successfully\nYou can use these newly generated keys for your CA or generate another ones with:\n  sudo -E -H -u jboss /opt/ejbca_ce_6_3_1_1/bin/pkcs11HSM.sh generate /usr/lib64/softhsm/libsofthsm.so 2048 signKey 0\n  sudo -E -H -u jboss /opt/ejbca_ce_6_3_1_1/bin/pkcs11HSM.sh generate /usr/lib64/softhsm/libsofthsm.so 2048 defaultKey 0\n  sudo -E -H -u jboss /opt/ejbca_ce_6_3_1_1/bin/pkcs11HSM.sh generate /usr/lib64/softhsm/libsofthsm.so 1024 testKey 0\n\nAdding an EnigmaBridge crypto token to your PKI instance:\n.\nEnigmaBridgeToken added to the PKI instance\n\nInstalling LetsEncrypt certificate for: sunderland1.pki.enigmabridge.com, sr1.pki.enigmabridge.com\n....\nPublicly trusted certificate installed (issued by LetsEncrypt\n\n--------------------------------------------------------------------------------\n\n\n\n[OK] System installation is completed\n\n\n\n--------------------------------------------------------------------------------\n\nPlease setup your computer for secure connections to your PKI key management system:\n\nDownload p12 file: /home/ec2-user/ejbca-admin.p12\n  scp -i &lt;your_Amazon_PEM_key&gt; ec2-user@sunderland1.pki.enigmabridge.com:/home/ec2-user/ejbca-admin.p12 .\n  Key import password is: g5Bkg79Lvk3Q8jVC\n\nThe following page can guide you through p12 import: https://enigmabridge.com/support/aws13076\nOnce you import the p12 file to your computer browser/keychain you can connect to the PKI admin interface:\n  https://sunderland1.pki.enigmabridge.com:8443/ejbca/adminweb/\n  https://sr1.pki.enigmabridge.com:8443/ejbca/adminweb/\n</pre>\n</div>\n<div id=\"troubleshooting\">\n<h2>Troubleshooting</h2>\n<p>Error in installation of dependencies (cryptography, pyOpenSSL):\n<tt>sorry, but this version only supports 100 named groups</tt>\n[<a href=\"https://community.letsencrypt.org/t/certbot-auto-fails-while-setting-up-virtual-environment-complains-about-package-hashes/20529/18\" rel=\"nofollow\">100-named-groups</a>]</p>\n<p>Solution: Install downgraded version of pycparser and pyOpenSSL:</p>\n<pre>pip install pycparser==2.13\npip install pyOpenSSL==0.13\npip install cryptography\n</pre>\n<p>You may need to install some deps for the python packages</p>\n<pre>yum install gcc g++ openssl-devel libffi-devel dialog\n</pre>\n<div id=\"sni-on-python-2-7-9\">\n<h3>SNI on Python &lt; 2.7.9</h3>\n<p>TLS SNI support was added to Python. For earlier versions SNI needs to\nbe added to Requests networking library.</p>\n<pre>pip install urllib3\npip install pyopenssl\npip install ndg-httpsclient\npip install pyasn1\n</pre>\n</div>\n<div id=\"mac-osx-installation\">\n<h3>Mac OSX installation</h3>\n<p>For new OSX versions (El Capitan and above) the default system python\ninstallation cannot be modified with standard means. There are some\nworkarounds, but one can also use <tt><span class=\"pre\">--user</span></tt> switch for pip.</p>\n<pre>pip install --user cryptography\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2575760, "releases": {"0.0.13": [{"comment_text": "", "digests": {"md5": "44409dde34a1be32496f3ed7b0b74810", "sha256": "c027cdad0d7ef057f3bf60eedf49f243ae629a1345907edbc9ec4f2518dea1c9"}, "downloads": -1, "filename": "ebaws.py-0.0.13.tar.gz", "has_sig": false, "md5_digest": "44409dde34a1be32496f3ed7b0b74810", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33112, "upload_time": "2016-10-17T10:24:29", "upload_time_iso_8601": "2016-10-17T10:24:29.178011Z", "url": "https://files.pythonhosted.org/packages/ce/82/fc5446b6c802ece45251a8eb0f680a69e9e18af2d3aee9e0d439392197b9/ebaws.py-0.0.13.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "1ebb6beb4841b7095224de248beaef25", "sha256": "08bdcd5ef6d126c7697ffcdbf46b913dba76a5fa0dcd7156b214f2363a198e64"}, "downloads": -1, "filename": "ebaws.py-0.0.14.tar.gz", "has_sig": false, "md5_digest": "1ebb6beb4841b7095224de248beaef25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33140, "upload_time": "2016-10-17T13:38:45", "upload_time_iso_8601": "2016-10-17T13:38:45.815400Z", "url": "https://files.pythonhosted.org/packages/51/e3/6cea53e55bdb2657e61da52e7ac32d7ecf5c11f3ed52a9a3dd1f762b4850/ebaws.py-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "0c940a9c6676d6ad0c3d2de35f4a00f3", "sha256": "2c8e4e882802e64af99e800d1b7de0b78794ef8e13ad3549c2ea7b8d3fbdc542"}, "downloads": -1, "filename": "ebaws.py-0.0.15.tar.gz", "has_sig": false, "md5_digest": "0c940a9c6676d6ad0c3d2de35f4a00f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33989, "upload_time": "2016-10-17T21:13:03", "upload_time_iso_8601": "2016-10-17T21:13:03.552152Z", "url": "https://files.pythonhosted.org/packages/10/32/fc0901de95652bc19cd63e97224cd0b3509dd87d5a5dac03bdc0c920c80c/ebaws.py-0.0.15.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "c310852a21945feee404d8a208977542", "sha256": "66a0a168d4c3c402fbba937d31e1f05aa83d68672751b0c5849e4c3b10ca7c67"}, "downloads": -1, "filename": "ebaws.py-0.0.16.tar.gz", "has_sig": false, "md5_digest": "c310852a21945feee404d8a208977542", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34107, "upload_time": "2016-10-18T18:20:36", "upload_time_iso_8601": "2016-10-18T18:20:36.744450Z", "url": "https://files.pythonhosted.org/packages/a7/ad/184b3326a7135c79480482c4bd62e05f83e9b2044d9e620d8a808d540561/ebaws.py-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "95d8439548ace035e936cc133aad9d45", "sha256": "a4f2f3ade3dd775d9e6f84023f633dc154813a5862641cf49e9c4af1867278f9"}, "downloads": -1, "filename": "ebaws.py-0.0.17.tar.gz", "has_sig": false, "md5_digest": "95d8439548ace035e936cc133aad9d45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34367, "upload_time": "2016-10-19T15:26:23", "upload_time_iso_8601": "2016-10-19T15:26:23.594591Z", "url": "https://files.pythonhosted.org/packages/28/a8/b0f49c023e8c9fcb91b5108d409ea655cdd1d7143247b72cc3191c253704/ebaws.py-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "ecfa31ccef51f568a4510c5ec985aaef", "sha256": "03bd684c01cda98d0b18ea4b3dfe88d9045df355aa20f29f4695f5fccc79722e"}, "downloads": -1, "filename": "ebaws.py-0.0.18.tar.gz", "has_sig": false, "md5_digest": "ecfa31ccef51f568a4510c5ec985aaef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38356, "upload_time": "2016-10-26T21:01:49", "upload_time_iso_8601": "2016-10-26T21:01:49.873352Z", "url": "https://files.pythonhosted.org/packages/ca/5e/ef8c33ea79a37e1a315b8f4a362040d1e0146159d1c1ee0de8530032fc70/ebaws.py-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "db831db60d787adcf9609317ecb57bad", "sha256": "00c781671d2929b5d599398a7831385e69420fa8a4504031d3fcf97290247cfe"}, "downloads": -1, "filename": "ebaws.py-0.0.19.tar.gz", "has_sig": false, "md5_digest": "db831db60d787adcf9609317ecb57bad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38423, "upload_time": "2016-10-27T16:13:46", "upload_time_iso_8601": "2016-10-27T16:13:46.271895Z", "url": "https://files.pythonhosted.org/packages/87/46/3981100f59fe96d2d08aaf5030df1cde1b0c180c2545345c5328cf1467e9/ebaws.py-0.0.19.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "7a0eeff31df6a13725d23c08415e0f18", "sha256": "87c4fb108b9e5337aba473fb77ad8dd15c3ec829c0e4c424a71266d10be9197a"}, "downloads": -1, "filename": "ebaws.py-0.0.20.tar.gz", "has_sig": false, "md5_digest": "7a0eeff31df6a13725d23c08415e0f18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41854, "upload_time": "2016-11-17T23:07:36", "upload_time_iso_8601": "2016-11-17T23:07:36.312103Z", "url": "https://files.pythonhosted.org/packages/d7/30/6eebecec6a690d47626bd631b07fa5ab2069c4368e3beab0e631e3af1490/ebaws.py-0.0.20.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c1f9387cbd10791a15fe7ad7bdd24c22", "sha256": "9fd056f819234ccdf01880d36ee6f48191e4ff8d58a739ad20f0f0207fdb2be8"}, "downloads": -1, "filename": "ebaws.py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c1f9387cbd10791a15fe7ad7bdd24c22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42328, "upload_time": "2016-11-18T14:01:48", "upload_time_iso_8601": "2016-11-18T14:01:48.872514Z", "url": "https://files.pythonhosted.org/packages/00/a1/3565f926ca9f704cb07bdc30159cff2fd805f213b339ddbba3827f5eb88a/ebaws.py-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d5797035e9ef48a12f0c4fa0d6c251c8", "sha256": "aebaaed9367676618d5d7d37e60c31e489336dd0101bf0ecfc3d89b16df73fbc"}, "downloads": -1, "filename": "ebaws.py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d5797035e9ef48a12f0c4fa0d6c251c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42344, "upload_time": "2016-12-02T23:34:40", "upload_time_iso_8601": "2016-12-02T23:34:40.332462Z", "url": "https://files.pythonhosted.org/packages/28/c3/a9a2312392e02776a8d8f5e0d969c65d65086fb550d52e46402827df1ba1/ebaws.py-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6eb413f4460ec20bd3b52a9b017c6599", "sha256": "16abd16c4b05001b25520b1f081bf679c52e856cf0cc95aaaddde46a145d2db1"}, "downloads": -1, "filename": "ebaws.py-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6eb413f4460ec20bd3b52a9b017c6599", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42352, "upload_time": "2016-12-03T00:25:47", "upload_time_iso_8601": "2016-12-03T00:25:47.886086Z", "url": "https://files.pythonhosted.org/packages/3d/24/0f7ff760257701e3deee0c2878f3de8476c06705704b154b45e4e1b37b52/ebaws.py-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c4598f784974223883c57c4e2f9b26ad", "sha256": "4054199fccd0797470917da5371702ecd10792a40b77704b5e2392651b9b2a48"}, "downloads": -1, "filename": "ebaws.py-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c4598f784974223883c57c4e2f9b26ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47256, "upload_time": "2017-01-15T16:58:10", "upload_time_iso_8601": "2017-01-15T16:58:10.669443Z", "url": "https://files.pythonhosted.org/packages/2b/90/16ee4c2e6cb9c6a85349c7ee6d44f2b56433039ed403de0bd1681ca32d39/ebaws.py-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4598f784974223883c57c4e2f9b26ad", "sha256": "4054199fccd0797470917da5371702ecd10792a40b77704b5e2392651b9b2a48"}, "downloads": -1, "filename": "ebaws.py-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c4598f784974223883c57c4e2f9b26ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47256, "upload_time": "2017-01-15T16:58:10", "upload_time_iso_8601": "2017-01-15T16:58:10.669443Z", "url": "https://files.pythonhosted.org/packages/2b/90/16ee4c2e6cb9c6a85349c7ee6d44f2b56433039ed403de0bd1681ca32d39/ebaws.py-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:10 2020"}