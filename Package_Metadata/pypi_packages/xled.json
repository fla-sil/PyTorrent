{"info": {"author": "Pavol Babin\u010d\u00e1k", "author_email": "scroolik@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "===============================================================\nXLED - unofficial control Twinkly - Smart Decoration LED lights\n===============================================================\n\nXLED is python library and command line interface (CLI) to control Twinkly.\nCreators describe Twinkly `project page of Kickstarter`_:\n\n    Twinkly is a Christmas tree light string, controlled via smartphone:\n    \"internet of things\" meets extraordinary light effects! Created by ledworks\n\nLibrary and CLI are free software available under MIT license.\n\nDocumentation for library can be found on https://xled.readthedocs.io.\n\nUse of library:\n\n.. code-block:: python\n\n    >>> import xled\n    >>> discovered_device = xled.discover.discover()\n    >>> discovered_device.name\n    'Twinkly_33AAFF'\n    >>> control = xled.ControlInterface(discovered_device.ip_address, discovered_device.hw_address)\n    >>> control.set_mode('movie')\n    >>> control.get_mode()['mode']\n    u'movie'\n    >>> control.get_device_info()['number_of_led']\n    105\n\nUse of CLI:\n\n.. code-block:: console\n\n    $ xled on\n    Looking for any device...\n    Working on device: Twinkly_33AAFF\n    Turned on.\n\nUnofficial documentation of private protocol and API is `available online`_.\n\n\nWhy?\n----\n\nI have Twinkly 105 LEDs starter light set. That is latest available model in\n2017: TW105S-EU. As of December 2017 there are only two ways to control lights\n- mobile app on Android or iOS or hardware button on the cord.\n\nAndroid application didn't work as advertised on my Xiaomi Redmi 3S phone. On\nfirst start it connected and disconnected in very fast pace (like every 1-2\nseconds) to the hardware. I wasn't able to control anything at all. Later I\nwanted to connect it to my local WiFi network. But popup dialog that shouldn't\nhave appear never did so.\n\nPublic API was `promised around Christmas 2016`_ for next season. Later update\nfrom October 2016 it seems `API won't be available any time soon`_:\n\n    API for external control are on our dev check list, we definitely need some\n    feedback from the community to understand which could be a proper core set\n    to start with.\n\nIt turned out that application uses HTTP to control lights. I ended up with\ncapturing network traffic and `documented this private API`_. In the end I'm\nable to configure the device pretty easilly.\n\nCredits\n---------\n\nThis package was created with Cookiecutter_ and the\n`audreyr/cookiecutter-pypackage`_ project template.\n\n.. _`project page of Kickstarter`: https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas\n.. _`available online`: https://xled-docs.readthedocs.io\n.. _`documented this private API`: https://xled-docs.readthedocs.io\n.. _`promised around Christmas 2016`: https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas/comments?cursor=15497325#comment-15497324\n.. _`API won't be available any time soon`: https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas/comments?cursor=14619713#comment-14619712\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`documented this private API`: https://xled-docs.readthedocs.io\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.6.1 (2020-01-17)\n------------------\n* Make tests with tox pass again so release can be automatically deployed:\n\n  * Add Black reformatter to tox linter envs\n  * Tox config: new linters env to run Flake8\n  * Tox config update: Flake8 against tests/ and setup.py as well\n  * Make xled.compat pass Flake8 for F821 undefined names\n  * Refactor beacon processing of seen/new peer into separate methods\n  * Reformat test_control test with black\n  * Make tox install test-only requires\n  * Use conditional deployment to pypi with travis only from master\n\n0.6.0 (2020-01-15)\n------------------\n* Drop support for python 3.4\n* Explicitly specify Linux as only operating system\n* Automatically refresh token if expired\n* Add brightness management\n* Check response is OK before trying to decode JSON from body\n* Use id instead of name in discovery\n* Device class representing the device\n* Get network status in control interface\n* Use response from alive device to check if we reached discover timeout\n* Provide generator xdiscover() to return all or specific devices\n* Support timeout for discovery\n* When agent stops stop ping task and processing responses\n* Provide close() for UDPClient and use it on DiscoveryInterface.stop()\n* Do not continue receiving more data if UDP recv timeouts\n* Other bugfixes and improvements:\n\n  * Fix assertions\n  * Expose HighControlInterface on package level\n  * If ApplicationError is raised, store value of response attribute\n  * Allow disable/enable of brightness without value change\n  * Update wheel from 0.30.0 to 0.33.1\n  * Update pip from 9.0.1 to 19.0.3\n  * Add python 3.6 and 3.7 to Travis config\n\n0.5.0 (2018-12-09)\n------------------\n\n* CLI to update firmware\n* Example of library call and CLI usage\n* Option to select device by hostname in CLI and ping in discovery\n* New HighControlInterface() to aggregate and abstract low-level calls\n* CLI and HighControlInterface way to set static single color\n* Other bugfixes and improvements:\n\n  * Fix typo in CLI error message\n  * Print message before discovery on CLI\n  * Refactor: join consecutive strings on same line\n  * Print better message after device has been discovered over CLI\n  * Regenerate documentation index of a package\n  * Fix typo in control.set_mode() documentation\n  * Return named tuple in discover.discover()\n  * Use discovery and named tuple in example of library use\n  * Do not assert return value in ControlInterface.set_led_movie_full()\n  * Return ApplicationResponse for ControlInterface.set_led_movie_config()\n  * Return ApplicationResponse for control.ControlInterface.led_reset()\n  * Remove unneeded debug message from DiscoveryInterface.__init__()\n\n0.4.0 (2018-12-03)\n------------------\n\n* Support Python 3.6 and 3.7 including tests and documentation\n* Python 3 support with pyzmq >= 17.0 and Tornado 5\n* Remove redundant udplib\n* Other Python 3 compatibility:\n\n  * In Python 3+ import Mapping from collections.abc\n  * Python 3 compatible encoding of discovered IP and HW address and name\n  * Make xled.security.xor_strings() compatible with Python 2 and 3\n  * Treat PING_MESSAGE as bytes to simplify handling Python 2 and 3\n\n* Other bugfixes and improvements:\n\n  * Remove mention of PyPy from docs as it wasn't ever tested on it\n  * Improve robustness with sending messages from agent to interface\n  * Escape display of binary challenge in debug log of xled.auth\n  * Ignore (usually own) PING_MESSAGE on network when handling responses\n\n0.3.1 (2018-11-27)\n------------------\n\n* Update changelog for version 0.3.0\n* Update description in setup.py to refer to CLI\n* Fix JSON payload sent to server for firmware update.\n\n0.3.0 (2018-11-27)\n------------------\n\n* CLI interface\n* Discovery interface - currently works only on Python 2\n* Add support for API led/movie/full and corresponding CLI upload-movie\n* New Authentication mechanism - use session\n* Rename authentication module from long challenge_response_auth to auth\n* Change interface of ApplicationResponse to collections.Mapping\n* Python files reformatted with Black\n* Other bugfixes and improvements:\n\n  * Really show ApplicationResponse status in repr() when available\n  * Catch JSONDecodeError in Python 3.5+ in ApplicationResponse\n  * New shortcut method ok() of ApplicationResponse\n  * Make ApplicationResponse's attribute status_code @property\n  * Improve error reporting during parsing of ApplicationResponse\n  * If repr() of ApplicationResponse is called parse response first\n  * Check status of underlying requests' Response if requested\n  * Accept requests' response as attribute to class ApplicationResponse\n  * Move generate_challenge to security module\n  * Unit tests for control interface\n  * Run unit tests on supported python versions with tox and Travis\n  * Configuration for pre-commit-hooks\n  * Initial pyup configuration\n  * Don't run Tox on Travis on Python 3.3\n  * Update coverage\n\n0.2.1 (2018-01-02)\n------------------\n\n* Add missing MANIFEST.in\n* Configure Travis for automatic deployment to PyPI\n\n0.2.0 (2018-01-02)\n------------------\n\n* First Python control interface.\n\n0.1.0 (2017-12-17)\n------------------\n\n* Low level control interface.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scrool/xled", "keywords": "xled,twinkly", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "xled", "package_url": "https://pypi.org/project/xled/", "platform": "", "project_url": "https://pypi.org/project/xled/", "project_urls": {"Homepage": "https://github.com/scrool/xled"}, "release_url": "https://pypi.org/project/xled/0.6.1/", "requires_dist": ["arpreq", "click-log", "Click (>=6.0)", "cryptography", "netaddr", "pyzmq (>=17)", "requests", "tornado (>=5.0.0)", "requests-toolbelt", "vcrpy-unittest ; extra == 'tests'"], "requires_python": "", "summary": "Python library and command line interface to control Twinkly - Smart Decoration LED lights for Christmas.", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"xled-unofficial-control-twinkly-smart-decoration-led-lights\">\n<h2>XLED - unofficial control Twinkly - Smart Decoration LED lights</h2>\n<p>XLED is python library and command line interface (CLI) to control Twinkly.\nCreators describe Twinkly <a href=\"https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas\" rel=\"nofollow\">project page of Kickstarter</a>:</p>\n<blockquote>\nTwinkly is a Christmas tree light string, controlled via smartphone:\n\u201cinternet of things\u201d meets extraordinary light effects! Created by ledworks</blockquote>\n<p>Library and CLI are free software available under MIT license.</p>\n<p>Documentation for library can be found on <a href=\"https://xled.readthedocs.io\" rel=\"nofollow\">https://xled.readthedocs.io</a>.</p>\n<p>Use of library:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">xled</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">discovered_device</span> <span class=\"o\">=</span> <span class=\"n\">xled</span><span class=\"o\">.</span><span class=\"n\">discover</span><span class=\"o\">.</span><span class=\"n\">discover</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">discovered_device</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"s1\">'Twinkly_33AAFF'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">control</span> <span class=\"o\">=</span> <span class=\"n\">xled</span><span class=\"o\">.</span><span class=\"n\">ControlInterface</span><span class=\"p\">(</span><span class=\"n\">discovered_device</span><span class=\"o\">.</span><span class=\"n\">ip_address</span><span class=\"p\">,</span> <span class=\"n\">discovered_device</span><span class=\"o\">.</span><span class=\"n\">hw_address</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">control</span><span class=\"o\">.</span><span class=\"n\">set_mode</span><span class=\"p\">(</span><span class=\"s1\">'movie'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">control</span><span class=\"o\">.</span><span class=\"n\">get_mode</span><span class=\"p\">()[</span><span class=\"s1\">'mode'</span><span class=\"p\">]</span>\n<span class=\"sa\">u</span><span class=\"s1\">'movie'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">control</span><span class=\"o\">.</span><span class=\"n\">get_device_info</span><span class=\"p\">()[</span><span class=\"s1\">'number_of_led'</span><span class=\"p\">]</span>\n<span class=\"mi\">105</span>\n</pre>\n<p>Use of CLI:</p>\n<pre><span class=\"gp\">$</span> xled on\n<span class=\"go\">Looking for any device...\nWorking on device: Twinkly_33AAFF\nTurned on.</span>\n</pre>\n<p>Unofficial documentation of private protocol and API is <a href=\"https://xled-docs.readthedocs.io\" rel=\"nofollow\">available online</a>.</p>\n<div id=\"why\">\n<h3>Why?</h3>\n<p>I have Twinkly 105 LEDs starter light set. That is latest available model in\n2017: TW105S-EU. As of December 2017 there are only two ways to control lights\n- mobile app on Android or iOS or hardware button on the cord.</p>\n<p>Android application didn\u2019t work as advertised on my Xiaomi Redmi 3S phone. On\nfirst start it connected and disconnected in very fast pace (like every 1-2\nseconds) to the hardware. I wasn\u2019t able to control anything at all. Later I\nwanted to connect it to my local WiFi network. But popup dialog that shouldn\u2019t\nhave appear never did so.</p>\n<p>Public API was <a href=\"https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas/comments?cursor=15497325#comment-15497324\" rel=\"nofollow\">promised around Christmas 2016</a> for next season. Later update\nfrom October 2016 it seems <a href=\"https://www.kickstarter.com/projects/twinkly/twinkly-smart-decoration-for-your-christmas/comments?cursor=14619713#comment-14619712\" rel=\"nofollow\">API won\u2019t be available any time soon</a>:</p>\n<blockquote>\nAPI for external control are on our dev check list, we definitely need some\nfeedback from the community to understand which could be a proper core set\nto start with.</blockquote>\n<p>It turned out that application uses HTTP to control lights. I ended up with\ncapturing network traffic and <a href=\"https://xled-docs.readthedocs.io\" rel=\"nofollow\">documented this private API</a>. In the end I\u2019m\nable to configure the device pretty easilly.</p>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the\n<a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id2\">\n<h3>0.6.1 (2020-01-17)</h3>\n<ul>\n<li>Make tests with tox pass again so release can be automatically deployed:<ul>\n<li>Add Black reformatter to tox linter envs</li>\n<li>Tox config: new linters env to run Flake8</li>\n<li>Tox config update: Flake8 against tests/ and setup.py as well</li>\n<li>Make xled.compat pass Flake8 for F821 undefined names</li>\n<li>Refactor beacon processing of seen/new peer into separate methods</li>\n<li>Reformat test_control test with black</li>\n<li>Make tox install test-only requires</li>\n<li>Use conditional deployment to pypi with travis only from master</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.6.0 (2020-01-15)</h3>\n<ul>\n<li>Drop support for python 3.4</li>\n<li>Explicitly specify Linux as only operating system</li>\n<li>Automatically refresh token if expired</li>\n<li>Add brightness management</li>\n<li>Check response is OK before trying to decode JSON from body</li>\n<li>Use id instead of name in discovery</li>\n<li>Device class representing the device</li>\n<li>Get network status in control interface</li>\n<li>Use response from alive device to check if we reached discover timeout</li>\n<li>Provide generator xdiscover() to return all or specific devices</li>\n<li>Support timeout for discovery</li>\n<li>When agent stops stop ping task and processing responses</li>\n<li>Provide close() for UDPClient and use it on DiscoveryInterface.stop()</li>\n<li>Do not continue receiving more data if UDP recv timeouts</li>\n<li>Other bugfixes and improvements:<ul>\n<li>Fix assertions</li>\n<li>Expose HighControlInterface on package level</li>\n<li>If ApplicationError is raised, store value of response attribute</li>\n<li>Allow disable/enable of brightness without value change</li>\n<li>Update wheel from 0.30.0 to 0.33.1</li>\n<li>Update pip from 9.0.1 to 19.0.3</li>\n<li>Add python 3.6 and 3.7 to Travis config</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.5.0 (2018-12-09)</h3>\n<ul>\n<li>CLI to update firmware</li>\n<li>Example of library call and CLI usage</li>\n<li>Option to select device by hostname in CLI and ping in discovery</li>\n<li>New HighControlInterface() to aggregate and abstract low-level calls</li>\n<li>CLI and HighControlInterface way to set static single color</li>\n<li>Other bugfixes and improvements:<ul>\n<li>Fix typo in CLI error message</li>\n<li>Print message before discovery on CLI</li>\n<li>Refactor: join consecutive strings on same line</li>\n<li>Print better message after device has been discovered over CLI</li>\n<li>Regenerate documentation index of a package</li>\n<li>Fix typo in control.set_mode() documentation</li>\n<li>Return named tuple in discover.discover()</li>\n<li>Use discovery and named tuple in example of library use</li>\n<li>Do not assert return value in ControlInterface.set_led_movie_full()</li>\n<li>Return ApplicationResponse for ControlInterface.set_led_movie_config()</li>\n<li>Return ApplicationResponse for control.ControlInterface.led_reset()</li>\n<li>Remove unneeded debug message from DiscoveryInterface.__init__()</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.4.0 (2018-12-03)</h3>\n<ul>\n<li>Support Python 3.6 and 3.7 including tests and documentation</li>\n<li>Python 3 support with pyzmq &gt;= 17.0 and Tornado 5</li>\n<li>Remove redundant udplib</li>\n<li>Other Python 3 compatibility:<ul>\n<li>In Python 3+ import Mapping from collections.abc</li>\n<li>Python 3 compatible encoding of discovered IP and HW address and name</li>\n<li>Make xled.security.xor_strings() compatible with Python 2 and 3</li>\n<li>Treat PING_MESSAGE as bytes to simplify handling Python 2 and 3</li>\n</ul>\n</li>\n<li>Other bugfixes and improvements:<ul>\n<li>Remove mention of PyPy from docs as it wasn\u2019t ever tested on it</li>\n<li>Improve robustness with sending messages from agent to interface</li>\n<li>Escape display of binary challenge in debug log of xled.auth</li>\n<li>Ignore (usually own) PING_MESSAGE on network when handling responses</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.3.1 (2018-11-27)</h3>\n<ul>\n<li>Update changelog for version 0.3.0</li>\n<li>Update description in setup.py to refer to CLI</li>\n<li>Fix JSON payload sent to server for firmware update.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.3.0 (2018-11-27)</h3>\n<ul>\n<li>CLI interface</li>\n<li>Discovery interface - currently works only on Python 2</li>\n<li>Add support for API led/movie/full and corresponding CLI upload-movie</li>\n<li>New Authentication mechanism - use session</li>\n<li>Rename authentication module from long challenge_response_auth to auth</li>\n<li>Change interface of ApplicationResponse to collections.Mapping</li>\n<li>Python files reformatted with Black</li>\n<li>Other bugfixes and improvements:<ul>\n<li>Really show ApplicationResponse status in repr() when available</li>\n<li>Catch JSONDecodeError in Python 3.5+ in ApplicationResponse</li>\n<li>New shortcut method ok() of ApplicationResponse</li>\n<li>Make ApplicationResponse\u2019s attribute status_code @property</li>\n<li>Improve error reporting during parsing of ApplicationResponse</li>\n<li>If repr() of ApplicationResponse is called parse response first</li>\n<li>Check status of underlying requests\u2019 Response if requested</li>\n<li>Accept requests\u2019 response as attribute to class ApplicationResponse</li>\n<li>Move generate_challenge to security module</li>\n<li>Unit tests for control interface</li>\n<li>Run unit tests on supported python versions with tox and Travis</li>\n<li>Configuration for pre-commit-hooks</li>\n<li>Initial pyup configuration</li>\n<li>Don\u2019t run Tox on Travis on Python 3.3</li>\n<li>Update coverage</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.2.1 (2018-01-02)</h3>\n<ul>\n<li>Add missing MANIFEST.in</li>\n<li>Configure Travis for automatic deployment to PyPI</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.2.0 (2018-01-02)</h3>\n<ul>\n<li>First Python control interface.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.1.0 (2017-12-17)</h3>\n<ul>\n<li>Low level control interface.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6474335, "releases": {"0.2.0": [], "0.2.1": [{"comment_text": "", "digests": {"md5": "780b79f48ece42796ee843323da52147", "sha256": "31afd9dadbbb7f237803741370c92bcee0f88631f4d5d2960669b11ad2eb4fa3"}, "downloads": -1, "filename": "xled-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "780b79f48ece42796ee843323da52147", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13037, "upload_time": "2018-01-02T20:07:29", "upload_time_iso_8601": "2018-01-02T20:07:29.816830Z", "url": "https://files.pythonhosted.org/packages/ae/ec/342a332e459d3379a2accd1f736cb68ab69fb33fe2d2f9dfa99d04e102d1/xled-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "598695a1765562f08cc8af2ab1690245", "sha256": "6782de632a048e77112e2d8301b6dd4f42fbbcbd539029f705baa1cd8fd5e1d7"}, "downloads": -1, "filename": "xled-0.2.1.tar.gz", "has_sig": false, "md5_digest": "598695a1765562f08cc8af2ab1690245", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22790, "upload_time": "2018-01-02T20:07:34", "upload_time_iso_8601": "2018-01-02T20:07:34.161431Z", "url": "https://files.pythonhosted.org/packages/bf/d4/5265995746b74652dc1c8a02a0f845da623608a5eb4b1917d547b37208b1/xled-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e86df66e8b38114c1371c797bf706974", "sha256": "97807222385d9f0803b412deee4d624432ff93bb38f2054b635f06699302d3df"}, "downloads": -1, "filename": "xled-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e86df66e8b38114c1371c797bf706974", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23271, "upload_time": "2018-11-27T00:59:41", "upload_time_iso_8601": "2018-11-27T00:59:41.303221Z", "url": "https://files.pythonhosted.org/packages/73/83/be6f011dec932f5a87b1dc7fb008546bcc4939b10b2e5e83623cb6d101d6/xled-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "374480d1afffdeed6714e3d03d3774c4", "sha256": "2bf636f55951b6d08f6a597a16765b809831bc62f46c670b7a8726aa6fd08a2c"}, "downloads": -1, "filename": "xled-0.3.0.tar.gz", "has_sig": false, "md5_digest": "374480d1afffdeed6714e3d03d3774c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30384, "upload_time": "2018-11-27T00:59:42", "upload_time_iso_8601": "2018-11-27T00:59:42.674066Z", "url": "https://files.pythonhosted.org/packages/61/2f/62d14faaf91edab6534033b3bea5b790dbcdf2f935b20e73b442fab944f0/xled-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "081ac8e60040b1b1cc96d7f419a4db80", "sha256": "d8b9e8b32680ffa432bc520b3c4e42f40df42dce297657608922ac36967d711c"}, "downloads": -1, "filename": "xled-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "081ac8e60040b1b1cc96d7f419a4db80", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23857, "upload_time": "2018-11-27T18:46:59", "upload_time_iso_8601": "2018-11-27T18:46:59.152632Z", "url": "https://files.pythonhosted.org/packages/49/56/483b820a4a6364a0415a5322a3adf68f559ffd0f549e0f47fac0c8e18f76/xled-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7aa5b8c189b72ba2a3d74ae2e292dc76", "sha256": "d50bae69de9f0cf9cfd1b24574268ee1d196b2dc22ad73d65801222951aa5c2d"}, "downloads": -1, "filename": "xled-0.3.1.tar.gz", "has_sig": false, "md5_digest": "7aa5b8c189b72ba2a3d74ae2e292dc76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31644, "upload_time": "2018-11-27T18:47:00", "upload_time_iso_8601": "2018-11-27T18:47:00.523031Z", "url": "https://files.pythonhosted.org/packages/9b/ca/53d04ea257d38c07a0df033144cc943e47e33a1b596d29f070399950f3b9/xled-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "7ed40066cfcf466c9ec60267e7191d85", "sha256": "e7387f023b1269564d05ffdf5add5de2709ddfc39b7a489fd690981eae892de4"}, "downloads": -1, "filename": "xled-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ed40066cfcf466c9ec60267e7191d85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23902, "upload_time": "2018-12-03T01:09:54", "upload_time_iso_8601": "2018-12-03T01:09:54.764880Z", "url": "https://files.pythonhosted.org/packages/89/9d/78fb535dff83d6d679a0c506c0679619613cc927e0c57fd6580f3d27304a/xled-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed620bab11f6b60c994cd151b9c4f11a", "sha256": "ea28d074f8b20e10fa065a42695cf864e8c5ac16dc886b980c00716c4640bc1f"}, "downloads": -1, "filename": "xled-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ed620bab11f6b60c994cd151b9c4f11a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33263, "upload_time": "2018-12-03T01:09:56", "upload_time_iso_8601": "2018-12-03T01:09:56.214721Z", "url": "https://files.pythonhosted.org/packages/42/ba/5958aeb4c1b28d2c770c7edf32300ce96226f6ac22e487ce4f2d301431c2/xled-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "8eaa710d74c7df06a247852c10147d37", "sha256": "4ee90a76a3ac3bbaf76fe175b9ccd695fd6cb3fb7ba8761f1a22cd8c8fa0aaf1"}, "downloads": -1, "filename": "xled-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8eaa710d74c7df06a247852c10147d37", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26499, "upload_time": "2018-12-09T22:55:46", "upload_time_iso_8601": "2018-12-09T22:55:46.066378Z", "url": "https://files.pythonhosted.org/packages/22/ee/5cc1ac2704c97df34d6ac932a068d0ab9bf79bf50cd7f25e848d53e418ed/xled-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ebf0ecf02d01352ebb7d699f319e527", "sha256": "b45cca2161c47b1a6d8ea272cd5ca252d0b1a6408ea8390234336fcdc5100410"}, "downloads": -1, "filename": "xled-0.5.0.tar.gz", "has_sig": false, "md5_digest": "2ebf0ecf02d01352ebb7d699f319e527", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37413, "upload_time": "2018-12-09T22:55:47", "upload_time_iso_8601": "2018-12-09T22:55:47.958735Z", "url": "https://files.pythonhosted.org/packages/ef/6b/aa51e86c75c178c4fd49e8c75f03c887a7120a42b1bc59c892a1f57db085/xled-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "72b0b9e88abdd86ea1315894db14f35c", "sha256": "c40a865ac6f4a1ed7b2ccc177472511503107f8d182b0f9186392a27b2ae8ab4"}, "downloads": -1, "filename": "xled-0.6.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "72b0b9e88abdd86ea1315894db14f35c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52708, "upload_time": "2020-01-17T17:23:24", "upload_time_iso_8601": "2020-01-17T17:23:24.156787Z", "url": "https://files.pythonhosted.org/packages/0c/0c/a36ac96b1f73139ed32c609e3fc9c9871269685b162d39978b518084128c/xled-0.6.0.linux-x86_64.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "8426b86c82469cd5a36e80bd1746cf6b", "sha256": "a1784bf9b102ac2fbf886fff9b53a9dd4ff885b559b06eff4885fc7724988cc0"}, "downloads": -1, "filename": "xled-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8426b86c82469cd5a36e80bd1746cf6b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30397, "upload_time": "2020-01-17T17:02:30", "upload_time_iso_8601": "2020-01-17T17:02:30.730546Z", "url": "https://files.pythonhosted.org/packages/01/60/9afe66d8c417caa1cffae6204076d1abb80063e235b2d55da08ec0ce2700/xled-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f293b2b7f005046c849ab36495b0795e", "sha256": "4aeac22e13f0378dc6c7e7f7591fcbb612413371078615856c8e6c33aa997666"}, "downloads": -1, "filename": "xled-0.6.1.tar.gz", "has_sig": false, "md5_digest": "f293b2b7f005046c849ab36495b0795e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41576, "upload_time": "2020-01-17T17:02:32", "upload_time_iso_8601": "2020-01-17T17:02:32.523869Z", "url": "https://files.pythonhosted.org/packages/75/0d/5aebd44945a638edd71ca03288cbd00688589eae7ec46b24a28669e7df87/xled-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8426b86c82469cd5a36e80bd1746cf6b", "sha256": "a1784bf9b102ac2fbf886fff9b53a9dd4ff885b559b06eff4885fc7724988cc0"}, "downloads": -1, "filename": "xled-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8426b86c82469cd5a36e80bd1746cf6b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30397, "upload_time": "2020-01-17T17:02:30", "upload_time_iso_8601": "2020-01-17T17:02:30.730546Z", "url": "https://files.pythonhosted.org/packages/01/60/9afe66d8c417caa1cffae6204076d1abb80063e235b2d55da08ec0ce2700/xled-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f293b2b7f005046c849ab36495b0795e", "sha256": "4aeac22e13f0378dc6c7e7f7591fcbb612413371078615856c8e6c33aa997666"}, "downloads": -1, "filename": "xled-0.6.1.tar.gz", "has_sig": false, "md5_digest": "f293b2b7f005046c849ab36495b0795e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41576, "upload_time": "2020-01-17T17:02:32", "upload_time_iso_8601": "2020-01-17T17:02:32.523869Z", "url": "https://files.pythonhosted.org/packages/75/0d/5aebd44945a638edd71ca03288cbd00688589eae7ec46b24a28669e7df87/xled-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:21 2020"}