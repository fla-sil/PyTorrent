{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# crud_generator\nThis will generate a crud operations (crud.py) for your Database tables.\n\n# How to Use:\n\n# Step 1:\n\n*   from crud_generator import generate_crud\n*   generate_crud(tablename, attributes) is the function which will create crud_tablename.py file\n*   Table name and attributes/column name are the only two parameters to be passed.\n*   Eg: generate_crud(\"Employee\",\"Name,Age,Employee_code,Salary\")\n*   then this will automatically create py file.\n\n# Step 2:\n\n*   functions created by the functions are\n\n    #First:\n*   def create_conn():\n*   this function is an empty function where you can create your connections. You can choose any DB, import library accordingly.\n*   Following is the code which you will get.\n*   def create_conn():\n*   pass\n*   #Enter your connection code\n*   #Example: for postgresql\n*   #conn = psycopg2.connect(database = \"testdb\", user = \"postgres\", password = \"pass123\", host = \"127.0.0.1\", port = \"5432\")\n*   #then return conn\n\n    #Second:\n*   def create_tablename(values):\n*   this function will perform insert operation in table.\n*   Here, you just need to pass values of the attributes\n*   Eg: create_Employee(\"\"\"'Alex',26,'EMP_2760',29000\"\"\") #Name,Age,Employee_code,Salary\n*   You can see the sql query in CLI\n*   Ensure to pass values as raw input.\n\n    #Third:\n*   def read_Employee(condition=\"1=1\"):\n*   this function will perform read operation in table.\n*   Here, if you don't pass any parameters it will return all records or you can pass any condition.\n*   Eg: read_Employee(\"Salary=2900 and Employee_code=\\'EMP_2760\\'\") # condition similary to that in where clause can be passed here.\n*   You can see the sql query in CLI\n\n    #Fourth:\n*   def update_Employee(values,condition=\"1=1\"):\n*   this function will perform update operation in table.\n*   Here, if you don't pass any condition it will perform update on all records or you can pass any condition.\n*   Here, you can pass values like \"salary=30000\", just like you pass in sql.\n*   Eg: update_Employee(\"Salary=30000\",\"Name=\\'Alex\\'\") # condition similary to that in where clause can be passed here and values like     that in update statement.\n*   You can see the sql query in CLI\n\n    #Fifth:\n*   def delete_Employee(condition=\"1=1\"):\n*   this function will perform delete operation in table.\n*   Here, if you don't pass any parameters it will delete all records or you can pass any condition.\n*   Eg: delete_Employee(\"Salary=2900 and Employee_code=\\'EMP_2760\\'\") # condition similary to that in where clause can be passed here.\n*   You can see the sql query in CLI\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "crud-generator", "package_url": "https://pypi.org/project/crud-generator/", "platform": "", "project_url": "https://pypi.org/project/crud-generator/", "project_urls": null, "release_url": "https://pypi.org/project/crud-generator/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "This will generate a crud operations (crud.py) for your Database tables.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>crud_generator</h1>\n<p>This will generate a crud operations (crud.py) for your Database tables.</p>\n<h1>How to Use:</h1>\n<h1>Step 1:</h1>\n<ul>\n<li>from crud_generator import generate_crud</li>\n<li>generate_crud(tablename, attributes) is the function which will create crud_tablename.py file</li>\n<li>Table name and attributes/column name are the only two parameters to be passed.</li>\n<li>Eg: generate_crud(\"Employee\",\"Name,Age,Employee_code,Salary\")</li>\n<li>then this will automatically create py file.</li>\n</ul>\n<h1>Step 2:</h1>\n<ul>\n<li>\n<p>functions created by the functions are</p>\n<p>#First:</p>\n</li>\n<li>\n<p>def create_conn():</p>\n</li>\n<li>\n<p>this function is an empty function where you can create your connections. You can choose any DB, import library accordingly.</p>\n</li>\n<li>\n<p>Following is the code which you will get.</p>\n</li>\n<li>\n<p>def create_conn():</p>\n</li>\n<li>\n<p>pass</p>\n</li>\n<li>\n<p>#Enter your connection code</p>\n</li>\n<li>\n<p>#Example: for postgresql</p>\n</li>\n<li>\n<p>#conn = psycopg2.connect(database = \"testdb\", user = \"postgres\", password = \"pass123\", host = \"127.0.0.1\", port = \"5432\")</p>\n</li>\n<li>\n<p>#then return conn</p>\n<p>#Second:</p>\n</li>\n<li>\n<p>def create_tablename(values):</p>\n</li>\n<li>\n<p>this function will perform insert operation in table.</p>\n</li>\n<li>\n<p>Here, you just need to pass values of the attributes</p>\n</li>\n<li>\n<p>Eg: create_Employee(\"\"\"'Alex',26,'EMP_2760',29000\"\"\") #Name,Age,Employee_code,Salary</p>\n</li>\n<li>\n<p>You can see the sql query in CLI</p>\n</li>\n<li>\n<p>Ensure to pass values as raw input.</p>\n<p>#Third:</p>\n</li>\n<li>\n<p>def read_Employee(condition=\"1=1\"):</p>\n</li>\n<li>\n<p>this function will perform read operation in table.</p>\n</li>\n<li>\n<p>Here, if you don't pass any parameters it will return all records or you can pass any condition.</p>\n</li>\n<li>\n<p>Eg: read_Employee(\"Salary=2900 and Employee_code='EMP_2760'\") # condition similary to that in where clause can be passed here.</p>\n</li>\n<li>\n<p>You can see the sql query in CLI</p>\n<p>#Fourth:</p>\n</li>\n<li>\n<p>def update_Employee(values,condition=\"1=1\"):</p>\n</li>\n<li>\n<p>this function will perform update operation in table.</p>\n</li>\n<li>\n<p>Here, if you don't pass any condition it will perform update on all records or you can pass any condition.</p>\n</li>\n<li>\n<p>Here, you can pass values like \"salary=30000\", just like you pass in sql.</p>\n</li>\n<li>\n<p>Eg: update_Employee(\"Salary=30000\",\"Name='Alex'\") # condition similary to that in where clause can be passed here and values like     that in update statement.</p>\n</li>\n<li>\n<p>You can see the sql query in CLI</p>\n<p>#Fifth:</p>\n</li>\n<li>\n<p>def delete_Employee(condition=\"1=1\"):</p>\n</li>\n<li>\n<p>this function will perform delete operation in table.</p>\n</li>\n<li>\n<p>Here, if you don't pass any parameters it will delete all records or you can pass any condition.</p>\n</li>\n<li>\n<p>Eg: delete_Employee(\"Salary=2900 and Employee_code='EMP_2760'\") # condition similary to that in where clause can be passed here.</p>\n</li>\n<li>\n<p>You can see the sql query in CLI</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7149174, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "470004c4acce467e866470bcea4aacbf", "sha256": "0d7449de7d1ead24cac20a4bbe5609e8d6fe160163cb2ccac2de4ce7dca06ed5"}, "downloads": -1, "filename": "crud_generator-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "470004c4acce467e866470bcea4aacbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2847, "upload_time": "2020-04-22T05:50:03", "upload_time_iso_8601": "2020-04-22T05:50:03.631808Z", "url": "https://files.pythonhosted.org/packages/2f/5d/b601643b750bb2623d97fa6b4e7a001b5f797d27e27e0f88b8dd4d4cc5e4/crud_generator-1.0.1-py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c1087c458e2695c13274368c10d2e501", "sha256": "c541adbd4aa0930d5d9f070be902da9e488a13dd316bf72b6b083a70179ac77f"}, "downloads": -1, "filename": "crud_generator-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c1087c458e2695c13274368c10d2e501", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2856, "upload_time": "2020-05-02T00:44:44", "upload_time_iso_8601": "2020-05-02T00:44:44.573727Z", "url": "https://files.pythonhosted.org/packages/e3/25/b360baed4619ec12b47ecc17ddbf0545a70ffcf57d1774c74957844893f7/crud_generator-1.0.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1087c458e2695c13274368c10d2e501", "sha256": "c541adbd4aa0930d5d9f070be902da9e488a13dd316bf72b6b083a70179ac77f"}, "downloads": -1, "filename": "crud_generator-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c1087c458e2695c13274368c10d2e501", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2856, "upload_time": "2020-05-02T00:44:44", "upload_time_iso_8601": "2020-05-02T00:44:44.573727Z", "url": "https://files.pythonhosted.org/packages/e3/25/b360baed4619ec12b47ecc17ddbf0545a70ffcf57d1774c74957844893f7/crud_generator-1.0.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:07 2020"}