{"info": {"author": "Scott Bradley", "author_email": "scott@codeslick.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# DataFrameup\n\n```\n $ pip install frameup\n $ frameup <path-to-csvfile>\n```\n\nFrameup is the easiest way to get your Pandas DataFrame up into a Python-based web application. Simply `import frameup` and your DataFrames will become URL query parameter, and pagination aware.\n\nZero dependencies, except Pandas of course.\n\n## Quick look\n\nServe a csv as a frameup dataframe on localhost\n\n```\n $ python -m frameup.serve <path-to-csv-file>\n```\n\nThen navigate to http://localhost:8000/. Use the [Pandas DataFrame query syntax](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.query.html) in the query box.\n\n... or, get a JSON payload:\n\n```\n $ curl 'http://localhost:8000/?query=&limit=10&page=1' | python -m json.tool\n```\n\n## Use it in your web application\n\n### Flask example\n\nGiven a template similar to example.js.html\n\n```\nfrom flask import Flask, jsonify, render_template, request, url_for\nimport pandas as pd\nimport frameup\n\napp = Flask(__name__)\n\ndf = pd.read_csv(YOUR_CSV_FILE)\n\n@app.route('/mydataframe')\ndef main():\n    data = df.frameup.data(path=url_for('main'), **request.args)\n    return render_template('example.j2.html', **data)\n```\n\nFor something ajaxy, just replace the return with:\n\n```\nreturn jsonify(**data)\n```\n\n## On query parameter objects\n\nBe sure the query parameter object you pass frameup does not return lists for values. `classes` is the only multi-valued parameter accepted, and should be passed as a comma-delimited list rather than multiple `classes` keys.\n\nPython web frameworks all have their own way of dealing with the vagaries of GET parameter specification hell. Most implement some concept of a `MultiDict`, but the APIs for these vary from one framework to the next. Thus, the requirement of only single-valued GET params greatly simplifies things here.\n\n## Other projects\n\nProjects to review / learn from / use instead\n\n * [Datasette](https://github.com/simonw/datasette)\n * [Workbench](https://workbenchdata.com/)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scott2b/DataFrameup", "keywords": "Pandas,DataFrame,web applications", "license": "", "maintainer": "Scott Bradley", "maintainer_email": "scott@codeslick.com", "name": "frameup", "package_url": "https://pypi.org/project/frameup/", "platform": "", "project_url": "https://pypi.org/project/frameup/", "project_urls": {"Homepage": "https://github.com/scott2b/DataFrameup", "Repository": "https://github.com/scott2b/DataFrameup"}, "release_url": "https://pypi.org/project/frameup/0.1.2/", "requires_dist": ["pandas (>=0.23.0,<0.24.0)"], "requires_python": ">=3.7,<4.0", "summary": "DataFrames all up in your web applications", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DataFrameup</h1>\n<pre><code> $ pip install frameup\n $ frameup &lt;path-to-csvfile&gt;\n</code></pre>\n<p>Frameup is the easiest way to get your Pandas DataFrame up into a Python-based web application. Simply <code>import frameup</code> and your DataFrames will become URL query parameter, and pagination aware.</p>\n<p>Zero dependencies, except Pandas of course.</p>\n<h2>Quick look</h2>\n<p>Serve a csv as a frameup dataframe on localhost</p>\n<pre><code> $ python -m frameup.serve &lt;path-to-csv-file&gt;\n</code></pre>\n<p>Then navigate to <a href=\"http://localhost:8000/\" rel=\"nofollow\">http://localhost:8000/</a>. Use the <a href=\"https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.query.html\" rel=\"nofollow\">Pandas DataFrame query syntax</a> in the query box.</p>\n<p>... or, get a JSON payload:</p>\n<pre><code> $ curl 'http://localhost:8000/?query=&amp;limit=10&amp;page=1' | python -m json.tool\n</code></pre>\n<h2>Use it in your web application</h2>\n<h3>Flask example</h3>\n<p>Given a template similar to example.js.html</p>\n<pre><code>from flask import Flask, jsonify, render_template, request, url_for\nimport pandas as pd\nimport frameup\n\napp = Flask(__name__)\n\ndf = pd.read_csv(YOUR_CSV_FILE)\n\n@app.route('/mydataframe')\ndef main():\n    data = df.frameup.data(path=url_for('main'), **request.args)\n    return render_template('example.j2.html', **data)\n</code></pre>\n<p>For something ajaxy, just replace the return with:</p>\n<pre><code>return jsonify(**data)\n</code></pre>\n<h2>On query parameter objects</h2>\n<p>Be sure the query parameter object you pass frameup does not return lists for values. <code>classes</code> is the only multi-valued parameter accepted, and should be passed as a comma-delimited list rather than multiple <code>classes</code> keys.</p>\n<p>Python web frameworks all have their own way of dealing with the vagaries of GET parameter specification hell. Most implement some concept of a <code>MultiDict</code>, but the APIs for these vary from one framework to the next. Thus, the requirement of only single-valued GET params greatly simplifies things here.</p>\n<h2>Other projects</h2>\n<p>Projects to review / learn from / use instead</p>\n<ul>\n<li><a href=\"https://github.com/simonw/datasette\" rel=\"nofollow\">Datasette</a></li>\n<li><a href=\"https://workbenchdata.com/\" rel=\"nofollow\">Workbench</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6336568, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2f3faafb7718acf45b93ff0eb7407b03", "sha256": "bccf00e03c40a685011480519fb69282e70c3d48fb519c790fdaff6cb19b1c30"}, "downloads": -1, "filename": "frameup-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2f3faafb7718acf45b93ff0eb7407b03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7766, "upload_time": "2019-12-19T21:38:54", "upload_time_iso_8601": "2019-12-19T21:38:54.369524Z", "url": "https://files.pythonhosted.org/packages/f3/67/8aaa39bf47dc93bdd3f2f76ff5870a34632b0e71871e6929a9b3466f0e03/frameup-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ef7b96773b31334b0262002ec9e407b", "sha256": "46aab3f3139e177c0768aa7b7fd47662dc3d7a06d3145dea37050df319f1556f"}, "downloads": -1, "filename": "frameup-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4ef7b96773b31334b0262002ec9e407b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5678, "upload_time": "2019-12-19T21:38:56", "upload_time_iso_8601": "2019-12-19T21:38:56.186109Z", "url": "https://files.pythonhosted.org/packages/c9/71/a60dbf761bb5b370777a4ce341ab4a8c5c74eca7f69da668a761905641d4/frameup-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "17d9dbbd98a8d74206cd4500bc43409c", "sha256": "371a66f1be69fcd40dce3eb91df6115ef98be303395c803e58d1d91b6de09cd1"}, "downloads": -1, "filename": "frameup-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "17d9dbbd98a8d74206cd4500bc43409c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 7827, "upload_time": "2019-12-19T21:49:51", "upload_time_iso_8601": "2019-12-19T21:49:51.664034Z", "url": "https://files.pythonhosted.org/packages/66/b4/ae61cfa99b2d689d36a096585408ca97e48b975850400f819aec5f74f8c1/frameup-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a80801aac8e392bf5ea63064847af7e8", "sha256": "3ae456a85fdf30913f10a21c337c60cdf097278951cae145e5e5cf56d50e2304"}, "downloads": -1, "filename": "frameup-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a80801aac8e392bf5ea63064847af7e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 5748, "upload_time": "2019-12-19T21:49:52", "upload_time_iso_8601": "2019-12-19T21:49:52.755205Z", "url": "https://files.pythonhosted.org/packages/51/1c/0049725572516b54622452a6fb0bc00bce9d8851dee387b73567a5d39b1e/frameup-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "95c5c7c7760cdddc3edfc08dedc07b2c", "sha256": "61dec0558391ddbb39444c92dde33872e4652be58cd1b3d8c4e5642eef3079bc"}, "downloads": -1, "filename": "frameup-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "95c5c7c7760cdddc3edfc08dedc07b2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 8073, "upload_time": "2019-12-20T01:36:56", "upload_time_iso_8601": "2019-12-20T01:36:56.294790Z", "url": "https://files.pythonhosted.org/packages/35/6d/cfdb5939a55db4cb45a06a1e24c204914b92bd0994cd0345887af9288c2e/frameup-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cae336406ee6dd3afd6167af6bf162f5", "sha256": "6128c60917b5cdd6a3f714382970ed45cf8ac48473d0b94e949a8d00e531dbca"}, "downloads": -1, "filename": "frameup-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cae336406ee6dd3afd6167af6bf162f5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6000, "upload_time": "2019-12-20T01:36:57", "upload_time_iso_8601": "2019-12-20T01:36:57.453470Z", "url": "https://files.pythonhosted.org/packages/47/04/e7c7437710967d8a583c01c2590a58189d4c95b13f553b3e77963c5c07c5/frameup-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95c5c7c7760cdddc3edfc08dedc07b2c", "sha256": "61dec0558391ddbb39444c92dde33872e4652be58cd1b3d8c4e5642eef3079bc"}, "downloads": -1, "filename": "frameup-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "95c5c7c7760cdddc3edfc08dedc07b2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 8073, "upload_time": "2019-12-20T01:36:56", "upload_time_iso_8601": "2019-12-20T01:36:56.294790Z", "url": "https://files.pythonhosted.org/packages/35/6d/cfdb5939a55db4cb45a06a1e24c204914b92bd0994cd0345887af9288c2e/frameup-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cae336406ee6dd3afd6167af6bf162f5", "sha256": "6128c60917b5cdd6a3f714382970ed45cf8ac48473d0b94e949a8d00e531dbca"}, "downloads": -1, "filename": "frameup-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cae336406ee6dd3afd6167af6bf162f5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 6000, "upload_time": "2019-12-20T01:36:57", "upload_time_iso_8601": "2019-12-20T01:36:57.453470Z", "url": "https://files.pythonhosted.org/packages/47/04/e7c7437710967d8a583c01c2590a58189d4c95b13f553b3e77963c5c07c5/frameup-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:34 2020"}