{"info": {"author": "Tyler Kennedy", "author_email": "tk@tkte.ch", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "![PyPI](https://img.shields.io/pypi/v/flask-themer?style=flat-square)\n![PyPI - License](https://img.shields.io/pypi/l/flask-themer?style=flat-square)\n![GitHub Workflow Status](https://img.shields.io/github/workflow/status/TkTech/flask-themer/Run%20tests?style=flat-square)\n\n\n# Flask-Themer\n\nSimple theme support for flask apps.\n\nFlask-Themer is inspired by the (seemingly) abandoned [flask-themes][] project,\nbut has been written from scratch for py3.7+ (or 3.6 with the dataclasses\nbackport). However it is _not_ immediately compatible with flask-themes and\ndoes not seek to be. Flask-Themer tries to have little opinion on how you\nactually structure your project and its themes and does not require a\nparticular metadata format/file.\n\nFlask-Themer releases follow [Semantic Versioning][semver].\nFlask-Themer has 100% test coverage and considers it an error to fall below\n100%.\n\n## Installation\n\nInstall the latest release from [PyPi][]:\n\n```\npip install flask-themer\n```\n\nor get the latest development version from github:\n\n```\ngit clone https://github.com/TkTech/flask-themer.git\ncd flask-themer\npython setup.py develop\n```\n\n## Quickstart\n\n\nFlask-Themer usage is usually very basic, and once setup you likely won't need\nto touch it again. Lets do a quickstart. Notice how we import `render_template`\nfrom `flask_themer` instead of `flask`.\n\n\nOur `app.py` looks like this:\n\n```python\nfrom flask import Flask\nfrom flask_themer import Themer, render_template\n\napp = Flask(__name__)\nthemer = Themer(app)\n\n\n@themer.current_theme_loader\ndef get_current_theme():\n    # This is where you would look up the current user's theme if one was\n    # logged in, for example.\n    return 'default'\n\n@app.route('/')\ndef hello_world():\n    return render_template('hello.html')\n```\n\nAnd next to it we have a directory called `themes` with a directory called\n`default` inside of it. Our `themes/default/hello.html` looks like this:\n\n\n```jinja2\nHello world!\n```\n\nThat's it! By default Flask-Themer will look for a `themes` directory next to\nyour project and assume all the directories inside of it are themes. You can\nchange what directory it looks for with `THEMER_DEFAULT_DIRECTORY`, or specify\nthe template loaders explicitly to overwrite the default:\n\n```python\nfrom flask_themer import Themer, FileSystemThemeLoader\n\napp = Flask(__name__)\nthemer = Themer(app, loaders=[\n    FileSystemThemeLoader(app, os.path.join(\n        app.root_path,\n        'also_themes'\n    ))\n])\n```\n\n## Using Themes From Templates\n\nTwo template globals are added once Flask-Themer is setup, `theme()` and\n`theme_static()` (just like flask-themes). These methods look up the currently\nactive theme and look for the given path in that theme, returning a special\npath that Jinja can use to load it.\n\n```jinja2\n{% extends theme(\"base.html\") %}\n\n{% block header %}\n    {{ super() }}\n    <link rel=\"stylesheet\" href=\"{{ theme_static(\"bootstrap.css\") }}\">\n{% endblock %}\n```\n\n## Theme Loaders\n\n_Theme_ loaders are the mechanism by which Flask-Themer discovers what themes\nare available. You can create a custom loader to get themes from a ZIP file, or\na database for example. Usually if you create a new `ThemeLoader` you'll also\nneed to create a new Jinja [_template_ loader][loader] so Jinja knows how to\nread individual templates. Lets do a very minimal example that loads just a\nsingle theme from a ZIP file.\n\n\n```python\nfrom zipfile import ZipFile\nfrom flask_themer import ThemeLoader, Theme\nfrom jinja2.loaders import BaseLoader, TemplateNotFound\n\nclass ZipFileTemplateLoader(BaseLoader):\n    def __init__(self, *args, archive, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.archive = archive\n\n    def get_source(self, environment, template):\n        try:\n            return (self.archive.read(template), None, False)\n        except KeyError:\n            raise TemplateNotFound(template)\n\n\nclass ZipFileThemeLoader(ThemeLoader):\n    def __init__(self, path_to_zip):\n        self.archive = ZipFile(path_to_zip)\n\n    @property\n    def themes(self):\n        yield Theme(\n            name='my_dumb_theme',\n            theme_loader=self,\n            jinja_loader=ZipFileTemplateLoader(archive=self.archive),\n        )\n\n    def get_static(self, theme, path):\n        return self.archive.read(path)\n```\n\nAnd then to use our new loaders we update our previous example:\n\n```python\n...\nthemer = Themer(app, loaders=[\n    ZipFileThemeLoader('my_dumb_theme.zip')\n])\n...\n```\n\nPretty simple right? You can see how we could easily create a loader to load\nmultiple themes from an archive, or load a user's customized theme from a\ndatabase.\n\n[flask-themes]: https://github.com/maxcountryman/flask-themes\n[pypi]: https://pypi.org/\n[semver]: https://semver.org/\n[loader]: https://jinja.palletsprojects.com/en/latest/api/#loaders\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tktech/flask-themer", "keywords": "flask,themes,jinja2", "license": "", "maintainer": "", "maintainer_email": "", "name": "flask-themer", "package_url": "https://pypi.org/project/flask-themer/", "platform": "", "project_url": "https://pypi.org/project/flask-themer/", "project_urls": {"Homepage": "https://github.com/tktech/flask-themer"}, "release_url": "https://pypi.org/project/flask-themer/1.3.0/", "requires_dist": ["flask"], "requires_python": ">=3.6", "summary": "Simple theme mechanism for Flask", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/354a7d54ed6bb6d3287dfa1fc4c310d7dc80ead5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c61736b2d7468656d65723f7374796c653d666c61742d737175617265\">\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4bd8c5799a18b99993080ced6649a31932b2df0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f666c61736b2d7468656d65723f7374796c653d666c61742d737175617265\">\n<img alt=\"GitHub Workflow Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4891e2536fc41d2f85a19605e5fc7d0e82a3a172/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f546b546563682f666c61736b2d7468656d65722f52756e25323074657374733f7374796c653d666c61742d737175617265\"></p>\n<h1>Flask-Themer</h1>\n<p>Simple theme support for flask apps.</p>\n<p>Flask-Themer is inspired by the (seemingly) abandoned <a href=\"https://github.com/maxcountryman/flask-themes\" rel=\"nofollow\">flask-themes</a> project,\nbut has been written from scratch for py3.7+ (or 3.6 with the dataclasses\nbackport). However it is <em>not</em> immediately compatible with flask-themes and\ndoes not seek to be. Flask-Themer tries to have little opinion on how you\nactually structure your project and its themes and does not require a\nparticular metadata format/file.</p>\n<p>Flask-Themer releases follow <a href=\"https://semver.org/\" rel=\"nofollow\">Semantic Versioning</a>.\nFlask-Themer has 100% test coverage and considers it an error to fall below\n100%.</p>\n<h2>Installation</h2>\n<p>Install the latest release from <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a>:</p>\n<pre><code>pip install flask-themer\n</code></pre>\n<p>or get the latest development version from github:</p>\n<pre><code>git clone https://github.com/TkTech/flask-themer.git\ncd flask-themer\npython setup.py develop\n</code></pre>\n<h2>Quickstart</h2>\n<p>Flask-Themer usage is usually very basic, and once setup you likely won't need\nto touch it again. Lets do a quickstart. Notice how we import <code>render_template</code>\nfrom <code>flask_themer</code> instead of <code>flask</code>.</p>\n<p>Our <code>app.py</code> looks like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_themer</span> <span class=\"kn\">import</span> <span class=\"n\">Themer</span><span class=\"p\">,</span> <span class=\"n\">render_template</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">themer</span> <span class=\"o\">=</span> <span class=\"n\">Themer</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@themer</span><span class=\"o\">.</span><span class=\"n\">current_theme_loader</span>\n<span class=\"k\">def</span> <span class=\"nf\">get_current_theme</span><span class=\"p\">():</span>\n    <span class=\"c1\"># This is where you would look up the current user's theme if one was</span>\n    <span class=\"c1\"># logged in, for example.</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'default'</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'hello.html'</span><span class=\"p\">)</span>\n</pre>\n<p>And next to it we have a directory called <code>themes</code> with a directory called\n<code>default</code> inside of it. Our <code>themes/default/hello.html</code> looks like this:</p>\n<pre>Hello world!\n</pre>\n<p>That's it! By default Flask-Themer will look for a <code>themes</code> directory next to\nyour project and assume all the directories inside of it are themes. You can\nchange what directory it looks for with <code>THEMER_DEFAULT_DIRECTORY</code>, or specify\nthe template loaders explicitly to overwrite the default:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_themer</span> <span class=\"kn\">import</span> <span class=\"n\">Themer</span><span class=\"p\">,</span> <span class=\"n\">FileSystemThemeLoader</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">themer</span> <span class=\"o\">=</span> <span class=\"n\">Themer</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">FileSystemThemeLoader</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n        <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">root_path</span><span class=\"p\">,</span>\n        <span class=\"s1\">'also_themes'</span>\n    <span class=\"p\">))</span>\n<span class=\"p\">])</span>\n</pre>\n<h2>Using Themes From Templates</h2>\n<p>Two template globals are added once Flask-Themer is setup, <code>theme()</code> and\n<code>theme_static()</code> (just like flask-themes). These methods look up the currently\nactive theme and look for the given path in that theme, returning a special\npath that Jinja can use to load it.</p>\n<pre>{% extends theme(\"base.html\") %}\n\n{% block header %}\n    {{ super() }}\n    &lt;link rel=\"stylesheet\" href=\"{{ theme_static(\"bootstrap.css\") }}\"&gt;\n{% endblock %}\n</pre>\n<h2>Theme Loaders</h2>\n<p><em>Theme</em> loaders are the mechanism by which Flask-Themer discovers what themes\nare available. You can create a custom loader to get themes from a ZIP file, or\na database for example. Usually if you create a new <code>ThemeLoader</code> you'll also\nneed to create a new Jinja <a href=\"https://jinja.palletsprojects.com/en/latest/api/#loaders\" rel=\"nofollow\"><em>template</em> loader</a> so Jinja knows how to\nread individual templates. Lets do a very minimal example that loads just a\nsingle theme from a ZIP file.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zipfile</span> <span class=\"kn\">import</span> <span class=\"n\">ZipFile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_themer</span> <span class=\"kn\">import</span> <span class=\"n\">ThemeLoader</span><span class=\"p\">,</span> <span class=\"n\">Theme</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jinja2.loaders</span> <span class=\"kn\">import</span> <span class=\"n\">BaseLoader</span><span class=\"p\">,</span> <span class=\"n\">TemplateNotFound</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ZipFileTemplateLoader</span><span class=\"p\">(</span><span class=\"n\">BaseLoader</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">archive</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive</span> <span class=\"o\">=</span> <span class=\"n\">archive</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_source</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">environment</span><span class=\"p\">,</span> <span class=\"n\">template</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">),</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">TemplateNotFound</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ZipFileThemeLoader</span><span class=\"p\">(</span><span class=\"n\">ThemeLoader</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path_to_zip</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive</span> <span class=\"o\">=</span> <span class=\"n\">ZipFile</span><span class=\"p\">(</span><span class=\"n\">path_to_zip</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">themes</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">yield</span> <span class=\"n\">Theme</span><span class=\"p\">(</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'my_dumb_theme'</span><span class=\"p\">,</span>\n            <span class=\"n\">theme_loader</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"n\">jinja_loader</span><span class=\"o\">=</span><span class=\"n\">ZipFileTemplateLoader</span><span class=\"p\">(</span><span class=\"n\">archive</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_static</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">theme</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n</pre>\n<p>And then to use our new loaders we update our previous example:</p>\n<pre><span class=\"o\">...</span>\n<span class=\"n\">themer</span> <span class=\"o\">=</span> <span class=\"n\">Themer</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">loaders</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"n\">ZipFileThemeLoader</span><span class=\"p\">(</span><span class=\"s1\">'my_dumb_theme.zip'</span><span class=\"p\">)</span>\n<span class=\"p\">])</span>\n<span class=\"o\">...</span>\n</pre>\n<p>Pretty simple right? You can see how we could easily create a loader to load\nmultiple themes from an archive, or load a user's customized theme from a\ndatabase.</p>\n\n          </div>"}, "last_serial": 6460644, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "c948898a7ff8bded9f71e6114cfbdfd6", "sha256": "161441c08ea8cbb1ede8713fa487de9a5f08330808f6c4d68e957db63b12055a"}, "downloads": -1, "filename": "flask_themer-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c948898a7ff8bded9f71e6114cfbdfd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3828, "upload_time": "2020-01-05T02:23:30", "upload_time_iso_8601": "2020-01-05T02:23:30.117355Z", "url": "https://files.pythonhosted.org/packages/9f/c2/99a16420eba870ff786e97d4161cee223d29219301737dbcf9184b384ed7/flask_themer-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76c345892a3cd50b3f9939e5b88711a8", "sha256": "fd2364619101af86d6e61420a7925e8030b75a8eff68a6b55578e8dc922b43ee"}, "downloads": -1, "filename": "flask-themer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "76c345892a3cd50b3f9939e5b88711a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2578, "upload_time": "2020-01-05T02:23:32", "upload_time_iso_8601": "2020-01-05T02:23:32.257792Z", "url": "https://files.pythonhosted.org/packages/42/ec/442a0fd2e27336f4b142b3f1b9098a388002c7a5ea7ba926f22724e1e16a/flask-themer-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "24fbc374d88dc707f183e48a879378f0", "sha256": "79f6c9e194db210e1ee8e48cebaf37d408ef0a773685d179b99a39f8a191a83f"}, "downloads": -1, "filename": "flask_themer-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "24fbc374d88dc707f183e48a879378f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6133, "upload_time": "2020-01-10T21:29:39", "upload_time_iso_8601": "2020-01-10T21:29:39.428544Z", "url": "https://files.pythonhosted.org/packages/f9/95/460e92c88ba589179c091eb9c43865dd7fdbbdc20f11b17b55903e81478f/flask_themer-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a47925ae361c34cd995f077add9b1ecd", "sha256": "e9abf00fe441195202cfbe78ddb5f1ffa5f61a51f521dcbe236aaa083694871e"}, "downloads": -1, "filename": "flask-themer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a47925ae361c34cd995f077add9b1ecd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5255, "upload_time": "2020-01-10T21:29:41", "upload_time_iso_8601": "2020-01-10T21:29:41.721076Z", "url": "https://files.pythonhosted.org/packages/35/0c/4aec719208981775aed5d255a315c2b690bb5c670a98763b3028b28afde2/flask-themer-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "7868082a0188334d724b2336d1610137", "sha256": "8e4cb9e03bca5bd118795428702b86415ff5467ef64c69e7a9d4de7c03e53bfe"}, "downloads": -1, "filename": "flask_themer-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7868082a0188334d724b2336d1610137", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6245, "upload_time": "2020-01-10T22:39:25", "upload_time_iso_8601": "2020-01-10T22:39:25.021363Z", "url": "https://files.pythonhosted.org/packages/1a/60/efcc6d05d8adbf7d0b1a08248adfacb1d35ffb3168d67b024c9b037ec4e3/flask_themer-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7dd3339087dfe5b55aaf2be6e2d1925", "sha256": "50ebc74ea3b8606ae2b7fb330c395b3e48f5638bae3ab664cce571deb9beae86"}, "downloads": -1, "filename": "flask-themer-1.1.1.tar.gz", "has_sig": false, "md5_digest": "d7dd3339087dfe5b55aaf2be6e2d1925", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5360, "upload_time": "2020-01-10T22:39:26", "upload_time_iso_8601": "2020-01-10T22:39:26.302778Z", "url": "https://files.pythonhosted.org/packages/04/ce/57f8683d58bace44c3640e834290d1f932cf73993e4602d09f777a2d1ecc/flask-themer-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "2df54dbac297d2074a2e08f6c375f0b6", "sha256": "eece60ed5a0fa70884ffbde97d54a4213d7946b44353856d0fc3d90c47fee374"}, "downloads": -1, "filename": "flask_themer-1.2.0-py3.7.egg", "has_sig": false, "md5_digest": "2df54dbac297d2074a2e08f6c375f0b6", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 9592, "upload_time": "2020-01-15T16:43:15", "upload_time_iso_8601": "2020-01-15T16:43:15.969836Z", "url": "https://files.pythonhosted.org/packages/c7/79/6a3d566944851307a02c283e79858fb84bb657c47a3fdc582f5863522d3b/flask_themer-1.2.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce942733a36217fa594350c818a6be76", "sha256": "33f7a407c7d929e4c5f960c66b8a9969f2f94ba1a0616eeb0e15b1952e53af10"}, "downloads": -1, "filename": "flask_themer-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ce942733a36217fa594350c818a6be76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6727, "upload_time": "2020-01-15T16:43:02", "upload_time_iso_8601": "2020-01-15T16:43:02.941106Z", "url": "https://files.pythonhosted.org/packages/a9/4e/1fc0394dec26a42d85f53a46147695563c8d9e5956fd0acdff0d20080bd7/flask_themer-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "caced4603f6e1388d2f4b27cd127fc2d", "sha256": "9bdbf774c0799a67e8da984fbdd14b53f62589ca07c4562a44f3593c4cef5389"}, "downloads": -1, "filename": "flask-themer-1.2.0.tar.gz", "has_sig": false, "md5_digest": "caced4603f6e1388d2f4b27cd127fc2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5869, "upload_time": "2020-01-15T16:43:14", "upload_time_iso_8601": "2020-01-15T16:43:14.973065Z", "url": "https://files.pythonhosted.org/packages/34/02/e52376cbe4f5bfcf90143b35d911f2fd50c1489657f725499bde2aede57c/flask-themer-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "45a41a41b87098cebcc11b01dd56b2f9", "sha256": "ae3c0a3f17d2ee81bae573e0f34424fa9f8172f5d4311fec27526ab1035e2575"}, "downloads": -1, "filename": "flask_themer-1.3.0-py3.7.egg", "has_sig": false, "md5_digest": "45a41a41b87098cebcc11b01dd56b2f9", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 9670, "upload_time": "2020-01-15T18:53:40", "upload_time_iso_8601": "2020-01-15T18:53:40.904585Z", "url": "https://files.pythonhosted.org/packages/b5/7f/8aa9cdcdc2ed5d01da360ce60f7dc65849bca489129f277f5232494b853d/flask_themer-1.3.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3f2b6d0bdc243b5ca718a2c7a97be98", "sha256": "ddfc17c7ddf2de1a6292c09f7bc9b0953c5c786a3320b02c4842ebb58418323e"}, "downloads": -1, "filename": "flask_themer-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a3f2b6d0bdc243b5ca718a2c7a97be98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6776, "upload_time": "2020-01-15T18:53:38", "upload_time_iso_8601": "2020-01-15T18:53:38.175877Z", "url": "https://files.pythonhosted.org/packages/fc/68/47e86ba5a6c3d404d7b84ab274c0209f449b31c8a38ef484a0725e3c7beb/flask_themer-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de953c13e8bc2c85db9cf71f729a0082", "sha256": "327db7e3cc2cd952e0dab9f57ebf4d7f4e90688a53a709e407d6c363f0f239d1"}, "downloads": -1, "filename": "flask-themer-1.3.0.tar.gz", "has_sig": false, "md5_digest": "de953c13e8bc2c85db9cf71f729a0082", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5902, "upload_time": "2020-01-15T18:53:39", "upload_time_iso_8601": "2020-01-15T18:53:39.691422Z", "url": "https://files.pythonhosted.org/packages/eb/ae/db74d350938165cc706092c941fb603312d177050b349a9962a177a9eed3/flask-themer-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "45a41a41b87098cebcc11b01dd56b2f9", "sha256": "ae3c0a3f17d2ee81bae573e0f34424fa9f8172f5d4311fec27526ab1035e2575"}, "downloads": -1, "filename": "flask_themer-1.3.0-py3.7.egg", "has_sig": false, "md5_digest": "45a41a41b87098cebcc11b01dd56b2f9", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 9670, "upload_time": "2020-01-15T18:53:40", "upload_time_iso_8601": "2020-01-15T18:53:40.904585Z", "url": "https://files.pythonhosted.org/packages/b5/7f/8aa9cdcdc2ed5d01da360ce60f7dc65849bca489129f277f5232494b853d/flask_themer-1.3.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3f2b6d0bdc243b5ca718a2c7a97be98", "sha256": "ddfc17c7ddf2de1a6292c09f7bc9b0953c5c786a3320b02c4842ebb58418323e"}, "downloads": -1, "filename": "flask_themer-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a3f2b6d0bdc243b5ca718a2c7a97be98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6776, "upload_time": "2020-01-15T18:53:38", "upload_time_iso_8601": "2020-01-15T18:53:38.175877Z", "url": "https://files.pythonhosted.org/packages/fc/68/47e86ba5a6c3d404d7b84ab274c0209f449b31c8a38ef484a0725e3c7beb/flask_themer-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de953c13e8bc2c85db9cf71f729a0082", "sha256": "327db7e3cc2cd952e0dab9f57ebf4d7f4e90688a53a709e407d6c363f0f239d1"}, "downloads": -1, "filename": "flask-themer-1.3.0.tar.gz", "has_sig": false, "md5_digest": "de953c13e8bc2c85db9cf71f729a0082", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5902, "upload_time": "2020-01-15T18:53:39", "upload_time_iso_8601": "2020-01-15T18:53:39.691422Z", "url": "https://files.pythonhosted.org/packages/eb/ae/db74d350938165cc706092c941fb603312d177050b349a9962a177a9eed3/flask-themer-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:12 2020"}