{"info": {"author": "Evandro Coan", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Create Pull Requests\n\nCreate pull requests programmatically using the GitHub API.\n\n\n### Usage\n\n```\n$ githubpullrequests -h\nusage: githubpullrequests [-h] [-f FILE] [-t TOKEN] [-mr MAXIMUM_REPOSITORIES]\n                          [-c] [-s]\n\nCreate Pull Requests, using GitHub API and a list of repositories\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f FILE, --file FILE  The file with the repositories informations\n  -t TOKEN, --token TOKEN\n                        GitHub token with `public_repos` access, or the path\n                        to a file with the Github token in plain text. The\n                        only contents the file can have is the token,\n                        optionally with a tralling new line.\n  -mr MAXIMUM_REPOSITORIES, --maximum-repositories MAXIMUM_REPOSITORIES\n                        The maximum count of repositories/requests to process\n                        per file.\n  -c, --cancel-operation\n                        If there is some batch operation running, cancel it as\n                        soons as possible.\n  -s, --synced-repositories\n                        Reports which repositories not Synchronized with Pull\n                        Requests. This also resets/skips any last session\n                        saved due old throw/raised exceptions, because to\n                        compute correctly the repositories list, it is\n                        required to know all available repositories.\n```\n\nFor example:\n```\n$ githubpullrequests -f repositories_list.txt\n```\n\nExample of `repositories_list.txt`:\n```config\n[Anything Unique like evandrocoan/SublimePackageDefault]\n    url = https://github.com/evandrocoan/SublimePackageDefault\n    upstream = https://github.com/evandroforks/SublimePackageDefault\n    branches = upstream_branch_name->fork_branch_name,\n```\n\nYou need to define the environment variable `GITHUBPULLREQUESTS_TOKEN` with the GitHub access token with `public_repos` permission,\nor pass the command line argument `-t token` to `githubpullrequests`.\n\n1. https://stackoverflow.com/questions/47467039/how-to-create-github-pull-request-using-curl\n1. https://stackoverflow.com/questions/28391901/using-the-github-api-create-git-pull-request-without-checking-out-the-code\n\n\n# License\n\nSee the file [LICENSE.txt](LICENSE.txt)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/evandrocoan/githubpullrequests", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "githubpullrequests", "package_url": "https://pypi.org/project/githubpullrequests/", "platform": "", "project_url": "https://pypi.org/project/githubpullrequests/", "project_urls": {"Homepage": "https://github.com/evandrocoan/githubpullrequests"}, "release_url": "https://pypi.org/project/githubpullrequests/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Create Pull Requests, using GitHub API and a list of repositories", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Create Pull Requests</h1>\n<p>Create pull requests programmatically using the GitHub API.</p>\n<h3>Usage</h3>\n<pre><code>$ githubpullrequests -h\nusage: githubpullrequests [-h] [-f FILE] [-t TOKEN] [-mr MAXIMUM_REPOSITORIES]\n                          [-c] [-s]\n\nCreate Pull Requests, using GitHub API and a list of repositories\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f FILE, --file FILE  The file with the repositories informations\n  -t TOKEN, --token TOKEN\n                        GitHub token with `public_repos` access, or the path\n                        to a file with the Github token in plain text. The\n                        only contents the file can have is the token,\n                        optionally with a tralling new line.\n  -mr MAXIMUM_REPOSITORIES, --maximum-repositories MAXIMUM_REPOSITORIES\n                        The maximum count of repositories/requests to process\n                        per file.\n  -c, --cancel-operation\n                        If there is some batch operation running, cancel it as\n                        soons as possible.\n  -s, --synced-repositories\n                        Reports which repositories not Synchronized with Pull\n                        Requests. This also resets/skips any last session\n                        saved due old throw/raised exceptions, because to\n                        compute correctly the repositories list, it is\n                        required to know all available repositories.\n</code></pre>\n<p>For example:</p>\n<pre><code>$ githubpullrequests -f repositories_list.txt\n</code></pre>\n<p>Example of <code>repositories_list.txt</code>:</p>\n<pre>[Anything Unique like evandrocoan/SublimePackageDefault]\n    url = https://github.com/evandrocoan/SublimePackageDefault\n    upstream = https://github.com/evandroforks/SublimePackageDefault\n    branches = upstream_branch_name-&gt;fork_branch_name,\n</pre>\n<p>You need to define the environment variable <code>GITHUBPULLREQUESTS_TOKEN</code> with the GitHub access token with <code>public_repos</code> permission,\nor pass the command line argument <code>-t token</code> to <code>githubpullrequests</code>.</p>\n<ol>\n<li><a href=\"https://stackoverflow.com/questions/47467039/how-to-create-github-pull-request-using-curl\" rel=\"nofollow\">https://stackoverflow.com/questions/47467039/how-to-create-github-pull-request-using-curl</a></li>\n<li><a href=\"https://stackoverflow.com/questions/28391901/using-the-github-api-create-git-pull-request-without-checking-out-the-code\" rel=\"nofollow\">https://stackoverflow.com/questions/28391901/using-the-github-api-create-git-pull-request-without-checking-out-the-code</a></li>\n</ol>\n<h1>License</h1>\n<p>See the file <a href=\"LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a></p>\n\n          </div>"}, "last_serial": 4688931, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d840d7809bd73f8ad159aa3502f93b4b", "sha256": "416fdf2016d2cc1bc78a842be9dbb3c7d4b886597396a7329a5970027c785a79"}, "downloads": -1, "filename": "githubpullrequests-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d840d7809bd73f8ad159aa3502f93b4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19617, "upload_time": "2019-01-12T17:59:11", "upload_time_iso_8601": "2019-01-12T17:59:11.202763Z", "url": "https://files.pythonhosted.org/packages/0c/7d/c31e25dffaabe1876562f9f8d60aaae1a9b4e5dba47d628cf7d6bd9859c8/githubpullrequests-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d840d7809bd73f8ad159aa3502f93b4b", "sha256": "416fdf2016d2cc1bc78a842be9dbb3c7d4b886597396a7329a5970027c785a79"}, "downloads": -1, "filename": "githubpullrequests-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d840d7809bd73f8ad159aa3502f93b4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19617, "upload_time": "2019-01-12T17:59:11", "upload_time_iso_8601": "2019-01-12T17:59:11.202763Z", "url": "https://files.pythonhosted.org/packages/0c/7d/c31e25dffaabe1876562f9f8d60aaae1a9b4e5dba47d628cf7d6bd9859c8/githubpullrequests-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:59 2020"}