{"info": {"author": "Thibault Hilaire", "author_email": "thibault@docmatic.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Topic :: Software Development", "Topic :: System :: Hardware", "Topic :: System :: Hardware :: Hardware Drivers"], "description": "# rpi-TM1638\n=============\n\n`rpi-TM1638` is (yet another) Raspberry Pi driver for (chained) TM1638 boards like the 2$ cheap ones you can buy online.\n\n![One of these TM1638 board](doc/TM1638.JPG)\n\nThese boards have onboard eight 7-segment displays, 8 LEDs and 8 switches.\n With few lines, you can control several TM1638 boards, and uses several LEDs, 7-segment displays and switches with few GPIOs of your Raspberry Pi.\n \n Example: suppose you have two TM1638 boards, that share DataIO on GPIO19 and the clock on GPIO13. They have their STB plugged on GPIO 6 and 26. \n The following program turns on the LEDs #0 (3rd left of the 1st board) and #9 (2nd left of the 2nd board). It displays `12345678` on the first 7-segment display, and `2.3` on the 2nd one.\n It captures the #2 switch (3rd if tge 1st board)\n  \n    DIO = 19\n    CLK = 13\n    STB = 06, 26\n\n    TM = TMBoards(DIO, CLK, STB, 0)\n\n    TM.leds[3] = True\n    TM.leds[9] = True\n\n    TM.segments[0] = '12345678'\n    TM.segments[10] = '2.3'\n    \n    a = TM.switches[2]\n\nThe `rpi-TM1638` proposes a two-level API:\n- The class `chainedTM1638` proposes low-level function to manipulate the TM chips:\n  - `turnOn(brightness)`,  `turnOff` and `clearDisplay` to turn on/off the displays, clear the displays or set the brightness\n  - `sendCommand` and `sendData` to talk with the TM chip\n  - plus some intern functions (to change the data mode, etc.)\n- The class `TMboards` (that inherits from `chainedTM1638`) proposes somes methods to manipulate the LEDs, 7-segment displays and switches, with some getter/setter on the properties:\n  - `leds`: for the leds\n  - `segments`: for the 7-segment displays\n  - `switches`: for the switches\n  \n  \nTo use the package, you just need to create a `TMboards` object or create a class that inherits from `TMboards` and proposes some high-level properties on top of it.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thilaire/rpi_TM1638", "keywords": "TM1638 driver chained raspberry pi", "license": "GPL3", "maintainer": null, "maintainer_email": null, "name": "rpi_TM1638", "package_url": "https://pypi.org/project/rpi_TM1638/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rpi_TM1638/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/thilaire/rpi_TM1638"}, "release_url": "https://pypi.org/project/rpi_TM1638/0.1/", "requires_dist": null, "requires_python": null, "summary": "A Raspberry Pi driver for (chained) TM1638 boards", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # rpi-TM1638<br>=============<br><br>`rpi-TM1638` is (yet another) Raspberry Pi driver for (chained) TM1638 boards like the 2$ cheap ones you can buy online.<br><br>![One of these TM1638 board](doc/TM1638.JPG)<br><br>These boards have onboard eight 7-segment displays, 8 LEDs and 8 switches.<br> With few lines, you can control several TM1638 boards, and uses several LEDs, 7-segment displays and switches with few GPIOs of your Raspberry Pi.<br> <br> Example: suppose you have two TM1638 boards, that share DataIO on GPIO19 and the clock on GPIO13. They have their STB plugged on GPIO 6 and 26. <br> The following program turns on the LEDs #0 (3rd left of the 1st board) and #9 (2nd left of the 2nd board). It displays `12345678` on the first 7-segment display, and `2.3` on the 2nd one.<br> It captures the #2 switch (3rd if tge 1st board)<br>  <br>    DIO = 19<br>    CLK = 13<br>    STB = 06, 26<br><br>    TM = TMBoards(DIO, CLK, STB, 0)<br><br>    TM.leds[3] = True<br>    TM.leds[9] = True<br><br>    TM.segments[0] = '12345678'<br>    TM.segments[10] = '2.3'<br>    <br>    a = TM.switches[2]<br><br>The `rpi-TM1638` proposes a two-level API:<br>- The class `chainedTM1638` proposes low-level function to manipulate the TM chips:<br>  - `turnOn(brightness)`,  `turnOff` and `clearDisplay` to turn on/off the displays, clear the displays or set the brightness<br>  - `sendCommand` and `sendData` to talk with the TM chip<br>  - plus some intern functions (to change the data mode, etc.)<br>- The class `TMboards` (that inherits from `chainedTM1638`) proposes somes methods to manipulate the LEDs, 7-segment displays and switches, with some getter/setter on the properties:<br>  - `leds`: for the leds<br>  - `segments`: for the 7-segment displays<br>  - `switches`: for the switches<br>  <br>  <br>To use the package, you just need to create a `TMboards` object or create a class that inherits from `TMboards` and proposes some high-level properties on top of it.\n          </div>"}, "last_serial": 2829930, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 03:00:53 2020"}