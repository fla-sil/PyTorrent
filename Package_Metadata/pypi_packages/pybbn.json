{"info": {"author": "Jee Vang", "author_email": "vangjee@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "PyBBN\n-----\n\nPyBBN is Python library for Bayesian Belief Networks (BBNs) exact inference using the\n`junction tree algorithm <https://en.wikipedia.org/wiki/Junction_tree_algorithm>`_ or Probability\nPropagation in Trees of Clusters. The implementation is taken directly from `C. Huang and A. Darwiche, \"Inference in\nBelief Networks: A Procedural Guide,\" in International Journal of Approximate Reasoning, vol. 15,\npp. 225--263, 1999 <http://pages.cs.wisc.edu/~dpage/ijar95.pdf>`_. PyBBN also has approximate\ninference algorithm using `Gibbs sampling <http://www.mit.edu/~ilkery/papers/GibbsSampling.pdf>`_ for\nlinear Gaussian BBN models. The exact inference algorithm is for BBNs that have all variables\nthat are discrete, while the approximate inference algorithm is for BBNs that have all variables\nthat are continuous (and assume to take a multivariate Gaussian distribution). Additionally, there is\nthe ability to generate singly- and multi-connected graphs, which is taken from `JS Ide and FG Cozman,\n\"Random Generation of Bayesian Network,\" in Advances in Artificial Intelligence, Lecture Notes in Computer Science, vol 2507 <https://pdfs.semanticscholar.org/5273/2fb57129443592024b0e7e46c2a1ec36639c.pdf>`_.\n\nExact Inference Usage\n---------------------\n\nBelow is an example code to create a Bayesian Belief Network, transform it into a join tree,\nand then set observation evidence. The last line prints the marginal probabilities for each node.\n\n.. code:: python\n\n    from pybbn.graph.dag import Bbn\n    from pybbn.graph.edge import Edge, EdgeType\n    from pybbn.graph.jointree import EvidenceBuilder\n    from pybbn.graph.node import BbnNode\n    from pybbn.graph.variable import Variable\n    from pybbn.pptc.inferencecontroller import InferenceController\n\n    # create the nodes\n    a = BbnNode(Variable(0, 'a', ['on', 'off']), [0.5, 0.5])\n    b = BbnNode(Variable(1, 'b', ['on', 'off']), [0.5, 0.5, 0.4, 0.6])\n    c = BbnNode(Variable(2, 'c', ['on', 'off']), [0.7, 0.3, 0.2, 0.8])\n    d = BbnNode(Variable(3, 'd', ['on', 'off']), [0.9, 0.1, 0.5, 0.5])\n    e = BbnNode(Variable(4, 'e', ['on', 'off']), [0.3, 0.7, 0.6, 0.4])\n    f = BbnNode(Variable(5, 'f', ['on', 'off']), [0.01, 0.99, 0.01, 0.99, 0.01, 0.99, 0.99, 0.01])\n    g = BbnNode(Variable(6, 'g', ['on', 'off']), [0.8, 0.2, 0.1, 0.9])\n    h = BbnNode(Variable(7, 'h', ['on', 'off']), [0.05, 0.95, 0.95, 0.05, 0.95, 0.05, 0.95, 0.05])\n\n    # create the network structure\n    bbn = Bbn() \\\n        .add_node(a) \\\n        .add_node(b) \\\n        .add_node(c) \\\n        .add_node(d) \\\n        .add_node(e) \\\n        .add_node(f) \\\n        .add_node(g) \\\n        .add_node(h) \\\n        .add_edge(Edge(a, b, EdgeType.DIRECTED)) \\\n        .add_edge(Edge(a, c, EdgeType.DIRECTED)) \\\n        .add_edge(Edge(b, d, EdgeType.DIRECTED)) \\\n        .add_edge(Edge(c, e, EdgeType.DIRECTED)) \\\n        .add_edge(Edge(d, f, EdgeType.DIRECTED)) \\\n        .add_edge(Edge(e, f, EdgeType.DIRECTED)) \\\n        .add_edge(Edge(c, g, EdgeType.DIRECTED)) \\\n        .add_edge(Edge(e, h, EdgeType.DIRECTED)) \\\n        .add_edge(Edge(g, h, EdgeType.DIRECTED))\n\n    # convert the BBN to a join tree\n    join_tree = InferenceController.apply(bbn)\n\n    # insert an observation evidence\n    ev = EvidenceBuilder() \\\n        .with_node(join_tree.get_bbn_node_by_name('a')) \\\n        .with_evidence('on', 1.0) \\\n        .build()\n    join_tree.set_observation(ev)\n\n    # print the marginal probabilities\n    for node in join_tree.get_bbn_nodes():\n        potential = join_tree.get_bbn_potential(node)\n        print(node)\n        print(potential)\n\nApproximate Inference Usage\n---------------------------\n\nBelow is an example to create a linear Gaussian BBN and perform inference.\n\n.. code:: python\n\n    import numpy as np\n    from pybbn.lg.graph import Dag, Parameters, Bbn\n\n    # create the directed acylic graph\n    dag = Dag()\n    dag.add_node(0)\n    dag.add_node(1)\n    dag.add_edge(0, 1)\n\n    # create parameters\n    means = np.array([0, 25])\n    cov = np.array([\n        [1.09, 1.95],\n        [1.95, 4.52]\n    ])\n    params = Parameters(means, cov)\n\n    # create the bayesian belief network\n    bbn = Bbn(dag, params)\n\n    # do the inference\n    M, C = bbn.do_inference()\n    print(M)\n\n    # set the evidence on node 0 to a value of 1\n    bbn.set_evidence(0, 1)\n    M, C = bbn.do_inference()\n    print(M)\n    bbn.clear_evidences()\n\n    # set the evidence on node 1 to a value of 20\n    bbn.set_evidence(1, 20)\n    M, C = bbn.do_inference()\n    print(M)\n    bbn.clear_evidences()\n\nBuilding\n--------\n\nTo build, you will need Python 2.7 or 3.7. Managing environments through `Anaconda <https://www.anaconda.com/download/#linux>`_\nis highly recommended to be able to build this project (though not absolutely required if you know\nwhat you are doing). Assuming you have installed Anaconda, you may create an environment as\nfollows (make sure you `cd` into the root of this project's location).\n\nFor Python 2.7.\n\n\n.. code:: bash\n\n    conda env create -f environment-py27.yml\n    conda activate pybbn27\n    python -m ipykernel install --user --name pybbn27 --display-name \"pybbn27\"\n\n\nFor Python 3.7.\n\n\n.. code:: bash\n\n    conda env create -f environment-py37.yml\n    conda activate pybbn37\n    python -m ipykernel install --user --name pybbn37 --display-name \"pybbn37\"\n\n\nThen you may build the project as follows. (Note that in Python 3.6 you will get some warnings).\n\n\n.. code:: bash\n\n    make build\n\n\nTo build the documents, go into the docs sub-directory and type in the following.\n\n.. code:: bash\n\n    make html\n\n\nInstalling\n----------\n\nUse pip to install the package as it has been published to `PyPi <https://pypi.python.org/pypi/pybbn>`_.\n\n.. code:: bash\n\n    pip install pybbn\n\n\nOther Python Bayesian Belief Network Inference Libraries\n--------------------------------------------------------\n\nHere is a list of other Python libraries for inference in Bayesian Belief Networks.\n\n* `BayesPy <https://github.com/bayespy/bayespy>`_\n* `pomegranate <https://github.com/jmschrei/pomegranate>`_\n* `pgmpy <https://github.com/pgmpy/pgmpy>`_\n* `libpgm <https://github.com/CyberPoint/libpgm>`_\n* `bayesnetinference <https://github.com/sonph/bayesnetinference>`_\n\nI found other `packages <https://pypi.python.org/pypi?%3Aaction=search&term=bayesian+network&submit=search>`_ in PyPI too.\n\nCitation\n--------\n\n.. code::\n\n    @misc{vang_2017,\n    title={PyBBN},\n    url={https://github.com/vangj/py-bbn/},\n    journal={GitHub},\n    author={Vang, Jee},\n    year={2017},\n    month={Jan}}\n\n\nCopyright Stuff\n---------------\n\n.. code::\n\n    Copyright 2017 Jee Vang\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vangj/py-bbn", "keywords": "bayesian belief network exact approximate inference junction tree algorithm pptc dag gibbs sampling multivariate conditional gaussian linear causal causality structure parameter", "license": "", "maintainer": "", "maintainer_email": "", "name": "pybbn", "package_url": "https://pypi.org/project/pybbn/", "platform": "", "project_url": "https://pypi.org/project/pybbn/", "project_urls": {"Homepage": "https://github.com/vangj/py-bbn"}, "release_url": "https://pypi.org/project/pybbn/1.0.9/", "requires_dist": null, "requires_python": "", "summary": "Learning and Inference in Bayesian Belief Networks", "version": "1.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pybbn\">\n<h2>PyBBN</h2>\n<p>PyBBN is Python library for Bayesian Belief Networks (BBNs) exact inference using the\n<a href=\"https://en.wikipedia.org/wiki/Junction_tree_algorithm\" rel=\"nofollow\">junction tree algorithm</a> or Probability\nPropagation in Trees of Clusters. The implementation is taken directly from <a href=\"http://pages.cs.wisc.edu/~dpage/ijar95.pdf\" rel=\"nofollow\">C. Huang and A. Darwiche, \u201cInference in\nBelief Networks: A Procedural Guide,\u201d in International Journal of Approximate Reasoning, vol. 15,\npp. 225\u2013263, 1999</a>. PyBBN also has approximate\ninference algorithm using <a href=\"http://www.mit.edu/~ilkery/papers/GibbsSampling.pdf\" rel=\"nofollow\">Gibbs sampling</a> for\nlinear Gaussian BBN models. The exact inference algorithm is for BBNs that have all variables\nthat are discrete, while the approximate inference algorithm is for BBNs that have all variables\nthat are continuous (and assume to take a multivariate Gaussian distribution). Additionally, there is\nthe ability to generate singly- and multi-connected graphs, which is taken from <a href=\"https://pdfs.semanticscholar.org/5273/2fb57129443592024b0e7e46c2a1ec36639c.pdf\" rel=\"nofollow\">JS Ide and FG Cozman,\n\u201cRandom Generation of Bayesian Network,\u201d in Advances in Artificial Intelligence, Lecture Notes in Computer Science, vol 2507</a>.</p>\n</div>\n<div id=\"exact-inference-usage\">\n<h2>Exact Inference Usage</h2>\n<p>Below is an example code to create a Bayesian Belief Network, transform it into a join tree,\nand then set observation evidence. The last line prints the marginal probabilities for each node.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pybbn.graph.dag</span> <span class=\"kn\">import</span> <span class=\"n\">Bbn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pybbn.graph.edge</span> <span class=\"kn\">import</span> <span class=\"n\">Edge</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pybbn.graph.jointree</span> <span class=\"kn\">import</span> <span class=\"n\">EvidenceBuilder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pybbn.graph.node</span> <span class=\"kn\">import</span> <span class=\"n\">BbnNode</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pybbn.graph.variable</span> <span class=\"kn\">import</span> <span class=\"n\">Variable</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pybbn.pptc.inferencecontroller</span> <span class=\"kn\">import</span> <span class=\"n\">InferenceController</span>\n\n<span class=\"c1\"># create the nodes</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">BbnNode</span><span class=\"p\">(</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'off'</span><span class=\"p\">]),</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">])</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">BbnNode</span><span class=\"p\">(</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'off'</span><span class=\"p\">]),</span> <span class=\"p\">[</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">])</span>\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">BbnNode</span><span class=\"p\">(</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'off'</span><span class=\"p\">]),</span> <span class=\"p\">[</span><span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">])</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">BbnNode</span><span class=\"p\">(</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'d'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'off'</span><span class=\"p\">]),</span> <span class=\"p\">[</span><span class=\"mf\">0.9</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">])</span>\n<span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"n\">BbnNode</span><span class=\"p\">(</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s1\">'e'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'off'</span><span class=\"p\">]),</span> <span class=\"p\">[</span><span class=\"mf\">0.3</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.6</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">])</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">BbnNode</span><span class=\"p\">(</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">'f'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'off'</span><span class=\"p\">]),</span> <span class=\"p\">[</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.99</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.99</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.99</span><span class=\"p\">,</span> <span class=\"mf\">0.99</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">])</span>\n<span class=\"n\">g</span> <span class=\"o\">=</span> <span class=\"n\">BbnNode</span><span class=\"p\">(</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">'g'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'off'</span><span class=\"p\">]),</span> <span class=\"p\">[</span><span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">,</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.9</span><span class=\"p\">])</span>\n<span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">BbnNode</span><span class=\"p\">(</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"s1\">'h'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"s1\">'off'</span><span class=\"p\">]),</span> <span class=\"p\">[</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">,</span> <span class=\"mf\">0.05</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># create the network structure</span>\n<span class=\"n\">bbn</span> <span class=\"o\">=</span> <span class=\"n\">Bbn</span><span class=\"p\">()</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"n\">Edge</span><span class=\"p\">(</span><span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"n\">EdgeType</span><span class=\"o\">.</span><span class=\"n\">DIRECTED</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># convert the BBN to a join tree</span>\n<span class=\"n\">join_tree</span> <span class=\"o\">=</span> <span class=\"n\">InferenceController</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">bbn</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># insert an observation evidence</span>\n<span class=\"n\">ev</span> <span class=\"o\">=</span> <span class=\"n\">EvidenceBuilder</span><span class=\"p\">()</span> \\\n    <span class=\"o\">.</span><span class=\"n\">with_node</span><span class=\"p\">(</span><span class=\"n\">join_tree</span><span class=\"o\">.</span><span class=\"n\">get_bbn_node_by_name</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">))</span> \\\n    <span class=\"o\">.</span><span class=\"n\">with_evidence</span><span class=\"p\">(</span><span class=\"s1\">'on'</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span> \\\n    <span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n<span class=\"n\">join_tree</span><span class=\"o\">.</span><span class=\"n\">set_observation</span><span class=\"p\">(</span><span class=\"n\">ev</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># print the marginal probabilities</span>\n<span class=\"k\">for</span> <span class=\"n\">node</span> <span class=\"ow\">in</span> <span class=\"n\">join_tree</span><span class=\"o\">.</span><span class=\"n\">get_bbn_nodes</span><span class=\"p\">():</span>\n    <span class=\"n\">potential</span> <span class=\"o\">=</span> <span class=\"n\">join_tree</span><span class=\"o\">.</span><span class=\"n\">get_bbn_potential</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">potential</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"approximate-inference-usage\">\n<h2>Approximate Inference Usage</h2>\n<p>Below is an example to create a linear Gaussian BBN and perform inference.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pybbn.lg.graph</span> <span class=\"kn\">import</span> <span class=\"n\">Dag</span><span class=\"p\">,</span> <span class=\"n\">Parameters</span><span class=\"p\">,</span> <span class=\"n\">Bbn</span>\n\n<span class=\"c1\"># create the directed acylic graph</span>\n<span class=\"n\">dag</span> <span class=\"o\">=</span> <span class=\"n\">Dag</span><span class=\"p\">()</span>\n<span class=\"n\">dag</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">dag</span><span class=\"o\">.</span><span class=\"n\">add_node</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">dag</span><span class=\"o\">.</span><span class=\"n\">add_edge</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create parameters</span>\n<span class=\"n\">means</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">])</span>\n<span class=\"n\">cov</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span>\n    <span class=\"p\">[</span><span class=\"mf\">1.09</span><span class=\"p\">,</span> <span class=\"mf\">1.95</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"mf\">1.95</span><span class=\"p\">,</span> <span class=\"mf\">4.52</span><span class=\"p\">]</span>\n<span class=\"p\">])</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">Parameters</span><span class=\"p\">(</span><span class=\"n\">means</span><span class=\"p\">,</span> <span class=\"n\">cov</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># create the bayesian belief network</span>\n<span class=\"n\">bbn</span> <span class=\"o\">=</span> <span class=\"n\">Bbn</span><span class=\"p\">(</span><span class=\"n\">dag</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># do the inference</span>\n<span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">bbn</span><span class=\"o\">.</span><span class=\"n\">do_inference</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set the evidence on node 0 to a value of 1</span>\n<span class=\"n\">bbn</span><span class=\"o\">.</span><span class=\"n\">set_evidence</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">bbn</span><span class=\"o\">.</span><span class=\"n\">do_inference</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">)</span>\n<span class=\"n\">bbn</span><span class=\"o\">.</span><span class=\"n\">clear_evidences</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># set the evidence on node 1 to a value of 20</span>\n<span class=\"n\">bbn</span><span class=\"o\">.</span><span class=\"n\">set_evidence</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"n\">M</span><span class=\"p\">,</span> <span class=\"n\">C</span> <span class=\"o\">=</span> <span class=\"n\">bbn</span><span class=\"o\">.</span><span class=\"n\">do_inference</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">M</span><span class=\"p\">)</span>\n<span class=\"n\">bbn</span><span class=\"o\">.</span><span class=\"n\">clear_evidences</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"building\">\n<h2>Building</h2>\n<p>To build, you will need Python 2.7 or 3.7. Managing environments through <a href=\"https://www.anaconda.com/download/#linux\" rel=\"nofollow\">Anaconda</a>\nis highly recommended to be able to build this project (though not absolutely required if you know\nwhat you are doing). Assuming you have installed Anaconda, you may create an environment as\nfollows (make sure you <cite>cd</cite> into the root of this project\u2019s location).</p>\n<p>For Python 2.7.</p>\n<pre>conda env create -f environment-py27.yml\nconda activate pybbn27\npython -m ipykernel install --user --name pybbn27 --display-name <span class=\"s2\">\"pybbn27\"</span>\n</pre>\n<p>For Python 3.7.</p>\n<pre>conda env create -f environment-py37.yml\nconda activate pybbn37\npython -m ipykernel install --user --name pybbn37 --display-name <span class=\"s2\">\"pybbn37\"</span>\n</pre>\n<p>Then you may build the project as follows. (Note that in Python 3.6 you will get some warnings).</p>\n<pre>make build\n</pre>\n<p>To build the documents, go into the docs sub-directory and type in the following.</p>\n<pre>make html\n</pre>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Use pip to install the package as it has been published to <a href=\"https://pypi.python.org/pypi/pybbn\" rel=\"nofollow\">PyPi</a>.</p>\n<pre>pip install pybbn\n</pre>\n</div>\n<div id=\"other-python-bayesian-belief-network-inference-libraries\">\n<h2>Other Python Bayesian Belief Network Inference Libraries</h2>\n<p>Here is a list of other Python libraries for inference in Bayesian Belief Networks.</p>\n<ul>\n<li><a href=\"https://github.com/bayespy/bayespy\" rel=\"nofollow\">BayesPy</a></li>\n<li><a href=\"https://github.com/jmschrei/pomegranate\" rel=\"nofollow\">pomegranate</a></li>\n<li><a href=\"https://github.com/pgmpy/pgmpy\" rel=\"nofollow\">pgmpy</a></li>\n<li><a href=\"https://github.com/CyberPoint/libpgm\" rel=\"nofollow\">libpgm</a></li>\n<li><a href=\"https://github.com/sonph/bayesnetinference\" rel=\"nofollow\">bayesnetinference</a></li>\n</ul>\n<p>I found other <a href=\"https://pypi.python.org/pypi?%3Aaction=search&amp;term=bayesian+network&amp;submit=search\" rel=\"nofollow\">packages</a> in PyPI too.</p>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<pre>@misc{vang_2017,\ntitle={PyBBN},\nurl={https://github.com/vangj/py-bbn/},\njournal={GitHub},\nauthor={Vang, Jee},\nyear={2017},\nmonth={Jan}}\n</pre>\n</div>\n<div id=\"copyright-stuff\">\n<h2>Copyright Stuff</h2>\n<pre>Copyright 2017 Jee Vang\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6982118, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "fa8d5ae862aaba13976d852004385ad3", "sha256": "dd5a4f1ceee9ba6822f8aa6a6b2ba40afdfbffafe4795da1c978e060d2d4b4a8"}, "downloads": -1, "filename": "pybbn-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fa8d5ae862aaba13976d852004385ad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14861, "upload_time": "2017-01-19T22:53:18", "upload_time_iso_8601": "2017-01-19T22:53:18.379619Z", "url": "https://files.pythonhosted.org/packages/87/65/be77e65ac20c6bb0fbf5357c5b70ae6aaa3bbccc811e8f8cb04e1943aa7a/pybbn-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7e86bf64ca8ef3de931924aa1bc653d0", "sha256": "903a4f8ec7f96d9e26607ae549b9ff367ac2e77b48f000748151355d5dc851d9"}, "downloads": -1, "filename": "pybbn-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7e86bf64ca8ef3de931924aa1bc653d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21236, "upload_time": "2018-04-05T05:24:08", "upload_time_iso_8601": "2018-04-05T05:24:08.062087Z", "url": "https://files.pythonhosted.org/packages/15/af/b71e6fd182befefd75350fe106fc293e085c0fb2071ccc2ac563a397bc58/pybbn-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "becf9fb4e4c90113bafc788844e5511e", "sha256": "9475a75c4f474e5f7a307d9048201e67c2abfadcb0b22d5e4be036980471024c"}, "downloads": -1, "filename": "pybbn-0.0.3.tar.gz", "has_sig": false, "md5_digest": "becf9fb4e4c90113bafc788844e5511e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21729, "upload_time": "2018-04-06T02:53:40", "upload_time_iso_8601": "2018-04-06T02:53:40.341749Z", "url": "https://files.pythonhosted.org/packages/f0/5a/f0ae95ee204419098b7da37e00c18790aeb60bb56af9a277696a35e39532/pybbn-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "4a37e577c3615986b52f9473aedcf3f4", "sha256": "64b8f0c9ad4c9645f5a63ca802c6a6d2586f8601306592c7e134d8ecc17515a8"}, "downloads": -1, "filename": "pybbn-0.0.4.tar.gz", "has_sig": false, "md5_digest": "4a37e577c3615986b52f9473aedcf3f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23076, "upload_time": "2018-04-13T00:03:09", "upload_time_iso_8601": "2018-04-13T00:03:09.719563Z", "url": "https://files.pythonhosted.org/packages/06/31/4ab6539926fd8b5c3b68defa93a1829141d1a91b9bb5f8c4ce043a261511/pybbn-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "fab63f60636de5cb666b1a723e168d66", "sha256": "00905db0aae1d1d4779b9b1f46eb11331f6131927f9eedbc512d2efb6fdca5c0"}, "downloads": -1, "filename": "pybbn-0.0.5.tar.gz", "has_sig": false, "md5_digest": "fab63f60636de5cb666b1a723e168d66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27014, "upload_time": "2018-07-20T17:59:20", "upload_time_iso_8601": "2018-07-20T17:59:20.663185Z", "url": "https://files.pythonhosted.org/packages/a8/21/872a412eb9ba5ab3ad2028aab874929b26e759b3111b6fd7dd4f4a0356fb/pybbn-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "f6240970f2ccf5341eb5125ed5fcfe37", "sha256": "0558e8f6dee61e79fb77b8d3d4835a3225b774ee07985103b22624d9c7d291e3"}, "downloads": -1, "filename": "pybbn-0.0.6.tar.gz", "has_sig": false, "md5_digest": "f6240970f2ccf5341eb5125ed5fcfe37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35822, "upload_time": "2018-09-21T22:51:16", "upload_time_iso_8601": "2018-09-21T22:51:16.845305Z", "url": "https://files.pythonhosted.org/packages/1c/70/27a6bd32453610c00a8448dfbc9997e07675900974d59f31a71a1497317d/pybbn-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "0b8bbb48f1faeff8f040c771b95bc61e", "sha256": "0bd9352db7bb31af6480ee074e449ff607958941606460617c077fbe10709e9c"}, "downloads": -1, "filename": "pybbn-0.0.7.tar.gz", "has_sig": false, "md5_digest": "0b8bbb48f1faeff8f040c771b95bc61e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35545, "upload_time": "2018-09-22T05:31:09", "upload_time_iso_8601": "2018-09-22T05:31:09.989018Z", "url": "https://files.pythonhosted.org/packages/c0/1f/afaefb1fd3468ea476db63ee14b464564abd0f7eb0c3a20b30cb62de47c4/pybbn-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "e60d36b61e59db91632b0f45bd88f849", "sha256": "ca5b8d6eece897fd09709c6368d324be095d8c9e795e2e776646e1097e97c6ec"}, "downloads": -1, "filename": "pybbn-0.0.8.tar.gz", "has_sig": false, "md5_digest": "e60d36b61e59db91632b0f45bd88f849", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36481, "upload_time": "2018-09-22T05:49:26", "upload_time_iso_8601": "2018-09-22T05:49:26.647447Z", "url": "https://files.pythonhosted.org/packages/fb/74/21b8e5cb4c7f6a8b70be5259b8379586bf5395429d13333026a4f5a23514/pybbn-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "0f6b30548ef2e5647a5b807747c1b485", "sha256": "566fb025a7d00f772f5a922107959fc55a5b263b4e14ec3807f9f47a991b0f0f"}, "downloads": -1, "filename": "pybbn-0.0.9.tar.gz", "has_sig": false, "md5_digest": "0f6b30548ef2e5647a5b807747c1b485", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36485, "upload_time": "2018-09-22T05:56:33", "upload_time_iso_8601": "2018-09-22T05:56:33.894415Z", "url": "https://files.pythonhosted.org/packages/16/c5/a5396fb6f4ec3c585e4e1231e00becd51d048c564d6cd7f9d91fb67d5cd5/pybbn-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "67df442fa96d7a59d3ffc31ddbf17f49", "sha256": "1e61c8cd75fdb0b6ce630e8a76948115c42869e661a4e348b6a77beb4cdd2bfb"}, "downloads": -1, "filename": "pybbn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "67df442fa96d7a59d3ffc31ddbf17f49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36394, "upload_time": "2018-09-22T06:19:32", "upload_time_iso_8601": "2018-09-22T06:19:32.256635Z", "url": "https://files.pythonhosted.org/packages/45/38/31d87d9f70e9986b0f239f68ad4ac1a7e11d4bfd698f88eeaa506ad43188/pybbn-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "54c3748a9e811b2d645314b26a508c74", "sha256": "3b59f0dfa16a72f46ef716ef6690087591ec3297fc8833771d9e97a2e25fcdef"}, "downloads": -1, "filename": "pybbn-0.1.1.tar.gz", "has_sig": false, "md5_digest": "54c3748a9e811b2d645314b26a508c74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36592, "upload_time": "2018-09-22T18:31:26", "upload_time_iso_8601": "2018-09-22T18:31:26.989722Z", "url": "https://files.pythonhosted.org/packages/9f/08/e5a355d2231b3e47eaed0ec30b871c73a1df7dfdc5a01956e9e02f76750f/pybbn-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "896f964b955ffbd6ecb02efa7841bb71", "sha256": "e1bde3e3f2adf033afbc82932180fa28ef57c4ac417259f051e2b4b6af151dbc"}, "downloads": -1, "filename": "pybbn-0.1.2.tar.gz", "has_sig": false, "md5_digest": "896f964b955ffbd6ecb02efa7841bb71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36589, "upload_time": "2018-10-02T04:19:23", "upload_time_iso_8601": "2018-10-02T04:19:23.505476Z", "url": "https://files.pythonhosted.org/packages/58/b9/984eddbed46859d431424e03d85ed1bb6c6a125efbaff1ae1b65b53efd85/pybbn-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fce9a8ed32d34231504cf5440429a547", "sha256": "97f5ce9991a1f2016b5049a86e26c24e6a479db6469a9a528a37e4eeffe4b1df"}, "downloads": -1, "filename": "pybbn-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fce9a8ed32d34231504cf5440429a547", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36560, "upload_time": "2018-10-02T04:23:42", "upload_time_iso_8601": "2018-10-02T04:23:42.579760Z", "url": "https://files.pythonhosted.org/packages/bc/99/85aed09075bdf11e643e6d048bf679e6fcc8103e2ae0169c5d5427be19cf/pybbn-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "76bbf4f58fc9b8ceabc06cadbc367ab3", "sha256": "3317552ead17110546959ce5d3ac24fa550aab6b1425bed648c80f62acd84ddc"}, "downloads": -1, "filename": "pybbn-0.1.4.tar.gz", "has_sig": false, "md5_digest": "76bbf4f58fc9b8ceabc06cadbc367ab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36853, "upload_time": "2018-10-03T02:26:58", "upload_time_iso_8601": "2018-10-03T02:26:58.983657Z", "url": "https://files.pythonhosted.org/packages/32/3f/42e92b737786b91109f61b24452d41432b30c1001e1c17faa4e2dfb0f406/pybbn-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "576959779cb0335a835cc326e10c3d17", "sha256": "a106e989f02e29b32172c1673ba2afe48ec84d466165367437c1caa77fcd4f35"}, "downloads": -1, "filename": "pybbn-0.1.5.tar.gz", "has_sig": false, "md5_digest": "576959779cb0335a835cc326e10c3d17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40153, "upload_time": "2018-11-19T04:04:08", "upload_time_iso_8601": "2018-11-19T04:04:08.061350Z", "url": "https://files.pythonhosted.org/packages/af/ac/66dfcd4a2d698a5bc201e514fdb0ad4b3b92a0d705f23a5862bd76d402db/pybbn-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "598728b3ae06e923f4fd3d170641224c", "sha256": "499fc1a0b21a51c53bba4898e21a04f06701e32a154da58184548ad3d245182d"}, "downloads": -1, "filename": "pybbn-0.1.6.tar.gz", "has_sig": false, "md5_digest": "598728b3ae06e923f4fd3d170641224c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40686, "upload_time": "2018-11-20T06:24:48", "upload_time_iso_8601": "2018-11-20T06:24:48.864799Z", "url": "https://files.pythonhosted.org/packages/ef/c6/81b48586e73968a08a5b333940b6572e0a998d0d3c4a7cee5a7c597a227c/pybbn-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "f0f30df3c6f9cab67bcb61b81d20ed0b", "sha256": "310f634f220148a4d31f00e3f2f06620e30c38c93b9e878f19c89d281173512c"}, "downloads": -1, "filename": "pybbn-0.1.7.tar.gz", "has_sig": false, "md5_digest": "f0f30df3c6f9cab67bcb61b81d20ed0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40688, "upload_time": "2018-11-20T06:40:11", "upload_time_iso_8601": "2018-11-20T06:40:11.587712Z", "url": "https://files.pythonhosted.org/packages/c5/3d/efb06194671065482188cf8f3408455a545f0cbeeaefb6d52b7f8d789265/pybbn-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "baa22a27345edc5705fc9d9df9b5f0c3", "sha256": "615ddbe9e67020b4ede0fef496b65c6be8e329a90364b7b46300c087d90ea01e"}, "downloads": -1, "filename": "pybbn-0.1.8.tar.gz", "has_sig": false, "md5_digest": "baa22a27345edc5705fc9d9df9b5f0c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41460, "upload_time": "2018-11-21T00:35:36", "upload_time_iso_8601": "2018-11-21T00:35:36.503685Z", "url": "https://files.pythonhosted.org/packages/32/e4/fd139bf26c5e09ef81fc1dcd547b938e2f107ed28d175cd788667ca84685/pybbn-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "2d12e9e89b936395f0082411ab9fbc8d", "sha256": "53cd3c110745c03a93b913e7d7a09e0041e54c05c0c20d8a6a262d216b5d8cab"}, "downloads": -1, "filename": "pybbn-0.1.9.tar.gz", "has_sig": false, "md5_digest": "2d12e9e89b936395f0082411ab9fbc8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41842, "upload_time": "2018-11-21T01:45:31", "upload_time_iso_8601": "2018-11-21T01:45:31.733491Z", "url": "https://files.pythonhosted.org/packages/72/5e/00d05859a27a77ead9c8bb98df2758ebb5bb212292641b88381a7a8710dc/pybbn-0.1.9.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f6c0ad0ba2be841cb53c1c7eb85a34f1", "sha256": "6d480b54b45bcdbcb92e7093328055bc0bcdc0a3ba149e9f704d9b0b7dcefc85"}, "downloads": -1, "filename": "pybbn-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f6c0ad0ba2be841cb53c1c7eb85a34f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42068, "upload_time": "2019-08-02T09:35:55", "upload_time_iso_8601": "2019-08-02T09:35:55.610337Z", "url": "https://files.pythonhosted.org/packages/54/ca/0fe69ee5db61368a9ae51654dd100885c24787b6eda6a834c8b98cdb48c3/pybbn-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "22e4f9db7c012b9465666959dcf0dfde", "sha256": "5469cdbf397cd0e020ad666e11eff3a67a5cc0306aea29e235f626c83e6c2e15"}, "downloads": -1, "filename": "pybbn-0.2.3.tar.gz", "has_sig": false, "md5_digest": "22e4f9db7c012b9465666959dcf0dfde", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32658, "upload_time": "2019-08-02T10:30:16", "upload_time_iso_8601": "2019-08-02T10:30:16.192112Z", "url": "https://files.pythonhosted.org/packages/33/ce/1b20294cf1c3698c33a6734e0be86aece0f41067c505376a965071efc59e/pybbn-0.2.3.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "3e083a206a1b351ad920d6821b74e2ad", "sha256": "6a067835727b7609daa48ce22b2644a121dd0988ebaa5fb02a8db515f1dea9ae"}, "downloads": -1, "filename": "pybbn-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3e083a206a1b351ad920d6821b74e2ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33279, "upload_time": "2019-08-10T22:48:53", "upload_time_iso_8601": "2019-08-10T22:48:53.079086Z", "url": "https://files.pythonhosted.org/packages/f1/5a/9382582e5bb0b547a240a1c514047684fd5a5332997e16501060b616da3a/pybbn-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "953395ce89d3b4ebeb2f0dd5caa35422", "sha256": "32c3867aa9f386faf5190e5bc34e832d932dceefc901d857c5fa4174559130e6"}, "downloads": -1, "filename": "pybbn-1.0.1.tar.gz", "has_sig": false, "md5_digest": "953395ce89d3b4ebeb2f0dd5caa35422", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33950, "upload_time": "2019-08-14T01:55:51", "upload_time_iso_8601": "2019-08-14T01:55:51.921443Z", "url": "https://files.pythonhosted.org/packages/15/da/773f3544e3e3bc75deb6df742f5f40d13c49a0a8a33290473476fce4555d/pybbn-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "cfe198e4ccb85bad0ef8d466381a7693", "sha256": "a9ffde9cf068b5d78bda75118a65d96eecda483a35adae200fe651611d5aa509"}, "downloads": -1, "filename": "pybbn-1.0.2.tar.gz", "has_sig": false, "md5_digest": "cfe198e4ccb85bad0ef8d466381a7693", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34585, "upload_time": "2019-09-16T02:59:27", "upload_time_iso_8601": "2019-09-16T02:59:27.015551Z", "url": "https://files.pythonhosted.org/packages/6f/22/b6b0811d3f614da0b6d7e1de4a630a7700fb4c597e1af03f2970cf16e4b7/pybbn-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "058ab2bb480ccfb3e9dd7ad407e48e27", "sha256": "820db7446598e81307b234a8d96deb3852d034b8b165062a82219f8f0e2f6adc"}, "downloads": -1, "filename": "pybbn-1.0.3.tar.gz", "has_sig": false, "md5_digest": "058ab2bb480ccfb3e9dd7ad407e48e27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35392, "upload_time": "2019-09-28T02:03:17", "upload_time_iso_8601": "2019-09-28T02:03:17.668089Z", "url": "https://files.pythonhosted.org/packages/35/74/ce4a901d2fd41e4f116e436ec21791c3d1f24a87750d2c1a8db1fe176053/pybbn-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "e962cd6b4806c66dee5e8eeb04378c61", "sha256": "4f8e966469b09153344a3469a37855cb5dcbd1054e7246acf8834b568635d579"}, "downloads": -1, "filename": "pybbn-1.0.4.tar.gz", "has_sig": false, "md5_digest": "e962cd6b4806c66dee5e8eeb04378c61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36168, "upload_time": "2019-09-28T17:18:57", "upload_time_iso_8601": "2019-09-28T17:18:57.152938Z", "url": "https://files.pythonhosted.org/packages/31/85/27d7309c2ca6028cd012c321a92dc6a246564fb56bf14592ff76697ca89d/pybbn-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "35c5bdd6df8a6103c86e683c9385d2b8", "sha256": "7269a46c1843898b1d86b0135f277cca13125bdd827bca42d0b4df3e423363a3"}, "downloads": -1, "filename": "pybbn-1.0.5.tar.gz", "has_sig": false, "md5_digest": "35c5bdd6df8a6103c86e683c9385d2b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36385, "upload_time": "2020-02-24T23:02:58", "upload_time_iso_8601": "2020-02-24T23:02:58.909708Z", "url": "https://files.pythonhosted.org/packages/7c/bf/daff9a27bcb338f6e727490fd6050119bd91a07bf732e186e5f74f2475bb/pybbn-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "842f9a1586b53ae63b67e63e9c7acee7", "sha256": "8b539e376b23dc104722e4db6e7ed7337127505ca623243a8ad8f778f017a6f0"}, "downloads": -1, "filename": "pybbn-1.0.6.tar.gz", "has_sig": false, "md5_digest": "842f9a1586b53ae63b67e63e9c7acee7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36627, "upload_time": "2020-02-25T02:15:06", "upload_time_iso_8601": "2020-02-25T02:15:06.860266Z", "url": "https://files.pythonhosted.org/packages/31/a5/bc5693f17b2233a19eed5679c0914fb200a738cbe30066ba5a230b6fb009/pybbn-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "b7e845309065b78fa73a0035870a48a2", "sha256": "8ea3ea259dd9af0d10f5498c4326c26d6c1921e6b038845107a78b944c710924"}, "downloads": -1, "filename": "pybbn-1.0.7.tar.gz", "has_sig": false, "md5_digest": "b7e845309065b78fa73a0035870a48a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38119, "upload_time": "2020-04-07T02:33:03", "upload_time_iso_8601": "2020-04-07T02:33:03.122652Z", "url": "https://files.pythonhosted.org/packages/45/cd/5220ef3aa9a186ab154af6e3d6036e1635e61fdbdbc4daae4024c2892fc3/pybbn-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "4c6c9927b001c03d46e6a6c3e669744d", "sha256": "97234de37f57b54fd74da6ab5e5ffb950e0d09823d12689f4a8c8ddd42f1b9d1"}, "downloads": -1, "filename": "pybbn-1.0.8.tar.gz", "has_sig": false, "md5_digest": "4c6c9927b001c03d46e6a6c3e669744d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38109, "upload_time": "2020-04-08T01:57:29", "upload_time_iso_8601": "2020-04-08T01:57:29.120392Z", "url": "https://files.pythonhosted.org/packages/ed/9b/3a81c87c507e7a7f2e272cc13373692f569988676a568f141d3de4028617/pybbn-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "2a3024be8b474206122e01ff4d2aae78", "sha256": "581ce0ff18bdc5b9006f417222937b60ac690e8a9a50364ab1e5c74fd45649f5"}, "downloads": -1, "filename": "pybbn-1.0.9.tar.gz", "has_sig": false, "md5_digest": "2a3024be8b474206122e01ff4d2aae78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38101, "upload_time": "2020-04-08T22:43:06", "upload_time_iso_8601": "2020-04-08T22:43:06.822968Z", "url": "https://files.pythonhosted.org/packages/c2/5f/ea0d6f3264f47dd9b818e15237501a5d7b690da46cb2dec487a867c9b82e/pybbn-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2a3024be8b474206122e01ff4d2aae78", "sha256": "581ce0ff18bdc5b9006f417222937b60ac690e8a9a50364ab1e5c74fd45649f5"}, "downloads": -1, "filename": "pybbn-1.0.9.tar.gz", "has_sig": false, "md5_digest": "2a3024be8b474206122e01ff4d2aae78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38101, "upload_time": "2020-04-08T22:43:06", "upload_time_iso_8601": "2020-04-08T22:43:06.822968Z", "url": "https://files.pythonhosted.org/packages/c2/5f/ea0d6f3264f47dd9b818e15237501a5d7b690da46cb2dec487a867c9b82e/pybbn-1.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:21 2020"}