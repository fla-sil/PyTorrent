{"info": {"author": "Pablo Yanez Trujillo", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python :: 3 :: Only", "Topic :: Office/Business"], "description": "# WECLAPP CLI\n\n`weclapp-cli` is a limited command line interface to [weclapp][1]'s time records. I wrote this\ntool because I want to upload several time records at once that have been stored in an Excel\nsheet. The web interface allows you to upload a time record once at a time and when you have\nseveral time records to upload, this can take a lot of time.\n\n## Features\n\n- Display the projects and the project tasks (with their respective IDs) for which you can\nbook time records\n- Display the time records that you have already booked\n- Upload time records from a CSV file\n- Allows to use a custom CSV exporter\n\n## Installation\n\n**Note** As of this moment, the project is still in development and has not been uploaded to\n[PyPI][2] yet, so the `pip` command will fail.\n\n```bash\npip install weclapp-cli\n```\n\n### Requirement\n\n- Python3.x\n\n## Usage\n\nIn order to have access to weclapp's public API, you need a **API Token**. You can get your\nAPI Token from the *My settings* page of your weclapp installation. If you don't have an API\nToken yet, then click on *Create new API token* to generate a new one. Please think of your\nAPI Token as a password, keep it secret!\n\n### Configuring the client\n\n`weclapp-cli` needs to be configured before you can start using it.\nThe default configuration path is `${HOME}/.config/weclapp-cli/config.yml`.\n\nYou'll need the following values:\n\n- the domain of you weclapp installation, usually *`yourcomapny.weclapp.com`*\n- the API path, usually *`/webapp/api/v1`*\n- your API Token\n\nAlso check whether you have to access the API via HTTPS. Once you have all these values,\nopen a terminal and type in:\n\n```bash\n$ weclapp-cli config\nGenerating a new configuration file /home/shaoran/.config/weclapp-cli/config.yml\nYour weclapp domain []: yourcomapny.weclapp.com<ENTER>\nThe API path [/webapp/api/v1]: <ENTER>\nYour API TOKEN []: YOUR-TOKEN<ENTER>\nUse SSL [yes]: <ENTER>\n```\n\n### List projects, tasks and the last 100 time records\n\n```bash\n$ weclapp-cli projects\n```\n\n### List projects, tasks only\n\n```bash\n$ weclapp-cli projects -t\n```\n\n### Uploading time records\n\nPrepare the CSV file, then execute\n\n```bash\n$ weclapp-cli upload my-records.csv\n```\n\nTo get the options (like the separator character) for the default parse, execute\n\n```bash\n$ weclapp-cli upload --list-parser-options\n```\n\nYou can pass these option with the `--po KEY=VAL` option.\n\n\n## The CSV file\n\nIn order to upload a time record, you'll need to store your time records in a CSV-like file.\n\nI store my time records in an Excel sheet that has the following format:\n\n![][time-sheet]\n\n**NOTE** Do not add empty lines and lines with comments (usually lines beginning with `#`).\n\n### The header\n\nThe first 2 rows are the header. It contains the project ID and the task ID for which you want\nto upload your time records.\n\nIn the example above the cells  `A1` and `A2` are ignored, you can have any string you like.\n\nThe next two columns (`B` and `C`) define the task for which you want to upload time records. The next\ntwo columns (`D` and `E`) define another task, etc. You can have as many tasks as you want. For every\ntask you need two columns. In the example above `B1` and `B2` have the project ID and the task ID for the\nfirst task. `D1` and `D2` have the project ID and the task ID for the next task.\n\n### The time records\n\nFrom the third row onward you'll define the time records. On the `A` column set the date of the day. The next\ncell contains the number of hours you've worked on the project and the next column is the description of\nthe time record. The description may be empty. The next column is for the next number of hours and so on.\n\nThe date colum (`A`) is parsed using [`dateutil.parser.parse`][3], so you can have different date formats,\nfor example:\n\n- Thursday, 01/Feb\n- 2019.02.01\n- 02-01-2019\n\nare recognized as **1st of February 2019**. If you omit the year, the current year is assumed.\n\nBy default the time of day of the records is 09:00. You can set another time by passing the\n`--po timeStart 08:00` option to `weclapp-cli upload` command. You have to use the 24 hour format.\n\nIf you need that a single entry has a different time of day than the default: instead of just passing\nthe duration (number of hours) as single number, you can pass **`time/duration`**. For example: you want\na single entry in the `B` column to have a time of day of 08:30 with a duration of 3 hours. Then enter the\nvalue **`08:30/5.00`**. Here you have to use the 24 hour format as well.\n\nThe default CSV will ignore time record that have an empty duration, in the image above `D5` is empty, so\nthat time record is ignored. The description can always be empty.\n\n### Example\n\nThe resulting CSV file from the image above would be\n\n    PROJECT ID;12345;;323234;\n    TASK ID;6789;;11232;\n    Tuesday, 01/ Jan;;;;\n    Wednesday, 02/ Jan;4.00;some desc;4.00;something else\n    Thursday, 03/ Jan;8.00;;;\n    Friday, 04/ Jan;3.00;;5.00;wiki stuff\n    Saturday, 05/ Jan;;;;\n    Friday, 11/ Jan;;;;\n\n\n## Custom CSV files\n\nIf you want to use a different CSV parser, then you can write your own and let `weclapp-cli` use it\ninstead of the default one.\n\nCreate a file `csv_exporter.py` in the same directory where the configuration file is stored\n(by default in `${HOME}/.config/weclapp-cli`).\n\n\n```python\n# ${HOME}/.config/weclapp-cli/csv_exporter.py\nfrom weclapp import Parser\n\nclass MyCustomCSV(Parser):\n    \"\"\"\n    implement your parser here\n    \"\"\"\n    pass\n\nparsers = [\n    { \"name\": \"custom\", \"parser\": MyCustomCSV },\n]\n```\n\nThe `csv_exporter.py` file **must** have a variable called `parsers`. This variable is used by\n`weclapp-cli` to import your custom parser. And since it is a list, you *can* export more than\none custom parser. If you want to mark a custom parser as the new default, then add\n`\"default\": True`\n\n```\nparsers = [\n    { \"name\": \"matrix\", \"parser\": MyCustomCSV, \"default\": True },\n]\n```\n\nTo display the list of parsers, execute\n\n```bash\n$ weclapp-cli upload -l\ncsv\nmatrix\n```\n\nThe first entry is the default parser.\n\nTo use the \"*matrix*\" parser:\n\n```bash\n$ weclapp-cli upload -p matrix file.csv\n```\n\nSee [Custom Parsers][5] for information about custom parsers\n\n# Contributions\n\nI don't intend to keep adding features, because it already does everything **I** need. But hey,\nthis is a open source project, so you are welcome to fork it. If you have bug fixes, new features\nor new parsers, then please send me pull request.\n\n# Disclaimer\n\nI do not own, develop [weclapp][1] and don't claim any copyright. weclapp is a product owned and\ndeveloped by [weclapp GmbH][4]. Any questions you have about weclapp, please go their website\n[https://www.weclapp.com/][1], don't ask me.\n\n**Use this tool at your own risk, I am not responsible for any data losses or damages\nas a result of using this tool.**\n\n\n**LICENSE**: GPL-2\n\n[1]: https://www.weclapp.com/\n[2]: https://pypi.org/\n[3]: https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.parse\n[time-sheet]: wiki/images/time-sheet.png\n[4]: https://www.weclapp.com/de/impressum/\n[5]: https://github.com/shaoran/weclapp-cli/wiki/Custom-Parsers\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://shaoran.github.io/weclapp-cli/", "keywords": "weclapp time records uploader", "license": "", "maintainer": "", "maintainer_email": "", "name": "weclapp-cli", "package_url": "https://pypi.org/project/weclapp-cli/", "platform": "", "project_url": "https://pypi.org/project/weclapp-cli/", "project_urls": {"Bug Reports": "https://github.com/shaoran/weclapp-cli/issues", "Homepage": "https://shaoran.github.io/weclapp-cli/", "Source": "https://github.com/shaoran/weclapp-cli"}, "release_url": "https://pypi.org/project/weclapp-cli/1.0.1/", "requires_dist": ["PyYAML", "colorama", "coloredlogs", "python-dateutil"], "requires_python": ">=3", "summary": "A small cli for uploading time records via a CSV file", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>WECLAPP CLI</h1>\n<p><code>weclapp-cli</code> is a limited command line interface to <a href=\"https://www.weclapp.com/\" rel=\"nofollow\">weclapp</a>'s time records. I wrote this\ntool because I want to upload several time records at once that have been stored in an Excel\nsheet. The web interface allows you to upload a time record once at a time and when you have\nseveral time records to upload, this can take a lot of time.</p>\n<h2>Features</h2>\n<ul>\n<li>Display the projects and the project tasks (with their respective IDs) for which you can\nbook time records</li>\n<li>Display the time records that you have already booked</li>\n<li>Upload time records from a CSV file</li>\n<li>Allows to use a custom CSV exporter</li>\n</ul>\n<h2>Installation</h2>\n<p><strong>Note</strong> As of this moment, the project is still in development and has not been uploaded to\n<a href=\"https://pypi.org/\" rel=\"nofollow\">PyPI</a> yet, so the <code>pip</code> command will fail.</p>\n<pre>pip install weclapp-cli\n</pre>\n<h3>Requirement</h3>\n<ul>\n<li>Python3.x</li>\n</ul>\n<h2>Usage</h2>\n<p>In order to have access to weclapp's public API, you need a <strong>API Token</strong>. You can get your\nAPI Token from the <em>My settings</em> page of your weclapp installation. If you don't have an API\nToken yet, then click on <em>Create new API token</em> to generate a new one. Please think of your\nAPI Token as a password, keep it secret!</p>\n<h3>Configuring the client</h3>\n<p><code>weclapp-cli</code> needs to be configured before you can start using it.\nThe default configuration path is <code>${HOME}/.config/weclapp-cli/config.yml</code>.</p>\n<p>You'll need the following values:</p>\n<ul>\n<li>the domain of you weclapp installation, usually <em><code>yourcomapny.weclapp.com</code></em></li>\n<li>the API path, usually <em><code>/webapp/api/v1</code></em></li>\n<li>your API Token</li>\n</ul>\n<p>Also check whether you have to access the API via HTTPS. Once you have all these values,\nopen a terminal and type in:</p>\n<pre>$ weclapp-cli config\nGenerating a new configuration file /home/shaoran/.config/weclapp-cli/config.yml\nYour weclapp domain <span class=\"o\">[]</span>: yourcomapny.weclapp.com&lt;ENTER&gt;\nThe API path <span class=\"o\">[</span>/webapp/api/v1<span class=\"o\">]</span>: &lt;ENTER&gt;\nYour API TOKEN <span class=\"o\">[]</span>: YOUR-TOKEN&lt;ENTER&gt;\nUse SSL <span class=\"o\">[</span>yes<span class=\"o\">]</span>: &lt;ENTER&gt;\n</pre>\n<h3>List projects, tasks and the last 100 time records</h3>\n<pre>$ weclapp-cli projects\n</pre>\n<h3>List projects, tasks only</h3>\n<pre>$ weclapp-cli projects -t\n</pre>\n<h3>Uploading time records</h3>\n<p>Prepare the CSV file, then execute</p>\n<pre>$ weclapp-cli upload my-records.csv\n</pre>\n<p>To get the options (like the separator character) for the default parse, execute</p>\n<pre>$ weclapp-cli upload --list-parser-options\n</pre>\n<p>You can pass these option with the <code>--po KEY=VAL</code> option.</p>\n<h2>The CSV file</h2>\n<p>In order to upload a time record, you'll need to store your time records in a CSV-like file.</p>\n<p>I store my time records in an Excel sheet that has the following format:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ee04039bddb46ebc959e689ca912380f9ee23863/77696b692f696d616765732f74696d652d73686565742e706e67\"></p>\n<p><strong>NOTE</strong> Do not add empty lines and lines with comments (usually lines beginning with <code>#</code>).</p>\n<h3>The header</h3>\n<p>The first 2 rows are the header. It contains the project ID and the task ID for which you want\nto upload your time records.</p>\n<p>In the example above the cells  <code>A1</code> and <code>A2</code> are ignored, you can have any string you like.</p>\n<p>The next two columns (<code>B</code> and <code>C</code>) define the task for which you want to upload time records. The next\ntwo columns (<code>D</code> and <code>E</code>) define another task, etc. You can have as many tasks as you want. For every\ntask you need two columns. In the example above <code>B1</code> and <code>B2</code> have the project ID and the task ID for the\nfirst task. <code>D1</code> and <code>D2</code> have the project ID and the task ID for the next task.</p>\n<h3>The time records</h3>\n<p>From the third row onward you'll define the time records. On the <code>A</code> column set the date of the day. The next\ncell contains the number of hours you've worked on the project and the next column is the description of\nthe time record. The description may be empty. The next column is for the next number of hours and so on.</p>\n<p>The date colum (<code>A</code>) is parsed using <a href=\"https://dateutil.readthedocs.io/en/stable/parser.html#dateutil.parser.parse\" rel=\"nofollow\"><code>dateutil.parser.parse</code></a>, so you can have different date formats,\nfor example:</p>\n<ul>\n<li>Thursday, 01/Feb</li>\n<li>2019.02.01</li>\n<li>02-01-2019</li>\n</ul>\n<p>are recognized as <strong>1st of February 2019</strong>. If you omit the year, the current year is assumed.</p>\n<p>By default the time of day of the records is 09:00. You can set another time by passing the\n<code>--po timeStart 08:00</code> option to <code>weclapp-cli upload</code> command. You have to use the 24 hour format.</p>\n<p>If you need that a single entry has a different time of day than the default: instead of just passing\nthe duration (number of hours) as single number, you can pass <strong><code>time/duration</code></strong>. For example: you want\na single entry in the <code>B</code> column to have a time of day of 08:30 with a duration of 3 hours. Then enter the\nvalue <strong><code>08:30/5.00</code></strong>. Here you have to use the 24 hour format as well.</p>\n<p>The default CSV will ignore time record that have an empty duration, in the image above <code>D5</code> is empty, so\nthat time record is ignored. The description can always be empty.</p>\n<h3>Example</h3>\n<p>The resulting CSV file from the image above would be</p>\n<pre><code>PROJECT ID;12345;;323234;\nTASK ID;6789;;11232;\nTuesday, 01/ Jan;;;;\nWednesday, 02/ Jan;4.00;some desc;4.00;something else\nThursday, 03/ Jan;8.00;;;\nFriday, 04/ Jan;3.00;;5.00;wiki stuff\nSaturday, 05/ Jan;;;;\nFriday, 11/ Jan;;;;\n</code></pre>\n<h2>Custom CSV files</h2>\n<p>If you want to use a different CSV parser, then you can write your own and let <code>weclapp-cli</code> use it\ninstead of the default one.</p>\n<p>Create a file <code>csv_exporter.py</code> in the same directory where the configuration file is stored\n(by default in <code>${HOME}/.config/weclapp-cli</code>).</p>\n<pre><span class=\"c1\"># ${HOME}/.config/weclapp-cli/csv_exporter.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">weclapp</span> <span class=\"kn\">import</span> <span class=\"n\">Parser</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyCustomCSV</span><span class=\"p\">(</span><span class=\"n\">Parser</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    implement your parser here</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"n\">parsers</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span> <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"custom\"</span><span class=\"p\">,</span> <span class=\"s2\">\"parser\"</span><span class=\"p\">:</span> <span class=\"n\">MyCustomCSV</span> <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n</pre>\n<p>The <code>csv_exporter.py</code> file <strong>must</strong> have a variable called <code>parsers</code>. This variable is used by\n<code>weclapp-cli</code> to import your custom parser. And since it is a list, you <em>can</em> export more than\none custom parser. If you want to mark a custom parser as the new default, then add\n<code>\"default\": True</code></p>\n<pre><code>parsers = [\n    { \"name\": \"matrix\", \"parser\": MyCustomCSV, \"default\": True },\n]\n</code></pre>\n<p>To display the list of parsers, execute</p>\n<pre>$ weclapp-cli upload -l\ncsv\nmatrix\n</pre>\n<p>The first entry is the default parser.</p>\n<p>To use the \"<em>matrix</em>\" parser:</p>\n<pre>$ weclapp-cli upload -p matrix file.csv\n</pre>\n<p>See <a href=\"https://github.com/shaoran/weclapp-cli/wiki/Custom-Parsers\" rel=\"nofollow\">Custom Parsers</a> for information about custom parsers</p>\n<h1>Contributions</h1>\n<p>I don't intend to keep adding features, because it already does everything <strong>I</strong> need. But hey,\nthis is a open source project, so you are welcome to fork it. If you have bug fixes, new features\nor new parsers, then please send me pull request.</p>\n<h1>Disclaimer</h1>\n<p>I do not own, develop <a href=\"https://www.weclapp.com/\" rel=\"nofollow\">weclapp</a> and don't claim any copyright. weclapp is a product owned and\ndeveloped by <a href=\"https://www.weclapp.com/de/impressum/\" rel=\"nofollow\">weclapp GmbH</a>. Any questions you have about weclapp, please go their website\n<a href=\"https://www.weclapp.com/\" rel=\"nofollow\">https://www.weclapp.com/</a>, don't ask me.</p>\n<p><strong>Use this tool at your own risk, I am not responsible for any data losses or damages\nas a result of using this tool.</strong></p>\n<p><strong>LICENSE</strong>: GPL-2</p>\n\n          </div>"}, "last_serial": 5118184, "releases": {"1.0.0": [{"comment_text": "first stable release", "digests": {"md5": "755f04e725adba486fce6b9f2711f468", "sha256": "510667b7943c9550836ef26c1a1ae2479a93fc2a3f46a8f780be50a115ceb704"}, "downloads": -1, "filename": "weclapp_cli-1.0.0-py3.7.egg", "has_sig": true, "md5_digest": "755f04e725adba486fce6b9f2711f468", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3", "size": 57845, "upload_time": "2019-04-08T22:53:15", "upload_time_iso_8601": "2019-04-08T22:53:15.360120Z", "url": "https://files.pythonhosted.org/packages/95/83/336e3ce99fa2e3c30c9c2b2b9f1adfc89e05d63a0e6dd8f5926b76bf5390/weclapp_cli-1.0.0-py3.7.egg", "yanked": false}, {"comment_text": "first stable release", "digests": {"md5": "a718632fae29237b70c6b7428ce14682", "sha256": "0fe60633609e8de6aebf3506e3876652a47b9a40a355e3a729af89379bce462e"}, "downloads": -1, "filename": "weclapp_cli-1.0.0-py3-none-any.whl", "has_sig": true, "md5_digest": "a718632fae29237b70c6b7428ce14682", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 32905, "upload_time": "2019-04-08T22:53:12", "upload_time_iso_8601": "2019-04-08T22:53:12.548726Z", "url": "https://files.pythonhosted.org/packages/3d/55/ad926ac336aff4178645af2253fa1e6938bb8be5aa944a5babd0f256b543/weclapp_cli-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "first stable release", "digests": {"md5": "c3582eb2911861bf07a04ccc6bf19d5e", "sha256": "017776aba6a33e9cdbe6dca55a73870b049dede8220bd9814ec0789bccb02961"}, "downloads": -1, "filename": "weclapp-cli-1.0.0.tar.gz", "has_sig": true, "md5_digest": "c3582eb2911861bf07a04ccc6bf19d5e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 21345, "upload_time": "2019-04-08T22:53:17", "upload_time_iso_8601": "2019-04-08T22:53:17.397961Z", "url": "https://files.pythonhosted.org/packages/39/d1/7a11092de1e4e44eb5bd79234d2f652ab820ea7afb97377401076c08c8a2/weclapp-cli-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "006c69d93e8984407419c66cdff8c73d", "sha256": "f91e5a205209b7c4c92019c4997c1c4ffd5011e51907c1f4f5fbbeb9ea8d3f55"}, "downloads": -1, "filename": "weclapp_cli-1.0.1-py3.7.egg", "has_sig": true, "md5_digest": "006c69d93e8984407419c66cdff8c73d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3", "size": 24915, "upload_time": "2019-04-09T10:58:31", "upload_time_iso_8601": "2019-04-09T10:58:31.057921Z", "url": "https://files.pythonhosted.org/packages/55/92/84fe4ae23866a2fdaf494c126955d1418d6c054d86873424597fb2cf5057/weclapp_cli-1.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "154c63b536025935fb2beb4f2124171a", "sha256": "da2b817167e2a19aca11ab3f70745e7e380eedc555d9a7c8ef315ae951a217b6"}, "downloads": -1, "filename": "weclapp_cli-1.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "154c63b536025935fb2beb4f2124171a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 32970, "upload_time": "2019-04-09T10:58:27", "upload_time_iso_8601": "2019-04-09T10:58:27.604063Z", "url": "https://files.pythonhosted.org/packages/33/89/1d593acb9a3fc9851a0d8a23d128caa231730c024f17d5052ff20d2ca8cf/weclapp_cli-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6dc7ee98bbf4c10045095f78acbe959", "sha256": "c62bfc024c66a6c4e27dd024e7413216f30d05fa28b97db37bfde100e97ac52a"}, "downloads": -1, "filename": "weclapp-cli-1.0.1.tar.gz", "has_sig": true, "md5_digest": "f6dc7ee98bbf4c10045095f78acbe959", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 21250, "upload_time": "2019-04-09T10:58:29", "upload_time_iso_8601": "2019-04-09T10:58:29.354962Z", "url": "https://files.pythonhosted.org/packages/b3/48/48c010f7f24e8c9cefd6657df97b34411499957fc57368b8a07f7d58718e/weclapp-cli-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "006c69d93e8984407419c66cdff8c73d", "sha256": "f91e5a205209b7c4c92019c4997c1c4ffd5011e51907c1f4f5fbbeb9ea8d3f55"}, "downloads": -1, "filename": "weclapp_cli-1.0.1-py3.7.egg", "has_sig": true, "md5_digest": "006c69d93e8984407419c66cdff8c73d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3", "size": 24915, "upload_time": "2019-04-09T10:58:31", "upload_time_iso_8601": "2019-04-09T10:58:31.057921Z", "url": "https://files.pythonhosted.org/packages/55/92/84fe4ae23866a2fdaf494c126955d1418d6c054d86873424597fb2cf5057/weclapp_cli-1.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "154c63b536025935fb2beb4f2124171a", "sha256": "da2b817167e2a19aca11ab3f70745e7e380eedc555d9a7c8ef315ae951a217b6"}, "downloads": -1, "filename": "weclapp_cli-1.0.1-py3-none-any.whl", "has_sig": true, "md5_digest": "154c63b536025935fb2beb4f2124171a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 32970, "upload_time": "2019-04-09T10:58:27", "upload_time_iso_8601": "2019-04-09T10:58:27.604063Z", "url": "https://files.pythonhosted.org/packages/33/89/1d593acb9a3fc9851a0d8a23d128caa231730c024f17d5052ff20d2ca8cf/weclapp_cli-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6dc7ee98bbf4c10045095f78acbe959", "sha256": "c62bfc024c66a6c4e27dd024e7413216f30d05fa28b97db37bfde100e97ac52a"}, "downloads": -1, "filename": "weclapp-cli-1.0.1.tar.gz", "has_sig": true, "md5_digest": "f6dc7ee98bbf4c10045095f78acbe959", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 21250, "upload_time": "2019-04-09T10:58:29", "upload_time_iso_8601": "2019-04-09T10:58:29.354962Z", "url": "https://files.pythonhosted.org/packages/b3/48/48c010f7f24e8c9cefd6657df97b34411499957fc57368b8a07f7d58718e/weclapp-cli-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:28 2020"}