{"info": {"author": "Oscar Martinez", "author_email": "omtinez@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "==============\nPandasDatabase\n==============\n\n.. image:: https://img.shields.io/pypi/v/pddb.svg\n        :target: https://pypi.python.org/pypi/pddb\n\n.. image:: https://img.shields.io/travis/omtinez/pddb.svg\n        :target: https://travis-ci.org/omtinez/pddb\n\n.. image:: https://readthedocs.org/projects/pddb/badge/?version=latest\n        :target: https://pddb.readthedocs.org/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\nPrototyping database engine for Python\n\n* Free software: MIT License\n* Documentation: https://pddb.readthedocs.org.\n\nIntroduction\n------------\n\nPandasDatabase is a RESTful database engine application built on top of Pandas. Essentially, it is\nan abstraction layer that projects the database-table-column model into a very simple set of API's.\nAs a database engine, it has some useful features that make it a good candidate for prototype work:\n\n* Inherits all the performance and robustness of Pandas.\n* Very simple and intuitive API set.\n* Tables support dynamic schema, so every time columns are changed during development there is no\n  need to alter tables or CREATE statements.\n* All data is persisted in plaintext, human-readable CSV format.\n\nSome of those features come at a cost that probably makes PandasDatabase less than ideal for\nproduction environments:\n\n* Security. At the server, the security model is based on file permissions. For the API's,\n  production environments should very likely never expose database API's of any form.\n* Performance. While low latency production environments might not run into an issue,\n  performance-critical applications will probably run into a bottleneck when writing to disk.\n* Data types. Exposing all the table data in CSV format means that complex data types such as date\n  cannot be supported.\n\nThe Problem\n-----------\n\nA very large number of small projects have fairly simple requirements for data storage. For all\nthose projects, interfacing with a database engine is boilerplate work that adds unnecessary\noverhead during development. This project provides a very simple yet powerful solution that is\ngreat for prototype work to enable those small projects to hit the ground running. Once the\ncritical components of the project are finished and a proof of concept version is running, projects\ncan transition to a more mature database engine that can better suit the needs of a production\nenvironment.\n\nGetting Started\n---------------\n\nThis project is entirely Python based. To be able to use it, first install the dependencies::\n\n    $ pip install pandas bottle\n\nThe easiest way to install PandasDatabase is using pip::\n\n    $ pip install pddb\n\nTo fire up the database engine, simply run::\n\n    $ python -m pddb.pddb dbname --permissions w\n\nBy default, the database is started in read-only mode, which is why we need to pass the\n``--permissions w`` flag. This should start a bottle application with the following endpoints\navailable:\n\n* ``/pddb``\n* ``/pddb/find/<table>``\n* ``/pddb/insert/<table>``\n* ``/pddb/upsert/<table>``\n* ``/pddb/delete/<table>``\n\nThe parameters to those endpoints can be passed as a GET query string, or via POST. For example,\nto insert a new record, the user can simply visit the following URL once the database engine is\nrunning::\n\n    http://127.0.0.1:8080/pddb/insert/table_name?Name=John\n\nLikewise, the user can find the inserted record by visiting::\n\n    http://127.0.0.1:8080/pddb/find/table_name\n\nMatching conditions can also be added::\n\n    http://127.0.0.1:8080/pddb/find/table_name?Name=John\n\nPerforming an update is a little more complicated. Rather than exposing multiple API's, a single\nAPI is used and the parameters are parsed to understand the user's desired operation. So, instead\nof using ``/pddb/upsert/table_name?column_name=column_value``, the user must use\n``/pddb/upsert/table_name?record__column_name=column_value&where__condition_name=condition_value``. Essentially,\nprepend ``record__`` or ``where__`` to let the database engine know which pair of key-value corresponds\nto what parameter. For example, to change the name ``John`` to ``Jane`` in our record, we can simply\nvisit::\n\n    http://127.0.0.1:8080/pddb/upsert/table_name?record__Name=Jane&where__Name=John\n\nNote that this also applies to the rest of the API's, even though the parameters being parsed\ndefault to the most obvious choice. For example, ``/pddb/find`` assumes that the parameters in the\nquery string correspond to the equivalent of a ``WHERE`` in ``SQL``. However, the find query can also\nbe written as::\n\n    http://127.0.0.1:8080/pddb/find/table_name?where__Name=John\n\nThe usefulness of this does not appear evident until more complex queries are used, such as\n``WHERE-NOT``::\n\n    http://127.0.0.1:8080/pddb/find/table_name?where_not__Name=John\n\nWhile admittedly a bit quirky, these very simple API's allow for any application in any language to\ninterface with the database engine by performing very simple GET requests. The user does not need\nto worry about exposing an API or interfacing with a database in another process or server, which\ngives more time to developing the critical parts of the project first.\n\nLicense\n-------\n\nCopyright (c) 2016 Oscar Martinez\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\nNOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\nOF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n=======\nHistory\n=======\n\n0.1.0 (2016-01-10)\n------------------\n\n* First release on PyPI.\n\n0.1.1 (2016-01-10)\n------------------\n\n* Fix case sensitive tests\n* Disable testing for all versions except 2.7, 3.3 and 3.4\n* Update docs\n\n0.2.0 (2016-01-12)\n------------------\n\n* Do not attempt to drop table if it does not exist\n* Improved Windows compatibility\n\n0.3.0 (2016-01-17)\n------------------\n\n* Delete database folder only if empty after dropping all tables\n* Improved Windows compatibility\n\n0.3.1 (2016-01-18)\n------------------\n\n* Added auto_cast option\n* String type enforcing enabled\n* Unicode and byte type support\n\n0.3.2 (2016-02-14)\n------------------\n\n* Added ability to use custom bottle route methods\n\n0.3.3 (2016-02-15)\n------------------\n\n* Delete CSV files if dataframe is empty when saving\n* Expose tostr() method as a public method", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/omtinez/pddb", "keywords": "pddb", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pddb", "package_url": "https://pypi.org/project/pddb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pddb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/omtinez/pddb"}, "release_url": "https://pypi.org/project/pddb/0.3.3/", "requires_dist": null, "requires_python": null, "summary": "Prototyping database engine for Python", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pandasdatabase\">\n<h2>PandasDatabase</h2>\n<a href=\"https://pypi.python.org/pypi/pddb\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pddb.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f151bdfd02449d1d145e03140ce6763f919e6891/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706464622e737667\"></a>\n<a href=\"https://travis-ci.org/omtinez/pddb\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/omtinez/pddb.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cef23598ec93990bf42387d4d659381644f94dcc/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6f6d74696e657a2f706464622e737667\"></a>\n<a href=\"https://pddb.readthedocs.org/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08eeb4a74efd3d16608458a0b50c8ede826445c1/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f706464622f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>Prototyping database engine for Python</p>\n<ul>\n<li>Free software: MIT License</li>\n<li>Documentation: <a href=\"https://pddb.readthedocs.org\" rel=\"nofollow\">https://pddb.readthedocs.org</a>.</li>\n</ul>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n<p>PandasDatabase is a RESTful database engine application built on top of Pandas. Essentially, it is\nan abstraction layer that projects the database-table-column model into a very simple set of API\u2019s.\nAs a database engine, it has some useful features that make it a good candidate for prototype work:</p>\n<ul>\n<li>Inherits all the performance and robustness of Pandas.</li>\n<li>Very simple and intuitive API set.</li>\n<li>Tables support dynamic schema, so every time columns are changed during development there is no\nneed to alter tables or CREATE statements.</li>\n<li>All data is persisted in plaintext, human-readable CSV format.</li>\n</ul>\n<p>Some of those features come at a cost that probably makes PandasDatabase less than ideal for\nproduction environments:</p>\n<ul>\n<li>Security. At the server, the security model is based on file permissions. For the API\u2019s,\nproduction environments should very likely never expose database API\u2019s of any form.</li>\n<li>Performance. While low latency production environments might not run into an issue,\nperformance-critical applications will probably run into a bottleneck when writing to disk.</li>\n<li>Data types. Exposing all the table data in CSV format means that complex data types such as date\ncannot be supported.</li>\n</ul>\n</div>\n<div id=\"the-problem\">\n<h3>The Problem</h3>\n<p>A very large number of small projects have fairly simple requirements for data storage. For all\nthose projects, interfacing with a database engine is boilerplate work that adds unnecessary\noverhead during development. This project provides a very simple yet powerful solution that is\ngreat for prototype work to enable those small projects to hit the ground running. Once the\ncritical components of the project are finished and a proof of concept version is running, projects\ncan transition to a more mature database engine that can better suit the needs of a production\nenvironment.</p>\n</div>\n<div id=\"getting-started\">\n<h3>Getting Started</h3>\n<p>This project is entirely Python based. To be able to use it, first install the dependencies:</p>\n<pre>$ pip install pandas bottle\n</pre>\n<p>The easiest way to install PandasDatabase is using pip:</p>\n<pre>$ pip install pddb\n</pre>\n<p>To fire up the database engine, simply run:</p>\n<pre>$ python -m pddb.pddb dbname --permissions w\n</pre>\n<p>By default, the database is started in read-only mode, which is why we need to pass the\n<tt><span class=\"pre\">--permissions</span> w</tt> flag. This should start a bottle application with the following endpoints\navailable:</p>\n<ul>\n<li><tt>/pddb</tt></li>\n<li><tt><span class=\"pre\">/pddb/find/&lt;table&gt;</span></tt></li>\n<li><tt><span class=\"pre\">/pddb/insert/&lt;table&gt;</span></tt></li>\n<li><tt><span class=\"pre\">/pddb/upsert/&lt;table&gt;</span></tt></li>\n<li><tt><span class=\"pre\">/pddb/delete/&lt;table&gt;</span></tt></li>\n</ul>\n<p>The parameters to those endpoints can be passed as a GET query string, or via POST. For example,\nto insert a new record, the user can simply visit the following URL once the database engine is\nrunning:</p>\n<pre>http://127.0.0.1:8080/pddb/insert/table_name?Name=John\n</pre>\n<p>Likewise, the user can find the inserted record by visiting:</p>\n<pre>http://127.0.0.1:8080/pddb/find/table_name\n</pre>\n<p>Matching conditions can also be added:</p>\n<pre>http://127.0.0.1:8080/pddb/find/table_name?Name=John\n</pre>\n<p>Performing an update is a little more complicated. Rather than exposing multiple API\u2019s, a single\nAPI is used and the parameters are parsed to understand the user\u2019s desired operation. So, instead\nof using <tt><span class=\"pre\">/pddb/upsert/table_name?column_name=column_value</span></tt>, the user must use\n<tt><span class=\"pre\">/pddb/upsert/table_name?record__column_name=column_value&amp;where__condition_name=condition_value</span></tt>. Essentially,\nprepend <tt>record__</tt> or <tt>where__</tt> to let the database engine know which pair of key-value corresponds\nto what parameter. For example, to change the name <tt>John</tt> to <tt>Jane</tt> in our record, we can simply\nvisit:</p>\n<pre>http://127.0.0.1:8080/pddb/upsert/table_name?record__Name=Jane&amp;where__Name=John\n</pre>\n<p>Note that this also applies to the rest of the API\u2019s, even though the parameters being parsed\ndefault to the most obvious choice. For example, <tt>/pddb/find</tt> assumes that the parameters in the\nquery string correspond to the equivalent of a <tt>WHERE</tt> in <tt>SQL</tt>. However, the find query can also\nbe written as:</p>\n<pre>http://127.0.0.1:8080/pddb/find/table_name?where__Name=John\n</pre>\n<p>The usefulness of this does not appear evident until more complex queries are used, such as\n<tt><span class=\"pre\">WHERE-NOT</span></tt>:</p>\n<pre>http://127.0.0.1:8080/pddb/find/table_name?where_not__Name=John\n</pre>\n<p>While admittedly a bit quirky, these very simple API\u2019s allow for any application in any language to\ninterface with the database engine by performing very simple GET requests. The user does not need\nto worry about exposing an API or interfacing with a database in another process or server, which\ngives more time to developing the critical parts of the project first.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>Copyright (c) 2016 Oscar Martinez\nAll rights reserved.</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\nassociated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\nNOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT\nOF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.0 (2016-01-10)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.1 (2016-01-10)</h3>\n<ul>\n<li>Fix case sensitive tests</li>\n<li>Disable testing for all versions except 2.7, 3.3 and 3.4</li>\n<li>Update docs</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.0 (2016-01-12)</h3>\n<ul>\n<li>Do not attempt to drop table if it does not exist</li>\n<li>Improved Windows compatibility</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3.0 (2016-01-17)</h3>\n<ul>\n<li>Delete database folder only if empty after dropping all tables</li>\n<li>Improved Windows compatibility</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.3.1 (2016-01-18)</h3>\n<ul>\n<li>Added auto_cast option</li>\n<li>String type enforcing enabled</li>\n<li>Unicode and byte type support</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.3.2 (2016-02-14)</h3>\n<ul>\n<li>Added ability to use custom bottle route methods</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.3.3 (2016-02-15)</h3>\n<ul>\n<li>Delete CSV files if dataframe is empty when saving</li>\n<li>Expose tostr() method as a public method</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1958648, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "608a70061d824beed17d39162e2e897c", "sha256": "f895c77432ce3a6c34f438d5e94483a64e4b8415e7e20a66740b19c4c404b913"}, "downloads": -1, "filename": "pddb-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "608a70061d824beed17d39162e2e897c", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 21009, "upload_time": "2016-01-11T02:28:56", "upload_time_iso_8601": "2016-01-11T02:28:56.316955Z", "url": "https://files.pythonhosted.org/packages/de/e4/e33726f167cabc77daab71cd15666a16139da7d8f5e8d358700d6c761b6b/pddb-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f404d5687d6e912c322ead1ad73b4f3d", "sha256": "be8989b2c114cdb65d860ae2d205d2e2d8b6ba573bccd91a832fbded004fc1f0"}, "downloads": -1, "filename": "pddb-0.1.1.zip", "has_sig": false, "md5_digest": "f404d5687d6e912c322ead1ad73b4f3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40036, "upload_time": "2016-01-11T02:28:51", "upload_time_iso_8601": "2016-01-11T02:28:51.353197Z", "url": "https://files.pythonhosted.org/packages/58/da/7d18764760fe6c7ccc793218caddb61aa0ea4b603f3e690b80cc6b661211/pddb-0.1.1.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "52853f5577c70aa39c3dfc1112202525", "sha256": "0938caabd9839c0b5258fc194d4a2994613dd4fc6e037b1b11f9d10056130410"}, "downloads": -1, "filename": "pddb-0.2.0.win-amd64.exe", "has_sig": false, "md5_digest": "52853f5577c70aa39c3dfc1112202525", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 247009, "upload_time": "2016-01-13T03:23:59", "upload_time_iso_8601": "2016-01-13T03:23:59.014298Z", "url": "https://files.pythonhosted.org/packages/dc/56/feb8c67d576b3bb52651bd48896f82be0620071a35b9f381de68ed39f0d1/pddb-0.2.0.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b92686738ccde8505654726c10de39d", "sha256": "466fa79588475a1751edaf9c5b790bcd787a38d85ad994da9401ba0cb38b8556"}, "downloads": -1, "filename": "pddb-0.2.0.zip", "has_sig": false, "md5_digest": "0b92686738ccde8505654726c10de39d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39763, "upload_time": "2016-01-13T03:23:52", "upload_time_iso_8601": "2016-01-13T03:23:52.353780Z", "url": "https://files.pythonhosted.org/packages/a0/1c/b4f8255218152bf297fc8757bd1748d698496ddacaa02f5e29f040d2efee/pddb-0.2.0.zip", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "3161e55e0c9b640ab2d2d977d028b35f", "sha256": "0ab6a55e657750aee7477537e67db22ca424fa5d220da863de05e2f8fe1c474d"}, "downloads": -1, "filename": "pddb-0.3.0.win-amd64.exe", "has_sig": false, "md5_digest": "3161e55e0c9b640ab2d2d977d028b35f", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 247097, "upload_time": "2016-01-18T01:46:54", "upload_time_iso_8601": "2016-01-18T01:46:54.802137Z", "url": "https://files.pythonhosted.org/packages/9b/2f/bd1f3521a7c9a93ceb4b7ade5b4119e1dbe4cdcbdb1dc86864311cd948f9/pddb-0.3.0.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc6c4e0c80eef1e5380409730e322ddb", "sha256": "7792a64927c474f263ea7e6235ab10299a93784895d4490658a6516ac1962e67"}, "downloads": -1, "filename": "pddb-0.3.0.zip", "has_sig": false, "md5_digest": "fc6c4e0c80eef1e5380409730e322ddb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40074, "upload_time": "2016-01-18T01:46:46", "upload_time_iso_8601": "2016-01-18T01:46:46.549940Z", "url": "https://files.pythonhosted.org/packages/ce/f9/f46e4fc78b3de154bf3ac999e3392e665280e51e8ef0401fe95a58d97d8a/pddb-0.3.0.zip", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "b47e17cc44cf29e51fee9771574699b9", "sha256": "51c1c1f4b188bde1090edde2414d035a81a4edbd770170bde6fc6fea41e20f77"}, "downloads": -1, "filename": "pddb-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b47e17cc44cf29e51fee9771574699b9", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21684, "upload_time": "2016-02-14T04:01:12", "upload_time_iso_8601": "2016-02-14T04:01:12.414694Z", "url": "https://files.pythonhosted.org/packages/8c/a8/46f49eb1db713f4df0ba5c62b3dc856d2f52f2d9d438153048c702bddb74/pddb-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f5d6bfc71ae386f93e951b1e9fbbbe1", "sha256": "527a948871fce20590c94b558b42c504f2f354e63169454c7926794c592a9ba3"}, "downloads": -1, "filename": "pddb-0.3.1.tar.gz", "has_sig": false, "md5_digest": "8f5d6bfc71ae386f93e951b1e9fbbbe1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29611, "upload_time": "2016-02-14T04:00:52", "upload_time_iso_8601": "2016-02-14T04:00:52.012332Z", "url": "https://files.pythonhosted.org/packages/96/7d/bc342fb1b476d97b0a674800a3a5f33616fed17a10dac62767ac67b3a966/pddb-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "f6fbc1af07a88fd65f68792ffcfcbcc1", "sha256": "69ac6139e6e9ef8785bc0e224a0fac92ab6bbadb01386b8e7719eaac8f55083d"}, "downloads": -1, "filename": "pddb-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f6fbc1af07a88fd65f68792ffcfcbcc1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 21759, "upload_time": "2016-02-14T22:40:19", "upload_time_iso_8601": "2016-02-14T22:40:19.304866Z", "url": "https://files.pythonhosted.org/packages/33/98/3df473e3cac73c056b047b398c50e3ed57199814713b1f4d19b6dbcd03e9/pddb-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eaadf6896930c8772dcf19adca296df", "sha256": "cd1956109cc2aabff303ff7d0284d7cc3f843ebafd635a3d1e8fc36ec286f278"}, "downloads": -1, "filename": "pddb-0.3.2.tar.gz", "has_sig": false, "md5_digest": "5eaadf6896930c8772dcf19adca296df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29706, "upload_time": "2016-02-14T22:40:12", "upload_time_iso_8601": "2016-02-14T22:40:12.206635Z", "url": "https://files.pythonhosted.org/packages/35/d4/eacaf5f1ef7f3eaa5fffdc3f3aed3d9c3aa4f1bab1c8fa838f3994c32c77/pddb-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "38c76188ac109d2ab74c19c6243aa3c1", "sha256": "dde32054cdadaf0b97fb89fdfe0ccaa4c8a1b3f98feb4e6bf3f95cc9813b4215"}, "downloads": -1, "filename": "pddb-0.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38c76188ac109d2ab74c19c6243aa3c1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22001, "upload_time": "2016-02-16T05:39:54", "upload_time_iso_8601": "2016-02-16T05:39:54.810007Z", "url": "https://files.pythonhosted.org/packages/e7/6b/ac47a26c1165f46b83dcfa1aefcc2d9fa016459ac9764ddb80db84369ed7/pddb-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "367309bcedd506b4a3a222ad3db1fc1d", "sha256": "2e6c1b7bf40f792c3f026d4b7d404d6aa78565c4eb779fe5cfed6a11f696a730"}, "downloads": -1, "filename": "pddb-0.3.3.tar.gz", "has_sig": false, "md5_digest": "367309bcedd506b4a3a222ad3db1fc1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29921, "upload_time": "2016-02-16T05:39:41", "upload_time_iso_8601": "2016-02-16T05:39:41.635996Z", "url": "https://files.pythonhosted.org/packages/3b/db/03f33f9a128e2e1cded1d77f7bd1c85a8ab2a1af3388214210287bb6afcb/pddb-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38c76188ac109d2ab74c19c6243aa3c1", "sha256": "dde32054cdadaf0b97fb89fdfe0ccaa4c8a1b3f98feb4e6bf3f95cc9813b4215"}, "downloads": -1, "filename": "pddb-0.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38c76188ac109d2ab74c19c6243aa3c1", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22001, "upload_time": "2016-02-16T05:39:54", "upload_time_iso_8601": "2016-02-16T05:39:54.810007Z", "url": "https://files.pythonhosted.org/packages/e7/6b/ac47a26c1165f46b83dcfa1aefcc2d9fa016459ac9764ddb80db84369ed7/pddb-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "367309bcedd506b4a3a222ad3db1fc1d", "sha256": "2e6c1b7bf40f792c3f026d4b7d404d6aa78565c4eb779fe5cfed6a11f696a730"}, "downloads": -1, "filename": "pddb-0.3.3.tar.gz", "has_sig": false, "md5_digest": "367309bcedd506b4a3a222ad3db1fc1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29921, "upload_time": "2016-02-16T05:39:41", "upload_time_iso_8601": "2016-02-16T05:39:41.635996Z", "url": "https://files.pythonhosted.org/packages/3b/db/03f33f9a128e2e1cded1d77f7bd1c85a8ab2a1af3388214210287bb6afcb/pddb-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:19 2020"}