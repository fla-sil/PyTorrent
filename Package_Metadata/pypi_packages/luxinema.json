{"info": {"author": "Daniel Gomez", "author_email": "d.gomez@posteo.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "luxinema\n========\n\n-----\n\nLuxinema is a small tool that grabs the movie schedule information\nfrom the LUX cinema in Nijmegen and displays it together with IMDB Ratings.\nIt is being developed more as a personal learning experience then for\nrobustness.\n\nDisclaimer: I am not affiliated with the cinema in any way.\n\n.. contents:: **Table of Contents**\n    :backlinks: none\n\nInstallation\n------------\n\nluxinema supports python 3.5 and 3.6.\nEither clone the project, or install it with:\n\n.. code-block:: bash\n\n    $ pip install git+https://github.com/dangom/luxinema.git\n\nUsage\n-------\nAfter installation, running :code:`luxinema` will display the LUX schedule for the current day.\nThat is currently the only functionality implemented. When running for the first time,\nthe program may take about 15 seconds to show results, because it has to create a cache\nand request the IMDB information for each movie.\n\n\nRoadmap\n-------\n\n- Create a usable CLI Tool.\n- Query for specific movie.\n- Query for date range, instead of single day.\n- Add support for proper caching (redis? Interesting, but easier and simpler with requests_cache).\n- Twilio to query infos per SMS.\n\n\nLicense\n-------\n\nluxinema is distributed under the terms of both\n\n- `MIT License <https://choosealicense.com/licenses/mit>`_\n- `Apache License, Version 2.0 <https://choosealicense.com/licenses/apache-2.0>`_\n\nat your option.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dangom/luxinema", "keywords": "cinema", "license": "MIT/Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "luxinema", "package_url": "https://pypi.org/project/luxinema/", "platform": "", "project_url": "https://pypi.org/project/luxinema/", "project_urls": {"Homepage": "https://github.com/dangom/luxinema"}, "release_url": "https://pypi.org/project/luxinema/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Retrieve cinema information for the LUX Nijmegen", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            luxinema<br>========<br><br>-----<br><br>Luxinema is a small tool that grabs the movie schedule information<br>from the LUX cinema in Nijmegen and displays it together with IMDB Ratings.<br>It is being developed more as a personal learning experience then for<br>robustness.<br><br>Disclaimer: I am not affiliated with the cinema in any way.<br><br>.. contents:: **Table of Contents**<br>    :backlinks: none<br><br>Installation<br>------------<br><br>luxinema supports python 3.5 and 3.6.<br>Either clone the project, or install it with:<br><br>.. code-block:: bash<br><br>    $ pip install git+https://github.com/dangom/luxinema.git<br><br>Usage<br>-------<br>After installation, running :code:`luxinema` will display the LUX schedule for the current day.<br>That is currently the only functionality implemented. When running for the first time,<br>the program may take about 15 seconds to show results, because it has to create a cache<br>and request the IMDB information for each movie.<br><br><br>Roadmap<br>-------<br><br>- Create a usable CLI Tool.<br>- Query for specific movie.<br>- Query for date range, instead of single day.<br>- Add support for proper caching (redis? Interesting, but easier and simpler with requests_cache).<br>- Twilio to query infos per SMS.<br><br><br>License<br>-------<br><br>luxinema is distributed under the terms of both<br><br>- `MIT License &lt;https://choosealicense.com/licenses/mit&gt;`_<br>- `Apache License, Version 2.0 &lt;https://choosealicense.com/licenses/apache-2.0&gt;`_<br><br>at your option.\n          </div>"}, "last_serial": 3169072, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "32706342b2de573923cb1861d181dd52", "sha256": "1d9e262c8acab5507615f9f249311d3e17ad2272efe0eca9e1c0f436064b0c5b"}, "downloads": -1, "filename": "luxinema-0.1.2-py3.6.egg", "has_sig": false, "md5_digest": "32706342b2de573923cb1861d181dd52", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 11899, "upload_time": "2017-09-12T21:53:05", "upload_time_iso_8601": "2017-09-12T21:53:05.306116Z", "url": "https://files.pythonhosted.org/packages/4b/2f/f8a5a2c06fd4b019abb7b46d8ce58968cc042c087a7c84e7f1e85ff98ee8/luxinema-0.1.2-py3.6.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "32706342b2de573923cb1861d181dd52", "sha256": "1d9e262c8acab5507615f9f249311d3e17ad2272efe0eca9e1c0f436064b0c5b"}, "downloads": -1, "filename": "luxinema-0.1.2-py3.6.egg", "has_sig": false, "md5_digest": "32706342b2de573923cb1861d181dd52", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 11899, "upload_time": "2017-09-12T21:53:05", "upload_time_iso_8601": "2017-09-12T21:53:05.306116Z", "url": "https://files.pythonhosted.org/packages/4b/2f/f8a5a2c06fd4b019abb7b46d8ce58968cc042c087a7c84e7f1e85ff98ee8/luxinema-0.1.2-py3.6.egg", "yanked": false}], "timestamp": "Fri May  8 00:42:52 2020"}