{"info": {"author": "Vladimir Shkoda", "author_email": "vladimir.shkoda.51@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Database", "Topic :: Software Development"], "description": "redis-bindings\n==============\n\n.. image:: https://travis-ci.org/vladimirshkoda/redis-bindings.svg?branch=master\n    :target: https://travis-ci.org/vladimirshkoda/redis-bindings\n\n.. image:: https://img.shields.io/badge/style-wemake-000000.svg\n    :target: https://github.com/wemake-services/wemake-python-styleguide\n\nRedis bindings is an attempt to bring Redis types into Python as native ones. It\nis based on `redis-py <https://github.com/andymccurdy/redis-py>`_ and has the\nfollowing types implemented so far:\n\n* `RedisList <https://redis.io/commands#list>`_\n\nMoreover, it provides some Redis descriptor interfaces:\n\n* IRedisField\n* IRedisListField\n\nIt is exactly interfaces, because it requires user to override ``get_key_name``\nmethod to define key name for Redis. Here is an example of how it can be\nimplemented (can be found in `example.py <example.py>`_).\n\n.. code-block:: python\n\n    from redis import Redis\n    from redistypes.descriptors import IRedisField, IRedisListField\n\n\n    r_connection = Redis()\n\n\n    class RedisField(IRedisField):\n        def __init__(self, pickling=True):\n            super(RedisField, self).__init__(\n                redis_connection=r_connection,\n                pickling=pickling\n            )\n\n        def get_key_name(self, instance):\n            return ':'.join([\n                instance.__class__.__name__, str(instance.pk), self.name\n            ])\n\n\n    class RedisListField(IRedisListField, RedisField):\n        pass\n\n\n    class Student:\n        name = RedisField()\n        subjects = RedisListField()\n\n        def __init__(self, pk):\n            self.pk = pk\n\nThe ``Student`` class defined above can do the following things:\n\n.. code-block:: pycon\n\n    >>> from example import Student\n    >>> s = Student(pk=1)\n    >>> s.name = 'John Galt'\n    >>> s.subjects = ['math', 'physics']\n    >>> s.name\n    John Galt\n    >>> s.subjects\n    RedisList: ['math', 'physics']\n    >>> s.subjects.append('p.e.')\n    >>> s.subjects\n    RedisList: ['math', 'physics', 'p.e.']\n    >>> # Values stored inside the Redis types are immutable!\n    >>> s.subjects.append({'name': 'art', 'avg_score': 4.5})\n    >>> s.subjects[3]\n    {'avg_score': 4.5, 'name': 'art'}\n    >>> s.subjects[3]['avg_score'] = 3\n    >>> s.subjects[3]\n    {'avg_score': 4.5, 'name': 'art'}\n\nWarning!\n--------\n\nAll values stored inside the Redis types are immutable! As the example above\nshows, an attempt to change the value stored in the dictionary inside the\nRedisList leads to nothing.\n\nRoadmap\n-------\n\n* Querying over the pipe\n* RedisDict\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vladimirshkoda/redis-bindings", "keywords": "redis,key-value,store,bindings,types,descriptor,orm", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "redistypes", "package_url": "https://pypi.org/project/redistypes/", "platform": "any", "project_url": "https://pypi.org/project/redistypes/", "project_urls": {"Homepage": "https://github.com/vladimirshkoda/redis-bindings"}, "release_url": "https://pypi.org/project/redistypes/0.2.0/", "requires_dist": ["redis (>=3.0)"], "requires_python": ">=3.5", "summary": "Redis native types for Python", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/vladimirshkoda/redis-bindings\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/vladimirshkoda/redis-bindings.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc3a87e6e9870891089a1f868293e5ba25c264f8/68747470733a2f2f7472617669732d63692e6f72672f766c6164696d697273686b6f64612f72656469732d62696e64696e67732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/wemake-services/wemake-python-styleguide\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/style-wemake-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8b7ab66b651e55b1e788d412c25d402dfc132f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374796c652d77656d616b652d3030303030302e737667\"></a>\n<p>Redis bindings is an attempt to bring Redis types into Python as native ones. It\nis based on <a href=\"https://github.com/andymccurdy/redis-py\" rel=\"nofollow\">redis-py</a> and has the\nfollowing types implemented so far:</p>\n<ul>\n<li><a href=\"https://redis.io/commands#list\" rel=\"nofollow\">RedisList</a></li>\n</ul>\n<p>Moreover, it provides some Redis descriptor interfaces:</p>\n<ul>\n<li>IRedisField</li>\n<li>IRedisListField</li>\n</ul>\n<p>It is exactly interfaces, because it requires user to override <tt>get_key_name</tt>\nmethod to define key name for Redis. Here is an example of how it can be\nimplemented (can be found in <a href=\"example.py\" rel=\"nofollow\">example.py</a>).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">redis</span> <span class=\"kn\">import</span> <span class=\"n\">Redis</span>\n<span class=\"kn\">from</span> <span class=\"nn\">redistypes.descriptors</span> <span class=\"kn\">import</span> <span class=\"n\">IRedisField</span><span class=\"p\">,</span> <span class=\"n\">IRedisListField</span>\n\n\n<span class=\"n\">r_connection</span> <span class=\"o\">=</span> <span class=\"n\">Redis</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RedisField</span><span class=\"p\">(</span><span class=\"n\">IRedisField</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pickling</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">RedisField</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">redis_connection</span><span class=\"o\">=</span><span class=\"n\">r_connection</span><span class=\"p\">,</span>\n            <span class=\"n\">pickling</span><span class=\"o\">=</span><span class=\"n\">pickling</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_key_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">instance</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">':'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span>\n            <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">pk</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span>\n        <span class=\"p\">])</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">RedisListField</span><span class=\"p\">(</span><span class=\"n\">IRedisListField</span><span class=\"p\">,</span> <span class=\"n\">RedisField</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Student</span><span class=\"p\">:</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">RedisField</span><span class=\"p\">()</span>\n    <span class=\"n\">subjects</span> <span class=\"o\">=</span> <span class=\"n\">RedisListField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pk</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pk</span> <span class=\"o\">=</span> <span class=\"n\">pk</span>\n</pre>\n<p>The <tt>Student</tt> class defined above can do the following things:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">example</span> <span class=\"kn\">import</span> <span class=\"n\">Student</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Student</span><span class=\"p\">(</span><span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'John Galt'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">subjects</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'math'</span><span class=\"p\">,</span> <span class=\"s1\">'physics'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"go\">John Galt\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">subjects</span>\n<span class=\"go\">RedisList: ['math', 'physics']\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">subjects</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">'p.e.'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">subjects</span>\n<span class=\"go\">RedisList: ['math', 'physics', 'p.e.']\n</span><span class=\"c1\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Values stored inside the Redis types are immutable!</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">subjects</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'art'</span><span class=\"p\">,</span> <span class=\"s1\">'avg_score'</span><span class=\"p\">:</span> <span class=\"mf\">4.5</span><span class=\"p\">})</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">subjects</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"go\">{'avg_score': 4.5, 'name': 'art'}\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">subjects</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"s1\">'avg_score'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">subjects</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"go\">{'avg_score': 4.5, 'name': 'art'}</span>\n</pre>\n<div id=\"warning\">\n<h2>Warning!</h2>\n<p>All values stored inside the Redis types are immutable! As the example above\nshows, an attempt to change the value stored in the dictionary inside the\nRedisList leads to nothing.</p>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<ul>\n<li>Querying over the pipe</li>\n<li>RedisDict</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4935190, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b73baca74bcde31c493516a224a0e7c6", "sha256": "c94e17df72ce644bb7d3f616059bda92030d57db1047b7f1e0d898ffbadb9c4d"}, "downloads": -1, "filename": "redistypes-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b73baca74bcde31c493516a224a0e7c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5041, "upload_time": "2018-11-08T17:39:46", "upload_time_iso_8601": "2018-11-08T17:39:46.685895Z", "url": "https://files.pythonhosted.org/packages/fc/62/6dd4850a525f682fe7315d120304064d70a45ee630ab37a611232fd04bf6/redistypes-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f5ae38dccceaddd3a5e9f78c76564f35", "sha256": "38ecc3796e12192c31b2fa7d4ebe3f66788412306137b03bd0beaed107f8d2a3"}, "downloads": -1, "filename": "redistypes-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f5ae38dccceaddd3a5e9f78c76564f35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6214, "upload_time": "2019-03-13T15:41:36", "upload_time_iso_8601": "2019-03-13T15:41:36.307355Z", "url": "https://files.pythonhosted.org/packages/55/63/88531c600bcc875400758983bf30bf1e77c96ddf6fc895abf82b3dc8ebbb/redistypes-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b94b9e87cd0dd5811b451e608f90b57a", "sha256": "2c87966b5c0b27ffbc75e0d3acf97ee949929643ffae06d54d2fe69b4e18ea0d"}, "downloads": -1, "filename": "redistypes-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b94b9e87cd0dd5811b451e608f90b57a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5675, "upload_time": "2019-03-13T15:41:37", "upload_time_iso_8601": "2019-03-13T15:41:37.771043Z", "url": "https://files.pythonhosted.org/packages/e5/32/e2137ab35ffea24fb74fc90b0b9d1d6b4d95e092c6ce1d0983057856971f/redistypes-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5ae38dccceaddd3a5e9f78c76564f35", "sha256": "38ecc3796e12192c31b2fa7d4ebe3f66788412306137b03bd0beaed107f8d2a3"}, "downloads": -1, "filename": "redistypes-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f5ae38dccceaddd3a5e9f78c76564f35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6214, "upload_time": "2019-03-13T15:41:36", "upload_time_iso_8601": "2019-03-13T15:41:36.307355Z", "url": "https://files.pythonhosted.org/packages/55/63/88531c600bcc875400758983bf30bf1e77c96ddf6fc895abf82b3dc8ebbb/redistypes-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b94b9e87cd0dd5811b451e608f90b57a", "sha256": "2c87966b5c0b27ffbc75e0d3acf97ee949929643ffae06d54d2fe69b4e18ea0d"}, "downloads": -1, "filename": "redistypes-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b94b9e87cd0dd5811b451e608f90b57a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5675, "upload_time": "2019-03-13T15:41:37", "upload_time_iso_8601": "2019-03-13T15:41:37.771043Z", "url": "https://files.pythonhosted.org/packages/e5/32/e2137ab35ffea24fb74fc90b0b9d1d6b4d95e092c6ce1d0983057856971f/redistypes-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:43 2020"}