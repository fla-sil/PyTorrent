{"info": {"author": "Tom Breuel", "author_email": "tmbdev+remove@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# TaskSquirrel\n\nTaskSquirrel executes tasks from a `Tasqfile.yml`. It is similar to `make`\nor `invoke`. It also supports Kubernetes workflows like `Argo` and `Airflow`.\n\nDifferences from other tools are:\n\n- configuration is in YAML\n- it supports multiple scripts / languages\n- it supports Jinja2 templating\n- it has built-in support for executing code in Docker and on Kubernetes clusters\n- it is completely serverless: all it requires for interacting with a K8s cluster is Kubectl\n\nTaskSquirrel is a good replacement for `invoke` and `make` even if you don't use\nthe container-related features, but it is particularly well suited to data analysis\nand deep learning workflows.\n\n\n# Commands\n\n- `tasq --help` -- display help\n- `tasq list` -- list all commands\n- `tasq run command` -- run a command\n\n# Example\n\n## Simple replacement for invoke\n\n```\ntasks:\n    venv:\n      - doc: build the virtual environment\n      - script: |\n          test -d venv || virtualenv venv\n          venv/bin/pip3 install -U -r requirements.txt\n\n    newversion:\n      - doc: increase the patch version number\n      - python: |\n          version = map(int, open(\"VERSION\").read().strip().split(\".\"))\n          version[-1] += 1\n          with open(\"VERSION\", \"w\") as stream:\n            stream.write(\".\".join(map(str, version)))\n\n    publish:\n      - doc: publish to PyPI\n      - script: twine upload\n```\n\n## Kubernetes Example\n\n```\nparams:\n\n  cluster: \"mycluster\"\n  image: \"mycompute\"\n\ntasks:\n\n    image:\n      docker_container: {{ image }}\n        dockerfile: ./Docker\n        push: tmbdev/{{ image }}\n        context:\n          - simple.key\n          - scripts/start.sh\n\n    kutest:\n      - doc: start a job on K8s and wait for its completion\n      - task: image\n      - with_braceexpand: \"{000..999}\"\n        param: shard\n        tasks:\n          - kubectl_apply: hello\n            template_name: myjob\n            params:\n              id: hello-{{ shard }}\n              script: |\n                echo hello-{{ shard }};\n                sleep 30\n      - kubectl_wait:\n        kind: jobs\n        prefix: hello-\n      - script: kubectl delete jobs --all\n\nk8s_templates:\n\n  myjob: |\n    apiVersion: batch/v1\n    kind: Job\n    metadata:\n      name: \"{{ id }}\"\n    spec:\n      template:\n        spec:\n          containers:\n          - name: main\n            image: \"{{ image }}\"\n            command: [\"/bin/bash\", \"-c\", \"{{ script }}\"]\n          restartPolicy: Never\n      backoffLimit: 4\n```\n\n# Status\n\nIt's pre-alpha.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tmbdev/tasq", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tasq", "package_url": "https://pypi.org/project/tasq/", "platform": "", "project_url": "https://pypi.org/project/tasq/", "project_urls": {"Homepage": "https://github.com/tmbdev/tasq"}, "release_url": "https://pypi.org/project/tasq/0.0.3/", "requires_dist": ["jinja2", "pyyaml", "typer", "braceexpand"], "requires_python": ">=3.6", "summary": "Task handlinlg.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TaskSquirrel</h1>\n<p>TaskSquirrel executes tasks from a <code>Tasqfile.yml</code>. It is similar to <code>make</code>\nor <code>invoke</code>. It also supports Kubernetes workflows like <code>Argo</code> and <code>Airflow</code>.</p>\n<p>Differences from other tools are:</p>\n<ul>\n<li>configuration is in YAML</li>\n<li>it supports multiple scripts / languages</li>\n<li>it supports Jinja2 templating</li>\n<li>it has built-in support for executing code in Docker and on Kubernetes clusters</li>\n<li>it is completely serverless: all it requires for interacting with a K8s cluster is Kubectl</li>\n</ul>\n<p>TaskSquirrel is a good replacement for <code>invoke</code> and <code>make</code> even if you don't use\nthe container-related features, but it is particularly well suited to data analysis\nand deep learning workflows.</p>\n<h1>Commands</h1>\n<ul>\n<li><code>tasq --help</code> -- display help</li>\n<li><code>tasq list</code> -- list all commands</li>\n<li><code>tasq run command</code> -- run a command</li>\n</ul>\n<h1>Example</h1>\n<h2>Simple replacement for invoke</h2>\n<pre><code>tasks:\n    venv:\n      - doc: build the virtual environment\n      - script: |\n          test -d venv || virtualenv venv\n          venv/bin/pip3 install -U -r requirements.txt\n\n    newversion:\n      - doc: increase the patch version number\n      - python: |\n          version = map(int, open(\"VERSION\").read().strip().split(\".\"))\n          version[-1] += 1\n          with open(\"VERSION\", \"w\") as stream:\n            stream.write(\".\".join(map(str, version)))\n\n    publish:\n      - doc: publish to PyPI\n      - script: twine upload\n</code></pre>\n<h2>Kubernetes Example</h2>\n<pre><code>params:\n\n  cluster: \"mycluster\"\n  image: \"mycompute\"\n\ntasks:\n\n    image:\n      docker_container: {{ image }}\n        dockerfile: ./Docker\n        push: tmbdev/{{ image }}\n        context:\n          - simple.key\n          - scripts/start.sh\n\n    kutest:\n      - doc: start a job on K8s and wait for its completion\n      - task: image\n      - with_braceexpand: \"{000..999}\"\n        param: shard\n        tasks:\n          - kubectl_apply: hello\n            template_name: myjob\n            params:\n              id: hello-{{ shard }}\n              script: |\n                echo hello-{{ shard }};\n                sleep 30\n      - kubectl_wait:\n        kind: jobs\n        prefix: hello-\n      - script: kubectl delete jobs --all\n\nk8s_templates:\n\n  myjob: |\n    apiVersion: batch/v1\n    kind: Job\n    metadata:\n      name: \"{{ id }}\"\n    spec:\n      template:\n        spec:\n          containers:\n          - name: main\n            image: \"{{ image }}\"\n            command: [\"/bin/bash\", \"-c\", \"{{ script }}\"]\n          restartPolicy: Never\n      backoffLimit: 4\n</code></pre>\n<h1>Status</h1>\n<p>It's pre-alpha.</p>\n\n          </div>"}, "last_serial": 6783403, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "648d94f8ac934f8c8d93b922d4f8c349", "sha256": "df8113570318ac0a23efe980cb14d10a823e50b408fb4d8f86f66ee252a2b052"}, "downloads": -1, "filename": "tasq-0.0.1-py3.7.egg", "has_sig": false, "md5_digest": "648d94f8ac934f8c8d93b922d4f8c349", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 7139, "upload_time": "2020-03-10T07:17:41", "upload_time_iso_8601": "2020-03-10T07:17:41.303995Z", "url": "https://files.pythonhosted.org/packages/b1/4a/32eefe1cd152ea67b9e4403f3a7c0d15f7b4d44b291753d4fa778ecad490/tasq-0.0.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "06c9086e9802e7a2688c27838601f9cb", "sha256": "ee1b8cca35bfd12b1e657d68c7b48e7b6a1a1bb04a015adbedf33267e69729d0"}, "downloads": -1, "filename": "tasq-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "06c9086e9802e7a2688c27838601f9cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4667, "upload_time": "2020-03-10T07:17:38", "upload_time_iso_8601": "2020-03-10T07:17:38.776143Z", "url": "https://files.pythonhosted.org/packages/49/64/2a386b4b064e164beb7c4b1d59bef0939cf927a384ef9178c2af1562bf23/tasq-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ebfb0620a1327f8ecb03634820c88d4", "sha256": "e0c98230363ab2560ef7cc9ec761f22431c72ba9f76138ad1af7814d9f5144bd"}, "downloads": -1, "filename": "tasq-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5ebfb0620a1327f8ecb03634820c88d4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4374, "upload_time": "2020-03-10T07:17:42", "upload_time_iso_8601": "2020-03-10T07:17:42.193278Z", "url": "https://files.pythonhosted.org/packages/49/37/b48824dd51ddf374a48d26871260e5dbb9f7ddc0ce3c17437eff10898691/tasq-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5486e53b92284137a2bb6918f4e0ff72", "sha256": "8d7d36c22b14c572bbaef56151928a211fdac34571d4c7cc925bf8cf602b7900"}, "downloads": -1, "filename": "tasq-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5486e53b92284137a2bb6918f4e0ff72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4943, "upload_time": "2020-03-10T08:00:04", "upload_time_iso_8601": "2020-03-10T08:00:04.374456Z", "url": "https://files.pythonhosted.org/packages/52/d3/5aa0d59481ef2026be6fcedce9fc1d468a8d65a17a0a83d54eb25baf538e/tasq-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6b7313d7fb571de904ab801f0050d16", "sha256": "c29204789658808ef9d0696eb274da597a3829e68f80853a9ac21e6675cd996e"}, "downloads": -1, "filename": "tasq-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c6b7313d7fb571de904ab801f0050d16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4721, "upload_time": "2020-03-10T08:00:05", "upload_time_iso_8601": "2020-03-10T08:00:05.451998Z", "url": "https://files.pythonhosted.org/packages/dd/2e/9c3d657d4d7504f48abdf1407f95143701465db691fdaad77caad1b76581/tasq-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5486e53b92284137a2bb6918f4e0ff72", "sha256": "8d7d36c22b14c572bbaef56151928a211fdac34571d4c7cc925bf8cf602b7900"}, "downloads": -1, "filename": "tasq-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5486e53b92284137a2bb6918f4e0ff72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4943, "upload_time": "2020-03-10T08:00:04", "upload_time_iso_8601": "2020-03-10T08:00:04.374456Z", "url": "https://files.pythonhosted.org/packages/52/d3/5aa0d59481ef2026be6fcedce9fc1d468a8d65a17a0a83d54eb25baf538e/tasq-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6b7313d7fb571de904ab801f0050d16", "sha256": "c29204789658808ef9d0696eb274da597a3829e68f80853a9ac21e6675cd996e"}, "downloads": -1, "filename": "tasq-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c6b7313d7fb571de904ab801f0050d16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4721, "upload_time": "2020-03-10T08:00:05", "upload_time_iso_8601": "2020-03-10T08:00:05.451998Z", "url": "https://files.pythonhosted.org/packages/dd/2e/9c3d657d4d7504f48abdf1407f95143701465db691fdaad77caad1b76581/tasq-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:41 2020"}