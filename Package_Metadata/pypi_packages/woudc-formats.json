{"info": {"author": "Meteorological Service of Canada, Environment Canada", "author_email": "ec.woudc.ec@canada.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Atmospheric Science"], "description": "[![Build Status](https://travis-ci.org/woudc/woudc-formats.png?branch=master)](https://travis-ci.org/woudc/woudc-formats)\n[![Build status](https://ci.appveyor.com/api/projects/status/02koln2pe4ap5kvd/branch/master?svg=true)](https://ci.appveyor.com/project/tomkralidis/woudc-formats)\n[![Downloads this month on PyPI](https://img.shields.io/pypi/dm/woudc-formats.svg)](http://pypi.python.org/pypi/woudc-formats)\n[![Latest release](https://img.shields.io/pypi/v/woudc-formats.svg)](http://pypi.python.org/pypi/woudc-formats)\n[![License](https://img.shields.io/github/license/woudc/woudc-formats.svg)](https://github.com/woudc/woudc-formats)\n\n# WOUDC Format Converter \n\nwoudc-formats is a Python package used to perform various transformations\nfrom/to WOUDC supported formats.\nCurrently supported features include:\n\nReaders: SHADOZ, BAS, NASA AMES files, Vaisala.\nWriters: WOUDC totalozone [daily summary](https://woudc.org/archive/Summaries/TotalOzone/Daily_Summary/FileFormat_DV.txt) (master file).\n\n### Installation Instructions\n\n## Requirements\nwoudc-formats requires Python 2.7, [pywoudc](https://github.com/woudc/pywoudc), [pyshadoz](https://github.com/WMO-ET-WDC/pyshadoz), and [woudc-extcsv](https://github.com/woudc/woudc-extcsv)\n\n## Dependencies\nSee `requirements.txt`\n- [pywoudc](https://github.com/woudc/pywoudc)\n- [woudc-extcsv](https://github.com/woudc/woudc-extcsv)\n- [pyshadoz](https://github.com/WMO-ET-WDC/pyshadoz)\n\n## Setup\n```bash\ngit clone https://github.com/woudc/woudc-formats.git && cd woudc-formats\npython setup.py install\n```\n\n## Usage\n\n### Command Line Interface\n```bash\nusage: woudc-formats.py --format {SHADOZ, BAS, AMES-2160, Vaisala, totalozone-masterfile} --inpath PATH/FILENAME --logfile PATH/LOGFILE --loglevel {DEBUG, CRITICAL, ERROR, WARNING, INFO, DEBUG, NOTSET}\n\nRequired Arguments:\n    --format: indicate input file format\n    --inpath: import filename and path, for SHADOZ, BAS, Vaisala, and AMES-2160\n    --logfile: path to log file, including file name\n    --loglevel: define log level for logging\n\nOptional Arguments:\n    --outpath: indicate the output file path, by default is 'INPATH.csv'\n    --station: station name in WOUDC\n    --agency: agency name in WOUDC\n    --metadata: a dictionary formatted string containing some specified station metadation information\n            ex: {\"inst type\": \"ECC\", \"inst number\": \"XXXXX\", \"SA\": \"XX\" , \"ID\" : \"XXX\", \"country\": \"XXX\", \"GAW_ID\": \"XXX\"}\n\nImportance:\n    For AMES-2160 format, --agency argument is required in order to process the file.\n    For Vaisala format, --station and --agency in arguments and 'ID', 'GAW_ID', 'country', and 'SA' arguments in --metadata are required in order to process the file.\n```\n\n### API\n```bash\nusage: \nimport woudc_formats\necsv = woudc_formats.load(In_Format, InPut_File_Path, station, agency)\nif ecsv is not None:\n    woudc_formats.dump(ecsv, Output_file_path)\n\nOR\n\nimport woudc_formats\nwith open(input_file_path) as ff\n    ff.read()\necsv = woudc_formats.loads(In_Format, s)\nif ecsv is not None:\n    woudc_formats.dump(ecsv, Output_file_path)\n\nOptional Method:\nwoudc_formats.load(In_Format, InPut_File_Path, station, agency, metadata) : Take input file path and return ext-csv object, agency is required for AMES file and metadata is required for Vaisala, see optional arguments for Command Line Interface for more detail.\nwoudc_formats.loads(In_Format,String_of_InPut_file, station, agency, metadata) : Take string represenataion of input file and return ext-csv object. Station and agency are required for AMES file and metadata is required for Vaisala, see optional arguments for Command Line Interface for more detail.\nwoudc_formats.dump(ecsv, Output_file_path) : Take ext-csv object and produce output file.\nwoudc_formats.dumps(ecsv) : Take ext-csv object and prints to screen.\n```\n### Example\n```bash\nwoudc-formats.py --format SHADOZ --inpath ./bin/SAMPLE.dat --outpath ./bin/SAMPLE.csv --logfile ./bin/LOG.log --loglevel DEBUG\nwoudc-formats.py --format totalozone-masterfile --inpath <full local or web path to totalozone snapshot> --outpath <output path> --loglevel <log level> --logfile <log file>\nwoudc-formats.py --format AMES-2160 --inpath <full local path to AMES file> --outpath <output path> --loglevel <log level> --logfile <log file> --agency XXX --metadata '{\"SA\": \"XXX\", \"inst type\": \"ECC\", \"inst number\": \"6A3412\"}'\n\nFor Agency 'AWI-NM':\nwoudc-formats.py --format AMES-2160 --inpath INPATH --logfile log.log --loglevel DEBUG --agency AWI-NM\n```\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/woudc/woudc-formats", "keywords": "Ozone O3 Ultraviolet Radiation UV UV Index Dobson Units Archives World Data Centre WOUDC Non-standard FormatSHADOZ AMES BAS Masterfile", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "woudc-formats", "package_url": "https://pypi.org/project/woudc-formats/", "platform": "all", "project_url": "https://pypi.org/project/woudc-formats/", "project_urls": {"Homepage": "https://github.com/woudc/woudc-formats"}, "release_url": "https://pypi.org/project/woudc-formats/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Python library for converting non-standard formats to WOUDC extended CSV format", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Build Status](https://travis-ci.org/woudc/woudc-formats.png?branch=master)](https://travis-ci.org/woudc/woudc-formats)<br>[![Build status](https://ci.appveyor.com/api/projects/status/02koln2pe4ap5kvd/branch/master?svg=true)](https://ci.appveyor.com/project/tomkralidis/woudc-formats)<br>[![Downloads this month on PyPI](https://img.shields.io/pypi/dm/woudc-formats.svg)](http://pypi.python.org/pypi/woudc-formats)<br>[![Latest release](https://img.shields.io/pypi/v/woudc-formats.svg)](http://pypi.python.org/pypi/woudc-formats)<br>[![License](https://img.shields.io/github/license/woudc/woudc-formats.svg)](https://github.com/woudc/woudc-formats)<br><br># WOUDC Format Converter <br><br>woudc-formats is a Python package used to perform various transformations<br>from/to WOUDC supported formats.<br>Currently supported features include:<br><br>Readers: SHADOZ, BAS, NASA AMES files, Vaisala.<br>Writers: WOUDC totalozone [daily summary](https://woudc.org/archive/Summaries/TotalOzone/Daily_Summary/FileFormat_DV.txt) (master file).<br><br>### Installation Instructions<br><br>## Requirements<br>woudc-formats requires Python 2.7, [pywoudc](https://github.com/woudc/pywoudc), [pyshadoz](https://github.com/WMO-ET-WDC/pyshadoz), and [woudc-extcsv](https://github.com/woudc/woudc-extcsv)<br><br>## Dependencies<br>See `requirements.txt`<br>- [pywoudc](https://github.com/woudc/pywoudc)<br>- [woudc-extcsv](https://github.com/woudc/woudc-extcsv)<br>- [pyshadoz](https://github.com/WMO-ET-WDC/pyshadoz)<br><br>## Setup<br>```bash<br>git clone https://github.com/woudc/woudc-formats.git &amp;&amp; cd woudc-formats<br>python setup.py install<br>```<br><br>## Usage<br><br>### Command Line Interface<br>```bash<br>usage: woudc-formats.py --format {SHADOZ, BAS, AMES-2160, Vaisala, totalozone-masterfile} --inpath PATH/FILENAME --logfile PATH/LOGFILE --loglevel {DEBUG, CRITICAL, ERROR, WARNING, INFO, DEBUG, NOTSET}<br><br>Required Arguments:<br>    --format: indicate input file format<br>    --inpath: import filename and path, for SHADOZ, BAS, Vaisala, and AMES-2160<br>    --logfile: path to log file, including file name<br>    --loglevel: define log level for logging<br><br>Optional Arguments:<br>    --outpath: indicate the output file path, by default is 'INPATH.csv'<br>    --station: station name in WOUDC<br>    --agency: agency name in WOUDC<br>    --metadata: a dictionary formatted string containing some specified station metadation information<br>            ex: {\"inst type\": \"ECC\", \"inst number\": \"XXXXX\", \"SA\": \"XX\" , \"ID\" : \"XXX\", \"country\": \"XXX\", \"GAW_ID\": \"XXX\"}<br><br>Importance:<br>    For AMES-2160 format, --agency argument is required in order to process the file.<br>    For Vaisala format, --station and --agency in arguments and 'ID', 'GAW_ID', 'country', and 'SA' arguments in --metadata are required in order to process the file.<br>```<br><br>### API<br>```bash<br>usage: <br>import woudc_formats<br>ecsv = woudc_formats.load(In_Format, InPut_File_Path, station, agency)<br>if ecsv is not None:<br>    woudc_formats.dump(ecsv, Output_file_path)<br><br>OR<br><br>import woudc_formats<br>with open(input_file_path) as ff<br>    ff.read()<br>ecsv = woudc_formats.loads(In_Format, s)<br>if ecsv is not None:<br>    woudc_formats.dump(ecsv, Output_file_path)<br><br>Optional Method:<br>woudc_formats.load(In_Format, InPut_File_Path, station, agency, metadata) : Take input file path and return ext-csv object, agency is required for AMES file and metadata is required for Vaisala, see optional arguments for Command Line Interface for more detail.<br>woudc_formats.loads(In_Format,String_of_InPut_file, station, agency, metadata) : Take string represenataion of input file and return ext-csv object. Station and agency are required for AMES file and metadata is required for Vaisala, see optional arguments for Command Line Interface for more detail.<br>woudc_formats.dump(ecsv, Output_file_path) : Take ext-csv object and produce output file.<br>woudc_formats.dumps(ecsv) : Take ext-csv object and prints to screen.<br>```<br>### Example<br>```bash<br>woudc-formats.py --format SHADOZ --inpath ./bin/SAMPLE.dat --outpath ./bin/SAMPLE.csv --logfile ./bin/LOG.log --loglevel DEBUG<br>woudc-formats.py --format totalozone-masterfile --inpath &lt;full local or web path to totalozone snapshot&gt; --outpath &lt;output path&gt; --loglevel &lt;log level&gt; --logfile &lt;log file&gt;<br>woudc-formats.py --format AMES-2160 --inpath &lt;full local path to AMES file&gt; --outpath &lt;output path&gt; --loglevel &lt;log level&gt; --logfile &lt;log file&gt; --agency XXX --metadata '{\"SA\": \"XXX\", \"inst type\": \"ECC\", \"inst number\": \"6A3412\"}'<br><br>For Agency 'AWI-NM':<br>woudc-formats.py --format AMES-2160 --inpath INPATH --logfile log.log --loglevel DEBUG --agency AWI-NM<br>```<br>\n          </div>"}, "last_serial": 3625037, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dbd6845896d203ffcfaf26c297377768", "sha256": "904b3741396b3118f1b17c23991244bf3e99ece14befa548ec2b8d3663b9d8b6"}, "downloads": -1, "filename": "woudc-formats-0.1.0.tar.gz", "has_sig": false, "md5_digest": "dbd6845896d203ffcfaf26c297377768", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22563, "upload_time": "2017-03-29T00:38:58", "upload_time_iso_8601": "2017-03-29T00:38:58.096758Z", "url": "https://files.pythonhosted.org/packages/d7/cd/a5e37386b0018358097a9036acc90cbd46f8fa961df5f85fe57bf4561385/woudc-formats-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e1983d311f2c69ed385e638bcc4fd9d5", "sha256": "5d6962d48a8270474813eb374be421610a3243dfa078d1db1ea63406be32c5db"}, "downloads": -1, "filename": "woudc-formats-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e1983d311f2c69ed385e638bcc4fd9d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31711, "upload_time": "2018-02-28T12:26:19", "upload_time_iso_8601": "2018-02-28T12:26:19.841367Z", "url": "https://files.pythonhosted.org/packages/c6/0a/1e43257fcb2cc856722b0c128c3d9394b01fc71ffd7d4b476dcd26760c99/woudc-formats-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1983d311f2c69ed385e638bcc4fd9d5", "sha256": "5d6962d48a8270474813eb374be421610a3243dfa078d1db1ea63406be32c5db"}, "downloads": -1, "filename": "woudc-formats-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e1983d311f2c69ed385e638bcc4fd9d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31711, "upload_time": "2018-02-28T12:26:19", "upload_time_iso_8601": "2018-02-28T12:26:19.841367Z", "url": "https://files.pythonhosted.org/packages/c6/0a/1e43257fcb2cc856722b0c128c3d9394b01fc71ffd7d4b476dcd26760c99/woudc-formats-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:41 2020"}