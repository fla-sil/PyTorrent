{"info": {"author": "Souheil Chelfouh", "author_email": "trollfot@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Zope3", "Intended Audience :: Other Audience", "License :: OSI Approved :: Zope Public License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "======================\nmegrok.resourceviewlet\n======================\n\n`megrok.resourceviewlet` is a package meant to include resources\nusing layer, context and view discriminations.\n\n\nSetup\n=====\n\nLet's import and init the necessary work environment::\n\n  >>> import grokcore.component as grok\n  >>> from grokcore import view, viewlet\n  >>> from zope.app.wsgi.testlayer import Browser\n\n  >>> browser = Browser()\n  >>> browser.handleErrors = False\n\n\nLibrary\n=======\n\nWe first declare a resource. We'll include it in our page::\n\n  >>> from fanstatic import Resource, Library\n  >>> myLibrary = Library('test_library', 'ftests/resources')\n  >>> Thing = Resource(myLibrary, 'thing.js')\n\nThis step is done by an entry point. For the testing, we do it by hand::\n\n  >>> from zope.fanstatic.zcml import create_factory\n  >>> from zope.component import getGlobalSiteManager\n  >>> from zope.publisher.interfaces.browser import IBrowserRequest\n  >>> from zope.interface import Interface\n\n  >>> resource_factory = create_factory(myLibrary)\n  >>> getGlobalSiteManager().registerAdapter(\n  ...      resource_factory, (IBrowserRequest,), Interface, myLibrary.name)\n\n\nComponents\n==========\n\nTo demonstrate our resource viewlet, we first need a page to\nrender. This page contains a content provider named 'resources'::\n\n  >>> from zope.interface import Interface\n\n  >>> class Index(view.View):\n  ...   view.require(\"zope.Public\")\n  ...   view.context(Interface)\n  ...\n  ...   template = view.PageTemplate(\"\"\"<html><head>\n  ...     <tal:resources replace='provider:resources' />\n  ...   </head></html>\"\"\")\n\n  >>> grok.testing.grok_component('index', Index)\n  True\n\n\nManager\n-------\n\nWe now register a content provider named 'resources'. It will be a\nResourcesManager. An ResourcesManager is a component\ndedicated in rendering ResourceViewlets::\n\n  >>> from megrok.resourceviewlet import ResourcesManager\n\n  >>> class Resources(ResourcesManager):\n  ...   viewlet.context(Interface)\n \n  >>> grok.testing.grok_component('resources', Resources)\n  True\n\n\nViewlet\n-------\n\nNow, we register a ResourceViewlet, including our resource. The\ndeclaration is very straightforward::\n\n  >>> from megrok.resourceviewlet import ResourceViewlet\n\n  >>> class SomeViewlet(ResourceViewlet):\n  ...   viewlet.context(Interface)\n  ...   resources = [Thing]\n\n  >>> grok.testing.grok_component('viewlet', SomeViewlet)\n  True\n\nBy default, a ResourceViewlet is registered for an instance of\nResourcesManager. Most of the time, a page contains only one of\nthese content providers. If it's not the case, make sure to provide\nyour own `viewletmanager` directive value.\n\n\nRendering\n=========\n\nRendering our page should render the ResourcesManager and\ntherefore, include our resource::\n\n  >>> browser.open('http://localhost/@@index')\n  >>> print browser.contents\n  <html><head>\n    <script type=\"text/javascript\"\n     src=\"http://localhost/fanstatic/test_library/thing.js\"></script>\n  </head></html>\n\nIt works ! Enjoy.\n\n\nChangelog\n=========\n\n0.2 (2011-01-18)\n----------------\n\n* ``megrok.resourceviewlet`` now works and depends on ``fanstatic``.\n* Dependencies has been greatly reduced.\n\n0.1 (2009-12-24)\n----------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/megrok.resourceviewlet", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/megrok.resourceviewlet", "keywords": "Grok resources fanstatic", "license": "ZPL 2.1", "maintainer": null, "maintainer_email": null, "name": "megrok.resourceviewlet", "package_url": "https://pypi.org/project/megrok.resourceviewlet/", "platform": "Any", "project_url": "https://pypi.org/project/megrok.resourceviewlet/", "project_urls": {"Download": "http://pypi.python.org/pypi/megrok.resourceviewlet", "Homepage": "http://pypi.python.org/pypi/megrok.resourceviewlet"}, "release_url": "https://pypi.org/project/megrok.resourceviewlet/0.2/", "requires_dist": null, "requires_python": null, "summary": "Grok components to include resources.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><cite>megrok.resourceviewlet</cite> is a package meant to include resources\nusing layer, context and view discriminations.</p>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Let\u2019s import and init the necessary work environment:</p>\n<pre>&gt;&gt;&gt; import grokcore.component as grok\n&gt;&gt;&gt; from grokcore import view, viewlet\n&gt;&gt;&gt; from zope.app.wsgi.testlayer import Browser\n\n&gt;&gt;&gt; browser = Browser()\n&gt;&gt;&gt; browser.handleErrors = False\n</pre>\n</div>\n<div id=\"library\">\n<h2>Library</h2>\n<p>We first declare a resource. We\u2019ll include it in our page:</p>\n<pre>&gt;&gt;&gt; from fanstatic import Resource, Library\n&gt;&gt;&gt; myLibrary = Library('test_library', 'ftests/resources')\n&gt;&gt;&gt; Thing = Resource(myLibrary, 'thing.js')\n</pre>\n<p>This step is done by an entry point. For the testing, we do it by hand:</p>\n<pre>&gt;&gt;&gt; from zope.fanstatic.zcml import create_factory\n&gt;&gt;&gt; from zope.component import getGlobalSiteManager\n&gt;&gt;&gt; from zope.publisher.interfaces.browser import IBrowserRequest\n&gt;&gt;&gt; from zope.interface import Interface\n\n&gt;&gt;&gt; resource_factory = create_factory(myLibrary)\n&gt;&gt;&gt; getGlobalSiteManager().registerAdapter(\n...      resource_factory, (IBrowserRequest,), Interface, myLibrary.name)\n</pre>\n</div>\n<div id=\"components\">\n<h2>Components</h2>\n<p>To demonstrate our resource viewlet, we first need a page to\nrender. This page contains a content provider named \u2018resources\u2019:</p>\n<pre>&gt;&gt;&gt; from zope.interface import Interface\n\n&gt;&gt;&gt; class Index(view.View):\n...   view.require(\"zope.Public\")\n...   view.context(Interface)\n...\n...   template = view.PageTemplate(\"\"\"&lt;html&gt;&lt;head&gt;\n...     &lt;tal:resources replace='provider:resources' /&gt;\n...   &lt;/head&gt;&lt;/html&gt;\"\"\")\n\n&gt;&gt;&gt; grok.testing.grok_component('index', Index)\nTrue\n</pre>\n<div id=\"manager\">\n<h3>Manager</h3>\n<p>We now register a content provider named \u2018resources\u2019. It will be a\nResourcesManager. An ResourcesManager is a component\ndedicated in rendering ResourceViewlets:</p>\n<pre>&gt;&gt;&gt; from megrok.resourceviewlet import ResourcesManager\n\n&gt;&gt;&gt; class Resources(ResourcesManager):\n...   viewlet.context(Interface)\n\n&gt;&gt;&gt; grok.testing.grok_component('resources', Resources)\nTrue\n</pre>\n</div>\n<div id=\"viewlet\">\n<h3>Viewlet</h3>\n<p>Now, we register a ResourceViewlet, including our resource. The\ndeclaration is very straightforward:</p>\n<pre>&gt;&gt;&gt; from megrok.resourceviewlet import ResourceViewlet\n\n&gt;&gt;&gt; class SomeViewlet(ResourceViewlet):\n...   viewlet.context(Interface)\n...   resources = [Thing]\n\n&gt;&gt;&gt; grok.testing.grok_component('viewlet', SomeViewlet)\nTrue\n</pre>\n<p>By default, a ResourceViewlet is registered for an instance of\nResourcesManager. Most of the time, a page contains only one of\nthese content providers. If it\u2019s not the case, make sure to provide\nyour own <cite>viewletmanager</cite> directive value.</p>\n</div>\n</div>\n<div id=\"rendering\">\n<h2>Rendering</h2>\n<p>Rendering our page should render the ResourcesManager and\ntherefore, include our resource:</p>\n<pre>&gt;&gt;&gt; browser.open('http://localhost/@@index')\n&gt;&gt;&gt; print browser.contents\n&lt;html&gt;&lt;head&gt;\n  &lt;script type=\"text/javascript\"\n   src=\"http://localhost/fanstatic/test_library/thing.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;&lt;/html&gt;\n</pre>\n<p>It works ! Enjoy.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.2 (2011-01-18)</h3>\n<ul>\n<li><tt>megrok.resourceviewlet</tt> now works and depends on <tt>fanstatic</tt>.</li>\n<li>Dependencies has been greatly reduced.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1 (2009-12-24)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 794654, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d6e1af81f79255575b5e11fe0d9d2ad3", "sha256": "2263b79209b2b452770abd894d1c1fac15716e831bed785c1ab418429be2b6fb"}, "downloads": -1, "filename": "megrok.resourceviewlet-0.1.tar.gz", "has_sig": false, "md5_digest": "d6e1af81f79255575b5e11fe0d9d2ad3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5527, "upload_time": "2009-12-24T16:06:09", "upload_time_iso_8601": "2009-12-24T16:06:09.493412Z", "url": "https://files.pythonhosted.org/packages/eb/55/eef998ba12d9a82d3f3f2000e68ebb325946dc3dff9e14d5890d7537a962/megrok.resourceviewlet-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "fe77fa2746a1c3e236b5baa26e9783d7", "sha256": "bad77f62df07eadcb00989770d19bb6d56e071547e79f5bc51d8f1a115634a4d"}, "downloads": -1, "filename": "megrok.resourceviewlet-0.2.tar.gz", "has_sig": false, "md5_digest": "fe77fa2746a1c3e236b5baa26e9783d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7176, "upload_time": "2011-01-18T19:23:51", "upload_time_iso_8601": "2011-01-18T19:23:51.649584Z", "url": "https://files.pythonhosted.org/packages/93/b6/9eb562ba1579afffab9bc45ff1098b1dfdf105c46bb5343df2482e414dd1/megrok.resourceviewlet-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe77fa2746a1c3e236b5baa26e9783d7", "sha256": "bad77f62df07eadcb00989770d19bb6d56e071547e79f5bc51d8f1a115634a4d"}, "downloads": -1, "filename": "megrok.resourceviewlet-0.2.tar.gz", "has_sig": false, "md5_digest": "fe77fa2746a1c3e236b5baa26e9783d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7176, "upload_time": "2011-01-18T19:23:51", "upload_time_iso_8601": "2011-01-18T19:23:51.649584Z", "url": "https://files.pythonhosted.org/packages/93/b6/9eb562ba1579afffab9bc45ff1098b1dfdf105c46bb5343df2482e414dd1/megrok.resourceviewlet-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:28 2020"}