{"info": {"author": "Aaron Griffith", "author_email": "aargri@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "mif\n---\n\n[![PyPI](https://img.shields.io/pypi/v/mif)](https://pypi.org/project/mif/)\n[![Travis CI](https://img.shields.io/travis/com/agrif/mif/master)](https://travis-ci.com/agrif/mif)\n[![Read the Docs](https://img.shields.io/readthedocs/mif/latest)][docs]\n\n [docs]: https://mif.readthedocs.io/en/latest/\n\n`mif` is a Python module to read and write [Memory Initialization\nFiles][mif], used by Quartus to interact with memory blocks on Intel\nFPGAs. They are similar to [Intel HEX][hex] files, except they support\narbitrary memory widths as first-class citizens.\n\n [mif]: https://www.intel.com/content/www/us/en/programmable/quartushelp/13.0/mergedProjects/reference/glossary/def_mif.htm\n [hex]: https://en.wikipedia.org/wiki/Intel_HEX\n\n## Installation\n\nInstall via `pip`:\n\n```python\npip install mif\n```\n\n## Basic Use\n\nUse with `load` / `loads` and `dump` / `dumps`, similar to the `json` module:\n\n```python\nwith open('memory.mif') as f:\n    mem = mif.load(f)\n\nprint(mif.dumps(mem))\n```\n\nThe resulting `mem` is a numpy array of unpacked bits, where the first\ndimension is the address in memory, and the second are the bits in\nlittle-endian order. For example, to access the least significant bit\nat address `0x12`:\n\n```python\nmem[0x12][0]\n```\n\nFor more detailed information, please [read the documentation][docs].\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/agrif/mif/", "keywords": "memory mif quartus", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mif", "package_url": "https://pypi.org/project/mif/", "platform": "any", "project_url": "https://pypi.org/project/mif/", "project_urls": {"Documentation": "https://mif.readthedocs.io/en/latest/", "Homepage": "https://github.com/agrif/mif/", "Source": "https://github.com/agrif/mif/"}, "release_url": "https://pypi.org/project/mif/0.4/", "requires_dist": ["numpy (>=1.17.0)", "lark-parser (>=0.8.0)", "mkdocs (>=1.0) ; extra == 'docs'", "mkautodoc (>=0.1.0) ; extra == 'docs'"], "requires_python": ">=3.5", "summary": "reading and writing MIF files", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>mif</h2>\n<p><a href=\"https://pypi.org/project/mif/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13646115765e35a085f420419bcb6976ec335b3b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6966\"></a>\n<a href=\"https://travis-ci.com/agrif/mif\" rel=\"nofollow\"><img alt=\"Travis CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f48e0629e6bd0fec43441f9f14fc22d048267300/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f61677269662f6d69662f6d6173746572\"></a>\n<a href=\"https://mif.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"Read the Docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12ec278cd9f29a1d784d9e3d37c5ea896b226314/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f6d69662f6c6174657374\"></a></p>\n<p><code>mif</code> is a Python module to read and write <a href=\"https://www.intel.com/content/www/us/en/programmable/quartushelp/13.0/mergedProjects/reference/glossary/def_mif.htm\" rel=\"nofollow\">Memory Initialization\nFiles</a>, used by Quartus to interact with memory blocks on Intel\nFPGAs. They are similar to <a href=\"https://en.wikipedia.org/wiki/Intel_HEX\" rel=\"nofollow\">Intel HEX</a> files, except they support\narbitrary memory widths as first-class citizens.</p>\n<h2>Installation</h2>\n<p>Install via <code>pip</code>:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">mif</span>\n</pre>\n<h2>Basic Use</h2>\n<p>Use with <code>load</code> / <code>loads</code> and <code>dump</code> / <code>dumps</code>, similar to the <code>json</code> module:</p>\n<pre><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'memory.mif'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">mem</span> <span class=\"o\">=</span> <span class=\"n\">mif</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mif</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">mem</span><span class=\"p\">))</span>\n</pre>\n<p>The resulting <code>mem</code> is a numpy array of unpacked bits, where the first\ndimension is the address in memory, and the second are the bits in\nlittle-endian order. For example, to access the least significant bit\nat address <code>0x12</code>:</p>\n<pre><span class=\"n\">mem</span><span class=\"p\">[</span><span class=\"mh\">0x12</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<p>For more detailed information, please <a href=\"https://mif.readthedocs.io/en/latest/\" rel=\"nofollow\">read the documentation</a>.</p>\n\n          </div>"}, "last_serial": 6670396, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fc0f0220f5c843c8b8cc9a0458d52b90", "sha256": "127e2fe6b4b49f94f0b2f59e27620b4ef06107c568ae2ab21367351cb71dca07"}, "downloads": -1, "filename": "mif-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fc0f0220f5c843c8b8cc9a0458d52b90", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5132, "upload_time": "2020-02-06T23:44:56", "upload_time_iso_8601": "2020-02-06T23:44:56.508054Z", "url": "https://files.pythonhosted.org/packages/be/92/22197d056fd0f6d20a8f526c084dc81289cc28d3cabad7106eda313d6866/mif-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4f7990b5b6d04ab01524468cd9b8b16", "sha256": "f73ad5907fbead4a104a32ab796a8d59b1904462f9e8b27c07615cd9e1fa1b76"}, "downloads": -1, "filename": "mif-0.1.tar.gz", "has_sig": false, "md5_digest": "b4f7990b5b6d04ab01524468cd9b8b16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6234, "upload_time": "2020-02-06T23:44:53", "upload_time_iso_8601": "2020-02-06T23:44:53.784667Z", "url": "https://files.pythonhosted.org/packages/5b/2e/05ea9d469120cf33c39eaf5465adf5773e4ed3a8438da65f9ce6e87baee9/mif-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d96e391be9d809ea1187b49df283e632", "sha256": "45dc82b96f573efe8fd5b360988f3cac884b925eaa07a9caf7a9b37133666d3c"}, "downloads": -1, "filename": "mif-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d96e391be9d809ea1187b49df283e632", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 5917, "upload_time": "2020-02-07T00:08:53", "upload_time_iso_8601": "2020-02-07T00:08:53.672029Z", "url": "https://files.pythonhosted.org/packages/fc/f2/8842d475468c021aa258fe13ff78708130bbbaf87c88b4785fd6edc64e54/mif-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51bdd23b376157f70e482aae3c3b4c7e", "sha256": "f2b88936cdf4e9108fecf3e8229abc6f71d8a7e08e44d841a056229bee5b980b"}, "downloads": -1, "filename": "mif-0.2.tar.gz", "has_sig": false, "md5_digest": "51bdd23b376157f70e482aae3c3b4c7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 6241, "upload_time": "2020-02-07T00:08:55", "upload_time_iso_8601": "2020-02-07T00:08:55.106372Z", "url": "https://files.pythonhosted.org/packages/55/58/f8e6813e234f9d7aad22ce48d125150d34506189772f40cc4809c5cb167a/mif-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6e5ddba1b9ec81352d0dae61c2f911c9", "sha256": "845b0a74388d3187c3bc3feea72615410f699a842b1fd70e29e15ad8e41fdede"}, "downloads": -1, "filename": "mif-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6e5ddba1b9ec81352d0dae61c2f911c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 5944, "upload_time": "2020-02-11T20:38:25", "upload_time_iso_8601": "2020-02-11T20:38:25.457126Z", "url": "https://files.pythonhosted.org/packages/18/0b/ee4e950d8133e3961351957760bc89e98bd804cc4c6b66749438b55e2925/mif-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36b9c1d39f0746ce6c406da00750071e", "sha256": "2100c5f84df44e1257287c90626ff3c915e161a43ed84df82aa18f3b97607775"}, "downloads": -1, "filename": "mif-0.3.tar.gz", "has_sig": false, "md5_digest": "36b9c1d39f0746ce6c406da00750071e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 6424, "upload_time": "2020-02-11T20:38:26", "upload_time_iso_8601": "2020-02-11T20:38:26.427222Z", "url": "https://files.pythonhosted.org/packages/66/75/e9e49ed4fb7e55e025893e2853d9d327690cecba35006f32dd38463f8f1b/mif-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "0b592fad0654a370952ee1e0c431ba7e", "sha256": "66fd66b4dc4cf4e35df90d49cb8d7f9a0087ea21b9ab2a15b0943236b35039b6"}, "downloads": -1, "filename": "mif-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0b592fad0654a370952ee1e0c431ba7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6718, "upload_time": "2020-02-20T20:22:34", "upload_time_iso_8601": "2020-02-20T20:22:34.936244Z", "url": "https://files.pythonhosted.org/packages/95/6d/58be0b5c04a629024c50d2a7bd5531ddac1ae3ea06cc2c2aa6993119f471/mif-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9a71b096b0398d52333029de60b7241", "sha256": "954876ffeea34ccb9d4b66fa8f088562097c4004d109b61e4ce84257a21b1f51"}, "downloads": -1, "filename": "mif-0.4.tar.gz", "has_sig": false, "md5_digest": "d9a71b096b0398d52333029de60b7241", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8360, "upload_time": "2020-02-20T20:22:36", "upload_time_iso_8601": "2020-02-20T20:22:36.386874Z", "url": "https://files.pythonhosted.org/packages/fb/b2/33689ee1c1159a10267cc232282fb9b2cefa23a44e2f92a787e1239a4241/mif-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b592fad0654a370952ee1e0c431ba7e", "sha256": "66fd66b4dc4cf4e35df90d49cb8d7f9a0087ea21b9ab2a15b0943236b35039b6"}, "downloads": -1, "filename": "mif-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0b592fad0654a370952ee1e0c431ba7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6718, "upload_time": "2020-02-20T20:22:34", "upload_time_iso_8601": "2020-02-20T20:22:34.936244Z", "url": "https://files.pythonhosted.org/packages/95/6d/58be0b5c04a629024c50d2a7bd5531ddac1ae3ea06cc2c2aa6993119f471/mif-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9a71b096b0398d52333029de60b7241", "sha256": "954876ffeea34ccb9d4b66fa8f088562097c4004d109b61e4ce84257a21b1f51"}, "downloads": -1, "filename": "mif-0.4.tar.gz", "has_sig": false, "md5_digest": "d9a71b096b0398d52333029de60b7241", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8360, "upload_time": "2020-02-20T20:22:36", "upload_time_iso_8601": "2020-02-20T20:22:36.386874Z", "url": "https://files.pythonhosted.org/packages/fb/b2/33689ee1c1159a10267cc232282fb9b2cefa23a44e2f92a787e1239a4241/mif-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:48 2020"}