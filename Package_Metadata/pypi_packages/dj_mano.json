{"info": {"author": "R\u00e9my Sanchez", "author_email": "remy.sanchez@activkonnect.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: Other/Proprietary License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "dj_mano\n=======\n\nMaterialized Annotations for Django Models. Typical use-case is to keep track of the number of\ncomments in a post, or the number of contributions a user has made.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n   pip install dj_mano\n\nUsage\n-----\n\nIn-code\n~~~~~~~\n\nUsing dj_mano is pretty straightforward, you just create a field and give it the annotation you\nwant it to hold.\n\nIf you want, you can apply some filter to the annotation you're doing, like to count only positive\nreviews by example. In this case, you can provide a function that will return the queryset that\nwill be annotated. Beware, the queryset must be \"starting\" from the object holding the materialized\nannotation field.\n\nModels\n......\n\n.. code-block:: python\n\n   from django.db import models\n   from dj_mano import MaterializedAnnotationIntegerField\n\n\n   def swag_model_c():\n       return ModelA.objects.filter(models_b__models_c__has_swag=True)\n\n\n   class ModelA(models.Model):\n       count_b = MaterializedAnnotationIntegerField(models.Count('models_b'))\n       count_c = MaterializedAnnotationIntegerField(models.Count('models_b__models_c'))\n       count_swag = MaterializedAnnotationIntegerField(\n           models.Count('models_b__models_c'),\n           swag_model_c\n       )\n\n\n   class ModelB(models.Model):\n       model_a = models.ForeignKey('ModelA', related_name='models_b')\n\n\n   class ModelC(models.Model):\n       model_b = models.ForeignKey('ModelB', related_name='models_c')\n       has_swag = models.BooleanField(default=False)\n\n\nurls.py\n.......\n\n.. code-block:: python\n\n   from django.conf.urls import patterns\n   from dj_mano import hook_it_all\n\n   hook_it_all()\n\n   urlpatterns = patterns('',\n       ...\n   )\n\nCommand\n~~~~~~~\n\nThere is a command that will simply synchronize all fields to their actual value.\n\n**Note**: if you want to use this command, you have to put `dj_mano` in your `INSTALLED_APPS`.\n\n.. code-block:: bash\n\n   ./manage.py dj_mano_sync\n\nLicence\n-------\n\nThis library is licensed under the terms of the WTFPL. Please see the attached LICENSE file.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ActivKonnect/dj_mano", "keywords": null, "license": null, "maintainer": null, "maintainer_email": null, "name": "dj_mano", "package_url": "https://pypi.org/project/dj_mano/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/dj_mano/", "project_urls": {"Homepage": "https://github.com/ActivKonnect/dj_mano"}, "release_url": "https://pypi.org/project/dj_mano/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Materialized Annotations for Django Models", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Materialized Annotations for Django Models. Typical use-case is to keep track of the number of\ncomments in a post, or the number of contributions a user has made.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install dj_mano\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"in-code\">\n<h3>In-code</h3>\n<p>Using dj_mano is pretty straightforward, you just create a field and give it the annotation you\nwant it to hold.</p>\n<p>If you want, you can apply some filter to the annotation you\u2019re doing, like to count only positive\nreviews by example. In this case, you can provide a function that will return the queryset that\nwill be annotated. Beware, the queryset must be \u201cstarting\u201d from the object holding the materialized\nannotation field.</p>\n<div id=\"models\">\n<h4>Models</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dj_mano</span> <span class=\"kn\">import</span> <span class=\"n\">MaterializedAnnotationIntegerField</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">swag_model_c</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">ModelA</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">models_b__models_c__has_swag</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModelA</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">count_b</span> <span class=\"o\">=</span> <span class=\"n\">MaterializedAnnotationIntegerField</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s1\">'models_b'</span><span class=\"p\">))</span>\n    <span class=\"n\">count_c</span> <span class=\"o\">=</span> <span class=\"n\">MaterializedAnnotationIntegerField</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s1\">'models_b__models_c'</span><span class=\"p\">))</span>\n    <span class=\"n\">count_swag</span> <span class=\"o\">=</span> <span class=\"n\">MaterializedAnnotationIntegerField</span><span class=\"p\">(</span>\n        <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s1\">'models_b__models_c'</span><span class=\"p\">),</span>\n        <span class=\"n\">swag_model_c</span>\n    <span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModelB</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">model_a</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'ModelA'</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">'models_b'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ModelC</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">model_b</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'ModelB'</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">'models_c'</span><span class=\"p\">)</span>\n    <span class=\"n\">has_swag</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">BooleanField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"urls-py\">\n<h4>urls.py</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls</span> <span class=\"kn\">import</span> <span class=\"n\">patterns</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dj_mano</span> <span class=\"kn\">import</span> <span class=\"n\">hook_it_all</span>\n\n<span class=\"n\">hook_it_all</span><span class=\"p\">()</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"command\">\n<h3>Command</h3>\n<p>There is a command that will simply synchronize all fields to their actual value.</p>\n<p><strong>Note</strong>: if you want to use this command, you have to put <cite>dj_mano</cite> in your <cite>INSTALLED_APPS</cite>.</p>\n<pre>./manage.py dj_mano_sync\n</pre>\n</div>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>This library is licensed under the terms of the WTFPL. Please see the attached LICENSE file.</p>\n</div>\n\n          </div>"}, "last_serial": 1415094, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2628fcb4478bcd84737cdc4f902776ce", "sha256": "9392aa57e531278f33d6bc6791b0059b57791a311e0065fe09de179d7bfd8322"}, "downloads": -1, "filename": "dj_mano-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2628fcb4478bcd84737cdc4f902776ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3762, "upload_time": "2015-02-03T15:24:53", "upload_time_iso_8601": "2015-02-03T15:24:53.195251Z", "url": "https://files.pythonhosted.org/packages/1c/6a/2c3959cbb00ce6eb62517745b6f8556cb5296200d70ac595a5327616b9b8/dj_mano-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2192fe4ff80018d1be8c378a58037688", "sha256": "79fb4e0108eb7229464e580518bbb78e673c26507826abcf1d4bb6594e7ff10e"}, "downloads": -1, "filename": "dj_mano-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2192fe4ff80018d1be8c378a58037688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3876, "upload_time": "2015-02-03T15:46:53", "upload_time_iso_8601": "2015-02-03T15:46:53.772523Z", "url": "https://files.pythonhosted.org/packages/ad/be/646b1a5e816179c95bcd6887d3fab5a8922d31cf98d7de69387960f4e90b/dj_mano-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ed557c785efa7f661caecbe55d5be599", "sha256": "0e28b568434a7fdb292b2b859a944f68bb39fe86f80e3993b1ded9e4cdde03ab"}, "downloads": -1, "filename": "dj_mano-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ed557c785efa7f661caecbe55d5be599", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4242, "upload_time": "2015-02-03T18:00:01", "upload_time_iso_8601": "2015-02-03T18:00:01.666131Z", "url": "https://files.pythonhosted.org/packages/ef/2e/f03ab9f348d51c99b2056ee96e96d42508ece28b91345e95f55c315883e3/dj_mano-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e637ce16b795a2214305dcb83c4508d8", "sha256": "06b4b77bfb24ee7d40561c65ccd351f9c66f726d7f194c856fda98b6a13b71a8"}, "downloads": -1, "filename": "dj_mano-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e637ce16b795a2214305dcb83c4508d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5012, "upload_time": "2015-02-08T13:39:23", "upload_time_iso_8601": "2015-02-08T13:39:23.016127Z", "url": "https://files.pythonhosted.org/packages/4d/20/f67fc8623152d9b35152098ffc7a9f5fad05c927cc18f5069a4f18339ba1/dj_mano-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "5062937bc40f67203f58051f77edafa2", "sha256": "64031bffb671716f15b0507ad584d89ab77cd7c53adc0e70e8ed9a1cbf6017d4"}, "downloads": -1, "filename": "dj_mano-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5062937bc40f67203f58051f77edafa2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5072, "upload_time": "2015-02-08T16:09:00", "upload_time_iso_8601": "2015-02-08T16:09:00.605064Z", "url": "https://files.pythonhosted.org/packages/98/86/6d61fd143ef70679de174d2a9cd190dd2d0b500c182b53206dac93603097/dj_mano-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5062937bc40f67203f58051f77edafa2", "sha256": "64031bffb671716f15b0507ad584d89ab77cd7c53adc0e70e8ed9a1cbf6017d4"}, "downloads": -1, "filename": "dj_mano-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5062937bc40f67203f58051f77edafa2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5072, "upload_time": "2015-02-08T16:09:00", "upload_time_iso_8601": "2015-02-08T16:09:00.605064Z", "url": "https://files.pythonhosted.org/packages/98/86/6d61fd143ef70679de174d2a9cd190dd2d0b500c182b53206dac93603097/dj_mano-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:32 2020"}