{"info": {"author": "Felix Choi", "author_email": "cjng96@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Features\n\n- Can move to the project folder\n- git command helper\n- fetch, merge, status for multiple project\n- CUI for git add/reset, commit\n- CUI for git push from commit message\n- CUI for find\n- CUI for grep\n\n# Advantage\n\n- The convenient CUI interface based on urwid(CUI)\n- Can manage multiple git repositories conveniently\n- Can do commit with seeing modification for commit msg under CUI\n- Can push conveniently with commit message\n\n# How to install\n\n## Environment setup\n\n\\*\\* if you have installed pip3 and virtualenv already, skip it.\n\n\\$ sudo apt install python3 python3-pip git\n\\$ sudo pip3 install virtualenv\n\n## Install\n\\$ curl -L https://github.com/inertry/synapbookCommander/raw/stable/install.sh | bash -\n\nor if you clone the repository already,\n$ echo \". $(pwd)/bash-script.sh\" >> ~/.bashrc\n\n# How to use\n\nType 'dc'\n\n## main ui\n\n- `j/k` - move focus\n- `u` - move upper folder\n- `h/enter` - enter the folder\n- `E` - edit the file\n\n- `n` - Mark current item as trivial\n- `m` - Mark current item as important\n\n- `f` - filtering current folder items\n- `s` - running shell command with \\$ for current selected file name\n\n- `/` - command mode\n- reg - Register current folder\n- find/ff - Running find command with CUI result\n  ex> ff \\*\\*.py\n- grep/gg - Running grep command with CUI result\n  ex> gg Metric\n\n- `R` - Register/unregister this selected folder\n- `L` - Show the list of repository folders\n- `C` - Show commit dialog for current repo\n\n### workspace\n\n- `Alt+Right/Left` - Add or remove the folder in Workspace\n- `Alt+Up/Dowm` - Move workspace between folder list\n\n## Commit helper(C key)\n\n- `A` - git add current file\n- `P` - prompty for git add -p command\n- `R` - reset current staged file\n- `D` - drop modification\n- `[`/`]` - move next/previous file\n- `J`/`K` - scroll down/up - you can use arrow key too\n- `C` - popup commit dialog\n- `F4`/`Q` - quit the program\n\n### on commit dialog,\n\n\\*\\* you can see all staged modification for input commit message\n\n- up/down - scroll current file's content\n- f9/f10 - prev/next file to see modification\n\n\\*\\* then input commit message and then enter to do commit\n\n## Register folder list(L key)\n\n- `P` - pull --rebase all repo\n- `Enter` - move to the selected repo\n\n# Commandline commends\n\n\\$ dcf -name \"\\*\\*.py\"\n\n\\$ dcg \"printf\"\n\n## update all project repositories\n\n\\$ dc update\n\n\\*\\* all projects that regsitered as repo are updated(git fetch + rebase to remote tracking branch + print status)\n\n\\*\\* `update` command is comprised of `dc fetch` + `dc merge` + `dc st(status)`\n\n## print all project's status\n\n\\$ dc st\n\n\\*\\* you can combinate several command as follows,\n\n\\$ dc fetch st\n\n\\*\\* you can print current folder or certain repo's status as well\n\n\\$ dc update .\n\n\\$ dc update plus\n\n## git CUI helper for add/reset, commit\n\n\\$ dc ci\n\n\\*\\* you can use the following keys\n\n## git push\n\n\\*\\* you can conveniently push commits just specify target branch name\n\n\\*\\* push command always check tracking branch firstly than ask you to rebase onto.\n\n\\$ dc push\n\n\\*\\* just type target branch you want to push to\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cjng96/sharpenCommander", "keywords": "git management,folder management", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "sharpen-commander", "package_url": "https://pypi.org/project/sharpen-commander/", "platform": "Posix; MacOS X; Windows", "project_url": "https://pypi.org/project/sharpen-commander/", "project_urls": {"Homepage": "https://github.com/cjng96/sharpenCommander"}, "release_url": "https://pypi.org/project/sharpen-commander/0.4.0/", "requires_dist": ["click", "urwid", "PyYAML"], "requires_python": ">=3", "summary": "Console based Moving to folders. GIT repo management tool.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Features</h1>\n<ul>\n<li>Can move to the project folder</li>\n<li>git command helper</li>\n<li>fetch, merge, status for multiple project</li>\n<li>CUI for git add/reset, commit</li>\n<li>CUI for git push from commit message</li>\n<li>CUI for find</li>\n<li>CUI for grep</li>\n</ul>\n<h1>Advantage</h1>\n<ul>\n<li>The convenient CUI interface based on urwid(CUI)</li>\n<li>Can manage multiple git repositories conveniently</li>\n<li>Can do commit with seeing modification for commit msg under CUI</li>\n<li>Can push conveniently with commit message</li>\n</ul>\n<h1>How to install</h1>\n<h2>Environment setup</h2>\n<p>** if you have installed pip3 and virtualenv already, skip it.</p>\n<p>$ sudo apt install python3 python3-pip git\n$ sudo pip3 install virtualenv</p>\n<h2>Install</h2>\n<p>$ curl -L <a href=\"https://github.com/inertry/synapbookCommander/raw/stable/install.sh\" rel=\"nofollow\">https://github.com/inertry/synapbookCommander/raw/stable/install.sh</a> | bash -</p>\n<p>or if you clone the repository already,\n$ echo \". $(pwd)/bash-script.sh\" &gt;&gt; ~/.bashrc</p>\n<h1>How to use</h1>\n<p>Type 'dc'</p>\n<h2>main ui</h2>\n<ul>\n<li>\n<p><code>j/k</code> - move focus</p>\n</li>\n<li>\n<p><code>u</code> - move upper folder</p>\n</li>\n<li>\n<p><code>h/enter</code> - enter the folder</p>\n</li>\n<li>\n<p><code>E</code> - edit the file</p>\n</li>\n<li>\n<p><code>n</code> - Mark current item as trivial</p>\n</li>\n<li>\n<p><code>m</code> - Mark current item as important</p>\n</li>\n<li>\n<p><code>f</code> - filtering current folder items</p>\n</li>\n<li>\n<p><code>s</code> - running shell command with $ for current selected file name</p>\n</li>\n<li>\n<p><code>/</code> - command mode</p>\n</li>\n<li>\n<p>reg - Register current folder</p>\n</li>\n<li>\n<p>find/ff - Running find command with CUI result\nex&gt; ff **.py</p>\n</li>\n<li>\n<p>grep/gg - Running grep command with CUI result\nex&gt; gg Metric</p>\n</li>\n<li>\n<p><code>R</code> - Register/unregister this selected folder</p>\n</li>\n<li>\n<p><code>L</code> - Show the list of repository folders</p>\n</li>\n<li>\n<p><code>C</code> - Show commit dialog for current repo</p>\n</li>\n</ul>\n<h3>workspace</h3>\n<ul>\n<li><code>Alt+Right/Left</code> - Add or remove the folder in Workspace</li>\n<li><code>Alt+Up/Dowm</code> - Move workspace between folder list</li>\n</ul>\n<h2>Commit helper(C key)</h2>\n<ul>\n<li><code>A</code> - git add current file</li>\n<li><code>P</code> - prompty for git add -p command</li>\n<li><code>R</code> - reset current staged file</li>\n<li><code>D</code> - drop modification</li>\n<li><code>[</code>/<code>]</code> - move next/previous file</li>\n<li><code>J</code>/<code>K</code> - scroll down/up - you can use arrow key too</li>\n<li><code>C</code> - popup commit dialog</li>\n<li><code>F4</code>/<code>Q</code> - quit the program</li>\n</ul>\n<h3>on commit dialog,</h3>\n<p>** you can see all staged modification for input commit message</p>\n<ul>\n<li>up/down - scroll current file's content</li>\n<li>f9/f10 - prev/next file to see modification</li>\n</ul>\n<p>** then input commit message and then enter to do commit</p>\n<h2>Register folder list(L key)</h2>\n<ul>\n<li><code>P</code> - pull --rebase all repo</li>\n<li><code>Enter</code> - move to the selected repo</li>\n</ul>\n<h1>Commandline commends</h1>\n<p>$ dcf -name \"**.py\"</p>\n<p>$ dcg \"printf\"</p>\n<h2>update all project repositories</h2>\n<p>$ dc update</p>\n<p>** all projects that regsitered as repo are updated(git fetch + rebase to remote tracking branch + print status)</p>\n<p>** <code>update</code> command is comprised of <code>dc fetch</code> + <code>dc merge</code> + <code>dc st(status)</code></p>\n<h2>print all project's status</h2>\n<p>$ dc st</p>\n<p>** you can combinate several command as follows,</p>\n<p>$ dc fetch st</p>\n<p>** you can print current folder or certain repo's status as well</p>\n<p>$ dc update .</p>\n<p>$ dc update plus</p>\n<h2>git CUI helper for add/reset, commit</h2>\n<p>$ dc ci</p>\n<p>** you can use the following keys</p>\n<h2>git push</h2>\n<p>** you can conveniently push commits just specify target branch name</p>\n<p>** push command always check tracking branch firstly than ask you to rebase onto.</p>\n<p>$ dc push</p>\n<p>** just type target branch you want to push to</p>\n\n          </div>"}, "last_serial": 5849519, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6a55fbf815d04bb91b8b05308d3b14a3", "sha256": "88a110871f0bb729234c539db64546b3b9a67aae0506c67d97a66049a20826de"}, "downloads": -1, "filename": "sharpen_commander-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a55fbf815d04bb91b8b05308d3b14a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 69857, "upload_time": "2019-06-07T04:15:48", "upload_time_iso_8601": "2019-06-07T04:15:48.953369Z", "url": "https://files.pythonhosted.org/packages/56/12/3e0ae68bbbced326cc629c7bc0b8c8a39edeb17864ac493fe78df396f7f4/sharpen_commander-0.1.0-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5e7bfab4e24b4052c1b17e55114dc093", "sha256": "213e27a29688e83f313f97a957d5b5168a11f0d10f1867b792ad5ff10e321c7f"}, "downloads": -1, "filename": "sharpen_commander-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5e7bfab4e24b4052c1b17e55114dc093", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 41287, "upload_time": "2019-06-07T06:53:02", "upload_time_iso_8601": "2019-06-07T06:53:02.827576Z", "url": "https://files.pythonhosted.org/packages/a8/f3/39414ce7c1c9c41ac892146a15a46f669c1fd9d71562b4555daaaa178a0f/sharpen_commander-0.2.0-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "99577aed1e87d695aab6c5a8315a43ef", "sha256": "7da64efea19b6f9e487b0c7b46f90f639b9f46d267fe2306ea2b27d778bd2a57"}, "downloads": -1, "filename": "sharpen_commander-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "99577aed1e87d695aab6c5a8315a43ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 41294, "upload_time": "2019-06-07T09:04:30", "upload_time_iso_8601": "2019-06-07T09:04:30.358493Z", "url": "https://files.pythonhosted.org/packages/66/dd/e61092b154440a71182f6eac077b79c40f3f866cc34c7e80816ce04fd6ac/sharpen_commander-0.3.0-py3-none-any.whl", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6a954127c50d0dc6c2dffd7a771f01d8", "sha256": "962d7f709c5d8a686d1db478fbdbb82e9a98b0bf6373f00387033edd97303c00"}, "downloads": -1, "filename": "sharpen_commander-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6a954127c50d0dc6c2dffd7a771f01d8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 41259, "upload_time": "2019-06-09T05:58:21", "upload_time_iso_8601": "2019-06-09T05:58:21.414181Z", "url": "https://files.pythonhosted.org/packages/f5/87/6aa4adb916f034acdb7a09d8d0042e98fb5a7c442ac8c68b3c96782fd7bb/sharpen_commander-0.3.1-py3-none-any.whl", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "4728d534ac6031e31e99648c8fbe5f84", "sha256": "7a0ddddafb00d33b065bb9efd8c7da0a43f5c25c49339a54461114222d52e153"}, "downloads": -1, "filename": "sharpen_commander-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4728d534ac6031e31e99648c8fbe5f84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 41252, "upload_time": "2019-06-10T05:20:12", "upload_time_iso_8601": "2019-06-10T05:20:12.991554Z", "url": "https://files.pythonhosted.org/packages/d8/ea/9c6e016bd574313e96024524c650f498da6ed15aa8fd8c80479f65f5da6d/sharpen_commander-0.3.2-py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "3bea61c9c15adb66ba9b026199984150", "sha256": "8f49728db8f9779e0353f98f1fca989fd92dcda46db019e7b4bfce1c7b38cbd3"}, "downloads": -1, "filename": "sharpen_commander-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3bea61c9c15adb66ba9b026199984150", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 48767, "upload_time": "2019-09-18T11:40:19", "upload_time_iso_8601": "2019-09-18T11:40:19.984113Z", "url": "https://files.pythonhosted.org/packages/de/03/b9b88758680b71925ea72e12f8b49a17eb4fdc0a2c7345bb6cc80db7e8d5/sharpen_commander-0.4.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3bea61c9c15adb66ba9b026199984150", "sha256": "8f49728db8f9779e0353f98f1fca989fd92dcda46db019e7b4bfce1c7b38cbd3"}, "downloads": -1, "filename": "sharpen_commander-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3bea61c9c15adb66ba9b026199984150", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 48767, "upload_time": "2019-09-18T11:40:19", "upload_time_iso_8601": "2019-09-18T11:40:19.984113Z", "url": "https://files.pythonhosted.org/packages/de/03/b9b88758680b71925ea72e12f8b49a17eb4fdc0a2c7345bb6cc80db7e8d5/sharpen_commander-0.4.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:13:35 2020"}