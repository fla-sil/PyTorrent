{"info": {"author": "Cisco Security", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Gitter Chat](https://img.shields.io/badge/gitter-join%20chat-brightgreen.svg)](https://gitter.im/CiscoSecurity/Threat-Response \"Gitter Chat\")\n[![Travis CI Build Status](https://travis-ci.com/CiscoSecurity/tr-05-api-module.svg?branch=develop)](https://travis-ci.com/CiscoSecurity/tr-05-api-module)\n[![PyPi Version](https://img.shields.io/pypi/v/threatresponse.svg)](https://pypi.python.org/pypi/threatresponse)\n[![Python Versions](https://img.shields.io/pypi/pyversions/threatresponse.svg)](https://pypi.python.org/pypi/threatresponse)\n\n# Threat Response Python API Module\n\nPython API Module for Threat Response APIs\n\n## Installation\n\n* Local\n\n```bash\npip install -U .\npip show threatresponse\n```\n\n* GitHub\n\n```bash\npip install -U git+https://github.com/CiscoSecurity/tr-05-api-module.git[@branch_name_or_release_version]\npip show threatresponse\n```\n\n* PyPi\n\n```bash\npip install -U threatresponse[==release_version]\npip show threatresponse\n```\n\n## Usage\n\n```python\nfrom threatresponse import ThreatResponse\n\nclient = ThreatResponse(\n    client_id='<YOUR TR CLIENT ID>',  # required\n    client_password='<YOUR TR CLIENT PASSWORD>',  # required\n    region='<YOUR TR REGION>',  # optional\n    logger=<SOME LOGGER INSTANCE>,  # optional\n    proxy='<SOME PROXY URL>',  # optional\n)\n```\n\n- `client_id` and `client_password` credentials must be taken from an existing\nAPI client for accessing the Cisco Threat Response APIs.\nThe official documentation on how to create such a client can be found\n[here](https://visibility.amp.cisco.com/#/help/integration).\nMake sure to properly set some scopes which will grant the client\ndifferent (ideally minimum) privileges.\n- `region` must be one of: `''` or `'us'` (default), `'eu'`, `'apjc'`.\nOther regions are not supported yet.\n- `logger` must be an (already configured) instance of the built-in\n`logging.Logger` class (or one of its descendants).\n- `timeout` must be a number (`int` or `float`) meaning the default amount of\ntime (in seconds) to wait for the server to send data before giving up and\nraising an exception. Can be overwritten by explicitly specifying `timeout` on\neach call to any endpoint.\n- `proxy` must be a URL in the format: `http[s]://[username[:password]@]host[:port]`.\n\n### Concrete Usage\n\n- Inspect\n\nInspect allows to find an observable in a concrete string.\n```python\nresponse = client.inspect.inspect({'content': 'example.com'})\n```\n\n- Observe\n\nObserve returns summary for an observable.\n```python\nresponse = client.enrich.observe.observables(\n    [{'type': 'sha256', 'value': '8A32950CD96C5EF88F9DCBB66A08F59A7E8D8E5FECCDE9E115FBAA46D9AF88F9'}]\n)\n```\n\n- Deliberate\n\nDeliberate returns judgments based on added modules.\n```python\nresponse = client.enrich.deliberate.observables(\n    [{'type': 'sha256', 'value': '8A32950CD96C5EF88F9DCBB66A08F59A7E8D8E5FECCDE9E115FBAA46D9AF88F9'}]\n)\n```\n\n### Commands\n\nFor your convenience, we have made some predefined commands that you can use.\n\n- Verdicts\n\nVerdicts returns verdicts from all modules if the modules are configured. Accepts multiple observables.\n```python\nresponse = client.commands.verdict(\n    'string with observables (\"8A32950CD96C5EF88F9DCBB66A08F59A7E8D8E5FECCDE9E115FBAA46D9AF88F9, cisco.com\")'\n)\n```\n \n- Targets\n\nTargets returns all available targets if the modules are configured. Accepts multiple observables.\n```python\nresponse = client.commands.targets(\n    'string with observables (\"8A32950CD96C5EF88F9DCBB66A08F59A7E8D8E5FECCDE9E115FBAA46D9AF88F9, cisco.com\")'\n)\n```\n\n### Available Endpoints\n\nSwitch between `.private_intel` and `.global_intel` if necessary.\n\n# Actor\n    actor = client.private_intel.actor\nAvailable methods:\n  - actor.post()\n  - actor.get()\n  - actor.put()\n  - actor.delete()\n  - actor.external_id()\n  - actor.search()\n\n# Attack Pattern\n    attack_pattern = client.private_intel.attack_pattern\nAvailable methods:\n  - attack_pattern.post()\n  - attack_pattern.get()\n  - attack_pattern.put()\n  - attack_pattern.delete()\n  - attack_pattern.external_id()\n  - attack_pattern.search()\n\n# Bulk \n    bulk = client.private_intel.bulk\nAvailable methods:\n  - bulk.post()\n  - bulk.get()\n\n# Bundle \n    bundle = client.private_intel.bundle\nAvailable methods:\n  - bundle.export.post()\n  - bundle.export.get()\n  - bundle.import_.post()\n\n# Campaign\n    campaign = client.private_intel.campaign\nAvailable methods:\n  - campaign.post()\n  - campaign.get()\n  - campaign.put()\n  - campaign.delete()\n  - campaign.external_id()\n  - campaign.search()\n\n# Casebook\n    casebook = client.private_intel.casebook\nAvailable methods:\n  - casebook.post()\n  - casebook.get()\n  - casebook.put()\n  - casebook.delete()\n  - casebook.external_id()\n  - casebook.search()\n  - casebook.observables()\n  - casebook.texts()\n  - casebook.bundle()\n  - casebook.pathc()\n\n# COA\n    coa = client.private_intel.coa\nAvailable methods:\n  - coa.post()\n  - coa.get()\n  - coa.put()\n  - coa.delete()\n  - coa.external_id()\n  - coa.search()\n\n# DataTable\n    data_table = client.private_intel.data_table\nAvailable methods:\n  - data_table.post()\n  - data_table.get()\n  - data_table.delete()\n  - data_table.external_id()\n  \n# Enrich\n    enrich = client.enrich\nAvailable methods:\n  - enrich.health()\n  - enrich.deliberate.observables()\n  - enrich.observe.observables()\n  - enrich.refer.observables()\n\n# Event\n    event = client.private_intel.event\nAvailable methods:\n  - event.history()\n  - event.search()\n  - event.get()\n  - event.delete()\n  \n# Feedback\n    feedback = client.private_intel.feedback\nAvailable methods:\n  - feedback.post()\n  - feedback.get()\n  - feedback.delete()\n  - feedback.external_id()\n  - feedback.get(_id)\n\n# GraphQL\n    graph = client.private_intel.graphql\nAvailable methods:\n  - graphql.post()\n\n# Incident\n    incident = client.private_intel.incident\nAvailable methods:\n  - incident.post()\n  - incident.get()\n  - incident.put()\n  - incident.delete()\n  - incident.external_id()\n  - incident.search()\n  - incident.link()\n  - incident.status()\n  - incident.sightings.incidents()\n  - incident.patch()\n\n# Indicator\n    indicator = client.private_intel.indicator\nAvailable methods:\n  - indicator.post()\n  - indicator.get()\n  - indicator.put()\n  - indicator.delete()\n  - indicator.external_id()\n  - indicator.search()\n  - indicator.judgements.indicators()\n  - indicator.sightings.indicators()\n  \n# Inspect\n    inspect = client.inspect\nAvailable methods:\n  - inspect.inspect()\n \n# Investigation\n    investigation = client.private_intel.investigation\nAvailable methods:\n  - investigation.post()\n  - investigation.get()\n  - investigation.put()\n  - investigation.delete()\n  - investigation.external_id()\n  - investigation.search()\n\n# Judgment\n    judgment = client.private_intel.judgment\nAvailable methods:\n  - judgment.post()\n  - judgment.get()\n  - judgment.put()\n  - judgment.delete()\n  - judgment.external_id()\n  - judgment.search()\n  - judgment.judgments()\n\n# Malware\n    malware = client.private_intel.malware\nAvailable methods:\n  - malware.post()\n  - malware.get()\n  - malware.put()\n  - malware.delete()\n  - malware.external_id()\n  - malware.search()\n\n# Metrics\n    metrics = client.private_intel.metrics\nAvailable methods:\n  - metrics.get()\n\n# Properties\n    properties = client.private_intel.properties\nAvailable methods:\n  - properties.get()\n\n# Relationship\n    relationship = client.private_intel.relationship\nAvailable methods:\n  - relationship.post()\n  - relationship.get()\n  - relationship.put()\n  - relationship.delete()\n  - relationship.external_id()\n  - relationship.search()\n  \n# Response\n    response = client.response\nAvailable methods:\n  - response.respond.observables()\n  - response.respond.trigger()\n\n# Sighting\n    sighting = client.private_intel.sighting\nAvailable methods:\n  - sighting.post()\n  - sighting.get()\n  - sighting.put()\n  - sighting.delete()\n  - sighting.external_id()\n  - sighting.search()\n  - sighting.sightings()\n\n# Status\n    status = client.private_intel.status\nAvailable methods:\n  - status.get()\n\n# Tool\n    tool = client.private_intel.tool\nAvailable methods:\n  - tool.post()\n  - tool.get()\n  - tool.put()\n  - tool.delete()\n  - tool.external_id()\n  - tool.search()\n\n# Verdict\n    verdict = client.private_intel.verdict\nAvailable methods:\n  - verdict.get()\n\n# Version\n    version = client.private_intel.version\nAvailable methods:\n  - version.get()\n\n# Vulnerability\n    vulnerability = client.private_intel.vulnerability\nAvailable methods:\n  - vulnerability.post()\n  - vulnerability.get()\n  - vulnerability.put()\n  - vulnerability.delete()\n  - vulnerability.external_id()\n  - vulnerability.search()\n\n# Weakness\n    weakness = client.private_intel.weakness\nAvailable methods:\n  - weakness.post()\n  - weakness.get()\n  - weakness.put()\n  - weakness.delete()\n  - weakness.external_id()\n  - weakness.search()", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CiscoSecurity/tr-05-api-module", "keywords": "cisco,security,python,threat,response,api", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "threatresponse", "package_url": "https://pypi.org/project/threatresponse/", "platform": "", "project_url": "https://pypi.org/project/threatresponse/", "project_urls": {"Homepage": "https://github.com/CiscoSecurity/tr-05-api-module"}, "release_url": "https://pypi.org/project/threatresponse/0.7.3/", "requires_dist": null, "requires_python": ">=2.6", "summary": "Python API Module for Threat Response APIs", "version": "0.7.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://gitter.im/CiscoSecurity/Threat-Response\" rel=\"nofollow\" title=\"Gitter Chat\"><img alt=\"Gitter Chat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ac462793d894867f4bff7153791ebbdd797b286/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769747465722d6a6f696e253230636861742d627269676874677265656e2e737667\"></a>\n<a href=\"https://travis-ci.com/CiscoSecurity/tr-05-api-module\" rel=\"nofollow\"><img alt=\"Travis CI Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e3e15452d74894972f4725bdc6c956d557fcda0/68747470733a2f2f7472617669732d63692e636f6d2f436973636f53656375726974792f74722d30352d6170692d6d6f64756c652e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://pypi.python.org/pypi/threatresponse\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d0df03fb14f67f2df61c11b7fb7b6af68bdf320/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f746872656174726573706f6e73652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/threatresponse\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a85d6232ea164b4f98373b8b8437ebcb197c27f2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f746872656174726573706f6e73652e737667\"></a></p>\n<h1>Threat Response Python API Module</h1>\n<p>Python API Module for Threat Response APIs</p>\n<h2>Installation</h2>\n<ul>\n<li>Local</li>\n</ul>\n<pre>pip install -U .\npip show threatresponse\n</pre>\n<ul>\n<li>GitHub</li>\n</ul>\n<pre>pip install -U git+https://github.com/CiscoSecurity/tr-05-api-module.git<span class=\"o\">[</span>@branch_name_or_release_version<span class=\"o\">]</span>\npip show threatresponse\n</pre>\n<ul>\n<li>PyPi</li>\n</ul>\n<pre>pip install -U threatresponse<span class=\"o\">[==</span>release_version<span class=\"o\">]</span>\npip show threatresponse\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">threatresponse</span> <span class=\"kn\">import</span> <span class=\"n\">ThreatResponse</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ThreatResponse</span><span class=\"p\">(</span>\n    <span class=\"n\">client_id</span><span class=\"o\">=</span><span class=\"s1\">'&lt;YOUR TR CLIENT ID&gt;'</span><span class=\"p\">,</span>  <span class=\"c1\"># required</span>\n    <span class=\"n\">client_password</span><span class=\"o\">=</span><span class=\"s1\">'&lt;YOUR TR CLIENT PASSWORD&gt;'</span><span class=\"p\">,</span>  <span class=\"c1\"># required</span>\n    <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s1\">'&lt;YOUR TR REGION&gt;'</span><span class=\"p\">,</span>  <span class=\"c1\"># optional</span>\n    <span class=\"n\">logger</span><span class=\"o\">=&lt;</span><span class=\"n\">SOME</span> <span class=\"n\">LOGGER</span> <span class=\"n\">INSTANCE</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>  <span class=\"c1\"># optional</span>\n    <span class=\"n\">proxy</span><span class=\"o\">=</span><span class=\"s1\">'&lt;SOME PROXY URL&gt;'</span><span class=\"p\">,</span>  <span class=\"c1\"># optional</span>\n<span class=\"p\">)</span>\n</pre>\n<ul>\n<li><code>client_id</code> and <code>client_password</code> credentials must be taken from an existing\nAPI client for accessing the Cisco Threat Response APIs.\nThe official documentation on how to create such a client can be found\n<a href=\"https://visibility.amp.cisco.com/#/help/integration\" rel=\"nofollow\">here</a>.\nMake sure to properly set some scopes which will grant the client\ndifferent (ideally minimum) privileges.</li>\n<li><code>region</code> must be one of: <code>''</code> or <code>'us'</code> (default), <code>'eu'</code>, <code>'apjc'</code>.\nOther regions are not supported yet.</li>\n<li><code>logger</code> must be an (already configured) instance of the built-in\n<code>logging.Logger</code> class (or one of its descendants).</li>\n<li><code>timeout</code> must be a number (<code>int</code> or <code>float</code>) meaning the default amount of\ntime (in seconds) to wait for the server to send data before giving up and\nraising an exception. Can be overwritten by explicitly specifying <code>timeout</code> on\neach call to any endpoint.</li>\n<li><code>proxy</code> must be a URL in the format: <code>http[s]://[username[:password]@]host[:port]</code>.</li>\n</ul>\n<h3>Concrete Usage</h3>\n<ul>\n<li>Inspect</li>\n</ul>\n<p>Inspect allows to find an observable in a concrete string.</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">inspect</span><span class=\"o\">.</span><span class=\"n\">inspect</span><span class=\"p\">({</span><span class=\"s1\">'content'</span><span class=\"p\">:</span> <span class=\"s1\">'example.com'</span><span class=\"p\">})</span>\n</pre>\n<ul>\n<li>Observe</li>\n</ul>\n<p>Observe returns summary for an observable.</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">enrich</span><span class=\"o\">.</span><span class=\"n\">observe</span><span class=\"o\">.</span><span class=\"n\">observables</span><span class=\"p\">(</span>\n    <span class=\"p\">[{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'sha256'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'8A32950CD96C5EF88F9DCBB66A08F59A7E8D8E5FECCDE9E115FBAA46D9AF88F9'</span><span class=\"p\">}]</span>\n<span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Deliberate</li>\n</ul>\n<p>Deliberate returns judgments based on added modules.</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">enrich</span><span class=\"o\">.</span><span class=\"n\">deliberate</span><span class=\"o\">.</span><span class=\"n\">observables</span><span class=\"p\">(</span>\n    <span class=\"p\">[{</span><span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'sha256'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'8A32950CD96C5EF88F9DCBB66A08F59A7E8D8E5FECCDE9E115FBAA46D9AF88F9'</span><span class=\"p\">}]</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Commands</h3>\n<p>For your convenience, we have made some predefined commands that you can use.</p>\n<ul>\n<li>Verdicts</li>\n</ul>\n<p>Verdicts returns verdicts from all modules if the modules are configured. Accepts multiple observables.</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">verdict</span><span class=\"p\">(</span>\n    <span class=\"s1\">'string with observables (\"8A32950CD96C5EF88F9DCBB66A08F59A7E8D8E5FECCDE9E115FBAA46D9AF88F9, cisco.com\")'</span>\n<span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Targets</li>\n</ul>\n<p>Targets returns all available targets if the modules are configured. Accepts multiple observables.</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">commands</span><span class=\"o\">.</span><span class=\"n\">targets</span><span class=\"p\">(</span>\n    <span class=\"s1\">'string with observables (\"8A32950CD96C5EF88F9DCBB66A08F59A7E8D8E5FECCDE9E115FBAA46D9AF88F9, cisco.com\")'</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Available Endpoints</h3>\n<p>Switch between <code>.private_intel</code> and <code>.global_intel</code> if necessary.</p>\n<h1>Actor</h1>\n<pre><code>actor = client.private_intel.actor\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>actor.post()</li>\n<li>actor.get()</li>\n<li>actor.put()</li>\n<li>actor.delete()</li>\n<li>actor.external_id()</li>\n<li>actor.search()</li>\n</ul>\n<h1>Attack Pattern</h1>\n<pre><code>attack_pattern = client.private_intel.attack_pattern\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>attack_pattern.post()</li>\n<li>attack_pattern.get()</li>\n<li>attack_pattern.put()</li>\n<li>attack_pattern.delete()</li>\n<li>attack_pattern.external_id()</li>\n<li>attack_pattern.search()</li>\n</ul>\n<h1>Bulk</h1>\n<pre><code>bulk = client.private_intel.bulk\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>bulk.post()</li>\n<li>bulk.get()</li>\n</ul>\n<h1>Bundle</h1>\n<pre><code>bundle = client.private_intel.bundle\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>bundle.export.post()</li>\n<li>bundle.export.get()</li>\n<li>bundle.import_.post()</li>\n</ul>\n<h1>Campaign</h1>\n<pre><code>campaign = client.private_intel.campaign\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>campaign.post()</li>\n<li>campaign.get()</li>\n<li>campaign.put()</li>\n<li>campaign.delete()</li>\n<li>campaign.external_id()</li>\n<li>campaign.search()</li>\n</ul>\n<h1>Casebook</h1>\n<pre><code>casebook = client.private_intel.casebook\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>casebook.post()</li>\n<li>casebook.get()</li>\n<li>casebook.put()</li>\n<li>casebook.delete()</li>\n<li>casebook.external_id()</li>\n<li>casebook.search()</li>\n<li>casebook.observables()</li>\n<li>casebook.texts()</li>\n<li>casebook.bundle()</li>\n<li>casebook.pathc()</li>\n</ul>\n<h1>COA</h1>\n<pre><code>coa = client.private_intel.coa\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>coa.post()</li>\n<li>coa.get()</li>\n<li>coa.put()</li>\n<li>coa.delete()</li>\n<li>coa.external_id()</li>\n<li>coa.search()</li>\n</ul>\n<h1>DataTable</h1>\n<pre><code>data_table = client.private_intel.data_table\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>data_table.post()</li>\n<li>data_table.get()</li>\n<li>data_table.delete()</li>\n<li>data_table.external_id()</li>\n</ul>\n<h1>Enrich</h1>\n<pre><code>enrich = client.enrich\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>enrich.health()</li>\n<li>enrich.deliberate.observables()</li>\n<li>enrich.observe.observables()</li>\n<li>enrich.refer.observables()</li>\n</ul>\n<h1>Event</h1>\n<pre><code>event = client.private_intel.event\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>event.history()</li>\n<li>event.search()</li>\n<li>event.get()</li>\n<li>event.delete()</li>\n</ul>\n<h1>Feedback</h1>\n<pre><code>feedback = client.private_intel.feedback\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>feedback.post()</li>\n<li>feedback.get()</li>\n<li>feedback.delete()</li>\n<li>feedback.external_id()</li>\n<li>feedback.get(_id)</li>\n</ul>\n<h1>GraphQL</h1>\n<pre><code>graph = client.private_intel.graphql\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>graphql.post()</li>\n</ul>\n<h1>Incident</h1>\n<pre><code>incident = client.private_intel.incident\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>incident.post()</li>\n<li>incident.get()</li>\n<li>incident.put()</li>\n<li>incident.delete()</li>\n<li>incident.external_id()</li>\n<li>incident.search()</li>\n<li>incident.link()</li>\n<li>incident.status()</li>\n<li>incident.sightings.incidents()</li>\n<li>incident.patch()</li>\n</ul>\n<h1>Indicator</h1>\n<pre><code>indicator = client.private_intel.indicator\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>indicator.post()</li>\n<li>indicator.get()</li>\n<li>indicator.put()</li>\n<li>indicator.delete()</li>\n<li>indicator.external_id()</li>\n<li>indicator.search()</li>\n<li>indicator.judgements.indicators()</li>\n<li>indicator.sightings.indicators()</li>\n</ul>\n<h1>Inspect</h1>\n<pre><code>inspect = client.inspect\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>inspect.inspect()</li>\n</ul>\n<h1>Investigation</h1>\n<pre><code>investigation = client.private_intel.investigation\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>investigation.post()</li>\n<li>investigation.get()</li>\n<li>investigation.put()</li>\n<li>investigation.delete()</li>\n<li>investigation.external_id()</li>\n<li>investigation.search()</li>\n</ul>\n<h1>Judgment</h1>\n<pre><code>judgment = client.private_intel.judgment\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>judgment.post()</li>\n<li>judgment.get()</li>\n<li>judgment.put()</li>\n<li>judgment.delete()</li>\n<li>judgment.external_id()</li>\n<li>judgment.search()</li>\n<li>judgment.judgments()</li>\n</ul>\n<h1>Malware</h1>\n<pre><code>malware = client.private_intel.malware\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>malware.post()</li>\n<li>malware.get()</li>\n<li>malware.put()</li>\n<li>malware.delete()</li>\n<li>malware.external_id()</li>\n<li>malware.search()</li>\n</ul>\n<h1>Metrics</h1>\n<pre><code>metrics = client.private_intel.metrics\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>metrics.get()</li>\n</ul>\n<h1>Properties</h1>\n<pre><code>properties = client.private_intel.properties\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>properties.get()</li>\n</ul>\n<h1>Relationship</h1>\n<pre><code>relationship = client.private_intel.relationship\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>relationship.post()</li>\n<li>relationship.get()</li>\n<li>relationship.put()</li>\n<li>relationship.delete()</li>\n<li>relationship.external_id()</li>\n<li>relationship.search()</li>\n</ul>\n<h1>Response</h1>\n<pre><code>response = client.response\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>response.respond.observables()</li>\n<li>response.respond.trigger()</li>\n</ul>\n<h1>Sighting</h1>\n<pre><code>sighting = client.private_intel.sighting\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>sighting.post()</li>\n<li>sighting.get()</li>\n<li>sighting.put()</li>\n<li>sighting.delete()</li>\n<li>sighting.external_id()</li>\n<li>sighting.search()</li>\n<li>sighting.sightings()</li>\n</ul>\n<h1>Status</h1>\n<pre><code>status = client.private_intel.status\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>status.get()</li>\n</ul>\n<h1>Tool</h1>\n<pre><code>tool = client.private_intel.tool\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>tool.post()</li>\n<li>tool.get()</li>\n<li>tool.put()</li>\n<li>tool.delete()</li>\n<li>tool.external_id()</li>\n<li>tool.search()</li>\n</ul>\n<h1>Verdict</h1>\n<pre><code>verdict = client.private_intel.verdict\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>verdict.get()</li>\n</ul>\n<h1>Version</h1>\n<pre><code>version = client.private_intel.version\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>version.get()</li>\n</ul>\n<h1>Vulnerability</h1>\n<pre><code>vulnerability = client.private_intel.vulnerability\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>vulnerability.post()</li>\n<li>vulnerability.get()</li>\n<li>vulnerability.put()</li>\n<li>vulnerability.delete()</li>\n<li>vulnerability.external_id()</li>\n<li>vulnerability.search()</li>\n</ul>\n<h1>Weakness</h1>\n<pre><code>weakness = client.private_intel.weakness\n</code></pre>\n<p>Available methods:</p>\n<ul>\n<li>weakness.post()</li>\n<li>weakness.get()</li>\n<li>weakness.put()</li>\n<li>weakness.delete()</li>\n<li>weakness.external_id()</li>\n<li>weakness.search()</li>\n</ul>\n\n          </div>"}, "last_serial": 6837418, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "53f69466f1daa915be9780d0ca8b8ba2", "sha256": "0118de6f54a104a2506c6e27926294a8a89e65919c34d6f67c97a9e99cae2370"}, "downloads": -1, "filename": "threatresponse-0.3.1.tar.gz", "has_sig": false, "md5_digest": "53f69466f1daa915be9780d0ca8b8ba2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9546, "upload_time": "2019-10-03T10:45:24", "upload_time_iso_8601": "2019-10-03T10:45:24.472012Z", "url": "https://files.pythonhosted.org/packages/fa/30/8667745564835cf96749fd3b6f16b5743114d3d0f7e79e5ed557093288b1/threatresponse-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "77eaab3521aeb7e1780d3af2fc71adc6", "sha256": "a66459776b97b3151e4f5707ff2815477fa0e7880306ba1af874dab2913c27b2"}, "downloads": -1, "filename": "threatresponse-0.4.0.tar.gz", "has_sig": false, "md5_digest": "77eaab3521aeb7e1780d3af2fc71adc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9911, "upload_time": "2019-10-18T17:01:23", "upload_time_iso_8601": "2019-10-18T17:01:23.252503Z", "url": "https://files.pythonhosted.org/packages/75/b6/d75697dbc75ef37d0b15bd7549c3e0982bdb502efcda0df2fabb52f3deef/threatresponse-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "dc8b7dc416bc00c5c6da9c44548be6ec", "sha256": "4d9f1d64be6ba1fc7a6a81b0e00d12d5fd9e904eb0de93a0d60ac090efd0028c"}, "downloads": -1, "filename": "threatresponse-0.5.0.tar.gz", "has_sig": false, "md5_digest": "dc8b7dc416bc00c5c6da9c44548be6ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10215, "upload_time": "2019-10-29T12:01:50", "upload_time_iso_8601": "2019-10-29T12:01:50.505577Z", "url": "https://files.pythonhosted.org/packages/f5/b3/7c8ba1492ce33b93bf9c3e104b4e84c03c257f3841ac8814e1f13d39f822/threatresponse-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "317facd4d70f3d7b6520c30d1b1d3f46", "sha256": "aab57abec941dda14d5843484b2caaa6adfc984e65961e38011e3cd1af63564d"}, "downloads": -1, "filename": "threatresponse-0.6.0.tar.gz", "has_sig": false, "md5_digest": "317facd4d70f3d7b6520c30d1b1d3f46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12206, "upload_time": "2019-12-23T16:42:46", "upload_time_iso_8601": "2019-12-23T16:42:46.171332Z", "url": "https://files.pythonhosted.org/packages/f8/9f/4fd651d283179a39252a8d90f743f955f5cf36ebdbfd0bcdde275cfb3283/threatresponse-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "f04ae16a5b9ec7ecc4d3a5fa1f029db8", "sha256": "7c83520e4e95eac6015091a93768e5e3b39635c479cd6bdc450b24f9a7409930"}, "downloads": -1, "filename": "threatresponse-0.7.0.tar.gz", "has_sig": false, "md5_digest": "f04ae16a5b9ec7ecc4d3a5fa1f029db8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 16127, "upload_time": "2020-02-20T14:24:01", "upload_time_iso_8601": "2020-02-20T14:24:01.328577Z", "url": "https://files.pythonhosted.org/packages/25/80/2f9768e3c087323a84127e2176bf4521186a9f4791e25743cc8900e061ee/threatresponse-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "405935af8047ba3e45500d4894de791c", "sha256": "7c36ba85d1f2920d55f4cffd94c8c3c178987d86977e21e2bcb8bf6bb1b706be"}, "downloads": -1, "filename": "threatresponse-0.7.1.tar.gz", "has_sig": false, "md5_digest": "405935af8047ba3e45500d4894de791c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 15963, "upload_time": "2020-02-20T15:09:11", "upload_time_iso_8601": "2020-02-20T15:09:11.958282Z", "url": "https://files.pythonhosted.org/packages/dc/22/40a1a304f3b8873ff155ad61d3226bacb7066efb0bd17323660ccd2ec0fc/threatresponse-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "9b2a6ac9cd49a1a387b49c33611ed217", "sha256": "2e51bac996ec15cf0c18d0eb60ffd70bb126be2984dc157f98db82f5bbdcc043"}, "downloads": -1, "filename": "threatresponse-0.7.2.tar.gz", "has_sig": false, "md5_digest": "9b2a6ac9cd49a1a387b49c33611ed217", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 15971, "upload_time": "2020-02-20T15:26:31", "upload_time_iso_8601": "2020-02-20T15:26:31.832824Z", "url": "https://files.pythonhosted.org/packages/d5/9e/1464b82b75fe4207307e40693110940a136be3786072b425b112c84383de/threatresponse-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "995cae8541f714978f0f05ef36194824", "sha256": "1a42cf2c656181e761f80873fcba21623338d37c8d5dbc723c4493c4d8abeb5b"}, "downloads": -1, "filename": "threatresponse-0.7.3.tar.gz", "has_sig": false, "md5_digest": "995cae8541f714978f0f05ef36194824", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 16117, "upload_time": "2020-03-18T17:04:44", "upload_time_iso_8601": "2020-03-18T17:04:44.972736Z", "url": "https://files.pythonhosted.org/packages/7d/b0/70be07268d652ed2ea39f58c75981101fea6be5de2db73ef7bfee7a926d3/threatresponse-0.7.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "995cae8541f714978f0f05ef36194824", "sha256": "1a42cf2c656181e761f80873fcba21623338d37c8d5dbc723c4493c4d8abeb5b"}, "downloads": -1, "filename": "threatresponse-0.7.3.tar.gz", "has_sig": false, "md5_digest": "995cae8541f714978f0f05ef36194824", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 16117, "upload_time": "2020-03-18T17:04:44", "upload_time_iso_8601": "2020-03-18T17:04:44.972736Z", "url": "https://files.pythonhosted.org/packages/7d/b0/70be07268d652ed2ea39f58c75981101fea6be5de2db73ef7bfee7a926d3/threatresponse-0.7.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:44 2020"}