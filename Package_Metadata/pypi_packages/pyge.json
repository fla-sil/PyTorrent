{"info": {"author": "Seth Black", "author_email": "sblack@sethserver.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "# Python Gift Exchange Picker\n\n[![The Rest by taleas.com](https://www.taleas.com/static/images/comics/TheRest.png \"The Rest by taleas.com\")](https://www.taleas.com/comics/the-rest-of-the-christmas-presents.html)\n\nMy wife is in charge of our families' annual Secret Santa Gift Exchange. Because she, unfortunately, knows about my background in math and computer science her requirements have become more extreme. A hat containing folded pieces of paper with hand-written names is no longer sufficient. Python Gift Exchange Picker (pyge) is my third and best implementation of my wife's requirements:\n\n- It must match each person to a different person.\n- The match should not be in the same household.\n- The match should not be the same gender.\n- The match should not be in the same age group.\n- The match must not happen again for at least three years.\n\nTo accomplish this, pyge imports a list of participants along with their feature sets and transforms each participant's feature set into numerical values. Each value is then vectorized and a pairwise euclidean distance between each participant is computed; this can be represented as either a graph or a matrix - I chose a matrix. The distances are then multiplied by a per-participant \"qualifier\" coefficient and the results are used to build a weighted distribution. The pairs of participants are then randomly matched using the weighted distribution until either all participants have been matched or no matches can be made. If no matches can be made and there are still participants pyge will backtrack until all participants can be successfully matched or it is discovered that it is impossible to match the given set of participants.\n\nIf you're interested, you can read a more detailed description [here](https://www.sethserver.com/python/secret-santa-gift-exchange.html).\n\n## Installation\n\n```sh\npip install pyge\n```\n\n## Basic Usage\n\nPyge has only one required argument: the path to a csv file containing the people who are participating in the gift exchange. An example csv file, [jazz.csv](https://github.com/sethblack/py-gift-exchange/blob/master/jazz.csv) has been provided.\n\n\n```sh\n$ pyge /path/to/jazz.csv\nHerbie Hancock, Billie Holiday\nElla Fitzgerald, Herbie Hancock\nCharlie Parker, Nina Simone\nNina Simone, Bill Evans\nMiles Davis, Duke Ellington\nJohn Coltrane, Sarah Vaughan\nSarah Vaughan, Louis Armstrong\nLouis Armstrong, Ella Fitzgerald\nBillie Holiday, Charlie Parker\nDuke Ellington, John Coltrane\nDizzy Gillespie, Miles Davis\nBill Evans, Dizzy Gillespie\n```\n\n### Input CSV File Format\n\n```\nname, date of birth, sex, \"city, state or province or territory\"\n```\n\nAny column containing a comma should be quoted with double-quotes, for example, `\"Austin, TX\"`.\n\nThe `Date of Birth` field is in `MM/DD/YYYY` format.\n\n`Sex` can be `M`, `F` or `N`.\n\n`City` by default only includes cities in the United States. See [Using Other Country Databases](https://github.com/sethblack/py-gift-exchange#using-other-country-databases) for more information on changing the country.\n\n## Saving History\n\nPyge saves a historical list of pairings which is used to ensure participants will not be paired for at a minimum of three exchanges. Saving history can be toggled with the `--save-history` and `--no-history` flags. The minimum number of exchanges can be modified with the `--history-length` argument.\n\n## Using Other Country Databases\n\nYou can pass a different city weight database file by using the `--citydb` argument. The city weight database is a csv file in the following format:\n\n```\ncity, state or province or territory, normalized latitude, normalized longitude\n```\n\nWhere normalized latitude and longitude are the values normalized between -1 and +1 (divided by 180).\n\n## Full Usage\n\n```\nusage: pyge [-h] [-s] [-n] [-c citydb] [-l historylength] file\n\nGenerates a list of people pairings for a holiday gift exchange.\n\npositional arguments:\n  file                  path to the csv containing a list of people who want\n                        to be part of the celebration\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s, --save-history    save a history file of matches\n  -n, --no-history      do not save a history file of matches\n  -c citydb, --citydb citydb\n                        path to city csv for distance calculations\n  -l historylength, --history-length historylength\n                        number of cycles before people can be paired again\n```\n\n---\n\nCities database provided by [https://simplemaps.com/data/us-cities](https://simplemaps.com/data/us-cities).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sethblack/python-gift-exchange", "keywords": "ai,unsupervised learning,random,artificial intelligence,secret santa,gift exchange", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "pyge", "package_url": "https://pypi.org/project/pyge/", "platform": "", "project_url": "https://pypi.org/project/pyge/", "project_urls": {"Homepage": "https://github.com/sethblack/python-gift-exchange"}, "release_url": "https://pypi.org/project/pyge/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Python Gift Exchange Picker", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Gift Exchange Picker</h1>\n<p><a href=\"https://www.taleas.com/comics/the-rest-of-the-christmas-presents.html\" rel=\"nofollow\"><img alt=\"The Rest by taleas.com\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bff837d9ea93f2ee65dd2dddc57ffbc0e0c268ad/68747470733a2f2f7777772e74616c6561732e636f6d2f7374617469632f696d616765732f636f6d6963732f546865526573742e706e67\"></a></p>\n<p>My wife is in charge of our families' annual Secret Santa Gift Exchange. Because she, unfortunately, knows about my background in math and computer science her requirements have become more extreme. A hat containing folded pieces of paper with hand-written names is no longer sufficient. Python Gift Exchange Picker (pyge) is my third and best implementation of my wife's requirements:</p>\n<ul>\n<li>It must match each person to a different person.</li>\n<li>The match should not be in the same household.</li>\n<li>The match should not be the same gender.</li>\n<li>The match should not be in the same age group.</li>\n<li>The match must not happen again for at least three years.</li>\n</ul>\n<p>To accomplish this, pyge imports a list of participants along with their feature sets and transforms each participant's feature set into numerical values. Each value is then vectorized and a pairwise euclidean distance between each participant is computed; this can be represented as either a graph or a matrix - I chose a matrix. The distances are then multiplied by a per-participant \"qualifier\" coefficient and the results are used to build a weighted distribution. The pairs of participants are then randomly matched using the weighted distribution until either all participants have been matched or no matches can be made. If no matches can be made and there are still participants pyge will backtrack until all participants can be successfully matched or it is discovered that it is impossible to match the given set of participants.</p>\n<p>If you're interested, you can read a more detailed description <a href=\"https://www.sethserver.com/python/secret-santa-gift-exchange.html\" rel=\"nofollow\">here</a>.</p>\n<h2>Installation</h2>\n<pre>pip install pyge\n</pre>\n<h2>Basic Usage</h2>\n<p>Pyge has only one required argument: the path to a csv file containing the people who are participating in the gift exchange. An example csv file, <a href=\"https://github.com/sethblack/py-gift-exchange/blob/master/jazz.csv\" rel=\"nofollow\">jazz.csv</a> has been provided.</p>\n<pre>$ pyge /path/to/jazz.csv\nHerbie Hancock, Billie Holiday\nElla Fitzgerald, Herbie Hancock\nCharlie Parker, Nina Simone\nNina Simone, Bill Evans\nMiles Davis, Duke Ellington\nJohn Coltrane, Sarah Vaughan\nSarah Vaughan, Louis Armstrong\nLouis Armstrong, Ella Fitzgerald\nBillie Holiday, Charlie Parker\nDuke Ellington, John Coltrane\nDizzy Gillespie, Miles Davis\nBill Evans, Dizzy Gillespie\n</pre>\n<h3>Input CSV File Format</h3>\n<pre><code>name, date of birth, sex, \"city, state or province or territory\"\n</code></pre>\n<p>Any column containing a comma should be quoted with double-quotes, for example, <code>\"Austin, TX\"</code>.</p>\n<p>The <code>Date of Birth</code> field is in <code>MM/DD/YYYY</code> format.</p>\n<p><code>Sex</code> can be <code>M</code>, <code>F</code> or <code>N</code>.</p>\n<p><code>City</code> by default only includes cities in the United States. See <a href=\"https://github.com/sethblack/py-gift-exchange#using-other-country-databases\" rel=\"nofollow\">Using Other Country Databases</a> for more information on changing the country.</p>\n<h2>Saving History</h2>\n<p>Pyge saves a historical list of pairings which is used to ensure participants will not be paired for at a minimum of three exchanges. Saving history can be toggled with the <code>--save-history</code> and <code>--no-history</code> flags. The minimum number of exchanges can be modified with the <code>--history-length</code> argument.</p>\n<h2>Using Other Country Databases</h2>\n<p>You can pass a different city weight database file by using the <code>--citydb</code> argument. The city weight database is a csv file in the following format:</p>\n<pre><code>city, state or province or territory, normalized latitude, normalized longitude\n</code></pre>\n<p>Where normalized latitude and longitude are the values normalized between -1 and +1 (divided by 180).</p>\n<h2>Full Usage</h2>\n<pre><code>usage: pyge [-h] [-s] [-n] [-c citydb] [-l historylength] file\n\nGenerates a list of people pairings for a holiday gift exchange.\n\npositional arguments:\n  file                  path to the csv containing a list of people who want\n                        to be part of the celebration\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s, --save-history    save a history file of matches\n  -n, --no-history      do not save a history file of matches\n  -c citydb, --citydb citydb\n                        path to city csv for distance calculations\n  -l historylength, --history-length historylength\n                        number of cycles before people can be paired again\n</code></pre>\n<hr>\n<p>Cities database provided by <a href=\"https://simplemaps.com/data/us-cities\" rel=\"nofollow\">https://simplemaps.com/data/us-cities</a>.</p>\n\n          </div>"}, "last_serial": 6082449, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "57e6685399eb91b90f99c58f3ffd2b58", "sha256": "d1c890bdc25441bb6bb482da573c4245811830e2c7cfaf7e732bd7afefa42291"}, "downloads": -1, "filename": "pyge-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "57e6685399eb91b90f99c58f3ffd2b58", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 387692, "upload_time": "2019-11-02T19:04:09", "upload_time_iso_8601": "2019-11-02T19:04:09.509228Z", "url": "https://files.pythonhosted.org/packages/88/4d/45ec7a7ad5c83f2e681f742b0f7bab9af54e6c5e2e6f30b58771ed8cf66f/pyge-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "374fe027fe8ba3e3495d1b5e200ab124", "sha256": "35ba23ac2fa1bbbbbc382cbccd9a21350d6e161eeeda26d1e17037039fdbeb25"}, "downloads": -1, "filename": "pyge-1.0.0.tar.gz", "has_sig": false, "md5_digest": "374fe027fe8ba3e3495d1b5e200ab124", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5330, "upload_time": "2019-11-02T19:04:13", "upload_time_iso_8601": "2019-11-02T19:04:13.406250Z", "url": "https://files.pythonhosted.org/packages/b4/e2/4dc66c490275f15dd3c3ab2653b5e664ccf20ff73dd1e3f8a324b2a90499/pyge-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6c741babb2fecfd043eed1c0564d3194", "sha256": "0baecccb267122a6d3645f564b32de12b7128ce7096205e9b3986ec09f83ad44"}, "downloads": -1, "filename": "pyge-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6c741babb2fecfd043eed1c0564d3194", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 389552, "upload_time": "2019-11-02T19:06:57", "upload_time_iso_8601": "2019-11-02T19:06:57.517946Z", "url": "https://files.pythonhosted.org/packages/d3/6e/1172b282dfcc04cd5191b363e6f80db467978afb727b413c841477fb67d7/pyge-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c35ba0a3139cf92eccf75a6af5d812a", "sha256": "97fe93d8e6eeee7c6117cf0f3641bca6266941344280384a1291ae2fffa47b62"}, "downloads": -1, "filename": "pyge-1.0.1.tar.gz", "has_sig": false, "md5_digest": "9c35ba0a3139cf92eccf75a6af5d812a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5670, "upload_time": "2019-11-02T19:06:59", "upload_time_iso_8601": "2019-11-02T19:06:59.454252Z", "url": "https://files.pythonhosted.org/packages/f8/87/93d56983c7c516478d2a02e882b365087a9f11dbe627981c43db1b05cb08/pyge-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b0c7e610da107edd35432c42db7a4e7f", "sha256": "9274c5ae9bc9db3bf7fd34387b20a8c96f0cb95e4adb94007d817eefe82f3229"}, "downloads": -1, "filename": "pyge-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b0c7e610da107edd35432c42db7a4e7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 389602, "upload_time": "2019-11-05T19:00:07", "upload_time_iso_8601": "2019-11-05T19:00:07.346614Z", "url": "https://files.pythonhosted.org/packages/07/81/e7695f4de23af366651e6f794e2552b0018999d2ac8482d2926d006cc06f/pyge-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fe4978b238f34211a99d2b6d22a130f", "sha256": "1eee23167dc9af1a17ec3615ffafd2e029316e54dbe6b757819e8cc877799b7c"}, "downloads": -1, "filename": "pyge-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0fe4978b238f34211a99d2b6d22a130f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5698, "upload_time": "2019-11-05T19:00:09", "upload_time_iso_8601": "2019-11-05T19:00:09.039581Z", "url": "https://files.pythonhosted.org/packages/08/f6/d5c34001f2d5e5a19e9c31db74f5bb7b4f6cc9eb6e2163b5e53ac9bfea59/pyge-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b0c7e610da107edd35432c42db7a4e7f", "sha256": "9274c5ae9bc9db3bf7fd34387b20a8c96f0cb95e4adb94007d817eefe82f3229"}, "downloads": -1, "filename": "pyge-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b0c7e610da107edd35432c42db7a4e7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 389602, "upload_time": "2019-11-05T19:00:07", "upload_time_iso_8601": "2019-11-05T19:00:07.346614Z", "url": "https://files.pythonhosted.org/packages/07/81/e7695f4de23af366651e6f794e2552b0018999d2ac8482d2926d006cc06f/pyge-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fe4978b238f34211a99d2b6d22a130f", "sha256": "1eee23167dc9af1a17ec3615ffafd2e029316e54dbe6b757819e8cc877799b7c"}, "downloads": -1, "filename": "pyge-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0fe4978b238f34211a99d2b6d22a130f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5698, "upload_time": "2019-11-05T19:00:09", "upload_time_iso_8601": "2019-11-05T19:00:09.039581Z", "url": "https://files.pythonhosted.org/packages/08/f6/d5c34001f2d5e5a19e9c31db74f5bb7b4f6cc9eb6e2163b5e53ac9bfea59/pyge-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:13 2020"}