{"info": {"author": "Gustavo Carneiro", "author_email": "gjcarneiro@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "About\n=====\nPyBindGen is (surprise!) a python bindings generator.  The main features are:\n\n * Generates clean C or C++ code, nearly as readable as code written\n   manually by a developer;\n * Generated code is self contained and does not require any external\n   libraries or macros; after generating the python module only python\n   header files are required, nothing else;\n * Does not require Boost.Python (no C++ template magic, also works in C);\n * The interface for code generation is a simple Python API, not some\n   obscure interface definition language.  Additionally PyBindGen can\n   parse header files with gccxml, if gccxml and pygccxml are\n   installed in the system (note: pygccxml has not been ported to Python 3 yet);\n * Can be easily extended with new type handlers;\n * Type handlers can allocate memory and register cleanup code to free;\n * Supports in, out, and inout parameters (e.g. with pointers or C++ references);\n * Supports multiple return values (e.g. due to out/inout parameters);\n * Supports wrapping of simple C++ classes;\n * Supports virtual methods in classes;\n * Supports reference counted classes and, to some extent, smart pointers;\n * Multiple inheritance;\n * Wrapping templated classes;\n\nNotable features NOT implemented:\n\n * Converting exceptions from Python to C++ (only from C++ to Python is currently supported);\n * Callbacks.\n\nSupported Python versions\n=========================\n\nSee the `documentation <http://pybindgen.readthedocs.org/en/latest/tutorial/#supported-python-versions>`_.\n\nInstallation\n============\n\nNOTE: if checking out pybindgen from bazaar, do not forget to see the\nfile HACKING for additional instructions.\n\nBefore proceeding make sure the system requirements are met.  PyBindGen requires:\n\n 1. Python (http://www.python.org)\n 2. Python development files (the `python-dev` package in Ubuntu/Debian, for example)\n 3. A C/C++ Compilation tool-chain (`apt-get install build-essential`)\n 4. (optional) GCCXML and `PyGCCXML <http://www.language-binding.net/pygccxml/download.html>`_\n\nYou can install PyBindGen using either the `setup.py` or WAF.  Note: to\nbe able to run all tests, which involve code generation, and\nsubsequent compilation, you need to use WAF.\n\nInstallation using setup.py:\n----------------------------\n\n\tpython setup.py install\n\nInstallation using WAF\n----------------------\n\nPyBindGen uses `WAF <http://code.google.com/p/waf/>`_ as main build system.\nHowever, WAF does not have to be previously installed, as it is\nshipped with PyBindGen in a single `waf` script.\n\nTo install PyBindGen, issue the following commands (win32 users should omit the ./ prefix in commands):\n\n1. ./waf configure\n   - optionally you may add the option --prefix /foo/bar. To select a non-defaul python version, use the PYTHON environment variable, e.g.::\n\n        PYTHON=/usr/bin/python2.4 ./waf configure\n\n2. ./waf\n    - possible options: `-jN` for parallel build, `-p` for progress bar\n3. ./waf check\n    - optional step, runs the unit tests\n4. ./waf --examples\n    - optional step, compiles the examples\n5. ./waf install\n    - may require sudo\n\n\nWindows specific notes\n----------------------\n\nWAF concurrency bugs\n++++++++++++++++++++\n\n\nWAF automatically detects the number of cores and tries to activate\nmultiple build threads accordingly.  However, this concurrency support\nappears to be buggy on Windows, therefore you should disable it with the\n-j1 option, if you have multiple CPUs:\n\n\twaf check -j1\n\nCompiler selection\n++++++++++++++++++\n\nNote that if you are compiling on win32, WAF will look for MSVC\n(MicroSoft Visual C) by default and give up on finding a C/C++\ncompiler if not found.  If you do not have MSVC installed but instead\nhave MinGW or CygWin GCC, you have to tell WAF to look for GCC in the\nconfigure stage:\n\n\twaf configure --check-c-compiler=gcc --check-cxx-compiler=g++\n\nInstallation\n++++++++++++\n\nOn win32, `waf install` installs to a Temp folder by default.  To have\nit install for a certain Python version, use the --prefix option to\nwaf configure.  For instance:\n   \n\twaf configure --prefix C:\\Python26\n\twaf install\n\n\n\nInstallation failsafe\n---------------------\n\nIf by any chance you have trouble with WAF and are just looking to\ninstall PyBindGen, you should know that PyBindGen is entirely\nself-contained in the `pybindgen` directory.  You can simply\nrecursively copy the entire pybindgen folder into Python's\nsite-packages directory, and that's it!  PyBindGen is a pure Python\npackage and does not actually require a C/C++ compiler; a C++ compiler is only\nused for code generation unit tests and compiling the example modules, and it is not needed to generate code.\n\n\nDocumentation\n=============\n\nThe following documentation is available:\n\n 1. `API docs (with introductory tutorial) <http://pybindgen.readthedocs.org/en/latest/>`_ \n 2. Many simple examples in the `examples` directory\n 3. Advanced examples in the unit tests (`tests/`)\n 4. The source code!\n\n.. image:: https://travis-ci.org/gjcarneiro/pybindgen.svg?branch=master\n    :target: https://travis-ci.org/gjcarneiro/pybindgen\n\n", "description_content_type": "", "docs_url": "https://pythonhosted.org/PyBindGen/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://launchpad.net/pybindgen", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "PyBindGen", "package_url": "https://pypi.org/project/PyBindGen/", "platform": "", "project_url": "https://pypi.org/project/PyBindGen/", "project_urls": {"Homepage": "https://launchpad.net/pybindgen"}, "release_url": "https://pypi.org/project/PyBindGen/0.21.0/", "requires_dist": null, "requires_python": "", "summary": "Python Bindings Generator", "version": "0.21.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>PyBindGen is (surprise!) a python bindings generator.  The main features are:</p>\n<blockquote>\n<ul>\n<li>Generates clean C or C++ code, nearly as readable as code written\nmanually by a developer;</li>\n<li>Generated code is self contained and does not require any external\nlibraries or macros; after generating the python module only python\nheader files are required, nothing else;</li>\n<li>Does not require Boost.Python (no C++ template magic, also works in C);</li>\n<li>The interface for code generation is a simple Python API, not some\nobscure interface definition language.  Additionally PyBindGen can\nparse header files with gccxml, if gccxml and pygccxml are\ninstalled in the system (note: pygccxml has not been ported to Python 3 yet);</li>\n<li>Can be easily extended with new type handlers;</li>\n<li>Type handlers can allocate memory and register cleanup code to free;</li>\n<li>Supports in, out, and inout parameters (e.g. with pointers or C++ references);</li>\n<li>Supports multiple return values (e.g. due to out/inout parameters);</li>\n<li>Supports wrapping of simple C++ classes;</li>\n<li>Supports virtual methods in classes;</li>\n<li>Supports reference counted classes and, to some extent, smart pointers;</li>\n<li>Multiple inheritance;</li>\n<li>Wrapping templated classes;</li>\n</ul>\n</blockquote>\n<p>Notable features NOT implemented:</p>\n<blockquote>\n<ul>\n<li>Converting exceptions from Python to C++ (only from C++ to Python is currently supported);</li>\n<li>Callbacks.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"supported-python-versions\">\n<h2>Supported Python versions</h2>\n<p>See the <a href=\"http://pybindgen.readthedocs.org/en/latest/tutorial/#supported-python-versions\" rel=\"nofollow\">documentation</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>NOTE: if checking out pybindgen from bazaar, do not forget to see the\nfile HACKING for additional instructions.</p>\n<p>Before proceeding make sure the system requirements are met.  PyBindGen requires:</p>\n<blockquote>\n<ol>\n<li>Python (<a href=\"http://www.python.org\" rel=\"nofollow\">http://www.python.org</a>)</li>\n<li>Python development files (the <cite>python-dev</cite> package in Ubuntu/Debian, for example)</li>\n<li>A C/C++ Compilation tool-chain (<cite>apt-get install build-essential</cite>)</li>\n<li>(optional) GCCXML and <a href=\"http://www.language-binding.net/pygccxml/download.html\" rel=\"nofollow\">PyGCCXML</a></li>\n</ol>\n</blockquote>\n<p>You can install PyBindGen using either the <cite>setup.py</cite> or WAF.  Note: to\nbe able to run all tests, which involve code generation, and\nsubsequent compilation, you need to use WAF.</p>\n<div id=\"installation-using-setup-py\">\n<h3>Installation using setup.py:</h3>\n<blockquote>\npython setup.py install</blockquote>\n</div>\n<div id=\"installation-using-waf\">\n<h3>Installation using WAF</h3>\n<p>PyBindGen uses <a href=\"http://code.google.com/p/waf/\" rel=\"nofollow\">WAF</a> as main build system.\nHowever, WAF does not have to be previously installed, as it is\nshipped with PyBindGen in a single <cite>waf</cite> script.</p>\n<p>To install PyBindGen, issue the following commands (win32 users should omit the ./ prefix in commands):</p>\n<ol>\n<li><p>./waf configure\n- optionally you may add the option \u2013prefix /foo/bar. To select a non-defaul python version, use the PYTHON environment variable, e.g.:</p>\n<pre>PYTHON=/usr/bin/python2.4 ./waf configure\n</pre>\n</li>\n<li><dl>\n<dt>./waf</dt>\n<dd><ul>\n<li>possible options: <cite>-jN</cite> for parallel build, <cite>-p</cite> for progress bar</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>./waf check</dt>\n<dd><ul>\n<li>optional step, runs the unit tests</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>./waf \u2013examples</dt>\n<dd><ul>\n<li>optional step, compiles the examples</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>./waf install</dt>\n<dd><ul>\n<li>may require sudo</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ol>\n</div>\n<div id=\"windows-specific-notes\">\n<h3>Windows specific notes</h3>\n<div id=\"waf-concurrency-bugs\">\n<h4>WAF concurrency bugs</h4>\n<p>WAF automatically detects the number of cores and tries to activate\nmultiple build threads accordingly.  However, this concurrency support\nappears to be buggy on Windows, therefore you should disable it with the\n-j1 option, if you have multiple CPUs:</p>\n<blockquote>\nwaf check -j1</blockquote>\n</div>\n<div id=\"compiler-selection\">\n<h4>Compiler selection</h4>\n<p>Note that if you are compiling on win32, WAF will look for MSVC\n(MicroSoft Visual C) by default and give up on finding a C/C++\ncompiler if not found.  If you do not have MSVC installed but instead\nhave MinGW or CygWin GCC, you have to tell WAF to look for GCC in the\nconfigure stage:</p>\n<blockquote>\nwaf configure \u2013check-c-compiler=gcc \u2013check-cxx-compiler=g++</blockquote>\n</div>\n<div id=\"id1\">\n<h4>Installation</h4>\n<p>On win32, <cite>waf install</cite> installs to a Temp folder by default.  To have\nit install for a certain Python version, use the \u2013prefix option to\nwaf configure.  For instance:</p>\n<blockquote>\nwaf configure \u2013prefix C:Python26\nwaf install</blockquote>\n</div>\n</div>\n<div id=\"installation-failsafe\">\n<h3>Installation failsafe</h3>\n<p>If by any chance you have trouble with WAF and are just looking to\ninstall PyBindGen, you should know that PyBindGen is entirely\nself-contained in the <cite>pybindgen</cite> directory.  You can simply\nrecursively copy the entire pybindgen folder into Python\u2019s\nsite-packages directory, and that\u2019s it!  PyBindGen is a pure Python\npackage and does not actually require a C/C++ compiler; a C++ compiler is only\nused for code generation unit tests and compiling the example modules, and it is not needed to generate code.</p>\n</div>\n</div>\n<div id=\"id2\">\n<h2>Documentation</h2>\n<p>The following documentation is available:</p>\n<blockquote>\n<ol>\n<li><a href=\"http://pybindgen.readthedocs.org/en/latest/\" rel=\"nofollow\">API docs (with introductory tutorial)</a></li>\n<li>Many simple examples in the <cite>examples</cite> directory</li>\n<li>Advanced examples in the unit tests (<cite>tests/</cite>)</li>\n<li>The source code!</li>\n</ol>\n</blockquote>\n<a href=\"https://travis-ci.org/gjcarneiro/pybindgen\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/gjcarneiro/pybindgen.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a26ac449694e881173a25567dd58f47ed178dd3/68747470733a2f2f7472617669732d63692e6f72672f676a6361726e6569726f2f707962696e6467656e2e7376673f6272616e63683d6d6173746572\"></a>\n</div>\n\n          </div>"}, "last_serial": 7170590, "releases": {"0.10": [], "0.11": [], "0.12": [], "0.13": [], "0.14": [], "0.15.0": [], "0.16.0": [], "0.17.0": [{"comment_text": "", "digests": {"md5": "7d8fe2b3b4646c3c1d9e5342b1645f6a", "sha256": "22e08bfcc6746abc9fe54ca13524a22b3543079b42fd441c48e6b6e89bd53d9a"}, "downloads": -1, "filename": "PyBindGen-0.17.0.tar.gz", "has_sig": false, "md5_digest": "7d8fe2b3b4646c3c1d9e5342b1645f6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 277021, "upload_time": "2014-02-15T19:26:19", "upload_time_iso_8601": "2014-02-15T19:26:19.079240Z", "url": "https://files.pythonhosted.org/packages/00/e5/0a183a9f28092fafdde1613fc0d67776dd2a01ea83f075cfcac9cf300273/PyBindGen-0.17.0.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "318d885d0c9bf749b0b1b6a6be978ebb", "sha256": "d9bd4d0878b6e9090ab65c4074f63d31e4b230c4a36922f452161fba909275f6"}, "downloads": -1, "filename": "PyBindGen-0.18.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "318d885d0c9bf749b0b1b6a6be978ebb", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 143811, "upload_time": "2017-05-21T11:05:01", "upload_time_iso_8601": "2017-05-21T11:05:01.121004Z", "url": "https://files.pythonhosted.org/packages/c3/d8/1c32614c6aaad09e9692384c366fe815c6bb1024580fd6c5e22a92f15f24/PyBindGen-0.18.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e994673f0ffcd8f152abc206127c466e", "sha256": "867a72684e09e8a5687afc1dda95823db2900e376629268c33bbd198919584ea"}, "downloads": -1, "filename": "PyBindGen-0.18.0.tar.gz", "has_sig": false, "md5_digest": "e994673f0ffcd8f152abc206127c466e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 434595, "upload_time": "2017-05-21T11:04:57", "upload_time_iso_8601": "2017-05-21T11:04:57.917898Z", "url": "https://files.pythonhosted.org/packages/64/bf/75eaf49a10212a79af0266175a9df4e660f34c1cd3c86b545d3a054a2e82/PyBindGen-0.18.0.tar.gz", "yanked": false}], "0.19.0": [{"comment_text": "", "digests": {"md5": "89b337d437ade303220c4ee785387d85", "sha256": "2658c5071db987ee8d62aad6624880f284c21685e14503fa9e5a8aee5bedfae8"}, "downloads": -1, "filename": "PyBindGen-0.19.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "89b337d437ade303220c4ee785387d85", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 164256, "upload_time": "2018-05-27T14:42:32", "upload_time_iso_8601": "2018-05-27T14:42:32.329134Z", "url": "https://files.pythonhosted.org/packages/1b/49/6132e0bcfe4d6657d6b5addc89cc013730eedfd5a1dad314c055e1fb8e6e/PyBindGen-0.19.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19f70a66c1385cd2dd393b66f4511d39", "sha256": "23f2b760e352729208cd4fbadbc618bd00f95a0a24db21a4182833afcc3b5208"}, "downloads": -1, "filename": "PyBindGen-0.19.0.tar.gz", "has_sig": false, "md5_digest": "19f70a66c1385cd2dd393b66f4511d39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 452252, "upload_time": "2018-05-27T14:42:29", "upload_time_iso_8601": "2018-05-27T14:42:29.686355Z", "url": "https://files.pythonhosted.org/packages/dd/d2/76fe1806d2dcfd1a18d39862c7d112317df0bb90874395d6962465fe85e3/PyBindGen-0.19.0.tar.gz", "yanked": false}], "0.20.0": [{"comment_text": "", "digests": {"md5": "502bcd8f638e7f0416d5c2adffdd09e2", "sha256": "697266a6a62788b776d7c7fad020d06be25aa03f3e0fdac52f7c4be7beb0ddf2"}, "downloads": -1, "filename": "PyBindGen-0.20.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "502bcd8f638e7f0416d5c2adffdd09e2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 171248, "upload_time": "2019-08-08T22:17:16", "upload_time_iso_8601": "2019-08-08T22:17:16.021361Z", "url": "https://files.pythonhosted.org/packages/3c/1a/604eb4c35f4be7e18a3cd1006a36d0b65f6c032380bd98f173dca150011a/PyBindGen-0.20.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "776a22dc2dd7edb66a0887c98d2fdc24", "sha256": "0fb1eda1d2a7024fa3b35de4e09c5ead4882a60bde146c936b4da07b34f93751"}, "downloads": -1, "filename": "PyBindGen-0.20.0.tar.gz", "has_sig": false, "md5_digest": "776a22dc2dd7edb66a0887c98d2fdc24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 452016, "upload_time": "2019-08-08T22:17:18", "upload_time_iso_8601": "2019-08-08T22:17:18.919623Z", "url": "https://files.pythonhosted.org/packages/d4/83/96a35030ec73cc28c4f298f7867477758b2f54cb054a5570e6c8804455e6/PyBindGen-0.20.0.tar.gz", "yanked": false}], "0.20.1": [{"comment_text": "", "digests": {"md5": "8009f04d75f99c14a76b783693701697", "sha256": "ad26100451e8ac6cebc3e7247c2cf3790467ad7d1c0c0a04ed3c970ebbc77f11"}, "downloads": -1, "filename": "PyBindGen-0.20.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8009f04d75f99c14a76b783693701697", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 161162, "upload_time": "2019-10-10T15:25:04", "upload_time_iso_8601": "2019-10-10T15:25:04.642873Z", "url": "https://files.pythonhosted.org/packages/7e/18/bb21dd24ec5e40be03c520a045fe451b866ebf64a293b7e9b109934588d4/PyBindGen-0.20.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f5c757732ecf71fb3f9ce4d5d9b1519", "sha256": "5615f6b5d9b8aec86d69acedd050ecb5eb7d1338436c3667e345f800a2658f9f"}, "downloads": -1, "filename": "PyBindGen-0.20.1.tar.gz", "has_sig": false, "md5_digest": "8f5c757732ecf71fb3f9ce4d5d9b1519", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 454926, "upload_time": "2019-10-10T15:25:01", "upload_time_iso_8601": "2019-10-10T15:25:01.366777Z", "url": "https://files.pythonhosted.org/packages/e7/9f/32655239a4d978e92dd59233c4a3fd8e064ef1193487f58c889fe116b780/PyBindGen-0.20.1.tar.gz", "yanked": false}], "0.21.0": [{"comment_text": "", "digests": {"md5": "d0c3a950c3813857984fe28c690b6853", "sha256": "0b19a7da6e17f5e5ee3070bb87f8f95688ebe9da93000b7420ff86f4122889e4"}, "downloads": -1, "filename": "PyBindGen-0.21.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d0c3a950c3813857984fe28c690b6853", "packagetype": "bdist_wheel", "python_version": "3.8", "requires_python": null, "size": 171409, "upload_time": "2020-05-05T09:22:22", "upload_time_iso_8601": "2020-05-05T09:22:22.093594Z", "url": "https://files.pythonhosted.org/packages/bd/c1/c049bcd2d62b2115dc25054463b7f17ce3f09314b6b1f0fa2f5ae2d3826c/PyBindGen-0.21.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c87f02f575c20c5100dc2c7701b4a52", "sha256": "4501aa3954fdac7bb4c049894f8aa1f0f4e1c1f50cc2303feef9bbe3aecfe364"}, "downloads": -1, "filename": "PyBindGen-0.21.0.tar.gz", "has_sig": false, "md5_digest": "2c87f02f575c20c5100dc2c7701b4a52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 468121, "upload_time": "2020-05-05T09:22:20", "upload_time_iso_8601": "2020-05-05T09:22:20.230098Z", "url": "https://files.pythonhosted.org/packages/1e/36/efb8a7a361f7722e175c023408b1999241eca3c3a9bd469a5727e7d219f0/PyBindGen-0.21.0.tar.gz", "yanked": false}], "0.7": [], "0.9": []}, "urls": [{"comment_text": "", "digests": {"md5": "d0c3a950c3813857984fe28c690b6853", "sha256": "0b19a7da6e17f5e5ee3070bb87f8f95688ebe9da93000b7420ff86f4122889e4"}, "downloads": -1, "filename": "PyBindGen-0.21.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d0c3a950c3813857984fe28c690b6853", "packagetype": "bdist_wheel", "python_version": "3.8", "requires_python": null, "size": 171409, "upload_time": "2020-05-05T09:22:22", "upload_time_iso_8601": "2020-05-05T09:22:22.093594Z", "url": "https://files.pythonhosted.org/packages/bd/c1/c049bcd2d62b2115dc25054463b7f17ce3f09314b6b1f0fa2f5ae2d3826c/PyBindGen-0.21.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c87f02f575c20c5100dc2c7701b4a52", "sha256": "4501aa3954fdac7bb4c049894f8aa1f0f4e1c1f50cc2303feef9bbe3aecfe364"}, "downloads": -1, "filename": "PyBindGen-0.21.0.tar.gz", "has_sig": false, "md5_digest": "2c87f02f575c20c5100dc2c7701b4a52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 468121, "upload_time": "2020-05-05T09:22:20", "upload_time_iso_8601": "2020-05-05T09:22:20.230098Z", "url": "https://files.pythonhosted.org/packages/1e/36/efb8a7a361f7722e175c023408b1999241eca3c3a9bd469a5727e7d219f0/PyBindGen-0.21.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:14 2020"}