{"info": {"author": "Louie Lu", "author_email": "git@louie.lu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "IOTA-Python - A Pure-Python implementation of IOTA node\n=======================================================\n\nThe target of this project is to create a pure Python implementation of\nIOTA node.\n\nCurrent Develop Status\n----------------------\n\n-  rocksdb readable\n\nGetting Started\n---------------\n\nDependencies\n~~~~~~~~~~~~\n\n-  rocksdb\n\nYou can see the rocksdb install guide from `facebook/rocksdb -\nINSTALL.md <https://github.com/facebook/rocksdb/blob/master/INSTALL.md>`__.\n\nFor Arch Linux user, simply typing:\n\n::\n\n    $ yaourt -S rocksdb\n\nRequirements\n~~~~~~~~~~~~\n\n-  `python-rocksdb-iota <https://github.com/mlouielu/python-rocksdb>`__\n-  `pyota <https://github.com/iotaledger/iota.lib.py>`__\n\nInstallation of IOTA-Python\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n$ pipenv install iotapy\n^^^^^^^^^^^^^^^^^^^^^^^\n\nTo install IOTA-Python, simply run this simple command in your terminal\nof choice:\n\n::\n\n    $ pipenv install iotapy\n\nGet the Source Code\n^^^^^^^^^^^^^^^^^^^\n\nIOTA-Python is actively developed on GitHub, where the code is `always\navailable <https://github.com/mlouielu/iota-python>`__.\n\nYou can clone the source code from repository:\n\n::\n\n    $ git clone https://github.com/mlouielu/iota-python\n\nOnce you have a copy of source code, you can install the package easily:\n\n::\n\n    $ cd iota-python\n    $ pip install -r requirements.txt\n    $ python setup.py install\n\nTutorials - About RocksDBProvider\n---------------------------------\n\nThis is a tutorial of IOTA-Python to read the database from java IRI,\nand this is what IOTA-Python can do now.\n\nOpen IRI rocksdb\n~~~~~~~~~~~~~~~~\n\nRemember, make sure ``db_path`` and ``db_log_path`` is point to *your*\ndatabase path. At this point, IOTA-Python didn't support writing data\nback to the database (also, it have a lock on it, if you want to write\nit), so ``read_only`` should also be ``True``.\n\n.. code:: python\n\n    >>> import iota\n    >>> import iotapy\n    >>> r = iotapy.storage.providers.rocksdb.RocksDBProvider(\n            db_path='/var/db/iota/mainnetdb',\n            db_log_path='/var/db/iota/mainnetdb.log',\n            read_only=True\n        )\n    >>> r.init()   # Absolute remember to init database\n    >>>\n\nAccess IRI rocksdb\n~~~~~~~~~~~~~~~~~~\n\nNow you open the database, you can get the data inside it! IRI using\nrocksdb column family to separate the data stored. For column family\nlist, please visit this `blog\npost <https://blog.louie.lu/2017/10/31/iota-iri-rocksdb-data-storage-structure/>`__\n\nNow, we can try to open a transaction, here we got an example\ntransaction hash:\n``GTXDTJVUTVSNHYFPJUOWFKTGQTCMNKZPJDJXSWVQWTXYRDZAVZTX9KFBRIMRQEQLMCMVAUKMZWMHA9999``.\n\nYou can check this tx information at this\n`page <https://thetangle.org/transaction/GTXDTJVUTVSNHYFPJUOWFKTGQTCMNKZPJDJXSWVQWTXYRDZAVZTX9KFBRIMRQEQLMCMVAUKMZWMHA9999>`__\n\n.. code:: python\n\n    >>> txh = iota.TransactionHash('GTXDTJVUTVSNHYFPJUOWFKTGQTCMNKZPJDJXSWVQWTXYRDZAVZTX9KFBRIMRQEQLMCMVAUKMZWMHA9999')\n    >>> column_family = 'transaction'\n    >>> tx = r.get(txh, column_family)\n    >>> tx.tag\n    Tag(b'EXAMPLEPYTHONLIB99999999999')\n    >>> tx.bundle_hash\n    BundleHash(b'CRNTWYOGTYKPAHYHNESJOKLRFYQQGCXXUZIZQFTCCLSTZODTRBPZWTX9TVHNDNNIWTULV9GFLAPPSTCC9')\n    >>> tx.signature_message_fragment\n    Fragment(bn    >>> tx.signature_message_fragment.as_string()\n    'Hello! This is a test from Python'\n    >>> tx.as_json_compatible()\n    {\n        'hash_': ...,\n        'signature_message_fragment': ...,\n        'address': Address(b'9TPHVCFLAZTZSDUWFBLCJOZICJKKPVDMAASWJZNFFBKRDDTEOUJHR9JVGTJNI9IYNVISZVXARWJFKUZWC'),\n        'value': 0,\n        'legacy_tag': ...,\n        'timestamp': 1508993435,\n        'current_index': 0,\n        'last_index': 0,\n        'bundle_hash': ...,\n        'trunk_transaction_hash': ...,\n        'branch_transaction_hash': ...,\n        'tag': Tag(b'EXAMPLEPYTHONLIB99999999999'),\n        'attachment_timestamp': 1508993445508,\n        'attachment_timestamp_lower_bound': 0,\n        'attachment_timestamp_upper_bound': 12,\n        'nonce': Nonce(b'HYNAKUFLKW9UZXXIDJFGUMUDDVX')\n    }\n    >>>\n\nIf you are using method such as ``RocksDBProvider.get``,\n``RocksDBProvider.latest``, please use the following column family name:\n\n::\n\n    address\n    approvee\n    bundle\n    milestone\n    state_diff\n    tag\n    transaction\n    transaction_metadata\n\nThe full list of column family name can be found at\n``RocksDBProvider.column_family_names``, but this list is used for low\nlevel database access, it only used at ``RocksDBProvider.db``.\n\n::\n\n    b'default'\n    b'transaction'\n    b'transaction-metadata'\n    b'milestone'\n    b'stateDiff'\n    b'address'\n    b'approvee'\n    b'bundle'\n    b'tag'\n\nExample of ``RocksDBProvider`` methods:\n\n.. code:: python\n\n    # Get address' transaction record\n    >>> adr = iota.Address('9TPHVCFLAZTZSDUWFBLCJOZICJKKPVDMAASWJZNFFBKRDDTEOUJHR9JVGTJNI9IYNVISZVXARWJFKUZWC')\n    >>> r.get(adr,'address')\n    <generator object get at 0x7eff2b341518>\n\n    # Get next address (in database)\n    >>> r.next(adr, 'address')\n    (Address(b'9BPQJPGAMDVKAQ9FDPQSVINPMHSIUUXKYMIZQGPBDGGEUZGLEVFIWUYO9MEIPOYUBYVQGJCFYRWTQENCZ'), <generator object get at 0x7eff2b3415c8>)\n\n    # Get first milestone\n    >>> r.first('milestone')\n    (243001, (243001, TransactionHash(b'9PPVIKDMKUDXTYJFF9YNWUPPMOYZTYKRBFGLGDCNNNIMWAMGVJGEHOCOUDYRVYPPSDKDKDQXUBMYA9999')))\n\n    # Get latest milestone\n    >>> r.latest('milestone')\n    (265486, (265486, TransactionHash(b'TFWZVEQZGQGBUBKMFA9YKBVDGBWWMXWCGGYYAGPZKGXWKJQRUNSMXJBSVVGYRJKCS9GNWULQSMAGZ9999')))\n\n    # Get next milestone\n    >>> key, value = r.first('milestone')\n    >>> r.next(key, 'milestone')\n    (243002, (243002, TransactionHash(b'XHIOO9EJ9H9ULPJM9MIJSTPHNPIUAAJ9NLYHZLHDBCSECCJVRGDWHTRUEUIQXWVLBYOCBNHFWWWPA9999')))\n\nLow level db access (something you don't need to touch at this moment):\n\n.. code:: python\n\n    >>> column_handler = r.db.column_family_handles[b'transaction-metadata']\n    >>> txh = iota.TransactionHash('GTXDTJVUTVSNHYFPJUOWFKTGQTCMNKZPJDJXSWVQWTXYRDZAVZTX9KFBRIMRQEQLMCMVAUKMZWMHA9999')\n    >>> key = iotapy.storage.converter.from_trits_to_binary(txh.as_trits())\n    >>> value = r.db.get(key, column_handler)\n    b\"6\\x8d\\xd6\\xb2v\\xf7\\xde9\\xcb\\xab\\x07\\x1f\\xb9\\xfc\\x1e@s\\xcfpU\\xb8\\x17\\xad2<!!:\\x0e\\xc6\\xef\\xe6Z\\xc5=\\x8e\\tl\\x8a\\xfb\\x98\\xd3\\x18\\x94Y<\\x9e\\xdc\\x03\\x03\\x87\\xda\\xad\\xc3\\xec\\xd5\\xb1\\xf1\\x9c_W*%3\\xe32\\x1d\\xac\\x9dQ\\xe4\\xc0\\x19T\\x98\\xf5`\\xeb\\x0f\\xda\\xa3\\xe36\\x9f\\x8e\\x98\\xd8\\xdfJt\\xfe\\xb6v\\x9d\\x10\\xea\\x1c\\x00\\xdc\\xf6>3Wf\\xd52\\xb5\\xe0\\xc4\\xb7\\xd5\\xb6\\xcb\\xb7\\xc1\\xdb$\\xad%\\xd4\\xa2\\xf3\\xefI'\\xd5\\xa7Y\\xe2\\xa5]G\\x9e\\xb82\\xd7\\x1f&\\x9cR4\\xa7\\x13\\xff\\x00\\x00\\x00!\\x0c;\\xa2\\x1b\\xc6-\\xa0\\xd5\\xbe\\xaa*\\xb1\\x95\\xbcUI\\xb5l\\x89\\xa1\\xe3\\xacn\\x90@\\x10\\xdf\\xf9Un\\xb7\\xb1\\x93\\x9b\\xc7\\x017:o\\xba\\xd8\\xfdq\\xff\\xe2\\x00\\x00\\x00\\xb4T\\xa1\\xa01\\xc0\\xb7\\xd8U\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00Y\\xf1i\\x9b\\xb4T\\xa1\\xa01\\xc0\\xb7\\xd8U\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01_W\\x04\\xae\\x84\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0c\\x00\\x00\\x00\\x01\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x00Y\\xf1i\\xa5\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\xd6\\xe0local\"\n    >>>\n\nEXPLOSION! An example of exploring the IRI database!\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. figure:: https://pm1.narvii.com/6258/7f113d43b699f954c3d65df5aa5f397936363099_hq.jpg\n   :alt: \n\n*EXPLOSION!*\n\nGlade you are here, now you gain the full access power of the IRI\ndatabase.\n\nWe all know that IOTA is a DAG, that is, theoretically speaking, we can\nstart from a transaction, and go to its parent, and its parent, and its\nparent...and we will finally get to the genesis address / node / block\nwhatever.\n\nHere is a small script that I trying to find this answer:\n\n.. code:: python\n\n    import time\n    import iota\n    import iotapy\n\n\n    # Initialize the database\n    r = iotapy.storage.providers.rocksdb.RocksDBProvider(\n            db_path='/var/db/iota/mainnetdb',\n            db_log_path='/var/db/iota/mainnetdb.log',\n            read_only=True)\n    r.init()\n\n\n    # We will start from this transaction\n    txh = iota.TransactionHash('UNUK99RCIWLUQ9WMUT9MPQSZCHTUMGN9IWOCOXWMNPICCCQKLLNIIE9UIFGKZLHRI9QAOEQXQJLL99999')\n    tx = r.get(txh, 'transaction')\n\n    # Stop at here\n    EMPTY = iota.TransactionHash('9' * 81)\n\n    # Go to find the genesis!\n    i = 0\n    while True:\n        i += 1\n        if i % 100 == 0:\n            print(txh, time.ctime(tx.timestamp))\n\n        # Branch is outside the bundle and trunk is in the bundle\n        # So we choose branch at here\n        if tx.branch_transaction_hash != EMPTY:\n            txh = tx.branch_transaction_hash\n            tx = r.get(tx.branch_transaction_hash, 'transaction')\n        else:\n            # This is the end of the journey\n            print(\"\\nProbably the genesis?\")\n            print(txh)\n            break\n\nIt will run like:\n\n::\n\n    NQRZKAE9CDFGJUPOMTHCVPOQE9LENTSHNJYDXCWZJ9IRXKLWTGRIHYZCZWSEIOKQFVBBEBNTXHNBA9999 Thu Oct 26 11:23:31 2017\n    KMRPH9BVZVFRCEGDEROQBMZTNOQECYRKIJJ9MWGNOUMWVPLFIJ9PRANLDXSTZCVJGHTXTYCWYGJFZ9999 Thu Oct 26 08:40:52 2017\n    JQLXELCKS9QSNWZNHJJICAQMGZRTGFPGNRRNJWTBEPZWKEHLJINXVLPOMMQCMQSOEUZGRHSKBNWEA9999 Thu Oct 26 06:40:31 2017\n    IOKLUAGDGKSU9RGHZXCQJIBRTFPCNVCIVG9TQNIGE9DVIYIUDCEVTMPYBZQXHNYLNSNFTXDWNH9BA9999 Thu Oct 26 05:41:28 2017\n    AUEDLXAJZPW9URCQZABSRNJGYOOSDG9OFHUMXINMVULHOIVWOBDLSSS9DPNTSXHTDKG9MGKMUESD99999 Thu Oct 26 04:38:37 2017\n    DZRYEISPEUXXVQMGBSPVMOFFTWPDYQ9EWVYZUQTNX9NPSEWRGNMSZMY9BOTABSLPCTKMIGWAAIPJA9999 Thu Oct 26 03:45:03 2017\n    UPAIBMKZEOTUEHHLEYZEEKZFLDGWHWJ9UZLGLRV9NGZPWSGWY9DPITWSDZPQQZDBOYFJDLJYTDKXZ9999 Thu Oct 26 02:51:53 2017\n    MZPRET9XVFBK9LQZLFNN9UGQLLBYAVGAKJGODQIKVZWHPDLZQLOTFMMGEAGSGWGPEYBLJLLJJXOEZ9999 Thu Oct 26 02:08:16 2017\n    XPMVSHVFNKYSTKPSHLPHDQCKEGWTERKEHTDRUKIQRE9KDDQVAQHUOQHYOPTRZGIIQHLYGYCPTLAEA9999 Thu Oct 26 01:17:58 2017\n    MHDQIXDMBOFHCOMLGNHPSJGNIXIDAQQNW9CJKSXPYIOIITQES99KNYTPNPOQBTVZQXYOKBVEIZB999999 Thu Oct 26 00:37:14 2017\n    ...\n    GXWKBVNFPFX99PGDCH9EQZMLHITMBFAPDQRNNGNGOOXYXEEYYDDDFWJRDQINOEJFSITMEUY9VMVO99999 Tue Oct 24 06:37:13 2017\n    UAPTGGCKCGCPWGVQEKBCPKNQUWOPVRBAFAQYHSDU9AJMVINJFVZSM9URBYUAIHCPKOJRBWSOOSHLZ9999 Tue Oct 24 06:16:17 2017\n    FPPJWECLHTF9HGGEMNH9FUIAVYJWDOIOXYFRRJ9S9HENTSESTGJYLYOSNNJGKDOUOGXOWFURNDNEZ9999 Tue Oct 24 05:56:10 2017\n    HSDV9SKUYCBWNXFIHKLNAXEVPDTGLSPMTMTXCYISS9M9SPL9DERO9GCQLNWY9KBIHOLPYBCTCYECA9999 Tue Oct 24 05:35:44 2017\n    LQPVJDHGQPILXVUPCCZGJMCAQHROJLHQKBILEUDBKQAEHMHEOEK9GMRDWEKVRXRB99TOYQQLTZDGZ9999 Tue Oct 24 05:14:13 2017\n    FOCMONRMEOBQEBDOJOQPOOPLRIYCI9PMSJXXNEWAZPBRCDGZTZB9KI9SSMKKFBGBDONMILXWOBEFA9999 Tue Oct 24 04:53:03 2017\n    BEFSRMKVEWXXHERTONXCQLOAVQYVRPFFZCQIDGUOLLZCFLTRPRHEVYNAPQFKGJOCDAJYNVUJDQIRZ9999 Tue Oct 24 04:32:48 2017\n    QVHPAOWGDFTTLYQERDRNBBNCJJCWTJSDBIKBLDYZOLJ9PWFWFWUXP9DGPKTLRZDFZNLFRYXSZF9O99999 Tue Oct 24 04:12:07 2017\n\n    Probably the genesis?\n    9PPVIKDMKUDXTYJFF9YNWUPPMOYZTYKRBFGLGDCNNNIMWAMGVJGEHOCOUDYRVYPPSDKDKDQXUBMYA9999\n\nCheck this transaction on\n`thetangle <https://thetangle.org/transaction/9PPVIKDMKUDXTYJFF9YNWUPPMOYZTYKRBFGLGDCNNNIMWAMGVJGEHOCOUDYRVYPPSDKDKDQXUBMYA9999>`__\n\nDocumentation\n-------------\n\n[STRIKEOUT:Source code is your best friend]\n\nDocumentation is still under construct.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mlouielu/iota-python", "keywords": "", "license": "", "maintainer": "Louie Lu", "maintainer_email": "git@louie.lu", "name": "iotapy", "package_url": "https://pypi.org/project/iotapy/", "platform": "", "project_url": "https://pypi.org/project/iotapy/", "project_urls": {"Homepage": "https://github.com/mlouielu/iota-python"}, "release_url": "https://pypi.org/project/iotapy/0.1.2/", "requires_dist": ["pyota (>= 2.0.1)", "python-rocksdb-iota (>= 0.7.2)"], "requires_python": ">= 3", "summary": "A Pure-Python implementation of IOTA node", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The target of this project is to create a pure Python implementation of\nIOTA node.</p>\n<div id=\"current-develop-status\">\n<h2>Current Develop Status</h2>\n<ul>\n<li>rocksdb readable</li>\n</ul>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<ul>\n<li>rocksdb</li>\n</ul>\n<p>You can see the rocksdb install guide from <a href=\"https://github.com/facebook/rocksdb/blob/master/INSTALL.md\" rel=\"nofollow\">facebook/rocksdb -\nINSTALL.md</a>.</p>\n<p>For Arch Linux user, simply typing:</p>\n<pre>$ yaourt -S rocksdb\n</pre>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li><a href=\"https://github.com/mlouielu/python-rocksdb\" rel=\"nofollow\">python-rocksdb-iota</a></li>\n<li><a href=\"https://github.com/iotaledger/iota.lib.py\" rel=\"nofollow\">pyota</a></li>\n</ul>\n</div>\n<div id=\"installation-of-iota-python\">\n<h3>Installation of IOTA-Python</h3>\n<div id=\"pipenv-install-iotapy\">\n<h4>$ pipenv install iotapy</h4>\n<p>To install IOTA-Python, simply run this simple command in your terminal\nof choice:</p>\n<pre>$ pipenv install iotapy\n</pre>\n</div>\n<div id=\"get-the-source-code\">\n<h4>Get the Source Code</h4>\n<p>IOTA-Python is actively developed on GitHub, where the code is <a href=\"https://github.com/mlouielu/iota-python\" rel=\"nofollow\">always\navailable</a>.</p>\n<p>You can clone the source code from repository:</p>\n<pre>$ git clone https://github.com/mlouielu/iota-python\n</pre>\n<p>Once you have a copy of source code, you can install the package easily:</p>\n<pre>$ cd iota-python\n$ pip install -r requirements.txt\n$ python setup.py install\n</pre>\n</div>\n</div>\n</div>\n<div id=\"tutorials-about-rocksdbprovider\">\n<h2>Tutorials - About RocksDBProvider</h2>\n<p>This is a tutorial of IOTA-Python to read the database from java IRI,\nand this is what IOTA-Python can do now.</p>\n<div id=\"open-iri-rocksdb\">\n<h3>Open IRI rocksdb</h3>\n<p>Remember, make sure <tt>db_path</tt> and <tt>db_log_path</tt> is point to <em>your</em>\ndatabase path. At this point, IOTA-Python didn\u2019t support writing data\nback to the database (also, it have a lock on it, if you want to write\nit), so <tt>read_only</tt> should also be <tt>True</tt>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">iota</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">iotapy</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">iotapy</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">providers</span><span class=\"o\">.</span><span class=\"n\">rocksdb</span><span class=\"o\">.</span><span class=\"n\">RocksDBProvider</span><span class=\"p\">(</span>\n        <span class=\"n\">db_path</span><span class=\"o\">=</span><span class=\"s1\">'/var/db/iota/mainnetdb'</span><span class=\"p\">,</span>\n        <span class=\"n\">db_log_path</span><span class=\"o\">=</span><span class=\"s1\">'/var/db/iota/mainnetdb.log'</span><span class=\"p\">,</span>\n        <span class=\"n\">read_only</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>   <span class=\"c1\"># Absolute remember to init database</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n</div>\n<div id=\"access-iri-rocksdb\">\n<h3>Access IRI rocksdb</h3>\n<p>Now you open the database, you can get the data inside it! IRI using\nrocksdb column family to separate the data stored. For column family\nlist, please visit this <a href=\"https://blog.louie.lu/2017/10/31/iota-iri-rocksdb-data-storage-structure/\" rel=\"nofollow\">blog\npost</a></p>\n<p>Now, we can try to open a transaction, here we got an example\ntransaction hash:\n<tt>GTXDTJVUTVSNHYFPJUOWFKTGQTCMNKZPJDJXSWVQWTXYRDZAVZTX9KFBRIMRQEQLMCMVAUKMZWMHA9999</tt>.</p>\n<p>You can check this tx information at this\n<a href=\"https://thetangle.org/transaction/GTXDTJVUTVSNHYFPJUOWFKTGQTCMNKZPJDJXSWVQWTXYRDZAVZTX9KFBRIMRQEQLMCMVAUKMZWMHA9999\" rel=\"nofollow\">page</a></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">txh</span> <span class=\"o\">=</span> <span class=\"n\">iota</span><span class=\"o\">.</span><span class=\"n\">TransactionHash</span><span class=\"p\">(</span><span class=\"s1\">'GTXDTJVUTVSNHYFPJUOWFKTGQTCMNKZPJDJXSWVQWTXYRDZAVZTX9KFBRIMRQEQLMCMVAUKMZWMHA9999'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">column_family</span> <span class=\"o\">=</span> <span class=\"s1\">'transaction'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">txh</span><span class=\"p\">,</span> <span class=\"n\">column_family</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">tag</span>\n<span class=\"n\">Tag</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'EXAMPLEPYTHONLIB99999999999'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">bundle_hash</span>\n<span class=\"n\">BundleHash</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'CRNTWYOGTYKPAHYHNESJOKLRFYQQGCXXUZIZQFTCCLSTZODTRBPZWTX9TVHNDNNIWTULV9GFLAPPSTCC9'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">signature_message_fragment</span>\n<span class=\"n\">Fragment</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"sspan><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">signature_message_fragment</span><span class=\"o\">.</span><span class=\"n\">as_string</span><span class=\"p\">()</span>\n<span class=\"s1\">'Hello! This is a test from Python'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">as_json_compatible</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"s1\">'hash_'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'signature_message_fragment'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'address'</span><span class=\"p\">:</span> <span class=\"n\">Address</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'9TPHVCFLAZTZSDUWFBLCJOZICJKKPVDMAASWJZNFFBKRDDTEOUJHR9JVGTJNI9IYNVISZVXARWJFKUZWC'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'legacy_tag'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"mi\">1508993435</span><span class=\"p\">,</span>\n    <span class=\"s1\">'current_index'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'last_index'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'bundle_hash'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'trunk_transaction_hash'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'branch_transaction_hash'</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'tag'</span><span class=\"p\">:</span> <span class=\"n\">Tag</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'EXAMPLEPYTHONLIB99999999999'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'attachment_timestamp'</span><span class=\"p\">:</span> <span class=\"mi\">1508993445508</span><span class=\"p\">,</span>\n    <span class=\"s1\">'attachment_timestamp_lower_bound'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'attachment_timestamp_upper_bound'</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span>\n    <span class=\"s1\">'nonce'</span><span class=\"p\">:</span> <span class=\"n\">Nonce</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'HYNAKUFLKW9UZXXIDJFGUMUDDVX'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>If you are using method such as <tt>RocksDBProvider.get</tt>,\n<tt>RocksDBProvider.latest</tt>, please use the following column family name:</p>\n<pre>address\napprovee\nbundle\nmilestone\nstate_diff\ntag\ntransaction\ntransaction_metadata\n</pre>\n<p>The full list of column family name can be found at\n<tt>RocksDBProvider.column_family_names</tt>, but this list is used for low\nlevel database access, it only used at <tt>RocksDBProvider.db</tt>.</p>\n<pre>b'default'\nb'transaction'\nb'transaction-metadata'\nb'milestone'\nb'stateDiff'\nb'address'\nb'approvee'\nb'bundle'\nb'tag'\n</pre>\n<p>Example of <tt>RocksDBProvider</tt> methods:</p>\n<pre><span class=\"c1\"># Get address' transaction record</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">adr</span> <span class=\"o\">=</span> <span class=\"n\">iota</span><span class=\"o\">.</span><span class=\"n\">Address</span><span class=\"p\">(</span><span class=\"s1\">'9TPHVCFLAZTZSDUWFBLCJOZICJKKPVDMAASWJZNFFBKRDDTEOUJHR9JVGTJNI9IYNVISZVXARWJFKUZWC'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">adr</span><span class=\"p\">,</span><span class=\"s1\">'address'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">generator</span> <span class=\"nb\">object</span> <span class=\"n\">get</span> <span class=\"n\">at</span> <span class=\"mh\">0x7eff2b341518</span><span class=\"o\">&gt;</span>\n\n<span class=\"c1\"># Get next address (in database)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">(</span><span class=\"n\">adr</span><span class=\"p\">,</span> <span class=\"s1\">'address'</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"n\">Address</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'9BPQJPGAMDVKAQ9FDPQSVINPMHSIUUXKYMIZQGPBDGGEUZGLEVFIWUYO9MEIPOYUBYVQGJCFYRWTQENCZ'</span><span class=\"p\">),</span> <span class=\"o\">&lt;</span><span class=\"n\">generator</span> <span class=\"nb\">object</span> <span class=\"n\">get</span> <span class=\"n\">at</span> <span class=\"mh\">0x7eff2b3415c8</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get first milestone</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">(</span><span class=\"s1\">'milestone'</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mi\">243001</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">243001</span><span class=\"p\">,</span> <span class=\"n\">TransactionHash</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'9PPVIKDMKUDXTYJFF9YNWUPPMOYZTYKRBFGLGDCNNNIMWAMGVJGEHOCOUDYRVYPPSDKDKDQXUBMYA9999'</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Get latest milestone</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">latest</span><span class=\"p\">(</span><span class=\"s1\">'milestone'</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mi\">265486</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">265486</span><span class=\"p\">,</span> <span class=\"n\">TransactionHash</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'TFWZVEQZGQGBUBKMFA9YKBVDGBWWMXWCGGYYAGPZKGXWKJQRUNSMXJBSVVGYRJKCS9GNWULQSMAGZ9999'</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Get next milestone</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">(</span><span class=\"s1\">'milestone'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"s1\">'milestone'</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mi\">243002</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">243002</span><span class=\"p\">,</span> <span class=\"n\">TransactionHash</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'XHIOO9EJ9H9ULPJM9MIJSTPHNPIUAAJ9NLYHZLHDBCSECCJVRGDWHTRUEUIQXWVLBYOCBNHFWWWPA9999'</span><span class=\"p\">)))</span>\n</pre>\n<p>Low level db access (something you don\u2019t need to touch at this moment):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">column_handler</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">column_family_handles</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'transaction-metadata'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">txh</span> <span class=\"o\">=</span> <span class=\"n\">iota</span><span class=\"o\">.</span><span class=\"n\">TransactionHash</span><span class=\"p\">(</span><span class=\"s1\">'GTXDTJVUTVSNHYFPJUOWFKTGQTCMNKZPJDJXSWVQWTXYRDZAVZTX9KFBRIMRQEQLMCMVAUKMZWMHA9999'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">iotapy</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">converter</span><span class=\"o\">.</span><span class=\"n\">from_trits_to_binary</span><span class=\"p\">(</span><span class=\"n\">txh</span><span class=\"o\">.</span><span class=\"n\">as_trits</span><span class=\"p\">())</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">column_handler</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s2\">\"6</span><span class=\"se\">\\x8d\\xd6\\xb2</span><span class=\"s2\">v</span><span class=\"se\">\\xf7\\xde</span><span class=\"s2\">9</span><span class=\"se\">\\xcb\\xab\\x07\\x1f\\xb9\\xfc\\x1e</span><span class=\"s2\">@s</span><span class=\"se\">\\xcf</span><span class=\"s2\">pU</span><span class=\"se\">\\xb8\\x17\\xad</span><span class=\"s2\">2&lt;!!:</span><span class=\"se\">\\x0e\\xc6\\xef\\xe6</span><span class=\"s2\">Z</span><span class=\"se\">\\xc5</span><span class=\"s2\">=</span><span class=\"se\">\\x8e\\t</span><span class=\"s2\">l</span><span class=\"se\">\\x8a\\xfb\\x98\\xd3\\x18\\x94</span><span class=\"s2\">Y&lt;</span><span class=\"se\">\\x9e\\xdc\\x03\\x03\\x87\\xda\\xad\\xc3\\xec\\xd5\\xb1\\xf1\\x9c</span><span class=\"s2\">_W*%3</span><span class=\"se\">\\xe3</span><span class=\"s2\">2</span><span class=\"se\">\\x1d\\xac\\x9d</span><span class=\"s2\">Q</span><span class=\"se\">\\xe4\\xc0\\x19</span><span class=\"s2\">T</span><span class=\"se\">\\x98\\xf5</span><span class=\"s2\">`</span><span class=\"se\">\\xeb\\x0f\\xda\\xa3\\xe3</span><span class=\"s2\">6</span><span class=\"se\">\\x9f\\x8e\\x98\\xd8\\xdf</span><span class=\"s2\">Jt</span><span class=\"se\">\\xfe\\xb6</span><span class=\"s2\">v</span><span class=\"se\">\\x9d\\x10\\xea\\x1c\\x00\\xdc\\xf6</span><span class=\"s2\">&gt;3Wf</span><span class=\"se\">\\xd5</span><span class=\"s2\">2</span><span class=\"se\">\\xb5\\xe0\\xc4\\xb7\\xd5\\xb6\\xcb\\xb7\\xc1\\xdb</span><span class=\"s2\">$</span><span class=\"se\">\\xad</span><span class=\"s2\">%</span><span class=\"se\">\\xd4\\xa2\\xf3\\xef</span><span class=\"s2\">I'</span><span class=\"se\">\\xd5\\xa7</span><span class=\"s2\">Y</span><span class=\"se\">\\xe2\\xa5</span><span class=\"s2\">]G</span><span class=\"se\">\\x9e\\xb8</span><span class=\"s2\">2</span><span class=\"se\">\\xd7\\x1f</span><span class=\"s2\">&amp;</span><span class=\"se\">\\x9c</span><span class=\"s2\">R4</span><span class=\"se\">\\xa7\\x13\\xff\\x00\\x00\\x00</span><span class=\"s2\">!</span><span class=\"se\">\\x0c</span><span class=\"s2\">;</span><span class=\"se\">\\xa2\\x1b\\xc6</span><span class=\"s2\">-</span><span class=\"se\">\\xa0\\xd5\\xbe\\xaa</span><span class=\"s2\">*</span><span class=\"se\">\\xb1\\x95\\xbc</span><span class=\"s2\">UI</span><span class=\"se\">\\xb5</span><span class=\"s2\">l</span><span class=\"se\">\\x89\\xa1\\xe3\\xac</span><span class=\"s2\">n</span><span class=\"se\">\\x90</span><span class=\"s2\">@</span><span class=\"se\">\\x10\\xdf\\xf9</span><span class=\"s2\">Un</span><span class=\"se\">\\xb7\\xb1\\x93\\x9b\\xc7\\x01</span><span class=\"s2\">7:o</span><span class=\"se\">\\xba\\xd8\\xfd</span><span class=\"s2\">q</span><span class=\"se\">\\xff\\xe2\\x00\\x00\\x00\\xb4</span><span class=\"s2\">T</span><span class=\"se\">\\xa1\\xa0</span><span class=\"s2\">1</span><span class=\"se\">\\xc0\\xb7\\xd8</span><span class=\"s2\">U</span><span class=\"se\">\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00</span><span class=\"s2\">Y</span><span class=\"se\">\\xf1</span><span class=\"s2\">i</span><span class=\"se\">\\x9b\\xb4</span><span class=\"s2\">T</span><span class=\"se\">\\xa1\\xa0</span><span class=\"s2\">1</span><span class=\"se\">\\xc0\\xb7\\xd8</span><span class=\"s2\">U</span><span class=\"se\">\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01</span><span class=\"s2\">_W</span><span class=\"se\">\\x04\\xae\\x84\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0c\\x00\\x00\\x00\\x01\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x00</span><span class=\"s2\">Y</span><span class=\"se\">\\xf1</span><span class=\"s2\">i</span><span class=\"se\">\\xa5\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x03\\xd6\\xe0</span><span class=\"s2\">local\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n</div>\n<div id=\"explosion-an-example-of-exploring-the-iri-database\">\n<h3>EXPLOSION! An example of exploring the IRI database!</h3>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42cda7ac11ec55979201a63bdaf61b33ff663eb0/68747470733a2f2f706d312e6e61727669692e636f6d2f363235382f376631313364343362363939663935346333643635646635616135663339373933363336333039395f68712e6a7067\">\n</div>\n<p><em>EXPLOSION!</em></p>\n<p>Glade you are here, now you gain the full access power of the IRI\ndatabase.</p>\n<p>We all know that IOTA is a DAG, that is, theoretically speaking, we can\nstart from a transaction, and go to its parent, and its parent, and its\nparent\u2026and we will finally get to the genesis address / node / block\nwhatever.</p>\n<p>Here is a small script that I trying to find this answer:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">iota</span>\n<span class=\"kn\">import</span> <span class=\"nn\">iotapy</span>\n\n\n<span class=\"c1\"># Initialize the database</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">iotapy</span><span class=\"o\">.</span><span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">providers</span><span class=\"o\">.</span><span class=\"n\">rocksdb</span><span class=\"o\">.</span><span class=\"n\">RocksDBProvider</span><span class=\"p\">(</span>\n        <span class=\"n\">db_path</span><span class=\"o\">=</span><span class=\"s1\">'/var/db/iota/mainnetdb'</span><span class=\"p\">,</span>\n        <span class=\"n\">db_log_path</span><span class=\"o\">=</span><span class=\"s1\">'/var/db/iota/mainnetdb.log'</span><span class=\"p\">,</span>\n        <span class=\"n\">read_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># We will start from this transaction</span>\n<span class=\"n\">txh</span> <span class=\"o\">=</span> <span class=\"n\">iota</span><span class=\"o\">.</span><span class=\"n\">TransactionHash</span><span class=\"p\">(</span><span class=\"s1\">'UNUK99RCIWLUQ9WMUT9MPQSZCHTUMGN9IWOCOXWMNPICCCQKLLNIIE9UIFGKZLHRI9QAOEQXQJLL99999'</span><span class=\"p\">)</span>\n<span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">txh</span><span class=\"p\">,</span> <span class=\"s1\">'transaction'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Stop at here</span>\n<span class=\"n\">EMPTY</span> <span class=\"o\">=</span> <span class=\"n\">iota</span><span class=\"o\">.</span><span class=\"n\">TransactionHash</span><span class=\"p\">(</span><span class=\"s1\">'9'</span> <span class=\"o\">*</span> <span class=\"mi\">81</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Go to find the genesis!</span>\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">100</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">txh</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># Branch is outside the bundle and trunk is in the bundle</span>\n    <span class=\"c1\"># So we choose branch at here</span>\n    <span class=\"k\">if</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">branch_transaction_hash</span> <span class=\"o\">!=</span> <span class=\"n\">EMPTY</span><span class=\"p\">:</span>\n        <span class=\"n\">txh</span> <span class=\"o\">=</span> <span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">branch_transaction_hash</span>\n        <span class=\"n\">tx</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"o\">.</span><span class=\"n\">branch_transaction_hash</span><span class=\"p\">,</span> <span class=\"s1\">'transaction'</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># This is the end of the journey</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Probably the genesis?\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">txh</span><span class=\"p\">)</span>\n        <span class=\"k\">break</span>\n</pre>\n<p>It will run like:</p>\n<pre>NQRZKAE9CDFGJUPOMTHCVPOQE9LENTSHNJYDXCWZJ9IRXKLWTGRIHYZCZWSEIOKQFVBBEBNTXHNBA9999 Thu Oct 26 11:23:31 2017\nKMRPH9BVZVFRCEGDEROQBMZTNOQECYRKIJJ9MWGNOUMWVPLFIJ9PRANLDXSTZCVJGHTXTYCWYGJFZ9999 Thu Oct 26 08:40:52 2017\nJQLXELCKS9QSNWZNHJJICAQMGZRTGFPGNRRNJWTBEPZWKEHLJINXVLPOMMQCMQSOEUZGRHSKBNWEA9999 Thu Oct 26 06:40:31 2017\nIOKLUAGDGKSU9RGHZXCQJIBRTFPCNVCIVG9TQNIGE9DVIYIUDCEVTMPYBZQXHNYLNSNFTXDWNH9BA9999 Thu Oct 26 05:41:28 2017\nAUEDLXAJZPW9URCQZABSRNJGYOOSDG9OFHUMXINMVULHOIVWOBDLSSS9DPNTSXHTDKG9MGKMUESD99999 Thu Oct 26 04:38:37 2017\nDZRYEISPEUXXVQMGBSPVMOFFTWPDYQ9EWVYZUQTNX9NPSEWRGNMSZMY9BOTABSLPCTKMIGWAAIPJA9999 Thu Oct 26 03:45:03 2017\nUPAIBMKZEOTUEHHLEYZEEKZFLDGWHWJ9UZLGLRV9NGZPWSGWY9DPITWSDZPQQZDBOYFJDLJYTDKXZ9999 Thu Oct 26 02:51:53 2017\nMZPRET9XVFBK9LQZLFNN9UGQLLBYAVGAKJGODQIKVZWHPDLZQLOTFMMGEAGSGWGPEYBLJLLJJXOEZ9999 Thu Oct 26 02:08:16 2017\nXPMVSHVFNKYSTKPSHLPHDQCKEGWTERKEHTDRUKIQRE9KDDQVAQHUOQHYOPTRZGIIQHLYGYCPTLAEA9999 Thu Oct 26 01:17:58 2017\nMHDQIXDMBOFHCOMLGNHPSJGNIXIDAQQNW9CJKSXPYIOIITQES99KNYTPNPOQBTVZQXYOKBVEIZB999999 Thu Oct 26 00:37:14 2017\n...\nGXWKBVNFPFX99PGDCH9EQZMLHITMBFAPDQRNNGNGOOXYXEEYYDDDFWJRDQINOEJFSITMEUY9VMVO99999 Tue Oct 24 06:37:13 2017\nUAPTGGCKCGCPWGVQEKBCPKNQUWOPVRBAFAQYHSDU9AJMVINJFVZSM9URBYUAIHCPKOJRBWSOOSHLZ9999 Tue Oct 24 06:16:17 2017\nFPPJWECLHTF9HGGEMNH9FUIAVYJWDOIOXYFRRJ9S9HENTSESTGJYLYOSNNJGKDOUOGXOWFURNDNEZ9999 Tue Oct 24 05:56:10 2017\nHSDV9SKUYCBWNXFIHKLNAXEVPDTGLSPMTMTXCYISS9M9SPL9DERO9GCQLNWY9KBIHOLPYBCTCYECA9999 Tue Oct 24 05:35:44 2017\nLQPVJDHGQPILXVUPCCZGJMCAQHROJLHQKBILEUDBKQAEHMHEOEK9GMRDWEKVRXRB99TOYQQLTZDGZ9999 Tue Oct 24 05:14:13 2017\nFOCMONRMEOBQEBDOJOQPOOPLRIYCI9PMSJXXNEWAZPBRCDGZTZB9KI9SSMKKFBGBDONMILXWOBEFA9999 Tue Oct 24 04:53:03 2017\nBEFSRMKVEWXXHERTONXCQLOAVQYVRPFFZCQIDGUOLLZCFLTRPRHEVYNAPQFKGJOCDAJYNVUJDQIRZ9999 Tue Oct 24 04:32:48 2017\nQVHPAOWGDFTTLYQERDRNBBNCJJCWTJSDBIKBLDYZOLJ9PWFWFWUXP9DGPKTLRZDFZNLFRYXSZF9O99999 Tue Oct 24 04:12:07 2017\n\nProbably the genesis?\n9PPVIKDMKUDXTYJFF9YNWUPPMOYZTYKRBFGLGDCNNNIMWAMGVJGEHOCOUDYRVYPPSDKDKDQXUBMYA9999\n</pre>\n<p>Check this transaction on\n<a href=\"https://thetangle.org/transaction/9PPVIKDMKUDXTYJFF9YNWUPPMOYZTYKRBFGLGDCNNNIMWAMGVJGEHOCOUDYRVYPPSDKDKDQXUBMYA9999\" rel=\"nofollow\">thetangle</a></p>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>[STRIKEOUT:Source code is your best friend]</p>\n<p>Documentation is still under construct.</p>\n</div>\n\n          </div>"}, "last_serial": 3300565, "releases": {"0.1": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "baada18af4b3c5b7cf726ee2da9dabab", "sha256": "d07481ea4e7e877afac9d5e29f36f978b18b17b4d696a0cce2559ffb72bf7b92"}, "downloads": -1, "filename": "iotapy-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "baada18af4b3c5b7cf726ee2da9dabab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 3", "size": 27483, "upload_time": "2017-11-02T15:36:43", "upload_time_iso_8601": "2017-11-02T15:36:43.022514Z", "url": "https://files.pythonhosted.org/packages/85/4f/5df9f3fc54452999b5c6d893c20c221b112712a5a5edbac4f8cb36d51133/iotapy-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c27440ed36448ef357ab9cfcb2902503", "sha256": "5005f8863e7c278f86b8743ce9c2bf1836df289ee6e99e813fbf61d1487a3ede"}, "downloads": -1, "filename": "iotapy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c27440ed36448ef357ab9cfcb2902503", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3", "size": 13544, "upload_time": "2017-11-02T15:36:45", "upload_time_iso_8601": "2017-11-02T15:36:45.074436Z", "url": "https://files.pythonhosted.org/packages/28/40/313124cf0335a9130198e6fe4525a7b5c06221c354f7fa4ca932b23addc9/iotapy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d4275e537d27a7a2520bdf48772a6c32", "sha256": "4bddae98c9084fdd785d0b4ef53c94c47678b351bf12a62411c97e30bd8aacdb"}, "downloads": -1, "filename": "iotapy-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d4275e537d27a7a2520bdf48772a6c32", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 3", "size": 27483, "upload_time": "2017-11-02T15:39:02", "upload_time_iso_8601": "2017-11-02T15:39:02.170879Z", "url": "https://files.pythonhosted.org/packages/52/98/f98083cd2beb2180320abdc72a4b132e003484c02828bd9f025cb905fc07/iotapy-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d037a31e125a06df65ddc02ee422678", "sha256": "93b62b30491b613b05956a1821f6b2087ecd42e53639a19037ee5ffe60beac2d"}, "downloads": -1, "filename": "iotapy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2d037a31e125a06df65ddc02ee422678", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3", "size": 13541, "upload_time": "2017-11-02T15:39:05", "upload_time_iso_8601": "2017-11-02T15:39:05.245747Z", "url": "https://files.pythonhosted.org/packages/52/1e/65bfa96c22859dd73cd04e0e920dc38e40b35df47131cb46445421859cc1/iotapy-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4275e537d27a7a2520bdf48772a6c32", "sha256": "4bddae98c9084fdd785d0b4ef53c94c47678b351bf12a62411c97e30bd8aacdb"}, "downloads": -1, "filename": "iotapy-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d4275e537d27a7a2520bdf48772a6c32", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 3", "size": 27483, "upload_time": "2017-11-02T15:39:02", "upload_time_iso_8601": "2017-11-02T15:39:02.170879Z", "url": "https://files.pythonhosted.org/packages/52/98/f98083cd2beb2180320abdc72a4b132e003484c02828bd9f025cb905fc07/iotapy-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d037a31e125a06df65ddc02ee422678", "sha256": "93b62b30491b613b05956a1821f6b2087ecd42e53639a19037ee5ffe60beac2d"}, "downloads": -1, "filename": "iotapy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2d037a31e125a06df65ddc02ee422678", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3", "size": 13541, "upload_time": "2017-11-02T15:39:05", "upload_time_iso_8601": "2017-11-02T15:39:05.245747Z", "url": "https://files.pythonhosted.org/packages/52/1e/65bfa96c22859dd73cd04e0e920dc38e40b35df47131cb46445421859cc1/iotapy-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:55 2020"}