{"info": {"author": "Bradley M. Froehle", "author_email": "brad.froehle@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Mathematics"], "description": "PyMUMPS: A parallel sparse direct solver\n========================================\n\nRequirements\n------------\n\n* [MUMPS](http://graal.ens-lyon.fr/MUMPS/)\n* [mpi4py](https://code.google.com/p/mpi4py/)\n\nGetting Started\n---------------\n\nInstall using `python setup.py install` or run from the local checkout.\n\nExamples\n--------\n\nCentralized input & output. The sparse matrix and right hand side are\ninput only on the rank 0 process. The system is solved using all\navailable processes and the result is available on the rank 0 process.\n\n```python\nfrom mumps import DMumpsContext\nctx = DMumpsContext()\nif ctx.myid == 0:\n    ctx.set_centralized_sparse(A)\n    x = b.copy()\n    ctx.set_rhs(x) # Modified in place\nctx.run(job=6) # Analysis + Factorization + Solve\nctx.destroy() # Cleanup\n```\n\nRe-use symbolic or numeric factorizations.\n\n```python\nfrom mumps import DMumpsContext\nctx = DMumpsContext()\nif ctx.myid == 0:\n    ctx.set_centralized_assembled_rows_cols(A.row+1, A.col+1) # 1-based\nctx.run(job=1) # Analysis\n\nif ctx.myid == 0:\n    ctx.set_centralized_assembled_values(A.data)\nctx.run(job=2) # Factorization\n\nif ctx.myid == 0:\n    x = b1.copy()\n    ctx.set_rhs(x)\nctx.run(job=3) # Solve\n\n# Reuse factorizations by running `job=3` with new right hand sides\n# or analyses by supplying new values and running `job=2` to repeat\n# the factorization process.\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/pymumps/pymumps", "keywords": "", "license": "BSD", "maintainer": "Stephan Rave", "maintainer_email": "stephan.rave@uni-muenster.de", "name": "PyMUMPS", "package_url": "https://pypi.org/project/PyMUMPS/", "platform": "", "project_url": "https://pypi.org/project/PyMUMPS/", "project_urls": {"Homepage": "http://github.com/pymumps/pymumps"}, "release_url": "https://pypi.org/project/PyMUMPS/0.3.2/", "requires_dist": null, "requires_python": "", "summary": "Python bindings for MUMPS, a parallel sparse direct solver", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyMUMPS: A parallel sparse direct solver</h1>\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"http://graal.ens-lyon.fr/MUMPS/\" rel=\"nofollow\">MUMPS</a></li>\n<li><a href=\"https://code.google.com/p/mpi4py/\" rel=\"nofollow\">mpi4py</a></li>\n</ul>\n<h2>Getting Started</h2>\n<p>Install using <code>python setup.py install</code> or run from the local checkout.</p>\n<h2>Examples</h2>\n<p>Centralized input &amp; output. The sparse matrix and right hand side are\ninput only on the rank 0 process. The system is solved using all\navailable processes and the result is available on the rank 0 process.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mumps</span> <span class=\"kn\">import</span> <span class=\"n\">DMumpsContext</span>\n<span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">DMumpsContext</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">myid</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">set_centralized_sparse</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">set_rhs</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"c1\"># Modified in place</span>\n<span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span> <span class=\"c1\"># Analysis + Factorization + Solve</span>\n<span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">destroy</span><span class=\"p\">()</span> <span class=\"c1\"># Cleanup</span>\n</pre>\n<p>Re-use symbolic or numeric factorizations.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mumps</span> <span class=\"kn\">import</span> <span class=\"n\">DMumpsContext</span>\n<span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">DMumpsContext</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">myid</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">set_centralized_assembled_rows_cols</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">row</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">col</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># 1-based</span>\n<span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"c1\"># Analysis</span>\n\n<span class=\"k\">if</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">myid</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">set_centralized_assembled_values</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"c1\"># Factorization</span>\n\n<span class=\"k\">if</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">myid</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">b1</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n    <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">set_rhs</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"c1\"># Solve</span>\n\n<span class=\"c1\"># Reuse factorizations by running `job=3` with new right hand sides</span>\n<span class=\"c1\"># or analyses by supplying new values and running `job=2` to repeat</span>\n<span class=\"c1\"># the factorization process.</span>\n</pre>\n\n          </div>"}, "last_serial": 4454923, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f64dd26c6fd37af15809a3faef9479ba", "sha256": "d2022b4863a29e9dc0e49ab751404f36a8b6d3b53a060dcd1ae093ed51ed3ada"}, "downloads": -1, "filename": "PyMUMPS-0.1.tar.gz", "has_sig": false, "md5_digest": "f64dd26c6fd37af15809a3faef9479ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96955, "upload_time": "2013-04-08T20:38:43", "upload_time_iso_8601": "2013-04-08T20:38:43.210594Z", "url": "https://files.pythonhosted.org/packages/ac/27/773ea19219ed0fff64db06f415e6606414b09493f1525c5a73941d0517dd/PyMUMPS-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "bfe278d06623d123ac88cf7eb2efa01c", "sha256": "35562c110d3b0105d7129cdeeb5f2127d91e51917a845eec6dab0b796f12a58f"}, "downloads": -1, "filename": "PyMUMPS-0.2.tar.gz", "has_sig": false, "md5_digest": "bfe278d06623d123ac88cf7eb2efa01c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6907, "upload_time": "2018-08-21T12:47:09", "upload_time_iso_8601": "2018-08-21T12:47:09.623914Z", "url": "https://files.pythonhosted.org/packages/a6/d9/17e83815b9d8e2fa6dfaed054bfd32e7123faea7242eff6d0feb4be382b4/PyMUMPS-0.2.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "ea49d8fa46ec822c961f9c0fff97c133", "sha256": "6f37159a2648b9406ad0960195b5eaffdffb9f64d718c67e4f337a153c2e806f"}, "downloads": -1, "filename": "PyMUMPS-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ea49d8fa46ec822c961f9c0fff97c133", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7889, "upload_time": "2018-08-21T14:12:23", "upload_time_iso_8601": "2018-08-21T14:12:23.363301Z", "url": "https://files.pythonhosted.org/packages/d7/a4/a05888ab2a264fbd2cfa79c8bf38d1d580541bc0a6eb0f11bc9dae841ffb/PyMUMPS-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "63c40dced7dab48429a8cd2d78cd6cad", "sha256": "f290ec4850098f108fb91cb9e7fa07302ebf5076e4329f8e6ea4924de8ba35df"}, "downloads": -1, "filename": "PyMUMPS-0.3.2.tar.gz", "has_sig": false, "md5_digest": "63c40dced7dab48429a8cd2d78cd6cad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7883, "upload_time": "2018-11-05T21:58:59", "upload_time_iso_8601": "2018-11-05T21:58:59.894501Z", "url": "https://files.pythonhosted.org/packages/74/19/5a4405c485dc0548ad5be7536c9d19dac567c865834987ff1e998340b7ae/PyMUMPS-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63c40dced7dab48429a8cd2d78cd6cad", "sha256": "f290ec4850098f108fb91cb9e7fa07302ebf5076e4329f8e6ea4924de8ba35df"}, "downloads": -1, "filename": "PyMUMPS-0.3.2.tar.gz", "has_sig": false, "md5_digest": "63c40dced7dab48429a8cd2d78cd6cad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7883, "upload_time": "2018-11-05T21:58:59", "upload_time_iso_8601": "2018-11-05T21:58:59.894501Z", "url": "https://files.pythonhosted.org/packages/74/19/5a4405c485dc0548ad5be7536c9d19dac567c865834987ff1e998340b7ae/PyMUMPS-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:30 2020"}