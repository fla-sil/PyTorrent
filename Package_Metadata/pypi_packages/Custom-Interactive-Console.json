{"info": {"author": "Falko Krause", "author_email": "falko.krause@staff.hu-berlin.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3", "Natural Language :: English", "Operating System :: OS Independent", "Topic :: Scientific/Engineering", "Topic :: Software Development :: User Interfaces", "Topic :: Terminals", "Topic :: Utilities"], "description": "The module helps to create a custom interactive shell similar to the python \r\ninteractive shell\r\n\r\nexmaple usage\r\n$ ./semanticsbml_console.py -q \u2019c 0;a 0\u2019 -p ../../../\r\nrelease_25September2007_sbmls/...\r\n     ...curated/BIOMD0000000090.xml\r\n      semanticSBML main menu\r\n l        list all loaded models\r\n o  [FILENAME] open a model\r\n d  [DIR]    open all models in the directory (without arguments last used)\r\n c  [MODEL_NR] display check results for a model\r\n a  [MODEL_NR] annotate a model with database identifiers\r\ne       export a svg image of a model\r\nm [[MODEL_NR1] , ..] merge 2 or more models by inserting a list of models\r\ns       save model(s)\r\nv       save model(s) as\r\nr [MODEL_NR] remove model\r\nabout     about this software\r\ni       ID -SBML Generate SBML files from Database Identifiers\r\ncommands: help, dir, rec, prec, play, hist, q, exit\r\nyou can use ctrl+D (win ctr+Z) to exit\r\n###executing### c 0\r\n\r\nexample integration:\r\ncreate a main menu:\r\n    self._locals    = {\r\n            'l':(self.listFiles,'List Models'),\r\n            'i2s':(Id2Sbml_view,'ID -> SBML'),\r\n            'd':(self.openDirectory,'Open Directory')\r\n        }\r\n    self._help=\"\r\n    <<< semanticSBML main menu >>>\r\n    l       list all loaded models\r\n    d [DIR] open all models in the directory (without arguments last used)\r\n    i2s     ID - SBML Generate SBML files from Database Identifiers\"\r\n\r\n    cc = CustomConsole(self._locals,self._help).run()\r\n\r\n\r\na submenu can be created like this:\r\n\r\n    class Id2Sbml_view():\r\n        def __init__(self):\r\n            help=\" ID -> SBML \r\n    e [ID1 ID2] Enter a List of KEGG Reaction Identifiers\r\n    q       exit this menu\"\r\n            cc = CustomConsole({'e':(self.slotNext_l,'insert list'),'q':\r\n(self.exit,'exit')},help).run('...')\r\n\r\nalso user input can be returned directly without connecting it to a function::\r\n    input = CustomConsole().raw_input('Are you sure you want to do this? y/n:')\r\nthis function should be used instead of the native python raw_input since its \r\ninput is captured and can be replayed", "description_content_type": null, "docs_url": null, "download_url": "http://semanticsbml.svn.sourceforge.net/viewvc/semanticsbml/trunk/semanticSBML/CustomInteractiveConsole.py?revision=1113&content-type=text%2Fplain", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://semanticsbml.org/customconsole.html", "keywords": "interactive shell, console, user interface, commandline", "license": "GNU public license 3 or above", "maintainer": "Falko Krause", "maintainer_email": "falko.krause@staff.hu-berlin.de", "name": "Custom-Interactive-Console", "package_url": "https://pypi.org/project/Custom-Interactive-Console/", "platform": "", "project_url": "https://pypi.org/project/Custom-Interactive-Console/", "project_urls": {"Download": "http://semanticsbml.svn.sourceforge.net/viewvc/semanticsbml/trunk/semanticSBML/CustomInteractiveConsole.py?revision=1113&content-type=text%2Fplain", "Homepage": "http://semanticsbml.org/customconsole.html"}, "release_url": "https://pypi.org/project/Custom-Interactive-Console/1.0/", "requires_dist": null, "requires_python": null, "summary": "Create you own interactive shell", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            The module helps to create a custom interactive shell similar to the python \n<br>interactive shell\n<br>\n<br>exmaple usage\n<br>$ ./semanticsbml_console.py -q \u2019c 0;a 0\u2019 -p ../../../\n<br>release_25September2007_sbmls/...\n<br>     ...curated/BIOMD0000000090.xml\n<br>      semanticSBML main menu\n<br> l        list all loaded models\n<br> o  [FILENAME] open a model\n<br> d  [DIR]    open all models in the directory (without arguments last used)\n<br> c  [MODEL_NR] display check results for a model\n<br> a  [MODEL_NR] annotate a model with database identifiers\n<br>e       export a svg image of a model\n<br>m [[MODEL_NR1] , ..] merge 2 or more models by inserting a list of models\n<br>s       save model(s)\n<br>v       save model(s) as\n<br>r [MODEL_NR] remove model\n<br>about     about this software\n<br>i       ID -SBML Generate SBML files from Database Identifiers\n<br>commands: help, dir, rec, prec, play, hist, q, exit\n<br>you can use ctrl+D (win ctr+Z) to exit\n<br>###executing### c 0\n<br>\n<br>example integration:\n<br>create a main menu:\n<br>    self._locals    = {\n<br>            'l':(self.listFiles,'List Models'),\n<br>            'i2s':(Id2Sbml_view,'ID -&gt; SBML'),\n<br>            'd':(self.openDirectory,'Open Directory')\n<br>        }\n<br>    self._help=\"\n<br>    &lt;&lt;&lt; semanticSBML main menu &gt;&gt;&gt;\n<br>    l       list all loaded models\n<br>    d [DIR] open all models in the directory (without arguments last used)\n<br>    i2s     ID - SBML Generate SBML files from Database Identifiers\"\n<br>\n<br>    cc = CustomConsole(self._locals,self._help).run()\n<br>\n<br>\n<br>a submenu can be created like this:\n<br>\n<br>    class Id2Sbml_view():\n<br>        def __init__(self):\n<br>            help=\" ID -&gt; SBML \n<br>    e [ID1 ID2] Enter a List of KEGG Reaction Identifiers\n<br>    q       exit this menu\"\n<br>            cc = CustomConsole({'e':(self.slotNext_l,'insert list'),'q':\n<br>(self.exit,'exit')},help).run('...')\n<br>\n<br>also user input can be returned directly without connecting it to a function::\n<br>    input = CustomConsole().raw_input('Are you sure you want to do this? y/n:')\n<br>this function should be used instead of the native python raw_input since its \n<br>input is captured and can be replayed\n          </div>"}, "last_serial": 710341, "releases": {"1.0": []}, "urls": [], "timestamp": "Fri May  8 00:41:18 2020"}