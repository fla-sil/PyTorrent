{"info": {"author": "Jan Maces", "author_email": "janmaces@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics"], "description": "============================================================================\n``keras-adf``: Assumed Density Filtering (ADF) Probabilistic Neural Networks\n============================================================================\n\n.. add project badges here\n.. image:: https://readthedocs.org/projects/keras-adf/badge/?version=latest\n    :target: https://keras-adf.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://travis-ci.com/jmaces/keras-adf.svg?branch=master\n    :target: https://travis-ci.com/jmaces/keras-adf?branch=master\n    :alt: CI Status\n\n.. image:: https://codecov.io/gh/jmaces/keras-adf/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/jmaces/keras-adf\n  :alt: Code Coverage\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: Code Style: Black\n\n\n.. teaser-start\n\n``keras-adf`` provides implementations for probabilistic\n`Tensorflow <https://www.tensorflow.org/>`_/`Keras <https://keras.io/>`_ neural network layers,\nwhich are based on assumed density filtering.\nAssumed density filtering (ADF) is a general concept from Bayesian inference, but in the case of feed-forward neural networks that we consider here\nit is a way to approximately propagate a random distribution through the neural network.\n\nThe layers in this package have the same names and arguments as their corresponding\nKeras version. We use Gaussian distributions for our ADF approximations, which are\ndescribed by their means and (co-)variances. So unlike the standard Keras layers,\neach ``keras-adf`` layer takes two inputs and produces two outputs (one for the means\nand one for the (co-)variances).\n\n.. teaser-end\n\n\n.. example\n\n``keras-adf`` layers can be used exactly like the corresponding `Keras <https://keras.io/>`_\nlayers within a Keras model. However, as mentioned above, ADF layers take two inputs and produce two outputs\ninstead of one, so it is not possible to simply mix ADF and standard layers within the same model.\n\n.. code-block:: python\n\n    from tensorflow.keras import Input, Model\n    from kerasadf.layers import Dense\n\n    in_mean = Input((10,))\n    in_var = Input((10,))\n    out_mean, out_var  = Dense(10, activation=\"relu\")([in_mean, in_var])\n    model = Model([in_mean, in_var], [out_mean, out_var])\n\nThe `Overview <https://keras-adf.readthedocs.io/en/latest/overview.html>`_ and\n`Examples <https://keras-adf.readthedocs.io/en/latest/examples.html>`_ sections\nof our documentation provide more realistic and complete examples.\n\n.. project-info-start\n\nProject Information\n===================\n\n``keras-adf`` is released under the `MIT license <https://github.com/jmaces/keras-adf/blob/master/LICENSE>`_,\nits documentation lives at `Read the Docs <https://keras-adf.readthedocs.io/en/latest/>`_,\nthe code on `GitHub <https://github.com/jmaces/keras-adf>`_,\nand the latest release can be found on `PyPI <https://pypi.org/project/keras-adf/>`_.\nIt\u2019s tested on Python 2.7 and 3.4+.\n\nIf you'd like to contribute to ``keras-adf`` you're most welcome.\nWe have written a `short guide <https://github.com/jmaces/keras-adf/blob/master/.github/CONTRIBUTING.rst>`_ to help you get you started!\n\n.. project-info-end\n\n\n.. literature-start\n\nFurther Reading\n===============\n\nAdditional information on the algorithmic aspects of ``keras-adf`` can be found\nin the following works:\n\n\n- Jochen Gast, Stefan Roth,\n  \"Lightweight Probabilistic Deep Networks\",\n  2018\n- Jan Macdonald, Stephan W\u00e4ldchen, Sascha Hauch, Gitta Kutyniok,\n  \"A Rate-Distortion Framework for Explaining Neural Network Decisions\",\n  2019\n\n.. literature-end\n\n\nAcknowledgments\n===============\n\nDuring the setup of this project we were heavily influenced and inspired by\nthe works of `Hynek Schlawack <https://hynek.me/>`_ and in particular his\n`attrs <https://www.attrs.org/en/stable/>`_ package and blog posts on\n`testing and packaing <https://hynek.me/articles/testing-packaging/>`_\nand `deploying to PyPI <https://hynek.me/articles/sharing-your-labor-of-love-pypi-quick-and-dirty/>`_.\nThank you for sharing your experiences and insights.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jmaces/keras-adf", "keywords": "tensorflow,keras,probabilistic-models,deep-learning,deep-neural-networks,machine-learning", "license": "MIT", "maintainer": "Jan Maces", "maintainer_email": "janmaces@gmail.com", "name": "keras-adf", "package_url": "https://pypi.org/project/keras-adf/", "platform": "", "project_url": "https://pypi.org/project/keras-adf/", "project_urls": {"Homepage": "https://github.com/jmaces/keras-adf"}, "release_url": "https://pypi.org/project/keras-adf/19.1.0/", "requires_dist": ["tensorflow (<=1.15,>=1.14)", "numpy", "coverage ; extra == 'dev'", "hypothesis[numpy] ; extra == 'dev'", "scipy ; extra == 'dev'", "pytest (>=4.3.0) ; extra == 'dev'", "sphinx (>=1.6.5) ; extra == 'dev'", "numpydoc ; extra == 'dev'", "pre-commit ; extra == 'dev'", "sphinx (>=1.6.5) ; extra == 'docs'", "numpydoc ; extra == 'docs'", "coverage ; extra == 'tests'", "hypothesis[numpy] ; extra == 'tests'", "scipy ; extra == 'tests'", "pytest (>=4.3.0) ; extra == 'tests'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Assumed Density Filtering (ADF) Probabilistic Networks", "version": "19.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://keras-adf.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a44f3f8d93b5039b4aede6e5112ab0d9deb45d31/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6b657261732d6164662f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.com/jmaces/keras-adf?branch=master\" rel=\"nofollow\"><img alt=\"CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/caba889a160cd466875272f9344af81c73e95ef4/68747470733a2f2f7472617669732d63692e636f6d2f6a6d616365732f6b657261732d6164662e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/jmaces/keras-adf\" rel=\"nofollow\"><img alt=\"Code Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/866a770f5792c01efc792d997dbba694f39bd0c3/68747470733a2f2f636f6465636f762e696f2f67682f6a6d616365732f6b657261732d6164662f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code Style: Black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p><tt><span class=\"pre\">keras-adf</span></tt> provides implementations for probabilistic\n<a href=\"https://www.tensorflow.org/\" rel=\"nofollow\">Tensorflow</a>/<a href=\"https://keras.io/\" rel=\"nofollow\">Keras</a> neural network layers,\nwhich are based on assumed density filtering.\nAssumed density filtering (ADF) is a general concept from Bayesian inference, but in the case of feed-forward neural networks that we consider here\nit is a way to approximately propagate a random distribution through the neural network.</p>\n<p>The layers in this package have the same names and arguments as their corresponding\nKeras version. We use Gaussian distributions for our ADF approximations, which are\ndescribed by their means and (co-)variances. So unlike the standard Keras layers,\neach <tt><span class=\"pre\">keras-adf</span></tt> layer takes two inputs and produces two outputs (one for the means\nand one for the (co-)variances).</p>\n<p><tt><span class=\"pre\">keras-adf</span></tt> layers can be used exactly like the corresponding <a href=\"https://keras.io/\" rel=\"nofollow\">Keras</a>\nlayers within a Keras model. However, as mentioned above, ADF layers take two inputs and produce two outputs\ninstead of one, so it is not possible to simply mix ADF and standard layers within the same model.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tensorflow.keras</span> <span class=\"kn\">import</span> <span class=\"n\">Input</span><span class=\"p\">,</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span> <span class=\"nn\">kerasadf.layers</span> <span class=\"kn\">import</span> <span class=\"n\">Dense</span>\n\n<span class=\"n\">in_mean</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">((</span><span class=\"mi\">10</span><span class=\"p\">,))</span>\n<span class=\"n\">in_var</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">((</span><span class=\"mi\">10</span><span class=\"p\">,))</span>\n<span class=\"n\">out_mean</span><span class=\"p\">,</span> <span class=\"n\">out_var</span>  <span class=\"o\">=</span> <span class=\"n\">Dense</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">activation</span><span class=\"o\">=</span><span class=\"s2\">\"relu\"</span><span class=\"p\">)([</span><span class=\"n\">in_mean</span><span class=\"p\">,</span> <span class=\"n\">in_var</span><span class=\"p\">])</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">([</span><span class=\"n\">in_mean</span><span class=\"p\">,</span> <span class=\"n\">in_var</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"n\">out_mean</span><span class=\"p\">,</span> <span class=\"n\">out_var</span><span class=\"p\">])</span>\n</pre>\n<p>The <a href=\"https://keras-adf.readthedocs.io/en/latest/overview.html\" rel=\"nofollow\">Overview</a> and\n<a href=\"https://keras-adf.readthedocs.io/en/latest/examples.html\" rel=\"nofollow\">Examples</a> sections\nof our documentation provide more realistic and complete examples.</p>\n<div id=\"project-information\">\n<h2>Project Information</h2>\n<p><tt><span class=\"pre\">keras-adf</span></tt> is released under the <a href=\"https://github.com/jmaces/keras-adf/blob/master/LICENSE\" rel=\"nofollow\">MIT license</a>,\nits documentation lives at <a href=\"https://keras-adf.readthedocs.io/en/latest/\" rel=\"nofollow\">Read the Docs</a>,\nthe code on <a href=\"https://github.com/jmaces/keras-adf\" rel=\"nofollow\">GitHub</a>,\nand the latest release can be found on <a href=\"https://pypi.org/project/keras-adf/\" rel=\"nofollow\">PyPI</a>.\nIt\u2019s tested on Python 2.7 and 3.4+.</p>\n<p>If you\u2019d like to contribute to <tt><span class=\"pre\">keras-adf</span></tt> you\u2019re most welcome.\nWe have written a <a href=\"https://github.com/jmaces/keras-adf/blob/master/.github/CONTRIBUTING.rst\" rel=\"nofollow\">short guide</a> to help you get you started!</p>\n</div>\n<div id=\"further-reading\">\n<h2>Further Reading</h2>\n<p>Additional information on the algorithmic aspects of <tt><span class=\"pre\">keras-adf</span></tt> can be found\nin the following works:</p>\n<ul>\n<li>Jochen Gast, Stefan Roth,\n\u201cLightweight Probabilistic Deep Networks\u201d,\n2018</li>\n<li>Jan Macdonald, Stephan W\u00e4ldchen, Sascha Hauch, Gitta Kutyniok,\n\u201cA Rate-Distortion Framework for Explaining Neural Network Decisions\u201d,\n2019</li>\n</ul>\n</div>\n<div id=\"acknowledgments\">\n<h2>Acknowledgments</h2>\n<p>During the setup of this project we were heavily influenced and inspired by\nthe works of <a href=\"https://hynek.me/\" rel=\"nofollow\">Hynek Schlawack</a> and in particular his\n<a href=\"https://www.attrs.org/en/stable/\" rel=\"nofollow\">attrs</a> package and blog posts on\n<a href=\"https://hynek.me/articles/testing-packaging/\" rel=\"nofollow\">testing and packaing</a>\nand <a href=\"https://hynek.me/articles/sharing-your-labor-of-love-pypi-quick-and-dirty/\" rel=\"nofollow\">deploying to PyPI</a>.\nThank you for sharing your experiences and insights.</p>\n</div>\n\n          </div>"}, "last_serial": 6366081, "releases": {"19.1.0": [{"comment_text": "", "digests": {"md5": "2bc2672659ebc34ec78aefb79f649fec", "sha256": "898afc18c67fd38e606c25fa5533524649bcb99233151a614047548b193f7894"}, "downloads": -1, "filename": "keras_adf-19.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2bc2672659ebc34ec78aefb79f649fec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 18164, "upload_time": "2019-12-27T16:51:17", "upload_time_iso_8601": "2019-12-27T16:51:17.322726Z", "url": "https://files.pythonhosted.org/packages/be/b7/43604a663daafc26a0ea1e98e941e08af0669cbf120808c0e2bf04036a22/keras_adf-19.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14b70f4363a65a5c978e0db5d55cc897", "sha256": "cfdd91fc7f37629a037a9bf0e0a792e8a553e22ac8b345e4f0dd6c55d8e56de6"}, "downloads": -1, "filename": "keras-adf-19.1.0.tar.gz", "has_sig": false, "md5_digest": "14b70f4363a65a5c978e0db5d55cc897", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 38098, "upload_time": "2019-12-27T16:51:20", "upload_time_iso_8601": "2019-12-27T16:51:20.378779Z", "url": "https://files.pythonhosted.org/packages/55/78/68f8426c0ea5368a343ea71e37894fa6809f7e4f54addf10dd74473a2998/keras-adf-19.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2bc2672659ebc34ec78aefb79f649fec", "sha256": "898afc18c67fd38e606c25fa5533524649bcb99233151a614047548b193f7894"}, "downloads": -1, "filename": "keras_adf-19.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2bc2672659ebc34ec78aefb79f649fec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 18164, "upload_time": "2019-12-27T16:51:17", "upload_time_iso_8601": "2019-12-27T16:51:17.322726Z", "url": "https://files.pythonhosted.org/packages/be/b7/43604a663daafc26a0ea1e98e941e08af0669cbf120808c0e2bf04036a22/keras_adf-19.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14b70f4363a65a5c978e0db5d55cc897", "sha256": "cfdd91fc7f37629a037a9bf0e0a792e8a553e22ac8b345e4f0dd6c55d8e56de6"}, "downloads": -1, "filename": "keras-adf-19.1.0.tar.gz", "has_sig": false, "md5_digest": "14b70f4363a65a5c978e0db5d55cc897", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 38098, "upload_time": "2019-12-27T16:51:20", "upload_time_iso_8601": "2019-12-27T16:51:20.378779Z", "url": "https://files.pythonhosted.org/packages/55/78/68f8426c0ea5368a343ea71e37894fa6809f7e4f54addf10dd74473a2998/keras-adf-19.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:14 2020"}