{"info": {"author": "mylan at quintagroup.com", "author_email": "support@quintagroup.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)"], "description": ".. contents::\n\nChange history\n**************\n\nChangelog\n=========\n\n0.1 (2011-05-13)\n----------------\n\n- Clean up and release\n  [aclark]\n\n- Initial functionality\n  [mylan at quintagroup.com]\n\n- Created recipe with ZopeSkel\n  [mylan at quintagroup.com]\n\n\nDetailed Documentation\n**********************\n\nIntroduction\n============\n\nThis is a full-blown functional test. The emphasis here is on testing what\nthe user may input and see, and the system is largely tested as a black box.\nWe use PloneTestCase to set up this test as well, so we have a full Plone site\nto play with. We *can* inspect the state of the portal, e.g. using \nself.portal and self.folder, but it is often frowned upon since you are not\ntreating the system as a black box. Also, if you, for example, log in or set\nroles using calls like self.setRoles(), these are not reflected in the test\nbrowser, which runs as a separate session.\n\nBeing a doctest, we can tell a story here.\n\nFirst, we must perform some setup. We use the testbrowser that is shipped\nwith Five, as this provides proper Zope 2 integration. Most of the \ndocumentation, though, is in the underlying zope.testbrower package.\n\n    >>> from Products.Five.testbrowser import Browser\n    >>> browser = Browser()\n    >>> portal_url = self.portal.absolute_url()\n\nThe following is useful when writing and debugging testbrowser tests. It lets\nus see all error messages in the error_log.\n\n    >>> self.portal.error_log._ignored_exceptions = ()\n\nWith that in place, we can go to the portal front page and log in. We will\ndo this using the default user from PloneTestCase:\n\n    >>> from Products.PloneTestCase.setup import portal_owner, default_password\n\nBecause add-on themes or products may remove or hide the login portlet, this test will use the login form that comes with plone.  \n\n    >>> browser.open(portal_url + '/login_form')\n    >>> browser.getControl(name='__ac_name').value = portal_owner\n    >>> browser.getControl(name='__ac_password').value = default_password\n    >>> browser.getControl(name='submit').click()\n\nHere, we set the value of the fields on the login form and then simulate a\nsubmit click.  We then ensure that we get the friendly logged-in message:\n\n    >>> \"You are now logged in\" in browser.contents\n    True\n\nFinally, let's return to the front page of our site before continuing\n\n    >>> browser.open(portal_url)\n\n-*- extra stuff goes here -*-\n\nThe Bounty Program Submission content type\n==========================================\n\nIn this section we are tesing the Bounty Program Submission content type by performing\nbasic operations like adding, updadating and deleting Bounty Program Submission content\nitems.\n\nAdding a new Bounty Program Submission content item\n---------------------------------------------------\n\nWe use the 'Add new' menu to add a new content item.\n\n    >>> browser.getLink('Add new').click()\n\nThen we select the type of item we want to add. In this case we select\n'Bounty Program Submission' and click the 'Add' button to get to the add form.\n\n    >>> browser.getControl('Bounty Program Submission').click()\n    >>> browser.getControl(name='form.button.Add').click()\n    >>> 'Bounty Program Submission' in browser.contents\n    True\n\nNow we fill the form and submit it.\n\n    >>> browser.getControl(name='title').value = 'Bounty Program Submission Sample'\n    >>> browser.getControl('Save').click()\n    >>> 'Changes saved' in browser.contents\n    True\n\nAnd we are done! We added a new 'Bounty Program Submission' content item to the portal.\n\nUpdating an existing Bounty Program Submission content item\n-----------------------------------------------------------\n\nLet's click on the 'edit' tab and update the object attribute values.\n\n    >>> browser.getLink('Edit').click()\n    >>> browser.getControl(name='title').value = 'New Bounty Program Submission Sample'\n    >>> browser.getControl('Save').click()\n\nWe check that the changes were applied.\n\n    >>> 'Changes saved' in browser.contents\n    True\n    >>> 'New Bounty Program Submission Sample' in browser.contents\n    True\n\nRemoving a/an Bounty Program Submission content item\n----------------------------------------------------\n\nIf we go to the home page, we can see a tab with the 'New Bounty Program Submission\nSample' title in the global navigation tabs.\n\n    >>> browser.open(portal_url)\n    >>> 'New Bounty Program Submission Sample' in browser.contents\n    True\n\nNow we are going to delete the 'New Bounty Program Submission Sample' object. First we\ngo to the contents tab and select the 'New Bounty Program Submission Sample' for\ndeletion.\n\n    >>> browser.getLink('Contents').click()\n    >>> browser.getControl('New Bounty Program Submission Sample').click()\n\nWe click on the 'Delete' button.\n\n    >>> browser.getControl('Delete').click()\n    >>> 'Item(s) deleted' in browser.contents\n    True\n\nSo, if we go back to the home page, there is no longer a 'New Bounty Program Submission\nSample' tab.\n\n    >>> browser.open(portal_url)\n    >>> 'New Bounty Program Submission Sample' in browser.contents\n    False\n\nAdding a new Bounty Program Submission content item as contributor\n------------------------------------------------------------------\n\nNot only site managers are allowed to add Bounty Program Submission content items, but\nalso site contributors.\n\nLet's logout and then login as 'contributor', a portal member that has the\ncontributor role assigned.\n\n    >>> browser.getLink('Log out').click()\n    >>> browser.open(portal_url + '/login_form')\n    >>> browser.getControl(name='__ac_name').value = 'contributor'\n    >>> browser.getControl(name='__ac_password').value = default_password\n    >>> browser.getControl(name='submit').click()\n    >>> browser.open(portal_url)\n\nWe use the 'Add new' menu to add a new content item.\n\n    >>> browser.getLink('Add new').click()\n\nWe select 'Bounty Program Submission' and click the 'Add' button to get to the add form.\n\n    >>> browser.getControl('Bounty Program Submission').click()\n    >>> browser.getControl(name='form.button.Add').click()\n    >>> 'Bounty Program Submission' in browser.contents\n    True\n\nNow we fill the form and submit it.\n\n    >>> browser.getControl(name='title').value = 'Bounty Program Submission Sample'\n    >>> browser.getControl('Save').click()\n    >>> 'Changes saved' in browser.contents\n    True\n\nDone! We added a new Bounty Program Submission content item logged in as contributor.\n\nFinally, let's login back as manager.\n\n    >>> browser.getLink('Log out').click()\n    >>> browser.open(portal_url + '/login_form')\n    >>> browser.getControl(name='__ac_name').value = portal_owner\n    >>> browser.getControl(name='__ac_password').value = default_password\n    >>> browser.getControl(name='submit').click()\n    >>> browser.open(portal_url)\n\n\n\n\nContributors\n************\n\n- mylan at quintagroup.com, Author\n- aclark at aclark.net, Maintainer\n\nDownload\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.quintagroup.com/products/", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "ploneorg.kudobounty", "package_url": "https://pypi.org/project/ploneorg.kudobounty/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ploneorg.kudobounty/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.quintagroup.com/products/"}, "release_url": "https://pypi.org/project/ploneorg.kudobounty/0.1/", "requires_dist": null, "requires_python": null, "summary": "Bounty Program logo display mechanism for the plone.org", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#change-history\" id=\"id2\" rel=\"nofollow\">Change history</a><ul>\n<li><a href=\"#id1\" id=\"id3\" rel=\"nofollow\">0.1 (2011-05-13)</a></li>\n</ul>\n</li>\n<li><a href=\"#detailed-documentation\" id=\"id4\" rel=\"nofollow\">Detailed Documentation</a><ul>\n<li><a href=\"#introduction\" id=\"id5\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#the-bounty-program-submission-content-type\" id=\"id6\" rel=\"nofollow\">The Bounty Program Submission content type</a><ul>\n<li><a href=\"#adding-a-new-bounty-program-submission-content-item\" id=\"id7\" rel=\"nofollow\">Adding a new Bounty Program Submission content item</a></li>\n<li><a href=\"#updating-an-existing-bounty-program-submission-content-item\" id=\"id8\" rel=\"nofollow\">Updating an existing Bounty Program Submission content item</a></li>\n<li><a href=\"#removing-a-an-bounty-program-submission-content-item\" id=\"id9\" rel=\"nofollow\">Removing a/an Bounty Program Submission content item</a></li>\n<li><a href=\"#adding-a-new-bounty-program-submission-content-item-as-contributor\" id=\"id10\" rel=\"nofollow\">Adding a new Bounty Program Submission content item as contributor</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#contributors\" id=\"id11\" rel=\"nofollow\">Contributors</a></li>\n<li><a href=\"#download\" id=\"id12\" rel=\"nofollow\">Download</a></li>\n</ul>\n</div>\n<div id=\"change-history\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Change history</a></h2>\n<h2 id=\"changelog\"><span class=\"section-subtitle\">Changelog</span></h2>\n<div id=\"id1\">\n<h3><a href=\"#id3\" rel=\"nofollow\">0.1 (2011-05-13)</a></h3>\n<ul>\n<li>Clean up and release\n[aclark]</li>\n<li>Initial functionality\n[mylan at quintagroup.com]</li>\n<li>Created recipe with ZopeSkel\n[mylan at quintagroup.com]</li>\n</ul>\n</div>\n</div>\n<div id=\"detailed-documentation\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Detailed Documentation</a></h2>\n<div id=\"introduction\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Introduction</a></h3>\n<p>This is a full-blown functional test. The emphasis here is on testing what\nthe user may input and see, and the system is largely tested as a black box.\nWe use PloneTestCase to set up this test as well, so we have a full Plone site\nto play with. We <em>can</em> inspect the state of the portal, e.g. using\nself.portal and self.folder, but it is often frowned upon since you are not\ntreating the system as a black box. Also, if you, for example, log in or set\nroles using calls like self.setRoles(), these are not reflected in the test\nbrowser, which runs as a separate session.</p>\n<p>Being a doctest, we can tell a story here.</p>\n<p>First, we must perform some setup. We use the testbrowser that is shipped\nwith Five, as this provides proper Zope 2 integration. Most of the\ndocumentation, though, is in the underlying zope.testbrower package.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from Products.Five.testbrowser import Browser\n&gt;&gt;&gt; browser = Browser()\n&gt;&gt;&gt; portal_url = self.portal.absolute_url()\n</pre>\n</blockquote>\n<p>The following is useful when writing and debugging testbrowser tests. It lets\nus see all error messages in the error_log.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; self.portal.error_log._ignored_exceptions = ()\n</pre>\n</blockquote>\n<p>With that in place, we can go to the portal front page and log in. We will\ndo this using the default user from PloneTestCase:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from Products.PloneTestCase.setup import portal_owner, default_password\n</pre>\n</blockquote>\n<p>Because add-on themes or products may remove or hide the login portlet, this test will use the login form that comes with plone.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(portal_url + '/login_form')\n&gt;&gt;&gt; browser.getControl(name='__ac_name').value = portal_owner\n&gt;&gt;&gt; browser.getControl(name='__ac_password').value = default_password\n&gt;&gt;&gt; browser.getControl(name='submit').click()\n</pre>\n</blockquote>\n<p>Here, we set the value of the fields on the login form and then simulate a\nsubmit click.  We then ensure that we get the friendly logged-in message:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; \"You are now logged in\" in browser.contents\nTrue\n</pre>\n</blockquote>\n<p>Finally, let\u2019s return to the front page of our site before continuing</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(portal_url)\n</pre>\n</blockquote>\n<p>-<em>- extra stuff goes here -</em>-</p>\n</div>\n<div id=\"the-bounty-program-submission-content-type\">\n<h3><a href=\"#id6\" rel=\"nofollow\">The Bounty Program Submission content type</a></h3>\n<p>In this section we are tesing the Bounty Program Submission content type by performing\nbasic operations like adding, updadating and deleting Bounty Program Submission content\nitems.</p>\n<div id=\"adding-a-new-bounty-program-submission-content-item\">\n<h4><a href=\"#id7\" rel=\"nofollow\">Adding a new Bounty Program Submission content item</a></h4>\n<p>We use the \u2018Add new\u2019 menu to add a new content item.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Add new').click()\n</pre>\n</blockquote>\n<p>Then we select the type of item we want to add. In this case we select\n\u2018Bounty Program Submission\u2019 and click the \u2018Add\u2019 button to get to the add form.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl('Bounty Program Submission').click()\n&gt;&gt;&gt; browser.getControl(name='form.button.Add').click()\n&gt;&gt;&gt; 'Bounty Program Submission' in browser.contents\nTrue\n</pre>\n</blockquote>\n<p>Now we fill the form and submit it.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl(name='title').value = 'Bounty Program Submission Sample'\n&gt;&gt;&gt; browser.getControl('Save').click()\n&gt;&gt;&gt; 'Changes saved' in browser.contents\nTrue\n</pre>\n</blockquote>\n<p>And we are done! We added a new \u2018Bounty Program Submission\u2019 content item to the portal.</p>\n</div>\n<div id=\"updating-an-existing-bounty-program-submission-content-item\">\n<h4><a href=\"#id8\" rel=\"nofollow\">Updating an existing Bounty Program Submission content item</a></h4>\n<p>Let\u2019s click on the \u2018edit\u2019 tab and update the object attribute values.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Edit').click()\n&gt;&gt;&gt; browser.getControl(name='title').value = 'New Bounty Program Submission Sample'\n&gt;&gt;&gt; browser.getControl('Save').click()\n</pre>\n</blockquote>\n<p>We check that the changes were applied.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; 'Changes saved' in browser.contents\nTrue\n&gt;&gt;&gt; 'New Bounty Program Submission Sample' in browser.contents\nTrue\n</pre>\n</blockquote>\n</div>\n<div id=\"removing-a-an-bounty-program-submission-content-item\">\n<h4><a href=\"#id9\" rel=\"nofollow\">Removing a/an Bounty Program Submission content item</a></h4>\n<p>If we go to the home page, we can see a tab with the \u2018New Bounty Program Submission\nSample\u2019 title in the global navigation tabs.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(portal_url)\n&gt;&gt;&gt; 'New Bounty Program Submission Sample' in browser.contents\nTrue\n</pre>\n</blockquote>\n<p>Now we are going to delete the \u2018New Bounty Program Submission Sample\u2019 object. First we\ngo to the contents tab and select the \u2018New Bounty Program Submission Sample\u2019 for\ndeletion.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Contents').click()\n&gt;&gt;&gt; browser.getControl('New Bounty Program Submission Sample').click()\n</pre>\n</blockquote>\n<p>We click on the \u2018Delete\u2019 button.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl('Delete').click()\n&gt;&gt;&gt; 'Item(s) deleted' in browser.contents\nTrue\n</pre>\n</blockquote>\n<p>So, if we go back to the home page, there is no longer a \u2018New Bounty Program Submission\nSample\u2019 tab.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.open(portal_url)\n&gt;&gt;&gt; 'New Bounty Program Submission Sample' in browser.contents\nFalse\n</pre>\n</blockquote>\n</div>\n<div id=\"adding-a-new-bounty-program-submission-content-item-as-contributor\">\n<h4><a href=\"#id10\" rel=\"nofollow\">Adding a new Bounty Program Submission content item as contributor</a></h4>\n<p>Not only site managers are allowed to add Bounty Program Submission content items, but\nalso site contributors.</p>\n<p>Let\u2019s logout and then login as \u2018contributor\u2019, a portal member that has the\ncontributor role assigned.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Log out').click()\n&gt;&gt;&gt; browser.open(portal_url + '/login_form')\n&gt;&gt;&gt; browser.getControl(name='__ac_name').value = 'contributor'\n&gt;&gt;&gt; browser.getControl(name='__ac_password').value = default_password\n&gt;&gt;&gt; browser.getControl(name='submit').click()\n&gt;&gt;&gt; browser.open(portal_url)\n</pre>\n</blockquote>\n<p>We use the \u2018Add new\u2019 menu to add a new content item.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Add new').click()\n</pre>\n</blockquote>\n<p>We select \u2018Bounty Program Submission\u2019 and click the \u2018Add\u2019 button to get to the add form.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl('Bounty Program Submission').click()\n&gt;&gt;&gt; browser.getControl(name='form.button.Add').click()\n&gt;&gt;&gt; 'Bounty Program Submission' in browser.contents\nTrue\n</pre>\n</blockquote>\n<p>Now we fill the form and submit it.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getControl(name='title').value = 'Bounty Program Submission Sample'\n&gt;&gt;&gt; browser.getControl('Save').click()\n&gt;&gt;&gt; 'Changes saved' in browser.contents\nTrue\n</pre>\n</blockquote>\n<p>Done! We added a new Bounty Program Submission content item logged in as contributor.</p>\n<p>Finally, let\u2019s login back as manager.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; browser.getLink('Log out').click()\n&gt;&gt;&gt; browser.open(portal_url + '/login_form')\n&gt;&gt;&gt; browser.getControl(name='__ac_name').value = portal_owner\n&gt;&gt;&gt; browser.getControl(name='__ac_password').value = default_password\n&gt;&gt;&gt; browser.getControl(name='submit').click()\n&gt;&gt;&gt; browser.open(portal_url)\n</pre>\n</blockquote>\n</div>\n</div>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Contributors</a></h2>\n<ul>\n<li>mylan at quintagroup.com, Author</li>\n<li>aclark at aclark.net, Maintainer</li>\n</ul>\n</div>\n<div id=\"download\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Download</a></h2>\n</div>\n\n          </div>"}, "last_serial": 796442, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3cb6af8c631993b27604eeddcdae2404", "sha256": "4793b5aa93425f4e9ef03df71903c544e33b31f7478a84e02d0ac7cc9c04a734"}, "downloads": -1, "filename": "ploneorg.kudobounty-0.1.zip", "has_sig": false, "md5_digest": "3cb6af8c631993b27604eeddcdae2404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41717, "upload_time": "2011-05-14T02:32:12", "upload_time_iso_8601": "2011-05-14T02:32:12.644336Z", "url": "https://files.pythonhosted.org/packages/0f/52/2b6c6b432d564461cdf0f621bb7754908acc086fe62280d3d9374a3744bf/ploneorg.kudobounty-0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3cb6af8c631993b27604eeddcdae2404", "sha256": "4793b5aa93425f4e9ef03df71903c544e33b31f7478a84e02d0ac7cc9c04a734"}, "downloads": -1, "filename": "ploneorg.kudobounty-0.1.zip", "has_sig": false, "md5_digest": "3cb6af8c631993b27604eeddcdae2404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41717, "upload_time": "2011-05-14T02:32:12", "upload_time_iso_8601": "2011-05-14T02:32:12.644336Z", "url": "https://files.pythonhosted.org/packages/0f/52/2b6c6b432d564461cdf0f621bb7754908acc086fe62280d3d9374a3744bf/ploneorg.kudobounty-0.1.zip", "yanked": false}], "timestamp": "Fri May  8 02:52:54 2020"}