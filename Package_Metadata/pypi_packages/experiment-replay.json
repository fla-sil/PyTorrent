{"info": {"author": "Nicolas Patry", "author_email": "patry.nicolas@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Experiment replay\n\n## Description\n\nSimple utils to record the commands you run. It was developped with ML experiments\nin mind. Where you often tweak your code just a little before launching an experiment\nand when after a few days/weeks you come back you want to know how you achieved such\namazing results you don't remember and it takes a long time to achieve again.\n\nThis library is extremely simple. You can't run any experiment that is not committed\nso you have a commit to know what was changed and why. It also stores the exact command\nline you used so that configuration hacking is also remembered. It uses the git commit\nmessage to store that data so it does not require any external tool.\n\n## Install\n\n`pip install experiment_replay`\n\n## Usage\n\nIt's simple to enable an experiment just do  in your `train.py` file for instance\n\n```python\nimport experiment_replay\n\n## My code\n\nif __name__ == \"__main__\":\n    experiment_replay.setup()\n    my_training_loop()\n```\n\nThen when you actual run your training let's say `python train.py --batch-size=16`.\n\nYou can then do:\n\n`python -m experiment_replay` to get the list of all the commands you ran with\nexperiment_replay enabled.\n\n```\nExperiments :\nDate                       Id     Commit                                   Command             \n2019-05-13 14:53:35.410538 472a12 f9dfe80125ea4856ce368270bce3aeb980829b2c python example.py  \n```\n\nYou can they replay it with `python -m experiment_replay 472a12`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Narsil/experiment_replay", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "experiment-replay", "package_url": "https://pypi.org/project/experiment-replay/", "platform": "", "project_url": "https://pypi.org/project/experiment-replay/", "project_urls": {"Homepage": "https://github.com/Narsil/experiment_replay"}, "release_url": "https://pypi.org/project/experiment-replay/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Make running, replaying experiments easier either on Pytorch or Tensorflow", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Experiment replay</h1>\n<h2>Description</h2>\n<p>Simple utils to record the commands you run. It was developped with ML experiments\nin mind. Where you often tweak your code just a little before launching an experiment\nand when after a few days/weeks you come back you want to know how you achieved such\namazing results you don't remember and it takes a long time to achieve again.</p>\n<p>This library is extremely simple. You can't run any experiment that is not committed\nso you have a commit to know what was changed and why. It also stores the exact command\nline you used so that configuration hacking is also remembered. It uses the git commit\nmessage to store that data so it does not require any external tool.</p>\n<h2>Install</h2>\n<p><code>pip install experiment_replay</code></p>\n<h2>Usage</h2>\n<p>It's simple to enable an experiment just do  in your <code>train.py</code> file for instance</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">experiment_replay</span>\n\n<span class=\"c1\">## My code</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">experiment_replay</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">()</span>\n    <span class=\"n\">my_training_loop</span><span class=\"p\">()</span>\n</pre>\n<p>Then when you actual run your training let's say <code>python train.py --batch-size=16</code>.</p>\n<p>You can then do:</p>\n<p><code>python -m experiment_replay</code> to get the list of all the commands you ran with\nexperiment_replay enabled.</p>\n<pre><code>Experiments :\nDate                       Id     Commit                                   Command             \n2019-05-13 14:53:35.410538 472a12 f9dfe80125ea4856ce368270bce3aeb980829b2c python example.py  \n</code></pre>\n<p>You can they replay it with <code>python -m experiment_replay 472a12</code></p>\n\n          </div>"}, "last_serial": 5262237, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5a10ec2a6c8d47e67c070ff6739d4198", "sha256": "9237a03419eccde9984b76b3c2e28f2df2954b2addce298e14b78c47d1ec3f9e"}, "downloads": -1, "filename": "experiment_replay-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a10ec2a6c8d47e67c070ff6739d4198", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6825, "upload_time": "2019-05-13T13:15:29", "upload_time_iso_8601": "2019-05-13T13:15:29.063282Z", "url": "https://files.pythonhosted.org/packages/67/83/d3c5c9b774a79be95831d31ca041078bd3f4c71f6e58327255a9614a8eab/experiment_replay-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbd64458e7903b3ac88a4a152aa6f3f3", "sha256": "17337ce10ac73614c94ff228a947f0a5df8aa47f0690fd78c62e433a4404ce23"}, "downloads": -1, "filename": "experiment-replay-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cbd64458e7903b3ac88a4a152aa6f3f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3220, "upload_time": "2019-05-13T13:15:33", "upload_time_iso_8601": "2019-05-13T13:15:33.217131Z", "url": "https://files.pythonhosted.org/packages/eb/44/6720d4c27437d82edabbd09305c8a9527c37ed9e927283d7a653fab8863b/experiment-replay-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5a10ec2a6c8d47e67c070ff6739d4198", "sha256": "9237a03419eccde9984b76b3c2e28f2df2954b2addce298e14b78c47d1ec3f9e"}, "downloads": -1, "filename": "experiment_replay-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5a10ec2a6c8d47e67c070ff6739d4198", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6825, "upload_time": "2019-05-13T13:15:29", "upload_time_iso_8601": "2019-05-13T13:15:29.063282Z", "url": "https://files.pythonhosted.org/packages/67/83/d3c5c9b774a79be95831d31ca041078bd3f4c71f6e58327255a9614a8eab/experiment_replay-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbd64458e7903b3ac88a4a152aa6f3f3", "sha256": "17337ce10ac73614c94ff228a947f0a5df8aa47f0690fd78c62e433a4404ce23"}, "downloads": -1, "filename": "experiment-replay-0.0.1.tar.gz", "has_sig": false, "md5_digest": "cbd64458e7903b3ac88a4a152aa6f3f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3220, "upload_time": "2019-05-13T13:15:33", "upload_time_iso_8601": "2019-05-13T13:15:33.217131Z", "url": "https://files.pythonhosted.org/packages/eb/44/6720d4c27437d82edabbd09305c8a9527c37ed9e927283d7a653fab8863b/experiment-replay-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:39 2020"}