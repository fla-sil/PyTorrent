{"info": {"author": "Archit Sharma", "author_email": "archit.py@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python", "Topic :: Software Development :: Libraries"], "description": "scholarec\n=========\nRecommendation of Scholarly Works \n---------------------------------\n\n[![Build Status](https://travis-ci.org/arcolife/scholarec.png?branch=master)](https://travis-ci.org/arcolife/scholarec)\n[![Dependency Status](https://gemnasium.com/arcolife/scholarec.png)](https://gemnasium.com/arcolife/scholarec)\n[![Zenodo DOI for github](https://zenodo.org/badge/4244/arcolife/scholarec.png)](http://dx.doi.org/10.5281/zenodo.10265)\n\nThis software has been built due to a need felt for a proper \nrecommendation system for publicly available scholarly/research works. \n\nIt classifies documents and uses personalization features and content-based algorithm to \nsuggest/recommend similar ones, possibly of interest to the user. \n\n_Note:_ Currently, full-functionality is offered by combining this package and another one, \n\tthat offeres web interface (Django-based). \t\n- [arcolife/django-scholarec](https://github.com/arcolife/django-scholarec \"django-scholarec\")\n\n> *Inspired from an older project* [researchlei](http://cs.stanford.edu/people/karpathy/researchlei/ \"BSD Licensed\")\n\n***\n\n**Installation**\n\n```\n    $ git clone https://github.com/arcolife/scholarec.git\n    $ cd scholarec/\n    $ sh setup.sh\n```\n\n* See INSTALL for detailed instructions.\n\n**Test**\n\n* Optionally, to test if installed, look for a description on executing:\n```\n    $ python -m scholarec\n```\n\n* To see if the scripts runs without error:\n```\n    $ ./tests/run-tests.sh\n    $ ./tests/test.py\n```\n\n**Usage**\n\n* To use the module in a Python script, simply import:\n```python\n    import scholarec\n```\n\n* To check a sample run output, open log/sample_run.txt\n\n* To go for a sample run:\n\n```\n    $ ./tests/query_parse\n```\n\nNote: For developing a small database from arXiv, you need to run \nthe query_parse script and accept \"Extract PDF\" option for extracting \nrelated pdf's, converting them to plain text and extracting interesting \nwords that would later be used for recommendations and suggestions.\n\n\n* A simple arXiv API call can be achieved by executing the following sample code:\n```python          \nimport scholarec\nfrom scholarec.base.arxiv import DocumentArXiv\nurl = \"http://export.arxiv.org/api/query?search_query=all:%22higgs%22&start=0&max_results=2\"\nfrom urllib2 import urlopen\nquery_xml = urlopen(url)\ndoc = DocumentArXiv(query_xml)\ndata_dict = doc.extract_tags()\nfor entry_id in data_dict.keys():\n    print \"ID: %s\" % (entry_id)\n    print(data_dict[entry_id]), \"\\n\"\n```\n        \n***\n\n**FAQ**\n\nQ. What data interchange file formats have been used?\n\nA. Data conversion from XML to JSON as well as in XML itself.\n\n\nQ. What are the Data sources? \n\nA. Dataset currently taken from arXiv. Future: DBLP/Google Scholar. \n\n\nQ. How is the Data dealt with?\n\nA. ElasticSearch/MongoDB for search and storage\n\n***\n\n**LICENSE**\n\n[![GPL V3](http://www.gnu.org/graphics/gplv3-127x51.png)](http://www.gnu.org/licenses/gpl-3.0-standalone.html)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arcolife/scholarec", "keywords": "python ArXiv API recommendation", "license": "GPL v3", "maintainer": null, "maintainer_email": null, "name": "scholarec", "package_url": "https://pypi.org/project/scholarec/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/scholarec/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/arcolife/scholarec"}, "release_url": "https://pypi.org/project/scholarec/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Recommendation engine for scholarly works", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            scholarec<br>=========<br>Recommendation of Scholarly Works <br>---------------------------------<br><br>[![Build Status](https://travis-ci.org/arcolife/scholarec.png?branch=master)](https://travis-ci.org/arcolife/scholarec)<br>[![Dependency Status](https://gemnasium.com/arcolife/scholarec.png)](https://gemnasium.com/arcolife/scholarec)<br>[![Zenodo DOI for github](https://zenodo.org/badge/4244/arcolife/scholarec.png)](http://dx.doi.org/10.5281/zenodo.10265)<br><br>This software has been built due to a need felt for a proper <br>recommendation system for publicly available scholarly/research works. <br><br>It classifies documents and uses personalization features and content-based algorithm to <br>suggest/recommend similar ones, possibly of interest to the user. <br><br>_Note:_ Currently, full-functionality is offered by combining this package and another one, <br>\tthat offeres web interface (Django-based). \t<br>- [arcolife/django-scholarec](https://github.com/arcolife/django-scholarec \"django-scholarec\")<br><br>&gt; *Inspired from an older project* [researchlei](http://cs.stanford.edu/people/karpathy/researchlei/ \"BSD Licensed\")<br><br>***<br><br>**Installation**<br><br>```<br>    $ git clone https://github.com/arcolife/scholarec.git<br>    $ cd scholarec/<br>    $ sh setup.sh<br>```<br><br>* See INSTALL for detailed instructions.<br><br>**Test**<br><br>* Optionally, to test if installed, look for a description on executing:<br>```<br>    $ python -m scholarec<br>```<br><br>* To see if the scripts runs without error:<br>```<br>    $ ./tests/run-tests.sh<br>    $ ./tests/test.py<br>```<br><br>**Usage**<br><br>* To use the module in a Python script, simply import:<br>```python<br>    import scholarec<br>```<br><br>* To check a sample run output, open log/sample_run.txt<br><br>* To go for a sample run:<br><br>```<br>    $ ./tests/query_parse<br>```<br><br>Note: For developing a small database from arXiv, you need to run <br>the query_parse script and accept \"Extract PDF\" option for extracting <br>related pdf's, converting them to plain text and extracting interesting <br>words that would later be used for recommendations and suggestions.<br><br><br>* A simple arXiv API call can be achieved by executing the following sample code:<br>```python          <br>import scholarec<br>from scholarec.base.arxiv import DocumentArXiv<br>url = \"http://export.arxiv.org/api/query?search_query=all:%22higgs%22&amp;start=0&amp;max_results=2\"<br>from urllib2 import urlopen<br>query_xml = urlopen(url)<br>doc = DocumentArXiv(query_xml)<br>data_dict = doc.extract_tags()<br>for entry_id in data_dict.keys():<br>    print \"ID: %s\" % (entry_id)<br>    print(data_dict[entry_id]), \"\\n\"<br>```<br>        <br>***<br><br>**FAQ**<br><br>Q. What data interchange file formats have been used?<br><br>A. Data conversion from XML to JSON as well as in XML itself.<br><br><br>Q. What are the Data sources? <br><br>A. Dataset currently taken from arXiv. Future: DBLP/Google Scholar. <br><br><br>Q. How is the Data dealt with?<br><br>A. ElasticSearch/MongoDB for search and storage<br><br>***<br><br>**LICENSE**<br><br>[![GPL V3](http://www.gnu.org/graphics/gplv3-127x51.png)](http://www.gnu.org/licenses/gpl-3.0-standalone.html)\n          </div>"}, "last_serial": 1111547, "releases": {"0.5": [], "1.0.1": [{"comment_text": "", "digests": {"md5": "97d8daa8cf63ce8049e75e8fd15243a3", "sha256": "d2b3152d75444f040c3f26551e3e4ef0c0310c54fa060ad5744e9d6075c93e25"}, "downloads": -1, "filename": "scholarec-1.0.1.tar.gz", "has_sig": false, "md5_digest": "97d8daa8cf63ce8049e75e8fd15243a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22394, "upload_time": "2014-06-02T15:13:37", "upload_time_iso_8601": "2014-06-02T15:13:37.381574Z", "url": "https://files.pythonhosted.org/packages/27/bb/3f05a44ab1972e91fffb3e3c49a778232c8bbe16476adeb14803bcbd1a46/scholarec-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "97d8daa8cf63ce8049e75e8fd15243a3", "sha256": "d2b3152d75444f040c3f26551e3e4ef0c0310c54fa060ad5744e9d6075c93e25"}, "downloads": -1, "filename": "scholarec-1.0.1.tar.gz", "has_sig": false, "md5_digest": "97d8daa8cf63ce8049e75e8fd15243a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22394, "upload_time": "2014-06-02T15:13:37", "upload_time_iso_8601": "2014-06-02T15:13:37.381574Z", "url": "https://files.pythonhosted.org/packages/27/bb/3f05a44ab1972e91fffb3e3c49a778232c8bbe16476adeb14803bcbd1a46/scholarec-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:45 2020"}