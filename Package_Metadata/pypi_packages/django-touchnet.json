{"info": {"author": "Creative Media", "author_email": "webmaster@creativemedia.ucdavis.edu", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Django Touchnet\n===============\n\nDjango app for Touchnet integration built for KDVS Fundraiser based on Ecollege.\n\nOverview\n--------\n\nEach payment is associated with a ``transaction_id`` that can be any string \nwithout whitespace but is typically a primary key.\n\nThe app includes a basic template tag that has a form with Bootstrap classes \nthat can be used to redirect to Touchnet.\n\nThere are two signals for ``payment_received`` and ``payment_cancelled`` that \nwill trigger on postbacks from Touchnet.\n\nThe ``PostbackLog`` model stores all transactions, what was received and \nreturned, and is registered in the admin.\n\nThe test card is `5454545454545454` for Mastercard.\n\nInstallation\n------------\n\nDownload from Bitbucket and install in virtual environment with ``pip install django-touchnet-x.x.tar.gz``.\n\nConfiguration\n-------------\n\nInclude in ``INSTALLED_APPS``::\n\n    INSTALLED_APPS = (\n        ...\n        'touchnet',\n        ...\n    )\n\nInclude the required settings in your base settings, for example for development::\n\n    TOUCHNET = {\n        'accounting': {\n            'fid': '117', # FID number for account\n            'fau': '3804148111300', # FAU number for account\n        },\n        'posting_key': 'CM-KDVS-jfeiowajfiewao', # Random posting key for site in Touchnet Test\n        'site_id': '24', # Site id in Touchnet Test\n        'url': 'https://secure.touchnet.com:8443/C21642test_upay/web/index.jsp', # Touchnet Test endpoint\n    }\n    \nAnd similarly for production settings::\n\n    TOUCHNET = {\n        'accounting': {\n            'fid': '117',\n            'fau': '3804148111300',\n        },\n        'posting_key': 'CM-KDVS-jfeaiwjfeioaw',\n        'site_id': '17',\n        'url': 'https://marketplace.ucdavis.edu/C21642_upay/web/index.jsp', # Production Touchnet endpoint\n    }\n\nInclude the URLs for postback in your ``urls.py``::\n\n    urlpatterns = patterns('',\n        ...\n        url(r'^touchnet/', include('touchnet.urls')),\n        ...\n    )\n  \nAlso include URLs for success, error, and cancel redirects back, e.g.::\n\n    urlpatterns = patterns('fundraiser.views',\n        ...\n        url(r'^donate/success/$', 'donate_success_detail',\n                name='fundraiser_donate_success_detail'), # Touchnet success\n        url(r'^donate/error/$', 'donate_error_detail', \n                name='fundraiser_donate_error_detail'), # Touchnet error\n        url(r'^donate/cancel/$', 'donate_cancel_detail',\n                name='fundraiser_donate_cancel_detail'), # Touchnet cancel\n        ...\n    )\n\nFinally, log into Touchnet and verify the postback URL, posting key, success \nURL, error URL, and cancel URL settings match. The postback URL should end in\n``/touchnet/postback``, e.g. ``https://fundraiser.kdvs.org/touchnet/postback``. \nThe URL must be ``https`` and the SSL certificate and IP address of the server \nmust be allowed by Touchnet.\n\nUsage\n-----\n\nTo process payments, connect receivers to signals in ``models.py``, optionally\nconnect one for cancellations e.g.::\n\n    # Receivers\n\n    def received_payment(sender, **kwargs):\n        amount = kwargs['amount']\n        transaction_id = kwargs['transaction_id']\n  \n        pledge = Pledge.objects.get(pk=transaction_id)\n        pledge.amount_paid = amount\n        pledge.save()\n    payment_received.connect(received_payment, dispatch_uid='fundraiser_received_payment')\n\n    def received_cancellation(sender, **kwargs):\n        transaction_id = kwargs['transaction_id']\n  \n        pledge = Pledge.objects.get(pk=transaction_id)\n        pledge.timestamp_cancelled = timezone.now()\n        pledge.save()\n    payment_cancelled.connect(received_cancellation, dispatch_uid='fundraiser_received_cancellation')\n    \n\nTo redirect to Touchnet, create a ``touchnet.forms.RedirectForm`` with a \ntransaction id (e.g. pledge pk) and an amount (e.g. donation_amount) in a view::\n\n    def donate_redirect_detail(request):\n        context = {}\n        pledge_pk = request.session['pledge']\n        pledge = Pledge.objects.get(pk=pledge_pk)\n        context['redirect_form'] = RedirectForm(pledge.pk, pledge.donation_amount)\n        return render(request, 'fundraiser/donate_redirect_detail.html', context)\n        \nAnd show the form in a template, optionally submitting it automatically. If \nusing Bootstrap, use the ``show_redirect_form`` template tag::\n\n    {% extends 'core/base.html' %}\n\n    {% load touchnet_extras %}\n\n    {% block page-title %}Payment{% endblock %}\n    {% block donate-status %}active{% endblock %}\n\n    {% block content %}\n    <h2>Continue To Payment</h2>\n    <p>You will be redirected to a third-party payment site.</p>\n    {% show_redirect_form redirect_form %}\n    {% endblock %}\n\n    {% block scripts %}\n      <script>\n        (function($) {\n          $(document).ready(function() {\n            $('button').attr('data-loading-text', 'Redirecting...')\n                .button('loading');\n            $('form').submit();\n          });\n        })($);\n      </script>\n    {% endblock %}\n\nIf the payment was successful, you can retrieve the ``transaction_id`` in the\nsuccess view with the utility function, e.g.::\n\n    def donate_success_detail(request):\n        ...\n        pledge_pk = touchnet.utils.get_transaction_id_from_request(request)\n        ...\n\nProcess\n-------\n\n1. Create ``transaction_id`` by saving a model instance for the transaction \n   (e.g. a pledge) or create a unique id\n2. Make ``RedirectForm`` with ``transaction_id`` and amount, and display\n3. Optionally, auto-submit ``RedirectForm`` with JavaScript\n4. User is redirected to Touchnet URL\n\nSuccess:\n\n5. User inputs credit card information\n6. Touchnet processes credit card\n7. Touchnet send POST request to ``/touchnet/postback/``\n8. Django Touchnet verifies validity and sends signal to ``payment_received``\n9. Receiver receives signal and updates payment amount (e.g. ``pledge.amount_paid``)\n10. Touchnet redirects user to success URL configured\n11. Display success and confirmation\n\nError:\n\n5. An error occurs\n6. Touchnet redirects user to error URL configured\n7. Display error\n\nCancel:\n\n5. User cancels\n6. Touchnet send POST request to ``/touchnet/postback/``\n7. Django Touchnet verifies validity and sends signal to ``payment_cancelled``\n8. Receiver receives signal and processes further (e.g. possibly delete order)\n9. Touchnet redirects user to cancel URL configured\n10. Display cancellation", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://creativemedia.ucdavis.edu/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-touchnet", "package_url": "https://pypi.org/project/django-touchnet/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-touchnet/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://creativemedia.ucdavis.edu/"}, "release_url": "https://pypi.org/project/django-touchnet/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "A Django app to integrate Touchnet.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django app for Touchnet integration built for KDVS Fundraiser based on Ecollege.</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Each payment is associated with a <tt>transaction_id</tt> that can be any string\nwithout whitespace but is typically a primary key.</p>\n<p>The app includes a basic template tag that has a form with Bootstrap classes\nthat can be used to redirect to Touchnet.</p>\n<p>There are two signals for <tt>payment_received</tt> and <tt>payment_cancelled</tt> that\nwill trigger on postbacks from Touchnet.</p>\n<p>The <tt>PostbackLog</tt> model stores all transactions, what was received and\nreturned, and is registered in the admin.</p>\n<p>The test card is <cite>5454545454545454</cite> for Mastercard.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Download from Bitbucket and install in virtual environment with <tt>pip install <span class=\"pre\">django-touchnet-x.x.tar.gz</span></tt>.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Include in <tt>INSTALLED_APPS</tt>:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'touchnet',\n    ...\n)\n</pre>\n<p>Include the required settings in your base settings, for example for development:</p>\n<pre>TOUCHNET = {\n    'accounting': {\n        'fid': '117', # FID number for account\n        'fau': '3804148111300', # FAU number for account\n    },\n    'posting_key': 'CM-KDVS-jfeiowajfiewao', # Random posting key for site in Touchnet Test\n    'site_id': '24', # Site id in Touchnet Test\n    'url': 'https://secure.touchnet.com:8443/C21642test_upay/web/index.jsp', # Touchnet Test endpoint\n}\n</pre>\n<p>And similarly for production settings:</p>\n<pre>TOUCHNET = {\n    'accounting': {\n        'fid': '117',\n        'fau': '3804148111300',\n    },\n    'posting_key': 'CM-KDVS-jfeaiwjfeioaw',\n    'site_id': '17',\n    'url': 'https://marketplace.ucdavis.edu/C21642_upay/web/index.jsp', # Production Touchnet endpoint\n}\n</pre>\n<p>Include the URLs for postback in your <tt>urls.py</tt>:</p>\n<pre>urlpatterns = patterns('',\n    ...\n    url(r'^touchnet/', include('touchnet.urls')),\n    ...\n)\n</pre>\n<p>Also include URLs for success, error, and cancel redirects back, e.g.:</p>\n<pre>urlpatterns = patterns('fundraiser.views',\n    ...\n    url(r'^donate/success/$', 'donate_success_detail',\n            name='fundraiser_donate_success_detail'), # Touchnet success\n    url(r'^donate/error/$', 'donate_error_detail',\n            name='fundraiser_donate_error_detail'), # Touchnet error\n    url(r'^donate/cancel/$', 'donate_cancel_detail',\n            name='fundraiser_donate_cancel_detail'), # Touchnet cancel\n    ...\n)\n</pre>\n<p>Finally, log into Touchnet and verify the postback URL, posting key, success\nURL, error URL, and cancel URL settings match. The postback URL should end in\n<tt>/touchnet/postback</tt>, e.g. <tt><span class=\"pre\">https://fundraiser.kdvs.org/touchnet/postback</span></tt>.\nThe URL must be <tt>https</tt> and the SSL certificate and IP address of the server\nmust be allowed by Touchnet.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To process payments, connect receivers to signals in <tt>models.py</tt>, optionally\nconnect one for cancellations e.g.:</p>\n<pre># Receivers\n\ndef received_payment(sender, **kwargs):\n    amount = kwargs['amount']\n    transaction_id = kwargs['transaction_id']\n\n    pledge = Pledge.objects.get(pk=transaction_id)\n    pledge.amount_paid = amount\n    pledge.save()\npayment_received.connect(received_payment, dispatch_uid='fundraiser_received_payment')\n\ndef received_cancellation(sender, **kwargs):\n    transaction_id = kwargs['transaction_id']\n\n    pledge = Pledge.objects.get(pk=transaction_id)\n    pledge.timestamp_cancelled = timezone.now()\n    pledge.save()\npayment_cancelled.connect(received_cancellation, dispatch_uid='fundraiser_received_cancellation')\n</pre>\n<p>To redirect to Touchnet, create a <tt>touchnet.forms.RedirectForm</tt> with a\ntransaction id (e.g. pledge pk) and an amount (e.g. donation_amount) in a view:</p>\n<pre>def donate_redirect_detail(request):\n    context = {}\n    pledge_pk = request.session['pledge']\n    pledge = Pledge.objects.get(pk=pledge_pk)\n    context['redirect_form'] = RedirectForm(pledge.pk, pledge.donation_amount)\n    return render(request, 'fundraiser/donate_redirect_detail.html', context)\n</pre>\n<p>And show the form in a template, optionally submitting it automatically. If\nusing Bootstrap, use the <tt>show_redirect_form</tt> template tag:</p>\n<pre>{% extends 'core/base.html' %}\n\n{% load touchnet_extras %}\n\n{% block page-title %}Payment{% endblock %}\n{% block donate-status %}active{% endblock %}\n\n{% block content %}\n&lt;h2&gt;Continue To Payment&lt;/h2&gt;\n&lt;p&gt;You will be redirected to a third-party payment site.&lt;/p&gt;\n{% show_redirect_form redirect_form %}\n{% endblock %}\n\n{% block scripts %}\n  &lt;script&gt;\n    (function($) {\n      $(document).ready(function() {\n        $('button').attr('data-loading-text', 'Redirecting...')\n            .button('loading');\n        $('form').submit();\n      });\n    })($);\n  &lt;/script&gt;\n{% endblock %}\n</pre>\n<p>If the payment was successful, you can retrieve the <tt>transaction_id</tt> in the\nsuccess view with the utility function, e.g.:</p>\n<pre>def donate_success_detail(request):\n    ...\n    pledge_pk = touchnet.utils.get_transaction_id_from_request(request)\n    ...\n</pre>\n</div>\n<div id=\"process\">\n<h2>Process</h2>\n<ol>\n<li>Create <tt>transaction_id</tt> by saving a model instance for the transaction\n(e.g. a pledge) or create a unique id</li>\n<li>Make <tt>RedirectForm</tt> with <tt>transaction_id</tt> and amount, and display</li>\n<li>Optionally, auto-submit <tt>RedirectForm</tt> with JavaScript</li>\n<li>User is redirected to Touchnet URL</li>\n</ol>\n<p>Success:</p>\n<ol>\n<li>User inputs credit card information</li>\n<li>Touchnet processes credit card</li>\n<li>Touchnet send POST request to <tt>/touchnet/postback/</tt></li>\n<li>Django Touchnet verifies validity and sends signal to <tt>payment_received</tt></li>\n<li>Receiver receives signal and updates payment amount (e.g. <tt>pledge.amount_paid</tt>)</li>\n<li>Touchnet redirects user to success URL configured</li>\n<li>Display success and confirmation</li>\n</ol>\n<p>Error:</p>\n<ol>\n<li>An error occurs</li>\n<li>Touchnet redirects user to error URL configured</li>\n<li>Display error</li>\n</ol>\n<p>Cancel:</p>\n<ol>\n<li>User cancels</li>\n<li>Touchnet send POST request to <tt>/touchnet/postback/</tt></li>\n<li>Django Touchnet verifies validity and sends signal to <tt>payment_cancelled</tt></li>\n<li>Receiver receives signal and processes further (e.g. possibly delete order)</li>\n<li>Touchnet redirects user to cancel URL configured</li>\n<li>Display cancellation</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 1553675, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "f63f8003e2eb7dd8f0a6d04706e2ecb0", "sha256": "7ec40ec20cade6c99e6d28b5cc16e76dd619ad77ea7b96cf3e185dfe2bc655a7"}, "downloads": -1, "filename": "django-touchnet-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f63f8003e2eb7dd8f0a6d04706e2ecb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6690, "upload_time": "2015-05-19T20:56:20", "upload_time_iso_8601": "2015-05-19T20:56:20.077895Z", "url": "https://files.pythonhosted.org/packages/bb/59/84472229e8b15f6bf1e40acd05991ad8e320f6c98c3c61b60a38aa1c6a84/django-touchnet-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f63f8003e2eb7dd8f0a6d04706e2ecb0", "sha256": "7ec40ec20cade6c99e6d28b5cc16e76dd619ad77ea7b96cf3e185dfe2bc655a7"}, "downloads": -1, "filename": "django-touchnet-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f63f8003e2eb7dd8f0a6d04706e2ecb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6690, "upload_time": "2015-05-19T20:56:20", "upload_time_iso_8601": "2015-05-19T20:56:20.077895Z", "url": "https://files.pythonhosted.org/packages/bb/59/84472229e8b15f6bf1e40acd05991ad8e320f6c98c3c61b60a38aa1c6a84/django-touchnet-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:23 2020"}