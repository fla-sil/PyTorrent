{"info": {"author": "Brian Faherty", "author_email": "anothergenericuser@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# django-brancher\nThis is a Django app to help manage branches that contain database migrations. It basically creates a new database from a template of the existing default database and then uses that new branch-specific database for `./manage.py migrate` and `./manage.py runserver` commands.\n\n*This is not intended for production use.*\n\n## Example\n\n### Requirements\n  * git\n  * postgres\n  * your postgres user has createdb permission (`alter role <user> createdb;`)\n  * django-brancher installed via pip\n  * brancher added to your Django installed apps\n\n### Sample workflow\nThis is an example work flow to create a new branch, run migrations on it, start runserver, and finally delete it.\n```\ngit checkout -b funtime\n<code up some migrations and run makemigrations>\npython manage.py branch_mk\npython manage.py branch_it migrate\npython manage.py branch_it runserver\npython manage.py branch_rm\n```\n\n## Commands\n\n### Run command\nRun a command with DATABASES['default']['NAME'] set to DATABASES['default']['NAME']_`$ git rev-prse --abbrev-ref HEAD`\n\n```\npython manage.py branch_it diffsettings\n```\n\n### List\nList all branched databases available\n```\npython manage.py branch_ls\n```\n\n### Create\nMakes a database based off the current default database given a unique name based on the default database name plus the branch name (e.g. `$ git rev-prse --abbrev-ref HEAD`)\n```\n$ python manage.py branch_mk\n```\n\n### Delete\nDeletes the branched database based off the result of `$ git rev-prse --abbrev-ref HEAD`\n```\n$ python manage.py branch_rm\n```\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scrummyin/django-brancher", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-brancher", "package_url": "https://pypi.org/project/django-brancher/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-brancher/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/scrummyin/django-brancher"}, "release_url": "https://pypi.org/project/django-brancher/0.1/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># django-brancher\nThis is a Django app to help manage branches that contain database migrations. It basically creates a new database from a template of the existing default database and then uses that new branch-specific database for <cite>./manage.py migrate</cite> and <cite>./manage.py runserver</cite> commands.</p>\n<p><em>This is not intended for production use.</em></p>\n<p>## Example</p>\n<dl>\n<dt>### Requirements</dt>\n<dd><ul>\n<li>git</li>\n<li>postgres</li>\n<li>your postgres user has createdb permission (<cite>alter role &lt;user&gt; createdb;</cite>)</li>\n<li>django-brancher installed via pip</li>\n<li>brancher added to your Django installed apps</li>\n</ul>\n</dd>\n</dl>\n<p>### Sample workflow\nThis is an example work flow to create a new branch, run migrations on it, start runserver, and finally delete it.\n<tt>`\ngit checkout <span class=\"pre\">-b</span> funtime\n&lt;code up some migrations and run makemigrations&gt;\npython manage.py branch_mk\npython manage.py branch_it migrate\npython manage.py branch_it runserver\npython manage.py branch_rm\n`</tt></p>\n<p>## Commands</p>\n<p>### Run command\nRun a command with DATABASES[\u2018default\u2019][\u2018NAME\u2019] set to DATABASES[\u2018default\u2019][\u2018NAME\u2019]_`$ git rev-prse \u2013abbrev-ref HEAD`</p>\n<p><tt>`\npython manage.py branch_it diffsettings\n`</tt></p>\n<p>### List\nList all branched databases available\n<tt>`\npython manage.py branch_ls\n`</tt></p>\n<p>### Create\nMakes a database based off the current default database given a unique name based on the default database name plus the branch name (e.g. <cite>$ git rev-prse \u2013abbrev-ref HEAD</cite>)\n<tt>`\n$ python manage.py branch_mk\n`</tt></p>\n<p>### Delete\nDeletes the branched database based off the result of <cite>$ git rev-prse \u2013abbrev-ref HEAD</cite>\n<tt>`\n$ python manage.py branch_rm\n`</tt></p>\n\n          </div>"}, "last_serial": 2596347, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "38056a7810e125fc658d16d573955d37", "sha256": "3733f863b7ebb35e0a5295d541ae931db046f8131d10628eb4ebad53cfa7d515"}, "downloads": -1, "filename": "django-brancher-0.1.tar.gz", "has_sig": false, "md5_digest": "38056a7810e125fc658d16d573955d37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4008, "upload_time": "2017-01-24T23:01:07", "upload_time_iso_8601": "2017-01-24T23:01:07.980038Z", "url": "https://files.pythonhosted.org/packages/b3/ca/aa4f7661d338e09ff23c476f46e0edd0c47c18668ecbc04b32179da08ee7/django-brancher-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38056a7810e125fc658d16d573955d37", "sha256": "3733f863b7ebb35e0a5295d541ae931db046f8131d10628eb4ebad53cfa7d515"}, "downloads": -1, "filename": "django-brancher-0.1.tar.gz", "has_sig": false, "md5_digest": "38056a7810e125fc658d16d573955d37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4008, "upload_time": "2017-01-24T23:01:07", "upload_time_iso_8601": "2017-01-24T23:01:07.980038Z", "url": "https://files.pythonhosted.org/packages/b3/ca/aa4f7661d338e09ff23c476f46e0edd0c47c18668ecbc04b32179da08ee7/django-brancher-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:20 2020"}