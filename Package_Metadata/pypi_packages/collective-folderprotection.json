{"info": {"author": "Enfold Systems, Inc.", "author_email": "info@enfoldsystems.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 4.3", "Framework :: Plone :: 5.0", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. contents::\n\nIntroduction\n============\n\nThis package provides 3 behaviors to secure your Dexterity content types in 3 ways:\n\n  * \"Password Protected\": Will allow you to set a password to specific object so any user, except manager or its owner, needs to provide it to access it or its children (if the protected content type is a folderish)\n\n  * \"Delete Protection\": Intended for folderish content types, this behavior will protect the content's children for being removed.\n\n  * \"Rename Protection\": Intended for folderish content types, this behavior will protect the content's children for being renamed. Note: For this particular behavior, this only protects renaming through the UI, and does not protect the object if it is renamed using manage_renameObjects programatically from its parent.\n\n\nInstallation\n============\n\nJust add 'collective_folderprotection' to your eggs list in your buildout and re-run buildout. The dexterity is included by the use of the 'dexterity' extra, so make sure to include that, or to pull dexterity separatedly.\n\n\nUsage\n=====\n\nAfter installing this product, you should be provided with 3 new behaviors to activate from the \"Dexterity content types\" tool.\nIf you want to enable them from your type XML, just add any of the following:\n\n  * collective_folderprotection.behaviors.interfaces.IPasswordProtected\n\n  * collective_folderprotection.behaviors.interfaces.IDeleteProtected\n\n  * collective_folderprotection.behaviors.interfaces.IRenameProtected\n\n\nPassword protection\n===================\n\nThere are 3 different ways in which you can assign a password to your \"Password protected\" enabled content.\n\nThrough the add/edit views\n++++++++++++++++++++++++++\n\nWhen adding or editing a content type which has the behavior enabled, you should see a new field along the schema, with the \"Password\" label.\nEnter your password here to assign it. Leave it blank, to remove password protection for this specific object.\nNOTE: This is not available for Archetypes.\n\nThrough the \"Assign password\" view\n++++++++++++++++++++++++++++++++++\n\nYou should see a new tab for an object which has the behavior enabled. Going to this view and entering any password will assign it. Leave it blank, to remove password protection for this specific object. This view is independent from the add/edit ones, you can use either one.\n\nProgramatically on content creation\n+++++++++++++++++++++++++++++++++++\n\nIf you are creating content programatically, you can assign a password when calling the function, just by adding the optional \"password\" argumnent.\n\n\n.. code-block:: python\n\n    from plone.dexterity.utils import createContentInContainer\n    ...\n    ...\n    createContentInContainer(self.portal, \"your.app.dexterity.fti.information\", title=title, password=pw)\n\n\nDelete protection\n=================\n\nWhen the behavior is enabled for a given content type, a new checkbox will be shown in both the add and the edit screens, when creating or editing that specific content type. Marking the checkbox will protect this element and its direct children (if this is a folderish type) from being deleted.\n\nRename protection\n=================\n\nWhen the behavior is enabled for a given content type, a new checkbox will be shown in both the add and the edit screens, when creating or editing that specific content type. Marking the checkbox will protect this element and its direct children (if this is a folderish type) from being renamed.\nContributors\n============\n\n- Franco Pellegrini, Original Author\n\nLock Icons provided by http://www.danilodemarco.com/\n\nChangelog\n=========\n\n2.1 (2019-12-10)\n++++++++++++++++++\n\n- Raise exceptions if a protected item is renamed or deleted\n  [frapell]\n\n- Include uninstall profile and add post_install routines to ignore exceptions\n  [frapell]\n\n\n2.0.1 (2019-08-06)\n++++++++++++++++++\n\n- Fix rst format for pkg description\n  [frapell]\n\n\n2.0 (2019-08-06)\n++++++++++++++++\n\n- As of this version, this product only supports Plone 5.0+\n\n- Remove support for Archetypes\n  [enfold-josh]\n\n- Support Python 3 and Plone 5.2\n  [enfold-josh,frapell]\n\n- Catch exception raised when inserting post_traverse hook during a\n  non-publishing traversal.\n  [enfold-josh]\n\n- Fix tests.\n  [enfold-josh]\n\n- Change functional test files extensions to .robot\n  [enfold-josh]\n\n\n1.0-dev (unreleased)\n++++++++++++++++++++\n\n- Add support for Archetypes [frapell]\n\n- Make Dexterity an optional dependency [frapell]\n\n- Include behavior to prevent removing items from a folderish [frapell]\n\n- Include behavior to prevent renaming items in a folderish (only through UI). [frapell]\n\n- Include behavior to allow setting a password for viewing a folder [frapell]\n\n- Package created using templer\n  [frapell]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective_folderprotection", "keywords": "", "license": "gpl", "maintainer": "", "maintainer_email": "", "name": "collective-folderprotection", "package_url": "https://pypi.org/project/collective-folderprotection/", "platform": "", "project_url": "https://pypi.org/project/collective-folderprotection/", "project_urls": {"Homepage": "https://github.com/collective/collective_folderprotection"}, "release_url": "https://pypi.org/project/collective-folderprotection/2.1/", "requires_dist": null, "requires_python": "", "summary": "", "version": "2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id4\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#installation\" id=\"id5\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" id=\"id6\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#password-protection\" id=\"id7\" rel=\"nofollow\">Password protection</a><ul>\n<li><a href=\"#through-the-add-edit-views\" id=\"id8\" rel=\"nofollow\">Through the add/edit views</a></li>\n<li><a href=\"#through-the-assign-password-view\" id=\"id9\" rel=\"nofollow\">Through the \u201cAssign password\u201d view</a></li>\n<li><a href=\"#programatically-on-content-creation\" id=\"id10\" rel=\"nofollow\">Programatically on content creation</a></li>\n</ul>\n</li>\n<li><a href=\"#delete-protection\" id=\"id11\" rel=\"nofollow\">Delete protection</a></li>\n<li><a href=\"#rename-protection\" id=\"id12\" rel=\"nofollow\">Rename protection</a></li>\n<li><a href=\"#changelog\" id=\"id13\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id14\" rel=\"nofollow\">2.1 (2019-12-10)</a></li>\n<li><a href=\"#id2\" id=\"id15\" rel=\"nofollow\">2.0.1 (2019-08-06)</a></li>\n<li><a href=\"#id3\" id=\"id16\" rel=\"nofollow\">2.0 (2019-08-06)</a></li>\n<li><a href=\"#dev-unreleased\" id=\"id17\" rel=\"nofollow\">1.0-dev (unreleased)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Introduction</a></h2>\n<p>This package provides 3 behaviors to secure your Dexterity content types in 3 ways:</p>\n<blockquote>\n<ul>\n<li>\u201cPassword Protected\u201d: Will allow you to set a password to specific object so any user, except manager or its owner, needs to provide it to access it or its children (if the protected content type is a folderish)</li>\n<li>\u201cDelete Protection\u201d: Intended for folderish content types, this behavior will protect the content\u2019s children for being removed.</li>\n<li>\u201cRename Protection\u201d: Intended for folderish content types, this behavior will protect the content\u2019s children for being renamed. Note: For this particular behavior, this only protects renaming through the UI, and does not protect the object if it is renamed using manage_renameObjects programatically from its parent.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Installation</a></h2>\n<p>Just add \u2018collective_folderprotection\u2019 to your eggs list in your buildout and re-run buildout. The dexterity is included by the use of the \u2018dexterity\u2019 extra, so make sure to include that, or to pull dexterity separatedly.</p>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Usage</a></h2>\n<p>After installing this product, you should be provided with 3 new behaviors to activate from the \u201cDexterity content types\u201d tool.\nIf you want to enable them from your type XML, just add any of the following:</p>\n<blockquote>\n<ul>\n<li>collective_folderprotection.behaviors.interfaces.IPasswordProtected</li>\n<li>collective_folderprotection.behaviors.interfaces.IDeleteProtected</li>\n<li>collective_folderprotection.behaviors.interfaces.IRenameProtected</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"password-protection\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Password protection</a></h2>\n<p>There are 3 different ways in which you can assign a password to your \u201cPassword protected\u201d enabled content.</p>\n<div id=\"through-the-add-edit-views\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Through the add/edit views</a></h3>\n<p>When adding or editing a content type which has the behavior enabled, you should see a new field along the schema, with the \u201cPassword\u201d label.\nEnter your password here to assign it. Leave it blank, to remove password protection for this specific object.\nNOTE: This is not available for Archetypes.</p>\n</div>\n<div id=\"through-the-assign-password-view\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Through the \u201cAssign password\u201d view</a></h3>\n<p>You should see a new tab for an object which has the behavior enabled. Going to this view and entering any password will assign it. Leave it blank, to remove password protection for this specific object. This view is independent from the add/edit ones, you can use either one.</p>\n</div>\n<div id=\"programatically-on-content-creation\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Programatically on content creation</a></h3>\n<p>If you are creating content programatically, you can assign a password when calling the function, just by adding the optional \u201cpassword\u201d argumnent.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">plone.dexterity.utils</span> <span class=\"kn\">import</span> <span class=\"n\">createContentInContainer</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>\n<span class=\"n\">createContentInContainer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">portal</span><span class=\"p\">,</span> <span class=\"s2\">\"your.app.dexterity.fti.information\"</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"n\">pw</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"delete-protection\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Delete protection</a></h2>\n<p>When the behavior is enabled for a given content type, a new checkbox will be shown in both the add and the edit screens, when creating or editing that specific content type. Marking the checkbox will protect this element and its direct children (if this is a folderish type) from being deleted.</p>\n</div>\n<div id=\"rename-protection\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Rename protection</a></h2>\n<p>When the behavior is enabled for a given content type, a new checkbox will be shown in both the add and the edit screens, when creating or editing that specific content type. Marking the checkbox will protect this element and its direct children (if this is a folderish type) from being renamed.\nContributors\n============</p>\n<ul>\n<li>Franco Pellegrini, Original Author</li>\n</ul>\n<p>Lock Icons provided by <a href=\"http://www.danilodemarco.com/\" rel=\"nofollow\">http://www.danilodemarco.com/</a></p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id13\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id14\" rel=\"nofollow\">2.1 (2019-12-10)</a></h3>\n<ul>\n<li>Raise exceptions if a protected item is renamed or deleted\n[frapell]</li>\n<li>Include uninstall profile and add post_install routines to ignore exceptions\n[frapell]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id15\" rel=\"nofollow\">2.0.1 (2019-08-06)</a></h3>\n<ul>\n<li>Fix rst format for pkg description\n[frapell]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id16\" rel=\"nofollow\">2.0 (2019-08-06)</a></h3>\n<ul>\n<li>As of this version, this product only supports Plone 5.0+</li>\n<li>Remove support for Archetypes\n[enfold-josh]</li>\n<li>Support Python 3 and Plone 5.2\n[enfold-josh,frapell]</li>\n<li>Catch exception raised when inserting post_traverse hook during a\nnon-publishing traversal.\n[enfold-josh]</li>\n<li>Fix tests.\n[enfold-josh]</li>\n<li>Change functional test files extensions to .robot\n[enfold-josh]</li>\n</ul>\n</div>\n<div id=\"dev-unreleased\">\n<h3><a href=\"#id17\" rel=\"nofollow\">1.0-dev (unreleased)</a></h3>\n<ul>\n<li>Add support for Archetypes [frapell]</li>\n<li>Make Dexterity an optional dependency [frapell]</li>\n<li>Include behavior to prevent removing items from a folderish [frapell]</li>\n<li>Include behavior to prevent renaming items in a folderish (only through UI). [frapell]</li>\n<li>Include behavior to allow setting a password for viewing a folder [frapell]</li>\n<li>Package created using templer\n[frapell]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6273645, "releases": {"2.0.1": [{"comment_text": "", "digests": {"md5": "0f06415af6706535b0ccaf55c4d449cd", "sha256": "c4f4f11c8e35be5d6c4b201a5217b1c5b6b02257ad19aca2362e0ecc2df76ec8"}, "downloads": -1, "filename": "collective_folderprotection-2.0.1.zip", "has_sig": false, "md5_digest": "0f06415af6706535b0ccaf55c4d449cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60639, "upload_time": "2019-08-06T18:01:06", "upload_time_iso_8601": "2019-08-06T18:01:06.806013Z", "url": "https://files.pythonhosted.org/packages/eb/5d/cbe7ec0fd05b6c601e79ec51930cb558ffdd3379f0deee32310abd7da78c/collective_folderprotection-2.0.1.zip", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "99cfb7da63a651504641e09ced9931c4", "sha256": "4d1eb5510ccd0c2134ed123ebca4d17f39c28dfff3d7f95a9f1cff137bca7a98"}, "downloads": -1, "filename": "collective_folderprotection-2.1.zip", "has_sig": false, "md5_digest": "99cfb7da63a651504641e09ced9931c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62867, "upload_time": "2019-12-10T15:43:46", "upload_time_iso_8601": "2019-12-10T15:43:46.784086Z", "url": "https://files.pythonhosted.org/packages/6a/18/5d993005af9399acfd09714528d34a5862939b8238c4f5de27edc92b7817/collective_folderprotection-2.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99cfb7da63a651504641e09ced9931c4", "sha256": "4d1eb5510ccd0c2134ed123ebca4d17f39c28dfff3d7f95a9f1cff137bca7a98"}, "downloads": -1, "filename": "collective_folderprotection-2.1.zip", "has_sig": false, "md5_digest": "99cfb7da63a651504641e09ced9931c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62867, "upload_time": "2019-12-10T15:43:46", "upload_time_iso_8601": "2019-12-10T15:43:46.784086Z", "url": "https://files.pythonhosted.org/packages/6a/18/5d993005af9399acfd09714528d34a5862939b8238c4f5de27edc92b7817/collective_folderprotection-2.1.zip", "yanked": false}], "timestamp": "Thu May  7 22:17:54 2020"}