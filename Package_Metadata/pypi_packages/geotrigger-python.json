{"info": {"author": "Josh Yaganeh", "author_email": "jyaganeh@esri.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "geotrigger-python\n=================\n\nA simple Python client library for interacting with the ArcGIS\nGeotrigger Service via the ``GeotriggerClient`` object.\n\nThe Geotrigger Service is a cloud-hosted geofencing platform, which\nsends push notifications or notifies a remote server when a device\nenters or exits an area.\n\nThe Geotrigger API manages Application and Device information and\npermissions, as well as providing access to create, update, and list\ninformation about Triggers, Tags, and Device Locations.\n\nFor more information please refer to the `Geotrigger Service\nDocumentation <https://developers.arcgis.com/en/geotrigger-service/>`__.\n\nFeatures\n--------\n\n-  Handles authentication and refreshing of credentials\n-  Supports making requests as an application, allowing for full\n   management of devices, triggers, tags, and permissions\n-  Also supports making requests as a device, which can be useful for\n   testing purposes\n\nDependencies\n------------\n\n-  Requests (>= 2.1.0)\n\nFor running tests, you'll also need:\n\n-  Mock (>= 1.0.1)\n\nInstallation\n------------\n\nYou can install ``geotrigger-python`` from PyPI using the following\ncommand:\n\n.. code:: bash\n\n    pip install geotrigger-python\n\nIt's also possible to install from a clone of this repository by running\n``setup.py install`` or ``setup.py develop``.\n\nExamples\n--------\n\nUsing the GeotriggerClient as an application\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis method of using the `GeotriggerClient` is for server-side apps, acting as\nthe sole owner of your ArcGIS application.\n\nBefore continuing, you'll need to find the ``client_id`` and\n``client_secret`` for your ArcGIS application on the `ArcGIS for\nDevelopers <https://developers.arcgis.com/en/applications/>`__ site.\nYou'll find them in the *API Access* section of your applications\ndetails.\n\n**Please make sure to keep your client\\_secret secure.** If a third\nparty obtains your client secret, the will be able to do anything they\nwant to your Geotrigger application. Your ``client_secret`` should only\nbe included in server-side applications and should never be distributed\nas part of a client-side web or mobile application.\n\nYou will need to fill in values for the variable names given in\nall-caps.\n\n.. code:: python\n\n    from geotrigger import GeotriggerClient\n\n    # Create a GeotriggerClient as an Application\n    gt = GeotriggerClient(CLIENT_ID, CLIENT_SECRET)\n\n    # Fetch a list of all triggers in this application.\n    triggers = gt.request('trigger/list')\n\n    # Print all the triggers and any tags applied to them.\n    print \"\\nFound %d triggers:\" % len(triggers['triggers'])\n    for t in triggers['triggers']:\n        print \"- %s (%s)\" % (t['triggerId'], \",\".join(t['tags']))\n\n    # Add \"testing123\" tag to all of the triggers that we fetched above.\n    triggers_updated = gt.request('trigger/update', {\n        'triggerIds': [t['triggerId'] for t in triggers['triggers']],\n        'addTags': TAG\n    })\n\n    # Print the updated triggers.\n    print \"\\nUpdated %d triggers:\" % len(triggers_updated['triggers'])\n    for t in triggers_updated['triggers']:\n        print \"- %s (%s)\" % (t['triggerId'], \",\".join(t['tags']))\n\n    # Delete the \"testing123\" tag from the application.\n    tags_deleted = gt.request('tag/delete', {'tags': TAG})\n    print '\\nDeleted tags: \"%s\"' % \", \".join(tags_deleted.keys())\n\nUsing the GeotriggerClient as a Device\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``GeotriggerClient`` can also be used as if it were a device, which\nwill allow you to send location updates and fire triggers, but you will\nnot be able to receive any Geotrigger notifications, because they are sent as\npush messages to actual mobile devices. You can use the\n`trigger/history <https://developers.arcgis.com/en/geotrigger-service/api-reference/trigger-history/>`__\nAPI route or configure your triggers with a ``callbackUrl`` in order to\nobserve that triggers are being fired.\n\nYou'll only need the ``client_id`` for your application in order to use\nthe ``GeotriggerClient`` as a device.\n\nFor testing callback triggers, you can use the handy\n`RequestBin <http://requestb.in>`__ service. Create a new bin and\nprovide its URL as the ``callbackUrl`` when creating a trigger.\n\nYou will need to fill in values for the variable names given in\nall-caps.\n\n.. code:: python\n\n    from geotrigger import GeotriggerClient\n\n    # Create a GeotriggerClient as a device\n    gt = GeotriggerClient(CLIENT_ID)\n\n    # Default tags are created for all devices and triggers. Device default tags\n    # can be used when you want to allow devices to create triggers that only they\n    # can fire. Default tags look like: 'device:device_id' or 'trigger:trigger_id'\n    device_tag = 'device:%s' % gt.session.device_id\n\n    # Build a callback trigger, using your default tag and RequestBin URL.\n    esri_hq = {\n        'condition': {\n            'geo': {\n                'latitude': 34.0562,\n                'longitude': -117.1956,\n                'distance': 100\n            },\n            'direction': 'enter'\n        },\n        'action': {\n            'callbackUrl': CALLBACK_URL\n        },\n        'setTags': device_tag\n    }\n\n    # Post the trigger to the Geotrigger API\n    trigger = gt.request('trigger/create', esri_hq)\n    print trigger\n\n    # Construct a fake location update to send to the Geotrigger API.\n    # Supplying a previous location is not strictly required, but will speed up\n    # trigger processing by avoiding a database lookup.\n    location_update = {\n        'previous': {\n            'timestamp': datetime.now().isoformat(),\n            'latitude': 45.5165,\n            'longitude': -122.6764,\n            'accuracy': 5,\n        },\n        'locations': [\n            {\n                'timestamp': datetime.now().isoformat(),\n                'latitude': 34.0562,\n                'longitude': -117.1956,\n                'accuracy': 5,\n            }\n        ]\n    }\n\n    # Send the location update.\n    update_response = gt.request('location/update', location_update)\n    print update_response\n\nShortly after running the above code, you will see a POST to your\ncallback url.\n\nAdvanced GeotriggerClient usage\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you already have an ArcGIS Application ``access_token`` that you'd\nlike to use to create a ``GeotriggerClient``, pass in a\n``GeotriggerApplication`` as the ``session`` kwarg. You may want to do this if\nyou are integrating Geotrigger functionality into an application that\nalready obtains credentials from ArcGIS Online.\n\nSimilarly, if you want to impersonate an existing device for which you\nalready have a ``client_id``, ``device_id``, ``access_token``, and\n``refresh_token``, you can create your own ``GeotriggerDevice`` to pass\ninto the ``GeotriggerClient``. This can be used to debug apps that are\nbeing developed with the Geotrigger SDKs for Android and iOS.\n\n.. code:: python\n\n    from geotrigger import GeotriggerClient, GeotriggerApplication, GeotriggerDevice\n\n    app = GeotriggerApplication(CLIENT_ID, CLIENT_SECRET, ACCESS_TOKEN)\n    app_client = GeotriggerClient(session=app)\n\n    device = GeotriggerDevice(CLIENT_ID, DEVICE_ID, ACCESS_TOKEN, REFRESH_TOKEN)\n    device_client = GeotriggerClient(session=device)\n\nIssues\n~~~~~~\n\nFind a bug or want to request a new feature? Please let us know by submitting an issue.\n\nContributing\n~~~~~~~~~~~~\n\nEsri welcomes contributions from anyone and everyone. Please see our `guidelines for contributing <https://github.com/esri/contributing>`__.\n\nLicensing\n~~~~~~~~~\n\nCopyright 2013 Esri\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nA copy of the license is available in the LICENSE file.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/esri/geotrigger-python", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "geotrigger-python", "package_url": "https://pypi.org/project/geotrigger-python/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/geotrigger-python/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/esri/geotrigger-python"}, "release_url": "https://pypi.org/project/geotrigger-python/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A simple client library for interacting with the ArcGIS Geotrigger API.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple Python client library for interacting with the ArcGIS\nGeotrigger Service via the <tt>GeotriggerClient</tt> object.</p>\n<p>The Geotrigger Service is a cloud-hosted geofencing platform, which\nsends push notifications or notifies a remote server when a device\nenters or exits an area.</p>\n<p>The Geotrigger API manages Application and Device information and\npermissions, as well as providing access to create, update, and list\ninformation about Triggers, Tags, and Device Locations.</p>\n<p>For more information please refer to the <a href=\"https://developers.arcgis.com/en/geotrigger-service/\" rel=\"nofollow\">Geotrigger Service\nDocumentation</a>.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Handles authentication and refreshing of credentials</li>\n<li>Supports making requests as an application, allowing for full\nmanagement of devices, triggers, tags, and permissions</li>\n<li>Also supports making requests as a device, which can be useful for\ntesting purposes</li>\n</ul>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li>Requests (&gt;= 2.1.0)</li>\n</ul>\n<p>For running tests, you\u2019ll also need:</p>\n<ul>\n<li>Mock (&gt;= 1.0.1)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt><span class=\"pre\">geotrigger-python</span></tt> from PyPI using the following\ncommand:</p>\n<pre>pip install geotrigger-python\n</pre>\n<p>It\u2019s also possible to install from a clone of this repository by running\n<tt>setup.py install</tt> or <tt>setup.py develop</tt>.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"using-the-geotriggerclient-as-an-application\">\n<h3>Using the GeotriggerClient as an application</h3>\n<p>This method of using the <cite>GeotriggerClient</cite> is for server-side apps, acting as\nthe sole owner of your ArcGIS application.</p>\n<p>Before continuing, you\u2019ll need to find the <tt>client_id</tt> and\n<tt>client_secret</tt> for your ArcGIS application on the <a href=\"https://developers.arcgis.com/en/applications/\" rel=\"nofollow\">ArcGIS for\nDevelopers</a> site.\nYou\u2019ll find them in the <em>API Access</em> section of your applications\ndetails.</p>\n<p><strong>Please make sure to keep your client_secret secure.</strong> If a third\nparty obtains your client secret, the will be able to do anything they\nwant to your Geotrigger application. Your <tt>client_secret</tt> should only\nbe included in server-side applications and should never be distributed\nas part of a client-side web or mobile application.</p>\n<p>You will need to fill in values for the variable names given in\nall-caps.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">geotrigger</span> <span class=\"kn\">import</span> <span class=\"n\">GeotriggerClient</span>\n\n<span class=\"c1\"># Create a GeotriggerClient as an Application</span>\n<span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">GeotriggerClient</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fetch a list of all triggers in this application.</span>\n<span class=\"n\">triggers</span> <span class=\"o\">=</span> <span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s1\">'trigger/list'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print all the triggers and any tags applied to them.</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Found </span><span class=\"si\">%d</span><span class=\"s2\"> triggers:\"</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">triggers</span><span class=\"p\">[</span><span class=\"s1\">'triggers'</span><span class=\"p\">])</span>\n<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">triggers</span><span class=\"p\">[</span><span class=\"s1\">'triggers'</span><span class=\"p\">]:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"- </span><span class=\"si\">%s</span><span class=\"s2\"> (</span><span class=\"si\">%s</span><span class=\"s2\">)\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"s1\">'triggerId'</span><span class=\"p\">],</span> <span class=\"s2\">\",\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"s1\">'tags'</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># Add \"testing123\" tag to all of the triggers that we fetched above.</span>\n<span class=\"n\">triggers_updated</span> <span class=\"o\">=</span> <span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s1\">'trigger/update'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'triggerIds'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"s1\">'triggerId'</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">triggers</span><span class=\"p\">[</span><span class=\"s1\">'triggers'</span><span class=\"p\">]],</span>\n    <span class=\"s1\">'addTags'</span><span class=\"p\">:</span> <span class=\"n\">TAG</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\"># Print the updated triggers.</span>\n<span class=\"nb\">print</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">Updated </span><span class=\"si\">%d</span><span class=\"s2\"> triggers:\"</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">triggers_updated</span><span class=\"p\">[</span><span class=\"s1\">'triggers'</span><span class=\"p\">])</span>\n<span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">triggers_updated</span><span class=\"p\">[</span><span class=\"s1\">'triggers'</span><span class=\"p\">]:</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"- </span><span class=\"si\">%s</span><span class=\"s2\"> (</span><span class=\"si\">%s</span><span class=\"s2\">)\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"s1\">'triggerId'</span><span class=\"p\">],</span> <span class=\"s2\">\",\"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"s1\">'tags'</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># Delete the \"testing123\" tag from the application.</span>\n<span class=\"n\">tags_deleted</span> <span class=\"o\">=</span> <span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s1\">'tag/delete'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'tags'</span><span class=\"p\">:</span> <span class=\"n\">TAG</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">Deleted tags: \"</span><span class=\"si\">%s</span><span class=\"s1\">\"'</span> <span class=\"o\">%</span> <span class=\"s2\">\", \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">tags_deleted</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"using-the-geotriggerclient-as-a-device\">\n<h3>Using the GeotriggerClient as a Device</h3>\n<p>The <tt>GeotriggerClient</tt> can also be used as if it were a device, which\nwill allow you to send location updates and fire triggers, but you will\nnot be able to receive any Geotrigger notifications, because they are sent as\npush messages to actual mobile devices. You can use the\n<a href=\"https://developers.arcgis.com/en/geotrigger-service/api-reference/trigger-history/\" rel=\"nofollow\">trigger/history</a>\nAPI route or configure your triggers with a <tt>callbackUrl</tt> in order to\nobserve that triggers are being fired.</p>\n<p>You\u2019ll only need the <tt>client_id</tt> for your application in order to use\nthe <tt>GeotriggerClient</tt> as a device.</p>\n<p>For testing callback triggers, you can use the handy\n<a href=\"http://requestb.in\" rel=\"nofollow\">RequestBin</a> service. Create a new bin and\nprovide its URL as the <tt>callbackUrl</tt> when creating a trigger.</p>\n<p>You will need to fill in values for the variable names given in\nall-caps.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">geotrigger</span> <span class=\"kn\">import</span> <span class=\"n\">GeotriggerClient</span>\n\n<span class=\"c1\"># Create a GeotriggerClient as a device</span>\n<span class=\"n\">gt</span> <span class=\"o\">=</span> <span class=\"n\">GeotriggerClient</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Default tags are created for all devices and triggers. Device default tags</span>\n<span class=\"c1\"># can be used when you want to allow devices to create triggers that only they</span>\n<span class=\"c1\"># can fire. Default tags look like: 'device:device_id' or 'trigger:trigger_id'</span>\n<span class=\"n\">device_tag</span> <span class=\"o\">=</span> <span class=\"s1\">'device:</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">device_id</span>\n\n<span class=\"c1\"># Build a callback trigger, using your default tag and RequestBin URL.</span>\n<span class=\"n\">esri_hq</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'condition'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'geo'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'latitude'</span><span class=\"p\">:</span> <span class=\"mf\">34.0562</span><span class=\"p\">,</span>\n            <span class=\"s1\">'longitude'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">117.1956</span><span class=\"p\">,</span>\n            <span class=\"s1\">'distance'</span><span class=\"p\">:</span> <span class=\"mi\">100</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'direction'</span><span class=\"p\">:</span> <span class=\"s1\">'enter'</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'action'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'callbackUrl'</span><span class=\"p\">:</span> <span class=\"n\">CALLBACK_URL</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'setTags'</span><span class=\"p\">:</span> <span class=\"n\">device_tag</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Post the trigger to the Geotrigger API</span>\n<span class=\"n\">trigger</span> <span class=\"o\">=</span> <span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s1\">'trigger/create'</span><span class=\"p\">,</span> <span class=\"n\">esri_hq</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">trigger</span>\n\n<span class=\"c1\"># Construct a fake location update to send to the Geotrigger API.</span>\n<span class=\"c1\"># Supplying a previous location is not strictly required, but will speed up</span>\n<span class=\"c1\"># trigger processing by avoiding a database lookup.</span>\n<span class=\"n\">location_update</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'previous'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n        <span class=\"s1\">'latitude'</span><span class=\"p\">:</span> <span class=\"mf\">45.5165</span><span class=\"p\">,</span>\n        <span class=\"s1\">'longitude'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">122.6764</span><span class=\"p\">,</span>\n        <span class=\"s1\">'accuracy'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'locations'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'timestamp'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(),</span>\n            <span class=\"s1\">'latitude'</span><span class=\"p\">:</span> <span class=\"mf\">34.0562</span><span class=\"p\">,</span>\n            <span class=\"s1\">'longitude'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">117.1956</span><span class=\"p\">,</span>\n            <span class=\"s1\">'accuracy'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\"># Send the location update.</span>\n<span class=\"n\">update_response</span> <span class=\"o\">=</span> <span class=\"n\">gt</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s1\">'location/update'</span><span class=\"p\">,</span> <span class=\"n\">location_update</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">update_response</span>\n</pre>\n<p>Shortly after running the above code, you will see a POST to your\ncallback url.</p>\n</div>\n<div id=\"advanced-geotriggerclient-usage\">\n<h3>Advanced GeotriggerClient usage</h3>\n<p>If you already have an ArcGIS Application <tt>access_token</tt> that you\u2019d\nlike to use to create a <tt>GeotriggerClient</tt>, pass in a\n<tt>GeotriggerApplication</tt> as the <tt>session</tt> kwarg. You may want to do this if\nyou are integrating Geotrigger functionality into an application that\nalready obtains credentials from ArcGIS Online.</p>\n<p>Similarly, if you want to impersonate an existing device for which you\nalready have a <tt>client_id</tt>, <tt>device_id</tt>, <tt>access_token</tt>, and\n<tt>refresh_token</tt>, you can create your own <tt>GeotriggerDevice</tt> to pass\ninto the <tt>GeotriggerClient</tt>. This can be used to debug apps that are\nbeing developed with the Geotrigger SDKs for Android and iOS.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">geotrigger</span> <span class=\"kn\">import</span> <span class=\"n\">GeotriggerClient</span><span class=\"p\">,</span> <span class=\"n\">GeotriggerApplication</span><span class=\"p\">,</span> <span class=\"n\">GeotriggerDevice</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">GeotriggerApplication</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">CLIENT_SECRET</span><span class=\"p\">,</span> <span class=\"n\">ACCESS_TOKEN</span><span class=\"p\">)</span>\n<span class=\"n\">app_client</span> <span class=\"o\">=</span> <span class=\"n\">GeotriggerClient</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"n\">device</span> <span class=\"o\">=</span> <span class=\"n\">GeotriggerDevice</span><span class=\"p\">(</span><span class=\"n\">CLIENT_ID</span><span class=\"p\">,</span> <span class=\"n\">DEVICE_ID</span><span class=\"p\">,</span> <span class=\"n\">ACCESS_TOKEN</span><span class=\"p\">,</span> <span class=\"n\">REFRESH_TOKEN</span><span class=\"p\">)</span>\n<span class=\"n\">device_client</span> <span class=\"o\">=</span> <span class=\"n\">GeotriggerClient</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">device</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"issues\">\n<h3>Issues</h3>\n<p>Find a bug or want to request a new feature? Please let us know by submitting an issue.</p>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Esri welcomes contributions from anyone and everyone. Please see our <a href=\"https://github.com/esri/contributing\" rel=\"nofollow\">guidelines for contributing</a>.</p>\n</div>\n<div id=\"licensing\">\n<h3>Licensing</h3>\n<p>Copyright 2013 Esri</p>\n<p>Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<blockquote>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></blockquote>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n<p>A copy of the license is available in the LICENSE file.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1845469, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7c5ceba4094fea608cea021bba6532d2", "sha256": "2c46fb05215b102e501133a16a1bb058b73bf0e6cc614103503695973244708b"}, "downloads": -1, "filename": "geotrigger-python-0.1.0.macosx-10.9-x86_64.exe", "has_sig": false, "md5_digest": "7c5ceba4094fea608cea021bba6532d2", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 80617, "upload_time": "2013-12-16T23:27:52", "upload_time_iso_8601": "2013-12-16T23:27:52.772719Z", "url": "https://files.pythonhosted.org/packages/b9/c3/7793749dfddd645b914068620d8a72d33df896ecfa429604684316c89a69/geotrigger-python-0.1.0.macosx-10.9-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "114d80d72683a4027f804dbc922d9c09", "sha256": "60140cd68c4cd44a32429c52d87b40f8d96abb189ccba612975c5cc333d4aa39"}, "downloads": -1, "filename": "geotrigger-python-0.1.0.tar.gz", "has_sig": false, "md5_digest": "114d80d72683a4027f804dbc922d9c09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7670, "upload_time": "2013-12-16T23:27:50", "upload_time_iso_8601": "2013-12-16T23:27:50.480573Z", "url": "https://files.pythonhosted.org/packages/69/4f/a759cd9e9e1bd0d4c982cfd0bafc71bf1453249c86b9e3abdd5ab1361313/geotrigger-python-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8f6d3107140aec8e918a5b4679b7f428", "sha256": "be2222b379b8a0dc194f80cbc93f37004f2755224cd4ee7b0616fc68887e286e"}, "downloads": -1, "filename": "geotrigger-python-0.1.1.macosx-10.9-x86_64.exe", "has_sig": false, "md5_digest": "8f6d3107140aec8e918a5b4679b7f428", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 80810, "upload_time": "2014-02-19T01:52:11", "upload_time_iso_8601": "2014-02-19T01:52:11.466041Z", "url": "https://files.pythonhosted.org/packages/64/f7/e36b0b8d56a5d7926a4d9f48a636c26ccb50400dd37abeeadb06611c5fa0/geotrigger-python-0.1.1.macosx-10.9-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "263e6a5a374873e22f1af503a6398037", "sha256": "046f3267167f02b273fa5fdb00a47dd778ad915c737b499f72283cf7b967fa8d"}, "downloads": -1, "filename": "geotrigger-python-0.1.1.tar.gz", "has_sig": false, "md5_digest": "263e6a5a374873e22f1af503a6398037", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7867, "upload_time": "2014-02-19T01:52:06", "upload_time_iso_8601": "2014-02-19T01:52:06.237858Z", "url": "https://files.pythonhosted.org/packages/bf/ce/3a0339737a236a2d0914362e47e731399904c46de4cc23ec14e55a7bf5a1/geotrigger-python-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f6d3107140aec8e918a5b4679b7f428", "sha256": "be2222b379b8a0dc194f80cbc93f37004f2755224cd4ee7b0616fc68887e286e"}, "downloads": -1, "filename": "geotrigger-python-0.1.1.macosx-10.9-x86_64.exe", "has_sig": false, "md5_digest": "8f6d3107140aec8e918a5b4679b7f428", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 80810, "upload_time": "2014-02-19T01:52:11", "upload_time_iso_8601": "2014-02-19T01:52:11.466041Z", "url": "https://files.pythonhosted.org/packages/64/f7/e36b0b8d56a5d7926a4d9f48a636c26ccb50400dd37abeeadb06611c5fa0/geotrigger-python-0.1.1.macosx-10.9-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "263e6a5a374873e22f1af503a6398037", "sha256": "046f3267167f02b273fa5fdb00a47dd778ad915c737b499f72283cf7b967fa8d"}, "downloads": -1, "filename": "geotrigger-python-0.1.1.tar.gz", "has_sig": false, "md5_digest": "263e6a5a374873e22f1af503a6398037", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7867, "upload_time": "2014-02-19T01:52:06", "upload_time_iso_8601": "2014-02-19T01:52:06.237858Z", "url": "https://files.pythonhosted.org/packages/bf/ce/3a0339737a236a2d0914362e47e731399904c46de4cc23ec14e55a7bf5a1/geotrigger-python-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:54 2020"}