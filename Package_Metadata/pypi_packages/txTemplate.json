{"info": {"author": "Mike Steder", "author_email": "steder@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "=================================\ntxTemplate\n=================================\n\n.. image:: https://travis-ci.org/steder/txtemplate.svg?branch=master\n    :target: https://travis-ci.org/steder/txtemplate\n\ntxTemplate provides adapters for a few popular template engines\nto make them easily callable and usable within Twisted Web.\n\ntxTemplate uses zope.interface to provide a consistent\nloader and template interface for every template engine.\n\n------------------------------------------\nSupported Template Engines\n------------------------------------------\n\n - ClearSilver\n - Genshi\n - Jinja2\n\n------------------------------------------\nGetting Started\n------------------------------------------\n\nAll you really need to do to use txTemplate in twisted is:\n - import it\n - create a loader pointed at your template directory\n - load a template with said loader\n - call template.render, attach callbacks to the rendered deferred (if desired) and return the deferred from and of your twisted.web.resource.Resource render_* methods.\n\nHere's a code sample of a Twisted Web resource that uses txTemplate\nto render a lovely Genshi template to say Hello World in HTML::\n\n    import os\n\n    from twisted.application import internet\n    from twisted.internet import reactor\n    from twisted.web import resource\n    from twisted.web import server\n\n    import txtemplate\n\n\n    TEMPLATE_DIR = os.path.join(os.path.dirname(os.path.abspath(__file__)),\n                                \"templates\")\n\n\n    class HelloWorld(resource.Resource):\n        def __init__(self):\n            resource.Resource.__init__(self)\n            self.loader = txtemplate.GenshiTemplateLoader(TEMPLATE_DIR)\n\n        def getChild(self, name, request):\n            return self\n\n        def render_GET(self, request):\n            template_name = \"hello.xhtml\"\n            template = self.loader.load(template_name)\n            context = {\"greeting\": \"Hello\",\n                    \"greetee\": \"World\"}\n\n            def cb(content):\n                request.write(content)\n                request.setResponseCode(200)\n                request.finish()\n\n            d = template.render(**context)\n            d.addCallback(cb)\n            return server.NOT_DONE_YET\n\n\n    site = server.Site(HelloWorld())\n    reactor.listenTCP(8888, site)\n    reactor.run()\n\n\nThis example is included in `txtemplate/examples/txweb.py` and the\n`root.xhtml` template is in `txtemplate/examples/templates/root.xhtml`.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/steder/txtemplate", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "txTemplate", "package_url": "https://pypi.org/project/txTemplate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/txTemplate/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/steder/txtemplate"}, "release_url": "https://pypi.org/project/txTemplate/1.0.4/", "requires_dist": null, "requires_python": null, "summary": "Twisted Adapters for Templating Engines", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/steder/txtemplate\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/steder/txtemplate.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8cac39ee96e6dfb6310d26691496ba9c36986659/68747470733a2f2f7472617669732d63692e6f72672f7374656465722f747874656d706c6174652e7376673f6272616e63683d6d6173746572\"></a>\n<p>txTemplate provides adapters for a few popular template engines\nto make them easily callable and usable within Twisted Web.</p>\n<p>txTemplate uses zope.interface to provide a consistent\nloader and template interface for every template engine.</p>\n<div id=\"supported-template-engines\">\n<h2>Supported Template Engines</h2>\n<blockquote>\n<ul>\n<li>ClearSilver</li>\n<li>Genshi</li>\n<li>Jinja2</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<dl>\n<dt>All you really need to do to use txTemplate in twisted is:</dt>\n<dd><ul>\n<li>import it</li>\n<li>create a loader pointed at your template directory</li>\n<li>load a template with said loader</li>\n<li>call template.render, attach callbacks to the rendered deferred (if desired) and return the deferred from and of your twisted.web.resource.Resource render_* methods.</li>\n</ul>\n</dd>\n</dl>\n<p>Here\u2019s a code sample of a Twisted Web resource that uses txTemplate\nto render a lovely Genshi template to say Hello World in HTML:</p>\n<pre>import os\n\nfrom twisted.application import internet\nfrom twisted.internet import reactor\nfrom twisted.web import resource\nfrom twisted.web import server\n\nimport txtemplate\n\n\nTEMPLATE_DIR = os.path.join(os.path.dirname(os.path.abspath(__file__)),\n                            \"templates\")\n\n\nclass HelloWorld(resource.Resource):\n    def __init__(self):\n        resource.Resource.__init__(self)\n        self.loader = txtemplate.GenshiTemplateLoader(TEMPLATE_DIR)\n\n    def getChild(self, name, request):\n        return self\n\n    def render_GET(self, request):\n        template_name = \"hello.xhtml\"\n        template = self.loader.load(template_name)\n        context = {\"greeting\": \"Hello\",\n                \"greetee\": \"World\"}\n\n        def cb(content):\n            request.write(content)\n            request.setResponseCode(200)\n            request.finish()\n\n        d = template.render(**context)\n        d.addCallback(cb)\n        return server.NOT_DONE_YET\n\n\nsite = server.Site(HelloWorld())\nreactor.listenTCP(8888, site)\nreactor.run()\n</pre>\n<p>This example is included in <cite>txtemplate/examples/txweb.py</cite> and the\n<cite>root.xhtml</cite> template is in <cite>txtemplate/examples/templates/root.xhtml</cite>.</p>\n</div>\n\n          </div>"}, "last_serial": 1308658, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "776850ae601cf75f767e9f361141f753", "sha256": "476ababe710f55d00c33d13e4265c751b54df7faf8024cef98bb30ed76fc7639"}, "downloads": -1, "filename": "txTemplate-1.0.0.tar.gz", "has_sig": true, "md5_digest": "776850ae601cf75f767e9f361141f753", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12734, "upload_time": "2012-02-29T16:52:32", "upload_time_iso_8601": "2012-02-29T16:52:32.116208Z", "url": "https://files.pythonhosted.org/packages/56/9a/2c38eb5275e7eeb312e690f60c891abde6f717828987d0ebed9e3529a03e/txTemplate-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "01a3873826466fd2635cb6cc5e3597c5", "sha256": "0f826f8d7f2e877ded38d5e0f9abe74502b51ab1223654e9486d7f41578317d1"}, "downloads": -1, "filename": "txTemplate-1.0.1.tar.gz", "has_sig": true, "md5_digest": "01a3873826466fd2635cb6cc5e3597c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8557, "upload_time": "2012-06-18T04:11:40", "upload_time_iso_8601": "2012-06-18T04:11:40.464192Z", "url": "https://files.pythonhosted.org/packages/a7/33/c5902ec07997ae641c08e99f1074c4300dcfa6994e088ab66f7e3c0b81be/txTemplate-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "283d3c677c22594831e6f515c95b7b4c", "sha256": "659444ec8f662ccfb0fe7f3d8fd66031496897eb8afcd7e385c95f3fab96f925"}, "downloads": -1, "filename": "txTemplate-1.0.2.tar.gz", "has_sig": false, "md5_digest": "283d3c677c22594831e6f515c95b7b4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9498, "upload_time": "2012-10-06T10:05:55", "upload_time_iso_8601": "2012-10-06T10:05:55.657179Z", "url": "https://files.pythonhosted.org/packages/86/7c/697037e8704ca9b1c0065b99b354ab6fd86810b108d97b3ca317e225d110/txTemplate-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "0e2701a13bb5e680f41754df43525668", "sha256": "7f1a3c5cfde4825b7c714ed90573f54c5e553cb7c33b819c8ad39744443d7d0d"}, "downloads": -1, "filename": "txTemplate-1.0.3.tar.gz", "has_sig": false, "md5_digest": "0e2701a13bb5e680f41754df43525668", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9486, "upload_time": "2013-06-18T19:38:19", "upload_time_iso_8601": "2013-06-18T19:38:19.394339Z", "url": "https://files.pythonhosted.org/packages/94/d9/010dda2ca1cc9a84a7f2900da2ea1af29dd8529b933fe4d34459a64b1063/txTemplate-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "3bd26996a10fe26359201edee6b15210", "sha256": "ed90df6cde0c832b6dce4c82aacd1811bc0a5ef25e086de3d577a19f9871607b"}, "downloads": -1, "filename": "txTemplate-1.0.4.tar.gz", "has_sig": true, "md5_digest": "3bd26996a10fe26359201edee6b15210", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9775, "upload_time": "2014-11-16T04:53:36", "upload_time_iso_8601": "2014-11-16T04:53:36.707303Z", "url": "https://files.pythonhosted.org/packages/d2/63/4c0e25c903358279eba9d6abef7902ecfb92429a11ac2eda40e7a458a23e/txTemplate-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3bd26996a10fe26359201edee6b15210", "sha256": "ed90df6cde0c832b6dce4c82aacd1811bc0a5ef25e086de3d577a19f9871607b"}, "downloads": -1, "filename": "txTemplate-1.0.4.tar.gz", "has_sig": true, "md5_digest": "3bd26996a10fe26359201edee6b15210", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9775, "upload_time": "2014-11-16T04:53:36", "upload_time_iso_8601": "2014-11-16T04:53:36.707303Z", "url": "https://files.pythonhosted.org/packages/d2/63/4c0e25c903358279eba9d6abef7902ecfb92429a11ac2eda40e7a458a23e/txTemplate-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:04 2020"}