{"info": {"author": "Florian Sachs", "author_email": "florian.sachs@gmx.at", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: Unix", "Programming Language :: Python :: 3.5", "Topic :: Utilities"], "description": "lanscan\n=======\n\n::\n\n     # lanscan  scan\n          ip                    name                     mac          alive                vendor                                        open ports\n    =======================================================================================================================================================================\n    192.168.50.1     router.asus.com              54:a0:50:5b:32:81   True    ASUSTek COMPUTER INC.              53, 8443\n    192.168.50.97                                 1c:5a:6b:78:48:52   True    Philips Electronics Nederland BV   2323, 8000, 49154\n    192.168.50.107   kindle-4bef0bcfc             74:c2:46:12:5b:01   True    Amazon Technologies Inc.           5000, 5555, 7000, 7100, 8008\n    192.168.50.124   YotaPhone-1b4fe319cb0f71a1   28:c6:71:01:3a:6d   True    Yota Devices OY\n\n``lanscan`` is a Python 3 module, that provides the ``lanscan`` console\ncommand. It scans a given local network and presents all devices on this\nnetwork. It also gives information about present network interfaces and\nnetworks. ``lanscan`` uses the ``nmap``, ``tcpdump`` and ``ping``\ncommands.\n\nUsage::\n\n    $ lanscan\n    Usage: lanscan [OPTIONS] COMMAND [ARGS]...\n\n    Options:\n      -d      Print debug messages to stdout.\n      --help  Show this message and exit.\n\n    Commands:\n      interfaces  Display a list available interfaces\n      networks    Display a list of available networks.\n      scan        Scan a network, defaults to default network.\n\nShow interfaces\n---------------\n\nA list of all current interfaces::\n\n    $ lanscan interfaces\n    #      interface      driver                         hardware\n    ===================================================================================\n    1   br-e0e27b4e551f\n    2   docker0\n    3   enp0s20f0u1u4     r8152     Realtek RTL8152/RTL8153 Based USB Ethernet Adapters\n    4   lo\n    5   wlp1s0            iwlwifi   Intel(R) Wireless WiFi driver for Linux\n\nShow local networks\n-------------------\n\nA list of all local networks::\n\n    $ lanscan networks\n    #   default        cidr            interface\n    ===============================================\n    1             127.0.0.0/8       lo\n    2             172.17.0.0/16     docker0\n    3             172.18.0.0/16     br-e0e27b4e551f\n    4   *         192.168.50.0/24   enp0s20f0u1u4\n\nScan a local network\n--------------------\n\nThe ``lanscan scan`` command has a few parameters::\n\n    $ lanscan scan --help\n    Usage: lanscan scan [OPTIONS]\n\n      Scan a network, defaults to default network.\n\n    Options:\n      -n, --network TEXT          The network to scan in CIDR notation or the\n                                  network number from 'lanscan networks'\n      --vendor / --no-vendor      Vendor lookup based on Mac addres. Requires\n                                  internet connection.\n      --portscan / --no-portscan  Let nmap do a simple connect-portscan.\n      --help                      Show this message and exit.\n\nLet's scan the default network::\n\n     # lanscan  scan\n          ip                    name                     mac          alive                vendor                                        open ports\n    =======================================================================================================================================================================\n    192.168.50.1     router.asus.com              54:a0:50:5b:32:81   True    ASUSTek COMPUTER INC.              53, 8443\n    192.168.50.97                                 1c:5a:6b:78:48:52   True    Philips Electronics Nederland BV   2323, 8000, 49154\n    192.168.50.107   kindle-4bef0bcfc             74:c2:46:12:5b:01   True    Amazon Technologies Inc.           5000, 5555, 7000, 7100, 8008\n    192.168.50.124   YotaPhone-1b4fe319cb0f71a1   28:c6:71:01:3a:6d   True    Yota Devices OY\n\nInstallation\n------------\n\n``lanscan`` has been written using Python 3.5, so the chances are good,\nthat Python versions from 3.3 may work. It has been written on linux and\nI don't think, that it will work on Windows or OS X.\n\nCreate a virtualenv and call ``pip install lanscan``. The requirements\nwill automatically be installed within your virtualen. To make calling\neasier, create the file ``/usr/local/bin/lanscan`` with::\n\n     #!/bin/bash\n     source ${PATH_TO_YOUR_VIRTUALENV}/bin/activate\n     lanscan $@\n\n\nNecessary permissions\n---------------------\n\n``lanscan`` needs special permissions, to be able to open a raw socket. You may run it as root - not recommended - or you set the necessary capabilities (man 7 capabilities). \nThe capability needed is ``cap_net_raw=eip`` and this needs to be set on the python interpreter used and the ``tcpdump`` binary using ``setcap``. ``setcap`` cannot work on\nsymlinks, so the real binary is needed. ``setcap`` needs to be run with superuser privileges::\n\n   setcap cap_net_raw=eip /path/to/virtualenv/bin/python3\n   setcap cap_net_raw=eip $(which tcpdump)\n\nYou may need to install the necessary packages. On OpenSuse, the package is called ``libcap-progs``. On Arch, everything should be in place.\n\nThe github repository can be found at\n\nhttps://github.com/sumpfgottheit/lanscan\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sumpfgottheit/lanscan", "keywords": "network scanner active passive dpkt html", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lanscan", "package_url": "https://pypi.org/project/lanscan/", "platform": "", "project_url": "https://pypi.org/project/lanscan/", "project_urls": {"Homepage": "https://github.com/sumpfgottheit/lanscan"}, "release_url": "https://pypi.org/project/lanscan/0.9.5/", "requires_dist": null, "requires_python": "", "summary": "Python 3 module to collect and display information about the hosts and devices on the local network", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre> # lanscan  scan\n      ip                    name                     mac          alive                vendor                                        open ports\n=======================================================================================================================================================================\n192.168.50.1     router.asus.com              54:a0:50:5b:32:81   True    ASUSTek COMPUTER INC.              53, 8443\n192.168.50.97                                 1c:5a:6b:78:48:52   True    Philips Electronics Nederland BV   2323, 8000, 49154\n192.168.50.107   kindle-4bef0bcfc             74:c2:46:12:5b:01   True    Amazon Technologies Inc.           5000, 5555, 7000, 7100, 8008\n192.168.50.124   YotaPhone-1b4fe319cb0f71a1   28:c6:71:01:3a:6d   True    Yota Devices OY\n</pre>\n<p><tt>lanscan</tt> is a Python 3 module, that provides the <tt>lanscan</tt> console\ncommand. It scans a given local network and presents all devices on this\nnetwork. It also gives information about present network interfaces and\nnetworks. <tt>lanscan</tt> uses the <tt>nmap</tt>, <tt>tcpdump</tt> and <tt>ping</tt>\ncommands.</p>\n<p>Usage:</p>\n<pre>$ lanscan\nUsage: lanscan [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  -d      Print debug messages to stdout.\n  --help  Show this message and exit.\n\nCommands:\n  interfaces  Display a list available interfaces\n  networks    Display a list of available networks.\n  scan        Scan a network, defaults to default network.\n</pre>\n<div id=\"show-interfaces\">\n<h2>Show interfaces</h2>\n<p>A list of all current interfaces:</p>\n<pre>$ lanscan interfaces\n#      interface      driver                         hardware\n===================================================================================\n1   br-e0e27b4e551f\n2   docker0\n3   enp0s20f0u1u4     r8152     Realtek RTL8152/RTL8153 Based USB Ethernet Adapters\n4   lo\n5   wlp1s0            iwlwifi   Intel(R) Wireless WiFi driver for Linux\n</pre>\n</div>\n<div id=\"show-local-networks\">\n<h2>Show local networks</h2>\n<p>A list of all local networks:</p>\n<pre>$ lanscan networks\n#   default        cidr            interface\n===============================================\n1             127.0.0.0/8       lo\n2             172.17.0.0/16     docker0\n3             172.18.0.0/16     br-e0e27b4e551f\n4   *         192.168.50.0/24   enp0s20f0u1u4\n</pre>\n</div>\n<div id=\"scan-a-local-network\">\n<h2>Scan a local network</h2>\n<p>The <tt>lanscan scan</tt> command has a few parameters:</p>\n<pre>$ lanscan scan --help\nUsage: lanscan scan [OPTIONS]\n\n  Scan a network, defaults to default network.\n\nOptions:\n  -n, --network TEXT          The network to scan in CIDR notation or the\n                              network number from 'lanscan networks'\n  --vendor / --no-vendor      Vendor lookup based on Mac addres. Requires\n                              internet connection.\n  --portscan / --no-portscan  Let nmap do a simple connect-portscan.\n  --help                      Show this message and exit.\n</pre>\n<p>Let\u2019s scan the default network:</p>\n<pre> # lanscan  scan\n      ip                    name                     mac          alive                vendor                                        open ports\n=======================================================================================================================================================================\n192.168.50.1     router.asus.com              54:a0:50:5b:32:81   True    ASUSTek COMPUTER INC.              53, 8443\n192.168.50.97                                 1c:5a:6b:78:48:52   True    Philips Electronics Nederland BV   2323, 8000, 49154\n192.168.50.107   kindle-4bef0bcfc             74:c2:46:12:5b:01   True    Amazon Technologies Inc.           5000, 5555, 7000, 7100, 8008\n192.168.50.124   YotaPhone-1b4fe319cb0f71a1   28:c6:71:01:3a:6d   True    Yota Devices OY\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>lanscan</tt> has been written using Python 3.5, so the chances are good,\nthat Python versions from 3.3 may work. It has been written on linux and\nI don\u2019t think, that it will work on Windows or OS X.</p>\n<p>Create a virtualenv and call <tt>pip install lanscan</tt>. The requirements\nwill automatically be installed within your virtualen. To make calling\neasier, create the file <tt>/usr/local/bin/lanscan</tt> with:</p>\n<pre>#!/bin/bash\nsource ${PATH_TO_YOUR_VIRTUALENV}/bin/activate\nlanscan $@\n</pre>\n</div>\n<div id=\"necessary-permissions\">\n<h2>Necessary permissions</h2>\n<p><tt>lanscan</tt> needs special permissions, to be able to open a raw socket. You may run it as root - not recommended - or you set the necessary capabilities (man 7 capabilities).\nThe capability needed is <tt>cap_net_raw=eip</tt> and this needs to be set on the python interpreter used and the <tt>tcpdump</tt> binary using <tt>setcap</tt>. <tt>setcap</tt> cannot work on\nsymlinks, so the real binary is needed. <tt>setcap</tt> needs to be run with superuser privileges:</p>\n<pre>setcap cap_net_raw=eip /path/to/virtualenv/bin/python3\nsetcap cap_net_raw=eip $(which tcpdump)\n</pre>\n<p>You may need to install the necessary packages. On OpenSuse, the package is called <tt><span class=\"pre\">libcap-progs</span></tt>. On Arch, everything should be in place.</p>\n<p>The github repository can be found at</p>\n<p><a href=\"https://github.com/sumpfgottheit/lanscan\" rel=\"nofollow\">https://github.com/sumpfgottheit/lanscan</a></p>\n</div>\n\n          </div>"}, "last_serial": 2485303, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "6319e879b53746bcbe1819f00bb0a2ac", "sha256": "7c9b68ba04f62ee8d659d198a1ea04d7fbbb0a79e9323fe33d7343f49fac599f"}, "downloads": -1, "filename": "lanscan-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6319e879b53746bcbe1819f00bb0a2ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9581, "upload_time": "2016-11-27T19:13:54", "upload_time_iso_8601": "2016-11-27T19:13:54.434705Z", "url": "https://files.pythonhosted.org/packages/b3/2a/83a78480c70f67f3dd19d7735a4272ed845d15eaa858e38df4c6593b3c3e/lanscan-0.0.4.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "71290134490961f16806bc7252e05ae8", "sha256": "c5a89f8dd3a87dead7fc79d2db8daf04ba7ed22ef1302d00def66f31ec7c8fb2"}, "downloads": -1, "filename": "lanscan-0.9.0.tar.gz", "has_sig": false, "md5_digest": "71290134490961f16806bc7252e05ae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9853, "upload_time": "2016-11-27T19:22:33", "upload_time_iso_8601": "2016-11-27T19:22:33.987517Z", "url": "https://files.pythonhosted.org/packages/82/6e/951a6fd0bad844c81fe326cc81133e22eabd491bc3028c4d385be91376f5/lanscan-0.9.0.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "3e5cbd9e64731d8d1b79f439a958ecb7", "sha256": "303cded5af39b869499199012b9937ef10913918c2df72ec5e3ec38a1e39bfb0"}, "downloads": -1, "filename": "lanscan-0.9.4.tar.gz", "has_sig": false, "md5_digest": "3e5cbd9e64731d8d1b79f439a958ecb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9881, "upload_time": "2016-11-27T19:49:00", "upload_time_iso_8601": "2016-11-27T19:49:00.581633Z", "url": "https://files.pythonhosted.org/packages/05/b8/e56fe9c1ee70806624d82afaf2cbc38c6feffa95118b4bc587b2635679c5/lanscan-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "ad8187c1f05bddc931435e5d275d3242", "sha256": "1fa0e28604cd309fc8451a6506a3f5fc953e210cf2d28b374f1554dc14cbfecb"}, "downloads": -1, "filename": "lanscan-0.9.5.tar.gz", "has_sig": false, "md5_digest": "ad8187c1f05bddc931435e5d275d3242", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9906, "upload_time": "2016-11-27T20:01:43", "upload_time_iso_8601": "2016-11-27T20:01:43.542703Z", "url": "https://files.pythonhosted.org/packages/b7/a2/e1c3982369150defa561f5bb7f5ec6eda1a30dd5a8ac8edf4c4c296fda51/lanscan-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ad8187c1f05bddc931435e5d275d3242", "sha256": "1fa0e28604cd309fc8451a6506a3f5fc953e210cf2d28b374f1554dc14cbfecb"}, "downloads": -1, "filename": "lanscan-0.9.5.tar.gz", "has_sig": false, "md5_digest": "ad8187c1f05bddc931435e5d275d3242", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9906, "upload_time": "2016-11-27T20:01:43", "upload_time_iso_8601": "2016-11-27T20:01:43.542703Z", "url": "https://files.pythonhosted.org/packages/b7/a2/e1c3982369150defa561f5bb7f5ec6eda1a30dd5a8ac8edf4c4c296fda51/lanscan-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:55 2020"}