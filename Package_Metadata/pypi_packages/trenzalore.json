{"info": {"author": "Mariano Anaya", "author_email": "marianoanaya@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. image:: https://img.shields.io/travis/rmariano/compr.svg?style=flat-square\n   :target: https://travis-ci.org/rmariano/compr\n \u00a0 :alt: CI Status\n\n.. image:: https://readthedocs.org/projects/compr/badge/?version=latest&style=flat-square\n   :target: http://compr.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/rmariano/compr/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/rmariano/compr\n   :alt: coverage\n\n.. image:: https://img.shields.io/pypi/pyversions/trenzalore.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/trenzalore\n\n\n.. begin\n\n.. contents ::\n\nPyCompress\n==========\n\n``Pycompressor`` is a tool for compressing text files into smaller ones, as\nwell as extracting compressed files back into the original content.\n\nIt can be used as a program or imported as a package module,\nand use the functions defined on it.\n\n\nFor example, in order to compress one file:\n\n.. code:: bash\n\n    $ pycompress -c /usr/share/dict/words -d /tmp/compressed.zf\n\nThe original file, in this example has a size of ``~4.8M``, and the tool left\nthe resulting file at ``/tmp/compressed.zf``, with a size of ``~2.7M``.\n\nIn order to extract it:\n\n.. code:: bash\n\n    $ pycompress -x /tmp/compressed.zf -d /tmp/original\n\nYou can specify the name of the resulting file with the ``-d`` flag. If you\ndon't indicate a name for the resulting file, the default will be\n``<original-file>.comp``.\n\nFor the full options, run:\n\n.. code:: bash\n\n    $ pycompress -h\n\n\nInstallation\n^^^^^^^^^^^^\n\n.. code:: bash\n\n   pip install trenzalore\n\n\nWill install the package and leave an application named ``pycompress`` for\nusing the command line utility.\n\n\nDevelopment\n^^^^^^^^^^^\n\nTo install the package in development mode, run::\n\n    make dev\n\nAnd run the tests with::\n\n    make test\n\nTests have dependencies that can be installed by running ``make testdeps``.\n\nBefore submitting a pull request, run the checklist to make sure all\ndependencies are met (code style/linting, tests, pass, etc.). This is automated\nwith:\n\n.. code:: bash\n\n    make checklist\n\nThis will run the checks for the code style (``make lint``), as well as the\ntests (``make test``).\n\nIn order to check that the project runs with the supported Python versions,\nrun:\n\n.. code:: bash\n\n    make tox\n\n\n", "description_content_type": "", "docs_url": "https://pythonhosted.org/trenzalore/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rmariano/compr", "keywords": "text compression", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "trenzalore", "package_url": "https://pypi.org/project/trenzalore/", "platform": "", "project_url": "https://pypi.org/project/trenzalore/", "project_urls": {"Homepage": "https://github.com/rmariano/compr"}, "release_url": "https://pypi.org/project/trenzalore/0.2.0/", "requires_dist": ["Sphinx", "sphinx-autodoc-annotation", "Sphinx ; extra == 'docs'", "sphinx-autodoc-annotation ; extra == 'docs'", "pytest ; extra == 'tests'", "pytest-cov ; extra == 'tests'", "codecov ; extra == 'tests'", "mypy ; extra == 'tests'", "pylint ; extra == 'tests'"], "requires_python": "", "summary": "Text compression tool", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/rmariano/compr\" rel=\"nofollow\"><img alt=\"CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73a10e45ae32154229aa3555d777cab842d7c734/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f726d617269616e6f2f636f6d70722e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"http://compr.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d059e46f21e12e40198969b1755ba10a3019d52/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f636f6d70722f62616467652f3f76657273696f6e3d6c6174657374267374796c653d666c61742d737175617265\"></a>\n<a href=\"https://codecov.io/gh/rmariano/compr\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37dcedd7546eaf937cf18a39a7471d5ba6a60d93/68747470733a2f2f636f6465636f762e696f2f67682f726d617269616e6f2f636f6d70722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/trenzalore\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/trenzalore.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea93dc5b36a72e2ff9c53259d8c454f7547b4e7f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7472656e7a616c6f72652e7376673f7374796c653d666c61742d737175617265\"></a>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#pycompress\" id=\"id1\" rel=\"nofollow\">PyCompress</a><ul>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#development\" id=\"id3\" rel=\"nofollow\">Development</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"pycompress\">\n<h2><a href=\"#id1\" rel=\"nofollow\">PyCompress</a></h2>\n<p><tt>Pycompressor</tt> is a tool for compressing text files into smaller ones, as\nwell as extracting compressed files back into the original content.</p>\n<p>It can be used as a program or imported as a package module,\nand use the functions defined on it.</p>\n<p>For example, in order to compress one file:</p>\n<pre>$ pycompress -c /usr/share/dict/words -d /tmp/compressed.zf\n</pre>\n<p>The original file, in this example has a size of <tt>~4.8M</tt>, and the tool left\nthe resulting file at <tt>/tmp/compressed.zf</tt>, with a size of <tt>~2.7M</tt>.</p>\n<p>In order to extract it:</p>\n<pre>$ pycompress -x /tmp/compressed.zf -d /tmp/original\n</pre>\n<p>You can specify the name of the resulting file with the <tt><span class=\"pre\">-d</span></tt> flag. If you\ndon\u2019t indicate a name for the resulting file, the default will be\n<tt><span class=\"pre\">&lt;original-file&gt;.comp</span></tt>.</p>\n<p>For the full options, run:</p>\n<pre>$ pycompress -h\n</pre>\n<div id=\"installation\">\n<h3><a href=\"#id2\" rel=\"nofollow\">Installation</a></h3>\n<pre>pip install trenzalore\n</pre>\n<p>Will install the package and leave an application named <tt>pycompress</tt> for\nusing the command line utility.</p>\n</div>\n<div id=\"development\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Development</a></h3>\n<p>To install the package in development mode, run:</p>\n<pre>make dev\n</pre>\n<p>And run the tests with:</p>\n<pre>make test\n</pre>\n<p>Tests have dependencies that can be installed by running <tt>make testdeps</tt>.</p>\n<p>Before submitting a pull request, run the checklist to make sure all\ndependencies are met (code style/linting, tests, pass, etc.). This is automated\nwith:</p>\n<pre>make checklist\n</pre>\n<p>This will run the checks for the code style (<tt>make lint</tt>), as well as the\ntests (<tt>make test</tt>).</p>\n<p>In order to check that the project runs with the supported Python versions,\nrun:</p>\n<pre>make tox\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5240320, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b5403cecdd74409f0485cc3bb0403e89", "sha256": "5906ab069580a91836b5ddf178f1a597a616200d11aee01ac5085fef3490b22a"}, "downloads": -1, "filename": "trenzalore-0.1.0-py3.5.egg", "has_sig": false, "md5_digest": "b5403cecdd74409f0485cc3bb0403e89", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 14734, "upload_time": "2017-04-15T21:41:18", "upload_time_iso_8601": "2017-04-15T21:41:18.985834Z", "url": "https://files.pythonhosted.org/packages/69/9d/b471aec7568ac088668df3bd1394777473698073e13181caf78e7e466760/trenzalore-0.1.0-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8d131964592e749eed8979b6d12237b", "sha256": "0cdb4ced4ad1e95253f741ea2a4a2358544235d81e8b058a9bc6fac14aaf78af"}, "downloads": -1, "filename": "trenzalore-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b8d131964592e749eed8979b6d12237b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11091, "upload_time": "2017-04-15T21:41:17", "upload_time_iso_8601": "2017-04-15T21:41:17.368376Z", "url": "https://files.pythonhosted.org/packages/b8/5a/71137dea01fced9c56c27b66ef484690b9b5725355a53b505db716be4ce5/trenzalore-0.1.0-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "bb1d054a9a09bc4f14c3abb5826f4c06", "sha256": "0c77831280bac6f765670b894a892f6195fbef272f2d269683c5752ad8838746"}, "downloads": -1, "filename": "trenzalore-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bb1d054a9a09bc4f14c3abb5826f4c06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11119, "upload_time": "2019-05-07T21:40:35", "upload_time_iso_8601": "2019-05-07T21:40:35.359144Z", "url": "https://files.pythonhosted.org/packages/d8/50/e8442bb123d910c16dac0c3cedf8555f8abe93cde4f41e3171a1f7d804b2/trenzalore-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9b8fbc9e96164b5fc277c471e9e43d2", "sha256": "96616e58a194e018126bc7ba829050189d6c94951651af61aad180f5e50f1dd2"}, "downloads": -1, "filename": "trenzalore-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e9b8fbc9e96164b5fc277c471e9e43d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9115, "upload_time": "2019-05-07T21:40:37", "upload_time_iso_8601": "2019-05-07T21:40:37.080521Z", "url": "https://files.pythonhosted.org/packages/7a/0c/e206d6dbaade1c79a86b72fa2a79ddb68e73eea5d8983f15ceacb2f4d7f4/trenzalore-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb1d054a9a09bc4f14c3abb5826f4c06", "sha256": "0c77831280bac6f765670b894a892f6195fbef272f2d269683c5752ad8838746"}, "downloads": -1, "filename": "trenzalore-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bb1d054a9a09bc4f14c3abb5826f4c06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11119, "upload_time": "2019-05-07T21:40:35", "upload_time_iso_8601": "2019-05-07T21:40:35.359144Z", "url": "https://files.pythonhosted.org/packages/d8/50/e8442bb123d910c16dac0c3cedf8555f8abe93cde4f41e3171a1f7d804b2/trenzalore-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9b8fbc9e96164b5fc277c471e9e43d2", "sha256": "96616e58a194e018126bc7ba829050189d6c94951651af61aad180f5e50f1dd2"}, "downloads": -1, "filename": "trenzalore-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e9b8fbc9e96164b5fc277c471e9e43d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9115, "upload_time": "2019-05-07T21:40:37", "upload_time_iso_8601": "2019-05-07T21:40:37.080521Z", "url": "https://files.pythonhosted.org/packages/7a/0c/e206d6dbaade1c79a86b72fa2a79ddb68e73eea5d8983f15ceacb2f4d7f4/trenzalore-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:26 2020"}