{"info": {"author": "Sebastian Schlag", "author_email": "kahypar@sebastianschlag.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "<p align=\"center\"><img src=\"https://user-images.githubusercontent.com/484403/70459249-0fd0d080-1ab4-11ea-833b-17130ecafc0a.png\" alt=\"KaHyPar - Karlsruhe Hypergraph Partitioning\" width=\"60%\" height=\"60%\"></p>\n\nLicense|Linux & macOS Build|Windows Build|Fossa|Zenodo\n:--:|:--:|:--:|:--:|:--:\n[![License: GPL v3](https://img.shields.io/badge/License-GPL%20v3-blue.svg)](http://www.gnu.org/licenses/gpl-3.0)|[![Travis-CI Status](https://travis-ci.org/SebastianSchlag/kahypar.svg?branch=master)](https://travis-ci.org/SebastianSchlag/kahypar)|[![Appveyor Status](https://ci.appveyor.com/api/projects/status/s7dagw0l6s8kgmui?svg=true)](https://ci.appveyor.com/project/SebastianSchlag/kahypar-vr7q9)|[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2FSebastianSchlag%2Fkahypar.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2FSebastianSchlag%2Fkahypar?ref=badge_shield)|[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.2555059.svg)](https://doi.org/10.5281/zenodo.2555059)\n\nCode Coverage|Code Quality|Coverity Scan|SonarCloud|Issues\n:--:|:--:|:--:|:--:|:--:\n[![codecov](https://codecov.io/gh/SebastianSchlag/kahypar/branch/master/graph/badge.svg)](https://codecov.io/gh/SebastianSchlag/kahypar)|[![Language grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/SebastianSchlag/kahypar.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/SebastianSchlag/kahypar/context:cpp) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/0ba18c5b3b2b4ab1bcc99f7bd9e35eb2)](https://www.codacy.com/manual/SebastianSchlag/kahypar?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=SebastianSchlag/kahypar&amp;utm_campaign=Badge_Grade)|[![Coverity Status](https://scan.coverity.com/projects/11452/badge.svg)](https://scan.coverity.com/projects/11452/badge.svg)|[![Quality Gate](https://sonarcloud.io/api/project_badges/quality_gate?project=KaHyPar)](https://sonarcloud.io/dashboard?id=KaHyPar)|[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/sebastianschlag/kahypar.svg)](http://isitmaintained.com/project/sebastianschlag/kahypar \"Average time to resolve an issue\")\n\nTable of Contents\n----------- \n\n   * [What is a Hypergraph? What is Hypergraph Partitioning?](#what-is-a-hypergraph-what-is-hypergraph-partitioning)\n   * [What is KaHyPar?](#what-is-kahypar)\n      * [Additional Features](#additional-features)\n      * [Experimental Results](#experimental-results)\n      * [Additional Resources](#additional-resources)\n      * [Projects using KaHyPar](#projects-using-kahypar)\n   * [Requirements](#requirements)\n   * [Building KaHyPar](#building-kahypar)\n   * [Testing and Profiling](#testing-and-profiling)\n   * [Running KaHyPar](#running-kahypar)\n   * [Using the Library Interfaces](#using-the-library-interfaces)\n     * [The C-Style Interface](#the-c-style-interface)\n     * [The Python Interface](#the-python-interface)\n     * [The Julia Interface](#the-julia-interface)\n   * [Bug Reports](#bug-reports)\n   * [Licensing](#licensing)\n   * [Contributing](#contributing)\n\n\n\nWhat is a Hypergraph? What is Hypergraph Partitioning?\n-----------\n[Hypergraphs][HYPERGRAPHWIKI] are a generalization of graphs, where each (hyper)edge (also called net) can\nconnect more than two vertices. The *k*-way hypergraph partitioning problem is the generalization of the well-known [graph partitioning][GraphPartition] problem: partition the vertex set into *k* disjoint\nblocks of bounded size (at most 1 + \u03b5 times the average block size), while minimizing an\nobjective function defined on the nets. \n\nThe two most prominent objective functions are the cut-net and the connectivity (or \u03bb \u2212 1)\nmetrics. Cut-net is a straightforward generalization of the edge-cut objective in graph partitioning\n(i.e., minimizing the sum of the weights of those nets that connect more than one block). The\nconnectivity metric additionally takes into account the actual number \u03bb of blocks connected by a\nnet. By summing the (\u03bb \u2212 1)-values of all nets, one accurately models the total communication\nvolume of parallel sparse matrix-vector multiplication and once more gets a metric that reverts\nto edge-cut for plain graphs.\n\n<img src=\"https://cloud.githubusercontent.com/assets/484403/25314222/3a3bdbda-2840-11e7-9961-3bbc59b59177.png\" alt=\"alt text\" width=\"50%\" height=\"50%\"><img src=\"https://cloud.githubusercontent.com/assets/484403/25314225/3e061e42-2840-11e7-860c-028a345d1641.png\" alt=\"alt text\" width=\"50%\" height=\"50%\">\n\nWhat is KaHyPar?\n-----------\nKaHyPar is a multilevel hypergraph partitioning framework for optimizing the cut- and the\n(\u03bb \u2212 1)-metric. It supports both *recursive bisection* and *direct k-way* partitioning.\nAs a multilevel algorithm, it consist of three phases: In the *coarsening phase*, the\nhypergraph is coarsened to obtain a hierarchy of smaller hypergraphs. After applying an\n*initial partitioning* algorithm to the smallest hypergraph in the second phase, coarsening is\nundone and, at each level, a *local search* method is used to improve the partition induced by\nthe coarser level. KaHyPar instantiates the multilevel approach in its most extreme version,\nremoving only a single vertex in every level of the hierarchy.\nBy using this very fine grained *n*-level approach combined with strong local search heuristics,\nit computes solutions of very high quality.\nIts algorithms and detailed experimental results are presented in several [research publications][KAHYPARLIT].\n\n### Additional Features\n - Hypergraph Partitioning with Variable Block Weights:\n\n \tKaHyPar has support for variable block weights. If command line option `--use-individual-part-weights=true` is used, the partitioner tries to partition the hypergraph such that each block Vx has a weight of at most Bx, where Bx can be specified for each block individually using the command line parameter `--part-weights= B1 B2 B3 ... Bk-1`. Since the framework does not yet support perfectly balanced partitioning, upper bounds need to be slightly larger than the total weight of all vertices of the hypergraph. Note that this feature is still experimental.\n\n - Hypergraph Partitioning with Fixed Vertices:\n\n    Hypergraph partitioning with fixed vertices is a variation of standard hypergraph partitioning. In this problem, there is an additional constraint on the block assignment of some vertices, i.e., some vertices are preassigned to specific blocks prior to partitioning with the condition that, after partitioning the remaining \u201cfree\u201d vertices, the fixed vertices are still in the block that they were assigned to. The command line parameter `--fixed / -f` can be used to specify a fix file in [hMetis fix file format](http://glaros.dtc.umn.edu/gkhome/fetch/sw/hmetis/manual.pdf). For a hypergraph with V vertices, the fix file consists of V lines - one for each vertex. The *i*th line either contains `-1` to indicate that the vertex is free to move or `<part id>` to indicate that this vertex should be preassigned to block `<part id>`. Note that part ids start from 0. \n\n    KaHyPar currently supports three different contraction policies for partitioning with fixed vertices:\n    1. `free_vertex_only` allows all contractions in which the contraction partner is a *free* vertex, i.e., it allows contractions of vertex pairs where either both vertices are free, or one vertex is fixed and the other vertex is free.\n    2. `fixed_vertex_allowed` additionally allows contractions of two fixed vertices provided that both are preassigned to the *same* block. Based on preliminary experiments, this is currently the default policy.\n    3. `equivalent_vertices` only allows contractions of vertex pairs that consist of either two free vertices or two fixed vertices preassigned to the same block.\n\n- Evolutionary Framework (KaHyPar-E):\n\n   KaHyPar-E enhances KaHyPar with an evolutionary framework as described in our [GECCO'18 publication][GECCO'18]. Given a fairly large amount of running time, this memetic multilevel algorithm performs better than repeated executions of nonevolutionary KaHyPar configurations, hMetis, and PaToH. The command line parameter `--time-limit=xxx` can be used to set the maximum running time (in seconds). Parameter `--partition-evolutionary=true` enables evolutionary partitioning.\n\n- Improve Existing Partitions:\n\n   KaHyPar uses direct k-way V-cycles to try to improve an existing partition specified via parameter `--part-file=</path/to/file>`. The maximum number of V-cycles can be controlled via parameter `--vcycles=`. \n\n\n### Experimental Results\nWe use the [*performance profiles*](https://link.springer.com/article/10.1007/s101070100263) to compare KaHyPar to other partitioning algorithms in terms of solution quality.\n  For a set of <img src=\"https://latex.codecogs.com/gif.latex?%5Cmathcal%7BP%7D\"/> algorithms and a benchmark set <img src=\"https://latex.codecogs.com/gif.latex?%5Cmathcal%7BI%7D\"/> containing |<img src=\"https://latex.codecogs.com/gif.latex?%5Cmathcal%7BI%7D\"/>| instances, the *performance ratio* <img src=\"https://latex.codecogs.com/gif.latex?r_%7Bp%2Ci%7D\"/> relates the cut computed by\n  partitioner *p* for instance *i* to the smallest minimum cut of *all* algorithms, i.e.,\n  <p align=\"center\">\n<img src=\"https://latex.codecogs.com/gif.latex?%24%24r_%7Bp%2Ci%7D%3A%3D%20%5Cfrac%7B%5Ctext%7Bcut%7D_%7Bp%2Ci%7D%7D%7B%5Cmin%5C%7B%20%5Ctext%7Bcut%7D_%7Bp%2Ci%7D%20%3A%20p%20%5Cin%20%5Cmathcal%7BP%7D%20%5C%7D%20%7D.%24%24\"/> </p>\n\nThe *performance profile* <img src=\"https://latex.codecogs.com/gif.latex?%24%5Crho_p%28%5Ctau%29%24\"/> of algorithm *p* is then given by the function\n  <p align=\"center\">\n<img src=\"https://latex.codecogs.com/gif.latex?%24%24%5Crho_p%28%5Ctau%29%20%3A%3D%20%5Cfrac%7B%7C%5C%7Bi%20%5Cin%20%5Cmathcal%7BI%7D%20%3A%20r_%7Bp%2Ci%7D%20%5Cleq%20%5Ctau%20%5C%7D%7C%7D%7B%20%7C%5Cmathcal%7BI%7D%20%7C%7D%2C%20%5Ctau%20%5Cgeq%201.%24%24\"/></p>\n\nFor connectivity optimization, the performance ratios are computed using the connectivity values <img src=\"https://latex.codecogs.com/gif.latex?%5Clambda%5E%7B-1%7D_%7Bp%2Ci%7D\"/> instead of the cut values.\n    The value of <img src=\"https://latex.codecogs.com/gif.latex?%24%5Crho_p%281%29%24\"/> corresponds to the fraction of instances for which partitioner *p* computed the best solution, while  <img src=\"https://latex.codecogs.com/gif.latex?%24%5Crho_p%28%5Ctau%29%24\"/> is the probability\n    that a performance ratio <img src=\"https://latex.codecogs.com/gif.latex?%24r_%7Bp%2Ci%7D%24\"/> is within a factor of <img src=\"https://latex.codecogs.com/gif.latex?%24%5Ctau%24\"/> of the best possible ratio.\n    Note that since performance profiles only allow to assess the performance of each algorithm relative to the *best* algorithm, the <img src=\"https://latex.codecogs.com/gif.latex?%24%5Crho%281%29%24\"/> values\n    cannot be used to rank algorithms (i.e., to determine which algorithm is the second best etc.).\n\nIn our experimental analysis, the performance profile plots are based on the *best* solutions (i.e., *minimum* connectivity/cut) each algorithm found for each instance.\n    Furthermore, we choose parameters <img src=\"https://latex.codecogs.com/gif.latex?%24r_%7B%5Ctext%7Binf%7D%7D%20%5Cgg%20r_%7Bp%2Ci%7D%24\"/> for all <img src=\"https://latex.codecogs.com/gif.latex?%24p%2Ci%24\"/> and <img src=\"https://latex.codecogs.com/gif.latex?%24r_%7B%5Ctext%7Btimeout%7D%7D%20%5Cgg%20r_%7B%5Ctext%7Binf%7D%7D%24\"/> such that a performance ratio <img src=\"https://latex.codecogs.com/gif.latex?%24r_%7Bp%2Ci%7D%20%3D%20r_%5Ctext%7Binf%7D%24\"/> if and only if algorithm *p* computed an infeasible solution\n    for instance *i*, and <img src=\"https://latex.codecogs.com/gif.latex?%24r_%7Bp%2Ci%7D%20%3D%20r_%5Ctext%7Btimeout%7D%24\"/> if and only if the algorithm could not compute a solution for instance *i* within the given time limit. In our performance profile plots, performance ratios corresponding to *infeasible* solutions will be shown on the x-tick on the *x*-axis, while\ninstances that could not be partitioned within the time limit are shown implicitly by a line that exits the plot below <img src=\"https://latex.codecogs.com/gif.latex?y%3D1\"/>.\n    Since the performance ratios are heavily right-skewed, the performance profile plots are divided into three segments with different ranges for parameter <img src=\"https://latex.codecogs.com/gif.latex?%24%5Ctau%24\"/> to reflect various areas of interest.\n    The first segment highlights small values (<img src=\"https://latex.codecogs.com/gif.latex?%24%5Ctau%20%5Cleq%201.1%24\"/>), while the second segment contains results for all instances\n    that are up to a factor of <img src=\"https://latex.codecogs.com/gif.latex?%24%5Ctau%3D2%24\"/> worse than the best possible ratio. The last segment  contains all remaining ratios, i.e., instances for which\n    some algorithms performed considerably worse than the best algorithm, instances for which algorithms produced infeasible solutions, and instances which could not be partitioned within\n    the given time limit.\n\nIn the figures, we compare KaHyPar with PaToH in quality (PaToH-Q) and default mode (PaToH-D), the k-way (hMETIS-K) and the recursive bisection variant (hMETIS-R) of hMETIS 2.0 (p1), [Zoltan using algebraic distance-based coarsening](https://github.com/rsln-s/aggregative-coarsening-for-multilevel-hypergraph-partitioning) (Zoltan-AlgD), [Mondriaan v.4.2.1](http://www.staff.science.uu.nl/~bisse101/Mondriaan/) and the recently published [HYPE](https://arxiv.org/abs/1810.11319) [algorithm](https://github.com/mayerrn/HYPE).\n\n  <p align=\"center\">\n\t<b>Solution Quality</b>\n<img src=\"https://user-images.githubusercontent.com/484403/67393292-65076000-f5a2-11e9-9605-1dcfd768b045.png\" alt=\"Solution Quality\" width=\"100%\" height=\"50%\">\n\t</p>\n\n  <p align=\"center\">\n\t<b>Running Time</b>\n<img src=\"https://user-images.githubusercontent.com/484403/67393303-69cc1400-f5a2-11e9-8184-53cf8e5c7cda.png\" alt=\"Running Time\" width=\"100%\" height=\"50%\">\n\t</p>\n\n### Additional Resources\nWe provide additional resources for all KaHyPar-related publications:\n\n|kKaHyPar-SEA20 /<br/> rKaHyPar-SEA20 |SEA'20 |TBA |[TR](https://arxiv.org/abs/2003.12110)| TBA | TBA |\n|:--|:--|:--:|:--:|:--:|:--:|\n|kKaHyPar /<br/> rKaHyPar | - | [Dissertation](https://publikationen.bibliothek.kit.edu/1000105953)| - |[Slides](http://algo2.iti.kit.edu/download/defense_schlag.pdf)|[Experimental Results](https://publikationen.bibliothek.kit.edu/1000105953)|\n|KaHyPar-MF /<br/> KaHyPar-R-MF |SEA'18 /<br/> JEA'19|[SEA Paper](SEA'18) /<br/> [JEA Paper](https://dl.acm.org/citation.cfm?doid=3310279.3329872)|[TR](https://arxiv.org/abs/1802.03587)|[Slides](https://algo2.iti.kit.edu/download/sea18-schlag.pdf)|Experimental Results:<br/>[SEA][SEA'18bench] / [JEA][SEA'19bench]|\n|KaHyPar-E (EvoHGP)|GECCO'18|[Paper][GECCO'18]|[TR](https://arxiv.org/abs/1710.01968)|[Slides](https://algo2.iti.kit.edu/3506.php)|[Experimental Results][GECCO'18bench]|\n|KaHyPar-CA|SEA'17|[Paper][SEA'17]|\\-|[Slides](http://algo2.iti.kit.edu/sea17schlag.php)|[Experimental Results][SEA'17bench]|\n|KaHyPar-K|ALENEX'17|[Paper][ALENEX'17]|\\-|[Slides](http://algo2.iti.kit.edu/3214.php)|[Experimental Results][ALENEX'17bench]|\n|KaHyPar-R|ALENEX'16|[Paper][ALENEX'16]|[TR](https://arxiv.org/abs/1511.03137)|[Slides](http://algo2.iti.kit.edu/3034.php)|[Experimental Results][ALENEX'16bench]|\n\n### Projects using KaHyPar\n\n - [**CoTenGra** - Hyper-optimized Contraction Trees for Large Tensor Networks](https://github.com/jcmgray/cotengra)\n - [**LSOracle** - The Logic Synthesis Oracle](https://github.com/LNIS-Projects/LSOracle)\n\nRequirements\n-----------\nThe Karlsruhe Hypergraph Partitioning Framework requires:\n\n - A 64-bit operating system. Linux, Mac OS X and Windows are currently supported.\n - A modern, ![C++14](https://img.shields.io/badge/C++-17-blue.svg?style=flat)-ready compiler such as `g++` version 9 or higher or `clang` version 11.0.3 or higher.\n - The [cmake][cmake] build system.\n - The [Boost.Program_options][Boost.Program_options] library and the boost header files.\n\n\nBuilding KaHyPar\n-----------\n\n1. Clone the repository including submodules: \n\n   ```git clone --depth=1 --recursive git@github.com:SebastianSchlag/kahypar.git```\n2. Create a build directory: `mkdir build && cd build`\n3. Run cmake: `cmake .. -DCMAKE_BUILD_TYPE=RELEASE`\n4. Run make: `make`\n\nTesting and Profiling\n-----------\n\nTests are automatically executed while project is built. Additionally a `test` target is provided.\nEnd-to-end integration tests can be started with: `make integration_tests`. Profiling can be enabled via cmake flag: `-DENABLE_PROFILE=ON`.  \n\nRunning KaHyPar\n-----------\n\nThe standalone program can be built via `make KaHyPar`. The binary will be located at: `build/kahypar/application/`.\n\nKaHyPar has several configuration parameters. For a list of all possible parameters please run: `./KaHyPar --help`.\nWe use the [hMetis format](http://glaros.dtc.umn.edu/gkhome/fetch/sw/hmetis/manual.pdf) for the input hypergraph file as well as the partition output file.\n\n#### Default / Most Recent Presets\n\nWe provide two default framework configurations - one for recursive bipartitioning (*r*KaHyPar) and one for \ndirect k-way partitioning (*k*KaHyPar).\n\nTo start ***k*KaHyPar** optimizing the **(connectivity - 1)** objective run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o km1 -m direct -p ../../../config/km1_kKaHyPar_sea20.ini\n\nTo start ***k*KaHyPar** optimizing the **cut net** objective run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o cut -m direct -p ../../../config/cut_kKaHyPar_sea20.ini\n\nTo start ***r*KaHyPar** optimizing the **(connectivity - 1)** objective run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o km1 -m recursive -p ../../../config/km1_rKaHyPar_sea20.ini\n\nTo start ***r*KaHyPar** optimizing the **cut net** objective run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o cut -m recursive -p ../../../config/cut_rKaHyPar_sea20.ini\n\nTo start the **memetic** algorithm ***k*KaHyPar-E** optimizing the (connectivity - 1) objective run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o km1 -m direct -p ../../../config/km1_kKaHyPar-E_sea20.ini\n\n\n#### Old Presets\n\nAdditionally, we provide different presets that correspond to the configurations used in the publications at\n[ALENEX'16][ALENEX'16], [ALENEX'17][ALENEX'17], [SEA'17][SEA'17], [SEA'18][SEA'18], [GECCO'18][GECCO'18], as well as \nin our [JEA journal paper](https://dl.acm.org/citation.cfm?doid=3310279.3329872) and in the [dissertation](https://publikationen.bibliothek.kit.edu/1000105953) of Sebastian Schlag. In order to use these configurations, you\nhave to checkout [KaHyPar release 1.1.0](https://github.com/SebastianSchlag/kahypar/releases/tag/1.1.0), since some old code as been removed in the most current release.\n\nTo start KaHyPar-MF (using *flow-based refinement*) optimizing the (connectivity - 1) objective using direct k-way mode run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o km1 -m direct -p ../../../config/km1_kahypar_mf_jea19.ini\n\nTo start KaHyPar-MF (using *flow-based refinement*) optimizing the cut-net objective using direct k-way mode run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o cut -m direct -p ../../../config/cut_kahypar_mf_jea19.ini\n\nTo start EvoHGP/KaHyPar-E optimizing the (connectivity - 1) objective using direct k-way mode run\n\n     ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o km1 -m direct -p ../../../config/km1_direct_kway_gecco18.ini\n\nNote that the configuration `km1_direct_kway_gecco18.ini` is based on KaHyPar-CA. However, KaHyPar-E also works with flow-based local improvements. In our JEA publication the `km1_kahypar_e_mf_jea19.ini` configuration was used.\n\nTo start KaHyPar-CA (using *community-aware coarsening*) optimizing the (connectivity - 1) objective using direct k-way mode run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o km1 -m direct -p ../../../config/km1_direct_kway_sea17.ini\n\nTo start KaHyPar in direct k-way mode (KaHyPar-K) optimizing the (connectivity - 1) objective run:   \n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o km1 -m direct -p ../../../config/km1_direct_kway_alenex17.ini\n\nTo start KaHyPar in recursive bisection mode (KaHyPar-R) optimizing the cut-net objective run:\n\n    ./KaHyPar -h <path-to-hgr> -k <# blocks> -e <imbalance (e.g. 0.03)> -o cut -m recursive -p ../../../config/cut_rb_alenex16.ini\n\nAll preset parameters can be overwritten by using the corresponding command line options.\n\nUsing the Library Interfaces\n-----------\n\n#### The C-Style Interface\nWe provide a simple C-style interface to use KaHyPar as a library.  The library can be built and installed via\n\n```sh\nmake install.library\n```\n\nand can be used like this:\n\n```cpp\n#include <memory>\n#include <vector>\n#include <iostream>\n\n#include <libkahypar.h>\n\nint main(int argc, char* argv[]) {\n\n  kahypar_context_t* context = kahypar_context_new();\n  kahypar_configure_context_from_file(context, \"/path/to/config.ini\");\n\n  const kahypar_hypernode_id_t num_vertices = 7;\n  const kahypar_hyperedge_id_t num_hyperedges = 4;\n\n  std::unique_ptr<kahypar_hyperedge_weight_t[]> hyperedge_weights = std::make_unique<kahypar_hyperedge_weight_t[]>(4);\n\n  // force the cut to contain hyperedge 0 and 2\n  hyperedge_weights[0] = 1;  hyperedge_weights[1] = 1000; \n  hyperedge_weights[2] = 1;  hyperedge_weights[3] = 1000;\n\n  std::unique_ptr<size_t[]> hyperedge_indices = std::make_unique<size_t[]>(5);\n\n  hyperedge_indices[0] = 0; hyperedge_indices[1] = 2;\n  hyperedge_indices[2] = 6; hyperedge_indices[3] = 9;  \t  \n  hyperedge_indices[4] = 12;\n\n  std::unique_ptr<kahypar_hyperedge_id_t[]> hyperedges = std::make_unique<kahypar_hyperedge_id_t[]>(12);\n\n  // hypergraph from hMetis manual page 14\n  hyperedges[0] = 0;  hyperedges[1] = 2;\n  hyperedges[2] = 0;  hyperedges[3] = 1;\n  hyperedges[4] = 3;  hyperedges[5] = 4;\n  hyperedges[6] = 3;  hyperedges[7] = 4;\t\n  hyperedges[8] = 6;  hyperedges[9] = 2;\n  hyperedges[10] = 5; hyperedges[11] = 6;\n\n  const double imbalance = 0.03;\n  const kahypar_partition_id_t k = 2;\n\n  kahypar_hyperedge_weight_t objective = 0;\n\n  std::vector<kahypar_partition_id_t> partition(num_vertices, -1);\n\n  kahypar_partition(num_vertices, num_hyperedges,\n       \t            imbalance, k,\n               \t    /*vertex_weights */ nullptr, hyperedge_weights.get(),\n               \t    hyperedge_indices.get(), hyperedges.get(),\n       \t            &objective, context, partition.data());\n\n  for(int i = 0; i != num_vertices; ++i) {\n    std::cout << i << \":\" << partition[i] << std::endl;\n  }\n\n  kahypar_context_free(context);\n}\n```\nTo compile the program using `g++` run:\n\n```sh\ng++ -std=c++14 -DNDEBUG -O3 -I/usr/local/include -L/usr/local/lib -lkahypar -L/path/to/boost/lib -I/path/to/boost/include -lboost_program_options program.cc -o program\n```\n\nTo remove the library from your system use the provided uninstall target:\n\n```sh\nmake uninstall-kahypar\n```\n#### The Python Interface\nTo compile the Python interface, do the following:\n\n1. Create a build directory: `mkdir build && cd build`\n2. Run cmake: `cmake .. -DCMAKE_BUILD_TYPE=RELEASE`\n3. Go to libary folder: `cd python`\n4. Compile the libarary: `make`\n5. Copy the libary to your site-packages directory: `cp kahypar.so <path-to-site-packages>`\n\nAfter that you can use the KaHyPar libary like this:\n\n```py\nimport os\nimport kahypar as kahypar\n\nnum_nodes = 7\nnum_nets = 4\n\nhyperedge_indices = [0,2,6,9,12]\nhyperedges = [0,2,0,1,3,4,3,4,6,2,5,6]\n\nnode_weights = [1,2,3,4,5,6,7]\nedge_weights = [11,22,33,44]\n\nk=2\n\nhypergraph = kahypar.Hypergraph(num_nodes, num_nets, hyperedge_indices, hyperedges, k, edge_weights, node_weights)\n\ncontext = kahypar.Context()\ncontext.loadINIconfiguration(\"<path/to/config>/km1_kKaHyPar_dissertation.ini\")\n\ncontext.setK(k)\ncontext.setEpsilon(0.03)\n\nkahypar.partition(hypergraph, context)\n```\nFor more information about the python library functionality, please see: [module.cpp](https://github.com/SebastianSchlag/kahypar/blob/master/python/module.cpp)\n\nWe also provide a precompiled version as a [![PyPI version](https://badge.fury.io/py/kahypar.svg)](https://badge.fury.io/py/kahypar) , which can be installed via:\n\n`python3 -m pip install --index-url https://pypi.org/simple/ --no-deps kahypar`\n\n#### The Julia Interface\nThanks to Jordan Jalving ([@jalving]( https://github.com/jalving)) KaHyPar now also offers a Julia interface,\nwhich can currently be found here: [jalving/KaHyPar.jl](https://github.com/jalving/KaHyPar.jl).\n\nThe corresponding dependency can be installed via:\n\n```jl\nusing Pkg\nPkg.add(PackageSpec(url=\"https://github.com/jalving/KaHyPar.jl.git\"))\nPkg.test(\"KaHyPar\")\n```\nAfter that, you can use KaHyPar to partition your hypergraphs like this:\n\n```jl\nusing KaHyPar\nusing SparseArrays\n\nI = [1,3,1,2,4,5,4,5,7,3,6,7]\nJ = [1,1,2,2,2,2,3,3,3,4,4,4]\nV = Int.(ones(length(I)))\n\nA = sparse(I,J,V)\n\nh = KaHyPar.hypergraph(A)\n\nKaHyPar.partition(h,2,configuration = :edge_cut)\n\nKaHyPar.partition(h,2,configuration = :connectivity)\n\nKaHyPar.partition(h,2,configuration = joinpath(@__DIR__,\"../src/config/km1_direct_kway_sea18.ini\"))\n```\n\nBug Reports\n-----------\n\nWe encourage you to report any problems with KaHyPar via the [github issue tracking system](https://github.com/SebastianSchlag/kahypar/issues) of the project.\n\n\nLicensing\n---------\n\nKaHyPar is free software provided under the GNU General Public License (GPLv3).\nFor more information see the [COPYING file][CF].\nWe distribute this framework freely to foster the use and development of hypergraph partitioning tools. \nIf you use KaHyPar in an academic setting please cite the appropriate paper. If you are interested in a commercial license, please contact me.\n\n    // KaHyPar-R\n    @inproceedings{shhmss2016alenex,\n     author    = {Sebastian Schlag and\n                  Vitali Henne and\n                  Tobias Heuer and\n                  Henning Meyerhenke and\n                  Peter Sanders and\n                  Christian Schulz},\n     title     = {k-way Hypergraph Partitioning via \\emph{n}-Level Recursive\n                  Bisection},\n     booktitle = {18th Workshop on Algorithm Engineering and Experiments, (ALENEX 2016)},\n     pages     = {53--67},\n     year      = {2016},\n    }\n\n    // KaHyPar-K\n    @inproceedings{ahss2017alenex,\n     author    = {Yaroslav Akhremtsev and\n                  Tobias Heuer and\n                  Peter Sanders and\n                  Sebastian Schlag},\n     title     = {Engineering a direct \\emph{k}-way Hypergraph Partitioning Algorithm},\n     booktitle = {19th Workshop on Algorithm Engineering and Experiments, (ALENEX 2017)},\n     pages     = {28--42},\n     year      = {2017},\n    }\n\n    // KaHyPar-CA\n    @inproceedings{hs2017sea,\n     author    = {Tobias Heuer and\n                  Sebastian Schlag},\n     title     = {Improving Coarsening Schemes for Hypergraph Partitioning by Exploiting Community Structure},\n     booktitle = {16th International Symposium on Experimental Algorithms, (SEA 2017)},\n     pages     = {21:1--21:19},\n     year      = {2017},\n    }\n\n    // KaHyPar-MF\n    @inproceedings{heuer_et_al:LIPIcs:2018:8936,\n     author ={Tobias Heuer and Peter Sanders and Sebastian Schlag},\n     title ={{Network Flow-Based Refinement for Multilevel Hypergraph Partitioning}},\n     booktitle ={17th International Symposium on Experimental Algorithms  (SEA 2018)},\n     pages ={1:1--1:19},\n     year ={2018}\n    }\n\n\n    @article{KaHyPar-MF-JEA,\n      author = {Heuer, T. and Sanders, P. and Schlag, S.},\n      title = {Network Flow-Based Refinement for Multilevel Hypergraph Partitioning},\n      journal = {ACM Journal of Experimental Algorithmics (JEA)}},\n      volume = {24},\n      number = {1},\n      month = {09},\n      year = {2019},\n      pages = {2.3:1--2.3:36},\n      publisher = {ACM}\n    }\n\n    // KaHyPar-E (EvoHGP)\n    @inproceedings{Andre:2018:MMH:3205455.3205475,\n     author = {Robin Andre and Sebastian Schlag and Christian Schulz},\n     title = {Memetic Multilevel Hypergraph Partitioning},\n     booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},\n     series = {GECCO '18},\n     year = {2018},\n     pages = {347--354},\n     numpages = {8}\n    } \n\nContributing\n------------\nIf you are interested in contributing to the KaHyPar framework\nfeel free to contact me or create an issue on the\n[issue tracking system](https://github.com/SebastianSchlag/kahypar/issues).\n\n\n[cmake]: http://www.cmake.org/ \"CMake tool\"\n[Boost.Program_options]: http://www.boost.org/doc/libs/1_58_0/doc/html/program_options.html\n[CF]: https://github.com/SebastianSchlag/kahypar/blob/master/COPYING \"Licence\"\n[KAHYPARLIT]: https://github.com/SebastianSchlag/kahypar/wiki/Literature \"KaHyPar Publications\"\n[HYPERGRAPHWIKI]: https://en.wikipedia.org/wiki/Hypergraph \"Hypergraphs\"\n[ALENEX'16]: http://epubs.siam.org/doi/abs/10.1137/1.9781611974317.5\n[ALENEX'17]: http://epubs.siam.org/doi/abs/10.1137/1.9781611974768.3\n[SEA'17]: http://drops.dagstuhl.de/opus/volltexte/2017/7622/\n[SEA'18]: http://drops.dagstuhl.de/opus/volltexte/2018/8936/\n[ALENEX'16bench]: https://doi.org/10.5281/zenodo.30176\n[ALENEX'17bench]: https://algo2.iti.kit.edu/schlag/alenex2017/\n[SEA'17bench]: https://algo2.iti.kit.edu/schlag/sea2017/\n[SEA'18bench]: https://algo2.iti.kit.edu/schlag/sea2018/\n[GECCO'18bench]: http://algo2.iti.kit.edu/schlag/gecco2018/\n[GraphPartition]: https://en.wikipedia.org/wiki/Graph_partition\n[GECCO'18]: https://dl.acm.org/citation.cfm?id=3205475\n[SEA'19bench]: https://algo2.iti.kit.edu/schlag/jea2019/\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.kahypar.org", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "kahypar", "package_url": "https://pypi.org/project/kahypar/", "platform": "", "project_url": "https://pypi.org/project/kahypar/", "project_urls": {"Homepage": "https://www.kahypar.org"}, "release_url": "https://pypi.org/project/kahypar/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "Python Inferface for the Karlsruhe Hypergraph Partitioning Framework (KaHyPar)", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><img alt=\"KaHyPar - Karlsruhe Hypergraph Partitioning\" height=\"60%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f22fc99edbc433143dbb4b66a4bbae0b571f456/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3438343430332f37303435393234392d30666430643038302d316162342d313165612d383333622d3137313330656361666330612e706e67\" width=\"60%\"></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">License</th>\n<th align=\"center\">Linux &amp; macOS Build</th>\n<th align=\"center\">Windows Build</th>\n<th align=\"center\">Fossa</th>\n<th align=\"center\">Zenodo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><a href=\"http://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b8e7bd0619920735e058483fd428ecbeb267eb7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667\"></a></td>\n<td align=\"center\"><a href=\"https://travis-ci.org/SebastianSchlag/kahypar\" rel=\"nofollow\"><img alt=\"Travis-CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb2c0803522854788fa9b512d442df52416cafa6/68747470733a2f2f7472617669732d63692e6f72672f53656261737469616e5363686c61672f6b6168797061722e7376673f6272616e63683d6d6173746572\"></a></td>\n<td align=\"center\"><a href=\"https://ci.appveyor.com/project/SebastianSchlag/kahypar-vr7q9\" rel=\"nofollow\"><img alt=\"Appveyor Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49ba78c9f507214d10297e122f64fe6ec6606f8d/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f733764616777306c3673386b676d75693f7376673d74727565\"></a></td>\n<td align=\"center\"><a href=\"https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2FSebastianSchlag%2Fkahypar?ref=badge_shield\" rel=\"nofollow\"><img alt=\"FOSSA Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a052b50e9d83cdbaf21d251efb5b098a7313cc11/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f67697425324268747470732533412532462532466769746875622e636f6d25324653656261737469616e5363686c61672532466b6168797061722e7376673f747970653d736869656c64\"></a></td>\n<td align=\"center\"><a href=\"https://doi.org/10.5281/zenodo.2555059\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a901dbcce48bb69d9fca2411b24d8fc89e6cdc0/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e323535353035392e737667\"></a></td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Code Coverage</th>\n<th align=\"center\">Code Quality</th>\n<th align=\"center\">Coverity Scan</th>\n<th align=\"center\">SonarCloud</th>\n<th align=\"center\">Issues</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><a href=\"https://codecov.io/gh/SebastianSchlag/kahypar\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c014b1d6a2d74a4dbd80d4e48abb06047c741b0e/68747470733a2f2f636f6465636f762e696f2f67682f53656261737469616e5363686c61672f6b6168797061722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></td>\n<td align=\"center\"><a href=\"https://lgtm.com/projects/g/SebastianSchlag/kahypar/context:cpp\" rel=\"nofollow\"><img alt=\"Language grade: C/C++\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5835c6e2e0887472724b186b2cdb0306cbf026d3/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f672f53656261737469616e5363686c61672f6b6168797061722e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138\"></a> <a href=\"https://www.codacy.com/manual/SebastianSchlag/kahypar?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=SebastianSchlag/kahypar&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d540bcf710f2649ddd9315ccf8b7daa3b4bea574/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3062613138633562336232623461623162636339396637626439653335656232\"></a></td>\n<td align=\"center\"><a href=\"https://scan.coverity.com/projects/11452/badge.svg\" rel=\"nofollow\"><img alt=\"Coverity Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6a30ce296915408bd1367e8b180b96b07781966/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f31313435322f62616467652e737667\"></a></td>\n<td align=\"center\"><a href=\"https://sonarcloud.io/dashboard?id=KaHyPar\" rel=\"nofollow\"><img alt=\"Quality Gate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d155d79c963b7bfe343da68f62523d5fbc53bfb5/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f7175616c6974795f676174653f70726f6a6563743d4b614879506172\"></a></td>\n<td align=\"center\"><a href=\"http://isitmaintained.com/project/sebastianschlag/kahypar\" rel=\"nofollow\" title=\"Average time to resolve an issue\"><img alt=\"Average time to resolve an issue\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76cb4b8494a4892bb9182d0bdf9906c1add85b18/687474703a2f2f697369746d61696e7461696e65642e636f6d2f62616467652f7265736f6c7574696f6e2f73656261737469616e7363686c61672f6b6168797061722e737667\"></a></td>\n</tr></tbody></table>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#what-is-a-hypergraph-what-is-hypergraph-partitioning\" rel=\"nofollow\">What is a Hypergraph? What is Hypergraph Partitioning?</a></li>\n<li><a href=\"#what-is-kahypar\" rel=\"nofollow\">What is KaHyPar?</a>\n<ul>\n<li><a href=\"#additional-features\" rel=\"nofollow\">Additional Features</a></li>\n<li><a href=\"#experimental-results\" rel=\"nofollow\">Experimental Results</a></li>\n<li><a href=\"#additional-resources\" rel=\"nofollow\">Additional Resources</a></li>\n<li><a href=\"#projects-using-kahypar\" rel=\"nofollow\">Projects using KaHyPar</a></li>\n</ul>\n</li>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#building-kahypar\" rel=\"nofollow\">Building KaHyPar</a></li>\n<li><a href=\"#testing-and-profiling\" rel=\"nofollow\">Testing and Profiling</a></li>\n<li><a href=\"#running-kahypar\" rel=\"nofollow\">Running KaHyPar</a></li>\n<li><a href=\"#using-the-library-interfaces\" rel=\"nofollow\">Using the Library Interfaces</a>\n<ul>\n<li><a href=\"#the-c-style-interface\" rel=\"nofollow\">The C-Style Interface</a></li>\n<li><a href=\"#the-python-interface\" rel=\"nofollow\">The Python Interface</a></li>\n<li><a href=\"#the-julia-interface\" rel=\"nofollow\">The Julia Interface</a></li>\n</ul>\n</li>\n<li><a href=\"#bug-reports\" rel=\"nofollow\">Bug Reports</a></li>\n<li><a href=\"#licensing\" rel=\"nofollow\">Licensing</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n</ul>\n<h2>What is a Hypergraph? What is Hypergraph Partitioning?</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Hypergraph\" rel=\"nofollow\" title=\"Hypergraphs\">Hypergraphs</a> are a generalization of graphs, where each (hyper)edge (also called net) can\nconnect more than two vertices. The <em>k</em>-way hypergraph partitioning problem is the generalization of the well-known <a href=\"https://en.wikipedia.org/wiki/Graph_partition\" rel=\"nofollow\">graph partitioning</a> problem: partition the vertex set into <em>k</em> disjoint\nblocks of bounded size (at most 1 + \u03b5 times the average block size), while minimizing an\nobjective function defined on the nets.</p>\n<p>The two most prominent objective functions are the cut-net and the connectivity (or \u03bb \u2212 1)\nmetrics. Cut-net is a straightforward generalization of the edge-cut objective in graph partitioning\n(i.e., minimizing the sum of the weights of those nets that connect more than one block). The\nconnectivity metric additionally takes into account the actual number \u03bb of blocks connected by a\nnet. By summing the (\u03bb \u2212 1)-values of all nets, one accurately models the total communication\nvolume of parallel sparse matrix-vector multiplication and once more gets a metric that reverts\nto edge-cut for plain graphs.</p>\n<p><img alt=\"alt text\" height=\"50%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc9f6a0e15c0c1482b271ff67bebf34196089de1/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f3438343430332f32353331343232322f33613362646264612d323834302d313165372d393936312d3362626335396235393137372e706e67\" width=\"50%\"><img alt=\"alt text\" height=\"50%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e21e0d240a163d0bec93e36edc3a0ff55e38a563/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f3438343430332f32353331343232352f33653036316534322d323834302d313165372d383630632d3032386133343564313634312e706e67\" width=\"50%\"></p>\n<h2>What is KaHyPar?</h2>\n<p>KaHyPar is a multilevel hypergraph partitioning framework for optimizing the cut- and the\n(\u03bb \u2212 1)-metric. It supports both <em>recursive bisection</em> and <em>direct k-way</em> partitioning.\nAs a multilevel algorithm, it consist of three phases: In the <em>coarsening phase</em>, the\nhypergraph is coarsened to obtain a hierarchy of smaller hypergraphs. After applying an\n<em>initial partitioning</em> algorithm to the smallest hypergraph in the second phase, coarsening is\nundone and, at each level, a <em>local search</em> method is used to improve the partition induced by\nthe coarser level. KaHyPar instantiates the multilevel approach in its most extreme version,\nremoving only a single vertex in every level of the hierarchy.\nBy using this very fine grained <em>n</em>-level approach combined with strong local search heuristics,\nit computes solutions of very high quality.\nIts algorithms and detailed experimental results are presented in several <a href=\"https://github.com/SebastianSchlag/kahypar/wiki/Literature\" rel=\"nofollow\" title=\"KaHyPar Publications\">research publications</a>.</p>\n<h3>Additional Features</h3>\n<ul>\n<li>\n<p>Hypergraph Partitioning with Variable Block Weights:</p>\n<p>KaHyPar has support for variable block weights. If command line option <code>--use-individual-part-weights=true</code> is used, the partitioner tries to partition the hypergraph such that each block Vx has a weight of at most Bx, where Bx can be specified for each block individually using the command line parameter <code>--part-weights= B1 B2 B3 ... Bk-1</code>. Since the framework does not yet support perfectly balanced partitioning, upper bounds need to be slightly larger than the total weight of all vertices of the hypergraph. Note that this feature is still experimental.</p>\n</li>\n<li>\n<p>Hypergraph Partitioning with Fixed Vertices:</p>\n<p>Hypergraph partitioning with fixed vertices is a variation of standard hypergraph partitioning. In this problem, there is an additional constraint on the block assignment of some vertices, i.e., some vertices are preassigned to specific blocks prior to partitioning with the condition that, after partitioning the remaining \u201cfree\u201d vertices, the fixed vertices are still in the block that they were assigned to. The command line parameter <code>--fixed / -f</code> can be used to specify a fix file in <a href=\"http://glaros.dtc.umn.edu/gkhome/fetch/sw/hmetis/manual.pdf\" rel=\"nofollow\">hMetis fix file format</a>. For a hypergraph with V vertices, the fix file consists of V lines - one for each vertex. The <em>i</em>th line either contains <code>-1</code> to indicate that the vertex is free to move or <code>&lt;part id&gt;</code> to indicate that this vertex should be preassigned to block <code>&lt;part id&gt;</code>. Note that part ids start from 0.</p>\n<p>KaHyPar currently supports three different contraction policies for partitioning with fixed vertices:</p>\n<ol>\n<li><code>free_vertex_only</code> allows all contractions in which the contraction partner is a <em>free</em> vertex, i.e., it allows contractions of vertex pairs where either both vertices are free, or one vertex is fixed and the other vertex is free.</li>\n<li><code>fixed_vertex_allowed</code> additionally allows contractions of two fixed vertices provided that both are preassigned to the <em>same</em> block. Based on preliminary experiments, this is currently the default policy.</li>\n<li><code>equivalent_vertices</code> only allows contractions of vertex pairs that consist of either two free vertices or two fixed vertices preassigned to the same block.</li>\n</ol>\n</li>\n<li>\n<p>Evolutionary Framework (KaHyPar-E):</p>\n<p>KaHyPar-E enhances KaHyPar with an evolutionary framework as described in our <a href=\"https://dl.acm.org/citation.cfm?id=3205475\" rel=\"nofollow\">GECCO'18 publication</a>. Given a fairly large amount of running time, this memetic multilevel algorithm performs better than repeated executions of nonevolutionary KaHyPar configurations, hMetis, and PaToH. The command line parameter <code>--time-limit=xxx</code> can be used to set the maximum running time (in seconds). Parameter <code>--partition-evolutionary=true</code> enables evolutionary partitioning.</p>\n</li>\n<li>\n<p>Improve Existing Partitions:</p>\n<p>KaHyPar uses direct k-way V-cycles to try to improve an existing partition specified via parameter <code>--part-file=&lt;/path/to/file&gt;</code>. The maximum number of V-cycles can be controlled via parameter <code>--vcycles=</code>.</p>\n</li>\n</ul>\n<h3>Experimental Results</h3>\n<p>We use the <a href=\"https://link.springer.com/article/10.1007/s101070100263\" rel=\"nofollow\"><em>performance profiles</em></a> to compare KaHyPar to other partitioning algorithms in terms of solution quality.\nFor a set of <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fc9c9d9462f9b6c78b4639459e95bd034333b42/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f2535436d61746863616c25374250253744\"> algorithms and a benchmark set <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/607f1d58f39aa4525f881359815cad818cbc46d8/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f2535436d61746863616c25374249253744\"> containing |<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/607f1d58f39aa4525f881359815cad818cbc46d8/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f2535436d61746863616c25374249253744\">| instances, the <em>performance ratio</em> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e337902e535b5bd69d278600b3c0861db841f36/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f725f2537427025324369253744\"> relates the cut computed by\npartitioner <em>p</em> for instance <em>i</em> to the smallest minimum cut of <em>all</em> algorithms, i.e.,</p>\n  <p align=\"center\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f49277dcb0f270bc346eac623300e1b8bced94b0/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f253234253234725f253742702532436925374425334125334425323025354366726163253742253543746578742537426375742537445f25374270253243692537442537442537422535436d696e253543253742253230253543746578742537426375742537445f253742702532436925374425323025334125323070253230253543696e2532302535436d61746863616c253742502537442532302535432537442532302537442e253234253234\"> </p>\n<p>The <em>performance profile</em> <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26f9df961131f5fd13a988abf4d5bb7aca73d6cf/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f25323425354372686f5f70253238253543746175253239253234\"> of algorithm <em>p</em> is then given by the function</p>\n  <p align=\"center\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f4affd5d3c5951473986c6e0a774c2453a9ea321/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f25323425323425354372686f5f702532382535437461752532392532302533412533442532302535436672616325374225374325354325374269253230253543696e2532302535436d61746863616c25374249253744253230253341253230725f25374270253243692537442532302535436c65712532302535437461752532302535432537442537432537442537422532302537432535436d61746863616c25374249253744253230253743253744253243253230253543746175253230253543676571253230312e253234253234\"></p>\n<p>For connectivity optimization, the performance ratios are computed using the connectivity values <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53b501f8bec506c9746808059e5d5ee8605919a9/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f2535436c616d6264612535452537422d312537445f2537427025324369253744\"> instead of the cut values.\nThe value of <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/154c529e354f73aaf4fa3f4a7c1914f3d00a0752/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f25323425354372686f5f7025323831253239253234\"> corresponds to the fraction of instances for which partitioner <em>p</em> computed the best solution, while  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26f9df961131f5fd13a988abf4d5bb7aca73d6cf/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f25323425354372686f5f70253238253543746175253239253234\"> is the probability\nthat a performance ratio <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c795a112daa2ff0b2ff80911831530447f5123a4/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f253234725f2537427025324369253744253234\"> is within a factor of <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07d1211df253b0aa230c900b84a2c123a40f3c99/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f253234253543746175253234\"> of the best possible ratio.\nNote that since performance profiles only allow to assess the performance of each algorithm relative to the <em>best</em> algorithm, the <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ee7e0547380db61417ae98614d411159ea1b152/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f25323425354372686f25323831253239253234\"> values\ncannot be used to rank algorithms (i.e., to determine which algorithm is the second best etc.).</p>\n<p>In our experimental analysis, the performance profile plots are based on the <em>best</em> solutions (i.e., <em>minimum</em> connectivity/cut) each algorithm found for each instance.\nFurthermore, we choose parameters <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbc0b5600e2fce9fc0e152fbb17cbfe39a81be38/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f253234725f25374225354374657874253742696e662537442537442532302535436767253230725f2537427025324369253744253234\"> for all <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c47b3231f49c5f4406f31b50838c73b57be49f41/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f2532347025324369253234\"> and <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97e5728ec7cb06bf5e9d478b5f20497440f27bd/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f253234725f2537422535437465787425374274696d656f75742537442537442532302535436767253230725f25374225354374657874253742696e66253744253744253234\"> such that a performance ratio <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05a732bf1fd52cd54237f506d937caeb5d3be5dc/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f253234725f2537427025324369253744253230253344253230725f25354374657874253742696e66253744253234\"> if and only if algorithm <em>p</em> computed an infeasible solution\nfor instance <em>i</em>, and <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/962c171a1fdd5c2573c86a2e681c616abc574f5d/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f253234725f2537427025324369253744253230253344253230725f2535437465787425374274696d656f7574253744253234\"> if and only if the algorithm could not compute a solution for instance <em>i</em> within the given time limit. In our performance profile plots, performance ratios corresponding to <em>infeasible</em> solutions will be shown on the x-tick on the <em>x</em>-axis, while\ninstances that could not be partitioned within the time limit are shown implicitly by a line that exits the plot below <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb1e1c1ea58e45131f04580b940f06c0036d504b/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f7925334431\">.\nSince the performance ratios are heavily right-skewed, the performance profile plots are divided into three segments with different ranges for parameter <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07d1211df253b0aa230c900b84a2c123a40f3c99/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f253234253543746175253234\"> to reflect various areas of interest.\nThe first segment highlights small values (<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7eba80519faca02984e15a21e37c58e3c60ba7a4/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f2532342535437461752532302535436c6571253230312e31253234\">), while the second segment contains results for all instances\nthat are up to a factor of <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30d443bcd166aa26dcd9f695d3352c1cc81a21de/68747470733a2f2f6c617465782e636f6465636f67732e636f6d2f6769662e6c617465783f25323425354374617525334432253234\"> worse than the best possible ratio. The last segment  contains all remaining ratios, i.e., instances for which\nsome algorithms performed considerably worse than the best algorithm, instances for which algorithms produced infeasible solutions, and instances which could not be partitioned within\nthe given time limit.</p>\n<p>In the figures, we compare KaHyPar with PaToH in quality (PaToH-Q) and default mode (PaToH-D), the k-way (hMETIS-K) and the recursive bisection variant (hMETIS-R) of hMETIS 2.0 (p1), <a href=\"https://github.com/rsln-s/aggregative-coarsening-for-multilevel-hypergraph-partitioning\" rel=\"nofollow\">Zoltan using algebraic distance-based coarsening</a> (Zoltan-AlgD), <a href=\"http://www.staff.science.uu.nl/%7Ebisse101/Mondriaan/\" rel=\"nofollow\">Mondriaan v.4.2.1</a> and the recently published <a href=\"https://arxiv.org/abs/1810.11319\" rel=\"nofollow\">HYPE</a> <a href=\"https://github.com/mayerrn/HYPE\" rel=\"nofollow\">algorithm</a>.</p>\n  <p align=\"center\">\n\t<b>Solution Quality</b>\n<img alt=\"Solution Quality\" height=\"50%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff08790f4283aae5b1f987f3b1d543ff0f471542/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3438343430332f36373339333239322d36353037363030302d663561322d313165392d393630352d3164636664373638623034352e706e67\" width=\"100%\">\n\t</p>\n  <p align=\"center\">\n\t<b>Running Time</b>\n<img alt=\"Running Time\" height=\"50%\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/31937b57b2df58d58c114587109bc6caf4e53c78/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3438343430332f36373339333330332d36396363313430302d663561322d313165392d383138342d3533636638653563376364612e706e67\" width=\"100%\">\n\t</p>\n<h3>Additional Resources</h3>\n<p>We provide additional resources for all KaHyPar-related publications:</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">kKaHyPar-SEA20 /<br> rKaHyPar-SEA20</th>\n<th align=\"left\">SEA'20</th>\n<th align=\"center\">TBA</th>\n<th align=\"center\"><a href=\"https://arxiv.org/abs/2003.12110\" rel=\"nofollow\">TR</a></th>\n<th align=\"center\">TBA</th>\n<th align=\"center\">TBA</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">kKaHyPar /<br> rKaHyPar</td>\n<td align=\"left\">-</td>\n<td align=\"center\"><a href=\"https://publikationen.bibliothek.kit.edu/1000105953\" rel=\"nofollow\">Dissertation</a></td>\n<td align=\"center\">-</td>\n<td align=\"center\"><a href=\"http://algo2.iti.kit.edu/download/defense_schlag.pdf\" rel=\"nofollow\">Slides</a></td>\n<td align=\"center\"><a href=\"https://publikationen.bibliothek.kit.edu/1000105953\" rel=\"nofollow\">Experimental Results</a></td>\n</tr>\n<tr>\n<td align=\"left\">KaHyPar-MF /<br> KaHyPar-R-MF</td>\n<td align=\"left\">SEA'18 /<br> JEA'19</td>\n<td align=\"center\"><a href=\"SEA'18\" rel=\"nofollow\">SEA Paper</a> /<br> <a href=\"https://dl.acm.org/citation.cfm?doid=3310279.3329872\" rel=\"nofollow\">JEA Paper</a></td>\n<td align=\"center\"><a href=\"https://arxiv.org/abs/1802.03587\" rel=\"nofollow\">TR</a></td>\n<td align=\"center\"><a href=\"https://algo2.iti.kit.edu/download/sea18-schlag.pdf\" rel=\"nofollow\">Slides</a></td>\n<td align=\"center\">Experimental Results:<br><a href=\"https://algo2.iti.kit.edu/schlag/sea2018/\" rel=\"nofollow\">SEA</a> / <a href=\"https://algo2.iti.kit.edu/schlag/jea2019/\" rel=\"nofollow\">JEA</a></td>\n</tr>\n<tr>\n<td align=\"left\">KaHyPar-E (EvoHGP)</td>\n<td align=\"left\">GECCO'18</td>\n<td align=\"center\"><a href=\"https://dl.acm.org/citation.cfm?id=3205475\" rel=\"nofollow\">Paper</a></td>\n<td align=\"center\"><a href=\"https://arxiv.org/abs/1710.01968\" rel=\"nofollow\">TR</a></td>\n<td align=\"center\"><a href=\"https://algo2.iti.kit.edu/3506.php\" rel=\"nofollow\">Slides</a></td>\n<td align=\"center\"><a href=\"http://algo2.iti.kit.edu/schlag/gecco2018/\" rel=\"nofollow\">Experimental Results</a></td>\n</tr>\n<tr>\n<td align=\"left\">KaHyPar-CA</td>\n<td align=\"left\">SEA'17</td>\n<td align=\"center\"><a href=\"http://drops.dagstuhl.de/opus/volltexte/2017/7622/\" rel=\"nofollow\">Paper</a></td>\n<td align=\"center\">-</td>\n<td align=\"center\"><a href=\"http://algo2.iti.kit.edu/sea17schlag.php\" rel=\"nofollow\">Slides</a></td>\n<td align=\"center\"><a href=\"https://algo2.iti.kit.edu/schlag/sea2017/\" rel=\"nofollow\">Experimental Results</a></td>\n</tr>\n<tr>\n<td align=\"left\">KaHyPar-K</td>\n<td align=\"left\">ALENEX'17</td>\n<td align=\"center\"><a href=\"http://epubs.siam.org/doi/abs/10.1137/1.9781611974768.3\" rel=\"nofollow\">Paper</a></td>\n<td align=\"center\">-</td>\n<td align=\"center\"><a href=\"http://algo2.iti.kit.edu/3214.php\" rel=\"nofollow\">Slides</a></td>\n<td align=\"center\"><a href=\"https://algo2.iti.kit.edu/schlag/alenex2017/\" rel=\"nofollow\">Experimental Results</a></td>\n</tr>\n<tr>\n<td align=\"left\">KaHyPar-R</td>\n<td align=\"left\">ALENEX'16</td>\n<td align=\"center\"><a href=\"http://epubs.siam.org/doi/abs/10.1137/1.9781611974317.5\" rel=\"nofollow\">Paper</a></td>\n<td align=\"center\"><a href=\"https://arxiv.org/abs/1511.03137\" rel=\"nofollow\">TR</a></td>\n<td align=\"center\"><a href=\"http://algo2.iti.kit.edu/3034.php\" rel=\"nofollow\">Slides</a></td>\n<td align=\"center\"><a href=\"https://doi.org/10.5281/zenodo.30176\" rel=\"nofollow\">Experimental Results</a></td>\n</tr></tbody></table>\n<h3>Projects using KaHyPar</h3>\n<ul>\n<li><a href=\"https://github.com/jcmgray/cotengra\" rel=\"nofollow\"><strong>CoTenGra</strong> - Hyper-optimized Contraction Trees for Large Tensor Networks</a></li>\n<li><a href=\"https://github.com/LNIS-Projects/LSOracle\" rel=\"nofollow\"><strong>LSOracle</strong> - The Logic Synthesis Oracle</a></li>\n</ul>\n<h2>Requirements</h2>\n<p>The Karlsruhe Hypergraph Partitioning Framework requires:</p>\n<ul>\n<li>A 64-bit operating system. Linux, Mac OS X and Windows are currently supported.</li>\n<li>A modern, <img alt=\"C++14\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/964d8ee5861ef84cafbc1e88da5bbca1400dad07/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f432b2b2d31372d626c75652e7376673f7374796c653d666c6174\">-ready compiler such as <code>g++</code> version 9 or higher or <code>clang</code> version 11.0.3 or higher.</li>\n<li>The <a href=\"http://www.cmake.org/\" rel=\"nofollow\" title=\"CMake tool\">cmake</a> build system.</li>\n<li>The <a href=\"http://www.boost.org/doc/libs/1_58_0/doc/html/program_options.html\" rel=\"nofollow\">Boost.Program_options</a> library and the boost header files.</li>\n</ul>\n<h2>Building KaHyPar</h2>\n<ol>\n<li>\n<p>Clone the repository including submodules:</p>\n<p><code>git clone --depth=1 --recursive git@github.com:SebastianSchlag/kahypar.git</code></p>\n</li>\n<li>\n<p>Create a build directory: <code>mkdir build &amp;&amp; cd build</code></p>\n</li>\n<li>\n<p>Run cmake: <code>cmake .. -DCMAKE_BUILD_TYPE=RELEASE</code></p>\n</li>\n<li>\n<p>Run make: <code>make</code></p>\n</li>\n</ol>\n<h2>Testing and Profiling</h2>\n<p>Tests are automatically executed while project is built. Additionally a <code>test</code> target is provided.\nEnd-to-end integration tests can be started with: <code>make integration_tests</code>. Profiling can be enabled via cmake flag: <code>-DENABLE_PROFILE=ON</code>.</p>\n<h2>Running KaHyPar</h2>\n<p>The standalone program can be built via <code>make KaHyPar</code>. The binary will be located at: <code>build/kahypar/application/</code>.</p>\n<p>KaHyPar has several configuration parameters. For a list of all possible parameters please run: <code>./KaHyPar --help</code>.\nWe use the <a href=\"http://glaros.dtc.umn.edu/gkhome/fetch/sw/hmetis/manual.pdf\" rel=\"nofollow\">hMetis format</a> for the input hypergraph file as well as the partition output file.</p>\n<h4>Default / Most Recent Presets</h4>\n<p>We provide two default framework configurations - one for recursive bipartitioning (<em>r</em>KaHyPar) and one for\ndirect k-way partitioning (<em>k</em>KaHyPar).</p>\n<p>To start <strong><em>k</em>KaHyPar</strong> optimizing the <strong>(connectivity - 1)</strong> objective run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o km1 -m direct -p ../../../config/km1_kKaHyPar_sea20.ini\n</code></pre>\n<p>To start <strong><em>k</em>KaHyPar</strong> optimizing the <strong>cut net</strong> objective run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o cut -m direct -p ../../../config/cut_kKaHyPar_sea20.ini\n</code></pre>\n<p>To start <strong><em>r</em>KaHyPar</strong> optimizing the <strong>(connectivity - 1)</strong> objective run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o km1 -m recursive -p ../../../config/km1_rKaHyPar_sea20.ini\n</code></pre>\n<p>To start <strong><em>r</em>KaHyPar</strong> optimizing the <strong>cut net</strong> objective run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o cut -m recursive -p ../../../config/cut_rKaHyPar_sea20.ini\n</code></pre>\n<p>To start the <strong>memetic</strong> algorithm <strong><em>k</em>KaHyPar-E</strong> optimizing the (connectivity - 1) objective run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o km1 -m direct -p ../../../config/km1_kKaHyPar-E_sea20.ini\n</code></pre>\n<h4>Old Presets</h4>\n<p>Additionally, we provide different presets that correspond to the configurations used in the publications at\n<a href=\"http://epubs.siam.org/doi/abs/10.1137/1.9781611974317.5\" rel=\"nofollow\">ALENEX'16</a>, <a href=\"http://epubs.siam.org/doi/abs/10.1137/1.9781611974768.3\" rel=\"nofollow\">ALENEX'17</a>, <a href=\"http://drops.dagstuhl.de/opus/volltexte/2017/7622/\" rel=\"nofollow\">SEA'17</a>, <a href=\"http://drops.dagstuhl.de/opus/volltexte/2018/8936/\" rel=\"nofollow\">SEA'18</a>, <a href=\"https://dl.acm.org/citation.cfm?id=3205475\" rel=\"nofollow\">GECCO'18</a>, as well as\nin our <a href=\"https://dl.acm.org/citation.cfm?doid=3310279.3329872\" rel=\"nofollow\">JEA journal paper</a> and in the <a href=\"https://publikationen.bibliothek.kit.edu/1000105953\" rel=\"nofollow\">dissertation</a> of Sebastian Schlag. In order to use these configurations, you\nhave to checkout <a href=\"https://github.com/SebastianSchlag/kahypar/releases/tag/1.1.0\" rel=\"nofollow\">KaHyPar release 1.1.0</a>, since some old code as been removed in the most current release.</p>\n<p>To start KaHyPar-MF (using <em>flow-based refinement</em>) optimizing the (connectivity - 1) objective using direct k-way mode run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o km1 -m direct -p ../../../config/km1_kahypar_mf_jea19.ini\n</code></pre>\n<p>To start KaHyPar-MF (using <em>flow-based refinement</em>) optimizing the cut-net objective using direct k-way mode run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o cut -m direct -p ../../../config/cut_kahypar_mf_jea19.ini\n</code></pre>\n<p>To start EvoHGP/KaHyPar-E optimizing the (connectivity - 1) objective using direct k-way mode run</p>\n<pre><code> ./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o km1 -m direct -p ../../../config/km1_direct_kway_gecco18.ini\n</code></pre>\n<p>Note that the configuration <code>km1_direct_kway_gecco18.ini</code> is based on KaHyPar-CA. However, KaHyPar-E also works with flow-based local improvements. In our JEA publication the <code>km1_kahypar_e_mf_jea19.ini</code> configuration was used.</p>\n<p>To start KaHyPar-CA (using <em>community-aware coarsening</em>) optimizing the (connectivity - 1) objective using direct k-way mode run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o km1 -m direct -p ../../../config/km1_direct_kway_sea17.ini\n</code></pre>\n<p>To start KaHyPar in direct k-way mode (KaHyPar-K) optimizing the (connectivity - 1) objective run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o km1 -m direct -p ../../../config/km1_direct_kway_alenex17.ini\n</code></pre>\n<p>To start KaHyPar in recursive bisection mode (KaHyPar-R) optimizing the cut-net objective run:</p>\n<pre><code>./KaHyPar -h &lt;path-to-hgr&gt; -k &lt;# blocks&gt; -e &lt;imbalance (e.g. 0.03)&gt; -o cut -m recursive -p ../../../config/cut_rb_alenex16.ini\n</code></pre>\n<p>All preset parameters can be overwritten by using the corresponding command line options.</p>\n<h2>Using the Library Interfaces</h2>\n<h4>The C-Style Interface</h4>\n<p>We provide a simple C-style interface to use KaHyPar as a library.  The library can be built and installed via</p>\n<pre>make install.library\n</pre>\n<p>and can be used like this:</p>\n<pre><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;memory&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;vector&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\"></span>\n\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;libkahypar.h&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">argv</span><span class=\"p\">[])</span> <span class=\"p\">{</span>\n\n  <span class=\"n\">kahypar_context_t</span><span class=\"o\">*</span> <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">kahypar_context_new</span><span class=\"p\">();</span>\n  <span class=\"n\">kahypar_configure_context_from_file</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"s\">\"/path/to/config.ini\"</span><span class=\"p\">);</span>\n\n  <span class=\"k\">const</span> <span class=\"n\">kahypar_hypernode_id_t</span> <span class=\"n\">num_vertices</span> <span class=\"o\">=</span> <span class=\"mi\">7</span><span class=\"p\">;</span>\n  <span class=\"k\">const</span> <span class=\"n\">kahypar_hyperedge_id_t</span> <span class=\"n\">num_hyperedges</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span>\n\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">unique_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">kahypar_hyperedge_weight_t</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span> <span class=\"n\">hyperedge_weights</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_unique</span><span class=\"o\">&lt;</span><span class=\"n\">kahypar_hyperedge_weight_t</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// force the cut to contain hyperedge 0 and 2</span>\n  <span class=\"n\">hyperedge_weights</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>  <span class=\"n\">hyperedge_weights</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span><span class=\"p\">;</span> \n  <span class=\"n\">hyperedge_weights</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>  <span class=\"n\">hyperedge_weights</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span><span class=\"p\">;</span>\n\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">unique_ptr</span><span class=\"o\">&lt;</span><span class=\"kt\">size_t</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span> <span class=\"n\">hyperedge_indices</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_unique</span><span class=\"o\">&lt;</span><span class=\"kt\">size_t</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">);</span>\n\n  <span class=\"n\">hyperedge_indices</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">hyperedge_indices</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n  <span class=\"n\">hyperedge_indices</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">;</span> <span class=\"n\">hyperedge_indices</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">9</span><span class=\"p\">;</span>  \t  \n  <span class=\"n\">hyperedge_indices</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">12</span><span class=\"p\">;</span>\n\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">unique_ptr</span><span class=\"o\">&lt;</span><span class=\"n\">kahypar_hyperedge_id_t</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span> <span class=\"n\">hyperedges</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">make_unique</span><span class=\"o\">&lt;</span><span class=\"n\">kahypar_hyperedge_id_t</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">);</span>\n\n  <span class=\"c1\">// hypergraph from hMetis manual page 14</span>\n  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span>  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span>\n  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">;</span>  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">4</span><span class=\"p\">;</span>\t\n  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">;</span>  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n  <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">;</span> <span class=\"n\">hyperedges</span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">6</span><span class=\"p\">;</span>\n\n  <span class=\"k\">const</span> <span class=\"kt\">double</span> <span class=\"n\">imbalance</span> <span class=\"o\">=</span> <span class=\"mf\">0.03</span><span class=\"p\">;</span>\n  <span class=\"k\">const</span> <span class=\"n\">kahypar_partition_id_t</span> <span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n\n  <span class=\"n\">kahypar_hyperedge_weight_t</span> <span class=\"n\">objective</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n  <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">kahypar_partition_id_t</span><span class=\"o\">&gt;</span> <span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">num_vertices</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n\n  <span class=\"n\">kahypar_partition</span><span class=\"p\">(</span><span class=\"n\">num_vertices</span><span class=\"p\">,</span> <span class=\"n\">num_hyperedges</span><span class=\"p\">,</span>\n       \t            <span class=\"n\">imbalance</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span>\n               \t    <span class=\"cm\">/*vertex_weights */</span> <span class=\"k\">nullptr</span><span class=\"p\">,</span> <span class=\"n\">hyperedge_weights</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(),</span>\n               \t    <span class=\"n\">hyperedge_indices</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(),</span> <span class=\"n\">hyperedges</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(),</span>\n       \t            <span class=\"o\">&amp;</span><span class=\"n\">objective</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">partition</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">());</span>\n\n  <span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">!=</span> <span class=\"n\">num_vertices</span><span class=\"p\">;</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\":\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">partition</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"n\">kahypar_context_free</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</pre>\n<p>To compile the program using <code>g++</code> run:</p>\n<pre>g++ -std<span class=\"o\">=</span>c++14 -DNDEBUG -O3 -I/usr/local/include -L/usr/local/lib -lkahypar -L/path/to/boost/lib -I/path/to/boost/include -lboost_program_options program.cc -o program\n</pre>\n<p>To remove the library from your system use the provided uninstall target:</p>\n<pre>make uninstall-kahypar\n</pre>\n<h4>The Python Interface</h4>\n<p>To compile the Python interface, do the following:</p>\n<ol>\n<li>Create a build directory: <code>mkdir build &amp;&amp; cd build</code></li>\n<li>Run cmake: <code>cmake .. -DCMAKE_BUILD_TYPE=RELEASE</code></li>\n<li>Go to libary folder: <code>cd python</code></li>\n<li>Compile the libarary: <code>make</code></li>\n<li>Copy the libary to your site-packages directory: <code>cp kahypar.so &lt;path-to-site-packages&gt;</code></li>\n</ol>\n<p>After that you can use the KaHyPar libary like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">kahypar</span> <span class=\"k\">as</span> <span class=\"nn\">kahypar</span>\n\n<span class=\"n\">num_nodes</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>\n<span class=\"n\">num_nets</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n\n<span class=\"n\">hyperedge_indices</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">]</span>\n<span class=\"n\">hyperedges</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n\n<span class=\"n\">node_weights</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">]</span>\n<span class=\"n\">edge_weights</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"mi\">22</span><span class=\"p\">,</span><span class=\"mi\">33</span><span class=\"p\">,</span><span class=\"mi\">44</span><span class=\"p\">]</span>\n\n<span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n\n<span class=\"n\">hypergraph</span> <span class=\"o\">=</span> <span class=\"n\">kahypar</span><span class=\"o\">.</span><span class=\"n\">Hypergraph</span><span class=\"p\">(</span><span class=\"n\">num_nodes</span><span class=\"p\">,</span> <span class=\"n\">num_nets</span><span class=\"p\">,</span> <span class=\"n\">hyperedge_indices</span><span class=\"p\">,</span> <span class=\"n\">hyperedges</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">edge_weights</span><span class=\"p\">,</span> <span class=\"n\">node_weights</span><span class=\"p\">)</span>\n\n<span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">kahypar</span><span class=\"o\">.</span><span class=\"n\">Context</span><span class=\"p\">()</span>\n<span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">loadINIconfiguration</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;path/to/config&gt;/km1_kKaHyPar_dissertation.ini\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">setK</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span>\n<span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">setEpsilon</span><span class=\"p\">(</span><span class=\"mf\">0.03</span><span class=\"p\">)</span>\n\n<span class=\"n\">kahypar</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">hypergraph</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n</pre>\n<p>For more information about the python library functionality, please see: <a href=\"https://github.com/SebastianSchlag/kahypar/blob/master/python/module.cpp\" rel=\"nofollow\">module.cpp</a></p>\n<p>We also provide a precompiled version as a <a href=\"https://badge.fury.io/py/kahypar\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/246b6ac7df9536d624241f9b2545ba0f292fb267/68747470733a2f2f62616467652e667572792e696f2f70792f6b6168797061722e737667\"></a> , which can be installed via:</p>\n<p><code>python3 -m pip install --index-url https://pypi.org/simple/ --no-deps kahypar</code></p>\n<h4>The Julia Interface</h4>\n<p>Thanks to Jordan Jalving (<a href=\"https://github.com/jalving\" rel=\"nofollow\">@jalving</a>) KaHyPar now also offers a Julia interface,\nwhich can currently be found here: <a href=\"https://github.com/jalving/KaHyPar.jl\" rel=\"nofollow\">jalving/KaHyPar.jl</a>.</p>\n<p>The corresponding dependency can be installed via:</p>\n<pre><span class=\"k\">using</span> <span class=\"n\">Pkg</span>\n<span class=\"n\">Pkg</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">PackageSpec</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s\">\"https://github.com/jalving/KaHyPar.jl.git\"</span><span class=\"p\">))</span>\n<span class=\"n\">Pkg</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"s\">\"KaHyPar\"</span><span class=\"p\">)</span>\n</pre>\n<p>After that, you can use KaHyPar to partition your hypergraphs like this:</p>\n<pre><span class=\"k\">using</span> <span class=\"n\">KaHyPar</span>\n<span class=\"k\">using</span> <span class=\"n\">SparseArrays</span>\n\n<span class=\"nb\">I</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">]</span>\n<span class=\"n\">J</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"kt\">Int</span><span class=\"o\">.</span><span class=\"p\">(</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"n\">length</span><span class=\"p\">(</span><span class=\"nb\">I</span><span class=\"p\">)))</span>\n\n<span class=\"n\">A</span> <span class=\"o\">=</span> <span class=\"n\">sparse</span><span class=\"p\">(</span><span class=\"nb\">I</span><span class=\"p\">,</span><span class=\"n\">J</span><span class=\"p\">,</span><span class=\"n\">V</span><span class=\"p\">)</span>\n\n<span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">KaHyPar</span><span class=\"o\">.</span><span class=\"n\">hypergraph</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">)</span>\n\n<span class=\"n\">KaHyPar</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"o\">:</span><span class=\"n\">edge_cut</span><span class=\"p\">)</span>\n\n<span class=\"n\">KaHyPar</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"o\">:</span><span class=\"n\">connectivity</span><span class=\"p\">)</span>\n\n<span class=\"n\">KaHyPar</span><span class=\"o\">.</span><span class=\"n\">partition</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">configuration</span> <span class=\"o\">=</span> <span class=\"n\">joinpath</span><span class=\"p\">(</span><span class=\"nd\">@__DIR__</span><span class=\"p\">,</span><span class=\"s\">\"../src/config/km1_direct_kway_sea18.ini\"</span><span class=\"p\">))</span>\n</pre>\n<h2>Bug Reports</h2>\n<p>We encourage you to report any problems with KaHyPar via the <a href=\"https://github.com/SebastianSchlag/kahypar/issues\" rel=\"nofollow\">github issue tracking system</a> of the project.</p>\n<h2>Licensing</h2>\n<p>KaHyPar is free software provided under the GNU General Public License (GPLv3).\nFor more information see the <a href=\"https://github.com/SebastianSchlag/kahypar/blob/master/COPYING\" rel=\"nofollow\" title=\"Licence\">COPYING file</a>.\nWe distribute this framework freely to foster the use and development of hypergraph partitioning tools.\nIf you use KaHyPar in an academic setting please cite the appropriate paper. If you are interested in a commercial license, please contact me.</p>\n<pre><code>// KaHyPar-R\n@inproceedings{shhmss2016alenex,\n author    = {Sebastian Schlag and\n              Vitali Henne and\n              Tobias Heuer and\n              Henning Meyerhenke and\n              Peter Sanders and\n              Christian Schulz},\n title     = {k-way Hypergraph Partitioning via \\emph{n}-Level Recursive\n              Bisection},\n booktitle = {18th Workshop on Algorithm Engineering and Experiments, (ALENEX 2016)},\n pages     = {53--67},\n year      = {2016},\n}\n\n// KaHyPar-K\n@inproceedings{ahss2017alenex,\n author    = {Yaroslav Akhremtsev and\n              Tobias Heuer and\n              Peter Sanders and\n              Sebastian Schlag},\n title     = {Engineering a direct \\emph{k}-way Hypergraph Partitioning Algorithm},\n booktitle = {19th Workshop on Algorithm Engineering and Experiments, (ALENEX 2017)},\n pages     = {28--42},\n year      = {2017},\n}\n\n// KaHyPar-CA\n@inproceedings{hs2017sea,\n author    = {Tobias Heuer and\n              Sebastian Schlag},\n title     = {Improving Coarsening Schemes for Hypergraph Partitioning by Exploiting Community Structure},\n booktitle = {16th International Symposium on Experimental Algorithms, (SEA 2017)},\n pages     = {21:1--21:19},\n year      = {2017},\n}\n\n// KaHyPar-MF\n@inproceedings{heuer_et_al:LIPIcs:2018:8936,\n author ={Tobias Heuer and Peter Sanders and Sebastian Schlag},\n title ={{Network Flow-Based Refinement for Multilevel Hypergraph Partitioning}},\n booktitle ={17th International Symposium on Experimental Algorithms  (SEA 2018)},\n pages ={1:1--1:19},\n year ={2018}\n}\n\n\n@article{KaHyPar-MF-JEA,\n  author = {Heuer, T. and Sanders, P. and Schlag, S.},\n  title = {Network Flow-Based Refinement for Multilevel Hypergraph Partitioning},\n  journal = {ACM Journal of Experimental Algorithmics (JEA)}},\n  volume = {24},\n  number = {1},\n  month = {09},\n  year = {2019},\n  pages = {2.3:1--2.3:36},\n  publisher = {ACM}\n}\n\n// KaHyPar-E (EvoHGP)\n@inproceedings{Andre:2018:MMH:3205455.3205475,\n author = {Robin Andre and Sebastian Schlag and Christian Schulz},\n title = {Memetic Multilevel Hypergraph Partitioning},\n booktitle = {Proceedings of the Genetic and Evolutionary Computation Conference},\n series = {GECCO '18},\n year = {2018},\n pages = {347--354},\n numpages = {8}\n} \n</code></pre>\n<h2>Contributing</h2>\n<p>If you are interested in contributing to the KaHyPar framework\nfeel free to contact me or create an issue on the\n<a href=\"https://github.com/SebastianSchlag/kahypar/issues\" rel=\"nofollow\">issue tracking system</a>.</p>\n\n          </div>"}, "last_serial": 6919454, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "3c7ca37a65378fa72cf119873c43a744", "sha256": "c8a0403b3c7323af1786eb3de115c08bbb08e0a0285d8f0f07fd0cb516ef8d7e"}, "downloads": -1, "filename": "kahypar-1.0-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "3c7ca37a65378fa72cf119873c43a744", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 905606, "upload_time": "2019-11-16T18:49:19", "upload_time_iso_8601": "2019-11-16T18:49:19.135144Z", "url": "https://files.pythonhosted.org/packages/2f/6a/ec90c23c5ac10786268810f5c65ae1276c73c325d79680243ff64f098722/kahypar-1.0-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a74818069461a742d113d488bc0c145c", "sha256": "6d4bf75af8b38b177bae2eed05956924df548f022412b80bff4888875ced3221"}, "downloads": -1, "filename": "kahypar-1.0-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "a74818069461a742d113d488bc0c145c", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 905618, "upload_time": "2019-11-16T18:49:28", "upload_time_iso_8601": "2019-11-16T18:49:28.345857Z", "url": "https://files.pythonhosted.org/packages/ad/89/88f6bd8aa74025f37a42422de8c0f8b4a76a39bc381eebbd7e44e7df3b0c/kahypar-1.0-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6289bd0944aa53818f72ed720d036ac8", "sha256": "4470d04d28a288a31834535df87b75c5b27e9256142af120f8fcff55dc675565"}, "downloads": -1, "filename": "kahypar-1.0-cp34-cp34m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "6289bd0944aa53818f72ed720d036ac8", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 905615, "upload_time": "2019-11-16T18:49:33", "upload_time_iso_8601": "2019-11-16T18:49:33.336246Z", "url": "https://files.pythonhosted.org/packages/62/e6/a6443d4925ddcdadf8ebde2bbcf39b1097249c8d1a2c4a2ef8cbb18a7544/kahypar-1.0-cp34-cp34m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac6b80bb0dbb97c45f60c5dbad2d75b6", "sha256": "12d5059fe703d1728721e790881c36a3ecab5e63a7992209f9e23d4e6e7ae509"}, "downloads": -1, "filename": "kahypar-1.0-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "ac6b80bb0dbb97c45f60c5dbad2d75b6", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 905574, "upload_time": "2019-11-16T18:49:38", "upload_time_iso_8601": "2019-11-16T18:49:38.960536Z", "url": "https://files.pythonhosted.org/packages/41/6f/949c847cdf84465754a760778d4d883cec0b84b6bd34c3e90381e049bf38/kahypar-1.0-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72efe706193ca5a8dbf1ccd4b2b23c52", "sha256": "f24f0ced954b32deae20e0595ed5ad69cbd9c78c6d4c21332d05af8557e2ebb0"}, "downloads": -1, "filename": "kahypar-1.0-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "72efe706193ca5a8dbf1ccd4b2b23c52", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 905571, "upload_time": "2019-11-16T18:49:44", "upload_time_iso_8601": "2019-11-16T18:49:44.633265Z", "url": "https://files.pythonhosted.org/packages/b2/c6/0b827030b6461ec6d5e6c8d3002cdf1b555ab008e85add311d7e097fe0c9/kahypar-1.0-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47446edd9414b72bb4e617e1211b0a44", "sha256": "e3f997715a78c4dd00e81a04dd2db0bf25752dd12dcae5e9eba699e5de6e4d35"}, "downloads": -1, "filename": "kahypar-1.0-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "47446edd9414b72bb4e617e1211b0a44", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 905503, "upload_time": "2019-11-16T18:49:50", "upload_time_iso_8601": "2019-11-16T18:49:50.032700Z", "url": "https://files.pythonhosted.org/packages/b7/4e/e20d6c96a61231e76f80d12b976c459a51670479a431ab506a59e5ee9b42/kahypar-1.0-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14f00164ff11bc01ebb00e7375fb89fd", "sha256": "ce1a782f507c1943fa56cc70ce8c516c05e8f1a2e47a82719f259a9a67324707"}, "downloads": -1, "filename": "kahypar-1.0-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "14f00164ff11bc01ebb00e7375fb89fd", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 903999, "upload_time": "2019-11-16T18:49:54", "upload_time_iso_8601": "2019-11-16T18:49:54.935909Z", "url": "https://files.pythonhosted.org/packages/18/61/552af12d18907e149fb4b146065aa70308f8a4caccbbe5dbc90ddeb2beab/kahypar-1.0-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff797090f3faa549814ffbc8498b8245", "sha256": "b92f7da1700c8cecf2a6977aff96fa483b1955b0859dbbe37f15f277ff74b49b"}, "downloads": -1, "filename": "kahypar-1.0.tar.gz", "has_sig": false, "md5_digest": "ff797090f3faa549814ffbc8498b8245", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7966543, "upload_time": "2019-11-16T18:06:42", "upload_time_iso_8601": "2019-11-16T18:06:42.905203Z", "url": "https://files.pythonhosted.org/packages/05/7b/baa426ec02ec9f6d4dc8cb26c458eff17a340192bb4c9dd23deabf1042a6/kahypar-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1b6dcd1937da06cc0dd907b68e8a5c2b", "sha256": "72be2df5fdce77e10f0707e05483c118427fdddb294a03eb62464e579a860645"}, "downloads": -1, "filename": "kahypar-1.0.1-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "1b6dcd1937da06cc0dd907b68e8a5c2b", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 906044, "upload_time": "2019-11-16T19:16:59", "upload_time_iso_8601": "2019-11-16T19:16:59.979318Z", "url": "https://files.pythonhosted.org/packages/b2/ff/bde943c236ae23ee212a0f77e93091ab22984090c32fbaa9045a8e97d24b/kahypar-1.0.1-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb754b58db4b2605d46ec183475ec2fc", "sha256": "55e1b4964e30517bc40a4a5080c961922f9d3f5bbcfa5fdcabe761275a5acc53"}, "downloads": -1, "filename": "kahypar-1.0.1-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "eb754b58db4b2605d46ec183475ec2fc", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 906059, "upload_time": "2019-11-16T19:17:09", "upload_time_iso_8601": "2019-11-16T19:17:09.438868Z", "url": "https://files.pythonhosted.org/packages/ca/4b/9a180a75bf4787f078908b6f5238aa38b4085f599bf012bd796c8b995239/kahypar-1.0.1-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e546095e224e1e2c17c21f7aa0cdb53c", "sha256": "413c297139cac5811806f71ddcc7cbba51797bc2fdd237c18d6114d61d42302c"}, "downloads": -1, "filename": "kahypar-1.0.1-cp34-cp34m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "e546095e224e1e2c17c21f7aa0cdb53c", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 906051, "upload_time": "2019-11-16T19:17:14", "upload_time_iso_8601": "2019-11-16T19:17:14.735671Z", "url": "https://files.pythonhosted.org/packages/1c/ab/549cdd0e37f2e68d96c2d8125f99691114231d5f37c59f6bc4355be1b191/kahypar-1.0.1-cp34-cp34m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14afcbd66ca28ebd3ec11fe6179f4e66", "sha256": "4d83cacf1d2f0114efe09c4f8b324137ff7f7fc1fc52ac088aceb39a6650b3db"}, "downloads": -1, "filename": "kahypar-1.0.1-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "14afcbd66ca28ebd3ec11fe6179f4e66", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 906009, "upload_time": "2019-11-16T19:17:20", "upload_time_iso_8601": "2019-11-16T19:17:20.432189Z", "url": "https://files.pythonhosted.org/packages/8a/2a/d2002d9ddffa47a8a4936f9a9c18e4ee78c6d7c96589d5e381e55aec6520/kahypar-1.0.1-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d76f247c0c740716f6413e986e726060", "sha256": "39346e97bafa13d890445f65f5f8a5b4644a07225709cbd36159bb431f9d9802"}, "downloads": -1, "filename": "kahypar-1.0.1-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "d76f247c0c740716f6413e986e726060", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 906004, "upload_time": "2019-11-16T19:17:26", "upload_time_iso_8601": "2019-11-16T19:17:26.239279Z", "url": "https://files.pythonhosted.org/packages/18/83/cf375b27255dd3cff24e050805c0983d673e66030ac6660e8ec54c81aba7/kahypar-1.0.1-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a672530347b26f314624f865a8c6fee7", "sha256": "58896088233a88dd624d1e786c866d3fcc0d6264a415199ff9656683780ef80c"}, "downloads": -1, "filename": "kahypar-1.0.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "a672530347b26f314624f865a8c6fee7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 905944, "upload_time": "2019-11-16T19:17:32", "upload_time_iso_8601": "2019-11-16T19:17:32.233446Z", "url": "https://files.pythonhosted.org/packages/75/a3/47a2389af45b302c7c22c3451eed5dbd42c31d7cfe87d70c5d9244a19119/kahypar-1.0.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "449954ee3a7ba6c84ddfcdd2321e3367", "sha256": "b88f2f4b05bbe13c2e957320f7d2912781968ba0720df1a007aa62baee9e3fa4"}, "downloads": -1, "filename": "kahypar-1.0.1-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "449954ee3a7ba6c84ddfcdd2321e3367", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 904435, "upload_time": "2019-11-16T19:17:37", "upload_time_iso_8601": "2019-11-16T19:17:37.549904Z", "url": "https://files.pythonhosted.org/packages/3d/29/a237ae8c36baa8ebc3f5c89e3557578a4bfdd717ea5a946f44f6ab631b5e/kahypar-1.0.1-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "620e3768e2b787ebe848eee5bafa71ed", "sha256": "6090f46089b9b348ed3524254302d66588fa16408b5376ef152c21f039972043"}, "downloads": -1, "filename": "kahypar-1.0.2-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "620e3768e2b787ebe848eee5bafa71ed", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 907915, "upload_time": "2019-11-17T09:40:35", "upload_time_iso_8601": "2019-11-17T09:40:35.251325Z", "url": "https://files.pythonhosted.org/packages/4e/17/9e7b0215f1e2638e1ef18f951f6ece753a721522f0de1e8fcc559dfa6f1a/kahypar-1.0.2-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99ddc0723d98aa9ef26f9008b47840ef", "sha256": "cc4109c099cf222eda8baccc894783318106595f45eb415306ef1741c5652457"}, "downloads": -1, "filename": "kahypar-1.0.2-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "99ddc0723d98aa9ef26f9008b47840ef", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 907907, "upload_time": "2019-11-17T09:40:44", "upload_time_iso_8601": "2019-11-17T09:40:44.540265Z", "url": "https://files.pythonhosted.org/packages/00/3d/079452d5f679fe26dbec4aeacaafb36086e881ae91ae127ee097e33c9c74/kahypar-1.0.2-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5e072bf244657bc0f94a141cbac32ae", "sha256": "ab30397916bbd5963639c791a36b69ef3ca16f5e812eb6f7e7ef888e1ca6890b"}, "downloads": -1, "filename": "kahypar-1.0.2-cp34-cp34m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "c5e072bf244657bc0f94a141cbac32ae", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 907464, "upload_time": "2019-11-17T09:40:49", "upload_time_iso_8601": "2019-11-17T09:40:49.936736Z", "url": "https://files.pythonhosted.org/packages/c2/f4/bf5ea80d554e29f754347ef9a2702016243c4ef88cf22e20d7527c61f7fb/kahypar-1.0.2-cp34-cp34m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3cdd88f03659dd7d8efed68aa9062e85", "sha256": "424be5b9901d9c11902f2b3eef9fc606c535dc980405c5ae85c28a4ab68e421a"}, "downloads": -1, "filename": "kahypar-1.0.2-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "3cdd88f03659dd7d8efed68aa9062e85", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 906903, "upload_time": "2019-11-17T09:40:55", "upload_time_iso_8601": "2019-11-17T09:40:55.938689Z", "url": "https://files.pythonhosted.org/packages/2c/ae/65a13f9ecc809f290c9c1ff38ff09f6997b615a2249e34956c55a828a5f2/kahypar-1.0.2-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c875d0a4568c6b675a0a501be290437d", "sha256": "e598190da3db38a9a09fffe66f1b0d795e7a5df900c286571c3329b99eed2684"}, "downloads": -1, "filename": "kahypar-1.0.2-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "c875d0a4568c6b675a0a501be290437d", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 906902, "upload_time": "2019-11-17T09:41:01", "upload_time_iso_8601": "2019-11-17T09:41:01.432234Z", "url": "https://files.pythonhosted.org/packages/e7/f9/e8bd69759af7c08ac03e34262730afb043d3b1612f48eb850ab54bfff787/kahypar-1.0.2-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e82504462e3eb92a5c52c7c7f629515", "sha256": "fb7641e76b6ea62f94506c13d33a11f259e141b3be3fd94f303c7257e4dc7b78"}, "downloads": -1, "filename": "kahypar-1.0.2-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "5e82504462e3eb92a5c52c7c7f629515", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 907605, "upload_time": "2019-11-17T09:41:06", "upload_time_iso_8601": "2019-11-17T09:41:06.842268Z", "url": "https://files.pythonhosted.org/packages/9b/7b/43aae15269b772b1c38b41175cc98b8cf97ad71bf3df5ce0dc379e22e74f/kahypar-1.0.2-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3132b69503373a91803f9fb4b51c192d", "sha256": "8d63d9a4fdcc4e46b741e9ecb5e640e9932ac841bd3b423172352c1c97a4b658"}, "downloads": -1, "filename": "kahypar-1.0.2-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "3132b69503373a91803f9fb4b51c192d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 905193, "upload_time": "2019-11-17T09:41:11", "upload_time_iso_8601": "2019-11-17T09:41:11.839903Z", "url": "https://files.pythonhosted.org/packages/af/90/2ae672e3d7ee81ed2891d6307265f454823212c1be5b0ccb63c4d41044ca/kahypar-1.0.2-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "add1cfd791a7ba4d79f3a1845a1f2108", "sha256": "fdad012c9ed1231d16fb8ac8e301c202590c1461f568fa25a27ee01cb66f47c5"}, "downloads": -1, "filename": "kahypar-1.0.3-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "add1cfd791a7ba4d79f3a1845a1f2108", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 910313, "upload_time": "2019-11-18T13:06:57", "upload_time_iso_8601": "2019-11-18T13:06:57.138863Z", "url": "https://files.pythonhosted.org/packages/90/10/f60b484f8c835ebafb36bbd59cbe08d05179b1c46b1ee523eeed391533cb/kahypar-1.0.3-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96a4a390f0e89a1deb3a73a372a74dc2", "sha256": "53cfe60d59c0d536508c5cb6677246e9e5126173d47dd16e1b9694834cfe048d"}, "downloads": -1, "filename": "kahypar-1.0.3-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "96a4a390f0e89a1deb3a73a372a74dc2", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 910321, "upload_time": "2019-11-18T13:07:00", "upload_time_iso_8601": "2019-11-18T13:07:00.134785Z", "url": "https://files.pythonhosted.org/packages/2f/d3/30bfcb7170227209bcd0893653e0bfc81ff91aefb6e2b0e8dcae176ba592/kahypar-1.0.3-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c28f5067c0fb03526bf7dae4748562a", "sha256": "2bbf592eb8b55981afede48498b24f58a71583e51acdbc5f82d0c31666902a22"}, "downloads": -1, "filename": "kahypar-1.0.3-cp34-cp34m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "6c28f5067c0fb03526bf7dae4748562a", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 910646, "upload_time": "2019-11-18T13:07:02", "upload_time_iso_8601": "2019-11-18T13:07:02.473511Z", "url": "https://files.pythonhosted.org/packages/31/25/5b4c507878a2af79e37e49add317b6ee5d1dd83abbb4623608d17dc1e1cf/kahypar-1.0.3-cp34-cp34m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "642763198256fcb3f4222b604164a046", "sha256": "f57f046b8954100b2fc1c928f796af5dfa7b0abce3fa221cfb130ea81f991acd"}, "downloads": -1, "filename": "kahypar-1.0.3-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "642763198256fcb3f4222b604164a046", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 909267, "upload_time": "2019-11-18T13:07:06", "upload_time_iso_8601": "2019-11-18T13:07:06.038786Z", "url": "https://files.pythonhosted.org/packages/11/f8/98a39425c4d32f3b64c93806fa52815418248cda720fd53fbfd9b72a441d/kahypar-1.0.3-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01f28cd7336d94a177f9a5542c2a6741", "sha256": "d1d944e8bca478a152765234f2f4de2a3ee68e8f95afd680d1eeef5a0d8b1ae4"}, "downloads": -1, "filename": "kahypar-1.0.3-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "01f28cd7336d94a177f9a5542c2a6741", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 909268, "upload_time": "2019-11-18T13:07:08", "upload_time_iso_8601": "2019-11-18T13:07:08.947319Z", "url": "https://files.pythonhosted.org/packages/c1/e6/8f74d27493cbd36a319b68eae2fac7c1deefb11bb99f5d19f8a928ba4b9c/kahypar-1.0.3-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "304a5b6ab24ca3f5cddd148f6a0820f8", "sha256": "65989508e00daa45b0b143f78d97eaef7aa954320418bad8190889d029a4b30e"}, "downloads": -1, "filename": "kahypar-1.0.3-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "304a5b6ab24ca3f5cddd148f6a0820f8", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 909662, "upload_time": "2019-11-18T13:07:11", "upload_time_iso_8601": "2019-11-18T13:07:11.735680Z", "url": "https://files.pythonhosted.org/packages/f9/72/97080f36b6969922031afa15ca072aa2dbd32b26739016eb947af0604792/kahypar-1.0.3-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06b5baad5ceee8f6a1d8a46d714bf419", "sha256": "5a8fc5184afa31936bfa1d6f0ef132a089dfb421281f273ab3f7f2538351bedf"}, "downloads": -1, "filename": "kahypar-1.0.3-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "06b5baad5ceee8f6a1d8a46d714bf419", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 906076, "upload_time": "2019-11-18T13:07:14", "upload_time_iso_8601": "2019-11-18T13:07:14.633955Z", "url": "https://files.pythonhosted.org/packages/e8/18/390a760d153a808f645dcb927edc3ebc9e68cb18800a0e0aebcee5d7bb63/kahypar-1.0.3-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "c9711cd283600d229dc82c541fbd5790", "sha256": "79b0fd996aa024303deb62c6a2ff64cc7677f1bf695790f7666c480f400957d0"}, "downloads": -1, "filename": "kahypar-1.0.4-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "c9711cd283600d229dc82c541fbd5790", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 907973, "upload_time": "2019-11-18T17:42:58", "upload_time_iso_8601": "2019-11-18T17:42:58.946787Z", "url": "https://files.pythonhosted.org/packages/38/f6/a86f9a42d2535c9ac31a771d079e20bd160bb5a09a6cd40180fc22cbca2e/kahypar-1.0.4-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6b0f994cd3b13ace5c29a9de45bba60", "sha256": "04c88d0c9aa845adcea6d0234cdb12ac122f493bbed3d94364fd35ae41f0cc0f"}, "downloads": -1, "filename": "kahypar-1.0.4-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "b6b0f994cd3b13ace5c29a9de45bba60", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 907983, "upload_time": "2019-11-18T17:43:02", "upload_time_iso_8601": "2019-11-18T17:43:02.749000Z", "url": "https://files.pythonhosted.org/packages/cb/48/90e9f2a495291c3d53c7511635a1178ded714ba65aa4a84dfd07819fb12a/kahypar-1.0.4-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87e557aae9173eb39f857b566ef7f95d", "sha256": "f9e101ce1a5555359baecc3f3882f944129cf713f3f1d6af4c4d96a02a6409a7"}, "downloads": -1, "filename": "kahypar-1.0.4-cp34-cp34m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "87e557aae9173eb39f857b566ef7f95d", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 908582, "upload_time": "2019-11-18T17:43:06", "upload_time_iso_8601": "2019-11-18T17:43:06.334780Z", "url": "https://files.pythonhosted.org/packages/58/87/e32583aef12acee76bf4b4fbf48ba5224b62f313af17bd792ea11dfb124a/kahypar-1.0.4-cp34-cp34m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fc3402872afc80164d02ce8fdbe6b4e", "sha256": "24e547472731162a7a5a76b7ef14600b890d78ce1698474812319ede23a05bbc"}, "downloads": -1, "filename": "kahypar-1.0.4-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "2fc3402872afc80164d02ce8fdbe6b4e", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 908608, "upload_time": "2019-11-18T17:43:09", "upload_time_iso_8601": "2019-11-18T17:43:09.742637Z", "url": "https://files.pythonhosted.org/packages/51/54/4859f087a96457fadbfd67fe5f125a1e80501687ffd58fc96a100a0e9e9a/kahypar-1.0.4-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af272ee9899f04fc7cd3ccde4caadb42", "sha256": "7d6994a53f972ab958eeb5b6da9c115d86bf7b1288d43087ac4739407d609d66"}, "downloads": -1, "filename": "kahypar-1.0.4-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "af272ee9899f04fc7cd3ccde4caadb42", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 908613, "upload_time": "2019-11-18T17:43:13", "upload_time_iso_8601": "2019-11-18T17:43:13.541347Z", "url": "https://files.pythonhosted.org/packages/a7/5b/8f83eaa78cb2f2c33275bbafea9f23a510836b08ac583988fef472481f27/kahypar-1.0.4-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4dc69872159f68d783a0f7a8fd963c59", "sha256": "b7c2334df29da2df403462ce0524b43a4d7ae8ba80490932a2d529c8d54a04d8"}, "downloads": -1, "filename": "kahypar-1.0.4-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "4dc69872159f68d783a0f7a8fd963c59", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 909047, "upload_time": "2019-11-18T17:43:17", "upload_time_iso_8601": "2019-11-18T17:43:17.146997Z", "url": "https://files.pythonhosted.org/packages/47/f8/5f6cce28a10925bb7b3ce5b183303957453b1e34994eb9209046574f1752/kahypar-1.0.4-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "969955b0125d85620c5bf1a95cd0add1", "sha256": "c36df2d083627763ecc6d13d9db87b83b0d12f4151ec9a5c56ddbd255b80aaed"}, "downloads": -1, "filename": "kahypar-1.0.4-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "969955b0125d85620c5bf1a95cd0add1", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 905888, "upload_time": "2019-11-18T17:43:20", "upload_time_iso_8601": "2019-11-18T17:43:20.244890Z", "url": "https://files.pythonhosted.org/packages/38/02/e41a5a6e0929d95d3ad146c3bfb7761e368f0152e2d1e1d0af2228efda5f/kahypar-1.0.4-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e831a253c51585f0ef8bad3873beaf6c", "sha256": "b5fec87bb468736762f2f47e58035e5ae076b77b314563dd6b5cb3a894e3bea5"}, "downloads": -1, "filename": "kahypar-1.1.0-cp35-cp35m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "e831a253c51585f0ef8bad3873beaf6c", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1037646, "upload_time": "2020-03-31T10:02:17", "upload_time_iso_8601": "2020-03-31T10:02:17.690916Z", "url": "https://files.pythonhosted.org/packages/76/b4/9db8ed3a5bbf84409613bf7e417002388e65844dd4d946c7cdeb54788c18/kahypar-1.1.0-cp35-cp35m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6eb93af76f862a1d2b017e4bd449d3f", "sha256": "907d05499f094abb0b581c7dc01120e8c7a77b4b051affae8cb3be23e03f88ed"}, "downloads": -1, "filename": "kahypar-1.1.0-cp36-cp36m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "e6eb93af76f862a1d2b017e4bd449d3f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1037647, "upload_time": "2020-03-31T10:02:20", "upload_time_iso_8601": "2020-03-31T10:02:20.669441Z", "url": "https://files.pythonhosted.org/packages/c2/00/61f1f1d81e98cf13d5c9a1b020e78b8335c538410423ed7e041d18d62b30/kahypar-1.1.0-cp36-cp36m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2af2fb1464941451ca58301c862d0adb", "sha256": "688f419c40f5f0007ae67355830a57c60751417a075f5bc242fd3c4ab7461c04"}, "downloads": -1, "filename": "kahypar-1.1.0-cp37-cp37m-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "2af2fb1464941451ca58301c862d0adb", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1038055, "upload_time": "2020-03-31T10:02:24", "upload_time_iso_8601": "2020-03-31T10:02:24.282154Z", "url": "https://files.pythonhosted.org/packages/f9/6c/74df5f470f63cd640cc09d2b7432991e3334106de8f1b7f977a16a05424f/kahypar-1.1.0-cp37-cp37m-manylinux2014_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9008d2d4e37ba831ce885c6083d75667", "sha256": "09655b7b208ed051b9cf76bade69e9c748c230c291f8b978a9b0f73819fd2a72"}, "downloads": -1, "filename": "kahypar-1.1.0-cp38-cp38-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "9008d2d4e37ba831ce885c6083d75667", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 1035366, "upload_time": "2020-03-31T10:02:27", "upload_time_iso_8601": "2020-03-31T10:02:27.163634Z", "url": "https://files.pythonhosted.org/packages/95/30/86fb379bd8804d73f4bba0f26b845e2d2e7aece84087a3f8f7647f2fe8e8/kahypar-1.1.0-cp38-cp38-manylinux2014_x86_64.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "a9f1b7fe485ef416ce13ff05c022db61", "sha256": "5d3dc0f99b4cbdbada5079ef6a3efbd4eab63a24b7a20f6e20c4aab7be366051"}, "downloads": -1, "filename": "kahypar-1.1.1-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "a9f1b7fe485ef416ce13ff05c022db61", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 942302, "upload_time": "2020-03-31T11:10:13", "upload_time_iso_8601": "2020-03-31T11:10:13.614802Z", "url": "https://files.pythonhosted.org/packages/81/f7/e1e5356bb5a98641549224f4f61cce42f4a32ca35f31d3de8615e8765d70/kahypar-1.1.1-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d167433e591048893b00570eac2d6d31", "sha256": "66f45d949c5e414d38c36f096f4548a385d9287652c18071543f9fac6d7889d3"}, "downloads": -1, "filename": "kahypar-1.1.1-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "d167433e591048893b00570eac2d6d31", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 942319, "upload_time": "2020-03-31T11:10:19", "upload_time_iso_8601": "2020-03-31T11:10:19.265425Z", "url": "https://files.pythonhosted.org/packages/3c/d4/d168217de2bfb9a7cddd37e823b5956135d01b355f268067650baab6b0cb/kahypar-1.1.1-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5837ae5a54e954fb833bc8dc9953111", "sha256": "cfe4683de6a736dbdc48dea94db915d6083943c007d34e929b1c003760f3fcba"}, "downloads": -1, "filename": "kahypar-1.1.1-cp34-cp34m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "c5837ae5a54e954fb833bc8dc9953111", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 942538, "upload_time": "2020-03-31T11:10:22", "upload_time_iso_8601": "2020-03-31T11:10:22.254125Z", "url": "https://files.pythonhosted.org/packages/14/0d/46b2e32ae6fdd2d02b81dafa231035cd9051a7bdea7c9897f5f7c93b7e5a/kahypar-1.1.1-cp34-cp34m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc9c65465abb522eb6547bc4679814d0", "sha256": "7a92923997527051900bf257873beb8ed688231c024b547e4d0c0d0e7a7216e4"}, "downloads": -1, "filename": "kahypar-1.1.1-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "dc9c65465abb522eb6547bc4679814d0", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 942645, "upload_time": "2020-03-31T11:10:24", "upload_time_iso_8601": "2020-03-31T11:10:24.738908Z", "url": "https://files.pythonhosted.org/packages/0c/34/495160fec2d9250a8e846c345194d8a73899b40957d84b547c7d260740fe/kahypar-1.1.1-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6900042cd80e95c3501186461ae2206a", "sha256": "c33b9646aef10053bb5a25553eff3cca83ff4b1a0bcf4b6fdc32caf796951a99"}, "downloads": -1, "filename": "kahypar-1.1.1-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "6900042cd80e95c3501186461ae2206a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 942646, "upload_time": "2020-03-31T11:10:27", "upload_time_iso_8601": "2020-03-31T11:10:27.733471Z", "url": "https://files.pythonhosted.org/packages/03/af/e3dcb750247b37c92ef3f9ba7454dd6a005eb519bba0c43b5d4c2573351c/kahypar-1.1.1-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31c62fde0e38d390d6a7402fb45e58c7", "sha256": "6694fa760e5bbaba4da5910b154337dcddcf31d47cae953748f1b7a06c76af7c"}, "downloads": -1, "filename": "kahypar-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "31c62fde0e38d390d6a7402fb45e58c7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 942596, "upload_time": "2020-03-31T11:10:30", "upload_time_iso_8601": "2020-03-31T11:10:30.761910Z", "url": "https://files.pythonhosted.org/packages/b3/a5/f5d17c2e1d0900f1d6983d8cbd5020b5bee9bee59528adc12498018fec64/kahypar-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0d92f6982520a5c683424f4cdde0ead", "sha256": "f8ea0934bc488021341270bd100bf585db46efd5171d19bc25d1718026e9e946"}, "downloads": -1, "filename": "kahypar-1.1.1-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "c0d92f6982520a5c683424f4cdde0ead", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 939472, "upload_time": "2020-03-31T11:10:33", "upload_time_iso_8601": "2020-03-31T11:10:33.482713Z", "url": "https://files.pythonhosted.org/packages/1f/c4/509435c44caaa389df4de4a292e5f59b0c721f199ba854b2bafef2c2bf3b/kahypar-1.1.1-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a9f1b7fe485ef416ce13ff05c022db61", "sha256": "5d3dc0f99b4cbdbada5079ef6a3efbd4eab63a24b7a20f6e20c4aab7be366051"}, "downloads": -1, "filename": "kahypar-1.1.1-cp27-cp27m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "a9f1b7fe485ef416ce13ff05c022db61", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 942302, "upload_time": "2020-03-31T11:10:13", "upload_time_iso_8601": "2020-03-31T11:10:13.614802Z", "url": "https://files.pythonhosted.org/packages/81/f7/e1e5356bb5a98641549224f4f61cce42f4a32ca35f31d3de8615e8765d70/kahypar-1.1.1-cp27-cp27m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d167433e591048893b00570eac2d6d31", "sha256": "66f45d949c5e414d38c36f096f4548a385d9287652c18071543f9fac6d7889d3"}, "downloads": -1, "filename": "kahypar-1.1.1-cp27-cp27mu-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "d167433e591048893b00570eac2d6d31", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 942319, "upload_time": "2020-03-31T11:10:19", "upload_time_iso_8601": "2020-03-31T11:10:19.265425Z", "url": "https://files.pythonhosted.org/packages/3c/d4/d168217de2bfb9a7cddd37e823b5956135d01b355f268067650baab6b0cb/kahypar-1.1.1-cp27-cp27mu-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5837ae5a54e954fb833bc8dc9953111", "sha256": "cfe4683de6a736dbdc48dea94db915d6083943c007d34e929b1c003760f3fcba"}, "downloads": -1, "filename": "kahypar-1.1.1-cp34-cp34m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "c5837ae5a54e954fb833bc8dc9953111", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 942538, "upload_time": "2020-03-31T11:10:22", "upload_time_iso_8601": "2020-03-31T11:10:22.254125Z", "url": "https://files.pythonhosted.org/packages/14/0d/46b2e32ae6fdd2d02b81dafa231035cd9051a7bdea7c9897f5f7c93b7e5a/kahypar-1.1.1-cp34-cp34m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc9c65465abb522eb6547bc4679814d0", "sha256": "7a92923997527051900bf257873beb8ed688231c024b547e4d0c0d0e7a7216e4"}, "downloads": -1, "filename": "kahypar-1.1.1-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "dc9c65465abb522eb6547bc4679814d0", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 942645, "upload_time": "2020-03-31T11:10:24", "upload_time_iso_8601": "2020-03-31T11:10:24.738908Z", "url": "https://files.pythonhosted.org/packages/0c/34/495160fec2d9250a8e846c345194d8a73899b40957d84b547c7d260740fe/kahypar-1.1.1-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6900042cd80e95c3501186461ae2206a", "sha256": "c33b9646aef10053bb5a25553eff3cca83ff4b1a0bcf4b6fdc32caf796951a99"}, "downloads": -1, "filename": "kahypar-1.1.1-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "6900042cd80e95c3501186461ae2206a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 942646, "upload_time": "2020-03-31T11:10:27", "upload_time_iso_8601": "2020-03-31T11:10:27.733471Z", "url": "https://files.pythonhosted.org/packages/03/af/e3dcb750247b37c92ef3f9ba7454dd6a005eb519bba0c43b5d4c2573351c/kahypar-1.1.1-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31c62fde0e38d390d6a7402fb45e58c7", "sha256": "6694fa760e5bbaba4da5910b154337dcddcf31d47cae953748f1b7a06c76af7c"}, "downloads": -1, "filename": "kahypar-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "31c62fde0e38d390d6a7402fb45e58c7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 942596, "upload_time": "2020-03-31T11:10:30", "upload_time_iso_8601": "2020-03-31T11:10:30.761910Z", "url": "https://files.pythonhosted.org/packages/b3/a5/f5d17c2e1d0900f1d6983d8cbd5020b5bee9bee59528adc12498018fec64/kahypar-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0d92f6982520a5c683424f4cdde0ead", "sha256": "f8ea0934bc488021341270bd100bf585db46efd5171d19bc25d1718026e9e946"}, "downloads": -1, "filename": "kahypar-1.1.1-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "c0d92f6982520a5c683424f4cdde0ead", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 939472, "upload_time": "2020-03-31T11:10:33", "upload_time_iso_8601": "2020-03-31T11:10:33.482713Z", "url": "https://files.pythonhosted.org/packages/1f/c4/509435c44caaa389df4de4a292e5f59b0c721f199ba854b2bafef2c2bf3b/kahypar-1.1.1-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:48 2020"}