{"info": {"author": "James Fallon", "author_email": "j.fallon@pgr.reading.ac.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# TOPSIS-Python\n\nInspired by [TOPSIS-Python](https://github.com/Glitchfix/TOPSIS-Python)\n(python2).\n\nOur python 3 code follows the same structure, defining a topsis class, \nbut uses numpy linear algebra in order to modernise, optimise, and remove\nredundant code.\n\n## What is TOPSIS\n\n**T**echnique for **O**rder **P**reference by **S**imilarity to **I**deal\n**S**olution (TOPSIS) originated in the 1980s as a multi-criteria decision\nmaking method. TOPSIS chooses the alternative of shortest Euclidean distance\nfrom the ideal solution, and farthest distance from the negative-ideal\nsolution. More details at [wikipedia](https://en.wikipedia.org/wiki/TOPSIS). The\nTOPSIS algorithm is succinctly explained in this [paper comparing TOPSIS and\nVIKOR methods\n](https://www.sciencedirect.com/science/article/pii/S0377221703000201)\n\n## Using TOPSIS-Python\n\nTOPSIS-Python can be run as in the following example:\n\n```\n>>> from topsis import topsis\n>>> a = [[7, 9, 9, 8], [8, 7, 8, 7], [9, 6, 8, 9], [6, 7, 8, 6]]\n>>> w = [0.1, 0.4, 0.3, 0.2]\n>>> I = [1, 1, 1, 0]\n>>> decision = topsis(a, w, I)\n```\n\nThe decision matrix (`a`) should be constructed with each row representing\nan alternative, and each column representing a criterion. We have used an\nexample given in [TOPSIS Method in MADM (Dr. Farhad Faez)](\nhttp://www.faez.ir/CourseFile/TOPSIS.pdf)\n\nWeights (`w`) is not already normalised will be normalised upon\ninitialisation. Information on benefit (1) cost (0) criteria should be provided\nin `I`. \n\nBy default, the optimisation (TOPSIS calculation) does not take place. No values\nare stored in `decision.C` or `decision.optimum_choice`.\n\nThese can be calculated, either by calling `decision.calc()`, or by calling a\nrepresentation of the decision (which will itself call `decision.calc()`):\n\n```\n>>> decision\n\nAlternatives ranking C:\n[0.74269409 0.40359933 0.17586999 0.44142927]\n\nBest alternative\na[0]: [7. 9. 9. 8.]\n\n```\n\nThe rankings are saved in `decision.C`, with the highest ranking $`0.74269409`$\noffering us the best decision, and lowest ranking $`0.17586999`$ offering the\nworst decision making, according to TOPSIS method.\n\nWe are also then shown the best alternative index (which happens to be index 0\nin this example), and the associated criteria coefficients of this alternative.\n\n## Installation\n\nThe module can be installed from pypi using pip, or downloaded and installed\ndirectly from git\n\npypi: <https://pypi.org/project/topsis-jamesfallon>\ngit: <https://gitlab.com/jamesfallon/topsis-python.git>\n\n\n### pip\n\nInstallation with pip can be achieved in one line:\n\n```\npip install topsis-jamesfallon\n```\n\n\n### Anaconda\n\nIf you are using anaconda, make sure that you are using your environment's\n`pip`, and not the OS default. Your installation **only if using anaconda** may\nlook like:\n\n1. Activate your environment\n\n```\n(base) $ conda activate custom_env\n```\n\n2. Ensure pip is installed in your environment\n\n```\n(custom_env) $ conda install pip\n```\n\n3. Make sure you are using your environment's pip installation. If not, you can always prepend the full path before the pip command.\n\n```\n(custom_env) $ which pip\n.../path_to_your_anaconda_installation/anaconda3/envs/custom_env/bin/pip\n```\n\n4. Now install topsis from pypi\n\n```\n(custom_env) $ pip install topsis-jamesfallon\nCollecting topsis-jamesfallon\nInstalling collected packages: topsis-jamesfallon\nSuccessfully installed topsis-jamesfallon-0.2\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/jamesfallon/topsis-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "topsis-jamesfallon", "package_url": "https://pypi.org/project/topsis-jamesfallon/", "platform": "", "project_url": "https://pypi.org/project/topsis-jamesfallon/", "project_urls": {"Homepage": "https://gitlab.com/jamesfallon/topsis-python"}, "release_url": "https://pypi.org/project/topsis-jamesfallon/0.2.3/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Implementation of TOPSIS decision making", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TOPSIS-Python</h1>\n<p>Inspired by <a href=\"https://github.com/Glitchfix/TOPSIS-Python\" rel=\"nofollow\">TOPSIS-Python</a>\n(python2).</p>\n<p>Our python 3 code follows the same structure, defining a topsis class,\nbut uses numpy linear algebra in order to modernise, optimise, and remove\nredundant code.</p>\n<h2>What is TOPSIS</h2>\n<p><strong>T</strong>echnique for <strong>O</strong>rder <strong>P</strong>reference by <strong>S</strong>imilarity to <strong>I</strong>deal\n<strong>S</strong>olution (TOPSIS) originated in the 1980s as a multi-criteria decision\nmaking method. TOPSIS chooses the alternative of shortest Euclidean distance\nfrom the ideal solution, and farthest distance from the negative-ideal\nsolution. More details at <a href=\"https://en.wikipedia.org/wiki/TOPSIS\" rel=\"nofollow\">wikipedia</a>. The\nTOPSIS algorithm is succinctly explained in this <a href=\"https://www.sciencedirect.com/science/article/pii/S0377221703000201\" rel=\"nofollow\">paper comparing TOPSIS and\nVIKOR methods\n</a></p>\n<h2>Using TOPSIS-Python</h2>\n<p>TOPSIS-Python can be run as in the following example:</p>\n<pre><code>&gt;&gt;&gt; from topsis import topsis\n&gt;&gt;&gt; a = [[7, 9, 9, 8], [8, 7, 8, 7], [9, 6, 8, 9], [6, 7, 8, 6]]\n&gt;&gt;&gt; w = [0.1, 0.4, 0.3, 0.2]\n&gt;&gt;&gt; I = [1, 1, 1, 0]\n&gt;&gt;&gt; decision = topsis(a, w, I)\n</code></pre>\n<p>The decision matrix (<code>a</code>) should be constructed with each row representing\nan alternative, and each column representing a criterion. We have used an\nexample given in <a href=\"http://www.faez.ir/CourseFile/TOPSIS.pdf\" rel=\"nofollow\">TOPSIS Method in MADM (Dr. Farhad Faez)</a></p>\n<p>Weights (<code>w</code>) is not already normalised will be normalised upon\ninitialisation. Information on benefit (1) cost (0) criteria should be provided\nin <code>I</code>.</p>\n<p>By default, the optimisation (TOPSIS calculation) does not take place. No values\nare stored in <code>decision.C</code> or <code>decision.optimum_choice</code>.</p>\n<p>These can be calculated, either by calling <code>decision.calc()</code>, or by calling a\nrepresentation of the decision (which will itself call <code>decision.calc()</code>):</p>\n<pre><code>&gt;&gt;&gt; decision\n\nAlternatives ranking C:\n[0.74269409 0.40359933 0.17586999 0.44142927]\n\nBest alternative\na[0]: [7. 9. 9. 8.]\n\n</code></pre>\n<p>The rankings are saved in <code>decision.C</code>, with the highest ranking $<code>0.74269409</code>$\noffering us the best decision, and lowest ranking $<code>0.17586999</code>$ offering the\nworst decision making, according to TOPSIS method.</p>\n<p>We are also then shown the best alternative index (which happens to be index 0\nin this example), and the associated criteria coefficients of this alternative.</p>\n<h2>Installation</h2>\n<p>The module can be installed from pypi using pip, or downloaded and installed\ndirectly from git</p>\n<p>pypi: <a href=\"https://pypi.org/project/topsis-jamesfallon\" rel=\"nofollow\">https://pypi.org/project/topsis-jamesfallon</a>\ngit: <a href=\"https://gitlab.com/jamesfallon/topsis-python.git\" rel=\"nofollow\">https://gitlab.com/jamesfallon/topsis-python.git</a></p>\n<h3>pip</h3>\n<p>Installation with pip can be achieved in one line:</p>\n<pre><code>pip install topsis-jamesfallon\n</code></pre>\n<h3>Anaconda</h3>\n<p>If you are using anaconda, make sure that you are using your environment's\n<code>pip</code>, and not the OS default. Your installation <strong>only if using anaconda</strong> may\nlook like:</p>\n<ol>\n<li>Activate your environment</li>\n</ol>\n<pre><code>(base) $ conda activate custom_env\n</code></pre>\n<ol>\n<li>Ensure pip is installed in your environment</li>\n</ol>\n<pre><code>(custom_env) $ conda install pip\n</code></pre>\n<ol>\n<li>Make sure you are using your environment's pip installation. If not, you can always prepend the full path before the pip command.</li>\n</ol>\n<pre><code>(custom_env) $ which pip\n.../path_to_your_anaconda_installation/anaconda3/envs/custom_env/bin/pip\n</code></pre>\n<ol>\n<li>Now install topsis from pypi</li>\n</ol>\n<pre><code>(custom_env) $ pip install topsis-jamesfallon\nCollecting topsis-jamesfallon\nInstalling collected packages: topsis-jamesfallon\nSuccessfully installed topsis-jamesfallon-0.2\n</code></pre>\n\n          </div>"}, "last_serial": 6680269, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "0998c1ba2f88f5cabfb6eec116919a70", "sha256": "76e34a1020eb0e336fb57bee227ef506f1b9b259bc0517548c2fe5fd59b03fba"}, "downloads": -1, "filename": "topsis_jamesfallon-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0998c1ba2f88f5cabfb6eec116919a70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3318, "upload_time": "2019-12-04T15:24:52", "upload_time_iso_8601": "2019-12-04T15:24:52.534930Z", "url": "https://files.pythonhosted.org/packages/9e/11/1bbe02dfe10cb602d97c40da209058e46bd2974af3c79701883295c09109/topsis_jamesfallon-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c52e18af193d1ab59f0996ba46973401", "sha256": "2ac24262592c021ac31f80b739f4a7f7fd9edd9eb2b6c484702fe926698a0f46"}, "downloads": -1, "filename": "topsis-jamesfallon-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c52e18af193d1ab59f0996ba46973401", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2436, "upload_time": "2019-12-04T15:24:55", "upload_time_iso_8601": "2019-12-04T15:24:55.590268Z", "url": "https://files.pythonhosted.org/packages/5c/14/43d3371a4fd00d23569737040dbd4e8ae4e176be30add50cf869cfa66719/topsis-jamesfallon-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "04071d1e39d1608045f2ebb06bdbcc8e", "sha256": "914cf6d4a1be2642ced011282bc2d8127faffcd4ca8f512691e676b07e387aa8"}, "downloads": -1, "filename": "topsis_jamesfallon-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "04071d1e39d1608045f2ebb06bdbcc8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3310, "upload_time": "2019-12-04T15:28:26", "upload_time_iso_8601": "2019-12-04T15:28:26.342678Z", "url": "https://files.pythonhosted.org/packages/fc/79/cee70b48b2354a12b01a51012e0d3e426cb554f6fcfaab1135136a86ad5c/topsis_jamesfallon-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6bd8cf1d83560e3b49c486bb98de1cb9", "sha256": "63225cd2b8dada07892adf662b1209c9f7ca4032bfa45b4fb5f0ca6d78d168bb"}, "downloads": -1, "filename": "topsis-jamesfallon-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6bd8cf1d83560e3b49c486bb98de1cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2424, "upload_time": "2019-12-04T15:28:27", "upload_time_iso_8601": "2019-12-04T15:28:27.873330Z", "url": "https://files.pythonhosted.org/packages/6f/7b/f4d8f71aea9ddd7f3f528d1b14b7d84ad12c02ec5c0b1f5daff01b3ddac2/topsis-jamesfallon-0.1.3.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "dd052caaa0e1ec8ded817167b6530544", "sha256": "27e3148322be5c526a8026a934007ba2206cfc2c333615cc05e74e0a2cbbd69b"}, "downloads": -1, "filename": "topsis_jamesfallon-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "dd052caaa0e1ec8ded817167b6530544", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5591, "upload_time": "2020-02-22T12:22:53", "upload_time_iso_8601": "2020-02-22T12:22:53.497185Z", "url": "https://files.pythonhosted.org/packages/05/51/87cafef2b6a6c75acee0912dbd66404d85fb00376575e282dc9bfd5883b5/topsis_jamesfallon-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e7079f505333156408a89f42332505b", "sha256": "94a5c968d5c46c28d2d35e82025d4171bcc722c304e0058d9ef96b8499643841"}, "downloads": -1, "filename": "topsis-jamesfallon-0.2.3.tar.gz", "has_sig": false, "md5_digest": "0e7079f505333156408a89f42332505b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4744, "upload_time": "2020-02-22T12:22:54", "upload_time_iso_8601": "2020-02-22T12:22:54.899184Z", "url": "https://files.pythonhosted.org/packages/34/7b/7711ab8c517a5def135f4f593f73562f32ce45ec8f9c2027094a2806299c/topsis-jamesfallon-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dd052caaa0e1ec8ded817167b6530544", "sha256": "27e3148322be5c526a8026a934007ba2206cfc2c333615cc05e74e0a2cbbd69b"}, "downloads": -1, "filename": "topsis_jamesfallon-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "dd052caaa0e1ec8ded817167b6530544", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5591, "upload_time": "2020-02-22T12:22:53", "upload_time_iso_8601": "2020-02-22T12:22:53.497185Z", "url": "https://files.pythonhosted.org/packages/05/51/87cafef2b6a6c75acee0912dbd66404d85fb00376575e282dc9bfd5883b5/topsis_jamesfallon-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e7079f505333156408a89f42332505b", "sha256": "94a5c968d5c46c28d2d35e82025d4171bcc722c304e0058d9ef96b8499643841"}, "downloads": -1, "filename": "topsis-jamesfallon-0.2.3.tar.gz", "has_sig": false, "md5_digest": "0e7079f505333156408a89f42332505b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4744, "upload_time": "2020-02-22T12:22:54", "upload_time_iso_8601": "2020-02-22T12:22:54.899184Z", "url": "https://files.pythonhosted.org/packages/34/7b/7711ab8c517a5def135f4f593f73562f32ce45ec8f9c2027094a2806299c/topsis-jamesfallon-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:42 2020"}