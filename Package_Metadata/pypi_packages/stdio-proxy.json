{"info": {"author": "Yuki Igarashi", "author_email": "me@bonprosoft.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "description": "# stdio\\_proxy\n[![PyPI](https://img.shields.io/pypi/v/stdio-proxy.svg)](https://pypi.org/project/stdio-proxy/)\n[![PyPI Supported Python Versions](https://img.shields.io/pypi/pyversions/stdio-proxy.svg)](https://pypi.org/project/stdio-proxy/)\n[![GitHub license](https://img.shields.io/github/license/bonprosoft/stdio_proxy.svg)](https://github.com/bonprosoft/stdio_proxy)\n[![GitHub Actions (Tests)](https://github.com/bonprosoft/stdio_proxy/workflows/tests/badge.svg)](https://github.com/bonprosoft/stdio_proxy)\n\n\nstdio\\_proxy is a thread-safe library for Python 2.7 and Python 3.5+ that can temporarily redirect stdio to another objects.\n\n## Background\n\nPython 3.5+ has `redirect_stdout` and `redirect_stderr` in `contextlib`, that are utility functions for temporarily redirecting `sys.stdout` and `sys.stderr` to another file-like objects, respectively.\nBut those functions have the global side effect on `sys.stdout` and `sys.stderr`.\nThat means we cannot use those functions in most threaded applications.\n\n- Python code\n```py\nimport contextlib\nimport io\nimport time\nfrom concurrent.futures import ThreadPoolExecutor\n\ndef run(value):\n    for i in range(2):\n        print(\"Hello from {}:{}\".format(value, i))\n        time.sleep(1)\n\ndef run_hook(value):\n    buf = io.StringIO()\n    with contextlib.redirect_stdout(buf):\n        run(value)\n    return buf.getvalue()\n\nwith ThreadPoolExecutor() as executor:\n    f1 = executor.submit(run, \"th1\")\n    f2 = executor.submit(run_hook, \"th2\")\n    f1.result()\n    result = f2.result()\n    print(\"===Done===\")\n    print(\"Redirected Stdout:\\n{}\".format(result))\n```\n\n- What we want\n```sh\nHello from th1:0\nHello from th1:1\n===Done===\nRedirected Stdout:\nHello from th2:0\nHello from th2:1\n```\n\n- Example of actual output\n```sh\nHello from th1:0\n===Done===\nRedirected Stdout:\nHello from th2:0\nHello from th1:1\nHello from th2:1\n```\n\nThis library aims to redirect those stdio correctly in threaded applications as well.\nBy just replacing `run_hook` function with the following code, the result would be exactly the same as \"what we want\" :)\n\n```py\ndef run_hook(value):\n    buf = io.BytesIO()\n    with stdio_proxy.redirect_stdout(buf):\n        run(value)\n    return buf.getvalue()\n```\n\n## Install\n\n```sh\n$ pip install stdio-proxy\n```\n\n## Usage\n\n- Redirect a buffer to `stdin`\n```\nbuf = io.BytesIO(b\"foo\\n\")\nwith stdio_proxy.redirect_stdin(buf):\n    print(\"Read: {}\".format(sys.stdin.readline()))\n```\n\n- Redirect `stdout` to a buffer\n```\nbuf = io.BytesIO()\nwith stdio_proxy.redirect_stdout(buf):\n    print(\"foo\")\nprint(\"Redirected: {}\".format(buf.getvalue()))\n```\n\n- Redirect `stderr` to a buffer\n```\nbuf = io.BytesIO()\nwith stdio_proxy.redirect_stderr(buf):\n    sys.stderr.write(\"foo\\n\")\nprint(\"Redirected: {}\".format(buf.getvalue()))\n```\n\n\n## License\n\nMIT License\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bonprosoft/stdio_proxy", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "stdio-proxy", "package_url": "https://pypi.org/project/stdio-proxy/", "platform": "", "project_url": "https://pypi.org/project/stdio-proxy/", "project_urls": {"Homepage": "https://github.com/bonprosoft/stdio_proxy"}, "release_url": "https://pypi.org/project/stdio-proxy/0.1.3/", "requires_dist": ["futures ; python_version == \"2.7\"", "typing ; (python_version == \"2.7\") and extra == 'develop'"], "requires_python": "", "summary": "Thread safe stdio proxy", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>stdio_proxy</h1>\n<p><a href=\"https://pypi.org/project/stdio-proxy/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab68407e45af33bea4168739757824fcc92dac7c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f737464696f2d70726f78792e737667\"></a>\n<a href=\"https://pypi.org/project/stdio-proxy/\" rel=\"nofollow\"><img alt=\"PyPI Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4d6819cf7c229be87d70caf5cf7e713f072eb94/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f737464696f2d70726f78792e737667\"></a>\n<a href=\"https://github.com/bonprosoft/stdio_proxy\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9908b17103a67b8bcfffa274eb48ac3f519108d8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f626f6e70726f736f66742f737464696f5f70726f78792e737667\"></a>\n<a href=\"https://github.com/bonprosoft/stdio_proxy\" rel=\"nofollow\"><img alt=\"GitHub Actions (Tests)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/98d3549fb0ebcd17868fd5275ef4bc92df214446/68747470733a2f2f6769746875622e636f6d2f626f6e70726f736f66742f737464696f5f70726f78792f776f726b666c6f77732f74657374732f62616467652e737667\"></a></p>\n<p>stdio_proxy is a thread-safe library for Python 2.7 and Python 3.5+ that can temporarily redirect stdio to another objects.</p>\n<h2>Background</h2>\n<p>Python 3.5+ has <code>redirect_stdout</code> and <code>redirect_stderr</code> in <code>contextlib</code>, that are utility functions for temporarily redirecting <code>sys.stdout</code> and <code>sys.stderr</code> to another file-like objects, respectively.\nBut those functions have the global side effect on <code>sys.stdout</code> and <code>sys.stderr</code>.\nThat means we cannot use those functions in most threaded applications.</p>\n<ul>\n<li>Python code</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">contextlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">concurrent.futures</span> <span class=\"kn\">import</span> <span class=\"n\">ThreadPoolExecutor</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Hello from </span><span class=\"si\">{}</span><span class=\"s2\">:</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">))</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">run_hook</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">StringIO</span><span class=\"p\">()</span>\n    <span class=\"k\">with</span> <span class=\"n\">contextlib</span><span class=\"o\">.</span><span class=\"n\">redirect_stdout</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">):</span>\n        <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">getvalue</span><span class=\"p\">()</span>\n\n<span class=\"k\">with</span> <span class=\"n\">ThreadPoolExecutor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">executor</span><span class=\"p\">:</span>\n    <span class=\"n\">f1</span> <span class=\"o\">=</span> <span class=\"n\">executor</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">,</span> <span class=\"s2\">\"th1\"</span><span class=\"p\">)</span>\n    <span class=\"n\">f2</span> <span class=\"o\">=</span> <span class=\"n\">executor</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"n\">run_hook</span><span class=\"p\">,</span> <span class=\"s2\">\"th2\"</span><span class=\"p\">)</span>\n    <span class=\"n\">f1</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">f2</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"===Done===\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Redirected Stdout:</span><span class=\"se\">\\n</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">))</span>\n</pre>\n<ul>\n<li>What we want</li>\n</ul>\n<pre>Hello from th1:0\nHello from th1:1\n<span class=\"o\">===</span><span class=\"nv\">Done</span><span class=\"o\">===</span>\nRedirected Stdout:\nHello from th2:0\nHello from th2:1\n</pre>\n<ul>\n<li>Example of actual output</li>\n</ul>\n<pre>Hello from th1:0\n<span class=\"o\">===</span><span class=\"nv\">Done</span><span class=\"o\">===</span>\nRedirected Stdout:\nHello from th2:0\nHello from th1:1\nHello from th2:1\n</pre>\n<p>This library aims to redirect those stdio correctly in threaded applications as well.\nBy just replacing <code>run_hook</code> function with the following code, the result would be exactly the same as \"what we want\" :)</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">run_hook</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"n\">buf</span> <span class=\"o\">=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">BytesIO</span><span class=\"p\">()</span>\n    <span class=\"k\">with</span> <span class=\"n\">stdio_proxy</span><span class=\"o\">.</span><span class=\"n\">redirect_stdout</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">):</span>\n        <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">buf</span><span class=\"o\">.</span><span class=\"n\">getvalue</span><span class=\"p\">()</span>\n</pre>\n<h2>Install</h2>\n<pre>$ pip install stdio-proxy\n</pre>\n<h2>Usage</h2>\n<ul>\n<li>Redirect a buffer to <code>stdin</code></li>\n</ul>\n<pre><code>buf = io.BytesIO(b\"foo\\n\")\nwith stdio_proxy.redirect_stdin(buf):\n    print(\"Read: {}\".format(sys.stdin.readline()))\n</code></pre>\n<ul>\n<li>Redirect <code>stdout</code> to a buffer</li>\n</ul>\n<pre><code>buf = io.BytesIO()\nwith stdio_proxy.redirect_stdout(buf):\n    print(\"foo\")\nprint(\"Redirected: {}\".format(buf.getvalue()))\n</code></pre>\n<ul>\n<li>Redirect <code>stderr</code> to a buffer</li>\n</ul>\n<pre><code>buf = io.BytesIO()\nwith stdio_proxy.redirect_stderr(buf):\n    sys.stderr.write(\"foo\\n\")\nprint(\"Redirected: {}\".format(buf.getvalue()))\n</code></pre>\n<h2>License</h2>\n<p>MIT License</p>\n\n          </div>"}, "last_serial": 6379637, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "37b4046832e03d73dafce82ff6403dc4", "sha256": "ec94a21e76898b69320d39d6d027dacfda83c9392021297a39d5825bee9dd35b"}, "downloads": -1, "filename": "stdio_proxy-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "37b4046832e03d73dafce82ff6403dc4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5621, "upload_time": "2019-12-08T12:23:04", "upload_time_iso_8601": "2019-12-08T12:23:04.636569Z", "url": "https://files.pythonhosted.org/packages/1d/5c/483650576ae84b8d0b13a4c32bc22ef0b0778911af70f2d4270ea53d96eb/stdio_proxy-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d68a5a5099299ccbc1f795f173909db", "sha256": "624d88de2a84b0f387ade27c68daa1306228fa1392f085f2941642173caf5024"}, "downloads": -1, "filename": "stdio_proxy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4d68a5a5099299ccbc1f795f173909db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5621, "upload_time": "2019-12-08T12:23:06", "upload_time_iso_8601": "2019-12-08T12:23:06.903003Z", "url": "https://files.pythonhosted.org/packages/47/1f/70759b38ab32810c4ab3da11a3dfcfa0f6fc5680094b7c15d14640514947/stdio_proxy-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "24bc7b958c62cb668a715f3eee9f9623", "sha256": "2c7f9cd380131ba7802ff95484649c15752c8b3289a3fa8966bdfce7bec36ad4"}, "downloads": -1, "filename": "stdio_proxy-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "24bc7b958c62cb668a715f3eee9f9623", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5784, "upload_time": "2019-12-08T13:01:00", "upload_time_iso_8601": "2019-12-08T13:01:00.895270Z", "url": "https://files.pythonhosted.org/packages/60/e5/1ce267adfc325531e6f9b3396d42eff8329cbd910557207e39b67a27e0ef/stdio_proxy-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5268551f7d6e1b1da0b73534709a5f84", "sha256": "9851ea970cb50cdc4a292ec6e2807117cc96d59309e28651729af7c5668e3696"}, "downloads": -1, "filename": "stdio_proxy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5268551f7d6e1b1da0b73534709a5f84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5784, "upload_time": "2019-12-08T13:01:02", "upload_time_iso_8601": "2019-12-08T13:01:02.495146Z", "url": "https://files.pythonhosted.org/packages/eb/de/be99c68efc939324eccbc6aa45478b7d70d4445bae29e124693dff0d80c5/stdio_proxy-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "950affce8ad025f7f65671d752bba2fc", "sha256": "8bdccc85905c11b5e68eb4ab89cd197a31af518dabb75e00175950484abd751d"}, "downloads": -1, "filename": "stdio_proxy-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "950affce8ad025f7f65671d752bba2fc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5957, "upload_time": "2019-12-08T18:27:58", "upload_time_iso_8601": "2019-12-08T18:27:58.774138Z", "url": "https://files.pythonhosted.org/packages/55/46/96a1c6c173c67eafbdd5073ff7b594d37153e449ac259176f7464831e94a/stdio_proxy-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d95d4f536c451c30555cdc28085d422c", "sha256": "9f5cb8bb545fd5dbdd50c2842e691dd6a6874947c5e9aa2c00f7d3bbf4a15a8e"}, "downloads": -1, "filename": "stdio_proxy-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d95d4f536c451c30555cdc28085d422c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5957, "upload_time": "2019-12-08T18:28:00", "upload_time_iso_8601": "2019-12-08T18:28:00.130777Z", "url": "https://files.pythonhosted.org/packages/55/15/66befbe59e5d109ab866c4990972e342b77f03e687393799056beef30edb/stdio_proxy-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "63f749ecc3c1e849ebe4a03abbcdb1db", "sha256": "9bf9cdaa4b68b0abf25eccf372de9e6497f91096390a5c53b219b394ffb1fbfd"}, "downloads": -1, "filename": "stdio_proxy-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "63f749ecc3c1e849ebe4a03abbcdb1db", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6286, "upload_time": "2019-12-31T14:32:49", "upload_time_iso_8601": "2019-12-31T14:32:49.517401Z", "url": "https://files.pythonhosted.org/packages/09/42/629491ff2ac35f4a1af3ea18c6444a020bcd63c85bdcd526d34d68b68238/stdio_proxy-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4beacf33752f132c8a5e1fee8001fd9", "sha256": "ddbb8bf6e56e3ed7cafd71bf8a9facd9582e8392ad89f7898182f020edd5e365"}, "downloads": -1, "filename": "stdio_proxy-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e4beacf33752f132c8a5e1fee8001fd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6286, "upload_time": "2019-12-31T14:32:50", "upload_time_iso_8601": "2019-12-31T14:32:50.980796Z", "url": "https://files.pythonhosted.org/packages/5c/f8/b48162d4e996810e37504f925f14121d38eb0e1ae5eb230c4f39a448b86d/stdio_proxy-0.1.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63f749ecc3c1e849ebe4a03abbcdb1db", "sha256": "9bf9cdaa4b68b0abf25eccf372de9e6497f91096390a5c53b219b394ffb1fbfd"}, "downloads": -1, "filename": "stdio_proxy-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "63f749ecc3c1e849ebe4a03abbcdb1db", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6286, "upload_time": "2019-12-31T14:32:49", "upload_time_iso_8601": "2019-12-31T14:32:49.517401Z", "url": "https://files.pythonhosted.org/packages/09/42/629491ff2ac35f4a1af3ea18c6444a020bcd63c85bdcd526d34d68b68238/stdio_proxy-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4beacf33752f132c8a5e1fee8001fd9", "sha256": "ddbb8bf6e56e3ed7cafd71bf8a9facd9582e8392ad89f7898182f020edd5e365"}, "downloads": -1, "filename": "stdio_proxy-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e4beacf33752f132c8a5e1fee8001fd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6286, "upload_time": "2019-12-31T14:32:50", "upload_time_iso_8601": "2019-12-31T14:32:50.980796Z", "url": "https://files.pythonhosted.org/packages/5c/f8/b48162d4e996810e37504f925f14121d38eb0e1ae5eb230c4f39a448b86d/stdio_proxy-0.1.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:02:15 2020"}