{"info": {"author": "Subigya Jyoti Panta", "author_email": "subigya@t2pco.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# Quicksemble\n[![Downloads](https://pepy.tech/badge/quicksemble)](https://pepy.tech/project/quicksemble)\n\n**Quicksemble** is a simple package to create a stacked ensemble for quick \nexperiments. It is developed in [T2P Co., Ltd.](https://www.t2pco.com/)  \n\n### Dependencies\n1. Numpy `pip install numpy`\n2. Scikit Learn `pip install scikit-learn`\n3. Xgboost `pip install xgboost`\n\n## Installation\n`pip install quicksemble`\n\n## Basic Usage\n```python\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom quicksemble.ensembler import Ensembler\n\n#\n# Define train and test dataset here\n#\n\nmodels = [\n    RandomForestClassifier(random_state=21),\n    XGBClassifier(random_state=21)\n]\n# Default meta classifier is LogisticRegression. Hence it is weighted voting.\nensemble = Ensembler(models)\nensemble.fit(X_train, y_train)\nensemble.predict(X_test)\n\n```\n\nTo change the default meta classifer:\n```python\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom quicksemble.ensembler import Ensembler\n\n#\n# Define train and test dataset here\n#\n\nmodels = [\n    RandomForestClassifier(random_state=21),\n    XGBClassifier(random_state=21)\n]\n\n# Use Neural Network as meta classifier\nensemble = Ensembler(models, meta_model=MLPClassifier())\nensemble.fit(X_train, y_train)\nensemble.predict(X_test)\n```\n\nBy default, Base models use \"hard\" voting, i.e., it outputs predictions of the \nbase models. We can switch it to \"soft\" voting, i.e., it outputs probabilities\nof each class by the base model.\n\nTo change voting style:\n```python\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom quicksemble.ensembler import Ensembler\n\n#\n# Define train and test dataset here\n#\n\nmodels = [\n    RandomForestClassifier(random_state=21),\n    XGBClassifier(random_state=21)\n]\n\n# Use soft voting. \nensemble = Ensembler(models, voting='soft')\nensemble.fit(X_train, y_train)\nensemble.predict(X_test)\n```\n\nTo view output of intermediary state i.e., output of base layers (layer 1)\nthat is going into meta layer (layer 2). Internally, it uses Pipelines from\nscikit-learn. So, feel free to read docs about pipelines.\n```python\nensemble = Ensembler(models, voting='soft')\nensemble.fit(X_train, y_train)\n\n# This line will output the values. Note that you need to fit it first.\nensemble.ensemble.named_steps['base_layer'].transform(X_train)\n```\n\nFor already saved models, use modelpaths. Note that it should be pickled.\n````python\nes = Ensembler(modelpaths=[\n            'rf.pkl',\n            'xg.pkl'\n    ])\nes.fit(X_train, y_train)\nes.predict(X_train)\n````\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SubigyaPanta/quicksemble", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "quicksemble", "package_url": "https://pypi.org/project/quicksemble/", "platform": "", "project_url": "https://pypi.org/project/quicksemble/", "project_urls": {"Bug Reports": "https://github.com/SubigyaPanta/quicksemble/issues", "Homepage": "https://github.com/SubigyaPanta/quicksemble", "Source": "https://github.com/SubigyaPanta/quicksemble"}, "release_url": "https://pypi.org/project/quicksemble/0.2.8/", "requires_dist": ["numpy", "scikit-learn", "xgboost"], "requires_python": "", "summary": "A package to build ensemble for quick experiments.", "version": "0.2.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Quicksemble</h1>\n<p><a href=\"https://pepy.tech/project/quicksemble\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1196dfa8bb3c60e552fc19f7d899037db68e2603/68747470733a2f2f706570792e746563682f62616467652f717569636b73656d626c65\"></a></p>\n<p><strong>Quicksemble</strong> is a simple package to create a stacked ensemble for quick\nexperiments. It is developed in <a href=\"https://www.t2pco.com/\" rel=\"nofollow\">T2P Co., Ltd.</a></p>\n<h3>Dependencies</h3>\n<ol>\n<li>Numpy <code>pip install numpy</code></li>\n<li>Scikit Learn <code>pip install scikit-learn</code></li>\n<li>Xgboost <code>pip install xgboost</code></li>\n</ol>\n<h2>Installation</h2>\n<p><code>pip install quicksemble</code></p>\n<h2>Basic Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sklearn.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">RandomForestClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xgboost</span> <span class=\"kn\">import</span> <span class=\"n\">XGBClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">quicksemble.ensembler</span> <span class=\"kn\">import</span> <span class=\"n\">Ensembler</span>\n\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Define train and test dataset here</span>\n<span class=\"c1\">#</span>\n\n<span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">RandomForestClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">21</span><span class=\"p\">),</span>\n    <span class=\"n\">XGBClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">21</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n<span class=\"c1\"># Default meta classifier is LogisticRegression. Hence it is weighted voting.</span>\n<span class=\"n\">ensemble</span> <span class=\"o\">=</span> <span class=\"n\">Ensembler</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">)</span>\n<span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n</pre>\n<p>To change the default meta classifer:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sklearn.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">RandomForestClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xgboost</span> <span class=\"kn\">import</span> <span class=\"n\">XGBClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">quicksemble.ensembler</span> <span class=\"kn\">import</span> <span class=\"n\">Ensembler</span>\n\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Define train and test dataset here</span>\n<span class=\"c1\">#</span>\n\n<span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">RandomForestClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">21</span><span class=\"p\">),</span>\n    <span class=\"n\">XGBClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">21</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># Use Neural Network as meta classifier</span>\n<span class=\"n\">ensemble</span> <span class=\"o\">=</span> <span class=\"n\">Ensembler</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">meta_model</span><span class=\"o\">=</span><span class=\"n\">MLPClassifier</span><span class=\"p\">())</span>\n<span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n</pre>\n<p>By default, Base models use \"hard\" voting, i.e., it outputs predictions of the\nbase models. We can switch it to \"soft\" voting, i.e., it outputs probabilities\nof each class by the base model.</p>\n<p>To change voting style:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sklearn.ensemble</span> <span class=\"kn\">import</span> <span class=\"n\">RandomForestClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">xgboost</span> <span class=\"kn\">import</span> <span class=\"n\">XGBClassifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">quicksemble.ensembler</span> <span class=\"kn\">import</span> <span class=\"n\">Ensembler</span>\n\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Define train and test dataset here</span>\n<span class=\"c1\">#</span>\n\n<span class=\"n\">models</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">RandomForestClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">21</span><span class=\"p\">),</span>\n    <span class=\"n\">XGBClassifier</span><span class=\"p\">(</span><span class=\"n\">random_state</span><span class=\"o\">=</span><span class=\"mi\">21</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"c1\"># Use soft voting. </span>\n<span class=\"n\">ensemble</span> <span class=\"o\">=</span> <span class=\"n\">Ensembler</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">voting</span><span class=\"o\">=</span><span class=\"s1\">'soft'</span><span class=\"p\">)</span>\n<span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n</pre>\n<p>To view output of intermediary state i.e., output of base layers (layer 1)\nthat is going into meta layer (layer 2). Internally, it uses Pipelines from\nscikit-learn. So, feel free to read docs about pipelines.</p>\n<pre><span class=\"n\">ensemble</span> <span class=\"o\">=</span> <span class=\"n\">Ensembler</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">,</span> <span class=\"n\">voting</span><span class=\"o\">=</span><span class=\"s1\">'soft'</span><span class=\"p\">)</span>\n<span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This line will output the values. Note that you need to fit it first.</span>\n<span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">ensemble</span><span class=\"o\">.</span><span class=\"n\">named_steps</span><span class=\"p\">[</span><span class=\"s1\">'base_layer'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">)</span>\n</pre>\n<p>For already saved models, use modelpaths. Note that it should be pickled.</p>\n<pre><span class=\"n\">es</span> <span class=\"o\">=</span> <span class=\"n\">Ensembler</span><span class=\"p\">(</span><span class=\"n\">modelpaths</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"s1\">'rf.pkl'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'xg.pkl'</span>\n    <span class=\"p\">])</span>\n<span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">es</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6561687, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "897763091f1ee6c24eedf85f0baeed0b", "sha256": "3d3314a86e1f1902a258d57753e85b4586866794cfb5c3d2bbf42aeaf8abfa11"}, "downloads": -1, "filename": "quicksemble-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "897763091f1ee6c24eedf85f0baeed0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4647, "upload_time": "2019-07-31T11:16:57", "upload_time_iso_8601": "2019-07-31T11:16:57.478417Z", "url": "https://files.pythonhosted.org/packages/3c/cb/33e065d4087cd7d1d68f3430374d06dbd8db6ae763a6ec154793b60e9c5c/quicksemble-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c09097a6dde59f47715c8a9dfb6bfd12", "sha256": "7262afb16023005aefeabc419f5e9b5947ad2da083909da31108d970182ef3bc"}, "downloads": -1, "filename": "quicksemble-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c09097a6dde59f47715c8a9dfb6bfd12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3844, "upload_time": "2019-07-31T11:16:59", "upload_time_iso_8601": "2019-07-31T11:16:59.242873Z", "url": "https://files.pythonhosted.org/packages/2a/e9/a16e10400492a75f1bfb0a34cfc61921784f49993b57506fa5975a0d78fc/quicksemble-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "cde1cc0756f0a497b3c9f2ffcdcfb9a2", "sha256": "a530a1a44d2f46bd479d29981b9e559533d8a7f2237392532fdf02015db630c2"}, "downloads": -1, "filename": "quicksemble-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cde1cc0756f0a497b3c9f2ffcdcfb9a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4863, "upload_time": "2019-08-01T04:55:46", "upload_time_iso_8601": "2019-08-01T04:55:46.205413Z", "url": "https://files.pythonhosted.org/packages/d0/47/1dd85bd087a26e43c21d0dc65cbc5a2e621d68f56382b1d3075e00540e3d/quicksemble-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "074833e193c2a3f8aca757f685efbb7f", "sha256": "da0c8b79459659bce28f0ed271805d3b344849b6809ad216c92d4bf67fb11548"}, "downloads": -1, "filename": "quicksemble-0.2.2.tar.gz", "has_sig": false, "md5_digest": "074833e193c2a3f8aca757f685efbb7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4130, "upload_time": "2019-08-01T04:55:49", "upload_time_iso_8601": "2019-08-01T04:55:49.116845Z", "url": "https://files.pythonhosted.org/packages/3b/b0/f4dfe1cbe0a524f99e3ed016fb5ba0055ff3606ace78151dd741961f1601/quicksemble-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "dac1258f292ec9b71f43364d8d20b0b3", "sha256": "0f179cedd93a0e8f62bfdd717b6677b7b502b415a33a3d32270c6758a945d949"}, "downloads": -1, "filename": "quicksemble-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "dac1258f292ec9b71f43364d8d20b0b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4861, "upload_time": "2019-08-01T05:21:26", "upload_time_iso_8601": "2019-08-01T05:21:26.689426Z", "url": "https://files.pythonhosted.org/packages/dd/5e/c6460abf25600df186222a90e93fdc80145054bf01edef276a1c10a6ed01/quicksemble-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ebb168226f6dc7693ed8397b8522f060", "sha256": "1810a9e3334fd5ca6ff5f554b55a19399b5e9d39cdf9d367ee2ed86f9cd91daf"}, "downloads": -1, "filename": "quicksemble-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ebb168226f6dc7693ed8397b8522f060", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4133, "upload_time": "2019-08-01T05:21:30", "upload_time_iso_8601": "2019-08-01T05:21:30.462553Z", "url": "https://files.pythonhosted.org/packages/07/a3/33719f7e64adf7fc24ab25ef3a1754c39bf7319e03e59e1647ed0d082f85/quicksemble-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "bb69a277f67465ec00e391274dbfdb54", "sha256": "0da1cff9c037cea098321f4b92a9a4b70514faa7bcc9b7ba94429e9d042b2995"}, "downloads": -1, "filename": "quicksemble-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bb69a277f67465ec00e391274dbfdb54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4932, "upload_time": "2019-10-07T04:47:53", "upload_time_iso_8601": "2019-10-07T04:47:53.547607Z", "url": "https://files.pythonhosted.org/packages/91/33/dbfd63bd171244af1e6255b13fd5456523254eeb6293dc02e3e5c8f282b5/quicksemble-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "444108657a10e1bec720077af12a1672", "sha256": "89ad9482bbd345124fdd64b4162ace993ce8792541cf59aaf90229f980f5f7a4"}, "downloads": -1, "filename": "quicksemble-0.2.4.tar.gz", "has_sig": false, "md5_digest": "444108657a10e1bec720077af12a1672", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4206, "upload_time": "2019-10-07T04:47:58", "upload_time_iso_8601": "2019-10-07T04:47:58.752198Z", "url": "https://files.pythonhosted.org/packages/04/a8/6826d14c1b15621c75e61b6de41e26ec97373ac8e1d2d27861b11622c115/quicksemble-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "6e159a6f58408611559432750c907ef5", "sha256": "79a124f337655faa9a477c169604e245109d79fed6b4d98659dd552819d7bf22"}, "downloads": -1, "filename": "quicksemble-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "6e159a6f58408611559432750c907ef5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5045, "upload_time": "2019-10-16T07:32:35", "upload_time_iso_8601": "2019-10-16T07:32:35.911104Z", "url": "https://files.pythonhosted.org/packages/db/3c/f3f1f606ca26fab3d01746f4dc0ee024701b71646ea3392ec7365fefccd0/quicksemble-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf55b01b140d9bc95d433447a02efa68", "sha256": "c15c2d61060555178c0b715424d63b231e15293019a7a0f3a0219933d02cf3c4"}, "downloads": -1, "filename": "quicksemble-0.2.5.tar.gz", "has_sig": false, "md5_digest": "cf55b01b140d9bc95d433447a02efa68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4310, "upload_time": "2019-10-16T07:32:38", "upload_time_iso_8601": "2019-10-16T07:32:38.038777Z", "url": "https://files.pythonhosted.org/packages/1f/51/b1e711a3b52a46f58643334050d06eeb0753fbc037f2ef75237a6a7eee27/quicksemble-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "f65d82e62d6ff6881330f6db00699484", "sha256": "7e5c36b65b659fb1a23ec2ac21c586a183ba8deee38add73bbd5794f569d5076"}, "downloads": -1, "filename": "quicksemble-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f65d82e62d6ff6881330f6db00699484", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5065, "upload_time": "2020-01-30T09:49:33", "upload_time_iso_8601": "2020-01-30T09:49:33.284407Z", "url": "https://files.pythonhosted.org/packages/5b/fe/695173cb66d16f68f449b5af01ad3114bf6c7d3cf99d74446a7a135b8405/quicksemble-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f8ffa98b3a8ce341401e3cb3508079f", "sha256": "e222aa43c218a7e4551b8312d7d31178758f00226d1d49fe9fcc09fa87155f54"}, "downloads": -1, "filename": "quicksemble-0.2.6.tar.gz", "has_sig": false, "md5_digest": "1f8ffa98b3a8ce341401e3cb3508079f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4337, "upload_time": "2020-01-30T09:49:35", "upload_time_iso_8601": "2020-01-30T09:49:35.016985Z", "url": "https://files.pythonhosted.org/packages/50/91/5d18614aa208d39247adfa0283fc90e1094d34a4a42afde909369cbae9ef/quicksemble-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "cdabea8b999232dea54decf82ef7d49f", "sha256": "8ac7a16fcdd5c75deb07e42e52fc40ce9ce2633e595eadf41f021e4cf9173c09"}, "downloads": -1, "filename": "quicksemble-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "cdabea8b999232dea54decf82ef7d49f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5093, "upload_time": "2020-01-30T10:15:07", "upload_time_iso_8601": "2020-01-30T10:15:07.709637Z", "url": "https://files.pythonhosted.org/packages/b6/9d/fec49913d6cdce1ad7262b04549561c2bd7784a39251d60de494d8438403/quicksemble-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12e804825392a290ad295f6327d11c67", "sha256": "b845be7131e51a139df98167c7c6e01addc3cead4a379d4ddec3a461e2094238"}, "downloads": -1, "filename": "quicksemble-0.2.7.tar.gz", "has_sig": false, "md5_digest": "12e804825392a290ad295f6327d11c67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4366, "upload_time": "2020-01-30T10:15:09", "upload_time_iso_8601": "2020-01-30T10:15:09.467169Z", "url": "https://files.pythonhosted.org/packages/4a/0d/537b55820e3b252232e95dc8820f9308617c77a4a57b9e5702a44328d4e9/quicksemble-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "1a4bda9779979796d8176539a36b1835", "sha256": "0cbef814ce65aabf319ba1dcff949057d44fa9fe2c0f1689133318215214d3ff"}, "downloads": -1, "filename": "quicksemble-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "1a4bda9779979796d8176539a36b1835", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5138, "upload_time": "2020-02-03T09:29:17", "upload_time_iso_8601": "2020-02-03T09:29:17.645095Z", "url": "https://files.pythonhosted.org/packages/fc/93/b209bd48c4ff5e6ee705e8f4ce05131d48f0d1ab06d7038bc970389fdd4d/quicksemble-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91113e0ea7edb68e69ac362593c6f849", "sha256": "951ed8383370cf8ef031d7e1814ebb1ea2da7331952000d44c9e6d5b94d586ea"}, "downloads": -1, "filename": "quicksemble-0.2.8.tar.gz", "has_sig": false, "md5_digest": "91113e0ea7edb68e69ac362593c6f849", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4413, "upload_time": "2020-02-03T09:29:19", "upload_time_iso_8601": "2020-02-03T09:29:19.393566Z", "url": "https://files.pythonhosted.org/packages/6b/6c/e48bd6c563fe206058c35ddd86b4b2ce2b508ce99a37ba0099d01a627e17/quicksemble-0.2.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a4bda9779979796d8176539a36b1835", "sha256": "0cbef814ce65aabf319ba1dcff949057d44fa9fe2c0f1689133318215214d3ff"}, "downloads": -1, "filename": "quicksemble-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "1a4bda9779979796d8176539a36b1835", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5138, "upload_time": "2020-02-03T09:29:17", "upload_time_iso_8601": "2020-02-03T09:29:17.645095Z", "url": "https://files.pythonhosted.org/packages/fc/93/b209bd48c4ff5e6ee705e8f4ce05131d48f0d1ab06d7038bc970389fdd4d/quicksemble-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "91113e0ea7edb68e69ac362593c6f849", "sha256": "951ed8383370cf8ef031d7e1814ebb1ea2da7331952000d44c9e6d5b94d586ea"}, "downloads": -1, "filename": "quicksemble-0.2.8.tar.gz", "has_sig": false, "md5_digest": "91113e0ea7edb68e69ac362593c6f849", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4413, "upload_time": "2020-02-03T09:29:19", "upload_time_iso_8601": "2020-02-03T09:29:19.393566Z", "url": "https://files.pythonhosted.org/packages/6b/6c/e48bd6c563fe206058c35ddd86b4b2ce2b508ce99a37ba0099d01a627e17/quicksemble-0.2.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:28 2020"}