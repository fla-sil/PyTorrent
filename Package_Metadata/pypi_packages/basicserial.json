{"info": {"author": "Jason Simeone", "author_email": "jay@classless.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "***********\nbasicserial\n***********\n\n.. image:: https://img.shields.io/pypi/v/basicserial.svg\n   :target: https://pypi.python.org/pypi/basicserial\n.. image:: https://img.shields.io/pypi/l/basicserial.svg\n   :target: https://pypi.python.org/pypi/basicserial\n.. image:: https://github.com/jayclassless/basicserial/workflows/Test/badge.svg\n   :target: https://github.com/jayclassless/basicserial/actions\n\n.. contents:: Contents\n\n\nOverview\n========\nDoes this look familiar?\n\n::\n\n    >>> import json\n    >>> from datetime import date\n    >>> MY_DATA = {'foo': 123, 'bar': date(2018, 5, 22)}\n    >>> json.dumps(MY_DATA)\n    Traceback (most recent call last):\n        ...\n    TypeError: datetime.date(2018, 5, 22) is not JSON serializable\n\nIt's one thing when your serialization tools don't know how to handle your\ncustom classes, but it's annoying when they don't handle the built-in and/or\ncommon data types. Thus, ``basicserial`` was born.\n\nThis package is a thin wrapper around the common serialization tools that can\ndo the following for you when working with JSON, YAML, and TOML:\n\n* Automatically serializes the following types to common-sense representations:\n\n  .. list-table::\n     :header-rows: 1\n\n     * - Type\n       - JSON\n       - YAML\n       - TOML\n     * - `set <https://docs.python.org/3/library/stdtypes.html#set>`_\n       - array\n       - sequence\n       - array\n     * - `frozenset <https://docs.python.org/3/library/stdtypes.html#frozenset>`_\n       - array\n       - sequence\n       - array\n     * - `Decimal <https://docs.python.org/3/library/decimal.html>`_\n       - number\n       - float\n       - float\n     * - `Fraction <https://docs.python.org/3/library/fractions.html>`_\n       - string\n       - string\n       - string\n     * - `date <https://docs.python.org/3/library/datetime.html#date-objects>`_\n       - string (ISO 8601)\n       - timestamp\n       - string (ISO 8601)\n     * - `time <https://docs.python.org/3/library/datetime.html#time-objects>`_\n       - string (ISO 8601)\n       - string (ISO 8601)\n       - string (ISO 8601)\n     * - `datetime <https://docs.python.org/3/library/datetime.html#datetime-objects>`_\n       - string (ISO 8601)\n       - timestamp\n       - string (ISO 8601)\n     * - `complex <https://docs.python.org/3/library/functions.html#complex>`_\n       - string\n       - string\n       - string\n     * - `OrderedDict <https://docs.python.org/3/library/collections.html#collections.OrderedDict>`_\n       - object\n       - map\n       - key/value\n     * - `defaultdict <https://docs.python.org/3/library/collections.html#defaultdict-objects>`_\n       - object\n       - map\n       - key/value\n     * - `namedtuple <https://docs.python.org/3/library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields>`_\n       - object\n       - map\n       - key/value\n     * - `UserDict <https://docs.python.org/3/library/collections.html#userdict-objects>`_\n       - object\n       - map\n       - key/value\n     * - `UserList <https://docs.python.org/3/library/collections.html#userlist-objects>`_\n       - array\n       - sequence\n       - array\n     * - `UserString <https://docs.python.org/3/library/collections.html#userstring-objects>`_\n       - string\n       - string\n       - string\n     * - `UUID <https://docs.python.org/3/library/uuid.html#uuid.UUID>`_\n       - string\n       - string\n       - string\n\n* Can serialize `Enum <https://docs.python.org/3/library/enum.html>`_ members\n  appropriately based on their type.\n\n* Can automatically deserialize dates, times, and datetimes into the native\n  Python objects.\n\n* Provides a simple flag for generating \"pretty\" strings.\n\n\nUsage\n=====\nTo use this package, install it from PyPI (``pip install basicserial``). Then,\nmake sure you install the serialization package you'd like ``basicserial`` to\nuse:\n\n* For YAML, it supports `PyYAML <https://pypi.org/project/PyYAML>`_ and\n  `ruamel.yaml <https://pypi.org/project/ruamel.yaml>`_.\n* For TOML, it supports `toml <https://pypi.org/project/toml>`_, `pytoml\n  <https://pypi.org/project/pytoml>`_, `qtoml\n  <https://pypi.org/project/qtoml>`_, and `tomlkit\n  <https://pypi.org/project/tomlkit>`_.\n* For JSON, it supports Python's built-in `json\n  <https://docs.python.org/3/library/json.html>`_ module, `simplejson\n  <https://pypi.org/project/simplejson>`_, `orjson\n  <https://pypi.org/project/orjson>`_, `rapidjson\n  <https://pypi.org/project/python-rapidjson>`_, `ujson\n  <https://pypi.org/project/ujson>`_, and `hyperjson\n  <https://pypi.org/project/hyperjson>`_.\n\n``basicserial`` will automatically find a package to use, but if you want to\nuse a specific one, you can specify its name via the ``pkg`` argument to the\nfunctions.\n\nJSON::\n\n    >>> print(basicserial.to_json(MY_DATA))\n    {\"foo\": 123, \"bar\": \"2018-05-22\"}\n\n    >>> print(basicserial.to_json(MY_DATA, pretty=True))\n    {\n      \"foo\": 123,\n      \"bar\": \"2018-05-22\"\n    }\n\n    >>> basicserial.from_json(basicserial.to_json(MY_DATA))\n    {u'foo': 123, u'bar': datetime.date(2018, 5, 22)}\n\n    >>> basicserial.from_json(basicserial.to_json(MY_DATA), native_datetimes=False)\n    {u'foo': 123, u'bar': u'2018-05-22'}\n\n\nYAML::\n\n    >>> print(basicserial.to_yaml(MY_DATA))\n    {bar: 2018-05-22, foo: 123}\n\n    >>> print(basicserial.to_yaml(MY_DATA, pretty=True))\n    bar: 2018-05-22\n    foo: 123\n\n    >>> basicserial.from_yaml(basicserial.to_yaml(MY_DATA))\n    {u'foo': 123, u'bar': datetime.date(2018, 5, 22)}\n\n    >>> basicserial.from_yaml(basicserial.to_yaml(MY_DATA), native_datetimes=False)\n    {'foo': 123, 'bar': u'2018-05-22'}\n\n\nTOML::\n\n    >>> print(basicserial.to_toml(MY_DATA))\n    foo = 123\n    bar = \"2018-05-22\"\n\n    >>> print(basicserial.to_toml(MY_DATA, pretty=True))\n    foo = 123\n    bar = \"2018-05-22\"\n\n    >>> basicserial.from_toml(basicserial.to_toml(MY_DATA))\n    {u'foo': 123, u'bar': datetime.date(2018, 5, 22)}\n\n    >>> basicserial.from_toml(basicserial.to_toml(MY_DATA), native_datetimes=False)\n    {u'foo': 123, u'bar': u'2018-05-22'}\n\n\nLicense\n=======\nThis project is released under the terms of the `MIT License`_.\n\n.. _MIT License: https://opensource.org/licenses/MIT\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jayclassless/basicserial", "keywords": "serialize serialization json yaml toml", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "basicserial", "package_url": "https://pypi.org/project/basicserial/", "platform": "", "project_url": "https://pypi.org/project/basicserial/", "project_urls": {"Homepage": "https://github.com/jayclassless/basicserial"}, "release_url": "https://pypi.org/project/basicserial/1.1.0/", "requires_dist": ["iso8601"], "requires_python": "", "summary": "A convenience wrapper around serialization libraries to handle common tasks.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/basicserial\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/basicserial.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2d6be6f273a831c035cb02ad2d80b69a3eae5d4f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f626173696373657269616c2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/basicserial\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/basicserial.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81aaa5a7bc88ca19ad391d3fe1c787441258ebbd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f626173696373657269616c2e737667\"></a>\n<a href=\"https://github.com/jayclassless/basicserial/actions\" rel=\"nofollow\"><img alt=\"https://github.com/jayclassless/basicserial/workflows/Test/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71ac5194900f2cf235c220b3f951ddd4d653cc68/68747470733a2f2f6769746875622e636f6d2f6a6179636c6173736c6573732f626173696373657269616c2f776f726b666c6f77732f546573742f62616467652e737667\"></a>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#overview\" id=\"id1\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#usage\" id=\"id2\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#license\" id=\"id3\" rel=\"nofollow\">License</a></li>\n</ul>\n</div>\n<div id=\"overview\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Overview</a></h2>\n<p>Does this look familiar?</p>\n<pre>&gt;&gt;&gt; import json\n&gt;&gt;&gt; from datetime import date\n&gt;&gt;&gt; MY_DATA = {'foo': 123, 'bar': date(2018, 5, 22)}\n&gt;&gt;&gt; json.dumps(MY_DATA)\nTraceback (most recent call last):\n    ...\nTypeError: datetime.date(2018, 5, 22) is not JSON serializable\n</pre>\n<p>It\u2019s one thing when your serialization tools don\u2019t know how to handle your\ncustom classes, but it\u2019s annoying when they don\u2019t handle the built-in and/or\ncommon data types. Thus, <tt>basicserial</tt> was born.</p>\n<p>This package is a thin wrapper around the common serialization tools that can\ndo the following for you when working with JSON, YAML, and TOML:</p>\n<ul>\n<li><p>Automatically serializes the following types to common-sense representations:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Type</th>\n<th>JSON</th>\n<th>YAML</th>\n<th>TOML</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://docs.python.org/3/library/stdtypes.html#set\" rel=\"nofollow\">set</a></td>\n<td>array</td>\n<td>sequence</td>\n<td>array</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/stdtypes.html#frozenset\" rel=\"nofollow\">frozenset</a></td>\n<td>array</td>\n<td>sequence</td>\n<td>array</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/decimal.html\" rel=\"nofollow\">Decimal</a></td>\n<td>number</td>\n<td>float</td>\n<td>float</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/fractions.html\" rel=\"nofollow\">Fraction</a></td>\n<td>string</td>\n<td>string</td>\n<td>string</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/datetime.html#date-objects\" rel=\"nofollow\">date</a></td>\n<td>string (ISO 8601)</td>\n<td>timestamp</td>\n<td>string (ISO 8601)</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/datetime.html#time-objects\" rel=\"nofollow\">time</a></td>\n<td>string (ISO 8601)</td>\n<td>string (ISO 8601)</td>\n<td>string (ISO 8601)</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/datetime.html#datetime-objects\" rel=\"nofollow\">datetime</a></td>\n<td>string (ISO 8601)</td>\n<td>timestamp</td>\n<td>string (ISO 8601)</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/functions.html#complex\" rel=\"nofollow\">complex</a></td>\n<td>string</td>\n<td>string</td>\n<td>string</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/collections.html#collections.OrderedDict\" rel=\"nofollow\">OrderedDict</a></td>\n<td>object</td>\n<td>map</td>\n<td>key/value</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/collections.html#defaultdict-objects\" rel=\"nofollow\">defaultdict</a></td>\n<td>object</td>\n<td>map</td>\n<td>key/value</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/collections.html#namedtuple-factory-function-for-tuples-with-named-fields\" rel=\"nofollow\">namedtuple</a></td>\n<td>object</td>\n<td>map</td>\n<td>key/value</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/collections.html#userdict-objects\" rel=\"nofollow\">UserDict</a></td>\n<td>object</td>\n<td>map</td>\n<td>key/value</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/collections.html#userlist-objects\" rel=\"nofollow\">UserList</a></td>\n<td>array</td>\n<td>sequence</td>\n<td>array</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/collections.html#userstring-objects\" rel=\"nofollow\">UserString</a></td>\n<td>string</td>\n<td>string</td>\n<td>string</td>\n</tr>\n<tr><td><a href=\"https://docs.python.org/3/library/uuid.html#uuid.UUID\" rel=\"nofollow\">UUID</a></td>\n<td>string</td>\n<td>string</td>\n<td>string</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><p>Can serialize <a href=\"https://docs.python.org/3/library/enum.html\" rel=\"nofollow\">Enum</a> members\nappropriately based on their type.</p>\n</li>\n<li><p>Can automatically deserialize dates, times, and datetimes into the native\nPython objects.</p>\n</li>\n<li><p>Provides a simple flag for generating \u201cpretty\u201d strings.</p>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Usage</a></h2>\n<p>To use this package, install it from PyPI (<tt>pip install basicserial</tt>). Then,\nmake sure you install the serialization package you\u2019d like <tt>basicserial</tt> to\nuse:</p>\n<ul>\n<li>For YAML, it supports <a href=\"https://pypi.org/project/PyYAML\" rel=\"nofollow\">PyYAML</a> and\n<a href=\"https://pypi.org/project/ruamel.yaml\" rel=\"nofollow\">ruamel.yaml</a>.</li>\n<li>For TOML, it supports <a href=\"https://pypi.org/project/toml\" rel=\"nofollow\">toml</a>, <a href=\"https://pypi.org/project/pytoml\" rel=\"nofollow\">pytoml</a>, <a href=\"https://pypi.org/project/qtoml\" rel=\"nofollow\">qtoml</a>, and <a href=\"https://pypi.org/project/tomlkit\" rel=\"nofollow\">tomlkit</a>.</li>\n<li>For JSON, it supports Python\u2019s built-in <a href=\"https://docs.python.org/3/library/json.html\" rel=\"nofollow\">json</a> module, <a href=\"https://pypi.org/project/simplejson\" rel=\"nofollow\">simplejson</a>, <a href=\"https://pypi.org/project/orjson\" rel=\"nofollow\">orjson</a>, <a href=\"https://pypi.org/project/python-rapidjson\" rel=\"nofollow\">rapidjson</a>, <a href=\"https://pypi.org/project/ujson\" rel=\"nofollow\">ujson</a>, and <a href=\"https://pypi.org/project/hyperjson\" rel=\"nofollow\">hyperjson</a>.</li>\n</ul>\n<p><tt>basicserial</tt> will automatically find a package to use, but if you want to\nuse a specific one, you can specify its name via the <tt>pkg</tt> argument to the\nfunctions.</p>\n<p>JSON:</p>\n<pre>&gt;&gt;&gt; print(basicserial.to_json(MY_DATA))\n{\"foo\": 123, \"bar\": \"2018-05-22\"}\n\n&gt;&gt;&gt; print(basicserial.to_json(MY_DATA, pretty=True))\n{\n  \"foo\": 123,\n  \"bar\": \"2018-05-22\"\n}\n\n&gt;&gt;&gt; basicserial.from_json(basicserial.to_json(MY_DATA))\n{u'foo': 123, u'bar': datetime.date(2018, 5, 22)}\n\n&gt;&gt;&gt; basicserial.from_json(basicserial.to_json(MY_DATA), native_datetimes=False)\n{u'foo': 123, u'bar': u'2018-05-22'}\n</pre>\n<p>YAML:</p>\n<pre>&gt;&gt;&gt; print(basicserial.to_yaml(MY_DATA))\n{bar: 2018-05-22, foo: 123}\n\n&gt;&gt;&gt; print(basicserial.to_yaml(MY_DATA, pretty=True))\nbar: 2018-05-22\nfoo: 123\n\n&gt;&gt;&gt; basicserial.from_yaml(basicserial.to_yaml(MY_DATA))\n{u'foo': 123, u'bar': datetime.date(2018, 5, 22)}\n\n&gt;&gt;&gt; basicserial.from_yaml(basicserial.to_yaml(MY_DATA), native_datetimes=False)\n{'foo': 123, 'bar': u'2018-05-22'}\n</pre>\n<p>TOML:</p>\n<pre>&gt;&gt;&gt; print(basicserial.to_toml(MY_DATA))\nfoo = 123\nbar = \"2018-05-22\"\n\n&gt;&gt;&gt; print(basicserial.to_toml(MY_DATA, pretty=True))\nfoo = 123\nbar = \"2018-05-22\"\n\n&gt;&gt;&gt; basicserial.from_toml(basicserial.to_toml(MY_DATA))\n{u'foo': 123, u'bar': datetime.date(2018, 5, 22)}\n\n&gt;&gt;&gt; basicserial.from_toml(basicserial.to_toml(MY_DATA), native_datetimes=False)\n{u'foo': 123, u'bar': u'2018-05-22'}\n</pre>\n</div>\n<div id=\"license\">\n<h2><a href=\"#id3\" rel=\"nofollow\">License</a></h2>\n<p>This project is released under the terms of the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6816740, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cbca9030d81048e225b287386cf135cc", "sha256": "e235d158f32c44afae65eaebf0f03e106bc4ea942ac12322778ce095c2185aec"}, "downloads": -1, "filename": "basicserial-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbca9030d81048e225b287386cf135cc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5590, "upload_time": "2018-06-09T16:15:55", "upload_time_iso_8601": "2018-06-09T16:15:55.470981Z", "url": "https://files.pythonhosted.org/packages/80/6f/0da8ffa2fc03f122539cc42581e1736c98fb5021d7e362e7911b77e27494/basicserial-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1559789cfcb032b283185a59753eb21f", "sha256": "1cda10e3defb4a34f37525edbdd48d292d8b83f93a3a5ddd0d44b790da9023b4"}, "downloads": -1, "filename": "basicserial-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1559789cfcb032b283185a59753eb21f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6553, "upload_time": "2018-06-09T16:15:56", "upload_time_iso_8601": "2018-06-09T16:15:56.739010Z", "url": "https://files.pythonhosted.org/packages/d8/b8/0d6c46e3262fc51f2137beffc4d52fcf62a74b3c3c083c9b67e26cda5861/basicserial-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2d43436b8c3bd3f2ec9fb74acaece701", "sha256": "b669eb7cbac044e0db72f2732e9bdcb3d781d3dff426a328bad6ce8be332eb07"}, "downloads": -1, "filename": "basicserial-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2d43436b8c3bd3f2ec9fb74acaece701", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6428, "upload_time": "2019-04-27T22:20:56", "upload_time_iso_8601": "2019-04-27T22:20:56.562957Z", "url": "https://files.pythonhosted.org/packages/6d/56/fdc75a48d157ee6147e6adb745cdaa1939c68a01a8d0e78c308a74bc2eed/basicserial-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d2426ed36e1451db3f1c0dd407298bc", "sha256": "6a3d8e61423eec78408da2d79f835017f799ff6d60df74f7aee17670573fbb5d"}, "downloads": -1, "filename": "basicserial-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5d2426ed36e1451db3f1c0dd407298bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6624, "upload_time": "2019-04-27T22:20:59", "upload_time_iso_8601": "2019-04-27T22:20:59.061731Z", "url": "https://files.pythonhosted.org/packages/77/b6/21bb8ece6f64c7a166256cc98fa91fda4ea9b5f741b0f475f20df0763472/basicserial-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "6b24e63cde82d6be68a1c0ab262feed0", "sha256": "bfc3d10412df21736c6aa3643cfe2dbb21da26df7ac90131c3daafce3cac225c"}, "downloads": -1, "filename": "basicserial-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6b24e63cde82d6be68a1c0ab262feed0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6384, "upload_time": "2020-01-11T01:35:25", "upload_time_iso_8601": "2020-01-11T01:35:25.010965Z", "url": "https://files.pythonhosted.org/packages/66/84/d59ce20ee6922c6cdfd735be0fa48bc0b1666123983dd5d66da2c5c33850/basicserial-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a9e435b891e3394498c0bf333f04a38", "sha256": "d881049de6591c9c9e13e13aee8cb0eab90aaff5753190325144d331ed2d3012"}, "downloads": -1, "filename": "basicserial-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7a9e435b891e3394498c0bf333f04a38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6607, "upload_time": "2020-01-11T01:35:27", "upload_time_iso_8601": "2020-01-11T01:35:27.240927Z", "url": "https://files.pythonhosted.org/packages/23/5b/fbe12f844829884ffe01288e1e00aa6ae2f8ea876136f3288569721c7a1f/basicserial-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6096b9a8013c172f8ba8431f31485ae6", "sha256": "ec521bad99cb0bbad0754f6186b42daf5f1a7e6a0039bf8b53c75e960a424e12"}, "downloads": -1, "filename": "basicserial-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6096b9a8013c172f8ba8431f31485ae6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9329, "upload_time": "2020-03-15T19:03:05", "upload_time_iso_8601": "2020-03-15T19:03:05.097287Z", "url": "https://files.pythonhosted.org/packages/6e/52/e619e85211cad107dd002f0060ae158c48411c272f99acaef611a6678e86/basicserial-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a12732974c9c08f57a88abc542d3689b", "sha256": "4aaac126837597cfc0bc57b497b65f4e8e87433002177279526f4cbcd6993c2d"}, "downloads": -1, "filename": "basicserial-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a12732974c9c08f57a88abc542d3689b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9820, "upload_time": "2020-03-15T19:03:06", "upload_time_iso_8601": "2020-03-15T19:03:06.658779Z", "url": "https://files.pythonhosted.org/packages/27/10/7af31bee9f6143cb20f3aeb2e511800b4c073b94d9a823d3edb2c5354ded/basicserial-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6096b9a8013c172f8ba8431f31485ae6", "sha256": "ec521bad99cb0bbad0754f6186b42daf5f1a7e6a0039bf8b53c75e960a424e12"}, "downloads": -1, "filename": "basicserial-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6096b9a8013c172f8ba8431f31485ae6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9329, "upload_time": "2020-03-15T19:03:05", "upload_time_iso_8601": "2020-03-15T19:03:05.097287Z", "url": "https://files.pythonhosted.org/packages/6e/52/e619e85211cad107dd002f0060ae158c48411c272f99acaef611a6678e86/basicserial-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a12732974c9c08f57a88abc542d3689b", "sha256": "4aaac126837597cfc0bc57b497b65f4e8e87433002177279526f4cbcd6993c2d"}, "downloads": -1, "filename": "basicserial-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a12732974c9c08f57a88abc542d3689b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9820, "upload_time": "2020-03-15T19:03:06", "upload_time_iso_8601": "2020-03-15T19:03:06.658779Z", "url": "https://files.pythonhosted.org/packages/27/10/7af31bee9f6143cb20f3aeb2e511800b4c073b94d9a823d3edb2c5354ded/basicserial-1.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:47 2020"}