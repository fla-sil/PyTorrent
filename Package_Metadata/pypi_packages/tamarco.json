{"info": {"author": "System73 Engineering Team", "author_email": "opensource@system73.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.6"], "description": "# Tamarco\n\n[![Build Status](https://travis-ci.com/System73/tamarco.svg?branch=master)](https://travis-ci.com/System73/tamarco)\n[![Build Documentation](https://readthedocs.org/projects/tamarco/badge/?version=latest)](https://tamarco.readthedocs.io/en/latest/)\n[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=System73_tamarco&metric=coverage)](https://sonarcloud.io/dashboard?id=System73_tamarco)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=System73_tamarco&metric=alert_status)](https://sonarcloud.io/dashboard?id=System73_tamarco)\n\nMicroservices framework designed for asyncio and Python.\n\n## Features\n\n* Lifecycle management.\n* Standardized settings via etcd.\n* Automatic logging configuration. Support for sending logs to an ELK stack.\n* Application metrics via Prometheus. \n* Designed for asyncio.\n* Messaging patterns. The framework comes with support for AMQP and Kafka via external resources. The AMQP resource has \nimplemented publish/subscribe, request/response and push/pull patterns. \n* Custom encoders and decoders. \n* Pluging oriented architecture. Anyone can create a new resource to add new functionality. External resources are integrated \ninto the framework transparently for the user.\n* Graceful shutdown.\n\n## Resources\n\nThe framework allows to write external resources and integrate them in the lifecycle of a microservice easily. List with\n the available resources:\n\n* Metrics\n* Registry\n* Status\n* Profiler\n* Memory analizer\n* HTTP\n* [Kafka][kafka_resource]\n* [AMQP][amqp_resource]\n* Postgres (not released yet)\n* Influxdb (not released yet)\n* Redis (not released yet)\n* Websocket (not released yet)\n\n[kafka_resource]: https://github.com/System73/tamarco-kafka\n[amqp_resource]: https://github.com/System73/tamarco-amqp\n\nLet us know if you have written a resource.\n\n## Documentation\n\nThe documentation is available [here][readthedocs_latest].\n\n[readthedocs_latest]: https://tamarco.readthedocs.io/en/latest/\n\n## Examples\n\nThere are several examples in the `examples` folder.\n\nTo run them, install tamarco, launch the docker-compose (not necessary for all the examples) and run it.\n\n```python3\npip install tamarco\ndocker-compose up -d\npython examples/http_resource/microservice.py\n```\n\n## Requirements\n\nSupport for Python >= 3.6.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/System73/tamarco", "keywords": "tamarco", "license": "", "maintainer": "", "maintainer_email": "", "name": "tamarco", "package_url": "https://pypi.org/project/tamarco/", "platform": "", "project_url": "https://pypi.org/project/tamarco/", "project_urls": {"Homepage": "https://github.com/System73/tamarco"}, "release_url": "https://pypi.org/project/tamarco/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Microservices framework designed for asyncio and Python", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Tamarco</h1>\n<p><a href=\"https://travis-ci.com/System73/tamarco\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7470080f1616878671c57954a19fd0ce197963dc/68747470733a2f2f7472617669732d63692e636f6d2f53797374656d37332f74616d6172636f2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://tamarco.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"Build Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/550dafa074fb235c7b25354b5e7462d3ea95af97/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f74616d6172636f2f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=System73_tamarco\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66d284bd56c7c68136fed460555884f81a62f261/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d53797374656d37335f74616d6172636f266d65747269633d636f766572616765\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=System73_tamarco\" rel=\"nofollow\"><img alt=\"Quality Gate Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1eb51451c410f580dac0aa37378b769df8050caa/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d53797374656d37335f74616d6172636f266d65747269633d616c6572745f737461747573\"></a></p>\n<p>Microservices framework designed for asyncio and Python.</p>\n<h2>Features</h2>\n<ul>\n<li>Lifecycle management.</li>\n<li>Standardized settings via etcd.</li>\n<li>Automatic logging configuration. Support for sending logs to an ELK stack.</li>\n<li>Application metrics via Prometheus.</li>\n<li>Designed for asyncio.</li>\n<li>Messaging patterns. The framework comes with support for AMQP and Kafka via external resources. The AMQP resource has\nimplemented publish/subscribe, request/response and push/pull patterns.</li>\n<li>Custom encoders and decoders.</li>\n<li>Pluging oriented architecture. Anyone can create a new resource to add new functionality. External resources are integrated\ninto the framework transparently for the user.</li>\n<li>Graceful shutdown.</li>\n</ul>\n<h2>Resources</h2>\n<p>The framework allows to write external resources and integrate them in the lifecycle of a microservice easily. List with\nthe available resources:</p>\n<ul>\n<li>Metrics</li>\n<li>Registry</li>\n<li>Status</li>\n<li>Profiler</li>\n<li>Memory analizer</li>\n<li>HTTP</li>\n<li><a href=\"https://github.com/System73/tamarco-kafka\" rel=\"nofollow\">Kafka</a></li>\n<li><a href=\"https://github.com/System73/tamarco-amqp\" rel=\"nofollow\">AMQP</a></li>\n<li>Postgres (not released yet)</li>\n<li>Influxdb (not released yet)</li>\n<li>Redis (not released yet)</li>\n<li>Websocket (not released yet)</li>\n</ul>\n<p>Let us know if you have written a resource.</p>\n<h2>Documentation</h2>\n<p>The documentation is available <a href=\"https://tamarco.readthedocs.io/en/latest/\" rel=\"nofollow\">here</a>.</p>\n<h2>Examples</h2>\n<p>There are several examples in the <code>examples</code> folder.</p>\n<p>To run them, install tamarco, launch the docker-compose (not necessary for all the examples) and run it.</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">tamarco</span>\n<span class=\"n\">docker</span><span class=\"o\">-</span><span class=\"n\">compose</span> <span class=\"n\">up</span> <span class=\"o\">-</span><span class=\"n\">d</span>\n<span class=\"n\">python</span> <span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">http_resource</span><span class=\"o\">/</span><span class=\"n\">microservice</span><span class=\"o\">.</span><span class=\"n\">py</span>\n</pre>\n<h2>Requirements</h2>\n<p>Support for Python &gt;= 3.6.</p>\n\n          </div>"}, "last_serial": 6977248, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f3c4196a2840e0b644a50e5d7b25302f", "sha256": "c9ce48750facbd1303eb7b9e78055d268a1562f961ac3ebbb6855d0b22e0f418"}, "downloads": -1, "filename": "tamarco-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f3c4196a2840e0b644a50e5d7b25302f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 642, "upload_time": "2019-05-28T14:16:47", "upload_time_iso_8601": "2019-05-28T14:16:47.036520Z", "url": "https://files.pythonhosted.org/packages/d5/09/70d60ed2909aa7dc3e62a4aa68e580ca8fa6309f25e75c83f10cd3b21a4a/tamarco-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "a5fd37a35ac6fe9e2d782cf08415581c", "sha256": "fc4d85223a9a8c34e46d63afdeb780c8cb83c7a43494e1336b25b71622006b8f"}, "downloads": -1, "filename": "tamarco-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a5fd37a35ac6fe9e2d782cf08415581c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92216, "upload_time": "2019-09-25T09:00:44", "upload_time_iso_8601": "2019-09-25T09:00:44.454781Z", "url": "https://files.pythonhosted.org/packages/cd/fd/9ead505cd4ae9472d136dc81a94fb148587ddc7f3f0671d846937bbb8bbf/tamarco-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fbc68715c4a7cbc694d8237ac7967403", "sha256": "46a471cc54507bb133a37916daaebb47cb0fabf4bfac02c37dcf45d0d813da0f"}, "downloads": -1, "filename": "tamarco-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fbc68715c4a7cbc694d8237ac7967403", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92323, "upload_time": "2020-04-08T12:05:38", "upload_time_iso_8601": "2020-04-08T12:05:38.347651Z", "url": "https://files.pythonhosted.org/packages/91/c2/bb219b7c4e51eba05a9ebccb4481d63e3aec8210d5af733618ec602d0f3a/tamarco-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbc68715c4a7cbc694d8237ac7967403", "sha256": "46a471cc54507bb133a37916daaebb47cb0fabf4bfac02c37dcf45d0d813da0f"}, "downloads": -1, "filename": "tamarco-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fbc68715c4a7cbc694d8237ac7967403", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92323, "upload_time": "2020-04-08T12:05:38", "upload_time_iso_8601": "2020-04-08T12:05:38.347651Z", "url": "https://files.pythonhosted.org/packages/91/c2/bb219b7c4e51eba05a9ebccb4481d63e3aec8210d5af733618ec602d0f3a/tamarco-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:13 2020"}