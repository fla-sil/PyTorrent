{"info": {"author": "Chang Yu-heng", "author_email": "mr.changyuheng@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "MQTTHandler\n===========\n\nA Python logging handler using MQTT protocol.\n\nInstallation\n------------\n\n.. code:: sh\n\n    pip install mqtthandler\n\nExample usage\n-------------\n\n.. code:: py\n\n    import mqtthandler\n    import logging\n    import time\n\n    mqtthdlr = mqtthandler.MQTTHandler('server.mqtt.com', 'topic/test')\n    mqtthdlr.setLevel(logging.INFO)\n\n    logger = logging.getLogger()\n    logger.addHandler(mqtthdlr)\n    logger.setLevel(logging.INFO)\n\n    logging.info('test')  # Automatically connecting to the MQTT broker if not connected (equal to loop_start()) and sending log message to MQTT broker\n    logging.info('test 2')\n\n    # Wait for log being sent to the MQTT broker\n    while True:\n      time.sleep(1)\n\n    # You will only see\n    #   test 2\n    # on the broker if QoS = 0.\n\nMQTTHandler will not wait for connected, you have to do it yourself.\nE.g.\n\n.. code:: py\n\n    mqtthdlr.loop_start()   # Manually connect to the MQTT server\n    import time; time.sleep(3)   # A dirty way to wait for MQTT connected\n    logging.info('test')  # send log message to MQTT broker\n\nMQTTHandler will create a thread to maintain the connection\n(automatically reconnecting if disconnected) itself. This will make your\nprogram never exit. You have to terminate MQTTHandler yourself to stop\nthe MQTTHandler thread.\n\n.. code:: py\n\n    mqtthdlr.loop_stop()  # Stop MQTT thread\n\nAPI\n---\n\nMQTTHandler\n~~~~~~~~~~~\n\nConstructor\n^^^^^^^^^^^\n\n::\n\n    MQTTHandler(host, topic, port=1883, keepalive=60, bind_address='', client_id='', clean_session=True, userdata=None, protocol=mqttc.MQTTv311, qos=0, retain=False)\n\nReference to `paho.mqtt.python`_.\n\nMethods\n^^^^^^^\n\n::\n\n    loop_start()\n\n::\n\n    loop_stop()\n\n::\n\n    max_inflight_messages_set(inflight)\n\n::\n\n    message_retry_set(retry)\n\n::\n\n    tls_set(ca_certs, certfile=None, keyfile=None, cert_reqs=ss.CERT_REQUIRED, tls_version=ssl.PROTOCOL_TLSv1, ciphers=None)\n\n::\n\n    tls_insecure_set(value)\n\n::\n\n    username_pw_set(username, password)\n\n::\n\n    user_data_set(userdata)\n\n::\n\n    will_set(topic, payload=None, qos=0, retain=False)\n\nReference to `paho.mqtt.python`_.\n\n.. _paho.mqtt.python: https://github.com/eclipse/paho.mqtt.python/blob/master/README.rst\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/changyuheng/MQTTHandler", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mqtthandler", "package_url": "https://pypi.org/project/mqtthandler/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mqtthandler/", "project_urls": {"Homepage": "https://github.com/changyuheng/MQTTHandler"}, "release_url": "https://pypi.org/project/mqtthandler/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "A Python logging handler using MQTT protocol", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python logging handler using MQTT protocol.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install mqtthandler\n</pre>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">mqtthandler</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"n\">mqtthdlr</span> <span class=\"o\">=</span> <span class=\"n\">mqtthandler</span><span class=\"o\">.</span><span class=\"n\">MQTTHandler</span><span class=\"p\">(</span><span class=\"s1\">'server.mqtt.com'</span><span class=\"p\">,</span> <span class=\"s1\">'topic/test'</span><span class=\"p\">)</span>\n<span class=\"n\">mqtthdlr</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">()</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">mqtthdlr</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>  <span class=\"c1\"># Automatically connecting to the MQTT broker if not connected (equal to loop_start()) and sending log message to MQTT broker</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'test 2'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Wait for log being sent to the MQTT broker</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n  <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You will only see</span>\n<span class=\"c1\">#   test 2</span>\n<span class=\"c1\"># on the broker if QoS = 0.</span>\n</pre>\n<p>MQTTHandler will not wait for connected, you have to do it yourself.\nE.g.</p>\n<pre><span class=\"n\">mqtthdlr</span><span class=\"o\">.</span><span class=\"n\">loop_start</span><span class=\"p\">()</span>   <span class=\"c1\"># Manually connect to the MQTT server</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span><span class=\"p\">;</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>   <span class=\"c1\"># A dirty way to wait for MQTT connected</span>\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>  <span class=\"c1\"># send log message to MQTT broker</span>\n</pre>\n<p>MQTTHandler will create a thread to maintain the connection\n(automatically reconnecting if disconnected) itself. This will make your\nprogram never exit. You have to terminate MQTTHandler yourself to stop\nthe MQTTHandler thread.</p>\n<pre><span class=\"n\">mqtthdlr</span><span class=\"o\">.</span><span class=\"n\">loop_stop</span><span class=\"p\">()</span>  <span class=\"c1\"># Stop MQTT thread</span>\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">MQTTHandler</span></h2>\n<div id=\"constructor\">\n<h3>Constructor</h3>\n<pre>MQTTHandler(host, topic, port=1883, keepalive=60, bind_address='', client_id='', clean_session=True, userdata=None, protocol=mqttc.MQTTv311, qos=0, retain=False)\n</pre>\n<p>Reference to <a href=\"https://github.com/eclipse/paho.mqtt.python/blob/master/README.rst\" rel=\"nofollow\">paho.mqtt.python</a>.</p>\n</div>\n<div id=\"methods\">\n<h3>Methods</h3>\n<pre>loop_start()\n</pre>\n<pre>loop_stop()\n</pre>\n<pre>max_inflight_messages_set(inflight)\n</pre>\n<pre>message_retry_set(retry)\n</pre>\n<pre>tls_set(ca_certs, certfile=None, keyfile=None, cert_reqs=ss.CERT_REQUIRED, tls_version=ssl.PROTOCOL_TLSv1, ciphers=None)\n</pre>\n<pre>tls_insecure_set(value)\n</pre>\n<pre>username_pw_set(username, password)\n</pre>\n<pre>user_data_set(userdata)\n</pre>\n<pre>will_set(topic, payload=None, qos=0, retain=False)\n</pre>\n<p>Reference to <a href=\"https://github.com/eclipse/paho.mqtt.python/blob/master/README.rst\" rel=\"nofollow\">paho.mqtt.python</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2066513, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "8bd16b627256ab5fe95b25ce00ce5009", "sha256": "64f10b8a48775baf5c8ebeee857a5a69ef80d8d14a63001fe6439e88b8f4cd47"}, "downloads": -1, "filename": "mqtthandler-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8bd16b627256ab5fe95b25ce00ce5009", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3196, "upload_time": "2016-04-14T03:57:19", "upload_time_iso_8601": "2016-04-14T03:57:19.306024Z", "url": "https://files.pythonhosted.org/packages/f0/e1/b0dfa405753350d1c61cd1bf4f7db990bf042bd7ff5425eb776a0ba9683c/mqtthandler-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ba60d3081bd449090776f4b56c4a18e4", "sha256": "223c9f6c8d4131f39fd2a730c3ccbca3099848049827f57e5c3cea7581551129"}, "downloads": -1, "filename": "mqtthandler-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ba60d3081bd449090776f4b56c4a18e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3266, "upload_time": "2016-04-14T21:58:56", "upload_time_iso_8601": "2016-04-14T21:58:56.952919Z", "url": "https://files.pythonhosted.org/packages/e5/e9/8f35d526c19d27af88b1f76369ffc3ddd848ba7907daa3b98e6c51ab2a29/mqtthandler-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "474baf3fa5f818a3b59ada46dd0c5215", "sha256": "04ab7f717cae6408f53b624eaa4ac044aaa42658eac3f010e354178fb5535787"}, "downloads": -1, "filename": "mqtthandler-0.1.3.tar.gz", "has_sig": false, "md5_digest": "474baf3fa5f818a3b59ada46dd0c5215", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3278, "upload_time": "2016-04-15T23:46:28", "upload_time_iso_8601": "2016-04-15T23:46:28.493665Z", "url": "https://files.pythonhosted.org/packages/74/b5/c86db5669f7a47a8c3ae0e9742eba3acc50fa579c87a707f76290071cb8c/mqtthandler-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "474baf3fa5f818a3b59ada46dd0c5215", "sha256": "04ab7f717cae6408f53b624eaa4ac044aaa42658eac3f010e354178fb5535787"}, "downloads": -1, "filename": "mqtthandler-0.1.3.tar.gz", "has_sig": false, "md5_digest": "474baf3fa5f818a3b59ada46dd0c5215", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3278, "upload_time": "2016-04-15T23:46:28", "upload_time_iso_8601": "2016-04-15T23:46:28.493665Z", "url": "https://files.pythonhosted.org/packages/74/b5/c86db5669f7a47a8c3ae0e9742eba3acc50fa579c87a707f76290071cb8c/mqtthandler-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:06 2020"}