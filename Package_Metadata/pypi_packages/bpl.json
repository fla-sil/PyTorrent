{"info": {"author": "Angus Williams <anguswilliams91@gmail.com>", "author_email": "anguswilliams91@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# bpl\n\n[![Build Status](https://travis-ci.org/anguswilliams91/bpl.svg?branch=master)](https://travis-ci.org/anguswilliams91/bpl)\n[![codecov](https://codecov.io/gh/anguswilliams91/bpl/branch/master/graph/badge.svg)](https://codecov.io/gh/anguswilliams91/bpl)\n\n`bpl` is a python 3 library for fitting Bayesian versions of the Dixon \\& Coles (1997) model to data.\nIt uses the `stan` library to fit models to data.  \n\n ## Installation\n\nYou will need a working C++ compiler.\nIf you are using anaconda, you can install gcc with  \n\n```bash\nconda install gcc\n``` \n\nYou can then install with `pip`:\n\n```bash\npip install bpl\n```\nThis may take a little while, as two stan models are compiled as part of the build.\n\n## Usage\n\n`bpl` provides a class `BPLModel` that can be used to forecast the outcome of football matches.\nData should be provided to the model as a `pandas` dataframe, with columns `home_team`, `away_team`, `home_goals` and `away_goals`.\nYou can also optionally provide a set of numerical covariates for each team (e.g. their ratings on FIFA) and these will be used in the fit.\nExample usage:\n```python\nimport bpl\nimport pandas as pd\n\ndf_train = pd.read_csv(\"<path-to-training-data>\")\ndf_X = pd.read_csv(\"<path-to-team-level-covariates>\")\nforecaster = bpl.BPLModel(data=df_train, X=df_X)\nforecaster.fit(seed=42)\n\n# calculate the probability that team 1 beats team 2 3-0 at home:\nforecaster.score_probability(\"Team 1\", \"Team 2\", 3, 0)\n\n# calculate the probabilities of a home win, an away win and a draw:\nforecaster.overall_probabilities(\"Team 1\", \"Team 2\")\n\n# compute home win, away win and draw probabilities for a collection of matches:\ndf_test = pd.read_csv(\"<path-to-test-data>\") # must have columns \"home_team\" and \"away_team\"\nforecaster.predict_future_matches(df_test)\n\n# add a new, previously unseen team to the model by sampling from the prior\nX_3 = np.array([0.1, -0.5, 3.0]) # the covariates for the new team\nforecaster.add_new_team(\"Team 3\", X=X_3, seed=43)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/anguswilliams91/bpl/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/anguswilliams91/bpl", "keywords": "", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "bpl", "package_url": "https://pypi.org/project/bpl/", "platform": "", "project_url": "https://pypi.org/project/bpl/", "project_urls": {"Download": "https://github.com/anguswilliams91/bpl/archive/master.zip", "Homepage": "https://github.com/anguswilliams91/bpl"}, "release_url": "https://pypi.org/project/bpl/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "Bayesian models for football leagues", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>bpl</h1>\n<p><a href=\"https://travis-ci.org/anguswilliams91/bpl\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/186dd34d728374894f2bc0ea478dcf810cb08f90/68747470733a2f2f7472617669732d63692e6f72672f616e67757377696c6c69616d7339312f62706c2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/anguswilliams91/bpl\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/544b06c1db23bd8e7d1540a7b853dae28ced81d5/68747470733a2f2f636f6465636f762e696f2f67682f616e67757377696c6c69616d7339312f62706c2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p><code>bpl</code> is a python 3 library for fitting Bayesian versions of the Dixon &amp; Coles (1997) model to data.\nIt uses the <code>stan</code> library to fit models to data.</p>\n<h2>Installation</h2>\n<p>You will need a working C++ compiler.\nIf you are using anaconda, you can install gcc with</p>\n<pre>conda install gcc\n</pre>\n<p>You can then install with <code>pip</code>:</p>\n<pre>pip install bpl\n</pre>\n<p>This may take a little while, as two stan models are compiled as part of the build.</p>\n<h2>Usage</h2>\n<p><code>bpl</code> provides a class <code>BPLModel</code> that can be used to forecast the outcome of football matches.\nData should be provided to the model as a <code>pandas</code> dataframe, with columns <code>home_team</code>, <code>away_team</code>, <code>home_goals</code> and <code>away_goals</code>.\nYou can also optionally provide a set of numerical covariates for each team (e.g. their ratings on FIFA) and these will be used in the fit.\nExample usage:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">bpl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">df_train</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;path-to-training-data&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">df_X</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;path-to-team-level-covariates&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">forecaster</span> <span class=\"o\">=</span> <span class=\"n\">bpl</span><span class=\"o\">.</span><span class=\"n\">BPLModel</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">df_train</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">df_X</span><span class=\"p\">)</span>\n<span class=\"n\">forecaster</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># calculate the probability that team 1 beats team 2 3-0 at home:</span>\n<span class=\"n\">forecaster</span><span class=\"o\">.</span><span class=\"n\">score_probability</span><span class=\"p\">(</span><span class=\"s2\">\"Team 1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Team 2\"</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># calculate the probabilities of a home win, an away win and a draw:</span>\n<span class=\"n\">forecaster</span><span class=\"o\">.</span><span class=\"n\">overall_probabilities</span><span class=\"p\">(</span><span class=\"s2\">\"Team 1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Team 2\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># compute home win, away win and draw probabilities for a collection of matches:</span>\n<span class=\"n\">df_test</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_csv</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;path-to-test-data&gt;\"</span><span class=\"p\">)</span> <span class=\"c1\"># must have columns \"home_team\" and \"away_team\"</span>\n<span class=\"n\">forecaster</span><span class=\"o\">.</span><span class=\"n\">predict_future_matches</span><span class=\"p\">(</span><span class=\"n\">df_test</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># add a new, previously unseen team to the model by sampling from the prior</span>\n<span class=\"n\">X_3</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">3.0</span><span class=\"p\">])</span> <span class=\"c1\"># the covariates for the new team</span>\n<span class=\"n\">forecaster</span><span class=\"o\">.</span><span class=\"n\">add_new_team</span><span class=\"p\">(</span><span class=\"s2\">\"Team 3\"</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X_3</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">43</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5726349, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c5f0de056602f8772b7d415390b4b523", "sha256": "dea86eebe6affa4b8c5af6a176d87539c7e3375b0bf686974e997d24457c0f29"}, "downloads": -1, "filename": "bpl-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c5f0de056602f8772b7d415390b4b523", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12180738, "upload_time": "2019-08-21T06:31:52", "upload_time_iso_8601": "2019-08-21T06:31:52.617452Z", "url": "https://files.pythonhosted.org/packages/f6/19/90b319b10d45c40059eb6f986963441d03c5ea43ee7e852793bd4b9fe422/bpl-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca01afa0eef0cfd94b6bcef7fca6ce41", "sha256": "b0313abc52a3cbe60f8064263f08f2addefc82ca91273324040c661618c3c4ae"}, "downloads": -1, "filename": "bpl-0.0.1.tar.gz", "has_sig": false, "md5_digest": "ca01afa0eef0cfd94b6bcef7fca6ce41", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10040, "upload_time": "2019-08-21T06:31:57", "upload_time_iso_8601": "2019-08-21T06:31:57.373263Z", "url": "https://files.pythonhosted.org/packages/c7/07/6e4e69131d43aadee5b99df2ae2a8b0ddf1c5d9d522c955439e5bda9dcf6/bpl-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "fa0838e32f17d89ed0fc939cc12ac1f3", "sha256": "9cfc657cee6714f9fd83aa877b9dec0cc78c8a506c3b93a09f0d6eddb372a019"}, "downloads": -1, "filename": "bpl-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fa0838e32f17d89ed0fc939cc12ac1f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10070, "upload_time": "2019-08-21T06:46:46", "upload_time_iso_8601": "2019-08-21T06:46:46.037937Z", "url": "https://files.pythonhosted.org/packages/f5/8d/9b358c5288291d0e16c8133fc52295ee959871b83ecbea64c698cf1d9c62/bpl-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "808260ca88b83e3b9e6ddf1043e6c8ee", "sha256": "0bbdf2350adb9294e8cc166e8586ba042cafdb6b752609cfcc242b342304a9a8"}, "downloads": -1, "filename": "bpl-0.0.3.tar.gz", "has_sig": false, "md5_digest": "808260ca88b83e3b9e6ddf1043e6c8ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27807, "upload_time": "2019-08-25T07:37:43", "upload_time_iso_8601": "2019-08-25T07:37:43.038503Z", "url": "https://files.pythonhosted.org/packages/6e/03/3f919e82daa014efc7d17261d25178373b26e9b31ee6377ca22bf9944821/bpl-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6ea216bf95fa11449a437e6a5ffd3f7d", "sha256": "98241402bfb9238b03d1c650d7e9a854645800bcfdfcbbec444b581a718cdb10"}, "downloads": -1, "filename": "bpl-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6ea216bf95fa11449a437e6a5ffd3f7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27628, "upload_time": "2019-08-25T07:47:12", "upload_time_iso_8601": "2019-08-25T07:47:12.525126Z", "url": "https://files.pythonhosted.org/packages/ff/a3/16f6017f39c1fef52ee6ac866478597ec629d10e92137c6c53365c5204f8/bpl-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6ea216bf95fa11449a437e6a5ffd3f7d", "sha256": "98241402bfb9238b03d1c650d7e9a854645800bcfdfcbbec444b581a718cdb10"}, "downloads": -1, "filename": "bpl-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6ea216bf95fa11449a437e6a5ffd3f7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27628, "upload_time": "2019-08-25T07:47:12", "upload_time_iso_8601": "2019-08-25T07:47:12.525126Z", "url": "https://files.pythonhosted.org/packages/ff/a3/16f6017f39c1fef52ee6ac866478597ec629d10e92137c6c53365c5204f8/bpl-0.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:28 2020"}