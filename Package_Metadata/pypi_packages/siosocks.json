{"info": {"author": "pohmelie", "author_email": "multisosnooley@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "# siosocks\n![Travis status for master branch](https://travis-ci.com/pohmelie/siosocks.svg?branch=master)\n![Codecov coverage for master branch](https://codecov.io/gh/pohmelie/siosocks/branch/master/graph/badge.svg)\n![Pypi version](https://img.shields.io/pypi/v/siosocks.svg)\n![Pypi downloads count](https://img.shields.io/pypi/dm/siosocks)\n\n[Sans-io](https://sans-io.readthedocs.io/) socks 4/5 client/server library/framework.\n\n# Reasons\n* No one-shot socks servers\n* Sans-io\n* asyncio-ready [`twunnel3`](https://github.com/jvansteirteghem/twunnel3) is dead\n* [`aiosocks`](https://github.com/nibrag/aiosocks) do not mimic `asyncio.open_connection` arguments (maybe dead too)\n* Fun\n\n# Features\n* Only tcp connect (no bind, no udp)\n* Both client and server\n* Socks versions: 4, 4a, 5\n* Socks5 auth: no auth, username/password\n* Couple io backends: asyncio, trio, socketserver\n* One-shot socks server (`python -m siosocks`)\n\n# License\n`siosocks` is offered under MIT license.\n\n# Requirements\n* python 3.6+\n\n# IO implementation matrix\n\nFramework | Client | Server\n--- | :---: | :---:\nasyncio | + | +\ntrio | + | +\nsocket | | +\n\nFeel free to make it bigger :wink:\n\n# Usage\nEnd user implementations mimic \u00abparent\u00bb library api.\n## Client\n* asyncio: [`open_connection`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.open_connection)\n* trio: [`open_tcp_stream`](https://trio.readthedocs.io/en/stable/reference-io.html#trio.open_tcp_stream)\n\nExtra keyword-only arguments:\n* `socks_host`: string\n* `socks_port`: integer\n* `socks_version`: integer (4 or 5)\n* `username`: optional string (default: `None`)\n* `password`: optional string (default: `None`)\n* `encoding`: optional string (default: `\"utf-8\"`)\n* `socks4_extras`: optional dictionary\n* `socks5_extras`: optional dictionary\n\nExtras:\n* socks4\n    * `user_id`: string (default: `\"\"`)\n* socks5\n    * None at this moment, added for uniform api\n## Server\nEnd user implementations mimic \u00abparent\u00bb library server request handlers.\n* asyncio: [`start_server`](https://docs.python.org/3/library/asyncio-stream.html#asyncio.start_server)\n* trio: [`serve_tcp`](https://trio.readthedocs.io/en/stable/reference-io.html#trio.serve_tcp)\n* socketserver: [`ThreadingTCPServer`](https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingTCPServer)\n\nYou should use [`partial`](https://docs.python.org/3/library/functools.html#functools.partial) to bind socks specific arguments:\n* `allowed_versions`: set of integers (default: `{4, 5}`)\n* `username`: optional string (default: `None`)\n* `password`: optional string (default: `None`)\n* `strict_security_policy`: boolean, if `True` exception will be raised if authentication required and 4 is in allowed versions set (default: `True`)\n* `encoding`: optional string (default: `\"utf-8\"`)\n\nNothing to say more. Typical usage can be found at [`__main__.py`](https://github.com/pohmelie/siosocks/blob/master/siosocks/__main__.py)\n\n# Examples\n## High-level\nThis section will use `asyncio` as backend, since it is main target/reason for `siosocks`\n### Client\n``` python\nimport asyncio\n\nfrom siosocks.io.asyncio import open_connection\n\n\nHOST = \"api.ipify.org\"\nREQ = \"\"\"GET /?format=json HTTP/1.1\nHost: api.ipify.org\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:67.0) Gecko/20100101 Firefox/67.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en,en-US;q=0.7,ru;q=0.3\nAccept-Encoding: gzip, deflate\nDNT: 1\nConnection: keep-alive\nUpgrade-Insecure-Requests: 1\nCache-Control: max-age=0\n\n\"\"\"\n\n\nasync def main():\n    # assume we have tor started\n    r, w = await open_connection(HOST, 80, socks_host=\"localhost\", socks_port=9050, socks_version=5)\n    w.write(REQ.replace(\"\\n\", \"\\r\\n\").encode())\n    await w.drain()\n    print(await r.read(8192))\n    w.close()\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(main())\n```\n### Server\n``` python\nimport socket\nimport asyncio\nimport contextlib\n\nfrom siosocks.io.asyncio import socks_server_handler\n\n\nloop = asyncio.get_event_loop()\nserver = loop.run_until_complete(asyncio.start_server(socks_server_handler, port=1080))\naddresses = []\nfor sock in server.sockets:\n    if sock.family in (socket.AF_INET, socket.AF_INET6):\n        host, port, *_ = sock.getsockname()\n        addresses.append(f\"{host}:{port}\")\nprint(f\"Socks4/5 proxy serving on {', '.join(addresses)}\")\nwith contextlib.suppress(KeyboardInterrupt):\n    loop.run_forever()\n```\nBut if you just want one-shot socks server then try:\n``` bash\npython -m siosocks\n```\nThis will start socks 4, 5 server on all interfaces on 1080 port. For more information try `--help`\n``` bash\npython -m siosocks --help\nusage: siosocks [-h] [--backend {asyncio,socketserver,trio}] [--host HOST]\n                [--port PORT] [--family {ipv4,ipv6,auto}] [--socks SOCKS]\n                [--username USERNAME] [--password PASSWORD]\n                [--encoding ENCODING] [--no-strict] [-v]\n\nSocks proxy server\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --backend {asyncio,socketserver,trio}\n                        Socks server backend [default: asyncio]\n  --host HOST           Socks server host [default: None]\n  --port PORT           Socks server port [default: 1080]\n  --family {ipv4,ipv6,auto}\n                        Socket family [default: auto]\n  --socks SOCKS         Socks protocol version [default: []]\n  --username USERNAME   Socks auth username [default: None]\n  --password PASSWORD   Socks auth password [default: None]\n  --encoding ENCODING   String encoding [default: utf-8]\n  --no-strict           Allow multiversion socks server, when socks5 used with\n                        username/password auth [default: False]\n  -v, --version         Show siosocks version\n```\n## Low-level\nShadowsocks-like [client/server](https://github.com/pohmelie/siosocks/blob/master/examples/shadowsocks-like.py). Shadowsocks-like built on top of socks5 and encryption. It have \u00abclient\u00bb, which is actually socks server and \u00abserver\u00bb. So, precisely there are two servers: client side and server side. Purpose of shadowsocks is to encrypt data between \u00abincoming\u00bb and \u00aboutgoing\u00bb servers. In common this looks like:\n```\nclient (non-encrypted socks) \u00abincoming\u00bb socks server (encrypted socks) \u00aboutgoing\u00bb socks server (non-socks connection) target server\n```\nExample above use Caesar cipher for simplicity (and security of course).\n\n# Roadmap/contibutions\n* [ ] add more backends (average)\n* [ ] speed up `passthrough` implementation (seems hard)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pohmelie/siosocks", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "siosocks", "package_url": "https://pypi.org/project/siosocks/", "platform": "", "project_url": "https://pypi.org/project/siosocks/", "project_urls": {"Homepage": "https://github.com/pohmelie/siosocks"}, "release_url": "https://pypi.org/project/siosocks/0.1.0/", "requires_dist": ["pytest ; extra == 'tests'", "pytest-cov ; extra == 'tests'", "pytest-asyncio ; extra == 'tests'", "trio ; extra == 'tests'", "pytest-trio ; extra == 'tests'", "trio ; extra == 'trio'"], "requires_python": ">= 3.6", "summary": "sans-io socks proxy client/server with couple io backends", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>siosocks</h1>\n<p><img alt=\"Travis status for master branch\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36204259d862db6e9dbcfcae4c6c952b41eae96b/68747470733a2f2f7472617669732d63692e636f6d2f706f686d656c69652f73696f736f636b732e7376673f6272616e63683d6d6173746572\">\n<img alt=\"Codecov coverage for master branch\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f7a530afe9d7bd5fc40ff11d535b473e1b19d31/68747470733a2f2f636f6465636f762e696f2f67682f706f686d656c69652f73696f736f636b732f6272616e63682f6d61737465722f67726170682f62616467652e737667\">\n<img alt=\"Pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36eab8b17fb8558c66fbbd5967e804ad77343d44/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73696f736f636b732e737667\">\n<img alt=\"Pypi downloads count\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efffda809fe98986980d285c62cca667e2e389e8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f73696f736f636b73\"></p>\n<p><a href=\"https://sans-io.readthedocs.io/\" rel=\"nofollow\">Sans-io</a> socks 4/5 client/server library/framework.</p>\n<h1>Reasons</h1>\n<ul>\n<li>No one-shot socks servers</li>\n<li>Sans-io</li>\n<li>asyncio-ready <a href=\"https://github.com/jvansteirteghem/twunnel3\" rel=\"nofollow\"><code>twunnel3</code></a> is dead</li>\n<li><a href=\"https://github.com/nibrag/aiosocks\" rel=\"nofollow\"><code>aiosocks</code></a> do not mimic <code>asyncio.open_connection</code> arguments (maybe dead too)</li>\n<li>Fun</li>\n</ul>\n<h1>Features</h1>\n<ul>\n<li>Only tcp connect (no bind, no udp)</li>\n<li>Both client and server</li>\n<li>Socks versions: 4, 4a, 5</li>\n<li>Socks5 auth: no auth, username/password</li>\n<li>Couple io backends: asyncio, trio, socketserver</li>\n<li>One-shot socks server (<code>python -m siosocks</code>)</li>\n</ul>\n<h1>License</h1>\n<p><code>siosocks</code> is offered under MIT license.</p>\n<h1>Requirements</h1>\n<ul>\n<li>python 3.6+</li>\n</ul>\n<h1>IO implementation matrix</h1>\n<table>\n<thead>\n<tr>\n<th>Framework</th>\n<th align=\"center\">Client</th>\n<th align=\"center\">Server</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>asyncio</td>\n<td align=\"center\">+</td>\n<td align=\"center\">+</td>\n</tr>\n<tr>\n<td>trio</td>\n<td align=\"center\">+</td>\n<td align=\"center\">+</td>\n</tr>\n<tr>\n<td>socket</td>\n<td align=\"center\"></td>\n<td align=\"center\">+</td>\n</tr></tbody></table>\n<p>Feel free to make it bigger :wink:</p>\n<h1>Usage</h1>\n<p>End user implementations mimic \u00abparent\u00bb library api.</p>\n<h2>Client</h2>\n<ul>\n<li>asyncio: <a href=\"https://docs.python.org/3/library/asyncio-stream.html#asyncio.open_connection\" rel=\"nofollow\"><code>open_connection</code></a></li>\n<li>trio: <a href=\"https://trio.readthedocs.io/en/stable/reference-io.html#trio.open_tcp_stream\" rel=\"nofollow\"><code>open_tcp_stream</code></a></li>\n</ul>\n<p>Extra keyword-only arguments:</p>\n<ul>\n<li><code>socks_host</code>: string</li>\n<li><code>socks_port</code>: integer</li>\n<li><code>socks_version</code>: integer (4 or 5)</li>\n<li><code>username</code>: optional string (default: <code>None</code>)</li>\n<li><code>password</code>: optional string (default: <code>None</code>)</li>\n<li><code>encoding</code>: optional string (default: <code>\"utf-8\"</code>)</li>\n<li><code>socks4_extras</code>: optional dictionary</li>\n<li><code>socks5_extras</code>: optional dictionary</li>\n</ul>\n<p>Extras:</p>\n<ul>\n<li>socks4\n<ul>\n<li><code>user_id</code>: string (default: <code>\"\"</code>)</li>\n</ul>\n</li>\n<li>socks5\n<ul>\n<li>None at this moment, added for uniform api</li>\n</ul>\n</li>\n</ul>\n<h2>Server</h2>\n<p>End user implementations mimic \u00abparent\u00bb library server request handlers.</p>\n<ul>\n<li>asyncio: <a href=\"https://docs.python.org/3/library/asyncio-stream.html#asyncio.start_server\" rel=\"nofollow\"><code>start_server</code></a></li>\n<li>trio: <a href=\"https://trio.readthedocs.io/en/stable/reference-io.html#trio.serve_tcp\" rel=\"nofollow\"><code>serve_tcp</code></a></li>\n<li>socketserver: <a href=\"https://docs.python.org/3/library/socketserver.html#socketserver.ThreadingTCPServer\" rel=\"nofollow\"><code>ThreadingTCPServer</code></a></li>\n</ul>\n<p>You should use <a href=\"https://docs.python.org/3/library/functools.html#functools.partial\" rel=\"nofollow\"><code>partial</code></a> to bind socks specific arguments:</p>\n<ul>\n<li><code>allowed_versions</code>: set of integers (default: <code>{4, 5}</code>)</li>\n<li><code>username</code>: optional string (default: <code>None</code>)</li>\n<li><code>password</code>: optional string (default: <code>None</code>)</li>\n<li><code>strict_security_policy</code>: boolean, if <code>True</code> exception will be raised if authentication required and 4 is in allowed versions set (default: <code>True</code>)</li>\n<li><code>encoding</code>: optional string (default: <code>\"utf-8\"</code>)</li>\n</ul>\n<p>Nothing to say more. Typical usage can be found at <a href=\"https://github.com/pohmelie/siosocks/blob/master/siosocks/__main__.py\" rel=\"nofollow\"><code>__main__.py</code></a></p>\n<h1>Examples</h1>\n<h2>High-level</h2>\n<p>This section will use <code>asyncio</code> as backend, since it is main target/reason for <code>siosocks</code></p>\n<h3>Client</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">siosocks.io.asyncio</span> <span class=\"kn\">import</span> <span class=\"n\">open_connection</span>\n\n\n<span class=\"n\">HOST</span> <span class=\"o\">=</span> <span class=\"s2\">\"api.ipify.org\"</span>\n<span class=\"n\">REQ</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"GET /?format=json HTTP/1.1</span>\n<span class=\"s2\">Host: api.ipify.org</span>\n<span class=\"s2\">User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:67.0) Gecko/20100101 Firefox/67.0</span>\n<span class=\"s2\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span>\n<span class=\"s2\">Accept-Language: en,en-US;q=0.7,ru;q=0.3</span>\n<span class=\"s2\">Accept-Encoding: gzip, deflate</span>\n<span class=\"s2\">DNT: 1</span>\n<span class=\"s2\">Connection: keep-alive</span>\n<span class=\"s2\">Upgrade-Insecure-Requests: 1</span>\n<span class=\"s2\">Cache-Control: max-age=0</span>\n\n<span class=\"s2\">\"\"\"</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"c1\"># assume we have tor started</span>\n    <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">open_connection</span><span class=\"p\">(</span><span class=\"n\">HOST</span><span class=\"p\">,</span> <span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"n\">socks_host</span><span class=\"o\">=</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span> <span class=\"n\">socks_port</span><span class=\"o\">=</span><span class=\"mi\">9050</span><span class=\"p\">,</span> <span class=\"n\">socks_version</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n    <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">REQ</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\r\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">())</span>\n    <span class=\"k\">await</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">drain</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"k\">await</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"mi\">8192</span><span class=\"p\">))</span>\n    <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h3>Server</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">socket</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">contextlib</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">siosocks.io.asyncio</span> <span class=\"kn\">import</span> <span class=\"n\">socks_server_handler</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">start_server</span><span class=\"p\">(</span><span class=\"n\">socks_server_handler</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">1080</span><span class=\"p\">))</span>\n<span class=\"n\">addresses</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">sock</span> <span class=\"ow\">in</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">sockets</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">sock</span><span class=\"o\">.</span><span class=\"n\">family</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">AF_INET</span><span class=\"p\">,</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">AF_INET6</span><span class=\"p\">):</span>\n        <span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">sock</span><span class=\"o\">.</span><span class=\"n\">getsockname</span><span class=\"p\">()</span>\n        <span class=\"n\">addresses</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"</span><span class=\"si\">{</span><span class=\"n\">host</span><span class=\"si\">}</span><span class=\"s2\">:</span><span class=\"si\">{</span><span class=\"n\">port</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Socks4/5 proxy serving on </span><span class=\"si\">{</span><span class=\"s1\">', '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">addresses</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"k\">with</span> <span class=\"n\">contextlib</span><span class=\"o\">.</span><span class=\"n\">suppress</span><span class=\"p\">(</span><span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">):</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n<p>But if you just want one-shot socks server then try:</p>\n<pre>python -m siosocks\n</pre>\n<p>This will start socks 4, 5 server on all interfaces on 1080 port. For more information try <code>--help</code></p>\n<pre>python -m siosocks --help\nusage: siosocks <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--backend <span class=\"o\">{</span>asyncio,socketserver,trio<span class=\"o\">}]</span> <span class=\"o\">[</span>--host HOST<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--port PORT<span class=\"o\">]</span> <span class=\"o\">[</span>--family <span class=\"o\">{</span>ipv4,ipv6,auto<span class=\"o\">}]</span> <span class=\"o\">[</span>--socks SOCKS<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--username USERNAME<span class=\"o\">]</span> <span class=\"o\">[</span>--password PASSWORD<span class=\"o\">]</span>\n                <span class=\"o\">[</span>--encoding ENCODING<span class=\"o\">]</span> <span class=\"o\">[</span>--no-strict<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span>\n\nSocks proxy server\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --backend <span class=\"o\">{</span>asyncio,socketserver,trio<span class=\"o\">}</span>\n                        Socks server backend <span class=\"o\">[</span>default: asyncio<span class=\"o\">]</span>\n  --host HOST           Socks server host <span class=\"o\">[</span>default: None<span class=\"o\">]</span>\n  --port PORT           Socks server port <span class=\"o\">[</span>default: <span class=\"m\">1080</span><span class=\"o\">]</span>\n  --family <span class=\"o\">{</span>ipv4,ipv6,auto<span class=\"o\">}</span>\n                        Socket family <span class=\"o\">[</span>default: auto<span class=\"o\">]</span>\n  --socks SOCKS         Socks protocol version <span class=\"o\">[</span>default: <span class=\"o\">[]]</span>\n  --username USERNAME   Socks auth username <span class=\"o\">[</span>default: None<span class=\"o\">]</span>\n  --password PASSWORD   Socks auth password <span class=\"o\">[</span>default: None<span class=\"o\">]</span>\n  --encoding ENCODING   String encoding <span class=\"o\">[</span>default: utf-8<span class=\"o\">]</span>\n  --no-strict           Allow multiversion socks server, when socks5 used with\n                        username/password auth <span class=\"o\">[</span>default: False<span class=\"o\">]</span>\n  -v, --version         Show siosocks version\n</pre>\n<h2>Low-level</h2>\n<p>Shadowsocks-like <a href=\"https://github.com/pohmelie/siosocks/blob/master/examples/shadowsocks-like.py\" rel=\"nofollow\">client/server</a>. Shadowsocks-like built on top of socks5 and encryption. It have \u00abclient\u00bb, which is actually socks server and \u00abserver\u00bb. So, precisely there are two servers: client side and server side. Purpose of shadowsocks is to encrypt data between \u00abincoming\u00bb and \u00aboutgoing\u00bb servers. In common this looks like:</p>\n<pre><code>client (non-encrypted socks) \u00abincoming\u00bb socks server (encrypted socks) \u00aboutgoing\u00bb socks server (non-socks connection) target server\n</code></pre>\n<p>Example above use Caesar cipher for simplicity (and security of course).</p>\n<h1>Roadmap/contibutions</h1>\n<ul>\n<li>[ ] add more backends (average)</li>\n<li>[ ] speed up <code>passthrough</code> implementation (seems hard)</li>\n</ul>\n\n          </div>"}, "last_serial": 5866256, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "86cb165e35b4e0f3db279a2de81a789b", "sha256": "89d66053dfc922a511171e48183e25fa4714a4bcab1aea0e3426395b0c5bc341"}, "downloads": -1, "filename": "siosocks-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "86cb165e35b4e0f3db279a2de81a789b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 7330, "upload_time": "2019-08-02T14:56:13", "upload_time_iso_8601": "2019-08-02T14:56:13.126005Z", "url": "https://files.pythonhosted.org/packages/13/d7/546bc1cb218787b17086296051ffb7048610dd55fe90120a5304ef00a4a0/siosocks-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6fbb08d058aa3f382f0fed6fd83ee40", "sha256": "7eab25d3dfb89e3fc76b7f0591ed7c9366e55af26e227b9c11a4a69e771c3fa4"}, "downloads": -1, "filename": "siosocks-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d6fbb08d058aa3f382f0fed6fd83ee40", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 5768, "upload_time": "2019-08-02T14:56:15", "upload_time_iso_8601": "2019-08-02T14:56:15.043889Z", "url": "https://files.pythonhosted.org/packages/66/a2/58cf0907f6920c1c45156148bc3d334743a8a073c52fb207d4150b72359c/siosocks-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "aadb2ea45e816b1627b82c558931f230", "sha256": "6a067fe5b7fabb5a3c7e74cb80775da78cbd5f4e879c75a4c3b301709f306605"}, "downloads": -1, "filename": "siosocks-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "aadb2ea45e816b1627b82c558931f230", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 13552, "upload_time": "2019-08-02T15:09:26", "upload_time_iso_8601": "2019-08-02T15:09:26.430989Z", "url": "https://files.pythonhosted.org/packages/4e/b8/6c936c3f084c1152e0b718dc67743f6be49ac2b05b08f3a03c81b0952724/siosocks-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d28480c54418ad47a739212d40a3194", "sha256": "51d307cb12f5845872b3732ece7c7bc172b534de3c93504ae475c5eb163eb483"}, "downloads": -1, "filename": "siosocks-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1d28480c54418ad47a739212d40a3194", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 34581, "upload_time": "2019-08-02T15:09:29", "upload_time_iso_8601": "2019-08-02T15:09:29.385665Z", "url": "https://files.pythonhosted.org/packages/84/05/d41ba32839e2499a0fb35fa464a314ca91f234ad6195550c2a297c99d02c/siosocks-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "d7a2e05812825977e2df3442eeb757d4", "sha256": "344dd80ac5bd139a4b401589dd7158a22e06472c429f482b2d2fc6733cff219e"}, "downloads": -1, "filename": "siosocks-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d7a2e05812825977e2df3442eeb757d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 13830, "upload_time": "2019-09-21T14:57:45", "upload_time_iso_8601": "2019-09-21T14:57:45.287653Z", "url": "https://files.pythonhosted.org/packages/2f/15/346e0efe94011cb920e6d2b234e76c6f167b3c3a9d6546940006ad6f6b14/siosocks-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58989068597853af361cb8f72755b02a", "sha256": "fec516338e16a036b415a4e0468742d5648fa2c87b3b9802f3c04803d397bbda"}, "downloads": -1, "filename": "siosocks-0.1.0.tar.gz", "has_sig": false, "md5_digest": "58989068597853af361cb8f72755b02a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 45595, "upload_time": "2019-09-21T14:57:47", "upload_time_iso_8601": "2019-09-21T14:57:47.380317Z", "url": "https://files.pythonhosted.org/packages/62/50/d9783d11f39b072b60cc935ee13a52da1650faa9e26940ee5168ad49d281/siosocks-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7a2e05812825977e2df3442eeb757d4", "sha256": "344dd80ac5bd139a4b401589dd7158a22e06472c429f482b2d2fc6733cff219e"}, "downloads": -1, "filename": "siosocks-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d7a2e05812825977e2df3442eeb757d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 13830, "upload_time": "2019-09-21T14:57:45", "upload_time_iso_8601": "2019-09-21T14:57:45.287653Z", "url": "https://files.pythonhosted.org/packages/2f/15/346e0efe94011cb920e6d2b234e76c6f167b3c3a9d6546940006ad6f6b14/siosocks-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58989068597853af361cb8f72755b02a", "sha256": "fec516338e16a036b415a4e0468742d5648fa2c87b3b9802f3c04803d397bbda"}, "downloads": -1, "filename": "siosocks-0.1.0.tar.gz", "has_sig": false, "md5_digest": "58989068597853af361cb8f72755b02a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 45595, "upload_time": "2019-09-21T14:57:47", "upload_time_iso_8601": "2019-09-21T14:57:47.380317Z", "url": "https://files.pythonhosted.org/packages/62/50/d9783d11f39b072b60cc935ee13a52da1650faa9e26940ee5168ad49d281/siosocks-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:26 2020"}