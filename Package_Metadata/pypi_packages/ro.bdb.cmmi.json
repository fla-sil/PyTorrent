{"info": {"author": "Reed O'Brien", "author_email": "reed@koansys.com", "bugtrack_url": null, "classifiers": [], "description": "We have an archive with a demo foo tar ball:\r\n\r\n    >>> ls(distros)\r\n    -  foo.tgz\r\n\r\nLet's update a sample buildout to installs it:\r\n\r\n    >>> write('buildout.cfg',\r\n    ... \"\"\"\r\n    ... [buildout]\r\n    ... parts = foo\r\n    ...\r\n    ... [foo]\r\n    ... recipe = ro.bdb.cmmi\r\n    ... url = file://%s/foo.tgz\r\n    ... \"\"\" % distros)\r\n\r\nWe used the url option to specify the location of the archive.\r\n\r\nIf we run the buildout, the configure script in the archive is run.\r\nIt creates a make file which is also run:\r\n\r\n    >>> print system('bin/buildout'),\r\n    Installing foo.\r\n    foo: Downloading .../distros/foo.tgz\r\n    foo: Unpacking and configuring\r\n    configuring foo --prefix=/sample-buildout/parts/foo\r\n    echo building foo\r\n    building foo\r\n    echo installing foo\r\n    installing foo\r\n\r\nThe recipe also creates the parts directory:\r\n\r\n    >>> ls(sample_buildout, 'parts')\r\n    d  foo\r\n\r\nIf we run the buildout again, the update method will be called, which\r\ndoes nothing:\r\n\r\n    >>> print system('bin/buildout'),\r\n    Updating foo.\r\n\r\nYou can supply extra configure options:\r\n\r\n    >>> write('buildout.cfg',\r\n    ... \"\"\"\r\n    ... [buildout]\r\n    ... parts = foo\r\n    ...\r\n    ... [foo]\r\n    ... recipe = ro.bdb.cmmi\r\n    ... url = file://%s/foo.tgz\r\n    ... extra_options = -a -b c\r\n    ... \"\"\" % distros)\r\n\r\n    >>> print system('bin/buildout'),\r\n    Uninstalling foo.\r\n    Installing foo.\r\n    foo: Downloading .../distros/foo.tgz\r\n    foo: Unpacking and configuring\r\n    configuring foo --prefix=/sample-buildout/parts/foo -a -b c\r\n    echo building foo\r\n    building foo\r\n    echo installing foo\r\n    installing foo\r\n\r\nThe recipe sets the location option, which can be read by other\r\nrecipes, to the location where the part is installed:\r\n\r\n    >>> cat('.installed.cfg')\r\n    ... # doctest: +ELLIPSIS\r\n    [buildout]\r\n    installed_develop_eggs = \r\n    parts = foo\r\n    <BLANKLINE>\r\n    [foo]\r\n    __buildout_installed__ = /sample-buildout/parts/foo\r\n    ...\r\n    extra_options = -a -b c\r\n    location = /sample-buildout/parts/foo\r\n    ...\r\n\r\nSometimes it's necessary to patch the sources before building a package.\r\nYou can specify the name of the patch to apply and (optional) patch options:\r\n\r\nFirst of all let's write a patchfile:\r\n\r\n    >>> import sys\r\n    >>> mkdir('patches')\r\n    >>> write('patches/config.patch', \r\n    ... \"\"\"--- configure\r\n    ... +++ /dev/null\r\n    ... @@ -1,13 +1,13 @@\r\n    ...  #!%s\r\n    ...  import sys\r\n    ... -print \"configuring foo\", ' '.join(sys.argv[1:])\r\n    ... +print \"configuring foo patched\", ' '.join(sys.argv[1:])\r\n    ...  \r\n    ...  Makefile_template = '''\r\n    ...  all:\r\n    ... -\\techo building foo\r\n    ... +\\techo building foo patched\r\n    ...  \r\n    ...  install:\r\n    ... -\\techo installing foo\r\n    ... +\\techo installing foo patched\r\n    ...  '''\r\n    ...  \r\n    ...  open('Makefile', 'w').write(Makefile_template)\r\n    ... \r\n    ... \"\"\" % sys.executable)\r\n\r\nNow let's create a buildout.cfg file. Note: If no patch option is beeing \r\npassed, -p0 is appended by default.\r\n\r\n    >>> write('buildout.cfg',\r\n    ... \"\"\"\r\n    ... [buildout]\r\n    ... parts = foo\r\n    ...\r\n    ... [foo]\r\n    ... recipe = ro.bdb.cmmi\r\n    ... url = file://%s/foo.tgz\r\n    ... patch = ${buildout:directory}/patches/config.patch\r\n    ... patch_options = -p0\r\n    ... \"\"\" % distros)\r\n\r\n    >>> print system('bin/buildout'),\r\n    Uninstalling foo.\r\n    Installing foo.\r\n    foo: Downloading .../distros/foo.tgz\r\n    foo: Unpacking and configuring\r\n    patching file configure\r\n    configuring foo patched --prefix=/sample_buildout/parts/foo\r\n    echo building foo patched\r\n    building foo patched\r\n    echo installing foo patched\r\n    installing foo patched\r\n    \r\n\r\nDownload Cache\r\n**************\r\nThe recipe supports use of a download cache in the same way\r\nas zc.buildout. See downloadcache.txt for details\r\n\r\nDownload\r\n**********************", "description_content_type": null, "docs_url": null, "download_url": "http://ro-bdb-cmmi.googlecode.com/files/ro.bdb.cmmi-1.0.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.python.org/pypi/ro.bdb.cmmi", "keywords": "zope3", "license": "ZPL 2.1", "maintainer": "", "maintainer_email": "", "name": "ro.bdb.cmmi", "package_url": "https://pypi.org/project/ro.bdb.cmmi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ro.bdb.cmmi/", "project_urls": {"Download": "http://ro-bdb-cmmi.googlecode.com/files/ro.bdb.cmmi-1.0.5.tar.gz", "Homepage": "http://www.python.org/pypi/ro.bdb.cmmi"}, "release_url": "https://pypi.org/project/ro.bdb.cmmi/1.0.5/", "requires_dist": null, "requires_python": null, "summary": "ZC Buildout recipe for BDB configure/make/make install", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>We have an archive with a demo foo tar ball:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ls(distros)\n-  foo.tgz\n</pre>\n</blockquote>\n<p>Let\u2019s update a sample buildout to installs it:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = ro.bdb.cmmi\n... url = file://%s/foo.tgz\n... \"\"\" % distros)\n</pre>\n</blockquote>\n<p>We used the url option to specify the location of the archive.</p>\n<p>If we run the buildout, the configure script in the archive is run.\nIt creates a make file which is also run:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print system('bin/buildout'),\nInstalling foo.\nfoo: Downloading .../distros/foo.tgz\nfoo: Unpacking and configuring\nconfiguring foo --prefix=/sample-buildout/parts/foo\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n</pre>\n</blockquote>\n<p>The recipe also creates the parts directory:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; ls(sample_buildout, 'parts')\nd  foo\n</pre>\n</blockquote>\n<p>If we run the buildout again, the update method will be called, which\ndoes nothing:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print system('bin/buildout'),\nUpdating foo.\n</pre>\n</blockquote>\n<p>You can supply extra configure options:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = ro.bdb.cmmi\n... url = file://%s/foo.tgz\n... extra_options = -a -b c\n... \"\"\" % distros)\n</pre>\n<pre>&gt;&gt;&gt; print system('bin/buildout'),\nUninstalling foo.\nInstalling foo.\nfoo: Downloading .../distros/foo.tgz\nfoo: Unpacking and configuring\nconfiguring foo --prefix=/sample-buildout/parts/foo -a -b c\necho building foo\nbuilding foo\necho installing foo\ninstalling foo\n</pre>\n</blockquote>\n<p>The recipe sets the location option, which can be read by other\nrecipes, to the location where the part is installed:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; cat('.installed.cfg')\n... # doctest: +ELLIPSIS\n[buildout]\ninstalled_develop_eggs =\nparts = foo\n&lt;BLANKLINE&gt;\n[foo]\n__buildout_installed__ = /sample-buildout/parts/foo\n...\nextra_options = -a -b c\nlocation = /sample-buildout/parts/foo\n...\n</pre>\n</blockquote>\n<p>Sometimes it\u2019s necessary to patch the sources before building a package.\nYou can specify the name of the patch to apply and (optional) patch options:</p>\n<p>First of all let\u2019s write a patchfile:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import sys\n&gt;&gt;&gt; mkdir('patches')\n&gt;&gt;&gt; write('patches/config.patch',\n... \"\"\"--- configure\n... +++ /dev/null\n... @@ -1,13 +1,13 @@\n...  #!%s\n...  import sys\n... -print \"configuring foo\", ' '.join(sys.argv[1:])\n... +print \"configuring foo patched\", ' '.join(sys.argv[1:])\n...\n...  Makefile_template = '''\n...  all:\n... -\\techo building foo\n... +\\techo building foo patched\n...\n...  install:\n... -\\techo installing foo\n... +\\techo installing foo patched\n...  '''\n...\n...  open('Makefile', 'w').write(Makefile_template)\n...\n... \"\"\" % sys.executable)\n</pre>\n</blockquote>\n<p>Now let\u2019s create a buildout.cfg file. Note: If no patch option is beeing\npassed, -p0 is appended by default.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = foo\n...\n... [foo]\n... recipe = ro.bdb.cmmi\n... url = file://%s/foo.tgz\n... patch = ${buildout:directory}/patches/config.patch\n... patch_options = -p0\n... \"\"\" % distros)\n</pre>\n<pre>&gt;&gt;&gt; print system('bin/buildout'),\nUninstalling foo.\nInstalling foo.\nfoo: Downloading .../distros/foo.tgz\nfoo: Unpacking and configuring\npatching file configure\nconfiguring foo patched --prefix=/sample_buildout/parts/foo\necho building foo patched\nbuilding foo patched\necho installing foo patched\ninstalling foo patched\n</pre>\n</blockquote>\n<div id=\"download-cache\">\n<h2>Download Cache</h2>\n<p>The recipe supports use of a download cache in the same way\nas zc.buildout. See downloadcache.txt for details</p>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n</div>\n\n          </div>"}, "last_serial": 803301, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1b5f1c69c71191e1003e94855d8f0f5f", "sha256": "ddfbe18e324b27153e336ae4c9f57ce119ed12d5c91af8466635ef906a50ae7d"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.0-py2.4.egg", "has_sig": false, "md5_digest": "1b5f1c69c71191e1003e94855d8f0f5f", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12866, "upload_time": "2008-02-23T20:16:51", "upload_time_iso_8601": "2008-02-23T20:16:51Z", "url": "https://files.pythonhosted.org/packages/98/e4/fb5a9f36bfee99b6b570e9fe44e308a136e055ff6509586b87351a8ad374/ro.bdb.cmmi-1.0.0-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccf18689f242db6f88f42e07d3cccd71", "sha256": "7205cd0ede6a64d5ca2e6020eb6c42c5af60d5f0d07615b544ecea3d00c61405"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.0-py2.5.egg", "has_sig": false, "md5_digest": "ccf18689f242db6f88f42e07d3cccd71", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 12792, "upload_time": "2008-02-23T20:16:38", "upload_time_iso_8601": "2008-02-23T20:16:38Z", "url": "https://files.pythonhosted.org/packages/f9/52/99519b817c6c5dc07a3c347421ac3510a0885d2f20bb519eb3f53b3cd447/ro.bdb.cmmi-1.0.0-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e090f6cba11e75fd05b58d9dc68b7e4", "sha256": "b4b33c08cfd2d06379db53e20aa1b45d58bf3fcb91f7c52be0e03702cdfb7686"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3e090f6cba11e75fd05b58d9dc68b7e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7197, "upload_time": "2008-02-23T20:17:04", "upload_time_iso_8601": "2008-02-23T20:17:04Z", "url": "https://files.pythonhosted.org/packages/15/ef/8ae2089aad5b28cf2349d933f8295771dbe53b573d20986884d88aff1469/ro.bdb.cmmi-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2939aa37b146199ab55c5982946384ed", "sha256": "f5fd74e028e918580f8cf1924c0137fdf7bb1107e4a466e1de2233d07f3bb3a5"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.1.tar.gz", "has_sig": false, "md5_digest": "2939aa37b146199ab55c5982946384ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6369, "upload_time": "2009-05-03T06:51:18", "upload_time_iso_8601": "2009-05-03T06:51:18.434555Z", "url": "https://files.pythonhosted.org/packages/1b/df/cf1aaf0d150fa8c5c186209e99e5c484f2583861c658e417ad6b11496f7f/ro.bdb.cmmi-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "56cc2ef4a9237e9b02003bcb15c6a81b", "sha256": "e8dec7efbc009cc9eff87a0f3a9bd799510fcd2d5c9c48402c3e39ddff4270b2"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.2.tar.gz", "has_sig": false, "md5_digest": "56cc2ef4a9237e9b02003bcb15c6a81b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6265, "upload_time": "2009-05-03T07:14:47", "upload_time_iso_8601": "2009-05-03T07:14:47.108065Z", "url": "https://files.pythonhosted.org/packages/28/37/21ebc372b993404c21fd261c6ad778cebbdc03508bca3a702443f1e0c68a/ro.bdb.cmmi-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "7602edc762dd346f64ef39fe1f3b87a8", "sha256": "9304aa2c8121c5e924ac9ce737deef9215f7d9ecaca8bffea898ac15d5370e22"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.3.tar.gz", "has_sig": false, "md5_digest": "7602edc762dd346f64ef39fe1f3b87a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6184, "upload_time": "2009-05-03T07:19:21", "upload_time_iso_8601": "2009-05-03T07:19:21.901554Z", "url": "https://files.pythonhosted.org/packages/be/0a/78b2768bd99a69d505042b56887e2285ce47f194ac4cbb2ca9cd87fc6089/ro.bdb.cmmi-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2af006f5ddafa8794be461836d1aa8a3", "sha256": "c5bf31a73fd9f890e61d54171b3867cc02840081e6d7d935543d570d54462c9c"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.4.tar.gz", "has_sig": false, "md5_digest": "2af006f5ddafa8794be461836d1aa8a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6121, "upload_time": "2009-05-03T07:21:39", "upload_time_iso_8601": "2009-05-03T07:21:39.929008Z", "url": "https://files.pythonhosted.org/packages/ab/94/7fa853cb7cbcbc096ba8d5432ce30a585a272a2bf3e16738095d5788e25d/ro.bdb.cmmi-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "7b8488b3e43acedc9019f4830f489d29", "sha256": "b0dde77ae2d3315b80062dc7a0762cb4ed69b0074b6936c56e244e8f2653ac96"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.5.tar.gz", "has_sig": false, "md5_digest": "7b8488b3e43acedc9019f4830f489d29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5722, "upload_time": "2009-05-03T07:23:07", "upload_time_iso_8601": "2009-05-03T07:23:07.492618Z", "url": "https://files.pythonhosted.org/packages/41/74/63d15c0a07031d8cd3e25fe9fd5147a73849761a6a29aa34e116dc9069ba/ro.bdb.cmmi-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b8488b3e43acedc9019f4830f489d29", "sha256": "b0dde77ae2d3315b80062dc7a0762cb4ed69b0074b6936c56e244e8f2653ac96"}, "downloads": -1, "filename": "ro.bdb.cmmi-1.0.5.tar.gz", "has_sig": false, "md5_digest": "7b8488b3e43acedc9019f4830f489d29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5722, "upload_time": "2009-05-03T07:23:07", "upload_time_iso_8601": "2009-05-03T07:23:07.492618Z", "url": "https://files.pythonhosted.org/packages/41/74/63d15c0a07031d8cd3e25fe9fd5147a73849761a6a29aa34e116dc9069ba/ro.bdb.cmmi-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:05 2020"}