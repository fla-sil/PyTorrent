{"info": {"author": "Javad Shafique", "author_email": "javadshafique@hotmail.com", "bugtrack_url": null, "classifiers": [], "description": "A argument parsing module that also can run commands.\n\nNote the argc.get key is the string but only if the argument started with an \"-\"\nif it started with \"--\" then you can use it by added and \"-\" in front of the string\n```py\nargc().get(\"s\") # - short\nargc().get(\"-long\") # -- long\n```\n\n## Changelog\n2.1.0 - single file version\n\n2.0.2 - Bugfixes\n\n2.0.1 - Fixed detectType for python2\n\n2.0.0 - Added tests working way better now\n\n1.1.3 - stupid dots\n\n1.1.2 - removed / in as an arguement\n\n1.1.1 - Some more bugfixes!\n\n1.1.0 - Thought so. and python2 support\n\n1.0.2 - Confusion\n\n1.0.1 - Bugfix\n\n1.0.0 - Release\n\n\n### Example 1\n```py\nfrom argc import argc\n\nif __name__ import \"__main__\":\n    # for python 2 do as it does not support charectar conversion\n    # args = argc(sys.argv, False)\n    args = argc() # uses sys.argv by default\n    args.add(\"version\", 10.0, True) # the true means that it will exit when the command is done\n    args.add(\"func\", lambda: 100**10, True) # real time calculations and running of functions\n    args.add(\"func_2\", functionname) # or just a function\n    args.add(\"help\", [\n        \"It also supports lists for multi-line prints\",\n        \"With support for {}\".format(\"functions\"),\n        lambda: 10-9**10,\n        \"So yeah... Awsome\"\n    ], True)\n\n    args.run() # checks and runs arguments (can stop program)\n\n    args.get(\"-config_name\", True) # get config if by default it will return Value but\n    # add True it will return True/False\n```\n\n### Example 2\n```py\n# example program that takes some arguments\n# run as ${python} test.py ${args}\n\nimport random\nfrom argc import argc\n\n__version__ = \"1.0.0\"\n__author__ = \"Monty python\"\n__package__ = \"STRING RING\"\n __help__ = [\n    \"Usage: \",\n    \"   import STRING_RING as sr\",\n    \"   tone = 10\",\n    \"   sr.RING(tone)\",\n    \"Author: {}\".format(__author__),\n    \"Name: %(__package__)s\"\n]\n\n\n# arguments are case sensetive but the -- and - is stripped\n# so you only need the names. but that also means that -hallo,  --hallo and /hallo \n# all triggers the hello command\n# option\n\nif __name__ == \"__main__\":\n    args = argc() # uses sys.argv by default\n    args.add(\"help\", __help__, True) # exits on help\n    args.add(\"version\", __version__,  True)\n    # supports functions (prints return value)\n    args.add(\"func\", lambda: random.randint(0, 10**10), True)\n    # checks and runs commands\n    args.run() \n\n    # code after .run\n    \n    # Use .get for config\n    if args.get(\"useL\"):\n        print(\"Using L\")\n    else:\n        print(\"am not using L\")\n\n    # and for custom config using long\n    print(args.get(\"-config\", False)) # Use raw data returns None if it does not exist \n```", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JavadSM/argc", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "argc", "package_url": "https://pypi.org/project/argc/", "platform": "", "project_url": "https://pypi.org/project/argc/", "project_urls": {"Homepage": "https://github.com/JavadSM/argc"}, "release_url": "https://pypi.org/project/argc/2.1.0/", "requires_dist": null, "requires_python": "", "summary": "A argument parsing module for python 2 and 3", "version": "2.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            A argument parsing module that also can run commands.<br><br>Note the argc.get key is the string but only if the argument started with an \"-\"<br>if it started with \"--\" then you can use it by added and \"-\" in front of the string<br>```py<br>argc().get(\"s\") # - short<br>argc().get(\"-long\") # -- long<br>```<br><br>## Changelog<br>2.1.0 - single file version<br><br>2.0.2 - Bugfixes<br><br>2.0.1 - Fixed detectType for python2<br><br>2.0.0 - Added tests working way better now<br><br>1.1.3 - stupid dots<br><br>1.1.2 - removed / in as an arguement<br><br>1.1.1 - Some more bugfixes!<br><br>1.1.0 - Thought so. and python2 support<br><br>1.0.2 - Confusion<br><br>1.0.1 - Bugfix<br><br>1.0.0 - Release<br><br><br>### Example 1<br>```py<br>from argc import argc<br><br>if __name__ import \"__main__\":<br>    # for python 2 do as it does not support charectar conversion<br>    # args = argc(sys.argv, False)<br>    args = argc() # uses sys.argv by default<br>    args.add(\"version\", 10.0, True) # the true means that it will exit when the command is done<br>    args.add(\"func\", lambda: 100**10, True) # real time calculations and running of functions<br>    args.add(\"func_2\", functionname) # or just a function<br>    args.add(\"help\", [<br>        \"It also supports lists for multi-line prints\",<br>        \"With support for {}\".format(\"functions\"),<br>        lambda: 10-9**10,<br>        \"So yeah... Awsome\"<br>    ], True)<br><br>    args.run() # checks and runs arguments (can stop program)<br><br>    args.get(\"-config_name\", True) # get config if by default it will return Value but<br>    # add True it will return True/False<br>```<br><br>### Example 2<br>```py<br># example program that takes some arguments<br># run as ${python} test.py ${args}<br><br>import random<br>from argc import argc<br><br>__version__ = \"1.0.0\"<br>__author__ = \"Monty python\"<br>__package__ = \"STRING RING\"<br> __help__ = [<br>    \"Usage: \",<br>    \"   import STRING_RING as sr\",<br>    \"   tone = 10\",<br>    \"   sr.RING(tone)\",<br>    \"Author: {}\".format(__author__),<br>    \"Name: %(__package__)s\"<br>]<br><br><br># arguments are case sensetive but the -- and - is stripped<br># so you only need the names. but that also means that -hallo,  --hallo and /hallo <br># all triggers the hello command<br># option<br><br>if __name__ == \"__main__\":<br>    args = argc() # uses sys.argv by default<br>    args.add(\"help\", __help__, True) # exits on help<br>    args.add(\"version\", __version__,  True)<br>    # supports functions (prints return value)<br>    args.add(\"func\", lambda: random.randint(0, 10**10), True)<br>    # checks and runs commands<br>    args.run() <br><br>    # code after .run<br>    <br>    # Use .get for config<br>    if args.get(\"useL\"):<br>        print(\"Using L\")<br>    else:<br>        print(\"am not using L\")<br><br>    # and for custom config using long<br>    print(args.get(\"-config\", False)) # Use raw data returns None if it does not exist <br>```\n          </div>"}, "last_serial": 3514623, "releases": {"1.1.3": [{"comment_text": "", "digests": {"md5": "ee01fc38b829cd0b36016e14eae0934b", "sha256": "e8f7d3606954783a71c4ab0623694112ae9eb6a34b9bef2ff33751dee971a90c"}, "downloads": -1, "filename": "argc-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ee01fc38b829cd0b36016e14eae0934b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3378, "upload_time": "2018-01-09T10:56:38", "upload_time_iso_8601": "2018-01-09T10:56:38.272342Z", "url": "https://files.pythonhosted.org/packages/16/16/16bc964e22f6da3a7acd5f39abcf5f61ded7cdbccfbac2f3955c55502698/argc-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "83e5e8525bf9fc4ebfeb9a377e7ac2c6", "sha256": "3f12a5b874081f28d67c49525ee0497b45de1bf27c46594f9cf6810f9fdb9657"}, "downloads": -1, "filename": "argc-1.1.4.tar.gz", "has_sig": false, "md5_digest": "83e5e8525bf9fc4ebfeb9a377e7ac2c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3387, "upload_time": "2018-01-09T11:01:43", "upload_time_iso_8601": "2018-01-09T11:01:43.620100Z", "url": "https://files.pythonhosted.org/packages/39/80/0de0f3902df70bbbea3658a01be13580e3ea1838b8ade46a073b2cbd732d/argc-1.1.4.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "526cc433e58916d82f71597fdb2bb3e5", "sha256": "f691f385f5271dbfb0c7a9f80f2277c5c518f03600f1defdb7e41ab58437443d"}, "downloads": -1, "filename": "argc-2.0.0.tar.gz", "has_sig": false, "md5_digest": "526cc433e58916d82f71597fdb2bb3e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3879, "upload_time": "2018-01-10T09:26:20", "upload_time_iso_8601": "2018-01-10T09:26:20.126258Z", "url": "https://files.pythonhosted.org/packages/ac/8a/22b64907374a17fcebc36ef2b63007772625fedc10474a0963ec67b3b284/argc-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "5484aab34ad628ac3756527650855841", "sha256": "a8639c8df4c75ac2b925b2ab1734c2e226c48a48400ebd5bf8e192ea0b2dd831"}, "downloads": -1, "filename": "argc-2.0.1.tar.gz", "has_sig": false, "md5_digest": "5484aab34ad628ac3756527650855841", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4317, "upload_time": "2018-01-13T13:58:58", "upload_time_iso_8601": "2018-01-13T13:58:58.534651Z", "url": "https://files.pythonhosted.org/packages/9f/6f/798a386736ad6f1371b24b72eaec14ecc5b41283c9ea4ad2ff8b7f5672b8/argc-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "c8ca68dacee242189805bc6a9d2c1bf5", "sha256": "3d1c169c40374de5f40544d83f8aae5f3f0231ed84803a4bdeed366692f728ad"}, "downloads": -1, "filename": "argc-2.0.2.tar.gz", "has_sig": false, "md5_digest": "c8ca68dacee242189805bc6a9d2c1bf5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4335, "upload_time": "2018-01-13T14:05:44", "upload_time_iso_8601": "2018-01-13T14:05:44.859976Z", "url": "https://files.pythonhosted.org/packages/d7/50/6dd68ce88625e8c2eaf1bb984c7674e8dc9c822f20aa88eaebaf44346b71/argc-2.0.2.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "5732dc1c52329fe49193c95c463cac8f", "sha256": "2e442d1420c016d25aab97217f87a2c4a5564c9f8fcf254dddb3d40f778e8d1d"}, "downloads": -1, "filename": "argc-2.1.0.tar.gz", "has_sig": false, "md5_digest": "5732dc1c52329fe49193c95c463cac8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4179, "upload_time": "2018-01-23T17:23:12", "upload_time_iso_8601": "2018-01-23T17:23:12.348013Z", "url": "https://files.pythonhosted.org/packages/1c/d7/fc8550b3089ae8369b50e4c3d9ee3c6a13e0e4f06f60f390f83468edbd8d/argc-2.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5732dc1c52329fe49193c95c463cac8f", "sha256": "2e442d1420c016d25aab97217f87a2c4a5564c9f8fcf254dddb3d40f778e8d1d"}, "downloads": -1, "filename": "argc-2.1.0.tar.gz", "has_sig": false, "md5_digest": "5732dc1c52329fe49193c95c463cac8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4179, "upload_time": "2018-01-23T17:23:12", "upload_time_iso_8601": "2018-01-23T17:23:12.348013Z", "url": "https://files.pythonhosted.org/packages/1c/d7/fc8550b3089ae8369b50e4c3d9ee3c6a13e0e4f06f60f390f83468edbd8d/argc-2.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:19 2020"}