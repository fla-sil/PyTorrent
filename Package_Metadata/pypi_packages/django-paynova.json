{"info": {"author": "Andrey Kolpakov", "author_email": "aakolpakov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: PyPy"], "description": "Paynova Aero for Django\n=======================\n\nImplementation of `Paynova\nAero <http://docs.paynova.com/display/AERO/Payment+Flow>`__ work flow\nfor Django. Using `Paynova\nAPI <http://docs.paynova.com/display/API/Paynova+API+Home>`__ python\nlibrary:\n`paynova-api-python-client <https://github.com/akolpakov/paynova-api-python-client>`__.\n\nInstallation\n============\n\n1. Install ``django-paynova``:\n\n   ::\n\n       pip install django-paynova\n\n   Python 2.7, 3.3, 3.4, PyPy are supported Django 1.6, 1.7 are\n   supported\n\n2. Add ``django-paynova`` to ``INSTALLED_APPS``:\n\n   .. code:: python\n\n       INSTALLED_APPS = (\n           ...\n           'django_paynova',\n           ...\n       )\n\n3. Configure settings:\n\n   .. code:: python\n\n       PAYNOVA_MERCHANT_ID = 'MERCHANT_ID'\n       PAYNOVA_PASSWORD = 'PASSWORD'\n       PAYNOVA_SECRET = 'SECRET'\n       PAYNOVA_CALLBACK_URL = 'http://mysite.com'\n\n   For production:\n\n   .. code:: python\n\n       PAYNOVA_LIVE = True\n\n4. Run ``./manage migrate``\n\n5. Add urls to handle Paynova's callbacks:\n\n   .. code:: python\n\n       urlpatterns = patterns('',\n           url(r'^(?i)payments/paynova/', include('django_paynova.urls')),\n       )\n\nUsage\n=====\n\n1. Create order and init payment with default params:\n\n   .. code:: python\n\n       from django_paynova import create_order, PaynovaException\n       try:\n           pp = create_order({\n               'orderNumber': '0001',\n               'currencyCode': 'EUR',\n               'totalAmount': 10\n           })\n           # TODO: redirect to pp.url\n       except PaynovaException as e:\n           # TODO: handle exception\n\n   ``create_order`` takes dictionary with `Create Order\n   parameters <http://docs.paynova.com/display/API/Create+Order>`__\n\n2. Handle `Event Hook\n   Notifications <http://docs.paynova.com/display/EVENTHOOKS/Event+Hook+Notifications+Home>`__:\n\n   .. code:: python\n\n       from django.dispatch import receiver\n       from django_paynova.signals import paynova_payment\n\n       @receiver(paynova_payment)\n       def paynova_payment_signal(sender, status, params, **kwargs):\n           # TODO: handle paynova payment notification\n\n   where\n\n   -  ``sender`` - PaynovaPayment model\n   -  ``status`` - status of payment\n   -  ``params`` - `payment\n      params <http://docs.paynova.com/display/EVENTHOOKS/EHN%3A+Payment>`__\n      from Paynova\n\nAdvanced\n~~~~~~~~\n\nAlso you can create order and initialize payment separately:\n\n.. code:: python\n\n    from django_paynova import create_order, initialize_payment, PaynovaException\n    try:\n\n        # create order\n\n        pp = create_order({\n            'orderNumber': '0005',\n            'currencyCode': 'EUR',\n            'totalAmount': 10\n        }, init_payment=False)\n\n        # init payment. http://docs.paynova.com/display/API/Initialize+Payment\n\n        pp = initialize_payment({'orderId': pp.order_id})\n\n        # TODO: redirect to pp.url\n\n    except PaynovaException as e:\n        # TODO: handle exception\n\n-  ``create_order`` takes dictionary with `Create Order\n   parameters <http://docs.paynova.com/display/API/Create+Order>`__\n-  ``initialize_payment`` takes dictionary with `Initialize Payment\n   parameters <http://docs.paynova.com/display/API/Initialize+Payment>`__\n\nErrors\n~~~~~~\n\nIf Paynova return an error, ``PaynovaException`` will be raised\n\n.. code:: python\n\n    from django-paynova import create_order, PaynovaException\n\n    try:\n        pp = create_order()\n    except PaynovaException as e:\n        # process exception\n        # e.errorNumber, e.statusKey, e.statusMessage, e.errors\n        pass\n\nTests\n=====\n\nAt first make sure that you are in virtualenv.\n\nInstall all dependencies:\n\n::\n\n    make setup\n\nTo run tests:\n\n::\n\n    make test\n\nLicense\n=======\n\n`MIT licence <./LICENSE>`__", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/akolpakov/django-paynova", "keywords": "Paynova API client python django", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-paynova", "package_url": "https://pypi.org/project/django-paynova/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-paynova/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/akolpakov/django-paynova"}, "release_url": "https://pypi.org/project/django-paynova/0.1.6/", "requires_dist": null, "requires_python": null, "summary": "Python client for Paynova's API. For Django framework.", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"paynova-aero-for-django\">\n<h2>Paynova Aero for Django</h2>\n<p>Implementation of <a href=\"http://docs.paynova.com/display/AERO/Payment+Flow\" rel=\"nofollow\">Paynova\nAero</a> work flow\nfor Django. Using <a href=\"http://docs.paynova.com/display/API/Paynova+API+Home\" rel=\"nofollow\">Paynova\nAPI</a> python\nlibrary:\n<a href=\"https://github.com/akolpakov/paynova-api-python-client\" rel=\"nofollow\">paynova-api-python-client</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Install <tt><span class=\"pre\">django-paynova</span></tt>:</p>\n<pre>pip install django-paynova\n</pre>\n<p>Python 2.7, 3.3, 3.4, PyPy are supported Django 1.6, 1.7 are\nsupported</p>\n</li>\n<li><p>Add <tt><span class=\"pre\">django-paynova</span></tt> to <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_paynova'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Configure settings:</p>\n<pre><span class=\"n\">PAYNOVA_MERCHANT_ID</span> <span class=\"o\">=</span> <span class=\"s1\">'MERCHANT_ID'</span>\n<span class=\"n\">PAYNOVA_PASSWORD</span> <span class=\"o\">=</span> <span class=\"s1\">'PASSWORD'</span>\n<span class=\"n\">PAYNOVA_SECRET</span> <span class=\"o\">=</span> <span class=\"s1\">'SECRET'</span>\n<span class=\"n\">PAYNOVA_CALLBACK_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'http://mysite.com'</span>\n</pre>\n<p>For production:</p>\n<pre><span class=\"n\">PAYNOVA_LIVE</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n</li>\n<li><p>Run <tt>./manage migrate</tt></p>\n</li>\n<li><p>Add urls to handle Paynova\u2019s callbacks:</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^(?i)payments/paynova/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'django_paynova.urls'</span><span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<ol>\n<li><p>Create order and init payment with default params:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_paynova</span> <span class=\"kn\">import</span> <span class=\"n\">create_order</span><span class=\"p\">,</span> <span class=\"n\">PaynovaException</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">pp</span> <span class=\"o\">=</span> <span class=\"n\">create_order</span><span class=\"p\">({</span>\n        <span class=\"s1\">'orderNumber'</span><span class=\"p\">:</span> <span class=\"s1\">'0001'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'currencyCode'</span><span class=\"p\">:</span> <span class=\"s1\">'EUR'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'totalAmount'</span><span class=\"p\">:</span> <span class=\"mi\">10</span>\n    <span class=\"p\">})</span>\n    <span class=\"c1\"># TODO: redirect to pp.url</span>\n<span class=\"k\">except</span> <span class=\"n\">PaynovaException</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"c1\"># TODO: handle exception</span>\n</pre>\n<p><tt>create_order</tt> takes dictionary with <a href=\"http://docs.paynova.com/display/API/Create+Order\" rel=\"nofollow\">Create Order\nparameters</a></p>\n</li>\n<li><p>Handle <a href=\"http://docs.paynova.com/display/EVENTHOOKS/Event+Hook+Notifications+Home\" rel=\"nofollow\">Event Hook\nNotifications</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.dispatch</span> <span class=\"kn\">import</span> <span class=\"n\">receiver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_paynova.signals</span> <span class=\"kn\">import</span> <span class=\"n\">paynova_payment</span>\n\n<span class=\"nd\">@receiver</span><span class=\"p\">(</span><span class=\"n\">paynova_payment</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">paynova_payment_signal</span><span class=\"p\">(</span><span class=\"n\">sender</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># TODO: handle paynova payment notification</span>\n</pre>\n<p>where</p>\n<ul>\n<li><tt>sender</tt> - PaynovaPayment model</li>\n<li><tt>status</tt> - status of payment</li>\n<li><tt>params</tt> - <a href=\"http://docs.paynova.com/display/EVENTHOOKS/EHN%3A+Payment\" rel=\"nofollow\">payment\nparams</a>\nfrom Paynova</li>\n</ul>\n</li>\n</ol>\n<div id=\"advanced\">\n<h3>Advanced</h3>\n<p>Also you can create order and initialize payment separately:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_paynova</span> <span class=\"kn\">import</span> <span class=\"n\">create_order</span><span class=\"p\">,</span> <span class=\"n\">initialize_payment</span><span class=\"p\">,</span> <span class=\"n\">PaynovaException</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"c1\"># create order</span>\n\n    <span class=\"n\">pp</span> <span class=\"o\">=</span> <span class=\"n\">create_order</span><span class=\"p\">({</span>\n        <span class=\"s1\">'orderNumber'</span><span class=\"p\">:</span> <span class=\"s1\">'0005'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'currencyCode'</span><span class=\"p\">:</span> <span class=\"s1\">'EUR'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'totalAmount'</span><span class=\"p\">:</span> <span class=\"mi\">10</span>\n    <span class=\"p\">},</span> <span class=\"n\">init_payment</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># init payment. http://docs.paynova.com/display/API/Initialize+Payment</span>\n\n    <span class=\"n\">pp</span> <span class=\"o\">=</span> <span class=\"n\">initialize_payment</span><span class=\"p\">({</span><span class=\"s1\">'orderId'</span><span class=\"p\">:</span> <span class=\"n\">pp</span><span class=\"o\">.</span><span class=\"n\">order_id</span><span class=\"p\">})</span>\n\n    <span class=\"c1\"># TODO: redirect to pp.url</span>\n\n<span class=\"k\">except</span> <span class=\"n\">PaynovaException</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"c1\"># TODO: handle exception</span>\n</pre>\n<ul>\n<li><tt>create_order</tt> takes dictionary with <a href=\"http://docs.paynova.com/display/API/Create+Order\" rel=\"nofollow\">Create Order\nparameters</a></li>\n<li><tt>initialize_payment</tt> takes dictionary with <a href=\"http://docs.paynova.com/display/API/Initialize+Payment\" rel=\"nofollow\">Initialize Payment\nparameters</a></li>\n</ul>\n</div>\n<div id=\"errors\">\n<h3>Errors</h3>\n<p>If Paynova return an error, <tt>PaynovaException</tt> will be raised</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django</span><span class=\"o\">-</span><span class=\"n\">paynova</span> <span class=\"kn\">import</span> <span class=\"nn\">create_order</span><span class=\"o\">,</span> <span class=\"nn\">PaynovaException</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">pp</span> <span class=\"o\">=</span> <span class=\"n\">create_order</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"n\">PaynovaException</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"c1\"># process exception</span>\n    <span class=\"c1\"># e.errorNumber, e.statusKey, e.statusMessage, e.errors</span>\n    <span class=\"k\">pass</span>\n</pre>\n</div>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>At first make sure that you are in virtualenv.</p>\n<p>Install all dependencies:</p>\n<pre>make setup\n</pre>\n<p>To run tests:</p>\n<pre>make test\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"./LICENSE\" rel=\"nofollow\">MIT licence</a></p>\n</div>\n\n          </div>"}, "last_serial": 1626018, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0a0498bda6284a91fd32a5043f56ac9e", "sha256": "d34201b59072ac69199bc4c33ec4b1d4f99594df1be1f93a9e2935f31f99cf75"}, "downloads": -1, "filename": "django-paynova-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0a0498bda6284a91fd32a5043f56ac9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9299, "upload_time": "2015-03-10T16:33:17", "upload_time_iso_8601": "2015-03-10T16:33:17.131228Z", "url": "https://files.pythonhosted.org/packages/0b/58/13083c2d733bf62790ea6b72ae0e88141b2b2b0c4d570d0a826d5a113df6/django-paynova-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c8589dfcd7bb9f184008de76762ce0f1", "sha256": "4d21d026c57ebdadc8c9036f62eaf01f45479b08d63c11572569ecaee0c171a9"}, "downloads": -1, "filename": "django-paynova-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c8589dfcd7bb9f184008de76762ce0f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9351, "upload_time": "2015-03-10T17:37:01", "upload_time_iso_8601": "2015-03-10T17:37:01.414354Z", "url": "https://files.pythonhosted.org/packages/85/ad/ef23bd54367e676ec8e7ec745ef65e6e40cbae07e9825084b995d22958b6/django-paynova-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "d3515062ba5f34c3824f23c65106388c", "sha256": "597881753300456836ac54a5363d0694b7510148eaf515c789af82e1d9582944"}, "downloads": -1, "filename": "django-paynova-0.1.2.tar.gz", "has_sig": false, "md5_digest": "d3515062ba5f34c3824f23c65106388c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9695, "upload_time": "2015-03-10T18:02:19", "upload_time_iso_8601": "2015-03-10T18:02:19.637316Z", "url": "https://files.pythonhosted.org/packages/66/b1/d1b7d7f2f91a910dcf58f7670ff4bbee317cfd3de427d43131aaf512299b/django-paynova-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "530b186f022f6b6ad8a4deff60233c3d", "sha256": "77add8991c835e56e317afa11838b48c9be819c0f1d679cc875c056d41a0d69c"}, "downloads": -1, "filename": "django-paynova-0.1.3.tar.gz", "has_sig": false, "md5_digest": "530b186f022f6b6ad8a4deff60233c3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9556, "upload_time": "2015-03-11T11:01:37", "upload_time_iso_8601": "2015-03-11T11:01:37.463884Z", "url": "https://files.pythonhosted.org/packages/81/06/2dd47cbc0db69d7bca5da34d25c1d7d5fdd7b19fc8e97619abafc276705b/django-paynova-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "6ecd0a4e590c3b5dcdb02ecf0937cfd1", "sha256": "5ba8913d44628ee8553d5da79ad89b0a05513afc3f6e3889aad60bf944f5bfd2"}, "downloads": -1, "filename": "django-paynova-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6ecd0a4e590c3b5dcdb02ecf0937cfd1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9758, "upload_time": "2015-03-12T13:54:18", "upload_time_iso_8601": "2015-03-12T13:54:18.769755Z", "url": "https://files.pythonhosted.org/packages/e3/40/ff777da74ba125f4287a21139dda12e9c03c574f2dafca591a1360cef429/django-paynova-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1760ecd78876bf082d151e7a7bfcfaf4", "sha256": "01323e710bb84c0a4934ce5ad5db344f3133ee6705f965b2007fac09db1324bb"}, "downloads": -1, "filename": "django-paynova-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1760ecd78876bf082d151e7a7bfcfaf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9833, "upload_time": "2015-05-29T08:07:58", "upload_time_iso_8601": "2015-05-29T08:07:58.003872Z", "url": "https://files.pythonhosted.org/packages/4d/24/51505c2680e6aaf400bf2e0307191fd8f2df6a75e5eff2f76666916242b4/django-paynova-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "9958e5624bfed0d9dc1d0730979464a2", "sha256": "252b7b8a00a01b08e1f0a145f9b58450b365f1b10bee50dc009241b67c4c0d7f"}, "downloads": -1, "filename": "django-paynova-0.1.6.tar.gz", "has_sig": false, "md5_digest": "9958e5624bfed0d9dc1d0730979464a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9985, "upload_time": "2015-07-09T09:16:51", "upload_time_iso_8601": "2015-07-09T09:16:51.162269Z", "url": "https://files.pythonhosted.org/packages/6b/fe/52093ffbdaf9c5d03e8740a354346a41e9225fd23f044b88e8a1069a6716/django-paynova-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9958e5624bfed0d9dc1d0730979464a2", "sha256": "252b7b8a00a01b08e1f0a145f9b58450b365f1b10bee50dc009241b67c4c0d7f"}, "downloads": -1, "filename": "django-paynova-0.1.6.tar.gz", "has_sig": false, "md5_digest": "9958e5624bfed0d9dc1d0730979464a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9985, "upload_time": "2015-07-09T09:16:51", "upload_time_iso_8601": "2015-07-09T09:16:51.162269Z", "url": "https://files.pythonhosted.org/packages/6b/fe/52093ffbdaf9c5d03e8740a354346a41e9225fd23f044b88e8a1069a6716/django-paynova-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:12 2020"}