{"info": {"author": "Sunil Thapa", "author_email": "sunil43thapa@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Extract meta data from video file\nMetadata is text inside the video file that references the video. The Meta information of a video shows that what is included in the video and what type of content is available in the video.\n\nBefore getting into extraction, first you need to install ffmpeg.\n## - Ubuntu\n*sudo apt-get install ffmpeg*\n## - Windows\nDownload ffmpeg software from [FFMPEG official website](https://www.ffmpeg.org/download.html#build-windows).\nUnzip the file and add the bin folder to **environment path**.\n\n### Using MediaInfo class\n```\n\tmedia_obj = Mediainfo()\n\tor\n\tmedia_obj = Mediainfo(VIDEO_PATH) # VIDEO_PATH must be string\n```\n> Set video path if not passed\n```\n\tmedia_obj.video_path = 'video_path'\n```\n\n> Get video path\n```\n\tVIDEO_PATH = media_obj.video_path\n```\n\n> Extract metadata\n```\n\tmetadata = media_obj.getVideoDetail()\n```\n\n## Sample of Metadata of video\n```\n{'DISPOSITION': {'default': '1', 'dub': '0', 'original': '0', 'comment': '0', 'lyrics': '0', 'karaoke': '0', 'forced': '0', 'hearing_impaired': '0', 'visual_impaired': '0', 'clean_effects': '0', 'attached_pic': '0', 'timed_thumbnails': '0'}, 'TAG': {'rotate': '90', 'creation_time': '2020-01-15T10:35:59.000000Z', 'language': 'eng', 'handler_name': 'VideoHandle'}, 'index': '0', 'codec_name': 'h264', 'codec_long_name': 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10', 'profile': 'High', 'codec_type': 'video', 'codec_time_base': '133393/3870000', 'codec_tag_string': 'avc1', 'codec_tag': '0x31637661', 'width': '1440', 'height': '1080', 'coded_width': '1440', 'coded_height': '1088', 'has_b_frames': '0', 'sample_aspect_ratio': '1:1', 'display_aspect_ratio': '4:3', 'pix_fmt': 'yuv420p', 'level': '40', 'color_range': 'tv', 'color_space': 'bt709', 'color_transfer': 'bt709', 'color_primaries': 'bt709', 'chroma_location': 'left', 'field_order': 'unknown', 'timecode': 'N/A', 'refs': '1', 'is_avc': 'true', 'nal_length_size': '4', 'id': 'N/A', 'r_frame_rate': '30/1', 'avg_frame_rate': '1935000/133393', 'time_base': '1/90000', 'start_pts': '0', 'start_time': '0.000000', 'duration_ts': '266786', 'duration': '2.964289', 'bit_rate': '11845320', 'max_bit_rate': 'N/A', 'bits_per_raw_sample': '8', 'nb_frames': '43', 'nb_read_frames': 'N/A', 'nb_read_packets': 'N/A', 'side_data_type': 'Display Matrix', 'displaymatrix': '', 'rotation': '-90'}\n```\n\n## Extract frame from video\n```\n\tframe = Extractframes(VIDEO_PATH)\n\tframe.extract_frames() # frame_path='', index=0 as optional arguments.\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lappanchappan43/VMdata", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "VMData", "package_url": "https://pypi.org/project/VMData/", "platform": "", "project_url": "https://pypi.org/project/VMData/", "project_urls": {"Homepage": "https://github.com/lappanchappan43/VMdata"}, "release_url": "https://pypi.org/project/VMData/1.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Extract metadata from video.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Extract meta data from video file</h1>\n<p>Metadata is text inside the video file that references the video. The Meta information of a video shows that what is included in the video and what type of content is available in the video.</p>\n<p>Before getting into extraction, first you need to install ffmpeg.</p>\n<h2>- Ubuntu</h2>\n<p><em>sudo apt-get install ffmpeg</em></p>\n<h2>- Windows</h2>\n<p>Download ffmpeg software from <a href=\"https://www.ffmpeg.org/download.html#build-windows\" rel=\"nofollow\">FFMPEG official website</a>.\nUnzip the file and add the bin folder to <strong>environment path</strong>.</p>\n<h3>Using MediaInfo class</h3>\n<pre><code>\tmedia_obj = Mediainfo()\n\tor\n\tmedia_obj = Mediainfo(VIDEO_PATH) # VIDEO_PATH must be string\n</code></pre>\n<blockquote>\n<p>Set video path if not passed</p>\n</blockquote>\n<pre><code>\tmedia_obj.video_path = 'video_path'\n</code></pre>\n<blockquote>\n<p>Get video path</p>\n</blockquote>\n<pre><code>\tVIDEO_PATH = media_obj.video_path\n</code></pre>\n<blockquote>\n<p>Extract metadata</p>\n</blockquote>\n<pre><code>\tmetadata = media_obj.getVideoDetail()\n</code></pre>\n<h2>Sample of Metadata of video</h2>\n<pre><code>{'DISPOSITION': {'default': '1', 'dub': '0', 'original': '0', 'comment': '0', 'lyrics': '0', 'karaoke': '0', 'forced': '0', 'hearing_impaired': '0', 'visual_impaired': '0', 'clean_effects': '0', 'attached_pic': '0', 'timed_thumbnails': '0'}, 'TAG': {'rotate': '90', 'creation_time': '2020-01-15T10:35:59.000000Z', 'language': 'eng', 'handler_name': 'VideoHandle'}, 'index': '0', 'codec_name': 'h264', 'codec_long_name': 'H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10', 'profile': 'High', 'codec_type': 'video', 'codec_time_base': '133393/3870000', 'codec_tag_string': 'avc1', 'codec_tag': '0x31637661', 'width': '1440', 'height': '1080', 'coded_width': '1440', 'coded_height': '1088', 'has_b_frames': '0', 'sample_aspect_ratio': '1:1', 'display_aspect_ratio': '4:3', 'pix_fmt': 'yuv420p', 'level': '40', 'color_range': 'tv', 'color_space': 'bt709', 'color_transfer': 'bt709', 'color_primaries': 'bt709', 'chroma_location': 'left', 'field_order': 'unknown', 'timecode': 'N/A', 'refs': '1', 'is_avc': 'true', 'nal_length_size': '4', 'id': 'N/A', 'r_frame_rate': '30/1', 'avg_frame_rate': '1935000/133393', 'time_base': '1/90000', 'start_pts': '0', 'start_time': '0.000000', 'duration_ts': '266786', 'duration': '2.964289', 'bit_rate': '11845320', 'max_bit_rate': 'N/A', 'bits_per_raw_sample': '8', 'nb_frames': '43', 'nb_read_frames': 'N/A', 'nb_read_packets': 'N/A', 'side_data_type': 'Display Matrix', 'displaymatrix': '', 'rotation': '-90'}\n</code></pre>\n<h2>Extract frame from video</h2>\n<pre><code>\tframe = Extractframes(VIDEO_PATH)\n\tframe.extract_frames() # frame_path='', index=0 as optional arguments.\n</code></pre>\n\n          </div>"}, "last_serial": 7150525, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b433f8cd7e64b26e8c60ccdce752c191", "sha256": "a7df42e0a43e1ec06a03aa417394a1902648fa30dca3ebac3a817f54a15f3d71"}, "downloads": -1, "filename": "VMData-1.0.tar.gz", "has_sig": false, "md5_digest": "b433f8cd7e64b26e8c60ccdce752c191", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3911, "upload_time": "2020-05-02T09:35:30", "upload_time_iso_8601": "2020-05-02T09:35:30.747746Z", "url": "https://files.pythonhosted.org/packages/41/0e/cdc1c0bf62125bff119307e1d1c67fd7df1906e3501e72165d0b571bf76d/VMData-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b433f8cd7e64b26e8c60ccdce752c191", "sha256": "a7df42e0a43e1ec06a03aa417394a1902648fa30dca3ebac3a817f54a15f3d71"}, "downloads": -1, "filename": "VMData-1.0.tar.gz", "has_sig": false, "md5_digest": "b433f8cd7e64b26e8c60ccdce752c191", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3911, "upload_time": "2020-05-02T09:35:30", "upload_time_iso_8601": "2020-05-02T09:35:30.747746Z", "url": "https://files.pythonhosted.org/packages/41/0e/cdc1c0bf62125bff119307e1d1c67fd7df1906e3501e72165d0b571bf76d/VMData-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:34:48 2020"}