{"info": {"author": "Kyle Petrovich", "author_email": "kylepetrovich@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "python-brotherprint\n===================\n\nBrother networked label printers library for Python\n\nThis was developed for the QL-580N but I've heard it also works for the following:\n\n* QL-720NW\n\nInstallation\n============\n\nThe easiest way to install this package is with pip.\n    \n    pip install brotherprint\n\nUsage\n=====\n\nThis library supports two printing modes. ESC/P commands, and templates. I highly recommend using templates, because it is easier to manage, and offers more features. I will, however, go over both.\nYou should review the official Brother documentation [here (ESCP Docs)](http://www.mediafire.com/?3wbanr34bsr18dw) and [here (Template Command Docs)](http://www.mediafire.com/?v798mue7i58ed66), to know what is available.\n\n## Setup\nRegardless of which mode you are using, you need to intialize and connect a socket object, and pass the resulting socket object to the BrotherLabel object instantiator.\n\n    from brotherprint import BrotherPrint\n    f_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    f_socket.connect((<ip_address>,<port (9100 by default for QL580N)>))\n    printjob = BrotherPrint(f_socket)\n\n### ESC/P Printing\nInvoke escp commands through certain BrotherLabel object methods (see actual file for method descriptions)\nMake sure to end with the print page command, signifying the end of a label.\n\n    printjob.command_mode()\n    printjob.initialize()\n    printjob.bold('on')\n    printjob.send(<text>)\n    printjob.print_page(<cut_setting>)\n\n### Template Printing\nCreate your template and upload it to the printer. After creating a BrotherLabel object, call template_mode() to set the printer to template mode, and then use the template commands to fill in your label.\n\n    printjob.template_mode()\n    printjob.template_init()\n    printjob.choose_template(<template_number>)\n    printjob.select_and_insert(<field_name>, <data>)\n    printjob.select_and_insert(<field_name2>, <data2>)\n    printjob.select_and_insert(<field_name3>, <data3>)\n    printjob.template_print()", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/fozzle/python-brotherprint", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "brotherprint", "package_url": "https://pypi.org/project/brotherprint/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/brotherprint/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/fozzle/python-brotherprint"}, "release_url": "https://pypi.org/project/brotherprint/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Wrapper for Brother networked label printing commands.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"python-brotherprint\">\n<h2>python-brotherprint</h2>\n<p>Brother networked label printers library for Python</p>\n<p>This was developed for the QL-580N but I\u2019ve heard it also works for the following:</p>\n<ul>\n<li>QL-720NW</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest way to install this package is with pip.</p>\n<blockquote>\npip install brotherprint</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>This library supports two printing modes. ESC/P commands, and templates. I highly recommend using templates, because it is easier to manage, and offers more features. I will, however, go over both.\nYou should review the official Brother documentation [here (ESCP Docs)](<a href=\"http://www.mediafire.com/?3wbanr34bsr18dw\" rel=\"nofollow\">http://www.mediafire.com/?3wbanr34bsr18dw</a>) and [here (Template Command Docs)](<a href=\"http://www.mediafire.com/?v798mue7i58ed66\" rel=\"nofollow\">http://www.mediafire.com/?v798mue7i58ed66</a>), to know what is available.</p>\n<p>## Setup\nRegardless of which mode you are using, you need to intialize and connect a socket object, and pass the resulting socket object to the BrotherLabel object instantiator.</p>\n<blockquote>\nfrom brotherprint import BrotherPrint\nf_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nf_socket.connect((&lt;ip_address&gt;,&lt;port (9100 by default for QL580N)&gt;))\nprintjob = BrotherPrint(f_socket)</blockquote>\n<p>### ESC/P Printing\nInvoke escp commands through certain BrotherLabel object methods (see actual file for method descriptions)\nMake sure to end with the print page command, signifying the end of a label.</p>\n<blockquote>\nprintjob.command_mode()\nprintjob.initialize()\nprintjob.bold(\u2018on\u2019)\nprintjob.send(&lt;text&gt;)\nprintjob.print_page(&lt;cut_setting&gt;)</blockquote>\n<p>### Template Printing\nCreate your template and upload it to the printer. After creating a BrotherLabel object, call template_mode() to set the printer to template mode, and then use the template commands to fill in your label.</p>\n<blockquote>\nprintjob.template_mode()\nprintjob.template_init()\nprintjob.choose_template(&lt;template_number&gt;)\nprintjob.select_and_insert(&lt;field_name&gt;, &lt;data&gt;)\nprintjob.select_and_insert(&lt;field_name2&gt;, &lt;data2&gt;)\nprintjob.select_and_insert(&lt;field_name3&gt;, &lt;data3&gt;)\nprintjob.template_print()</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1901330, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "28917f50f0b5fb446e2341e68079ac47", "sha256": "ed433eda872517c5956958e7c5ad71923a7004e6645d8855be1b84dc2817461e"}, "downloads": -1, "filename": "brotherprint-0.1.1.tar.gz", "has_sig": false, "md5_digest": "28917f50f0b5fb446e2341e68079ac47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8737, "upload_time": "2012-11-27T14:15:54", "upload_time_iso_8601": "2012-11-27T14:15:54.347149Z", "url": "https://files.pythonhosted.org/packages/79/35/df2f8bacdecc422d55e3c40446e638609d77a334d590651b7085fa4bfe86/brotherprint-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6966184597aebf49ccb2c2c5ce32743b", "sha256": "321f3fb66a29abce6c1426efc7608a785b233648ca49a780bee9deca876e89eb"}, "downloads": -1, "filename": "brotherprint-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6966184597aebf49ccb2c2c5ce32743b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7961, "upload_time": "2015-09-24T18:38:10", "upload_time_iso_8601": "2015-09-24T18:38:10.430080Z", "url": "https://files.pythonhosted.org/packages/d0/c1/1be589a91b91d4dc3dd554ff231b90554b1a94d5fdd85f83400a7cc96263/brotherprint-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "32f11322212847f04614d693ae9a458c", "sha256": "f089674a7b8b1e888ebb65531890aaaefcbdccabfd0930a30328b6f9fca708df"}, "downloads": -1, "filename": "brotherprint-0.1.3.tar.gz", "has_sig": false, "md5_digest": "32f11322212847f04614d693ae9a458c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8099, "upload_time": "2016-01-12T19:01:29", "upload_time_iso_8601": "2016-01-12T19:01:29.990159Z", "url": "https://files.pythonhosted.org/packages/8c/54/bcf5d50a534ec7129f07e20c66de5eed1ce08f03b2177af9a49b9da7bf1b/brotherprint-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "32f11322212847f04614d693ae9a458c", "sha256": "f089674a7b8b1e888ebb65531890aaaefcbdccabfd0930a30328b6f9fca708df"}, "downloads": -1, "filename": "brotherprint-0.1.3.tar.gz", "has_sig": false, "md5_digest": "32f11322212847f04614d693ae9a458c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8099, "upload_time": "2016-01-12T19:01:29", "upload_time_iso_8601": "2016-01-12T19:01:29.990159Z", "url": "https://files.pythonhosted.org/packages/8c/54/bcf5d50a534ec7129f07e20c66de5eed1ce08f03b2177af9a49b9da7bf1b/brotherprint-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:15 2020"}