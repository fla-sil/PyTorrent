{"info": {"author": "Diogo Dutra", "author_email": "diogodutradamata@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Database"], "description": "# dbdaora\n\n<p align=\"center\" style=\"margin: 3em\">\n  <a href=\"https://github.com/dutradda/dbdaora\">\n    <img src=\"https://dutradda.github.io/dbdaora/dbdaora.svg\" alt=\"dbdaora\" width=\"300\"/>\n  </a>\n</p>\n\n<p align=\"center\">\n    <em>Communicates with <b>NoSQL</b> (and <b>SQL</b> for future) databases using repository and service patterns and python dataclasses</em>\n</p>\n\n---\n\n**Documentation**: <a href=\"https://dutradda.github.io/dbdaora/\" target=\"_blank\">https://dutradda.github.io/dbdaora/</a>\n\n**Source Code**: <a href=\"https://github.com/dutradda/dbdaora\" target=\"_blank\">https://github.com/dutradda/dbdaora</a>\n\n---\n\n\n## Key Features\n\n- **Creates an optional service layer with cache and circuit breaker**\n\n- **Supports for redis data types:**\n    + Hash\n    + Sorted Set\n    + *(Others data types are planned)*\n\n- **Backup redis data into other databases:**\n    + Google Datastore\n    + Mongodb *(soon)*\n    + SQL databases with SQLAlchemy *(soon)*\n    + *(Others data bases are planned)*\n\n- *Support for other databases are in development.*\n\n\n## Requirements\n\n - Python 3.8+\n - [jsondaora](https://github.com/dutradda/jsondaora) for data validation/parsing\n - circuitbreaker\n - cachetools\n\n - Optionals:\n    + aioredis\n    + google-cloud-datastore\n\n\n## Instalation\n\n```\n$ pip install dbdaora\n```\n\n\n## Simple redis hash example\n\n```python\nimport asyncio\nfrom dataclasses import dataclass\n\nfrom dbdaora import (\n    DictFallbackDataSource,\n    DictMemoryDataSource,\n    HashRepository,\n)\n\n\n@dataclass\nclass Person:\n    id: str\n    name: str\n    age: int\n\n\ndef make_person(name: str, age: int) -> Person:\n    return Person(name.replace(' ', '_').lower(), name, age)\n\n\nclass PersonRepository(HashRepository[str]):\n    entity_cls = Person\n    key_attrs = ('id',)\n\n\nrepository = PersonRepository(\n    memory_data_source=DictMemoryDataSource(),\n    fallback_data_source=DictFallbackDataSource(),\n    expire_time=60,\n)\nperson = make_person('John Doe', 33)\nasyncio.run(repository.add(person))\n\ngeted_person = asyncio.run(repository.query(person.id).entity)\nprint(geted_person)\n\n```\n\n```bash\nPerson(id='john_doe', name='John Doe', age=33)\n```\n\n\n## Simple redis sorted set example\n\n```python\nimport asyncio\nfrom dataclasses import dataclass\n\nfrom dbdaora import (\n    DictFallbackDataSource,\n    DictMemoryDataSource,\n    SortedSetData,\n    SortedSetRepository,\n)\n\n\n@dataclass\nclass Playlist:\n    id: str\n    values: SortedSetData\n\n\nclass PlaylistRepository(SortedSetRepository[str]):\n    entity_cls = Playlist\n\n\nrepository = PlaylistRepository(\n    memory_data_source=DictMemoryDataSource(),\n    fallback_data_source=DictFallbackDataSource(),\n    expire_time=60,\n)\nvalues = [('m1', 1), ('m2', 2), ('m3', 3)]\nplaylist = Playlist(id='my_plalist', values=values)\nasyncio.run(repository.add(playlist))\n\ngeted_playlist = asyncio.run(repository.query(playlist.id).entity)\nprint(geted_playlist)\n\n```\n\n```python\nPlaylist(id='my_plalist', values=['m1', 'm2', 'm3'])\n```\n\n\n## Using the service layer\n\nThe service layer uses the backup dataset when redis is offline, opening a circuit breaker.\n\nIt has an optional cache system too.\n\n\n```python\nimport asyncio\nfrom dataclasses import dataclass\n\nfrom dbdaora import (\n    DictFallbackDataSource,\n    DictMemoryDataSource,\n    HashRepository,\n    make_hash_service,\n)\n\n\n@dataclass\nclass Person:\n    id: str\n    name: str\n    age: int\n\n\ndef make_person(name: str, age: int) -> Person:\n    return Person(name.replace(' ', '_').lower(), name, age)\n\n\nclass PersonRepository(HashRepository[str], entity_cls=Person):\n    ...\n\n\nasync def make_memory_data_source() -> DictMemoryDataSource:\n    return DictMemoryDataSource()\n\n\nasync def make_fallback_data_source() -> DictFallbackDataSource:\n    return DictFallbackDataSource()\n\n\nservice = asyncio.run(\n    make_hash_service(\n        PersonRepository,\n        memory_data_source_factory=make_memory_data_source,\n        fallback_data_source_factory=make_fallback_data_source,\n        repository_expire_time=60,\n    )\n)\nperson = make_person('John Doe', 33)\nasyncio.run(service.add(person))\n\ngeted_person = asyncio.run(service.get_one(person.id))\nprint(geted_person)\n\n```\n\n```python\nPerson(id='john_doe', name='John Doe', age=33)\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dutradda/dbdaora", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dbdaora", "package_url": "https://pypi.org/project/dbdaora/", "platform": "", "project_url": "https://pypi.org/project/dbdaora/", "project_urls": {"Documentation": "https://dutradda.github.io/dbdaora/", "Homepage": "https://github.com/dutradda/dbdaora"}, "release_url": "https://pypi.org/project/dbdaora/0.7.1/", "requires_dist": ["circuitbreaker", "cachetools", "jsondaora", "aioredis ; extra == \"aioredis\"", "google-cloud-datastore ; extra == \"datastore\"", "mkdocs ; extra == \"doc\"", "mkdocs-material ; extra == \"doc\"", "markdown-include ; extra == \"doc\"", "black ; extra == \"test\"", "isort ; extra == \"test\"", "ipython ; extra == \"test\"", "mypy ; extra == \"test\"", "pytest-asyncio ; extra == \"test\"", "pytest-cov ; extra == \"test\"", "pytest-mock ; extra == \"test\"", "pytest ; extra == \"test\""], "requires_python": ">=3.8", "summary": "Communicates with databases using repository pattern and service patterns", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dbdaora</h1>\n<p align=\"center\">\n  <a href=\"https://github.com/dutradda/dbdaora\" rel=\"nofollow\">\n    <img alt=\"dbdaora\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da3c1e28283b413fffbea37f39b3f70d0da162b5/68747470733a2f2f64757472616464612e6769746875622e696f2f646264616f72612f646264616f72612e737667\" width=\"300\">\n  </a>\n</p>\n<p align=\"center\">\n    <em>Communicates with <b>NoSQL</b> (and <b>SQL</b> for future) databases using repository and service patterns and python dataclasses</em>\n</p>\n<hr>\n<p><strong>Documentation</strong>: <a href=\"https://dutradda.github.io/dbdaora/\" rel=\"nofollow\"></a><a href=\"https://dutradda.github.io/dbdaora/\" rel=\"nofollow\">https://dutradda.github.io/dbdaora/</a></p>\n<p><strong>Source Code</strong>: <a href=\"https://github.com/dutradda/dbdaora\" rel=\"nofollow\"></a><a href=\"https://github.com/dutradda/dbdaora\" rel=\"nofollow\">https://github.com/dutradda/dbdaora</a></p>\n<hr>\n<h2>Key Features</h2>\n<ul>\n<li>\n<p><strong>Creates an optional service layer with cache and circuit breaker</strong></p>\n</li>\n<li>\n<p><strong>Supports for redis data types:</strong></p>\n<ul>\n<li>Hash</li>\n<li>Sorted Set</li>\n<li><em>(Others data types are planned)</em></li>\n</ul>\n</li>\n<li>\n<p><strong>Backup redis data into other databases:</strong></p>\n<ul>\n<li>Google Datastore</li>\n<li>Mongodb <em>(soon)</em></li>\n<li>SQL databases with SQLAlchemy <em>(soon)</em></li>\n<li><em>(Others data bases are planned)</em></li>\n</ul>\n</li>\n<li>\n<p><em>Support for other databases are in development.</em></p>\n</li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>\n<p>Python 3.8+</p>\n</li>\n<li>\n<p><a href=\"https://github.com/dutradda/jsondaora\" rel=\"nofollow\">jsondaora</a> for data validation/parsing</p>\n</li>\n<li>\n<p>circuitbreaker</p>\n</li>\n<li>\n<p>cachetools</p>\n</li>\n<li>\n<p>Optionals:</p>\n<ul>\n<li>aioredis</li>\n<li>google-cloud-datastore</li>\n</ul>\n</li>\n</ul>\n<h2>Instalation</h2>\n<pre><code>$ pip install dbdaora\n</code></pre>\n<h2>Simple redis hash example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dbdaora</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">DictFallbackDataSource</span><span class=\"p\">,</span>\n    <span class=\"n\">DictMemoryDataSource</span><span class=\"p\">,</span>\n    <span class=\"n\">HashRepository</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">:</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">make_person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Person</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"s1\">'_'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonRepository</span><span class=\"p\">(</span><span class=\"n\">HashRepository</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]):</span>\n    <span class=\"n\">entity_cls</span> <span class=\"o\">=</span> <span class=\"n\">Person</span>\n    <span class=\"n\">key_attrs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,)</span>\n\n\n<span class=\"n\">repository</span> <span class=\"o\">=</span> <span class=\"n\">PersonRepository</span><span class=\"p\">(</span>\n    <span class=\"n\">memory_data_source</span><span class=\"o\">=</span><span class=\"n\">DictMemoryDataSource</span><span class=\"p\">(),</span>\n    <span class=\"n\">fallback_data_source</span><span class=\"o\">=</span><span class=\"n\">DictFallbackDataSource</span><span class=\"p\">(),</span>\n    <span class=\"n\">expire_time</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">make_person</span><span class=\"p\">(</span><span class=\"s1\">'John Doe'</span><span class=\"p\">,</span> <span class=\"mi\">33</span><span class=\"p\">)</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">repository</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">))</span>\n\n<span class=\"n\">geted_person</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">repository</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">geted_person</span><span class=\"p\">)</span>\n</pre>\n<pre>Person<span class=\"o\">(</span><span class=\"nv\">id</span><span class=\"o\">=</span><span class=\"s1\">'john_doe'</span>, <span class=\"nv\">name</span><span class=\"o\">=</span><span class=\"s1\">'John Doe'</span>, <span class=\"nv\">age</span><span class=\"o\">=</span><span class=\"m\">33</span><span class=\"o\">)</span>\n</pre>\n<h2>Simple redis sorted set example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dbdaora</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">DictFallbackDataSource</span><span class=\"p\">,</span>\n    <span class=\"n\">DictMemoryDataSource</span><span class=\"p\">,</span>\n    <span class=\"n\">SortedSetData</span><span class=\"p\">,</span>\n    <span class=\"n\">SortedSetRepository</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Playlist</span><span class=\"p\">:</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">SortedSetData</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PlaylistRepository</span><span class=\"p\">(</span><span class=\"n\">SortedSetRepository</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]):</span>\n    <span class=\"n\">entity_cls</span> <span class=\"o\">=</span> <span class=\"n\">Playlist</span>\n\n\n<span class=\"n\">repository</span> <span class=\"o\">=</span> <span class=\"n\">PlaylistRepository</span><span class=\"p\">(</span>\n    <span class=\"n\">memory_data_source</span><span class=\"o\">=</span><span class=\"n\">DictMemoryDataSource</span><span class=\"p\">(),</span>\n    <span class=\"n\">fallback_data_source</span><span class=\"o\">=</span><span class=\"n\">DictFallbackDataSource</span><span class=\"p\">(),</span>\n    <span class=\"n\">expire_time</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s1\">'m1'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'m2'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'m3'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)]</span>\n<span class=\"n\">playlist</span> <span class=\"o\">=</span> <span class=\"n\">Playlist</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'my_plalist'</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">)</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">repository</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"p\">))</span>\n\n<span class=\"n\">geted_playlist</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">repository</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">playlist</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">entity</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">geted_playlist</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">Playlist</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'my_plalist'</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'m1'</span><span class=\"p\">,</span> <span class=\"s1\">'m2'</span><span class=\"p\">,</span> <span class=\"s1\">'m3'</span><span class=\"p\">])</span>\n</pre>\n<h2>Using the service layer</h2>\n<p>The service layer uses the backup dataset when redis is offline, opening a circuit breaker.</p>\n<p>It has an optional cache system too.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclasses</span> <span class=\"kn\">import</span> <span class=\"n\">dataclass</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dbdaora</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">DictFallbackDataSource</span><span class=\"p\">,</span>\n    <span class=\"n\">DictMemoryDataSource</span><span class=\"p\">,</span>\n    <span class=\"n\">HashRepository</span><span class=\"p\">,</span>\n    <span class=\"n\">make_hash_service</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">:</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">make_person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Person</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"s1\">'_'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">(),</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonRepository</span><span class=\"p\">(</span><span class=\"n\">HashRepository</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">entity_cls</span><span class=\"o\">=</span><span class=\"n\">Person</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">make_memory_data_source</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">DictMemoryDataSource</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">DictMemoryDataSource</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">make_fallback_data_source</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"n\">DictFallbackDataSource</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">DictFallbackDataSource</span><span class=\"p\">()</span>\n\n\n<span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n    <span class=\"n\">make_hash_service</span><span class=\"p\">(</span>\n        <span class=\"n\">PersonRepository</span><span class=\"p\">,</span>\n        <span class=\"n\">memory_data_source_factory</span><span class=\"o\">=</span><span class=\"n\">make_memory_data_source</span><span class=\"p\">,</span>\n        <span class=\"n\">fallback_data_source_factory</span><span class=\"o\">=</span><span class=\"n\">make_fallback_data_source</span><span class=\"p\">,</span>\n        <span class=\"n\">repository_expire_time</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">person</span> <span class=\"o\">=</span> <span class=\"n\">make_person</span><span class=\"p\">(</span><span class=\"s1\">'John Doe'</span><span class=\"p\">,</span> <span class=\"mi\">33</span><span class=\"p\">)</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"p\">))</span>\n\n<span class=\"n\">geted_person</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">get_one</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">geted_person</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'john_doe'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'John Doe'</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">33</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7194004, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "358b7fda3550b97604f560c853826437", "sha256": "d785fcab558d697124ec9ecd5dd28405d1276758a4a8325a2333d950472370c0"}, "downloads": -1, "filename": "dbdaora-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "358b7fda3550b97604f560c853826437", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 23476, "upload_time": "2020-04-24T23:37:31", "upload_time_iso_8601": "2020-04-24T23:37:31.530632Z", "url": "https://files.pythonhosted.org/packages/a0/69/1c914995f8fcb864b737e6ada7ad8aba79cbed6e76460381271bba94e2b4/dbdaora-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6b4090fca77b90f536ebbe747013752", "sha256": "65fa7450d8068166442f7c159f10f489202a4c337f6be12c0b4f810055cddd76"}, "downloads": -1, "filename": "dbdaora-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c6b4090fca77b90f536ebbe747013752", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 15522, "upload_time": "2020-04-24T23:37:35", "upload_time_iso_8601": "2020-04-24T23:37:35.158054Z", "url": "https://files.pythonhosted.org/packages/ca/bb/69e858de91a3928a4601c69e5b71ff772851827c18d4ec59c08ad7ff5d7d/dbdaora-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "a32ed37676e63fca9d4beb6f5896da4a", "sha256": "f87c75bd024ee1eb95a221a871014c27efd5264c94eabdbf8a95c6e293e459da"}, "downloads": -1, "filename": "dbdaora-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a32ed37676e63fca9d4beb6f5896da4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 23535, "upload_time": "2020-04-25T03:32:20", "upload_time_iso_8601": "2020-04-25T03:32:20.806934Z", "url": "https://files.pythonhosted.org/packages/66/5c/11450428e5a1261760e92582d4cfeb88add1d45e14a898b8e4a1068171c9/dbdaora-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "776812311755f5e02bb948251f890335", "sha256": "92900212ec8bbe9285b85d110684ae47551e1ac944380d009cbde735655b06d7"}, "downloads": -1, "filename": "dbdaora-0.2.1.tar.gz", "has_sig": false, "md5_digest": "776812311755f5e02bb948251f890335", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 15607, "upload_time": "2020-04-25T03:32:23", "upload_time_iso_8601": "2020-04-25T03:32:23.208157Z", "url": "https://files.pythonhosted.org/packages/28/86/6bb19f804948d90e7674cbf8caa817f741cc58a98a39c24b2ea2584e3d9f/dbdaora-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "6cf5fe546d7b3676b8b81d3e592cd9b0", "sha256": "75c411aacba44bb9cd4e58a539d9daebb9f63a23b0d849798186fd55e3c53f19"}, "downloads": -1, "filename": "dbdaora-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6cf5fe546d7b3676b8b81d3e592cd9b0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 24196, "upload_time": "2020-04-25T17:58:29", "upload_time_iso_8601": "2020-04-25T17:58:29.210511Z", "url": "https://files.pythonhosted.org/packages/66/4b/365c028a94fde2c74b5ab245a7c8ac72abedc7cedd90e4919c0fc5c9603a/dbdaora-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e88495499a5515d08c10897c2ab5bc6", "sha256": "cf7c8f9bb8e5800ee134c8a8a392a8a26381211a6fb212049c6dbc99640f692d"}, "downloads": -1, "filename": "dbdaora-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5e88495499a5515d08c10897c2ab5bc6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16350, "upload_time": "2020-04-25T17:58:31", "upload_time_iso_8601": "2020-04-25T17:58:31.772204Z", "url": "https://files.pythonhosted.org/packages/6c/3d/89e33f51d798e2c7715ddec8d738d5a78ebe9111ad503ea9fbbff66deca5/dbdaora-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e9342a137dd12c23867b27b52658e4d7", "sha256": "19f255f65469c469b74bdca37bed00fba07e9de28b999781f2cd33bc35c2c737"}, "downloads": -1, "filename": "dbdaora-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e9342a137dd12c23867b27b52658e4d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 24645, "upload_time": "2020-04-25T21:39:42", "upload_time_iso_8601": "2020-04-25T21:39:42.383167Z", "url": "https://files.pythonhosted.org/packages/17/0d/78723e837c80999cf482c79a65a9aefd9f5089e72c47185c11e73c0ddba1/dbdaora-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0647f26963627a9683ab00441d283101", "sha256": "1d0fa44ab42787320f2ff7a4cc295e7f5797829e6637534973e8919884e731f3"}, "downloads": -1, "filename": "dbdaora-0.4.0.tar.gz", "has_sig": false, "md5_digest": "0647f26963627a9683ab00441d283101", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16690, "upload_time": "2020-04-25T21:39:44", "upload_time_iso_8601": "2020-04-25T21:39:44.410695Z", "url": "https://files.pythonhosted.org/packages/0a/fa/729cb6013d3f3c7eb4fc9786a4abcd6bd6a37a23c33f695d86b80c142725/dbdaora-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "f7843edc4848077fc28033f11ce27996", "sha256": "ab2f12013c74492cc27a934ccb211980589806b4fe93e5fe6246ccf281f0b6bf"}, "downloads": -1, "filename": "dbdaora-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f7843edc4848077fc28033f11ce27996", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 25472, "upload_time": "2020-04-25T23:24:47", "upload_time_iso_8601": "2020-04-25T23:24:47.604156Z", "url": "https://files.pythonhosted.org/packages/55/72/8a67942106cb8084c600b9a66bf24981b9c0c7db6243b445bdf8aa735196/dbdaora-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8ceb792835828545d2a522e19830e97", "sha256": "b4fbf2b8a8b01e8d808317aeeeb742a07f0c77f3ea86c1c17cc2406a0b7b3199"}, "downloads": -1, "filename": "dbdaora-0.4.1.tar.gz", "has_sig": false, "md5_digest": "e8ceb792835828545d2a522e19830e97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 17050, "upload_time": "2020-04-25T23:24:50", "upload_time_iso_8601": "2020-04-25T23:24:50.008741Z", "url": "https://files.pythonhosted.org/packages/1f/16/95b36cfae9e3264b5f1cdf56462d1181510f3e619109ccbffd5a29e0336e/dbdaora-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "88c787a2301f5e8f9b21f4d559fb9fbd", "sha256": "1d04c41b5ee4c542562911e2d4256456a8990ff91fd70cd243536edb265ebf24"}, "downloads": -1, "filename": "dbdaora-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "88c787a2301f5e8f9b21f4d559fb9fbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 26020, "upload_time": "2020-04-26T19:31:53", "upload_time_iso_8601": "2020-04-26T19:31:53.298958Z", "url": "https://files.pythonhosted.org/packages/04/8b/c1ba8e394b8f0f2b47e5e2f4daf5ca08a5af9189ce41e8c7f480a142f386/dbdaora-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "335c350db41a1726673bca98d75e40ce", "sha256": "e131e04a67ddf136d2b7f5d0b80fe99f736d6ce91db0337dad1d65f8e2f12b6e"}, "downloads": -1, "filename": "dbdaora-0.5.0.tar.gz", "has_sig": false, "md5_digest": "335c350db41a1726673bca98d75e40ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 17553, "upload_time": "2020-04-26T19:31:55", "upload_time_iso_8601": "2020-04-26T19:31:55.762908Z", "url": "https://files.pythonhosted.org/packages/87/52/ed177e653f1ebe2c64165e8c823aceeb016b603a0bd271b0a586c8a56382/dbdaora-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "56a038468cc0857006d74f56f96744e3", "sha256": "933d848a82d63972f1b6c857cc46be067d82a0e066861600e07f9acefaa283cd"}, "downloads": -1, "filename": "dbdaora-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "56a038468cc0857006d74f56f96744e3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 26092, "upload_time": "2020-04-28T06:58:46", "upload_time_iso_8601": "2020-04-28T06:58:46.928641Z", "url": "https://files.pythonhosted.org/packages/24/2c/68d2ab3194f0bddd5977104f890925a6338357f421d61a33808532675985/dbdaora-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73230a0287ed8e0e52a11680472760af", "sha256": "056a96284efca9592d543a65bbfc90ffe42a62cee2861984fbc356372175ac2f"}, "downloads": -1, "filename": "dbdaora-0.5.1.tar.gz", "has_sig": false, "md5_digest": "73230a0287ed8e0e52a11680472760af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 17661, "upload_time": "2020-04-28T06:58:49", "upload_time_iso_8601": "2020-04-28T06:58:49.365296Z", "url": "https://files.pythonhosted.org/packages/fa/d0/f6f1358b2ff755d71b62f80d83dd73b67fdb74033242d2a1ed1c11f91f92/dbdaora-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "f673efafbfeb08c192fbff84b4eacc86", "sha256": "c28394e640aa8254f16bea7e2842f6fe2124bf91aaf53abf2e8a692d02f22ad4"}, "downloads": -1, "filename": "dbdaora-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f673efafbfeb08c192fbff84b4eacc86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 26096, "upload_time": "2020-04-30T17:09:42", "upload_time_iso_8601": "2020-04-30T17:09:42.991039Z", "url": "https://files.pythonhosted.org/packages/54/ae/e9d2b5a598e18cbbf97844fb0c1ca0daeafa281a949e0d3e2ac80e16346e/dbdaora-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb194bad2cb474836b572fba5007e1cc", "sha256": "4053d2bd67979c75b5ae85229765ec41e86506d7b535011ccb79af8aa7611025"}, "downloads": -1, "filename": "dbdaora-0.5.2.tar.gz", "has_sig": false, "md5_digest": "fb194bad2cb474836b572fba5007e1cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 17679, "upload_time": "2020-04-30T17:09:45", "upload_time_iso_8601": "2020-04-30T17:09:45.655123Z", "url": "https://files.pythonhosted.org/packages/47/b5/00e108ea41c4f3a485936265d2a878d71895d52379464bbb9dcdb7624124/dbdaora-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "c9cf4c2fe164910657eefe5ce7a9ed34", "sha256": "547b3f45ed2ff959f92bcaff013f0355cdaa66f7c56017e919599020b68ac10b"}, "downloads": -1, "filename": "dbdaora-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9cf4c2fe164910657eefe5ce7a9ed34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 25207, "upload_time": "2020-05-02T19:31:25", "upload_time_iso_8601": "2020-05-02T19:31:25.429029Z", "url": "https://files.pythonhosted.org/packages/ad/c6/668f30a3d7fb919d6e96989a0a441ee34365e38ddd7db29f97afd8bad4b6/dbdaora-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "977e40d403450af585e366e550c6a357", "sha256": "1dd0b4ff55b2cb9b712b61987814fdc73b840eea73f596ce8c9d0fa4314dedf6"}, "downloads": -1, "filename": "dbdaora-0.6.0.tar.gz", "has_sig": false, "md5_digest": "977e40d403450af585e366e550c6a357", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16835, "upload_time": "2020-05-02T19:31:27", "upload_time_iso_8601": "2020-05-02T19:31:27.577809Z", "url": "https://files.pythonhosted.org/packages/36/e2/935d0caa541358cf37fb823ff5bde343b75b3773a6adabd9e04600865f4a/dbdaora-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "599d2e08d3a6be9b8dffa17caf6876b3", "sha256": "501c89c9eee5d82a4f17df63bbebaaafc0d8d4a281c45369e6f65b0577b5b5e4"}, "downloads": -1, "filename": "dbdaora-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "599d2e08d3a6be9b8dffa17caf6876b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 25218, "upload_time": "2020-05-05T02:48:11", "upload_time_iso_8601": "2020-05-05T02:48:11.185402Z", "url": "https://files.pythonhosted.org/packages/51/fb/4d9b29480f9ebe072830ce4db63bec852e2823d58d80bde230314a751285/dbdaora-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "199f7fc621983deb28c18994c7d9888c", "sha256": "6182cfbc2d00e423a5aa2b5c8cfc61f3db551a16032fef3406bda10206594429"}, "downloads": -1, "filename": "dbdaora-0.6.1.tar.gz", "has_sig": false, "md5_digest": "199f7fc621983deb28c18994c7d9888c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16862, "upload_time": "2020-05-05T02:48:13", "upload_time_iso_8601": "2020-05-05T02:48:13.643578Z", "url": "https://files.pythonhosted.org/packages/9a/78/ddf4467a9bc71aa7c16cecd685b5f6509a11ba61161201bc8c2bda46d682/dbdaora-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "192d79fc813e400197709c41df4b24b9", "sha256": "4fdcbf39994b22e39772c8d922f661c1d6783916ca9ba2154529adc3ae6641c0"}, "downloads": -1, "filename": "dbdaora-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "192d79fc813e400197709c41df4b24b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 25176, "upload_time": "2020-05-05T04:33:07", "upload_time_iso_8601": "2020-05-05T04:33:07.386975Z", "url": "https://files.pythonhosted.org/packages/69/b6/c0bd76c76d284a6c2472c353a918e7aefad3142fd96f43e9176c94fe5831/dbdaora-0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a592e7fbc46ac1e55457c1b588be6b66", "sha256": "423105e70f2f8198b4a4854b56e5fe9202d4d63873439da6eba3dd96e9e30d93"}, "downloads": -1, "filename": "dbdaora-0.6.2.tar.gz", "has_sig": false, "md5_digest": "a592e7fbc46ac1e55457c1b588be6b66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16841, "upload_time": "2020-05-05T04:33:10", "upload_time_iso_8601": "2020-05-05T04:33:10.104342Z", "url": "https://files.pythonhosted.org/packages/76/d5/3edde16d175da5e8e1f159afddcd5332208604f7c66e0a6fb97c8c6a69ef/dbdaora-0.6.2.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "5c5c24fe619e1bc824b124d879766f9c", "sha256": "e797165ea805cc6c16ee390d317cfff05ec990b8f3c00e22c008b99fa417e3ba"}, "downloads": -1, "filename": "dbdaora-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5c5c24fe619e1bc824b124d879766f9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 25201, "upload_time": "2020-05-08T02:46:21", "upload_time_iso_8601": "2020-05-08T02:46:21.815673Z", "url": "https://files.pythonhosted.org/packages/59/26/03bf033508b8c812e29e1100d5f7c323f815b2f1285bfe2855f0a03e46cb/dbdaora-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65a7b4a89b948408096418ac45c0a875", "sha256": "4113f5d197afa78aa955e34140738b7655079d8ca41e4f83408d37ac4bb1f625"}, "downloads": -1, "filename": "dbdaora-0.7.0.tar.gz", "has_sig": false, "md5_digest": "65a7b4a89b948408096418ac45c0a875", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16894, "upload_time": "2020-05-08T02:46:24", "upload_time_iso_8601": "2020-05-08T02:46:24.216440Z", "url": "https://files.pythonhosted.org/packages/5a/39/9fa292d2a78200c0d37b28dca363c8bdb59b2a3f82b1f3043bf3dd4adaa4/dbdaora-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "52248a0d09c7902006da6c4327c8e803", "sha256": "72a3d97904b9a2501d7e52ec0a876bac490d3efc0b0573bb6fbf5a0f116330b8"}, "downloads": -1, "filename": "dbdaora-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "52248a0d09c7902006da6c4327c8e803", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 25204, "upload_time": "2020-05-08T03:59:36", "upload_time_iso_8601": "2020-05-08T03:59:36.398525Z", "url": "https://files.pythonhosted.org/packages/20/0a/02c282b7cae4fac5289d25f14694a324d68a6cb14b354a0e12b270bbc7e8/dbdaora-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de18e6dad24dc53a48ffda1c286f7263", "sha256": "83f359ef358ef4ef977bf669f38339c001632e934b47a877c622ed91a0dc79cb"}, "downloads": -1, "filename": "dbdaora-0.7.1.tar.gz", "has_sig": false, "md5_digest": "de18e6dad24dc53a48ffda1c286f7263", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16894, "upload_time": "2020-05-08T03:59:38", "upload_time_iso_8601": "2020-05-08T03:59:38.558147Z", "url": "https://files.pythonhosted.org/packages/3a/e5/29fd470ee4c8288e5fac22fefd7e9022045d7a93b0dbafffdafe44c5cdfc/dbdaora-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "52248a0d09c7902006da6c4327c8e803", "sha256": "72a3d97904b9a2501d7e52ec0a876bac490d3efc0b0573bb6fbf5a0f116330b8"}, "downloads": -1, "filename": "dbdaora-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "52248a0d09c7902006da6c4327c8e803", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 25204, "upload_time": "2020-05-08T03:59:36", "upload_time_iso_8601": "2020-05-08T03:59:36.398525Z", "url": "https://files.pythonhosted.org/packages/20/0a/02c282b7cae4fac5289d25f14694a324d68a6cb14b354a0e12b270bbc7e8/dbdaora-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de18e6dad24dc53a48ffda1c286f7263", "sha256": "83f359ef358ef4ef977bf669f38339c001632e934b47a877c622ed91a0dc79cb"}, "downloads": -1, "filename": "dbdaora-0.7.1.tar.gz", "has_sig": false, "md5_digest": "de18e6dad24dc53a48ffda1c286f7263", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 16894, "upload_time": "2020-05-08T03:59:38", "upload_time_iso_8601": "2020-05-08T03:59:38.558147Z", "url": "https://files.pythonhosted.org/packages/3a/e5/29fd470ee4c8288e5fac22fefd7e9022045d7a93b0dbafffdafe44c5cdfc/dbdaora-0.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:58 2020"}