{"info": {"author": "Gnarly Chicken", "author_email": "gnarlychicken@gmx.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP :: Session"], "description": "ticket_auth\n===========\n\nSimple library that provides a mod_auth_tkt like hashed tickets that can be\nused for storing user authentication details.\n\nThe library is not interchangable with the mod_auth_tkt format, as the\nmod_auth_tkt does not provide support for ipv6 addresses and different hash\nalgorithms, whereas ticket_auth provides both.\n\nUsage\n-----\n\nThe general format for using the library is to instantiate the ticket factory\nused to generate the tickets, and then create new tickets or validate existing\ntickets using that factory. For example::\n\n    # The ticket factory takes a bytes argument specifying the secret\n    # identifier, and a optional algorithm (defaults to sha512). Possible\n    # algorithms are those specified by the python hashlib library\n    factory = TicketFactory(b'secret', hashalg='md5')\n\n    # The new function returns a new ticket (as a string). It takes a user\n    # identifier as a argument, along with several optional arguments. The\n    # valid_until argument is the time at which the ticket expires.\n    valid_until = time.time() + 60\n    ticket = factory.new('test_id', valid_until=valid_until)\n\n    # A ticket can be validated with the validate function. It returns a\n    # TicketInfo value on success, or raises an error on failure\n    info = factory.validate(ticket)\n\nTickets can also be bound to a particular client ip address by passing a\nip address like object (either string, or from module ip_address) as the\nclient_ip argument when creating and validating the string. For example::\n\n    valid_until = time.time() + 60\n    ticket = factory.new('test_id', valid_until=valid_until,\n                         client_ip='192.168.0.1')\n\n    info = factory.validate(ticket, client_ip='192.168.0.1')\n\nA sequence of tokens can also be passed, which will be added to the ticket.\nNote that these tokens (like the user id and user data) are stored in plain\ntext format::\n\n    ticket = factory.new('test_id', valid_until=valid_until, tokens=('a', 'b'),\n                         user_data='some data')\n\nThe TicketInfo object returned by the validate function is a named tuple with\nthe following parameters: digest (hash function output), user_id, tokens,\nuser_data, valid_until.\n\nLicense\n-------\n\nThe library is licensed under a MIT license.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gnarlychicken/ticket_auth", "keywords": "mod_auth_tkt authentication session ticket", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ticket_auth", "package_url": "https://pypi.org/project/ticket_auth/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ticket_auth/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/gnarlychicken/ticket_auth"}, "release_url": "https://pypi.org/project/ticket_auth/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Ticket authentication system similar to mod_auth_tkt used by Apache", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple library that provides a mod_auth_tkt like hashed tickets that can be\nused for storing user authentication details.</p>\n<p>The library is not interchangable with the mod_auth_tkt format, as the\nmod_auth_tkt does not provide support for ipv6 addresses and different hash\nalgorithms, whereas ticket_auth provides both.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The general format for using the library is to instantiate the ticket factory\nused to generate the tickets, and then create new tickets or validate existing\ntickets using that factory. For example:</p>\n<pre># The ticket factory takes a bytes argument specifying the secret\n# identifier, and a optional algorithm (defaults to sha512). Possible\n# algorithms are those specified by the python hashlib library\nfactory = TicketFactory(b'secret', hashalg='md5')\n\n# The new function returns a new ticket (as a string). It takes a user\n# identifier as a argument, along with several optional arguments. The\n# valid_until argument is the time at which the ticket expires.\nvalid_until = time.time() + 60\nticket = factory.new('test_id', valid_until=valid_until)\n\n# A ticket can be validated with the validate function. It returns a\n# TicketInfo value on success, or raises an error on failure\ninfo = factory.validate(ticket)\n</pre>\n<p>Tickets can also be bound to a particular client ip address by passing a\nip address like object (either string, or from module ip_address) as the\nclient_ip argument when creating and validating the string. For example:</p>\n<pre>valid_until = time.time() + 60\nticket = factory.new('test_id', valid_until=valid_until,\n                     client_ip='192.168.0.1')\n\ninfo = factory.validate(ticket, client_ip='192.168.0.1')\n</pre>\n<p>A sequence of tokens can also be passed, which will be added to the ticket.\nNote that these tokens (like the user id and user data) are stored in plain\ntext format:</p>\n<pre>ticket = factory.new('test_id', valid_until=valid_until, tokens=('a', 'b'),\n                     user_data='some data')\n</pre>\n<p>The TicketInfo object returned by the validate function is a named tuple with\nthe following parameters: digest (hash function output), user_id, tokens,\nuser_data, valid_until.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The library is licensed under a MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 1967370, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "758e8798ccc7c7788effb761199ae00e", "sha256": "cce4eaa027912d7ef1545b8cebfa3ae99c0f5200b5f496484bb6dab164324462"}, "downloads": -1, "filename": "ticket_auth-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "758e8798ccc7c7788effb761199ae00e", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 6801, "upload_time": "2016-01-03T06:29:00", "upload_time_iso_8601": "2016-01-03T06:29:00.324503Z", "url": "https://files.pythonhosted.org/packages/d7/72/227ccb48a8cd6ec02a254347282f5807f763db25cc3036cf5436d3a61498/ticket_auth-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e751a0098ecc182ed1318c6f004f4c0", "sha256": "6337d62234dbfe054fc6562f64a3083c7fc2826edcfb7b751b07f938c30ea31a"}, "downloads": -1, "filename": "ticket_auth-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4e751a0098ecc182ed1318c6f004f4c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4212, "upload_time": "2016-01-03T06:28:52", "upload_time_iso_8601": "2016-01-03T06:28:52.288538Z", "url": "https://files.pythonhosted.org/packages/0e/b8/0eb016aa486760d2bdb539f9fd35ad22340a2b532e2a93f99be499cc0702/ticket_auth-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c0fc11895a048c4a5fc002dffabe594b", "sha256": "ca46cddafcd673f4ae2a3c85d2bd946962140ee119dae93f1c181965465c93a8"}, "downloads": -1, "filename": "ticket_auth-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c0fc11895a048c4a5fc002dffabe594b", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 6798, "upload_time": "2016-02-21T00:54:00", "upload_time_iso_8601": "2016-02-21T00:54:00.588843Z", "url": "https://files.pythonhosted.org/packages/fa/62/47f0e6675656cc81d04e4232a37a4090497c860e81da302530dd6722e940/ticket_auth-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "294d338f09795fd24869dfc069f278aa", "sha256": "cefb45ff461dac7fad34144f3f6dfd56c3a28ba5d0f4b5d00b0b063770a2e543"}, "downloads": -1, "filename": "ticket_auth-0.1.4.tar.gz", "has_sig": false, "md5_digest": "294d338f09795fd24869dfc069f278aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4196, "upload_time": "2016-02-21T00:53:54", "upload_time_iso_8601": "2016-02-21T00:53:54.191751Z", "url": "https://files.pythonhosted.org/packages/22/53/249bc795841e1532b8d0a907ab5fee6321726513803196ca6982e40bc379/ticket_auth-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0fc11895a048c4a5fc002dffabe594b", "sha256": "ca46cddafcd673f4ae2a3c85d2bd946962140ee119dae93f1c181965465c93a8"}, "downloads": -1, "filename": "ticket_auth-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c0fc11895a048c4a5fc002dffabe594b", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 6798, "upload_time": "2016-02-21T00:54:00", "upload_time_iso_8601": "2016-02-21T00:54:00.588843Z", "url": "https://files.pythonhosted.org/packages/fa/62/47f0e6675656cc81d04e4232a37a4090497c860e81da302530dd6722e940/ticket_auth-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "294d338f09795fd24869dfc069f278aa", "sha256": "cefb45ff461dac7fad34144f3f6dfd56c3a28ba5d0f4b5d00b0b063770a2e543"}, "downloads": -1, "filename": "ticket_auth-0.1.4.tar.gz", "has_sig": false, "md5_digest": "294d338f09795fd24869dfc069f278aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4196, "upload_time": "2016-02-21T00:53:54", "upload_time_iso_8601": "2016-02-21T00:53:54.191751Z", "url": "https://files.pythonhosted.org/packages/22/53/249bc795841e1532b8d0a907ab5fee6321726513803196ca6982e40bc379/ticket_auth-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:32 2020"}