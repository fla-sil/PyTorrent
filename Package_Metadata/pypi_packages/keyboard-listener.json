{"info": {"author": "Adib Attie", "author_email": "adib.attie33@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# keyboard_listener\n\nKeyboard Listener is a module that allows you to create custom hotkeys (combinations) or custom keywords and bind them to custom functions in Python. It's really easy to use and can be installed via pip:\n\n`pip install keyboard_listener`\n\n**Combinations** are custom hotkeys that are bound to functions. When the combination is pressed, the function is executed. Combos are really easy to set up and can be seen in the example below.\n\n**Keywords** are custom strings that when entered (or rather, when their characters are entered in sequence) trigger a function to be executed. Keywords are also shown in the example below.\n\n**KeyboardListener** object needs to be instantiated with the custom combinations and custom keywords dictionaries before running. Please refer to the below example to see how to set those up. If no dictionaries are passed, the program will assume no combinations or keywords are set up.\n\n## Example:\n\n```python\nfrom keyboard_listener import KeyboardListener, Combo, KeyWord\n\ndef function_1(arguments):\n  # do something\n\ndef function_2(arguments):\n  # do something else\n\ncombinations = {\n\n      'function 1': Combo(['alt'], 'f', function_1, arguments), \n        #Function 1 is executed when the user presses Alt+F\n      'function 2': Combo(['ctr','alt'], 'g', function_2, arguments), \n        #Function 2 is executed when the user presses Alt+G\n      'function 3': Combo(['shift','alt'], 'H', function_2, arguments), \n        #Be mindful when setting up Combos that include 'shift'. If the Combo includes the shift key, the character must be uppercase.\n}\n\nkeywords = {\n\n    'keyword_1': KeyWord('keyword1', function_1, arguments), \n      #Function 1 is executed when the user types 'keyword1'\n    'keyword_2': KeyWord('keyword1', function_2, arguments) \n      #Function 2 is executed when the user types 'keyword2'\n}\n\nkeyboard_listener = KeyboardListener(combinations=combinations, keywords=keywords)\nkeyboard_listener.run()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dibsonthis/keyboard_listener", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "keyboard-listener", "package_url": "https://pypi.org/project/keyboard-listener/", "platform": "", "project_url": "https://pypi.org/project/keyboard-listener/", "project_urls": {"Homepage": "https://github.com/dibsonthis/keyboard_listener"}, "release_url": "https://pypi.org/project/keyboard-listener/0.0.7/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A keyboard listener that allows for custom combinations and keywords to trigger custom functions", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>keyboard_listener</h1>\n<p>Keyboard Listener is a module that allows you to create custom hotkeys (combinations) or custom keywords and bind them to custom functions in Python. It's really easy to use and can be installed via pip:</p>\n<p><code>pip install keyboard_listener</code></p>\n<p><strong>Combinations</strong> are custom hotkeys that are bound to functions. When the combination is pressed, the function is executed. Combos are really easy to set up and can be seen in the example below.</p>\n<p><strong>Keywords</strong> are custom strings that when entered (or rather, when their characters are entered in sequence) trigger a function to be executed. Keywords are also shown in the example below.</p>\n<p><strong>KeyboardListener</strong> object needs to be instantiated with the custom combinations and custom keywords dictionaries before running. Please refer to the below example to see how to set those up. If no dictionaries are passed, the program will assume no combinations or keywords are set up.</p>\n<h2>Example:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keyboard_listener</span> <span class=\"kn\">import</span> <span class=\"n\">KeyboardListener</span><span class=\"p\">,</span> <span class=\"n\">Combo</span><span class=\"p\">,</span> <span class=\"n\">KeyWord</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">function_1</span><span class=\"p\">(</span><span class=\"n\">arguments</span><span class=\"p\">):</span>\n  <span class=\"c1\"># do something</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">function_2</span><span class=\"p\">(</span><span class=\"n\">arguments</span><span class=\"p\">):</span>\n  <span class=\"c1\"># do something else</span>\n\n<span class=\"n\">combinations</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\n      <span class=\"s1\">'function 1'</span><span class=\"p\">:</span> <span class=\"n\">Combo</span><span class=\"p\">([</span><span class=\"s1\">'alt'</span><span class=\"p\">],</span> <span class=\"s1\">'f'</span><span class=\"p\">,</span> <span class=\"n\">function_1</span><span class=\"p\">,</span> <span class=\"n\">arguments</span><span class=\"p\">),</span> \n        <span class=\"c1\">#Function 1 is executed when the user presses Alt+F</span>\n      <span class=\"s1\">'function 2'</span><span class=\"p\">:</span> <span class=\"n\">Combo</span><span class=\"p\">([</span><span class=\"s1\">'ctr'</span><span class=\"p\">,</span><span class=\"s1\">'alt'</span><span class=\"p\">],</span> <span class=\"s1\">'g'</span><span class=\"p\">,</span> <span class=\"n\">function_2</span><span class=\"p\">,</span> <span class=\"n\">arguments</span><span class=\"p\">),</span> \n        <span class=\"c1\">#Function 2 is executed when the user presses Alt+G</span>\n      <span class=\"s1\">'function 3'</span><span class=\"p\">:</span> <span class=\"n\">Combo</span><span class=\"p\">([</span><span class=\"s1\">'shift'</span><span class=\"p\">,</span><span class=\"s1\">'alt'</span><span class=\"p\">],</span> <span class=\"s1\">'H'</span><span class=\"p\">,</span> <span class=\"n\">function_2</span><span class=\"p\">,</span> <span class=\"n\">arguments</span><span class=\"p\">),</span> \n        <span class=\"c1\">#Be mindful when setting up Combos that include 'shift'. If the Combo includes the shift key, the character must be uppercase.</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">keywords</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n\n    <span class=\"s1\">'keyword_1'</span><span class=\"p\">:</span> <span class=\"n\">KeyWord</span><span class=\"p\">(</span><span class=\"s1\">'keyword1'</span><span class=\"p\">,</span> <span class=\"n\">function_1</span><span class=\"p\">,</span> <span class=\"n\">arguments</span><span class=\"p\">),</span> \n      <span class=\"c1\">#Function 1 is executed when the user types 'keyword1'</span>\n    <span class=\"s1\">'keyword_2'</span><span class=\"p\">:</span> <span class=\"n\">KeyWord</span><span class=\"p\">(</span><span class=\"s1\">'keyword1'</span><span class=\"p\">,</span> <span class=\"n\">function_2</span><span class=\"p\">,</span> <span class=\"n\">arguments</span><span class=\"p\">)</span> \n      <span class=\"c1\">#Function 2 is executed when the user types 'keyword2'</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">keyboard_listener</span> <span class=\"o\">=</span> <span class=\"n\">KeyboardListener</span><span class=\"p\">(</span><span class=\"n\">combinations</span><span class=\"o\">=</span><span class=\"n\">combinations</span><span class=\"p\">,</span> <span class=\"n\">keywords</span><span class=\"o\">=</span><span class=\"n\">keywords</span><span class=\"p\">)</span>\n<span class=\"n\">keyboard_listener</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6731230, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "c1b85499184c4fac0463dc024bdba20a", "sha256": "dc565463b3a86c1266e2468e23345eb619ae2c9aef474f01d7669d581f634fb8"}, "downloads": -1, "filename": "keyboard_listener-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c1b85499184c4fac0463dc024bdba20a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15539, "upload_time": "2020-03-01T06:52:31", "upload_time_iso_8601": "2020-03-01T06:52:31.139842Z", "url": "https://files.pythonhosted.org/packages/c1/a8/e7724bf10bc1bd1183881daff27ad3a6f015736373e81028acfacbbafc12/keyboard_listener-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a2048c287b8a60f28e44b41987fc469", "sha256": "d35f98c0ebf2eef2b9209c42df8cb37d9c4f17c6caf4d4ac302b3414ed24617a"}, "downloads": -1, "filename": "keyboard-listener-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0a2048c287b8a60f28e44b41987fc469", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2586, "upload_time": "2020-03-01T06:52:33", "upload_time_iso_8601": "2020-03-01T06:52:33.603118Z", "url": "https://files.pythonhosted.org/packages/ec/37/c74397b94149c4b5d5a2d1bd4a5c76455699b42624cb3f5fb4183d80643e/keyboard-listener-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "0a310fbc95e86ff6062c3d2c495c8b5f", "sha256": "c9c39ba00baba4cce985574c70989adf734801bfa8a8086e6febf380640f3cb8"}, "downloads": -1, "filename": "keyboard_listener-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0a310fbc95e86ff6062c3d2c495c8b5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16164, "upload_time": "2020-03-01T11:15:05", "upload_time_iso_8601": "2020-03-01T11:15:05.883277Z", "url": "https://files.pythonhosted.org/packages/db/83/5ecf11f848af7812fa09dc0ef3a679760745d52b2ec8537ce99dbae55803/keyboard_listener-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b75bced88dbfa20b0d2e226dc36f00e0", "sha256": "02fdfc2a2b2ee65e2f06d39d3d3e703c9133f8a9ac912af69677044e4466de07"}, "downloads": -1, "filename": "keyboard-listener-0.0.5.tar.gz", "has_sig": false, "md5_digest": "b75bced88dbfa20b0d2e226dc36f00e0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3364, "upload_time": "2020-03-01T11:15:07", "upload_time_iso_8601": "2020-03-01T11:15:07.472783Z", "url": "https://files.pythonhosted.org/packages/5e/6e/2bff70486424fc69b28d02da432b20d965e22ac664249fbfeb07a8859ce6/keyboard-listener-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "dfd6c74d84b81dc3d6331e604996f56c", "sha256": "8ff011c4b9cc6cf9b56c36c75ede942c0375b38ccc1fea8fc1fa941404cfbe83"}, "downloads": -1, "filename": "keyboard_listener-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "dfd6c74d84b81dc3d6331e604996f56c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16159, "upload_time": "2020-03-02T04:05:46", "upload_time_iso_8601": "2020-03-02T04:05:46.082444Z", "url": "https://files.pythonhosted.org/packages/6e/15/8b785da235fcc3c365c3a7fafdcd72be3f6d4204f1f4f140c204cbc9dd63/keyboard_listener-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5cd5e82889fc4ad6af4e0620d92fd36", "sha256": "9fbf957d7d152599434b7818bbd153d7abc0e3488db513d13aef5c0d4814eec4"}, "downloads": -1, "filename": "keyboard-listener-0.0.6.tar.gz", "has_sig": false, "md5_digest": "a5cd5e82889fc4ad6af4e0620d92fd36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3364, "upload_time": "2020-03-02T04:05:48", "upload_time_iso_8601": "2020-03-02T04:05:48.493945Z", "url": "https://files.pythonhosted.org/packages/c5/10/035a946b432a2e59b0c69b47d170672b02197208d585c6fc4e4a68737b06/keyboard-listener-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "ce3e4cf141d76c80e3e5ca63c94de380", "sha256": "10bd9e03aaaea6d8173020109f6f4b1833f3d230abb0ea1a47583d6bf1b0129b"}, "downloads": -1, "filename": "keyboard_listener-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ce3e4cf141d76c80e3e5ca63c94de380", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16161, "upload_time": "2020-03-02T04:12:07", "upload_time_iso_8601": "2020-03-02T04:12:07.005246Z", "url": "https://files.pythonhosted.org/packages/81/57/88272c461f5c261834cafa5e9275a6648b2433c4458ce22729bf49493e7f/keyboard_listener-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0698ca2508d55f2adbe98e3943f867c1", "sha256": "849ce710d243cefc98cccea3cd13d41a6e5a7886d9aabd56ab54f99d90437e64"}, "downloads": -1, "filename": "keyboard-listener-0.0.7.tar.gz", "has_sig": false, "md5_digest": "0698ca2508d55f2adbe98e3943f867c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3366, "upload_time": "2020-03-02T04:12:08", "upload_time_iso_8601": "2020-03-02T04:12:08.368266Z", "url": "https://files.pythonhosted.org/packages/c1/2c/5bc5e3660ad2bc27ee61467116e0867d8af61a4b05e299793d2fbd04a527/keyboard-listener-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce3e4cf141d76c80e3e5ca63c94de380", "sha256": "10bd9e03aaaea6d8173020109f6f4b1833f3d230abb0ea1a47583d6bf1b0129b"}, "downloads": -1, "filename": "keyboard_listener-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "ce3e4cf141d76c80e3e5ca63c94de380", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16161, "upload_time": "2020-03-02T04:12:07", "upload_time_iso_8601": "2020-03-02T04:12:07.005246Z", "url": "https://files.pythonhosted.org/packages/81/57/88272c461f5c261834cafa5e9275a6648b2433c4458ce22729bf49493e7f/keyboard_listener-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0698ca2508d55f2adbe98e3943f867c1", "sha256": "849ce710d243cefc98cccea3cd13d41a6e5a7886d9aabd56ab54f99d90437e64"}, "downloads": -1, "filename": "keyboard-listener-0.0.7.tar.gz", "has_sig": false, "md5_digest": "0698ca2508d55f2adbe98e3943f867c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3366, "upload_time": "2020-03-02T04:12:08", "upload_time_iso_8601": "2020-03-02T04:12:08.368266Z", "url": "https://files.pythonhosted.org/packages/c1/2c/5bc5e3660ad2bc27ee61467116e0867d8af61a4b05e299793d2fbd04a527/keyboard-listener-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:00 2020"}