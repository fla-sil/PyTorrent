{"info": {"author": "Gustavo6046", "author_email": "gugurehermann@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Netbyte\n**Byte code, rope flexibility with versatile networking.**\n\n## About\nNetbyte is a compiled intermediary language, with a compiler and virtual machine, written for Python.\nIt has a slightly Lisp-inspired syntax, with an Assembly/Batch-like statement flow logic,\nand is quite flexible. Most of the things you can do in Python, you can do with binary\nfiles and Netbyte.\n\nIts flexibility comes from the fact it can store anything in two forms:\n\n * Python objects - Instruction, Operation, Function, etc.\n\n * Binary compiled code, the target of the compiler, **and** what the\n   interpreter runs. This is what should be sent by sockets when sending\n   instructions, not pickled Python objects.\n\nIt is not meant to be used as a direct language. Like Neko, it is meant to be\nused as a compilation target, but, unlike Neko, the compiled binary code is\nmerely an architecture, so that you can make hierarchies out of it.\n\nFor example, we can have a Python dictionary; let's say it's just a \nlist of functions used by specific objects (actors) or other functional\nattributes and items of a network game, where each entry has a key\nname, and its value is a list of Instructions, which compiled string \u2014\n`netbyte.Netbyte().compile(*instructions)` \u2014 can be transferred around\nwith TCP, and stored into other people's function lists using\n`netbyte.Netbyte().read(binary_code)`, so that everyone knows what instructions\nto run if a certain function X is called on an object `MyObject`.\n\nFor more examples, check the Programs folder.\n\n## How to Use?\n\nYou will need Python 3 to be able to use Netbyte.\n\nTo install, run:\n\n    pip install -U git+https://github.com/Gustavo6046/Netbyte.git\n\nTo set up the Standard Library directory, run:\n\n    stdlibdir.bat\n\nTo compile a program, run:\n\n    python -m netbyte compile input.nbc [output.nbe]\n\nTo execute, run:\n\n    python -m netbyte run input.nbe [arguments - see Stdlib/args.nbc or Programs/printfile.nbc]\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Gustavo6046/Netbyte", "keywords": "compiler language interpreter bytecode", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Netbyte", "package_url": "https://pypi.org/project/Netbyte/", "platform": "", "project_url": "https://pypi.org/project/Netbyte/", "project_urls": {"Homepage": "https://github.com/Gustavo6046/Netbyte"}, "release_url": "https://pypi.org/project/Netbyte/0.1.6.3/", "requires_dist": null, "requires_python": "", "summary": "A language with interpreter and compiler: silk flexibility with network level versatility!", "version": "0.1.6.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Netbyte</h1>\n<p><strong>Byte code, rope flexibility with versatile networking.</strong></p>\n<h2>About</h2>\n<p>Netbyte is a compiled intermediary language, with a compiler and virtual machine, written for Python.\nIt has a slightly Lisp-inspired syntax, with an Assembly/Batch-like statement flow logic,\nand is quite flexible. Most of the things you can do in Python, you can do with binary\nfiles and Netbyte.</p>\n<p>Its flexibility comes from the fact it can store anything in two forms:</p>\n<ul>\n<li>\n<p>Python objects - Instruction, Operation, Function, etc.</p>\n</li>\n<li>\n<p>Binary compiled code, the target of the compiler, <strong>and</strong> what the\ninterpreter runs. This is what should be sent by sockets when sending\ninstructions, not pickled Python objects.</p>\n</li>\n</ul>\n<p>It is not meant to be used as a direct language. Like Neko, it is meant to be\nused as a compilation target, but, unlike Neko, the compiled binary code is\nmerely an architecture, so that you can make hierarchies out of it.</p>\n<p>For example, we can have a Python dictionary; let's say it's just a\nlist of functions used by specific objects (actors) or other functional\nattributes and items of a network game, where each entry has a key\nname, and its value is a list of Instructions, which compiled string \u2014\n<code>netbyte.Netbyte().compile(*instructions)</code> \u2014 can be transferred around\nwith TCP, and stored into other people's function lists using\n<code>netbyte.Netbyte().read(binary_code)</code>, so that everyone knows what instructions\nto run if a certain function X is called on an object <code>MyObject</code>.</p>\n<p>For more examples, check the Programs folder.</p>\n<h2>How to Use?</h2>\n<p>You will need Python 3 to be able to use Netbyte.</p>\n<p>To install, run:</p>\n<pre><code>pip install -U git+https://github.com/Gustavo6046/Netbyte.git\n</code></pre>\n<p>To set up the Standard Library directory, run:</p>\n<pre><code>stdlibdir.bat\n</code></pre>\n<p>To compile a program, run:</p>\n<pre><code>python -m netbyte compile input.nbc [output.nbe]\n</code></pre>\n<p>To execute, run:</p>\n<pre><code>python -m netbyte run input.nbe [arguments - see Stdlib/args.nbc or Programs/printfile.nbc]\n</code></pre>\n\n          </div>"}, "last_serial": 4138560, "releases": {"0.1.6.2": [{"comment_text": "", "digests": {"md5": "27d7f0680e2ee8e138b3c3b0a7312116", "sha256": "7919ca53f012b3af267e642b753fb45e2e3e4da3ac57de351c69b07ca5abf743"}, "downloads": -1, "filename": "Netbyte-0.1.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "27d7f0680e2ee8e138b3c3b0a7312116", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12505, "upload_time": "2018-08-05T22:09:38", "upload_time_iso_8601": "2018-08-05T22:09:38.263299Z", "url": "https://files.pythonhosted.org/packages/ac/c7/9d14768e9d2406f8f18a8dd5381e68ddeb006e55aa8b4e46f9280788be63/Netbyte-0.1.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45073daeb1beb574360288d1214d5ba8", "sha256": "b50d340fce0e60b6768a2c7065edea5a8b46b7ded3ab1f730c9785c6e7cb5b23"}, "downloads": -1, "filename": "Netbyte-0.1.6.2.tar.gz", "has_sig": false, "md5_digest": "45073daeb1beb574360288d1214d5ba8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12264, "upload_time": "2018-08-05T22:09:39", "upload_time_iso_8601": "2018-08-05T22:09:39.242142Z", "url": "https://files.pythonhosted.org/packages/09/b8/15a8be822b3eb61fe9618b596133351301dcc1435299c47a6e912e89f7ca/Netbyte-0.1.6.2.tar.gz", "yanked": false}], "0.1.6.3": [{"comment_text": "", "digests": {"md5": "c6a833111f56e7d20882643d59779b1a", "sha256": "b0915028d620d69634c75154465c7c70aaa96d4688e9932e8d917b668bd8b0c3"}, "downloads": -1, "filename": "Netbyte-0.1.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c6a833111f56e7d20882643d59779b1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13449, "upload_time": "2018-08-05T22:15:18", "upload_time_iso_8601": "2018-08-05T22:15:18.680762Z", "url": "https://files.pythonhosted.org/packages/eb/72/bd5d6a4bfd63b8a54e9c5dbba3ec23cc8dd9e7a735e96335ea69d2bc4073/Netbyte-0.1.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcc2c16262d95666e51d73f5252ce288", "sha256": "34c0dca5622e3c24464283499bd6730e6465ef5a44ccdc7e18991ea321f28961"}, "downloads": -1, "filename": "Netbyte-0.1.6.3.tar.gz", "has_sig": false, "md5_digest": "fcc2c16262d95666e51d73f5252ce288", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12577, "upload_time": "2018-08-05T22:15:20", "upload_time_iso_8601": "2018-08-05T22:15:20.115739Z", "url": "https://files.pythonhosted.org/packages/a8/14/5b65f0ff73fa8173444d1c9d3791428d1c0120d189d7df9d7ebcc37473dd/Netbyte-0.1.6.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6a833111f56e7d20882643d59779b1a", "sha256": "b0915028d620d69634c75154465c7c70aaa96d4688e9932e8d917b668bd8b0c3"}, "downloads": -1, "filename": "Netbyte-0.1.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c6a833111f56e7d20882643d59779b1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13449, "upload_time": "2018-08-05T22:15:18", "upload_time_iso_8601": "2018-08-05T22:15:18.680762Z", "url": "https://files.pythonhosted.org/packages/eb/72/bd5d6a4bfd63b8a54e9c5dbba3ec23cc8dd9e7a735e96335ea69d2bc4073/Netbyte-0.1.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcc2c16262d95666e51d73f5252ce288", "sha256": "34c0dca5622e3c24464283499bd6730e6465ef5a44ccdc7e18991ea321f28961"}, "downloads": -1, "filename": "Netbyte-0.1.6.3.tar.gz", "has_sig": false, "md5_digest": "fcc2c16262d95666e51d73f5252ce288", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12577, "upload_time": "2018-08-05T22:15:20", "upload_time_iso_8601": "2018-08-05T22:15:20.115739Z", "url": "https://files.pythonhosted.org/packages/a8/14/5b65f0ff73fa8173444d1c9d3791428d1c0120d189d7df9d7ebcc37473dd/Netbyte-0.1.6.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:02 2020"}