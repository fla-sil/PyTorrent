{"info": {"author": "B Krishna Chaitanya", "author_email": "bkchaitan94@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Plugins", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database :: Database Engines/Servers", "Topic :: Scientific/Engineering :: GIS"], "description": ".. image:: https://github.com/adonmo/trajectory/workflows/Tests/badge.svg\n   :target: https://github.com/adonmo/trajectory/actions\n   :alt: Test Status\n\n.. image:: https://img.shields.io/pypi/dm/trajectory.svg\n   :target: https://pypistats.org/packages/trajectory\n   :alt: PyPI downloads\n\n.. image:: https://img.shields.io/github/license/adonmo/trajectory.svg\n   :target: https://github.com/adonmo/trajectory/blob/master/LICENSE\n   :alt: MIT License\n\ntrajectory\n============\n\n``trajectory`` is a library for lossy compression of trajectory data based on Google's Encoded Polyline Algorithm Format (http://goo.gl/PvXf8Y). It is heavily based on (in fact forked from) https://github.com/hicsail/polyline.\n\nInstallation\n============\n\n``trajectory`` can be installed using ``pip`` or ``easy_install``\n\n.. code-block:: sh\n\n    $ pip install trajectory\n    or\n    $ easy_install trajectory\n\nAPI Documentation\n=================\n\nEncoding\n--------\n\nTo serialize a trajectory (set of (lat, lon, unix time in seconds) tuples)\n\n.. code-block:: py\n\n    import trajectory\n    trajectory.encode([\n        (38.500, -120.200, 1582482601),\n        (40.700, -120.950, 1582482611),\n        (43.252, -126.453, 1582482627)\n    ], 5)\n\nThis should return ``_p~iF~ps|U_ynpijgz~G_ulLnnqC_c`|@_mqNvxq`@__t`B``.\n\nYou can set the required precision with the optional ``precision`` parameter. The default value is 5.\n\nDecoding\n--------\n\nTo deserialize a trajectory (set of (lat, lon, unix time in seconds) tuples) represented by an encoded string\n\n.. code-block:: py\n\n    import trajectory\n    trajectory.decode('_p~iF~ps|U_ynpijgz~G_ulLnnqC_c`|@_mqNvxq`@__t`B', 5)\n\nThis should return the following:\n\n.. code-block:: py\n\n    [\n        (38.500, -120.200, 1582482601),\n        (40.700, -120.950, 1582482611),\n        (43.252, -126.453, 1582482627)\n    ]\n\nYou can set the required precision with the optional ``precision`` parameter. The default value is 5.\n\n\nDevelopment\n===========\n\nSetup Dependencies\n------------------\n\n.. code-block:: sh\n\n    $ poetry install\n\nRunning Tests\n-------------\n\n.. code-block:: sh\n\n    $ poetry run pytest\n\nContributing\n------------\n\nIssues and pull requests are welcome.\n\n* For proposing new features/improvements or reporting bugs, `create an issue <https://github.com/adonmo/trajectory/issues/new/choose>`_.\n* Check `open issues <https://github.com/adonmo/trajectory/issues>`_ for viewing existing ideas, verify if it is already proposed/being worked upon.\n* When implementing new features make sure to add relavant tests and documentation before sending pull requests.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adonmo/trajectory", "keywords": "geo,gis,postgres,mobility,trajectory,spatiotemporal", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "trajectory", "package_url": "https://pypi.org/project/trajectory/", "platform": "", "project_url": "https://pypi.org/project/trajectory/", "project_urls": {"Documentation": "https://github.com/adonmo/trajectory", "Homepage": "https://github.com/adonmo/trajectory", "Repository": "https://github.com/adonmo/trajectory"}, "release_url": "https://pypi.org/project/trajectory/0.1.1/", "requires_dist": ["six (>=1.14.0,<2.0.0)"], "requires_python": ">=3.6", "summary": "Trajectory data lossy compression format based on Google's Encoded Polyline Algorithm Format", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://github.com/adonmo/trajectory/actions\" rel=\"nofollow\"><img alt=\"Test Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f59a8f18b1878f9dce5f344e271a9b4625d7739/68747470733a2f2f6769746875622e636f6d2f61646f6e6d6f2f7472616a6563746f72792f776f726b666c6f77732f54657374732f62616467652e737667\"></a>\n<a href=\"https://pypistats.org/packages/trajectory\" rel=\"nofollow\"><img alt=\"PyPI downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ce0554e3d340cd860c284361af8c344ce5bdc01/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7472616a6563746f72792e737667\"></a>\n<a href=\"https://github.com/adonmo/trajectory/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d64f5976d92fc9eaf26988b09c815715c10b09cc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f61646f6e6d6f2f7472616a6563746f72792e737667\"></a>\n<div id=\"trajectory\">\n<h2>trajectory</h2>\n<p><tt>trajectory</tt> is a library for lossy compression of trajectory data based on Google\u2019s Encoded Polyline Algorithm Format (<a href=\"http://goo.gl/PvXf8Y\" rel=\"nofollow\">http://goo.gl/PvXf8Y</a>). It is heavily based on (in fact forked from) <a href=\"https://github.com/hicsail/polyline\" rel=\"nofollow\">https://github.com/hicsail/polyline</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>trajectory</tt> can be installed using <tt>pip</tt> or <tt>easy_install</tt></p>\n<pre>$ pip install trajectory\nor\n$ easy_install trajectory\n</pre>\n</div>\n<div id=\"api-documentation\">\n<h2>API Documentation</h2>\n<div id=\"encoding\">\n<h3>Encoding</h3>\n<p>To serialize a trajectory (set of (lat, lon, unix time in seconds) tuples)</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">trajectory</span>\n<span class=\"n\">trajectory</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">([</span>\n    <span class=\"p\">(</span><span class=\"mf\">38.500</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">120.200</span><span class=\"p\">,</span> <span class=\"mi\">1582482601</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mf\">40.700</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">120.950</span><span class=\"p\">,</span> <span class=\"mi\">1582482611</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mf\">43.252</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">126.453</span><span class=\"p\">,</span> <span class=\"mi\">1582482627</span><span class=\"p\">)</span>\n<span class=\"p\">],</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>This should return <tt><span class=\"pre\">_p~iF~ps|U_ynpijgz~G_ulLnnqC_c`|@_mqNvxq`@__t`B</span></tt>.</p>\n<p>You can set the required precision with the optional <tt>precision</tt> parameter. The default value is 5.</p>\n</div>\n<div id=\"decoding\">\n<h3>Decoding</h3>\n<p>To deserialize a trajectory (set of (lat, lon, unix time in seconds) tuples) represented by an encoded string</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">trajectory</span>\n<span class=\"n\">trajectory</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s1\">'_p~iF~ps|U_ynpijgz~G_ulLnnqC_c`|@_mqNvxq`@__t`B'</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>This should return the following:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">(</span><span class=\"mf\">38.500</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">120.200</span><span class=\"p\">,</span> <span class=\"mi\">1582482601</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mf\">40.700</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">120.950</span><span class=\"p\">,</span> <span class=\"mi\">1582482611</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"mf\">43.252</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">126.453</span><span class=\"p\">,</span> <span class=\"mi\">1582482627</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n</pre>\n<p>You can set the required precision with the optional <tt>precision</tt> parameter. The default value is 5.</p>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<div id=\"setup-dependencies\">\n<h3>Setup Dependencies</h3>\n<pre>$ poetry install\n</pre>\n</div>\n<div id=\"running-tests\">\n<h3>Running Tests</h3>\n<pre>$ poetry run pytest\n</pre>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Issues and pull requests are welcome.</p>\n<ul>\n<li>For proposing new features/improvements or reporting bugs, <a href=\"https://github.com/adonmo/trajectory/issues/new/choose\" rel=\"nofollow\">create an issue</a>.</li>\n<li>Check <a href=\"https://github.com/adonmo/trajectory/issues\" rel=\"nofollow\">open issues</a> for viewing existing ideas, verify if it is already proposed/being worked upon.</li>\n<li>When implementing new features make sure to add relavant tests and documentation before sending pull requests.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6689952, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "0b8e80cc45d256cb6d1ef5bd230fa378", "sha256": "d2a08f8f6ffaa8a70ea899d641f88386414a73de77883403395f42f17a2cad1e"}, "downloads": -1, "filename": "trajectory-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0b8e80cc45d256cb6d1ef5bd230fa378", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4540, "upload_time": "2020-02-24T17:31:53", "upload_time_iso_8601": "2020-02-24T17:31:53.013289Z", "url": "https://files.pythonhosted.org/packages/2b/c6/9067bc3a3c4f891b37976ed28ef7c1979a1eb39500da3ddb44826a9f4ca1/trajectory-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d3ee2a8d50099771840c7089e4b443a", "sha256": "8631b3a943f10042d55a7d680a024436b3876049992d9447a4872e84b15b942c"}, "downloads": -1, "filename": "trajectory-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2d3ee2a8d50099771840c7089e4b443a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4523, "upload_time": "2020-02-24T17:31:54", "upload_time_iso_8601": "2020-02-24T17:31:54.571041Z", "url": "https://files.pythonhosted.org/packages/fa/70/6d5b12d36264d77e577c61699a307c8a02eba9573647d51c35b577e4b9b8/trajectory-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b8e80cc45d256cb6d1ef5bd230fa378", "sha256": "d2a08f8f6ffaa8a70ea899d641f88386414a73de77883403395f42f17a2cad1e"}, "downloads": -1, "filename": "trajectory-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0b8e80cc45d256cb6d1ef5bd230fa378", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4540, "upload_time": "2020-02-24T17:31:53", "upload_time_iso_8601": "2020-02-24T17:31:53.013289Z", "url": "https://files.pythonhosted.org/packages/2b/c6/9067bc3a3c4f891b37976ed28ef7c1979a1eb39500da3ddb44826a9f4ca1/trajectory-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d3ee2a8d50099771840c7089e4b443a", "sha256": "8631b3a943f10042d55a7d680a024436b3876049992d9447a4872e84b15b942c"}, "downloads": -1, "filename": "trajectory-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2d3ee2a8d50099771840c7089e4b443a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4523, "upload_time": "2020-02-24T17:31:54", "upload_time_iso_8601": "2020-02-24T17:31:54.571041Z", "url": "https://files.pythonhosted.org/packages/fa/70/6d5b12d36264d77e577c61699a307c8a02eba9573647d51c35b577e4b9b8/trajectory-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:48:28 2020"}