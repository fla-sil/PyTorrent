{"info": {"author": "Matt Borgerson", "author_email": "contact@mborgerson.com", "bugtrack_url": null, "classifiers": [], "description": "PyXbSymbolDatabase ![CI Status](https://github.com/mborgerson/PyXbSymbolDatabase/workflows/Tests/badge.svg?branch=master)\n==================\n\nPython bindings to the [Xbox Symbol\nDatabase](https://github.com/Cxbx-Reloaded/XbSymbolDatabase). Useful for\nscanning Xbox Executables (XBEs) for known XDK symbols using pattern matching.\n\nInstall\n-------\n\nYou will need CMake and a compiler installed in order to build. Then install\nusing PIP:\n\n```bash\npython3 -m pip install --user git+https://github.com/mborgerson/PyXbSymbolDatabase\n```\n\nExample Usage\n-------------\n\n### As a command-line tool\n\nInvoke the module with a path to an XBE file to scan the XBE for any known\nsymbols.\n\n```\n$ python -m XbSymbolDatabase default.xbe\n    D3D8    0    1 00192390 D3DDEVICE\n    D3D8    0    1 0018f57c D3DRS_CULLMODE\n    D3D8    0    1 0018f4c8 D3DDeferredRenderState\n    D3D8    0    1 0018f180 D3DDeferredTextureState\n    D3D8    0    1 0018f5c0 g_Stream\n  DSOUND 3911    8 001946ea CDirectSoundStream_Constructor\n  DSOUND 3911    8 00194358 CDirectSoundStream_AddRef\n  DSOUND 3911    8 00194368 CDirectSoundStream_Release\n  DSOUND 3911    8 001937aa CDirectSoundStream_GetInfo\n  DSOUND 3911    8 0019384f CDirectSoundStream_GetStatus\n  DSOUND 3911    8 00193884 CDirectSoundStream_Process\n  DSOUND 3911    8 001937f5 CDirectSoundStream_Discontinuity\n  DSOUND 3911    8 00193822 CDirectSoundStream_Flush\n XAPILIB 3911   40 00012d01 CreateMutex\n XAPILIB 3911   40 00012be3 CreateThread\n XAPILIB 3911   40 00014d39 MoveFileA\n XAPILIB 3911   40 00012aa3 SwitchToThread\n XAPILIB 3911   40 00015ba5 XCalculateSignatureBegin\n XAPILIB 3911   40 00018b0c XapiBootDash\n XAPILIB 3911   40 00018b71 XapiInitProcess\n[...]\n```\n\n### As a library\n\nImport the `XbSymbolScan` function from the `XbSymbolDatabase` module and give\nit your XBE data.\n\n```python\n#!/usr/bin/env python\nimport argparse\nfrom XbSymbolDatabase import XbSymbolScan\n\ndef main():\n\tp = argparse.ArgumentParser()\n\tp.add_argument('xbefile')\n\targs = p.parse_args()\n\n\twith open(args.xbefile, 'rb') as f:\n\t\txbe = f.read()\n\t\tfor lib, flags, sym, addr, ver in XbSymbolScan(xbe):\n\t\t\tprint('%8s %4d %4x %08x %s' % (\n\t\t\t\tstr(lib, encoding='ascii'), ver, flags, addr,\n\t\t\t\tstr(sym, encoding='ascii')))\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mborgerson/PyXbSymbolDatabase", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "PyXbSymbolDatabase", "package_url": "https://pypi.org/project/PyXbSymbolDatabase/", "platform": "", "project_url": "https://pypi.org/project/PyXbSymbolDatabase/", "project_urls": {"Homepage": "https://github.com/mborgerson/PyXbSymbolDatabase"}, "release_url": "https://pypi.org/project/PyXbSymbolDatabase/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Python bindings to XbSymbolDatabase", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyXbSymbolDatabase <img alt=\"CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ec0a882c69d41a4b7df3958ccb8109e4b686d45/68747470733a2f2f6769746875622e636f6d2f6d626f72676572736f6e2f5079586253796d626f6c44617461626173652f776f726b666c6f77732f54657374732f62616467652e7376673f6272616e63683d6d6173746572\"></h1>\n<p>Python bindings to the <a href=\"https://github.com/Cxbx-Reloaded/XbSymbolDatabase\" rel=\"nofollow\">Xbox Symbol\nDatabase</a>. Useful for\nscanning Xbox Executables (XBEs) for known XDK symbols using pattern matching.</p>\n<h2>Install</h2>\n<p>You will need CMake and a compiler installed in order to build. Then install\nusing PIP:</p>\n<pre>python3 -m pip install --user git+https://github.com/mborgerson/PyXbSymbolDatabase\n</pre>\n<h2>Example Usage</h2>\n<h3>As a command-line tool</h3>\n<p>Invoke the module with a path to an XBE file to scan the XBE for any known\nsymbols.</p>\n<pre><code>$ python -m XbSymbolDatabase default.xbe\n    D3D8    0    1 00192390 D3DDEVICE\n    D3D8    0    1 0018f57c D3DRS_CULLMODE\n    D3D8    0    1 0018f4c8 D3DDeferredRenderState\n    D3D8    0    1 0018f180 D3DDeferredTextureState\n    D3D8    0    1 0018f5c0 g_Stream\n  DSOUND 3911    8 001946ea CDirectSoundStream_Constructor\n  DSOUND 3911    8 00194358 CDirectSoundStream_AddRef\n  DSOUND 3911    8 00194368 CDirectSoundStream_Release\n  DSOUND 3911    8 001937aa CDirectSoundStream_GetInfo\n  DSOUND 3911    8 0019384f CDirectSoundStream_GetStatus\n  DSOUND 3911    8 00193884 CDirectSoundStream_Process\n  DSOUND 3911    8 001937f5 CDirectSoundStream_Discontinuity\n  DSOUND 3911    8 00193822 CDirectSoundStream_Flush\n XAPILIB 3911   40 00012d01 CreateMutex\n XAPILIB 3911   40 00012be3 CreateThread\n XAPILIB 3911   40 00014d39 MoveFileA\n XAPILIB 3911   40 00012aa3 SwitchToThread\n XAPILIB 3911   40 00015ba5 XCalculateSignatureBegin\n XAPILIB 3911   40 00018b0c XapiBootDash\n XAPILIB 3911   40 00018b71 XapiInitProcess\n[...]\n</code></pre>\n<h3>As a library</h3>\n<p>Import the <code>XbSymbolScan</code> function from the <code>XbSymbolDatabase</code> module and give\nit your XBE data.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">XbSymbolDatabase</span> <span class=\"kn\">import</span> <span class=\"n\">XbSymbolScan</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n\t<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">()</span>\n\t<span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s1\">'xbefile'</span><span class=\"p\">)</span>\n\t<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n\t<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">xbefile</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n\t\t<span class=\"n\">xbe</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\t\t<span class=\"k\">for</span> <span class=\"n\">lib</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"p\">,</span> <span class=\"n\">sym</span><span class=\"p\">,</span> <span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"n\">ver</span> <span class=\"ow\">in</span> <span class=\"n\">XbSymbolScan</span><span class=\"p\">(</span><span class=\"n\">xbe</span><span class=\"p\">):</span>\n\t\t\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%8s</span><span class=\"s1\"> </span><span class=\"si\">%4d</span><span class=\"s1\"> </span><span class=\"si\">%4x</span><span class=\"s1\"> </span><span class=\"si\">%08x</span><span class=\"s1\"> </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span>\n\t\t\t\t<span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">lib</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'ascii'</span><span class=\"p\">),</span> <span class=\"n\">ver</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"p\">,</span> <span class=\"n\">addr</span><span class=\"p\">,</span>\n\t\t\t\t<span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">sym</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'ascii'</span><span class=\"p\">)))</span>\n</pre>\n\n          </div>"}, "last_serial": 6419736, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "06691e4075b3206aa1f0a1302fbdb90e", "sha256": "0739ac96c08826b23d8696f9b499c57be42ef498f2f4328be81052f42403fd7b"}, "downloads": -1, "filename": "PyXbSymbolDatabase-0.0.1.tar.gz", "has_sig": false, "md5_digest": "06691e4075b3206aa1f0a1302fbdb90e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1455842, "upload_time": "2020-01-09T02:33:01", "upload_time_iso_8601": "2020-01-09T02:33:01.218827Z", "url": "https://files.pythonhosted.org/packages/1c/51/dc7d80525f52aa5b403e1c32650461543b3d0f40bcdeca2105eefb01574f/PyXbSymbolDatabase-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06691e4075b3206aa1f0a1302fbdb90e", "sha256": "0739ac96c08826b23d8696f9b499c57be42ef498f2f4328be81052f42403fd7b"}, "downloads": -1, "filename": "PyXbSymbolDatabase-0.0.1.tar.gz", "has_sig": false, "md5_digest": "06691e4075b3206aa1f0a1302fbdb90e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1455842, "upload_time": "2020-01-09T02:33:01", "upload_time_iso_8601": "2020-01-09T02:33:01.218827Z", "url": "https://files.pythonhosted.org/packages/1c/51/dc7d80525f52aa5b403e1c32650461543b3d0f40bcdeca2105eefb01574f/PyXbSymbolDatabase-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:03 2020"}