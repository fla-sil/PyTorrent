{"info": {"author": "Praekelt Foundation", "author_email": "dev@praekeltfoundation.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking"], "description": "vumi-go-data-tools\n=======\n\nPraekelt Foundation does a lot of work using the Vumi Go messaging platform.\nVumi Go makes all data captured available as CSV files but as of yet does not\nprovide tools for doing pivot table based analysis on that data. The idea is\nto develop set of reusable tools that allows a developer to quickly do pivot\ntables on large CSV files that Vumi Go produces on behalf of the project owner\nfor post campaign analysis. These tools should give insight into session counts,\nreturning visitors and effectiveness of different approaches taken with differing\nVumi Go contact groups that interact with a service.\n\nSet up\n~~~~~~~~~~\n\n::\n\n  $ virtualenv ve\n  $ . ve/bin/activate\n  $ pip install -e .\n\nUsage\n~~~~~~~~~~\n\n::\n\n  $ gdt --help\n\n    usage: gdt [-h] [-c CODEC_CLASS]\n\n               {msisdn,daterange,weekrange,direction,session,contacts,regex,extract,aggregate,count}\n               ...\n\n    Vumi Go Data Tools for CSV and JSON formatted data from STDIN. Use `--codec`\n    to specify. Designed to pipe output from one subcommand to another. Use `gdt\n    subcommand --help` for more info.\n\n    positional arguments:\n      {msisdn,daterange,weekrange,direction,session,contacts,regex,extract,aggregate,count}\n                            use `command --help`.\n        msisdn              Filter on an msisdn\n        daterange           Filter on a date range.\n        weekrange           Filter on a week range.\n        direction           Filter on message direction.\n        session             Filter on session events.\n        contacts            Filter for certain contact addresses\n        regex               Filter for regex matches\n        extract             Extract named fields from file.\n        aggregate           Aggregate fields\n        count               Count fields\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -c CODEC_CLASS, --codec CODEC_CLASS\n                            Which codec to use.\n\n\nExamples\n~~~~~~~~~~\n\n::\n\n  $ cat gdt/tests/messages-export-good.csv | gdt msisdn -m +27817030792 -t to_addr | gdt direction -d outbound | gdt daterange -s \"2013-09-09 19:24\" -e \"2013-09-09 19:38\"\n\n  $ cat gdt/tests/messages-export-week-spread.csv | gdt weekrange -y 2013 -w 1 2 3 4\n\n  $ cat gdt/tests/messages-export-good.csv | gdt session -t new\n\n  $ cat gdt/tests/messages-export-good.csv | gdt contacts -a +123456 +123457\n\n  $ cat gdt/tests/messages-export-good.csv | gdt contacts -a @contact_file.txt\n\n  $ cat gdt/tests/messages-export-good.csv | gdt regex -f content -p \"^we think\" -i\n\n  $ cat gdt/tests/messages-export-good.csv | gdt extract -f to_addr session_event -df \"%M\" \n\n  $ cat gdt/tests/messages-export-good.csv | gdt extract -f to_addr session_event -df \"%M\" | gdt aggregate -f to_addr\n\n  $ cat gdt/tests/messages-export-good.csv | gdt extract -f to_addr session_event -df \"%M\" | gdt count -f to_addr\n\n  $ cat gdt/tests/messages-export-week-spread.csv | gdt weekrange -y 2013 -w 1 2 3 4", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/praekelt/vumi-go-data-tools", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "gdt", "package_url": "https://pypi.org/project/gdt/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gdt/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/praekelt/vumi-go-data-tools"}, "release_url": "https://pypi.org/project/gdt/0.1/", "requires_dist": null, "requires_python": null, "summary": "UNKNOWN", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            vumi-go-data-tools<br>=======<br><br>Praekelt Foundation does a lot of work using the Vumi Go messaging platform.<br>Vumi Go makes all data captured available as CSV files but as of yet does not<br>provide tools for doing pivot table based analysis on that data. The idea is<br>to develop set of reusable tools that allows a developer to quickly do pivot<br>tables on large CSV files that Vumi Go produces on behalf of the project owner<br>for post campaign analysis. These tools should give insight into session counts,<br>returning visitors and effectiveness of different approaches taken with differing<br>Vumi Go contact groups that interact with a service.<br><br>Set up<br>~~~~~~~~~~<br><br>::<br><br>  $ virtualenv ve<br>  $ . ve/bin/activate<br>  $ pip install -e .<br><br>Usage<br>~~~~~~~~~~<br><br>::<br><br>  $ gdt --help<br><br>    usage: gdt [-h] [-c CODEC_CLASS]<br><br>               {msisdn,daterange,weekrange,direction,session,contacts,regex,extract,aggregate,count}<br>               ...<br><br>    Vumi Go Data Tools for CSV and JSON formatted data from STDIN. Use `--codec`<br>    to specify. Designed to pipe output from one subcommand to another. Use `gdt<br>    subcommand --help` for more info.<br><br>    positional arguments:<br>      {msisdn,daterange,weekrange,direction,session,contacts,regex,extract,aggregate,count}<br>                            use `command --help`.<br>        msisdn              Filter on an msisdn<br>        daterange           Filter on a date range.<br>        weekrange           Filter on a week range.<br>        direction           Filter on message direction.<br>        session             Filter on session events.<br>        contacts            Filter for certain contact addresses<br>        regex               Filter for regex matches<br>        extract             Extract named fields from file.<br>        aggregate           Aggregate fields<br>        count               Count fields<br><br>    optional arguments:<br>      -h, --help            show this help message and exit<br>      -c CODEC_CLASS, --codec CODEC_CLASS<br>                            Which codec to use.<br><br><br>Examples<br>~~~~~~~~~~<br><br>::<br><br>  $ cat gdt/tests/messages-export-good.csv | gdt msisdn -m +27817030792 -t to_addr | gdt direction -d outbound | gdt daterange -s \"2013-09-09 19:24\" -e \"2013-09-09 19:38\"<br><br>  $ cat gdt/tests/messages-export-week-spread.csv | gdt weekrange -y 2013 -w 1 2 3 4<br><br>  $ cat gdt/tests/messages-export-good.csv | gdt session -t new<br><br>  $ cat gdt/tests/messages-export-good.csv | gdt contacts -a +123456 +123457<br><br>  $ cat gdt/tests/messages-export-good.csv | gdt contacts -a @contact_file.txt<br><br>  $ cat gdt/tests/messages-export-good.csv | gdt regex -f content -p \"^we think\" -i<br><br>  $ cat gdt/tests/messages-export-good.csv | gdt extract -f to_addr session_event -df \"%M\" <br><br>  $ cat gdt/tests/messages-export-good.csv | gdt extract -f to_addr session_event -df \"%M\" | gdt aggregate -f to_addr<br><br>  $ cat gdt/tests/messages-export-good.csv | gdt extract -f to_addr session_event -df \"%M\" | gdt count -f to_addr<br><br>  $ cat gdt/tests/messages-export-week-spread.csv | gdt weekrange -y 2013 -w 1 2 3 4\n          </div>"}, "last_serial": 2516223, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3cb53499bfd6f1adb035d03ef5c4d8f4", "sha256": "5741040eadfe03902cc130121aeb35201a4ac213ae7f3f530a3c912197eff47b"}, "downloads": -1, "filename": "gdt-0.1.tar.gz", "has_sig": false, "md5_digest": "3cb53499bfd6f1adb035d03ef5c4d8f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8117, "upload_time": "2014-11-13T14:53:13", "upload_time_iso_8601": "2014-11-13T14:53:13.426873Z", "url": "https://files.pythonhosted.org/packages/6d/ce/0dff2261bfde7f53c20ddf834a38079b572664afd98e05534a49fb57cea4/gdt-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3cb53499bfd6f1adb035d03ef5c4d8f4", "sha256": "5741040eadfe03902cc130121aeb35201a4ac213ae7f3f530a3c912197eff47b"}, "downloads": -1, "filename": "gdt-0.1.tar.gz", "has_sig": false, "md5_digest": "3cb53499bfd6f1adb035d03ef5c4d8f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8117, "upload_time": "2014-11-13T14:53:13", "upload_time_iso_8601": "2014-11-13T14:53:13.426873Z", "url": "https://files.pythonhosted.org/packages/6d/ce/0dff2261bfde7f53c20ddf834a38079b572664afd98e05534a49fb57cea4/gdt-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:40 2020"}