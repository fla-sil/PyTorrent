{"info": {"author": "k.r. goger", "author_email": "k.r.goger+mpyconfigbase@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Software Development :: Embedded Systems", "Topic :: Terminals :: Serial", "Topic :: Utilities"], "description": "\n# MPyConfigBase\n\nConfigure automatic startup of MicroPython WLAN / AP / WebRepl / NTP time during boot \n\n## General information\n\nUse this together with [mpycntrl](https://pypi.org/project/mpycntrl/) for automation of the setup/deployment and configuration of MicroPython base interfaces. see also [mpycntrl on github](https://github.com/kr-g/mpycntrl)\n\n## Usage\n\nThe information given in the files `wlan.cfg`, `softap.cfg` and `webrepl_cfg.py` are used for configuration.\n\nwlan.cfg and softap.cfg are text files containing ESSID and password in 2 lines\n\nwebrepl_cfg.py is a python file containing a single line like \n\n    PASS = '123456'\n\nDuring wlan start the time from NTP is fetched by default.\n\n\n## Best practice\n\n* send cntrl+c\n* upload the module file along with the configuration files directly (the config files are `wlan.cfg`, `softap.cfg` and `webrepl_cfg.py`)\n* send reset\n\n\n## Sample Code (in boot.py)\n\n    from mpyconfigbase import *\n    try:\n        configbase = MPyConfigBase()\n        configbase.start()\n    except Exception as ex:\n        print( \"error:\", ex )\n\n    print(\"set ntp time\", configbase.ntp )\n\n    import time\n    while True:\n        print( \"->\", time.localtime( time.time() ) )\n        time.sleep(1)\n\n\n## Installation during deployment\n\nThe python class code can be retrieved by calling:\n\n    fnam, src = MPyConfigBase.get_class_source() # get the module code\n    cfgbootcode = MPyConfigBase.get_boot_install_code() # get the minimal autconfig code\n\n\n## Sample Code (deployment)\n\nSome sample code for automatic deployment and configuration. In case of timeouts (error message: could not enter raw-repl) consider to use `with mpyc.timeout(1) as tout:` code block. \n\nThe code is also available [here on github](https://github.com/kr-g/mpyconfigbase)\n\nReset the board during the deployment is required since MicroPython needs to bring in the new code before the configuration can take place. If you follow the best practice given above this dont needs to be done.\n\n\n## Limitations\n\non esp8266 the combined startup with `start` will probably fail.\n\non esp32 it will work :-)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kr-g/mpyconfigbase", "keywords": "micropython utility shell automation deployment", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mpyconfigbase", "package_url": "https://pypi.org/project/mpyconfigbase/", "platform": "", "project_url": "https://pypi.org/project/mpyconfigbase/", "project_urls": {"Homepage": "https://github.com/kr-g/mpyconfigbase"}, "release_url": "https://pypi.org/project/mpyconfigbase/0.0.4/", "requires_dist": ["mpycntrl"], "requires_python": ">=3.6", "summary": "Configure MicroPython WLAN/AP/WebRepl startup with your own code", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MPyConfigBase</h1>\n<p>Configure automatic startup of MicroPython WLAN / AP / WebRepl / NTP time during boot</p>\n<h2>General information</h2>\n<p>Use this together with <a href=\"https://pypi.org/project/mpycntrl/\" rel=\"nofollow\">mpycntrl</a> for automation of the setup/deployment and configuration of MicroPython base interfaces. see also <a href=\"https://github.com/kr-g/mpycntrl\" rel=\"nofollow\">mpycntrl on github</a></p>\n<h2>Usage</h2>\n<p>The information given in the files <code>wlan.cfg</code>, <code>softap.cfg</code> and <code>webrepl_cfg.py</code> are used for configuration.</p>\n<p>wlan.cfg and softap.cfg are text files containing ESSID and password in 2 lines</p>\n<p>webrepl_cfg.py is a python file containing a single line like</p>\n<pre><code>PASS = '123456'\n</code></pre>\n<p>During wlan start the time from NTP is fetched by default.</p>\n<h2>Best practice</h2>\n<ul>\n<li>send cntrl+c</li>\n<li>upload the module file along with the configuration files directly (the config files are <code>wlan.cfg</code>, <code>softap.cfg</code> and <code>webrepl_cfg.py</code>)</li>\n<li>send reset</li>\n</ul>\n<h2>Sample Code (in boot.py)</h2>\n<pre><code>from mpyconfigbase import *\ntry:\n    configbase = MPyConfigBase()\n    configbase.start()\nexcept Exception as ex:\n    print( \"error:\", ex )\n\nprint(\"set ntp time\", configbase.ntp )\n\nimport time\nwhile True:\n    print( \"-&gt;\", time.localtime( time.time() ) )\n    time.sleep(1)\n</code></pre>\n<h2>Installation during deployment</h2>\n<p>The python class code can be retrieved by calling:</p>\n<pre><code>fnam, src = MPyConfigBase.get_class_source() # get the module code\ncfgbootcode = MPyConfigBase.get_boot_install_code() # get the minimal autconfig code\n</code></pre>\n<h2>Sample Code (deployment)</h2>\n<p>Some sample code for automatic deployment and configuration. In case of timeouts (error message: could not enter raw-repl) consider to use <code>with mpyc.timeout(1) as tout:</code> code block.</p>\n<p>The code is also available <a href=\"https://github.com/kr-g/mpyconfigbase\" rel=\"nofollow\">here on github</a></p>\n<p>Reset the board during the deployment is required since MicroPython needs to bring in the new code before the configuration can take place. If you follow the best practice given above this dont needs to be done.</p>\n<h2>Limitations</h2>\n<p>on esp8266 the combined startup with <code>start</code> will probably fail.</p>\n<p>on esp32 it will work :-)</p>\n\n          </div>"}, "last_serial": 6927904, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "34d69bac83749555ebb5891ec244b7fb", "sha256": "c97a847326a8fdfb5c4c5f64d71fe2a2ca1df7524d0858424bb3b7321d1ba31d"}, "downloads": -1, "filename": "mpyconfigbase-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "34d69bac83749555ebb5891ec244b7fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7653, "upload_time": "2019-12-03T09:51:49", "upload_time_iso_8601": "2019-12-03T09:51:49.445663Z", "url": "https://files.pythonhosted.org/packages/a2/d4/f48e33c11931f202b109b8269e51e126c36ea44739ba77180976efa9aa00/mpyconfigbase-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f11f3d80f0efc449168a6e891bc93f15", "sha256": "ed6762868087b32e149e0b08d989b917fd79228af79ca28566521f82e24446a1"}, "downloads": -1, "filename": "mpyconfigbase-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f11f3d80f0efc449168a6e891bc93f15", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5122, "upload_time": "2019-12-03T09:51:52", "upload_time_iso_8601": "2019-12-03T09:51:52.239299Z", "url": "https://files.pythonhosted.org/packages/d4/9b/4e312f4147c2ce3bafe47cf9ffba9cbd364f010dac812b7fecd6bec0b4e0/mpyconfigbase-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f56bf44f4136c45abbed74e9911f1312", "sha256": "a1136452c844dbe1b8c74e777003c27a823ce229566285696406dc5ac224bd6e"}, "downloads": -1, "filename": "mpyconfigbase-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f56bf44f4136c45abbed74e9911f1312", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7753, "upload_time": "2019-12-05T12:05:19", "upload_time_iso_8601": "2019-12-05T12:05:19.303821Z", "url": "https://files.pythonhosted.org/packages/52/68/8898599090cc36cd82043bd89e842d461ed1bf4730be981705df61ca1bc5/mpyconfigbase-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3c0ce905bc3ce2e2286cc3e378e627e", "sha256": "16bb9f7abee9a15cd2348433a57e710ceba7acb7f0af548894e7696a12408fc1"}, "downloads": -1, "filename": "mpyconfigbase-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d3c0ce905bc3ce2e2286cc3e378e627e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5232, "upload_time": "2019-12-05T12:05:20", "upload_time_iso_8601": "2019-12-05T12:05:20.624746Z", "url": "https://files.pythonhosted.org/packages/6a/22/8b9057a6b9c591fb310b771735c61e8bd25037b7095d1eb53e98b51f899a/mpyconfigbase-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f6b96c54441dbc15092fdf9f898bedab", "sha256": "0958b871aedfa55ef1122386bac8a6950039cb7b63061a63d3ed0592adf6b1ef"}, "downloads": -1, "filename": "mpyconfigbase-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f6b96c54441dbc15092fdf9f898bedab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7767, "upload_time": "2019-12-06T17:38:43", "upload_time_iso_8601": "2019-12-06T17:38:43.914787Z", "url": "https://files.pythonhosted.org/packages/d2/01/d81a66c416089b069c320096a499bd3a192c8686d004b3d90384d488a6f0/mpyconfigbase-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abd9b8f53e0b30cd13b6cf8a72ac027b", "sha256": "feb9fb29284562d76c5afdad0345aa63f80a60aea65f1cf23858d3b0ba0c6c44"}, "downloads": -1, "filename": "mpyconfigbase-0.0.3.tar.gz", "has_sig": false, "md5_digest": "abd9b8f53e0b30cd13b6cf8a72ac027b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5239, "upload_time": "2019-12-06T17:38:45", "upload_time_iso_8601": "2019-12-06T17:38:45.210150Z", "url": "https://files.pythonhosted.org/packages/df/9e/0d880ea946e7688ce5fe209381efb3d91d408e7baa2ea320d8ada090018f/mpyconfigbase-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "a6ed563db68e63ab2535c98cc2165e51", "sha256": "3a62803107d8d8e178e6b60f424fb5ecd6e88bd9ebc2e69794c3cea4434a1082"}, "downloads": -1, "filename": "mpyconfigbase-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a6ed563db68e63ab2535c98cc2165e51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6959, "upload_time": "2020-04-01T14:18:24", "upload_time_iso_8601": "2020-04-01T14:18:24.649315Z", "url": "https://files.pythonhosted.org/packages/c6/56/153ea38b18df3c636f4e55cd08859f2c53dbae6976a31bbfcb46e73f4bbf/mpyconfigbase-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1b044c446646d90f0759a83eabf733b", "sha256": "bbd238b1d72a6774824f3e842deab8549cb4d038ba99a1700aa2161f84e80c99"}, "downloads": -1, "filename": "mpyconfigbase-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c1b044c446646d90f0759a83eabf733b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5075, "upload_time": "2020-04-01T14:18:26", "upload_time_iso_8601": "2020-04-01T14:18:26.067410Z", "url": "https://files.pythonhosted.org/packages/ad/69/759febaac80a75b846a2d6db144dafd384ea485c98217b1b2e6bf9e6e869/mpyconfigbase-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6ed563db68e63ab2535c98cc2165e51", "sha256": "3a62803107d8d8e178e6b60f424fb5ecd6e88bd9ebc2e69794c3cea4434a1082"}, "downloads": -1, "filename": "mpyconfigbase-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a6ed563db68e63ab2535c98cc2165e51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6959, "upload_time": "2020-04-01T14:18:24", "upload_time_iso_8601": "2020-04-01T14:18:24.649315Z", "url": "https://files.pythonhosted.org/packages/c6/56/153ea38b18df3c636f4e55cd08859f2c53dbae6976a31bbfcb46e73f4bbf/mpyconfigbase-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1b044c446646d90f0759a83eabf733b", "sha256": "bbd238b1d72a6774824f3e842deab8549cb4d038ba99a1700aa2161f84e80c99"}, "downloads": -1, "filename": "mpyconfigbase-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c1b044c446646d90f0759a83eabf733b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5075, "upload_time": "2020-04-01T14:18:26", "upload_time_iso_8601": "2020-04-01T14:18:26.067410Z", "url": "https://files.pythonhosted.org/packages/ad/69/759febaac80a75b846a2d6db144dafd384ea485c98217b1b2e6bf9e6e869/mpyconfigbase-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:08 2020"}