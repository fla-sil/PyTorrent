{"info": {"author": "Mihai Costea", "author_email": "mihai.andrei.costea@icloud.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries"], "description": "Cage\n====\n\nDevelop and run your Python applications in clean Docker environments\nCage aims to be as easy to use and as familiar as possible.\n\nRequirements\n------------\n\n-  Docker\n-  Python 3.5+\n\nInstallation\n------------\n\n.. code:: bash\n\n    $ pip install pycage\n\nUsage\n-----\n\nNOTE: Docker should be running before using any of the Cage commands.\nAll commands should be run from your project directory!\n\nCreate a new cage\n~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ cage app:create <name_of_your_cage>\n\nThis command will create a new Dockerfile in the root your project and\ninitialize all the necessary environment files.\n\nActivate the new environment\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ source <name_of_your_cage>/bin/activate\n\nThis command should be very familiar to\n`virtualenv <https://virtualenv.pypa.io/en/stable/>`__ users. This\nadjusts your environment to make sure you use the caged python binaries.\n\nRun your project\n~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    (<name_of_your_cage>)$ python <file.py>\n\nRunning a script with the caged python binary will build a new Docker\nimage with your project files, create a new container using that image\nand run the python command you specified.\n\nPassing environment variables\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can pass environment variables to the cage by creating a **ENV**\nfile in the root of your project. The file structure should be\nVAR=VALUE.\n\nExample:\n\n::\n\n    AVAR=value1\n    BVAR=value2\n\nYou can also place this file anywhere in your project. If it is not in\nthe root of your project you can specify the path to it by passing the\nENV variable when running a python script.\n\n.. code:: bash\n\n    (<name_of_your_cage>)$ ENV=path/to/ENV python <file.py>\n\nExpose a TCP Port\n~~~~~~~~~~~~~~~~~\n\nTo expose a TCP port from the cage, use the PORT environment variable\ndefined in your ENV file.\n\nExample:\n\n::\n\n    PORT=5000\n\nSpecifying it in the ENV file will also make it available in the cage so\nyou can bind your apps to it easily.\n\nWorking with requirements\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe current version of Cage only supports dependencies **written in a\nrequirements file**:\n\n.. code:: bash\n\n    (<name_of_your_cage>)$ pip install -r requirements.txt\n\nYou *cannot* use any other pip commands with this version. This includes\nsimple pip install commands like:\n\n.. code:: bash\n\n    (<name_of_your_cage>)$ pip install <dependency>\n\nStop a cage\n~~~~~~~~~~~\n\n.. code:: bash\n\n    (<name_of_your_cage>)$ cage app:stop <name_of_your_cage>\n\nDeactivating the environment\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    (<name_of_your_cage)$ deactivate\n\nThis will return your environment to the state it was in before\nactivating the Cage environment.\n\nCaveats\n-------\n\n1. **THIS IS A WORK IN PROGRESS. DO NOT USE THIS IF YOU DON'T KNOW WHAT\n   YOU ARE DOING**\n2. You can **only** use pip with a requirements file. No other pip\n   commands are supported\n3. You can only expose **ONE TCP** port from the container and it will\n   be mapped to the same port number on the host\n4. Tested only on OSX and Linux\n\nLicense\n-------\n\nCage is released under the MIT license. See LICENSE for details.\n\nContact\n-------\n\nFollow me on twitter [@mcostea](https://twitter.com/mcostea)", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/macostea/cage", "keywords": "setuptools deployment installation distutils docker", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "PYCage", "package_url": "https://pypi.org/project/PYCage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PYCage/", "project_urls": {"Homepage": "https://github.com/macostea/cage"}, "release_url": "https://pypi.org/project/PYCage/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Develop and run your Python applications in clean Docker environments", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Develop and run your Python applications in clean Docker environments\nCage aims to be as easy to use and as familiar as possible.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Docker</li>\n<li>Python 3.5+</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install pycage\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>NOTE: Docker should be running before using any of the Cage commands.\nAll commands should be run from your project directory!</p>\n<div id=\"create-a-new-cage\">\n<h3>Create a new cage</h3>\n<pre>$ cage app:create &lt;name_of_your_cage&gt;\n</pre>\n<p>This command will create a new Dockerfile in the root your project and\ninitialize all the necessary environment files.</p>\n</div>\n<div id=\"activate-the-new-environment\">\n<h3>Activate the new environment</h3>\n<pre>$ <span class=\"nb\">source</span> &lt;name_of_your_cage&gt;/bin/activate\n</pre>\n<p>This command should be very familiar to\n<a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">virtualenv</a> users. This\nadjusts your environment to make sure you use the caged python binaries.</p>\n</div>\n<div id=\"run-your-project\">\n<h3>Run your project</h3>\n<pre><span class=\"o\">(</span>&lt;name_of_your_cage&gt;<span class=\"o\">)</span>$ python &lt;file.py&gt;\n</pre>\n<p>Running a script with the caged python binary will build a new Docker\nimage with your project files, create a new container using that image\nand run the python command you specified.</p>\n</div>\n<div id=\"passing-environment-variables\">\n<h3>Passing environment variables</h3>\n<p>You can pass environment variables to the cage by creating a <strong>ENV</strong>\nfile in the root of your project. The file structure should be\nVAR=VALUE.</p>\n<p>Example:</p>\n<pre>AVAR=value1\nBVAR=value2\n</pre>\n<p>You can also place this file anywhere in your project. If it is not in\nthe root of your project you can specify the path to it by passing the\nENV variable when running a python script.</p>\n<pre><span class=\"o\">(</span>&lt;name_of_your_cage&gt;<span class=\"o\">)</span>$ <span class=\"nv\">ENV</span><span class=\"o\">=</span>path/to/ENV python &lt;file.py&gt;\n</pre>\n</div>\n<div id=\"expose-a-tcp-port\">\n<h3>Expose a TCP Port</h3>\n<p>To expose a TCP port from the cage, use the PORT environment variable\ndefined in your ENV file.</p>\n<p>Example:</p>\n<pre>PORT=5000\n</pre>\n<p>Specifying it in the ENV file will also make it available in the cage so\nyou can bind your apps to it easily.</p>\n</div>\n<div id=\"working-with-requirements\">\n<h3>Working with requirements</h3>\n<p>The current version of Cage only supports dependencies <strong>written in a\nrequirements file</strong>:</p>\n<pre><span class=\"o\">(</span>&lt;name_of_your_cage&gt;<span class=\"o\">)</span>$ pip install -r requirements.txt\n</pre>\n<p>You <em>cannot</em> use any other pip commands with this version. This includes\nsimple pip install commands like:</p>\n<pre><span class=\"o\">(</span>&lt;name_of_your_cage&gt;<span class=\"o\">)</span>$ pip install &lt;dependency&gt;\n</pre>\n</div>\n<div id=\"stop-a-cage\">\n<h3>Stop a cage</h3>\n<pre><span class=\"o\">(</span>&lt;name_of_your_cage&gt;<span class=\"o\">)</span>$ cage app:stop &lt;name_of_your_cage&gt;\n</pre>\n</div>\n<div id=\"deactivating-the-environment\">\n<h3>Deactivating the environment</h3>\n<pre><span class=\"o\">(</span>&lt;name_of_your_cage<span class=\"o\">)</span>$ deactivate\n</pre>\n<p>This will return your environment to the state it was in before\nactivating the Cage environment.</p>\n</div>\n</div>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<ol>\n<li><strong>THIS IS A WORK IN PROGRESS. DO NOT USE THIS IF YOU DON\u2019T KNOW WHAT\nYOU ARE DOING</strong></li>\n<li>You can <strong>only</strong> use pip with a requirements file. No other pip\ncommands are supported</li>\n<li>You can only expose <strong>ONE TCP</strong> port from the container and it will\nbe mapped to the same port number on the host</li>\n<li>Tested only on OSX and Linux</li>\n</ol>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Cage is released under the MIT license. See LICENSE for details.</p>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>Follow me on twitter [@mcostea](<a href=\"https://twitter.com/mcostea\" rel=\"nofollow\">https://twitter.com/mcostea</a>)</p>\n</div>\n\n          </div>"}, "last_serial": 2421406, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c88b9d00a9455110162137bf8a0b4798", "sha256": "1fc6fbacb379bccdccfc034a12e20209a51f9e8bfe0343aac8ee283e383b4982"}, "downloads": -1, "filename": "PYCage-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c88b9d00a9455110162137bf8a0b4798", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10394, "upload_time": "2016-10-18T10:27:21", "upload_time_iso_8601": "2016-10-18T10:27:21.571403Z", "url": "https://files.pythonhosted.org/packages/a0/ea/c7b92c921560d85abf81e5baff9709f798aeb9452dadc25de7506bda5a3c/PYCage-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3428bddc90bd792c149157cea41c1753", "sha256": "2217038a9258caa1d318686e13755b70f20218d489bbfe03f855045198d1b06b"}, "downloads": -1, "filename": "PYCage-0.1.tar.gz", "has_sig": false, "md5_digest": "3428bddc90bd792c149157cea41c1753", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5982, "upload_time": "2016-10-18T10:27:23", "upload_time_iso_8601": "2016-10-18T10:27:23.393283Z", "url": "https://files.pythonhosted.org/packages/e0/b5/2f844a03c5d0ef73bafd8f93e7a18ac2d647c61078763303c5e2d99e9c3f/PYCage-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fcf50227e4fddcba47d727f3e6e0e4bb", "sha256": "73231e6fc06996d423f4012c510f0752cf19caff204d7697aebda9483a68539c"}, "downloads": -1, "filename": "PYCage-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fcf50227e4fddcba47d727f3e6e0e4bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10398, "upload_time": "2016-10-18T10:40:24", "upload_time_iso_8601": "2016-10-18T10:40:24.381849Z", "url": "https://files.pythonhosted.org/packages/9a/00/abb4048027e6ce916fabdf836b6d5347c30405e60029a42b1579138ac386/PYCage-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a79905bbd8f32c20b2ac1902a8132ac", "sha256": "b2c5fb4475017db732be5a0cce012bbf3de497e48caf64c43cf4e53ab037a3cf"}, "downloads": -1, "filename": "PYCage-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5a79905bbd8f32c20b2ac1902a8132ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5957, "upload_time": "2016-10-18T10:40:26", "upload_time_iso_8601": "2016-10-18T10:40:26.665359Z", "url": "https://files.pythonhosted.org/packages/f1/c2/519e84e92222bc38f77f15fb10c9817848006cd471947dcbbfa80ed4d610/PYCage-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1f125c202fa09bc37e07331f4233cb45", "sha256": "9f4761b652de78d813cd21569b9e8abffb007d52a4b6b21ede7917debc94a560"}, "downloads": -1, "filename": "PYCage-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1f125c202fa09bc37e07331f4233cb45", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12210, "upload_time": "2016-10-25T08:38:37", "upload_time_iso_8601": "2016-10-25T08:38:37.920703Z", "url": "https://files.pythonhosted.org/packages/b7/a0/6e0fe66c39c2023d9236ec48f79a3942e53adcc2d47537b63502781209f5/PYCage-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79e8791ef853cc5eb900fce54db108f8", "sha256": "dc16b07e77d58a79cf9e5faaa20e6104e5f9727251242abae5db21b28ce2fd6e"}, "downloads": -1, "filename": "PYCage-0.2.0.tar.gz", "has_sig": false, "md5_digest": "79e8791ef853cc5eb900fce54db108f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6766, "upload_time": "2016-10-25T08:38:39", "upload_time_iso_8601": "2016-10-25T08:38:39.828347Z", "url": "https://files.pythonhosted.org/packages/61/61/d5866e46dc7e4ac69e87ece68a1c3c88585a14042b0b32ce322f1b02ffaf/PYCage-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f125c202fa09bc37e07331f4233cb45", "sha256": "9f4761b652de78d813cd21569b9e8abffb007d52a4b6b21ede7917debc94a560"}, "downloads": -1, "filename": "PYCage-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1f125c202fa09bc37e07331f4233cb45", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12210, "upload_time": "2016-10-25T08:38:37", "upload_time_iso_8601": "2016-10-25T08:38:37.920703Z", "url": "https://files.pythonhosted.org/packages/b7/a0/6e0fe66c39c2023d9236ec48f79a3942e53adcc2d47537b63502781209f5/PYCage-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79e8791ef853cc5eb900fce54db108f8", "sha256": "dc16b07e77d58a79cf9e5faaa20e6104e5f9727251242abae5db21b28ce2fd6e"}, "downloads": -1, "filename": "PYCage-0.2.0.tar.gz", "has_sig": false, "md5_digest": "79e8791ef853cc5eb900fce54db108f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6766, "upload_time": "2016-10-25T08:38:39", "upload_time_iso_8601": "2016-10-25T08:38:39.828347Z", "url": "https://files.pythonhosted.org/packages/61/61/d5866e46dc7e4ac69e87ece68a1c3c88585a14042b0b32ce322f1b02ffaf/PYCage-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:51 2020"}