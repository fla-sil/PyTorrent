{"info": {"author": "Mark Coombes", "author_email": "mark@markcoombes.ca", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# aioecobee\n\n## Python3 async library for interacting with the ecobee API\n\n*Requirements:* aiofiles, aiohttp, asyncio\n\nInstall aioecobee with `python3 -m pip install aioecobee`.\n\n## Usage\n\naioecobee's main class is EcobeeAPI; create an API object like this:\n\n```python\nfrom aiohttp import ClientSession\nfrom aioecobee import EcobeeAPI\n\nsession = ClientSession()\napi_key = xxxxxxxxxxxxxxxxxxxxx\nconfig_file = \"/path/to/ecobee.conf\"\n\necobee = EcobeeAPI(session, api_key=api_key, config_file=config_file)\n```\n\nWhere:\n\n- `session` is an instance of aiohttp.ClientSession(); \n- `api_key` is the API key obtained from ecobee.com (optional); and,\n- `config_file` is the name of a config file for use with aioecobee (optional).\n\nIf config_file is not specified, api_key is required.\n\nObtain a PIN for authorizing on ecobee.com:\n\n```python\nawait ecobee.request_pin()\n```\n\nAfter authorizing your app on ecobee.com, request tokens:\n\n```python\nawait ecobee.request_tokens()\n```\n\nAfter obtaining tokens, populate (or update) ecobee.thermostats and ecobee.sensors:\n\n```python\nawait ecobee.update()\n```\n\nCalls to the API will raise an ExpiredTokensError if tokens are expired and need refreshing:\n\n```python\nfrom aioecobee import ExpiredTokensError\ntry:\n    await ecobee.update()\nexcept ExpiredTokensError:\n    await ecobee.refresh_tokens()\n```\n\n## example.py\n\nAn example script is provided to demonstrate the usage of aioecobee.\n\n```bash\npython example.py api_key\n```\n\n## Caveats\n\naioecobee does not implement timeouts; use asyncio_timeout in your client code to wrap calls to the API as needed.\n\n\n## Contributing\n\nPlease open issues or pull requests.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marthoc/aioecobee", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aioecobee", "package_url": "https://pypi.org/project/aioecobee/", "platform": "", "project_url": "https://pypi.org/project/aioecobee/", "project_urls": {"Homepage": "https://github.com/marthoc/aioecobee"}, "release_url": "https://pypi.org/project/aioecobee/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Python3 async library for interacting with the ecobee API", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aioecobee</h1>\n<h2>Python3 async library for interacting with the ecobee API</h2>\n<p><em>Requirements:</em> aiofiles, aiohttp, asyncio</p>\n<p>Install aioecobee with <code>python3 -m pip install aioecobee</code>.</p>\n<h2>Usage</h2>\n<p>aioecobee's main class is EcobeeAPI; create an API object like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioecobee</span> <span class=\"kn\">import</span> <span class=\"n\">EcobeeAPI</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n<span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"n\">xxxxxxxxxxxxxxxxxxxxx</span>\n<span class=\"n\">config_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"/path/to/ecobee.conf\"</span>\n\n<span class=\"n\">ecobee</span> <span class=\"o\">=</span> <span class=\"n\">EcobeeAPI</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"n\">config_file</span><span class=\"p\">)</span>\n</pre>\n<p>Where:</p>\n<ul>\n<li><code>session</code> is an instance of aiohttp.ClientSession();</li>\n<li><code>api_key</code> is the API key obtained from ecobee.com (optional); and,</li>\n<li><code>config_file</code> is the name of a config file for use with aioecobee (optional).</li>\n</ul>\n<p>If config_file is not specified, api_key is required.</p>\n<p>Obtain a PIN for authorizing on ecobee.com:</p>\n<pre><span class=\"k\">await</span> <span class=\"n\">ecobee</span><span class=\"o\">.</span><span class=\"n\">request_pin</span><span class=\"p\">()</span>\n</pre>\n<p>After authorizing your app on ecobee.com, request tokens:</p>\n<pre><span class=\"k\">await</span> <span class=\"n\">ecobee</span><span class=\"o\">.</span><span class=\"n\">request_tokens</span><span class=\"p\">()</span>\n</pre>\n<p>After obtaining tokens, populate (or update) ecobee.thermostats and ecobee.sensors:</p>\n<pre><span class=\"k\">await</span> <span class=\"n\">ecobee</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n</pre>\n<p>Calls to the API will raise an ExpiredTokensError if tokens are expired and need refreshing:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aioecobee</span> <span class=\"kn\">import</span> <span class=\"n\">ExpiredTokensError</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ecobee</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"n\">ExpiredTokensError</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">ecobee</span><span class=\"o\">.</span><span class=\"n\">refresh_tokens</span><span class=\"p\">()</span>\n</pre>\n<h2>example.py</h2>\n<p>An example script is provided to demonstrate the usage of aioecobee.</p>\n<pre>python example.py api_key\n</pre>\n<h2>Caveats</h2>\n<p>aioecobee does not implement timeouts; use asyncio_timeout in your client code to wrap calls to the API as needed.</p>\n<h2>Contributing</h2>\n<p>Please open issues or pull requests.</p>\n\n          </div>"}, "last_serial": 5773562, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "527db99c0c4345eb018a7897577127f3", "sha256": "435cf78040f1c5f8229ec93e869f379dc830d876c389a9ca0cf4db6719237a9a"}, "downloads": -1, "filename": "aioecobee-0.1.0.tar.gz", "has_sig": false, "md5_digest": "527db99c0c4345eb018a7897577127f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5578, "upload_time": "2019-09-03T02:52:25", "upload_time_iso_8601": "2019-09-03T02:52:25.493628Z", "url": "https://files.pythonhosted.org/packages/f8/75/7f21abfce7fb5b33acd2434d56aeb6993f4a7295f8eecb7312f72800286e/aioecobee-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "527db99c0c4345eb018a7897577127f3", "sha256": "435cf78040f1c5f8229ec93e869f379dc830d876c389a9ca0cf4db6719237a9a"}, "downloads": -1, "filename": "aioecobee-0.1.0.tar.gz", "has_sig": false, "md5_digest": "527db99c0c4345eb018a7897577127f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5578, "upload_time": "2019-09-03T02:52:25", "upload_time_iso_8601": "2019-09-03T02:52:25.493628Z", "url": "https://files.pythonhosted.org/packages/f8/75/7f21abfce7fb5b33acd2434d56aeb6993f4a7295f8eecb7312f72800286e/aioecobee-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:38 2020"}