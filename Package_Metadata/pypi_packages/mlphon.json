{"info": {"author": "Kavya Manohar", "author_email": "sakhi.kavya@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "Python Interface for Malayalam phonetic analyser\n==================================================\n.. image:: https://img.shields.io/pypi/v/mlphon.svg\n    :target: https://pypi.python.org/pypi/mlphon\n    :alt: PyPI Version\n\nThis is python interface for the `Malayalam phonetic analyser - mlphon`_.\n\nInstallation\n------------\n\nPython 3 is required. Using with `venv`_ is recommended\n\n  .. code-block:: console\n\n    $ pip install mlphon\n\nUsage\n-----\n\nGrapheme to Phoneme analysis example\n------------------------------------\n\n  .. code-block:: python\n\n    from mlphon import G2P\n    analyser = G2P()\n    analyser.analyse('\u0d15\u0d47\u0d30\u0d33\u0d02')\n\n\nGives\n\n  .. code-block:: python\n\n    [(('<BoS>k<plosive><voiceless><unaspirated><velar>e\u02d0<v_sign><EoS><BoS>\u027e<flapped><alveolar>a<schwa><EoS><BoS>\u026d<lateral><retroflex>a<schwa>m<anuswara><EoS>', 0.0),))]\n\n\nThe second item in this result is the weight.\nIt is not relevant in the current implementation.\n\nGrapheme to Phoneme generation example\n--------------------------------------\n\n  .. code-block:: python\n\n    from mlphon import G2P\n    generator = G2P()\n    generator.generate('<BoS>k<plosive><voiceless><unaspirated><velar>e\u02d0<v_sign><EoS><BoS>\u027e<flapped><alveolar>a<schwa><EoS><BoS>\u026d<lateral><retroflex>a<schwa>m<anuswara><EoS>')\n\n\nGives\n\n  .. code-block:: python\n\n    (('\u0d15\u0d47\u0d30\u0d33\u0d02', 0.0),)\n\nThe second item in this result is the weight.\nIt is not relevant in the current implementation.\n\n\nGrapheme to IPA analysis\n--------------------------\n\n  .. code-block:: python\n\n    from mlphon import IPA\n    analyser = IPA()\n    analyser.analyse(\"\u0d15\u0d47\u0d30\u0d33\u0d02\")\n\nGives\n\n  .. code-block:: python\n\n    (('ke\u02d0\u027ea\u026dam<anuswara>', 0.0),)\n\n<anauswara>, <visarga>, <chillu> tags are explisitly shown in the IPA analysis.\n\nGrapheme generation from IPA\n----------------------------\n\n  .. code-block:: python\n\n    from mlphon import IPA\n    generator = IPA()\n    generator.generate('ke\u02d0\u027ea\u026dam<anuswara>')\n\nGives\n\n  .. code-block:: python\n\n    (('\u0d15\u0d47\u0d30\u0d33\u0d02', 0.0),)\n\nThere can be multiple results in this generation.\nPlease ignore the irrelevant ones, if any.\n\nSyllablizer\n-----------\n\n  .. code-block:: python\n\n    from mlphon import Syllablizer\n    syl = Syllablizer()\n    syl.syllablize('\u0d15\u0d47\u0d30\u0d33\u0d02')\n\nGives\n\n\n  .. code-block:: python\n\n    (('<BoS>\u0d15\u0d47<EoS><BoS>\u0d30<EoS><BoS>\u0d33\u0d02<EoS>', 0.0),)\n\n\n\n\nCommand line interface\n----------------------\nG2P\n\n  .. code-block:: console\n\n    $ mlg2p --help\n      usage: mlg2p [-h] [-i INFILE] [-o OUTFILE] [-a] [-g] [-v]\n      optional arguments:\n      -h, --help            show this help message and exit\n      -i INFILE, --input INFILE\n                        source of analysis data\n      -o OUTFILE, --output OUTFILE\n                        target of generated strings\n      -a, --analyse         Analyse the input file strings\n      -g, --generate        Generate the input file strings\n      -v, --verbose         print verbosely while processing\n\nIPA\n\n  .. code-block:: console\n\n    $ mlipa --help\n      usage: mlipa [-h] [-i INFILE] [-o OUTFILE] [-a] [-g] [-v]\n      optional arguments:\n      -h, --help            show this help message and exit\n      -i INFILE, --input INFILE\n                        source of analysis data\n      -o OUTFILE, --output OUTFILE\n                        target of generated strings\n      -a, --analyse         Analyse the input file strings\n      -g, --generate        Generate the input file strings\n      -v, --verbose         print verbosely while processing\n\nSyllablizer\n\n\n  .. code-block:: console\n\n    $ mlsyllablize --help\n      usage: mlsyllablize [-h] [-i INFILE] [-o OUTFILE]\n      optional arguments:\n      -h, --help            show this help message and exit\n      -i INFILE, --input INFILE\n                        source of analysis data\n      -o OUTFILE, --output OUTFILE\n                        target of generated strings\n\n\n.. _`Malayalam Phonetic Analyser - mlphon`: https://gitlab.com/smc/mlphon\n.. _`venv`: https://docs.python.org/3/library/venv.html", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/smc/mlphon", "keywords": "Malayalam phonetic FST analyser generator IPA syllable", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mlphon", "package_url": "https://pypi.org/project/mlphon/", "platform": "", "project_url": "https://pypi.org/project/mlphon/", "project_urls": {"Homepage": "https://gitlab.com/smc/mlphon"}, "release_url": "https://pypi.org/project/mlphon/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Malayalam phonetic analyser", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/mlphon\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6b49d64e8426f78fd5a64fbd9055aae3b36f93a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6c70686f6e2e737667\"></a>\n<p>This is python interface for the <a href=\"https://gitlab.com/smc/mlphon\" rel=\"nofollow\">Malayalam phonetic analyser - mlphon</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Python 3 is required. Using with <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a> is recommended</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> pip install mlphon\n</pre>\n</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n</div>\n<div id=\"grapheme-to-phoneme-analysis-example\">\n<h2>Grapheme to Phoneme analysis example</h2>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mlphon</span> <span class=\"kn\">import</span> <span class=\"n\">G2P</span>\n<span class=\"n\">analyser</span> <span class=\"o\">=</span> <span class=\"n\">G2P</span><span class=\"p\">()</span>\n<span class=\"n\">analyser</span><span class=\"o\">.</span><span class=\"n\">analyse</span><span class=\"p\">(</span><span class=\"s1\">'\u0d15\u0d47\u0d30\u0d33\u0d02'</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n<p>Gives</p>\n<blockquote>\n<pre><span class=\"p\">[((</span><span class=\"s1\">'&lt;BoS&gt;k&lt;plosive&gt;&lt;voiceless&gt;&lt;unaspirated&gt;&lt;velar&gt;e\u02d0&lt;v_sign&gt;&lt;EoS&gt;&lt;BoS&gt;\u027e&lt;flapped&gt;&lt;alveolar&gt;a&lt;schwa&gt;&lt;EoS&gt;&lt;BoS&gt;\u026d&lt;lateral&gt;&lt;retroflex&gt;a&lt;schwa&gt;m&lt;anuswara&gt;&lt;EoS&gt;'</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">),))]</span>\n</pre>\n</blockquote>\n<p>The second item in this result is the weight.\nIt is not relevant in the current implementation.</p>\n</div>\n<div id=\"grapheme-to-phoneme-generation-example\">\n<h2>Grapheme to Phoneme generation example</h2>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mlphon</span> <span class=\"kn\">import</span> <span class=\"n\">G2P</span>\n<span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">G2P</span><span class=\"p\">()</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"s1\">'&lt;BoS&gt;k&lt;plosive&gt;&lt;voiceless&gt;&lt;unaspirated&gt;&lt;velar&gt;e\u02d0&lt;v_sign&gt;&lt;EoS&gt;&lt;BoS&gt;\u027e&lt;flapped&gt;&lt;alveolar&gt;a&lt;schwa&gt;&lt;EoS&gt;&lt;BoS&gt;\u026d&lt;lateral&gt;&lt;retroflex&gt;a&lt;schwa&gt;m&lt;anuswara&gt;&lt;EoS&gt;'</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n<p>Gives</p>\n<blockquote>\n<pre><span class=\"p\">((</span><span class=\"s1\">'\u0d15\u0d47\u0d30\u0d33\u0d02'</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">),)</span>\n</pre>\n</blockquote>\n<p>The second item in this result is the weight.\nIt is not relevant in the current implementation.</p>\n</div>\n<div id=\"grapheme-to-ipa-analysis\">\n<h2>Grapheme to IPA analysis</h2>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mlphon</span> <span class=\"kn\">import</span> <span class=\"n\">IPA</span>\n<span class=\"n\">analyser</span> <span class=\"o\">=</span> <span class=\"n\">IPA</span><span class=\"p\">()</span>\n<span class=\"n\">analyser</span><span class=\"o\">.</span><span class=\"n\">analyse</span><span class=\"p\">(</span><span class=\"s2\">\"\u0d15\u0d47\u0d30\u0d33\u0d02\"</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n<p>Gives</p>\n<blockquote>\n<pre><span class=\"p\">((</span><span class=\"s1\">'ke\u02d0\u027ea\u026dam&lt;anuswara&gt;'</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">),)</span>\n</pre>\n</blockquote>\n<p>&lt;anauswara&gt;, &lt;visarga&gt;, &lt;chillu&gt; tags are explisitly shown in the IPA analysis.</p>\n</div>\n<div id=\"grapheme-generation-from-ipa\">\n<h2>Grapheme generation from IPA</h2>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mlphon</span> <span class=\"kn\">import</span> <span class=\"n\">IPA</span>\n<span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">IPA</span><span class=\"p\">()</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"s1\">'ke\u02d0\u027ea\u026dam&lt;anuswara&gt;'</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n<p>Gives</p>\n<blockquote>\n<pre><span class=\"p\">((</span><span class=\"s1\">'\u0d15\u0d47\u0d30\u0d33\u0d02'</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">),)</span>\n</pre>\n</blockquote>\n<p>There can be multiple results in this generation.\nPlease ignore the irrelevant ones, if any.</p>\n</div>\n<div id=\"syllablizer\">\n<h2>Syllablizer</h2>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mlphon</span> <span class=\"kn\">import</span> <span class=\"n\">Syllablizer</span>\n<span class=\"n\">syl</span> <span class=\"o\">=</span> <span class=\"n\">Syllablizer</span><span class=\"p\">()</span>\n<span class=\"n\">syl</span><span class=\"o\">.</span><span class=\"n\">syllablize</span><span class=\"p\">(</span><span class=\"s1\">'\u0d15\u0d47\u0d30\u0d33\u0d02'</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n<p>Gives</p>\n<blockquote>\n<pre><span class=\"p\">((</span><span class=\"s1\">'&lt;BoS&gt;\u0d15\u0d47&lt;EoS&gt;&lt;BoS&gt;\u0d30&lt;EoS&gt;&lt;BoS&gt;\u0d33\u0d02&lt;EoS&gt;'</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">),)</span>\n</pre>\n</blockquote>\n</div>\n<div id=\"command-line-interface\">\n<h2>Command line interface</h2>\n<p>G2P</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> mlg2p --help\n<span class=\"go\">  usage: mlg2p [-h] [-i INFILE] [-o OUTFILE] [-a] [-g] [-v]\n  optional arguments:\n  -h, --help            show this help message and exit\n  -i INFILE, --input INFILE\n                    source of analysis data\n  -o OUTFILE, --output OUTFILE\n                    target of generated strings\n  -a, --analyse         Analyse the input file strings\n  -g, --generate        Generate the input file strings\n  -v, --verbose         print verbosely while processing</span>\n</pre>\n</blockquote>\n<p>IPA</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> mlipa --help\n<span class=\"go\">  usage: mlipa [-h] [-i INFILE] [-o OUTFILE] [-a] [-g] [-v]\n  optional arguments:\n  -h, --help            show this help message and exit\n  -i INFILE, --input INFILE\n                    source of analysis data\n  -o OUTFILE, --output OUTFILE\n                    target of generated strings\n  -a, --analyse         Analyse the input file strings\n  -g, --generate        Generate the input file strings\n  -v, --verbose         print verbosely while processing</span>\n</pre>\n</blockquote>\n<p>Syllablizer</p>\n<blockquote>\n<pre><span class=\"gp\">$</span> mlsyllablize --help\n<span class=\"go\">  usage: mlsyllablize [-h] [-i INFILE] [-o OUTFILE]\n  optional arguments:\n  -h, --help            show this help message and exit\n  -i INFILE, --input INFILE\n                    source of analysis data\n  -o OUTFILE, --output OUTFILE\n                    target of generated strings</span>\n</pre>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 4671636, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9d056b7f42fb0166bdb4b4429a631d43", "sha256": "db9b0e48a15d76e570317b2018a9e79325bbf7de23047b456dc67b8f372b5b0b"}, "downloads": -1, "filename": "mlphon-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9d056b7f42fb0166bdb4b4429a631d43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5234, "upload_time": "2018-12-25T13:57:14", "upload_time_iso_8601": "2018-12-25T13:57:14.236463Z", "url": "https://files.pythonhosted.org/packages/d7/81/44d96fe0f328b3e9bb95325489ce114024116ed4105581b392f12c73c38d/mlphon-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a740638612bf128f84655b1b9cad3305", "sha256": "29aea114195f3aea25e449bf51bc6838fb0646538c7635f8c02e3c14dc566b31"}, "downloads": -1, "filename": "mlphon-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a740638612bf128f84655b1b9cad3305", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5230, "upload_time": "2018-12-25T14:10:34", "upload_time_iso_8601": "2018-12-25T14:10:34.850686Z", "url": "https://files.pythonhosted.org/packages/93/12/b04c5ab4b12d1fb6fe29d52027580c8d5324af712815c94b0fb756acf7e4/mlphon-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "966ac2a85101e3466a41441f1cbdfc2c", "sha256": "fddb1392e7b062e20884e6551c462d59e0fdeb6390c569f1ac3ca879bdc3a47a"}, "downloads": -1, "filename": "mlphon-1.0.2.tar.gz", "has_sig": false, "md5_digest": "966ac2a85101e3466a41441f1cbdfc2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10054, "upload_time": "2018-12-25T16:25:26", "upload_time_iso_8601": "2018-12-25T16:25:26.491078Z", "url": "https://files.pythonhosted.org/packages/b4/c4/770254bb4bad1ca5d8f7ac4572de1b15293031eab6adeba4b5439f979369/mlphon-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "d84c7f7b0b004939f45dbcd6bc70ccc3", "sha256": "f5ebdcb0cbd945c70c8de658bed68ae5dbb5aacd6cff0a38087ff5166abd54ee"}, "downloads": -1, "filename": "mlphon-1.0.3.tar.gz", "has_sig": false, "md5_digest": "d84c7f7b0b004939f45dbcd6bc70ccc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10062, "upload_time": "2018-12-26T10:02:31", "upload_time_iso_8601": "2018-12-26T10:02:31.680363Z", "url": "https://files.pythonhosted.org/packages/6c/34/23dc3f61ca3280ce860ae4b7555ddf4e27a6ea2b2caef1b03c820db4b9ef/mlphon-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "0a3a01b919a75968954e9a4142a85ce5", "sha256": "83216e4a69c6f99b9f1d1eaa2d7b51074dc8bf2d17d57ab88866b267ad2b89c4"}, "downloads": -1, "filename": "mlphon-1.0.4.tar.gz", "has_sig": false, "md5_digest": "0a3a01b919a75968954e9a4142a85ce5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9569, "upload_time": "2019-01-08T06:35:51", "upload_time_iso_8601": "2019-01-08T06:35:51.041603Z", "url": "https://files.pythonhosted.org/packages/09/1f/1880ce911860067ea8b2008defc8e01a96a141b980b2cc200ff1d8eb7dfd/mlphon-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a3a01b919a75968954e9a4142a85ce5", "sha256": "83216e4a69c6f99b9f1d1eaa2d7b51074dc8bf2d17d57ab88866b267ad2b89c4"}, "downloads": -1, "filename": "mlphon-1.0.4.tar.gz", "has_sig": false, "md5_digest": "0a3a01b919a75968954e9a4142a85ce5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9569, "upload_time": "2019-01-08T06:35:51", "upload_time_iso_8601": "2019-01-08T06:35:51.041603Z", "url": "https://files.pythonhosted.org/packages/09/1f/1880ce911860067ea8b2008defc8e01a96a141b980b2cc200ff1d8eb7dfd/mlphon-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:25 2020"}