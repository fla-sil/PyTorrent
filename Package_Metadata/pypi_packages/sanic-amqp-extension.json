{"info": {"author": "Valeryi Savich", "author_email": "relrin78@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "sanic-amqp-extension\n####################\nAMQP support for Sanic framework\n\nFeatures\n========\n- Based on the aioamqp_ library\n- Provides an opportunity to implement workers that works in background\n\nInstallation\n============\nThis package should be installed using pip: ::\n\n    pip install sanic-amqp-extension\n\nExample\n=======\n.. code-block:: python\n\n    from sanic import Sanic, response\n    from sanic_amqp_ext import AmqpExtension, AmqpWorker\n\n\n    app = Sanic(__name__)\n    # Configuration for RabbitMQ\n    app.config.update({\n        \"AMQP_USERNAME\": \"guest\",\n        \"AMQP_PASSWORD\": \"guest\",\n        \"AMQP_HOST\": \"localhost\",\n        \"AMQP_PORT\": 5672,\n        \"AMQP_VIRTUAL_HOST\": \"vhost\",\n        \"AMQP_USING_SSL\": False,\n    })\n    AmqpExtension(app) # AMQP is available as `app.amqp` or `app.extensions['amqp']`\n\n\n    class CustomWorker(AmqpWorker):\n\n        async def run(self, *args, **kwargs):\n            transport, protocol = await self.connect()  # create a new connection\n            # and do some stuff here ...\n\n    # Register workers after initializing the extension\n    app.amqp.register_worker(CustomWorker(app))\n\n\n    @app.route(\"/\")\n    async def handle(request):\n        transport, protocol = await request.app.amqp.connect()  # create a new connection\n        # do some stuff here ...\n        # P.S. but don't forget to close the connection after using\n        return response.text(\"It's works!\")\n\nLicense\n=======\nThe sanic-amqp-extension is published under BSD license. For more details read LICENSE_ file.\n\n.. _links:\n.. _aioamqp: http://aioamqp.readthedocs.io/\n.. _LICENSE: https://github.com/Relrin/sanic-amqp-extension/blob/master/LICENSE\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Relrin/sanic-amqp-extension", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "sanic-amqp-extension", "package_url": "https://pypi.org/project/sanic-amqp-extension/", "platform": "any", "project_url": "https://pypi.org/project/sanic-amqp-extension/", "project_urls": {"Homepage": "https://github.com/Relrin/sanic-amqp-extension"}, "release_url": "https://pypi.org/project/sanic-amqp-extension/0.1.2/", "requires_dist": ["sanic-base-extension (==0.1.1)", "aioamqp (==0.12.0)"], "requires_python": "", "summary": "AMQP support for Sanic framework", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>AMQP support for Sanic framework</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Based on the <a href=\"http://aioamqp.readthedocs.io/\" rel=\"nofollow\">aioamqp</a> library</li>\n<li>Provides an opportunity to implement workers that works in background</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This package should be installed using pip:</p>\n<pre>pip install sanic-amqp-extension\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sanic</span> <span class=\"kn\">import</span> <span class=\"n\">Sanic</span><span class=\"p\">,</span> <span class=\"n\">response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sanic_amqp_ext</span> <span class=\"kn\">import</span> <span class=\"n\">AmqpExtension</span><span class=\"p\">,</span> <span class=\"n\">AmqpWorker</span>\n\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Sanic</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"c1\"># Configuration for RabbitMQ</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"AMQP_USERNAME\"</span><span class=\"p\">:</span> <span class=\"s2\">\"guest\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"AMQP_PASSWORD\"</span><span class=\"p\">:</span> <span class=\"s2\">\"guest\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"AMQP_HOST\"</span><span class=\"p\">:</span> <span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"AMQP_PORT\"</span><span class=\"p\">:</span> <span class=\"mi\">5672</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"AMQP_VIRTUAL_HOST\"</span><span class=\"p\">:</span> <span class=\"s2\">\"vhost\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"AMQP_USING_SSL\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n<span class=\"n\">AmqpExtension</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span> <span class=\"c1\"># AMQP is available as `app.amqp` or `app.extensions['amqp']`</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomWorker</span><span class=\"p\">(</span><span class=\"n\">AmqpWorker</span><span class=\"p\">):</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">transport</span><span class=\"p\">,</span> <span class=\"n\">protocol</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>  <span class=\"c1\"># create a new connection</span>\n        <span class=\"c1\"># and do some stuff here ...</span>\n\n<span class=\"c1\"># Register workers after initializing the extension</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">amqp</span><span class=\"o\">.</span><span class=\"n\">register_worker</span><span class=\"p\">(</span><span class=\"n\">CustomWorker</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">))</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">transport</span><span class=\"p\">,</span> <span class=\"n\">protocol</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">amqp</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>  <span class=\"c1\"># create a new connection</span>\n    <span class=\"c1\"># do some stuff here ...</span>\n    <span class=\"c1\"># P.S. but don't forget to close the connection after using</span>\n    <span class=\"k\">return</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"s2\">\"It's works!\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The sanic-amqp-extension is published under BSD license. For more details read <a href=\"https://github.com/Relrin/sanic-amqp-extension/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file.</p>\n</div>\n\n          </div>"}, "last_serial": 4643822, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2d8b7a162ef852131453e565ae7af3c1", "sha256": "68ee706b05a2fb77c433820ed71ffbd6f7bdaba46c206fd0f7461bce833fee66"}, "downloads": -1, "filename": "sanic_amqp_extension-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2d8b7a162ef852131453e565ae7af3c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4969, "upload_time": "2018-03-03T12:26:40", "upload_time_iso_8601": "2018-03-03T12:26:40.321394Z", "url": "https://files.pythonhosted.org/packages/0d/c2/9bf247e3d1b8e25dd1771bd0dfa055ba07905122e67ec62af12cbb4f1570/sanic_amqp_extension-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4f7ad2cce2620581f816a9468c2499dc", "sha256": "51de6bab3e4476e4d163d1e2a79e5235f264c7f9d97e5287cc3d28ffa2f94294"}, "downloads": -1, "filename": "sanic_amqp_extension-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4f7ad2cce2620581f816a9468c2499dc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3190, "upload_time": "2018-07-21T07:52:35", "upload_time_iso_8601": "2018-07-21T07:52:35.243516Z", "url": "https://files.pythonhosted.org/packages/f2/72/f4bae1d5cc63a43e7289dc0b305961c1fbc6d4efaeb457b50b1eb9194ac9/sanic_amqp_extension-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fc2fc705c862d3689a9834d90a96832b", "sha256": "e06f3171d2031a95a1381a867334441993099ca2e9e512b012cdbdce362f7525"}, "downloads": -1, "filename": "sanic_amqp_extension-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fc2fc705c862d3689a9834d90a96832b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3185, "upload_time": "2018-12-29T11:17:12", "upload_time_iso_8601": "2018-12-29T11:17:12.013446Z", "url": "https://files.pythonhosted.org/packages/35/a2/81b5e1e8ca8cf1ad63a597486f3f109d8237f797d0f53e5e46e114ab6d39/sanic_amqp_extension-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b26c992e8f273672692b0ca54b0e7504", "sha256": "9d9553d958bff7b6b255c738cfa56c5dc8ae159e5b38ffe631cd58eb6241ab03"}, "downloads": -1, "filename": "sanic-amqp-extension-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b26c992e8f273672692b0ca54b0e7504", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3251, "upload_time": "2018-12-29T11:17:13", "upload_time_iso_8601": "2018-12-29T11:17:13.385098Z", "url": "https://files.pythonhosted.org/packages/86/ff/c86280da283efa3fcf01ec6e1edc7bc276f1c4ab846ab030ccdec186b8a8/sanic-amqp-extension-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc2fc705c862d3689a9834d90a96832b", "sha256": "e06f3171d2031a95a1381a867334441993099ca2e9e512b012cdbdce362f7525"}, "downloads": -1, "filename": "sanic_amqp_extension-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "fc2fc705c862d3689a9834d90a96832b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3185, "upload_time": "2018-12-29T11:17:12", "upload_time_iso_8601": "2018-12-29T11:17:12.013446Z", "url": "https://files.pythonhosted.org/packages/35/a2/81b5e1e8ca8cf1ad63a597486f3f109d8237f797d0f53e5e46e114ab6d39/sanic_amqp_extension-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b26c992e8f273672692b0ca54b0e7504", "sha256": "9d9553d958bff7b6b255c738cfa56c5dc8ae159e5b38ffe631cd58eb6241ab03"}, "downloads": -1, "filename": "sanic-amqp-extension-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b26c992e8f273672692b0ca54b0e7504", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3251, "upload_time": "2018-12-29T11:17:13", "upload_time_iso_8601": "2018-12-29T11:17:13.385098Z", "url": "https://files.pythonhosted.org/packages/86/ff/c86280da283efa3fcf01ec6e1edc7bc276f1c4ab846ab030ccdec186b8a8/sanic-amqp-extension-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:47 2020"}