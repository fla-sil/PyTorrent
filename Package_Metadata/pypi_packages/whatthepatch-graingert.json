{"info": {"author": "Christopher S. Corley", "author_email": "cscorley@crimson.ua.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Version Control", "Topic :: Text Processing"], "description": "What The Patch!?\n================\n\n.. image:: https://travis-ci.org/cscorley/whatthepatch.svg?style=flat\n    :target: https://travis-ci.org/cscorley/whatthepatch\n\nWhat The Patch!? is a library for both parsing and applying patch files.\n\nFeatures\n---------\n\n- Parsing of almost all ``diff`` formats (except forwarded ed):\n\n  - normal (default, --normal)\n  - copied context (-c, --context)\n  - unified context (-u, --unified)\n  - ed script (-e, --ed)\n  - rcs ed script (-n, --rcs)\n\n- Parsing of several SCM patches:\n\n  - CVS\n  - SVN\n  - Git\n\nInstallation\n------------\n\nTo install What The Patch!?, simply:\n\n.. code-block:: bash\n\n    $ pip install whatthepatch\n\nUsage\n=====\n\nLet us say we have a patch file containing some changes, aptly named\n'somechanges.patch':\n\n.. code-block:: diff\n\n    --- lao\t2012-12-26 23:16:54.000000000 -0600\n    +++ tzu\t2012-12-26 23:16:50.000000000 -0600\n    @@ -1,7 +1,6 @@\n    -The Way that can be told of is not the eternal Way;\n    -The name that can be named is not the eternal name.\n     The Nameless is the origin of Heaven and Earth;\n    -The Named is the mother of all things.\n    +The named is the mother of all things.\n    +\n     Therefore let there always be non-being,\n       so we may see their subtlety,\n      And let there always be being,\n    @@ -9,3 +8,6 @@\n     The two are the same,\n     But after they are produced,\n       they have different names.\n    +They both may be called deep and profound.\n    +Deeper and more profound,\n    +The door of all subtleties!\n\n\nParsing\n-------\n\nHere is how we would use What The Patch!? in Python to get the changeset for\neach diff in the patch:\n\n.. code-block:: python\n\n    >>> import whatthepatch\n    >>> import pprint\n    >>> with open('tests/casefiles/diff-unified.diff') as f:\n    ...     text = f.read()\n    ...\n    >>> for diff in whatthepatch.parse_patch(text):\n    ...     print(diff) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE\n    ...\n    diff(header=header(index_path=None,\n                       old_path='lao',\n                       old_version='2013-01-05 16:56:19.000000000 -0600',\n                       new_path='tzu',\n                       new_version='2013-01-05 16:56:35.000000000 -0600'),\n         changes=[Change(old=1, new=None, hunk=1, line='The Way that can be told of is not the eternal Way;'),\n                  Change(old=2, new=None, hunk=1, line='The name that can be named is not the eternal name.'),\n                  Change(old=3, new=1, hunk=1, line='The Nameless is the origin of Heaven and Earth;'),\n                  Change(old=4, new=None, hunk=1, line='The Named is the mother of all things.'),\n                  Change(old=None, new=2, hunk=1, line='The named is the mother of all things.'),\n                  Change(old=None, new=3, hunk=1, line=''), Change(old=5, new=4, hunk=1, line='Therefore let there always be non-being,'),\n                  Change(old=6, new=5, hunk=1, line='  so we may see their subtlety,'),\n                  Change(old=7, new=6, hunk=1, line='And let there always be being,'),\n                  Change(old=9, new=8, hunk=2, line='The two are the same,'),\n                  Change(old=10, new=9, hunk=2, line='But after they are produced,'),\n                  Change(old=11, new=10, hunk=2, line='  they have different names.'),\n                  Change(old=None, new=11, hunk=2, line='They both may be called deep and profound.'),\n                  Change(old=None, new=12, hunk=2, line='Deeper and more profound,'),\n                  Change(old=None, new=13, hunk=2, line='The door of all subtleties!')],\n         text='...')\n\nThe changes are listed as they are in the patch, but instead of the +/- syntax\nof the patch, we get a tuple of two numbers and the text of the line.\nWhat these numbers indicate are as follows:\n\n#. ``( old=1, new=None, ... )`` indicates line 1 of the file lao was **removed**.\n#. ``( old=None, new=2, ... )`` indicates line 2 of the file tzu was **inserted**.\n#. ``( old=5, new=4, ... )`` indicates that line 5 of lao and line 4 of tzu are **equal**.\n\nPlease note that not all patch formats provide the actual lines modified, so some \nresults will have the text portion of the tuple set to ``None``.\n\nApplying\n--------\n\nTo apply a diff to some lines of text, first read the patch and parse it.\n\n.. code-block:: python\n\n    >>> import whatthepatch\n    >>> with open('tests/casefiles/diff-default.diff') as f:\n    ...     text = f.read()\n    ...\n    >>> with open('tests/casefiles/lao') as f:\n    ...     lao = f.read()\n    ...\n    >>> diff = [x for x in whatthepatch.parse_patch(text)]\n    >>> diff = diff[0]\n    >>> tzu = whatthepatch.apply_diff(diff, lao)\n    >>> tzu  # doctest: +NORMALIZE_WHITESPACE\n    ['The Nameless is the origin of Heaven and Earth;',\n     'The named is the mother of all things.',\n     '',\n     'Therefore let there always be non-being,',\n     '  so we may see their subtlety,',\n     'And let there always be being,',\n     '  so we may see their outcome.',\n     'The two are the same,',\n     'But after they are produced,',\n     '  they have different names.',\n     'They both may be called deep and profound.',\n     'Deeper and more profound,',\n     'The door of all subtleties!']\n\n\nContribute\n==========\n\n#. Fork this repository\n#. Create a new branch to work on\n#. Commit your tests and/or changes\n#. Push and create a pull request here!\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cscorley/whatthepatch", "keywords": "patch", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "whatthepatch-graingert", "package_url": "https://pypi.org/project/whatthepatch-graingert/", "platform": "", "project_url": "https://pypi.org/project/whatthepatch-graingert/", "project_urls": {"Homepage": "https://github.com/cscorley/whatthepatch"}, "release_url": "https://pypi.org/project/whatthepatch-graingert/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "A patch parsing library.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"what-the-patch\">\n<h2>What The Patch!?</h2>\n<a href=\"https://travis-ci.org/cscorley/whatthepatch\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/cscorley/whatthepatch.svg?style=flat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/001bbf2baba2bbb70aa99db3644876b202ef5127/68747470733a2f2f7472617669732d63692e6f72672f6373636f726c65792f7768617474686570617463682e7376673f7374796c653d666c6174\"></a>\n<p>What The Patch!? is a library for both parsing and applying patch files.</p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Parsing of almost all <tt>diff</tt> formats (except forwarded ed):<ul>\n<li>normal (default, \u2013normal)</li>\n<li>copied context (-c, \u2013context)</li>\n<li>unified context (-u, \u2013unified)</li>\n<li>ed script (-e, \u2013ed)</li>\n<li>rcs ed script (-n, \u2013rcs)</li>\n</ul>\n</li>\n<li>Parsing of several SCM patches:<ul>\n<li>CVS</li>\n<li>SVN</li>\n<li>Git</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To install What The Patch!?, simply:</p>\n<pre>$ pip install whatthepatch\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Let us say we have a patch file containing some changes, aptly named\n\u2018somechanges.patch\u2019:</p>\n<pre><span class=\"gd\">--- lao     2012-12-26 23:16:54.000000000 -0600\n</span><span class=\"gi\">+++ tzu     2012-12-26 23:16:50.000000000 -0600\n</span><span class=\"gu\">@@ -1,7 +1,6 @@\n</span><span class=\"gd\">-The Way that can be told of is not the eternal Way;\n-The name that can be named is not the eternal name.\n</span> The Nameless is the origin of Heaven and Earth;\n<span class=\"gd\">-The Named is the mother of all things.\n</span><span class=\"gi\">+The named is the mother of all things.\n+\n</span> Therefore let there always be non-being,\n   so we may see their subtlety,\n  And let there always be being,\n<span class=\"gu\">@@ -9,3 +8,6 @@\n</span> The two are the same,\n But after they are produced,\n   they have different names.\n<span class=\"gi\">+They both may be called deep and profound.\n+Deeper and more profound,\n+The door of all subtleties!</span>\n</pre>\n<div id=\"parsing\">\n<h3>Parsing</h3>\n<p>Here is how we would use What The Patch!? in Python to get the changeset for\neach diff in the patch:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">whatthepatch</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pprint</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'tests/casefiles/diff-unified.diff'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">diff</span> <span class=\"ow\">in</span> <span class=\"n\">whatthepatch</span><span class=\"o\">.</span><span class=\"n\">parse_patch</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"p\">)</span> <span class=\"c1\"># doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE</span>\n<span class=\"o\">...</span>\n<span class=\"n\">diff</span><span class=\"p\">(</span><span class=\"n\">header</span><span class=\"o\">=</span><span class=\"n\">header</span><span class=\"p\">(</span><span class=\"n\">index_path</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                   <span class=\"n\">old_path</span><span class=\"o\">=</span><span class=\"s1\">'lao'</span><span class=\"p\">,</span>\n                   <span class=\"n\">old_version</span><span class=\"o\">=</span><span class=\"s1\">'2013-01-05 16:56:19.000000000 -0600'</span><span class=\"p\">,</span>\n                   <span class=\"n\">new_path</span><span class=\"o\">=</span><span class=\"s1\">'tzu'</span><span class=\"p\">,</span>\n                   <span class=\"n\">new_version</span><span class=\"o\">=</span><span class=\"s1\">'2013-01-05 16:56:35.000000000 -0600'</span><span class=\"p\">),</span>\n     <span class=\"n\">changes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'The Way that can be told of is not the eternal Way;'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'The name that can be named is not the eternal name.'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'The Nameless is the origin of Heaven and Earth;'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'The Named is the mother of all things.'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'The named is the mother of all things.'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">),</span> <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'Therefore let there always be non-being,'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'  so we may see their subtlety,'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'And let there always be being,'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'The two are the same,'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'But after they are produced,'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'  they have different names.'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'They both may be called deep and profound.'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'Deeper and more profound,'</span><span class=\"p\">),</span>\n              <span class=\"n\">Change</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"n\">hunk</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">line</span><span class=\"o\">=</span><span class=\"s1\">'The door of all subtleties!'</span><span class=\"p\">)],</span>\n     <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'...'</span><span class=\"p\">)</span>\n</pre>\n<p>The changes are listed as they are in the patch, but instead of the +/- syntax\nof the patch, we get a tuple of two numbers and the text of the line.\nWhat these numbers indicate are as follows:</p>\n<ol>\n<li><tt>( old=1, new=None, ... )</tt> indicates line 1 of the file lao was <strong>removed</strong>.</li>\n<li><tt>( old=None, new=2, ... )</tt> indicates line 2 of the file tzu was <strong>inserted</strong>.</li>\n<li><tt>( old=5, new=4, ... )</tt> indicates that line 5 of lao and line 4 of tzu are <strong>equal</strong>.</li>\n</ol>\n<p>Please note that not all patch formats provide the actual lines modified, so some\nresults will have the text portion of the tuple set to <tt>None</tt>.</p>\n</div>\n<div id=\"applying\">\n<h3>Applying</h3>\n<p>To apply a diff to some lines of text, first read the patch and parse it.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">whatthepatch</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'tests/casefiles/diff-default.diff'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'tests/casefiles/lao'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">lao</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">whatthepatch</span><span class=\"o\">.</span><span class=\"n\">parse_patch</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">diff</span> <span class=\"o\">=</span> <span class=\"n\">diff</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tzu</span> <span class=\"o\">=</span> <span class=\"n\">whatthepatch</span><span class=\"o\">.</span><span class=\"n\">apply_diff</span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"p\">,</span> <span class=\"n\">lao</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tzu</span>  <span class=\"c1\"># doctest: +NORMALIZE_WHITESPACE</span>\n<span class=\"p\">[</span><span class=\"s1\">'The Nameless is the origin of Heaven and Earth;'</span><span class=\"p\">,</span>\n <span class=\"s1\">'The named is the mother of all things.'</span><span class=\"p\">,</span>\n <span class=\"s1\">''</span><span class=\"p\">,</span>\n <span class=\"s1\">'Therefore let there always be non-being,'</span><span class=\"p\">,</span>\n <span class=\"s1\">'  so we may see their subtlety,'</span><span class=\"p\">,</span>\n <span class=\"s1\">'And let there always be being,'</span><span class=\"p\">,</span>\n <span class=\"s1\">'  so we may see their outcome.'</span><span class=\"p\">,</span>\n <span class=\"s1\">'The two are the same,'</span><span class=\"p\">,</span>\n <span class=\"s1\">'But after they are produced,'</span><span class=\"p\">,</span>\n <span class=\"s1\">'  they have different names.'</span><span class=\"p\">,</span>\n <span class=\"s1\">'They both may be called deep and profound.'</span><span class=\"p\">,</span>\n <span class=\"s1\">'Deeper and more profound,'</span><span class=\"p\">,</span>\n <span class=\"s1\">'The door of all subtleties!'</span><span class=\"p\">]</span>\n</pre>\n</div>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<ol>\n<li>Fork this repository</li>\n<li>Create a new branch to work on</li>\n<li>Commit your tests and/or changes</li>\n<li>Push and create a pull request here!</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 2768729, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "713a2750aadb41a235209acd3cffafa1", "sha256": "c3d11302583add7becd2b4e8fb126b59064d42abceea9ead79a0fffb4afcbf8a"}, "downloads": -1, "filename": "whatthepatch_graingert-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "713a2750aadb41a235209acd3cffafa1", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 12885, "upload_time": "2017-04-10T20:25:03", "upload_time_iso_8601": "2017-04-10T20:25:03.087515Z", "url": "https://files.pythonhosted.org/packages/ab/24/90fd206598f06181b6cdbfdb67dcc0d9327c210334f74ca06f968475f4b9/whatthepatch_graingert-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d57ab0b95fb3b355bf41d16a19d7398", "sha256": "a7643be700dbb127c6bf506fc99e8123c447c394454c538e23624a35e10c370f"}, "downloads": -1, "filename": "whatthepatch-graingert-0.0.5.tar.gz", "has_sig": false, "md5_digest": "8d57ab0b95fb3b355bf41d16a19d7398", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10215, "upload_time": "2017-04-10T20:25:01", "upload_time_iso_8601": "2017-04-10T20:25:01.094266Z", "url": "https://files.pythonhosted.org/packages/da/7b/fc1c89abc346104941ae58dd5c3739bf2df27ffa0384e0c3b37e5e726f2d/whatthepatch-graingert-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "d2911a91b1d44c9908de99d0d97baeac", "sha256": "d921cff0fc4c49ff36426ef3d2bc0e3e643c91e7796e8ac62ec1c239262356ec"}, "downloads": -1, "filename": "whatthepatch_graingert-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d2911a91b1d44c9908de99d0d97baeac", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 12944, "upload_time": "2017-04-10T20:43:33", "upload_time_iso_8601": "2017-04-10T20:43:33.560567Z", "url": "https://files.pythonhosted.org/packages/04/7f/915a4a6711a317ca0e9ed6298b56b3fe553b9f2c5d245eff380d381f9ed7/whatthepatch_graingert-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7fdbe06548f4042d11c3943015914a6", "sha256": "6bb6a682e808ccde811181422604068a0cbbad0accb9619c3b63c4da470741fe"}, "downloads": -1, "filename": "whatthepatch-graingert-0.0.6.tar.gz", "has_sig": false, "md5_digest": "e7fdbe06548f4042d11c3943015914a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10276, "upload_time": "2017-04-10T20:43:31", "upload_time_iso_8601": "2017-04-10T20:43:31.527594Z", "url": "https://files.pythonhosted.org/packages/ee/e8/c6fae312ea10dd065a7d4ea848e1f35c51b47d5215ad3ccd104d1144745a/whatthepatch-graingert-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2911a91b1d44c9908de99d0d97baeac", "sha256": "d921cff0fc4c49ff36426ef3d2bc0e3e643c91e7796e8ac62ec1c239262356ec"}, "downloads": -1, "filename": "whatthepatch_graingert-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d2911a91b1d44c9908de99d0d97baeac", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 12944, "upload_time": "2017-04-10T20:43:33", "upload_time_iso_8601": "2017-04-10T20:43:33.560567Z", "url": "https://files.pythonhosted.org/packages/04/7f/915a4a6711a317ca0e9ed6298b56b3fe553b9f2c5d245eff380d381f9ed7/whatthepatch_graingert-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7fdbe06548f4042d11c3943015914a6", "sha256": "6bb6a682e808ccde811181422604068a0cbbad0accb9619c3b63c4da470741fe"}, "downloads": -1, "filename": "whatthepatch-graingert-0.0.6.tar.gz", "has_sig": false, "md5_digest": "e7fdbe06548f4042d11c3943015914a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10276, "upload_time": "2017-04-10T20:43:31", "upload_time_iso_8601": "2017-04-10T20:43:31.527594Z", "url": "https://files.pythonhosted.org/packages/ee/e8/c6fae312ea10dd065a7d4ea848e1f35c51b47d5215ad3ccd104d1144745a/whatthepatch-graingert-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:54 2020"}