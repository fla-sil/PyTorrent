{"info": {"author": "Quan Wang", "author_email": "quanw@google.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# SimpleDER [![Build Status](https://travis-ci.org/wq2012/SimpleDER.svg?branch=master)](https://travis-ci.org/wq2012/SimpleDER) [![PyPI Version](https://img.shields.io/pypi/v/simpleder.svg)](https://pypi.python.org/pypi/simpleder) [![Python Versions](https://img.shields.io/pypi/pyversions/simpleder.svg)](https://pypi.org/project/simpleder) [![Documentation](https://img.shields.io/badge/api-reference-blue.svg)](https://wq2012.github.io/SimpleDER)\n\n## Overview\n\nThis is a lightweight library to compute Diarization Error Rate (DER).\n\nFeatures **NOT** supported:\n\n* Handling overlapped speech, *i.e.* two speakers speaking at the same time.\n* Allowing segment boundary tolerance, *a.k.a.* the `collar` value.\n\nFor more sophisticated metrics with these supports, please use\n[pyannote-metrics](https://github.com/pyannote/pyannote-metrics) instead.\n\nTo learn more about speaker diarization, here is a curated list of resources:\n[awesome-diarization](https://github.com/wq2012/awesome-diarization).\n\n## Diarization Error Rate\n\nDiarization Error Rate (DER) is the most commonly used metrics for\n[speaker diarization](https://en.wikipedia.org/wiki/Speaker_diarisation).\n\nIts strict form is:\n\n```\n       False Alarm + Miss + Overlap + Confusion\nDER = ------------------------------------------\n                   Reference Length\n```\n\nThe definition of each term:\n\n* `Reference Length:` The total length of the reference (ground truth).\n* `False Alarm`: Length of segments which are considered as speech in\n  hypothesis, but not in reference.\n* `Miss`: Length of segments which are considered as speech in\n  reference, but not in hypothesis.\n* `Overlap`: Length of segments which are considered as overlapped speech\n  in hypothesis, but not in reference.\n  **This library does NOT support overlap.**\n* `Confusion`: Length of segments which are assigned to different speakers\n  in hypothesis and reference (after applying an optimal assignment).\n\nThe unit of each term is *seconds*.\n\nNote that DER can theoretically be larger than 1.0.\n\nReferences:\n\n* [pyannote-metrics documentation](https://pyannote.github.io/pyannote-metrics/reference.html)\n* [Xavier Anguera's thesis](http://www.xavieranguera.com/phdthesis/node108.html)\n\n## Tutorial\n\n### Install\n\nInstall the package by:\n\n```bash\npip3 install simpleder\n```\n\nor\n\n```bash\npython3 -m pip install simpleder\n```\n\n### API\n\nHere is a minimal example:\n\n```python\nimport simpleder\n\n# reference (ground truth)\nref = [(\"A\", 0.0, 1.0),\n       (\"B\", 1.0, 1.5),\n       (\"A\", 1.6, 2.1)]\n\n# hypothesis (diarization result from your algorithm)\nhyp = [(\"1\", 0.0, 0.8),\n       (\"2\", 0.8, 1.4),\n       (\"3\", 1.5, 1.8),\n       (\"1\", 1.8, 2.0)]\n\nerror = simpleder.DER(ref, hyp)\n\nprint(\"DER={:.3f}\".format(error))\n```\n\nThis should output:\n\n```\nDER=0.350\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wq2012/SimpleDER", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "simpleder", "package_url": "https://pypi.org/project/simpleder/", "platform": "", "project_url": "https://pypi.org/project/simpleder/", "project_urls": {"Homepage": "https://github.com/wq2012/SimpleDER"}, "release_url": "https://pypi.org/project/simpleder/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "A lightweight library to compute Diarization Error Rate (DER).", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SimpleDER <a href=\"https://travis-ci.org/wq2012/SimpleDER\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad724ecef0d20fddb3be98344da70dbd5925236e/68747470733a2f2f7472617669732d63692e6f72672f7771323031322f53696d706c654445522e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/simpleder\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3896d6cbc00cad5cfecfede86ac3c28f179d1448/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73696d706c656465722e737667\"></a> <a href=\"https://pypi.org/project/simpleder\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d48e7fbc861cadfa51ae788b3b29b56c08a53da/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f73696d706c656465722e737667\"></a> <a href=\"https://wq2012.github.io/SimpleDER\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2c29f9e28077033634d3232ed5cbfce2cdb79ba/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6170692d7265666572656e63652d626c75652e737667\"></a></h1>\n<h2>Overview</h2>\n<p>This is a lightweight library to compute Diarization Error Rate (DER).</p>\n<p>Features <strong>NOT</strong> supported:</p>\n<ul>\n<li>Handling overlapped speech, <em>i.e.</em> two speakers speaking at the same time.</li>\n<li>Allowing segment boundary tolerance, <em>a.k.a.</em> the <code>collar</code> value.</li>\n</ul>\n<p>For more sophisticated metrics with these supports, please use\n<a href=\"https://github.com/pyannote/pyannote-metrics\" rel=\"nofollow\">pyannote-metrics</a> instead.</p>\n<p>To learn more about speaker diarization, here is a curated list of resources:\n<a href=\"https://github.com/wq2012/awesome-diarization\" rel=\"nofollow\">awesome-diarization</a>.</p>\n<h2>Diarization Error Rate</h2>\n<p>Diarization Error Rate (DER) is the most commonly used metrics for\n<a href=\"https://en.wikipedia.org/wiki/Speaker_diarisation\" rel=\"nofollow\">speaker diarization</a>.</p>\n<p>Its strict form is:</p>\n<pre><code>       False Alarm + Miss + Overlap + Confusion\nDER = ------------------------------------------\n                   Reference Length\n</code></pre>\n<p>The definition of each term:</p>\n<ul>\n<li><code>Reference Length:</code> The total length of the reference (ground truth).</li>\n<li><code>False Alarm</code>: Length of segments which are considered as speech in\nhypothesis, but not in reference.</li>\n<li><code>Miss</code>: Length of segments which are considered as speech in\nreference, but not in hypothesis.</li>\n<li><code>Overlap</code>: Length of segments which are considered as overlapped speech\nin hypothesis, but not in reference.\n<strong>This library does NOT support overlap.</strong></li>\n<li><code>Confusion</code>: Length of segments which are assigned to different speakers\nin hypothesis and reference (after applying an optimal assignment).</li>\n</ul>\n<p>The unit of each term is <em>seconds</em>.</p>\n<p>Note that DER can theoretically be larger than 1.0.</p>\n<p>References:</p>\n<ul>\n<li><a href=\"https://pyannote.github.io/pyannote-metrics/reference.html\" rel=\"nofollow\">pyannote-metrics documentation</a></li>\n<li><a href=\"http://www.xavieranguera.com/phdthesis/node108.html\" rel=\"nofollow\">Xavier Anguera's thesis</a></li>\n</ul>\n<h2>Tutorial</h2>\n<h3>Install</h3>\n<p>Install the package by:</p>\n<pre>pip3 install simpleder\n</pre>\n<p>or</p>\n<pre>python3 -m pip install simpleder\n</pre>\n<h3>API</h3>\n<p>Here is a minimal example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">simpleder</span>\n\n<span class=\"c1\"># reference (ground truth)</span>\n<span class=\"n\">ref</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">\"A\"</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">),</span>\n       <span class=\"p\">(</span><span class=\"s2\">\"B\"</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">),</span>\n       <span class=\"p\">(</span><span class=\"s2\">\"A\"</span><span class=\"p\">,</span> <span class=\"mf\">1.6</span><span class=\"p\">,</span> <span class=\"mf\">2.1</span><span class=\"p\">)]</span>\n\n<span class=\"c1\"># hypothesis (diarization result from your algorithm)</span>\n<span class=\"n\">hyp</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">\"1\"</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">),</span>\n       <span class=\"p\">(</span><span class=\"s2\">\"2\"</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">1.4</span><span class=\"p\">),</span>\n       <span class=\"p\">(</span><span class=\"s2\">\"3\"</span><span class=\"p\">,</span> <span class=\"mf\">1.5</span><span class=\"p\">,</span> <span class=\"mf\">1.8</span><span class=\"p\">),</span>\n       <span class=\"p\">(</span><span class=\"s2\">\"1\"</span><span class=\"p\">,</span> <span class=\"mf\">1.8</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">)]</span>\n\n<span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"n\">simpleder</span><span class=\"o\">.</span><span class=\"n\">DER</span><span class=\"p\">(</span><span class=\"n\">ref</span><span class=\"p\">,</span> <span class=\"n\">hyp</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"DER=</span><span class=\"si\">{:.3f}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"p\">))</span>\n</pre>\n<p>This should output:</p>\n<pre><code>DER=0.350\n</code></pre>\n\n          </div>"}, "last_serial": 4746480, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1e5652d54e04313c67fd47dd61a985d5", "sha256": "00c5cc50d217621fea021fa4b256a3ec7cfa98e325097c06e950b8f5f3ba07a2"}, "downloads": -1, "filename": "simpleder-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1e5652d54e04313c67fd47dd61a985d5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7695, "upload_time": "2019-01-27T15:52:22", "upload_time_iso_8601": "2019-01-27T15:52:22.459617Z", "url": "https://files.pythonhosted.org/packages/84/3e/aa746464278b11f630eae1e80e98852af6a8b1334722700c79c1939e7be9/simpleder-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32a54fa266b2a3e357357e2609be9b16", "sha256": "db1201c8e01d078c4f91eb535495d91d67c0615d119c643787d7545d6543d916"}, "downloads": -1, "filename": "simpleder-0.0.1.tar.gz", "has_sig": false, "md5_digest": "32a54fa266b2a3e357357e2609be9b16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3198, "upload_time": "2019-01-27T15:52:24", "upload_time_iso_8601": "2019-01-27T15:52:24.828860Z", "url": "https://files.pythonhosted.org/packages/ee/5c/add18fba62e75e439bb6566c7d8e6723405fc32230e4db08880d1024566b/simpleder-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0651c5af1d25932c4cfc5154cdcf050e", "sha256": "0441e0118d1e6be56aeeee030f2a66f5b0757699d7c07f24a7b915c3ec298f46"}, "downloads": -1, "filename": "simpleder-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0651c5af1d25932c4cfc5154cdcf050e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8272, "upload_time": "2019-01-27T16:40:09", "upload_time_iso_8601": "2019-01-27T16:40:09.750959Z", "url": "https://files.pythonhosted.org/packages/c1/3d/77a88106d85e0ab2a5d57056fcedc7bd95f59facb2e3899c5b02c31479c2/simpleder-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "217b61b11ea714c31534f3bf64cee582", "sha256": "82b506b0e769cf90f377a08ee6198286b5f646ebb1b8260eaa4ebd745eda8a80"}, "downloads": -1, "filename": "simpleder-0.0.2.tar.gz", "has_sig": false, "md5_digest": "217b61b11ea714c31534f3bf64cee582", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3886, "upload_time": "2019-01-27T16:40:10", "upload_time_iso_8601": "2019-01-27T16:40:10.977521Z", "url": "https://files.pythonhosted.org/packages/bc/fb/d30d9263ce01d969a4c06e7995720e03574840c93439be356127fa552b18/simpleder-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0651c5af1d25932c4cfc5154cdcf050e", "sha256": "0441e0118d1e6be56aeeee030f2a66f5b0757699d7c07f24a7b915c3ec298f46"}, "downloads": -1, "filename": "simpleder-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0651c5af1d25932c4cfc5154cdcf050e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8272, "upload_time": "2019-01-27T16:40:09", "upload_time_iso_8601": "2019-01-27T16:40:09.750959Z", "url": "https://files.pythonhosted.org/packages/c1/3d/77a88106d85e0ab2a5d57056fcedc7bd95f59facb2e3899c5b02c31479c2/simpleder-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "217b61b11ea714c31534f3bf64cee582", "sha256": "82b506b0e769cf90f377a08ee6198286b5f646ebb1b8260eaa4ebd745eda8a80"}, "downloads": -1, "filename": "simpleder-0.0.2.tar.gz", "has_sig": false, "md5_digest": "217b61b11ea714c31534f3bf64cee582", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3886, "upload_time": "2019-01-27T16:40:10", "upload_time_iso_8601": "2019-01-27T16:40:10.977521Z", "url": "https://files.pythonhosted.org/packages/bc/fb/d30d9263ce01d969a4c06e7995720e03574840c93439be356127fa552b18/simpleder-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:53 2020"}