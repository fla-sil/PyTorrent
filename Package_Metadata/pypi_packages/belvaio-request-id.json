{"info": {"author": "Belvo Finance, S.L.", "author_email": "hello@belvo.co", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Belvaio Request Id\n\n[![Package version](https://img.shields.io/pypi/v/belvaio-request-id)](https://pypi.org/project/belvaio-request-id/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/belvaio-request-id)](https://pypistats.org/packages/belvaio-request-id)\n[![Build Status](https://travis-ci.com/belvo-finance/belvaio-request-id.svg?branch=master)](https://travis-ci.com/belvo-finance/belvaio-request-id)\n[![codecov](https://codecov.io/gh/belvo-finance/belvaio-request-id/branch/master/graph/badge.svg)](https://codecov.io/gh/belvo-finance/belvaio-request-id)\n\nBelvaio Request Id is an [aiohttp][aiohttp] set of utils that help us to track request journey between services.\n\n1. **`request_id_middleware`**: aiohttp middleware that generate random `request_id` or read it from `X-Request-Id` header for each http request.\n\n2. **`RequestIdFilter`**: logging filter that allow attach `request_id` to every logging record.\n\n3. **`RequestIdAccessLogger`**: add `request_id` to aiohttp access log. This log message is logged outside the scope where we set the context var that store the `request_id`, so we need to define our own [AccessLogger][access-logs] that fixes this.\n\n4. If [Sentry][sentry-aiohttp] is used  a `request_id` tag is added when the http request is processed.\n\nMotivation: [Skyscanner / aiotask-context][motivation]\n\n## Requirements\n\n- Python 3.7+\n- [`aiohttp`][aiohttp] >= 3.5\n\n## Installation\n\n```shell\npip install belvaio-request-id\n```\n\n## Example\n\n```python\n\"\"\"\nPOC to demonstrate the usage of the belvaio-request-id package for writing the request_id from aiohttp into every log call. If you run this script, you can try to query with curl or the browser:\n\n    $ curl http://127.0.0.1:8080/Mateu\n    Hello, Mateu. Your request id is 93234aa6d4524f4bb76622e5d0c85589.\n\n    $ curl -H \"X-Request-ID: e72ec21b412845cf86a8aee50331cc4f\" http://127.0.0.1:8080/Mateu\n    Hello, Mateu. Your request id is e72ec21b412845cf86a8aee50331cc4f.\n\nIn the terminal you should see something similar to:\n\n    ======== Running on http://0.0.0.0:8080 ========\n    (Press CTRL+C to quit)\n    2020-03-20 11:43:20,248 INFO __main__ 93234aa6d4524f4bb76622e5d0c85589 | Received new GET /Mateu call\n    2020-03-20 11:43:20,249 INFO aiohttp.access 93234aa6d4524f4bb76622e5d0c85589 | 127.0.0.1 \"GET /Mateu HTTP/1.1\" 200 266 \"curl/7.64.1\"\n\"\"\"\n\nimport logging.config\n\nfrom aiohttp import web\nfrom belvaio_request_id.logger import RequestIdAccessLogger\nfrom belvaio_request_id.middleware import request_id_middleware\nfrom belvaio_request_id.utils import get_request_id\n\nLOG_SETTINGS = {\n    \"version\": 1,\n    \"disable_existing_loggers\": False,\n    \"handlers\": {\n        \"console\": {\n            \"class\": \"logging.StreamHandler\",\n            \"level\": \"INFO\",\n            \"formatter\": \"default\",\n            \"filters\": [\"requestid\"],\n        },\n    },\n    \"filters\": {\"requestid\": {\"()\": \"belvaio_request_id.logger.RequestIdFilter\",},},\n    \"formatters\": {\n        \"default\": {\n            \"format\": \"%(asctime)s %(levelname)s %(name)s %(request_id)s | %(message)s\",\n        },\n    },\n    \"loggers\": {\"\": {\"level\": \"DEBUG\", \"handlers\": [\"console\"], \"propagate\": True},},\n}\n\nlogging.config.dictConfig(LOG_SETTINGS)\nlogger = logging.getLogger(__name__)\n\n\nasync def handle(request):\n    name = request.match_info.get(\"name\")\n    logger.info(\"Received new GET /%s call\", name)\n    text = f\"Hello, {name}. Your request id is {get_request_id()}.\\n\"\n    return web.Response(text=text)\n\n\nif __name__ == \"__main__\":\n    app = web.Application(middlewares=[request_id_middleware])\n    app.router.add_route(\"GET\", \"/{name}\", handle)\n    web.run_app(\n        app,\n        access_log_format='%a \"%r\" %s %b \"%{User-Agent}i\"',\n        access_log_class=RequestIdAccessLogger,\n    )\n\n```\n\n## Contributing\n\nThe Belvo team happily welcomes contributions. [Guidelines][guidelines] will help you get ready to contribute to this project!\n\n[aiohttp]: https://docs.aiohttp.org/en/stable/index.html\n[guidelines]: https://github.com/belvo-finance/belvaio-request-id/blob/master/CONTRIBUTING.md\n[access-logs]: https://docs.aiohttp.org/en/stable/logging.html#access-logs\n[sentry-aiohttp]: https://docs.sentry.io/platforms/python/aiohttp/\n[motivation]: https://github.com/Skyscanner/aiotask-context\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/belvo-finance/belvaio-request-id", "keywords": "", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "belvaio-request-id", "package_url": "https://pypi.org/project/belvaio-request-id/", "platform": "", "project_url": "https://pypi.org/project/belvaio-request-id/", "project_urls": {"Homepage": "https://github.com/belvo-finance/belvaio-request-id"}, "release_url": "https://pypi.org/project/belvaio-request-id/0.1.1/", "requires_dist": ["aiohttp (>=3.5)", "sentry-sdk ; extra == 'sentry'"], "requires_python": ">=3.7", "summary": "An aiohttp utils to track request journey between services.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Belvaio Request Id</h1>\n<p><a href=\"https://pypi.org/project/belvaio-request-id/\" rel=\"nofollow\"><img alt=\"Package version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4137570c8af919d95ce2ccde7ef633b7814f80e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f62656c7661696f2d726571756573742d6964\"></a>\n<a href=\"https://pypistats.org/packages/belvaio-request-id\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c86d097309a6bad24a0be4272522f8188f7690ca/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f62656c7661696f2d726571756573742d6964\"></a>\n<a href=\"https://travis-ci.com/belvo-finance/belvaio-request-id\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfbb9aa05b0b162b4f1c8b3994b37c529c4870c/68747470733a2f2f7472617669732d63692e636f6d2f62656c766f2d66696e616e63652f62656c7661696f2d726571756573742d69642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/belvo-finance/belvaio-request-id\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cecf161bfac55b41b9acce093d26f237d0ab6d99/68747470733a2f2f636f6465636f762e696f2f67682f62656c766f2d66696e616e63652f62656c7661696f2d726571756573742d69642f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>Belvaio Request Id is an <a href=\"https://docs.aiohttp.org/en/stable/index.html\" rel=\"nofollow\">aiohttp</a> set of utils that help us to track request journey between services.</p>\n<ol>\n<li>\n<p><strong><code>request_id_middleware</code></strong>: aiohttp middleware that generate random <code>request_id</code> or read it from <code>X-Request-Id</code> header for each http request.</p>\n</li>\n<li>\n<p><strong><code>RequestIdFilter</code></strong>: logging filter that allow attach <code>request_id</code> to every logging record.</p>\n</li>\n<li>\n<p><strong><code>RequestIdAccessLogger</code></strong>: add <code>request_id</code> to aiohttp access log. This log message is logged outside the scope where we set the context var that store the <code>request_id</code>, so we need to define our own <a href=\"https://docs.aiohttp.org/en/stable/logging.html#access-logs\" rel=\"nofollow\">AccessLogger</a> that fixes this.</p>\n</li>\n<li>\n<p>If <a href=\"https://docs.sentry.io/platforms/python/aiohttp/\" rel=\"nofollow\">Sentry</a> is used  a <code>request_id</code> tag is added when the http request is processed.</p>\n</li>\n</ol>\n<p>Motivation: <a href=\"https://github.com/Skyscanner/aiotask-context\" rel=\"nofollow\">Skyscanner / aiotask-context</a></p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.7+</li>\n<li><a href=\"https://docs.aiohttp.org/en/stable/index.html\" rel=\"nofollow\"><code>aiohttp</code></a> &gt;= 3.5</li>\n</ul>\n<h2>Installation</h2>\n<pre>pip install belvaio-request-id\n</pre>\n<h2>Example</h2>\n<pre><span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">POC to demonstrate the usage of the belvaio-request-id package for writing the request_id from aiohttp into every log call. If you run this script, you can try to query with curl or the browser:</span>\n\n<span class=\"sd\">    $ curl http://127.0.0.1:8080/Mateu</span>\n<span class=\"sd\">    Hello, Mateu. Your request id is 93234aa6d4524f4bb76622e5d0c85589.</span>\n\n<span class=\"sd\">    $ curl -H \"X-Request-ID: e72ec21b412845cf86a8aee50331cc4f\" http://127.0.0.1:8080/Mateu</span>\n<span class=\"sd\">    Hello, Mateu. Your request id is e72ec21b412845cf86a8aee50331cc4f.</span>\n\n<span class=\"sd\">In the terminal you should see something similar to:</span>\n\n<span class=\"sd\">    ======== Running on http://0.0.0.0:8080 ========</span>\n<span class=\"sd\">    (Press CTRL+C to quit)</span>\n<span class=\"sd\">    2020-03-20 11:43:20,248 INFO __main__ 93234aa6d4524f4bb76622e5d0c85589 | Received new GET /Mateu call</span>\n<span class=\"sd\">    2020-03-20 11:43:20,249 INFO aiohttp.access 93234aa6d4524f4bb76622e5d0c85589 | 127.0.0.1 \"GET /Mateu HTTP/1.1\" 200 266 \"curl/7.64.1\"</span>\n<span class=\"sd\">\"\"\"</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">web</span>\n<span class=\"kn\">from</span> <span class=\"nn\">belvaio_request_id.logger</span> <span class=\"kn\">import</span> <span class=\"n\">RequestIdAccessLogger</span>\n<span class=\"kn\">from</span> <span class=\"nn\">belvaio_request_id.middleware</span> <span class=\"kn\">import</span> <span class=\"n\">request_id_middleware</span>\n<span class=\"kn\">from</span> <span class=\"nn\">belvaio_request_id.utils</span> <span class=\"kn\">import</span> <span class=\"n\">get_request_id</span>\n\n<span class=\"n\">LOG_SETTINGS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"version\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"disable_existing_loggers\"</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"handlers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"console\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"class\"</span><span class=\"p\">:</span> <span class=\"s2\">\"logging.StreamHandler\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"INFO\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"formatter\"</span><span class=\"p\">:</span> <span class=\"s2\">\"default\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"filters\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"requestid\"</span><span class=\"p\">],</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"filters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"requestid\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"()\"</span><span class=\"p\">:</span> <span class=\"s2\">\"belvaio_request_id.logger.RequestIdFilter\"</span><span class=\"p\">,},},</span>\n    <span class=\"s2\">\"formatters\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"format\"</span><span class=\"p\">:</span> <span class=\"s2\">\"</span><span class=\"si\">%(asctime)s</span><span class=\"s2\"> </span><span class=\"si\">%(levelname)s</span><span class=\"s2\"> </span><span class=\"si\">%(name)s</span><span class=\"s2\"> </span><span class=\"si\">%(request_id)s</span><span class=\"s2\"> | </span><span class=\"si\">%(message)s</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n    <span class=\"s2\">\"loggers\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"level\"</span><span class=\"p\">:</span> <span class=\"s2\">\"DEBUG\"</span><span class=\"p\">,</span> <span class=\"s2\">\"handlers\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"console\"</span><span class=\"p\">],</span> <span class=\"s2\">\"propagate\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">},},</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">(</span><span class=\"n\">LOG_SETTINGS</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">match_info</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">)</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Received new GET /</span><span class=\"si\">%s</span><span class=\"s2\"> call\"</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">\"Hello, </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">. Your request id is </span><span class=\"si\">{</span><span class=\"n\">get_request_id</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">.</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n    <span class=\"k\">return</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">(</span><span class=\"n\">middlewares</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">request_id_middleware</span><span class=\"p\">])</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">add_route</span><span class=\"p\">(</span><span class=\"s2\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/</span><span class=\"si\">{name}</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">handle</span><span class=\"p\">)</span>\n    <span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span>\n        <span class=\"n\">app</span><span class=\"p\">,</span>\n        <span class=\"n\">access_log_format</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"si\">%a</span><span class=\"s1\"> \"</span><span class=\"si\">%r</span><span class=\"s1\">\" </span><span class=\"si\">%s</span><span class=\"s1\"> %b \"%{User-Agent}i\"'</span><span class=\"p\">,</span>\n        <span class=\"n\">access_log_class</span><span class=\"o\">=</span><span class=\"n\">RequestIdAccessLogger</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n<h2>Contributing</h2>\n<p>The Belvo team happily welcomes contributions. <a href=\"https://github.com/belvo-finance/belvaio-request-id/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">Guidelines</a> will help you get ready to contribute to this project!</p>\n\n          </div>"}, "last_serial": 6850267, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "19f657a6d94d4fd26cf162d223efe3ff", "sha256": "57b131ffe74e4e3090c6eda4ccd28a87f15a2155234a9c72f694532905ce6003"}, "downloads": -1, "filename": "belvaio_request_id-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "19f657a6d94d4fd26cf162d223efe3ff", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 5539, "upload_time": "2020-03-18T16:30:41", "upload_time_iso_8601": "2020-03-18T16:30:41.438160Z", "url": "https://files.pythonhosted.org/packages/e5/b2/6b4f65bcca7507950850d016bcf51a218d47a2a4bf0641a31b43f9eb3f44/belvaio_request_id-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cb1a9e693ee7bb2f1764169850ecc04", "sha256": "11e32373384a2c309ca03cd47693db7ea572de6a5cdc8484f1d16e80ed6e0e4b"}, "downloads": -1, "filename": "belvaio-request-id-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0cb1a9e693ee7bb2f1764169850ecc04", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 4317, "upload_time": "2020-03-18T16:30:43", "upload_time_iso_8601": "2020-03-18T16:30:43.627596Z", "url": "https://files.pythonhosted.org/packages/45/58/cedccab2acfba7712261ba4404e6a33929dd43265fe24b6483317e5cb96c/belvaio-request-id-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6609bec83672d3f73cf6a40a789924eb", "sha256": "3d384986bce7c17ec86a704a5933f94238d0c324b85b8ca39bd088a34590343c"}, "downloads": -1, "filename": "belvaio_request_id-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6609bec83672d3f73cf6a40a789924eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6721, "upload_time": "2020-03-20T15:00:25", "upload_time_iso_8601": "2020-03-20T15:00:25.816806Z", "url": "https://files.pythonhosted.org/packages/7e/45/70264a0e1c4c8c0214a87a17ad65601bb6c28242b826114d2679d7122400/belvaio_request_id-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e61f3efafd66de0e45a636d137c30d4a", "sha256": "bca30dce290f718a2e1b8cad4185ea84cc99eb468a3b07b051a10e895102d563"}, "downloads": -1, "filename": "belvaio-request-id-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e61f3efafd66de0e45a636d137c30d4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5647, "upload_time": "2020-03-20T15:00:26", "upload_time_iso_8601": "2020-03-20T15:00:26.856104Z", "url": "https://files.pythonhosted.org/packages/41/bb/2811a15933729332ada4f36b431a4654de0b7930df666ae0a418d25a4489/belvaio-request-id-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6609bec83672d3f73cf6a40a789924eb", "sha256": "3d384986bce7c17ec86a704a5933f94238d0c324b85b8ca39bd088a34590343c"}, "downloads": -1, "filename": "belvaio_request_id-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6609bec83672d3f73cf6a40a789924eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6721, "upload_time": "2020-03-20T15:00:25", "upload_time_iso_8601": "2020-03-20T15:00:25.816806Z", "url": "https://files.pythonhosted.org/packages/7e/45/70264a0e1c4c8c0214a87a17ad65601bb6c28242b826114d2679d7122400/belvaio_request_id-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e61f3efafd66de0e45a636d137c30d4a", "sha256": "bca30dce290f718a2e1b8cad4185ea84cc99eb468a3b07b051a10e895102d563"}, "downloads": -1, "filename": "belvaio-request-id-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e61f3efafd66de0e45a636d137c30d4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5647, "upload_time": "2020-03-20T15:00:26", "upload_time_iso_8601": "2020-03-20T15:00:26.856104Z", "url": "https://files.pythonhosted.org/packages/41/bb/2811a15933729332ada4f36b431a4654de0b7930df666ae0a418d25a4489/belvaio-request-id-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:49 2020"}