{"info": {"author": "Maik Derstappen", "author_email": "md@derico.de", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "Framework :: Plone :: Addon", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.7"], "description": ".. image:: https://secure.travis-ci.org/collective/collective.edtf_behavior.png?branch=master\n    :target: http://travis-ci.org/collective/collective.edtf_behavior\n\n.. image:: https://coveralls.io/repos/github/collective/collective.edtf_behavior/badge.svg?branch=master\n    :target: https://coveralls.io/github/collective/collective.edtf_behavior?branch=master\n    :alt: Coveralls\n\n.. image:: https://img.shields.io/pypi/l/collective.edtf_behavior.svg\n    :target: https://pypi.python.org/pypi/collective.edtf_behavior/\n    :alt: License\n\n.. image:: https://badges.gitter.im/collective/collective.edtf_behavior.svg\n   :alt: Join the chat at https://gitter.im/collective/collective.edtf_behavior\n   :target: https://gitter.im/collective/collective.edtf_behavior?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n\n========================\ncollective.edtf_behavior\n========================\n\nA Plone behavior which provides a `EDTF <http://www.loc.gov/standards/datetime/edtf.html>`_  Date field and some indexes to search and sort on complex and historic dates.\n\nNote: the current implementation of the used library `python-edtf <https://pypi.org/project/edtf/>`_ , still uses an earlier draft of the standard: http://www.loc.gov/standards/datetime/pre-submission.html\n\n\nFeatures\n--------\n\n- Allows unspecific dates or date intervals: \"1989-11\" or \"1989-11~\" or \"1989-11-01/1989-11-30\"\n- Seasons: 2001-21  >> Spring, 2001\n- old dates like 03.08.1492\n- Search indexes: date_earliest and date_latest\n- Sort indexes: date_sort_ascending and date_sort_descending\n\n\nInstallation\n------------\n\nInstall collective.edtf_behavior by adding it to your buildout::\n\n    [buildout]\n\n    ...\n\n    eggs =\n        collective.edtf_behavior\n\n\nand then running ``bin/buildout``\n\nAfter you activated the add-on in the Plone Add-ons section, you can Enable this behavior on any Dexterity based content type.\n\nQuerying\n--------\n\n.. code-block:: python\n\n        from plone import api\n\nfind any document which earliest date is 06.02.1920 or later.\n\n.. code-block:: python\n\n        results = api.content.find(\n            portal_type='Document',\n            date_earliest={\n                'query': datetime.date(1920, 2, 6),\n                'range': 'min',\n            },\n        )\n\nfind any document which latest date is 11.11.1711 or earlier.\n\n.. code-block:: python\n\n        results = api.content.find(\n            portal_type='Document',\n            date_latest={\n                'query': datetime.date(1711, 11, 11),\n                'range': 'max',\n            },\n        )\n\nThis package provides a `DateRangeInRangeIndex <https://pypi.org/project/Products.DateRangeInRangeIndex/>`_  named ``edtf_start_end_range``.\n\nfind all documents that fall at least with one start/end date of there interval into the range:\n\n.. code-block:: python\n\n        results = api.content.find(\n            portal_type='Document',\n            edtf_start_end_range={\n                'start': datetime.date(1711, 11, 11),\n                'end':   datetime.date(1920, 2, 6),\n            },\n        )\n\nFor more examples how to query the indexes, have a look at the `tests <https://github.com/collective/collective.edtf_behavior/tree/master/src/collective/edtf_behavior/tests>`_ .\n\n\nExtending it\n------------\n\nOne could improve indexing by using a DateRangeIndex, like the effectiveRange index in Plone if needed.\n\n.. code-block:: xml\n\n    <!-- Example of a DateRangeIndex like the effectiveRange index in Plone -->\n    <index name=\"edtf_date_range\" meta_type=\"DateRangeIndex\"\n      since_field=\"date_earliest\" until_field=\"date_latest\" />\n\n\nContribute\n----------\n\n- Issue Tracker: https://github.com/collective/collective.edtf_behavior/issues\n- Source Code: https://github.com/collective/collective.edtf_behavior\n\n\nSupport\n-------\n\nIf you are having issues, please let us know.\nYou can reach us on Gitter.\n\n\nLicense\n-------\n\nThe project is licensed under the GPLv2.\n\n\nContributors\n============\n\n- Maik Derstappen, md@derico.de\n\n\nChangelog\n=========\n\n\n1.0.3 (2019-08-26)\n------------------\n\n- Faxed test and test setup, small cleanup\n  [MrTango]\n\n\n1.0.2 (2019-03-22)\n------------------\n\n- Add edtf_parseable validator (constraint) to edtf_behavior\n  [MrTango]\n\n\n1.0.1 (2019-03-18)\n------------------\n\n- Add absolute_import statement to all files, to improve Py3 support, fix README syntax\n  [MrTango]\n\n\n1.0 (2019-03-18)\n----------------\n\n- Add edtf_start_end_range index and document querying in the readme.\n  [MrTango]\n\n\n1.0a1 (2019-03-14)\n------------------\n\n- Initial release, with EDTF behavior and 4 main indexes.\n  [MrTango]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/collective.edtf_behavior", "keywords": "Python Plone", "license": "GPL version 2", "maintainer": "", "maintainer_email": "", "name": "collective.edtf-behavior", "package_url": "https://pypi.org/project/collective.edtf-behavior/", "platform": "", "project_url": "https://pypi.org/project/collective.edtf-behavior/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/collective.edtf_behavior"}, "release_url": "https://pypi.org/project/collective.edtf-behavior/1.0.3/", "requires_dist": null, "requires_python": "==2.7, >=3.7", "summary": "A EDTF behavior for Plone.", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/collective/collective.edtf_behavior\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/collective/collective.edtf_behavior.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/19f1caedb67546adba02e1ee0d54329add63aba5/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f636f6c6c6563746976652f636f6c6c6563746976652e656474665f6265686176696f722e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/collective/collective.edtf_behavior?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/701778c9353345347136b6dbbe5defdd99e3cc2f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f636f6c6c6563746976652f636f6c6c6563746976652e656474665f6265686176696f722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/collective.edtf_behavior/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93900e7b38ff06164868c51aa545b4887a78c187/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636f6c6c6563746976652e656474665f6265686176696f722e737667\"></a>\n<a href=\"https://gitter.im/collective/collective.edtf_behavior?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/collective/collective.edtf_behavior\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b6f5b2a7a9ac49f7af8302b3abe70d75acaf426/68747470733a2f2f6261646765732e6769747465722e696d2f636f6c6c6563746976652f636f6c6c6563746976652e656474665f6265686176696f722e737667\"></a>\n<div id=\"collective-edtf-behavior\">\n<h2>collective.edtf_behavior</h2>\n<p>A Plone behavior which provides a <a href=\"http://www.loc.gov/standards/datetime/edtf.html\" rel=\"nofollow\">EDTF</a>  Date field and some indexes to search and sort on complex and historic dates.</p>\n<p>Note: the current implementation of the used library <a href=\"https://pypi.org/project/edtf/\" rel=\"nofollow\">python-edtf</a> , still uses an earlier draft of the standard: <a href=\"http://www.loc.gov/standards/datetime/pre-submission.html\" rel=\"nofollow\">http://www.loc.gov/standards/datetime/pre-submission.html</a></p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Allows unspecific dates or date intervals: \u201c1989-11\u201d or \u201c1989-11~\u201d or \u201c1989-11-01/1989-11-30\u201d</li>\n<li>Seasons: 2001-21  &gt;&gt; Spring, 2001</li>\n<li>old dates like 03.08.1492</li>\n<li>Search indexes: date_earliest and date_latest</li>\n<li>Sort indexes: date_sort_ascending and date_sort_descending</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Install collective.edtf_behavior by adding it to your buildout:</p>\n<pre>[buildout]\n\n...\n\neggs =\n    collective.edtf_behavior\n</pre>\n<p>and then running <tt>bin/buildout</tt></p>\n<p>After you activated the add-on in the Plone Add-ons section, you can Enable this behavior on any Dexterity based content type.</p>\n</div>\n<div id=\"querying\">\n<h3>Querying</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">plone</span> <span class=\"kn\">import</span> <span class=\"n\">api</span>\n</pre>\n<p>find any document which earliest date is 06.02.1920 or later.</p>\n<pre><span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span>\n    <span class=\"n\">portal_type</span><span class=\"o\">=</span><span class=\"s1\">'Document'</span><span class=\"p\">,</span>\n    <span class=\"n\">date_earliest</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'query'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">1920</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">),</span>\n        <span class=\"s1\">'range'</span><span class=\"p\">:</span> <span class=\"s1\">'min'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n</pre>\n<p>find any document which latest date is 11.11.1711 or earlier.</p>\n<pre><span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span>\n    <span class=\"n\">portal_type</span><span class=\"o\">=</span><span class=\"s1\">'Document'</span><span class=\"p\">,</span>\n    <span class=\"n\">date_latest</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'query'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">1711</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">),</span>\n        <span class=\"s1\">'range'</span><span class=\"p\">:</span> <span class=\"s1\">'max'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n</pre>\n<p>This package provides a <a href=\"https://pypi.org/project/Products.DateRangeInRangeIndex/\" rel=\"nofollow\">DateRangeInRangeIndex</a>  named <tt>edtf_start_end_range</tt>.</p>\n<p>find all documents that fall at least with one start/end date of there interval into the range:</p>\n<pre><span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span>\n    <span class=\"n\">portal_type</span><span class=\"o\">=</span><span class=\"s1\">'Document'</span><span class=\"p\">,</span>\n    <span class=\"n\">edtf_start_end_range</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'start'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">1711</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">),</span>\n        <span class=\"s1\">'end'</span><span class=\"p\">:</span>   <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">1920</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">),</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n</pre>\n<p>For more examples how to query the indexes, have a look at the <a href=\"https://github.com/collective/collective.edtf_behavior/tree/master/src/collective/edtf_behavior/tests\" rel=\"nofollow\">tests</a> .</p>\n</div>\n<div id=\"extending-it\">\n<h3>Extending it</h3>\n<p>One could improve indexing by using a DateRangeIndex, like the effectiveRange index in Plone if needed.</p>\n<pre><span class=\"c\">&lt;!-- Example of a DateRangeIndex like the effectiveRange index in Plone --&gt;</span>\n<span class=\"nt\">&lt;index</span> <span class=\"na\">name=</span><span class=\"s\">\"edtf_date_range\"</span> <span class=\"na\">meta_type=</span><span class=\"s\">\"DateRangeIndex\"</span>\n  <span class=\"na\">since_field=</span><span class=\"s\">\"date_earliest\"</span> <span class=\"na\">until_field=</span><span class=\"s\">\"date_latest\"</span> <span class=\"nt\">/&gt;</span>\n</pre>\n</div>\n<div id=\"contribute\">\n<h3>Contribute</h3>\n<ul>\n<li>Issue Tracker: <a href=\"https://github.com/collective/collective.edtf_behavior/issues\" rel=\"nofollow\">https://github.com/collective/collective.edtf_behavior/issues</a></li>\n<li>Source Code: <a href=\"https://github.com/collective/collective.edtf_behavior\" rel=\"nofollow\">https://github.com/collective/collective.edtf_behavior</a></li>\n</ul>\n</div>\n<div id=\"support\">\n<h3>Support</h3>\n<p>If you are having issues, please let us know.\nYou can reach us on Gitter.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The project is licensed under the GPLv2.</p>\n<div id=\"contributors\">\n<h4>Contributors</h4>\n<ul>\n<li>Maik Derstappen, <a href=\"mailto:md%40derico.de\">md<span>@</span>derico<span>.</span>de</a></li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h4>Changelog</h4>\n</div>\n</div>\n<div id=\"id1\">\n<h3>1.0.3 (2019-08-26)</h3>\n<ul>\n<li>Faxed test and test setup, small cleanup\n[MrTango]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.2 (2019-03-22)</h3>\n<ul>\n<li>Add edtf_parseable validator (constraint) to edtf_behavior\n[MrTango]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0.1 (2019-03-18)</h3>\n<ul>\n<li>Add absolute_import statement to all files, to improve Py3 support, fix README syntax\n[MrTango]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0 (2019-03-18)</h3>\n<ul>\n<li>Add edtf_start_end_range index and document querying in the readme.\n[MrTango]</li>\n</ul>\n</div>\n<div id=\"a1-2019-03-14\">\n<h3>1.0a1 (2019-03-14)</h3>\n<ul>\n<li>Initial release, with EDTF behavior and 4 main indexes.\n[MrTango]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5730657, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "cb9176e58e8a1245d8ae434c7a429354", "sha256": "1d36d10b2e849c36e8dfe3db24103d3b09e8ce55f8939cc6039c62d0220a27bc"}, "downloads": -1, "filename": "collective.edtf_behavior-1.0.tar.gz", "has_sig": false, "md5_digest": "cb9176e58e8a1245d8ae434c7a429354", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7, >=3.7", "size": 17021, "upload_time": "2019-03-18T15:27:08", "upload_time_iso_8601": "2019-03-18T15:27:08.241512Z", "url": "https://files.pythonhosted.org/packages/da/08/ab5e682719627364635c5d6a44431746add3271c56d31c3c91846a8903b0/collective.edtf_behavior-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a02b7b4af2d91ef9a778ed8eb8c053e5", "sha256": "8a70a338bcc97b69bd1f674c8f4e7f90961bc8436c7055feec49c44ecbbf2c87"}, "downloads": -1, "filename": "collective.edtf_behavior-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a02b7b4af2d91ef9a778ed8eb8c053e5", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7, >=3.7", "size": 17135, "upload_time": "2019-03-18T15:47:28", "upload_time_iso_8601": "2019-03-18T15:47:28.310776Z", "url": "https://files.pythonhosted.org/packages/88/75/1f33fb18b21f0f610273e6aff1c047a82734c0d2da443d7ff04943bf6db4/collective.edtf_behavior-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "fe803364f59da0744adf24a119b44c44", "sha256": "3eaf0fef9f830f2aa110535ceb02dff70e15a9c07df6d7c1b4b030e167a0bcdc"}, "downloads": -1, "filename": "collective.edtf_behavior-1.0.2.tar.gz", "has_sig": false, "md5_digest": "fe803364f59da0744adf24a119b44c44", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7, >=3.7", "size": 17392, "upload_time": "2019-03-22T17:50:57", "upload_time_iso_8601": "2019-03-22T17:50:57.839200Z", "url": "https://files.pythonhosted.org/packages/c2/4a/b8fee29eba6f6812d6280e4c6bb4175d16f73fe02f6fc8cf5ed7b631a1d3/collective.edtf_behavior-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "da28d3114e6867ccbb8d0ba9c394ae97", "sha256": "cc99feefe666c0ce353b9556227bf04d746ba6dd933ec169f35e74290395626d"}, "downloads": -1, "filename": "collective.edtf_behavior-1.0.3.tar.gz", "has_sig": false, "md5_digest": "da28d3114e6867ccbb8d0ba9c394ae97", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7, >=3.7", "size": 18017, "upload_time": "2019-08-26T12:51:30", "upload_time_iso_8601": "2019-08-26T12:51:30.890645Z", "url": "https://files.pythonhosted.org/packages/48/ba/f1fd6b1f59e396a5fd6c1adb7d44b5aff3f36aabae8681eeb5e5d0fbab96/collective.edtf_behavior-1.0.3.tar.gz", "yanked": false}], "1.0a2.dev0": [{"comment_text": "", "digests": {"md5": "495c2195b534c5b25c5612f1c01ad2d0", "sha256": "53bd0d0ae6d753daf09a3250caca6b8da4805fb05878eeb0bb1207c039d2c213"}, "downloads": -1, "filename": "collective.edtf_behavior-1.0a2.dev0.tar.gz", "has_sig": false, "md5_digest": "495c2195b534c5b25c5612f1c01ad2d0", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7", "size": 14455, "upload_time": "2019-03-14T13:31:20", "upload_time_iso_8601": "2019-03-14T13:31:20.034613Z", "url": "https://files.pythonhosted.org/packages/4c/28/566eb9fa2a3b0eb5863c3f4ac08b3960a2ee2b1e7bec92ae36763eb4ce7d/collective.edtf_behavior-1.0a2.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da28d3114e6867ccbb8d0ba9c394ae97", "sha256": "cc99feefe666c0ce353b9556227bf04d746ba6dd933ec169f35e74290395626d"}, "downloads": -1, "filename": "collective.edtf_behavior-1.0.3.tar.gz", "has_sig": false, "md5_digest": "da28d3114e6867ccbb8d0ba9c394ae97", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7, >=3.7", "size": 18017, "upload_time": "2019-08-26T12:51:30", "upload_time_iso_8601": "2019-08-26T12:51:30.890645Z", "url": "https://files.pythonhosted.org/packages/48/ba/f1fd6b1f59e396a5fd6c1adb7d44b5aff3f36aabae8681eeb5e5d0fbab96/collective.edtf_behavior-1.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:55 2020"}