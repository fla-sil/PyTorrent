{"info": {"author": "C.W.", "author_email": "wangc_2011@hotmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "================================================================================\nyehua - Let you focus on code, instead of setup scaffolding\n================================================================================\n\n.. image:: https://api.travis-ci.org/moremoban/yehua.svg\n   :target: http://travis-ci.org/moremoban/yehua\n\n.. image:: https://codecov.io/github/moremoban/yehua/coverage.png\n   :target: https://codecov.io/github/moremoban/yehua\n\n.. image:: https://badge.fury.io/py/yehua.svg\n   :target: https://pypi.org/project/yehua\n\n.. image:: https://pepy.tech/badge/yehua/month\n   :target: https://pepy.tech/project/yehua/month\n\n\n.. image:: https://readthedocs.org/projects/yehua/badge/?version=latest\n   :target: http://yehua.readthedocs.org/en/latest/\n\n.. image:: https://badges.gitter.im/chfw_yehua/Lobby.svg\n   :alt: Join the chat at https://gitter.im/chfw_yehua/Lobby\n   :target: https://gitter.im/chfw_yehua/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\nIntroduction\n================================================================================\n\n\n* Are you tired of writing up setup.py files by hand? Have you ever wondered why\n  pypi displays raw rst file for your README?\n* When you add a new library to the collection of your organization, how would\n  you make sure the static information are the same as others?\n* How would you update static information across all packages of your\n  organisation? For example, one line change in your company's profile.\n  Copy and paste? If yes, you still live in 20th century.\n\n**yehua** is an interactive command line tool to provide a default scaffolding for a python package. The name is the pinyin of the Chinese word\n\u201c\u591c\u534e\u201d, /'j\u025bhwa/. It create a blank python package that is usable and ready to push to github. And future\nupdates on your organisation's specific static information can be instantly applies the\nupdate accurately using `moban`_. Here is a list of features:\n\n#. core python package\n#. test configuration setup\n#. ready to commit github repository\n#. automated upload to pypi through twine\n#. version management through jinja2\n#. automated github release through gease\n#. permanent parent-child bond: keep your packages in synchronization with your template forever\n\nWhat's more, you can provide your own python package templates and your own\nyehua file to customize **yehua** to meet your own needs. Here are a list of\nexamples:\n\n* `pypkg-mobans in pyecharts project <https://github.com/pyecharts/pypkg-mobans>`_\n* `echarts-js-mobans in echarts-map project <https://github.com/echarts-maps/echarts-js-mobans>`_\n\n\nFeature comparision\n--------------------------------------------------------------------------------\n\nThe following table is a personal feature comparision. If you have a different\nopinion, especially you are the author of the following repository, please\nraise an issue and we can talk. This table is not a commerical sales pitch.\n\n#. Y: have such a feature\n#. M: manual operation\n#. A: automatic operation\n\n.. table:: Detailed feature comparision\n\n    ============== ========================== ======================= ===================== ========== =====\n    Group          Feature                    cookiecutter-pypackage  cookiecutter-vanguard PyScaffold yehua\n    ============== ========================== ======================= ===================== ========== =====\n    essential      setup.py                   Y                        Y                     Y         Y\n    .              setup.cfg                  Y                        Y                     Y         Y\n    .              source code stub           Y                        Y                     Y         Y\n    test setup     requirements.txt                                    Y                     Y         Y\n    .              requirements_dev.txt       Y                        Y                               Y\n    .              Makefile                   Y                                                        Y\n    .              tests code                 Y                        Y                     Y\n    .              tox                        Y                                              Y\n    .              travis                     Y                                              Y         Y\n    .              test coverage                                       Y                               Y\n    .              flake8                                                                              Y\n    documentation  README.rst                 Y                                              Y         Y\n    .              labels                                                                              Y\n    .              gitignore                  Y                                              Y         Y\n    .              AUTHORS.rst                Y                        Y                     Y\n    .              CONTRIBUTING.rst           Y                        Y\n    .              HISTORY.rst/CHANGELOG .rst Y                        Y                     Y         Y\n    .              LICENCE                    Y                        Y                     Y         Y\n    .              MANIFEST.in                Y                        Y                               Y\n    .              sphinx docs                Y                        Y                     Y         Y\n    usability      interactive shell          Y                        Y                               Y\n    .              one liner                                                                 Y\n    .              initialize github repo                                                              Y\n    maintenance    publish on pypi            A                        M                               M\n    .              dependency management      M                                              M         A\n    .              template customization                                                              Y\n    .              version management         M                                              M         A\n    .              automated github release                                                            Y\n    .              continous templating                                                                Y\n    ============== ========================== ======================= ===================== ========== =====\n\n\nComparing with cookiecutter, the difference comes in the later phase\nof the created project. **moremoban** organisation assumes\nthe life time responsibility: keep its template always\nup-to-date with its originating template, for the created project.\nWhereas, the templates of cookiecutter are disconnected once\nthe project has been created successfully. In my personal experience\n(maintaining pyexcel), I am finding that the documentation\nchanges as well. For example, someone helped to correct my spellings\nin one of my project's documentation. Via moremoban's toolset, I can\nupstream the spelling updates to pyexcel-mobans and propagate all\nthe spellings to the rest of the projects.\n\nComparing with PyScaffold, the first difference is the difference in\ncommand line interface. Yehua prefers interactivity whereas PyScaffold\nuses one liner. Why? I am influenced by yeoman, the scaffolding tool\nfor front end developers. I am convinced that conversational style\ndoes lower the entry barrier for new comers, because the question on\nthe left hand side is a self-explantory sentence so the user does\nnot need to read up the user manual. The second difference is that\nYehua has an interface layer(YEHUA_FILE) which cuts its ties with its own\nbuilt-in templates, which means you instruct yehua to make a npm package\nif your custom YEHUA_FILE instructs. That's an extreme. The third difference\nis that its own templates(I called it mobans) can be overriden/customized\nby another set of templates/mobans. For example, pyexcel project has\npyexcel-mobans, which overlays on top of pypi-mobans. pyexcel-mobans\nis more concerned of pyexcel project's documentation.\n\n\nInstallation\n================================================================================\n\n\nYou can install yehua via pip:\n\n.. code-block:: bash\n\n    $ pip install yehua\n\n\nor clone it and install it:\n\n.. code-block:: bash\n\n    $ git clone https://github.com/moremoban/yehua.git\n    $ cd yehua\n    $ python setup.py install\n\n\nFor offline usage, you need to get `pypi-mobans-pkg` installed::\n\n    $ pip install yehua[pypi-mobans]\n\n\nor::\n\n    $ pip install pypi-mobans-pkg\n\n\nUsage\n================================================================================\n\n\n\n.. image:: https://github.com/chfw/yehua/raw/master/yehua-usage.gif\n   :width: 600px\n\nPlease note, since version 0.0.2, the command line is shortened. Due to\ntime constaints, the demo video uses `yehua` still.\n\nSimply type in and you are taken care of::\n\n    $ yh\n\nIt will do these for you:\n\n#. Consult you on your project static information which can update as\n   many as you want to.\n#. Create the Python package folder structure\n#. Initialize the package as git project\n\nYou will simply need to commit it after you will have reviewed the\ngenerated files.\n\nTutorial\n-----------------\n\nLet's make a python command line utility using `yehua`. The command\nwill be `hello` and it prints `world`. You will need to issue::\n\n    $ pip install yehua\n\nbefore proceeding.\n\nStep 1 Let's launch yehua\n******************************\n|slide1|\n\nStep 2 Fill-in the meta data for your project\n***********************************************\n|slide2|\n\nAt the end, yehua generates a folder named 'hello', which contains all necessary\nfiles for\n\n#. installing it as a package\n#. testing via nose\n#. sharing it on github\n#. configuring travis via github\n\nStep 3 Inflates the meta data\n**********************************\nLet's change to 'hello' directory\n\n|slide3|\n\nAll meta data is inflated via **`moban`_ automatically**\nThe templates come from `setupmobans`_\nRun moban. It inflates the all meta data.\n\n|slide4|\n\nWhy is moban involved here? It helps reduce duplicated meta data when\nyour project grows. For example, yehua had this tutorial in README and in sphinx\ndocumentation. I wrote it in one file and moban copies it to both\nplaces. What's more, it helps further when the number of your\nproject grows. For example, `pyexcel`_ project has dozens of\nsub projects. I wrote most of the generic documentation in\n`pyexcel commons`_ and moban copies them across all sub projects.\n\nStep 4 Start coding\n*************************\nLet's write up the actual code in hello/main.py\n\n|slide5|\n\nPut in just a main() function and save it.\n\n|slide6|\n\nWhy is it enough? yehua generates a command utility python and\nit has pre-wired to invoke hello.main.main() function. You\ncan find it out in setup.py.\n\nStep 5 Install it\n*********************\nNow all is done. Let's install it\n\n|slide7|\n\nStep 6 Run it\n********************\n\nLet's run it\n\n|slide8|\n\nAll done.\n\nStep 7 push to github\n***************************\n\nSuppose you are happy with everything. Please do the following to\npush it to your github::\n\n    $ git init\n    $ git add *\n    $ git add .gitignore .moban.d/ .moban.yml .travis.yml\n    $ git commit -am \":sparkle: initial commit\"\n\nThen create your project repository in github and do these to push it out::\n\n    $ git remote add origin https://github.com/chfw/hello.git\n    $ git push origin master\n\n\nYou can find the `hello project`_ on github.\n\nStep 8 enable travis\n***************************\n\nThe generated project already has `.travis.yml` file. What you\nwill need to do is to register with travis.org if you have not\ndone so. And then go to travis and activate your project. \n\n\n.. |slide1| image:: docs/source/_static/yehua-0.png\n   :scale: 100%\n.. |slide2| image:: docs/source/_static/yehua-1.png\n   :scale: 100%\n.. |slide3| image:: docs/source/_static/yehua-2.png\n   :scale: 100%\n.. |slide4| image:: docs/source/_static/yehua-3.png\n   :scale: 100%\n.. |slide5| image:: docs/source/_static/yehua-4.png\n   :scale: 100%\n.. |slide6| image:: docs/source/_static/yehua-5.png\n   :scale: 100%\n.. |slide7| image:: docs/source/_static/yehua-6.png\n   :scale: 100%\n.. |slide8| image:: docs/source/_static/yehua-7.png\n   :scale: 100%\n.. |slide9| image:: docs/source/_static/github.png\n   :scale: 60%\n.. |slide10| image:: docs/source/_static/push2github.png\n   :scale: 60%\n\n.. _hello project: https://github.com/chfw/hello\n.. _pyexcel commons: https://github.com/pyexcel/pyexcel-commons\n.. _pyexcel: https://github.com/pyexcel\n.. _moban: https://github.com/moremoban/moban\n.. _setupmobans: https://github.com/moremoban/setupmobans\n\n\nBackground\n================================================================================\n\n\nThe original problem I was trying to solve is: I would like to place\ncommon paragraphs in the documentation of my projects in a central\nplace (pyexcel-mobans), and all projects could reference it dynamically\nso that when those common paragraphs get updated, the updates can be\neasily propagated to all relevant projects. The derived problem is:\nwhat could I do to a new project? I found myself doing a lot of\ncopy-and-paste a lot, which lead to the creation of \"yehua\". Later,\nJohn Vandenberg, an active member of coala, suggested extracting the\ngeneric sets of pyexcel-mobans to form pypi-mobans, so that\na vanilla python package can be created.\n\n\nWhy to choose \"yehua\"? Here is `the little story <https://github.com/moremoban/yehua/issues/5#issuecomment-317218010>`_ behind the choice of name. And this `music video <https://www.youtube.com/watch?v=_JFTOQ6F1-M&frags=pl%2Cwn>`_ would help bridge the cultural gap between you and me.\n\n\n\n\nLicense\n================================================================================\n\nNEW BSD License\n\nChange log\n================================================================================\n\n0.0.8 - 2020\n--------------------------------------------------------------------------------\n\n**Added**\n\n#. `#30 <https://github.com/moremoban/yehua/issues/30>`_: 'yh -h' or 'yh --help'\n   triggers help text\n#. `#32 <https://github.com/moremoban/yehua/issues/32>`_: pypi-moban-pkg as\n   installation extras\n#. enable auto github auto publishing\n#. generate mit license\n\n**Updated**\n\n#. `#35 <https://github.com/moremoban/yehua/issues/35>`_: better error message\n   when the project name has been made a directory already\n#. updated moban dependency to v0.6.0\n#. updated yaml library to ruamel.yaml. PyYAML is out because only one yaml\n   library is wanted in the organisation.\n\n0.0.7 - 6/10/2019\n--------------------------------------------------------------------------------\n\n**Updated**\n\n#. upgrade yehua to use pypi-mobans-pkg version 0.0.7\n#. generated project will have azure build pipeline, moban command stage in\n   travis and local flake8 check\n\n0.0.6 - 04/15/2019\n--------------------------------------------------------------------------------\n\n**Updated**\n\n#. upgrade yehua to use pypi-mobans-pkg version 0.0.5\n#. generated project will have four new files: pipfile, lint.sh, changelog.yml\n   and Makefile \n\n0.0.5 - 08/11/2018\n--------------------------------------------------------------------------------\n\n**added**\n\n#. `#6 <https://github.com/moremoban/yehua/issues/6>`_: provide Pipfile for\n   pipenv\n\n0.0.4 - 06/07/2018\n--------------------------------------------------------------------------------\n\n**Updated**\n\n#. `#11 <https://github.com/moremoban/yehua/issues/11>`_: keep up-to-date with\n   pypi-mobans\n\n0.0.3 - 24/02/2018\n--------------------------------------------------------------------------------\n\n**Added**\n\n#. To add all files to a git repo is being made optional. The action is\n   specified in `git-repo-files` under `post-moban` section. This particular\n   need arises when it is used to scaffold other type of projects such as npm.\n\n0.0.2 - 15/10/2017\n--------------------------------------------------------------------------------\n\n**Added**\n\n#. Automatically inflate project meta data. One yehua command and typing a few\n   questions are required before a complete project scaffolding\n#. Automatically obtain setupmobans repo for previous task.\n#. Automatically initialize package as git project and add all project files for\n   the user to commit\n\n**Removed**\n\n#. Built-in template files are off-loaded to setupmobans, which are more\n   frequently updated.\n\n0.0.1 - 02/07/2017\n--------------------------------------------------------------------------------\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/moremoban/yehua/archive/0.0.7.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/moremoban/yehua", "keywords": "python", "license": "New BSD", "maintainer": "", "maintainer_email": "", "name": "yehua", "package_url": "https://pypi.org/project/yehua/", "platform": "", "project_url": "https://pypi.org/project/yehua/", "project_urls": {"Download": "https://github.com/moremoban/yehua/archive/0.0.7.tar.gz", "Homepage": "https://github.com/moremoban/yehua"}, "release_url": "https://pypi.org/project/yehua/0.0.8/", "requires_dist": ["Jinja2", "moban (>=0.6.0)", "ruamel.yaml (>=0.15.5) ; python_version != '3.4' and python_version < '3.7'", "ruamel.yaml (<=0.15.94,>=0.15.5) ; python_version == '3.4'", "ruamel.yaml (>=0.15.42) ; python_version == '3.7'", "ruamel.yaml (>=0.15.98) ; python_version == '3.8'", "pypi-mobans-pkg (==0.0.12) ; extra == 'pypi-mobans'"], "requires_python": "", "summary": "An interactive command line tool to provide a default scaffolding fora python package.", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/moremoban/yehua\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/moremoban/yehua.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a07e9b712651821801eafd131811bc49f40f72fa/68747470733a2f2f6170692e7472617669732d63692e6f72672f6d6f72656d6f62616e2f79656875612e737667\"></a>\n<a href=\"https://codecov.io/github/moremoban/yehua\" rel=\"nofollow\"><img alt=\"https://codecov.io/github/moremoban/yehua/coverage.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83e904f985d1a18eb61416bd7148936fdb9645e0/68747470733a2f2f636f6465636f762e696f2f6769746875622f6d6f72656d6f62616e2f79656875612f636f7665726167652e706e67\"></a>\n<a href=\"https://pypi.org/project/yehua\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/yehua.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/844c6c423bf807e71a464ee9a39f7eb8170595a5/68747470733a2f2f62616467652e667572792e696f2f70792f79656875612e737667\"></a>\n<a href=\"https://pepy.tech/project/yehua/month\" rel=\"nofollow\"><img alt=\"https://pepy.tech/badge/yehua/month\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/289ab94f611cca7bf84b60312d0dd64c3327f26e/68747470733a2f2f706570792e746563682f62616467652f79656875612f6d6f6e7468\"></a>\n<a href=\"http://yehua.readthedocs.org/en/latest/\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/yehua/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/79973ec707323aba5758d32f34a2f6a0d2f0bc54/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f79656875612f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://gitter.im/chfw_yehua/Lobby?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/chfw_yehua/Lobby\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e674b5710cabb1a037ff6f991f5076aa05fa4b31/68747470733a2f2f6261646765732e6769747465722e696d2f636866775f79656875612f4c6f6262792e737667\"></a>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<ul>\n<li>Are you tired of writing up setup.py files by hand? Have you ever wondered why\npypi displays raw rst file for your README?</li>\n<li>When you add a new library to the collection of your organization, how would\nyou make sure the static information are the same as others?</li>\n<li>How would you update static information across all packages of your\norganisation? For example, one line change in your company\u2019s profile.\nCopy and paste? If yes, you still live in 20th century.</li>\n</ul>\n<p><strong>yehua</strong> is an interactive command line tool to provide a default scaffolding for a python package. The name is the pinyin of the Chinese word\n\u201c\u591c\u534e\u201d, /\u2019j\u025bhwa/. It create a blank python package that is usable and ready to push to github. And future\nupdates on your organisation\u2019s specific static information can be instantly applies the\nupdate accurately using <a href=\"https://github.com/moremoban/moban\" rel=\"nofollow\">moban</a>. Here is a list of features:</p>\n<ol>\n<li>core python package</li>\n<li>test configuration setup</li>\n<li>ready to commit github repository</li>\n<li>automated upload to pypi through twine</li>\n<li>version management through jinja2</li>\n<li>automated github release through gease</li>\n<li>permanent parent-child bond: keep your packages in synchronization with your template forever</li>\n</ol>\n<p>What\u2019s more, you can provide your own python package templates and your own\nyehua file to customize <strong>yehua</strong> to meet your own needs. Here are a list of\nexamples:</p>\n<ul>\n<li><a href=\"https://github.com/pyecharts/pypkg-mobans\" rel=\"nofollow\">pypkg-mobans in pyecharts project</a></li>\n<li><a href=\"https://github.com/echarts-maps/echarts-js-mobans\" rel=\"nofollow\">echarts-js-mobans in echarts-map project</a></li>\n</ul>\n<div id=\"feature-comparision\">\n<h3>Feature comparision</h3>\n<p>The following table is a personal feature comparision. If you have a different\nopinion, especially you are the author of the following repository, please\nraise an issue and we can talk. This table is not a commerical sales pitch.</p>\n<ol>\n<li>Y: have such a feature</li>\n<li>M: manual operation</li>\n<li>A: automatic operation</li>\n</ol>\n<table>\n<caption>Detailed feature comparision</caption>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Group</th>\n<th>Feature</th>\n<th>cookiecutter-pypackage</th>\n<th>cookiecutter-vanguard</th>\n<th>PyScaffold</th>\n<th>yehua</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>essential</td>\n<td>setup.py</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>setup.cfg</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>source code stub</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>test setup</td>\n<td>requirements.txt</td>\n<td>\u00a0</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>requirements_dev.txt</td>\n<td>Y</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>Makefile</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>tests code</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>.</td>\n<td>tox</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>Y</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>.</td>\n<td>travis</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>test coverage</td>\n<td>\u00a0</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>flake8</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>documentation</td>\n<td>README.rst</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>labels</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>gitignore</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>AUTHORS.rst</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>.</td>\n<td>CONTRIBUTING.rst</td>\n<td>Y</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>.</td>\n<td>HISTORY.rst/CHANGELOG .rst</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>LICENCE</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>MANIFEST.in</td>\n<td>Y</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>sphinx docs</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr><td>usability</td>\n<td>interactive shell</td>\n<td>Y</td>\n<td>Y</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>one liner</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Y</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>.</td>\n<td>initialize github repo</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>maintenance</td>\n<td>publish on pypi</td>\n<td>A</td>\n<td>M</td>\n<td>\u00a0</td>\n<td>M</td>\n</tr>\n<tr><td>.</td>\n<td>dependency management</td>\n<td>M</td>\n<td>\u00a0</td>\n<td>M</td>\n<td>A</td>\n</tr>\n<tr><td>.</td>\n<td>template customization</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>version management</td>\n<td>M</td>\n<td>\u00a0</td>\n<td>M</td>\n<td>A</td>\n</tr>\n<tr><td>.</td>\n<td>automated github release</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n<tr><td>.</td>\n<td>continous templating</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>Y</td>\n</tr>\n</tbody>\n</table>\n<p>Comparing with cookiecutter, the difference comes in the later phase\nof the created project. <strong>moremoban</strong> organisation assumes\nthe life time responsibility: keep its template always\nup-to-date with its originating template, for the created project.\nWhereas, the templates of cookiecutter are disconnected once\nthe project has been created successfully. In my personal experience\n(maintaining pyexcel), I am finding that the documentation\nchanges as well. For example, someone helped to correct my spellings\nin one of my project\u2019s documentation. Via moremoban\u2019s toolset, I can\nupstream the spelling updates to pyexcel-mobans and propagate all\nthe spellings to the rest of the projects.</p>\n<p>Comparing with PyScaffold, the first difference is the difference in\ncommand line interface. Yehua prefers interactivity whereas PyScaffold\nuses one liner. Why? I am influenced by yeoman, the scaffolding tool\nfor front end developers. I am convinced that conversational style\ndoes lower the entry barrier for new comers, because the question on\nthe left hand side is a self-explantory sentence so the user does\nnot need to read up the user manual. The second difference is that\nYehua has an interface layer(YEHUA_FILE) which cuts its ties with its own\nbuilt-in templates, which means you instruct yehua to make a npm package\nif your custom YEHUA_FILE instructs. That\u2019s an extreme. The third difference\nis that its own templates(I called it mobans) can be overriden/customized\nby another set of templates/mobans. For example, pyexcel project has\npyexcel-mobans, which overlays on top of pypi-mobans. pyexcel-mobans\nis more concerned of pyexcel project\u2019s documentation.</p>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install yehua via pip:</p>\n<pre>$ pip install yehua\n</pre>\n<p>or clone it and install it:</p>\n<pre>$ git clone https://github.com/moremoban/yehua.git\n$ <span class=\"nb\">cd</span> yehua\n$ python setup.py install\n</pre>\n<p>For offline usage, you need to get <cite>pypi-mobans-pkg</cite> installed:</p>\n<pre>$ pip install yehua[pypi-mobans]\n</pre>\n<p>or:</p>\n<pre>$ pip install pypi-mobans-pkg\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<img alt=\"https://github.com/chfw/yehua/raw/master/yehua-usage.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/052c3ad483bc70e82678c6fd2fe2a8ff4f6723f4/68747470733a2f2f6769746875622e636f6d2f636866772f79656875612f7261772f6d61737465722f79656875612d75736167652e676966\" width=\"600px\">\n<p>Please note, since version 0.0.2, the command line is shortened. Due to\ntime constaints, the demo video uses <cite>yehua</cite> still.</p>\n<p>Simply type in and you are taken care of:</p>\n<pre>$ yh\n</pre>\n<p>It will do these for you:</p>\n<ol>\n<li>Consult you on your project static information which can update as\nmany as you want to.</li>\n<li>Create the Python package folder structure</li>\n<li>Initialize the package as git project</li>\n</ol>\n<p>You will simply need to commit it after you will have reviewed the\ngenerated files.</p>\n<div id=\"tutorial\">\n<h3>Tutorial</h3>\n<p>Let\u2019s make a python command line utility using <cite>yehua</cite>. The command\nwill be <cite>hello</cite> and it prints <cite>world</cite>. You will need to issue:</p>\n<pre>$ pip install yehua\n</pre>\n<p>before proceeding.</p>\n<div id=\"step-1-let-s-launch-yehua\">\n<h4>Step 1 Let\u2019s launch yehua</h4>\n<p><img alt=\"slide1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03a58ab512597f3ba6bd060a61d5dfceb92e4074/646f63732f736f757263652f5f7374617469632f79656875612d302e706e67\"></p>\n</div>\n<div id=\"step-2-fill-in-the-meta-data-for-your-project\">\n<h4>Step 2 Fill-in the meta data for your project</h4>\n<p><img alt=\"slide2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73f214354eafb9b22398516f3b368ae0bda59130/646f63732f736f757263652f5f7374617469632f79656875612d312e706e67\"></p>\n<p>At the end, yehua generates a folder named \u2018hello\u2019, which contains all necessary\nfiles for</p>\n<ol>\n<li>installing it as a package</li>\n<li>testing via nose</li>\n<li>sharing it on github</li>\n<li>configuring travis via github</li>\n</ol>\n</div>\n<div id=\"step-3-inflates-the-meta-data\">\n<h4>Step 3 Inflates the meta data</h4>\n<p>Let\u2019s change to \u2018hello\u2019 directory</p>\n<p><img alt=\"slide3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/82b3af802d2903f74630704803b175aa5fb66041/646f63732f736f757263652f5f7374617469632f79656875612d322e706e67\"></p>\n<p>All meta data is inflated via <strong>`moban`_ automatically</strong>\nThe templates come from <a href=\"https://github.com/moremoban/setupmobans\" rel=\"nofollow\">setupmobans</a>\nRun moban. It inflates the all meta data.</p>\n<p><img alt=\"slide4\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0302676b79133b986ccf3c4a06d6b53e31a6f3bd/646f63732f736f757263652f5f7374617469632f79656875612d332e706e67\"></p>\n<p>Why is moban involved here? It helps reduce duplicated meta data when\nyour project grows. For example, yehua had this tutorial in README and in sphinx\ndocumentation. I wrote it in one file and moban copies it to both\nplaces. What\u2019s more, it helps further when the number of your\nproject grows. For example, <a href=\"https://github.com/pyexcel\" rel=\"nofollow\">pyexcel</a> project has dozens of\nsub projects. I wrote most of the generic documentation in\n<a href=\"https://github.com/pyexcel/pyexcel-commons\" rel=\"nofollow\">pyexcel commons</a> and moban copies them across all sub projects.</p>\n</div>\n<div id=\"step-4-start-coding\">\n<h4>Step 4 Start coding</h4>\n<p>Let\u2019s write up the actual code in hello/main.py</p>\n<p><img alt=\"slide5\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06aab6f00d20486094d11591da453ff769eec1fc/646f63732f736f757263652f5f7374617469632f79656875612d342e706e67\"></p>\n<p>Put in just a main() function and save it.</p>\n<p><img alt=\"slide6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34d8dd5cbda9db15dfb66f659740e10a8de3a346/646f63732f736f757263652f5f7374617469632f79656875612d352e706e67\"></p>\n<p>Why is it enough? yehua generates a command utility python and\nit has pre-wired to invoke hello.main.main() function. You\ncan find it out in setup.py.</p>\n</div>\n<div id=\"step-5-install-it\">\n<h4>Step 5 Install it</h4>\n<p>Now all is done. Let\u2019s install it</p>\n<p><img alt=\"slide7\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1c773936a9e85a17ec6c477cd52bf7deab675d9/646f63732f736f757263652f5f7374617469632f79656875612d362e706e67\"></p>\n</div>\n<div id=\"step-6-run-it\">\n<h4>Step 6 Run it</h4>\n<p>Let\u2019s run it</p>\n<p><img alt=\"slide8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0da54853c12b1afda740e275aa9895f7fe06bc2/646f63732f736f757263652f5f7374617469632f79656875612d372e706e67\"></p>\n<p>All done.</p>\n</div>\n<div id=\"step-7-push-to-github\">\n<h4>Step 7 push to github</h4>\n<p>Suppose you are happy with everything. Please do the following to\npush it to your github:</p>\n<pre>$ git init\n$ git add *\n$ git add .gitignore .moban.d/ .moban.yml .travis.yml\n$ git commit -am \":sparkle: initial commit\"\n</pre>\n<p>Then create your project repository in github and do these to push it out:</p>\n<pre>$ git remote add origin https://github.com/chfw/hello.git\n$ git push origin master\n</pre>\n<p>You can find the <a href=\"https://github.com/chfw/hello\" rel=\"nofollow\">hello project</a> on github.</p>\n</div>\n<div id=\"step-8-enable-travis\">\n<h4>Step 8 enable travis</h4>\n<p>The generated project already has <cite>.travis.yml</cite> file. What you\nwill need to do is to register with travis.org if you have not\ndone so. And then go to travis and activate your project.</p>\n</div>\n</div>\n</div>\n<div id=\"background\">\n<h2>Background</h2>\n<p>The original problem I was trying to solve is: I would like to place\ncommon paragraphs in the documentation of my projects in a central\nplace (pyexcel-mobans), and all projects could reference it dynamically\nso that when those common paragraphs get updated, the updates can be\neasily propagated to all relevant projects. The derived problem is:\nwhat could I do to a new project? I found myself doing a lot of\ncopy-and-paste a lot, which lead to the creation of \u201cyehua\u201d. Later,\nJohn Vandenberg, an active member of coala, suggested extracting the\ngeneric sets of pyexcel-mobans to form pypi-mobans, so that\na vanilla python package can be created.</p>\n<p>Why to choose \u201cyehua\u201d? Here is <a href=\"https://github.com/moremoban/yehua/issues/5#issuecomment-317218010\" rel=\"nofollow\">the little story</a> behind the choice of name. And this <a href=\"https://www.youtube.com/watch?v=_JFTOQ6F1-M&amp;frags=pl%2Cwn\" rel=\"nofollow\">music video</a> would help bridge the cultural gap between you and me.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>NEW BSD License</p>\n</div>\n<div id=\"change-log\">\n<h2>Change log</h2>\n<div id=\"id1\">\n<h3>0.0.8 - 2020</h3>\n<p><strong>Added</strong></p>\n<ol>\n<li><a href=\"https://github.com/moremoban/yehua/issues/30\" rel=\"nofollow\">#30</a>: \u2018yh -h\u2019 or \u2018yh \u2013help\u2019\ntriggers help text</li>\n<li><a href=\"https://github.com/moremoban/yehua/issues/32\" rel=\"nofollow\">#32</a>: pypi-moban-pkg as\ninstallation extras</li>\n<li>enable auto github auto publishing</li>\n<li>generate mit license</li>\n</ol>\n<p><strong>Updated</strong></p>\n<ol>\n<li><a href=\"https://github.com/moremoban/yehua/issues/35\" rel=\"nofollow\">#35</a>: better error message\nwhen the project name has been made a directory already</li>\n<li>updated moban dependency to v0.6.0</li>\n<li>updated yaml library to ruamel.yaml. PyYAML is out because only one yaml\nlibrary is wanted in the organisation.</li>\n</ol>\n</div>\n<div id=\"id5\">\n<h3>0.0.7 - 6/10/2019</h3>\n<p><strong>Updated</strong></p>\n<ol>\n<li>upgrade yehua to use pypi-mobans-pkg version 0.0.7</li>\n<li>generated project will have azure build pipeline, moban command stage in\ntravis and local flake8 check</li>\n</ol>\n</div>\n<div id=\"id6\">\n<h3>0.0.6 - 04/15/2019</h3>\n<p><strong>Updated</strong></p>\n<ol>\n<li>upgrade yehua to use pypi-mobans-pkg version 0.0.5</li>\n<li>generated project will have four new files: pipfile, lint.sh, changelog.yml\nand Makefile</li>\n</ol>\n</div>\n<div id=\"id7\">\n<h3>0.0.5 - 08/11/2018</h3>\n<p><strong>added</strong></p>\n<ol>\n<li><a href=\"https://github.com/moremoban/yehua/issues/6\" rel=\"nofollow\">#6</a>: provide Pipfile for\npipenv</li>\n</ol>\n</div>\n<div id=\"id9\">\n<h3>0.0.4 - 06/07/2018</h3>\n<p><strong>Updated</strong></p>\n<ol>\n<li><a href=\"https://github.com/moremoban/yehua/issues/11\" rel=\"nofollow\">#11</a>: keep up-to-date with\npypi-mobans</li>\n</ol>\n</div>\n<div id=\"id11\">\n<h3>0.0.3 - 24/02/2018</h3>\n<p><strong>Added</strong></p>\n<ol>\n<li>To add all files to a git repo is being made optional. The action is\nspecified in <cite>git-repo-files</cite> under <cite>post-moban</cite> section. This particular\nneed arises when it is used to scaffold other type of projects such as npm.</li>\n</ol>\n</div>\n<div id=\"id12\">\n<h3>0.0.2 - 15/10/2017</h3>\n<p><strong>Added</strong></p>\n<ol>\n<li>Automatically inflate project meta data. One yehua command and typing a few\nquestions are required before a complete project scaffolding</li>\n<li>Automatically obtain setupmobans repo for previous task.</li>\n<li>Automatically initialize package as git project and add all project files for\nthe user to commit</li>\n</ol>\n<p><strong>Removed</strong></p>\n<ol>\n<li>Built-in template files are off-loaded to setupmobans, which are more\nfrequently updated.</li>\n</ol>\n</div>\n<div id=\"id13\">\n<h3>0.0.1 - 02/07/2017</h3>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6455241, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e657a59b3f99c547ddfe0f18c24ab03b", "sha256": "43949b95ebcb2ac22cad5c252ffd1276ec44f89e523c41419754b5e19fb76435"}, "downloads": -1, "filename": "yehua-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e657a59b3f99c547ddfe0f18c24ab03b", "packagetype": "bdist_wheel", "python_version": "any", "requires_python": null, "size": 18050, "upload_time": "2017-07-02T19:52:50", "upload_time_iso_8601": "2017-07-02T19:52:50.599354Z", "url": "https://files.pythonhosted.org/packages/d8/7b/4a9e8c8e5b2bce1c0cfee066ccd2aed575ddb2e0c81a20aa08d5c12492b2/yehua-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c63dbfa2ccd7e4d10cec36fac2c81414", "sha256": "9c42a9ba92a94b4351776fb66c1aa37d335e175720ec8cacf68d530887b041a7"}, "downloads": -1, "filename": "yehua-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c63dbfa2ccd7e4d10cec36fac2c81414", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10976, "upload_time": "2017-07-02T19:52:35", "upload_time_iso_8601": "2017-07-02T19:52:35.207412Z", "url": "https://files.pythonhosted.org/packages/22/e3/d147c87dcb014fdb52d12c5d79e70a2baff460ecd28acb811011f0408ae9/yehua-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0da129e387ee961db83b5839fa8e3ce5", "sha256": "7cd113838ec99fb680491c42792e52bd464f7985fccd88d59fe8f279ae5358cb"}, "downloads": -1, "filename": "yehua-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0da129e387ee961db83b5839fa8e3ce5", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 20948, "upload_time": "2017-10-16T20:24:49", "upload_time_iso_8601": "2017-10-16T20:24:49.619059Z", "url": "https://files.pythonhosted.org/packages/4f/a1/ebeb8641d9415c126db10132878fc764211b5c3619f0a4a2c61adfbc4449/yehua-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d2740ac613a7cdf0e0169e39960e5d2", "sha256": "ba0d3e78818b70bd9ce9e0d6e652ca8d7fe549676d0e4a6de5f0fdc01f3e5223"}, "downloads": -1, "filename": "yehua-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1d2740ac613a7cdf0e0169e39960e5d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12426, "upload_time": "2017-10-16T20:24:47", "upload_time_iso_8601": "2017-10-16T20:24:47.060884Z", "url": "https://files.pythonhosted.org/packages/84/ff/e57ac05990013ed73750a19d70aeefd9adbcf6e4441468be8dabb8c77f2e/yehua-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "07cbaa72d0621ee12a33458431f21a65", "sha256": "94830b3bd963c6e20b2f3ef6b3c5e9b59c59820b0326fd80215a5be66dd6f67d"}, "downloads": -1, "filename": "yehua-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07cbaa72d0621ee12a33458431f21a65", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 15668, "upload_time": "2018-02-24T20:13:03", "upload_time_iso_8601": "2018-02-24T20:13:03.391379Z", "url": "https://files.pythonhosted.org/packages/ce/fd/f6bc85ddffdd260c0676e31c45f6e3f4503808556427d40cc695cc23b89f/yehua-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54678f47a5d1a79254dd719a4e551925", "sha256": "792fbb56f539dcf1c82bafaac61889e14abedf4edce81317c96c2bace40cbb09"}, "downloads": -1, "filename": "yehua-0.0.3.tar.gz", "has_sig": false, "md5_digest": "54678f47a5d1a79254dd719a4e551925", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12522, "upload_time": "2018-02-24T20:12:57", "upload_time_iso_8601": "2018-02-24T20:12:57.056520Z", "url": "https://files.pythonhosted.org/packages/86/86/f30de954bb7c0836db87ab9ad621882d8aa7a10ec5d63f8f529146d9b92c/yehua-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "e965446f35e0942471d90f14e4fab4aa", "sha256": "6ea8e947a5571559150f3943350eaf2a3ca7fdc90761d644a647a5ae5de6a372"}, "downloads": -1, "filename": "yehua-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e965446f35e0942471d90f14e4fab4aa", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 15783, "upload_time": "2018-07-06T17:31:49", "upload_time_iso_8601": "2018-07-06T17:31:49.999252Z", "url": "https://files.pythonhosted.org/packages/64/17/f48194701aea9a4c2b87ac851332e91496e414a4f031b54409714090b57e/yehua-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f3dc2fd3be1706a51fa001cdc72b92e", "sha256": "16fbcd2d35352e43129aefd15eb8a99794d01927569c2f123c7f58dafcc70a46"}, "downloads": -1, "filename": "yehua-0.0.4.tar.gz", "has_sig": false, "md5_digest": "1f3dc2fd3be1706a51fa001cdc72b92e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12656, "upload_time": "2018-07-06T17:31:48", "upload_time_iso_8601": "2018-07-06T17:31:48.094437Z", "url": "https://files.pythonhosted.org/packages/98/43/8ae61209921e98979c8b41e059a9a2b72c0565064de0cc3c365e40972a35/yehua-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "571872f5a52b92bb399e13abfff87159", "sha256": "8c492fa76e66b102423377f592c7ccb83bfb71e7ff5ce999c01423faf50f37cf"}, "downloads": -1, "filename": "yehua-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "571872f5a52b92bb399e13abfff87159", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 15092, "upload_time": "2018-11-08T18:57:36", "upload_time_iso_8601": "2018-11-08T18:57:36.936144Z", "url": "https://files.pythonhosted.org/packages/b3/cc/55439deb8221b908dac61db028e200ce12d2d0a2c1caf2a140b5ad7311eb/yehua-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f53096c157574f4be3f97c9134cde0bd", "sha256": "0c909ca65e908e4d10287e614c01a5bec8014c9e9afcb06b2f83d1dcef24907e"}, "downloads": -1, "filename": "yehua-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f53096c157574f4be3f97c9134cde0bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16748, "upload_time": "2018-11-08T18:57:32", "upload_time_iso_8601": "2018-11-08T18:57:32.888253Z", "url": "https://files.pythonhosted.org/packages/d6/10/5f1fc585fa25c573d3d4c1e293876cbcb24793143c3c1cc3d474f63b9e69/yehua-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "d62f81c0b1e0ca4d596482d092c4e0a2", "sha256": "5b4fef21a3b3ea5579d6b8fe91ed4ca1f0c7257b1fa371f0075b039e8992ccdd"}, "downloads": -1, "filename": "yehua-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d62f81c0b1e0ca4d596482d092c4e0a2", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 15114, "upload_time": "2019-05-04T21:46:15", "upload_time_iso_8601": "2019-05-04T21:46:15.467774Z", "url": "https://files.pythonhosted.org/packages/1b/18/da53910c2440bc5da217d3646a7ff7bb513f1d472cc1282cb9dc45333ff1/yehua-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75f6c17cb3ee82bb14ad79813de40e15", "sha256": "eabc4b0ac0aa1e7cb29009a08367999ab7afa8f822e2e39de9607e2d89031658"}, "downloads": -1, "filename": "yehua-0.0.6.tar.gz", "has_sig": false, "md5_digest": "75f6c17cb3ee82bb14ad79813de40e15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18145, "upload_time": "2019-05-04T21:46:13", "upload_time_iso_8601": "2019-05-04T21:46:13.406039Z", "url": "https://files.pythonhosted.org/packages/fc/6e/5af4d2db062e3dae081bc4214d6e04ce098f2d5acd3fc3096356bc13000d/yehua-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "428ff70f6a5eecc147c5635d7a315c60", "sha256": "54959acfd9212254ed0a1346a1e5796fabb531e2ef4fe822339b4ca8725567b5"}, "downloads": -1, "filename": "yehua-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "428ff70f6a5eecc147c5635d7a315c60", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 16703, "upload_time": "2019-10-06T21:37:09", "upload_time_iso_8601": "2019-10-06T21:37:09.053107Z", "url": "https://files.pythonhosted.org/packages/0e/f9/5f00bf21e4f8e7c70c8f5548b03b568a99b57783a6075ebfa8f7b9c20346/yehua-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9eeed51a66d0af9fe67975e960aa4a4", "sha256": "391fe547d7b97133f6495f6e976071b2c514e98c49445ed8c2026ba65f934f0e"}, "downloads": -1, "filename": "yehua-0.0.7.tar.gz", "has_sig": false, "md5_digest": "c9eeed51a66d0af9fe67975e960aa4a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18809, "upload_time": "2019-10-06T21:37:06", "upload_time_iso_8601": "2019-10-06T21:37:06.725325Z", "url": "https://files.pythonhosted.org/packages/59/eb/d0717db45f04ed2e185e0cb59d354b5a2e568db3f4c148ec1592b02f1ba8/yehua-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "d6ffacf7e783d803a90aef919a7815e1", "sha256": "873964360cbbf5a113986f7da1dcad7e9865e9386524110ac28df922cf06add3"}, "downloads": -1, "filename": "yehua-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d6ffacf7e783d803a90aef919a7815e1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16300, "upload_time": "2020-01-14T23:19:48", "upload_time_iso_8601": "2020-01-14T23:19:48.176262Z", "url": "https://files.pythonhosted.org/packages/79/66/9ce85bb6d98d591f106b52038a3409a19b68bc007b4809c7a982eed0524b/yehua-0.0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "023ea4e12d738543e34a08c19af385de", "sha256": "68764a173a1197a4d2e4e64efcc8a16ad9a759646cbc3b436a507e088a3337ba"}, "downloads": -1, "filename": "yehua-0.0.8.tar.gz", "has_sig": false, "md5_digest": "023ea4e12d738543e34a08c19af385de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23735, "upload_time": "2020-01-14T23:19:49", "upload_time_iso_8601": "2020-01-14T23:19:49.988247Z", "url": "https://files.pythonhosted.org/packages/5a/e5/9a9f36f51436cb65a5ce330ae32adea3707966ac5abe47ec09f658f291c0/yehua-0.0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6ffacf7e783d803a90aef919a7815e1", "sha256": "873964360cbbf5a113986f7da1dcad7e9865e9386524110ac28df922cf06add3"}, "downloads": -1, "filename": "yehua-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d6ffacf7e783d803a90aef919a7815e1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16300, "upload_time": "2020-01-14T23:19:48", "upload_time_iso_8601": "2020-01-14T23:19:48.176262Z", "url": "https://files.pythonhosted.org/packages/79/66/9ce85bb6d98d591f106b52038a3409a19b68bc007b4809c7a982eed0524b/yehua-0.0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "023ea4e12d738543e34a08c19af385de", "sha256": "68764a173a1197a4d2e4e64efcc8a16ad9a759646cbc3b436a507e088a3337ba"}, "downloads": -1, "filename": "yehua-0.0.8.tar.gz", "has_sig": false, "md5_digest": "023ea4e12d738543e34a08c19af385de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23735, "upload_time": "2020-01-14T23:19:49", "upload_time_iso_8601": "2020-01-14T23:19:49.988247Z", "url": "https://files.pythonhosted.org/packages/5a/e5/9a9f36f51436cb65a5ce330ae32adea3707966ac5abe47ec09f658f291c0/yehua-0.0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:26 2020"}