{"info": {"author": "Greenqloud", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "yamlifier\n==============\n\nCreate a yaml file from a template and automatically embed local files.\n\nCreate builds for your cloud-init / cloud-config templates with ease!\n\nThis allows you to edit files and track in source control and wrap them in yaml files when needed.\nSupports compression to minimize yaml size (perfect to squeeze into startup scripts for AWS/EC2 instances).\n\n.. image:: https://github.com/greenqloud/yamlifier/raw/master/logo.png\n    :width: 200px\n    :align: center\n    :alt: File graphic by href=\"http://www.flaticon.com/authors/freepik - made by http://logomakr.com\n\nGetting started\n---------------\n\n.. code:: bash\n\n    pip install yamlifier\n\n    cd testdata\n\n    yamlifier VARIABLE1=\"funny person\"\n\n\nCheck out the generated.yaml file in the local folder.\nUse -f to overwrite existing file and --help for more information.\n\n\nTemplate Syntax\n---------------\n\n.. code:: yaml\n\n    #cloud-config\n    #@ Comments like this will be removed from the generated file.\n    runcmd:\n      - [ /example/install.sh ]\n\n    write_files:\n      #@ 'local-content-path' will be replaced with content of local file.\n      - path: /example/install.sh\n        permissions: \"0755\"\n        owner: \"root\"\n        local-content-path: example_files/install.sh\n\n      #@ Embed binary file as an example (could be an executable)\n      - path: /example/small_logo.png\n        permissions: \"644\"\n        owner: \"root\"\n        local-content-path: example_files/small_logo.png\n\n      #@ Embed archive with multiple small files\n      #@ 'local-content-tar-path' will be replaced with an embedded archive with all files in folder.\n      - path: /example/archive.tgz\n        permissions: \"644\"\n        owner: \"root\"\n        local-content-tar-path: example_files/subfolder\n\n\nBuilding & Testing using Docker\n-------------------------------\n\nCheck out the git repository and from the yamlifier folder:\n\n.. code:: bash\n\n    docker build -t yamlifier2 -f docker/python2.Dockerfile .\n\n    docker run -it -v $PWD:/code yamlifier2 bash\n\n\nCredits\n-------\n\nBased on the excellent `ruamel.yaml`_ library that allows manipulating yaml files while preserving comments and order.\n\n.. _ruamel.yaml: https://pypi.python.org/pypi/ruamel.yaml\n\nLogo created with `logomakr.com`_ (image CC BY 3.0 license).\n\n.. _logomakr.com: http://logomakr.com\n\n\nSource code and feedback\n------------------------\n\nFully open sourced with `Apache License`_ on `github.com/greenqloud/yamlifier`_ including issue tracking.\n\n.. _Apache License: https://github.com/greenqloud/yamlifier/blob/master/LICENSE.rst\n.. _github.com/greenqloud/yamlifier: https://github.com/greenqloud/yamlifier\n\n\nBackground\n----------\nThis was created by `Greenqloud`_ when developing `Qstack`_.\n\n.. _Greenqloud: https://www.greenqloud.com/\n.. _Qstack: https://qstack.com/\n\nHope you find it useful!\n\nGreenqloud Dev Team.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/greenqloud/yamlifier", "keywords": "yaml,cloud-init,cloud-config", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "yamlifier", "package_url": "https://pypi.org/project/yamlifier/", "platform": "", "project_url": "https://pypi.org/project/yamlifier/", "project_urls": {"Homepage": "https://github.com/greenqloud/yamlifier"}, "release_url": "https://pypi.org/project/yamlifier/1.0.1/", "requires_dist": ["ruamel.yaml (==0.14.2)"], "requires_python": "", "summary": "Utility to create yaml files from a template. Perfect for cloud-config or cloud-init creation.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Create a yaml file from a template and automatically embed local files.</p>\n<p>Create builds for your cloud-init / cloud-config templates with ease!</p>\n<p>This allows you to edit files and track in source control and wrap them in yaml files when needed.\nSupports compression to minimize yaml size (perfect to squeeze into startup scripts for AWS/EC2 instances).</p>\n<img alt='File graphic by href=\"http://www.flaticon.com/authors/freepik - made by http://logomakr.com' class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0bb3d2b3798166050625ca51fd6640dd7dbcad5/68747470733a2f2f6769746875622e636f6d2f677265656e716c6f75642f79616d6c69666965722f7261772f6d61737465722f6c6f676f2e706e67\" width=\"200px\">\n<div id=\"getting-started\">\n<h2>Getting started</h2>\n<pre>pip install yamlifier\n\n<span class=\"nb\">cd</span> testdata\n\nyamlifier <span class=\"nv\">VARIABLE1</span><span class=\"o\">=</span><span class=\"s2\">\"funny person\"</span>\n</pre>\n<p>Check out the generated.yaml file in the local folder.\nUse -f to overwrite existing file and \u2013help for more information.</p>\n</div>\n<div id=\"template-syntax\">\n<h2>Template Syntax</h2>\n<pre><span class=\"c1\">#cloud-config</span>\n<span class=\"c1\">#@ Comments like this will be removed from the generated file.</span>\n<span class=\"nt\">runcmd</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"p-Indicator\">[</span> <span class=\"nv\">/example/install.sh</span> <span class=\"p-Indicator\">]</span>\n\n<span class=\"nt\">write_files</span><span class=\"p\">:</span>\n  <span class=\"c1\">#@ 'local-content-path' will be replaced with content of local file.</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/example/install.sh</span>\n    <span class=\"nt\">permissions</span><span class=\"p\">:</span> <span class=\"s\">\"0755\"</span>\n    <span class=\"nt\">owner</span><span class=\"p\">:</span> <span class=\"s\">\"root\"</span>\n    <span class=\"nt\">local-content-path</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">example_files/install.sh</span>\n\n  <span class=\"c1\">#@ Embed binary file as an example (could be an executable)</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/example/small_logo.png</span>\n    <span class=\"nt\">permissions</span><span class=\"p\">:</span> <span class=\"s\">\"644\"</span>\n    <span class=\"nt\">owner</span><span class=\"p\">:</span> <span class=\"s\">\"root\"</span>\n    <span class=\"nt\">local-content-path</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">example_files/small_logo.png</span>\n\n  <span class=\"c1\">#@ Embed archive with multiple small files</span>\n  <span class=\"c1\">#@ 'local-content-tar-path' will be replaced with an embedded archive with all files in folder.</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/example/archive.tgz</span>\n    <span class=\"nt\">permissions</span><span class=\"p\">:</span> <span class=\"s\">\"644\"</span>\n    <span class=\"nt\">owner</span><span class=\"p\">:</span> <span class=\"s\">\"root\"</span>\n    <span class=\"nt\">local-content-tar-path</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">example_files/subfolder</span>\n</pre>\n</div>\n<div id=\"building-testing-using-docker\">\n<h2>Building &amp; Testing using Docker</h2>\n<p>Check out the git repository and from the yamlifier folder:</p>\n<pre>docker build -t yamlifier2 -f docker/python2.Dockerfile .\n\ndocker run -it -v <span class=\"nv\">$PWD</span>:/code yamlifier2 bash\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Based on the excellent <a href=\"https://pypi.python.org/pypi/ruamel.yaml\" rel=\"nofollow\">ruamel.yaml</a> library that allows manipulating yaml files while preserving comments and order.</p>\n<p>Logo created with <a href=\"http://logomakr.com\" rel=\"nofollow\">logomakr.com</a> (image CC BY 3.0 license).</p>\n</div>\n<div id=\"source-code-and-feedback\">\n<h2>Source code and feedback</h2>\n<p>Fully open sourced with <a href=\"https://github.com/greenqloud/yamlifier/blob/master/LICENSE.rst\" rel=\"nofollow\">Apache License</a> on <a href=\"https://github.com/greenqloud/yamlifier\" rel=\"nofollow\">github.com/greenqloud/yamlifier</a> including issue tracking.</p>\n</div>\n<div id=\"background\">\n<h2>Background</h2>\n<p>This was created by <a href=\"https://www.greenqloud.com/\" rel=\"nofollow\">Greenqloud</a> when developing <a href=\"https://qstack.com/\" rel=\"nofollow\">Qstack</a>.</p>\n<p>Hope you find it useful!</p>\n<p>Greenqloud Dev Team.</p>\n</div>\n\n          </div>"}, "last_serial": 2731532, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "aaf33739870e499ef9b42e13211dbaff", "sha256": "4df8dea5778127bab36a3a477eac3764772321cf5d1f6843c245a3a494913ff7"}, "downloads": -1, "filename": "yamlifier-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aaf33739870e499ef9b42e13211dbaff", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6864, "upload_time": "2017-03-24T16:35:22", "upload_time_iso_8601": "2017-03-24T16:35:22.165806Z", "url": "https://files.pythonhosted.org/packages/a3/53/1f785ac082fbf1984cac9ea45511e46094be3a459b4aa434b7abc9139780/yamlifier-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3d47ecc9a083e2cae1939fd3f7b0546", "sha256": "2afc370a9a35cf98b9fc143986425adcf2b9bc16459dd9a3edc318bb46ed3ea5"}, "downloads": -1, "filename": "yamlifier-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c3d47ecc9a083e2cae1939fd3f7b0546", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5061, "upload_time": "2017-03-24T16:35:24", "upload_time_iso_8601": "2017-03-24T16:35:24.158135Z", "url": "https://files.pythonhosted.org/packages/e5/33/a218d99e5d81bd48c3f678eb144e6cb65f66d701b7f2fb77a67c8ed2f278/yamlifier-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f5d28c8e3d4bdb31108a7ce64d500bdc", "sha256": "eb5dc84613da10c4f87199581b3a40e279edca38ad2ef380d83475ca51b010e4"}, "downloads": -1, "filename": "yamlifier-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f5d28c8e3d4bdb31108a7ce64d500bdc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7371, "upload_time": "2017-03-26T11:36:28", "upload_time_iso_8601": "2017-03-26T11:36:28.984278Z", "url": "https://files.pythonhosted.org/packages/71/27/426dfe71793bd32441bc464de159dafa4bb80cfc8a1bdad51531bb8ec39a/yamlifier-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe335e17b140c644a7f1021405a10379", "sha256": "2854bf823f1d6ff625f231dcd9ae1ff075f91c4e2a4bcf75250f33f178d3e948"}, "downloads": -1, "filename": "yamlifier-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fe335e17b140c644a7f1021405a10379", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5338, "upload_time": "2017-03-26T11:36:30", "upload_time_iso_8601": "2017-03-26T11:36:30.239511Z", "url": "https://files.pythonhosted.org/packages/e9/b5/4c4ca573a227d6742eb1f3df025a3aab0089003cd2dc56508b6436d54e4b/yamlifier-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5d28c8e3d4bdb31108a7ce64d500bdc", "sha256": "eb5dc84613da10c4f87199581b3a40e279edca38ad2ef380d83475ca51b010e4"}, "downloads": -1, "filename": "yamlifier-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f5d28c8e3d4bdb31108a7ce64d500bdc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7371, "upload_time": "2017-03-26T11:36:28", "upload_time_iso_8601": "2017-03-26T11:36:28.984278Z", "url": "https://files.pythonhosted.org/packages/71/27/426dfe71793bd32441bc464de159dafa4bb80cfc8a1bdad51531bb8ec39a/yamlifier-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe335e17b140c644a7f1021405a10379", "sha256": "2854bf823f1d6ff625f231dcd9ae1ff075f91c4e2a4bcf75250f33f178d3e948"}, "downloads": -1, "filename": "yamlifier-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fe335e17b140c644a7f1021405a10379", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5338, "upload_time": "2017-03-26T11:36:30", "upload_time_iso_8601": "2017-03-26T11:36:30.239511Z", "url": "https://files.pythonhosted.org/packages/e9/b5/4c4ca573a227d6742eb1f3df025a3aab0089003cd2dc56508b6436d54e4b/yamlifier-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:19 2020"}