{"info": {"author": "James C. Palmer", "author_email": "me@jcp.io", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Names\n\n[![pypi](https://img.shields.io/pypi/v/django-names.svg)](https://pypi.org/project/django-names/)\n[![pypi](https://img.shields.io/pypi/pyversions/django-names.svg)](https://pypi.org/project/django-names/)\n[![codecov](https://codecov.io/gh/jcp/django-names/branch/master/graph/badge.svg)](https://codecov.io/gh/jcp/django-names)\n[![Build Status](https://travis-ci.org/jcp/django-names.svg?branch=master)](https://travis-ci.org/jcp/django-names)\n\nNames is a reusable app for Django that provides mixins, models and form fields\nto store a full name and its individual components. The following name\ncomponents are supported:\n\n- Full name\n- Title\n- First name\n- Middle name\n- Last name\n- Suffix\n- Nickname\n\nNames officially supports the following:\n\n* Python 3.6 - 3.7\n* Django 1.11, 2.0 - 2.2\n\n## Table of Contents\n\n* [Installation](#installation)\n* [Basic Usage](#basic-usage)\n* [Features](#features)\n  * [Name model](#name)\n  * [NameField model field](#namefield)\n  * [NameModelMixin mixin](#namemodelmixin)\n* [Settings](#settings)\n\n\n## Installation\n\nTo install, simply use [pipenv](http://pipenv.org/) (or pip):\n\n```bash\n>>> pipenv install django-names\n```\n\nAdd `names` to your `INSTALLED_APPS` setting:\n\n```python\nINSTALLED_APPS = [\n    ...\n    \"names\",\n]\n```\n\nRun migrations:\n\n```bash\n>>> python manage.py migrate names\n```\n\n## Basic Usage\n\n```bash\n>>> from names.models import Name\n>>> name = Name.objects.create(full=\"Natalia Alianovna 'Natasha' Romanova\")\n>>> name.full\n'Natalia Alianovna Romanova (Natasha)'\n>>> name.first\n'Natalia'\n>>> name.middle\n'Alianovna'\n>>> name.last\n'Romanova'\n>>> name.nickname\n'Natasha'\n```\n\n## Features\n\nNames was designed to be flexible. It comes with three primary features:\n\n- [`Name`](#name-model): A model that parses and stores full names.\n- [`NameField`](#namefield-model-field): A model field that provides a one-to-one relationship to a `Name` instance.\n- [`NameModelMixin`](#namemodelmixin-mixin): A mixin that can be used to extend existing models.\n\n### `Name` model\n\nThe `Name` model contains fields and methods that store a full name and its\nindividual components.\n\n```bash\n>>> from names.models import Name\n>>> name = Name.objects.create(full=\"Anthony Edward Stark (Tony)\")\n>>> name\n<Name: Anthony Edward Stark (Tony)>\n>>> name.full\n'Anthony Edward Stark (Tony)'\n>>> name.title\n''\n>>> name.first\n'Anthony'\n>>> name.middle\n'Edward'\n>>> name.last\n'Stark'\n>>> name.suffix\n''\n>>> name.nickname\n'Tony'\n```\n\nWhen you update an individual name component, the full name updates\nautomatically when the instance is saved.\n\n```bash\n>>> name.nickname = \"Iron Man\"\n>>> name.save()\n>>> name.full\n'Anthony Edward Stark (Iron Man)'\n```\n\n### `NameField` model field\n\n`NameField` has a one-to-one relationship to a `Name` instance.\n\n```python\nfrom names.fields import NameField\n\nclass User(models.Model):\n    name = NameField(on_delete=models.CASCADE)\n```\n\n```bash\n>>> from names.models import Name\n>>> name = Name.objects.create(full=\"Carol Susan Jane Danvers\")\n>>> User = User.objects.create(name=name)\n>>> user.name.full\n'Carol Susan Jane Danvers'\n```\n\n### `NameModelMixin` mixin\n\n`Name` inherits its functionality from the `NameModelMixin` mixin. You can\nuse this mixin to extend existing models to avoid adding a field with a\none-to-one relationship or additional database tables.\n\n```python\nfrom names.mixins import NameModelMixin\n\nclass User(NameModelMixin):\n    pass\n```\n\n```bash\n>>> user = User.objects.create(full=\"General Nicholas Joseph 'Nick' Fury\")\n>>> user.full\n'General Nicholas Joseph Fury (Nick)'\n>>> user.title\n'General'\n```\n\n## Settings\n\nNames uses the `NAME_SETTINGS` namespace for all settings. The following settings\nare supported:\n\n* [MAX_LENGTH](#max_length)\n* [STRING_FORMAT](#string_format)\n* [EMPTY_ATTRIBUTE_DEFAULT](#empty_attribute_default)\n* [OPTIONS](#options)\n  * TITLES\n  * FIRST_NAME_TITLES\n  * SUFFIX_ACRONYMS\n  * SUFFIX_NOT_ACRONYMS\n  * CONJUNCTIONS\n  * PREFIXES\n  * CAPITALIZATION_EXCEPTIONS\n  * REGEXES\n\n### MAX_LENGTH\n\n`type <int>`\n\nMax length of each `CharField` defined in the `NameModelMixin` mixin.\n\nDefault:\n```python\n100\n```\n\n### STRING_FORMAT\n\n`type <str>`\n\nSets the output string for the `full` field.\n\n**Default**\n```python\n\"{title} {first} {middle} {last} {suffix} ({nickname})\"\n```\n\n> **Learn more**\n>\n> [Change the output string with string formatting](https://nameparser.readthedocs.io/en/latest/usage.html#change-the-output-string-with-string-formatting)\n\n### EMPTY_ATTRIBUTE_DEFAULT\n\n`type <str>`\n\nValue returned by empty name attributes.\n\n**Default**\n```python\n\"\"  # empty string\n```\n\n### OPTIONS\n\n`type <dict>`\n\nHandles recognition of titles, prefixes, suffixes and conjunctions. The `OPTIONS` setting is\nvery powerful and can be used to customize how you parse names.\n\n**Default**\n```python\n\"OPTIONS\": {\n   \"TITLES\": TITLES,\n   \"SUFFIX_NOT_ACRONYMS\": SUFFIX_NOT_ACRONYMS,\n   \"CONJUNCTIONS\": CONJUNCTIONS,\n   \"PREFIXES\": PREFIXES,\n   \"CAPITALIZATION_EXCEPTIONS\": CAPITALIZATION_EXCEPTIONS,\n   \"REGEXES\": REGEXES,\n}\n```\n\n*Options are imported from [`python-nameparser`](https://github.com/derek73/python-nameparser), which is the library used to parse names.*\n\n> **Learn more**\n>\n> [Editable attributes](https://nameparser.readthedocs.io/en/latest/customize.html#editable-attributes-of-nameparser-config-constants)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jcp/django-names", "keywords": "", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "django-names", "package_url": "https://pypi.org/project/django-names/", "platform": "", "project_url": "https://pypi.org/project/django-names/", "project_urls": {"Homepage": "https://github.com/jcp/django-names"}, "release_url": "https://pypi.org/project/django-names/1.0.5/", "requires_dist": ["Django (>=1.11)", "nameparser (>=1.0.4)"], "requires_python": ">=3.6", "summary": "Names is a reusable app for Django that provides mixins, models and form fields to store a full name and its individual components.", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Names</h1>\n<p><a href=\"https://pypi.org/project/django-names/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7024feb69f6aab793bad4eb09ee34984e342679/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d6e616d65732e737667\"></a>\n<a href=\"https://pypi.org/project/django-names/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/159f6e9c3d6c1f56b07f412ef2dc712387e60181/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d6e616d65732e737667\"></a>\n<a href=\"https://codecov.io/gh/jcp/django-names\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/12e70fdb80c527504bde62d15218f878c07132bc/68747470733a2f2f636f6465636f762e696f2f67682f6a63702f646a616e676f2d6e616d65732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://travis-ci.org/jcp/django-names\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a90d9fac354e4a9ea30374fdd4db97d213f91617/68747470733a2f2f7472617669732d63692e6f72672f6a63702f646a616e676f2d6e616d65732e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Names is a reusable app for Django that provides mixins, models and form fields\nto store a full name and its individual components. The following name\ncomponents are supported:</p>\n<ul>\n<li>Full name</li>\n<li>Title</li>\n<li>First name</li>\n<li>Middle name</li>\n<li>Last name</li>\n<li>Suffix</li>\n<li>Nickname</li>\n</ul>\n<p>Names officially supports the following:</p>\n<ul>\n<li>Python 3.6 - 3.7</li>\n<li>Django 1.11, 2.0 - 2.2</li>\n</ul>\n<h2>Table of Contents</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#basic-usage\" rel=\"nofollow\">Basic Usage</a></li>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a>\n<ul>\n<li><a href=\"#name\" rel=\"nofollow\">Name model</a></li>\n<li><a href=\"#namefield\" rel=\"nofollow\">NameField model field</a></li>\n<li><a href=\"#namemodelmixin\" rel=\"nofollow\">NameModelMixin mixin</a></li>\n</ul>\n</li>\n<li><a href=\"#settings\" rel=\"nofollow\">Settings</a></li>\n</ul>\n<h2>Installation</h2>\n<p>To install, simply use <a href=\"http://pipenv.org/\" rel=\"nofollow\">pipenv</a> (or pip):</p>\n<pre>&gt;&gt;&gt; pipenv install django-names\n</pre>\n<p>Add <code>names</code> to your <code>INSTALLED_APPS</code> setting:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s2\">\"names\"</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Run migrations:</p>\n<pre>&gt;&gt;&gt; python manage.py migrate names\n</pre>\n<h2>Basic Usage</h2>\n<pre>&gt;&gt;&gt; from names.models import Name\n&gt;&gt;&gt; <span class=\"nv\">name</span> <span class=\"o\">=</span> Name.objects.create<span class=\"o\">(</span><span class=\"nv\">full</span><span class=\"o\">=</span><span class=\"s2\">\"Natalia Alianovna 'Natasha' Romanova\"</span><span class=\"o\">)</span>\n&gt;&gt;&gt; name.full\n<span class=\"s1\">'Natalia Alianovna Romanova (Natasha)'</span>\n&gt;&gt;&gt; name.first\n<span class=\"s1\">'Natalia'</span>\n&gt;&gt;&gt; name.middle\n<span class=\"s1\">'Alianovna'</span>\n&gt;&gt;&gt; name.last\n<span class=\"s1\">'Romanova'</span>\n&gt;&gt;&gt; name.nickname\n<span class=\"s1\">'Natasha'</span>\n</pre>\n<h2>Features</h2>\n<p>Names was designed to be flexible. It comes with three primary features:</p>\n<ul>\n<li><a href=\"#name-model\" rel=\"nofollow\"><code>Name</code></a>: A model that parses and stores full names.</li>\n<li><a href=\"#namefield-model-field\" rel=\"nofollow\"><code>NameField</code></a>: A model field that provides a one-to-one relationship to a <code>Name</code> instance.</li>\n<li><a href=\"#namemodelmixin-mixin\" rel=\"nofollow\"><code>NameModelMixin</code></a>: A mixin that can be used to extend existing models.</li>\n</ul>\n<h3><code>Name</code> model</h3>\n<p>The <code>Name</code> model contains fields and methods that store a full name and its\nindividual components.</p>\n<pre>&gt;&gt;&gt; from names.models import Name\n&gt;&gt;&gt; <span class=\"nv\">name</span> <span class=\"o\">=</span> Name.objects.create<span class=\"o\">(</span><span class=\"nv\">full</span><span class=\"o\">=</span><span class=\"s2\">\"Anthony Edward Stark (Tony)\"</span><span class=\"o\">)</span>\n&gt;&gt;&gt; name\n&lt;Name: Anthony Edward Stark <span class=\"o\">(</span>Tony<span class=\"o\">)</span>&gt;\n&gt;&gt;&gt; name.full\n<span class=\"s1\">'Anthony Edward Stark (Tony)'</span>\n&gt;&gt;&gt; name.title\n<span class=\"s1\">''</span>\n&gt;&gt;&gt; name.first\n<span class=\"s1\">'Anthony'</span>\n&gt;&gt;&gt; name.middle\n<span class=\"s1\">'Edward'</span>\n&gt;&gt;&gt; name.last\n<span class=\"s1\">'Stark'</span>\n&gt;&gt;&gt; name.suffix\n<span class=\"s1\">''</span>\n&gt;&gt;&gt; name.nickname\n<span class=\"s1\">'Tony'</span>\n</pre>\n<p>When you update an individual name component, the full name updates\nautomatically when the instance is saved.</p>\n<pre>&gt;&gt;&gt; name.nickname <span class=\"o\">=</span> <span class=\"s2\">\"Iron Man\"</span>\n&gt;&gt;&gt; name.save<span class=\"o\">()</span>\n&gt;&gt;&gt; name.full\n<span class=\"s1\">'Anthony Edward Stark (Iron Man)'</span>\n</pre>\n<h3><code>NameField</code> model field</h3>\n<p><code>NameField</code> has a one-to-one relationship to a <code>Name</code> instance.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">names.fields</span> <span class=\"kn\">import</span> <span class=\"n\">NameField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">NameField</span><span class=\"p\">(</span><span class=\"n\">on_delete</span><span class=\"o\">=</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CASCADE</span><span class=\"p\">)</span>\n</pre>\n<pre>&gt;&gt;&gt; from names.models import Name\n&gt;&gt;&gt; <span class=\"nv\">name</span> <span class=\"o\">=</span> Name.objects.create<span class=\"o\">(</span><span class=\"nv\">full</span><span class=\"o\">=</span><span class=\"s2\">\"Carol Susan Jane Danvers\"</span><span class=\"o\">)</span>\n&gt;&gt;&gt; <span class=\"nv\">User</span> <span class=\"o\">=</span> User.objects.create<span class=\"o\">(</span><span class=\"nv\">name</span><span class=\"o\">=</span>name<span class=\"o\">)</span>\n&gt;&gt;&gt; user.name.full\n<span class=\"s1\">'Carol Susan Jane Danvers'</span>\n</pre>\n<h3><code>NameModelMixin</code> mixin</h3>\n<p><code>Name</code> inherits its functionality from the <code>NameModelMixin</code> mixin. You can\nuse this mixin to extend existing models to avoid adding a field with a\none-to-one relationship or additional database tables.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">names.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">NameModelMixin</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">NameModelMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<pre>&gt;&gt;&gt; <span class=\"nv\">user</span> <span class=\"o\">=</span> User.objects.create<span class=\"o\">(</span><span class=\"nv\">full</span><span class=\"o\">=</span><span class=\"s2\">\"General Nicholas Joseph 'Nick' Fury\"</span><span class=\"o\">)</span>\n&gt;&gt;&gt; user.full\n<span class=\"s1\">'General Nicholas Joseph Fury (Nick)'</span>\n&gt;&gt;&gt; user.title\n<span class=\"s1\">'General'</span>\n</pre>\n<h2>Settings</h2>\n<p>Names uses the <code>NAME_SETTINGS</code> namespace for all settings. The following settings\nare supported:</p>\n<ul>\n<li><a href=\"#max_length\" rel=\"nofollow\">MAX_LENGTH</a></li>\n<li><a href=\"#string_format\" rel=\"nofollow\">STRING_FORMAT</a></li>\n<li><a href=\"#empty_attribute_default\" rel=\"nofollow\">EMPTY_ATTRIBUTE_DEFAULT</a></li>\n<li><a href=\"#options\" rel=\"nofollow\">OPTIONS</a>\n<ul>\n<li>TITLES</li>\n<li>FIRST_NAME_TITLES</li>\n<li>SUFFIX_ACRONYMS</li>\n<li>SUFFIX_NOT_ACRONYMS</li>\n<li>CONJUNCTIONS</li>\n<li>PREFIXES</li>\n<li>CAPITALIZATION_EXCEPTIONS</li>\n<li>REGEXES</li>\n</ul>\n</li>\n</ul>\n<h3>MAX_LENGTH</h3>\n<p><code>type &lt;int&gt;</code></p>\n<p>Max length of each <code>CharField</code> defined in the <code>NameModelMixin</code> mixin.</p>\n<p>Default:</p>\n<pre><span class=\"mi\">100</span>\n</pre>\n<h3>STRING_FORMAT</h3>\n<p><code>type &lt;str&gt;</code></p>\n<p>Sets the output string for the <code>full</code> field.</p>\n<p><strong>Default</strong></p>\n<pre><span class=\"s2\">\"</span><span class=\"si\">{title}</span><span class=\"s2\"> </span><span class=\"si\">{first}</span><span class=\"s2\"> </span><span class=\"si\">{middle}</span><span class=\"s2\"> </span><span class=\"si\">{last}</span><span class=\"s2\"> </span><span class=\"si\">{suffix}</span><span class=\"s2\"> (</span><span class=\"si\">{nickname}</span><span class=\"s2\">)\"</span>\n</pre>\n<blockquote>\n<p><strong>Learn more</strong></p>\n<p><a href=\"https://nameparser.readthedocs.io/en/latest/usage.html#change-the-output-string-with-string-formatting\" rel=\"nofollow\">Change the output string with string formatting</a></p>\n</blockquote>\n<h3>EMPTY_ATTRIBUTE_DEFAULT</h3>\n<p><code>type &lt;str&gt;</code></p>\n<p>Value returned by empty name attributes.</p>\n<p><strong>Default</strong></p>\n<pre><span class=\"s2\">\"\"</span>  <span class=\"c1\"># empty string</span>\n</pre>\n<h3>OPTIONS</h3>\n<p><code>type &lt;dict&gt;</code></p>\n<p>Handles recognition of titles, prefixes, suffixes and conjunctions. The <code>OPTIONS</code> setting is\nvery powerful and can be used to customize how you parse names.</p>\n<p><strong>Default</strong></p>\n<pre><span class=\"s2\">\"OPTIONS\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n   <span class=\"s2\">\"TITLES\"</span><span class=\"p\">:</span> <span class=\"n\">TITLES</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"SUFFIX_NOT_ACRONYMS\"</span><span class=\"p\">:</span> <span class=\"n\">SUFFIX_NOT_ACRONYMS</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"CONJUNCTIONS\"</span><span class=\"p\">:</span> <span class=\"n\">CONJUNCTIONS</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"PREFIXES\"</span><span class=\"p\">:</span> <span class=\"n\">PREFIXES</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"CAPITALIZATION_EXCEPTIONS\"</span><span class=\"p\">:</span> <span class=\"n\">CAPITALIZATION_EXCEPTIONS</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"REGEXES\"</span><span class=\"p\">:</span> <span class=\"n\">REGEXES</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n<p><em>Options are imported from <a href=\"https://github.com/derek73/python-nameparser\" rel=\"nofollow\"><code>python-nameparser</code></a>, which is the library used to parse names.</em></p>\n<blockquote>\n<p><strong>Learn more</strong></p>\n<p><a href=\"https://nameparser.readthedocs.io/en/latest/customize.html#editable-attributes-of-nameparser-config-constants\" rel=\"nofollow\">Editable attributes</a></p>\n</blockquote>\n\n          </div>"}, "last_serial": 5706018, "releases": {"1.0.3": [{"comment_text": "", "digests": {"md5": "43f02a3aeadb77a8213131438c6c913f", "sha256": "3b231b32aa273ff153dd642026bb79000aa58730660fad201fc82ead3727efd9"}, "downloads": -1, "filename": "django-names-1.0.3.tar.gz", "has_sig": false, "md5_digest": "43f02a3aeadb77a8213131438c6c913f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16665, "upload_time": "2019-07-22T00:37:20", "upload_time_iso_8601": "2019-07-22T00:37:20.488839Z", "url": "https://files.pythonhosted.org/packages/29/79/2f1011a0f4cc6b526c20a1b8cb866b0f329c579f262e8e0b40f4b99de2ce/django-names-1.0.3.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "93d5808395b35f7428a74365844c6792", "sha256": "9c3f39a97115154b2474cf696c7d69d1361a93046cc0298d76c66178052ac504"}, "downloads": -1, "filename": "django_names-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "93d5808395b35f7428a74365844c6792", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9278, "upload_time": "2019-08-20T22:46:23", "upload_time_iso_8601": "2019-08-20T22:46:23.261587Z", "url": "https://files.pythonhosted.org/packages/65/d6/f51c8c91762b3159be62e15e9081e9fa5fd257135f7e73de609e7ff4c337/django_names-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a7a8eb71d264436ce806125ddc0e057", "sha256": "60a0161d42c05559c8bcb0495288577d6a87b9aa1f51a0bfb8b2b24935e6d52b"}, "downloads": -1, "filename": "django-names-1.0.5.tar.gz", "has_sig": false, "md5_digest": "0a7a8eb71d264436ce806125ddc0e057", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15784, "upload_time": "2019-08-20T22:46:24", "upload_time_iso_8601": "2019-08-20T22:46:24.870925Z", "url": "https://files.pythonhosted.org/packages/03/bf/ca5dd7e53a6385020c70fdad3895f6796d96261074e60b9ab4ac5a870ade/django-names-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "93d5808395b35f7428a74365844c6792", "sha256": "9c3f39a97115154b2474cf696c7d69d1361a93046cc0298d76c66178052ac504"}, "downloads": -1, "filename": "django_names-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "93d5808395b35f7428a74365844c6792", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9278, "upload_time": "2019-08-20T22:46:23", "upload_time_iso_8601": "2019-08-20T22:46:23.261587Z", "url": "https://files.pythonhosted.org/packages/65/d6/f51c8c91762b3159be62e15e9081e9fa5fd257135f7e73de609e7ff4c337/django_names-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a7a8eb71d264436ce806125ddc0e057", "sha256": "60a0161d42c05559c8bcb0495288577d6a87b9aa1f51a0bfb8b2b24935e6d52b"}, "downloads": -1, "filename": "django-names-1.0.5.tar.gz", "has_sig": false, "md5_digest": "0a7a8eb71d264436ce806125ddc0e057", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 15784, "upload_time": "2019-08-20T22:46:24", "upload_time_iso_8601": "2019-08-20T22:46:24.870925Z", "url": "https://files.pythonhosted.org/packages/03/bf/ca5dd7e53a6385020c70fdad3895f6796d96261074e60b9ab4ac5a870ade/django-names-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:45 2020"}