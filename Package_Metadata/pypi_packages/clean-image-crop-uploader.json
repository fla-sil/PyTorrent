{"info": {"author": "Alfredo Saglimbeni", "author_email": "alfredo.saglimbeni@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "clean-image-crop-uploader (CICU)\r\n================================\r\n\r\n``clean-image-crop-uploader`` is a django widget to upload an image via Ajax and crop it using `Jcrop\r\n<https://github.com/tapmodo/Jcrop>`_. It provides a simple workflow: first one, using modal,\r\n(by `twitter bootstrap <http://twitter.github.com/bootstrap/javascript.html#modals>`_) the image can be uploaded and croped.\r\nSecond one, you can see the image cropping preview in the form and finally submit the result.\r\n\r\n``clean-image-crop-uploader`` is perfect when you use an ImageField on your model where is necessary to have a specific portion of image. It's easy to configure and to use.\r\nYou can use different configurations , with fixed aspect ratio or minimal image size.\r\n\r\nIt works with jQuery = 1.8.3 and twitter bootstrap.\r\n\r\nScreenshot:\r\n\r\n#. Modal window with upload button:\r\n\r\n.. image:: http://asaglimbeni.github.com/clean-image-crop-uploader/images/screenshot1.jpg\r\n\r\n#. Modal window with crop area:\r\n\r\n.. image:: http://asaglimbeni.github.com/clean-image-crop-uploader/images/screenshot2.jpg\r\n\r\n#. Form with preview\r\n\r\n.. image:: http://asaglimbeni.github.com/clean-image-crop-uploader/images/screenshot3.jpg\r\n\r\nInstallation\r\n------------\r\n\r\n#. Install django-image-cropping using pip. For example::\r\n\r\n    pip install clean-image-crop-uploader\r\n\r\n#. Add ``south`` and ``cicu`` to your INSTALLED_APPS.\r\n\r\n#. run migrate commando to your django project::\r\n\r\n\r\n    python manage.py migrate\r\n\r\nDependencies\r\n------------\r\n* jQuery = 1.8.3\r\n* Twitter-Bootstrap\r\n\r\nConfiguration\r\n-------------\r\n#. Add into url.py ::\r\n\r\n    (r'^ajax-upload/', include('startproject.cicu.urls'))\r\n\r\n#. Create your model-form and set  CicuUploaderInput widget to your imageField  ::\r\n\r\n    from cicu.widgets import CicuUploderInput\r\n\r\n    class yourCrop(forms.ModelForm):\r\n        class Meta:\r\n            model = yourModel\r\n            cicuOptions = {\r\n                'ratioWidth': '600',       #fix-width ratio, default 0\r\n                'ratioHeight':'400',       #fix-height ratio , default 0\r\n                'sizeWarning': 'False',    #if True the crop selection have to respect minimal ratio size defined above. Default 'False'\r\n            }\r\n            widgets = {\r\n                'image': CicuUploderInput(options=cicuOptions)\r\n            }\r\n\r\n#. Download `twitter bootstrap <http://twitter.github.com/bootstrap/>`_  to your static file folder.\r\n\r\n#. Add in your form template links to jquery, bootstrap, form.media::\r\n\r\n    <head>\r\n    ....\r\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"></script>\r\n        <link href=\"{{ STATIC_URL }}css/bootstrap.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n        <script src=\"{{ STATIC_URL }}js/bootstrap.js\"></script>\r\n        {{ form.media }}\r\n\r\n    ....\r\n    </head>\r\n\r\n\r\nRun the example\r\n---------------\r\nThe Example is available only in github repository: https://github.com/asaglimbeni/clean-image-crop-uploader/tree/master/example\r\n\r\nTo run the example inside this package follow these commands::\r\n\r\n    > cd ./example/\r\n    > python manage.py syncdb\r\n    > python manage.py migrate # only if you use South!!!\r\n    > python manage.py collectstatic\r\n    > python manage.py runserver domain:8000\r\n\r\nGo to examples :\r\n\r\n#. Free crop : <http://domain:8000/cicu-freecrop/>\r\n\r\n#. Fixed aspect ratio: <http://domain:8000/cicu-fixedratio/>\r\n\r\n#. Fixed aspect ratio with minimal size: <http://domain:8000/cicu-warningsize/>", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/asaglimbeni/clean-image-crop-uploader/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://asaglimbeni.github.com/clean-image-crop-uploader/", "keywords": "django, image, crop, upload, ImageField", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "clean-image-crop-uploader", "package_url": "https://pypi.org/project/clean-image-crop-uploader/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/clean-image-crop-uploader/", "project_urls": {"Download": "https://github.com/asaglimbeni/clean-image-crop-uploader/archive/master.zip", "Homepage": "http://asaglimbeni.github.com/clean-image-crop-uploader/"}, "release_url": "https://pypi.org/project/clean-image-crop-uploader/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Clean Image Crop Uploader (CICU) provides AJAX file upload and image CROP functionalities for ImageFields with a simple widget replacement in the form. It use Modal from twitter-bootstrap.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            clean-image-crop-uploader (CICU)\n<br>================================\n<br>\n<br>``clean-image-crop-uploader`` is a django widget to upload an image via Ajax and crop it using `Jcrop\n<br>&lt;https://github.com/tapmodo/Jcrop&gt;`_. It provides a simple workflow: first one, using modal,\n<br>(by `twitter bootstrap &lt;http://twitter.github.com/bootstrap/javascript.html#modals&gt;`_) the image can be uploaded and croped.\n<br>Second one, you can see the image cropping preview in the form and finally submit the result.\n<br>\n<br>``clean-image-crop-uploader`` is perfect when you use an ImageField on your model where is necessary to have a specific portion of image. It's easy to configure and to use.\n<br>You can use different configurations , with fixed aspect ratio or minimal image size.\n<br>\n<br>It works with jQuery = 1.8.3 and twitter bootstrap.\n<br>\n<br>Screenshot:\n<br>\n<br>#. Modal window with upload button:\n<br>\n<br>.. image:: http://asaglimbeni.github.com/clean-image-crop-uploader/images/screenshot1.jpg\n<br>\n<br>#. Modal window with crop area:\n<br>\n<br>.. image:: http://asaglimbeni.github.com/clean-image-crop-uploader/images/screenshot2.jpg\n<br>\n<br>#. Form with preview\n<br>\n<br>.. image:: http://asaglimbeni.github.com/clean-image-crop-uploader/images/screenshot3.jpg\n<br>\n<br>Installation\n<br>------------\n<br>\n<br>#. Install django-image-cropping using pip. For example::\n<br>\n<br>    pip install clean-image-crop-uploader\n<br>\n<br>#. Add ``south`` and ``cicu`` to your INSTALLED_APPS.\n<br>\n<br>#. run migrate commando to your django project::\n<br>\n<br>\n<br>    python manage.py migrate\n<br>\n<br>Dependencies\n<br>------------\n<br>* jQuery = 1.8.3\n<br>* Twitter-Bootstrap\n<br>\n<br>Configuration\n<br>-------------\n<br>#. Add into url.py ::\n<br>\n<br>    (r'^ajax-upload/', include('startproject.cicu.urls'))\n<br>\n<br>#. Create your model-form and set  CicuUploaderInput widget to your imageField  ::\n<br>\n<br>    from cicu.widgets import CicuUploderInput\n<br>\n<br>    class yourCrop(forms.ModelForm):\n<br>        class Meta:\n<br>            model = yourModel\n<br>            cicuOptions = {\n<br>                'ratioWidth': '600',       #fix-width ratio, default 0\n<br>                'ratioHeight':'400',       #fix-height ratio , default 0\n<br>                'sizeWarning': 'False',    #if True the crop selection have to respect minimal ratio size defined above. Default 'False'\n<br>            }\n<br>            widgets = {\n<br>                'image': CicuUploderInput(options=cicuOptions)\n<br>            }\n<br>\n<br>#. Download `twitter bootstrap &lt;http://twitter.github.com/bootstrap/&gt;`_  to your static file folder.\n<br>\n<br>#. Add in your form template links to jquery, bootstrap, form.media::\n<br>\n<br>    &lt;head&gt;\n<br>    ....\n<br>        &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"&gt;&lt;/script&gt;\n<br>        &lt;link href=\"{{ STATIC_URL }}css/bootstrap.css\" rel=\"stylesheet\" type=\"text/css\"/&gt;\n<br>        &lt;script src=\"{{ STATIC_URL }}js/bootstrap.js\"&gt;&lt;/script&gt;\n<br>        {{ form.media }}\n<br>\n<br>    ....\n<br>    &lt;/head&gt;\n<br>\n<br>\n<br>Run the example\n<br>---------------\n<br>The Example is available only in github repository: https://github.com/asaglimbeni/clean-image-crop-uploader/tree/master/example\n<br>\n<br>To run the example inside this package follow these commands::\n<br>\n<br>    &gt; cd ./example/\n<br>    &gt; python manage.py syncdb\n<br>    &gt; python manage.py migrate # only if you use South!!!\n<br>    &gt; python manage.py collectstatic\n<br>    &gt; python manage.py runserver domain:8000\n<br>\n<br>Go to examples :\n<br>\n<br>#. Free crop : &lt;http://domain:8000/cicu-freecrop/&gt;\n<br>\n<br>#. Fixed aspect ratio: &lt;http://domain:8000/cicu-fixedratio/&gt;\n<br>\n<br>#. Fixed aspect ratio with minimal size: &lt;http://domain:8000/cicu-warningsize/&gt;\n          </div>"}, "last_serial": 787447, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "1b33a2771a040c7ae5ae9a8600461425", "sha256": "f7bfdd0af4297a9435d9b9662dc798f08c4a7d13e1c01059c07bc2cd77623c83"}, "downloads": -1, "filename": "clean-image-crop-uploader-0.2.1.tar.gz", "has_sig": false, "md5_digest": "1b33a2771a040c7ae5ae9a8600461425", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32604, "upload_time": "2013-02-27T21:15:45", "upload_time_iso_8601": "2013-02-27T21:15:45.950404Z", "url": "https://files.pythonhosted.org/packages/28/c5/2d088ef4ec60f83fbe59917c80a84f6114a4e55d8e3d36842213803eab54/clean-image-crop-uploader-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f1c7401b943fbae11bfa096f24c0f684", "sha256": "c713b8534acb46018ec19e6eae5fb67d2c981e8018f016cbcc7658383996765f"}, "downloads": -1, "filename": "clean-image-crop-uploader-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f1c7401b943fbae11bfa096f24c0f684", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32740, "upload_time": "2013-03-08T13:45:41", "upload_time_iso_8601": "2013-03-08T13:45:41.928471Z", "url": "https://files.pythonhosted.org/packages/66/4c/0fb2ec5245a5523e361411fa6435faa16c3d538007e3ff66f30d2b795588/clean-image-crop-uploader-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f1c7401b943fbae11bfa096f24c0f684", "sha256": "c713b8534acb46018ec19e6eae5fb67d2c981e8018f016cbcc7658383996765f"}, "downloads": -1, "filename": "clean-image-crop-uploader-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f1c7401b943fbae11bfa096f24c0f684", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32740, "upload_time": "2013-03-08T13:45:41", "upload_time_iso_8601": "2013-03-08T13:45:41.928471Z", "url": "https://files.pythonhosted.org/packages/66/4c/0fb2ec5245a5523e361411fa6435faa16c3d538007e3ff66f30d2b795588/clean-image-crop-uploader-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:06 2020"}