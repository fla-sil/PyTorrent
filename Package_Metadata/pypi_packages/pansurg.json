{"info": {"author": "Maxwell Flitton", "author_email": "maxwellflitton@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Build Tools"], "description": "# Pansurg\nOpen source pip module that enables the user to access coronavirus resources. \n\n## Installation \n\n```\npip install pansurg \n```\n\n# Papers \nAll coronavirus papers from the Alan institute can be streamed using the ```Papers``` object which \nitself is a list. To get the papers run the following code\"\n\n```python\nfrom pansurg import Papers\n\n\npapers = Papers()\n\nfor paper in papers:\n    # do something \n```\n\nInitially, the papers are directly streamed from the Alan institute so this initializing the \n```Papers``` object might take a while. Once the first initialization is done, the papers are \nthen saved onto your computer and are accessed locally from there onwards. This still takes \nsome time to load as of the time of reading this there's over 2500 papers, but it's a lot \nshorter than directly streaming them from the Alan institute every time. The Alan institute \nupdates the papers every friday, so it's advised that you refresh the cache once a week to \nget the latest papers. This can be done by setting the ```force_refresh``` parameter to ```True```:\n\n```python\nfrom pansurg import Papers\n\n\npapers = Papers(force_refresh=True)\n```\n\n## Paper \nRight now the paper isn't it's own object but a dict which contains the following:\n\n- ```paper_id```: the id of the paper\n- ```metadata```: contains data about the paper such as the journal title, dates, and authors \n- ```abstract```: abstract of the paper \n- ```body_text```: text of the paper \n- ```bib_entries```: bibliography\n- ```ref_entries```: references\n- ```back_matter```: more meta data like funding, conflict of interest statements etc", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maxwellflitton/pansurg", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pansurg", "package_url": "https://pypi.org/project/pansurg/", "platform": "", "project_url": "https://pypi.org/project/pansurg/", "project_urls": {"Homepage": "https://github.com/maxwellflitton/pansurg"}, "release_url": "https://pypi.org/project/pansurg/0.2/", "requires_dist": null, "requires_python": "", "summary": "Basic pip module for accessing coronavirus resources", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pansurg</h1>\n<p>Open source pip module that enables the user to access coronavirus resources.</p>\n<h2>Installation</h2>\n<pre><code>pip install pansurg \n</code></pre>\n<h1>Papers</h1>\n<p>All coronavirus papers from the Alan institute can be streamed using the <code>Papers</code> object which\nitself is a list. To get the papers run the following code\"</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pansurg</span> <span class=\"kn\">import</span> <span class=\"n\">Papers</span>\n\n\n<span class=\"n\">papers</span> <span class=\"o\">=</span> <span class=\"n\">Papers</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">paper</span> <span class=\"ow\">in</span> <span class=\"n\">papers</span><span class=\"p\">:</span>\n    <span class=\"c1\"># do something </span>\n</pre>\n<p>Initially, the papers are directly streamed from the Alan institute so this initializing the\n<code>Papers</code> object might take a while. Once the first initialization is done, the papers are\nthen saved onto your computer and are accessed locally from there onwards. This still takes\nsome time to load as of the time of reading this there's over 2500 papers, but it's a lot\nshorter than directly streaming them from the Alan institute every time. The Alan institute\nupdates the papers every friday, so it's advised that you refresh the cache once a week to\nget the latest papers. This can be done by setting the <code>force_refresh</code> parameter to <code>True</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pansurg</span> <span class=\"kn\">import</span> <span class=\"n\">Papers</span>\n\n\n<span class=\"n\">papers</span> <span class=\"o\">=</span> <span class=\"n\">Papers</span><span class=\"p\">(</span><span class=\"n\">force_refresh</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Paper</h2>\n<p>Right now the paper isn't it's own object but a dict which contains the following:</p>\n<ul>\n<li><code>paper_id</code>: the id of the paper</li>\n<li><code>metadata</code>: contains data about the paper such as the journal title, dates, and authors</li>\n<li><code>abstract</code>: abstract of the paper</li>\n<li><code>body_text</code>: text of the paper</li>\n<li><code>bib_entries</code>: bibliography</li>\n<li><code>ref_entries</code>: references</li>\n<li><code>back_matter</code>: more meta data like funding, conflict of interest statements etc</li>\n</ul>\n\n          </div>"}, "last_serial": 7171107, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "448d6b336c5133a76ef138eed782ec07", "sha256": "9da61580044f829e91cd4f4fcd79f02ed4e133a10e9eaa5917ffad60eddda78c"}, "downloads": -1, "filename": "pansurg-0.1.tar.gz", "has_sig": false, "md5_digest": "448d6b336c5133a76ef138eed782ec07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2893, "upload_time": "2020-05-03T19:47:04", "upload_time_iso_8601": "2020-05-03T19:47:04.090605Z", "url": "https://files.pythonhosted.org/packages/b3/13/5f72b67f37b513a4203a66c3739320bd4125dafec9bff27df79015b671d1/pansurg-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5ac595020d2301366471d9197a3c5be1", "sha256": "ce043324ab295ba81aeb8660afc1d3caf40121089cee75e4798a71070d4b0141"}, "downloads": -1, "filename": "pansurg-0.2.tar.gz", "has_sig": false, "md5_digest": "5ac595020d2301366471d9197a3c5be1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3789, "upload_time": "2020-05-05T10:44:35", "upload_time_iso_8601": "2020-05-05T10:44:35.117149Z", "url": "https://files.pythonhosted.org/packages/30/36/8cb870e430ae11c9a4fe2d538dc88e02edc722e15d6069df3e15d2171817/pansurg-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ac595020d2301366471d9197a3c5be1", "sha256": "ce043324ab295ba81aeb8660afc1d3caf40121089cee75e4798a71070d4b0141"}, "downloads": -1, "filename": "pansurg-0.2.tar.gz", "has_sig": false, "md5_digest": "5ac595020d2301366471d9197a3c5be1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3789, "upload_time": "2020-05-05T10:44:35", "upload_time_iso_8601": "2020-05-05T10:44:35.117149Z", "url": "https://files.pythonhosted.org/packages/30/36/8cb870e430ae11c9a4fe2d538dc88e02edc722e15d6069df3e15d2171817/pansurg-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:14 2020"}