{"info": {"author": "Miguel A. Alvarado V.", "author_email": "alvaradoma@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# vaml: Azure DevOps Variable Groups as YAML files\n\nvaml helps you get Azure DevOps variable groups as simple YAML files,\nmaking it easier than the current UI to modify a large amount of variable groups,\nwhile also allowing to put them back into the AZDO Library.\n\n## Introduction\n\n`vaml` is a tool to get and put Azure DevOps variable groups as files in YAML format.\n\n## Why?\n\nWhen you have multiple variable group to modify, the Azure DevOps interface can be a nuescence,\ngoing back and forth between variable groups while searching means you have to search again, and again,\nand again, this is very time consuming.\n\nSo I wanted a tool to obtain one, many or all variable groups in a project in one sweep, modify them locally,\nand them put them back.\n\n## Usage\n\nVAML requires 3 things:\n- Organization\n- Project\n- Personal Access Token (Please create this in Azure DevOps)\n\nThey can be set as environment variables:\n- VAML_ORGANIZATION\n- VAML_PROJECT\n- VAML_PAT\n\nExample:\n```\nexport VAML_ORGANIZATION=ExampleOrg\nexport VAML_PROJECT=ExampleProject\nexport VAML_PAT=accesstokengoeshere\nvaml get 'project-testing*'\n```\n\nAs a config file in (~/.vaml.cfg)\n```\norganization: ExampleOrg\nproject: ExampleProject\npat: accesstokengoeshere\n```\n\nExample: `vaml get 'project-testing*'`\n\nOr as arguments:\n`./vaml --organization ExampleOrg --project ExampleProject -pat accesstokengoeshere get 'testing-project*'` to get the arguments per command.\n\nCurrently supported commands:\n- get\n- put\n\n## Caveats\n\nCurrently only GET and PUT operations are allowed, so there's the following Todo\n\n## Todo\n\n- Create and delete operations\n- Ability to identify mixed operations, update and create for one-off operations\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/exodus/vaml/", "keywords": "", "license": "MIT", "maintainer": "Miguel A. Alvarado V.", "maintainer_email": "alvaradoma@gmail.com", "name": "vaml", "package_url": "https://pypi.org/project/vaml/", "platform": "", "project_url": "https://pypi.org/project/vaml/", "project_urls": {"Homepage": "https://github.com/exodus/vaml/", "Repository": "https://github.com/exodus/vaml/"}, "release_url": "https://pypi.org/project/vaml/0.1.1/", "requires_dist": ["pyyaml (>=5.3.1,<6.0.0)", "argparse (>=1.4.0,<2.0.0)", "requests (>=2.23.0,<3.0.0)", "click (>=7.1.1,<8.0.0)"], "requires_python": ">=3.7,<4.0", "summary": "Azure DevOps Variable Groups as YAML files", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vaml: Azure DevOps Variable Groups as YAML files</h1>\n<p>vaml helps you get Azure DevOps variable groups as simple YAML files,\nmaking it easier than the current UI to modify a large amount of variable groups,\nwhile also allowing to put them back into the AZDO Library.</p>\n<h2>Introduction</h2>\n<p><code>vaml</code> is a tool to get and put Azure DevOps variable groups as files in YAML format.</p>\n<h2>Why?</h2>\n<p>When you have multiple variable group to modify, the Azure DevOps interface can be a nuescence,\ngoing back and forth between variable groups while searching means you have to search again, and again,\nand again, this is very time consuming.</p>\n<p>So I wanted a tool to obtain one, many or all variable groups in a project in one sweep, modify them locally,\nand them put them back.</p>\n<h2>Usage</h2>\n<p>VAML requires 3 things:</p>\n<ul>\n<li>Organization</li>\n<li>Project</li>\n<li>Personal Access Token (Please create this in Azure DevOps)</li>\n</ul>\n<p>They can be set as environment variables:</p>\n<ul>\n<li>VAML_ORGANIZATION</li>\n<li>VAML_PROJECT</li>\n<li>VAML_PAT</li>\n</ul>\n<p>Example:</p>\n<pre><code>export VAML_ORGANIZATION=ExampleOrg\nexport VAML_PROJECT=ExampleProject\nexport VAML_PAT=accesstokengoeshere\nvaml get 'project-testing*'\n</code></pre>\n<p>As a config file in (~/.vaml.cfg)</p>\n<pre><code>organization: ExampleOrg\nproject: ExampleProject\npat: accesstokengoeshere\n</code></pre>\n<p>Example: <code>vaml get 'project-testing*'</code></p>\n<p>Or as arguments:\n<code>./vaml --organization ExampleOrg --project ExampleProject -pat accesstokengoeshere get 'testing-project*'</code> to get the arguments per command.</p>\n<p>Currently supported commands:</p>\n<ul>\n<li>get</li>\n<li>put</li>\n</ul>\n<h2>Caveats</h2>\n<p>Currently only GET and PUT operations are allowed, so there's the following Todo</p>\n<h2>Todo</h2>\n<ul>\n<li>Create and delete operations</li>\n<li>Ability to identify mixed operations, update and create for one-off operations</li>\n</ul>\n\n          </div>"}, "last_serial": 7044555, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "0c900350b6ebfba9e44c00ce55a4f027", "sha256": "bd62d8b8f951d7f47cb90fdeb431a0d13898a0d04a00b5552f5701a59bfc4bf4"}, "downloads": -1, "filename": "vaml-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0c900350b6ebfba9e44c00ce55a4f027", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 4145, "upload_time": "2020-04-17T22:13:34", "upload_time_iso_8601": "2020-04-17T22:13:34.286945Z", "url": "https://files.pythonhosted.org/packages/79/df/5a4dadf5fb112eab5f3374849805d408f35bd641f52b610538b92653e86a/vaml-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c782900c42391ef271cf4914489d6019", "sha256": "9d110f443ab1d62e0d427ce08d72b632e52e7889175d2a78112fd0cf36683531"}, "downloads": -1, "filename": "vaml-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c782900c42391ef271cf4914489d6019", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 3877, "upload_time": "2020-04-17T22:13:35", "upload_time_iso_8601": "2020-04-17T22:13:35.169721Z", "url": "https://files.pythonhosted.org/packages/5c/8c/26d935241fbe1eb00d72082ed94dabfb9f35272b894a5f3803a89cad78a5/vaml-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c900350b6ebfba9e44c00ce55a4f027", "sha256": "bd62d8b8f951d7f47cb90fdeb431a0d13898a0d04a00b5552f5701a59bfc4bf4"}, "downloads": -1, "filename": "vaml-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0c900350b6ebfba9e44c00ce55a4f027", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 4145, "upload_time": "2020-04-17T22:13:34", "upload_time_iso_8601": "2020-04-17T22:13:34.286945Z", "url": "https://files.pythonhosted.org/packages/79/df/5a4dadf5fb112eab5f3374849805d408f35bd641f52b610538b92653e86a/vaml-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c782900c42391ef271cf4914489d6019", "sha256": "9d110f443ab1d62e0d427ce08d72b632e52e7889175d2a78112fd0cf36683531"}, "downloads": -1, "filename": "vaml-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c782900c42391ef271cf4914489d6019", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 3877, "upload_time": "2020-04-17T22:13:35", "upload_time_iso_8601": "2020-04-17T22:13:35.169721Z", "url": "https://files.pythonhosted.org/packages/5c/8c/26d935241fbe1eb00d72082ed94dabfb9f35272b894a5f3803a89cad78a5/vaml-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:58 2020"}