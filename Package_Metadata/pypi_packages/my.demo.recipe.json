{"info": {"author": "Tarek", "author_email": "tarek@ziade.org", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": ".. contents::\n\n.. Note to recipe author!\n   ---------------------\n   Update the following URLs to point to your:\n   \n   - code repository\n   - bug tracker \n   - questions/comments feedback mail \n   (do not set a real mail, to avoid spams)\n\n   Or remove it if not used.\n\n- Code repository: http://svn.somewhere.com/...\n- Questions and comments to somemailing_list\n- Report bugs at http://bug.somewhere.com/..\n\n\nDetailed Documentation\n**********************\n\nSupported options\n=================\n\nThe recipe supports the following options:\n\n.. Note to recipe author!\n   ----------------------\n   For each option the recipe uses you shoud include a description\n   about the purpose of the option, the format and semantics of the\n   values it accepts, whether it is mandatory or optional and what the\n   default value is if it is omitted.\n\noption1\n    Description for ``option1``...\n\noption2\n    Description for ``option2``...\n\n\nExample usage\n=============\n\n.. Note to recipe author!\n   ----------------------\n   zc.buildout provides a nice testing environment which makes it\n   relatively easy to write doctests that both demonstrate the use of\n   the recipe and test it.\n   You can find examples of recipe doctests from the PyPI, e.g.\n   \n     http://pypi.python.org/pypi/zc.recipe.egg\n\n   The PyPI page for zc.buildout contains documentation about the test\n   environment.\n\n     http://pypi.python.org/pypi/zc.buildout#testing-support\n\n   Below is a skeleton doctest that you can start with when building\n   your own tests.\n\nWe'll start by creating a buildout that uses the recipe::\n\n    >>> write('buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = test1\n    ...\n    ... [test1]\n    ... recipe = my.demo.recipe\n    ... option1 = %(foo)s\n    ... option2 = %(bar)s\n    ... \"\"\" % { 'foo' : 'value1', 'bar' : 'value2'})\n\nRunning the buildout gives us::\n\n    >>> print 'start', system(buildout) # doctest:+ELLIPSIS\n    start...\n    Installing test1.\n    Unused options for test1: 'option2' 'option1'.\n    <BLANKLINE>\n\n\n\nContributors\n************\n\n${Tarek or \"\"}, Author\n\n\nChange history\n**************\n\n${1.0 or \"0.0.0\"} (xxxx-xx-xx)\n==================\n\n - Created recipe with ZopeSkel [${Tarek or \"\"}].\n\nDownload\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://ziade.org", "keywords": "demo buildout", "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "my.demo.recipe", "package_url": "https://pypi.org/project/my.demo.recipe/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/my.demo.recipe/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://ziade.org"}, "release_url": "https://pypi.org/project/my.demo.recipe/1.0dev/", "requires_dist": null, "requires_python": null, "summary": "a demo recipe for oscon", "version": "1.0dev", "yanked": false, "html_description": "<div class=\"project-description\">\n            .. contents::<br><br>.. Note to recipe author!<br>   ---------------------<br>   Update the following URLs to point to your:<br>   <br>   - code repository<br>   - bug tracker <br>   - questions/comments feedback mail <br>   (do not set a real mail, to avoid spams)<br><br>   Or remove it if not used.<br><br>- Code repository: http://svn.somewhere.com/...<br>- Questions and comments to somemailing_list<br>- Report bugs at http://bug.somewhere.com/..<br><br><br>Detailed Documentation<br>**********************<br><br>Supported options<br>=================<br><br>The recipe supports the following options:<br><br>.. Note to recipe author!<br>   ----------------------<br>   For each option the recipe uses you shoud include a description<br>   about the purpose of the option, the format and semantics of the<br>   values it accepts, whether it is mandatory or optional and what the<br>   default value is if it is omitted.<br><br>option1<br>    Description for ``option1``...<br><br>option2<br>    Description for ``option2``...<br><br><br>Example usage<br>=============<br><br>.. Note to recipe author!<br>   ----------------------<br>   zc.buildout provides a nice testing environment which makes it<br>   relatively easy to write doctests that both demonstrate the use of<br>   the recipe and test it.<br>   You can find examples of recipe doctests from the PyPI, e.g.<br>   <br>     http://pypi.python.org/pypi/zc.recipe.egg<br><br>   The PyPI page for zc.buildout contains documentation about the test<br>   environment.<br><br>     http://pypi.python.org/pypi/zc.buildout#testing-support<br><br>   Below is a skeleton doctest that you can start with when building<br>   your own tests.<br><br>We'll start by creating a buildout that uses the recipe::<br><br>    &gt;&gt;&gt; write('buildout.cfg',<br>    ... \"\"\"<br>    ... [buildout]<br>    ... parts = test1<br>    ...<br>    ... [test1]<br>    ... recipe = my.demo.recipe<br>    ... option1 = %(foo)s<br>    ... option2 = %(bar)s<br>    ... \"\"\" % { 'foo' : 'value1', 'bar' : 'value2'})<br><br>Running the buildout gives us::<br><br>    &gt;&gt;&gt; print 'start', system(buildout) # doctest:+ELLIPSIS<br>    start...<br>    Installing test1.<br>    Unused options for test1: 'option2' 'option1'.<br>    &lt;BLANKLINE&gt;<br><br><br><br>Contributors<br>************<br><br>${Tarek or \"\"}, Author<br><br><br>Change history<br>**************<br><br>${1.0 or \"0.0.0\"} (xxxx-xx-xx)<br>==================<br><br> - Created recipe with ZopeSkel [${Tarek or \"\"}].<br><br>Download<br>********\n          </div>"}, "last_serial": 795119, "releases": {"1.0dev": [{"comment_text": "", "digests": {"md5": "9c8742257595bb34606a1130c7a39d99", "sha256": "7abc503f1edeee032f02e30512a0f9734e184c764b25ac1e8ff94767f971a9dc"}, "downloads": -1, "filename": "my.demo.recipe-1.0dev.tar.gz", "has_sig": false, "md5_digest": "9c8742257595bb34606a1130c7a39d99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3824, "upload_time": "2008-07-22T17:46:34", "upload_time_iso_8601": "2008-07-22T17:46:34Z", "url": "https://files.pythonhosted.org/packages/e7/ee/ff1492433d623a3f389e4dc3e489900463774a77a37728ab8daeb89edd83/my.demo.recipe-1.0dev.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c8742257595bb34606a1130c7a39d99", "sha256": "7abc503f1edeee032f02e30512a0f9734e184c764b25ac1e8ff94767f971a9dc"}, "downloads": -1, "filename": "my.demo.recipe-1.0dev.tar.gz", "has_sig": false, "md5_digest": "9c8742257595bb34606a1130c7a39d99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3824, "upload_time": "2008-07-22T17:46:34", "upload_time_iso_8601": "2008-07-22T17:46:34Z", "url": "https://files.pythonhosted.org/packages/e7/ee/ff1492433d623a3f389e4dc3e489900463774a77a37728ab8daeb89edd83/my.demo.recipe-1.0dev.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:34 2020"}