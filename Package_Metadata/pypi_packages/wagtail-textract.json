{"info": {"author": "Kees Hink", "author_email": "kees@fourdigits.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Wagtail", "Framework :: Wagtail :: 2", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: Site Management"], "description": "[![Build Status](https://travis-ci.org/fourdigits/wagtail_textract.svg?branch=master)](https://travis-ci.org/fourdigits/wagtail_textract)\n[![Coverage Report](http://codecov.io/github/fourdigits/wagtail_textract/coverage.svg?branch=master)](http://codecov.io/github/fourdigits/wagtail_textract?branch=master)\n\n# Text extraction for Wagtail document search\n\nThis package is for replacing [Wagtail][1]'s Document class with one\nthat allows searching in Document file contents using [textract][2].\n\nTextract can extract text from (among [others][6]) PDF, Excel and Word files.\n\nThe package was inspired by the [\"Search: Extract text from documents\" issue][3] in Wagtail.\n\nDocuments will work as before, except that Document search in Wagtail's admin interface\nwill also find search terms in the files' contents.\n\nSome screenshots to illustrate.\n\nIn our fresh Wagtail site with `wagtail_textract` installed,\nwe uploaded a [file called `test_document.pdf`](./src/wagtail_textract/tests/testfiles/test_document.pdf) with handwritten text in it.\nIt is listed in the admin interface under Documents:\n\n![Document List](/docs/screenshot_document_list_test_document.png)\n\nIf we now search in Documents for the word `correct`, which is one of the handwritten words,\nthe live search finds it:\n\n![Document Search finds PDF by searching for \"staple\"](/docs/screenshot_document_search_correct.png)\n\nThe assumption is that this search should not only be available in Wagtail's admin interface,\nbut also in a public-facing search view, for which we provide a code example.\n\n\n## Requirements\n\n- Wagtail 2 (see [tox.ini](./tox.ini))\n- The [Textract dependencies][8]\n\n\n## Maturity\n\nWe have been using this package in production since August 2018 on https://nuffic.nl.\n\n\n## Installation\n\n- Install the [Textract dependencies][8]\n- Add `wagtail_textract` to your requirements and/or `pip install wagtail_textract`\n- Add to your Django `INSTALLED_APPS`.\n- Put `WAGTAILDOCS_DOCUMENT_MODEL = \"wagtail_textract.document\"` in your Django settings.\n\nNote: You'll get an incompatibility warning during installation of wagtail_textract (Wagtail 2.0.1 installed):\n\n```\nrequests 2.18.4 has requirement chardet<3.1.0,>=3.0.2, but you'll have chardet 2.3.0 which is incompatible.\ntextract 1.6.1 has requirement beautifulsoup4==4.5.3, but you'll have beautifulsoup4 4.6.0 which is incompatible.\n```\n\nWe haven't seen this leading to problems, but it's something to keep in mind.\n\n\n### Tesseract\n\nIn order to make `textract` use [Tesseract][4], which happens if regular\n`textract` finds no text, you need to add the data files that Tesseract can\nbase its word matching on.\n\nCreate a `tessdata` directory in your project directory, and download the\n[languages][5] you want.\n\n\n## Transcribing\n\nTranscription is done automatically after Document save,\nin an [`asyncio`][7] executor to prevent blocking the response during processing.\n\nTo transcribe all existing Documents, run the management command::\n\n    ./manage.py transcribe_documents\n\nThis may take a long time, obviously.\n\n\n## Usage in custom view\n\nHere is a code example for a search view (outside Wagtail's admin interface)\nthat shows both Page and Document results.\n\n```python\nfrom itertools import chain\n\nfrom wagtail.core.models import Page\nfrom wagtail.documents.models import get_document_model\n\n\ndef search(request):\n    # Search\n    search_query = request.GET.get('query', None)\n    if search_query:\n        page_results = Page.objects.live().search(search_query)\n        document_results = Document.objects.search(search_query)\n        search_results = list(chain(page_results, document_results))\n\n        # Log the query so Wagtail can suggest promoted results\n        Query.get(search_query).add_hit()\n    else:\n        search_results = Page.objects.none()\n\n    # Render template\n    return render(request, 'website/search_results.html', {\n        'search_query': search_query,\n        'search_results': search_results,\n    })\n```\n\nYour template should allow for handling Documents differently than Pages,\nbecause you can't do `pageurl result` on a Document:\n\n```jinja2\n{% if result.file %}\n   <a href=\"{{ result.url }}\">{{ result }}</a>\n{% else %}\n   <a href=\"{% pageurl result %}\">{{ result }}</a>\n{% endif %}\n```\n\n\n## What if you already use a custom Document model?\n\nIn order to use wagtail_textract, your `CustomizedDocument` model should do\nthe same as [wagtail_textract's Document](./src/wagtail_textract/models.py):\n\n- subclass `TranscriptionMixin`\n- alter `search_fields`\n\n```python\nfrom wagtail_textract.models import TranscriptionMixin\n\n\nclass CustomizedDocument(TranscriptionMixin, ...):\n    \"\"\"Extra fields and methods for Document model.\"\"\"\n    search_fields = ... + [\n        index.SearchField(\n            'transcription',\n            partial_match=False,\n        ),\n    ]\n```\n\nNote that the first class to subclass should be `TranscriptionMixin`,\nso its `save()` takes precedence over that of the other parent classes.\n\n\n## Tests\n\nTo run tests, checkout this repository and:\n\n    make test\n\n\n### Coverage\n\nA coverage report will be generated in `./coverage_html_report/`.\n\n\n## Contributors\n\n- Karl Hobley\n- Bertrand Bordage\n- Kees Hink\n- Tom Hendrikx\n- Coen van der Kamp\n- Mike Overkamp\n- Thibaud Colas\n- Dan Braghis\n- Dan Swain\n\n\n[1]: https://wagtail.io/\n[2]: https://github.com/deanmalmgren/textract\n[3]: https://github.com/wagtail/wagtail/issues/542\n[4]: https://github.com/tesseract-ocr\n[5]: https://github.com/tesseract-ocr/tessdata\n[6]: http://textract.readthedocs.io/en/stable/#currently-supporting\n[7]: https://docs.python.org/3/library/asyncio.html\n[8]: http://textract.readthedocs.io/en/latest/installation.html", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fourdigits/wagtail_textract", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "wagtail-textract", "package_url": "https://pypi.org/project/wagtail-textract/", "platform": "", "project_url": "https://pypi.org/project/wagtail-textract/", "project_urls": {"Homepage": "https://github.com/fourdigits/wagtail_textract"}, "release_url": "https://pypi.org/project/wagtail-textract/1.2/", "requires_dist": null, "requires_python": "", "summary": "Allow searching for text in Documents in the Wagtail content management system", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/fourdigits/wagtail_textract\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1792f5f9e77baa17bfb63da464bcb70b7997fe34/68747470733a2f2f7472617669732d63692e6f72672f666f75726469676974732f7761677461696c5f74657874726163742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://codecov.io/github/fourdigits/wagtail_textract?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d058d27bac65a6e345704cc51ab2ccb1d6415d4b/687474703a2f2f636f6465636f762e696f2f6769746875622f666f75726469676974732f7761677461696c5f74657874726163742f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>Text extraction for Wagtail document search</h1>\n<p>This package is for replacing <a href=\"https://wagtail.io/\" rel=\"nofollow\">Wagtail</a>'s Document class with one\nthat allows searching in Document file contents using <a href=\"https://github.com/deanmalmgren/textract\" rel=\"nofollow\">textract</a>.</p>\n<p>Textract can extract text from (among <a href=\"http://textract.readthedocs.io/en/stable/#currently-supporting\" rel=\"nofollow\">others</a>) PDF, Excel and Word files.</p>\n<p>The package was inspired by the <a href=\"https://github.com/wagtail/wagtail/issues/542\" rel=\"nofollow\">\"Search: Extract text from documents\" issue</a> in Wagtail.</p>\n<p>Documents will work as before, except that Document search in Wagtail's admin interface\nwill also find search terms in the files' contents.</p>\n<p>Some screenshots to illustrate.</p>\n<p>In our fresh Wagtail site with <code>wagtail_textract</code> installed,\nwe uploaded a <a href=\"./src/wagtail_textract/tests/testfiles/test_document.pdf\" rel=\"nofollow\">file called <code>test_document.pdf</code></a> with handwritten text in it.\nIt is listed in the admin interface under Documents:</p>\n<p><img alt=\"Document List\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb8155940ce73238e4b3799f0705dc1cdb948021/2f646f63732f73637265656e73686f745f646f63756d656e745f6c6973745f746573745f646f63756d656e742e706e67\"></p>\n<p>If we now search in Documents for the word <code>correct</code>, which is one of the handwritten words,\nthe live search finds it:</p>\n<p><img alt='Document Search finds PDF by searching for \"staple\"' src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa9def56005df60707226c1973093dd0a8cc8def/2f646f63732f73637265656e73686f745f646f63756d656e745f7365617263685f636f72726563742e706e67\"></p>\n<p>The assumption is that this search should not only be available in Wagtail's admin interface,\nbut also in a public-facing search view, for which we provide a code example.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Wagtail 2 (see <a href=\"./tox.ini\" rel=\"nofollow\">tox.ini</a>)</li>\n<li>The <a href=\"http://textract.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">Textract dependencies</a></li>\n</ul>\n<h2>Maturity</h2>\n<p>We have been using this package in production since August 2018 on <a href=\"https://nuffic.nl\" rel=\"nofollow\">https://nuffic.nl</a>.</p>\n<h2>Installation</h2>\n<ul>\n<li>Install the <a href=\"http://textract.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">Textract dependencies</a></li>\n<li>Add <code>wagtail_textract</code> to your requirements and/or <code>pip install wagtail_textract</code></li>\n<li>Add to your Django <code>INSTALLED_APPS</code>.</li>\n<li>Put <code>WAGTAILDOCS_DOCUMENT_MODEL = \"wagtail_textract.document\"</code> in your Django settings.</li>\n</ul>\n<p>Note: You'll get an incompatibility warning during installation of wagtail_textract (Wagtail 2.0.1 installed):</p>\n<pre><code>requests 2.18.4 has requirement chardet&lt;3.1.0,&gt;=3.0.2, but you'll have chardet 2.3.0 which is incompatible.\ntextract 1.6.1 has requirement beautifulsoup4==4.5.3, but you'll have beautifulsoup4 4.6.0 which is incompatible.\n</code></pre>\n<p>We haven't seen this leading to problems, but it's something to keep in mind.</p>\n<h3>Tesseract</h3>\n<p>In order to make <code>textract</code> use <a href=\"https://github.com/tesseract-ocr\" rel=\"nofollow\">Tesseract</a>, which happens if regular\n<code>textract</code> finds no text, you need to add the data files that Tesseract can\nbase its word matching on.</p>\n<p>Create a <code>tessdata</code> directory in your project directory, and download the\n<a href=\"https://github.com/tesseract-ocr/tessdata\" rel=\"nofollow\">languages</a> you want.</p>\n<h2>Transcribing</h2>\n<p>Transcription is done automatically after Document save,\nin an <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"nofollow\"><code>asyncio</code></a> executor to prevent blocking the response during processing.</p>\n<p>To transcribe all existing Documents, run the management command::</p>\n<pre><code>./manage.py transcribe_documents\n</code></pre>\n<p>This may take a long time, obviously.</p>\n<h2>Usage in custom view</h2>\n<p>Here is a code example for a search view (outside Wagtail's admin interface)\nthat shows both Page and Document results.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">itertools</span> <span class=\"kn\">import</span> <span class=\"n\">chain</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">wagtail.core.models</span> <span class=\"kn\">import</span> <span class=\"n\">Page</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wagtail.documents.models</span> <span class=\"kn\">import</span> <span class=\"n\">get_document_model</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Search</span>\n    <span class=\"n\">search_query</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'query'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">search_query</span><span class=\"p\">:</span>\n        <span class=\"n\">page_results</span> <span class=\"o\">=</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">live</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">search_query</span><span class=\"p\">)</span>\n        <span class=\"n\">document_results</span> <span class=\"o\">=</span> <span class=\"n\">Document</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">search_query</span><span class=\"p\">)</span>\n        <span class=\"n\">search_results</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">chain</span><span class=\"p\">(</span><span class=\"n\">page_results</span><span class=\"p\">,</span> <span class=\"n\">document_results</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># Log the query so Wagtail can suggest promoted results</span>\n        <span class=\"n\">Query</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">search_query</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add_hit</span><span class=\"p\">()</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">search_results</span> <span class=\"o\">=</span> <span class=\"n\">Page</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">none</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Render template</span>\n    <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'website/search_results.html'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'search_query'</span><span class=\"p\">:</span> <span class=\"n\">search_query</span><span class=\"p\">,</span>\n        <span class=\"s1\">'search_results'</span><span class=\"p\">:</span> <span class=\"n\">search_results</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n</pre>\n<p>Your template should allow for handling Documents differently than Pages,\nbecause you can't do <code>pageurl result</code> on a Document:</p>\n<pre>{% if result.file %}\n   &lt;a href=\"{{ result.url }}\"&gt;{{ result }}&lt;/a&gt;\n{% else %}\n   &lt;a href=\"{% pageurl result %}\"&gt;{{ result }}&lt;/a&gt;\n{% endif %}\n</pre>\n<h2>What if you already use a custom Document model?</h2>\n<p>In order to use wagtail_textract, your <code>CustomizedDocument</code> model should do\nthe same as <a href=\"./src/wagtail_textract/models.py\" rel=\"nofollow\">wagtail_textract's Document</a>:</p>\n<ul>\n<li>subclass <code>TranscriptionMixin</code></li>\n<li>alter <code>search_fields</code></li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">wagtail_textract.models</span> <span class=\"kn\">import</span> <span class=\"n\">TranscriptionMixin</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomizedDocument</span><span class=\"p\">(</span><span class=\"n\">TranscriptionMixin</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Extra fields and methods for Document model.\"\"\"</span>\n    <span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"o\">...</span> <span class=\"o\">+</span> <span class=\"p\">[</span>\n        <span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">SearchField</span><span class=\"p\">(</span>\n            <span class=\"s1\">'transcription'</span><span class=\"p\">,</span>\n            <span class=\"n\">partial_match</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>Note that the first class to subclass should be <code>TranscriptionMixin</code>,\nso its <code>save()</code> takes precedence over that of the other parent classes.</p>\n<h2>Tests</h2>\n<p>To run tests, checkout this repository and:</p>\n<pre><code>make test\n</code></pre>\n<h3>Coverage</h3>\n<p>A coverage report will be generated in <code>./coverage_html_report/</code>.</p>\n<h2>Contributors</h2>\n<ul>\n<li>Karl Hobley</li>\n<li>Bertrand Bordage</li>\n<li>Kees Hink</li>\n<li>Tom Hendrikx</li>\n<li>Coen van der Kamp</li>\n<li>Mike Overkamp</li>\n<li>Thibaud Colas</li>\n<li>Dan Braghis</li>\n<li>Dan Swain</li>\n</ul>\n\n          </div>"}, "last_serial": 5791659, "releases": {"0.1a0": [{"comment_text": "", "digests": {"md5": "faaf4d1e1a9050e1ccebe0f2d038479f", "sha256": "e5599048a814e02714387a069175aba427c195785c37e08e6079ba65b651473c"}, "downloads": -1, "filename": "wagtail-textract-0.1a0.tar.gz", "has_sig": false, "md5_digest": "faaf4d1e1a9050e1ccebe0f2d038479f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1031096, "upload_time": "2018-05-08T11:52:40", "upload_time_iso_8601": "2018-05-08T11:52:40.104583Z", "url": "https://files.pythonhosted.org/packages/a3/51/2ccae1e851088b624d21708045595b8db2c9a756abc1dd97129c80d7194d/wagtail-textract-0.1a0.tar.gz", "yanked": false}], "0.1a1": [{"comment_text": "", "digests": {"md5": "d7687bd3a693bbf20c001333c24a4829", "sha256": "fb571c96df6e9a30150a2c992411716d45da61d0f6b756ae5cb5c986bb49b8aa"}, "downloads": -1, "filename": "wagtail_textract-0.1a1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d7687bd3a693bbf20c001333c24a4829", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 919873, "upload_time": "2018-05-08T12:25:28", "upload_time_iso_8601": "2018-05-08T12:25:28.011956Z", "url": "https://files.pythonhosted.org/packages/ad/23/cab93dc9b21223faba2a3216517fd799eadca7e7223de7dd8f8ab5242d41/wagtail_textract-0.1a1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f07de886a3b5755e0c4678afa5fb5182", "sha256": "88f81bd7f7ed99d3176654d16b525842ddbcd0eb4bd8cc24949fce4c2c36afa6"}, "downloads": -1, "filename": "wagtail-textract-0.1a1.tar.gz", "has_sig": false, "md5_digest": "f07de886a3b5755e0c4678afa5fb5182", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1031164, "upload_time": "2018-05-08T12:25:30", "upload_time_iso_8601": "2018-05-08T12:25:30.130819Z", "url": "https://files.pythonhosted.org/packages/1b/bc/3ca298eb78d778ab7ffac1fa820397af6efe406a2ba5d7129f011a22fa16/wagtail-textract-0.1a1.tar.gz", "yanked": false}], "0.1a2": [{"comment_text": "", "digests": {"md5": "be3211eacc4048070b0eaa5d4d370e52", "sha256": "e88190d576e49da6dd0bc0944ae979859e2eb54929493c5f3fe71889b143d4b5"}, "downloads": -1, "filename": "wagtail-textract-0.1a2.tar.gz", "has_sig": false, "md5_digest": "be3211eacc4048070b0eaa5d4d370e52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1031195, "upload_time": "2018-05-08T12:39:36", "upload_time_iso_8601": "2018-05-08T12:39:36.494082Z", "url": "https://files.pythonhosted.org/packages/96/7b/72dab603ed9c9a8f946a953abd25ce246888ccd00f70576846d95044b1d9/wagtail-textract-0.1a2.tar.gz", "yanked": false}], "0.1b1": [{"comment_text": "", "digests": {"md5": "04d07cb0348f12bf2b69f325fa393d0a", "sha256": "6f5a62001e8366d56f4782a9133181a9b0a4478cd392c29f4070db38c0ccb449"}, "downloads": -1, "filename": "wagtail-textract-0.1b1.tar.gz", "has_sig": false, "md5_digest": "04d07cb0348f12bf2b69f325fa393d0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1031957, "upload_time": "2018-06-11T15:45:15", "upload_time_iso_8601": "2018-06-11T15:45:15.297015Z", "url": "https://files.pythonhosted.org/packages/df/f4/1d2e1d910f1b33e9f069f2e7e6c1e23e8f1ecbad04e90ebff3537a76d068/wagtail-textract-0.1b1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "4d29490092fc9019e7184cce89002d9d", "sha256": "f2121a1915873603c9eaa836acee02824c0ffa831505c395307e08296a7493d9"}, "downloads": -1, "filename": "wagtail-textract-1.0.tar.gz", "has_sig": false, "md5_digest": "4d29490092fc9019e7184cce89002d9d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1031912, "upload_time": "2018-09-05T09:12:44", "upload_time_iso_8601": "2018-09-05T09:12:44.656649Z", "url": "https://files.pythonhosted.org/packages/4c/ac/9e83ecd531c568e916578366d88e9f9400017c3aec075316b3d8bac21b84/wagtail-textract-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "54f1e3790b493ab4b762cc134e8f0b5d", "sha256": "5f92a3fa0d657f309f69edf9a61a10b4300da725155e16e8637c1aca08dff497"}, "downloads": -1, "filename": "wagtail-textract-1.1.tar.gz", "has_sig": false, "md5_digest": "54f1e3790b493ab4b762cc134e8f0b5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1029783, "upload_time": "2019-04-15T15:03:30", "upload_time_iso_8601": "2019-04-15T15:03:30.672447Z", "url": "https://files.pythonhosted.org/packages/cb/1e/da045d78f5cb03f01430f36347952e49e5d8343f66aef00a237ad186ea8e/wagtail-textract-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "9b028f1ca94af2fcb8dfa6af72cd0349", "sha256": "1a2329590d4e5033db70e472ec4023dbf4afe8056087e9db9162b08077749893"}, "downloads": -1, "filename": "wagtail-textract-1.2.tar.gz", "has_sig": false, "md5_digest": "9b028f1ca94af2fcb8dfa6af72cd0349", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1029901, "upload_time": "2019-09-06T11:15:30", "upload_time_iso_8601": "2019-09-06T11:15:30.539612Z", "url": "https://files.pythonhosted.org/packages/dc/08/121863fd4f72df226fe7063a9ed8fcdc14ec46f08cc495cc61bd9d6f5f07/wagtail-textract-1.2.tar.gz", "yanked": false}], "1.2.dev0": [{"comment_text": "", "digests": {"md5": "e3d4f24a2b0a8de0d6a764f28e8b3d34", "sha256": "08b61c0965b18533e439c805fc49857fc9ae2eef0bb28bd5ca710bdbbcbf8eb6"}, "downloads": -1, "filename": "wagtail_textract-1.2.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e3d4f24a2b0a8de0d6a764f28e8b3d34", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 922236, "upload_time": "2019-09-06T11:08:08", "upload_time_iso_8601": "2019-09-06T11:08:08.539643Z", "url": "https://files.pythonhosted.org/packages/0c/1f/ace6305662d8bcf29f4049b3428dd197e2f3a05ceebe33692946328753aa/wagtail_textract-1.2.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5735bf36d2dfa2094750d2c74eac4e64", "sha256": "792a5f792659d8a376498304285c9096610c39ad2749532a8562b40477333ed4"}, "downloads": -1, "filename": "wagtail-textract-1.2.dev0.tar.gz", "has_sig": false, "md5_digest": "5735bf36d2dfa2094750d2c74eac4e64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1029933, "upload_time": "2019-09-06T11:08:10", "upload_time_iso_8601": "2019-09-06T11:08:10.747742Z", "url": "https://files.pythonhosted.org/packages/17/81/5a7dd69808f9a5af83f13df88bc7fc0a8de39f526f4bf3e395a8f742a57f/wagtail-textract-1.2.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b028f1ca94af2fcb8dfa6af72cd0349", "sha256": "1a2329590d4e5033db70e472ec4023dbf4afe8056087e9db9162b08077749893"}, "downloads": -1, "filename": "wagtail-textract-1.2.tar.gz", "has_sig": false, "md5_digest": "9b028f1ca94af2fcb8dfa6af72cd0349", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1029901, "upload_time": "2019-09-06T11:15:30", "upload_time_iso_8601": "2019-09-06T11:15:30.539612Z", "url": "https://files.pythonhosted.org/packages/dc/08/121863fd4f72df226fe7063a9ed8fcdc14ec46f08cc495cc61bd9d6f5f07/wagtail-textract-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:48 2020"}