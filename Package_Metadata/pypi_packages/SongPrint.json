{"info": {"author": "Jace Browning", "author_email": "jacebrowning@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Introduction\n============\n\nSongPrint is a library that provides functions to locate duplicate songs by\nperforming a textual comparison of the songs' attributes.\n\n\n\nGetting Started\n===============\n\nRequirements\n------------\n\n* Python 2.7\n\n\nInstallation\n------------\n\nSongPrint can be installed with ``pip`` or ``easy_install``::\n\n    pip install SongPrint\n    \nAfter installation, the package is available under the name ``songprint``::\n\n    python\n    >>> import songprint\n    \n\n\nSample Usage\n============\n\nA sample script might look like this::\n\n    #!/usr/bin/env python\n\n    from songprint import match, Song\n    \n    items = [Song(\"The Beatles\", \"Rock and Roll Music\"),\n             Song(\"Beatles\", \"rock & roll music\"),\n             Song(\"The beetles\", \"Rock & Roll Music\", duration=150),\n             Song(\"The Beatles\", Rocky Raccoon\")]\n    \n    base = Song('beatles', 'rock and roll music', duration=150)\n    \n    for item in match(base, items):\n        print(item)\n        \n        \nTesting\n=======\n\nThe ``sonprint`` package contains unit tests which can be run from source::\n\n    python setup.py test", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/SongPrint/", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "SongPrint", "package_url": "https://pypi.org/project/SongPrint/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/SongPrint/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/SongPrint/"}, "release_url": "https://pypi.org/project/SongPrint/0.0.x/", "requires_dist": null, "requires_python": null, "summary": "Song matching based on textual comparison of attributes.", "version": "0.0.x", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>SongPrint is a library that provides functions to locate duplicate songs by\nperforming a textual comparison of the songs\u2019 attributes.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python 2.7</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>SongPrint can be installed with <tt>pip</tt> or <tt>easy_install</tt>:</p>\n<pre>pip install SongPrint\n</pre>\n<p>After installation, the package is available under the name <tt>songprint</tt>:</p>\n<pre>python\n&gt;&gt;&gt; import songprint\n</pre>\n</div>\n</div>\n<div id=\"sample-usage\">\n<h2>Sample Usage</h2>\n<p>A sample script might look like this:</p>\n<pre>#!/usr/bin/env python\n\nfrom songprint import match, Song\n\nitems = [Song(\"The Beatles\", \"Rock and Roll Music\"),\n         Song(\"Beatles\", \"rock &amp; roll music\"),\n         Song(\"The beetles\", \"Rock &amp; Roll Music\", duration=150),\n         Song(\"The Beatles\", Rocky Raccoon\")]\n\nbase = Song('beatles', 'rock and roll music', duration=150)\n\nfor item in match(base, items):\n    print(item)\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>The <tt>sonprint</tt> package contains unit tests which can be run from source:</p>\n<pre>python setup.py test\n</pre>\n</div>\n\n          </div>"}, "last_serial": 598008, "releases": {"0.0.x": []}, "urls": [], "timestamp": "Fri May  8 03:06:38 2020"}