{"info": {"author": "Daniel Butum", "author_email": "daniel@notyet.eu", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: DFSG approved", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Translating via spreadsheets\n\nNot all translators are comfortable with using PO-editors such as [Poedit](http://www.poedit.net/) or translation tools like [Transifex](http://trac.transifex.org/). For them this package provides simple tools to\nconvert PO-files to `xlsx`-files and back again. This also has another benefit:\nit is possible to include multiple languages in a single spreadsheet, which can be\nhelpful when translating to multiple similar languages at the same time (for\nexample simplified and traditional chinese).\n\nThe format for spreadsheets is simple:\n\n* If any message use a message context the first column will specify the\n  context. If message contexts are not used this column will be skipped.\n* The next (or first) column contains the message id. This is generally the\n  canonical text.\n* A set of columns for any requested comment types (message occurrences, source\n  comments or translator comments).\n* A column with the translated text for each locale. Fuzzy translations are\n  marked in italic.\n\n**IMPORTANT:** The first row contains the column headers. *``xls2po`` uses these to locale\ninformation in the file, so make sure never to change these!*\n\n# Comparison\n\nNOTE: Original code of this was taken from https://github.com/wichert/po-xls\n\nAdvantages of this implementation:\n- sane defaults\n- the first row and first columns are freezed so that you can always see the source string you want to translate\n- customizable options like width/wrap/protected ranges/fonts\n- can use the exporter/importer from another python project, you just import the library after installing it:\n```py\nfrom pathlib import Path\nimport po_excel_translate as poet\n\n# po2xls\npo_files_to_convert = [\n\tpoet.PortableObjectFile(\"ro-example.po\")\n]\n\npoet.PortableObjectFileToXLSX(\n\tpo_files=po_files_to_convert,\n\tcomment_types=[poet.CommentType.SOURCE],\n\toutput_file_path=Path(\"ro-example.xlsx\")\n)\n\n# xls2po\npoet.XLSXToPortableObjectFile(\n\tlocale=\"ro\",\n\tinput_file_path=Path(\"ro-example.xlsx\"),\n\toutput_file_path=Path(\"ro-example.po\")\n)\n```\n\n# Install\n\n## From repository\n```sh\npip install .\n```\n\n## From pypi\n```sh\npip install po-excel-translate\n```\n\n# Portable Object (.po) to spreadshseet (.xlsx)\n\nConverting one or more PO-files to an xls file is done with the `po2xls`\ncommand:\n```sh\npo2xls nl.po\n```\n\nThis will create a new file `messages.xlsx` with the Dutch translations. Multiple\nPO files can be specified:\n```sh\npo2xls -o texts.xlsx zh_CN.po zh_TW.po nl.po\n```\n\nThis will generate a ``texts.xlsx`` file with all simplified Chinese,\ntraditional Chinese and Dutch translations.\n\n`po2xls` will guess the locale for a PO file by looking at the `Language`\nkey in the file metadata, falling back to the filename if no language information\nis specified. You can override this by explicitly specifying the locale on the command line. For example:\n```sh\npo2xls nl:locales/nl/LC_MESSAGES/mydomain.po\n```\n\nThis will read ``locales/nl/LC_MESSAGES/mydomain.po`` and treat it as Dutch\n(``nl`` locale).\n\nYou can also use the ``-c`` or ``--comments`` option with one of those choices:\n``translator``, ``extracted``, ``reference``, ``all`` to add more column in the\noutput.\n\n# Spreadshseet (.xlsx) to Portable Object (.po)\n\nTranslations can be converted back from a spreadsheet into a PO-file using the `xls2po` command:\n```sh\nxls2po nl texts.xlsx nl.po\n```\n\nThis will take the Dutch (`nl`) translations from `texts.xls`, and (re)create an `nl.po` file using those. You can merge those into an existing po-file using a tool like gettext's `msgmerge`.\n\nChangelog\n=========\n3.0.0 - 15 November, 2019\n-------------------------\n\n- Moved to new project\n- Cleanup up project so that you can use the conversion from other python files\n- Add option for wrap/width/freeze/protected cells/range for conversion to xlsx\n\n\n1.4.2 - May 11, 2017\n-------------------------\n\n- Fix another problem with message context handling in po-to-xls.\n\n\n1.4.1 - May 11, 2017\n-------------------------\n\n- Fix po-to-xls handling of messages with a context.\n\n\n1.4.0 - December 23, 2016\n-------------------------\n\n- Fix compatibility with current OpenPyxl releases.\n\n- Fix Python 3 compatibility.\n\n\n1.3.0 - July 6, 2015\n--------------------\n\n- Fix another ReST syntax error in package description.\n\n- Correcty handle rows with a missing translation.\n\n\n1.2.0 - June 12, 2015\n---------------------\n\n- Fix ReST syntax error in package description.\n\n- Skip rows without a message id.\n\n\n1.1.0 - 25 March 2015\n---------------------\n\n- Use [openpyxl](http://openpyxl.readthedocs.org/) instead of xlrd/xlwt. This\n  fixes warnings about cell type conversions when opening generated xlsx files\n  in Apple Numbers (and possibly others).\n\n\n1.0.0 - 15 March 2015\n---------------------\n\n- Split po-excel conversion tools out from [lingua](https://github.com/wichert/lingua)\n\n- Simplify CLI interfaces.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/NotYetGames/po-excel-translate", "keywords": "translation po gettext Babel lingua excel portable object", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "po-excel-translate", "package_url": "https://pypi.org/project/po-excel-translate/", "platform": "", "project_url": "https://pypi.org/project/po-excel-translate/", "project_urls": {"Homepage": "https://github.com/NotYetGames/po-excel-translate"}, "release_url": "https://pypi.org/project/po-excel-translate/3.0.1/", "requires_dist": ["click", "polib", "openpyxl"], "requires_python": ">=3.2", "summary": "Convert between Excel and PO files", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Translating via spreadsheets</h1>\n<p>Not all translators are comfortable with using PO-editors such as <a href=\"http://www.poedit.net/\" rel=\"nofollow\">Poedit</a> or translation tools like <a href=\"http://trac.transifex.org/\" rel=\"nofollow\">Transifex</a>. For them this package provides simple tools to\nconvert PO-files to <code>xlsx</code>-files and back again. This also has another benefit:\nit is possible to include multiple languages in a single spreadsheet, which can be\nhelpful when translating to multiple similar languages at the same time (for\nexample simplified and traditional chinese).</p>\n<p>The format for spreadsheets is simple:</p>\n<ul>\n<li>If any message use a message context the first column will specify the\ncontext. If message contexts are not used this column will be skipped.</li>\n<li>The next (or first) column contains the message id. This is generally the\ncanonical text.</li>\n<li>A set of columns for any requested comment types (message occurrences, source\ncomments or translator comments).</li>\n<li>A column with the translated text for each locale. Fuzzy translations are\nmarked in italic.</li>\n</ul>\n<p><strong>IMPORTANT:</strong> The first row contains the column headers. <em><code>xls2po</code> uses these to locale\ninformation in the file, so make sure never to change these!</em></p>\n<h1>Comparison</h1>\n<p>NOTE: Original code of this was taken from <a href=\"https://github.com/wichert/po-xls\" rel=\"nofollow\">https://github.com/wichert/po-xls</a></p>\n<p>Advantages of this implementation:</p>\n<ul>\n<li>sane defaults</li>\n<li>the first row and first columns are freezed so that you can always see the source string you want to translate</li>\n<li>customizable options like width/wrap/protected ranges/fonts</li>\n<li>can use the exporter/importer from another python project, you just import the library after installing it:</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">import</span> <span class=\"nn\">po_excel_translate</span> <span class=\"k\">as</span> <span class=\"nn\">poet</span>\n\n<span class=\"c1\"># po2xls</span>\n<span class=\"n\">po_files_to_convert</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n\t<span class=\"n\">poet</span><span class=\"o\">.</span><span class=\"n\">PortableObjectFile</span><span class=\"p\">(</span><span class=\"s2\">\"ro-example.po\"</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">poet</span><span class=\"o\">.</span><span class=\"n\">PortableObjectFileToXLSX</span><span class=\"p\">(</span>\n\t<span class=\"n\">po_files</span><span class=\"o\">=</span><span class=\"n\">po_files_to_convert</span><span class=\"p\">,</span>\n\t<span class=\"n\">comment_types</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">poet</span><span class=\"o\">.</span><span class=\"n\">CommentType</span><span class=\"o\">.</span><span class=\"n\">SOURCE</span><span class=\"p\">],</span>\n\t<span class=\"n\">output_file_path</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"ro-example.xlsx\"</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># xls2po</span>\n<span class=\"n\">poet</span><span class=\"o\">.</span><span class=\"n\">XLSXToPortableObjectFile</span><span class=\"p\">(</span>\n\t<span class=\"n\">locale</span><span class=\"o\">=</span><span class=\"s2\">\"ro\"</span><span class=\"p\">,</span>\n\t<span class=\"n\">input_file_path</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"ro-example.xlsx\"</span><span class=\"p\">),</span>\n\t<span class=\"n\">output_file_path</span><span class=\"o\">=</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s2\">\"ro-example.po\"</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<h1>Install</h1>\n<h2>From repository</h2>\n<pre>pip install .\n</pre>\n<h2>From pypi</h2>\n<pre>pip install po-excel-translate\n</pre>\n<h1>Portable Object (.po) to spreadshseet (.xlsx)</h1>\n<p>Converting one or more PO-files to an xls file is done with the <code>po2xls</code>\ncommand:</p>\n<pre>po2xls nl.po\n</pre>\n<p>This will create a new file <code>messages.xlsx</code> with the Dutch translations. Multiple\nPO files can be specified:</p>\n<pre>po2xls -o texts.xlsx zh_CN.po zh_TW.po nl.po\n</pre>\n<p>This will generate a <code>texts.xlsx</code> file with all simplified Chinese,\ntraditional Chinese and Dutch translations.</p>\n<p><code>po2xls</code> will guess the locale for a PO file by looking at the <code>Language</code>\nkey in the file metadata, falling back to the filename if no language information\nis specified. You can override this by explicitly specifying the locale on the command line. For example:</p>\n<pre>po2xls nl:locales/nl/LC_MESSAGES/mydomain.po\n</pre>\n<p>This will read <code>locales/nl/LC_MESSAGES/mydomain.po</code> and treat it as Dutch\n(<code>nl</code> locale).</p>\n<p>You can also use the <code>-c</code> or <code>--comments</code> option with one of those choices:\n<code>translator</code>, <code>extracted</code>, <code>reference</code>, <code>all</code> to add more column in the\noutput.</p>\n<h1>Spreadshseet (.xlsx) to Portable Object (.po)</h1>\n<p>Translations can be converted back from a spreadsheet into a PO-file using the <code>xls2po</code> command:</p>\n<pre>xls2po nl texts.xlsx nl.po\n</pre>\n<p>This will take the Dutch (<code>nl</code>) translations from <code>texts.xls</code>, and (re)create an <code>nl.po</code> file using those. You can merge those into an existing po-file using a tool like gettext's <code>msgmerge</code>.</p>\n<h1>Changelog</h1>\n<h2>3.0.0 - 15 November, 2019</h2>\n<ul>\n<li>Moved to new project</li>\n<li>Cleanup up project so that you can use the conversion from other python files</li>\n<li>Add option for wrap/width/freeze/protected cells/range for conversion to xlsx</li>\n</ul>\n<h2>1.4.2 - May 11, 2017</h2>\n<ul>\n<li>Fix another problem with message context handling in po-to-xls.</li>\n</ul>\n<h2>1.4.1 - May 11, 2017</h2>\n<ul>\n<li>Fix po-to-xls handling of messages with a context.</li>\n</ul>\n<h2>1.4.0 - December 23, 2016</h2>\n<ul>\n<li>\n<p>Fix compatibility with current OpenPyxl releases.</p>\n</li>\n<li>\n<p>Fix Python 3 compatibility.</p>\n</li>\n</ul>\n<h2>1.3.0 - July 6, 2015</h2>\n<ul>\n<li>\n<p>Fix another ReST syntax error in package description.</p>\n</li>\n<li>\n<p>Correcty handle rows with a missing translation.</p>\n</li>\n</ul>\n<h2>1.2.0 - June 12, 2015</h2>\n<ul>\n<li>\n<p>Fix ReST syntax error in package description.</p>\n</li>\n<li>\n<p>Skip rows without a message id.</p>\n</li>\n</ul>\n<h2>1.1.0 - 25 March 2015</h2>\n<ul>\n<li>Use <a href=\"http://openpyxl.readthedocs.org/\" rel=\"nofollow\">openpyxl</a> instead of xlrd/xlwt. This\nfixes warnings about cell type conversions when opening generated xlsx files\nin Apple Numbers (and possibly others).</li>\n</ul>\n<h2>1.0.0 - 15 March 2015</h2>\n<ul>\n<li>\n<p>Split po-excel conversion tools out from <a href=\"https://github.com/wichert/lingua\" rel=\"nofollow\">lingua</a></p>\n</li>\n<li>\n<p>Simplify CLI interfaces.</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6819688, "releases": {"3.0": [{"comment_text": "", "digests": {"md5": "cd5ed0ccc2e6dc6944e69a33814d7219", "sha256": "38af3178bcb616f4c51bedcce394c61e422f7d41c6384f096cede5844994116e"}, "downloads": -1, "filename": "po_excel_translate-3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd5ed0ccc2e6dc6944e69a33814d7219", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.2", "size": 10337, "upload_time": "2019-11-16T13:48:44", "upload_time_iso_8601": "2019-11-16T13:48:44.128828Z", "url": "https://files.pythonhosted.org/packages/67/c7/a86a905596a0276915e2db4fbf89c8e3e09f9cf0c9a4630bb9584a07ed57/po_excel_translate-3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7101bc49905541009fadebe91a34bebc", "sha256": "d8763919f51b88841ad77c90de5ef93b64b460ee06572c15e88e3170c1aec11b"}, "downloads": -1, "filename": "po-excel-translate-3.0.tar.gz", "has_sig": false, "md5_digest": "7101bc49905541009fadebe91a34bebc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.2", "size": 8526, "upload_time": "2019-11-16T13:48:46", "upload_time_iso_8601": "2019-11-16T13:48:46.674064Z", "url": "https://files.pythonhosted.org/packages/3c/fc/dd1f30d848a5878f8e820a861af433ea8b9f3404c9c7572f18d0a88dc64c/po-excel-translate-3.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "f12f3df676b850f5d9204166e809bb6d", "sha256": "2d7fac3ad4f27a4f1c93d7a8958855d9e7ac1ba4040b88f886186204c6228a65"}, "downloads": -1, "filename": "po_excel_translate-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f12f3df676b850f5d9204166e809bb6d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.2", "size": 10823, "upload_time": "2020-03-16T09:08:00", "upload_time_iso_8601": "2020-03-16T09:08:00.358855Z", "url": "https://files.pythonhosted.org/packages/83/43/db639d863fd50dbda322d603ccfdda8da8f980da4b86935a264ff9bd24c9/po_excel_translate-3.0.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f12f3df676b850f5d9204166e809bb6d", "sha256": "2d7fac3ad4f27a4f1c93d7a8958855d9e7ac1ba4040b88f886186204c6228a65"}, "downloads": -1, "filename": "po_excel_translate-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f12f3df676b850f5d9204166e809bb6d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.2", "size": 10823, "upload_time": "2020-03-16T09:08:00", "upload_time_iso_8601": "2020-03-16T09:08:00.358855Z", "url": "https://files.pythonhosted.org/packages/83/43/db639d863fd50dbda322d603ccfdda8da8f980da4b86935a264ff9bd24c9/po_excel_translate-3.0.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:52:03 2020"}