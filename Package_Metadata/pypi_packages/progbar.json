{"info": {"author": "Yves-Gwenael Bourhis", "author_email": "ygbourhis at gmail.com", "bugtrack_url": null, "classifiers": [], "description": "A simple progression bar by Yves-Gwenael Bourhis\n    \n    Usage:\n    ======\n    \n    Class ProgBar(name, lenght):\n    ----------------------------\n        name is a string\n        lenght is an integer which represents the number of elements in the bar\n        \n    Methods:\n    ========\n    \n    start():\n    --------\n        Start the progression bar in a thread\n        the progression and thread stop automaticaly when the \"percent\" property reaches 100%\n    \n    stop():\n    -------\n        Stop the progression bar and the thread\n        It is recommended to call the join() method after\n    \n    fill():\n    -------\n        Add an element to the bar, and match the corresponding percentage\n \n    isAlive():\n    ----------\n        Returns True if the bar's thread is running, False otherwise\n        \n    join():\n    -------\n        Wait until the threaded bar terminates.\n        It is recomended to call this method after a stop() call\n        \n    \n    properties:\n    ===========\n    \n    percent:\n    --------\n        percentage of the bar progression\n        \n    \n    Example Using step progression::\n\n        >>> def printatestbar1():\n        ...     bar = ProgBar('test1', 20)\n        ...     bar.start()\n        ...     while bar.isAlive():\n        ...         time.sleep(0.1)\n        ...         bar.fill()\n        ...     bar.join()\n        >>> printatestbar1()\n        test1 [####################] 100%\n        >>> \n    \n    Example Using percentage progression::\n\n        >>> def printatestbar2():\n        ...     bar = ProgBar('test2', 20)\n        ...     bar.start()\n        ...     while bar.isAlive():\n        ...         bar.percent += 1\n        ...         time.sleep(0.1)\n        ...     bar.join()\n        >>> printatestbar2()\n        test2 [####################] 100%\n        >>> \n    \n    Example Interupting the progression bar::\n\n        >>> def printatestbar3():\n        ...     bar = ProgBar('test3', 20)\n        ...     bar.start()\n        ...     while bar.isAlive():\n        ...         bar.percent += 1\n        ...         if bar.percent == 50:\n        ...             bar.stop()\n        ...             break\n        ...         time.sleep(0.1)\n        ...     bar.join()\n        >>> printatestbar3()\n        test3 [##########-         ]  50%\n        >>> \n    \n    \n\n    ===============\n    Release Notes :\n    ===============\n\n    Release 0.1:\n    ============\n\n    First Version\n\n    Release 0.2:\n    ============\n\n    Removed the destructor (__del__ method) because of:\n\n    + The Warning here:\n      http://docs.python.org/reference/datamodel.html#object.__del__\n\n    + Destroyed objects where not automaticaly removed by\n      the garbage collector as described here:\n      http://docs.python.org/library/gc.html#gc.garbage\n      Which could cause memory usage increase.\n\n    Release 0.3:\n    ============\n\n    Changed author's contact info.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "GNU General Public License version 2.0", "maintainer": null, "maintainer_email": null, "name": "progbar", "package_url": "https://pypi.org/project/progbar/", "platform": "Windows,Linux,Mac OS", "project_url": "https://pypi.org/project/progbar/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/progbar/0.3/", "requires_dist": null, "requires_python": null, "summary": "simple progression bar for shell scripts", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            A simple progression bar by Yves-Gwenael Bourhis<br>    <br>    Usage:<br>    ======<br>    <br>    Class ProgBar(name, lenght):<br>    ----------------------------<br>        name is a string<br>        lenght is an integer which represents the number of elements in the bar<br>        <br>    Methods:<br>    ========<br>    <br>    start():<br>    --------<br>        Start the progression bar in a thread<br>        the progression and thread stop automaticaly when the \"percent\" property reaches 100%<br>    <br>    stop():<br>    -------<br>        Stop the progression bar and the thread<br>        It is recommended to call the join() method after<br>    <br>    fill():<br>    -------<br>        Add an element to the bar, and match the corresponding percentage<br> <br>    isAlive():<br>    ----------<br>        Returns True if the bar's thread is running, False otherwise<br>        <br>    join():<br>    -------<br>        Wait until the threaded bar terminates.<br>        It is recomended to call this method after a stop() call<br>        <br>    <br>    properties:<br>    ===========<br>    <br>    percent:<br>    --------<br>        percentage of the bar progression<br>        <br>    <br>    Example Using step progression::<br><br>        &gt;&gt;&gt; def printatestbar1():<br>        ...     bar = ProgBar('test1', 20)<br>        ...     bar.start()<br>        ...     while bar.isAlive():<br>        ...         time.sleep(0.1)<br>        ...         bar.fill()<br>        ...     bar.join()<br>        &gt;&gt;&gt; printatestbar1()<br>        test1 [####################] 100%<br>        &gt;&gt;&gt; <br>    <br>    Example Using percentage progression::<br><br>        &gt;&gt;&gt; def printatestbar2():<br>        ...     bar = ProgBar('test2', 20)<br>        ...     bar.start()<br>        ...     while bar.isAlive():<br>        ...         bar.percent += 1<br>        ...         time.sleep(0.1)<br>        ...     bar.join()<br>        &gt;&gt;&gt; printatestbar2()<br>        test2 [####################] 100%<br>        &gt;&gt;&gt; <br>    <br>    Example Interupting the progression bar::<br><br>        &gt;&gt;&gt; def printatestbar3():<br>        ...     bar = ProgBar('test3', 20)<br>        ...     bar.start()<br>        ...     while bar.isAlive():<br>        ...         bar.percent += 1<br>        ...         if bar.percent == 50:<br>        ...             bar.stop()<br>        ...             break<br>        ...         time.sleep(0.1)<br>        ...     bar.join()<br>        &gt;&gt;&gt; printatestbar3()<br>        test3 [##########-         ]  50%<br>        &gt;&gt;&gt; <br>    <br>    <br><br>    ===============<br>    Release Notes :<br>    ===============<br><br>    Release 0.1:<br>    ============<br><br>    First Version<br><br>    Release 0.2:<br>    ============<br><br>    Removed the destructor (__del__ method) because of:<br><br>    + The Warning here:<br>      http://docs.python.org/reference/datamodel.html#object.__del__<br><br>    + Destroyed objects where not automaticaly removed by<br>      the garbage collector as described here:<br>      http://docs.python.org/library/gc.html#gc.garbage<br>      Which could cause memory usage increase.<br><br>    Release 0.3:<br>    ============<br><br>    Changed author's contact info.\n          </div>"}, "last_serial": 796720, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2931b30edbc03c1c6074df1be21706d0", "sha256": "95a781b0c769a1e49aa2ae115c43376e670c4945716be26650741deda2ff8e48"}, "downloads": -1, "filename": "progbar-0.1.tar.gz", "has_sig": false, "md5_digest": "2931b30edbc03c1c6074df1be21706d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2195, "upload_time": "2011-08-04T15:30:03", "upload_time_iso_8601": "2011-08-04T15:30:03.689897Z", "url": "https://files.pythonhosted.org/packages/8d/0c/7f9227607a9e7edbe8b44a49ff092383bab44d5311ca7bbc510a456dc57f/progbar-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "3bc52826330b93deb2aac6a7cd8cca2b", "sha256": "55d6bfcff1c7e02253af758051f14988202f664d2cdddaf704fabd357e7656c7"}, "downloads": -1, "filename": "progbar-0.2.tar.gz", "has_sig": false, "md5_digest": "3bc52826330b93deb2aac6a7cd8cca2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2593, "upload_time": "2011-10-07T11:17:14", "upload_time_iso_8601": "2011-10-07T11:17:14.680591Z", "url": "https://files.pythonhosted.org/packages/14/9b/5dc7cc7ee7cd8a161578fa9a59ef17db5c3e0e5ff478736379843d14f873/progbar-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "775a4d48c35ca1ea7b24b6189da2de2f", "sha256": "9f30c0fe98d8eeb74180530b56775cab234bd092247e41358d85bcc87516c235"}, "downloads": -1, "filename": "progbar-0.3.zip", "has_sig": false, "md5_digest": "775a4d48c35ca1ea7b24b6189da2de2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3517, "upload_time": "2012-02-17T21:06:58", "upload_time_iso_8601": "2012-02-17T21:06:58.743376Z", "url": "https://files.pythonhosted.org/packages/c6/d7/84b6eadb130e12383470401dd4f809f1893baf58a8a5316ea3de8fd1740a/progbar-0.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "775a4d48c35ca1ea7b24b6189da2de2f", "sha256": "9f30c0fe98d8eeb74180530b56775cab234bd092247e41358d85bcc87516c235"}, "downloads": -1, "filename": "progbar-0.3.zip", "has_sig": false, "md5_digest": "775a4d48c35ca1ea7b24b6189da2de2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3517, "upload_time": "2012-02-17T21:06:58", "upload_time_iso_8601": "2012-02-17T21:06:58.743376Z", "url": "https://files.pythonhosted.org/packages/c6/d7/84b6eadb130e12383470401dd4f809f1893baf58a8a5316ea3de8fd1740a/progbar-0.3.zip", "yanked": false}], "timestamp": "Fri May  8 03:17:27 2020"}