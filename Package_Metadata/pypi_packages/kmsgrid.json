{"info": {"author": "Kristian Evers", "author_email": "kreve@sdfe.dk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: ISC License (ISCL)", "Topic :: Scientific/Engineering :: GIS", "Topic :: Utilities"], "description": "###############################################################################\n                                  kmsgrid\n###############################################################################\n\n``kmsgrid`` is a small utility that makes it easy to work with the various\ndatum \n`grid files <ftp://ftp.sdfe.dk/download/transformationsprogram/Geoids2013.zip>`_\nmade by KMS/DTU for the transformation library TrLib (KMSTrans).\n\n\nUsing kmsgrid\n===============================================================================\n\n``kmsgrid`` is both a Python module and a command line utility.\n\n\nCommand line\n-------------------------------------------------------------------------------\n\nThe ``kmsgrid`` command line utility comprises two sub-utilities: \"info\"\nand \"translate\".\n\n::\n\n    $ kmsgrid --help\n    usage: kmsgrid [-h] {translate,info,help} ...\n\n    Read binary grid files from trlib.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n\n    Subcommands:\n      Valid subcommands\n\n      {translate,info,help}\n                            additional help\n\nInfo\n...............................................................................\n\nThe ``info`` sub-command is used for getting information about a grid.\nInformation can be queried about a single point, or about the entire file.\n::\n\n    $ kmsgrid info --help\n    usage: kmsgrid info [-h] [--datum] [--mode] [--point I J] grid\n\n    positional arguments:\n      grid         Binary grid file.\n\n    optional arguments:\n      -h, --help   show this help message and exit\n      --point I J  Value(s) at a grid index (I,J). Prints values from all\n                   dimensions of the grid.\n\n\nGet information about a 3D grid::\n\n  $ kmsgrid info nkgrf03vel.01\n        filename:  nkgrf03vel.01\n      dimensions:  3\n          latmin:  53.0\n          latmax:  73.0\n          lonmin:  3.0\n          lonmax:  40.0\n     data[0].min:  -0.96\n     data[0].max:  1.75\n    data[0].mean:  0.204704\n     data[1].min:  -1.65\n     data[1].max:  0.86\n    data[1].mean:  -0.194318\n     data[2].min:  -0.72\n     data[2].max:  9.97\n    data[2].mean:  2.34521\n            dlat:  0.0833333333333\n            dlon:  0.166666666667\n            nlat:  241\n            nlon:  223\n           datum:  ITRF19yy/20yy\n            mode:  KMSGrid\n       tabletype:  3D\n\nValues in a single grid cell at index 55,12::\n\n    $ kmsgrid info Geoids2013\\nkgrf03vel.01 --point 55 12\n    0.649999976158 -0.200000002980 -0.720000028610\n\n\nTranslate\n...............................................................................\n\nThe ``translate`` sub-command work similar to ``gdal_translate`` in that it\ntranslates from one format to another. In fact, behind the scenes, it uses GDAL\nto convert KMS grids to more common formats. Only a small subset of the\nGDAL formats available can be used with ``kmsgrid``.\n\n::\n\n    $ kmsgrid translate --help\n    usage: kmsgrid translate [-h] [--driver DRIVER]\n                             [--creation_options CREATION_OPTIONS]\n                             grid out dimensions [dimensions ...]\n\n    positional arguments:\n      grid                  Binary grid file.\n      out                   Name of output grid file\n      dimensions            List of dimensions in output grid, e.g. \"1 2\"\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --driver DRIVER, -d DRIVER\n                            Output format. Currently supports: GTiff, GTX, NTv2\n      --creation_options CREATION_OPTIONS, -co CREATION_OPTIONS\n                            Additional GDAL creation options. Must be formatted\n                            as \"PARAM1=foo PARAM2=bar\".\n\nTranslate the DVR90 geoid grid to GTX format::\n\n    $ kmsgrid translate --driver=GTX dvr90g2013.01 dvr90.gtx 1\n\nTranslate the NKG velocity model to two grids, one for the horizontal part in\nNTv2 format and one for the vertical part in GTX format:\n\n    $ kmsgrid translate --driver=NTv2 nkgrf03vel.01 nkgrf03vel_xy.gsb 1 2\n    $ kmsgrid translate --driver=GTX nkgrf03vel.01 nkgrf03vel_z.gtx 3\n\n\nAPI\n-------------------------------------------------------------------------------\n\nThis is just a simple example of how the API can be used::\n\n    from kmsgrid import KMSGrid\n\n    # print some useful info\n    grid = KMSGrid('dvr90g.2013.01')\n    print('Dimensions of grid: {0}'.format(grid.dims))\n    print('Datum of grid: {0}'.format(grid.datum))\n    print('Bounding boix of grid: [{0}, {1}, {2}, {3}'.format(\n        grid.lonmix, grid.latmin, grid.lonmax, grid.latmax))\n\n    # convert grid to a TIFF file\n    grid.export(filename='dvr90.tif', dimensions=1)\n\n\nInstalling\n===============================================================================\n\nClone the repository from GitHub and run the following command in the local\nrepository folder:\n\n::\n\n  $ python setup.py install\n\nAlternatively ``kmsgrid`` can be installed from the Python Package Index with\n``pip``::\n\n  pip install kmsgrid\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Kortforsyningen/kmsgrid", "keywords": "kms geodesy grids geoid datumshift gridshift", "license": "ISC", "maintainer": "", "maintainer_email": "", "name": "kmsgrid", "package_url": "https://pypi.org/project/kmsgrid/", "platform": "", "project_url": "https://pypi.org/project/kmsgrid/", "project_urls": {"Homepage": "https://github.com/Kortforsyningen/kmsgrid"}, "release_url": "https://pypi.org/project/kmsgrid/1.1.0/", "requires_dist": ["numpy", "gdal"], "requires_python": "", "summary": "Read and convert grids from KMS.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>kmsgrid</tt> is a small utility that makes it easy to work with the various\ndatum\n<a>grid files</a>\nmade by KMS/DTU for the transformation library TrLib (KMSTrans).</p>\n<div id=\"using-kmsgrid\">\n<h2>Using kmsgrid</h2>\n<p><tt>kmsgrid</tt> is both a Python module and a command line utility.</p>\n<div id=\"command-line\">\n<h3>Command line</h3>\n<p>The <tt>kmsgrid</tt> command line utility comprises two sub-utilities: \u201cinfo\u201d\nand \u201ctranslate\u201d.</p>\n<pre>$ kmsgrid --help\nusage: kmsgrid [-h] {translate,info,help} ...\n\nRead binary grid files from trlib.\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nSubcommands:\n  Valid subcommands\n\n  {translate,info,help}\n                        additional help\n</pre>\n<div id=\"info\">\n<h4>Info</h4>\n<p>The <tt>info</tt> sub-command is used for getting information about a grid.\nInformation can be queried about a single point, or about the entire file.</p>\n<pre>$ kmsgrid info --help\nusage: kmsgrid info [-h] [--datum] [--mode] [--point I J] grid\n\npositional arguments:\n  grid         Binary grid file.\n\noptional arguments:\n  -h, --help   show this help message and exit\n  --point I J  Value(s) at a grid index (I,J). Prints values from all\n               dimensions of the grid.\n</pre>\n<p>Get information about a 3D grid:</p>\n<pre>$ kmsgrid info nkgrf03vel.01\n      filename:  nkgrf03vel.01\n    dimensions:  3\n        latmin:  53.0\n        latmax:  73.0\n        lonmin:  3.0\n        lonmax:  40.0\n   data[0].min:  -0.96\n   data[0].max:  1.75\n  data[0].mean:  0.204704\n   data[1].min:  -1.65\n   data[1].max:  0.86\n  data[1].mean:  -0.194318\n   data[2].min:  -0.72\n   data[2].max:  9.97\n  data[2].mean:  2.34521\n          dlat:  0.0833333333333\n          dlon:  0.166666666667\n          nlat:  241\n          nlon:  223\n         datum:  ITRF19yy/20yy\n          mode:  KMSGrid\n     tabletype:  3D\n</pre>\n<p>Values in a single grid cell at index 55,12:</p>\n<pre>$ kmsgrid info Geoids2013\\nkgrf03vel.01 --point 55 12\n0.649999976158 -0.200000002980 -0.720000028610\n</pre>\n</div>\n<div id=\"translate\">\n<h4>Translate</h4>\n<p>The <tt>translate</tt> sub-command work similar to <tt>gdal_translate</tt> in that it\ntranslates from one format to another. In fact, behind the scenes, it uses GDAL\nto convert KMS grids to more common formats. Only a small subset of the\nGDAL formats available can be used with <tt>kmsgrid</tt>.</p>\n<pre>$ kmsgrid translate --help\nusage: kmsgrid translate [-h] [--driver DRIVER]\n                         [--creation_options CREATION_OPTIONS]\n                         grid out dimensions [dimensions ...]\n\npositional arguments:\n  grid                  Binary grid file.\n  out                   Name of output grid file\n  dimensions            List of dimensions in output grid, e.g. \"1 2\"\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --driver DRIVER, -d DRIVER\n                        Output format. Currently supports: GTiff, GTX, NTv2\n  --creation_options CREATION_OPTIONS, -co CREATION_OPTIONS\n                        Additional GDAL creation options. Must be formatted\n                        as \"PARAM1=foo PARAM2=bar\".\n</pre>\n<p>Translate the DVR90 geoid grid to GTX format:</p>\n<pre>$ kmsgrid translate --driver=GTX dvr90g2013.01 dvr90.gtx 1\n</pre>\n<p>Translate the NKG velocity model to two grids, one for the horizontal part in\nNTv2 format and one for the vertical part in GTX format:</p>\n<blockquote>\n$ kmsgrid translate \u2013driver=NTv2 nkgrf03vel.01 nkgrf03vel_xy.gsb 1 2\n$ kmsgrid translate \u2013driver=GTX nkgrf03vel.01 nkgrf03vel_z.gtx 3</blockquote>\n</div>\n</div>\n<div id=\"api\">\n<h3>API</h3>\n<p>This is just a simple example of how the API can be used:</p>\n<pre>from kmsgrid import KMSGrid\n\n# print some useful info\ngrid = KMSGrid('dvr90g.2013.01')\nprint('Dimensions of grid: {0}'.format(grid.dims))\nprint('Datum of grid: {0}'.format(grid.datum))\nprint('Bounding boix of grid: [{0}, {1}, {2}, {3}'.format(\n    grid.lonmix, grid.latmin, grid.lonmax, grid.latmax))\n\n# convert grid to a TIFF file\ngrid.export(filename='dvr90.tif', dimensions=1)\n</pre>\n</div>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>Clone the repository from GitHub and run the following command in the local\nrepository folder:</p>\n<pre>$ python setup.py install\n</pre>\n<p>Alternatively <tt>kmsgrid</tt> can be installed from the Python Package Index with\n<tt>pip</tt>:</p>\n<pre>pip install kmsgrid\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3260760, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4a065955820d89951ea8fe96caa5a8ab", "sha256": "69a2f5d8cd10df33ae899ecc2ce7077d3db4b49d2f621ea7fdd0a0ab151eadae"}, "downloads": -1, "filename": "kmsgrid-1.0.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "4a065955820d89951ea8fe96caa5a8ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10945, "upload_time": "2017-09-20T11:47:18", "upload_time_iso_8601": "2017-09-20T11:47:18.574811Z", "url": "https://files.pythonhosted.org/packages/ad/28/87c63b72c91e8f2eead23c2ceedd650b359341ce8cddb947d2ff2e6ab030/kmsgrid-1.0.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e16d9a52cff874a3ce05dce58ad5ce6", "sha256": "1539245f6e831dd4c633d690f84ced261c72c7cdab4917a29538186a56955b29"}, "downloads": -1, "filename": "kmsgrid-1.0.0-py2.7.egg", "has_sig": false, "md5_digest": "7e16d9a52cff874a3ce05dce58ad5ce6", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 13251, "upload_time": "2017-09-20T11:47:19", "upload_time_iso_8601": "2017-09-20T11:47:19.585608Z", "url": "https://files.pythonhosted.org/packages/18/d1/a9973a0150866e581a747469b084b18bb763d5738f9cb35a736c614e6fb8/kmsgrid-1.0.0-py2.7.egg", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "bb694eba76e6850554c1008b87b32867", "sha256": "08a13453c5435f7729513aca7184f4f153844b2b9847daed53980b74392025fb"}, "downloads": -1, "filename": "kmsgrid-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bb694eba76e6850554c1008b87b32867", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10255, "upload_time": "2017-10-17T21:04:11", "upload_time_iso_8601": "2017-10-17T21:04:11.482054Z", "url": "https://files.pythonhosted.org/packages/39/b9/22e999e238446fe45f90574a19e05f1e664ca35d831daaaf3a8425a4d39f/kmsgrid-1.0.2-py2.py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "5cbd69c939bf2814cd1a9d1358afa4b1", "sha256": "c1eec7e6ff1a7825b58938e13ed8bdf426d1521485dc1c9401907fdd38ef183e"}, "downloads": -1, "filename": "kmsgrid-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5cbd69c939bf2814cd1a9d1358afa4b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10258, "upload_time": "2017-10-18T19:05:08", "upload_time_iso_8601": "2017-10-18T19:05:08.106003Z", "url": "https://files.pythonhosted.org/packages/9f/f8/19f2cc8c67ca0ada31ea6934c2ecd838e070e0c98c4c15a977f4f83e92dd/kmsgrid-1.1.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5cbd69c939bf2814cd1a9d1358afa4b1", "sha256": "c1eec7e6ff1a7825b58938e13ed8bdf426d1521485dc1c9401907fdd38ef183e"}, "downloads": -1, "filename": "kmsgrid-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5cbd69c939bf2814cd1a9d1358afa4b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10258, "upload_time": "2017-10-18T19:05:08", "upload_time_iso_8601": "2017-10-18T19:05:08.106003Z", "url": "https://files.pythonhosted.org/packages/9f/f8/19f2cc8c67ca0ada31ea6934c2ecd838e070e0c98c4c15a977f4f83e92dd/kmsgrid-1.1.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:49:16 2020"}