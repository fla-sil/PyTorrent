{"info": {"author": "SignalFx, Inc.", "author_email": "signalfx-oss@splunk.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "####################\nRequests OpenTracing\n####################\n\nThis package enables tracing http requests in a `Requests`_ ``Session`` via `The OpenTracing Project`_. \nOnce a production system contends with real concurrency or splits into many services, crucial (and\nformerly easy) tasks become difficult: user-facing latency optimization, root-cause analysis of backend\nerrors, communication about distinct pieces of a now-distributed system, etc. Distributed tracing\nfollows a request on its journey from inception to completion from mobile/browser all the way to the\nmicroservices. \n\nAs core services and libraries adopt OpenTracing, the application builder is no longer burdened with\nthe task of adding basic tracing instrumentation to their own code. In this way, developers can build\ntheir applications with the tools they prefer and benefit from built-in tracing instrumentation.\nOpenTracing implementations exist for major distributed tracing systems and can be bound or swapped\nwith a one-line configuration change.\n\nIf you want to learn more about the underlying Python API, visit the Python `source code`_.\n\n.. _Requests: http://docs.python-requests.org/en/master/\n.. _The OpenTracing Project: http://opentracing.io/\n.. _source code: https://github.com/signalfx/python-requests/\n\nInstallation\n============\n\nRun the following command:\n\n.. code-block:: \n\n    $ pip install requests-opentracing\n\nUsage\n=====\n\nThe provided ``requests.Session`` subclass allows the tracing of http methods using the OpenTracing API.\nAll that it requires is for a ``SessionTracing`` instance to be initialized using an instance\nof an OpenTracing tracer and treated as a standard Requests session.\n\nInitialize\n----------\n\n``SessionTracing`` takes the ``Tracer`` instance that is supported by OpenTracing and an optional\ndictionary of desired tags for each created span. You can also specify whether you'd like your\ncurrent trace context to be propagated via http headers with your client request.  To create a\n``SessionTracing`` object, you can either pass in a tracer object directly or default to the\n``opentracing.tracer`` global tracer that's set elsewhere in your application:\n\n.. code-block:: python\n\n    from requests_opentracing import SessionTracing\n\n    opentracing_tracer = # some OpenTracing tracer implementation\n    traced_session = SessionTracing(opentracing_tracer, propagate=False,  # propagation allows distributed tracing in\n                                    span_tags=dict(my_helpful='tag'))     # upstream services you control (True by default).\n    resp = traced_session.get(my_url)\n\nor\n\n.. code-block:: python\n\n    from requests_opentracing import SessionTracing\n    import opentracing\n    import requests\n\n    opentracing.tracer = # some OpenTracing tracer implementation\n    traced_session = SessionTracing()  # default to opentracing.tracer\n\nYou can now monkeypatch the ``requests.Session`` and ``requests.sessions.Session`` objects to point to the\n``SessionTracing`` subclass for easier initialization:\n\n.. code-block:: python\n\n    from requests_opentracing import monkeypatch_requests\n\n    monkeypatch_requests()\n\n\n    from requests import Session\n\n    opentracing_tracer = # some OpenTracing tracer implementation\n    traced_session = Session(opentracing_tracer, propagate=False,  # Same arguments as provided to SessionTracing\n                             span_tags=dict(my_helpful='tag'))\n    resp = traced_session.get(my_url)\n\nFurther Information\n===================\n\nIf you're interested in learning more about the OpenTracing standard, please visit\n`opentracing.io`_ or `join the mailing list`_. If you would like to implement OpenTracing\nin your project and need help, feel free to send us a note at `community@opentracing.io`_.\n\n.. _opentracing.io: http://opentracing.io/\n.. _join the mailing list: http://opentracing.us13.list-manage.com/subscribe?u=180afe03860541dae59e84153&id=19117aa6cd\n.. _community@opentracing.io: community@opentracing.io", "description_content_type": "", "docs_url": null, "download_url": "http://github.com/opentracing-contrib/python-requests/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/opentracing-contrib/python-requests", "keywords": "", "license": "Apache Software License v2", "maintainer": "", "maintainer_email": "", "name": "Requests-OpenTracing", "package_url": "https://pypi.org/project/Requests-OpenTracing/", "platform": "any", "project_url": "https://pypi.org/project/Requests-OpenTracing/", "project_urls": {"Download": "http://github.com/opentracing-contrib/python-requests/tarball/master", "Homepage": "http://github.com/opentracing-contrib/python-requests"}, "release_url": "https://pypi.org/project/Requests-OpenTracing/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "OpenTracing support for Requests", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package enables tracing http requests in a <a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">Requests</a> <tt>Session</tt> via <a href=\"http://opentracing.io/\" rel=\"nofollow\">The OpenTracing Project</a>.\nOnce a production system contends with real concurrency or splits into many services, crucial (and\nformerly easy) tasks become difficult: user-facing latency optimization, root-cause analysis of backend\nerrors, communication about distinct pieces of a now-distributed system, etc. Distributed tracing\nfollows a request on its journey from inception to completion from mobile/browser all the way to the\nmicroservices.</p>\n<p>As core services and libraries adopt OpenTracing, the application builder is no longer burdened with\nthe task of adding basic tracing instrumentation to their own code. In this way, developers can build\ntheir applications with the tools they prefer and benefit from built-in tracing instrumentation.\nOpenTracing implementations exist for major distributed tracing systems and can be bound or swapped\nwith a one-line configuration change.</p>\n<p>If you want to learn more about the underlying Python API, visit the Python <a href=\"https://github.com/signalfx/python-requests/\" rel=\"nofollow\">source code</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Run the following command:</p>\n<pre>$ pip install requests-opentracing\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The provided <tt>requests.Session</tt> subclass allows the tracing of http methods using the OpenTracing API.\nAll that it requires is for a <tt>SessionTracing</tt> instance to be initialized using an instance\nof an OpenTracing tracer and treated as a standard Requests session.</p>\n<div id=\"initialize\">\n<h3>Initialize</h3>\n<p><tt>SessionTracing</tt> takes the <tt>Tracer</tt> instance that is supported by OpenTracing and an optional\ndictionary of desired tags for each created span. You can also specify whether you\u2019d like your\ncurrent trace context to be propagated via http headers with your client request.  To create a\n<tt>SessionTracing</tt> object, you can either pass in a tracer object directly or default to the\n<tt>opentracing.tracer</tt> global tracer that\u2019s set elsewhere in your application:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">requests_opentracing</span> <span class=\"kn\">import</span> <span class=\"n\">SessionTracing</span>\n\n<span class=\"n\">opentracing_tracer</span> <span class=\"o\">=</span> <span class=\"c1\"># some OpenTracing tracer implementation</span>\n<span class=\"n\">traced_session</span> <span class=\"o\">=</span> <span class=\"n\">SessionTracing</span><span class=\"p\">(</span><span class=\"n\">opentracing_tracer</span><span class=\"p\">,</span> <span class=\"n\">propagate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>  <span class=\"c1\"># propagation allows distributed tracing in</span>\n                                <span class=\"n\">span_tags</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">my_helpful</span><span class=\"o\">=</span><span class=\"s1\">'tag'</span><span class=\"p\">))</span>     <span class=\"c1\"># upstream services you control (True by default).</span>\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">traced_session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">my_url</span><span class=\"p\">)</span>\n</pre>\n<p>or</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">requests_opentracing</span> <span class=\"kn\">import</span> <span class=\"n\">SessionTracing</span>\n<span class=\"kn\">import</span> <span class=\"nn\">opentracing</span>\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"n\">opentracing</span><span class=\"o\">.</span><span class=\"n\">tracer</span> <span class=\"o\">=</span> <span class=\"c1\"># some OpenTracing tracer implementation</span>\n<span class=\"n\">traced_session</span> <span class=\"o\">=</span> <span class=\"n\">SessionTracing</span><span class=\"p\">()</span>  <span class=\"c1\"># default to opentracing.tracer</span>\n</pre>\n<p>You can now monkeypatch the <tt>requests.Session</tt> and <tt>requests.sessions.Session</tt> objects to point to the\n<tt>SessionTracing</tt> subclass for easier initialization:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">requests_opentracing</span> <span class=\"kn\">import</span> <span class=\"n\">monkeypatch_requests</span>\n\n<span class=\"n\">monkeypatch_requests</span><span class=\"p\">()</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">requests</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n\n<span class=\"n\">opentracing_tracer</span> <span class=\"o\">=</span> <span class=\"c1\"># some OpenTracing tracer implementation</span>\n<span class=\"n\">traced_session</span> <span class=\"o\">=</span> <span class=\"n\">Session</span><span class=\"p\">(</span><span class=\"n\">opentracing_tracer</span><span class=\"p\">,</span> <span class=\"n\">propagate</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>  <span class=\"c1\"># Same arguments as provided to SessionTracing</span>\n                         <span class=\"n\">span_tags</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">my_helpful</span><span class=\"o\">=</span><span class=\"s1\">'tag'</span><span class=\"p\">))</span>\n<span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">traced_session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">my_url</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"further-information\">\n<h2>Further Information</h2>\n<p>If you\u2019re interested in learning more about the OpenTracing standard, please visit\n<a href=\"http://opentracing.io/\" rel=\"nofollow\">opentracing.io</a> or <a href=\"http://opentracing.us13.list-manage.com/subscribe?u=180afe03860541dae59e84153&amp;id=19117aa6cd\" rel=\"nofollow\">join the mailing list</a>. If you would like to implement OpenTracing\nin your project and need help, feel free to send us a note at <a href=\"mailto:community%40opentracing.io\">community<span>@</span>opentracing<span>.</span>io</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6077426, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5ccdcd1446220214969a567f17d4c35c", "sha256": "ab6c5d808f35e59f6754da54bee2fa8bde3c2bb2977ae94f050f7600d7bc4589"}, "downloads": -1, "filename": "Requests-OpenTracing-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5ccdcd1446220214969a567f17d4c35c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3960, "upload_time": "2018-12-13T20:08:40", "upload_time_iso_8601": "2018-12-13T20:08:40.422862Z", "url": "https://files.pythonhosted.org/packages/52/e1/c0bb499056b249870454c728b42116179931a5481e3465c3469aef59eb74/Requests-OpenTracing-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e0949ea44c030a232abf480e7bde1c7a", "sha256": "1635cce5217912c2baf0d7470d71f20f73f031beddc03078fc9f4cf8b909198e"}, "downloads": -1, "filename": "Requests-OpenTracing-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e0949ea44c030a232abf480e7bde1c7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4127, "upload_time": "2019-11-04T20:26:15", "upload_time_iso_8601": "2019-11-04T20:26:15.657723Z", "url": "https://files.pythonhosted.org/packages/29/40/dfa41a790459eaadaa63035cf80245155293f29c63325afcc94e00b5cdb1/Requests-OpenTracing-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "0fc9bcd5ccfbc3375a5593b0baf9793f", "sha256": "341ad8ad972eb916d2f33809bd094a0269f95e5e4395c9daee7468bccc67d53c"}, "downloads": -1, "filename": "Requests-OpenTracing-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0fc9bcd5ccfbc3375a5593b0baf9793f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4148, "upload_time": "2019-11-04T20:26:54", "upload_time_iso_8601": "2019-11-04T20:26:54.705474Z", "url": "https://files.pythonhosted.org/packages/d5/46/21cb193a1272946ff5ced42983d008a4a33852c28252e3dc309e32cc0be2/Requests-OpenTracing-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0fc9bcd5ccfbc3375a5593b0baf9793f", "sha256": "341ad8ad972eb916d2f33809bd094a0269f95e5e4395c9daee7468bccc67d53c"}, "downloads": -1, "filename": "Requests-OpenTracing-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0fc9bcd5ccfbc3375a5593b0baf9793f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4148, "upload_time": "2019-11-04T20:26:54", "upload_time_iso_8601": "2019-11-04T20:26:54.705474Z", "url": "https://files.pythonhosted.org/packages/d5/46/21cb193a1272946ff5ced42983d008a4a33852c28252e3dc309e32cc0be2/Requests-OpenTracing-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:02 2020"}