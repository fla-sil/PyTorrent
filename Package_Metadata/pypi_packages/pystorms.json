{"info": {"author": "Abhiram Mullapudi, Sara C. Troutman, Sara Rimer, Branko Kerkez", "author_email": "abhiramm@umich.edu, stroutm@umich.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pystorms: simulation sandbox for the evaluation and design of stormwater control algorithms\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://www.gnu.org/licenses/gpl-3.0)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\n## Overview \n\nThis library has been developed in an effort to systematize quantitative analysis of stormwater control algorithms.\nIt is a natural extension of the Open-Storm's mission to open up and ease access into the technical world of smart stormwater systems.\n Our initial efforts allowed us to develop open source and free tools for anyone to be able to deploy flood sensors, measure green infrastructure, or even control storm or sewer systems.\n Now we have developed a tool to be able to test the performance of algorithms used to coordinate these different sensing and control technologies that have been deployed throughout urban water systems.    \n\nFor the motivation behind this effort, we refer the reader to our manuscript [*pystorms*](https://dl.acm.org/citation.cfm?id=3313336). In general, this repo provides three components:\n\n1. A library of `scenarios` that are built to allow for systematic quantitative evaluation of stormwater control algorithms, \n2. A stormwater hydraulic simulator named `pyswmm_lite` and forked heavily from OWA's [SWMM](https://github.com/kLabUM/Stormwater-Management-Model.git) and [pyswmm](https://github.com/kLabUM/pyswmm_lite.git), and\n3. An `environment` script that links the `pyswmm_lite` simulator to the `scenarios`, and can be edited/updated by users who might want to interface the `scenarios` with other stormwater simulator software (the `environment` script is included in `pyswmm-lite`).\n\nThis is a alpha version of the library, eventually `pyswmm_lite` dependency would be deprecated in the favour of `pyswmm`\n\n## Getting Started \n\n### Installation \n\n**Requirements**\n\n- python 3+\n- numpy\n- pyswmm_lite\n\n```bash \npip install pyswmm_lite\npip install pystorms\n```\nPlease raise an issue on the repository or reach out if you run into any issues installing the package. \n\n### Example \n\nHere is an example implementation on how you would use this library for evaluating the ability of a rule based control in maintaining the flows in a network below a desired threshold. \n\n```python \nimport pystorms \nimport numpy as np\n\n# Define your awesome controller \ndef controller(state):\n\tactions = np.ones(len(state))\n\tfor i in range(0, len(state)):\n\t\tif state[i] > 0.5:\n\t\t\tactions[i] = 1.0\n\treturn actions \n\n\nenv = pystorms.scenarios.theta() # Initialize scenario \n\ndone = False\nwhile not done:\n\tstate = env.state()\n\tactions = controller(state)\n\tdone = env.step(actions)\n\nperformance = env.performance()\n\n```\n\nDetailed documentation can be found on the [webpage](https://klabum.github.io/pystorms/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kLabUM/pystorms", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pystorms", "package_url": "https://pypi.org/project/pystorms/", "platform": "", "project_url": "https://pypi.org/project/pystorms/", "project_urls": {"Homepage": "https://github.com/kLabUM/pystorms"}, "release_url": "https://pypi.org/project/pystorms/0.1.2/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Simulation Sandbox for the development and evaluation of stormwater control algorithms", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pystorms: simulation sandbox for the evaluation and design of stormwater control algorithms</h1>\n<p><a href=\"https://www.gnu.org/licenses/gpl-3.0\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a>\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<h2>Overview</h2>\n<p>This library has been developed in an effort to systematize quantitative analysis of stormwater control algorithms.\nIt is a natural extension of the Open-Storm's mission to open up and ease access into the technical world of smart stormwater systems.\nOur initial efforts allowed us to develop open source and free tools for anyone to be able to deploy flood sensors, measure green infrastructure, or even control storm or sewer systems.\nNow we have developed a tool to be able to test the performance of algorithms used to coordinate these different sensing and control technologies that have been deployed throughout urban water systems.</p>\n<p>For the motivation behind this effort, we refer the reader to our manuscript <a href=\"https://dl.acm.org/citation.cfm?id=3313336\" rel=\"nofollow\"><em>pystorms</em></a>. In general, this repo provides three components:</p>\n<ol>\n<li>A library of <code>scenarios</code> that are built to allow for systematic quantitative evaluation of stormwater control algorithms,</li>\n<li>A stormwater hydraulic simulator named <code>pyswmm_lite</code> and forked heavily from OWA's <a href=\"https://github.com/kLabUM/Stormwater-Management-Model.git\" rel=\"nofollow\">SWMM</a> and <a href=\"https://github.com/kLabUM/pyswmm_lite.git\" rel=\"nofollow\">pyswmm</a>, and</li>\n<li>An <code>environment</code> script that links the <code>pyswmm_lite</code> simulator to the <code>scenarios</code>, and can be edited/updated by users who might want to interface the <code>scenarios</code> with other stormwater simulator software (the <code>environment</code> script is included in <code>pyswmm-lite</code>).</li>\n</ol>\n<p>This is a alpha version of the library, eventually <code>pyswmm_lite</code> dependency would be deprecated in the favour of <code>pyswmm</code></p>\n<h2>Getting Started</h2>\n<h3>Installation</h3>\n<p><strong>Requirements</strong></p>\n<ul>\n<li>python 3+</li>\n<li>numpy</li>\n<li>pyswmm_lite</li>\n</ul>\n<pre>pip install pyswmm_lite\npip install pystorms\n</pre>\n<p>Please raise an issue on the repository or reach out if you run into any issues installing the package.</p>\n<h3>Example</h3>\n<p>Here is an example implementation on how you would use this library for evaluating the ability of a rule based control in maintaining the flows in a network below a desired threshold.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pystorms</span> \n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"c1\"># Define your awesome controller </span>\n<span class=\"k\">def</span> <span class=\"nf\">controller</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">):</span>\n\t<span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">))</span>\n\t<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">)):</span>\n\t\t<span class=\"k\">if</span> <span class=\"n\">state</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mf\">0.5</span><span class=\"p\">:</span>\n\t\t\t<span class=\"n\">actions</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n\t<span class=\"k\">return</span> <span class=\"n\">actions</span> \n\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">pystorms</span><span class=\"o\">.</span><span class=\"n\">scenarios</span><span class=\"o\">.</span><span class=\"n\">theta</span><span class=\"p\">()</span> <span class=\"c1\"># Initialize scenario </span>\n\n<span class=\"n\">done</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">done</span><span class=\"p\">:</span>\n\t<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"p\">()</span>\n\t<span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"n\">controller</span><span class=\"p\">(</span><span class=\"n\">state</span><span class=\"p\">)</span>\n\t<span class=\"n\">done</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">actions</span><span class=\"p\">)</span>\n\n<span class=\"n\">performance</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">performance</span><span class=\"p\">()</span>\n</pre>\n<p>Detailed documentation can be found on the <a href=\"https://klabum.github.io/pystorms/\" rel=\"nofollow\">webpage</a></p>\n\n          </div>"}, "last_serial": 6236775, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "30512aa0851514cdc3ccb299ece977a7", "sha256": "1f931299e09cf3b5d5b0906a4da5f3b61a1fd37810dd23dc0f97e2b41a348d82"}, "downloads": -1, "filename": "pystorms-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "30512aa0851514cdc3ccb299ece977a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 31859, "upload_time": "2019-11-15T11:24:41", "upload_time_iso_8601": "2019-11-15T11:24:41.038127Z", "url": "https://files.pythonhosted.org/packages/6d/5b/366e73e465c9a26cfb9cd9d25d08785556fa6f9c1f6170802783bb4b7505/pystorms-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fc372ced9cf2eb33ba9c85376823fd8", "sha256": "903a6736e722c3f17233265e18793f9481357e1b1c1a86a7dd40bb9c283d5b7b"}, "downloads": -1, "filename": "pystorms-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8fc372ced9cf2eb33ba9c85376823fd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20745, "upload_time": "2019-11-15T11:24:42", "upload_time_iso_8601": "2019-11-15T11:24:42.538884Z", "url": "https://files.pythonhosted.org/packages/85/c7/4a027d3e409a982ef99d328755f11d3cdba4760721b4bc340aa9bd393ac1/pystorms-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1e952704757e0a06635ab6cd0103ba02", "sha256": "40f9cfc10db62f9f29702b640135d98f34870b54d88abf2c7cb3ea3103ed203d"}, "downloads": -1, "filename": "pystorms-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1e952704757e0a06635ab6cd0103ba02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32425, "upload_time": "2019-12-03T19:25:46", "upload_time_iso_8601": "2019-12-03T19:25:46.727440Z", "url": "https://files.pythonhosted.org/packages/02/49/1f1e8039f1b54b66545f50e622653276bff3c092a2a2fb80adcc251fe68c/pystorms-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b365f572bd73fd438e6623dd10bf44b4", "sha256": "16d1ffe99f01a452799563c9c4102bd0fb1eb3f208361c933408a7fd9b6e138e"}, "downloads": -1, "filename": "pystorms-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b365f572bd73fd438e6623dd10bf44b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20114, "upload_time": "2019-12-03T19:25:48", "upload_time_iso_8601": "2019-12-03T19:25:48.324285Z", "url": "https://files.pythonhosted.org/packages/80/69/f4c8947dd52f656bc752997cf6d067aee376c5e02ef3c1c06d0a75e2bf3d/pystorms-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1e952704757e0a06635ab6cd0103ba02", "sha256": "40f9cfc10db62f9f29702b640135d98f34870b54d88abf2c7cb3ea3103ed203d"}, "downloads": -1, "filename": "pystorms-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1e952704757e0a06635ab6cd0103ba02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32425, "upload_time": "2019-12-03T19:25:46", "upload_time_iso_8601": "2019-12-03T19:25:46.727440Z", "url": "https://files.pythonhosted.org/packages/02/49/1f1e8039f1b54b66545f50e622653276bff3c092a2a2fb80adcc251fe68c/pystorms-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b365f572bd73fd438e6623dd10bf44b4", "sha256": "16d1ffe99f01a452799563c9c4102bd0fb1eb3f208361c933408a7fd9b6e138e"}, "downloads": -1, "filename": "pystorms-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b365f572bd73fd438e6623dd10bf44b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20114, "upload_time": "2019-12-03T19:25:48", "upload_time_iso_8601": "2019-12-03T19:25:48.324285Z", "url": "https://files.pythonhosted.org/packages/80/69/f4c8947dd52f656bc752997cf6d067aee376c5e02ef3c1c06d0a75e2bf3d/pystorms-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:55 2020"}