{"info": {"author": "Carlos Descalzi", "author_email": "carlos.descalzi@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PODM: (P)ython (O)bject - (D)ictionary (M)apper\n\nThis library is intended to create objects that easily serialize to dictionaries that can be later stored as JSON or YAML.\nIt is intended as a replacement of jsonpickle for cases where jsonpickle output format is not good at all.\n\nOnly available for Python3\n\n## Installation\n\n```\n\tpip3 install podm\n```\n\n## Some use case samples\n\n```\nfrom podm import JsonObject, Property, Handler\n\nclass DateTimeHandler(Handler):\n\t\"\"\"\n\tDefine a custom handler for datetime objects\n\t\"\"\"\n\tdef encode(self, obj):\n\t\treturn {\n\t\t\t'year' : obj.year,\n\t\t\t'month' : obj.month,\n\t\t\t'day' : obj.day,\n\t\t\t'hour' : obj.hour,\n\t\t\t'minute' : obj.minute,\n\t\t\t'second' : obj.second,\n\t\t\t'microsecond' : obj.microsecond\n\t\t}\n\n\tdef decode(self, obj_data):\n\t\treturn datetime(**obj_data)\n\nclass Entity(JsonObject):\n\t\"\"\"\n\tA base class for the object model\n\t\"\"\"\n\toid = Property()\n\tcreated = Property('created', handler=DateTimeHandler(), default=datetime.now) # Default value when object is instantiated\n\nclass Company(Entity):\n\tcompany_name = Property('company-name') # Specify a different field name in json.\n\tdescription = Property()        \n\nclass Sector(Entity):\n\temployees = Property('employees', default=[])\n\nclass Employee(Entity):\n\tname = Property()\n\ncompany = Company(\n  name='My great company',\n  description='....'\n)\n\njson_data = company.to_dict()\n\ncompany_2 = Company.from_dict(json_data)\n```\n## Deserialize a dictionary with no type information.\n\n```\ndata = {\n\t'company-name' : 'master',\n\t'description'  : 'some description'\n}\ncompany = Company.from_dict(data)\n```\n\n## Deserialize a dictionary with type information\nUses the same field as jsonpickle.\n\n```\ndata = {\n\t'py/object' : 'Company',\n\t'company-name' : 'master',\n\t'description'  : 'some description'\n}\ncompany = JsonObject.parse(data) \n```\n\n## Jsonpickle format support\n```\ndata = {\n\t'py/object' : 'Company',\n\t'py/state': {\n\t\t'company-name' : 'master',\n\t\t'description'  : 'some description'\n\t}\n}\ncompany = JsonObject.parse(data) \n\n```\n\n## Automatically generated getters/setters. \nIf they are declared property accessors will use them instead.\n```\n\nclass Company(JsonObject):\n\tcompany_name = Property('company-name') # Specify a different field name in json.\n\n# Automatically generated getter\ncompany_name = company.get_company_name()\n\n# Also property accessors\ncompany_name = company.company_name\n\n# And private attributes\ncompany_name = company._company_name\n```\n\n## Write custom getters and setters\n```\n\nclass Company(JsonObject):\n\tcompany_name = Property('company-name') # Specify a different field name in json.\n\n\tdef get_company_name(self):\n\t\tprint('Getter called!!!')\n\t\t# generated attribute\n\t\treturn self._company_name\n\n# So, when calling the property getter ...\ncompany_name = company.company_name\n\n# will print 'Getter called!!!'\n```\n\n## OrderedDict support\n```\n\nserialized = company.to_dict(OrderedDict)\n# serialized data is instance of OrderedDict\n\nclass TestObject(JsonObject):\n\tval1 = Property()\n\nobj = TestObject()\nobj.val1 = OrderedDict(key1='value1')\n\nserialized = company.to_dict()\n# serialized will be instance of dict, field 'val1' will be instance of OrderedDict\n```\n### Enum support\nIt is possible to decide how to serialize/deserialize enums.\n```\nclass InvoiceType(Enum):\n\tTYPE_A = 1\n\tTYPE_B = 2\n\n\nclass Invoice(JsonObject):\n\tinvoice_type = Property(type=InvoiceType, enum_as_str=True)\n\n\ninvoice = Invoice(invoice_type=InvoiceType.TYPE_A)\n\nserialized = invoice.to_dict()\n\nprint(serialized['invice_type'])\n# Will print 'TYPE_A'\n\nclass Invoice(JsonObject):\n\tinvoice_type = Property(type=InvoiceType)\n\n\ninvoice = Invoice(invoice_type=InvoiceType.TYPE_A)\n\nserializd = invoice.to_dict()\nprint(serialized['invoice_type'])\n# Will print 1\n\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Carlos-Descalzi/podm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "podm", "package_url": "https://pypi.org/project/podm/", "platform": "", "project_url": "https://pypi.org/project/podm/", "project_urls": {"Homepage": "https://github.com/Carlos-Descalzi/podm"}, "release_url": "https://pypi.org/project/podm/0.0.5/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A Object-JSON Document mapper", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PODM: (P)ython (O)bject - (D)ictionary (M)apper</h1>\n<p>This library is intended to create objects that easily serialize to dictionaries that can be later stored as JSON or YAML.\nIt is intended as a replacement of jsonpickle for cases where jsonpickle output format is not good at all.</p>\n<p>Only available for Python3</p>\n<h2>Installation</h2>\n<pre><code>\tpip3 install podm\n</code></pre>\n<h2>Some use case samples</h2>\n<pre><code>from podm import JsonObject, Property, Handler\n\nclass DateTimeHandler(Handler):\n\t\"\"\"\n\tDefine a custom handler for datetime objects\n\t\"\"\"\n\tdef encode(self, obj):\n\t\treturn {\n\t\t\t'year' : obj.year,\n\t\t\t'month' : obj.month,\n\t\t\t'day' : obj.day,\n\t\t\t'hour' : obj.hour,\n\t\t\t'minute' : obj.minute,\n\t\t\t'second' : obj.second,\n\t\t\t'microsecond' : obj.microsecond\n\t\t}\n\n\tdef decode(self, obj_data):\n\t\treturn datetime(**obj_data)\n\nclass Entity(JsonObject):\n\t\"\"\"\n\tA base class for the object model\n\t\"\"\"\n\toid = Property()\n\tcreated = Property('created', handler=DateTimeHandler(), default=datetime.now) # Default value when object is instantiated\n\nclass Company(Entity):\n\tcompany_name = Property('company-name') # Specify a different field name in json.\n\tdescription = Property()        \n\nclass Sector(Entity):\n\temployees = Property('employees', default=[])\n\nclass Employee(Entity):\n\tname = Property()\n\ncompany = Company(\n  name='My great company',\n  description='....'\n)\n\njson_data = company.to_dict()\n\ncompany_2 = Company.from_dict(json_data)\n</code></pre>\n<h2>Deserialize a dictionary with no type information.</h2>\n<pre><code>data = {\n\t'company-name' : 'master',\n\t'description'  : 'some description'\n}\ncompany = Company.from_dict(data)\n</code></pre>\n<h2>Deserialize a dictionary with type information</h2>\n<p>Uses the same field as jsonpickle.</p>\n<pre><code>data = {\n\t'py/object' : 'Company',\n\t'company-name' : 'master',\n\t'description'  : 'some description'\n}\ncompany = JsonObject.parse(data) \n</code></pre>\n<h2>Jsonpickle format support</h2>\n<pre><code>data = {\n\t'py/object' : 'Company',\n\t'py/state': {\n\t\t'company-name' : 'master',\n\t\t'description'  : 'some description'\n\t}\n}\ncompany = JsonObject.parse(data) \n\n</code></pre>\n<h2>Automatically generated getters/setters.</h2>\n<p>If they are declared property accessors will use them instead.</p>\n<pre><code>\nclass Company(JsonObject):\n\tcompany_name = Property('company-name') # Specify a different field name in json.\n\n# Automatically generated getter\ncompany_name = company.get_company_name()\n\n# Also property accessors\ncompany_name = company.company_name\n\n# And private attributes\ncompany_name = company._company_name\n</code></pre>\n<h2>Write custom getters and setters</h2>\n<pre><code>\nclass Company(JsonObject):\n\tcompany_name = Property('company-name') # Specify a different field name in json.\n\n\tdef get_company_name(self):\n\t\tprint('Getter called!!!')\n\t\t# generated attribute\n\t\treturn self._company_name\n\n# So, when calling the property getter ...\ncompany_name = company.company_name\n\n# will print 'Getter called!!!'\n</code></pre>\n<h2>OrderedDict support</h2>\n<pre><code>\nserialized = company.to_dict(OrderedDict)\n# serialized data is instance of OrderedDict\n\nclass TestObject(JsonObject):\n\tval1 = Property()\n\nobj = TestObject()\nobj.val1 = OrderedDict(key1='value1')\n\nserialized = company.to_dict()\n# serialized will be instance of dict, field 'val1' will be instance of OrderedDict\n</code></pre>\n<h3>Enum support</h3>\n<p>It is possible to decide how to serialize/deserialize enums.</p>\n<pre><code>class InvoiceType(Enum):\n\tTYPE_A = 1\n\tTYPE_B = 2\n\n\nclass Invoice(JsonObject):\n\tinvoice_type = Property(type=InvoiceType, enum_as_str=True)\n\n\ninvoice = Invoice(invoice_type=InvoiceType.TYPE_A)\n\nserialized = invoice.to_dict()\n\nprint(serialized['invice_type'])\n# Will print 'TYPE_A'\n\nclass Invoice(JsonObject):\n\tinvoice_type = Property(type=InvoiceType)\n\n\ninvoice = Invoice(invoice_type=InvoiceType.TYPE_A)\n\nserializd = invoice.to_dict()\nprint(serialized['invoice_type'])\n# Will print 1\n\n</code></pre>\n\n          </div>"}, "last_serial": 6967794, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "f430e4bdbfca102ce7e646194e650e9e", "sha256": "5595a63a6d5167abe9b06f7af33d319aa5540a9b32ecf8a301bbe442b56c36a5"}, "downloads": -1, "filename": "podm-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f430e4bdbfca102ce7e646194e650e9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8415, "upload_time": "2019-12-16T20:16:04", "upload_time_iso_8601": "2019-12-16T20:16:04.714611Z", "url": "https://files.pythonhosted.org/packages/39/45/dc8be3223f2133d638844c0a99fcedfc66bfcc5a1261f87ed6b5c24f629b/podm-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba553094963c0f29f55243d044bfb49e", "sha256": "c61730d807541be8fd30f4e0aad11fbf2c8ddf6c79ca3fb0684813b6f67b4a03"}, "downloads": -1, "filename": "podm-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ba553094963c0f29f55243d044bfb49e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4915, "upload_time": "2019-12-16T20:16:07", "upload_time_iso_8601": "2019-12-16T20:16:07.802499Z", "url": "https://files.pythonhosted.org/packages/27/e4/a7a6388ec11b1cece4cb4e17eaa4ef995abfd6a72364540dcd0e8e46a161/podm-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2b6dd9b73d430b4ffbcf6e19b4f330d4", "sha256": "06ed5cdfc1322bc378902b646f907a1a50cb499eb605605282e63206d851db7c"}, "downloads": -1, "filename": "podm-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2b6dd9b73d430b4ffbcf6e19b4f330d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9005, "upload_time": "2019-12-29T01:44:15", "upload_time_iso_8601": "2019-12-29T01:44:15.516528Z", "url": "https://files.pythonhosted.org/packages/20/b6/12042ddf9dc44b4e65f391a292b2c02dcfe40db17c4157a83865f25c1664/podm-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18ace27ea79257ffe3e79b02de470830", "sha256": "7120cf41ef2c70267448b4d7fe56f4e9d00062d07e281028baef40f77c6b533d"}, "downloads": -1, "filename": "podm-0.0.3.tar.gz", "has_sig": false, "md5_digest": "18ace27ea79257ffe3e79b02de470830", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5740, "upload_time": "2019-12-29T01:44:16", "upload_time_iso_8601": "2019-12-29T01:44:16.804257Z", "url": "https://files.pythonhosted.org/packages/ab/32/7fb5a84d89027b31681b0155a5622a356953b21e11f94645c3164775b32f/podm-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "cf0167f38086b39ac38b23f31ac56a38", "sha256": "f9003abbc2c70234a4f6e30c0cb6c7d825cae1871c566c7b0fe329ac44f2ba0d"}, "downloads": -1, "filename": "podm-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cf0167f38086b39ac38b23f31ac56a38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9451, "upload_time": "2020-03-30T03:04:29", "upload_time_iso_8601": "2020-03-30T03:04:29.929890Z", "url": "https://files.pythonhosted.org/packages/d0/c2/8ecc8990c81af7f6fcce4662752b11ddc8d59986ce6376ad738445f2f039/podm-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bc598f4424157aeb7599cbfc430378a", "sha256": "cca4e9908db83a5f4d36cfb4c1c2352fa90b8aff16a843314b6af49364d5a2b0"}, "downloads": -1, "filename": "podm-0.0.4.tar.gz", "has_sig": false, "md5_digest": "9bc598f4424157aeb7599cbfc430378a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6294, "upload_time": "2020-03-30T03:04:31", "upload_time_iso_8601": "2020-03-30T03:04:31.391076Z", "url": "https://files.pythonhosted.org/packages/74/47/3a70d1bd7c576c5b4a4a0f0921018791db3c50dfeb14d72543cd26477e0b/podm-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ba506989a19143a3af0a2ab51e5f42d2", "sha256": "ad85c042e7c29aaf06f3149036d4c0b790449ae95b7784c72b823c77b7ba3579"}, "downloads": -1, "filename": "podm-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ba506989a19143a3af0a2ab51e5f42d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9555, "upload_time": "2020-04-07T09:08:31", "upload_time_iso_8601": "2020-04-07T09:08:31.722649Z", "url": "https://files.pythonhosted.org/packages/76/6d/cfbb9c933f54e43228ef1f3a7dd661b500554dd021499409c999aa235c0e/podm-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "709aefd43e82537fd1fdc0422fae311c", "sha256": "da2d543b7de1a8c3e0ae5fa910c568a49e1f46e8e100aa654bfedf2b950fda66"}, "downloads": -1, "filename": "podm-0.0.5.tar.gz", "has_sig": false, "md5_digest": "709aefd43e82537fd1fdc0422fae311c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6396, "upload_time": "2020-04-07T09:08:33", "upload_time_iso_8601": "2020-04-07T09:08:33.176746Z", "url": "https://files.pythonhosted.org/packages/32/66/03990f9982a7c53345d89427207e3f1cfe881dc1b8ce7700bae92bf82d0b/podm-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba506989a19143a3af0a2ab51e5f42d2", "sha256": "ad85c042e7c29aaf06f3149036d4c0b790449ae95b7784c72b823c77b7ba3579"}, "downloads": -1, "filename": "podm-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ba506989a19143a3af0a2ab51e5f42d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9555, "upload_time": "2020-04-07T09:08:31", "upload_time_iso_8601": "2020-04-07T09:08:31.722649Z", "url": "https://files.pythonhosted.org/packages/76/6d/cfbb9c933f54e43228ef1f3a7dd661b500554dd021499409c999aa235c0e/podm-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "709aefd43e82537fd1fdc0422fae311c", "sha256": "da2d543b7de1a8c3e0ae5fa910c568a49e1f46e8e100aa654bfedf2b950fda66"}, "downloads": -1, "filename": "podm-0.0.5.tar.gz", "has_sig": false, "md5_digest": "709aefd43e82537fd1fdc0422fae311c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6396, "upload_time": "2020-04-07T09:08:33", "upload_time_iso_8601": "2020-04-07T09:08:33.176746Z", "url": "https://files.pythonhosted.org/packages/32/66/03990f9982a7c53345d89427207e3f1cfe881dc1b8ce7700bae92bf82d0b/podm-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:06 2020"}