{"info": {"author": "ekinertac", "author_email": "ekinertac@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "A shameless clone of npm for managing python packages.\n\n### Do not take this project seriously\nit's just a `pip install` command with some features for personal needs.\n\n#### Installation\n\n    pip install pip-ppm\n\n#### requirements.json file initialization\n    \n    ppm init\n    \n`ppm init` command creates a file contains:\n\n    {\n      \"name\": \"test\",\n      \"version\": \"1.0.0\",\n      \"description\": \"\",\n      \"author\": \"\",\n      \"license\": \"ISC\",\n    }\n\n#### Install a package and save to the requirements.json file\n    \n    ppm install flask --save\n    ppm install flask==1 --save\n    ppm install flask ipython --save\n\n\nWhen you use `ppm install` command with `--save` flag, \nit's saving installed packages to the `requirements.json` file\n    \n    {   \n        ...\n        \"requirements\": {\n\t        \"django\": \"2\",\n            \"djangorestframework\": \"\"\n        }\n    }\n\n\n#### Install packages pre-defined in requirements.json file\n    \n    ppm install\n    ...\n    Successfully installed django-2.0 djangorestframework-3.10.3\n\n#### Available commands\n    \n    Usage: ppm [OPTIONS] COMMAND [ARGS]...\n\n    Options:\n      --help  Show this message and exit.\n    \n    Commands:\n      init       Initializes requirements.json file\n      install    Installs given package[s]\n      uninstall  Uninstalls given package[s]\n      dump       Dumps requirements.json file to `pip freeze` format", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ekinertac/ppm", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pip-ppm", "package_url": "https://pypi.org/project/pip-ppm/", "platform": "", "project_url": "https://pypi.org/project/pip-ppm/", "project_urls": {"Homepage": "https://github.com/ekinertac/ppm"}, "release_url": "https://pypi.org/project/pip-ppm/0.0.2.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A pip alternative for managing python packages", "version": "0.0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A shameless clone of npm for managing python packages.</p>\n<h3>Do not take this project seriously</h3>\n<p>it's just a <code>pip install</code> command with some features for personal needs.</p>\n<h4>Installation</h4>\n<pre><code>pip install pip-ppm\n</code></pre>\n<h4>requirements.json file initialization</h4>\n<pre><code>ppm init\n</code></pre>\n<p><code>ppm init</code> command creates a file contains:</p>\n<pre><code>{\n  \"name\": \"test\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"author\": \"\",\n  \"license\": \"ISC\",\n}\n</code></pre>\n<h4>Install a package and save to the requirements.json file</h4>\n<pre><code>ppm install flask --save\nppm install flask==1 --save\nppm install flask ipython --save\n</code></pre>\n<p>When you use <code>ppm install</code> command with <code>--save</code> flag,\nit's saving installed packages to the <code>requirements.json</code> file</p>\n<pre><code>{   \n    ...\n    \"requirements\": {\n        \"django\": \"2\",\n        \"djangorestframework\": \"\"\n    }\n}\n</code></pre>\n<h4>Install packages pre-defined in requirements.json file</h4>\n<pre><code>ppm install\n...\nSuccessfully installed django-2.0 djangorestframework-3.10.3\n</code></pre>\n<h4>Available commands</h4>\n<pre><code>Usage: ppm [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  init       Initializes requirements.json file\n  install    Installs given package[s]\n  uninstall  Uninstalls given package[s]\n  dump       Dumps requirements.json file to `pip freeze` format\n</code></pre>\n\n          </div>"}, "last_serial": 6174837, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a1bfe159934cb81b54f16d5cda5429e3", "sha256": "575b9e65cade440c5cf24220caed01901997b6b6be22c9cc2bcf1d02be10a283"}, "downloads": -1, "filename": "pip-ppm-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a1bfe159934cb81b54f16d5cda5429e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2950, "upload_time": "2019-11-19T12:45:16", "upload_time_iso_8601": "2019-11-19T12:45:16.369376Z", "url": "https://files.pythonhosted.org/packages/66/37/98fe10adee1af36e02db3e5e24e706928c98653eba422017e46c3b5532ad/pip-ppm-0.0.1.tar.gz", "yanked": false}], "0.0.2.1": [{"comment_text": "", "digests": {"md5": "98f214b5dd0c8d4376a02a10ecb9481a", "sha256": "55cbfffb556eeaa471558be6543739054b94257996ed6d9cbf559e9716f3c842"}, "downloads": -1, "filename": "pip-ppm-0.0.2.1.tar.gz", "has_sig": false, "md5_digest": "98f214b5dd0c8d4376a02a10ecb9481a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3294, "upload_time": "2019-11-21T12:37:05", "upload_time_iso_8601": "2019-11-21T12:37:05.879740Z", "url": "https://files.pythonhosted.org/packages/e2/86/899513af4b4ef882bb0691c9a6b8bd6049b05ded63e4dea216f4321df9d5/pip-ppm-0.0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "98f214b5dd0c8d4376a02a10ecb9481a", "sha256": "55cbfffb556eeaa471558be6543739054b94257996ed6d9cbf559e9716f3c842"}, "downloads": -1, "filename": "pip-ppm-0.0.2.1.tar.gz", "has_sig": false, "md5_digest": "98f214b5dd0c8d4376a02a10ecb9481a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3294, "upload_time": "2019-11-21T12:37:05", "upload_time_iso_8601": "2019-11-21T12:37:05.879740Z", "url": "https://files.pythonhosted.org/packages/e2/86/899513af4b4ef882bb0691c9a6b8bd6049b05ded63e4dea216f4321df9d5/pip-ppm-0.0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:10 2020"}