{"info": {"author": "pohmelie", "author_email": "multisosnooley@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "tinyantigate\n============\n\nTinest (as I can imagine) antigate/anti-captcha api wrapper. It's just a **subset** of antigate api. It can only:\n* send captcha\n* check captcha status\n* check balance\n* abuse\n\n## Reasons\n* [Antigate](https://github.com/gotlium/antigate) wrapper uses [grablib](http://grablib.org/), so it comes with a bit more dependences (like pycurl, lxml, etc.).\n* [requests](docs.python-requests.org) is just awesome!\n* [Antigate](https://github.com/gotlium/antigate) wants filename of captcha, but in most cases you need to pass 'this' bytes (from requests response, for example), and you defenitly don't want to create files.\n* uniform calls\n\n## Requirements\n* Python 3\n* requests\n\n## Usage\nAll methods, can return errors:\n* 'ERROR_*', None (from [antigate list](https://anti-captcha.com/apidoc))\n* 'ERROR_HTTP', status_code (requests errors)\n\n### Automatic (most common usage)\n#####antigate function\n```python\nfrom tinyantigate import antigate\nstatus, text = antigate(\n    your_key_from_antigate,\n    bytes_of_your_captcha,\n    timeout=5,                  # \\\n    count=6,                    #  ) default values (can be omitted)\n    host=\"anti-captcha.com\",    # /\n)\n```\nThis function is just wrapper around creation Antigate object and calling 'run' function.\n\n### Manual usage\n\n##### Creating:\n```python\nimport tinyantigate\na = tinyantigate.Antigate(your_key_from_antigate, host=\"anti-captcha.com\")\n```\n\n##### Sending captcha:\n```python\nstatus, captcha_id = a.send(bytes_of_your_captcha)\n```\nReturn values:\n* 'OK', captcha_id\n\n##### Getting status:\n```python\nstatus, text = a.status(captcha_id)\n```\nReturn values:\n* 'OK', captcha_text\n* 'CAPCHA_NOT_READY', None (yeah, CA**PC**HA_NOT_READY, it's antigate funny mistake)\n\n##### Abuse:\n```python\nstatus, data = a.abuse(captcha_id)\n```\nReturn values:\n* \"\", None\n\n##### Balance:\n```python\nbalance, data = a.balance()\n```\nReturn values:\n* balance, None\n\n`balance` as string\n\n##### Run:\n```python\nstatus, text = a.run(bytes_of_your_captcha, timeout=5, count=6)\n```\nMix of 'send' and 'status' functions. Timeout is the delay between checks of captcha status. Count is number of checks.\n\nReturn values:\n\nSame as for 'send' and 'status' functions.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pohmelie/tinyantigate", "keywords": null, "license": "WTFPL", "maintainer": null, "maintainer_email": null, "name": "tinyantigate", "package_url": "https://pypi.org/project/tinyantigate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tinyantigate/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/pohmelie/tinyantigate"}, "release_url": "https://pypi.org/project/tinyantigate/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Tiny antigate/anti-captcha api wrapper.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            tinyantigate<br>============<br><br>Tinest (as I can imagine) antigate/anti-captcha api wrapper. It's just a **subset** of antigate api. It can only:<br>* send captcha<br>* check captcha status<br>* check balance<br>* abuse<br><br>## Reasons<br>* [Antigate](https://github.com/gotlium/antigate) wrapper uses [grablib](http://grablib.org/), so it comes with a bit more dependences (like pycurl, lxml, etc.).<br>* [requests](docs.python-requests.org) is just awesome!<br>* [Antigate](https://github.com/gotlium/antigate) wants filename of captcha, but in most cases you need to pass 'this' bytes (from requests response, for example), and you defenitly don't want to create files.<br>* uniform calls<br><br>## Requirements<br>* Python 3<br>* requests<br><br>## Usage<br>All methods, can return errors:<br>* 'ERROR_*', None (from [antigate list](https://anti-captcha.com/apidoc))<br>* 'ERROR_HTTP', status_code (requests errors)<br><br>### Automatic (most common usage)<br>#####antigate function<br>```python<br>from tinyantigate import antigate<br>status, text = antigate(<br>    your_key_from_antigate,<br>    bytes_of_your_captcha,<br>    timeout=5,                  # \\<br>    count=6,                    #  ) default values (can be omitted)<br>    host=\"anti-captcha.com\",    # /<br>)<br>```<br>This function is just wrapper around creation Antigate object and calling 'run' function.<br><br>### Manual usage<br><br>##### Creating:<br>```python<br>import tinyantigate<br>a = tinyantigate.Antigate(your_key_from_antigate, host=\"anti-captcha.com\")<br>```<br><br>##### Sending captcha:<br>```python<br>status, captcha_id = a.send(bytes_of_your_captcha)<br>```<br>Return values:<br>* 'OK', captcha_id<br><br>##### Getting status:<br>```python<br>status, text = a.status(captcha_id)<br>```<br>Return values:<br>* 'OK', captcha_text<br>* 'CAPCHA_NOT_READY', None (yeah, CA**PC**HA_NOT_READY, it's antigate funny mistake)<br><br>##### Abuse:<br>```python<br>status, data = a.abuse(captcha_id)<br>```<br>Return values:<br>* \"\", None<br><br>##### Balance:<br>```python<br>balance, data = a.balance()<br>```<br>Return values:<br>* balance, None<br><br>`balance` as string<br><br>##### Run:<br>```python<br>status, text = a.run(bytes_of_your_captcha, timeout=5, count=6)<br>```<br>Mix of 'send' and 'status' functions. Timeout is the delay between checks of captcha status. Count is number of checks.<br><br>Return values:<br><br>Same as for 'send' and 'status' functions.\n          </div>"}, "last_serial": 1891234, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f172c2d3cebd042c02cb214d5280e3e8", "sha256": "5f92cde2b20cd596805d70f61e1a6c69b964aeb35208ecbb6e8ebde23da2bf24"}, "downloads": -1, "filename": "tinyantigate-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f172c2d3cebd042c02cb214d5280e3e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2431, "upload_time": "2016-01-06T13:35:06", "upload_time_iso_8601": "2016-01-06T13:35:06.102714Z", "url": "https://files.pythonhosted.org/packages/4d/80/0fe97347577862e38a4484b40659bae2ffa424c934b3d2008ce84da52e75/tinyantigate-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8293068b8ce316e540c3d9f3b3421de1", "sha256": "570a4f5fb07fc8fb9b27203d2d41fdcde23b2dd5ee665f65467ab93383fca185"}, "downloads": -1, "filename": "tinyantigate-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8293068b8ce316e540c3d9f3b3421de1", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 4583, "upload_time": "2016-01-06T13:44:47", "upload_time_iso_8601": "2016-01-06T13:44:47.879659Z", "url": "https://files.pythonhosted.org/packages/6d/c0/ed2312d9d12fe401f2a271dae0e16c5b0424b6afaf83c87b9c97bec9bf97/tinyantigate-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09135d46a1bbf03a91e8fd75aef582d6", "sha256": "4b91a7278d779b111498be3413dfa46956783ee473785f50eb7f3a400960ecdd"}, "downloads": -1, "filename": "tinyantigate-0.1.1.tar.gz", "has_sig": false, "md5_digest": "09135d46a1bbf03a91e8fd75aef582d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2780, "upload_time": "2016-01-06T13:44:26", "upload_time_iso_8601": "2016-01-06T13:44:26.004470Z", "url": "https://files.pythonhosted.org/packages/83/3b/52c16403a0d3f24f3ef553135686f7ce1de9db1bf3cb89faf6c8b511fed3/tinyantigate-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8293068b8ce316e540c3d9f3b3421de1", "sha256": "570a4f5fb07fc8fb9b27203d2d41fdcde23b2dd5ee665f65467ab93383fca185"}, "downloads": -1, "filename": "tinyantigate-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8293068b8ce316e540c3d9f3b3421de1", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 4583, "upload_time": "2016-01-06T13:44:47", "upload_time_iso_8601": "2016-01-06T13:44:47.879659Z", "url": "https://files.pythonhosted.org/packages/6d/c0/ed2312d9d12fe401f2a271dae0e16c5b0424b6afaf83c87b9c97bec9bf97/tinyantigate-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09135d46a1bbf03a91e8fd75aef582d6", "sha256": "4b91a7278d779b111498be3413dfa46956783ee473785f50eb7f3a400960ecdd"}, "downloads": -1, "filename": "tinyantigate-0.1.1.tar.gz", "has_sig": false, "md5_digest": "09135d46a1bbf03a91e8fd75aef582d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2780, "upload_time": "2016-01-06T13:44:26", "upload_time_iso_8601": "2016-01-06T13:44:26.004470Z", "url": "https://files.pythonhosted.org/packages/83/3b/52c16403a0d3f24f3ef553135686f7ce1de9db1bf3cb89faf6c8b511fed3/tinyantigate-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:08 2020"}