{"info": {"author": "Stefan Bender", "author_email": "stefan.bender@ntnu.no", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering :: Physics", "Topic :: Utilities"], "description": "[![builds](https://travis-ci.com/st-bender/pynrlmsise00.svg?branch=master)](https://travis-ci.com/st-bender/pynrlmsise00)\n[![codecov](https://codecov.io/gh/st-bender/pynrlmsise00/badge.svg)](https://codecov.io/gh/st-bender/pynrlmsise00)\n[![coveralls](https://coveralls.io/repos/github/st-bender/pynrlmsise00/badge.svg)](https://coveralls.io/github/st-bender/pynrlmsise00)\n[![scrutinizer](https://scrutinizer-ci.com/g/st-bender/pynrlmsise00/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/st-bender/pynrlmsise00/?branch=master)\n\n# Python interface for the NRLMSISE-00 empirical atmosphere model\n\nThis python version of the NRLMSISE00 upper atmosphere model is\nbased on the C-version of the code, available at www.brodo.de/space/nrlmsise.\nThe C code is imported as a `git` submodule from\n[git://git.linta.de/~brodo/nrlmsise-00.git](git://git.linta.de/~brodo/nrlmsise-00.git)\n(browsable version at:\n[https://git.linta.de/?p=~brodo/nrlmsise-00.git](https://git.linta.de/?p=~brodo/nrlmsise-00.git)).\n\n## Overview\n\nQuote from https://ccmc.gsfc.nasa.gov/models/modelinfo.php?model=MSISE:\n\n\u201cThe MSISE model describes the neutral temperature and densities in Earth's atmosphere from ground to thermospheric heights.\nThe NRLMSIS-00 empirical atmosphere model was developed by Mike Picone, Alan Hedin, and Doug Drob.\u201d\n\n## Install\n\n### Requirements\n\n- `numpy` - required\n- `pytest` - optional, for testing\n\n### pynrlmsise00\n\nThere is no `pip` package yet, but pynrlmsise00 can be installed\nwith [`pip`](https://pip.pypa.io) directly from github\n(see <https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support>\nand <https://pip.pypa.io/en/stable/reference/pip_install/#git>):\n```sh\n$ pip install [-e] git+https://github.com/st-bender/pynrlmsise00.git\n```\n\nThe other option is to use a local clone:\n```sh\n$ git clone https://github.com/st-bender/pynrlmsise00.git\n$ cd pynrlmsise00\n$ git submodule init\n$ git submodule update\n```\nand then using `pip` (optionally using `-e`, see\n<https://pip.pypa.io/en/stable/reference/pip_install/#install-editable>):\n```sh\n$ pip install [-e] .\n```\n\nor using `setup.py`:\n```sh\n$ python setup.py install\n```\n\nOptionally, test the correct function of the module with\n```sh\n$ py.test [-v]\n```\n\nor even including the [doctests](https://docs.python.org/library/doctest.html)\nin this document:\n```sh\n$ py.test [-v] --doctest-glob='*.md'\n```\n\n## Usage\n\nThe python module itself is named `nrlmsise00` and is imported as usual:\n```python\n>>> import nrlmsise00\n\n```\n\nBasic class and method documentation is accessible via `pydoc`:\n```sh\n$ pydoc nrlmsise00\n```\n\n### C model interface\n\nThe C submodule directly interfaces the model functions `gtd7()` and `gtd7d()`\nby importing `nrlmsise00._nrlmsise00`. The return values are always\ntuples of two lists containing the densities (`d[0]`--`d[8]`),\nand temperatures (`t[0]`, `t[1]`).\nThe `flags` and `ap_a` value array are set via keywords, but both default\nto the standard setting, such that changing them should not be necessary\nfor most use cases.\n```python\n>>> from nrlmsise00._nrlmsise00 import gtd7, gtd7d\n>>> # using the standard flags\n>>> gtd7(2009, 172, 29000, 400, 60, -70, 16, 150, 150, 4)\n([666517.690495152, 113880555.97522168, 19982109.255734544, 402276.3585712511, 3557.464994515886, 4.074713532757222e-15, 34753.12399717142, 4095913.2682930017, 26672.73209335869], [1250.5399435607994, 1241.4161300191206])\n\n```\n\n### Python interface\n\nThe Python interface functions take `datetime.datetime` objects for\nconvenience. The local solar time is calculated from that time\nand the given location, but it can be set explicitly via the `lst` keyword.\nThe returned value has the same format as the C version, and\nbecause of their similarity, `gtd7()` and `gtd7d()` are selected via the\n`method` keyword, `gtd7` is the default.\n```python\n>>> from datetime import datetime\n>>> from nrlmsise00 import msise_model\n>>> msise_model(datetime(2009, 6, 21, 8, 3, 20), 400, 60, -70, 150, 150, 4, lst=16)\n([666517.690495152, 113880555.97522168, 19982109.255734544, 402276.3585712511, 3557.464994515886, 4.074713532757222e-15, 34753.12399717142, 4095913.2682930017, 26672.73209335869], [1250.5399435607994, 1241.4161300191206])\n\n```\n\nA `numpy` compatible *flat* version is available as `msise_flat()`,\nit returns a 11-element `numpy.ndarray` with the densities in the\nfirst 9 entries and the temperatures in the last two entries.\n```python\n>>> from datetime import datetime\n>>> from nrlmsise00 import msise_flat\n>>> msise_flat(datetime(2009, 6, 21, 8, 3, 20), 400, 60, -70, 150, 150, 4)\narray([5.65085279e+05, 6.79850175e+07, 1.18819263e+07, 2.37030166e+05,\n       1.32459684e+03, 2.39947892e-15, 5.32498381e+04, 1.07596246e+06,\n       2.66727321e+04, 1.10058413e+03, 1.09824872e+03])\n\n```\n\nAll arguments can be `numpy.ndarray`s, but must be broadcastable\nto a common shape. For example to calculate the values for\nthree altitudes (200, 300, and 400 km) and two latitude locations\n(60 and 70 \u00b0N) simultaneously, one can use `numpy.newaxis`\n(which is equal to `None`) like this:\n```python\n>>> from datetime import datetime\n>>> import numpy as np\n>>> from nrlmsise00 import msise_flat\n>>> alts = np.arange(200, 401, 100.)  # = [200, 300, 400] [km]\n>>> lats = np.arange(60, 71, 10.)  # = [60, 70] [\u00b0N]\n>>> # Using broadcasting, the output will be a 2 x 3 x 11 element array:\n>>> msise_flat(datetime(2009, 6, 21, 8, 3, 20), alts[None, :], lats[:, None], -70, 150, 150, 4)\narray([[[1.36949418e+06, 1.95229496e+09, 3.83824808e+09, 1.79130515e+08,\n         4.92145034e+06, 2.40511268e-13, 8.34108685e+04, 1.74317585e+07,\n         3.45500931e-08, 1.10058413e+03, 9.68827485e+02],\n        [8.40190601e+05, 3.25739060e+08, 1.82477392e+08, 5.37973134e+06,\n         6.53609278e+04, 1.75304136e-14, 5.92944463e+04, 4.36516218e+06,\n         1.03939126e+02, 1.10058413e+03, 1.08356514e+03],\n        [5.65085279e+05, 6.79850175e+07, 1.18819263e+07, 2.37030166e+05,\n         1.32459684e+03, 2.39947892e-15, 5.32498381e+04, 1.07596246e+06,\n         2.66727321e+04, 1.10058413e+03, 1.09824872e+03]],\n<BLANKLINE>\n       [[1.10012225e+06, 1.94725472e+09, 4.08547233e+09, 1.92320077e+08,\n         6.65460281e+06, 2.52846563e-13, 6.16745965e+04, 2.45012145e+07,\n         5.21846603e-08, 1.13812434e+03, 1.00132640e+03],\n        [6.83809952e+05, 3.42643970e+08, 2.13434661e+08, 6.43426889e+06,\n         1.01162173e+05, 1.95300073e-14, 4.36031132e+04, 6.70490625e+06,\n         1.59911615e+02, 1.13812434e+03, 1.12084651e+03],\n        [4.65787225e+05, 7.52160226e+07, 1.51795904e+07, 3.13560147e+05,\n         2.32541183e+03, 2.76353370e-15, 3.92811827e+04, 1.73321928e+06,\n         4.12296154e+04, 1.13812434e+03, 1.13580463e+03]]])\n\n```\n\nThis module also provides \"flat\" variants of the C functions as `gtd7_flat()`\nand `gtd7d_flat()`. For example using `gtd7()` the same way as above:\n```python\n>>> import numpy as np\n>>> from nrlmsise00 import gtd7_flat\n>>> alts = np.arange(200, 401, 100.)  # = [200, 300, 400] [km]\n>>> lats = np.arange(60, 71, 10.)  # = [60, 70] [\u00b0N]\n>>> # Using broadcasting, the output will be a 2 x 3 x 11 element array:\n>>> gtd7_flat(2009, 172, 29000, alts[None, :], lats[:, None], -70, 16, 150, 150, 4)\narray([[[1.55567936e+06, 2.55949597e+09, 4.00342724e+09, 1.74513806e+08,\n         6.56916263e+06, 2.64872982e-13, 5.63405578e+04, 4.71893934e+07,\n         3.45500931e-08, 1.25053994e+03, 1.02704994e+03],\n        [9.58507714e+05, 4.66979460e+08, 2.31041924e+08, 6.58659651e+06,\n         1.16566762e+05, 2.38399390e-14, 3.86535595e+04, 1.43755262e+07,\n         1.03939126e+02, 1.25053994e+03, 1.20645403e+03],\n        [6.66517690e+05, 1.13880556e+08, 1.99821093e+07, 4.02276359e+05,\n         3.55746499e+03, 4.07471353e-15, 3.47531240e+04, 4.09591327e+06,\n         2.66727321e+04, 1.25053994e+03, 1.24141613e+03]],\n<BLANKLINE>\n       [[1.31669842e+06, 2.40644124e+09, 4.21778196e+09, 1.89878716e+08,\n         8.17662024e+06, 2.71788520e-13, 4.64192484e+04, 5.13265845e+07,\n         5.21846603e-08, 1.24246351e+03, 1.04698385e+03],\n        [8.22632403e+05, 4.52803942e+08, 2.53857090e+08, 7.50201654e+06,\n         1.53431033e+05, 2.46179628e-14, 3.20594861e+04, 1.62651506e+07,\n         1.59911615e+02, 1.24246351e+03, 1.20963726e+03],\n        [5.73944168e+05, 1.10836468e+08, 2.19925518e+07, 4.58648922e+05,\n         4.68600377e+03, 4.10277781e-15, 2.89330169e+04, 4.65636025e+06,\n         4.12296154e+04, 1.24246351e+03, 1.23665288e+03]]])\n\n```\n\n### Note\n\nAll functions require the solar 10.7\u202fcm radio flux and and the geomagnetic Ap\nindex values to produce correct results.\nIn particular, according to the C source code:\n\n- f107A: 81 day average of F10.7 flux (centered on the given day of year)\n- f107: daily F10.7 flux for previous day\n- ap: magnetic index (daily)\n\nThe f107 and f107A values used to generate the model correspond\nto the 10.7\u202fcm radio flux at the actual distance of the Earth\nfrom the Sun rather than the radio flux at 1\u202fAU.\nThe following site provides both classes of values (**outdated**):\nftp://ftp.ngdc.noaa.gov/STP/SOLAR_DATA/SOLAR_RADIO/FLUX/\n\nf107, f107A, and ap effects are neither large nor well\nestablished below 80\u202fkm and these parameters should be set to\n150., 150., and 4. respectively.\n\n# License\n\nThis python interface is free software: you can redistribute it or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, version 2 (GPLv2), see [local copy](./COPYING.GPLv2)\nor [online version](http://www.gnu.org/licenses/gpl-2.0.html).\n\nThe [C source code of NRLMSISE-00](https://www.brodo.de/space/nrlmsise)\nis in the public domain, see [COPYING.NRLMSISE-00](./COPYING.NRLMSISE-00).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/st-bender/pynrlmsise00", "keywords": "", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "nrlmsise00", "package_url": "https://pypi.org/project/nrlmsise00/", "platform": "", "project_url": "https://pypi.org/project/nrlmsise00/", "project_urls": {"Homepage": "https://github.com/st-bender/pynrlmsise00"}, "release_url": "https://pypi.org/project/nrlmsise00/0.0.1/", "requires_dist": ["numpy (>=1.13.0)", "pytest ; extra == 'all'", "xarray ; extra == 'all'", "xarray ; extra == 'dataset'", "pytest ; extra == 'tests'"], "requires_python": "", "summary": "Python interface for the NRLMSISE-00 neutral atmosphere model", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/st-bender/pynrlmsise00\" rel=\"nofollow\"><img alt=\"builds\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8ddc1770b9e6c8995b5b0df0eadb96895f289f0/68747470733a2f2f7472617669732d63692e636f6d2f73742d62656e6465722f70796e726c6d7369736530302e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/st-bender/pynrlmsise00\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0406a0473a108953081f9b566180fb1aa62b6ef5/68747470733a2f2f636f6465636f762e696f2f67682f73742d62656e6465722f70796e726c6d7369736530302f62616467652e737667\"></a>\n<a href=\"https://coveralls.io/github/st-bender/pynrlmsise00\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b3629f60d8e9fe792df6a11c7bd4045ee512f2c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f73742d62656e6465722f70796e726c6d7369736530302f62616467652e737667\"></a>\n<a href=\"https://scrutinizer-ci.com/g/st-bender/pynrlmsise00/?branch=master\" rel=\"nofollow\"><img alt=\"scrutinizer\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb7b15929c2c9b5dc1980ceb0ecc1d35046f1612/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f73742d62656e6465722f70796e726c6d7369736530302f6261646765732f7175616c6974792d73636f72652e706e673f623d6d6173746572\"></a></p>\n<h1>Python interface for the NRLMSISE-00 empirical atmosphere model</h1>\n<p>This python version of the NRLMSISE00 upper atmosphere model is\nbased on the C-version of the code, available at <a href=\"http://www.brodo.de/space/nrlmsise\" rel=\"nofollow\">www.brodo.de/space/nrlmsise</a>.\nThe C code is imported as a <code>git</code> submodule from\n<a>git://git.linta.de/~brodo/nrlmsise-00.git</a>\n(browsable version at:\n<a href=\"https://git.linta.de/?p=%7Ebrodo/nrlmsise-00.git\" rel=\"nofollow\">https://git.linta.de/?p=~brodo/nrlmsise-00.git</a>).</p>\n<h2>Overview</h2>\n<p>Quote from <a href=\"https://ccmc.gsfc.nasa.gov/models/modelinfo.php?model=MSISE\" rel=\"nofollow\">https://ccmc.gsfc.nasa.gov/models/modelinfo.php?model=MSISE</a>:</p>\n<p>\u201cThe MSISE model describes the neutral temperature and densities in Earth's atmosphere from ground to thermospheric heights.\nThe NRLMSIS-00 empirical atmosphere model was developed by Mike Picone, Alan Hedin, and Doug Drob.\u201d</p>\n<h2>Install</h2>\n<h3>Requirements</h3>\n<ul>\n<li><code>numpy</code> - required</li>\n<li><code>pytest</code> - optional, for testing</li>\n</ul>\n<h3>pynrlmsise00</h3>\n<p>There is no <code>pip</code> package yet, but pynrlmsise00 can be installed\nwith <a href=\"https://pip.pypa.io\" rel=\"nofollow\"><code>pip</code></a> directly from github\n(see <a href=\"https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support\" rel=\"nofollow\">https://pip.pypa.io/en/stable/reference/pip_install/#vcs-support</a>\nand <a href=\"https://pip.pypa.io/en/stable/reference/pip_install/#git\" rel=\"nofollow\">https://pip.pypa.io/en/stable/reference/pip_install/#git</a>):</p>\n<pre>$ pip install <span class=\"o\">[</span>-e<span class=\"o\">]</span> git+https://github.com/st-bender/pynrlmsise00.git\n</pre>\n<p>The other option is to use a local clone:</p>\n<pre>$ git clone https://github.com/st-bender/pynrlmsise00.git\n$ <span class=\"nb\">cd</span> pynrlmsise00\n$ git submodule init\n$ git submodule update\n</pre>\n<p>and then using <code>pip</code> (optionally using <code>-e</code>, see\n<a href=\"https://pip.pypa.io/en/stable/reference/pip_install/#install-editable\" rel=\"nofollow\">https://pip.pypa.io/en/stable/reference/pip_install/#install-editable</a>):</p>\n<pre>$ pip install <span class=\"o\">[</span>-e<span class=\"o\">]</span> .\n</pre>\n<p>or using <code>setup.py</code>:</p>\n<pre>$ python setup.py install\n</pre>\n<p>Optionally, test the correct function of the module with</p>\n<pre>$ py.test <span class=\"o\">[</span>-v<span class=\"o\">]</span>\n</pre>\n<p>or even including the <a href=\"https://docs.python.org/library/doctest.html\" rel=\"nofollow\">doctests</a>\nin this document:</p>\n<pre>$ py.test <span class=\"o\">[</span>-v<span class=\"o\">]</span> --doctest-glob<span class=\"o\">=</span><span class=\"s1\">'*.md'</span>\n</pre>\n<h2>Usage</h2>\n<p>The python module itself is named <code>nrlmsise00</code> and is imported as usual:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">nrlmsise00</span>\n</pre>\n<p>Basic class and method documentation is accessible via <code>pydoc</code>:</p>\n<pre>$ pydoc nrlmsise00\n</pre>\n<h3>C model interface</h3>\n<p>The C submodule directly interfaces the model functions <code>gtd7()</code> and <code>gtd7d()</code>\nby importing <code>nrlmsise00._nrlmsise00</code>. The return values are always\ntuples of two lists containing the densities (<code>d[0]</code>--<code>d[8]</code>),\nand temperatures (<code>t[0]</code>, <code>t[1]</code>).\nThe <code>flags</code> and <code>ap_a</code> value array are set via keywords, but both default\nto the standard setting, such that changing them should not be necessary\nfor most use cases.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nrlmsise00._nrlmsise00</span> <span class=\"kn\">import</span> <span class=\"n\">gtd7</span><span class=\"p\">,</span> <span class=\"n\">gtd7d</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># using the standard flags</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gtd7</span><span class=\"p\">(</span><span class=\"mi\">2009</span><span class=\"p\">,</span> <span class=\"mi\">172</span><span class=\"p\">,</span> <span class=\"mi\">29000</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">([</span><span class=\"mf\">666517.690495152</span><span class=\"p\">,</span> <span class=\"mf\">113880555.97522168</span><span class=\"p\">,</span> <span class=\"mf\">19982109.255734544</span><span class=\"p\">,</span> <span class=\"mf\">402276.3585712511</span><span class=\"p\">,</span> <span class=\"mf\">3557.464994515886</span><span class=\"p\">,</span> <span class=\"mf\">4.074713532757222e-15</span><span class=\"p\">,</span> <span class=\"mf\">34753.12399717142</span><span class=\"p\">,</span> <span class=\"mf\">4095913.2682930017</span><span class=\"p\">,</span> <span class=\"mf\">26672.73209335869</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">1250.5399435607994</span><span class=\"p\">,</span> <span class=\"mf\">1241.4161300191206</span><span class=\"p\">])</span>\n</pre>\n<h3>Python interface</h3>\n<p>The Python interface functions take <code>datetime.datetime</code> objects for\nconvenience. The local solar time is calculated from that time\nand the given location, but it can be set explicitly via the <code>lst</code> keyword.\nThe returned value has the same format as the C version, and\nbecause of their similarity, <code>gtd7()</code> and <code>gtd7d()</code> are selected via the\n<code>method</code> keyword, <code>gtd7</code> is the default.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nrlmsise00</span> <span class=\"kn\">import</span> <span class=\"n\">msise_model</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">msise_model</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2009</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">lst</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">)</span>\n<span class=\"p\">([</span><span class=\"mf\">666517.690495152</span><span class=\"p\">,</span> <span class=\"mf\">113880555.97522168</span><span class=\"p\">,</span> <span class=\"mf\">19982109.255734544</span><span class=\"p\">,</span> <span class=\"mf\">402276.3585712511</span><span class=\"p\">,</span> <span class=\"mf\">3557.464994515886</span><span class=\"p\">,</span> <span class=\"mf\">4.074713532757222e-15</span><span class=\"p\">,</span> <span class=\"mf\">34753.12399717142</span><span class=\"p\">,</span> <span class=\"mf\">4095913.2682930017</span><span class=\"p\">,</span> <span class=\"mf\">26672.73209335869</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">1250.5399435607994</span><span class=\"p\">,</span> <span class=\"mf\">1241.4161300191206</span><span class=\"p\">])</span>\n</pre>\n<p>A <code>numpy</code> compatible <em>flat</em> version is available as <code>msise_flat()</code>,\nit returns a 11-element <code>numpy.ndarray</code> with the densities in the\nfirst 9 entries and the temperatures in the last two entries.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nrlmsise00</span> <span class=\"kn\">import</span> <span class=\"n\">msise_flat</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">msise_flat</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2009</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">5.65085279e+05</span><span class=\"p\">,</span> <span class=\"mf\">6.79850175e+07</span><span class=\"p\">,</span> <span class=\"mf\">1.18819263e+07</span><span class=\"p\">,</span> <span class=\"mf\">2.37030166e+05</span><span class=\"p\">,</span>\n       <span class=\"mf\">1.32459684e+03</span><span class=\"p\">,</span> <span class=\"mf\">2.39947892e-15</span><span class=\"p\">,</span> <span class=\"mf\">5.32498381e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.07596246e+06</span><span class=\"p\">,</span>\n       <span class=\"mf\">2.66727321e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.10058413e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.09824872e+03</span><span class=\"p\">])</span>\n</pre>\n<p>All arguments can be <code>numpy.ndarray</code>s, but must be broadcastable\nto a common shape. For example to calculate the values for\nthree altitudes (200, 300, and 400 km) and two latitude locations\n(60 and 70 \u00b0N) simultaneously, one can use <code>numpy.newaxis</code>\n(which is equal to <code>None</code>) like this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nrlmsise00</span> <span class=\"kn\">import</span> <span class=\"n\">msise_flat</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">alts</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">401</span><span class=\"p\">,</span> <span class=\"mf\">100.</span><span class=\"p\">)</span>  <span class=\"c1\"># = [200, 300, 400] [km]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lats</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">71</span><span class=\"p\">,</span> <span class=\"mf\">10.</span><span class=\"p\">)</span>  <span class=\"c1\"># = [60, 70] [\u00b0N]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Using broadcasting, the output will be a 2 x 3 x 11 element array:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">msise_flat</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2009</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"n\">alts</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">lats</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"o\">-</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mf\">1.36949418e+06</span><span class=\"p\">,</span> <span class=\"mf\">1.95229496e+09</span><span class=\"p\">,</span> <span class=\"mf\">3.83824808e+09</span><span class=\"p\">,</span> <span class=\"mf\">1.79130515e+08</span><span class=\"p\">,</span>\n         <span class=\"mf\">4.92145034e+06</span><span class=\"p\">,</span> <span class=\"mf\">2.40511268e-13</span><span class=\"p\">,</span> <span class=\"mf\">8.34108685e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.74317585e+07</span><span class=\"p\">,</span>\n         <span class=\"mf\">3.45500931e-08</span><span class=\"p\">,</span> <span class=\"mf\">1.10058413e+03</span><span class=\"p\">,</span> <span class=\"mf\">9.68827485e+02</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mf\">8.40190601e+05</span><span class=\"p\">,</span> <span class=\"mf\">3.25739060e+08</span><span class=\"p\">,</span> <span class=\"mf\">1.82477392e+08</span><span class=\"p\">,</span> <span class=\"mf\">5.37973134e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">6.53609278e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.75304136e-14</span><span class=\"p\">,</span> <span class=\"mf\">5.92944463e+04</span><span class=\"p\">,</span> <span class=\"mf\">4.36516218e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">1.03939126e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.10058413e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.08356514e+03</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mf\">5.65085279e+05</span><span class=\"p\">,</span> <span class=\"mf\">6.79850175e+07</span><span class=\"p\">,</span> <span class=\"mf\">1.18819263e+07</span><span class=\"p\">,</span> <span class=\"mf\">2.37030166e+05</span><span class=\"p\">,</span>\n         <span class=\"mf\">1.32459684e+03</span><span class=\"p\">,</span> <span class=\"mf\">2.39947892e-15</span><span class=\"p\">,</span> <span class=\"mf\">5.32498381e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.07596246e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">2.66727321e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.10058413e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.09824872e+03</span><span class=\"p\">]],</span>\n<span class=\"o\">&lt;</span><span class=\"n\">BLANKLINE</span><span class=\"o\">&gt;</span>\n       <span class=\"p\">[[</span><span class=\"mf\">1.10012225e+06</span><span class=\"p\">,</span> <span class=\"mf\">1.94725472e+09</span><span class=\"p\">,</span> <span class=\"mf\">4.08547233e+09</span><span class=\"p\">,</span> <span class=\"mf\">1.92320077e+08</span><span class=\"p\">,</span>\n         <span class=\"mf\">6.65460281e+06</span><span class=\"p\">,</span> <span class=\"mf\">2.52846563e-13</span><span class=\"p\">,</span> <span class=\"mf\">6.16745965e+04</span><span class=\"p\">,</span> <span class=\"mf\">2.45012145e+07</span><span class=\"p\">,</span>\n         <span class=\"mf\">5.21846603e-08</span><span class=\"p\">,</span> <span class=\"mf\">1.13812434e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.00132640e+03</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mf\">6.83809952e+05</span><span class=\"p\">,</span> <span class=\"mf\">3.42643970e+08</span><span class=\"p\">,</span> <span class=\"mf\">2.13434661e+08</span><span class=\"p\">,</span> <span class=\"mf\">6.43426889e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">1.01162173e+05</span><span class=\"p\">,</span> <span class=\"mf\">1.95300073e-14</span><span class=\"p\">,</span> <span class=\"mf\">4.36031132e+04</span><span class=\"p\">,</span> <span class=\"mf\">6.70490625e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">1.59911615e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.13812434e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.12084651e+03</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mf\">4.65787225e+05</span><span class=\"p\">,</span> <span class=\"mf\">7.52160226e+07</span><span class=\"p\">,</span> <span class=\"mf\">1.51795904e+07</span><span class=\"p\">,</span> <span class=\"mf\">3.13560147e+05</span><span class=\"p\">,</span>\n         <span class=\"mf\">2.32541183e+03</span><span class=\"p\">,</span> <span class=\"mf\">2.76353370e-15</span><span class=\"p\">,</span> <span class=\"mf\">3.92811827e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.73321928e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">4.12296154e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.13812434e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.13580463e+03</span><span class=\"p\">]]])</span>\n</pre>\n<p>This module also provides \"flat\" variants of the C functions as <code>gtd7_flat()</code>\nand <code>gtd7d_flat()</code>. For example using <code>gtd7()</code> the same way as above:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">nrlmsise00</span> <span class=\"kn\">import</span> <span class=\"n\">gtd7_flat</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">alts</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">401</span><span class=\"p\">,</span> <span class=\"mf\">100.</span><span class=\"p\">)</span>  <span class=\"c1\"># = [200, 300, 400] [km]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">lats</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"mi\">71</span><span class=\"p\">,</span> <span class=\"mf\">10.</span><span class=\"p\">)</span>  <span class=\"c1\"># = [60, 70] [\u00b0N]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Using broadcasting, the output will be a 2 x 3 x 11 element array:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gtd7_flat</span><span class=\"p\">(</span><span class=\"mi\">2009</span><span class=\"p\">,</span> <span class=\"mi\">172</span><span class=\"p\">,</span> <span class=\"mi\">29000</span><span class=\"p\">,</span> <span class=\"n\">alts</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:],</span> <span class=\"n\">lats</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">],</span> <span class=\"o\">-</span><span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">array</span><span class=\"p\">([[[</span><span class=\"mf\">1.55567936e+06</span><span class=\"p\">,</span> <span class=\"mf\">2.55949597e+09</span><span class=\"p\">,</span> <span class=\"mf\">4.00342724e+09</span><span class=\"p\">,</span> <span class=\"mf\">1.74513806e+08</span><span class=\"p\">,</span>\n         <span class=\"mf\">6.56916263e+06</span><span class=\"p\">,</span> <span class=\"mf\">2.64872982e-13</span><span class=\"p\">,</span> <span class=\"mf\">5.63405578e+04</span><span class=\"p\">,</span> <span class=\"mf\">4.71893934e+07</span><span class=\"p\">,</span>\n         <span class=\"mf\">3.45500931e-08</span><span class=\"p\">,</span> <span class=\"mf\">1.25053994e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.02704994e+03</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mf\">9.58507714e+05</span><span class=\"p\">,</span> <span class=\"mf\">4.66979460e+08</span><span class=\"p\">,</span> <span class=\"mf\">2.31041924e+08</span><span class=\"p\">,</span> <span class=\"mf\">6.58659651e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">1.16566762e+05</span><span class=\"p\">,</span> <span class=\"mf\">2.38399390e-14</span><span class=\"p\">,</span> <span class=\"mf\">3.86535595e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.43755262e+07</span><span class=\"p\">,</span>\n         <span class=\"mf\">1.03939126e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.25053994e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.20645403e+03</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mf\">6.66517690e+05</span><span class=\"p\">,</span> <span class=\"mf\">1.13880556e+08</span><span class=\"p\">,</span> <span class=\"mf\">1.99821093e+07</span><span class=\"p\">,</span> <span class=\"mf\">4.02276359e+05</span><span class=\"p\">,</span>\n         <span class=\"mf\">3.55746499e+03</span><span class=\"p\">,</span> <span class=\"mf\">4.07471353e-15</span><span class=\"p\">,</span> <span class=\"mf\">3.47531240e+04</span><span class=\"p\">,</span> <span class=\"mf\">4.09591327e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">2.66727321e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.25053994e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.24141613e+03</span><span class=\"p\">]],</span>\n<span class=\"o\">&lt;</span><span class=\"n\">BLANKLINE</span><span class=\"o\">&gt;</span>\n       <span class=\"p\">[[</span><span class=\"mf\">1.31669842e+06</span><span class=\"p\">,</span> <span class=\"mf\">2.40644124e+09</span><span class=\"p\">,</span> <span class=\"mf\">4.21778196e+09</span><span class=\"p\">,</span> <span class=\"mf\">1.89878716e+08</span><span class=\"p\">,</span>\n         <span class=\"mf\">8.17662024e+06</span><span class=\"p\">,</span> <span class=\"mf\">2.71788520e-13</span><span class=\"p\">,</span> <span class=\"mf\">4.64192484e+04</span><span class=\"p\">,</span> <span class=\"mf\">5.13265845e+07</span><span class=\"p\">,</span>\n         <span class=\"mf\">5.21846603e-08</span><span class=\"p\">,</span> <span class=\"mf\">1.24246351e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.04698385e+03</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mf\">8.22632403e+05</span><span class=\"p\">,</span> <span class=\"mf\">4.52803942e+08</span><span class=\"p\">,</span> <span class=\"mf\">2.53857090e+08</span><span class=\"p\">,</span> <span class=\"mf\">7.50201654e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">1.53431033e+05</span><span class=\"p\">,</span> <span class=\"mf\">2.46179628e-14</span><span class=\"p\">,</span> <span class=\"mf\">3.20594861e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.62651506e+07</span><span class=\"p\">,</span>\n         <span class=\"mf\">1.59911615e+02</span><span class=\"p\">,</span> <span class=\"mf\">1.24246351e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.20963726e+03</span><span class=\"p\">],</span>\n        <span class=\"p\">[</span><span class=\"mf\">5.73944168e+05</span><span class=\"p\">,</span> <span class=\"mf\">1.10836468e+08</span><span class=\"p\">,</span> <span class=\"mf\">2.19925518e+07</span><span class=\"p\">,</span> <span class=\"mf\">4.58648922e+05</span><span class=\"p\">,</span>\n         <span class=\"mf\">4.68600377e+03</span><span class=\"p\">,</span> <span class=\"mf\">4.10277781e-15</span><span class=\"p\">,</span> <span class=\"mf\">2.89330169e+04</span><span class=\"p\">,</span> <span class=\"mf\">4.65636025e+06</span><span class=\"p\">,</span>\n         <span class=\"mf\">4.12296154e+04</span><span class=\"p\">,</span> <span class=\"mf\">1.24246351e+03</span><span class=\"p\">,</span> <span class=\"mf\">1.23665288e+03</span><span class=\"p\">]]])</span>\n</pre>\n<h3>Note</h3>\n<p>All functions require the solar 10.7\u202fcm radio flux and and the geomagnetic Ap\nindex values to produce correct results.\nIn particular, according to the C source code:</p>\n<ul>\n<li>f107A: 81 day average of F10.7 flux (centered on the given day of year)</li>\n<li>f107: daily F10.7 flux for previous day</li>\n<li>ap: magnetic index (daily)</li>\n</ul>\n<p>The f107 and f107A values used to generate the model correspond\nto the 10.7\u202fcm radio flux at the actual distance of the Earth\nfrom the Sun rather than the radio flux at 1\u202fAU.\nThe following site provides both classes of values (<strong>outdated</strong>):\n<a>ftp://ftp.ngdc.noaa.gov/STP/SOLAR_DATA/SOLAR_RADIO/FLUX/</a></p>\n<p>f107, f107A, and ap effects are neither large nor well\nestablished below 80\u202fkm and these parameters should be set to\n150., 150., and 4. respectively.</p>\n<h1>License</h1>\n<p>This python interface is free software: you can redistribute it or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, version 2 (GPLv2), see <a href=\"./COPYING.GPLv2\" rel=\"nofollow\">local copy</a>\nor <a href=\"http://www.gnu.org/licenses/gpl-2.0.html\" rel=\"nofollow\">online version</a>.</p>\n<p>The <a href=\"https://www.brodo.de/space/nrlmsise\" rel=\"nofollow\">C source code of NRLMSISE-00</a>\nis in the public domain, see <a href=\"./COPYING.NRLMSISE-00\" rel=\"nofollow\">COPYING.NRLMSISE-00</a>.</p>\n\n          </div>"}, "last_serial": 6588985, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e9d81910cfa8d4154648a6e2b9ab4ea2", "sha256": "c5d27e7d44aeef2a51c6078fd015781e349b7206d50426c172dc0907f41e08bc"}, "downloads": -1, "filename": "nrlmsise00-0.0.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e9d81910cfa8d4154648a6e2b9ab4ea2", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 71966, "upload_time": "2020-02-07T15:26:33", "upload_time_iso_8601": "2020-02-07T15:26:33.166714Z", "url": "https://files.pythonhosted.org/packages/fb/cd/f46910022950174c7e033516d55339f2aa0f139a4da8c0eda0de1781f934/nrlmsise00-0.0.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fba11d2001f7429dbdf3c7707b1b5835", "sha256": "752160c14a82f3d9b5f9404e198df909342becdd22b5feaa2179a3018e57dcc8"}, "downloads": -1, "filename": "nrlmsise00-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fba11d2001f7429dbdf3c7707b1b5835", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49150, "upload_time": "2020-02-07T15:26:35", "upload_time_iso_8601": "2020-02-07T15:26:35.906085Z", "url": "https://files.pythonhosted.org/packages/94/cd/607fa21073ae4f12d2249459d6a104a3293bffda808ce54ceb9b58cb9f09/nrlmsise00-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9d81910cfa8d4154648a6e2b9ab4ea2", "sha256": "c5d27e7d44aeef2a51c6078fd015781e349b7206d50426c172dc0907f41e08bc"}, "downloads": -1, "filename": "nrlmsise00-0.0.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e9d81910cfa8d4154648a6e2b9ab4ea2", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 71966, "upload_time": "2020-02-07T15:26:33", "upload_time_iso_8601": "2020-02-07T15:26:33.166714Z", "url": "https://files.pythonhosted.org/packages/fb/cd/f46910022950174c7e033516d55339f2aa0f139a4da8c0eda0de1781f934/nrlmsise00-0.0.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fba11d2001f7429dbdf3c7707b1b5835", "sha256": "752160c14a82f3d9b5f9404e198df909342becdd22b5feaa2179a3018e57dcc8"}, "downloads": -1, "filename": "nrlmsise00-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fba11d2001f7429dbdf3c7707b1b5835", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49150, "upload_time": "2020-02-07T15:26:35", "upload_time_iso_8601": "2020-02-07T15:26:35.906085Z", "url": "https://files.pythonhosted.org/packages/94/cd/607fa21073ae4f12d2249459d6a104a3293bffda808ce54ceb9b58cb9f09/nrlmsise00-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:27 2020"}