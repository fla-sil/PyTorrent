{"info": {"author": "Chris (Someguy123) @ Privex", "author_email": "chris@privex.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Python SteemEngine\n\n[![Build Status](https://travis-ci.com/Privex/python-steemengine.svg?branch=master)](https://travis-ci.com/Privex/python-steemengine)\n\nA small library for querying and interfacing with the [SteemEngine](https://steem-engine.com) network, including\nsending and issuing tokens.\n\n**Official Repo:** https://github.com/privex/python-steemengine\n\n# Information\n\nThis Python SteemEngine library has been developed at [Privex Inc.](https://www.privex.io) by @someguy123 for \nboth simple querying, as well as transaction signing (sending, issuing) on the SteemEngine network.\n\nIt uses the following libraries:\n\n - [Python Requests](http://docs.python-requests.org/en/master/) for requests to SteemEngine History\n - [Beem](https://github.com/holgern/beem) by @holgern (holger80 on Steem) for Steem queries and transaction signing\n - [Privex's JsonRPC library](https://github.com/Privex/python-jsonrpc) for interacting with the SteemEngine RPC API.\n\n\n```\n+===================================================+\n|                 \u00a9 2019 Privex Inc.                |\n|               https://www.privex.io               |\n+===================================================+\n|                                                   |\n|        Python Steem Engine library                |\n|        License: X11/MIT                           |\n|                                                   |\n|        Core Developer(s):                         |\n|                                                   |\n|          (+)  Chris (@someguy123) [Privex]        |\n|                                                   |\n+===================================================+\n\nPython SteemEngine - A small library for querying and interacting with the SteemEngine network (https://steem-engine.com)\nCopyright (c) 2019    Privex Inc. ( https://www.privex.io )\n```\n\n\n# Quick Install / Usage\n\n```bash\npip3 install privex-steemengine\n```\n\n```python\nfrom decimal import Decimal\nfrom privex.steemengine import SteemEngineToken\ns = SteemEngineToken()\n\n# Get all SteemEngine transactions for @someguy123 \nfor tx in s.list_transactions('someguy123'):\n    print(tx['timestamp'], tx['symbol'], tx['quantity'], tx['memo'])\n\n# Get the amount of ENG that @someguy123 owns, as a Decimal()\nprint(s.get_token_balance('someguy123', 'ENG'))\n# 0.00\n\n# Issue 1.234 SGTK to @someguy123 - automatically detects the issuing account\ns.issue_token('SGTK', 'someguy123', Decimal('1.234'))\n\n# Send 10 ENG to @privex from @someguy123 with the memo 'hello memo'\ns.send_token('ENG', 'someguy123', 'privex', Decimal('10'), 'hello memo')\n\n```\n\nFor full parameter documentation, IDEs such as PyCharm and even Visual Studio Code should show our PyDoc\ncomments when you try to use the class.\n\n![Screenshot of PyCharm SteemEngine Help](https://i.imgur.com/R9oewTY.png)\n\nFor PyCharm, press F1 with your keyboard cursor over the class to see full function documentation, including\nreturn types, parameters, and general usage information. You can also press CMD-P with your cursor inside of \na method's brackets (including the constructor brackets) to see the parameters you can use.\n\nAlternatively, just view the files inside of `privex/steemengine/` - most methods and constructors\nare adequately commented with PyDoc.\n\n# Documentation\n\n[![Read the Documentation](https://read-the-docs-guidelines.readthedocs-hosted.com/_images/logo-wordmark-dark.png)](\nhttps://python-steemengine.readthedocs.io/en/latest/)\n\nFull documentation for this project is available above (click the Read The Docs image), including:\n\n - How to install the application and it's dependencies \n - How to use the various functions and classes\n - General documentation of the modules and classes for contributors\n\n**To build the documentation:**\n\n```bash\ngit clone https://github.com/Privex/python-steemengine\ncd python-steemengine/docs\npip3 install -r requirements.txt\n\n# It's recommended to run make clean to ensure old HTML files are removed\n# `make html` generates the .html and static files in docs/build for production\nmake clean && make html\n\n# After the files are built, you can live develop the docs using `make live`\n# then browse to http://127.0.0.1:8100/\n# If you have issues with content not showing up correctly, try make clean && make html\n# then run make live again.\nmake live\n```\n\n# Signing Transactions\n\nFor signing transactions, you will need a Beem wallet, with the password specified as the environmental variable\n`UNLOCK`. In most Python web apps, you can place this in your application's `.env` file for automatic loading.\n\nInstall Beem globally to use the `beempy` command, create a wallet, then import the active keys of the Steem accounts\nyou'll be using to transact on SteemEngine.\n\n```bash\n# Install beem globally (not in a virtualenv) for the `beempy` command to manage wallets\npip3 install -U beem\n# Create a wallet, keep the password safe, you'll need to pass it to your script\nbeempy createwallet\n# Import any active keys for accounts that you'll be transacting with\nbeempy addkey\n```\n\nExample Python script:\n\n```python\n#!/usr/bin/env python3\nfrom decimal import Decimal\nfrom beem import Steem\nfrom beem.instance import set_shared_steem_instance\n\n# Create an instance of Steem, and set it as the shared instance, so that it can be used by the library\nsteem_ins = Steem()\nsteem_ins.set_password_storage('environment')   # Tell Beem to use the `UNLOCK` env variable to unlock the wallet\nset_shared_steem_instance(steem_ins)\n\nfrom privex.steemengine import SteemEngineToken\ns = SteemEngineToken()\n# Replace the below parameters as needed. \n# Send 10 ENG to @privex from @someguy123 with the memo 'hello memo'\ns.send_token('ENG', 'someguy123', 'privex', Decimal('10'), 'hello memo')\n```\n\nSave the above as `app.py`.\n\n```bash\n# Make your script executable\nchmod +x app.py\n# Run the script, passing in your wallet password with the UNLOCK env variable.\nUNLOCK=\"YourWalletPassword\" ./app.py\n```\n\nBeem will now be able to automatically unlock your wallet to sign a Steem transaction, such as when sending or \nissuing tokens. \n\nWe recommend using something like [python-dotenv](https://github.com/theskumar/python-dotenv) in your Python projects\nso that you can store the password in a `.env` file (make sure to use secure file permissions for `.env`)\n\n# Install\n\nWe recommend that you use at least Python 3.4+ due to the usage of parameter and return type hinting.\n\n### Install from PyPi using `pip`\n\nYou can install this package via pip:\n\n```sh\npip3 install privex-steemengine\n```\n\n### (Alternative) Manual install from Git\n\nIf you don't want to PyPi (e.g. for development versions not on PyPi yet), you can install the \nproject directly from our Git repo.\n\nUnless you have a specific reason to manually install it, you **should install it using pip3 normally**\nas shown above.\n\n**Option 1 - Use pip to install straight from Github**\n\n```sh\npip3 install git+https://github.com/Privex/python-steemengine\n```\n\n**Option 2 - Clone and install manually**\n\n```bash\n# Clone the repository from Github\ngit clone https://github.com/Privex/python-steemengine\ncd python-steemengine\n\n# RECOMMENDED MANUAL INSTALL METHOD\n# Use pip to install the source code\npip3 install .\n\n# ALTERNATIVE INSTALL METHOD\n# If you don't have pip, or have issues with installing using it, then you can use setuptools instead.\npython3 setup.py install\n```\n\n\n# Logging\n\nBy default, this package will log anything >=WARNING to the console. You can override this by adjusting the\n`privex.steemengine` logger instance. \n\nWe recommend checking out our Python package [Python Loghelper](https://github.com/Privex/python-loghelper) which\nmakes it easy to manage your logging configuration, and copy it to other logging instances such as this one.\n\n```python\n# Without LogHelper\nimport logging\nl = logging.getLogger('privex.steemengine')\nl.setLevel(logging.ERROR)\n\n# With LogHelper (pip3 install privex-loghelper)\nfrom privex.loghelper import LogHelper\n# Set up logging for **your entire app**. In this case, log only messages >=error\nlh = LogHelper('myapp', handler_level=logging.ERROR)\nlh.add_file_handler('test.log')        # Log messages to the file `test.log` in the current directory\nlh.copy_logger('privex.steemengine')   # Easily copy your logging settings to any other module loggers\nlog = lh.get_logger()                  # Grab your app's logging instance, or use logging.getLogger('myapp')\nlog.error('Hello World')\n```\n\n# Unit Tests\n\nUnit tests are available in `tests.py`. We also have the project set up with [Travis CI](https://travis-ci.com/Privex/python-steemengine)\nto alert us when new releases cause the tests to break.\n\nTo run the tests manually, either simply run `tests.py` directly (or with python3), or use pytest:\n\n```sh\ngit clone https://github.com/Privex/python-steemengine\npip3 install .\n./tests.py\n# Verbose mode (shows the name of the test, and the comment under it)\n./tests.py -v\n\n# You can also use pytest - which is used by our Travis CI setup.\npip3 install pytest\npytest tests.py\n# Verbose mode\npytest tests.py\n```\n\n# Contributing\n\nWe're very happy to accept pull requests, and work on any issues reported to us. \n\nHere's some important information:\n\n**Reporting Issues:**\n\n - For bug reports, you should include the following information:\n     - Version of `privex-steemengine`, `beem` and `requests` tested on - use `pip3 freeze`\n        - If not installed via a PyPi release, git revision number that the issue was tested on - `git log -n1`\n     - Your python3 version - `python3 -V`\n     - Your operating system and OS version (e.g. Ubuntu 18.04, Debian 7)\n - For feature requests / changes\n     - Please avoid suggestions that require new dependencies. This tool is designed to be lightweight, not filled with\n       external dependencies.\n     - Clearly explain the feature/change that you would like to be added\n     - Explain why the feature/change would be useful to us, or other users of the tool\n     - Be aware that features/changes that are complicated to add, or we simply find un-necessary for our use of the tool \n       may not be added (but we may accept PRs)\n\n**Pull Requests:**\n\n - We'll happily accept PRs that only add code comments or README changes\n - Use 4 spaces, not tabs when contributing to the code\n - You can use features from Python 3.4+ (we run Python 3.7+ for our projects)\n    - Features that require a Python version that has not yet been released for the latest stable release\n      of Ubuntu Server LTS (at this time, Ubuntu 18.04 Bionic) will not be accepted. \n - Clearly explain the purpose of your pull request in the title and description\n     - What changes have you made?\n     - Why have you made these changes?\n - Please make sure that code contributions are appropriately commented - we won't accept changes that involve \n   uncommented, highly terse one-liners.\n\n**Legal Disclaimer for Contributions**\n\nNobody wants to read a long document filled with legal text, so we've summed up the important parts here.\n\nIf you contribute content that you've created/own to projects that are created/owned by Privex, such as code or \ndocumentation, then you might automatically grant us unrestricted usage of your content, regardless of the open source \nlicense that applies to our project.\n\nIf you don't want to grant us unlimited usage of your content, you should make sure to place your content\nin a separate file, making sure that the license of your content is clearly displayed at the start of the file \n(e.g. code comments), or inside of it's containing folder (e.g. a file named LICENSE). \n\nYou should let us know in your pull request or issue that you've included files which are licensed\nseparately, so that we can make sure there's no license conflicts that might stop us being able\nto accept your contribution.\n\nIf you'd rather read the whole legal text, it should be included as `privex_contribution_agreement.txt`.\n\n# License\n\nThis project is licensed under the **X11 / MIT** license. See the file **LICENSE** for full details.\n\nHere's the important bits:\n\n - You must include/display the license & copyright notice (`LICENSE`) if you modify/distribute/copy\n   some or all of this project.\n - You can't use our name to promote / endorse your product without asking us for permission.\n   You can however, state that your product uses some/all of this project.\n\n\n\n# Thanks for reading!\n\n**If this project has helped you, consider [grabbing a VPS or Dedicated Server from Privex](https://www.privex.io) - \nprices start at as little as US$8/mo (we take cryptocurrency!)**\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Privex/python-steemengine", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "privex-steemengine", "package_url": "https://pypi.org/project/privex-steemengine/", "platform": "", "project_url": "https://pypi.org/project/privex-steemengine/", "project_urls": {"Homepage": "https://github.com/Privex/python-steemengine"}, "release_url": "https://pypi.org/project/privex-steemengine/1.2.1/", "requires_dist": ["privex-jsonrpc (>=1.0.0)", "beem (>=0.22.11)", "requests (>=2.20.1)", "privex-helpers (>=1.1.0)"], "requires_python": "", "summary": "A small library for querying and interacting with the SteemEngine network (https://steem-engine.com)", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python SteemEngine</h1>\n<p><a href=\"https://travis-ci.com/Privex/python-steemengine\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b9301ef76cceacef5cd25ad10e66d2ac421648a/68747470733a2f2f7472617669732d63692e636f6d2f5072697665782f707974686f6e2d737465656d656e67696e652e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A small library for querying and interfacing with the <a href=\"https://steem-engine.com\" rel=\"nofollow\">SteemEngine</a> network, including\nsending and issuing tokens.</p>\n<p><strong>Official Repo:</strong> <a href=\"https://github.com/privex/python-steemengine\" rel=\"nofollow\">https://github.com/privex/python-steemengine</a></p>\n<h1>Information</h1>\n<p>This Python SteemEngine library has been developed at <a href=\"https://www.privex.io\" rel=\"nofollow\">Privex Inc.</a> by @someguy123 for\nboth simple querying, as well as transaction signing (sending, issuing) on the SteemEngine network.</p>\n<p>It uses the following libraries:</p>\n<ul>\n<li><a href=\"http://docs.python-requests.org/en/master/\" rel=\"nofollow\">Python Requests</a> for requests to SteemEngine History</li>\n<li><a href=\"https://github.com/holgern/beem\" rel=\"nofollow\">Beem</a> by @holgern (holger80 on Steem) for Steem queries and transaction signing</li>\n<li><a href=\"https://github.com/Privex/python-jsonrpc\" rel=\"nofollow\">Privex's JsonRPC library</a> for interacting with the SteemEngine RPC API.</li>\n</ul>\n<pre><code>+===================================================+\n|                 \u00a9 2019 Privex Inc.                |\n|               https://www.privex.io               |\n+===================================================+\n|                                                   |\n|        Python Steem Engine library                |\n|        License: X11/MIT                           |\n|                                                   |\n|        Core Developer(s):                         |\n|                                                   |\n|          (+)  Chris (@someguy123) [Privex]        |\n|                                                   |\n+===================================================+\n\nPython SteemEngine - A small library for querying and interacting with the SteemEngine network (https://steem-engine.com)\nCopyright (c) 2019    Privex Inc. ( https://www.privex.io )\n</code></pre>\n<h1>Quick Install / Usage</h1>\n<pre>pip3 install privex-steemengine\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">decimal</span> <span class=\"kn\">import</span> <span class=\"n\">Decimal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">privex.steemengine</span> <span class=\"kn\">import</span> <span class=\"n\">SteemEngineToken</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SteemEngineToken</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Get all SteemEngine transactions for @someguy123 </span>\n<span class=\"k\">for</span> <span class=\"n\">tx</span> <span class=\"ow\">in</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">list_transactions</span><span class=\"p\">(</span><span class=\"s1\">'someguy123'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tx</span><span class=\"p\">[</span><span class=\"s1\">'timestamp'</span><span class=\"p\">],</span> <span class=\"n\">tx</span><span class=\"p\">[</span><span class=\"s1\">'symbol'</span><span class=\"p\">],</span> <span class=\"n\">tx</span><span class=\"p\">[</span><span class=\"s1\">'quantity'</span><span class=\"p\">],</span> <span class=\"n\">tx</span><span class=\"p\">[</span><span class=\"s1\">'memo'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Get the amount of ENG that @someguy123 owns, as a Decimal()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_token_balance</span><span class=\"p\">(</span><span class=\"s1\">'someguy123'</span><span class=\"p\">,</span> <span class=\"s1\">'ENG'</span><span class=\"p\">))</span>\n<span class=\"c1\"># 0.00</span>\n\n<span class=\"c1\"># Issue 1.234 SGTK to @someguy123 - automatically detects the issuing account</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">issue_token</span><span class=\"p\">(</span><span class=\"s1\">'SGTK'</span><span class=\"p\">,</span> <span class=\"s1\">'someguy123'</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s1\">'1.234'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Send 10 ENG to @privex from @someguy123 with the memo 'hello memo'</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">send_token</span><span class=\"p\">(</span><span class=\"s1\">'ENG'</span><span class=\"p\">,</span> <span class=\"s1\">'someguy123'</span><span class=\"p\">,</span> <span class=\"s1\">'privex'</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s1\">'10'</span><span class=\"p\">),</span> <span class=\"s1\">'hello memo'</span><span class=\"p\">)</span>\n</pre>\n<p>For full parameter documentation, IDEs such as PyCharm and even Visual Studio Code should show our PyDoc\ncomments when you try to use the class.</p>\n<p><img alt=\"Screenshot of PyCharm SteemEngine Help\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91b1baae26f4a6ce48976351cedd96514dab52a6/68747470733a2f2f692e696d6775722e636f6d2f52396f657754592e706e67\"></p>\n<p>For PyCharm, press F1 with your keyboard cursor over the class to see full function documentation, including\nreturn types, parameters, and general usage information. You can also press CMD-P with your cursor inside of\na method's brackets (including the constructor brackets) to see the parameters you can use.</p>\n<p>Alternatively, just view the files inside of <code>privex/steemengine/</code> - most methods and constructors\nare adequately commented with PyDoc.</p>\n<h1>Documentation</h1>\n<p><a href=\"https://python-steemengine.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"Read the Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08279f67510346dcc10aa7437ea4054293ae8b2b/68747470733a2f2f726561642d7468652d646f63732d67756964656c696e65732e72656164746865646f63732d686f737465642e636f6d2f5f696d616765732f6c6f676f2d776f72646d61726b2d6461726b2e706e67\"></a></p>\n<p>Full documentation for this project is available above (click the Read The Docs image), including:</p>\n<ul>\n<li>How to install the application and it's dependencies</li>\n<li>How to use the various functions and classes</li>\n<li>General documentation of the modules and classes for contributors</li>\n</ul>\n<p><strong>To build the documentation:</strong></p>\n<pre>git clone https://github.com/Privex/python-steemengine\n<span class=\"nb\">cd</span> python-steemengine/docs\npip3 install -r requirements.txt\n\n<span class=\"c1\"># It's recommended to run make clean to ensure old HTML files are removed</span>\n<span class=\"c1\"># `make html` generates the .html and static files in docs/build for production</span>\nmake clean <span class=\"o\">&amp;&amp;</span> make html\n\n<span class=\"c1\"># After the files are built, you can live develop the docs using `make live`</span>\n<span class=\"c1\"># then browse to http://127.0.0.1:8100/</span>\n<span class=\"c1\"># If you have issues with content not showing up correctly, try make clean &amp;&amp; make html</span>\n<span class=\"c1\"># then run make live again.</span>\nmake live\n</pre>\n<h1>Signing Transactions</h1>\n<p>For signing transactions, you will need a Beem wallet, with the password specified as the environmental variable\n<code>UNLOCK</code>. In most Python web apps, you can place this in your application's <code>.env</code> file for automatic loading.</p>\n<p>Install Beem globally to use the <code>beempy</code> command, create a wallet, then import the active keys of the Steem accounts\nyou'll be using to transact on SteemEngine.</p>\n<pre><span class=\"c1\"># Install beem globally (not in a virtualenv) for the `beempy` command to manage wallets</span>\npip3 install -U beem\n<span class=\"c1\"># Create a wallet, keep the password safe, you'll need to pass it to your script</span>\nbeempy createwallet\n<span class=\"c1\"># Import any active keys for accounts that you'll be transacting with</span>\nbeempy addkey\n</pre>\n<p>Example Python script:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">decimal</span> <span class=\"kn\">import</span> <span class=\"n\">Decimal</span>\n<span class=\"kn\">from</span> <span class=\"nn\">beem</span> <span class=\"kn\">import</span> <span class=\"n\">Steem</span>\n<span class=\"kn\">from</span> <span class=\"nn\">beem.instance</span> <span class=\"kn\">import</span> <span class=\"n\">set_shared_steem_instance</span>\n\n<span class=\"c1\"># Create an instance of Steem, and set it as the shared instance, so that it can be used by the library</span>\n<span class=\"n\">steem_ins</span> <span class=\"o\">=</span> <span class=\"n\">Steem</span><span class=\"p\">()</span>\n<span class=\"n\">steem_ins</span><span class=\"o\">.</span><span class=\"n\">set_password_storage</span><span class=\"p\">(</span><span class=\"s1\">'environment'</span><span class=\"p\">)</span>   <span class=\"c1\"># Tell Beem to use the `UNLOCK` env variable to unlock the wallet</span>\n<span class=\"n\">set_shared_steem_instance</span><span class=\"p\">(</span><span class=\"n\">steem_ins</span><span class=\"p\">)</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">privex.steemengine</span> <span class=\"kn\">import</span> <span class=\"n\">SteemEngineToken</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SteemEngineToken</span><span class=\"p\">()</span>\n<span class=\"c1\"># Replace the below parameters as needed. </span>\n<span class=\"c1\"># Send 10 ENG to @privex from @someguy123 with the memo 'hello memo'</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">send_token</span><span class=\"p\">(</span><span class=\"s1\">'ENG'</span><span class=\"p\">,</span> <span class=\"s1\">'someguy123'</span><span class=\"p\">,</span> <span class=\"s1\">'privex'</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s1\">'10'</span><span class=\"p\">),</span> <span class=\"s1\">'hello memo'</span><span class=\"p\">)</span>\n</pre>\n<p>Save the above as <code>app.py</code>.</p>\n<pre><span class=\"c1\"># Make your script executable</span>\nchmod +x app.py\n<span class=\"c1\"># Run the script, passing in your wallet password with the UNLOCK env variable.</span>\n<span class=\"nv\">UNLOCK</span><span class=\"o\">=</span><span class=\"s2\">\"YourWalletPassword\"</span> ./app.py\n</pre>\n<p>Beem will now be able to automatically unlock your wallet to sign a Steem transaction, such as when sending or\nissuing tokens.</p>\n<p>We recommend using something like <a href=\"https://github.com/theskumar/python-dotenv\" rel=\"nofollow\">python-dotenv</a> in your Python projects\nso that you can store the password in a <code>.env</code> file (make sure to use secure file permissions for <code>.env</code>)</p>\n<h1>Install</h1>\n<p>We recommend that you use at least Python 3.4+ due to the usage of parameter and return type hinting.</p>\n<h3>Install from PyPi using <code>pip</code></h3>\n<p>You can install this package via pip:</p>\n<pre>pip3 install privex-steemengine\n</pre>\n<h3>(Alternative) Manual install from Git</h3>\n<p>If you don't want to PyPi (e.g. for development versions not on PyPi yet), you can install the\nproject directly from our Git repo.</p>\n<p>Unless you have a specific reason to manually install it, you <strong>should install it using pip3 normally</strong>\nas shown above.</p>\n<p><strong>Option 1 - Use pip to install straight from Github</strong></p>\n<pre>pip3 install git+https://github.com/Privex/python-steemengine\n</pre>\n<p><strong>Option 2 - Clone and install manually</strong></p>\n<pre><span class=\"c1\"># Clone the repository from Github</span>\ngit clone https://github.com/Privex/python-steemengine\n<span class=\"nb\">cd</span> python-steemengine\n\n<span class=\"c1\"># RECOMMENDED MANUAL INSTALL METHOD</span>\n<span class=\"c1\"># Use pip to install the source code</span>\npip3 install .\n\n<span class=\"c1\"># ALTERNATIVE INSTALL METHOD</span>\n<span class=\"c1\"># If you don't have pip, or have issues with installing using it, then you can use setuptools instead.</span>\npython3 setup.py install\n</pre>\n<h1>Logging</h1>\n<p>By default, this package will log anything &gt;=WARNING to the console. You can override this by adjusting the\n<code>privex.steemengine</code> logger instance.</p>\n<p>We recommend checking out our Python package <a href=\"https://github.com/Privex/python-loghelper\" rel=\"nofollow\">Python Loghelper</a> which\nmakes it easy to manage your logging configuration, and copy it to other logging instances such as this one.</p>\n<pre><span class=\"c1\"># Without LogHelper</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'privex.steemengine'</span><span class=\"p\">)</span>\n<span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">ERROR</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># With LogHelper (pip3 install privex-loghelper)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">privex.loghelper</span> <span class=\"kn\">import</span> <span class=\"n\">LogHelper</span>\n<span class=\"c1\"># Set up logging for **your entire app**. In this case, log only messages &gt;=error</span>\n<span class=\"n\">lh</span> <span class=\"o\">=</span> <span class=\"n\">LogHelper</span><span class=\"p\">(</span><span class=\"s1\">'myapp'</span><span class=\"p\">,</span> <span class=\"n\">handler_level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">ERROR</span><span class=\"p\">)</span>\n<span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">add_file_handler</span><span class=\"p\">(</span><span class=\"s1\">'test.log'</span><span class=\"p\">)</span>        <span class=\"c1\"># Log messages to the file `test.log` in the current directory</span>\n<span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">copy_logger</span><span class=\"p\">(</span><span class=\"s1\">'privex.steemengine'</span><span class=\"p\">)</span>   <span class=\"c1\"># Easily copy your logging settings to any other module loggers</span>\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">lh</span><span class=\"o\">.</span><span class=\"n\">get_logger</span><span class=\"p\">()</span>                  <span class=\"c1\"># Grab your app's logging instance, or use logging.getLogger('myapp')</span>\n<span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'Hello World'</span><span class=\"p\">)</span>\n</pre>\n<h1>Unit Tests</h1>\n<p>Unit tests are available in <code>tests.py</code>. We also have the project set up with <a href=\"https://travis-ci.com/Privex/python-steemengine\" rel=\"nofollow\">Travis CI</a>\nto alert us when new releases cause the tests to break.</p>\n<p>To run the tests manually, either simply run <code>tests.py</code> directly (or with python3), or use pytest:</p>\n<pre>git clone https://github.com/Privex/python-steemengine\npip3 install .\n./tests.py\n<span class=\"c1\"># Verbose mode (shows the name of the test, and the comment under it)</span>\n./tests.py -v\n\n<span class=\"c1\"># You can also use pytest - which is used by our Travis CI setup.</span>\npip3 install pytest\npytest tests.py\n<span class=\"c1\"># Verbose mode</span>\npytest tests.py\n</pre>\n<h1>Contributing</h1>\n<p>We're very happy to accept pull requests, and work on any issues reported to us.</p>\n<p>Here's some important information:</p>\n<p><strong>Reporting Issues:</strong></p>\n<ul>\n<li>For bug reports, you should include the following information:\n<ul>\n<li>Version of <code>privex-steemengine</code>, <code>beem</code> and <code>requests</code> tested on - use <code>pip3 freeze</code>\n<ul>\n<li>If not installed via a PyPi release, git revision number that the issue was tested on - <code>git log -n1</code></li>\n</ul>\n</li>\n<li>Your python3 version - <code>python3 -V</code></li>\n<li>Your operating system and OS version (e.g. Ubuntu 18.04, Debian 7)</li>\n</ul>\n</li>\n<li>For feature requests / changes\n<ul>\n<li>Please avoid suggestions that require new dependencies. This tool is designed to be lightweight, not filled with\nexternal dependencies.</li>\n<li>Clearly explain the feature/change that you would like to be added</li>\n<li>Explain why the feature/change would be useful to us, or other users of the tool</li>\n<li>Be aware that features/changes that are complicated to add, or we simply find un-necessary for our use of the tool\nmay not be added (but we may accept PRs)</li>\n</ul>\n</li>\n</ul>\n<p><strong>Pull Requests:</strong></p>\n<ul>\n<li>We'll happily accept PRs that only add code comments or README changes</li>\n<li>Use 4 spaces, not tabs when contributing to the code</li>\n<li>You can use features from Python 3.4+ (we run Python 3.7+ for our projects)\n<ul>\n<li>Features that require a Python version that has not yet been released for the latest stable release\nof Ubuntu Server LTS (at this time, Ubuntu 18.04 Bionic) will not be accepted.</li>\n</ul>\n</li>\n<li>Clearly explain the purpose of your pull request in the title and description\n<ul>\n<li>What changes have you made?</li>\n<li>Why have you made these changes?</li>\n</ul>\n</li>\n<li>Please make sure that code contributions are appropriately commented - we won't accept changes that involve\nuncommented, highly terse one-liners.</li>\n</ul>\n<p><strong>Legal Disclaimer for Contributions</strong></p>\n<p>Nobody wants to read a long document filled with legal text, so we've summed up the important parts here.</p>\n<p>If you contribute content that you've created/own to projects that are created/owned by Privex, such as code or\ndocumentation, then you might automatically grant us unrestricted usage of your content, regardless of the open source\nlicense that applies to our project.</p>\n<p>If you don't want to grant us unlimited usage of your content, you should make sure to place your content\nin a separate file, making sure that the license of your content is clearly displayed at the start of the file\n(e.g. code comments), or inside of it's containing folder (e.g. a file named LICENSE).</p>\n<p>You should let us know in your pull request or issue that you've included files which are licensed\nseparately, so that we can make sure there's no license conflicts that might stop us being able\nto accept your contribution.</p>\n<p>If you'd rather read the whole legal text, it should be included as <code>privex_contribution_agreement.txt</code>.</p>\n<h1>License</h1>\n<p>This project is licensed under the <strong>X11 / MIT</strong> license. See the file <strong>LICENSE</strong> for full details.</p>\n<p>Here's the important bits:</p>\n<ul>\n<li>You must include/display the license &amp; copyright notice (<code>LICENSE</code>) if you modify/distribute/copy\nsome or all of this project.</li>\n<li>You can't use our name to promote / endorse your product without asking us for permission.\nYou can however, state that your product uses some/all of this project.</li>\n</ul>\n<h1>Thanks for reading!</h1>\n<p><strong>If this project has helped you, consider <a href=\"https://www.privex.io\" rel=\"nofollow\">grabbing a VPS or Dedicated Server from Privex</a> -\nprices start at as little as US$8/mo (we take cryptocurrency!)</strong></p>\n\n          </div>"}, "last_serial": 6916512, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "19dfe786b1790258005ca80f083a16f6", "sha256": "c499181a808b178bffb7e11bac5d7deb88972931f94c2919c106b101fe392beb"}, "downloads": -1, "filename": "privex_steemengine-1.0.0-py3.7.egg", "has_sig": false, "md5_digest": "19dfe786b1790258005ca80f083a16f6", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 21338, "upload_time": "2019-03-18T03:54:50", "upload_time_iso_8601": "2019-03-18T03:54:50.769761Z", "url": "https://files.pythonhosted.org/packages/11/9a/f6698209122ad75c2c101687a5244d3830f7c5ad64bf42072c5ff57bfb0a/privex_steemengine-1.0.0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f74d152b144086d55e969c72fe4c6a0", "sha256": "d3e4a468c8f8caa9ef9d55680e9af5e33622b4d0104f1ff6f510996cad8dce26"}, "downloads": -1, "filename": "privex_steemengine-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0f74d152b144086d55e969c72fe4c6a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17027, "upload_time": "2019-03-18T03:54:48", "upload_time_iso_8601": "2019-03-18T03:54:48.872856Z", "url": "https://files.pythonhosted.org/packages/71/08/43cdc1aa011eb1b5b486fc9342e8a0b187a696da1e379e41fd057592d4d3/privex_steemengine-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06885137f09bf6c8727fdb14ddf24b69", "sha256": "41dc62224decb29ea3f806fbe6d680c7eb954160f53f5d2d621d88855b082796"}, "downloads": -1, "filename": "privex_steemengine-1.0.0.tar.gz", "has_sig": false, "md5_digest": "06885137f09bf6c8727fdb14ddf24b69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14946, "upload_time": "2019-03-18T03:54:52", "upload_time_iso_8601": "2019-03-18T03:54:52.205202Z", "url": "https://files.pythonhosted.org/packages/d6/3b/958deb6bdecd7e35f34a1bfd3958dce90d64dba6c7a226c59ee92ab9ed48/privex_steemengine-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "584a59840e6d18656db27dd898df93bf", "sha256": "a063bf6ebb0a03dfdcf49e8830c7795167a53d2d841ff9565e82bad5d6b95046"}, "downloads": -1, "filename": "privex_steemengine-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "584a59840e6d18656db27dd898df93bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17588, "upload_time": "2019-03-18T05:10:53", "upload_time_iso_8601": "2019-03-18T05:10:53.913494Z", "url": "https://files.pythonhosted.org/packages/fc/33/9a76bf830a62424895154373fce80a3eb5b5b99dc81324e08ba446603fa2/privex_steemengine-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed4c30de094b39b4b389e1e6a6bd56b0", "sha256": "f6a5f2baab7f2dadfca96783d8f210adbe5bbb49522a7c5a63688a3b0d22b185"}, "downloads": -1, "filename": "privex_steemengine-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ed4c30de094b39b4b389e1e6a6bd56b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15473, "upload_time": "2019-03-18T05:10:57", "upload_time_iso_8601": "2019-03-18T05:10:57.007835Z", "url": "https://files.pythonhosted.org/packages/4f/76/b9ba1f96df9943d4880caace5c9183ea4e51fd757863e490fee40740f649/privex_steemengine-1.0.1.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "5922af22132d1b4781b61eeb83c99f2e", "sha256": "0e4457f58640d0a57321faf03f7cde2d6028e9913c88917fa1ecec2b188ddc6b"}, "downloads": -1, "filename": "privex_steemengine-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "5922af22132d1b4781b61eeb83c99f2e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17813, "upload_time": "2019-07-21T09:02:11", "upload_time_iso_8601": "2019-07-21T09:02:11.017431Z", "url": "https://files.pythonhosted.org/packages/9d/79/aed7d337de8d5bbc962e5b5a875fef1c6e30a0c1f8bd78158a32e13ac13c/privex_steemengine-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e23497089487b2db83aa682af37137d5", "sha256": "cf82cbb4a32f7de0d2e8cdb1ce9677b950360057e7703966ced76e4bbcbe155c"}, "downloads": -1, "filename": "privex_steemengine-1.0.5.tar.gz", "has_sig": false, "md5_digest": "e23497089487b2db83aa682af37137d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15674, "upload_time": "2019-07-21T09:02:15", "upload_time_iso_8601": "2019-07-21T09:02:15.461712Z", "url": "https://files.pythonhosted.org/packages/ce/83/f302d95675b92e1ec156caf1f0832d435358deae9a59bb103b6adcf1560b/privex_steemengine-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "ea5476e79c20db18dacc6b9a8eb2f9e4", "sha256": "93078a2fb2e837a2cebb2f1f22f135ae5045f0c9f4587ef0cd39024038a7d363"}, "downloads": -1, "filename": "privex_steemengine-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "ea5476e79c20db18dacc6b9a8eb2f9e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19105, "upload_time": "2019-07-21T13:30:16", "upload_time_iso_8601": "2019-07-21T13:30:16.092790Z", "url": "https://files.pythonhosted.org/packages/10/de/d6fd40cdd0aeeb507c21f079120959289fa8807dcb5606678ad0a5e843d4/privex_steemengine-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7e6d32f695f805b7a50e1893feef6e5", "sha256": "aafa37bb09fcea33b3eec89e2df31f41bf6aa17997950b0c9ac1f86ce9060438"}, "downloads": -1, "filename": "privex_steemengine-1.0.6.tar.gz", "has_sig": false, "md5_digest": "b7e6d32f695f805b7a50e1893feef6e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17396, "upload_time": "2019-07-21T13:30:21", "upload_time_iso_8601": "2019-07-21T13:30:21.463628Z", "url": "https://files.pythonhosted.org/packages/0d/f9/d71841fb8e9ebc3adc3ec909aa85d36d210033319f96b7c4770d063739d5/privex_steemengine-1.0.6.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "6a70ac79c08be4e716eb742242f511db", "sha256": "6cdff1b473c4edb5f7ffd925f56addfdf51916f48b3d72faeb52446df05c921b"}, "downloads": -1, "filename": "privex_steemengine-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6a70ac79c08be4e716eb742242f511db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21660, "upload_time": "2019-07-21T16:06:54", "upload_time_iso_8601": "2019-07-21T16:06:54.338075Z", "url": "https://files.pythonhosted.org/packages/6b/66/af00edf2a1bcb4edc447ed04510fe148e75f1b6aa5effaa22f63730e8e4f/privex_steemengine-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22eb968bf40fae7aa1bc6692fac603b0", "sha256": "f2b16df4310d0a8c57d0c5451d6560518f70aeb3b470b3b7540a3cc64ecc514b"}, "downloads": -1, "filename": "privex_steemengine-1.1.0.tar.gz", "has_sig": false, "md5_digest": "22eb968bf40fae7aa1bc6692fac603b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19519, "upload_time": "2019-07-21T16:07:00", "upload_time_iso_8601": "2019-07-21T16:07:00.384151Z", "url": "https://files.pythonhosted.org/packages/36/d2/01551705f4d4b10da64c02f0f8e52fa86747d254eb0662f38c779923c2bc/privex_steemengine-1.1.0.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "f7b14dc3d504f5956d290655d1a56199", "sha256": "7d10f45a415c1d2cf1a2d6c1bab1758fa95474b1c9d46e3c152db7c89e46d3af"}, "downloads": -1, "filename": "privex_steemengine-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f7b14dc3d504f5956d290655d1a56199", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23413, "upload_time": "2019-07-27T01:59:20", "upload_time_iso_8601": "2019-07-27T01:59:20.246585Z", "url": "https://files.pythonhosted.org/packages/32/4c/125e7d98525ab39a1d5a9e85125ab100e5d8fde58c58f1417e5d18be5e14/privex_steemengine-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8a4311e63d09c0e4d11619ed0e90c70", "sha256": "76686a04735b3a99d6d2a0918b8abd5a71fa206e3874b8709593d6eaec57c647"}, "downloads": -1, "filename": "privex_steemengine-1.1.3.tar.gz", "has_sig": false, "md5_digest": "b8a4311e63d09c0e4d11619ed0e90c70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22379, "upload_time": "2019-07-27T01:59:27", "upload_time_iso_8601": "2019-07-27T01:59:27.717411Z", "url": "https://files.pythonhosted.org/packages/9c/d8/e5ecd1a818b56ee10c354e44ee32ccc07fb48bd4bbbf0af1065941625e42/privex_steemengine-1.1.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "8a1a10154e03f05dc0f08bb47f7abc83", "sha256": "48958daac74a68a08f63c50ba18b3e2d690b4d8323c203f4670b3a9fd46952f3"}, "downloads": -1, "filename": "privex_steemengine-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8a1a10154e03f05dc0f08bb47f7abc83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23609, "upload_time": "2020-03-30T20:52:34", "upload_time_iso_8601": "2020-03-30T20:52:34.740964Z", "url": "https://files.pythonhosted.org/packages/c2/68/b67d8488afb5ee757a20e07366a97bc55f315452d15019b68097d91df34a/privex_steemengine-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2d8a251ba0f79759d2de6478e910736", "sha256": "1b01457102fd65c399bc903d25ba23a97b9893573ec4112b236ff72785ae4650"}, "downloads": -1, "filename": "privex_steemengine-1.2.0.tar.gz", "has_sig": false, "md5_digest": "c2d8a251ba0f79759d2de6478e910736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23186, "upload_time": "2020-03-30T20:52:36", "upload_time_iso_8601": "2020-03-30T20:52:36.621762Z", "url": "https://files.pythonhosted.org/packages/62/0f/01c1d59e9fe3cffc5cd235bd3dfc11a9e2ac8ea458f090cf4a98a2443c95/privex_steemengine-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "4b1ee467e36527746265f3642a8f94db", "sha256": "0ba5d9e7fe51a8d23e009697e896ea5094964ff86628947b90a36632ff9cd751"}, "downloads": -1, "filename": "privex_steemengine-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4b1ee467e36527746265f3642a8f94db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23617, "upload_time": "2020-03-30T22:10:02", "upload_time_iso_8601": "2020-03-30T22:10:02.968076Z", "url": "https://files.pythonhosted.org/packages/70/d6/cd7ba7616f5b2a361e7bb5e69bede9773b606266ff840ddb8d4cebf84a17/privex_steemengine-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaa405143600799ba42bc8283a28f4e8", "sha256": "0b6bef05f267c6a2f6e4299dc8dca4d163fc9cccb7c29c59b0e8389244e03de1"}, "downloads": -1, "filename": "privex_steemengine-1.2.1.tar.gz", "has_sig": false, "md5_digest": "aaa405143600799ba42bc8283a28f4e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23168, "upload_time": "2020-03-30T22:10:04", "upload_time_iso_8601": "2020-03-30T22:10:04.273150Z", "url": "https://files.pythonhosted.org/packages/84/80/12f421eceb140a4e433cdf0bd758b4b1703b6b3aa28466082e2fc00ea51b/privex_steemengine-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b1ee467e36527746265f3642a8f94db", "sha256": "0ba5d9e7fe51a8d23e009697e896ea5094964ff86628947b90a36632ff9cd751"}, "downloads": -1, "filename": "privex_steemengine-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4b1ee467e36527746265f3642a8f94db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23617, "upload_time": "2020-03-30T22:10:02", "upload_time_iso_8601": "2020-03-30T22:10:02.968076Z", "url": "https://files.pythonhosted.org/packages/70/d6/cd7ba7616f5b2a361e7bb5e69bede9773b606266ff840ddb8d4cebf84a17/privex_steemengine-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaa405143600799ba42bc8283a28f4e8", "sha256": "0b6bef05f267c6a2f6e4299dc8dca4d163fc9cccb7c29c59b0e8389244e03de1"}, "downloads": -1, "filename": "privex_steemengine-1.2.1.tar.gz", "has_sig": false, "md5_digest": "aaa405143600799ba42bc8283a28f4e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23168, "upload_time": "2020-03-30T22:10:04", "upload_time_iso_8601": "2020-03-30T22:10:04.273150Z", "url": "https://files.pythonhosted.org/packages/84/80/12f421eceb140a4e433cdf0bd758b4b1703b6b3aa28466082e2fc00ea51b/privex_steemengine-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:08 2020"}