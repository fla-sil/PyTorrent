{"info": {"author": "Martin Larralde", "author_email": "martin.larralde@embl.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Rust", "Topic :: Scientific/Engineering :: Medical Science Apps.", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# `nanoset.py` [![starme](https://img.shields.io/github/stars/althonos/nanoset.py.svg?style=social&label=Star)](https://github.com/althonos/nanoset.py)\n\n*A memory-optimized wrapper for Python sets likely to be empty.*\n\n[![TravisCI](https://img.shields.io/travis/althonos/nanoset.py/master.svg?logo=travis&maxAge=600&style=flat-square)](https://travis-ci.org/althonos/nanoset.py/branches)\n[![AppVeyor](https://img.shields.io/appveyor/ci/althonos/nanoset-py/master?logo=appveyor&style=flat-square&maxAge=600)](https://ci.appveyor.com/project/althonos/nanoset-py)\n[![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square&maxAge=2678400)](https://choosealicense.com/licenses/mit/)\n[![Source](https://img.shields.io/badge/source-GitHub-303030.svg?maxAge=2678400&style=flat-square)](https://github.com/althonos/nanoset.py/)\n[![PyPI](https://img.shields.io/pypi/v/nanoset.svg?style=flat-square&maxAge=600)](https://pypi.org/project/nanoset)\n[![Crates](https://img.shields.io/crates/v/nanoset-py?style=flat-square&maxAge=600)](https://crates.io/crates/nanoset-py)\n[![Wheel](https://img.shields.io/pypi/wheel/nanoset.svg?style=flat-square&maxAge=3600)](https://pypi.org/project/nanoset/#files)\n[![Python Versions](https://img.shields.io/pypi/pyversions/nanoset.svg?style=flat-square&maxAge=600)](https://pypi.org/project/nanoset/#files)\n[![Python Implementations](https://img.shields.io/pypi/implementation/nanoset.svg?style=flat-square&maxAge=600)](https://pypi.org/project/nanoset/#files)\n[![Changelog](https://img.shields.io/badge/keep%20a-changelog-8A0707.svg?maxAge=2678400&style=flat-square)](https://github.com/althonos/nanoset.py/blob/master/CHANGELOG.md)\n[![GitHub issues](https://img.shields.io/github/issues/althonos/nanoset.py.svg?style=flat-square&maxAge=600)](https://github.com/althonos/nanoset.py/issues)\n\n## \u23f1\ufe0f TL;DR\n\nSave up to 85% of the memory used by empty `set` instances in your code with\na single line of code:\n```python\nfrom nanoset import PicoSet as set\n```\n\n## \ud83d\udea9 Table of Contents\n\n- [Overview](#-overview)\n  * [About Python memory usage](#-about-python-memory-usage)\n  * [Simple example usecase](#-simple-example-usecase)\n  * [Implementation](#-implementation)\n  * [Statistics](#-statistics)\n- [Installing](#-installing)\n- [API Reference](#-api-reference)\n- [License](#-license)\n\n\n## \ud83d\uddfa\ufe0f Overview\n\n### \ud83d\udc0f About Python memory usage\n\nPython is a great programming language (*fight me*), but sometimes you start\nquestioning why it does things in certain ways. Since Python 2.3, the standard\nlibrary provides the [`set`](https://docs.python.org/3.7/library/stdtypes.html#set)\ncollection, which is a specialized container for membership testing. On the\ncontrary to the ubiquitous [`list`](https://docs.python.org/3.7/library/stdtypes.html#list)\ncollection, `set` is not ordered (or, more accurately, *does not let you access\nthe order it stores the elements in*). The other feature of `set` is that just\nlike its mathematical counterpart, it does not allow duplicates, which is very\nuseful for some algorithms. However, **sets are memory-expensive**:\n```python\n>>> import sys\n>>> sys.getsizeof(list())\n72\n>>> sys.getsizeof(set())\n232\n```\n\nAn empty set takes more than three times the memory of an empty list! For some\ndata structures or objects with a lot of `set` attributes, they can quickly\ncause a very large part of the memory to be used for nothing. This is even more\nsad when you are used to [Rust](https://www.rust-lang.org/), where most\n[collections](https://doc.rust-lang.org/std/collections/) allocate lazily.\n**This is where `nanoset` comes to the rescue:**\n```python\n>>> import nanoset\n>>> sys.getsizeof(nanoset.NanoSet())\n56\n>>> sys.getsizeof(nanoset.PicoSet())\n24\n```\n\n*Actually, that's a lie, but keep reading*.\n\n### \ud83d\udca1 Simple example usecase\n\nLet's imagine we are building an ordered graph data structure, where we may\nwant to store [taxonomic data](https://en.wikipedia.org/wiki/Taxonomic_database),\nor any other kind of hierarchy. We can simply define the graphs and its nodes\nwith the two following classes:\n\n```python\nclass Graph:\n    root: Node\n    nodes: Dict[str, Node]\n\nclass Node:\n    neighbors: Set[node]\n```\n\nThis makes adding an edge and querying for an edge existence between two nodes\nan `O(1)` operation, and iterating over all the nodes an `O(n)` operation, which\nis mot likely what we want here. We use `set` an dnot `list` because we want to\navoid storing an edge in duplicate, which is a sensible choice. But now let's\nlook at the [statistics](https://terminologies.gfbio.org/terminology/?ontology=NCBITAXON)\nof the [NCBITaxon](https://www.ncbi.nlm.nih.gov/taxonomy) project, the\ndatabase for Organismal Classification developed by the US National Center for\nBiotechnology Information:\n\n     Metrics\n        Number of classes*: 1595237              \n        Number of individuals: 0\n        Number of properties: 0\n        Classes without definition: 1595237\n        Classes without label: 0\n        Average number of children: 12\n        Classes with a single child: 40319\n        Maximum number of children: 41761\n        Classes with more than 25 children: 0\n        Classes with more than 1 parent: 0\n        Maximum depth: 38\n        Number of leaves**: 1130671\n\nAccording to these, we are going to have **1,130,671** leaves for a total of\n**1,595,237** nodes, which means **70.8%** of empty sets. Now you may think:\n\n> Ok, I got this. But in this case, I just need a special case for leaves, where\n> instead of storing an empty set of `neighbors`, I store a reference to `None`\n> when that set would be empty. I can then replace that reference with an actual\n> set only when I want to add new edges from that node. Problem solved!\n\nWell, glad we are on the same level: this is what **`nanoset`** does for you!\n\n\n### \ud83d\udd28 Implementation\n\nActually, it's not magic at all. Just imagine a class `NanoSet` that works as\na [proxy](https://www.tutorialspoint.com/python_design_patterns/python_design_patterns_proxy.htm)\nto an actual Python `set` it wraps, but which is only allocated when some data\nactually needs to be stored:\n\n```python\nclass NanoSet(collections.abc.Set):\n\n    def __init__(self, iterable=None):\n        self.inner = None if iterable is None else set(iterable)\n\n    def add(self, element):\n        if self.inner is None:\n            self.inner = set()\n        self.inner.add(element)\n\n    # ... the rest of the `set` API ...\n```\n\nThat's about it! However, doing it like so in Python would not be super\nefficient, as the resulting object would be **64** bytes. Using\n[slots](http://book.pythontips.com/en/latest/__slots__magic.html), this can be\nreduced to **56** bytes, which is on par to what we get with **`NanoSet`**.\n\n**Note that these values are only when the inner set is empty!** When actually\nallocating the set to store our values, we allocate an additional **232** bytes\nof data. This means that using **`NanoSet`** creates an overhead, since a\nnon-empty set will now weigh **288** bytes (**256** bytes for **`PicoSet`**).\n\n> Well, I was way better off with my approach of storing `Optional[Set]`\n> everywhere then, I don't want to pay any additional cost for nonempty sets!\n\nSure. But that would mean changing your whole code. And actually, you may not\ngain that much memory from doing that compared to using `nanoset`, since the\nonly time the wrapper performs badly is when you have a load factor of more than\n90%. Furthermore, just to give you some perspective, `sys.getsizeof(1)` is\n**24** bytes as well.\n\n> By the way, you didn't mention `PicoSet`. How did you manage to get that down\n> to **24** bytes, when a slotted Python object can't be less that **56** bytes?\n\nEasy: `PicoSet` is basically `NanoSet`, but without an implementation of the\n[Garbage Collector protocol](https://docs.python.org/3/c-api/gcsupport.html).\nThis saves us **32** bytes of object memory, but comes with a drawback: the\ngarbage collector cannot see the set allocated *inside* the `PicoSet`. This\ndoes not change anything for execution, but debugging with a memory profiler\nwill be harder. Here is an example where we allocate **1,000,000** singletons\nfirst with `NanoSet`, then with `PicoSet`, using\n[`guppy3`](https://pypi.org/project/guppy3/) to check the heap:\n\n```python\n>>> l = [nanoset.NanoSet({x}) for x in range(1000000)]\n>>> guppy.hpy().heap()\nPartition of a set of 3034170 objects. Total size = 328667393 bytes.\n Index  Count   %     Size    %   Cumulative %  Kind (class / dict of class)\n     0 1000041  33 232100648  71  232100648  71 set\n     1 1000000  33  56000000  17  288100648  88 nanoset.NanoSet\n     ...\n     3      96   0  8712752    3 324838712  99 list\n     ...\n```\n```python\n>>> l = [nanoset.PicoSet({x}) for x in range(1000000)]\n>>> guppy.hpy().heap()\nPartition of a set of 2034285 objects. Total size = 300668995 bytes.\n Index  Count   %     Size   %   Cumulative  %  Kind (class / dict of class)\n     0 1000000  97 24000000  65  24000000    65 nanoset.PicoSet\n     1     96    0  8712752  24  32712752    89 list\n     ...\n```\n\nOn the second run, we have about the same order of allocated memory, saving\n**28 MB** (**28** bytes saved by switching from `NanoSet` to `PicoSet` times\n**1,000,000** instances). However, the garbage collector has no idea where\nsome of the memory is, because `PicoSet` hides the sets it allocates (this is\nfine: it will be deallocated along with the `PicoSet`).\n\nAs such, I'd advise avoiding using `PicoSet` when debugging, which can be done\neasily with Python's `__debug__` flag:\n```python\nif __debug__:\n    from nanoset import NanoSet as set\nelse:\n    from nanoset import PicoSet as set\n```\nThis will cause `PicoSet` to be used instead of `NanoSet` when running Python\nwith the `-O` flag.\n\n\n### \ud83d\udcc8 Statistics\n\nOkay, so let's do some maths. With `S = 232` the size of an allocated set,\n`s` the size of the wrapper (`56` for `NanoSet`, `24` for `PicoSet`), the\n`x` percentage of nonempty sets in our data structure, the relative size\nof our sets is:\n\n  * if we're using `set`: **S \\* x / (S \\* x) = 100%** (we use that as a reference)\n  * if we're using `nanoset`: **((S + s) \\* x + s \\* (100 - x)) / (S \\* x)**\n\nThis gives us the following graph, which shows how much memory you can save\ndepending of the ratio of empty sets you have at runtime:\n\n![sizegraph](https://github.com/althonos/nanoset.py/raw/master/static/sizegraph.svg?sanitize=true)\n\nIf we get back to our NCBITaxon example, we have a total of **1,595,237** nodes\nand **1,130,671** leaves, which means that by using sets we are allocating\n**1,595,237 * 232 = 353.0 MiB** of memory simply for `set` after the whole\ntaxonomy is loaded. If we use `NanoSet` however, we\ncan reduce this to **188.0 MiB**, or even to **139.3 MiB** with `PicoSet`!\n**We just saved about 50% memory just by using `NanoSet` in place of `set`.**\n\n\n## \ud83d\udd27 Installing\n\nThis module is implemented in Rust, but native [Python wheels](https://pythonwheels.com/)\nare compiled for the following platforms:\n\n* Windows x86-64: CPython 3.5, 3.6, 3.7, 3.8\n* Linux x86-64: CPython 3.5, 3.6, 3.7, 3.8\n* OSX x86-64: CPython 3.5, 3.6, 3.7, 3.8\n\nIf you platform is not among these, you will need a\n[working Rust `nightly` toolchain](https://www.rust-lang.org/tools/install)\nas well as the [`setuptools-rust`](https://pypi.org/project/setuptools-rust/)\nlibrary installed to build the extension module.\n\nThen, simply install with `pip`:\n```console\n$ pip install --user nanoset\n```\n\n## \ud83d\udcd6 API Reference\n\nWell, this is a comprehensive wrapper for `set`, so you can just read the\n[standard library documentation](https://docs.python.org/3.7/library/stdtypes.html#set-types-set-frozenset).\nExcept for some very particular edge-cases, `NanoSet` and `PicoSet` both pass the\n[`set` test suite](https://github.com/python/cpython/blob/master/Lib/test/test_set.py)\nof [CPython](https://github.com/python/cpython).\n\nThere are however things you *can't* do:\n- Subclassing a `PicoSet` or a `NanoSet`.\n- Weakrefing a `PicoSet` or a `NanoSet`.\n- Checking for membership in a plain `set` or `frozenset` with implicit\n  conversion to `frozenset`.\n- Creating a `dict` from a `PicoSet` or a `NanoSet` without rehashing keys.\n\n## \ud83d\udcdc License\n\nThis library is provided under the open-source [MIT license](https://choosealicense.com/licenses/mit/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/althonos/nanoset.py", "keywords": "Python,set,memory,wrapper,optimisation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nanoset", "package_url": "https://pypi.org/project/nanoset/", "platform": "any", "project_url": "https://pypi.org/project/nanoset/", "project_urls": {"Homepage": "https://github.com/althonos/nanoset.py"}, "release_url": "https://pypi.org/project/nanoset/0.1.4/", "requires_dist": null, "requires_python": ">=3.5.*", "summary": "A memory-optimized wrapper for Python sets likely to be empty.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><code>nanoset.py</code> <a href=\"https://github.com/althonos/nanoset.py\" rel=\"nofollow\"><img alt=\"starme\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ab39653b3ca0a17eb85aaf31aa510b99fd9ebfc/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f616c74686f6e6f732f6e616e6f7365742e70792e7376673f7374796c653d736f6369616c266c6162656c3d53746172\"></a></h1>\n<p><em>A memory-optimized wrapper for Python sets likely to be empty.</em></p>\n<p><a href=\"https://travis-ci.org/althonos/nanoset.py/branches\" rel=\"nofollow\"><img alt=\"TravisCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8516e3b0b3489fa99b744289fe92f28f19403fed/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f616c74686f6e6f732f6e616e6f7365742e70792f6d61737465722e7376673f6c6f676f3d747261766973266d61784167653d363030267374796c653d666c61742d737175617265\"></a>\n<a href=\"https://ci.appveyor.com/project/althonos/nanoset-py\" rel=\"nofollow\"><img alt=\"AppVeyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f07b2b2cb9afb429fcd0c548d1f33df1fedc515c/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f616c74686f6e6f732f6e616e6f7365742d70792f6d61737465723f6c6f676f3d6170707665796f72267374796c653d666c61742d737175617265266d61784167653d363030\"></a>\n<a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/35ff7a3b77e15e65a2196ab084396cf04959853a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265266d61784167653d32363738343030\"></a>\n<a href=\"https://github.com/althonos/nanoset.py/\" rel=\"nofollow\"><img alt=\"Source\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d34015a437e208873c96496f80c767aafa829359/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f757263652d4769744875622d3330333033302e7376673f6d61784167653d32363738343030267374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/nanoset\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b28f36ab86cfe2d54569e1e4de595ec36bd69cd9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6e616e6f7365742e7376673f7374796c653d666c61742d737175617265266d61784167653d363030\"></a>\n<a href=\"https://crates.io/crates/nanoset-py\" rel=\"nofollow\"><img alt=\"Crates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3233efdaf81e489d9798eae72ece9a7cbffc1372/68747470733a2f2f696d672e736869656c64732e696f2f6372617465732f762f6e616e6f7365742d70793f7374796c653d666c61742d737175617265266d61784167653d363030\"></a>\n<a href=\"https://pypi.org/project/nanoset/#files\" rel=\"nofollow\"><img alt=\"Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6c14257013f3d8f0d32979606af45f044c4a40c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6e616e6f7365742e7376673f7374796c653d666c61742d737175617265266d61784167653d33363030\"></a>\n<a href=\"https://pypi.org/project/nanoset/#files\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e63161f90b7c66c91d30b1909059b50807d6777e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6e616e6f7365742e7376673f7374796c653d666c61742d737175617265266d61784167653d363030\"></a>\n<a href=\"https://pypi.org/project/nanoset/#files\" rel=\"nofollow\"><img alt=\"Python Implementations\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1acff16e1b06e5e05658449e31947fa3bd88c429/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f6e616e6f7365742e7376673f7374796c653d666c61742d737175617265266d61784167653d363030\"></a>\n<a href=\"https://github.com/althonos/nanoset.py/blob/master/CHANGELOG.md\" rel=\"nofollow\"><img alt=\"Changelog\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e899458a9d64c72f8d266edab50fa5cde26ea8b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6b656570253230612d6368616e67656c6f672d3841303730372e7376673f6d61784167653d32363738343030267374796c653d666c61742d737175617265\"></a>\n<a href=\"https://github.com/althonos/nanoset.py/issues\" rel=\"nofollow\"><img alt=\"GitHub issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf3b5ed9753a76adeb806d3db206107afe732dc8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f616c74686f6e6f732f6e616e6f7365742e70792e7376673f7374796c653d666c61742d737175617265266d61784167653d363030\"></a></p>\n<h2>\u23f1\ufe0f TL;DR</h2>\n<p>Save up to 85% of the memory used by empty <code>set</code> instances in your code with\na single line of code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nanoset</span> <span class=\"kn\">import</span> <span class=\"n\">PicoSet</span> <span class=\"k\">as</span> <span class=\"nb\">set</span>\n</pre>\n<h2>\ud83d\udea9 Table of Contents</h2>\n<ul>\n<li><a href=\"#-overview\" rel=\"nofollow\">Overview</a>\n<ul>\n<li><a href=\"#-about-python-memory-usage\" rel=\"nofollow\">About Python memory usage</a></li>\n<li><a href=\"#-simple-example-usecase\" rel=\"nofollow\">Simple example usecase</a></li>\n<li><a href=\"#-implementation\" rel=\"nofollow\">Implementation</a></li>\n<li><a href=\"#-statistics\" rel=\"nofollow\">Statistics</a></li>\n</ul>\n</li>\n<li><a href=\"#-installing\" rel=\"nofollow\">Installing</a></li>\n<li><a href=\"#-api-reference\" rel=\"nofollow\">API Reference</a></li>\n<li><a href=\"#-license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>\ud83d\uddfa\ufe0f Overview</h2>\n<h3>\ud83d\udc0f About Python memory usage</h3>\n<p>Python is a great programming language (<em>fight me</em>), but sometimes you start\nquestioning why it does things in certain ways. Since Python 2.3, the standard\nlibrary provides the <a href=\"https://docs.python.org/3.7/library/stdtypes.html#set\" rel=\"nofollow\"><code>set</code></a>\ncollection, which is a specialized container for membership testing. On the\ncontrary to the ubiquitous <a href=\"https://docs.python.org/3.7/library/stdtypes.html#list\" rel=\"nofollow\"><code>list</code></a>\ncollection, <code>set</code> is not ordered (or, more accurately, <em>does not let you access\nthe order it stores the elements in</em>). The other feature of <code>set</code> is that just\nlike its mathematical counterpart, it does not allow duplicates, which is very\nuseful for some algorithms. However, <strong>sets are memory-expensive</strong>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">getsizeof</span><span class=\"p\">(</span><span class=\"nb\">list</span><span class=\"p\">())</span>\n<span class=\"mi\">72</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">getsizeof</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">())</span>\n<span class=\"mi\">232</span>\n</pre>\n<p>An empty set takes more than three times the memory of an empty list! For some\ndata structures or objects with a lot of <code>set</code> attributes, they can quickly\ncause a very large part of the memory to be used for nothing. This is even more\nsad when you are used to <a href=\"https://www.rust-lang.org/\" rel=\"nofollow\">Rust</a>, where most\n<a href=\"https://doc.rust-lang.org/std/collections/\" rel=\"nofollow\">collections</a> allocate lazily.\n<strong>This is where <code>nanoset</code> comes to the rescue:</strong></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">nanoset</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">getsizeof</span><span class=\"p\">(</span><span class=\"n\">nanoset</span><span class=\"o\">.</span><span class=\"n\">NanoSet</span><span class=\"p\">())</span>\n<span class=\"mi\">56</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">getsizeof</span><span class=\"p\">(</span><span class=\"n\">nanoset</span><span class=\"o\">.</span><span class=\"n\">PicoSet</span><span class=\"p\">())</span>\n<span class=\"mi\">24</span>\n</pre>\n<p><em>Actually, that's a lie, but keep reading</em>.</p>\n<h3>\ud83d\udca1 Simple example usecase</h3>\n<p>Let's imagine we are building an ordered graph data structure, where we may\nwant to store <a href=\"https://en.wikipedia.org/wiki/Taxonomic_database\" rel=\"nofollow\">taxonomic data</a>,\nor any other kind of hierarchy. We can simply define the graphs and its nodes\nwith the two following classes:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Graph</span><span class=\"p\">:</span>\n    <span class=\"n\">root</span><span class=\"p\">:</span> <span class=\"n\">Node</span>\n    <span class=\"n\">nodes</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Node</span><span class=\"p\">]</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Node</span><span class=\"p\">:</span>\n    <span class=\"n\">neighbors</span><span class=\"p\">:</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"n\">node</span><span class=\"p\">]</span>\n</pre>\n<p>This makes adding an edge and querying for an edge existence between two nodes\nan <code>O(1)</code> operation, and iterating over all the nodes an <code>O(n)</code> operation, which\nis mot likely what we want here. We use <code>set</code> an dnot <code>list</code> because we want to\navoid storing an edge in duplicate, which is a sensible choice. But now let's\nlook at the <a href=\"https://terminologies.gfbio.org/terminology/?ontology=NCBITAXON\" rel=\"nofollow\">statistics</a>\nof the <a href=\"https://www.ncbi.nlm.nih.gov/taxonomy\" rel=\"nofollow\">NCBITaxon</a> project, the\ndatabase for Organismal Classification developed by the US National Center for\nBiotechnology Information:</p>\n<pre><code> Metrics\n    Number of classes*: 1595237              \n    Number of individuals: 0\n    Number of properties: 0\n    Classes without definition: 1595237\n    Classes without label: 0\n    Average number of children: 12\n    Classes with a single child: 40319\n    Maximum number of children: 41761\n    Classes with more than 25 children: 0\n    Classes with more than 1 parent: 0\n    Maximum depth: 38\n    Number of leaves**: 1130671\n</code></pre>\n<p>According to these, we are going to have <strong>1,130,671</strong> leaves for a total of\n<strong>1,595,237</strong> nodes, which means <strong>70.8%</strong> of empty sets. Now you may think:</p>\n<blockquote>\n<p>Ok, I got this. But in this case, I just need a special case for leaves, where\ninstead of storing an empty set of <code>neighbors</code>, I store a reference to <code>None</code>\nwhen that set would be empty. I can then replace that reference with an actual\nset only when I want to add new edges from that node. Problem solved!</p>\n</blockquote>\n<p>Well, glad we are on the same level: this is what <strong><code>nanoset</code></strong> does for you!</p>\n<h3>\ud83d\udd28 Implementation</h3>\n<p>Actually, it's not magic at all. Just imagine a class <code>NanoSet</code> that works as\na <a href=\"https://www.tutorialspoint.com/python_design_patterns/python_design_patterns_proxy.htm\" rel=\"nofollow\">proxy</a>\nto an actual Python <code>set</code> it wraps, but which is only allocated when some data\nactually needs to be stored:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">NanoSet</span><span class=\"p\">(</span><span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Set</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">iterable</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inner</span> <span class=\"o\">=</span> <span class=\"kc\">None</span> <span class=\"k\">if</span> <span class=\"n\">iterable</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"k\">else</span> <span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">iterable</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">element</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inner</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inner</span> <span class=\"o\">=</span> <span class=\"nb\">set</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">inner</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">element</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># ... the rest of the `set` API ...</span>\n</pre>\n<p>That's about it! However, doing it like so in Python would not be super\nefficient, as the resulting object would be <strong>64</strong> bytes. Using\n<a href=\"http://book.pythontips.com/en/latest/__slots__magic.html\" rel=\"nofollow\">slots</a>, this can be\nreduced to <strong>56</strong> bytes, which is on par to what we get with <strong><code>NanoSet</code></strong>.</p>\n<p><strong>Note that these values are only when the inner set is empty!</strong> When actually\nallocating the set to store our values, we allocate an additional <strong>232</strong> bytes\nof data. This means that using <strong><code>NanoSet</code></strong> creates an overhead, since a\nnon-empty set will now weigh <strong>288</strong> bytes (<strong>256</strong> bytes for <strong><code>PicoSet</code></strong>).</p>\n<blockquote>\n<p>Well, I was way better off with my approach of storing <code>Optional[Set]</code>\neverywhere then, I don't want to pay any additional cost for nonempty sets!</p>\n</blockquote>\n<p>Sure. But that would mean changing your whole code. And actually, you may not\ngain that much memory from doing that compared to using <code>nanoset</code>, since the\nonly time the wrapper performs badly is when you have a load factor of more than\n90%. Furthermore, just to give you some perspective, <code>sys.getsizeof(1)</code> is\n<strong>24</strong> bytes as well.</p>\n<blockquote>\n<p>By the way, you didn't mention <code>PicoSet</code>. How did you manage to get that down\nto <strong>24</strong> bytes, when a slotted Python object can't be less that <strong>56</strong> bytes?</p>\n</blockquote>\n<p>Easy: <code>PicoSet</code> is basically <code>NanoSet</code>, but without an implementation of the\n<a href=\"https://docs.python.org/3/c-api/gcsupport.html\" rel=\"nofollow\">Garbage Collector protocol</a>.\nThis saves us <strong>32</strong> bytes of object memory, but comes with a drawback: the\ngarbage collector cannot see the set allocated <em>inside</em> the <code>PicoSet</code>. This\ndoes not change anything for execution, but debugging with a memory profiler\nwill be harder. Here is an example where we allocate <strong>1,000,000</strong> singletons\nfirst with <code>NanoSet</code>, then with <code>PicoSet</code>, using\n<a href=\"https://pypi.org/project/guppy3/\" rel=\"nofollow\"><code>guppy3</code></a> to check the heap:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">nanoset</span><span class=\"o\">.</span><span class=\"n\">NanoSet</span><span class=\"p\">({</span><span class=\"n\">x</span><span class=\"p\">})</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">guppy</span><span class=\"o\">.</span><span class=\"n\">hpy</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">heap</span><span class=\"p\">()</span>\n<span class=\"n\">Partition</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"nb\">set</span> <span class=\"n\">of</span> <span class=\"mi\">3034170</span> <span class=\"n\">objects</span><span class=\"o\">.</span> <span class=\"n\">Total</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"mi\">328667393</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span>\n <span class=\"n\">Index</span>  <span class=\"n\">Count</span>   <span class=\"o\">%</span>     <span class=\"n\">Size</span>    <span class=\"o\">%</span>   <span class=\"n\">Cumulative</span> <span class=\"o\">%</span>  <span class=\"n\">Kind</span> <span class=\"p\">(</span><span class=\"k\">class</span> <span class=\"err\">/ </span><span class=\"nc\">dict</span> <span class=\"n\">of</span> <span class=\"n\">class</span><span class=\"p\">)</span>\n     <span class=\"mi\">0</span> <span class=\"mi\">1000041</span>  <span class=\"mi\">33</span> <span class=\"mi\">232100648</span>  <span class=\"mi\">71</span>  <span class=\"mi\">232100648</span>  <span class=\"mi\">71</span> <span class=\"nb\">set</span>\n     <span class=\"mi\">1</span> <span class=\"mi\">1000000</span>  <span class=\"mi\">33</span>  <span class=\"mi\">56000000</span>  <span class=\"mi\">17</span>  <span class=\"mi\">288100648</span>  <span class=\"mi\">88</span> <span class=\"n\">nanoset</span><span class=\"o\">.</span><span class=\"n\">NanoSet</span>\n     <span class=\"o\">...</span>\n     <span class=\"mi\">3</span>      <span class=\"mi\">96</span>   <span class=\"mi\">0</span>  <span class=\"mi\">8712752</span>    <span class=\"mi\">3</span> <span class=\"mi\">324838712</span>  <span class=\"mi\">99</span> <span class=\"nb\">list</span>\n     <span class=\"o\">...</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">nanoset</span><span class=\"o\">.</span><span class=\"n\">PicoSet</span><span class=\"p\">({</span><span class=\"n\">x</span><span class=\"p\">})</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000000</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">guppy</span><span class=\"o\">.</span><span class=\"n\">hpy</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">heap</span><span class=\"p\">()</span>\n<span class=\"n\">Partition</span> <span class=\"n\">of</span> <span class=\"n\">a</span> <span class=\"nb\">set</span> <span class=\"n\">of</span> <span class=\"mi\">2034285</span> <span class=\"n\">objects</span><span class=\"o\">.</span> <span class=\"n\">Total</span> <span class=\"n\">size</span> <span class=\"o\">=</span> <span class=\"mi\">300668995</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span>\n <span class=\"n\">Index</span>  <span class=\"n\">Count</span>   <span class=\"o\">%</span>     <span class=\"n\">Size</span>   <span class=\"o\">%</span>   <span class=\"n\">Cumulative</span>  <span class=\"o\">%</span>  <span class=\"n\">Kind</span> <span class=\"p\">(</span><span class=\"k\">class</span> <span class=\"err\">/ </span><span class=\"nc\">dict</span> <span class=\"n\">of</span> <span class=\"n\">class</span><span class=\"p\">)</span>\n     <span class=\"mi\">0</span> <span class=\"mi\">1000000</span>  <span class=\"mi\">97</span> <span class=\"mi\">24000000</span>  <span class=\"mi\">65</span>  <span class=\"mi\">24000000</span>    <span class=\"mi\">65</span> <span class=\"n\">nanoset</span><span class=\"o\">.</span><span class=\"n\">PicoSet</span>\n     <span class=\"mi\">1</span>     <span class=\"mi\">96</span>    <span class=\"mi\">0</span>  <span class=\"mi\">8712752</span>  <span class=\"mi\">24</span>  <span class=\"mi\">32712752</span>    <span class=\"mi\">89</span> <span class=\"nb\">list</span>\n     <span class=\"o\">...</span>\n</pre>\n<p>On the second run, we have about the same order of allocated memory, saving\n<strong>28 MB</strong> (<strong>28</strong> bytes saved by switching from <code>NanoSet</code> to <code>PicoSet</code> times\n<strong>1,000,000</strong> instances). However, the garbage collector has no idea where\nsome of the memory is, because <code>PicoSet</code> hides the sets it allocates (this is\nfine: it will be deallocated along with the <code>PicoSet</code>).</p>\n<p>As such, I'd advise avoiding using <code>PicoSet</code> when debugging, which can be done\neasily with Python's <code>__debug__</code> flag:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">__debug__</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">nanoset</span> <span class=\"kn\">import</span> <span class=\"n\">NanoSet</span> <span class=\"k\">as</span> <span class=\"nb\">set</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">nanoset</span> <span class=\"kn\">import</span> <span class=\"n\">PicoSet</span> <span class=\"k\">as</span> <span class=\"nb\">set</span>\n</pre>\n<p>This will cause <code>PicoSet</code> to be used instead of <code>NanoSet</code> when running Python\nwith the <code>-O</code> flag.</p>\n<h3>\ud83d\udcc8 Statistics</h3>\n<p>Okay, so let's do some maths. With <code>S = 232</code> the size of an allocated set,\n<code>s</code> the size of the wrapper (<code>56</code> for <code>NanoSet</code>, <code>24</code> for <code>PicoSet</code>), the\n<code>x</code> percentage of nonempty sets in our data structure, the relative size\nof our sets is:</p>\n<ul>\n<li>if we're using <code>set</code>: <strong>S * x / (S * x) = 100%</strong> (we use that as a reference)</li>\n<li>if we're using <code>nanoset</code>: <strong>((S + s) * x + s * (100 - x)) / (S * x)</strong></li>\n</ul>\n<p>This gives us the following graph, which shows how much memory you can save\ndepending of the ratio of empty sets you have at runtime:</p>\n<p><img alt=\"sizegraph\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9eb0f4bdb8f1b934b34da1e18e37411806b11bc8/68747470733a2f2f6769746875622e636f6d2f616c74686f6e6f732f6e616e6f7365742e70792f7261772f6d61737465722f7374617469632f73697a6567726170682e7376673f73616e6974697a653d74727565\"></p>\n<p>If we get back to our NCBITaxon example, we have a total of <strong>1,595,237</strong> nodes\nand <strong>1,130,671</strong> leaves, which means that by using sets we are allocating\n<strong>1,595,237 * 232 = 353.0 MiB</strong> of memory simply for <code>set</code> after the whole\ntaxonomy is loaded. If we use <code>NanoSet</code> however, we\ncan reduce this to <strong>188.0 MiB</strong>, or even to <strong>139.3 MiB</strong> with <code>PicoSet</code>!\n<strong>We just saved about 50% memory just by using <code>NanoSet</code> in place of <code>set</code>.</strong></p>\n<h2>\ud83d\udd27 Installing</h2>\n<p>This module is implemented in Rust, but native <a href=\"https://pythonwheels.com/\" rel=\"nofollow\">Python wheels</a>\nare compiled for the following platforms:</p>\n<ul>\n<li>Windows x86-64: CPython 3.5, 3.6, 3.7, 3.8</li>\n<li>Linux x86-64: CPython 3.5, 3.6, 3.7, 3.8</li>\n<li>OSX x86-64: CPython 3.5, 3.6, 3.7, 3.8</li>\n</ul>\n<p>If you platform is not among these, you will need a\n<a href=\"https://www.rust-lang.org/tools/install\" rel=\"nofollow\">working Rust <code>nightly</code> toolchain</a>\nas well as the <a href=\"https://pypi.org/project/setuptools-rust/\" rel=\"nofollow\"><code>setuptools-rust</code></a>\nlibrary installed to build the extension module.</p>\n<p>Then, simply install with <code>pip</code>:</p>\n<pre><span class=\"gp\">$</span> pip install --user nanoset\n</pre>\n<h2>\ud83d\udcd6 API Reference</h2>\n<p>Well, this is a comprehensive wrapper for <code>set</code>, so you can just read the\n<a href=\"https://docs.python.org/3.7/library/stdtypes.html#set-types-set-frozenset\" rel=\"nofollow\">standard library documentation</a>.\nExcept for some very particular edge-cases, <code>NanoSet</code> and <code>PicoSet</code> both pass the\n<a href=\"https://github.com/python/cpython/blob/master/Lib/test/test_set.py\" rel=\"nofollow\"><code>set</code> test suite</a>\nof <a href=\"https://github.com/python/cpython\" rel=\"nofollow\">CPython</a>.</p>\n<p>There are however things you <em>can't</em> do:</p>\n<ul>\n<li>Subclassing a <code>PicoSet</code> or a <code>NanoSet</code>.</li>\n<li>Weakrefing a <code>PicoSet</code> or a <code>NanoSet</code>.</li>\n<li>Checking for membership in a plain <code>set</code> or <code>frozenset</code> with implicit\nconversion to <code>frozenset</code>.</li>\n<li>Creating a <code>dict</code> from a <code>PicoSet</code> or a <code>NanoSet</code> without rehashing keys.</li>\n</ul>\n<h2>\ud83d\udcdc License</h2>\n<p>This library is provided under the open-source <a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 6976495, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d025747a0162b74ef48f1b0dc4fbc71d", "sha256": "4aa5827f5d95bc2dd767e1cfeb79d9b68b6048b34b28b0c7ee425e65bfcaf52f"}, "downloads": -1, "filename": "nanoset-0.1.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d025747a0162b74ef48f1b0dc4fbc71d", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">= 3.5.*", "size": 213867, "upload_time": "2019-09-21T14:54:16", "upload_time_iso_8601": "2019-09-21T14:54:16.334089Z", "url": "https://files.pythonhosted.org/packages/35/ed/3de9ca4fae6284c1ceeecbdfc46181e07f541b4db71f5bd6cf1db845419b/nanoset-0.1.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e4772c48cee65651407b26159364d0b", "sha256": "5c8bef93e002aa6ee6d6f513c70330383fbd6d55f927ac9de1da7ce7b9cdc5bc"}, "downloads": -1, "filename": "nanoset-0.1.0-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "0e4772c48cee65651407b26159364d0b", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">= 3.5.*", "size": 684672, "upload_time": "2019-09-21T14:52:00", "upload_time_iso_8601": "2019-09-21T14:52:00.704913Z", "url": "https://files.pythonhosted.org/packages/b8/ba/41f08a22afa012e2075ebfb06239bc1fed917df921b075f92cb19407a56e/nanoset-0.1.0-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4417cbfcc0dab46344dedb25a6ca63f6", "sha256": "ff8684f3b1cbbd357fee892231f39b2be20df1f9ae09252c1ba5382124c93db8"}, "downloads": -1, "filename": "nanoset-0.1.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4417cbfcc0dab46344dedb25a6ca63f6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">= 3.5.*", "size": 213830, "upload_time": "2019-09-21T14:53:59", "upload_time_iso_8601": "2019-09-21T14:53:59.417900Z", "url": "https://files.pythonhosted.org/packages/6c/72/4c1f5249f3105c436b40002007b7a00fef80cd11674a1e0847f34c2f3933/nanoset-0.1.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5bc4b449118934ccff8ec0a2f446aa0", "sha256": "d7e0435b869ffc3398ecaf358a5ac2eb78f65d2d391fd3de52796b7a1bc9d917"}, "downloads": -1, "filename": "nanoset-0.1.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "c5bc4b449118934ccff8ec0a2f446aa0", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">= 3.5.*", "size": 685867, "upload_time": "2019-09-21T14:55:14", "upload_time_iso_8601": "2019-09-21T14:55:14.418547Z", "url": "https://files.pythonhosted.org/packages/1a/9d/393564c9431a41d4ddcaafc4e6bd2f7cc28aa2384340355140d8ee05018c/nanoset-0.1.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca7f116ca5c2c4c4d5a77d0383471df0", "sha256": "274ac2295d18cb9c2e2cee399d136e088119f3c7ece7b1df5e39f46ebe1f622c"}, "downloads": -1, "filename": "nanoset-0.1.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ca7f116ca5c2c4c4d5a77d0383471df0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">= 3.5.*", "size": 213419, "upload_time": "2019-09-21T14:54:03", "upload_time_iso_8601": "2019-09-21T14:54:03.134690Z", "url": "https://files.pythonhosted.org/packages/b6/fe/74c7a7f805330114fc0b2cd842049aa3a860a8e3a8b8b5dfb2b924b50f30/nanoset-0.1.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0fa0328c3e64c57ca54f8e1285d1926", "sha256": "70b26db557010d10643f43bfb54f7e5ab41cf5181aa7035f4c30cdd0fe1bbb51"}, "downloads": -1, "filename": "nanoset-0.1.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "b0fa0328c3e64c57ca54f8e1285d1926", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">= 3.5.*", "size": 685390, "upload_time": "2019-09-21T14:58:25", "upload_time_iso_8601": "2019-09-21T14:58:25.537661Z", "url": "https://files.pythonhosted.org/packages/b8/ce/fbcc7c9bd16a01b86348afb8fb1e15c69bbe78dae239dde3ed932d23e00a/nanoset-0.1.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15b06474131c678a94ef220109dbedc5", "sha256": "bb8b250e63a1e38c167e0a270346a9954e707cf55f1092295c3158753f70cac9"}, "downloads": -1, "filename": "nanoset-0.1.0.tar.gz", "has_sig": false, "md5_digest": "15b06474131c678a94ef220109dbedc5", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5.*", "size": 38786, "upload_time": "2019-09-21T14:54:01", "upload_time_iso_8601": "2019-09-21T14:54:01.294785Z", "url": "https://files.pythonhosted.org/packages/2b/2a/607ad460b78ed5596b194176f2856394df2227538d47a68937d98622b4cf/nanoset-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d715aeaaa8b1f4176c25a5d8dc5e5dda", "sha256": "660a00be9b0bdf6d6e77405a5718f83ee892d13d67f1df39d97df25c19e59c71"}, "downloads": -1, "filename": "nanoset-0.1.1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d715aeaaa8b1f4176c25a5d8dc5e5dda", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">= 3.5.*", "size": 213838, "upload_time": "2019-09-22T08:29:52", "upload_time_iso_8601": "2019-09-22T08:29:52.233702Z", "url": "https://files.pythonhosted.org/packages/02/83/ae61d8f4b7c795d937d81e2d44cc7a500093b87962ace1baa7f3245f78f9/nanoset-0.1.1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b85d3a95397093375f9a05a44e26b39", "sha256": "caa830b3d63db2b2a62cbb6c7f5f3a1637c42987e1025548f6a620cc9037dd55"}, "downloads": -1, "filename": "nanoset-0.1.1-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "6b85d3a95397093375f9a05a44e26b39", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">= 3.5.*", "size": 685855, "upload_time": "2019-09-22T08:32:35", "upload_time_iso_8601": "2019-09-22T08:32:35.305075Z", "url": "https://files.pythonhosted.org/packages/b4/60/b8624c28b0ca61ab92c8b3b91da08b88f7ff2d88f651b5db9f9056d7a7e9/nanoset-0.1.1-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9209be88cb4852bd644fab70dbf8fa6", "sha256": "09bb0ecaf8b8edf39b2f444011d3d1e1976cde840b0b80602e8f15b74d7679b2"}, "downloads": -1, "filename": "nanoset-0.1.1-cp36-cp36m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "f9209be88cb4852bd644fab70dbf8fa6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">= 3.5.*", "size": 181076, "upload_time": "2019-09-22T08:40:27", "upload_time_iso_8601": "2019-09-22T08:40:27.548374Z", "url": "https://files.pythonhosted.org/packages/75/77/0c05c1749c984273bd52b9804b0998dc165bbef820a332236731a672dcf2/nanoset-0.1.1-cp36-cp36m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8113992c76310ee9afd5d5e84681b313", "sha256": "3f9dc00104c4f336c806e7fa14b4d1b6fa19fe9d84ce6bd91ef0284c86738962"}, "downloads": -1, "filename": "nanoset-0.1.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8113992c76310ee9afd5d5e84681b313", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">= 3.5.*", "size": 213855, "upload_time": "2019-09-22T08:29:38", "upload_time_iso_8601": "2019-09-22T08:29:38.258279Z", "url": "https://files.pythonhosted.org/packages/67/2f/1a6e1d1ea6272d88bd7d6476d14394d1a5e3592a5ceb2c4b46cfcc42a232/nanoset-0.1.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "955b0b54723f6955dda57c0a0c5e7e99", "sha256": "f521eff4a0c904bd31d6954106b924dc9395cfe625f85e65049db81db85728b4"}, "downloads": -1, "filename": "nanoset-0.1.1-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "955b0b54723f6955dda57c0a0c5e7e99", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">= 3.5.*", "size": 683121, "upload_time": "2019-09-22T08:40:00", "upload_time_iso_8601": "2019-09-22T08:40:00.101532Z", "url": "https://files.pythonhosted.org/packages/5c/88/9696740f77b2324d7c87500b7a886e4dc0f63df16ffc52173a354e6ef169/nanoset-0.1.1-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f3845f7229c75e16e04cfb3c7c8bc79", "sha256": "d60f0b06a2e4ef3ad0e67bc3ef5d85775a5b8020ce74461aa09e6e8b7aff2787"}, "downloads": -1, "filename": "nanoset-0.1.1-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "6f3845f7229c75e16e04cfb3c7c8bc79", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">= 3.5.*", "size": 181736, "upload_time": "2019-09-22T08:47:29", "upload_time_iso_8601": "2019-09-22T08:47:29.896142Z", "url": "https://files.pythonhosted.org/packages/f9/9f/50a9d45c0b5e8bac70effa40f5ae659fc62a25a1579f3b82fb635321b1de/nanoset-0.1.1-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb693dc220e6307e6fc0eb63cd13eb0b", "sha256": "1c71fb3d30b02371709813eb99cf9175d6d9f10ec836cb6f137402763bf7afc0"}, "downloads": -1, "filename": "nanoset-0.1.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "cb693dc220e6307e6fc0eb63cd13eb0b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">= 3.5.*", "size": 213532, "upload_time": "2019-09-22T08:30:05", "upload_time_iso_8601": "2019-09-22T08:30:05.587260Z", "url": "https://files.pythonhosted.org/packages/e3/ed/4e156f3d330a13c8dcb9ea378e2dcc58ab5f73b153b931f0c14ce6e640e9/nanoset-0.1.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f2cd472916050fea88e061ddba60638", "sha256": "129b2c3690bb1bddd44b2f73ea78557383eebb50fae7e0d35bf57fbeb406168e"}, "downloads": -1, "filename": "nanoset-0.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "9f2cd472916050fea88e061ddba60638", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">= 3.5.*", "size": 685545, "upload_time": "2019-09-22T08:47:17", "upload_time_iso_8601": "2019-09-22T08:47:17.919043Z", "url": "https://files.pythonhosted.org/packages/19/bc/86be76e9bc4ba6b36c65b6e69c0a94876349c6f131a3130601e91e528912/nanoset-0.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc85e6e4984e0ea81e62256291180035", "sha256": "c544fc8d20c6b4a72e3ac84f27182a0648b71b7133a4b5c5c3b882defda02a4b"}, "downloads": -1, "filename": "nanoset-0.1.1.tar.gz", "has_sig": false, "md5_digest": "dc85e6e4984e0ea81e62256291180035", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5.*", "size": 39275, "upload_time": "2019-09-22T08:29:39", "upload_time_iso_8601": "2019-09-22T08:29:39.946765Z", "url": "https://files.pythonhosted.org/packages/21/64/668c23fad1a7951a61d1b9d151830ff188620430f97eb7121425c3ca9f6a/nanoset-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0c9a24c05132bc302dae34b713714a54", "sha256": "12d899f0354b5537c20c0c133b3bc75747405c91b6e5e4fc0a8960b947cbb12b"}, "downloads": -1, "filename": "nanoset-0.1.2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0c9a24c05132bc302dae34b713714a54", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">= 3.5.*", "size": 214222, "upload_time": "2019-09-23T15:06:34", "upload_time_iso_8601": "2019-09-23T15:06:34.186781Z", "url": "https://files.pythonhosted.org/packages/50/c3/abee716b84029f09bf6776afdfbf03b9d195fafbc1363ba5b72882843c5f/nanoset-0.1.2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03eafcec95d396ccf99f2d9d905ff47f", "sha256": "8236615662486d5236afa71160ac941bbf497971a1806dd5386d40957f401777"}, "downloads": -1, "filename": "nanoset-0.1.2-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "03eafcec95d396ccf99f2d9d905ff47f", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">= 3.5.*", "size": 685869, "upload_time": "2019-09-23T15:04:12", "upload_time_iso_8601": "2019-09-23T15:04:12.506780Z", "url": "https://files.pythonhosted.org/packages/14/31/978538163920f2046fe6eeeee5db408f60aa1981d1677a469720b5d0b274/nanoset-0.1.2-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d9b3324ea3314490f14755bebf4caf0", "sha256": "36c20a7fe4dc062602f2f9b3abc3adfc035d97ad000a821c1f66c166b98057ea"}, "downloads": -1, "filename": "nanoset-0.1.2-cp36-cp36m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "4d9b3324ea3314490f14755bebf4caf0", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">= 3.5.*", "size": 181344, "upload_time": "2019-09-23T15:16:38", "upload_time_iso_8601": "2019-09-23T15:16:38.263414Z", "url": "https://files.pythonhosted.org/packages/20/6c/b1fc91b2e58e28a5fbe2b00a0ff83a9fa527046d6b07fc1bb4dd5fcfa55a/nanoset-0.1.2-cp36-cp36m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56a83c3d74a98f0c32136c0dd1978171", "sha256": "3c6af2f1a1f4ddb63abe6a76dd7659dbf6e17d4be57e975bafef8b6b3366a8a1"}, "downloads": -1, "filename": "nanoset-0.1.2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "56a83c3d74a98f0c32136c0dd1978171", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">= 3.5.*", "size": 214269, "upload_time": "2019-09-23T15:06:19", "upload_time_iso_8601": "2019-09-23T15:06:19.534777Z", "url": "https://files.pythonhosted.org/packages/41/18/b7591bae3c7524b6bf4e0c5547e515eb84032da537f1f6be9562171594fb/nanoset-0.1.2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ca82c1c03af944f104a9e64b1e6e250", "sha256": "9b24ab67c724592d6fc20908c88e7f7c6f900ceaad7e5844346df79fb553a6ee"}, "downloads": -1, "filename": "nanoset-0.1.2-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "4ca82c1c03af944f104a9e64b1e6e250", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">= 3.5.*", "size": 685622, "upload_time": "2019-09-23T15:07:16", "upload_time_iso_8601": "2019-09-23T15:07:16.286869Z", "url": "https://files.pythonhosted.org/packages/e4/1b/51801eeb2b596b8e8943893fa1b6b5ae1b43c9f9e5f7b78a8d4846c6fbbc/nanoset-0.1.2-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd4ca1c7e801c2ae28f59b3a19aa6f68", "sha256": "78b5db5558905b383f882d77584751fb80f9a301d5bc6b43dd49b3e932323d38"}, "downloads": -1, "filename": "nanoset-0.1.2-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "cd4ca1c7e801c2ae28f59b3a19aa6f68", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">= 3.5.*", "size": 182041, "upload_time": "2019-09-23T15:20:14", "upload_time_iso_8601": "2019-09-23T15:20:14.114790Z", "url": "https://files.pythonhosted.org/packages/eb/2b/cb31de85455814994f246482f7d1108ce9fe7a1730c77b0ea0c35162f852/nanoset-0.1.2-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6625b676e8dff420a1327e79edb35212", "sha256": "d140be33fbe7331cedf5789093b65b9ef9a09236777b6c919944d847c5a2a097"}, "downloads": -1, "filename": "nanoset-0.1.2-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6625b676e8dff420a1327e79edb35212", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">= 3.5.*", "size": 213959, "upload_time": "2019-09-23T15:06:21", "upload_time_iso_8601": "2019-09-23T15:06:21.919050Z", "url": "https://files.pythonhosted.org/packages/bd/bd/807d6fe96401e08d2235b3585330cfa942aa798d27b2b97ebdbe671d5863/nanoset-0.1.2-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2356d395557ed93ffbcb6ad894af3d3b", "sha256": "dd0090fd51280986bed04529984f3f3aa249de429f647a47facbe2cdcfab54d7"}, "downloads": -1, "filename": "nanoset-0.1.2-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "2356d395557ed93ffbcb6ad894af3d3b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">= 3.5.*", "size": 685746, "upload_time": "2019-09-23T15:10:43", "upload_time_iso_8601": "2019-09-23T15:10:43.518865Z", "url": "https://files.pythonhosted.org/packages/b1/09/9ab169a6ef1fd42ad71c6d7394affccc53601c187c95c78747f3bd3c59be/nanoset-0.1.2-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76d07381df203ed3b609dd147a395918", "sha256": "a31b82a18ed33c116eb1e573c1fc5b9ffc9cd55ebe7618e1f66891fa8993bdad"}, "downloads": -1, "filename": "nanoset-0.1.2.tar.gz", "has_sig": false, "md5_digest": "76d07381df203ed3b609dd147a395918", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5.*", "size": 39612, "upload_time": "2019-09-23T15:06:21", "upload_time_iso_8601": "2019-09-23T15:06:21.802788Z", "url": "https://files.pythonhosted.org/packages/66/99/adaf669bb4fe4dc34d53c2f9bec0ed00769b7295633fdb260ef0332f808d/nanoset-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d7549926be90f1f07f66abd11d7af0b5", "sha256": "a55388ef9cc631f26db08c42804d8c6173bbb5498e4001a2710e8c15d058f877"}, "downloads": -1, "filename": "nanoset-0.1.3-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "d7549926be90f1f07f66abd11d7af0b5", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 216764, "upload_time": "2019-11-18T07:41:54", "upload_time_iso_8601": "2019-11-18T07:41:54.381515Z", "url": "https://files.pythonhosted.org/packages/33/4f/57b11a88abc76d684174ddf554ce8019661fe0c394ae887dd9dbf30dfb73/nanoset-0.1.3-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ec8daa3df06be1853f0f8f39dbf50e3", "sha256": "3bf287c3d5a680b8e357459fdd99532763a4c0c63c58fd5da07d430852f983b0"}, "downloads": -1, "filename": "nanoset-0.1.3-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "5ec8daa3df06be1853f0f8f39dbf50e3", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 216765, "upload_time": "2019-11-18T07:41:55", "upload_time_iso_8601": "2019-11-18T07:41:55.818685Z", "url": "https://files.pythonhosted.org/packages/28/b9/e5e98d878df3cdd2db528a65a90b4c06c05e31c288c2fac25fa5770af858/nanoset-0.1.3-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cacf7327124526cad4de3b965ad1a25", "sha256": "100c61791c4e3deda0c6053ef06c262b47a89edd7e2322e368680ef00ba9f990"}, "downloads": -1, "filename": "nanoset-0.1.3-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "7cacf7327124526cad4de3b965ad1a25", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 687712, "upload_time": "2019-11-18T07:38:28", "upload_time_iso_8601": "2019-11-18T07:38:28.529479Z", "url": "https://files.pythonhosted.org/packages/50/65/8d72a4833763b45a439478cbe0cf8fe85e16956a4e3804e04cbaf4af71fe/nanoset-0.1.3-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b9d4eaf846dde76fce4c6062b49f2d8", "sha256": "346396e7b4c1ddd941fc65c932e3b1e85193dc7d612b0902340088cc1d5138d1"}, "downloads": -1, "filename": "nanoset-0.1.3-cp36-cp36m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "4b9d4eaf846dde76fce4c6062b49f2d8", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 183809, "upload_time": "2019-11-18T07:57:08", "upload_time_iso_8601": "2019-11-18T07:57:08.032190Z", "url": "https://files.pythonhosted.org/packages/2d/29/7e0f11a75a5d01436921b5063b1ba0b81f6290ce7a32b4034ec493582dff/nanoset-0.1.3-cp36-cp36m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "472c2a679b155fbfdab12b84c1bfe82f", "sha256": "3570f1cf9d9534ce0673993942858a73da7c5fdcf1a936197959827fdc9810f3"}, "downloads": -1, "filename": "nanoset-0.1.3-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "472c2a679b155fbfdab12b84c1bfe82f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 217076, "upload_time": "2019-11-18T07:41:24", "upload_time_iso_8601": "2019-11-18T07:41:24.942174Z", "url": "https://files.pythonhosted.org/packages/7c/22/f54792c8b2a373930375831ef925d9eb59fd3d40fa03f00e3465e3ff74f5/nanoset-0.1.3-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72d1012385774d8bf775c96b2d24048c", "sha256": "93864e85c9f8edda6b0df0b33a559b241fce18e5e34f5b57236fc592e428f623"}, "downloads": -1, "filename": "nanoset-0.1.3-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "72d1012385774d8bf775c96b2d24048c", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 217079, "upload_time": "2019-11-18T07:41:26", "upload_time_iso_8601": "2019-11-18T07:41:26.880390Z", "url": "https://files.pythonhosted.org/packages/c4/6e/6331d1663536c1a833f596fad98f9490f176b70973d8ee0c3c176e8a578a/nanoset-0.1.3-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba9266246644d37db44be33433c563b7", "sha256": "907d415a4d5f3bcc4822ea2dbd1a05c79b340e81b01e716dc90af83c5d3f2ef8"}, "downloads": -1, "filename": "nanoset-0.1.3-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "ba9266246644d37db44be33433c563b7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 687646, "upload_time": "2019-11-18T07:43:56", "upload_time_iso_8601": "2019-11-18T07:43:56.733031Z", "url": "https://files.pythonhosted.org/packages/c3/21/de7ed8c612de9fcc12bbe62709a5e78f179103d3a7457db80ae0f1afcd3b/nanoset-0.1.3-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1c5be4409d149ed5ab869aac58944d4", "sha256": "b8657d95e151f764a1ded9ba1e792b41f511dda41c958ecdf6228af89e8c41d3"}, "downloads": -1, "filename": "nanoset-0.1.3-cp37-cp37m-macosx_10_14_x86_64.whl", "has_sig": false, "md5_digest": "f1c5be4409d149ed5ab869aac58944d4", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 184267, "upload_time": "2019-11-18T07:55:37", "upload_time_iso_8601": "2019-11-18T07:55:37.016590Z", "url": "https://files.pythonhosted.org/packages/27/56/ee7b54947fda3f6efe633a62f50cc696aaece883b4b6846a270b1848af0b/nanoset-0.1.3-cp37-cp37m-macosx_10_14_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "796c91d9e25c2338fdcc5b5891cd3e3f", "sha256": "ee385aa3ae29817072c89d94d7c861dab7dddb327daa4690d7237000cd53ae71"}, "downloads": -1, "filename": "nanoset-0.1.3-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "796c91d9e25c2338fdcc5b5891cd3e3f", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 216740, "upload_time": "2019-11-18T07:41:41", "upload_time_iso_8601": "2019-11-18T07:41:41.196557Z", "url": "https://files.pythonhosted.org/packages/eb/b8/603b5d06f30d02ef2cf9b1fed17b2030ac5c3d64c841cb89c21f4d2089fb/nanoset-0.1.3-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc82611dbc35c4c15f6541d3bc1ca245", "sha256": "6bb3db663e8d2bdf78ce81e7ecb0ef50972f6caab97516b0d9255911c4d00f62"}, "downloads": -1, "filename": "nanoset-0.1.3-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "dc82611dbc35c4c15f6541d3bc1ca245", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 216744, "upload_time": "2019-11-18T07:41:43", "upload_time_iso_8601": "2019-11-18T07:41:43.132841Z", "url": "https://files.pythonhosted.org/packages/50/18/734aacee5c586ff4ed28ee86a0e022cdef0e305006f020c2e6cf42684706/nanoset-0.1.3-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "293ea202addab298203fe7b76ded347d", "sha256": "8c933fbbe17dae31f55c1e01ab51463db798e298f671a13836448136031be984"}, "downloads": -1, "filename": "nanoset-0.1.3-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "293ea202addab298203fe7b76ded347d", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 687315, "upload_time": "2019-11-18T07:49:40", "upload_time_iso_8601": "2019-11-18T07:49:40.119855Z", "url": "https://files.pythonhosted.org/packages/16/18/c4490210beca47a87d1054b782dfdbfc37762258440c21db11fb2bed440f/nanoset-0.1.3-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e02b2e47bb43c7412d43705578c525b", "sha256": "ad8d4abf980011cf2d15533ca2ef8f1186318dd1b2a774e8e67108972a63c238"}, "downloads": -1, "filename": "nanoset-0.1.3-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3e02b2e47bb43c7412d43705578c525b", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 216463, "upload_time": "2019-11-18T07:41:48", "upload_time_iso_8601": "2019-11-18T07:41:48.369011Z", "url": "https://files.pythonhosted.org/packages/8b/66/7c32937b9feda4f177ad87c1d12fa708a3403163d9143070dbe6b1a1b7f3/nanoset-0.1.3-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccd5752d3de6d263402ed2b82212d662", "sha256": "cbef13942cb3301991a0463251a9462777d79255c122336f174dbf0ac33bf1b4"}, "downloads": -1, "filename": "nanoset-0.1.3-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "ccd5752d3de6d263402ed2b82212d662", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 216468, "upload_time": "2019-11-18T07:41:50", "upload_time_iso_8601": "2019-11-18T07:41:50.274161Z", "url": "https://files.pythonhosted.org/packages/db/7d/5411c668e96bdc3f1a5e01400a95529900dc6ca9b6391abf2b825de3503a/nanoset-0.1.3-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6180b4201659bf90da76aa639e52f14e", "sha256": "328d5e934ed0ff6e9a0d033528436894f12e215eb8c1b8be8733a8a0cbc93b5d"}, "downloads": -1, "filename": "nanoset-0.1.3-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "6180b4201659bf90da76aa639e52f14e", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 687511, "upload_time": "2019-11-18T07:55:14", "upload_time_iso_8601": "2019-11-18T07:55:14.741727Z", "url": "https://files.pythonhosted.org/packages/f8/79/bbb6397baecea84c75b8c2dc0b19507e63cb9361e75622aa05670b9b0be7/nanoset-0.1.3-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "891c5eae60f23ecc39292d1e1fd4d3a9", "sha256": "7b261bbbe6a4120dd0c57ae8fac3d8bb5f3732d2a7cd8a5bd0a63a29ddd012f1"}, "downloads": -1, "filename": "nanoset-0.1.3.tar.gz", "has_sig": false, "md5_digest": "891c5eae60f23ecc39292d1e1fd4d3a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 39814, "upload_time": "2019-11-18T07:41:28", "upload_time_iso_8601": "2019-11-18T07:41:28.742531Z", "url": "https://files.pythonhosted.org/packages/55/cc/1a78736ca206d80da5ecc72aee9d3793e0aa11981a261ad63b00e012b27e/nanoset-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "ba03b5aab74e293cb2d2a6ea922ed799", "sha256": "179df5d00a085fbb590f98474dd23be4f25926d5fe059dd7fb35a89907d4a0aa"}, "downloads": -1, "filename": "nanoset-0.1.4-cp35-cp35m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "ba03b5aab74e293cb2d2a6ea922ed799", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 184561, "upload_time": "2020-04-08T09:57:00", "upload_time_iso_8601": "2020-04-08T09:57:00.039630Z", "url": "https://files.pythonhosted.org/packages/3f/c6/95826d69439f273b1dbb163b9c6a8dfd69220e6b4d4b2557a05b33525058/nanoset-0.1.4-cp35-cp35m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df77ba973335b2a0fe264f369b475b93", "sha256": "b8e1758ce387e263653680e68c3d741fe63a1db7be751a2aadb2ce0e987ca853"}, "downloads": -1, "filename": "nanoset-0.1.4-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "df77ba973335b2a0fe264f369b475b93", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 220818, "upload_time": "2020-04-08T00:34:49", "upload_time_iso_8601": "2020-04-08T00:34:49.242229Z", "url": "https://files.pythonhosted.org/packages/0b/64/97450044f2c20ca70babacf7f45b3a2513d153587f81a3d557227a69cbb5/nanoset-0.1.4-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "159eba46f5d4ddf74d510f955ad95191", "sha256": "efa55bbb73a9b709fcdb02db96a3124ffb6a85755fe54ff2bddaa888a7971667"}, "downloads": -1, "filename": "nanoset-0.1.4-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "159eba46f5d4ddf74d510f955ad95191", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 220821, "upload_time": "2020-04-08T00:34:50", "upload_time_iso_8601": "2020-04-08T00:34:50.383004Z", "url": "https://files.pythonhosted.org/packages/bb/16/bc1501e366a303bc975b50b6ea5d0cd94b32a7e67f8d5f7481dfd913a21f/nanoset-0.1.4-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2d271c2d7f0c034832e77dac5201db2", "sha256": "d60e03da9dd9ff3e09e7a59137795c3e4ad7dd7249289eaaa86beaa2e340d3ad"}, "downloads": -1, "filename": "nanoset-0.1.4-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "f2d271c2d7f0c034832e77dac5201db2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 669179, "upload_time": "2020-04-08T00:33:05", "upload_time_iso_8601": "2020-04-08T00:33:05.429093Z", "url": "https://files.pythonhosted.org/packages/56/b1/e51d73279ff128ca22f967606575c804c8c086b98fc2ed40fca08bd5f629/nanoset-0.1.4-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ff9fdf3219fea07665d79c44203ce96", "sha256": "f849cac8e6eb5ac1663c16dd1b3dd2bcf0f469cc9c4868f64e7c2490f988c599"}, "downloads": -1, "filename": "nanoset-0.1.4-cp36-cp36m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "3ff9fdf3219fea07665d79c44203ce96", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 184701, "upload_time": "2020-04-08T09:28:13", "upload_time_iso_8601": "2020-04-08T09:28:13.277743Z", "url": "https://files.pythonhosted.org/packages/ae/e4/f33936e0713a1bb9250f4a9f87bd1d32ceb0634b79abed72503cbbc772bf/nanoset-0.1.4-cp36-cp36m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dfc243236352663b769a88eab067c50", "sha256": "c99f29e3fc50a8067196afa9beaccae54b5437e2b0f735b485b83dbcd5028fb3"}, "downloads": -1, "filename": "nanoset-0.1.4-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6dfc243236352663b769a88eab067c50", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 221165, "upload_time": "2020-04-08T00:34:40", "upload_time_iso_8601": "2020-04-08T00:34:40.083836Z", "url": "https://files.pythonhosted.org/packages/d1/d4/ff15bbfb336d98450f2c4f1cd519cc17b09d6aa00a84773b2bbc70b59c34/nanoset-0.1.4-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2ed51f09365f90cc9eac79d69fbae6e", "sha256": "1a4ea18b094eb1ef791b1b58aae085aba9ca6bc607b9cfe503b2ac913b12daff"}, "downloads": -1, "filename": "nanoset-0.1.4-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "b2ed51f09365f90cc9eac79d69fbae6e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 221168, "upload_time": "2020-04-08T00:34:42", "upload_time_iso_8601": "2020-04-08T00:34:42.253523Z", "url": "https://files.pythonhosted.org/packages/73/3b/db508b6a444756ecf40c541dd86cf7be5e56ec68dcf74d30c6e025effed6/nanoset-0.1.4-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2eadfc69f91addd91cc02e80825bbff3", "sha256": "a6b0ec6dc5c47eaa7aa8e67b8125635a469cd6a01873425d7610d1a28ccf9443"}, "downloads": -1, "filename": "nanoset-0.1.4-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "2eadfc69f91addd91cc02e80825bbff3", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 669330, "upload_time": "2020-04-08T00:36:02", "upload_time_iso_8601": "2020-04-08T00:36:02.531141Z", "url": "https://files.pythonhosted.org/packages/e0/ca/94a2f7637be5698036f3b6cc3202e21398109d42e8afc6dc1dddf4a19392/nanoset-0.1.4-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e0dc9bc971ec92b82ab5619f2b0a2b2", "sha256": "b7cde69861b6116ba13a5d4de93cb38f90d244bd23d47dca00a782c78793ea01"}, "downloads": -1, "filename": "nanoset-0.1.4-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "6e0dc9bc971ec92b82ab5619f2b0a2b2", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 184549, "upload_time": "2020-04-08T09:38:04", "upload_time_iso_8601": "2020-04-08T09:38:04.661009Z", "url": "https://files.pythonhosted.org/packages/ca/0c/8d61b2b070a47f4f60d7e5208815c0eee289bdb9500c84eea79ec6c00e39/nanoset-0.1.4-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e3ea0cfca74264b10ef46d903ba850f", "sha256": "6ce1846c72b3ca479b45b5a4165292a171d3ec2c555f2469c696634bf0eff8d3"}, "downloads": -1, "filename": "nanoset-0.1.4-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7e3ea0cfca74264b10ef46d903ba850f", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 220862, "upload_time": "2020-04-08T00:34:43", "upload_time_iso_8601": "2020-04-08T00:34:43.630346Z", "url": "https://files.pythonhosted.org/packages/26/2a/1e9f4a6eeb7389b27b11e727b25951dcc6155cec2539cce3022de19f4f80/nanoset-0.1.4-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6f02fdd88402a5da9cc2e95e08fc004", "sha256": "a60e7a82efb3e5d35e2fc9df31e9fc07c4236fbc386e71068042487894245fc4"}, "downloads": -1, "filename": "nanoset-0.1.4-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "e6f02fdd88402a5da9cc2e95e08fc004", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 220864, "upload_time": "2020-04-08T00:34:46", "upload_time_iso_8601": "2020-04-08T00:34:46.216150Z", "url": "https://files.pythonhosted.org/packages/fa/22/adedf3dc969b218a0287385eb86c86a71e229603c0684146062d53ae92b3/nanoset-0.1.4-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62ff5ebcd0bd0851c2dcab63e3d87278", "sha256": "9e7742926c83f893e47a2385b66fe975a1c8a655aab4d6bfceb64c6c19520cbc"}, "downloads": -1, "filename": "nanoset-0.1.4-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "62ff5ebcd0bd0851c2dcab63e3d87278", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 668931, "upload_time": "2020-04-08T00:38:58", "upload_time_iso_8601": "2020-04-08T00:38:58.707097Z", "url": "https://files.pythonhosted.org/packages/f0/92/da2b5a1323351316cf232c31d6e62cb9343fc6018613f35b959c47f11831/nanoset-0.1.4-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cf0c92c9ee7d442f4c4d6435d3cf233", "sha256": "f6804f94424fa3fdefafe04d3d0b55e5cb83a2dbd4347edbc75d334d1e105094"}, "downloads": -1, "filename": "nanoset-0.1.4-cp38-cp38-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "7cf0c92c9ee7d442f4c4d6435d3cf233", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 184570, "upload_time": "2020-04-08T09:38:12", "upload_time_iso_8601": "2020-04-08T09:38:12.620130Z", "url": "https://files.pythonhosted.org/packages/70/58/28570f6601e3be4f8ab8b3cab710ab6b210011f3b247fd46ee263ced9877/nanoset-0.1.4-cp38-cp38-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ffba349ea13498895ebf4a612be8dd4", "sha256": "5b8bb547d49befe55e899798233cbe97ed3576e78d01053ebc1036979ee93440"}, "downloads": -1, "filename": "nanoset-0.1.4-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1ffba349ea13498895ebf4a612be8dd4", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 220835, "upload_time": "2020-04-08T00:34:39", "upload_time_iso_8601": "2020-04-08T00:34:39.509636Z", "url": "https://files.pythonhosted.org/packages/97/64/990714ad0ddf29c52bcc2a8aee1e9872b8ce7f692551b8a95eaf74f71cc4/nanoset-0.1.4-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e1e701b189333199343be041db73311", "sha256": "eede866f5b51f11a89a8b1b4404ef11d1d625b16d6de26d281e36d6903751ead"}, "downloads": -1, "filename": "nanoset-0.1.4-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "3e1e701b189333199343be041db73311", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 220840, "upload_time": "2020-04-08T00:34:41", "upload_time_iso_8601": "2020-04-08T00:34:41.245065Z", "url": "https://files.pythonhosted.org/packages/df/3b/223bd6092be2d2da9fd1c6b13bb4206586d93d4a129fa3b5f903438326af/nanoset-0.1.4-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb465797a2d608c8e2b57937ca1fd283", "sha256": "99541ef94f68131371ae68b7241d0eb60f1e8d8d3455f0be3612fe9a5ff9af8d"}, "downloads": -1, "filename": "nanoset-0.1.4-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "cb465797a2d608c8e2b57937ca1fd283", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 669012, "upload_time": "2020-04-08T00:41:27", "upload_time_iso_8601": "2020-04-08T00:41:27.042641Z", "url": "https://files.pythonhosted.org/packages/39/25/bb7273c3b9fa94776a00c14cb585759f86d9f50193c22cfc88af1da41e61/nanoset-0.1.4-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60386f413c8f42237fd920a69c7a61a6", "sha256": "98152c0f8f44ae126ab59e45a0fcc1b2c76a6622dc56375b3855c203b55162e8"}, "downloads": -1, "filename": "nanoset-0.1.4.tar.gz", "has_sig": false, "md5_digest": "60386f413c8f42237fd920a69c7a61a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 45226, "upload_time": "2020-04-08T00:34:43", "upload_time_iso_8601": "2020-04-08T00:34:43.179232Z", "url": "https://files.pythonhosted.org/packages/0b/8b/d2aebc24bec8765e7f16225e7a81556416e6dfbfe98a2ed1f34d6d91872d/nanoset-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba03b5aab74e293cb2d2a6ea922ed799", "sha256": "179df5d00a085fbb590f98474dd23be4f25926d5fe059dd7fb35a89907d4a0aa"}, "downloads": -1, "filename": "nanoset-0.1.4-cp35-cp35m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "ba03b5aab74e293cb2d2a6ea922ed799", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 184561, "upload_time": "2020-04-08T09:57:00", "upload_time_iso_8601": "2020-04-08T09:57:00.039630Z", "url": "https://files.pythonhosted.org/packages/3f/c6/95826d69439f273b1dbb163b9c6a8dfd69220e6b4d4b2557a05b33525058/nanoset-0.1.4-cp35-cp35m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df77ba973335b2a0fe264f369b475b93", "sha256": "b8e1758ce387e263653680e68c3d741fe63a1db7be751a2aadb2ce0e987ca853"}, "downloads": -1, "filename": "nanoset-0.1.4-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "df77ba973335b2a0fe264f369b475b93", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 220818, "upload_time": "2020-04-08T00:34:49", "upload_time_iso_8601": "2020-04-08T00:34:49.242229Z", "url": "https://files.pythonhosted.org/packages/0b/64/97450044f2c20ca70babacf7f45b3a2513d153587f81a3d557227a69cbb5/nanoset-0.1.4-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "159eba46f5d4ddf74d510f955ad95191", "sha256": "efa55bbb73a9b709fcdb02db96a3124ffb6a85755fe54ff2bddaa888a7971667"}, "downloads": -1, "filename": "nanoset-0.1.4-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "159eba46f5d4ddf74d510f955ad95191", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 220821, "upload_time": "2020-04-08T00:34:50", "upload_time_iso_8601": "2020-04-08T00:34:50.383004Z", "url": "https://files.pythonhosted.org/packages/bb/16/bc1501e366a303bc975b50b6ea5d0cd94b32a7e67f8d5f7481dfd913a21f/nanoset-0.1.4-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2d271c2d7f0c034832e77dac5201db2", "sha256": "d60e03da9dd9ff3e09e7a59137795c3e4ad7dd7249289eaaa86beaa2e340d3ad"}, "downloads": -1, "filename": "nanoset-0.1.4-cp35-cp35m-win_amd64.whl", "has_sig": false, "md5_digest": "f2d271c2d7f0c034832e77dac5201db2", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": ">=3.5.*", "size": 669179, "upload_time": "2020-04-08T00:33:05", "upload_time_iso_8601": "2020-04-08T00:33:05.429093Z", "url": "https://files.pythonhosted.org/packages/56/b1/e51d73279ff128ca22f967606575c804c8c086b98fc2ed40fca08bd5f629/nanoset-0.1.4-cp35-cp35m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ff9fdf3219fea07665d79c44203ce96", "sha256": "f849cac8e6eb5ac1663c16dd1b3dd2bcf0f469cc9c4868f64e7c2490f988c599"}, "downloads": -1, "filename": "nanoset-0.1.4-cp36-cp36m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "3ff9fdf3219fea07665d79c44203ce96", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 184701, "upload_time": "2020-04-08T09:28:13", "upload_time_iso_8601": "2020-04-08T09:28:13.277743Z", "url": "https://files.pythonhosted.org/packages/ae/e4/f33936e0713a1bb9250f4a9f87bd1d32ceb0634b79abed72503cbbc772bf/nanoset-0.1.4-cp36-cp36m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dfc243236352663b769a88eab067c50", "sha256": "c99f29e3fc50a8067196afa9beaccae54b5437e2b0f735b485b83dbcd5028fb3"}, "downloads": -1, "filename": "nanoset-0.1.4-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6dfc243236352663b769a88eab067c50", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 221165, "upload_time": "2020-04-08T00:34:40", "upload_time_iso_8601": "2020-04-08T00:34:40.083836Z", "url": "https://files.pythonhosted.org/packages/d1/d4/ff15bbfb336d98450f2c4f1cd519cc17b09d6aa00a84773b2bbc70b59c34/nanoset-0.1.4-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2ed51f09365f90cc9eac79d69fbae6e", "sha256": "1a4ea18b094eb1ef791b1b58aae085aba9ca6bc607b9cfe503b2ac913b12daff"}, "downloads": -1, "filename": "nanoset-0.1.4-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "b2ed51f09365f90cc9eac79d69fbae6e", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 221168, "upload_time": "2020-04-08T00:34:42", "upload_time_iso_8601": "2020-04-08T00:34:42.253523Z", "url": "https://files.pythonhosted.org/packages/73/3b/db508b6a444756ecf40c541dd86cf7be5e56ec68dcf74d30c6e025effed6/nanoset-0.1.4-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2eadfc69f91addd91cc02e80825bbff3", "sha256": "a6b0ec6dc5c47eaa7aa8e67b8125635a469cd6a01873425d7610d1a28ccf9443"}, "downloads": -1, "filename": "nanoset-0.1.4-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "2eadfc69f91addd91cc02e80825bbff3", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.5.*", "size": 669330, "upload_time": "2020-04-08T00:36:02", "upload_time_iso_8601": "2020-04-08T00:36:02.531141Z", "url": "https://files.pythonhosted.org/packages/e0/ca/94a2f7637be5698036f3b6cc3202e21398109d42e8afc6dc1dddf4a19392/nanoset-0.1.4-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6e0dc9bc971ec92b82ab5619f2b0a2b2", "sha256": "b7cde69861b6116ba13a5d4de93cb38f90d244bd23d47dca00a782c78793ea01"}, "downloads": -1, "filename": "nanoset-0.1.4-cp37-cp37m-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "6e0dc9bc971ec92b82ab5619f2b0a2b2", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 184549, "upload_time": "2020-04-08T09:38:04", "upload_time_iso_8601": "2020-04-08T09:38:04.661009Z", "url": "https://files.pythonhosted.org/packages/ca/0c/8d61b2b070a47f4f60d7e5208815c0eee289bdb9500c84eea79ec6c00e39/nanoset-0.1.4-cp37-cp37m-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e3ea0cfca74264b10ef46d903ba850f", "sha256": "6ce1846c72b3ca479b45b5a4165292a171d3ec2c555f2469c696634bf0eff8d3"}, "downloads": -1, "filename": "nanoset-0.1.4-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7e3ea0cfca74264b10ef46d903ba850f", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 220862, "upload_time": "2020-04-08T00:34:43", "upload_time_iso_8601": "2020-04-08T00:34:43.630346Z", "url": "https://files.pythonhosted.org/packages/26/2a/1e9f4a6eeb7389b27b11e727b25951dcc6155cec2539cce3022de19f4f80/nanoset-0.1.4-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6f02fdd88402a5da9cc2e95e08fc004", "sha256": "a60e7a82efb3e5d35e2fc9df31e9fc07c4236fbc386e71068042487894245fc4"}, "downloads": -1, "filename": "nanoset-0.1.4-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "e6f02fdd88402a5da9cc2e95e08fc004", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 220864, "upload_time": "2020-04-08T00:34:46", "upload_time_iso_8601": "2020-04-08T00:34:46.216150Z", "url": "https://files.pythonhosted.org/packages/fa/22/adedf3dc969b218a0287385eb86c86a71e229603c0684146062d53ae92b3/nanoset-0.1.4-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62ff5ebcd0bd0851c2dcab63e3d87278", "sha256": "9e7742926c83f893e47a2385b66fe975a1c8a655aab4d6bfceb64c6c19520cbc"}, "downloads": -1, "filename": "nanoset-0.1.4-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "62ff5ebcd0bd0851c2dcab63e3d87278", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.5.*", "size": 668931, "upload_time": "2020-04-08T00:38:58", "upload_time_iso_8601": "2020-04-08T00:38:58.707097Z", "url": "https://files.pythonhosted.org/packages/f0/92/da2b5a1323351316cf232c31d6e62cb9343fc6018613f35b959c47f11831/nanoset-0.1.4-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7cf0c92c9ee7d442f4c4d6435d3cf233", "sha256": "f6804f94424fa3fdefafe04d3d0b55e5cb83a2dbd4347edbc75d334d1e105094"}, "downloads": -1, "filename": "nanoset-0.1.4-cp38-cp38-macosx_10_13_x86_64.whl", "has_sig": false, "md5_digest": "7cf0c92c9ee7d442f4c4d6435d3cf233", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 184570, "upload_time": "2020-04-08T09:38:12", "upload_time_iso_8601": "2020-04-08T09:38:12.620130Z", "url": "https://files.pythonhosted.org/packages/70/58/28570f6601e3be4f8ab8b3cab710ab6b210011f3b247fd46ee263ced9877/nanoset-0.1.4-cp38-cp38-macosx_10_13_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ffba349ea13498895ebf4a612be8dd4", "sha256": "5b8bb547d49befe55e899798233cbe97ed3576e78d01053ebc1036979ee93440"}, "downloads": -1, "filename": "nanoset-0.1.4-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1ffba349ea13498895ebf4a612be8dd4", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 220835, "upload_time": "2020-04-08T00:34:39", "upload_time_iso_8601": "2020-04-08T00:34:39.509636Z", "url": "https://files.pythonhosted.org/packages/97/64/990714ad0ddf29c52bcc2a8aee1e9872b8ce7f692551b8a95eaf74f71cc4/nanoset-0.1.4-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e1e701b189333199343be041db73311", "sha256": "eede866f5b51f11a89a8b1b4404ef11d1d625b16d6de26d281e36d6903751ead"}, "downloads": -1, "filename": "nanoset-0.1.4-cp38-cp38-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "3e1e701b189333199343be041db73311", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 220840, "upload_time": "2020-04-08T00:34:41", "upload_time_iso_8601": "2020-04-08T00:34:41.245065Z", "url": "https://files.pythonhosted.org/packages/df/3b/223bd6092be2d2da9fd1c6b13bb4206586d93d4a129fa3b5f903438326af/nanoset-0.1.4-cp38-cp38-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb465797a2d608c8e2b57937ca1fd283", "sha256": "99541ef94f68131371ae68b7241d0eb60f1e8d8d3455f0be3612fe9a5ff9af8d"}, "downloads": -1, "filename": "nanoset-0.1.4-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "cb465797a2d608c8e2b57937ca1fd283", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": ">=3.5.*", "size": 669012, "upload_time": "2020-04-08T00:41:27", "upload_time_iso_8601": "2020-04-08T00:41:27.042641Z", "url": "https://files.pythonhosted.org/packages/39/25/bb7273c3b9fa94776a00c14cb585759f86d9f50193c22cfc88af1da41e61/nanoset-0.1.4-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "60386f413c8f42237fd920a69c7a61a6", "sha256": "98152c0f8f44ae126ab59e45a0fcc1b2c76a6622dc56375b3855c203b55162e8"}, "downloads": -1, "filename": "nanoset-0.1.4.tar.gz", "has_sig": false, "md5_digest": "60386f413c8f42237fd920a69c7a61a6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.*", "size": 45226, "upload_time": "2020-04-08T00:34:43", "upload_time_iso_8601": "2020-04-08T00:34:43.179232Z", "url": "https://files.pythonhosted.org/packages/0b/8b/d2aebc24bec8765e7f16225e7a81556416e6dfbfe98a2ed1f34d6d91872d/nanoset-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:36 2020"}