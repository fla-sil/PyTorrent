{"info": {"author": "Simon Willison", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# datasette-render-markdown\n\n[![PyPI](https://img.shields.io/pypi/v/datasette-render-markdown.svg)](https://pypi.org/project/datasette-render-markdown/)\n[![CircleCI](https://circleci.com/gh/simonw/datasette-render-markdown.svg?style=svg)](https://circleci.com/gh/simonw/datasette-render-markdown)\n[![License](https://img.shields.io/badge/license-Apache%202.0-blue.svg)](https://github.com/simonw/datasette-render-markdown/blob/master/LICENSE)\n\nDatasette plugin for rendering Markdown.\n\n## Installation\n\nInstall this plugin in the same environment as Datasette to enable this new functionality:\n\n    $ pip install datasette-render-markdown\n\n## Usage\n\nYou can explicitly list the columns you would like to treat as Markdown using [plugin configuration](https://datasette.readthedocs.io/en/stable/plugins.html#plugin-configuration) in a `metadata.json` file.\n\nAdd a `\"datasette-render-markdown\"` configuration block and use a `\"columns\"` key to list the columns you would like to treat as Markdown values:\n\n```json\n{\n    \"plugins\": {\n        \"datasette-render-markdown\": {\n            \"columns\": [\"body\"]\n        }\n    }\n}\n```\n\nThis will cause any `body` column in any table to be treated as markdown and safely rendered using [Python-Markdown](https://python-markdown.github.io/). The resulting HTML is then run through [Bleach](https://bleach.readthedocs.io/) to avoid the risk of XSS security problems.\n\nSave this to `metadata.json` and run Datasette with the `--metadata` flag to load this configuration:\n\n    $ datasette serve mydata.db --metadata metadata.json\n\nThe configuration block can be used at the top level, or it can be applied just to specific databases or tables. Here's how to apply it to just the `entries` table in the `news.db` database:\n\n```json\n{\n    \"databases\": {\n        \"news\": {\n            \"tables\": {\n                \"entries\": {\n                    \"plugins\": {\n                        \"datasette-render-markdown\": {\n                            \"columns\": [\"body\"]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\nAnd here's how to apply it to every `body` column in every table in the `news.db` database:\n\n```json\n{\n    \"databases\": {\n        \"news\": {\n            \"plugins\": {\n                \"datasette-render-markdown\": {\n                    \"columns\": [\"body\"]\n                }\n            }\n        }\n    }\n}\n```\n\n## Columns that match a naming convention\n\nThis plugin can also render markdown in any columns that match a specific naming convention.\n\nBy default, columns that have a name ending in `_markdown` will be rendered.\n\nYou can try this out using the following query:\n\n```sql\nselect '# Hello there\n\n* This is a list\n* of items\n\n[And a link](https://github.com/simonw/datasette-render-markdown).'\nas demo_markdown\n```\n\nYou can configure a different list of wildcard patterns using the `\"patterns\"` configuration key. Here's how to render columns that end in either `_markdown` or `_md`:\n\n```json\n{\n    \"plugins\": {\n        \"datasette-render-markdown\": {\n            \"patterns\": [\"*_markdown\", \"*_md\"]\n        }\n    }\n}\n```\n\nTo disable wildcard column matching entirely, set `\"patterns\": []` in your plugin metadata configuration.\n\n## Markdown extensions\n\nThe [Python-Markdown library](https://python-markdown.github.io/) that powers this plugin supports extensions, both [bundled](https://python-markdown.github.io/extensions/) and [third-party](https://github.com/Python-Markdown/markdown/wiki/Third-Party-Extensions). These can be used to enable additional Markdown features such as [table support](https://python-markdown.github.io/extensions/tables/).\n\nYou can configure support for extensions using the `\"extensions\"` key in your plugin metadata configuration.\n\nSince extensions may introduce new HTML tags, you will also need to add those tags to the list of tags that are allowed by the [Bleach](https://bleach.readthedocs.io/) sanitizer. You can do that using the `\"extra_tags\"` key, and you can whitelist additional HTML attributes using `\"extra_attrs\"`. See [the Bleach documentation](https://bleach.readthedocs.io/en/latest/clean.html#allowed-tags-tags) for more information on this.\n\nHere's how to enable support for [Markdown tables](https://python-markdown.github.io/extensions/tables/):\n\n```json\n{\n    \"plugins\": {\n        \"datasette-render-markdown\": {\n            \"extensions\": [\"tables\"],\n            \"extra_tags\": [\"table\", \"thead\", \"tr\", \"th\", \"td\", \"tbody\"],\n        }\n    }\n}\n```\n\n### GitHub-Flavored Markdown\n\nEnabling [GitHub-Flavored Markdown](https://help.github.com/en/github/writing-on-github) (useful for if you are working with data imported from GitHub using [github-to-sqlite](https://github.com/dogsheep/github-to-sqlite)) is a little more complicated.\n\nFirst, you will need to install the [py-gfm](https://py-gfm.readthedocs.io) package:\n\n    $ pip install py-gfm\n\nNote that `py-gfm` has [a bug](https://github.com/Zopieux/py-gfm/issues/13) that causes it to pin to `Markdown<3.0` - so if you are using it you should install it _before_ installing `datasette-render-markdown` to ensure you get a compatibly version of that dependency.\n\nNow you can configure it like this. Note that the extension name is `mdx_gfm:GithubFlavoredMarkdownExtension` and you need to whitelist several extra HTML tags and attributes:\n\n```json\n{\n    \"plugins\": {\n        \"datasette-render-markdown\": {\n            \"extra_tags\": [\n                \"img\",\n                \"hr\",\n                \"br\",\n                \"details\",\n                \"summary\",\n                \"input\"\n            ],\n            \"extra_attrs\": {\n                \"input\": [\n                    \"type\",\n                    \"disabled\",\n                    \"checked\"\n                ],\n                \"img\": [\n                    \"src\"\n                ]\n            },\n            \"extensions\": [\n                \"mdx_gfm:GithubFlavoredMarkdownExtension\"\n            ]\n        }\n    }\n}\n```\n\nThe `<input type=\"\" checked disabled>` attributes are needed to support rendering checkboxes in issue descriptions.\n\n## Markdown in templates\n\nThe plugin also adds a new template function: `render_markdown(value)`. You can use this in your templates like so:\n\n```html+jinja\n{{ render_markdown(\"\"\"\n# This is markdown\n\n* One\n* Two\n* Three\n\"\"\") }}\n```\n\nYou can load additional extensions and whitelist tags by passing extra arguments to the function like this:\n\n```html+jinja\n{{ render_markdown(\"\"\"\n## Markdown table\n\nFirst Header  | Second Header\n------------- | -------------\nContent Cell  | Content Cell\nContent Cell  | Content Cell\n\"\"\", extensions=[\"tables\"],\n    extra_tags=[\"table\", \"thead\", \"tr\", \"th\", \"td\", \"tbody\"])) }}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/simonw/datasette-render-markdown", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "datasette-render-markdown", "package_url": "https://pypi.org/project/datasette-render-markdown/", "platform": "", "project_url": "https://pypi.org/project/datasette-render-markdown/", "project_urls": {"Homepage": "https://github.com/simonw/datasette-render-markdown"}, "release_url": "https://pypi.org/project/datasette-render-markdown/1.1.2/", "requires_dist": ["datasette", "markdown", "bleach", "pytest ; extra == 'test'", "pytest-asyncio ; extra == 'test'"], "requires_python": "", "summary": "Datasette plugin for rendering Markdown", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>datasette-render-markdown</h1>\n<p><a href=\"https://pypi.org/project/datasette-render-markdown/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/878cd4273eb7bf9189ca51a94dcb933b20cc5c0e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6461746173657474652d72656e6465722d6d61726b646f776e2e737667\"></a>\n<a href=\"https://circleci.com/gh/simonw/datasette-render-markdown\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a230c9e86b314280e1cc6ea19afff162c8b2edc/68747470733a2f2f636972636c6563692e636f6d2f67682f73696d6f6e772f6461746173657474652d72656e6465722d6d61726b646f776e2e7376673f7374796c653d737667\"></a>\n<a href=\"https://github.com/simonw/datasette-render-markdown/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bad0ad2a7195b40874e3a10488118122d89489fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>Datasette plugin for rendering Markdown.</p>\n<h2>Installation</h2>\n<p>Install this plugin in the same environment as Datasette to enable this new functionality:</p>\n<pre><code>$ pip install datasette-render-markdown\n</code></pre>\n<h2>Usage</h2>\n<p>You can explicitly list the columns you would like to treat as Markdown using <a href=\"https://datasette.readthedocs.io/en/stable/plugins.html#plugin-configuration\" rel=\"nofollow\">plugin configuration</a> in a <code>metadata.json</code> file.</p>\n<p>Add a <code>\"datasette-render-markdown\"</code> configuration block and use a <code>\"columns\"</code> key to list the columns you would like to treat as Markdown values:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"datasette-render-markdown\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"columns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"body\"</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This will cause any <code>body</code> column in any table to be treated as markdown and safely rendered using <a href=\"https://python-markdown.github.io/\" rel=\"nofollow\">Python-Markdown</a>. The resulting HTML is then run through <a href=\"https://bleach.readthedocs.io/\" rel=\"nofollow\">Bleach</a> to avoid the risk of XSS security problems.</p>\n<p>Save this to <code>metadata.json</code> and run Datasette with the <code>--metadata</code> flag to load this configuration:</p>\n<pre><code>$ datasette serve mydata.db --metadata metadata.json\n</code></pre>\n<p>The configuration block can be used at the top level, or it can be applied just to specific databases or tables. Here's how to apply it to just the <code>entries</code> table in the <code>news.db</code> database:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"databases\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"news\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"tables\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"entries\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"nt\">\"datasette-render-markdown\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"nt\">\"columns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"body\"</span><span class=\"p\">]</span>\n                        <span class=\"p\">}</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>And here's how to apply it to every <code>body</code> column in every table in the <code>news.db</code> database:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"databases\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"news\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"datasette-render-markdown\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"columns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"body\"</span><span class=\"p\">]</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Columns that match a naming convention</h2>\n<p>This plugin can also render markdown in any columns that match a specific naming convention.</p>\n<p>By default, columns that have a name ending in <code>_markdown</code> will be rendered.</p>\n<p>You can try this out using the following query:</p>\n<pre><span class=\"k\">select</span> <span class=\"s1\">'# Hello there</span>\n\n<span class=\"s1\">* This is a list</span>\n<span class=\"s1\">* of items</span>\n\n<span class=\"s1\">[And a link](https://github.com/simonw/datasette-render-markdown).'</span>\n<span class=\"k\">as</span> <span class=\"n\">demo_markdown</span>\n</pre>\n<p>You can configure a different list of wildcard patterns using the <code>\"patterns\"</code> configuration key. Here's how to render columns that end in either <code>_markdown</code> or <code>_md</code>:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"datasette-render-markdown\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"patterns\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"*_markdown\"</span><span class=\"p\">,</span> <span class=\"s2\">\"*_md\"</span><span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>To disable wildcard column matching entirely, set <code>\"patterns\": []</code> in your plugin metadata configuration.</p>\n<h2>Markdown extensions</h2>\n<p>The <a href=\"https://python-markdown.github.io/\" rel=\"nofollow\">Python-Markdown library</a> that powers this plugin supports extensions, both <a href=\"https://python-markdown.github.io/extensions/\" rel=\"nofollow\">bundled</a> and <a href=\"https://github.com/Python-Markdown/markdown/wiki/Third-Party-Extensions\" rel=\"nofollow\">third-party</a>. These can be used to enable additional Markdown features such as <a href=\"https://python-markdown.github.io/extensions/tables/\" rel=\"nofollow\">table support</a>.</p>\n<p>You can configure support for extensions using the <code>\"extensions\"</code> key in your plugin metadata configuration.</p>\n<p>Since extensions may introduce new HTML tags, you will also need to add those tags to the list of tags that are allowed by the <a href=\"https://bleach.readthedocs.io/\" rel=\"nofollow\">Bleach</a> sanitizer. You can do that using the <code>\"extra_tags\"</code> key, and you can whitelist additional HTML attributes using <code>\"extra_attrs\"</code>. See <a href=\"https://bleach.readthedocs.io/en/latest/clean.html#allowed-tags-tags\" rel=\"nofollow\">the Bleach documentation</a> for more information on this.</p>\n<p>Here's how to enable support for <a href=\"https://python-markdown.github.io/extensions/tables/\" rel=\"nofollow\">Markdown tables</a>:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"datasette-render-markdown\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"extensions\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"tables\"</span><span class=\"p\">],</span>\n            <span class=\"nt\">\"extra_tags\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"table\"</span><span class=\"p\">,</span> <span class=\"s2\">\"thead\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tr\"</span><span class=\"p\">,</span> <span class=\"s2\">\"th\"</span><span class=\"p\">,</span> <span class=\"s2\">\"td\"</span><span class=\"p\">,</span> <span class=\"s2\">\"tbody\"</span><span class=\"p\">],</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>GitHub-Flavored Markdown</h3>\n<p>Enabling <a href=\"https://help.github.com/en/github/writing-on-github\" rel=\"nofollow\">GitHub-Flavored Markdown</a> (useful for if you are working with data imported from GitHub using <a href=\"https://github.com/dogsheep/github-to-sqlite\" rel=\"nofollow\">github-to-sqlite</a>) is a little more complicated.</p>\n<p>First, you will need to install the <a href=\"https://py-gfm.readthedocs.io\" rel=\"nofollow\">py-gfm</a> package:</p>\n<pre><code>$ pip install py-gfm\n</code></pre>\n<p>Note that <code>py-gfm</code> has <a href=\"https://github.com/Zopieux/py-gfm/issues/13\" rel=\"nofollow\">a bug</a> that causes it to pin to <code>Markdown&lt;3.0</code> - so if you are using it you should install it <em>before</em> installing <code>datasette-render-markdown</code> to ensure you get a compatibly version of that dependency.</p>\n<p>Now you can configure it like this. Note that the extension name is <code>mdx_gfm:GithubFlavoredMarkdownExtension</code> and you need to whitelist several extra HTML tags and attributes:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"plugins\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"datasette-render-markdown\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"extra_tags\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"img\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"hr\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"br\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"details\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"summary\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"input\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"nt\">\"extra_attrs\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"nt\">\"input\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"s2\">\"type\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"disabled\"</span><span class=\"p\">,</span>\n                    <span class=\"s2\">\"checked\"</span>\n                <span class=\"p\">],</span>\n                <span class=\"nt\">\"img\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"s2\">\"src\"</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">},</span>\n            <span class=\"nt\">\"extensions\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"mdx_gfm:GithubFlavoredMarkdownExtension\"</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The <code>&lt;input type=\"\" checked disabled&gt;</code> attributes are needed to support rendering checkboxes in issue descriptions.</p>\n<h2>Markdown in templates</h2>\n<p>The plugin also adds a new template function: <code>render_markdown(value)</code>. You can use this in your templates like so:</p>\n<pre><span class=\"cp\">{{</span> <span class=\"nv\">render_markdown</span><span class=\"o\">(</span><span class=\"s2\">\"\"\"</span>\n<span class=\"s2\"># This is markdown</span>\n\n<span class=\"s2\">* One</span>\n<span class=\"s2\">* Two</span>\n<span class=\"s2\">* Three</span>\n<span class=\"s2\">\"\"\"</span><span class=\"o\">)</span> <span class=\"cp\">}}</span>\n</pre>\n<p>You can load additional extensions and whitelist tags by passing extra arguments to the function like this:</p>\n<pre><span class=\"cp\">{{</span> <span class=\"nv\">render_markdown</span><span class=\"o\">(</span><span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">## Markdown table</span>\n\n<span class=\"s2\">First Header  | Second Header</span>\n<span class=\"s2\">------------- | -------------</span>\n<span class=\"s2\">Content Cell  | Content Cell</span>\n<span class=\"s2\">Content Cell  | Content Cell</span>\n<span class=\"s2\">\"\"\"</span><span class=\"o\">,</span> <span class=\"nv\">extensions</span><span class=\"o\">=[</span><span class=\"s2\">\"tables\"</span><span class=\"o\">],</span>\n    <span class=\"nv\">extra_tags</span><span class=\"o\">=[</span><span class=\"s2\">\"table\"</span><span class=\"o\">,</span> <span class=\"s2\">\"thead\"</span><span class=\"o\">,</span> <span class=\"s2\">\"tr\"</span><span class=\"o\">,</span> <span class=\"s2\">\"th\"</span><span class=\"o\">,</span> <span class=\"s2\">\"td\"</span><span class=\"o\">,</span> <span class=\"s2\">\"tbody\"</span><span class=\"o\">]))</span> <span class=\"cp\">}}</span>\n</pre>\n\n          </div>"}, "last_serial": 7150311, "releases": {"0.1a0": [{"comment_text": "", "digests": {"md5": "0cd2b4305e410de8dcc2f280c92d8bd2", "sha256": "d08cf0abfb35c771af121b444a32f81cead8158a0fb256e2c44b9cc3382306c6"}, "downloads": -1, "filename": "datasette_render_markdown-0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "0cd2b4305e410de8dcc2f280c92d8bd2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6750, "upload_time": "2019-11-09T23:44:26", "upload_time_iso_8601": "2019-11-09T23:44:26.624951Z", "url": "https://files.pythonhosted.org/packages/be/29/3514dda7862dc9dc165dd750f393d1e0479046ccd26b8ab42ba7bef6a6f3/datasette_render_markdown-0.1a0-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e86e1aada70a51a25c8cc6c807b5465b", "sha256": "31bb7b7f26d0236ba77bbebee2856cc0a3ed04118927c94e0d903ca886ed162e"}, "downloads": -1, "filename": "datasette_render_markdown-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e86e1aada70a51a25c8cc6c807b5465b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6884, "upload_time": "2019-11-15T05:35:50", "upload_time_iso_8601": "2019-11-15T05:35:50.663234Z", "url": "https://files.pythonhosted.org/packages/ff/5d/9209006e83119a0aca51f2ced3943151b2ffb7118511bee2196388f7963b/datasette_render_markdown-0.2-py3-none-any.whl", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "8711316ae4677781b71d91b28d7a175f", "sha256": "fbaa15a9537a75b7d71c49edafc9e6e640b1d82de6aacb963c21ba5d150f2f72"}, "downloads": -1, "filename": "datasette_render_markdown-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8711316ae4677781b71d91b28d7a175f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7632, "upload_time": "2020-03-22T23:17:09", "upload_time_iso_8601": "2020-03-22T23:17:09.438755Z", "url": "https://files.pythonhosted.org/packages/2a/62/cf71f3c28f1424a5cedcc570841482e6025e0126cca7cb9c895422e7302a/datasette_render_markdown-1.0-py3-none-any.whl", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "2aac2a547086734d841103feb8a25887", "sha256": "5dd0e83c76a68923a733d59c5d9b5a87a8d50043ea79fa2f51b4b9fc11340ca6"}, "downloads": -1, "filename": "datasette_render_markdown-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2aac2a547086734d841103feb8a25887", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8557, "upload_time": "2020-03-24T19:49:11", "upload_time_iso_8601": "2020-03-24T19:49:11.397771Z", "url": "https://files.pythonhosted.org/packages/ec/2f/df8b53775e9ab4df0a479de0ca73916a8811567a3dc3fe0c490955f7a6db/datasette_render_markdown-1.1-py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "d7841f3befe363e8f5389c659b3c86b4", "sha256": "ed95b6b21cbdce7e139a5332d160cab7a4f0b934a315f510c03fc485cd001222"}, "downloads": -1, "filename": "datasette_render_markdown-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7841f3befe363e8f5389c659b3c86b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8603, "upload_time": "2020-03-24T20:02:38", "upload_time_iso_8601": "2020-03-24T20:02:38.354304Z", "url": "https://files.pythonhosted.org/packages/0d/8e/c9ca5225ad83680cd672aeb3e620b2adf56383c86d0cb9487654904c5df0/datasette_render_markdown-1.1.1-py3-none-any.whl", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "593fc36bd7fc60b56ccc7a5d0a6f28f0", "sha256": "d48e9a60074555e9ce0f8944af733a52a9837d60dee7c026820e83ef89c6db17"}, "downloads": -1, "filename": "datasette_render_markdown-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "593fc36bd7fc60b56ccc7a5d0a6f28f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8747, "upload_time": "2020-05-02T08:34:07", "upload_time_iso_8601": "2020-05-02T08:34:07.053628Z", "url": "https://files.pythonhosted.org/packages/35/a1/a415df0f311db5beb8af851215663de2122ef2f97988a934aa02aeb2d75f/datasette_render_markdown-1.1.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "593fc36bd7fc60b56ccc7a5d0a6f28f0", "sha256": "d48e9a60074555e9ce0f8944af733a52a9837d60dee7c026820e83ef89c6db17"}, "downloads": -1, "filename": "datasette_render_markdown-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "593fc36bd7fc60b56ccc7a5d0a6f28f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8747, "upload_time": "2020-05-02T08:34:07", "upload_time_iso_8601": "2020-05-02T08:34:07.053628Z", "url": "https://files.pythonhosted.org/packages/35/a1/a415df0f311db5beb8af851215663de2122ef2f97988a934aa02aeb2d75f/datasette_render_markdown-1.1.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:40:11 2020"}