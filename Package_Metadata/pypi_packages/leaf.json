{"info": {"author": "Roman Koblov", "author_email": "hello@romankoblov.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "# Leaf\n\n\n[![image](https://travis-ci.org/romankoblov/leaf.png?branch=master)](https://travis-ci.org/romankoblov/leaf)\n[![Coverage Status](https://coveralls.io/repos/github/romankoblov/leaf/badge.svg?branch=master)](https://coveralls.io/github/romankoblov/leaf?branch=master)\n[![Downloads](https://img.shields.io/pypi/dm/Leaf.svg)](https://pypi.python.org/pypi/Leaf/)\n[![Latest Version](https://img.shields.io/pypi/v/leaf.svg)](https://pypi.python.org/pypi/leaf/)\n[![License](https://img.shields.io/pypi/l/Leaf.svg)](https://pypi.python.org/pypi/Leaf/)\n\nWhat is this?\n=============\n\nThis is a simple wrapper around [lxml](http://lxml.de/) which adds some\nnice features to make working with lxml better. This library covers all\nmy needs in HTML parsing.\n\nDependencies\n============\n\n[lxml](http://lxml.de/) obviously :3\n\nFeatures\n========\n\n-   Nice jquery-like CSS selectors\n-   Simple access to element attributes\n-   Easy way to convert HTML to other formats (bbcode, markdown, etc.)\n-   A few nice functions for working with text\n-   And, of course, all original features of lxml\n\nDescription\n===========\n\nThe main function of the module (for my purposes) is `leaf.parse`. This\nfunction takes an HTML string as argument, and returns a `leaf.Parser`\nobject, which wraps an lxml object.\n\nWith this object you can do anything you want, for example:\n\n    document = leaf.parse(sample)\n    # get the links from the DIV with id 'menu' using CSS selectors\n    links = document('div#menu a')\n\nOr you can do this:\n\n    # get first link or return None\n    link = document.get('div#menu a')\n\nAnd you can get attributes from these results like this:\n\n    print link.onclick\n\nYou can also use standard lxml methods like `object.xpath`, and they\nreturn results as `leaf.Parser` objects.\n\nMy favorite feature is parsing HTML into bbcode (markdown, etc.):\n\n    # Let's define simple formatter, which passes text\n    # and wraps links into [url][/url] (like bbcode)\n    def code_formatter(element, children):\n        # Replace <br> tag with line break\n        if element.tag == 'br':\n            return '\\n'\n        # Wrap links into [url][/url]\n        if element.tag == 'a':\n            return u\"[url=link}]{text}[/url]\".format(link=element.href, text=children)\n        # Return children only for other elements.\n        if children:\n            return children\n\nThis function will be recursively called with element and children (this\nis string with children parsing result).\n\nSo, let\\'s call this parser on some `leaf.Parser` object:\n\n```py\ndocument.parse(code_formatter)\n```\n\nMore detailed examples available in the tests.\n\nFinally, this library has some nice functions for working with text:\n\n| Name             | Description                              |\n| ---------------- | ---------------------------------------- |\n| to_unicode       | Convert string to unicode string         |\n| strip_accents    | Strip accents from a string              |\n| strip_symbols    | Strip ugly unicode symbols from a string |\n| strip_spaces     | Strip excess spaces from a string        |\n| strip_linebreaks | Strip excess line breaks from a string   |\n# Change log\n\n## 1.0.7\n> - Fix badges in README.md\n> - cleanup CHANGES.md\n\n## 1.0.6\n> - Fix installation script on LICENSE file\n\n## 1.0.4\n> - Convert documentation to Markdown\n> - Add support for universal wheel\n\n## 1.0.1 \n> - 100% test coverage \n> - fixed bug in result wrapping (etree.\\_Element has \\_\\_iter\\_\\_ too!)\n\n## 1.0\n> -   add python3 support\n> -   first production release\n\n## 0.4.4\n> -   fix inner\\_html method\n> -   added \\*\\*kwargs to the parse function, added inner\\_html method\n>     to the Parser class\n> -   cssselect in deps\n\n## 0.4.2\n> -   Node attribute modification via node.href = \\'/blah\\'\n> -   Custom default value for get: document.get(selector, default=None)\n> -   Get element by index: document.get(selector, index)\n\n## 0.4.1\n> -   bool(node) returns True if element exists and False if element is\n>     None\n\n## 0.4\n> -   First public version\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/penpen/leaf", "keywords": "html,parsing,web scrapping", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "leaf", "package_url": "https://pypi.org/project/leaf/", "platform": "", "project_url": "https://pypi.org/project/leaf/", "project_urls": {"Homepage": "https://github.com/penpen/leaf"}, "release_url": "https://pypi.org/project/leaf/1.0.7/", "requires_dist": ["setuptools", "lxml", "cssselect", "six"], "requires_python": "", "summary": "Simple Python library for HTML parsing", "version": "1.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Leaf</h1>\n<p><a href=\"https://travis-ci.org/romankoblov/leaf\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/761649c3a032c3413c709ae5b4116f9c2d93f3b1/68747470733a2f2f7472617669732d63692e6f72672f726f6d616e6b6f626c6f762f6c6561662e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/romankoblov/leaf?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aac8753e60525ac48e9cccbd28c9ce6311b26ce1/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f726f6d616e6b6f626c6f762f6c6561662f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/Leaf/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac6e49ee63fa42f04d9f6569162214f322de750d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f4c6561662e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/leaf/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2e6030d7979f4fc682fcea238645c85beefd465/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c6561662e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/Leaf/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/75ca1b679403a222447e6d6685a6aa1170d96296/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f4c6561662e737667\"></a></p>\n<h1>What is this?</h1>\n<p>This is a simple wrapper around <a href=\"http://lxml.de/\" rel=\"nofollow\">lxml</a> which adds some\nnice features to make working with lxml better. This library covers all\nmy needs in HTML parsing.</p>\n<h1>Dependencies</h1>\n<p><a href=\"http://lxml.de/\" rel=\"nofollow\">lxml</a> obviously :3</p>\n<h1>Features</h1>\n<ul>\n<li>Nice jquery-like CSS selectors</li>\n<li>Simple access to element attributes</li>\n<li>Easy way to convert HTML to other formats (bbcode, markdown, etc.)</li>\n<li>A few nice functions for working with text</li>\n<li>And, of course, all original features of lxml</li>\n</ul>\n<h1>Description</h1>\n<p>The main function of the module (for my purposes) is <code>leaf.parse</code>. This\nfunction takes an HTML string as argument, and returns a <code>leaf.Parser</code>\nobject, which wraps an lxml object.</p>\n<p>With this object you can do anything you want, for example:</p>\n<pre><code>document = leaf.parse(sample)\n# get the links from the DIV with id 'menu' using CSS selectors\nlinks = document('div#menu a')\n</code></pre>\n<p>Or you can do this:</p>\n<pre><code># get first link or return None\nlink = document.get('div#menu a')\n</code></pre>\n<p>And you can get attributes from these results like this:</p>\n<pre><code>print link.onclick\n</code></pre>\n<p>You can also use standard lxml methods like <code>object.xpath</code>, and they\nreturn results as <code>leaf.Parser</code> objects.</p>\n<p>My favorite feature is parsing HTML into bbcode (markdown, etc.):</p>\n<pre><code># Let's define simple formatter, which passes text\n# and wraps links into [url][/url] (like bbcode)\ndef code_formatter(element, children):\n    # Replace &lt;br&gt; tag with line break\n    if element.tag == 'br':\n        return '\\n'\n    # Wrap links into [url][/url]\n    if element.tag == 'a':\n        return u\"[url=link}]{text}[/url]\".format(link=element.href, text=children)\n    # Return children only for other elements.\n    if children:\n        return children\n</code></pre>\n<p>This function will be recursively called with element and children (this\nis string with children parsing result).</p>\n<p>So, let's call this parser on some <code>leaf.Parser</code> object:</p>\n<pre><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">code_formatter</span><span class=\"p\">)</span>\n</pre>\n<p>More detailed examples available in the tests.</p>\n<p>Finally, this library has some nice functions for working with text:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>to_unicode</td>\n<td>Convert string to unicode string</td>\n</tr>\n<tr>\n<td>strip_accents</td>\n<td>Strip accents from a string</td>\n</tr>\n<tr>\n<td>strip_symbols</td>\n<td>Strip ugly unicode symbols from a string</td>\n</tr>\n<tr>\n<td>strip_spaces</td>\n<td>Strip excess spaces from a string</td>\n</tr>\n<tr>\n<td>strip_linebreaks</td>\n<td>Strip excess line breaks from a string</td>\n</tr></tbody></table>\n<h1>Change log</h1>\n<h2>1.0.7</h2>\n<blockquote>\n<ul>\n<li>Fix badges in README.md</li>\n<li>cleanup CHANGES.md</li>\n</ul>\n</blockquote>\n<h2>1.0.6</h2>\n<blockquote>\n<ul>\n<li>Fix installation script on LICENSE file</li>\n</ul>\n</blockquote>\n<h2>1.0.4</h2>\n<blockquote>\n<ul>\n<li>Convert documentation to Markdown</li>\n<li>Add support for universal wheel</li>\n</ul>\n</blockquote>\n<h2>1.0.1</h2>\n<blockquote>\n<ul>\n<li>100% test coverage</li>\n<li>fixed bug in result wrapping (etree._Element has __iter__ too!)</li>\n</ul>\n</blockquote>\n<h2>1.0</h2>\n<blockquote>\n<ul>\n<li>add python3 support</li>\n<li>first production release</li>\n</ul>\n</blockquote>\n<h2>0.4.4</h2>\n<blockquote>\n<ul>\n<li>fix inner_html method</li>\n<li>added **kwargs to the parse function, added inner_html method\nto the Parser class</li>\n<li>cssselect in deps</li>\n</ul>\n</blockquote>\n<h2>0.4.2</h2>\n<blockquote>\n<ul>\n<li>Node attribute modification via node.href = '/blah'</li>\n<li>Custom default value for get: document.get(selector, default=None)</li>\n<li>Get element by index: document.get(selector, index)</li>\n</ul>\n</blockquote>\n<h2>0.4.1</h2>\n<blockquote>\n<ul>\n<li>bool(node) returns True if element exists and False if element is\nNone</li>\n</ul>\n</blockquote>\n<h2>0.4</h2>\n<blockquote>\n<ul>\n<li>First public version</li>\n</ul>\n</blockquote>\n\n          </div>"}, "last_serial": 6519768, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "3b3491cb8e3a571a9c5f22c7cef5649f", "sha256": "5ce9d3fd142c0c083dd4dd66f2bea127ce24b3c9ab76a043b0a4b2b848506afb"}, "downloads": -1, "filename": "leaf-0.4.tar.gz", "has_sig": false, "md5_digest": "3b3491cb8e3a571a9c5f22c7cef5649f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4750, "upload_time": "2011-03-08T21:00:07", "upload_time_iso_8601": "2011-03-08T21:00:07.888021Z", "url": "https://files.pythonhosted.org/packages/c6/74/6d26008be3be905abe8364a2d02fa007e713c51c1a755a9929f589a53caf/leaf-0.4.tar.gz", "yanked": false}], "0.4.1": [], "0.4.2": [{"comment_text": "", "digests": {"md5": "8a7ed906402e2ee3d16852b5f6e1f942", "sha256": "6aa0cc488be4d06a2c57ccc18377848316a47e3a2af54ef2db7c3c0770847f53"}, "downloads": -1, "filename": "leaf-0.4.2.tar.gz", "has_sig": false, "md5_digest": "8a7ed906402e2ee3d16852b5f6e1f942", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4921, "upload_time": "2011-05-15T14:05:04", "upload_time_iso_8601": "2011-05-15T14:05:04.126662Z", "url": "https://files.pythonhosted.org/packages/17/c1/0187a41ccb6c73cd8a33d7df6a04868ed7052ef465b50161c55a73e0e625/leaf-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "fc190ca703f0c4da796ee6e727eb2553", "sha256": "8babfd710db8485623b3bef157414e6ba53f3a59789fb05e229b83b016635480"}, "downloads": -1, "filename": "leaf-0.4.3.tar.gz", "has_sig": false, "md5_digest": "fc190ca703f0c4da796ee6e727eb2553", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4997, "upload_time": "2013-01-18T12:05:06", "upload_time_iso_8601": "2013-01-18T12:05:06.697772Z", "url": "https://files.pythonhosted.org/packages/30/bd/23549ee8c56cbf2bc91f05104b7e04c75b13a85cf296492035986b866421/leaf-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "0082c70f6670e802ab9301d582087b15", "sha256": "9c8ff5c54c2b34e8e70dec76669f971936411fad4cf59e50ea44ca2e814c4574"}, "downloads": -1, "filename": "leaf-0.4.4.tar.gz", "has_sig": false, "md5_digest": "0082c70f6670e802ab9301d582087b15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4991, "upload_time": "2013-01-18T12:05:22", "upload_time_iso_8601": "2013-01-18T12:05:22.917579Z", "url": "https://files.pythonhosted.org/packages/66/52/e37ab7470d75dcb5cc6bf44c3f6fbba46a9e1243f4bd80a5974686dd60cb/leaf-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "37527a859571c13c24c4cc4ee3b4c804", "sha256": "60e469da0ea1b195816f8ef5d78966c3475a15ce8e11668a01d1ecf28aa9c84d"}, "downloads": -1, "filename": "leaf-0.4.5.tar.gz", "has_sig": false, "md5_digest": "37527a859571c13c24c4cc4ee3b4c804", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5060, "upload_time": "2013-08-16T09:44:13", "upload_time_iso_8601": "2013-08-16T09:44:13.867508Z", "url": "https://files.pythonhosted.org/packages/81/0a/6f13a08e3ff0fc24832abc4f958626254b04c77ac7bbf2ca0aced46979fc/leaf-0.4.5.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "b26df96abc209313ac10249edede6daa", "sha256": "7fd309af6e812eba3951875ee9d2ff15a28c49db5c288b9d9bce94bd4fabb051"}, "downloads": -1, "filename": "leaf-1.0.tar.gz", "has_sig": false, "md5_digest": "b26df96abc209313ac10249edede6daa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5373, "upload_time": "2014-03-10T18:42:54", "upload_time_iso_8601": "2014-03-10T18:42:54.824107Z", "url": "https://files.pythonhosted.org/packages/c0/1e/3aed1d5eb572c7c9dfe57fe58aa76dea03521a790674d833b6b7593833c0/leaf-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0176e7f21347743a14c2aa5bdeb8fc2e", "sha256": "8525ee519931f6707985d2e46b26827d416a849da1951d06b0063b01292eb6a8"}, "downloads": -1, "filename": "leaf-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0176e7f21347743a14c2aa5bdeb8fc2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5501, "upload_time": "2014-03-12T17:54:07", "upload_time_iso_8601": "2014-03-12T17:54:07.490654Z", "url": "https://files.pythonhosted.org/packages/3f/f2/aa32f400d8ea0cc3051916bee9b8e682547e165ec9120107b50f9c5c51be/leaf-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b927214615296fe961600d919a8eb0a9", "sha256": "5976ea6faac1155cd3636a831be22c364372c65c23d312691630bd456f33b478"}, "downloads": -1, "filename": "leaf-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b927214615296fe961600d919a8eb0a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5499, "upload_time": "2014-03-13T10:18:17", "upload_time_iso_8601": "2014-03-13T10:18:17.777856Z", "url": "https://files.pythonhosted.org/packages/ef/20/2f45dfc965f2bdbaa534c9c6e877781ffd06f3f9abbd11b7a9e3e5dec708/leaf-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "3ddbb6aa229ced930ab700845eb1c110", "sha256": "582ad3a2a5a0e2d650562386b37bf4f64efd6192641f741214ed50e0cf07ef33"}, "downloads": -1, "filename": "leaf-1.0.3.tar.gz", "has_sig": false, "md5_digest": "3ddbb6aa229ced930ab700845eb1c110", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5698, "upload_time": "2014-09-17T17:15:29", "upload_time_iso_8601": "2014-09-17T17:15:29.695154Z", "url": "https://files.pythonhosted.org/packages/fc/c0/156fd0cd8c074c7440dbfa36e25b6255cb3d3533601fc2d44ffe4079a05d/leaf-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "d144bb5e7b4a24b6b681ed6dc6db4dd2", "sha256": "f45d054a193eca55280108eda728e234704e624509c67ea632330f71002a33da"}, "downloads": -1, "filename": "leaf-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d144bb5e7b4a24b6b681ed6dc6db4dd2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8388, "upload_time": "2020-01-25T19:31:47", "upload_time_iso_8601": "2020-01-25T19:31:47.912112Z", "url": "https://files.pythonhosted.org/packages/ef/5b/461fdcd21834f811cb34e5b48d8c659da4fbe06fe8cef2c1d9d120801044/leaf-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69b8c6ced82fd2b5e4124a854817dbe1", "sha256": "ca484445b3a4de1e17558eceb649da7fd5031b8d9f5730fbc0bdf6464feea60a"}, "downloads": -1, "filename": "leaf-1.0.4.tar.gz", "has_sig": false, "md5_digest": "69b8c6ced82fd2b5e4124a854817dbe1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5818, "upload_time": "2020-01-25T19:31:49", "upload_time_iso_8601": "2020-01-25T19:31:49.733901Z", "url": "https://files.pythonhosted.org/packages/9a/f5/99301278ac4483e44769b9c074e5fd5a1279ad06e03f9b53a538a986dd39/leaf-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "f43db704ed04e039cac4d24ae2a0a3a3", "sha256": "5d9f90229f91430c61a050886034598ba42dd7aa92455adbc1ca564ef4c99e12"}, "downloads": -1, "filename": "leaf-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f43db704ed04e039cac4d24ae2a0a3a3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8388, "upload_time": "2020-01-25T19:35:16", "upload_time_iso_8601": "2020-01-25T19:35:16.352870Z", "url": "https://files.pythonhosted.org/packages/c8/d3/5008a93b27658020bd7237019c7a0669687a8a2f92246131a26bfe0766a5/leaf-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "103d3ffdefeca6cf125ebbb00e8bb7b0", "sha256": "95f7aea2b69eb7ebb98e4c3d7c217685db751b64e817a5e56b7ccb21ddc31b2e"}, "downloads": -1, "filename": "leaf-1.0.5.tar.gz", "has_sig": false, "md5_digest": "103d3ffdefeca6cf125ebbb00e8bb7b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5832, "upload_time": "2020-01-25T19:35:19", "upload_time_iso_8601": "2020-01-25T19:35:19.165556Z", "url": "https://files.pythonhosted.org/packages/03/75/87344c114ca2f8cd7adf1c780e639e5268ea61e63c7334419f7b732b1f60/leaf-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "d537321304cdd994ceae0f6c29d7c4ef", "sha256": "d1546cff8f53fa0b732c0a46595daf82c8a8ff8afe30a68de0aad6ffe3a72be3"}, "downloads": -1, "filename": "leaf-1.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d537321304cdd994ceae0f6c29d7c4ef", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5834, "upload_time": "2020-01-25T19:45:53", "upload_time_iso_8601": "2020-01-25T19:45:53.091866Z", "url": "https://files.pythonhosted.org/packages/7c/35/d6271ed90f98bff545be962256fff3d8ccea3739f867e8188bdb6982d932/leaf-1.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "269fab36380000b5932b0acd1e700fd0", "sha256": "535323a47cad942f7f328175d3cbbb92d8582e7dffc25f532cb85246ed4a39ec"}, "downloads": -1, "filename": "leaf-1.0.6.tar.gz", "has_sig": false, "md5_digest": "269fab36380000b5932b0acd1e700fd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5789, "upload_time": "2020-01-25T19:45:54", "upload_time_iso_8601": "2020-01-25T19:45:54.987525Z", "url": "https://files.pythonhosted.org/packages/06/54/3af378d5e8543b2a71fc411b15df4aa511e471ed65ee4d8d2ccd71352f4c/leaf-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "77b50f83d8d0b5dbbe59423c26c1e712", "sha256": "d3ea38bf05e1cb4caee373192fc30c53a09c7890f2a000baf7b473df0a989910"}, "downloads": -1, "filename": "leaf-1.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "77b50f83d8d0b5dbbe59423c26c1e712", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5855, "upload_time": "2020-01-25T19:51:12", "upload_time_iso_8601": "2020-01-25T19:51:12.220845Z", "url": "https://files.pythonhosted.org/packages/01/05/dc58afe5bd51f3016a1329f7e891f77daf5b63abe518643be1b8cd9c4623/leaf-1.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58df91645a06b97eda494758de834fa5", "sha256": "38c7fdef9de1a67961794d981260cd2dc5c16bb705aa11c746565f9b52856aa9"}, "downloads": -1, "filename": "leaf-1.0.7.tar.gz", "has_sig": false, "md5_digest": "58df91645a06b97eda494758de834fa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5782, "upload_time": "2020-01-25T19:51:14", "upload_time_iso_8601": "2020-01-25T19:51:14.178672Z", "url": "https://files.pythonhosted.org/packages/18/a4/5c8c5caac9e03ea33b2384d16f5167c474cd7194cb2d7718de1d4d6156c4/leaf-1.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "77b50f83d8d0b5dbbe59423c26c1e712", "sha256": "d3ea38bf05e1cb4caee373192fc30c53a09c7890f2a000baf7b473df0a989910"}, "downloads": -1, "filename": "leaf-1.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "77b50f83d8d0b5dbbe59423c26c1e712", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5855, "upload_time": "2020-01-25T19:51:12", "upload_time_iso_8601": "2020-01-25T19:51:12.220845Z", "url": "https://files.pythonhosted.org/packages/01/05/dc58afe5bd51f3016a1329f7e891f77daf5b63abe518643be1b8cd9c4623/leaf-1.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58df91645a06b97eda494758de834fa5", "sha256": "38c7fdef9de1a67961794d981260cd2dc5c16bb705aa11c746565f9b52856aa9"}, "downloads": -1, "filename": "leaf-1.0.7.tar.gz", "has_sig": false, "md5_digest": "58df91645a06b97eda494758de834fa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5782, "upload_time": "2020-01-25T19:51:14", "upload_time_iso_8601": "2020-01-25T19:51:14.178672Z", "url": "https://files.pythonhosted.org/packages/18/a4/5c8c5caac9e03ea33b2384d16f5167c474cd7194cb2d7718de1d4d6156c4/leaf-1.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:21 2020"}