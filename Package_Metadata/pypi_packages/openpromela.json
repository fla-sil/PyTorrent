{"info": {"author": "Ioannis Filippidis", "author_email": "jfilippidis@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status][build_img]][travis]\n[![Coverage Status][coverage]][coveralls]\n\n\nAbout\n=====\n\nA synthesizer from open Promela specifications. It:\n\n- translates open Promela to linear temporal logic (LTL)\n- compiles the LTL formula to an implementation using the GR(1) game solver [`omega.games.gr1`](https://github.com/johnyf/omega/blob/master/omega/games/gr1.py)\n- dumps a transition relation that implements the open Promela specification.\n\nThe language and implementation are documented in:\n\nFilippidis I., Murray R.M., Holzmann G.J.<br>\n  [A multi-paradigm language for reactive synthesis](http://dx.doi.org/10.4204/EPTCS.202.6)<br>\n  4th Workshop on Synthesis (SYNT) 2015<br>\n  Electronic Proceedings in Theoretical Computer Science (EPTCS)<br>\n  vol.202, pp.73-97, 2016\n\nFilippidis I., Murray R.M., Holzmann G.J.<br>\n  [Synthesis from multi-paradigm specifications](http://resolver.caltech.edu/CaltechCDSTR:2015.003)<br>\n  California Institute of Technology, Pasadena, CA, 2015<br>\n  CDSTR:2015.003\n\n\nUsage\n=====\n\nThe package can be used both as a library and from the command line. A script named `ospin` is created as entry point. It is placed where `setuptools` installs new executables, e.g., whre `python` itself resides. To learn how to use the script, invoke it with:\n\n```\nospin --help\n```\n\n\nInstallation\n============\n\nUse `pip` for `openpromela` itself:\n\n```\npip install openpromela\n```\n\nPure Python dependencies suffice, unless you have a demanding problem.\nIn that case, build `dd.cudd` to interface to CUDD.\n\n\nLicense\n=======\n[BSD-3](http://opensource.org/licenses/BSD-3-Clause), see `LICENSE` file.\n\n\n[build_img]: https://travis-ci.org/johnyf/openpromela.svg?branch=master\n[travis]: https://travis-ci.org/johnyf/openpromela\n[coverage]: https://coveralls.io/repos/johnyf/openpromela/badge.svg?branch=master\n[coveralls]: https://coveralls.io/r/johnyf/openpromela?branch=master", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/johnyf/openpromela", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "openpromela", "package_url": "https://pypi.org/project/openpromela/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/openpromela/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/johnyf/openpromela"}, "release_url": "https://pypi.org/project/openpromela/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Generalized reactive(1) synthesis from Promela specifications.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>[![Build Status][build_img]][travis]\n[![Coverage Status][coverage]][coveralls]</p>\n<div id=\"about\">\n<h2>About</h2>\n<p>A synthesizer from open Promela specifications. It:</p>\n<ul>\n<li>translates open Promela to linear temporal logic (LTL)</li>\n<li>compiles the LTL formula to an implementation using the GR(1) game solver [<cite>omega.games.gr1</cite>](<a href=\"https://github.com/johnyf/omega/blob/master/omega/games/gr1.py\" rel=\"nofollow\">https://github.com/johnyf/omega/blob/master/omega/games/gr1.py</a>)</li>\n<li>dumps a transition relation that implements the open Promela specification.</li>\n</ul>\n<p>The language and implementation are documented in:</p>\n<dl>\n<dt>Filippidis I., Murray R.M., Holzmann G.J.&lt;br&gt;</dt>\n<dd>[A multi-paradigm language for reactive synthesis](<a href=\"http://dx.doi.org/10.4204/EPTCS.202.6\" rel=\"nofollow\">http://dx.doi.org/10.4204/EPTCS.202.6</a>)&lt;br&gt;\n4th Workshop on Synthesis (SYNT) 2015&lt;br&gt;\nElectronic Proceedings in Theoretical Computer Science (EPTCS)&lt;br&gt;\nvol.202, pp.73-97, 2016</dd>\n<dt>Filippidis I., Murray R.M., Holzmann G.J.&lt;br&gt;</dt>\n<dd>[Synthesis from multi-paradigm specifications](<a href=\"http://resolver.caltech.edu/CaltechCDSTR:2015.003\" rel=\"nofollow\">http://resolver.caltech.edu/CaltechCDSTR:2015.003</a>)&lt;br&gt;\nCalifornia Institute of Technology, Pasadena, CA, 2015&lt;br&gt;\nCDSTR:2015.003</dd>\n</dl>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The package can be used both as a library and from the command line. A script named <cite>ospin</cite> is created as entry point. It is placed where <cite>setuptools</cite> installs new executables, e.g., whre <cite>python</cite> itself resides. To learn how to use the script, invoke it with:</p>\n<p><tt>`\nospin <span class=\"pre\">--help</span>\n`</tt></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Use <cite>pip</cite> for <cite>openpromela</cite> itself:</p>\n<p><tt>`\npip install openpromela\n`</tt></p>\n<p>Pure Python dependencies suffice, unless you have a demanding problem.\nIn that case, build <cite>dd.cudd</cite> to interface to CUDD.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>[BSD-3](<a href=\"http://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\">http://opensource.org/licenses/BSD-3-Clause</a>), see <cite>LICENSE</cite> file.</p>\n<p>[build_img]: <a href=\"https://travis-ci.org/johnyf/openpromela.svg?branch=master\" rel=\"nofollow\">https://travis-ci.org/johnyf/openpromela.svg?branch=master</a>\n[travis]: <a href=\"https://travis-ci.org/johnyf/openpromela\" rel=\"nofollow\">https://travis-ci.org/johnyf/openpromela</a>\n[coverage]: <a href=\"https://coveralls.io/repos/johnyf/openpromela/badge.svg?branch=master\" rel=\"nofollow\">https://coveralls.io/repos/johnyf/openpromela/badge.svg?branch=master</a>\n[coveralls]: <a href=\"https://coveralls.io/r/johnyf/openpromela?branch=master\" rel=\"nofollow\">https://coveralls.io/r/johnyf/openpromela?branch=master</a></p>\n</div>\n\n          </div>"}, "last_serial": 1980320, "releases": {"0.0.1": [], "0.0.2": [{"comment_text": "", "digests": {"md5": "fbf99a7bef62dc1ddb5f45dc14d925e8", "sha256": "1ebe6983b1af957605c27bc023abad8177853e25566573b6d05184fe7c8675e3"}, "downloads": -1, "filename": "openpromela-0.0.2.tar.gz", "has_sig": false, "md5_digest": "fbf99a7bef62dc1ddb5f45dc14d925e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54283, "upload_time": "2015-10-09T00:15:58", "upload_time_iso_8601": "2015-10-09T00:15:58.875227Z", "url": "https://files.pythonhosted.org/packages/07/d8/ee25a528c386f480a7cb26949c59f0301ba8c2231513ae01ea5b85356f12/openpromela-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "fbf636c59143ab5ce3cd708cde6abb5c", "sha256": "72e5409fa3905c2f923456b0b56bb4028defaab048c280acb61b33c14854de12"}, "downloads": -1, "filename": "openpromela-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fbf636c59143ab5ce3cd708cde6abb5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54896, "upload_time": "2016-02-28T06:53:59", "upload_time_iso_8601": "2016-02-28T06:53:59.721164Z", "url": "https://files.pythonhosted.org/packages/9e/99/c8f0ec6bcab9ddfe7a811a860aff6d3a41923396129ca4b078eb089e2b2c/openpromela-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbf636c59143ab5ce3cd708cde6abb5c", "sha256": "72e5409fa3905c2f923456b0b56bb4028defaab048c280acb61b33c14854de12"}, "downloads": -1, "filename": "openpromela-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fbf636c59143ab5ce3cd708cde6abb5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54896, "upload_time": "2016-02-28T06:53:59", "upload_time_iso_8601": "2016-02-28T06:53:59.721164Z", "url": "https://files.pythonhosted.org/packages/9e/99/c8f0ec6bcab9ddfe7a811a860aff6d3a41923396129ca4b078eb089e2b2c/openpromela-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:40 2020"}