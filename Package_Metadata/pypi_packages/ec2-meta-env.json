{"info": {"author": "Tobias McNulty", "author_email": "tobias.mcnulty@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 6 - Mature", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "ec2-meta-env\n============\n\nA simple wrapper script to manifest EC2 instance metadata as environment\nvariables.\n\nInstalling ec2-meta-env\n=======================\n\nInstalling `ec2-meta-env` is as simple as::\n\n    pip install ec2-meta-env --upgrade\n\n\nUsing ec2-meta-env\n==================\n\nTo include EC2 instance meta data in your application's shell environment,\nwrap your shell command with the `ec2-meta-env` script and specify the\nenvironment variables you wish to use, e.g.::\n\n    ec2-meta-env -e local-ipv4 /path/to/my/app\n\nIn the above example, the value of `local-ipv4` will be accessible in the shell\nenvironment for `/path/to/my/app` under the variable name `EC2_LOCAL_IPV4`.\nEnvironment variable names are formed by prepending the meta API path with\n`EC2_`, uppercasing, and replacing all dashes and forward slashes with\nunderscores.\n\nOther options\n=============\n\nA complete list of options can be found by running::\n\n    ec2-meta-env --help\n\nWhy ec2-meta-env?\n=================\n\nEC2 provides instance metadata via `http://169.254.169.254/latest/meta-data/`.\nSometimes it's easier to use that information if it's available via environment\nvariables, for example, if your application's running inside a Docker container\non Amazon's Elastic Container Service (ECS). This project makes it possible to\ndo that without calling the EC2 instance meta data API manually.\n\n\nThanks and I hope you find ec2-meta-env helpful!\n\n~Tobias McNulty\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tobiasmcnulty/ec2-meta-env", "keywords": "Python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ec2-meta-env", "package_url": "https://pypi.org/project/ec2-meta-env/", "platform": "", "project_url": "https://pypi.org/project/ec2-meta-env/", "project_urls": {"Homepage": "https://github.com/tobiasmcnulty/ec2-meta-env"}, "release_url": "https://pypi.org/project/ec2-meta-env/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A simple package to manifest EC2 instance metadata as environment variables.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ec2-meta-env\">\n<h2>ec2-meta-env</h2>\n<p>A simple wrapper script to manifest EC2 instance metadata as environment\nvariables.</p>\n</div>\n<div id=\"installing-ec2-meta-env\">\n<h2>Installing ec2-meta-env</h2>\n<p>Installing <cite>ec2-meta-env</cite> is as simple as:</p>\n<pre>pip install ec2-meta-env --upgrade\n</pre>\n</div>\n<div id=\"using-ec2-meta-env\">\n<h2>Using ec2-meta-env</h2>\n<p>To include EC2 instance meta data in your application\u2019s shell environment,\nwrap your shell command with the <cite>ec2-meta-env</cite> script and specify the\nenvironment variables you wish to use, e.g.:</p>\n<pre>ec2-meta-env -e local-ipv4 /path/to/my/app\n</pre>\n<p>In the above example, the value of <cite>local-ipv4</cite> will be accessible in the shell\nenvironment for <cite>/path/to/my/app</cite> under the variable name <cite>EC2_LOCAL_IPV4</cite>.\nEnvironment variable names are formed by prepending the meta API path with\n<cite>EC2_</cite>, uppercasing, and replacing all dashes and forward slashes with\nunderscores.</p>\n</div>\n<div id=\"other-options\">\n<h2>Other options</h2>\n<p>A complete list of options can be found by running:</p>\n<pre>ec2-meta-env --help\n</pre>\n</div>\n<div id=\"why-ec2-meta-env\">\n<h2>Why ec2-meta-env?</h2>\n<p>EC2 provides instance metadata via <cite>http://169.254.169.254/latest/meta-data/</cite>.\nSometimes it\u2019s easier to use that information if it\u2019s available via environment\nvariables, for example, if your application\u2019s running inside a Docker container\non Amazon\u2019s Elastic Container Service (ECS). This project makes it possible to\ndo that without calling the EC2 instance meta data API manually.</p>\n<p>Thanks and I hope you find ec2-meta-env helpful!</p>\n<p>~Tobias McNulty</p>\n</div>\n\n          </div>"}, "last_serial": 2488539, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "6e9e3b5505dd41597c2427f334386fb0", "sha256": "7e45cf7cb5055fdb52b3a389270e0ad32ab8679e8f30718231029cb0ba37e13d"}, "downloads": -1, "filename": "ec2-meta-env-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6e9e3b5505dd41597c2427f334386fb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3756, "upload_time": "2016-11-28T21:56:00", "upload_time_iso_8601": "2016-11-28T21:56:00.973804Z", "url": "https://files.pythonhosted.org/packages/29/2b/911a3cfda5ec81ae5c80fee2a08870c64bde63755b8287180513695b2281/ec2-meta-env-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e9e3b5505dd41597c2427f334386fb0", "sha256": "7e45cf7cb5055fdb52b3a389270e0ad32ab8679e8f30718231029cb0ba37e13d"}, "downloads": -1, "filename": "ec2-meta-env-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6e9e3b5505dd41597c2427f334386fb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3756, "upload_time": "2016-11-28T21:56:00", "upload_time_iso_8601": "2016-11-28T21:56:00.973804Z", "url": "https://files.pythonhosted.org/packages/29/2b/911a3cfda5ec81ae5c80fee2a08870c64bde63755b8287180513695b2281/ec2-meta-env-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:05 2020"}