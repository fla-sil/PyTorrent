{"info": {"author": "Mike Spindel", "author_email": "mike@spindel.is", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python"], "description": "=============================================\n Palette - Easy Color Manipulation in Python\n=============================================\n\n:Authors:\n        Mike Spindel\n:Version: 0.2\n\nPalette makes it easy to perform simple operations on colors and to\nconvert between different color systems and representations.\n\n\nSample Usage\n============\n\nInitialize a color object using whatever representation is convenient::\n\n    >>> c = Color(\"#0a0bcc\")\n    >>> c = Color.from_rgb(255, 255, 255, a=0.5)\n    >>> c = Color(hls=(0.2, 0.1, 0.1))\n\nManipulate colors::\n\n    >>> a = Color(\"#aaaa00\")\n    >>> a.lighter()\n    >>> a.darker(amt=0.4)\n\nMeasure Colors::\n\n    >>> a = Color(\"#aaaa00\")\n    >>> b = Color(\"#000000\")\n    >>> a.w3_contrast_ratio(b)\n    >>> a.w3_contrast_test(b)\n    >>> a.luminance\n\nConvert Representations::\n\n    >>> a = Color(\"#aaaa00\")\n    >>> a.rgb8.r\n    170\n    >>> a.rgb8.r = 30\n    >>> tuple(a.rgb8)\n    (30.0, 170.0, 0.0)\n    >>> tuple(a.hls)\n    (0.30392156862745096, 0.3333333333333333, 1.0)\n    >>> str(a.hls)\n    'hls(0.30392156862745096, 0.3333333333333333, 1.0)'\n    >>> a.hex\n    '#1eaa00'\n    >>> a.css\n    'rgb(170, 170, 0)'\n\nConvert sRGB::\n\n    >>> a = Color(\"#aaaa00\")\n    >>> a.workspace\n    \"srgb\"\n    >>> a.rgb == a.srgb\n    True\n    >>> a.linear_rgb\n    {'r': 0.4019777798321958, 'b': 0.0, 'g': 0.4019777798321958}\n    >>> a.linear_rgb = (.2, .3, .3)\n    >>> a.rgb\n    (0.48452920448170694, 0.5838314900602575, 0.5838314900602575)\n\n\nWhere Does Palette Fit In?\n==========================\n\nThere already exist several good python libraries for manipulating\ncolor.  Perhaps the two most notable are Grapefruit and\npython-colormath.  Palette hopes to fill a niche somewhere between the\ntwo.\n\nWith respect to grapefruit, palette intends to have:\n\n- a simpler interface for common tasks\n- more sophistication with respect to RGB working spaces, illuminants,\n  etc.\n- PEP-8 compliance\n\nWith respect to python-colormath, palette intends to have:\n\n- a simpler interface for common tasks; potentially at the expense of\n  deep support for non-RGB colors.\n- more utilities that are primarily useful for web development\n- support for *fewer* colorspaces.  Palette isn't particularly\n  interested in completionism.\n- no dependency on numpy", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/deactivated/palette", "keywords": "color colorspace rgb hls hsl", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "palette", "package_url": "https://pypi.org/project/palette/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/palette/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/deactivated/palette"}, "release_url": "https://pypi.org/project/palette/0.2/", "requires_dist": null, "requires_python": null, "summary": "Easy color manipulation for Python.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Authors:</th>\n<td>Mike Spindel</td></tr>\n<tr><th>Version:</th>\n<td>0.2</td></tr>\n</tbody>\n</table>\n<p>Palette makes it easy to perform simple operations on colors and to\nconvert between different color systems and representations.</p>\n<div id=\"sample-usage\">\n<h2>Sample Usage</h2>\n<p>Initialize a color object using whatever representation is convenient:</p>\n<pre>&gt;&gt;&gt; c = Color(\"#0a0bcc\")\n&gt;&gt;&gt; c = Color.from_rgb(255, 255, 255, a=0.5)\n&gt;&gt;&gt; c = Color(hls=(0.2, 0.1, 0.1))\n</pre>\n<p>Manipulate colors:</p>\n<pre>&gt;&gt;&gt; a = Color(\"#aaaa00\")\n&gt;&gt;&gt; a.lighter()\n&gt;&gt;&gt; a.darker(amt=0.4)\n</pre>\n<p>Measure Colors:</p>\n<pre>&gt;&gt;&gt; a = Color(\"#aaaa00\")\n&gt;&gt;&gt; b = Color(\"#000000\")\n&gt;&gt;&gt; a.w3_contrast_ratio(b)\n&gt;&gt;&gt; a.w3_contrast_test(b)\n&gt;&gt;&gt; a.luminance\n</pre>\n<p>Convert Representations:</p>\n<pre>&gt;&gt;&gt; a = Color(\"#aaaa00\")\n&gt;&gt;&gt; a.rgb8.r\n170\n&gt;&gt;&gt; a.rgb8.r = 30\n&gt;&gt;&gt; tuple(a.rgb8)\n(30.0, 170.0, 0.0)\n&gt;&gt;&gt; tuple(a.hls)\n(0.30392156862745096, 0.3333333333333333, 1.0)\n&gt;&gt;&gt; str(a.hls)\n'hls(0.30392156862745096, 0.3333333333333333, 1.0)'\n&gt;&gt;&gt; a.hex\n'#1eaa00'\n&gt;&gt;&gt; a.css\n'rgb(170, 170, 0)'\n</pre>\n<p>Convert sRGB:</p>\n<pre>&gt;&gt;&gt; a = Color(\"#aaaa00\")\n&gt;&gt;&gt; a.workspace\n\"srgb\"\n&gt;&gt;&gt; a.rgb == a.srgb\nTrue\n&gt;&gt;&gt; a.linear_rgb\n{'r': 0.4019777798321958, 'b': 0.0, 'g': 0.4019777798321958}\n&gt;&gt;&gt; a.linear_rgb = (.2, .3, .3)\n&gt;&gt;&gt; a.rgb\n(0.48452920448170694, 0.5838314900602575, 0.5838314900602575)\n</pre>\n</div>\n<div id=\"where-does-palette-fit-in\">\n<h2>Where Does Palette Fit In?</h2>\n<p>There already exist several good python libraries for manipulating\ncolor.  Perhaps the two most notable are Grapefruit and\npython-colormath.  Palette hopes to fill a niche somewhere between the\ntwo.</p>\n<p>With respect to grapefruit, palette intends to have:</p>\n<ul>\n<li>a simpler interface for common tasks</li>\n<li>more sophistication with respect to RGB working spaces, illuminants,\netc.</li>\n<li>PEP-8 compliance</li>\n</ul>\n<p>With respect to python-colormath, palette intends to have:</p>\n<ul>\n<li>a simpler interface for common tasks; potentially at the expense of\ndeep support for non-RGB colors.</li>\n<li>more utilities that are primarily useful for web development</li>\n<li>support for <em>fewer</em> colorspaces.  Palette isn\u2019t particularly\ninterested in completionism.</li>\n<li>no dependency on numpy</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 749338, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dcaf23fbb3f98b1ab0358c07831aff5a", "sha256": "6ee092a58604e181bf36c59edf5a08dc608be36b2ae7fe68f90740d565d0c82a"}, "downloads": -1, "filename": "palette-0.1.zip", "has_sig": false, "md5_digest": "dcaf23fbb3f98b1ab0358c07831aff5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5998, "upload_time": "2011-06-20T20:29:37", "upload_time_iso_8601": "2011-06-20T20:29:37.966311Z", "url": "https://files.pythonhosted.org/packages/b9/d6/1f1330326b7f2f8de3198fcf89ff09afe9167b0f2070400de65ae42c67aa/palette-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "0cf2b2757923f3baec490ecf530a235a", "sha256": "82e28a008b686594b6dd9ee9d6d7d9e7c81ded224b5acccc74a799abc72cf10f"}, "downloads": -1, "filename": "palette-0.2.tar.gz", "has_sig": false, "md5_digest": "0cf2b2757923f3baec490ecf530a235a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5581, "upload_time": "2012-05-31T06:14:08", "upload_time_iso_8601": "2012-05-31T06:14:08.748122Z", "url": "https://files.pythonhosted.org/packages/e8/2f/fd242288bcc7d98c829b61b3a281e8562d3bc14c409bae87e1d1cbb32b87/palette-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0cf2b2757923f3baec490ecf530a235a", "sha256": "82e28a008b686594b6dd9ee9d6d7d9e7c81ded224b5acccc74a799abc72cf10f"}, "downloads": -1, "filename": "palette-0.2.tar.gz", "has_sig": false, "md5_digest": "0cf2b2757923f3baec490ecf530a235a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5581, "upload_time": "2012-05-31T06:14:08", "upload_time_iso_8601": "2012-05-31T06:14:08.748122Z", "url": "https://files.pythonhosted.org/packages/e8/2f/fd242288bcc7d98c829b61b3a281e8562d3bc14c409bae87e1d1cbb32b87/palette-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:45 2020"}