{"info": {"author": "Jizong Peng", "author_email": "jizong.peng.1@etsmtl.net", "bugtrack_url": null, "classifiers": [], "description": "# deep-clustering-toolbox\n#### PyTorch Vision toolbox not only for deep-clustering\n### Introduction\n\nThis repo contains the base code for a deep learning framework using `PyTorch`, to benchmark algorithms for various dataset.\nThe current version supports `MNIST`, `CIFAR10`, `SVHN` and `STL-10` for semisupervised and unsupervised learning.\n`ACDC`, `Promise12`, `WMH` and so on are supported as segmentation counterpart.\n\n#### Features:\n>- Powerful cmd parser using `yaml` module, providing flexible input formats without predefined argparser.\n>- Automatic checkpoint management adapting to various settings\n>- Automatic meter recording and experimental status plotting using matplotlib and threads\n>- Various build-in loss functions and help tricks and assert statements frequently used in PyTorch Framework, such as `disable_tracking_bn`, `ema`, `vat`, etc.\n>- Various post-processing tools such as Viewer for Medical image segmentations, multislice_viwers for 3D dataset real-time debug\nand report script for experimental summaries.\n>- Extendable modules for rapid development.\n\n#### Several projects are benefited from this scalable framework, builing top on this, including:\n\n+ DeepClustering implemented for\n>- `Invariant Information Clustering for Unsupervised Image Classification and Segmentation`,\n>- `Learning Discrete Representations via Information Maximizing Self-Augmented Training`,\n>- [`Information based Deep Clustering: An experimental study`](https://github.com/jizongFox/DeepClusteringProject)\n+ SemiSupervised classification for\n>- `Semi-Supervised Learning by Augmented Distribution Alignment`,\n>- `Virtual Adversarial Training: A Regularization Method for Supervised and Semi-Supervised Learning`,\n>- `Temporal Ensembling for Semi-Supervised Learning`,\n>- `Mean teachers are better role models: Weight-averaged consistency targets improve semi-supervised deep learning results`\n+ SemiSupervised Segmentation for\n>- `Adversarial Learning for Semi-Supervised Semantic Segmentation`,\n>- `Semi-Supervised and Task-Driven Data Augmentation`,\n>- [`Deep Co-Training for Semi-Supervised Image Segmentation`](https://arxiv.org/abs/1903.11233)\n+ Discretely-constrained CNN for\n>- [`Discretely-constrained deep network for weakly-supervised segmentation`](https://github.com/jizongFox/Discretly-constrained-CNN/).\n\n\nThey are examples how to develop research framework with the assistance of our proposed `deep-clustering-toolbox`.\n___\n### Playground\n\nSeveral papers have been implemented based on this framework. I store them in the `playground` folder. The papers include:\n\n>- [`Auto-Encoding Variational Bayes`](https://arxiv.org/abs/1312.6114)\n>- [`mixup: BEYOND EMPIRICAL RISK MINIMIZATION`](https://arxiv.org/pdf/1710.09412.pdf)\n>- [`MINE: Mutual Information Neural Estimation`](https://arxiv.org/abs/1801.04062)\n>- [`Averaging Weights Leads to Wider Optima and Better Generalization`](https://arxiv.org/pdf/1803.05407.pdf)\n>- [`THERE ARE MANY CONSISTENT EXPLANATIONS OF UNLABELED DATA: WHY YOU SHOULD AVERAGE`](https://arxiv.org/pdf/1806.05594.pdf)\n>- [`Prior-aware Neural Network for Partially-Supervised Multi-Organ Segmentation`](https://arxiv.org/abs/1904.06346)\n\n\n---\n### Installation\n```bash\ngit clone https://github.com/jizongFox/deep-clustering-toolbox.git\ncd deep-clustering-toolbox  \npython setup install # for those who do not want to make changes immediately.\n# or\npython setup develop # for those who want to modify the code and make the impact immediate.\n\n```\nOr very simply\n```bash\npip install deepclustering\n```\n### Citation\nIf you feel useful for your project, please consider citing this work.\n```latex\n@article{peng2019deep,\n  title={Deep Co-Training for Semi-Supervised Image Segmentation},\n  author={Peng, Jizong and Estradab, Guillermo and Pedersoli, Marco and Desrosiers, Christian},\n  journal={arXiv preprint arXiv:1903.11233},\n  year={2019}\n}\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jizongFox/deep-clustering-toolbox", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "deepclustering", "package_url": "https://pypi.org/project/deepclustering/", "platform": "", "project_url": "https://pypi.org/project/deepclustering/", "project_urls": {"Homepage": "https://github.com/jizongFox/deep-clustering-toolbox"}, "release_url": "https://pypi.org/project/deepclustering/0.0.2/", "requires_dist": ["msgpack", "numpy", "torch", "torchvision", "Pillow", "scikit-learn", "behave", "requests", "scikit-image", "pandas", "easydict", "matplotlib", "tqdm (==4.32.2)", "py (==1.8.0)", "pytest-remotedata (==0.3.1)", "tensorboardX", "tensorboard", "opencv-python", "medpy", "pyyaml", "termcolor", "gpuqueue", "gdown"], "requires_python": "", "summary": "", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>deep-clustering-toolbox</h1>\n<h4>PyTorch Vision toolbox not only for deep-clustering</h4>\n<h3>Introduction</h3>\n<p>This repo contains the base code for a deep learning framework using <code>PyTorch</code>, to benchmark algorithms for various dataset.\nThe current version supports <code>MNIST</code>, <code>CIFAR10</code>, <code>SVHN</code> and <code>STL-10</code> for semisupervised and unsupervised learning.\n<code>ACDC</code>, <code>Promise12</code>, <code>WMH</code> and so on are supported as segmentation counterpart.</p>\n<h4>Features:</h4>\n<blockquote>\n<ul>\n<li>Powerful cmd parser using <code>yaml</code> module, providing flexible input formats without predefined argparser.</li>\n<li>Automatic checkpoint management adapting to various settings</li>\n<li>Automatic meter recording and experimental status plotting using matplotlib and threads</li>\n<li>Various build-in loss functions and help tricks and assert statements frequently used in PyTorch Framework, such as <code>disable_tracking_bn</code>, <code>ema</code>, <code>vat</code>, etc.</li>\n<li>Various post-processing tools such as Viewer for Medical image segmentations, multislice_viwers for 3D dataset real-time debug\nand report script for experimental summaries.</li>\n<li>Extendable modules for rapid development.</li>\n</ul>\n</blockquote>\n<h4>Several projects are benefited from this scalable framework, builing top on this, including:</h4>\n<ul>\n<li>DeepClustering implemented for</li>\n</ul>\n<blockquote>\n<ul>\n<li><code>Invariant Information Clustering for Unsupervised Image Classification and Segmentation</code>,</li>\n<li><code>Learning Discrete Representations via Information Maximizing Self-Augmented Training</code>,</li>\n<li><a href=\"https://github.com/jizongFox/DeepClusteringProject\" rel=\"nofollow\"><code>Information based Deep Clustering: An experimental study</code></a></li>\n</ul>\n</blockquote>\n<ul>\n<li>SemiSupervised classification for</li>\n</ul>\n<blockquote>\n<ul>\n<li><code>Semi-Supervised Learning by Augmented Distribution Alignment</code>,</li>\n<li><code>Virtual Adversarial Training: A Regularization Method for Supervised and Semi-Supervised Learning</code>,</li>\n<li><code>Temporal Ensembling for Semi-Supervised Learning</code>,</li>\n<li><code>Mean teachers are better role models: Weight-averaged consistency targets improve semi-supervised deep learning results</code></li>\n</ul>\n</blockquote>\n<ul>\n<li>SemiSupervised Segmentation for</li>\n</ul>\n<blockquote>\n<ul>\n<li><code>Adversarial Learning for Semi-Supervised Semantic Segmentation</code>,</li>\n<li><code>Semi-Supervised and Task-Driven Data Augmentation</code>,</li>\n<li><a href=\"https://arxiv.org/abs/1903.11233\" rel=\"nofollow\"><code>Deep Co-Training for Semi-Supervised Image Segmentation</code></a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Discretely-constrained CNN for</li>\n</ul>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/jizongFox/Discretly-constrained-CNN/\" rel=\"nofollow\"><code>Discretely-constrained deep network for weakly-supervised segmentation</code></a>.</li>\n</ul>\n</blockquote>\n<p>They are examples how to develop research framework with the assistance of our proposed <code>deep-clustering-toolbox</code>.</p>\n<hr>\n<h3>Playground</h3>\n<p>Several papers have been implemented based on this framework. I store them in the <code>playground</code> folder. The papers include:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://arxiv.org/abs/1312.6114\" rel=\"nofollow\"><code>Auto-Encoding Variational Bayes</code></a></li>\n<li><a href=\"https://arxiv.org/pdf/1710.09412.pdf\" rel=\"nofollow\"><code>mixup: BEYOND EMPIRICAL RISK MINIMIZATION</code></a></li>\n<li><a href=\"https://arxiv.org/abs/1801.04062\" rel=\"nofollow\"><code>MINE: Mutual Information Neural Estimation</code></a></li>\n<li><a href=\"https://arxiv.org/pdf/1803.05407.pdf\" rel=\"nofollow\"><code>Averaging Weights Leads to Wider Optima and Better Generalization</code></a></li>\n<li><a href=\"https://arxiv.org/pdf/1806.05594.pdf\" rel=\"nofollow\"><code>THERE ARE MANY CONSISTENT EXPLANATIONS OF UNLABELED DATA: WHY YOU SHOULD AVERAGE</code></a></li>\n<li><a href=\"https://arxiv.org/abs/1904.06346\" rel=\"nofollow\"><code>Prior-aware Neural Network for Partially-Supervised Multi-Organ Segmentation</code></a></li>\n</ul>\n</blockquote>\n<hr>\n<h3>Installation</h3>\n<pre>git clone https://github.com/jizongFox/deep-clustering-toolbox.git\n<span class=\"nb\">cd</span> deep-clustering-toolbox  \npython setup install <span class=\"c1\"># for those who do not want to make changes immediately.</span>\n<span class=\"c1\"># or</span>\npython setup develop <span class=\"c1\"># for those who want to modify the code and make the impact immediate.</span>\n</pre>\n<p>Or very simply</p>\n<pre>pip install deepclustering\n</pre>\n<h3>Citation</h3>\n<p>If you feel useful for your project, please consider citing this work.</p>\n<pre>@article<span class=\"nb\">{</span>peng2019deep,\n  title=<span class=\"nb\">{</span>Deep Co-Training for Semi-Supervised Image Segmentation<span class=\"nb\">}</span>,\n  author=<span class=\"nb\">{</span>Peng, Jizong and Estradab, Guillermo and Pedersoli, Marco and Desrosiers, Christian<span class=\"nb\">}</span>,\n  journal=<span class=\"nb\">{</span>arXiv preprint arXiv:1903.11233<span class=\"nb\">}</span>,\n  year=<span class=\"nb\">{</span>2019<span class=\"nb\">}</span>\n<span class=\"nb\">}</span>\n</pre>\n\n          </div>"}, "last_serial": 6584696, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "19afc5c1582da70925c1b3ddc216dc08", "sha256": "1184c2d7611f90f691189927f9cf1434fcd67932362d66edf753851c1de41927"}, "downloads": -1, "filename": "deepclustering-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "19afc5c1582da70925c1b3ddc216dc08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 267711, "upload_time": "2020-02-06T22:09:36", "upload_time_iso_8601": "2020-02-06T22:09:36.933566Z", "url": "https://files.pythonhosted.org/packages/10/15/0b979021efa208e2f3cd24889360407af4fd5b75183f46aba015b1160782/deepclustering-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d88e61cdac0daa6237fcd152e2723702", "sha256": "447d9a823e9888b0238af5b35c4717f4f3a3e011549adbf581e8226d99054f11"}, "downloads": -1, "filename": "deepclustering-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d88e61cdac0daa6237fcd152e2723702", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 187372, "upload_time": "2020-02-06T22:09:38", "upload_time_iso_8601": "2020-02-06T22:09:38.714156Z", "url": "https://files.pythonhosted.org/packages/36/8c/b2c401a9a8816789a108ae9460d7df7cc6352483d78f95c776cd8890bd26/deepclustering-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19afc5c1582da70925c1b3ddc216dc08", "sha256": "1184c2d7611f90f691189927f9cf1434fcd67932362d66edf753851c1de41927"}, "downloads": -1, "filename": "deepclustering-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "19afc5c1582da70925c1b3ddc216dc08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 267711, "upload_time": "2020-02-06T22:09:36", "upload_time_iso_8601": "2020-02-06T22:09:36.933566Z", "url": "https://files.pythonhosted.org/packages/10/15/0b979021efa208e2f3cd24889360407af4fd5b75183f46aba015b1160782/deepclustering-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d88e61cdac0daa6237fcd152e2723702", "sha256": "447d9a823e9888b0238af5b35c4717f4f3a3e011549adbf581e8226d99054f11"}, "downloads": -1, "filename": "deepclustering-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d88e61cdac0daa6237fcd152e2723702", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 187372, "upload_time": "2020-02-06T22:09:38", "upload_time_iso_8601": "2020-02-06T22:09:38.714156Z", "url": "https://files.pythonhosted.org/packages/36/8c/b2c401a9a8816789a108ae9460d7df7cc6352483d78f95c776cd8890bd26/deepclustering-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:28 2020"}