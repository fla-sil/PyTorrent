{"info": {"author": "JCU eResearch Centre", "author_email": "eresearch@jcu.edu.au", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": ".. contents::\n\nIntroduction\n============\n\n.. image:: https://eresearch.jcu.edu.au/site-resources/spaces-logo.png\n   :align: right\n\n.. image:: https://travis-ci.org/collective/collective.spaces.png?branch=master\n    :target: https://travis-ci.org/collective/collective.spaces\n\n`collective.spaces` is a simple way of creating mini-sites within the Plone\nCMS, with each mini-site based on a fully-customisable template.  \nThis product deploys a light-weight Dexterity-based content type\n(called a ``Space``) within Plone and provides various additions that would\nbe useful in a self-managed, collaborative environment.  For instance:\n\n* Ability for users to self-create Spaces\n* Each Space appears as a sub-site\n* Customisable logo per-Space\n* Ability for site administration to customise a template used for new Spaces\n\nWhat this offers\n================\n\n* Simple Dexterity-based content type\n* Web-based forms built using ``plone.app.z3cform`` and friends\n* Leverages existing Plone tech (such as authentication, INavigationRoot and\n  Dexterity behaviours)\n  on offer.\n* Other options (such as ``collective.lineage``) provide unnecessary features \n  or else introduce extra dependencies\n\nUse Case (aka when-to-use-this)\n===============================\n\n#. Desire to allow various groups of users to collaborate but without\n   administrative overhead/intervention\n#. Users should be able to create new sub-sites at the Plone root, without\n   the need for administrative intervention\n#. Each workspace should be able to be self-managed\n#. Each workspace can be allowed limited customisation\n#. Workspaces should be all contained within a single Plone site\n#. Desire for a template to be easily customisable, with arbitrary content\n   attached within Plone.\n\nInstallation\n============\n\nBuildout\n--------\n\n``collective.spaces`` is compatible with recent version of Plone and is \ntested with Plone 4.2 and Dexterity 1.2.1.  Add this egg to your Plone\ninstance in your buildout like so -- it's highly recommended that\nyou utilise a Known Good Set (KGS) for pinning versions of the form\nlibraries and Dexterity::\n\n    [buildout]\n    extends =\n        ...\n        http://good-py.appspot.com/release/dexterity/1.2.1?plone=4.2b2\n\n    ...\n    \n    [instance]\n    ...\n    eggs =\n        collective.spaces\n\nZCML registration is not necessary as this egg includes a \n``z3c.autoinclude`` entry point.  Once you have added this to your buildout,\nre-run your ``./bin/buildout`` script.\n\nActivation within Plone\n-----------------------\n\n* Once buildout has completed, restart your Plone instance.\n* Load and login to your Plone instance, and go to `Add-ons` under `Site Setup`.\n* Locate ``collective.spaces`` in the add-ons list and `Activate` it.\n* Once complete, notice that:\n\n  * There is `Create new Space` in your personal tools menu\n  * A `Space Template` exists at the root of your portal\n  * Site Administrators and Managers can manually add `Space` content anywhere\n\nSecurity defaults\n-----------------\n\nBy default:\n\n* All logged-in users (``Authenticated``) have the ability to create new Spaces \n  via the `Create a new Space` form (``/@@create-space``). \n* Only Site Administrators and Managers can manually create Spaces via the\n  `Add new` menu. Regular users, including `Contributor` users, cannot do this.\n\nTo change these defaults, load the `Manage Access` ZMI page \n(for instance, ``http://localhost:8080/Plone/manage_access``) and change the\nroles associated with the relevant ``collective.spaces`` permissions. You can\nalso use a GenericSetup profile in an extension product to modify these \npermissions (``rolemap.xml`` in your profile).\n\nSuggestions\n===========\n\nWhilst this product is opinionated regarding aspects like default security\npermissions, a configurator can use the rest of Plone's functionality\nto enhance Spaces (and reduce administration overhead). Some examples are:\n\n*Authentication*\n    Enable user self-registration on Plone or enable\n    another authentication mechanism to reduce administrative input needed\n    (or both). Intertwining mechanisms like local authentication, LDAP, CAS, or \n    Shibboleth can easily mean that users can self-manage collaboration with \n    local and external users.\n\n*Navigation*\n    If users are expected to be creating many Spaces, then the Plone portal\n    tabs will quickly consume lots of space. To combat this, simply either turn\n    off the ``Automatically generate tabs`` option in the ``Navigation\n    settings`` control panel, or else de-select the ``Space`` content type from\n    the ``Displayed content types`` option. If using this latter strategy, then\n    consider how users will actually access their Space - hiding from\n    navigation entirely likely means users need directly access their URL.\n\n*Email notification*\n    A common situation may be where a site administrator\n    wants to keep track of the Spaces being created. A Plone Content Rule is\n    provided with this add-on to satisfy this use case.  Using this Rule is \n    completely optional -- it is installed but not enabled by default.\n\nCollaboration\n=============\n\nSource code is available within the `collective GitHub` at \nhttps://github.com/collective/collective.spaces for submission of issues, \nfixes, and improvements.\n\nIncompatibilties\n================\n\n* Products.CMFPlacefulWorkflow is currently incompatible due to policy\n  traversal leading to an infinite loop when performing actions like adding\n  or modifying comments on content. This issue is present with version 1.5.9\n  and caused by this loop: Products/CMFPlacefulWorkflow/adapter.py (line 71)\n\nTo Do\n=====\n\n* Tests for email notification content rule (when enabled)\n* Handle issues with displaying ID field - can we sanely present users\n  the ability to change their Space ID?  In standard Plone machinery, being\n  able to rename content in a context depends upon having the ``Copy or Move``\n  permission on the folder context. \n\n\nContributors\n============\n\nDavid Beitey (davidjb), Author\n\nChangelog\n=========\n\n1.1 (2014-02-04)\n----------------\n\n- Fix type conversion preventing Unicode characters being entered when\n  creating a Space.\n  [davidjb]\n- Workaround folder type constraint inheritance issue by pretending Space\n  content is like Archetypes. This handles `Plone issue \n  #13792 <https://dev.plone.org/ticket/13792>`_.\n  [davidjb]\n- Enable folder constraints on the Space content type via Dexterity behaviour.\n  [davidjb]\n- Ensure we depend on plone.app.contentmenu for correct ZCML loading.\n  [davidjb]\n- Ensure create space action is only visible to those with the correct\n  permission.\n  [davidjb]\n- Just create an empty space if the template doesn't exist.\n  [davidjb]\n- Adding logging for exceptions on space creation.\n  [davidjb]\n- Ensure ``plone.app.dexerity [grok]`` is installed upon installation of this\n  package.\n  [davidjb]\n- Updating URL in setup.py to be the correct GitHub address.\n  [davidjb]\n\n\n1.0 (2012-03-26)\n----------------\n\n- Provide email content rule for when Spaces are created. This is not\n  enabled by default.\n  [davidjb]\n- Providing decorator for elevated contributor access on the portal.\n  [davidjb]\n- Added doctests for Space self-creation form.\n  [davidjb]\n- Adding ability to set custom logo on Space and set image scale.\n  [davidjb]\n- Added basic Space self-creation form.\n  [davidjb]\n- Package created using zopeskel\n  [davidjb]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/collective/collective.spaces", "keywords": "plone site space mini-site navigationroot", "license": "gpl", "maintainer": null, "maintainer_email": null, "name": "collective.spaces", "package_url": "https://pypi.org/project/collective.spaces/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.spaces/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/collective/collective.spaces"}, "release_url": "https://pypi.org/project/collective.spaces/1.1/", "requires_dist": null, "requires_python": null, "summary": "Simple collaboration spaces for Plone", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id3\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#what-this-offers\" id=\"id4\" rel=\"nofollow\">What this offers</a></li>\n<li><a href=\"#use-case-aka-when-to-use-this\" id=\"id5\" rel=\"nofollow\">Use Case (aka when-to-use-this)</a></li>\n<li><a href=\"#installation\" id=\"id6\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#buildout\" id=\"id7\" rel=\"nofollow\">Buildout</a></li>\n<li><a href=\"#activation-within-plone\" id=\"id8\" rel=\"nofollow\">Activation within Plone</a></li>\n<li><a href=\"#security-defaults\" id=\"id9\" rel=\"nofollow\">Security defaults</a></li>\n</ul>\n</li>\n<li><a href=\"#suggestions\" id=\"id10\" rel=\"nofollow\">Suggestions</a></li>\n<li><a href=\"#collaboration\" id=\"id11\" rel=\"nofollow\">Collaboration</a></li>\n<li><a href=\"#incompatibilties\" id=\"id12\" rel=\"nofollow\">Incompatibilties</a></li>\n<li><a href=\"#to-do\" id=\"id13\" rel=\"nofollow\">To Do</a></li>\n<li><a href=\"#contributors\" id=\"id14\" rel=\"nofollow\">Contributors</a></li>\n<li><a href=\"#changelog\" id=\"id15\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id16\" rel=\"nofollow\">1.1 (2014-02-04)</a></li>\n<li><a href=\"#id2\" id=\"id17\" rel=\"nofollow\">1.0 (2012-03-26)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Introduction</a></h2>\n<img alt=\"https://eresearch.jcu.edu.au/site-resources/spaces-logo.png\" class=\"align-right\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1f0a960c81215b6dee0ffe1fdd0994dd8f2291c/68747470733a2f2f6572657365617263682e6a63752e6564752e61752f736974652d7265736f75726365732f7370616365732d6c6f676f2e706e67\">\n<a href=\"https://travis-ci.org/collective/collective.spaces\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/collective/collective.spaces.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b04e9cc72bc69cb1f3affa0fce2ed28c88f845b/68747470733a2f2f7472617669732d63692e6f72672f636f6c6c6563746976652f636f6c6c6563746976652e7370616365732e706e673f6272616e63683d6d6173746572\"></a>\n<p><cite>collective.spaces</cite> is a simple way of creating mini-sites within the Plone\nCMS, with each mini-site based on a fully-customisable template.\nThis product deploys a light-weight Dexterity-based content type\n(called a <tt>Space</tt>) within Plone and provides various additions that would\nbe useful in a self-managed, collaborative environment.  For instance:</p>\n<ul>\n<li>Ability for users to self-create Spaces</li>\n<li>Each Space appears as a sub-site</li>\n<li>Customisable logo per-Space</li>\n<li>Ability for site administration to customise a template used for new Spaces</li>\n</ul>\n</div>\n<div id=\"what-this-offers\">\n<h2><a href=\"#id4\" rel=\"nofollow\">What this offers</a></h2>\n<ul>\n<li>Simple Dexterity-based content type</li>\n<li>Web-based forms built using <tt>plone.app.z3cform</tt> and friends</li>\n<li>Leverages existing Plone tech (such as authentication, INavigationRoot and\nDexterity behaviours)\non offer.</li>\n<li>Other options (such as <tt>collective.lineage</tt>) provide unnecessary features\nor else introduce extra dependencies</li>\n</ul>\n</div>\n<div id=\"use-case-aka-when-to-use-this\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Use Case (aka when-to-use-this)</a></h2>\n<ol>\n<li>Desire to allow various groups of users to collaborate but without\nadministrative overhead/intervention</li>\n<li>Users should be able to create new sub-sites at the Plone root, without\nthe need for administrative intervention</li>\n<li>Each workspace should be able to be self-managed</li>\n<li>Each workspace can be allowed limited customisation</li>\n<li>Workspaces should be all contained within a single Plone site</li>\n<li>Desire for a template to be easily customisable, with arbitrary content\nattached within Plone.</li>\n</ol>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Installation</a></h2>\n<div id=\"buildout\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Buildout</a></h3>\n<p><tt>collective.spaces</tt> is compatible with recent version of Plone and is\ntested with Plone 4.2 and Dexterity 1.2.1.  Add this egg to your Plone\ninstance in your buildout like so \u2013 it\u2019s highly recommended that\nyou utilise a Known Good Set (KGS) for pinning versions of the form\nlibraries and Dexterity:</p>\n<pre>[buildout]\nextends =\n    ...\n    http://good-py.appspot.com/release/dexterity/1.2.1?plone=4.2b2\n\n...\n\n[instance]\n...\neggs =\n    collective.spaces\n</pre>\n<p>ZCML registration is not necessary as this egg includes a\n<tt>z3c.autoinclude</tt> entry point.  Once you have added this to your buildout,\nre-run your <tt>./bin/buildout</tt> script.</p>\n</div>\n<div id=\"activation-within-plone\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Activation within Plone</a></h3>\n<ul>\n<li>Once buildout has completed, restart your Plone instance.</li>\n<li>Load and login to your Plone instance, and go to <cite>Add-ons</cite> under <cite>Site Setup</cite>.</li>\n<li>Locate <tt>collective.spaces</tt> in the add-ons list and <cite>Activate</cite> it.</li>\n<li>Once complete, notice that:<ul>\n<li>There is <cite>Create new Space</cite> in your personal tools menu</li>\n<li>A <cite>Space Template</cite> exists at the root of your portal</li>\n<li>Site Administrators and Managers can manually add <cite>Space</cite> content anywhere</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"security-defaults\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Security defaults</a></h3>\n<p>By default:</p>\n<ul>\n<li>All logged-in users (<tt>Authenticated</tt>) have the ability to create new Spaces\nvia the <cite>Create a new Space</cite> form (<tt><span class=\"pre\">/@@create-space</span></tt>).</li>\n<li>Only Site Administrators and Managers can manually create Spaces via the\n<cite>Add new</cite> menu. Regular users, including <cite>Contributor</cite> users, cannot do this.</li>\n</ul>\n<p>To change these defaults, load the <cite>Manage Access</cite> ZMI page\n(for instance, <tt><span class=\"pre\">http://localhost:8080/Plone/manage_access</span></tt>) and change the\nroles associated with the relevant <tt>collective.spaces</tt> permissions. You can\nalso use a GenericSetup profile in an extension product to modify these\npermissions (<tt>rolemap.xml</tt> in your profile).</p>\n</div>\n</div>\n<div id=\"suggestions\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Suggestions</a></h2>\n<p>Whilst this product is opinionated regarding aspects like default security\npermissions, a configurator can use the rest of Plone\u2019s functionality\nto enhance Spaces (and reduce administration overhead). Some examples are:</p>\n<dl>\n<dt><em>Authentication</em></dt>\n<dd>Enable user self-registration on Plone or enable\nanother authentication mechanism to reduce administrative input needed\n(or both). Intertwining mechanisms like local authentication, LDAP, CAS, or\nShibboleth can easily mean that users can self-manage collaboration with\nlocal and external users.</dd>\n<dt><em>Navigation</em></dt>\n<dd>If users are expected to be creating many Spaces, then the Plone portal\ntabs will quickly consume lots of space. To combat this, simply either turn\noff the <tt>Automatically generate tabs</tt> option in the <tt>Navigation\nsettings</tt> control panel, or else de-select the <tt>Space</tt> content type from\nthe <tt>Displayed content types</tt> option. If using this latter strategy, then\nconsider how users will actually access their Space - hiding from\nnavigation entirely likely means users need directly access their URL.</dd>\n<dt><em>Email notification</em></dt>\n<dd>A common situation may be where a site administrator\nwants to keep track of the Spaces being created. A Plone Content Rule is\nprovided with this add-on to satisfy this use case.  Using this Rule is\ncompletely optional \u2013 it is installed but not enabled by default.</dd>\n</dl>\n</div>\n<div id=\"collaboration\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Collaboration</a></h2>\n<p>Source code is available within the <cite>collective GitHub</cite> at\n<a href=\"https://github.com/collective/collective.spaces\" rel=\"nofollow\">https://github.com/collective/collective.spaces</a> for submission of issues,\nfixes, and improvements.</p>\n</div>\n<div id=\"incompatibilties\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Incompatibilties</a></h2>\n<ul>\n<li>Products.CMFPlacefulWorkflow is currently incompatible due to policy\ntraversal leading to an infinite loop when performing actions like adding\nor modifying comments on content. This issue is present with version 1.5.9\nand caused by this loop: Products/CMFPlacefulWorkflow/adapter.py (line 71)</li>\n</ul>\n</div>\n<div id=\"to-do\">\n<h2><a href=\"#id13\" rel=\"nofollow\">To Do</a></h2>\n<ul>\n<li>Tests for email notification content rule (when enabled)</li>\n<li>Handle issues with displaying ID field - can we sanely present users\nthe ability to change their Space ID?  In standard Plone machinery, being\nable to rename content in a context depends upon having the <tt>Copy or Move</tt>\npermission on the folder context.</li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id14\" rel=\"nofollow\">Contributors</a></h2>\n<p>David Beitey (davidjb), Author</p>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id15\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id16\" rel=\"nofollow\">1.1 (2014-02-04)</a></h3>\n<ul>\n<li>Fix type conversion preventing Unicode characters being entered when\ncreating a Space.\n[davidjb]</li>\n<li>Workaround folder type constraint inheritance issue by pretending Space\ncontent is like Archetypes. This handles <a href=\"https://dev.plone.org/ticket/13792\" rel=\"nofollow\">Plone issue\n#13792</a>.\n[davidjb]</li>\n<li>Enable folder constraints on the Space content type via Dexterity behaviour.\n[davidjb]</li>\n<li>Ensure we depend on plone.app.contentmenu for correct ZCML loading.\n[davidjb]</li>\n<li>Ensure create space action is only visible to those with the correct\npermission.\n[davidjb]</li>\n<li>Just create an empty space if the template doesn\u2019t exist.\n[davidjb]</li>\n<li>Adding logging for exceptions on space creation.\n[davidjb]</li>\n<li>Ensure <tt>plone.app.dexerity [grok]</tt> is installed upon installation of this\npackage.\n[davidjb]</li>\n<li>Updating URL in setup.py to be the correct GitHub address.\n[davidjb]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id17\" rel=\"nofollow\">1.0 (2012-03-26)</a></h3>\n<ul>\n<li>Provide email content rule for when Spaces are created. This is not\nenabled by default.\n[davidjb]</li>\n<li>Providing decorator for elevated contributor access on the portal.\n[davidjb]</li>\n<li>Added doctests for Space self-creation form.\n[davidjb]</li>\n<li>Adding ability to set custom logo on Space and set image scale.\n[davidjb]</li>\n<li>Added basic Space self-creation form.\n[davidjb]</li>\n<li>Package created using zopeskel\n[davidjb]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 989961, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "266afdbf272febd86980434a68492648", "sha256": "0df4e02cb770e4ba289d32211ff796c1b92b6e406b7ea18079495af99a023765"}, "downloads": -1, "filename": "collective.spaces-1.0.zip", "has_sig": false, "md5_digest": "266afdbf272febd86980434a68492648", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54291, "upload_time": "2012-03-26T04:32:29", "upload_time_iso_8601": "2012-03-26T04:32:29.725401Z", "url": "https://files.pythonhosted.org/packages/44/06/f25f7f83e3a04e8ce7502163b3aa73b2c0afad8d55808f2fc538d1e0b2e5/collective.spaces-1.0.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "1038558a792a9f445844c971b2eb8526", "sha256": "a497d7528b110afc2171b93535e46e66180a9f2991dffedd5e278f55455915fb"}, "downloads": -1, "filename": "collective.spaces-1.1.zip", "has_sig": false, "md5_digest": "1038558a792a9f445844c971b2eb8526", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55988, "upload_time": "2014-02-04T02:38:35", "upload_time_iso_8601": "2014-02-04T02:38:35.324459Z", "url": "https://files.pythonhosted.org/packages/7d/4f/8ddea3ae9f2acf1b929f55ec893c9157f3eaadb2df63977ca43289a66aaf/collective.spaces-1.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1038558a792a9f445844c971b2eb8526", "sha256": "a497d7528b110afc2171b93535e46e66180a9f2991dffedd5e278f55455915fb"}, "downloads": -1, "filename": "collective.spaces-1.1.zip", "has_sig": false, "md5_digest": "1038558a792a9f445844c971b2eb8526", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55988, "upload_time": "2014-02-04T02:38:35", "upload_time_iso_8601": "2014-02-04T02:38:35.324459Z", "url": "https://files.pythonhosted.org/packages/7d/4f/8ddea3ae9f2acf1b929f55ec893c9157f3eaadb2df63977ca43289a66aaf/collective.spaces-1.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:48 2020"}