{"info": {"author": "CNRI", "author_email": "webmaster@mems-exchange.org", "bugtrack_url": null, "classifiers": [], "description": "An object schema describes every class in a collection of objects -- in\nparticular, it specifies the type of every instance attribute of every\nclass.  Grouch includes a type language for specifying attribute types,\na tool to parse specially-formatted class docstrings and output a\ncomplete object schema, and another tool for walking a persistent object\ngraph and ensuring that every scrap of data in it conforms to the object\nschema extracted from your class docstrings.  The API for defining,\nquerying, and enforcing types is fairly complete and well-documented, so\nyou can use Grouch's type system in other ways as well.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.mems-exchange.org/software/grouch/", "keywords": null, "license": "see LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "Grouch", "package_url": "https://pypi.org/project/Grouch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Grouch/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.mems-exchange.org/software/grouch/"}, "release_url": "https://pypi.org/project/Grouch/0.4/", "requires_dist": null, "requires_python": null, "summary": "System for describing and enforcing a Python object schema", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An object schema describes every class in a collection of objects \u2013 in\nparticular, it specifies the type of every instance attribute of every\nclass.  Grouch includes a type language for specifying attribute types,\na tool to parse specially-formatted class docstrings and output a\ncomplete object schema, and another tool for walking a persistent object\ngraph and ensuring that every scrap of data in it conforms to the object\nschema extracted from your class docstrings.  The API for defining,\nquerying, and enforcing types is fairly complete and well-documented, so\nyou can use Grouch\u2019s type system in other ways as well.</p>\n\n          </div>"}, "last_serial": 4012, "releases": {"0.4": []}, "urls": [], "timestamp": "Fri May  8 00:54:04 2020"}