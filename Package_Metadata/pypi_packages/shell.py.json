{"info": {"author": "Qingping Hou", "author_email": "dave2008713@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "shell.py\n========\n\n.. image:: https://badge.fury.io/py/shell.py.png\n    :target: http://badge.fury.io/py/shell.py\n\n.. image:: https://travis-ci.org/houqp/shell.py.svg?branch=master\n    :target: https://travis-ci.org/houqp/shell.py\n\nBring the good part of Shell scripting to Python.\n\n\nInstall\n-------\n\n.. code-block:: bash\n\n    $ pip install shell.py\n\n\nUsage\n-----\n\nExecute a shell command\n.......................\n\nBlock until return:\n\n.. code-block:: python\n\n    >>> from shell import ex\n    >>> ex('echo hello shell.py').stdout()\n    'hello shell.py\\n'\n\nAsynchronous execution:\n\n.. code-block:: python\n\n    >>> from shell import ex\n    >>> c = asex('echo hello shell.py')\n    >>> # do something else\n    ...\n    >>> c.stdout() # wait until process exit and read stdout\n    'hello shell.py\\n'\n\n\n\nPipe commands\n.............\n\n.. code-block:: python\n\n    from shell import ex\n    re = (ex(\"ifconfig\")\n          | \"grep -A 1 eth0\"\n          | \"grep inet\"\n          | \"awk '{print $2}'\"\n          | \"cut -d: -f 2\").stdout()\n\nOr\n\n.. code-block:: python\n\n    from shell import pipe_all\n    pipe_all([\"ls -la ~\",\n              \"awk '{print $9}'\",\n              \"grep -E '^\\.'\",\n              \"wc -l\"]).stdout()\n\n\nUse string as stdin\n...................\n\n.. code-block:: python\n\n    >>> from shell import instream\n    >>> instream(\"1 2 3\").p(\"awk '{print $1}'\").stdout()\n    '1\\n'\n\nThis is equivalent to:\n\n.. code-block:: python\n\n    >>> from shell import ex\n    >>> ex(\"echo 1 2 3\").p(\"awk '{print $1}'\").stdout()\n\n\nIO redirect\n............\n\nOverwrite a file:\n\n.. code-block:: python\n\n    >>> from shell import ex\n    >>> ex('echo yolo').wr('/tmp/out')\n    >>> ex('echo yolo') > '/tmp/out'\n\nAppend to a file:\n\n.. code-block:: python\n\n    >>> from shell import ex\n    >>> ex('echo yolo').ap('/tmp/out')\n    >>> ex('echo yolo') >> '/tmp/out'\n\n\nRun commands in parallel\n........................\n\nBlock until all commands return:\n\n.. code-block:: python\n\n    >>> from shell import parallel as par\n    >>> par.ex_all(['sleep 2', 'sleep 2']) # return in 2s\n\nAsynchronous parallel execution:\n\n.. code-block:: python\n\n    >>> from shell import parallel as par\n    >>> pe = par.asex_all(['sleep 2', 'sleep 2']) # return immediately\n    >>> # do something else\n    ...\n    >>> pe.wait()\n\n\n\nSet working directory\n.....................\n\nSet the directory in which the commands are executed:\n\n.. code-block:: python\n\n    >>> with shell.cwd('~/server/data/upload/') as old_path:\n    >>>     shell.ex('find ./images -name \"*.png\"') | 'minify ./public' >> 'upload.log'\n\nThis is equivalent to:\n\n.. code-block:: python\n\n    >>> shell.ex('find ~/server/data/upload/images -name \"*.png\"') | 'minify ~/server/data/upload/public' >> '~/server/data/upload.log'\n\n\nSee test cases for more examples.\n\nTests\n-----\n\nRun tests with nosetests(at least v1.3.0):\n\n.. code-block:: bash\n\n    $ make test", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/houqp/shell.py", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "shell.py", "package_url": "https://pypi.org/project/shell.py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/shell.py/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/houqp/shell.py"}, "release_url": "https://pypi.org/project/shell.py/0.5.3/", "requires_dist": null, "requires_python": null, "summary": "Shell power for Python.", "version": "0.5.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/shell.py\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/shell.py.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6625d86d5daba8706edbc6c4155d9f724554adc8/68747470733a2f2f62616467652e667572792e696f2f70792f7368656c6c2e70792e706e67\"></a>\n<a href=\"https://travis-ci.org/houqp/shell.py\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/houqp/shell.py.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0959dff6274fbbe04423edac607607835713d538/68747470733a2f2f7472617669732d63692e6f72672f686f7571702f7368656c6c2e70792e7376673f6272616e63683d6d6173746572\"></a>\n<p>Bring the good part of Shell scripting to Python.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install shell.py\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"execute-a-shell-command\">\n<h3>Execute a shell command</h3>\n<p>Block until return:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">ex</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s1\">'echo hello shell.py'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">()</span>\n<span class=\"s1\">'hello shell.py</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n</pre>\n<p>Asynchronous execution:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">ex</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">asex</span><span class=\"p\">(</span><span class=\"s1\">'echo hello shell.py'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># do something else</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">()</span> <span class=\"c1\"># wait until process exit and read stdout</span>\n<span class=\"s1\">'hello shell.py</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n</pre>\n</div>\n<div id=\"pipe-commands\">\n<h3>Pipe commands</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">ex</span>\n<span class=\"n\">re</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s2\">\"ifconfig\"</span><span class=\"p\">)</span>\n      <span class=\"o\">|</span> <span class=\"s2\">\"grep -A 1 eth0\"</span>\n      <span class=\"o\">|</span> <span class=\"s2\">\"grep inet\"</span>\n      <span class=\"o\">|</span> <span class=\"s2\">\"awk '{print $2}'\"</span>\n      <span class=\"o\">|</span> <span class=\"s2\">\"cut -d: -f 2\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">()</span>\n</pre>\n<p>Or</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">pipe_all</span>\n<span class=\"n\">pipe_all</span><span class=\"p\">([</span><span class=\"s2\">\"ls -la ~\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"awk '{print $9}'\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"grep -E '^\\.'\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"wc -l\"</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"use-string-as-stdin\">\n<h3>Use string as stdin</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">instream</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">instream</span><span class=\"p\">(</span><span class=\"s2\">\"1 2 3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s2\">\"awk '{print $1}'\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">()</span>\n<span class=\"s1\">'1</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n</pre>\n<p>This is equivalent to:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">ex</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s2\">\"echo 1 2 3\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">p</span><span class=\"p\">(</span><span class=\"s2\">\"awk '{print $1}'\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"io-redirect\">\n<h3>IO redirect</h3>\n<p>Overwrite a file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">ex</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s1\">'echo yolo'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">wr</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/out'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s1\">'echo yolo'</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"s1\">'/tmp/out'</span>\n</pre>\n<p>Append to a file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">ex</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s1\">'echo yolo'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">ap</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/out'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s1\">'echo yolo'</span><span class=\"p\">)</span> <span class=\"o\">&gt;&gt;</span> <span class=\"s1\">'/tmp/out'</span>\n</pre>\n</div>\n<div id=\"run-commands-in-parallel\">\n<h3>Run commands in parallel</h3>\n<p>Block until all commands return:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">parallel</span> <span class=\"k\">as</span> <span class=\"n\">par</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">par</span><span class=\"o\">.</span><span class=\"n\">ex_all</span><span class=\"p\">([</span><span class=\"s1\">'sleep 2'</span><span class=\"p\">,</span> <span class=\"s1\">'sleep 2'</span><span class=\"p\">])</span> <span class=\"c1\"># return in 2s</span>\n</pre>\n<p>Asynchronous parallel execution:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">shell</span> <span class=\"kn\">import</span> <span class=\"n\">parallel</span> <span class=\"k\">as</span> <span class=\"n\">par</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pe</span> <span class=\"o\">=</span> <span class=\"n\">par</span><span class=\"o\">.</span><span class=\"n\">asex_all</span><span class=\"p\">([</span><span class=\"s1\">'sleep 2'</span><span class=\"p\">,</span> <span class=\"s1\">'sleep 2'</span><span class=\"p\">])</span> <span class=\"c1\"># return immediately</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># do something else</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"set-working-directory\">\n<h3>Set working directory</h3>\n<p>Set the directory in which the commands are executed:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">cwd</span><span class=\"p\">(</span><span class=\"s1\">'~/server/data/upload/'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">old_path</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s1\">'find ./images -name \"*.png\"'</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"s1\">'minify ./public'</span> <span class=\"o\">&gt;&gt;</span> <span class=\"s1\">'upload.log'</span>\n</pre>\n<p>This is equivalent to:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">ex</span><span class=\"p\">(</span><span class=\"s1\">'find ~/server/data/upload/images -name \"*.png\"'</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"s1\">'minify ~/server/data/upload/public'</span> <span class=\"o\">&gt;&gt;</span> <span class=\"s1\">'~/server/data/upload.log'</span>\n</pre>\n<p>See test cases for more examples.</p>\n</div>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Run tests with nosetests(at least v1.3.0):</p>\n<pre>$ make <span class=\"nb\">test</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2761577, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "ab8c0d8d2e191c8cab6e1dc0fb1356ca", "sha256": "d3ce3e6e07d975fc4270208dd36f540e37491b33054540f4102ee8ea63fff2c2"}, "downloads": -1, "filename": "shell.py-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ab8c0d8d2e191c8cab6e1dc0fb1356ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5459, "upload_time": "2014-05-07T17:21:41", "upload_time_iso_8601": "2014-05-07T17:21:41.249761Z", "url": "https://files.pythonhosted.org/packages/8b/6c/2660dcc4043d989b36e515e2299e469ad13acd377d55cb0a2389d20300ae/shell.py-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "3961c8b7da641230c7cc4d7b9b42cf8e", "sha256": "91f48e8fd47c2fef9d817ec1839a66cf2172b00aa8e0ab5e18a29df2c512b8dc"}, "downloads": -1, "filename": "shell.py-0.5.0.tar.gz", "has_sig": false, "md5_digest": "3961c8b7da641230c7cc4d7b9b42cf8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5955, "upload_time": "2014-05-12T03:32:24", "upload_time_iso_8601": "2014-05-12T03:32:24.778381Z", "url": "https://files.pythonhosted.org/packages/bc/c6/8005bad37d8e4ecdb3fd6c40d5eb33ea91da2560a970abaff95f3a6f35eb/shell.py-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "873364ad265cbc683c83f864241e269e", "sha256": "6430a9583494aa3af645293ccff6585a55ba170fdbfe868a5ac0460797579272"}, "downloads": -1, "filename": "shell.py-0.5.1.tar.gz", "has_sig": false, "md5_digest": "873364ad265cbc683c83f864241e269e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6111, "upload_time": "2015-06-06T19:27:12", "upload_time_iso_8601": "2015-06-06T19:27:12.383974Z", "url": "https://files.pythonhosted.org/packages/5f/98/6f7d35bbde5916afe7dc21c6169c115faa277b748ef4499def2a1c26a33d/shell.py-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "fc2a1251d9eb03cbc2e85a31454ba7d8", "sha256": "fb47f86c5a5ea4e45d39673f79b934907543b31c75323251f043b44683c01e27"}, "downloads": -1, "filename": "shell.py-0.5.2.tar.gz", "has_sig": false, "md5_digest": "fc2a1251d9eb03cbc2e85a31454ba7d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6310, "upload_time": "2015-06-08T07:30:00", "upload_time_iso_8601": "2015-06-08T07:30:00.740934Z", "url": "https://files.pythonhosted.org/packages/49/75/792fa5a00e32508b9fae4afc432d23779eb2ddff8147c0f3bf3e372176f8/shell.py-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "b4415d341ec719d7214c4280b46369af", "sha256": "f0ce6c0688b84392a04311f27f4f0661cd37ef532eb99703b5e17b8cb58e93a1"}, "downloads": -1, "filename": "shell.py-0.5.3.tar.gz", "has_sig": false, "md5_digest": "b4415d341ec719d7214c4280b46369af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6407, "upload_time": "2015-07-27T09:52:32", "upload_time_iso_8601": "2015-07-27T09:52:32.764770Z", "url": "https://files.pythonhosted.org/packages/45/98/ca6829dbab4aa0a1b3abec62c15be979b96a96612f5adfffec38cc7ca353/shell.py-0.5.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4415d341ec719d7214c4280b46369af", "sha256": "f0ce6c0688b84392a04311f27f4f0661cd37ef532eb99703b5e17b8cb58e93a1"}, "downloads": -1, "filename": "shell.py-0.5.3.tar.gz", "has_sig": false, "md5_digest": "b4415d341ec719d7214c4280b46369af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6407, "upload_time": "2015-07-27T09:52:32", "upload_time_iso_8601": "2015-07-27T09:52:32.764770Z", "url": "https://files.pythonhosted.org/packages/45/98/ca6829dbab4aa0a1b3abec62c15be979b96a96612f5adfffec38cc7ca353/shell.py-0.5.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:19 2020"}