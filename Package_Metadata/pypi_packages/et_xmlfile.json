{"info": {"author": "See ATUHORS.txt", "author_email": "charlie.clark@clark-consulting.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "et_xmfile\n=========\n\net_xmlfile is a low memory library for creating large XML files.\n\nIt is based upon the `xmlfile module from lxml <http://lxml.de/api.html#incremental-xml-generation>`_ with the aim of allowing code to be developed that will work with both libraries. It was developed initially for the openpyxl project but is now a standalone module.\n\nThe code was written by Elias Rabel as part of the `Python D\u00fcsseldorf <http://pyddf.de>`_ openpyxl sprint in September 2014.\n\n\nNote on performance\n-------------------\n\nThe code was not developed with performance in mind but turned out to be faster than the existing SAX-based implementation but is significantly slower than lxml's xmlfile. There is one area where an optimisation for lxml will negatively affect the performance of et_xmfile and that is when using the `.element()` method on an xmlfile context manager. It is, therefore, recommended not to use this, though the method is provided for code compatibility.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/openpyxl/et_xmlfile", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "et_xmlfile", "package_url": "https://pypi.org/project/et_xmlfile/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/et_xmlfile/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/openpyxl/et_xmlfile"}, "release_url": "https://pypi.org/project/et_xmlfile/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "An implementation of lxml.xmlfile for the standard library", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>et_xmlfile is a low memory library for creating large XML files.</p>\n<p>It is based upon the <a href=\"http://lxml.de/api.html#incremental-xml-generation\" rel=\"nofollow\">xmlfile module from lxml</a> with the aim of allowing code to be developed that will work with both libraries. It was developed initially for the openpyxl project but is now a standalone module.</p>\n<p>The code was written by Elias Rabel as part of the <a href=\"http://pyddf.de\" rel=\"nofollow\">Python D\u00fcsseldorf</a> openpyxl sprint in September 2014.</p>\n<div id=\"note-on-performance\">\n<h2>Note on performance</h2>\n<p>The code was not developed with performance in mind but turned out to be faster than the existing SAX-based implementation but is significantly slower than lxml\u2019s xmlfile. There is one area where an optimisation for lxml will negatively affect the performance of et_xmfile and that is when using the <cite>.element()</cite> method on an xmlfile context manager. It is, therefore, recommended not to use this, though the method is provided for code compatibility.</p>\n</div>\n\n          </div>"}, "last_serial": 1787963, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ef9922412f828b4c762be64e64ec5070", "sha256": "727fd43a5fe7af1087c4fe6d610c24f87dc6283b914ea0f3f2d05c82de0dda96"}, "downloads": -1, "filename": "et_xmlfile-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ef9922412f828b4c762be64e64ec5070", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7682, "upload_time": "2015-03-30T13:50:47", "upload_time_iso_8601": "2015-03-30T13:50:47.125297Z", "url": "https://files.pythonhosted.org/packages/23/4f/82bcae59f404b76ee1458c6d11b437cf2da371fb5f366fc54c8b1673df0b/et_xmlfile-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f47940fd9d556375420b2e276476cfaf", "sha256": "614d9722d572f6246302c4491846d2c393c199cfa4edc9af593437691683335b"}, "downloads": -1, "filename": "et_xmlfile-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f47940fd9d556375420b2e276476cfaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8427, "upload_time": "2015-10-27T07:55:03", "upload_time_iso_8601": "2015-10-27T07:55:03.858038Z", "url": "https://files.pythonhosted.org/packages/22/28/a99c42aea746e18382ad9fb36f64c1c1f04216f41797f2f0fa567da11388/et_xmlfile-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f47940fd9d556375420b2e276476cfaf", "sha256": "614d9722d572f6246302c4491846d2c393c199cfa4edc9af593437691683335b"}, "downloads": -1, "filename": "et_xmlfile-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f47940fd9d556375420b2e276476cfaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8427, "upload_time": "2015-10-27T07:55:03", "upload_time_iso_8601": "2015-10-27T07:55:03.858038Z", "url": "https://files.pythonhosted.org/packages/22/28/a99c42aea746e18382ad9fb36f64c1c1f04216f41797f2f0fa567da11388/et_xmlfile-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:21 2020"}