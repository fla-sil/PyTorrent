{"info": {"author": "otupman@antillion.com", "author_email": "otupman@antillion.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Topic :: System :: Software Distribution", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "arundeckrun\r\n===========\r\n\r\n|codecov.io|\r\n\r\n|wercker status|\r\n\r\nA fork of the client library written in Python to interact with the\r\nRundeck API, the majority of which was created by Mark LaPerriere.\r\n\r\nThe fork exists mostly because the environment Antillion use it requires\r\nit to be hosted on pypi, so updates must be pushed quickly. In addition,\r\nthe requirement to run tests against a live Rundeck is a no-no.\r\n\r\nRundeck (API) version compatibility:\r\n\r\nSome calls are under active use/development, primarily:\r\n\r\n-  Job imports: API v1+\r\n-  Project archive imports: API v14+\r\n\r\nAll other calls *should* work correctly as long as they are not\r\ndeprecated or if Rundeck fail to correctly implement backwards\r\ncompatibility.\r\n\r\nTarget python version: 2.7 Should work (but not tested aagainst): 3\r\n\r\nInstallation\r\n============\r\n\r\npip install arundeckrun\r\n\r\nUse\r\n---\r\n\r\n::\r\n\r\n    >>> from rundeck.client import Rundeck\r\n    >>> rd = Rundeck('rundeck.server.com', api_token='SECRET_API_TOKEN')\r\n    >>> rd.list_projects()\r\n    [{\r\n        'description': None,\r\n        'name': 'TestProject',\r\n        'resources': {'providerURL': 'http://localhost:8000/resources.xml'},\r\n    }]\r\n    >>> rd.list_jobs('TestProject')\r\n    [{'description': 'Hello World!',\r\n      'group': None,\r\n      'id': 'a6e1e0f7-ad32-4b93-ba2c-9387be06a146',\r\n      'name': 'HelloWorld',\r\n      'project': 'TestProject'}]\r\n    >>> rd.run_job('a6e1e0f7-ad32-4b93-ba2c-9387be06a146', argString={'from':'arundeckrun'})\r\n    {'argstring': '-from arundeckrun',\r\n     'date-started': datetime.datetime(2013, 7, 11, 18, 4, 24),\r\n     'description': 'Plugin[localexec, nodeStep: true]',\r\n     'href': 'http://rundeck.server.com/execution/follow/123',\r\n     'id': '123',\r\n     'job': None,\r\n     'status': 'running',\r\n     'user': 'arundeckrun'}\r\n\r\nTests\r\n=====\r\n\r\nUnit tests\r\n----------\r\n\r\nUnit tests are performed via tox.\r\n\r\nTo install tox and then run the tests:\r\n\r\n::\r\n\r\n    pip install tox\r\n    tox\r\n\r\nIntegration tests\r\n-----------------\r\n\r\n*Note:* currently the integrations are not up-to-date and are not under\r\ncontinous integration. Soon though\u2026\r\n\r\nRunning the tests requires a running Rundeck server (the Rundeck\r\nstandalone jar works well) and an API token for said Rundeck server.\r\n\r\nYou\u2019ll have to at least set the API token environment variable of\r\n``RUNDECK_API_TOKEN`` but there are other environment variables to be\r\naware of. The list is below and can be found at the head of the\r\ntests/\\_\\_init\\_\\_.py file. They should be fairly self-explanatory (OK,\r\nRUNDECK\\_PROTOCOL might not be self-explanatory\u2026 use either \u2018http\u2019 or\r\n\u2018https\u2019 there).\r\n\r\n.. code-block:: bash\r\n\r\n::\r\n\r\n    RUNDECK_API_TOKEN\r\n    RUNDECK_SERVER\r\n    RUNDECK_PORT\r\n    RUNDECK_PROTOCOL\r\n\r\nNext clone the repo.\r\n\r\n.. code-block:: bash\r\n\r\n::\r\n\r\n    git clone https://github.com/marklap/arundeckrun\r\n\r\n.. note:: act\r\n\r\n.. |codecov.io| image:: https://codecov.io/github/Antillion/rundeckrun/coverage.svg?branch=master\r\n   :target: https://codecov.io/github/Antillion/rundeckrun?branch=master\r\n.. |wercker status| image:: https://app.wercker.com/status/57e663b27aba00b9b7aabe4ea7b8208a/m/master\r\n   :target: https://app.wercker.com/project/bykey/57e663b27aba00b9b7aabe4ea7b8208a", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/Antillion/arundeckrun/archive/0.2.3.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/antillion/arundeckrun", "keywords": "", "license": "http://creativecommons.org/licenses/by-sa/3.0/", "maintainer": "", "maintainer_email": "", "name": "arundeckrun", "package_url": "https://pypi.org/project/arundeckrun/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/arundeckrun/", "project_urls": {"Download": "https://github.com/Antillion/arundeckrun/archive/0.2.3.zip", "Homepage": "https://github.com/antillion/arundeckrun"}, "release_url": "https://pypi.org/project/arundeckrun/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "A Rundeck API Python client", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            arundeckrun\n<br>===========\n<br>\n<br>|codecov.io|\n<br>\n<br>|wercker status|\n<br>\n<br>A fork of the client library written in Python to interact with the\n<br>Rundeck API, the majority of which was created by Mark LaPerriere.\n<br>\n<br>The fork exists mostly because the environment Antillion use it requires\n<br>it to be hosted on pypi, so updates must be pushed quickly. In addition,\n<br>the requirement to run tests against a live Rundeck is a no-no.\n<br>\n<br>Rundeck (API) version compatibility:\n<br>\n<br>Some calls are under active use/development, primarily:\n<br>\n<br>-  Job imports: API v1+\n<br>-  Project archive imports: API v14+\n<br>\n<br>All other calls *should* work correctly as long as they are not\n<br>deprecated or if Rundeck fail to correctly implement backwards\n<br>compatibility.\n<br>\n<br>Target python version: 2.7 Should work (but not tested aagainst): 3\n<br>\n<br>Installation\n<br>============\n<br>\n<br>pip install arundeckrun\n<br>\n<br>Use\n<br>---\n<br>\n<br>::\n<br>\n<br>    &gt;&gt;&gt; from rundeck.client import Rundeck\n<br>    &gt;&gt;&gt; rd = Rundeck('rundeck.server.com', api_token='SECRET_API_TOKEN')\n<br>    &gt;&gt;&gt; rd.list_projects()\n<br>    [{\n<br>        'description': None,\n<br>        'name': 'TestProject',\n<br>        'resources': {'providerURL': 'http://localhost:8000/resources.xml'},\n<br>    }]\n<br>    &gt;&gt;&gt; rd.list_jobs('TestProject')\n<br>    [{'description': 'Hello World!',\n<br>      'group': None,\n<br>      'id': 'a6e1e0f7-ad32-4b93-ba2c-9387be06a146',\n<br>      'name': 'HelloWorld',\n<br>      'project': 'TestProject'}]\n<br>    &gt;&gt;&gt; rd.run_job('a6e1e0f7-ad32-4b93-ba2c-9387be06a146', argString={'from':'arundeckrun'})\n<br>    {'argstring': '-from arundeckrun',\n<br>     'date-started': datetime.datetime(2013, 7, 11, 18, 4, 24),\n<br>     'description': 'Plugin[localexec, nodeStep: true]',\n<br>     'href': 'http://rundeck.server.com/execution/follow/123',\n<br>     'id': '123',\n<br>     'job': None,\n<br>     'status': 'running',\n<br>     'user': 'arundeckrun'}\n<br>\n<br>Tests\n<br>=====\n<br>\n<br>Unit tests\n<br>----------\n<br>\n<br>Unit tests are performed via tox.\n<br>\n<br>To install tox and then run the tests:\n<br>\n<br>::\n<br>\n<br>    pip install tox\n<br>    tox\n<br>\n<br>Integration tests\n<br>-----------------\n<br>\n<br>*Note:* currently the integrations are not up-to-date and are not under\n<br>continous integration. Soon though\u2026\n<br>\n<br>Running the tests requires a running Rundeck server (the Rundeck\n<br>standalone jar works well) and an API token for said Rundeck server.\n<br>\n<br>You\u2019ll have to at least set the API token environment variable of\n<br>``RUNDECK_API_TOKEN`` but there are other environment variables to be\n<br>aware of. The list is below and can be found at the head of the\n<br>tests/\\_\\_init\\_\\_.py file. They should be fairly self-explanatory (OK,\n<br>RUNDECK\\_PROTOCOL might not be self-explanatory\u2026 use either \u2018http\u2019 or\n<br>\u2018https\u2019 there).\n<br>\n<br>.. code-block:: bash\n<br>\n<br>::\n<br>\n<br>    RUNDECK_API_TOKEN\n<br>    RUNDECK_SERVER\n<br>    RUNDECK_PORT\n<br>    RUNDECK_PROTOCOL\n<br>\n<br>Next clone the repo.\n<br>\n<br>.. code-block:: bash\n<br>\n<br>::\n<br>\n<br>    git clone https://github.com/marklap/arundeckrun\n<br>\n<br>.. note:: act\n<br>\n<br>.. |codecov.io| image:: https://codecov.io/github/Antillion/rundeckrun/coverage.svg?branch=master\n<br>   :target: https://codecov.io/github/Antillion/rundeckrun?branch=master\n<br>.. |wercker status| image:: https://app.wercker.com/status/57e663b27aba00b9b7aabe4ea7b8208a/m/master\n<br>   :target: https://app.wercker.com/project/bykey/57e663b27aba00b9b7aabe4ea7b8208a\n          </div>"}, "last_serial": 2061839, "releases": {"0.2.3": [{"comment_text": "", "digests": {"md5": "ec8d04bfd47fbb6cbff422734110b5c8", "sha256": "457331e2dda78133c76d6db014039dbb9d303e71728e8529d211f25b441dbcf9"}, "downloads": -1, "filename": "arundeckrun-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ec8d04bfd47fbb6cbff422734110b5c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25171, "upload_time": "2016-04-13T13:28:24", "upload_time_iso_8601": "2016-04-13T13:28:24.033545Z", "url": "https://files.pythonhosted.org/packages/5b/0d/4c65e171824d12d24f27443d6e9e4c8d078720e4dfaa7f5086f7e88a1478/arundeckrun-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec8d04bfd47fbb6cbff422734110b5c8", "sha256": "457331e2dda78133c76d6db014039dbb9d303e71728e8529d211f25b441dbcf9"}, "downloads": -1, "filename": "arundeckrun-0.2.3.tar.gz", "has_sig": false, "md5_digest": "ec8d04bfd47fbb6cbff422734110b5c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25171, "upload_time": "2016-04-13T13:28:24", "upload_time_iso_8601": "2016-04-13T13:28:24.033545Z", "url": "https://files.pythonhosted.org/packages/5b/0d/4c65e171824d12d24f27443d6e9e4c8d078720e4dfaa7f5086f7e88a1478/arundeckrun-0.2.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:07 2020"}