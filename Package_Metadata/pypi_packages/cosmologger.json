{"info": {"author": "SamHDev", "author_email": "sam02h.huddart@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Cosmo Logger\nA Simple yet Nicely formatted Logger for all your Logging Needs. Made for the Cosmo Project\n\n## Key Features\n\n * Simple to Use. \n * Supports Colors\n * Configurable Styles\n\n\n\n## Installation\nYou can install via python's `pip` module:\n\nInstall with Offical Python Package Index:\n```bash\npython3 -m pip install cosmologger\n```\nor with this Git Respiratory\n```bash\npython3 -m pip install git+https://github.com/SamHDev/cosmologger.git\n```\n*Note for Noobies: If `python3` work then use `python`*\n\n\n\n## Usage\n\n##### Importing the Library\n\nYou can import the library with the following statement:\n```python\nimport cosmologger\n```\n\n##### Creating a Logging Object\n\nTo Start logging, create a logger object. \nThis can be placed in the module or in a class so it can be accessed around the project.\n```python\nlogger = cosmologger.Logger()\n```\n\nThe Logger Object can be created with options such `debug` and `app_name` as shown below: \n```python\nlogger = cosmologger.Logger(\n    debug = True,             # Enables Debug Print\n    app_name = \"CORE APP\",    # Set App Name to Print\n    style = None,             # Set Style Formating (Format Dict)\n    color = None              # Enable Color Print\n)\n```\n\n##### Logging Example\n\nTo output messages to the logger/console you can call the many functions found in the Logger Class.\n\nHere is a simple Example of each Method.\n\n```python\nlogger.info(\"This a 'Info' Message\")\nlogger.ok(\"This a 'Ok' Message\")\nlogger.warn(\"This a 'Warn' Message\")\nlogger.error(\"This a 'Error' Message\")\nlogger.fatal(\"This a 'Fatal' Message\")\nlogger.debug(\"This a 'Debug' Message\")\nlogger(\"This a 'Debug' Message but Simpler\")\nlogger.log(\"TEST\", \"This is a Custom Logging Output Type\")\n```\nThe above code would produce the resulting output:\n```\nmain>  10:03:18 [INFO] This a 'Info' Message\nmain>  10:03:18 [-OK-] This a 'Ok' Message\nmain>  10:03:18 [WARN] This a 'Warn' Message\nmain>  10:03:18 [ERRR] This a 'Error' Message\nmain>  10:03:18 [FATAL] This a 'Fatal' Message\nmain>  10:03:18 [Debug] This a 'Debug' Message\nmain>  10:03:18 [Debug] This a 'Debug' Message but Simpler\nmain>  10:03:18 [TEST] This is a Custom Logging Output Type\n```\n\n##### Logging Methods\n\n| Type | Output | Methods |\n| --- | --- | --- |\n| Info | `[INFO]` | `Logger.info(msg)` |\n| Ok | `[-OK-]` | `Logger.ok(msg)` |\n| Warning | `[WARN]` | `Logger.warn(msg)` `Logger.warning(msg)` |\n| Error | `[ERROR]` | `Logger.error(msg)` |\n| Fatal | `[FATL]` | `Logger.fatal(msg)` `Logger.critical(msg)` |\n| Debug | `[DBUG]` | `Logger.debug(msg)` `Logger(msg)` |\n\n###### Custom Logging\n\nCustom Logging Types is a simple as so:\n\n```python\nlogging.log(\"Custom Type\", \"Message\")\n```\n\n##### Sub Loggers (For Multiple Classes/Modules)\n\nA SubLogger can be used for classes/modules across large projects. \nThe `cosmoLogger.SubLogger` is a subclass of `cosmoLogger.Logger` and contains all the methods\nHowever, the class requires the `app_name` parameter and has the optinal `parent` paramater that\ncopies the settings from the 'parent' Logger Object.\n\nIt can be used like so:\n```python\nsublogger = logger.SubLogger(\"SUB APP\", parent=logger)\n```\n\n## License and Attributes\n\nCreated by Sam Huddart under alias [SamHDev](https://github.com/SamHDev/) for the [Blume Open Source Project](https://www.youtube.com/watch?v=oHg5SJYRHA0). `SamHDev/cosmologger` is licensed under the GNU General Public License v3.0 and is Open-Source as seen in [LICENSE](LICENSE). Commercial use, Modification and Distribution are permmited. Although credit is not necessary, it is much obliged. If you do wish to credit the author, please link the [respiratory](https://github.com/SamHDev/tcpnonblock/) and the author at [github](https://github.com/SamHDev/) or [website](https://samhdev.com). Thank you for using our work.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SamHDev/cosmologger/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "cosmologger", "package_url": "https://pypi.org/project/cosmologger/", "platform": "", "project_url": "https://pypi.org/project/cosmologger/", "project_urls": {"Homepage": "https://github.com/SamHDev/cosmologger/"}, "release_url": "https://pypi.org/project/cosmologger/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A Nicely formatted Logger for the Cosmo Project", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Cosmo Logger</h1>\n<p>A Simple yet Nicely formatted Logger for all your Logging Needs. Made for the Cosmo Project</p>\n<h2>Key Features</h2>\n<ul>\n<li>Simple to Use.</li>\n<li>Supports Colors</li>\n<li>Configurable Styles</li>\n</ul>\n<h2>Installation</h2>\n<p>You can install via python's <code>pip</code> module:</p>\n<p>Install with Offical Python Package Index:</p>\n<pre>python3 -m pip install cosmologger\n</pre>\n<p>or with this Git Respiratory</p>\n<pre>python3 -m pip install git+https://github.com/SamHDev/cosmologger.git\n</pre>\n<p><em>Note for Noobies: If <code>python3</code> work then use <code>python</code></em></p>\n<h2>Usage</h2>\n<h5>Importing the Library</h5>\n<p>You can import the library with the following statement:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cosmologger</span>\n</pre>\n<h5>Creating a Logging Object</h5>\n<p>To Start logging, create a logger object.\nThis can be placed in the module or in a class so it can be accessed around the project.</p>\n<pre><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">cosmologger</span><span class=\"o\">.</span><span class=\"n\">Logger</span><span class=\"p\">()</span>\n</pre>\n<p>The Logger Object can be created with options such <code>debug</code> and <code>app_name</code> as shown below:</p>\n<pre><span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">cosmologger</span><span class=\"o\">.</span><span class=\"n\">Logger</span><span class=\"p\">(</span>\n    <span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>             <span class=\"c1\"># Enables Debug Print</span>\n    <span class=\"n\">app_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"CORE APP\"</span><span class=\"p\">,</span>    <span class=\"c1\"># Set App Name to Print</span>\n    <span class=\"n\">style</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>             <span class=\"c1\"># Set Style Formating (Format Dict)</span>\n    <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>              <span class=\"c1\"># Enable Color Print</span>\n<span class=\"p\">)</span>\n</pre>\n<h5>Logging Example</h5>\n<p>To output messages to the logger/console you can call the many functions found in the Logger Class.</p>\n<p>Here is a simple Example of each Method.</p>\n<pre><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"This a 'Info' Message\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">(</span><span class=\"s2\">\"This a 'Ok' Message\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warn</span><span class=\"p\">(</span><span class=\"s2\">\"This a 'Warn' Message\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">\"This a 'Error' Message\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">fatal</span><span class=\"p\">(</span><span class=\"s2\">\"This a 'Fatal' Message\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s2\">\"This a 'Debug' Message\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"p\">(</span><span class=\"s2\">\"This a 'Debug' Message but Simpler\"</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s2\">\"TEST\"</span><span class=\"p\">,</span> <span class=\"s2\">\"This is a Custom Logging Output Type\"</span><span class=\"p\">)</span>\n</pre>\n<p>The above code would produce the resulting output:</p>\n<pre><code>main&gt;  10:03:18 [INFO] This a 'Info' Message\nmain&gt;  10:03:18 [-OK-] This a 'Ok' Message\nmain&gt;  10:03:18 [WARN] This a 'Warn' Message\nmain&gt;  10:03:18 [ERRR] This a 'Error' Message\nmain&gt;  10:03:18 [FATAL] This a 'Fatal' Message\nmain&gt;  10:03:18 [Debug] This a 'Debug' Message\nmain&gt;  10:03:18 [Debug] This a 'Debug' Message but Simpler\nmain&gt;  10:03:18 [TEST] This is a Custom Logging Output Type\n</code></pre>\n<h5>Logging Methods</h5>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Output</th>\n<th>Methods</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Info</td>\n<td><code>[INFO]</code></td>\n<td><code>Logger.info(msg)</code></td>\n</tr>\n<tr>\n<td>Ok</td>\n<td><code>[-OK-]</code></td>\n<td><code>Logger.ok(msg)</code></td>\n</tr>\n<tr>\n<td>Warning</td>\n<td><code>[WARN]</code></td>\n<td><code>Logger.warn(msg)</code> <code>Logger.warning(msg)</code></td>\n</tr>\n<tr>\n<td>Error</td>\n<td><code>[ERROR]</code></td>\n<td><code>Logger.error(msg)</code></td>\n</tr>\n<tr>\n<td>Fatal</td>\n<td><code>[FATL]</code></td>\n<td><code>Logger.fatal(msg)</code> <code>Logger.critical(msg)</code></td>\n</tr>\n<tr>\n<td>Debug</td>\n<td><code>[DBUG]</code></td>\n<td><code>Logger.debug(msg)</code> <code>Logger(msg)</code></td>\n</tr></tbody></table>\n<h6>Custom Logging</h6>\n<p>Custom Logging Types is a simple as so:</p>\n<pre><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Custom Type\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Message\"</span><span class=\"p\">)</span>\n</pre>\n<h5>Sub Loggers (For Multiple Classes/Modules)</h5>\n<p>A SubLogger can be used for classes/modules across large projects.\nThe <code>cosmoLogger.SubLogger</code> is a subclass of <code>cosmoLogger.Logger</code> and contains all the methods\nHowever, the class requires the <code>app_name</code> parameter and has the optinal <code>parent</code> paramater that\ncopies the settings from the 'parent' Logger Object.</p>\n<p>It can be used like so:</p>\n<pre><span class=\"n\">sublogger</span> <span class=\"o\">=</span> <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">SubLogger</span><span class=\"p\">(</span><span class=\"s2\">\"SUB APP\"</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">logger</span><span class=\"p\">)</span>\n</pre>\n<h2>License and Attributes</h2>\n<p>Created by Sam Huddart under alias <a href=\"https://github.com/SamHDev/\" rel=\"nofollow\">SamHDev</a> for the <a href=\"https://www.youtube.com/watch?v=oHg5SJYRHA0\" rel=\"nofollow\">Blume Open Source Project</a>. <code>SamHDev/cosmologger</code> is licensed under the GNU General Public License v3.0 and is Open-Source as seen in <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a>. Commercial use, Modification and Distribution are permmited. Although credit is not necessary, it is much obliged. If you do wish to credit the author, please link the <a href=\"https://github.com/SamHDev/tcpnonblock/\" rel=\"nofollow\">respiratory</a> and the author at <a href=\"https://github.com/SamHDev/\" rel=\"nofollow\">github</a> or <a href=\"https://samhdev.com\" rel=\"nofollow\">website</a>. Thank you for using our work.</p>\n\n          </div>"}, "last_serial": 5764189, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1fc8229a791d4b158bba2aade052a3c6", "sha256": "180264b73e85791b66b579517e4d8b7a810d3898deff43b81f07904470b62548"}, "downloads": -1, "filename": "cosmologger-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1fc8229a791d4b158bba2aade052a3c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16611, "upload_time": "2019-08-31T10:59:11", "upload_time_iso_8601": "2019-08-31T10:59:11.527337Z", "url": "https://files.pythonhosted.org/packages/ee/bf/892e15779753bb84ef62ba523ca8b2f03e8c63cec1c32adbcc1e114c7416/cosmologger-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a3ad95e70a261d5bb618cf3c04f5c0b", "sha256": "d27fb08803abb5d73d059df6e6d2a6e089bb2cda5afc5bfc2f07782c170c8ab7"}, "downloads": -1, "filename": "cosmologger-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8a3ad95e70a261d5bb618cf3c04f5c0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4199, "upload_time": "2019-08-31T10:59:14", "upload_time_iso_8601": "2019-08-31T10:59:14.171053Z", "url": "https://files.pythonhosted.org/packages/b8/b0/892ae682ac1b592671034804bbb18d2e8b69706127cb469d3bb52cb6900e/cosmologger-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b4bc769b072def847fca328b1bd01f94", "sha256": "d606b0792c91fdf3c64531fa624f3f73db67ac53fc82c2a827c3d8ddb17f8d61"}, "downloads": -1, "filename": "cosmologger-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b4bc769b072def847fca328b1bd01f94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16609, "upload_time": "2019-08-31T12:10:36", "upload_time_iso_8601": "2019-08-31T12:10:36.341503Z", "url": "https://files.pythonhosted.org/packages/41/b8/4c44222e864f915b82a613d7592ef2ca97c92a73d1360435194a52826e71/cosmologger-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50e472dfea95f1c922d4ed78de826878", "sha256": "75048477d4af3e1c4edc0a1eb6b444c6ad170148ce5fcda186c3493ca6c2605d"}, "downloads": -1, "filename": "cosmologger-1.0.0.tar.gz", "has_sig": false, "md5_digest": "50e472dfea95f1c922d4ed78de826878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4188, "upload_time": "2019-08-31T12:10:39", "upload_time_iso_8601": "2019-08-31T12:10:39.126629Z", "url": "https://files.pythonhosted.org/packages/0e/c6/efe80d11176d510ac80a32f28521eee6445c4332a728f4369fd38ad9b827/cosmologger-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b4bc769b072def847fca328b1bd01f94", "sha256": "d606b0792c91fdf3c64531fa624f3f73db67ac53fc82c2a827c3d8ddb17f8d61"}, "downloads": -1, "filename": "cosmologger-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b4bc769b072def847fca328b1bd01f94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16609, "upload_time": "2019-08-31T12:10:36", "upload_time_iso_8601": "2019-08-31T12:10:36.341503Z", "url": "https://files.pythonhosted.org/packages/41/b8/4c44222e864f915b82a613d7592ef2ca97c92a73d1360435194a52826e71/cosmologger-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50e472dfea95f1c922d4ed78de826878", "sha256": "75048477d4af3e1c4edc0a1eb6b444c6ad170148ce5fcda186c3493ca6c2605d"}, "downloads": -1, "filename": "cosmologger-1.0.0.tar.gz", "has_sig": false, "md5_digest": "50e472dfea95f1c922d4ed78de826878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4188, "upload_time": "2019-08-31T12:10:39", "upload_time_iso_8601": "2019-08-31T12:10:39.126629Z", "url": "https://files.pythonhosted.org/packages/0e/c6/efe80d11176d510ac80a32f28521eee6445c4332a728f4369fd38ad9b827/cosmologger-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:58 2020"}