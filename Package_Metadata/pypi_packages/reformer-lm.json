{"info": {"author": "Zachary Bloss", "author_email": "zacharybloss@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Reformer\na Pytorch implementation of the Reformer Network (https://openreview.net/pdf?id=rkgNKkHtvB)\n\nMuch of this code base is loosely translated from the jax implementation found here from Google: [https://github.com/google/trax/blob/master/trax/models/research/reformer.py](https://github.com/google/trax/blob/master/trax/models/research/reformer.py)\n\n# How to use\nAll of the hard work has been taken care of, all you need to do is instantiate the model!\n\n```\nfrom reformer_lm.reformer_lm import ReformerLM\nimport torch\n\ntest = torch.rand((4, 4, 64))\nmodel = ReformerLM(\n    vocab_size=300000,\n    d_in=test.shape[-2],\n    d_out=test.shape[-1],\n    n_layers=6,\n    n_heads=1,\n    attn_k=test.shape[-1],\n    attn_v=test.shape[-1],\n)\n\noutput = model(test)\nprint(output)\n\n```\n\nThis model is still in testing, and will therefore continue to see updates. PRs are welcomed! Feel free to take advantage of the Docker container for development. I have been working in notebooks to test code with the original paper, and then I refactor my code back into the package\n\n\n[![paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=7TZ7CL23G7BCQ&currency_code=USD&source=url)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zbloss/reformer_lm", "keywords": "Reformer,ReverseNetwork,Efficient Transformer", "license": "", "maintainer": "", "maintainer_email": "", "name": "reformer-lm", "package_url": "https://pypi.org/project/reformer-lm/", "platform": "", "project_url": "https://pypi.org/project/reformer-lm/", "project_urls": {"Homepage": "https://github.com/zbloss/reformer_lm"}, "release_url": "https://pypi.org/project/reformer-lm/1.0.1/", "requires_dist": ["numpy (>=1.18.0)", "torch (>=1.3)"], "requires_python": "", "summary": "a Pytorch implementation of the Reformer network (https://openreview.net/forum?id=rkgNKkHtvB)", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Reformer</h1>\n<p>a Pytorch implementation of the Reformer Network (<a href=\"https://openreview.net/pdf?id=rkgNKkHtvB\" rel=\"nofollow\">https://openreview.net/pdf?id=rkgNKkHtvB</a>)</p>\n<p>Much of this code base is loosely translated from the jax implementation found here from Google: <a href=\"https://github.com/google/trax/blob/master/trax/models/research/reformer.py\" rel=\"nofollow\">https://github.com/google/trax/blob/master/trax/models/research/reformer.py</a></p>\n<h1>How to use</h1>\n<p>All of the hard work has been taken care of, all you need to do is instantiate the model!</p>\n<pre><code>from reformer_lm.reformer_lm import ReformerLM\nimport torch\n\ntest = torch.rand((4, 4, 64))\nmodel = ReformerLM(\n    vocab_size=300000,\n    d_in=test.shape[-2],\n    d_out=test.shape[-1],\n    n_layers=6,\n    n_heads=1,\n    attn_k=test.shape[-1],\n    attn_v=test.shape[-1],\n)\n\noutput = model(test)\nprint(output)\n\n</code></pre>\n<p>This model is still in testing, and will therefore continue to see updates. PRs are welcomed! Feel free to take advantage of the Docker container for development. I have been working in notebooks to test code with the original paper, and then I refactor my code back into the package</p>\n<p><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=7TZ7CL23G7BCQ&amp;currency_code=USD&amp;source=url\" rel=\"nofollow\"><img alt=\"paypal\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac49730821d272ac3a4d4e7608ed886a10858e1b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e61746543435f4c472e676966\"></a></p>\n\n          </div>"}, "last_serial": 6383609, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a2de8dfee6fec2114d8c2d08beacc455", "sha256": "594ce4ad277ca104f78e218f1dd878e917e7a5903e025290aef5b667f4c3b26f"}, "downloads": -1, "filename": "reformer_lm-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a2de8dfee6fec2114d8c2d08beacc455", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7723, "upload_time": "2020-01-01T22:42:24", "upload_time_iso_8601": "2020-01-01T22:42:24.013547Z", "url": "https://files.pythonhosted.org/packages/c7/e8/d54b1a9bc1b1a432edabd7ba631d75bf98fbd4ba43ec8775bba6cdbf0939/reformer_lm-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2db14b8dca1ec44b9511322832061918", "sha256": "7cae226bb9eb07e74dbf8b643b595fadf6bf6166f727f4fc46f1d4929892bb90"}, "downloads": -1, "filename": "reformer_lm-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2db14b8dca1ec44b9511322832061918", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7641, "upload_time": "2020-01-01T22:47:31", "upload_time_iso_8601": "2020-01-01T22:47:31.105225Z", "url": "https://files.pythonhosted.org/packages/7a/d3/75ecb2cf438a06bd8031dd427427e46f6229df37b262fe9dbdcf6bff454c/reformer_lm-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a23402e347c397adab2a3ba69761af91", "sha256": "e607623fc53b06d2ad459c467a63fa2708e5e0e05aa7909adf309a6347820f37"}, "downloads": -1, "filename": "reformer_lm-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a23402e347c397adab2a3ba69761af91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5643, "upload_time": "2020-01-01T22:47:32", "upload_time_iso_8601": "2020-01-01T22:47:32.135143Z", "url": "https://files.pythonhosted.org/packages/29/28/557c9269d29bd780fbda91e46d39ae03ab30b38c8be2f8f9610a278b8255/reformer_lm-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2db14b8dca1ec44b9511322832061918", "sha256": "7cae226bb9eb07e74dbf8b643b595fadf6bf6166f727f4fc46f1d4929892bb90"}, "downloads": -1, "filename": "reformer_lm-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2db14b8dca1ec44b9511322832061918", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7641, "upload_time": "2020-01-01T22:47:31", "upload_time_iso_8601": "2020-01-01T22:47:31.105225Z", "url": "https://files.pythonhosted.org/packages/7a/d3/75ecb2cf438a06bd8031dd427427e46f6229df37b262fe9dbdcf6bff454c/reformer_lm-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a23402e347c397adab2a3ba69761af91", "sha256": "e607623fc53b06d2ad459c467a63fa2708e5e0e05aa7909adf309a6347820f37"}, "downloads": -1, "filename": "reformer_lm-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a23402e347c397adab2a3ba69761af91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5643, "upload_time": "2020-01-01T22:47:32", "upload_time_iso_8601": "2020-01-01T22:47:32.135143Z", "url": "https://files.pythonhosted.org/packages/29/28/557c9269d29bd780fbda91e46d39ae03ab30b38c8be2f8f9610a278b8255/reformer_lm-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:23 2020"}