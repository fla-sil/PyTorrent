{"info": {"author": "Kris Seraphine", "author_email": "kris.seraphine@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Terminals"], "description": "# click-keyring\n\n**click-keyring** provides a customized [click](https://click.palletsprojects.com) password option decorator to store and retrieve credentials using [keyring](https://keyring.readthedocs.io/en/latest/).\n\nWhen a command is decorated with `click-keyring`:\n* `click-keyring` generates a keyring service name using the command name by default (this can be customized).\n* `click-keyring` uses the service name to look up an existing password using keyring.\n* If an existing password is found, it is used as the param value.\n* If not found, the user is prompted to enter a password.\n* The new password is then saved to the keyring backend.\n\n## Example\nSee the examples folder for additional examples.\n\n```python\nimport click\nfrom click_keyring import keyring_option\n\n\n@keyring_option('-p', '--password')\n@click.option('-u', '--username', prompt='Username')\n@click.command()\ndef simple_cmd(username, password):\n    \"\"\"\n    Example of click_keyring using defaults.\n\n    The password will be saved to keyring with service name\n    matching the click command name (in this case \"simple_cmd\").\n\n    This can be overridden by setting `prefix` and/or `keyring_option`\n     on the decorator.\n    \"\"\"\n    click.echo()\n    click.echo('** Command Params. User: {}, Password: {}'.format(username, password))\n\n\nif __name__ == '__main__':\n    simple_cmd()\n```\n\nWhen executed the first time, both username and password will be prompted.\n\n```bash\n~/g/c/examples python ./simple.py\nUsername: testuser\nPassword:\n\n** Command Params. User: testuser, Password: testpw\n~/g/c/examples\n```\n\nSubsequent executions using the same username will retrieve the password from the keyring backend.\n\n```bash\n~/g/c/examples python ./simple.py\nUsername: testuser\n\n** Command Params. User: testuser, Password: testpw\n~/g/c/examples\n```\n\n## Service Names\nBy default, the value of the `click.Command.name` attribute is used as the service name.  \nThe name is based on the function name or, if provided, the name argument on the `@click.command` decorator.\n\n```python\n@keyring_option('-p', '--password')\n@click.option('-u', '--username', prompt='Username')\n@click.command()\ndef simple_cmd(username, password):\n    # service name will be the value of `simple_cmd.name`\n    # This will likely be \"simple-cmd\" as click replaces underscores with hyphens.\n    pass\n```\n\nA custom service name can be specified using the `prefix` argument.\n\n```python\n@keyring_option('-p', '--password', prefix='customnservice')\n@click.option('-u', '--username', prompt='Username')\n@click.command()\ndef simple_cmd(username, password):\n    # service name will be \"customnservice\"\n    pass\n```\n\nOther options on the command can be included in the service name using the `other_options` argument. \nThis is an iterable of option names.  The values provided for those options is appended to the service name. \n\n```python\n@keyring_option('-p', '--password', prefix='customnservice', other_options=('hostname',))\n@click.option('-n', '--hostname')\n@click.option('-u', '--username', prompt='Username')\n@click.command()\ndef simple_cmd(username, hostname, password):\n    # service name will be \"customnservice_[value provided for hostname]\"\n    pass\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/baryonyx5/click-keyring", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "click-keyring", "package_url": "https://pypi.org/project/click-keyring/", "platform": "", "project_url": "https://pypi.org/project/click-keyring/", "project_urls": {"Homepage": "https://github.com/baryonyx5/click-keyring"}, "release_url": "https://pypi.org/project/click-keyring/0.1.0/", "requires_dist": ["cryptography (>=2.9,<3.0)", "click (>=7.1.1,<8.0.0)", "keyring (>=21.0.0,<22.0.0)"], "requires_python": ">=3.6,<4.0", "summary": "A click option decorator to store and retrieve credentials using keyring.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>click-keyring</h1>\n<p><strong>click-keyring</strong> provides a customized <a href=\"https://click.palletsprojects.com\" rel=\"nofollow\">click</a> password option decorator to store and retrieve credentials using <a href=\"https://keyring.readthedocs.io/en/latest/\" rel=\"nofollow\">keyring</a>.</p>\n<p>When a command is decorated with <code>click-keyring</code>:</p>\n<ul>\n<li><code>click-keyring</code> generates a keyring service name using the command name by default (this can be customized).</li>\n<li><code>click-keyring</code> uses the service name to look up an existing password using keyring.</li>\n<li>If an existing password is found, it is used as the param value.</li>\n<li>If not found, the user is prompted to enter a password.</li>\n<li>The new password is then saved to the keyring backend.</li>\n</ul>\n<h2>Example</h2>\n<p>See the examples folder for additional examples.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">click</span>\n<span class=\"kn\">from</span> <span class=\"nn\">click_keyring</span> <span class=\"kn\">import</span> <span class=\"n\">keyring_option</span>\n\n\n<span class=\"nd\">@keyring_option</span><span class=\"p\">(</span><span class=\"s1\">'-p'</span><span class=\"p\">,</span> <span class=\"s1\">'--password'</span><span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">option</span><span class=\"p\">(</span><span class=\"s1\">'-u'</span><span class=\"p\">,</span> <span class=\"s1\">'--username'</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"o\">=</span><span class=\"s1\">'Username'</span><span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_cmd</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Example of click_keyring using defaults.</span>\n\n<span class=\"sd\">    The password will be saved to keyring with service name</span>\n<span class=\"sd\">    matching the click command name (in this case \"simple_cmd\").</span>\n\n<span class=\"sd\">    This can be overridden by setting `prefix` and/or `keyring_option`</span>\n<span class=\"sd\">     on the decorator.</span>\n<span class=\"sd\">    \"\"\"</span>\n    <span class=\"n\">click</span><span class=\"o\">.</span><span class=\"n\">echo</span><span class=\"p\">()</span>\n    <span class=\"n\">click</span><span class=\"o\">.</span><span class=\"n\">echo</span><span class=\"p\">(</span><span class=\"s1\">'** Command Params. User: </span><span class=\"si\">{}</span><span class=\"s1\">, Password: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">simple_cmd</span><span class=\"p\">()</span>\n</pre>\n<p>When executed the first time, both username and password will be prompted.</p>\n<pre>~/g/c/examples python ./simple.py\nUsername: testuser\nPassword:\n\n** Command Params. User: testuser, Password: testpw\n~/g/c/examples\n</pre>\n<p>Subsequent executions using the same username will retrieve the password from the keyring backend.</p>\n<pre>~/g/c/examples python ./simple.py\nUsername: testuser\n\n** Command Params. User: testuser, Password: testpw\n~/g/c/examples\n</pre>\n<h2>Service Names</h2>\n<p>By default, the value of the <code>click.Command.name</code> attribute is used as the service name.<br>\nThe name is based on the function name or, if provided, the name argument on the <code>@click.command</code> decorator.</p>\n<pre><span class=\"nd\">@keyring_option</span><span class=\"p\">(</span><span class=\"s1\">'-p'</span><span class=\"p\">,</span> <span class=\"s1\">'--password'</span><span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">option</span><span class=\"p\">(</span><span class=\"s1\">'-u'</span><span class=\"p\">,</span> <span class=\"s1\">'--username'</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"o\">=</span><span class=\"s1\">'Username'</span><span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_cmd</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">):</span>\n    <span class=\"c1\"># service name will be the value of `simple_cmd.name`</span>\n    <span class=\"c1\"># This will likely be \"simple-cmd\" as click replaces underscores with hyphens.</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>A custom service name can be specified using the <code>prefix</code> argument.</p>\n<pre><span class=\"nd\">@keyring_option</span><span class=\"p\">(</span><span class=\"s1\">'-p'</span><span class=\"p\">,</span> <span class=\"s1\">'--password'</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'customnservice'</span><span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">option</span><span class=\"p\">(</span><span class=\"s1\">'-u'</span><span class=\"p\">,</span> <span class=\"s1\">'--username'</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"o\">=</span><span class=\"s1\">'Username'</span><span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_cmd</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">):</span>\n    <span class=\"c1\"># service name will be \"customnservice\"</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>Other options on the command can be included in the service name using the <code>other_options</code> argument.\nThis is an iterable of option names.  The values provided for those options is appended to the service name.</p>\n<pre><span class=\"nd\">@keyring_option</span><span class=\"p\">(</span><span class=\"s1\">'-p'</span><span class=\"p\">,</span> <span class=\"s1\">'--password'</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s1\">'customnservice'</span><span class=\"p\">,</span> <span class=\"n\">other_options</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'hostname'</span><span class=\"p\">,))</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">option</span><span class=\"p\">(</span><span class=\"s1\">'-n'</span><span class=\"p\">,</span> <span class=\"s1\">'--hostname'</span><span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">option</span><span class=\"p\">(</span><span class=\"s1\">'-u'</span><span class=\"p\">,</span> <span class=\"s1\">'--username'</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"o\">=</span><span class=\"s1\">'Username'</span><span class=\"p\">)</span>\n<span class=\"nd\">@click</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">simple_cmd</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">hostname</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">):</span>\n    <span class=\"c1\"># service name will be \"customnservice_[value provided for hostname]\"</span>\n    <span class=\"k\">pass</span>\n</pre>\n\n          </div>"}, "last_serial": 6966755, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d6c27542fbc47b30876e100064715c56", "sha256": "ad778259fbe12e75f3556dcf19220598a2044926ef246eb78b440e77e4f2d6a1"}, "downloads": -1, "filename": "click_keyring-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d6c27542fbc47b30876e100064715c56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4159, "upload_time": "2020-04-07T06:05:34", "upload_time_iso_8601": "2020-04-07T06:05:34.420610Z", "url": "https://files.pythonhosted.org/packages/fc/d9/92a4271261888aa51719cca8818f0d99f15c7e3a82fdce8b303c94fca065/click_keyring-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f65f7e37cf3bb6d653e4b3d0bbb3c36b", "sha256": "6d1b4ed9d9ff7d9f5beeeab19b78b248dee91d2d5dd9235143d43b3180bc73b0"}, "downloads": -1, "filename": "click-keyring-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f65f7e37cf3bb6d653e4b3d0bbb3c36b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4449, "upload_time": "2020-04-07T06:05:32", "upload_time_iso_8601": "2020-04-07T06:05:32.371582Z", "url": "https://files.pythonhosted.org/packages/c3/b5/5690c524bc226f5c5aed4327cf806812bfa4e02178f669c0d35d74a2687a/click-keyring-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d6c27542fbc47b30876e100064715c56", "sha256": "ad778259fbe12e75f3556dcf19220598a2044926ef246eb78b440e77e4f2d6a1"}, "downloads": -1, "filename": "click_keyring-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d6c27542fbc47b30876e100064715c56", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 4159, "upload_time": "2020-04-07T06:05:34", "upload_time_iso_8601": "2020-04-07T06:05:34.420610Z", "url": "https://files.pythonhosted.org/packages/fc/d9/92a4271261888aa51719cca8818f0d99f15c7e3a82fdce8b303c94fca065/click_keyring-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f65f7e37cf3bb6d653e4b3d0bbb3c36b", "sha256": "6d1b4ed9d9ff7d9f5beeeab19b78b248dee91d2d5dd9235143d43b3180bc73b0"}, "downloads": -1, "filename": "click-keyring-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f65f7e37cf3bb6d653e4b3d0bbb3c36b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 4449, "upload_time": "2020-04-07T06:05:32", "upload_time_iso_8601": "2020-04-07T06:05:32.371582Z", "url": "https://files.pythonhosted.org/packages/c3/b5/5690c524bc226f5c5aed4327cf806812bfa4e02178f669c0d35d74a2687a/click-keyring-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:02 2020"}