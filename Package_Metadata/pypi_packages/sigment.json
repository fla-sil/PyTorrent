{"info": {"author": "Edwin Onuonga", "author_email": "ed@eonu.net", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Unix", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "<p align=\"center\">\n    <h1 align=\"center\">Sigment</h1>\n</p>\n\n<p align=\"center\">\n    <em>An extensible data augmentation package for creating complex transformation pipelines for audio signals.</em>\n</p>\n\n<p align=\"center\">\n    <div align=\"center\">\n        <a href=\"https://pypi.org/project/sigment\">\n            <img src=\"https://img.shields.io/pypi/v/sigment?style=flat\" alt=\"PyPI\"/>\n        </a>\n        <a href=\"https://pypi.org/project/sigment\">\n            <img src=\"https://img.shields.io/pypi/pyversions/sigment?style=flat\" alt=\"PyPI - Python Version\"/>\n        </a>\n        <a href=\"https://raw.githubusercontent.com/eonu/sigment/master/LICENSE\">\n            <img src=\"https://img.shields.io/pypi/l/sigment?style=flat\" alt=\"PyPI - License\"/>\n        </a>\n        <a href=\"https://sigment.readthedocs.io/en/latest\">\n            <img src=\"https://readthedocs.org/projects/sigment/badge/?version=latest&style=flat\" alt=\"Read The Docs - Documentation\">\n        </a>\n        <a href=\"https://travis-ci.org/eonu/sigment\">\n            <img src=\"https://img.shields.io/travis/eonu/sigment?logo=travis&style=flat\" alt=\"Travis - Build\">\n        </a>\n    </div>\n</p>\n\n> **Disclaimer**: Although the core functionality of this package is fully implemented, it still requires proper unit testing.\n\n## What is data augmentation?\n\nData augmentation is the creation of artificial data from original data by typically applying a transformation, or multiple transformations, to the original data. It is a common method for improving the versatility of machine learning models, in addition to providing more training examples for datasets of limited size.\n\nIn image data for example, it is common to use horizontal and vertical flipping, random cropping, zooming and additive noise for augmentation. In audio, we can use other transformations such as pitch shifting and fading the signal in or out, but some image augmentation methods such as additive noise can also be used on audio data.\n\n### Supported augmentation methods\n\nSigment provides the following augmentation methods for both mono and stereo signals. More information about each can be found in the [documentation](https://sigment.readthedocs.io/en/latest):\n\n- [x] White Noise (Uniform, Gaussian and Laplacian)\n- [x] Time Stretching\n- [x] Pitch Shifting\n- [x] Edge Cropping\n- [x] Fading\n\n> **Soon**: Normalization, Random Cropping and Median Filtering\n\nIt is also possible to design your own augmentation methods using a simple `Transform` base class provided by Sigment.\n\n## Example\n\nSuppose we have the following stereo signal `F`:\n\n<p align=\"center\">\n    <img src=\"https://i.ibb.co/cbvgDkY/original.png\" alt=\"Original\">\n</p>\n\nWe can apply a pipeline of transformations to `F` to produce multiple augmented copies of it:\n\n<p align=\"center\">\n    <img src=\"https://i.ibb.co/bKjbZL2/augmented.png\" alt=\"Augmented\">\n</p>\n\n<details>\n<summary>\n    <b>Click here to see the code for the augmentation pipeline produces these signals!</b>\n</summary>\n<p>\n\n```python\nimport sigment as sig\n\n# Create a complex augmentation pipeline\ntransform = sig.Pipeline([\n    sig.Sometimes([\n        sig.OneOf([\n            sig.UniformWhiteNoise(upper=(0.1, 0.4)),\n            sig.GaussianWhiteNoise(scale=(0.01, 0.075)),\n            sig.LaplacianWhiteNoise(scale=(0.01, 0.075))\n        ])\n    ], p=0.65),\n    sig.SomeOf([\n        sig.EdgeCrop('start', crop_size=(0.05, 0.15)),\n        sig.EdgeCrop('end', crop_size=(0.05, 0.15))\n    ], n=(1, 2)),\n    sig.Sometimes([\n        sig.SomeOf([\n            sig.Fade('in', fade_size=(0.1, 0.2)),\n            sig.Fade('out', fade_size=(0.1, 0.2))\n        ], n=(1, 2))\n    ], p=0.5),\n    sig.TimeStretch(rate=(0.7, 1.3)),\n    sig.PitchShift(n_steps=(-0.25, 0.25)),\n])\n\n# Generate 25 augmentations of the signal F\nFs = transform.generate(F, n=25, sr=50)\n```\n\n</p>\n</details>\n\n> **Note**: The full code for this example can be found in the notebook [here](https://nbviewer.jupyter.org/github/eonu/sigment/blob/master/notebooks/README%20%28Example%29.ipynb).\n\n## Installation\n\nTo install Sigment from PyPI, you can use `pip`:\n\n```console\npip install sigment\n```\n\n## Components\n\nSigment provides two main components that can be used to construct augmentation pipelines:\n\n- **Transforms** (`sigment.transforms`): Used to apply a specific type of transformation to the audio data.\n\n- **Quantifiers** (`sigment.quantifiers`): Used to specify rules for how a sequence of transformations\nor nested quantifiers should be applied to augment the audio data.\n\nRead the [documentation](https://sigment.readthedocs.io/en/latest) and [example notebooks](https://nbviewer.jupyter.org/github/eonu/sigment/blob/master/notebooks/) for more information about the usage of both.\n\n## Acknowledgements\n\nSigment offers a familiar interface for transformations, taking inspiration from some other well-written augmentation libraries. Without the following libraries, the capabilities of Sigment would be very limited:\n\n- [aleju/**imgaug**](https://github.com/aleju/imgaug): _Image augmentation for machine learning experiments._\n- [makcedward/**nlpaug**](https://github.com/makcedward/nlpaug): _Data augmentation for NLP_\n- [albumentations-team/**albumentations**](https://github.com/albumentations-team/albumentations): _fast image augmentation library and easy to use wrapper around other libraries_\n- [iver56/**audiomentations**](https://github.com/iver56/audiomentations): _A Python library for audio data augmentation. Inspired by albumentations. Useful for machine learning._\n\n## Contributors\n\nAll contributions to this repository are greatly appreciated. Contribution guidelines can be found [here](/CONTRIBUTING.md).\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th align=\"center\">\n        <a href=\"https://github.com/eonu\">\n        <img src=\"https://avatars0.githubusercontent.com/u/24795571?s=460&v=4\" alt=\"Edwin Onuonga\" width=\"60px\">\n        <br/><sub><b>Edwin Onuonga</b></sub>\n        </a>\n        <br/>\n        <a href=\"mailto:ed@eonu.net\">\u2709\ufe0f</a>\n        <a href=\"https://eonu.net\">\ud83c\udf0d</a>\n\t\t\t</th>\n\t\t\t<!-- Add more <th></th> blocks for more contributors -->\n\t\t</tr>\n\t</thead>\n</table>\n\n---\n\n<p align=\"center\">\n  <b>Sigment</b> &copy; 2019-2020, Edwin Onuonga - Released under the <a href=\"https://opensource.org/licenses/MIT\">MIT</a> License.<br/>\n  <em>Authored and maintained by Edwin Onuonga.</em>\n</p>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eonu/sigment", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sigment", "package_url": "https://pypi.org/project/sigment/", "platform": "", "project_url": "https://pypi.org/project/sigment/", "project_urls": {"Bug Tracker": "https://github.com/eonu/sigment/issues", "Documentation": "https://sigment.readthedocs.io/en/latest", "Homepage": "https://github.com/eonu/sigment", "Source Code": "https://github.com/eonu/sigment"}, "release_url": "https://pypi.org/project/sigment/0.1.0a1/", "requires_dist": null, "requires_python": ">=3.5,<=3.8", "summary": "An extensible data augmentation package for creating complex transformation pipelines for audio signals.", "version": "0.1.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\">\n    </p><h1>Sigment</h1>\n<p></p>\n<p align=\"center\">\n    <em>An extensible data augmentation package for creating complex transformation pipelines for audio signals.</em>\n</p>\n<p align=\"center\">\n    </p><div>\n        <a href=\"https://pypi.org/project/sigment\" rel=\"nofollow\">\n            <img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b572533d64e873599fbb60b493c466f0fd3d2e4a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7369676d656e743f7374796c653d666c6174\">\n        </a>\n        <a href=\"https://pypi.org/project/sigment\" rel=\"nofollow\">\n            <img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e00be725ed5f85da0836011be71ffe7d0bd5432/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7369676d656e743f7374796c653d666c6174\">\n        </a>\n        <a href=\"https://raw.githubusercontent.com/eonu/sigment/master/LICENSE\" rel=\"nofollow\">\n            <img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ac06b9e08ef4c3f9f232643990a53c59dad1c93/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7369676d656e743f7374796c653d666c6174\">\n        </a>\n        <a href=\"https://sigment.readthedocs.io/en/latest\" rel=\"nofollow\">\n            <img alt=\"Read The Docs - Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfeac33907b09d756a73970a49d553164d0be927/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7369676d656e742f62616467652f3f76657273696f6e3d6c6174657374267374796c653d666c6174\">\n        </a>\n        <a href=\"https://travis-ci.org/eonu/sigment\" rel=\"nofollow\">\n            <img alt=\"Travis - Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fc0702beac64a9e8c034d9bd41662b11fa896fc/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f656f6e752f7369676d656e743f6c6f676f3d747261766973267374796c653d666c6174\">\n        </a>\n    </div>\n<p></p>\n<blockquote>\n<p><strong>Disclaimer</strong>: Although the core functionality of this package is fully implemented, it still requires proper unit testing.</p>\n</blockquote>\n<h2>What is data augmentation?</h2>\n<p>Data augmentation is the creation of artificial data from original data by typically applying a transformation, or multiple transformations, to the original data. It is a common method for improving the versatility of machine learning models, in addition to providing more training examples for datasets of limited size.</p>\n<p>In image data for example, it is common to use horizontal and vertical flipping, random cropping, zooming and additive noise for augmentation. In audio, we can use other transformations such as pitch shifting and fading the signal in or out, but some image augmentation methods such as additive noise can also be used on audio data.</p>\n<h3>Supported augmentation methods</h3>\n<p>Sigment provides the following augmentation methods for both mono and stereo signals. More information about each can be found in the <a href=\"https://sigment.readthedocs.io/en/latest\" rel=\"nofollow\">documentation</a>:</p>\n<ul>\n<li>[x] White Noise (Uniform, Gaussian and Laplacian)</li>\n<li>[x] Time Stretching</li>\n<li>[x] Pitch Shifting</li>\n<li>[x] Edge Cropping</li>\n<li>[x] Fading</li>\n</ul>\n<blockquote>\n<p><strong>Soon</strong>: Normalization, Random Cropping and Median Filtering</p>\n</blockquote>\n<p>It is also possible to design your own augmentation methods using a simple <code>Transform</code> base class provided by Sigment.</p>\n<h2>Example</h2>\n<p>Suppose we have the following stereo signal <code>F</code>:</p>\n<p align=\"center\">\n    <img alt=\"Original\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4b5777ea201eb5b51262944a7150ee707c6b4d0/68747470733a2f2f692e6962622e636f2f63627667446b592f6f726967696e616c2e706e67\">\n</p>\n<p>We can apply a pipeline of transformations to <code>F</code> to produce multiple augmented copies of it:</p>\n<p align=\"center\">\n    <img alt=\"Augmented\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e99337ec40cabfc4b27e5a7c23b526d031252523/68747470733a2f2f692e6962622e636f2f624b6a625a4c322f6175676d656e7465642e706e67\">\n</p>\n<details>\n<summary>\n    <b>Click here to see the code for the augmentation pipeline produces these signals!</b>\n</summary>\n<p>\n</p><pre><span class=\"kn\">import</span> <span class=\"nn\">sigment</span> <span class=\"k\">as</span> <span class=\"nn\">sig</span>\n\n<span class=\"c1\"># Create a complex augmentation pipeline</span>\n<span class=\"n\">transform</span> <span class=\"o\">=</span> <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span><span class=\"p\">([</span>\n    <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">Sometimes</span><span class=\"p\">([</span>\n        <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">OneOf</span><span class=\"p\">([</span>\n            <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">UniformWhiteNoise</span><span class=\"p\">(</span><span class=\"n\">upper</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">)),</span>\n            <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">GaussianWhiteNoise</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.075</span><span class=\"p\">)),</span>\n            <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">LaplacianWhiteNoise</span><span class=\"p\">(</span><span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">,</span> <span class=\"mf\">0.075</span><span class=\"p\">))</span>\n        <span class=\"p\">])</span>\n    <span class=\"p\">],</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mf\">0.65</span><span class=\"p\">),</span>\n    <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">SomeOf</span><span class=\"p\">([</span>\n        <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">EdgeCrop</span><span class=\"p\">(</span><span class=\"s1\">'start'</span><span class=\"p\">,</span> <span class=\"n\">crop_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.15</span><span class=\"p\">)),</span>\n        <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">EdgeCrop</span><span class=\"p\">(</span><span class=\"s1\">'end'</span><span class=\"p\">,</span> <span class=\"n\">crop_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"mf\">0.15</span><span class=\"p\">))</span>\n    <span class=\"p\">],</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)),</span>\n    <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">Sometimes</span><span class=\"p\">([</span>\n        <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">SomeOf</span><span class=\"p\">([</span>\n            <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">Fade</span><span class=\"p\">(</span><span class=\"s1\">'in'</span><span class=\"p\">,</span> <span class=\"n\">fade_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">)),</span>\n            <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">Fade</span><span class=\"p\">(</span><span class=\"s1\">'out'</span><span class=\"p\">,</span> <span class=\"n\">fade_size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"mf\">0.2</span><span class=\"p\">))</span>\n        <span class=\"p\">],</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n    <span class=\"p\">],</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">),</span>\n    <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">TimeStretch</span><span class=\"p\">(</span><span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">1.3</span><span class=\"p\">)),</span>\n    <span class=\"n\">sig</span><span class=\"o\">.</span><span class=\"n\">PitchShift</span><span class=\"p\">(</span><span class=\"n\">n_steps</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"mf\">0.25</span><span class=\"p\">)),</span>\n<span class=\"p\">])</span>\n\n<span class=\"c1\"># Generate 25 augmentations of the signal F</span>\n<span class=\"n\">Fs</span> <span class=\"o\">=</span> <span class=\"n\">transform</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">sr</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<blockquote>\n<p><strong>Note</strong>: The full code for this example can be found in the notebook <a href=\"https://nbviewer.jupyter.org/github/eonu/sigment/blob/master/notebooks/README%20%28Example%29.ipynb\" rel=\"nofollow\">here</a>.</p>\n</blockquote>\n<h2>Installation</h2>\n<p>To install Sigment from PyPI, you can use <code>pip</code>:</p>\n<pre><span class=\"go\">pip install sigment</span>\n</pre>\n<h2>Components</h2>\n<p>Sigment provides two main components that can be used to construct augmentation pipelines:</p>\n<ul>\n<li>\n<p><strong>Transforms</strong> (<code>sigment.transforms</code>): Used to apply a specific type of transformation to the audio data.</p>\n</li>\n<li>\n<p><strong>Quantifiers</strong> (<code>sigment.quantifiers</code>): Used to specify rules for how a sequence of transformations\nor nested quantifiers should be applied to augment the audio data.</p>\n</li>\n</ul>\n<p>Read the <a href=\"https://sigment.readthedocs.io/en/latest\" rel=\"nofollow\">documentation</a> and <a href=\"https://nbviewer.jupyter.org/github/eonu/sigment/blob/master/notebooks/\" rel=\"nofollow\">example notebooks</a> for more information about the usage of both.</p>\n<h2>Acknowledgements</h2>\n<p>Sigment offers a familiar interface for transformations, taking inspiration from some other well-written augmentation libraries. Without the following libraries, the capabilities of Sigment would be very limited:</p>\n<ul>\n<li><a href=\"https://github.com/aleju/imgaug\" rel=\"nofollow\">aleju/<strong>imgaug</strong></a>: <em>Image augmentation for machine learning experiments.</em></li>\n<li><a href=\"https://github.com/makcedward/nlpaug\" rel=\"nofollow\">makcedward/<strong>nlpaug</strong></a>: <em>Data augmentation for NLP</em></li>\n<li><a href=\"https://github.com/albumentations-team/albumentations\" rel=\"nofollow\">albumentations-team/<strong>albumentations</strong></a>: <em>fast image augmentation library and easy to use wrapper around other libraries</em></li>\n<li><a href=\"https://github.com/iver56/audiomentations\" rel=\"nofollow\">iver56/<strong>audiomentations</strong></a>: <em>A Python library for audio data augmentation. Inspired by albumentations. Useful for machine learning.</em></li>\n</ul>\n<h2>Contributors</h2>\n<p>All contributions to this repository are greatly appreciated. Contribution guidelines can be found <a href=\"/CONTRIBUTING.md\" rel=\"nofollow\">here</a>.</p>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th align=\"center\">\n        <a href=\"https://github.com/eonu\" rel=\"nofollow\">\n        <img alt=\"Edwin Onuonga\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9eb2d27fffb9a1fb387ce1c32e66e43e823f5362/68747470733a2f2f61766174617273302e67697468756275736572636f6e74656e742e636f6d2f752f32343739353537313f733d34363026763d34\" width=\"60px\">\n        <br><sub><b>Edwin Onuonga</b></sub>\n        </a>\n        <br>\n        <a href=\"mailto:ed@eonu.net\">\u2709\ufe0f</a>\n        <a href=\"https://eonu.net\" rel=\"nofollow\">\ud83c\udf0d</a>\n\t\t\t</th>\n\t\t\t\n\t\t</tr>\n\t</thead>\n</table>\n<hr>\n<p align=\"center\">\n  <b>Sigment</b> \u00a9 2019-2020, Edwin Onuonga - Released under the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT</a> License.<br>\n  <em>Authored and maintained by Edwin Onuonga.</em>\n</p>\n\n          </div>"}, "last_serial": 6529831, "releases": {"0.1.0a0": [{"comment_text": "", "digests": {"md5": "5b06cf1f32ba2aabd74b0f48fd4db9bf", "sha256": "fd9676b02e357e117275896cbe713bf8e83f0f41e3412f12794ab878f2341f68"}, "downloads": -1, "filename": "sigment-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "5b06cf1f32ba2aabd74b0f48fd4db9bf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<=3.8", "size": 11837, "upload_time": "2020-01-28T01:27:02", "upload_time_iso_8601": "2020-01-28T01:27:02.505831Z", "url": "https://files.pythonhosted.org/packages/47/e3/52d2a64315fa18a2dedc2554ea0e3f60e2f59a8819be0ff8f287269049ab/sigment-0.1.0a0.tar.gz", "yanked": false}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "5686d2cc8cf8d50ebdba1266fb80ba64", "sha256": "aa0a7279523a6d7a2bb3843fe4a59d66dbbe10e3b7b56fd5de4e589732a7cd36"}, "downloads": -1, "filename": "sigment-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "5686d2cc8cf8d50ebdba1266fb80ba64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<=3.8", "size": 11836, "upload_time": "2020-01-28T01:45:59", "upload_time_iso_8601": "2020-01-28T01:45:59.081263Z", "url": "https://files.pythonhosted.org/packages/b7/b7/f9f90906c546c9f4dbfee2787449dfc86028e5d1fa07d45cf7a20dbb5e5f/sigment-0.1.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5686d2cc8cf8d50ebdba1266fb80ba64", "sha256": "aa0a7279523a6d7a2bb3843fe4a59d66dbbe10e3b7b56fd5de4e589732a7cd36"}, "downloads": -1, "filename": "sigment-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "5686d2cc8cf8d50ebdba1266fb80ba64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<=3.8", "size": 11836, "upload_time": "2020-01-28T01:45:59", "upload_time_iso_8601": "2020-01-28T01:45:59.081263Z", "url": "https://files.pythonhosted.org/packages/b7/b7/f9f90906c546c9f4dbfee2787449dfc86028e5d1fa07d45cf7a20dbb5e5f/sigment-0.1.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:50 2020"}