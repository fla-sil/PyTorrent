{"info": {"author": "Petri Huovinen", "author_email": "petri.huovinen@nokia.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development"], "description": ".. Copyright (C) 2019, Nokia\n\n.. image:: https://travis-ci.org/nokia/crl-devutils.svg?branch=master\n    :target: https://travis-ci.org/nokia/crl-devutils\n\n##################################################################\nGuide for developing Common Robot Libraries (CRL) via crl.devutils\n##################################################################\n\n\nDocumentation\n=============\n\nDocumentation for crl.devutils can be found from `Read The Docs`_.\n\n.. _Read the Docs: http://crl-devutils.readthedocs.io/\n\n\nSetup\n=====\n\nFirst, install crl.devutils.\n\n.. code:: bash\n\n    $ pip install crl.devutils\n\nNow, there is available *crl* development command line:\n\n.. code:: bash\n\n    $ crl -l\n\n    Available tasks:\n\n      clean               Clean workspace.\n      create_docs         Create both Robot Framework and Sphinx documentation.\n      create_index        Create an index with given bases\n      create_setup        Create initial setup.py into current directory from library name.\n      delete_index        Delete an index\n      help                Show help, basically an alias for --help.\n      publish             *DEPRECATED* Publish version from a given index to another index.\n      sdist               Create source distribution.\n      set_version         Set version in ./src/crl/<libname>/_version.py`.\n      tag_release         Tag specified release.\n      tag_setup_version   Tag specified release.\n      test                Uploads contents of current workspace to devpi and runs tox tests.\n\n\n\n**NOTE that some of the commands have been deprecated and should not be used.**\n\nThis tool is based on invoke 3rd party Python module and more details can be\nfound by running command *crl help*. Please use *crl* instead of *invoke* even\nthough the help shows this differently.\n\nThe *crl* tasks glue the git tags and the package distribution versions\ntogether behind the scenes.\n\n\nUsing the CRL devpi server\n--------------------------\n\nFor using the test command you need the devpi server. If you do not have devpi,\nyou need to install and configure it. See instructions on how to `Configure\nDevpi`_.\n\nBefore using the test command you should also configure the devpi index that is\nto be used as the base index of the library.\n\nHere devpi is configured to use the imaginary\nhttps://example.devpi.com/user/index simple index.\n\n.. code:: bash\n\n    $ devpi use https://example.devpi.com/user/index/+simple --set-cfg\n    current devpi index: https://example.devpi.com/crl/prod (logged in as <username>)\n    ~/.pydistutils.cfg     : https://example.devpi.com/user/index/+simple/\n    ~/.pip/pip.conf        : https://example.devpi.com/user/index/+simple/\n    ~/.buildout/default.cfg: https://example.devpi.com/user/index/+simple/\n    always-set-cfg: no\n\n\nUsing the Test Environment\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIf there is a [testenv:test] in the library's tox.ini, you can use this to\ntest your work. This runs the same tests as tox, but also uploads the current\nworkspace contents to a development index. Also, this is the way tests are\nrun in CI, so you might want to simulate the CI run to avoid problems later.\n\nIf the library's tox.ini doesn't have the test environment, it can be added\neasily by adding the following lines into the tox.ini file:\n\n.. code:: bash\n\n    [testenv:test]\n    changedir = {toxinidir}\n    deps=\n         crl.devutils\n    commands= crl test --no-virtualenv {posargs}\n\n.. warning::\n    Dependency package list to this test environment may vary according\n    to the library's needs.\n\nFirst, login to the devpi server. Now you can load development indexes under\nyour personal user index.\n\n.. code:: bash\n\n    $ PYPI=https://example.devpi.com/user/index\n    $ tox -e test -- -b ${PYPI} -t <test-indexname> --verbose\n\nThe above command saves the tests and contents to\nhttps://example.devpi.com/<username>/<test-indexname>.\n\n\nWorking without the *crl* namespace\n-----------------------------------\n\nIf the library shall not be in *crl* namespace, then the version file path has\nto be given relatively.\n\nFor example:\n\n.. code:: bash\n\n    $ tox -e test -i ${PYPI}/+simple -- \\\n        -t CRL-92 \\\n        -p src/examplelib/_version.py \\\n        -s https://example.devpi.com/<username>/<srcindexname> \\\n        -d https://example.devpi.com/<username>/<destindexname>\n\nThe tagging of the version commmand has to also contain the path to version\nfile. For example:\n\n.. code:: bash\n\n    $ crl tag_release \\\n         --pathtoversionfile src/examplelib/_version.py 0.6.10.dev201612050621\n\n\nCreating a new CRL library\n==========================\n\nCreating a new CRL library is done with a dedicated Jenkins job `Create New CRL\nLibrary`_. The job creates the library structure from a template and generates\nall the needed Jenkins jobs for the library.\n\nCreating Documentation\n======================\n\nThe *crl* tool provides two alternatives for the documentation of the test\nlibrary: *crl create_docs* and *crl publish*.\n\nNow, the *crl create_docs* is a standalone tool for generating documentation\nduring the development. If documentation is done so that a *sphinxdocs*\ndirectory exists, *crl publish* tool automatically uploads the documentation\nmore or less the same produced by *crl create_docs* tool. It is recommended\nthat *crl create_docs* will be integrated to *tox* in order to verify\ndocumentation generation, as well as producing it in the CI e.g. via Jenkins\njobs for each commit to git.\n\nAdding docs environment for tox.ini. Remember to add the docs environment to\nthe *envlist*.\n\n.. code:: bash\n\n    [testenv:docs]\n    deps =\n        sphinx\n        crl.devutils\n        robotframework\n    commands = crl create_docs -v\n\n.. warning::\n    Dependency package list for docs environment may vary according to the\n    library's needs\n\nIn order to generate documentation for your library with robot.libdoc you\nshould:\n\n* create *robotdocs/robotdocsconf.py*, with content like below:\n\n.. code:: python\n\n        robotdocs={\n            'crl.examplelib.examplelib':\n                {'docformat': 'rest',\n                 'synopsis': 'Example of test library functions.'},\n            'crl.examplelib.examplelib.Example':\n                {'args':['example'],\n                 'docformat': 'rest',\n                 'synopsis': 'Example of test library class.'}}\n\n* add relative path of your *robotdocs* directory to 'html_extra_path' in\n  *sphinxdocs/conf.py*:\n\n.. code:: python\n\n       html_extra_path = ['../robotdocs']\n\n* it is also recommended to set page width to 90% in 'html_theme_options' in\n  *sphinxdocs/conf.py*\n\n.. code:: python\n\n        html_theme_options = {'page_width': '90%'}\n\nLibraries using crl.devutils process\n====================================\n\nLibraries providing Robot Framework test libraries\n--------------------------------------------------\n\n======================== ================================================================\nLibrary                  Description\n======================== ================================================================\ncrl-interactivesessions_ Remote command and file management via pexpect\n------------------------ ----------------------------------------------------------------\ncrl-remotescript_        Remote command and file management via paramiko and trilead-ssh\n------------------------ ----------------------------------------------------------------\ncrl-remotesession_       Wrapper of crl-interactivesessions_ and crl-remotescript_\n======================== ================================================================\n\n.. _crl-interactivesessions: https://github.com/nokia/crl-interactivesessions\n.. _crl-remotescript: https://github.com/nokia/crl-remotescript\n.. _crl-remotesession: https://github.com/nokia/crl-remotesession\n\nRobot Framework robot command wrappers\n--------------------------------------\n\n======================== ================================================================\nLibrary                  Description\n======================== ================================================================\ncrl-rfcli_               Python path setter and parser of test target file\n------------------------ ----------------------------------------------------------------\ncrl-threadverify_        Robot run verifier for hanging threads\n======================== ================================================================\n\n.. _crl-rfcli: https://github.com/nokia/crl-rfcli\n.. _crl-threadverify: https://github.com/nokia/crl-threadverify\n\nDevelopment libraries\n----------------------\n\n======================== ================================================================\nLibrary                  Description\n======================== ================================================================\ncrl-devutils_            Development tools for CRL\n------------------------ ----------------------------------------------------------------\ncrl-examplelib_          Example library template for CRL\n======================== ================================================================\n\n.. _crl-devutils: https://github.com/nokia/crl-devutils\n.. _crl-examplelib: https://github.com/nokia/crl-examplelib\n\nGeneric helper libraries\n------------------------\n\n======================== ================================================================\nLibrary                  Description\n======================== ================================================================\nfixtureresources_        Pytest fixtures\n------------------------ ----------------------------------------------------------------\nsphinx-invoke_           Sphinx extension for invoke tasks\n------------------------ ----------------------------------------------------------------\nvirtualenvrunner_        Python Virtualenv creator and command executor\n======================== ================================================================\n\n.. _fixtureresources: https://github.com/nokia/fixtureresources\n.. _sphinx-invoke: https://github.com/nokia/sphinx-invoke\n.. _virtualenvrunner: https://github.com/nokia/virtualenvrunner\n\nUseful Links\n============\n\n* `Configure Devpi`_\n* `Create New CRL Library`_\n\n.. _`Configure Devpi`: https://doc.devpi.net\n.. _`Create New CRL Library`: https://github.com/nokia/cookiecutter-crl-template\n\n\nContributing\n============\n\nPlease see contributing_ for development and contribution practices.\n\nThe code_ and the issues_ are hosted on GitHub.\n\nThe project is licensed under BSD-3-Clause_.\n\n.. _contributing: https://github.com/nokia/crl-devutils/blob/master/CONTRIBUTING.rst\n.. _code: https://github.com/nokia/crl-devutils\n.. _issues: https://github.com/nokia/crl-devutils/issues\n.. _BSD-3-Clause:  https://github.com/nokia/crl-devutils/blob/master/LICENSE", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nokia/crl-devutils", "keywords": "robotframework testing testautomation acceptancetesting atdd bdd", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "crl.devutils", "package_url": "https://pypi.org/project/crl.devutils/", "platform": "", "project_url": "https://pypi.org/project/crl.devutils/", "project_urls": {"Homepage": "https://github.com/nokia/crl-devutils"}, "release_url": "https://pypi.org/project/crl.devutils/1.2.4/", "requires_dist": null, "requires_python": "", "summary": "Common Robot Libraries development and CI tools", "version": "1.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/nokia/crl-devutils\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/nokia/crl-devutils.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b88936b8fbf52ebfdb3a130e6249d825f3f75f5b/68747470733a2f2f7472617669732d63692e6f72672f6e6f6b69612f63726c2d6465767574696c732e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"guide-for-developing-common-robot-libraries-crl-via-crl-devutils\">\n<h2>Guide for developing Common Robot Libraries (CRL) via crl.devutils</h2>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Documentation for crl.devutils can be found from <a href=\"http://crl-devutils.readthedocs.io/\" rel=\"nofollow\">Read The Docs</a>.</p>\n</div>\n<div id=\"setup\">\n<h3>Setup</h3>\n<p>First, install crl.devutils.</p>\n<pre>$ pip install crl.devutils\n</pre>\n<p>Now, there is available <em>crl</em> development command line:</p>\n<pre>$ crl -l\n\nAvailable tasks:\n\n  clean               Clean workspace.\n  create_docs         Create both Robot Framework and Sphinx documentation.\n  create_index        Create an index with given bases\n  create_setup        Create initial setup.py into current directory from library name.\n  delete_index        Delete an index\n  <span class=\"nb\">help</span>                Show help, basically an <span class=\"nb\">alias</span> <span class=\"k\">for</span> --help.\n  publish             *DEPRECATED* Publish version from a given index to another index.\n  sdist               Create <span class=\"nb\">source</span> distribution.\n  set_version         Set version in ./src/crl/&lt;libname&gt;/_version.py<span class=\"sb\">`</span>.\n  tag_release         Tag specified release.\n  tag_setup_version   Tag specified release.\n  <span class=\"nb\">test</span>                Uploads contents of current workspace to devpi and runs tox tests.\n</pre>\n<p><strong>NOTE that some of the commands have been deprecated and should not be used.</strong></p>\n<p>This tool is based on invoke 3rd party Python module and more details can be\nfound by running command <em>crl help</em>. Please use <em>crl</em> instead of <em>invoke</em> even\nthough the help shows this differently.</p>\n<p>The <em>crl</em> tasks glue the git tags and the package distribution versions\ntogether behind the scenes.</p>\n<div id=\"using-the-crl-devpi-server\">\n<h4>Using the CRL devpi server</h4>\n<p>For using the test command you need the devpi server. If you do not have devpi,\nyou need to install and configure it. See instructions on how to <a href=\"https://doc.devpi.net\" rel=\"nofollow\">Configure\nDevpi</a>.</p>\n<p>Before using the test command you should also configure the devpi index that is\nto be used as the base index of the library.</p>\n<p>Here devpi is configured to use the imaginary\n<a href=\"https://example.devpi.com/user/index\" rel=\"nofollow\">https://example.devpi.com/user/index</a> simple index.</p>\n<pre>$ devpi use https://example.devpi.com/user/index/+simple --set-cfg\ncurrent devpi index: https://example.devpi.com/crl/prod <span class=\"o\">(</span>logged in as &lt;username&gt;<span class=\"o\">)</span>\n~/.pydistutils.cfg     : https://example.devpi.com/user/index/+simple/\n~/.pip/pip.conf        : https://example.devpi.com/user/index/+simple/\n~/.buildout/default.cfg: https://example.devpi.com/user/index/+simple/\nalways-set-cfg: no\n</pre>\n<div id=\"using-the-test-environment\">\n<h5>Using the Test Environment</h5>\n<p>If there is a [testenv:test] in the library\u2019s tox.ini, you can use this to\ntest your work. This runs the same tests as tox, but also uploads the current\nworkspace contents to a development index. Also, this is the way tests are\nrun in CI, so you might want to simulate the CI run to avoid problems later.</p>\n<p>If the library\u2019s tox.ini doesn\u2019t have the test environment, it can be added\neasily by adding the following lines into the tox.ini file:</p>\n<pre><span class=\"o\">[</span>testenv:test<span class=\"o\">]</span>\n<span class=\"nv\">changedir</span> <span class=\"o\">=</span> <span class=\"o\">{</span>toxinidir<span class=\"o\">}</span>\n<span class=\"nv\">deps</span><span class=\"o\">=</span>\n     crl.devutils\n<span class=\"nv\">commands</span><span class=\"o\">=</span> crl <span class=\"nb\">test</span> --no-virtualenv <span class=\"o\">{</span>posargs<span class=\"o\">}</span>\n</pre>\n<div>\n<p>Warning</p>\n<p>Dependency package list to this test environment may vary according\nto the library\u2019s needs.</p>\n</div>\n<p>First, login to the devpi server. Now you can load development indexes under\nyour personal user index.</p>\n<pre>$ <span class=\"nv\">PYPI</span><span class=\"o\">=</span>https://example.devpi.com/user/index\n$ tox -e <span class=\"nb\">test</span> -- -b <span class=\"si\">${</span><span class=\"nv\">PYPI</span><span class=\"si\">}</span> -t &lt;test-indexname&gt; --verbose\n</pre>\n<p>The above command saves the tests and contents to\n<a href=\"https://example.devpi.com\" rel=\"nofollow\">https://example.devpi.com</a>/&lt;username&gt;/&lt;test-indexname&gt;.</p>\n</div>\n</div>\n<div id=\"working-without-the-crl-namespace\">\n<h4>Working without the <em>crl</em> namespace</h4>\n<p>If the library shall not be in <em>crl</em> namespace, then the version file path has\nto be given relatively.</p>\n<p>For example:</p>\n<pre>$ tox -e <span class=\"nb\">test</span> -i <span class=\"si\">${</span><span class=\"nv\">PYPI</span><span class=\"si\">}</span>/+simple -- <span class=\"se\">\\\n</span>    -t CRL-92 <span class=\"se\">\\\n</span>    -p src/examplelib/_version.py <span class=\"se\">\\\n</span>    -s https://example.devpi.com/&lt;username&gt;/&lt;srcindexname&gt; <span class=\"se\">\\\n</span>    -d https://example.devpi.com/&lt;username&gt;/&lt;destindexname&gt;\n</pre>\n<p>The tagging of the version commmand has to also contain the path to version\nfile. For example:</p>\n<pre>$ crl tag_release <span class=\"se\">\\\n</span>     --pathtoversionfile src/examplelib/_version.py <span class=\"m\">0</span>.6.10.dev201612050621\n</pre>\n</div>\n</div>\n<div id=\"creating-a-new-crl-library\">\n<h3>Creating a new CRL library</h3>\n<p>Creating a new CRL library is done with a dedicated Jenkins job <a href=\"https://github.com/nokia/cookiecutter-crl-template\" rel=\"nofollow\">Create New CRL\nLibrary</a>. The job creates the library structure from a template and generates\nall the needed Jenkins jobs for the library.</p>\n</div>\n<div id=\"creating-documentation\">\n<h3>Creating Documentation</h3>\n<p>The <em>crl</em> tool provides two alternatives for the documentation of the test\nlibrary: <em>crl create_docs</em> and <em>crl publish</em>.</p>\n<p>Now, the <em>crl create_docs</em> is a standalone tool for generating documentation\nduring the development. If documentation is done so that a <em>sphinxdocs</em>\ndirectory exists, <em>crl publish</em> tool automatically uploads the documentation\nmore or less the same produced by <em>crl create_docs</em> tool. It is recommended\nthat <em>crl create_docs</em> will be integrated to <em>tox</em> in order to verify\ndocumentation generation, as well as producing it in the CI e.g. via Jenkins\njobs for each commit to git.</p>\n<p>Adding docs environment for tox.ini. Remember to add the docs environment to\nthe <em>envlist</em>.</p>\n<pre><span class=\"o\">[</span>testenv:docs<span class=\"o\">]</span>\n<span class=\"nv\">deps</span> <span class=\"o\">=</span>\n    sphinx\n    crl.devutils\n    robotframework\n<span class=\"nv\">commands</span> <span class=\"o\">=</span> crl create_docs -v\n</pre>\n<div>\n<p>Warning</p>\n<p>Dependency package list for docs environment may vary according to the\nlibrary\u2019s needs</p>\n</div>\n<p>In order to generate documentation for your library with robot.libdoc you\nshould:</p>\n<ul>\n<li>create <em>robotdocs/robotdocsconf.py</em>, with content like below:</li>\n</ul>\n<pre><span class=\"n\">robotdocs</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'crl.examplelib.examplelib'</span><span class=\"p\">:</span>\n        <span class=\"p\">{</span><span class=\"s1\">'docformat'</span><span class=\"p\">:</span> <span class=\"s1\">'rest'</span><span class=\"p\">,</span>\n         <span class=\"s1\">'synopsis'</span><span class=\"p\">:</span> <span class=\"s1\">'Example of test library functions.'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'crl.examplelib.examplelib.Example'</span><span class=\"p\">:</span>\n        <span class=\"p\">{</span><span class=\"s1\">'args'</span><span class=\"p\">:[</span><span class=\"s1\">'example'</span><span class=\"p\">],</span>\n         <span class=\"s1\">'docformat'</span><span class=\"p\">:</span> <span class=\"s1\">'rest'</span><span class=\"p\">,</span>\n         <span class=\"s1\">'synopsis'</span><span class=\"p\">:</span> <span class=\"s1\">'Example of test library class.'</span><span class=\"p\">}}</span>\n</pre>\n<ul>\n<li>add relative path of your <em>robotdocs</em> directory to \u2018html_extra_path\u2019 in\n<em>sphinxdocs/conf.py</em>:</li>\n</ul>\n<pre><span class=\"n\">html_extra_path</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'../robotdocs'</span><span class=\"p\">]</span>\n</pre>\n<ul>\n<li>it is also recommended to set page width to 90% in \u2018html_theme_options\u2019 in\n<em>sphinxdocs/conf.py</em></li>\n</ul>\n<pre><span class=\"n\">html_theme_options</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'page_width'</span><span class=\"p\">:</span> <span class=\"s1\">'90%'</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"libraries-using-crl-devutils-process\">\n<h3>Libraries using crl.devutils process</h3>\n<div id=\"libraries-providing-robot-framework-test-libraries\">\n<h4>Libraries providing Robot Framework test libraries</h4>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Library</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/nokia/crl-interactivesessions\" rel=\"nofollow\">crl-interactivesessions</a></td>\n<td>Remote command and file management via pexpect</td>\n</tr>\n<tr><td><a href=\"https://github.com/nokia/crl-remotescript\" rel=\"nofollow\">crl-remotescript</a></td>\n<td>Remote command and file management via paramiko and trilead-ssh</td>\n</tr>\n<tr><td><a href=\"https://github.com/nokia/crl-remotesession\" rel=\"nofollow\">crl-remotesession</a></td>\n<td>Wrapper of <a href=\"https://github.com/nokia/crl-interactivesessions\" rel=\"nofollow\">crl-interactivesessions</a> and <a href=\"https://github.com/nokia/crl-remotescript\" rel=\"nofollow\">crl-remotescript</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"robot-framework-robot-command-wrappers\">\n<h4>Robot Framework robot command wrappers</h4>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Library</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/nokia/crl-rfcli\" rel=\"nofollow\">crl-rfcli</a></td>\n<td>Python path setter and parser of test target file</td>\n</tr>\n<tr><td><a href=\"https://github.com/nokia/crl-threadverify\" rel=\"nofollow\">crl-threadverify</a></td>\n<td>Robot run verifier for hanging threads</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"development-libraries\">\n<h4>Development libraries</h4>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Library</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/nokia/crl-devutils\" rel=\"nofollow\">crl-devutils</a></td>\n<td>Development tools for CRL</td>\n</tr>\n<tr><td><a href=\"https://github.com/nokia/crl-examplelib\" rel=\"nofollow\">crl-examplelib</a></td>\n<td>Example library template for CRL</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"generic-helper-libraries\">\n<h4>Generic helper libraries</h4>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Library</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/nokia/fixtureresources\" rel=\"nofollow\">fixtureresources</a></td>\n<td>Pytest fixtures</td>\n</tr>\n<tr><td><a href=\"https://github.com/nokia/sphinx-invoke\" rel=\"nofollow\">sphinx-invoke</a></td>\n<td>Sphinx extension for invoke tasks</td>\n</tr>\n<tr><td><a href=\"https://github.com/nokia/virtualenvrunner\" rel=\"nofollow\">virtualenvrunner</a></td>\n<td>Python Virtualenv creator and command executor</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"useful-links\">\n<h3>Useful Links</h3>\n<ul>\n<li><a href=\"https://doc.devpi.net\" rel=\"nofollow\">Configure Devpi</a></li>\n<li><a href=\"https://github.com/nokia/cookiecutter-crl-template\" rel=\"nofollow\">Create New CRL Library</a></li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>Please see <a href=\"https://github.com/nokia/crl-devutils/blob/master/CONTRIBUTING.rst\" rel=\"nofollow\">contributing</a> for development and contribution practices.</p>\n<p>The <a href=\"https://github.com/nokia/crl-devutils\" rel=\"nofollow\">code</a> and the <a href=\"https://github.com/nokia/crl-devutils/issues\" rel=\"nofollow\">issues</a> are hosted on GitHub.</p>\n<p>The project is licensed under <a href=\"https://github.com/nokia/crl-devutils/blob/master/LICENSE\" rel=\"nofollow\">BSD-3-Clause</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5803036, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "847eb220efd90745860ddd6de0a43895", "sha256": "ecc0e2531ce5cc4d984e1fd0f2ca6ebcfe48d24f7e9062eb2db7d5aebb9b916e"}, "downloads": -1, "filename": "crl.devutils-1.1.tar.gz", "has_sig": false, "md5_digest": "847eb220efd90745860ddd6de0a43895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46003, "upload_time": "2019-02-25T07:49:26", "upload_time_iso_8601": "2019-02-25T07:49:26.510999Z", "url": "https://files.pythonhosted.org/packages/8c/f5/7f11df5adf742bb36c35951e91be9ca4446def71571ef0b7456282a86a11/crl.devutils-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "4d932d0551a4637e02be6a66242e6d96", "sha256": "a8f3a48960818fe8f80961a4c1c01f3b5048eff2a8e673e2c12366b39888f92f"}, "downloads": -1, "filename": "crl.devutils-1.2.tar.gz", "has_sig": false, "md5_digest": "4d932d0551a4637e02be6a66242e6d96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46111, "upload_time": "2019-02-28T07:11:46", "upload_time_iso_8601": "2019-02-28T07:11:46.630556Z", "url": "https://files.pythonhosted.org/packages/93/1b/dcc44ec27e534aa7a0333074931fb08452bec26cca116ceff99e230417a9/crl.devutils-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "ea6ca633178c6d89065a6989bdb19df8", "sha256": "b61ba3dc7a8076378e1ebd2b82f6741001c41c001691b21470a56f35831d63ee"}, "downloads": -1, "filename": "crl.devutils-1.2.1.tar.gz", "has_sig": false, "md5_digest": "ea6ca633178c6d89065a6989bdb19df8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46142, "upload_time": "2019-02-28T08:33:14", "upload_time_iso_8601": "2019-02-28T08:33:14.926782Z", "url": "https://files.pythonhosted.org/packages/9f/8f/90c6c7161fa778fdce133fb5b208abe74e0855ed30d55c6bea69c0d82c23/crl.devutils-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "a9957a9f13c9885f93cce1b1c9e3114b", "sha256": "ce2f5d318e0f99d4885824884d5ae72dce58f3958c62b84106fcfdd507816cda"}, "downloads": -1, "filename": "crl.devutils-1.2.2.tar.gz", "has_sig": false, "md5_digest": "a9957a9f13c9885f93cce1b1c9e3114b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46363, "upload_time": "2019-03-04T07:01:22", "upload_time_iso_8601": "2019-03-04T07:01:22.395007Z", "url": "https://files.pythonhosted.org/packages/10/6f/d1ef7b2dcef093409f03c8a44ada6bcfed55d7d18c7f77f78d6dc7726ccb/crl.devutils-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "f2462d813a2c52a9eadee6a5cb9bf121", "sha256": "c0b902f2d3545954aa3f5d8de10ddfd3c3516310ad7287e3bb425682f1501cf0"}, "downloads": -1, "filename": "crl.devutils-1.2.3.tar.gz", "has_sig": false, "md5_digest": "f2462d813a2c52a9eadee6a5cb9bf121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44896, "upload_time": "2019-04-08T11:08:54", "upload_time_iso_8601": "2019-04-08T11:08:54.914073Z", "url": "https://files.pythonhosted.org/packages/2d/28/d415eaf98eced03ee0bf16db6d1c40de46c2cf7568c7cb0abce12cad7cd8/crl.devutils-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "6a733a32a64f7d501b38bdb3de373f0d", "sha256": "1f4d0033f8914d16d72fe95325b4cd290408778959f4607d87ef84bb16fc2a62"}, "downloads": -1, "filename": "crl.devutils-1.2.4.tar.gz", "has_sig": false, "md5_digest": "6a733a32a64f7d501b38bdb3de373f0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48761, "upload_time": "2019-09-09T10:55:19", "upload_time_iso_8601": "2019-09-09T10:55:19.050435Z", "url": "https://files.pythonhosted.org/packages/0f/e3/6970dd0d6a75ae3d324e9ebbfef3de1ab2df291e8d488d9e6beab9f8f867/crl.devutils-1.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a733a32a64f7d501b38bdb3de373f0d", "sha256": "1f4d0033f8914d16d72fe95325b4cd290408778959f4607d87ef84bb16fc2a62"}, "downloads": -1, "filename": "crl.devutils-1.2.4.tar.gz", "has_sig": false, "md5_digest": "6a733a32a64f7d501b38bdb3de373f0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48761, "upload_time": "2019-09-09T10:55:19", "upload_time_iso_8601": "2019-09-09T10:55:19.050435Z", "url": "https://files.pythonhosted.org/packages/0f/e3/6970dd0d6a75ae3d324e9ebbfef3de1ab2df291e8d488d9e6beab9f8f867/crl.devutils-1.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:16 2020"}