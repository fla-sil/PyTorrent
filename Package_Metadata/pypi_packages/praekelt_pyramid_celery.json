{"info": {"author": "John Anderson", "author_email": "sontek@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "NB: I have made minimal patches to make this (appear to) work on Python 3.x and Pyramid 1.5. I have not extensively tested these changes, but celery workers and celerybeat both start up and start working. \r\n\r\nGetting Started\r\n=====================\r\nInclude pyramid_celery either by setting your includes in your .ini,\r\nor by calling config.include('pyramid_celery').\r\n\r\n``` python\r\n    pyramid.includes = pyramid_celery\r\n```\r\n\r\nNow you can either use class based:\r\n\r\n``` python\r\nfrom celery.task import task\r\nfrom celery.task import Task\r\n\r\n@task\r\nclass AddTask(Task):\r\n    def run(self, x, y):\r\n        print x+y\r\n```\r\n\r\nor decorator based:\r\n\r\n``` python\r\nfrom celery.task import task\r\n\r\n@task\r\ndef add(x, y):\r\n    print x+y\r\n```\r\n\r\nConfiguration\r\n=====================\r\nAll standard celery configuration options will work. Check out http://ask.github.com/celery/configuration.html\r\n\r\nDemo\r\n=====================\r\nTo see it all in action check out pyramid_celery_demo, run rabbitmq-server and then do:\r\n\r\n``` python\r\n$ python setup.py develop\r\n$ populate_pyramid_celery_demo ./development.ini\r\n$ pserve ./development.ini\r\n$ pcelery ./development.ini worker\r\n```\r\n\r\nIf you are using celery < 3.1 use  older celery command lines binding.\r\n``` python\r\npceleryd development.ini\r\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sontek/pyramid_celery", "keywords": "paste pyramid celery message queue amqp job task distributed", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "praekelt_pyramid_celery", "package_url": "https://pypi.org/project/praekelt_pyramid_celery/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/praekelt_pyramid_celery/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sontek/pyramid_celery"}, "release_url": "https://pypi.org/project/praekelt_pyramid_celery/1.4.0/", "requires_dist": null, "requires_python": null, "summary": "Celery integration with pyramid", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            NB: I have made minimal patches to make this (appear to) work on Python 3.x and Pyramid 1.5. I have not extensively tested these changes, but celery workers and celerybeat both start up and start working. \n<br>\n<br>Getting Started\n<br>=====================\n<br>Include pyramid_celery either by setting your includes in your .ini,\n<br>or by calling config.include('pyramid_celery').\n<br>\n<br>``` python\n<br>    pyramid.includes = pyramid_celery\n<br>```\n<br>\n<br>Now you can either use class based:\n<br>\n<br>``` python\n<br>from celery.task import task\n<br>from celery.task import Task\n<br>\n<br>@task\n<br>class AddTask(Task):\n<br>    def run(self, x, y):\n<br>        print x+y\n<br>```\n<br>\n<br>or decorator based:\n<br>\n<br>``` python\n<br>from celery.task import task\n<br>\n<br>@task\n<br>def add(x, y):\n<br>    print x+y\n<br>```\n<br>\n<br>Configuration\n<br>=====================\n<br>All standard celery configuration options will work. Check out http://ask.github.com/celery/configuration.html\n<br>\n<br>Demo\n<br>=====================\n<br>To see it all in action check out pyramid_celery_demo, run rabbitmq-server and then do:\n<br>\n<br>``` python\n<br>$ python setup.py develop\n<br>$ populate_pyramid_celery_demo ./development.ini\n<br>$ pserve ./development.ini\n<br>$ pcelery ./development.ini worker\n<br>```\n<br>\n<br>If you are using celery &lt; 3.1 use  older celery command lines binding.\n<br>``` python\n<br>pceleryd development.ini\n<br>```\n          </div>"}, "last_serial": 2516255, "releases": {"1.4.0": [{"comment_text": "", "digests": {"md5": "75a1a2f7267beba791a5dc1e43dac27e", "sha256": "24906f75e5cd366e77e31f37d3d7a743a542d5ab6a72724620445298cca03ca4"}, "downloads": -1, "filename": "praekelt_pyramid_celery-1.4.0.tar.gz", "has_sig": false, "md5_digest": "75a1a2f7267beba791a5dc1e43dac27e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4976, "upload_time": "2014-09-15T12:36:47", "upload_time_iso_8601": "2014-09-15T12:36:47.806047Z", "url": "https://files.pythonhosted.org/packages/fd/12/7db02867ed07be0324c617a681791ba92b775ba01d6f70fa60a09fc473f2/praekelt_pyramid_celery-1.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75a1a2f7267beba791a5dc1e43dac27e", "sha256": "24906f75e5cd366e77e31f37d3d7a743a542d5ab6a72724620445298cca03ca4"}, "downloads": -1, "filename": "praekelt_pyramid_celery-1.4.0.tar.gz", "has_sig": false, "md5_digest": "75a1a2f7267beba791a5dc1e43dac27e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4976, "upload_time": "2014-09-15T12:36:47", "upload_time_iso_8601": "2014-09-15T12:36:47.806047Z", "url": "https://files.pythonhosted.org/packages/fd/12/7db02867ed07be0324c617a681791ba92b775ba01d6f70fa60a09fc473f2/praekelt_pyramid_celery-1.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:13 2020"}