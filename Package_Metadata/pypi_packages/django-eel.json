{"info": {"author": "Victor Hu", "author_email": "selain@nature.ee.ncku.edu.tw", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6"], "description": "# Django-Eel\n\nDjango-Eel is a Django App for HTML GUI applications, with easy Python/JS interoperation. It is a porting version of [Eel](https://github.com/ChrisKnott/Eel).\n\n### Repo branches\n\n - **master** : the master branch of Django-Eel\n - **eel-master** : keeping sync with [Eel](https://github.com/ChrisKnott/Eel)/master\n\n### Requirements\n\n - Django ( >=2.0.7 recommended )\n - channels ( >=2.1.2 recommended )\n - gevent ( >=1.3.4 recommended )\n\n### Getting Started\n\n#### Installation\n\nDownload Django-Eel package from GitHub and install:\n```\npython setup.py install\n```\nOr install through PIP:\n```\npip install git+https://github.com/seLain/django-eel\n```\n\n#### Create demo project\n\nCreate an empty django project:\n```\ndjango-admin startproject demo\n```\nCreate examples django app:\n```\ndjango-admin startapp example\n```\nAdd **channels**, **django_eel**, and **example** to **demo/settings.py**\n```python\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'channels',\n    'django_eel',\n    'example',\n]\n```\nSet ASGI_Application in **demo/settings.py**. It is required by channels.\n```python\nWSGI_APPLICATION = 'demo.wsgi.application'\nASGI_APPLICATION = \"demo.routing.application\"\n```\nAdd **routine.py** under **demo** project root. The **routine.py** routes websocket requests to **EelConsumer**.\n```python\nfrom channels.routing import ProtocolTypeRouter, URLRouter\nfrom django.conf.urls import url\nfrom django_eel.consumers import EelConsumer\n\napplication = ProtocolTypeRouter({\n    # (http->django views is added by default)\n    \"websocket\": URLRouter([\n        url(r\"^eel$\", EelConsumer), # do not alter this line\n    ]),\n})\n```\nConfigure demo\\urls.py to route http request to eel and example respectively.\n```python\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    url(r'^eel/', include('django_eel.urls')), # do not alter this line\n    url(r'^example/', include('example.urls')), # set by your app name\n]\n```\nThat's the configuration part. Now we add a helloword example.\n\n#### Create template and view\n\nCreate **example\\templates\\example\\hello.html** :\n```html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Hello, World!</title>\n        \n        <!-- request for eel.js from django-eel, do not alter this line -->\n        <script type=\"text/javascript\" src=\"/eel/eel.js\"></script>\n        <script type=\"text/javascript\">\n        \n        eel.expose(say_hello_js);               // Expose this function to Python\n        function say_hello_js(x) {\n            console.log(\"Hello from \" + x);\n        }\n        \n        say_hello_js(\"Javascript World!\");\n        eel.say_hello_py(\"Javascript World!\");  // Call a Python function\n        \n        </script>\n    </head>\n    \n    <body>\n        Hello, World!\n    </body>\n</html>\n```\nThis **hello.html** is almost the same as the original [Eel](https://github.com/ChrisKnott/Eel) example, except the request for **eel.js**.\n\nThen we create the view \n```python\nfrom django.shortcuts import render\nimport django_eel as eel\n\n# initialize eel\neel.init('example/templates/example')\n\n###########################\n# Hello example\n###########################\ndef hello_page(request): # accept request for hello.html\n\treturn render(request, 'example/hello.html')\n\n@eel.expose\ndef say_hello_py(x):\n\tprint('Hello from %s' % x)\n\teel.say_hello_js('Python3 and Django World!') # call js function\n\n###########################\n# Open local browser\n###########################\neel.start('example/hello', size=(300, 200)) # optional for off-line browsing\n```\n\nFinally, we have to set **example\\urls.py** to handle the request to example pages.\n```python\nfrom django.conf.urls import url\n\nfrom .views import hello_page\n\nurlpatterns = [\n    url(r'^hello$', hello_page),\n]\n```\n\n#### Running the demo\n\nSimply run the django project as usual:\n```\npython manage.py runserver\n```\nA browser windows should popup if this line is added in view.\n```python\neel.start('example/hello', size=(300, 200))\n```\nYou can also access the hello example by browser:\n```\nhttp://localhost:8000/example/hello\n```\nThat's it. All behaviors are basically the same as the original [Eel](https://github.com/ChrisKnott/Eel).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/seLain/Django-Eel/tarball/v0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/seLain/Django-Eel", "keywords": "gui,javascript,python,html,django", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-eel", "package_url": "https://pypi.org/project/django-eel/", "platform": "", "project_url": "https://pypi.org/project/django-eel/", "project_urls": {"Download": "https://github.com/seLain/Django-Eel/tarball/v0.1", "Homepage": "https://github.com/seLain/Django-Eel"}, "release_url": "https://pypi.org/project/django-eel/0.11/", "requires_dist": null, "requires_python": "", "summary": "A Django App for little HTML GUI applications, with easy Python/JS interoperation.", "version": "0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django-Eel</h1>\n<p>Django-Eel is a Django App for HTML GUI applications, with easy Python/JS interoperation. It is a porting version of <a href=\"https://github.com/ChrisKnott/Eel\" rel=\"nofollow\">Eel</a>.</p>\n<h3>Repo branches</h3>\n<ul>\n<li><strong>master</strong> : the master branch of Django-Eel</li>\n<li><strong>eel-master</strong> : keeping sync with <a href=\"https://github.com/ChrisKnott/Eel\" rel=\"nofollow\">Eel</a>/master</li>\n</ul>\n<h3>Requirements</h3>\n<ul>\n<li>Django ( &gt;=2.0.7 recommended )</li>\n<li>channels ( &gt;=2.1.2 recommended )</li>\n<li>gevent ( &gt;=1.3.4 recommended )</li>\n</ul>\n<h3>Getting Started</h3>\n<h4>Installation</h4>\n<p>Download Django-Eel package from GitHub and install:</p>\n<pre><code>python setup.py install\n</code></pre>\n<p>Or install through PIP:</p>\n<pre><code>pip install git+https://github.com/seLain/django-eel\n</code></pre>\n<h4>Create demo project</h4>\n<p>Create an empty django project:</p>\n<pre><code>django-admin startproject demo\n</code></pre>\n<p>Create examples django app:</p>\n<pre><code>django-admin startapp example\n</code></pre>\n<p>Add <strong>channels</strong>, <strong>django_eel</strong>, and <strong>example</strong> to <strong>demo/settings.py</strong></p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'django.contrib.admin'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.auth'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.contenttypes'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.sessions'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.messages'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django.contrib.staticfiles'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'channels'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_eel'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'example'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Set ASGI_Application in <strong>demo/settings.py</strong>. It is required by channels.</p>\n<pre><span class=\"n\">WSGI_APPLICATION</span> <span class=\"o\">=</span> <span class=\"s1\">'demo.wsgi.application'</span>\n<span class=\"n\">ASGI_APPLICATION</span> <span class=\"o\">=</span> <span class=\"s2\">\"demo.routing.application\"</span>\n</pre>\n<p>Add <strong>routine.py</strong> under <strong>demo</strong> project root. The <strong>routine.py</strong> routes websocket requests to <strong>EelConsumer</strong>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">channels.routing</span> <span class=\"kn\">import</span> <span class=\"n\">ProtocolTypeRouter</span><span class=\"p\">,</span> <span class=\"n\">URLRouter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls</span> <span class=\"kn\">import</span> <span class=\"n\">url</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_eel.consumers</span> <span class=\"kn\">import</span> <span class=\"n\">EelConsumer</span>\n\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">ProtocolTypeRouter</span><span class=\"p\">({</span>\n    <span class=\"c1\"># (http-&gt;django views is added by default)</span>\n    <span class=\"s2\">\"websocket\"</span><span class=\"p\">:</span> <span class=\"n\">URLRouter</span><span class=\"p\">([</span>\n        <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"^eel$\"</span><span class=\"p\">,</span> <span class=\"n\">EelConsumer</span><span class=\"p\">),</span> <span class=\"c1\"># do not alter this line</span>\n    <span class=\"p\">]),</span>\n<span class=\"p\">})</span>\n</pre>\n<p>Configure demo\\urls.py to route http request to eel and example respectively.</p>\n<pre><span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'admin/'</span><span class=\"p\">,</span> <span class=\"n\">admin</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"o\">.</span><span class=\"n\">urls</span><span class=\"p\">),</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^eel/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'django_eel.urls'</span><span class=\"p\">)),</span> <span class=\"c1\"># do not alter this line</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^example/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'example.urls'</span><span class=\"p\">)),</span> <span class=\"c1\"># set by your app name</span>\n<span class=\"p\">]</span>\n</pre>\n<p>That's the configuration part. Now we add a helloword example.</p>\n<h4>Create template and view</h4>\n<p>Create <strong>example\\templates\\example\\hello.html</strong> :</p>\n<pre><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Hello, World!<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n        \n        <span class=\"c\">&lt;!-- request for eel.js from django-eel, do not alter this line --&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"/eel/eel.js\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text/javascript\"</span><span class=\"p\">&gt;</span>\n        \n        <span class=\"nx\">eel</span><span class=\"p\">.</span><span class=\"nx\">expose</span><span class=\"p\">(</span><span class=\"nx\">say_hello_js</span><span class=\"p\">);</span>               <span class=\"c1\">// Expose this function to Python</span>\n        <span class=\"kd\">function</span> <span class=\"nx\">say_hello_js</span><span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">\"Hello from \"</span> <span class=\"o\">+</span> <span class=\"nx\">x</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n        \n        <span class=\"nx\">say_hello_js</span><span class=\"p\">(</span><span class=\"s2\">\"Javascript World!\"</span><span class=\"p\">);</span>\n        <span class=\"nx\">eel</span><span class=\"p\">.</span><span class=\"nx\">say_hello_py</span><span class=\"p\">(</span><span class=\"s2\">\"Javascript World!\"</span><span class=\"p\">);</span>  <span class=\"c1\">// Call a Python function</span>\n        \n        <span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    \n    <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n        Hello, World!\n    <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n<p>This <strong>hello.html</strong> is almost the same as the original <a href=\"https://github.com/ChrisKnott/Eel\" rel=\"nofollow\">Eel</a> example, except the request for <strong>eel.js</strong>.</p>\n<p>Then we create the view</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n<span class=\"kn\">import</span> <span class=\"nn\">django_eel</span> <span class=\"k\">as</span> <span class=\"nn\">eel</span>\n\n<span class=\"c1\"># initialize eel</span>\n<span class=\"n\">eel</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"s1\">'example/templates/example'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">###########################</span>\n<span class=\"c1\"># Hello example</span>\n<span class=\"c1\">###########################</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_page</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span> <span class=\"c1\"># accept request for hello.html</span>\n\t<span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'example/hello.html'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@eel</span><span class=\"o\">.</span><span class=\"n\">expose</span>\n<span class=\"k\">def</span> <span class=\"nf\">say_hello_py</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Hello from </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n\t<span class=\"n\">eel</span><span class=\"o\">.</span><span class=\"n\">say_hello_js</span><span class=\"p\">(</span><span class=\"s1\">'Python3 and Django World!'</span><span class=\"p\">)</span> <span class=\"c1\"># call js function</span>\n\n<span class=\"c1\">###########################</span>\n<span class=\"c1\"># Open local browser</span>\n<span class=\"c1\">###########################</span>\n<span class=\"n\">eel</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'example/hello'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">))</span> <span class=\"c1\"># optional for off-line browsing</span>\n</pre>\n<p>Finally, we have to set <strong>example\\urls.py</strong> to handle the request to example pages.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf.urls</span> <span class=\"kn\">import</span> <span class=\"n\">url</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.views</span> <span class=\"kn\">import</span> <span class=\"n\">hello_page</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^hello$'</span><span class=\"p\">,</span> <span class=\"n\">hello_page</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n</pre>\n<h4>Running the demo</h4>\n<p>Simply run the django project as usual:</p>\n<pre><code>python manage.py runserver\n</code></pre>\n<p>A browser windows should popup if this line is added in view.</p>\n<pre><span class=\"n\">eel</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'example/hello'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">))</span>\n</pre>\n<p>You can also access the hello example by browser:</p>\n<pre><code>http://localhost:8000/example/hello\n</code></pre>\n<p>That's it. All behaviors are basically the same as the original <a href=\"https://github.com/ChrisKnott/Eel\" rel=\"nofollow\">Eel</a>.</p>\n\n          </div>"}, "last_serial": 4064688, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "13efb7e2d45027b596bdcbc891f5cd20", "sha256": "5a48fc455187d5d621504949008b4861aa068a79b72b639d2fd69595cae5a8b4"}, "downloads": -1, "filename": "django-eel-0.1.tar.gz", "has_sig": false, "md5_digest": "13efb7e2d45027b596bdcbc891f5cd20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8726, "upload_time": "2018-07-16T06:23:03", "upload_time_iso_8601": "2018-07-16T06:23:03.597253Z", "url": "https://files.pythonhosted.org/packages/7b/ae/e75f8109bdb97abe9817cae712cb70aee653cb514cae26b37bcf9f398333/django-eel-0.1.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "fd7332449238dc056da3ef6dd8cfac6c", "sha256": "6a14a06829a03435a8200f0583dc7024d223e222b1d65a1c1a6cdd13dfec2c54"}, "downloads": -1, "filename": "django-eel-0.11.tar.gz", "has_sig": false, "md5_digest": "fd7332449238dc056da3ef6dd8cfac6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9307, "upload_time": "2018-07-16T06:45:02", "upload_time_iso_8601": "2018-07-16T06:45:02.618700Z", "url": "https://files.pythonhosted.org/packages/f1/89/1db67060013e9c865e0e2f5f7dd5ef033016e7a5c0275591c97b01ed12f6/django-eel-0.11.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd7332449238dc056da3ef6dd8cfac6c", "sha256": "6a14a06829a03435a8200f0583dc7024d223e222b1d65a1c1a6cdd13dfec2c54"}, "downloads": -1, "filename": "django-eel-0.11.tar.gz", "has_sig": false, "md5_digest": "fd7332449238dc056da3ef6dd8cfac6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9307, "upload_time": "2018-07-16T06:45:02", "upload_time_iso_8601": "2018-07-16T06:45:02.618700Z", "url": "https://files.pythonhosted.org/packages/f1/89/1db67060013e9c865e0e2f5f7dd5ef033016e7a5c0275591c97b01ed12f6/django-eel-0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:25 2020"}