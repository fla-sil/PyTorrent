{"info": {"author": "Infrae", "author_email": "info@infrae.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Zope2", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "================\nsilva.core.cache\n================\n\nPresentation\n============\n\nThis package provide a pluggable cache support for Silva related\ncomponents, base on `Beaker <http://beaker.groovie.org/index.html>`_.\nBy default content will be cached in memory, but you can use a different\nstorage like files, memcache or an SQL database to store cached content.\n\nFor a single instance installation we recommand to use memory as\nstorage. For a ZEO / multi Zope instance installation we recommand to\nuse memcache as storage.\n\nTo use memcache recommend to install `pylibmc`, this can be done via\nbuildout. Please refer to the installation documentation of Silva for\nthis.\n\nAfter you can configure in your Zope configuration\n(``zope.conf``) which storage to use for which regions::\n\n  <product-config silva.core.cache>\n\n      # default region\n      default.lock_dir /tmp/memcache\n      default.type ext:memcached\n      default.url localhost:11211\n\n      # shared region\n      shared.lock_dir /tmp/memcache\n      shared.type ext:memcached\n      shared.url someotherhost:11211\n\n  </product-config>\n\nAPI\n===\n\nDevelopers have different tools at their disposal, mainly:\n\n``silva.core.cache.descriptors.cached_method``\n   Decorator that can be used on a class method to cache its\n   computation. It can take a ``region`` which specify which caching\n   region to use, a ``key`` which is a callable, taking as parameter\n   the class on which the method is called to compute a caching\n   key. If ``region`` is not specified, all other parameters are Beaker\n   options used to configured the cache manager used.\n\n``silva.core.cache.descriptors.cached_property``\n   Decorator that can be used on a class to create a read-only\n   property where its computation is cached in Beaker. Except for\n   ``key`` it takes the same parameters than ``cached_method``.\n\n``silva.core.cache.store.Store``\n   Giving a cache name, it give a dictionnary like access to this\n   cache.\n\n``silva.core.cache.store.SessionStore``\n   Constructed out of a request, it is a dictionnary like access to a\n   unique cache for this user session. The session is identified with\n   the help of the adapter ``IClientId`` of ``zope.session``. An\n   implementation of this adapter for Zope 2 is done in this package.\n\n``silva.core.cache.interfaces.ICacheManager``\n   A global utility provides this interface to give you access to all\n   cache managers used by this extension.\n\n``silva.core.cache.memcacheutils.MemcacheSlice``\n   Store a list of items in memcache.\n\n\nCode repository\n===============\n\nThe code for this extension can be found in Git at:\nhttps://github.com/silvacms/silva.core.cache\n\nChanges\n=======\n\n3.0.2 (2013/03/06)\n------------------\n\n* Session cookie now uses ``IVirtualSite`` new top level path method\n  instead of root path, ensuring the cookie is set for the whole site.\n\n3.0.1 (2012/09/24)\n------------------\n\n* Session cookie use the HTTPOnly flag now.\n\n* Update API to match Silva 3.0c1.\n\n3.0 (2011/11/08)\n----------------\n\n* Add a memcache slice to store a list of items in memcache. There is\n  a fallback available if you don't have memcache.\n\n* Improve cache descriptors.\n\n2.3.2 (2010/10/27)\n------------------\n\n* Ensure caching keys are always string. This is required by memcache\n  implementations.\n\n2.3.1 (2010/10/18)\n------------------\n\n* Fix cookie path for cookie session in case of virtual host hosting.\n\n2.3 (2010/10/06)\n----------------\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/silvacms/silva.core.cache", "keywords": "zope2 cache silva", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "silva.core.cache", "package_url": "https://pypi.org/project/silva.core.cache/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/silva.core.cache/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/silvacms/silva.core.cache"}, "release_url": "https://pypi.org/project/silva.core.cache/3.0.2/", "requires_dist": null, "requires_python": null, "summary": "Caching sub-system for Silva CMS", "version": "3.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"presentation\">\n<h2>Presentation</h2>\n<p>This package provide a pluggable cache support for Silva related\ncomponents, base on <a href=\"http://beaker.groovie.org/index.html\" rel=\"nofollow\">Beaker</a>.\nBy default content will be cached in memory, but you can use a different\nstorage like files, memcache or an SQL database to store cached content.</p>\n<p>For a single instance installation we recommand to use memory as\nstorage. For a ZEO / multi Zope instance installation we recommand to\nuse memcache as storage.</p>\n<p>To use memcache recommend to install <cite>pylibmc</cite>, this can be done via\nbuildout. Please refer to the installation documentation of Silva for\nthis.</p>\n<p>After you can configure in your Zope configuration\n(<tt>zope.conf</tt>) which storage to use for which regions:</p>\n<pre>&lt;product-config silva.core.cache&gt;\n\n    # default region\n    default.lock_dir /tmp/memcache\n    default.type ext:memcached\n    default.url localhost:11211\n\n    # shared region\n    shared.lock_dir /tmp/memcache\n    shared.type ext:memcached\n    shared.url someotherhost:11211\n\n&lt;/product-config&gt;\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<p>Developers have different tools at their disposal, mainly:</p>\n<dl>\n<dt><tt>silva.core.cache.descriptors.cached_method</tt></dt>\n<dd>Decorator that can be used on a class method to cache its\ncomputation. It can take a <tt>region</tt> which specify which caching\nregion to use, a <tt>key</tt> which is a callable, taking as parameter\nthe class on which the method is called to compute a caching\nkey. If <tt>region</tt> is not specified, all other parameters are Beaker\noptions used to configured the cache manager used.</dd>\n<dt><tt>silva.core.cache.descriptors.cached_property</tt></dt>\n<dd>Decorator that can be used on a class to create a read-only\nproperty where its computation is cached in Beaker. Except for\n<tt>key</tt> it takes the same parameters than <tt>cached_method</tt>.</dd>\n<dt><tt>silva.core.cache.store.Store</tt></dt>\n<dd>Giving a cache name, it give a dictionnary like access to this\ncache.</dd>\n<dt><tt>silva.core.cache.store.SessionStore</tt></dt>\n<dd>Constructed out of a request, it is a dictionnary like access to a\nunique cache for this user session. The session is identified with\nthe help of the adapter <tt>IClientId</tt> of <tt>zope.session</tt>. An\nimplementation of this adapter for Zope 2 is done in this package.</dd>\n<dt><tt>silva.core.cache.interfaces.ICacheManager</tt></dt>\n<dd>A global utility provides this interface to give you access to all\ncache managers used by this extension.</dd>\n<dt><tt>silva.core.cache.memcacheutils.MemcacheSlice</tt></dt>\n<dd>Store a list of items in memcache.</dd>\n</dl>\n</div>\n<div id=\"code-repository\">\n<h2>Code repository</h2>\n<p>The code for this extension can be found in Git at:\n<a href=\"https://github.com/silvacms/silva.core.cache\" rel=\"nofollow\">https://github.com/silvacms/silva.core.cache</a></p>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>3.0.2 (2013/03/06)</h3>\n<ul>\n<li>Session cookie now uses <tt>IVirtualSite</tt> new top level path method\ninstead of root path, ensuring the cookie is set for the whole site.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>3.0.1 (2012/09/24)</h3>\n<ul>\n<li>Session cookie use the HTTPOnly flag now.</li>\n<li>Update API to match Silva 3.0c1.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>3.0 (2011/11/08)</h3>\n<ul>\n<li>Add a memcache slice to store a list of items in memcache. There is\na fallback available if you don\u2019t have memcache.</li>\n<li>Improve cache descriptors.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>2.3.2 (2010/10/27)</h3>\n<ul>\n<li>Ensure caching keys are always string. This is required by memcache\nimplementations.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>2.3.1 (2010/10/18)</h3>\n<ul>\n<li>Fix cookie path for cookie session in case of virtual host hosting.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>2.3 (2010/10/06)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 947601, "releases": {"2.1": [{"comment_text": "", "digests": {"md5": "6b8fef82fe9623fa814f29ee3bc27846", "sha256": "b92dc43f5b45f339cb35aad04ceb65a9f49a0c53310317442040d3727f9e5e36"}, "downloads": -1, "filename": "silva.core.cache-2.1.tar.gz", "has_sig": false, "md5_digest": "6b8fef82fe9623fa814f29ee3bc27846", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6575, "upload_time": "2013-12-18T10:40:52", "upload_time_iso_8601": "2013-12-18T10:40:52.058934Z", "url": "https://files.pythonhosted.org/packages/6c/bf/82959764d9d8950048498aa372d571d99c6a14605789e65c893938d7da9c/silva.core.cache-2.1.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "2c022db9eecaf5d00a336b7229992b59", "sha256": "8760da7a206f4074514cc25309413aa3037cace1c25610d03588c13fd809196b"}, "downloads": -1, "filename": "silva.core.cache-2.3.3.tar.gz", "has_sig": false, "md5_digest": "2c022db9eecaf5d00a336b7229992b59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8290, "upload_time": "2013-12-17T09:56:19", "upload_time_iso_8601": "2013-12-17T09:56:19.426973Z", "url": "https://files.pythonhosted.org/packages/e1/0a/d2ee7b9fb74f2be948007a70692e4e14fb468ae4fbb41c4c5a22556fe7af/silva.core.cache-2.3.3.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "e271afb094408aff622c3ba6a660208b", "sha256": "2a57224b923254ae235602409dcbd41da656d869385defdcdf62ad6991d42a31"}, "downloads": -1, "filename": "silva.core.cache-3.0.2.tar.gz", "has_sig": false, "md5_digest": "e271afb094408aff622c3ba6a660208b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11589, "upload_time": "2013-12-16T12:24:05", "upload_time_iso_8601": "2013-12-16T12:24:05.716015Z", "url": "https://files.pythonhosted.org/packages/83/be/dfa283906c530e6eadaecdc0d2b2c26a5843a2fe21645e0662ad08de0743/silva.core.cache-3.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e271afb094408aff622c3ba6a660208b", "sha256": "2a57224b923254ae235602409dcbd41da656d869385defdcdf62ad6991d42a31"}, "downloads": -1, "filename": "silva.core.cache-3.0.2.tar.gz", "has_sig": false, "md5_digest": "e271afb094408aff622c3ba6a660208b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11589, "upload_time": "2013-12-16T12:24:05", "upload_time_iso_8601": "2013-12-16T12:24:05.716015Z", "url": "https://files.pythonhosted.org/packages/83/be/dfa283906c530e6eadaecdc0d2b2c26a5843a2fe21645e0662ad08de0743/silva.core.cache-3.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:25 2020"}