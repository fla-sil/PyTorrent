{"info": {"author": "Aron Griffis", "author_email": "aron@scampersand.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "==============\nenvbash-python\n==============\n\n|PyPI| |Build Status| |Coverage Report| |Python Versions|\n\nPython module for sourcing a bash script to augment the environment.\nSupports Python 2.7 and 3.4+\n\nRationale\n---------\n\n`12-factor apps <https://12factor.net/>`__ require `configuration loaded\nfrom the environment <https://12factor.net/config>`__.\n\nThat's `easy on a platform like\nHeroku <https://devcenter.heroku.com/articles/config-vars>`__, where the\nenvironment is preset by the user with commands like\n``heroku config:set``. But it's messier in development and non-Heroku\ndeployments, where the environment might need to be loaded from a file.\n\nThis package provides a mechanism for sourcing a Bash script to update\nPython's environment (``os.environ``). Commonly the external file is called\n``env.bash``, hence the name of this project.\n\nInstallation\n------------\n\nInstall from PyPI_:\n\n.. code:: sh\n\n    pip install envbash\n\nUsage\n-----\n\nCall ``load_envbash`` to source a Bash script into the current Python process.\nAny variables that are set in the script, regardless of whether they are\nexplicitly exported, will be added to the process environment.\n\nFor example, given ``env.bash`` with the following content:\n\n.. code:: sh\n\n    FOO='bar baz qux'\n\nThis can be loaded into Python:\n\n.. code:: python\n\n    import os\n    from envbash import load_envbash\n\n    load_envbash('env.bash')\n\n    print(os.environ['FOO'])  #=> bar baz qux\n\nFAQ\n---\n\nHow is this different from `dotenv <https://github.com/theskumar/python-dotenv>`__?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBoth projects aim to solve the same problem, but differ in approach. In\nparticular, dotenv uses an ad hoc config syntax whereas envbash uses\nBash.\n\ndotenv's syntax becomes a problem with multi-line strings. dotenv intends for\nthe ``.env`` file to be readable by the shell, but the dotenv format for\nmulti-line strings isn't compatible with the shell.\n\nIf the point is to have a configuration language that's well-suited to\nenvironment variables, it's hard to beat pure Bash, and it's guaranteed\nto source properly into the shell.\n\nShould I commit ``env.bash`` to source control?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNo, definitely not. The purpose of ``env.bash`` is to store development\nconfiguration that isn't suitable for committing to the repository,\nwhether that's secret keys or developer-specific customizations. In\nfact, you should add the following line to ``.gitignore``:\n\n::\n\n    /env.bash\n\nIs it necessary to explicitly ``export`` variables in ``env.bash``?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNo, envbash prefixes sourcing your ``env.bash`` with ``set -a`` which\ncauses all newly-set variables to be exported automatically. If you\nwould rather explicitly export variables, you can ``set +a`` at the top\nof your ``env.bash``.\n\nHow do I put a multi-line string into ``env.bash``?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can put newlines directly into a multi-line string in Bash, so for\nexample this works:\n\n.. code:: bash\n\n    PRIVATE_KEY=\"\n    -----BEGIN RSA PRIVATE KEY-----\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n    -----END RSA PRIVATE KEY-----\"\n\nDoes envbash override my environment settings?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default your local environment settings win, so you can override the\ncontent of ``env.bash`` by explicitly exporting variables in your shell.\n\nYou can change this behavior. This makes sense for a deployed instance\nthat gets full configuration from ``env.bash`` and needs to be protected\nfrom the calling environment.\n\n.. code:: python\n\n    load_envbash('env.bash', override=True)\n\nCan I remove settings from the environment?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default envbash doesn't remove settings, but you can change this\nbehavior.\n\n.. code:: python\n\n    load_envbash('env.bash', remove=True)\n\nThis will cause any variables that you explicitly ``unset`` in\n``env.bash`` to be removed from Python's ``os.environ`` as well.\n\nHow do I source ``env.bash`` into my guest shell environment?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAssuming that your source directory is available on the default\n``/vagrant`` mount point in the guest, you can add add this line at the\nbottom of ``/home/vagrant/.bash_profile``:\n\n::\n\n    set -a; source /vagrant/env.bash; set +a\n\nNote that this means that settings are loaded on ``vagrant ssh`` so you\nneed to exit the shell and rerun ``vagrant ssh`` to refresh if you\nchange settings.\n\nWhat about Ruby?\n~~~~~~~~~~~~~~~~~~\n\nSee `envbash-ruby <https://github.com/scampersand/envbash-ruby>`__\n\nLegal\n-----\n\nCopyright 2017-2018 `Scampersand LLC <https://scampersand.com>`_\n\nReleased under the `MIT license <https://github.com/scampersand/envbash-python/blob/master/LICENSE>`_\n\n.. _PyPI: https://pypi.python.org/pypi/envbash\n\n.. |Build Status| image:: https://img.shields.io/travis/scampersand/envbash-python/master.svg?style=plastic\n   :target: https://travis-ci.org/scampersand/envbash-python?branch=master\n\n.. |Coverage Report| image:: https://img.shields.io/codecov/c/github/scampersand/envbash-python/master.svg?style=plastic\n   :target: https://codecov.io/gh/scampersand/envbash-python/branch/master\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/envbash.svg?style=plastic\n   :target: PyPI_\n\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/envbash.svg?style=plastic\n   :target: PyPI_\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scampersand/envbash-python", "keywords": "bash,environment,environ,env", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "envbash", "package_url": "https://pypi.org/project/envbash/", "platform": "", "project_url": "https://pypi.org/project/envbash/", "project_urls": {"Homepage": "https://github.com/scampersand/envbash-python"}, "release_url": "https://pypi.org/project/envbash/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Source env.bash script to update environment", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/envbash\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f24aaa8166c7113ca6635909f8daa638184f6768/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656e76626173682e7376673f7374796c653d706c6173746963\"></a> <a href=\"https://travis-ci.org/scampersand/envbash-python?branch=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3517d294412106ea57b877f15c56e05318bed770/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7363616d70657273616e642f656e76626173682d707974686f6e2f6d61737465722e7376673f7374796c653d706c6173746963\"></a> <a href=\"https://codecov.io/gh/scampersand/envbash-python/branch/master\" rel=\"nofollow\"><img alt=\"Coverage Report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b283398fe6e9ed90aad0142f92be25efc55a5de9/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f7363616d70657273616e642f656e76626173682d707974686f6e2f6d61737465722e7376673f7374796c653d706c6173746963\"></a> <a href=\"https://pypi.python.org/pypi/envbash\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a93bc93acd002926c53e0e79c2d5d52f1969bc8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f656e76626173682e7376673f7374796c653d706c6173746963\"></a></p>\n<p>Python module for sourcing a bash script to augment the environment.\nSupports Python 2.7 and 3.4+</p>\n<div id=\"rationale\">\n<h2>Rationale</h2>\n<p><a href=\"https://12factor.net/\" rel=\"nofollow\">12-factor apps</a> require <a href=\"https://12factor.net/config\" rel=\"nofollow\">configuration loaded\nfrom the environment</a>.</p>\n<p>That\u2019s <a href=\"https://devcenter.heroku.com/articles/config-vars\" rel=\"nofollow\">easy on a platform like\nHeroku</a>, where the\nenvironment is preset by the user with commands like\n<tt>heroku config:set</tt>. But it\u2019s messier in development and non-Heroku\ndeployments, where the environment might need to be loaded from a file.</p>\n<p>This package provides a mechanism for sourcing a Bash script to update\nPython\u2019s environment (<tt>os.environ</tt>). Commonly the external file is called\n<tt>env.bash</tt>, hence the name of this project.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install from <a href=\"https://pypi.python.org/pypi/envbash\" rel=\"nofollow\">PyPI</a>:</p>\n<pre>pip install envbash\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Call <tt>load_envbash</tt> to source a Bash script into the current Python process.\nAny variables that are set in the script, regardless of whether they are\nexplicitly exported, will be added to the process environment.</p>\n<p>For example, given <tt>env.bash</tt> with the following content:</p>\n<pre><span class=\"nv\">FOO</span><span class=\"o\">=</span><span class=\"s1\">'bar baz qux'</span>\n</pre>\n<p>This can be loaded into Python:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">envbash</span> <span class=\"kn\">import</span> <span class=\"n\">load_envbash</span>\n\n<span class=\"n\">load_envbash</span><span class=\"p\">(</span><span class=\"s1\">'env.bash'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s1\">'FOO'</span><span class=\"p\">])</span>  <span class=\"c1\">#=&gt; bar baz qux</span>\n</pre>\n</div>\n<div id=\"faq\">\n<h2>FAQ</h2>\n<div id=\"how-is-this-different-from-dotenv\">\n<h3>How is this different from <a href=\"https://github.com/theskumar/python-dotenv\" rel=\"nofollow\">dotenv</a>?</h3>\n<p>Both projects aim to solve the same problem, but differ in approach. In\nparticular, dotenv uses an ad hoc config syntax whereas envbash uses\nBash.</p>\n<p>dotenv\u2019s syntax becomes a problem with multi-line strings. dotenv intends for\nthe <tt>.env</tt> file to be readable by the shell, but the dotenv format for\nmulti-line strings isn\u2019t compatible with the shell.</p>\n<p>If the point is to have a configuration language that\u2019s well-suited to\nenvironment variables, it\u2019s hard to beat pure Bash, and it\u2019s guaranteed\nto source properly into the shell.</p>\n</div>\n<div id=\"should-i-commit-env-bash-to-source-control\">\n<h3>Should I commit <tt>env.bash</tt> to source control?</h3>\n<p>No, definitely not. The purpose of <tt>env.bash</tt> is to store development\nconfiguration that isn\u2019t suitable for committing to the repository,\nwhether that\u2019s secret keys or developer-specific customizations. In\nfact, you should add the following line to <tt>.gitignore</tt>:</p>\n<pre>/env.bash\n</pre>\n</div>\n<div id=\"is-it-necessary-to-explicitly-export-variables-in-env-bash\">\n<h3>Is it necessary to explicitly <tt>export</tt> variables in <tt>env.bash</tt>?</h3>\n<p>No, envbash prefixes sourcing your <tt>env.bash</tt> with <tt>set <span class=\"pre\">-a</span></tt> which\ncauses all newly-set variables to be exported automatically. If you\nwould rather explicitly export variables, you can <tt>set +a</tt> at the top\nof your <tt>env.bash</tt>.</p>\n</div>\n<div id=\"how-do-i-put-a-multi-line-string-into-env-bash\">\n<h3>How do I put a multi-line string into <tt>env.bash</tt>?</h3>\n<p>You can put newlines directly into a multi-line string in Bash, so for\nexample this works:</p>\n<pre><span class=\"nv\">PRIVATE_KEY</span><span class=\"o\">=</span><span class=\"s2\">\"\n-----BEGIN RSA PRIVATE KEY-----\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n-----END RSA PRIVATE KEY-----\"</span>\n</pre>\n</div>\n<div id=\"does-envbash-override-my-environment-settings\">\n<h3>Does envbash override my environment settings?</h3>\n<p>By default your local environment settings win, so you can override the\ncontent of <tt>env.bash</tt> by explicitly exporting variables in your shell.</p>\n<p>You can change this behavior. This makes sense for a deployed instance\nthat gets full configuration from <tt>env.bash</tt> and needs to be protected\nfrom the calling environment.</p>\n<pre><span class=\"n\">load_envbash</span><span class=\"p\">(</span><span class=\"s1\">'env.bash'</span><span class=\"p\">,</span> <span class=\"n\">override</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"can-i-remove-settings-from-the-environment\">\n<h3>Can I remove settings from the environment?</h3>\n<p>By default envbash doesn\u2019t remove settings, but you can change this\nbehavior.</p>\n<pre><span class=\"n\">load_envbash</span><span class=\"p\">(</span><span class=\"s1\">'env.bash'</span><span class=\"p\">,</span> <span class=\"n\">remove</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>This will cause any variables that you explicitly <tt>unset</tt> in\n<tt>env.bash</tt> to be removed from Python\u2019s <tt>os.environ</tt> as well.</p>\n</div>\n<div id=\"how-do-i-source-env-bash-into-my-guest-shell-environment\">\n<h3>How do I source <tt>env.bash</tt> into my guest shell environment?</h3>\n<p>Assuming that your source directory is available on the default\n<tt>/vagrant</tt> mount point in the guest, you can add add this line at the\nbottom of <tt><span class=\"pre\">/home/vagrant/.bash_profile</span></tt>:</p>\n<pre>set -a; source /vagrant/env.bash; set +a\n</pre>\n<p>Note that this means that settings are loaded on <tt>vagrant ssh</tt> so you\nneed to exit the shell and rerun <tt>vagrant ssh</tt> to refresh if you\nchange settings.</p>\n</div>\n<div id=\"what-about-ruby\">\n<h3>What about Ruby?</h3>\n<p>See <a href=\"https://github.com/scampersand/envbash-ruby\" rel=\"nofollow\">envbash-ruby</a></p>\n</div>\n</div>\n<div id=\"legal\">\n<h2>Legal</h2>\n<p>Copyright 2017-2018 <a href=\"https://scampersand.com\" rel=\"nofollow\">Scampersand LLC</a></p>\n<p>Released under the <a href=\"https://github.com/scampersand/envbash-python/blob/master/LICENSE\" rel=\"nofollow\">MIT license</a></p>\n</div>\n\n          </div>"}, "last_serial": 6093345, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ae1f4caa6bbfc0d9773963211dc060d8", "sha256": "c0c478903b8a2fb88e93a83f5f027f7e3bec8ec565d7ddece1da6f4e9f670416"}, "downloads": -1, "filename": "envbash-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ae1f4caa6bbfc0d9773963211dc060d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3736, "upload_time": "2017-02-04T21:52:06", "upload_time_iso_8601": "2017-02-04T21:52:06.575873Z", "url": "https://files.pythonhosted.org/packages/b7/70/34462a5c110385759ed17e131642a962e95b6f9fbadd8822157b352c1ecd/envbash-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "26fe9d56ca87807772879cd279642eba", "sha256": "4f8c23490e45c0048f66ba36bcd62af338f86100a4f9a0cee614ba60ce67a282"}, "downloads": -1, "filename": "envbash-1.1.0.tar.gz", "has_sig": false, "md5_digest": "26fe9d56ca87807772879cd279642eba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3780, "upload_time": "2017-02-08T01:46:01", "upload_time_iso_8601": "2017-02-08T01:46:01.245456Z", "url": "https://files.pythonhosted.org/packages/43/40/5ec739cf16e2a41c91143f7e467ff906e6b0c2b90af59d9f6504fcad05e6/envbash-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "be68b991dadb4add562e67a119e15411", "sha256": "68f0b738ce1fcfda6886820619f4333f328220a17bb2ab2607d02e3d8b0dd9ae"}, "downloads": -1, "filename": "envbash-1.1.1.tar.gz", "has_sig": false, "md5_digest": "be68b991dadb4add562e67a119e15411", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3838, "upload_time": "2017-02-08T21:22:00", "upload_time_iso_8601": "2017-02-08T21:22:00.780454Z", "url": "https://files.pythonhosted.org/packages/ab/79/205776a4c5a2dc92b88e67ed6f6ea2ddc96b4c6b26ff4233b1a86269d4a3/envbash-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "e7d489a8a0fc18b67dd62f4af6d7d2e1", "sha256": "45b4902118542e4de7fca98065a54f5298d9e9b1a63bfc95e054d4e65c934330"}, "downloads": -1, "filename": "envbash-1.1.2-py3-none-any.whl", "has_sig": true, "md5_digest": "e7d489a8a0fc18b67dd62f4af6d7d2e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8194, "upload_time": "2018-09-25T01:19:37", "upload_time_iso_8601": "2018-09-25T01:19:37.383500Z", "url": "https://files.pythonhosted.org/packages/6b/e2/2af41e6fc86af77023b733a204bc66f5b646818c566b8e6f82917f2cd0d6/envbash-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f2ea0026819b6f0dbbc91e4454790ce", "sha256": "833d7394e05362addcaf28ff0ffa5a6e9786f55d0115b84a94cf932aacca52fc"}, "downloads": -1, "filename": "envbash-1.1.2.tar.gz", "has_sig": true, "md5_digest": "6f2ea0026819b6f0dbbc91e4454790ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5197, "upload_time": "2018-09-25T01:19:42", "upload_time_iso_8601": "2018-09-25T01:19:42.286153Z", "url": "https://files.pythonhosted.org/packages/e7/d6/a6da872d68689f36c61196340a8d4eb905f78d0e427c33c26f4835c45c8f/envbash-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "a3f7390abf39dcee070941afa4d5a2c9", "sha256": "07ee689774bcf28ff936f43f738b315d4070c60445ed0bda7b1ab920482e221b"}, "downloads": -1, "filename": "envbash-1.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "a3f7390abf39dcee070941afa4d5a2c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6099, "upload_time": "2019-11-07T13:33:31", "upload_time_iso_8601": "2019-11-07T13:33:31.871348Z", "url": "https://files.pythonhosted.org/packages/15/96/0d9e1402c65b26a66fee7614649b53978281242d62cf43a0e1348c57bd19/envbash-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "543f29df81f9b80275e0042f18490d33", "sha256": "db92921c556c7b31fa38ddf06471bffd06fe66f296159a3c4adbcc9d7628f985"}, "downloads": -1, "filename": "envbash-1.2.0.tar.gz", "has_sig": true, "md5_digest": "543f29df81f9b80275e0042f18490d33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5250, "upload_time": "2019-11-07T13:33:33", "upload_time_iso_8601": "2019-11-07T13:33:33.742382Z", "url": "https://files.pythonhosted.org/packages/7e/9b/e1e54d9454df271ebda972d469152f40aad8c9973d1872fd376d79dc0efe/envbash-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3f7390abf39dcee070941afa4d5a2c9", "sha256": "07ee689774bcf28ff936f43f738b315d4070c60445ed0bda7b1ab920482e221b"}, "downloads": -1, "filename": "envbash-1.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "a3f7390abf39dcee070941afa4d5a2c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6099, "upload_time": "2019-11-07T13:33:31", "upload_time_iso_8601": "2019-11-07T13:33:31.871348Z", "url": "https://files.pythonhosted.org/packages/15/96/0d9e1402c65b26a66fee7614649b53978281242d62cf43a0e1348c57bd19/envbash-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "543f29df81f9b80275e0042f18490d33", "sha256": "db92921c556c7b31fa38ddf06471bffd06fe66f296159a3c4adbcc9d7628f985"}, "downloads": -1, "filename": "envbash-1.2.0.tar.gz", "has_sig": true, "md5_digest": "543f29df81f9b80275e0042f18490d33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5250, "upload_time": "2019-11-07T13:33:33", "upload_time_iso_8601": "2019-11-07T13:33:33.742382Z", "url": "https://files.pythonhosted.org/packages/7e/9b/e1e54d9454df271ebda972d469152f40aad8c9973d1872fd376d79dc0efe/envbash-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:11 2020"}