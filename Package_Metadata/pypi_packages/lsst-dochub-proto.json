{"info": {"author": "Adam Thornton", "author_email": "athornton@lsst.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5"], "description": "#####################\nLSST DocHub Prototype\n#####################\n\n.. image:: https://img.shields.io/pypi/v/lsst-dochub-prototype.svg\n   :target: https://pypi.python.org/pypi/lsst-dochub-prototype\n   :alt: Python Package Index\n.. image:: https://img.shields.io/travis/lsst-sqre/dochub-prototype.svg?branch=master\n   :target: https://travis-ci.org/lsst-sqre/dochub-prototype\n   :alt: Travis CI build status\n\nPrototype of LSST DocHub (`www.lsst.io`_) as a static website generator.\n\nUsage\n=====\n\n::\n\n  #/usr/bin/env python\n  from dochubproto import DocHubProto\n\n  p = DocHubProto()\n  idx = p.render_index()\n\nConfiguration\n=============\n\n``DocHubProto`` uses the following environment variables:\n\n- ``KEEPER_URL`` (default ``https://keeper.lsst.codes``).\n- ``LOGLEVEL`` (default ``WARNING``).\n- ``TEMPLATE_DIR``: directory containing Jinja2 templates (default ``templates``).\n- ``UL_TEMPLATE_NAME``: relative path to template for individual document items (default ``doclist.jinja2``).\n- ``IDX_TEMPLATE_NAME``: relative path to the ``index.html`` template (default ``index.jinja2``).\n- ``MAX_DOCUMENT_DATA_AGE``: maximum cache age in seconds of a document (default ``3600``).\n\nDocHubProto API overview\n========================\n\n- ``check_state()`` returns one of:\n\n  - ``STATE_EMPTY`` (``'empty'``)\n  - ``STATE_READY`` (``'ready'``)\n  - ``STATE_REFRESHING`` (``'refreshing'``)\n  - ``STATE_STALE`` (``'stale'``)\n\n  A document is 'stale' if it is older than ``MAX_DOCUMENT_DATA_AGE``.\n\n- ``get_document_data()`` and ``get_fresh_document_data()`` return a ``dict`` whose keys are document sections (e.g. ``DMTN``) and within each section, a list ordered by document handle (e.g. ``dmtn-038``).\n\n- ``render()`` returns an HTML unordered list entity created from the document data, encoded as UTF-8.\n\n- ``render_index()`` returns an HTML document created from the document data, encoded as UTF-8.\n\n- ``debug()``, ``info()``, ``warning()``, ``error()``, and ``critical()`` each log a message at the specified level; it uses a `structlog`_ logger to log JSON output via `apikit`_.\n\n.. _apikit: https://github.com/lsst-sqre/sqre-apikit\n.. _structlog: https://structlog.readthedocs.io/en/stable/\n.. _`www.lsst.io`: https://www.lsst.io", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sqre-lsst/dochub-prototype", "keywords": "lsst", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "lsst-dochub-proto", "package_url": "https://pypi.org/project/lsst-dochub-proto/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lsst-dochub-proto/", "project_urls": {"Homepage": "https://github.com/sqre-lsst/dochub-prototype"}, "release_url": "https://pypi.org/project/lsst-dochub-proto/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Prototype of LSST DocHub as a static website generator", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/lsst-dochub-prototype\" rel=\"nofollow\"><img alt=\"Python Package Index\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25715ca083b11ccbfe9c9b474258b14f60b159fd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6c7373742d646f636875622d70726f746f747970652e737667\"></a>\n<a href=\"https://travis-ci.org/lsst-sqre/dochub-prototype\" rel=\"nofollow\"><img alt=\"Travis CI build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f42b11d3955fabb5f96953aeeb78857f4e768145/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6c7373742d737172652f646f636875622d70726f746f747970652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Prototype of LSST DocHub (<a href=\"https://www.lsst.io\" rel=\"nofollow\">www.lsst.io</a>) as a static website generator.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>#/usr/bin/env python\nfrom dochubproto import DocHubProto\n\np = DocHubProto()\nidx = p.render_index()\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p><tt>DocHubProto</tt> uses the following environment variables:</p>\n<ul>\n<li><tt>KEEPER_URL</tt> (default <tt><span class=\"pre\">https://keeper.lsst.codes</span></tt>).</li>\n<li><tt>LOGLEVEL</tt> (default <tt>WARNING</tt>).</li>\n<li><tt>TEMPLATE_DIR</tt>: directory containing Jinja2 templates (default <tt>templates</tt>).</li>\n<li><tt>UL_TEMPLATE_NAME</tt>: relative path to template for individual document items (default <tt>doclist.jinja2</tt>).</li>\n<li><tt>IDX_TEMPLATE_NAME</tt>: relative path to the <tt>index.html</tt> template (default <tt>index.jinja2</tt>).</li>\n<li><tt>MAX_DOCUMENT_DATA_AGE</tt>: maximum cache age in seconds of a document (default <tt>3600</tt>).</li>\n</ul>\n</div>\n<div id=\"dochubproto-api-overview\">\n<h2>DocHubProto API overview</h2>\n<ul>\n<li><p><tt>check_state()</tt> returns one of:</p>\n<ul>\n<li><tt>STATE_EMPTY</tt> (<tt>'empty'</tt>)</li>\n<li><tt>STATE_READY</tt> (<tt>'ready'</tt>)</li>\n<li><tt>STATE_REFRESHING</tt> (<tt>'refreshing'</tt>)</li>\n<li><tt>STATE_STALE</tt> (<tt>'stale'</tt>)</li>\n</ul>\n<p>A document is \u2018stale\u2019 if it is older than <tt>MAX_DOCUMENT_DATA_AGE</tt>.</p>\n</li>\n<li><p><tt>get_document_data()</tt> and <tt>get_fresh_document_data()</tt> return a <tt>dict</tt> whose keys are document sections (e.g. <tt>DMTN</tt>) and within each section, a list ordered by document handle (e.g. <tt><span class=\"pre\">dmtn-038</span></tt>).</p>\n</li>\n<li><p><tt>render()</tt> returns an HTML unordered list entity created from the document data, encoded as UTF-8.</p>\n</li>\n<li><p><tt>render_index()</tt> returns an HTML document created from the document data, encoded as UTF-8.</p>\n</li>\n<li><p><tt>debug()</tt>, <tt>info()</tt>, <tt>warning()</tt>, <tt>error()</tt>, and <tt>critical()</tt> each log a message at the specified level; it uses a <a href=\"https://structlog.readthedocs.io/en/stable/\" rel=\"nofollow\">structlog</a> logger to log JSON output via <a href=\"https://github.com/lsst-sqre/sqre-apikit\" rel=\"nofollow\">apikit</a>.</p>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2726764, "releases": {"0.0.2": []}, "urls": [], "timestamp": "Fri May  8 00:43:25 2020"}