{"info": {"author": "Jacques Kvam", "author_email": "jwkvam+pypi@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# celluloid\n\n[![Build Status](https://travis-ci.com/jwkvam/celluloid.svg?branch=master)](https://travis-ci.com/jwkvam/celluloid)\n[![codecov](https://codecov.io/gh/jwkvam/celluloid/branch/master/graph/badge.svg)](https://codecov.io/gh/jwkvam/celluloid)\n[![pypi](https://badge.fury.io/py/celluloid.svg)](https://pypi.org/project/celluloid/)\n[![pypi versions](https://img.shields.io/pypi/pyversions/celluloid.svg)](https://pypi.org/project/celluloid/)\n\nEasy Matplotlib Animation\n\n<p align=\"center\">\n  <a href=\"https://github.com/jwkvam/celluloid/blob/master/examples/sines.py\">\n    <img src=\"https://user-images.githubusercontent.com/86304/48657442-9c11e080-e9e5-11e8-9f54-f46a960be7dd.gif\">\n  </a>\n</p>\n\nCreating animations should be easy.\nThis module makes it easy to adapt your existing visualization code to create an animation.\n\n## Install\n\n```\npip install celluloid\n```\n\n## Manual\n\nFollow these steps:\n\n1. Create a matplotlib `Figure` and create a `Camera` from it:\n\n```python\nfrom celluloid import Camera\nfig = plt.figure()\ncamera = Camera(fig)\n```\n\n2. Reusing the figure and after each frame is created, take a snapshot with the camera.\n\n```python\nplt.plot(...)\nplt.fancy_stuff()\ncamera.snap()\n```\n\n3. After all frames have been captured, create the animation.\n\n```python\nanimation = camera.animate()\nanimation.save('animation.mp4')\n```\n\nThe entire [module](https://github.com/jwkvam/celluloid/blob/master/celluloid.py) is less than 50 lines of code.\n\n## Examples\n\n### Minimal\n\nAs simple as it gets.\n\n```python\nfrom matplotlib import pyplot as plt\nfrom celluloid import Camera\n\nfig = plt.figure()\ncamera = Camera(fig)\nfor i in range(10):\n    plt.plot([i] * 10)\n    camera.snap()\nanimation = camera.animate()\n```\n\n<p align=\"center\">\n  <a href=\"https://github.com/jwkvam/celluloid/blob/master/examples/simple.py\">\n    <img src=\"https://user-images.githubusercontent.com/86304/48666133-66660980-ea70-11e8-9024-b167c21a5e83.gif\">\n  </a>\n</p>\n\n### Subplots\n\nAnimation at the top.\n\n```python\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom celluloid import Camera\n\nfig, axes = plt.subplots(2)\ncamera = Camera(fig)\nt = np.linspace(0, 2 * np.pi, 128, endpoint=False)\nfor i in t:\n    axes[0].plot(t, np.sin(t + i), color='blue')\n    axes[1].plot(t, np.sin(t - i), color='blue')\n    camera.snap()\nanimation = camera.animate()\n```\n\n### Images\n\nDomain coloring example.\n\n```python\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom matplotlib.colors import hsv_to_rgb\n\nfrom celluloid import Camera\n\nfig = plt.figure()\ncamera = Camera(fig)\n\nfor a in np.linspace(0, 2 * np.pi, 30, endpoint=False):\n    x = np.linspace(-3, 3, 800)\n    X, Y = np.meshgrid(x, x)\n    x = X + 1j * Y\n    y = (x ** 2 - 2.5) * (x - 2.5 * 1j) * (x + 2.5 * 1j) \\\n        * (x - 2 - 1j) ** 2 / ((x - np.exp(1j * a)) ** 2\n        * (x - np.exp(1j * 2 * a)) ** 2)\n\n    H = np.angle(y) / (2 * np.pi) + .5\n    r = np.log2(1. + np.abs(y))\n    S = (1. + np.abs(np.sin(2. * np.pi * r))) / 2.\n    V = (1. + np.abs(np.cos(2. * np.pi * r))) / 2.\n\n    rgb = hsv_to_rgb(np.dstack((H, S, V)))\n    ax.imshow(rgb)\n    camera.snap()\nanimation = camera.animate()\n```\n\n<p align=\"center\">\n  <a href=\"https://github.com/jwkvam/celluloid/blob/master/examples/complex.py\">\n    <img src=\"https://user-images.githubusercontent.com/86304/48747098-f483f080-ec26-11e8-9734-c409e9b0c9ec.gif\">\n  </a>\n</p>\n\n### Legends\n\n```python\nimport matplotlib\nfrom matplotlib import pyplot as plt\nfrom celluloid import Camera\n\nfig = plt.figure()\ncamera = Camera(fig)\nfor i in range(5):\n    t = plt.plot(range(i, i + 5))\n    plt.legend(t, [f'line {i}'])\n    camera.snap()\nanimation = camera.animate()\n```\n\n<p align=\"center\">\n  <a href=\"https://github.com/jwkvam/celluloid/blob/master/examples/complex.py\">\n    <img src=\"https://user-images.githubusercontent.com/86304/48750564-9100bf80-ec34-11e8-87fb-bc5c7ddcc6e7.gif\">\n  </a>\n</p>\n\n## Limitations\n\n- The axes' limits should be the same for all plots. The limits of the animation will be the limits of the final plot.\n- Legends will accumulate from previous frames. Pass the artists to the `legend` function to draw them separately.\n\n## Credits\n\nInspired by [plotnine](https://github.com/has2k1/plotnine/blob/master/plotnine/animation.py).\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jwkvam/celluloid", "keywords": "matplotlib animation", "license": "", "maintainer": "", "maintainer_email": "", "name": "celluloid", "package_url": "https://pypi.org/project/celluloid/", "platform": "", "project_url": "https://pypi.org/project/celluloid/", "project_urls": {"Homepage": "https://github.com/jwkvam/celluloid"}, "release_url": "https://pypi.org/project/celluloid/0.2.0/", "requires_dist": ["matplotlib"], "requires_python": ">=3.6", "summary": "Easy matplotlib animation.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>celluloid</h1>\n<p><a href=\"https://travis-ci.com/jwkvam/celluloid\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6699fa29dbe045cc5b5d781ff793b0f8b1c0a888/68747470733a2f2f7472617669732d63692e636f6d2f6a776b76616d2f63656c6c756c6f69642e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/jwkvam/celluloid\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c6a49f9294c293343d436b18a5696a7fc6ca2fa/68747470733a2f2f636f6465636f762e696f2f67682f6a776b76616d2f63656c6c756c6f69642f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/celluloid/\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/709dfe95f827f7930fe1c671a76c20f6a82f286f/68747470733a2f2f62616467652e667572792e696f2f70792f63656c6c756c6f69642e737667\"></a>\n<a href=\"https://pypi.org/project/celluloid/\" rel=\"nofollow\"><img alt=\"pypi versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c1b89300e3f3d9d608c7b34b26d22a500c5ea7f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f63656c6c756c6f69642e737667\"></a></p>\n<p>Easy Matplotlib Animation</p>\n<p align=\"center\">\n  <a href=\"https://github.com/jwkvam/celluloid/blob/master/examples/sines.py\" rel=\"nofollow\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/709c00e84aeb9d3759506849ffa4e04a973f1199/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f38363330342f34383635373434322d39633131653038302d653965352d313165382d396635342d6634366139363062653764642e676966\">\n  </a>\n</p>\n<p>Creating animations should be easy.\nThis module makes it easy to adapt your existing visualization code to create an animation.</p>\n<h2>Install</h2>\n<pre><code>pip install celluloid\n</code></pre>\n<h2>Manual</h2>\n<p>Follow these steps:</p>\n<ol>\n<li>Create a matplotlib <code>Figure</code> and create a <code>Camera</code> from it:</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">celluloid</span> <span class=\"kn\">import</span> <span class=\"n\">Camera</span>\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"n\">Camera</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">)</span>\n</pre>\n<ol>\n<li>Reusing the figure and after each frame is created, take a snapshot with the camera.</li>\n</ol>\n<pre><span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">fancy_stuff</span><span class=\"p\">()</span>\n<span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">snap</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>After all frames have been captured, create the animation.</li>\n</ol>\n<pre><span class=\"n\">animation</span> <span class=\"o\">=</span> <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">()</span>\n<span class=\"n\">animation</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'animation.mp4'</span><span class=\"p\">)</span>\n</pre>\n<p>The entire <a href=\"https://github.com/jwkvam/celluloid/blob/master/celluloid.py\" rel=\"nofollow\">module</a> is less than 50 lines of code.</p>\n<h2>Examples</h2>\n<h3>Minimal</h3>\n<p>As simple as it gets.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">celluloid</span> <span class=\"kn\">import</span> <span class=\"n\">Camera</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"n\">Camera</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">([</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">snap</span><span class=\"p\">()</span>\n<span class=\"n\">animation</span> <span class=\"o\">=</span> <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">()</span>\n</pre>\n<p align=\"center\">\n  <a href=\"https://github.com/jwkvam/celluloid/blob/master/examples/simple.py\" rel=\"nofollow\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/684e8d8b5297bb8b69a308986f2862b81216e040/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f38363330342f34383636363133332d36363636303938302d656137302d313165382d393032342d6231363763323161356538332e676966\">\n  </a>\n</p>\n<h3>Subplots</h3>\n<p>Animation at the top.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">celluloid</span> <span class=\"kn\">import</span> <span class=\"n\">Camera</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"n\">Camera</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">)</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">t</span><span class=\"p\">:</span>\n    <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'blue'</span><span class=\"p\">)</span>\n    <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">t</span> <span class=\"o\">-</span> <span class=\"n\">i</span><span class=\"p\">),</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'blue'</span><span class=\"p\">)</span>\n    <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">snap</span><span class=\"p\">()</span>\n<span class=\"n\">animation</span> <span class=\"o\">=</span> <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">()</span>\n</pre>\n<h3>Images</h3>\n<p>Domain coloring example.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib.colors</span> <span class=\"kn\">import</span> <span class=\"n\">hsv_to_rgb</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">celluloid</span> <span class=\"kn\">import</span> <span class=\"n\">Camera</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"n\">Camera</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">a</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">800</span><span class=\"p\">)</span>\n    <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">X</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"n\">j</span> <span class=\"o\">*</span> <span class=\"n\">Y</span>\n    <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mf\">2.5</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mf\">2.5</span> <span class=\"o\">*</span> <span class=\"mi\">1</span><span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"mf\">2.5</span> <span class=\"o\">*</span> <span class=\"mi\">1</span><span class=\"n\">j</span><span class=\"p\">)</span> \\\n        <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mi\">2</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"n\">j</span><span class=\"p\">)</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">/</span> <span class=\"p\">((</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"n\">j</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">))</span> <span class=\"o\">**</span> <span class=\"mi\">2</span>\n        <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"n\">j</span> <span class=\"o\">*</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">a</span><span class=\"p\">))</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"n\">H</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">angle</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"o\">.</span><span class=\"mi\">5</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log2</span><span class=\"p\">(</span><span class=\"mf\">1.</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">))</span>\n    <span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">1.</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"mf\">2.</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">r</span><span class=\"p\">)))</span> <span class=\"o\">/</span> <span class=\"mf\">2.</span>\n    <span class=\"n\">V</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">1.</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mf\">2.</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">r</span><span class=\"p\">)))</span> <span class=\"o\">/</span> <span class=\"mf\">2.</span>\n\n    <span class=\"n\">rgb</span> <span class=\"o\">=</span> <span class=\"n\">hsv_to_rgb</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">dstack</span><span class=\"p\">((</span><span class=\"n\">H</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">V</span><span class=\"p\">)))</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">rgb</span><span class=\"p\">)</span>\n    <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">snap</span><span class=\"p\">()</span>\n<span class=\"n\">animation</span> <span class=\"o\">=</span> <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">()</span>\n</pre>\n<p align=\"center\">\n  <a href=\"https://github.com/jwkvam/celluloid/blob/master/examples/complex.py\" rel=\"nofollow\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0d6bcbe515389782c09f73f7f660e8906c87907/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f38363330342f34383734373039382d66343833663038302d656332362d313165382d393733342d6334303965396230633965632e676966\">\n  </a>\n</p>\n<h3>Legends</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib</span>\n<span class=\"kn\">from</span> <span class=\"nn\">matplotlib</span> <span class=\"kn\">import</span> <span class=\"n\">pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">celluloid</span> <span class=\"kn\">import</span> <span class=\"n\">Camera</span>\n\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"n\">camera</span> <span class=\"o\">=</span> <span class=\"n\">Camera</span><span class=\"p\">(</span><span class=\"n\">fig</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">):</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'line </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">])</span>\n    <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">snap</span><span class=\"p\">()</span>\n<span class=\"n\">animation</span> <span class=\"o\">=</span> <span class=\"n\">camera</span><span class=\"o\">.</span><span class=\"n\">animate</span><span class=\"p\">()</span>\n</pre>\n<p align=\"center\">\n  <a href=\"https://github.com/jwkvam/celluloid/blob/master/examples/complex.py\" rel=\"nofollow\">\n    <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a0e1242162b64da8f69b3e07b8e79b41c32f7b3/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f38363330342f34383735303536342d39313030626638302d656333342d313165382d383766622d6263356337646463633665372e676966\">\n  </a>\n</p>\n<h2>Limitations</h2>\n<ul>\n<li>The axes' limits should be the same for all plots. The limits of the animation will be the limits of the final plot.</li>\n<li>Legends will accumulate from previous frames. Pass the artists to the <code>legend</code> function to draw them separately.</li>\n</ul>\n<h2>Credits</h2>\n<p>Inspired by <a href=\"https://github.com/has2k1/plotnine/blob/master/plotnine/animation.py\" rel=\"nofollow\">plotnine</a>.</p>\n\n          </div>"}, "last_serial": 4505773, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9fdadb462a3ea3647afa3bb133cae4f0", "sha256": "274f1835a497c6c990583c43dceb20a16c7f89b3d681ecfff604284e9213be15"}, "downloads": -1, "filename": "celluloid-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9fdadb462a3ea3647afa3bb133cae4f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4710, "upload_time": "2018-11-17T22:06:25", "upload_time_iso_8601": "2018-11-17T22:06:25.918757Z", "url": "https://files.pythonhosted.org/packages/71/1f/42fedd7e81151cbc81d74967da2f25125e99aeccb3c8906c1a5b40e68f63/celluloid-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc1e59a4d23048e2e90e7e913b60a1f4", "sha256": "d99a1848d2d64e78eb14aa0bbe2ae3b1376725352abe8bf0a6a750a0a026b290"}, "downloads": -1, "filename": "celluloid-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cc1e59a4d23048e2e90e7e913b60a1f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5448, "upload_time": "2018-11-17T22:07:12", "upload_time_iso_8601": "2018-11-17T22:07:12.223555Z", "url": "https://files.pythonhosted.org/packages/9a/59/98615244ae0bcdb31d94beb8b95e50dc07727462671f3458ef4f17666358/celluloid-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e960f4accf0881b6f8cbfaf993669dba", "sha256": "5cebd41276d9658f7667a2f1f565f566763a6110273b4af35c958b1407a9f277"}, "downloads": -1, "filename": "celluloid-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e960f4accf0881b6f8cbfaf993669dba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5404, "upload_time": "2018-11-20T04:06:22", "upload_time_iso_8601": "2018-11-20T04:06:22.374042Z", "url": "https://files.pythonhosted.org/packages/60/a7/7fbe80721c6f1b7370c4e50c77abe31b4d5cfeb58873d4d32f48ae5a0bae/celluloid-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78da3ef8ff3944f253b16a923e427380", "sha256": "568b1512c4a97483759e9436c3f3e5dc5566da350179aa1872992ec8d82706e1"}, "downloads": -1, "filename": "celluloid-0.2.0.tar.gz", "has_sig": false, "md5_digest": "78da3ef8ff3944f253b16a923e427380", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6442, "upload_time": "2018-11-20T04:06:27", "upload_time_iso_8601": "2018-11-20T04:06:27.228809Z", "url": "https://files.pythonhosted.org/packages/0d/31/80e96c4b221de342eef55f1f07de84b11b5f7cfb8c3b00e235a0bdd0b476/celluloid-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e960f4accf0881b6f8cbfaf993669dba", "sha256": "5cebd41276d9658f7667a2f1f565f566763a6110273b4af35c958b1407a9f277"}, "downloads": -1, "filename": "celluloid-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e960f4accf0881b6f8cbfaf993669dba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5404, "upload_time": "2018-11-20T04:06:22", "upload_time_iso_8601": "2018-11-20T04:06:22.374042Z", "url": "https://files.pythonhosted.org/packages/60/a7/7fbe80721c6f1b7370c4e50c77abe31b4d5cfeb58873d4d32f48ae5a0bae/celluloid-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "78da3ef8ff3944f253b16a923e427380", "sha256": "568b1512c4a97483759e9436c3f3e5dc5566da350179aa1872992ec8d82706e1"}, "downloads": -1, "filename": "celluloid-0.2.0.tar.gz", "has_sig": false, "md5_digest": "78da3ef8ff3944f253b16a923e427380", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6442, "upload_time": "2018-11-20T04:06:27", "upload_time_iso_8601": "2018-11-20T04:06:27.228809Z", "url": "https://files.pythonhosted.org/packages/0d/31/80e96c4b221de342eef55f1f07de84b11b5f7cfb8c3b00e235a0bdd0b476/celluloid-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:49 2020"}