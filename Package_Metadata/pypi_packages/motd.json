{"info": {"author": "David COBAC", "author_email": "david.cobac@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "## MOTD\n\nRetrieve famous 'Mathematicians Of The Day' from \n[http://mathshistory.st-andrews.ac.uk/Day_files/Year.html](http://mathshistory.st-andrews.ac.uk/Day_files/Year.html)\n\nDisclaimer: This package is not supported by the University of St-Andrews. This is not an official package!\n\nOutput's format is JSON.\n\n## 0.2\nModify to English words command and method names\n\n### Usage as a library\n\n#### Minimal example\n\n``` python3\n>>> import motd\n>>> motd.motd()\n<motd.motd.motd object at 0x7fd2675eb550>\n>>> motd.motd().out()\n'{\"30/12\": [{\"year\": 1869, \"fname\": \"Emilie\", \"name\": \"MARTIN\", \"event\": \"birth\"}, {\"year\": 1897, \"fname\": \"Stanis\\\\u0142aw\", \"name\": \"SAKS\", \"event\": \"birth\"}, {\"year\": 1691, \"fname\": \"Robert\", \"name\": \"BOYLE\", \"event\": \"death\"}, {\"year\": 1932, \"fname\": \"Eliakim\", \"name\": \"MOORE\", \"event\": \"death\"}, {\"year\": 1947, \"fname\": \"Alfred North\", \"name\": \"WHITEHEAD\", \"event\": \"death\"}, {\"year\": 1956, \"fname\": \"Heinrich\", \"name\": \"SCHOLZ\", \"event\": \"death\"}, {\"year\": 1978, \"fname\": \"Mark Aronovich\", \"name\": \"NAIMARK\", \"event\": \"death\"}, {\"year\": 1982, \"fname\": \"Philip\", \"name\": \"HALL\", \"event\": \"death\"}]}'\n>>> \n\n```\n\n#### Options\n\nThe constructor admits two optional arguments:\n\n* `day` specifying date using a string formated as `DD/MM`\n  (default is the current system day)\n* `delta` specifying the number of days before (negative\n  integer) or after (positivie integer) `day` value. (default is\n  0)\n\n\n``` python3\n\n>>> import motd\n>>> motd.motd('01/01').out()\n'{\"01/01\": [{\"year\": 1803, \"fname\": \"Guglielmo\", \"name\": \"LIBRI\", \"event\": \"birth\"}, ...\n\n```\n\n``` python3\n\n>>> import motd\n>>> motd.motd(delta=1).out()\n'{\"31/12\": [{\"year\": 1856, \"fname\": \"William\", \"name\": \"THOMSON\", \"event\": \"birth\"}, ...\n```\n\n``` python3\n\n>>> import motd\n>>> motd.motd('01/01', delta=-2).out()\n'{\"30/12\": [{\"year\": 1869, \"fname\": \"Emilie\", \"name\": \"MARTIN\", \"event\": \"birth\"}, ...\n```\n\n``` python3\n\n>>> import motd\n>>> motd.motd(day='01/01', delta=-2).out()\n'{\"30/12\": [{\"year\": 1869, \"fname\": \"Emilie\", \"name\": \"MARTIN\", \"event\": \"birth\"}, ...\n```\n\n\n\n### Usage in standalone app (code below)\n\n#### How-to use it\n\n1. Copy next code content in a `motd` file.\n\n2. Change eventually the shebang line and make the file executable\n`chmod 755 motd`\n\n3. Move it in a path known by your shell. For example: `~/.local/bin`\n\n4. Session example\n\n``` console\n$ motd\n1869 birth Emilie MARTIN\n1897 birth Stanis\u0142aw SAKS\n1691 death Robert BOYLE\n1932 death Eliakim MOORE\n1947 death Alfred North WHITEHEAD\n1956 death Heinrich SCHOLZ\n1978 death Mark Aronovich NAIMARK\n1982 death Philip HALL\n$ motd -d 01/01\n1803 birth Guglielmo LIBRI\n1878 birth Agner ERLANG\n1886 birth Alexander Barrie GRIEVE\n1894 birth Satyendranath BOSE\n1905 birth Stanis\u0142aw MAZUR\n1912 birth Boris Vladimirovich GNEDENKO\n1923 birth Daniel GORENSTEIN\n1924 birth Jacques DIXMIER\n1931 birth Sergei Ivanovich ADIAN\n1748 death Johann BERNOULLI\n1787 death Anast\u00e1cio da CUNHA\n...\n$ motd -d 01/01 -1\n1856 birth William THOMSON\n1872 birth Volodymyr LEVYTSKY\n1896 birth Carl SIEGEL\n1916 birth Douglas NORTHCOTT\n1937 birth Vladimir MAZ'YA\n1945 birth Leonard ADLEMAN\n1952 birth Vaughan JONES\n1610 death Ludolph Van CEULEN\n1659 death J\u00e1nos AP\u00c1CZAI\n1679 death Giovanni Alfonso BORELLI\n1719 death John FLAMSTEED\n1894 death Thomas STIELTJES\n1912 death Robert FERGUSON\n1944 death Nikolai Evgrafovich KOCHIN\n1956 death Edwin P ADAMS\n1962 death Charles Galton DARWIN\n1982 death Kurt FRIEDRICHS\n\n```\n\nFurther you can pipe with `sort` command.\n\nYou can also change source code of the app to output different\nlines.\n\n\n#### Standalone app code\n\n``` python3\n\n#!/usr/bin/python3\n__author__ = \"David COBAC\"\n__date__ = 20191230\n\nimport motd\nimport json\nimport argparse\n\n\nparseur_args = argparse.ArgumentParser(\n    description=\"\"\"Mathematicians Of The Day from website\n    http://mathshistory.st-andrews.ac.uk/Day_files/Year.html\n    not an official package\"\"\")\n\nparseur_args.add_argument('-d', '--day', help='DD/MM')\nparseur_args.add_argument('delta',\n                          nargs='?',\n                          default='+0')\n\nargs = parseur_args.parse_args()\n\nm = motd.motd(args.day, args.delta)\ndico = json.loads(m.sortie())\nfor k in dico:\n    # print(k)\n    for entree in dico[k]:\n        s = str(entree['year'])\n        s += \" \"\n        s += entree['event']\n        s += \" \"\n        s += entree['fname']\n        s += \" \"\n        s += entree['name']\n        #\n        print(s)\n\n```\n\n## about\n\n`motd` is rather an attempt to publish on the `PyPi` packages\nindex than a fully completed python project, I do not recommend\nto use it for professionnal purpose. You have to consider this\npackage as an experiment.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://twitter.com/david_cobac", "keywords": "motd,date,math,history", "license": "CC-BY-NC-SA", "maintainer": "", "maintainer_email": "", "name": "motd", "package_url": "https://pypi.org/project/motd/", "platform": "", "project_url": "https://pypi.org/project/motd/", "project_urls": {"Homepage": "https://twitter.com/david_cobac"}, "release_url": "https://pypi.org/project/motd/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Non-official Mathematicians Of The Day output from website", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>MOTD</h2>\n<p>Retrieve famous 'Mathematicians Of The Day' from\n<a href=\"http://mathshistory.st-andrews.ac.uk/Day_files/Year.html\" rel=\"nofollow\">http://mathshistory.st-andrews.ac.uk/Day_files/Year.html</a></p>\n<p>Disclaimer: This package is not supported by the University of St-Andrews. This is not an official package!</p>\n<p>Output's format is JSON.</p>\n<h2>0.2</h2>\n<p>Modify to English words command and method names</p>\n<h3>Usage as a library</h3>\n<h4>Minimal example</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">motd</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span><span class=\"p\">()</span>\n<span class=\"o\">&lt;</span><span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7fd2675eb550</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">out</span><span class=\"p\">()</span>\n<span class=\"s1\">'{\"30/12\": [{\"year\": 1869, \"fname\": \"Emilie\", \"name\": \"MARTIN\", \"event\": \"birth\"}, {\"year\": 1897, \"fname\": \"Stanis</span><span class=\"se\">\\\\</span><span class=\"s1\">u0142aw\", \"name\": \"SAKS\", \"event\": \"birth\"}, {\"year\": 1691, \"fname\": \"Robert\", \"name\": \"BOYLE\", \"event\": \"death\"}, {\"year\": 1932, \"fname\": \"Eliakim\", \"name\": \"MOORE\", \"event\": \"death\"}, {\"year\": 1947, \"fname\": \"Alfred North\", \"name\": \"WHITEHEAD\", \"event\": \"death\"}, {\"year\": 1956, \"fname\": \"Heinrich\", \"name\": \"SCHOLZ\", \"event\": \"death\"}, {\"year\": 1978, \"fname\": \"Mark Aronovich\", \"name\": \"NAIMARK\", \"event\": \"death\"}, {\"year\": 1982, \"fname\": \"Philip\", \"name\": \"HALL\", \"event\": \"death\"}]}'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n</pre>\n<h4>Options</h4>\n<p>The constructor admits two optional arguments:</p>\n<ul>\n<li><code>day</code> specifying date using a string formated as <code>DD/MM</code>\n(default is the current system day)</li>\n<li><code>delta</code> specifying the number of days before (negative\ninteger) or after (positivie integer) <code>day</code> value. (default is\n0)</li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">motd</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span><span class=\"p\">(</span><span class=\"s1\">'01/01'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">out</span><span class=\"p\">()</span>\n<span class=\"s1\">'{\"01/01\": [{\"year\": 1803, \"fname\": \"Guglielmo\", \"name\": \"LIBRI\", \"event\": \"birth\"}, ...</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">motd</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">out</span><span class=\"p\">()</span>\n<span class=\"s1\">'{\"31/12\": [{\"year\": 1856, \"fname\": \"William\", \"name\": \"THOMSON\", \"event\": \"birth\"}, ...</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">motd</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span><span class=\"p\">(</span><span class=\"s1\">'01/01'</span><span class=\"p\">,</span> <span class=\"n\">delta</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">out</span><span class=\"p\">()</span>\n<span class=\"s1\">'{\"30/12\": [{\"year\": 1869, \"fname\": \"Emilie\", \"name\": \"MARTIN\", \"event\": \"birth\"}, ...</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">motd</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span><span class=\"p\">(</span><span class=\"n\">day</span><span class=\"o\">=</span><span class=\"s1\">'01/01'</span><span class=\"p\">,</span> <span class=\"n\">delta</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">out</span><span class=\"p\">()</span>\n<span class=\"s1\">'{\"30/12\": [{\"year\": 1869, \"fname\": \"Emilie\", \"name\": \"MARTIN\", \"event\": \"birth\"}, ...</span>\n</pre>\n<h3>Usage in standalone app (code below)</h3>\n<h4>How-to use it</h4>\n<ol>\n<li>\n<p>Copy next code content in a <code>motd</code> file.</p>\n</li>\n<li>\n<p>Change eventually the shebang line and make the file executable\n<code>chmod 755 motd</code></p>\n</li>\n<li>\n<p>Move it in a path known by your shell. For example: <code>~/.local/bin</code></p>\n</li>\n<li>\n<p>Session example</p>\n</li>\n</ol>\n<pre><span class=\"gp\">$</span> motd\n<span class=\"go\">1869 birth Emilie MARTIN</span>\n<span class=\"go\">1897 birth Stanis\u0142aw SAKS</span>\n<span class=\"go\">1691 death Robert BOYLE</span>\n<span class=\"go\">1932 death Eliakim MOORE</span>\n<span class=\"go\">1947 death Alfred North WHITEHEAD</span>\n<span class=\"go\">1956 death Heinrich SCHOLZ</span>\n<span class=\"go\">1978 death Mark Aronovich NAIMARK</span>\n<span class=\"go\">1982 death Philip HALL</span>\n<span class=\"gp\">$</span> motd -d <span class=\"m\">01</span>/01\n<span class=\"go\">1803 birth Guglielmo LIBRI</span>\n<span class=\"go\">1878 birth Agner ERLANG</span>\n<span class=\"go\">1886 birth Alexander Barrie GRIEVE</span>\n<span class=\"go\">1894 birth Satyendranath BOSE</span>\n<span class=\"go\">1905 birth Stanis\u0142aw MAZUR</span>\n<span class=\"go\">1912 birth Boris Vladimirovich GNEDENKO</span>\n<span class=\"go\">1923 birth Daniel GORENSTEIN</span>\n<span class=\"go\">1924 birth Jacques DIXMIER</span>\n<span class=\"go\">1931 birth Sergei Ivanovich ADIAN</span>\n<span class=\"go\">1748 death Johann BERNOULLI</span>\n<span class=\"go\">1787 death Anast\u00e1cio da CUNHA</span>\n<span class=\"go\">...</span>\n<span class=\"gp\">$</span> motd -d <span class=\"m\">01</span>/01 -1\n<span class=\"go\">1856 birth William THOMSON</span>\n<span class=\"go\">1872 birth Volodymyr LEVYTSKY</span>\n<span class=\"go\">1896 birth Carl SIEGEL</span>\n<span class=\"go\">1916 birth Douglas NORTHCOTT</span>\n<span class=\"go\">1937 birth Vladimir MAZ'YA</span>\n<span class=\"go\">1945 birth Leonard ADLEMAN</span>\n<span class=\"go\">1952 birth Vaughan JONES</span>\n<span class=\"go\">1610 death Ludolph Van CEULEN</span>\n<span class=\"go\">1659 death J\u00e1nos AP\u00c1CZAI</span>\n<span class=\"go\">1679 death Giovanni Alfonso BORELLI</span>\n<span class=\"go\">1719 death John FLAMSTEED</span>\n<span class=\"go\">1894 death Thomas STIELTJES</span>\n<span class=\"go\">1912 death Robert FERGUSON</span>\n<span class=\"go\">1944 death Nikolai Evgrafovich KOCHIN</span>\n<span class=\"go\">1956 death Edwin P ADAMS</span>\n<span class=\"go\">1962 death Charles Galton DARWIN</span>\n<span class=\"go\">1982 death Kurt FRIEDRICHS</span>\n</pre>\n<p>Further you can pipe with <code>sort</code> command.</p>\n<p>You can also change source code of the app to output different\nlines.</p>\n<h4>Standalone app code</h4>\n<pre><span class=\"ch\">#!/usr/bin/python3</span>\n<span class=\"n\">__author__</span> <span class=\"o\">=</span> <span class=\"s2\">\"David COBAC\"</span>\n<span class=\"n\">__date__</span> <span class=\"o\">=</span> <span class=\"mi\">20191230</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">motd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n\n\n<span class=\"n\">parseur_args</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"\"\"Mathematicians Of The Day from website</span>\n<span class=\"s2\">    http://mathshistory.st-andrews.ac.uk/Day_files/Year.html</span>\n<span class=\"s2\">    not an official package\"\"\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">parseur_args</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s1\">'-d'</span><span class=\"p\">,</span> <span class=\"s1\">'--day'</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s1\">'DD/MM'</span><span class=\"p\">)</span>\n<span class=\"n\">parseur_args</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s1\">'delta'</span><span class=\"p\">,</span>\n                          <span class=\"n\">nargs</span><span class=\"o\">=</span><span class=\"s1\">'?'</span><span class=\"p\">,</span>\n                          <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'+0'</span><span class=\"p\">)</span>\n\n<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parseur_args</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">motd</span><span class=\"o\">.</span><span class=\"n\">motd</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">day</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"n\">dico</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">sortie</span><span class=\"p\">())</span>\n<span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">dico</span><span class=\"p\">:</span>\n    <span class=\"c1\"># print(k)</span>\n    <span class=\"k\">for</span> <span class=\"n\">entree</span> <span class=\"ow\">in</span> <span class=\"n\">dico</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]:</span>\n        <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">entree</span><span class=\"p\">[</span><span class=\"s1\">'year'</span><span class=\"p\">])</span>\n        <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"s2\">\" \"</span>\n        <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"n\">entree</span><span class=\"p\">[</span><span class=\"s1\">'event'</span><span class=\"p\">]</span>\n        <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"s2\">\" \"</span>\n        <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"n\">entree</span><span class=\"p\">[</span><span class=\"s1\">'fname'</span><span class=\"p\">]</span>\n        <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"s2\">\" \"</span>\n        <span class=\"n\">s</span> <span class=\"o\">+=</span> <span class=\"n\">entree</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n        <span class=\"c1\">#</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n</pre>\n<h2>about</h2>\n<p><code>motd</code> is rather an attempt to publish on the <code>PyPi</code> packages\nindex than a fully completed python project, I do not recommend\nto use it for professionnal purpose. You have to consider this\npackage as an experiment.</p>\n\n          </div>"}, "last_serial": 6542458, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "cb9673cf94a25c141b605c7ef04ed647", "sha256": "d4847489154b221ddc758e45bfb9b7b3902102f4f47e549f4e2447c65fa74aa6"}, "downloads": -1, "filename": "motd-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cb9673cf94a25c141b605c7ef04ed647", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5018, "upload_time": "2019-12-30T15:44:52", "upload_time_iso_8601": "2019-12-30T15:44:52.830641Z", "url": "https://files.pythonhosted.org/packages/83/b3/e1e1ac5c2d8d05e5a08784e42c390487f2cb7b022133277589f4b2ba5d2d/motd-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32696415d27f6be04e8face9ad68e05a", "sha256": "14f8ac3d7f99f1075c73fa51eb801a9d603dd5f440444d8f4099a103bdcba195"}, "downloads": -1, "filename": "motd-0.2.tar.gz", "has_sig": false, "md5_digest": "32696415d27f6be04e8face9ad68e05a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4994, "upload_time": "2019-12-30T15:44:56", "upload_time_iso_8601": "2019-12-30T15:44:56.915120Z", "url": "https://files.pythonhosted.org/packages/c8/26/1112ba767c9724b4f842e6e6f7382765ea3b5dd5eead12116cd5a12d69dd/motd-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "3d7eb1e6e5c985b45cf655117a0b19f8", "sha256": "b5a7ba92cd734063e5709367a69246e1126ee3f34bed03a5644eb1e30e047078"}, "downloads": -1, "filename": "motd-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d7eb1e6e5c985b45cf655117a0b19f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5040, "upload_time": "2020-01-30T09:52:36", "upload_time_iso_8601": "2020-01-30T09:52:36.270496Z", "url": "https://files.pythonhosted.org/packages/c3/73/8f2e6ba81f400a38f86ea46045e2bf3bfa9f6d209014c75f2d3166ba04d1/motd-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b63a638003074d6da73459c2643031c5", "sha256": "6c40a9bd5c57407bc8decefde98d9086b7fdc7e189802c337e50679c0d5c15ec"}, "downloads": -1, "filename": "motd-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b63a638003074d6da73459c2643031c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5001, "upload_time": "2020-01-30T09:52:37", "upload_time_iso_8601": "2020-01-30T09:52:37.934787Z", "url": "https://files.pythonhosted.org/packages/d8/fb/534d1f315d83b5343864520b9fdc4646b203447bb9f35ce12a167407bc93/motd-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d7eb1e6e5c985b45cf655117a0b19f8", "sha256": "b5a7ba92cd734063e5709367a69246e1126ee3f34bed03a5644eb1e30e047078"}, "downloads": -1, "filename": "motd-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d7eb1e6e5c985b45cf655117a0b19f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5040, "upload_time": "2020-01-30T09:52:36", "upload_time_iso_8601": "2020-01-30T09:52:36.270496Z", "url": "https://files.pythonhosted.org/packages/c3/73/8f2e6ba81f400a38f86ea46045e2bf3bfa9f6d209014c75f2d3166ba04d1/motd-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b63a638003074d6da73459c2643031c5", "sha256": "6c40a9bd5c57407bc8decefde98d9086b7fdc7e189802c337e50679c0d5c15ec"}, "downloads": -1, "filename": "motd-0.2.1.tar.gz", "has_sig": false, "md5_digest": "b63a638003074d6da73459c2643031c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5001, "upload_time": "2020-01-30T09:52:37", "upload_time_iso_8601": "2020-01-30T09:52:37.934787Z", "url": "https://files.pythonhosted.org/packages/d8/fb/534d1f315d83b5343864520b9fdc4646b203447bb9f35ce12a167407bc93/motd-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:39 2020"}