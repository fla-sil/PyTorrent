{"info": {"author": "Dmitry Inyutin", "author_email": "inyutin.da@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Simple aiohttp retry client\n===========================\n\n| This package is similar to `Tornado-retry-client <https://github.com/wpjunior/tornado-retry-client>`__.\n| Python 3.5+.\n\n| **Install**: ``pip install aiohttp-retry``.\n\n**Github**: https://github.com/inyutin/aiohttp_retry\n\nExamples of usage:\n~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    from aiohttp_retry import RetryClient\n\n    async def main():\n        retry_client = RetryClient(raise_for_status=False)\n        async with retry_client.get('https://ya.ru', retry_attempts=1) as response:\n            print(response.status)\n\n        await retry_client.close()\n\n.. code:: python\n\n    from aiohttp_retry import RetryClient\n\n    async def main():\n        async with RetryClient() as client:\n            async with client.get('https://ya.ru') as response:\n                print(response.status)\n\n| Be aware: last request returns as it is.\n\nDocumentation\n~~~~~~~~~~~~~\n\n| ``RetryClient`` takes the same arguments as ClientSession[`docs <https://docs.aiohttp.org/en/stable/client_reference.html>`__\\ ]\n| ``RetryClient`` has methods:\n| - get\n| - options\n| - head\n| - post\n| - put\n| - patch\n| - put\n| - delete\n\n\n\nThey are same as for ``ClientSession``, but take additional arguments:\n\n.. code:: python\n\n    from typing import Optional, Set, Type\n\n    retry_attempts: int = 3,  # How many times we should retry\n    retry_start_timeout: float = 0.1,  # Base timeout time, then it exponentially grow\n    retry_max_timeout: float = 30,  # Max possible timeout between tries\n    retry_factor: float = 2,  # How much we increase timeout each time\n    retry_for_statuses: Optional[Set[int]] = None,  # On which statuses we should retry\n    retry_exceptions: Optional[Set[Type]] = None,  # On which exceptions we should retry\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/inyutin/aiohttp_retry", "keywords": "aiohttp retry client", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aiohttp-retry", "package_url": "https://pypi.org/project/aiohttp-retry/", "platform": "any", "project_url": "https://pypi.org/project/aiohttp-retry/", "project_urls": {"Homepage": "https://github.com/inyutin/aiohttp_retry"}, "release_url": "https://pypi.org/project/aiohttp-retry/1.0/", "requires_dist": ["aiohttp"], "requires_python": "", "summary": "Simple retry cient for aiohttp", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div>This package is similar to <a href=\"https://github.com/wpjunior/tornado-retry-client\" rel=\"nofollow\">Tornado-retry-client</a>.</div>\n<div>Python 3.5+.</div>\n</div>\n<div>\n<div><strong>Install</strong>: <tt>pip install <span class=\"pre\">aiohttp-retry</span></tt>.</div>\n</div>\n<p><strong>Github</strong>: <a href=\"https://github.com/inyutin/aiohttp_retry\" rel=\"nofollow\">https://github.com/inyutin/aiohttp_retry</a></p>\n<div id=\"examples-of-usage\">\n<h2>Examples of usage:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp_retry</span> <span class=\"kn\">import</span> <span class=\"n\">RetryClient</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">retry_client</span> <span class=\"o\">=</span> <span class=\"n\">RetryClient</span><span class=\"p\">(</span><span class=\"n\">raise_for_status</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">retry_client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://ya.ru'</span><span class=\"p\">,</span> <span class=\"n\">retry_attempts</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">response</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">retry_client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiohttp_retry</span> <span class=\"kn\">import</span> <span class=\"n\">RetryClient</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">RetryClient</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://ya.ru'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">response</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">)</span>\n</pre>\n<div>\n<div>Be aware: last request returns as it is.</div>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<div>\n<div><tt>RetryClient</tt> takes the same arguments as ClientSession[<a href=\"https://docs.aiohttp.org/en/stable/client_reference.html\" rel=\"nofollow\">docs</a>]</div>\n<div><tt>RetryClient</tt> has methods:</div>\n<div>- get</div>\n<div>- options</div>\n<div>- head</div>\n<div>- post</div>\n<div>- put</div>\n<div>- patch</div>\n<div>- put</div>\n<div>- delete</div>\n</div>\n<p>They are same as for <tt>ClientSession</tt>, but take additional arguments:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"n\">retry_attempts</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span>  <span class=\"c1\"># How many times we should retry</span>\n<span class=\"n\">retry_start_timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>  <span class=\"c1\"># Base timeout time, then it exponentially grow</span>\n<span class=\"n\">retry_max_timeout</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">30</span><span class=\"p\">,</span>  <span class=\"c1\"># Max possible timeout between tries</span>\n<span class=\"n\">retry_factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">,</span>  <span class=\"c1\"># How much we increase timeout each time</span>\n<span class=\"n\">retry_for_statuses</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># On which statuses we should retry</span>\n<span class=\"n\">retry_exceptions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>  <span class=\"c1\"># On which exceptions we should retry</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6518675, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "86391455ebae7aa3b4df35c6c359e710", "sha256": "a8e8540726588d0c55419b02bc4fcf07a894cd9a64e5e2684c2054e9910f0496"}, "downloads": -1, "filename": "aiohttp_retry-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "86391455ebae7aa3b4df35c6c359e710", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2568, "upload_time": "2020-01-06T15:28:34", "upload_time_iso_8601": "2020-01-06T15:28:34.277120Z", "url": "https://files.pythonhosted.org/packages/5f/32/fdfca942cb35c26c711a2b0ebf6f60bfb81ffcc0e428311282cdf20ef750/aiohttp_retry-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5d6a5801e32ab1fe3331e35f855aecdf", "sha256": "f6ec5f9370326943018c1ba67e20414839afb0347e80a01a61376f95d38284f8"}, "downloads": -1, "filename": "aiohttp_retry-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5d6a5801e32ab1fe3331e35f855aecdf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3625, "upload_time": "2020-01-06T16:08:58", "upload_time_iso_8601": "2020-01-06T16:08:58.841469Z", "url": "https://files.pythonhosted.org/packages/4b/f9/dc0ce5a875bbd018447676042e9462a85ae23b7eb113996a7fd9f257ac8f/aiohttp_retry-0.2-py3-none-any.whl", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "b3f6e26b61f14d6817662f13437542f2", "sha256": "0a768491d7a61882c77bbb40ff4ae9395b67ba49b73027dc2e04d0889b182bb4"}, "downloads": -1, "filename": "aiohttp_retry-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b3f6e26b61f14d6817662f13437542f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4328, "upload_time": "2020-01-25T13:33:53", "upload_time_iso_8601": "2020-01-25T13:33:53.343780Z", "url": "https://files.pythonhosted.org/packages/36/bc/30ef27ac83c2afd558bb6f5d0462fcb9a8d49d2a2d9dfc2da4b5889208ce/aiohttp_retry-1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3f6e26b61f14d6817662f13437542f2", "sha256": "0a768491d7a61882c77bbb40ff4ae9395b67ba49b73027dc2e04d0889b182bb4"}, "downloads": -1, "filename": "aiohttp_retry-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b3f6e26b61f14d6817662f13437542f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4328, "upload_time": "2020-01-25T13:33:53", "upload_time_iso_8601": "2020-01-25T13:33:53.343780Z", "url": "https://files.pythonhosted.org/packages/36/bc/30ef27ac83c2afd558bb6f5d0462fcb9a8d49d2a2d9dfc2da4b5889208ce/aiohttp_retry-1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 16:21:16 2020"}