{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha"], "description": "# Microsoft Authentication Extensions for Python\n\nThe Microsoft Authentication Extensions for Python offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the [Microsoft Authentication Library for Python (MSAL)](https://github.com/AzureAD/microsoft-authentication-library-for-python). \n\nMSAL Python supports an in-memory cache by default and provides the [SerializableTokenCache](https://msal-python.readthedocs.io/en/latest/#msal.SerializableTokenCache) to perform cache serialization. You can read more about this in the MSAL Python [documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-python-token-cache-serialization). Developers are required to implement their own cache persistance across multiple platforms and Microsoft Authentication Extensions makes this simpler.\n\nThe supported platforms are Windows, Mac and Linux. \n- Windows - [DPAPI](https://docs.microsoft.com/en-us/dotnet/standard/security/how-to-use-data-protection) is used for encryption.\n- MAC - The MAC KeyChain is used.\n- Linux - [LibSecret](https://wiki.gnome.org/Projects/Libsecret) is used for encryption.\n\n> Note: It is recommended to use this library for cache persistance support for Public client applications such as Desktop apps only. In web applications, this may lead to scale and performance issues. Web applications are recommended to persist the cache in session. Take a look at this [webapp sample](https://github.com/Azure-Samples/ms-identity-python-webapp).\n\n## Installation\n\nYou can find Microsoft Authentication Extensions for Python on [Pypi](https://pypi.org/project/msal-extensions/).\n1. If you haven't already, [install and/or upgrade the pip](https://pip.pypa.io/en/stable/installing/)\n   of your Python environment to a recent version. We tested with pip 18.1.\n2. Run `pip install msal-extensions`.\n\n## Versions\n\nThis library follows [Semantic Versioning](http://semver.org/).\n\nYou can find the changes for each version under\n[Releases](https://github.com/AzureAD/microsoft-authentication-extensions-for-python/releases).\n\n## Usage\n\nThe Microsoft Authentication Extensions library provides the `PersistedTokenCache` which accepts a platform-dependent persistence instance. This token cache can then be used to instantiate the `PublicClientApplication` in MSAL Python. \n\nThe token cache includes a file lock, and auto-reload behavior under the hood.\n\n\n\nHere is an example of this pattern for multiple platforms (taken from the complete [sample here](https://github.com/AzureAD/microsoft-authentication-extensions-for-python/blob/dev/sample/token_cache_sample.py)):\n\n```python\ndef build_persistence(location, fallback_to_plaintext=False):\n    \"\"\"Build a suitable persistence instance based your current OS\"\"\"\n    if sys.platform.startswith('win'):\n        return FilePersistenceWithDataProtection(location)\n    if sys.platform.startswith('darwin'):\n        return KeychainPersistence(location, \"my_service_name\", \"my_account_name\")\n    if sys.platform.startswith('linux'):\n        try:\n            return LibsecretPersistence(\n                location,\n                schema_name=\"my_schema_name\",\n                attributes={\"my_attr1\": \"foo\", \"my_attr2\": \"bar\"},\n                )\n        except:  # pylint: disable=bare-except\n            if not fallback_to_plaintext:\n                raise\n            logging.exception(\"Encryption unavailable. Opting in to plain text.\")\n    return FilePersistence(location)\n\npersistence = build_persistence(\"token_cache.bin\")\nprint(\"Is this persistence encrypted?\", persistence.is_encrypted)\n\ncache = PersistedTokenCache(persistence)\n```\nNow you can use it in an MSAL application like this:\n```python\napp = msal.PublicClientApplication(\"my_client_id\", token_cache=cache)\n```\n\n## Community Help and Support\n\nWe leverage Stack Overflow to work with the community on supporting Azure Active Directory and its SDKs, including this one!\nWe highly recommend you ask your questions on Stack Overflow (we're all on there!).\nAlso browse existing issues to see if someone has had your question before.\n\nWe recommend you use the \"msal\" tag so we can see it!\nHere is the latest Q&A on Stack Overflow for MSAL:\n[http://stackoverflow.com/questions/tagged/msal](http://stackoverflow.com/questions/tagged/msal)\n\n\n## Contributing\n\nAll code is licensed under the MIT license and we triage actively on GitHub.\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\n\n## We value and adhere to the Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "msal-extensions", "package_url": "https://pypi.org/project/msal-extensions/", "platform": "", "project_url": "https://pypi.org/project/msal-extensions/", "project_urls": null, "release_url": "https://pypi.org/project/msal-extensions/0.2.2/", "requires_dist": ["msal (<2.0.0,>=0.4.1)", "portalocker (~=1.0) ; platform_system != \"Windows\"", "portalocker (~=1.6) ; platform_system == \"Windows\"", "pathlib2 ; python_version < \"3.0\""], "requires_python": "", "summary": "", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Microsoft Authentication Extensions for Python</h1>\n<p>The Microsoft Authentication Extensions for Python offers secure mechanisms for client applications to perform cross-platform token cache serialization and persistence. It gives additional support to the <a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-python\" rel=\"nofollow\">Microsoft Authentication Library for Python (MSAL)</a>.</p>\n<p>MSAL Python supports an in-memory cache by default and provides the <a href=\"https://msal-python.readthedocs.io/en/latest/#msal.SerializableTokenCache\" rel=\"nofollow\">SerializableTokenCache</a> to perform cache serialization. You can read more about this in the MSAL Python <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-python-token-cache-serialization\" rel=\"nofollow\">documentation</a>. Developers are required to implement their own cache persistance across multiple platforms and Microsoft Authentication Extensions makes this simpler.</p>\n<p>The supported platforms are Windows, Mac and Linux.</p>\n<ul>\n<li>Windows - <a href=\"https://docs.microsoft.com/en-us/dotnet/standard/security/how-to-use-data-protection\" rel=\"nofollow\">DPAPI</a> is used for encryption.</li>\n<li>MAC - The MAC KeyChain is used.</li>\n<li>Linux - <a href=\"https://wiki.gnome.org/Projects/Libsecret\" rel=\"nofollow\">LibSecret</a> is used for encryption.</li>\n</ul>\n<blockquote>\n<p>Note: It is recommended to use this library for cache persistance support for Public client applications such as Desktop apps only. In web applications, this may lead to scale and performance issues. Web applications are recommended to persist the cache in session. Take a look at this <a href=\"https://github.com/Azure-Samples/ms-identity-python-webapp\" rel=\"nofollow\">webapp sample</a>.</p>\n</blockquote>\n<h2>Installation</h2>\n<p>You can find Microsoft Authentication Extensions for Python on <a href=\"https://pypi.org/project/msal-extensions/\" rel=\"nofollow\">Pypi</a>.</p>\n<ol>\n<li>If you haven't already, <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">install and/or upgrade the pip</a>\nof your Python environment to a recent version. We tested with pip 18.1.</li>\n<li>Run <code>pip install msal-extensions</code>.</li>\n</ol>\n<h2>Versions</h2>\n<p>This library follows <a href=\"http://semver.org/\" rel=\"nofollow\">Semantic Versioning</a>.</p>\n<p>You can find the changes for each version under\n<a href=\"https://github.com/AzureAD/microsoft-authentication-extensions-for-python/releases\" rel=\"nofollow\">Releases</a>.</p>\n<h2>Usage</h2>\n<p>The Microsoft Authentication Extensions library provides the <code>PersistedTokenCache</code> which accepts a platform-dependent persistence instance. This token cache can then be used to instantiate the <code>PublicClientApplication</code> in MSAL Python.</p>\n<p>The token cache includes a file lock, and auto-reload behavior under the hood.</p>\n<p>Here is an example of this pattern for multiple platforms (taken from the complete <a href=\"https://github.com/AzureAD/microsoft-authentication-extensions-for-python/blob/dev/sample/token_cache_sample.py\" rel=\"nofollow\">sample here</a>):</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">build_persistence</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"n\">fallback_to_plaintext</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Build a suitable persistence instance based your current OS\"\"\"</span>\n    <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">'win'</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">FilePersistenceWithDataProtection</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">'darwin'</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">KeychainPersistence</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">,</span> <span class=\"s2\">\"my_service_name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"my_account_name\"</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">startswith</span><span class=\"p\">(</span><span class=\"s1\">'linux'</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">LibsecretPersistence</span><span class=\"p\">(</span>\n                <span class=\"n\">location</span><span class=\"p\">,</span>\n                <span class=\"n\">schema_name</span><span class=\"o\">=</span><span class=\"s2\">\"my_schema_name\"</span><span class=\"p\">,</span>\n                <span class=\"n\">attributes</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"my_attr1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"my_attr2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">},</span>\n                <span class=\"p\">)</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>  <span class=\"c1\"># pylint: disable=bare-except</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">fallback_to_plaintext</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s2\">\"Encryption unavailable. Opting in to plain text.\"</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">FilePersistence</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">)</span>\n\n<span class=\"n\">persistence</span> <span class=\"o\">=</span> <span class=\"n\">build_persistence</span><span class=\"p\">(</span><span class=\"s2\">\"token_cache.bin\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Is this persistence encrypted?\"</span><span class=\"p\">,</span> <span class=\"n\">persistence</span><span class=\"o\">.</span><span class=\"n\">is_encrypted</span><span class=\"p\">)</span>\n\n<span class=\"n\">cache</span> <span class=\"o\">=</span> <span class=\"n\">PersistedTokenCache</span><span class=\"p\">(</span><span class=\"n\">persistence</span><span class=\"p\">)</span>\n</pre>\n<p>Now you can use it in an MSAL application like this:</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">msal</span><span class=\"o\">.</span><span class=\"n\">PublicClientApplication</span><span class=\"p\">(</span><span class=\"s2\">\"my_client_id\"</span><span class=\"p\">,</span> <span class=\"n\">token_cache</span><span class=\"o\">=</span><span class=\"n\">cache</span><span class=\"p\">)</span>\n</pre>\n<h2>Community Help and Support</h2>\n<p>We leverage Stack Overflow to work with the community on supporting Azure Active Directory and its SDKs, including this one!\nWe highly recommend you ask your questions on Stack Overflow (we're all on there!).\nAlso browse existing issues to see if someone has had your question before.</p>\n<p>We recommend you use the \"msal\" tag so we can see it!\nHere is the latest Q&amp;A on Stack Overflow for MSAL:\n<a href=\"http://stackoverflow.com/questions/tagged/msal\" rel=\"nofollow\">http://stackoverflow.com/questions/tagged/msal</a></p>\n<h2>Contributing</h2>\n<p>All code is licensed under the MIT license and we triage actively on GitHub.</p>\n<p>This project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit <a href=\"https://cla.microsoft.com\" rel=\"nofollow\">https://cla.microsoft.com</a>.</p>\n<p>When you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.</p>\n<h2>We value and adhere to the Microsoft Open Source Code of Conduct</h2>\n<p>This project has adopted the <a href=\"https://opensource.microsoft.com/codeofconduct/\" rel=\"nofollow\">Microsoft Open Source Code of Conduct</a>. For more information see the <a href=\"https://opensource.microsoft.com/codeofconduct/faq/\" rel=\"nofollow\">Code of Conduct FAQ</a> or contact <a href=\"mailto:opencode@microsoft.com\">opencode@microsoft.com</a> with any additional questions or comments.</p>\n\n          </div>"}, "last_serial": 7115326, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2a0efed0854f77c6e6e5b4b851fd64e5", "sha256": "50f6e36eb2f29904181b99154eaed8ed083f6953e9347c796fbf5783aad12c58"}, "downloads": -1, "filename": "msal_extensions-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "2a0efed0854f77c6e6e5b4b851fd64e5", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9041, "upload_time": "2019-07-11T16:56:31", "upload_time_iso_8601": "2019-07-11T16:56:31.365354Z", "url": "https://files.pythonhosted.org/packages/bb/d0/f36c7b40333c2cd553cd117802a34c3d2bff2570de10918d0bb98be3614f/msal_extensions-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6dba0994222bccb21d1126de62d63c4", "sha256": "6439b6a29a10cbd46c95f58fa491457e935bb416cfff86f5461d1ac0e26150f3"}, "downloads": -1, "filename": "msal-extensions-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e6dba0994222bccb21d1126de62d63c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6753, "upload_time": "2019-07-11T16:56:33", "upload_time_iso_8601": "2019-07-11T16:56:33.628811Z", "url": "https://files.pythonhosted.org/packages/b0/6b/6348dcbd1a06ff0e27972ad9dcbed0d44cfdec846c86d457ff25bb431b1d/msal-extensions-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f909e61c584cddf1b31b98f6ef226ba4", "sha256": "7b325e0f490f60e9427a9f418868f2842166947cfa8ac9141d6b55df2c9c6187"}, "downloads": -1, "filename": "msal_extensions-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "f909e61c584cddf1b31b98f6ef226ba4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9010, "upload_time": "2019-07-17T20:11:08", "upload_time_iso_8601": "2019-07-17T20:11:08.537993Z", "url": "https://files.pythonhosted.org/packages/a9/35/d8c5210a52537c48d11dc2c8943bc5778f7a1a0843ab0c95dc5c0562fdfb/msal_extensions-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ce83b84206dc356cc8b859eb08b85c2", "sha256": "c0ad2f7be31434ef71deb3fd162cb9c3b318b6d41f2eb2702158f90cfff6c38b"}, "downloads": -1, "filename": "msal-extensions-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3ce83b84206dc356cc8b859eb08b85c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6739, "upload_time": "2019-07-17T20:11:09", "upload_time_iso_8601": "2019-07-17T20:11:09.794655Z", "url": "https://files.pythonhosted.org/packages/5d/9e/e779763281111af8d344c9b3dcab6f7712fd0fce0f03a2d27e0fdfbf0886/msal-extensions-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a3a16b9098d560ebdf3add25b79d744c", "sha256": "4979592468f9dfbc61a5184361db8c24ca4eaa1f07a7392b4739824c5d123458"}, "downloads": -1, "filename": "msal_extensions-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "a3a16b9098d560ebdf3add25b79d744c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 9013, "upload_time": "2019-10-19T01:27:07", "upload_time_iso_8601": "2019-10-19T01:27:07.238885Z", "url": "https://files.pythonhosted.org/packages/84/29/a3436dc9d77eb70f51a93de6b03aae0daa00976c3b183dd07180c994404d/msal_extensions-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d2306635da2371a9ddc9f2d287df2da", "sha256": "6f29dd50c6c4149bdcdc18449c3fb63639f616de6f37e48d8355ab3118a786f7"}, "downloads": -1, "filename": "msal-extensions-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2d2306635da2371a9ddc9f2d287df2da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6764, "upload_time": "2019-10-19T01:27:08", "upload_time_iso_8601": "2019-10-19T01:27:08.706601Z", "url": "https://files.pythonhosted.org/packages/e9/87/65bf6369cee9cfee9623f3e661c87cade8b446ba27bd8aed15d6985a528d/msal-extensions-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cb7f61780b10fad02ef0088d9e770f05", "sha256": "c5a32b8e1dce1c67733dcdf8aa8bebcff5ab123e779ef7bc14e416bd0da90037"}, "downloads": -1, "filename": "msal_extensions-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cb7f61780b10fad02ef0088d9e770f05", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9017, "upload_time": "2019-11-02T01:27:38", "upload_time_iso_8601": "2019-11-02T01:27:38.095716Z", "url": "https://files.pythonhosted.org/packages/21/9b/8bc67822e98573fe0460e30ad0202ab9e0638a42878041c65a6fe857babe/msal_extensions-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "990a516b07e8c9ccf6375419077e1fec", "sha256": "59e171a9a4baacdbf001c66915efeaef372fb424421f1a4397115a3ddd6205dc"}, "downloads": -1, "filename": "msal-extensions-0.1.3.tar.gz", "has_sig": false, "md5_digest": "990a516b07e8c9ccf6375419077e1fec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6814, "upload_time": "2019-11-02T01:27:39", "upload_time_iso_8601": "2019-11-02T01:27:39.010552Z", "url": "https://files.pythonhosted.org/packages/7c/9d/a0294d164cdba0098846dcd4d6c2b880d768d0fc013d82378a9f291ff1f9/msal-extensions-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2f33b3573c209e927f39333a4e30baa8", "sha256": "ff594f00e3863696b6056e882ed243e97ede0b3da2b4f38f1d64dacd2b684414"}, "downloads": -1, "filename": "msal_extensions-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2f33b3573c209e927f39333a4e30baa8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13381, "upload_time": "2020-04-15T21:41:25", "upload_time_iso_8601": "2020-04-15T21:41:25.598431Z", "url": "https://files.pythonhosted.org/packages/e6/4a/4594ea5565777d8c5ee7bd00dbf6fadafc31f3ec35db21d1a0d9370cac44/msal_extensions-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80480f8814e275377870aeee3ac1d916", "sha256": "3c3c862e27574cc3e1edb260659969401723ba88f514d9cb6a4029cd19979611"}, "downloads": -1, "filename": "msal-extensions-0.2.0.tar.gz", "has_sig": false, "md5_digest": "80480f8814e275377870aeee3ac1d916", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10179, "upload_time": "2020-04-15T21:41:33", "upload_time_iso_8601": "2020-04-15T21:41:33.540370Z", "url": "https://files.pythonhosted.org/packages/da/60/acfc6f10dc92eb39df60549fec8d291a569c67846ccb060366f8f7bff113/msal-extensions-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "6c64de6bd000d9450742725292cefa47", "sha256": "36ecfbfc146197380c10f7539e500a094a8ff5e0b366b3832b6a5feb509e131a"}, "downloads": -1, "filename": "msal_extensions-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6c64de6bd000d9450742725292cefa47", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14088, "upload_time": "2020-04-23T18:38:49", "upload_time_iso_8601": "2020-04-23T18:38:49.618824Z", "url": "https://files.pythonhosted.org/packages/88/64/a118993a888115fc7341ff69718ccc2e9204b30575caa244eee2890881c0/msal_extensions-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c570ab7bf5d01d4f84d4fbeca5223c70", "sha256": "ddfc627acfeecb77b4b6f27f580bb5eb10f6c1aa23828df64feed98c84c90516"}, "downloads": -1, "filename": "msal-extensions-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c570ab7bf5d01d4f84d4fbeca5223c70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10652, "upload_time": "2020-04-23T18:38:50", "upload_time_iso_8601": "2020-04-23T18:38:50.878299Z", "url": "https://files.pythonhosted.org/packages/d6/2f/6cad88758aed38e7a4d822f966ba1e389b1238f840f996827a8e4332bbfe/msal-extensions-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "13b7b3e10170c40b973c21ca1c42c15b", "sha256": "f092246787145ec96d6c3c9f7bedfb837830fe8a79b56180e531fbf28b8de532"}, "downloads": -1, "filename": "msal_extensions-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "13b7b3e10170c40b973c21ca1c42c15b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15953, "upload_time": "2020-04-27T21:25:34", "upload_time_iso_8601": "2020-04-27T21:25:34.631034Z", "url": "https://files.pythonhosted.org/packages/33/da/eed514cb6902405c5c11a03f1e65adbd95e2c26d9b22eae390eddb561201/msal_extensions-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "739cc38db22670a4309cbd7a7ae7d464", "sha256": "31414753c484679bb3b6c6401623eb4c3ccab630af215f2f78c1d5c4f8e1d1a9"}, "downloads": -1, "filename": "msal-extensions-0.2.2.tar.gz", "has_sig": false, "md5_digest": "739cc38db22670a4309cbd7a7ae7d464", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12607, "upload_time": "2020-04-27T21:25:35", "upload_time_iso_8601": "2020-04-27T21:25:35.994271Z", "url": "https://files.pythonhosted.org/packages/c5/af/8f05a701fecb570327fd2ba580120671722a099a464af180ccb20f1305f2/msal-extensions-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13b7b3e10170c40b973c21ca1c42c15b", "sha256": "f092246787145ec96d6c3c9f7bedfb837830fe8a79b56180e531fbf28b8de532"}, "downloads": -1, "filename": "msal_extensions-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "13b7b3e10170c40b973c21ca1c42c15b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15953, "upload_time": "2020-04-27T21:25:34", "upload_time_iso_8601": "2020-04-27T21:25:34.631034Z", "url": "https://files.pythonhosted.org/packages/33/da/eed514cb6902405c5c11a03f1e65adbd95e2c26d9b22eae390eddb561201/msal_extensions-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "739cc38db22670a4309cbd7a7ae7d464", "sha256": "31414753c484679bb3b6c6401623eb4c3ccab630af215f2f78c1d5c4f8e1d1a9"}, "downloads": -1, "filename": "msal-extensions-0.2.2.tar.gz", "has_sig": false, "md5_digest": "739cc38db22670a4309cbd7a7ae7d464", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12607, "upload_time": "2020-04-27T21:25:35", "upload_time_iso_8601": "2020-04-27T21:25:35.994271Z", "url": "https://files.pythonhosted.org/packages/c5/af/8f05a701fecb570327fd2ba580120671722a099a464af180ccb20f1305f2/msal-extensions-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:56 2020"}