{"info": {"author": "Benjamin F. Maier", "author_email": "bfmaier@physik.hu-berlin.de", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "smallworld\n==========\n\nGenerate and analyze small-world networks according to the revised\nWatts-Strogatz model where the randomization at *\u03b2* = 1 is truly equal to the Erd\u0151s-R\u00e9nyi network model.\n\nIn the Watts-Strogatz model each node rewires its *k*/2\nrightmost edges with probality *\u03b2*. This means that each node has halways\nminimum degree *k*/2. Also, at *\u03b2* = 1, each edge has been rewired.\nHence the probability of it existing is smaller than *k*/(*N*-1), contrary to the ER model.\n\nIn the adjusted model, each pair of nodes is connected with a certain\nconnection probability. If the lattice distance between the potentially\nconnected nodes is d(i,j) <= *k*/2 then they are connected with\nshort-range probability ``p_S = k / (k + \u03b2 (N-1-k))``, otherwise they're\nconnected with long-range probability ``p_L = \u03b2 * p_S``.\n\nInstall\n-------\n\n::\n\n    pip install smallworld\n\nBeware: ``smallworld`` only works with Python 3!\n\nExample\n-------\n\nIn the following example you can see how to generate and draw according\nto the model described above.\n\n.. code:: python\n\n    from smallworld.draw import draw_network\n    from smallworld import get_smallworld_graph\n\n    import matplotlib.pyplot as pl\n\n    # define network parameters\n    N = 21\n    k_over_2 = 2\n    betas = [0, 0.025, 1.0]\n    labels = [ r'$\\beta=0$', r'$\\beta=0.025$', r'$\\beta=1$']\n\n    focal_node = 0\n\n    fig, ax = pl.subplots(1,3,figsize=(9,3))\n\n\n    # scan beta values\n    for ib, beta in enumerate(betas):\n\n        # generate small-world graphs and draw\n        G = get_smallworld_graph(N, k_over_2, beta)\n        draw_network(G,k_over_2,focal_node=focal_node,ax=ax[ib])\n\n        ax[ib].set_title(labels[ib],fontsize=11)\n\n    # show\n    pl.subplots_adjust(wspace=0.3)\n    pl.show()\n\n.. figure:: https://github.com/benmaier/smallworld/raw/master/sandbox/small_worlds.png\n    :alt: visualization example\n\n    visualization example", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/benmaier/pysmallworld", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "smallworld", "package_url": "https://pypi.org/project/smallworld/", "platform": "", "project_url": "https://pypi.org/project/smallworld/", "project_urls": {"Homepage": "https://github.com/benmaier/pysmallworld"}, "release_url": "https://pypi.org/project/smallworld/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Generate modified small-world networks and compare with theoretical predictions.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Generate and analyze small-world networks according to the revised\nWatts-Strogatz model where the randomization at <em>\u03b2</em> = 1 is truly equal to the Erd\u0151s-R\u00e9nyi network model.</p>\n<p>In the Watts-Strogatz model each node rewires its <em>k</em>/2\nrightmost edges with probality <em>\u03b2</em>. This means that each node has halways\nminimum degree <em>k</em>/2. Also, at <em>\u03b2</em> = 1, each edge has been rewired.\nHence the probability of it existing is smaller than <em>k</em>/(<em>N</em>-1), contrary to the ER model.</p>\n<p>In the adjusted model, each pair of nodes is connected with a certain\nconnection probability. If the lattice distance between the potentially\nconnected nodes is d(i,j) &lt;= <em>k</em>/2 then they are connected with\nshort-range probability <tt>p_S = k / (k + \u03b2 <span class=\"pre\">(N-1-k))</span></tt>, otherwise they\u2019re\nconnected with long-range probability <tt>p_L = \u03b2 * p_S</tt>.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install smallworld\n</pre>\n<p>Beware: <tt>smallworld</tt> only works with Python 3!</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>In the following example you can see how to generate and draw according\nto the model described above.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">smallworld.draw</span> <span class=\"kn\">import</span> <span class=\"n\">draw_network</span>\n<span class=\"kn\">from</span> <span class=\"nn\">smallworld</span> <span class=\"kn\">import</span> <span class=\"n\">get_smallworld_graph</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">pl</span>\n\n<span class=\"c1\"># define network parameters</span>\n<span class=\"n\">N</span> <span class=\"o\">=</span> <span class=\"mi\">21</span>\n<span class=\"n\">k_over_2</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"n\">betas</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mf\">0.025</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">]</span>\n<span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"sa\">r</span><span class=\"s1\">'$\\beta=0$'</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">'$\\beta=0.025$'</span><span class=\"p\">,</span> <span class=\"sa\">r</span><span class=\"s1\">'$\\beta=1$'</span><span class=\"p\">]</span>\n\n<span class=\"n\">focal_node</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n\n\n<span class=\"c1\"># scan beta values</span>\n<span class=\"k\">for</span> <span class=\"n\">ib</span><span class=\"p\">,</span> <span class=\"n\">beta</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">betas</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># generate small-world graphs and draw</span>\n    <span class=\"n\">G</span> <span class=\"o\">=</span> <span class=\"n\">get_smallworld_graph</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">k_over_2</span><span class=\"p\">,</span> <span class=\"n\">beta</span><span class=\"p\">)</span>\n    <span class=\"n\">draw_network</span><span class=\"p\">(</span><span class=\"n\">G</span><span class=\"p\">,</span><span class=\"n\">k_over_2</span><span class=\"p\">,</span><span class=\"n\">focal_node</span><span class=\"o\">=</span><span class=\"n\">focal_node</span><span class=\"p\">,</span><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"n\">ib</span><span class=\"p\">])</span>\n\n    <span class=\"n\">ax</span><span class=\"p\">[</span><span class=\"n\">ib</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"n\">ib</span><span class=\"p\">],</span><span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># show</span>\n<span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">subplots_adjust</span><span class=\"p\">(</span><span class=\"n\">wspace</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n<span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<div>\n<img alt=\"visualization example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/153abc47f2d93287bbe3fe595e2e5e893e7fc9c5/68747470733a2f2f6769746875622e636f6d2f62656e6d616965722f736d616c6c776f726c642f7261772f6d61737465722f73616e64626f782f736d616c6c5f776f726c64732e706e67\">\n<p>visualization example</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4673469, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "91b46542e7596a5345fc413175fbfc43", "sha256": "7059509d4145dbf605a97edc85780f762e894c2dd74a2f5849a35f33c1775198"}, "downloads": -1, "filename": "smallworld-0.0.1.tar.gz", "has_sig": false, "md5_digest": "91b46542e7596a5345fc413175fbfc43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7582, "upload_time": "2019-01-08T16:15:55", "upload_time_iso_8601": "2019-01-08T16:15:55.400988Z", "url": "https://files.pythonhosted.org/packages/09/47/a41fdaed2973af7477178716417daa7f41c857c1b7eff68cf365f2db37bb/smallworld-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "62c02a0b971d94c543324b34c5ddd97d", "sha256": "4cd8e30bd795afc00558f25c71f9c6f3f94e094f2d925e6f8c94404fba56ef5f"}, "downloads": -1, "filename": "smallworld-0.0.2.tar.gz", "has_sig": false, "md5_digest": "62c02a0b971d94c543324b34c5ddd97d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7585, "upload_time": "2019-01-08T16:23:16", "upload_time_iso_8601": "2019-01-08T16:23:16.005468Z", "url": "https://files.pythonhosted.org/packages/09/25/88d61bbca9ab3f6f6a194dde4f952d63d014a2bad2793be98dea966a6d7d/smallworld-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62c02a0b971d94c543324b34c5ddd97d", "sha256": "4cd8e30bd795afc00558f25c71f9c6f3f94e094f2d925e6f8c94404fba56ef5f"}, "downloads": -1, "filename": "smallworld-0.0.2.tar.gz", "has_sig": false, "md5_digest": "62c02a0b971d94c543324b34c5ddd97d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7585, "upload_time": "2019-01-08T16:23:16", "upload_time_iso_8601": "2019-01-08T16:23:16.005468Z", "url": "https://files.pythonhosted.org/packages/09/25/88d61bbca9ab3f6f6a194dde4f952d63d014a2bad2793be98dea966a6d7d/smallworld-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:08 2020"}