{"info": {"author": "Caleb Hawkins", "author_email": "hawkins.caleb93@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "======================================\nPyConfluence REST API wrapper (\"Pyco\")\n======================================\n\n.. image:: https://img.shields.io/pypi/v/pyconfluence.svg\n   :target: https://img.shields.io/pypi/v/pyconfluence\n\n.. image:: https://img.shields.io/badge/python-2.6%2C%202.7%2C%203.3%2C%203.4%2C%203.5-orange.svg\n   :target: https://img.shields.io/badge/python-2.6%2C%202.7%2C%203.3%2C%203.4%2C%203.5-orange\n\n.. image:: https://travis-ci.org/FulcrumIT/pyconfluence.svg\n   :target: https://travis-ci.org/FulcrumIT/pyconfluence\n   :alt: Travis build status\n\n.. _Twitter: https://twitter.com/MuddyTM\n\n.. _blog: http://muddytm.github.io/\n\nPyConfluence is an API wrapper for Atlassian's Confluence service that is used\nextensively in automated documentation here at `Fulcrum Technologies <http://www.fulcrum.net/>`__.\nIt is designed with convenience in mind and allows for easy interaction with the\nnumerous services Confluence offers.\n\nSetup\n---------------\n\nTo get going with PyConfluence (or \"Pyco\", because \"PyConfluence\" has lots of\nletters in it), you're first going to want to install \"pyconfluence\" with pip:\n\n    pip install pyconfluence\n\nOnce that's done, you'll need to give it your credentials by setting them as\nenvironment variables. Here's the step-by-step process:\n\n1. Create a file named \".pyconfluence\" in your home directory (\"~/.pyconfluence\").\n2. In that file, input the following lines (with appropriate credentials):\n\n    export PYCONFLUENCE_USER=[username for Confluence account]\n\n    export PYCONFLUENCE_TOKEN=[password for Confluence account]\n\n    export PYCONFLUENCE_ORG=[organization name; found in \"https://[org].atlassian.net/wiki/...\" URL]\n\n3. Save the file, then add this to \".bash_profile\" in your home directory (\"~/.bash_profile\"):\n\n    source ~/.pyconfluence\n\n4. Once this is done, on startup these environment variables will be loaded.\n\n5. There is no step 5, because you're done! Woo!\n\nHow to use\n---------------\n\nImport PyConfluence in your Python script by transcribing this tremendously\ndifficult and complex series of keywords:\n\n    import pyconfluence\n\nWhew! You did it. Now we can begin using Pyco (remember, that's PyConfluence).\n\nWait, wait; I lied. We can't yet, because there's some basic stuff about\nConfluence that should be explained first as it pertains to Pyco.\n\nWhat does [x] mean?\n---------------\n\nHere are some words/phrases you're going to need to be familiar with, and their\ndefinitions:\n\n- A **page ID** is a unique identifier (in form of a number) that is given to\n  each and every page. There is no known way to control what page ID a page\n  receives. To find this ID, go to the editing interface for that page and find\n  it at the end of the URL. Alternatively, use the **get_page_id()** function in\n  Pyco. Note: in actions.py, the variable \"id\" is the same as the page ID.\n\n- A **space** is a group of pages in Confluence in essence; however for purposes\n  in context of Pyco, this word is the same as the **space identifier**. To find\n  this identifier, go to the space and look at the URL. You'll find it right\n  after \".../wiki/display/\". Unless that gets changed. Then feel free to send me\n  hatemail!\n\n- A **parent ID** is the same as a **page ID** and can be found the same way.\n  The key difference is that a page can only be created when given a parent to\n  sit under; the page whose ID is given as a parent ID will become the parent to\n  the newly created page. Capiche? See the function **create_page()** for more\n  details.\n\n- A **page name** is...yeah, you guess it. The name for a page. In Highlander\n  style, *there can only be one* in any given space. You can also decide exactly\n  what page name you want, unlike page IDs.\n\n- **Content** is the source **XHTML** for any given page. Let me repeat: that's\n  **XHTML**...*not* HTML. There are subtle differences between the two that will\n  often give you a headache when trying to create pages. Unfortunately there's\n  no easy way to look at the XHTML of a page without using the API. Try\n  **get_page_content()** and learn some stuff!\n\nPyConfluence functions\n---------------\n\nNow that you know all of those terms and have memorized all their definitions\nword-for-word, you can begin using Pyco without breaking a sweat. Although one\nwould wonder why you were sweating in the first place.\n\nBelow I will list the current functions for PyConfluence. I'll be updating this\nlist as long as the script itself is being updated. For more information, check\nout **pyconfluence/actions.py**.\n\n- **create_page(name, parent_id, space, content)**:\n  Create a page in Confluence.\n\n- **delete_page(id)**:\n  Delete a page from Confluence.\n\n- **delete_page_full(id)**:\n  Delete a page from Confluence, along with its children.\n\n- **get_page_full(id)**:\n  Return JSON containing information about page.\n\n- **get_page_full_more(name, space)**:\n  Return content different than that from get_page_content, in JSON.\n\n- **get_page_content(id)**:\n  Return XHTML content of a page.\n\n- **get_page_name(id)**:\n  Return name of a page based on passed page id.\n\n- **get_page_id(name, space)**:\n  Return id of a page based on passed page name and space.\n\n- **page_exists(name, space)**:\n  Return True if named page currently exists in specified space.\n\n- **get_page_children(id)**:\n  Return list of a page's children as JSON.\n\nYou've reached the end!\n---------------\n\nSo...time for some self-promotion!\n\nFollow me on Twitter_, and/or check out my blog_!\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/FulcrumIT/pyconfluence/tarball/1.1.3", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FulcrumIT/pyconfluence", "keywords": "confluence", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pyconfluence", "package_url": "https://pypi.org/project/pyconfluence/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyconfluence/", "project_urls": {"Download": "https://github.com/FulcrumIT/pyconfluence/tarball/1.1.3", "Homepage": "https://github.com/FulcrumIT/pyconfluence"}, "release_url": "https://pypi.org/project/pyconfluence/1.1.3/", "requires_dist": null, "requires_python": null, "summary": "An API wrapper for Atlassian Confluence", "version": "1.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            ======================================<br>PyConfluence REST API wrapper (\"Pyco\")<br>======================================<br><br>.. image:: https://img.shields.io/pypi/v/pyconfluence.svg<br>   :target: https://img.shields.io/pypi/v/pyconfluence<br><br>.. image:: https://img.shields.io/badge/python-2.6%2C%202.7%2C%203.3%2C%203.4%2C%203.5-orange.svg<br>   :target: https://img.shields.io/badge/python-2.6%2C%202.7%2C%203.3%2C%203.4%2C%203.5-orange<br><br>.. image:: https://travis-ci.org/FulcrumIT/pyconfluence.svg<br>   :target: https://travis-ci.org/FulcrumIT/pyconfluence<br>   :alt: Travis build status<br><br>.. _Twitter: https://twitter.com/MuddyTM<br><br>.. _blog: http://muddytm.github.io/<br><br>PyConfluence is an API wrapper for Atlassian's Confluence service that is used<br>extensively in automated documentation here at `Fulcrum Technologies &lt;http://www.fulcrum.net/&gt;`__.<br>It is designed with convenience in mind and allows for easy interaction with the<br>numerous services Confluence offers.<br><br>Setup<br>---------------<br><br>To get going with PyConfluence (or \"Pyco\", because \"PyConfluence\" has lots of<br>letters in it), you're first going to want to install \"pyconfluence\" with pip:<br><br>    pip install pyconfluence<br><br>Once that's done, you'll need to give it your credentials by setting them as<br>environment variables. Here's the step-by-step process:<br><br>1. Create a file named \".pyconfluence\" in your home directory (\"~/.pyconfluence\").<br>2. In that file, input the following lines (with appropriate credentials):<br><br>    export PYCONFLUENCE_USER=[username for Confluence account]<br><br>    export PYCONFLUENCE_TOKEN=[password for Confluence account]<br><br>    export PYCONFLUENCE_ORG=[organization name; found in \"https://[org].atlassian.net/wiki/...\" URL]<br><br>3. Save the file, then add this to \".bash_profile\" in your home directory (\"~/.bash_profile\"):<br><br>    source ~/.pyconfluence<br><br>4. Once this is done, on startup these environment variables will be loaded.<br><br>5. There is no step 5, because you're done! Woo!<br><br>How to use<br>---------------<br><br>Import PyConfluence in your Python script by transcribing this tremendously<br>difficult and complex series of keywords:<br><br>    import pyconfluence<br><br>Whew! You did it. Now we can begin using Pyco (remember, that's PyConfluence).<br><br>Wait, wait; I lied. We can't yet, because there's some basic stuff about<br>Confluence that should be explained first as it pertains to Pyco.<br><br>What does [x] mean?<br>---------------<br><br>Here are some words/phrases you're going to need to be familiar with, and their<br>definitions:<br><br>- A **page ID** is a unique identifier (in form of a number) that is given to<br>  each and every page. There is no known way to control what page ID a page<br>  receives. To find this ID, go to the editing interface for that page and find<br>  it at the end of the URL. Alternatively, use the **get_page_id()** function in<br>  Pyco. Note: in actions.py, the variable \"id\" is the same as the page ID.<br><br>- A **space** is a group of pages in Confluence in essence; however for purposes<br>  in context of Pyco, this word is the same as the **space identifier**. To find<br>  this identifier, go to the space and look at the URL. You'll find it right<br>  after \".../wiki/display/\". Unless that gets changed. Then feel free to send me<br>  hatemail!<br><br>- A **parent ID** is the same as a **page ID** and can be found the same way.<br>  The key difference is that a page can only be created when given a parent to<br>  sit under; the page whose ID is given as a parent ID will become the parent to<br>  the newly created page. Capiche? See the function **create_page()** for more<br>  details.<br><br>- A **page name** is...yeah, you guess it. The name for a page. In Highlander<br>  style, *there can only be one* in any given space. You can also decide exactly<br>  what page name you want, unlike page IDs.<br><br>- **Content** is the source **XHTML** for any given page. Let me repeat: that's<br>  **XHTML**...*not* HTML. There are subtle differences between the two that will<br>  often give you a headache when trying to create pages. Unfortunately there's<br>  no easy way to look at the XHTML of a page without using the API. Try<br>  **get_page_content()** and learn some stuff!<br><br>PyConfluence functions<br>---------------<br><br>Now that you know all of those terms and have memorized all their definitions<br>word-for-word, you can begin using Pyco without breaking a sweat. Although one<br>would wonder why you were sweating in the first place.<br><br>Below I will list the current functions for PyConfluence. I'll be updating this<br>list as long as the script itself is being updated. For more information, check<br>out **pyconfluence/actions.py**.<br><br>- **create_page(name, parent_id, space, content)**:<br>  Create a page in Confluence.<br><br>- **delete_page(id)**:<br>  Delete a page from Confluence.<br><br>- **delete_page_full(id)**:<br>  Delete a page from Confluence, along with its children.<br><br>- **get_page_full(id)**:<br>  Return JSON containing information about page.<br><br>- **get_page_full_more(name, space)**:<br>  Return content different than that from get_page_content, in JSON.<br><br>- **get_page_content(id)**:<br>  Return XHTML content of a page.<br><br>- **get_page_name(id)**:<br>  Return name of a page based on passed page id.<br><br>- **get_page_id(name, space)**:<br>  Return id of a page based on passed page name and space.<br><br>- **page_exists(name, space)**:<br>  Return True if named page currently exists in specified space.<br><br>- **get_page_children(id)**:<br>  Return list of a page's children as JSON.<br><br>You've reached the end!<br>---------------<br><br>So...time for some self-promotion!<br><br>Follow me on Twitter_, and/or check out my blog_!<br>\n          </div>"}, "last_serial": 2083177, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "cc40db74a7f6229e73bc2bc246b5405c", "sha256": "2af12d94ffe282d4660584cfaf557d144d8f22634fd3f5c94575758406b528e1"}, "downloads": -1, "filename": "pyconfluence-1.0.tar.gz", "has_sig": false, "md5_digest": "cc40db74a7f6229e73bc2bc246b5405c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6119, "upload_time": "2016-04-05T21:22:41", "upload_time_iso_8601": "2016-04-05T21:22:41.963938Z", "url": "https://files.pythonhosted.org/packages/68/16/aee5a0cc2b9f591db76009e1c7859e63ffc26d315d578021163bd9ffd756/pyconfluence-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f6b04aa3b5df47ae1a2e26708cec5879", "sha256": "64aa9a03815fad92998511f713617506efb6ed961841f55b06aaeeeb09907856"}, "downloads": -1, "filename": "pyconfluence-1.1.tar.gz", "has_sig": false, "md5_digest": "f6b04aa3b5df47ae1a2e26708cec5879", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6377, "upload_time": "2016-04-07T20:46:34", "upload_time_iso_8601": "2016-04-07T20:46:34.439541Z", "url": "https://files.pythonhosted.org/packages/50/0b/b4fd2ef907419870f37a38a2ea689a971a7ed00b5e62f317ad9cf8caf7f8/pyconfluence-1.1.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "a2e31dece18d7f98b2ad548fd0b627c0", "sha256": "c71abdb6507591e5021124e9fa1bd5ea99060a557a4ed638acb7ae3d6129b573"}, "downloads": -1, "filename": "pyconfluence-1.1.1.tar.gz", "has_sig": false, "md5_digest": "a2e31dece18d7f98b2ad548fd0b627c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6366, "upload_time": "2016-04-20T16:27:18", "upload_time_iso_8601": "2016-04-20T16:27:18.779428Z", "url": "https://files.pythonhosted.org/packages/b2/32/b859711a39c5c4f4e6207d307a4c8f868970a91f78e1b85902c4f9b497d0/pyconfluence-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "9ae4ea9e55ae19abe4acbb45e7048fe8", "sha256": "c69508ef28e6180ebcab037665730aa45edfabc983b4d89566ac8e33ee7f8c37"}, "downloads": -1, "filename": "pyconfluence-1.1.2.tar.gz", "has_sig": false, "md5_digest": "9ae4ea9e55ae19abe4acbb45e7048fe8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6358, "upload_time": "2016-04-21T22:47:45", "upload_time_iso_8601": "2016-04-21T22:47:45.942366Z", "url": "https://files.pythonhosted.org/packages/85/ec/af58758012be9e5bdf70d2ea3074959c7a901783758e459cdeb8fa361ce5/pyconfluence-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "12627c4847182dd00baf68dbead35383", "sha256": "fa2083d1c50c614e6d4fc1e4f493039da58a46aa4b075e8b2936042ed27ffa62"}, "downloads": -1, "filename": "pyconfluence-1.1.3.tar.gz", "has_sig": false, "md5_digest": "12627c4847182dd00baf68dbead35383", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6343, "upload_time": "2016-04-25T17:05:41", "upload_time_iso_8601": "2016-04-25T17:05:41.278948Z", "url": "https://files.pythonhosted.org/packages/4a/d7/e8ee1e63b385d81cdb974047bc393996efd026df74ee914a882c05885429/pyconfluence-1.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12627c4847182dd00baf68dbead35383", "sha256": "fa2083d1c50c614e6d4fc1e4f493039da58a46aa4b075e8b2936042ed27ffa62"}, "downloads": -1, "filename": "pyconfluence-1.1.3.tar.gz", "has_sig": false, "md5_digest": "12627c4847182dd00baf68dbead35383", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6343, "upload_time": "2016-04-25T17:05:41", "upload_time_iso_8601": "2016-04-25T17:05:41.278948Z", "url": "https://files.pythonhosted.org/packages/4a/d7/e8ee1e63b385d81cdb974047bc393996efd026df74ee914a882c05885429/pyconfluence-1.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:08 2020"}