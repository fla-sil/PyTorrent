{"info": {"author": "Ken Youens-Clark", "author_email": "kyclark@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# csvchk\n\nVertically print records from a delimited text file\n\nThis program will show you the first record(s) of a delimited text file transposed vertically.\nIt is meant to complement the many features of the `csvkit` tools.\nFor example, given a file like this:\n\n```\n$ csvlook test/test.csv\n| id | val |\n| -- | --- |\n|  1 | foo |\n|  2 | bar |\n```\n\nThis program will show:\n\n```\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n```\n\n# Usage and options\n\nRun with `-h` or `--help` for a full usage:\n\n    usage: csvchk [-h] [-s sep] [-f names] [-l nrecs] [-d] [-n] [-N] [-v]\n                  FILE [FILE ...]\n\n    Vertically print records from a delimited text file\n\n    positional arguments:\n      FILE                  Input file(s)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -s sep, --sep sep     Field separator (default: )\n      -f names, --fieldnames names\n                            Field names (no header) (default: )\n      -l nrecs, --limit nrecs\n                            How many records to show (default: 1)\n      -d, --dense           Not sparse (skip empty fields) (default: False)\n      -n, --number          Show field number (e.g., for awk) (default: False)\n      -N, --noheaders       No headers in first row (default: False)\n      -v, --version         show program's version number and exit\n\n## Separator\n\nThe default field separator is a tab character unless the input file has the extension `.csv`.\nYou can change this value using the `-s` or `--sep` option.\n\nFor example, given this file:\n\n```\n$ cat test/test2.txt\nid:val\n1:foo\n2:bar\n```\n\nYou could run:\n\n```\n$ csvchk -s ':' test/test2.txt\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n```\n\n## Field names\n\nThe input file is assumed to contain column headers/field names in the first row.\nIf a file has no such headers, you can provide a comma-separated string with `-f` or `--fieldnames` of values to use instead.\n\nFor example, given this file:\n\n```\n$ cat test/nohdr.csv\n1,foo\n2,bar\n```\n\nYou can run:\n\n```\n$ csvchk -f 'id, value' test/nohdr.csv\n// ****** Record 1 ****** //\nid    : 1\nvalue : foo\n```\n\n## Limit\n\nBy default, the program will use the `-l` or `--limit` value of `1` to show the first record.\nYou can increase this, for example:\n\n```\n$ csvchk -l 2 test/test.csv\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n// ****** Record 2 ****** //\nid  : 2\nval : bar\n```\n\nTo see _all_ the records, use a `--limit` of `0` or less:\n\n```\n$ csvchk -l 0 test/test.csv\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n// ****** Record 2 ****** //\nid  : 2\nval : bar\n// ****** Record 3 ****** //\nid  : 3\nval : baz\n```\n\n## Dense output\n\nBy default, all fields and values will be shown for each record.\nFor example, given this file:\n\n```\n$ cat test/sparse.csv\nid,val\n1,foo\n2,\n,baz\n```\n\nThis will be shown:\n\n```\n$ csvchk test/sparse.csv -l -1\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n// ****** Record 2 ****** //\nid  : 2\nval :\n// ****** Record 3 ****** //\nid  :\nval : baz\n```\n\nYou can use the `-d` or `--dense` option to omit fields that have no values:\n\n```\n$ csvchk test/sparse.csv -l -1 -d\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n// ****** Record 2 ****** //\nid : 2\n// ****** Record 3 ****** //\nval : baz\n```\n\n## Numbering fields\n\nThe `-n` or `--number` option will append the field numbers before the output:\n\n```\n$ csvchk -n test/test.tab\n// ****** Record 1 ****** //\n  1 id  : 1\n  2 val : foo\n```\n\nThis can be useful if you would like to know the field number to use with `awk`, e.g., we could look for records where the `val` column (in the second position) has an \"a\":\n\n```\n$ awk '$2 ~ /a/' test/test.tab\nid\tval\n2\tbar\n```\n\n## No headers\n\nIf the input file does not have headers (column names) in the first row, you can use the `-N` or `--noheaders` option to have the program create names like \"Field1,\" \"Field2,\" etc.:\n\n```\n$ csvchk -N test/nohdr.csv\n// ****** Record 1 ****** //\nField1 : 1\nField2 : foo\n```\n\n## Multiple file inputs\n\nIf given multiple files as inputs, the program will insert a header noting the basename of each file:\n\n```\n$ csvchk test/test.csv test/test.tab\n==> test.csv <==\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n\n==> test.tab <==\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n```\n\n# Author\n\nKen Youens-Clark <kyclark@gmail.com>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kyclark/csvchk", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "csvchk", "package_url": "https://pypi.org/project/csvchk/", "platform": "", "project_url": "https://pypi.org/project/csvchk/", "project_urls": {"Homepage": "https://github.com/kyclark/csvchk"}, "release_url": "https://pypi.org/project/csvchk/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Vertical view of delimited text records", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>csvchk</h1>\n<p>Vertically print records from a delimited text file</p>\n<p>This program will show you the first record(s) of a delimited text file transposed vertically.\nIt is meant to complement the many features of the <code>csvkit</code> tools.\nFor example, given a file like this:</p>\n<pre><code>$ csvlook test/test.csv\n| id | val |\n| -- | --- |\n|  1 | foo |\n|  2 | bar |\n</code></pre>\n<p>This program will show:</p>\n<pre><code>// ****** Record 1 ****** //\nid  : 1\nval : foo\n</code></pre>\n<h1>Usage and options</h1>\n<p>Run with <code>-h</code> or <code>--help</code> for a full usage:</p>\n<pre><code>usage: csvchk [-h] [-s sep] [-f names] [-l nrecs] [-d] [-n] [-N] [-v]\n              FILE [FILE ...]\n\nVertically print records from a delimited text file\n\npositional arguments:\n  FILE                  Input file(s)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s sep, --sep sep     Field separator (default: )\n  -f names, --fieldnames names\n                        Field names (no header) (default: )\n  -l nrecs, --limit nrecs\n                        How many records to show (default: 1)\n  -d, --dense           Not sparse (skip empty fields) (default: False)\n  -n, --number          Show field number (e.g., for awk) (default: False)\n  -N, --noheaders       No headers in first row (default: False)\n  -v, --version         show program's version number and exit\n</code></pre>\n<h2>Separator</h2>\n<p>The default field separator is a tab character unless the input file has the extension <code>.csv</code>.\nYou can change this value using the <code>-s</code> or <code>--sep</code> option.</p>\n<p>For example, given this file:</p>\n<pre><code>$ cat test/test2.txt\nid:val\n1:foo\n2:bar\n</code></pre>\n<p>You could run:</p>\n<pre><code>$ csvchk -s ':' test/test2.txt\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n</code></pre>\n<h2>Field names</h2>\n<p>The input file is assumed to contain column headers/field names in the first row.\nIf a file has no such headers, you can provide a comma-separated string with <code>-f</code> or <code>--fieldnames</code> of values to use instead.</p>\n<p>For example, given this file:</p>\n<pre><code>$ cat test/nohdr.csv\n1,foo\n2,bar\n</code></pre>\n<p>You can run:</p>\n<pre><code>$ csvchk -f 'id, value' test/nohdr.csv\n// ****** Record 1 ****** //\nid    : 1\nvalue : foo\n</code></pre>\n<h2>Limit</h2>\n<p>By default, the program will use the <code>-l</code> or <code>--limit</code> value of <code>1</code> to show the first record.\nYou can increase this, for example:</p>\n<pre><code>$ csvchk -l 2 test/test.csv\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n// ****** Record 2 ****** //\nid  : 2\nval : bar\n</code></pre>\n<p>To see <em>all</em> the records, use a <code>--limit</code> of <code>0</code> or less:</p>\n<pre><code>$ csvchk -l 0 test/test.csv\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n// ****** Record 2 ****** //\nid  : 2\nval : bar\n// ****** Record 3 ****** //\nid  : 3\nval : baz\n</code></pre>\n<h2>Dense output</h2>\n<p>By default, all fields and values will be shown for each record.\nFor example, given this file:</p>\n<pre><code>$ cat test/sparse.csv\nid,val\n1,foo\n2,\n,baz\n</code></pre>\n<p>This will be shown:</p>\n<pre><code>$ csvchk test/sparse.csv -l -1\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n// ****** Record 2 ****** //\nid  : 2\nval :\n// ****** Record 3 ****** //\nid  :\nval : baz\n</code></pre>\n<p>You can use the <code>-d</code> or <code>--dense</code> option to omit fields that have no values:</p>\n<pre><code>$ csvchk test/sparse.csv -l -1 -d\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n// ****** Record 2 ****** //\nid : 2\n// ****** Record 3 ****** //\nval : baz\n</code></pre>\n<h2>Numbering fields</h2>\n<p>The <code>-n</code> or <code>--number</code> option will append the field numbers before the output:</p>\n<pre><code>$ csvchk -n test/test.tab\n// ****** Record 1 ****** //\n  1 id  : 1\n  2 val : foo\n</code></pre>\n<p>This can be useful if you would like to know the field number to use with <code>awk</code>, e.g., we could look for records where the <code>val</code> column (in the second position) has an \"a\":</p>\n<pre><code>$ awk '$2 ~ /a/' test/test.tab\nid\tval\n2\tbar\n</code></pre>\n<h2>No headers</h2>\n<p>If the input file does not have headers (column names) in the first row, you can use the <code>-N</code> or <code>--noheaders</code> option to have the program create names like \"Field1,\" \"Field2,\" etc.:</p>\n<pre><code>$ csvchk -N test/nohdr.csv\n// ****** Record 1 ****** //\nField1 : 1\nField2 : foo\n</code></pre>\n<h2>Multiple file inputs</h2>\n<p>If given multiple files as inputs, the program will insert a header noting the basename of each file:</p>\n<pre><code>$ csvchk test/test.csv test/test.tab\n==&gt; test.csv &lt;==\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n\n==&gt; test.tab &lt;==\n// ****** Record 1 ****** //\nid  : 1\nval : foo\n</code></pre>\n<h1>Author</h1>\n<p>Ken Youens-Clark <a href=\"mailto:kyclark@gmail.com\">kyclark@gmail.com</a></p>\n\n          </div>"}, "last_serial": 7013275, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "b640b97a664ae2dc87076ada11e5e822", "sha256": "ab18060958aa8c74fe2596f8c5e5bde54bd5d80924001e3855012cd7157f7347"}, "downloads": -1, "filename": "csvchk-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b640b97a664ae2dc87076ada11e5e822", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6235, "upload_time": "2020-04-13T22:37:18", "upload_time_iso_8601": "2020-04-13T22:37:18.606338Z", "url": "https://files.pythonhosted.org/packages/b0/f5/0a26b9d1da86e4cfbb1f51d36b68772815a3cff8f8aa7062a8a406ddc070/csvchk-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f91d0959aae55e7523f05a12a0479c9", "sha256": "2c8bf375f148515435223e38795e565fdd5cca2c6f889df6a93e1d17e4fb043d"}, "downloads": -1, "filename": "csvchk-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9f91d0959aae55e7523f05a12a0479c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5186, "upload_time": "2020-04-13T22:37:21", "upload_time_iso_8601": "2020-04-13T22:37:21.601167Z", "url": "https://files.pythonhosted.org/packages/c0/b1/1d196c3a3d3c83a2234998783a9ebe03c618693d897f278bf67cf4ac6459/csvchk-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b640b97a664ae2dc87076ada11e5e822", "sha256": "ab18060958aa8c74fe2596f8c5e5bde54bd5d80924001e3855012cd7157f7347"}, "downloads": -1, "filename": "csvchk-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b640b97a664ae2dc87076ada11e5e822", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6235, "upload_time": "2020-04-13T22:37:18", "upload_time_iso_8601": "2020-04-13T22:37:18.606338Z", "url": "https://files.pythonhosted.org/packages/b0/f5/0a26b9d1da86e4cfbb1f51d36b68772815a3cff8f8aa7062a8a406ddc070/csvchk-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f91d0959aae55e7523f05a12a0479c9", "sha256": "2c8bf375f148515435223e38795e565fdd5cca2c6f889df6a93e1d17e4fb043d"}, "downloads": -1, "filename": "csvchk-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9f91d0959aae55e7523f05a12a0479c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5186, "upload_time": "2020-04-13T22:37:21", "upload_time_iso_8601": "2020-04-13T22:37:21.601167Z", "url": "https://files.pythonhosted.org/packages/c0/b1/1d196c3a3d3c83a2234998783a9ebe03c618693d897f278bf67cf4ac6459/csvchk-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:42 2020"}