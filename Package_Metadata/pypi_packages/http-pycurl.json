{"info": {"author": "pythonqi", "author_email": "pythonqi@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## http-pycurl Introduction\n\n**http-pycurl** repackaged the [pycurl](https://github.com/pycurl/pycurl) for better use.\n\nThanks to the author of the [requests](https://github.com/psf/requests).Some code comes from requests.\n\nThe API it exposes is similar to the **requests**\n\n### Installation\n\nYou should install pycurl first.\n\n```shell\npip install http-pycurl\n```\n\n### Quickstart\n\n#### Make a Request\n\nBegin by importing the http_pycurl module.\n\n```python\n>>> import http_pycurl as requests\n```\n\nCurrently only supports three request methods.\n\n**GET**\n\n```python\n>>> r = requests.get('https://httpbin.org/get')\n>>> r.status_code\n200\n>>> r.headers\n{'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Origin': '*', 'Content-Encoding': 'gzip', 'Content-Type': 'application/json', 'Date': 'Thu, 21 Nov 2019 05:56:51 GMT', 'Referrer-Policy': 'no-referrer-when-downgrade', 'Server': 'nginx', 'X-Content-Type-Options': 'nosniff', 'X-Frame-Options': 'DENY', 'X-XSS-Protection': '1; mode=block', 'Content-Length': '264', 'Connection': 'keep-alive'}\n>>> r.text\n'{\\n  \"args\": {}, \\n  \"headers\": {\\n    \"Accept\": \"*/*\", \\n    \"Accept-Encoding\": \"gzip, deflate\", \\n    \"Host\": \"httpbin.org\", \\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36\"\\n  }, \\n  \"origin\": \"xxx.xxx.xxx.xxx, xxx.xxx.xxx.xxx\", \\n  \"url\": \"https://httpbin.org/get\"\\n}\\n'\n>>> r.json()\n{'args': {}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36'}, 'origin': 'xxx.xxx.xxx.xxx, xxx.xxx.xxx.xxx', 'url': 'https://httpbin.org/get'}\n```\n\n**POST**\n\n```python\n>>> post_data = {\"foo\": \"bar\"}\n>>> r = requests.post(\"https://httpbin.org/post\", data=post_data)\n>>> r.json()\n{'args': {}, 'data': '', 'files': {}, 'form': {'foo': 'bar'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '7', 'Content-Type': 'application/x-www-form-urlencoded', 'Host': 'httpbin.org', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36'}, 'json': None, 'origin': 'xxx.xxx.xxx.xxx, xxx.xxx.xxx.xxx', 'url': 'https://httpbin.org/post'}\n>>>\n```\n\n**HEAD**\n\n```python\n>>> r = requests.head(\"https://httpbin.org/get\")\n>>> r.status_code\n200\n>>> r.text\n''\n```\n\n#### Passing Parameters In URLs\n\n```python\n>>> payload = {'key1': 'value1', 'key2': 'value2'}\n>>> r = requests.get('https://httpbin.org/get', params=payload)\n>>> r.url\n'https://httpbin.org/get?key1=value1&key2=value2'\n```\n\nYou can also pass a list of items as a value:\n\n```python\n>>> payload = {'key1': 'value1', 'key2': ['value2', 'value3']}\n>>> r = requests.get('https://httpbin.org/get', params=payload)\n>>> r.url\n'https://httpbin.org/get?key1=value1&key2=value2&key2=value3'\n```\n\n#### Custom Headers\n\nIf you\u2019d like to add HTTP headers to a request, simply pass in a `dict` to the `headers` parameter.\n\n```python\n>>> url = 'https://httpbin.org/get'\n>>> headers = {'user-agent': 'http_pycurl/1.0.0'}\n>>> r = requests.get(url, headers=headers)\n>>> r.json()\n{'args': {}, 'headers': {'Accept': '*/*', 'Host': 'httpbin.org', 'User-Agent': 'http_pycurl/1.0.0'}, 'origin': 'xxx.xxx.xxx.xxx, xxx.xxx.xxx.xxx', 'url': 'https://httpbin.org/get'}\n```\n\n#### Cookies\n\nTo send your own cookies to the server, you can use the `cookies` parameter:\n\n```python\n>>> url = 'https://httpbin.org/cookies'\n>>> cookies = dict(cookies_are='working')\n>>> r = requests.get(url, cookies=cookies)\n>>> r.text\n'{\"cookies\": {\"cookies_are\": \"working\"}}'\n```\n\n#### Timeouts\n\nYou can tell Requests to stop waiting for a response after a given number of seconds with the `timeout` parameter. The **timout** must be greater than 1 second.\n\n```python\n>>> url = 'https://httpbin.org/get'\n>>> r = requests.get(url, timeout=1)\nhttp_pycurl.exceptions.Timeout\n```\n\n#### Session\n\n**Session** saves different cookies according to the domain name.And, it automatically sends cookies based on the domain name.\n\n```python\n>>> s = requests.Session()\n>>> s.get('https://httpbin.org/cookies/set/sessioncookie/123456789')\n>>> r = s.get('https://httpbin.org/cookies')\n>>> print(r.text)\n'{\"cookies\": {\"sessioncookie\": \"123456789\"}}'\n```\n\n### Why did I develop this package\n\nWhen I crawled some websites, I found that they had a anit-spider by http message format.\n\nDue to **requests'** http message format, the content of the website could not be obtained correctly.\n\nHowever, **pycurl** can grab the right content. So I repackaged the **pycurl** for better use.\n\n### Contact Me\n\nIf you have any questions,you can contact me by the following email\uff1a\n\nluoyeqi@duoshoubang.cn\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pythonqi/http_pycurl", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "http-pycurl", "package_url": "https://pypi.org/project/http-pycurl/", "platform": "", "project_url": "https://pypi.org/project/http-pycurl/", "project_urls": {"Homepage": "https://github.com/pythonqi/http_pycurl"}, "release_url": "https://pypi.org/project/http-pycurl/1.0.1/", "requires_dist": null, "requires_python": ">=3.4", "summary": "http_pycurl rewraps pycurl.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>http-pycurl Introduction</h2>\n<p><strong>http-pycurl</strong> repackaged the <a href=\"https://github.com/pycurl/pycurl\" rel=\"nofollow\">pycurl</a> for better use.</p>\n<p>Thanks to the author of the <a href=\"https://github.com/psf/requests\" rel=\"nofollow\">requests</a>.Some code comes from requests.</p>\n<p>The API it exposes is similar to the <strong>requests</strong></p>\n<h3>Installation</h3>\n<p>You should install pycurl first.</p>\n<pre>pip install http-pycurl\n</pre>\n<h3>Quickstart</h3>\n<h4>Make a Request</h4>\n<p>Begin by importing the http_pycurl module.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">http_pycurl</span> <span class=\"k\">as</span> <span class=\"nn\">requests</span>\n</pre>\n<p>Currently only supports three request methods.</p>\n<p><strong>GET</strong></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/get'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">status_code</span>\n<span class=\"mi\">200</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">headers</span>\n<span class=\"p\">{</span><span class=\"s1\">'Access-Control-Allow-Credentials'</span><span class=\"p\">:</span> <span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"s1\">'Access-Control-Allow-Origin'</span><span class=\"p\">:</span> <span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"s1\">'Content-Encoding'</span><span class=\"p\">:</span> <span class=\"s1\">'gzip'</span><span class=\"p\">,</span> <span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'application/json'</span><span class=\"p\">,</span> <span class=\"s1\">'Date'</span><span class=\"p\">:</span> <span class=\"s1\">'Thu, 21 Nov 2019 05:56:51 GMT'</span><span class=\"p\">,</span> <span class=\"s1\">'Referrer-Policy'</span><span class=\"p\">:</span> <span class=\"s1\">'no-referrer-when-downgrade'</span><span class=\"p\">,</span> <span class=\"s1\">'Server'</span><span class=\"p\">:</span> <span class=\"s1\">'nginx'</span><span class=\"p\">,</span> <span class=\"s1\">'X-Content-Type-Options'</span><span class=\"p\">:</span> <span class=\"s1\">'nosniff'</span><span class=\"p\">,</span> <span class=\"s1\">'X-Frame-Options'</span><span class=\"p\">:</span> <span class=\"s1\">'DENY'</span><span class=\"p\">,</span> <span class=\"s1\">'X-XSS-Protection'</span><span class=\"p\">:</span> <span class=\"s1\">'1; mode=block'</span><span class=\"p\">,</span> <span class=\"s1\">'Content-Length'</span><span class=\"p\">:</span> <span class=\"s1\">'264'</span><span class=\"p\">,</span> <span class=\"s1\">'Connection'</span><span class=\"p\">:</span> <span class=\"s1\">'keep-alive'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'{</span><span class=\"se\">\\n</span><span class=\"s1\">  \"args\": </span><span class=\"si\">{}</span><span class=\"s1\">, </span><span class=\"se\">\\n</span><span class=\"s1\">  \"headers\": {</span><span class=\"se\">\\n</span><span class=\"s1\">    \"Accept\": \"*/*\", </span><span class=\"se\">\\n</span><span class=\"s1\">    \"Accept-Encoding\": \"gzip, deflate\", </span><span class=\"se\">\\n</span><span class=\"s1\">    \"Host\": \"httpbin.org\", </span><span class=\"se\">\\n</span><span class=\"s1\">    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36\"</span><span class=\"se\">\\n</span><span class=\"s1\">  }, </span><span class=\"se\">\\n</span><span class=\"s1\">  \"origin\": \"xxx.xxx.xxx.xxx, xxx.xxx.xxx.xxx\", </span><span class=\"se\">\\n</span><span class=\"s1\">  \"url\": \"https://httpbin.org/get\"</span><span class=\"se\">\\n</span><span class=\"s1\">}</span><span class=\"se\">\\n</span><span class=\"s1\">'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'args'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">'headers'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'Accept'</span><span class=\"p\">:</span> <span class=\"s1\">'*/*'</span><span class=\"p\">,</span> <span class=\"s1\">'Accept-Encoding'</span><span class=\"p\">:</span> <span class=\"s1\">'gzip, deflate'</span><span class=\"p\">,</span> <span class=\"s1\">'Host'</span><span class=\"p\">:</span> <span class=\"s1\">'httpbin.org'</span><span class=\"p\">,</span> <span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span> <span class=\"s1\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36'</span><span class=\"p\">},</span> <span class=\"s1\">'origin'</span><span class=\"p\">:</span> <span class=\"s1\">'xxx.xxx.xxx.xxx, xxx.xxx.xxx.xxx'</span><span class=\"p\">,</span> <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://httpbin.org/get'</span><span class=\"p\">}</span>\n</pre>\n<p><strong>POST</strong></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">post_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">\"https://httpbin.org/post\"</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">post_data</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'args'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"s1\">'files'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">'form'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"s1\">'bar'</span><span class=\"p\">},</span> <span class=\"s1\">'headers'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'Accept'</span><span class=\"p\">:</span> <span class=\"s1\">'*/*'</span><span class=\"p\">,</span> <span class=\"s1\">'Accept-Encoding'</span><span class=\"p\">:</span> <span class=\"s1\">'gzip, deflate'</span><span class=\"p\">,</span> <span class=\"s1\">'Content-Length'</span><span class=\"p\">:</span> <span class=\"s1\">'7'</span><span class=\"p\">,</span> <span class=\"s1\">'Content-Type'</span><span class=\"p\">:</span> <span class=\"s1\">'application/x-www-form-urlencoded'</span><span class=\"p\">,</span> <span class=\"s1\">'Host'</span><span class=\"p\">:</span> <span class=\"s1\">'httpbin.org'</span><span class=\"p\">,</span> <span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span> <span class=\"s1\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36'</span><span class=\"p\">},</span> <span class=\"s1\">'json'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">'origin'</span><span class=\"p\">:</span> <span class=\"s1\">'xxx.xxx.xxx.xxx, xxx.xxx.xxx.xxx'</span><span class=\"p\">,</span> <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://httpbin.org/post'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p><strong>HEAD</strong></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">(</span><span class=\"s2\">\"https://httpbin.org/get\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">status_code</span>\n<span class=\"mi\">200</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">''</span>\n</pre>\n<h4>Passing Parameters In URLs</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'key1'</span><span class=\"p\">:</span> <span class=\"s1\">'value1'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">:</span> <span class=\"s1\">'value2'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/get'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">url</span>\n<span class=\"s1\">'https://httpbin.org/get?key1=value1&amp;key2=value2'</span>\n</pre>\n<p>You can also pass a list of items as a value:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'key1'</span><span class=\"p\">:</span> <span class=\"s1\">'value1'</span><span class=\"p\">,</span> <span class=\"s1\">'key2'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'value2'</span><span class=\"p\">,</span> <span class=\"s1\">'value3'</span><span class=\"p\">]}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/get'</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">url</span>\n<span class=\"s1\">'https://httpbin.org/get?key1=value1&amp;key2=value2&amp;key2=value3'</span>\n</pre>\n<h4>Custom Headers</h4>\n<p>If you\u2019d like to add HTTP headers to a request, simply pass in a <code>dict</code> to the <code>headers</code> parameter.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://httpbin.org/get'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'user-agent'</span><span class=\"p\">:</span> <span class=\"s1\">'http_pycurl/1.0.0'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n<span class=\"p\">{</span><span class=\"s1\">'args'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">'headers'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'Accept'</span><span class=\"p\">:</span> <span class=\"s1\">'*/*'</span><span class=\"p\">,</span> <span class=\"s1\">'Host'</span><span class=\"p\">:</span> <span class=\"s1\">'httpbin.org'</span><span class=\"p\">,</span> <span class=\"s1\">'User-Agent'</span><span class=\"p\">:</span> <span class=\"s1\">'http_pycurl/1.0.0'</span><span class=\"p\">},</span> <span class=\"s1\">'origin'</span><span class=\"p\">:</span> <span class=\"s1\">'xxx.xxx.xxx.xxx, xxx.xxx.xxx.xxx'</span><span class=\"p\">,</span> <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"s1\">'https://httpbin.org/get'</span><span class=\"p\">}</span>\n</pre>\n<h4>Cookies</h4>\n<p>To send your own cookies to the server, you can use the <code>cookies</code> parameter:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://httpbin.org/cookies'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cookies</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">cookies_are</span><span class=\"o\">=</span><span class=\"s1\">'working'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">cookies</span><span class=\"o\">=</span><span class=\"n\">cookies</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"s1\">'{\"cookies\": {\"cookies_are\": \"working\"}}'</span>\n</pre>\n<h4>Timeouts</h4>\n<p>You can tell Requests to stop waiting for a response after a given number of seconds with the <code>timeout</code> parameter. The <strong>timout</strong> must be greater than 1 second.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://httpbin.org/get'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">http_pycurl</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">Timeout</span>\n</pre>\n<h4>Session</h4>\n<p><strong>Session</strong> saves different cookies according to the domain name.And, it automatically sends cookies based on the domain name.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/cookies/set/sessioncookie/123456789'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'https://httpbin.org/cookies'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n<span class=\"s1\">'{\"cookies\": {\"sessioncookie\": \"123456789\"}}'</span>\n</pre>\n<h3>Why did I develop this package</h3>\n<p>When I crawled some websites, I found that they had a anit-spider by http message format.</p>\n<p>Due to <strong>requests'</strong> http message format, the content of the website could not be obtained correctly.</p>\n<p>However, <strong>pycurl</strong> can grab the right content. So I repackaged the <strong>pycurl</strong> for better use.</p>\n<h3>Contact Me</h3>\n<p>If you have any questions,you can contact me by the following email\uff1a</p>\n<p><a href=\"mailto:luoyeqi@duoshoubang.cn\">luoyeqi@duoshoubang.cn</a></p>\n\n          </div>"}, "last_serial": 6198799, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "ff4e8f7dde7fedbac97ddd5ebbef225d", "sha256": "9ecd9b487ae62602281a2b20de1ef0a0c0c9a0e0e931be003ee38fa555b603c4"}, "downloads": -1, "filename": "http_pycurl-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ff4e8f7dde7fedbac97ddd5ebbef225d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 11103, "upload_time": "2019-11-21T09:14:22", "upload_time_iso_8601": "2019-11-21T09:14:22.274430Z", "url": "https://files.pythonhosted.org/packages/29/1f/4249fe3eea57ad98685a40e4a79ed045dc6d736acfeaa50971cbad229a90/http_pycurl-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e0fde631d8814799c9a6b66c55a739c", "sha256": "f2e201e30fc39ced91df01f6a78319e353961b7b0409780c5a7abc0712816ce5"}, "downloads": -1, "filename": "http_pycurl-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0e0fde631d8814799c9a6b66c55a739c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8597, "upload_time": "2019-11-21T09:14:25", "upload_time_iso_8601": "2019-11-21T09:14:25.543250Z", "url": "https://files.pythonhosted.org/packages/c5/5a/139c1356fdd41cfb330d0f67f6341064dd9f488a7a3340ad342f3ea60a7d/http_pycurl-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "0827f7eba8f6f97cdd5156b73e443b08", "sha256": "9e6e29f8eb16bebf0a2035b4fc88c2166ae2016855ed1dcb08246a2512556f46"}, "downloads": -1, "filename": "http_pycurl-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0827f7eba8f6f97cdd5156b73e443b08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 11126, "upload_time": "2019-11-26T02:38:21", "upload_time_iso_8601": "2019-11-26T02:38:21.429652Z", "url": "https://files.pythonhosted.org/packages/b1/34/ebe0b496b65e31c2f9283faa0a8072876bdc1ea026e5fdb120da8da6315c/http_pycurl-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90bbf3abc24d79c4c34edca712b9c0fb", "sha256": "8c50e801aed10a8b88d4d8376ea552d31eb03a3d1d037d4a85d4654e5457df65"}, "downloads": -1, "filename": "http_pycurl-1.0.1.tar.gz", "has_sig": false, "md5_digest": "90bbf3abc24d79c4c34edca712b9c0fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8616, "upload_time": "2019-11-26T02:38:23", "upload_time_iso_8601": "2019-11-26T02:38:23.181608Z", "url": "https://files.pythonhosted.org/packages/17/a5/e1e82b6b209ba59c94b2974ae05f5c16b7920d90962111fdf79edb815a91/http_pycurl-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0827f7eba8f6f97cdd5156b73e443b08", "sha256": "9e6e29f8eb16bebf0a2035b4fc88c2166ae2016855ed1dcb08246a2512556f46"}, "downloads": -1, "filename": "http_pycurl-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0827f7eba8f6f97cdd5156b73e443b08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 11126, "upload_time": "2019-11-26T02:38:21", "upload_time_iso_8601": "2019-11-26T02:38:21.429652Z", "url": "https://files.pythonhosted.org/packages/b1/34/ebe0b496b65e31c2f9283faa0a8072876bdc1ea026e5fdb120da8da6315c/http_pycurl-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90bbf3abc24d79c4c34edca712b9c0fb", "sha256": "8c50e801aed10a8b88d4d8376ea552d31eb03a3d1d037d4a85d4654e5457df65"}, "downloads": -1, "filename": "http_pycurl-1.0.1.tar.gz", "has_sig": false, "md5_digest": "90bbf3abc24d79c4c34edca712b9c0fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8616, "upload_time": "2019-11-26T02:38:23", "upload_time_iso_8601": "2019-11-26T02:38:23.181608Z", "url": "https://files.pythonhosted.org/packages/17/a5/e1e82b6b209ba59c94b2974ae05f5c16b7920d90962111fdf79edb815a91/http_pycurl-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:05 2020"}