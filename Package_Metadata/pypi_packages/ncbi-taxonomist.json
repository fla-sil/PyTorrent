{"info": {"author": "Jan P Buchmann", "author_email": "jpb@members.fsf.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Information Analysis"], "description": "# Readme\n\n## Status\n\nncbi-taxonomist is still under development. The basic operations are working\nand unlikely to change in the near future. Metadata querying is still in\ndevelopment.\n\n## Synopsis\n\nncbi-taxonomist handles and manages phylogenetic data from NCBI. It can:\n  - map between taxids and names\n  - resolve lineages\n  - store obtained taxa and their data locally in a SQLite database\n  - group taxa into user defined groups (locally)\n\ntaxonomist has several simple operations, e.g. map or import, which work\ntogether using pipes, e.g. to populate a database, map will fetch data from\nEntrez and print it to STDOUT while import reads the STDIN to populate a local\ndatabase. Taxonomic information is obtained from Entrez, but a predownloaded\ndatabase can be imported as well.\n\nThe true strength is to find and link related metadata from other Entrez\ndatabases, e.g. fetching data for metagenomic data-sets for specific or\ndiverse group of organisms. It can store phylogenetic groups, e.g. all taxa\nfor a specific project, in a local database.\n\n## Install\n\n```$pip install ncbi-taxonomist --user```\n\nThis will fetch and install `ncbi-taxonomist` and its required dependencies\n(see below) use for an user (no `root` required)\n\n### Dependencies\n\n`ncbi-taxonomist` has two dependencies:\n\n  - `entrezpy`: to handle remote requests to NCBI's Entrez databases\n\n    - https://gitlab.com/ncbipy/entrezpy.git\n    - https://pypi.org/project/entrezpy/\n    - https://doi.org/10.1093/bioinformatics/btz385\n\n\n  - `taxnompy`: to parse taxonomic XML files from NCBI\n    - https://gitlab.com/ncbipy/taxonompy.git\n    - https://pypi.org/project/taxonompy/\n\nThese are libraries maintained by myself and rely solely on the Python standard\nlibrary. Therefore, `ncbi-taxonomist` is less prone to suffer\n[dependency hell](https://en.wikipedia.org/wiki/Dependency_hell).\n\n## Usage\n\n**`ncbi-taxonomist <command> <options>`**\n\n### Available commands\n\ncall without any command or option  to  get an overview of available commands.\n\n`$ ncbi-taxonomist`\n\n### Command help\n\nTo get the usage for a specific command, use:\n\n`$ ncbi-taxonomist <command> -h`\n\nFor example, to see available options for the command `map`, use:\n\n`$ ncbi-taxonomist map -h`.\n\n## Output\n\n`ncbi-taxonist` uses `JSON` as main output because I have no clue what you want\nto do with the result. `JSON` allows to use or write quick formatter or viewers\nand read the data directly from `STDIN`.\n\n[`jq`](https://stedolan.github.io/jq/) is an excellent tool to filter and\nmanipulate `JSON` data.\n\nAn example how to extract attributes from the `ncbi-taxonomist map` command\n`JSON` output:\n\n```\nncbi-taxonomist map -t 2 -n human -r | # ncbi-taxonomist map step\njq -r '[.taxon.taxon_id,.taxon.rank, ( .taxon.names | to_entries[] | select(.value==\"scientific_name\").key) ]  |   @csv'\n       ^  ^               ^          ^              ^              ^                                        ^  ^   ^\n       |  |               |          |            jq pipe        jq pipe                                    |  |   |\n       |  +-------+-------+          +----------------------------------------------------------------------+  jq  |\n       |  Add taxon_id and                Extract scientific_name from taxon names and add to array         | pipe |\n       |  rank attribute to                                                                                 |     jq csv output\n       |         array                                                                                      |     from array\n       |                                                                                                    |\n       `- create array for csv output for each JSON output line---------------------------------------------+\n```\n\nFor more `jq` help, please refer to:\n\n  - [`jq` manual](https://stedolan.github.io/jq/manual/)\n  - [Matthew Lincoln, \"Reshaping JSON with jq,\" The Programming Historian 5 (2016)](https://programminghistorian.org/en/lessons/json-and-jq)\n\n\n## Commands\n\n### map\n\nmap taxonomic information from Entrez phylogeny server or loading a downloaded\nNCBI Taxonomy database into a local database. Returns taxonomic nodes in `JSON`.\n\n#### Map taxid and names remotely\n\n`ncbi-taxonomist map -t 2 -n human -r`\n\n#### Map taxid and names from local database\n\n`ncbi-taxonomist map -t 2 -n human -db taxa.db`\n\n#### Map sequence accessions\n\n`ncbi-taxonomist map -t 2 -n human -db taxa.db`\n\n#### Format specific filed from map output to csv using `jq`\n\n- Extract  taxid, rank, and scientific name from `map` `JSON` output using `jq`:\n\n```\nncbi-taxonomist map -t 2 -n human -r | \\\njq -r '[.taxon.taxon_id,.taxon.rank,(.taxon.names|to_entries[]|select(.value==\"scientific_name\").key)]|@csv'\n```\n\n### import\n\nImporting stores taxa in a local SQLite database. The taxa are fetched remotely.\n\n#### Import taxa\n\n```\nncbi-taxonomist map -t 2 -n human -r  | ncbi-taxonomist import -db testdb.sql\n```\n\n### Resolve\n\nResolves lineages for names and taxids. The result is a `JSON` array with the taxa\ndefining the lineage in ascending order. This guarnatees the query is the  first\nelement in the array.\n\nFurther extraction can be done via a script reading `JSON` arrays line-be-line or\nvia othe tools, e.g. `jq` [REF]\n\n#### Resolve and format via `jq`\n\n```\nncbi_taxonomist resolve  -n man  -db testdb2.sql |  \\\njq -r  '[.[] |  .names.scientific_name ]| @tsv'\n\n```\n\n#### Resolve accessions remotely\n\n```\nncbi-taxonomist map  -a MH842226.1 NQWZ01000003.1 -r | ncbi-taxonomist resolve -m -r\n\n```\n### Extract\n\nExtract nodes from a specified superkingdom and subtree\nWIP\n\n### Group **WIP**\n\nCollect NCBI taxids into a group for later use\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/janpb/ncbi-taxonomist.git", "keywords": "bioinformatics NCBI taxonomy", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "ncbi-taxonomist", "package_url": "https://pypi.org/project/ncbi-taxonomist/", "platform": "", "project_url": "https://pypi.org/project/ncbi-taxonomist/", "project_urls": {"Code": "https://gitlab.com/janpb/ncbi-taxonomist.git", "Doc": "https://ncbi-taxonomist.readthedocs.io/", "Homepage": "https://gitlab.com/janpb/ncbi-taxonomist.git"}, "release_url": "https://pypi.org/project/ncbi-taxonomist/0.5.0.dev170/", "requires_dist": ["entrezpy (>=2.0.0)", "taxonompy (==1.0.0)"], "requires_python": ">=3.6", "summary": "Toolbox to manage NCBI taxonomical data", "version": "0.5.0.dev170", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Readme</h1>\n<h2>Status</h2>\n<p>ncbi-taxonomist is still under development. The basic operations are working\nand unlikely to change in the near future. Metadata querying is still in\ndevelopment.</p>\n<h2>Synopsis</h2>\n<p>ncbi-taxonomist handles and manages phylogenetic data from NCBI. It can:</p>\n<ul>\n<li>map between taxids and names</li>\n<li>resolve lineages</li>\n<li>store obtained taxa and their data locally in a SQLite database</li>\n<li>group taxa into user defined groups (locally)</li>\n</ul>\n<p>taxonomist has several simple operations, e.g. map or import, which work\ntogether using pipes, e.g. to populate a database, map will fetch data from\nEntrez and print it to STDOUT while import reads the STDIN to populate a local\ndatabase. Taxonomic information is obtained from Entrez, but a predownloaded\ndatabase can be imported as well.</p>\n<p>The true strength is to find and link related metadata from other Entrez\ndatabases, e.g. fetching data for metagenomic data-sets for specific or\ndiverse group of organisms. It can store phylogenetic groups, e.g. all taxa\nfor a specific project, in a local database.</p>\n<h2>Install</h2>\n<p><code>$pip install ncbi-taxonomist --user</code></p>\n<p>This will fetch and install <code>ncbi-taxonomist</code> and its required dependencies\n(see below) use for an user (no <code>root</code> required)</p>\n<h3>Dependencies</h3>\n<p><code>ncbi-taxonomist</code> has two dependencies:</p>\n<ul>\n<li>\n<p><code>entrezpy</code>: to handle remote requests to NCBI's Entrez databases</p>\n<ul>\n<li><a href=\"https://gitlab.com/ncbipy/entrezpy.git\" rel=\"nofollow\">https://gitlab.com/ncbipy/entrezpy.git</a></li>\n<li><a href=\"https://pypi.org/project/entrezpy/\" rel=\"nofollow\">https://pypi.org/project/entrezpy/</a></li>\n<li><a href=\"https://doi.org/10.1093/bioinformatics/btz385\" rel=\"nofollow\">https://doi.org/10.1093/bioinformatics/btz385</a></li>\n</ul>\n</li>\n<li>\n<p><code>taxnompy</code>: to parse taxonomic XML files from NCBI</p>\n<ul>\n<li><a href=\"https://gitlab.com/ncbipy/taxonompy.git\" rel=\"nofollow\">https://gitlab.com/ncbipy/taxonompy.git</a></li>\n<li><a href=\"https://pypi.org/project/taxonompy/\" rel=\"nofollow\">https://pypi.org/project/taxonompy/</a></li>\n</ul>\n</li>\n</ul>\n<p>These are libraries maintained by myself and rely solely on the Python standard\nlibrary. Therefore, <code>ncbi-taxonomist</code> is less prone to suffer\n<a href=\"https://en.wikipedia.org/wiki/Dependency_hell\" rel=\"nofollow\">dependency hell</a>.</p>\n<h2>Usage</h2>\n<p><strong><code>ncbi-taxonomist &lt;command&gt; &lt;options&gt;</code></strong></p>\n<h3>Available commands</h3>\n<p>call without any command or option  to  get an overview of available commands.</p>\n<p><code>$ ncbi-taxonomist</code></p>\n<h3>Command help</h3>\n<p>To get the usage for a specific command, use:</p>\n<p><code>$ ncbi-taxonomist &lt;command&gt; -h</code></p>\n<p>For example, to see available options for the command <code>map</code>, use:</p>\n<p><code>$ ncbi-taxonomist map -h</code>.</p>\n<h2>Output</h2>\n<p><code>ncbi-taxonist</code> uses <code>JSON</code> as main output because I have no clue what you want\nto do with the result. <code>JSON</code> allows to use or write quick formatter or viewers\nand read the data directly from <code>STDIN</code>.</p>\n<p><a href=\"https://stedolan.github.io/jq/\" rel=\"nofollow\"><code>jq</code></a> is an excellent tool to filter and\nmanipulate <code>JSON</code> data.</p>\n<p>An example how to extract attributes from the <code>ncbi-taxonomist map</code> command\n<code>JSON</code> output:</p>\n<pre><code>ncbi-taxonomist map -t 2 -n human -r | # ncbi-taxonomist map step\njq -r '[.taxon.taxon_id,.taxon.rank, ( .taxon.names | to_entries[] | select(.value==\"scientific_name\").key) ]  |   @csv'\n       ^  ^               ^          ^              ^              ^                                        ^  ^   ^\n       |  |               |          |            jq pipe        jq pipe                                    |  |   |\n       |  +-------+-------+          +----------------------------------------------------------------------+  jq  |\n       |  Add taxon_id and                Extract scientific_name from taxon names and add to array         | pipe |\n       |  rank attribute to                                                                                 |     jq csv output\n       |         array                                                                                      |     from array\n       |                                                                                                    |\n       `- create array for csv output for each JSON output line---------------------------------------------+\n</code></pre>\n<p>For more <code>jq</code> help, please refer to:</p>\n<ul>\n<li><a href=\"https://stedolan.github.io/jq/manual/\" rel=\"nofollow\"><code>jq</code> manual</a></li>\n<li><a href=\"https://programminghistorian.org/en/lessons/json-and-jq\" rel=\"nofollow\">Matthew Lincoln, \"Reshaping JSON with jq,\" The Programming Historian 5 (2016)</a></li>\n</ul>\n<h2>Commands</h2>\n<h3>map</h3>\n<p>map taxonomic information from Entrez phylogeny server or loading a downloaded\nNCBI Taxonomy database into a local database. Returns taxonomic nodes in <code>JSON</code>.</p>\n<h4>Map taxid and names remotely</h4>\n<p><code>ncbi-taxonomist map -t 2 -n human -r</code></p>\n<h4>Map taxid and names from local database</h4>\n<p><code>ncbi-taxonomist map -t 2 -n human -db taxa.db</code></p>\n<h4>Map sequence accessions</h4>\n<p><code>ncbi-taxonomist map -t 2 -n human -db taxa.db</code></p>\n<h4>Format specific filed from map output to csv using <code>jq</code></h4>\n<ul>\n<li>Extract  taxid, rank, and scientific name from <code>map</code> <code>JSON</code> output using <code>jq</code>:</li>\n</ul>\n<pre><code>ncbi-taxonomist map -t 2 -n human -r | \\\njq -r '[.taxon.taxon_id,.taxon.rank,(.taxon.names|to_entries[]|select(.value==\"scientific_name\").key)]|@csv'\n</code></pre>\n<h3>import</h3>\n<p>Importing stores taxa in a local SQLite database. The taxa are fetched remotely.</p>\n<h4>Import taxa</h4>\n<pre><code>ncbi-taxonomist map -t 2 -n human -r  | ncbi-taxonomist import -db testdb.sql\n</code></pre>\n<h3>Resolve</h3>\n<p>Resolves lineages for names and taxids. The result is a <code>JSON</code> array with the taxa\ndefining the lineage in ascending order. This guarnatees the query is the  first\nelement in the array.</p>\n<p>Further extraction can be done via a script reading <code>JSON</code> arrays line-be-line or\nvia othe tools, e.g. <code>jq</code> [REF]</p>\n<h4>Resolve and format via <code>jq</code></h4>\n<pre><code>ncbi_taxonomist resolve  -n man  -db testdb2.sql |  \\\njq -r  '[.[] |  .names.scientific_name ]| @tsv'\n\n</code></pre>\n<h4>Resolve accessions remotely</h4>\n<pre><code>ncbi-taxonomist map  -a MH842226.1 NQWZ01000003.1 -r | ncbi-taxonomist resolve -m -r\n\n</code></pre>\n<h3>Extract</h3>\n<p>Extract nodes from a specified superkingdom and subtree\nWIP</p>\n<h3>Group <strong>WIP</strong></h3>\n<p>Collect NCBI taxids into a group for later use</p>\n\n          </div>"}, "last_serial": 6530334, "releases": {"0.3.0.dev128": [{"comment_text": "", "digests": {"md5": "2ad6cfbaa4f12f872e7d1a252057b6ed", "sha256": "a96553cba3cd82bcaadc2d9fa7ed77c7b049d40fc09e7e6691e29d092fc03735"}, "downloads": -1, "filename": "ncbi_taxonomist-0.3.0.dev128-py3-none-any.whl", "has_sig": false, "md5_digest": "2ad6cfbaa4f12f872e7d1a252057b6ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 48957, "upload_time": "2020-01-17T03:36:52", "upload_time_iso_8601": "2020-01-17T03:36:52.966093Z", "url": "https://files.pythonhosted.org/packages/21/2d/51a7c494a30cad0e94fa0a00f77fc6c70029aff1083771c35541bab05c9b/ncbi_taxonomist-0.3.0.dev128-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a4945b611c59a6a2bad520ac0dc65f3", "sha256": "cf06511d9c2edd70e9472d2591e7c0cf383759b0a4307950eb970a09b4d4fbd5"}, "downloads": -1, "filename": "ncbi-taxonomist-0.3.0.dev128.tar.gz", "has_sig": false, "md5_digest": "4a4945b611c59a6a2bad520ac0dc65f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19756, "upload_time": "2020-01-17T03:36:55", "upload_time_iso_8601": "2020-01-17T03:36:55.974903Z", "url": "https://files.pythonhosted.org/packages/1d/05/9c3a31bbeb19ddceaddf8e9556c07271cc0e19965b54263e7ce69f5d7b77/ncbi-taxonomist-0.3.0.dev128.tar.gz", "yanked": false}], "0.5.0.dev170": [{"comment_text": "", "digests": {"md5": "aec3ef2660db595193e8d9efaeb1748d", "sha256": "73a59299a2030130e8f49f18146f76c63bc6421a749c1a245f95c2373eeab3b8"}, "downloads": -1, "filename": "ncbi_taxonomist-0.5.0.dev170-py3-none-any.whl", "has_sig": false, "md5_digest": "aec3ef2660db595193e8d9efaeb1748d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53906, "upload_time": "2020-01-28T05:28:31", "upload_time_iso_8601": "2020-01-28T05:28:31.858935Z", "url": "https://files.pythonhosted.org/packages/7c/38/1e59749d17cbaaf5b228d564b7b921415ede156801c461f4aaaa7cc90df2/ncbi_taxonomist-0.5.0.dev170-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "045ce4c95b826cebd61acd1669fc2327", "sha256": "0231dda62650f7b5a301bc782e8ff23f6729006868ca503d32f793bc0ca93f58"}, "downloads": -1, "filename": "ncbi-taxonomist-0.5.0.dev170.tar.gz", "has_sig": false, "md5_digest": "045ce4c95b826cebd61acd1669fc2327", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23303, "upload_time": "2020-01-28T05:28:33", "upload_time_iso_8601": "2020-01-28T05:28:33.759038Z", "url": "https://files.pythonhosted.org/packages/12/1b/5ca896a59de75edf0dc0d2f2e2d8d29283268651bfe13384bf3d32880f7e/ncbi-taxonomist-0.5.0.dev170.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aec3ef2660db595193e8d9efaeb1748d", "sha256": "73a59299a2030130e8f49f18146f76c63bc6421a749c1a245f95c2373eeab3b8"}, "downloads": -1, "filename": "ncbi_taxonomist-0.5.0.dev170-py3-none-any.whl", "has_sig": false, "md5_digest": "aec3ef2660db595193e8d9efaeb1748d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 53906, "upload_time": "2020-01-28T05:28:31", "upload_time_iso_8601": "2020-01-28T05:28:31.858935Z", "url": "https://files.pythonhosted.org/packages/7c/38/1e59749d17cbaaf5b228d564b7b921415ede156801c461f4aaaa7cc90df2/ncbi_taxonomist-0.5.0.dev170-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "045ce4c95b826cebd61acd1669fc2327", "sha256": "0231dda62650f7b5a301bc782e8ff23f6729006868ca503d32f793bc0ca93f58"}, "downloads": -1, "filename": "ncbi-taxonomist-0.5.0.dev170.tar.gz", "has_sig": false, "md5_digest": "045ce4c95b826cebd61acd1669fc2327", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23303, "upload_time": "2020-01-28T05:28:33", "upload_time_iso_8601": "2020-01-28T05:28:33.759038Z", "url": "https://files.pythonhosted.org/packages/12/1b/5ca896a59de75edf0dc0d2f2e2d8d29283268651bfe13384bf3d32880f7e/ncbi-taxonomist-0.5.0.dev170.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:49 2020"}