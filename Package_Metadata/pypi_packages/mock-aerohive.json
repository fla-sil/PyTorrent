{"info": {"author": "Ryan Leonard", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Topic :: Internet", "Topic :: Software Development :: Testing :: Mocking"], "description": "Mock Aerohive\n-------------\n.. image:: https://img.shields.io/pypi/v/mock-aerohive.svg\n  :target: https://pypi.org/project/mock-aerohive/\n\n.. image:: https://gitlab.com/pencot/mock_aerohive/badges/master/pipeline.svg\n  :target: https://github.com/pencot/mock_aerohive/commits/master\n\n.. image:: https://codecov.io/gh/pencot/mock_aerohive/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/pencot/mock_aerohive\n\nA mock SSH server emulating Aerohive devices.\n\nInstall::\n\n  pip install mock_aerohive\n\nBasic usage::\n\n  from mock_aerohive import MockAerohive\n\n  aerohive = MockAerohive()\n  # You must add at least 1 user before starting the server!  (Library limitation)\n  aerohive.addUser(\"admin\", \"aerohive\")\n\n  port = aerohive.run(\"127.0.0.1\")\n  # Or provide a port: aerohive.run(\"127.0.0.1\", 2222)\n\n  aerohive.stop() # Stop a single server.\n\n  aerohive.stopAll() # Terminate the background thread running all SSH servers (otherwise the process will hang)\n                     # Once you stop the background thread, you may not start another server (with 'run') -\n                     # another library limitation.\n\nFor an example of a py.test fixture that automates starting and stopping servers\n(which cleans up servers at the end of the testing session, but allows multiple servers to be run),\nsee ``test/util/MockAerohiveFixture.py``, and ``test/integration/auth/test_addUser_and_login.py`` for an example.\n\nVersioning\n^^^^^^^^^^\n\nThis package uses semantic versioning.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pencot/mock_aerohive", "keywords": "aerohive ssh mock server", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mock-aerohive", "package_url": "https://pypi.org/project/mock-aerohive/", "platform": "", "project_url": "https://pypi.org/project/mock-aerohive/", "project_urls": {"Homepage": "https://github.com/pencot/mock_aerohive"}, "release_url": "https://pypi.org/project/mock-aerohive/0.0.2/", "requires_dist": ["mockssh (>=1.4.5,<2)"], "requires_python": "", "summary": "A mock SSH server emulating Aerohive devices", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.org/project/mock-aerohive/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/mock-aerohive.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60de32e772593ad952e9e5304e290eb356b860fb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6f636b2d6165726f686976652e737667\"></a>\n<a href=\"https://github.com/pencot/mock_aerohive/commits/master\" rel=\"nofollow\"><img alt=\"https://gitlab.com/pencot/mock_aerohive/badges/master/pipeline.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7222307dc2f5bddd3af496baf5f1f295cb7d37c/68747470733a2f2f6769746c61622e636f6d2f70656e636f742f6d6f636b5f6165726f686976652f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://codecov.io/gh/pencot/mock_aerohive\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/pencot/mock_aerohive/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66a04b514c8a201de48b163838b63937bd259b47/68747470733a2f2f636f6465636f762e696f2f67682f70656e636f742f6d6f636b5f6165726f686976652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>A mock SSH server emulating Aerohive devices.</p>\n<p>Install:</p>\n<pre>pip install mock_aerohive\n</pre>\n<p>Basic usage:</p>\n<pre>from mock_aerohive import MockAerohive\n\naerohive = MockAerohive()\n# You must add at least 1 user before starting the server!  (Library limitation)\naerohive.addUser(\"admin\", \"aerohive\")\n\nport = aerohive.run(\"127.0.0.1\")\n# Or provide a port: aerohive.run(\"127.0.0.1\", 2222)\n\naerohive.stop() # Stop a single server.\n\naerohive.stopAll() # Terminate the background thread running all SSH servers (otherwise the process will hang)\n                   # Once you stop the background thread, you may not start another server (with 'run') -\n                   # another library limitation.\n</pre>\n<p>For an example of a py.test fixture that automates starting and stopping servers\n(which cleans up servers at the end of the testing session, but allows multiple servers to be run),\nsee <tt>test/util/MockAerohiveFixture.py</tt>, and <tt>test/integration/auth/test_addUser_and_login.py</tt> for an example.</p>\n<div id=\"versioning\">\n<h2>Versioning</h2>\n<p>This package uses semantic versioning.</p>\n</div>\n\n          </div>"}, "last_serial": 3971651, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "fefd464eef1785e3708e356548c85eb2", "sha256": "70c5ea09ea2ca41da9006b6ceeb6fcb6632922f16062cde8b309451eb80390b3"}, "downloads": -1, "filename": "mock_aerohive-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "fefd464eef1785e3708e356548c85eb2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5483, "upload_time": "2018-06-17T18:43:39", "upload_time_iso_8601": "2018-06-17T18:43:39.818095Z", "url": "https://files.pythonhosted.org/packages/48/9c/6361a919004a3b86e79c6a41a25839d397dc77feed2f262bc011a4664066/mock_aerohive-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ace759c6cf5aa27932ecc98acca5f411", "sha256": "d40a24ada4c9f74121c530ac2ec8f661cf7f1a69e36ac4b4154e91452390db3e"}, "downloads": -1, "filename": "mock_aerohive-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ace759c6cf5aa27932ecc98acca5f411", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3549, "upload_time": "2018-06-17T18:43:41", "upload_time_iso_8601": "2018-06-17T18:43:41.028839Z", "url": "https://files.pythonhosted.org/packages/56/c0/1d2283f4b233d5028bf35ddc59d151bbc656c9ad95776e6509b1b65a4e4d/mock_aerohive-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fefd464eef1785e3708e356548c85eb2", "sha256": "70c5ea09ea2ca41da9006b6ceeb6fcb6632922f16062cde8b309451eb80390b3"}, "downloads": -1, "filename": "mock_aerohive-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "fefd464eef1785e3708e356548c85eb2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5483, "upload_time": "2018-06-17T18:43:39", "upload_time_iso_8601": "2018-06-17T18:43:39.818095Z", "url": "https://files.pythonhosted.org/packages/48/9c/6361a919004a3b86e79c6a41a25839d397dc77feed2f262bc011a4664066/mock_aerohive-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ace759c6cf5aa27932ecc98acca5f411", "sha256": "d40a24ada4c9f74121c530ac2ec8f661cf7f1a69e36ac4b4154e91452390db3e"}, "downloads": -1, "filename": "mock_aerohive-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ace759c6cf5aa27932ecc98acca5f411", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3549, "upload_time": "2018-06-17T18:43:41", "upload_time_iso_8601": "2018-06-17T18:43:41.028839Z", "url": "https://files.pythonhosted.org/packages/56/c0/1d2283f4b233d5028bf35ddc59d151bbc656c9ad95776e6509b1b65a4e4d/mock_aerohive-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:04 2020"}