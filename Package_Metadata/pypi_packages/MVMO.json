{"info": {"author": "Digvijay Gusain", "author_email": "d.gusain@tudelft.nl", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "## Mean Variance Mapping Optimization Algorithm\nMVMO is a Python package to perform heuristic optimization on constrained and unconsrained optimization problems whose convexity and/or linearity may not be fully known. It is based on swarm optimization principles, and uses a continuously updated mean and variance of best solutions from optimization process. Note: since this is a heuristic algorithm, it does not provide the optimal solution, but near optimal solution. This is however done in a very quick time compared to traditional optimization solvers.\n\n## Installation\nMVMO can be installed from PyPI using:\n\n```\npip install MVMO\n```\nMVMO requires numpy and pandas to work.\n\n## Usage\n\n### Initialisation\nThe MVMO optimizer can be called with arguments *iterations*, *num_mutation*, and *population_size*. This defines key parameters for MVMO.\n\n### Defining objective function\nMVMO by default optimizes the objective function for minimum. For maximisation, the objective function will need to be modified. Objective functions can be defined by the user as per requirement. This is shown in examples. The MVMO package provides the following test function benchmarks from [Wikipedia](https://en.wikipedia.org/wiki/Test_functions_for_optimization#cite_note-11):\n1. Rosenbrock\n2. Matyas\n3. Booth\n4. Himm\n5. Easom\n\n### Constraint definition\nConstraints can be inequality or equality. The constraints are passed as a dictionary object with keywords `ineq`, `eq`, or `func` to symbolise whether the specified constraint is inequality, equality or a function definition. Inequality and equality contraints are specified in `str` format, and must follow the convention:\n\n```math\ng(x) <= 0   #inequality constraint\nh(x) = 0    #equality constraint\n```\nComplex constraints can also be defined as python functions. An example of how to use the MVMO package for constrained optimization is shown later. It uses all three constraint defintions. \n\n### Optimization\nThe `optimize()` method can be called on the `optimizer` to perform optimization. It returns the following upon completion of optimization:\n1. `res`: Provides best objective function value, and where it was obtained. [obf_value, x]\n2. `conv`: Provides the list of objective function values over optimization process. This can beused to plot convergence graph.\n3. `sol`: provides the internal mean and variance of stored solutions that was used for optimization. The size of this matrix is **x** X **num_population**.\n\nThe convergence graph can be plotted with `MVMO.plot(conv)`.\n\nThe following example shows minimization of constrained [Rosenbrock](https://en.wikipedia.org/wiki/Test_functions_for_optimization#cite_note-11) function:\n\n```python\nfrom MVMO import MVMO\nfrom MVMO import test_functions\nfunction = test_functions.rosen\noptimizer = MVMO(iterations=5000, num_mutation=3, population_size=10)\n\ndef func_constr(X):\n\treturn True if X[0]**2 + X[1]**2 < 1 else False\n\nbds = [(-1.5,1.5), (-0.5,2.5)]\nconstr = {'ineq':\"(X[0] - 1)**3 - X[1] + 1\",\n\t\t  'eq':\"X[0]+X[1]-2\",\n\t\t  'func':func_constr}\nres, conv, sol = optimizer.optimize(obj_fun=function, bounds=bds, constraints=constr)\n\nMVMO.plot(conv)\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dgusain1/MVMO", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "MVMO", "package_url": "https://pypi.org/project/MVMO/", "platform": "", "project_url": "https://pypi.org/project/MVMO/", "project_urls": {"Homepage": "https://github.com/dgusain1/MVMO"}, "release_url": "https://pypi.org/project/MVMO/1.0.9/", "requires_dist": ["numpy", "pandas", "tqdm", "pyDOE"], "requires_python": "", "summary": "Python package for heuristic optimization", "version": "1.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Mean Variance Mapping Optimization Algorithm</h2>\n<p>MVMO is a Python package to perform heuristic optimization on constrained and unconsrained optimization problems whose convexity and/or linearity may not be fully known. It is based on swarm optimization principles, and uses a continuously updated mean and variance of best solutions from optimization process. Note: since this is a heuristic algorithm, it does not provide the optimal solution, but near optimal solution. This is however done in a very quick time compared to traditional optimization solvers.</p>\n<h2>Installation</h2>\n<p>MVMO can be installed from PyPI using:</p>\n<pre><code>pip install MVMO\n</code></pre>\n<p>MVMO requires numpy and pandas to work.</p>\n<h2>Usage</h2>\n<h3>Initialisation</h3>\n<p>The MVMO optimizer can be called with arguments <em>iterations</em>, <em>num_mutation</em>, and <em>population_size</em>. This defines key parameters for MVMO.</p>\n<h3>Defining objective function</h3>\n<p>MVMO by default optimizes the objective function for minimum. For maximisation, the objective function will need to be modified. Objective functions can be defined by the user as per requirement. This is shown in examples. The MVMO package provides the following test function benchmarks from <a href=\"https://en.wikipedia.org/wiki/Test_functions_for_optimization#cite_note-11\" rel=\"nofollow\">Wikipedia</a>:</p>\n<ol>\n<li>Rosenbrock</li>\n<li>Matyas</li>\n<li>Booth</li>\n<li>Himm</li>\n<li>Easom</li>\n</ol>\n<h3>Constraint definition</h3>\n<p>Constraints can be inequality or equality. The constraints are passed as a dictionary object with keywords <code>ineq</code>, <code>eq</code>, or <code>func</code> to symbolise whether the specified constraint is inequality, equality or a function definition. Inequality and equality contraints are specified in <code>str</code> format, and must follow the convention:</p>\n<pre>g(x) &lt;= 0   #inequality constraint\nh(x) = 0    #equality constraint\n</pre>\n<p>Complex constraints can also be defined as python functions. An example of how to use the MVMO package for constrained optimization is shown later. It uses all three constraint defintions.</p>\n<h3>Optimization</h3>\n<p>The <code>optimize()</code> method can be called on the <code>optimizer</code> to perform optimization. It returns the following upon completion of optimization:</p>\n<ol>\n<li><code>res</code>: Provides best objective function value, and where it was obtained. [obf_value, x]</li>\n<li><code>conv</code>: Provides the list of objective function values over optimization process. This can beused to plot convergence graph.</li>\n<li><code>sol</code>: provides the internal mean and variance of stored solutions that was used for optimization. The size of this matrix is <strong>x</strong> X <strong>num_population</strong>.</li>\n</ol>\n<p>The convergence graph can be plotted with <code>MVMO.plot(conv)</code>.</p>\n<p>The following example shows minimization of constrained <a href=\"https://en.wikipedia.org/wiki/Test_functions_for_optimization#cite_note-11\" rel=\"nofollow\">Rosenbrock</a> function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">MVMO</span> <span class=\"kn\">import</span> <span class=\"n\">MVMO</span>\n<span class=\"kn\">from</span> <span class=\"nn\">MVMO</span> <span class=\"kn\">import</span> <span class=\"n\">test_functions</span>\n<span class=\"n\">function</span> <span class=\"o\">=</span> <span class=\"n\">test_functions</span><span class=\"o\">.</span><span class=\"n\">rosen</span>\n<span class=\"n\">optimizer</span> <span class=\"o\">=</span> <span class=\"n\">MVMO</span><span class=\"p\">(</span><span class=\"n\">iterations</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">,</span> <span class=\"n\">num_mutation</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">population_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func_constr</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">):</span>\n\t<span class=\"k\">return</span> <span class=\"kc\">True</span> <span class=\"k\">if</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">X</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">&lt;</span> <span class=\"mi\">1</span> <span class=\"k\">else</span> <span class=\"kc\">False</span>\n\n<span class=\"n\">bds</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"o\">-</span><span class=\"mf\">1.5</span><span class=\"p\">,</span><span class=\"mf\">1.5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"mf\">2.5</span><span class=\"p\">)]</span>\n<span class=\"n\">constr</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'ineq'</span><span class=\"p\">:</span><span class=\"s2\">\"(X[0] - 1)**3 - X[1] + 1\"</span><span class=\"p\">,</span>\n\t\t  <span class=\"s1\">'eq'</span><span class=\"p\">:</span><span class=\"s2\">\"X[0]+X[1]-2\"</span><span class=\"p\">,</span>\n\t\t  <span class=\"s1\">'func'</span><span class=\"p\">:</span><span class=\"n\">func_constr</span><span class=\"p\">}</span>\n<span class=\"n\">res</span><span class=\"p\">,</span> <span class=\"n\">conv</span><span class=\"p\">,</span> <span class=\"n\">sol</span> <span class=\"o\">=</span> <span class=\"n\">optimizer</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">obj_fun</span><span class=\"o\">=</span><span class=\"n\">function</span><span class=\"p\">,</span> <span class=\"n\">bounds</span><span class=\"o\">=</span><span class=\"n\">bds</span><span class=\"p\">,</span> <span class=\"n\">constraints</span><span class=\"o\">=</span><span class=\"n\">constr</span><span class=\"p\">)</span>\n\n<span class=\"n\">MVMO</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">conv</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6652909, "releases": {"1.0.3": [{"comment_text": "", "digests": {"md5": "5feef95c57b16053cce3642406e61e94", "sha256": "0c5fe7ff91733a2e94911e3b9fb3f39ff44743bae361f6e37428627533f2c879"}, "downloads": -1, "filename": "MVMO-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5feef95c57b16053cce3642406e61e94", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5702, "upload_time": "2019-12-03T10:23:31", "upload_time_iso_8601": "2019-12-03T10:23:31.114785Z", "url": "https://files.pythonhosted.org/packages/23/28/620f8a90036ba63210233c346cc55b476093644c79966da3cc680eac2fcb/MVMO-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86573cdd36a8f5e1655b37d160825873", "sha256": "1e0351faff8c53b7c790c2bfc0bdbba0718ec918ee4776761556f7ef0b1aafc9"}, "downloads": -1, "filename": "MVMO-1.0.3.tar.gz", "has_sig": false, "md5_digest": "86573cdd36a8f5e1655b37d160825873", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5391, "upload_time": "2019-12-03T10:23:34", "upload_time_iso_8601": "2019-12-03T10:23:34.727920Z", "url": "https://files.pythonhosted.org/packages/dd/73/46bf60bd62311854bfe6aec14cbf4ecaf4a9db4d578a04b1b7fd574192f3/MVMO-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "5c09cde947e43fd33175585ebe876dd5", "sha256": "eb84a1869643843a395c52ac041021cca12791ea148aaadcf2ce22b35c1d8449"}, "downloads": -1, "filename": "MVMO-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5c09cde947e43fd33175585ebe876dd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5811, "upload_time": "2019-12-12T11:40:38", "upload_time_iso_8601": "2019-12-12T11:40:38.108675Z", "url": "https://files.pythonhosted.org/packages/75/8d/dd3d13e5ee4ae47b67ac831843b480b4702242bf436c9eec083108a2bced/MVMO-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c4c3217f73c23115275bccbb628cc13", "sha256": "9fc14e0dacf29105813530d7a94f0801c13862426e15bbc61a3396e4d9fbf0b0"}, "downloads": -1, "filename": "MVMO-1.0.4.tar.gz", "has_sig": false, "md5_digest": "4c4c3217f73c23115275bccbb628cc13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4789, "upload_time": "2019-12-12T11:40:39", "upload_time_iso_8601": "2019-12-12T11:40:39.643683Z", "url": "https://files.pythonhosted.org/packages/80/8a/9588d5600e6c31e0ef0f2a0e16a229e220e1381c1597e5b3057bd6204f37/MVMO-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "9d447bf6c0e78d144ecb9f58fd19570e", "sha256": "2b343236196baee905fe95e32794b688f6977f510e8a02e912b81c85645ffb88"}, "downloads": -1, "filename": "MVMO-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9d447bf6c0e78d144ecb9f58fd19570e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5830, "upload_time": "2019-12-16T10:56:50", "upload_time_iso_8601": "2019-12-16T10:56:50.465628Z", "url": "https://files.pythonhosted.org/packages/03/02/1258a5dc2d681509979f24bb5588bd00301098bd9e913840f4f374c8ad41/MVMO-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a63fbc939a03aeb8b99834ad86a2dc3d", "sha256": "3551c3d059b50dae0f77c83f7bfe5ea5cd020eca2df7509a2eab809d303e8374"}, "downloads": -1, "filename": "MVMO-1.0.5.tar.gz", "has_sig": false, "md5_digest": "a63fbc939a03aeb8b99834ad86a2dc3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4795, "upload_time": "2019-12-16T10:56:51", "upload_time_iso_8601": "2019-12-16T10:56:51.668832Z", "url": "https://files.pythonhosted.org/packages/75/17/c4cc6a50202d0293755b822c9b7f86cc253a6b86f1797a48afcaa3ddaff7/MVMO-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "507e78d55c8a8e4cfac82517b4e493c2", "sha256": "b4d66e22657eae750e7ca8590a5fc749c76b3096101292e008c808701b2166dc"}, "downloads": -1, "filename": "MVMO-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "507e78d55c8a8e4cfac82517b4e493c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6083, "upload_time": "2020-02-12T17:13:45", "upload_time_iso_8601": "2020-02-12T17:13:45.453993Z", "url": "https://files.pythonhosted.org/packages/2d/e7/5c0536da76e6fb50670f7ae55237b600fa72680cf0fe5d2a641b34664807/MVMO-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f4bc51c0c27dd82ad601112afb9d04d", "sha256": "ceb197b58b8c9674064b72668703b3e41085718bbbe83e834ef0ac61bd98ec38"}, "downloads": -1, "filename": "MVMO-1.0.6.tar.gz", "has_sig": false, "md5_digest": "3f4bc51c0c27dd82ad601112afb9d04d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5037, "upload_time": "2020-02-12T17:13:46", "upload_time_iso_8601": "2020-02-12T17:13:46.935285Z", "url": "https://files.pythonhosted.org/packages/9f/9e/ed6ca4170b771a53a527cefb9bc9b6cc7e091dc1a884ce09984e214d66bd/MVMO-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "104e0837623c90972bdd9bc92590a0f6", "sha256": "835fb099ddd5629bc3b860a34c221d9a7a7042cfe7668b5e28d1df1f3d41674d"}, "downloads": -1, "filename": "MVMO-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "104e0837623c90972bdd9bc92590a0f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6087, "upload_time": "2020-02-18T04:11:18", "upload_time_iso_8601": "2020-02-18T04:11:18.129064Z", "url": "https://files.pythonhosted.org/packages/2e/28/2c9c7871f4aa9a71e12767dea888bec65343e774173004584386b6b96170/MVMO-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abd14a9f1c70705d02cead3f0223e940", "sha256": "2092f7986dc62f3d97a8bf06b6f005b3834de11a2c8fc9432c13b5b082122efd"}, "downloads": -1, "filename": "MVMO-1.0.7.tar.gz", "has_sig": false, "md5_digest": "abd14a9f1c70705d02cead3f0223e940", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5034, "upload_time": "2020-02-18T04:11:19", "upload_time_iso_8601": "2020-02-18T04:11:19.366796Z", "url": "https://files.pythonhosted.org/packages/b5/1a/02db90f75120aaa5afdf1d309f056b5bf21a8b18940e94867ca3b1a28e32/MVMO-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "e1d7a2472f033a70d417ef1a80b59c28", "sha256": "1e1ad049736a42e65065eb0fc819227360fb64fe51483eaeb9df61745e32b8b6"}, "downloads": -1, "filename": "MVMO-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "e1d7a2472f033a70d417ef1a80b59c28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6088, "upload_time": "2020-02-18T10:08:52", "upload_time_iso_8601": "2020-02-18T10:08:52.995346Z", "url": "https://files.pythonhosted.org/packages/e4/0e/9ab6459c87d05116787ab04150c9398cd3d351cad8e9878e32a6de374653/MVMO-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca885de6b806b8a18ee088a5eacbc438", "sha256": "98ca3b1c669437e926dd128edf2747507451247849aabbbd5428c33ad1e5f535"}, "downloads": -1, "filename": "MVMO-1.0.8.tar.gz", "has_sig": false, "md5_digest": "ca885de6b806b8a18ee088a5eacbc438", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5029, "upload_time": "2020-02-18T10:08:54", "upload_time_iso_8601": "2020-02-18T10:08:54.420719Z", "url": "https://files.pythonhosted.org/packages/89/9e/b21662d71ec5c322e4e2386d4f48ffd5c882db0a869920c1629dd8853d4a/MVMO-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "2c9489966a4f8b37614998344b50647c", "sha256": "c6cea4ea2bc9a55d5315a0573742565fb8315b5bbb081abfbba515ec5a1469b9"}, "downloads": -1, "filename": "MVMO-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "2c9489966a4f8b37614998344b50647c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6217, "upload_time": "2020-02-18T12:12:40", "upload_time_iso_8601": "2020-02-18T12:12:40.009619Z", "url": "https://files.pythonhosted.org/packages/ac/7e/40658d54b43047bd676a7a7d509f137dadc6fe52e0b8c6b430baefcd19b0/MVMO-1.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9718dcd2baf1b53a167ccad58e2168d", "sha256": "c1c525f917f8eca8590dff35ca40ef79282c22e4776837af3bf307d96d24b668"}, "downloads": -1, "filename": "MVMO-1.0.9.tar.gz", "has_sig": false, "md5_digest": "c9718dcd2baf1b53a167ccad58e2168d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5173, "upload_time": "2020-02-18T12:12:41", "upload_time_iso_8601": "2020-02-18T12:12:41.802957Z", "url": "https://files.pythonhosted.org/packages/0b/d0/f85e6db5d69c837b89e82f210a3a2d15966b1b88c59a26554a243d2179ac/MVMO-1.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2c9489966a4f8b37614998344b50647c", "sha256": "c6cea4ea2bc9a55d5315a0573742565fb8315b5bbb081abfbba515ec5a1469b9"}, "downloads": -1, "filename": "MVMO-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "2c9489966a4f8b37614998344b50647c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6217, "upload_time": "2020-02-18T12:12:40", "upload_time_iso_8601": "2020-02-18T12:12:40.009619Z", "url": "https://files.pythonhosted.org/packages/ac/7e/40658d54b43047bd676a7a7d509f137dadc6fe52e0b8c6b430baefcd19b0/MVMO-1.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9718dcd2baf1b53a167ccad58e2168d", "sha256": "c1c525f917f8eca8590dff35ca40ef79282c22e4776837af3bf307d96d24b668"}, "downloads": -1, "filename": "MVMO-1.0.9.tar.gz", "has_sig": false, "md5_digest": "c9718dcd2baf1b53a167ccad58e2168d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5173, "upload_time": "2020-02-18T12:12:41", "upload_time_iso_8601": "2020-02-18T12:12:41.802957Z", "url": "https://files.pythonhosted.org/packages/0b/d0/f85e6db5d69c837b89e82f210a3a2d15966b1b88c59a26554a243d2179ac/MVMO-1.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:01 2020"}