{"info": {"author": "Lucas Nascimento", "author_email": "lucascampostn@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====\nDjango-remote-image\n=====\n\nDjango-remote-image is a Django app that adds a new form field for images.\nThe default widget is a text input, that accepts a URL of a image.\n\nThe image is downloaded and can be passed to a ``ImageField`` in a model. Pillow needs to be installed.\n\nIt is possible to whitelist and blacklist file extensions.\n\nExamples are shown below.\n\nQuick start\n-----------\n\n   $ pip install django-remote-image\n\nUsing\n-----------\nUsing the field in a form:\n\n.. code:: python\n    import remote_image import RemoteImageField\n\n    class ExampleForm(forms.Form):\n        image = RemoteImageField()\n\nWhitelisting file extensions (only the ones in the list will be permitted):\n\n.. code:: python\n    import remote_image import RemoteImageField\n\n    class ExampleForm(forms.Form):\n        image = RemoteImageField(ext_whitelist=['png', 'jpg'])\n\nBlacklisting file extensions (the ones in the list will be blocked):\n\n.. code:: python\n    import remote_image import RemoteImageField\n\n    class ExampleForm(forms.Form):\n        image = RemoteImageField(ext_blacklist=['png', 'jpg'])", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LucasCTN/django-remote-image", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-remote-image", "package_url": "https://pypi.org/project/django-remote-image/", "platform": "", "project_url": "https://pypi.org/project/django-remote-image/", "project_urls": {"Homepage": "https://github.com/LucasCTN/django-remote-image"}, "release_url": "https://pypi.org/project/django-remote-image/0.1/", "requires_dist": null, "requires_python": "", "summary": "Custom django form field for downloading images from a URL on a URLInput.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>Django-remote-image<br>=====<br><br>Django-remote-image is a Django app that adds a new form field for images.<br>The default widget is a text input, that accepts a URL of a image.<br><br>The image is downloaded and can be passed to a ``ImageField`` in a model. Pillow needs to be installed.<br><br>It is possible to whitelist and blacklist file extensions.<br><br>Examples are shown below.<br><br>Quick start<br>-----------<br><br>   $ pip install django-remote-image<br><br>Using<br>-----------<br>Using the field in a form:<br><br>.. code:: python<br>    import remote_image import RemoteImageField<br><br>    class ExampleForm(forms.Form):<br>        image = RemoteImageField()<br><br>Whitelisting file extensions (only the ones in the list will be permitted):<br><br>.. code:: python<br>    import remote_image import RemoteImageField<br><br>    class ExampleForm(forms.Form):<br>        image = RemoteImageField(ext_whitelist=['png', 'jpg'])<br><br>Blacklisting file extensions (the ones in the list will be blocked):<br><br>.. code:: python<br>    import remote_image import RemoteImageField<br><br>    class ExampleForm(forms.Form):<br>        image = RemoteImageField(ext_blacklist=['png', 'jpg'])\n          </div>"}, "last_serial": 3819412, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "31124f6e8f464b049a0b0d4c0950d558", "sha256": "db673da84a520683df555eef4ffc813f07b97a68a0ecf13baf0bdd5eefadbcee"}, "downloads": -1, "filename": "django-remote-image-0.1.tar.gz", "has_sig": false, "md5_digest": "31124f6e8f464b049a0b0d4c0950d558", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3941, "upload_time": "2018-04-29T22:43:33", "upload_time_iso_8601": "2018-04-29T22:43:33.515399Z", "url": "https://files.pythonhosted.org/packages/eb/6d/c91f807d6c89bb1c42e9ee6ffcd1b8ca62333eb1144cc57f34df420111d6/django-remote-image-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "31124f6e8f464b049a0b0d4c0950d558", "sha256": "db673da84a520683df555eef4ffc813f07b97a68a0ecf13baf0bdd5eefadbcee"}, "downloads": -1, "filename": "django-remote-image-0.1.tar.gz", "has_sig": false, "md5_digest": "31124f6e8f464b049a0b0d4c0950d558", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3941, "upload_time": "2018-04-29T22:43:33", "upload_time_iso_8601": "2018-04-29T22:43:33.515399Z", "url": "https://files.pythonhosted.org/packages/eb/6d/c91f807d6c89bb1c42e9ee6ffcd1b8ca62333eb1144cc57f34df420111d6/django-remote-image-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:18 2020"}