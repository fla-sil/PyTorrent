{"info": {"author": "Andreas Stocker", "author_email": "andreas@ks.co.at", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "================\nDjango ChangeSet\n================\n\n.. image:: https://travis-ci.org/beachmachine/django-changeset.svg?branch=master\n    :target: https://travis-ci.org/beachmachine/django-changeset\n\nDjango ChangeSet is a simple Django app that will give your models the possibility to track all changes. It depends on\n``django_userforeignkey`` to determine the current user doing the change(s).\n\nCurrently, Django 1.11, 2.0 and 2.1 are supported and tested via travis-ci.\n\nDetailed documentation is in the docs subdirectory.\n\nQuick start\n-----------\n\n1. Use ``pip`` to install and download django-changeset (and ``django-userforeignkey``):\n\n.. code-block:: bash\n\n    pip install django-changeset\n\n\n2. Add ``django_userforeignkey`` and ``django_changeset`` to your ``INSTALLED_APPS`` like this:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_userforeignkey',\n        'django_changeset',\n    ]\n\n\n3. Add ``django_userforeignkey.middleware.UserForeignKeyMiddleware`` to your ``MIDDLEWARE`` like this:\n\n.. code-block:: python\n\n    MIDDLEWARE = (\n        ...\n        'django.contrib.auth.middleware.AuthenticationMiddleware',\n        ...\n        'django_userforeignkey.middleware.UserForeignKeyMiddleware',\n    )\n\n\n\n**Note**: Make sure to insert the ``UserForeignKeyMiddleware`` **after** Djangos ``AuthenticationMiddleware``.\n\n\nExample usage\n-------------\n\nUse ``RevisionModelMixin`` as a mixin class for your models and add the fields you want to track in the meta\n configuration using ``track_fields`` and ``track_related``. Also add a generic relation to ``ChangeSet`` using ``changesets = ChangeSetRelation()``:\n\n.. code-block:: python\n\n    from django.db import models\n\n    from django_changeset.models import RevisionModelMixin\n    from django_changeset.models.fields import ChangeSetRelation\n\n\n    class MyModel(models.Model, RevisionModelMixin):\n        class Meta:\n            track_fields = ('my_data', )  # track changes on my_data\n            track_related = ('my_ref', )  # track changes on a related model\n\n        my_data = models.CharField(max_length=64, verbose_name=\"Very important data you want to track\")\n        my_ref = models.ForeignKey('SomeOtherModel', verbose_name=\"Very important relation\", related_name='my_models')\n\n        # Generic Relation to ChangeSet\n        changesets = ChangeSetRelation()\n\n\nNote: If you want to have access to the properties ``created_by``, ``created_at``, ``last_modified_by``, ``last_modified_at``,\nyou need to inherit from ``CreatedModifiedByMixin`` aswell as ``RevisionModelMixin``. For the Python MRO to work, you also\nhave to create an abstract base model:\n\n.. code-block:: python\n\n    from django.db import models\n\n    from django_changeset.models import CreatedModifiedByMixin, RevisionModelMixin\n    from django_changeset.models.fields import ChangeSetRelation\n\n\n\n    class BaseModel(models.Model):\n        \"\"\"\n        BaseModel is needed for proper MRO within Python/Django Models\n        \"\"\"\n        class Meta:\n            abstract = True\n        pass\n\n\n    class MyModel(BaseModel, RevisionModelMixin, CreatedModifiedByMixin):\n        class Meta:\n            track_fields = ('my_data', )  # track changes on my_data\n            track_related = ('my_ref', )  # track changes on a related model\n\n        my_data = models.CharField(max_length=64, verbose_name=\"Very important data you want to track\")\n        my_ref = models.ForeignKey('SomeOtherModel', verbose_name=\"Very important relation\", related_name='my_models')\n\n        # Generic Relation to ChangeSet\n        changesets = ChangeSetRelation()\n\n\nQuerying ChangeSets via the changesets relation\n-----------------------------------------------\n\nBy inheriting from the ``RevisionModelMixin`` and ``CreatedModifiedByMixin`` mixins, and adding an attribute of type ``ChangeSetRelation`` (a ``GenericRelation`` for the changeset), the following features are added to your model:\n\n- Properties ``created_by``, ``created_at``, ``last_modified_by``, ``last_modified_at`` are made available for each object (``CreatedModifiedByMixin``)\n- Relation ``changesets`` is made available, allowing you to run queries like this one:\n  ``MyModel.objects.filter(changesets__changeset_type='I', changesets__user__username='johndoe')``\n\n\n\nAccess ChangeSets and ChangeRecords\n-----------------------------------\n\nToDo\n\nYou can access the changeset by calling the ``change_set`` property of an instance of ``MyModel`` as shown in the\nfollowing example:\n\n.. code-block:: python\n\n    print(\"------- CHANGE SETS (\", len(somemodel.changesets), \")---------\")\n    for change_set in somemodel.changesets:\n        # print change_set\n        print(\"Change was carried out at \", change_set.date, \" by user \", change_set.user, \" on model \", change_set.object_type)\n\n        print(\"  + CHANGE RECORDS (\", len(change_set.change_records.all()), \"): \")\n        for change_record in change_set.change_records.all():\n            print(\"\\t\", change_record)\n            print(\"\\tIs change on a related field?\", change_record.is_related)\n            # related fields: we only know that something new has been added. we know the PK, but not the object itself\n            print(\"\\t\\tChanged field \", change_record.field_name, \"(\", change_record.field_verbose_name, \") from \",\n                  change_record.old_value, \"(display:\", change_record.old_value_display, \") to\")\n            print(\"\\t\\t \", change_record.new_value, \"(display:\", change_record.new_value_display, \")\")\n            if change_record.is_related:\n                print(\"\\t\\tRelated Object Info: \", change_record.related_object)\n        # TODO:\n        # change_set.created_at, change_set.created_by, change_set.last_modified_by, change_set.last_modified_at\n\n        print(\"-----\")\n\n\nMaintainers\n-----------\nThis repository is currently maintained by\n\n- beachmachine\n- ChristianKreuzberger\n\nPull Requests are welcome.\n\nLicense\n-------\n\nDjango ChangeSet uses the BSD-3 Clause License, see LICENSE file.\n\n\nChangelog / Release History\n---------------------------\n\n1.0.0rc3 - August 2018 - First feature complete release (release candidate)\n1.0.0rc4 - October 2018 - Added tracking for generic relations and improved logging (release candidate)\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://ks.co.at/", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-changeset", "package_url": "https://pypi.org/project/django-changeset/", "platform": "", "project_url": "https://pypi.org/project/django-changeset/", "project_urls": {"Homepage": "https://ks.co.at/"}, "release_url": "https://pypi.org/project/django-changeset/1.0rc3/", "requires_dist": null, "requires_python": "", "summary": "A simple Django app that will give your models the possibility to track all changes.", "version": "1.0rc3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/beachmachine/django-changeset\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/beachmachine/django-changeset.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0f1f43736773c195c715181f3a7847b774ba547/68747470733a2f2f7472617669732d63692e6f72672f62656163686d616368696e652f646a616e676f2d6368616e67657365742e7376673f6272616e63683d6d6173746572\"></a>\n<p>Django ChangeSet is a simple Django app that will give your models the possibility to track all changes. It depends on\n<tt>django_userforeignkey</tt> to determine the current user doing the change(s).</p>\n<p>Currently, Django 1.11, 2.0 and 2.1 are supported and tested via travis-ci.</p>\n<p>Detailed documentation is in the docs subdirectory.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li>Use <tt>pip</tt> to install and download django-changeset (and <tt><span class=\"pre\">django-userforeignkey</span></tt>):</li>\n</ol>\n<pre>pip install django-changeset\n</pre>\n<ol>\n<li>Add <tt>django_userforeignkey</tt> and <tt>django_changeset</tt> to your <tt>INSTALLED_APPS</tt> like this:</li>\n</ol>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_userforeignkey'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_changeset'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<ol>\n<li>Add <tt>django_userforeignkey.middleware.UserForeignKeyMiddleware</tt> to your <tt>MIDDLEWARE</tt> like this:</li>\n</ol>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django.contrib.auth.middleware.AuthenticationMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_userforeignkey.middleware.UserForeignKeyMiddleware'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p><strong>Note</strong>: Make sure to insert the <tt>UserForeignKeyMiddleware</tt> <strong>after</strong> Djangos <tt>AuthenticationMiddleware</tt>.</p>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<dl>\n<dt>Use <tt>RevisionModelMixin</tt> as a mixin class for your models and add the fields you want to track in the meta</dt>\n<dd>configuration using <tt>track_fields</tt> and <tt>track_related</tt>. Also add a generic relation to <tt>ChangeSet</tt> using <tt>changesets = ChangeSetRelation()</tt>:</dd>\n</dl>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_changeset.models</span> <span class=\"kn\">import</span> <span class=\"n\">RevisionModelMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_changeset.models.fields</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeSetRelation</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">RevisionModelMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">track_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'my_data'</span><span class=\"p\">,</span> <span class=\"p\">)</span>  <span class=\"c1\"># track changes on my_data</span>\n        <span class=\"n\">track_related</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'my_ref'</span><span class=\"p\">,</span> <span class=\"p\">)</span>  <span class=\"c1\"># track changes on a related model</span>\n\n    <span class=\"n\">my_data</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"s2\">\"Very important data you want to track\"</span><span class=\"p\">)</span>\n    <span class=\"n\">my_ref</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'SomeOtherModel'</span><span class=\"p\">,</span> <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"s2\">\"Very important relation\"</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">'my_models'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Generic Relation to ChangeSet</span>\n    <span class=\"n\">changesets</span> <span class=\"o\">=</span> <span class=\"n\">ChangeSetRelation</span><span class=\"p\">()</span>\n</pre>\n<p>Note: If you want to have access to the properties <tt>created_by</tt>, <tt>created_at</tt>, <tt>last_modified_by</tt>, <tt>last_modified_at</tt>,\nyou need to inherit from <tt>CreatedModifiedByMixin</tt> aswell as <tt>RevisionModelMixin</tt>. For the Python MRO to work, you also\nhave to create an abstract base model:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django_changeset.models</span> <span class=\"kn\">import</span> <span class=\"n\">CreatedModifiedByMixin</span><span class=\"p\">,</span> <span class=\"n\">RevisionModelMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_changeset.models.fields</span> <span class=\"kn\">import</span> <span class=\"n\">ChangeSetRelation</span>\n\n\n\n<span class=\"k\">class</span> <span class=\"nc\">BaseModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"\n    BaseModel is needed for proper MRO within Python/Django Models\n    \"\"\"</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">abstract</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">RevisionModelMixin</span><span class=\"p\">,</span> <span class=\"n\">CreatedModifiedByMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">track_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'my_data'</span><span class=\"p\">,</span> <span class=\"p\">)</span>  <span class=\"c1\"># track changes on my_data</span>\n        <span class=\"n\">track_related</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'my_ref'</span><span class=\"p\">,</span> <span class=\"p\">)</span>  <span class=\"c1\"># track changes on a related model</span>\n\n    <span class=\"n\">my_data</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"s2\">\"Very important data you want to track\"</span><span class=\"p\">)</span>\n    <span class=\"n\">my_ref</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'SomeOtherModel'</span><span class=\"p\">,</span> <span class=\"n\">verbose_name</span><span class=\"o\">=</span><span class=\"s2\">\"Very important relation\"</span><span class=\"p\">,</span> <span class=\"n\">related_name</span><span class=\"o\">=</span><span class=\"s1\">'my_models'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Generic Relation to ChangeSet</span>\n    <span class=\"n\">changesets</span> <span class=\"o\">=</span> <span class=\"n\">ChangeSetRelation</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"querying-changesets-via-the-changesets-relation\">\n<h2>Querying ChangeSets via the changesets relation</h2>\n<p>By inheriting from the <tt>RevisionModelMixin</tt> and <tt>CreatedModifiedByMixin</tt> mixins, and adding an attribute of type <tt>ChangeSetRelation</tt> (a <tt>GenericRelation</tt> for the changeset), the following features are added to your model:</p>\n<ul>\n<li>Properties <tt>created_by</tt>, <tt>created_at</tt>, <tt>last_modified_by</tt>, <tt>last_modified_at</tt> are made available for each object (<tt>CreatedModifiedByMixin</tt>)</li>\n<li>Relation <tt>changesets</tt> is made available, allowing you to run queries like this one:\n<tt><span class=\"pre\">MyModel.objects.filter(changesets__changeset_type='I',</span> <span class=\"pre\">changesets__user__username='johndoe')</span></tt></li>\n</ul>\n</div>\n<div id=\"access-changesets-and-changerecords\">\n<h2>Access ChangeSets and ChangeRecords</h2>\n<p>ToDo</p>\n<p>You can access the changeset by calling the <tt>change_set</tt> property of an instance of <tt>MyModel</tt> as shown in the\nfollowing example:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"------- CHANGE SETS (\"</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">somemodel</span><span class=\"o\">.</span><span class=\"n\">changesets</span><span class=\"p\">),</span> <span class=\"s2\">\")---------\"</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">change_set</span> <span class=\"ow\">in</span> <span class=\"n\">somemodel</span><span class=\"o\">.</span><span class=\"n\">changesets</span><span class=\"p\">:</span>\n    <span class=\"c1\"># print change_set</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Change was carried out at \"</span><span class=\"p\">,</span> <span class=\"n\">change_set</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"s2\">\" by user \"</span><span class=\"p\">,</span> <span class=\"n\">change_set</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"s2\">\" on model \"</span><span class=\"p\">,</span> <span class=\"n\">change_set</span><span class=\"o\">.</span><span class=\"n\">object_type</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"  + CHANGE RECORDS (\"</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">change_set</span><span class=\"o\">.</span><span class=\"n\">change_records</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()),</span> <span class=\"s2\">\"): \"</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">change_record</span> <span class=\"ow\">in</span> <span class=\"n\">change_set</span><span class=\"o\">.</span><span class=\"n\">change_records</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">change_record</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Is change on a related field?\"</span><span class=\"p\">,</span> <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">is_related</span><span class=\"p\">)</span>\n        <span class=\"c1\"># related fields: we only know that something new has been added. we know the PK, but not the object itself</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t\\t</span><span class=\"s2\">Changed field \"</span><span class=\"p\">,</span> <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">field_name</span><span class=\"p\">,</span> <span class=\"s2\">\"(\"</span><span class=\"p\">,</span> <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">field_verbose_name</span><span class=\"p\">,</span> <span class=\"s2\">\") from \"</span><span class=\"p\">,</span>\n              <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">old_value</span><span class=\"p\">,</span> <span class=\"s2\">\"(display:\"</span><span class=\"p\">,</span> <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">old_value_display</span><span class=\"p\">,</span> <span class=\"s2\">\") to\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t\\t</span><span class=\"s2\"> \"</span><span class=\"p\">,</span> <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">new_value</span><span class=\"p\">,</span> <span class=\"s2\">\"(display:\"</span><span class=\"p\">,</span> <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">new_value_display</span><span class=\"p\">,</span> <span class=\"s2\">\")\"</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">is_related</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t\\t</span><span class=\"s2\">Related Object Info: \"</span><span class=\"p\">,</span> <span class=\"n\">change_record</span><span class=\"o\">.</span><span class=\"n\">related_object</span><span class=\"p\">)</span>\n    <span class=\"c1\"># TODO:</span>\n    <span class=\"c1\"># change_set.created_at, change_set.created_by, change_set.last_modified_by, change_set.last_modified_at</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"-----\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"maintainers\">\n<h2>Maintainers</h2>\n<p>This repository is currently maintained by</p>\n<ul>\n<li>beachmachine</li>\n<li>ChristianKreuzberger</li>\n</ul>\n<p>Pull Requests are welcome.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Django ChangeSet uses the BSD-3 Clause License, see LICENSE file.</p>\n</div>\n<div id=\"changelog-release-history\">\n<h2>Changelog / Release History</h2>\n<p>1.0.0rc3 - August 2018 - First feature complete release (release candidate)\n1.0.0rc4 - October 2018 - Added tracking for generic relations and improved logging (release candidate)</p>\n</div>\n\n          </div>"}, "last_serial": 5357040, "releases": {"1.0rc1": [{"comment_text": "", "digests": {"md5": "0e9b74c0a2b5d3f7e79d00653dbfffaf", "sha256": "12713540dd7f024e940150f59b17ef6a4e14639ac3a94c2aa6e09643bae955ea"}, "downloads": -1, "filename": "django-changeset-1.0rc1.tar.gz", "has_sig": false, "md5_digest": "0e9b74c0a2b5d3f7e79d00653dbfffaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17585, "upload_time": "2018-08-07T14:45:34", "upload_time_iso_8601": "2018-08-07T14:45:34.167876Z", "url": "https://files.pythonhosted.org/packages/df/8b/6ece47821da984355bd01b3d37ce3a9f1c2e356179fa6524da4bafba7d22/django-changeset-1.0rc1.tar.gz", "yanked": false}], "1.0rc2": [{"comment_text": "", "digests": {"md5": "adec39911e33648277b6e929a25dbb45", "sha256": "4bbc50729fd7c3fcf4010820f8dc9400ac1bfee10c917c957f5db145438244cb"}, "downloads": -1, "filename": "django-changeset-1.0rc2.tar.gz", "has_sig": false, "md5_digest": "adec39911e33648277b6e929a25dbb45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17326, "upload_time": "2018-08-10T12:48:52", "upload_time_iso_8601": "2018-08-10T12:48:52.998713Z", "url": "https://files.pythonhosted.org/packages/f1/64/e4c66403950277cfa5d94efc49b7e44bf8e0c004b3aea8091b30aea0a5b4/django-changeset-1.0rc2.tar.gz", "yanked": false}], "1.0rc3": [{"comment_text": "", "digests": {"md5": "d8a47b3e6c9515040604de68850b27c9", "sha256": "9ceb7b4b62b915db11ca93ba1c64240637e6076c2e66abba08c3188bd4c4e6a8"}, "downloads": -1, "filename": "django-changeset-1.0rc3.tar.gz", "has_sig": false, "md5_digest": "d8a47b3e6c9515040604de68850b27c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17397, "upload_time": "2018-10-18T11:40:18", "upload_time_iso_8601": "2018-10-18T11:40:18.094211Z", "url": "https://files.pythonhosted.org/packages/c1/a1/49acc8d9300b833a640b0ba188f098f525771840f7eaf145cb1d998359a3/django-changeset-1.0rc3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d8a47b3e6c9515040604de68850b27c9", "sha256": "9ceb7b4b62b915db11ca93ba1c64240637e6076c2e66abba08c3188bd4c4e6a8"}, "downloads": -1, "filename": "django-changeset-1.0rc3.tar.gz", "has_sig": false, "md5_digest": "d8a47b3e6c9515040604de68850b27c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17397, "upload_time": "2018-10-18T11:40:18", "upload_time_iso_8601": "2018-10-18T11:40:18.094211Z", "url": "https://files.pythonhosted.org/packages/c1/a1/49acc8d9300b833a640b0ba188f098f525771840f7eaf145cb1d998359a3/django-changeset-1.0rc3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:11 2020"}