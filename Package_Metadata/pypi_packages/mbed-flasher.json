{"info": {"author": "Jussi Vatjus-Anttila", "author_email": "Jussi.Vatjus-Anttila@arm.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Embedded Systems"], "description": "# mbed-flasher\n\n## Description\n\nmbed-flasher is a simple Python-based tool for flashing single or multiple boards.\nIt provides a simple Command Line Interface and Python API for flashing.\n\nThe purpose is to provide a clean and simple library that is easy to integrate to other tools.\nIt can be easily developed further to support flashing in mbed OS and other platforms.\nDevelopers can also use it as a standalone tool for flashing their development boards.\n\n\n## Installation\n\nTo install the flasher, use:\n\n`python setup.py install`\n\nTo install the flasher in development mode:\n\n`python setup.py develop`\n\nTo use JLink flashing, additional package needs to be installed from [here](https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack).\nJLinkExe must be found from PATH for flasher to be able to use it.\n\nTo use STLink flashing (windows only), additional package needs to be installed from [here](https://www.st.com/en/development-tools/stsw-link004.html#sw-tools-scroll).\n`ST-LINK_CLI.exe` must be found from PATH for flasher to be able to use it.\n\n## Usage\n\nThis tool has been tested and verified to work with Windows 7 and Ubuntu (14.04 LTS) Linux.\n\nDevices used in verification: NXP K64F, Nucleo F401RE, BBC micro:bit.\n\nSee the actual usage documentation [here](doc/usage.md).\n\n## Help\n\n**Main help**\n\n```\n/> mbedflash --help\nusage: mbedflash [-h] [-v] [-s] <command> ...\n\nFor specific command help, run: mbedflash <command> --help\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -v, --verbose  Verbose level... repeat up to three times.\n  -s, --silent   Silent - only errors will be printed.\n\ncommand:\n  <command>      command help\n    list         Prints a list of supported platforms.\n    flashers     Prints a list of supported flashers.\n    version      Display version information\n    flash        Flash given resource\n    reset        Reset given resource\n    erase        Erase given resource\n\n```\n\n**Flash help**\n\n```\n/>mbedflash flash --help\nusage: mbedflash flash [-h] [-i INPUT] [--tid TARGET_ID] [-t PLATFORM_NAME]\n                       [--no-reset]\n                       [method]\n\npositional arguments:\n  method                <simple|pyocd|edbg>, used for flashing\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        Binary input to be flashed.\n  --tid TARGET_ID, --target_id TARGET_ID\n                        Target to be flashed, ALL will flash all connected\n                        devices with given platform-name, also multiple\n                        targets can be given. Does not continue flashing\n                        next device in case of failures. Short target_id\n                        matches boards by prefix\n  --target_filename TARGET_FILENAME\n                        Custom target filename\n  -t PLATFORM_NAME, --platform_name PLATFORM_NAME\n                        Platform of the target device(s)\n  --no-reset            Do not reset device before or after flashing\n\n```\n\n`--target_filename TARGET_FILENAME` -option is used to select custom\ntarget filename when source file is copied to mbed target\n\ne.g.\n```\n$ mbedflash flash simple --tid 0240000032254e45000f800ab529001f3f31000097969900 -i setup.hex --target_filename asd.hex\n```\ninput file in above example would be `setup.hex`, that must exists and filename\nthat is created for target mount point would be `asd.hex`.\n\n**Erase help**\n\n```\nc:\\>mbedflash erase --help\nusage: mbedflash erase [-h] [--tid TARGET_ID] [method]\n\npositional arguments:\n  method                <simple|pyocd|edbg>, used for erase\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --tid TARGET_ID, --target_id TARGET_ID\n                        Target to be erased or ALL, also multiple targets can\n                        be given. Short target_id matches boards by prefix\n\n```\n\n**Reset help**\n\n```\nc:\\>mbedflash reset --help\nusage: mbedflash reset [-h] [--tid TARGET_ID] [method]\n\npositional arguments:\n  method                <simple|pyocd|edbg>, used for reset\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --tid TARGET_ID, --target_id TARGET_ID\n                        Target to be reset or ALL, also multiple targets can\n                        be given. Short target_id matches boards by prefix\n\n```\n\n## Running unit tests\n\nRequired pre-installed packages: coverage, mock\n\n```\nsudo pip install coverage mock\n```\n\nExecute all tests:\n```\ncoverage run -m unittest discover -s test\n```\nExecute hardware tests:\n```\ncoverage run -m unittest discover -s test.hardware\n```\nExecute non-hardware tests:\n```\ncoverage run -m unittest discover -s test.non_hardware\n```\n\n\n\nGenerate a coverage report:\n\n```\ncoverage html\n```\n\n## Creating the installer\n\n**For Windows:**\n```\npython setup.py build\npython setup.py bdist_msi\n```\n\n**For Linux:**\n```\npython setup.py build\n//for rpm package\npython setup.py bdist_rpm\n```\nRead [more on installers](https://docs.python.org/2/distutils/builtdist.html).\n", "description_content_type": "", "docs_url": null, "download_url": "https://api.github.com/repos/ARMmbed/mbed-flasher/tarball/v0.10.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ARMmbed/mbed-flasher", "keywords": "", "license": "Copyright 2016 ARM Limited\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.", "maintainer": "", "maintainer_email": "", "name": "mbed-flasher", "package_url": "https://pypi.org/project/mbed-flasher/", "platform": "", "project_url": "https://pypi.org/project/mbed-flasher/", "project_urls": {"Download": "https://api.github.com/repos/ARMmbed/mbed-flasher/tarball/v0.10.1", "Homepage": "https://github.com/ARMmbed/mbed-flasher"}, "release_url": "https://pypi.org/project/mbed-flasher/0.10.1/", "requires_dist": null, "requires_python": "", "summary": "mbed-flasher", "version": "0.10.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # mbed-flasher<br><br>## Description<br><br>mbed-flasher is a simple Python-based tool for flashing single or multiple boards.<br>It provides a simple Command Line Interface and Python API for flashing.<br><br>The purpose is to provide a clean and simple library that is easy to integrate to other tools.<br>It can be easily developed further to support flashing in mbed OS and other platforms.<br>Developers can also use it as a standalone tool for flashing their development boards.<br><br><br>## Installation<br><br>To install the flasher, use:<br><br>`python setup.py install`<br><br>To install the flasher in development mode:<br><br>`python setup.py develop`<br><br>To use JLink flashing, additional package needs to be installed from [here](https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack).<br>JLinkExe must be found from PATH for flasher to be able to use it.<br><br>To use STLink flashing (windows only), additional package needs to be installed from [here](https://www.st.com/en/development-tools/stsw-link004.html#sw-tools-scroll).<br>`ST-LINK_CLI.exe` must be found from PATH for flasher to be able to use it.<br><br>## Usage<br><br>This tool has been tested and verified to work with Windows 7 and Ubuntu (14.04 LTS) Linux.<br><br>Devices used in verification: NXP K64F, Nucleo F401RE, BBC micro:bit.<br><br>See the actual usage documentation [here](doc/usage.md).<br><br>## Help<br><br>**Main help**<br><br>```<br>/&gt; mbedflash --help<br>usage: mbedflash [-h] [-v] [-s] &lt;command&gt; ...<br><br>For specific command help, run: mbedflash &lt;command&gt; --help<br><br>optional arguments:<br>  -h, --help     show this help message and exit<br>  -v, --verbose  Verbose level... repeat up to three times.<br>  -s, --silent   Silent - only errors will be printed.<br><br>command:<br>  &lt;command&gt;      command help<br>    list         Prints a list of supported platforms.<br>    flashers     Prints a list of supported flashers.<br>    version      Display version information<br>    flash        Flash given resource<br>    reset        Reset given resource<br>    erase        Erase given resource<br><br>```<br><br>**Flash help**<br><br>```<br>/&gt;mbedflash flash --help<br>usage: mbedflash flash [-h] [-i INPUT] [--tid TARGET_ID] [-t PLATFORM_NAME]<br>                       [--no-reset]<br>                       [method]<br><br>positional arguments:<br>  method                &lt;simple|pyocd|edbg&gt;, used for flashing<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -i INPUT, --input INPUT<br>                        Binary input to be flashed.<br>  --tid TARGET_ID, --target_id TARGET_ID<br>                        Target to be flashed, ALL will flash all connected<br>                        devices with given platform-name, also multiple<br>                        targets can be given. Does not continue flashing<br>                        next device in case of failures. Short target_id<br>                        matches boards by prefix<br>  --target_filename TARGET_FILENAME<br>                        Custom target filename<br>  -t PLATFORM_NAME, --platform_name PLATFORM_NAME<br>                        Platform of the target device(s)<br>  --no-reset            Do not reset device before or after flashing<br><br>```<br><br>`--target_filename TARGET_FILENAME` -option is used to select custom<br>target filename when source file is copied to mbed target<br><br>e.g.<br>```<br>$ mbedflash flash simple --tid 0240000032254e45000f800ab529001f3f31000097969900 -i setup.hex --target_filename asd.hex<br>```<br>input file in above example would be `setup.hex`, that must exists and filename<br>that is created for target mount point would be `asd.hex`.<br><br>**Erase help**<br><br>```<br>c:\\&gt;mbedflash erase --help<br>usage: mbedflash erase [-h] [--tid TARGET_ID] [method]<br><br>positional arguments:<br>  method                &lt;simple|pyocd|edbg&gt;, used for erase<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --tid TARGET_ID, --target_id TARGET_ID<br>                        Target to be erased or ALL, also multiple targets can<br>                        be given. Short target_id matches boards by prefix<br><br>```<br><br>**Reset help**<br><br>```<br>c:\\&gt;mbedflash reset --help<br>usage: mbedflash reset [-h] [--tid TARGET_ID] [method]<br><br>positional arguments:<br>  method                &lt;simple|pyocd|edbg&gt;, used for reset<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --tid TARGET_ID, --target_id TARGET_ID<br>                        Target to be reset or ALL, also multiple targets can<br>                        be given. Short target_id matches boards by prefix<br><br>```<br><br>## Running unit tests<br><br>Required pre-installed packages: coverage, mock<br><br>```<br>sudo pip install coverage mock<br>```<br><br>Execute all tests:<br>```<br>coverage run -m unittest discover -s test<br>```<br>Execute hardware tests:<br>```<br>coverage run -m unittest discover -s test.hardware<br>```<br>Execute non-hardware tests:<br>```<br>coverage run -m unittest discover -s test.non_hardware<br>```<br><br><br><br>Generate a coverage report:<br><br>```<br>coverage html<br>```<br><br>## Creating the installer<br><br>**For Windows:**<br>```<br>python setup.py build<br>python setup.py bdist_msi<br>```<br><br>**For Linux:**<br>```<br>python setup.py build<br>//for rpm package<br>python setup.py bdist_rpm<br>```<br>Read [more on installers](https://docs.python.org/2/distutils/builtdist.html).<br>\n          </div>"}, "last_serial": 4823699, "releases": {"0.10.1": [{"comment_text": "", "digests": {"md5": "82aaccb391016d46a5ad9be66c937309", "sha256": "ecc4f96561b83078f752a23d78e8c13fd158c5135cf80803174cd1b368945dc7"}, "downloads": -1, "filename": "mbed-flasher-0.10.1.tar.gz", "has_sig": false, "md5_digest": "82aaccb391016d46a5ad9be66c937309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38946, "upload_time": "2019-02-15T08:40:09", "upload_time_iso_8601": "2019-02-15T08:40:09.969079Z", "url": "https://files.pythonhosted.org/packages/db/08/c44c299b60b0c1f6b1822c481af5bd8b8b90c5c098deccf4e5160ed16a99/mbed-flasher-0.10.1.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "794ff93da317c80c89587f61f2e7852b", "sha256": "fde67193b53fac1c74e5eee30195c097070c7e5392dfece8acbcdb5618156964"}, "downloads": -1, "filename": "mbed-flasher-0.6.3.tar.gz", "has_sig": false, "md5_digest": "794ff93da317c80c89587f61f2e7852b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29175, "upload_time": "2018-02-09T08:53:14", "upload_time_iso_8601": "2018-02-09T08:53:14.186904Z", "url": "https://files.pythonhosted.org/packages/7a/54/9270a40e13f48f34e4ca511659f2dfd2c563099ed06cf30d92dd80c4f951/mbed-flasher-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "16c414b2ef4d61724be1efa408ea5589", "sha256": "13382494aa23f3772e8daed5ff17d6cd183ad091c8286fdae1a57f4abe48fce1"}, "downloads": -1, "filename": "mbed-flasher-0.6.4.tar.gz", "has_sig": false, "md5_digest": "16c414b2ef4d61724be1efa408ea5589", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30047, "upload_time": "2018-02-15T08:49:02", "upload_time_iso_8601": "2018-02-15T08:49:02.739511Z", "url": "https://files.pythonhosted.org/packages/11/a4/f40835a800d0477564076642fde6c9041f773291c4226ac63a7f8c0041fe/mbed-flasher-0.6.4.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "21e0ef4a4427c666a78f1bee127ebe20", "sha256": "1ba9808197f3653cb09caa08bf40234d17de4ad7cf83f9f2b17e8ccb43043772"}, "downloads": -1, "filename": "mbed-flasher-0.7.2.tar.gz", "has_sig": false, "md5_digest": "21e0ef4a4427c666a78f1bee127ebe20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32257, "upload_time": "2018-04-09T06:52:08", "upload_time_iso_8601": "2018-04-09T06:52:08.945691Z", "url": "https://files.pythonhosted.org/packages/22/9c/05ab28445ae0c595b305bf9846d12ac1173137a4461454fddd44f0f7d2b6/mbed-flasher-0.7.2.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "e0518a0e8f84eb25a9178f5808ef075b", "sha256": "dce4f1a84ca75989283972cc16dca72352b21a10e3a59008f0190c072f882514"}, "downloads": -1, "filename": "mbed-flasher-0.7.4.tar.gz", "has_sig": false, "md5_digest": "e0518a0e8f84eb25a9178f5808ef075b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33172, "upload_time": "2018-04-26T10:17:19", "upload_time_iso_8601": "2018-04-26T10:17:19.350055Z", "url": "https://files.pythonhosted.org/packages/03/53/21dbc9ccca0bee80e57b721995cb6cf75e7d5f55db9083551c35b061be69/mbed-flasher-0.7.4.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "e7a63c6a394b824cb7d1badb6b7195ed", "sha256": "c9ac118a04bee7c086712fe71703d7da210bc4f1caf5ea3f9b6c973eda021fdd"}, "downloads": -1, "filename": "mbed-flasher-0.8.0.tar.gz", "has_sig": false, "md5_digest": "e7a63c6a394b824cb7d1badb6b7195ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35501, "upload_time": "2018-05-08T11:57:55", "upload_time_iso_8601": "2018-05-08T11:57:55.181436Z", "url": "https://files.pythonhosted.org/packages/d0/a7/0f354e74d56cf827ab41e3392e1eb827a23be662ec2cdd93eee739dee350/mbed-flasher-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "fb47edc3d63030a63f516aaaf022eefd", "sha256": "d7697f58f1d857977cdad74a5fe465144bfd7d1c4ccbee18b10d833e8db5dd30"}, "downloads": -1, "filename": "mbed-flasher-0.9.0.tar.gz", "has_sig": false, "md5_digest": "fb47edc3d63030a63f516aaaf022eefd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37648, "upload_time": "2018-08-13T12:20:23", "upload_time_iso_8601": "2018-08-13T12:20:23.460515Z", "url": "https://files.pythonhosted.org/packages/0c/0b/c25b39f3db946c243b531c87a6b85fe955eadc3e132695a57e3035cfc500/mbed-flasher-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "5b1710a67b271304d34f57cde743b3d0", "sha256": "7ca93a1dfce6325e2010eb6e5341f91c43dd174fc4ebe3371885b063db113fc0"}, "downloads": -1, "filename": "mbed-flasher-0.9.1.tar.gz", "has_sig": false, "md5_digest": "5b1710a67b271304d34f57cde743b3d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37645, "upload_time": "2018-11-14T12:54:23", "upload_time_iso_8601": "2018-11-14T12:54:23.075033Z", "url": "https://files.pythonhosted.org/packages/02/ca/129f924073d8fc45d63dfb3eac9793d4902ccc1579d3471a8b064398f2fc/mbed-flasher-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "3eb4bc6176d00108b4a70408f77ab0d9", "sha256": "45b7332ef507e593d754a12d2de38e33fea86bd8e8e947d017b714bf5d40308f"}, "downloads": -1, "filename": "mbed-flasher-0.9.2.tar.gz", "has_sig": false, "md5_digest": "3eb4bc6176d00108b4a70408f77ab0d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37657, "upload_time": "2018-11-15T10:05:34", "upload_time_iso_8601": "2018-11-15T10:05:34.193723Z", "url": "https://files.pythonhosted.org/packages/f0/ca/f259d261b62c8a1d7974ec228a81183de4a6ea770bed9074ead0a23a7bd7/mbed-flasher-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "82aaccb391016d46a5ad9be66c937309", "sha256": "ecc4f96561b83078f752a23d78e8c13fd158c5135cf80803174cd1b368945dc7"}, "downloads": -1, "filename": "mbed-flasher-0.10.1.tar.gz", "has_sig": false, "md5_digest": "82aaccb391016d46a5ad9be66c937309", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38946, "upload_time": "2019-02-15T08:40:09", "upload_time_iso_8601": "2019-02-15T08:40:09.969079Z", "url": "https://files.pythonhosted.org/packages/db/08/c44c299b60b0c1f6b1822c481af5bd8b8b90c5c098deccf4e5160ed16a99/mbed-flasher-0.10.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:03 2020"}