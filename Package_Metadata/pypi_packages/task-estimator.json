{"info": {"author": "Chris Spencer", "author_email": "chrisspen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.7"], "description": "Estimator\n=========\n\n[![Pipeline Status](https://gitlab.com/chrisspen/estimator/badges/master/pipeline.svg)](https://gitlab.com/chrisspen/estimator/commits/master) \n[![PyPI Status](https://img.shields.io/pypi/v/task-estimator.svg)](https://pypi.python.org/pypi/task-estimator)\n\nA Python script for automatically estimating work hours in Jira using supervised learning.\n\nInstallation\n------------\n\nInstall the Python 3 package:\n\n    pip install estimator\n\nUsage\n-----\n\nFill out the login credentials in your `config.yaml`. A sample file to pull data from Jira would look like:\n\n    source: jira\n    server: https://myname.atlassian.net\n    username: myusername\n    password: mypassword\n    projects: MYPROJECTKEY\n    regressor:\n        cls: KernelRidge\n        stop_words: ''\n        ngram_range: [1, 6]\n        analyzer: char\n        min_df: 0.0\n    minimum_estimate_minutes: 15\n    hour_update_fields:\n    -   Story Points\n\nRetrieve training data:\n\n    estimator config.yaml retrieve\n\nGenerate all possible algorithm and setting combinations:\n\n    estimator config.yaml generation-combinations\n\nTest all combinations to find which algorithm works best:\n\n    estimator config.yaml test-combinations\n\nFill in the `regressor` settings in your `config.yaml`, then train your final regressor:\n\n    estimator config.yaml train\n\nFind the algorithm's accuracy:\n\n    estimator config.yaml test\n\nDryrun the application of the regressor to unestimated tickets:\n\n    estimator config.yaml apply\n\nSave these estimates with:\n\n    estimator config.yaml apply --save\n\nTo combine the above retrieve, train and apply steps into a single command, just add `--retrain` to the apply command:\n\n    estimator config.yaml apply --save --retrain\n\nDevelopment\n-----------\n\nRun tests locally with:\n\n    tox\n\nTo run tests for a specific environment (e.g. Python 3.7):\n    \n    tox -e py37\n\nTo run a specific test:\n    \n    export TESTNAME=.test_learning; tox -e py37", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chrisspen/estimator", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "task-estimator", "package_url": "https://pypi.org/project/task-estimator/", "platform": "", "project_url": "https://pypi.org/project/task-estimator/", "project_urls": {"Homepage": "https://github.com/chrisspen/estimator"}, "release_url": "https://pypi.org/project/task-estimator/0.9.2/", "requires_dist": null, "requires_python": "", "summary": "A supervised learning tool for estimating task duration.", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Estimator</h1>\n<p><a href=\"https://gitlab.com/chrisspen/estimator/commits/master\" rel=\"nofollow\"><img alt=\"Pipeline Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4663aa231d4bf7a12cf451f29bb58e2c996f2d3b/68747470733a2f2f6769746c61622e636f6d2f63687269737370656e2f657374696d61746f722f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/task-estimator\" rel=\"nofollow\"><img alt=\"PyPI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85ba3fbe946f3fc0fe5f3d6b7546fd72fc9d225c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7461736b2d657374696d61746f722e737667\"></a></p>\n<p>A Python script for automatically estimating work hours in Jira using supervised learning.</p>\n<h2>Installation</h2>\n<p>Install the Python 3 package:</p>\n<pre><code>pip install estimator\n</code></pre>\n<h2>Usage</h2>\n<p>Fill out the login credentials in your <code>config.yaml</code>. A sample file to pull data from Jira would look like:</p>\n<pre><code>source: jira\nserver: https://myname.atlassian.net\nusername: myusername\npassword: mypassword\nprojects: MYPROJECTKEY\nregressor:\n    cls: KernelRidge\n    stop_words: ''\n    ngram_range: [1, 6]\n    analyzer: char\n    min_df: 0.0\nminimum_estimate_minutes: 15\nhour_update_fields:\n-   Story Points\n</code></pre>\n<p>Retrieve training data:</p>\n<pre><code>estimator config.yaml retrieve\n</code></pre>\n<p>Generate all possible algorithm and setting combinations:</p>\n<pre><code>estimator config.yaml generation-combinations\n</code></pre>\n<p>Test all combinations to find which algorithm works best:</p>\n<pre><code>estimator config.yaml test-combinations\n</code></pre>\n<p>Fill in the <code>regressor</code> settings in your <code>config.yaml</code>, then train your final regressor:</p>\n<pre><code>estimator config.yaml train\n</code></pre>\n<p>Find the algorithm's accuracy:</p>\n<pre><code>estimator config.yaml test\n</code></pre>\n<p>Dryrun the application of the regressor to unestimated tickets:</p>\n<pre><code>estimator config.yaml apply\n</code></pre>\n<p>Save these estimates with:</p>\n<pre><code>estimator config.yaml apply --save\n</code></pre>\n<p>To combine the above retrieve, train and apply steps into a single command, just add <code>--retrain</code> to the apply command:</p>\n<pre><code>estimator config.yaml apply --save --retrain\n</code></pre>\n<h2>Development</h2>\n<p>Run tests locally with:</p>\n<pre><code>tox\n</code></pre>\n<p>To run tests for a specific environment (e.g. Python 3.7):</p>\n<pre><code>tox -e py37\n</code></pre>\n<p>To run a specific test:</p>\n<pre><code>export TESTNAME=.test_learning; tox -e py37\n</code></pre>\n\n          </div>"}, "last_serial": 5573842, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "55c515130150db996ed3a56c91d2e878", "sha256": "0415de9ec00376b345e961261ba59683bb8c931a9f32b2943cc0e781364c889e"}, "downloads": -1, "filename": "task-estimator-0.9.1.tar.gz", "has_sig": false, "md5_digest": "55c515130150db996ed3a56c91d2e878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11026, "upload_time": "2019-07-23T18:22:32", "upload_time_iso_8601": "2019-07-23T18:22:32.231040Z", "url": "https://files.pythonhosted.org/packages/f5/04/14e654874b5700e611d7bbd36f21ba258e43100a7efcd2840aa1b1712bf2/task-estimator-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "b805e79200a026399a42dff115491a4f", "sha256": "e204dbbc6d3af36a47b1b0443ebc85e3c0093fd9be7878e1460b0faa3a62fdaa"}, "downloads": -1, "filename": "task-estimator-0.9.2.tar.gz", "has_sig": false, "md5_digest": "b805e79200a026399a42dff115491a4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12258, "upload_time": "2019-07-23T18:29:54", "upload_time_iso_8601": "2019-07-23T18:29:54.831189Z", "url": "https://files.pythonhosted.org/packages/fb/14/441ac856c329ad906577ce463da3159553111a73a55847ad3f9587bac6c6/task-estimator-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b805e79200a026399a42dff115491a4f", "sha256": "e204dbbc6d3af36a47b1b0443ebc85e3c0093fd9be7878e1460b0faa3a62fdaa"}, "downloads": -1, "filename": "task-estimator-0.9.2.tar.gz", "has_sig": false, "md5_digest": "b805e79200a026399a42dff115491a4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12258, "upload_time": "2019-07-23T18:29:54", "upload_time_iso_8601": "2019-07-23T18:29:54.831189Z", "url": "https://files.pythonhosted.org/packages/fb/14/441ac856c329ad906577ce463da3159553111a73a55847ad3f9587bac6c6/task-estimator-0.9.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:48 2020"}