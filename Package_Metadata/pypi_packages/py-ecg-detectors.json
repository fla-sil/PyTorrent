{"info": {"author": "Luis Howell, Bernd Porr", "author_email": "luisbhowell@gmail.com, bernd.porr@glasgow.ac.uk", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "=============\nECG Detectors\n=============\n\nA collection of 7 ECG heartbeat detection algorithms implemented in Python. Developed in conjunction with a new ECG database: http://researchdata.gla.ac.uk/716/. This repository also contains a testing class for the MITDB and the new University of Glasgow database. In addition the module `hrv` provides tools to\nanalyse heartrate variability.\n\n\nInstallation\n============\n\nLinux / Mac::\n\n  pip3 install py-ecg-detectors [--user]\n\nWindows::\n\n  pip install py-ecg-detectors [--user]\n\nFrom source::\n\n  python3 setup.py install [--user]\n\n\nUse the option `--user` if you don't have system-wise write permission.\n\n\nECG Detector Class Usage\n========================\n\nBefore the detectors can be used the class must first be initalised with the sampling rate of the ECG recording:\n\n.. code-block:: python\n\n  from ecgdetectors import Detectors\n  detectors = Detectors(fs)\n\nSee `usage_example.py` for an example of how to use the detectors.\n\nHamilton\n--------\n\nImplementation of P.S. Hamilton, \u201cOpen Source ECG Analysis Software Documentation\u201d, E.P.Limited, 2002. Usage::\n  \n  r_peaks = detectors.hamilton_detector(unfiltered_ecg)\n\n  \nChristov\n--------\n\nImplementation of Ivaylo I. Christov, \u201cReal time electrocardiogram QRS detection using combined adaptive threshold\u201d, BioMedical Engineering OnLine 2004, vol. 3:28, 2004. Usage::\n\n  r_peaks = detectors.christov_detector(unfiltered_ecg)\n\n\nEngelse and Zeelenberg\n----------------------\n\nImplementation of W. Engelse and C. Zeelenberg, \u201cA single scan algorithm for QRS detection and feature extraction\u201d, IEEE Comp. in Cardiology, vol. 6, pp. 37-42, 1979 with modifications A. Lourenco, H. Silva, P. Leite, R. Lourenco and A. Fred, \u201cReal Time Electrocardiogram Segmentation for Finger Based ECG Biometrics\u201d, BIOSIGNALS 2012, pp. 49-54, 2012. Usage::\n  \n  r_peaks = detectors.engzee_detector(unfiltered_ecg)\n\n\n\nPan and Tompkins\n----------------\n\nImplementation of Jiapu Pan and Willis J. Tompkins. \u201cA Real-Time QRS Detection Algorithm\u201d. In: IEEE Transactions on Biomedical Engineering BME-32.3 (1985), pp. 230\u2013236. Usage::\n  \n  r_peaks = detectors.pan_tompkins_detector(unfiltered_ecg)\n\n\nStationary Wavelet Transform\n----------------------------\n\nImplementation based on Vignesh Kalidas and Lakshman Tamil. \u201cReal-time QRS detector using Stationary Wavelet Transform for Automated ECG Analysis\u201d. In: 2017 IEEE 17th International Conference on Bioinformatics and Bioengineering (BIBE). Uses the Pan and Tompkins thresolding method. Usage::\n  \n  r_peaks = detectors.swt_detector(unfiltered_ecg)\n\n\nTwo Moving Average\n------------------\n\nImplementation of Elgendi, Mohamed & Jonkman, Mirjam & De Boer, Friso. (2010). \"Frequency Bands Effects on QRS Detection\" The 3rd International Conference on Bio-inspired Systems and Signal Processing (BIOSIGNALS2010). 428-431.\nUsage::\n  \n  r_peaks = detectors.two_average_detector(unfiltered_ecg)\n\n  \n\nMatched Filter\n--------------\n\nFIR matched filter using template of QRS complex. Uses the Pan and Tompkins thresolding method.\nThe ECG template is a text file where the samples are in a single column. See\nthe templates folder on github for examples. Usage::\n\n  r_peaks = detectors.matched_filter_detector(unfiltered_ecg,template_file)\n\n\nHeartrate variability analysis\n==============================\n\nThe module `hrv` provides a large collection of heartrate\nvariability measures which are methods of the class `HRV`::\n\n  HR(self, rr_samples)\n     Calculate heart-rates from R peak samples.\n\n  NN20(self, rr_samples)\n     Calculate NN20, the number of pairs of successive\n     NNs that differ by more than 20 ms.\n\n  NN50(self, rr_samples)\n     Calculate NN50, the number of pairs of successive\n     NNs that differ by more than 50 ms.\n\n  RMSSD(self, rr_samples, normalise=False)\n     Calculate RMSSD (root mean square of successive differences).\n\n  SDANN(self, rr_samples, average_period=5.0, normalise=False)\n     Calculate SDANN, the standard deviation of the average\n     RR intervals calculated over short periods.\n\n  SDNN(self, rr_samples, normalise=False)\n     Calculate SDNN, the standard deviation of NN intervals.\n\n  SDSD(self, rr_samples)\n     Calculate SDSD (standard deviation of successive differences),\n     the standard deviation of the successive differences between adjacent NNs.\n\n  fAnalysis(self, rr_samples)\n     Frequency analysis to calc self.lf, self.hf,\n     returns the LF/HF-ratio.\n\n  pNN20(self, rr_samples)\n     Calculate pNN20, the proportion of NN20 divided by total number of NNs.\n\n  pNN50(self, rr_samples)\n     Calculate pNN50, the proportion of NN50 divided by total number of NNs.\n\nFor parameters and additional info use the python help function::\n\n  import hrv\n  help(hrv)\n\nThe example `hrv_time_domain_analysis.py` calculates the heartrate\nvariability in the timedomain.\n\n\nBenchmarking\n============\n\n`run_all_benchmarks.py` calculates the R peak timestamps\nfor all detectors, the true/false detections/misses and\nsaves them in .csv files. Open the script itself or use python's\nhelp function of how to obtain the ECG data such as the MIT db.\n\n`show_stats_plots.py` takes then the .csv files, displays\nthe results of the different detectors and calculates the stats.\n\n`hrv_time_domain_analysis.py` performs a timedomain analysis\nbetween sitting and a math test using the EngZee detector and\nthe wavelet detector for comparison.\n\n\nAuthors\n=======\n\nLuis Howell, luisbhowell@gmail.com\n\nBernd Porr, bernd.porr@glasgow.ac.uk\n\n\ncitation / DOI\n==============\n\nDOI: 10.5281/zenodo.3353396\n\nhttps://doi.org/10.5281/zenodo.3353396\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/berndporr/py-ecg-qrs-detectors", "keywords": "", "license": "GPL 3.0", "maintainer": "", "maintainer_email": "", "name": "py-ecg-detectors", "package_url": "https://pypi.org/project/py-ecg-detectors/", "platform": "", "project_url": "https://pypi.org/project/py-ecg-detectors/", "project_urls": {"Homepage": "https://github.com/berndporr/py-ecg-qrs-detectors"}, "release_url": "https://pypi.org/project/py-ecg-detectors/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Seven ECG heartbeat detection algorithms and heartrate variability analysis", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A collection of 7 ECG heartbeat detection algorithms implemented in Python. Developed in conjunction with a new ECG database: <a href=\"http://researchdata.gla.ac.uk/716/\" rel=\"nofollow\">http://researchdata.gla.ac.uk/716/</a>. This repository also contains a testing class for the MITDB and the new University of Glasgow database. In addition the module <cite>hrv</cite> provides tools to\nanalyse heartrate variability.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Linux / Mac:</p>\n<pre>pip3 install py-ecg-detectors [--user]\n</pre>\n<p>Windows:</p>\n<pre>pip install py-ecg-detectors [--user]\n</pre>\n<p>From source:</p>\n<pre>python3 setup.py install [--user]\n</pre>\n<p>Use the option <cite>\u2013user</cite> if you don\u2019t have system-wise write permission.</p>\n</div>\n<div id=\"ecg-detector-class-usage\">\n<h2>ECG Detector Class Usage</h2>\n<p>Before the detectors can be used the class must first be initalised with the sampling rate of the ECG recording:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ecgdetectors</span> <span class=\"kn\">import</span> <span class=\"n\">Detectors</span>\n<span class=\"n\">detectors</span> <span class=\"o\">=</span> <span class=\"n\">Detectors</span><span class=\"p\">(</span><span class=\"n\">fs</span><span class=\"p\">)</span>\n</pre>\n<p>See <cite>usage_example.py</cite> for an example of how to use the detectors.</p>\n<div id=\"hamilton\">\n<h3>Hamilton</h3>\n<p>Implementation of P.S. Hamilton, \u201cOpen Source ECG Analysis Software Documentation\u201d, E.P.Limited, 2002. Usage:</p>\n<pre>r_peaks = detectors.hamilton_detector(unfiltered_ecg)\n</pre>\n</div>\n<div id=\"christov\">\n<h3>Christov</h3>\n<p>Implementation of Ivaylo I. Christov, \u201cReal time electrocardiogram QRS detection using combined adaptive threshold\u201d, BioMedical Engineering OnLine 2004, vol. 3:28, 2004. Usage:</p>\n<pre>r_peaks = detectors.christov_detector(unfiltered_ecg)\n</pre>\n</div>\n<div id=\"engelse-and-zeelenberg\">\n<h3>Engelse and Zeelenberg</h3>\n<p>Implementation of W. Engelse and C. Zeelenberg, \u201cA single scan algorithm for QRS detection and feature extraction\u201d, IEEE Comp. in Cardiology, vol. 6, pp. 37-42, 1979 with modifications A. Lourenco, H. Silva, P. Leite, R. Lourenco and A. Fred, \u201cReal Time Electrocardiogram Segmentation for Finger Based ECG Biometrics\u201d, BIOSIGNALS 2012, pp. 49-54, 2012. Usage:</p>\n<pre>r_peaks = detectors.engzee_detector(unfiltered_ecg)\n</pre>\n</div>\n<div id=\"pan-and-tompkins\">\n<h3>Pan and Tompkins</h3>\n<p>Implementation of Jiapu Pan and Willis J. Tompkins. \u201cA Real-Time QRS Detection Algorithm\u201d. In: IEEE Transactions on Biomedical Engineering BME-32.3 (1985), pp. 230\u2013236. Usage:</p>\n<pre>r_peaks = detectors.pan_tompkins_detector(unfiltered_ecg)\n</pre>\n</div>\n<div id=\"stationary-wavelet-transform\">\n<h3>Stationary Wavelet Transform</h3>\n<p>Implementation based on Vignesh Kalidas and Lakshman Tamil. \u201cReal-time QRS detector using Stationary Wavelet Transform for Automated ECG Analysis\u201d. In: 2017 IEEE 17th International Conference on Bioinformatics and Bioengineering (BIBE). Uses the Pan and Tompkins thresolding method. Usage:</p>\n<pre>r_peaks = detectors.swt_detector(unfiltered_ecg)\n</pre>\n</div>\n<div id=\"two-moving-average\">\n<h3>Two Moving Average</h3>\n<p>Implementation of Elgendi, Mohamed &amp; Jonkman, Mirjam &amp; De Boer, Friso. (2010). \u201cFrequency Bands Effects on QRS Detection\u201d The 3rd International Conference on Bio-inspired Systems and Signal Processing (BIOSIGNALS2010). 428-431.\nUsage:</p>\n<pre>r_peaks = detectors.two_average_detector(unfiltered_ecg)\n</pre>\n</div>\n<div id=\"matched-filter\">\n<h3>Matched Filter</h3>\n<p>FIR matched filter using template of QRS complex. Uses the Pan and Tompkins thresolding method.\nThe ECG template is a text file where the samples are in a single column. See\nthe templates folder on github for examples. Usage:</p>\n<pre>r_peaks = detectors.matched_filter_detector(unfiltered_ecg,template_file)\n</pre>\n</div>\n</div>\n<div id=\"heartrate-variability-analysis\">\n<h2>Heartrate variability analysis</h2>\n<p>The module <cite>hrv</cite> provides a large collection of heartrate\nvariability measures which are methods of the class <cite>HRV</cite>:</p>\n<pre>HR(self, rr_samples)\n   Calculate heart-rates from R peak samples.\n\nNN20(self, rr_samples)\n   Calculate NN20, the number of pairs of successive\n   NNs that differ by more than 20 ms.\n\nNN50(self, rr_samples)\n   Calculate NN50, the number of pairs of successive\n   NNs that differ by more than 50 ms.\n\nRMSSD(self, rr_samples, normalise=False)\n   Calculate RMSSD (root mean square of successive differences).\n\nSDANN(self, rr_samples, average_period=5.0, normalise=False)\n   Calculate SDANN, the standard deviation of the average\n   RR intervals calculated over short periods.\n\nSDNN(self, rr_samples, normalise=False)\n   Calculate SDNN, the standard deviation of NN intervals.\n\nSDSD(self, rr_samples)\n   Calculate SDSD (standard deviation of successive differences),\n   the standard deviation of the successive differences between adjacent NNs.\n\nfAnalysis(self, rr_samples)\n   Frequency analysis to calc self.lf, self.hf,\n   returns the LF/HF-ratio.\n\npNN20(self, rr_samples)\n   Calculate pNN20, the proportion of NN20 divided by total number of NNs.\n\npNN50(self, rr_samples)\n   Calculate pNN50, the proportion of NN50 divided by total number of NNs.\n</pre>\n<p>For parameters and additional info use the python help function:</p>\n<pre>import hrv\nhelp(hrv)\n</pre>\n<p>The example <cite>hrv_time_domain_analysis.py</cite> calculates the heartrate\nvariability in the timedomain.</p>\n</div>\n<div id=\"benchmarking\">\n<h2>Benchmarking</h2>\n<p><cite>run_all_benchmarks.py</cite> calculates the R peak timestamps\nfor all detectors, the true/false detections/misses and\nsaves them in .csv files. Open the script itself or use python\u2019s\nhelp function of how to obtain the ECG data such as the MIT db.</p>\n<p><cite>show_stats_plots.py</cite> takes then the .csv files, displays\nthe results of the different detectors and calculates the stats.</p>\n<p><cite>hrv_time_domain_analysis.py</cite> performs a timedomain analysis\nbetween sitting and a math test using the EngZee detector and\nthe wavelet detector for comparison.</p>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>Luis Howell, <a href=\"mailto:luisbhowell%40gmail.com\">luisbhowell<span>@</span>gmail<span>.</span>com</a></p>\n<p>Bernd Porr, <a href=\"mailto:bernd.porr%40glasgow.ac.uk\">bernd<span>.</span>porr<span>@</span>glasgow<span>.</span>ac<span>.</span>uk</a></p>\n</div>\n<div id=\"citation-doi\">\n<h2>citation / DOI</h2>\n<p>DOI: 10.5281/zenodo.3353396</p>\n<p><a href=\"https://doi.org/10.5281/zenodo.3353396\" rel=\"nofollow\">https://doi.org/10.5281/zenodo.3353396</a></p>\n</div>\n\n          </div>"}, "last_serial": 6338523, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "ecbe0151f46eb95b446102cb2ad52b59", "sha256": "a8375910821c7f412c7e08be0f55a140e0401651b98f42f203947d39364caaa7"}, "downloads": -1, "filename": "py-ecg-detectors-0.9.1.tar.gz", "has_sig": false, "md5_digest": "ecbe0151f46eb95b446102cb2ad52b59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8720, "upload_time": "2019-07-27T19:41:25", "upload_time_iso_8601": "2019-07-27T19:41:25.700047Z", "url": "https://files.pythonhosted.org/packages/13/ab/98b43fe00f6490adbea819e9c54e482ccdd1621be4022f0f8d8eca4c2c4d/py-ecg-detectors-0.9.1.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "f166b227a7656029d32f2d4b364ac07d", "sha256": "7dd5c22d694fdf000e74aad0a01f4f468449ea4f0dbfea2e76d3d5ac0b0c23ef"}, "downloads": -1, "filename": "py-ecg-detectors-0.9.4.tar.gz", "has_sig": false, "md5_digest": "f166b227a7656029d32f2d4b364ac07d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9888, "upload_time": "2019-07-27T20:47:03", "upload_time_iso_8601": "2019-07-27T20:47:03.514973Z", "url": "https://files.pythonhosted.org/packages/81/42/3a0fa389408afd4578fa1ea2c590f86097c167eac84ad3d8956046714e4a/py-ecg-detectors-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "94ea001948234c91e10bde05c4127515", "sha256": "5557965aec43486986b1d5327c7b77bbeadcba6a15e961984044e4a12d7b0bd7"}, "downloads": -1, "filename": "py_ecg_detectors-0.9.5-py3-none-any.whl", "has_sig": false, "md5_digest": "94ea001948234c91e10bde05c4127515", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 15117, "upload_time": "2019-07-28T07:36:32", "upload_time_iso_8601": "2019-07-28T07:36:32.663022Z", "url": "https://files.pythonhosted.org/packages/e6/53/00d437e7335e4b2e340e630c104385a3e6c5011a2647971f967c43ebca42/py_ecg_detectors-0.9.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71f421f63e0b7b4465a8456006c06c09", "sha256": "c51a1d89e4a8757e1f497741ab16e0e5db0d89afb1aa7409748afcb1c285174b"}, "downloads": -1, "filename": "py-ecg-detectors-0.9.5.tar.gz", "has_sig": false, "md5_digest": "71f421f63e0b7b4465a8456006c06c09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10768, "upload_time": "2019-07-28T07:36:30", "upload_time_iso_8601": "2019-07-28T07:36:30.504044Z", "url": "https://files.pythonhosted.org/packages/a7/ab/8b3b71069c659e4ba9bc12ee83849866f368f698c502c9c86d6025058179/py-ecg-detectors-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "07de8d585c8ae381117e62d5633e9c12", "sha256": "b6e23431611970564e4f53e7771e36e190dbd1fa2ae04da39eab8f4df3b6da04"}, "downloads": -1, "filename": "py_ecg_detectors-0.9.6-py3-none-any.whl", "has_sig": false, "md5_digest": "07de8d585c8ae381117e62d5633e9c12", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 15112, "upload_time": "2019-07-31T21:48:18", "upload_time_iso_8601": "2019-07-31T21:48:18.198644Z", "url": "https://files.pythonhosted.org/packages/b0/6f/4150253356049338271ef10991025b5be8a045c5234d5ca8adff919a39f4/py_ecg_detectors-0.9.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b918bba9d43022bee61711b8ce15d52", "sha256": "f2ec4c853e35864f2b2436ab212df6a573a617dca878744ae0063f6134cdfc95"}, "downloads": -1, "filename": "py-ecg-detectors-0.9.6.tar.gz", "has_sig": false, "md5_digest": "0b918bba9d43022bee61711b8ce15d52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10878, "upload_time": "2019-07-31T21:47:51", "upload_time_iso_8601": "2019-07-31T21:47:51.389404Z", "url": "https://files.pythonhosted.org/packages/9e/a2/e5af58250d33e13d01640e2e2a92d51a403fa8aa1d7abd4cbe8ca3d8d7c3/py-ecg-detectors-0.9.6.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c4a95d63a75cf49e8b3ff7795a7d44d5", "sha256": "34f6f25742c84940013fb49266b617d50bf2b83d9f33d4943308b659629154a1"}, "downloads": -1, "filename": "py_ecg_detectors-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "c4a95d63a75cf49e8b3ff7795a7d44d5", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 21620, "upload_time": "2019-12-02T00:34:43", "upload_time_iso_8601": "2019-12-02T00:34:43.775329Z", "url": "https://files.pythonhosted.org/packages/a8/0b/f340927a0ef6b20e8102caaeb7a308b8765a89d711b4ed87e7708c14ae13/py_ecg_detectors-1.0.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c83ff7a4fa4d23b08e2d90c34a09fd93", "sha256": "34bf87799db1096cf2a12f6678b87be0294c70755665f02a5e264597d48e8d6b"}, "downloads": -1, "filename": "py_ecg_detectors-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c83ff7a4fa4d23b08e2d90c34a09fd93", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 15154, "upload_time": "2019-12-02T00:34:32", "upload_time_iso_8601": "2019-12-02T00:34:32.726394Z", "url": "https://files.pythonhosted.org/packages/db/fc/a51563053ed7ca9b240956c9681ce3a5b2c0607c05025d4508685a593829/py_ecg_detectors-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f0ffa9e6e70a160eb0e50739b9aeb24", "sha256": "ee4c6037c127a5c5bba4fe98a33f3807ec89036adbbf90ed2c6176efedae2590"}, "downloads": -1, "filename": "py-ecg-detectors-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2f0ffa9e6e70a160eb0e50739b9aeb24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10900, "upload_time": "2019-12-01T23:51:26", "upload_time_iso_8601": "2019-12-01T23:51:26.990594Z", "url": "https://files.pythonhosted.org/packages/ae/76/5cf94579c0205987fe9f531482995e2b08b21ad4df75429c205b44a0242b/py-ecg-detectors-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "9627e48e6f3869457effb3cd10021241", "sha256": "bee1c9ad961de16a9aa8aa6399442e03973a9d579867f690bb279540a22ca96c"}, "downloads": -1, "filename": "py_ecg_detectors-1.0.1-py3.6.egg", "has_sig": false, "md5_digest": "9627e48e6f3869457effb3cd10021241", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 20409, "upload_time": "2019-12-20T11:32:10", "upload_time_iso_8601": "2019-12-20T11:32:10.753269Z", "url": "https://files.pythonhosted.org/packages/71/56/83a36fc556cec1f3cb633ee6a6a0b33e789c61f3691d5bf328a848f2b93c/py_ecg_detectors-1.0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "49d4dc24a1856a9abe3f3885d995d897", "sha256": "7026d24a24657366b2f1baa1e47c54a37f3daf5d13f74502be4da5d7d84927ef"}, "downloads": -1, "filename": "py_ecg_detectors-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "49d4dc24a1856a9abe3f3885d995d897", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 13624, "upload_time": "2019-12-20T11:32:22", "upload_time_iso_8601": "2019-12-20T11:32:22.013242Z", "url": "https://files.pythonhosted.org/packages/79/0a/b4438db20e07a1f1bd4d1dbd283bd545ff8bfe7f7a94105a267e8c5859f3/py_ecg_detectors-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6e70a5cea92f421d26c9eb2f2ce7f58", "sha256": "9d8c50e5859156253b65bd1dd4f4e3d3e27aa61aed2946b0367429ff1e56b505"}, "downloads": -1, "filename": "py-ecg-detectors-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b6e70a5cea92f421d26c9eb2f2ce7f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10893, "upload_time": "2019-12-20T11:31:58", "upload_time_iso_8601": "2019-12-20T11:31:58.130354Z", "url": "https://files.pythonhosted.org/packages/50/0f/6f5c7d98b66d761a6ec872737d7db56cbc2d9d6fe392201c786566cb3b17/py-ecg-detectors-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "17211dc1cbaa87fcc3e0e302d702230b", "sha256": "a2dfa578b914569d482180454f9b51aacd7c33e7e17e31d841d17cbfac0d5fe5"}, "downloads": -1, "filename": "py_ecg_detectors-1.0.2-py3.6.egg", "has_sig": false, "md5_digest": "17211dc1cbaa87fcc3e0e302d702230b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 20458, "upload_time": "2019-12-20T11:46:38", "upload_time_iso_8601": "2019-12-20T11:46:38.723783Z", "url": "https://files.pythonhosted.org/packages/c4/e0/c2d09985fb2a8749c31242b8d9618e5c2c4d19ac22b103c25bfb9dcf7f57/py_ecg_detectors-1.0.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cca532f9ea294f69354fda493e3cec8e", "sha256": "8eb0102e7bdc37a180101bb564fabcef3ae8f2c0099222137ff25b9f72fd5f05"}, "downloads": -1, "filename": "py_ecg_detectors-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cca532f9ea294f69354fda493e3cec8e", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 13718, "upload_time": "2019-12-20T11:46:50", "upload_time_iso_8601": "2019-12-20T11:46:50.190692Z", "url": "https://files.pythonhosted.org/packages/78/0e/d28df70413c9f04b9e8c1d1ea15874e71b67d0f541027324c02c1fb35509/py_ecg_detectors-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b1b73afc8c23edcfca33495ee326dac", "sha256": "297d9d509dc16f867e5a42ea17ace39258d828299797d3d68c858f366bfe836e"}, "downloads": -1, "filename": "py-ecg-detectors-1.0.2.tar.gz", "has_sig": false, "md5_digest": "8b1b73afc8c23edcfca33495ee326dac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10962, "upload_time": "2019-12-20T11:46:25", "upload_time_iso_8601": "2019-12-20T11:46:25.235654Z", "url": "https://files.pythonhosted.org/packages/fa/cc/827658ff337ff5224425e1e86d9cf92d7e0fc672d50288ffb435e4de42a5/py-ecg-detectors-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "17211dc1cbaa87fcc3e0e302d702230b", "sha256": "a2dfa578b914569d482180454f9b51aacd7c33e7e17e31d841d17cbfac0d5fe5"}, "downloads": -1, "filename": "py_ecg_detectors-1.0.2-py3.6.egg", "has_sig": false, "md5_digest": "17211dc1cbaa87fcc3e0e302d702230b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 20458, "upload_time": "2019-12-20T11:46:38", "upload_time_iso_8601": "2019-12-20T11:46:38.723783Z", "url": "https://files.pythonhosted.org/packages/c4/e0/c2d09985fb2a8749c31242b8d9618e5c2c4d19ac22b103c25bfb9dcf7f57/py_ecg_detectors-1.0.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cca532f9ea294f69354fda493e3cec8e", "sha256": "8eb0102e7bdc37a180101bb564fabcef3ae8f2c0099222137ff25b9f72fd5f05"}, "downloads": -1, "filename": "py_ecg_detectors-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "cca532f9ea294f69354fda493e3cec8e", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 13718, "upload_time": "2019-12-20T11:46:50", "upload_time_iso_8601": "2019-12-20T11:46:50.190692Z", "url": "https://files.pythonhosted.org/packages/78/0e/d28df70413c9f04b9e8c1d1ea15874e71b67d0f541027324c02c1fb35509/py_ecg_detectors-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b1b73afc8c23edcfca33495ee326dac", "sha256": "297d9d509dc16f867e5a42ea17ace39258d828299797d3d68c858f366bfe836e"}, "downloads": -1, "filename": "py-ecg-detectors-1.0.2.tar.gz", "has_sig": false, "md5_digest": "8b1b73afc8c23edcfca33495ee326dac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10962, "upload_time": "2019-12-20T11:46:25", "upload_time_iso_8601": "2019-12-20T11:46:25.235654Z", "url": "https://files.pythonhosted.org/packages/fa/cc/827658ff337ff5224425e1e86d9cf92d7e0fc672d50288ffb435e4de42a5/py-ecg-detectors-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:36 2020"}