{"info": {"author": "drymer", "author_email": "drymer@autistici.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: End Users/Desktop", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": ".. contents::\n\n1 jabbergram\n------------\n\n1.1 English\n~~~~~~~~~~~\n\n1.1.1 About\n^^^^^^^^^^^\n\nWith this program, it's possible to use a MuC ``XMPP`` room to talk to a group on ``Telegram`` and vice versa. The aim of this program is to be just a simple gateway, just pass text from one way to the other. Once it's stable, it probably won't have more improvements, since I don't need them.\n\nSince version 0.1.6, Jabbergram has HTTP Upload support. If the server supports it, it will automatically upload all the files sent to the Telegram group.\n\n1.1.2 Installation\n^^^^^^^^^^^^^^^^^^\n\nAs with any program that uses python, it should be used a virtual environment (virtualenv), but that is user selectable. It's possible to use one of the next installation methods:\n\nInstall via pip:\n\n.. code-block:: sh\n    :number-lines: 0\n\n    $ su -c \"pip3 install jabbergram\"\n\nClone the repository:\n\n.. code-block:: sh\n    :number-lines: 0\n\n    $ git clone https://git.daemons.it/drymer/jabbergram\n    $ cd jabbergram\n    $ su -c \"pip3 install -r requirements.txt\"\n    $ su -c \"python3 setup.py install\"\n\n1.1.3 Configuration\n^^^^^^^^^^^^^^^^^^^\n\nThis program is simple, it even doesn't have a ``help`` menu. First thing you need to do is to create ``Telegram`` Bot. To do so, you must have a telegram account and talk to `BotFather <https://telegram.me/botfather>`_. Then, execute:\n\n.. code-block:: sh\n    :number-lines: 0\n\n    /start\n    /newbot\n    YourNameBot # ended in bot, always\n    # then it will show your bot token, save it\n    /setprivacy\n    YourNameBot\n    # now press Disable\n\nThe ``/setprivacy`` option is to make the bot read all what it's said to him, not only when using commands. It's necessary to make ``jabbergram`` work. More info on creating ``Telegram`` bots at their `webpage <https://core.telegram.org/bots>`_.\n\nThen, you will have to create a config file. We'll call it ``config.ini``. In that file, enter the next parameters:\n\n.. code-block:: text\n    :number-lines: 0\n\n    [config]\n    jid = exampleJid@nope.org\n    password = difficultPassword\n    muc_room = exampleMuc@muc.nope.org\n    nick = jabbergram\n    token = jabbergramBotTokken\n    group = -10293943920\n\nThe only thing worth mentioning is the ``token`` section, which is said to you when creating the bot, and the ``group``, that is the ``Telegram`` group ID.\n\nThere's no easy way to see this from telegram, so you can use the separate utility called ``seeIdGroups.py``. To execute it, you only need to set the ``token`` parameter in the config file. You will need that somebody invite the bot to the group. Also, people on that group must send some messages, so the utility can grab it's id. It may take a couple. When you have the group ID you want, just press Ctrl-c, copy it to the config file (even the minus symbol), and the configuration will be done.\n\n1.1.4 Usage\n^^^^^^^^^^^\n\nThere only can be one configuration file. This is because it can only be one bot connection, when there's more than one, message are lost. Therefore, for linking more rooms you must \"link\" them in the configuration. This is done simply by hooking jabber rooms with Telegram:\n\n.. code-block:: sh\n    :number-lines: 0\n\n    [Config]\n    JID = exampleJid@nope.org\n    password = difficultPassword\n    muc_room = exampleMuc@muc.nope.org segunda@muc.sip.org\n    nick = jabbergram\n    token = jabbergramBotTokken\n    group = -10293943920 120301203\n\nThus, the example's muc \"exampleMuc@muc.nope.org\" syncs with the group \"-10293943920\" and \"segunda@muc.sip.org\" with \"120 301203\".\n\n1.1.5 License\n^^^^^^^^^^^^^\n\n.. code-block:: text\n    :number-lines: 0\n\n    This program is free software: you can redistribute it and / or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, Either version 3 of the License, or\n    (At your option) any later version.\n\n    This program is distributed in the hope That it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    Along With This Program. If not, see <http://www.gnu.org/licenses/>.\n\n1.2 Castellano\n~~~~~~~~~~~~~~\n\n1.2.1 Acerca de\n^^^^^^^^^^^^^^^\n\nCon este programa es posible utilizar una sala ``XMPP`` para hablar con un grupo de ``Telegram`` y viceversa. El objetivo de este programa es el de ser s\u00f3lo una pasarela sencilla, s\u00f3lo tiene que pasar el texto de un lado al otro. Una vez que sea estable, probablemente no tendr\u00e1 m\u00e1s mejoras, ya que yo no las necesito.\n\nDesde la versi\u00f3n 0.1.6, Jabbergram tiene soporte HTTP Upload. Si el servidor lo soporta, subir\u00e1 autom\u00e1ticamente todos los archivos enviados desde el grupo de Telegram.\n\n1.2.2 Instalaci\u00f3n\n^^^^^^^^^^^^^^^^^\n\nComo con cualquier programa escrito en ``Python``, deberia ser usado en un entorno virtual (virtualenv), pero eso queda a la elecci\u00f3n del usuario. Es posible utilizar uno de los siguientes m\u00e9todos de instalaci\u00f3n:\n\nInstalar a trav\u00e9s de ``pip``:\n\n.. code-block:: sh\n    :number-lines: 0\n\n    $ su -c \"pip3 instalar jabbergram\"\n\nClonar el repositorio:\n\n.. code-block:: sh\n    :number-lines: 0\n\n    $ git clone https://git.daemons.it/drymer/jabbergram\n    $ cd jabbergram\n    $ su -c \"pip3 instalar -r requirements.txt\"\n    $ su -c \"python3 setup.py install\"\n\n1.2.3 Configuraci\u00f3n\n^^^^^^^^^^^^^^^^^^^\n\nEste programa es simple, no tiene ni un men\u00fa de ``ayuda``. Lo primero que hay que hacer es crear el bot de ``Telegram``. Para ello, hay que tener una cuenta de ``Telegram`` y hablar con `BotFather <https://telegram.me/botfather>`_. A continuaci\u00f3n, ejecuta:\n\n.. code-block:: sh\n    :number-lines: 0\n\n    /start\n    /newbot\n    NombreDelBot # terminado en bot, siempre\n    # A continuaci\u00f3n, se mostrar\u00e1 el token del bot, hay que guardarlo\n    /setprivacy\n    NombreDelBot\n    # Ahora hay que pulsar desactivar\n\nLa opci\u00f3n ``/setprivacy`` es para hacer que el robot pueda leer todo lo que se dice en el grupo, no s\u00f3lo cuando se utilizan los comandos. Es necesario para hacer que ``jabbergram`` funcione. M\u00e1s informaci\u00f3n sobre la creaci\u00f3n los bots de ``Telegrama`` en su `p\u00e1gina web <https://core.telegram.org/bots>`_.\n\nA continuaci\u00f3n, hay que crear un archivo de configuraci\u00f3n, que llamaremos ``config.ini``. En ese archivo, introduce los siguientes par\u00e1metros:\n\n.. code-block:: text\n    :number-lines: 0\n\n    [Config]\n    JID = exampleJid@nope.org\n    password = difficultPassword\n    muc_room = exampleMuc@muc.nope.org\n    nick = jabbergram\n    token = jabbergramBotTokken\n    group = -10,293,943,920\n\nLa \u00fanica cosa que vale la pena mencionar es la secci\u00f3n del ``token`` (que es la que nos da cuando se crea el robot) y el ``group``, que es ID del grupo de ``Telegram``.\n\nNo hay manera f\u00e1cil de ver el ID desde ``Telegram``, por lo que se puede utilizar el programa llamado ``seeIdGroups.py``. Para ejecutarlo s\u00f3lo es necesario establecer el par\u00e1metro ``token`` del archivo de configuraci\u00f3n. Necesitar\u00e1s que alguien invite al bot al grupo. Adem\u00e1s, las personas de ese grupo deben enviar algunos mensajes, para que el programa pueda coger su ID. Puede llevar unos segundos el que aparezcan los mensajes. Cuando se tenga el ID de grupo que se quiere, s\u00f3lo hay que pulsar Ctrl-c, copiarlo en el archivo de configuraci\u00f3n (incluido el simbolo menos), y la configuraci\u00f3n estar\u00e1 terminada.\n\n1.2.4 Uso\n^^^^^^^^^\n\nS\u00f3lo puede haber un archivo de configuraci\u00f3n. Esto es debido a que s\u00f3lo puede haber una conexi\u00f3n del bot, cuando hay m\u00e1s de una se pierden mensajes. Por lo tanto, para linkear m\u00e1s salas hay que \"linkearlas\" en la configuraci\u00f3n. Esto se hace, simplemente, enganchando las salas de jabber con las de telegram:\n\n.. code-block:: text\n    :number-lines: 0\n\n    [Config]\n    JID = exampleJid@nope.org\n    password = difficultPassword\n    muc_room = exampleMuc@muc.nope.org segunda@muc.sip.org\n    nick = jabbergram\n    token = jabbergramBotTokken\n    group = -10293943920 120301203\n\nDe este modo, el muc \"exampleMuc@muc.nope.org\" se sincronizar\u00e1 con el grupo \"-10293943920\", y \"segunda@muc.sip.org\" con \"120301203\".\n\n1.2.5 Licencia\n^^^^^^^^^^^^^^\n\n.. code-block:: text\n    :number-lines: 0\n\n    This program is free software: you can redistribute it and / or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, Either version 3 of the License, or\n    (At your option) any later version.\n\n    This program is distributed in the hope That it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    Along With This Program. If not, see <http://www.gnu.org/licenses/>.", "description_content_type": "", "docs_url": null, "download_url": "https://git.daemons.it/drymer/jabbergram/archive/0.1.8.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://git.daemons.it/drymer/jabbergram/about/", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "jabbergram", "package_url": "https://pypi.org/project/jabbergram/", "platform": "", "project_url": "https://pypi.org/project/jabbergram/", "project_urls": {"Download": "https://git.daemons.it/drymer/jabbergram/archive/0.1.8.tar.gz", "Homepage": "http://git.daemons.it/drymer/jabbergram/about/"}, "release_url": "https://pypi.org/project/jabbergram/0.1.8/", "requires_dist": null, "requires_python": "", "summary": "XMPP/Jabber - Telegram Gateway.", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#jabbergram\" id=\"id2\" rel=\"nofollow\">1 jabbergram</a><ul>\n<li><a href=\"#english\" id=\"id3\" rel=\"nofollow\">1.1 English</a><ul>\n<li><a href=\"#about\" id=\"id4\" rel=\"nofollow\">1.1.1 About</a></li>\n<li><a href=\"#installation\" id=\"id5\" rel=\"nofollow\">1.1.2 Installation</a></li>\n<li><a href=\"#configuration\" id=\"id6\" rel=\"nofollow\">1.1.3 Configuration</a></li>\n<li><a href=\"#usage\" id=\"id7\" rel=\"nofollow\">1.1.4 Usage</a></li>\n<li><a href=\"#license\" id=\"id8\" rel=\"nofollow\">1.1.5 License</a></li>\n</ul>\n</li>\n<li><a href=\"#castellano\" id=\"id9\" rel=\"nofollow\">1.2 Castellano</a><ul>\n<li><a href=\"#acerca-de\" id=\"id10\" rel=\"nofollow\">1.2.1 Acerca de</a></li>\n<li><a href=\"#instalacion\" id=\"id11\" rel=\"nofollow\">1.2.2 Instalaci\u00f3n</a></li>\n<li><a href=\"#configuracion\" id=\"id12\" rel=\"nofollow\">1.2.3 Configuraci\u00f3n</a></li>\n<li><a href=\"#uso\" id=\"id13\" rel=\"nofollow\">1.2.4 Uso</a></li>\n<li><a href=\"#licencia\" id=\"id14\" rel=\"nofollow\">1.2.5 Licencia</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"jabbergram\">\n<h2><a href=\"#id2\" rel=\"nofollow\">1 jabbergram</a></h2>\n<div id=\"english\">\n<h3><a href=\"#id3\" rel=\"nofollow\">1.1 English</a></h3>\n<div id=\"about\">\n<h4><a href=\"#id4\" rel=\"nofollow\">1.1.1 About</a></h4>\n<p>With this program, it\u2019s possible to use a MuC <tt>XMPP</tt> room to talk to a group on <tt>Telegram</tt> and vice versa. The aim of this program is to be just a simple gateway, just pass text from one way to the other. Once it\u2019s stable, it probably won\u2019t have more improvements, since I don\u2019t need them.</p>\n<p>Since version 0.1.6, Jabbergram has HTTP Upload support. If the server supports it, it will automatically upload all the files sent to the Telegram group.</p>\n</div>\n<div id=\"installation\">\n<h4><a href=\"#id5\" rel=\"nofollow\">1.1.2 Installation</a></h4>\n<p>As with any program that uses python, it should be used a virtual environment (virtualenv), but that is user selectable. It\u2019s possible to use one of the next installation methods:</p>\n<p>Install via pip:</p>\n<pre><span class=\"ln\">0 </span>$ su -c <span class=\"s2\">\"pip3 install jabbergram\"</span>\n</pre>\n<p>Clone the repository:</p>\n<pre><span class=\"ln\">0 </span>$ git clone https://git.daemons.it/drymer/jabbergram\n<span class=\"ln\">1 </span>$ <span class=\"nb\">cd</span> jabbergram\n<span class=\"ln\">2 </span>$ su -c <span class=\"s2\">\"pip3 install -r requirements.txt\"</span>\n<span class=\"ln\">3 </span>$ su -c <span class=\"s2\">\"python3 setup.py install\"</span>\n</pre>\n</div>\n<div id=\"configuration\">\n<h4><a href=\"#id6\" rel=\"nofollow\">1.1.3 Configuration</a></h4>\n<p>This program is simple, it even doesn\u2019t have a <tt>help</tt> menu. First thing you need to do is to create <tt>Telegram</tt> Bot. To do so, you must have a telegram account and talk to <a href=\"https://telegram.me/botfather\" rel=\"nofollow\">BotFather</a>. Then, execute:</p>\n<pre><span class=\"ln\">0 </span>/start\n<span class=\"ln\">1 </span>/newbot\n<span class=\"ln\">2 </span>YourNameBot <span class=\"c1\"># ended in bot, always\n</span><span class=\"ln\">3 </span><span class=\"c1\"># then it will show your bot token, save it\n</span><span class=\"ln\">4 </span><span class=\"c1\"></span>/setprivacy\n<span class=\"ln\">5 </span>YourNameBot\n<span class=\"ln\">6 </span><span class=\"c1\"># now press Disable</span>\n</pre>\n<p>The <tt>/setprivacy</tt> option is to make the bot read all what it\u2019s said to him, not only when using commands. It\u2019s necessary to make <tt>jabbergram</tt> work. More info on creating <tt>Telegram</tt> bots at their <a href=\"https://core.telegram.org/bots\" rel=\"nofollow\">webpage</a>.</p>\n<p>Then, you will have to create a config file. We\u2019ll call it <tt>config.ini</tt>. In that file, enter the next parameters:</p>\n<pre><span class=\"ln\">0 </span>[config]\n<span class=\"ln\">1 </span>jid = exampleJid@nope.org\n<span class=\"ln\">2 </span>password = difficultPassword\n<span class=\"ln\">3 </span>muc_room = exampleMuc@muc.nope.org\n<span class=\"ln\">4 </span>nick = jabbergram\n<span class=\"ln\">5 </span>token = jabbergramBotTokken\n<span class=\"ln\">6 </span>group = -10293943920\n</pre>\n<p>The only thing worth mentioning is the <tt>token</tt> section, which is said to you when creating the bot, and the <tt>group</tt>, that is the <tt>Telegram</tt> group ID.</p>\n<p>There\u2019s no easy way to see this from telegram, so you can use the separate utility called <tt>seeIdGroups.py</tt>. To execute it, you only need to set the <tt>token</tt> parameter in the config file. You will need that somebody invite the bot to the group. Also, people on that group must send some messages, so the utility can grab it\u2019s id. It may take a couple. When you have the group ID you want, just press Ctrl-c, copy it to the config file (even the minus symbol), and the configuration will be done.</p>\n</div>\n<div id=\"usage\">\n<h4><a href=\"#id7\" rel=\"nofollow\">1.1.4 Usage</a></h4>\n<p>There only can be one configuration file. This is because it can only be one bot connection, when there\u2019s more than one, message are lost. Therefore, for linking more rooms you must \u201clink\u201d them in the configuration. This is done simply by hooking jabber rooms with Telegram:</p>\n<pre><span class=\"ln\">0 </span><span class=\"o\">[</span>Config<span class=\"o\">]</span>\n<span class=\"ln\">1 </span><span class=\"nv\">JID</span> <span class=\"o\">=</span> exampleJid@nope.org\n<span class=\"ln\">2 </span><span class=\"nv\">password</span> <span class=\"o\">=</span> difficultPassword\n<span class=\"ln\">3 </span><span class=\"nv\">muc_room</span> <span class=\"o\">=</span> exampleMuc@muc.nope.org segunda@muc.sip.org\n<span class=\"ln\">4 </span><span class=\"nv\">nick</span> <span class=\"o\">=</span> jabbergram\n<span class=\"ln\">5 </span><span class=\"nv\">token</span> <span class=\"o\">=</span> jabbergramBotTokken\n<span class=\"ln\">6 </span><span class=\"nv\">group</span> <span class=\"o\">=</span> -10293943920 <span class=\"m\">120301203</span>\n</pre>\n<p>Thus, the example\u2019s muc \u201c<a href=\"mailto:exampleMuc%40muc.nope.org\">exampleMuc<span>@</span>muc<span>.</span>nope<span>.</span>org</a>\u201d syncs with the group \u201c-10293943920\u201d and \u201c<a href=\"mailto:segunda%40muc.sip.org\">segunda<span>@</span>muc<span>.</span>sip<span>.</span>org</a>\u201d with \u201c120 301203\u201d.</p>\n</div>\n<div id=\"license\">\n<h4><a href=\"#id8\" rel=\"nofollow\">1.1.5 License</a></h4>\n<pre><span class=\"ln\"> 0 </span>This program is free software: you can redistribute it and / or modify\n<span class=\"ln\"> 1 </span>it under the terms of the GNU General Public License as published by\n<span class=\"ln\"> 2 </span>the Free Software Foundation, Either version 3 of the License, or\n<span class=\"ln\"> 3 </span>(At your option) any later version.\n<span class=\"ln\"> 4 </span>\n<span class=\"ln\"> 5 </span>This program is distributed in the hope That it will be useful,\n<span class=\"ln\"> 6 </span>but WITHOUT ANY WARRANTY; without even the implied warranty of\n<span class=\"ln\"> 7 </span>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n<span class=\"ln\"> 8 </span>GNU General Public License for more details.\n<span class=\"ln\"> 9 </span>\n<span class=\"ln\">10 </span>You should have received a copy of the GNU General Public License\n<span class=\"ln\">11 </span>Along With This Program. If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</pre>\n</div>\n</div>\n<div id=\"castellano\">\n<h3><a href=\"#id9\" rel=\"nofollow\">1.2 Castellano</a></h3>\n<div id=\"acerca-de\">\n<h4><a href=\"#id10\" rel=\"nofollow\">1.2.1 Acerca de</a></h4>\n<p>Con este programa es posible utilizar una sala <tt>XMPP</tt> para hablar con un grupo de <tt>Telegram</tt> y viceversa. El objetivo de este programa es el de ser s\u00f3lo una pasarela sencilla, s\u00f3lo tiene que pasar el texto de un lado al otro. Una vez que sea estable, probablemente no tendr\u00e1 m\u00e1s mejoras, ya que yo no las necesito.</p>\n<p>Desde la versi\u00f3n 0.1.6, Jabbergram tiene soporte HTTP Upload. Si el servidor lo soporta, subir\u00e1 autom\u00e1ticamente todos los archivos enviados desde el grupo de Telegram.</p>\n</div>\n<div id=\"instalacion\">\n<h4><a href=\"#id11\" rel=\"nofollow\">1.2.2 Instalaci\u00f3n</a></h4>\n<p>Como con cualquier programa escrito en <tt>Python</tt>, deberia ser usado en un entorno virtual (virtualenv), pero eso queda a la elecci\u00f3n del usuario. Es posible utilizar uno de los siguientes m\u00e9todos de instalaci\u00f3n:</p>\n<p>Instalar a trav\u00e9s de <tt>pip</tt>:</p>\n<pre><span class=\"ln\">0 </span>$ su -c <span class=\"s2\">\"pip3 instalar jabbergram\"</span>\n</pre>\n<p>Clonar el repositorio:</p>\n<pre><span class=\"ln\">0 </span>$ git clone https://git.daemons.it/drymer/jabbergram\n<span class=\"ln\">1 </span>$ <span class=\"nb\">cd</span> jabbergram\n<span class=\"ln\">2 </span>$ su -c <span class=\"s2\">\"pip3 instalar -r requirements.txt\"</span>\n<span class=\"ln\">3 </span>$ su -c <span class=\"s2\">\"python3 setup.py install\"</span>\n</pre>\n</div>\n<div id=\"configuracion\">\n<h4><a href=\"#id12\" rel=\"nofollow\">1.2.3 Configuraci\u00f3n</a></h4>\n<p>Este programa es simple, no tiene ni un men\u00fa de <tt>ayuda</tt>. Lo primero que hay que hacer es crear el bot de <tt>Telegram</tt>. Para ello, hay que tener una cuenta de <tt>Telegram</tt> y hablar con <a href=\"https://telegram.me/botfather\" rel=\"nofollow\">BotFather</a>. A continuaci\u00f3n, ejecuta:</p>\n<pre><span class=\"ln\">0 </span>/start\n<span class=\"ln\">1 </span>/newbot\n<span class=\"ln\">2 </span>NombreDelBot <span class=\"c1\"># terminado en bot, siempre\n</span><span class=\"ln\">3 </span><span class=\"c1\"># A continuaci\u00f3n, se mostrar\u00e1 el token del bot, hay que guardarlo\n</span><span class=\"ln\">4 </span><span class=\"c1\"></span>/setprivacy\n<span class=\"ln\">5 </span>NombreDelBot\n<span class=\"ln\">6 </span><span class=\"c1\"># Ahora hay que pulsar desactivar</span>\n</pre>\n<p>La opci\u00f3n <tt>/setprivacy</tt> es para hacer que el robot pueda leer todo lo que se dice en el grupo, no s\u00f3lo cuando se utilizan los comandos. Es necesario para hacer que <tt>jabbergram</tt> funcione. M\u00e1s informaci\u00f3n sobre la creaci\u00f3n los bots de <tt>Telegrama</tt> en su <a href=\"https://core.telegram.org/bots\" rel=\"nofollow\">p\u00e1gina web</a>.</p>\n<p>A continuaci\u00f3n, hay que crear un archivo de configuraci\u00f3n, que llamaremos <tt>config.ini</tt>. En ese archivo, introduce los siguientes par\u00e1metros:</p>\n<pre><span class=\"ln\">0 </span>[Config]\n<span class=\"ln\">1 </span>JID = exampleJid@nope.org\n<span class=\"ln\">2 </span>password = difficultPassword\n<span class=\"ln\">3 </span>muc_room = exampleMuc@muc.nope.org\n<span class=\"ln\">4 </span>nick = jabbergram\n<span class=\"ln\">5 </span>token = jabbergramBotTokken\n<span class=\"ln\">6 </span>group = -10,293,943,920\n</pre>\n<p>La \u00fanica cosa que vale la pena mencionar es la secci\u00f3n del <tt>token</tt> (que es la que nos da cuando se crea el robot) y el <tt>group</tt>, que es ID del grupo de <tt>Telegram</tt>.</p>\n<p>No hay manera f\u00e1cil de ver el ID desde <tt>Telegram</tt>, por lo que se puede utilizar el programa llamado <tt>seeIdGroups.py</tt>. Para ejecutarlo s\u00f3lo es necesario establecer el par\u00e1metro <tt>token</tt> del archivo de configuraci\u00f3n. Necesitar\u00e1s que alguien invite al bot al grupo. Adem\u00e1s, las personas de ese grupo deben enviar algunos mensajes, para que el programa pueda coger su ID. Puede llevar unos segundos el que aparezcan los mensajes. Cuando se tenga el ID de grupo que se quiere, s\u00f3lo hay que pulsar Ctrl-c, copiarlo en el archivo de configuraci\u00f3n (incluido el simbolo menos), y la configuraci\u00f3n estar\u00e1 terminada.</p>\n</div>\n<div id=\"uso\">\n<h4><a href=\"#id13\" rel=\"nofollow\">1.2.4 Uso</a></h4>\n<p>S\u00f3lo puede haber un archivo de configuraci\u00f3n. Esto es debido a que s\u00f3lo puede haber una conexi\u00f3n del bot, cuando hay m\u00e1s de una se pierden mensajes. Por lo tanto, para linkear m\u00e1s salas hay que \u201clinkearlas\u201d en la configuraci\u00f3n. Esto se hace, simplemente, enganchando las salas de jabber con las de telegram:</p>\n<pre><span class=\"ln\">0 </span>[Config]\n<span class=\"ln\">1 </span>JID = exampleJid@nope.org\n<span class=\"ln\">2 </span>password = difficultPassword\n<span class=\"ln\">3 </span>muc_room = exampleMuc@muc.nope.org segunda@muc.sip.org\n<span class=\"ln\">4 </span>nick = jabbergram\n<span class=\"ln\">5 </span>token = jabbergramBotTokken\n<span class=\"ln\">6 </span>group = -10293943920 120301203\n</pre>\n<p>De este modo, el muc \u201c<a href=\"mailto:exampleMuc%40muc.nope.org\">exampleMuc<span>@</span>muc<span>.</span>nope<span>.</span>org</a>\u201d se sincronizar\u00e1 con el grupo \u201c-10293943920\u201d, y \u201c<a href=\"mailto:segunda%40muc.sip.org\">segunda<span>@</span>muc<span>.</span>sip<span>.</span>org</a>\u201d con \u201c120301203\u201d.</p>\n</div>\n<div id=\"licencia\">\n<h4><a href=\"#id14\" rel=\"nofollow\">1.2.5 Licencia</a></h4>\n<pre><span class=\"ln\"> 0 </span>This program is free software: you can redistribute it and / or modify\n<span class=\"ln\"> 1 </span>it under the terms of the GNU General Public License as published by\n<span class=\"ln\"> 2 </span>the Free Software Foundation, Either version 3 of the License, or\n<span class=\"ln\"> 3 </span>(At your option) any later version.\n<span class=\"ln\"> 4 </span>\n<span class=\"ln\"> 5 </span>This program is distributed in the hope That it will be useful,\n<span class=\"ln\"> 6 </span>but WITHOUT ANY WARRANTY; without even the implied warranty of\n<span class=\"ln\"> 7 </span>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n<span class=\"ln\"> 8 </span>GNU General Public License for more details.\n<span class=\"ln\"> 9 </span>\n<span class=\"ln\">10 </span>You should have received a copy of the GNU General Public License\n<span class=\"ln\">11 </span>Along With This Program. If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4462896, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "16b81d5d2d01610ac7a9731e24c087c9", "sha256": "cbaaf52dc6be7dfba4bf289554c716f036d86a225337d5fd2cf55afdbe5b3833"}, "downloads": -1, "filename": "jabbergram-0.1.tar.gz", "has_sig": false, "md5_digest": "16b81d5d2d01610ac7a9731e24c087c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6095, "upload_time": "2016-05-08T16:54:02", "upload_time_iso_8601": "2016-05-08T16:54:02.852648Z", "url": "https://files.pythonhosted.org/packages/29/4f/c3c08ef8a5a514763e74536692e1259c6d973a5df05d05b26a49d6ce9e93/jabbergram-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8fa368ee012482c11d45e47ee1506115", "sha256": "a9a601323a52eed0d7ae72f5d0e873a4767c617a4bfa8ec668e71e9b949f25b9"}, "downloads": -1, "filename": "jabbergram-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8fa368ee012482c11d45e47ee1506115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6063, "upload_time": "2016-05-08T16:59:40", "upload_time_iso_8601": "2016-05-08T16:59:40.158024Z", "url": "https://files.pythonhosted.org/packages/56/95/9a2d5d67a9556c47d0c7375dd9b876620fa7b4a6db5294298f65cbcef86c/jabbergram-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c3e4e45a465c108b15eb8ec730a0832a", "sha256": "c573b26e6cae2ff6adbdd84d53f295c1cbe55f7f6180fdfb0abeea4887d40ac0"}, "downloads": -1, "filename": "jabbergram-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c3e4e45a465c108b15eb8ec730a0832a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6037, "upload_time": "2016-05-08T21:15:31", "upload_time_iso_8601": "2016-05-08T21:15:31.081994Z", "url": "https://files.pythonhosted.org/packages/fa/56/afa850d32c5a4e80a5822e42d58e1ab205adf847d8fa5f6d9146562fea7c/jabbergram-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b0aec056abd8441f57199262190f844c", "sha256": "360ce3edeeec6a00213b82e3fba7b82853c5b6b0728d750dcaba205f802175b0"}, "downloads": -1, "filename": "jabbergram-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b0aec056abd8441f57199262190f844c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6070, "upload_time": "2016-05-08T22:50:14", "upload_time_iso_8601": "2016-05-08T22:50:14.825133Z", "url": "https://files.pythonhosted.org/packages/52/67/3f9bd2586e166aa76432b238199c38e8e6eec1b9666c9831bdc813acffa0/jabbergram-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "fc3150d86d9a49238ac17e25af0cff98", "sha256": "d39525d0a1b0ec784e74affa52cef649e88a1b1a43d709abd2e7523e5c5e412c"}, "downloads": -1, "filename": "jabbergram-0.1.5.tar.gz", "has_sig": false, "md5_digest": "fc3150d86d9a49238ac17e25af0cff98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6084, "upload_time": "2016-06-04T17:28:23", "upload_time_iso_8601": "2016-06-04T17:28:23.787892Z", "url": "https://files.pythonhosted.org/packages/db/16/a5e4c9496f42072c9dd24c27ad94cc1592b9eb84161e43b91b1dd3bd999b/jabbergram-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "23894456c60b64c5b0c4e036accde8ed", "sha256": "9e1558f0f33eec10c2d867d559c8662dd7db18e0bcd7a843cf3625bb9cb45ceb"}, "downloads": -1, "filename": "jabbergram-0.1.6.tar.gz", "has_sig": false, "md5_digest": "23894456c60b64c5b0c4e036accde8ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7991, "upload_time": "2016-10-13T20:25:47", "upload_time_iso_8601": "2016-10-13T20:25:47.941066Z", "url": "https://files.pythonhosted.org/packages/76/be/0c0f6dcd1dba39077d25eb0b28b406e88fb310c64d1adae10d855b537a1b/jabbergram-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "47ad25da8fdf2984e86384f860a418ce", "sha256": "9a8bcb1180571592a8adba99ad90d83ad556944718fb8e7d73d2dc8cea3c62f3"}, "downloads": -1, "filename": "jabbergram-0.1.7.tar.gz", "has_sig": false, "md5_digest": "47ad25da8fdf2984e86384f860a418ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8589, "upload_time": "2017-07-21T21:00:09", "upload_time_iso_8601": "2017-07-21T21:00:09.544179Z", "url": "https://files.pythonhosted.org/packages/07/21/8868c655d70b4c32f6b24dc6b3e2bf25312e12b7e002a6d15a24b9299530/jabbergram-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "abd551880e1067a86372de4eb1cce0e0", "sha256": "91b08eb40db17ce5f9ace2b542cf9e49394a9c5b67572bc95053fc9585d2ef53"}, "downloads": -1, "filename": "jabbergram-0.1.8.tar.gz", "has_sig": false, "md5_digest": "abd551880e1067a86372de4eb1cce0e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8589, "upload_time": "2018-11-07T20:18:12", "upload_time_iso_8601": "2018-11-07T20:18:12.306292Z", "url": "https://files.pythonhosted.org/packages/3e/53/579de589e5142c466e3d3a79451844e54201b5bd0cc8f72a481284b78893/jabbergram-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "abd551880e1067a86372de4eb1cce0e0", "sha256": "91b08eb40db17ce5f9ace2b542cf9e49394a9c5b67572bc95053fc9585d2ef53"}, "downloads": -1, "filename": "jabbergram-0.1.8.tar.gz", "has_sig": false, "md5_digest": "abd551880e1067a86372de4eb1cce0e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8589, "upload_time": "2018-11-07T20:18:12", "upload_time_iso_8601": "2018-11-07T20:18:12.306292Z", "url": "https://files.pythonhosted.org/packages/3e/53/579de589e5142c466e3d3a79451844e54201b5bd0cc8f72a481284b78893/jabbergram-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:24 2020"}