{"info": {"author": "Bruno Bord", "author_email": "bruno@jehaisleprintemps.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Data files for Skyfield\n\n[![Build Status](https://travis-ci.org/brunobord/skyfield-data.svg?branch=master)](https://travis-ci.org/brunobord/skyfield-data)\n\n## Rationale\n\n[Skyfield](https://rhodesmill.org/skyfield/) is a Python library for astronomical computations. It depends on various data files to accurately compute moon phases, planet positions, etc.\n\nSeveral issues are raised by these data files:\n\n* If they're not found in the path of the ``Loader``, they're **downloaded at runtime**. Depending on the archive you're requesting, some files might be very large, causing a long delay (directly related to your network bandwidth). In the case of a web server app, you'd cause a timeout on client's end.\n* They come mainly from 3 sources: the USNO (US Navy), Paris (Meudon) Observatory, and NASA JPL. **If one of them is temporarily unavailable**, you couldn't perform any computation.\n* In some countries, or behind some filtering proxies, the USNO is considered as a military website, and thus is **blocked**.\n* These files have **an expiration date** (in a more or less distant future). As a consequence, even if the files are already downloaded in the right path, at each runtime you could possibly have to download one or more files before making any computation using them.\n\n### Currently known expiration dates\n\n|      File       |    Date    |\n|:---------------:|:----------:|\n|   deltat.data   | 2021-02-01 |\n| Leap_Second.dat | 2021-01-27 |\n|  deltat.preds   | 2021-01-01 |\n|    de421.bsp    | 2053-10-08 |\n\n\n## Goal for this project\n\n* Providing at least the most common of these assets in Python Package.\n* Make regular releases to refresh the files before they expire.\n* Provide a warning / logging mechanism when the files are about to expire (or when they are outdated) to still allow you to compute things with the loaded assets, but being informed you need to upgrade.\n\nThis way, you could **install or upgrade** this data package via ``pip``.\n\nOnce all the files are on your disk space, you can instantiate your ``skyfield`` loader pointing at their path, without having to worry about anything.\n\n## Usage\n\nInstall the packages using:\n\n```sh\npip install skyfield skyfield-data\n```\n\nTo create a custom Skyfield loader, use the following code:\n\n```python\nfrom skyfield_data import get_skyfield_data_path\nfrom skyfield.api import Loader\nload = Loader(get_skyfield_data_path())\nplanets = load('de421.bsp')  # this command won't download this file\nts = load.timescale()  # this command won't download the deltat + Leap Second files\n```\n\nIf you want to make sure that the data files would **never** be downloaded, you can also use the ``expire`` option like this:\n\n```python\nload = Loader(get_skyfield_data_path(), expire=False)\n```\n\nWhenever a file contained in the catalog has expired, you're going to receive a warning when loading the `skyfield-data` path:\n\n```python\n>>> from skyfield_data import get_skyfield_data_path\n>>> from skyfield.api import Loader\n>>> load = Loader(get_skyfield_data_path())\n/home/[redacted]/skyfield_data/expirations.py:25: RuntimeWarning: The file de421.bsp has expired. Please upgrade your version of `skyfield-data` or expect computation errors\n  RuntimeWarning\n```\n\nBy default, the loading isn't blocked, but it's strongly recommended to upgrade to a more recent version, to make sure you're not going to make wrong astronomical computations.\n\n### Custom limit\n\nBy default, the ``RuntimeWarning`` is raised when the file **has** expired. You may want to be aware of this warning **in advance**, that is to say a few days or weeks before, in order to eventually upgrade your version of ``skyfield-data``.\n\nIn order to trigger this warning, you can use the ``expiration_limit`` argument, like this:\n\n```python\n>>> from skyfield_data import get_skyfield_data_path\n>>> from skyfield.api import Loader\n>>> load = Loader(get_skyfield_data_path(expiration_limit=30))\n/home/[redacted]/skyfield_data/expirations.py:25: RuntimeWarning: The file de421.bsp would expire in less than 30 days. Please upgrade your version of `skyfield-data` or expect computation errors\n  RuntimeWarning\n```\n\n**Note:** The ``expiration_limit`` argument should be a positive integer (or zero).\n\n## Developers\n\nWe're providing a ``Makefile`` with basic targets to play around with the toolkit. use ``make help`` to get more details.\n\nIn order to be able to run the `download.py` script, we recommend to run it **from a virtualenv** where you'd have installed the \"dev\" dependencies, using:\n\n```sh\nmake install-dev\n```\n\n*Note:* This project is, and should be compatible with Python 2.6/2.7 and Python 3.5+, to be kept the same Python compatiblity that `skyfield` has.\n\n\n## Copyright\n\n### Data files\n\n* `de421.bsp` is provided by the *Jet Propulsion Laboratory*,\n* `deltat.data` and `deltat.preds` are provided by the *United States Naval Observatory*,\n* `Leap_Second.dat` is provided by the *International Earth Rotation and Reference Systems Service*.\n\n### Software\n\nThis Python Package code is published under the terms of the MIT license. See the ``COPYING`` file for more details.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brunobord/skyfield-data", "keywords": "astronomy science", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "skyfield-data", "package_url": "https://pypi.org/project/skyfield-data/", "platform": "any", "project_url": "https://pypi.org/project/skyfield-data/", "project_urls": {"Homepage": "https://github.com/brunobord/skyfield-data"}, "release_url": "https://pypi.org/project/skyfield-data/1.0.0/", "requires_dist": null, "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "summary": "Data package for Skyfield", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Data files for Skyfield</h1>\n<p><a href=\"https://travis-ci.org/brunobord/skyfield-data\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96073a4fc4efb0c012f040fb9ef355eed8652605/68747470733a2f2f7472617669732d63692e6f72672f6272756e6f626f72642f736b796669656c642d646174612e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Rationale</h2>\n<p><a href=\"https://rhodesmill.org/skyfield/\" rel=\"nofollow\">Skyfield</a> is a Python library for astronomical computations. It depends on various data files to accurately compute moon phases, planet positions, etc.</p>\n<p>Several issues are raised by these data files:</p>\n<ul>\n<li>If they're not found in the path of the <code>Loader</code>, they're <strong>downloaded at runtime</strong>. Depending on the archive you're requesting, some files might be very large, causing a long delay (directly related to your network bandwidth). In the case of a web server app, you'd cause a timeout on client's end.</li>\n<li>They come mainly from 3 sources: the USNO (US Navy), Paris (Meudon) Observatory, and NASA JPL. <strong>If one of them is temporarily unavailable</strong>, you couldn't perform any computation.</li>\n<li>In some countries, or behind some filtering proxies, the USNO is considered as a military website, and thus is <strong>blocked</strong>.</li>\n<li>These files have <strong>an expiration date</strong> (in a more or less distant future). As a consequence, even if the files are already downloaded in the right path, at each runtime you could possibly have to download one or more files before making any computation using them.</li>\n</ul>\n<h3>Currently known expiration dates</h3>\n<table>\n<thead>\n<tr>\n<th align=\"center\">File</th>\n<th align=\"center\">Date</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">deltat.data</td>\n<td align=\"center\">2021-02-01</td>\n</tr>\n<tr>\n<td align=\"center\">Leap_Second.dat</td>\n<td align=\"center\">2021-01-27</td>\n</tr>\n<tr>\n<td align=\"center\">deltat.preds</td>\n<td align=\"center\">2021-01-01</td>\n</tr>\n<tr>\n<td align=\"center\">de421.bsp</td>\n<td align=\"center\">2053-10-08</td>\n</tr></tbody></table>\n<h2>Goal for this project</h2>\n<ul>\n<li>Providing at least the most common of these assets in Python Package.</li>\n<li>Make regular releases to refresh the files before they expire.</li>\n<li>Provide a warning / logging mechanism when the files are about to expire (or when they are outdated) to still allow you to compute things with the loaded assets, but being informed you need to upgrade.</li>\n</ul>\n<p>This way, you could <strong>install or upgrade</strong> this data package via <code>pip</code>.</p>\n<p>Once all the files are on your disk space, you can instantiate your <code>skyfield</code> loader pointing at their path, without having to worry about anything.</p>\n<h2>Usage</h2>\n<p>Install the packages using:</p>\n<pre>pip install skyfield skyfield-data\n</pre>\n<p>To create a custom Skyfield loader, use the following code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">skyfield_data</span> <span class=\"kn\">import</span> <span class=\"n\">get_skyfield_data_path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">skyfield.api</span> <span class=\"kn\">import</span> <span class=\"n\">Loader</span>\n<span class=\"n\">load</span> <span class=\"o\">=</span> <span class=\"n\">Loader</span><span class=\"p\">(</span><span class=\"n\">get_skyfield_data_path</span><span class=\"p\">())</span>\n<span class=\"n\">planets</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'de421.bsp'</span><span class=\"p\">)</span>  <span class=\"c1\"># this command won't download this file</span>\n<span class=\"n\">ts</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"o\">.</span><span class=\"n\">timescale</span><span class=\"p\">()</span>  <span class=\"c1\"># this command won't download the deltat + Leap Second files</span>\n</pre>\n<p>If you want to make sure that the data files would <strong>never</strong> be downloaded, you can also use the <code>expire</code> option like this:</p>\n<pre><span class=\"n\">load</span> <span class=\"o\">=</span> <span class=\"n\">Loader</span><span class=\"p\">(</span><span class=\"n\">get_skyfield_data_path</span><span class=\"p\">(),</span> <span class=\"n\">expire</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Whenever a file contained in the catalog has expired, you're going to receive a warning when loading the <code>skyfield-data</code> path:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">skyfield_data</span> <span class=\"kn\">import</span> <span class=\"n\">get_skyfield_data_path</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">skyfield.api</span> <span class=\"kn\">import</span> <span class=\"n\">Loader</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">load</span> <span class=\"o\">=</span> <span class=\"n\">Loader</span><span class=\"p\">(</span><span class=\"n\">get_skyfield_data_path</span><span class=\"p\">())</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"p\">[</span><span class=\"n\">redacted</span><span class=\"p\">]</span><span class=\"o\">/</span><span class=\"n\">skyfield_data</span><span class=\"o\">/</span><span class=\"n\">expirations</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">25</span><span class=\"p\">:</span> <span class=\"ne\">RuntimeWarning</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">file</span> <span class=\"n\">de421</span><span class=\"o\">.</span><span class=\"n\">bsp</span> <span class=\"n\">has</span> <span class=\"n\">expired</span><span class=\"o\">.</span> <span class=\"n\">Please</span> <span class=\"n\">upgrade</span> <span class=\"n\">your</span> <span class=\"n\">version</span> <span class=\"n\">of</span> <span class=\"err\">`</span><span class=\"n\">skyfield</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"err\">`</span> <span class=\"ow\">or</span> <span class=\"n\">expect</span> <span class=\"n\">computation</span> <span class=\"n\">errors</span>\n  <span class=\"ne\">RuntimeWarning</span>\n</pre>\n<p>By default, the loading isn't blocked, but it's strongly recommended to upgrade to a more recent version, to make sure you're not going to make wrong astronomical computations.</p>\n<h3>Custom limit</h3>\n<p>By default, the <code>RuntimeWarning</code> is raised when the file <strong>has</strong> expired. You may want to be aware of this warning <strong>in advance</strong>, that is to say a few days or weeks before, in order to eventually upgrade your version of <code>skyfield-data</code>.</p>\n<p>In order to trigger this warning, you can use the <code>expiration_limit</code> argument, like this:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">skyfield_data</span> <span class=\"kn\">import</span> <span class=\"n\">get_skyfield_data_path</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">skyfield.api</span> <span class=\"kn\">import</span> <span class=\"n\">Loader</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">load</span> <span class=\"o\">=</span> <span class=\"n\">Loader</span><span class=\"p\">(</span><span class=\"n\">get_skyfield_data_path</span><span class=\"p\">(</span><span class=\"n\">expiration_limit</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">))</span>\n<span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"p\">[</span><span class=\"n\">redacted</span><span class=\"p\">]</span><span class=\"o\">/</span><span class=\"n\">skyfield_data</span><span class=\"o\">/</span><span class=\"n\">expirations</span><span class=\"o\">.</span><span class=\"n\">py</span><span class=\"p\">:</span><span class=\"mi\">25</span><span class=\"p\">:</span> <span class=\"ne\">RuntimeWarning</span><span class=\"p\">:</span> <span class=\"n\">The</span> <span class=\"n\">file</span> <span class=\"n\">de421</span><span class=\"o\">.</span><span class=\"n\">bsp</span> <span class=\"n\">would</span> <span class=\"n\">expire</span> <span class=\"ow\">in</span> <span class=\"n\">less</span> <span class=\"n\">than</span> <span class=\"mi\">30</span> <span class=\"n\">days</span><span class=\"o\">.</span> <span class=\"n\">Please</span> <span class=\"n\">upgrade</span> <span class=\"n\">your</span> <span class=\"n\">version</span> <span class=\"n\">of</span> <span class=\"err\">`</span><span class=\"n\">skyfield</span><span class=\"o\">-</span><span class=\"n\">data</span><span class=\"err\">`</span> <span class=\"ow\">or</span> <span class=\"n\">expect</span> <span class=\"n\">computation</span> <span class=\"n\">errors</span>\n  <span class=\"ne\">RuntimeWarning</span>\n</pre>\n<p><strong>Note:</strong> The <code>expiration_limit</code> argument should be a positive integer (or zero).</p>\n<h2>Developers</h2>\n<p>We're providing a <code>Makefile</code> with basic targets to play around with the toolkit. use <code>make help</code> to get more details.</p>\n<p>In order to be able to run the <code>download.py</code> script, we recommend to run it <strong>from a virtualenv</strong> where you'd have installed the \"dev\" dependencies, using:</p>\n<pre>make install-dev\n</pre>\n<p><em>Note:</em> This project is, and should be compatible with Python 2.6/2.7 and Python 3.5+, to be kept the same Python compatiblity that <code>skyfield</code> has.</p>\n<h2>Copyright</h2>\n<h3>Data files</h3>\n<ul>\n<li><code>de421.bsp</code> is provided by the <em>Jet Propulsion Laboratory</em>,</li>\n<li><code>deltat.data</code> and <code>deltat.preds</code> are provided by the <em>United States Naval Observatory</em>,</li>\n<li><code>Leap_Second.dat</code> is provided by the <em>International Earth Rotation and Reference Systems Service</em>.</li>\n</ul>\n<h3>Software</h3>\n<p>This Python Package code is published under the terms of the MIT license. See the <code>COPYING</code> file for more details.</p>\n\n          </div>"}, "last_serial": 7170356, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9ec4f6aef136d9f293196301c3145bb8", "sha256": "e2f65b0666f6c584ccb38afb994e81dc32aed954f077ed7820884182635ffd2b"}, "downloads": -1, "filename": "skyfield_data-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9ec4f6aef136d9f293196301c3145bb8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.3", "size": 15953897, "upload_time": "2019-07-29T15:11:05", "upload_time_iso_8601": "2019-07-29T15:11:05.230820Z", "url": "https://files.pythonhosted.org/packages/08/4f/d747f41dafdd9bbef0fd775de46551a099413b3e3f410da0ed80238fdecf/skyfield_data-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a97d2d85409dcbb50ad744ec11c3ec8f", "sha256": "0de5d157626f16cdc7e685f0a5cd7025748021a7ccdc361ccbe985a3d67900d9"}, "downloads": -1, "filename": "skyfield-data-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a97d2d85409dcbb50ad744ec11c3ec8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.3", "size": 15956757, "upload_time": "2019-07-29T15:15:04", "upload_time_iso_8601": "2019-07-29T15:15:04.019497Z", "url": "https://files.pythonhosted.org/packages/20/be/ca2303c12a6c63d83a987b58c544934f5838c2b690e3d0db64dcd7768761/skyfield-data-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "824c869b74666c3fdffc2f323d9451eb", "sha256": "0e19ad535435edc7d14077f36a433c0000aecf14309aed8a7035de3104c2996c"}, "downloads": -1, "filename": "skyfield_data-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "824c869b74666c3fdffc2f323d9451eb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 15954070, "upload_time": "2019-08-23T11:04:29", "upload_time_iso_8601": "2019-08-23T11:04:29.097846Z", "url": "https://files.pythonhosted.org/packages/bb/13/ed889d55dff8691c9907216f9b60239fc1a12ffce97a00dff737951c4018/skyfield_data-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "65f05f23705561ff83e94bdefd9b729b", "sha256": "daca7576fdf5e23c58534fa145fd8c10216d328c8d0b3071770893ec429d0fe6"}, "downloads": -1, "filename": "skyfield-data-0.0.2.tar.gz", "has_sig": false, "md5_digest": "65f05f23705561ff83e94bdefd9b729b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 15957232, "upload_time": "2019-08-23T11:06:48", "upload_time_iso_8601": "2019-08-23T11:06:48.665699Z", "url": "https://files.pythonhosted.org/packages/70/c8/fc0a6ef41b1ae721ef6eb0099bbc1428dbbd1e71091f19496f737a1fd1dd/skyfield-data-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "6f94d2123d72609d4d97d185c0001a42", "sha256": "b9b390ebe76acfdb63ed63bd47ec941c22b37b4f3deb30d10e9828f872d2cd05"}, "downloads": -1, "filename": "skyfield_data-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6f94d2123d72609d4d97d185c0001a42", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 15955454, "upload_time": "2019-10-04T09:54:38", "upload_time_iso_8601": "2019-10-04T09:54:38.957798Z", "url": "https://files.pythonhosted.org/packages/ea/46/666a4b44709badf6e11b8b77a7aeefebababc1648f46a893f9f8642e99b3/skyfield_data-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b65100ec6c1663f246d3132b43ecc132", "sha256": "bae8e2d29936cae1c919ae4190aa523659043c43789631bd81de8c3b9b3815f7"}, "downloads": -1, "filename": "skyfield-data-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b65100ec6c1663f246d3132b43ecc132", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 15958693, "upload_time": "2019-10-04T09:58:32", "upload_time_iso_8601": "2019-10-04T09:58:32.700013Z", "url": "https://files.pythonhosted.org/packages/6a/aa/cf044270d1cfce25cf62ffd9e2ef50db6274fbf078799bebefae4b7383ab/skyfield-data-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "4c0c1d9518ee63cf433418a705000e53", "sha256": "adbccfda6d3f551b9fca4d20c4d608b0f868a8c507d37ab414e01eb7a591819a"}, "downloads": -1, "filename": "skyfield_data-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4c0c1d9518ee63cf433418a705000e53", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 15956016, "upload_time": "2020-05-05T08:44:00", "upload_time_iso_8601": "2020-05-05T08:44:00.194067Z", "url": "https://files.pythonhosted.org/packages/67/6b/ec2228897402dfd479f6c36b1d3a13faec165a08141e410583b0dbe5f6f9/skyfield_data-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "771aaa4f42d9efbb484c4e0f004eb1df", "sha256": "14565d5831ead09acf04fe68c0262178940a1e000fe84c05dcf347e0e6bdde74"}, "downloads": -1, "filename": "skyfield-data-1.0.0.tar.gz", "has_sig": false, "md5_digest": "771aaa4f42d9efbb484c4e0f004eb1df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 15959527, "upload_time": "2020-05-05T08:39:20", "upload_time_iso_8601": "2020-05-05T08:39:20.588305Z", "url": "https://files.pythonhosted.org/packages/79/65/fcddc7082949ac381d8a882af863c8ab20c4993d6456de10a8e091af1b5e/skyfield-data-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c0c1d9518ee63cf433418a705000e53", "sha256": "adbccfda6d3f551b9fca4d20c4d608b0f868a8c507d37ab414e01eb7a591819a"}, "downloads": -1, "filename": "skyfield_data-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4c0c1d9518ee63cf433418a705000e53", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 15956016, "upload_time": "2020-05-05T08:44:00", "upload_time_iso_8601": "2020-05-05T08:44:00.194067Z", "url": "https://files.pythonhosted.org/packages/67/6b/ec2228897402dfd479f6c36b1d3a13faec165a08141e410583b0dbe5f6f9/skyfield_data-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "771aaa4f42d9efbb484c4e0f004eb1df", "sha256": "14565d5831ead09acf04fe68c0262178940a1e000fe84c05dcf347e0e6bdde74"}, "downloads": -1, "filename": "skyfield-data-1.0.0.tar.gz", "has_sig": false, "md5_digest": "771aaa4f42d9efbb484c4e0f004eb1df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4", "size": 15959527, "upload_time": "2020-05-05T08:39:20", "upload_time_iso_8601": "2020-05-05T08:39:20.588305Z", "url": "https://files.pythonhosted.org/packages/79/65/fcddc7082949ac381d8a882af863c8ab20c4993d6456de10a8e091af1b5e/skyfield-data-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:48 2020"}