{"info": {"author": "x.seeks", "author_email": "x.seeks@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "===========\r\neAlarm\r\n===========\r\n\r\neAlarm is a simple, easy (thus the 'e') alarm that does what any alarm should do.  It's used from the command-line, because 'ctrl-c' is still perfectly accessible in the dark.::\r\n\r\n    ----------\r\n    ON *NIX\r\n    ----------\r\n\r\n    $ eAlarm\r\n    \r\n    OR\r\n    \r\n    $ python /path/to/eAlarm.py /optional/absolute/path/to/directory\r\n    \r\n    OR\r\n    \r\n    $ python /path/to/eAlarm.py\r\n    >>> Enter a directory you'd like to sort: absolute/path/to/directory\r\n    \r\n    -----------\r\n    ON WINDOWS:\r\n    -----------\r\n    \r\n    Open a command prompt and type:\r\n    \r\n    C:\\path\\to\\python.exe C:\\path\\to\\eAlarmgui.py\r\n    \r\n    OR\r\n    \r\n    C:\\path\\to\\python.exe C:\\path\\to\\eAlarm.py\r\n    \r\n    (Or just double-click on whichever script)\r\n\r\n\r\n\r\nRequirements:\r\n==============\r\n\r\n* Python 2.6 or later (2.6 recommended on Windows)\r\n\r\n* Pyglet (http://pyglet.org)\r\n\r\n* AVbin (http://code.google.com/p/avbin)\r\n\r\n\r\nInstallation:\r\n==============\r\n\r\n* In Unix:  Unpack the tarball, open a terminal, navigate to the directory in which you unpacked the tarball, and type (as admin, i.e., \"su\" or \"sudo\") ``python setup.py install``\r\n\r\n* In Windows, just run the .exe as normal.  The script will be installed to C:\\\\Pythondir\\\\Lib\\\\site-packages\r\n\r\nUsage\r\n-------------\r\n\r\nThis program can be used interactively, or quickly.\r\n\r\nFor the former, simply execute the program with no arguments.  You'll be brought to the intro page and presented with a few options.  You can just 'go', you can set the time (or any one of the nine preset times), or you can quit.\r\n\r\nFor the latter, you can pass the program a time straight from the command-line.  To do so, you'd pass a time argument while invoking it.  For example, to immediately set the clock for 4:00 PM, you can type 'ealarm 16:00', 'ealarm 4pm', 'ealarm 16', etc.  It will also accept 'noon' or 'midnight' as a time argument.\r\n\r\nOne other possibly important option is the 'test' option, to see whether or not the alarm will actually function on your system.  Better safe than sorry, right?  You can enter 'T' at the main (interactive) screen, or just type 'ealarm t' from the command line.  If after several seconds you still  don't hear anything, then you may want not want to use this program.\r\n\r\nThere isn't much more to it than that, honestly.  It's a simple little alarm.\r\n\r\n\r\nAfter installation and running the program for the first time (or just running\r\nthe script itself from wherever you've extracted it to), a configuration file\r\nwill be created in the ealarm directory, located in one of the following\r\ndirectories:\r\n\r\nGNU/Linux:  ~/.ealarm\r\n\r\nWindows XP:  My Documents\\\\ealarm\r\n\r\nWindows 7 or Vista:  Documents\\\\ealarm\r\n\r\nYou can edit the configuration file if you'd like (named 'ealarm.cfg') with any\r\nplain text editor.  You can set the ring sound, current time and preset times\r\ninside this cfg file.\r\n\r\n\r\nAuthor\r\n-------------\r\n\r\n* x.seeks (x -dot- seeks _at_ gmail -dot- com)\r\n\r\n\r\n\r\n\r\n\r\nLicense\r\n-------------\r\n\r\nGPL version 3.  See LICENSE.txt for more info.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/eAlarm", "keywords": "alarm, ealarm", "license": "GPL3, see LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "eAlarm", "package_url": "https://pypi.org/project/eAlarm/", "platform": "Linux\r\nWindows", "project_url": "https://pypi.org/project/eAlarm/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/eAlarm"}, "release_url": "https://pypi.org/project/eAlarm/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "A command-line alarm clock.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>eAlarm is a simple, easy (thus the \u2018e\u2019) alarm that does what any alarm should do.  It\u2019s used from the command-line, because \u2018ctrl-c\u2019 is still perfectly accessible in the dark.:</p>\n<pre>----------\nON *NIX\n----------\n\n$ eAlarm\n\nOR\n\n$ python /path/to/eAlarm.py /optional/absolute/path/to/directory\n\nOR\n\n$ python /path/to/eAlarm.py\n&gt;&gt;&gt; Enter a directory you'd like to sort: absolute/path/to/directory\n\n-----------\nON WINDOWS:\n-----------\n\nOpen a command prompt and type:\n\nC:\\path\\to\\python.exe C:\\path\\to\\eAlarmgui.py\n\nOR\n\nC:\\path\\to\\python.exe C:\\path\\to\\eAlarm.py\n\n(Or just double-click on whichever script)\n</pre>\n<div id=\"requirements\">\n<h2>Requirements:</h2>\n<ul>\n<li>Python 2.6 or later (2.6 recommended on Windows)</li>\n<li>Pyglet (<a href=\"http://pyglet.org\" rel=\"nofollow\">http://pyglet.org</a>)</li>\n<li>AVbin (<a href=\"http://code.google.com/p/avbin\" rel=\"nofollow\">http://code.google.com/p/avbin</a>)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<ul>\n<li>In Unix:  Unpack the tarball, open a terminal, navigate to the directory in which you unpacked the tarball, and type (as admin, i.e., \u201csu\u201d or \u201csudo\u201d) <tt>python setup.py install</tt></li>\n<li>In Windows, just run the .exe as normal.  The script will be installed to C:\\Pythondir\\Lib\\site-packages</li>\n</ul>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>This program can be used interactively, or quickly.</p>\n<p>For the former, simply execute the program with no arguments.  You\u2019ll be brought to the intro page and presented with a few options.  You can just \u2018go\u2019, you can set the time (or any one of the nine preset times), or you can quit.</p>\n<p>For the latter, you can pass the program a time straight from the command-line.  To do so, you\u2019d pass a time argument while invoking it.  For example, to immediately set the clock for 4:00 PM, you can type \u2018ealarm 16:00\u2019, \u2018ealarm 4pm\u2019, \u2018ealarm 16\u2019, etc.  It will also accept \u2018noon\u2019 or \u2018midnight\u2019 as a time argument.</p>\n<p>One other possibly important option is the \u2018test\u2019 option, to see whether or not the alarm will actually function on your system.  Better safe than sorry, right?  You can enter \u2018T\u2019 at the main (interactive) screen, or just type \u2018ealarm t\u2019 from the command line.  If after several seconds you still  don\u2019t hear anything, then you may want not want to use this program.</p>\n<p>There isn\u2019t much more to it than that, honestly.  It\u2019s a simple little alarm.</p>\n<p>After installation and running the program for the first time (or just running\nthe script itself from wherever you\u2019ve extracted it to), a configuration file\nwill be created in the ealarm directory, located in one of the following\ndirectories:</p>\n<p>GNU/Linux:  ~/.ealarm</p>\n<p>Windows XP:  My Documents\\ealarm</p>\n<p>Windows 7 or Vista:  Documents\\ealarm</p>\n<p>You can edit the configuration file if you\u2019d like (named \u2018ealarm.cfg\u2019) with any\nplain text editor.  You can set the ring sound, current time and preset times\ninside this cfg file.</p>\n</div>\n<div id=\"author\">\n<h3>Author</h3>\n<ul>\n<li>x.seeks (x -dot- seeks _at_ gmail -dot- com)</li>\n</ul>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>GPL version 3.  See LICENSE.txt for more info.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 791481, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9b826c9cafc8689131e9207ee366f782", "sha256": "49d2d03c11ad89f81c5ef1c0e9fd743ea7ca785042f7ba92f5fbd1b2e49918b2"}, "downloads": -1, "filename": "eAlarm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9b826c9cafc8689131e9207ee366f782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 289102, "upload_time": "2011-06-05T08:21:42", "upload_time_iso_8601": "2011-06-05T08:21:42.711800Z", "url": "https://files.pythonhosted.org/packages/ac/35/226556d1429fbfc40714056f704c4752d74db18375152609a9bcfd3400d2/eAlarm-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b826c9cafc8689131e9207ee366f782", "sha256": "49d2d03c11ad89f81c5ef1c0e9fd743ea7ca785042f7ba92f5fbd1b2e49918b2"}, "downloads": -1, "filename": "eAlarm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9b826c9cafc8689131e9207ee366f782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 289102, "upload_time": "2011-06-05T08:21:42", "upload_time_iso_8601": "2011-06-05T08:21:42.711800Z", "url": "https://files.pythonhosted.org/packages/ac/35/226556d1429fbfc40714056f704c4752d74db18375152609a9bcfd3400d2/eAlarm-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:32 2020"}