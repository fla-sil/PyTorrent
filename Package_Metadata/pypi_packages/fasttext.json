{"info": {"author": "Onur Celebi", "author_email": "celebio@fb.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "fastText |CircleCI|\n===================\n\n`fastText <https://fasttext.cc/>`__ is a library for efficient learning\nof word representations and sentence classification.\n\nIn this document we present how to use fastText in python.\n\nTable of contents\n-----------------\n\n-  `Requirements <#requirements>`__\n-  `Installation <#installation>`__\n-  `Usage overview <#usage-overview>`__\n-  `Word representation model <#word-representation-model>`__\n-  `Text classification model <#text-classification-model>`__\n-  `IMPORTANT: Preprocessing data / encoding\n   conventions <#important-preprocessing-data-encoding-conventions>`__\n-  `More examples <#more-examples>`__\n-  `API <#api>`__\n-  `train_unsupervised parameters <#train_unsupervised-parameters>`__\n-  `train_supervised parameters <#train_supervised-parameters>`__\n-  `model object <#model-object>`__\n\nRequirements\n============\n\n`fastText <https://fasttext.cc/>`__ builds on modern Mac OS and Linux\ndistributions. Since it uses C++11 features, it requires a compiler with\ngood C++11 support. You will need `Python <https://www.python.org/>`__\n(version 2.7 or \u2265 3.4), `NumPy <http://www.numpy.org/>`__ &\n`SciPy <https://www.scipy.org/>`__ and\n`pybind11 <https://github.com/pybind/pybind11>`__.\n\nInstallation\n============\n\nTo install the latest release, you can do :\n\n.. code:: bash\n\n    $ pip install fasttext\n\nor, to get the latest development version of fasttext, you can install\nfrom our github repository :\n\n.. code:: bash\n\n    $ git clone https://github.com/facebookresearch/fastText.git\n    $ cd fastText\n    $ sudo pip install .\n    $ # or :\n    $ sudo python setup.py install\n\nUsage overview\n==============\n\nWord representation model\n-------------------------\n\nIn order to learn word vectors, as `described\nhere <https://fasttext.cc/docs/en/references.html#enriching-word-vectors-with-subword-information>`__,\nwe can use ``fasttext.train_unsupervised`` function like this:\n\n.. code:: py\n\n    import fasttext\n\n    # Skipgram model :\n    model = fasttext.train_unsupervised('data.txt', model='skipgram')\n\n    # or, cbow model :\n    model = fasttext.train_unsupervised('data.txt', model='cbow')\n\nwhere ``data.txt`` is a training file containing utf-8 encoded text.\n\nThe returned ``model`` object represents your learned model, and you can\nuse it to retrieve information.\n\n.. code:: py\n\n    print(model.words)   # list of words in dictionary\n    print(model['king']) # get the vector of the word 'king'\n\nSaving and loading a model object\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can save your trained model object by calling the function\n``save_model``.\n\n.. code:: py\n\n    model.save_model(\"model_filename.bin\")\n\nand retrieve it later thanks to the function ``load_model`` :\n\n.. code:: py\n\n    model = fasttext.load_model(\"model_filename.bin\")\n\nFor more information about word representation usage of fasttext, you\ncan refer to our `word representations\ntutorial <https://fasttext.cc/docs/en/unsupervised-tutorial.html>`__.\n\nText classification model\n-------------------------\n\nIn order to train a text classifier using the method `described\nhere <https://fasttext.cc/docs/en/references.html#bag-of-tricks-for-efficient-text-classification>`__,\nwe can use ``fasttext.train_supervised`` function like this:\n\n.. code:: py\n\n    import fasttext\n\n    model = fasttext.train_supervised('data.train.txt')\n\nwhere ``data.train.txt`` is a text file containing a training sentence\nper line along with the labels. By default, we assume that labels are\nwords that are prefixed by the string ``__label__``\n\nOnce the model is trained, we can retrieve the list of words and labels:\n\n.. code:: py\n\n    print(model.words)\n    print(model.labels)\n\nTo evaluate our model by computing the precision at 1 (P@1) and the\nrecall on a test set, we use the ``test`` function:\n\n.. code:: py\n\n    def print_results(N, p, r):\n        print(\"N\\t\" + str(N))\n        print(\"P@{}\\t{:.3f}\".format(1, p))\n        print(\"R@{}\\t{:.3f}\".format(1, r))\n\n    print_results(*model.test('test.txt'))\n\nWe can also predict labels for a specific text :\n\n.. code:: py\n\n    model.predict(\"Which baking dish is best to bake a banana bread ?\")\n\nBy default, ``predict`` returns only one label : the one with the\nhighest probability. You can also predict more than one label by\nspecifying the parameter ``k``:\n\n.. code:: py\n\n    model.predict(\"Which baking dish is best to bake a banana bread ?\", k=3)\n\nIf you want to predict more than one sentence you can pass an array of\nstrings :\n\n.. code:: py\n\n    model.predict([\"Which baking dish is best to bake a banana bread ?\", \"Why not put knives in the dishwasher?\"], k=3)\n\nOf course, you can also save and load a model to/from a file as `in the\nword representation usage <#saving-and-loading-a-model-object>`__.\n\nFor more information about text classification usage of fasttext, you\ncan refer to our `text classification\ntutorial <https://fasttext.cc/docs/en/supervised-tutorial.html>`__.\n\nCompress model files with quantization\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhen you want to save a supervised model file, fastText can compress it\nin order to have a much smaller model file by sacrificing only a little\nbit performance.\n\n.. code:: py\n\n    # with the previously trained `model` object, call :\n    model.quantize(input='data.train.txt', retrain=True)\n\n    # then display results and save the new model :\n    print_results(*model.test(valid_data))\n    model.save_model(\"model_filename.ftz\")\n\n``model_filename.ftz`` will have a much smaller size than\n``model_filename.bin``.\n\nFor further reading on quantization, you can refer to `this paragraph\nfrom our blog\npost <https://fasttext.cc/blog/2017/10/02/blog-post.html#model-compression>`__.\n\nIMPORTANT: Preprocessing data / encoding conventions\n----------------------------------------------------\n\nIn general it is important to properly preprocess your data. In\nparticular our example scripts in the `root\nfolder <https://github.com/facebookresearch/fastText>`__ do this.\n\nfastText assumes UTF-8 encoded text. All text must be `unicode for\nPython2 <https://docs.python.org/2/library/functions.html#unicode>`__\nand `str for\nPython3 <https://docs.python.org/3.5/library/stdtypes.html#textseq>`__.\nThe passed text will be `encoded as UTF-8 by\npybind11 <https://pybind11.readthedocs.io/en/master/advanced/cast/strings.html?highlight=utf-8#strings-bytes-and-unicode-conversions>`__\nbefore passed to the fastText C++ library. This means it is important to\nuse UTF-8 encoded text when building a model. On Unix-like systems you\ncan convert text using `iconv <https://en.wikipedia.org/wiki/Iconv>`__.\n\nfastText will tokenize (split text into pieces) based on the following\nASCII characters (bytes). In particular, it is not aware of UTF-8\nwhitespace. We advice the user to convert UTF-8 whitespace / word\nboundaries into one of the following symbols as appropiate.\n\n-  space\n-  tab\n-  vertical tab\n-  carriage return\n-  formfeed\n-  the null character\n\nThe newline character is used to delimit lines of text. In particular,\nthe EOS token is appended to a line of text if a newline character is\nencountered. The only exception is if the number of tokens exceeds the\nMAX\\_LINE\\_SIZE constant as defined in the `Dictionary\nheader <https://github.com/facebookresearch/fastText/blob/master/src/dictionary.h>`__.\nThis means if you have text that is not separate by newlines, such as\nthe `fil9 dataset <http://mattmahoney.net/dc/textdata>`__, it will be\nbroken into chunks with MAX\\_LINE\\_SIZE of tokens and the EOS token is\nnot appended.\n\nThe length of a token is the number of UTF-8 characters by considering\nthe `leading two bits of a\nbyte <https://en.wikipedia.org/wiki/UTF-8#Description>`__ to identify\n`subsequent bytes of a multi-byte\nsequence <https://github.com/facebookresearch/fastText/blob/master/src/dictionary.cc>`__.\nKnowing this is especially important when choosing the minimum and\nmaximum length of subwords. Further, the EOS token (as specified in the\n`Dictionary\nheader <https://github.com/facebookresearch/fastText/blob/master/src/dictionary.h>`__)\nis considered a character and will not be broken into subwords.\n\nMore examples\n-------------\n\nIn order to have a better knowledge of fastText models, please consider\nthe main\n`README <https://github.com/facebookresearch/fastText/blob/master/README.md>`__\nand in particular `the tutorials on our\nwebsite <https://fasttext.cc/docs/en/supervised-tutorial.html>`__.\n\nYou can find further python examples in `the doc\nfolder <https://github.com/facebookresearch/fastText/tree/master/python/doc/examples>`__.\n\nAs with any package you can get help on any Python function using the\nhelp function.\n\nFor example\n\n::\n\n    +>>> import fasttext\n    +>>> help(fasttext.FastText)\n\n    Help on module fasttext.FastText in fasttext:\n\n    NAME\n        fasttext.FastText\n\n    DESCRIPTION\n        # Copyright (c) 2017-present, Facebook, Inc.\n        # All rights reserved.\n        #\n        # This source code is licensed under the MIT license found in the\n        # LICENSE file in the root directory of this source tree.\n\n    FUNCTIONS\n        load_model(path)\n            Load a model given a filepath and return a model object.\n\n        tokenize(text)\n            Given a string of text, tokenize it and return a list of tokens\n    [...]\n\nAPI\n===\n\n``train_unsupervised`` parameters\n---------------------------------\n\n.. code:: python\n\n        input             # training file path (required)\n        model             # unsupervised fasttext model {cbow, skipgram} [skipgram]\n        lr                # learning rate [0.05]\n        dim               # size of word vectors [100]\n        ws                # size of the context window [5]\n        epoch             # number of epochs [5]\n        minCount          # minimal number of word occurences [5]\n        minn              # min length of char ngram [3]\n        maxn              # max length of char ngram [6]\n        neg               # number of negatives sampled [5]\n        wordNgrams        # max length of word ngram [1]\n        loss              # loss function {ns, hs, softmax, ova} [ns]\n        bucket            # number of buckets [2000000]\n        thread            # number of threads [number of cpus]\n        lrUpdateRate      # change the rate of updates for the learning rate [100]\n        t                 # sampling threshold [0.0001]\n        verbose           # verbose [2]\n\n``train_supervised`` parameters\n-------------------------------\n\n.. code:: python\n\n        input             # training file path (required)\n        lr                # learning rate [0.1]\n        dim               # size of word vectors [100]\n        ws                # size of the context window [5]\n        epoch             # number of epochs [5]\n        minCount          # minimal number of word occurences [1]\n        minCountLabel     # minimal number of label occurences [1]\n        minn              # min length of char ngram [0]\n        maxn              # max length of char ngram [0]\n        neg               # number of negatives sampled [5]\n        wordNgrams        # max length of word ngram [1]\n        loss              # loss function {ns, hs, softmax, ova} [softmax]\n        bucket            # number of buckets [2000000]\n        thread            # number of threads [number of cpus]\n        lrUpdateRate      # change the rate of updates for the learning rate [100]\n        t                 # sampling threshold [0.0001]\n        label             # label prefix ['__label__']\n        verbose           # verbose [2]\n        pretrainedVectors # pretrained word vectors (.vec file) for supervised learning []\n\n``model`` object\n----------------\n\n``train_supervised``, ``train_unsupervised`` and ``load_model``\nfunctions return an instance of ``_FastText`` class, that we generaly\nname ``model`` object.\n\nThis object exposes those training arguments as properties : ``lr``,\n``dim``, ``ws``, ``epoch``, ``minCount``, ``minCountLabel``, ``minn``,\n``maxn``, ``neg``, ``wordNgrams``, ``loss``, ``bucket``, ``thread``,\n``lrUpdateRate``, ``t``, ``label``, ``verbose``, ``pretrainedVectors``.\nSo ``model.wordNgrams`` will give you the max length of word ngram used\nfor training this model.\n\nIn addition, the object exposes several functions :\n\n.. code:: python\n\n        get_dimension           # Get the dimension (size) of a lookup vector (hidden layer).\n                                # This is equivalent to `dim` property.\n        get_input_vector        # Given an index, get the corresponding vector of the Input Matrix.\n        get_input_matrix        # Get a copy of the full input matrix of a Model.\n        get_labels              # Get the entire list of labels of the dictionary\n                                # This is equivalent to `labels` property.\n        get_line                # Split a line of text into words and labels.\n        get_output_matrix       # Get a copy of the full output matrix of a Model.\n        get_sentence_vector     # Given a string, get a single vector represenation. This function\n                                # assumes to be given a single line of text. We split words on\n                                # whitespace (space, newline, tab, vertical tab) and the control\n                                # characters carriage return, formfeed and the null character.\n        get_subword_id          # Given a subword, return the index (within input matrix) it hashes to.\n        get_subwords            # Given a word, get the subwords and their indicies.\n        get_word_id             # Given a word, get the word id within the dictionary.\n        get_word_vector         # Get the vector representation of word.\n        get_words               # Get the entire list of words of the dictionary\n                                # This is equivalent to `words` property.\n        is_quantized            # whether the model has been quantized\n        predict                 # Given a string, get a list of labels and a list of corresponding probabilities.\n        quantize                # Quantize the model reducing the size of the model and it's memory footprint.\n        save_model              # Save the model to the given path\n        test                    # Evaluate supervised model using file given by path\n        test_label              # Return the precision and recall score for each label.\n\nThe properties ``words``, ``labels`` return the words and labels from\nthe dictionary :\n\n.. code:: py\n\n    model.words         # equivalent to model.get_words()\n    model.labels        # equivalent to model.get_labels()\n\nThe object overrides ``__getitem__`` and ``__contains__`` functions in\norder to return the representation of a word and to check if a word is\nin the vocabulary.\n\n.. code:: py\n\n    model['king']       # equivalent to model.get_word_vector('king')\n    'king' in model     # equivalent to `'king' in model.get_words()`\n\nJoin the fastText community\n---------------------------\n\n-  `Facebook page <https://www.facebook.com/groups/1174547215919768>`__\n-  `Stack\n   overflow <https://stackoverflow.com/questions/tagged/fasttext>`__\n-  `Google\n   group <https://groups.google.com/forum/#!forum/fasttext-library>`__\n-  `GitHub <https://github.com/facebookresearch/fastText>`__\n\n.. |CircleCI| image:: https://circleci.com/gh/facebookresearch/fastText/tree/master.svg?style=svg\n   :target: https://circleci.com/gh/facebookresearch/fastText/tree/master", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/facebookresearch/fastText", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fasttext", "package_url": "https://pypi.org/project/fasttext/", "platform": "", "project_url": "https://pypi.org/project/fasttext/", "project_urls": {"Homepage": "https://github.com/facebookresearch/fastText"}, "release_url": "https://pypi.org/project/fasttext/0.9.2/", "requires_dist": null, "requires_python": "", "summary": "fasttext Python bindings", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"fasttext-circleci\">\n<h2>fastText <a href=\"https://circleci.com/gh/facebookresearch/fastText/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cadd2c0bacbdd8d8a465581737df2c11086202cb/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b72657365617263682f66617374546578742f747265652f6d61737465722e7376673f7374796c653d737667\"></a></h2>\n<p><a href=\"https://fasttext.cc/\" rel=\"nofollow\">fastText</a> is a library for efficient learning\nof word representations and sentence classification.</p>\n<p>In this document we present how to use fastText in python.</p>\n<div id=\"table-of-contents\">\n<h3>Table of contents</h3>\n<ul>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage-overview\" rel=\"nofollow\">Usage overview</a></li>\n<li><a href=\"#word-representation-model\" rel=\"nofollow\">Word representation model</a></li>\n<li><a href=\"#text-classification-model\" rel=\"nofollow\">Text classification model</a></li>\n<li><a href=\"#important-preprocessing-data-encoding-conventions\" rel=\"nofollow\">IMPORTANT: Preprocessing data / encoding\nconventions</a></li>\n<li><a href=\"#more-examples\" rel=\"nofollow\">More examples</a></li>\n<li><a href=\"#api\" rel=\"nofollow\">API</a></li>\n<li><a href=\"#train_unsupervised-parameters\" rel=\"nofollow\">train_unsupervised parameters</a></li>\n<li><a href=\"#train_supervised-parameters\" rel=\"nofollow\">train_supervised parameters</a></li>\n<li><a href=\"#model-object\" rel=\"nofollow\">model object</a></li>\n</ul>\n</div>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p><a href=\"https://fasttext.cc/\" rel=\"nofollow\">fastText</a> builds on modern Mac OS and Linux\ndistributions. Since it uses C++11 features, it requires a compiler with\ngood C++11 support. You will need <a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a>\n(version 2.7 or \u2265 3.4), <a href=\"http://www.numpy.org/\" rel=\"nofollow\">NumPy</a> &amp;\n<a href=\"https://www.scipy.org/\" rel=\"nofollow\">SciPy</a> and\n<a href=\"https://github.com/pybind/pybind11\" rel=\"nofollow\">pybind11</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install the latest release, you can do :</p>\n<pre>$ pip install fasttext\n</pre>\n<p>or, to get the latest development version of fasttext, you can install\nfrom our github repository :</p>\n<pre>$ git clone https://github.com/facebookresearch/fastText.git\n$ <span class=\"nb\">cd</span> fastText\n$ sudo pip install .\n$ <span class=\"c1\"># or :\n</span>$ sudo python setup.py install\n</pre>\n</div>\n<div id=\"usage-overview\">\n<h2>Usage overview</h2>\n<div id=\"word-representation-model\">\n<h3>Word representation model</h3>\n<p>In order to learn word vectors, as <a href=\"https://fasttext.cc/docs/en/references.html#enriching-word-vectors-with-subword-information\" rel=\"nofollow\">described\nhere</a>,\nwe can use <tt>fasttext.train_unsupervised</tt> function like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fasttext</span>\n\n<span class=\"c1\"># Skipgram model :</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">fasttext</span><span class=\"o\">.</span><span class=\"n\">train_unsupervised</span><span class=\"p\">(</span><span class=\"s1\">'data.txt'</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s1\">'skipgram'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or, cbow model :</span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">fasttext</span><span class=\"o\">.</span><span class=\"n\">train_unsupervised</span><span class=\"p\">(</span><span class=\"s1\">'data.txt'</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s1\">'cbow'</span><span class=\"p\">)</span>\n</pre>\n<p>where <tt>data.txt</tt> is a training file containing utf-8 encoded text.</p>\n<p>The returned <tt>model</tt> object represents your learned model, and you can\nuse it to retrieve information.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"p\">)</span>   <span class=\"c1\"># list of words in dictionary</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">[</span><span class=\"s1\">'king'</span><span class=\"p\">])</span> <span class=\"c1\"># get the vector of the word 'king'</span>\n</pre>\n<div id=\"saving-and-loading-a-model-object\">\n<h4>Saving and loading a model object</h4>\n<p>You can save your trained model object by calling the function\n<tt>save_model</tt>.</p>\n<pre><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"s2\">\"model_filename.bin\"</span><span class=\"p\">)</span>\n</pre>\n<p>and retrieve it later thanks to the function <tt>load_model</tt> :</p>\n<pre><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">fasttext</span><span class=\"o\">.</span><span class=\"n\">load_model</span><span class=\"p\">(</span><span class=\"s2\">\"model_filename.bin\"</span><span class=\"p\">)</span>\n</pre>\n<p>For more information about word representation usage of fasttext, you\ncan refer to our <a href=\"https://fasttext.cc/docs/en/unsupervised-tutorial.html\" rel=\"nofollow\">word representations\ntutorial</a>.</p>\n</div>\n</div>\n<div id=\"text-classification-model\">\n<h3>Text classification model</h3>\n<p>In order to train a text classifier using the method <a href=\"https://fasttext.cc/docs/en/references.html#bag-of-tricks-for-efficient-text-classification\" rel=\"nofollow\">described\nhere</a>,\nwe can use <tt>fasttext.train_supervised</tt> function like this:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fasttext</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">fasttext</span><span class=\"o\">.</span><span class=\"n\">train_supervised</span><span class=\"p\">(</span><span class=\"s1\">'data.train.txt'</span><span class=\"p\">)</span>\n</pre>\n<p>where <tt>data.train.txt</tt> is a text file containing a training sentence\nper line along with the labels. By default, we assume that labels are\nwords that are prefixed by the string <tt>__label__</tt></p>\n<p>Once the model is trained, we can retrieve the list of words and labels:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">words</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">)</span>\n</pre>\n<p>To evaluate our model by computing the precision at 1 (P@1) and the\nrecall on a test set, we use the <tt>test</tt> function:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">print_results</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"N</span><span class=\"se\">\\t</span><span class=\"s2\">\"</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">N</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"P@</span><span class=\"si\">{}</span><span class=\"se\">\\t</span><span class=\"si\">{:.3f}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">p</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"R@</span><span class=\"si\">{}</span><span class=\"se\">\\t</span><span class=\"si\">{:.3f}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">))</span>\n\n<span class=\"n\">print_results</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"s1\">'test.txt'</span><span class=\"p\">))</span>\n</pre>\n<p>We can also predict labels for a specific text :</p>\n<pre><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"s2\">\"Which baking dish is best to bake a banana bread ?\"</span><span class=\"p\">)</span>\n</pre>\n<p>By default, <tt>predict</tt> returns only one label : the one with the\nhighest probability. You can also predict more than one label by\nspecifying the parameter <tt>k</tt>:</p>\n<pre><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"s2\">\"Which baking dish is best to bake a banana bread ?\"</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>If you want to predict more than one sentence you can pass an array of\nstrings :</p>\n<pre><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">([</span><span class=\"s2\">\"Which baking dish is best to bake a banana bread ?\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Why not put knives in the dishwasher?\"</span><span class=\"p\">],</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>Of course, you can also save and load a model to/from a file as <a href=\"#saving-and-loading-a-model-object\" rel=\"nofollow\">in the\nword representation usage</a>.</p>\n<p>For more information about text classification usage of fasttext, you\ncan refer to our <a href=\"https://fasttext.cc/docs/en/supervised-tutorial.html\" rel=\"nofollow\">text classification\ntutorial</a>.</p>\n<div id=\"compress-model-files-with-quantization\">\n<h4>Compress model files with quantization</h4>\n<p>When you want to save a supervised model file, fastText can compress it\nin order to have a much smaller model file by sacrificing only a little\nbit performance.</p>\n<pre><span class=\"c1\"># with the previously trained `model` object, call :</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">quantize</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"o\">=</span><span class=\"s1\">'data.train.txt'</span><span class=\"p\">,</span> <span class=\"n\">retrain</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># then display results and save the new model :</span>\n<span class=\"n\">print_results</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"n\">valid_data</span><span class=\"p\">))</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">save_model</span><span class=\"p\">(</span><span class=\"s2\">\"model_filename.ftz\"</span><span class=\"p\">)</span>\n</pre>\n<p><tt>model_filename.ftz</tt> will have a much smaller size than\n<tt>model_filename.bin</tt>.</p>\n<p>For further reading on quantization, you can refer to <a href=\"https://fasttext.cc/blog/2017/10/02/blog-post.html#model-compression\" rel=\"nofollow\">this paragraph\nfrom our blog\npost</a>.</p>\n</div>\n</div>\n<div id=\"important-preprocessing-data-encoding-conventions\">\n<h3>IMPORTANT: Preprocessing data / encoding conventions</h3>\n<p>In general it is important to properly preprocess your data. In\nparticular our example scripts in the <a href=\"https://github.com/facebookresearch/fastText\" rel=\"nofollow\">root\nfolder</a> do this.</p>\n<p>fastText assumes UTF-8 encoded text. All text must be <a href=\"https://docs.python.org/2/library/functions.html#unicode\" rel=\"nofollow\">unicode for\nPython2</a>\nand <a href=\"https://docs.python.org/3.5/library/stdtypes.html#textseq\" rel=\"nofollow\">str for\nPython3</a>.\nThe passed text will be <a href=\"https://pybind11.readthedocs.io/en/master/advanced/cast/strings.html?highlight=utf-8#strings-bytes-and-unicode-conversions\" rel=\"nofollow\">encoded as UTF-8 by\npybind11</a>\nbefore passed to the fastText C++ library. This means it is important to\nuse UTF-8 encoded text when building a model. On Unix-like systems you\ncan convert text using <a href=\"https://en.wikipedia.org/wiki/Iconv\" rel=\"nofollow\">iconv</a>.</p>\n<p>fastText will tokenize (split text into pieces) based on the following\nASCII characters (bytes). In particular, it is not aware of UTF-8\nwhitespace. We advice the user to convert UTF-8 whitespace / word\nboundaries into one of the following symbols as appropiate.</p>\n<ul>\n<li>space</li>\n<li>tab</li>\n<li>vertical tab</li>\n<li>carriage return</li>\n<li>formfeed</li>\n<li>the null character</li>\n</ul>\n<p>The newline character is used to delimit lines of text. In particular,\nthe EOS token is appended to a line of text if a newline character is\nencountered. The only exception is if the number of tokens exceeds the\nMAX_LINE_SIZE constant as defined in the <a href=\"https://github.com/facebookresearch/fastText/blob/master/src/dictionary.h\" rel=\"nofollow\">Dictionary\nheader</a>.\nThis means if you have text that is not separate by newlines, such as\nthe <a href=\"http://mattmahoney.net/dc/textdata\" rel=\"nofollow\">fil9 dataset</a>, it will be\nbroken into chunks with MAX_LINE_SIZE of tokens and the EOS token is\nnot appended.</p>\n<p>The length of a token is the number of UTF-8 characters by considering\nthe <a href=\"https://en.wikipedia.org/wiki/UTF-8#Description\" rel=\"nofollow\">leading two bits of a\nbyte</a> to identify\n<a href=\"https://github.com/facebookresearch/fastText/blob/master/src/dictionary.cc\" rel=\"nofollow\">subsequent bytes of a multi-byte\nsequence</a>.\nKnowing this is especially important when choosing the minimum and\nmaximum length of subwords. Further, the EOS token (as specified in the\n<a href=\"https://github.com/facebookresearch/fastText/blob/master/src/dictionary.h\" rel=\"nofollow\">Dictionary\nheader</a>)\nis considered a character and will not be broken into subwords.</p>\n</div>\n<div id=\"more-examples\">\n<h3>More examples</h3>\n<p>In order to have a better knowledge of fastText models, please consider\nthe main\n<a href=\"https://github.com/facebookresearch/fastText/blob/master/README.md\" rel=\"nofollow\">README</a>\nand in particular <a href=\"https://fasttext.cc/docs/en/supervised-tutorial.html\" rel=\"nofollow\">the tutorials on our\nwebsite</a>.</p>\n<p>You can find further python examples in <a href=\"https://github.com/facebookresearch/fastText/tree/master/python/doc/examples\" rel=\"nofollow\">the doc\nfolder</a>.</p>\n<p>As with any package you can get help on any Python function using the\nhelp function.</p>\n<p>For example</p>\n<pre>+&gt;&gt;&gt; import fasttext\n+&gt;&gt;&gt; help(fasttext.FastText)\n\nHelp on module fasttext.FastText in fasttext:\n\nNAME\n    fasttext.FastText\n\nDESCRIPTION\n    # Copyright (c) 2017-present, Facebook, Inc.\n    # All rights reserved.\n    #\n    # This source code is licensed under the MIT license found in the\n    # LICENSE file in the root directory of this source tree.\n\nFUNCTIONS\n    load_model(path)\n        Load a model given a filepath and return a model object.\n\n    tokenize(text)\n        Given a string of text, tokenize it and return a list of tokens\n[...]\n</pre>\n</div>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<div id=\"train-unsupervised-parameters\">\n<h3><tt>train_unsupervised</tt> parameters</h3>\n<pre><span class=\"nb\">input</span>             <span class=\"c1\"># training file path (required)</span>\n<span class=\"n\">model</span>             <span class=\"c1\"># unsupervised fasttext model {cbow, skipgram} [skipgram]</span>\n<span class=\"n\">lr</span>                <span class=\"c1\"># learning rate [0.05]</span>\n<span class=\"n\">dim</span>               <span class=\"c1\"># size of word vectors [100]</span>\n<span class=\"n\">ws</span>                <span class=\"c1\"># size of the context window [5]</span>\n<span class=\"n\">epoch</span>             <span class=\"c1\"># number of epochs [5]</span>\n<span class=\"n\">minCount</span>          <span class=\"c1\"># minimal number of word occurences [5]</span>\n<span class=\"n\">minn</span>              <span class=\"c1\"># min length of char ngram [3]</span>\n<span class=\"n\">maxn</span>              <span class=\"c1\"># max length of char ngram [6]</span>\n<span class=\"n\">neg</span>               <span class=\"c1\"># number of negatives sampled [5]</span>\n<span class=\"n\">wordNgrams</span>        <span class=\"c1\"># max length of word ngram [1]</span>\n<span class=\"n\">loss</span>              <span class=\"c1\"># loss function {ns, hs, softmax, ova} [ns]</span>\n<span class=\"n\">bucket</span>            <span class=\"c1\"># number of buckets [2000000]</span>\n<span class=\"n\">thread</span>            <span class=\"c1\"># number of threads [number of cpus]</span>\n<span class=\"n\">lrUpdateRate</span>      <span class=\"c1\"># change the rate of updates for the learning rate [100]</span>\n<span class=\"n\">t</span>                 <span class=\"c1\"># sampling threshold [0.0001]</span>\n<span class=\"n\">verbose</span>           <span class=\"c1\"># verbose [2]</span>\n</pre>\n</div>\n<div id=\"train-supervised-parameters\">\n<h3><tt>train_supervised</tt> parameters</h3>\n<pre><span class=\"nb\">input</span>             <span class=\"c1\"># training file path (required)</span>\n<span class=\"n\">lr</span>                <span class=\"c1\"># learning rate [0.1]</span>\n<span class=\"n\">dim</span>               <span class=\"c1\"># size of word vectors [100]</span>\n<span class=\"n\">ws</span>                <span class=\"c1\"># size of the context window [5]</span>\n<span class=\"n\">epoch</span>             <span class=\"c1\"># number of epochs [5]</span>\n<span class=\"n\">minCount</span>          <span class=\"c1\"># minimal number of word occurences [1]</span>\n<span class=\"n\">minCountLabel</span>     <span class=\"c1\"># minimal number of label occurences [1]</span>\n<span class=\"n\">minn</span>              <span class=\"c1\"># min length of char ngram [0]</span>\n<span class=\"n\">maxn</span>              <span class=\"c1\"># max length of char ngram [0]</span>\n<span class=\"n\">neg</span>               <span class=\"c1\"># number of negatives sampled [5]</span>\n<span class=\"n\">wordNgrams</span>        <span class=\"c1\"># max length of word ngram [1]</span>\n<span class=\"n\">loss</span>              <span class=\"c1\"># loss function {ns, hs, softmax, ova} [softmax]</span>\n<span class=\"n\">bucket</span>            <span class=\"c1\"># number of buckets [2000000]</span>\n<span class=\"n\">thread</span>            <span class=\"c1\"># number of threads [number of cpus]</span>\n<span class=\"n\">lrUpdateRate</span>      <span class=\"c1\"># change the rate of updates for the learning rate [100]</span>\n<span class=\"n\">t</span>                 <span class=\"c1\"># sampling threshold [0.0001]</span>\n<span class=\"n\">label</span>             <span class=\"c1\"># label prefix ['__label__']</span>\n<span class=\"n\">verbose</span>           <span class=\"c1\"># verbose [2]</span>\n<span class=\"n\">pretrainedVectors</span> <span class=\"c1\"># pretrained word vectors (.vec file) for supervised learning []</span>\n</pre>\n</div>\n<div id=\"model-object\">\n<h3><tt>model</tt> object</h3>\n<p><tt>train_supervised</tt>, <tt>train_unsupervised</tt> and <tt>load_model</tt>\nfunctions return an instance of <tt>_FastText</tt> class, that we generaly\nname <tt>model</tt> object.</p>\n<p>This object exposes those training arguments as properties : <tt>lr</tt>,\n<tt>dim</tt>, <tt>ws</tt>, <tt>epoch</tt>, <tt>minCount</tt>, <tt>minCountLabel</tt>, <tt>minn</tt>,\n<tt>maxn</tt>, <tt>neg</tt>, <tt>wordNgrams</tt>, <tt>loss</tt>, <tt>bucket</tt>, <tt>thread</tt>,\n<tt>lrUpdateRate</tt>, <tt>t</tt>, <tt>label</tt>, <tt>verbose</tt>, <tt>pretrainedVectors</tt>.\nSo <tt>model.wordNgrams</tt> will give you the max length of word ngram used\nfor training this model.</p>\n<p>In addition, the object exposes several functions :</p>\n<pre><span class=\"n\">get_dimension</span>           <span class=\"c1\"># Get the dimension (size) of a lookup vector (hidden layer).</span>\n                        <span class=\"c1\"># This is equivalent to `dim` property.</span>\n<span class=\"n\">get_input_vector</span>        <span class=\"c1\"># Given an index, get the corresponding vector of the Input Matrix.</span>\n<span class=\"n\">get_input_matrix</span>        <span class=\"c1\"># Get a copy of the full input matrix of a Model.</span>\n<span class=\"n\">get_labels</span>              <span class=\"c1\"># Get the entire list of labels of the dictionary</span>\n                        <span class=\"c1\"># This is equivalent to `labels` property.</span>\n<span class=\"n\">get_line</span>                <span class=\"c1\"># Split a line of text into words and labels.</span>\n<span class=\"n\">get_output_matrix</span>       <span class=\"c1\"># Get a copy of the full output matrix of a Model.</span>\n<span class=\"n\">get_sentence_vector</span>     <span class=\"c1\"># Given a string, get a single vector represenation. This function</span>\n                        <span class=\"c1\"># assumes to be given a single line of text. We split words on</span>\n                        <span class=\"c1\"># whitespace (space, newline, tab, vertical tab) and the control</span>\n                        <span class=\"c1\"># characters carriage return, formfeed and the null character.</span>\n<span class=\"n\">get_subword_id</span>          <span class=\"c1\"># Given a subword, return the index (within input matrix) it hashes to.</span>\n<span class=\"n\">get_subwords</span>            <span class=\"c1\"># Given a word, get the subwords and their indicies.</span>\n<span class=\"n\">get_word_id</span>             <span class=\"c1\"># Given a word, get the word id within the dictionary.</span>\n<span class=\"n\">get_word_vector</span>         <span class=\"c1\"># Get the vector representation of word.</span>\n<span class=\"n\">get_words</span>               <span class=\"c1\"># Get the entire list of words of the dictionary</span>\n                        <span class=\"c1\"># This is equivalent to `words` property.</span>\n<span class=\"n\">is_quantized</span>            <span class=\"c1\"># whether the model has been quantized</span>\n<span class=\"n\">predict</span>                 <span class=\"c1\"># Given a string, get a list of labels and a list of corresponding probabilities.</span>\n<span class=\"n\">quantize</span>                <span class=\"c1\"># Quantize the model reducing the size of the model and it's memory footprint.</span>\n<span class=\"n\">save_model</span>              <span class=\"c1\"># Save the model to the given path</span>\n<span class=\"n\">test</span>                    <span class=\"c1\"># Evaluate supervised model using file given by path</span>\n<span class=\"n\">test_label</span>              <span class=\"c1\"># Return the precision and recall score for each label.</span>\n</pre>\n<p>The properties <tt>words</tt>, <tt>labels</tt> return the words and labels from\nthe dictionary :</p>\n<pre><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">words</span>         <span class=\"c1\"># equivalent to model.get_words()</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">labels</span>        <span class=\"c1\"># equivalent to model.get_labels()</span>\n</pre>\n<p>The object overrides <tt>__getitem__</tt> and <tt>__contains__</tt> functions in\norder to return the representation of a word and to check if a word is\nin the vocabulary.</p>\n<pre><span class=\"n\">model</span><span class=\"p\">[</span><span class=\"s1\">'king'</span><span class=\"p\">]</span>       <span class=\"c1\"># equivalent to model.get_word_vector('king')</span>\n<span class=\"s1\">'king'</span> <span class=\"ow\">in</span> <span class=\"n\">model</span>     <span class=\"c1\"># equivalent to `'king' in model.get_words()`</span>\n</pre>\n</div>\n<div id=\"join-the-fasttext-community\">\n<h3>Join the fastText community</h3>\n<ul>\n<li><a href=\"https://www.facebook.com/groups/1174547215919768\" rel=\"nofollow\">Facebook page</a></li>\n<li><a href=\"https://stackoverflow.com/questions/tagged/fasttext\" rel=\"nofollow\">Stack\noverflow</a></li>\n<li><a href=\"https://groups.google.com/forum/#!forum/fasttext-library\" rel=\"nofollow\">Google\ngroup</a></li>\n<li><a href=\"https://github.com/facebookresearch/fastText\" rel=\"nofollow\">GitHub</a></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7118814, "releases": {"0.1.0": [], "0.2.0": [{"comment_text": "", "digests": {"md5": "8efce1ae1717ea99e38fbe58f43f37e0", "sha256": "7f3cd26940c189cf401802267f9930559208639d90d9c4786e803c4cbce678b2"}, "downloads": -1, "filename": "fasttext-0.2.0.tar.gz", "has_sig": false, "md5_digest": "8efce1ae1717ea99e38fbe58f43f37e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41000, "upload_time": "2016-08-06T18:16:18", "upload_time_iso_8601": "2016-08-06T18:16:18.116221Z", "url": "https://files.pythonhosted.org/packages/f2/ad/fc0662133bed4196921eaf0c7274ba233e0c7da9bf90020c092fabb49794/fasttext-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4836e8d864911fb7dd22c6658d27a2ca", "sha256": "b850a5cad0e4aca48d2b094c596fd6d1a18fdb70eef7688852cca9d9b775f574"}, "downloads": -1, "filename": "fasttext-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4836e8d864911fb7dd22c6658d27a2ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35001, "upload_time": "2016-08-07T18:30:44", "upload_time_iso_8601": "2016-08-07T18:30:44.355557Z", "url": "https://files.pythonhosted.org/packages/3d/f8/f44bd2b0bdde60ded9d3cd50fcd2236e17dff29a81839ff693018dc2c360/fasttext-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "6574694de167845b7e56603a26a7b28b", "sha256": "47b0044aae3ab425336463e9bbe4f3fc2cf31655f4a558b07cb0ad59afea841d"}, "downloads": -1, "filename": "fasttext-0.3.0.tar.gz", "has_sig": false, "md5_digest": "6574694de167845b7e56603a26a7b28b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38058, "upload_time": "2016-08-09T01:48:24", "upload_time_iso_8601": "2016-08-09T01:48:24.491139Z", "url": "https://files.pythonhosted.org/packages/c0/82/8b4eba7e8700aaff694b69d3f6e08d8f367066a7ba60f7eb33cae7932b3f/fasttext-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "4767dc3b9b2de048787d4170319814aa", "sha256": "cceeeff68cb7897ecc343062aa3521f1d161eb2de75f24e9cf0f8515008bb2c6"}, "downloads": -1, "filename": "fasttext-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4767dc3b9b2de048787d4170319814aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38062, "upload_time": "2016-08-09T03:06:47", "upload_time_iso_8601": "2016-08-09T03:06:47.681815Z", "url": "https://files.pythonhosted.org/packages/e9/a3/0c8828993b2db1b2aef9fa3946aa645192a793f827957c1bac4e35baba28/fasttext-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "5101bc2420da8d5ac4b7e2c15c5d0035", "sha256": "40d1200b17bbf2182bc5a961b09751cef74c4f3eb6fb20cc17fda8e6c865646e"}, "downloads": -1, "filename": "fasttext-0.4.0.tar.gz", "has_sig": false, "md5_digest": "5101bc2420da8d5ac4b7e2c15c5d0035", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49323, "upload_time": "2016-08-09T12:32:18", "upload_time_iso_8601": "2016-08-09T12:32:18.594918Z", "url": "https://files.pythonhosted.org/packages/99/d5/93fd9024e6b0362e9f22966d392893c4e932f19336d9ec3ca0de2e463443/fasttext-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "3a71a01e20514a87117bf6d4a2c21c15", "sha256": "186bbca95533a71da7258de2759d9c319f3ecc3a9dba6acf129551fc9775501e"}, "downloads": -1, "filename": "fasttext-0.5.0.tar.gz", "has_sig": false, "md5_digest": "3a71a01e20514a87117bf6d4a2c21c15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45737, "upload_time": "2016-08-10T17:44:55", "upload_time_iso_8601": "2016-08-10T17:44:55.696069Z", "url": "https://files.pythonhosted.org/packages/d7/50/0ecd82eb5a6434701c5f5f0ae6ac082e36f472f2e92ba82b73450e405816/fasttext-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "f4da1543f106031ee178f52f4f46b464", "sha256": "6c9f86faed606e48307bc199e88ff46d1392532ad48420145f93b4609b7f6d3c"}, "downloads": -1, "filename": "fasttext-0.5.1.tar.gz", "has_sig": false, "md5_digest": "f4da1543f106031ee178f52f4f46b464", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45778, "upload_time": "2016-08-10T18:23:47", "upload_time_iso_8601": "2016-08-10T18:23:47.046524Z", "url": "https://files.pythonhosted.org/packages/99/00/e2619364079a2d682d79ac8c6eb7d2b4d4595ea06c5a27fa95bb4fb654ea/fasttext-0.5.1.tar.gz", "yanked": false}], "0.5.12": [{"comment_text": "", "digests": {"md5": "b03d3dd5683331441de9a992557086ac", "sha256": "d94654039676c10b8da596f41d84312352b640dc2de62e4fc7e83e6577501710"}, "downloads": -1, "filename": "fasttext-0.5.12.tar.gz", "has_sig": false, "md5_digest": "b03d3dd5683331441de9a992557086ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47330, "upload_time": "2016-08-10T18:27:54", "upload_time_iso_8601": "2016-08-10T18:27:54.108889Z", "url": "https://files.pythonhosted.org/packages/bb/eb/5b4925cee71f5e4b6a6ee6dc2915958880d80c283ca052daf3f048307b6b/fasttext-0.5.12.tar.gz", "yanked": false}], "0.5.13": [{"comment_text": "", "digests": {"md5": "30ca1f050adf9414457ef6ec6fa0dc86", "sha256": "bf9c6f6ce51aba102b344cb198237c99378ea1d23f26c2547b303acd63dbc725"}, "downloads": -1, "filename": "fasttext-0.5.13.tar.gz", "has_sig": false, "md5_digest": "30ca1f050adf9414457ef6ec6fa0dc86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 47339, "upload_time": "2016-08-10T18:29:39", "upload_time_iso_8601": "2016-08-10T18:29:39.634656Z", "url": "https://files.pythonhosted.org/packages/8c/c4/a5e482e24bd05f7862d3e863456a162ee443dd6584ca43b4f17e1817dfd4/fasttext-0.5.13.tar.gz", "yanked": false}], "0.5.14": [{"comment_text": "", "digests": {"md5": "b0285ccbb6a2570c679999cce14e39ca", "sha256": "de49c55e6ddde76bb53bba92d21f6972f7dc07f73888fffd60433d412d77ecbd"}, "downloads": -1, "filename": "fasttext-0.5.14.tar.gz", "has_sig": false, "md5_digest": "b0285ccbb6a2570c679999cce14e39ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87354, "upload_time": "2016-08-10T18:30:51", "upload_time_iso_8601": "2016-08-10T18:30:51.865090Z", "url": "https://files.pythonhosted.org/packages/7b/28/d60fb0f960a1249d58a88bf8cfbf20d4aaa599ba6552eb771b69a59c876b/fasttext-0.5.14.tar.gz", "yanked": false}], "0.5.15": [{"comment_text": "", "digests": {"md5": "c6ff9106950af049dd240d184c662f0c", "sha256": "a42265edc3dcf0d5eae2dcf7c67fc7e0423dd53d473a6c183159cdb16053ed8b"}, "downloads": -1, "filename": "fasttext-0.5.15.tar.gz", "has_sig": false, "md5_digest": "c6ff9106950af049dd240d184c662f0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87373, "upload_time": "2016-08-10T18:34:05", "upload_time_iso_8601": "2016-08-10T18:34:05.661923Z", "url": "https://files.pythonhosted.org/packages/1e/4d/331099c9e3a2a7a4c1c71d23a63f4164d01b42bfc6d9e2b3cb01dbd9a336/fasttext-0.5.15.tar.gz", "yanked": false}], "0.5.16": [{"comment_text": "", "digests": {"md5": "5dace7a66cf8a3d967a16f453bd4d306", "sha256": "621790b9b8ce77c8bfeaa6c296f941af5015c0a8a2476a162414bccdb57621ae"}, "downloads": -1, "filename": "fasttext-0.5.16.tar.gz", "has_sig": false, "md5_digest": "5dace7a66cf8a3d967a16f453bd4d306", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51117, "upload_time": "2016-08-10T18:34:48", "upload_time_iso_8601": "2016-08-10T18:34:48.014659Z", "url": "https://files.pythonhosted.org/packages/be/36/4aa4332fe1d1eea95a72fe9bdcc2e5b92995102c0258ec0393cf4aaa239c/fasttext-0.5.16.tar.gz", "yanked": false}], "0.5.17": [{"comment_text": "", "digests": {"md5": "2015808ae10e95050b05446f044e1a69", "sha256": "ff093849071ad461fa7b41e529188fed4c259d4d70420a77a997e3d50fce1c39"}, "downloads": -1, "filename": "fasttext-0.5.17.tar.gz", "has_sig": false, "md5_digest": "2015808ae10e95050b05446f044e1a69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51002, "upload_time": "2016-08-10T18:36:14", "upload_time_iso_8601": "2016-08-10T18:36:14.866480Z", "url": "https://files.pythonhosted.org/packages/cf/40/5e140412c22f5d5bdae1831fc9f7cd0a1be72109ca217266e7bc7d1f4188/fasttext-0.5.17.tar.gz", "yanked": false}], "0.5.18": [{"comment_text": "", "digests": {"md5": "9da6996178a2d426612aa4fba6ea0e18", "sha256": "c35348db73cab6f4b75fab29af5e599aa783719f06b29df05f240c001e77c9b3"}, "downloads": -1, "filename": "fasttext-0.5.18.tar.gz", "has_sig": false, "md5_digest": "9da6996178a2d426612aa4fba6ea0e18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52515, "upload_time": "2016-08-12T00:32:13", "upload_time_iso_8601": "2016-08-12T00:32:13.195400Z", "url": "https://files.pythonhosted.org/packages/53/ab/b96aa386fec654b40d4211154d909ca35f30fe2b5d0bcdd6907605d9f5f7/fasttext-0.5.18.tar.gz", "yanked": false}], "0.5.19": [{"comment_text": "", "digests": {"md5": "1a793a2a065bef42bd703a3c19dc6506", "sha256": "a99814fab22ef8c26084eed261dad5b645c7ceedece989c36602d02819c03180"}, "downloads": -1, "filename": "fasttext-0.5.19.tar.gz", "has_sig": false, "md5_digest": "1a793a2a065bef42bd703a3c19dc6506", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52549, "upload_time": "2016-08-12T09:08:41", "upload_time_iso_8601": "2016-08-12T09:08:41.788492Z", "url": "https://files.pythonhosted.org/packages/1f/56/6bbd485828c420d9903607298f057d46911631a65764993729420f79d689/fasttext-0.5.19.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "a4d3a525fd7920884933ddf426cc22aa", "sha256": "4b098ca1a18b5bbbf4697d45f5235cb49e1e4e2204570376b42e1fd258f1b0d8"}, "downloads": -1, "filename": "fasttext-0.6.0.tar.gz", "has_sig": false, "md5_digest": "a4d3a525fd7920884933ddf426cc22aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57992, "upload_time": "2016-08-14T14:49:52", "upload_time_iso_8601": "2016-08-14T14:49:52.754616Z", "url": "https://files.pythonhosted.org/packages/47/27/48291665d3446b46bc9a8500be8f9be35253880c1c24009cec9fe197d2d4/fasttext-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "aa5790d16c345672efc21ea43ab31254", "sha256": "5d58ef4780cdb04a493052491c82f09e3eb376865665a8352c964afea485fb02"}, "downloads": -1, "filename": "fasttext-0.6.1.tar.gz", "has_sig": false, "md5_digest": "aa5790d16c345672efc21ea43ab31254", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61125, "upload_time": "2016-08-15T03:35:32", "upload_time_iso_8601": "2016-08-15T03:35:32.104829Z", "url": "https://files.pythonhosted.org/packages/f7/e2/eeac063f0b33cafa77fe7a7a0a820c37c33910036cbd03fa5700846ec0d5/fasttext-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "3b8ecd76ab16889a4fb3831c3e82febb", "sha256": "008a49e280f44ab857d762d7309ed35d346c0cbc1ba46c6ddffd7ad5ba8859ea"}, "downloads": -1, "filename": "fasttext-0.6.2.tar.gz", "has_sig": false, "md5_digest": "3b8ecd76ab16889a4fb3831c3e82febb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61873, "upload_time": "2016-08-15T03:41:26", "upload_time_iso_8601": "2016-08-15T03:41:26.806211Z", "url": "https://files.pythonhosted.org/packages/91/bd/dc729e92072f9fe3cec1d5b8822625f782b2e044383e5c32e2d039781b60/fasttext-0.6.2.tar.gz", "yanked": false}], "0.6.3": [], "0.6.4": [{"comment_text": "", "digests": {"md5": "c4e8516e0773b8d70fc341e38df958d1", "sha256": "875042d16c53bfee5ff90f290fae33f527c05b3d959907a6ce5260512ae807f8"}, "downloads": -1, "filename": "fasttext-0.6.4.tar.gz", "has_sig": false, "md5_digest": "c4e8516e0773b8d70fc341e38df958d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63867, "upload_time": "2016-08-20T00:29:30", "upload_time_iso_8601": "2016-08-20T00:29:30.877679Z", "url": "https://files.pythonhosted.org/packages/e7/46/a24129eea8a0fc2328253c7075c6eb2bf7cf467aacb29987bedb22d9f182/fasttext-0.6.4.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "cf9ccf0338d6c7805630d8829127b94b", "sha256": "eda0156a157c3c198f4af52578c6b79806607e6cd169863364817f2810423699"}, "downloads": -1, "filename": "fasttext-0.7.0.tar.gz", "has_sig": false, "md5_digest": "cf9ccf0338d6c7805630d8829127b94b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65834, "upload_time": "2016-08-22T10:22:27", "upload_time_iso_8601": "2016-08-22T10:22:27.928552Z", "url": "https://files.pythonhosted.org/packages/53/d4/f9dcef39051fa766104eb33ae5e4bd24cfcb39088e0ed361e9bb75eca32f/fasttext-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "656cb9e11c820e1a2df72271b901bcba", "sha256": "a847d67ec1ca1cfdd23378e881babd84d31dcdd69093b39db1385492a1d9681a"}, "downloads": -1, "filename": "fasttext-0.7.1.tar.gz", "has_sig": false, "md5_digest": "656cb9e11c820e1a2df72271b901bcba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65854, "upload_time": "2016-08-22T17:37:26", "upload_time_iso_8601": "2016-08-22T17:37:26.796154Z", "url": "https://files.pythonhosted.org/packages/ba/3c/c0729e3d754d92f1de924c67878fcc4fe8c397dd73272dc7e546e4376970/fasttext-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "0a5afa1edf751bcc09c635fd68e9e7e2", "sha256": "7a3ef1d07605fa9386e64520af3a229ab8a64ca8d719fd2e5ed11b431d1c20d6"}, "downloads": -1, "filename": "fasttext-0.7.2.tar.gz", "has_sig": false, "md5_digest": "0a5afa1edf751bcc09c635fd68e9e7e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69355, "upload_time": "2016-08-24T21:04:59", "upload_time_iso_8601": "2016-08-24T21:04:59.974453Z", "url": "https://files.pythonhosted.org/packages/38/5d/1343eca3fa52526f2682dac8064801f2e39fa26f326143ad15127f89c52d/fasttext-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "067141ea410161e39f51fa950036db37", "sha256": "b22f380e33def27c8b60f4769b9373a845182c0eb079554217dcd1d11f39a1e2"}, "downloads": -1, "filename": "fasttext-0.7.3.tar.gz", "has_sig": false, "md5_digest": "067141ea410161e39f51fa950036db37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71515, "upload_time": "2016-09-01T16:04:36", "upload_time_iso_8601": "2016-09-01T16:04:36.815562Z", "url": "https://files.pythonhosted.org/packages/ea/8d/d6fb7dcd2e8c950a3af3a07ce12c80fce35710bb04d98f0734b4568ff704/fasttext-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "6f011b43e5517e4a8d906de909186a6d", "sha256": "5f9af945776be6d72811cfcb79b43b25cc1250466470e81227e721230fe988d9"}, "downloads": -1, "filename": "fasttext-0.7.4.tar.gz", "has_sig": false, "md5_digest": "6f011b43e5517e4a8d906de909186a6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71531, "upload_time": "2016-09-01T16:39:04", "upload_time_iso_8601": "2016-09-01T16:39:04.821920Z", "url": "https://files.pythonhosted.org/packages/64/e9/a44d03ae37898f367bbfeb24b4dbf952fa61a01b03d867786051017deca6/fasttext-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "300d83b1b82243b93e1a4eac319da5ff", "sha256": "ea866dd9b65fff8a27f9e86b9ea91b4694b5cd4c817deece8ecc384099f5d70c"}, "downloads": -1, "filename": "fasttext-0.7.5.tar.gz", "has_sig": false, "md5_digest": "300d83b1b82243b93e1a4eac319da5ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71360, "upload_time": "2016-09-01T16:58:09", "upload_time_iso_8601": "2016-09-01T16:58:09.922804Z", "url": "https://files.pythonhosted.org/packages/a7/fb/15d19c78d504bf3cf70c4bf34d448343a32870974c75c5e14bcbae5a60c3/fasttext-0.7.5.tar.gz", "yanked": false}], "0.7.6": [{"comment_text": "", "digests": {"md5": "37e77f38dc1e60fe7c69ccfe291e0178", "sha256": "587b0cb5100de00dcc071329ef7453b61c72dfdeba528c2760c81d657251eb6d"}, "downloads": -1, "filename": "fasttext-0.7.6.tar.gz", "has_sig": false, "md5_digest": "37e77f38dc1e60fe7c69ccfe291e0178", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71450, "upload_time": "2016-09-06T04:48:15", "upload_time_iso_8601": "2016-09-06T04:48:15.882692Z", "url": "https://files.pythonhosted.org/packages/e5/b3/4d485e4b32a8dc24e574caa805327bba6577aaf8c2ea91f99fa0bd02ec96/fasttext-0.7.6.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "d8e03abf5d914126e6e140bbceb2c6da", "sha256": "a2c8cd8a93cf344f22ff5ceeb1d1843a7164af4ec8ce75affdb906563c0012c8"}, "downloads": -1, "filename": "fasttext-0.8.0.tar.gz", "has_sig": false, "md5_digest": "d8e03abf5d914126e6e140bbceb2c6da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72775, "upload_time": "2016-10-05T08:47:22", "upload_time_iso_8601": "2016-10-05T08:47:22.499214Z", "url": "https://files.pythonhosted.org/packages/3a/9b/9146314109d5299045437c0ef2171f7625f1993c8a890cedce7254a0e8fa/fasttext-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "86ced55ece3a40d6ed89064a2cd424a2", "sha256": "72a1af1ceaa656e9307ee33a921af4de0555c5fdfb3fdaf4d4994df56fe82672"}, "downloads": -1, "filename": "fasttext-0.8.1.tar.gz", "has_sig": false, "md5_digest": "86ced55ece3a40d6ed89064a2cd424a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73961, "upload_time": "2016-11-10T08:59:06", "upload_time_iso_8601": "2016-11-10T08:59:06.606273Z", "url": "https://files.pythonhosted.org/packages/3e/4f/688c6655d1053467059bea9d8b03fa2dbdc925b333faaba823ee2039db1b/fasttext-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "771514b44835d19ec7fa10cf8753562d", "sha256": "6a871c5ea7fee9aec272a348d17cc8d39e066f810813e7229b4d4fbc41756e04"}, "downloads": -1, "filename": "fasttext-0.8.2.tar.gz", "has_sig": false, "md5_digest": "771514b44835d19ec7fa10cf8753562d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73970, "upload_time": "2016-12-21T00:56:28", "upload_time_iso_8601": "2016-12-21T00:56:28.022807Z", "url": "https://files.pythonhosted.org/packages/15/b0/1a6c45d2d7853401eaa7f392c86949b51a02bcbc2fd804f018abb1e9a97f/fasttext-0.8.2.tar.gz", "yanked": false}], "0.8.3": [{"comment_text": "", "digests": {"md5": "f174e21c894e4f340ea74ab11e5600f1", "sha256": "2fe7eb55e34bf69235a9cf468a774db423fd727538618ad646a9c1cf9d3f40ae"}, "downloads": -1, "filename": "fasttext-0.8.3-cp27-cp27m-macosx_10_6_x86_64.whl", "has_sig": false, "md5_digest": "f174e21c894e4f340ea74ab11e5600f1", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 141882, "upload_time": "2019-06-24T12:55:35", "upload_time_iso_8601": "2019-06-24T12:55:35.879078Z", "url": "https://files.pythonhosted.org/packages/1b/a1/70c1daf3e8d91b0ded36252546656359fb2a3828ddfe9df7285b438eedee/fasttext-0.8.3-cp27-cp27m-macosx_10_6_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94ed295f0ae5461757d3626a262269cc", "sha256": "2ae0c5904426308e9df921916acf49ddbac5e2a4559b53534ed542e0c6c34eec"}, "downloads": -1, "filename": "fasttext-0.8.3-py2.7-macosx-10.6-x86_64.egg", "has_sig": false, "md5_digest": "94ed295f0ae5461757d3626a262269cc", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 144791, "upload_time": "2019-06-24T12:55:38", "upload_time_iso_8601": "2019-06-24T12:55:38.189584Z", "url": "https://files.pythonhosted.org/packages/5d/f1/8495ce001d60a2720c976c56d6e5f10c105aeec26239900fb5af78a7a638/fasttext-0.8.3-py2.7-macosx-10.6-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "41fef8f0bdc610340a355cada4edace8", "sha256": "2eebf19f48f507684709db0da300d725a90949a687fc5b2114ccca73e7b7b96d"}, "downloads": -1, "filename": "fasttext-0.8.3.tar.gz", "has_sig": false, "md5_digest": "41fef8f0bdc610340a355cada4edace8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73993, "upload_time": "2017-02-14T16:40:53", "upload_time_iso_8601": "2017-02-14T16:40:53.261993Z", "url": "https://files.pythonhosted.org/packages/a4/86/ff826211bc9e28d4c371668b30b4b2c38a09127e5e73017b1c0cd52f9dfa/fasttext-0.8.3.tar.gz", "yanked": false}], "0.8.4": [{"comment_text": "", "digests": {"md5": "40a2565c067fd83ac79469a6d1560e4b", "sha256": "9973b94d4bc04b9e18ff583d2cef02fd6ac9a08fb107c315e3214ade5a20e440"}, "downloads": -1, "filename": "fasttext-0.8.4-cp27-cp27m-macosx_10_6_x86_64.whl", "has_sig": false, "md5_digest": "40a2565c067fd83ac79469a6d1560e4b", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 141886, "upload_time": "2019-06-24T12:57:25", "upload_time_iso_8601": "2019-06-24T12:57:25.344512Z", "url": "https://files.pythonhosted.org/packages/63/34/cb4024dec947332c54cd355f6e1ab787adea63e31847d20fafa24f5151d8/fasttext-0.8.4-cp27-cp27m-macosx_10_6_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b7717b56969d4f07ec1bfae3c204db78", "sha256": "606ff08a31d906c27862271122e6208595f46b55f0c10f1d7e66c9d5dd980fe8"}, "downloads": -1, "filename": "fasttext-0.8.4.tar.gz", "has_sig": false, "md5_digest": "b7717b56969d4f07ec1bfae3c204db78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86857, "upload_time": "2019-06-24T12:57:27", "upload_time_iso_8601": "2019-06-24T12:57:27.158830Z", "url": "https://files.pythonhosted.org/packages/0f/de/301b156bd1fbb84b30397d3481eeb2612cd66b4d4d403da00834f1ec4a30/fasttext-0.8.4.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "293e4aa414bb0ac8877cd7b5ea32fb2d", "sha256": "f79b3447b1612b9b1ad791d4be97db3fecb97762dba01e6fbec389d0d0874772"}, "downloads": -1, "filename": "fasttext-0.9.1-cp27-cp27m-macosx_10_6_x86_64.whl", "has_sig": false, "md5_digest": "293e4aa414bb0ac8877cd7b5ea32fb2d", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 255978, "upload_time": "2019-06-27T08:21:47", "upload_time_iso_8601": "2019-06-27T08:21:47.737209Z", "url": "https://files.pythonhosted.org/packages/5d/91/14eb485d641099fc50d3453d0761b3063d8374b67c495758c4cfc07fb968/fasttext-0.9.1-cp27-cp27m-macosx_10_6_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2eb251beb9d525c0f810f29b0420bdc", "sha256": "6ead9c6aafe985472066e27c43e33f581b192befd136a84c3c2e8197e7e05be6"}, "downloads": -1, "filename": "fasttext-0.9.1.tar.gz", "has_sig": false, "md5_digest": "d2eb251beb9d525c0f810f29b0420bdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57735, "upload_time": "2019-06-27T08:21:50", "upload_time_iso_8601": "2019-06-27T08:21:50.054994Z", "url": "https://files.pythonhosted.org/packages/10/61/2e01f1397ec533756c1d893c22d9d5ed3fce3a6e4af1976e0d86bb13ea97/fasttext-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "a7b468fa4ca6474dead051536d7e1e7c", "sha256": "665556f1f6dcb4fcbe25fa8ebcd4f71b18fa96a090de09d88d97a60cbd29dcb5"}, "downloads": -1, "filename": "fasttext-0.9.2.tar.gz", "has_sig": false, "md5_digest": "a7b468fa4ca6474dead051536d7e1e7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68850, "upload_time": "2020-04-28T09:54:50", "upload_time_iso_8601": "2020-04-28T09:54:50.807132Z", "url": "https://files.pythonhosted.org/packages/f8/85/e2b368ab6d3528827b147fdb814f8189acc981a4bc2f99ab894650e05c40/fasttext-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a7b468fa4ca6474dead051536d7e1e7c", "sha256": "665556f1f6dcb4fcbe25fa8ebcd4f71b18fa96a090de09d88d97a60cbd29dcb5"}, "downloads": -1, "filename": "fasttext-0.9.2.tar.gz", "has_sig": false, "md5_digest": "a7b468fa4ca6474dead051536d7e1e7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68850, "upload_time": "2020-04-28T09:54:50", "upload_time_iso_8601": "2020-04-28T09:54:50.807132Z", "url": "https://files.pythonhosted.org/packages/f8/85/e2b368ab6d3528827b147fdb814f8189acc981a4bc2f99ab894650e05c40/fasttext-0.9.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:23 2020"}