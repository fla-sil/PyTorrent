{"info": {"author": "Aleksandr Mironov", "author_email": "a.m.mironov@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Database", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Zerorm\n======\n\nZerorm is a simple wrapper for three amazing packages. This repository is the\nplace where `TinyDB <https://github.com/msiemens/tinydb>`_, `Schematics <https://github.com/schematics/schematics>`_\nand `Lifter <https://github.com/EliotBerriot/lifter>`_ together look like Django ORM.\n\nIt's still work in progress and not everything looks like Django ORM, but it will.\n\nInstallation\n------------\n\n.. code-block:: shell\n\n     pip install zerorm\n\nUsage\n-----\n\nFirst create a file with models and database instance attached to every model:\n\n.. code-block:: python\n\n    from zerorm import db, models\n\n    database = db('db.json')\n\n\n    class Message(models.Model):\n        author = models.StringType(required=True)\n        author_email = models.EmailType()\n        text = models.StringType()\n        views = models.IntType(min_value=0)\n\n        class Meta:\n            database = database\n\nNow create some objects:\n\n.. code-block:: pycon\n\n    >>> from models import Message\n    >>>\n    >>> bob_message = Message(author='Bob',\n    ...                       author_email='bob@example.com',\n    ...                       text='Hello, everyone!')\n    >>> bob_message\n    <Message: Message object>\n    >>> bob_message.save()  # Save object\n    1\n    >>>\n    >>> bob_message.views = 3\n    >>> bob_message.save()  # Update object\n    >>>\n    >>> alice_message = Message.objects.create(author='Alice',\n    ...                                        text='Hi, Bob!',\n    ...                                        views=0)\n    >>> alice_message\n    <Message: Message object>\n\nAnd try to retrieve them via *objects*\n\n.. code-block:: pycon\n\n    >>> Message.objects.all()\n    <QuerySet, len() = 2>\n    >>> list(Message.objects.all())\n    [<Message: Message object>, <Message: Message object>]\n    >>>\n    >>> second_message = Message.objects.get(eid=2)\n    >>> second_message.author\n    'Alice'\n    >>>\n    >>> Message.objects.filter(views__gte=3)  # Only Bob's message has 3 views\n    <QuerySet, len() = 1>\n    >>> list(Message.objects.filter(views__gte=3))\n    [<Message: Message object>]\n\nYou can also redefine model's *__str__* method for better repr just like in Django.\n\n.. code-block:: python\n\n    class Message(models.Model):\n        ...\n\n        def __str__(self):\n            return 'by {}'.format(self.author)\n\n.. code-block:: pycon\n\n    >>> list(Message.objects.all())\n    [<Message: by Bob>, <Message: by Alice>]\n\nLicense\n-------\n\nMIT. See LICENSE for details.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hedin/zerorm", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "zerorm", "package_url": "https://pypi.org/project/zerorm/", "platform": "", "project_url": "https://pypi.org/project/zerorm/", "project_urls": {"Homepage": "https://github.com/hedin/zerorm"}, "release_url": "https://pypi.org/project/zerorm/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "Looks like ORM and stores your data", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Zerorm is a simple wrapper for three amazing packages. This repository is the\nplace where <a href=\"https://github.com/msiemens/tinydb\" rel=\"nofollow\">TinyDB</a>, <a href=\"https://github.com/schematics/schematics\" rel=\"nofollow\">Schematics</a>\nand <a href=\"https://github.com/EliotBerriot/lifter\" rel=\"nofollow\">Lifter</a> together look like Django ORM.</p>\n<p>It\u2019s still work in progress and not everything looks like Django ORM, but it will.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install zerorm\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First create a file with models and database instance attached to every model:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zerorm</span> <span class=\"kn\">import</span> <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">models</span>\n\n<span class=\"n\">database</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"p\">(</span><span class=\"s1\">'db.json'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Message</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">StringType</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">author_email</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">EmailType</span><span class=\"p\">()</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">StringType</span><span class=\"p\">()</span>\n    <span class=\"n\">views</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">IntType</span><span class=\"p\">(</span><span class=\"n\">min_value</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">database</span> <span class=\"o\">=</span> <span class=\"n\">database</span>\n</pre>\n<p>Now create some objects:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">models</span> <span class=\"kn\">import</span> <span class=\"n\">Message</span>\n<span class=\"go\">&gt;&gt;&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bob_message</span> <span class=\"o\">=</span> <span class=\"n\">Message</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">=</span><span class=\"s1\">'Bob'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                      <span class=\"n\">author_email</span><span class=\"o\">=</span><span class=\"s1\">'bob@example.com'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                      <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'Hello, everyone!'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bob_message</span>\n<span class=\"go\">&lt;Message: Message object&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bob_message</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>  <span class=\"c1\"># Save object</span>\n<span class=\"go\">1\n&gt;&gt;&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bob_message</span><span class=\"o\">.</span><span class=\"n\">views</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">bob_message</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>  <span class=\"c1\"># Update object</span>\n<span class=\"go\">&gt;&gt;&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">alice_message</span> <span class=\"o\">=</span> <span class=\"n\">Message</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">author</span><span class=\"o\">=</span><span class=\"s1\">'Alice'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                                       <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'Hi, Bob!'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>                                       <span class=\"n\">views</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">alice_message</span>\n<span class=\"go\">&lt;Message: Message object&gt;</span>\n</pre>\n<p>And try to retrieve them via <em>objects</em></p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Message</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"go\">&lt;QuerySet, len() = 2&gt;\n</span><span class=\"nb\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Message</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">())</span>\n<span class=\"go\">[&lt;Message: Message object&gt;, &lt;Message: Message object&gt;]\n&gt;&gt;&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">second_message</span> <span class=\"o\">=</span> <span class=\"n\">Message</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">eid</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">second_message</span><span class=\"o\">.</span><span class=\"n\">author</span>\n<span class=\"go\">'Alice'\n&gt;&gt;&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Message</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">views__gte</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># Only Bob's message has 3 views</span>\n<span class=\"go\">&lt;QuerySet, len() = 1&gt;\n</span><span class=\"nb\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Message</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">views__gte</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"go\">[&lt;Message: Message object&gt;]</span>\n</pre>\n<p>You can also redefine model\u2019s <em>__str__</em> method for better repr just like in Django.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Message</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__str__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'by </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">author</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"nb\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Message</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">())</span>\n<span class=\"go\">[&lt;Message: by Bob&gt;, &lt;Message: by Alice&gt;]</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT. See LICENSE for details.</p>\n</div>\n\n          </div>"}, "last_serial": 3484965, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0caad704b9ee0eced50c5e523d7febeb", "sha256": "845a1a2245e1acce638b7c0967827ebaa084f356d721f8a6594226c1f09e3eee"}, "downloads": -1, "filename": "zerorm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0caad704b9ee0eced50c5e523d7febeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3357, "upload_time": "2017-12-30T15:03:37", "upload_time_iso_8601": "2017-12-30T15:03:37.876219Z", "url": "https://files.pythonhosted.org/packages/b8/cf/1d958448cf7658aa6368363ac797df058716e97ea343c37222a40e5f33f5/zerorm-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "346fa068e5a6b3c66cc7e26d03a17d14", "sha256": "52c7d71abe913fbe854f3d129ef5734320202b23a3eccbe82c80e6d2a7f25afe"}, "downloads": -1, "filename": "zerorm-0.2.0.tar.gz", "has_sig": false, "md5_digest": "346fa068e5a6b3c66cc7e26d03a17d14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3407, "upload_time": "2018-01-12T18:21:05", "upload_time_iso_8601": "2018-01-12T18:21:05.398153Z", "url": "https://files.pythonhosted.org/packages/0a/b7/c31cec17ed84772c4a08c2e8b601117e1089e2c1446f80e65ea2b256d4d9/zerorm-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "346fa068e5a6b3c66cc7e26d03a17d14", "sha256": "52c7d71abe913fbe854f3d129ef5734320202b23a3eccbe82c80e6d2a7f25afe"}, "downloads": -1, "filename": "zerorm-0.2.0.tar.gz", "has_sig": false, "md5_digest": "346fa068e5a6b3c66cc7e26d03a17d14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3407, "upload_time": "2018-01-12T18:21:05", "upload_time_iso_8601": "2018-01-12T18:21:05.398153Z", "url": "https://files.pythonhosted.org/packages/0a/b7/c31cec17ed84772c4a08c2e8b601117e1089e2c1446f80e65ea2b256d4d9/zerorm-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:34 2020"}