{"info": {"author": "jeeberhardt", "author_email": "qksoneo@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"], "description": "[![Documentation Status](https://readthedocs.org/projects/unrolr/badge/?version=latest)](https://unrolr.readthedocs.io/en/latest/?badge=latest)\n\n# Unrolr\nConformational analysis of MD trajectories based on (pivot-based) Stochastic Proximity Embedding using dihedral distance as a metric (https://github.com/jeeberhardt/unrolr).\n\n## Prerequisites\n\nYou need, at a minimum (requirements.txt):\n\n* Python\n* NumPy\n* H5py\n* Pandas\n* Matplotlib\n* PyOpenCL\n* MDAnalysis\n\n## Installation on UNIX (Debian/Ubuntu)\n\n1 . First, you have to install OpenCL:\n* MacOS: Good news, you don't have to install OpenCL, it works out-of-the-box. (Update: bad news, OpenCL is now depreciated in macOS 10.14. Thanks Apple.)\n* AMD:  You have to install the [AMDGPU graphics stack](https://amdgpu-install.readthedocs.io/en/amd-18.30/index.html).\n* Nvidia: You have to install the [CUDA toolkit](https://developer.nvidia.com/cuda-downloads).\n* Intel: And of course it's working also on CPU just by installing this [runtime software package](https://software.intel.com/en-us/articles/opencl-drivers). Alternatively, the CPU-based OpenCL driver can be also installed through the package ```pocl``` (http://portablecl.org/) using Anaconda.\n\nFor any other informations, the official installation guide of PyOpenCL is available [here](https://documen.tician.de/pyopencl/misc.html).\n\n2 . I highly recommand you to install the Anaconda distribution (https://www.continuum.io/downloads) if you want a clean python environnment with nearly all the prerequisites already installed. To install everything properly, you just have to do this:\n\n```bash\n$ conda create -n unrolr python=3\n$ conda activate unrolr\n$ conda install -c conda-forge mkl numpy scipy pandas matplotlib h5py MDAnalysis pyopencl ocl-icd-system\n```\n\n3 . Install unrolr\n```bash\n$ pip install unrolr\n```\n... or from the source directly\n\n```bash\n$ git clone https://github.com/jeeberhardt/unrolr\n$ cd unrolr\n$ python setup.py build install\n```\n\n## OpenCL context\n\nBefore running Unrolr, you need to define the OpenCL context. And it is a good way to see if everything is working correctly.\n\n```bash\n$ python -c 'import pyopencl as cl; cl.create_some_context()'\n```\n\nHere in my example, I have the choice between 3 differents computing device (2 graphic cards and one CPU). \n\n```bash\nChoose platform:\n[0] <pyopencl.Platform 'AMD Accelerated Parallel Processing' at 0x7f97e96a8430>\nChoice [0]:0\nChoose device(s):\n[0] <pyopencl.Device 'Tahiti' on 'AMD Accelerated Parallel Processing' at 0x1e18a30>\n[1] <pyopencl.Device 'Tahiti' on 'AMD Accelerated Parallel Processing' at 0x254a110>\n[2] <pyopencl.Device 'Intel(R) Core(TM) i7-3820 CPU @ 3.60GHz' on 'AMD Accelerated Parallel Processing' at 0x21d0300>\nChoice, comma-separated [0]:1\nSet the environment variable PYOPENCL_CTX='0:1' to avoid being asked again.\n```\n\nNow you can set the environment variable.\n\n```bash\n$ export PYOPENCL_CTX='0:1'\n```\n\n## Example\n\n```python\nfrom unrolr import Unrolr\nfrom unrolr.feature_extraction import Dihedral\nfrom unrolr.utils import save_dataset\n\n\ntop_file = 'examples/inputs/villin.psf'\ntrj_file = 'examples/inputs/villin.dcd'\n\n# Extract all calpha dihedral angles from trajectory and store them into a HDF5 file\nd = Dihedral(top_file, trj_file, selection='all', dihedral_type='calpha').run()\nX = d.result\nsave_dataset('dihedral_angles.h5', \"dihedral_angles\", X)\n\n# Fit X using Unrolr (pSPE + dihedral distance) and save the embedding into a csv file\n# The initial embedding is obtained using PCA (init = 'pca') with the OpenCL implementation\n# to run SPE, a CPU implementation can be used as an alternative (platform='CPU')\nU = Unrolr(r_neighbor=0.27, n_iter=50000, init='pca', platform='OpenCL', verbose=1)\nU.fit_transform(X)\nU.save(fname='embedding.csv')\n\nprint('%4.2f %4.2f' % (U.stress, U.correlation))\n```\n\n## Todo list\n- [ ] Compare SPE performance with UMAP\n- [x] Compatibility with python 3\n- [x] Compatibility with the latest version of MDAnalysis (==0.17)\n- [ ] Unit tests\n- [x] Accessible directly from pip\n- [ ] Improve OpenCL performance (global/local memory)\n\n## Citation\nEberhardt, J., Stote, R. H., & Dejaegere, A. (2018). Unrolr: Structural analysis of protein conformations using stochastic proximity embedding. Journal of Computational Chemistry, 39(30), 2551-2557. https://doi.org/10.1002/jcc.25599\n\n## License\nMIT\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeeberhardt/unrolr", "keywords": "bioinformatics,molecular structures,molecular dynamics,OpenCL,dimensionality reduction,stochastic proximity embedding,dihedral angles", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "unrolr", "package_url": "https://pypi.org/project/unrolr/", "platform": "", "project_url": "https://pypi.org/project/unrolr/", "project_urls": {"Homepage": "https://github.com/jeeberhardt/unrolr", "Repository": "https://github.com/jeeberhardt/unrolr"}, "release_url": "https://pypi.org/project/unrolr/0.5.0.3/", "requires_dist": ["pyopencl (>=2015.1)", "matplotlib (>=1.4.3)", "MDAnalysis (>=0.17.0)", "h5py (>=2.5.0)", "numpy (>=1.11.3)", "scipy (>=1.2.1)", "pandas (>=0.17.1)"], "requires_python": ">=3.6", "summary": "Dimensionality reduction method for MD trajectories", "version": "0.5.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://unrolr.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90cd1f3799c8c798d6432932d5bf8400aaf61816/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f756e726f6c722f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>Unrolr</h1>\n<p>Conformational analysis of MD trajectories based on (pivot-based) Stochastic Proximity Embedding using dihedral distance as a metric (<a href=\"https://github.com/jeeberhardt/unrolr\" rel=\"nofollow\">https://github.com/jeeberhardt/unrolr</a>).</p>\n<h2>Prerequisites</h2>\n<p>You need, at a minimum (requirements.txt):</p>\n<ul>\n<li>Python</li>\n<li>NumPy</li>\n<li>H5py</li>\n<li>Pandas</li>\n<li>Matplotlib</li>\n<li>PyOpenCL</li>\n<li>MDAnalysis</li>\n</ul>\n<h2>Installation on UNIX (Debian/Ubuntu)</h2>\n<p>1 . First, you have to install OpenCL:</p>\n<ul>\n<li>MacOS: Good news, you don't have to install OpenCL, it works out-of-the-box. (Update: bad news, OpenCL is now depreciated in macOS 10.14. Thanks Apple.)</li>\n<li>AMD:  You have to install the <a href=\"https://amdgpu-install.readthedocs.io/en/amd-18.30/index.html\" rel=\"nofollow\">AMDGPU graphics stack</a>.</li>\n<li>Nvidia: You have to install the <a href=\"https://developer.nvidia.com/cuda-downloads\" rel=\"nofollow\">CUDA toolkit</a>.</li>\n<li>Intel: And of course it's working also on CPU just by installing this <a href=\"https://software.intel.com/en-us/articles/opencl-drivers\" rel=\"nofollow\">runtime software package</a>. Alternatively, the CPU-based OpenCL driver can be also installed through the package <code>pocl</code> (<a href=\"http://portablecl.org/\" rel=\"nofollow\">http://portablecl.org/</a>) using Anaconda.</li>\n</ul>\n<p>For any other informations, the official installation guide of PyOpenCL is available <a href=\"https://documen.tician.de/pyopencl/misc.html\" rel=\"nofollow\">here</a>.</p>\n<p>2 . I highly recommand you to install the Anaconda distribution (<a href=\"https://www.continuum.io/downloads\" rel=\"nofollow\">https://www.continuum.io/downloads</a>) if you want a clean python environnment with nearly all the prerequisites already installed. To install everything properly, you just have to do this:</p>\n<pre>$ conda create -n unrolr <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>\n$ conda activate unrolr\n$ conda install -c conda-forge mkl numpy scipy pandas matplotlib h5py MDAnalysis pyopencl ocl-icd-system\n</pre>\n<p>3 . Install unrolr</p>\n<pre>$ pip install unrolr\n</pre>\n<p>... or from the source directly</p>\n<pre>$ git clone https://github.com/jeeberhardt/unrolr\n$ <span class=\"nb\">cd</span> unrolr\n$ python setup.py build install\n</pre>\n<h2>OpenCL context</h2>\n<p>Before running Unrolr, you need to define the OpenCL context. And it is a good way to see if everything is working correctly.</p>\n<pre>$ python -c <span class=\"s1\">'import pyopencl as cl; cl.create_some_context()'</span>\n</pre>\n<p>Here in my example, I have the choice between 3 differents computing device (2 graphic cards and one CPU).</p>\n<pre>Choose platform:\n<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span> &lt;pyopencl.Platform <span class=\"s1\">'AMD Accelerated Parallel Processing'</span> at 0x7f97e96a8430&gt;\nChoice <span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>:0\nChoose device<span class=\"o\">(</span>s<span class=\"o\">)</span>:\n<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span> &lt;pyopencl.Device <span class=\"s1\">'Tahiti'</span> on <span class=\"s1\">'AMD Accelerated Parallel Processing'</span> at 0x1e18a30&gt;\n<span class=\"o\">[</span><span class=\"m\">1</span><span class=\"o\">]</span> &lt;pyopencl.Device <span class=\"s1\">'Tahiti'</span> on <span class=\"s1\">'AMD Accelerated Parallel Processing'</span> at 0x254a110&gt;\n<span class=\"o\">[</span><span class=\"m\">2</span><span class=\"o\">]</span> &lt;pyopencl.Device <span class=\"s1\">'Intel(R) Core(TM) i7-3820 CPU @ 3.60GHz'</span> on <span class=\"s1\">'AMD Accelerated Parallel Processing'</span> at 0x21d0300&gt;\nChoice, comma-separated <span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span>:1\nSet the environment variable <span class=\"nv\">PYOPENCL_CTX</span><span class=\"o\">=</span><span class=\"s1\">'0:1'</span> to avoid being asked again.\n</pre>\n<p>Now you can set the environment variable.</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">PYOPENCL_CTX</span><span class=\"o\">=</span><span class=\"s1\">'0:1'</span>\n</pre>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">unrolr</span> <span class=\"kn\">import</span> <span class=\"n\">Unrolr</span>\n<span class=\"kn\">from</span> <span class=\"nn\">unrolr.feature_extraction</span> <span class=\"kn\">import</span> <span class=\"n\">Dihedral</span>\n<span class=\"kn\">from</span> <span class=\"nn\">unrolr.utils</span> <span class=\"kn\">import</span> <span class=\"n\">save_dataset</span>\n\n\n<span class=\"n\">top_file</span> <span class=\"o\">=</span> <span class=\"s1\">'examples/inputs/villin.psf'</span>\n<span class=\"n\">trj_file</span> <span class=\"o\">=</span> <span class=\"s1\">'examples/inputs/villin.dcd'</span>\n\n<span class=\"c1\"># Extract all calpha dihedral angles from trajectory and store them into a HDF5 file</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">Dihedral</span><span class=\"p\">(</span><span class=\"n\">top_file</span><span class=\"p\">,</span> <span class=\"n\">trj_file</span><span class=\"p\">,</span> <span class=\"n\">selection</span><span class=\"o\">=</span><span class=\"s1\">'all'</span><span class=\"p\">,</span> <span class=\"n\">dihedral_type</span><span class=\"o\">=</span><span class=\"s1\">'calpha'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">result</span>\n<span class=\"n\">save_dataset</span><span class=\"p\">(</span><span class=\"s1\">'dihedral_angles.h5'</span><span class=\"p\">,</span> <span class=\"s2\">\"dihedral_angles\"</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fit X using Unrolr (pSPE + dihedral distance) and save the embedding into a csv file</span>\n<span class=\"c1\"># The initial embedding is obtained using PCA (init = 'pca') with the OpenCL implementation</span>\n<span class=\"c1\"># to run SPE, a CPU implementation can be used as an alternative (platform='CPU')</span>\n<span class=\"n\">U</span> <span class=\"o\">=</span> <span class=\"n\">Unrolr</span><span class=\"p\">(</span><span class=\"n\">r_neighbor</span><span class=\"o\">=</span><span class=\"mf\">0.27</span><span class=\"p\">,</span> <span class=\"n\">n_iter</span><span class=\"o\">=</span><span class=\"mi\">50000</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"o\">=</span><span class=\"s1\">'pca'</span><span class=\"p\">,</span> <span class=\"n\">platform</span><span class=\"o\">=</span><span class=\"s1\">'OpenCL'</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">U</span><span class=\"o\">.</span><span class=\"n\">fit_transform</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">U</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"s1\">'embedding.csv'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%4.2f</span><span class=\"s1\"> </span><span class=\"si\">%4.2f</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">U</span><span class=\"o\">.</span><span class=\"n\">stress</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"o\">.</span><span class=\"n\">correlation</span><span class=\"p\">))</span>\n</pre>\n<h2>Todo list</h2>\n<ul>\n<li>[ ] Compare SPE performance with UMAP</li>\n<li>[x] Compatibility with python 3</li>\n<li>[x] Compatibility with the latest version of MDAnalysis (==0.17)</li>\n<li>[ ] Unit tests</li>\n<li>[x] Accessible directly from pip</li>\n<li>[ ] Improve OpenCL performance (global/local memory)</li>\n</ul>\n<h2>Citation</h2>\n<p>Eberhardt, J., Stote, R. H., &amp; Dejaegere, A. (2018). Unrolr: Structural analysis of protein conformations using stochastic proximity embedding. Journal of Computational Chemistry, 39(30), 2551-2557. <a href=\"https://doi.org/10.1002/jcc.25599\" rel=\"nofollow\">https://doi.org/10.1002/jcc.25599</a></p>\n<h2>License</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6812748, "releases": {"0.4.0.1": [{"comment_text": "", "digests": {"md5": "91fe46ef7b2e8772ddf826dc9f5a5550", "sha256": "d6dca8bba9715f9d40f4a7cb83c07efcabe6395a5dd6bc5cffef6264dfa13126"}, "downloads": -1, "filename": "unrolr-0.4.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "91fe46ef7b2e8772ddf826dc9f5a5550", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25265, "upload_time": "2019-02-05T07:11:47", "upload_time_iso_8601": "2019-02-05T07:11:47.080979Z", "url": "https://files.pythonhosted.org/packages/59/bc/e43be659974359747ef5738729cd5766fdfae648a5768023a1034181c4e6/unrolr-0.4.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e07473797fc0d85510e4b069a044ebe2", "sha256": "595206abbc6a1d7e542f9fa2e1a3ecff90ae5dfa1a31db878ffe0b7bb31a19bf"}, "downloads": -1, "filename": "unrolr-0.4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e07473797fc0d85510e4b069a044ebe2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25267, "upload_time": "2019-02-05T07:11:49", "upload_time_iso_8601": "2019-02-05T07:11:49.333179Z", "url": "https://files.pythonhosted.org/packages/3f/b4/a5f17f8e74c32e78cbe52bab24041c4bdfb0a184e7b2f9a381eef3498760/unrolr-0.4.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3663da272feca2d7ad73daf3f65f269", "sha256": "5dc27ce7ad0bca29a2dbf44dc814f89620d965c6a17aa200185ebe0c08d2bf52"}, "downloads": -1, "filename": "unrolr-0.4.0.1.tar.gz", "has_sig": false, "md5_digest": "b3663da272feca2d7ad73daf3f65f269", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14678, "upload_time": "2019-02-05T07:11:50", "upload_time_iso_8601": "2019-02-05T07:11:50.755316Z", "url": "https://files.pythonhosted.org/packages/f9/96/33b7208ee62e8c537c86f430b27a07dee7b12364978f9069727e7f2744c0/unrolr-0.4.0.1.tar.gz", "yanked": false}], "0.4.0.6": [{"comment_text": "", "digests": {"md5": "b753306d4cea65de5bd2285f9de25e52", "sha256": "920ff8de027ac7f07a936e93e9f1354e5fc4682e27ed81e66c037363605ee343"}, "downloads": -1, "filename": "unrolr-0.4.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b753306d4cea65de5bd2285f9de25e52", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 17856, "upload_time": "2019-07-30T07:18:34", "upload_time_iso_8601": "2019-07-30T07:18:34.945929Z", "url": "https://files.pythonhosted.org/packages/de/fc/1904b0b4db100929bb7dda55a1dff7ce446d9cb8437c495ad5c2086757d5/unrolr-0.4.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a228e4c0fe9bcb0c42c4bef7a6a08fbe", "sha256": "c520b2e634b4ffef31f585779d65b41d20b0481434063c2159a4d40313a9914b"}, "downloads": -1, "filename": "unrolr-0.4.0.6.tar.gz", "has_sig": false, "md5_digest": "a228e4c0fe9bcb0c42c4bef7a6a08fbe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*", "size": 14730, "upload_time": "2019-07-30T07:18:36", "upload_time_iso_8601": "2019-07-30T07:18:36.748852Z", "url": "https://files.pythonhosted.org/packages/4d/58/10961f3aa9aae4d6db0354ee204f2ea90455de50e7dcd905df20ed191c57/unrolr-0.4.0.6.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "9e56f0fd3feb571840302bce23994c2f", "sha256": "83d2955e7dbb880f9f8ed1f33563d46cee226a5401dacdc478218b663332728c"}, "downloads": -1, "filename": "unrolr-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "9e56f0fd3feb571840302bce23994c2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24003, "upload_time": "2020-03-13T04:02:34", "upload_time_iso_8601": "2020-03-13T04:02:34.526032Z", "url": "https://files.pythonhosted.org/packages/48/2d/4a5b7575e33ee459dded89dfa8548d64abcd07269e88f36881a91cc8acdd/unrolr-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1193c7adc07d0e1aa3fa4af748857e3d", "sha256": "d8543affa8b13262287e8277838dfb27b88787b3442621139fe49abf2f78ca9d"}, "downloads": -1, "filename": "unrolr-0.5.tar.gz", "has_sig": false, "md5_digest": "1193c7adc07d0e1aa3fa4af748857e3d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18376, "upload_time": "2020-03-13T04:02:36", "upload_time_iso_8601": "2020-03-13T04:02:36.146365Z", "url": "https://files.pythonhosted.org/packages/ff/78/f06d4fd6929606c23e2dc4fbeaf5db7db9fd291aa1191ce94a2867e8ac72/unrolr-0.5.tar.gz", "yanked": false}], "0.5.0.1": [{"comment_text": "", "digests": {"md5": "d59befc628cd69bfa0d719f4974f53d4", "sha256": "83c77fcca3c7115c0245235b20c3d43bb9277647a1dbc2a7cf25c7d0c3001249"}, "downloads": -1, "filename": "unrolr-0.5.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d59befc628cd69bfa0d719f4974f53d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24029, "upload_time": "2020-03-13T18:22:06", "upload_time_iso_8601": "2020-03-13T18:22:06.096967Z", "url": "https://files.pythonhosted.org/packages/1c/ed/0f97ac0c4174d093227b0e2801e0d15e5d5cf46efef6fb1e95d51c81ac19/unrolr-0.5.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "979eff7b4542b553f35475989a3c94c9", "sha256": "17452bd5b5b485910eb546e6b02f6058356309d2bf749248f7bace049059d2de"}, "downloads": -1, "filename": "unrolr-0.5.0.1.tar.gz", "has_sig": false, "md5_digest": "979eff7b4542b553f35475989a3c94c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18372, "upload_time": "2020-03-13T18:22:07", "upload_time_iso_8601": "2020-03-13T18:22:07.658316Z", "url": "https://files.pythonhosted.org/packages/be/47/1d9ac02610388b240df0c0eb54d899b104bdd23347623c3ae0ec56756e0c/unrolr-0.5.0.1.tar.gz", "yanked": false}], "0.5.0.2": [{"comment_text": "", "digests": {"md5": "60fb718fa4f87e4955676f5fc891bd54", "sha256": "0d41b5a14ddc6517a4e1ec1e44755959c1224ae34b83327ac8e8a4cb8978c4cc"}, "downloads": -1, "filename": "unrolr-0.5.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "60fb718fa4f87e4955676f5fc891bd54", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24162, "upload_time": "2020-03-13T19:14:15", "upload_time_iso_8601": "2020-03-13T19:14:15.456458Z", "url": "https://files.pythonhosted.org/packages/18/c2/cce47b6588545e1c46a7f2257e945ccc1232753506769978ab707c9540fe/unrolr-0.5.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6e723b46ed09cf3740b7e4703946a65", "sha256": "ad37cbd07e63bcd936a5e05dc686c42594941e961b62c42fd53616e4f6e74683"}, "downloads": -1, "filename": "unrolr-0.5.0.2.tar.gz", "has_sig": false, "md5_digest": "c6e723b46ed09cf3740b7e4703946a65", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18525, "upload_time": "2020-03-13T19:14:17", "upload_time_iso_8601": "2020-03-13T19:14:17.054681Z", "url": "https://files.pythonhosted.org/packages/c6/eb/85f50dc704b5bc067d66da4b057926000ec0c9a83313718041ea984d551a/unrolr-0.5.0.2.tar.gz", "yanked": false}], "0.5.0.3": [{"comment_text": "", "digests": {"md5": "1de811d1955a8a7ea3adf28e9997e3f8", "sha256": "a4af3be0e97d8d0fb7e4997ebcbed93de0c56e532d080b051b30212568563366"}, "downloads": -1, "filename": "unrolr-0.5.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1de811d1955a8a7ea3adf28e9997e3f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24178, "upload_time": "2020-03-14T20:42:02", "upload_time_iso_8601": "2020-03-14T20:42:02.650745Z", "url": "https://files.pythonhosted.org/packages/3a/a4/c08cd498d2b011fb0cf2320a367469fdf57752740e419da697c401e670ae/unrolr-0.5.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e0f82a8120d03371f568cc6047c55c8", "sha256": "1ad33a83f6f9a8b92914a917d90a954826da3df006b6fd51155c5da8a0a9c4b2"}, "downloads": -1, "filename": "unrolr-0.5.0.3.tar.gz", "has_sig": false, "md5_digest": "1e0f82a8120d03371f568cc6047c55c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18540, "upload_time": "2020-03-14T20:42:04", "upload_time_iso_8601": "2020-03-14T20:42:04.061901Z", "url": "https://files.pythonhosted.org/packages/d8/77/5c627ee58b75171f776a1d0b3dbfc447e8df37f3cd5db3842ed4ce0dea5d/unrolr-0.5.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1de811d1955a8a7ea3adf28e9997e3f8", "sha256": "a4af3be0e97d8d0fb7e4997ebcbed93de0c56e532d080b051b30212568563366"}, "downloads": -1, "filename": "unrolr-0.5.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1de811d1955a8a7ea3adf28e9997e3f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24178, "upload_time": "2020-03-14T20:42:02", "upload_time_iso_8601": "2020-03-14T20:42:02.650745Z", "url": "https://files.pythonhosted.org/packages/3a/a4/c08cd498d2b011fb0cf2320a367469fdf57752740e419da697c401e670ae/unrolr-0.5.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e0f82a8120d03371f568cc6047c55c8", "sha256": "1ad33a83f6f9a8b92914a917d90a954826da3df006b6fd51155c5da8a0a9c4b2"}, "downloads": -1, "filename": "unrolr-0.5.0.3.tar.gz", "has_sig": false, "md5_digest": "1e0f82a8120d03371f568cc6047c55c8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18540, "upload_time": "2020-03-14T20:42:04", "upload_time_iso_8601": "2020-03-14T20:42:04.061901Z", "url": "https://files.pythonhosted.org/packages/d8/77/5c627ee58b75171f776a1d0b3dbfc447e8df37f3cd5db3842ed4ce0dea5d/unrolr-0.5.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:05 2020"}