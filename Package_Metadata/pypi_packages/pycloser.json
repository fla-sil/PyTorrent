{"info": {"author": "Arvin Kulagin", "author_email": "arvinkulagin@yandex.ru", "bugtrack_url": null, "classifiers": [], "description": "pycloser\n========\n\n\u0421lean exit for Python scripts after Ctrl-C. Inspired by `xlab\u2019s Closer`_\nfor Go (Golang). # Usage\n\n.. code:: python\n\n    from pycloser import defer, listen, close\n\n    # Push inform function to stack.\n    @defer\n    def inform():\n        print('You close programm with Ctrl-C.')\n\n    # Push goodbuy function to stack.\n    @defer\n    def goodbuy():\n        print('Goodbuy!')\n\n    # Listening SIGINT, SIGTERM and SIGHUP OS signals.\n    # When it sended, listen() pop deferred functions from stack\n    # and call its one after the other.\n    listen()\n\n    # Main programm loop\n    for x in range(1, 10):\n        print(\"{0}: {1}\".format(x, input(\">> \")))\n\n    # Pop deferred functions from stack and call its, if signal was not sended.\n    close()\n\n.. _xlab\u2019s Closer: https://github.com/xlab/closer", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arvinkulagin/pycloser", "keywords": "signals exit", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pycloser", "package_url": "https://pypi.org/project/pycloser/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pycloser/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/arvinkulagin/pycloser"}, "release_url": "https://pypi.org/project/pycloser/0.2/", "requires_dist": null, "requires_python": null, "summary": "\u0421lean exit for Python scripts after Ctrl-C.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>\u0421lean exit for Python scripts after Ctrl-C. Inspired by <a href=\"https://github.com/xlab/closer\" rel=\"nofollow\">xlab\u2019s Closer</a>\nfor Go (Golang). # Usage</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pycloser</span> <span class=\"kn\">import</span> <span class=\"n\">defer</span><span class=\"p\">,</span> <span class=\"n\">listen</span><span class=\"p\">,</span> <span class=\"n\">close</span>\n\n<span class=\"c1\"># Push inform function to stack.</span>\n<span class=\"nd\">@defer</span>\n<span class=\"k\">def</span> <span class=\"nf\">inform</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'You close programm with Ctrl-C.'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Push goodbuy function to stack.</span>\n<span class=\"nd\">@defer</span>\n<span class=\"k\">def</span> <span class=\"nf\">goodbuy</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Goodbuy!'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Listening SIGINT, SIGTERM and SIGHUP OS signals.</span>\n<span class=\"c1\"># When it sended, listen() pop deferred functions from stack</span>\n<span class=\"c1\"># and call its one after the other.</span>\n<span class=\"n\">listen</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Main programm loop</span>\n<span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"si\">{0}</span><span class=\"s2\">: </span><span class=\"si\">{1}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"&gt;&gt; \"</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Pop deferred functions from stack and call its, if signal was not sended.</span>\n<span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 1665763, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "3972ac44dab349ad7dad7cba318754f3", "sha256": "21371ae1c1a8f498e7a0240049c0d0d9e358ff9b4c4b6a28f835efebd24674d7"}, "downloads": -1, "filename": "pycloser-0.2.tar.gz", "has_sig": false, "md5_digest": "3972ac44dab349ad7dad7cba318754f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1698, "upload_time": "2015-08-05T18:04:35", "upload_time_iso_8601": "2015-08-05T18:04:35.756579Z", "url": "https://files.pythonhosted.org/packages/d1/15/b49e401729502ea67d03c21a7c4580cd7495015854582984efce00db006e/pycloser-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3972ac44dab349ad7dad7cba318754f3", "sha256": "21371ae1c1a8f498e7a0240049c0d0d9e358ff9b4c4b6a28f835efebd24674d7"}, "downloads": -1, "filename": "pycloser-0.2.tar.gz", "has_sig": false, "md5_digest": "3972ac44dab349ad7dad7cba318754f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1698, "upload_time": "2015-08-05T18:04:35", "upload_time_iso_8601": "2015-08-05T18:04:35.756579Z", "url": "https://files.pythonhosted.org/packages/d1/15/b49e401729502ea67d03c21a7c4580cd7495015854582984efce00db006e/pycloser-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:22 2020"}