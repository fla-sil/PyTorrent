{"info": {"author": "Vishwas B Sharma", "author_email": "sharma.vishwas88@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "rake-nltk\n=========\n\n|pypiv| |pyv| |Licence| |Build Status| |Coverage Status| |Thanks|\n\nRAKE short for Rapid Automatic Keyword Extraction algorithm, is a domain\nindependent keyword extraction algorithm which tries to determine key\nphrases in a body of text by analyzing the frequency of word appearance\nand its co-occurance with other words in the text.\n\n|Demo|\n\nSetup\n-----\n\nUsing pip\n~~~~~~~~~\n\n.. code:: bash\n\n    pip install rake-nltk\n\nDirectly from the repository\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    git clone https://github.com/csurfer/rake-nltk.git\n    python rake-nltk/setup.py install\n\nPost setup\n----------\n\nIf you see a stopwords error, it means that you do not have the corpus\n`stopwords` downloaded from NLTK. You can download it using command below.\n\n.. code:: bash\n\n    python -c \"import nltk; nltk.download('stopwords')\"\n\nBasic Usage\n-----------\n\n.. code:: python\n\n    from rake_nltk import Rake\n\n    r = Rake() # Uses stopwords for english from NLTK, and all puntuation characters.\n\n    r.extract_keywords_from_text(<text to process>)\n\n    r.get_ranked_phrases() # To get keyword phrases ranked highest to lowest.\n\nAdvanced Usage\n--------------\n\n.. code:: python\n\n    from rake_nltk import Metric, Rake\n\n    # To use it with a specific language supported by nltk.\n    r = Rake(language=<language>)\n\n    # If you want to provide your own set of stop words and punctuations to\n    r = Rake(\n        stopwords=<list of stopwords>,\n        punctuations=<string of puntuations to ignore>\n    )\n\n    # If you want to control the metric for ranking. Paper uses d(w)/f(w) as the\n    # metric. You can use this API with the following metrics:\n    # 1. d(w)/f(w) (Default metric) Ratio of degree of word to its frequency.\n    # 2. d(w) Degree of word only.\n    # 3. f(w) Frequency of word only.\n\n    r = Rake(ranking_metric=Metric.DEGREE_TO_FREQUENCY_RATIO)\n    r = Rake(ranking_metric=Metric.WORD_DEGREE)\n    r = Rake(ranking_metric=Metric.WORD_FREQUENCY)\n\n    # If you want to control the max or min words in a phrase, for it to be\n    # considered for ranking you can initialize a Rake instance as below:\n\n    r = Rake(min_length=2, max_length=4)\n\nReferences\n----------\n\nThis is a python implementation of the algorithm as mentioned in paper\n`Automatic keyword extraction from individual documents by Stuart Rose,\nDave Engel, Nick Cramer and Wendy Cowley`_\n\nWhy I chose to implement it myself?\n-----------------------------------\n\n-  It is extremely fun to implement algorithms by reading papers. It is\n   the digital equivalent of DIY kits.\n-  There are some rather popular implementations out there, in python(\\ `aneesha/RAKE`_) and\n   node(\\ `waseem18/node-rake`_) but neither seemed to use the power of `NLTK`_. By making NLTK\n   an integral part of the implementation I get the flexibility and power to extend it in other\n   creative ways, if I see fit later, without having to implement everything myself.\n-  I plan to use it in my other pet projects to come and wanted it to be\n   modular and tunable and this way I have complete control.\n\nContributing\n------------\n\nBug Reports and Feature Requests\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPlease use `issue tracker`_ for reporting bugs or feature requests.\n\nDevelopment\n~~~~~~~~~~~\n\nPull requests are most welcome.\n\nBuy the developer a cup of coffee!\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you found the utility helpful you can buy me a cup of coffee using\n\n|Donate|\n\n.. |Donate| image:: https://www.paypalobjects.com/webstatic/en_US/i/btn/png/silver-pill-paypal-44px.png\n   :target: https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=3BSBW7D45C4YN&lc=US&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted\n\n.. _Automatic keyword extraction from individual documents by Stuart Rose, Dave Engel, Nick Cramer and Wendy Cowley: https://www.researchgate.net/profile/Stuart_Rose/publication/227988510_Automatic_Keyword_Extraction_from_Individual_Documents/links/55071c570cf27e990e04c8bb.pdf\n.. _aneesha/RAKE: https://github.com/aneesha/RAKE\n.. _waseem18/node-rake: https://github.com/waseem18/node-rake\n.. _NLTK: http://www.nltk.org/\n.. _issue tracker: https://github.com/csurfer/rake-nltk/issues\n\n.. |Build Status| image:: https://travis-ci.org/csurfer/rake-nltk.svg?branch=master\n   :target: https://travis-ci.org/csurfer/rake-nltk\n.. |Licence| image:: https://img.shields.io/badge/license-MIT-blue.svg\n   :target: https://raw.githubusercontent.com/csurfer/rake-nltk/master/LICENSE\n.. |Coverage Status| image:: https://coveralls.io/repos/github/csurfer/rake-nltk/badge.svg?branch=master\n   :target: https://coveralls.io/github/csurfer/rake-nltk?branch=master\n.. |Demo| image:: http://i.imgur.com/wVOzU7y.gif\n.. |pypiv| image:: https://img.shields.io/pypi/v/rake-nltk.svg\n   :target: https://pypi.python.org/pypi/rake-nltk\n.. |pyv| image:: https://img.shields.io/pypi/pyversions/rake-nltk.svg\n   :target: https://pypi.python.org/pypi/rake-nltk\n.. |Thanks| image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\n   :target: https://saythanks.io/to/csurfer", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/csurfer/rake-nltk", "keywords": "nlp text-mining algorithms development", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rake-nltk", "package_url": "https://pypi.org/project/rake-nltk/", "platform": "", "project_url": "https://pypi.org/project/rake-nltk/", "project_urls": {"Homepage": "https://github.com/csurfer/rake-nltk"}, "release_url": "https://pypi.org/project/rake-nltk/1.0.4/", "requires_dist": null, "requires_python": "", "summary": "Python implementation of the Rapid Automatic Keyword Extraction algorithm using NLTK", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/rake-nltk\" rel=\"nofollow\"><img alt=\"pypiv\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8a8daaaaa29119937051bb01c2531db1d7c9826/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f72616b652d6e6c746b2e737667\"></a> <a href=\"https://pypi.python.org/pypi/rake-nltk\" rel=\"nofollow\"><img alt=\"pyv\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8be5e887e8cf1b23b43bd36a7e2ccfbec0dd8ff/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f72616b652d6e6c746b2e737667\"></a> <a href=\"https://raw.githubusercontent.com/csurfer/rake-nltk/master/LICENSE\" rel=\"nofollow\"><img alt=\"Licence\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a> <a href=\"https://travis-ci.org/csurfer/rake-nltk\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd0d464e927959e3ef6dcc628577889a6f200c38/68747470733a2f2f7472617669732d63692e6f72672f637375726665722f72616b652d6e6c746b2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/csurfer/rake-nltk?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9064890ab20988079b84c6169b2d3fcb3404ad13/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f637375726665722f72616b652d6e6c746b2f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://saythanks.io/to/csurfer\" rel=\"nofollow\"><img alt=\"Thanks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51b7f145f134a99621f186ddcdb0af646a24c8aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e737667\"></a></p>\n<p>RAKE short for Rapid Automatic Keyword Extraction algorithm, is a domain\nindependent keyword extraction algorithm which tries to determine key\nphrases in a body of text by analyzing the frequency of word appearance\nand its co-occurance with other words in the text.</p>\n<p><img alt=\"Demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f292261721301a7da5b6824a681008b6aef9b71/687474703a2f2f692e696d6775722e636f6d2f77564f7a5537792e676966\"></p>\n<div id=\"setup\">\n<h2>Setup</h2>\n<div id=\"using-pip\">\n<h3>Using pip</h3>\n<pre>pip install rake-nltk\n</pre>\n</div>\n<div id=\"directly-from-the-repository\">\n<h3>Directly from the repository</h3>\n<pre>git clone https://github.com/csurfer/rake-nltk.git\npython rake-nltk/setup.py install\n</pre>\n</div>\n</div>\n<div id=\"post-setup\">\n<h2>Post setup</h2>\n<p>If you see a stopwords error, it means that you do not have the corpus\n<cite>stopwords</cite> downloaded from NLTK. You can download it using command below.</p>\n<pre>python -c <span class=\"s2\">\"import nltk; nltk.download('stopwords')\"</span>\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rake_nltk</span> <span class=\"kn\">import</span> <span class=\"n\">Rake</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Rake</span><span class=\"p\">()</span> <span class=\"c1\"># Uses stopwords for english from NLTK, and all puntuation characters.</span>\n\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">extract_keywords_from_text</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">text</span> <span class=\"n\">to</span> <span class=\"n\">process</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get_ranked_phrases</span><span class=\"p\">()</span> <span class=\"c1\"># To get keyword phrases ranked highest to lowest.</span>\n</pre>\n</div>\n<div id=\"advanced-usage\">\n<h2>Advanced Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rake_nltk</span> <span class=\"kn\">import</span> <span class=\"n\">Metric</span><span class=\"p\">,</span> <span class=\"n\">Rake</span>\n\n<span class=\"c1\"># To use it with a specific language supported by nltk.</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Rake</span><span class=\"p\">(</span><span class=\"n\">language</span><span class=\"o\">=&lt;</span><span class=\"n\">language</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you want to provide your own set of stop words and punctuations to</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Rake</span><span class=\"p\">(</span>\n    <span class=\"n\">stopwords</span><span class=\"o\">=&lt;</span><span class=\"nb\">list</span> <span class=\"n\">of</span> <span class=\"n\">stopwords</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n    <span class=\"n\">punctuations</span><span class=\"o\">=&lt;</span><span class=\"n\">string</span> <span class=\"n\">of</span> <span class=\"n\">puntuations</span> <span class=\"n\">to</span> <span class=\"n\">ignore</span><span class=\"o\">&gt;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># If you want to control the metric for ranking. Paper uses d(w)/f(w) as the</span>\n<span class=\"c1\"># metric. You can use this API with the following metrics:</span>\n<span class=\"c1\"># 1. d(w)/f(w) (Default metric) Ratio of degree of word to its frequency.</span>\n<span class=\"c1\"># 2. d(w) Degree of word only.</span>\n<span class=\"c1\"># 3. f(w) Frequency of word only.</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Rake</span><span class=\"p\">(</span><span class=\"n\">ranking_metric</span><span class=\"o\">=</span><span class=\"n\">Metric</span><span class=\"o\">.</span><span class=\"n\">DEGREE_TO_FREQUENCY_RATIO</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Rake</span><span class=\"p\">(</span><span class=\"n\">ranking_metric</span><span class=\"o\">=</span><span class=\"n\">Metric</span><span class=\"o\">.</span><span class=\"n\">WORD_DEGREE</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Rake</span><span class=\"p\">(</span><span class=\"n\">ranking_metric</span><span class=\"o\">=</span><span class=\"n\">Metric</span><span class=\"o\">.</span><span class=\"n\">WORD_FREQUENCY</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If you want to control the max or min words in a phrase, for it to be</span>\n<span class=\"c1\"># considered for ranking you can initialize a Rake instance as below:</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Rake</span><span class=\"p\">(</span><span class=\"n\">min_length</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<p>This is a python implementation of the algorithm as mentioned in paper\n<a href=\"https://www.researchgate.net/profile/Stuart_Rose/publication/227988510_Automatic_Keyword_Extraction_from_Individual_Documents/links/55071c570cf27e990e04c8bb.pdf\" rel=\"nofollow\">Automatic keyword extraction from individual documents by Stuart Rose,\nDave Engel, Nick Cramer and Wendy Cowley</a></p>\n</div>\n<div id=\"why-i-chose-to-implement-it-myself\">\n<h2>Why I chose to implement it myself?</h2>\n<ul>\n<li>It is extremely fun to implement algorithms by reading papers. It is\nthe digital equivalent of DIY kits.</li>\n<li>There are some rather popular implementations out there, in python(<a href=\"https://github.com/aneesha/RAKE\" rel=\"nofollow\">aneesha/RAKE</a>) and\nnode(<a href=\"https://github.com/waseem18/node-rake\" rel=\"nofollow\">waseem18/node-rake</a>) but neither seemed to use the power of <a href=\"http://www.nltk.org/\" rel=\"nofollow\">NLTK</a>. By making NLTK\nan integral part of the implementation I get the flexibility and power to extend it in other\ncreative ways, if I see fit later, without having to implement everything myself.</li>\n<li>I plan to use it in my other pet projects to come and wanted it to be\nmodular and tunable and this way I have complete control.</li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<div id=\"bug-reports-and-feature-requests\">\n<h3>Bug Reports and Feature Requests</h3>\n<p>Please use <a href=\"https://github.com/csurfer/rake-nltk/issues\" rel=\"nofollow\">issue tracker</a> for reporting bugs or feature requests.</p>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<p>Pull requests are most welcome.</p>\n</div>\n<div id=\"buy-the-developer-a-cup-of-coffee\">\n<h3>Buy the developer a cup of coffee!</h3>\n<p>If you found the utility helpful you can buy me a cup of coffee using</p>\n<p><a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=3BSBW7D45C4YN&amp;lc=US&amp;currency_code=USD&amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted\" rel=\"nofollow\"><img alt=\"Donate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27ac4eb242af9665a1c941952164d5371ef879ee/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f7765627374617469632f656e5f55532f692f62746e2f706e672f73696c7665722d70696c6c2d70617970616c2d343470782e706e67\"></a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3946711, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "513ee50934e9ab55e8daf337a226d522", "sha256": "7e992647bd16902dd96a4d366eef5752b165633fc7b5f84de677a46589ac80b0"}, "downloads": -1, "filename": "rake_nltk-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "513ee50934e9ab55e8daf337a226d522", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7073, "upload_time": "2017-01-22T10:42:03", "upload_time_iso_8601": "2017-01-22T10:42:03.090243Z", "url": "https://files.pythonhosted.org/packages/ca/c0/24cdfd8759616348f586a9cf360219e43153d65b671e5d901f2531f744de/rake_nltk-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d60467b44989a616a93ea5b235f7fcc9", "sha256": "eb9fb97510bfa8e0ca3b6cc2f8c743ed3d2dabee1d4fae414faecf08fa9740fb"}, "downloads": -1, "filename": "rake_nltk-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d60467b44989a616a93ea5b235f7fcc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5605, "upload_time": "2017-01-22T10:42:04", "upload_time_iso_8601": "2017-01-22T10:42:04.290560Z", "url": "https://files.pythonhosted.org/packages/59/c3/f2f3f3ac8872b12a0b76c7da32701d2df23f8e75853bde450d8c9463ac05/rake_nltk-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6a50b789f224c5d7999c55e43da16af1", "sha256": "fb3893429b37da334203ec5c8947def9da9f6aa2e4dbe35376def96402bbff44"}, "downloads": -1, "filename": "rake_nltk-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6a50b789f224c5d7999c55e43da16af1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6261, "upload_time": "2017-06-06T05:09:46", "upload_time_iso_8601": "2017-06-06T05:09:46.305370Z", "url": "https://files.pythonhosted.org/packages/7a/fa/dda9ccbb06fed0def21d686832b281cc608a942027b4b03eee3b19dd2c99/rake_nltk-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3cf8b709f8f19b4f631cb93046f5876f", "sha256": "2f2c002fd3c83bdf9ae69b8bcfb6983c087736f20b8a2cfb677c7cd937657f33"}, "downloads": -1, "filename": "rake_nltk-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3cf8b709f8f19b4f631cb93046f5876f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6720, "upload_time": "2018-01-21T05:54:12", "upload_time_iso_8601": "2018-01-21T05:54:12.876812Z", "url": "https://files.pythonhosted.org/packages/c7/41/649b240a3bad300ef07da90e0559b67a404265431043af88ea54688072fa/rake_nltk-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "35d24f6cbb2142d9890e29f106dc2656", "sha256": "67759e32ef9be82bbfc78efdb92db56fc43bc7c98053dcd415f6ddf576b4ea62"}, "downloads": -1, "filename": "rake_nltk-1.0.3.tar.gz", "has_sig": false, "md5_digest": "35d24f6cbb2142d9890e29f106dc2656", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7232, "upload_time": "2018-04-21T11:22:39", "upload_time_iso_8601": "2018-04-21T11:22:39.847347Z", "url": "https://files.pythonhosted.org/packages/2c/6d/ec5df8b4fe12050a169dd18af9a309339b93f843087c24b874d8dcff6e8b/rake_nltk-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "0602bc584acfa0611333e53d1a023fdd", "sha256": "fe2b5d4422754f80f292763dac9e5be366af7a7a0431a621d79c603110cd004e"}, "downloads": -1, "filename": "rake_nltk-1.0.4.tar.gz", "has_sig": false, "md5_digest": "0602bc584acfa0611333e53d1a023fdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7602, "upload_time": "2018-06-10T07:29:08", "upload_time_iso_8601": "2018-06-10T07:29:08.636128Z", "url": "https://files.pythonhosted.org/packages/8e/c4/b4ff57e541ac5624ad4b20b89c2bafd4e98f29fd83139f3a81858bdb3815/rake_nltk-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0602bc584acfa0611333e53d1a023fdd", "sha256": "fe2b5d4422754f80f292763dac9e5be366af7a7a0431a621d79c603110cd004e"}, "downloads": -1, "filename": "rake_nltk-1.0.4.tar.gz", "has_sig": false, "md5_digest": "0602bc584acfa0611333e53d1a023fdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7602, "upload_time": "2018-06-10T07:29:08", "upload_time_iso_8601": "2018-06-10T07:29:08.636128Z", "url": "https://files.pythonhosted.org/packages/8e/c4/b4ff57e541ac5624ad4b20b89c2bafd4e98f29fd83139f3a81858bdb3815/rake_nltk-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:46 2020"}