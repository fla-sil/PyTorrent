{"info": {"author": "Charles Leifer", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "## forestdb-python\n\nFast Python bindings for [forestdb](https://github.com/couchbase/forestdb/), an embedded key-value storage engine developed by Couchbase. The main index structure is built from [Hierarchical B+-Tree based Trie](http://db.csail.mit.edu/sigmod11contest/sigmod_2011_contest_poster_jungsang_ahn.pdf) (pdf).\n\n> Compared with traditional B+-Tree based storage engines, ForestDB shows significantly better read and write performance with less storage overhead.\n\n### ForestDB Features\n\n* Keys, values and metadata are treated as arbitrary binary data.\n* Values can be retrieved by key or by a unique integer *sequence number*.\n* Write-Ahead-Logging (WAL) and its in-memory index are used to reduce the main index lookup/update overhead.\n* Multi-Version Concurrency Control (MVCC) support and append-only storage layer.\n* Multiple snapshots can be created from a given ForestDB instance to provide different views of database over time.\n* Rollback is supported to revert the database to a point-in-time.\n* Ranged iteration by keys is supported for partial or full range lookup operation (cursors).\n* Transactional support with read committed or read uncommitted isolation.\n* Encryption (AES256)\n\n### Python Binding Features\n\n* Written in Cython to give best performance.\n* Support for virtually all public APIs.\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coleifer/forestdb-python", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "forestdb", "package_url": "https://pypi.org/project/forestdb/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/forestdb/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/coleifer/forestdb-python"}, "release_url": "https://pypi.org/project/forestdb/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Fast Python bindings for the forestdb embedded database.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>## forestdb-python</p>\n<p>Fast Python bindings for [forestdb](<a href=\"https://github.com/couchbase/forestdb/\" rel=\"nofollow\">https://github.com/couchbase/forestdb/</a>), an embedded key-value storage engine developed by Couchbase. The main index structure is built from [Hierarchical B+-Tree based Trie](<a href=\"http://db.csail.mit.edu/sigmod11contest/sigmod_2011_contest_poster_jungsang_ahn.pdf\" rel=\"nofollow\">http://db.csail.mit.edu/sigmod11contest/sigmod_2011_contest_poster_jungsang_ahn.pdf</a>) (pdf).</p>\n<p>&gt; Compared with traditional B+-Tree based storage engines, ForestDB shows significantly better read and write performance with less storage overhead.</p>\n<p>### ForestDB Features</p>\n<ul>\n<li>Keys, values and metadata are treated as arbitrary binary data.</li>\n<li>Values can be retrieved by key or by a unique integer <em>sequence number</em>.</li>\n<li>Write-Ahead-Logging (WAL) and its in-memory index are used to reduce the main index lookup/update overhead.</li>\n<li>Multi-Version Concurrency Control (MVCC) support and append-only storage layer.</li>\n<li>Multiple snapshots can be created from a given ForestDB instance to provide different views of database over time.</li>\n<li>Rollback is supported to revert the database to a point-in-time.</li>\n<li>Ranged iteration by keys is supported for partial or full range lookup operation (cursors).</li>\n<li>Transactional support with read committed or read uncommitted isolation.</li>\n<li>Encryption (AES256)</li>\n</ul>\n<p>### Python Binding Features</p>\n<ul>\n<li>Written in Cython to give best performance.</li>\n<li>Support for virtually all public APIs.</li>\n</ul>\n\n          </div>"}, "last_serial": 1932806, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "510efe7f60bde5ef4e6496000ad7cd44", "sha256": "4a697822e469c7a5b975eb13da8c8a2ecf80b0ac5f8f3961eeba0ed2278eebdf"}, "downloads": -1, "filename": "forestdb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "510efe7f60bde5ef4e6496000ad7cd44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110256, "upload_time": "2016-02-01T00:58:51", "upload_time_iso_8601": "2016-02-01T00:58:51.403426Z", "url": "https://files.pythonhosted.org/packages/3a/1c/056baf754e0003d1b8a73e889a34a3897fe4dfde186239bd49cf1c71a67c/forestdb-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "510efe7f60bde5ef4e6496000ad7cd44", "sha256": "4a697822e469c7a5b975eb13da8c8a2ecf80b0ac5f8f3961eeba0ed2278eebdf"}, "downloads": -1, "filename": "forestdb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "510efe7f60bde5ef4e6496000ad7cd44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110256, "upload_time": "2016-02-01T00:58:51", "upload_time_iso_8601": "2016-02-01T00:58:51.403426Z", "url": "https://files.pythonhosted.org/packages/3a/1c/056baf754e0003d1b8a73e889a34a3897fe4dfde186239bd49cf1c71a67c/forestdb-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:54 2020"}