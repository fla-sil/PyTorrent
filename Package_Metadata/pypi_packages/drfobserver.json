{"info": {"author": "Sassoo", "author_email": "noreply@devnull.seriously", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP"], "description": "drfobserver\n======================================\n\n|build-status-image| |pypi-version|\n\nOverview\n--------\n\nDjango Rest Framework object observer pattern\n\nRequirements\n------------\n\n-  Python (2.7, 3.3, 3.4)\n-  Django (1.6, 1.7, 1.8)\n-  Django REST Framework (2.4, 3.0, 3.1)\n\nInstallation\n------------\n\nInstall using ``pip``\\ \u2026\n\n.. code:: bash\n\n    $ pip install drfobserver\n\nExample\n-------\n\n.. code:: python\n\n    from django.db import models\n    from drfobserver import ObserverMixin, observer\n\n    class Actor(ObserverMixin, models.Model,):\n        \"\"\" Actor model \"\"\"\n\n        first_name = models.CharField(max_length=50)\n        last_name = models.CharField(max_length=50)\n\n        @observer('first_name', 'last_name')\n        def _setter_name(self):\n            \"\"\" Set the full name from first & last \"\"\"\n\n            self.name = '%s %s' % (self.first_name, self.last_name)\n\nTesting\n-------\n\nInstall testing requirements.\n\n.. code:: bash\n\n    $ pip install -r requirements.txt\n\nRun with runtests.\n\n.. code:: bash\n\n    $ ./runtests.py\n\nYou can also use the excellent `tox`_ testing tool to run the tests\nagainst all supported versions of Python and Django. Install tox\nglobally, and then simply run:\n\n.. code:: bash\n\n    $ tox\n\nDocumentation\n-------------\n\nTo build the documentation, you\u2019ll need to install ``mkdocs``.\n\n.. code:: bash\n\n    $ pip install mkdocs\n\nTo preview the documentation:\n\n.. code:: bash\n\n    $ mkdocs serve\n    Running at: http://127.0.0.1:8000/\n\nTo build the documentation:\n\n.. code:: bash\n\n    $ mkdocs build\n\n.. _tox: http://tox.readthedocs.org/en/latest/\n\n.. |build-status-image| image:: https://secure.travis-ci.org/sassoo/drfobserver.svg?branch=master\n   :target: http://travis-ci.org/sassoo/drfobserver?branch=master\n.. |pypi-version| image:: https://img.shields.io/pypi/v/drfobserver.svg\n   :target: https://pypi.python.org/pypi/drfobserver\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sassoo/drfobserver", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "drfobserver", "package_url": "https://pypi.org/project/drfobserver/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/drfobserver/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sassoo/drfobserver"}, "release_url": "https://pypi.org/project/drfobserver/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Django Rest Framework object observer pattern", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://travis-ci.org/sassoo/drfobserver?branch=master\" rel=\"nofollow\"><img alt=\"build-status-image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c63295140c7025d3c225fc5a1506b1d8b52c64bd/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f736173736f6f2f6472666f627365727665722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/drfobserver\" rel=\"nofollow\"><img alt=\"pypi-version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a445d7eeff3d945401f73ab04cff9dc3b35653b9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6472666f627365727665722e737667\"></a></p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>Django Rest Framework object observer pattern</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python (2.7, 3.3, 3.4)</li>\n<li>Django (1.6, 1.7, 1.8)</li>\n<li>Django REST Framework (2.4, 3.0, 3.1)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using <tt>pip</tt>\u2026</p>\n<pre>$ pip install drfobserver\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">drfobserver</span> <span class=\"kn\">import</span> <span class=\"n\">ObserverMixin</span><span class=\"p\">,</span> <span class=\"n\">observer</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Actor</span><span class=\"p\">(</span><span class=\"n\">ObserverMixin</span><span class=\"p\">,</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,):</span>\n    <span class=\"sd\">\"\"\" Actor model \"\"\"</span>\n\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@observer</span><span class=\"p\">(</span><span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_setter_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\" Set the full name from first &amp; last \"\"\"</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">%s</span><span class=\"s1\"> </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">first_name</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">last_name</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Install testing requirements.</p>\n<pre>$ pip install -r requirements.txt\n</pre>\n<p>Run with runtests.</p>\n<pre>$ ./runtests.py\n</pre>\n<p>You can also use the excellent <a href=\"http://tox.readthedocs.org/en/latest/\" rel=\"nofollow\">tox</a> testing tool to run the tests\nagainst all supported versions of Python and Django. Install tox\nglobally, and then simply run:</p>\n<pre>$ tox\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>To build the documentation, you\u2019ll need to install <tt>mkdocs</tt>.</p>\n<pre>$ pip install mkdocs\n</pre>\n<p>To preview the documentation:</p>\n<pre>$ mkdocs serve\nRunning at: http://127.0.0.1:8000/\n</pre>\n<p>To build the documentation:</p>\n<pre>$ mkdocs build\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2014484, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c9e2f24730de532267b0ed69f42021b6", "sha256": "39f6d975ae7c3ac752a950974a6caf41df03ede5cf241d2d235c9e67856aa28c"}, "downloads": -1, "filename": "drfobserver-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c9e2f24730de532267b0ed69f42021b6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4158, "upload_time": "2016-03-18T15:08:51", "upload_time_iso_8601": "2016-03-18T15:08:51.535354Z", "url": "https://files.pythonhosted.org/packages/1e/b8/23f0dc573233332247aa20fe7b853b2d72e3e063cb205c5c54d5a335458d/drfobserver-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b98694ac28bf83c8ebe1b52286d2af1", "sha256": "d085f231b2f7425f86bab08a0cebb00af58e6cf3d08e0f32b8f0b340f357ecb8"}, "downloads": -1, "filename": "drfobserver-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b98694ac28bf83c8ebe1b52286d2af1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4331, "upload_time": "2016-03-18T15:08:42", "upload_time_iso_8601": "2016-03-18T15:08:42.767807Z", "url": "https://files.pythonhosted.org/packages/4b/78/96c67ff90cd310c9ea66c602cbda6cba4ae27af7229228a3ae2b44228b2b/drfobserver-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c9e2f24730de532267b0ed69f42021b6", "sha256": "39f6d975ae7c3ac752a950974a6caf41df03ede5cf241d2d235c9e67856aa28c"}, "downloads": -1, "filename": "drfobserver-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c9e2f24730de532267b0ed69f42021b6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4158, "upload_time": "2016-03-18T15:08:51", "upload_time_iso_8601": "2016-03-18T15:08:51.535354Z", "url": "https://files.pythonhosted.org/packages/1e/b8/23f0dc573233332247aa20fe7b853b2d72e3e063cb205c5c54d5a335458d/drfobserver-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b98694ac28bf83c8ebe1b52286d2af1", "sha256": "d085f231b2f7425f86bab08a0cebb00af58e6cf3d08e0f32b8f0b340f357ecb8"}, "downloads": -1, "filename": "drfobserver-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8b98694ac28bf83c8ebe1b52286d2af1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4331, "upload_time": "2016-03-18T15:08:42", "upload_time_iso_8601": "2016-03-18T15:08:42.767807Z", "url": "https://files.pythonhosted.org/packages/4b/78/96c67ff90cd310c9ea66c602cbda6cba4ae27af7229228a3ae2b44228b2b/drfobserver-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:42 2020"}