{"info": {"author": "Diego Mu\u00c3\u00b1oz Escalante", "author_email": "escalant3@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "python-rexster\n==============\n\n:synopsis: Implements a client over Rexster (https://github.com/tinkerpop/rexster/) providing the Python developer an easy way to interact with the databases supported.\n\nThe layer follows the pyblueprints graph model interface letting the programmer work in the same way, no matter which underlying graph database is being used.\n\nInstallation\n------------\nThe easiest way to get python-rexster installed in your virtualenv is by:\n\n pip install python-rexster\n\n\nUsage\n-----\n\nConnecting to a Rexster instance\n\n>>> from rexster import RexsterServer, RexsterGraph \n>>> #Connecting to server\n>>> HOST = 'http://localhost:8182'\n>>> server = RexsterServer(HOST)\n>>> #List graphs availbale in server\n>>> server.graphs()\n[u'tinkergraph', u'gratefulgraph', u'tinkergraph-readonly', u'sailgraph', u'emptygraph']\n>>> #Connecting to a given graph\n>>> graph = RexsterIndexableGraph(server, 'tinkergraph')\n\n\nChangelog\n---------\n\n0.1.1 (2011-07-12)\n------------------\n- Added returning None instead of raising exceptions (more pythonic way)\n- Updated tests\n\n0.1 (2011-07-6)\n---------------\nInitial version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CulturePlex/python-rexster", "keywords": "rexster rest property graph model interface graphdb \n                graphdatabase database blueprints orientdb neo4j", "license": "GPL 3", "maintainer": null, "maintainer_email": null, "name": "python-rexster", "package_url": "https://pypi.org/project/python-rexster/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-rexster/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/CulturePlex/python-rexster"}, "release_url": "https://pypi.org/project/python-rexster/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "A Python client for Rexster following\n                    the Blueprints property graph model\n                    interface", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>synopsis:</th><td>Implements a client over Rexster (<a href=\"https://github.com/tinkerpop/rexster/\" rel=\"nofollow\">https://github.com/tinkerpop/rexster/</a>) providing the Python developer an easy way to interact with the databases supported.</td>\n</tr>\n</tbody>\n</table>\n<p>The layer follows the pyblueprints graph model interface letting the programmer work in the same way, no matter which underlying graph database is being used.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest way to get python-rexster installed in your virtualenv is by:</p>\n<blockquote>\npip install python-rexster</blockquote>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Connecting to a Rexster instance</p>\n<pre>&gt;&gt;&gt; from rexster import RexsterServer, RexsterGraph\n&gt;&gt;&gt; #Connecting to server\n&gt;&gt;&gt; HOST = 'http://localhost:8182'\n&gt;&gt;&gt; server = RexsterServer(HOST)\n&gt;&gt;&gt; #List graphs availbale in server\n&gt;&gt;&gt; server.graphs()\n[u'tinkergraph', u'gratefulgraph', u'tinkergraph-readonly', u'sailgraph', u'emptygraph']\n&gt;&gt;&gt; #Connecting to a given graph\n&gt;&gt;&gt; graph = RexsterIndexableGraph(server, 'tinkergraph')\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n</div>\n<div id=\"id1\">\n<h2>0.1.1 (2011-07-12)</h2>\n<ul>\n<li>Added returning None instead of raising exceptions (more pythonic way)</li>\n<li>Updated tests</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.1 (2011-07-6)</h2>\n<p>Initial version</p>\n</div>\n\n          </div>"}, "last_serial": 798052, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "ba817806a985e7e5f1e4d1be34f5a99b", "sha256": "e2afdb21bd6a127072c0c1119af6126c74e4a3d9d3cd279fe00fd28f926371c8"}, "downloads": -1, "filename": "python-rexster-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ba817806a985e7e5f1e4d1be34f5a99b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18204, "upload_time": "2011-07-13T00:06:35", "upload_time_iso_8601": "2011-07-13T00:06:35.874872Z", "url": "https://files.pythonhosted.org/packages/c7/39/7d21a319206fe0ecc5a518df8dd72b2ea15b9c184f5fc11257a08f14d478/python-rexster-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba817806a985e7e5f1e4d1be34f5a99b", "sha256": "e2afdb21bd6a127072c0c1119af6126c74e4a3d9d3cd279fe00fd28f926371c8"}, "downloads": -1, "filename": "python-rexster-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ba817806a985e7e5f1e4d1be34f5a99b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18204, "upload_time": "2011-07-13T00:06:35", "upload_time_iso_8601": "2011-07-13T00:06:35.874872Z", "url": "https://files.pythonhosted.org/packages/c7/39/7d21a319206fe0ecc5a518df8dd72b2ea15b9c184f5fc11257a08f14d478/python-rexster-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:38 2020"}