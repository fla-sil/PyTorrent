{"info": {"author": "Wong Jin Yung", "author_email": "wongjinyung@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "mtl\n===\n\n``mtl`` (**m**\\ oving **t**\\ ime-**l**\\ apse) is a ``python`` tool to create time lapse animation from photos taken not from a fixed camera (hence 'moving') with identifiable markers.\n\n``mtl`` align time series photos with markers (3 or 4 markers) provided as .TPS file (digitized with `TPSDig software <http://life.bio.sunysb.edu/morph/soft-dataacq.html>`_), and output the aligned photos and time-lapse movie.\n\nrequires\n--------\n``mtl`` is based on `OpenCV <https://opencv.org/>`_'s implementation of affine transformation (with 3 markers provided) and perspective transformation (with 4 markers provided). A nice explanation on the transformation methods can be found `here <https://docs.opencv.org/3.2.0/da/d6e/tutorial_py_geometric_transformations.html>`_.\n\nOutput of time-lapse video is based on `ffmpeg <https://www.ffmpeg.org/>`_. To use ``mtl``, both ``OpenCV`` and ``ffmpeg`` are required.\n\nhow to use?\n-----------\n1. Use as a ``python`` package. \n\n2. Directly use the ``mtl.py`` ``python`` module, if you prefer. Download the `file <https://github.com/jinyung/mtl/blob/master/mtl/mtl.py>`_.\n\n``mtl`` can be directly used as command line script, with the following arguments:\n\n  -h, --help         show this help message and exit\n  -t, --tps \t     path to tps file containing landmarks for alignments\n  -i, --img\t     path to the directory containing images to be aligned\n  -s, --sep          separator between individual and time in image name.\n                     NOTE: use single quote (') for special character in Unix\n                     systems\n\nAlternatively, ``mtl`` can be imported into ``python``:\n\n  >>> from mtl import align\n\nThe main function of ``mtl`` is ``align``, which provides more options. For further details run:\n \n  >>> help(align)\n\npreparing images and markers file\n---------------------------------\n``mtl`` supports batch processing of multiple time series photos. Different time series (such as 'individuals') and time points should be indicated in the file name of the images. For examples, ``1-1.tif``, ``1-2.tif``, ..., ``1-100.tif`` and ``a-1.tif``, ``a-2.tif``, ..., ``a-100.tif`` will be processed as two different time series of '1' and 'a' with time points of 1, 2, ..., 100. These images should be placed in a single directory. A dash '-' is used to separate the time series and time points here so this should be instructed to the program. Only a single ``.TPS`` file is required for processing multiple time series photos, and it should contains markers for all images in the directory to be processed.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jinyung/mtl", "keywords": "time-lapse barnacle", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mtl", "package_url": "https://pypi.org/project/mtl/", "platform": "", "project_url": "https://pypi.org/project/mtl/", "project_urls": {"Homepage": "https://github.com/jinyung/mtl"}, "release_url": "https://pypi.org/project/mtl/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "moving time lapse", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>mtl</tt> (<strong>m</strong>oving <strong>t</strong>ime-<strong>l</strong>apse) is a <tt>python</tt> tool to create time lapse animation from photos taken not from a fixed camera (hence \u2018moving\u2019) with identifiable markers.</p>\n<p><tt>mtl</tt> align time series photos with markers (3 or 4 markers) provided as .TPS file (digitized with <a href=\"http://life.bio.sunysb.edu/morph/soft-dataacq.html\" rel=\"nofollow\">TPSDig software</a>), and output the aligned photos and time-lapse movie.</p>\n<div id=\"requires\">\n<h2>requires</h2>\n<p><tt>mtl</tt> is based on <a href=\"https://opencv.org/\" rel=\"nofollow\">OpenCV</a>\u2019s implementation of affine transformation (with 3 markers provided) and perspective transformation (with 4 markers provided). A nice explanation on the transformation methods can be found <a href=\"https://docs.opencv.org/3.2.0/da/d6e/tutorial_py_geometric_transformations.html\" rel=\"nofollow\">here</a>.</p>\n<p>Output of time-lapse video is based on <a href=\"https://www.ffmpeg.org/\" rel=\"nofollow\">ffmpeg</a>. To use <tt>mtl</tt>, both <tt>OpenCV</tt> and <tt>ffmpeg</tt> are required.</p>\n</div>\n<div id=\"how-to-use\">\n<h2>how to use?</h2>\n<ol>\n<li>Use as a <tt>python</tt> package.</li>\n<li>Directly use the <tt>mtl.py</tt> <tt>python</tt> module, if you prefer. Download the <a href=\"https://github.com/jinyung/mtl/blob/master/mtl/mtl.py\" rel=\"nofollow\">file</a>.</li>\n</ol>\n<p><tt>mtl</tt> can be directly used as command line script, with the following arguments:</p>\n<blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-t</span>, <span class=\"option\">--tps</span></kbd></td>\n<td>path to tps file containing landmarks for alignments</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-i</span>, <span class=\"option\">--img</span></kbd></td>\n<td>path to the directory containing images to be aligned</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-s</span>, <span class=\"option\">--sep</span></kbd></td>\n<td>separator between individual and time in image name.\nNOTE: use single quote (\u2018) for special character in Unix\nsystems</td></tr>\n</tbody>\n</table>\n</blockquote>\n<p>Alternatively, <tt>mtl</tt> can be imported into <tt>python</tt>:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from mtl import align\n</pre>\n</blockquote>\n<p>The main function of <tt>mtl</tt> is <tt>align</tt>, which provides more options. For further details run:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; help(align)\n</pre>\n</blockquote>\n</div>\n<div id=\"preparing-images-and-markers-file\">\n<h2>preparing images and markers file</h2>\n<p><tt>mtl</tt> supports batch processing of multiple time series photos. Different time series (such as \u2018individuals\u2019) and time points should be indicated in the file name of the images. For examples, <tt><span class=\"pre\">1-1.tif</span></tt>, <tt><span class=\"pre\">1-2.tif</span></tt>, \u2026, <tt><span class=\"pre\">1-100.tif</span></tt> and <tt><span class=\"pre\">a-1.tif</span></tt>, <tt><span class=\"pre\">a-2.tif</span></tt>, \u2026, <tt><span class=\"pre\">a-100.tif</span></tt> will be processed as two different time series of \u20181\u2019 and \u2018a\u2019 with time points of 1, 2, \u2026, 100. These images should be placed in a single directory. A dash \u2018-\u2018 is used to separate the time series and time points here so this should be instructed to the program. Only a single <tt>.TPS</tt> file is required for processing multiple time series photos, and it should contains markers for all images in the directory to be processed.</p>\n</div>\n\n          </div>"}, "last_serial": 3443680, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "058715fdeb717b3995ab025e7fe5a5fd", "sha256": "7e20c1b064dfb1103d9c76a900b7c49171c8edb9f313d3d3a0e70d08d25c6d2b"}, "downloads": -1, "filename": "mtl-0.0.1.tar.gz", "has_sig": false, "md5_digest": "058715fdeb717b3995ab025e7fe5a5fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8114, "upload_time": "2017-12-26T17:07:56", "upload_time_iso_8601": "2017-12-26T17:07:56.838994Z", "url": "https://files.pythonhosted.org/packages/b7/e2/f23ff53c7eb8a567371ab0984f46d6bbd36e204bb1cdc2dc3c602fc2d8b8/mtl-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "058715fdeb717b3995ab025e7fe5a5fd", "sha256": "7e20c1b064dfb1103d9c76a900b7c49171c8edb9f313d3d3a0e70d08d25c6d2b"}, "downloads": -1, "filename": "mtl-0.0.1.tar.gz", "has_sig": false, "md5_digest": "058715fdeb717b3995ab025e7fe5a5fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8114, "upload_time": "2017-12-26T17:07:56", "upload_time_iso_8601": "2017-12-26T17:07:56.838994Z", "url": "https://files.pythonhosted.org/packages/b7/e2/f23ff53c7eb8a567371ab0984f46d6bbd36e204bb1cdc2dc3c602fc2d8b8/mtl-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:42 2020"}