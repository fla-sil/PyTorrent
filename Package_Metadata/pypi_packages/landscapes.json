{"info": {"author": "Nathan A. Rooy", "author_email": "nathanrooy@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "<p  align=\"center\"><img src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/logo.png\"></p>\n\n[![Build Status](https://travis-ci.org/nathanrooy/landscapes.svg?branch=master)](https://travis-ci.org/nathanrooy/landscapes.svg?branch=master)\n[![GitHub license](https://img.shields.io/github/license/nathanrooy/landscapes.svg)](https://github.com/nathanrooy/landscapes/blob/master/LICENSE)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/landscapes.svg)](https://pypi.python.org/pypi/landscapes/)\n[![PyPI version fury.io](https://badge.fury.io/py/landscapes.svg)](https://pypi.python.org/pypi/landscapes/)\n[![Downloads](https://pepy.tech/badge/landscapes)](https://pepy.tech/project/landscapes)\n\n## Installation\nThere are a couple ways in which you can use this library. The first and probably the easiest is by using pip and PyPi:\n```sh\npip install landscapes\n```\nYou can also install directly from this git repo:\n```sh\npip install git+https://github.com/nathanrooy/landscapes\n```\nLastly, you can always clone/download this repo and use as is.\n```sh\nwget https://github.com/nathanrooy/landscapes/archive/master.zip\nunzip master.zip\ncd landscapes-master\n```\n\n## Usage\n\nAs a simple example, let's use the <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Nelder%E2%80%93Mead_method\">Nelder-Mead method</a> via <a target=\"_blank\" href=\"https://www.scipy.org/\">SciPy</a> to minimize the sphere function. We'll start off by importing the `sphere` function from Landscapes and the `minimize` method from SciPy.\n```py\n>>> from landscapes.single_objective import sphere\n>>> from scipy.optimize import minimize\n```\nNext, we'll call the `minimize` method using a starting location of [5,5].\n```py\n>>> minimize(sphere, x0=[5,5], method='Nelder-Mead')\n```\nThe output of which should look close to this:\n```py\n final_simplex: (array([[-3.33051318e-05, -1.93825710e-05],\n       [ 4.24925225e-05,  1.37129516e-05],\n       [ 3.09383247e-05, -4.04797876e-05]]), array([1.48491586e-09, 1.99365951e-09, 2.59579314e-09]))\n           fun: 1.4849158640215086e-09\n       message: 'Optimization terminated successfully.'\n          nfev: 80\n           nit: 44\n        status: 0\n       success: True\n             x: array([-3.33051318e-05, -1.93825710e-05])\n\n```\n\n## Function Reference - Single Objective\n\n\n### Ackley function\n```py\nfrom landscapes.single_objective import ackley\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0,y=0)=0 | -5.12 <= x, y <= 5.12 | `ackley([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/ackley.png\">\n\n### Beale function\n```py\nfrom landscapes.single_objective import beale\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=3, y=0.5) = 0 | -4.5 <= x, y <= 4.5 | `beale([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/beale.png\">\n\n### Booth function\n```py\nfrom landscapes.single_objective import booth\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=1, y=3) = 0 | -10 <= x, y <= 10 | `booth([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/booth.png\">\n\n### Bukin N.6 function\n```py\nfrom landscapes.single_objective import bukin_n6\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=-10, y=1) = 0 | -15 <= x <= -5 <br> -3 <= y <= 3 | `bukin_n6([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/bukin_n6.png\">\n\n### Cross-in-tray function\n```py\nfrom landscapes.single_objective import cross_in_tray\n```\n| global minimum(s) | bounds | usage | \n| --- | --- | --- |\n| f(x=1.34941, y=-1.34941) = -2.06261 <br> f(x=1.34941, y=1.34941) = -2.06261 <br> f(x=-1.34941, y=1.34941) = -2.06261 <br> f(x=-1.34941, y=-1.34941) = -2.06261 | -10 <= x, y <= 10 | `cross_in_tray([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/cross_in_tray.png\">\n\n### Easom function\n```py\nfrom landscapes.single_objective import easom\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=pi, y=pi) = -1 | -100 <= x, y <= 100 | `easom([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/easom.png\">\n\n### Eggholder function\n```py\nfrom landscapes.single_objective import eggholder\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=512, y=404.2319) = -959.6407 | -512 <= x, y <= 512 | `eggholder([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/egg_holder.png\">\n\n### Goldstein\u2013Price function\n```py\nfrom landscapes.single_objective import goldstein_price\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0, y=-1) = 3 | -2 <= x, y <= 2 | `goldstein_price([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/log_color_scale/goldstein_price.png\">\n\n### Himmelblau's function\n```py\nfrom landscapes.single_objective import himmelblau\n```\n| global minimum(s) | bounds | usage | \n| --- | --- | --- |\n| f(x=3.0, y=2.0) = 0.0 <br> f(x=-2.805118, y=3.131312) = 0.0 <br> f(x=-3.779310, y=-3.283186) = 0.0 <br> f(x=3.584428, y=-1.848126) = 0.0 | -5 <= x, y <= 5 | `himmelblau([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/himmelblau.png\">\n\n### H\u00f6lder table function\n```py\nfrom landscapes.single_objective import holder_table\n```\n| global minimum(s) | bounds | usage | \n| --- | --- | --- |\n| f(x=8.05502, y=9.66459) = -19.2085 <br> f(x=-8.05502, y=9.66459) = -19.2085 <br> f(x=8.05502, y=-9.66459) = -19.2085 <br> f(x=-8.05502, y=-9.66459) = -19.2085 <br> | -10 <= x, y <= 10 | `holder_table([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/holder_table.png\">\n\n### L\u00e9vi function N.13\n```py\nfrom landscapes.single_objective import levi_n13\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=1, y=1) = 0 | -10 <= x, y <= 10 | `levi_n13([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/levi_n13.png\">\n\n### Matyas function\n```py\nfrom landscapes.single_objective import mccormick\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0, y=0) = 0 | -10 <= x, y <= 10 | `matyas([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/matyas.png\">\n\n### McCormick function\n```py\nfrom landscapes.single_objective import mccormick\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=-0.54719, y=-1.54719) = -1.9133 | -1.5 <= x <= 4 <br> -3 <= y <= 4 | `mccormick([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/mccormick.png\">\n\n### Rastrigin function\n```py\nfrom landscapes.single_objective import rastrigin\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f([0,...,0]) = 0 | -5.12 <= x_i <= 5.12 | `rastrigin([x_1,...,x_n])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/rastrigin.png\">\n\n### Rosenbrock function\n```py\nfrom landscapes.single_objective import rosenbrock\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f([1,...,1]) = 0 | -inf <= x_i <= inf | `rosenbrock([x_1,...,x_n])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/rosenbrock.png\">\n\n### Schaffer function N.2\n```py\nfrom landscapes.single_objective import schaffer_n2\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0, y=0) = 0 | -100 <= x, y <= 100 | `schaffer_n2([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/schaffer_n2.png\">\n\n\n### Schaffer function N.4\n```py\nfrom landscapes.single_objective import schaffer_n4\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f(x=0, y=1.25313) = 0.292579 <br> f(x=0, y=-1.25313) = 0.292579 | -100 <= x, y <= 100 | `schaffer_n4([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/schaffer_n4.png\">\n\n### Sphere function\n```py\nfrom landscapes.single_objective import sphere\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| f([0,...,0]) = 0 | -inf <= x_i <= inf | `sphere([x_1,...x_n])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/sphere.png\">\n\n### Styblinski\u2013Tang function\n```py\nfrom landscapes.single_objective import styblinski_tang\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| -39.16617n < f([-2.903534,...,-2.903534]) < -39.16616n | -5 <= x_i <= 5 | `styblinski_tang([x_1,...x_n])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/styblinski_tang.png\">\n\n### Three-hump camel function\n```py\nfrom landscapes.single_objective import three_hump_camel\n```\n| global minimum | bounds | usage | \n| --- | --- | --- |\n| -f(x=0, y=0) = 0 | -5 <= x_i <= 5 | `three_hump_camel([x,y])` |\n\n<img width=400, src=\"https://raw.githubusercontent.com/nathanrooy/landscapes/master/docs/images/linear_color_scale/three_hump_camel.png\">", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nathanrooy/landscapes", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "landscapes", "package_url": "https://pypi.org/project/landscapes/", "platform": "", "project_url": "https://pypi.org/project/landscapes/", "project_urls": {"Homepage": "https://github.com/nathanrooy/landscapes"}, "release_url": "https://pypi.org/project/landscapes/0.0.6/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A Python library of standardized optimization test functions", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/402d26f9388636b2ab7cc7df513e2989c877fa1f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f6c6f676f2e706e67\"></p>\n<p><a href=\"https://travis-ci.org/nathanrooy/landscapes.svg?branch=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/233a1bb588baea71181a710cb0dbef3699946c39/68747470733a2f2f7472617669732d63692e6f72672f6e617468616e726f6f792f6c616e647363617065732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/nathanrooy/landscapes/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"GitHub license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5427dba781a0ed78b4e315f62c2bc813ce7c3b6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6e617468616e726f6f792f6c616e647363617065732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/landscapes/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34c2e7e7e070af07113c02317ae027047cf35326/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c616e647363617065732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/landscapes/\" rel=\"nofollow\"><img alt=\"PyPI version fury.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d98ceed74b1bc53eb35aac2b26b2cd5be23399d/68747470733a2f2f62616467652e667572792e696f2f70792f6c616e647363617065732e737667\"></a>\n<a href=\"https://pepy.tech/project/landscapes\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6e35244ea292902e63de83031aaf9a388355afbc/68747470733a2f2f706570792e746563682f62616467652f6c616e64736361706573\"></a></p>\n<h2>Installation</h2>\n<p>There are a couple ways in which you can use this library. The first and probably the easiest is by using pip and PyPi:</p>\n<pre>pip install landscapes\n</pre>\n<p>You can also install directly from this git repo:</p>\n<pre>pip install git+https://github.com/nathanrooy/landscapes\n</pre>\n<p>Lastly, you can always clone/download this repo and use as is.</p>\n<pre>wget https://github.com/nathanrooy/landscapes/archive/master.zip\nunzip master.zip\n<span class=\"nb\">cd</span> landscapes-master\n</pre>\n<h2>Usage</h2>\n<p>As a simple example, let's use the <a href=\"https://en.wikipedia.org/wiki/Nelder%E2%80%93Mead_method\" rel=\"nofollow\">Nelder-Mead method</a> via <a href=\"https://www.scipy.org/\" rel=\"nofollow\">SciPy</a> to minimize the sphere function. We'll start off by importing the <code>sphere</code> function from Landscapes and the <code>minimize</code> method from SciPy.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">sphere</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">scipy.optimize</span> <span class=\"kn\">import</span> <span class=\"n\">minimize</span>\n</pre>\n<p>Next, we'll call the <code>minimize</code> method using a starting location of [5,5].</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">minimize</span><span class=\"p\">(</span><span class=\"n\">sphere</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">],</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'Nelder-Mead'</span><span class=\"p\">)</span>\n</pre>\n<p>The output of which should look close to this:</p>\n<pre> <span class=\"n\">final_simplex</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"o\">-</span><span class=\"mf\">3.33051318e-05</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.93825710e-05</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mf\">4.24925225e-05</span><span class=\"p\">,</span>  <span class=\"mf\">1.37129516e-05</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mf\">3.09383247e-05</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">4.04797876e-05</span><span class=\"p\">]]),</span> <span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mf\">1.48491586e-09</span><span class=\"p\">,</span> <span class=\"mf\">1.99365951e-09</span><span class=\"p\">,</span> <span class=\"mf\">2.59579314e-09</span><span class=\"p\">]))</span>\n           <span class=\"n\">fun</span><span class=\"p\">:</span> <span class=\"mf\">1.4849158640215086e-09</span>\n       <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"s1\">'Optimization terminated successfully.'</span>\n          <span class=\"n\">nfev</span><span class=\"p\">:</span> <span class=\"mi\">80</span>\n           <span class=\"n\">nit</span><span class=\"p\">:</span> <span class=\"mi\">44</span>\n        <span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n       <span class=\"n\">success</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n             <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">array</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mf\">3.33051318e-05</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">1.93825710e-05</span><span class=\"p\">])</span>\n</pre>\n<h2>Function Reference - Single Objective</h2>\n<h3>Ackley function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">ackley</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=0,y=0)=0</td>\n<td>-5.12 &lt;= x, y &lt;= 5.12</td>\n<td><code>ackley([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/225d9ff8d0449b822382b2ad94da71ff7f049bf8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f61636b6c65792e706e67\" width=\"400,\">\n<h3>Beale function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">beale</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=3, y=0.5) = 0</td>\n<td>-4.5 &lt;= x, y &lt;= 4.5</td>\n<td><code>beale([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4654622bb9365cbfb5906ffb6eb4c48e1e19007/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f6265616c652e706e67\" width=\"400,\">\n<h3>Booth function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">booth</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=1, y=3) = 0</td>\n<td>-10 &lt;= x, y &lt;= 10</td>\n<td><code>booth([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0427ef37311ccbd8913ab18da377320b882850d8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f626f6f74682e706e67\" width=\"400,\">\n<h3>Bukin N.6 function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">bukin_n6</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=-10, y=1) = 0</td>\n<td>-15 &lt;= x &lt;= -5 <br> -3 &lt;= y &lt;= 3</td>\n<td><code>bukin_n6([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5c3a96a2c99db672a96a6b67dea871c49b4f10d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f62756b696e5f6e362e706e67\" width=\"400,\">\n<h3>Cross-in-tray function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">cross_in_tray</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum(s)</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=1.34941, y=-1.34941) = -2.06261 <br> f(x=1.34941, y=1.34941) = -2.06261 <br> f(x=-1.34941, y=1.34941) = -2.06261 <br> f(x=-1.34941, y=-1.34941) = -2.06261</td>\n<td>-10 &lt;= x, y &lt;= 10</td>\n<td><code>cross_in_tray([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1df2f07a011076e115956143e13afb5e02e63531/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f63726f73735f696e5f747261792e706e67\" width=\"400,\">\n<h3>Easom function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">easom</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=pi, y=pi) = -1</td>\n<td>-100 &lt;= x, y &lt;= 100</td>\n<td><code>easom([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2469e817129f5fcb3ac904679c598e0d357da345/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f6561736f6d2e706e67\" width=\"400,\">\n<h3>Eggholder function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">eggholder</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=512, y=404.2319) = -959.6407</td>\n<td>-512 &lt;= x, y &lt;= 512</td>\n<td><code>eggholder([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/127f3c58c743d729ab7af41c356585de3288e9fd/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f6567675f686f6c6465722e706e67\" width=\"400,\">\n<h3>Goldstein\u2013Price function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">goldstein_price</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=0, y=-1) = 3</td>\n<td>-2 &lt;= x, y &lt;= 2</td>\n<td><code>goldstein_price([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52f7043b672a019cc2d0b5ba2d8819b14bfd70d8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c6f675f636f6c6f725f7363616c652f676f6c64737465696e5f70726963652e706e67\" width=\"400,\">\n<h3>Himmelblau's function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">himmelblau</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum(s)</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=3.0, y=2.0) = 0.0 <br> f(x=-2.805118, y=3.131312) = 0.0 <br> f(x=-3.779310, y=-3.283186) = 0.0 <br> f(x=3.584428, y=-1.848126) = 0.0</td>\n<td>-5 &lt;= x, y &lt;= 5</td>\n<td><code>himmelblau([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03cd9fd4573c6e59452a02a7a78e13e09c53ecf2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f68696d6d656c626c61752e706e67\" width=\"400,\">\n<h3>H\u00f6lder table function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">holder_table</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum(s)</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=8.05502, y=9.66459) = -19.2085 <br> f(x=-8.05502, y=9.66459) = -19.2085 <br> f(x=8.05502, y=-9.66459) = -19.2085 <br> f(x=-8.05502, y=-9.66459) = -19.2085 <br></td>\n<td>-10 &lt;= x, y &lt;= 10</td>\n<td><code>holder_table([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78142e96775698b79490f35bcfe658711345aa7b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f686f6c6465725f7461626c652e706e67\" width=\"400,\">\n<h3>L\u00e9vi function N.13</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">levi_n13</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=1, y=1) = 0</td>\n<td>-10 &lt;= x, y &lt;= 10</td>\n<td><code>levi_n13([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b98cc24f989e3aa751826ab0b581c5738ed529a5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f6c6576695f6e31332e706e67\" width=\"400,\">\n<h3>Matyas function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">mccormick</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=0, y=0) = 0</td>\n<td>-10 &lt;= x, y &lt;= 10</td>\n<td><code>matyas([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41e77e5a07cec87d6d57d75baecb1126aac60b0a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f6d61747961732e706e67\" width=\"400,\">\n<h3>McCormick function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">mccormick</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=-0.54719, y=-1.54719) = -1.9133</td>\n<td>-1.5 &lt;= x &lt;= 4 <br> -3 &lt;= y &lt;= 4</td>\n<td><code>mccormick([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08da7bab949d7ed85e2619c0f2a3464a7642a96f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f6d63636f726d69636b2e706e67\" width=\"400,\">\n<h3>Rastrigin function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">rastrigin</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f([0,...,0]) = 0</td>\n<td>-5.12 &lt;= x_i &lt;= 5.12</td>\n<td><code>rastrigin([x_1,...,x_n])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b94881cef2994c52e26cf4602c3bc34e2f817b7/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f72617374726967696e2e706e67\" width=\"400,\">\n<h3>Rosenbrock function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">rosenbrock</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f([1,...,1]) = 0</td>\n<td>-inf &lt;= x_i &lt;= inf</td>\n<td><code>rosenbrock([x_1,...,x_n])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24afdfd91db7f2dcfa63b19dca1a35f6bd9838dd/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f726f73656e62726f636b2e706e67\" width=\"400,\">\n<h3>Schaffer function N.2</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">schaffer_n2</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=0, y=0) = 0</td>\n<td>-100 &lt;= x, y &lt;= 100</td>\n<td><code>schaffer_n2([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d28dfa6608a56f6a8564797c5446adfa8f8faf6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f73636861666665725f6e322e706e67\" width=\"400,\">\n<h3>Schaffer function N.4</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">schaffer_n4</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f(x=0, y=1.25313) = 0.292579 <br> f(x=0, y=-1.25313) = 0.292579</td>\n<td>-100 &lt;= x, y &lt;= 100</td>\n<td><code>schaffer_n4([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/939a4a692cfe7d8df3586ecdfbf772d1fe776376/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f73636861666665725f6e342e706e67\" width=\"400,\">\n<h3>Sphere function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">sphere</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>f([0,...,0]) = 0</td>\n<td>-inf &lt;= x_i &lt;= inf</td>\n<td><code>sphere([x_1,...x_n])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bb719fa6a068512cff360a0a3c4f42eddb12c9d0/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f7370686572652e706e67\" width=\"400,\">\n<h3>Styblinski\u2013Tang function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">styblinski_tang</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-39.16617n &lt; f([-2.903534,...,-2.903534]) &lt; -39.16616n</td>\n<td>-5 &lt;= x_i &lt;= 5</td>\n<td><code>styblinski_tang([x_1,...x_n])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0304d1c6bae6995dccf64e87126af274b4041a2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f737479626c696e736b695f74616e672e706e67\" width=\"400,\">\n<h3>Three-hump camel function</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">landscapes.single_objective</span> <span class=\"kn\">import</span> <span class=\"n\">three_hump_camel</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th>global minimum</th>\n<th>bounds</th>\n<th>usage</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-f(x=0, y=0) = 0</td>\n<td>-5 &lt;= x_i &lt;= 5</td>\n<td><code>three_hump_camel([x,y])</code></td>\n</tr></tbody></table>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fa57658b09c817af0462494b4ca25b6fc6834002/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e617468616e726f6f792f6c616e647363617065732f6d61737465722f646f63732f696d616765732f6c696e6561725f636f6c6f725f7363616c652f74687265655f68756d705f63616d656c2e706e67\" width=\"400,\">\n\n          </div>"}, "last_serial": 6145072, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5eb724d66e5c35f66a50795469c1a5f2", "sha256": "c4a6f9067fc4b53d27a50c7e15993561cd1b023915fc9434795073bec057d869"}, "downloads": -1, "filename": "landscapes-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5eb724d66e5c35f66a50795469c1a5f2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 2659, "upload_time": "2019-11-06T01:13:56", "upload_time_iso_8601": "2019-11-06T01:13:56.212985Z", "url": "https://files.pythonhosted.org/packages/0e/15/1045a6718f9d0a0915d75b30aaeb06fa086855ff888589dd7911e586572f/landscapes-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bed82f1958d372b46e7baa51f9b8ce63", "sha256": "f393585aaebc5135df375c6b6d4d3908a18e78d0047201883b70b2d67c3bc1a1"}, "downloads": -1, "filename": "landscapes-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bed82f1958d372b46e7baa51f9b8ce63", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3839, "upload_time": "2019-11-07T22:07:42", "upload_time_iso_8601": "2019-11-07T22:07:42.920868Z", "url": "https://files.pythonhosted.org/packages/c7/ba/15eed2353c97207ecd5805eac80d49b27c5bb76424a9f7eea6f48028e98a/landscapes-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "317968ff29aca68df8ba7f686e1f765f", "sha256": "7d37d14613070e8860a64c1df7e08e40f56006e2dbdcda44b5a75fef83205fba"}, "downloads": -1, "filename": "landscapes-0.0.3.tar.gz", "has_sig": false, "md5_digest": "317968ff29aca68df8ba7f686e1f765f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3855, "upload_time": "2019-11-07T22:12:07", "upload_time_iso_8601": "2019-11-07T22:12:07.777916Z", "url": "https://files.pythonhosted.org/packages/84/7f/125e3179a8fc81d47f0e6278558cdea86862499e67b9ae5d7c24c9b7aa47/landscapes-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0cf23a54711b41a3a024a8d402216f15", "sha256": "72c8b9e8429bf459aa07bb01015253063370f837ab5c0045b02cc164be6d2d36"}, "downloads": -1, "filename": "landscapes-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0cf23a54711b41a3a024a8d402216f15", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5232, "upload_time": "2019-11-09T22:30:09", "upload_time_iso_8601": "2019-11-09T22:30:09.880842Z", "url": "https://files.pythonhosted.org/packages/77/3f/395e3e43fe0fed36556a41887ae227d90da9915a07b8ac83608a6fa8e12d/landscapes-0.0.4.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "2b28cfb2ec38f8b891664fa5385da429", "sha256": "d29b13282344fc7a78e702b99deac5505fb6660d1faf31610a5044a49918ca17"}, "downloads": -1, "filename": "landscapes-0.0.6.tar.gz", "has_sig": false, "md5_digest": "2b28cfb2ec38f8b891664fa5385da429", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6297, "upload_time": "2019-11-15T21:44:18", "upload_time_iso_8601": "2019-11-15T21:44:18.321548Z", "url": "https://files.pythonhosted.org/packages/62/19/d27f135592f68d4e76858b51af798b9ee3e833c44359ac866118a78ef3ac/landscapes-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b28cfb2ec38f8b891664fa5385da429", "sha256": "d29b13282344fc7a78e702b99deac5505fb6660d1faf31610a5044a49918ca17"}, "downloads": -1, "filename": "landscapes-0.0.6.tar.gz", "has_sig": false, "md5_digest": "2b28cfb2ec38f8b891664fa5385da429", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6297, "upload_time": "2019-11-15T21:44:18", "upload_time_iso_8601": "2019-11-15T21:44:18.321548Z", "url": "https://files.pythonhosted.org/packages/62/19/d27f135592f68d4e76858b51af798b9ee3e833c44359ac866118a78ef3ac/landscapes-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:58 2020"}