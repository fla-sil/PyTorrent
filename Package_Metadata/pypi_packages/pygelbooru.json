{"info": {"author": "Makoto", "author_email": "FujiMakoto@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Multimedia :: Graphics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# PyGelbooru\n![GitHub](https://img.shields.io/github/license/FujiMakoto/pygelbooru)\n\nPyGelbooru is an unofficial and lightweight asynchronous library for the [Gelbooru](https://gelbooru.com/) API.\n\n# Installation\nThis library requires [Python 3.6](https://www.python.org) or above.\n\nYou can install the library through pip as follows,\n```shell script\npip install pygelbooru\n```\n\n## Usage\n\n### Searching\nThe primary use for this library is, naturally, to search for images with specific tags.\n\nThis can be done as so:\n```python\nfrom pygelbooru import Gelbooru\n\n# API key/user ID is optional, but access may be limited without them\ngelbooru = Gelbooru('API_KEY', 'USER_ID')\n\nresults = await gelbooru.search_posts(tags=['dog ears', '1girl'], exclude_tags=['nude'])\n[<GelbooruImage(id=5105386, filename='b77e69be0a4b...dde071dc.jpeg', owner='anon2003')>,\n <GelbooruImage(id=5105161, filename='bf169f891ebe...02bceb5e.jpeg', owner='cpee')>,\n <GelbooruImage(id=5104148, filename='46df3ebe2d41...4316d218e.jpg', owner='danbooru')>,\n <GelbooruImage(id=5104080, filename='e8eec23d151e...419293401.png', owner='anon2003')>,\n <GelbooruImage(id=5103937, filename='5bf279f3c546...be3fc53c8.jpg', owner='danbooru')>,\n ...\n ```\nTags **can** contain spaces when passed as arguments, they will simply be reformated with underscores before being queried, so you don't need to reformat them yourself.\n\nResults are returned as a list of GelbooruImage containers. When cast to a string, this will return the image_url,\n```python\nstr(results[0])\n'https://img2.gelbooru.com/images/b7/7e/b77e69be0a4b581eac597527dde071dc.jpeg'\n```\n\nYou can also pull other information returned by the API,\nhttps://github.com/FujiMakoto/pygelbooru/blob/master/pygelbooru/gelbooru.py#L32-L47\n\n### Searching (Random)\nIn addition to searching for a large list of images, PyGelbooru also provides a helper method for when you're really just after a single, random image that matches the specified tags.\n\nThis method will automatically pull a random image from the last 20,000 Gelbooru image submissions.\n\n```python\nresult = await gelbooru.search_post(tags=['cat ears', '1girl', 'cat hood', 'bell'], exclude_tags=['nude'])\n<GelbooruImage(id=5106718, filename='bbbdfbf9e883...161753514.png', owner='6498')>\n```\n\n### Comments\n\nYou can fetch post comments directly from the GelbooruImage container,\n```python\npost = await gelbooru.get_post(5099841)\nawait post.get_comments()\n[<GelbooruComment(id=2486074, author='Anonymous', created_at='2020-01-28 08:47')>]\n```\n\n### Tags\nBesides searching for images, you can also pull information on tags as follows,\n```python\nawait gelbooru.tag_list(name='dog ears')\n<GelbooruTag(id=773, name='dog_ears', count=22578)>\n\n# Use \"name_pattern\" to search for partial matches to a specified tag\nawait gelbooru.tag_list(name_pattern='splatoon', limit=4)\n[<GelbooruTag(id=892683, name='splatoon_(series)', count=11353)>,\n <GelbooruTag(id=759189, name='splatoon_2', count=3488)>,\n <GelbooruTag(id=612372, name='aori_(splatoon)', count=2266)>,\n <GelbooruTag(id=612374, name='hotaru_(splatoon)', count=2248)>]\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/FujiMakoto/pygelbooru/archive/v0.3.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FujiMakoto/pygelbooru", "keywords": "gelbooru,anime,artwork,anime artwork,booru", "license": "gpl-3.0", "maintainer": "", "maintainer_email": "", "name": "pygelbooru", "package_url": "https://pypi.org/project/pygelbooru/", "platform": "", "project_url": "https://pypi.org/project/pygelbooru/", "project_urls": {"Download": "https://github.com/FujiMakoto/pygelbooru/archive/v0.3.0.tar.gz", "Homepage": "https://github.com/FujiMakoto/pygelbooru"}, "release_url": "https://pypi.org/project/pygelbooru/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "PyGelbooru is an unofficial and lightweight asynchronous library for the Gelbooru API.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyGelbooru</h1>\n<p><img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6edec72e1b79fba434210488d2d04fea6360e1e7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f46756a694d616b6f746f2f707967656c626f6f7275\"></p>\n<p>PyGelbooru is an unofficial and lightweight asynchronous library for the <a href=\"https://gelbooru.com/\" rel=\"nofollow\">Gelbooru</a> API.</p>\n<h1>Installation</h1>\n<p>This library requires <a href=\"https://www.python.org\" rel=\"nofollow\">Python 3.6</a> or above.</p>\n<p>You can install the library through pip as follows,</p>\n<pre>pip install pygelbooru\n</pre>\n<h2>Usage</h2>\n<h3>Searching</h3>\n<p>The primary use for this library is, naturally, to search for images with specific tags.</p>\n<p>This can be done as so:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygelbooru</span> <span class=\"kn\">import</span> <span class=\"n\">Gelbooru</span>\n\n<span class=\"c1\"># API key/user ID is optional, but access may be limited without them</span>\n<span class=\"n\">gelbooru</span> <span class=\"o\">=</span> <span class=\"n\">Gelbooru</span><span class=\"p\">(</span><span class=\"s1\">'API_KEY'</span><span class=\"p\">,</span> <span class=\"s1\">'USER_ID'</span><span class=\"p\">)</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">gelbooru</span><span class=\"o\">.</span><span class=\"n\">search_posts</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'dog ears'</span><span class=\"p\">,</span> <span class=\"s1\">'1girl'</span><span class=\"p\">],</span> <span class=\"n\">exclude_tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'nude'</span><span class=\"p\">])</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">GelbooruImage</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5105386</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'b77e69be0a4b...dde071dc.jpeg'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"s1\">'anon2003'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">GelbooruImage</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5105161</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'bf169f891ebe...02bceb5e.jpeg'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"s1\">'cpee'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">GelbooruImage</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5104148</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'46df3ebe2d41...4316d218e.jpg'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"s1\">'danbooru'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">GelbooruImage</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5104080</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'e8eec23d151e...419293401.png'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"s1\">'anon2003'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">GelbooruImage</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5103937</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'5bf279f3c546...be3fc53c8.jpg'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"s1\">'danbooru'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">...</span>\n</pre>\n<p>Tags <strong>can</strong> contain spaces when passed as arguments, they will simply be reformated with underscores before being queried, so you don't need to reformat them yourself.</p>\n<p>Results are returned as a list of GelbooruImage containers. When cast to a string, this will return the image_url,</p>\n<pre><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"s1\">'https://img2.gelbooru.com/images/b7/7e/b77e69be0a4b581eac597527dde071dc.jpeg'</span>\n</pre>\n<p>You can also pull other information returned by the API,\n<a href=\"https://github.com/FujiMakoto/pygelbooru/blob/master/pygelbooru/gelbooru.py#L32-L47\" rel=\"nofollow\">https://github.com/FujiMakoto/pygelbooru/blob/master/pygelbooru/gelbooru.py#L32-L47</a></p>\n<h3>Searching (Random)</h3>\n<p>In addition to searching for a large list of images, PyGelbooru also provides a helper method for when you're really just after a single, random image that matches the specified tags.</p>\n<p>This method will automatically pull a random image from the last 20,000 Gelbooru image submissions.</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">gelbooru</span><span class=\"o\">.</span><span class=\"n\">search_post</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'cat ears'</span><span class=\"p\">,</span> <span class=\"s1\">'1girl'</span><span class=\"p\">,</span> <span class=\"s1\">'cat hood'</span><span class=\"p\">,</span> <span class=\"s1\">'bell'</span><span class=\"p\">],</span> <span class=\"n\">exclude_tags</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'nude'</span><span class=\"p\">])</span>\n<span class=\"o\">&lt;</span><span class=\"n\">GelbooruImage</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5106718</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'bbbdfbf9e883...161753514.png'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"s1\">'6498'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<h3>Comments</h3>\n<p>You can fetch post comments directly from the GelbooruImage container,</p>\n<pre><span class=\"n\">post</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">gelbooru</span><span class=\"o\">.</span><span class=\"n\">get_post</span><span class=\"p\">(</span><span class=\"mi\">5099841</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">get_comments</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">GelbooruComment</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">2486074</span><span class=\"p\">,</span> <span class=\"n\">author</span><span class=\"o\">=</span><span class=\"s1\">'Anonymous'</span><span class=\"p\">,</span> <span class=\"n\">created_at</span><span class=\"o\">=</span><span class=\"s1\">'2020-01-28 08:47'</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n<h3>Tags</h3>\n<p>Besides searching for images, you can also pull information on tags as follows,</p>\n<pre><span class=\"k\">await</span> <span class=\"n\">gelbooru</span><span class=\"o\">.</span><span class=\"n\">tag_list</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'dog ears'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">GelbooruTag</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">773</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'dog_ears'</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">22578</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"c1\"># Use \"name_pattern\" to search for partial matches to a specified tag</span>\n<span class=\"k\">await</span> <span class=\"n\">gelbooru</span><span class=\"o\">.</span><span class=\"n\">tag_list</span><span class=\"p\">(</span><span class=\"n\">name_pattern</span><span class=\"o\">=</span><span class=\"s1\">'splatoon'</span><span class=\"p\">,</span> <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">GelbooruTag</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">892683</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'splatoon_(series)'</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">11353</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">GelbooruTag</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">759189</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'splatoon_2'</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">3488</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">GelbooruTag</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">612372</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'aori_(splatoon)'</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">2266</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">GelbooruTag</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">612374</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'hotaru_(splatoon)'</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">2248</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n</pre>\n\n          </div>"}, "last_serial": 6535645, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6a5977aad2b293095c983db262e4cc14", "sha256": "d7f51eae615f87ebc69030f4e593aa01fea601bcd0348994470f8efbdf0cb014"}, "downloads": -1, "filename": "pygelbooru-0.1.tar.gz", "has_sig": false, "md5_digest": "6a5977aad2b293095c983db262e4cc14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4902, "upload_time": "2020-01-27T21:11:09", "upload_time_iso_8601": "2020-01-27T21:11:09.152057Z", "url": "https://files.pythonhosted.org/packages/c9/f2/04d80462e4714eacf93a678a58d729be5858fe1dabf854891156b0ba5947/pygelbooru-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "61b8b7b198b54e83c792a38ec5cbc584", "sha256": "bb52333793bbf4541a3752917b4a88a3c7fdba76e3ea1e237db61dceaa574d7a"}, "downloads": -1, "filename": "pygelbooru-0.2.tar.gz", "has_sig": false, "md5_digest": "61b8b7b198b54e83c792a38ec5cbc584", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5043, "upload_time": "2020-01-27T21:22:04", "upload_time_iso_8601": "2020-01-27T21:22:04.510521Z", "url": "https://files.pythonhosted.org/packages/29/c5/5454aa551a323075646fb40371198f31cba132f10b5a555c7226b490a7cb/pygelbooru-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8cf8678822847da4213985c128865cd6", "sha256": "995c98f86e5237e89d4d12ddf6f895708605cd5fafd97f8a033d1eff1e8b5a80"}, "downloads": -1, "filename": "pygelbooru-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8cf8678822847da4213985c128865cd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5063, "upload_time": "2020-01-28T01:58:15", "upload_time_iso_8601": "2020-01-28T01:58:15.762705Z", "url": "https://files.pythonhosted.org/packages/a1/86/15d2215712c812d8d7880af2eae2923e34f9950ef56bf214755037178185/pygelbooru-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4d01c6c09bdb2f0bee9023fe421f2290", "sha256": "76901f7ad54ee620fa0c6be01267b713b4184cd6ef8f97f2d2d6217fae4d4158"}, "downloads": -1, "filename": "pygelbooru-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4d01c6c09bdb2f0bee9023fe421f2290", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6454, "upload_time": "2020-01-29T02:54:09", "upload_time_iso_8601": "2020-01-29T02:54:09.167484Z", "url": "https://files.pythonhosted.org/packages/49/63/95df189b8b45b7508cfc5dd3fee6bb53ee014bf63b1eff70f28f9aeaf900/pygelbooru-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4d01c6c09bdb2f0bee9023fe421f2290", "sha256": "76901f7ad54ee620fa0c6be01267b713b4184cd6ef8f97f2d2d6217fae4d4158"}, "downloads": -1, "filename": "pygelbooru-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4d01c6c09bdb2f0bee9023fe421f2290", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6454, "upload_time": "2020-01-29T02:54:09", "upload_time_iso_8601": "2020-01-29T02:54:09.167484Z", "url": "https://files.pythonhosted.org/packages/49/63/95df189b8b45b7508cfc5dd3fee6bb53ee014bf63b1eff70f28f9aeaf900/pygelbooru-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:11 2020"}