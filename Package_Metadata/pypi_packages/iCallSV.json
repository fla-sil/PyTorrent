{"info": {"author": "Ronak H Shah", "author_email": "rons.shah@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "iCallSV: Structural Aberration Detection from NGS datasets\n================================================================\n\n:Author: Ronak H Shah\n:Contact: rons.shah@gmail.com\n:Source code: http://github.com/rhshah/iCallSV\n:Wiki: http://icallsv.readthedocs.io/en/latest/\n:License: `Apache License 2.0 <http://www.apache.org/licenses/LICENSE-2.0>`_\n\n.. image:: https://landscape.io/github/rhshah/iCallSV/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/rhshah/iCallSV/master\n   :alt: Code Health\n\n\n.. image:: https://zenodo.org/badge/DOI/10.5281/zenodo.184864.svg\n\t:target: https://doi.org/10.5281/zenodo.184864\n\n\n.. image:: https://codecov.io/gh/rhshah/iCallSV/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/rhshah/iCallSV\n\n\niCallSV is a Python library and command-line software toolkit to call structural aberrations from Next Generation DNA sequencing data. Behind the scenes it uses Delly2 to do structural variant calling. It is designed for use with hybrid capture, including both whole-exome and custom target panels, and\nshort-read sequencing platforms such as Illumina.\n\nThe filtering process can be observed here:  `Workflow <https://www.draw.io/?lightbox=1&highlight=0000ff&edit=_blank&layers=1&nav=1&title=iCallSV_Filters.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D0Bwn1ij1qNCi_cE4xOW1NS0JJaTg%26export%3Ddownload>`_\n\nCitation\n========\n\nWe are in the process of publishing a manuscript describing iCallSV as part of the Structural Variant Detection framework.\nIf you use this software in a publication, for now, please cite our website `iCallSV <http://github.com/rhshah/iCallSV>`_.\n\nNote\n====\n\nFor some reason docstrings is not shown by `Read The Docs <https:read-the-docs.readthedocs.io>`_\n\nSo please use these url from `Github <https:github.com>`_ with `Html Preview <https://htmlpreview.github.io/>`_ for each module information:\n\n`Per Module Info <https://htmlpreview.github.io/?https://raw.githubusercontent.com/rhshah/iCallSV/master/docs/_build/html/iCallSV.html>`_ \n\n\nRequired Packages\n=================\nWe require that you install:\n\n:pandas: `v0.16.2 <http://pandas.pydata.org/>`_\n:biopython: `v1.65 <http://biopython.org/wiki/Main_Page>`_\n:pysam: `v0.8.4 <https://pypi.python.org/pypi/pysam>`_\n:pyvcf: `0.6.7 <https://pypi.python.org/pypi/PyVCF>`_\n:Delly: `v0.7.5 <https://github.com/tobiasrausch/delly>`_\n:targetSeqView: `master <https://github.com/Eitan177/targetSeqView>`_\n:iAnnotateSV: `v1.0.6 <https://github.com/rhshah/iAnnotateSV/tree/1.0.5>`_\n:coloredlogs: `v5.2 <https://pypi.python.org/pypi/coloredlogs>`_\n\nRequired Data Files\n===================\n\nThis files are given in the ``data`` folder inside iCallSV.\n\n\n:BlackListFile: (blacklist.txt) Tab-delimited file wihout header having black listed regions in order:\n\n\t\t\t\t**chromosome 1, breakpoint 1, chromosome 2, breakpoint 2**\n\n\n\t:Example:\n\n\t\t7\t140498077\t5\t175998094\n\n\n:BlackListGenes: (blacklistgenes.txt) Gene listed one per line wihout header that are to be removed \n\n\t:Example:\n\n\t\tLINC00486\n\n\t\tCNOT4\n\n:HotspotFile: (hotspotgenes.txt) Tab-delimited file wihout header having hotspot regions in order:\n\n\t\t\t  **chromosome, start, end, name**\n\n\t:Example:\n\n\t\t2\t29416089\t30143525\tALK\n\n:GenesToKeep: (genesToInclude.txt) Gene listed one per line wihout header that are to be kept\n\n\t:Example:\n\n\t\tALK\n\n\t\tBRAF\n\n\nConfiguration File Format\n=========================\n\n.. code-block:: ini\n\n\t#~~~Template configuration file to run iCallSV~~~#\n\t#### Path to python executable ###\n\t[Python]\n\tPYTHON:\n\t#### Path to R executable and R Lib ###\n\t[R]\n\tRHOME: \n\tRLIB: \n\t#### Path to delly, bcftools executables and Version of delly (supports only 0.7.3)###\n\t[SVcaller]\n\tDELLY:\n\tDellyVersion:\n\tBCFTOOLS:\n\t#### Path to hg19 Referece Fasta file ###\n\t[ReferenceFasta]\n\tREFFASTA:\n\t#### Path to file containing regions to exclude please follow Delly documentation for this ###\n\t[ExcludeRegion]\n\tEXREGIONS:\n\t#### Path to file containing regions to where lenient threshold will be used; and file containing genes to keep ###\n\t[HotSpotRegions]\n\tHotspotFile:\n\tGenesToKeep:\n\t#### Path to file containing regions/genes to filter ###\n\t[BlackListRegions]\n\tBlackListFile:\n\tBlackListGenes:\n\t#### Path to samtools executable ###\n\t[SAMTOOLS]\n\tSAMTOOLS:\n\t#### Path to iAnnotateSV.py and all its required files, please follow iAnnotateSV documentation ###\n\t[iAnnotateSV]\n\tANNOSV:\n\tGENOMEBUILD:\n\tDISTANCE:\n\tCANONICALTRANSCRIPTFILE:\n\tUNIPROTFILE:\n\tCosmicCensus:\n\tCosmicFusionCounts:\n\tRepeatRegionAnnotation:\n\tDGvAnnotations:\n\t#### TargetSeqView Parameters ###\n\t[TargetSeqView]\n\tCalculateConfidenceScore:\n\tGENOMEBUILD:\n\tReadLength:\n\t#### Parameters to run Delly ###\n\t[ParametersToRunDelly]\n\tMAPQ: 20\n\tNumberOfProcessors: 4\n\t[ParametersToFilterDellyResults]\n\t####Case Allele Fraction Hotspot####\n\tCaseAltFreqHotspot: 0.05\n\t####Total Case Coverage Hotspot#####\n\tCaseCoverageHotspot = 5\n\t####Control Allele Fraction Hotspot####\n\tControlAltFreqHotspot = 0\n\t####Case Allele Fraction####\n\tCaseAltFreq: 0.10\n\t####Total Case Coverage#####\n\tCaseCoverage = 10\n\t####Control Allele Fraction####\n\tControlAltFreq = 0\n\t###Overall Supporting Read-pairs ###\n\tOverallSupportingReads: 5\n\t###Overall Supporting Read-pairs Hotspot ###\n\tOverallSupportingReadsHotspot: 3\n\t###Overall Supporting splitreads ###\n\tOverallSupportingSplitReads: 0\n\t###Overall Supporting splitreads Hotspot ###\n\tOverallSupportingSplitReadsHotspot: 0\n\t###Case Supporting Read-pairs ###\n\tCaseSupportingReads: 2\n\t###Case Supporting splitreads ###\n\tCaseSupportingSplitReads: 0\n\t###Case Supporting Read-pairs Hotspot ###\n\tCaseSupportingReadsHotspot: 1\n\t###Case Supporting splitreads Hotspot ###\n\tCaseSupportingSplitReadsHotspot: 0\n\t###Control Supporting Read-pairs ###\n\tControlSupportingReads: 3\n\t###Control Supporting Read-pairs Hotspot ###\n\tControlSupportingReadsHotspot: 3\n\t###Control Supporting splitreads ###\n\tControlSupportingSplitReads: 3\n\t###Control Supporting splitreads Hotspot ###\n\tControlSupportingSplitReadsHotspot: 3\n\t###Length of Structural Variant###\n\tLengthOfSV: 500\n\t###Overall Mapping Quality Threshold###\n\tOverallMapq: 20\n\t###Overall Mapping Quality Threshold Hotspot###\n\tOverallMapqHotspot: 5\n\n\n\nQuick Usage\n===========\n\n.. code-block:: sh\n\n\tpython iCallSV.py -sc /path/to/template.ini -abam /path/to/casebamFile -bbam /path/to/controlbamFile -aId caseID -bId controlId -o /path/to/output/directory -op prefix_for_the_output_files\n\n\n.. code-block:: sh\n\n\t> python iCallSV.py -h\n\n\tusage: iCallSV.py [-h] [-v] [-V] -sc config.ini -abam caseBAMFile.bam -bbam\n\t                  controlBAMFile.bam -aId caseID -bId controlID -o\n\t                  /somepath/output -op TumorID\n\n\tiCallSV.iCallSV -- wrapper to run iCallSV package\n\n\t  Created by Ronak H Shah on 2015-03-30.\n\t  Copyright 2015-2016 Ronak H Shah. All rights reserved.\n\n\t  Licensed under the Apache License 2.0\n\t  http://www.apache.org/licenses/LICENSE-2.0\n\n\t  Distributed on an \"AS IS\" basis without warranties\n\t  or conditions of any kind, either express or implied.\n\n\tUSAGE\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -v, --verbose         set verbosity level [default: True]\n\t  -V, --version         show program's version number and exit\n\t  -sc config.ini, --svConfig config.ini\n\t                        Full path to the structural variant configuration\n\t  -abam caseBAMFile.bam, --caseBam caseBAMFile.bam\n\t                        Full path to the case bam file\n\t  -bbam controlBAMFile.bam, --controlBam controlBAMFile.bam\n\t                        Full path to the control bam file\n\t  -aId caseID, --caseId caseID\n\t                        Id of the case to be analyzed, this will be the sub-\n\t                        folder\n\t  -bId controlID, --controlId controlID\n\t                        Id of the control to be used, this will be used for\n\t                        filtering variants\n\t  -o /somepath/output, --outDir /somepath/output\n\t                        Full Path to the output dir.\n\t  -op TumorID, --outPrefix TumorID\n\t                        Id of the Tumor bam file which will be used as the\n\t                        prefix for output files\n\nRunning on SGE or LSF\n=====================\n\n.. sidebar:: Note:\n\n\tFor both SGE and LSF you need to provide total number of cores based on the number of threads you have assinged to delly installation using **OMP_NUM_THREADS**. \n\n.. sidebar:: Note:\n\n\tFor example: if you set **OMP_NUM_THREADS** as `export OMP_NUM_THREADS=3` then you need to set total number of cores to be 13 (12 + 1 extra as buffer) so for each of the Delly program it utilizes 3 cores. Here I use pythons multiprocessing module to launch delly, so all four programs would be launch as seprate process utilizing number of threads given to them but setting the **OMP_NUM_THREADS**\n\nSGE\n---\n\n.. code-block:: sh\n\n\tqsub -q some.q -N iCallSV_JobName -o iCallSV.stdout -e iCallSV.stderr -V -l h_vmem=6G,virtual_free=6G -pe smp 13 -wd /some/path/to/working/dir -sync y  -b y python iCallSV.py -sc template.ini -bbam control.bam -abam case.bam -aId caseID -bId controlID -op outputPrefix -o  /some/path/to/output/dir -v \n\nLSF\n---\n\n.. code-block:: sh\n\n\tbsub -q some.q -J iCallSV_JobName -o iCallSV.stdout -e iCallSV.stderr -We 24:00 -R \"rusage[mem=20]\" -M 30 -n 13 -cwd /some/path/to/working/dir \"python iCallSV.py -sc template.ini -bbam control.bam -abam case.bam -aId caseID -bId controlID -op outputPrefix -o  /some/path/to/output/dir -v\"\n\n\nUtilities\n=========\n\nRunning iCallSV on MSK-IMPACT Pools\n-----------------------------------\n\n**This is only for MSK-IMPACT internal samples**\n\n.. code-block:: sh\n\n\t> python iCallSV_dmp_wrapper.py -h\n\n\tusage: iCallSV_dmp_wrapper.py [options]\n\n\tRun iCallSV on selected pools using MSK data\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -fl folders.fof, --folderList folders.fof\n\t                        Full path folders file of files.\n\t  -qc /some/path/qcLocation, --qcLocation /some/path/qcLocation\n\t                        Full path qc files.\n\t  -b /some/path/bamlocation, --bamLocation /some/path/bamlocation\n\t                        Full path bam files.\n\t  -P /somepath/python, --python /somepath/python\n\t                        Full path Pyhton executables.\n\t  -icsv /somepath/iCallSV.py, --iCallSV /somepath/iCallSV.py\n\t                        Full path iCallSV.py executables.\n\t  -conf /somepath/template.ini, --iCallSVconf /somepath/template.ini\n\t                        Full path configuration file to run iCallSV\n\t  -q all.q or clin.q, --queue all.q or clin.q\n\t                        Name of the SGE queue\n\t  -qsub /somepath/qsub, --qsubPath /somepath/qsub\n\t                        Full Path to the qsub executables of SGE.\n\t  -t 5, --threads 5     Number of Threads to be used to run iCallSV\n\t  -v, --verbose         make lots of noise [default]\n\t  -o /somepath/output, --outDir /somepath/output\n\t                        Full Path to the output dir.\n\t  -of outputfile.txt, --outDir outputfile.txt\n\t\t\t\t\t  \t    Name of the final output file.\n\n\nTaking the iCallSV and chechking for processed transcript/cDNA in samples\n-------------------------------------------------------------------------\n\n.. code-block:: sh\n\n\t> python check_cDNA_contamination.py -h\n\tusage: check_cDNA_contamination.py [options]\n\n\tCalculate cDNA contamination per sample based of the Structural Variants\n\tPipeline result\n\n\toptional arguments:\n\t  -h, --help            show this help message and exit\n\t  -v, --verbose         make lots of noise [default]\n\t  -s SVfile.txt, --svFile SVfile.txt\n\t                        Location of the structural variant file to be used\n\t  -o cDNA_contamination, --outputFileName cDNA_contamination\n\t                        Full path name for the output file\n\n\n\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/rhshah/iCallSV/tarball/0.0.7", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rhshah/iCallSV", "keywords": "", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "iCallSV", "package_url": "https://pypi.org/project/iCallSV/", "platform": "any", "project_url": "https://pypi.org/project/iCallSV/", "project_urls": {"Download": "https://github.com/rhshah/iCallSV/tarball/0.0.7", "Homepage": "https://github.com/rhshah/iCallSV"}, "release_url": "https://pypi.org/project/iCallSV/0.0.7/", "requires_dist": ["pyvcf (==0.6.7)", "biopython (==1.65)", "coloredlogs (==5.2)", "pandas (==0.16.2)", "pysam (==0.8.4)"], "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "summary": "The module helps to call structural variants using NGS data set on human.", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"icallsv-structural-aberration-detection-from-ngs-datasets\">\n<h2>iCallSV: Structural Aberration Detection from NGS datasets</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th><td>Ronak H Shah</td>\n</tr>\n<tr><th>Contact:</th><td><a href=\"mailto:rons.shah%40gmail.com\">rons<span>.</span>shah<span>@</span>gmail<span>.</span>com</a></td>\n</tr>\n<tr><th>Source code:</th><td><a href=\"http://github.com/rhshah/iCallSV\" rel=\"nofollow\">http://github.com/rhshah/iCallSV</a></td>\n</tr>\n<tr><th>Wiki:</th><td><a href=\"http://icallsv.readthedocs.io/en/latest/\" rel=\"nofollow\">http://icallsv.readthedocs.io/en/latest/</a></td>\n</tr>\n<tr><th>License:</th><td><a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">Apache License 2.0</a></td>\n</tr>\n</tbody>\n</table>\n<a href=\"https://landscape.io/github/rhshah/iCallSV/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af04909836e83b724c281658b0e1c5661d3f6e2f/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f7268736861682f6943616c6c53562f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://doi.org/10.5281/zenodo.184864\" rel=\"nofollow\"><img alt=\"https://zenodo.org/badge/DOI/10.5281/zenodo.184864.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02aa071b2ff28b75bad25d3c8f065cd0d3f3a7d0/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e3138343836342e737667\"></a>\n<a href=\"https://codecov.io/gh/rhshah/iCallSV\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/rhshah/iCallSV/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6272227bf6cbb1897ecb9dc1b0e888fcf851ba99/68747470733a2f2f636f6465636f762e696f2f67682f7268736861682f6943616c6c53562f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<p>iCallSV is a Python library and command-line software toolkit to call structural aberrations from Next Generation DNA sequencing data. Behind the scenes it uses Delly2 to do structural variant calling. It is designed for use with hybrid capture, including both whole-exome and custom target panels, and\nshort-read sequencing platforms such as Illumina.</p>\n<p>The filtering process can be observed here:  <a href=\"https://www.draw.io/?lightbox=1&amp;highlight=0000ff&amp;edit=_blank&amp;layers=1&amp;nav=1&amp;title=iCallSV_Filters.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D0Bwn1ij1qNCi_cE4xOW1NS0JJaTg%26export%3Ddownload\" rel=\"nofollow\">Workflow</a></p>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>We are in the process of publishing a manuscript describing iCallSV as part of the Structural Variant Detection framework.\nIf you use this software in a publication, for now, please cite our website <a href=\"http://github.com/rhshah/iCallSV\" rel=\"nofollow\">iCallSV</a>.</p>\n</div>\n<div id=\"note\">\n<h2>Note</h2>\n<p>For some reason docstrings is not shown by <a href=\"https:read-the-docs.readthedocs.io\" rel=\"nofollow\">Read The Docs</a></p>\n<p>So please use these url from <a href=\"https:github.com\" rel=\"nofollow\">Github</a> with <a href=\"https://htmlpreview.github.io/\" rel=\"nofollow\">Html Preview</a> for each module information:</p>\n<p><a href=\"https://htmlpreview.github.io/?https://raw.githubusercontent.com/rhshah/iCallSV/master/docs/_build/html/iCallSV.html\" rel=\"nofollow\">Per Module Info</a></p>\n</div>\n<div id=\"required-packages\">\n<h2>Required Packages</h2>\n<p>We require that you install:</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>pandas:</th><td><a href=\"http://pandas.pydata.org/\" rel=\"nofollow\">v0.16.2</a></td>\n</tr>\n<tr><th>biopython:</th><td><a href=\"http://biopython.org/wiki/Main_Page\" rel=\"nofollow\">v1.65</a></td>\n</tr>\n<tr><th>pysam:</th><td><a href=\"https://pypi.python.org/pypi/pysam\" rel=\"nofollow\">v0.8.4</a></td>\n</tr>\n<tr><th>pyvcf:</th><td><a href=\"https://pypi.python.org/pypi/PyVCF\" rel=\"nofollow\">0.6.7</a></td>\n</tr>\n<tr><th>Delly:</th><td><a href=\"https://github.com/tobiasrausch/delly\" rel=\"nofollow\">v0.7.5</a></td>\n</tr>\n<tr><th>targetSeqView:</th><td><a href=\"https://github.com/Eitan177/targetSeqView\" rel=\"nofollow\">master</a></td>\n</tr>\n<tr><th>iAnnotateSV:</th><td><a href=\"https://github.com/rhshah/iAnnotateSV/tree/1.0.5\" rel=\"nofollow\">v1.0.6</a></td>\n</tr>\n<tr><th>coloredlogs:</th><td><a href=\"https://pypi.python.org/pypi/coloredlogs\" rel=\"nofollow\">v5.2</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"required-data-files\">\n<h2>Required Data Files</h2>\n<p>This files are given in the <tt>data</tt> folder inside iCallSV.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>BlackListFile:</th><td><p>(blacklist.txt) Tab-delimited file wihout header having black listed regions in order:</p>\n<blockquote>\n<p><strong>chromosome 1, breakpoint 1, chromosome 2, breakpoint 2</strong></p>\n</blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Example:</th><td>7       140498077       5       175998094</td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr><th>BlackListGenes:</th><td><p>(blacklistgenes.txt) Gene listed one per line wihout header that are to be removed</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Example:</th><td><p>LINC00486</p>\n<p>CNOT4</p>\n</td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr><th>HotspotFile:</th><td><p>(hotspotgenes.txt) Tab-delimited file wihout header having hotspot regions in order:</p>\n<blockquote>\n<p><strong>chromosome, start, end, name</strong></p>\n</blockquote>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Example:</th><td>2       29416089        30143525        ALK</td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n<tr><th>GenesToKeep:</th><td><p>(genesToInclude.txt) Gene listed one per line wihout header that are to be kept</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Example:</th><td><p>ALK</p>\n<p>BRAF</p>\n</td>\n</tr>\n</tbody>\n</table>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"configuration-file-format\">\n<h2>Configuration File Format</h2>\n<pre><span class=\"c1\">#~~~Template configuration file to run iCallSV~~~#</span>\n<span class=\"c1\">#### Path to python executable ###</span>\n<span class=\"k\">[Python]</span>\n<span class=\"na\">PYTHON:</span>\n<span class=\"c1\">#### Path to R executable and R Lib ###</span>\n<span class=\"k\">[R]</span>\n<span class=\"na\">RHOME:</span>\n<span class=\"na\">RLIB:</span>\n<span class=\"c1\">#### Path to delly, bcftools executables and Version of delly (supports only 0.7.3)###</span>\n<span class=\"k\">[SVcaller]</span>\n<span class=\"na\">DELLY:</span>\n<span class=\"na\">DellyVersion:</span>\n<span class=\"na\">BCFTOOLS:</span>\n<span class=\"c1\">#### Path to hg19 Referece Fasta file ###</span>\n<span class=\"k\">[ReferenceFasta]</span>\n<span class=\"na\">REFFASTA:</span>\n<span class=\"c1\">#### Path to file containing regions to exclude please follow Delly documentation for this ###</span>\n<span class=\"k\">[ExcludeRegion]</span>\n<span class=\"na\">EXREGIONS:</span>\n<span class=\"c1\">#### Path to file containing regions to where lenient threshold will be used; and file containing genes to keep ###</span>\n<span class=\"k\">[HotSpotRegions]</span>\n<span class=\"na\">HotspotFile:</span>\n<span class=\"na\">GenesToKeep:</span>\n<span class=\"c1\">#### Path to file containing regions/genes to filter ###</span>\n<span class=\"k\">[BlackListRegions]</span>\n<span class=\"na\">BlackListFile:</span>\n<span class=\"na\">BlackListGenes:</span>\n<span class=\"c1\">#### Path to samtools executable ###</span>\n<span class=\"k\">[SAMTOOLS]</span>\n<span class=\"na\">SAMTOOLS:</span>\n<span class=\"c1\">#### Path to iAnnotateSV.py and all its required files, please follow iAnnotateSV documentation ###</span>\n<span class=\"k\">[iAnnotateSV]</span>\n<span class=\"na\">ANNOSV:</span>\n<span class=\"na\">GENOMEBUILD:</span>\n<span class=\"na\">DISTANCE:</span>\n<span class=\"na\">CANONICALTRANSCRIPTFILE:</span>\n<span class=\"na\">UNIPROTFILE:</span>\n<span class=\"na\">CosmicCensus:</span>\n<span class=\"na\">CosmicFusionCounts:</span>\n<span class=\"na\">RepeatRegionAnnotation:</span>\n<span class=\"na\">DGvAnnotations:</span>\n<span class=\"c1\">#### TargetSeqView Parameters ###</span>\n<span class=\"k\">[TargetSeqView]</span>\n<span class=\"na\">CalculateConfidenceScore:</span>\n<span class=\"na\">GENOMEBUILD:</span>\n<span class=\"na\">ReadLength:</span>\n<span class=\"c1\">#### Parameters to run Delly ###</span>\n<span class=\"k\">[ParametersToRunDelly]</span>\n<span class=\"na\">MAPQ: 20</span>\n<span class=\"na\">NumberOfProcessors: 4</span>\n<span class=\"k\">[ParametersToFilterDellyResults]</span>\n<span class=\"c1\">####Case Allele Fraction Hotspot####</span>\n<span class=\"na\">CaseAltFreqHotspot: 0.05</span>\n<span class=\"c1\">####Total Case Coverage Hotspot#####</span>\n<span class=\"na\">CaseCoverageHotspot</span> <span class=\"o\">=</span> <span class=\"s\">5</span>\n<span class=\"c1\">####Control Allele Fraction Hotspot####</span>\n<span class=\"na\">ControlAltFreqHotspot</span> <span class=\"o\">=</span> <span class=\"s\">0</span>\n<span class=\"c1\">####Case Allele Fraction####</span>\n<span class=\"na\">CaseAltFreq: 0.10</span>\n<span class=\"c1\">####Total Case Coverage#####</span>\n<span class=\"na\">CaseCoverage</span> <span class=\"o\">=</span> <span class=\"s\">10</span>\n<span class=\"c1\">####Control Allele Fraction####</span>\n<span class=\"na\">ControlAltFreq</span> <span class=\"o\">=</span> <span class=\"s\">0</span>\n<span class=\"c1\">###Overall Supporting Read-pairs ###</span>\n<span class=\"na\">OverallSupportingReads: 5</span>\n<span class=\"c1\">###Overall Supporting Read-pairs Hotspot ###</span>\n<span class=\"na\">OverallSupportingReadsHotspot: 3</span>\n<span class=\"c1\">###Overall Supporting splitreads ###</span>\n<span class=\"na\">OverallSupportingSplitReads: 0</span>\n<span class=\"c1\">###Overall Supporting splitreads Hotspot ###</span>\n<span class=\"na\">OverallSupportingSplitReadsHotspot: 0</span>\n<span class=\"c1\">###Case Supporting Read-pairs ###</span>\n<span class=\"na\">CaseSupportingReads: 2</span>\n<span class=\"c1\">###Case Supporting splitreads ###</span>\n<span class=\"na\">CaseSupportingSplitReads: 0</span>\n<span class=\"c1\">###Case Supporting Read-pairs Hotspot ###</span>\n<span class=\"na\">CaseSupportingReadsHotspot: 1</span>\n<span class=\"c1\">###Case Supporting splitreads Hotspot ###</span>\n<span class=\"na\">CaseSupportingSplitReadsHotspot: 0</span>\n<span class=\"c1\">###Control Supporting Read-pairs ###</span>\n<span class=\"na\">ControlSupportingReads: 3</span>\n<span class=\"c1\">###Control Supporting Read-pairs Hotspot ###</span>\n<span class=\"na\">ControlSupportingReadsHotspot: 3</span>\n<span class=\"c1\">###Control Supporting splitreads ###</span>\n<span class=\"na\">ControlSupportingSplitReads: 3</span>\n<span class=\"c1\">###Control Supporting splitreads Hotspot ###</span>\n<span class=\"na\">ControlSupportingSplitReadsHotspot: 3</span>\n<span class=\"c1\">###Length of Structural Variant###</span>\n<span class=\"na\">LengthOfSV: 500</span>\n<span class=\"c1\">###Overall Mapping Quality Threshold###</span>\n<span class=\"na\">OverallMapq: 20</span>\n<span class=\"c1\">###Overall Mapping Quality Threshold Hotspot###</span>\n<span class=\"na\">OverallMapqHotspot: 5</span>\n</pre>\n</div>\n<div id=\"quick-usage\">\n<h2>Quick Usage</h2>\n<pre>python iCallSV.py -sc /path/to/template.ini -abam /path/to/casebamFile -bbam /path/to/controlbamFile -aId caseID -bId controlId -o /path/to/output/directory -op prefix_for_the_output_files\n</pre>\n<pre>&gt; python iCallSV.py -h\n\nusage: iCallSV.py <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"o\">]</span> <span class=\"o\">[</span>-V<span class=\"o\">]</span> -sc config.ini -abam caseBAMFile.bam -bbam\n                  controlBAMFile.bam -aId caseID -bId controlID -o\n                  /somepath/output -op TumorID\n\niCallSV.iCallSV -- wrapper to run iCallSV package\n\n  Created by Ronak H Shah on <span class=\"m\">2015</span>-03-30.\n  Copyright <span class=\"m\">2015</span>-2016 Ronak H Shah. All rights reserved.\n\n  Licensed under the Apache License <span class=\"m\">2</span>.0\n  http://www.apache.org/licenses/LICENSE-2.0\n\n  Distributed on an <span class=\"s2\">\"AS IS\"</span> basis without warranties\n  or conditions of any kind, either express or implied.\n\nUSAGE\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -v, --verbose         <span class=\"nb\">set</span> verbosity level <span class=\"o\">[</span>default: True<span class=\"o\">]</span>\n  -V, --version         show program<span class=\"err\">'</span>s version number and <span class=\"nb\">exit</span>\n  -sc config.ini, --svConfig config.ini\n                        Full path to the structural variant configuration\n  -abam caseBAMFile.bam, --caseBam caseBAMFile.bam\n                        Full path to the <span class=\"k\">case</span> bam file\n  -bbam controlBAMFile.bam, --controlBam controlBAMFile.bam\n                        Full path to the control bam file\n  -aId caseID, --caseId caseID\n                        Id of the <span class=\"k\">case</span> to be analyzed, this will be the sub-\n                        folder\n  -bId controlID, --controlId controlID\n                        Id of the control to be used, this will be used <span class=\"k\">for</span>\n                        filtering variants\n  -o /somepath/output, --outDir /somepath/output\n                        Full Path to the output dir.\n  -op TumorID, --outPrefix TumorID\n                        Id of the Tumor bam file which will be used as the\n                        prefix <span class=\"k\">for</span> output files\n</pre>\n</div>\n<div id=\"running-on-sge-or-lsf\">\n<h2>Running on SGE or LSF</h2>\n<div>\n<p>Note:</p>\n<p>For both SGE and LSF you need to provide total number of cores based on the number of threads you have assinged to delly installation using <strong>OMP_NUM_THREADS</strong>.</p>\n</div>\n<div>\n<p>Note:</p>\n<p>For example: if you set <strong>OMP_NUM_THREADS</strong> as <cite>export OMP_NUM_THREADS=3</cite> then you need to set total number of cores to be 13 (12 + 1 extra as buffer) so for each of the Delly program it utilizes 3 cores. Here I use pythons multiprocessing module to launch delly, so all four programs would be launch as seprate process utilizing number of threads given to them but setting the <strong>OMP_NUM_THREADS</strong></p>\n</div>\n<div id=\"sge\">\n<h3>SGE</h3>\n<pre>qsub -q some.q -N iCallSV_JobName -o iCallSV.stdout -e iCallSV.stderr -V -l <span class=\"nv\">h_vmem</span><span class=\"o\">=</span>6G,virtual_free<span class=\"o\">=</span>6G -pe smp <span class=\"m\">13</span> -wd /some/path/to/working/dir -sync y  -b y python iCallSV.py -sc template.ini -bbam control.bam -abam <span class=\"k\">case</span>.bam -aId caseID -bId controlID -op outputPrefix -o  /some/path/to/output/dir -v\n</pre>\n</div>\n<div id=\"lsf\">\n<h3>LSF</h3>\n<pre>bsub -q some.q -J iCallSV_JobName -o iCallSV.stdout -e iCallSV.stderr -We <span class=\"m\">24</span>:00 -R <span class=\"s2\">\"rusage[mem=20]\"</span> -M <span class=\"m\">30</span> -n <span class=\"m\">13</span> -cwd /some/path/to/working/dir <span class=\"s2\">\"python iCallSV.py -sc template.ini -bbam control.bam -abam case.bam -aId caseID -bId controlID -op outputPrefix -o  /some/path/to/output/dir -v\"</span>\n</pre>\n</div>\n</div>\n<div id=\"utilities\">\n<h2>Utilities</h2>\n<div id=\"running-icallsv-on-msk-impact-pools\">\n<h3>Running iCallSV on MSK-IMPACT Pools</h3>\n<p><strong>This is only for MSK-IMPACT internal samples</strong></p>\n<pre>&gt; python iCallSV_dmp_wrapper.py -h\n\nusage: iCallSV_dmp_wrapper.py <span class=\"o\">[</span>options<span class=\"o\">]</span>\n\nRun iCallSV on selected pools using MSK data\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -fl folders.fof, --folderList folders.fof\n                        Full path folders file of files.\n  -qc /some/path/qcLocation, --qcLocation /some/path/qcLocation\n                        Full path qc files.\n  -b /some/path/bamlocation, --bamLocation /some/path/bamlocation\n                        Full path bam files.\n  -P /somepath/python, --python /somepath/python\n                        Full path Pyhton executables.\n  -icsv /somepath/iCallSV.py, --iCallSV /somepath/iCallSV.py\n                        Full path iCallSV.py executables.\n  -conf /somepath/template.ini, --iCallSVconf /somepath/template.ini\n                        Full path configuration file to run iCallSV\n  -q all.q or clin.q, --queue all.q or clin.q\n                        Name of the SGE queue\n  -qsub /somepath/qsub, --qsubPath /somepath/qsub\n                        Full Path to the qsub executables of SGE.\n  -t <span class=\"m\">5</span>, --threads <span class=\"m\">5</span>     Number of Threads to be used to run iCallSV\n  -v, --verbose         make lots of noise <span class=\"o\">[</span>default<span class=\"o\">]</span>\n  -o /somepath/output, --outDir /somepath/output\n                        Full Path to the output dir.\n  -of outputfile.txt, --outDir outputfile.txt\n                                            Name of the final output file.\n</pre>\n</div>\n<div id=\"taking-the-icallsv-and-chechking-for-processed-transcript-cdna-in-samples\">\n<h3>Taking the iCallSV and chechking for processed transcript/cDNA in samples</h3>\n<pre>&gt; python check_cDNA_contamination.py -h\nusage: check_cDNA_contamination.py <span class=\"o\">[</span>options<span class=\"o\">]</span>\n\nCalculate cDNA contamination per sample based of the Structural Variants\nPipeline result\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -v, --verbose         make lots of noise <span class=\"o\">[</span>default<span class=\"o\">]</span>\n  -s SVfile.txt, --svFile SVfile.txt\n                        Location of the structural variant file to be used\n  -o cDNA_contamination, --outputFileName cDNA_contamination\n                        Full path name <span class=\"k\">for</span> the output file\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3107040, "releases": {"0.0.7": [{"comment_text": "", "digests": {"md5": "d39e57828a58dc83916b4d2829cec569", "sha256": "bf56ad5842252d37bfac4c5c44551e4e76f47c6c57ea8878355f5e60a15eec6b"}, "downloads": -1, "filename": "iCallSV-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d39e57828a58dc83916b4d2829cec569", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 59346, "upload_time": "2017-08-18T19:12:52", "upload_time_iso_8601": "2017-08-18T19:12:52.139021Z", "url": "https://files.pythonhosted.org/packages/39/19/c11fe5d0057ee8d739d60234e03fe069cbea3e894cd3cac7c523d561c79e/iCallSV-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1873020a39a8311213649a601e5e33f9", "sha256": "9b2c6cde59a88883d69261c61d8c06a142918104e5d2dad02bb60826aae49540"}, "downloads": -1, "filename": "iCallSV-0.0.7.tar.gz", "has_sig": false, "md5_digest": "1873020a39a8311213649a601e5e33f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 489821, "upload_time": "2017-08-18T19:12:54", "upload_time_iso_8601": "2017-08-18T19:12:54.176009Z", "url": "https://files.pythonhosted.org/packages/a4/68/1bc357e5cc1fdfb9b74079df05a60ccc4bcee24e7f440abf4b47c49a4007/iCallSV-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d39e57828a58dc83916b4d2829cec569", "sha256": "bf56ad5842252d37bfac4c5c44551e4e76f47c6c57ea8878355f5e60a15eec6b"}, "downloads": -1, "filename": "iCallSV-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d39e57828a58dc83916b4d2829cec569", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 59346, "upload_time": "2017-08-18T19:12:52", "upload_time_iso_8601": "2017-08-18T19:12:52.139021Z", "url": "https://files.pythonhosted.org/packages/39/19/c11fe5d0057ee8d739d60234e03fe069cbea3e894cd3cac7c523d561c79e/iCallSV-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1873020a39a8311213649a601e5e33f9", "sha256": "9b2c6cde59a88883d69261c61d8c06a142918104e5d2dad02bb60826aae49540"}, "downloads": -1, "filename": "iCallSV-0.0.7.tar.gz", "has_sig": false, "md5_digest": "1873020a39a8311213649a601e5e33f9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4", "size": 489821, "upload_time": "2017-08-18T19:12:54", "upload_time_iso_8601": "2017-08-18T19:12:54.176009Z", "url": "https://files.pythonhosted.org/packages/a4/68/1bc357e5cc1fdfb9b74079df05a60ccc4bcee24e7f440abf4b47c49a4007/iCallSV-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:09 2020"}