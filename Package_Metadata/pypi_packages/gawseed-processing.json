{"info": {"author": "Wes Hardaker and USC/ISI", "author_email": "opensource@hardakers.net", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Overview\n\nThe GAWSEED processing system allows easy statistical analysis of\ntime-series data via simple YAML configuration files.  This\narchitecture:\n\n+ Collect information from data sources\n+ Transform it to a standardized tab-separated format (called [FSDB])\n+ Temporally bin, count and tabulate features within the dataset, producing a triple indexed output\n+ Manipulate individual results using aggregation functions\n+ Use extensible mathematical functions to combine multi-column datasets into final temporal waveform that are suitable for feature detection\n+ Perform simple, distributed edge-detection to identify signals of interest.\n\n# Architecture\n\n![Architecture Image](./images/architecture.png)\n\n## Incoming Data Source and Filter\n\n## Data Formatter\n\n## Feature Counter\n\nThe *Feature Counter* component is responsible for converting all\ntimeseries records into ``time bins'' and simultaneously counting or\nquantifying the data.  The output records will consist of named\n*index* keywords extracted from the YAML configuration, and a\n*key* and *subkey* value that is extracted from the data\nitself (if the second subkey column is not needed, an empty string is\ntypically used).\n\nExample feature counter yaml config:\n\n\tbinSize: 5\n\ttimeColumn: time\n\tfeatureCounter:\n\t  outputs:\n\t    http_host_names:\n\t      function: gawseed.algorithm.generic.re_match_one\n\t      arguments: ['col(dnsname)', '.*https?://(^[/]+)/.*']\n\t    http_type:\n\t      function: gawseed.algorithm.generic.re_match_one\n\t      arguments: ['col(dnsname)', '(https:|http:)']\n\n## Aggregator\n\nThe aggregator component of the GAWSEED architecture is responsible\nfor performing any calculations that require a complete dataset for a\ngiven combination of the set *<timebin, index, key>*.  Summing\nvalues from distributed operations and counting of unique subkeys are\nthe most common computations that occur at this step.\n\nAn example YAML configuration for this step in the data architecture\nis shown in below.  This outputs both the total counts of the things\ncounted in the featureCounter step(s), and counts the number of unique\n*http_host_names* values seen as well.\n\nExample YAML configuration for the aggregator:\n\n\taggregator:\n\t  aggregators:\n\t    - function: summer\n\t    - function: unique\n\t      arguments: ['http_host_names', 'unique_http_host_names']\n\n## Relationship Analyzer\n\nThe Relationship Analyzer is where any heavy final math is performed.\nFor example, in the example data in this document, we may want to\ncalculate the ``popularity'' of each discovered *http_host_names*.\nThe YAML configuration to do this is shown below:\n\n\trelationshipAnalysis:\n\t  outputs:\n\t    host_name_popularity_fraction:\n\t      function: fraction_otherindex_keyval\n\t      arguments:\n\t        - unique_http_host_names\n\t        - http_host_names\n\nNote that the Relationship Analyzer also pivots\nthe table back to a more normal looking table (at least for humans),\nas the distributed processing aspects of the calculations are now\nover; specifically, the previous index values are converted back into\ntable columns.\n\n## Edge Detection and Result Analysis\n\nTBD\n\n# Copyright\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gawseed/processing", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gawseed-processing", "package_url": "https://pypi.org/project/gawseed-processing/", "platform": "", "project_url": "https://pypi.org/project/gawseed-processing/", "project_urls": {"Homepage": "https://github.com/gawseed/processing"}, "release_url": "https://pypi.org/project/gawseed-processing/0.9.1/", "requires_dist": null, "requires_python": ">=3.0", "summary": "A data processing engine for statistically analyzing time series data", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Overview</h1>\n<p>The GAWSEED processing system allows easy statistical analysis of\ntime-series data via simple YAML configuration files.  This\narchitecture:</p>\n<ul>\n<li>Collect information from data sources</li>\n<li>Transform it to a standardized tab-separated format (called [FSDB])</li>\n<li>Temporally bin, count and tabulate features within the dataset, producing a triple indexed output</li>\n<li>Manipulate individual results using aggregation functions</li>\n<li>Use extensible mathematical functions to combine multi-column datasets into final temporal waveform that are suitable for feature detection</li>\n<li>Perform simple, distributed edge-detection to identify signals of interest.</li>\n</ul>\n<h1>Architecture</h1>\n<p><img alt=\"Architecture Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5173e1301412853fb8a6caa987a1af270efcfdd/2e2f696d616765732f6172636869746563747572652e706e67\"></p>\n<h2>Incoming Data Source and Filter</h2>\n<h2>Data Formatter</h2>\n<h2>Feature Counter</h2>\n<p>The <em>Feature Counter</em> component is responsible for converting all\ntimeseries records into ``time bins'' and simultaneously counting or\nquantifying the data.  The output records will consist of named\n<em>index</em> keywords extracted from the YAML configuration, and a\n<em>key</em> and <em>subkey</em> value that is extracted from the data\nitself (if the second subkey column is not needed, an empty string is\ntypically used).</p>\n<p>Example feature counter yaml config:</p>\n<pre><code>binSize: 5\ntimeColumn: time\nfeatureCounter:\n  outputs:\n    http_host_names:\n      function: gawseed.algorithm.generic.re_match_one\n      arguments: ['col(dnsname)', '.*https?://(^[/]+)/.*']\n    http_type:\n      function: gawseed.algorithm.generic.re_match_one\n      arguments: ['col(dnsname)', '(https:|http:)']\n</code></pre>\n<h2>Aggregator</h2>\n<p>The aggregator component of the GAWSEED architecture is responsible\nfor performing any calculations that require a complete dataset for a\ngiven combination of the set <em>&lt;timebin, index, key&gt;</em>.  Summing\nvalues from distributed operations and counting of unique subkeys are\nthe most common computations that occur at this step.</p>\n<p>An example YAML configuration for this step in the data architecture\nis shown in below.  This outputs both the total counts of the things\ncounted in the featureCounter step(s), and counts the number of unique\n<em>http_host_names</em> values seen as well.</p>\n<p>Example YAML configuration for the aggregator:</p>\n<pre><code>aggregator:\n  aggregators:\n    - function: summer\n    - function: unique\n      arguments: ['http_host_names', 'unique_http_host_names']\n</code></pre>\n<h2>Relationship Analyzer</h2>\n<p>The Relationship Analyzer is where any heavy final math is performed.\nFor example, in the example data in this document, we may want to\ncalculate the ``popularity'' of each discovered <em>http_host_names</em>.\nThe YAML configuration to do this is shown below:</p>\n<pre><code>relationshipAnalysis:\n  outputs:\n    host_name_popularity_fraction:\n      function: fraction_otherindex_keyval\n      arguments:\n        - unique_http_host_names\n        - http_host_names\n</code></pre>\n<p>Note that the Relationship Analyzer also pivots\nthe table back to a more normal looking table (at least for humans),\nas the distributed processing aspects of the calculations are now\nover; specifically, the previous index values are converted back into\ntable columns.</p>\n<h2>Edge Detection and Result Analysis</h2>\n<p>TBD</p>\n<h1>Copyright</h1>\n\n          </div>"}, "last_serial": 6938905, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "638e14d92acf6db4155883aaa02b40a1", "sha256": "97b1639b559a091f18a2312cfcb3eb5a1127a02645967ea5bbbd684825b94fa5"}, "downloads": -1, "filename": "gawseed_processing-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "638e14d92acf6db4155883aaa02b40a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 67925, "upload_time": "2020-04-02T20:19:50", "upload_time_iso_8601": "2020-04-02T20:19:50.507881Z", "url": "https://files.pythonhosted.org/packages/9f/76/07d8a243fe1ef7c77929bf1b46222982516acb634cba6eaae9a35ba14559/gawseed_processing-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4990148b7a4bcce88fceb68535c52dd4", "sha256": "0d4457c103c9fa6a26e4a92b63758b9ba580800a7052b6d951b74adcf7b3cf42"}, "downloads": -1, "filename": "gawseed-processing-0.9.1.tar.gz", "has_sig": false, "md5_digest": "4990148b7a4bcce88fceb68535c52dd4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 30683, "upload_time": "2020-04-02T20:19:52", "upload_time_iso_8601": "2020-04-02T20:19:52.557086Z", "url": "https://files.pythonhosted.org/packages/ee/86/b5bc1e1d69f295665fae55eaf9bbec0b061a5e188f23a9e40ccfcdbee7dd/gawseed-processing-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "638e14d92acf6db4155883aaa02b40a1", "sha256": "97b1639b559a091f18a2312cfcb3eb5a1127a02645967ea5bbbd684825b94fa5"}, "downloads": -1, "filename": "gawseed_processing-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "638e14d92acf6db4155883aaa02b40a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.0", "size": 67925, "upload_time": "2020-04-02T20:19:50", "upload_time_iso_8601": "2020-04-02T20:19:50.507881Z", "url": "https://files.pythonhosted.org/packages/9f/76/07d8a243fe1ef7c77929bf1b46222982516acb634cba6eaae9a35ba14559/gawseed_processing-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4990148b7a4bcce88fceb68535c52dd4", "sha256": "0d4457c103c9fa6a26e4a92b63758b9ba580800a7052b6d951b74adcf7b3cf42"}, "downloads": -1, "filename": "gawseed-processing-0.9.1.tar.gz", "has_sig": false, "md5_digest": "4990148b7a4bcce88fceb68535c52dd4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.0", "size": 30683, "upload_time": "2020-04-02T20:19:52", "upload_time_iso_8601": "2020-04-02T20:19:52.557086Z", "url": "https://files.pythonhosted.org/packages/ee/86/b5bc1e1d69f295665fae55eaf9bbec0b061a5e188f23a9e40ccfcdbee7dd/gawseed-processing-0.9.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:58 2020"}