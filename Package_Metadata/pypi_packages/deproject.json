{"info": {"author": "Douglas Burke, Tom Aldcroft", "author_email": "dburke.gw@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Astronomy", "Topic :: Scientific/Engineering :: Physics"], "description": "Deproject\n=========\n\n``Deproject`` is a `Sherpa <https://sherpa.readthedocs.io/>`_ extension package\nto facilitate deprojection of two-dimensional annular X-ray spectra to recover\nthe three-dimensional source properties.  For typical thermal models this would\ninclude the radial temperature and density profiles. This basic method has been\nused extensively for X-ray cluster analysis and is the basis for the XSPEC\nmodel ``projct``.  The ``deproject`` module brings this functionality to\n*Sherpa* as a Python module that is straightforward to use and understand.\n\nThe basic physical assumption of ``deproject`` is that the extended source\nemissivity is constant and optically thin within spherical shells whose radii\ncorrespond to the annuli used to extract the specta.  Given this assumption one\nconstructs a model for each annular spectrum that is a linear volume-weighted\ncombination of shell models.\n\nVersion 0.2 of ``deproject`` is limited to circular annuli.\n\nFurther documentation is available at https://deproject.readthedocs.io/\n\nLicense\n-------\n\nThe ``deproject`` module is released under the\n`BSD 2-Clause license <https://choosealicense.com/licenses/bsd-2-clause/>`_,\navailable as the file ``LICENSE`` in the source distribution.\n\nRequirements\n------------\n\nThe installation assumes that you are installing ``deproject`` into\nthe `CIAO environment <http://cxc.harvard.edu/ciao/>`_ (CIAO 4.11 or\nlater), since this is the easiest way to get the XSPEC models along\nwith Sherpa. The `standalone Sherpa <https://sherpa.readthedocs.io/>`_\nversion can be used, but in this case you will need to `build Sherpa\nwith XSPEC support\n<https://sherpa.readthedocs.io/en/latest/install.html#xspec>`_.\n\nThe following Python packages are required:\n\n - sherpa\n - `Astropy <http://www.astropy.org/>`_ (restricted to version 3.0 when\n   using CIAO 4.11)\n - `SciPy <https://www.scipy.org/scipylib/>`_.\n\nInstallation\n------------\n\nThe ``deproject`` module should install with the following command\n(assuming CIAO 4.11 is already installed):\n\n  echo \"numpy==1.12.1\" > constraints.txt\n  pip install -c constraints.txt 'astropy<3.1' deproject\n\nExample\n-------\n\nIf you have a set of X-ray PHA spectra called src<n>.pi, where <n> is\nan integer representing the annulus number, and the files contain the\n``XFLT0001`` to ``XFLT0005`` header keywords used by the\n`XSPEC projct model <https://asd.gsfc.nasa.gov/XSPECwiki/projct_model>`_,\nthen a\n`Deproject object <https://deproject-test.readthedocs.io/en/latest/modules/api/deproject.deproject.Deproject.html#deproject.deproject.Deproject>`_\ncan be created using the\n`deproject_from_xflt <https://deproject-test.readthedocs.io/en/ciao-411/modules/api/deproject.deproject.deproject_from_xflt.html>`_\nhelper routine with the commands:\n\n  >>> from deproject import deproject_from_xflt\n  >>> from astropy import units as u\n  >>> dep = deproject_from_xflt('src*.pi', 0.492 * u.arcsec)\n\nwhere, in this example, the ``XFLT0001`` and ``XFLT0002`` keywords,\nwhich specify the inner and outer radii of the annulus, are in\nACIS pixels, and so need to be multiplied by 0.492 arcseconds to\nconvert to an angle (the second parameter).\n\nThis will automatically load the spectra into separate Sherpa datasets,\nwhich *can* be fitted individually, but it is generally easier to use\nthe object returned by ``deproject_from_xflt``. For instance, the\nfollowing will set the data range to be fit for *each* spectra and ensure\nthat the background is subtracted before fitting:\n\n  >>> dep.ignore(None, 0.5)\n  >>> dep.ignore(7.0, None)\n  >>> dep.subtract()\n\nSherpa functions are used to change the statistic and optimiser:\n\n  >>> from sherpa.astro import ui\n  >>> ui.set_stat('chi2xspecvar')\n  >>> ui.set_method('levmar')\n\nThe data can be fit, and errors estimated for all the parameter, using\nthe onion-skin deprojection approach, with the following commands:\n\n  >>> onion = dep.fit()\n  >>> errs = dep.conf()\n\nThe return value includes the density (and errors, if appropriate), as\nan `Astropy Quantity <http://docs.astropy.org/en/stable/units/>`_.\n\n  >>> print(onion['density'])\n  print(onion['density'])\n        density\n        1 / cm3\n  --------------------\n    0.1100953546292787\n   0.07736622021374819\n   0.04164827967805805\n   0.03630168106524076\n  0.025221797991301052\n  0.021845331641349316\n                   ...\n  0.012396857131392835\n   0.01336640115325031\n  0.012303975980575187\n  0.013631563529090736\n  0.013996131292837352\n  0.010843683594144967\n  0.023067220584935984\n  Length = 20 rows\n\nThe `on-line documentation <https://deproject.readthedocs.io/>`_\ncontains more information, including creating the ``Deproject`` object\ndirectly (without the need for the ``XFLTxxxx`` keywords).\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://deproject.readthedocs.io/", "keywords": "deprojection xray 3d 2d plasma Astrophysics onion", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "deproject", "package_url": "https://pypi.org/project/deproject/", "platform": "", "project_url": "https://pypi.org/project/deproject/", "project_urls": {"Documentation": "https://deproject.readthedocs.io/", "Homepage": "https://deproject.readthedocs.io/", "Issues": "https://github.com/sherpa-deproject/deproject/issues/", "Source Code": "https://github.com/sherpa-deproject/deproject/"}, "release_url": "https://pypi.org/project/deproject/0.2.0/", "requires_dist": ["sherpa", "astropy (<3.1)", "scipy"], "requires_python": "~=3.5", "summary": "Sherpa deprojection package (X-ray analysis of Galaxy Clusters, Groups, and Galaxies)", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>Deproject</tt> is a <a href=\"https://sherpa.readthedocs.io/\" rel=\"nofollow\">Sherpa</a> extension package\nto facilitate deprojection of two-dimensional annular X-ray spectra to recover\nthe three-dimensional source properties.  For typical thermal models this would\ninclude the radial temperature and density profiles. This basic method has been\nused extensively for X-ray cluster analysis and is the basis for the XSPEC\nmodel <tt>projct</tt>.  The <tt>deproject</tt> module brings this functionality to\n<em>Sherpa</em> as a Python module that is straightforward to use and understand.</p>\n<p>The basic physical assumption of <tt>deproject</tt> is that the extended source\nemissivity is constant and optically thin within spherical shells whose radii\ncorrespond to the annuli used to extract the specta.  Given this assumption one\nconstructs a model for each annular spectrum that is a linear volume-weighted\ncombination of shell models.</p>\n<p>Version 0.2 of <tt>deproject</tt> is limited to circular annuli.</p>\n<p>Further documentation is available at <a href=\"https://deproject.readthedocs.io/\" rel=\"nofollow\">https://deproject.readthedocs.io/</a></p>\n<div id=\"license\">\n<h2>License</h2>\n<p>The <tt>deproject</tt> module is released under the\n<a href=\"https://choosealicense.com/licenses/bsd-2-clause/\" rel=\"nofollow\">BSD 2-Clause license</a>,\navailable as the file <tt>LICENSE</tt> in the source distribution.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>The installation assumes that you are installing <tt>deproject</tt> into\nthe <a href=\"http://cxc.harvard.edu/ciao/\" rel=\"nofollow\">CIAO environment</a> (CIAO 4.11 or\nlater), since this is the easiest way to get the XSPEC models along\nwith Sherpa. The <a href=\"https://sherpa.readthedocs.io/\" rel=\"nofollow\">standalone Sherpa</a>\nversion can be used, but in this case you will need to <a href=\"https://sherpa.readthedocs.io/en/latest/install.html#xspec\" rel=\"nofollow\">build Sherpa\nwith XSPEC support</a>.</p>\n<p>The following Python packages are required:</p>\n<blockquote>\n<ul>\n<li>sherpa</li>\n<li><a href=\"http://www.astropy.org/\" rel=\"nofollow\">Astropy</a> (restricted to version 3.0 when\nusing CIAO 4.11)</li>\n<li><a href=\"https://www.scipy.org/scipylib/\" rel=\"nofollow\">SciPy</a>.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The <tt>deproject</tt> module should install with the following command\n(assuming CIAO 4.11 is already installed):</p>\n<blockquote>\necho \u201cnumpy==1.12.1\u201d &gt; constraints.txt\npip install -c constraints.txt \u2018astropy&lt;3.1\u2019 deproject</blockquote>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>If you have a set of X-ray PHA spectra called src&lt;n&gt;.pi, where &lt;n&gt; is\nan integer representing the annulus number, and the files contain the\n<tt>XFLT0001</tt> to <tt>XFLT0005</tt> header keywords used by the\n<a href=\"https://asd.gsfc.nasa.gov/XSPECwiki/projct_model\" rel=\"nofollow\">XSPEC projct model</a>,\nthen a\n<a href=\"https://deproject-test.readthedocs.io/en/latest/modules/api/deproject.deproject.Deproject.html#deproject.deproject.Deproject\" rel=\"nofollow\">Deproject object</a>\ncan be created using the\n<a href=\"https://deproject-test.readthedocs.io/en/ciao-411/modules/api/deproject.deproject.deproject_from_xflt.html\" rel=\"nofollow\">deproject_from_xflt</a>\nhelper routine with the commands:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from deproject import deproject_from_xflt\n&gt;&gt;&gt; from astropy import units as u\n&gt;&gt;&gt; dep = deproject_from_xflt('src*.pi', 0.492 * u.arcsec)\n</pre>\n</blockquote>\n<p>where, in this example, the <tt>XFLT0001</tt> and <tt>XFLT0002</tt> keywords,\nwhich specify the inner and outer radii of the annulus, are in\nACIS pixels, and so need to be multiplied by 0.492 arcseconds to\nconvert to an angle (the second parameter).</p>\n<p>This will automatically load the spectra into separate Sherpa datasets,\nwhich <em>can</em> be fitted individually, but it is generally easier to use\nthe object returned by <tt>deproject_from_xflt</tt>. For instance, the\nfollowing will set the data range to be fit for <em>each</em> spectra and ensure\nthat the background is subtracted before fitting:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; dep.ignore(None, 0.5)\n&gt;&gt;&gt; dep.ignore(7.0, None)\n&gt;&gt;&gt; dep.subtract()\n</pre>\n</blockquote>\n<p>Sherpa functions are used to change the statistic and optimiser:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from sherpa.astro import ui\n&gt;&gt;&gt; ui.set_stat('chi2xspecvar')\n&gt;&gt;&gt; ui.set_method('levmar')\n</pre>\n</blockquote>\n<p>The data can be fit, and errors estimated for all the parameter, using\nthe onion-skin deprojection approach, with the following commands:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; onion = dep.fit()\n&gt;&gt;&gt; errs = dep.conf()\n</pre>\n</blockquote>\n<p>The return value includes the density (and errors, if appropriate), as\nan <a href=\"http://docs.astropy.org/en/stable/units/\" rel=\"nofollow\">Astropy Quantity</a>.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print(onion['density'])\nprint(onion['density'])\n      density\n      1 / cm3\n--------------------\n  0.1100953546292787\n 0.07736622021374819\n 0.04164827967805805\n 0.03630168106524076\n0.025221797991301052\n0.021845331641349316\n                 ...\n0.012396857131392835\n 0.01336640115325031\n0.012303975980575187\n0.013631563529090736\n0.013996131292837352\n0.010843683594144967\n0.023067220584935984\nLength = 20 rows\n</pre>\n</blockquote>\n<p>The <a href=\"https://deproject.readthedocs.io/\" rel=\"nofollow\">on-line documentation</a>\ncontains more information, including creating the <tt>Deproject</tt> object\ndirectly (without the need for the <tt>XFLTxxxx</tt> keywords).</p>\n</div>\n\n          </div>"}, "last_serial": 5135855, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "b8f311eb6a17f35c2fe5280495605bb4", "sha256": "29dd51292b655f834ed7babb05c339437125ccf5777ffa9e9bbdd0a4ff628897"}, "downloads": -1, "filename": "deproject-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b8f311eb6a17f35c2fe5280495605bb4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 33217, "upload_time": "2019-04-12T21:59:31", "upload_time_iso_8601": "2019-04-12T21:59:31.589236Z", "url": "https://files.pythonhosted.org/packages/a6/b4/4fd1683cc780ecd6bbede29bf79bfd5aa3cc799b3feeb8a41dcba6f0792e/deproject-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6ae69e002238950aac7589efd10955f", "sha256": "64effacb0a20a0d13918d44369874764db000081fc9cc9c0a5589274f13a93cf"}, "downloads": -1, "filename": "deproject-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f6ae69e002238950aac7589efd10955f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 33874, "upload_time": "2019-04-12T21:59:33", "upload_time_iso_8601": "2019-04-12T21:59:33.529517Z", "url": "https://files.pythonhosted.org/packages/c9/39/0819bd27eba201a20df73670e06715c401a4cc1ec91c1915a2c6ce9ed1b3/deproject-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b8f311eb6a17f35c2fe5280495605bb4", "sha256": "29dd51292b655f834ed7babb05c339437125ccf5777ffa9e9bbdd0a4ff628897"}, "downloads": -1, "filename": "deproject-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b8f311eb6a17f35c2fe5280495605bb4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 33217, "upload_time": "2019-04-12T21:59:31", "upload_time_iso_8601": "2019-04-12T21:59:31.589236Z", "url": "https://files.pythonhosted.org/packages/a6/b4/4fd1683cc780ecd6bbede29bf79bfd5aa3cc799b3feeb8a41dcba6f0792e/deproject-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6ae69e002238950aac7589efd10955f", "sha256": "64effacb0a20a0d13918d44369874764db000081fc9cc9c0a5589274f13a93cf"}, "downloads": -1, "filename": "deproject-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f6ae69e002238950aac7589efd10955f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 33874, "upload_time": "2019-04-12T21:59:33", "upload_time_iso_8601": "2019-04-12T21:59:33.529517Z", "url": "https://files.pythonhosted.org/packages/c9/39/0819bd27eba201a20df73670e06715c401a4cc1ec91c1915a2c6ce9ed1b3/deproject-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:01 2020"}