{"info": {"author": "Ant\u00f3nio Ramadas", "author_email": "antonio_ramadas@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only"], "description": "##########################\nAdvent Of Code to Markdown\n##########################\n\n|downloads| |pypi| |python-version|\n\nParses `Advent Of Code <https://adventofcode.com/>`_ problem statement to markdown with option to also download the input while keeping everything organised.\n\n\n***********\n Features\n***********\n\n1. Parses the problem statement to Markdown.\n\n2. Easily organize your solutions with the input and a markdown description.\n\n3. Boilerplate can be copied next to the input and the problem statement.\n\n4. You can execute this script for the same day as many times as you want and feel confident that the boilerplate will not change what you have done so far.\n\n\n***************\n Organisation\n***************\n\nEach day goes inside a folder with the syntax ``day-<day>`` as you can check below.\n\n::\n\n  |____day-01\n  | |____README.md\n  | |____input.txt\n  |____day-02\n  | |____README.md\n  | |____input.txt\n  ...\n  |____day-15\n  | |____README.md\n  | |____input.txt\n  |____day-16\n  | |____README.md\n  | |____input.txt\n  ...\n  |____day-24\n  | |____README.md\n  | |____input.txt\n  |____day-25\n  | |____README.md\n  | |____input.txt\n\n\nThis was generated by executing ``aoc-to-markdown -i -s``  25 times. Additional arguments could have been provided to copy a directory/file inside the folder (useful to set up everything for you to solve). You can also specify the output directory (where the folders will be created), but, in this example, this was also not given.\n\n\n***************\n Installation\n***************\n\nIf you want to install directly from this repository, then install the dependencies and you are good to go:\n\n.. code:: bash\n\n  pip install -r requirements.txt\n\n  python aoc_to_markdown.py -h\n\nIf you want even simpler, then download from `PyPi <https://pypi.org/project/aoc-to-markdown/>`_ and you are good to go:\n\n.. code:: bash\n\n  pip install aoc-to-markdown\n\n  aoc_to_markdown -h\n\n\n************\n Arguments\n************\n\n::\n\n  Usage: aoc-to-markdown [-h] [-y <year>] [-d <day>] [-o <output_dir>] [-b <boilerplate_dir>] [-s] [-i]\n   -h, --help          Optional parameter to print this message\n   -y, --year          Optional parameter to indicate the year of the problem\n   -d, --day           Optional parameter to indicate the day of the problem\n   -o, --output        Optional parameter to indicate the path of the output (default = \".\")\n   -b, --boilerplate   Optional parameter to copy a directory/file to the output\n   -s, --save          Optional argument to indicate that the markdown should not be printed to stdout, but to a file\n   -i, --input         Optional argument to indicate that the input is to be downloaded and saved to a file\n  \n  SESSION_ID environment flag is required to download part 2 of the problem. This session id can be copied from the requests made on the Advent Of Code website after you login.\n\n  Extended description:\n  --year, if not given, defaults to the current year if in december; otherwise is the current year\n  --day, if not given, defaults to the first day which has not been retrieved (checks for directories named \"day-<day>\"); if all days have been retrieved, then go drink some hot chocolate and enjoy the rest of the day\n  --output is the prefix path where the folder (syntax: \"day-<day>\") will be created\n  --boilerplate is an argument useful to copy the solution boilerplate to help you get started\n  --save is only necessary if you want to save directly to a file and --output is not given\n  \n  Example:\n  aoc-to-markdown -y 2018 -d 1 -o my-solution-directory -b my-boilerplate -i\n\n\n**********\n Similar\n**********\n\n- There is `another project in JavaScript <https://github.com/kfarnung/aoc-to-markdown>`_ that also parses the problem statement to Markdown.\n\n\n.. |downloads| image:: https://pepy.tech/badge/aoc-to-markdown\n               :alt: Total number of downloads\n               :target: https://pepy.tech/project/aoc-to-markdown\n.. |pypi| image:: https://img.shields.io/pypi/v/aoc-to-markdown?color=blue\n          :alt: PyPI\n          :target: https://pypi.org/project/aoc-to-markdown/\n.. |python-version| image:: https://img.shields.io/pypi/pyversions/aoc-to-markdown\n                    :alt: PyPI - Python Version\n                    :target: https://pypi.org/project/aoc-to-markdown/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/antonio-ramadas/aoc-to-markdown", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aoc-to-markdown", "package_url": "https://pypi.org/project/aoc-to-markdown/", "platform": "", "project_url": "https://pypi.org/project/aoc-to-markdown/", "project_urls": {"Homepage": "https://github.com/antonio-ramadas/aoc-to-markdown"}, "release_url": "https://pypi.org/project/aoc-to-markdown/0.2.3/", "requires_dist": null, "requires_python": ">=3.*", "summary": "Parses Advent Of Code problem statement to markdown with option to also download the input while keeping everything organised", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pepy.tech/project/aoc-to-markdown\" rel=\"nofollow\"><img alt=\"Total number of downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30ba45a44c78336841bf5bd88fdf614c0c263f4f/68747470733a2f2f706570792e746563682f62616467652f616f632d746f2d6d61726b646f776e\"></a> <a href=\"https://pypi.org/project/aoc-to-markdown/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/831a46426d12d22f92924ac3ba201cc3eeb7db93/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616f632d746f2d6d61726b646f776e3f636f6c6f723d626c7565\"></a> <a href=\"https://pypi.org/project/aoc-to-markdown/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ef9f6e23be888fae77effd834850a87b458a738/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f616f632d746f2d6d61726b646f776e\"></a></p>\n<p>Parses <a href=\"https://adventofcode.com/\" rel=\"nofollow\">Advent Of Code</a> problem statement to markdown with option to also download the input while keeping everything organised.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ol>\n<li>Parses the problem statement to Markdown.</li>\n<li>Easily organize your solutions with the input and a markdown description.</li>\n<li>Boilerplate can be copied next to the input and the problem statement.</li>\n<li>You can execute this script for the same day as many times as you want and feel confident that the boilerplate will not change what you have done so far.</li>\n</ol>\n</div>\n<div id=\"organisation\">\n<h2>Organisation</h2>\n<p>Each day goes inside a folder with the syntax <tt><span class=\"pre\">day-&lt;day&gt;</span></tt> as you can check below.</p>\n<pre>|____day-01\n| |____README.md\n| |____input.txt\n|____day-02\n| |____README.md\n| |____input.txt\n...\n|____day-15\n| |____README.md\n| |____input.txt\n|____day-16\n| |____README.md\n| |____input.txt\n...\n|____day-24\n| |____README.md\n| |____input.txt\n|____day-25\n| |____README.md\n| |____input.txt\n</pre>\n<p>This was generated by executing <tt><span class=\"pre\">aoc-to-markdown</span> <span class=\"pre\">-i</span> <span class=\"pre\">-s</span></tt>  25 times. Additional arguments could have been provided to copy a directory/file inside the folder (useful to set up everything for you to solve). You can also specify the output directory (where the folders will be created), but, in this example, this was also not given.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you want to install directly from this repository, then install the dependencies and you are good to go:</p>\n<pre>pip install -r requirements.txt\n\npython aoc_to_markdown.py -h\n</pre>\n<p>If you want even simpler, then download from <a href=\"https://pypi.org/project/aoc-to-markdown/\" rel=\"nofollow\">PyPi</a> and you are good to go:</p>\n<pre>pip install aoc-to-markdown\n\naoc_to_markdown -h\n</pre>\n</div>\n<div id=\"arguments\">\n<h2>Arguments</h2>\n<pre>Usage: aoc-to-markdown [-h] [-y &lt;year&gt;] [-d &lt;day&gt;] [-o &lt;output_dir&gt;] [-b &lt;boilerplate_dir&gt;] [-s] [-i]\n -h, --help          Optional parameter to print this message\n -y, --year          Optional parameter to indicate the year of the problem\n -d, --day           Optional parameter to indicate the day of the problem\n -o, --output        Optional parameter to indicate the path of the output (default = \".\")\n -b, --boilerplate   Optional parameter to copy a directory/file to the output\n -s, --save          Optional argument to indicate that the markdown should not be printed to stdout, but to a file\n -i, --input         Optional argument to indicate that the input is to be downloaded and saved to a file\n\nSESSION_ID environment flag is required to download part 2 of the problem. This session id can be copied from the requests made on the Advent Of Code website after you login.\n\nExtended description:\n--year, if not given, defaults to the current year if in december; otherwise is the current year\n--day, if not given, defaults to the first day which has not been retrieved (checks for directories named \"day-&lt;day&gt;\"); if all days have been retrieved, then go drink some hot chocolate and enjoy the rest of the day\n--output is the prefix path where the folder (syntax: \"day-&lt;day&gt;\") will be created\n--boilerplate is an argument useful to copy the solution boilerplate to help you get started\n--save is only necessary if you want to save directly to a file and --output is not given\n\nExample:\naoc-to-markdown -y 2018 -d 1 -o my-solution-directory -b my-boilerplate -i\n</pre>\n</div>\n<div id=\"similar\">\n<h2>Similar</h2>\n<ul>\n<li>There is <a href=\"https://github.com/kfarnung/aoc-to-markdown\" rel=\"nofollow\">another project in JavaScript</a> that also parses the problem statement to Markdown.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5965002, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "70c661bbaa9b3b56356187203fd64c0a", "sha256": "43007906171085c82b7c27684be611462fb78e7c7f230082a600b8db62ac753e"}, "downloads": -1, "filename": "aoc-to-markdown-0.2.0.tar.gz", "has_sig": false, "md5_digest": "70c661bbaa9b3b56356187203fd64c0a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.*", "size": 4826, "upload_time": "2019-10-09T20:14:11", "upload_time_iso_8601": "2019-10-09T20:14:11.258902Z", "url": "https://files.pythonhosted.org/packages/4f/0f/2299ae6a81e99ec30087b9ea391fb6f3303add3e87e9b1856bb6a2cd76e0/aoc-to-markdown-0.2.0.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "afdabc5b87a510d378bb36a60585741b", "sha256": "3a43609ac6944694d2b070a91ceb90beff60a061f57ecb24f983f1e3a2f9129a"}, "downloads": -1, "filename": "aoc-to-markdown-0.2.2.tar.gz", "has_sig": false, "md5_digest": "afdabc5b87a510d378bb36a60585741b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.*", "size": 5230, "upload_time": "2019-10-09T20:33:06", "upload_time_iso_8601": "2019-10-09T20:33:06.640586Z", "url": "https://files.pythonhosted.org/packages/f7/07/ca5e1d7edf0a15692a246c680cdc7f6e5f99aee680603a44228dafb03f25/aoc-to-markdown-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "147b6478bfa18f032be41377bb1bfc3e", "sha256": "efc4d54eba91fe4a3c7fbc94d445dcc1662805cef207dfabf5f567282c5fe4bc"}, "downloads": -1, "filename": "aoc-to-markdown-0.2.3.tar.gz", "has_sig": false, "md5_digest": "147b6478bfa18f032be41377bb1bfc3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.*", "size": 5319, "upload_time": "2019-10-12T18:23:29", "upload_time_iso_8601": "2019-10-12T18:23:29.755159Z", "url": "https://files.pythonhosted.org/packages/63/34/eba661d2cf332443d14cd8330b8ace15d0c1b968515ec2aaa5d9ed2c80d7/aoc-to-markdown-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "147b6478bfa18f032be41377bb1bfc3e", "sha256": "efc4d54eba91fe4a3c7fbc94d445dcc1662805cef207dfabf5f567282c5fe4bc"}, "downloads": -1, "filename": "aoc-to-markdown-0.2.3.tar.gz", "has_sig": false, "md5_digest": "147b6478bfa18f032be41377bb1bfc3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.*", "size": 5319, "upload_time": "2019-10-12T18:23:29", "upload_time_iso_8601": "2019-10-12T18:23:29.755159Z", "url": "https://files.pythonhosted.org/packages/63/34/eba661d2cf332443d14cd8330b8ace15d0c1b968515ec2aaa5d9ed2c80d7/aoc-to-markdown-0.2.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:55 2020"}