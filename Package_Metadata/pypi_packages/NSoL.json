{"info": {"author": "Michael Ebner", "author_email": "michael.ebner@kcl.ac.uk", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Healthcare Industry", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Medical Science Apps.", "Topic :: Software Development :: Build Tools"], "description": "# Numerical Solver Library \n\nThe Numerical Solver Library (NSoL) is a Python-based open-source toolkit for research developed within the [GIFT-Surg][giftsurg] project and contains several implementations of denoising and deconvolution algorithms.\n\nThe algorithm and software were developed by [Michael Ebner][mebner]\nat the [Wellcome/EPSRC Centre for Interventional and Surgical Sciences][weiss], [University College London (UCL)][ucl] (2015 -- 2019), and the [Department of Surgical and Interventional Sciences][sie], [King's College London (KCL)][kcl] (since 2019).\n\nIf you have any questions or comments, please drop an email to `michael.ebner@kcl.ac.uk`.\n\n## Features\n\nImplemented solvers include\n* **Primal-Dual Methods** as described in [[Chambolle and Pock, 2010]](https://link.springer.com/article/10.1007/s10851-010-0251-1)\n* **Alternating Direction Method of Multipliers (ADMM)** as described in, e.g., [[Diamond and Boyd, 2015]](http://stanford.edu/~boyd/papers/admm_distr_stats.html) \n\nto solve\n* **L1- and L2-denoising** problems, i.e.\n<!--https://www.url-encode-decode.com/-->\n<!--```math-->\n<!--\\vec{x}^*:=\\text{argmin}_{\\vec{x}}\\Big[\\Vert\\vec{x}-\\vec{x}_0\\Vert_{\\ell^p}^p+\\alpha\\,\\text{Reg}(\\vec{x})\\Big],\\quad\\text{for}{\\quad}p\\in\\{1,\\,2\\},-->\n<!--```-->\n<p align=\"center\">\n<img src=\"http://latex.codecogs.com/svg.latex?%5Cvec%7Bx%7D%5E%2A%3A%3D%5Ctext%7Bargmin%7D_%7B%5Cvec%7Bx%7D%7D%5CBig%5B%5CVert%5Cvec%7Bx%7D-%5Cvec%7Bx%7D_0%5CVert_%7B%5Cell%5Ep%7D%5Ep%2B%5Calpha%5C%2C%5Ctext%7BReg%7D%28%5Cvec%7Bx%7D%29%5CBig%5D%2C%5Cquad%5Ctext%7Bfor%7D%7B%5Cquad%7Dp%5Cin%5C%7B1%2C%5C%2C2%5C%7D%2C\">\n</p>\nand\n\n* **robust L2-deconvolution** problems, i.e.\n<!--https://www.url-encode-decode.com/-->\n<!--```math-->\n<!--\\vec{x}^*:=\\text{argmin}_{\\vec{x}}\\Big[\\sum_{i=1}^N\\varrho\\big((A\\vec{x}-\\vec{b})_i^2)+\\alpha\\,\\text{Reg}(\\vec{x})\\Big],-->\n<!--```-->\n<p align=\"center\">\n<img src=\"http://latex.codecogs.com/svg.latex?%5Cvec%7Bx%7D%5E%2A%3A%3D%5Ctext%7Bargmin%7D_%7B%5Cvec%7Bx%7D%7D%5CBig%5B%5Csum_%7Bi%3D1%7D%5EN%5Cvarrho%5Cbig%28%28A%5Cvec%7Bx%7D-%5Cvec%7Bb%7D%29_i%5E2%29%2B%5Calpha%5C%2C%5Ctext%7BReg%7D%28%5Cvec%7Bx%7D%29%5CBig%5D%2C\">\n</p>\n\nin 1D, 2D or 3D for a variety of regularizers ![img](http://latex.codecogs.com/svg.latex?%5Ctext%7BReg%7D) and data loss functions ![img](http://latex.codecogs.com/svg.latex?%5Cvarrho).\n\n---\n\nThe **available regularizers**, depending on the minimization problem, include\n<!-- * Zeroth-order Tikhonov (TK0): $`\\text{Reg}(\\vec{x}) = \\frac{1}{2}\\Vert \\vec{x} \\Vert_{\\ell^2}^2`$ -->\n<!-- * First-order Tikhonov (TK1): $`\\text{Reg}(\\vec{x}) = \\frac{1}{2}\\Vert \\nabla \\vec{x} \\Vert_{\\ell^2}^2`$ -->\n<!-- * Isotropic Total Variation (TV): $`\\text{Reg}(\\vec{x}) = \\text{TV}_\\text{iso}(\\vec{x}) = \\big\\Vert |\\nabla \\vec{x}| \\big\\Vert_{\\ell^1}`$ -->\n<!-- * Huber Function: $`\\text{Reg}(\\vec{x}) = \\frac{1}{2\\gamma} \\big| |\\nabla \\vec{x}| \\big|_{\\gamma}`$ -->\n\n* Zeroth-order Tikhonov (TK0): ![img](http://latex.codecogs.com/svg.latex?%5Ctext%7BReg%7D%28%5Cvec%7Bx%7D%29%3D%5Cfrac%7B1%7D%7B2%7D%5CVert%5Cvec%7Bx%7D%5CVert_%7B%5Cell%5E2%7D%5E2)\n* First-order Tikhonov (TK1): ![img](http://latex.codecogs.com/svg.latex?%5Ctext%7BReg%7D%28%5Cvec%7Bx%7D%29%3D%5Cfrac%7B1%7D%7B2%7D%5CVert%5Cnabla%5Cvec%7Bx%7D%5CVert_%7B%5Cell%5E2%7D%5E2)\n* Isotropic Total Variation (TV): ![img](http://latex.codecogs.com/svg.latex?%5Ctext%7BReg%7D%28%5Cvec%7Bx%7D%29%3D%5Ctext%7BTV%7D_%5Ctext%7Biso%7D%28%5Cvec%7Bx%7D%29%3D%5Cbig%5CVert%7C%5Cnabla%5Cvec%7Bx%7D%7C%5Cbig%5CVert_%7B%5Cell%5E1%7D)\n* Huber Function: ![img](http://latex.codecogs.com/svg.latex?%5Ctext%7BReg%7D%28%5Cvec%7Bx%7D%29%3D%5Cfrac%7B1%7D%7B2%5Cgamma%7D%5Cbig%7C%7C%5Cnabla%5Cvec%7Bx%7D%7C%5Cbig%7C_%7B%5Cgamma%7D)\n\n---\n\n**Data loss functions** ![img](http://latex.codecogs.com/svg.latex?%5Cvarrho) are motivated by [SciPy](https://docs.scipy.org/doc/scipy-0.19.0/reference/generated/scipy.optimize.least_squares.html) and allow for robust outlier rejection. Implemented data loss functions are:\n<!--$`\\varrho(e)=e`$-->\n<!--$`\\varrho(e)=2(\\sqrt{1+e}-1)`$ -->\n<!--$`\\varrho(e)=|e|_\\gamma=\\begin{cases}e,&e<\\gamma^2\\\\2\\gamma\\sqrt{e}-\\gamma^2,&e\\ge\\gamma^2\\end{cases}`$-->\n<!--$`\\varrho(e)=\\arctan(e)`$-->\n<!--$`\\varrho(e)=\\ln(1 + e)`$-->\n* `linear`: ![img](http://latex.codecogs.com/svg.latex?%5Cvarrho%28e%29%3De)\n* `soft_l1`: ![img](http://latex.codecogs.com/svg.latex?%5Cvarrho%28e%29%3D2%28%5Csqrt%7B1%2Be%7D-1%29)\n* `huber`: ![img](http://latex.codecogs.com/svg.latex?%5Cvarrho%28e%29%3D%7Ce%7C_%5Cgamma%3D%5Cbegin%7Bcases%7De%2C%26e%3C%5Cgamma%5E2%5C%5C2%5Cgamma%5Csqrt%7Be%7D-%5Cgamma%5E2%2C%26e%5Cge%5Cgamma%5E2%5Cend%7Bcases%7D)\n* `arctan`: ![img](http://latex.codecogs.com/svg.latex?%5Cvarrho%28e%29%3D%5Carctan%28e%29)\n* `cauchy`: ![img](http://latex.codecogs.com/svg.latex?%5Cvarrho%28e%29%3D%5Cln%281%2Be%29)\n\n---\n\nAdditionally, the choice of finding optimal reconstruction parameters is facilitated by providing several evaluation methods including\n* **L-curve studies**, and \n* the **evaluation of similarity measures** (in case a reference image is available) \n\nin the course of **parameter studies**. Implemented similarity measures are\n\n* Sum of Squared Differences (SSD)\n* Mean Absolute Error (MAE)\n* Mean Square Error (MSE)\n* Root Mean Square Error (RMSE)\n* Peak-Signal-to-Noise Ratio (PSNR)\n* Mutual Information (MI)\n* Normalized Mutual Information (NMI)\n* Structural Similarity (SSIM)\n* Normalized Cross Correlation (NCC)\n\n## Installation\n\nNSoL was developed in\n\n* Mac OS X 10.10 and 10.12\n* Ubuntu 14.04 and 16.04\n\nand tested for Python 2.7.12 and 3.5.2.\n\nIn case NSoL is used in conjuction with any of the toolkits of [NiftyMIC][niftymic], [Volumetric Reconstruction From Printed Films][volumetricreconstructionfromprintedfilms] or [SimpleReg][simplereg], please \n* install [ITK_NiftyMIC][itkniftymic]\n\nIf NSoL is used standalone, please run instead\n* `pip install itk`\n\nAfterwards, clone this repository via \n* `git clone git@github.com:gift-surg/NSoL.git`\n\nwhere all remaining dependencies can be installed using `pip`:\n* `pip install -e .`\n\n\n## Usage\n\n### Denoising\n\nTVL1/TVL2/HuberL2/HuberL1 Denoising can be run via\n\n```\nnsol_run_denoising \\\n--observation path-to-observation-png-nii-mat \\\n--result path-to-denoised-result-png-nii-mat \\\n--reconstruction-type TVL1 \\\n--alpha 0.05 \\\n--iterations 50\n```\n```\nnsol_run_denoising \\\n--observation path-to-observation-png-nii-mat \\\n--reference path-to-reference-png-nii-mat \\\n--result path-to-denoised-result-png-nii-mat \\\n--reconstruction-type TVL1 \\\n--alpha 0.05 \\\n--iterations 50\n```\n\n### Deconvolution\nExamples for TK0L2/TK1L2/TVL2/HuberL2 deconvolution calls are\n\n```\nnsol_run_deconvolution \\\n--observation path-to-observation-png-nii-mat \\\n--result path-to-denoised-result-png-nii-mat \\\n--reconstruction-type HuberL2 \\\n--blur 1.2 \\\n--alpha 0.05 \\\n--iterations 50\n```\n```\nnsol_run_deconvolution \\\n--observation path-to-observation-png-nii-mat \\\n--reference path-to-reference-png-nii-mat \\\n--result path-to-denoised-result-png-nii-mat \\\n--reconstruction-type HuberL2 \\\n--alpha 0.05 \\\n--blur 1.2 \\\n--iterations 50 \\\n--data-loss soft_l1 \\\n--minimizer L-BFGS-B\n```\n\n### Parameter Studies\nParameter studies for the denoising problem (and, similarly, for deconvolution problem) can be performed by, e.g.,\n```\nnsol_run_denoising_study \\\n--observation path-to-observation-png-nii-mat \\\n--dir-output path-to-parameter-study \\\n--reference path-to-reference-png-nii-mat \\\n--reconstruction-type TVL2 \\\n--study-name TVL2-Denoising \\\n--measures RMSE PSNR NCC NMI SSIM \\\n--alpha-range 0.001 0.05 20\n```\n\nThe results can be visualized by\n```\nnsol_show_parameter_study \\\n--dir-input path-to-parameter-study \\\n--study-name TVL2-Denoising \\\n--dir-output-figures dir-to-figures\n```\n\n## Licensing and Copyright\nCopyright (c) 2019 Michael Ebner and contributors.\nThis framework is made available as free open-source software under the [BSD-3-Clause License][bsd]. Other licenses may apply for dependencies.\n\n## Funding\nThis work is partially funded by the UCL [Engineering and Physical Sciences Research Council (EPSRC)][epsrc] Centre for Doctoral Training in Medical Imaging (EP/L016478/1), the Innovative Engineering for Health award ([Wellcome Trust][wellcometrust] [WT101957] and [EPSRC][epsrc] [NS/A000027/1]), and supported by researchers at the [National Institute for Health Research][nihr] [University College London Hospitals (UCLH)][uclh] Biomedical Research Centre.\n\n## References\nAssociated publications are \n* [[Ebner2019]](https://onlinelibrary.wiley.com/doi/abs/10.1002/mrm.27852) Ebner, M., Patel, P. A., Atkinson, D., Caselton, C., Firmin, F., Amin, Z., Bainbridge, A., De Coppi, P., Taylor, S. A., Ourselin, S., Chouhan, M. D., & Vercauteren, T. (2019). Super\u2010resolution for upper abdominal MRI: Acquisition and post\u2010processing protocol optimization using brain MRI control data and expert reader validation. Magnetic Resonance in Medicine.\n* [[EbnerWang2018]](http://link.springer.com/10.1007/978-3-030-00928-1_36) Ebner, M., Wang, G., Li, W., Aertsen, M., Patel, P. A., Melbourne, A., Doel, T., David, A. L., Deprest, J., Ourselin, S., & Vercauteren, T. (2018). An Automated Localization, Segmentation and Reconstruction Framework for Fetal Brain MRI. In Medical Image Computing and Computer-Assisted Intervention -- MICCAI 2018 (pp. 313\u2013320). Springer\n* [[Ebner2018]](https://www.sciencedirect.com/science/article/pii/S1053811917308042) Ebner, M., Chung, K. K., Prados, F., Cardoso, M. J., Chard, D. T., Vercauteren, T., & Ourselin, S. (2018). Volumetric reconstruction from printed films: Enabling 30 year longitudinal analysis in MR neuroimaging. NeuroImage, 165, 238\u2013250.\n* [[Xie2017]](https://www.spiedigitallibrary.org/journals/Journal_of_Biomedical_Optics/volume-22/issue-11/116006/Wide-field-spectrally-resolved-quantitative-fluorescence-imaging-system--toward/10.1117/1.JBO.22.11.116006.full) Xie, Y., Thom, M., Ebner, M., Wykes, V., Desjardins, A., Miserocchi, A., Ourselin, S., McEvoy, A. W., and Vercauteren, T. (2017). Wide-field spectrally resolved quantitative fluorescence imaging system: toward neurosurgical guidance in glioma resection. Journal of Biomedical Optics, 22(11).\n* [[Ranzini2017]](https://mski2017.files.wordpress.com/2017/09/miccai-mski2017.pdf) Ranzini, M. B., Ebner, M., Cardoso, M. J., Fotiadou, A., Vercauteren, T., Henckel, J., Hart, A., Ourselin, S., and Modat, M. (2017). Joint Multimodal Segmentation of Clinical CT and MR from Hip Arthroplasty Patients. MICCAI Workshop on Computational Methods and Clinical Applications in Musculoskeletal Imaging (MSKI) 2017.\n* [[Ebner2017]](https://link.springer.com/chapter/10.1007%2F978-3-319-52280-7_1) Ebner, M., Chouhan, M., Patel, P. A., Atkinson, D., Amin, Z., Read, S., Punwani, S., Taylor, S., Vercauteren, T., and Ourselin, S. (2017). Point-Spread-Function-Aware Slice-to-Volume Registration: Application to Upper Abdominal MRI Super-Resolution. In Zuluaga, M. A., Bhatia, K., Kainz, B., Moghari, M. H., and Pace, D. F., editors, Reconstruction, Segmentation, and Analysis of Medical Images. RAMBO 2016, volume 10129 of Lecture Notes in Computer Science, pages 3\u201313. Springer International Publishing.\n\n[mebner]: https://www.linkedin.com/in/ebnermichael\n[weiss]: https://www.ucl.ac.uk/interventional-surgical-sciences\n[bsd]: https://opensource.org/licenses/BSD-3-Clause\n[giftsurg]: http://www.gift-surg.ac.uk\n[cmic]: http://cmic.cs.ucl.ac.uk\n[guarantors]: https://guarantorsofbrain.org/\n[ucl]: http://www.ucl.ac.uk\n[kcl]: https://www.kcl.ac.uk\n[sie]: https://www.kcl.ac.uk/bmeis/our-departments/surgical-interventional-engineering\n[uclh]: http://www.uclh.nhs.uk\n[epsrc]: http://www.epsrc.ac.uk\n[wellcometrust]: http://www.wellcome.ac.uk\n[mssociety]: https://www.mssociety.org.uk/\n[nihr]: http://www.nihr.ac.uk/research\n[itkniftymic]: https://github.com/gift-surg/ITK_NiftyMIC/wikis/home\n[niftymic]: https://github.com/gift-surg/NiftyMIC\n[nsol]: https://github.com/gift-surg/NSoL\n[simplereg]: https://github.com/gift-surg/SimpleReg\n[simplereg-dependencies]: https://github.com/gift-surg/SimpleReg/wikis/simplereg-dependencies\n[pysitk]: https://github.com/gift-surg/PySiTK\n[volumetricreconstructionfromprintedfilms]: https://github.com/gift-surg/VolumetricReconstructionFromPrintedFilms", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gift-surg/NSoL", "keywords": "development numericalsolver convexoptimisation", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "NSoL", "package_url": "https://pypi.org/project/NSoL/", "platform": "", "project_url": "https://pypi.org/project/NSoL/", "project_urls": {"Homepage": "https://github.com/gift-surg/NSoL"}, "release_url": "https://pypi.org/project/NSoL/0.1.14/", "requires_dist": null, "requires_python": "", "summary": "The Numerical Solver Library (NSoL) is a research-focused toolkit for denoising and deconvolution applications using ADMM and Primal-Dual methods.", "version": "0.1.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Numerical Solver Library</h1>\n<p>The Numerical Solver Library (NSoL) is a Python-based open-source toolkit for research developed within the <a href=\"http://www.gift-surg.ac.uk\" rel=\"nofollow\">GIFT-Surg</a> project and contains several implementations of denoising and deconvolution algorithms.</p>\n<p>The algorithm and software were developed by <a href=\"https://www.linkedin.com/in/ebnermichael\" rel=\"nofollow\">Michael Ebner</a>\nat the <a href=\"https://www.ucl.ac.uk/interventional-surgical-sciences\" rel=\"nofollow\">Wellcome/EPSRC Centre for Interventional and Surgical Sciences</a>, <a href=\"http://www.ucl.ac.uk\" rel=\"nofollow\">University College London (UCL)</a> (2015 -- 2019), and the <a href=\"https://www.kcl.ac.uk/bmeis/our-departments/surgical-interventional-engineering\" rel=\"nofollow\">Department of Surgical and Interventional Sciences</a>, <a href=\"https://www.kcl.ac.uk\" rel=\"nofollow\">King's College London (KCL)</a> (since 2019).</p>\n<p>If you have any questions or comments, please drop an email to <code>michael.ebner@kcl.ac.uk</code>.</p>\n<h2>Features</h2>\n<p>Implemented solvers include</p>\n<ul>\n<li><strong>Primal-Dual Methods</strong> as described in <a href=\"https://link.springer.com/article/10.1007/s10851-010-0251-1\" rel=\"nofollow\">[Chambolle and Pock, 2010]</a></li>\n<li><strong>Alternating Direction Method of Multipliers (ADMM)</strong> as described in, e.g., <a href=\"http://stanford.edu/%7Eboyd/papers/admm_distr_stats.html\" rel=\"nofollow\">[Diamond and Boyd, 2015]</a></li>\n</ul>\n<p>to solve</p>\n<ul>\n<li><strong>L1- and L2-denoising</strong> problems, i.e.</li>\n</ul>\n\n\n\n\n<p align=\"center\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9744c8ff2312c6285207d66ae3cea1ef77719ea/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376656325374278253744253545253241253341253344253543746578742537426172676d696e2537445f2537422535437665632537427825374425374425354342696725354225354356657274253543766563253742782537442d253543766563253742782537445f30253543566572745f253742253543656c6c2535457025374425354570253242253543616c70686125354325324325354374657874253742526567253744253238253543766563253742782537442532392535434269672535442532432535437175616425354374657874253742666f722537442537422535437175616425374470253543696e2535432537423125324325354325324332253543253744253243\">\n</p>\nand\n<ul>\n<li><strong>robust L2-deconvolution</strong> problems, i.e.</li>\n</ul>\n\n\n\n\n<p align=\"center\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26b49cd84a46b81c336e39a2f9006241cb66781b/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376656325374278253744253545253241253341253344253543746578742537426172676d696e2537445f2537422535437665632537427825374425374425354342696725354225354373756d5f25374269253344312537442535454e25354376617272686f25354362696725323825323841253543766563253742782537442d253543766563253742622537442532395f6925354532253239253242253543616c7068612535432532432535437465787425374252656725374425323825354376656325374278253744253239253543426967253544253243\">\n</p>\n<p>in 1D, 2D or 3D for a variety of regularizers <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7788e96139fbfe7e2433c43e4cb1e3d12098b99/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354374657874253742526567253744\"> and data loss functions <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9cac566192a53990cf92b4c16dc6e95648f37686/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376617272686f\">.</p>\n<hr>\n<p>The <strong>available regularizers</strong>, depending on the minimization problem, include</p>\n\n\n\n\n<ul>\n<li>Zeroth-order Tikhonov (TK0): <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac0f99f711abbf44a8db4336391f9d60ea299a9f/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354374657874253742526567253744253238253543766563253742782537442532392533442535436672616325374231253744253742322537442535435665727425354376656325374278253744253543566572745f253742253543656c6c2535453225374425354532\"></li>\n<li>First-order Tikhonov (TK1): <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10cc77447184cf727c54f2c9d5b01d132f84be33/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f2535437465787425374252656725374425323825354376656325374278253744253239253344253543667261632537423125374425374232253744253543566572742535436e61626c6125354376656325374278253744253543566572745f253742253543656c6c2535453225374425354532\"></li>\n<li>Isotropic Total Variation (TV): <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01c851e0c4c16383dc6aa9e719933f8caff87911/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354374657874253742526567253744253238253543766563253742782537442532392533442535437465787425374254562537445f2535437465787425374269736f25374425323825354376656325374278253744253239253344253543626967253543566572742537432535436e61626c6125354376656325374278253744253743253543626967253543566572745f253742253543656c6c25354531253744\"></li>\n<li>Huber Function: <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2dad64154d4b69e5a15ad1cb9bcdbd9a122c90c/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f253543746578742537425265672537442532382535437665632537427825374425323925334425354366726163253742312537442537423225354367616d6d612537442535436269672537432537432535436e61626c61253543766563253742782537442537432535436269672537435f25374225354367616d6d61253744\"></li>\n</ul>\n<hr>\n<p><strong>Data loss functions</strong> <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9cac566192a53990cf92b4c16dc6e95648f37686/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376617272686f\"> are motivated by <a href=\"https://docs.scipy.org/doc/scipy-0.19.0/reference/generated/scipy.optimize.least_squares.html\" rel=\"nofollow\">SciPy</a> and allow for robust outlier rejection. Implemented data loss functions are:</p>\n\n\n\n\n\n<ul>\n<li><code>linear</code>: <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e649159bb86bf4c1fce0c430006ec001ff52e27c/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376617272686f2532386525323925334465\"></li>\n<li><code>soft_l1</code>: <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/20087b48ba443b5904db1bcab0fc4eda3d59552f/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376617272686f25323865253239253344322532382535437371727425374231253242652537442d31253239\"></li>\n<li><code>huber</code>: <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a40b73e8fdbc9a0894101826d81a9f3107c98f65/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376617272686f25323865253239253344253743652537435f25354367616d6d61253344253543626567696e2537426361736573253744652532432532366525334325354367616d6d61253545322535432535433225354367616d6d6125354373717274253742652537442d25354367616d6d612535453225324325323665253543676525354367616d6d6125354532253543656e642537426361736573253744\"></li>\n<li><code>arctan</code>: <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc61fbde1306945a3f9526c849af4e7f18cde1c7/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376617272686f2532386525323925334425354361726374616e25323865253239\"></li>\n<li><code>cauchy</code>: <img alt=\"img\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b3998a4031db62b5bb2686d64d70b8bcaa849cf/687474703a2f2f6c617465782e636f6465636f67732e636f6d2f7376672e6c617465783f25354376617272686f253238652532392533442535436c6e2532383125324265253239\"></li>\n</ul>\n<hr>\n<p>Additionally, the choice of finding optimal reconstruction parameters is facilitated by providing several evaluation methods including</p>\n<ul>\n<li><strong>L-curve studies</strong>, and</li>\n<li>the <strong>evaluation of similarity measures</strong> (in case a reference image is available)</li>\n</ul>\n<p>in the course of <strong>parameter studies</strong>. Implemented similarity measures are</p>\n<ul>\n<li>Sum of Squared Differences (SSD)</li>\n<li>Mean Absolute Error (MAE)</li>\n<li>Mean Square Error (MSE)</li>\n<li>Root Mean Square Error (RMSE)</li>\n<li>Peak-Signal-to-Noise Ratio (PSNR)</li>\n<li>Mutual Information (MI)</li>\n<li>Normalized Mutual Information (NMI)</li>\n<li>Structural Similarity (SSIM)</li>\n<li>Normalized Cross Correlation (NCC)</li>\n</ul>\n<h2>Installation</h2>\n<p>NSoL was developed in</p>\n<ul>\n<li>Mac OS X 10.10 and 10.12</li>\n<li>Ubuntu 14.04 and 16.04</li>\n</ul>\n<p>and tested for Python 2.7.12 and 3.5.2.</p>\n<p>In case NSoL is used in conjuction with any of the toolkits of <a href=\"https://github.com/gift-surg/NiftyMIC\" rel=\"nofollow\">NiftyMIC</a>, <a href=\"https://github.com/gift-surg/VolumetricReconstructionFromPrintedFilms\" rel=\"nofollow\">Volumetric Reconstruction From Printed Films</a> or <a href=\"https://github.com/gift-surg/SimpleReg\" rel=\"nofollow\">SimpleReg</a>, please</p>\n<ul>\n<li>install <a href=\"https://github.com/gift-surg/ITK_NiftyMIC/wikis/home\" rel=\"nofollow\">ITK_NiftyMIC</a></li>\n</ul>\n<p>If NSoL is used standalone, please run instead</p>\n<ul>\n<li><code>pip install itk</code></li>\n</ul>\n<p>Afterwards, clone this repository via</p>\n<ul>\n<li><code>git clone git@github.com:gift-surg/NSoL.git</code></li>\n</ul>\n<p>where all remaining dependencies can be installed using <code>pip</code>:</p>\n<ul>\n<li><code>pip install -e .</code></li>\n</ul>\n<h2>Usage</h2>\n<h3>Denoising</h3>\n<p>TVL1/TVL2/HuberL2/HuberL1 Denoising can be run via</p>\n<pre><code>nsol_run_denoising \\\n--observation path-to-observation-png-nii-mat \\\n--result path-to-denoised-result-png-nii-mat \\\n--reconstruction-type TVL1 \\\n--alpha 0.05 \\\n--iterations 50\n</code></pre>\n<pre><code>nsol_run_denoising \\\n--observation path-to-observation-png-nii-mat \\\n--reference path-to-reference-png-nii-mat \\\n--result path-to-denoised-result-png-nii-mat \\\n--reconstruction-type TVL1 \\\n--alpha 0.05 \\\n--iterations 50\n</code></pre>\n<h3>Deconvolution</h3>\n<p>Examples for TK0L2/TK1L2/TVL2/HuberL2 deconvolution calls are</p>\n<pre><code>nsol_run_deconvolution \\\n--observation path-to-observation-png-nii-mat \\\n--result path-to-denoised-result-png-nii-mat \\\n--reconstruction-type HuberL2 \\\n--blur 1.2 \\\n--alpha 0.05 \\\n--iterations 50\n</code></pre>\n<pre><code>nsol_run_deconvolution \\\n--observation path-to-observation-png-nii-mat \\\n--reference path-to-reference-png-nii-mat \\\n--result path-to-denoised-result-png-nii-mat \\\n--reconstruction-type HuberL2 \\\n--alpha 0.05 \\\n--blur 1.2 \\\n--iterations 50 \\\n--data-loss soft_l1 \\\n--minimizer L-BFGS-B\n</code></pre>\n<h3>Parameter Studies</h3>\n<p>Parameter studies for the denoising problem (and, similarly, for deconvolution problem) can be performed by, e.g.,</p>\n<pre><code>nsol_run_denoising_study \\\n--observation path-to-observation-png-nii-mat \\\n--dir-output path-to-parameter-study \\\n--reference path-to-reference-png-nii-mat \\\n--reconstruction-type TVL2 \\\n--study-name TVL2-Denoising \\\n--measures RMSE PSNR NCC NMI SSIM \\\n--alpha-range 0.001 0.05 20\n</code></pre>\n<p>The results can be visualized by</p>\n<pre><code>nsol_show_parameter_study \\\n--dir-input path-to-parameter-study \\\n--study-name TVL2-Denoising \\\n--dir-output-figures dir-to-figures\n</code></pre>\n<h2>Licensing and Copyright</h2>\n<p>Copyright (c) 2019 Michael Ebner and contributors.\nThis framework is made available as free open-source software under the <a href=\"https://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\">BSD-3-Clause License</a>. Other licenses may apply for dependencies.</p>\n<h2>Funding</h2>\n<p>This work is partially funded by the UCL <a href=\"http://www.epsrc.ac.uk\" rel=\"nofollow\">Engineering and Physical Sciences Research Council (EPSRC)</a> Centre for Doctoral Training in Medical Imaging (EP/L016478/1), the Innovative Engineering for Health award (<a href=\"http://www.wellcome.ac.uk\" rel=\"nofollow\">Wellcome Trust</a> [WT101957] and <a href=\"http://www.epsrc.ac.uk\" rel=\"nofollow\">EPSRC</a> [NS/A000027/1]), and supported by researchers at the <a href=\"http://www.nihr.ac.uk/research\" rel=\"nofollow\">National Institute for Health Research</a> <a href=\"http://www.uclh.nhs.uk\" rel=\"nofollow\">University College London Hospitals (UCLH)</a> Biomedical Research Centre.</p>\n<h2>References</h2>\n<p>Associated publications are</p>\n<ul>\n<li><a href=\"https://onlinelibrary.wiley.com/doi/abs/10.1002/mrm.27852\" rel=\"nofollow\">[Ebner2019]</a> Ebner, M., Patel, P. A., Atkinson, D., Caselton, C., Firmin, F., Amin, Z., Bainbridge, A., De Coppi, P., Taylor, S. A., Ourselin, S., Chouhan, M. D., &amp; Vercauteren, T. (2019). Super\u2010resolution for upper abdominal MRI: Acquisition and post\u2010processing protocol optimization using brain MRI control data and expert reader validation. Magnetic Resonance in Medicine.</li>\n<li><a href=\"http://link.springer.com/10.1007/978-3-030-00928-1_36\" rel=\"nofollow\">[EbnerWang2018]</a> Ebner, M., Wang, G., Li, W., Aertsen, M., Patel, P. A., Melbourne, A., Doel, T., David, A. L., Deprest, J., Ourselin, S., &amp; Vercauteren, T. (2018). An Automated Localization, Segmentation and Reconstruction Framework for Fetal Brain MRI. In Medical Image Computing and Computer-Assisted Intervention -- MICCAI 2018 (pp. 313\u2013320). Springer</li>\n<li><a href=\"https://www.sciencedirect.com/science/article/pii/S1053811917308042\" rel=\"nofollow\">[Ebner2018]</a> Ebner, M., Chung, K. K., Prados, F., Cardoso, M. J., Chard, D. T., Vercauteren, T., &amp; Ourselin, S. (2018). Volumetric reconstruction from printed films: Enabling 30 year longitudinal analysis in MR neuroimaging. NeuroImage, 165, 238\u2013250.</li>\n<li><a href=\"https://www.spiedigitallibrary.org/journals/Journal_of_Biomedical_Optics/volume-22/issue-11/116006/Wide-field-spectrally-resolved-quantitative-fluorescence-imaging-system--toward/10.1117/1.JBO.22.11.116006.full\" rel=\"nofollow\">[Xie2017]</a> Xie, Y., Thom, M., Ebner, M., Wykes, V., Desjardins, A., Miserocchi, A., Ourselin, S., McEvoy, A. W., and Vercauteren, T. (2017). Wide-field spectrally resolved quantitative fluorescence imaging system: toward neurosurgical guidance in glioma resection. Journal of Biomedical Optics, 22(11).</li>\n<li><a href=\"https://mski2017.files.wordpress.com/2017/09/miccai-mski2017.pdf\" rel=\"nofollow\">[Ranzini2017]</a> Ranzini, M. B., Ebner, M., Cardoso, M. J., Fotiadou, A., Vercauteren, T., Henckel, J., Hart, A., Ourselin, S., and Modat, M. (2017). Joint Multimodal Segmentation of Clinical CT and MR from Hip Arthroplasty Patients. MICCAI Workshop on Computational Methods and Clinical Applications in Musculoskeletal Imaging (MSKI) 2017.</li>\n<li><a href=\"https://link.springer.com/chapter/10.1007%2F978-3-319-52280-7_1\" rel=\"nofollow\">[Ebner2017]</a> Ebner, M., Chouhan, M., Patel, P. A., Atkinson, D., Amin, Z., Read, S., Punwani, S., Taylor, S., Vercauteren, T., and Ourselin, S. (2017). Point-Spread-Function-Aware Slice-to-Volume Registration: Application to Upper Abdominal MRI Super-Resolution. In Zuluaga, M. A., Bhatia, K., Kainz, B., Moghari, M. H., and Pace, D. F., editors, Reconstruction, Segmentation, and Analysis of Medical Images. RAMBO 2016, volume 10129 of Lecture Notes in Computer Science, pages 3\u201313. Springer International Publishing.</li>\n</ul>\n\n          </div>"}, "last_serial": 5662010, "releases": {"0.1.10": [{"comment_text": "", "digests": {"md5": "9eb851bf752c1ff1bb4e8cb5df6573e5", "sha256": "dead814d02672bc267522dad12afa68e08a27648ef3232060fe36ea4aa4e1cf1"}, "downloads": -1, "filename": "NSoL-0.1.10.tar.gz", "has_sig": false, "md5_digest": "9eb851bf752c1ff1bb4e8cb5df6573e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63650, "upload_time": "2019-03-24T01:19:55", "upload_time_iso_8601": "2019-03-24T01:19:55.521079Z", "url": "https://files.pythonhosted.org/packages/31/2e/2af4e7949ed90b73d29155fb5a423b1f605caf3feafeec2cca408191bf2c/NSoL-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "946936daa3ffaba1c73e38250a872d83", "sha256": "07ddfaf408ad52aa4eecce4c6934443b0831566191fe1b121291c2e2692cff2c"}, "downloads": -1, "filename": "NSoL-0.1.11.tar.gz", "has_sig": false, "md5_digest": "946936daa3ffaba1c73e38250a872d83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63668, "upload_time": "2019-03-24T14:08:45", "upload_time_iso_8601": "2019-03-24T14:08:45.988064Z", "url": "https://files.pythonhosted.org/packages/bc/9e/1cca8caf014285197ca9253a6bd7577bddea7ac9e0185a4d0f7282082e3a/NSoL-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "ce85c525c896056657e12d338dd0f9b4", "sha256": "510d8615e65ccedc1d8415e1f434da4d62c832e42eb3a03b570f58cffed62e10"}, "downloads": -1, "filename": "NSoL-0.1.12.tar.gz", "has_sig": false, "md5_digest": "ce85c525c896056657e12d338dd0f9b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64140, "upload_time": "2019-03-28T16:27:00", "upload_time_iso_8601": "2019-03-28T16:27:00.502988Z", "url": "https://files.pythonhosted.org/packages/a6/5d/872bb23b7fb09129cc3f38d7d507a921c91939dc89e93d0d11150d5e3649/NSoL-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "fb222ff96f58a595fd63a246c96895b9", "sha256": "cd0b6ca31486550a96f2a5e6433f40fbc0a9a413f7f63b5bea2088c1acfa0a58"}, "downloads": -1, "filename": "NSoL-0.1.13.tar.gz", "has_sig": false, "md5_digest": "fb222ff96f58a595fd63a246c96895b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64694, "upload_time": "2019-07-26T10:54:46", "upload_time_iso_8601": "2019-07-26T10:54:46.970789Z", "url": "https://files.pythonhosted.org/packages/77/94/257756dd27c4569e818ed43c7db1ad9f5fb894b716796c4bc949d7a1773a/NSoL-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "053cabc44b8cba10817b38c599c35c3e", "sha256": "f2c9dc35a586073a6a06df10f6ea5a3ba83164f793a4aff49e4dd44c06a0aeef"}, "downloads": -1, "filename": "NSoL-0.1.14.tar.gz", "has_sig": false, "md5_digest": "053cabc44b8cba10817b38c599c35c3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64808, "upload_time": "2019-08-11T12:25:53", "upload_time_iso_8601": "2019-08-11T12:25:53.787269Z", "url": "https://files.pythonhosted.org/packages/e7/9f/31ce1ad828217cfc793130a2e4820fea994a24733bad8b4846667d54ff81/NSoL-0.1.14.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "f9778177143f2b07f1bd4431e188691d", "sha256": "518891f9854c934c6ecbcc4f4e5712667617fe4a3371b178c6a09d9b4477cc13"}, "downloads": -1, "filename": "NSoL-0.1.6.tar.gz", "has_sig": false, "md5_digest": "f9778177143f2b07f1bd4431e188691d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57964, "upload_time": "2019-01-15T23:42:30", "upload_time_iso_8601": "2019-01-15T23:42:30.767626Z", "url": "https://files.pythonhosted.org/packages/b4/11/835fc8da125c535fed063e576cf746fb4bd69afcdc8edb2d3b08eaa43138/NSoL-0.1.6.tar.gz", "yanked": false}], "0.1.6.2": [{"comment_text": "", "digests": {"md5": "8e14a8672f468b7de732cba9a0cbd74b", "sha256": "38ac03ba8772b6d452427c2eb2c1789af7465c06eef2165fdf19f918f8962a32"}, "downloads": -1, "filename": "NSoL-0.1.6.2.tar.gz", "has_sig": false, "md5_digest": "8e14a8672f468b7de732cba9a0cbd74b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58533, "upload_time": "2019-02-10T13:13:13", "upload_time_iso_8601": "2019-02-10T13:13:13.671439Z", "url": "https://files.pythonhosted.org/packages/48/6f/23d8a1969bd4cf197bbd9e76e06f5007af063280676b5fc3d175ab066d69/NSoL-0.1.6.2.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "9f22045d453279160bad9e4a6ab812c5", "sha256": "ec69409f639f525663c10df982f3a7259e244510f97eebffef5b915908767f0f"}, "downloads": -1, "filename": "NSoL-0.1.7.tar.gz", "has_sig": false, "md5_digest": "9f22045d453279160bad9e4a6ab812c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58547, "upload_time": "2019-02-10T13:13:38", "upload_time_iso_8601": "2019-02-10T13:13:38.250783Z", "url": "https://files.pythonhosted.org/packages/d5/e5/c559a70ce8668dc77350c44751cf4366af7ba90872bc22e6d9b47d04e147/NSoL-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "e9bc070e9229ab07881cdec889b3650b", "sha256": "8d86c92cc89d9eebaf7ceca77c159f73ae0a7c29792e0a29ca82a4e59c81058e"}, "downloads": -1, "filename": "NSoL-0.1.8.tar.gz", "has_sig": false, "md5_digest": "e9bc070e9229ab07881cdec889b3650b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62480, "upload_time": "2019-02-20T16:25:54", "upload_time_iso_8601": "2019-02-20T16:25:54.215297Z", "url": "https://files.pythonhosted.org/packages/2b/1c/3e42efcff97b5f9b86bb213e10ccc72a83be82f6bde65594ba6da7d65178/NSoL-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "cbbebcd9509ce2e45a2383bcfea1292f", "sha256": "2832212f057d7b09d42c4a9b3f91280708e2223f782546faab141992a9f0a247"}, "downloads": -1, "filename": "NSoL-0.1.9.tar.gz", "has_sig": false, "md5_digest": "cbbebcd9509ce2e45a2383bcfea1292f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63342, "upload_time": "2019-03-21T15:02:39", "upload_time_iso_8601": "2019-03-21T15:02:39.325187Z", "url": "https://files.pythonhosted.org/packages/8e/e4/7836ed857c014f13e08a4966f22ef51eff44b1be82ae0d3224e4bee15cfa/NSoL-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "053cabc44b8cba10817b38c599c35c3e", "sha256": "f2c9dc35a586073a6a06df10f6ea5a3ba83164f793a4aff49e4dd44c06a0aeef"}, "downloads": -1, "filename": "NSoL-0.1.14.tar.gz", "has_sig": false, "md5_digest": "053cabc44b8cba10817b38c599c35c3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64808, "upload_time": "2019-08-11T12:25:53", "upload_time_iso_8601": "2019-08-11T12:25:53.787269Z", "url": "https://files.pythonhosted.org/packages/e7/9f/31ce1ad828217cfc793130a2e4820fea994a24733bad8b4846667d54ff81/NSoL-0.1.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:25 2020"}