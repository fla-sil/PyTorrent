{"info": {"author": "Alex (Oleksii) Markov", "author_email": "alex@markovs.me", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Clustering", "Topic :: System :: Software Distribution", "Topic :: System :: Systems Administration"], "description": "fabric-docker\r\n=============\r\n\r\nDocker-engine command-line tool wrapper for Fabric.\r\n\r\nCan be used both in local and remote modes (via subprocess or ssh).\r\n\r\nMethod names and options try to use the same names as related docker-engine\r\ncommands and options.\r\n\r\nSo, it is mainly a helper to write:\r\n\r\n.. code-block:: python\r\n\r\n    docker.ps(all=True, size=True)\r\n\r\ninstead of:\r\n\r\n.. code-block:: python\r\n\r\n    run('docker ps --all --size')\r\n\r\nWith some nice use cases:\r\n\r\n.. code-block:: python\r\n\r\n    # remove dangling images \"<none>:<none>\"\r\n    docker.rmi(docker.none_images())\r\n\r\n    # remove images by some filter\r\n    images = [\r\n        image['image id'] for image in docker.images()\r\n        if image['tag'] != 'latest'\r\n    ]\r\n    docker.rmi(images)\r\n\r\n\r\nRequirements\r\n------------\r\n\r\n* Docker (local or remote - depending the mode you use)\r\n* Fabric\r\n* pyyaml\r\n\r\n\r\nSupported commands\r\n------------------\r\n\r\nOnly limited set of commands and options are supported now:\r\n\r\n* cli - run arbitrary Docker command. i.e. ``docker.cli('ps -a')``\r\n* images\r\n* ps\r\n* restart\r\n* rm\r\n* rmi\r\n* run - limited set of options\r\n* start\r\n* stop\r\n* version\r\n* none_images - helper method to get \"dangling\" images\r\n\r\n\r\nInstall\r\n-------\r\n\r\n.. code::\r\n\r\n    pip install fabric-docker\r\n\r\n\r\nUsage\r\n-----\r\n\r\nCreate instance to use locally with sudo:\r\n\r\n.. code-block:: python\r\n\r\n    import fabric_docker\r\n\r\n    docker = fabric_docker.DockerCli(local=True, use_sudo=True)\r\n    # any command can override this default settings by suppling\r\n    # \"local\" and \"sudo\" key-value arguments\r\n\r\nList all local containers:\r\n\r\n.. code-block:: python\r\n\r\n    docker.ps(all=True)\r\n\r\nRemove latest container:\r\n\r\n.. code-block:: python\r\n\r\n    docker.rm(docker.ps(latest=True))\r\n\r\nList remote images (override default local flag):\r\n\r\n.. code-block:: python\r\n\r\n    docker.images(no_truncate=True, local=False)\r\n\r\nRun remote container:\r\n\r\n.. code-block:: python\r\n\r\n    docker.run(\r\n        detach=True,\r\n        restart='always',\r\n        publish={'8080':'80'},\r\n        volume={'/host/dir': '/container/dir', '/host/dir2': '/container/dir2'},\r\n        name='name_of_container',\r\n        image='image_name:tag',\r\n    )", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/malexer/fabric-docker", "keywords": "fabric fabfile docker docker-engine", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fabric-docker", "package_url": "https://pypi.org/project/fabric-docker/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fabric-docker/", "project_urls": {"Homepage": "https://github.com/malexer/fabric-docker"}, "release_url": "https://pypi.org/project/fabric-docker/0.1/", "requires_dist": ["fabric", "pyyaml"], "requires_python": "", "summary": "Docker command-line tool wrapper for Fabric.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Docker-engine command-line tool wrapper for Fabric.</p>\n<p>Can be used both in local and remote modes (via subprocess or ssh).</p>\n<p>Method names and options try to use the same names as related docker-engine\ncommands and options.</p>\n<p>So, it is mainly a helper to write:</p>\n<pre><span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">ps</span><span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>instead of:</p>\n<pre><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'docker ps --all --size'</span><span class=\"p\">)</span>\n</pre>\n<p>With some nice use cases:</p>\n<pre><span class=\"c1\"># remove dangling images \"&lt;none&gt;:&lt;none&gt;\"</span>\n<span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">rmi</span><span class=\"p\">(</span><span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">none_images</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># remove images by some filter</span>\n<span class=\"n\">images</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">'image id'</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">image</span> <span class=\"ow\">in</span> <span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">images</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">image</span><span class=\"p\">[</span><span class=\"s1\">'tag'</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"s1\">'latest'</span>\n<span class=\"p\">]</span>\n<span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">rmi</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"p\">)</span>\n</pre>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Docker (local or remote - depending the mode you use)</li>\n<li>Fabric</li>\n<li>pyyaml</li>\n</ul>\n</div>\n<div id=\"supported-commands\">\n<h2>Supported commands</h2>\n<p>Only limited set of commands and options are supported now:</p>\n<ul>\n<li>cli - run arbitrary Docker command. i.e. <tt><span class=\"pre\">docker.cli('ps</span> <span class=\"pre\">-a')</span></tt></li>\n<li>images</li>\n<li>ps</li>\n<li>restart</li>\n<li>rm</li>\n<li>rmi</li>\n<li>run - limited set of options</li>\n<li>start</li>\n<li>stop</li>\n<li>version</li>\n<li>none_images - helper method to get \u201cdangling\u201d images</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install fabric-docker\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create instance to use locally with sudo:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fabric_docker</span>\n\n<span class=\"n\">docker</span> <span class=\"o\">=</span> <span class=\"n\">fabric_docker</span><span class=\"o\">.</span><span class=\"n\">DockerCli</span><span class=\"p\">(</span><span class=\"n\">local</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">use_sudo</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># any command can override this default settings by suppling</span>\n<span class=\"c1\"># \"local\" and \"sudo\" key-value arguments</span>\n</pre>\n<p>List all local containers:</p>\n<pre><span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">ps</span><span class=\"p\">(</span><span class=\"nb\">all</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Remove latest container:</p>\n<pre><span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">rm</span><span class=\"p\">(</span><span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">ps</span><span class=\"p\">(</span><span class=\"n\">latest</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n</pre>\n<p>List remote images (override default local flag):</p>\n<pre><span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">images</span><span class=\"p\">(</span><span class=\"n\">no_truncate</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">local</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Run remote container:</p>\n<pre><span class=\"n\">docker</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span>\n    <span class=\"n\">detach</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">restart</span><span class=\"o\">=</span><span class=\"s1\">'always'</span><span class=\"p\">,</span>\n    <span class=\"n\">publish</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'8080'</span><span class=\"p\">:</span><span class=\"s1\">'80'</span><span class=\"p\">},</span>\n    <span class=\"n\">volume</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'/host/dir'</span><span class=\"p\">:</span> <span class=\"s1\">'/container/dir'</span><span class=\"p\">,</span> <span class=\"s1\">'/host/dir2'</span><span class=\"p\">:</span> <span class=\"s1\">'/container/dir2'</span><span class=\"p\">},</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'name_of_container'</span><span class=\"p\">,</span>\n    <span class=\"n\">image</span><span class=\"o\">=</span><span class=\"s1\">'image_name:tag'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2037759, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a856b94a06243caa64b620a8addaf7c8", "sha256": "0cf7cfda8f8b448d9910341d6c8bb0921aa1d04b8639880026a6854fc79356f3"}, "downloads": -1, "filename": "fabric-docker-0.1.tar.gz", "has_sig": false, "md5_digest": "a856b94a06243caa64b620a8addaf7c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5303, "upload_time": "2016-03-14T13:17:45", "upload_time_iso_8601": "2016-03-14T13:17:45.960222Z", "url": "https://files.pythonhosted.org/packages/a3/fa/6b57b2732bcaadc23a2058428e7debc6fe53966528b71d9cb0de0b71732f/fabric-docker-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a856b94a06243caa64b620a8addaf7c8", "sha256": "0cf7cfda8f8b448d9910341d6c8bb0921aa1d04b8639880026a6854fc79356f3"}, "downloads": -1, "filename": "fabric-docker-0.1.tar.gz", "has_sig": false, "md5_digest": "a856b94a06243caa64b620a8addaf7c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5303, "upload_time": "2016-03-14T13:17:45", "upload_time_iso_8601": "2016-03-14T13:17:45.960222Z", "url": "https://files.pythonhosted.org/packages/a3/fa/6b57b2732bcaadc23a2058428e7debc6fe53966528b71d9cb0de0b71732f/fabric-docker-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:12 2020"}