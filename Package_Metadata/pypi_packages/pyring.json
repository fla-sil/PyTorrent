{"info": {"author": "Jacob Richter", "author_email": "jaycorichter@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PyRing\n\n<p align=\"left\">\n  <img src=\"https://github.com/jaycosaur/pyring/workflows/Build%20and%20Test/badge.svg\">\n</p>\n\nA pure python implementation of a ring buffer with optional factory for alternate memory allocation. Variants included are Blocking (with a read cursor) and Locked (all manipulations are secured with a lock) ring buffers.\n\n<p align=\"center\">\n  <img width=\"200\" height=\"200\" src=\"https://github.com/jaycosaur/pyring/blob/master/img/pyring.png\">\n</p>\n\nYou may not call it a ring buffer, they also go by other names like circular buffer, circular queue or cyclic buffer.\n\n## Installation\n\n`python3 -m pip install pyring`\n\n## Usage\n\nIncluded are several variations of a ring buffer:\n\n1. **RingBuffer** - The most basic, non-blocking ring, supports optional RLocks as constructor argument.\n2. **LockedRingBuffer** - The same as `RingBuffer` but secured by a lock (handy for multithread / multiproc)\n3. **BlockingRingBuffer** - Extension of `RingBuffer` with a read method `next()` which increments a read cursor and the writer cannot advance past the read cursor\n4. **BlockingLockedRingBuffer** - The same as `BlockingRingBuffer` but secured by a lock (handy for multithread / multiproc)\n5. **WaitingBlockingRingBuffer** - The same as `BlockingRingBuffer` but calls to next and put block and wait (with optional timeout arg)\n6. **SingleProducerDisruptor** - The same as `WaitingBlockingRingBuffer` but allows multiple subscribers to a single ring buffer by calling `subscribe()` which returns a `DisruptorSubscriber` object. No next method on disruptor, instead it is on the `DisruptorSubscriber` objects.\n\n### Basic usage with default size and factory\n\n```python\nimport pyring\n\n# create ring buffer\nring_buffer = pyring.RingBuffer()\n\n# add to ring\nring_buffer.put(\"Something new!\")\n\n# get latest from ring\nsequence, value = ring_buffer.get_latest()\nprint(sequence, value) # 0 Something new!\n```\n\n### Custom ring size\n\n```python\nimport pyring\n\nring_buffer = pyring.RingBuffer(size=128) # size must be a power of 2\n```\n\n### Custom factory\n\n```python\nimport pyring\n\n# custom factory that takes lists of ints and returns the sum\n# must declare the get and set methods\nclass CustomSumFactory(pyring.RingFactory):\n    value: typing.List[int] = []\n\n    def get(self):\n        return sum(self.value)\n\n    def set(self, values):\n        self.value = values\n\nring_buffer = pyring.RingBuffer(factory=CustomSumFactory)\n\nring_buffer.put([1,2,3,4,5])\n\nsequence, value = ring_buffer.get_latest()\n\nprint(sequence, value) # 0 15\n```\n\n### Multiprocess C-Types Example\n\nThe below is a demonstration of using a RingBuffer across multiple processes, this requires firstly a LockedRingBuffer (with a multiproc lock), in addition to a custom cursor_position_value to increment sequence counts across processes.\n\nThis is more a demonstration on how flexible this ring buffer implementation can be rather than where you should use it, the below approach would most likely (with caveats on datasize) be better handled with threads reading off the ring buffer and passing messages via queues to worker processes.\n\n```python\nimport multiprocessing as mp\nimport time\nfrom pyring import LockedRingBuffer, RingFactory\n\n# using r lock due to the reuse for the cursor_position_value\nmp_lock = mp.RLock()\n\n# note if using the same lock it must be recursive lock otherwise you will get deadlocks\ncursor_position_value = mp.Value(\"i\", 0, lock=mp_lock)\n\n# using multiproc compatible c-types.\nclass MultiprocFactory(RingFactory):\n    def __init__(self):\n        self.value = mp.Value(\"i\")\n\n    def set(self, v: int):\n        self.value.value = v\n\n    def get(self):\n        return self.value.value\n\n\nring_buffer = LockedRingBuffer(\n    factory=MultiprocFactory, lock=mp_lock, cursor_position_value=cursor_position_value\n)\n\n\ndef worker_routine(worker_ring_buffer: LockedRingBuffer):\n    for i in range(10):\n        worker_ring_buffer.put(i)\n\n\nproc = mp.Process(target=worker_routine, args=(ring_buffer,))\nproc.start()\ntime.sleep(0.01)\n\nfor i in range(10):\n    sequence, value = ring_buffer.get(i)\n    print(sequence, value)\n\nproc.join()\n```\n\n### Single Producer Disruptor (Multiple Subscribers)\n\n```python\nfrom pyring import SingleProducerDisruptor\n\ndisruptor = SingleProducerDisruptor()\n\nsubscriber_one = disruptor.subscribe()\nsubscriber_two = disruptor.subscribe()\n\nfor i in range(100):\n    disruptor.put(i ** 2)\n    sequence_one, res_one = subscriber_one.next()\n    sequence_two, res_two = subscriber_two.next()\n\n# releases the subscribers barriers and allows disruptor to continue\nsubscriber_one.unregister()\nsubscriber_two.unregister()\n\n```\n\n## Examples of Usage\n\nCOMING SOON\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jaycosaur/pyring", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyring", "package_url": "https://pypi.org/project/pyring/", "platform": "", "project_url": "https://pypi.org/project/pyring/", "project_urls": {"Homepage": "https://github.com/jaycosaur/pyring"}, "release_url": "https://pypi.org/project/pyring/0.0.12/", "requires_dist": null, "requires_python": "", "summary": "A ring buffer (circular buffer, circular queue, cyclic buffer) implemented in pure python. Includes flexible locking, waiting, and Disruptor variants.", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyRing</h1>\n<p align=\"left\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f191e8d22f8dc34555acbad89d8d1dcdc0522b2f/68747470733a2f2f6769746875622e636f6d2f6a6179636f736175722f707972696e672f776f726b666c6f77732f4275696c64253230616e64253230546573742f62616467652e737667\">\n</p>\n<p>A pure python implementation of a ring buffer with optional factory for alternate memory allocation. Variants included are Blocking (with a read cursor) and Locked (all manipulations are secured with a lock) ring buffers.</p>\n<p align=\"center\">\n  <img height=\"200\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8e7314e977c37e761ec60061673518eb5d0d75f/68747470733a2f2f6769746875622e636f6d2f6a6179636f736175722f707972696e672f626c6f622f6d61737465722f696d672f707972696e672e706e67\" width=\"200\">\n</p>\n<p>You may not call it a ring buffer, they also go by other names like circular buffer, circular queue or cyclic buffer.</p>\n<h2>Installation</h2>\n<p><code>python3 -m pip install pyring</code></p>\n<h2>Usage</h2>\n<p>Included are several variations of a ring buffer:</p>\n<ol>\n<li><strong>RingBuffer</strong> - The most basic, non-blocking ring, supports optional RLocks as constructor argument.</li>\n<li><strong>LockedRingBuffer</strong> - The same as <code>RingBuffer</code> but secured by a lock (handy for multithread / multiproc)</li>\n<li><strong>BlockingRingBuffer</strong> - Extension of <code>RingBuffer</code> with a read method <code>next()</code> which increments a read cursor and the writer cannot advance past the read cursor</li>\n<li><strong>BlockingLockedRingBuffer</strong> - The same as <code>BlockingRingBuffer</code> but secured by a lock (handy for multithread / multiproc)</li>\n<li><strong>WaitingBlockingRingBuffer</strong> - The same as <code>BlockingRingBuffer</code> but calls to next and put block and wait (with optional timeout arg)</li>\n<li><strong>SingleProducerDisruptor</strong> - The same as <code>WaitingBlockingRingBuffer</code> but allows multiple subscribers to a single ring buffer by calling <code>subscribe()</code> which returns a <code>DisruptorSubscriber</code> object. No next method on disruptor, instead it is on the <code>DisruptorSubscriber</code> objects.</li>\n</ol>\n<h3>Basic usage with default size and factory</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyring</span>\n\n<span class=\"c1\"># create ring buffer</span>\n<span class=\"n\">ring_buffer</span> <span class=\"o\">=</span> <span class=\"n\">pyring</span><span class=\"o\">.</span><span class=\"n\">RingBuffer</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># add to ring</span>\n<span class=\"n\">ring_buffer</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"s2\">\"Something new!\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get latest from ring</span>\n<span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">ring_buffer</span><span class=\"o\">.</span><span class=\"n\">get_latest</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"c1\"># 0 Something new!</span>\n</pre>\n<h3>Custom ring size</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyring</span>\n\n<span class=\"n\">ring_buffer</span> <span class=\"o\">=</span> <span class=\"n\">pyring</span><span class=\"o\">.</span><span class=\"n\">RingBuffer</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">)</span> <span class=\"c1\"># size must be a power of 2</span>\n</pre>\n<h3>Custom factory</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pyring</span>\n\n<span class=\"c1\"># custom factory that takes lists of ints and returns the sum</span>\n<span class=\"c1\"># must declare the get and set methods</span>\n<span class=\"k\">class</span> <span class=\"nc\">CustomSumFactory</span><span class=\"p\">(</span><span class=\"n\">pyring</span><span class=\"o\">.</span><span class=\"n\">RingFactory</span><span class=\"p\">):</span>\n    <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">sum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">values</span>\n\n<span class=\"n\">ring_buffer</span> <span class=\"o\">=</span> <span class=\"n\">pyring</span><span class=\"o\">.</span><span class=\"n\">RingBuffer</span><span class=\"p\">(</span><span class=\"n\">factory</span><span class=\"o\">=</span><span class=\"n\">CustomSumFactory</span><span class=\"p\">)</span>\n\n<span class=\"n\">ring_buffer</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n\n<span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">ring_buffer</span><span class=\"o\">.</span><span class=\"n\">get_latest</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"c1\"># 0 15</span>\n</pre>\n<h3>Multiprocess C-Types Example</h3>\n<p>The below is a demonstration of using a RingBuffer across multiple processes, this requires firstly a LockedRingBuffer (with a multiproc lock), in addition to a custom cursor_position_value to increment sequence counts across processes.</p>\n<p>This is more a demonstration on how flexible this ring buffer implementation can be rather than where you should use it, the below approach would most likely (with caveats on datasize) be better handled with threads reading off the ring buffer and passing messages via queues to worker processes.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span> <span class=\"k\">as</span> <span class=\"nn\">mp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyring</span> <span class=\"kn\">import</span> <span class=\"n\">LockedRingBuffer</span><span class=\"p\">,</span> <span class=\"n\">RingFactory</span>\n\n<span class=\"c1\"># using r lock due to the reuse for the cursor_position_value</span>\n<span class=\"n\">mp_lock</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">RLock</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># note if using the same lock it must be recursive lock otherwise you will get deadlocks</span>\n<span class=\"n\">cursor_position_value</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"s2\">\"i\"</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">lock</span><span class=\"o\">=</span><span class=\"n\">mp_lock</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># using multiproc compatible c-types.</span>\n<span class=\"k\">class</span> <span class=\"nc\">MultiprocFactory</span><span class=\"p\">(</span><span class=\"n\">RingFactory</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"s2\">\"i\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">set</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">v</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">value</span>\n\n\n<span class=\"n\">ring_buffer</span> <span class=\"o\">=</span> <span class=\"n\">LockedRingBuffer</span><span class=\"p\">(</span>\n    <span class=\"n\">factory</span><span class=\"o\">=</span><span class=\"n\">MultiprocFactory</span><span class=\"p\">,</span> <span class=\"n\">lock</span><span class=\"o\">=</span><span class=\"n\">mp_lock</span><span class=\"p\">,</span> <span class=\"n\">cursor_position_value</span><span class=\"o\">=</span><span class=\"n\">cursor_position_value</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">worker_routine</span><span class=\"p\">(</span><span class=\"n\">worker_ring_buffer</span><span class=\"p\">:</span> <span class=\"n\">LockedRingBuffer</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n        <span class=\"n\">worker_ring_buffer</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">proc</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Process</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">worker_routine</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">ring_buffer</span><span class=\"p\">,))</span>\n<span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">ring_buffer</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n<span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</pre>\n<h3>Single Producer Disruptor (Multiple Subscribers)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyring</span> <span class=\"kn\">import</span> <span class=\"n\">SingleProducerDisruptor</span>\n\n<span class=\"n\">disruptor</span> <span class=\"o\">=</span> <span class=\"n\">SingleProducerDisruptor</span><span class=\"p\">()</span>\n\n<span class=\"n\">subscriber_one</span> <span class=\"o\">=</span> <span class=\"n\">disruptor</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">()</span>\n<span class=\"n\">subscriber_two</span> <span class=\"o\">=</span> <span class=\"n\">disruptor</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">):</span>\n    <span class=\"n\">disruptor</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">**</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">sequence_one</span><span class=\"p\">,</span> <span class=\"n\">res_one</span> <span class=\"o\">=</span> <span class=\"n\">subscriber_one</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n    <span class=\"n\">sequence_two</span><span class=\"p\">,</span> <span class=\"n\">res_two</span> <span class=\"o\">=</span> <span class=\"n\">subscriber_two</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># releases the subscribers barriers and allows disruptor to continue</span>\n<span class=\"n\">subscriber_one</span><span class=\"o\">.</span><span class=\"n\">unregister</span><span class=\"p\">()</span>\n<span class=\"n\">subscriber_two</span><span class=\"o\">.</span><span class=\"n\">unregister</span><span class=\"p\">()</span>\n</pre>\n<h2>Examples of Usage</h2>\n<p>COMING SOON</p>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6901447, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "076596c7e69c079a8f4cf0ab702e9f12", "sha256": "cb835e8460e6598fb9664052d1920d3253fe2e2bfb9b8c95af2aaad8ed82fe5e"}, "downloads": -1, "filename": "pyring-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "076596c7e69c079a8f4cf0ab702e9f12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5636, "upload_time": "2020-03-24T03:55:00", "upload_time_iso_8601": "2020-03-24T03:55:00.220238Z", "url": "https://files.pythonhosted.org/packages/0e/fa/795ea1d5c8aadc78643aa1768045ca525cd1fe085010be1abf814bdbc288/pyring-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9276d3080a9bc292722b8ddfe26575e7", "sha256": "32dd19c736b13a419d4ef86c2f6f86280e60ddd91d62327a49e14c9c4c506563"}, "downloads": -1, "filename": "pyring-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9276d3080a9bc292722b8ddfe26575e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3301, "upload_time": "2020-03-24T03:55:02", "upload_time_iso_8601": "2020-03-24T03:55:02.998156Z", "url": "https://files.pythonhosted.org/packages/15/08/0f9a25d686e5339eaee8adc0d52d60b3764185d4de8598e7944fdf22aad7/pyring-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "8cb69ecb4a5faa91195601512301a788", "sha256": "d4e616da6a8c5b18486780faa94e34c25c9f041419caa6fd0229b65c75295024"}, "downloads": -1, "filename": "pyring-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "8cb69ecb4a5faa91195601512301a788", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12097, "upload_time": "2020-03-28T10:39:29", "upload_time_iso_8601": "2020-03-28T10:39:29.618035Z", "url": "https://files.pythonhosted.org/packages/61/9f/44fd5f94a2b3b43bc8727b84588a61942755b2e403f3b10737ae7f6a6c51/pyring-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8cd6aab368f913f47223d1e7f489e07", "sha256": "845b5d1cd7971339027b81bcf2f96285019e0630a73a0742c02ec87f7f3c7ae1"}, "downloads": -1, "filename": "pyring-0.0.10.tar.gz", "has_sig": false, "md5_digest": "f8cd6aab368f913f47223d1e7f489e07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9725, "upload_time": "2020-03-28T10:39:30", "upload_time_iso_8601": "2020-03-28T10:39:30.847197Z", "url": "https://files.pythonhosted.org/packages/3f/12/ac688190a6d035ab553986e0e6d5c333dd44b7e2db3f29e24ea59198cb21/pyring-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "60f2c97a9b660033c7fa767ca3141eb5", "sha256": "df2bef1ae5fa2f3a438784d7778a3743e201721969e5041d64a8ed01cf362c3c"}, "downloads": -1, "filename": "pyring-0.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "60f2c97a9b660033c7fa767ca3141eb5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12219, "upload_time": "2020-03-28T11:01:56", "upload_time_iso_8601": "2020-03-28T11:01:56.501922Z", "url": "https://files.pythonhosted.org/packages/4b/bb/9f75502bd5798ba6b712a6ea70882786f055300385b53dd69c54de22e59e/pyring-0.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50e30e91b1a837b20543124389e2808d", "sha256": "2fefcef3324bc4e46d614a9fc1b2a4f516b56aedde374594ad500aad83407ecd"}, "downloads": -1, "filename": "pyring-0.0.11.tar.gz", "has_sig": false, "md5_digest": "50e30e91b1a837b20543124389e2808d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9889, "upload_time": "2020-03-28T11:01:57", "upload_time_iso_8601": "2020-03-28T11:01:57.624419Z", "url": "https://files.pythonhosted.org/packages/74/b4/e039b6558af6f653a845e1955176a1154cf1f768348168bbb96d3dc8bd4d/pyring-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "3492d7499ac7dfbbac65499a0a6f640a", "sha256": "611f1af3234c2acb1f3411c096c8f6d3f083020412af056d1d3c08cbb89daf5a"}, "downloads": -1, "filename": "pyring-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "3492d7499ac7dfbbac65499a0a6f640a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12253, "upload_time": "2020-03-28T11:18:37", "upload_time_iso_8601": "2020-03-28T11:18:37.662786Z", "url": "https://files.pythonhosted.org/packages/00/03/31ebf9aa930e060313c3c449e88d4ddb36a5e53243e19f03c8d22f9bbf3b/pyring-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30d8b3ed9c95da160c6311bd7054e2a5", "sha256": "c3819a26dee5cb167271d4adaa84790d8f7f2ba80d7d80f1309ac749155124b0"}, "downloads": -1, "filename": "pyring-0.0.12.tar.gz", "has_sig": false, "md5_digest": "30d8b3ed9c95da160c6311bd7054e2a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9961, "upload_time": "2020-03-28T11:18:38", "upload_time_iso_8601": "2020-03-28T11:18:38.875614Z", "url": "https://files.pythonhosted.org/packages/8a/31/dc65b00d12e8d324b635377307140b5c2fccb69b9a06f67e80e0f398ef52/pyring-0.0.12.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f04b79d5a238d5f01fcbea8a005788b7", "sha256": "a1c8778c4039c95d5a1ea45dc8b5859c99a10c77ce772711746e99ecf1c9e424"}, "downloads": -1, "filename": "pyring-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f04b79d5a238d5f01fcbea8a005788b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5643, "upload_time": "2020-03-24T04:05:56", "upload_time_iso_8601": "2020-03-24T04:05:56.467861Z", "url": "https://files.pythonhosted.org/packages/1f/1c/6ef8aae6eca70a659c9906ba417dfd63a104fad5b34d35fe3dce0d6671c9/pyring-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00f78df83be3d31d6ea4e180745ca638", "sha256": "8ffdc34355fcdee9b16be15913003e232342d0d55edba104eb57d9648e6f60bb"}, "downloads": -1, "filename": "pyring-0.0.2.tar.gz", "has_sig": false, "md5_digest": "00f78df83be3d31d6ea4e180745ca638", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3590, "upload_time": "2020-03-24T04:05:57", "upload_time_iso_8601": "2020-03-24T04:05:57.581055Z", "url": "https://files.pythonhosted.org/packages/f7/71/0772f328424f5ca4eb2b3d0429f5c4e7e7dcb6e46a4d7adbcb91e11c738d/pyring-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b2dc3e67f1c493930ec34bb54abe5cf3", "sha256": "c7211d8805b9db97cff232f86d1cf7605fc18aa66f8de9cafd56debb6d6d6e37"}, "downloads": -1, "filename": "pyring-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b2dc3e67f1c493930ec34bb54abe5cf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7151, "upload_time": "2020-03-24T07:24:38", "upload_time_iso_8601": "2020-03-24T07:24:38.291435Z", "url": "https://files.pythonhosted.org/packages/b2/80/d4e1703f119078b21eb5b7c739a31946ec29d4e24651f1ebafa656e988b2/pyring-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4e098e24e5fe9630e9642a8a551d9ba", "sha256": "6221434b2e8bf027e1a78de6b3ee65e074b60e304022b6824d4b9c185e88c563"}, "downloads": -1, "filename": "pyring-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e4e098e24e5fe9630e9642a8a551d9ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4561, "upload_time": "2020-03-24T07:24:39", "upload_time_iso_8601": "2020-03-24T07:24:39.599875Z", "url": "https://files.pythonhosted.org/packages/7b/90/1f0d53475f27b65775132e5a770cef40ff36b4201cb3cc735101bef6fb80/pyring-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ccce29bf1f054b24732d301dff947c76", "sha256": "55cf83c246dbd7e8f5a81bbaed3c762ab1c1135e7fa36fe50e133bb0ca5c96cf"}, "downloads": -1, "filename": "pyring-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ccce29bf1f054b24732d301dff947c76", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8058, "upload_time": "2020-03-26T05:06:15", "upload_time_iso_8601": "2020-03-26T05:06:15.762660Z", "url": "https://files.pythonhosted.org/packages/10/b6/364f07ac64b311cc43932f1d1ee050f996ca1797d2366dff90254fb3f8ec/pyring-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d951093481e6f65d433765ece34b10b0", "sha256": "163ff6f3fb7883e0bc2f1ad3174fe2d63f64771c582cf5921d2b95e166806828"}, "downloads": -1, "filename": "pyring-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d951093481e6f65d433765ece34b10b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5633, "upload_time": "2020-03-26T05:06:16", "upload_time_iso_8601": "2020-03-26T05:06:16.914541Z", "url": "https://files.pythonhosted.org/packages/bc/41/9f9a24ff409217dea7df6a94147f63e598737d2f6e09524fdc4386395a50/pyring-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "109ab56f0dd8228f62a709f28ca35c32", "sha256": "49fbf9b3a94120be8b539416716d4efb396c1cb556bd5906177613e65c18f3d6"}, "downloads": -1, "filename": "pyring-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "109ab56f0dd8228f62a709f28ca35c32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9185, "upload_time": "2020-03-26T06:12:40", "upload_time_iso_8601": "2020-03-26T06:12:40.904970Z", "url": "https://files.pythonhosted.org/packages/a5/13/1597c8f723ff1a1179c8749570a37089acbfb1ed88d0a93b1e5e14e27b5e/pyring-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "154eae92364b1fe2091161936063f6ec", "sha256": "6789c803654fcc4e7f6305a4e491d29094561bbf629d7e6e9ed50692ffc6071d"}, "downloads": -1, "filename": "pyring-0.0.5.tar.gz", "has_sig": false, "md5_digest": "154eae92364b1fe2091161936063f6ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6784, "upload_time": "2020-03-26T06:12:41", "upload_time_iso_8601": "2020-03-26T06:12:41.953038Z", "url": "https://files.pythonhosted.org/packages/5c/ba/ccd369ca07261037b0862d26e5617eb99d7ddb8e7eb04730608a0dd0d3c8/pyring-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "6596a091dd38ffb10a7c890f9a43d1e8", "sha256": "0d733a964ba810c513cbad2e22df431908ed6cad226da71514f45dc118902433"}, "downloads": -1, "filename": "pyring-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6596a091dd38ffb10a7c890f9a43d1e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9388, "upload_time": "2020-03-27T02:25:52", "upload_time_iso_8601": "2020-03-27T02:25:52.619671Z", "url": "https://files.pythonhosted.org/packages/92/69/45146ba42b5f0fdf021e25ed98d0fb5a619684ec77506dbfa216b7fe8e99/pyring-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c45c382c529d2928cddc45afc85a479b", "sha256": "3fe24a14393f77709f766ddb441d85b60c35426aeca25149cf7193884a21be6c"}, "downloads": -1, "filename": "pyring-0.0.6.tar.gz", "has_sig": false, "md5_digest": "c45c382c529d2928cddc45afc85a479b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6988, "upload_time": "2020-03-27T02:25:53", "upload_time_iso_8601": "2020-03-27T02:25:53.822303Z", "url": "https://files.pythonhosted.org/packages/aa/86/11acd6084a8d0d38dd9a97d8dd37358c9f689da8d02e8e229ccdf2575a40/pyring-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "7c23ac36b478147290b05421a9b8dbc8", "sha256": "b525d7016a2567f2309afeb34f5beddf62e394c7d93bff80ee660c603f18da66"}, "downloads": -1, "filename": "pyring-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7c23ac36b478147290b05421a9b8dbc8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12013, "upload_time": "2020-03-28T06:35:56", "upload_time_iso_8601": "2020-03-28T06:35:56.423013Z", "url": "https://files.pythonhosted.org/packages/69/2b/792a296353c854a5e711cffadbf6899e42d5a5bd9929831645b8c9315620/pyring-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f25f2e1f9ad1d082f5b325c29f7ee3e", "sha256": "4d701638d9360ecff59b2ff1966f3fd0b91c2c83fdb08cc6fcc8cf9aa90baa0c"}, "downloads": -1, "filename": "pyring-0.0.7.tar.gz", "has_sig": false, "md5_digest": "2f25f2e1f9ad1d082f5b325c29f7ee3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9659, "upload_time": "2020-03-28T06:35:57", "upload_time_iso_8601": "2020-03-28T06:35:57.650941Z", "url": "https://files.pythonhosted.org/packages/58/b2/34b094fc51e1df776a60fe34f5cdc9609e561305fae47de1baa0f7564f49/pyring-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3492d7499ac7dfbbac65499a0a6f640a", "sha256": "611f1af3234c2acb1f3411c096c8f6d3f083020412af056d1d3c08cbb89daf5a"}, "downloads": -1, "filename": "pyring-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "3492d7499ac7dfbbac65499a0a6f640a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12253, "upload_time": "2020-03-28T11:18:37", "upload_time_iso_8601": "2020-03-28T11:18:37.662786Z", "url": "https://files.pythonhosted.org/packages/00/03/31ebf9aa930e060313c3c449e88d4ddb36a5e53243e19f03c8d22f9bbf3b/pyring-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30d8b3ed9c95da160c6311bd7054e2a5", "sha256": "c3819a26dee5cb167271d4adaa84790d8f7f2ba80d7d80f1309ac749155124b0"}, "downloads": -1, "filename": "pyring-0.0.12.tar.gz", "has_sig": false, "md5_digest": "30d8b3ed9c95da160c6311bd7054e2a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9961, "upload_time": "2020-03-28T11:18:38", "upload_time_iso_8601": "2020-03-28T11:18:38.875614Z", "url": "https://files.pythonhosted.org/packages/8a/31/dc65b00d12e8d324b635377307140b5c2fccb69b9a06f67e80e0f398ef52/pyring-0.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:46 2020"}