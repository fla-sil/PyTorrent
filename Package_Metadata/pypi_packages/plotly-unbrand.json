{"info": {"author": "Arne K\u00fcderle", "author_email": "a.kuederle@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Programming Language :: Python :: 3.5"], "description": "# Plotly Unbrand\n\nDear Plotly-Team,\n\nI love you and your library, but sometimes, I do not openly want to show my love.\nSometimes, when working with a customer or when embedding a plot into a talk, I don't want to have multiple links to your online platform directly next to my data.\nLuckily, you seem to be very understanding about this and made it possible for me to remove all traces of your brand (besides the trademark beautiful esthetics, of course) from my plots.\nI can just pass this into the config of each plotting call:\n\n```python\nfrom plotly.plotly import plot\n\nUNBRAND_CONFIG = dict(modeBarButtonsToRemove=['sendDataToCloud'], displaylogo=False, showLink=False)\nplot([Scatter(x=[1, 2, 3], y=[3, 1, 6])], config=UNBRAND_CONFIG)\n```\n\nBut sometimes even this is not good enough... I want to be able to do this automatically for all plots in a project (I am so sorry Plotly-Team!).\nTherefore, I created this little package.\nNow I can do this:\n\n```python\nfrom plotly_unbrand import unbrand\nunbrand()\n\nfrom plotly.plotly import plot\n\nplot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])\nplot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])\nplot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])\n```\n... and all my Plots have your logo and links to the cloud platform removed.\n\n## Installation\n\n```\npip install plotly_unbrand\n```\n\n### Dependencies\n\nYou need to have plotly installed of course...\n\n## Usage\n\nSimple! Import `unbrand` and ran it **before** the first plotly import:\n```python\nfrom plotly_unbrand import unbrand\nunbrand()\n\nfrom plotly.plotly import plot\n\nplot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])\nplot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])\nplot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])\n```\n\nThis will work with `plot` and `iplot` in their online and offline variant.\nIt should also work with `cufflings`, though I haven't tested it.\n\n### Wait there is more!\n\nYou can use the tools from this package to inject any global configuration you like!\n\n```python\nfrom plotly_unbrand import decorate_all_plot_functions\n\ndecorate_all_plot_functions(my_custom_config)\n\nfrom plotly.plotly import plot\n...\n```\n\n## But I don't want a separate package just for this?!\n\nDon't worry! The logic is pretty simple and self-explanatory.\nYou can just copy the decorator from the `__init__.py` and run the decoration logic manually.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AKuederle/plotly_unbrand", "keywords": "", "license": "LICENSE", "maintainer": "", "maintainer_email": "", "name": "plotly-unbrand", "package_url": "https://pypi.org/project/plotly-unbrand/", "platform": "", "project_url": "https://pypi.org/project/plotly-unbrand/", "project_urls": {"Homepage": "https://github.com/AKuederle/plotly_unbrand"}, "release_url": "https://pypi.org/project/plotly-unbrand/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "A small package to remove the branding from plotly plots", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Plotly Unbrand<br><br>Dear Plotly-Team,<br><br>I love you and your library, but sometimes, I do not openly want to show my love.<br>Sometimes, when working with a customer or when embedding a plot into a talk, I don't want to have multiple links to your online platform directly next to my data.<br>Luckily, you seem to be very understanding about this and made it possible for me to remove all traces of your brand (besides the trademark beautiful esthetics, of course) from my plots.<br>I can just pass this into the config of each plotting call:<br><br>```python<br>from plotly.plotly import plot<br><br>UNBRAND_CONFIG = dict(modeBarButtonsToRemove=['sendDataToCloud'], displaylogo=False, showLink=False)<br>plot([Scatter(x=[1, 2, 3], y=[3, 1, 6])], config=UNBRAND_CONFIG)<br>```<br><br>But sometimes even this is not good enough... I want to be able to do this automatically for all plots in a project (I am so sorry Plotly-Team!).<br>Therefore, I created this little package.<br>Now I can do this:<br><br>```python<br>from plotly_unbrand import unbrand<br>unbrand()<br><br>from plotly.plotly import plot<br><br>plot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])<br>plot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])<br>plot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])<br>```<br>... and all my Plots have your logo and links to the cloud platform removed.<br><br>## Installation<br><br>```<br>pip install plotly_unbrand<br>```<br><br>### Dependencies<br><br>You need to have plotly installed of course...<br><br>## Usage<br><br>Simple! Import `unbrand` and ran it **before** the first plotly import:<br>```python<br>from plotly_unbrand import unbrand<br>unbrand()<br><br>from plotly.plotly import plot<br><br>plot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])<br>plot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])<br>plot([Scatter(x=[1, 2, 3], y=[3, 1, 6])])<br>```<br><br>This will work with `plot` and `iplot` in their online and offline variant.<br>It should also work with `cufflings`, though I haven't tested it.<br><br>### Wait there is more!<br><br>You can use the tools from this package to inject any global configuration you like!<br><br>```python<br>from plotly_unbrand import decorate_all_plot_functions<br><br>decorate_all_plot_functions(my_custom_config)<br><br>from plotly.plotly import plot<br>...<br>```<br><br>## But I don't want a separate package just for this?!<br><br>Don't worry! The logic is pretty simple and self-explanatory.<br>You can just copy the decorator from the `__init__.py` and run the decoration logic manually.\n          </div>"}, "last_serial": 3681834, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3859c7c36f6be25a2cb6ad981264e888", "sha256": "ec4619c6aba9ceee4d183b5e2b52ce2ea10648fe83d255bd64d0024f2b23934d"}, "downloads": -1, "filename": "plotly_unbrand-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3859c7c36f6be25a2cb6ad981264e888", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2939, "upload_time": "2018-03-18T19:23:14", "upload_time_iso_8601": "2018-03-18T19:23:14.996058Z", "url": "https://files.pythonhosted.org/packages/ee/93/9a67a532a344672895558650ffb5ec0aa30de2f2f8b43b746e1be4449426/plotly_unbrand-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "16dfe064c0164460db98a8056f42caf0", "sha256": "3b7b3acaa761ab401e13c55aa92c1bba70baf61416684779e65160f48bee6c00"}, "downloads": -1, "filename": "plotly_unbrand-1.0.1.tar.gz", "has_sig": false, "md5_digest": "16dfe064c0164460db98a8056f42caf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2937, "upload_time": "2018-03-18T21:42:03", "upload_time_iso_8601": "2018-03-18T21:42:03.801489Z", "url": "https://files.pythonhosted.org/packages/18/ee/f767a9a137fc6fcc8a77af2bbe19c91545d41b0a1b9f564a5d89e8ce0f63/plotly_unbrand-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16dfe064c0164460db98a8056f42caf0", "sha256": "3b7b3acaa761ab401e13c55aa92c1bba70baf61416684779e65160f48bee6c00"}, "downloads": -1, "filename": "plotly_unbrand-1.0.1.tar.gz", "has_sig": false, "md5_digest": "16dfe064c0164460db98a8056f42caf0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2937, "upload_time": "2018-03-18T21:42:03", "upload_time_iso_8601": "2018-03-18T21:42:03.801489Z", "url": "https://files.pythonhosted.org/packages/18/ee/f767a9a137fc6fcc8a77af2bbe19c91545d41b0a1b9f564a5d89e8ce0f63/plotly_unbrand-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:35 2020"}