{"info": {"author": "Ionel Cristian M\u0103rie\u0219", "author_email": "contact@ionelmc.ro", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "========\nOverview\n========\n\n\n\nLock context manager implemented via redis SETNX/BLPOP.\n\n* Free software: BSD 2-Clause License\n\nInterface targeted to be exactly like `threading.Lock <http://docs.python.org/2/library/threading.html#threading.Lock>`_.\n\nUsage\n=====\n\nBecause we don't want to require users to share the lock instance across processes you will have to give them names.\n\n.. code-block:: python\n\n    lock = redis_lock.Lock(conn, \"name-of-the-lock\")\n    if lock.acquire(blocking=False):\n        print(\"Got the lock.\")\n        lock.release()\n    else:\n        print(\"Someone else has the lock.\")\n\nLocks as Context Managers\n=========================\n\n.. code-block:: python\n\n    conn = StrictRedis()\n    with redis_lock.Lock(conn, \"name-of-the-lock\"):\n        print(\"Got the lock. Doing some work ...\")\n        time.sleep(5)\n\n\nYou can also associate an identifier along with the lock so that it can be retrieved later by the same process, or by a\ndifferent one. This is useful in cases where the application needs to identify the lock owner (find out who currently\nowns the lock).\n\n.. code-block:: python\n\n    import socket\n    host_id = \"owned-by-%s\" % socket.gethostname()\n    lock = redis_lock.Lock(conn, \"name-of-the-lock\", id=host_id)\n    if lock.acquire(blocking=False):\n        assert lock.locked() is True\n        print(\"Got the lock.\")\n        lock.release()\n    else:\n        if lock.get_owner_id() == host_id:\n            print(\"I already acquired this in another process.\")\n        else:\n            print(\"The lock is held on another machine.\")\n\n\nAvoid dogpile effect in django\n------------------------------\n\nThe dogpile is also known as the thundering herd effect or cache stampede. Here's a pattern to avoid the problem\nwithout serving stale data. The work will be performed a single time and every client will wait for the fresh data.\n\nTo use this you will need `django-redis <https://github.com/niwibe/django-redis>`_, however, ``python-redis-lock``\nprovides you a cache backend that has a cache method for your convenience. Just install ``python-redis-lock`` like\nthis:\n\n.. code-block:: bash\n\n    pip install \"python-redis-lock[django]\"\n\nNow put something like this in your settings:\n\n.. code-block:: python\n\n    CACHES = {\n        'default': {\n            'BACKEND': 'redis_lock.django_cache.RedisCache',\n            'LOCATION': 'redis://127.0.0.1:6379/1',\n            'OPTIONS': {\n                'CLIENT_CLASS': 'django_redis.client.DefaultClient'\n            }\n        }\n    }\n\n.. note::\n    If using a `django-redis` < `3.8.x`, you'll probably need `redis_cache`\n    which has been deprecated in favor to `django_redis`. The `redis_cache`\n    module is removed in `django-redis` versions > `3.9.x`. See `django-redis notes <http://niwinz.github.io/django-redis/latest/#_configure_as_cache_backend>`_.\n\n\nThis backend just adds a convenient ``.lock(name, expire=None)`` function to django-redis's cache backend.\n\nYou would write your functions like this:\n\n.. code-block:: python\n\n    from django.core.cache import cache\n\n    def function():\n        val = cache.get(key)\n        if not val:\n            with cache.lock(key):\n                val = cache.get(key)\n                if not val:\n                    # DO EXPENSIVE WORK\n                    val = ...\n                    cache.set(key, value)\n        return val\n\n\nTroubleshooting\n---------------\n\nIn some cases, the lock remains in redis forever (like a server blackout / redis or application crash / an unhandled\nexception). In such cases, the lock is not removed by restarting the application. One solution is to turn on the\n`auto_renewal` parameter in combination with `expire` to set a time-out on the lock, but let `Lock()` automatically\nkeep resetting the expire time while your application code is executing:\n\n.. code-block:: python\n\n    # Get a lock with a 60-second lifetime but keep renewing it automatically\n    # to ensure the lock is held for as long as the Python process is running.\n    with redis_lock.Lock(conn, name='my-lock', expire=60, auto_renewal=True):\n        # Do work....\n\nAnother solution is to use the ``reset_all()`` function when the application starts:\n\n.. code-block:: python\n\n    # On application start/restart\n    import redis_lock\n    redis_lock.reset_all()\n\nAlternatively, you can reset individual locks via the ``reset`` method.\n\nUse these carefully, if you understand what you do.\n\n\nFeatures\n========\n\n* based on the standard SETNX recipe\n* optional expiry\n* optional timeout\n* optional lock renewal (use a low expire but keep the lock active)\n* no spinloops at acquire\n\nImplementation\n==============\n\n``redis_lock`` will use 2 keys for each lock named ``<name>``:\n\n* ``lock:<name>`` - a string value for the actual lock\n* ``lock-signal:<name>`` - a list value for signaling the waiters when the lock is released\n\nThis is how it works:\n\n.. image:: https://raw.github.com/ionelmc/python-redis-lock/master/docs/redis-lock%20diagram%20(v3.0).png\n    :alt: python-redis-lock flow diagram\n\nDocumentation\n=============\n\nhttps://python-redis-lock.readthedocs.org/\n\nDevelopment\n===========\n\nTo run the all tests run::\n\n    tox\n\nRequirements\n============\n\n:OS: Any\n:Runtime: Python 2.7, 3.3 or later, or PyPy\n:Services: Redis 2.6.12 or later.\n\nSimilar projects\n================\n\n* `bbangert/retools <https://github.com/bbangert/retools/blob/master/retools/lock.py>`_ - acquire does spinloop\n* `distributing-locking-python-and-redis <https://chris-lamb.co.uk/posts/distributing-locking-python-and-redis>`_ - acquire does polling\n* `cezarsa/redis_lock <https://github.com/cezarsa/redis_lock/blob/master/redis_lock/__init__.py>`_ - acquire does not block\n* `andymccurdy/redis-py <https://github.com/andymccurdy/redis-py/blob/master/redis/client.py#L2167>`_ - acquire does spinloop\n* `mpessas/python-redis-lock <https://github.com/mpessas/python-redis-lock/blob/master/redislock/lock.py>`_ - blocks fine but no expiration\n\n\nChangelog\n=========\n\n3.5.0 (2020-01-13)\n------------------\n\n* Added a ``locked`` method. Contributed by Artem Slobodkin in `#72 <https://github.com/ionelmc/python-redis-lock/pull/72>`_.\n\n3.4.0 (2019-12-06)\n------------------\n\n* Fixed regression that can cause deadlocks or slowdowns in certain configurations.\n  See: `#71 <https://github.com/ionelmc/python-redis-lock/issues/71>`_.\n\n3.3.1 (2019-01-19)\n------------------\n\n* Fixed failures when running python-redis-lock 3.3 alongside 3.2.\n  See: `#64 <https://github.com/ionelmc/python-redis-lock/issues/64>`_.\n\n3.3.0 (2019-01-17)\n------------------\n\n* Fixed deprecated use of ``warnings`` API. Contributed by Julie MacDonell in\n  `#54 <https://github.com/ionelmc/python-redis-lock/pull/54>`_.\n* Added ``auto_renewal`` option in ``RedisCache.lock`` (the Django cache backend wrapper). Contributed by c\n  in `#55 <https://github.com/ionelmc/python-redis-lock/pull/55>`_.\n* Changed log level for \"%(script)s not cached\" from WARNING to INFO.\n* Added support for using ``decode_responses=True``. Lock keys are pure ascii now.\n\n3.2.0 (2016-10-29)\n------------------\n\n* Changed the signal key cleanup operation do be done without any expires. This prevents lingering keys around for some time.\n  Contributed by Andrew Pashkin in `#38 <https://github.com/ionelmc/python-redis-lock/pull/38>`_.\n* Allow locks with given `id` to acquire. Previously it assumed that if you specify the `id` then the lock was already\n  acquired. See `#44 <https://github.com/ionelmc/python-redis-lock/issues/44>`_ and\n  `#39 <https://github.com/ionelmc/python-redis-lock/issues/39>`_.\n* Allow using other redis clients with a ``strict=False``. Normally you're expected to pass in an instance\n  of ``redis.StrictRedis``.\n* Added convenience method `locked_get_or_set` to Django cache backend.\n\n3.1.0 (2016-04-16)\n------------------\n\n* Changed the auto renewal to automatically stop the renewal thread if lock gets garbage collected. Contributed by\n  Andrew Pashkin in `#33 <https://github.com/ionelmc/python-redis-lock/pull/33>`_.\n\n3.0.0 (2016-01-16)\n------------------\n\n* Changed ``release`` so that it expires signal-keys immediately. Contributed by Andrew Pashkin in `#28\n  <https://github.com/ionelmc/python-redis-lock/pull/28>`_.\n* Resetting locks (``reset`` or ``reset_all``) will release the lock. If there's someone waiting on the reset lock now it will\n  acquire it. Contributed by Andrew Pashkin in `#29 <https://github.com/ionelmc/python-redis-lock/pull/29>`_.\n* Added the ``extend`` method on ``Lock`` objects. Contributed by Andrew Pashkin in `#24\n  <https://github.com/ionelmc/python-redis-lock/pull/24>`_.\n* Documentation improvements on ``release`` method. Contributed by Andrew Pashkin in `#22\n  <https://github.com/ionelmc/python-redis-lock/pull/22>`_.\n* Fixed ``acquire(block=True)`` handling when ``expire`` option was used (it wasn't blocking indefinitely). Contributed by\n  Tero Vuotila in `#35 <https://github.com/ionelmc/python-redis-lock/pull/35>`_.\n* Changed ``release`` to check if lock was acquired with he same id. If not, ``NotAcquired`` will be raised.\n  Previously there was just a check if it was acquired with the same instance (self._held).\n  **BACKWARDS INCOMPATIBLE**\n* Removed the ``force`` option from ``release`` - it wasn't really necessary and it only encourages sloppy programming. See\n  `#25 <https://github.com/ionelmc/python-redis-lock/issues/25>`_.\n  **BACKWARDS INCOMPATIBLE**\n* Dropped tests for Python 2.6. It may work but it is unsupported.\n\n2.3.0 (2015-09-27)\n------------------\n\n* Added the ``timeout`` option. Contributed by Victor Torres in `#20 <https://github.com/ionelmc/python-redis-lock/pull/20>`_.\n\n2.2.0 (2015-08-19)\n------------------\n\n* Added the ``auto_renewal`` option. Contributed by Nick Groenen in `#18 <https://github.com/ionelmc/python-redis-lock/pull/18>`_.\n\n2.1.0 (2015-03-12)\n------------------\n\n* New specific exception classes: ``AlreadyAcquired`` and ``NotAcquired``.\n* Slightly improved efficiency when non-waiting acquires are used.\n\n2.0.0 (2014-12-29)\n------------------\n\n* Rename ``Lock.token`` to ``Lock.id``. Now only allowed to be set via constructor. Contributed by Jardel Weyrich in `#11 <https://github.com/ionelmc/python-redis-lock/pull/11>`_.\n\n1.0.0 (2014-12-23)\n------------------\n\n* Fix Django integration. (reported by Jardel Weyrich)\n* Reorganize tests to use py.test.\n* Add test for Django integration.\n* Add ``reset_all`` functionality. Contributed by Yokotoka in `#7 <https://github.com/ionelmc/python-redis-lock/pull/7>`_.\n* Add ``Lock.reset`` functionality.\n* Expose the ``Lock.token`` attribute.\n\n0.1.2 (2013-11-05)\n------------------\n\n* ?\n\n0.1.1 (2013-10-26)\n------------------\n\n* ?\n\n0.1.0 (2013-10-26)\n------------------\n\n* ?\n\n0.0.1 (2013-10-25)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ionelmc/python-redis-lock", "keywords": "", "license": "BSD-2-Clause", "maintainer": "", "maintainer_email": "", "name": "python-redis-lock", "package_url": "https://pypi.org/project/python-redis-lock/", "platform": "", "project_url": "https://pypi.org/project/python-redis-lock/", "project_urls": {"Changelog": "https://python-redis-lock.readthedocs.io/en/latest/changelog.html", "Documentation": "https://python-redis-lock.readthedocs.io/", "Homepage": "https://github.com/ionelmc/python-redis-lock", "Issue Tracker": "https://github.com/ionelmc/python-redis-lock/issues"}, "release_url": "https://pypi.org/project/python-redis-lock/3.5.0/", "requires_dist": ["redis (>=2.10.0)", "django-redis (>=3.8.0) ; extra == 'django'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "Lock context manager implemented via redis SETNX/BLPOP.", "version": "3.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Lock context manager implemented via redis SETNX/BLPOP.</p>\n<ul>\n<li>Free software: BSD 2-Clause License</li>\n</ul>\n<p>Interface targeted to be exactly like <a href=\"http://docs.python.org/2/library/threading.html#threading.Lock\" rel=\"nofollow\">threading.Lock</a>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Because we don\u2019t want to require users to share the lock instance across processes you will have to give them names.</p>\n<pre><span class=\"n\">lock</span> <span class=\"o\">=</span> <span class=\"n\">redis_lock</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"s2\">\"name-of-the-lock\"</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">lock</span><span class=\"o\">.</span><span class=\"n\">acquire</span><span class=\"p\">(</span><span class=\"n\">blocking</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Got the lock.\"</span><span class=\"p\">)</span>\n    <span class=\"n\">lock</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Someone else has the lock.\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"locks-as-context-managers\">\n<h2>Locks as Context Managers</h2>\n<pre><span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">StrictRedis</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">redis_lock</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"s2\">\"name-of-the-lock\"</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Got the lock. Doing some work ...\"</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>You can also associate an identifier along with the lock so that it can be retrieved later by the same process, or by a\ndifferent one. This is useful in cases where the application needs to identify the lock owner (find out who currently\nowns the lock).</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">socket</span>\n<span class=\"n\">host_id</span> <span class=\"o\">=</span> <span class=\"s2\">\"owned-by-</span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">socket</span><span class=\"o\">.</span><span class=\"n\">gethostname</span><span class=\"p\">()</span>\n<span class=\"n\">lock</span> <span class=\"o\">=</span> <span class=\"n\">redis_lock</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"s2\">\"name-of-the-lock\"</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">host_id</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">lock</span><span class=\"o\">.</span><span class=\"n\">acquire</span><span class=\"p\">(</span><span class=\"n\">blocking</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"k\">assert</span> <span class=\"n\">lock</span><span class=\"o\">.</span><span class=\"n\">locked</span><span class=\"p\">()</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Got the lock.\"</span><span class=\"p\">)</span>\n    <span class=\"n\">lock</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">lock</span><span class=\"o\">.</span><span class=\"n\">get_owner_id</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">host_id</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"I already acquired this in another process.\"</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The lock is held on another machine.\"</span><span class=\"p\">)</span>\n</pre>\n<div id=\"avoid-dogpile-effect-in-django\">\n<h3>Avoid dogpile effect in django</h3>\n<p>The dogpile is also known as the thundering herd effect or cache stampede. Here\u2019s a pattern to avoid the problem\nwithout serving stale data. The work will be performed a single time and every client will wait for the fresh data.</p>\n<p>To use this you will need <a href=\"https://github.com/niwibe/django-redis\" rel=\"nofollow\">django-redis</a>, however, <tt><span class=\"pre\">python-redis-lock</span></tt>\nprovides you a cache backend that has a cache method for your convenience. Just install <tt><span class=\"pre\">python-redis-lock</span></tt> like\nthis:</p>\n<pre>pip install <span class=\"s2\">\"python-redis-lock[django]\"</span>\n</pre>\n<p>Now put something like this in your settings:</p>\n<pre><span class=\"n\">CACHES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'redis_lock.django_cache.RedisCache'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'LOCATION'</span><span class=\"p\">:</span> <span class=\"s1\">'redis://127.0.0.1:6379/1'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'OPTIONS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'CLIENT_CLASS'</span><span class=\"p\">:</span> <span class=\"s1\">'django_redis.client.DefaultClient'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<div>\n<p>Note</p>\n<p>If using a <cite>django-redis</cite> &lt; <cite>3.8.x</cite>, you\u2019ll probably need <cite>redis_cache</cite>\nwhich has been deprecated in favor to <cite>django_redis</cite>. The <cite>redis_cache</cite>\nmodule is removed in <cite>django-redis</cite> versions &gt; <cite>3.9.x</cite>. See <a href=\"http://niwinz.github.io/django-redis/latest/#_configure_as_cache_backend\" rel=\"nofollow\">django-redis notes</a>.</p>\n</div>\n<p>This backend just adds a convenient <tt>.lock(name, expire=None)</tt> function to django-redis\u2019s cache backend.</p>\n<p>You would write your functions like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.core.cache</span> <span class=\"kn\">import</span> <span class=\"n\">cache</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">function</span><span class=\"p\">():</span>\n    <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">val</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">):</span>\n            <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">val</span><span class=\"p\">:</span>\n                <span class=\"c1\"># DO EXPENSIVE WORK</span>\n                <span class=\"n\">val</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n                <span class=\"n\">cache</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">val</span>\n</pre>\n</div>\n<div id=\"troubleshooting\">\n<h3>Troubleshooting</h3>\n<p>In some cases, the lock remains in redis forever (like a server blackout / redis or application crash / an unhandled\nexception). In such cases, the lock is not removed by restarting the application. One solution is to turn on the\n<cite>auto_renewal</cite> parameter in combination with <cite>expire</cite> to set a time-out on the lock, but let <cite>Lock()</cite> automatically\nkeep resetting the expire time while your application code is executing:</p>\n<pre><span class=\"c1\"># Get a lock with a 60-second lifetime but keep renewing it automatically</span>\n<span class=\"c1\"># to ensure the lock is held for as long as the Python process is running.</span>\n<span class=\"k\">with</span> <span class=\"n\">redis_lock</span><span class=\"o\">.</span><span class=\"n\">Lock</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'my-lock'</span><span class=\"p\">,</span> <span class=\"n\">expire</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">auto_renewal</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Do work....</span>\n</pre>\n<p>Another solution is to use the <tt>reset_all()</tt> function when the application starts:</p>\n<pre><span class=\"c1\"># On application start/restart</span>\n<span class=\"kn\">import</span> <span class=\"nn\">redis_lock</span>\n<span class=\"n\">redis_lock</span><span class=\"o\">.</span><span class=\"n\">reset_all</span><span class=\"p\">()</span>\n</pre>\n<p>Alternatively, you can reset individual locks via the <tt>reset</tt> method.</p>\n<p>Use these carefully, if you understand what you do.</p>\n</div>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>based on the standard SETNX recipe</li>\n<li>optional expiry</li>\n<li>optional timeout</li>\n<li>optional lock renewal (use a low expire but keep the lock active)</li>\n<li>no spinloops at acquire</li>\n</ul>\n</div>\n<div id=\"implementation\">\n<h2>Implementation</h2>\n<p><tt>redis_lock</tt> will use 2 keys for each lock named <tt>&lt;name&gt;</tt>:</p>\n<ul>\n<li><tt><span class=\"pre\">lock:&lt;name&gt;</span></tt> - a string value for the actual lock</li>\n<li><tt><span class=\"pre\">lock-signal:&lt;name&gt;</span></tt> - a list value for signaling the waiters when the lock is released</li>\n</ul>\n<p>This is how it works:</p>\n<img alt=\"python-redis-lock flow diagram\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b892919876ff42e2a5ccc4c16fb2393a4944b144/68747470733a2f2f7261772e6769746875622e636f6d2f696f6e656c6d632f707974686f6e2d72656469732d6c6f636b2f6d61737465722f646f63732f72656469732d6c6f636b2532306469616772616d2532302876332e30292e706e67\">\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"https://python-redis-lock.readthedocs.org/\" rel=\"nofollow\">https://python-redis-lock.readthedocs.org/</a></p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>To run the all tests run:</p>\n<pre>tox\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>OS:</th><td>Any</td>\n</tr>\n<tr><th>Runtime:</th><td>Python 2.7, 3.3 or later, or PyPy</td>\n</tr>\n<tr><th>Services:</th><td>Redis 2.6.12 or later.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"similar-projects\">\n<h2>Similar projects</h2>\n<ul>\n<li><a href=\"https://github.com/bbangert/retools/blob/master/retools/lock.py\" rel=\"nofollow\">bbangert/retools</a> - acquire does spinloop</li>\n<li><a href=\"https://chris-lamb.co.uk/posts/distributing-locking-python-and-redis\" rel=\"nofollow\">distributing-locking-python-and-redis</a> - acquire does polling</li>\n<li><a href=\"https://github.com/cezarsa/redis_lock/blob/master/redis_lock/__init__.py\" rel=\"nofollow\">cezarsa/redis_lock</a> - acquire does not block</li>\n<li><a href=\"https://github.com/andymccurdy/redis-py/blob/master/redis/client.py#L2167\" rel=\"nofollow\">andymccurdy/redis-py</a> - acquire does spinloop</li>\n<li><a href=\"https://github.com/mpessas/python-redis-lock/blob/master/redislock/lock.py\" rel=\"nofollow\">mpessas/python-redis-lock</a> - blocks fine but no expiration</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>3.5.0 (2020-01-13)</h3>\n<ul>\n<li>Added a <tt>locked</tt> method. Contributed by Artem Slobodkin in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/72\" rel=\"nofollow\">#72</a>.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>3.4.0 (2019-12-06)</h3>\n<ul>\n<li>Fixed regression that can cause deadlocks or slowdowns in certain configurations.\nSee: <a href=\"https://github.com/ionelmc/python-redis-lock/issues/71\" rel=\"nofollow\">#71</a>.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>3.3.1 (2019-01-19)</h3>\n<ul>\n<li>Fixed failures when running python-redis-lock 3.3 alongside 3.2.\nSee: <a href=\"https://github.com/ionelmc/python-redis-lock/issues/64\" rel=\"nofollow\">#64</a>.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>3.3.0 (2019-01-17)</h3>\n<ul>\n<li>Fixed deprecated use of <tt>warnings</tt> API. Contributed by Julie MacDonell in\n<a href=\"https://github.com/ionelmc/python-redis-lock/pull/54\" rel=\"nofollow\">#54</a>.</li>\n<li>Added <tt>auto_renewal</tt> option in <tt>RedisCache.lock</tt> (the Django cache backend wrapper). Contributed by c\nin <a href=\"https://github.com/ionelmc/python-redis-lock/pull/55\" rel=\"nofollow\">#55</a>.</li>\n<li>Changed log level for \u201c%(script)s not cached\u201d from WARNING to INFO.</li>\n<li>Added support for using <tt>decode_responses=True</tt>. Lock keys are pure ascii now.</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>3.2.0 (2016-10-29)</h3>\n<ul>\n<li>Changed the signal key cleanup operation do be done without any expires. This prevents lingering keys around for some time.\nContributed by Andrew Pashkin in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/38\" rel=\"nofollow\">#38</a>.</li>\n<li>Allow locks with given <cite>id</cite> to acquire. Previously it assumed that if you specify the <cite>id</cite> then the lock was already\nacquired. See <a href=\"https://github.com/ionelmc/python-redis-lock/issues/44\" rel=\"nofollow\">#44</a> and\n<a href=\"https://github.com/ionelmc/python-redis-lock/issues/39\" rel=\"nofollow\">#39</a>.</li>\n<li>Allow using other redis clients with a <tt>strict=False</tt>. Normally you\u2019re expected to pass in an instance\nof <tt>redis.StrictRedis</tt>.</li>\n<li>Added convenience method <cite>locked_get_or_set</cite> to Django cache backend.</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>3.1.0 (2016-04-16)</h3>\n<ul>\n<li>Changed the auto renewal to automatically stop the renewal thread if lock gets garbage collected. Contributed by\nAndrew Pashkin in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/33\" rel=\"nofollow\">#33</a>.</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>3.0.0 (2016-01-16)</h3>\n<ul>\n<li>Changed <tt>release</tt> so that it expires signal-keys immediately. Contributed by Andrew Pashkin in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/28\" rel=\"nofollow\">#28</a>.</li>\n<li>Resetting locks (<tt>reset</tt> or <tt>reset_all</tt>) will release the lock. If there\u2019s someone waiting on the reset lock now it will\nacquire it. Contributed by Andrew Pashkin in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/29\" rel=\"nofollow\">#29</a>.</li>\n<li>Added the <tt>extend</tt> method on <tt>Lock</tt> objects. Contributed by Andrew Pashkin in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/24\" rel=\"nofollow\">#24</a>.</li>\n<li>Documentation improvements on <tt>release</tt> method. Contributed by Andrew Pashkin in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/22\" rel=\"nofollow\">#22</a>.</li>\n<li>Fixed <tt>acquire(block=True)</tt> handling when <tt>expire</tt> option was used (it wasn\u2019t blocking indefinitely). Contributed by\nTero Vuotila in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/35\" rel=\"nofollow\">#35</a>.</li>\n<li>Changed <tt>release</tt> to check if lock was acquired with he same id. If not, <tt>NotAcquired</tt> will be raised.\nPreviously there was just a check if it was acquired with the same instance (self._held).\n<strong>BACKWARDS INCOMPATIBLE</strong></li>\n<li>Removed the <tt>force</tt> option from <tt>release</tt> - it wasn\u2019t really necessary and it only encourages sloppy programming. See\n<a href=\"https://github.com/ionelmc/python-redis-lock/issues/25\" rel=\"nofollow\">#25</a>.\n<strong>BACKWARDS INCOMPATIBLE</strong></li>\n<li>Dropped tests for Python 2.6. It may work but it is unsupported.</li>\n</ul>\n</div>\n<div id=\"id23\">\n<h3>2.3.0 (2015-09-27)</h3>\n<ul>\n<li>Added the <tt>timeout</tt> option. Contributed by Victor Torres in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/20\" rel=\"nofollow\">#20</a>.</li>\n</ul>\n</div>\n<div id=\"id25\">\n<h3>2.2.0 (2015-08-19)</h3>\n<ul>\n<li>Added the <tt>auto_renewal</tt> option. Contributed by Nick Groenen in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/18\" rel=\"nofollow\">#18</a>.</li>\n</ul>\n</div>\n<div id=\"id27\">\n<h3>2.1.0 (2015-03-12)</h3>\n<ul>\n<li>New specific exception classes: <tt>AlreadyAcquired</tt> and <tt>NotAcquired</tt>.</li>\n<li>Slightly improved efficiency when non-waiting acquires are used.</li>\n</ul>\n</div>\n<div id=\"id28\">\n<h3>2.0.0 (2014-12-29)</h3>\n<ul>\n<li>Rename <tt>Lock.token</tt> to <tt>Lock.id</tt>. Now only allowed to be set via constructor. Contributed by Jardel Weyrich in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/11\" rel=\"nofollow\">#11</a>.</li>\n</ul>\n</div>\n<div id=\"id30\">\n<h3>1.0.0 (2014-12-23)</h3>\n<ul>\n<li>Fix Django integration. (reported by Jardel Weyrich)</li>\n<li>Reorganize tests to use py.test.</li>\n<li>Add test for Django integration.</li>\n<li>Add <tt>reset_all</tt> functionality. Contributed by Yokotoka in <a href=\"https://github.com/ionelmc/python-redis-lock/pull/7\" rel=\"nofollow\">#7</a>.</li>\n<li>Add <tt>Lock.reset</tt> functionality.</li>\n<li>Expose the <tt>Lock.token</tt> attribute.</li>\n</ul>\n</div>\n<div id=\"id32\">\n<h3>0.1.2 (2013-11-05)</h3>\n<ul>\n<li>?</li>\n</ul>\n</div>\n<div id=\"id33\">\n<h3>0.1.1 (2013-10-26)</h3>\n<ul>\n<li>?</li>\n</ul>\n</div>\n<div id=\"id34\">\n<h3>0.1.0 (2013-10-26)</h3>\n<ul>\n<li>?</li>\n</ul>\n</div>\n<div id=\"id35\">\n<h3>0.0.1 (2013-10-25)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6441414, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a21cc2b48ef931670470fda7db471eda", "sha256": "29dfb74efc78aed46dc7df29a3c0621f03f8ac793033a336b9622446f6823c14"}, "downloads": -1, "filename": "python-redis-lock-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a21cc2b48ef931670470fda7db471eda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5081, "upload_time": "2013-10-25T00:57:20", "upload_time_iso_8601": "2013-10-25T00:57:20.682472Z", "url": "https://files.pythonhosted.org/packages/80/5f/3a6e66ad7af458e531bf7243518af2dc1a006eebc8c38a8ce3eebf6911dc/python-redis-lock-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "fe6a035ceef95a19abe6dbba41bfb37d", "sha256": "4f047915f11cb2b2283e7a5c93c649e6c48a02841d15899f0dbf952f7cb8b399"}, "downloads": -1, "filename": "python-redis-lock-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fe6a035ceef95a19abe6dbba41bfb37d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40141, "upload_time": "2013-10-26T01:47:19", "upload_time_iso_8601": "2013-10-26T01:47:19.675021Z", "url": "https://files.pythonhosted.org/packages/61/cd/1ba727fe1f0092c20a31670fd17c36a8261778b060f6bcd39dcd21a24a09/python-redis-lock-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "dcaad6f5cd228e7e954b0b0089fb4ec2", "sha256": "91b6536d0f188cda24929ebb0ff534c6eddfa611a6903c89076e731ac475a6ea"}, "downloads": -1, "filename": "python-redis-lock-0.1.1.tar.gz", "has_sig": false, "md5_digest": "dcaad6f5cd228e7e954b0b0089fb4ec2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41027, "upload_time": "2013-10-26T23:36:34", "upload_time_iso_8601": "2013-10-26T23:36:34.205133Z", "url": "https://files.pythonhosted.org/packages/62/ed/b1291339d3664244247fb9f7d96d6413900cc510335a9967ec2220de27d3/python-redis-lock-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f6a94e2eae2402567d4d77bacc8ea82f", "sha256": "ce6674d6a253e28889855a06700cc47227db853a17530075ef37410e3850314f"}, "downloads": -1, "filename": "python-redis-lock-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f6a94e2eae2402567d4d77bacc8ea82f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42499, "upload_time": "2013-11-05T00:08:32", "upload_time_iso_8601": "2013-11-05T00:08:32.240544Z", "url": "https://files.pythonhosted.org/packages/41/05/ce56c634b3c50e8854b96c2096fde761443baf7eca1102f11d02fc9a24ac/python-redis-lock-0.1.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "3fa87305d0c277ee92fb5f0dd3d56702", "sha256": "db29d3bde7a493c4e8ed1791f5b8ff0de7f0d5b52aec351d83f7345c35b96c9b"}, "downloads": -1, "filename": "python_redis_lock-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3fa87305d0c277ee92fb5f0dd3d56702", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8863, "upload_time": "2014-12-23T23:33:44", "upload_time_iso_8601": "2014-12-23T23:33:44.777091Z", "url": "https://files.pythonhosted.org/packages/09/59/fd1e2f6842b369b78d6e4af25207be24b9fb80696cce6a8b6627f8fd8459/python_redis_lock-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4196f1f2e064fb91fcbdd2dd29b36133", "sha256": "3e5eacd0e36b132c2360342a4529128027229205b90dd6d8b051e0237a1218c2"}, "downloads": -1, "filename": "python-redis-lock-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4196f1f2e064fb91fcbdd2dd29b36133", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85161, "upload_time": "2014-12-23T23:33:41", "upload_time_iso_8601": "2014-12-23T23:33:41.579927Z", "url": "https://files.pythonhosted.org/packages/13/54/61a7e5eea8389dd0fb28667bfa7d437baec214853b583101983bd0d0654f/python-redis-lock-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "cd0b040bcfe1cf2cfa465d4ac0c1a8ea", "sha256": "dad97703308094e6f6271eb485af29174cfaea8cc5a87c6ceb41562a422d4642"}, "downloads": -1, "filename": "python_redis_lock-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd0b040bcfe1cf2cfa465d4ac0c1a8ea", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9357, "upload_time": "2014-12-29T17:16:33", "upload_time_iso_8601": "2014-12-29T17:16:33.296100Z", "url": "https://files.pythonhosted.org/packages/73/9b/63e49c31dfe6b549fd3b0d01f1087b5de1de6612ef1f9381e7b197a86e12/python_redis_lock-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f4836e62f6597fa9924d775b752a9bb", "sha256": "844a01cb5f45b11a73d77bb14e30e3fe3904401dff8652559c4a8134a97c3f6d"}, "downloads": -1, "filename": "python-redis-lock-2.0.0.tar.gz", "has_sig": false, "md5_digest": "0f4836e62f6597fa9924d775b752a9bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85763, "upload_time": "2014-12-29T17:16:30", "upload_time_iso_8601": "2014-12-29T17:16:30.109534Z", "url": "https://files.pythonhosted.org/packages/32/86/55ddf63d5e5e3dfc5ae149e29e3e2a56c3cb262518f89e55954893fcce86/python-redis-lock-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "fe4f61593a0b1934fb9f1e33a79bd5ed", "sha256": "379f9b85fca5710e9c6516844e49e86fc108256e272e676312188cf1dc987eac"}, "downloads": -1, "filename": "python_redis_lock-2.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fe4f61593a0b1934fb9f1e33a79bd5ed", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9561, "upload_time": "2015-03-11T22:27:31", "upload_time_iso_8601": "2015-03-11T22:27:31.694810Z", "url": "https://files.pythonhosted.org/packages/0a/25/31148325d1e5e2697be4168dbbb23d927bbcf894a54a06036f71edc95059/python_redis_lock-2.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ebec9ff3008bf6053f29f65b11f5346", "sha256": "166958e8862ac69e01a91125cf9be33505b4bd5481f3eee20d24c8b7bccac316"}, "downloads": -1, "filename": "python-redis-lock-2.1.0.tar.gz", "has_sig": false, "md5_digest": "0ebec9ff3008bf6053f29f65b11f5346", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83251, "upload_time": "2015-03-11T22:27:28", "upload_time_iso_8601": "2015-03-11T22:27:28.543865Z", "url": "https://files.pythonhosted.org/packages/55/53/756a18716af614b4f031298e3ff18b65b4edda775b3ffa83a5976797b6d9/python-redis-lock-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "e7e3b3a3a2815141896398f47aecba21", "sha256": "a7753e2c30321961749b27e45f3a63a048850e461d7ee319ac240ac0655b0690"}, "downloads": -1, "filename": "python_redis_lock-2.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e7e3b3a3a2815141896398f47aecba21", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11412, "upload_time": "2015-08-19T21:19:42", "upload_time_iso_8601": "2015-08-19T21:19:42.388976Z", "url": "https://files.pythonhosted.org/packages/64/0e/c43118bd161c6acf103904aa92809e7ab5197631ae7424fed1c2a37636f3/python_redis_lock-2.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9cada785d15d880f690a4f3aec7d7d1", "sha256": "c9accf658c002e928f0524293f2e34a5e961f7fb517431c4c7596c4ee7c46858"}, "downloads": -1, "filename": "python-redis-lock-2.2.0.tar.gz", "has_sig": false, "md5_digest": "c9cada785d15d880f690a4f3aec7d7d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85651, "upload_time": "2015-08-19T21:19:46", "upload_time_iso_8601": "2015-08-19T21:19:46.828455Z", "url": "https://files.pythonhosted.org/packages/e6/d5/71daadd7a962a8570c77081a17e1bff0371fb40521b390300bf962326abf/python-redis-lock-2.2.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "30bc308d092e3720addfd5f3b3eee86b", "sha256": "2004aa262b50c8ead93d6906b171a8724b4676da82200f214177fdc7c24c1eee"}, "downloads": -1, "filename": "python_redis_lock-2.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "30bc308d092e3720addfd5f3b3eee86b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12289, "upload_time": "2015-09-27T21:26:29", "upload_time_iso_8601": "2015-09-27T21:26:29.036196Z", "url": "https://files.pythonhosted.org/packages/31/99/e4d50e08ad6fd61186943bb8a6e174028442c3516af7aad789eb21e7583a/python_redis_lock-2.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b9e7d316269f939a016b9fe59e4cb3f", "sha256": "ae03e1cf77d4ea84b49ce14af9580e039edd9019f3d23a258fbdcc2853a69979"}, "downloads": -1, "filename": "python-redis-lock-2.3.0.tar.gz", "has_sig": false, "md5_digest": "4b9e7d316269f939a016b9fe59e4cb3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 91090, "upload_time": "2015-09-27T21:26:32", "upload_time_iso_8601": "2015-09-27T21:26:32.816549Z", "url": "https://files.pythonhosted.org/packages/84/f2/a43875cd89220b14f13e916b9aa668057c1940f44ab63175f43578a74879/python-redis-lock-2.3.0.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "ba4e627bccec930278a6a6c909cf1282", "sha256": "6d020f0f598a52f1d6aa482a16d56f6cc3b7008ee2882f3df3a83d1c3ec12afd"}, "downloads": -1, "filename": "python_redis_lock-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ba4e627bccec930278a6a6c909cf1282", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12896, "upload_time": "2016-01-16T08:36:57", "upload_time_iso_8601": "2016-01-16T08:36:57.686825Z", "url": "https://files.pythonhosted.org/packages/47/19/27aa28da4186d840c0c69b81f446b0d04bb32ff481827b667de18f765437/python_redis_lock-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b99c72028233b4ed9612b9b5d4f5859", "sha256": "f7645368f1f44a3fc44f3db16fb4162d9f7535eb0333a502a3eb48b4603a7544"}, "downloads": -1, "filename": "python-redis-lock-3.0.0.tar.gz", "has_sig": false, "md5_digest": "2b99c72028233b4ed9612b9b5d4f5859", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 156856, "upload_time": "2016-01-16T08:37:06", "upload_time_iso_8601": "2016-01-16T08:37:06.077763Z", "url": "https://files.pythonhosted.org/packages/ce/fb/0b9f5dc9b4cfa852de2ed20c2f75424c0ea617ba014207f7dd663773c01d/python-redis-lock-3.0.0.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "c66480ed31764f56ff5e8e24ca36b28e", "sha256": "0d18b524ae35dad0de1965f58bdbb1cf6c7379d92f221125df6b069e11dfce9c"}, "downloads": -1, "filename": "python_redis_lock-3.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c66480ed31764f56ff5e8e24ca36b28e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12755, "upload_time": "2016-04-16T18:20:07", "upload_time_iso_8601": "2016-04-16T18:20:07.618182Z", "url": "https://files.pythonhosted.org/packages/a5/83/96cbdaa6548deab159bf43e909c77b08a0d5616b993f70e61685eb024a75/python_redis_lock-3.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2fc5efcd22b11d77d1488ce8803e2f1f", "sha256": "f2e85d89ddf1ee729414700220a5311e14af696fc4f1fe862469d7911ad53281"}, "downloads": -1, "filename": "python-redis-lock-3.1.0.tar.gz", "has_sig": false, "md5_digest": "2fc5efcd22b11d77d1488ce8803e2f1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 156962, "upload_time": "2016-04-16T18:20:30", "upload_time_iso_8601": "2016-04-16T18:20:30.261985Z", "url": "https://files.pythonhosted.org/packages/50/e7/ccef695eb24cb521c54f4f14d4db4381b654035ed519a5965a2d807fc247/python-redis-lock-3.1.0.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "3e06245f00e7727d5dfdae63ab50722c", "sha256": "52e8d70aa5c6b04ffe257696c7a8fa212dc0f10e0ff93dd87664c430febe0449"}, "downloads": -1, "filename": "python_redis_lock-3.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3e06245f00e7727d5dfdae63ab50722c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14174, "upload_time": "2016-10-29T17:20:41", "upload_time_iso_8601": "2016-10-29T17:20:41.943358Z", "url": "https://files.pythonhosted.org/packages/f5/4b/9ea255fd6600dc40223f7a4a33a526b3df924f724b631eb6624efd49a606/python_redis_lock-3.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "824b1bf4457ac0e3ab72325eecd3eb3c", "sha256": "f308dda75449cba1155c5b6f8ebaa0dc1a25f6964ca4dc2a2ac889ff334b4237"}, "downloads": -1, "filename": "python-redis-lock-3.2.0.tar.gz", "has_sig": false, "md5_digest": "824b1bf4457ac0e3ab72325eecd3eb3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159578, "upload_time": "2016-10-29T17:20:44", "upload_time_iso_8601": "2016-10-29T17:20:44.417242Z", "url": "https://files.pythonhosted.org/packages/64/73/4a23fad6fb1fb021c01e9c15c6f56b8690c627f15716f1e48703eb7e64a7/python-redis-lock-3.2.0.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "7f15bef7358c9e4f96b1493df328f812", "sha256": "af5efeda769558181040fc206462be8c4bb5c8537cb6bcd4ef5a9a0821855093"}, "downloads": -1, "filename": "python_redis_lock-3.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7f15bef7358c9e4f96b1493df328f812", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 11420, "upload_time": "2019-01-17T10:21:21", "upload_time_iso_8601": "2019-01-17T10:21:21.638497Z", "url": "https://files.pythonhosted.org/packages/ef/9a/598bd0333078a785408268ef9fc3b1263759626080814c3ab6edca205d1f/python_redis_lock-3.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24510598849563ad2085dae41b3bacf8", "sha256": "8dc058eeb73b59c2ed5ac6df8c56f7d0f70c4c5b7d00903b508f33af716ae76b"}, "downloads": -1, "filename": "python-redis-lock-3.3.0.tar.gz", "has_sig": false, "md5_digest": "24510598849563ad2085dae41b3bacf8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 158467, "upload_time": "2019-01-17T10:21:23", "upload_time_iso_8601": "2019-01-17T10:21:23.674935Z", "url": "https://files.pythonhosted.org/packages/3a/dc/bd6daf47ec71e1abcd9293a109753a879929eb4c837f89c6f94e72325da2/python-redis-lock-3.3.0.tar.gz", "yanked": false}], "3.3.1": [{"comment_text": "", "digests": {"md5": "42efa7aa5f8785e2f7dc13578cbe8c76", "sha256": "f0649c49341fa943f19b8fbe93c3457df8a0a85006c88134465a16401fd1e553"}, "downloads": -1, "filename": "python_redis_lock-3.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42efa7aa5f8785e2f7dc13578cbe8c76", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 11458, "upload_time": "2019-01-19T12:09:55", "upload_time_iso_8601": "2019-01-19T12:09:55.202877Z", "url": "https://files.pythonhosted.org/packages/87/0c/79d45d49997fea403eb1a8aba24edc024c483e91cc37cd525817b93aa227/python_redis_lock-3.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6028180e25533ad6a1def9d2cbff19a7", "sha256": "5316d473ce6ce86a774b9f9c110d84c3a9bd1a2abfda5d99e9c0c8a872a8e6d6"}, "downloads": -1, "filename": "python-redis-lock-3.3.1.tar.gz", "has_sig": false, "md5_digest": "6028180e25533ad6a1def9d2cbff19a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 158759, "upload_time": "2019-01-19T12:09:58", "upload_time_iso_8601": "2019-01-19T12:09:58.836082Z", "url": "https://files.pythonhosted.org/packages/b6/ad/192b6d75b586bd7b6c35946a20904f743a963019de5bd4abded7445c622c/python-redis-lock-3.3.1.tar.gz", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "de4b2c0bfdf5d2752af1af2a46d40a48", "sha256": "aec1c6ee639738f0148eaa7f97dca32e8d3e7c77db61368d028c6beb88ce11c4"}, "downloads": -1, "filename": "python_redis_lock-3.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "de4b2c0bfdf5d2752af1af2a46d40a48", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 11547, "upload_time": "2019-12-06T15:49:32", "upload_time_iso_8601": "2019-12-06T15:49:32.869009Z", "url": "https://files.pythonhosted.org/packages/21/e4/b0aae00e12aa60c4cde2723b6562d17c8cd30fd6c001318f399fadeb083e/python_redis_lock-3.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3aa0c2e0a0e36b93328223e970a66bc9", "sha256": "8e3ef458b9424daf35d587e69b63416a0c55ac46303f3aaff1bab4fe5a8f1e92"}, "downloads": -1, "filename": "python-redis-lock-3.4.0.tar.gz", "has_sig": false, "md5_digest": "3aa0c2e0a0e36b93328223e970a66bc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 159550, "upload_time": "2019-12-06T15:49:34", "upload_time_iso_8601": "2019-12-06T15:49:34.743457Z", "url": "https://files.pythonhosted.org/packages/94/b0/4504a1dee2773aaf9af7ff4da2de4f2d412c1f2ab0b187f4db290e17414e/python-redis-lock-3.4.0.tar.gz", "yanked": false}], "3.5.0": [{"comment_text": "", "digests": {"md5": "6642e7bbb0cc58869254195a059f574c", "sha256": "910ac3c429c2eee4f9f3d6733bc4c722e024e00b887379aefa52ae9376a759b4"}, "downloads": -1, "filename": "python_redis_lock-3.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6642e7bbb0cc58869254195a059f574c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 11708, "upload_time": "2020-01-12T22:08:50", "upload_time_iso_8601": "2020-01-12T22:08:50.908127Z", "url": "https://files.pythonhosted.org/packages/b3/6b/5420a3b2779ea424053baaddd104ac9a33d42b62897cc994fd66fc585e1c/python_redis_lock-3.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62a3422726bcbdb181418112212af65d", "sha256": "06f28f63bf4ea3d739ff5c472e76563e24aa5c887002a85cbdb7a5b13aa05897"}, "downloads": -1, "filename": "python-redis-lock-3.5.0.tar.gz", "has_sig": false, "md5_digest": "62a3422726bcbdb181418112212af65d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 161533, "upload_time": "2020-01-12T22:08:53", "upload_time_iso_8601": "2020-01-12T22:08:53.118047Z", "url": "https://files.pythonhosted.org/packages/b3/9f/7daba8654ab3d2266aa7f99d6dd4793f1dedff2a84bac57d294342b03870/python-redis-lock-3.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6642e7bbb0cc58869254195a059f574c", "sha256": "910ac3c429c2eee4f9f3d6733bc4c722e024e00b887379aefa52ae9376a759b4"}, "downloads": -1, "filename": "python_redis_lock-3.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6642e7bbb0cc58869254195a059f574c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 11708, "upload_time": "2020-01-12T22:08:50", "upload_time_iso_8601": "2020-01-12T22:08:50.908127Z", "url": "https://files.pythonhosted.org/packages/b3/6b/5420a3b2779ea424053baaddd104ac9a33d42b62897cc994fd66fc585e1c/python_redis_lock-3.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62a3422726bcbdb181418112212af65d", "sha256": "06f28f63bf4ea3d739ff5c472e76563e24aa5c887002a85cbdb7a5b13aa05897"}, "downloads": -1, "filename": "python-redis-lock-3.5.0.tar.gz", "has_sig": false, "md5_digest": "62a3422726bcbdb181418112212af65d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 161533, "upload_time": "2020-01-12T22:08:53", "upload_time_iso_8601": "2020-01-12T22:08:53.118047Z", "url": "https://files.pythonhosted.org/packages/b3/9f/7daba8654ab3d2266aa7f99d6dd4793f1dedff2a84bac57d294342b03870/python-redis-lock-3.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:41 2020"}