{"info": {"author": "SamHDev", "author_email": "sam02h.huddart@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# TCP Non-Block\nA Simple Implementation of Non-Blocking TCP Socket Server. \n\n## Key Features\n\n * Simple to Use\n * Threading Built In\n * Expandable  - Does'nt use a thread per connection\n * Stress Tested - Can handle 100+ connections  (tested on a [OVH VPS SSD 1](https://www.ovh.co.uk/vps/vps-ssd.xml))\n\n## Installation\nYou can install via python's `pip` module:\n\nInstall with Offical Python Package Index:\n```bash\npython3 -m pip install tcpnonblock\n```\nor with this Git Respiratory\n```bash\npython3 -m pip install git+https://github.com/SamHDev/tcpnonblock.git\n```\n*Note for Noobies: If `python3` work then use `python`*\n\n\n## Usage\n\nYou can import the libary with the following statement:\n```py\nimport tcpnonblock\n```\n\n### Server Example\nHere is a quick Example of a TCPSocket Server. This is an [Echo Server](/demos/echo/server.py) that replies the message from a client.\n```py\nserver = tcpnonblock.TCPSocketServer() # Create a Server Object\n\n# Create a Client Instance for the Server\n@server.client_instance\nclass ClientInstance(tcpnonblock.TCPSocketServerInstance):\n    # On Client Connect\n    def connect(self):\n        print(\"Client Connected\")\n\n    # On Client Disconnect\n    def disconnect(self):\n        print(\"Client Disconnected\")\n\n    # On Client Message\n    def message(self, msg):\n        print(\"Client Message: \",msg)\n        self.send(\"You Said: \", msg) # Echo the Message (Send)\n\n# On Server Start Event\n@server.on_start\ndef start(host, port):\n    print(\"Server Start\")\n\n# On Server Stop Event\n@server.on_stop\ndef stop():\n    print(\"Server Stop\")\n\n# Start the Server\nserver.listen(\"0.0.0.0\", 8080) # Host,Port\nserver.start()\n```\n\n### Client Example\nHere is a quick Example of a TCPSocket Client to go with our Echo Server. This is an [Echo Client](/demos/echo/client.py) that interacts with our Example.\n```py\nclient = remote.TCPSocketClient() # Create a Client Object\n\n# On Client Connected to Server\n@client.on_open\ndef on_open():\n    print(\"Connected to Server\")\n    client.send(\"Hello World!\")\n\n# On Client Disconnected from Server\n@client.on_close\ndef on_close():\n    print(\"Disconnected to Server\")\n\n# On Server Message Received\n@client.on_message\ndef on_message(msg):\n    print(\"Reply: \", msg) #`Msg` is a `string`\n\nclient.connect(\"localhost\", 8080)\n```\n\n### Threading\n\nWhat about that threading I mentioned earlier, well its this simple. \nJust declare the `threading` argument in the creation of the object.\nIt works for both `TCPSocketServer` and `TCPSocketClient`\n\n```py\nserver = tcpnonblock.TCPSocketServer(threaded=True)\nclient = rtcpnonblock.TCPSocketClient(threaded=True)\n```\n\nThe Thread will be created and started on `.start()`\n\n## License and Attributes\n\nCreated by Sam Huddart under alias [SamHDev](https://github.com/SamHDev/) for the [Blume Open Source Project](https://www.youtube.com/watch?v=oHg5SJYRHA0). `SamHDev/tcpnonblock` is licensed under the GNU General Public License v3.0 and is Open-Source as seen in [LICENSE](LICENSE). Commercial use, Modification and Distribution are permmited. Although credit is not necessary, it is much obliged. If you do wish to credit the author, please link the [respiratory](https://github.com/SamHDev/tcpnonblock/) and the author at [github](https://github.com/SamHDev/) or [website](https://samhdev.com). Thank you for using our work.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SamHDev/tcpnonblock", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tcpnonblock", "package_url": "https://pypi.org/project/tcpnonblock/", "platform": "", "project_url": "https://pypi.org/project/tcpnonblock/", "project_urls": {"Homepage": "https://github.com/SamHDev/tcpnonblock"}, "release_url": "https://pypi.org/project/tcpnonblock/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A Simple Implementation of Non-Blocking TCP Socket Server.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TCP Non-Block</h1>\n<p>A Simple Implementation of Non-Blocking TCP Socket Server.</p>\n<h2>Key Features</h2>\n<ul>\n<li>Simple to Use</li>\n<li>Threading Built In</li>\n<li>Expandable  - Does'nt use a thread per connection</li>\n<li>Stress Tested - Can handle 100+ connections  (tested on a <a href=\"https://www.ovh.co.uk/vps/vps-ssd.xml\" rel=\"nofollow\">OVH VPS SSD 1</a>)</li>\n</ul>\n<h2>Installation</h2>\n<p>You can install via python's <code>pip</code> module:</p>\n<p>Install with Offical Python Package Index:</p>\n<pre>python3 -m pip install tcpnonblock\n</pre>\n<p>or with this Git Respiratory</p>\n<pre>python3 -m pip install git+https://github.com/SamHDev/tcpnonblock.git\n</pre>\n<p><em>Note for Noobies: If <code>python3</code> work then use <code>python</code></em></p>\n<h2>Usage</h2>\n<p>You can import the libary with the following statement:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tcpnonblock</span>\n</pre>\n<h3>Server Example</h3>\n<p>Here is a quick Example of a TCPSocket Server. This is an <a href=\"/demos/echo/server.py\" rel=\"nofollow\">Echo Server</a> that replies the message from a client.</p>\n<pre><span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">tcpnonblock</span><span class=\"o\">.</span><span class=\"n\">TCPSocketServer</span><span class=\"p\">()</span> <span class=\"c1\"># Create a Server Object</span>\n\n<span class=\"c1\"># Create a Client Instance for the Server</span>\n<span class=\"nd\">@server</span><span class=\"o\">.</span><span class=\"n\">client_instance</span>\n<span class=\"k\">class</span> <span class=\"nc\">ClientInstance</span><span class=\"p\">(</span><span class=\"n\">tcpnonblock</span><span class=\"o\">.</span><span class=\"n\">TCPSocketServerInstance</span><span class=\"p\">):</span>\n    <span class=\"c1\"># On Client Connect</span>\n    <span class=\"k\">def</span> <span class=\"nf\">connect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Client Connected\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># On Client Disconnect</span>\n    <span class=\"k\">def</span> <span class=\"nf\">disconnect</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Client Disconnected\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># On Client Message</span>\n    <span class=\"k\">def</span> <span class=\"nf\">message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Client Message: \"</span><span class=\"p\">,</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"You Said: \"</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">)</span> <span class=\"c1\"># Echo the Message (Send)</span>\n\n<span class=\"c1\"># On Server Start Event</span>\n<span class=\"nd\">@server</span><span class=\"o\">.</span><span class=\"n\">on_start</span>\n<span class=\"k\">def</span> <span class=\"nf\">start</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Server Start\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># On Server Stop Event</span>\n<span class=\"nd\">@server</span><span class=\"o\">.</span><span class=\"n\">on_stop</span>\n<span class=\"k\">def</span> <span class=\"nf\">stop</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Server Stop\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Start the Server</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"s2\">\"0.0.0.0\"</span><span class=\"p\">,</span> <span class=\"mi\">8080</span><span class=\"p\">)</span> <span class=\"c1\"># Host,Port</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<h3>Client Example</h3>\n<p>Here is a quick Example of a TCPSocket Client to go with our Echo Server. This is an <a href=\"/demos/echo/client.py\" rel=\"nofollow\">Echo Client</a> that interacts with our Example.</p>\n<pre><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">remote</span><span class=\"o\">.</span><span class=\"n\">TCPSocketClient</span><span class=\"p\">()</span> <span class=\"c1\"># Create a Client Object</span>\n\n<span class=\"c1\"># On Client Connected to Server</span>\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">on_open</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_open</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Connected to Server\"</span><span class=\"p\">)</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"s2\">\"Hello World!\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># On Client Disconnected from Server</span>\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">on_close</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_close</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Disconnected to Server\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># On Server Message Received</span>\n<span class=\"nd\">@client</span><span class=\"o\">.</span><span class=\"n\">on_message</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_message</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Reply: \"</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">)</span> <span class=\"c1\">#`Msg` is a `string`</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span> <span class=\"mi\">8080</span><span class=\"p\">)</span>\n</pre>\n<h3>Threading</h3>\n<p>What about that threading I mentioned earlier, well its this simple.\nJust declare the <code>threading</code> argument in the creation of the object.\nIt works for both <code>TCPSocketServer</code> and <code>TCPSocketClient</code></p>\n<pre><span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">tcpnonblock</span><span class=\"o\">.</span><span class=\"n\">TCPSocketServer</span><span class=\"p\">(</span><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">rtcpnonblock</span><span class=\"o\">.</span><span class=\"n\">TCPSocketClient</span><span class=\"p\">(</span><span class=\"n\">threaded</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The Thread will be created and started on <code>.start()</code></p>\n<h2>License and Attributes</h2>\n<p>Created by Sam Huddart under alias <a href=\"https://github.com/SamHDev/\" rel=\"nofollow\">SamHDev</a> for the <a href=\"https://www.youtube.com/watch?v=oHg5SJYRHA0\" rel=\"nofollow\">Blume Open Source Project</a>. <code>SamHDev/tcpnonblock</code> is licensed under the GNU General Public License v3.0 and is Open-Source as seen in <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a>. Commercial use, Modification and Distribution are permmited. Although credit is not necessary, it is much obliged. If you do wish to credit the author, please link the <a href=\"https://github.com/SamHDev/tcpnonblock/\" rel=\"nofollow\">respiratory</a> and the author at <a href=\"https://github.com/SamHDev/\" rel=\"nofollow\">github</a> or <a href=\"https://samhdev.com\" rel=\"nofollow\">website</a>. Thank you for using our work.</p>\n\n          </div>"}, "last_serial": 5739246, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "705075b024d923510e236eabfd5219c7", "sha256": "1e15744966a6878066ce9b4ad9fddbb0a15d641fc82afaf716a5e94dfdd61ffb"}, "downloads": -1, "filename": "tcpnonblock-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "705075b024d923510e236eabfd5219c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17581, "upload_time": "2019-08-27T19:54:30", "upload_time_iso_8601": "2019-08-27T19:54:30.458804Z", "url": "https://files.pythonhosted.org/packages/8a/28/30a59e108e2c75dd9be03dc675dfb2490dc4ee89b9543fa7940a04740da9/tcpnonblock-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb433181561966b7765407af900308c0", "sha256": "c44e7e0cf8986f8b9961ede9b891863a70d6c9468d4c2e3d4b96f59fe6e16b39"}, "downloads": -1, "filename": "tcpnonblock-0.1.1.tar.gz", "has_sig": false, "md5_digest": "eb433181561966b7765407af900308c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4151, "upload_time": "2019-08-27T19:54:32", "upload_time_iso_8601": "2019-08-27T19:54:32.553358Z", "url": "https://files.pythonhosted.org/packages/55/f5/f1f15a1e020be64642ba620769bfd42f68c627d84e9feab3ef1516b7f029/tcpnonblock-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "705075b024d923510e236eabfd5219c7", "sha256": "1e15744966a6878066ce9b4ad9fddbb0a15d641fc82afaf716a5e94dfdd61ffb"}, "downloads": -1, "filename": "tcpnonblock-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "705075b024d923510e236eabfd5219c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17581, "upload_time": "2019-08-27T19:54:30", "upload_time_iso_8601": "2019-08-27T19:54:30.458804Z", "url": "https://files.pythonhosted.org/packages/8a/28/30a59e108e2c75dd9be03dc675dfb2490dc4ee89b9543fa7940a04740da9/tcpnonblock-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eb433181561966b7765407af900308c0", "sha256": "c44e7e0cf8986f8b9961ede9b891863a70d6c9468d4c2e3d4b96f59fe6e16b39"}, "downloads": -1, "filename": "tcpnonblock-0.1.1.tar.gz", "has_sig": false, "md5_digest": "eb433181561966b7765407af900308c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4151, "upload_time": "2019-08-27T19:54:32", "upload_time_iso_8601": "2019-08-27T19:54:32.553358Z", "url": "https://files.pythonhosted.org/packages/55/f5/f1f15a1e020be64642ba620769bfd42f68c627d84e9feab3ef1516b7f029/tcpnonblock-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:18 2020"}