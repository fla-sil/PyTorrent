{"info": {"author": "Evgenii Dolotov", "author_email": "supernovaprotocol@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# Multi-Directional Multi-Dimensional Recurrent Neural Networks\n\nA library built on top of TensorFlow implementing the model described in\nAlex Graves's paper https://arxiv.org/pdf/0705.2011.pdf.\nThe library comes with a set of custom Keras layers.\nEach layer can be seamlessly used in Keras to build a model and\ntrain it as usual.\n\n# Status: under development\n\nThis repository is in its early stages. The code presented here is not stable yet\nand it wasn't extensively tested. Use it at your own risk\n\n# Features\n\nLayers available now:\n- **MDRNN**: layer analogous to Keras SimpleRNN layer for processing multi-dimensional inputs\n- **MDLSTM**: analogous to Keras LSTM layer\n- **MultiDirectional**: layer-wrapper analogous to Keras Bidirectional for creating \nmulti-directional multi-dimensional RNN\n\nLayers currently under development (coming soon):\n- **MDGRU**: analogous to Keras GRU layer\n\nAdditional features:\n- easy to use with Keras\n- Keras-like API for each layer\n- option to choose order/direction in which to process inputs\n- computations are run on CPU\n\n# Installation\nInstall the package from PyPI:\n```\npip install mdrnn\n```\n\nAlternatively, clone the repository and install dependencies:\n```\ngit clone <repo_url>\ncd <repo_directory>\npip install -r requirements.txt\n```\n\n# Quick Start\n\nCreate a 2-dimensional RNN:\n```\nfrom mdrnn import MDRNN, MDLSTM, MultiDirectional\nimport numpy as np\nimport tensorflow as tf\nrnn = MDRNN(units=16, input_shape=(5, 4, 10), activation='tanh', return_sequences=True)\noutput = rnn(np.zeros((1, 5, 4, 10)))\n```\n\nBuild a Keras model consisting of 1 MDRNN layer and train it:\n\n```\nmodel = tf.keras.Sequential()\nmodel.add(MDRNN(units=16, input_shape=(2, 3, 6), activation='tanh'))\nmodel.add(tf.keras.layers.Dense(units=10, activation='softmax'))\nmodel.compile(loss='categorical_crossentropy', metrics=['acc'])\nmodel.summary()\nx = np.zeros((10, 2, 3, 6))\ny = np.zeros((10, 10,))\nmodel.fit(x, y)\n```\n\nSimilarly, create and train a multi-directional MDRNN\n```\nx = np.zeros((10, 2, 3, 6))\ny = np.zeros((10, 40,))\n\nmodel = tf.keras.Sequential()\nmodel.add(tf.keras.layers.Input(shape=(2, 3, 6)))\nmodel.add(MultiDirectional(MDRNN(10, input_shape=[2, 3, 6])))\n\nmodel.compile(loss='categorical_crossentropy', metrics=['acc'])\nmodel.summary()\n\nmodel.fit(x, y, epochs=1)\n```\n\nSimilarly, create and train a multi-directional multi-dimensional LSTM (MDLSTM)\n```\nx = np.zeros((10, 2, 3, 6))\ny = np.zeros((10, 40,))\n\nmodel = tf.keras.Sequential()\nmodel.add(tf.keras.layers.Input(shape=(2, 3, 6)))\nmodel.add(MultiDirectional(MDLSTM(10, input_shape=[2, 3, 6])))\n\nmodel.compile(loss='categorical_crossentropy', metrics=['acc'])\nmodel.summary()\n\nmodel.fit(x, y, epochs=1)\n```\n\n\n# Requirements\n\n- TensorFlow version >= 2.0\n\n# References\n\n[1] A. Graves, S. Fern\u0301andez, and J. Schmidhuber. Multidimensional recurrent neural networks.\n\n[2] A. Graves and J. Schmidhuber. Offline Handwriting Recognition with Multidimensional Recurrent Neural Networks.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/X-rayLaser/multi-directional-mdrnn", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mdrnn", "package_url": "https://pypi.org/project/mdrnn/", "platform": "", "project_url": "https://pypi.org/project/mdrnn/", "project_urls": {"Homepage": "https://github.com/X-rayLaser/multi-directional-mdrnn"}, "release_url": "https://pypi.org/project/mdrnn/0.3.0/", "requires_dist": ["numpy", "tensorflow (>=2)"], "requires_python": "", "summary": "Custom Keras layers for implementing multi-dimensional recurrent neural networks (MDRNNs)", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Multi-Directional Multi-Dimensional Recurrent Neural Networks</h1>\n<p>A library built on top of TensorFlow implementing the model described in\nAlex Graves's paper <a href=\"https://arxiv.org/pdf/0705.2011.pdf\" rel=\"nofollow\">https://arxiv.org/pdf/0705.2011.pdf</a>.\nThe library comes with a set of custom Keras layers.\nEach layer can be seamlessly used in Keras to build a model and\ntrain it as usual.</p>\n<h1>Status: under development</h1>\n<p>This repository is in its early stages. The code presented here is not stable yet\nand it wasn't extensively tested. Use it at your own risk</p>\n<h1>Features</h1>\n<p>Layers available now:</p>\n<ul>\n<li><strong>MDRNN</strong>: layer analogous to Keras SimpleRNN layer for processing multi-dimensional inputs</li>\n<li><strong>MDLSTM</strong>: analogous to Keras LSTM layer</li>\n<li><strong>MultiDirectional</strong>: layer-wrapper analogous to Keras Bidirectional for creating\nmulti-directional multi-dimensional RNN</li>\n</ul>\n<p>Layers currently under development (coming soon):</p>\n<ul>\n<li><strong>MDGRU</strong>: analogous to Keras GRU layer</li>\n</ul>\n<p>Additional features:</p>\n<ul>\n<li>easy to use with Keras</li>\n<li>Keras-like API for each layer</li>\n<li>option to choose order/direction in which to process inputs</li>\n<li>computations are run on CPU</li>\n</ul>\n<h1>Installation</h1>\n<p>Install the package from PyPI:</p>\n<pre><code>pip install mdrnn\n</code></pre>\n<p>Alternatively, clone the repository and install dependencies:</p>\n<pre><code>git clone &lt;repo_url&gt;\ncd &lt;repo_directory&gt;\npip install -r requirements.txt\n</code></pre>\n<h1>Quick Start</h1>\n<p>Create a 2-dimensional RNN:</p>\n<pre><code>from mdrnn import MDRNN, MDLSTM, MultiDirectional\nimport numpy as np\nimport tensorflow as tf\nrnn = MDRNN(units=16, input_shape=(5, 4, 10), activation='tanh', return_sequences=True)\noutput = rnn(np.zeros((1, 5, 4, 10)))\n</code></pre>\n<p>Build a Keras model consisting of 1 MDRNN layer and train it:</p>\n<pre><code>model = tf.keras.Sequential()\nmodel.add(MDRNN(units=16, input_shape=(2, 3, 6), activation='tanh'))\nmodel.add(tf.keras.layers.Dense(units=10, activation='softmax'))\nmodel.compile(loss='categorical_crossentropy', metrics=['acc'])\nmodel.summary()\nx = np.zeros((10, 2, 3, 6))\ny = np.zeros((10, 10,))\nmodel.fit(x, y)\n</code></pre>\n<p>Similarly, create and train a multi-directional MDRNN</p>\n<pre><code>x = np.zeros((10, 2, 3, 6))\ny = np.zeros((10, 40,))\n\nmodel = tf.keras.Sequential()\nmodel.add(tf.keras.layers.Input(shape=(2, 3, 6)))\nmodel.add(MultiDirectional(MDRNN(10, input_shape=[2, 3, 6])))\n\nmodel.compile(loss='categorical_crossentropy', metrics=['acc'])\nmodel.summary()\n\nmodel.fit(x, y, epochs=1)\n</code></pre>\n<p>Similarly, create and train a multi-directional multi-dimensional LSTM (MDLSTM)</p>\n<pre><code>x = np.zeros((10, 2, 3, 6))\ny = np.zeros((10, 40,))\n\nmodel = tf.keras.Sequential()\nmodel.add(tf.keras.layers.Input(shape=(2, 3, 6)))\nmodel.add(MultiDirectional(MDLSTM(10, input_shape=[2, 3, 6])))\n\nmodel.compile(loss='categorical_crossentropy', metrics=['acc'])\nmodel.summary()\n\nmodel.fit(x, y, epochs=1)\n</code></pre>\n<h1>Requirements</h1>\n<ul>\n<li>TensorFlow version &gt;= 2.0</li>\n</ul>\n<h1>References</h1>\n<p>[1] A. Graves, S. Fern\u0301andez, and J. Schmidhuber. Multidimensional recurrent neural networks.</p>\n<p>[2] A. Graves and J. Schmidhuber. Offline Handwriting Recognition with Multidimensional Recurrent Neural Networks.</p>\n\n          </div>"}, "last_serial": 7112476, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a72bb0bda07417beab7134aa6e65c541", "sha256": "aeb7bcb0d9884d70778a30a688d4acee1d43603725ad4d79b9c82dec1ac7b09a"}, "downloads": -1, "filename": "mdrnn-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a72bb0bda07417beab7134aa6e65c541", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6524, "upload_time": "2020-02-15T15:17:52", "upload_time_iso_8601": "2020-02-15T15:17:52.457554Z", "url": "https://files.pythonhosted.org/packages/4d/42/a0ec092d0e1a15abddcb809408f31f44edc5b701b5c1070d2568e3a15e30/mdrnn-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f74f1ee5109af49af92256cf2b8e20f0", "sha256": "7e255d0c7b04a408b8d66065d142e69498c4a9aec58eb3369ee2f1780b1a4904"}, "downloads": -1, "filename": "mdrnn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f74f1ee5109af49af92256cf2b8e20f0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5541, "upload_time": "2020-02-15T15:17:54", "upload_time_iso_8601": "2020-02-15T15:17:54.573031Z", "url": "https://files.pythonhosted.org/packages/9c/a7/4470a000d271d4fa885c1fe7e83bcd57b3e04cbea11b761544dbe8561898/mdrnn-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "31fe1f970683a8f2243c6f53e8fcebe4", "sha256": "9d468ea360d60533441b4f3b5b4e61ce3c97c8afdd6fc9b8859ba291f01f7718"}, "downloads": -1, "filename": "mdrnn-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "31fe1f970683a8f2243c6f53e8fcebe4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6875, "upload_time": "2020-02-18T08:24:40", "upload_time_iso_8601": "2020-02-18T08:24:40.098581Z", "url": "https://files.pythonhosted.org/packages/0b/61/d11f36b7b2d2a6cd5e79248151efab15b1cc023a64ecf1b9e00a0469dff7/mdrnn-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9314cdd51200d39f76659efda5ac1d6", "sha256": "d00b5f466f522394fe570dccfb5d430362d771441a263b36f52087651881e21e"}, "downloads": -1, "filename": "mdrnn-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f9314cdd51200d39f76659efda5ac1d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5920, "upload_time": "2020-02-18T08:24:41", "upload_time_iso_8601": "2020-02-18T08:24:41.279641Z", "url": "https://files.pythonhosted.org/packages/55/63/a8a96ff010ef5e6fef01ded2ce02895d339f90c50276a7aa912f8acbf0b7/mdrnn-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "005c2cfd82808db0a80164196c4a7fba", "sha256": "1bb614bd6dbec78c9dd24c2e337f91772fcbf51849d9cf007e7b00498f9de7e9"}, "downloads": -1, "filename": "mdrnn-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "005c2cfd82808db0a80164196c4a7fba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3798, "upload_time": "2020-02-28T13:11:22", "upload_time_iso_8601": "2020-02-28T13:11:22.920219Z", "url": "https://files.pythonhosted.org/packages/b5/0b/c2a8c90ac7998ed87eaece93fb79872b9871895f602058bceca5f8aa64ee/mdrnn-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7916788edda94cd633d24c282518cafc", "sha256": "5973c4d8b63a71648f2e48b5b065af4196baa252dd7c5a9b5e341706655680fe"}, "downloads": -1, "filename": "mdrnn-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7916788edda94cd633d24c282518cafc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2845, "upload_time": "2020-02-28T13:11:24", "upload_time_iso_8601": "2020-02-28T13:11:24.533541Z", "url": "https://files.pythonhosted.org/packages/86/54/2bd439ea6a0140ab0e9f10215dda77499084247367e4f3202e6c3241b204/mdrnn-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "dfea65193aab660d24678ec7b7fe01d6", "sha256": "9525e19245535ec34d365add1842c7698db80fd2491037677cd4385df446041a"}, "downloads": -1, "filename": "mdrnn-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dfea65193aab660d24678ec7b7fe01d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9386, "upload_time": "2020-03-03T16:28:14", "upload_time_iso_8601": "2020-03-03T16:28:14.673952Z", "url": "https://files.pythonhosted.org/packages/9b/95/d8b6a79772d8d2194f9e5e97ce6e620c96c1b358b201ef6943bbdcde6442/mdrnn-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13d2f5e14fa83460f7b3b6737aa1017f", "sha256": "a5624330954e1003e26c8a280c7904986db71b2e3a5266b9570162c8ac0db875"}, "downloads": -1, "filename": "mdrnn-0.2.2.tar.gz", "has_sig": false, "md5_digest": "13d2f5e14fa83460f7b3b6737aa1017f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6589, "upload_time": "2020-03-03T16:28:16", "upload_time_iso_8601": "2020-03-03T16:28:16.125681Z", "url": "https://files.pythonhosted.org/packages/c4/c2/ff719024b228d88fc79d4a27a773e721dda4224b2dc5dc8d1dffd2b8b7d2/mdrnn-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "85bfbd67d512ce6b873c8f391ac71b0b", "sha256": "e577721857f9cf8ef8138c713d22bf1fae737cd131d1d37f7ef9559392da0b24"}, "downloads": -1, "filename": "mdrnn-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "85bfbd67d512ce6b873c8f391ac71b0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13154, "upload_time": "2020-04-27T15:12:51", "upload_time_iso_8601": "2020-04-27T15:12:51.562598Z", "url": "https://files.pythonhosted.org/packages/7f/22/2cbe86d35408ad95c82bf9d3670cbe8b25f80eda7b1d945fecbdd2f2ed3c/mdrnn-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eadcf2d44a3f02e66f78a636817a193", "sha256": "101da97b0e21b661bcafde9b603bcc39d8ac685af34bcd6a5d0f263d133840c1"}, "downloads": -1, "filename": "mdrnn-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5eadcf2d44a3f02e66f78a636817a193", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9299, "upload_time": "2020-04-27T15:12:52", "upload_time_iso_8601": "2020-04-27T15:12:52.927673Z", "url": "https://files.pythonhosted.org/packages/8d/4d/2b9b732627f110d0f493bd5abac2a6fca6a0b9c399f075d1063c0d97e3ca/mdrnn-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "85bfbd67d512ce6b873c8f391ac71b0b", "sha256": "e577721857f9cf8ef8138c713d22bf1fae737cd131d1d37f7ef9559392da0b24"}, "downloads": -1, "filename": "mdrnn-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "85bfbd67d512ce6b873c8f391ac71b0b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13154, "upload_time": "2020-04-27T15:12:51", "upload_time_iso_8601": "2020-04-27T15:12:51.562598Z", "url": "https://files.pythonhosted.org/packages/7f/22/2cbe86d35408ad95c82bf9d3670cbe8b25f80eda7b1d945fecbdd2f2ed3c/mdrnn-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5eadcf2d44a3f02e66f78a636817a193", "sha256": "101da97b0e21b661bcafde9b603bcc39d8ac685af34bcd6a5d0f263d133840c1"}, "downloads": -1, "filename": "mdrnn-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5eadcf2d44a3f02e66f78a636817a193", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9299, "upload_time": "2020-04-27T15:12:52", "upload_time_iso_8601": "2020-04-27T15:12:52.927673Z", "url": "https://files.pythonhosted.org/packages/8d/4d/2b9b732627f110d0f493bd5abac2a6fca6a0b9c399f075d1063c0d97e3ca/mdrnn-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:48 2020"}