{"info": {"author": "Zenoss", "author_email": "dbouchillon@zenoss.com", "bugtrack_url": null, "classifiers": [], "description": "txwinrm: Async Python WinRM Client\r\n==================================\r\n\r\nAt Zenoss we are working on a project to improve the reliability, performance\r\nand features of native Windows monitoring. The core of this project is this\r\nPython library for asynchronously managing Windows using the WinRM and WinRS\r\nservices. This library will then be used by Zenoss to do automatic discovery\r\nand monitoring the way Zenoss users are used to with some new possibilities.\r\n\r\nRight now we're trying to get as much real world experience using the library\r\nas possible to prove out the reliability and performance improvements we're\r\nhoping to achieve. If you have access to Windows servers, you can help! It\r\ndoesn't even require a Zenoss Core installation as this tool stands alone right\r\nnow.\r\n\r\nTo use kerberos connections, you will need to download and build the python kerberos module from https://github.com/zenoss/pykerberos.  \r\n\r\nSee the zenoss-windows forum for updates to the project, and leave your\r\nfeedback there. \r\n\r\nhttp://community.zenoss.org/community/forums/zenoss-windows\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nUbuntu Server 12.04.1 LTS (Python 2.7.3)\r\n\r\n::\r\n\r\n    sudo apt-get update\r\n\r\n    sudo apt-get -y install gcc python-dev libkrb5-dev krb5-user python-setuptools\r\n    # if prompted for your kerberos realm, leave it blank and choose OK\r\n\r\n    sudo easy_install txwinrm\r\n\r\n    # if you want to use a Windows domain\r\n    sudo genkrb5conf <windows domain> <domain controller IP address>\r\n\r\n    # now you can run the txwinrm commands (winrm, winrs, typeperf, and wecutil)\r\n \r\n \r\nCentos 6.3 x86_64 (Python 2.6.6)\r\n\r\n::\r\n \r\n    # as root\r\n    yum -y install gcc python-devel krb5-devel krb5-workstation python-setuptools\r\n    easy_install txwinrm\r\n     \r\n    # if you want to use a Windows domain\r\n    genkrb5conf <windows domain> <domain controller IP address>\r\n     \r\n    # now you can run the txwinrm commands (winrm, winrs, typeperf, and wecutil) as a normal user\r\n\r\n\r\nZenoss Core or Resource Manager 4.2.x installed on CentOS 6 (Zenoss Python 2.7)\r\n\r\n::\r\n\r\n    # as root\r\n    yum -y install gcc krb5-devel krb5-workstation\r\n\r\n    # as the zenoss user\r\n    easy_install txwinrm\r\n\r\n    # as root (if you want to use a Windows domain)\r\n    genkrb5conf <windows domain> <domain controller IP address>\r\n\r\n    # now you can run the txwinrm commands (winrm, winrs, typeperf, and wecutil) as the zenoss user\r\n\r\n\r\nCurrent Feature Support\r\n-----------------------\r\n\r\n-  HTTP\r\n-  Basic authentication\r\n-  WQL queries\r\n-  WinRS\r\n-  typeperf\r\n-  Subscribe to the Windows Event Log\r\n-  Kerberos authentication (domain accounts)\r\n-  Payload encryption (Kerberos connections)\r\n\r\n\r\nFuture Feature Support\r\n----------------------\r\n\r\n-  HTTPS\r\n-  NTLM authentication (local accounts)\r\n\r\n\r\nConfiguring the Target Windows Machines\r\n---------------------------------------\r\n\r\nYou can enable the WinRM service on Windows Server 2003, 2008 and 2012. Run\r\nCommand Prompt as Administrator and execute the following commands\r\n\r\n::\r\n\r\n    winrm quickconfig\r\n    winrm s winrm/config/service @{AllowUnencrypted=\"true\";MaxConcurrentOperationsPerUser=\"4294967295\"}\r\n    winrm s winrm/config/service/auth @{Basic=\"true\"}\r\n    winrm s winrm/config/winrs @{MaxShellsPerUser=\"2147483647\"}\r\n\r\n\r\nWQL Queries\r\n-----------\r\n\r\nYou can pass a single host a query via the command line...\r\n\r\n::\r\n\r\n    $ winrm -r host -u user -f \"select * from Win32_NetworkAdapter\"\r\n\r\n\r\nAnother option is to create an ini-style config file and hit multiple targets\r\nwith multiple queries. Example config is at examples/config.ini\r\n\r\n::\r\n\r\n    $ winrm -c path/to/config.ini\r\n\r\n\r\nThis will send WinRM enumerate requests to the hosts listed in config.ini. It\r\nwill send a request for each WQL query listed in that file. The output will\r\nlook like\r\n\r\n::\r\n\r\n    <hostname> ==> <WQL query>\r\n        <property-name> = <value>\r\n        ...\r\n        ---- (indicates start of next item)\r\n        <property-name> = <value>\r\n        ...\r\n    ...\r\n\r\n\r\nHere is an example...\r\n\r\n::\r\n\r\n    cupertino ==> Select name,caption,pathName,serviceType,startMode,startName,state From Win32_Service\r\n      Caption = Application Experience\r\n      Name = AeLookupSvc\r\n      PathName = C:\\Windows\\system32\\svchost.exe -k netsvcs\r\n      ServiceType = Share Process\r\n      StartMode = Manual\r\n      StartName = localSystem\r\n      State = Stopped\r\n      ----\r\n      Caption = Application Layer Gateway Service\r\n      Name = ALG\r\n    ...\r\n\r\n\r\nA summary of the number of failures if any and number of XML elements processed\r\nappears at the end. The summary and any errors are written to stderr, so\r\nredirect stdin to /dev/null if you want terse output.\r\n\r\n::\r\n\r\n    $ winrm -c path/to/config.ini >/dev/null\r\n\r\n    Summary:\r\n      Connected to 3 of 3 hosts\r\n      Processed 13975 elements\r\n      Failed to process 0 responses\r\n      Peak virtual memory useage: 529060 kB\r\n\r\n      Remote CPU utilization:\r\n        campbell\r\n          0.00% of CPU time used by WmiPrvSE process with pid 1544\r\n          4.00% of CPU time used by WmiPrvSE#1 process with pid 1684\r\n          4.00% of CPU time used by WmiPrvSE#2 process with pid 3048\r\n        cupertino\r\n          0.00% of CPU time used by WmiPrvSE process with pid 1608\r\n          3.12% of CPU time used by WmiPrvSE#1 process with pid 1764\r\n          9.38% of CPU time used by WmiPrvSE#2 process with pid 2608\r\n        gilroy\r\n          1.08% of CPU time used by WmiPrvSE process with pid 1428\r\n          5.38% of CPU time used by WmiPrvSE#1 process with pid 1760\r\n          4.30% of CPU time used by WmiPrvSE#2 process with pid 1268\r\n\r\n\r\nThe '-a' option specifies the authentication method. Currently supported values\r\nare 'basic' and 'kerberos'. 'basic' is the default.\r\n\r\nThe '-d' option increases logging, printing out the XML for all requests and\r\nresponses, along with the HTTP status code.\r\n\r\n\r\nWinRS\r\n-----\r\n\r\nThe winrs program has four modes of operation:\r\n\r\n-  interactive (default): Execute many commands in an interactive command\r\n   prompt on the remote host\r\n-  single: Execute a single command and return its output\r\n-  long: Execute a single long-running command like\r\n   'typeperf -si 1' and check the output periodically\r\n-  batch: Opens a command prompt on the remote system and\r\n   executes a list of commands (actually right now it executes one\r\n   command twice as a proof-of-concept)\r\n\r\n\r\nAn example of interactive mode\r\n\r\n::\r\n\r\n    $ winrs interactive -u Administrator -x 'typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -si 1' -r oakland\r\n    Microsoft Windows [Version 6.2.9200]\r\n    (c) 2012 Microsoft Corporation. All rights reserved.\r\n    C:\\Users\\Default>dir\r\n    Volume in drive C has no label.\r\n    Volume Serial Number is 5E71-6BA3\r\n    Directory of C:\\Users\\Default\r\n    02/22/2013  03:42 AM    <DIR>          Contacts\r\n    02/22/2013  03:42 AM    <DIR>          Desktop\r\n    02/22/2013  03:42 AM    <DIR>          Documents\r\n    02/22/2013  03:42 AM    <DIR>          Downloads\r\n    02/22/2013  03:42 AM    <DIR>          Favorites\r\n    02/22/2013  03:42 AM    <DIR>          Links\r\n    02/22/2013  03:42 AM    <DIR>          Music\r\n    02/22/2013  03:42 AM    <DIR>          Pictures\r\n    02/22/2013  03:42 AM    <DIR>          Saved Games\r\n    02/22/2013  03:42 AM    <DIR>          Searches\r\n    02/22/2013  03:42 AM    <DIR>          Videos\r\n    0 File(s)              0 bytes\r\n    11 Dir(s)   7,905,038,336 bytes free\r\n\r\n    C:\\Users\\Default>exit\r\n\r\n\r\nAn example of single mode\r\n\r\n::\r\n\r\n    $ winrs single -u Administrator -x 'typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -sc 1' -r oakland\r\n    {'exit_code': 0,\r\n     'stderr': [],\r\n     'stdout': ['\"(PDH-CSV 4.0)\",\"\\\\\\\\AMAZONA-SDFU7B1\\\\Memory\\\\Pages/sec\",\"\\\\\\\\AMAZONA-SDFU7B1\\\\PhysicalDisk(_Total)\\\\Avg. Disk Queue Length\",\"\\\\\\\\AMAZONA-SDFU7B1\\\\Processor(_Total)\\\\% Processor Time\"',\r\n                '\"04/19/2013 21:43:48.823\",\"0.000000\",\"0.000000\",\"0.005660\"',\r\n                'Exiting, please wait...',\r\n                'The command completed successfully.']}\r\n\r\n\r\nAn example of long mode\r\n\r\n::\r\n\r\n    $ winrs long -u Administrator -x 'typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -si 1' -r oakland\r\n      \"(PDH-CSV 4.0)\",\"\\\\AMAZONA-SDFU7B1\\Memory\\Pages/sec\",\"\\\\AMAZONA-SDFU7B1\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\",\"\\\\AMAZONA-SDFU7B1\\Processor(_Total)\\% Processor Time\"\r\n      \"04/19/2013 21:43:10.603\",\"0.000000\",\"0.000000\",\"18.462005\"\r\n      \"04/19/2013 21:43:11.617\",\"0.000000\",\"0.000000\",\"0.000464\"\r\n      \"04/19/2013 21:43:12.631\",\"0.000000\",\"0.000000\",\"1.538423\"\r\n      \"04/19/2013 21:43:13.645\",\"0.000000\",\"0.000000\",\"0.000197\"\r\n\r\n\r\nAn example of batch\r\n\r\n::\r\n\r\n    $ winrs batch -u Administrator -x 'typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -sc 1' -r oakland\r\n    Creating shell on oakland.\r\n\r\n    Sending to oakland:\r\n      typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -sc 1\r\n\r\n    Received from oakland:\r\n      \"(PDH-CSV 4.0)\",\"\\\\AMAZONA-SDFU7B1\\Memory\\Pages/sec\",\"\\\\AMAZONA-SDFU7B1\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\",\"\\\\AMAZONA-SDFU7B1\\Processor(_Total)\\% Processor Time\"\r\n      \"04/19/2013 21:43:39.198\",\"0.000000\",\"0.000000\",\"0.000483\"\r\n      Exiting, please wait...\r\n      The command completed successfully.\r\n\r\n    Sending to oakland:\r\n      typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -sc 1\r\n\r\n    Received from oakland:\r\n      \"(PDH-CSV 4.0)\",\"\\\\AMAZONA-SDFU7B1\\Memory\\Pages/sec\",\"\\\\AMAZONA-SDFU7B1\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\",\"\\\\AMAZONA-SDFU7B1\\Processor(_Total)\\% Processor Time\"\r\n      \"04/19/2013 21:43:41.054\",\"0.000000\",\"0.000000\",\"0.000700\"\r\n      Exiting, please wait...\r\n      The command completed successfully.\r\n\r\n    Deleted shell on oakland.\r\n\r\n    Exit code of shell on oakland: 0\r\n\r\n\r\nTypeperf\r\n--------\r\n\r\ntxwinrm's typeperf command allows you to run a remote typeperf command, check\r\nthe output periodically, parse it, and print it to stdout. It support the -si\r\noption and multiple counters. Here is an example:\r\n\r\n::\r\n\r\n    $ typeperf -r gilroy -u Administrator '\\Processor(_Total)\\% Processor Time' '\\memory\\Available Bytes' '\\paging file(_Total)\\% Usage'\r\n    \\memory\\Available Bytes\r\n      00:54:27: 193130496.0\r\n    \\paging file(_Total)\\% Usage\r\n      00:54:27: 0.012207\r\n    \\Processor(_Total)\\% Processor Time\r\n      00:54:27: 0.004487\r\n    \\memory\\Available Bytes\r\n      00:54:28: 193216512.0\r\n      00:54:29: 193982464.0\r\n    \\paging file(_Total)\\% Usage\r\n      00:54:28: 0.012207\r\n      00:54:29: 0.012207\r\n    \\Processor(_Total)\\% Processor Time\r\n      00:54:28: 1.542879\r\n      00:54:29: 0.004487\r\n    \\memory\\Available Bytes\r\n      00:54:30: 193933312.0\r\n      00:54:31: 193941504.0\r\n    \\paging file(_Total)\\% Usage\r\n      00:54:30: 0.012207\r\n\r\n\r\nSubscribing to the Windows Event Log\r\n------------------------------------\r\n\r\nThe following command shows an example of subscribing to the Windows event log:\r\n\r\n::\r\n\r\n    $ wecutil -r saratoga -u Administrator\r\n    Pull #1\r\n    Event(system=System(provider='Microsoft-Windows-EventForwarder', event_id=111, event_id_qualifiers=None, level=None, task=None, keywords=None, time_created=datetime.datetime(2013, 5, 8, 20, 29, 31, 132000), event_record_id=None, channel=None, computer='saratoga.solutions.loc', user_id=None), data=None, rendering_info=None)\r\n    Pull #2\r\n\r\n\r\nYou can run wecutil against a matrix of hosts and event queries by using a config file.\r\n\r\n::\r\n\r\n    $ wecutil -c examples/config.ini\r\n    milpitas System/'*' pull #1 of 2\r\n    milpitas Application/'*' pull #1 of 2\r\n    gilroy System/'*' pull #1 of 2\r\n    ...\r\n    milpitas System/'*' Event(system=System(provider='Microsoft-Windows-...\r\n    ...\r\n    milpitas Application/'*' pull #2 of 2\r\n    ...\r\n    \r\n    Summary:\r\n      Connected to 4 of 4 hosts\r\n      Processed 12 events\r\n      Peak virtual memory useage: 361060 kB\r\n\r\n      Remote CPU utilization:\r\n        saratoga\r\n          0.15% of CPU time used by WmiPrvSE process with pid 1640\r\n          0.96% of CPU time used by WmiPrvSE#1 process with pid 2000\r\n          0.00% of CPU time used by WmiApSrv process with pid 604\r\n          0.07% of CPU time used by WmiPrvSE#2 process with pid 1604\r\n        gilroy\r\n          0.00% of CPU time used by WmiPrvSE process with pid 1384\r\n          0.00% of CPU time used by WmiPrvSE#1 process with pid 1684\r\n          0.00% of CPU time used by WmiApSrv process with pid 1924\r\n          0.15% of CPU time used by WmiPrvSE#2 process with pid 1348\r\n        milpitas\r\n          0.36% of CPU time used by wmiprvse process with pid 1924\r\n          1.01% of CPU time used by wmiprvse process with pid 816\r\n        berkeley\r\n          0.00% of CPU time used by WmiPrvSE process with pid 1624\r\n          0.00% of CPU time used by WmiPrvSE#1 process with pid 1744\r\n          0.00% of CPU time used by WmiApSrv process with pid 1620\r\n          0.07% of CPU time used by WmiPrvSE#2 process with pid 1280\r\n\r\n\r\nFeedback\r\n--------\r\n\r\nTo provide feedback on txwinrm start a discussion on the zenoss-windows forum\r\non community.zenoss.org:\r\nhttp://community.zenoss.org/community/forums/zenoss-windows\r\n\r\nZenoss uses JIRA to track bugs. Create an account and file a bug, or browse\r\nreported bugs: http://jira.zenoss.com/jira/secure/Dashboard.jspa\r\n\r\n\r\nUnit Test Coverage\r\n------------------\r\n\r\nAs of Apr 16, 2013...\r\n\r\n::\r\n\r\n    $ txwinrm/test/cover\r\n    ........................\r\n    ----------------------------------------------------------------------\r\n    Ran 24 tests in 7.910s\r\n\r\n    OK\r\n    Name                Stmts   Miss  Cover\r\n    ---------------------------------------\r\n    txwinrm/__init__        0      0   100%\r\n    txwinrm/constants      18      0   100%\r\n    txwinrm/enumerate     259     46    82%\r\n    txwinrm/shell         114     34    70%\r\n    txwinrm/util           89     24    73%\r\n    ---------------------------------------\r\n    TOTAL                 480    104    78%\r\n\r\n\r\nDevelop\r\n-------\r\n\r\nRun txwinrm/test/precommit before merging to master. This requires that you...\r\n\r\n::\r\n\r\n    easy_install flake8\r\n    easy_install coverage\r\n    git clone https://github.com/dgladkov/cyclic_complexity", "description_content_type": null, "docs_url": "https://pythonhosted.org/txwinrm/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zenoss/txwinrm", "keywords": "", "license": "See LICENSE file", "maintainer": "", "maintainer_email": "", "name": "txwinrm", "package_url": "https://pypi.org/project/txwinrm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/txwinrm/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/zenoss/txwinrm"}, "release_url": "https://pypi.org/project/txwinrm/1.1.18/", "requires_dist": null, "requires_python": null, "summary": "Asynchronous Python WinRM client", "version": "1.1.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>At Zenoss we are working on a project to improve the reliability, performance\nand features of native Windows monitoring. The core of this project is this\nPython library for asynchronously managing Windows using the WinRM and WinRS\nservices. This library will then be used by Zenoss to do automatic discovery\nand monitoring the way Zenoss users are used to with some new possibilities.</p>\n<p>Right now we\u2019re trying to get as much real world experience using the library\nas possible to prove out the reliability and performance improvements we\u2019re\nhoping to achieve. If you have access to Windows servers, you can help! It\ndoesn\u2019t even require a Zenoss Core installation as this tool stands alone right\nnow.</p>\n<p>To use kerberos connections, you will need to download and build the python kerberos module from <a href=\"https://github.com/zenoss/pykerberos\" rel=\"nofollow\">https://github.com/zenoss/pykerberos</a>.</p>\n<p>See the zenoss-windows forum for updates to the project, and leave your\nfeedback there.</p>\n<p><a href=\"http://community.zenoss.org/community/forums/zenoss-windows\" rel=\"nofollow\">http://community.zenoss.org/community/forums/zenoss-windows</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Ubuntu Server 12.04.1 LTS (Python 2.7.3)</p>\n<pre>sudo apt-get update\n\nsudo apt-get -y install gcc python-dev libkrb5-dev krb5-user python-setuptools\n# if prompted for your kerberos realm, leave it blank and choose OK\n\nsudo easy_install txwinrm\n\n# if you want to use a Windows domain\nsudo genkrb5conf &lt;windows domain&gt; &lt;domain controller IP address&gt;\n\n# now you can run the txwinrm commands (winrm, winrs, typeperf, and wecutil)\n</pre>\n<p>Centos 6.3 x86_64 (Python 2.6.6)</p>\n<pre># as root\nyum -y install gcc python-devel krb5-devel krb5-workstation python-setuptools\neasy_install txwinrm\n\n# if you want to use a Windows domain\ngenkrb5conf &lt;windows domain&gt; &lt;domain controller IP address&gt;\n\n# now you can run the txwinrm commands (winrm, winrs, typeperf, and wecutil) as a normal user\n</pre>\n<p>Zenoss Core or Resource Manager 4.2.x installed on CentOS 6 (Zenoss Python 2.7)</p>\n<pre># as root\nyum -y install gcc krb5-devel krb5-workstation\n\n# as the zenoss user\neasy_install txwinrm\n\n# as root (if you want to use a Windows domain)\ngenkrb5conf &lt;windows domain&gt; &lt;domain controller IP address&gt;\n\n# now you can run the txwinrm commands (winrm, winrs, typeperf, and wecutil) as the zenoss user\n</pre>\n</div>\n<div id=\"current-feature-support\">\n<h2>Current Feature Support</h2>\n<ul>\n<li>HTTP</li>\n<li>Basic authentication</li>\n<li>WQL queries</li>\n<li>WinRS</li>\n<li>typeperf</li>\n<li>Subscribe to the Windows Event Log</li>\n<li>Kerberos authentication (domain accounts)</li>\n<li>Payload encryption (Kerberos connections)</li>\n</ul>\n</div>\n<div id=\"future-feature-support\">\n<h2>Future Feature Support</h2>\n<ul>\n<li>HTTPS</li>\n<li>NTLM authentication (local accounts)</li>\n</ul>\n</div>\n<div id=\"configuring-the-target-windows-machines\">\n<h2>Configuring the Target Windows Machines</h2>\n<p>You can enable the WinRM service on Windows Server 2003, 2008 and 2012. Run\nCommand Prompt as Administrator and execute the following commands</p>\n<pre>winrm quickconfig\nwinrm s winrm/config/service @{AllowUnencrypted=\"true\";MaxConcurrentOperationsPerUser=\"4294967295\"}\nwinrm s winrm/config/service/auth @{Basic=\"true\"}\nwinrm s winrm/config/winrs @{MaxShellsPerUser=\"2147483647\"}\n</pre>\n</div>\n<div id=\"wql-queries\">\n<h2>WQL Queries</h2>\n<p>You can pass a single host a query via the command line\u2026</p>\n<pre>$ winrm -r host -u user -f \"select * from Win32_NetworkAdapter\"\n</pre>\n<p>Another option is to create an ini-style config file and hit multiple targets\nwith multiple queries. Example config is at examples/config.ini</p>\n<pre>$ winrm -c path/to/config.ini\n</pre>\n<p>This will send WinRM enumerate requests to the hosts listed in config.ini. It\nwill send a request for each WQL query listed in that file. The output will\nlook like</p>\n<pre>&lt;hostname&gt; ==&gt; &lt;WQL query&gt;\n    &lt;property-name&gt; = &lt;value&gt;\n    ...\n    ---- (indicates start of next item)\n    &lt;property-name&gt; = &lt;value&gt;\n    ...\n...\n</pre>\n<p>Here is an example\u2026</p>\n<pre>cupertino ==&gt; Select name,caption,pathName,serviceType,startMode,startName,state From Win32_Service\n  Caption = Application Experience\n  Name = AeLookupSvc\n  PathName = C:\\Windows\\system32\\svchost.exe -k netsvcs\n  ServiceType = Share Process\n  StartMode = Manual\n  StartName = localSystem\n  State = Stopped\n  ----\n  Caption = Application Layer Gateway Service\n  Name = ALG\n...\n</pre>\n<p>A summary of the number of failures if any and number of XML elements processed\nappears at the end. The summary and any errors are written to stderr, so\nredirect stdin to /dev/null if you want terse output.</p>\n<pre>$ winrm -c path/to/config.ini &gt;/dev/null\n\nSummary:\n  Connected to 3 of 3 hosts\n  Processed 13975 elements\n  Failed to process 0 responses\n  Peak virtual memory useage: 529060 kB\n\n  Remote CPU utilization:\n    campbell\n      0.00% of CPU time used by WmiPrvSE process with pid 1544\n      4.00% of CPU time used by WmiPrvSE#1 process with pid 1684\n      4.00% of CPU time used by WmiPrvSE#2 process with pid 3048\n    cupertino\n      0.00% of CPU time used by WmiPrvSE process with pid 1608\n      3.12% of CPU time used by WmiPrvSE#1 process with pid 1764\n      9.38% of CPU time used by WmiPrvSE#2 process with pid 2608\n    gilroy\n      1.08% of CPU time used by WmiPrvSE process with pid 1428\n      5.38% of CPU time used by WmiPrvSE#1 process with pid 1760\n      4.30% of CPU time used by WmiPrvSE#2 process with pid 1268\n</pre>\n<p>The \u2018-a\u2019 option specifies the authentication method. Currently supported values\nare \u2018basic\u2019 and \u2018kerberos\u2019. \u2018basic\u2019 is the default.</p>\n<p>The \u2018-d\u2019 option increases logging, printing out the XML for all requests and\nresponses, along with the HTTP status code.</p>\n</div>\n<div id=\"winrs\">\n<h2>WinRS</h2>\n<p>The winrs program has four modes of operation:</p>\n<ul>\n<li>interactive (default): Execute many commands in an interactive command\nprompt on the remote host</li>\n<li>single: Execute a single command and return its output</li>\n<li>long: Execute a single long-running command like\n\u2018typeperf -si 1\u2019 and check the output periodically</li>\n<li>batch: Opens a command prompt on the remote system and\nexecutes a list of commands (actually right now it executes one\ncommand twice as a proof-of-concept)</li>\n</ul>\n<p>An example of interactive mode</p>\n<pre>$ winrs interactive -u Administrator -x 'typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -si 1' -r oakland\nMicrosoft Windows [Version 6.2.9200]\n(c) 2012 Microsoft Corporation. All rights reserved.\nC:\\Users\\Default&gt;dir\nVolume in drive C has no label.\nVolume Serial Number is 5E71-6BA3\nDirectory of C:\\Users\\Default\n02/22/2013  03:42 AM    &lt;DIR&gt;          Contacts\n02/22/2013  03:42 AM    &lt;DIR&gt;          Desktop\n02/22/2013  03:42 AM    &lt;DIR&gt;          Documents\n02/22/2013  03:42 AM    &lt;DIR&gt;          Downloads\n02/22/2013  03:42 AM    &lt;DIR&gt;          Favorites\n02/22/2013  03:42 AM    &lt;DIR&gt;          Links\n02/22/2013  03:42 AM    &lt;DIR&gt;          Music\n02/22/2013  03:42 AM    &lt;DIR&gt;          Pictures\n02/22/2013  03:42 AM    &lt;DIR&gt;          Saved Games\n02/22/2013  03:42 AM    &lt;DIR&gt;          Searches\n02/22/2013  03:42 AM    &lt;DIR&gt;          Videos\n0 File(s)              0 bytes\n11 Dir(s)   7,905,038,336 bytes free\n\nC:\\Users\\Default&gt;exit\n</pre>\n<p>An example of single mode</p>\n<pre>$ winrs single -u Administrator -x 'typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -sc 1' -r oakland\n{'exit_code': 0,\n 'stderr': [],\n 'stdout': ['\"(PDH-CSV 4.0)\",\"\\\\\\\\AMAZONA-SDFU7B1\\\\Memory\\\\Pages/sec\",\"\\\\\\\\AMAZONA-SDFU7B1\\\\PhysicalDisk(_Total)\\\\Avg. Disk Queue Length\",\"\\\\\\\\AMAZONA-SDFU7B1\\\\Processor(_Total)\\\\% Processor Time\"',\n            '\"04/19/2013 21:43:48.823\",\"0.000000\",\"0.000000\",\"0.005660\"',\n            'Exiting, please wait...',\n            'The command completed successfully.']}\n</pre>\n<p>An example of long mode</p>\n<pre>$ winrs long -u Administrator -x 'typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -si 1' -r oakland\n  \"(PDH-CSV 4.0)\",\"\\\\AMAZONA-SDFU7B1\\Memory\\Pages/sec\",\"\\\\AMAZONA-SDFU7B1\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\",\"\\\\AMAZONA-SDFU7B1\\Processor(_Total)\\% Processor Time\"\n  \"04/19/2013 21:43:10.603\",\"0.000000\",\"0.000000\",\"18.462005\"\n  \"04/19/2013 21:43:11.617\",\"0.000000\",\"0.000000\",\"0.000464\"\n  \"04/19/2013 21:43:12.631\",\"0.000000\",\"0.000000\",\"1.538423\"\n  \"04/19/2013 21:43:13.645\",\"0.000000\",\"0.000000\",\"0.000197\"\n</pre>\n<p>An example of batch</p>\n<pre>$ winrs batch -u Administrator -x 'typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -sc 1' -r oakland\nCreating shell on oakland.\n\nSending to oakland:\n  typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -sc 1\n\nReceived from oakland:\n  \"(PDH-CSV 4.0)\",\"\\\\AMAZONA-SDFU7B1\\Memory\\Pages/sec\",\"\\\\AMAZONA-SDFU7B1\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\",\"\\\\AMAZONA-SDFU7B1\\Processor(_Total)\\% Processor Time\"\n  \"04/19/2013 21:43:39.198\",\"0.000000\",\"0.000000\",\"0.000483\"\n  Exiting, please wait...\n  The command completed successfully.\n\nSending to oakland:\n  typeperf \"\\Memory\\Pages/sec\" \"\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\" \"\\Processor(_Total)\\% Processor Time\" -sc 1\n\nReceived from oakland:\n  \"(PDH-CSV 4.0)\",\"\\\\AMAZONA-SDFU7B1\\Memory\\Pages/sec\",\"\\\\AMAZONA-SDFU7B1\\PhysicalDisk(_Total)\\Avg. Disk Queue Length\",\"\\\\AMAZONA-SDFU7B1\\Processor(_Total)\\% Processor Time\"\n  \"04/19/2013 21:43:41.054\",\"0.000000\",\"0.000000\",\"0.000700\"\n  Exiting, please wait...\n  The command completed successfully.\n\nDeleted shell on oakland.\n\nExit code of shell on oakland: 0\n</pre>\n</div>\n<div id=\"typeperf\">\n<h2>Typeperf</h2>\n<p>txwinrm\u2019s typeperf command allows you to run a remote typeperf command, check\nthe output periodically, parse it, and print it to stdout. It support the -si\noption and multiple counters. Here is an example:</p>\n<pre>$ typeperf -r gilroy -u Administrator '\\Processor(_Total)\\% Processor Time' '\\memory\\Available Bytes' '\\paging file(_Total)\\% Usage'\n\\memory\\Available Bytes\n  00:54:27: 193130496.0\n\\paging file(_Total)\\% Usage\n  00:54:27: 0.012207\n\\Processor(_Total)\\% Processor Time\n  00:54:27: 0.004487\n\\memory\\Available Bytes\n  00:54:28: 193216512.0\n  00:54:29: 193982464.0\n\\paging file(_Total)\\% Usage\n  00:54:28: 0.012207\n  00:54:29: 0.012207\n\\Processor(_Total)\\% Processor Time\n  00:54:28: 1.542879\n  00:54:29: 0.004487\n\\memory\\Available Bytes\n  00:54:30: 193933312.0\n  00:54:31: 193941504.0\n\\paging file(_Total)\\% Usage\n  00:54:30: 0.012207\n</pre>\n</div>\n<div id=\"subscribing-to-the-windows-event-log\">\n<h2>Subscribing to the Windows Event Log</h2>\n<p>The following command shows an example of subscribing to the Windows event log:</p>\n<pre>$ wecutil -r saratoga -u Administrator\nPull #1\nEvent(system=System(provider='Microsoft-Windows-EventForwarder', event_id=111, event_id_qualifiers=None, level=None, task=None, keywords=None, time_created=datetime.datetime(2013, 5, 8, 20, 29, 31, 132000), event_record_id=None, channel=None, computer='saratoga.solutions.loc', user_id=None), data=None, rendering_info=None)\nPull #2\n</pre>\n<p>You can run wecutil against a matrix of hosts and event queries by using a config file.</p>\n<pre>$ wecutil -c examples/config.ini\nmilpitas System/'*' pull #1 of 2\nmilpitas Application/'*' pull #1 of 2\ngilroy System/'*' pull #1 of 2\n...\nmilpitas System/'*' Event(system=System(provider='Microsoft-Windows-...\n...\nmilpitas Application/'*' pull #2 of 2\n...\n\nSummary:\n  Connected to 4 of 4 hosts\n  Processed 12 events\n  Peak virtual memory useage: 361060 kB\n\n  Remote CPU utilization:\n    saratoga\n      0.15% of CPU time used by WmiPrvSE process with pid 1640\n      0.96% of CPU time used by WmiPrvSE#1 process with pid 2000\n      0.00% of CPU time used by WmiApSrv process with pid 604\n      0.07% of CPU time used by WmiPrvSE#2 process with pid 1604\n    gilroy\n      0.00% of CPU time used by WmiPrvSE process with pid 1384\n      0.00% of CPU time used by WmiPrvSE#1 process with pid 1684\n      0.00% of CPU time used by WmiApSrv process with pid 1924\n      0.15% of CPU time used by WmiPrvSE#2 process with pid 1348\n    milpitas\n      0.36% of CPU time used by wmiprvse process with pid 1924\n      1.01% of CPU time used by wmiprvse process with pid 816\n    berkeley\n      0.00% of CPU time used by WmiPrvSE process with pid 1624\n      0.00% of CPU time used by WmiPrvSE#1 process with pid 1744\n      0.00% of CPU time used by WmiApSrv process with pid 1620\n      0.07% of CPU time used by WmiPrvSE#2 process with pid 1280\n</pre>\n</div>\n<div id=\"feedback\">\n<h2>Feedback</h2>\n<p>To provide feedback on txwinrm start a discussion on the zenoss-windows forum\non community.zenoss.org:\n<a href=\"http://community.zenoss.org/community/forums/zenoss-windows\" rel=\"nofollow\">http://community.zenoss.org/community/forums/zenoss-windows</a></p>\n<p>Zenoss uses JIRA to track bugs. Create an account and file a bug, or browse\nreported bugs: <a href=\"http://jira.zenoss.com/jira/secure/Dashboard.jspa\" rel=\"nofollow\">http://jira.zenoss.com/jira/secure/Dashboard.jspa</a></p>\n</div>\n<div id=\"unit-test-coverage\">\n<h2>Unit Test Coverage</h2>\n<p>As of Apr 16, 2013\u2026</p>\n<pre>$ txwinrm/test/cover\n........................\n----------------------------------------------------------------------\nRan 24 tests in 7.910s\n\nOK\nName                Stmts   Miss  Cover\n---------------------------------------\ntxwinrm/__init__        0      0   100%\ntxwinrm/constants      18      0   100%\ntxwinrm/enumerate     259     46    82%\ntxwinrm/shell         114     34    70%\ntxwinrm/util           89     24    73%\n---------------------------------------\nTOTAL                 480    104    78%\n</pre>\n</div>\n<div id=\"develop\">\n<h2>Develop</h2>\n<p>Run txwinrm/test/precommit before merging to master. This requires that you\u2026</p>\n<pre>easy_install flake8\neasy_install coverage\ngit clone https://github.com/dgladkov/cyclic_complexity\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1747805, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cd4056d3431261d709cacc3ab9ef7d0d", "sha256": "9ce132d385e967bf755554e2595674ff0918bbb74e312aecc541766c0315cc6f"}, "downloads": -1, "filename": "txwinrm-0.1.tar.gz", "has_sig": false, "md5_digest": "cd4056d3431261d709cacc3ab9ef7d0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7741, "upload_time": "2013-04-10T17:16:55", "upload_time_iso_8601": "2013-04-10T17:16:55.978618Z", "url": "https://files.pythonhosted.org/packages/10/85/0f6010dfc1fac57fb1a3abf02203aa0cd5137f5247e7475930f201323202/txwinrm-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d6731081e67b6233f4802de9818e9ace", "sha256": "f04243a6936d2cf8aebaec373d9c1b06b1816eaacba3bcacab59ca52ab9719b1"}, "downloads": -1, "filename": "txwinrm-0.2.tar.gz", "has_sig": false, "md5_digest": "d6731081e67b6233f4802de9818e9ace", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7912, "upload_time": "2013-04-10T20:33:34", "upload_time_iso_8601": "2013-04-10T20:33:34.239542Z", "url": "https://files.pythonhosted.org/packages/0f/aa/8da8e7d99f5cdbab9fdffb1bc4d89fa387c51127e3be75eb19e2e8d1bae7/txwinrm-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e0f1bfbdafd67e416ca7b926e2bde412", "sha256": "ad5812f77efc4adff4de8b6fb3c7e8c3891bb053a4f68162fe6370685acb62c7"}, "downloads": -1, "filename": "txwinrm-0.3.tar.gz", "has_sig": false, "md5_digest": "e0f1bfbdafd67e416ca7b926e2bde412", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7931, "upload_time": "2013-04-10T21:42:21", "upload_time_iso_8601": "2013-04-10T21:42:21.695671Z", "url": "https://files.pythonhosted.org/packages/84/3e/288e5968d08ac0ce0a6e60b0b958a10dcc4d2717397e62ac0ac976350d9b/txwinrm-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "64d53c2eec7eb6038bd3fe85aa36d4d9", "sha256": "9279d974bc6598ad2a1186060bfff6e8b3ad8687cfc0bd54921c0ae0e868778f"}, "downloads": -1, "filename": "txwinrm-0.4.tar.gz", "has_sig": false, "md5_digest": "64d53c2eec7eb6038bd3fe85aa36d4d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9488, "upload_time": "2013-04-12T17:15:41", "upload_time_iso_8601": "2013-04-12T17:15:41.313082Z", "url": "https://files.pythonhosted.org/packages/88/15/0f698de13b495755034728d6864a7ffabea611f36765b2967868e45e6a9d/txwinrm-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "6164637b5507dcc4c575361fa3b634de", "sha256": "3fa4e3261c29a720f08b87fc4b693f79b92ae5b325dfd2c1e94db9874457cc70"}, "downloads": -1, "filename": "txwinrm-0.5.tar.gz", "has_sig": false, "md5_digest": "6164637b5507dcc4c575361fa3b634de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10320, "upload_time": "2013-04-15T21:34:37", "upload_time_iso_8601": "2013-04-15T21:34:37.752096Z", "url": "https://files.pythonhosted.org/packages/e0/8e/383b9aa481e2bcaac0d96edc6d8c79c9c26700821e8fc93d9b33984f3f42/txwinrm-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "f2dac802edf7aa066ede84102fa0dcff", "sha256": "6de330953505d9eb69132a36579361ce5651055bf922273a87093928c8ed7287"}, "downloads": -1, "filename": "txwinrm-0.6.tar.gz", "has_sig": false, "md5_digest": "f2dac802edf7aa066ede84102fa0dcff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17630, "upload_time": "2013-05-02T01:08:34", "upload_time_iso_8601": "2013-05-02T01:08:34.755616Z", "url": "https://files.pythonhosted.org/packages/db/06/6e55a969261ff19066bde00a6ce3ae28597faa2868934615ef8a6944a4fd/txwinrm-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "3ca092a193c3880f8ce2fc4f5aee5bed", "sha256": "3229cff05844f76d136c7886f31c5ac22fa37b0dfc4715d33cf344f1d322d136"}, "downloads": -1, "filename": "txwinrm-0.7.tar.gz", "has_sig": false, "md5_digest": "3ca092a193c3880f8ce2fc4f5aee5bed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17379, "upload_time": "2013-05-02T13:29:44", "upload_time_iso_8601": "2013-05-02T13:29:44.757231Z", "url": "https://files.pythonhosted.org/packages/74/d1/28ef74751373d07cf595f6be070b4a0c79b8213dc65d1fdd4edbd793c8fc/txwinrm-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "c7e346447b0d1d80868e64a68a989b56", "sha256": "1d2cd88522f80ae969e6720a70d7ba83332a9239c7c254b2905e1e56faff3b94"}, "downloads": -1, "filename": "txwinrm-0.8.tar.gz", "has_sig": false, "md5_digest": "c7e346447b0d1d80868e64a68a989b56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20553, "upload_time": "2013-05-02T14:17:24", "upload_time_iso_8601": "2013-05-02T14:17:24.316769Z", "url": "https://files.pythonhosted.org/packages/86/c0/f8ff0d52b8492495bb2e00f90d8a6f05444efc225d1146d14566f6b39960/txwinrm-0.8.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "9cd1beecc911baa7f128223dea4bddf4", "sha256": "5477207b3cf266c6fb668e172877602fa29bec5c2dce6ae54fb8f9ec48f894c8"}, "downloads": -1, "filename": "txwinrm-0.8.1.tar.gz", "has_sig": false, "md5_digest": "9cd1beecc911baa7f128223dea4bddf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20549, "upload_time": "2013-05-02T14:35:57", "upload_time_iso_8601": "2013-05-02T14:35:57.612733Z", "url": "https://files.pythonhosted.org/packages/fb/4e/ae1db2b20973d665aacb5cd24f782f6bdb867279f6c91d39114067adfce8/txwinrm-0.8.1.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "f43d9df1ea75a29729e38fe1f14319d4", "sha256": "a380914087f649de8fab4f0894db39e34b99de4fb969a31f4ebd7726963c4ff6"}, "downloads": -1, "filename": "txwinrm-0.9.0.tar.gz", "has_sig": false, "md5_digest": "f43d9df1ea75a29729e38fe1f14319d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30502, "upload_time": "2013-05-08T23:08:04", "upload_time_iso_8601": "2013-05-08T23:08:04.527463Z", "url": "https://files.pythonhosted.org/packages/ed/2d/750bae5875f03241e0371cd0dcfde3a577c1c887f011d68f3cf21e1a9d5f/txwinrm-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "3b9541714e158af73202df3744f2623e", "sha256": "2502d91f226af92ad516c5368e02c1c5fd8aa804de0b64d2c243e00e4fdd1fe7"}, "downloads": -1, "filename": "txwinrm-0.9.1.tar.gz", "has_sig": false, "md5_digest": "3b9541714e158af73202df3744f2623e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34228, "upload_time": "2013-05-09T21:18:31", "upload_time_iso_8601": "2013-05-09T21:18:31.008215Z", "url": "https://files.pythonhosted.org/packages/66/37/9669f388724e8aa80d1b90a1d773cdd243faa6b6390347e63fe98ad3d019/txwinrm-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "1f540c71254084923ed4591d271c8e89", "sha256": "0f29834128764f072420ebf42dd06d07e1b1bc328f513e3d77df6bc026a07a1f"}, "downloads": -1, "filename": "txwinrm-0.9.2.tar.gz", "has_sig": false, "md5_digest": "1f540c71254084923ed4591d271c8e89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34092, "upload_time": "2013-05-09T21:23:22", "upload_time_iso_8601": "2013-05-09T21:23:22.887298Z", "url": "https://files.pythonhosted.org/packages/5c/07/71c157ee625f34a1cc9d358235681c6daa366eb4f3578bd05a5cc0c94ef8/txwinrm-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "4bd4ca41e267d0bff0b2ec91296cdc5c", "sha256": "c07c036d3db28df84eef4c8f97ae554aba7332ab71ca96c32d6e1c714f5c9ede"}, "downloads": -1, "filename": "txwinrm-0.9.3.tar.gz", "has_sig": false, "md5_digest": "4bd4ca41e267d0bff0b2ec91296cdc5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36567, "upload_time": "2013-05-09T21:56:44", "upload_time_iso_8601": "2013-05-09T21:56:44.055818Z", "url": "https://files.pythonhosted.org/packages/b1/e1/0ebfcbd191599ee15c70adbe0b9b6dd4f1dc0e1a67a2baec003ff783d432/txwinrm-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "a8dca2620b52839c90a806cbe94d3bec", "sha256": "7297a612acd57cbcb8397b90339c138b865a595de1dc8a99d0dbeb46fb2f7e2d"}, "downloads": -1, "filename": "txwinrm-0.9.4.tar.gz", "has_sig": false, "md5_digest": "a8dca2620b52839c90a806cbe94d3bec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36958, "upload_time": "2013-05-10T00:41:37", "upload_time_iso_8601": "2013-05-10T00:41:37.120134Z", "url": "https://files.pythonhosted.org/packages/98/54/9367b2b6f06b16dc7f80697dac9873c98293f53920e921e2f0be818d2347/txwinrm-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "6c3fb1788d94a8d78dfdee5f133abde9", "sha256": "246caacef256911b67d3bb8da0fd9b95f7b07c50d94bf5db124ff64a378952d7"}, "downloads": -1, "filename": "txwinrm-0.9.5.tar.gz", "has_sig": false, "md5_digest": "6c3fb1788d94a8d78dfdee5f133abde9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39456, "upload_time": "2013-05-22T19:18:32", "upload_time_iso_8601": "2013-05-22T19:18:32.109582Z", "url": "https://files.pythonhosted.org/packages/c9/7f/2a4b56c7f27194ae24793370cdbbc74b3f4df5f42f3507044bd15a062822/txwinrm-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "784db48af240ebc6c75e511b31d34f26", "sha256": "f7e4f210e0cdf63cfbf10f201bfcfb08601525f95b582302f8b3a9af8c1299fc"}, "downloads": -1, "filename": "txwinrm-0.9.6.tar.gz", "has_sig": false, "md5_digest": "784db48af240ebc6c75e511b31d34f26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40134, "upload_time": "2013-05-24T19:39:52", "upload_time_iso_8601": "2013-05-24T19:39:52.192648Z", "url": "https://files.pythonhosted.org/packages/6e/e1/b0392d45ce8e1baa3e63b4eaea54c81ead3448c24a4762750daa48a207fa/txwinrm-0.9.6.tar.gz", "yanked": false}], "1.1.10": [{"comment_text": "", "digests": {"md5": "3406c49b92a639785144dc1692b29359", "sha256": "e25acef3fe06c8f0df2b0b46d9bbcdba0a9015c43d373e11328dc511f76f0081"}, "downloads": -1, "filename": "txwinrm-1.1.18.tar.gz", "has_sig": false, "md5_digest": "3406c49b92a639785144dc1692b29359", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280934, "upload_time": "2015-10-01T19:41:52", "upload_time_iso_8601": "2015-10-01T19:41:52.999307Z", "url": "https://files.pythonhosted.org/packages/1f/f8/8b325ba203165bc24d0c98de82504231377ab782d5fe84b87ec8c3744b88/txwinrm-1.1.18.tar.gz", "yanked": false}], "1.1.18": [], "1.1.6": [{"comment_text": "", "digests": {"md5": "9f2011bb19186cd6a8db6878dcf28e10", "sha256": "e5ce134c04fcf406d74ba89ea5b6674172c863991b6647f5b8e98843e6995b58"}, "downloads": -1, "filename": "txwinrm-1.1.10.tar.gz", "has_sig": false, "md5_digest": "9f2011bb19186cd6a8db6878dcf28e10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280777, "upload_time": "2015-01-28T15:08:44", "upload_time_iso_8601": "2015-01-28T15:08:44.619038Z", "url": "https://files.pythonhosted.org/packages/4b/d8/0d7cdd36ae0f8ee5a41660c2105dec2784f1eb3a47a69cb1db0e8a24faea/txwinrm-1.1.10.tar.gz", "yanked": false}]}, "urls": [], "timestamp": "Fri May  8 03:43:00 2020"}