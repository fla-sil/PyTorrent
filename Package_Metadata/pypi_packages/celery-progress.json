{"info": {"author": "Cory Zue", "author_email": "cory@coryzue.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Django :: 2.0", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "# Celery Progress Bars for Django\n\nDrop in, dependency-free progress bars for your Django/Celery applications.\n\nSuper simple setup. Lots of customization available.\n\n## Demo\n\n[Celery Progress Bar demo on Build With Django](https://buildwithdjango.com/projects/celery-progress/)\n\n## Installation\n\n```bash\npip install celery-progress\n```\n\n## Usage\n\n### Prerequisites\n\nFirst add `celery_progress` to your `INSTALLED_APPS` in `settings.py`.\n\nThen add the following url config to your main `urls.py`:\n\n```python\nfrom django.urls import re_path\nre_path(r'^celery-progress/', include('celery_progress.urls')),  # the endpoint is configurable\n```\n\n### Recording Progress\n\nIn your task you should add something like this:\n\n```python\nfrom celery import shared_task\nfrom celery_progress.backend import ProgressRecorder\nimport time\n\n@shared_task(bind=True)\ndef my_task(self, seconds):\n    progress_recorder = ProgressRecorder(self)\n    result = 0\n    for i in range(seconds):\n        time.sleep(1)\n        result += i\n        progress_recorder.set_progress(i + 1, seconds)\n    return result\n```\n\nYou can add an optional progress description like this:\n\n```python\n  progress_recorder.set_progress(i + 1, seconds, description='my progress description')\n```\n\nYou can stop your task with an exception message like this:\n\n```python\n  progress_recorder.stop_task(i + 1, seconds, 'my exception message')\n```\n\n### Displaying progress\n\nIn the view where you call the task you need to get the task ID like so:\n\n**views.py**\n```python\ndef progress_view(request):\n    result = my_task.delay(10)\n    return render(request, 'display_progress.html', context={'task_id': result.task_id})\n```\n\nThen in the page you want to show the progress bar you just do the following.\n\n#### Add the following HTML wherever you want your progress bar to appear:\n\n**display_progress.html**\n```html\n<div class='progress-wrapper'>\n  <div id='progress-bar' class='progress-bar' style=\"background-color: #68a9ef; width: 0%;\">&nbsp;</div>\n</div>\n<div id=\"progress-bar-message\">Waiting for progress to start...</div>\n```\n\n#### Import the javascript file.\n\n**display_progress.html**\n```html\n<script src=\"{% static 'celery_progress/celery_progress.js' %}\"></script>\n```\n\n#### Initialize the progress bar:\n\n```javascript\n// vanilla JS version\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var progressUrl = \"{% url 'celery_progress:task_status' task_id %}\";\n  CeleryProgressBar.initProgressBar(progressUrl);\n});\n```\n\nor\n\n```javascript\n// JQuery\n$(function () {\n  var progressUrl = \"{% url 'celery_progress:task_status' task_id %}\";\n  CeleryProgressBar.initProgressBar(progressUrl)\n});\n```\n\n### Displaying the result of a task\n\nIf you'd like you can also display the result of your task on the front end. \n\nTo do that follow the steps below. Result handling can also be customized.\n\n#### Initialize the result block:\n\nThis is all that's needed to render the result on the page.\n\n**display_progress.html**\n```html\n<div id=\"celery-result\"></div>\n```\n\nBut more likely you will want to customize how the result looks, which can be done as below:\n\n```javascript\n// JQuery\nvar progressUrl = \"{% url 'celery_progress:task_status' task_id %}\";\n\nfunction customResult(resultElement, result) {\n  $( resultElement ).append(\n    $('<p>').text('Sum of all seconds is ' + result)\n  );\n}\n\n$(function () {\n  CeleryProgressBar.initProgressBar(progressUrl, {\n    onResult: customResult,\n  })\n});\n```\n\n## Customization\n\nThe `initProgressBar` function takes an optional object of options. The following options are supported:\n\n| Option | What it does | Default Value |\n|--------|--------------|---------------|\n| pollInterval | How frequently to poll for progress (in milliseconds) | 500 |\n| progressBarId | Override the ID used for the progress bar | 'progress-bar' |\n| progressBarMessageId | Override the ID used for the progress bar message | 'progress-bar-message' |\n| progressBarElement | Override the *element* used for the progress bar. If specified, progressBarId will be ignored. | document.getElementById(progressBarId) |\n| progressBarMessageElement | Override the *element* used for the progress bar message. If specified, progressBarMessageId will be ignored. | document.getElementById(progressBarMessageId) |\n| resultElementId | Override the ID used for the result | 'celery-result' |\n| resultElement | Override the *element* used for the result. If specified, resultElementId will be ignored. | document.getElementById(resultElementId) |\n| onProgress | function to call when progress is updated | CeleryProgressBar.onProgressDefault |\n| onSuccess | function to call when progress successfully completes | CeleryProgressBar.onSuccessDefault |\n| onError | function to call when progress completes with an error | CeleryProgressBar.onErrorDefault |\n| onResult | function to call when returned non empty result | CeleryProgressBar.onResultDefault |\n\n\n# WebSocket Support\n\nThis library has experimental WebSocket support using [Django Channels](https://channels.readthedocs.io/en/latest/)\ncourtesy of [@EJH2](https://github.com/EJH2/).\n\nA working example project leveraging WebSockets is [available here](https://github.com/EJH2/cp_ws-example).\n\nTo use WebSockets, install with `pip install celery-progress[websockets,redis]` or\n`pip install celery-progress[websockets,rabbitmq]` (depending on broker dependencies).\n\nSee `WebSocketProgressRecorder` and `websockets.js` for details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/czue/celery-progress", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "celery-progress", "package_url": "https://pypi.org/project/celery-progress/", "platform": "", "project_url": "https://pypi.org/project/celery-progress/", "project_urls": {"Homepage": "https://github.com/czue/celery-progress"}, "release_url": "https://pypi.org/project/celery-progress/0.0.10/", "requires_dist": ["channels-rabbitmq ; extra == 'rabbitmq'", "channels-redis ; extra == 'redis'", "channels ; extra == 'websockets'"], "requires_python": "", "summary": "Drop in, configurable, dependency-free progress bars for your Django/Celery applications.", "version": "0.0.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Celery Progress Bars for Django</h1>\n<p>Drop in, dependency-free progress bars for your Django/Celery applications.</p>\n<p>Super simple setup. Lots of customization available.</p>\n<h2>Demo</h2>\n<p><a href=\"https://buildwithdjango.com/projects/celery-progress/\" rel=\"nofollow\">Celery Progress Bar demo on Build With Django</a></p>\n<h2>Installation</h2>\n<pre>pip install celery-progress\n</pre>\n<h2>Usage</h2>\n<h3>Prerequisites</h3>\n<p>First add <code>celery_progress</code> to your <code>INSTALLED_APPS</code> in <code>settings.py</code>.</p>\n<p>Then add the following url config to your main <code>urls.py</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">re_path</span>\n<span class=\"n\">re_path</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^celery-progress/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'celery_progress.urls'</span><span class=\"p\">)),</span>  <span class=\"c1\"># the endpoint is configurable</span>\n</pre>\n<h3>Recording Progress</h3>\n<p>In your task you should add something like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">celery</span> <span class=\"kn\">import</span> <span class=\"n\">shared_task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">celery_progress.backend</span> <span class=\"kn\">import</span> <span class=\"n\">ProgressRecorder</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"nd\">@shared_task</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_task</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">seconds</span><span class=\"p\">):</span>\n    <span class=\"n\">progress_recorder</span> <span class=\"o\">=</span> <span class=\"n\">ProgressRecorder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"p\">):</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n        <span class=\"n\">result</span> <span class=\"o\">+=</span> <span class=\"n\">i</span>\n        <span class=\"n\">progress_recorder</span><span class=\"o\">.</span><span class=\"n\">set_progress</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">seconds</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n</pre>\n<p>You can add an optional progress description like this:</p>\n<pre>  <span class=\"n\">progress_recorder</span><span class=\"o\">.</span><span class=\"n\">set_progress</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">seconds</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'my progress description'</span><span class=\"p\">)</span>\n</pre>\n<p>You can stop your task with an exception message like this:</p>\n<pre>  <span class=\"n\">progress_recorder</span><span class=\"o\">.</span><span class=\"n\">stop_task</span><span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">seconds</span><span class=\"p\">,</span> <span class=\"s1\">'my exception message'</span><span class=\"p\">)</span>\n</pre>\n<h3>Displaying progress</h3>\n<p>In the view where you call the task you need to get the task ID like so:</p>\n<p><strong>views.py</strong></p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">progress_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">my_task</span><span class=\"o\">.</span><span class=\"n\">delay</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'display_progress.html'</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'task_id'</span><span class=\"p\">:</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">task_id</span><span class=\"p\">})</span>\n</pre>\n<p>Then in the page you want to show the progress bar you just do the following.</p>\n<h4>Add the following HTML wherever you want your progress bar to appear:</h4>\n<p><strong>display_progress.html</strong></p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">'progress-wrapper'</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">'progress-bar'</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">'progress-bar'</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\"background-color: #68a9ef; width: 0%;\"</span><span class=\"p\">&gt;</span><span class=\"ni\">&amp;nbsp;</span><span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"progress-bar-message\"</span><span class=\"p\">&gt;</span>Waiting for progress to start...<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<h4>Import the javascript file.</h4>\n<p><strong>display_progress.html</strong></p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">\"{% static 'celery_progress/celery_progress.js' %}\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n</pre>\n<h4>Initialize the progress bar:</h4>\n<pre><span class=\"c1\">// vanilla JS version</span>\n<span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"s2\">\"DOMContentLoaded\"</span><span class=\"p\">,</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">progressUrl</span> <span class=\"o\">=</span> <span class=\"s2\">\"{% url 'celery_progress:task_status' task_id %}\"</span><span class=\"p\">;</span>\n  <span class=\"nx\">CeleryProgressBar</span><span class=\"p\">.</span><span class=\"nx\">initProgressBar</span><span class=\"p\">(</span><span class=\"nx\">progressUrl</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</pre>\n<p>or</p>\n<pre><span class=\"c1\">// JQuery</span>\n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">var</span> <span class=\"nx\">progressUrl</span> <span class=\"o\">=</span> <span class=\"s2\">\"{% url 'celery_progress:task_status' task_id %}\"</span><span class=\"p\">;</span>\n  <span class=\"nx\">CeleryProgressBar</span><span class=\"p\">.</span><span class=\"nx\">initProgressBar</span><span class=\"p\">(</span><span class=\"nx\">progressUrl</span><span class=\"p\">)</span>\n<span class=\"p\">});</span>\n</pre>\n<h3>Displaying the result of a task</h3>\n<p>If you'd like you can also display the result of your task on the front end.</p>\n<p>To do that follow the steps below. Result handling can also be customized.</p>\n<h4>Initialize the result block:</h4>\n<p>This is all that's needed to render the result on the page.</p>\n<p><strong>display_progress.html</strong></p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">\"celery-result\"</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre>\n<p>But more likely you will want to customize how the result looks, which can be done as below:</p>\n<pre><span class=\"c1\">// JQuery</span>\n<span class=\"kd\">var</span> <span class=\"nx\">progressUrl</span> <span class=\"o\">=</span> <span class=\"s2\">\"{% url 'celery_progress:task_status' task_id %}\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">customResult</span><span class=\"p\">(</span><span class=\"nx\">resultElement</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">$</span><span class=\"p\">(</span> <span class=\"nx\">resultElement</span> <span class=\"p\">).</span><span class=\"nx\">append</span><span class=\"p\">(</span>\n    <span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"s1\">'&lt;p&gt;'</span><span class=\"p\">).</span><span class=\"nx\">text</span><span class=\"p\">(</span><span class=\"s1\">'Sum of all seconds is '</span> <span class=\"o\">+</span> <span class=\"nx\">result</span><span class=\"p\">)</span>\n  <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">$</span><span class=\"p\">(</span><span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"nx\">CeleryProgressBar</span><span class=\"p\">.</span><span class=\"nx\">initProgressBar</span><span class=\"p\">(</span><span class=\"nx\">progressUrl</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"nx\">onResult</span><span class=\"o\">:</span> <span class=\"nx\">customResult</span><span class=\"p\">,</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">});</span>\n</pre>\n<h2>Customization</h2>\n<p>The <code>initProgressBar</code> function takes an optional object of options. The following options are supported:</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>What it does</th>\n<th>Default Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pollInterval</td>\n<td>How frequently to poll for progress (in milliseconds)</td>\n<td>500</td>\n</tr>\n<tr>\n<td>progressBarId</td>\n<td>Override the ID used for the progress bar</td>\n<td>'progress-bar'</td>\n</tr>\n<tr>\n<td>progressBarMessageId</td>\n<td>Override the ID used for the progress bar message</td>\n<td>'progress-bar-message'</td>\n</tr>\n<tr>\n<td>progressBarElement</td>\n<td>Override the <em>element</em> used for the progress bar. If specified, progressBarId will be ignored.</td>\n<td>document.getElementById(progressBarId)</td>\n</tr>\n<tr>\n<td>progressBarMessageElement</td>\n<td>Override the <em>element</em> used for the progress bar message. If specified, progressBarMessageId will be ignored.</td>\n<td>document.getElementById(progressBarMessageId)</td>\n</tr>\n<tr>\n<td>resultElementId</td>\n<td>Override the ID used for the result</td>\n<td>'celery-result'</td>\n</tr>\n<tr>\n<td>resultElement</td>\n<td>Override the <em>element</em> used for the result. If specified, resultElementId will be ignored.</td>\n<td>document.getElementById(resultElementId)</td>\n</tr>\n<tr>\n<td>onProgress</td>\n<td>function to call when progress is updated</td>\n<td>CeleryProgressBar.onProgressDefault</td>\n</tr>\n<tr>\n<td>onSuccess</td>\n<td>function to call when progress successfully completes</td>\n<td>CeleryProgressBar.onSuccessDefault</td>\n</tr>\n<tr>\n<td>onError</td>\n<td>function to call when progress completes with an error</td>\n<td>CeleryProgressBar.onErrorDefault</td>\n</tr>\n<tr>\n<td>onResult</td>\n<td>function to call when returned non empty result</td>\n<td>CeleryProgressBar.onResultDefault</td>\n</tr></tbody></table>\n<h1>WebSocket Support</h1>\n<p>This library has experimental WebSocket support using <a href=\"https://channels.readthedocs.io/en/latest/\" rel=\"nofollow\">Django Channels</a>\ncourtesy of <a href=\"https://github.com/EJH2/\" rel=\"nofollow\">@EJH2</a>.</p>\n<p>A working example project leveraging WebSockets is <a href=\"https://github.com/EJH2/cp_ws-example\" rel=\"nofollow\">available here</a>.</p>\n<p>To use WebSockets, install with <code>pip install celery-progress[websockets,redis]</code> or\n<code>pip install celery-progress[websockets,rabbitmq]</code> (depending on broker dependencies).</p>\n<p>See <code>WebSocketProgressRecorder</code> and <code>websockets.js</code> for details.</p>\n\n          </div>"}, "last_serial": 7187984, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5712ea90e60cd867faf2bc669e49a814", "sha256": "b6b9fc76821c199faad5d8db7ba81a0aa842670d92dda2f57eb001f7094b1d72"}, "downloads": -1, "filename": "celery-progress-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5712ea90e60cd867faf2bc669e49a814", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4698, "upload_time": "2018-01-20T12:29:58", "upload_time_iso_8601": "2018-01-20T12:29:58.608348Z", "url": "https://files.pythonhosted.org/packages/07/4c/f371339c182d8eeb9924022c4ba2971222517a65a41bb843983ba8d56485/celery-progress-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "86f9b840eae1c485a3e3d385278b6681", "sha256": "90941bf3aaeac9333d554a2191fa6cd81ef323472329ace0dd77344ac6aab092"}, "downloads": -1, "filename": "celery_progress-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "86f9b840eae1c485a3e3d385278b6681", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14190, "upload_time": "2020-05-07T12:18:37", "upload_time_iso_8601": "2020-05-07T12:18:37.705491Z", "url": "https://files.pythonhosted.org/packages/7c/64/94bfb8fdc2c93d4e47548c911ea3fc2c01933c7872e22c208e49c9a91e67/celery_progress-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecf6527957551822fdc58ebe2b6c6d69", "sha256": "3f7b35e1e6c79eec38f5647b024aa74193d0a41d5b47ecbb85b66f9ca68d5261"}, "downloads": -1, "filename": "celery-progress-0.0.10.tar.gz", "has_sig": false, "md5_digest": "ecf6527957551822fdc58ebe2b6c6d69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7744, "upload_time": "2020-05-07T12:18:39", "upload_time_iso_8601": "2020-05-07T12:18:39.600921Z", "url": "https://files.pythonhosted.org/packages/70/3e/13d99df34f04cb5329026880ace15b52d45998a4000d9b29b785abd740e4/celery-progress-0.0.10.tar.gz", "yanked": false}], "0.0.1b0": [{"comment_text": "", "digests": {"md5": "14689cc9a4933a3ddb670cd65a9bd690", "sha256": "c01934546e70af05a31ffd8e39598fbf3562cbc2a11630cf2a181b1ea7445c31"}, "downloads": -1, "filename": "celery-progress-0.0.1b0.tar.gz", "has_sig": false, "md5_digest": "14689cc9a4933a3ddb670cd65a9bd690", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5189, "upload_time": "2018-01-20T12:36:47", "upload_time_iso_8601": "2018-01-20T12:36:47.720458Z", "url": "https://files.pythonhosted.org/packages/21/1b/2acc644144b7b970a5e9ed16c19d797bd983f3f715c2d1d1a6e361496352/celery-progress-0.0.1b0.tar.gz", "yanked": false}], "0.0.1rc0": [{"comment_text": "", "digests": {"md5": "02b0f21029134e3fdd924b85e68d3fe3", "sha256": "42bc202cfcdae84841a0f2e1e1a7e097f67fff21f1a83bcc4407ae081af66820"}, "downloads": -1, "filename": "celery-progress-0.0.1rc0.tar.gz", "has_sig": false, "md5_digest": "02b0f21029134e3fdd924b85e68d3fe3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5631, "upload_time": "2018-01-20T12:43:45", "upload_time_iso_8601": "2018-01-20T12:43:45.123560Z", "url": "https://files.pythonhosted.org/packages/38/ec/bad6b9fcb3cd669e756941f4d0b88df4ed499ff07b8dce9d70e7298415cd/celery-progress-0.0.1rc0.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "97bc1e4f55eb702a7807689f2ff0d5b2", "sha256": "6fa87c95356e5dd0d064a4eb91d64e11a9506c56c17415f2d621e86c95adbe1c"}, "downloads": -1, "filename": "celery-progress-0.0.2.tar.gz", "has_sig": false, "md5_digest": "97bc1e4f55eb702a7807689f2ff0d5b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5219, "upload_time": "2018-01-20T12:50:27", "upload_time_iso_8601": "2018-01-20T12:50:27.848596Z", "url": "https://files.pythonhosted.org/packages/77/30/265f48b0401f2f4b8c1e220b9685666945c9beb6c396b288e730357173d4/celery-progress-0.0.2.tar.gz", "yanked": false}], "0.0.2a0": [{"comment_text": "", "digests": {"md5": "b655a70814452644026e7029b5e667cb", "sha256": "8286080901642fe7558a9c605d61843d9f888d11f0749dd6f128f773e153b4bf"}, "downloads": -1, "filename": "celery-progress-0.0.2a0.tar.gz", "has_sig": false, "md5_digest": "b655a70814452644026e7029b5e667cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5219, "upload_time": "2018-01-20T12:48:08", "upload_time_iso_8601": "2018-01-20T12:48:08.509978Z", "url": "https://files.pythonhosted.org/packages/bb/cf/63d879e89458efa0a6de0366b4cc76c799d8e85497b370f532408e467514/celery-progress-0.0.2a0.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5b38a20eee3f70ae2aad738d7811ca26", "sha256": "96870b393d5d025ee51674a10ad3f175ac6b9ae9b1c60590664cddab3ef0b769"}, "downloads": -1, "filename": "celery-progress-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5b38a20eee3f70ae2aad738d7811ca26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4986, "upload_time": "2018-01-23T13:05:13", "upload_time_iso_8601": "2018-01-23T13:05:13.077483Z", "url": "https://files.pythonhosted.org/packages/6a/92/13726745b4bc413c4da80568d01b3a12412f228015a063edb65491919e68/celery-progress-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "c2e2d787d659e5444917a776e1b6696c", "sha256": "de859f0ebec6a29edd0261d986539d726e02fc244ff6e1894615351c2ec50f78"}, "downloads": -1, "filename": "celery-progress-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c2e2d787d659e5444917a776e1b6696c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5607, "upload_time": "2019-06-18T11:55:23", "upload_time_iso_8601": "2019-06-18T11:55:23.858442Z", "url": "https://files.pythonhosted.org/packages/17/81/e8938a6845cb3aa6952cd34cfc7d4db22a58086666f511323a1d8d2b7b7b/celery-progress-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "6fb9ef7211dd19ad1f3925397a5ea00d", "sha256": "e7d1bebcb59185f44d8c5b521867b60e2f267fb4f0a331a0fb2b033421cd48c0"}, "downloads": -1, "filename": "celery_progress-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "6fb9ef7211dd19ad1f3925397a5ea00d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6686, "upload_time": "2019-09-10T09:20:01", "upload_time_iso_8601": "2019-09-10T09:20:01.231176Z", "url": "https://files.pythonhosted.org/packages/12/46/d26b7b10178dc3ce01a3394233c3c762a97c918dd48cccfbe22b44f05f89/celery_progress-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a07e07b38645577a5e74cbbffc014522", "sha256": "85cbdac9b9577fd156c00b8ce4e2b092c5f624c08aec52e475be94a573e8c25c"}, "downloads": -1, "filename": "celery-progress-0.0.5.tar.gz", "has_sig": false, "md5_digest": "a07e07b38645577a5e74cbbffc014522", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6315, "upload_time": "2019-09-10T09:20:03", "upload_time_iso_8601": "2019-09-10T09:20:03.561383Z", "url": "https://files.pythonhosted.org/packages/70/89/4a3b93e4d4904e5d8359d8d037add79173ee86943383e6a17cc36e841590/celery-progress-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "069e36e508fd1373c80f7f61327546f8", "sha256": "6667fab3cf3c3d26ef23813cb3d8555a22ba39e1c8215ea3b946d4a001cc9619"}, "downloads": -1, "filename": "celery_progress-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "069e36e508fd1373c80f7f61327546f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9678, "upload_time": "2019-10-24T06:51:43", "upload_time_iso_8601": "2019-10-24T06:51:43.341513Z", "url": "https://files.pythonhosted.org/packages/86/1a/190c1428e71cbc0c17cd093868a226b0c179c03898da1da9882849b421a6/celery_progress-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61d772d6fe7ba3da4fb071ca61dfa5dd", "sha256": "aff9ea90654ad544d18486f69e7cb396fdf9fa757e6bf25187d4c105b5095383"}, "downloads": -1, "filename": "celery-progress-0.0.6.tar.gz", "has_sig": false, "md5_digest": "61d772d6fe7ba3da4fb071ca61dfa5dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7982, "upload_time": "2019-10-24T06:51:47", "upload_time_iso_8601": "2019-10-24T06:51:47.326398Z", "url": "https://files.pythonhosted.org/packages/27/14/c58bfdbdbbd0d256fc5711e0d61972890b2b65b0e552e49c7de23b21a201/celery-progress-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "3d976373ee23593b3fcad4046030532a", "sha256": "5b527ec0d5ef7e2d14461fd19006079857b06a834efb3abcf31497114b1da1c6"}, "downloads": -1, "filename": "celery_progress-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3d976373ee23593b3fcad4046030532a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9765, "upload_time": "2019-10-28T06:52:44", "upload_time_iso_8601": "2019-10-28T06:52:44.402772Z", "url": "https://files.pythonhosted.org/packages/e9/dd/676fe77a6958995c7454bd48b214f3ee2f12f098181316ff30a1f2402978/celery_progress-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8feab90f8e0deb99391d7b7f081e21f4", "sha256": "7bd78b489ecb50da97a5350a0b5834d204ce69de8e2d7df2c057860ad7c0adfc"}, "downloads": -1, "filename": "celery-progress-0.0.7.tar.gz", "has_sig": false, "md5_digest": "8feab90f8e0deb99391d7b7f081e21f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8141, "upload_time": "2019-10-28T06:52:54", "upload_time_iso_8601": "2019-10-28T06:52:54.642778Z", "url": "https://files.pythonhosted.org/packages/9c/35/af247e8645da0fc58b1f27b08fe9a5cc75d4ef11c98f566146e8d3e3f2a8/celery-progress-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "5fa97b8ca2ae1b9cf9d3e8608e56606e", "sha256": "3c479cf7d90f3e9a4059dd60f7f1ad37af540e38fc5a7d61fa154b55db1a1040"}, "downloads": -1, "filename": "celery_progress-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5fa97b8ca2ae1b9cf9d3e8608e56606e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12506, "upload_time": "2019-11-07T05:31:32", "upload_time_iso_8601": "2019-11-07T05:31:32.541519Z", "url": "https://files.pythonhosted.org/packages/58/b9/3dcb79a95e42a8b58b44528b63c292ce09c6eef6c16e8c690c746bceb645/celery_progress-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "acef2cf020bef7c4982774dbb4ac35fb", "sha256": "a05f8a80b88b7c0acf52db9fcdc6a641d830de52163c6039901b82458ccb6066"}, "downloads": -1, "filename": "celery-progress-0.0.8.tar.gz", "has_sig": false, "md5_digest": "acef2cf020bef7c4982774dbb4ac35fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8251, "upload_time": "2019-11-07T05:31:34", "upload_time_iso_8601": "2019-11-07T05:31:34.840749Z", "url": "https://files.pythonhosted.org/packages/31/43/9de3e4eaf3fd70cee9f78ac5a0972540b64298531fa38d7576a667372409/celery-progress-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "d794af71430b780b4ff4c00d980a0193", "sha256": "82abe8101066c8d48af03a4c75eb675836c9af99169fd039c161fc9113a7b0df"}, "downloads": -1, "filename": "celery_progress-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "d794af71430b780b4ff4c00d980a0193", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12496, "upload_time": "2020-01-07T12:05:57", "upload_time_iso_8601": "2020-01-07T12:05:57.842789Z", "url": "https://files.pythonhosted.org/packages/d3/16/a9e9ffa6627bc55af7261eeefad87b6c35316fa482fd928281520ed1d221/celery_progress-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ecbd0ee4e5aa840e09afb550b810d6d", "sha256": "513833c66c9bbc2d158e973d465654b7310929bb2624d1045c4360cf025b0456"}, "downloads": -1, "filename": "celery-progress-0.0.9.tar.gz", "has_sig": false, "md5_digest": "8ecbd0ee4e5aa840e09afb550b810d6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8267, "upload_time": "2020-01-07T12:06:01", "upload_time_iso_8601": "2020-01-07T12:06:01.390783Z", "url": "https://files.pythonhosted.org/packages/1d/77/6797a054f39e34ba5c220f8af5821286d7e7a7e9e4ec70d1a57e2f244b39/celery-progress-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86f9b840eae1c485a3e3d385278b6681", "sha256": "90941bf3aaeac9333d554a2191fa6cd81ef323472329ace0dd77344ac6aab092"}, "downloads": -1, "filename": "celery_progress-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "86f9b840eae1c485a3e3d385278b6681", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14190, "upload_time": "2020-05-07T12:18:37", "upload_time_iso_8601": "2020-05-07T12:18:37.705491Z", "url": "https://files.pythonhosted.org/packages/7c/64/94bfb8fdc2c93d4e47548c911ea3fc2c01933c7872e22c208e49c9a91e67/celery_progress-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ecf6527957551822fdc58ebe2b6c6d69", "sha256": "3f7b35e1e6c79eec38f5647b024aa74193d0a41d5b47ecbb85b66f9ca68d5261"}, "downloads": -1, "filename": "celery-progress-0.0.10.tar.gz", "has_sig": false, "md5_digest": "ecf6527957551822fdc58ebe2b6c6d69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7744, "upload_time": "2020-05-07T12:18:39", "upload_time_iso_8601": "2020-05-07T12:18:39.600921Z", "url": "https://files.pythonhosted.org/packages/70/3e/13d99df34f04cb5329026880ace15b52d45998a4000d9b29b785abd740e4/celery-progress-0.0.10.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:51 2020"}