{"info": {"author": "Jean-Sebastien Suzanne", "author_email": "jssuzanne@anybox.fr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: System :: Benchmark"], "description": "Nosetests and Odoo\n==================\n\nThis is an alternative test runner that prevents confusing situations\ndue to the special ``openerp.addons`` namespace for Odoo addons.\n\nAt the time being, it is meant to be used in conjunction with the\n`buildout recipe <http://pythonhosted.org/anybox.recipe.odoo/>`_ only.\n\nUse case\n--------\nOdoo overrides the python importer for the *Odoo addons* (also called\n*modules* but we'll avoid this terminology here for confusion with\nPython modules), to place them into the ``openerp.addons`` namespace.\n\nFor instance, some ``foo`` Odoo addon will be set in the sys.modules as\n``openerp.addons.foo`` instead of just ``foo``.\n\nThe issue is that nose imports the test modules directly, with the\neffect that they aren't in the ``openerp.addons`` namespace. This\nleads to overall duplication of the Odoo addon as a Python module,\nwhich can in some cases confuse the code. For instance, some\n``isinstance()`` calls might fail, depending on the execution path.\n\nNotably, this runner is necessary for tests related to the `Odoo\nconnector framework <http://odoo-connector.com/>`_. Historically this\nis the context in which the above mentionned issue arose. Anybox had\nbeen using the ordinary ``nosetests`` for several years before\nactually stumbling on this.\n\n\nInvocation\n----------\n\nThis runner relies on the assumption that all relevant Odoo addons\nhave already been imported when the nose importer kicks in. This\ncondition is always true if used `through the\nbuildout recipe\n<http://pythonhosted.org/anybox.recipe.odoo/scripts.html#command-line-options>`_\n\nTherefore, the standard way of using the runner is to declare it in\nthe buildout configuration::\n\n  eggs = anybox.nose.odoo\n  openerp_scripts = odoo_nosetests=odoo_nosetests command-line-options=-d\n\nand then run, e.g::\n\n  bin/odoo_nosetests -d TESTING_DB -- some/module/tests\n\nCredits\n-------\nCopyright (c) 2015 Anybox SAS <http://anybox.fr>\nReleased under GPLv3+ license\n\n:Author: Jean-S\u00e9bastien SUZANNE <jssuzanne@anybox.fr>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/anybox/anybox.nose.odoo", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "anybox.nose.odoo", "package_url": "https://pypi.org/project/anybox.nose.odoo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/anybox.nose.odoo/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/anybox/anybox.nose.odoo"}, "release_url": "https://pypi.org/project/anybox.nose.odoo/0.1/", "requires_dist": null, "requires_python": null, "summary": "Console script to run nose with the good import", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is an alternative test runner that prevents confusing situations\ndue to the special <tt>openerp.addons</tt> namespace for Odoo addons.</p>\n<p>At the time being, it is meant to be used in conjunction with the\n<a href=\"http://pythonhosted.org/anybox.recipe.odoo/\" rel=\"nofollow\">buildout recipe</a> only.</p>\n<div id=\"use-case\">\n<h2>Use case</h2>\n<p>Odoo overrides the python importer for the <em>Odoo addons</em> (also called\n<em>modules</em> but we\u2019ll avoid this terminology here for confusion with\nPython modules), to place them into the <tt>openerp.addons</tt> namespace.</p>\n<p>For instance, some <tt>foo</tt> Odoo addon will be set in the sys.modules as\n<tt>openerp.addons.foo</tt> instead of just <tt>foo</tt>.</p>\n<p>The issue is that nose imports the test modules directly, with the\neffect that they aren\u2019t in the <tt>openerp.addons</tt> namespace. This\nleads to overall duplication of the Odoo addon as a Python module,\nwhich can in some cases confuse the code. For instance, some\n<tt>isinstance()</tt> calls might fail, depending on the execution path.</p>\n<p>Notably, this runner is necessary for tests related to the <a href=\"http://odoo-connector.com/\" rel=\"nofollow\">Odoo\nconnector framework</a>. Historically this\nis the context in which the above mentionned issue arose. Anybox had\nbeen using the ordinary <tt>nosetests</tt> for several years before\nactually stumbling on this.</p>\n</div>\n<div id=\"invocation\">\n<h2>Invocation</h2>\n<p>This runner relies on the assumption that all relevant Odoo addons\nhave already been imported when the nose importer kicks in. This\ncondition is always true if used <a href=\"http://pythonhosted.org/anybox.recipe.odoo/scripts.html#command-line-options\" rel=\"nofollow\">through the\nbuildout recipe</a></p>\n<p>Therefore, the standard way of using the runner is to declare it in\nthe buildout configuration:</p>\n<pre>eggs = anybox.nose.odoo\nopenerp_scripts = odoo_nosetests=odoo_nosetests command-line-options=-d\n</pre>\n<p>and then run, e.g:</p>\n<pre>bin/odoo_nosetests -d TESTING_DB -- some/module/tests\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Copyright (c) 2015 Anybox SAS &lt;<a href=\"http://anybox.fr\" rel=\"nofollow\">http://anybox.fr</a>&gt;\nReleased under GPLv3+ license</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th><td>Jean-S\u00e9bastien SUZANNE &lt;<a href=\"mailto:jssuzanne%40anybox.fr\">jssuzanne<span>@</span>anybox<span>.</span>fr</a>&gt;</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 1484424, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "63ec9c6c30ed792214881a1aa9ab9e71", "sha256": "15aa9d89a3e888fc010d287fb734a023a7c5a44d7a1d3d898211bad5c46a6791"}, "downloads": -1, "filename": "anybox.nose.odoo-0.1.tar.gz", "has_sig": false, "md5_digest": "63ec9c6c30ed792214881a1aa9ab9e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3747, "upload_time": "2015-03-31T07:48:20", "upload_time_iso_8601": "2015-03-31T07:48:20.466937Z", "url": "https://files.pythonhosted.org/packages/eb/85/6fe03074e28b67fe3566debcc5515c273509015e2766fc2e5579cf288ebc/anybox.nose.odoo-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63ec9c6c30ed792214881a1aa9ab9e71", "sha256": "15aa9d89a3e888fc010d287fb734a023a7c5a44d7a1d3d898211bad5c46a6791"}, "downloads": -1, "filename": "anybox.nose.odoo-0.1.tar.gz", "has_sig": false, "md5_digest": "63ec9c6c30ed792214881a1aa9ab9e71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3747, "upload_time": "2015-03-31T07:48:20", "upload_time_iso_8601": "2015-03-31T07:48:20.466937Z", "url": "https://files.pythonhosted.org/packages/eb/85/6fe03074e28b67fe3566debcc5515c273509015e2766fc2e5579cf288ebc/anybox.nose.odoo-0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:57 2020"}