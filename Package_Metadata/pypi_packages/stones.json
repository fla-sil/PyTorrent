{"info": {"author": "Cristi Constantin", "author_email": "cristi.constantin@speedpost.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Topic :: Database", "Topic :: Software Development"], "description": "\n# \ud83d\uddffStones\n\n[![Build Status](https://travis-ci.org/croqaz/Stones.svg?branch=master)](https://travis-ci.org/croqaz/Stones) [![Codecov](https://codecov.io/gh/croqaz/Stones/branch/master/graph/badge.svg)](https://codecov.io/gh/croqaz/Stones) ![Python 3.6](https://img.shields.io/badge/python-3.6-blue.svg)\n\n> Base library for persistent key-value stores, 100% compatible with Python dict.\n\n![Stones image](https://raw.githubusercontent.com/croqaz/stones/master/images/stones-image.jpg)\n\nThe idea behind this project is to have a common interface for a multitude of persistent key-value stores, easy to use and extend, with some extra built-in features as bonus. Inspired from [Datastore](https://github.com/datastore/datastore) and [MemDown](https://github.com/level/memdown).\n\nIt plays nice with Object Querying libraries like: [JMESPath](http://jmespath.org/), or [JSONPath RW](https://github.com/kennknowles/python-jsonpath-rw), or [ObjectPath](http://objectpath.org/).\n\n\n## Features and Limitations\n\n- the same API that you already know from [Python dict](https://docs.python.org/3/library/stdtypes.html#mapping-types-dict)\n- thread safe updates\n- excellent test coverage (>90%)\n- 1st limitation: the keys can only be bytes. They are converted from str to bytes for compatibility.\n- 2nd limitation: the values are actually also bytes, but a serializer (default is Pickle) converts the data structure into bytes\n- there are several serializers available: Pickle, JSON and optional: cbor2, msgpack. You can easily add your own serializer, please check the documentation below.\n- 3rd limitation: after the data was serialized, you have to continue using the same serializer. If for some reason, you want to switch the serializer, you can create a new Store with your new serializer and copy all the data from the old Store.\n- the Memory Store and LMDB are available by default. Other key-value Stores used to be implemented (DBM, LevelDB, Redis), but are not included anymore.\n\n\n## Install\n\nThis project uses [Python 3.6+](https://python.org/) and [pip](https://pip.pypa.io/).\nA [virtual environment](https://virtualenv.pypa.io/) is strongly encouraged.\n\n```sh\n$ pip install stones\n```\n\n\n## Usage\n\n```py\nfrom stones import stone, LmdbStore\n\n# Create a new persistent dictionary, backed by LMDB\nstor = stone('my-db', LmdbStore, serialize='pickle')\n\n# You can use it just like a normal Python dict,\n# with the limitation that keys are bytes,\n# and the values must be serializable\nstor[b's'] = b'whatever'\nstor[b'li'] = [True, False, None, -1]\nstor[b'tu'] = ('Yes', 'No', 3)\n\nb's' in stor\n# True\nlen(stor)\n# 3\nstor.keys()\n# [b'li', b's', b'tu']\nstor.values()\n# [[True, False, None, -1], b'whatever', ('Yes', 'No', 3)]\n\n# The data is decoded in place\n-1 in stor[b'li']\n# True\n3 in stor[b'tu']\n# True\n\ndel stor[b'li']\nstor.get(b'li', False)\n# False\n\n# The data is persisted\ndel stor\n# Re-create the store, using the same encoder\nstor = stone('my-db', LmdbStore, serialize='pickle')\n\nlen(stor)\n# 2\nstor.keys()\n# [b's', b'tu']\n```\n\n\n## More or less similar projects\n\nPython:\n\n* [TinyDB](https://github.com/msiemens/tinydb) - awesome lightweight document oriented database\n* [RaRe-Technologies/sqlitedict](https://github.com/RaRe-Technologies/sqlitedict) - Persistent dict backed by sqlite3 and pickle, multithread-safe\n* [Lukedeo/Cupboard](https://github.com/lukedeo/Cupboard) - store things in a variety of NoSQL KV stores\n* [ShuhaoWu/Kvkit](https://github.com/shuhaowu/kvkit) - unmaintained since 2014\n* [Datastore](https://github.com/datastore/datastore) - unmaintained since 2014\n* [Persistent dict ActiveState recipe](https://code.activestate.com/recipes/576642) - from 2009\n\nNode.js:\n\n* [MemDown](https://github.com/level/memdown) - abstract LevelDown store for Node.js and browsers\n* [AppStorage](https://github.com/faressoft/appstorage) - LocalStorage for Node.js, auto syncing objects with JSON files\n* [NeDB](https://github.com/louischatriot/nedb) - embedded database for Node.js, nw.js, Electron and browsers\n* [FortuneJS](https://github.com/fortunejs/fortune) - database abstraction layer with a common interface for databases\n* [PouchDB](https://github.com/pouchdb/pouchdb) - pocket-sized database\n\n\n## License\n\n[MIT](LICENSE) \u00a9 Cristi Constantin.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/croqaz/Stones", "keywords": "persistent dict", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "stones", "package_url": "https://pypi.org/project/stones/", "platform": "", "project_url": "https://pypi.org/project/stones/", "project_urls": {"Homepage": "https://github.com/croqaz/Stones"}, "release_url": "https://pypi.org/project/stones/0.1.4/", "requires_dist": ["flake8 ; extra == 'dev'", "codecov ; extra == 'dev'", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": ">= 3.6", "summary": "Library for Persistent key-value containers, compatible with Python dict.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\ud83d\uddffStones</h1>\n<p><a href=\"https://travis-ci.org/croqaz/Stones\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5a30d6b9ee15202c8286e74d21a6ef2d2f023fc8/68747470733a2f2f7472617669732d63692e6f72672f63726f71617a2f53746f6e65732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/croqaz/Stones\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cafd701f7ec508142a0c89cd5ec50c69902a704d/68747470733a2f2f636f6465636f762e696f2f67682f63726f71617a2f53746f6e65732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <img alt=\"Python 3.6\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/01419d339114693587408dd14856677a4789006a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362d626c75652e737667\"></p>\n<blockquote>\n<p>Base library for persistent key-value stores, 100% compatible with Python dict.</p>\n</blockquote>\n<p><img alt=\"Stones image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f97159d8fca20d16ab9fc8004c4abf0e671c32e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f63726f71617a2f73746f6e65732f6d61737465722f696d616765732f73746f6e65732d696d6167652e6a7067\"></p>\n<p>The idea behind this project is to have a common interface for a multitude of persistent key-value stores, easy to use and extend, with some extra built-in features as bonus. Inspired from <a href=\"https://github.com/datastore/datastore\" rel=\"nofollow\">Datastore</a> and <a href=\"https://github.com/level/memdown\" rel=\"nofollow\">MemDown</a>.</p>\n<p>It plays nice with Object Querying libraries like: <a href=\"http://jmespath.org/\" rel=\"nofollow\">JMESPath</a>, or <a href=\"https://github.com/kennknowles/python-jsonpath-rw\" rel=\"nofollow\">JSONPath RW</a>, or <a href=\"http://objectpath.org/\" rel=\"nofollow\">ObjectPath</a>.</p>\n<h2>Features and Limitations</h2>\n<ul>\n<li>the same API that you already know from <a href=\"https://docs.python.org/3/library/stdtypes.html#mapping-types-dict\" rel=\"nofollow\">Python dict</a></li>\n<li>thread safe updates</li>\n<li>excellent test coverage (&gt;90%)</li>\n<li>1st limitation: the keys can only be bytes. They are converted from str to bytes for compatibility.</li>\n<li>2nd limitation: the values are actually also bytes, but a serializer (default is Pickle) converts the data structure into bytes</li>\n<li>there are several serializers available: Pickle, JSON and optional: cbor2, msgpack. You can easily add your own serializer, please check the documentation below.</li>\n<li>3rd limitation: after the data was serialized, you have to continue using the same serializer. If for some reason, you want to switch the serializer, you can create a new Store with your new serializer and copy all the data from the old Store.</li>\n<li>the Memory Store and LMDB are available by default. Other key-value Stores used to be implemented (DBM, LevelDB, Redis), but are not included anymore.</li>\n</ul>\n<h2>Install</h2>\n<p>This project uses <a href=\"https://python.org/\" rel=\"nofollow\">Python 3.6+</a> and <a href=\"https://pip.pypa.io/\" rel=\"nofollow\">pip</a>.\nA <a href=\"https://virtualenv.pypa.io/\" rel=\"nofollow\">virtual environment</a> is strongly encouraged.</p>\n<pre>$ pip install stones\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">stones</span> <span class=\"kn\">import</span> <span class=\"n\">stone</span><span class=\"p\">,</span> <span class=\"n\">LmdbStore</span>\n\n<span class=\"c1\"># Create a new persistent dictionary, backed by LMDB</span>\n<span class=\"n\">stor</span> <span class=\"o\">=</span> <span class=\"n\">stone</span><span class=\"p\">(</span><span class=\"s1\">'my-db'</span><span class=\"p\">,</span> <span class=\"n\">LmdbStore</span><span class=\"p\">,</span> <span class=\"n\">serialize</span><span class=\"o\">=</span><span class=\"s1\">'pickle'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can use it just like a normal Python dict,</span>\n<span class=\"c1\"># with the limitation that keys are bytes,</span>\n<span class=\"c1\"># and the values must be serializable</span>\n<span class=\"n\">stor</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'s'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'whatever'</span>\n<span class=\"n\">stor</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'li'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"n\">stor</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'tu'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'Yes'</span><span class=\"p\">,</span> <span class=\"s1\">'No'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"sa\">b</span><span class=\"s1\">'s'</span> <span class=\"ow\">in</span> <span class=\"n\">stor</span>\n<span class=\"c1\"># True</span>\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">stor</span><span class=\"p\">)</span>\n<span class=\"c1\"># 3</span>\n<span class=\"n\">stor</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"c1\"># [b'li', b's', b'tu']</span>\n<span class=\"n\">stor</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()</span>\n<span class=\"c1\"># [[True, False, None, -1], b'whatever', ('Yes', 'No', 3)]</span>\n\n<span class=\"c1\"># The data is decoded in place</span>\n<span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"ow\">in</span> <span class=\"n\">stor</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'li'</span><span class=\"p\">]</span>\n<span class=\"c1\"># True</span>\n<span class=\"mi\">3</span> <span class=\"ow\">in</span> <span class=\"n\">stor</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'tu'</span><span class=\"p\">]</span>\n<span class=\"c1\"># True</span>\n\n<span class=\"k\">del</span> <span class=\"n\">stor</span><span class=\"p\">[</span><span class=\"sa\">b</span><span class=\"s1\">'li'</span><span class=\"p\">]</span>\n<span class=\"n\">stor</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'li'</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"c1\"># False</span>\n\n<span class=\"c1\"># The data is persisted</span>\n<span class=\"k\">del</span> <span class=\"n\">stor</span>\n<span class=\"c1\"># Re-create the store, using the same encoder</span>\n<span class=\"n\">stor</span> <span class=\"o\">=</span> <span class=\"n\">stone</span><span class=\"p\">(</span><span class=\"s1\">'my-db'</span><span class=\"p\">,</span> <span class=\"n\">LmdbStore</span><span class=\"p\">,</span> <span class=\"n\">serialize</span><span class=\"o\">=</span><span class=\"s1\">'pickle'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">stor</span><span class=\"p\">)</span>\n<span class=\"c1\"># 2</span>\n<span class=\"n\">stor</span><span class=\"o\">.</span><span class=\"n\">keys</span><span class=\"p\">()</span>\n<span class=\"c1\"># [b's', b'tu']</span>\n</pre>\n<h2>More or less similar projects</h2>\n<p>Python:</p>\n<ul>\n<li><a href=\"https://github.com/msiemens/tinydb\" rel=\"nofollow\">TinyDB</a> - awesome lightweight document oriented database</li>\n<li><a href=\"https://github.com/RaRe-Technologies/sqlitedict\" rel=\"nofollow\">RaRe-Technologies/sqlitedict</a> - Persistent dict backed by sqlite3 and pickle, multithread-safe</li>\n<li><a href=\"https://github.com/lukedeo/Cupboard\" rel=\"nofollow\">Lukedeo/Cupboard</a> - store things in a variety of NoSQL KV stores</li>\n<li><a href=\"https://github.com/shuhaowu/kvkit\" rel=\"nofollow\">ShuhaoWu/Kvkit</a> - unmaintained since 2014</li>\n<li><a href=\"https://github.com/datastore/datastore\" rel=\"nofollow\">Datastore</a> - unmaintained since 2014</li>\n<li><a href=\"https://code.activestate.com/recipes/576642\" rel=\"nofollow\">Persistent dict ActiveState recipe</a> - from 2009</li>\n</ul>\n<p>Node.js:</p>\n<ul>\n<li><a href=\"https://github.com/level/memdown\" rel=\"nofollow\">MemDown</a> - abstract LevelDown store for Node.js and browsers</li>\n<li><a href=\"https://github.com/faressoft/appstorage\" rel=\"nofollow\">AppStorage</a> - LocalStorage for Node.js, auto syncing objects with JSON files</li>\n<li><a href=\"https://github.com/louischatriot/nedb\" rel=\"nofollow\">NeDB</a> - embedded database for Node.js, nw.js, Electron and browsers</li>\n<li><a href=\"https://github.com/fortunejs/fortune\" rel=\"nofollow\">FortuneJS</a> - database abstraction layer with a common interface for databases</li>\n<li><a href=\"https://github.com/pouchdb/pouchdb\" rel=\"nofollow\">PouchDB</a> - pocket-sized database</li>\n</ul>\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT</a> \u00a9 Cristi Constantin.</p>\n\n          </div>"}, "last_serial": 6229665, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5733c3e4c83372597d4290bf2688d5c9", "sha256": "35a91c52ba69b539311a5f2a135d0ae753c7bc485b31b7616150b9dca9703fbb"}, "downloads": -1, "filename": "stones-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5733c3e4c83372597d4290bf2688d5c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 8458, "upload_time": "2019-11-12T21:57:16", "upload_time_iso_8601": "2019-11-12T21:57:16.794312Z", "url": "https://files.pythonhosted.org/packages/f3/f9/d55ecb34eb3fbdadb140eaf74c4efb1fef53089361b59f155349e7f12e44/stones-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea60a798449b687c60a948b170fa5813", "sha256": "6fcaf0719be47ae9f0f703d343a10d78652e468009e41decfc4227dca232bace"}, "downloads": -1, "filename": "stones-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ea60a798449b687c60a948b170fa5813", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 8224, "upload_time": "2019-11-12T21:57:19", "upload_time_iso_8601": "2019-11-12T21:57:19.298885Z", "url": "https://files.pythonhosted.org/packages/d0/f4/98ba0a987fd0c76f34529e2a058aa0c403133ef499e3e66eeed233ffc907/stones-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4d166e35809f8d8d0492b033a99e1b28", "sha256": "b075522db823fc9426476a2bf6c6aca97a63838789ec7eafcc699b9324c3b815"}, "downloads": -1, "filename": "stones-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4d166e35809f8d8d0492b033a99e1b28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 8502, "upload_time": "2019-11-15T12:25:06", "upload_time_iso_8601": "2019-11-15T12:25:06.446778Z", "url": "https://files.pythonhosted.org/packages/79/91/bac476edace9ed67a78590e9ee73ffe9a788aa3fc8a337eaba0a22c63788/stones-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e09934bbc1140f41b1f0b2395e316a57", "sha256": "80cfb5c79654e3707198237d88713cf4c4590b900eb51439e0d24938f28e6442"}, "downloads": -1, "filename": "stones-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e09934bbc1140f41b1f0b2395e316a57", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 8280, "upload_time": "2019-11-15T12:25:07", "upload_time_iso_8601": "2019-11-15T12:25:07.719868Z", "url": "https://files.pythonhosted.org/packages/1c/8e/0362274b9dc3e725a277d54fae56d85a6bbcb55d548d0ee4cf09ca8ddc76/stones-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0e905ebf99a0423bdbe119350c8a359b", "sha256": "156fe4f9e6974ecfaeacebc4decb4e275c6db9399abc78e304a43943c47daf64"}, "downloads": -1, "filename": "stones-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0e905ebf99a0423bdbe119350c8a359b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 8498, "upload_time": "2019-11-18T11:21:43", "upload_time_iso_8601": "2019-11-18T11:21:43.348318Z", "url": "https://files.pythonhosted.org/packages/00/2a/70c3b1b38f69dc3ef4d98e6fe97099f570b50e6bf64acb9b2b0acbd07f0f/stones-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16c49fe5ff3caa4ef74ee54c8f655cd7", "sha256": "c8ca479a28865307acb674b736e56965aeec19f306c9015ada905862970933e4"}, "downloads": -1, "filename": "stones-0.1.2.tar.gz", "has_sig": false, "md5_digest": "16c49fe5ff3caa4ef74ee54c8f655cd7", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 8276, "upload_time": "2019-11-18T11:21:45", "upload_time_iso_8601": "2019-11-18T11:21:45.099272Z", "url": "https://files.pythonhosted.org/packages/d1/13/a26387129ded86da3ba58f085d69e4a7ae7a53ad56630d59fbbe5c595bc8/stones-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e4b9dc6917f86478ea1f86d4d311d916", "sha256": "5edf6893d18ce907bbb245d93877a9d70dc0b163e8ec1e3f10fc85a6d9cab4a7"}, "downloads": -1, "filename": "stones-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e4b9dc6917f86478ea1f86d4d311d916", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 10163, "upload_time": "2019-11-20T11:54:05", "upload_time_iso_8601": "2019-11-20T11:54:05.732476Z", "url": "https://files.pythonhosted.org/packages/ed/af/4aaa9b08ba1bf00df1478b9f276e7eb5000502fdc9e4354c39e717f46aff/stones-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bfc0c0c16107af90b1ccac526176f05", "sha256": "feb60b95a682032fcc85ad70a6db21fd063ada663c1f6f6f567958213875db53"}, "downloads": -1, "filename": "stones-0.1.3.tar.gz", "has_sig": false, "md5_digest": "5bfc0c0c16107af90b1ccac526176f05", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 9987, "upload_time": "2019-11-20T11:54:07", "upload_time_iso_8601": "2019-11-20T11:54:07.480789Z", "url": "https://files.pythonhosted.org/packages/c2/10/4a3da27955ef8bb6af8c39503edf13ac2209b8a00f4211374ad878c03462/stones-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "92b65a1a5f6a44670dfae1d4427ef03a", "sha256": "99943d957d0bbf1bbd3b8f53261e053473b940d5b1b86ef67a731f764118e199"}, "downloads": -1, "filename": "stones-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "92b65a1a5f6a44670dfae1d4427ef03a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 10241, "upload_time": "2019-12-02T16:21:39", "upload_time_iso_8601": "2019-12-02T16:21:39.368281Z", "url": "https://files.pythonhosted.org/packages/78/37/5cc21d0b6e17c591e3dcc14ccc86201f183c7959a081b9690d6e359b084c/stones-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4e942e76a3f2fb8e9df6c2dfc87b070", "sha256": "b4f4882b449438809c15c0141bb9f1073643b24d5e71b5005b01715ac4c84723"}, "downloads": -1, "filename": "stones-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e4e942e76a3f2fb8e9df6c2dfc87b070", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 10125, "upload_time": "2019-12-02T16:21:40", "upload_time_iso_8601": "2019-12-02T16:21:40.799821Z", "url": "https://files.pythonhosted.org/packages/c6/70/fe9b8de5c02f72688adfd3a0f7ebb4a8f5b71e162c948a2ba1c775634030/stones-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92b65a1a5f6a44670dfae1d4427ef03a", "sha256": "99943d957d0bbf1bbd3b8f53261e053473b940d5b1b86ef67a731f764118e199"}, "downloads": -1, "filename": "stones-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "92b65a1a5f6a44670dfae1d4427ef03a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 10241, "upload_time": "2019-12-02T16:21:39", "upload_time_iso_8601": "2019-12-02T16:21:39.368281Z", "url": "https://files.pythonhosted.org/packages/78/37/5cc21d0b6e17c591e3dcc14ccc86201f183c7959a081b9690d6e359b084c/stones-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4e942e76a3f2fb8e9df6c2dfc87b070", "sha256": "b4f4882b449438809c15c0141bb9f1073643b24d5e71b5005b01715ac4c84723"}, "downloads": -1, "filename": "stones-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e4e942e76a3f2fb8e9df6c2dfc87b070", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 10125, "upload_time": "2019-12-02T16:21:40", "upload_time_iso_8601": "2019-12-02T16:21:40.799821Z", "url": "https://files.pythonhosted.org/packages/c6/70/fe9b8de5c02f72688adfd3a0f7ebb4a8f5b71e162c948a2ba1c775634030/stones-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:42 2020"}