{"info": {"author": "Floris Laporte", "author_email": "floris.laporte@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "\n# MPLPPT\n`mplppt` is a simple library made from some hacky scripts I used to use to convert matplotlib figures to powerpoint figures. Which makes this a hacky library, I guess \ud83d\ude00.\n\n## Goal\n\n`mplppt` seeks to implement an alternative `savefig` function for `matplotlib` figures. This `savefig` function saves a `matplotlib` figure with a single axis to a powerpoint presentation with a single slide containing the figure. \n\n## Installation\n```bash\npip install mplppt\n```\n\n## Supported Conversions\n\n`mplppt` supports [partly] conversion of the following matplotlib objects:\n* Lines [`matplotlib.lines.Line2D`]\n* Rectangles [`matplotlib.patches.Rectangle`]\n* Polygons [`matplotlib.patches.Polygon`]\n* pcolormesh [`matplotlib.collections.QuadMesh`]\n* text [`matplotlib.text.Text`]\n\nso far `mplppt` does not (yet) support (out of many other things):\n* markers (including tick marks)\n* linestyle\n\n\n## Simple Example\nAn example of all different conversions available for mplppt. Below we give an example of how all these objects can be combined into a single plot, which can then be exported to powerpoint:\n\n\n```python\n# plot [Line2D]\nx = np.linspace(-1,5)\ny = np.sin(x)\nplt.plot(x,y,color='C1')\n\n# rectangle\nplt.gca().add_patch(mpl.patches.Rectangle((0, 0), 3, 0.5))\n\n# polygon\nplt.gca().add_patch(mpl.patches.Polygon(np.array([[5.0,1.0],[4.0,-0.2],[2.0,0.6]]), color=\"red\"))\n\n# pcolormesh\nx = np.linspace(0,1, 100)\ny = np.linspace(0,1, 100)\nX, Y = np.meshgrid(x,y)\nZ = X**2 + Y**2\nplt.pcolormesh(X,Y,Z)\n\n# text\ntext = plt.text(0,0,'hello')\n\n# set limits\nplt.ylim(-0.5,1)\n\n# Save figure to pptx\nmplppt.savefig('first_example.pptx')\n\n# show figure\nplt.show()\n```\n\n\n![png](img/plot.png)\n\n\nWhich results in a powerpoint slide which looks as follows:\n\n![simple powerpoint export screenshot](img/slide.png)\n\n## Cool! What else can I do with this?\n\nYou are not bound to using matplotlib! The `mplppt` repository contains some standard powerpoint shapes that you can use. Try something like:\n\n\n```python\nppt = mplppt.Group() # Create a new group of objects\nppt += mplppt.Rectangle(name='rect', x=0, y=0, cx=100, cy=100, slidesize=(10,5)) # add an object to the group\nppt.save('second_example.pptx') # export the group as a ppt slide\n```\n\n## Is any of this documented?\n\nNo.\n\n## How does this work?\n\nThe repository contains a template folder, which is nothing more than an empty powerpoint presentation which is unzipped. After making a copy of the template folder and adding some `xml` code for the shapes, the modified folder is zipped into a `.pptx` file.\n\n## Copyright\n\n\u00a9 Floris Laporte - MIT License\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/flaport/mplppt", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mplppt", "package_url": "https://pypi.org/project/mplppt/", "platform": "", "project_url": "https://pypi.org/project/mplppt/", "project_urls": {"Homepage": "http://github.com/flaport/mplppt"}, "release_url": "https://pypi.org/project/mplppt/0.0.0/", "requires_dist": null, "requires_python": "", "summary": "Convert a matplotlib figure to a powerpoint slide", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MPLPPT</h1>\n<p><code>mplppt</code> is a simple library made from some hacky scripts I used to use to convert matplotlib figures to powerpoint figures. Which makes this a hacky library, I guess \ud83d\ude00.</p>\n<h2>Goal</h2>\n<p><code>mplppt</code> seeks to implement an alternative <code>savefig</code> function for <code>matplotlib</code> figures. This <code>savefig</code> function saves a <code>matplotlib</code> figure with a single axis to a powerpoint presentation with a single slide containing the figure.</p>\n<h2>Installation</h2>\n<pre>pip install mplppt\n</pre>\n<h2>Supported Conversions</h2>\n<p><code>mplppt</code> supports [partly] conversion of the following matplotlib objects:</p>\n<ul>\n<li>Lines [<code>matplotlib.lines.Line2D</code>]</li>\n<li>Rectangles [<code>matplotlib.patches.Rectangle</code>]</li>\n<li>Polygons [<code>matplotlib.patches.Polygon</code>]</li>\n<li>pcolormesh [<code>matplotlib.collections.QuadMesh</code>]</li>\n<li>text [<code>matplotlib.text.Text</code>]</li>\n</ul>\n<p>so far <code>mplppt</code> does not (yet) support (out of many other things):</p>\n<ul>\n<li>markers (including tick marks)</li>\n<li>linestyle</li>\n</ul>\n<h2>Simple Example</h2>\n<p>An example of all different conversions available for mplppt. Below we give an example of how all these objects can be combined into a single plot, which can then be exported to powerpoint:</p>\n<pre><span class=\"c1\"># plot [Line2D]</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">,</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'C1'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># rectangle</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">patches</span><span class=\"o\">.</span><span class=\"n\">Rectangle</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># polygon</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">gca</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">mpl</span><span class=\"o\">.</span><span class=\"n\">patches</span><span class=\"o\">.</span><span class=\"n\">Polygon</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mf\">5.0</span><span class=\"p\">,</span><span class=\"mf\">1.0</span><span class=\"p\">],[</span><span class=\"mf\">4.0</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">0.2</span><span class=\"p\">],[</span><span class=\"mf\">2.0</span><span class=\"p\">,</span><span class=\"mf\">0.6</span><span class=\"p\">]]),</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">\"red\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># pcolormesh</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">Y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">Z</span> <span class=\"o\">=</span> <span class=\"n\">X</span><span class=\"o\">**</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">Y</span><span class=\"o\">**</span><span class=\"mi\">2</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">pcolormesh</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span><span class=\"n\">Y</span><span class=\"p\">,</span><span class=\"n\">Z</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># text</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"s1\">'hello'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># set limits</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylim</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">0.5</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save figure to pptx</span>\n<span class=\"n\">mplppt</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'first_example.pptx'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># show figure</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/513030d86d32ed262f4089f0d6bdf568e3f62828/696d672f706c6f742e706e67\"></p>\n<p>Which results in a powerpoint slide which looks as follows:</p>\n<p><img alt=\"simple powerpoint export screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0685870828710aae911847b40f40255e74a1c007/696d672f736c6964652e706e67\"></p>\n<h2>Cool! What else can I do with this?</h2>\n<p>You are not bound to using matplotlib! The <code>mplppt</code> repository contains some standard powerpoint shapes that you can use. Try something like:</p>\n<pre><span class=\"n\">ppt</span> <span class=\"o\">=</span> <span class=\"n\">mplppt</span><span class=\"o\">.</span><span class=\"n\">Group</span><span class=\"p\">()</span> <span class=\"c1\"># Create a new group of objects</span>\n<span class=\"n\">ppt</span> <span class=\"o\">+=</span> <span class=\"n\">mplppt</span><span class=\"o\">.</span><span class=\"n\">Rectangle</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'rect'</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">cx</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">cy</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"n\">slidesize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">))</span> <span class=\"c1\"># add an object to the group</span>\n<span class=\"n\">ppt</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'second_example.pptx'</span><span class=\"p\">)</span> <span class=\"c1\"># export the group as a ppt slide</span>\n</pre>\n<h2>Is any of this documented?</h2>\n<p>No.</p>\n<h2>How does this work?</h2>\n<p>The repository contains a template folder, which is nothing more than an empty powerpoint presentation which is unzipped. After making a copy of the template folder and adding some <code>xml</code> code for the shapes, the modified folder is zipped into a <code>.pptx</code> file.</p>\n<h2>Copyright</h2>\n<p>\u00a9 Floris Laporte - MIT License</p>\n\n          </div>"}, "last_serial": 5524414, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "c742384c9218962c15732acccc0fd784", "sha256": "d58b2d919c5f0d64e6199d923f9747c53e1a147b0f77698b56ea98cfb474d957"}, "downloads": -1, "filename": "mplppt-0.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "c742384c9218962c15732acccc0fd784", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25917, "upload_time": "2019-07-12T18:17:23", "upload_time_iso_8601": "2019-07-12T18:17:23.730245Z", "url": "https://files.pythonhosted.org/packages/f4/a0/c39aa10f8453eadc174c0e3c05819810a9059a9f03ecb98644fa10a7ff8b/mplppt-0.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17ad1c262d9fb395b08ca49999af7b06", "sha256": "8be560453761d5761eb6b55a5533632967e6bd0a39bf0fc7f363edbf9b142e1e"}, "downloads": -1, "filename": "mplppt-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "17ad1c262d9fb395b08ca49999af7b06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25921, "upload_time": "2019-07-12T18:16:32", "upload_time_iso_8601": "2019-07-12T18:16:32.180076Z", "url": "https://files.pythonhosted.org/packages/6b/0e/636d46d4e99be7f00c9a1266353589ad79a96d68a2d64bcd9dcab9bae9c2/mplppt-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f23f8ad9f38885d004a4565fe6fcf2d", "sha256": "895404a4de41a6e9aa7d46ce72672ef01a0e8fe2f7c0120b642a7d2be93b621e"}, "downloads": -1, "filename": "mplppt-0.0.0.tar.gz", "has_sig": false, "md5_digest": "9f23f8ad9f38885d004a4565fe6fcf2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17926, "upload_time": "2019-07-12T18:16:34", "upload_time_iso_8601": "2019-07-12T18:16:34.736844Z", "url": "https://files.pythonhosted.org/packages/84/98/f1da00d22a37adf04b1a08ea90f8245393f5041b8b27f0c62950b7b9cc22/mplppt-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c742384c9218962c15732acccc0fd784", "sha256": "d58b2d919c5f0d64e6199d923f9747c53e1a147b0f77698b56ea98cfb474d957"}, "downloads": -1, "filename": "mplppt-0.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "c742384c9218962c15732acccc0fd784", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 25917, "upload_time": "2019-07-12T18:17:23", "upload_time_iso_8601": "2019-07-12T18:17:23.730245Z", "url": "https://files.pythonhosted.org/packages/f4/a0/c39aa10f8453eadc174c0e3c05819810a9059a9f03ecb98644fa10a7ff8b/mplppt-0.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17ad1c262d9fb395b08ca49999af7b06", "sha256": "8be560453761d5761eb6b55a5533632967e6bd0a39bf0fc7f363edbf9b142e1e"}, "downloads": -1, "filename": "mplppt-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "17ad1c262d9fb395b08ca49999af7b06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25921, "upload_time": "2019-07-12T18:16:32", "upload_time_iso_8601": "2019-07-12T18:16:32.180076Z", "url": "https://files.pythonhosted.org/packages/6b/0e/636d46d4e99be7f00c9a1266353589ad79a96d68a2d64bcd9dcab9bae9c2/mplppt-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f23f8ad9f38885d004a4565fe6fcf2d", "sha256": "895404a4de41a6e9aa7d46ce72672ef01a0e8fe2f7c0120b642a7d2be93b621e"}, "downloads": -1, "filename": "mplppt-0.0.0.tar.gz", "has_sig": false, "md5_digest": "9f23f8ad9f38885d004a4565fe6fcf2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17926, "upload_time": "2019-07-12T18:16:34", "upload_time_iso_8601": "2019-07-12T18:16:34.736844Z", "url": "https://files.pythonhosted.org/packages/84/98/f1da00d22a37adf04b1a08ea90f8245393f5041b8b27f0c62950b7b9cc22/mplppt-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:13 2020"}