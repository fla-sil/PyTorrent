{"info": {"author": "Nir Soffer", "author_email": "nsoffer@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Operating System :: POSIX :: Linux", "Programming Language :: C", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries"], "description": "==========\r\ncthreading\r\n==========\r\n\r\ncthreading implements Python 2 Lock, RLock, and Condition in C, speeding\r\nup threads synchronization and decreasing cpu usage.\r\n\r\nStatus: |travis|\r\n\r\n.. |travis| image:: https://travis-ci.org/nirs/cthreading.svg?branch=master\r\n    :alt: Travis-CI Build Status\r\n    :target: https://travis-ci.org/nirs/cthreading\r\n\r\n\r\nPerformance\r\n===========\r\n\r\ncthreading eliminates the overhead of `threading.RLock` and\r\n`threading.Condition` which are implemented in pure Python in Python 2.\r\nIn particular, `threading.Condition` is implemented using polling. In\r\nPython 3 `threading.Condition` is implemented without polling;\r\ncthreading implements a similar design in C.\r\n\r\n.. code-block::\r\n\r\n    $ time python whispers.py -m cthreading\r\n    real    0m2.664s\r\n    user    0m2.965s\r\n    sys     0m0.808s\r\n\r\n    $ time python3 whispers.py\r\n    real    0m9.664s\r\n    user    0m8.949s\r\n    sys     0m1.812s\r\n\r\n    $ time python whispers.py\r\n    real    0m14.914s\r\n    user    0m16.986s\r\n    sys     0m12.690s\r\n\r\n    $ time python whispers.py -m pthreading\r\n    real    0m20.169s\r\n    user    0m23.062s\r\n    sys     0m17.022s\r\n\r\nYour application is unlikely to have similar workload; do not expect\r\nthis improvement.\r\n\r\nFor more info see https://github.com/nirs/cthreading/wiki/performance.\r\n\r\n\r\nUsage\r\n=====\r\n\r\nImport cthreading before any other module and monkeypatch the thread and\r\nthreading modules. From this point, threading.Lock, threading.RLock, and\r\nthreading.Condition are using cthreading.\r\n\r\n.. code-block:: python\r\n\r\n    import cthreading\r\n    cthreading.monkeypatch()\r\n\r\nNote: cthreading will raise RuntimeError if the threading module was\r\nimported before `cthreading.monkeypatch()` is called.\r\n\r\n\r\nTested platforms\r\n================\r\n\r\nx86_64\r\n------\r\n\r\n- Fedora 22 / Python 2.7.10\r\n- RHEL 7.2 / Python 2.7.5\r\n- RHEL 7.2 / Python 2.7.10+ (upstream)\r\n- RHEL 7.1 / Python 2.7.5\r\n- RHEL 6.7 / Python-2.6.6\r\n- Ubuntu 14.04 Server / Python 2.7.6\r\n- Ubuntu 12.04 Server / Python 2.7.3 (python regression tests not available)\r\n- Ubuntu 12.04 / Python 2.6.9 (Travis container)\r\n- Ubuntu 12.04 / Python 2.7.9 (Travis container)\r\n\r\nPOWER8E\r\n-------\r\n\r\n- RHEL 7.2 / Python 2.7.5\r\n- RHEL 7.2 / Python 2.7.10+ (upstream)\r\n\r\n\r\nHacking\r\n=======\r\n\r\nFor rpm based distributions::\r\n\r\n    yum install python-devel python-test\r\n\r\nFor deb based distributions::\r\n\r\n    apt-get install python-dev libpython2.7-testsuite\r\n\r\nInstalling Python packages::\r\n\r\n    pip install pytest pytest-timeout yappi==0.93\r\n\r\nBuilding and running the quick tests::\r\n\r\n    make\r\n\r\nBefore submitting patches, run the Python regression tests suite::\r\n\r\n    make regrtest\r\n\r\nCheck the `Makefile` for more info.\r\n\r\n\r\nSimilar projects\r\n================\r\n\r\n- `pthreading <https://github.com/oVirt/pthreading>`_ - uses\r\n  pthread_mutex and pthread_cond apis directly via ctypes. This\r\n  introduces undefined behavior and actually slower and increases cpu\r\n  usage in most cases compared to the original Python implementation.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nirs/cthreading", "keywords": "", "license": "GNU GPLv2+", "maintainer": "", "maintainer_email": "", "name": "cthreading", "package_url": "https://pypi.org/project/cthreading/", "platform": "Linux", "project_url": "https://pypi.org/project/cthreading/", "project_urls": {"Homepage": "https://github.com/nirs/cthreading"}, "release_url": "https://pypi.org/project/cthreading/0.3/", "requires_dist": null, "requires_python": null, "summary": "C implementation of Python 2 threading's Lock, RLock, and Condition", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>cthreading implements Python 2 Lock, RLock, and Condition in C, speeding\nup threads synchronization and decreasing cpu usage.</p>\n<p>Status: <a href=\"https://travis-ci.org/nirs/cthreading\" rel=\"nofollow\"><img alt=\"Travis-CI Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/db62244c733357f193366b0e42132d450baa2d51/68747470733a2f2f7472617669732d63692e6f72672f6e6972732f63746872656164696e672e7376673f6272616e63683d6d6173746572\"></a></p>\n<div id=\"performance\">\n<h2>Performance</h2>\n<p>cthreading eliminates the overhead of <cite>threading.RLock</cite> and\n<cite>threading.Condition</cite> which are implemented in pure Python in Python 2.\nIn particular, <cite>threading.Condition</cite> is implemented using polling. In\nPython 3 <cite>threading.Condition</cite> is implemented without polling;\ncthreading implements a similar design in C.</p>\n<pre>$ time python whispers.py -m cthreading\nreal    0m2.664s\nuser    0m2.965s\nsys     0m0.808s\n\n$ time python3 whispers.py\nreal    0m9.664s\nuser    0m8.949s\nsys     0m1.812s\n\n$ time python whispers.py\nreal    0m14.914s\nuser    0m16.986s\nsys     0m12.690s\n\n$ time python whispers.py -m pthreading\nreal    0m20.169s\nuser    0m23.062s\nsys     0m17.022s\n</pre>\n<p>Your application is unlikely to have similar workload; do not expect\nthis improvement.</p>\n<p>For more info see <a href=\"https://github.com/nirs/cthreading/wiki/performance\" rel=\"nofollow\">https://github.com/nirs/cthreading/wiki/performance</a>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Import cthreading before any other module and monkeypatch the thread and\nthreading modules. From this point, threading.Lock, threading.RLock, and\nthreading.Condition are using cthreading.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cthreading</span>\n<span class=\"n\">cthreading</span><span class=\"o\">.</span><span class=\"n\">monkeypatch</span><span class=\"p\">()</span>\n</pre>\n<p>Note: cthreading will raise RuntimeError if the threading module was\nimported before <cite>cthreading.monkeypatch()</cite> is called.</p>\n</div>\n<div id=\"tested-platforms\">\n<h2>Tested platforms</h2>\n<div id=\"x86-64\">\n<h3>x86_64</h3>\n<ul>\n<li>Fedora 22 / Python 2.7.10</li>\n<li>RHEL 7.2 / Python 2.7.5</li>\n<li>RHEL 7.2 / Python 2.7.10+ (upstream)</li>\n<li>RHEL 7.1 / Python 2.7.5</li>\n<li>RHEL 6.7 / Python-2.6.6</li>\n<li>Ubuntu 14.04 Server / Python 2.7.6</li>\n<li>Ubuntu 12.04 Server / Python 2.7.3 (python regression tests not available)</li>\n<li>Ubuntu 12.04 / Python 2.6.9 (Travis container)</li>\n<li>Ubuntu 12.04 / Python 2.7.9 (Travis container)</li>\n</ul>\n</div>\n<div id=\"power8e\">\n<h3>POWER8E</h3>\n<ul>\n<li>RHEL 7.2 / Python 2.7.5</li>\n<li>RHEL 7.2 / Python 2.7.10+ (upstream)</li>\n</ul>\n</div>\n</div>\n<div id=\"hacking\">\n<h2>Hacking</h2>\n<p>For rpm based distributions:</p>\n<pre>yum install python-devel python-test\n</pre>\n<p>For deb based distributions:</p>\n<pre>apt-get install python-dev libpython2.7-testsuite\n</pre>\n<p>Installing Python packages:</p>\n<pre>pip install pytest pytest-timeout yappi==0.93\n</pre>\n<p>Building and running the quick tests:</p>\n<pre>make\n</pre>\n<p>Before submitting patches, run the Python regression tests suite:</p>\n<pre>make regrtest\n</pre>\n<p>Check the <cite>Makefile</cite> for more info.</p>\n</div>\n<div id=\"similar-projects\">\n<h2>Similar projects</h2>\n<ul>\n<li><a href=\"https://github.com/oVirt/pthreading\" rel=\"nofollow\">pthreading</a> - uses\npthread_mutex and pthread_cond apis directly via ctypes. This\nintroduces undefined behavior and actually slower and increases cpu\nusage in most cases compared to the original Python implementation.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2319390, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "74985bbbfbd12075e2e545e6f88a1a69", "sha256": "950abc0f1116cd8cfc9917a48637a79b8da635502868d24126c8ae3f882ff03e"}, "downloads": -1, "filename": "cthreading-0.1.tar.gz", "has_sig": false, "md5_digest": "74985bbbfbd12075e2e545e6f88a1a69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17897, "upload_time": "2015-10-14T08:32:53", "upload_time_iso_8601": "2015-10-14T08:32:53.930665Z", "url": "https://files.pythonhosted.org/packages/61/66/3a52af79d57c96a64ac7d7db69fbf8b11d7d449ba4bee28e31274148df8f/cthreading-0.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "876d4bbe9e842bd93a4e816c341e85aa", "sha256": "2651f506ac15c8d937c68635beaec4e551264ff5790f7ec3d1b7593e0014a6be"}, "downloads": -1, "filename": "cthreading-0.2.tar.gz", "has_sig": false, "md5_digest": "876d4bbe9e842bd93a4e816c341e85aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18234, "upload_time": "2015-10-16T18:03:13", "upload_time_iso_8601": "2015-10-16T18:03:13.135811Z", "url": "https://files.pythonhosted.org/packages/ed/16/70f6df9030b5bf0b6bf4b569d0f34b3f23b700883f6cbd53dfb89dc9f3c1/cthreading-0.2.tar.gz", "yanked": false}], "0.2": [], "0.3": [{"comment_text": "", "digests": {"md5": "923a9a9cad12baa0e794dd86447833e1", "sha256": "37fabab25a02848d59f1a1dfee5bd97d3943534b5a966750572859dd7ea5432f"}, "downloads": -1, "filename": "cthreading-0.3.tar.gz", "has_sig": false, "md5_digest": "923a9a9cad12baa0e794dd86447833e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18742, "upload_time": "2015-11-02T22:17:43", "upload_time_iso_8601": "2015-11-02T22:17:43.977562Z", "url": "https://files.pythonhosted.org/packages/40/1d/95a62ac94770eda970494fd2f28ebada34a24a0698ee0d0bd832a3d20eb3/cthreading-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "923a9a9cad12baa0e794dd86447833e1", "sha256": "37fabab25a02848d59f1a1dfee5bd97d3943534b5a966750572859dd7ea5432f"}, "downloads": -1, "filename": "cthreading-0.3.tar.gz", "has_sig": false, "md5_digest": "923a9a9cad12baa0e794dd86447833e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18742, "upload_time": "2015-11-02T22:17:43", "upload_time_iso_8601": "2015-11-02T22:17:43.977562Z", "url": "https://files.pythonhosted.org/packages/40/1d/95a62ac94770eda970494fd2f28ebada34a24a0698ee0d0bd832a3d20eb3/cthreading-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:37 2020"}