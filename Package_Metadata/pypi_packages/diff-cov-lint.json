{"info": {"author": "Sergey Verentsov", "author_email": "verentsov@eora.ru", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Diff cov lint\n\nLinting and coverage reports for git diff only.\n\n## Usage: \n\n```diff-cov-lint master new_branch --cov_report=coverage.xml --lint_report=pylint_output.txt```\n\nExample output (the command above was run in `tests/repo` folder):\n```\n======================== DIFF COVERAGE ========================\nFILE                                    COVERED STMTS   PERCENT\nsrc/add.py                                    5     8     62.5%\nsrc/modify.py                                 1     2     50.0%\n===============================================================\nTOTAL DIFF COV                                6    10     60.0%\n\n========================== DIFF LINT ==========================\nsrc/add.py:10:0 E0602: Undefined variable 'this_line_makes_no_sense' (undefined-variable)\n```\n\nArguments:  \n\nPOSITIONAL ARGUMENTS  \n    `TARGET_REF`\n        Target branch in repo  \n    `SOURCE_REF`\n        Source branch in repo  \n\nFLAGS  \n    `--cov_report=COV_REPORT`  \n        Path to coverage report in Cobertura (pytest-cov) format, If not stated, coverage report will not be produced.  \n    `--lint_report=LINT_REPORT`  \n        Path to pylint report. If not stated, linting report will not be produced.  \n    `--repo_path=REPO_PATH`  \n        Path to repo folder, defaults to \".\"\n    `--show_missing`\n        Flag to show missing lines, defaults to false\n\n## CI Setup\n\nThis project's repo uses diff-cov-lint itself. You might want to check [.gitlab-ci.yml](https://gitlab.com/sVerentsov/diff-cov-lint/blob/master/.gitlab-ci.yml) for full configuration.\n\n### Simple scenario  \nCalculate diff coverage and produce diff pylint reports for merge requests \n\n```yaml\ncode_quality_diff: \n    stage: code_quality_diff\n    script:\n        - pytest --cov=your_source_folder --cov-report xml tests # run pytest and produce xml report\n        - git fetch -a # fetch all branches to calculate diff\n        - pip install diff-cov-lint # install diff-cov-lint\n        - pylint --exit-zero diff_cov_lint > pylint_output.txt # get pylint report. --exit-zero needed for job not to fail if pylint give score less than 10.\n        - diff-cov-lint origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME --cov_report coverage.xml --lint_report pylint_output.txt # run diff-cov-lint on diff between target branch and source branch.\n    only:\n        - merge_requests # required to know target branch and source branch\n```\n\n### More complicated scenario  \n - Run tests on each push (test job)\n - Calculate diff coverage and produce diff pylint reports for merge requests (code_quality_diff job)\n - Get coverage and pylint report on full code on master or manually on any push. (code_quality_full job)\n\nTest job: \n```yaml\ntest: \n    stage: test\n    script: \n        - pytest --cov=your_source_folder --cov-report xml tests # run pytest and produce xml report\n    artifacts:\n        paths: \n            - coverage.xml # save xml report to use it in further jobs\n    only:\n        - tags  # tags and branches are default values of \"only\", so preserve them\n        - branches\n        - merge_requests # add merge_requests since code_quality_diff job will use artifacts of this job\n```\n\nDiff code quality job:\n\n```yaml\ncode_quality_diff: \n    stage: code_quality_diff\n    script:\n        - git fetch -a # fetch all branches to calculate diff\n        - pip install diff-cov-lint # install diff-cov-lint\n        - pylint --exit-zero diff_cov_lint > pylint_output.txt # get pylint report. --exit-zero needed for job not to fail if pylint give score less than 10.\n        - diff-cov-lint origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME --cov_report coverage.xml --lint_report pylint_output.txt # run diff-cov-lint on diff between target branch and source branch. coverage.xml is used from the artifact.\n    only:\n        - merge_requests\n```\n\nFull code quality job:\n\n```yaml\ncode_quality_full:\n    stage:\n        code_quality_full\n    script:\n        - pytest --cov=your_source_folder tests # simply run pytest with coverage and pylint as usual\n        - pylint --exit-zero diff_cov_lint\n    rules:\n        - if: '$CI_COMMIT_REF_NAME == \"master\"'\n        - if: $CI_MERGE_REQUEST_ID\n          when: never #otherwise this job will stuck for merge requests\n        - when: manual # use manual to make this job optional for all other pipelines. \n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/sVerentsov/diff-cov-lint", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "diff-cov-lint", "package_url": "https://pypi.org/project/diff-cov-lint/", "platform": "", "project_url": "https://pypi.org/project/diff-cov-lint/", "project_urls": {"Homepage": "https://gitlab.com/sVerentsov/diff-cov-lint"}, "release_url": "https://pypi.org/project/diff-cov-lint/0.1.4/", "requires_dist": ["fire (==0.2.1)", "gitpython (==3.0.8)", "unidiff (==0.5.5)"], "requires_python": ">=3.6", "summary": "Linting and coverage reports for diff only", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Diff cov lint</h1>\n<p>Linting and coverage reports for git diff only.</p>\n<h2>Usage:</h2>\n<p><code>diff-cov-lint master new_branch --cov_report=coverage.xml --lint_report=pylint_output.txt</code></p>\n<p>Example output (the command above was run in <code>tests/repo</code> folder):</p>\n<pre><code>======================== DIFF COVERAGE ========================\nFILE                                    COVERED STMTS   PERCENT\nsrc/add.py                                    5     8     62.5%\nsrc/modify.py                                 1     2     50.0%\n===============================================================\nTOTAL DIFF COV                                6    10     60.0%\n\n========================== DIFF LINT ==========================\nsrc/add.py:10:0 E0602: Undefined variable 'this_line_makes_no_sense' (undefined-variable)\n</code></pre>\n<p>Arguments:</p>\n<p>POSITIONAL ARGUMENTS<br>\n<code>TARGET_REF</code>\nTarget branch in repo<br>\n<code>SOURCE_REF</code>\nSource branch in repo</p>\n<p>FLAGS<br>\n<code>--cov_report=COV_REPORT</code><br>\nPath to coverage report in Cobertura (pytest-cov) format, If not stated, coverage report will not be produced.<br>\n<code>--lint_report=LINT_REPORT</code><br>\nPath to pylint report. If not stated, linting report will not be produced.<br>\n<code>--repo_path=REPO_PATH</code><br>\nPath to repo folder, defaults to \".\"\n<code>--show_missing</code>\nFlag to show missing lines, defaults to false</p>\n<h2>CI Setup</h2>\n<p>This project's repo uses diff-cov-lint itself. You might want to check <a href=\"https://gitlab.com/sVerentsov/diff-cov-lint/blob/master/.gitlab-ci.yml\" rel=\"nofollow\">.gitlab-ci.yml</a> for full configuration.</p>\n<h3>Simple scenario</h3>\n<p>Calculate diff coverage and produce diff pylint reports for merge requests</p>\n<pre><span class=\"nt\">code_quality_diff</span><span class=\"p\">:</span> \n    <span class=\"nt\">stage</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">code_quality_diff</span>\n    <span class=\"nt\">script</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pytest --cov=your_source_folder --cov-report xml tests</span> <span class=\"c1\"># run pytest and produce xml report</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">git fetch -a</span> <span class=\"c1\"># fetch all branches to calculate diff</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pip install diff-cov-lint</span> <span class=\"c1\"># install diff-cov-lint</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pylint --exit-zero diff_cov_lint &gt; pylint_output.txt</span> <span class=\"c1\"># get pylint report. --exit-zero needed for job not to fail if pylint give score less than 10.</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">diff-cov-lint origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME --cov_report coverage.xml --lint_report pylint_output.txt</span> <span class=\"c1\"># run diff-cov-lint on diff between target branch and source branch.</span>\n    <span class=\"nt\">only</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">merge_requests</span> <span class=\"c1\"># required to know target branch and source branch</span>\n</pre>\n<h3>More complicated scenario</h3>\n<ul>\n<li>Run tests on each push (test job)</li>\n<li>Calculate diff coverage and produce diff pylint reports for merge requests (code_quality_diff job)</li>\n<li>Get coverage and pylint report on full code on master or manually on any push. (code_quality_full job)</li>\n</ul>\n<p>Test job:</p>\n<pre><span class=\"nt\">test</span><span class=\"p\">:</span> \n    <span class=\"nt\">stage</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">test</span>\n    <span class=\"nt\">script</span><span class=\"p\">:</span> \n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pytest --cov=your_source_folder --cov-report xml tests</span> <span class=\"c1\"># run pytest and produce xml report</span>\n    <span class=\"nt\">artifacts</span><span class=\"p\">:</span>\n        <span class=\"nt\">paths</span><span class=\"p\">:</span> \n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">coverage.xml</span> <span class=\"c1\"># save xml report to use it in further jobs</span>\n    <span class=\"nt\">only</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">tags</span>  <span class=\"c1\"># tags and branches are default values of \"only\", so preserve them</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">branches</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">merge_requests</span> <span class=\"c1\"># add merge_requests since code_quality_diff job will use artifacts of this job</span>\n</pre>\n<p>Diff code quality job:</p>\n<pre><span class=\"nt\">code_quality_diff</span><span class=\"p\">:</span> \n    <span class=\"nt\">stage</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">code_quality_diff</span>\n    <span class=\"nt\">script</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">git fetch -a</span> <span class=\"c1\"># fetch all branches to calculate diff</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pip install diff-cov-lint</span> <span class=\"c1\"># install diff-cov-lint</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pylint --exit-zero diff_cov_lint &gt; pylint_output.txt</span> <span class=\"c1\"># get pylint report. --exit-zero needed for job not to fail if pylint give score less than 10.</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">diff-cov-lint origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME origin/$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME --cov_report coverage.xml --lint_report pylint_output.txt</span> <span class=\"c1\"># run diff-cov-lint on diff between target branch and source branch. coverage.xml is used from the artifact.</span>\n    <span class=\"nt\">only</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">merge_requests</span>\n</pre>\n<p>Full code quality job:</p>\n<pre><span class=\"nt\">code_quality_full</span><span class=\"p\">:</span>\n    <span class=\"nt\">stage</span><span class=\"p\">:</span>\n        <span class=\"l l-Scalar l-Scalar-Plain\">code_quality_full</span>\n    <span class=\"nt\">script</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pytest --cov=your_source_folder tests</span> <span class=\"c1\"># simply run pytest with coverage and pylint as usual</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">pylint --exit-zero diff_cov_lint</span>\n    <span class=\"nt\">rules</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">if</span><span class=\"p\">:</span> <span class=\"s\">'$CI_COMMIT_REF_NAME</span><span class=\"nv\"> </span><span class=\"s\">==</span><span class=\"nv\"> </span><span class=\"s\">\"master\"'</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">if</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">$CI_MERGE_REQUEST_ID</span>\n          <span class=\"nt\">when</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">never</span> <span class=\"c1\">#otherwise this job will stuck for merge requests</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">when</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">manual</span> <span class=\"c1\"># use manual to make this job optional for all other pipelines. </span>\n</pre>\n\n          </div>"}, "last_serial": 6661031, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "5c3d260c6e740c799c967254035808d9", "sha256": "821853c9cd7842ee60165d1556729b7b4c5710275e9a8b92f732f304f213cc54"}, "downloads": -1, "filename": "diff_cov_lint-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5c3d260c6e740c799c967254035808d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2853, "upload_time": "2020-01-09T15:17:28", "upload_time_iso_8601": "2020-01-09T15:17:28.830935Z", "url": "https://files.pythonhosted.org/packages/8f/a4/ad49eae5e62dc5aeb04235aa34965a1bd7f7e323c7e65c8479ca1e1789b9/diff_cov_lint-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50df3bed021cb82db21162ef97fb7b1c", "sha256": "67517ee08f8b8d1dcebb6571a0aa11e88e2dcddec627c794e8a30bcc229ba12d"}, "downloads": -1, "filename": "diff_cov_lint-0.0.4.tar.gz", "has_sig": false, "md5_digest": "50df3bed021cb82db21162ef97fb7b1c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 1969, "upload_time": "2020-01-09T15:17:31", "upload_time_iso_8601": "2020-01-09T15:17:31.016281Z", "url": "https://files.pythonhosted.org/packages/d7/0b/a2ed3280cbb2f8d889f93e3fc0fdd7ed111fc226b51a26e9f6c542bf6068/diff_cov_lint-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1482fe7822ccf5c958ff198bcfd9b58b", "sha256": "f45ff3fa647794549cc3b1e79effbcd39b0bbee44d82a801b825e8558674c538"}, "downloads": -1, "filename": "diff_cov_lint-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "1482fe7822ccf5c958ff198bcfd9b58b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6926, "upload_time": "2020-01-10T08:00:06", "upload_time_iso_8601": "2020-01-10T08:00:06.309859Z", "url": "https://files.pythonhosted.org/packages/4c/d9/b352126c945c63b859c8d3ce962e7a26cf5b2ea378bebb49410cd30fc721/diff_cov_lint-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2403bdc84415980b7cb05faaeb2f33f", "sha256": "bbe0ccb44e92ff777b45b0cd44fae508174fcc573511baf57e6b8f8859c86f70"}, "downloads": -1, "filename": "diff_cov_lint-0.0.5.tar.gz", "has_sig": false, "md5_digest": "f2403bdc84415980b7cb05faaeb2f33f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4477, "upload_time": "2020-01-10T08:00:08", "upload_time_iso_8601": "2020-01-10T08:00:08.557767Z", "url": "https://files.pythonhosted.org/packages/40/ba/b729d83aa7c7d07e00e5cefec04824f5c58160d52c9217965de8b416e2ae/diff_cov_lint-0.0.5.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c68c7ca0084ff0d0dd0b9b8dc4b1b652", "sha256": "971f8b4c50a6721cb1214d7a76a29abd3cdea3338cf73c7d7dc722514071a089"}, "downloads": -1, "filename": "diff_cov_lint-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c68c7ca0084ff0d0dd0b9b8dc4b1b652", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7698, "upload_time": "2020-01-10T20:45:17", "upload_time_iso_8601": "2020-01-10T20:45:17.407470Z", "url": "https://files.pythonhosted.org/packages/12/a9/8701bc2ffada2e7fedfff156e967d68994915f8412e416fd50fcd6fc80e1/diff_cov_lint-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "868b99916794a9a65d675787947b7825", "sha256": "fa05158b1604d3c3679a77c70fcd56863888dd7cbb6ecccb985488b91112f870"}, "downloads": -1, "filename": "diff_cov_lint-0.1.1.tar.gz", "has_sig": false, "md5_digest": "868b99916794a9a65d675787947b7825", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5383, "upload_time": "2020-01-10T20:45:18", "upload_time_iso_8601": "2020-01-10T20:45:18.639150Z", "url": "https://files.pythonhosted.org/packages/b8/9a/270576bf1d7260a8f759560775935eb43047353a64e12b9d13fdbeccbee4/diff_cov_lint-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4573a8142dc820163a4ced87fdd0f77b", "sha256": "5639d09524b4e15a8ab2801ce581695202547f8829eb8d1e8171d52b20b6f401"}, "downloads": -1, "filename": "diff_cov_lint-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "4573a8142dc820163a4ced87fdd0f77b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8324, "upload_time": "2020-01-13T05:55:41", "upload_time_iso_8601": "2020-01-13T05:55:41.142669Z", "url": "https://files.pythonhosted.org/packages/81/bd/3b24da7845c3fca9bbaa5e57fb76637bdf6c2f617fe0042ccd3122dedd5b/diff_cov_lint-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce850bea603c6b0b4279000b53ad021c", "sha256": "49a3ddd072c8b3eb3479fe374b78f6d557d50c3f60f6ba99071f98a713cc784c"}, "downloads": -1, "filename": "diff_cov_lint-0.1.2.tar.gz", "has_sig": false, "md5_digest": "ce850bea603c6b0b4279000b53ad021c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6046, "upload_time": "2020-01-13T05:55:42", "upload_time_iso_8601": "2020-01-13T05:55:42.718892Z", "url": "https://files.pythonhosted.org/packages/87/ae/0a2681bfd4e7f72267ce269f10b2d946b6d32b669ae2f6881b83a845b742/diff_cov_lint-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "06624f646db2872c9c833087b478c1c1", "sha256": "164407f5e6c5ac65255b8ef2a0cb4101c85845103c8236ccc0a48433c0f7eea2"}, "downloads": -1, "filename": "diff_cov_lint-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "06624f646db2872c9c833087b478c1c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8327, "upload_time": "2020-01-15T14:47:57", "upload_time_iso_8601": "2020-01-15T14:47:57.857181Z", "url": "https://files.pythonhosted.org/packages/81/c9/c30508352c2c34dac28dca7d3b2476e13b982c71eff3f0e7c6150dc8d09c/diff_cov_lint-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6dd7eebb9779a5979d2838a0039d2d41", "sha256": "f38ed1dcb9a83ff4c8ed47e476ea7450273d489837f7d0af5937d5888abd08ec"}, "downloads": -1, "filename": "diff_cov_lint-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6dd7eebb9779a5979d2838a0039d2d41", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6053, "upload_time": "2020-01-15T14:47:59", "upload_time_iso_8601": "2020-01-15T14:47:59.210784Z", "url": "https://files.pythonhosted.org/packages/7f/7f/12417b692c52efa9455fedccd1e091c0af16002023f9060253f6458a4714/diff_cov_lint-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b3447a898a4dbaf70d7e3a4383f24d1a", "sha256": "bb502b511f0579152671e268d53b18527e40d991a419f8494b4890e4c065616c"}, "downloads": -1, "filename": "diff_cov_lint-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b3447a898a4dbaf70d7e3a4383f24d1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8329, "upload_time": "2020-02-19T13:26:43", "upload_time_iso_8601": "2020-02-19T13:26:43.823305Z", "url": "https://files.pythonhosted.org/packages/1b/12/cf7b90ea34f2371d15ae80c42f96902e5272dc23771e3fef8c1a14fa34e5/diff_cov_lint-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f4b6568cc3db77375b14c7c549b5172", "sha256": "375413faedd13255694ecc001f8ba82396849cb7343cd99fd3105b05ec9f537b"}, "downloads": -1, "filename": "diff_cov_lint-0.1.4.tar.gz", "has_sig": false, "md5_digest": "4f4b6568cc3db77375b14c7c549b5172", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6054, "upload_time": "2020-02-19T13:26:45", "upload_time_iso_8601": "2020-02-19T13:26:45.366201Z", "url": "https://files.pythonhosted.org/packages/2d/b3/f97bdce710b1dbfab27c81356b3a9aba36803fdcfdf77d08ad404aa134ce/diff_cov_lint-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3447a898a4dbaf70d7e3a4383f24d1a", "sha256": "bb502b511f0579152671e268d53b18527e40d991a419f8494b4890e4c065616c"}, "downloads": -1, "filename": "diff_cov_lint-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b3447a898a4dbaf70d7e3a4383f24d1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8329, "upload_time": "2020-02-19T13:26:43", "upload_time_iso_8601": "2020-02-19T13:26:43.823305Z", "url": "https://files.pythonhosted.org/packages/1b/12/cf7b90ea34f2371d15ae80c42f96902e5272dc23771e3fef8c1a14fa34e5/diff_cov_lint-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f4b6568cc3db77375b14c7c549b5172", "sha256": "375413faedd13255694ecc001f8ba82396849cb7343cd99fd3105b05ec9f537b"}, "downloads": -1, "filename": "diff_cov_lint-0.1.4.tar.gz", "has_sig": false, "md5_digest": "4f4b6568cc3db77375b14c7c549b5172", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6054, "upload_time": "2020-02-19T13:26:45", "upload_time_iso_8601": "2020-02-19T13:26:45.366201Z", "url": "https://files.pythonhosted.org/packages/2d/b3/f97bdce710b1dbfab27c81356b3a9aba36803fdcfdf77d08ad404aa134ce/diff_cov_lint-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:29 2020"}