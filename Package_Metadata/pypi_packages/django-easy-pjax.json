{"info": {"author": "Filip Wasilewski", "author_email": "en@ig.ma", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Easy PJAX for Django\n====================\n\nEnhance the browsing experience of Django sites.\n\n.. image:: https://secure.travis-ci.org/nigma/django-easy-pjax.svg?branch=master\n    :target: https://secure.travis-ci.org/nigma/django-easy-pjax\n    :alt: Build Status\n.. image:: https://img.shields.io/pypi/v/django-easy-pjax.svg\n    :target: https://pypi.python.org/pypi/django-easy-pjax/\n    :alt: Latest Version\n.. image:: https://img.shields.io/pypi/dm/django-easy-pjax.svg\n    :target: https://pypi.python.org/pypi/django-easy-pjax/\n    :alt: Downloads\n.. image:: https://img.shields.io/badge/wheel-yes-green.svg\n    :target: https://pypi.python.org/pypi/django-easy-pjax/\n    :alt: Wheel\n.. image:: https://img.shields.io/pypi/l/django-easy-pjax.svg\n    :target: https://pypi.python.org/pypi/django-easy-pjax/\n    :alt: License\n\nDeveloped at `en.ig.ma software shop <http://en.ig.ma>`_.\n\nWhat is PJAX?\n-------------\n\nPJAX utilizes pushState and Ajax to load HTML from the server into the current\npage without a full reload. It's Ajax with real permalinks, page titles,\nand a working back button that fully degrades.\n\n`Check out the demo <http://easy-pjax.herokuapp.com/>`_ that illustrates this concept\nin practice and take a look at docs of `jquery-pjax`_ to get more information.\n\nThe ``django-easy-pjax`` app is a helper that makes it easy to integrate\n``jquery-pjax`` with your Django 1.5+ site.\n\nQuick Start\n-----------\n\nFirst include ``django-easy-pjax==1.3`` in your ``requirements.txt`` file,\nadd ``easy_pjax`` to your ``INSTALLED APPS`` and make sure you have\n``django.template.context_processors.request`` added to template\n``context_processors``.\n\nIf you are using Django 1.9+, you will also need to add the\n``easy_pjax.templatetags.pjax_tags`` to template ``builtins`` in your\nDjango settings:\n\n.. code-block:: python\n\n    TEMPLATES=[\n        {\n            \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n            \"DIRS\": [...],\n            \"APP_DIRS\": True,\n            \"OPTIONS\": {\n                \"builtins\": [\n                    \"easy_pjax.templatetags.pjax_tags\"\n                ],\n                \"context_processors\": [\n                    \"django.template.context_processors.request\",\n                    \"django.template.context_processors.static\",\n                    ...\n                ]\n            }\n        }\n    ]\n\nThen simply add ``|pjax:request`` filter inside your site template ``extends`` tag::\n\n   {% extends \"theme_base.html\"|pjax:request %}\n\nThe ``pjax`` filter will decide which layout template should be extended based\non HTTP headers. In the example above it will return ``theme_base.html``\nfor regular requests and ``pjax_base.html`` for PJAX requests.\n\nA generic ``pjax_base.html`` template is provided by this application, but you\nmay need to copy it to your templates root directory and adjust it to match\nyour project's template blocks.\n\nNo other modification to views, code or url configuration is required,\nso integration with other applications shouldn't be a problem.\n\nThe template filter also takes a comma-separated names of `base` and `pjax`\ntemplates as the first parameter::\n\n    {% extends \"base.html,pjax_base2.html\"|pjax:request %}\n\nThis is useful if you need to specify another template set.\n\nSee the ``demo.py`` file and ``tests`` directory for working examples.\n\nUnpjax\n------\n\n``jquery-pjax`` uses cache-busting techniques and appends ``_pjax=true``\nto query string params.\n\nIf for some reason you need to remove that param from query strings\nyou can use either the ``easy_pjax.middleware.UnpjaxMiddleware`` to remove it\nfrom all requests before they are passed to Django views, or the ``unpjax``\nfilter to modify urls emitted in templates::\n\n    <a href=\"{{ request.get_full_path|unpjax }}\">\n\nDocumentation\n-------------\n\nThe full documentation is at `django-easy-pjax.rtfd.org <http://django-easy-pjax.rtfd.org>`_.\n\nA live demo is at `easy-pjax.herokuapp.com <https://easy-pjax.herokuapp.com/>`_.\nYou can run it locally after installing dependencies by running ``python demo.py``\nscript from the cloned repository.\n\nDjango 1.9\n----------\n\nBefore Django 1.9 the ``easy-pjax`` library used the ``django.template.base.add_to_builtins``\nprivate API to automatically register itself in the template built-ins after it was added\nto the ``INSTALLED_APPS`` list.\nThis workaround was due to the fact that the ``{% load  %}`` tag cannot be placed before\nthe ``{% extends %}`` tag and the ``pjax`` template filter could not be loaded explicitly.\n\nStarting from Django 1.9 ``easy-pjax`` does not have to rely on such workarounds because\nDjango now provides a clean way to add filters and tags to template\n`built-ins <https://docs.djangoproject.com/es/1.9/topics/templates/#module-django.template.backends.django>`_.\nThis is now the recommended and the only way of installing ``easy-pjax`` template tags, also because the\n`add_to_builtins API was removed <https://docs.djangoproject.com/en/1.9/releases/1.9/#django-template-base-add-to-builtins-is-removed>`_.\n\nThis is a backward incompatible change, but one that makes the integration more explicit and\nfollowing the Zen of Python.\n\nExample of configuration settings to be used starting from Django 1.9:\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        \"easy_pjax\"\n    ]\n    MIDDLEWARE_CLASSES = [\n        \"easy_pjax.middleware.UnpjaxMiddleware\"\n    ]\n    TEMPLATES = [\n        {\n            \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n            \"DIRS\": [],\n            \"APP_DIRS\": True,\n            \"OPTIONS\": {\n                \"builtins\": [\n                    \"easy_pjax.templatetags.pjax_tags\"\n                ],\n                \"context_processors\": [\n                    \"django.template.context_processors.request\",\n                ]\n            }\n        }\n    ]\n\nNo changes are required for Django 1.8 or older.\n\nLicense\n-------\n\n``django-easy-pjax`` is released under the BSD license.\n\nOther Resources\n---------------\n\n- GitHub repository - https://github.com/nigma/django-easy-pjax\n- PyPi Package site - http://pypi.python.org/pypi/django-easy-pjax\n\nPlease note that the `jquery-pjax`_ JavaScript library in not bundled with this\napp and you still need to add proper handling to your browser-side code.\n\nCommercial Support\n------------------\n\nThis app and many other help us build better software\nand focus on delivering quality projects faster.\nWe would love to help you with your next project so get in touch\nby dropping an email at en@ig.ma.\n\n\n.. _jquery-pjax: https://github.com/defunkt/jquery-pjax\n\n\n\n\nHistory\n-------\n\n1.3.0 (2016-02-21)\n++++++++++++++++++\n\n* Django 1.9 support (the plugin should be added to ``TEMPLATES[\"OPTIONS\"][\"builtins\"]``\n  settings) - `#13 <https://github.com/nigma/django-easy-pjax/pull/13>`_\n* Fix handling of non-ascii query strings on Python 2.7 - `#14 <https://github.com/nigma/django-easy-pjax/pull/13>`_\n\n1.2.0 (2015-04-23)\n++++++++++++++++++\n\n* Django 1.7/1.8 compatibility (thanks to @scottwoodall)\n\n1.1.0 (2014-01-30)\n++++++++++++++++++\n\n* Refresh code and compatibility\n* Wheel distribution\n* Add demo at http://easy-pjax.herokuapp.com/\n* Drop official support for Django 1.4 (it should still work though)\n\n1.0.0 (2012-05-29)\n++++++++++++++++++\n\n* First release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nigma/django-easy-pjax", "keywords": "django pjax", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-easy-pjax", "package_url": "https://pypi.org/project/django-easy-pjax/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-easy-pjax/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/nigma/django-easy-pjax"}, "release_url": "https://pypi.org/project/django-easy-pjax/1.3.0/", "requires_dist": null, "requires_python": null, "summary": "Easy PJAX for Django.", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Enhance the browsing experience of Django sites.</p>\n<a href=\"https://secure.travis-ci.org/nigma/django-easy-pjax\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1c9d4d008cfcf66d40d9201ee2fd0e0b3471d26/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6e69676d612f646a616e676f2d656173792d706a61782e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/django-easy-pjax/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb2ec1f5096b9b7d175b7f05e59b3610e88e3ad3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d656173792d706a61782e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-easy-pjax/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92052138c9609271fb7ef89988866b3db61c6dd0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d656173792d706a61782e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-easy-pjax/\" rel=\"nofollow\"><img alt=\"Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66664e8566dcaf9e28a3e4690ff173a6d8c909c0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f776865656c2d7965732d677265656e2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/django-easy-pjax/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08006d3b4c14eda913b3f44d539d17dcc67b900f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a616e676f2d656173792d706a61782e737667\"></a>\n<p>Developed at <a href=\"http://en.ig.ma\" rel=\"nofollow\">en.ig.ma software shop</a>.</p>\n<div id=\"what-is-pjax\">\n<h2>What is PJAX?</h2>\n<p>PJAX utilizes pushState and Ajax to load HTML from the server into the current\npage without a full reload. It\u2019s Ajax with real permalinks, page titles,\nand a working back button that fully degrades.</p>\n<p><a href=\"http://easy-pjax.herokuapp.com/\" rel=\"nofollow\">Check out the demo</a> that illustrates this concept\nin practice and take a look at docs of <a href=\"https://github.com/defunkt/jquery-pjax\" rel=\"nofollow\">jquery-pjax</a> to get more information.</p>\n<p>The <tt><span class=\"pre\">django-easy-pjax</span></tt> app is a helper that makes it easy to integrate\n<tt><span class=\"pre\">jquery-pjax</span></tt> with your Django 1.5+ site.</p>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>First include <tt><span class=\"pre\">django-easy-pjax==1.3</span></tt> in your <tt>requirements.txt</tt> file,\nadd <tt>easy_pjax</tt> to your <tt>INSTALLED APPS</tt> and make sure you have\n<tt>django.template.context_processors.request</tt> added to template\n<tt>context_processors</tt>.</p>\n<p>If you are using Django 1.9+, you will also need to add the\n<tt>easy_pjax.templatetags.pjax_tags</tt> to template <tt>builtins</tt> in your\nDjango settings:</p>\n<pre><span class=\"n\">TEMPLATES</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"BACKEND\"</span><span class=\"p\">:</span> <span class=\"s2\">\"django.template.backends.django.DjangoTemplates\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"DIRS\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">],</span>\n        <span class=\"s2\">\"APP_DIRS\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"OPTIONS\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"builtins\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"easy_pjax.templatetags.pjax_tags\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"context_processors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"django.template.context_processors.request\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"django.template.context_processors.static\"</span><span class=\"p\">,</span>\n                <span class=\"o\">...</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Then simply add <tt>|pjax:request</tt> filter inside your site template <tt>extends</tt> tag:</p>\n<pre>{% extends \"theme_base.html\"|pjax:request %}\n</pre>\n<p>The <tt>pjax</tt> filter will decide which layout template should be extended based\non HTTP headers. In the example above it will return <tt>theme_base.html</tt>\nfor regular requests and <tt>pjax_base.html</tt> for PJAX requests.</p>\n<p>A generic <tt>pjax_base.html</tt> template is provided by this application, but you\nmay need to copy it to your templates root directory and adjust it to match\nyour project\u2019s template blocks.</p>\n<p>No other modification to views, code or url configuration is required,\nso integration with other applications shouldn\u2019t be a problem.</p>\n<p>The template filter also takes a comma-separated names of <cite>base</cite> and <cite>pjax</cite>\ntemplates as the first parameter:</p>\n<pre>{% extends \"base.html,pjax_base2.html\"|pjax:request %}\n</pre>\n<p>This is useful if you need to specify another template set.</p>\n<p>See the <tt>demo.py</tt> file and <tt>tests</tt> directory for working examples.</p>\n</div>\n<div id=\"unpjax\">\n<h2>Unpjax</h2>\n<p><tt><span class=\"pre\">jquery-pjax</span></tt> uses cache-busting techniques and appends <tt>_pjax=true</tt>\nto query string params.</p>\n<p>If for some reason you need to remove that param from query strings\nyou can use either the <tt>easy_pjax.middleware.UnpjaxMiddleware</tt> to remove it\nfrom all requests before they are passed to Django views, or the <tt>unpjax</tt>\nfilter to modify urls emitted in templates:</p>\n<pre>&lt;a href=\"{{ request.get_full_path|unpjax }}\"&gt;\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The full documentation is at <a href=\"http://django-easy-pjax.rtfd.org\" rel=\"nofollow\">django-easy-pjax.rtfd.org</a>.</p>\n<p>A live demo is at <a href=\"https://easy-pjax.herokuapp.com/\" rel=\"nofollow\">easy-pjax.herokuapp.com</a>.\nYou can run it locally after installing dependencies by running <tt>python demo.py</tt>\nscript from the cloned repository.</p>\n</div>\n<div id=\"django-1-9\">\n<h2>Django 1.9</h2>\n<p>Before Django 1.9 the <tt><span class=\"pre\">easy-pjax</span></tt> library used the <tt>django.template.base.add_to_builtins</tt>\nprivate API to automatically register itself in the template built-ins after it was added\nto the <tt>INSTALLED_APPS</tt> list.\nThis workaround was due to the fact that the <tt>{% load\u00a0 %}</tt> tag cannot be placed before\nthe <tt>{% extends %}</tt> tag and the <tt>pjax</tt> template filter could not be loaded explicitly.</p>\n<p>Starting from Django 1.9 <tt><span class=\"pre\">easy-pjax</span></tt> does not have to rely on such workarounds because\nDjango now provides a clean way to add filters and tags to template\n<a href=\"https://docs.djangoproject.com/es/1.9/topics/templates/#module-django.template.backends.django\" rel=\"nofollow\">built-ins</a>.\nThis is now the recommended and the only way of installing <tt><span class=\"pre\">easy-pjax</span></tt> template tags, also because the\n<a href=\"https://docs.djangoproject.com/en/1.9/releases/1.9/#django-template-base-add-to-builtins-is-removed\" rel=\"nofollow\">add_to_builtins API was removed</a>.</p>\n<p>This is a backward incompatible change, but one that makes the integration more explicit and\nfollowing the Zen of Python.</p>\n<p>Example of configuration settings to be used starting from Django 1.9:</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"easy_pjax\"</span>\n<span class=\"p\">]</span>\n<span class=\"n\">MIDDLEWARE_CLASSES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"easy_pjax.middleware.UnpjaxMiddleware\"</span>\n<span class=\"p\">]</span>\n<span class=\"n\">TEMPLATES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"BACKEND\"</span><span class=\"p\">:</span> <span class=\"s2\">\"django.template.backends.django.DjangoTemplates\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"DIRS\"</span><span class=\"p\">:</span> <span class=\"p\">[],</span>\n        <span class=\"s2\">\"APP_DIRS\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"OPTIONS\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"builtins\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"easy_pjax.templatetags.pjax_tags\"</span>\n            <span class=\"p\">],</span>\n            <span class=\"s2\">\"context_processors\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"s2\">\"django.template.context_processors.request\"</span><span class=\"p\">,</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>No changes are required for Django 1.8 or older.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><tt><span class=\"pre\">django-easy-pjax</span></tt> is released under the BSD license.</p>\n</div>\n<div id=\"other-resources\">\n<h2>Other Resources</h2>\n<ul>\n<li>GitHub repository - <a href=\"https://github.com/nigma/django-easy-pjax\" rel=\"nofollow\">https://github.com/nigma/django-easy-pjax</a></li>\n<li>PyPi Package site - <a href=\"http://pypi.python.org/pypi/django-easy-pjax\" rel=\"nofollow\">http://pypi.python.org/pypi/django-easy-pjax</a></li>\n</ul>\n<p>Please note that the <a href=\"https://github.com/defunkt/jquery-pjax\" rel=\"nofollow\">jquery-pjax</a> JavaScript library in not bundled with this\napp and you still need to add proper handling to your browser-side code.</p>\n</div>\n<div id=\"commercial-support\">\n<h2>Commercial Support</h2>\n<p>This app and many other help us build better software\nand focus on delivering quality projects faster.\nWe would love to help you with your next project so get in touch\nby dropping an email at <a href=\"mailto:en%40ig.ma\">en<span>@</span>ig<span>.</span>ma</a>.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.3.0 (2016-02-21)</h3>\n<ul>\n<li>Django 1.9 support (the plugin should be added to <tt><span class=\"pre\">TEMPLATES[\"OPTIONS\"][\"builtins\"]</span></tt>\nsettings) - <a href=\"https://github.com/nigma/django-easy-pjax/pull/13\" rel=\"nofollow\">#13</a></li>\n<li>Fix handling of non-ascii query strings on Python 2.7 - <a href=\"https://github.com/nigma/django-easy-pjax/pull/13\" rel=\"nofollow\">#14</a></li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.2.0 (2015-04-23)</h3>\n<ul>\n<li>Django 1.7/1.8 compatibility (thanks to @scottwoodall)</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.1.0 (2014-01-30)</h3>\n<ul>\n<li>Refresh code and compatibility</li>\n<li>Wheel distribution</li>\n<li>Add demo at <a href=\"http://easy-pjax.herokuapp.com/\" rel=\"nofollow\">http://easy-pjax.herokuapp.com/</a></li>\n<li>Drop official support for Django 1.4 (it should still work though)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.0.0 (2012-05-29)</h3>\n<ul>\n<li>First release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1968266, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "5c04eb9cd583332550c9d918263cded7", "sha256": "fde93c1197e159df1510df40e176cf48a3f83043685fc9a2c9e948b8e2323513"}, "downloads": -1, "filename": "django-easy-pjax-1.0.zip", "has_sig": false, "md5_digest": "5c04eb9cd583332550c9d918263cded7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10094, "upload_time": "2012-05-29T23:22:26", "upload_time_iso_8601": "2012-05-29T23:22:26.365190Z", "url": "https://files.pythonhosted.org/packages/3e/de/57a7267df29ee08b56f3bd114321ebafcee6aec1d011b26eead97900fe34/django-easy-pjax-1.0.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ae369eca32e57dd9cbaf01fc4fc3245d", "sha256": "1e0a6eabf8c934b0efc007b53622e3ec8bd4b9c5bbb96e362b93cbfee0c27a91"}, "downloads": -1, "filename": "django_easy_pjax-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ae369eca32e57dd9cbaf01fc4fc3245d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 8504, "upload_time": "2014-01-30T21:23:21", "upload_time_iso_8601": "2014-01-30T21:23:21.421181Z", "url": "https://files.pythonhosted.org/packages/70/f1/6a61794a1354f7c513a6b2cd9a829c0296b0480483d8b83c9ceb65197c7d/django_easy_pjax-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "966456b2ba36406cf89d112fe844d576", "sha256": "637982a05d52c9e0f64a77b45942ba63c41c42966a15c6c54a70d6820380a919"}, "downloads": -1, "filename": "django-easy-pjax-1.1.0.zip", "has_sig": false, "md5_digest": "966456b2ba36406cf89d112fe844d576", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13404, "upload_time": "2014-01-30T21:23:16", "upload_time_iso_8601": "2014-01-30T21:23:16.371417Z", "url": "https://files.pythonhosted.org/packages/d3/47/2220a2a4a4a6d0ded079dd647acb6ed432f0e129c913cac4abd591659247/django-easy-pjax-1.1.0.zip", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "9f265aa27e7c6f71373e0170d539e8f5", "sha256": "382a22406cd300207c1beeeea3625e5dad5dfca1958c7f34422f2ae0f6e1cc96"}, "downloads": -1, "filename": "django_easy_pjax-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9f265aa27e7c6f71373e0170d539e8f5", "packagetype": "bdist_wheel", "python_version": "3.3", "requires_python": null, "size": 8622, "upload_time": "2015-04-23T23:21:26", "upload_time_iso_8601": "2015-04-23T23:21:26.991648Z", "url": "https://files.pythonhosted.org/packages/fd/19/b853383d0495374f645c646a1f6995a982b9be63de3f9bba93fe956563c6/django_easy_pjax-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1488c740859ba778184aa00518321bb6", "sha256": "14da35ff0e6f4c5cdcd424bfcf7552c32254f99cf63b1a9c0cf12fbe47cf38ed"}, "downloads": -1, "filename": "django-easy-pjax-1.2.0.zip", "has_sig": false, "md5_digest": "1488c740859ba778184aa00518321bb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13599, "upload_time": "2015-04-23T23:21:21", "upload_time_iso_8601": "2015-04-23T23:21:21.129616Z", "url": "https://files.pythonhosted.org/packages/20/d4/201a631d3bd144f02456f76d64575daf3ac3d3a12206f3a8eaa828f1e4e6/django-easy-pjax-1.2.0.zip", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "10f9ab72d65681a1bc7d8270b2e215a2", "sha256": "b25d653be797fdcc89bbb52ad5c896112d10ce96bca55b91746a6281997982e7"}, "downloads": -1, "filename": "django_easy_pjax-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "10f9ab72d65681a1bc7d8270b2e215a2", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 11846, "upload_time": "2016-02-21T19:32:15", "upload_time_iso_8601": "2016-02-21T19:32:15.176826Z", "url": "https://files.pythonhosted.org/packages/61/74/fe5e2c2966051f450322272901a4784330b039c449d568aeee799c75e9ad/django_easy_pjax-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a021984088eb84632e0bc8b09a8fd95", "sha256": "49ec5cf8841e801e459f1f17e2630f46c249f86630a094a668790f3aecc27e5b"}, "downloads": -1, "filename": "django-easy-pjax-1.3.0.tar.gz", "has_sig": false, "md5_digest": "9a021984088eb84632e0bc8b09a8fd95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7355, "upload_time": "2016-02-21T19:31:57", "upload_time_iso_8601": "2016-02-21T19:31:57.891505Z", "url": "https://files.pythonhosted.org/packages/1c/5a/7ef7f5f44181c8f600628facfb918a27bdab83aae6ba1336c51447e818b5/django-easy-pjax-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "10f9ab72d65681a1bc7d8270b2e215a2", "sha256": "b25d653be797fdcc89bbb52ad5c896112d10ce96bca55b91746a6281997982e7"}, "downloads": -1, "filename": "django_easy_pjax-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "10f9ab72d65681a1bc7d8270b2e215a2", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 11846, "upload_time": "2016-02-21T19:32:15", "upload_time_iso_8601": "2016-02-21T19:32:15.176826Z", "url": "https://files.pythonhosted.org/packages/61/74/fe5e2c2966051f450322272901a4784330b039c449d568aeee799c75e9ad/django_easy_pjax-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a021984088eb84632e0bc8b09a8fd95", "sha256": "49ec5cf8841e801e459f1f17e2630f46c249f86630a094a668790f3aecc27e5b"}, "downloads": -1, "filename": "django-easy-pjax-1.3.0.tar.gz", "has_sig": false, "md5_digest": "9a021984088eb84632e0bc8b09a8fd95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7355, "upload_time": "2016-02-21T19:31:57", "upload_time_iso_8601": "2016-02-21T19:31:57.891505Z", "url": "https://files.pythonhosted.org/packages/1c/5a/7ef7f5f44181c8f600628facfb918a27bdab83aae6ba1336c51447e818b5/django-easy-pjax-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:27 2020"}