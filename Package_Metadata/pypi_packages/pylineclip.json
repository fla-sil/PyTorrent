{"info": {"author": "Michael Hirsch, Ph.D.", "author_email": "scivision@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Fortran", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Scientific/Engineering :: Visualization"], "description": "[![Actions Status](https://github.com/scivision/lineclipping-python-fortran/workflows/ci_python/badge.svg)](https://github.com/scivision/lineclipping-python-fortran/actions)\n\n\n[![PyPi versions](https://img.shields.io/pypi/pyversions/pylineclip.svg)](https://pypi.python.org/pypi/pylineclip)\n[![PyPi Download stats](http://pepy.tech/badge/pylineclip)](http://pepy.tech/project/pylineclip)\n\n# Line clipping\n\n-   `lineclipping.f90` Cohen-Sutherland line clipping algorithm for\n    massively parallel coarray modern Fortran. Input scalars or arrays,\n    output intersections or `NaN` if no intersection.\n-   `lineClipping.py` Cohen-Sutherland line clipping algorithm for Python.\n    Input scalars, output intersection length, or `None` if no intersection.\n\n\nJulia line clipping is at https://github.com/scivision/lineclipping-julia\n\n## Install\n\nTo install the latest release:\n\n```sh\npip install pylineclip\n```\n\n\n\n### Fortran\n\nIf you want to use the Fortran Cohen-Sutherland line clipping modules\ndirectly (optional):\n\n```sh\nmeson build\n\nmeson test -C build\n```\n\n## Usage\n\nThe main difference with textbook implementations is that I return a\nsentinel value (NaN, None, nothing) if there's no intersection of line\nwith box.\n\n### Python\n\n```python\nimport pylineclip.lineclipping as lc\n\nx3,y3,x4,y4 = lc.cohensutherland((xmin, ymax, xmax, ymin, x1, y1, x2, y2)\n```\n\nIf no intersection, `(None, None, None, None)` is returned.\n\n### Fortran\n\nlineclipping.f90 has two subroutines.\nPick Ccohensutherland if you're calling from C/C++/Python, which cannot tolerate assummed-shape arrays.\nIt's a slim wrapper to cohensutherland which is elemental (can handle scalar or any rank array).\n\nFortran programs will simply use\n\n```fortran\nuse lineclipping\ncall cohensutherland(xmin,ymax,xmax,ymin,x1,y1,x2,y2)\n```\n\nThe arguments are:\n\n    INPUTS\n    ------\n    xmin,ymax,xmax,ymin:  upper left and lower right corners of box (pixel coordinates)\n\n    INOUT\n    -----\n    x1,y1,x2,y2:\n    in - endpoints of line\n    out - intersection points with box. If no intersection, all NaN", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scivision/lineclipping-python-fortran", "keywords": "line clipping,cohen-sutherland", "license": "", "maintainer": "", "maintainer_email": "", "name": "pylineclip", "package_url": "https://pypi.org/project/pylineclip/", "platform": "", "project_url": "https://pypi.org/project/pylineclip/", "project_urls": {"Homepage": "https://github.com/scivision/lineclipping-python-fortran"}, "release_url": "https://pypi.org/project/pylineclip/1.0.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Line clipping: Cohen-Sutherland", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/scivision/lineclipping-python-fortran/actions\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4db9db46f14de09a6703464874029cce48aaf87c/68747470733a2f2f6769746875622e636f6d2f736369766973696f6e2f6c696e65636c697070696e672d707974686f6e2d666f727472616e2f776f726b666c6f77732f63695f707974686f6e2f62616467652e737667\"></a></p>\n<p><a href=\"https://pypi.python.org/pypi/pylineclip\" rel=\"nofollow\"><img alt=\"PyPi versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac8bea5085137ac68ed860543ead3356b43ae397/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796c696e65636c69702e737667\"></a>\n<a href=\"http://pepy.tech/project/pylineclip\" rel=\"nofollow\"><img alt=\"PyPi Download stats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5fc0aeb4b7e74562bbfed375bc377d38ffd5b40a/687474703a2f2f706570792e746563682f62616467652f70796c696e65636c6970\"></a></p>\n<h1>Line clipping</h1>\n<ul>\n<li><code>lineclipping.f90</code> Cohen-Sutherland line clipping algorithm for\nmassively parallel coarray modern Fortran. Input scalars or arrays,\noutput intersections or <code>NaN</code> if no intersection.</li>\n<li><code>lineClipping.py</code> Cohen-Sutherland line clipping algorithm for Python.\nInput scalars, output intersection length, or <code>None</code> if no intersection.</li>\n</ul>\n<p>Julia line clipping is at <a href=\"https://github.com/scivision/lineclipping-julia\" rel=\"nofollow\">https://github.com/scivision/lineclipping-julia</a></p>\n<h2>Install</h2>\n<p>To install the latest release:</p>\n<pre>pip install pylineclip\n</pre>\n<h3>Fortran</h3>\n<p>If you want to use the Fortran Cohen-Sutherland line clipping modules\ndirectly (optional):</p>\n<pre>meson build\n\nmeson <span class=\"nb\">test</span> -C build\n</pre>\n<h2>Usage</h2>\n<p>The main difference with textbook implementations is that I return a\nsentinel value (NaN, None, nothing) if there's no intersection of line\nwith box.</p>\n<h3>Python</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pylineclip.lineclipping</span> <span class=\"k\">as</span> <span class=\"nn\">lc</span>\n\n<span class=\"n\">x3</span><span class=\"p\">,</span><span class=\"n\">y3</span><span class=\"p\">,</span><span class=\"n\">x4</span><span class=\"p\">,</span><span class=\"n\">y4</span> <span class=\"o\">=</span> <span class=\"n\">lc</span><span class=\"o\">.</span><span class=\"n\">cohensutherland</span><span class=\"p\">((</span><span class=\"n\">xmin</span><span class=\"p\">,</span> <span class=\"n\">ymax</span><span class=\"p\">,</span> <span class=\"n\">xmax</span><span class=\"p\">,</span> <span class=\"n\">ymin</span><span class=\"p\">,</span> <span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">,</span> <span class=\"n\">y2</span><span class=\"p\">)</span>\n</pre>\n<p>If no intersection, <code>(None, None, None, None)</code> is returned.</p>\n<h3>Fortran</h3>\n<p>lineclipping.f90 has two subroutines.\nPick Ccohensutherland if you're calling from C/C++/Python, which cannot tolerate assummed-shape arrays.\nIt's a slim wrapper to cohensutherland which is elemental (can handle scalar or any rank array).</p>\n<p>Fortran programs will simply use</p>\n<pre><span class=\"k\">use </span><span class=\"n\">lineclipping</span>\n<span class=\"k\">call </span><span class=\"n\">cohensutherland</span><span class=\"p\">(</span><span class=\"n\">xmin</span><span class=\"p\">,</span><span class=\"n\">ymax</span><span class=\"p\">,</span><span class=\"n\">xmax</span><span class=\"p\">,</span><span class=\"n\">ymin</span><span class=\"p\">,</span><span class=\"n\">x1</span><span class=\"p\">,</span><span class=\"n\">y1</span><span class=\"p\">,</span><span class=\"n\">x2</span><span class=\"p\">,</span><span class=\"n\">y2</span><span class=\"p\">)</span>\n</pre>\n<p>The arguments are:</p>\n<pre><code>INPUTS\n------\nxmin,ymax,xmax,ymin:  upper left and lower right corners of box (pixel coordinates)\n\nINOUT\n-----\nx1,y1,x2,y2:\nin - endpoints of line\nout - intersection points with box. If no intersection, all NaN\n</code></pre>\n\n          </div>"}, "last_serial": 6163935, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "6b57dd70a68ad3ed48206a3ca56a8cc6", "sha256": "363f799f147c4412d778c0855cf36b21dba1a2d22e4d6d6b926b98009e6b0934"}, "downloads": -1, "filename": "pylineclip-0.9.0.tar.gz", "has_sig": false, "md5_digest": "6b57dd70a68ad3ed48206a3ca56a8cc6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 3768, "upload_time": "2018-05-18T23:41:35", "upload_time_iso_8601": "2018-05-18T23:41:35.267176Z", "url": "https://files.pythonhosted.org/packages/86/a4/898482659431e6d0eca3983611d83d83aa5b2985c6549897df3541da6e8f/pylineclip-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "88cb1de30a17453e95e7400bc50c2a2d", "sha256": "55f922b84d9ee7db5dc82e5b8e9176fce8b3534ab24b53776e6e3e111cf94c20"}, "downloads": -1, "filename": "pylineclip-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "88cb1de30a17453e95e7400bc50c2a2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4248, "upload_time": "2018-06-21T14:48:14", "upload_time_iso_8601": "2018-06-21T14:48:14.485550Z", "url": "https://files.pythonhosted.org/packages/fe/b4/bcded4ff58fb6f4041421f96386490a2b819da1c7df6edb46ba4c4c5b5b0/pylineclip-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9331ae563af8a6ee8223c2adc3ff5dff", "sha256": "2d34db25e328404b7dd1edd8d1580f430960f7d9a69199c196c60443f27791fc"}, "downloads": -1, "filename": "pylineclip-0.9.1.tar.gz", "has_sig": false, "md5_digest": "9331ae563af8a6ee8223c2adc3ff5dff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4038, "upload_time": "2018-06-21T14:48:15", "upload_time_iso_8601": "2018-06-21T14:48:15.657802Z", "url": "https://files.pythonhosted.org/packages/e1/5b/3b3eba5d56e75d8f94d3728a0fcb77d830a2c1ceab40ad319c8ac099d508/pylineclip-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "dfe893b0e33c475d401ccca97a8ad446", "sha256": "fe3bf34d791242f6813500fd2a83843872c03e9a191c27dddd65bad68b62d05a"}, "downloads": -1, "filename": "pylineclip-0.9.2.tar.gz", "has_sig": false, "md5_digest": "dfe893b0e33c475d401ccca97a8ad446", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 4333, "upload_time": "2018-07-23T08:34:41", "upload_time_iso_8601": "2018-07-23T08:34:41.448993Z", "url": "https://files.pythonhosted.org/packages/81/ef/082c93252d1cba3dfdab98b05e938fd8e0b20d4fa6ea14c7beff27d55fd8/pylineclip-0.9.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c91d3424ce2ff16d37b4ac673d054696", "sha256": "8c1506df20de89e7ff0b631e48572314c77adc4b20de549c0c4e328cc98374d3"}, "downloads": -1, "filename": "pylineclip-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c91d3424ce2ff16d37b4ac673d054696", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4805, "upload_time": "2019-11-19T18:36:32", "upload_time_iso_8601": "2019-11-19T18:36:32.088085Z", "url": "https://files.pythonhosted.org/packages/2e/ed/dabd4cc3d7c666c6980787bb1ec3ff72ca275a0e157a550048cac60b9f4d/pylineclip-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c91d3424ce2ff16d37b4ac673d054696", "sha256": "8c1506df20de89e7ff0b631e48572314c77adc4b20de549c0c4e328cc98374d3"}, "downloads": -1, "filename": "pylineclip-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c91d3424ce2ff16d37b4ac673d054696", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4805, "upload_time": "2019-11-19T18:36:32", "upload_time_iso_8601": "2019-11-19T18:36:32.088085Z", "url": "https://files.pythonhosted.org/packages/2e/ed/dabd4cc3d7c666c6980787bb1ec3ff72ca275a0e157a550048cac60b9f4d/pylineclip-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:04 2020"}