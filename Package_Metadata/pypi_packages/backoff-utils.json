{"info": {"author": "Insight Industry Inc.", "author_email": "software@insightindustry.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "***********************\nBackoff-Utils\n***********************\n\n**Python Library for Backoff/Retry Strategies**\n\n.. list-table::\n  :widths: 10 90\n  :header-rows: 1\n\n  * - Branch\n    - Unit Tests\n  * - `latest <https://github.com/insightindustry/backoff-utils/tree/master>`_\n    -\n      .. image:: https://travis-ci.org/insightindustry/backoff-utils.svg?branch=latest\n        :target: https://travis-ci.org/insightindustry/backoff-utils\n        :alt: Build Status (Travis CI)\n\n      .. image:: https://codecov.io/gh/insightindustry/backoff-utils/branch/master/graph/badge.svg\n        :target: https://codecov.io/gh/insightindustry/backoff-utils\n        :alt: Code Coverage Status (Codecov)\n\n      .. image:: https://readthedocs.org/projects/backoff-utils/badge/?version=latest\n        :target: http://backoff-utils.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status (ReadTheDocs)\n\n  * - `v. 1.0.0 <https://github.com/insightindustry/backoff-utils/tree/v.1.0.0>`_\n    -\n      .. image:: https://travis-ci.org/insightindustry/backoff-utils.svg?branch=v.1.0.0\n        :target: https://travis-ci.org/insightindustry/backoff-utils\n        :alt: Build Status (Travis CI)\n\n      .. image:: https://codecov.io/gh/insightindustry/backoff-utils/branch/v.1.0.0/graph/badge.svg\n        :target: https://codecov.io/gh/insightindustry/backoff-utils\n        :alt: Code Coverage Status (Codecov)\n\n      .. image:: https://readthedocs.org/projects/backoff-utils/badge/?version=v.1.0.0\n        :target: http://backoff-utils.readthedocs.io/en/latest/?badge=v.1.0.0\n        :alt: Documentation Status (ReadTheDocs)\n\n  * - `develop <https://github.com/insightindustry/backoff-utils/tree/develop>`_\n    -\n      .. image:: https://travis-ci.org/insightindustry/backoff-utils.svg?branch=develop\n        :target: https://travis-ci.org/insightindustry/backoff-utils\n        :alt: Build Status (Travis CI)\n\n      .. image:: https://codecov.io/gh/insightindustry/backoff-utils/branch/develop/graph/badge.svg\n        :target: https://codecov.io/gh/insightindustry/backoff-utils\n        :alt: Code Coverage Status (Codecov)\n\n      .. image:: https://readthedocs.org/projects/backoff-utils/badge/?version=develop\n        :target: http://backoff-utils.readthedocs.io/en/latest/?badge=develop\n        :alt: Documentation Status (ReadTheDocs)\n\n**Backoff-Utils** is a Python library that provides Python functions and decorators\nthat apply various backoff / retry strategies to your Python function and method\ncalls.\n\nThe library has a consistent syntax for easy use, and has been tested on\nPython 2.7, 3.4, 3.5, and 3.6.\n\n**COMPLETE DOCUMENTATION ON READTHEDOCS:** http://backoff-utils.readthedocs.io/en/latest\n\n.. contents::\n  :local:\n  :depth: 3\n  :backlinks: entry\n\n--------------\n\nInstallation\n==================\n\nTo install **Backoff-Utils**, just execute:\n\n.. code:: bash\n\n  $ pip install backoff-utils\n\nImporting\n-------------\n\nOnce installed, to import **Backoff-Utils** into your project you can use:\n\n.. code-block:: python\n\n  #: Import the backoff() function.\n  from backoff_utils import backoff\n\n  #: Import the @apply_backoff() decorator.\n  from backoff_utils import apply_backoff\n\n  #: Import backoff strategies.\n  from backoff_utils import strategies\n\nDependencies\n---------------\n\nBy design, **Backoff-Utils** are designed to rely on minimal dependencies.\nThe only dependency they have outside of the Python standard library is:\n\n* `validator-collection <https://github.com/insightindustry/validator-collection/>`_\n  which provides for robust validation functionality.\n\n  This library in turn has one external dependency when installed under Python 2.7:\n\n  * `regex <https://pypi.python.org/pypi/regex>`_ which is a drop-in replacement for\n    Python's (buggy) standard ``re`` module.\n\n------------------\n\nHello, World Example\n========================\n\n.. code:: python\n\n  from backoff_utils import strategies\n\n  # Using a Function Call\n  from backoff_utils import backoff\n\n  def some_function(arg1, arg2, kwarg1 = None):\n      # your code goes here\n      pass\n\n  result = backoff(some_function,\n                   args = ['value1', 'value2'],\n                   kwargs = { 'kwarg1': 'value3' },\n                   max_tries = 3,\n                   max_delay = 3600,\n                   strategy = strategies.Exponential)\n\n  # Using a Decorator\n  from backoff_utils import backoff\n\n  @apply_backoff(strategy = strategies.Exponential, max_tries = 3, max_delay = 3600)\n  def some_decorated_function(arg1, arg2, kwarg1 = None):\n      # your code goes here\n      pass\n\n  result = some_decorated_function('value1', 'value2', kwarg1 = 'value3')\n\n------------\n\nWhy Backoff-Utils?\n======================\n\n.. epigraph::\n\n  *Because now and again, stuff breaks.*\n\nOften, when making external API calls to third-party systems, something goes\nwrong. The internet might glitch. The API we're calling might timeout. Gremlins\nmight eat your packets. Any number of things can go wrong, and Murphy's law tells\nus that they will.\n\nWhich is why we need backoff strategies. Basically, these are techniques\nthat we can use to retry function calls after a given delay - and keep retrying\nthem until either the function call works, or until we've tried so many times that\nwe just give up and handle the error.\n\nThis library is meant to be an incredibly simple utility that provides a number\nof easy-to-use backoff strategies. Its core API is to expose:\n\n  * the ``backoff()`` function, which lets you apply\n    a given backoff strategy to any Python function call, and;\n  * the ``@apply_backoff()`` decorator, which lets\n    you decorate any function or method call so that a given backoff strategy is\n    *always* applied when the decorated function/method is called.\n\n----------------\n\nLibrary Features\n==================\n\nSupported Strategies\n---------------------\n\nThe library supports five of the most-common backoff strategies that we've come\nacross:\n\n* Exponential\n* Fibonacci\n* Fixed\n* Linear\n* Polynomial\n\nIn addtion, you can also create your own custom strategies as well.\n\n**For more information about the backoff strategies supported, please see:**\n`Strategies Explained <https://backoff-utils.readthedocs.io/en/latest/strategies.html>`_\n\nAdditional Features\n----------------------\n\nIn addition to the basic strategies, the library also supports:\n\n* random jitter\n* argument-adjustment on retry\n* selective exception capture\n* chained backoff strategies\n* failure handlers\n* success handlers\n* cut-off after max delay\n* cut-off after max tries\n* scaling\n* minimum delay\n\n**For more information about the backoff strategies supported, please see:**\n`Using the Library <https://backoff-utils.readthedocs.io/en/latest/using.html>`_\n\n-------------\n\nFeedback, Support, and Contributing\n====================================\n\nWe're happy to maintain this library going forward, and would always love to\nhear users' feedback - especially if you're running into issues.\n\nPlease report issues or questions on the\n`project's Github page <https://github.com/insightindustry/backoff-utils/issues>`_\n\n**For more information on contributing to the Backoff-Utils library, please see:**\n`Contributor Guide <https://backoff-utils.readthedocs.io/en/latest/contributing.html>`_\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/insightindustry/backoff-utils", "keywords": "backoff exponential fibonacci polynomial linear defined fixed retry", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "backoff-utils", "package_url": "https://pypi.org/project/backoff-utils/", "platform": "", "project_url": "https://pypi.org/project/backoff-utils/", "project_urls": {"Homepage": "https://github.com/insightindustry/backoff-utils"}, "release_url": "https://pypi.org/project/backoff-utils/1.0.0/", "requires_dist": ["validator-collection", "check-manifest; extra == 'dev'", "sphinx; extra == 'dev'", "sphinx-rtd-theme; extra == 'dev'", "sphinx-tabs; extra == 'dev'", "coverage; extra == 'test'", "pytest; extra == 'test'", "pytest-benchmark; extra == 'test'", "pytest-cov; extra == 'test'", "tox; extra == 'test'", "codecov; extra == 'test'"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "summary": "Python functions and decorators for various backoff/retry strategies", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Python Library for Backoff/Retry Strategies</strong></p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Branch</th>\n<th>Unit Tests</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/insightindustry/backoff-utils/tree/master\" rel=\"nofollow\">latest</a></td>\n<td><a href=\"https://travis-ci.org/insightindustry/backoff-utils\" rel=\"nofollow\"><img alt=\"Build Status (Travis CI)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/235130f3e2a9d232b0a2450233844603f40f558a/68747470733a2f2f7472617669732d63692e6f72672f696e7369676874696e6475737472792f6261636b6f66662d7574696c732e7376673f6272616e63683d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/insightindustry/backoff-utils\" rel=\"nofollow\"><img alt=\"Code Coverage Status (Codecov)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ea5da24c25fa2b5628a62f4fc50095bbd001f20/68747470733a2f2f636f6465636f762e696f2f67682f696e7369676874696e6475737472792f6261636b6f66662d7574696c732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"http://backoff-utils.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status (ReadTheDocs)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a742a1778c71c322458167fdc262f6d2edf48c7/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6261636b6f66662d7574696c732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n</td>\n</tr>\n<tr><td><a href=\"https://github.com/insightindustry/backoff-utils/tree/v.1.0.0\" rel=\"nofollow\">v. 1.0.0</a></td>\n<td><a href=\"https://travis-ci.org/insightindustry/backoff-utils\" rel=\"nofollow\"><img alt=\"Build Status (Travis CI)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/040d42bf7908d3024d57d474c81ff70493d3cffc/68747470733a2f2f7472617669732d63692e6f72672f696e7369676874696e6475737472792f6261636b6f66662d7574696c732e7376673f6272616e63683d762e312e302e30\"></a>\n<a href=\"https://codecov.io/gh/insightindustry/backoff-utils\" rel=\"nofollow\"><img alt=\"Code Coverage Status (Codecov)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a5a11685a822540760555ef104d09338b5e5c64/68747470733a2f2f636f6465636f762e696f2f67682f696e7369676874696e6475737472792f6261636b6f66662d7574696c732f6272616e63682f762e312e302e302f67726170682f62616467652e737667\"></a>\n<a href=\"http://backoff-utils.readthedocs.io/en/latest/?badge=v.1.0.0\" rel=\"nofollow\"><img alt=\"Documentation Status (ReadTheDocs)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3f33c3f00a1c5f2216b6fd9c3296f896b1e0a26/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6261636b6f66662d7574696c732f62616467652f3f76657273696f6e3d762e312e302e30\"></a>\n</td>\n</tr>\n<tr><td><a href=\"https://github.com/insightindustry/backoff-utils/tree/develop\" rel=\"nofollow\">develop</a></td>\n<td><a href=\"https://travis-ci.org/insightindustry/backoff-utils\" rel=\"nofollow\"><img alt=\"Build Status (Travis CI)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fce26d453eb73b261f14614b9e7e399bfa8c80d1/68747470733a2f2f7472617669732d63692e6f72672f696e7369676874696e6475737472792f6261636b6f66662d7574696c732e7376673f6272616e63683d646576656c6f70\"></a>\n<a href=\"https://codecov.io/gh/insightindustry/backoff-utils\" rel=\"nofollow\"><img alt=\"Code Coverage Status (Codecov)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7cdb2f57bc03227a471350f545b7b3b7048a2a3a/68747470733a2f2f636f6465636f762e696f2f67682f696e7369676874696e6475737472792f6261636b6f66662d7574696c732f6272616e63682f646576656c6f702f67726170682f62616467652e737667\"></a>\n<a href=\"http://backoff-utils.readthedocs.io/en/latest/?badge=develop\" rel=\"nofollow\"><img alt=\"Documentation Status (ReadTheDocs)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bbe2b87743dee4388677135f61024482763372c/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6261636b6f66662d7574696c732f62616467652f3f76657273696f6e3d646576656c6f70\"></a>\n</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Backoff-Utils</strong> is a Python library that provides Python functions and decorators\nthat apply various backoff / retry strategies to your Python function and method\ncalls.</p>\n<p>The library has a consistent syntax for easy use, and has been tested on\nPython 2.7, 3.4, 3.5, and 3.6.</p>\n<p><strong>COMPLETE DOCUMENTATION ON READTHEDOCS:</strong> <a href=\"http://backoff-utils.readthedocs.io/en/latest\" rel=\"nofollow\">http://backoff-utils.readthedocs.io/en/latest</a></p>\n<div id=\"contents\">\n<ul>\n<li><a href=\"#installation\" id=\"id1\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#importing\" id=\"id2\" rel=\"nofollow\">Importing</a></li>\n<li><a href=\"#dependencies\" id=\"id3\" rel=\"nofollow\">Dependencies</a></li>\n</ul>\n</li>\n<li><a href=\"#hello-world-example\" id=\"id4\" rel=\"nofollow\">Hello, World Example</a></li>\n<li><a href=\"#why-backoff-utils\" id=\"id5\" rel=\"nofollow\">Why Backoff-Utils?</a></li>\n<li><a href=\"#library-features\" id=\"id6\" rel=\"nofollow\">Library Features</a><ul>\n<li><a href=\"#supported-strategies\" id=\"id7\" rel=\"nofollow\">Supported Strategies</a></li>\n<li><a href=\"#additional-features\" id=\"id8\" rel=\"nofollow\">Additional Features</a></li>\n</ul>\n</li>\n<li><a href=\"#feedback-support-and-contributing\" id=\"id9\" rel=\"nofollow\">Feedback, Support, and Contributing</a></li>\n</ul>\n</div>\n<hr class=\"docutils\">\n<div id=\"installation\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Installation</a></h2>\n<p>To install <strong>Backoff-Utils</strong>, just execute:</p>\n<pre>$ pip install backoff-utils\n</pre>\n<div id=\"importing\">\n<h3><a href=\"#id2\" rel=\"nofollow\">Importing</a></h3>\n<p>Once installed, to import <strong>Backoff-Utils</strong> into your project you can use:</p>\n<pre><span class=\"c1\">#: Import the backoff() function.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">backoff_utils</span> <span class=\"kn\">import</span> <span class=\"n\">backoff</span>\n\n<span class=\"c1\">#: Import the @apply_backoff() decorator.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">backoff_utils</span> <span class=\"kn\">import</span> <span class=\"n\">apply_backoff</span>\n\n<span class=\"c1\">#: Import backoff strategies.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">backoff_utils</span> <span class=\"kn\">import</span> <span class=\"n\">strategies</span>\n</pre>\n</div>\n<div id=\"dependencies\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Dependencies</a></h3>\n<p>By design, <strong>Backoff-Utils</strong> are designed to rely on minimal dependencies.\nThe only dependency they have outside of the Python standard library is:</p>\n<ul>\n<li><p><a href=\"https://github.com/insightindustry/validator-collection/\" rel=\"nofollow\">validator-collection</a>\nwhich provides for robust validation functionality.</p>\n<p>This library in turn has one external dependency when installed under Python 2.7:</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/regex\" rel=\"nofollow\">regex</a> which is a drop-in replacement for\nPython\u2019s (buggy) standard <tt>re</tt> module.</li>\n</ul>\n</li>\n</ul>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"hello-world-example\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Hello, World Example</a></h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">backoff_utils</span> <span class=\"kn\">import</span> <span class=\"n\">strategies</span>\n\n<span class=\"c1\"># Using a Function Call</span>\n<span class=\"kn\">from</span> <span class=\"nn\">backoff_utils</span> <span class=\"kn\">import</span> <span class=\"n\">backoff</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"n\">kwarg1</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"c1\"># your code goes here</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">backoff</span><span class=\"p\">(</span><span class=\"n\">some_function</span><span class=\"p\">,</span>\n                 <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'value1'</span><span class=\"p\">,</span> <span class=\"s1\">'value2'</span><span class=\"p\">],</span>\n                 <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"s1\">'kwarg1'</span><span class=\"p\">:</span> <span class=\"s1\">'value3'</span> <span class=\"p\">},</span>\n                 <span class=\"n\">max_tries</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n                 <span class=\"n\">max_delay</span> <span class=\"o\">=</span> <span class=\"mi\">3600</span><span class=\"p\">,</span>\n                 <span class=\"n\">strategy</span> <span class=\"o\">=</span> <span class=\"n\">strategies</span><span class=\"o\">.</span><span class=\"n\">Exponential</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Using a Decorator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">backoff_utils</span> <span class=\"kn\">import</span> <span class=\"n\">backoff</span>\n\n<span class=\"nd\">@apply_backoff</span><span class=\"p\">(</span><span class=\"n\">strategy</span> <span class=\"o\">=</span> <span class=\"n\">strategies</span><span class=\"o\">.</span><span class=\"n\">Exponential</span><span class=\"p\">,</span> <span class=\"n\">max_tries</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">max_delay</span> <span class=\"o\">=</span> <span class=\"mi\">3600</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_decorated_function</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"n\">kwarg1</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"c1\"># your code goes here</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">some_decorated_function</span><span class=\"p\">(</span><span class=\"s1\">'value1'</span><span class=\"p\">,</span> <span class=\"s1\">'value2'</span><span class=\"p\">,</span> <span class=\"n\">kwarg1</span> <span class=\"o\">=</span> <span class=\"s1\">'value3'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"why-backoff-utils\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Why Backoff-Utils?</a></h2>\n<blockquote>\n<em>Because now and again, stuff breaks.</em></blockquote>\n<p>Often, when making external API calls to third-party systems, something goes\nwrong. The internet might glitch. The API we\u2019re calling might timeout. Gremlins\nmight eat your packets. Any number of things can go wrong, and Murphy\u2019s law tells\nus that they will.</p>\n<p>Which is why we need backoff strategies. Basically, these are techniques\nthat we can use to retry function calls after a given delay - and keep retrying\nthem until either the function call works, or until we\u2019ve tried so many times that\nwe just give up and handle the error.</p>\n<p>This library is meant to be an incredibly simple utility that provides a number\nof easy-to-use backoff strategies. Its core API is to expose:</p>\n<blockquote>\n<ul>\n<li>the <tt>backoff()</tt> function, which lets you apply\na given backoff strategy to any Python function call, and;</li>\n<li>the <tt>@apply_backoff()</tt> decorator, which lets\nyou decorate any function or method call so that a given backoff strategy is\n<em>always</em> applied when the decorated function/method is called.</li>\n</ul>\n</blockquote>\n</div>\n<hr class=\"docutils\">\n<div id=\"library-features\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Library Features</a></h2>\n<div id=\"supported-strategies\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Supported Strategies</a></h3>\n<p>The library supports five of the most-common backoff strategies that we\u2019ve come\nacross:</p>\n<ul>\n<li>Exponential</li>\n<li>Fibonacci</li>\n<li>Fixed</li>\n<li>Linear</li>\n<li>Polynomial</li>\n</ul>\n<p>In addtion, you can also create your own custom strategies as well.</p>\n<p><strong>For more information about the backoff strategies supported, please see:</strong>\n<a href=\"https://backoff-utils.readthedocs.io/en/latest/strategies.html\" rel=\"nofollow\">Strategies Explained</a></p>\n</div>\n<div id=\"additional-features\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Additional Features</a></h3>\n<p>In addition to the basic strategies, the library also supports:</p>\n<ul>\n<li>random jitter</li>\n<li>argument-adjustment on retry</li>\n<li>selective exception capture</li>\n<li>chained backoff strategies</li>\n<li>failure handlers</li>\n<li>success handlers</li>\n<li>cut-off after max delay</li>\n<li>cut-off after max tries</li>\n<li>scaling</li>\n<li>minimum delay</li>\n</ul>\n<p><strong>For more information about the backoff strategies supported, please see:</strong>\n<a href=\"https://backoff-utils.readthedocs.io/en/latest/using.html\" rel=\"nofollow\">Using the Library</a></p>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"feedback-support-and-contributing\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Feedback, Support, and Contributing</a></h2>\n<p>We\u2019re happy to maintain this library going forward, and would always love to\nhear users\u2019 feedback - especially if you\u2019re running into issues.</p>\n<p>Please report issues or questions on the\n<a href=\"https://github.com/insightindustry/backoff-utils/issues\" rel=\"nofollow\">project\u2019s Github page</a></p>\n<p><strong>For more information on contributing to the Backoff-Utils library, please see:</strong>\n<a href=\"https://backoff-utils.readthedocs.io/en/latest/contributing.html\" rel=\"nofollow\">Contributor Guide</a></p>\n</div>\n\n          </div>"}, "last_serial": 3782642, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "d351934519adb6b82462ca2aac0cf7fd", "sha256": "850c7b747cd25d976840fdb083acaf247464dd2dd889cc40a40e31d0a30b41c3"}, "downloads": -1, "filename": "backoff_utils-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d351934519adb6b82462ca2aac0cf7fd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 12070, "upload_time": "2018-04-20T02:17:12", "upload_time_iso_8601": "2018-04-20T02:17:12.030566Z", "url": "https://files.pythonhosted.org/packages/32/ef/6065f7dc4fa0730900b122901987300776f9fafd7d64dd8717ee3b0e7159/backoff_utils-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e89142c2a6d51e6ff43e1d581a61f344", "sha256": "12e561bcb80360c9ab1539499fd6eba40cb0daba7e486aa4ef38e158cdffba60"}, "downloads": -1, "filename": "backoff-utils-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e89142c2a6d51e6ff43e1d581a61f344", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 11985, "upload_time": "2018-04-20T02:17:13", "upload_time_iso_8601": "2018-04-20T02:17:13.346618Z", "url": "https://files.pythonhosted.org/packages/4c/06/d6d0dd7dd40cfe60487586f31979c4322070815f25d3c52727f2abe84fd0/backoff-utils-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d351934519adb6b82462ca2aac0cf7fd", "sha256": "850c7b747cd25d976840fdb083acaf247464dd2dd889cc40a40e31d0a30b41c3"}, "downloads": -1, "filename": "backoff_utils-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d351934519adb6b82462ca2aac0cf7fd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 12070, "upload_time": "2018-04-20T02:17:12", "upload_time_iso_8601": "2018-04-20T02:17:12.030566Z", "url": "https://files.pythonhosted.org/packages/32/ef/6065f7dc4fa0730900b122901987300776f9fafd7d64dd8717ee3b0e7159/backoff_utils-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e89142c2a6d51e6ff43e1d581a61f344", "sha256": "12e561bcb80360c9ab1539499fd6eba40cb0daba7e486aa4ef38e158cdffba60"}, "downloads": -1, "filename": "backoff-utils-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e89142c2a6d51e6ff43e1d581a61f344", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 11985, "upload_time": "2018-04-20T02:17:13", "upload_time_iso_8601": "2018-04-20T02:17:13.346618Z", "url": "https://files.pythonhosted.org/packages/4c/06/d6d0dd7dd40cfe60487586f31979c4322070815f25d3c52727f2abe84fd0/backoff-utils-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:08 2020"}