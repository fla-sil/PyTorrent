{"info": {"author": "Roma Sokolov", "author_email": "sokolov.r.v@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "Kuvalda -- Damn Simple Validation Kit\n=====================================\n\nAbout\n-----\n\nValidate dict-like object against schema, using just callables.\n\nFeatures\n--------\n\n- Allows validating and sanitizing dicts using any callables\n- Provides several useful helpers\n- Easy to use -- no class-based boilerplate!\n\nAPI\n---\n\n``validate`` function takes any mapping as data and another mapping as scheme and check data against scheme. It returns list of errors.\n\n``sanitize`` function takes any mapping as data and another mapping as scheme and converts data according to schema definition.\n\nFor more info -- see tests.\n\nExamples\n--------\n\nSeveral schemes:\n\n::\n\n    schema = {\n        'key1': str,\n        'key2': int,\n        'key3': int,\n    }\n\n    schema1 = {\n        'key1': kuvalda.list_of(int),\n        'key2': kuvalda.list_of(kuvalda.list_of(int))\n    }\n\n    schema2 = {\n       'section1': {\n           'key1': str,\n           'key2': int\n        },\n        'section2': kuvalda.mapping(str, int),\n        'key1': kuvalda.kind_of(bool)\n    }\n\n    schema3 = {\n        'key1': int,\n        'key2': kuvalda.default('oh, my'),\n        'key3': kuvalda.optional(int),\n        'key4': kuvalda.optional(kuvalda.list_of(int)),\n        'key5': kuvalda.compose(kuvalda.default(42), int)\n    }\n\n\nInstall\n-------\n\n~/yourvirtualenv/python setup.py install\n\npip install kuvalda\n\nLicense\n-------\n\nThe MIT License, in LICENSE file.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/little-arhat/kuvalda", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kuvalda", "package_url": "https://pypi.org/project/kuvalda/", "platform": "", "project_url": "https://pypi.org/project/kuvalda/", "project_urls": {"Homepage": "https://github.com/little-arhat/kuvalda"}, "release_url": "https://pypi.org/project/kuvalda/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Damn Simple Validation Kit.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>Validate dict-like object against schema, using just callables.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Allows validating and sanitizing dicts using any callables</li>\n<li>Provides several useful helpers</li>\n<li>Easy to use \u2013 no class-based boilerplate!</li>\n</ul>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<p><tt>validate</tt> function takes any mapping as data and another mapping as scheme and check data against scheme. It returns list of errors.</p>\n<p><tt>sanitize</tt> function takes any mapping as data and another mapping as scheme and converts data according to schema definition.</p>\n<p>For more info \u2013 see tests.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Several schemes:</p>\n<pre>schema = {\n    'key1': str,\n    'key2': int,\n    'key3': int,\n}\n\nschema1 = {\n    'key1': kuvalda.list_of(int),\n    'key2': kuvalda.list_of(kuvalda.list_of(int))\n}\n\nschema2 = {\n   'section1': {\n       'key1': str,\n       'key2': int\n    },\n    'section2': kuvalda.mapping(str, int),\n    'key1': kuvalda.kind_of(bool)\n}\n\nschema3 = {\n    'key1': int,\n    'key2': kuvalda.default('oh, my'),\n    'key3': kuvalda.optional(int),\n    'key4': kuvalda.optional(kuvalda.list_of(int)),\n    'key5': kuvalda.compose(kuvalda.default(42), int)\n}\n</pre>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>~/yourvirtualenv/python setup.py install</p>\n<p>pip install kuvalda</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The MIT License, in LICENSE file.</p>\n</div>\n\n          </div>"}, "last_serial": 2512047, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "19479d61fa0bcec09cb9ca1ba05bb658", "sha256": "aa3855211bd5d7baf9b8d9c69027959abc6664222807673e174ce437e0a60bbd"}, "downloads": -1, "filename": "kuvalda-0.0.1.tar.gz", "has_sig": false, "md5_digest": "19479d61fa0bcec09cb9ca1ba05bb658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2421, "upload_time": "2011-11-20T23:18:46", "upload_time_iso_8601": "2011-11-20T23:18:46.796681Z", "url": "https://files.pythonhosted.org/packages/f6/de/5d9c3a51d7617b2fe55aed3fce384a6d0877bb4353efa8863dd63e483df2/kuvalda-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "built for Darwin-16.1.0", "digests": {"md5": "6a5a0da8871801919068e9fc2f9fc70f", "sha256": "fa6510f0da6c5b7c1853ea685a9117db78de221b6865cf45ebee09ce9a464166"}, "downloads": -1, "filename": "kuvalda-0.1.0.macosx-10.12-x86_64.tar.gz", "has_sig": false, "md5_digest": "6a5a0da8871801919068e9fc2f9fc70f", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 4671, "upload_time": "2016-12-11T16:39:26", "upload_time_iso_8601": "2016-12-11T16:39:26.306860Z", "url": "https://files.pythonhosted.org/packages/02/27/4562b150d3b085b75b920e8491ad3cf24cd241cbdb3acfd549901cd35c8b/kuvalda-0.1.0.macosx-10.12-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "050185a608b1a7dd4203ed12ade96d89", "sha256": "8a88eb3bfd9ac07754556dca795631220affa1d8f4058fe9f36f39a517bf4b5b"}, "downloads": -1, "filename": "kuvalda-0.1.0.tar.gz", "has_sig": false, "md5_digest": "050185a608b1a7dd4203ed12ade96d89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2805, "upload_time": "2016-12-11T16:39:23", "upload_time_iso_8601": "2016-12-11T16:39:23.839590Z", "url": "https://files.pythonhosted.org/packages/7d/bd/cda7d86b4cc4ad7d9fc6b235eaa25a948cb325b04f913413457ba80a470b/kuvalda-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Darwin-16.1.0", "digests": {"md5": "6a5a0da8871801919068e9fc2f9fc70f", "sha256": "fa6510f0da6c5b7c1853ea685a9117db78de221b6865cf45ebee09ce9a464166"}, "downloads": -1, "filename": "kuvalda-0.1.0.macosx-10.12-x86_64.tar.gz", "has_sig": false, "md5_digest": "6a5a0da8871801919068e9fc2f9fc70f", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 4671, "upload_time": "2016-12-11T16:39:26", "upload_time_iso_8601": "2016-12-11T16:39:26.306860Z", "url": "https://files.pythonhosted.org/packages/02/27/4562b150d3b085b75b920e8491ad3cf24cd241cbdb3acfd549901cd35c8b/kuvalda-0.1.0.macosx-10.12-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "050185a608b1a7dd4203ed12ade96d89", "sha256": "8a88eb3bfd9ac07754556dca795631220affa1d8f4058fe9f36f39a517bf4b5b"}, "downloads": -1, "filename": "kuvalda-0.1.0.tar.gz", "has_sig": false, "md5_digest": "050185a608b1a7dd4203ed12ade96d89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2805, "upload_time": "2016-12-11T16:39:23", "upload_time_iso_8601": "2016-12-11T16:39:23.839590Z", "url": "https://files.pythonhosted.org/packages/7d/bd/cda7d86b4cc4ad7d9fc6b235eaa25a948cb325b04f913413457ba80a470b/kuvalda-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:32 2020"}