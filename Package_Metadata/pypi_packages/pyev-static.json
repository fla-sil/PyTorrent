{"info": {"author": "Malek Hadj-Ali", "author_email": "lekmalek@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: Microsoft :: Windows :: Windows NT/2000", "Operating System :: POSIX", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2"], "description": "==============================\npyev - Python libev interface.\n==============================\n\nCI status: |cistatus|\n\nlibev is an event loop: you register interest in certain events (such as a file\ndescriptor being readable or a timeout occurring), and it will manage these\nevent sources and provide your program with events.\nTo do this, it must take more or less complete control over your process (or\nthread) by executing the event loop handler, and will then communicate events\nvia a callback mechanism.\nYou register interest in certain events by registering so-called event watchers,\nwhich you initialise with the details of the event, and then hand over to libev\nby starting the watcher.\n\nlibev supports ``select``, ``poll``, the Linux-specific ``epoll``, the\nBSD-specific ``kqueue`` and the Solaris-specific ``event port`` mechanisms for\nfile descriptor events (``Io``), the Linux ``inotify`` interface (for\n``Stat``), Linux ``eventfd``/``signalfd`` (for faster and cleaner\ninter-thread wakeup (``Async``)/signal handling (``Signal``)),\nrelative timers (``Timer``), absolute timers (``Periodic``),\ntimers with customised rescheduling (``Scheduler``), synchronous signals\n(``Signal``), process status change events (``Child``), and event\nwatchers dealing with the event loop mechanism itself (``Idle``,\n``Embed``, ``Prepare`` and ``Check`` watchers) as well\nas file watchers (``Stat``) and even limited support for fork events\n(``Fork``).\n\nIt also is quite `fast <http://libev.schmorp.de/bench.html>`_.\n\nlibev is written and maintained by Marc Lehmann.\n\n.. seealso::\n    `libev's homepage <http://software.schmorp.de/pkg/libev>`_.\n\n\nUseful links:\n\n- `Latest release <http://pypi.python.org/pypi/pyev/>`_\n- `Documentation <http://packages.python.org/pyev/>`_\n- `Bug reports and feature requests\n  <http://code.google.com/p/pyev/issues/list>`_\n\n\n`pyev's source code <http://pyev.googlecode.com/>`_ is currently hosted by\n`Google code <http://code.google.com/>`_ and kept in a\n`Subversion <http://subversion.apache.org/>`_ repository.\n\n- `Subversion instructions <http://code.google.com/p/pyev/source/checkout>`_\n- `Subversion browser <http://code.google.com/p/pyev/source/browse/>`_\n\n.. |cistatus| image:: https://secure.travis-ci.org/blackwithwhite666/pyev.png?branch=master", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://packages.python.org/pyev/", "keywords": null, "license": "BSD License / GNU General Public License (GPL)", "maintainer": null, "maintainer_email": null, "name": "pyev-static", "package_url": "https://pypi.org/project/pyev-static/", "platform": "Microsoft Windows,POSIX", "project_url": "https://pypi.org/project/pyev-static/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://packages.python.org/pyev/"}, "release_url": "https://pypi.org/project/pyev-static/0.9.5/", "requires_dist": null, "requires_python": null, "summary": "Python bindings to libev.", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            ==============================<br>pyev - Python libev interface.<br>==============================<br><br>CI status: |cistatus|<br><br>libev is an event loop: you register interest in certain events (such as a file<br>descriptor being readable or a timeout occurring), and it will manage these<br>event sources and provide your program with events.<br>To do this, it must take more or less complete control over your process (or<br>thread) by executing the event loop handler, and will then communicate events<br>via a callback mechanism.<br>You register interest in certain events by registering so-called event watchers,<br>which you initialise with the details of the event, and then hand over to libev<br>by starting the watcher.<br><br>libev supports ``select``, ``poll``, the Linux-specific ``epoll``, the<br>BSD-specific ``kqueue`` and the Solaris-specific ``event port`` mechanisms for<br>file descriptor events (``Io``), the Linux ``inotify`` interface (for<br>``Stat``), Linux ``eventfd``/``signalfd`` (for faster and cleaner<br>inter-thread wakeup (``Async``)/signal handling (``Signal``)),<br>relative timers (``Timer``), absolute timers (``Periodic``),<br>timers with customised rescheduling (``Scheduler``), synchronous signals<br>(``Signal``), process status change events (``Child``), and event<br>watchers dealing with the event loop mechanism itself (``Idle``,<br>``Embed``, ``Prepare`` and ``Check`` watchers) as well<br>as file watchers (``Stat``) and even limited support for fork events<br>(``Fork``).<br><br>It also is quite `fast &lt;http://libev.schmorp.de/bench.html&gt;`_.<br><br>libev is written and maintained by Marc Lehmann.<br><br>.. seealso::<br>    `libev's homepage &lt;http://software.schmorp.de/pkg/libev&gt;`_.<br><br><br>Useful links:<br><br>- `Latest release &lt;http://pypi.python.org/pypi/pyev/&gt;`_<br>- `Documentation &lt;http://packages.python.org/pyev/&gt;`_<br>- `Bug reports and feature requests<br>  &lt;http://code.google.com/p/pyev/issues/list&gt;`_<br><br><br>`pyev's source code &lt;http://pyev.googlecode.com/&gt;`_ is currently hosted by<br>`Google code &lt;http://code.google.com/&gt;`_ and kept in a<br>`Subversion &lt;http://subversion.apache.org/&gt;`_ repository.<br><br>- `Subversion instructions &lt;http://code.google.com/p/pyev/source/checkout&gt;`_<br>- `Subversion browser &lt;http://code.google.com/p/pyev/source/browse/&gt;`_<br><br>.. |cistatus| image:: https://secure.travis-ci.org/blackwithwhite666/pyev.png?branch=master\n          </div>"}, "last_serial": 752803, "releases": {"0.9.5": [{"comment_text": "", "digests": {"md5": "32b8925a25d4ef3f5c80f5b2f5250fd0", "sha256": "9af03ce89d99fd00eb8d034ad8eeed580104298d92b5bc98abd6e5ebca3fd4ad"}, "downloads": -1, "filename": "pyev-static-0.9.5.tar.gz", "has_sig": false, "md5_digest": "32b8925a25d4ef3f5c80f5b2f5250fd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 527553, "upload_time": "2012-10-04T15:49:31", "upload_time_iso_8601": "2012-10-04T15:49:31.524294Z", "url": "https://files.pythonhosted.org/packages/34/8d/b089269119420c20e9ea1ab37e3ba78af2e7377010fbfbee78d002c8cfb8/pyev-static-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "32b8925a25d4ef3f5c80f5b2f5250fd0", "sha256": "9af03ce89d99fd00eb8d034ad8eeed580104298d92b5bc98abd6e5ebca3fd4ad"}, "downloads": -1, "filename": "pyev-static-0.9.5.tar.gz", "has_sig": false, "md5_digest": "32b8925a25d4ef3f5c80f5b2f5250fd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 527553, "upload_time": "2012-10-04T15:49:31", "upload_time_iso_8601": "2012-10-04T15:49:31.524294Z", "url": "https://files.pythonhosted.org/packages/34/8d/b089269119420c20e9ea1ab37e3ba78af2e7377010fbfbee78d002c8cfb8/pyev-static-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:13 2020"}