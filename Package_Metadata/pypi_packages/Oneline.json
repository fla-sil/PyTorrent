{"info": {"author": "Nadir Hamid", "author_email": "matrix.nad@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.7"], "description": "Oneline\r\n=======================================================================\r\n\r\nOverview\r\n----------------------------------------------------------------------\r\n\r\nOneline is a websockets project that aims to simplifies writing client/server\r\nsocket code for ws, additionally provides layer of database. It is \r\nmade for developers who wish to experiment with the websocket standard\r\nwhile trying to build practical applications.\r\n\r\n\r\nHow It works\r\n------------------------------------------------------------------------\r\n\r\nIt uses ws4py and cherrypy in processing websocket things, the frontend\r\nclient written in javascript is the connection to web applications. The server is designed to handle it's client.\r\n\r\n\r\nInstalling\r\n------------------------------------------------------------------------\r\n\r\nTo install oneline, you can download the code on PyPi or even GitHub (https://github.com/nadirhamid/oneline),\r\n\r\ncurrently to run this, use\r\n\r\n    make\r\n\r\non success you should see the oneline server startup.\r\n\r\nRecipes\r\n------------------------------------------------------------------------\r\n\r\nThere's some recipes for Oneline, they demonstrate its pragmatic\r\nusage in web applications or broker servers, currently they are (as of this writing)\r\n\r\n  Example 1: \r\n    LastFM Tag Streamer\r\n   - This example demonstrates streaming artists and music according to their\r\nsocially voted tags. The dataset, publicly available can be found @\r\n   http://labrosa.ee.columbia.edu/millionsong/lastfm\r\n\r\n  Example 2:\r\n    Catapult Call Streaming\r\n    - Websockets with telecom info, this will show how to\r\n     stream VoIP events, calls using oneline and Catapult's RESTful\r\n     API, documentation.\r\n\r\n\r\n  Example 3:\r\n    Wikipedia PageRank\r\n     - This application, will use PIG and Hadoop MapReduce in providing\r\n     a realtime pagerank for wiki articles, articles which are scored\r\n     with a dampening factor of 0.08 can be voted up or down\r\n\r\nAll recipes are available at \r\n\r\nhttps://github.com/nadirhamid/oneline-recipes\r\n\r\n\r\nObject Documentation\r\n------------------------------------------------------------------------------\r\n    Geo Object\r\n    used to calculate lat,lng coords, bidrectionally or\r\n    in one.\r\n    Time\r\n    meet time ranged events\r\n    Events\r\n    General purpose SQL queries\r\n    Sound\r\n    Get input of sound based events\r\n    Generic\r\n    use oneline without a database connection\r\n\r\n\r\nTechnical Supports, requirements\r\n------------------------------------------------------------------------------\r\n\r\nPython Support:\r\n\r\ncurrently >= 2.7 is needed\r\n\r\nDatabases, as of this writing supports:\r\n\r\nPostGreSQL, MySQL, SQLite, CouchDB and MongoDB\r\n\r\nIt is recommended to atleast have one database connection\r\n\r\n\r\n\r\nOld news ----------------------------------------------------------------------\r\n\r\nOlder Description:\r\nA Python project that adds real time streaming to your web app's data.\r\nStreaming is done through server modules which are written\r\nin python, these will then be streamed over websockets -- using\r\ncherrypy and ws4py. Streaming is done with a db table, which\r\nwill be used for all the module's data.\r\n\r\nData can be refined in a few ways. Currently, it is done\r\nthrough the defined modules, geolocation and event. \r\nThe former will refine data based on geolocation(lng, lat) coordinates.\r\nThe latter is a general purpose database querier. These objects\r\ncan be used through a non commutative pipeline which\r\nwill filter data according to your needs.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/nadirhamid/oneline", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "websockets, ws4py, cherrypy, streaming, web", "license": "Apache License 2.0", "maintainer": "Nadir Hamid", "maintainer_email": "matrix.nad@gmail.com", "name": "Oneline", "package_url": "https://pypi.org/project/Oneline/", "platform": "Linux, Windows, OSX (not tested)", "project_url": "https://pypi.org/project/Oneline/", "project_urls": {"Download": "https://github.com/nadirhamid/oneline"}, "release_url": "https://pypi.org/project/Oneline/0.5.0/", "requires_dist": null, "requires_python": null, "summary": "A Python project that adds real time streaming to your web app's data.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Oneline\n<br>=======================================================================\n<br>\n<br>Overview\n<br>----------------------------------------------------------------------\n<br>\n<br>Oneline is a websockets project that aims to simplifies writing client/server\n<br>socket code for ws, additionally provides layer of database. It is \n<br>made for developers who wish to experiment with the websocket standard\n<br>while trying to build practical applications.\n<br>\n<br>\n<br>How It works\n<br>------------------------------------------------------------------------\n<br>\n<br>It uses ws4py and cherrypy in processing websocket things, the frontend\n<br>client written in javascript is the connection to web applications. The server is designed to handle it's client.\n<br>\n<br>\n<br>Installing\n<br>------------------------------------------------------------------------\n<br>\n<br>To install oneline, you can download the code on PyPi or even GitHub (https://github.com/nadirhamid/oneline),\n<br>\n<br>currently to run this, use\n<br>\n<br>    make\n<br>\n<br>on success you should see the oneline server startup.\n<br>\n<br>Recipes\n<br>------------------------------------------------------------------------\n<br>\n<br>There's some recipes for Oneline, they demonstrate its pragmatic\n<br>usage in web applications or broker servers, currently they are (as of this writing)\n<br>\n<br>  Example 1: \n<br>    LastFM Tag Streamer\n<br>   - This example demonstrates streaming artists and music according to their\n<br>socially voted tags. The dataset, publicly available can be found @\n<br>   http://labrosa.ee.columbia.edu/millionsong/lastfm\n<br>\n<br>  Example 2:\n<br>    Catapult Call Streaming\n<br>    - Websockets with telecom info, this will show how to\n<br>     stream VoIP events, calls using oneline and Catapult's RESTful\n<br>     API, documentation.\n<br>\n<br>\n<br>  Example 3:\n<br>    Wikipedia PageRank\n<br>     - This application, will use PIG and Hadoop MapReduce in providing\n<br>     a realtime pagerank for wiki articles, articles which are scored\n<br>     with a dampening factor of 0.08 can be voted up or down\n<br>\n<br>All recipes are available at \n<br>\n<br>https://github.com/nadirhamid/oneline-recipes\n<br>\n<br>\n<br>Object Documentation\n<br>------------------------------------------------------------------------------\n<br>    Geo Object\n<br>    used to calculate lat,lng coords, bidrectionally or\n<br>    in one.\n<br>    Time\n<br>    meet time ranged events\n<br>    Events\n<br>    General purpose SQL queries\n<br>    Sound\n<br>    Get input of sound based events\n<br>    Generic\n<br>    use oneline without a database connection\n<br>\n<br>\n<br>Technical Supports, requirements\n<br>------------------------------------------------------------------------------\n<br>\n<br>Python Support:\n<br>\n<br>currently &gt;= 2.7 is needed\n<br>\n<br>Databases, as of this writing supports:\n<br>\n<br>PostGreSQL, MySQL, SQLite, CouchDB and MongoDB\n<br>\n<br>It is recommended to atleast have one database connection\n<br>\n<br>\n<br>\n<br>Old news ----------------------------------------------------------------------\n<br>\n<br>Older Description:\n<br>A Python project that adds real time streaming to your web app's data.\n<br>Streaming is done through server modules which are written\n<br>in python, these will then be streamed over websockets -- using\n<br>cherrypy and ws4py. Streaming is done with a db table, which\n<br>will be used for all the module's data.\n<br>\n<br>Data can be refined in a few ways. Currently, it is done\n<br>through the defined modules, geolocation and event. \n<br>The former will refine data based on geolocation(lng, lat) coordinates.\n<br>The latter is a general purpose database querier. These objects\n<br>can be used through a non commutative pipeline which\n<br>will filter data according to your needs.\n          </div>"}, "last_serial": 1834121, "releases": {"0.5.0": [{"comment_text": "oneline v0.6.4 in alpha", "digests": {"md5": "9064296c3889952328781def065bdad8", "sha256": "5c54b816e665cd0d1ca2ebe76163609f7ad3f2be025027cc7fce9649295e8fa4"}, "downloads": -1, "filename": "oneline-0.6.4-alpha.tar.gz", "has_sig": false, "md5_digest": "9064296c3889952328781def065bdad8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21609246, "upload_time": "2015-03-29T23:42:33", "upload_time_iso_8601": "2015-03-29T23:42:33.703166Z", "url": "https://files.pythonhosted.org/packages/8e/3a/64b37225a77c2724f5c96cc9c659e7ce38f06648b65bf99a4ffee30b69ee/oneline-0.6.4-alpha.tar.gz", "yanked": false}, {"comment_text": "Release of v1.0.0RC1", "digests": {"md5": "fcc1eec62e548a6d000cc25a35da62f8", "sha256": "a354e87da03a532c944d91a9f167e704ee00c266f26ef2d75368b1f96be28445"}, "downloads": -1, "filename": "oneline-v1.0.0RC1.zip", "has_sig": false, "md5_digest": "fcc1eec62e548a6d000cc25a35da62f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11493976, "upload_time": "2015-11-24T02:46:43", "upload_time_iso_8601": "2015-11-24T02:46:43.733278Z", "url": "https://files.pythonhosted.org/packages/0f/86/ad4db703a336911a6e460ecd885d5e57e157f7c70a19262e788503affcc6/oneline-v1.0.0RC1.zip", "yanked": false}], "1.0.0RC1": []}, "urls": [{"comment_text": "oneline v0.6.4 in alpha", "digests": {"md5": "9064296c3889952328781def065bdad8", "sha256": "5c54b816e665cd0d1ca2ebe76163609f7ad3f2be025027cc7fce9649295e8fa4"}, "downloads": -1, "filename": "oneline-0.6.4-alpha.tar.gz", "has_sig": false, "md5_digest": "9064296c3889952328781def065bdad8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21609246, "upload_time": "2015-03-29T23:42:33", "upload_time_iso_8601": "2015-03-29T23:42:33.703166Z", "url": "https://files.pythonhosted.org/packages/8e/3a/64b37225a77c2724f5c96cc9c659e7ce38f06648b65bf99a4ffee30b69ee/oneline-0.6.4-alpha.tar.gz", "yanked": false}, {"comment_text": "Release of v1.0.0RC1", "digests": {"md5": "fcc1eec62e548a6d000cc25a35da62f8", "sha256": "a354e87da03a532c944d91a9f167e704ee00c266f26ef2d75368b1f96be28445"}, "downloads": -1, "filename": "oneline-v1.0.0RC1.zip", "has_sig": false, "md5_digest": "fcc1eec62e548a6d000cc25a35da62f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11493976, "upload_time": "2015-11-24T02:46:43", "upload_time_iso_8601": "2015-11-24T02:46:43.733278Z", "url": "https://files.pythonhosted.org/packages/0f/86/ad4db703a336911a6e460ecd885d5e57e157f7c70a19262e788503affcc6/oneline-v1.0.0RC1.zip", "yanked": false}], "timestamp": "Fri May  8 03:04:02 2020"}