{"info": {"author": "Adam Spannbauer", "author_email": "spannbaueradam@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Python Video Stabilization <img src='https://s3.amazonaws.com/python-vidstab/logo/vidstab_logo_hex.png' width=125 align='right'/>\n\n[![Build Status](https://travis-ci.org/AdamSpannbauer/python_video_stab.svg?branch=master)](https://travis-ci.org/AdamSpannbauer/python_video_stab)\n[![codecov](https://codecov.io/gh/AdamSpannbauer/python_video_stab/branch/master/graph/badge.svg)](https://codecov.io/gh/AdamSpannbauer/python_video_stab)\n[![Maintainability](https://api.codeclimate.com/v1/badges/f3a17d211a2a437d21b1/maintainability)](https://codeclimate.com/github/AdamSpannbauer/python_video_stab/maintainability)\n[![PyPi version](https://pypip.in/v/vidstab/badge.png)](https://pypi.org/project/vidstab/)\n[![Last Commit](https://img.shields.io/github/last-commit/AdamSpannbauer/python_video_stab.svg)](https://github.com/AdamSpannbauer/python_video_stab/commits/master)\n[![Downloads](https://pepy.tech/badge/vidstab)](https://pepy.tech/project/vidstab)\n\n Python video stabilization using OpenCV. Full [searchable documentation here](https://adamspannbauer.github.io/python_video_stab).\n\n This module contains a single class (`VidStab`) used for video stabilization. This class is based on the work presented by Nghia Ho in [SIMPLE VIDEO STABILIZATION USING OPENCV](http://nghiaho.com/?p=2093). The foundation code was found in a comment on Nghia Ho's post by the commenter with username koala.\n\n Input                           |  Output\n:-------------------------------:|:-------------------------:\n![](https://s3.amazonaws.com/python-vidstab/readme/input_ostrich.gif)    |  ![](https://s3.amazonaws.com/python-vidstab/readme/stable_ostrich.gif)\n\n*[Video](https://www.youtube.com/watch?v=9pypPqbV_GM) used with permission from [HappyLiving](https://www.facebook.com/happylivinginfl/)*\n\n## Contents:\n1. [Installation](#installation)\n   * [Install `vidstab` without installing OpenCV](#install-vidstab-without-installing-opencv)\n   * [Install vidstab & OpenCV](#install-vidstab-opencv)   \n2. [Basic Usage](#basic-usage)\n   * [Using from command line](#using-from-command-line)\n   * [Using VidStab class](#using-vidstab-class)\n3. [Advanced Usage](#advanced-usage)\n   * [Plotting frame to frame transformations](#plotting-frame-to-frame-transformations)\n   * [Using borders](#using-borders)\n   * [Using Frame Layering](#using-frame-layering)\n   * [Stabilizing a frame at a time](#stabilizing-a-frame-at-a-time)\n   * [Working with live video](#working-with-live-video)\n   * [Transform File Writing & Reading](#transform-file-writing--reading)\n\n## Installation\n\n> ```diff\n> + Please report issues if you install/try to install and run into problems!\n> ```\n\n### Install `vidstab` without installing OpenCV\n\nIf you've already built OpenCV with python bindings on your machine it is recommended to install `vidstab` without installing the pypi versions of OpenCV.  The `opencv-python` python module can cause issues if you've already built OpenCV from source in your environment.\n\nThe below commands will install `vidstab` without OpenCV included.\n\n#### From PyPi\n\n```bash\npip install vidstab\n```\n\n#### From GitHub\n\n```bash\npip install git+https://github.com/AdamSpannbauer/python_video_stab.git\n```\n\n### Install `vidstab` & OpenCV\n\nIf you don't have OpenCV installed already there are a couple options.  \n\n1. You can build OpenCV using one of the great online tutorials from [PyImageSearch](https://www.pyimagesearch.com/), [LearnOpenCV](https://www.learnopencv.com/), or [OpenCV](https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_setup/py_table_of_contents_setup/py_table_of_contents_setup.html#py-table-of-content-setup) themselves.  When building from source you have more options (e.g. [platform optimization](https://www.pyimagesearch.com/2017/10/09/optimizing-opencv-on-the-raspberry-pi/)), but more responsibility.  Once installed you can use the pip install command shown above.\n2. You can install a pre-built distribution of OpenCV from pypi as a dependency for `vidstab` (see command below)\n\nThe below commands will install `vidstab` with `opencv-contrib-python` as dependencies.\n\n#### From PyPi\n\n```bash\npip install vidstab[cv2]\n```\n\n#### From Github\n\n```bash\n pip install -e git+https://github.com/AdamSpannbauer/python_video_stab.git#egg=vidstab[cv2]\n```\n\n## Basic usage\n\nThe `VidStab` class can be used as a command line script or in your own custom python code.\n\n### Using from command line\n\n```bash\n# Using defaults\npython3 -m vidstab --input input_video.mov --output stable_video.avi\n```\n\n```bash\n# Using a specific keypoint detector\npython3 -m vidstab -i input_video.mov -o stable_video.avi -k GFTT\n```\n\n### Using `VidStab` class\n\n```python\nfrom vidstab import VidStab\n\n# Using defaults\nstabilizer = VidStab()\nstabilizer.stabilize(input_path='input_video.mov', output_path='stable_video.avi')\n\n# Using a specific keypoint detector\nstabilizer = VidStab(kp_method='ORB')\nstabilizer.stabilize(input_path='input_video.mp4', output_path='stable_video.avi')\n\n# Using a specific keypoint detector and customizing keypoint parameters\nstabilizer = VidStab(kp_method='FAST', threshold=42, nonmaxSuppression=False)\nstabilizer.stabilize(input_path='input_video.mov', output_path='stable_video.avi')\n```\n\n## Advanced usage\n\n### Plotting frame to frame transformations\n\n```python\nfrom vidstab import VidStab\nimport matplotlib.pyplot as plt\n\nstabilizer = VidStab()\nstabilizer.stabilize(input_path='input_video.mov', output_path='stable_video.avi')\n\nstabilizer.plot_trajectory()\nplt.show()\n\nstabilizer.plot_transforms()\nplt.show()\n```\n\nTrajectories                     |  Transforms\n:-------------------------------:|:-------------------------:\n![](https://s3.amazonaws.com/python-vidstab/readme/trajectory_plot.png)  |  ![](https://s3.amazonaws.com/python-vidstab/readme/transforms_plot.png)\n\n### Using borders\n\n```python\nfrom vidstab import VidStab\n\nstabilizer = VidStab()\n\n# black borders\nstabilizer.stabilize(input_path='input_video.mov', \n                     output_path='stable_video.avi', \n                     border_type='black')\nstabilizer.stabilize(input_path='input_video.mov', \n                     output_path='wide_stable_video.avi', \n                     border_type='black', \n                     border_size=100)\n\n# filled in borders\nstabilizer.stabilize(input_path='input_video.mov', \n                     output_path='ref_stable_video.avi', \n                     border_type='reflect')\nstabilizer.stabilize(input_path='input_video.mov', \n                     output_path='rep_stable_video.avi', \n                     border_type='replicate')\n```\n\n<table>\n  <tr>\n    <td><p align='center'><code>border_size=0</code></p></td>\n    <td><p align='center'><code>border_size=100</code></p></td>\n  </tr>\n  <tr>\n    <td><p align='center'><img src='https://s3.amazonaws.com/python-vidstab/readme/stable_ostrich.gif'></p></td>\n    <td><p align='center'><img src='https://s3.amazonaws.com/python-vidstab/readme/wide_stable_ostrich.gif'></p></td>\n  </tr>\n</table>\n\n`border_type='reflect'`                 |  `border_type='replicate'`\n:--------------------------------------:|:-------------------------:\n![](https://s3.amazonaws.com/python-vidstab/readme/reflect_stable_ostrich.gif)  |  ![](https://s3.amazonaws.com/python-vidstab/readme/replicate_stable_ostrich.gif)\n\n*[Video](https://www.youtube.com/watch?v=9pypPqbV_GM) used with permission from [HappyLiving](https://www.facebook.com/happylivinginfl/)*\n\n### Using Frame Layering\n\n```python\nfrom vidstab import VidStab, layer_overlay, layer_blend\n\n# init vid stabilizer\nstabilizer = VidStab()\n\n# use vidstab.layer_overlay for generating a trail effect\nstabilizer.stabilize(input_path=INPUT_VIDEO_PATH,\n                     output_path='trail_stable_video.avi',\n                     border_type='black',\n                     border_size=100,\n                     layer_func=layer_overlay)\n\n\n# create custom overlay function\n# here we use vidstab.layer_blend with custom alpha\n#   layer_blend will generate a fading trail effect with some motion blur\ndef layer_custom(foreground, background):\n    return layer_blend(foreground, background, foreground_alpha=.8)\n\n# use custom overlay function\nstabilizer.stabilize(input_path=INPUT_VIDEO_PATH,\n                     output_path='blend_stable_video.avi',\n                     border_type='black',\n                     border_size=100,\n                     layer_func=layer_custom)\n```\n\n`layer_func=vidstab.layer_overlay`     |  `layer_func=vidstab.layer_blend`\n:--------------------------------------:|:-------------------------:\n![](https://s3.amazonaws.com/python-vidstab/readme/trail_stable_ostrich.gif)  |  ![](https://s3.amazonaws.com/python-vidstab/readme/blend_stable_ostrich.gif)\n\n*[Video](https://www.youtube.com/watch?v=9pypPqbV_GM) used with permission from [HappyLiving](https://www.facebook.com/happylivinginfl/)*\n\n\n### Automatic border sizing\n\n```python\nfrom vidstab import VidStab, layer_overlay\n\nstabilizer = VidStab()\n\nstabilizer.stabilize(input_path=INPUT_VIDEO_PATH,\n                     output_path='auto_border_stable_video.avi', \n                     border_size='auto',\n                     # frame layering to show performance of auto sizing\n                     layer_func=layer_overlay)\n```\n\n<p align='center'>\n  <img width='45%' src='https://s3.amazonaws.com/python-vidstab/readme/auto_border_stable_ostrich.gif'>\n</p>\n\n\n### Stabilizing a frame at a time\n\nThe method `VidStab.stabilize_frame()` can accept `numpy` arrays to allow stabilization processing a frame at a time.\nThis can allow pre/post processing for each frame to be stabilized; see examples below.\n\n#### Simplest form\n\n```python\nfrom vidstab.VidStab import VidStab\n\nstabilizer = VidStab()\nvidcap = cv2.VideoCapture('input_video.mov')\n\nwhile True:\n     grabbed_frame, frame = vidcap.read()\n\n     if frame is not None:\n        # Perform any pre-processing of frame before stabilization here\n        pass\n\n     # Pass frame to stabilizer even if frame is None\n     # stabilized_frame will be an all black frame until iteration 30\n     stabilized_frame = stabilizer.stabilize_frame(input_frame=frame,\n                                                   smoothing_window=30)\n     if stabilized_frame is None:\n         # There are no more frames available to stabilize\n         break\n\n     # Perform any post-processing of stabilized frame here\n     pass\n```\n\n#### Example with object tracking\n\n```python\nimport os\nimport cv2\nfrom vidstab import VidStab, layer_overlay, download_ostrich_video\n\n# Download test video to stabilize\nif not os.path.isfile(\"ostrich.mp4\"):\n    download_ostrich_video(\"ostrich.mp4\")\n\n# Initialize object tracker, stabilizer, and video reader\nobject_tracker = cv2.TrackerCSRT_create()\nstabilizer = VidStab()\nvidcap = cv2.VideoCapture(\"ostrich.mp4\")\n\n# Initialize bounding box for drawing rectangle around tracked object\nobject_bounding_box = None\n\nwhile True:\n    grabbed_frame, frame = vidcap.read()\n\n    # Pass frame to stabilizer even if frame is None\n    stabilized_frame = stabilizer.stabilize_frame(input_frame=frame, border_size=50)\n\n    # If stabilized_frame is None then there are no frames left to process\n    if stabilized_frame is None:\n        break\n\n    # Draw rectangle around tracked object if tracking has started\n    if object_bounding_box is not None:\n        success, object_bounding_box = object_tracker.update(stabilized_frame)\n\n        if success:\n            (x, y, w, h) = [int(v) for v in object_bounding_box]\n            cv2.rectangle(stabilized_frame, (x, y), (x + w, y + h),\n                          (0, 255, 0), 2)\n\n    # Display stabilized output\n    cv2.imshow('Frame', stabilized_frame)\n\n    key = cv2.waitKey(5)\n\n    # Select ROI for tracking and begin object tracking\n    # Non-zero frame indicates stabilization process is warmed up\n    if stabilized_frame.sum() > 0 and object_bounding_box is None:\n        object_bounding_box = cv2.selectROI(\"Frame\",\n                                            stabilized_frame,\n                                            fromCenter=False,\n                                            showCrosshair=True)\n        object_tracker.init(stabilized_frame, object_bounding_box)\n    elif key == 27:\n        break\n\nvidcap.release()\ncv2.destroyAllWindows()\n```\n\n<p align='center'>\n  <img width='50%' src='https://s3.amazonaws.com/python-vidstab/readme/obj_tracking_vidstab_1.gif'>\n</p>\n\n\n### Working with live video\n\nThe `VidStab` class can also process live video streams.  The underlying video reader is `cv2.VideoCapture`([documentation](https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_gui/py_video_display/py_video_display.html)).\nThe relevant snippet from the documentation for stabilizing live video is:\n\n> *Its argument can be either the device index or the name of a video file. Device index is just the number to specify which camera. Normally one camera will be connected (as in my case). So I simply pass 0 (or -1). You can select the second camera by passing 1 and so on.*\n\nThe `input_path` argument of the `VidStab.stabilize` method can accept integers that will be passed directly to `cv2.VideoCapture` as a device index.  You can also pass a device index to the `--input` argument for command line usage.\n\nOne notable difference between live feeds and video files is that webcam footage does not have a definite end point.\nThe options for ending a live video stabilization are to set the max length using the `max_frames` argument or to manually stop the process by pressing the <kbd>Esc</kbd> key or the <kbd>Q</kbd> key.\nIf `max_frames` is not provided then no progress bar can be displayed for live video stabilization processes.\n\n#### Example\n\n```python\nfrom vidstab import VidStab\n\nstabilizer = VidStab()\nstabilizer.stabilize(input_path=0,\n                     output_path='stable_webcam.avi',\n                     max_frames=1000,\n                     playback=True)\n```\n\n<p align='center'>\n  <img width='50%' src='https://s3.amazonaws.com/python-vidstab/readme/webcam_stable.gif'>\n</p>\n\n### Transform file writing & reading \n\n#### Generating and saving transforms to file\n\n```python\nimport numpy as np\nfrom vidstab import VidStab, download_ostrich_video\n\n# Download video if needed\ndownload_ostrich_video(INPUT_VIDEO_PATH)\n\n# Generate transforms and save to TRANSFORMATIONS_PATH as csv (no headers)\nstabilizer = VidStab()\nstabilizer.gen_transforms(INPUT_VIDEO_PATH)\nnp.savetxt(TRANSFORMATIONS_PATH, stabilizer.transforms, delimiter=',')\n```\n\nFile at `TRANSFORMATIONS_PATH` is of the form shown below.  The 3 columns represent delta x, delta y, and delta angle respectively.\n\n```\n-9.249733913760086068e+01,2.953221378387767970e+01,-2.875918912994855636e-02\n-8.801434576214279559e+01,2.741942225927152776e+01,-2.715232319470826938e-02\n```\n\n#### Reading and using transforms from file\n\nBelow example reads a file of transforms and applies to an arbitrary video.  The transform file is of the form shown in [above section](#generating-and-saving-transforms-to-file).\n\n```python\nimport numpy as np\nfrom vidstab import VidStab\n\n# Read in csv transform data, of form (delta x, delta y, delta angle):\ntransforms = np.loadtxt(TRANSFORMATIONS_PATH, delimiter=',')\n\n# Create stabilizer and supply numpy array of transforms\nstabilizer = VidStab()\nstabilizer.transforms = transforms\n\n# Apply stabilizing transforms to INPUT_VIDEO_PATH and save to OUTPUT_VIDEO_PATH\nstabilizer.apply_transforms(INPUT_VIDEO_PATH, OUTPUT_VIDEO_PATH)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AdamSpannbauer/python_video_stab", "keywords": "video stabilization,computer vision,image processing,opencv", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "vidstab", "package_url": "https://pypi.org/project/vidstab/", "platform": "", "project_url": "https://pypi.org/project/vidstab/", "project_urls": {"Homepage": "https://github.com/AdamSpannbauer/python_video_stab"}, "release_url": "https://pypi.org/project/vidstab/1.7.3/", "requires_dist": ["numpy", "imutils (>=0.5.2)", "progress", "matplotlib", "opencv-contrib-python (>=3.4.0) ; extra == 'cv2'"], "requires_python": "", "summary": "Video Stabilization using OpenCV", "version": "1.7.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Video Stabilization <img align=\"right\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21d55f2dce75b66b42c277513f4fcee7a22b7fb7/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f6c6f676f2f766964737461625f6c6f676f5f6865782e706e67\" width=\"125\"></h1>\n<p><a href=\"https://travis-ci.org/AdamSpannbauer/python_video_stab\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc2aac65a752950c53c773a646811e9ef334bcc1/68747470733a2f2f7472617669732d63692e6f72672f4164616d5370616e6e62617565722f707974686f6e5f766964656f5f737461622e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/AdamSpannbauer/python_video_stab\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d4e689fddb8a9db0405f57d228a3532f325e101/68747470733a2f2f636f6465636f762e696f2f67682f4164616d5370616e6e62617565722f707974686f6e5f766964656f5f737461622f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://codeclimate.com/github/AdamSpannbauer/python_video_stab/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b834b0c79d5ffa3b320d68ce2347c53803d3e666/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f66336131376432313161326134333764323162312f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://pypi.org/project/vidstab/\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/594188b895db5685421d59fc51a96daac18612ea/68747470733a2f2f70797069702e696e2f762f766964737461622f62616467652e706e67\"></a>\n<a href=\"https://github.com/AdamSpannbauer/python_video_stab/commits/master\" rel=\"nofollow\"><img alt=\"Last Commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8abae26ae3433eadfb52f8c9b3ac7c4f5ece72f2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f4164616d5370616e6e62617565722f707974686f6e5f766964656f5f737461622e737667\"></a>\n<a href=\"https://pepy.tech/project/vidstab\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d869222d9b1803542fb39a310ecf4a678376de5/68747470733a2f2f706570792e746563682f62616467652f76696473746162\"></a></p>\n<p>Python video stabilization using OpenCV. Full <a href=\"https://adamspannbauer.github.io/python_video_stab\" rel=\"nofollow\">searchable documentation here</a>.</p>\n<p>This module contains a single class (<code>VidStab</code>) used for video stabilization. This class is based on the work presented by Nghia Ho in <a href=\"http://nghiaho.com/?p=2093\" rel=\"nofollow\">SIMPLE VIDEO STABILIZATION USING OPENCV</a>. The foundation code was found in a comment on Nghia Ho's post by the commenter with username koala.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Input</th>\n<th align=\"center\">Output</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1799a2ea54f808115b703a0d736bcd4b9d650a7a/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f696e7075745f6f7374726963682e676966\"></td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca018fdb4709c6d0c7d175f17ffb082ee0c92965/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f737461626c655f6f7374726963682e676966\"></td>\n</tr></tbody></table>\n<p><em><a href=\"https://www.youtube.com/watch?v=9pypPqbV_GM\" rel=\"nofollow\">Video</a> used with permission from <a href=\"https://www.facebook.com/happylivinginfl/\" rel=\"nofollow\">HappyLiving</a></em></p>\n<h2>Contents:</h2>\n<ol>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a>\n<ul>\n<li><a href=\"#install-vidstab-without-installing-opencv\" rel=\"nofollow\">Install <code>vidstab</code> without installing OpenCV</a></li>\n<li><a href=\"#install-vidstab-opencv\" rel=\"nofollow\">Install vidstab &amp; OpenCV</a></li>\n</ul>\n</li>\n<li><a href=\"#basic-usage\" rel=\"nofollow\">Basic Usage</a>\n<ul>\n<li><a href=\"#using-from-command-line\" rel=\"nofollow\">Using from command line</a></li>\n<li><a href=\"#using-vidstab-class\" rel=\"nofollow\">Using VidStab class</a></li>\n</ul>\n</li>\n<li><a href=\"#advanced-usage\" rel=\"nofollow\">Advanced Usage</a>\n<ul>\n<li><a href=\"#plotting-frame-to-frame-transformations\" rel=\"nofollow\">Plotting frame to frame transformations</a></li>\n<li><a href=\"#using-borders\" rel=\"nofollow\">Using borders</a></li>\n<li><a href=\"#using-frame-layering\" rel=\"nofollow\">Using Frame Layering</a></li>\n<li><a href=\"#stabilizing-a-frame-at-a-time\" rel=\"nofollow\">Stabilizing a frame at a time</a></li>\n<li><a href=\"#working-with-live-video\" rel=\"nofollow\">Working with live video</a></li>\n<li><a href=\"#transform-file-writing--reading\" rel=\"nofollow\">Transform File Writing &amp; Reading</a></li>\n</ul>\n</li>\n</ol>\n<h2>Installation</h2>\n<blockquote>\n<pre><span class=\"gi\">+ Please report issues if you install/try to install and run into problems!</span>\n</pre>\n</blockquote>\n<h3>Install <code>vidstab</code> without installing OpenCV</h3>\n<p>If you've already built OpenCV with python bindings on your machine it is recommended to install <code>vidstab</code> without installing the pypi versions of OpenCV.  The <code>opencv-python</code> python module can cause issues if you've already built OpenCV from source in your environment.</p>\n<p>The below commands will install <code>vidstab</code> without OpenCV included.</p>\n<h4>From PyPi</h4>\n<pre>pip install vidstab\n</pre>\n<h4>From GitHub</h4>\n<pre>pip install git+https://github.com/AdamSpannbauer/python_video_stab.git\n</pre>\n<h3>Install <code>vidstab</code> &amp; OpenCV</h3>\n<p>If you don't have OpenCV installed already there are a couple options.</p>\n<ol>\n<li>You can build OpenCV using one of the great online tutorials from <a href=\"https://www.pyimagesearch.com/\" rel=\"nofollow\">PyImageSearch</a>, <a href=\"https://www.learnopencv.com/\" rel=\"nofollow\">LearnOpenCV</a>, or <a href=\"https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_setup/py_table_of_contents_setup/py_table_of_contents_setup.html#py-table-of-content-setup\" rel=\"nofollow\">OpenCV</a> themselves.  When building from source you have more options (e.g. <a href=\"https://www.pyimagesearch.com/2017/10/09/optimizing-opencv-on-the-raspberry-pi/\" rel=\"nofollow\">platform optimization</a>), but more responsibility.  Once installed you can use the pip install command shown above.</li>\n<li>You can install a pre-built distribution of OpenCV from pypi as a dependency for <code>vidstab</code> (see command below)</li>\n</ol>\n<p>The below commands will install <code>vidstab</code> with <code>opencv-contrib-python</code> as dependencies.</p>\n<h4>From PyPi</h4>\n<pre>pip install vidstab<span class=\"o\">[</span>cv2<span class=\"o\">]</span>\n</pre>\n<h4>From Github</h4>\n<pre> pip install -e git+https://github.com/AdamSpannbauer/python_video_stab.git#egg<span class=\"o\">=</span>vidstab<span class=\"o\">[</span>cv2<span class=\"o\">]</span>\n</pre>\n<h2>Basic usage</h2>\n<p>The <code>VidStab</code> class can be used as a command line script or in your own custom python code.</p>\n<h3>Using from command line</h3>\n<pre><span class=\"c1\"># Using defaults</span>\npython3 -m vidstab --input input_video.mov --output stable_video.avi\n</pre>\n<pre><span class=\"c1\"># Using a specific keypoint detector</span>\npython3 -m vidstab -i input_video.mov -o stable_video.avi -k GFTT\n</pre>\n<h3>Using <code>VidStab</code> class</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span>\n\n<span class=\"c1\"># Using defaults</span>\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s1\">'input_video.mov'</span><span class=\"p\">,</span> <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'stable_video.avi'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Using a specific keypoint detector</span>\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">(</span><span class=\"n\">kp_method</span><span class=\"o\">=</span><span class=\"s1\">'ORB'</span><span class=\"p\">)</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s1\">'input_video.mp4'</span><span class=\"p\">,</span> <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'stable_video.avi'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Using a specific keypoint detector and customizing keypoint parameters</span>\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">(</span><span class=\"n\">kp_method</span><span class=\"o\">=</span><span class=\"s1\">'FAST'</span><span class=\"p\">,</span> <span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mi\">42</span><span class=\"p\">,</span> <span class=\"n\">nonmaxSuppression</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s1\">'input_video.mov'</span><span class=\"p\">,</span> <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'stable_video.avi'</span><span class=\"p\">)</span>\n</pre>\n<h2>Advanced usage</h2>\n<h3>Plotting frame to frame transformations</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s1\">'input_video.mov'</span><span class=\"p\">,</span> <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'stable_video.avi'</span><span class=\"p\">)</span>\n\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">plot_trajectory</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">plot_transforms</span><span class=\"p\">()</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Trajectories</th>\n<th align=\"center\">Transforms</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/987a3ac637882298b1901f8adae968400465c6bf/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f7472616a6563746f72795f706c6f742e706e67\"></td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f69b090a8fb1b7716c86b798e73c8d676fa194de/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f7472616e73666f726d735f706c6f742e706e67\"></td>\n</tr></tbody></table>\n<h3>Using borders</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span>\n\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># black borders</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s1\">'input_video.mov'</span><span class=\"p\">,</span> \n                     <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'stable_video.avi'</span><span class=\"p\">,</span> \n                     <span class=\"n\">border_type</span><span class=\"o\">=</span><span class=\"s1\">'black'</span><span class=\"p\">)</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s1\">'input_video.mov'</span><span class=\"p\">,</span> \n                     <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'wide_stable_video.avi'</span><span class=\"p\">,</span> \n                     <span class=\"n\">border_type</span><span class=\"o\">=</span><span class=\"s1\">'black'</span><span class=\"p\">,</span> \n                     <span class=\"n\">border_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># filled in borders</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s1\">'input_video.mov'</span><span class=\"p\">,</span> \n                     <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'ref_stable_video.avi'</span><span class=\"p\">,</span> \n                     <span class=\"n\">border_type</span><span class=\"o\">=</span><span class=\"s1\">'reflect'</span><span class=\"p\">)</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s1\">'input_video.mov'</span><span class=\"p\">,</span> \n                     <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'rep_stable_video.avi'</span><span class=\"p\">,</span> \n                     <span class=\"n\">border_type</span><span class=\"o\">=</span><span class=\"s1\">'replicate'</span><span class=\"p\">)</span>\n</pre>\n<table>\n  <tr>\n    <td><p align=\"center\"><code>border_size=0</code></p></td>\n    <td><p align=\"center\"><code>border_size=100</code></p></td>\n  </tr>\n  <tr>\n    <td><p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ca018fdb4709c6d0c7d175f17ffb082ee0c92965/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f737461626c655f6f7374726963682e676966\"></p></td>\n    <td><p align=\"center\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15b7daf67acf332616177ae24380f0484e580734/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f776964655f737461626c655f6f7374726963682e676966\"></p></td>\n  </tr>\n</table>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><code>border_type='reflect'</code></th>\n<th align=\"center\"><code>border_type='replicate'</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eddb3326d8a9509e656a462db1b58edc791112db/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f7265666c6563745f737461626c655f6f7374726963682e676966\"></td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2847407c6f4105777ce2274f311a5c3c3097d3c1/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f7265706c69636174655f737461626c655f6f7374726963682e676966\"></td>\n</tr></tbody></table>\n<p><em><a href=\"https://www.youtube.com/watch?v=9pypPqbV_GM\" rel=\"nofollow\">Video</a> used with permission from <a href=\"https://www.facebook.com/happylivinginfl/\" rel=\"nofollow\">HappyLiving</a></em></p>\n<h3>Using Frame Layering</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span><span class=\"p\">,</span> <span class=\"n\">layer_overlay</span><span class=\"p\">,</span> <span class=\"n\">layer_blend</span>\n\n<span class=\"c1\"># init vid stabilizer</span>\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># use vidstab.layer_overlay for generating a trail effect</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"n\">INPUT_VIDEO_PATH</span><span class=\"p\">,</span>\n                     <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'trail_stable_video.avi'</span><span class=\"p\">,</span>\n                     <span class=\"n\">border_type</span><span class=\"o\">=</span><span class=\"s1\">'black'</span><span class=\"p\">,</span>\n                     <span class=\"n\">border_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n                     <span class=\"n\">layer_func</span><span class=\"o\">=</span><span class=\"n\">layer_overlay</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># create custom overlay function</span>\n<span class=\"c1\"># here we use vidstab.layer_blend with custom alpha</span>\n<span class=\"c1\">#   layer_blend will generate a fading trail effect with some motion blur</span>\n<span class=\"k\">def</span> <span class=\"nf\">layer_custom</span><span class=\"p\">(</span><span class=\"n\">foreground</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">layer_blend</span><span class=\"p\">(</span><span class=\"n\">foreground</span><span class=\"p\">,</span> <span class=\"n\">background</span><span class=\"p\">,</span> <span class=\"n\">foreground_alpha</span><span class=\"o\">=.</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># use custom overlay function</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"n\">INPUT_VIDEO_PATH</span><span class=\"p\">,</span>\n                     <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'blend_stable_video.avi'</span><span class=\"p\">,</span>\n                     <span class=\"n\">border_type</span><span class=\"o\">=</span><span class=\"s1\">'black'</span><span class=\"p\">,</span>\n                     <span class=\"n\">border_size</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>\n                     <span class=\"n\">layer_func</span><span class=\"o\">=</span><span class=\"n\">layer_custom</span><span class=\"p\">)</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><code>layer_func=vidstab.layer_overlay</code></th>\n<th align=\"center\"><code>layer_func=vidstab.layer_blend</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b551f9ac93edeae3f260aa6d8faa7a8e03a00563/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f747261696c5f737461626c655f6f7374726963682e676966\"></td>\n<td align=\"center\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d4609233d1eae403dcdcddc1c89c1868c77ab8f/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f626c656e645f737461626c655f6f7374726963682e676966\"></td>\n</tr></tbody></table>\n<p><em><a href=\"https://www.youtube.com/watch?v=9pypPqbV_GM\" rel=\"nofollow\">Video</a> used with permission from <a href=\"https://www.facebook.com/happylivinginfl/\" rel=\"nofollow\">HappyLiving</a></em></p>\n<h3>Automatic border sizing</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span><span class=\"p\">,</span> <span class=\"n\">layer_overlay</span>\n\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"n\">INPUT_VIDEO_PATH</span><span class=\"p\">,</span>\n                     <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'auto_border_stable_video.avi'</span><span class=\"p\">,</span> \n                     <span class=\"n\">border_size</span><span class=\"o\">=</span><span class=\"s1\">'auto'</span><span class=\"p\">,</span>\n                     <span class=\"c1\"># frame layering to show performance of auto sizing</span>\n                     <span class=\"n\">layer_func</span><span class=\"o\">=</span><span class=\"n\">layer_overlay</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e120ce23ca0bd44c79c903205644eef47bddbc06/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f6175746f5f626f726465725f737461626c655f6f7374726963682e676966\" width=\"45%\">\n</p>\n<h3>Stabilizing a frame at a time</h3>\n<p>The method <code>VidStab.stabilize_frame()</code> can accept <code>numpy</code> arrays to allow stabilization processing a frame at a time.\nThis can allow pre/post processing for each frame to be stabilized; see examples below.</p>\n<h4>Simplest form</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vidstab.VidStab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span>\n\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n<span class=\"n\">vidcap</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"s1\">'input_video.mov'</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n     <span class=\"n\">grabbed_frame</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">vidcap</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n     <span class=\"k\">if</span> <span class=\"n\">frame</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Perform any pre-processing of frame before stabilization here</span>\n        <span class=\"k\">pass</span>\n\n     <span class=\"c1\"># Pass frame to stabilizer even if frame is None</span>\n     <span class=\"c1\"># stabilized_frame will be an all black frame until iteration 30</span>\n     <span class=\"n\">stabilized_frame</span> <span class=\"o\">=</span> <span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize_frame</span><span class=\"p\">(</span><span class=\"n\">input_frame</span><span class=\"o\">=</span><span class=\"n\">frame</span><span class=\"p\">,</span>\n                                                   <span class=\"n\">smoothing_window</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n     <span class=\"k\">if</span> <span class=\"n\">stabilized_frame</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n         <span class=\"c1\"># There are no more frames available to stabilize</span>\n         <span class=\"k\">break</span>\n\n     <span class=\"c1\"># Perform any post-processing of stabilized frame here</span>\n     <span class=\"k\">pass</span>\n</pre>\n<h4>Example with object tracking</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span><span class=\"p\">,</span> <span class=\"n\">layer_overlay</span><span class=\"p\">,</span> <span class=\"n\">download_ostrich_video</span>\n\n<span class=\"c1\"># Download test video to stabilize</span>\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"s2\">\"ostrich.mp4\"</span><span class=\"p\">):</span>\n    <span class=\"n\">download_ostrich_video</span><span class=\"p\">(</span><span class=\"s2\">\"ostrich.mp4\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Initialize object tracker, stabilizer, and video reader</span>\n<span class=\"n\">object_tracker</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">TrackerCSRT_create</span><span class=\"p\">()</span>\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n<span class=\"n\">vidcap</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"s2\">\"ostrich.mp4\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Initialize bounding box for drawing rectangle around tracked object</span>\n<span class=\"n\">object_bounding_box</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">grabbed_frame</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">vidcap</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># Pass frame to stabilizer even if frame is None</span>\n    <span class=\"n\">stabilized_frame</span> <span class=\"o\">=</span> <span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize_frame</span><span class=\"p\">(</span><span class=\"n\">input_frame</span><span class=\"o\">=</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"n\">border_size</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># If stabilized_frame is None then there are no frames left to process</span>\n    <span class=\"k\">if</span> <span class=\"n\">stabilized_frame</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n\n    <span class=\"c1\"># Draw rectangle around tracked object if tracking has started</span>\n    <span class=\"k\">if</span> <span class=\"n\">object_bounding_box</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">success</span><span class=\"p\">,</span> <span class=\"n\">object_bounding_box</span> <span class=\"o\">=</span> <span class=\"n\">object_tracker</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">stabilized_frame</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">success</span><span class=\"p\">:</span>\n            <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">object_bounding_box</span><span class=\"p\">]</span>\n            <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">rectangle</span><span class=\"p\">(</span><span class=\"n\">stabilized_frame</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">+</span> <span class=\"n\">h</span><span class=\"p\">),</span>\n                          <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Display stabilized output</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s1\">'Frame'</span><span class=\"p\">,</span> <span class=\"n\">stabilized_frame</span><span class=\"p\">)</span>\n\n    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Select ROI for tracking and begin object tracking</span>\n    <span class=\"c1\"># Non-zero frame indicates stabilization process is warmed up</span>\n    <span class=\"k\">if</span> <span class=\"n\">stabilized_frame</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">object_bounding_box</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">object_bounding_box</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">selectROI</span><span class=\"p\">(</span><span class=\"s2\">\"Frame\"</span><span class=\"p\">,</span>\n                                            <span class=\"n\">stabilized_frame</span><span class=\"p\">,</span>\n                                            <span class=\"n\">fromCenter</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n                                            <span class=\"n\">showCrosshair</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">object_tracker</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">stabilized_frame</span><span class=\"p\">,</span> <span class=\"n\">object_bounding_box</span><span class=\"p\">)</span>\n    <span class=\"k\">elif</span> <span class=\"n\">key</span> <span class=\"o\">==</span> <span class=\"mi\">27</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n\n<span class=\"n\">vidcap</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>\n</pre>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/06637f5d2be25a034dd25306f73516ba895e0c06/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f6f626a5f747261636b696e675f766964737461625f312e676966\" width=\"50%\">\n</p>\n<h3>Working with live video</h3>\n<p>The <code>VidStab</code> class can also process live video streams.  The underlying video reader is <code>cv2.VideoCapture</code>(<a href=\"https://docs.opencv.org/3.0-beta/doc/py_tutorials/py_gui/py_video_display/py_video_display.html\" rel=\"nofollow\">documentation</a>).\nThe relevant snippet from the documentation for stabilizing live video is:</p>\n<blockquote>\n<p><em>Its argument can be either the device index or the name of a video file. Device index is just the number to specify which camera. Normally one camera will be connected (as in my case). So I simply pass 0 (or -1). You can select the second camera by passing 1 and so on.</em></p>\n</blockquote>\n<p>The <code>input_path</code> argument of the <code>VidStab.stabilize</code> method can accept integers that will be passed directly to <code>cv2.VideoCapture</code> as a device index.  You can also pass a device index to the <code>--input</code> argument for command line usage.</p>\n<p>One notable difference between live feeds and video files is that webcam footage does not have a definite end point.\nThe options for ending a live video stabilization are to set the max length using the <code>max_frames</code> argument or to manually stop the process by pressing the <kbd>Esc</kbd> key or the <kbd>Q</kbd> key.\nIf <code>max_frames</code> is not provided then no progress bar can be displayed for live video stabilization processes.</p>\n<h4>Example</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span>\n\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">stabilize</span><span class=\"p\">(</span><span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                     <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s1\">'stable_webcam.avi'</span><span class=\"p\">,</span>\n                     <span class=\"n\">max_frames</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">,</span>\n                     <span class=\"n\">playback</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p align=\"center\">\n  <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2111e67325634fb5c07edd8c9fa395d0c78ac36b/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f707974686f6e2d766964737461622f726561646d652f77656263616d5f737461626c652e676966\" width=\"50%\">\n</p>\n<h3>Transform file writing &amp; reading</h3>\n<h4>Generating and saving transforms to file</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span><span class=\"p\">,</span> <span class=\"n\">download_ostrich_video</span>\n\n<span class=\"c1\"># Download video if needed</span>\n<span class=\"n\">download_ostrich_video</span><span class=\"p\">(</span><span class=\"n\">INPUT_VIDEO_PATH</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Generate transforms and save to TRANSFORMATIONS_PATH as csv (no headers)</span>\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">gen_transforms</span><span class=\"p\">(</span><span class=\"n\">INPUT_VIDEO_PATH</span><span class=\"p\">)</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">savetxt</span><span class=\"p\">(</span><span class=\"n\">TRANSFORMATIONS_PATH</span><span class=\"p\">,</span> <span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">transforms</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s1\">','</span><span class=\"p\">)</span>\n</pre>\n<p>File at <code>TRANSFORMATIONS_PATH</code> is of the form shown below.  The 3 columns represent delta x, delta y, and delta angle respectively.</p>\n<pre><code>-9.249733913760086068e+01,2.953221378387767970e+01,-2.875918912994855636e-02\n-8.801434576214279559e+01,2.741942225927152776e+01,-2.715232319470826938e-02\n</code></pre>\n<h4>Reading and using transforms from file</h4>\n<p>Below example reads a file of transforms and applies to an arbitrary video.  The transform file is of the form shown in <a href=\"#generating-and-saving-transforms-to-file\" rel=\"nofollow\">above section</a>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">vidstab</span> <span class=\"kn\">import</span> <span class=\"n\">VidStab</span>\n\n<span class=\"c1\"># Read in csv transform data, of form (delta x, delta y, delta angle):</span>\n<span class=\"n\">transforms</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">loadtxt</span><span class=\"p\">(</span><span class=\"n\">TRANSFORMATIONS_PATH</span><span class=\"p\">,</span> <span class=\"n\">delimiter</span><span class=\"o\">=</span><span class=\"s1\">','</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create stabilizer and supply numpy array of transforms</span>\n<span class=\"n\">stabilizer</span> <span class=\"o\">=</span> <span class=\"n\">VidStab</span><span class=\"p\">()</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">transforms</span> <span class=\"o\">=</span> <span class=\"n\">transforms</span>\n\n<span class=\"c1\"># Apply stabilizing transforms to INPUT_VIDEO_PATH and save to OUTPUT_VIDEO_PATH</span>\n<span class=\"n\">stabilizer</span><span class=\"o\">.</span><span class=\"n\">apply_transforms</span><span class=\"p\">(</span><span class=\"n\">INPUT_VIDEO_PATH</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT_VIDEO_PATH</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6478809, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ab2b927ae86e5c6c6ad53821f3352cc0", "sha256": "84ba83f433da13372f45b367c9a8d9af94f2d3f4348a1e4b7fb8bdc933adcf22"}, "downloads": -1, "filename": "vidstab-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ab2b927ae86e5c6c6ad53821f3352cc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6314, "upload_time": "2018-05-24T19:59:51", "upload_time_iso_8601": "2018-05-24T19:59:51.268598Z", "url": "https://files.pythonhosted.org/packages/31/15/dbd8b857f3a496c25f3d8032f38abda712b04adbc56ff0e9f1cf9b16dfc8/vidstab-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "57e9d6d197111692db47e51850066082", "sha256": "ecdd6babd762ea2d7b6d59a5a63a8ea59a25e3100cea9a94d75f07cbbdbe4d8c"}, "downloads": -1, "filename": "vidstab-0.1.1.tar.gz", "has_sig": false, "md5_digest": "57e9d6d197111692db47e51850066082", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8642, "upload_time": "2018-05-27T14:41:25", "upload_time_iso_8601": "2018-05-27T14:41:25.862365Z", "url": "https://files.pythonhosted.org/packages/16/5e/bce647d170d55cb7cf1a777cfd92e32eb4f0a52b83a5a40db3f7ef47effd/vidstab-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "64cacc92e55ddc6a497fd74e1999af2e", "sha256": "e0a77ad4a787f2d36cecc578bd21a124a861d25b3917d43fac99246b1bd2c64b"}, "downloads": -1, "filename": "vidstab-0.1.2.tar.gz", "has_sig": false, "md5_digest": "64cacc92e55ddc6a497fd74e1999af2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8867, "upload_time": "2018-05-29T11:04:23", "upload_time_iso_8601": "2018-05-29T11:04:23.661604Z", "url": "https://files.pythonhosted.org/packages/85/82/3231c6b3f4289ec3b9cbcbdc20d8b7e3b43abb9f1481a69e6bb389fd820f/vidstab-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "afb86a5a9e12f25448a12833a269b1fa", "sha256": "439f95532d227ba362f562dfa1888ae1b9b708906dbace58b1d8c47e1b1ee276"}, "downloads": -1, "filename": "vidstab-0.1.3.tar.gz", "has_sig": false, "md5_digest": "afb86a5a9e12f25448a12833a269b1fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8858, "upload_time": "2018-05-29T11:06:03", "upload_time_iso_8601": "2018-05-29T11:06:03.737184Z", "url": "https://files.pythonhosted.org/packages/27/26/8d9af9638bdde7be3cdcd045884f92632eedb30115dc96d6e82637cd3ffe/vidstab-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "4ca4e07e1758c81ade97de88a534bd96", "sha256": "b775652cc4f41812de04bc443ad522c1bdaef456a00c74857e9ebc5d2066e362"}, "downloads": -1, "filename": "vidstab-0.1.5.tar.gz", "has_sig": false, "md5_digest": "4ca4e07e1758c81ade97de88a534bd96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8858, "upload_time": "2018-05-29T11:08:43", "upload_time_iso_8601": "2018-05-29T11:08:43.243453Z", "url": "https://files.pythonhosted.org/packages/cf/21/f077adadc9d2e4fce152f5e8c0c65f780102dab045b2b6eb2fe92488f8b0/vidstab-0.1.5.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "43c44ad22892441c5a31398434ffa16b", "sha256": "fa7aa196ae40074cc2887f26472d1526d670715ab2dbbc032ca1fb1c68688392"}, "downloads": -1, "filename": "vidstab-1.0.0.tar.gz", "has_sig": false, "md5_digest": "43c44ad22892441c5a31398434ffa16b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14861, "upload_time": "2018-10-21T20:29:15", "upload_time_iso_8601": "2018-10-21T20:29:15.466423Z", "url": "https://files.pythonhosted.org/packages/83/3f/186fd1f0a738ec5fb932872d418390e7680c87b5c4e0a2e7e38063ce1e0e/vidstab-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2a6fefe16e8bca5f5dad8fda3b49a9d3", "sha256": "0c8f5d97d114056287080ecaa3e41a6088a3d9f9e931d977b6816735619184fd"}, "downloads": -1, "filename": "vidstab-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2a6fefe16e8bca5f5dad8fda3b49a9d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14859, "upload_time": "2018-12-04T22:01:45", "upload_time_iso_8601": "2018-12-04T22:01:45.918372Z", "url": "https://files.pythonhosted.org/packages/84/fa/6e070a7458d6bf97a36a4ab7aa264449882773ad458f55d221265c757ef2/vidstab-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94e7aec7bb596a489510e66e3424d159", "sha256": "31b45fa6c6c726ee05c4e106d95682f17258750d09e2e1c880bbccbf866f323e"}, "downloads": -1, "filename": "vidstab-1.0.1.tar.gz", "has_sig": false, "md5_digest": "94e7aec7bb596a489510e66e3424d159", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14910, "upload_time": "2018-12-04T22:01:47", "upload_time_iso_8601": "2018-12-04T22:01:47.466444Z", "url": "https://files.pythonhosted.org/packages/f5/1d/03d2fd81280e33ad08ec7673e0a93370af5074f0f16048483eb905a0f533/vidstab-1.0.1.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "2439461bef789527557d4b2db07a614a", "sha256": "5e003500cea506675d207f4b26886b67cd1122e8b3fa2888d13366e825c623ec"}, "downloads": -1, "filename": "vidstab-1.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2439461bef789527557d4b2db07a614a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18904, "upload_time": "2019-01-10T17:04:03", "upload_time_iso_8601": "2019-01-10T17:04:03.638539Z", "url": "https://files.pythonhosted.org/packages/99/9c/eb6ff69af336c67116085893ad98c333c9fe14a7b4230f9790453b864f82/vidstab-1.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99434cfe8b13b82d3f9a12f98876c6b1", "sha256": "4387e67c355435a6b4f9fa2b2ce39439237babee1cfc45023a1acd0fc90ba4ed"}, "downloads": -1, "filename": "vidstab-1.5.0.tar.gz", "has_sig": false, "md5_digest": "99434cfe8b13b82d3f9a12f98876c6b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22085, "upload_time": "2019-01-10T17:04:05", "upload_time_iso_8601": "2019-01-10T17:04:05.751625Z", "url": "https://files.pythonhosted.org/packages/a8/7a/6a00e4d1e7228a27b95c9820db9c8e838bf6df000098cb32f2c65e8c0311/vidstab-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "83903168e477815cbe2b7f535f9573d9", "sha256": "3ac0e4baf25e5185d769221135b0e823f57bf4471eb3c5aef00ebd7cc949ea4c"}, "downloads": -1, "filename": "vidstab-1.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83903168e477815cbe2b7f535f9573d9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19657, "upload_time": "2019-01-11T19:16:17", "upload_time_iso_8601": "2019-01-11T19:16:17.959602Z", "url": "https://files.pythonhosted.org/packages/59/2e/92e6f505c9f0130f52bac09313e11fe7e9c71c862b840af3f4746463f60d/vidstab-1.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6928207aa50dc620c5a6eed83c415652", "sha256": "17afbe6d098fbebea887a2228b9dd11c28491b47b665c1730a5f02a7da20da67"}, "downloads": -1, "filename": "vidstab-1.5.1.tar.gz", "has_sig": false, "md5_digest": "6928207aa50dc620c5a6eed83c415652", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22626, "upload_time": "2019-01-11T19:16:19", "upload_time_iso_8601": "2019-01-11T19:16:19.668311Z", "url": "https://files.pythonhosted.org/packages/95/bc/4305d96565a23d04978a0c30da0d96ac69dd5240dc81bd9c6558e64635f1/vidstab-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "c8d2f10b739c37e49a2b82c6a95c9a70", "sha256": "29fcf141708a0085488a77e4856e0229b3c88467b187866ff4447fb762a375cb"}, "downloads": -1, "filename": "vidstab-1.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c8d2f10b739c37e49a2b82c6a95c9a70", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19687, "upload_time": "2019-01-13T18:29:36", "upload_time_iso_8601": "2019-01-13T18:29:36.444412Z", "url": "https://files.pythonhosted.org/packages/80/90/1fd239f7011c9a081f57df7615b53267db082e76f4524c3e8041d68f4207/vidstab-1.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f43a795dbefdfff5a354c1e67b75c973", "sha256": "27d933890e3aa02628d6cf32a14ed25e42b79ec49bb706ae53fdafb2ff1090ef"}, "downloads": -1, "filename": "vidstab-1.5.2.tar.gz", "has_sig": false, "md5_digest": "f43a795dbefdfff5a354c1e67b75c973", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22730, "upload_time": "2019-01-13T18:29:38", "upload_time_iso_8601": "2019-01-13T18:29:38.256483Z", "url": "https://files.pythonhosted.org/packages/df/36/b4cde17448e86539e44931036a00badbe1c824e4391f7ab7697978293467/vidstab-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "31ea415310a740dc20efd5cc262c7a1e", "sha256": "982977897c5986acf50972eea23a76e3221b609ff38989e274f5a7bbb2ce9879"}, "downloads": -1, "filename": "vidstab-1.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "31ea415310a740dc20efd5cc262c7a1e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20901, "upload_time": "2019-01-14T19:36:03", "upload_time_iso_8601": "2019-01-14T19:36:03.491682Z", "url": "https://files.pythonhosted.org/packages/c6/f2/3d0e38b811c5039f8073f4fe7079e7d1d91ef71110925b90f69052d8652a/vidstab-1.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "991cdf51b52e99c10a11cf22263d43ba", "sha256": "e905386530220b83f1e17f99800bade1029b8be91f4b3dbbd493cb6f7a9351d4"}, "downloads": -1, "filename": "vidstab-1.5.3.tar.gz", "has_sig": false, "md5_digest": "991cdf51b52e99c10a11cf22263d43ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23664, "upload_time": "2019-01-14T19:36:04", "upload_time_iso_8601": "2019-01-14T19:36:04.999578Z", "url": "https://files.pythonhosted.org/packages/75/b9/335d0fc7c0a083849f63614c123fccb9bb2a3910fe8b01bd30ecd50a79d8/vidstab-1.5.3.tar.gz", "yanked": false}], "1.5.4": [{"comment_text": "", "digests": {"md5": "38a79a1ae1ccb5762210ce27ead2d972", "sha256": "2e07fc8a116be102e473b65f72e06907132fcf496bce9b25b2f8ba37ff5549b3"}, "downloads": -1, "filename": "vidstab-1.5.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "38a79a1ae1ccb5762210ce27ead2d972", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20901, "upload_time": "2019-01-26T18:59:25", "upload_time_iso_8601": "2019-01-26T18:59:25.614284Z", "url": "https://files.pythonhosted.org/packages/ba/dc/69b38086c11150590599a15b9e09290017bf51f31157755c139cdc1542a3/vidstab-1.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e63555f8e67df6d4ebee83c40c2303fc", "sha256": "7e1a7058fb6fd6999f010a80cbcd7305fe598c4d8b897f30a182d49c79fd0240"}, "downloads": -1, "filename": "vidstab-1.5.4.tar.gz", "has_sig": false, "md5_digest": "e63555f8e67df6d4ebee83c40c2303fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23685, "upload_time": "2019-01-26T18:59:27", "upload_time_iso_8601": "2019-01-26T18:59:27.541907Z", "url": "https://files.pythonhosted.org/packages/75/8b/6f7f88bb77be9c057bd5d83d328b50c2406f39a65de7c777ccfc4548e4fd/vidstab-1.5.4.tar.gz", "yanked": false}], "1.5.5": [{"comment_text": "", "digests": {"md5": "c47d5be49b09e12d6b552230715d6305", "sha256": "c08242bc410535145e290d2b3d3f6d446b9d1971da320cf2dd075c925835dd28"}, "downloads": -1, "filename": "vidstab-1.5.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c47d5be49b09e12d6b552230715d6305", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21912, "upload_time": "2019-01-27T16:40:31", "upload_time_iso_8601": "2019-01-27T16:40:31.739460Z", "url": "https://files.pythonhosted.org/packages/3c/aa/3ff756d32d53c39120df0ad09d56d4512c04ccf99ddea4e5d2a8507f3120/vidstab-1.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6f90b78ac2b05ea6fc7a6eeeee9783f", "sha256": "64e85bd60b8a440811b2f2be4c483de0bf41c07ea4b1d497d00aa1762d8a0a18"}, "downloads": -1, "filename": "vidstab-1.5.5.tar.gz", "has_sig": false, "md5_digest": "d6f90b78ac2b05ea6fc7a6eeeee9783f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25550, "upload_time": "2019-01-27T16:40:33", "upload_time_iso_8601": "2019-01-27T16:40:33.087456Z", "url": "https://files.pythonhosted.org/packages/b2/b2/2c46551f75d626538e187d152d62f7e7064392437497b992c39a2967b45c/vidstab-1.5.5.tar.gz", "yanked": false}], "1.5.6": [{"comment_text": "", "digests": {"md5": "00e5aa184d86616eca1327c946023688", "sha256": "180543101b3c46cf64c75e691d35113235e238cb962ee19aa487b69605d0666f"}, "downloads": -1, "filename": "vidstab-1.5.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00e5aa184d86616eca1327c946023688", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23395, "upload_time": "2019-01-28T16:27:34", "upload_time_iso_8601": "2019-01-28T16:27:34.659600Z", "url": "https://files.pythonhosted.org/packages/df/92/d0509c08df448cd22b137557d8c63e4b75aa3e688b3dc0d2a7cfd9a1ec17/vidstab-1.5.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "107af8091cc043ab89db90c411a5be49", "sha256": "6b488aed337855ac8b3730f7c6964c2ad41111a8f61ab0b457197696feefa593"}, "downloads": -1, "filename": "vidstab-1.5.6.tar.gz", "has_sig": false, "md5_digest": "107af8091cc043ab89db90c411a5be49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27104, "upload_time": "2019-01-28T16:27:36", "upload_time_iso_8601": "2019-01-28T16:27:36.559789Z", "url": "https://files.pythonhosted.org/packages/07/f6/38b0d4035180ba493e99c7d2f96f7e87379774c409261b851655b15fa227/vidstab-1.5.6.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "0d5de8dc88d696ccc35ca95a324db4e2", "sha256": "f39424f7072b01682409b0f5438a37fa76707aae2ad2afae864aa8b82e1aad9b"}, "downloads": -1, "filename": "vidstab-1.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0d5de8dc88d696ccc35ca95a324db4e2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26230, "upload_time": "2019-04-27T16:36:16", "upload_time_iso_8601": "2019-04-27T16:36:16.706785Z", "url": "https://files.pythonhosted.org/packages/18/b3/30adfb1aca20b1bcfca790b35c705f00800b4e4da1ec0388b79b804f70dc/vidstab-1.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8961f3fd08fb484ca0d6ab9551bd5d11", "sha256": "dcc6378a176ce187c78ca0d395e0c1cef5a7dd759971b139ef4048c8458af172"}, "downloads": -1, "filename": "vidstab-1.6.0.tar.gz", "has_sig": false, "md5_digest": "8961f3fd08fb484ca0d6ab9551bd5d11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31373, "upload_time": "2019-04-27T16:36:20", "upload_time_iso_8601": "2019-04-27T16:36:20.382100Z", "url": "https://files.pythonhosted.org/packages/4a/5b/83d96837a50b4219e87d6c61348911856e5d2b4cbfb75f222f5d9a6060c1/vidstab-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "2ccfe35326570ea7eb55e9c735fa68ef", "sha256": "128042f0afb2291331b523b551fcc54d863279bf1f6781cc3b3539dcc5ec74fa"}, "downloads": -1, "filename": "vidstab-1.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ccfe35326570ea7eb55e9c735fa68ef", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26268, "upload_time": "2019-05-06T22:59:40", "upload_time_iso_8601": "2019-05-06T22:59:40.827990Z", "url": "https://files.pythonhosted.org/packages/e2/18/2f5226ac25d74d9c76d916faa801db9b8fda5c90cc536ce9273ae825c683/vidstab-1.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e260d754a9b3bb08dda92d684014192b", "sha256": "9d3ae2cf6635478f3fcfb77daee7111bfb75adf3d9ae6eeed22fa77420df76bf"}, "downloads": -1, "filename": "vidstab-1.6.1.tar.gz", "has_sig": false, "md5_digest": "e260d754a9b3bb08dda92d684014192b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31496, "upload_time": "2019-05-06T22:59:42", "upload_time_iso_8601": "2019-05-06T22:59:42.934209Z", "url": "https://files.pythonhosted.org/packages/b7/0c/9258537757183bcdbd0b6e9773bfa57699eb4665288184763476c96ff445/vidstab-1.6.1.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "84648b9a17d2bc27b0c0d6104221fb54", "sha256": "ecfa589b5350b363fc261d673b67ce83add085eb30996894637a564ff75585c0"}, "downloads": -1, "filename": "vidstab-1.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "84648b9a17d2bc27b0c0d6104221fb54", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26299, "upload_time": "2019-08-05T15:00:04", "upload_time_iso_8601": "2019-08-05T15:00:04.449638Z", "url": "https://files.pythonhosted.org/packages/5f/2a/6a3dac7601843f5bb2cb091fe3f43769ce4c1ecb3f35493304c2a156a16d/vidstab-1.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81ec6b9c99202b47f2d51ba5c4fc018a", "sha256": "c3cb4d88d171b227669396f2b5037cf5aed1d00dd7f7a60f53aab4ddebaca4e8"}, "downloads": -1, "filename": "vidstab-1.6.2.tar.gz", "has_sig": false, "md5_digest": "81ec6b9c99202b47f2d51ba5c4fc018a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31567, "upload_time": "2019-08-05T15:00:06", "upload_time_iso_8601": "2019-08-05T15:00:06.360976Z", "url": "https://files.pythonhosted.org/packages/fd/91/974ed52ea102895d618540fe93673ef14e87096cfacb078cec0f5b65c4f3/vidstab-1.6.2.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "b1849b197df6ba478fe8f3be8f672dbb", "sha256": "d13d0f6e9e4cab8326c075d96bf2ec3a55a9ff2bfb52651e785dfc0dba87ea02"}, "downloads": -1, "filename": "vidstab-1.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1849b197df6ba478fe8f3be8f672dbb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26393, "upload_time": "2019-08-10T18:34:55", "upload_time_iso_8601": "2019-08-10T18:34:55.415907Z", "url": "https://files.pythonhosted.org/packages/53/c2/8de9abf58a8d758faa7e408fe410a3336026de4e808b1148b78ae2ec3be4/vidstab-1.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7a76c197c3ba3feb274d1a96b90a486", "sha256": "eaf9c15578e56d04479a8c20b9016a74c3589b7cb5a2b0b7941484ccdb36857c"}, "downloads": -1, "filename": "vidstab-1.7.0.tar.gz", "has_sig": false, "md5_digest": "e7a76c197c3ba3feb274d1a96b90a486", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31681, "upload_time": "2019-08-10T18:34:57", "upload_time_iso_8601": "2019-08-10T18:34:57.602363Z", "url": "https://files.pythonhosted.org/packages/da/65/ee438ba3f5aafce7d5e29cc499856e5a0c22fa1013f37e9781112d6795d3/vidstab-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "1cad7e4e4552a357bef471db41b315ac", "sha256": "d81ac5de789cfac4548b85b6adabe86707261bae3af1bdc40212dd49c9c7c1e6"}, "downloads": -1, "filename": "vidstab-1.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1cad7e4e4552a357bef471db41b315ac", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26401, "upload_time": "2019-08-11T16:07:58", "upload_time_iso_8601": "2019-08-11T16:07:58.275656Z", "url": "https://files.pythonhosted.org/packages/18/6b/56263644079479929ca2f4a1f5ed54ec57331d3d455ea55029ca456c7912/vidstab-1.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82882da4532012d9616342db387969dd", "sha256": "4eb307832b64b24ef97ae2f6e06ceaa48d9705c22f95e025f7fc4710d8556b1a"}, "downloads": -1, "filename": "vidstab-1.7.1.tar.gz", "has_sig": false, "md5_digest": "82882da4532012d9616342db387969dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31708, "upload_time": "2019-08-11T16:08:00", "upload_time_iso_8601": "2019-08-11T16:08:00.243933Z", "url": "https://files.pythonhosted.org/packages/0a/b7/12b1460a7932b7e25675f462f19e88beb6c2a48e109a954330976fe89d04/vidstab-1.7.1.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "ec300e12740a628a4e61a9a8e54e0129", "sha256": "57710dc0ef540bd0ab9cf5fe9098968c55d0e7c39c6bff91537dff7c37e25e1f"}, "downloads": -1, "filename": "vidstab-1.7.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ec300e12740a628a4e61a9a8e54e0129", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 26394, "upload_time": "2019-08-27T00:59:07", "upload_time_iso_8601": "2019-08-27T00:59:07.606839Z", "url": "https://files.pythonhosted.org/packages/c4/cc/b7ad3742e80748f5b8607c64dc651e0b3c04a3f6e1752bf3283ba0ada148/vidstab-1.7.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "715841a989929000d2f6a1c25202d561", "sha256": "24cb7a25a6ed9a474f4d23c9deecf9163691fcde2559de10897f593ba849266b"}, "downloads": -1, "filename": "vidstab-1.7.2.tar.gz", "has_sig": false, "md5_digest": "715841a989929000d2f6a1c25202d561", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31704, "upload_time": "2019-08-27T00:59:09", "upload_time_iso_8601": "2019-08-27T00:59:09.469432Z", "url": "https://files.pythonhosted.org/packages/82/fd/f81af1e8162dc27cf569c201bb8097a4f7ef9a45cf8ebb08f6dffd6f5620/vidstab-1.7.2.tar.gz", "yanked": false}], "1.7.3": [{"comment_text": "", "digests": {"md5": "03069392881af8a16342287bbd152b73", "sha256": "20219aaf007d1b36d2aa934b195fcbe075019250fdeb8c2715cc41ab7bfbcdba"}, "downloads": -1, "filename": "vidstab-1.7.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03069392881af8a16342287bbd152b73", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25888, "upload_time": "2020-01-18T16:56:02", "upload_time_iso_8601": "2020-01-18T16:56:02.674783Z", "url": "https://files.pythonhosted.org/packages/27/5b/6961161c44ef0593c18fbb155ec05bf5f5084ad47d322f1b244b677724b0/vidstab-1.7.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f14b81bb09ce28fbbeaa34b7de3b5f70", "sha256": "649a77a0c1b670d13a1bf411451945d7da439364dc0c33ee3636a23f1d82b456"}, "downloads": -1, "filename": "vidstab-1.7.3.tar.gz", "has_sig": false, "md5_digest": "f14b81bb09ce28fbbeaa34b7de3b5f70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32212, "upload_time": "2020-01-18T16:56:05", "upload_time_iso_8601": "2020-01-18T16:56:05.031298Z", "url": "https://files.pythonhosted.org/packages/44/e8/8acffaea28ce8f8827e6783256eb8632f6f657580d91995eefab3b4ef043/vidstab-1.7.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03069392881af8a16342287bbd152b73", "sha256": "20219aaf007d1b36d2aa934b195fcbe075019250fdeb8c2715cc41ab7bfbcdba"}, "downloads": -1, "filename": "vidstab-1.7.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "03069392881af8a16342287bbd152b73", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25888, "upload_time": "2020-01-18T16:56:02", "upload_time_iso_8601": "2020-01-18T16:56:02.674783Z", "url": "https://files.pythonhosted.org/packages/27/5b/6961161c44ef0593c18fbb155ec05bf5f5084ad47d322f1b244b677724b0/vidstab-1.7.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f14b81bb09ce28fbbeaa34b7de3b5f70", "sha256": "649a77a0c1b670d13a1bf411451945d7da439364dc0c33ee3636a23f1d82b456"}, "downloads": -1, "filename": "vidstab-1.7.3.tar.gz", "has_sig": false, "md5_digest": "f14b81bb09ce28fbbeaa34b7de3b5f70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32212, "upload_time": "2020-01-18T16:56:05", "upload_time_iso_8601": "2020-01-18T16:56:05.031298Z", "url": "https://files.pythonhosted.org/packages/44/e8/8acffaea28ce8f8827e6783256eb8632f6f657580d91995eefab3b4ef043/vidstab-1.7.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:07 2020"}