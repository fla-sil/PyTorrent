{"info": {"author": "George T. Gougoudis", "author_email": "george_gougoudis@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.3", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Terminals"], "description": "Python Easy Color\n======================\nColor output in python2/3 made easy!\n\nDescription\n===========\n\nMake python color ouput easy in UNIX terminals\nthat support ANSI sequences.\n\nInstallation\n============\n``pip install easycolor``\n\nDocumentation\n=============\n\nCheck the documentation at: (http://easycolor.readthedocs.io/en/latest/)\nalso available at: (https://georgetg.github.io/easycolor/)\n\nSource Code\n===========\n\nCheck at github: (https://github.com/GeorgeTG/easycolor)\n\nLicense\n=======\n\nCopyright George T. Gougoudis 2016. BSD 3-Clause license; see LICENSE file.\n\n\nBasic usage\n===========\n\nTo wrap text, the wrap function must be imported.\n\n.. code-block:: python\n\n    from easycolor.style import wrap as _w\n\nThe text is then wrapped as easy as\n\n.. code-block:: python\n\n    # wrap text, appends a style-reset\n    print(_w('yellow on red', fg='yellow', bg='red'))\n    print('normal text')\n\nTo compile a style, the make_style function is used:\n\n.. code-block:: python\n\n    from easycolor.style import make_style, RESET\n\nExample:\n\n.. code-block:: python\n\n    # define some styles\n    black_on_white = make_style(fg='black', bg='white')\n    # we have to reset the background here\n    red_bold = make_style(fg='red', bg='reset', opt='bold')\n    # An options reset is only possible with a total reset\n    # we can however negate an option to remove it('!option').\n    green_bold_underline = make_style(fg='green', opt=('!bold', 'underline'))\n\n    print(black_on_white + 'Black on white' + red_bold + 'Red bold' +\n          green_bold_underline + 'Green not bold underline' + RESET)\n    \n**Note**: For advanced formatting use the easycolor.parser module.\n\n\nAdvanced usage\n==============\n\nFirst obtain an instance\n\n.. code-block:: python\n   \n    from easycolor.parser import ColorParser\n    parser = ColorParser()\n\nThen for printing\n\n.. code-block:: python\n\n    cprint = parser.cprint\n    # Add rainbow colors!\n    cprint(\"\"\"<f:red>r<f:yellow>ai<f:green>nb<f:blue>o<f:magenta>w\"\"\"\n           \"\"\"</f>o</f>bn</f>ia</f>r</f>\"\"\")\n    # complex foreground - background\n    cprint(\"\"\"<f:red,b:yellow>red on yellow</b>just red<b:black>red on black!\"\"\"\n           \"\"\"<f:green>green on black</f>again red on black</f,b>normal\"\"\")\n\nParse a format string for a colored logger, for later use\n\n.. code-block:: python\n    \n    INFO = parser.parse(\"[<f:cyan>INFO</f>] <o:bold>{}\")\n    print(INFO.format('Some info..'))", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GeorgeTG/easycolor", "keywords": "color colour terminal text ansi", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "easycolor", "package_url": "https://pypi.org/project/easycolor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/easycolor/", "project_urls": {"Homepage": "https://github.com/GeorgeTG/easycolor"}, "release_url": "https://pypi.org/project/easycolor/0.1/", "requires_dist": null, "requires_python": "", "summary": "Terminal colors made easy!", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"python-easy-color\">\n<h2>Python Easy Color</h2>\n<p>Color output in python2/3 made easy!</p>\n</div>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Make python color ouput easy in UNIX terminals\nthat support ANSI sequences.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>pip install easycolor</tt></p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Check the documentation at: (<a href=\"http://easycolor.readthedocs.io/en/latest/\" rel=\"nofollow\">http://easycolor.readthedocs.io/en/latest/</a>)\nalso available at: (<a href=\"https://georgetg.github.io/easycolor/\" rel=\"nofollow\">https://georgetg.github.io/easycolor/</a>)</p>\n</div>\n<div id=\"source-code\">\n<h2>Source Code</h2>\n<p>Check at github: (<a href=\"https://github.com/GeorgeTG/easycolor\" rel=\"nofollow\">https://github.com/GeorgeTG/easycolor</a>)</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright George T. Gougoudis 2016. BSD 3-Clause license; see LICENSE file.</p>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>To wrap text, the wrap function must be imported.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easycolor.style</span> <span class=\"kn\">import</span> <span class=\"n\">wrap</span> <span class=\"k\">as</span> <span class=\"n\">_w</span>\n</pre>\n<p>The text is then wrapped as easy as</p>\n<pre><span class=\"c1\"># wrap text, appends a style-reset</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">_w</span><span class=\"p\">(</span><span class=\"s1\">'yellow on red'</span><span class=\"p\">,</span> <span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"s1\">'yellow'</span><span class=\"p\">,</span> <span class=\"n\">bg</span><span class=\"o\">=</span><span class=\"s1\">'red'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'normal text'</span><span class=\"p\">)</span>\n</pre>\n<p>To compile a style, the make_style function is used:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easycolor.style</span> <span class=\"kn\">import</span> <span class=\"n\">make_style</span><span class=\"p\">,</span> <span class=\"n\">RESET</span>\n</pre>\n<p>Example:</p>\n<pre><span class=\"c1\"># define some styles</span>\n<span class=\"n\">black_on_white</span> <span class=\"o\">=</span> <span class=\"n\">make_style</span><span class=\"p\">(</span><span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"s1\">'black'</span><span class=\"p\">,</span> <span class=\"n\">bg</span><span class=\"o\">=</span><span class=\"s1\">'white'</span><span class=\"p\">)</span>\n<span class=\"c1\"># we have to reset the background here</span>\n<span class=\"n\">red_bold</span> <span class=\"o\">=</span> <span class=\"n\">make_style</span><span class=\"p\">(</span><span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"s1\">'red'</span><span class=\"p\">,</span> <span class=\"n\">bg</span><span class=\"o\">=</span><span class=\"s1\">'reset'</span><span class=\"p\">,</span> <span class=\"n\">opt</span><span class=\"o\">=</span><span class=\"s1\">'bold'</span><span class=\"p\">)</span>\n<span class=\"c1\"># An options reset is only possible with a total reset</span>\n<span class=\"c1\"># we can however negate an option to remove it('!option').</span>\n<span class=\"n\">green_bold_underline</span> <span class=\"o\">=</span> <span class=\"n\">make_style</span><span class=\"p\">(</span><span class=\"n\">fg</span><span class=\"o\">=</span><span class=\"s1\">'green'</span><span class=\"p\">,</span> <span class=\"n\">opt</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'!bold'</span><span class=\"p\">,</span> <span class=\"s1\">'underline'</span><span class=\"p\">))</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">black_on_white</span> <span class=\"o\">+</span> <span class=\"s1\">'Black on white'</span> <span class=\"o\">+</span> <span class=\"n\">red_bold</span> <span class=\"o\">+</span> <span class=\"s1\">'Red bold'</span> <span class=\"o\">+</span>\n      <span class=\"n\">green_bold_underline</span> <span class=\"o\">+</span> <span class=\"s1\">'Green not bold underline'</span> <span class=\"o\">+</span> <span class=\"n\">RESET</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Note</strong>: For advanced formatting use the easycolor.parser module.</p>\n</div>\n<div id=\"advanced-usage\">\n<h2>Advanced usage</h2>\n<p>First obtain an instance</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">easycolor.parser</span> <span class=\"kn\">import</span> <span class=\"n\">ColorParser</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">ColorParser</span><span class=\"p\">()</span>\n</pre>\n<p>Then for printing</p>\n<pre><span class=\"n\">cprint</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">cprint</span>\n<span class=\"c1\"># Add rainbow colors!</span>\n<span class=\"n\">cprint</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"&lt;f:red&gt;r&lt;f:yellow&gt;ai&lt;f:green&gt;nb&lt;f:blue&gt;o&lt;f:magenta&gt;w\"\"\"</span>\n       <span class=\"sd\">\"\"\"&lt;/f&gt;o&lt;/f&gt;bn&lt;/f&gt;ia&lt;/f&gt;r&lt;/f&gt;\"\"\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># complex foreground - background</span>\n<span class=\"n\">cprint</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"&lt;f:red,b:yellow&gt;red on yellow&lt;/b&gt;just red&lt;b:black&gt;red on black!\"\"\"</span>\n       <span class=\"sd\">\"\"\"&lt;f:green&gt;green on black&lt;/f&gt;again red on black&lt;/f,b&gt;normal\"\"\"</span><span class=\"p\">)</span>\n</pre>\n<p>Parse a format string for a colored logger, for later use</p>\n<pre><span class=\"n\">INFO</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"[&lt;f:cyan&gt;INFO&lt;/f&gt;] &lt;o:bold&gt;</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">INFO</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s1\">'Some info..'</span><span class=\"p\">))</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2541731, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cd7df457fb2b369a50d8ed537736e9a9", "sha256": "e6cf9fa1863f2129e267a3f4e24c90898fe8da6618294c78565ae7f17d1b4463"}, "downloads": -1, "filename": "easycolor-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd7df457fb2b369a50d8ed537736e9a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7306, "upload_time": "2016-12-28T02:25:32", "upload_time_iso_8601": "2016-12-28T02:25:32.291103Z", "url": "https://files.pythonhosted.org/packages/3c/ba/d2ef8c639e49e41c7c2579bbac8a65dcd542419eeebdc8afc6be5016ea3f/easycolor-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e02d553d35726b8ff6ebe427cbb6121", "sha256": "d00eeefad954946a1118c8042a69713c68942b8d7c6e1ec2ed8da018888072a9"}, "downloads": -1, "filename": "easycolor-0.1.tar.gz", "has_sig": false, "md5_digest": "5e02d553d35726b8ff6ebe427cbb6121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5073, "upload_time": "2016-12-28T01:39:17", "upload_time_iso_8601": "2016-12-28T01:39:17.950283Z", "url": "https://files.pythonhosted.org/packages/68/4c/8d4bc46b59006daec8f185216e089138c7e098d778a833d215aebc9a948c/easycolor-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd7df457fb2b369a50d8ed537736e9a9", "sha256": "e6cf9fa1863f2129e267a3f4e24c90898fe8da6618294c78565ae7f17d1b4463"}, "downloads": -1, "filename": "easycolor-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd7df457fb2b369a50d8ed537736e9a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7306, "upload_time": "2016-12-28T02:25:32", "upload_time_iso_8601": "2016-12-28T02:25:32.291103Z", "url": "https://files.pythonhosted.org/packages/3c/ba/d2ef8c639e49e41c7c2579bbac8a65dcd542419eeebdc8afc6be5016ea3f/easycolor-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e02d553d35726b8ff6ebe427cbb6121", "sha256": "d00eeefad954946a1118c8042a69713c68942b8d7c6e1ec2ed8da018888072a9"}, "downloads": -1, "filename": "easycolor-0.1.tar.gz", "has_sig": false, "md5_digest": "5e02d553d35726b8ff6ebe427cbb6121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5073, "upload_time": "2016-12-28T01:39:17", "upload_time_iso_8601": "2016-12-28T01:39:17.950283Z", "url": "https://files.pythonhosted.org/packages/68/4c/8d4bc46b59006daec8f185216e089138c7e098d778a833d215aebc9a948c/easycolor-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:25 2020"}