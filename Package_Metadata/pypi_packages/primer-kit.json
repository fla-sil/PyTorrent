{"info": {"author": "Zhaocheng Zhu", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Debuggers", "Topic :: System :: Benchmark"], "description": "Primer\n======\n\nPrimer is a lightweight toolkit for debugging and benchmarking Python code.\n\nWith only one line inserted, primer improves your coding experience.\n\n```python\nfrom primer import debug, profile, performance\n```\n\nInstall\n-------\n\nRequirements\n- Python >= 3.5\n\n```bash\npip install primer-kit\n```\n\nDebug\n-----\n\nException hook helps you debug your code whenever exception is raise.\n\n```python\ndebug.setup_hook()\n```\n\nCall decorator monitors every call to the function and its arguments.\n\n```python\n@debug.call\ndef my_function(args):\n```\n\nProfile\n-------\n\nTime and memory profilers measure the duration and memory allocation for some code.\n\n```python\nwith profile.time(), profile.memory():\n```\n\nThey can also be used as decorators over functions. A log frequency of 10 outputs results once per 10 calls.\n\n```python\n@profile.time(log_frequency=10)\ndef my_function(args):\n```\n\nPerformance\n-----------\n\nSlot decorator converts all member variables to static slots, which saves memory and runs faster.\n\n```python\n@performance.slot\nclass MyClass(object):\n```\n\nShared ndarray can be passed across processes without copy, which saves memory by several times and runs faster.\n\n```python\nimport numpy as np\nimport multiprocessing as mp\n\narrays = [performance.SharedNDArray(np.random.rand(100000)) for _ in range(4)]\nresults = mp.Pool(4).map(np.sum, arrays)\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "debug,benchmark", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "primer-kit", "package_url": "https://pypi.org/project/primer-kit/", "platform": "", "project_url": "https://pypi.org/project/primer-kit/", "project_urls": null, "release_url": "https://pypi.org/project/primer-kit/0.1.1a0/", "requires_dist": ["psutil", "numpy"], "requires_python": ">=3.5", "summary": "Primer is a lightweight toolbox for debugging and benchmarking Python code.", "version": "0.1.1a0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Primer</h1>\n<p>Primer is a lightweight toolkit for debugging and benchmarking Python code.</p>\n<p>With only one line inserted, primer improves your coding experience.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">primer</span> <span class=\"kn\">import</span> <span class=\"n\">debug</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"p\">,</span> <span class=\"n\">performance</span>\n</pre>\n<h2>Install</h2>\n<p>Requirements</p>\n<ul>\n<li>Python &gt;= 3.5</li>\n</ul>\n<pre>pip install primer-kit\n</pre>\n<h2>Debug</h2>\n<p>Exception hook helps you debug your code whenever exception is raise.</p>\n<pre><span class=\"n\">debug</span><span class=\"o\">.</span><span class=\"n\">setup_hook</span><span class=\"p\">()</span>\n</pre>\n<p>Call decorator monitors every call to the function and its arguments.</p>\n<pre><span class=\"nd\">@debug</span><span class=\"o\">.</span><span class=\"n\">call</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_function</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</pre>\n<h2>Profile</h2>\n<p>Time and memory profilers measure the duration and memory allocation for some code.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(),</span> <span class=\"n\">profile</span><span class=\"o\">.</span><span class=\"n\">memory</span><span class=\"p\">():</span>\n</pre>\n<p>They can also be used as decorators over functions. A log frequency of 10 outputs results once per 10 calls.</p>\n<pre><span class=\"nd\">@profile</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"n\">log_frequency</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_function</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">):</span>\n</pre>\n<h2>Performance</h2>\n<p>Slot decorator converts all member variables to static slots, which saves memory and runs faster.</p>\n<pre><span class=\"nd\">@performance</span><span class=\"o\">.</span><span class=\"n\">slot</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n</pre>\n<p>Shared ndarray can be passed across processes without copy, which saves memory by several times and runs faster.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span> <span class=\"k\">as</span> <span class=\"nn\">mp</span>\n\n<span class=\"n\">arrays</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">performance</span><span class=\"o\">.</span><span class=\"n\">SharedNDArray</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">100000</span><span class=\"p\">))</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)]</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">Pool</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">,</span> <span class=\"n\">arrays</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6743207, "releases": {"0.1.0a0": [{"comment_text": "", "digests": {"md5": "1fb2fcb07db6bc326bf5524f1bda1b15", "sha256": "c9834d9d7e916eef32c0cf109ff862182d1ba860a2f936f8c86cd594b0629145"}, "downloads": -1, "filename": "primer_kit-0.1.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "1fb2fcb07db6bc326bf5524f1bda1b15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 2691, "upload_time": "2020-02-27T19:29:09", "upload_time_iso_8601": "2020-02-27T19:29:09.412979Z", "url": "https://files.pythonhosted.org/packages/d5/f3/4194899cfd1addaf8a7d74884710bd83c44be6fd46f89c569a856e0972d7/primer_kit-0.1.0a0-py3-none-any.whl", "yanked": false}], "0.1.1a0": [{"comment_text": "", "digests": {"md5": "30c00d65b411fa559a2eb7889301d182", "sha256": "8faa87470dd7fb58c626f2e76325ce99aaeae8eb1cef39a03ae9f56dc59e7dc7"}, "downloads": -1, "filename": "primer_kit-0.1.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "30c00d65b411fa559a2eb7889301d182", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6260, "upload_time": "2020-03-03T20:07:34", "upload_time_iso_8601": "2020-03-03T20:07:34.681322Z", "url": "https://files.pythonhosted.org/packages/df/cc/9aa0984d2ffeb0c608fa0f711b3e7aa3670439519a732fc7ade6ab5d5e1e/primer_kit-0.1.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93fa3dcf2f5daa10e43943638bc02dd6", "sha256": "9b50e1c15a9081b11823203e033c9c475ac52d598ad9e8bdce8b2959488480ff"}, "downloads": -1, "filename": "primer-kit-0.1.1a0.tar.gz", "has_sig": false, "md5_digest": "93fa3dcf2f5daa10e43943638bc02dd6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5440, "upload_time": "2020-03-03T20:07:35", "upload_time_iso_8601": "2020-03-03T20:07:35.816389Z", "url": "https://files.pythonhosted.org/packages/6f/88/93b47a7a774cbe1a398ce8e58568440c367dd72f985a4f51dc3997900520/primer-kit-0.1.1a0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30c00d65b411fa559a2eb7889301d182", "sha256": "8faa87470dd7fb58c626f2e76325ce99aaeae8eb1cef39a03ae9f56dc59e7dc7"}, "downloads": -1, "filename": "primer_kit-0.1.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "30c00d65b411fa559a2eb7889301d182", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6260, "upload_time": "2020-03-03T20:07:34", "upload_time_iso_8601": "2020-03-03T20:07:34.681322Z", "url": "https://files.pythonhosted.org/packages/df/cc/9aa0984d2ffeb0c608fa0f711b3e7aa3670439519a732fc7ade6ab5d5e1e/primer_kit-0.1.1a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93fa3dcf2f5daa10e43943638bc02dd6", "sha256": "9b50e1c15a9081b11823203e033c9c475ac52d598ad9e8bdce8b2959488480ff"}, "downloads": -1, "filename": "primer-kit-0.1.1a0.tar.gz", "has_sig": false, "md5_digest": "93fa3dcf2f5daa10e43943638bc02dd6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5440, "upload_time": "2020-03-03T20:07:35", "upload_time_iso_8601": "2020-03-03T20:07:35.816389Z", "url": "https://files.pythonhosted.org/packages/6f/88/93b47a7a774cbe1a398ce8e58568440c367dd72f985a4f51dc3997900520/primer-kit-0.1.1a0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:24 2020"}