{"info": {"author": "Chris Waigl", "author_email": "chris.waigl@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: GIS"], "description": "modapsclient\n============\n\nPython RESTful client for NASA\u2019s MODIS Adaptive Processing System\n(MODAPS) data archive at the Level-1 and Atmosphere Archive &\nDistribution System (LAADS) Distributed Active Archive Center (DAAC).\n\nMIT License.\n\nInstallation\n------------\n\n.. code:: python\n\n\tpip install modapsclient\n\npygaarst.modapsclient\n---------------------\n\nThis is a REST-full web service client that implements the NASA LAADSWEB\ndata API (see\nhttps://ladsweb.modaps.eosdis.nasa.gov/tools-and-services/lws-classic/quick-start.php)\n\n``class ModapsClient(object)``\n\nUsage:\n\n.. code:: python\n\n    from pygaarst import modapsclient as m\n    a = m.ModapsClient()\n    b = a.[methodname](args)\n\nImplements the methods from http://ladsweb.nascom.nasa.gov/data/api.html\n, except for (currently) those related to OpenSearch (which don\u2019t appear\nto be working reliably server-side) and ordering (TBD). Implemented\nmethods are marked with an x.\n\n+-------------+--------------------------------------+\n| implemented | methodname                           |\n+=============+======================================+\n| x           | ``getAllOrders``                     |\n+-------------+--------------------------------------+\n| x           | ``getBands``                         |\n+-------------+--------------------------------------+\n| x           | ``getBrowse``                        |\n+-------------+--------------------------------------+\n| x           | ``getCollections``                   |\n+-------------+--------------------------------------+\n| x           | ``getDataLayers``                    |\n+-------------+--------------------------------------+\n| x           | ``getDateCoverage``                  |\n+-------------+--------------------------------------+\n| x           | ``getFileOnlineStatuses``            |\n+-------------+--------------------------------------+\n| x           | ``getFileProperties``                |\n+-------------+--------------------------------------+\n| x           | ``getFileUrls``                      |\n+-------------+--------------------------------------+\n| x           | ``getMaxSearchResults``              |\n+-------------+--------------------------------------+\n|             | ``getOpenSearch``                    |\n+-------------+--------------------------------------+\n|             | ``getOrderStatus``                   |\n+-------------+--------------------------------------+\n|             | ``getOrderUrl``                      |\n+-------------+--------------------------------------+\n|             | ``getOSDD``                          |\n+-------------+--------------------------------------+\n| x           | ``getPostProcessingTypes``           |\n+-------------+--------------------------------------+\n| x           | ``listCollections`` (deprecated)     |\n+-------------+--------------------------------------+\n| x           | ``listMapProjections``               |\n+-------------+--------------------------------------+\n| x           | ``listProductGroups``                |\n+-------------+--------------------------------------+\n| x           | ``listProducts``                     |\n+-------------+--------------------------------------+\n| x           | ``listProductsByInstrument``         |\n+-------------+--------------------------------------+\n| x           | ``listReprojectionParameters``       |\n+-------------+--------------------------------------+\n| x           | ``listSatelliteInstruments``         |\n+-------------+--------------------------------------+\n|             | ``orderFiles``                       |\n+-------------+--------------------------------------+\n|             | ``orderFilesProcessed`` (deprecated) |\n+-------------+--------------------------------------+\n|             | ``releaseOrder``                     |\n+-------------+--------------------------------------+\n|             | ``searchDatasets``                   |\n+-------------+--------------------------------------+\n| x           | ``searchForFiles``                   |\n+-------------+--------------------------------------+\n| x           | ``searchForFilesByName``             |\n+-------------+--------------------------------------+\n\nCaveats and limitations\n-----------------------\n\nThis API is listed as \u201cclassic\u201d by NASA EOSDIS, so it\u2019s unlikely it\u2019ll\nreceive much attention in the future. Hardly anyone will use the \u201corder\u201d\nfeature as the files are usually available on the public file server.\nFor these two reasons, the unimplemented functionality is also unlikely\nto ever be implemented.\n\n>From experience, products listed via ``listProducts``  are not \nnecessarily in actual fact available in the NASA EOSDIS LAADS archive. \nIn this case, you may receive an error when searching for files. \n\nThe MODAPS web service has the tendency to return a 500 Internal Server\nError for *any* error, including unsupported values for query string variables.\n\nFurther docuementation\n----------------------\n\nSee the ``ipynb/`` folder for Jupyter Notebooks.\n\nTODO\n----\n\nAdd OPeNDAP client functionality.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chryss/modapsclient", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "modapsclient", "package_url": "https://pypi.org/project/modapsclient/", "platform": "", "project_url": "https://pypi.org/project/modapsclient/", "project_urls": {"Homepage": "https://github.com/chryss/modapsclient"}, "release_url": "https://pypi.org/project/modapsclient/0.1.1/", "requires_dist": ["future"], "requires_python": "", "summary": "A client for the NASA MODAPS web service", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python RESTful client for NASA\u2019s MODIS Adaptive Processing System\n(MODAPS) data archive at the Level-1 and Atmosphere Archive &amp;\nDistribution System (LAADS) Distributed Active Archive Center (DAAC).</p>\n<p>MIT License.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">modapsclient</span>\n</pre>\n</div>\n<div id=\"pygaarst-modapsclient\">\n<h2>pygaarst.modapsclient</h2>\n<p>This is a REST-full web service client that implements the NASA LAADSWEB\ndata API (see\n<a href=\"https://ladsweb.modaps.eosdis.nasa.gov/tools-and-services/lws-classic/quick-start.php\" rel=\"nofollow\">https://ladsweb.modaps.eosdis.nasa.gov/tools-and-services/lws-classic/quick-start.php</a>)</p>\n<p><tt>class ModapsClient(object)</tt></p>\n<p>Usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pygaarst</span> <span class=\"kn\">import</span> <span class=\"n\">modapsclient</span> <span class=\"k\">as</span> <span class=\"n\">m</span>\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">ModapsClient</span><span class=\"p\">()</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"p\">[</span><span class=\"n\">methodname</span><span class=\"p\">](</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</pre>\n<p>Implements the methods from <a href=\"http://ladsweb.nascom.nasa.gov/data/api.html\" rel=\"nofollow\">http://ladsweb.nascom.nasa.gov/data/api.html</a>\n, except for (currently) those related to OpenSearch (which don\u2019t appear\nto be working reliably server-side) and ordering (TBD). Implemented\nmethods are marked with an x.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>implemented</th>\n<th>methodname</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>x</td>\n<td><tt>getAllOrders</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getBands</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getBrowse</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getCollections</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getDataLayers</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getDateCoverage</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getFileOnlineStatuses</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getFileProperties</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getFileUrls</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getMaxSearchResults</tt></td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>getOpenSearch</tt></td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>getOrderStatus</tt></td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>getOrderUrl</tt></td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>getOSDD</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>getPostProcessingTypes</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>listCollections</tt> (deprecated)</td>\n</tr>\n<tr><td>x</td>\n<td><tt>listMapProjections</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>listProductGroups</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>listProducts</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>listProductsByInstrument</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>listReprojectionParameters</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>listSatelliteInstruments</tt></td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>orderFiles</tt></td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>orderFilesProcessed</tt> (deprecated)</td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>releaseOrder</tt></td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>searchDatasets</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>searchForFiles</tt></td>\n</tr>\n<tr><td>x</td>\n<td><tt>searchForFilesByName</tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"caveats-and-limitations\">\n<h2>Caveats and limitations</h2>\n<p>This API is listed as \u201cclassic\u201d by NASA EOSDIS, so it\u2019s unlikely it\u2019ll\nreceive much attention in the future. Hardly anyone will use the \u201corder\u201d\nfeature as the files are usually available on the public file server.\nFor these two reasons, the unimplemented functionality is also unlikely\nto ever be implemented.</p>\n<p>&gt;From experience, products listed via <tt>listProducts</tt>  are not\nnecessarily in actual fact available in the NASA EOSDIS LAADS archive.\nIn this case, you may receive an error when searching for files.</p>\n<p>The MODAPS web service has the tendency to return a 500 Internal Server\nError for <em>any</em> error, including unsupported values for query string variables.</p>\n</div>\n<div id=\"further-docuementation\">\n<h2>Further docuementation</h2>\n<p>See the <tt>ipynb/</tt> folder for Jupyter Notebooks.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>Add OPeNDAP client functionality.</p>\n</div>\n\n          </div>"}, "last_serial": 3712509, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "6bf96b4a4703a4a0fe0bfc25de1cc597", "sha256": "dae23b9d739333095646d03e7e4cc66e8cfbf0503749fd74e99a68572eaaf421"}, "downloads": -1, "filename": "modapsclient-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6bf96b4a4703a4a0fe0bfc25de1cc597", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9251, "upload_time": "2018-03-28T04:13:39", "upload_time_iso_8601": "2018-03-28T04:13:39.363143Z", "url": "https://files.pythonhosted.org/packages/89/8d/b096d398df77ccccd61672963502573d49fe6c56f9a163c1e2d17b4c638f/modapsclient-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffcba26cadc0679f3717993124166efe", "sha256": "ca17830ec337f5b77418977efc3cc3cea9df7f3c977bed7806e16a168cfbe804"}, "downloads": -1, "filename": "modapsclient-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ffcba26cadc0679f3717993124166efe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11841, "upload_time": "2018-03-28T04:13:40", "upload_time_iso_8601": "2018-03-28T04:13:40.573400Z", "url": "https://files.pythonhosted.org/packages/dd/3c/b238e2bef8c673247005ac7989917be5491e63e7ee93fabe825ac6766a9c/modapsclient-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6bf96b4a4703a4a0fe0bfc25de1cc597", "sha256": "dae23b9d739333095646d03e7e4cc66e8cfbf0503749fd74e99a68572eaaf421"}, "downloads": -1, "filename": "modapsclient-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6bf96b4a4703a4a0fe0bfc25de1cc597", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9251, "upload_time": "2018-03-28T04:13:39", "upload_time_iso_8601": "2018-03-28T04:13:39.363143Z", "url": "https://files.pythonhosted.org/packages/89/8d/b096d398df77ccccd61672963502573d49fe6c56f9a163c1e2d17b4c638f/modapsclient-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ffcba26cadc0679f3717993124166efe", "sha256": "ca17830ec337f5b77418977efc3cc3cea9df7f3c977bed7806e16a168cfbe804"}, "downloads": -1, "filename": "modapsclient-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ffcba26cadc0679f3717993124166efe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11841, "upload_time": "2018-03-28T04:13:40", "upload_time_iso_8601": "2018-03-28T04:13:40.573400Z", "url": "https://files.pythonhosted.org/packages/dd/3c/b238e2bef8c673247005ac7989917be5491e63e7ee93fabe825ac6766a9c/modapsclient-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:58 2020"}