{"info": {"author": "Jakub Tes\u00e1rek", "author_email": "jakub@tesarek.me", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)"], "description": "[![Build Status](https://travis-ci.org/JakubTesarek/kwargs.svg?branch=master)](https://travis-ci.org/JakubTesarek/kwargs)\n\n# Kwargs\nKwargs is the only True python micro-framework that doesn't limit your creativity\u2122.\n\n## Requirments\nYou need [Python >= 3.3](https://travis-ci.org/JakubTesarek/kwargs). You can\nprobably use it with older versions, including Python 2 but our buid dependecies\ndon't work in this version so we are not testing it.\n\n## Installation\nKwargs is self-contained so you can simply copy-paste kwargs.py to your project.\nWe are also working on creating a pypi project. Stay tuned.\n\n## Usage\n### Basic usage\n```python\nfrom kwargs import App\n\ndef my_function():\n\t# implement your app logic\n\treturn\n\napp = App(my_function)\napp.run()\n```\n\n`App(my_function)` initializes Kwargs framework with your app logic. You have to\nimplement this logic yourself. It can do literally anything!\n\nWhen you want to then execute your code, simply call `app.run()`.\n\n### Shorthand usage (for lead developers)\nKwargs framework strifes for short and easy to read code. Therefore it provides you with shorthand execution. \n\n```python\nfrom kwargs import run\n\ndef my_function():\n\t# implement your app logic\n\treturn\n\nrun(my_function)\n```\n\n### Super-short usage (for hackers)\nYou can also skip initialization of Kwargs framework altogether and execute\nthe app logic yourself.\n\n```python\ndef my_function():\n\t# implement your app logic\n\treturn\n\nmy_function()\n```\n\nNotice that you don't have to import Kwargs package anymore. It's because in\nthis example we don't use it at all. Magic!\n\nWe don't recommend using this style as it might be confusing for other developers that are not familiar with Kwargs framework. But heck, sometimes you just need to get job done.\n\n## Contributing\n- Create a branch. Only I can commit to master because it's my repository.\n- Run tests with code coverage `$ py.test --cov=kwargs`\n- Run pylint `$ pylint kwargs tests`\n\n## FAQ\n### Is Kwargs the right framework for my project?\nKwarks is currently the fastest python framework with minimum overhead and it doesn't\nlimit usage of other tools and frameworks. As such it fits projects of all sizes.\nBut it's specially good when you're writing small utility and your manager keeps asking\nwhat framework you use.\n\n### What should do I do when I find a bug?\nBefore you submit pull request or file a ticket, please search Stack Owerflow. We have more then [36.000 answered questions](http://stackoverflow.com/search?q=kwargs) so you might find help there. If you still think, you find a bug, [file a ticket](https://github.com/JakubTesarek/kwargs/issues) or send a pull request.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JakubTesarek/kwargs", "keywords": "framework", "license": "GNU GPL v2", "maintainer": "", "maintainer_email": "", "name": "kwargs", "package_url": "https://pypi.org/project/kwargs/", "platform": "", "project_url": "https://pypi.org/project/kwargs/", "project_urls": {"Homepage": "https://github.com/JakubTesarek/kwargs"}, "release_url": "https://pypi.org/project/kwargs/1.0.1/", "requires_dist": ["pytest ; extra == 'test'", "pylint ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": "", "summary": "Python micro-framework", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            [![Build Status](https://travis-ci.org/JakubTesarek/kwargs.svg?branch=master)](https://travis-ci.org/JakubTesarek/kwargs)<br><br># Kwargs<br>Kwargs is the only True python micro-framework that doesn't limit your creativity\u2122.<br><br>## Requirments<br>You need [Python &gt;= 3.3](https://travis-ci.org/JakubTesarek/kwargs). You can<br>probably use it with older versions, including Python 2 but our buid dependecies<br>don't work in this version so we are not testing it.<br><br>## Installation<br>Kwargs is self-contained so you can simply copy-paste kwargs.py to your project.<br>We are also working on creating a pypi project. Stay tuned.<br><br>## Usage<br>### Basic usage<br>```python<br>from kwargs import App<br><br>def my_function():<br>\t# implement your app logic<br>\treturn<br><br>app = App(my_function)<br>app.run()<br>```<br><br>`App(my_function)` initializes Kwargs framework with your app logic. You have to<br>implement this logic yourself. It can do literally anything!<br><br>When you want to then execute your code, simply call `app.run()`.<br><br>### Shorthand usage (for lead developers)<br>Kwargs framework strifes for short and easy to read code. Therefore it provides you with shorthand execution. <br><br>```python<br>from kwargs import run<br><br>def my_function():<br>\t# implement your app logic<br>\treturn<br><br>run(my_function)<br>```<br><br>### Super-short usage (for hackers)<br>You can also skip initialization of Kwargs framework altogether and execute<br>the app logic yourself.<br><br>```python<br>def my_function():<br>\t# implement your app logic<br>\treturn<br><br>my_function()<br>```<br><br>Notice that you don't have to import Kwargs package anymore. It's because in<br>this example we don't use it at all. Magic!<br><br>We don't recommend using this style as it might be confusing for other developers that are not familiar with Kwargs framework. But heck, sometimes you just need to get job done.<br><br>## Contributing<br>- Create a branch. Only I can commit to master because it's my repository.<br>- Run tests with code coverage `$ py.test --cov=kwargs`<br>- Run pylint `$ pylint kwargs tests`<br><br>## FAQ<br>### Is Kwargs the right framework for my project?<br>Kwarks is currently the fastest python framework with minimum overhead and it doesn't<br>limit usage of other tools and frameworks. As such it fits projects of all sizes.<br>But it's specially good when you're writing small utility and your manager keeps asking<br>what framework you use.<br><br>### What should do I do when I find a bug?<br>Before you submit pull request or file a ticket, please search Stack Owerflow. We have more then [36.000 answered questions](http://stackoverflow.com/search?q=kwargs) so you might find help there. If you still think, you find a bug, [file a ticket](https://github.com/JakubTesarek/kwargs/issues) or send a pull request.<br><br>\n          </div>"}, "last_serial": 5137576, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "aa14577bdcf22a66dd5d6a9cab27d1d1", "sha256": "f553495d7dfc7b9ec335d572d93ce723cc6de4917a5d135cbc84c2d772b7139f"}, "downloads": -1, "filename": "kwargs-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aa14577bdcf22a66dd5d6a9cab27d1d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4078, "upload_time": "2019-04-13T08:37:21", "upload_time_iso_8601": "2019-04-13T08:37:21.544143Z", "url": "https://files.pythonhosted.org/packages/f9/4c/cff11f0629f389ef6d9facb840efee7cfbca89d9c109f1877698c329eb6a/kwargs-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05cc550fa4106b45ef72836c170cca82", "sha256": "2557e7b3e3c9317fb64079c06664a5f1ce9be342e04ee295375d91eef63a5e31"}, "downloads": -1, "filename": "kwargs-1.0.1.tar.gz", "has_sig": false, "md5_digest": "05cc550fa4106b45ef72836c170cca82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3115, "upload_time": "2019-04-13T08:37:23", "upload_time_iso_8601": "2019-04-13T08:37:23.656055Z", "url": "https://files.pythonhosted.org/packages/a8/44/5fd035ac92d603b2cc6d067ab3b64a1447c3f1545b0aa6020d53aba8e11c/kwargs-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa14577bdcf22a66dd5d6a9cab27d1d1", "sha256": "f553495d7dfc7b9ec335d572d93ce723cc6de4917a5d135cbc84c2d772b7139f"}, "downloads": -1, "filename": "kwargs-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aa14577bdcf22a66dd5d6a9cab27d1d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4078, "upload_time": "2019-04-13T08:37:21", "upload_time_iso_8601": "2019-04-13T08:37:21.544143Z", "url": "https://files.pythonhosted.org/packages/f9/4c/cff11f0629f389ef6d9facb840efee7cfbca89d9c109f1877698c329eb6a/kwargs-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05cc550fa4106b45ef72836c170cca82", "sha256": "2557e7b3e3c9317fb64079c06664a5f1ce9be342e04ee295375d91eef63a5e31"}, "downloads": -1, "filename": "kwargs-1.0.1.tar.gz", "has_sig": false, "md5_digest": "05cc550fa4106b45ef72836c170cca82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3115, "upload_time": "2019-04-13T08:37:23", "upload_time_iso_8601": "2019-04-13T08:37:23.656055Z", "url": "https://files.pythonhosted.org/packages/a8/44/5fd035ac92d603b2cc6d067ab3b64a1447c3f1545b0aa6020d53aba8e11c/kwargs-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:30 2020"}