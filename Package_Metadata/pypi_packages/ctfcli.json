{"info": {"author": "Kevin Chung", "author_email": "kchung@ctfd.io", "bugtrack_url": null, "classifiers": [], "description": "# ctfcli\n\n*ctfcli is a tool to manage Capture The Flag events and challenges.*\n\n`ctfcli` provides challenge specifications and templates to make it easier to generate challenges of different categories. It also provides an integration with the [CTFd](https://github.com/CTFd/CTFd/) REST API to allow for command line uploading of challenges and integration with CI/CD build systems.\n\n`ctfcli` features tab completion, a REPL interface (thanks to [Python-Fire](https://github.com/google/python-fire)) and plugin support for custom commands.\n\n*WIP: ctfcli is an alpha project and changes will happen. Be sure to pin versions and read the CHANGELOG when updating.*\n\n# Installation and Usage\n\nctfcli can be installed with `pip install ctfcli`\n\n## 1. Create an Event\n\nctfcli turns the current folder into a CTF event git repo. It asks for the base url of the CTFd instance you're working with and an access token.\n\n```\n\u276f ctf init\nPlease enter CTFd instance URL: https://demo.ctfd.io\nPlease enter CTFd Admin Access Token: d41d8cd98f00b204e9800998ecf8427e\nDo you want to continue with https://demo.ctfd.io and d41d8cd98f00b204e9800998ecf8427e [y/N]: y\nInitialized empty Git repository in /Users/user/Downloads/event/.git/\n```\n\nThis will create the `.ctf` folder with the `config` file that will specify the URL, access token, and keep a record of all the challenges dedicated for this event.\n\n## 2. Add challenges\n\nEvents are made up of challenges. Challenges can be made from a subdirectory or pulled from another repository. Remote challenges are pulled into the event repo and a reference is kept in the `.ctf/config` file.\n\n```\n\u276f ctf challenge add [REPO | FOLDER]\n```\n\n```\n\u276f ctf challenge add crypto/stuff\n```\n\n```\n\u276f ctf challenge add https://github.com/challenge.git\nchallenge\nCloning into 'challenge'...\nremote: Enumerating objects: 624, done.\nremote: Counting objects: 100% (624/624), done.\nremote: Compressing objects: 100% (540/540), done.\nremote: Total 624 (delta 109), reused 335 (delta 45), pack-reused 0\nReceiving objects: 100% (624/624), 6.49 MiB | 21.31 MiB/s, done.\nResolving deltas: 100% (109/109), done.\n```\n\n## 3. Install challenges\n\nInstalling a challenge will automatically create the challenge in your CTFd instance using the API.\n\n```\n\u276f ctf challenge install [challenge.yml | DIRECTORY]\n```\n\n```\n\u276f ctf challenge install buffer_overflow\nFound buffer_overflow/challenge.yml\nLoaded buffer_overflow\nInstalling buffer_overflow\nSuccess!\n```\n\n## 4. Update challenges\n\nSyncing a challenge will automatically update the challenge in your CTFd instance using the API. Any changes made in the `challenge.yml` file will be reflected in your instance.\n\n```\n\u276f ctf challenge sync [challenge.yml | DIRECTORY]\n```\n\n```\n\u276f ctf challenge sync buffer_overflow\nFound buffer_overflow/challenge.yml\nLoaded buffer_overflow\nSyncing buffer_overflow\nSuccess!\n```\n\n# Challenge Templates\n\n`ctfcli` contains pre-made challenge templates to make it faster to create CTF challenges with safe defaults.\n\n```\nctf challenge new\n                \u251c\u2500\u2500 binary\n                \u251c\u2500\u2500 crypto\n                \u251c\u2500\u2500 programming\n                \u2514\u2500\u2500 web\n```\n\n```\n\u276f ctf challenge new binary\n/Users/user/.virtualenvs/ctfcli/lib/python3.7/site-packages/ctfcli-0.0.1-py3.7.egg/ctfcli/templates/binary/default\nname [Hello]: buffer_overflow\n\n\u276f ls -1 buffer_overflow\nMakefile\nREADME.md\nWRITEUP.md\nchallenge.yml\ndist/\nsrc/\n```\n\n**Contributions welcome on improving the challenge templates to make CTF challenges better for everyone!**\n\n# Challenge Specification\n\n`ctfcli` provides a [challenge specification](ctfcli/spec/challenge-example.yml) (`challenge.yml`) that outlines the major details of a challenge.\n\nEvery challenge generated by or processed by `ctfcli` should have a `challenge.yml` file.\n\nThe specification format has already been tested and used with CTFd in production events but comments, suggestions, and PRs are welcome on the format of `challenge.yml`.\n\n# Plugins\n\n`ctfcli` plugins are essentially additions to to the command line interface via dynamic class modifications. See the [plugin documentation page](docs/plugins.md) for a simple example.\n\n*`ctfcli` is an alpha project! The plugin interface is likely to change!*\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "ctf", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "ctfcli", "package_url": "https://pypi.org/project/ctfcli/", "platform": "", "project_url": "https://pypi.org/project/ctfcli/", "project_urls": null, "release_url": "https://pypi.org/project/ctfcli/0.0.3/", "requires_dist": ["cookiecutter (==1.6.0)", "click (==7.0)", "fire (==0.2.1)", "pyyaml (==5.2)", "Pygments (==2.5.2)", "requests (==2.22.0)", "colorama (==0.4.3)", "appdirs (==1.4.3)"], "requires_python": "", "summary": "Tool for creating and running Capture The Flag competitions", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ctfcli</h1>\n<p><em>ctfcli is a tool to manage Capture The Flag events and challenges.</em></p>\n<p><code>ctfcli</code> provides challenge specifications and templates to make it easier to generate challenges of different categories. It also provides an integration with the <a href=\"https://github.com/CTFd/CTFd/\" rel=\"nofollow\">CTFd</a> REST API to allow for command line uploading of challenges and integration with CI/CD build systems.</p>\n<p><code>ctfcli</code> features tab completion, a REPL interface (thanks to <a href=\"https://github.com/google/python-fire\" rel=\"nofollow\">Python-Fire</a>) and plugin support for custom commands.</p>\n<p><em>WIP: ctfcli is an alpha project and changes will happen. Be sure to pin versions and read the CHANGELOG when updating.</em></p>\n<h1>Installation and Usage</h1>\n<p>ctfcli can be installed with <code>pip install ctfcli</code></p>\n<h2>1. Create an Event</h2>\n<p>ctfcli turns the current folder into a CTF event git repo. It asks for the base url of the CTFd instance you're working with and an access token.</p>\n<pre><code>\u276f ctf init\nPlease enter CTFd instance URL: https://demo.ctfd.io\nPlease enter CTFd Admin Access Token: d41d8cd98f00b204e9800998ecf8427e\nDo you want to continue with https://demo.ctfd.io and d41d8cd98f00b204e9800998ecf8427e [y/N]: y\nInitialized empty Git repository in /Users/user/Downloads/event/.git/\n</code></pre>\n<p>This will create the <code>.ctf</code> folder with the <code>config</code> file that will specify the URL, access token, and keep a record of all the challenges dedicated for this event.</p>\n<h2>2. Add challenges</h2>\n<p>Events are made up of challenges. Challenges can be made from a subdirectory or pulled from another repository. Remote challenges are pulled into the event repo and a reference is kept in the <code>.ctf/config</code> file.</p>\n<pre><code>\u276f ctf challenge add [REPO | FOLDER]\n</code></pre>\n<pre><code>\u276f ctf challenge add crypto/stuff\n</code></pre>\n<pre><code>\u276f ctf challenge add https://github.com/challenge.git\nchallenge\nCloning into 'challenge'...\nremote: Enumerating objects: 624, done.\nremote: Counting objects: 100% (624/624), done.\nremote: Compressing objects: 100% (540/540), done.\nremote: Total 624 (delta 109), reused 335 (delta 45), pack-reused 0\nReceiving objects: 100% (624/624), 6.49 MiB | 21.31 MiB/s, done.\nResolving deltas: 100% (109/109), done.\n</code></pre>\n<h2>3. Install challenges</h2>\n<p>Installing a challenge will automatically create the challenge in your CTFd instance using the API.</p>\n<pre><code>\u276f ctf challenge install [challenge.yml | DIRECTORY]\n</code></pre>\n<pre><code>\u276f ctf challenge install buffer_overflow\nFound buffer_overflow/challenge.yml\nLoaded buffer_overflow\nInstalling buffer_overflow\nSuccess!\n</code></pre>\n<h2>4. Update challenges</h2>\n<p>Syncing a challenge will automatically update the challenge in your CTFd instance using the API. Any changes made in the <code>challenge.yml</code> file will be reflected in your instance.</p>\n<pre><code>\u276f ctf challenge sync [challenge.yml | DIRECTORY]\n</code></pre>\n<pre><code>\u276f ctf challenge sync buffer_overflow\nFound buffer_overflow/challenge.yml\nLoaded buffer_overflow\nSyncing buffer_overflow\nSuccess!\n</code></pre>\n<h1>Challenge Templates</h1>\n<p><code>ctfcli</code> contains pre-made challenge templates to make it faster to create CTF challenges with safe defaults.</p>\n<pre><code>ctf challenge new\n                \u251c\u2500\u2500 binary\n                \u251c\u2500\u2500 crypto\n                \u251c\u2500\u2500 programming\n                \u2514\u2500\u2500 web\n</code></pre>\n<pre><code>\u276f ctf challenge new binary\n/Users/user/.virtualenvs/ctfcli/lib/python3.7/site-packages/ctfcli-0.0.1-py3.7.egg/ctfcli/templates/binary/default\nname [Hello]: buffer_overflow\n\n\u276f ls -1 buffer_overflow\nMakefile\nREADME.md\nWRITEUP.md\nchallenge.yml\ndist/\nsrc/\n</code></pre>\n<p><strong>Contributions welcome on improving the challenge templates to make CTF challenges better for everyone!</strong></p>\n<h1>Challenge Specification</h1>\n<p><code>ctfcli</code> provides a <a href=\"ctfcli/spec/challenge-example.yml\" rel=\"nofollow\">challenge specification</a> (<code>challenge.yml</code>) that outlines the major details of a challenge.</p>\n<p>Every challenge generated by or processed by <code>ctfcli</code> should have a <code>challenge.yml</code> file.</p>\n<p>The specification format has already been tested and used with CTFd in production events but comments, suggestions, and PRs are welcome on the format of <code>challenge.yml</code>.</p>\n<h1>Plugins</h1>\n<p><code>ctfcli</code> plugins are essentially additions to to the command line interface via dynamic class modifications. See the <a href=\"docs/plugins.md\" rel=\"nofollow\">plugin documentation page</a> for a simple example.</p>\n<p><em><code>ctfcli</code> is an alpha project! The plugin interface is likely to change!</em></p>\n\n          </div>"}, "last_serial": 6988433, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4cc69f851f862e4b1ad6909e9e0e9cdb", "sha256": "63b0b13bb47d6f60a89e9f2a04ef18dc399c0d272329fd9630eb4470d6a92817"}, "downloads": -1, "filename": "ctfcli-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4cc69f851f862e4b1ad6909e9e0e9cdb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1204, "upload_time": "2020-01-03T00:33:38", "upload_time_iso_8601": "2020-01-03T00:33:38.221240Z", "url": "https://files.pythonhosted.org/packages/28/dc/82a5cb520478c613f26b357740a4bf5e1aadd38999435ec00b96af1097d8/ctfcli-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e30759299f039cae6987fa7291435716", "sha256": "1da498552bee1d849300831eb9fc857c0d7529ba3cdc321c35facdae5f0c0258"}, "downloads": -1, "filename": "ctfcli-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e30759299f039cae6987fa7291435716", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 817, "upload_time": "2020-01-03T00:33:40", "upload_time_iso_8601": "2020-01-03T00:33:40.510852Z", "url": "https://files.pythonhosted.org/packages/9e/51/cf3152130c2be1b73121acf5a6a9d1a7706eda3bba4ec28c0f90f650f2e5/ctfcli-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "dd81be7e86847d582c1924934b32f8d7", "sha256": "b364ebfdf53f3430cfa15655d4f0c918efef686378c2d2446f41739cd95ee132"}, "downloads": -1, "filename": "ctfcli-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dd81be7e86847d582c1924934b32f8d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30384, "upload_time": "2020-04-02T16:35:33", "upload_time_iso_8601": "2020-04-02T16:35:33.737991Z", "url": "https://files.pythonhosted.org/packages/a2/8b/f18435457d6a38cd0597f98c25cb6ee65c26b0ed49de1bd3181f505656c1/ctfcli-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "350d84fa7c692db65da5a35862137113", "sha256": "daa46db9227524159c0d078b85b20e483796b71182364a59a39bf38c09bace8c"}, "downloads": -1, "filename": "ctfcli-0.0.2.tar.gz", "has_sig": false, "md5_digest": "350d84fa7c692db65da5a35862137113", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17424, "upload_time": "2020-04-02T16:35:34", "upload_time_iso_8601": "2020-04-02T16:35:34.671684Z", "url": "https://files.pythonhosted.org/packages/2f/78/7b4a992fc2fd58c860833a4a47b4432b09a39c63cd2ce9c1bf7586dc026b/ctfcli-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2ce3a3726fc993df0a63b081b84a3840", "sha256": "7451568325ec4aa81c4a32ce838944434e6a49d665a8f0c9ee02bdab8cae25d9"}, "downloads": -1, "filename": "ctfcli-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2ce3a3726fc993df0a63b081b84a3840", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29938, "upload_time": "2020-04-09T18:35:41", "upload_time_iso_8601": "2020-04-09T18:35:41.146788Z", "url": "https://files.pythonhosted.org/packages/74/52/ac9e22de235688e3a48ab8cc47352e5ea00f878320d4770b710025145e56/ctfcli-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec73998817f98f995921798e102e201c", "sha256": "7c62a8590f3cc63c0d1fff94b30e414cb36697dcdb3e767503b51b180b2bf98a"}, "downloads": -1, "filename": "ctfcli-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ec73998817f98f995921798e102e201c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17350, "upload_time": "2020-04-09T18:35:42", "upload_time_iso_8601": "2020-04-09T18:35:42.446030Z", "url": "https://files.pythonhosted.org/packages/f8/a3/8a643c15f74d9f747d6bf19fcce5aceeb23be96889c1119a69b5c7680bd0/ctfcli-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ce3a3726fc993df0a63b081b84a3840", "sha256": "7451568325ec4aa81c4a32ce838944434e6a49d665a8f0c9ee02bdab8cae25d9"}, "downloads": -1, "filename": "ctfcli-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2ce3a3726fc993df0a63b081b84a3840", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29938, "upload_time": "2020-04-09T18:35:41", "upload_time_iso_8601": "2020-04-09T18:35:41.146788Z", "url": "https://files.pythonhosted.org/packages/74/52/ac9e22de235688e3a48ab8cc47352e5ea00f878320d4770b710025145e56/ctfcli-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec73998817f98f995921798e102e201c", "sha256": "7c62a8590f3cc63c0d1fff94b30e414cb36697dcdb3e767503b51b180b2bf98a"}, "downloads": -1, "filename": "ctfcli-0.0.3.tar.gz", "has_sig": false, "md5_digest": "ec73998817f98f995921798e102e201c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17350, "upload_time": "2020-04-09T18:35:42", "upload_time_iso_8601": "2020-04-09T18:35:42.446030Z", "url": "https://files.pythonhosted.org/packages/f8/a3/8a643c15f74d9f747d6bf19fcce5aceeb23be96889c1119a69b5c7680bd0/ctfcli-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:37 2020"}