{"info": {"author": "aitormf", "author_email": "aitor.martinez.fernandez@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Config With YAML\n\nConfig With YAML is a pure-Python package to load config YAML files.\n\n```python\nimport config_with_yaml as config\n\ncfg = config.load(\"demo.yml\")\n\nprint (cfg.getProperty(\"Demo.Motors.Server\"))\nprint (cfg.getPropertyWithDefault(\"Demo.Motors.Server2\", \"Server2\"))\nprint (cfg)\n```\nConfig file content:\n```\nDemo:\n  Motors:\n    Server: ROS # Deactivate, Ice , ROS\n    Proxy: Motors:default -h localhost -p 9001\n    Topic: '/turtlebotROS/mobile_base/commands/velocity'\n    Name: basic_component_pyCamera\n    maxW: 0.7\n    maxV: 4\n\n  Camera:\n    Server: ROS # Deactivate, Ice , ROS\n    Proxy: \"CameraL:default -h localhost -p 9001\"\n    Format: RGB8\n    Topic: \"/TurtlebotROS/cameraL/image_raw\"\n    Name: basic_component_pyCamera\n\n  NodeName: demo\n```\n\nOutput:\n```\nloading Config file ./demo.yml\nROS\nServer2\nDemo:\n  Camera:\n    Format: RGB8\n    Name: basic_component_pyCamera\n    Proxy: CameraL:default -h localhost -p 9001\n    Server: ROS\n    Topic: /TurtlebotROS/cameraL/image_raw\n  Motors:\n    Name: basic_component_pyCamera\n    Proxy: Motors:default -h localhost -p 9001\n    Server: ROS\n    Topic: /turtlebotROS/mobile_base/commands/velocity\n    maxV: 4\n    maxW: 0.7\n  NodeName: demo\n```\n\n## Extra Configuration\n\nby default config_with_yaml uses the path to the file that is passed to it, but if you have all the cofiguration files in directory or several, you can set the value of the environment variable **\"YAML_CONFIG_PATHS\"** with these files separated by *:*, so just put the file name is able to find it.\n\n```shell\nexport YAML_CONFIG_PATHS=path/to/folder1:path/to/folder2\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aitormf/config_with_yaml", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "config-with-yaml", "package_url": "https://pypi.org/project/config-with-yaml/", "platform": "", "project_url": "https://pypi.org/project/config-with-yaml/", "project_urls": {"Homepage": "https://github.com/aitormf/config_with_yaml"}, "release_url": "https://pypi.org/project/config-with-yaml/0.1.0/", "requires_dist": ["PyYAML"], "requires_python": ">=3.6", "summary": "Loads configurations from yaml files", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Config With YAML</h1>\n<p>Config With YAML is a pure-Python package to load config YAML files.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">config_with_yaml</span> <span class=\"k\">as</span> <span class=\"nn\">config</span>\n\n<span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"demo.yml\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">getProperty</span><span class=\"p\">(</span><span class=\"s2\">\"Demo.Motors.Server\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">getPropertyWithDefault</span><span class=\"p\">(</span><span class=\"s2\">\"Demo.Motors.Server2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Server2\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">cfg</span><span class=\"p\">)</span>\n</pre>\n<p>Config file content:</p>\n<pre><code>Demo:\n  Motors:\n    Server: ROS # Deactivate, Ice , ROS\n    Proxy: Motors:default -h localhost -p 9001\n    Topic: '/turtlebotROS/mobile_base/commands/velocity'\n    Name: basic_component_pyCamera\n    maxW: 0.7\n    maxV: 4\n\n  Camera:\n    Server: ROS # Deactivate, Ice , ROS\n    Proxy: \"CameraL:default -h localhost -p 9001\"\n    Format: RGB8\n    Topic: \"/TurtlebotROS/cameraL/image_raw\"\n    Name: basic_component_pyCamera\n\n  NodeName: demo\n</code></pre>\n<p>Output:</p>\n<pre><code>loading Config file ./demo.yml\nROS\nServer2\nDemo:\n  Camera:\n    Format: RGB8\n    Name: basic_component_pyCamera\n    Proxy: CameraL:default -h localhost -p 9001\n    Server: ROS\n    Topic: /TurtlebotROS/cameraL/image_raw\n  Motors:\n    Name: basic_component_pyCamera\n    Proxy: Motors:default -h localhost -p 9001\n    Server: ROS\n    Topic: /turtlebotROS/mobile_base/commands/velocity\n    maxV: 4\n    maxW: 0.7\n  NodeName: demo\n</code></pre>\n<h2>Extra Configuration</h2>\n<p>by default config_with_yaml uses the path to the file that is passed to it, but if you have all the cofiguration files in directory or several, you can set the value of the environment variable <strong>\"YAML_CONFIG_PATHS\"</strong> with these files separated by <em>:</em>, so just put the file name is able to find it.</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">YAML_CONFIG_PATHS</span><span class=\"o\">=</span>path/to/folder1:path/to/folder2\n</pre>\n\n          </div>"}, "last_serial": 5865750, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fbf279ba8af76f09f506222c19d42634", "sha256": "296924d3fd17ecc98e3d9870d8c6e2874f78be07e54e3f94e6890f865e027604"}, "downloads": -1, "filename": "config_with_yaml-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fbf279ba8af76f09f506222c19d42634", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15710, "upload_time": "2019-09-21T10:45:48", "upload_time_iso_8601": "2019-09-21T10:45:48.849445Z", "url": "https://files.pythonhosted.org/packages/78/b7/c2a2aecb20675ed3f104e71aa3ba41db7e0238a4c3ecaf3385eff8a27cdd/config_with_yaml-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1db2b98bf0654b71b01b73de1338a3a7", "sha256": "f358b9c8f3a2ec0742ecbd3d30712cea4a195f36ac7a764f64ac08371cca16e0"}, "downloads": -1, "filename": "config_with_yaml-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1db2b98bf0654b71b01b73de1338a3a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2845, "upload_time": "2019-09-21T10:45:51", "upload_time_iso_8601": "2019-09-21T10:45:51.404788Z", "url": "https://files.pythonhosted.org/packages/93/40/7229e9ef6431d54dd5d9f70c5a59bd1ddcfa052192f757a37833b246ae1b/config_with_yaml-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fbf279ba8af76f09f506222c19d42634", "sha256": "296924d3fd17ecc98e3d9870d8c6e2874f78be07e54e3f94e6890f865e027604"}, "downloads": -1, "filename": "config_with_yaml-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fbf279ba8af76f09f506222c19d42634", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15710, "upload_time": "2019-09-21T10:45:48", "upload_time_iso_8601": "2019-09-21T10:45:48.849445Z", "url": "https://files.pythonhosted.org/packages/78/b7/c2a2aecb20675ed3f104e71aa3ba41db7e0238a4c3ecaf3385eff8a27cdd/config_with_yaml-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1db2b98bf0654b71b01b73de1338a3a7", "sha256": "f358b9c8f3a2ec0742ecbd3d30712cea4a195f36ac7a764f64ac08371cca16e0"}, "downloads": -1, "filename": "config_with_yaml-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1db2b98bf0654b71b01b73de1338a3a7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2845, "upload_time": "2019-09-21T10:45:51", "upload_time_iso_8601": "2019-09-21T10:45:51.404788Z", "url": "https://files.pythonhosted.org/packages/93/40/7229e9ef6431d54dd5d9f70c5a59bd1ddcfa052192f757a37833b246ae1b/config_with_yaml-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:51 2020"}