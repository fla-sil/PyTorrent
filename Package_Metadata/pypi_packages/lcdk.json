{"info": {"author": "John M. Cook", "author_email": "jmcook1982@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Leslie Chow Debug Kit\n\n## Installation\n`pip install lcdk`\n\n\n## Usage\n`from lcdk.lcdk import lcdk as LeslieChow`\n\n`DBG=LeslieChow.lcdk()`\n\n`DBG.log(\"{}\".format(\"MESSAGE FROM DEBUG\"))`\n\n`DBG.lt_green(\"{}\".format(\"MESSAGE FROM DEBUG\"))`\n\n## Further Help\n\nHelp on module lcdk.lcdk in lcdk:\n\nNAME\n    lcdk.lcdk\n\nFILE\n   lcdk/lcdk/lcdk.py\n\nCLASSES\n    __builtin__.object\n        Message\n    lcdk\n    logging.LoggerAdapter(__builtin__.object)\n        StyleAdapter\n\n    class Message(__builtin__.object)\n     |  Methods defined here:\n     |  \n     |  __init__(self, fmt, *args, **kwargs)\n     |  \n     |  __str__(self)\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data descriptors defined here:\n     |  \n     |  __dict__\n     |      dictionary for instance variables (if defined)\n     |  \n     |  __weakref__\n     |      list of weak references to the object (if defined)\n\n    class StyleAdapter(logging.LoggerAdapter)\n     |  Method resolution order:\n     |      StyleAdapter\n     |      logging.LoggerAdapter\n     |      __builtin__.object\n     |  \n     |  Methods defined here:\n     |  \n     |  __init__(self, logger, extra=None)\n     |  \n     |  color_log(self, level, msg, color, *args, **kwargs)\n     |  \n     |  error(self, level, msg, *args, **kwargs)\n     |  \n     |  log(self, level, msg, *args, **kwargs)\n     |  \n     |  warning(self, level, msg, *args, **kwargs)\n     |  \n     |  ----------------------------------------------------------------------\n     |  Methods inherited from logging.LoggerAdapter:\n     |  \n     |  critical(self, msg, *args, **kwargs)\n     |      Delegate a critical call to the underlying logger, after adding\n     |      contextual information from this adapter instance.\n     |  \n     |  debug(self, msg, *args, **kwargs)\n     |      Delegate a debug call to the underlying logger, after adding\n     |      contextual information from this adapter instance.\n     |  \n     |  exception(self, msg, *args, **kwargs)\n     |      Delegate an exception call to the underlying logger, after adding\n     |      contextual information from this adapter instance.\n     |  \n     |  info(self, msg, *args, **kwargs)\n     |      Delegate an info call to the underlying logger, after adding\n     |      contextual information from this adapter instance.\n     |  \n     |  isEnabledFor(self, level)\n     |      See if the underlying logger is enabled for the specified level.\n     |  \n     |  process(self, msg, kwargs)\n     |      Process the logging message and keyword arguments passed in to\n     |      a logging call to insert contextual information. You can either\n     |      manipulate the message itself, the keyword args or both. Return\n     |      the message and kwargs modified (or not) to suit your needs.\n     |      \n     |      Normally, you'll only need to override this one method in a\n     |      LoggerAdapter subclass for your specific needs.\n     |  \n     |  ----------------------------------------------------------------------\n     |  Data descriptors inherited from logging.LoggerAdapter:\n     |  \n     |  __dict__\n     |      dictionary for instance variables (if defined)\n     |  \n     |  __weakref__\n     |      list of weak references to the object (if defined)\n\n    class lcdk\n     |  Methods defined here:\n     |  \n     |  __init__(self, **kwargs)\n     |  \n     |  error(self, errorMsg)\n     |  \n     |  getFormat(self, msg='', level='INFO')\n     |  \n     |  getLogLevel(self, level)\n     |  \n     |  log(self, msg, level='INFO')\n     |  \n     |  lt_cyan(self, msg, level='WARNING')\n     |  \n     |  lt_green(self, msg, level='WARNING')\n     |  \n     |  lt_purple(self, msg, level='WARNING')\n     |  \n     |  purple(self, msg, level='WARNING')\n     |  \n     |  red(self, msg, level='WARNING')\n     |  \n     |  trace(self, frame, event, arg='')\n     |  \n     |  warning(self, msg, level='WARNING')\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/senorChow/lcdk.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lcdk", "package_url": "https://pypi.org/project/lcdk/", "platform": "", "project_url": "https://pypi.org/project/lcdk/", "project_urls": {"Homepage": "https://github.com/senorChow/lcdk.git"}, "release_url": "https://pypi.org/project/lcdk/0.3/", "requires_dist": null, "requires_python": "", "summary": "Leslie Chow Debug Kit", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Leslie Chow Debug Kit</h1>\n<h2>Installation</h2>\n<p><code>pip install lcdk</code></p>\n<h2>Usage</h2>\n<p><code>from lcdk.lcdk import lcdk as LeslieChow</code></p>\n<p><code>DBG=LeslieChow.lcdk()</code></p>\n<p><code>DBG.log(\"{}\".format(\"MESSAGE FROM DEBUG\"))</code></p>\n<p><code>DBG.lt_green(\"{}\".format(\"MESSAGE FROM DEBUG\"))</code></p>\n<h2>Further Help</h2>\n<p>Help on module lcdk.lcdk in lcdk:</p>\n<p>NAME\nlcdk.lcdk</p>\n<p>FILE\nlcdk/lcdk/lcdk.py</p>\n<p>CLASSES\n<strong>builtin</strong>.object\nMessage\nlcdk\nlogging.LoggerAdapter(<strong>builtin</strong>.object)\nStyleAdapter</p>\n<pre><code>class Message(__builtin__.object)\n |  Methods defined here:\n |  \n |  __init__(self, fmt, *args, **kwargs)\n |  \n |  __str__(self)\n |  \n |  ----------------------------------------------------------------------\n |  Data descriptors defined here:\n |  \n |  __dict__\n |      dictionary for instance variables (if defined)\n |  \n |  __weakref__\n |      list of weak references to the object (if defined)\n\nclass StyleAdapter(logging.LoggerAdapter)\n |  Method resolution order:\n |      StyleAdapter\n |      logging.LoggerAdapter\n |      __builtin__.object\n |  \n |  Methods defined here:\n |  \n |  __init__(self, logger, extra=None)\n |  \n |  color_log(self, level, msg, color, *args, **kwargs)\n |  \n |  error(self, level, msg, *args, **kwargs)\n |  \n |  log(self, level, msg, *args, **kwargs)\n |  \n |  warning(self, level, msg, *args, **kwargs)\n |  \n |  ----------------------------------------------------------------------\n |  Methods inherited from logging.LoggerAdapter:\n |  \n |  critical(self, msg, *args, **kwargs)\n |      Delegate a critical call to the underlying logger, after adding\n |      contextual information from this adapter instance.\n |  \n |  debug(self, msg, *args, **kwargs)\n |      Delegate a debug call to the underlying logger, after adding\n |      contextual information from this adapter instance.\n |  \n |  exception(self, msg, *args, **kwargs)\n |      Delegate an exception call to the underlying logger, after adding\n |      contextual information from this adapter instance.\n |  \n |  info(self, msg, *args, **kwargs)\n |      Delegate an info call to the underlying logger, after adding\n |      contextual information from this adapter instance.\n |  \n |  isEnabledFor(self, level)\n |      See if the underlying logger is enabled for the specified level.\n |  \n |  process(self, msg, kwargs)\n |      Process the logging message and keyword arguments passed in to\n |      a logging call to insert contextual information. You can either\n |      manipulate the message itself, the keyword args or both. Return\n |      the message and kwargs modified (or not) to suit your needs.\n |      \n |      Normally, you'll only need to override this one method in a\n |      LoggerAdapter subclass for your specific needs.\n |  \n |  ----------------------------------------------------------------------\n |  Data descriptors inherited from logging.LoggerAdapter:\n |  \n |  __dict__\n |      dictionary for instance variables (if defined)\n |  \n |  __weakref__\n |      list of weak references to the object (if defined)\n\nclass lcdk\n |  Methods defined here:\n |  \n |  __init__(self, **kwargs)\n |  \n |  error(self, errorMsg)\n |  \n |  getFormat(self, msg='', level='INFO')\n |  \n |  getLogLevel(self, level)\n |  \n |  log(self, msg, level='INFO')\n |  \n |  lt_cyan(self, msg, level='WARNING')\n |  \n |  lt_green(self, msg, level='WARNING')\n |  \n |  lt_purple(self, msg, level='WARNING')\n |  \n |  purple(self, msg, level='WARNING')\n |  \n |  red(self, msg, level='WARNING')\n |  \n |  trace(self, frame, event, arg='')\n |  \n |  warning(self, msg, level='WARNING')\n</code></pre>\n\n          </div>"}, "last_serial": 5919260, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3d8220e6ecbf81d9b47eb3355d267e9d", "sha256": "e246e2686dd15833f241893fc03935a1d48243510cc937c6bc4422c91a21176c"}, "downloads": -1, "filename": "lcdk-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3d8220e6ecbf81d9b47eb3355d267e9d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3213, "upload_time": "2019-10-02T15:49:39", "upload_time_iso_8601": "2019-10-02T15:49:39.504653Z", "url": "https://files.pythonhosted.org/packages/e2/6b/cc67ff2d05291f15b32454330789d722062f2c990414e7032bbffdb6ef46/lcdk-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "666293adbd4ad66d357b9f804a69d08b", "sha256": "f5d640f5cc07f0528a711ef123d35d1a77c6c8c25c7b6bd7dc2f03057aceb59c"}, "downloads": -1, "filename": "lcdk-0.1.tar.gz", "has_sig": false, "md5_digest": "666293adbd4ad66d357b9f804a69d08b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2879, "upload_time": "2019-10-02T15:49:47", "upload_time_iso_8601": "2019-10-02T15:49:47.662795Z", "url": "https://files.pythonhosted.org/packages/6f/dd/5c94d300b40e8b0457763ef00fcac10cfb874d0d75f99202c3e69d3fd39f/lcdk-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "3242ac6f757077547aac58b53426cf72", "sha256": "d757b79e3b8b679a3a46b8fce2d1aeb0295d5e6a9b4be16cf2e09c43904e4769"}, "downloads": -1, "filename": "lcdk-0.2-py3.7.egg", "has_sig": false, "md5_digest": "3242ac6f757077547aac58b53426cf72", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 7368, "upload_time": "2019-10-02T17:29:50", "upload_time_iso_8601": "2019-10-02T17:29:50.654471Z", "url": "https://files.pythonhosted.org/packages/0a/43/978b3185e29e1c74e5cc5477532c5560e8b2254b4fe70b752ee1a31fced7/lcdk-0.2-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "84e1358193fbca1bbe5a56cc27974b99", "sha256": "efc0fff97fd7b6a5a591a2ab8cfa82856c987d1a67857cdc1c55c144018f211f"}, "downloads": -1, "filename": "lcdk-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "84e1358193fbca1bbe5a56cc27974b99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4173, "upload_time": "2019-10-02T17:29:49", "upload_time_iso_8601": "2019-10-02T17:29:49.614261Z", "url": "https://files.pythonhosted.org/packages/db/ac/24657975ee2bb4adc7629aa0bc0f88887ad26c6125c4b77a9fbfb2dacf20/lcdk-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93b733d1616facee6ae817ce8ae7d18c", "sha256": "708831ac020baa2b5888ae51546844e2eee73efd899bd515f6b7c2a75025bdbf"}, "downloads": -1, "filename": "lcdk-0.2.tar.gz", "has_sig": false, "md5_digest": "93b733d1616facee6ae817ce8ae7d18c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4051, "upload_time": "2019-10-02T17:29:51", "upload_time_iso_8601": "2019-10-02T17:29:51.866777Z", "url": "https://files.pythonhosted.org/packages/78/35/c60e8d670ed717ff917e632f5b878ba14acb94d75798d768e50acd6ed2f4/lcdk-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2ea0c94abcf9373454e9899f80626564", "sha256": "218265172a00eacae220a9d384e199f263b1011d5398d14a5453cfd2792ce3a1"}, "downloads": -1, "filename": "lcdk-0.3-py3.7.egg", "has_sig": false, "md5_digest": "2ea0c94abcf9373454e9899f80626564", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 7444, "upload_time": "2019-10-02T17:37:51", "upload_time_iso_8601": "2019-10-02T17:37:51.814783Z", "url": "https://files.pythonhosted.org/packages/39/c3/2575aea9e0bac64a827fed0c41a318d4bf658d98fa941a7090d452c605f6/lcdk-0.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "878955518ccd0c8949ed57ce7243de72", "sha256": "8accfa03feaf6c8e1ce7d0f561a61ecb1de49cd28b70afa244f1e1edfd6fcc86"}, "downloads": -1, "filename": "lcdk-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "878955518ccd0c8949ed57ce7243de72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5049, "upload_time": "2019-10-02T17:37:49", "upload_time_iso_8601": "2019-10-02T17:37:49.071039Z", "url": "https://files.pythonhosted.org/packages/8d/05/1dbfdb1ffb2fe3d518aa8adf4631d02b6214e2e2cc26cc4ccf4bb43533a7/lcdk-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "425b40d02f6504d76767c0f17bb18be9", "sha256": "8fd0cb792aa8253a51dfc83727b40117a36179cc8ed304afe9332bac2972eeff"}, "downloads": -1, "filename": "lcdk-0.3.tar.gz", "has_sig": false, "md5_digest": "425b40d02f6504d76767c0f17bb18be9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4159, "upload_time": "2019-10-02T17:37:53", "upload_time_iso_8601": "2019-10-02T17:37:53.107038Z", "url": "https://files.pythonhosted.org/packages/55/23/a0554b85565ed58f48212ad611d86d949166edee0e533f92609395c2b9ac/lcdk-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ea0c94abcf9373454e9899f80626564", "sha256": "218265172a00eacae220a9d384e199f263b1011d5398d14a5453cfd2792ce3a1"}, "downloads": -1, "filename": "lcdk-0.3-py3.7.egg", "has_sig": false, "md5_digest": "2ea0c94abcf9373454e9899f80626564", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 7444, "upload_time": "2019-10-02T17:37:51", "upload_time_iso_8601": "2019-10-02T17:37:51.814783Z", "url": "https://files.pythonhosted.org/packages/39/c3/2575aea9e0bac64a827fed0c41a318d4bf658d98fa941a7090d452c605f6/lcdk-0.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "878955518ccd0c8949ed57ce7243de72", "sha256": "8accfa03feaf6c8e1ce7d0f561a61ecb1de49cd28b70afa244f1e1edfd6fcc86"}, "downloads": -1, "filename": "lcdk-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "878955518ccd0c8949ed57ce7243de72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5049, "upload_time": "2019-10-02T17:37:49", "upload_time_iso_8601": "2019-10-02T17:37:49.071039Z", "url": "https://files.pythonhosted.org/packages/8d/05/1dbfdb1ffb2fe3d518aa8adf4631d02b6214e2e2cc26cc4ccf4bb43533a7/lcdk-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "425b40d02f6504d76767c0f17bb18be9", "sha256": "8fd0cb792aa8253a51dfc83727b40117a36179cc8ed304afe9332bac2972eeff"}, "downloads": -1, "filename": "lcdk-0.3.tar.gz", "has_sig": false, "md5_digest": "425b40d02f6504d76767c0f17bb18be9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4159, "upload_time": "2019-10-02T17:37:53", "upload_time_iso_8601": "2019-10-02T17:37:53.107038Z", "url": "https://files.pythonhosted.org/packages/55/23/a0554b85565ed58f48212ad611d86d949166edee0e533f92609395c2b9ac/lcdk-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:30 2020"}