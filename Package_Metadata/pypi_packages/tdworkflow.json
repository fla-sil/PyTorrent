{"info": {"author": "Aki Ariga", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database"], "description": "tdwokflow\n=========\n\nUnofficial Treasure Workflow API client.\n\nInstallation\n------------\n\n.. code-block:: shell\n\n   pip install tdworkflow\n\nIf you want to use development version, run as follows:\n\n.. code-block:: shell\n\n   pip install git+https://github.com/chezou/tdworkflow.git\n\nUsage\n-----\n\n.. code-block:: python\n\n   import os\n\n   from tdworkflow.client import Client\n\n   apikey = os.getenv(\"TD_API_KEY\")\n   client = Client(site=\"us\", apikey=apikey)\n   # Or, write endpoint explicitly\n   # client = Client(endpoint=\"api-workflow.treasuredata.com\", apikey=apikey)\n\n   projects = client.projects(\"pandas-df\")\n\n   secrets = {\"td.apikey\": apikey, \"td.apiserver\": \"https://api.treasuredata.com\", \"test\": \"secret-foo\"}\n\n   client.set_secrets(projects[0], secrets)\n\n   client.secrets(projects[0])\n   # ['td.apikey', 'td.apiserver', \"test\"]\n   client.delete_secrets(projects[0], [\"test\", \"td.apiserver\"])\n\nUplaod Project from GitHub\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBefore executing example code, you have to install git-python\n\n.. code-block:: shell\n\n   pip install gitpython\n\nClone example repository with git-python and upload a digdag project.\n\n.. code-block:: python\n\n   import tempfile\n   import os\n   import shutil\n\n   import tdworkflow\n\n   from git import Git\n\n   # Download example GitHub repositoory\n\n   tempdir = tempfile.gettempdir()\n\n   git_repo = \"https://github.com/treasure-data/treasure-boxes/\"\n\n   shutil.rmtree(os.path.join(tempdir, \"treasure-boxes\"))\n\n   try:\n       Git(tempdir).clone(git_repo)\n       print(\"Clone repository succeeded\")\n   except Exception:\n       print(\"Repository clone failed\")\n       raise\n\n   # Upload specific Workflow project\n\n   apikey = os.getenv(\"TD_API_KEY\")\n   site = \"us\"\n\n   target_box = os.path.join(\"integration-box\", \"python\")\n   target_path = os.path.join(tempdir, \"treasure-boxes\", target_box)\n\n   client = tdworkflow.client.Client(site=site, apikey=apikey)\n   project = client.create_project(\"my-project\", target_path)\n\nIf you want to open Treasure Workflow console on your browser, you can get the workflow URL as the following:\n\n.. code-block:: python\n\n   CONSOLE_URL = {\n       \"us\": \"https://console.treasuredata.com/app/workflows\",\n       \"eu01\": \"https://console.eu01.treasuredata.com/app/workflows\",\n       \"jp\": \"https://console.treasuredata.co.jp/app/workflows\",\n   }\n\n   workflows = client.project_workflows(project)\n   workflows = list(filter(lambda w: w.name != \"test\", workflows))\n   if workflows:\n       print(f\"Project created! Open {CONSOLE_URL[site]}/{workflows[0].id}/info on your browser and clieck 'New Run' button.\")\n   else:\n       print(\"Project creation failed.\")\n\nStart workflow session\n^^^^^^^^^^^^^^^^^^^^^^\n\nYou can start workflow session by using ``Client.start_attempt``.\n\n.. code-block:: python\n\n   attempt = client.start_attempt(workflows[0])\n\n   # Wait attempt until finish. This may require few minutes.\n   attempt = client.wait_attempt(attempt)\n\n\nConnect to open source digdag\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSince Treasure Workflow is hosted digdag, tdworkflow is compatible with open source digdag.\n\n.. note::\n   Open source digdag API may be different with Treasure Workflow API so that tdworkflow might not work with some API of opensource digdag.\n\nHere is the example code to connect local digdag server.\n\n.. code-block:: python\n\n    >>> import tdworkflow\n    >>> import requests\n    >>> session = requests.Session()\n    >>> client = tdworkflow.client.Client(\n    ... endpoint=\"localhost:65432\", apikey=\"\", _session=session, scheme=\"http\")\n    >>> client.projects()\n    [Project(id=1, name='python-tdworkflow', revision='134fe2f9-ded3-4e7c-af8e-8a82d55d688b', archiveType='db', archiveMd5='5Lc6F6m3DtmBN4DA5MzK8A==', createdAt='2019-11-01T13:03:26Z', deletedAt=None, updatedAt='2019-11-01T13:03:26Z')]\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chezou/tdworkflow", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "tdworkflow", "package_url": "https://pypi.org/project/tdworkflow/", "platform": "", "project_url": "https://pypi.org/project/tdworkflow/", "project_urls": {"Homepage": "https://github.com/chezou/tdworkflow"}, "release_url": "https://pypi.org/project/tdworkflow/0.4.0/", "requires_dist": ["requests", "black ; extra == 'dev'", "flake8 ; extra == 'dev'", "isort ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-mock ; extra == 'dev'", "sphinx ; extra == 'doc'", "sphinx-rtd-theme ; extra == 'doc'"], "requires_python": ">= 3.6", "summary": "Unofficial Treasure Workflow API client", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Unofficial Treasure Workflow API client.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install tdworkflow\n</pre>\n<p>If you want to use development version, run as follows:</p>\n<pre>pip install git+https://github.com/chezou/tdworkflow.git\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tdworkflow.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">apikey</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">\"TD_API_KEY\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">site</span><span class=\"o\">=</span><span class=\"s2\">\"us\"</span><span class=\"p\">,</span> <span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"n\">apikey</span><span class=\"p\">)</span>\n<span class=\"c1\"># Or, write endpoint explicitly</span>\n<span class=\"c1\"># client = Client(endpoint=\"api-workflow.treasuredata.com\", apikey=apikey)</span>\n\n<span class=\"n\">projects</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">projects</span><span class=\"p\">(</span><span class=\"s2\">\"pandas-df\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"td.apikey\"</span><span class=\"p\">:</span> <span class=\"n\">apikey</span><span class=\"p\">,</span> <span class=\"s2\">\"td.apiserver\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://api.treasuredata.com\"</span><span class=\"p\">,</span> <span class=\"s2\">\"test\"</span><span class=\"p\">:</span> <span class=\"s2\">\"secret-foo\"</span><span class=\"p\">}</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">set_secrets</span><span class=\"p\">(</span><span class=\"n\">projects</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">secrets</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">secrets</span><span class=\"p\">(</span><span class=\"n\">projects</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"c1\"># ['td.apikey', 'td.apiserver', \"test\"]</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">delete_secrets</span><span class=\"p\">(</span><span class=\"n\">projects</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"td.apiserver\"</span><span class=\"p\">])</span>\n</pre>\n<div id=\"uplaod-project-from-github\">\n<h3>Uplaod Project from GitHub</h3>\n<p>Before executing example code, you have to install git-python</p>\n<pre>pip install gitpython\n</pre>\n<p>Clone example repository with git-python and upload a digdag project.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">tdworkflow</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">git</span> <span class=\"kn\">import</span> <span class=\"n\">Git</span>\n\n<span class=\"c1\"># Download example GitHub repositoory</span>\n\n<span class=\"n\">tempdir</span> <span class=\"o\">=</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">gettempdir</span><span class=\"p\">()</span>\n\n<span class=\"n\">git_repo</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://github.com/treasure-data/treasure-boxes/\"</span>\n\n<span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">rmtree</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">tempdir</span><span class=\"p\">,</span> <span class=\"s2\">\"treasure-boxes\"</span><span class=\"p\">))</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">Git</span><span class=\"p\">(</span><span class=\"n\">tempdir</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">clone</span><span class=\"p\">(</span><span class=\"n\">git_repo</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Clone repository succeeded\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Repository clone failed\"</span><span class=\"p\">)</span>\n    <span class=\"k\">raise</span>\n\n<span class=\"c1\"># Upload specific Workflow project</span>\n\n<span class=\"n\">apikey</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s2\">\"TD_API_KEY\"</span><span class=\"p\">)</span>\n<span class=\"n\">site</span> <span class=\"o\">=</span> <span class=\"s2\">\"us\"</span>\n\n<span class=\"n\">target_box</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s2\">\"integration-box\"</span><span class=\"p\">,</span> <span class=\"s2\">\"python\"</span><span class=\"p\">)</span>\n<span class=\"n\">target_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">tempdir</span><span class=\"p\">,</span> <span class=\"s2\">\"treasure-boxes\"</span><span class=\"p\">,</span> <span class=\"n\">target_box</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tdworkflow</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">site</span><span class=\"o\">=</span><span class=\"n\">site</span><span class=\"p\">,</span> <span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"n\">apikey</span><span class=\"p\">)</span>\n<span class=\"n\">project</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">create_project</span><span class=\"p\">(</span><span class=\"s2\">\"my-project\"</span><span class=\"p\">,</span> <span class=\"n\">target_path</span><span class=\"p\">)</span>\n</pre>\n<p>If you want to open Treasure Workflow console on your browser, you can get the workflow URL as the following:</p>\n<pre><span class=\"n\">CONSOLE_URL</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"us\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://console.treasuredata.com/app/workflows\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"eu01\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://console.eu01.treasuredata.com/app/workflows\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"jp\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://console.treasuredata.co.jp/app/workflows\"</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">workflows</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">project_workflows</span><span class=\"p\">(</span><span class=\"n\">project</span><span class=\"p\">)</span>\n<span class=\"n\">workflows</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">w</span><span class=\"p\">:</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"n\">workflows</span><span class=\"p\">))</span>\n<span class=\"k\">if</span> <span class=\"n\">workflows</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Project created! Open </span><span class=\"si\">{</span><span class=\"n\">CONSOLE_URL</span><span class=\"p\">[</span><span class=\"n\">site</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">workflows</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">/info on your browser and clieck 'New Run' button.\"</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Project creation failed.\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"start-workflow-session\">\n<h3>Start workflow session</h3>\n<p>You can start workflow session by using <tt>Client.start_attempt</tt>.</p>\n<pre><span class=\"n\">attempt</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">start_attempt</span><span class=\"p\">(</span><span class=\"n\">workflows</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Wait attempt until finish. This may require few minutes.</span>\n<span class=\"n\">attempt</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">wait_attempt</span><span class=\"p\">(</span><span class=\"n\">attempt</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"connect-to-open-source-digdag\">\n<h3>Connect to open source digdag</h3>\n<p>Since Treasure Workflow is hosted digdag, tdworkflow is compatible with open source digdag.</p>\n<div>\n<p>Note</p>\n<p>Open source digdag API may be different with Treasure Workflow API so that tdworkflow might not work with some API of opensource digdag.</p>\n</div>\n<p>Here is the example code to connect local digdag server.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">tdworkflow</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">tdworkflow</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span>\n<span class=\"o\">...</span> <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s2\">\"localhost:65432\"</span><span class=\"p\">,</span> <span class=\"n\">apikey</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">_session</span><span class=\"o\">=</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">scheme</span><span class=\"o\">=</span><span class=\"s2\">\"http\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">projects</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"n\">Project</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'python-tdworkflow'</span><span class=\"p\">,</span> <span class=\"n\">revision</span><span class=\"o\">=</span><span class=\"s1\">'134fe2f9-ded3-4e7c-af8e-8a82d55d688b'</span><span class=\"p\">,</span> <span class=\"n\">archiveType</span><span class=\"o\">=</span><span class=\"s1\">'db'</span><span class=\"p\">,</span> <span class=\"n\">archiveMd5</span><span class=\"o\">=</span><span class=\"s1\">'5Lc6F6m3DtmBN4DA5MzK8A=='</span><span class=\"p\">,</span> <span class=\"n\">createdAt</span><span class=\"o\">=</span><span class=\"s1\">'2019-11-01T13:03:26Z'</span><span class=\"p\">,</span> <span class=\"n\">deletedAt</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">updatedAt</span><span class=\"o\">=</span><span class=\"s1\">'2019-11-01T13:03:26Z'</span><span class=\"p\">)]</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6357009, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b7b65407bf36bba8f0643990d29c7e5b", "sha256": "8c3759b9c5f49778f75e22d685f481ac699d906cb1d95e2073bcee8a173fd814"}, "downloads": -1, "filename": "tdworkflow-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b7b65407bf36bba8f0643990d29c7e5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 12517, "upload_time": "2019-11-01T09:27:52", "upload_time_iso_8601": "2019-11-01T09:27:52.282476Z", "url": "https://files.pythonhosted.org/packages/a0/83/8753e611d693ce156044f694882e66cf4f48d2fadda9e4740012875dfb9b/tdworkflow-0.1.0-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b747d836acbadb3d165d0ede6ee28f31", "sha256": "ee3c0b5ee1f2d7930c360c430f9701aac6cec77caa70e31bad37c4dcfc735f60"}, "downloads": -1, "filename": "tdworkflow-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b747d836acbadb3d165d0ede6ee28f31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 13006, "upload_time": "2019-11-01T14:04:31", "upload_time_iso_8601": "2019-11-01T14:04:31.988843Z", "url": "https://files.pythonhosted.org/packages/f6/40/03ec02795f8a4b6d137035ef5fdbd62a51a87cb6d994546fe455c47f623d/tdworkflow-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "6666bc5c1c407c68ffe4d5577fe3ef06", "sha256": "efb3a987fd32e9e8f1ebad76890d629afe17a22dbdfe0cc2ea5add64d4368200"}, "downloads": -1, "filename": "tdworkflow-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6666bc5c1c407c68ffe4d5577fe3ef06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 13259, "upload_time": "2019-11-15T00:55:28", "upload_time_iso_8601": "2019-11-15T00:55:28.983966Z", "url": "https://files.pythonhosted.org/packages/2e/36/3b79525d8023029c1569bbf3ba254e74c34cb44f8cca20378f6b33b893dd/tdworkflow-0.2.1-py3-none-any.whl", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "359b8fa4e80a2510563e2a277facec7d", "sha256": "0bff9af50a879dd86bb011111be41f09f652846cd00a6ac5037c2c2b6be584cd"}, "downloads": -1, "filename": "tdworkflow-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "359b8fa4e80a2510563e2a277facec7d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 13290, "upload_time": "2019-12-06T12:40:51", "upload_time_iso_8601": "2019-12-06T12:40:51.553986Z", "url": "https://files.pythonhosted.org/packages/9e/1e/0f2d8a271e66dec42f0071fca5cb3239b757cba25c0390d9e60d1fb4b668/tdworkflow-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19d17bf54028204a03ed72fd2c171171", "sha256": "aff8fd885340287c9a784e9dfdf4cb92f8664eaedefd1da542d87f82cefeca94"}, "downloads": -1, "filename": "tdworkflow-0.2.2.tar.gz", "has_sig": false, "md5_digest": "19d17bf54028204a03ed72fd2c171171", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 25826, "upload_time": "2019-12-06T12:40:52", "upload_time_iso_8601": "2019-12-06T12:40:52.775634Z", "url": "https://files.pythonhosted.org/packages/bc/53/4f2d7de440dccdb09e1772f996e9e57de49bebcbea426f6ca6d9ba37386f/tdworkflow-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "f947e0a39a33e38e71a235484757b160", "sha256": "31da6e89b22dbc124819949f1d5a2f22387ef17d6f2b3e8eefbd46011312910a"}, "downloads": -1, "filename": "tdworkflow-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f947e0a39a33e38e71a235484757b160", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 13400, "upload_time": "2019-12-06T13:41:17", "upload_time_iso_8601": "2019-12-06T13:41:17.514231Z", "url": "https://files.pythonhosted.org/packages/b6/3c/6b50fc5c19a607bc5ae0b64fcaa875bb6cf6f7dbe8e5049cf20330c5f730/tdworkflow-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d2e9321579552e6c8bf5a9c751580f0", "sha256": "090e0218e928dc87dc693058842b368bb5246d7596ca0fde12a1adb0a8f22d9e"}, "downloads": -1, "filename": "tdworkflow-0.2.3.tar.gz", "has_sig": false, "md5_digest": "3d2e9321579552e6c8bf5a9c751580f0", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 26090, "upload_time": "2019-12-06T13:41:18", "upload_time_iso_8601": "2019-12-06T13:41:18.684366Z", "url": "https://files.pythonhosted.org/packages/46/bc/224f21ddc4d707c2216a56eae85d682be25fecaeaf57a746d2466ef80be8/tdworkflow-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "21a6f8ab3c5a4b143e72663059570e81", "sha256": "0f224a42f5efc92b5d0b53804fe327c192fd8200ddefbec601192967bee8101e"}, "downloads": -1, "filename": "tdworkflow-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "21a6f8ab3c5a4b143e72663059570e81", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 14097, "upload_time": "2019-12-15T09:13:17", "upload_time_iso_8601": "2019-12-15T09:13:17.314653Z", "url": "https://files.pythonhosted.org/packages/83/80/1173f83d11f23eb96a166a0c2033cdcf238937c9c60b4f47f4d8759bc40c/tdworkflow-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aabe42427b4ed1225a136e10d969cc87", "sha256": "633592c6d64e613ce434c33c7bba741f801d044101d495e9b9cb3faed5f500e7"}, "downloads": -1, "filename": "tdworkflow-0.3.0.tar.gz", "has_sig": false, "md5_digest": "aabe42427b4ed1225a136e10d969cc87", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 27084, "upload_time": "2019-12-15T09:13:18", "upload_time_iso_8601": "2019-12-15T09:13:18.797140Z", "url": "https://files.pythonhosted.org/packages/b0/bb/278107a15d8336f63067b2653a11b210bd218d8a710b290706d7c9899e8f/tdworkflow-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8011c27533e4f301a216c569ec662acf", "sha256": "0188503ddd39ec674c9c19034391085114bff14b55a793e44b303102ba2b13c6"}, "downloads": -1, "filename": "tdworkflow-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8011c27533e4f301a216c569ec662acf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 14825, "upload_time": "2019-12-25T00:10:58", "upload_time_iso_8601": "2019-12-25T00:10:58.917947Z", "url": "https://files.pythonhosted.org/packages/7e/b6/5751b801e1cbcaaaef4c02e348fde9ad7caa2ec5e47263b0235af71111c7/tdworkflow-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a6e9d45a423141da6c1b56afc7a724a", "sha256": "683530cf80e2768e29322d508259528795c40358ee79cfbb14bd29af0dd2a2bf"}, "downloads": -1, "filename": "tdworkflow-0.4.0.tar.gz", "has_sig": false, "md5_digest": "5a6e9d45a423141da6c1b56afc7a724a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 27556, "upload_time": "2019-12-25T00:11:00", "upload_time_iso_8601": "2019-12-25T00:11:00.436472Z", "url": "https://files.pythonhosted.org/packages/a9/6a/1e5a2606040e078482bb8a24a9540c99341aeff141be1efa42b53022c9ca/tdworkflow-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8011c27533e4f301a216c569ec662acf", "sha256": "0188503ddd39ec674c9c19034391085114bff14b55a793e44b303102ba2b13c6"}, "downloads": -1, "filename": "tdworkflow-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8011c27533e4f301a216c569ec662acf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 14825, "upload_time": "2019-12-25T00:10:58", "upload_time_iso_8601": "2019-12-25T00:10:58.917947Z", "url": "https://files.pythonhosted.org/packages/7e/b6/5751b801e1cbcaaaef4c02e348fde9ad7caa2ec5e47263b0235af71111c7/tdworkflow-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a6e9d45a423141da6c1b56afc7a724a", "sha256": "683530cf80e2768e29322d508259528795c40358ee79cfbb14bd29af0dd2a2bf"}, "downloads": -1, "filename": "tdworkflow-0.4.0.tar.gz", "has_sig": false, "md5_digest": "5a6e9d45a423141da6c1b56afc7a724a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 27556, "upload_time": "2019-12-25T00:11:00", "upload_time_iso_8601": "2019-12-25T00:11:00.436472Z", "url": "https://files.pythonhosted.org/packages/a9/6a/1e5a2606040e078482bb8a24a9540c99341aeff141be1efa42b53022c9ca/tdworkflow-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:08 2020"}