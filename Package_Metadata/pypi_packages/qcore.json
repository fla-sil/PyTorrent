{"info": {"author": "Quora, Inc.", "author_email": "asynq@quora.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "*****\nqcore\n*****\n.. image:: https://travis-ci.org/quora/qcore.svg?branch=master\n    :target: https://travis-ci.org/quora/qcore\n\n``qcore`` is a library of common utility functions used at Quora. It is used to\nabstract out common functionality for other Quora libraries like `asynq <https://github.com/quora/asynq>`_.\n\nIts component modules are discussed below. See the docstrings in the code\nitself for more detail.\n\nqcore.asserts\n-------------\n\nWhen a normal Python assert fails, it only indicates that there was a failure,\nnot what the bad values were that caused the assert to fail. This module\nprovides rich assertion helpers that automatically produce better error\nmessages. For example:\n\n.. code-block:: python\n\n    >>> from qcore.asserts import assert_eq\n    >>> assert 5 == 2 * 2\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    AssertionError\n    >>> assert_eq(5, 2 * 2)\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n      File \"qcore/asserts.py\", line 82, in assert_eq\n        assert expected == actual, _assert_fail_message(message, expected, actual, '!=', extra)\n    AssertionError: 5 != 4\n\nSimilar methods are provided by the standard library's ``unittest`` package,\nbut those are tied to the ``TestCase`` class instead of being standalone\nfunctions.\n\nqcore.caching\n-------------\n\nThis provides helpers for caching data. Some examples include:\n\n.. code-block:: python\n\n    from qcore.caching import cached_per_instance, lazy_constant\n\n    @lazy_constant\n    def some_function():\n        # this will only be executed the first time some_function() is called;\n        # afterwards it will be cached\n        return expensive_computation()\n\n    class SomeClass(object):\n        @cached_per_instance()\n        def some_method(self, a, b):\n            # for any instance of SomeClass, this will only be executed once\n            return expensive_computation(a, b)\n\nqcore.debug\n-----------\n\nThis module provides some helpers useful for debugging Python. Among others, it\nincludes the ``@qcore.debug.trace()`` decorator, which can be used to trace\nevery time a function is called.\n\nqcore.decorators\n----------------\n\nThis module provides an abstraction for class-based decorators that supports\ntransparently decorating functions, methods, classmethods, and staticmethods\nwhile also providing the option to add additional custom attributes. For\nexample, it could be used to provide a caching decorator that adds a ``.dirty``\nattribute to decorated functions to dirty their cache:\n\n.. code-block:: python\n\n    from qcore.decorators import DecoratorBase, DecoratorBinder, decorate\n\n    class CacheDecoratorBinder(DecoratorBinder):\n        def dirty(self, *args):\n            if self.instance is None:\n                return self.decorator.dirty(*args)\n            else:\n                return self.decorator.dirty(self.instance, *args)\n\n    class CacheDecorator(DecoratorBase):\n        binder_cls = CacheDecoratorBinder\n\n        def __init__(self, *args):\n            super(CacheDecorator, self).__init__(*args)\n            self._cache = {}\n\n        def dirty(self, *args):\n            try:\n                del self._cache[args]\n            except KeyError:\n                pass\n\n        def __call__(self, *args):\n            try:\n                return self._cache[args]\n            except KeyError:\n                value = self.fn(*args)\n                self._cache[args] = value\n                return value\n\n    cached = decorate(CacheDecorator)\n\nqcore.enum\n----------\n\nThis module provides an abstraction for defining enums. You can define an enum\nas follows:\n\n.. code-block:: python\n\n    from qcore.enum import Enum\n\n    class Color(Enum):\n        red = 1\n        green = 2\n        blue = 3\n\nqcore.errors\n------------\n\nThis module provides some commonly useful exception classes and helpers for\nreraising exceptions from a different place.\n\nqcore.events\n------------\n\nThis provides an abstraction for registering events and running callbacks.\nExample usage:\n\n.. code-block:: python\n\n    >>> from qcore.events import EventHook\n    >>> event = EventHook()\n    >>> def callback():\n    ...     print('callback called')\n    ...\n    >>> event.subscribe(callback)\n    >>> event.trigger()\n    callback called\n\nqcore.helpers\n-------------\n\nThis provides a number of small helper functions.\n\nqcore.inspectable_class\n-----------------------\n\nThis provides a base class that automatically provides hashing, equality\nchecks, and a readable ``repr()`` result. Example usage:\n\n.. code-block:: python\n\n    >>> from qcore.inspectable_class import InspectableClass\n    >>> class Pair(InspectableClass):\n    ...     def __init__(self, a, b):\n    ...         self.a = a\n    ...         self.b = b\n    ...\n    >>> Pair(1, 2)\n    Pair(a=1, b=2)\n    >>> Pair(1, 2) == Pair(1, 2)\n    True\n\nqcore.inspection\n----------------\n\nThis provides functionality similar to the standard ``inspect`` module. Among\nothers, it includes the ``get_original_fn`` function, which extracts the\nunderlying function from a ``qcore.decorators``-decorated object.\n\nqcore.microtime\n---------------\n\nThis includes helpers for dealing with time, represented as an integer number\nof microseconds since the Unix epoch.\n\nqcore.testing\n-------------\n\nThis provides helpers to use in unit tests. Among others, it provides an\n``Anything`` object that compares equal to any other Python object.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/quora/qcore", "keywords": "quora core common utility", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "qcore", "package_url": "https://pypi.org/project/qcore/", "platform": "", "project_url": "https://pypi.org/project/qcore/", "project_urls": {"Homepage": "https://github.com/quora/qcore"}, "release_url": "https://pypi.org/project/qcore/1.6.0/", "requires_dist": ["Cython", "inspect2", "setuptools", "six", "typing ; python_version < \"3.5\""], "requires_python": "", "summary": "Quora's core utility library", "version": "1.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/quora/qcore\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/quora/qcore.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43a1eabec3cfdad686c17318186f7cdf20011681/68747470733a2f2f7472617669732d63692e6f72672f71756f72612f71636f72652e7376673f6272616e63683d6d6173746572\"></a>\n<p><tt>qcore</tt> is a library of common utility functions used at Quora. It is used to\nabstract out common functionality for other Quora libraries like <a href=\"https://github.com/quora/asynq\" rel=\"nofollow\">asynq</a>.</p>\n<p>Its component modules are discussed below. See the docstrings in the code\nitself for more detail.</p>\n<div id=\"qcore-asserts\">\n<h2>qcore.asserts</h2>\n<p>When a normal Python assert fails, it only indicates that there was a failure,\nnot what the bad values were that caused the assert to fail. This module\nprovides rich assertion helpers that automatically produce better error\nmessages. For example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">qcore.asserts</span> <span class=\"kn\">import</span> <span class=\"n\">assert_eq</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"mi\">5</span> <span class=\"o\">==</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n<span class=\"ne\">AssertionError</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">assert_eq</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"qcore/asserts.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">82</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">assert_eq</span>\n    <span class=\"k\">assert</span> <span class=\"n\">expected</span> <span class=\"o\">==</span> <span class=\"n\">actual</span><span class=\"p\">,</span> <span class=\"n\">_assert_fail_message</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">,</span> <span class=\"n\">expected</span><span class=\"p\">,</span> <span class=\"n\">actual</span><span class=\"p\">,</span> <span class=\"s1\">'!='</span><span class=\"p\">,</span> <span class=\"n\">extra</span><span class=\"p\">)</span>\n<span class=\"ne\">AssertionError</span><span class=\"p\">:</span> <span class=\"mi\">5</span> <span class=\"o\">!=</span> <span class=\"mi\">4</span>\n</pre>\n<p>Similar methods are provided by the standard library\u2019s <tt>unittest</tt> package,\nbut those are tied to the <tt>TestCase</tt> class instead of being standalone\nfunctions.</p>\n</div>\n<div id=\"qcore-caching\">\n<h2>qcore.caching</h2>\n<p>This provides helpers for caching data. Some examples include:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qcore.caching</span> <span class=\"kn\">import</span> <span class=\"n\">cached_per_instance</span><span class=\"p\">,</span> <span class=\"n\">lazy_constant</span>\n\n<span class=\"nd\">@lazy_constant</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_function</span><span class=\"p\">():</span>\n    <span class=\"c1\"># this will only be executed the first time some_function() is called;</span>\n    <span class=\"c1\"># afterwards it will be cached</span>\n    <span class=\"k\">return</span> <span class=\"n\">expensive_computation</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">SomeClass</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"nd\">@cached_per_instance</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">some_method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n        <span class=\"c1\"># for any instance of SomeClass, this will only be executed once</span>\n        <span class=\"k\">return</span> <span class=\"n\">expensive_computation</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"qcore-debug\">\n<h2>qcore.debug</h2>\n<p>This module provides some helpers useful for debugging Python. Among others, it\nincludes the <tt>@qcore.debug.trace()</tt> decorator, which can be used to trace\nevery time a function is called.</p>\n</div>\n<div id=\"qcore-decorators\">\n<h2>qcore.decorators</h2>\n<p>This module provides an abstraction for class-based decorators that supports\ntransparently decorating functions, methods, classmethods, and staticmethods\nwhile also providing the option to add additional custom attributes. For\nexample, it could be used to provide a caching decorator that adds a <tt>.dirty</tt>\nattribute to decorated functions to dirty their cache:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qcore.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">DecoratorBase</span><span class=\"p\">,</span> <span class=\"n\">DecoratorBinder</span><span class=\"p\">,</span> <span class=\"n\">decorate</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CacheDecoratorBinder</span><span class=\"p\">(</span><span class=\"n\">DecoratorBinder</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">dirty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decorator</span><span class=\"o\">.</span><span class=\"n\">dirty</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">decorator</span><span class=\"o\">.</span><span class=\"n\">dirty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">CacheDecorator</span><span class=\"p\">(</span><span class=\"n\">DecoratorBase</span><span class=\"p\">):</span>\n    <span class=\"n\">binder_cls</span> <span class=\"o\">=</span> <span class=\"n\">CacheDecoratorBinder</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">CacheDecorator</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cache</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">dirty</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">del</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cache</span><span class=\"p\">[</span><span class=\"n\">args</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n            <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cache</span><span class=\"p\">[</span><span class=\"n\">args</span><span class=\"p\">]</span>\n        <span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n            <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_cache</span><span class=\"p\">[</span><span class=\"n\">args</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n            <span class=\"k\">return</span> <span class=\"n\">value</span>\n\n<span class=\"n\">cached</span> <span class=\"o\">=</span> <span class=\"n\">decorate</span><span class=\"p\">(</span><span class=\"n\">CacheDecorator</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"qcore-enum\">\n<h2>qcore.enum</h2>\n<p>This module provides an abstraction for defining enums. You can define an enum\nas follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qcore.enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">red</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n    <span class=\"n\">green</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n    <span class=\"n\">blue</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</pre>\n</div>\n<div id=\"qcore-errors\">\n<h2>qcore.errors</h2>\n<p>This module provides some commonly useful exception classes and helpers for\nreraising exceptions from a different place.</p>\n</div>\n<div id=\"qcore-events\">\n<h2>qcore.events</h2>\n<p>This provides an abstraction for registering events and running callbacks.\nExample usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">qcore.events</span> <span class=\"kn\">import</span> <span class=\"n\">EventHook</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">EventHook</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">callback</span><span class=\"p\">():</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'callback called'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">trigger</span><span class=\"p\">()</span>\n<span class=\"n\">callback</span> <span class=\"n\">called</span>\n</pre>\n</div>\n<div id=\"qcore-helpers\">\n<h2>qcore.helpers</h2>\n<p>This provides a number of small helper functions.</p>\n</div>\n<div id=\"qcore-inspectable-class\">\n<h2>qcore.inspectable_class</h2>\n<p>This provides a base class that automatically provides hashing, equality\nchecks, and a readable <tt>repr()</tt> result. Example usage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">qcore.inspectable_class</span> <span class=\"kn\">import</span> <span class=\"n\">InspectableClass</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">Pair</span><span class=\"p\">(</span><span class=\"n\">InspectableClass</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n<span class=\"o\">...</span>         <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">b</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Pair</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">Pair</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Pair</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">Pair</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n</div>\n<div id=\"qcore-inspection\">\n<h2>qcore.inspection</h2>\n<p>This provides functionality similar to the standard <tt>inspect</tt> module. Among\nothers, it includes the <tt>get_original_fn</tt> function, which extracts the\nunderlying function from a <tt>qcore.decorators</tt>-decorated object.</p>\n</div>\n<div id=\"qcore-microtime\">\n<h2>qcore.microtime</h2>\n<p>This includes helpers for dealing with time, represented as an integer number\nof microseconds since the Unix epoch.</p>\n</div>\n<div id=\"qcore-testing\">\n<h2>qcore.testing</h2>\n<p>This provides helpers to use in unit tests. Among others, it provides an\n<tt>Anything</tt> object that compares equal to any other Python object.</p>\n</div>\n\n          </div>"}, "last_serial": 6946325, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "518d125d3730d35b439a42d6cb6e5cd8", "sha256": "393910affce89ddcad75e2cca567847b34302671e604be54e25ba502e3c390e2"}, "downloads": -1, "filename": "qcore-0.2.0.tar.gz", "has_sig": false, "md5_digest": "518d125d3730d35b439a42d6cb6e5cd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 370317, "upload_time": "2016-09-16T19:14:08", "upload_time_iso_8601": "2016-09-16T19:14:08.955480Z", "url": "https://files.pythonhosted.org/packages/8b/ce/02f38e14597091fed0d8ac0d4974a5bde468687e5fffceba6b004ccbff3d/qcore-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f51cf7da5bf770c5f34f1fa2143339f5", "sha256": "a6cdd69ccc4aec62960860d59c7fb5cd38eda8c64f4d8162d51c1549447fbe82"}, "downloads": -1, "filename": "qcore-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f51cf7da5bf770c5f34f1fa2143339f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 375606, "upload_time": "2016-10-07T23:46:04", "upload_time_iso_8601": "2016-10-07T23:46:04.436479Z", "url": "https://files.pythonhosted.org/packages/68/41/20f5c172dbaf6a6a5c56b48bd8e34a5869c13b43c7490cf611e1944c7a28/qcore-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "fd3ac236f9d5b254c8637d66ddc5c997", "sha256": "38ba2e9dfdef573a579ca9712dad89276f2e241c0d5148ba3a199546c49e27cd"}, "downloads": -1, "filename": "qcore-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fd3ac236f9d5b254c8637d66ddc5c997", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 407529, "upload_time": "2017-01-11T00:37:27", "upload_time_iso_8601": "2017-01-11T00:37:27.954240Z", "url": "https://files.pythonhosted.org/packages/46/36/d1e964c34ebdc4ff57b548346ed8fe070cd77dd4a21fd337e249c1c6af1a/qcore-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d397bbed08603e411c469080838fb38f", "sha256": "1f2fde43126af24ca3c75b9f3d38abb9a5f15d96886de1fbdaf3a451ae06dfee"}, "downloads": -1, "filename": "qcore-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d397bbed08603e411c469080838fb38f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 378168, "upload_time": "2017-07-07T20:52:34", "upload_time_iso_8601": "2017-07-07T20:52:34.270688Z", "url": "https://files.pythonhosted.org/packages/8e/06/ac3928214155717be13e48a3814ea34ed0f2ac02fdb8035481acc2d2471d/qcore-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "726e37a83d6cfacab54e64611feccc92", "sha256": "768d4a2d181eb214582acbbe361b5916281615cface9c21f9b66ff20f1fa8cc1"}, "downloads": -1, "filename": "qcore-0.4.1.tar.gz", "has_sig": false, "md5_digest": "726e37a83d6cfacab54e64611feccc92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 492916, "upload_time": "2017-12-08T04:09:35", "upload_time_iso_8601": "2017-12-08T04:09:35.649934Z", "url": "https://files.pythonhosted.org/packages/4b/d8/213cbf5b91f3eaecf1ef39c0297e00318ce8c5fd511d207146108ec9b7a0/qcore-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "4fc938202ee48e29ec93a16408f3cbaf", "sha256": "308824f1f016643ef6b019ff981be7a8050ba12592a1e2d497c8d8099a7f3acf"}, "downloads": -1, "filename": "qcore-0.4.2.tar.gz", "has_sig": false, "md5_digest": "4fc938202ee48e29ec93a16408f3cbaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27302, "upload_time": "2017-12-12T23:56:29", "upload_time_iso_8601": "2017-12-12T23:56:29.243200Z", "url": "https://files.pythonhosted.org/packages/f3/09/3b295ec32e8e41e8704d798a48505474d0d6dc1a2f57c60a9c8f7cd1ea11/qcore-0.4.2.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "efa7a766d4936dd7dbe2e0abbb1cb928", "sha256": "5a7b5dfba6271dd93c7465c3e3e1d9e0050293f2541a069976382932ef6d2533"}, "downloads": -1, "filename": "qcore-0.4.4.tar.gz", "has_sig": false, "md5_digest": "efa7a766d4936dd7dbe2e0abbb1cb928", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31377, "upload_time": "2018-07-11T03:52:20", "upload_time_iso_8601": "2018-07-11T03:52:20.723266Z", "url": "https://files.pythonhosted.org/packages/9a/58/a97c10e47fbbd6d6962f9e873638ca64e5857af9b9eb7d134a97a13dd34f/qcore-0.4.4.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "bb916663a10e29c02bed4c0a2a0d0230", "sha256": "ab6b911417e1f93f2db3c2df531140dc20e76e07217684cd187f007883224b43"}, "downloads": -1, "filename": "qcore-0.5.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "bb916663a10e29c02bed4c0a2a0d0230", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1481170, "upload_time": "2018-08-09T19:17:39", "upload_time_iso_8601": "2018-08-09T19:17:39.642060Z", "url": "https://files.pythonhosted.org/packages/9b/21/01fedb9bd4abce135ea585b146591e5e7bb6ffcdc254ed96a48b5d375f12/qcore-0.5.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08385c4a4e47fde37742595e4ddc3d99", "sha256": "01ac4f9bd190d1ff277fca3098d26141afb93ebd8133e106c7c0578bf8d29d4a"}, "downloads": -1, "filename": "qcore-0.5.0-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "08385c4a4e47fde37742595e4ddc3d99", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1653318, "upload_time": "2018-08-09T19:18:33", "upload_time_iso_8601": "2018-08-09T19:18:33.288553Z", "url": "https://files.pythonhosted.org/packages/e0/2f/4de17921ba1d35b88c46508ae13353679c77c4c1e541af6824b3227a7988/qcore-0.5.0-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c8ae3bcf610787de1bfab0bdbad2874", "sha256": "1afe623fe28edc8fdd7edc9ac410cfe3a655d5fb34b2f7ac94e55333afab5177"}, "downloads": -1, "filename": "qcore-0.5.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4c8ae3bcf610787de1bfab0bdbad2874", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1612967, "upload_time": "2018-08-09T19:18:15", "upload_time_iso_8601": "2018-08-09T19:18:15.292905Z", "url": "https://files.pythonhosted.org/packages/6f/8e/f28f330768850211a2ff79ff31c97cf812f53bf0bb14ccce889abdd53308/qcore-0.5.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5da679a79f78837c9c4ba8b2f7f1a4e2", "sha256": "c9d84b0ad66c902411bf91979ad5bb4b59d386e41ee2250de9349131e8dd7892"}, "downloads": -1, "filename": "qcore-0.5.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "5da679a79f78837c9c4ba8b2f7f1a4e2", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1667108, "upload_time": "2018-08-09T19:17:56", "upload_time_iso_8601": "2018-08-09T19:17:56.026415Z", "url": "https://files.pythonhosted.org/packages/e3/91/519cef5ea3f1a189f152d0333f96d2a6c44bebe803d8e3ad20451e25d3a2/qcore-0.5.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27275931b4dc314ee27112edefd14449", "sha256": "693444b7374f4ff7c7230154a282f26b487a8314c3a36dfaa550c29e925bd7a6"}, "downloads": -1, "filename": "qcore-0.5.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "27275931b4dc314ee27112edefd14449", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1653234, "upload_time": "2018-08-09T19:18:26", "upload_time_iso_8601": "2018-08-09T19:18:26.331440Z", "url": "https://files.pythonhosted.org/packages/e5/96/385211e67876569cad91464a5e52d527725261e724d9f4ae93b8e2981c1a/qcore-0.5.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4cfbae9c7a93d2483a9c46c7e9d02ce", "sha256": "2cc2392e8184df6d99218f67615b15cedc09de89cf6dedc19e6f2799a0d09a3c"}, "downloads": -1, "filename": "qcore-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c4cfbae9c7a93d2483a9c46c7e9d02ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33494, "upload_time": "2018-08-09T19:18:28", "upload_time_iso_8601": "2018-08-09T19:18:28.023514Z", "url": "https://files.pythonhosted.org/packages/df/e5/8b4bc1b4cc85c1c93bb8941044519154e2a3a9908858d2408854013db41f/qcore-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "ff2c84d79145b49f95ecddaab7e36377", "sha256": "ce59c653a29b509c78ed430963f2047f3e862e2a2f2355ef71d044156d6b6254"}, "downloads": -1, "filename": "qcore-0.5.1-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ff2c84d79145b49f95ecddaab7e36377", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1487315, "upload_time": "2018-08-10T01:31:08", "upload_time_iso_8601": "2018-08-10T01:31:08.242561Z", "url": "https://files.pythonhosted.org/packages/0a/6c/b6d6edfbffe34178ca4a8f155cf00ae4cb31bc68b4ad85011c05c6b5ce90/qcore-0.5.1-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77039b6ad4c4b932171743c2c77e3e5b", "sha256": "3f0dd9beebc146b7e0e107e719398e35a0c0c7528738eab3afe3c435835a813e"}, "downloads": -1, "filename": "qcore-0.5.1-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "77039b6ad4c4b932171743c2c77e3e5b", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1657729, "upload_time": "2018-08-10T01:31:31", "upload_time_iso_8601": "2018-08-10T01:31:31.805268Z", "url": "https://files.pythonhosted.org/packages/4b/bd/2a760b95bc2b76dbc6044363f7c34be51866d64fbd3cebb2246f2acf2631/qcore-0.5.1-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa00bc8ff735d034358233fc7da1f984", "sha256": "815c7f123e3e9235ad14c594a770f97bb19c0cd66e4151f276b6e9c685e0bdb6"}, "downloads": -1, "filename": "qcore-0.5.1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "fa00bc8ff735d034358233fc7da1f984", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1617605, "upload_time": "2018-08-10T01:32:23", "upload_time_iso_8601": "2018-08-10T01:32:23.647470Z", "url": "https://files.pythonhosted.org/packages/5d/64/cd7b9f6d2bac630e97c8070d4ccf7fa2ca3fe8117a6d2e851c3753762b29/qcore-0.5.1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f924fc5a25bf02872db07c0d70f288a6", "sha256": "71779f5d656fb31ffb46f5ca3949f616ce3de8ba609353eaccc55b96e3602bdf"}, "downloads": -1, "filename": "qcore-0.5.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f924fc5a25bf02872db07c0d70f288a6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1671478, "upload_time": "2018-08-10T01:33:26", "upload_time_iso_8601": "2018-08-10T01:33:26.557376Z", "url": "https://files.pythonhosted.org/packages/f6/ca/89fe1df826cf8accf495d48587b383e88cdcadb4a708771d495110bf377a/qcore-0.5.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d52c73f1850c58f17e06f06b32b260e", "sha256": "c50dc67aa271b5b979b0487497a8765b1d86115a18df158b5a7f2be5fd153b23"}, "downloads": -1, "filename": "qcore-0.5.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8d52c73f1850c58f17e06f06b32b260e", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1658824, "upload_time": "2018-08-10T01:34:12", "upload_time_iso_8601": "2018-08-10T01:34:12.003392Z", "url": "https://files.pythonhosted.org/packages/e7/f6/efd50673bce897590cb3ba99d83e1dd3138e7289637e082b6603c9389975/qcore-0.5.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f66b4a1c49823f8f4b53180bd60bcb6c", "sha256": "e5226f29b1607f0036d62b510c32747fa9cd266f89c09c864ac121eb6274387c"}, "downloads": -1, "filename": "qcore-0.5.1.tar.gz", "has_sig": false, "md5_digest": "f66b4a1c49823f8f4b53180bd60bcb6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33620, "upload_time": "2018-08-10T01:34:14", "upload_time_iso_8601": "2018-08-10T01:34:14.218715Z", "url": "https://files.pythonhosted.org/packages/ea/52/4265b5a86638f6a2f80aa1ea689b90ce803634ed2b881ca661141e58374e/qcore-0.5.1.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "153720087287e630ff8b552de29e264b", "sha256": "b5d70d3ee39ccbc500b490925f9dc0fb073022f7f874f5333492df9c41e2bd33"}, "downloads": -1, "filename": "qcore-1.6.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "153720087287e630ff8b552de29e264b", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1492825, "upload_time": "2020-04-03T20:29:10", "upload_time_iso_8601": "2020-04-03T20:29:10.657355Z", "url": "https://files.pythonhosted.org/packages/2c/69/5c8ab66499f98db89f1ddd177ddbd8f35e0520ca48c25b164f3140225d12/qcore-1.6.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "009ea5def2a700747c98401b8e62cd6c", "sha256": "b32984de9d419c74a8ea332c568b6beccc4335817a8ea8710cf8492a44f959df"}, "downloads": -1, "filename": "qcore-1.6.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "009ea5def2a700747c98401b8e62cd6c", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1622099, "upload_time": "2020-04-03T20:31:28", "upload_time_iso_8601": "2020-04-03T20:31:28.072129Z", "url": "https://files.pythonhosted.org/packages/99/d9/a31cea5089d4f271a30961e1d54f891c93c143697a5c7189b6933ff29701/qcore-1.6.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58f6b44c1c49ddead3acde3018807d40", "sha256": "636ef1931e820e712b1143878df15131918ec7902377d1e94896c96631a3843f"}, "downloads": -1, "filename": "qcore-1.6.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "58f6b44c1c49ddead3acde3018807d40", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1677597, "upload_time": "2020-04-03T20:31:19", "upload_time_iso_8601": "2020-04-03T20:31:19.905216Z", "url": "https://files.pythonhosted.org/packages/32/eb/41c946982b582f66540483bbc75ca45f66885f01dd663dcc3d524da45963/qcore-1.6.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7b36f8f583b8c445b506514a20aec8b", "sha256": "bd3f894ed2da40c17e669df9de6b4f8b5e22d8b92ce848a6eb0fc192878e7cd5"}, "downloads": -1, "filename": "qcore-1.6.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a7b36f8f583b8c445b506514a20aec8b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1663259, "upload_time": "2020-04-03T20:31:41", "upload_time_iso_8601": "2020-04-03T20:31:41.660800Z", "url": "https://files.pythonhosted.org/packages/be/21/dcd9d41b49cab544da29142bcc7d8d01d9e63bc9558ac3e7a0c90b03f5e3/qcore-1.6.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dad57f91e2482fcfc3b498b98aa3e669", "sha256": "484d1cdcb1bc1cc203074beb1a698e2573b44482501127ead11258972aab17ee"}, "downloads": -1, "filename": "qcore-1.6.0.tar.gz", "has_sig": false, "md5_digest": "dad57f91e2482fcfc3b498b98aa3e669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33592, "upload_time": "2020-04-03T20:31:43", "upload_time_iso_8601": "2020-04-03T20:31:43.127992Z", "url": "https://files.pythonhosted.org/packages/14/33/14294db434e916d8cfe4e07c12652df79cbdd41ce4ef0fb46af2f24b783e/qcore-1.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "153720087287e630ff8b552de29e264b", "sha256": "b5d70d3ee39ccbc500b490925f9dc0fb073022f7f874f5333492df9c41e2bd33"}, "downloads": -1, "filename": "qcore-1.6.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "153720087287e630ff8b552de29e264b", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1492825, "upload_time": "2020-04-03T20:29:10", "upload_time_iso_8601": "2020-04-03T20:29:10.657355Z", "url": "https://files.pythonhosted.org/packages/2c/69/5c8ab66499f98db89f1ddd177ddbd8f35e0520ca48c25b164f3140225d12/qcore-1.6.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "009ea5def2a700747c98401b8e62cd6c", "sha256": "b32984de9d419c74a8ea332c568b6beccc4335817a8ea8710cf8492a44f959df"}, "downloads": -1, "filename": "qcore-1.6.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "009ea5def2a700747c98401b8e62cd6c", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1622099, "upload_time": "2020-04-03T20:31:28", "upload_time_iso_8601": "2020-04-03T20:31:28.072129Z", "url": "https://files.pythonhosted.org/packages/99/d9/a31cea5089d4f271a30961e1d54f891c93c143697a5c7189b6933ff29701/qcore-1.6.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "58f6b44c1c49ddead3acde3018807d40", "sha256": "636ef1931e820e712b1143878df15131918ec7902377d1e94896c96631a3843f"}, "downloads": -1, "filename": "qcore-1.6.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "58f6b44c1c49ddead3acde3018807d40", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1677597, "upload_time": "2020-04-03T20:31:19", "upload_time_iso_8601": "2020-04-03T20:31:19.905216Z", "url": "https://files.pythonhosted.org/packages/32/eb/41c946982b582f66540483bbc75ca45f66885f01dd663dcc3d524da45963/qcore-1.6.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7b36f8f583b8c445b506514a20aec8b", "sha256": "bd3f894ed2da40c17e669df9de6b4f8b5e22d8b92ce848a6eb0fc192878e7cd5"}, "downloads": -1, "filename": "qcore-1.6.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a7b36f8f583b8c445b506514a20aec8b", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1663259, "upload_time": "2020-04-03T20:31:41", "upload_time_iso_8601": "2020-04-03T20:31:41.660800Z", "url": "https://files.pythonhosted.org/packages/be/21/dcd9d41b49cab544da29142bcc7d8d01d9e63bc9558ac3e7a0c90b03f5e3/qcore-1.6.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dad57f91e2482fcfc3b498b98aa3e669", "sha256": "484d1cdcb1bc1cc203074beb1a698e2573b44482501127ead11258972aab17ee"}, "downloads": -1, "filename": "qcore-1.6.0.tar.gz", "has_sig": false, "md5_digest": "dad57f91e2482fcfc3b498b98aa3e669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33592, "upload_time": "2020-04-03T20:31:43", "upload_time_iso_8601": "2020-04-03T20:31:43.127992Z", "url": "https://files.pythonhosted.org/packages/14/33/14294db434e916d8cfe4e07c12652df79cbdd41ce4ef0fb46af2f24b783e/qcore-1.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:58 2020"}