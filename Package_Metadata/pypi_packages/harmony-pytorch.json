{"info": {"author": "Yiming Yang, Bo Li", "author_email": "yyang43@mgh.harvard.edu, bli28@mgh.harvard.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows :: Windows 10", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Software Development :: Build Tools"], "description": "Harmony-Pytorch\n---------------\n\n|PyPI|\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/harmony-pytorch.svg\n   :target: https://pypi.org/project/harmony-pytorch\n\nThis is a Pytorch implementation of Harmony algorithm on single-cell sequencing data integration. Please see [Ilya Korsunsky et al., 2019](https://www.nature.com/articles/s41592-019-0619-0) for details.\n\nInstallation\n^^^^^^^^^^^^^\n\nThis package is published on PyPI::\n\n\tpip install harmony-pytorch\n\n\nUsage\n^^^^^^^^\n\nGeneral Case\n##############\n\nGiven an embedding ``X`` as a N-by-d matrix in numpy array structure (N for number of cells, d for embedding components) and cell attributes as a Data Frame ``df_metadata``, use Harmony for data integration as the following::\n\n\tfrom harmony import harmonize\n\tZ = harmonize(X, df_metadata, batch_key = 'Channel')\n\n\nwhere ``Channel`` is the attribute in ``df_metadata`` for batches. \n\nAlternatively, if there are multiple attributes for batches, write::\n\n\tZ = harmonize(X, df_metadata, batch_key = ['Lab', 'Date'])\n\n\nInput as AnnData Object\n##########################\n\nIt's easy for Harmony-pytorch to work with annotated count matrix data structure from `anndata <https://icb-anndata.readthedocs-hosted.com/en/stable/index.html>`_ package. Let ``adata`` be an AnnData object in Python::\n\n\tfrom harmony import harmonize\n\tZ = harmonize(adata.obsm['X_pca'], adata.obs, batch_key = 'Channel')\n\tadata.obsm['X_harmony'] = Z\n\n\nFor details about ``AnnData`` data structure, please refer to its `documentation <https://icb-anndata.readthedocs-hosted.com/en/stable/anndata.AnnData.html>`_.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lilab-bcb/harmony-pytorch", "keywords": "single-cell genomics data integration", "license": "", "maintainer": "", "maintainer_email": "", "name": "harmony-pytorch", "package_url": "https://pypi.org/project/harmony-pytorch/", "platform": "", "project_url": "https://pypi.org/project/harmony-pytorch/", "project_urls": {"Homepage": "https://github.com/lilab-bcb/harmony-pytorch"}, "release_url": "https://pypi.org/project/harmony-pytorch/0.1.3/", "requires_dist": ["torch", "numpy", "scikit-learn"], "requires_python": "~=3.5", "summary": "Pytorch implementation of Harmony algorithm on single-cell sequencing data integration", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/harmony-pytorch\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b17c801b3da12837c9e3b4b465d7a07e2840a7ca/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6861726d6f6e792d7079746f7263682e737667\"></a></p>\n<p>This is a Pytorch implementation of Harmony algorithm on single-cell sequencing data integration. Please see [Ilya Korsunsky et al., 2019](<a href=\"https://www.nature.com/articles/s41592-019-0619-0\" rel=\"nofollow\">https://www.nature.com/articles/s41592-019-0619-0</a>) for details.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This package is published on PyPI:</p>\n<pre>pip install harmony-pytorch\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"general-case\">\n<h3>General Case</h3>\n<p>Given an embedding <tt>X</tt> as a N-by-d matrix in numpy array structure (N for number of cells, d for embedding components) and cell attributes as a Data Frame <tt>df_metadata</tt>, use Harmony for data integration as the following:</p>\n<pre>from harmony import harmonize\nZ = harmonize(X, df_metadata, batch_key = 'Channel')\n</pre>\n<p>where <tt>Channel</tt> is the attribute in <tt>df_metadata</tt> for batches.</p>\n<p>Alternatively, if there are multiple attributes for batches, write:</p>\n<pre>Z = harmonize(X, df_metadata, batch_key = ['Lab', 'Date'])\n</pre>\n</div>\n<div id=\"input-as-anndata-object\">\n<h3>Input as AnnData Object</h3>\n<p>It\u2019s easy for Harmony-pytorch to work with annotated count matrix data structure from <a href=\"https://icb-anndata.readthedocs-hosted.com/en/stable/index.html\" rel=\"nofollow\">anndata</a> package. Let <tt>adata</tt> be an AnnData object in Python:</p>\n<pre>from harmony import harmonize\nZ = harmonize(adata.obsm['X_pca'], adata.obs, batch_key = 'Channel')\nadata.obsm['X_harmony'] = Z\n</pre>\n<p>For details about <tt>AnnData</tt> data structure, please refer to its <a href=\"https://icb-anndata.readthedocs-hosted.com/en/stable/anndata.AnnData.html\" rel=\"nofollow\">documentation</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7002899, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ab2babdcaf6a59285d763748b14c649e", "sha256": "c92ca88f8422842041703b3e92ec6b0990ffb039909ed39dc9e8054e1a2e9962"}, "downloads": -1, "filename": "harmony_pytorch-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ab2babdcaf6a59285d763748b14c649e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 7834, "upload_time": "2020-01-16T21:07:56", "upload_time_iso_8601": "2020-01-16T21:07:56.930783Z", "url": "https://files.pythonhosted.org/packages/42/f4/b616898fa372604a116a4ad2700569cc13eaf7a12958dae1822d80ea4a5f/harmony_pytorch-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a8a35fa33e58753fe179df45ee6e82c", "sha256": "4e0d6fb1ca1538f738c49002f08e7846a968d6abd6e21894b53faa13eafddfde"}, "downloads": -1, "filename": "harmony-pytorch-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9a8a35fa33e58753fe179df45ee6e82c", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 24961, "upload_time": "2020-01-16T21:07:59", "upload_time_iso_8601": "2020-01-16T21:07:59.077065Z", "url": "https://files.pythonhosted.org/packages/9c/4a/95ec280ca080b77f5a8d117e22c5e357213e335c599d5e9cf6abc49a8b9d/harmony-pytorch-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cb5cdfd681962737d266d26d8bead1a3", "sha256": "4e7dce4557213dcd87382d08a3328c99fb8da6d977367f44f1c886822279ee85"}, "downloads": -1, "filename": "harmony_pytorch-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cb5cdfd681962737d266d26d8bead1a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 7757, "upload_time": "2020-01-22T06:05:02", "upload_time_iso_8601": "2020-01-22T06:05:02.229106Z", "url": "https://files.pythonhosted.org/packages/36/f3/bd6d8e0e051d5967b8615f83592a8bfa2445769eed39fe2778f8a7ce0fb8/harmony_pytorch-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f6ce6305b7a3fae8c2241402447abd9", "sha256": "f2268e3078cc8531b770d2fcd8187cacf9cc53ccec56c7de7bf3c58638e05d74"}, "downloads": -1, "filename": "harmony-pytorch-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5f6ce6305b7a3fae8c2241402447abd9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 25081, "upload_time": "2020-01-22T06:05:03", "upload_time_iso_8601": "2020-01-22T06:05:03.688480Z", "url": "https://files.pythonhosted.org/packages/50/19/726fd2141f8c6e1a9e67335e9ee5ec417a137c4aa53a9dcfedbdef252904/harmony-pytorch-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "284b43227d87f32260cbb00d7a72f622", "sha256": "1c682be3ea5fa89c9aeac1ae6af15c66a7c9308454f8ef82c6f55f24c552a6ca"}, "downloads": -1, "filename": "harmony_pytorch-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "284b43227d87f32260cbb00d7a72f622", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 7888, "upload_time": "2020-03-09T02:12:24", "upload_time_iso_8601": "2020-03-09T02:12:24.182550Z", "url": "https://files.pythonhosted.org/packages/7b/a7/312170206c76d717f728563c5fdf2409763fa51f96f770301cb851fff064/harmony_pytorch-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e579befe3a46e2d2e7d879750ef505f9", "sha256": "b5299d0e60b4d33229764c9c434f13b71d205c5b00b69253e35dc9f85b559f13"}, "downloads": -1, "filename": "harmony-pytorch-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e579befe3a46e2d2e7d879750ef505f9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 25170, "upload_time": "2020-03-09T02:12:25", "upload_time_iso_8601": "2020-03-09T02:12:25.528076Z", "url": "https://files.pythonhosted.org/packages/c3/c4/5bf4e7bfa6f285305e9021dfb952dc556cfeb7ee18f8d782e82656496e8d/harmony-pytorch-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f098607352e944308b7ffe78b44fe4c0", "sha256": "aadba891656429bd24a5ccee2cb9d2fff9742608647044d01ba736730853c38c"}, "downloads": -1, "filename": "harmony_pytorch-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f098607352e944308b7ffe78b44fe4c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 7885, "upload_time": "2020-04-12T04:42:28", "upload_time_iso_8601": "2020-04-12T04:42:28.537270Z", "url": "https://files.pythonhosted.org/packages/1b/19/ce57a9c9680b618f0246c2da6801bcbf4567a5901ecadff4df2b721512cf/harmony_pytorch-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56e2fddf1c7835919834007264e0db21", "sha256": "df2dec17c1dff888d4bd6403aefe253918db30318ac45662c13a228d3ba3a488"}, "downloads": -1, "filename": "harmony-pytorch-0.1.3.tar.gz", "has_sig": false, "md5_digest": "56e2fddf1c7835919834007264e0db21", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 25216, "upload_time": "2020-04-12T04:42:29", "upload_time_iso_8601": "2020-04-12T04:42:29.841384Z", "url": "https://files.pythonhosted.org/packages/5f/ca/79ad426eb16c7791e104841a33c85373d5cdbdceb6f5414eee2fd7f30661/harmony-pytorch-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f098607352e944308b7ffe78b44fe4c0", "sha256": "aadba891656429bd24a5ccee2cb9d2fff9742608647044d01ba736730853c38c"}, "downloads": -1, "filename": "harmony_pytorch-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f098607352e944308b7ffe78b44fe4c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.5", "size": 7885, "upload_time": "2020-04-12T04:42:28", "upload_time_iso_8601": "2020-04-12T04:42:28.537270Z", "url": "https://files.pythonhosted.org/packages/1b/19/ce57a9c9680b618f0246c2da6801bcbf4567a5901ecadff4df2b721512cf/harmony_pytorch-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56e2fddf1c7835919834007264e0db21", "sha256": "df2dec17c1dff888d4bd6403aefe253918db30318ac45662c13a228d3ba3a488"}, "downloads": -1, "filename": "harmony-pytorch-0.1.3.tar.gz", "has_sig": false, "md5_digest": "56e2fddf1c7835919834007264e0db21", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.5", "size": 25216, "upload_time": "2020-04-12T04:42:29", "upload_time_iso_8601": "2020-04-12T04:42:29.841384Z", "url": "https://files.pythonhosted.org/packages/5f/ca/79ad426eb16c7791e104841a33c85373d5cdbdceb6f5414eee2fd7f30661/harmony-pytorch-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:26 2020"}