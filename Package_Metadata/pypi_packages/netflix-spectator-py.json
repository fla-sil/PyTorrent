{"info": {"author": "Brian Harrington", "author_email": "netflix-atlas@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development"], "description": "\n[![Build Status](https://travis-ci.org/Netflix/spectator-py.svg)](https://travis-ci.org/Netflix/spectator-py/builds)\n\n## Introduction\n\nPython port of the [Spectator] library for Java.\n\nSee the Spectator [documentation] for an overview of core concepts and details on [usage].\n\nSupports Python >= 2.7, with Python >= 3.6 recommended.\n\n[Spectator]: https://github.com/Netflix/spectator/\n[documentation]: https://netflix.github.io/atlas-docs/spectator/\n[usage]: https://netflix.github.io/atlas-docs/spectator/lang/py/usage/\n\n## Usage\n\nImporting the `GlobalRegistry` sets up Spectator to report data to an Atlas Aggregator backend\nevery five seconds. A configuration package must be installed in order for this step to succeed.\nAt Netflix, the configuration package is named `netflix-spectator-pyconf`.\n\n```python\nfrom spectator import GlobalRegistry\n```\n\nOnce the `GlobalRegistry` is imported, it is used to create and manage Meters.\n\n## Meter Types\n\n### Counters\n\nA Counter is used to measure the rate at which an event is occurring. Considering an API\nendpoint, a Counter could be used to measure the rate at which it is being accessed.\n\nCounters are reported to the backend as a rate-per-second. In Atlas, the `:per-step` operator\ncan be used to convert them back into a value-per-step on a graph.\n\nCall `increment()` when an event occurs:\n\n```python\nGlobalRegistry.counter('server.numRequests').increment()\n```\n\nYou can also pass a value to `increment()`. This is useful when a collection of events happens\ntogether:\n\n```python\nGlobalRegistry.counter('queue.itemsAdded').increment(10)\n```\n\n### Distribution Summaries\n\nA Distribution Summary is used to track the distribution of events. It is similar to a Timer, but\nmore general, in that the size does not have to be a period of time. For example, a Distribution\nSummary could be used to measure the payload sizes of requests hitting a server.\n\nAlways use base units when recording data, to ensure that the tick labels presented on Atlas graphs\nare readable. If you are measuring payload size, then use bytes, not kilobytes (or some other unit).\nThis means that a `4K` tick label will represent 4 kilobytes, rather than 4 kilo-kilobytes.\n\nCall `record()` with a value:\n\n```python\nGlobalRegistry.distribution_summary('server.requestSize').record(10)\n```\n\n### Gauges\n\nA gauge is a value that is sampled at some point in time. Typical examples for gauges would be\nthe size of a queue or number of threads in a running state. Since gauges are not updated inline\nwhen a state change occurs, there is no information about what might have occurred between samples.\n\nConsider monitoring the behavior of a queue of tasks. If the data is being collected once a minute,\nthen a gauge for the size will show the size when it was sampled. The size may have been much\nhigher or lower at some point during interval, but that is not known.\n\nCall `set()` with a value:\n\n```python\nGlobalRegistry.gauge('server.queueSize').set(10)\n```\n\nGauges are designed to report the last set value for 15 minutes. This done so that updates to the\nvalues do not need to be collected on a tight 1-minute schedule to ensure that Atlas shows\nunbroken lines in graphs.\n\nIf you wish to no longer report a Gauge value, then set it to `float('nan')`. This is a separate\nand distinct value from `'nan'` or `'NaN'`, which are strings.\n\n### Timers\n\nA Timer is used to measure how long (in seconds) some event is taking.\n\nCall `record()` with a value:\n\n```python\nGlobalRegistry.timer('server.requestLatency').record(0.01)\n```\n\nTimers will keep track of the following statistics as they are used:\n\n* `count`\n* `totalTime`\n* `totalOfSquares`\n* `max`\n\n## Local Development\n\n* Install [pyenv](https://github.com/pyenv/pyenv), possibly with [Homebrew](https://brew.sh/).\n* Install Python versions: 2.7, 3.6, 3.7, and 3.8. Enable all versions globally.\n* Make changes and add tests.\n* `tox`\n\n## Release Process\n\n1. Pre-Requisites.\n\n    1. Install packaging tools.\n\n            pip3 install setuptools wheel twine\n\n    1. Configure [PyPI] username.\n\n            cat >~/.pypirc <<EOF\n            [distutils]\n            index-servers = pypi\n\n            [pypi]\n            username: $PYPI_USERNAME\n            EOF\n\n1. Bump the version number in [setup.py](./setup.py).\n\n1. Tag the repo and write release notes. The goal is for the [releases] page to be readable.\n\n    1. Clone the upstream project.\n\n    1. Create a new tag.\n\n            git tag v0.1.X\n\n    1. Push the tags to the origin.\n\n            git push origin --tags\n\n    1. Project > Releases > Tags > Select Tag > Create Release\n\n            Primary changes:\n\n            - #<PR number>, <short description>.\n\n            A comprehensive list of changes can be found in the commit log: https://github.com/Netflix/spectator-py/compare/v0.1.<N-1>...v0.1.<N>\n\n1. On your local machine, checkout the tag and run the following command, which will build the\npackage and upload it to [PyPI].\n\n        git checkout $TAG\n        python3 setup.py sdist bdist_wheel\n        twine check dist/*\n        twine upload dist/*\n\nExample release commits:\n\n* [#23](https://github.com/Netflix/spectator-py/commit/5f8ed9dc14ff97315bf579c8d431a00a17037fc0)\n* [#24](https://github.com/Netflix/spectator-py/commit/10bf2d0345175f014035d36adb15e2d6ae69e10c)\n\n[PyPI]: https://pypi.org/project/netflix-spectator-py/\n[releases]: https://github.com/Netflix/spectator-py/releases\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/netflix/spectator-py/", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "netflix-spectator-py", "package_url": "https://pypi.org/project/netflix-spectator-py/", "platform": "", "project_url": "https://pypi.org/project/netflix-spectator-py/", "project_urls": {"Homepage": "https://github.com/netflix/spectator-py/"}, "release_url": "https://pypi.org/project/netflix-spectator-py/0.1.14/", "requires_dist": ["future"], "requires_python": "", "summary": "Python library for reporting metrics to Atlas.", "version": "0.1.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/Netflix/spectator-py/builds\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10d065a4467ecbbe9e8cc7cb3e64e565c4e6ba6a/68747470733a2f2f7472617669732d63692e6f72672f4e6574666c69782f737065637461746f722d70792e737667\"></a></p>\n<h2>Introduction</h2>\n<p>Python port of the <a href=\"https://github.com/Netflix/spectator/\" rel=\"nofollow\">Spectator</a> library for Java.</p>\n<p>See the Spectator <a href=\"https://netflix.github.io/atlas-docs/spectator/\" rel=\"nofollow\">documentation</a> for an overview of core concepts and details on <a href=\"https://netflix.github.io/atlas-docs/spectator/lang/py/usage/\" rel=\"nofollow\">usage</a>.</p>\n<p>Supports Python &gt;= 2.7, with Python &gt;= 3.6 recommended.</p>\n<h2>Usage</h2>\n<p>Importing the <code>GlobalRegistry</code> sets up Spectator to report data to an Atlas Aggregator backend\nevery five seconds. A configuration package must be installed in order for this step to succeed.\nAt Netflix, the configuration package is named <code>netflix-spectator-pyconf</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">spectator</span> <span class=\"kn\">import</span> <span class=\"n\">GlobalRegistry</span>\n</pre>\n<p>Once the <code>GlobalRegistry</code> is imported, it is used to create and manage Meters.</p>\n<h2>Meter Types</h2>\n<h3>Counters</h3>\n<p>A Counter is used to measure the rate at which an event is occurring. Considering an API\nendpoint, a Counter could be used to measure the rate at which it is being accessed.</p>\n<p>Counters are reported to the backend as a rate-per-second. In Atlas, the <code>:per-step</code> operator\ncan be used to convert them back into a value-per-step on a graph.</p>\n<p>Call <code>increment()</code> when an event occurs:</p>\n<pre><span class=\"n\">GlobalRegistry</span><span class=\"o\">.</span><span class=\"n\">counter</span><span class=\"p\">(</span><span class=\"s1\">'server.numRequests'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">increment</span><span class=\"p\">()</span>\n</pre>\n<p>You can also pass a value to <code>increment()</code>. This is useful when a collection of events happens\ntogether:</p>\n<pre><span class=\"n\">GlobalRegistry</span><span class=\"o\">.</span><span class=\"n\">counter</span><span class=\"p\">(</span><span class=\"s1\">'queue.itemsAdded'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">increment</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<h3>Distribution Summaries</h3>\n<p>A Distribution Summary is used to track the distribution of events. It is similar to a Timer, but\nmore general, in that the size does not have to be a period of time. For example, a Distribution\nSummary could be used to measure the payload sizes of requests hitting a server.</p>\n<p>Always use base units when recording data, to ensure that the tick labels presented on Atlas graphs\nare readable. If you are measuring payload size, then use bytes, not kilobytes (or some other unit).\nThis means that a <code>4K</code> tick label will represent 4 kilobytes, rather than 4 kilo-kilobytes.</p>\n<p>Call <code>record()</code> with a value:</p>\n<pre><span class=\"n\">GlobalRegistry</span><span class=\"o\">.</span><span class=\"n\">distribution_summary</span><span class=\"p\">(</span><span class=\"s1\">'server.requestSize'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<h3>Gauges</h3>\n<p>A gauge is a value that is sampled at some point in time. Typical examples for gauges would be\nthe size of a queue or number of threads in a running state. Since gauges are not updated inline\nwhen a state change occurs, there is no information about what might have occurred between samples.</p>\n<p>Consider monitoring the behavior of a queue of tasks. If the data is being collected once a minute,\nthen a gauge for the size will show the size when it was sampled. The size may have been much\nhigher or lower at some point during interval, but that is not known.</p>\n<p>Call <code>set()</code> with a value:</p>\n<pre><span class=\"n\">GlobalRegistry</span><span class=\"o\">.</span><span class=\"n\">gauge</span><span class=\"p\">(</span><span class=\"s1\">'server.queueSize'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>Gauges are designed to report the last set value for 15 minutes. This done so that updates to the\nvalues do not need to be collected on a tight 1-minute schedule to ensure that Atlas shows\nunbroken lines in graphs.</p>\n<p>If you wish to no longer report a Gauge value, then set it to <code>float('nan')</code>. This is a separate\nand distinct value from <code>'nan'</code> or <code>'NaN'</code>, which are strings.</p>\n<h3>Timers</h3>\n<p>A Timer is used to measure how long (in seconds) some event is taking.</p>\n<p>Call <code>record()</code> with a value:</p>\n<pre><span class=\"n\">GlobalRegistry</span><span class=\"o\">.</span><span class=\"n\">timer</span><span class=\"p\">(</span><span class=\"s1\">'server.requestLatency'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">record</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n</pre>\n<p>Timers will keep track of the following statistics as they are used:</p>\n<ul>\n<li><code>count</code></li>\n<li><code>totalTime</code></li>\n<li><code>totalOfSquares</code></li>\n<li><code>max</code></li>\n</ul>\n<h2>Local Development</h2>\n<ul>\n<li>Install <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a>, possibly with <a href=\"https://brew.sh/\" rel=\"nofollow\">Homebrew</a>.</li>\n<li>Install Python versions: 2.7, 3.6, 3.7, and 3.8. Enable all versions globally.</li>\n<li>Make changes and add tests.</li>\n<li><code>tox</code></li>\n</ul>\n<h2>Release Process</h2>\n<ol>\n<li>\n<p>Pre-Requisites.</p>\n<ol>\n<li>\n<p>Install packaging tools.</p>\n<pre><code> pip3 install setuptools wheel twine\n</code></pre>\n</li>\n<li>\n<p>Configure <a href=\"https://pypi.org/project/netflix-spectator-py/\" rel=\"nofollow\">PyPI</a> username.</p>\n<pre><code> cat &gt;~/.pypirc &lt;&lt;EOF\n [distutils]\n index-servers = pypi\n\n [pypi]\n username: $PYPI_USERNAME\n EOF\n</code></pre>\n</li>\n</ol>\n</li>\n<li>\n<p>Bump the version number in <a href=\"./setup.py\" rel=\"nofollow\">setup.py</a>.</p>\n</li>\n<li>\n<p>Tag the repo and write release notes. The goal is for the <a href=\"https://github.com/Netflix/spectator-py/releases\" rel=\"nofollow\">releases</a> page to be readable.</p>\n<ol>\n<li>\n<p>Clone the upstream project.</p>\n</li>\n<li>\n<p>Create a new tag.</p>\n<pre><code> git tag v0.1.X\n</code></pre>\n</li>\n<li>\n<p>Push the tags to the origin.</p>\n<pre><code> git push origin --tags\n</code></pre>\n</li>\n<li>\n<p>Project &gt; Releases &gt; Tags &gt; Select Tag &gt; Create Release</p>\n<pre><code> Primary changes:\n\n - #&lt;PR number&gt;, &lt;short description&gt;.\n\n A comprehensive list of changes can be found in the commit log: https://github.com/Netflix/spectator-py/compare/v0.1.&lt;N-1&gt;...v0.1.&lt;N&gt;\n</code></pre>\n</li>\n</ol>\n</li>\n<li>\n<p>On your local machine, checkout the tag and run the following command, which will build the\npackage and upload it to <a href=\"https://pypi.org/project/netflix-spectator-py/\" rel=\"nofollow\">PyPI</a>.</p>\n<pre><code> git checkout $TAG\n python3 setup.py sdist bdist_wheel\n twine check dist/*\n twine upload dist/*\n</code></pre>\n</li>\n</ol>\n<p>Example release commits:</p>\n<ul>\n<li><a href=\"https://github.com/Netflix/spectator-py/commit/5f8ed9dc14ff97315bf579c8d431a00a17037fc0\" rel=\"nofollow\">#23</a></li>\n<li><a href=\"https://github.com/Netflix/spectator-py/commit/10bf2d0345175f014035d36adb15e2d6ae69e10c\" rel=\"nofollow\">#24</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7069695, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "00a873ecba4bd3dc888b8f37ded34284", "sha256": "842c3d52c9363e68dbe58af7667a3e57ff04603a9c2493aebf71d68493479199"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.tar.gz", "has_sig": false, "md5_digest": "00a873ecba4bd3dc888b8f37ded34284", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8857, "upload_time": "2018-03-15T05:03:53", "upload_time_iso_8601": "2018-03-15T05:03:53.595634Z", "url": "https://files.pythonhosted.org/packages/e7/e0/1611047fa08067033b7e2cd655e7ce189174648b79a588fb76617eee7f9a/netflix-spectator-py-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f963f50acda4a0cdc15db0a2d3791cb6", "sha256": "9bdeb3a604fe19ffc8c38c77581bebdc32bed7e56c60aa099b30b073ede87fd5"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f963f50acda4a0cdc15db0a2d3791cb6", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9621, "upload_time": "2018-03-15T18:03:52", "upload_time_iso_8601": "2018-03-15T18:03:52.617898Z", "url": "https://files.pythonhosted.org/packages/1e/52/9a6b0e0604f33bd583aaa789804dc2082f38ae8f3ba674f8e12116500d8a/netflix_spectator_py-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af0068d386e8117a0add7457b4f80338", "sha256": "8f18d88ceb4276603e8008583ed02203feec07b4c6aef4c06d70aa17873f6c6e"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.1.tar.gz", "has_sig": false, "md5_digest": "af0068d386e8117a0add7457b4f80338", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9053, "upload_time": "2018-03-15T14:53:29", "upload_time_iso_8601": "2018-03-15T14:53:29.667298Z", "url": "https://files.pythonhosted.org/packages/f5/f6/dc2f81e3a8dc39354c6a6c7394d719647978fc4f988d9b66c761ec54af80/netflix-spectator-py-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "7d61e1718bc4ee42df44cb8d386c2dee", "sha256": "e479c369bb18f989b5643d5bbae3ef6e17d02d838e8c5720d8e9d27cf5c1bb49"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d61e1718bc4ee42df44cb8d386c2dee", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12897, "upload_time": "2019-06-03T23:11:27", "upload_time_iso_8601": "2019-06-03T23:11:27.857961Z", "url": "https://files.pythonhosted.org/packages/e8/03/ba8c42cc404199950129b96f16023eb65d8f5c7d5310cc2026b6be15e4fd/netflix_spectator_py-0.1.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f60f89cd2a7d93576915bc7c43c6d1e6", "sha256": "868f893e2bb01275ae0468209faaf4e6bdaa380d063e21352aca41bc9464f200"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.10.tar.gz", "has_sig": false, "md5_digest": "f60f89cd2a7d93576915bc7c43c6d1e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13833, "upload_time": "2019-06-03T23:11:25", "upload_time_iso_8601": "2019-06-03T23:11:25.877355Z", "url": "https://files.pythonhosted.org/packages/c6/57/3e86abb9dfee3aba97766d45fcc5e4cda421d750f75fac4d917a0510f25e/netflix-spectator-py-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "bdb0e39b0ac134127d48c92ebc7078f9", "sha256": "0f8fb2d2745af6f62fbee5c61f8f2092120ff1cf8b1b8ec3fad216dfac2e59d9"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bdb0e39b0ac134127d48c92ebc7078f9", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 13111, "upload_time": "2019-11-08T05:22:09", "upload_time_iso_8601": "2019-11-08T05:22:09.263693Z", "url": "https://files.pythonhosted.org/packages/1d/e9/4bd9a24a0cd1ca8263d9a8e1b5e4623cf9d21a51277c5b00eca08a93b526/netflix_spectator_py-0.1.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "968ea061fea9c203c8f09e26b11734cf", "sha256": "8abe3367b5fac3fe0a2f150d7080ac026a23799c5af8a54e51ceb13e6af77743"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.11.tar.gz", "has_sig": false, "md5_digest": "968ea061fea9c203c8f09e26b11734cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14044, "upload_time": "2019-11-08T05:22:07", "upload_time_iso_8601": "2019-11-08T05:22:07.064305Z", "url": "https://files.pythonhosted.org/packages/34/ba/5b1b930b289792f9b8092efab22e503d8e7841b573a9cd05df2ba6a4f170/netflix-spectator-py-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "2843f206a1091326d935b20baec947b4", "sha256": "1f95aa199963bbab913a87ef307d8585e45c8c20d2c3c45944b7075250da0a58"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2843f206a1091326d935b20baec947b4", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 17306, "upload_time": "2019-12-12T19:09:43", "upload_time_iso_8601": "2019-12-12T19:09:43.592586Z", "url": "https://files.pythonhosted.org/packages/e6/45/eb83776d6787b0e9bced3b989e08877b9e295fe807225003bbd4c49a1534/netflix_spectator_py-0.1.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfe14179600653eb4e657add1b7962a0", "sha256": "5259972dcb517c4bbd029b96c1a211cbed78c8f8b741db023765cf17f34e015e"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.12.tar.gz", "has_sig": false, "md5_digest": "bfe14179600653eb4e657add1b7962a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14164, "upload_time": "2019-12-12T19:09:41", "upload_time_iso_8601": "2019-12-12T19:09:41.402159Z", "url": "https://files.pythonhosted.org/packages/41/fd/62cd7593ba059a3adf1a87829fc2332309a5e452d2dde8e8d72df1189758/netflix-spectator-py-0.1.12.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "e36031541191a6a32e392a33b8ce10b6", "sha256": "c10e7509524d15c7c7d6483c450245ebeaf3cf31a4d4d0c065d2453fcfac6301"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e36031541191a6a32e392a33b8ce10b6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18283, "upload_time": "2020-02-04T22:30:55", "upload_time_iso_8601": "2020-02-04T22:30:55.165351Z", "url": "https://files.pythonhosted.org/packages/bc/42/9dbd927820156a4b1ac3cd8494c5f0d31a7671e50f398f149923a68b7369/netflix_spectator_py-0.1.13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75f485e0e0ee1bdf8a3d89a6237c34bd", "sha256": "2985f6228ed5e39bef4d7a19cb6f98b760f79455a6d2b91b1e246b099a573f47"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.13.tar.gz", "has_sig": false, "md5_digest": "75f485e0e0ee1bdf8a3d89a6237c34bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15951, "upload_time": "2020-02-04T22:30:56", "upload_time_iso_8601": "2020-02-04T22:30:56.979986Z", "url": "https://files.pythonhosted.org/packages/db/2d/21927b18678b85784d82a04f8a2b55a02de7a3801965ff27d6bc02c70a4d/netflix-spectator-py-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "c6d167ff1d38a8a7bca1d729270b3f59", "sha256": "b05ebbedf531559093688aad9dd6b0d7958db548567eded8fd4a661ab106746a"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c6d167ff1d38a8a7bca1d729270b3f59", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19621, "upload_time": "2020-04-21T17:52:57", "upload_time_iso_8601": "2020-04-21T17:52:57.585633Z", "url": "https://files.pythonhosted.org/packages/f8/8d/a7865fb4b561c7f276462e6d5683fa60fd8a256bf170e7b653e48badaef9/netflix_spectator_py-0.1.14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd6df38629b9939e1d059a73814f9216", "sha256": "3e50edd62abc821faab59da7881acc192832ba0d3a3445d263a3f48d58e6f9ed"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.14.tar.gz", "has_sig": false, "md5_digest": "cd6df38629b9939e1d059a73814f9216", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23230, "upload_time": "2020-04-21T17:52:59", "upload_time_iso_8601": "2020-04-21T17:52:59.868130Z", "url": "https://files.pythonhosted.org/packages/3c/5c/7b5094d480cebb5deb38f3d5d161bd784ab32a0a16333b196c236777eac8/netflix-spectator-py-0.1.14.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "bfd69f8068f43dc0aec5b654cac19d14", "sha256": "bcff075b3788de4ed4287fe5376d24b0e250aada309ca86b1fa698d8b638654e"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bfd69f8068f43dc0aec5b654cac19d14", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9637, "upload_time": "2018-03-15T18:12:33", "upload_time_iso_8601": "2018-03-15T18:12:33.539497Z", "url": "https://files.pythonhosted.org/packages/0e/2b/46a379a4d8b4083c6349a08911f805821d6fdb844340820f6951f598394c/netflix_spectator_py-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a3f6ad67199c6d64301e6d9e6251af3", "sha256": "2bc52d216c1039eb119130598a4016f66e40e0a00de95bada184f41f2f42c56f"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4a3f6ad67199c6d64301e6d9e6251af3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9492, "upload_time": "2018-03-15T18:12:31", "upload_time_iso_8601": "2018-03-15T18:12:31.499481Z", "url": "https://files.pythonhosted.org/packages/9c/f1/14e559b716d182eddd6167639427d7ccddb023bdecaaedff5d505641ee68/netflix-spectator-py-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "1b91190e61ce872d2fd3c8ba5a5743ad", "sha256": "85bf2681787d6a7213bfdf87d090d189323683f650ba9497b3eaf67a7f65f156"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1b91190e61ce872d2fd3c8ba5a5743ad", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 16289, "upload_time": "2018-03-20T17:14:37", "upload_time_iso_8601": "2018-03-20T17:14:37.114108Z", "url": "https://files.pythonhosted.org/packages/54/97/a06499520c251afbabc3f6224fe69347f1085593f68e7e8478d1317653fc/netflix_spectator_py-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bc97894a114619d18de580e50a6dd00", "sha256": "cca0eefb1d0bdd43eca0b0af4748d1a278be37cc750b4223f1643029649fbe41"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0bc97894a114619d18de580e50a6dd00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9632, "upload_time": "2018-03-20T17:14:35", "upload_time_iso_8601": "2018-03-20T17:14:35.541315Z", "url": "https://files.pythonhosted.org/packages/74/eb/c46ca9d50d5115d29c8cd7f3da710f517a013d2d04153868aa9c2ab68f05/netflix-spectator-py-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "93b2937ff1729fc7190909345876a5ec", "sha256": "2539ebc34eae070af7dd9c96e05b4c0bc8d4130c6ab96ab901f8c8a47ecba164"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "93b2937ff1729fc7190909345876a5ec", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9186, "upload_time": "2018-04-26T15:43:41", "upload_time_iso_8601": "2018-04-26T15:43:41.773667Z", "url": "https://files.pythonhosted.org/packages/b2/e5/227ec76eba1bd9ee5c3d7a441e6e5ada6a51bbfcb06d378acef5ca12d9c9/netflix_spectator_py-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66a0b2f135e0bc562b82b9138be47e7e", "sha256": "da37dc6898bbface275f6e09184eae2e8f80f3ff45e32a24e0e0915cc200a46e"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.4.tar.gz", "has_sig": false, "md5_digest": "66a0b2f135e0bc562b82b9138be47e7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9636, "upload_time": "2018-04-26T15:43:40", "upload_time_iso_8601": "2018-04-26T15:43:40.373110Z", "url": "https://files.pythonhosted.org/packages/9d/f6/51255155c7be3690fea0a5cb42d0d19beebef9fc56644ee6fa22ce8e4540/netflix-spectator-py-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "e0f42cec7e43b2ba0aeaa7d132c80a2e", "sha256": "2268636c140c560328dbd74d2fd8a4ea54d692e4f2816662b5af36d3ca44f4c8"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e0f42cec7e43b2ba0aeaa7d132c80a2e", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9465, "upload_time": "2018-04-26T21:18:52", "upload_time_iso_8601": "2018-04-26T21:18:52.759234Z", "url": "https://files.pythonhosted.org/packages/9a/ad/5214f0dc7a8ac3829ddd446cb3477a699159fac8837bcb472771318520d8/netflix_spectator_py-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47e03d53d6ab32aadee3ad17eafb81fa", "sha256": "f31c2e354997d4aea0b671403b378876820c9663e2273e3ad371d0698f10c81a"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.5.tar.gz", "has_sig": false, "md5_digest": "47e03d53d6ab32aadee3ad17eafb81fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9800, "upload_time": "2018-04-26T21:18:51", "upload_time_iso_8601": "2018-04-26T21:18:51.418397Z", "url": "https://files.pythonhosted.org/packages/b3/82/4e819271833793d5b1a3702a794ae9672db77962e3c8d1de780377b365dc/netflix-spectator-py-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "6042a7b54864a719d4008a631532c36f", "sha256": "29fff90b8ef3a01d6cb882591b54164f04e6ad7b2eabd5e65a5d0c6c10a98b31"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6042a7b54864a719d4008a631532c36f", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 8551, "upload_time": "2018-10-05T21:03:56", "upload_time_iso_8601": "2018-10-05T21:03:56.886050Z", "url": "https://files.pythonhosted.org/packages/79/be/ac15535894bb0dd9b1727c997f0d96c9b4f0765b077a4ef6aaf1cc1e9436/netflix_spectator_py-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd81c05a37f17682d9c99ef56e1bdfc5", "sha256": "0c92ef8eb76a7793f4e2c8553647c7f9e4244b7569198d917ab08817ad78aa68"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.6.tar.gz", "has_sig": false, "md5_digest": "fd81c05a37f17682d9c99ef56e1bdfc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10101, "upload_time": "2018-10-05T21:03:55", "upload_time_iso_8601": "2018-10-05T21:03:55.608536Z", "url": "https://files.pythonhosted.org/packages/24/7f/5dc5e3acb2bca49baedf129dd15e273d0d5f05364f0830189872ac15b506/netflix-spectator-py-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "758550203647b2cde211c5f69ed2d2e0", "sha256": "0b316b4455e1386b02ecc09ac791113290a2dcfcccd2f2a4ee65588175f0c4e2"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "758550203647b2cde211c5f69ed2d2e0", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12705, "upload_time": "2018-10-05T21:24:58", "upload_time_iso_8601": "2018-10-05T21:24:58.451822Z", "url": "https://files.pythonhosted.org/packages/b8/f8/b498371a2669b04241eeb6de4a7db9db2cb1cfeb91ae9b7e0e9546d8da42/netflix_spectator_py-0.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40c7b9a8e1dff221c819593a0a60b7c7", "sha256": "cb11e63ecc65bedc62041918d74c4e43a395b8becef3996f338dbf8c2fa8f13a"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.7.tar.gz", "has_sig": false, "md5_digest": "40c7b9a8e1dff221c819593a0a60b7c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10088, "upload_time": "2018-10-05T21:24:56", "upload_time_iso_8601": "2018-10-05T21:24:56.921774Z", "url": "https://files.pythonhosted.org/packages/52/9c/46d58ed0dca2a94a6ebf4276d3d39fc74fc197c9261a1baf3575ff3f4094/netflix-spectator-py-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "592c04726dcbf7ae6a59b1b3be692ce7", "sha256": "b7143694480d14451d189b7a4869470b5b7575d56a717f5a7726d503f8bc226d"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "592c04726dcbf7ae6a59b1b3be692ce7", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12276, "upload_time": "2019-02-11T20:58:03", "upload_time_iso_8601": "2019-02-11T20:58:03.445249Z", "url": "https://files.pythonhosted.org/packages/c7/5d/5b9951dcf1415d93439635262a3818bfbb686b468f29b14de5b7dc197128/netflix_spectator_py-0.1.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36053d199f712823073fd6b611e7ce45", "sha256": "590f3c8cfb1c60db0c1ad1524adc5c9e46e951f40f56a4380b221603dcb41cb8"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.8.tar.gz", "has_sig": false, "md5_digest": "36053d199f712823073fd6b611e7ce45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13449, "upload_time": "2019-02-11T20:58:01", "upload_time_iso_8601": "2019-02-11T20:58:01.249798Z", "url": "https://files.pythonhosted.org/packages/76/8d/0e0ba233757c893b2306702c6c8ab9fdeab6490549aaf60abffee175dbe2/netflix-spectator-py-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "977b00f1b3c7e1dd4b27d7fa12f33fc4", "sha256": "c4673930fa038a7b1d8ebf3237d7fc0ea886cc25065998db8de86cffa8a658ed"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "977b00f1b3c7e1dd4b27d7fa12f33fc4", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 12295, "upload_time": "2019-02-12T01:07:05", "upload_time_iso_8601": "2019-02-12T01:07:05.147066Z", "url": "https://files.pythonhosted.org/packages/d4/b9/a09d615f28b015953af553adff007286787f4a1acae95c6180be453a43a7/netflix_spectator_py-0.1.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "538d8ac0644e82096f486b575439e517", "sha256": "9f597020678b2bed7526173b8e1aeeb873479cc68e0464ea5ed9080d0e485460"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.9.tar.gz", "has_sig": false, "md5_digest": "538d8ac0644e82096f486b575439e517", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13467, "upload_time": "2019-02-12T01:07:03", "upload_time_iso_8601": "2019-02-12T01:07:03.505384Z", "url": "https://files.pythonhosted.org/packages/79/f3/2e42268fa280bd54072d08a9f44ae002276508683f7e7911c94f9edcfaf3/netflix-spectator-py-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6d167ff1d38a8a7bca1d729270b3f59", "sha256": "b05ebbedf531559093688aad9dd6b0d7958db548567eded8fd4a661ab106746a"}, "downloads": -1, "filename": "netflix_spectator_py-0.1.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c6d167ff1d38a8a7bca1d729270b3f59", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19621, "upload_time": "2020-04-21T17:52:57", "upload_time_iso_8601": "2020-04-21T17:52:57.585633Z", "url": "https://files.pythonhosted.org/packages/f8/8d/a7865fb4b561c7f276462e6d5683fa60fd8a256bf170e7b653e48badaef9/netflix_spectator_py-0.1.14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd6df38629b9939e1d059a73814f9216", "sha256": "3e50edd62abc821faab59da7881acc192832ba0d3a3445d263a3f48d58e6f9ed"}, "downloads": -1, "filename": "netflix-spectator-py-0.1.14.tar.gz", "has_sig": false, "md5_digest": "cd6df38629b9939e1d059a73814f9216", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23230, "upload_time": "2020-04-21T17:52:59", "upload_time_iso_8601": "2020-04-21T17:52:59.868130Z", "url": "https://files.pythonhosted.org/packages/3c/5c/7b5094d480cebb5deb38f3d5d161bd784ab32a0a16333b196c236777eac8/netflix-spectator-py-0.1.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:59 2020"}