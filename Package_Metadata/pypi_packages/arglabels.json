{"info": {"author": "Michael Harms", "author_email": "michaelharms95@icloud.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# arglabels\n\n[![Build Status](https://travis-ci.com/michael-harms/arglabels.svg?branch=master)](https://travis-ci.com/michael-harms/arglabels) [![License: MIT](https://img.shields.io/pypi/l/arglabels)](https://github.com/michael-harms/arglabels/blob/master/LICENSE)\n\nA simple decorator to enable Swift-like argument labels for Python functions.\n\nIt re-labels certain keyword arguments, so that your function parameters can have an external and an internal name like [argument labels and parameter names](https://docs.swift.org/swift-book/LanguageGuide/Functions.html#ID166) in Swift.\n\n## Installation\n\nInstall from PyPI with:\n\n```\npip install arglabels\n```\n\n## Usage\n\nIf you have a function like the following:\n\n```python\ndef invite(name, activity):\n    return f\"Hey {name}! Would you like to go {activity}?\"\n```\n\nWhen calling that function it would be nice to have a syntax that almost reads like plain english, for example:\n\n```python\ninvite(\"Alex\", to_go=\"fishing\")\n```\n\nYou can achieve this with the arglabels decorator, by using it on the function definition like so:\n\n```python\nfrom arglabels import arglabels\n\n@arglabels(activity=\"to_go\")\ndef invite(name, activity):\n    return f\"Hey {name}! Would you like to go {activity}?\"\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/michael-harms/arglabels", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "arglabels", "package_url": "https://pypi.org/project/arglabels/", "platform": "", "project_url": "https://pypi.org/project/arglabels/", "project_urls": {"Homepage": "https://github.com/michael-harms/arglabels"}, "release_url": "https://pypi.org/project/arglabels/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "A simple decorator to enable Swift-like argument labels for Python functions.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>arglabels</h1>\n<p><a href=\"https://travis-ci.com/michael-harms/arglabels\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc37f0da6fc38ec1670f776059f573825d5cb9ff/68747470733a2f2f7472617669732d63692e636f6d2f6d69636861656c2d6861726d732f6172676c6162656c732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://github.com/michael-harms/arglabels/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10c5d77c4aa7af399b8895583c28181ee49960d1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6172676c6162656c73\"></a></p>\n<p>A simple decorator to enable Swift-like argument labels for Python functions.</p>\n<p>It re-labels certain keyword arguments, so that your function parameters can have an external and an internal name like <a href=\"https://docs.swift.org/swift-book/LanguageGuide/Functions.html#ID166\" rel=\"nofollow\">argument labels and parameter names</a> in Swift.</p>\n<h2>Installation</h2>\n<p>Install from PyPI with:</p>\n<pre><code>pip install arglabels\n</code></pre>\n<h2>Usage</h2>\n<p>If you have a function like the following:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">invite</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">activity</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"Hey </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">! Would you like to go </span><span class=\"si\">{</span><span class=\"n\">activity</span><span class=\"si\">}</span><span class=\"s2\">?\"</span>\n</pre>\n<p>When calling that function it would be nice to have a syntax that almost reads like plain english, for example:</p>\n<pre><span class=\"n\">invite</span><span class=\"p\">(</span><span class=\"s2\">\"Alex\"</span><span class=\"p\">,</span> <span class=\"n\">to_go</span><span class=\"o\">=</span><span class=\"s2\">\"fishing\"</span><span class=\"p\">)</span>\n</pre>\n<p>You can achieve this with the arglabels decorator, by using it on the function definition like so:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">arglabels</span> <span class=\"kn\">import</span> <span class=\"n\">arglabels</span>\n\n<span class=\"nd\">@arglabels</span><span class=\"p\">(</span><span class=\"n\">activity</span><span class=\"o\">=</span><span class=\"s2\">\"to_go\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">invite</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">activity</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"Hey </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">! Would you like to go </span><span class=\"si\">{</span><span class=\"n\">activity</span><span class=\"si\">}</span><span class=\"s2\">?\"</span>\n</pre>\n\n          </div>"}, "last_serial": 5725103, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "b298caf871508c6171325684cf02684e", "sha256": "21b2c6cb2b57c582b53bd41ac0522f281324c0891b179e7f74073ecb2d218b81"}, "downloads": -1, "filename": "arglabels-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b298caf871508c6171325684cf02684e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 2786, "upload_time": "2019-08-24T18:12:25", "upload_time_iso_8601": "2019-08-24T18:12:25.871612Z", "url": "https://files.pythonhosted.org/packages/2d/e5/878ff9505ad86c7caa0ba3c02e6fa4a312e0931b384b40c957a10a7944cd/arglabels-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d14b156b777570d73e6aebb227fc11b9", "sha256": "fb4e7b6c246e360392c892a4c12c162908cdd25e342322429991eb73ba9f170f"}, "downloads": -1, "filename": "arglabels-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d14b156b777570d73e6aebb227fc11b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1685, "upload_time": "2019-08-24T18:12:28", "upload_time_iso_8601": "2019-08-24T18:12:28.274424Z", "url": "https://files.pythonhosted.org/packages/c7/34/96580903594ae8db93f138c1ac3bf0c96cdff8bdaba58bfd3f2a3895e0ea/arglabels-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "eda21c08cadc3846fd1111c5d7841342", "sha256": "4612b6f7f0f8ff96fd59833a265303f26bcfc3200997a42b75593023e3b0d429"}, "downloads": -1, "filename": "arglabels-0.0.3.tar.gz", "has_sig": false, "md5_digest": "eda21c08cadc3846fd1111c5d7841342", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1669, "upload_time": "2019-08-24T18:33:03", "upload_time_iso_8601": "2019-08-24T18:33:03.875833Z", "url": "https://files.pythonhosted.org/packages/1b/67/6fd579dc1b6b05eb3883e29e231cb4dc363c7eab1f3fd22045e18a473006/arglabels-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "db33fce4efa68f8cac3fbca5b095a8a6", "sha256": "a4dddf4ab3d7642697a053da566b961e152dbff68b49b19f8c76afee7043b7f2"}, "downloads": -1, "filename": "arglabels-0.0.4.tar.gz", "has_sig": false, "md5_digest": "db33fce4efa68f8cac3fbca5b095a8a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1670, "upload_time": "2019-08-24T18:38:38", "upload_time_iso_8601": "2019-08-24T18:38:38.112319Z", "url": "https://files.pythonhosted.org/packages/82/78/1fdf938ed8d8902872554e823fe2eadd947d19d1eaecc22ad13b39f346ab/arglabels-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "e71f78e99be11e890dd38ad51ea204a7", "sha256": "bf134333178e23e6dd197aa5f517aa77d45540d66ffcfa55c261c6f723668422"}, "downloads": -1, "filename": "arglabels-0.0.5.tar.gz", "has_sig": false, "md5_digest": "e71f78e99be11e890dd38ad51ea204a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1763, "upload_time": "2019-08-24T18:53:20", "upload_time_iso_8601": "2019-08-24T18:53:20.944369Z", "url": "https://files.pythonhosted.org/packages/36/26/64c39e774ace14d3b51cd366486b8800e4403a335241a5529b4ee9ec99ce/arglabels-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "5bb0a1ef3f3117043d630cbe2a7ae30a", "sha256": "6f95feb2ae04a7196745890b909c0c64fede523044cf1f303a9cbd9d1fe6c211"}, "downloads": -1, "filename": "arglabels-0.0.6.tar.gz", "has_sig": false, "md5_digest": "5bb0a1ef3f3117043d630cbe2a7ae30a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1771, "upload_time": "2019-08-24T19:01:30", "upload_time_iso_8601": "2019-08-24T19:01:30.720172Z", "url": "https://files.pythonhosted.org/packages/f8/e6/0be5ab8b6a32e51d202b3bbcce4d982517f75f90c5db39f1f9c86d9c2888/arglabels-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5bb0a1ef3f3117043d630cbe2a7ae30a", "sha256": "6f95feb2ae04a7196745890b909c0c64fede523044cf1f303a9cbd9d1fe6c211"}, "downloads": -1, "filename": "arglabels-0.0.6.tar.gz", "has_sig": false, "md5_digest": "5bb0a1ef3f3117043d630cbe2a7ae30a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1771, "upload_time": "2019-08-24T19:01:30", "upload_time_iso_8601": "2019-08-24T19:01:30.720172Z", "url": "https://files.pythonhosted.org/packages/f8/e6/0be5ab8b6a32e51d202b3bbcce4d982517f75f90c5db39f1f9c86d9c2888/arglabels-0.0.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:18 2020"}