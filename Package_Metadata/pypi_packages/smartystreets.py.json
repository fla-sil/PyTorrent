{"info": {"author": "Ben Lopatin", "author_email": "ben@wellfire.co", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "================\nSmartyStreets.py\n================\n\n.. image:: https://badge.fury.io/py/smartystreets.py.svg\n    :target: http://badge.fury.io/py/smartystreets.py\n\n.. image:: https://travis-ci.org/bennylope/smartystreets.py.svg?branch=master\n        :target: https://travis-ci.org/bennylope/smartystreets.py\n\n.. image:: https://pypip.in/d/smartystreets.py/badge.svg\n        :target: https://pypi.python.org/pypi/smartystreets.py\n\n\nA wrapper for the SmartyStreets address validation and geolocation API.\n\nOther Python libraries exist but skip out on multiple address submission\nand make opinionated decisions about how to transform the return data.\n\n.. note::\n    This project is not affiliated with the SmartyStreets service or company in any\n    way.\n\n* Free software: BSD license\n* Documentation: https://smartystreetspy.readthedocs.org.\n\nFeatures\n========\n\nSmartyStreets.py aims to provide a sane, tested, and feature complete wrapper\nto the SmartyStreets LiveAddress API, including address lookup for validation\nand geolocation, as well as zipcode lookup and validation.\n\nInstallation\n============\n\nSmartyStreets.py requires the `requests library\n<http://docs.python-requests.org/en/latest/>`_ and will install it if it is\nfound missing. **Installed versions < 2.0 will be upgraded.**::\n\n    pip install smartystreets.py\n\nBasic usage\n===========\n\nAPI client\n----------\n\nCreate a client instance with your key::\n\n    from smartystreets import Client\n    client = Client(AUTH_ID, AUTH_TOKEN)\n\nCreate a client instance with SmartyStreets configuration options::\n\n    client = Client(AUTH_ID, AUTH_TOKEN, standardize=True, invalid=False,\n                logging=False)\n\nThese options correspond to the `x-standardize-only`, `x-include-invalid`, and\n`x-suppress-logging` headers for opening up results to standardized but not\nnecessarily deliverable addresses, including invalid delivery addresses, and\ntoggling SmartyStreets API logging, respectively.\n\nSince the SmartyStreets API only permits up to 100 addresses to be looked up at\nonce the client will raise an exception if more than 100 are provided. You can\nturn off this functionality using the `truncate_addresses` option, which will\nsilently truncate the list to the first 100 addresses::\n\n    client = Client(AUTH_ID, AUTH_TOKEN, truncate_addresses=True)\n\nAddress lookup\n--------------\n\nSimple address lookup::\n\n    client.street_address(\"100 Main St Richmond, VA\")\n\nMultiple simple street addresses::\n\n    client.street_addresses([\"100 Main St Richmond, VA\", \"100 Main St Richmond, VA\"])\n\n**Note that these are different function names.**\n\nYou can also use dictionaries including detailed data::\n\n    client.street_address({\n        'input_id': 'k1d8j',\n        'street': '100 Main st',\n        'city': 'Richmond',\n        'state': 'VA',\n        'candidates': 2,\n    })\n\nAnd multiple detailed lookups::\n\n    client.street_addresses([\n        {\n            'input_id': 'k1d8j',\n            'street': '100 Main st',\n            'city': 'Richmond',\n            'state': 'VA',\n            'candidates': 2,\n        }, {\n            'input_id': 'z29ir',\n            'street': '400 Main st',\n            'city': 'Richmond',\n            'state': 'VA',\n            'candidates': 2,\n        }\n    ])\n\n.. note::\n    You cannot mix the simple street lookup style and the detailed dictionary\n    lookup style in the same API call. This is a library restriction.\n\nReturn data\n-----------\n\nJust as important as a clean interface for working with the API is a helpful\nway of working with the returned data.\n\nReturned data is presented as either a single `SmartyAddress` or a\n`SmartyAddresses` collection. Each is based on builtin types so that you always\nhave access to the underlying data exactly as it was returned, but with\nadded convenience methods.\n\nAddress geolocation\n~~~~~~~~~~~~~~~~~~~\n\nWhere is it?::\n\n    >>> address = client.street_address(\"100 Main St Richmond, VA\")\n    >>> address.location\n    (37.5436,-77.4453)\n\nAccuracy is subject to address inputs and available data.\n\nAddress verification\n~~~~~~~~~~~~~~~~~~~~\n\nIs this a deliverable address?::\n\n    >>> address.confirmed\n    True\n\nThe value here does not necessarily mean this is an exact mail address\n(e.g. with apartment number). The SmartyStreets API will return a code\nindicating the complete DPV status.\n\nMultiple addresses: input ID lookup\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can look up an address by the `input_id` parameter (provided you include\none in the request)::\n\n    >>> addresses = client.street_address([{'input_id': '123', 'street': ...}])\n    >>> addresses.get('123')\n    {'input_id': '123', 'street': ... }\n\nThe `get` method is used because the `SmartyAddresses` object's default lookup\nis against the list index.\n\nZipcode lookup\n--------------\n\n`TODO`\n\nResponse errors\n---------------\n\nThe following documented response codes raise specific exceptions based on a\n`SmaryStreetsError` class.\n\n- 400 Bad input. Required fields missing from input or are malformed.\n- 401 Unauthorized. Addressuthentication failure; invalid credentials.\n- 402 Payment required. No Addressuthenticationctive subscription found.\n- 500 Internal server error. General service foundailure; retry request.\n\n\n\n\nHistory\n-------\n\n0.4.0 (2016-03-25)\n------------------\n\n* Add optional timeout value for client (pmkane!)\n\n0.3.0 (2016-03-10)\n------------------\n\n* Ensure keep-alive is used for client connections (pmkane!)\n* Testing updates (pmkane!)\n\n0.2.4 (2015-03-15)\n------------------\n\n* Adds strict JSON serialization to async client as well\n\n0.2.3 (2015-03-15)\n------------------\n\n* Bugfix in logging suppression header\n\n0.2.2 (2015-01-29)\n------------------\n\n* Adds strict JSON serialization to ensure all-but-specified fields are\n  serialized into strings.\n\n0.2.1 (2014-11-17)\n------------------\n\n* Bugfix in plain string address input handling\n\n0.2.0 (2014-10-23)\n------------------\n\n* Added experimental async client\n\n0.1.0 (2014-10-21)\n------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bennylope/smartystreets.py", "keywords": "smarty streets", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "smartystreets.py", "package_url": "https://pypi.org/project/smartystreets.py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/smartystreets.py/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/bennylope/smartystreets.py"}, "release_url": "https://pypi.org/project/smartystreets.py/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "A wrapper for the SmartyStreets address validation and geolocation API\"", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/smartystreets.py\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/smartystreets.py.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e3e9909b80071350bba6a2a6326172380075e05e/68747470733a2f2f62616467652e667572792e696f2f70792f736d61727479737472656574732e70792e737667\"></a>\n<a href=\"https://travis-ci.org/bennylope/smartystreets.py\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/bennylope/smartystreets.py.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf2f941d515a9fcc1ca54bbf3bc80e6c0225f601/68747470733a2f2f7472617669732d63692e6f72672f62656e6e796c6f70652f736d61727479737472656574732e70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/smartystreets.py\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/smartystreets.py/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54d74ee84a91cd381008ab551e900e6fa2577d57/68747470733a2f2f70797069702e696e2f642f736d61727479737472656574732e70792f62616467652e737667\"></a>\n<p>A wrapper for the SmartyStreets address validation and geolocation API.</p>\n<p>Other Python libraries exist but skip out on multiple address submission\nand make opinionated decisions about how to transform the return data.</p>\n<div>\n<p>Note</p>\n<p>This project is not affiliated with the SmartyStreets service or company in any\nway.</p>\n</div>\n<ul>\n<li>Free software: BSD license</li>\n<li>Documentation: <a href=\"https://smartystreetspy.readthedocs.org\" rel=\"nofollow\">https://smartystreetspy.readthedocs.org</a>.</li>\n</ul>\n<div id=\"features\">\n<h2>Features</h2>\n<p>SmartyStreets.py aims to provide a sane, tested, and feature complete wrapper\nto the SmartyStreets LiveAddress API, including address lookup for validation\nand geolocation, as well as zipcode lookup and validation.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>SmartyStreets.py requires the <a href=\"http://docs.python-requests.org/en/latest/\" rel=\"nofollow\">requests library</a> and will install it if it is\nfound missing. <strong>Installed versions &lt; 2.0 will be upgraded.</strong>:</p>\n<pre>pip install smartystreets.py\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<div id=\"api-client\">\n<h3>API client</h3>\n<p>Create a client instance with your key:</p>\n<pre>from smartystreets import Client\nclient = Client(AUTH_ID, AUTH_TOKEN)\n</pre>\n<p>Create a client instance with SmartyStreets configuration options:</p>\n<pre>client = Client(AUTH_ID, AUTH_TOKEN, standardize=True, invalid=False,\n            logging=False)\n</pre>\n<p>These options correspond to the <cite>x-standardize-only</cite>, <cite>x-include-invalid</cite>, and\n<cite>x-suppress-logging</cite> headers for opening up results to standardized but not\nnecessarily deliverable addresses, including invalid delivery addresses, and\ntoggling SmartyStreets API logging, respectively.</p>\n<p>Since the SmartyStreets API only permits up to 100 addresses to be looked up at\nonce the client will raise an exception if more than 100 are provided. You can\nturn off this functionality using the <cite>truncate_addresses</cite> option, which will\nsilently truncate the list to the first 100 addresses:</p>\n<pre>client = Client(AUTH_ID, AUTH_TOKEN, truncate_addresses=True)\n</pre>\n</div>\n<div id=\"address-lookup\">\n<h3>Address lookup</h3>\n<p>Simple address lookup:</p>\n<pre>client.street_address(\"100 Main St Richmond, VA\")\n</pre>\n<p>Multiple simple street addresses:</p>\n<pre>client.street_addresses([\"100 Main St Richmond, VA\", \"100 Main St Richmond, VA\"])\n</pre>\n<p><strong>Note that these are different function names.</strong></p>\n<p>You can also use dictionaries including detailed data:</p>\n<pre>client.street_address({\n    'input_id': 'k1d8j',\n    'street': '100 Main st',\n    'city': 'Richmond',\n    'state': 'VA',\n    'candidates': 2,\n})\n</pre>\n<p>And multiple detailed lookups:</p>\n<pre>client.street_addresses([\n    {\n        'input_id': 'k1d8j',\n        'street': '100 Main st',\n        'city': 'Richmond',\n        'state': 'VA',\n        'candidates': 2,\n    }, {\n        'input_id': 'z29ir',\n        'street': '400 Main st',\n        'city': 'Richmond',\n        'state': 'VA',\n        'candidates': 2,\n    }\n])\n</pre>\n<div>\n<p>Note</p>\n<p>You cannot mix the simple street lookup style and the detailed dictionary\nlookup style in the same API call. This is a library restriction.</p>\n</div>\n</div>\n<div id=\"return-data\">\n<h3>Return data</h3>\n<p>Just as important as a clean interface for working with the API is a helpful\nway of working with the returned data.</p>\n<p>Returned data is presented as either a single <cite>SmartyAddress</cite> or a\n<cite>SmartyAddresses</cite> collection. Each is based on builtin types so that you always\nhave access to the underlying data exactly as it was returned, but with\nadded convenience methods.</p>\n<div id=\"address-geolocation\">\n<h4>Address geolocation</h4>\n<p>Where is it?:</p>\n<pre>&gt;&gt;&gt; address = client.street_address(\"100 Main St Richmond, VA\")\n&gt;&gt;&gt; address.location\n(37.5436,-77.4453)\n</pre>\n<p>Accuracy is subject to address inputs and available data.</p>\n</div>\n<div id=\"address-verification\">\n<h4>Address verification</h4>\n<p>Is this a deliverable address?:</p>\n<pre>&gt;&gt;&gt; address.confirmed\nTrue\n</pre>\n<p>The value here does not necessarily mean this is an exact mail address\n(e.g. with apartment number). The SmartyStreets API will return a code\nindicating the complete DPV status.</p>\n</div>\n<div id=\"multiple-addresses-input-id-lookup\">\n<h4>Multiple addresses: input ID lookup</h4>\n<p>You can look up an address by the <cite>input_id</cite> parameter (provided you include\none in the request):</p>\n<pre>&gt;&gt;&gt; addresses = client.street_address([{'input_id': '123', 'street': ...}])\n&gt;&gt;&gt; addresses.get('123')\n{'input_id': '123', 'street': ... }\n</pre>\n<p>The <cite>get</cite> method is used because the <cite>SmartyAddresses</cite> object\u2019s default lookup\nis against the list index.</p>\n</div>\n</div>\n<div id=\"zipcode-lookup\">\n<h3>Zipcode lookup</h3>\n<p><cite>TODO</cite></p>\n</div>\n<div id=\"response-errors\">\n<h3>Response errors</h3>\n<p>The following documented response codes raise specific exceptions based on a\n<cite>SmaryStreetsError</cite> class.</p>\n<ul>\n<li>400 Bad input. Required fields missing from input or are malformed.</li>\n<li>401 Unauthorized. Addressuthentication failure; invalid credentials.</li>\n<li>402 Payment required. No Addressuthenticationctive subscription found.</li>\n<li>500 Internal server error. General service foundailure; retry request.</li>\n</ul>\n</div>\n<div id=\"history\">\n<h3>History</h3>\n</div>\n<div id=\"id1\">\n<h3>0.4.0 (2016-03-25)</h3>\n<ul>\n<li>Add optional timeout value for client (pmkane!)</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.0 (2016-03-10)</h3>\n<ul>\n<li>Ensure keep-alive is used for client connections (pmkane!)</li>\n<li>Testing updates (pmkane!)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.4 (2015-03-15)</h3>\n<ul>\n<li>Adds strict JSON serialization to async client as well</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2.3 (2015-03-15)</h3>\n<ul>\n<li>Bugfix in logging suppression header</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.2 (2015-01-29)</h3>\n<ul>\n<li>Adds strict JSON serialization to ensure all-but-specified fields are\nserialized into strings.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.2.1 (2014-11-17)</h3>\n<ul>\n<li>Bugfix in plain string address input handling</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.2.0 (2014-10-23)</h3>\n<ul>\n<li>Added experimental async client</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.1.0 (2014-10-21)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2027025, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "efed1633f642758744bd8fb043363752", "sha256": "c9c064d089301d8bfab45e4da3f8af76e043a35fcdf21360443411fb26483518"}, "downloads": -1, "filename": "smartystreets.py-0.1.0.tar.gz", "has_sig": false, "md5_digest": "efed1633f642758744bd8fb043363752", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17453, "upload_time": "2014-10-21T20:16:03", "upload_time_iso_8601": "2014-10-21T20:16:03.095315Z", "url": "https://files.pythonhosted.org/packages/d4/5c/483aca1f1287599b4302c3a258e6583da8bc348244510ca0d2a92fb5b30f/smartystreets.py-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "76575687d339872b28dbd72c6e132ede", "sha256": "c4c47f86b0c5d32f013e07f93ad57423892b7f1fc1e0f418e9c533573dd1a169"}, "downloads": -1, "filename": "smartystreets.py-0.2.0.tar.gz", "has_sig": false, "md5_digest": "76575687d339872b28dbd72c6e132ede", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18856, "upload_time": "2014-10-24T02:24:18", "upload_time_iso_8601": "2014-10-24T02:24:18.314065Z", "url": "https://files.pythonhosted.org/packages/6c/45/fcf115830b59a0d6c7100d7aadf00febb9d02ff93dfbd9805a5ecb62de8b/smartystreets.py-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ae485f3c27af9314648bb27c036dbd16", "sha256": "444f27c956d44be8a7b4a62e601f46b4f195ab952f9f4e2eaf950043343613d9"}, "downloads": -1, "filename": "smartystreets.py-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ae485f3c27af9314648bb27c036dbd16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20107, "upload_time": "2014-11-18T00:04:39", "upload_time_iso_8601": "2014-11-18T00:04:39.875771Z", "url": "https://files.pythonhosted.org/packages/0b/1e/2b12212fa01110bfb257d282b5c0a6eaecfa13fba7960fa0e50c9ca30e08/smartystreets.py-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "4a9855ec75bedd1cdd9522f144831359", "sha256": "15e33094f18222fb9fc431bb91c5c4b51ddfa6cd347ee56ccf5fdf609c040e5e"}, "downloads": -1, "filename": "smartystreets.py-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4a9855ec75bedd1cdd9522f144831359", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21280, "upload_time": "2015-01-29T15:53:04", "upload_time_iso_8601": "2015-01-29T15:53:04.016237Z", "url": "https://files.pythonhosted.org/packages/fc/21/7ff4b9b1dfc1b11ca4791feb61882e9393bfb4c8638ffed4ef1fa0e2888b/smartystreets.py-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "a568c739aa6a2d33ccef5d989bdfe3ce", "sha256": "db429608fb4023651aa1aae973357f86138c82d8954bcec56a6f3dc45fa97f7f"}, "downloads": -1, "filename": "smartystreets.py-0.2.3.tar.gz", "has_sig": false, "md5_digest": "a568c739aa6a2d33ccef5d989bdfe3ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21434, "upload_time": "2015-03-02T18:15:08", "upload_time_iso_8601": "2015-03-02T18:15:08.930223Z", "url": "https://files.pythonhosted.org/packages/97/df/c8bb9006977f65e688c56c43728dc5a8cf8397f8bbff31d16a1c851759e1/smartystreets.py-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "acf79c70fbb00f718ff3d83ee2515432", "sha256": "4382127279155efe9527900078795ce03dead865d6e09bd4e279da4588e698dc"}, "downloads": -1, "filename": "smartystreets.py-0.2.4.tar.gz", "has_sig": false, "md5_digest": "acf79c70fbb00f718ff3d83ee2515432", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21558, "upload_time": "2015-04-09T19:27:21", "upload_time_iso_8601": "2015-04-09T19:27:21.695382Z", "url": "https://files.pythonhosted.org/packages/7f/8d/b5b23aba4229138533dde667ed44588b7b4418ec06e9076f88dbf1e2f004/smartystreets.py-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9cfb21a36ea1131bfed576b4dc56a4d0", "sha256": "e724cd772c2b39bf2f4be54dc4bf366ebff5bdf34af1773b480fb8f55c5ddac4"}, "downloads": -1, "filename": "smartystreets.py-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9cfb21a36ea1131bfed576b4dc56a4d0", "packagetype": "bdist_wheel", "python_version": "3.4", "requires_python": null, "size": 13151, "upload_time": "2016-03-11T01:09:16", "upload_time_iso_8601": "2016-03-11T01:09:16.239597Z", "url": "https://files.pythonhosted.org/packages/52/04/8628cc927568c49ea5d9b6c43fd9b46f5ea7b1c90276bec7fee626d8dc48/smartystreets.py-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0339fd726289524c8e78be9b83c7f09e", "sha256": "e63f541bf03cf0765cfa4c44b3d15a144bfeeedc5f25d059f9c7ad9c8154e78f"}, "downloads": -1, "filename": "smartystreets.py-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0339fd726289524c8e78be9b83c7f09e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21845, "upload_time": "2016-03-11T01:09:07", "upload_time_iso_8601": "2016-03-11T01:09:07.816796Z", "url": "https://files.pythonhosted.org/packages/e0/39/a9f1bcddde85238e2cfc48df1d8d4a4a9cc273168034579bee8c5cacd078/smartystreets.py-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8cdd020e851cdf5c73e28c3f04e93e07", "sha256": "4905fdaecc8b3f57ebb69edcd2875a07c604a245d749f78eb7d88dfbaf9a74b5"}, "downloads": -1, "filename": "smartystreets.py-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8cdd020e851cdf5c73e28c3f04e93e07", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 13241, "upload_time": "2016-03-25T15:11:55", "upload_time_iso_8601": "2016-03-25T15:11:55.213595Z", "url": "https://files.pythonhosted.org/packages/d9/49/c5407a22fd401be3a2d89933387c99ff18e973e7c1aa094e74c016675d37/smartystreets.py-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19db7b8dfbb52f68b952fe5458b14c21", "sha256": "2778d483ba6a373d1a24e0b24f87042a1c169470d623a73c2167627543a19b9b"}, "downloads": -1, "filename": "smartystreets.py-0.4.0.tar.gz", "has_sig": false, "md5_digest": "19db7b8dfbb52f68b952fe5458b14c21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21984, "upload_time": "2016-03-25T15:11:42", "upload_time_iso_8601": "2016-03-25T15:11:42.193797Z", "url": "https://files.pythonhosted.org/packages/5a/96/bd9dfac2ffa56e59ac0eb4fbbf25d02ba2d60d0476140cd859801929ba21/smartystreets.py-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8cdd020e851cdf5c73e28c3f04e93e07", "sha256": "4905fdaecc8b3f57ebb69edcd2875a07c604a245d749f78eb7d88dfbaf9a74b5"}, "downloads": -1, "filename": "smartystreets.py-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8cdd020e851cdf5c73e28c3f04e93e07", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 13241, "upload_time": "2016-03-25T15:11:55", "upload_time_iso_8601": "2016-03-25T15:11:55.213595Z", "url": "https://files.pythonhosted.org/packages/d9/49/c5407a22fd401be3a2d89933387c99ff18e973e7c1aa094e74c016675d37/smartystreets.py-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19db7b8dfbb52f68b952fe5458b14c21", "sha256": "2778d483ba6a373d1a24e0b24f87042a1c169470d623a73c2167627543a19b9b"}, "downloads": -1, "filename": "smartystreets.py-0.4.0.tar.gz", "has_sig": false, "md5_digest": "19db7b8dfbb52f68b952fe5458b14c21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21984, "upload_time": "2016-03-25T15:11:42", "upload_time_iso_8601": "2016-03-25T15:11:42.193797Z", "url": "https://files.pythonhosted.org/packages/5a/96/bd9dfac2ffa56e59ac0eb4fbbf25d02ba2d60d0476140cd859801929ba21/smartystreets.py-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:58 2020"}