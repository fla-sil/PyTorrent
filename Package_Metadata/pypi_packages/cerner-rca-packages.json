{"info": {"author": "Cerner RCA Blr", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# cerner_rca_packages\nThe purpose of this package is have all the code used in Revenue Cycle automation in one place so as to reduce code duplication and redundancy.\nThe package as the below below scripts :\n\n- ChopsUIReader\n- ConvertFileFormats\n- DataComparator\n- MillenniumQueryExecutor\n- VerticaQueryExecutor\n\n## ChopsUIReader ##\nThe purpose of this script is to log into the Chops UI and perform tasks such as triggering jobs and validating the status of the workflow run.\nPlease find the details on how to use the functionalities of this script below:\n\n#### from cerner_rca_packages.ChopsUIReader import loginChops, findWorkflowRun, fetchInputDayStatus, addParameter, fetchConfigValue ####\n\nBefore performing any of the tasks we need to log into chops first. This can achieved using the below line of code.\n\n`loginChops(env, username, password, runHeadless=True)`\\\nThis function will login to chops and return the driver object\\\n**env:** The enviroment to run chops in (dev/staging)\\\n**username:** Username to log into chops\\\n**password:** Password to log into chops\\\n**runHeadless:** If true then the webdriver will be running in headless mode\\\n**return driver:** The selenium webdriver object\n\nOnce we have logged in using the above line, we can use the webdriver object returned in any of the below functions to perform the necessary tasks.\n\n`findWorkflowRun(pipeline_type, pipeline_run_type, workflow, driver)`\\\nThis function will return the driver object after locating the particular workflow in chops\\\n**pipeline_type:** Under which category are you looking for the workflow in (workflows/coordinators)\\\n**pipeline_run_type:** Under which status are you looking for the workflow in\n- if pipeline_type = workflows, then pipeline_run_type can take the values Active, Paused, Completed, Failed\n- if pipeline_type = coordinators, then pipeline_run_type can take the values Running, Paused, Failed\n\n**workflow:** complete path leading to the workflow you want the status for\\\n**driver:** The chrome webdriver object will be passed here.\\\n**return (driver, ind):** The driver object after locating the input workflow in chops.\\\n                       If the ind returned is 0, then the workflow was not located successfully, else it was.\n\n`fetchInputDayStatus(pipeline_type, pipeline_run_type, workflow, driver, date=None, version_id=None)`\\\nThis function will return the status of the run for the input date for the input workflow\\\n**pipeline_type:** Under which category are you looking for the workflow in (workflows/coordinators)\\\n**pipeline_run_type:** Under which status are you looking for the workflow in\n- if pipeline_type = workflows, then pipeline_run_type can take the values Active, Paused, Completed, Failed\n- if pipeline_type = coordinators, then pipeline_run_type can take the values Running, Paused, Failed\n\n**workflow:** complete path leading to the workflow you want the status for\\\n**date:** The date for which we want to check for the status in chops in YYYY-MM-DD format\\\n**driver:** The chrome webdriver object will be passed here.\\\n**return:** The status of the input day's run as a string. If the status is returned as N/A, then it means that the particular workflow for that particular date was found.\n\n`addParameter(pipeline_type, pipeline_run_type, workflow, params, param_driver)`\\\nThis function will trigger the chops workflow after adding/updating parameters that is passed as input\\\n**pipeline_type:** Under which category are you looking for the workflow in (workflows/coordinators)\\\n**pipeline_run_type:** Under which status are you looking for the workflow in\\\n- if pipeline_type = workflows, then pipeline_run_type can take the values Active, Paused, Completed, Failed\n- if pipeline_type = coordinators, then pipeline_run_type can take the values Running, Paused, Failed\\\n**workflow:** complete path leading to the workflow you want the status for\\\n**params:** The parameters to be added/updated passed as a dictionary where the key is the name of the parameter and value is the value to be added/update. If the key is already present, then value will be updated, else it will be added as a new property.\\\n**param_driver:** The chrome webdriver object will be passed here.\\\n**return driver:** The chrome webdriver object after the workflow run is triggered\\\n\n`fetchConfigValue(driver, config_name)`\\\nThis function can be used to fetch the config values of the input config_name for a particular workflow in chops\\\n**driver:** The chrome driver object after the workflow is located\\\n**config_name:** The config_name for which is value is to be found\\\n**return config_value.text:** Returns the value of the config_name passed\\\n\n\n\n## ConvertFileFormats ##\n#### from cerner_rca_packages.ConvertFileFormats import convertCsvToExcel ####\n\n`convertCsvToExcel(csv_files_list, combine_to_single_excel=False, excel_file_name=None, delete_csvs=False)`\\\n**csv_files_list:** List of csvs to be converted into excel\\\n**combine_to_single_excel:** If True, then all the csvs will be converted into a single excel with every sheet in the excel corresponding to 1 csv\\\n**excel_file_name:** If we decide to pass combine_to_single_excel as True, then this will be the name with which the combined excel will be saved\\\n**delete_csvs:** If True, then the csvs will be deleted after it is converted to the excel\\\n**return:** This function will not return any value\n\n\n## DataComparator ##\n#### from cerner_rca_packages.DataComparator import compare_excels ####\n\n`compare_excels(master_file, extract_file, difference_file_name, master_file_exclude_sheets = [], extract_file_exclude_sheets = [])`\\\nThis function will take 2 excels as input and returns 0 if there are no discrepancies and 1 if there are\\\n**master_file:** Complete path of the master file\\\n**extract_file:** Complete path of the extract file\\\n**difference_file_name:** Name to save the difference file incase of discrepancies\\\n**master_file_exclude_sheets:** The list of sheet names in the master file to be excluded during comparison\\\n**extract_file_exclude_sheets:** The list of sheet names in the extract file to be excluded during comparison\\\n**return failure_ind:** 1 if there any discrepancies between the files and 0 if there are not\n\n`compare_dataframes(master_df, extract_df, difference_file_name)`\\\nThis function will take 2 dataframes as input and returns 0 if there are no discrepancies and 1 if there are\n**master_df:** Master dataframe\\\n**extract_df:** Extract dataframe\\\n**difference_file_name:** Name to save the difference file incase of discrepancies\\\n**:return failure_ind:** 1 if there any discrepancies between the files and 0 if there are not\n\n`compare_data(master_df, extract_df)`\\\nThis function will take 2 dataframes as input and returns 0 if there are no discrepancies and 1 if there are\\\n**master_df:** Master dataframe\\\n**extract_df:** Extract dataframe\\\n**:return failure_ind:** 1 if there any discrepancies between the files and 0 if there are not\\\n**:return discrepancy_df_data:** This is a list of lists with the below elements as shown below\\\n                                  [[Columns Names], [(row_num of the row having discrepancies, [cells in the row], [column number of columns where there is discrepancy]), (row_num of the row having discrepancies, [cells in the row], [column number of columns where there is discrepancy])..]]\\\n                                  where 1st element of the list is a list of the column names,\\\n                                        2nd element is a list of tuples\\\n                                            1st element inside each tuple is row number where there is discrepancy\\\n                                            2nd element is the data of the row in a lists\\\n                                            3rd element is the list of all the column numbers where there is discrepancy\\\n\n`write_discrepancies_to_file(discrepancy_data, difference_file_name)`\\\nThis function will take the discrepancy_data from compare_data and write it into an excel\n**discrepancy_data:** The discrepancy data returned by the compare_data function\n**difference_file_name:** Name of the excel file to save the discrepancy data in                                          \n\n\n## MillenniumQueryExecutor ##\n#### from cerner_rca_packages.MillenniumQueryExecutor import connectToOracleDB, getMillenniumData ####\n\nWe have to first connect to the db using connectToOracleDB and then create a cursor on the connection object returned.\\\nThis cursor will be sent as input to getMillenniumData.\\\nPlease note that the oracle instant client should be present in configured in the machine before you can use the below functions.\n\n`connectToOracleDB(host, port, user, pwd, serviceName=None, sid=None)`\\\nThis function will take the Oracle DB connection details and return the connection object\\\n**host:** Oracle DB hostname\\\n**port:** Oracle DB port number\\\n**user:** Username to connect to the Oracle DB\\\n**pwd:** Password to connect to the Oracle DB\\\n**serviceName:** Oracle DB service name\\\n**sid:** Oracle DB sid\\\n**return conn:** The connection object after connecting the Vertica\n\n`getMillenniumData(cursor, query, downloadFlag='N', fileName=None, downloadPath=None)`\\\nThis function will execute the input query in vertica\\\n**cursor:** Cursor object\\\n**query:** Query to be executed\\\n**downloadFlag:** If Y, then result of the query will be downloaded into a csv, else it will returned as a list of lists\\\n**fileName:** If downloadFlag is Y, then the result will be downloaded into a csv with this name\\\n**downloadPath:** If download is Y, then the result will be downloaded into this path\\\n**return resultset:** If downloadFlag is N, then the result will retuned as a list of lists\n\n## VerticaQueryExecutor ##\nBefore we can make use of the functions present in this script we will have to create objects for the classes present.\\\nWe will be able to access the functions through these objects.\n\n#### from cerner_rca_packages.VerticaQueryExecutor import VerticaQueryToolUI ####\nBefore using the fetchVerticaTableColumns and the getVerticaData functions, we should first log into vertica using loginVerticaUI and then pass the returned the driver object in the other functions.\\\n\\\n`loginVerticaUI(env, username, password, tenantName, runHeadless=True, downloadPath=None)`\\\nThis function will login to Vertica Query Tool for the tenant name thats input and return the driver object\\\n**env:** The enviroment to run chops in (dev/staging)\\\n**username:** Username to log into chops\\\n**password:** Password to log into chops\\\n**tenantName:** Name of the tenant to query in\\\n**runHeadless:** If true then the webdriver will be running in headless mode\\\n**runHeadless:** If true then the webdriver will be running in headless mode\\\n**return driver:** The driver object after logging into vertica\n\n`fetchVerticaTableColumns(driver, table_name)`\nThis function will return the list of columns present in the input table\\\n**driver:** webdriver object in which we have already logged into chops\\\n**table_name:** The table for which we want the columns to be returned\\\n:return:** A list with the columns present in the input table\n\n`getVerticaData(driver,query,downloadFlag='Y',fileName=None, downloadPath=None)`\\\nThis function will execute the input query in the Vertic Query tool and download the resultset if the downloadFlag is set as Y, else return the resultset\\\n**driver:** webdriver object in which we have already logged into chops\\\n**query:** The query to be executed\\\n**downloadFlag:** If Y, the resultset will be downloaded as a csv else returned\\\n**fileName:** The name with which the downloaded file needs to be saved in\\\n**return resultList:** If download flag is N, then will download the data into a csv and will not return anything,\n                    else returns a list of lists where the inner list will correpsond to every row in the resulting table\n\n#### from cerner_rca_packages.VerticaQueryExecutor import VerticaBackend ####\nWe have to first connect to the db using connectToVertica and then create a cursor on the connection object returned.\\\nThis cursor will be sent as input to queryVertica.\n\n`connectToVertica(host, port, database, user, password)`\nThis function will take the vertica connection details and return the connection object\\\n**host:** Vertica hostname\\\n**port:** Vertica connection port number\\\n**database:** Vertica database to run the query in\\\n**user:** Username to connect to the vertica db\\\n**password:** Password to connect to the vertica db\\\n**return conn:** The connection object after connecting the Vertica\n\n`queryVertica(cursor, query, downloadFlag='N', fileName=None, downloadPath=None)`\nThis function will execute the input query in vertica\\\n**cursor:** Cursor object\\\n**query:** Query to be executed\\\n**downloadFlag:** If Y, then result of the query will be downloaded into a csv, else it will returned as a list of lists\\\n**fileName:** If downloadFlag is Y, then the result will be downloaded into a csv with this name\\\n**downloadPath:** If download is Y, then the result will be downloaded into this path\\\n**return resultset:** If downloadFlag is N, then the result will retuned as a list of lists\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.cerner.com/rcanalytics/analytics_VR_automation/tree/master/CernerRCAPackage", "keywords": "", "license": "Cerner", "maintainer": "", "maintainer_email": "", "name": "cerner-rca-packages", "package_url": "https://pypi.org/project/cerner-rca-packages/", "platform": "", "project_url": "https://pypi.org/project/cerner-rca-packages/", "project_urls": {"Homepage": "https://github.cerner.com/rcanalytics/analytics_VR_automation/tree/master/CernerRCAPackage"}, "release_url": "https://pypi.org/project/cerner-rca-packages/1.0.5/", "requires_dist": ["selenium", "pandas", "xlsxwriter", "cx-Oracle", "vertica-python"], "requires_python": "", "summary": "Common RCA automation codes", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>cerner_rca_packages</h1>\n<p>The purpose of this package is have all the code used in Revenue Cycle automation in one place so as to reduce code duplication and redundancy.\nThe package as the below below scripts :</p>\n<ul>\n<li>ChopsUIReader</li>\n<li>ConvertFileFormats</li>\n<li>DataComparator</li>\n<li>MillenniumQueryExecutor</li>\n<li>VerticaQueryExecutor</li>\n</ul>\n<h2>ChopsUIReader</h2>\n<p>The purpose of this script is to log into the Chops UI and perform tasks such as triggering jobs and validating the status of the workflow run.\nPlease find the details on how to use the functionalities of this script below:</p>\n<h4>from cerner_rca_packages.ChopsUIReader import loginChops, findWorkflowRun, fetchInputDayStatus, addParameter, fetchConfigValue</h4>\n<p>Before performing any of the tasks we need to log into chops first. This can achieved using the below line of code.</p>\n<p><code>loginChops(env, username, password, runHeadless=True)</code><br>\nThis function will login to chops and return the driver object<br>\n<strong>env:</strong> The enviroment to run chops in (dev/staging)<br>\n<strong>username:</strong> Username to log into chops<br>\n<strong>password:</strong> Password to log into chops<br>\n<strong>runHeadless:</strong> If true then the webdriver will be running in headless mode<br>\n<strong>return driver:</strong> The selenium webdriver object</p>\n<p>Once we have logged in using the above line, we can use the webdriver object returned in any of the below functions to perform the necessary tasks.</p>\n<p><code>findWorkflowRun(pipeline_type, pipeline_run_type, workflow, driver)</code><br>\nThis function will return the driver object after locating the particular workflow in chops<br>\n<strong>pipeline_type:</strong> Under which category are you looking for the workflow in (workflows/coordinators)<br>\n<strong>pipeline_run_type:</strong> Under which status are you looking for the workflow in</p>\n<ul>\n<li>if pipeline_type = workflows, then pipeline_run_type can take the values Active, Paused, Completed, Failed</li>\n<li>if pipeline_type = coordinators, then pipeline_run_type can take the values Running, Paused, Failed</li>\n</ul>\n<p><strong>workflow:</strong> complete path leading to the workflow you want the status for<br>\n<strong>driver:</strong> The chrome webdriver object will be passed here.<br>\n<strong>return (driver, ind):</strong> The driver object after locating the input workflow in chops.<br>\nIf the ind returned is 0, then the workflow was not located successfully, else it was.</p>\n<p><code>fetchInputDayStatus(pipeline_type, pipeline_run_type, workflow, driver, date=None, version_id=None)</code><br>\nThis function will return the status of the run for the input date for the input workflow<br>\n<strong>pipeline_type:</strong> Under which category are you looking for the workflow in (workflows/coordinators)<br>\n<strong>pipeline_run_type:</strong> Under which status are you looking for the workflow in</p>\n<ul>\n<li>if pipeline_type = workflows, then pipeline_run_type can take the values Active, Paused, Completed, Failed</li>\n<li>if pipeline_type = coordinators, then pipeline_run_type can take the values Running, Paused, Failed</li>\n</ul>\n<p><strong>workflow:</strong> complete path leading to the workflow you want the status for<br>\n<strong>date:</strong> The date for which we want to check for the status in chops in YYYY-MM-DD format<br>\n<strong>driver:</strong> The chrome webdriver object will be passed here.<br>\n<strong>return:</strong> The status of the input day's run as a string. If the status is returned as N/A, then it means that the particular workflow for that particular date was found.</p>\n<p><code>addParameter(pipeline_type, pipeline_run_type, workflow, params, param_driver)</code><br>\nThis function will trigger the chops workflow after adding/updating parameters that is passed as input<br>\n<strong>pipeline_type:</strong> Under which category are you looking for the workflow in (workflows/coordinators)<br>\n<strong>pipeline_run_type:</strong> Under which status are you looking for the workflow in\\</p>\n<ul>\n<li>if pipeline_type = workflows, then pipeline_run_type can take the values Active, Paused, Completed, Failed</li>\n<li>if pipeline_type = coordinators, then pipeline_run_type can take the values Running, Paused, Failed<br>\n<strong>workflow:</strong> complete path leading to the workflow you want the status for<br>\n<strong>params:</strong> The parameters to be added/updated passed as a dictionary where the key is the name of the parameter and value is the value to be added/update. If the key is already present, then value will be updated, else it will be added as a new property.<br>\n<strong>param_driver:</strong> The chrome webdriver object will be passed here.<br>\n<strong>return driver:</strong> The chrome webdriver object after the workflow run is triggered\\</li>\n</ul>\n<p><code>fetchConfigValue(driver, config_name)</code><br>\nThis function can be used to fetch the config values of the input config_name for a particular workflow in chops<br>\n<strong>driver:</strong> The chrome driver object after the workflow is located<br>\n<strong>config_name:</strong> The config_name for which is value is to be found<br>\n<strong>return config_value.text:</strong> Returns the value of the config_name passed\\</p>\n<h2>ConvertFileFormats</h2>\n<h4>from cerner_rca_packages.ConvertFileFormats import convertCsvToExcel</h4>\n<p><code>convertCsvToExcel(csv_files_list, combine_to_single_excel=False, excel_file_name=None, delete_csvs=False)</code><br>\n<strong>csv_files_list:</strong> List of csvs to be converted into excel<br>\n<strong>combine_to_single_excel:</strong> If True, then all the csvs will be converted into a single excel with every sheet in the excel corresponding to 1 csv<br>\n<strong>excel_file_name:</strong> If we decide to pass combine_to_single_excel as True, then this will be the name with which the combined excel will be saved<br>\n<strong>delete_csvs:</strong> If True, then the csvs will be deleted after it is converted to the excel<br>\n<strong>return:</strong> This function will not return any value</p>\n<h2>DataComparator</h2>\n<h4>from cerner_rca_packages.DataComparator import compare_excels</h4>\n<p><code>compare_excels(master_file, extract_file, difference_file_name, master_file_exclude_sheets = [], extract_file_exclude_sheets = [])</code><br>\nThis function will take 2 excels as input and returns 0 if there are no discrepancies and 1 if there are<br>\n<strong>master_file:</strong> Complete path of the master file<br>\n<strong>extract_file:</strong> Complete path of the extract file<br>\n<strong>difference_file_name:</strong> Name to save the difference file incase of discrepancies<br>\n<strong>master_file_exclude_sheets:</strong> The list of sheet names in the master file to be excluded during comparison<br>\n<strong>extract_file_exclude_sheets:</strong> The list of sheet names in the extract file to be excluded during comparison<br>\n<strong>return failure_ind:</strong> 1 if there any discrepancies between the files and 0 if there are not</p>\n<p><code>compare_dataframes(master_df, extract_df, difference_file_name)</code><br>\nThis function will take 2 dataframes as input and returns 0 if there are no discrepancies and 1 if there are\n<strong>master_df:</strong> Master dataframe<br>\n<strong>extract_df:</strong> Extract dataframe<br>\n<strong>difference_file_name:</strong> Name to save the difference file incase of discrepancies<br>\n<strong>:return failure_ind:</strong> 1 if there any discrepancies between the files and 0 if there are not</p>\n<p><code>compare_data(master_df, extract_df)</code><br>\nThis function will take 2 dataframes as input and returns 0 if there are no discrepancies and 1 if there are<br>\n<strong>master_df:</strong> Master dataframe<br>\n<strong>extract_df:</strong> Extract dataframe<br>\n<strong>:return failure_ind:</strong> 1 if there any discrepancies between the files and 0 if there are not<br>\n<strong>:return discrepancy_df_data:</strong> This is a list of lists with the below elements as shown below<br>\n[[Columns Names], [(row_num of the row having discrepancies, [cells in the row], [column number of columns where there is discrepancy]), (row_num of the row having discrepancies, [cells in the row], [column number of columns where there is discrepancy])..]]<br>\nwhere 1st element of the list is a list of the column names,<br>\n2nd element is a list of tuples<br>\n1st element inside each tuple is row number where there is discrepancy<br>\n2nd element is the data of the row in a lists<br>\n3rd element is the list of all the column numbers where there is discrepancy\\</p>\n<p><code>write_discrepancies_to_file(discrepancy_data, difference_file_name)</code><br>\nThis function will take the discrepancy_data from compare_data and write it into an excel\n<strong>discrepancy_data:</strong> The discrepancy data returned by the compare_data function\n<strong>difference_file_name:</strong> Name of the excel file to save the discrepancy data in</p>\n<h2>MillenniumQueryExecutor</h2>\n<h4>from cerner_rca_packages.MillenniumQueryExecutor import connectToOracleDB, getMillenniumData</h4>\n<p>We have to first connect to the db using connectToOracleDB and then create a cursor on the connection object returned.<br>\nThis cursor will be sent as input to getMillenniumData.<br>\nPlease note that the oracle instant client should be present in configured in the machine before you can use the below functions.</p>\n<p><code>connectToOracleDB(host, port, user, pwd, serviceName=None, sid=None)</code><br>\nThis function will take the Oracle DB connection details and return the connection object<br>\n<strong>host:</strong> Oracle DB hostname<br>\n<strong>port:</strong> Oracle DB port number<br>\n<strong>user:</strong> Username to connect to the Oracle DB<br>\n<strong>pwd:</strong> Password to connect to the Oracle DB<br>\n<strong>serviceName:</strong> Oracle DB service name<br>\n<strong>sid:</strong> Oracle DB sid<br>\n<strong>return conn:</strong> The connection object after connecting the Vertica</p>\n<p><code>getMillenniumData(cursor, query, downloadFlag='N', fileName=None, downloadPath=None)</code><br>\nThis function will execute the input query in vertica<br>\n<strong>cursor:</strong> Cursor object<br>\n<strong>query:</strong> Query to be executed<br>\n<strong>downloadFlag:</strong> If Y, then result of the query will be downloaded into a csv, else it will returned as a list of lists<br>\n<strong>fileName:</strong> If downloadFlag is Y, then the result will be downloaded into a csv with this name<br>\n<strong>downloadPath:</strong> If download is Y, then the result will be downloaded into this path<br>\n<strong>return resultset:</strong> If downloadFlag is N, then the result will retuned as a list of lists</p>\n<h2>VerticaQueryExecutor</h2>\n<p>Before we can make use of the functions present in this script we will have to create objects for the classes present.<br>\nWe will be able to access the functions through these objects.</p>\n<h4>from cerner_rca_packages.VerticaQueryExecutor import VerticaQueryToolUI</h4>\n<p>Before using the fetchVerticaTableColumns and the getVerticaData functions, we should first log into vertica using loginVerticaUI and then pass the returned the driver object in the other functions.<br>\n<br>\n<code>loginVerticaUI(env, username, password, tenantName, runHeadless=True, downloadPath=None)</code><br>\nThis function will login to Vertica Query Tool for the tenant name thats input and return the driver object<br>\n<strong>env:</strong> The enviroment to run chops in (dev/staging)<br>\n<strong>username:</strong> Username to log into chops<br>\n<strong>password:</strong> Password to log into chops<br>\n<strong>tenantName:</strong> Name of the tenant to query in<br>\n<strong>runHeadless:</strong> If true then the webdriver will be running in headless mode<br>\n<strong>runHeadless:</strong> If true then the webdriver will be running in headless mode<br>\n<strong>return driver:</strong> The driver object after logging into vertica</p>\n<p><code>fetchVerticaTableColumns(driver, table_name)</code>\nThis function will return the list of columns present in the input table<br>\n<strong>driver:</strong> webdriver object in which we have already logged into chops<br>\n<strong>table_name:</strong> The table for which we want the columns to be returned<br>\n:return:** A list with the columns present in the input table</p>\n<p><code>getVerticaData(driver,query,downloadFlag='Y',fileName=None, downloadPath=None)</code><br>\nThis function will execute the input query in the Vertic Query tool and download the resultset if the downloadFlag is set as Y, else return the resultset<br>\n<strong>driver:</strong> webdriver object in which we have already logged into chops<br>\n<strong>query:</strong> The query to be executed<br>\n<strong>downloadFlag:</strong> If Y, the resultset will be downloaded as a csv else returned<br>\n<strong>fileName:</strong> The name with which the downloaded file needs to be saved in<br>\n<strong>return resultList:</strong> If download flag is N, then will download the data into a csv and will not return anything,\nelse returns a list of lists where the inner list will correpsond to every row in the resulting table</p>\n<h4>from cerner_rca_packages.VerticaQueryExecutor import VerticaBackend</h4>\n<p>We have to first connect to the db using connectToVertica and then create a cursor on the connection object returned.<br>\nThis cursor will be sent as input to queryVertica.</p>\n<p><code>connectToVertica(host, port, database, user, password)</code>\nThis function will take the vertica connection details and return the connection object<br>\n<strong>host:</strong> Vertica hostname<br>\n<strong>port:</strong> Vertica connection port number<br>\n<strong>database:</strong> Vertica database to run the query in<br>\n<strong>user:</strong> Username to connect to the vertica db<br>\n<strong>password:</strong> Password to connect to the vertica db<br>\n<strong>return conn:</strong> The connection object after connecting the Vertica</p>\n<p><code>queryVertica(cursor, query, downloadFlag='N', fileName=None, downloadPath=None)</code>\nThis function will execute the input query in vertica<br>\n<strong>cursor:</strong> Cursor object<br>\n<strong>query:</strong> Query to be executed<br>\n<strong>downloadFlag:</strong> If Y, then result of the query will be downloaded into a csv, else it will returned as a list of lists<br>\n<strong>fileName:</strong> If downloadFlag is Y, then the result will be downloaded into a csv with this name<br>\n<strong>downloadPath:</strong> If download is Y, then the result will be downloaded into this path<br>\n<strong>return resultset:</strong> If downloadFlag is N, then the result will retuned as a list of lists</p>\n\n          </div>"}, "last_serial": 7083699, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "166ee6e9327a154e00ba0d092257523e", "sha256": "3639bbafe4826fc88f1d73e1e618283441545feffd30539affc7b592c4b87906"}, "downloads": -1, "filename": "cerner_rca_packages-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "166ee6e9327a154e00ba0d092257523e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4089, "upload_time": "2020-03-17T06:41:05", "upload_time_iso_8601": "2020-03-17T06:41:05.671398Z", "url": "https://files.pythonhosted.org/packages/46/74/bcf0104602cc3452f03aaa58eff1f9a025653dc3b596ca405ff9b620b10f/cerner_rca_packages-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eabe8946afdfa76077dbfbff71bdb03f", "sha256": "b4cf20e83fe0d8563fa9933a335b1ff48dbce4864ca3daf975da7788211f4277"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.tar.gz", "has_sig": false, "md5_digest": "eabe8946afdfa76077dbfbff71bdb03f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3414, "upload_time": "2020-03-17T06:41:08", "upload_time_iso_8601": "2020-03-17T06:41:08.215565Z", "url": "https://files.pythonhosted.org/packages/09/5d/8a29c23271848828a9843411abdeb7e4c7eb5c3a209a167f6802947c8e88/cerner_rca_packages-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "94f9b14dd8291e5c69d6d72e2aad2273", "sha256": "7660b5e86e168a9d6fc15ace94a67cdf032a01dd597e1f0a6aeda68a8f4036b6"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "94f9b14dd8291e5c69d6d72e2aad2273", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5305, "upload_time": "2020-03-18T08:29:19", "upload_time_iso_8601": "2020-03-18T08:29:19.458781Z", "url": "https://files.pythonhosted.org/packages/1d/07/9221c732270c6c0d9a563fad2e11111323fc2a28bf91f7cefd68c65e9d19/cerner_rca_packages-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6e86170b2f6cb655630dd65b2f935d3", "sha256": "12b9712e0dd088227afe252ad21e4889cbf5a9fb65e165a092a12375576ac787"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e6e86170b2f6cb655630dd65b2f935d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4032, "upload_time": "2020-03-18T08:29:21", "upload_time_iso_8601": "2020-03-18T08:29:21.103119Z", "url": "https://files.pythonhosted.org/packages/a3/e3/2f39ccb350528ea925d1cdbf00db8edcbf1d6b1683405d82c2d78b17be8e/cerner_rca_packages-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5803ee20549b13cfb68f47d3e959eac2", "sha256": "437d25681b7b990356e28005eea8005c352e8319535c1281b412e9fadefc6f9f"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5803ee20549b13cfb68f47d3e959eac2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5629, "upload_time": "2020-03-24T06:09:09", "upload_time_iso_8601": "2020-03-24T06:09:09.951479Z", "url": "https://files.pythonhosted.org/packages/cb/6b/e223148b31a53e61ac77050c824120a9e4e266cd1306ca70adc4e36a995b/cerner_rca_packages-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "242bb2d61eff736fd1aadcea9e03ce98", "sha256": "1cef8af2ff0c4291bc8b03a97a9cbea8e5914236c08b24069dfc1805eb9bd8d6"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.2.tar.gz", "has_sig": false, "md5_digest": "242bb2d61eff736fd1aadcea9e03ce98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4297, "upload_time": "2020-03-24T06:09:11", "upload_time_iso_8601": "2020-03-24T06:09:11.256225Z", "url": "https://files.pythonhosted.org/packages/4d/5f/4184f043be4d14c74d78e9eaed4e7bcc3a40f93018c8f60c117302396749/cerner_rca_packages-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "95debd2614e217bdd634b21f1a3af3a2", "sha256": "af59ba22f25f32aee28899e1be74a11e94898b209ddac62344677ee464a7cd40"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "95debd2614e217bdd634b21f1a3af3a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5627, "upload_time": "2020-03-24T06:43:32", "upload_time_iso_8601": "2020-03-24T06:43:32.021983Z", "url": "https://files.pythonhosted.org/packages/29/68/fa4cd259904a10ead8cbb96038db832d5a0fd7f179e247e2b05219148626/cerner_rca_packages-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc1374bdc15f0fec4747b125f20fbc4b", "sha256": "0cea84ed760e5652d28df181b5aada5f563f2b629d9d7182e50e39339a9f04f3"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.3.tar.gz", "has_sig": false, "md5_digest": "bc1374bdc15f0fec4747b125f20fbc4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4287, "upload_time": "2020-03-24T06:43:34", "upload_time_iso_8601": "2020-03-24T06:43:34.706954Z", "url": "https://files.pythonhosted.org/packages/00/c3/5844fa18c8672746b988cadb97c34dac91a7c8aef11c8b6fcb1354d17d5c/cerner_rca_packages-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "1ff647f6f20a511f1cdca5cb0e6b73a8", "sha256": "715398acf6cc933d335228cfe5c6d42370a75dcd18e6e789b444197c9c1e6d72"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1ff647f6f20a511f1cdca5cb0e6b73a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5537, "upload_time": "2020-03-24T07:06:11", "upload_time_iso_8601": "2020-03-24T07:06:11.048250Z", "url": "https://files.pythonhosted.org/packages/27/98/968b111546cf4f98f0161a1e34298fb2bb17336ad3c64fcb7fa014f56e8b/cerner_rca_packages-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b5093caf7d1dc176c4e83506398985b", "sha256": "f23d912967eb1e3c384b1305c843608cc1b628e0c5cc4437227a626a28347cff"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8b5093caf7d1dc176c4e83506398985b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4206, "upload_time": "2020-03-24T07:06:12", "upload_time_iso_8601": "2020-03-24T07:06:12.597325Z", "url": "https://files.pythonhosted.org/packages/5d/ea/611744e31da06456fc2cb949465712b851b3e388eacdd5374dd0db46df50/cerner_rca_packages-0.1.4.tar.gz", "yanked": false}], "0.1.5.1": [{"comment_text": "", "digests": {"md5": "663780ca02afb1c9895a99bad9abf529", "sha256": "f95e10eebf5cf2b73cda791d01bf67d1120363723632cdbd86ed0e4e61bd9711"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "663780ca02afb1c9895a99bad9abf529", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6180, "upload_time": "2020-03-30T05:00:56", "upload_time_iso_8601": "2020-03-30T05:00:56.046519Z", "url": "https://files.pythonhosted.org/packages/9d/fc/bf2796435699c6b2d4d1e36acc089afce02984bbab268969080b3709fb26/cerner_rca_packages-0.1.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5d76b71ebfb7463c0ee5c26713bbc47", "sha256": "b5618b8869664821f534cd14f970c95652cd59421d7a8a02a26fc9ac11db084a"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.5.1.tar.gz", "has_sig": false, "md5_digest": "b5d76b71ebfb7463c0ee5c26713bbc47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4792, "upload_time": "2020-03-30T05:00:57", "upload_time_iso_8601": "2020-03-30T05:00:57.861869Z", "url": "https://files.pythonhosted.org/packages/b1/f2/be6e3849af081091932b10146ad4b1416dd1fe497c13be2e7fc77359ae09/cerner_rca_packages-0.1.5.1.tar.gz", "yanked": false}], "0.1.6.1": [{"comment_text": "", "digests": {"md5": "aa07899873686bf9438aef900b87183b", "sha256": "609ac76da71990a66c1b6c20a474ac01de480bdcdd87cbd4b2e7521e16f094c5"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aa07899873686bf9438aef900b87183b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8766, "upload_time": "2020-04-01T11:35:38", "upload_time_iso_8601": "2020-04-01T11:35:38.916286Z", "url": "https://files.pythonhosted.org/packages/02/cd/c23a62ce4c04800f029617895cb3a1c4409d3c65544f406d8abc3a60f57f/cerner_rca_packages-0.1.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69fd0bd94a081ae6ab6a9f26990be4a2", "sha256": "a76e4189b352b12433d83b779925a5e0cf72670343f5f1b78a07c781a0fb745c"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.1.tar.gz", "has_sig": false, "md5_digest": "69fd0bd94a081ae6ab6a9f26990be4a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6687, "upload_time": "2020-04-01T11:35:41", "upload_time_iso_8601": "2020-04-01T11:35:41.032877Z", "url": "https://files.pythonhosted.org/packages/33/ac/1111323d45e77a4e045f15083bb63cd8b029b151fac1a2b396083720966a/cerner_rca_packages-0.1.6.1.tar.gz", "yanked": false}], "0.1.6.10": [{"comment_text": "", "digests": {"md5": "598d63fcefa5c27ccc0d43f9869630c2", "sha256": "815c585d3b9be1b0590bc7ccd0628f3afb3329821f9fc522a204b5e8d4d619d5"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.10-py3-none-any.whl", "has_sig": false, "md5_digest": "598d63fcefa5c27ccc0d43f9869630c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9700, "upload_time": "2020-04-03T07:48:39", "upload_time_iso_8601": "2020-04-03T07:48:39.081077Z", "url": "https://files.pythonhosted.org/packages/e1/c4/6b82f6fccebe5f7bb3d94705292012810bb131d06df68044cba9617241de/cerner_rca_packages-0.1.6.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "450be5e00e6ea0dee9f8c6c7bed25835", "sha256": "726128a857d47eb235683985d544c8f82b212b72f5c14b57bca48dc9e0d737ea"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.10.tar.gz", "has_sig": false, "md5_digest": "450be5e00e6ea0dee9f8c6c7bed25835", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7847, "upload_time": "2020-04-03T07:48:41", "upload_time_iso_8601": "2020-04-03T07:48:41.380398Z", "url": "https://files.pythonhosted.org/packages/5a/36/23cd484ef1de08771f92f726aa19e567e907abcf2c831c8384425a9703f6/cerner_rca_packages-0.1.6.10.tar.gz", "yanked": false}], "0.1.6.11": [{"comment_text": "", "digests": {"md5": "1ad5236351925346fa17f0a6b3333805", "sha256": "467eca0ccce8558241484fb1c7e0a64f1da7217471bc8e55942570c8b1d2ea74"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.11-py3-none-any.whl", "has_sig": false, "md5_digest": "1ad5236351925346fa17f0a6b3333805", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10988, "upload_time": "2020-04-06T06:48:01", "upload_time_iso_8601": "2020-04-06T06:48:01.189530Z", "url": "https://files.pythonhosted.org/packages/e1/f9/14f9ce919660ace45f4ee08b6a92360a7de2c5d5f1f63db10b9fd23c4f1d/cerner_rca_packages-0.1.6.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae5a31781e09acb94d63dd8c7df604c4", "sha256": "6ae4fe80aa08592d5e23eae38726d312ec334874f5e190b79aaa509033c664e7"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.11.tar.gz", "has_sig": false, "md5_digest": "ae5a31781e09acb94d63dd8c7df604c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8488, "upload_time": "2020-04-06T06:48:03", "upload_time_iso_8601": "2020-04-06T06:48:03.142783Z", "url": "https://files.pythonhosted.org/packages/d2/14/002feb939ce221104953c0eb740710bb56d035fd583b5ded295a28cc1673/cerner_rca_packages-0.1.6.11.tar.gz", "yanked": false}], "0.1.6.12": [{"comment_text": "", "digests": {"md5": "284f5e01f784752fd90bce9c76fb16a5", "sha256": "248027486038e768de970768836a15dbc296b5e1a16a680e30db4752209ca3ac"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.12-py3-none-any.whl", "has_sig": false, "md5_digest": "284f5e01f784752fd90bce9c76fb16a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10826, "upload_time": "2020-04-06T06:55:42", "upload_time_iso_8601": "2020-04-06T06:55:42.242495Z", "url": "https://files.pythonhosted.org/packages/5a/5b/890a3315441c51de6930f2e58ee6e3c85473703784d088a5d333f6a16766/cerner_rca_packages-0.1.6.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08d884fe537f1f0df5f4cfe56b442b09", "sha256": "e36dcfbac89a3a93a5428307f5be6013118f8c5878ca4a778dee6a73758d3ba1"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.12.tar.gz", "has_sig": false, "md5_digest": "08d884fe537f1f0df5f4cfe56b442b09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8340, "upload_time": "2020-04-06T06:55:43", "upload_time_iso_8601": "2020-04-06T06:55:43.930693Z", "url": "https://files.pythonhosted.org/packages/94/a7/3ecfaf7cf347515be4994927a747aa14033a6568943ce428564b79afd268/cerner_rca_packages-0.1.6.12.tar.gz", "yanked": false}], "0.1.6.13": [{"comment_text": "", "digests": {"md5": "64f83f86f504571263ad7983885ee1e0", "sha256": "631b658f6eb59fc354f0c5eb54d09dd847bc00daaf0dd2dc3e4f56c1c179311e"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.13-py3-none-any.whl", "has_sig": false, "md5_digest": "64f83f86f504571263ad7983885ee1e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10825, "upload_time": "2020-04-06T09:56:04", "upload_time_iso_8601": "2020-04-06T09:56:04.346952Z", "url": "https://files.pythonhosted.org/packages/e1/b5/070d6785aaa6cfeb47935e6b19429b3c5ae8616b0cfe77f4c9c44659e38c/cerner_rca_packages-0.1.6.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8e35bec9fe805f2dfc63fda285a8069", "sha256": "2509c373336774f8fb135078ae4866e529915270e4f0ca18d76d412c763aec12"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.13.tar.gz", "has_sig": false, "md5_digest": "f8e35bec9fe805f2dfc63fda285a8069", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8314, "upload_time": "2020-04-06T09:56:06", "upload_time_iso_8601": "2020-04-06T09:56:06.103765Z", "url": "https://files.pythonhosted.org/packages/79/9a/000a78be279168b7d278449268ab17931c492fc5889c044541b7706a1e40/cerner_rca_packages-0.1.6.13.tar.gz", "yanked": false}], "0.1.6.2": [{"comment_text": "", "digests": {"md5": "5ce6a19977213c34ef797aa1d2ee0e97", "sha256": "b64b84fc1e93edd0fe14597fc257d079fe45ecf884a9cdbcf3cddd614370c537"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5ce6a19977213c34ef797aa1d2ee0e97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8766, "upload_time": "2020-04-01T11:53:44", "upload_time_iso_8601": "2020-04-01T11:53:44.108293Z", "url": "https://files.pythonhosted.org/packages/c6/d1/ace4219adfd49f904fff185b61a0386052d9c2a6dcde47e62af46d22883f/cerner_rca_packages-0.1.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eceeb3deef4a16744be1595cf861d82d", "sha256": "4aae7ece3903808e4e0a80553032f98b73d53fbcd15f3fb6c325d4cacb6293b7"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.2.tar.gz", "has_sig": false, "md5_digest": "eceeb3deef4a16744be1595cf861d82d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6683, "upload_time": "2020-04-01T11:53:47", "upload_time_iso_8601": "2020-04-01T11:53:47.477724Z", "url": "https://files.pythonhosted.org/packages/91/bb/d7002b108d92307f58403f6a8174862c9ffba6c6b2c4dbe582009f491617/cerner_rca_packages-0.1.6.2.tar.gz", "yanked": false}], "0.1.6.3": [{"comment_text": "", "digests": {"md5": "80416393c37785bf454cbb0f185bca0a", "sha256": "093c876f604ac8859eee0fcb965f045bb856eb48f5c504fc7d8f6835c2f06cc0"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "80416393c37785bf454cbb0f185bca0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8976, "upload_time": "2020-04-02T05:28:07", "upload_time_iso_8601": "2020-04-02T05:28:07.738538Z", "url": "https://files.pythonhosted.org/packages/2a/dc/8ef3ce90953dd5180491048d0cbf50dc6f0a73ff7447c2d23898477e66cb/cerner_rca_packages-0.1.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a28d6939c6f08232ee664741ac5351fb", "sha256": "2537680a2a788a82495631b3c5df38078be11e1bb80231de9f9399c213615470"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.3.tar.gz", "has_sig": false, "md5_digest": "a28d6939c6f08232ee664741ac5351fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7113, "upload_time": "2020-04-02T05:28:54", "upload_time_iso_8601": "2020-04-02T05:28:54.085409Z", "url": "https://files.pythonhosted.org/packages/7a/8a/9749d2da3ebc3513c379f89a6587f80774f2bc438e661f970e2c470e7a3c/cerner_rca_packages-0.1.6.3.tar.gz", "yanked": false}], "0.1.6.4": [{"comment_text": "", "digests": {"md5": "c709c4fe44722cdd563ab1cc95d3d276", "sha256": "c2fb4ba1579b4973847ef659705ff72cf8be6dc41cb128042b039b139602eee3"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c709c4fe44722cdd563ab1cc95d3d276", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9034, "upload_time": "2020-04-02T05:52:31", "upload_time_iso_8601": "2020-04-02T05:52:31.343220Z", "url": "https://files.pythonhosted.org/packages/a9/3d/b8f3a9cfc33bc44f2eb87135a1a145ed9d3d95251edc42e89a943ba91080/cerner_rca_packages-0.1.6.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41eb50114f1601e5fa55ce81b8855c4d", "sha256": "c9ddfb1a37895148244c25d807ed3d48906e9045f97e45d1ab8b9d40f8aac0c7"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.4.tar.gz", "has_sig": false, "md5_digest": "41eb50114f1601e5fa55ce81b8855c4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7145, "upload_time": "2020-04-02T05:52:32", "upload_time_iso_8601": "2020-04-02T05:52:32.795653Z", "url": "https://files.pythonhosted.org/packages/b4/f5/b7a0c5006f0f558941c60dc3abf43704f83b42ab7a2c07b383daa282b33a/cerner_rca_packages-0.1.6.4.tar.gz", "yanked": false}], "0.1.6.5": [{"comment_text": "", "digests": {"md5": "2bd7fd6529ffa81dd8e259c02c74bc16", "sha256": "4fe687f1f3f4c5040e2d1135551bad2ffa7411f7c8ade38ad03a7c38b94a4c9e"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2bd7fd6529ffa81dd8e259c02c74bc16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8989, "upload_time": "2020-04-02T05:58:48", "upload_time_iso_8601": "2020-04-02T05:58:48.094939Z", "url": "https://files.pythonhosted.org/packages/62/f1/51016526a618bd2e9d99e1d32936a8d1239df7a6d4c84b4b2923312845ad/cerner_rca_packages-0.1.6.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab619ee058201e694f2dc9bda52b7d11", "sha256": "7e40efb77feeb3f79825484bc4b7b6a4fcb3aa8db89d03c03fd87f2fa2da3965"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.5.tar.gz", "has_sig": false, "md5_digest": "ab619ee058201e694f2dc9bda52b7d11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7128, "upload_time": "2020-04-02T05:58:49", "upload_time_iso_8601": "2020-04-02T05:58:49.399925Z", "url": "https://files.pythonhosted.org/packages/98/22/708692bdd7c98d5d26805234f3f2346619b16929a74f7590b934c5e59b6d/cerner_rca_packages-0.1.6.5.tar.gz", "yanked": false}], "0.1.6.6": [{"comment_text": "", "digests": {"md5": "f2a59fd212193fae8a0dcdbc58abb079", "sha256": "9408a2e621739334805bd32760d35a8cdd73d3cd372629b5dcc300c86d75794f"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.6-py3-none-any.whl", "has_sig": false, "md5_digest": "f2a59fd212193fae8a0dcdbc58abb079", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8978, "upload_time": "2020-04-02T06:09:13", "upload_time_iso_8601": "2020-04-02T06:09:13.020837Z", "url": "https://files.pythonhosted.org/packages/29/7f/e84035fe18ef0f637e29ca049732bbb4ef4e3503a64f3603e594476f6a23/cerner_rca_packages-0.1.6.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4111a6fefe5e3c931278b36db9ac1896", "sha256": "f9f6a0ac818157107f18ff7381ecc027ea05da358e7704d90803cc83ed048dbb"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.6.tar.gz", "has_sig": false, "md5_digest": "4111a6fefe5e3c931278b36db9ac1896", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7115, "upload_time": "2020-04-02T06:09:14", "upload_time_iso_8601": "2020-04-02T06:09:14.524858Z", "url": "https://files.pythonhosted.org/packages/3a/92/702547c8e9f9ef847fa90db0b3fbd4791f845285ce73196838f914b86a17/cerner_rca_packages-0.1.6.6.tar.gz", "yanked": false}], "0.1.6.7": [{"comment_text": "", "digests": {"md5": "335c0b57d516d9607dd9580aa6e3cbf1", "sha256": "c5b349d325769ff9e13042741f382daff14c9ad1ab303b644e31f4904c635f1e"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.7-py3-none-any.whl", "has_sig": false, "md5_digest": "335c0b57d516d9607dd9580aa6e3cbf1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9553, "upload_time": "2020-04-03T04:31:01", "upload_time_iso_8601": "2020-04-03T04:31:01.324197Z", "url": "https://files.pythonhosted.org/packages/cb/60/5acccd073fcf5b0de4fd92c648562bef18e27c5981daf80559c9c5dde71d/cerner_rca_packages-0.1.6.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08206b7e2879ec5a363333654f643919", "sha256": "b50121efdc55da3f90d2bab00bfb454bf395ea98d660b6570f3552b692675bb6"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.7.tar.gz", "has_sig": false, "md5_digest": "08206b7e2879ec5a363333654f643919", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7714, "upload_time": "2020-04-03T04:31:03", "upload_time_iso_8601": "2020-04-03T04:31:03.760295Z", "url": "https://files.pythonhosted.org/packages/ec/c2/f20c5afa6fe1bc2706cfcad0f6e40f6e04d5d425dfee38c73110751c31dd/cerner_rca_packages-0.1.6.7.tar.gz", "yanked": false}], "0.1.6.8": [{"comment_text": "", "digests": {"md5": "f2eb2aa79aea1505ee9fc5be79595981", "sha256": "95d14f5cd9783227cc451a9d8a84604420e7c555b89b60c1b155aefab80372ec"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.8-py3-none-any.whl", "has_sig": false, "md5_digest": "f2eb2aa79aea1505ee9fc5be79595981", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9673, "upload_time": "2020-04-03T06:21:17", "upload_time_iso_8601": "2020-04-03T06:21:17.111306Z", "url": "https://files.pythonhosted.org/packages/d0/d2/c0d9a6e2a22998ad4c838c4f97eaadd9b76db62ade8aecfcff06022897c3/cerner_rca_packages-0.1.6.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eba6a1ef1b77247168a4305751424c70", "sha256": "ddda9ececba3203e0e75e675d6e334878d50b229bdc20785e8172fc3644e7f81"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.8.tar.gz", "has_sig": false, "md5_digest": "eba6a1ef1b77247168a4305751424c70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7833, "upload_time": "2020-04-03T06:21:18", "upload_time_iso_8601": "2020-04-03T06:21:18.532520Z", "url": "https://files.pythonhosted.org/packages/4e/dc/4ec4134f88d62c30d506a2b9b6cacbae20952fc143e81cc0d6792af7504e/cerner_rca_packages-0.1.6.8.tar.gz", "yanked": false}], "0.1.6.9": [{"comment_text": "", "digests": {"md5": "b4ea0a9efb9f9718c0c04e1b3bc91840", "sha256": "5c0969f6d601bd6591e960c5e9de72350b255a8c9b7da77c46b38cb3bcc05331"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.9-py3-none-any.whl", "has_sig": false, "md5_digest": "b4ea0a9efb9f9718c0c04e1b3bc91840", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9673, "upload_time": "2020-04-03T07:20:15", "upload_time_iso_8601": "2020-04-03T07:20:15.252208Z", "url": "https://files.pythonhosted.org/packages/16/24/5b3f49ab2b1c54df5bd3658de6a7fe01d28b193509aba8a5bf1dee06a645/cerner_rca_packages-0.1.6.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd0a348d27a0b0ca1d94dce2860ce166", "sha256": "3f77934880022e22d2291df7c934d6ac432196f3a1fc4bd1b1786fc5785aa7df"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.6.9.tar.gz", "has_sig": false, "md5_digest": "cd0a348d27a0b0ca1d94dce2860ce166", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7830, "upload_time": "2020-04-03T07:20:17", "upload_time_iso_8601": "2020-04-03T07:20:17.658738Z", "url": "https://files.pythonhosted.org/packages/a5/c4/c228f2cf48038fe8009d603d708e7b2e4e8b3eea069ee17f3296b8409b3c/cerner_rca_packages-0.1.6.9.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "b63e8f2244f4466b3ee3c83bb8bfea19", "sha256": "d4dfd0bf89c50cfbc944be05a6b003963620f06e5c11ea6558b02def1f871ef0"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "b63e8f2244f4466b3ee3c83bb8bfea19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13893, "upload_time": "2020-04-07T12:33:17", "upload_time_iso_8601": "2020-04-07T12:33:17.227666Z", "url": "https://files.pythonhosted.org/packages/29/e7/763e7c2b8685000f30748abb98266148b8ffb115d4e58f15a2101a3614de/cerner_rca_packages-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc5ed9b8f4cf63e7a362dbfbed771eb3", "sha256": "49392aa86ea8c5988ecaac503606523f2d1bb9c842273468261c44fdd3d67d38"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.7.tar.gz", "has_sig": false, "md5_digest": "fc5ed9b8f4cf63e7a362dbfbed771eb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11980, "upload_time": "2020-04-07T12:33:20", "upload_time_iso_8601": "2020-04-07T12:33:20.290515Z", "url": "https://files.pythonhosted.org/packages/a3/dc/457025fdc722867151cffd05f30410916ea65b0b95de39be64cd4601035d/cerner_rca_packages-0.1.7.tar.gz", "yanked": false}], "0.1.7.1": [{"comment_text": "", "digests": {"md5": "f4bc3afebe5d35c76c3f989e1d5ded9f", "sha256": "d8e1efb23e25ac455d65e331d3377a91878bb6f5c1850dab7f4a289e94e9d46b"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f4bc3afebe5d35c76c3f989e1d5ded9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13921, "upload_time": "2020-04-07T13:16:25", "upload_time_iso_8601": "2020-04-07T13:16:25.934452Z", "url": "https://files.pythonhosted.org/packages/69/38/7dcbab8e8649fc2f0929d3c1c5dc631f5ffe96695757022dcd2f6e108abe/cerner_rca_packages-0.1.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eba4155d4e88b768a4deebf44b0c99d6", "sha256": "c76b6ca44895d930c63b19d36f098978f5dc43f08f9f6f1f7d5bc6e64d3173a1"}, "downloads": -1, "filename": "cerner_rca_packages-0.1.7.1.tar.gz", "has_sig": false, "md5_digest": "eba4155d4e88b768a4deebf44b0c99d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12538, "upload_time": "2020-04-07T13:16:31", "upload_time_iso_8601": "2020-04-07T13:16:31.061255Z", "url": "https://files.pythonhosted.org/packages/8d/94/cf0751a911e49a4f1d15bd76c498951ec856ee110b5aa25257e917db1e01/cerner_rca_packages-0.1.7.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "19b2d69d0226a235626ab36aec179bc3", "sha256": "23db884500c9eef4b147e8043ba710a7975a006454f4886743a5ec76a8a8bdb9"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "19b2d69d0226a235626ab36aec179bc3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13886, "upload_time": "2020-04-08T04:06:26", "upload_time_iso_8601": "2020-04-08T04:06:26.800035Z", "url": "https://files.pythonhosted.org/packages/dd/8d/152eb6d2a02c2cf96e8c742b88922d412306cfde312debbb09934bbf7650/cerner_rca_packages-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1b953ecb8a554c125961f50d0d40b2f", "sha256": "a69e63ce5f176686c7d708449de9c0ddef66863527435e3ce4edd3673fecd15f"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f1b953ecb8a554c125961f50d0d40b2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12523, "upload_time": "2020-04-08T04:06:29", "upload_time_iso_8601": "2020-04-08T04:06:29.021497Z", "url": "https://files.pythonhosted.org/packages/71/19/298cad4628cedfb6802f2792b1686737101aea9004cdb025db3af3e4aed4/cerner_rca_packages-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ab1691f2c7e37dda1be203cdc7fbe14f", "sha256": "cc8d4fe56372996535d0bfcefc6fbe509a5fc09b41bf40c22f3504d28d6858b9"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ab1691f2c7e37dda1be203cdc7fbe14f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14001, "upload_time": "2020-04-15T09:44:34", "upload_time_iso_8601": "2020-04-15T09:44:34.549883Z", "url": "https://files.pythonhosted.org/packages/d0/66/901948594350028ec2fbec708411e868dace215d9acbc016e3c80212a4c5/cerner_rca_packages-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccdf7ee931caebafaf121ccc9cba1f65", "sha256": "0e2ee5dfbfa3e13bb92042fd9915894e15e1fdb55073fa703ad67190e9a4bcd6"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ccdf7ee931caebafaf121ccc9cba1f65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12619, "upload_time": "2020-04-15T09:44:36", "upload_time_iso_8601": "2020-04-15T09:44:36.711506Z", "url": "https://files.pythonhosted.org/packages/fa/c4/ba08b92ed0aea54019923d75f7a347e5e9d507effc12203ee50046dc3f93/cerner_rca_packages-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "df9fcb9c1c2ceaf0a91fa5d8e52e6729", "sha256": "ae45d8a963ae9e5d4b524b66f6735dfe6ed571dcc8e5eaaacbc72b761df4e27d"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "df9fcb9c1c2ceaf0a91fa5d8e52e6729", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14012, "upload_time": "2020-04-15T11:42:46", "upload_time_iso_8601": "2020-04-15T11:42:46.991169Z", "url": "https://files.pythonhosted.org/packages/1c/1f/2db16a666126c12397e3e2357f6d5b0e787c89786cbf4d42b8532e664570/cerner_rca_packages-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d19cca5fdc61f1186f90ff91c61a224", "sha256": "b2f5f3393976081271e4a455061038a598968fdcf7dc638b5135bd896b0d74f1"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.2.tar.gz", "has_sig": false, "md5_digest": "5d19cca5fdc61f1186f90ff91c61a224", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12710, "upload_time": "2020-04-15T11:42:49", "upload_time_iso_8601": "2020-04-15T11:42:49.736878Z", "url": "https://files.pythonhosted.org/packages/00/f7/541d49e84073f8a7024af6843ad7fab5ce7cfd939a8fddf4b8539dcaa766/cerner_rca_packages-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "6caf9ba86b19665c666beb889c80e3c4", "sha256": "9957d7419ab832d902e85e09d702ca066702486b20f40c80ef1c1c3e4639b6a5"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6caf9ba86b19665c666beb889c80e3c4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14220, "upload_time": "2020-04-17T04:12:50", "upload_time_iso_8601": "2020-04-17T04:12:50.185072Z", "url": "https://files.pythonhosted.org/packages/43/27/6a350b41c376a4e7e38f2678e23acc4606c8438890255515935ab03a1338/cerner_rca_packages-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf86c2493ac362ad3d7bdc2a6e408335", "sha256": "3053f94e2ef442b37c76308a8d91e199f165c7c9d311770d7052781b37a66ac1"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.3.tar.gz", "has_sig": false, "md5_digest": "bf86c2493ac362ad3d7bdc2a6e408335", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13026, "upload_time": "2020-04-17T04:13:06", "upload_time_iso_8601": "2020-04-17T04:13:06.254898Z", "url": "https://files.pythonhosted.org/packages/77/dd/a5538eaab3682ad7b91c4b8be7b74ed505f04449821f1fd124ddf662cf06/cerner_rca_packages-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "2ae09a1e4bc73e3cc6bb80107a642eee", "sha256": "ef0deea14dc1cd109a4d61440cbaec0190b26042ad1a49f40b5473e633623ce3"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "2ae09a1e4bc73e3cc6bb80107a642eee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14793, "upload_time": "2020-04-23T10:48:48", "upload_time_iso_8601": "2020-04-23T10:48:48.451110Z", "url": "https://files.pythonhosted.org/packages/aa/2b/e18c17ff9db9b80f50562d8cf8e84d5e6c92e15a05a8f5a4325ab0c4b319/cerner_rca_packages-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "731da3abcb3c08678545393a80e69cc3", "sha256": "72ba1a72daef9839e6e6811d87127c21cc78da0b4aad12ba4003802e2c18bee4"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.4.tar.gz", "has_sig": false, "md5_digest": "731da3abcb3c08678545393a80e69cc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13792, "upload_time": "2020-04-23T10:48:50", "upload_time_iso_8601": "2020-04-23T10:48:50.567686Z", "url": "https://files.pythonhosted.org/packages/40/d2/d83cf0c1515b53778f7401173f3a164d498801ccf803c4a59424dadba8ee/cerner_rca_packages-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "ac19f31b76061d404997cf1263553c1f", "sha256": "1df1788791821bbd85dcea0ca2939e70fd59f9c376320ed9ec40585e17e1ee16"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ac19f31b76061d404997cf1263553c1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14797, "upload_time": "2020-04-23T11:10:17", "upload_time_iso_8601": "2020-04-23T11:10:17.466729Z", "url": "https://files.pythonhosted.org/packages/51/df/90de95204f53c0d5b9c930747c844171838d3899c12b4642e2f94b5777f3/cerner_rca_packages-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a358f0d67b0d86255f737159633186d", "sha256": "fcc474cfb6d334c1d4ca407b5fb933e04e2049ce42958f4fb8b70b9f8e830bcb"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.5.tar.gz", "has_sig": false, "md5_digest": "4a358f0d67b0d86255f737159633186d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13800, "upload_time": "2020-04-23T11:10:20", "upload_time_iso_8601": "2020-04-23T11:10:20.118722Z", "url": "https://files.pythonhosted.org/packages/16/59/37c99235c2eaf604d0a43ea58d1b6178e795974ed282d99418b4c492e5a6/cerner_rca_packages-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac19f31b76061d404997cf1263553c1f", "sha256": "1df1788791821bbd85dcea0ca2939e70fd59f9c376320ed9ec40585e17e1ee16"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ac19f31b76061d404997cf1263553c1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14797, "upload_time": "2020-04-23T11:10:17", "upload_time_iso_8601": "2020-04-23T11:10:17.466729Z", "url": "https://files.pythonhosted.org/packages/51/df/90de95204f53c0d5b9c930747c844171838d3899c12b4642e2f94b5777f3/cerner_rca_packages-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a358f0d67b0d86255f737159633186d", "sha256": "fcc474cfb6d334c1d4ca407b5fb933e04e2049ce42958f4fb8b70b9f8e830bcb"}, "downloads": -1, "filename": "cerner_rca_packages-1.0.5.tar.gz", "has_sig": false, "md5_digest": "4a358f0d67b0d86255f737159633186d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13800, "upload_time": "2020-04-23T11:10:20", "upload_time_iso_8601": "2020-04-23T11:10:20.118722Z", "url": "https://files.pythonhosted.org/packages/16/59/37c99235c2eaf604d0a43ea58d1b6178e795974ed282d99418b4c492e5a6/cerner_rca_packages-1.0.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:46 2020"}