{"info": {"author": "Unlimited Labs, Inc.", "author_email": "hello@b12.io", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "================\nRoom with a View\n================\n\n\n.. image:: https://img.shields.io/pypi/v/room_with_a_view.svg\n        :target: https://pypi.python.org/pypi/room_with_a_view\n\n.. image:: https://img.shields.io/travis/b12io/room_with_a_view.svg\n        :target: https://travis-ci.org/b12io/room_with_a_view\n\n.. image:: https://readthedocs.org/projects/room-with-a-view/badge/?version=latest\n        :target: https://room-with-a-view.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\n.. image:: https://pyup.io/repos/github/marcua/room_with_a_view/shield.svg\n     :target: https://pyup.io/repos/github/marcua/room_with_a_view/\n     :alt: Updates\n\n\n\nView management for Amazon's Redshift\n\n\n* Free software: Apache Software License 2.0\n* Documentation: https://room-with-a-view.readthedocs.io.\n\nFeatures\n--------\n\nRoom with a view is a python script that automatically parses a collection of\nSQL files to find view and function definitions and their dependencies. It then\nmakes it easy to sync those views with Redshift, automatically dropping and\nrecreating dependent views as necessary so that there are no errors. The key\nbenefits are:\n\n* No writing code to send view SQL to Redshift: the script does it for you.\n* Edit any view and sync it without worrying about needing to drop or recreate\n  views that depend on it.\n* Error handling tells you exactly where there are errors in your views.\n* The script runs in an atomic transaction, so you can't accidentally enter a\n  broken state by syncing some views and not others.\n\n\nSetup\n-----\n\n* Install the package: ``pip install room_with_a_view``.\n\n* Create ``settings.yaml``, and edit the file to configure your Redshift connection and the location of your .sql files. Example ``settings.yaml`` file:\n\n.. code-block:: yaml\n\n   connections:\n     default:\n       host: localhost\n       port: 5432\n       user: awsuser\n       password: **CHANGEME**\n       dbname: postgres\n\n   directories:\n     - .\n\n* You're ready to go! Try ``room_with_a_view sync-all`` to sync all your views, or ``room_with_a_view --help`` to learn more about the command.\n\nUsage\n-----\n\n::\n\n    usage: room_with_a_view.py [-h]\n                               [--view-names [VIEW-OR-FUNCTION-NAME [VIEW-OR-FUNCTION-NAME ...]]]\n                               [--file-names [FILE-PATH [FILE-PATH ...]]]\n                               [--connection CONNECTION]\n                               [--settings SETTINGS] [--verbosity VERBOSITY]\n                               {sync,drop-all,sync-all,list,drop}\n\n    Manages Redshift SQL views. Possible actions:\n        sync: Syncs specific views or functions (identified by the --view-names or --file-names parameters).\n        drop-all: Drops all views and functions in all .sql files in a set of directories (identified by the --directories parameter). The directory will be searched recursively.\n        sync-all: Syncs all views and functions in all .sql files in a set of directories (identified by the --directories parameter). The directory will be searched recursively.\n        list: lists all known views and functions.\n        drop: Drops specific views or functions (identified by the --view-names or --file-names parameters).\n\n    positional arguments:\n      {sync,drop-all,sync-all,list,drop}\n                            The action to perform.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --view-names [VIEW-OR-FUNCTION-NAME [VIEW-OR-FUNCTION-NAME ...]]\n                            Names of views or functions to which to apply the action.\n      --file-names [FILE-PATH [FILE-PATH ...]]\n                            Paths to .sql files to which to apply the action.\n      --connection CONNECTION\n                            Name of the Redshift connection to use (or \"default\",\n                            if not specified). The name must match a connection in\n                            settings.yaml\n      --settings SETTINGS   Location of the settings file (settings.yaml by\n                            default)\n      --verbosity VERBOSITY\n                            Verbosity of script output. 0 will output nothing, 1\n                            will output names of views and functions being dropped\n                            and created, and 2 will output all executed sql\n\nExamples\n--------\n\n* ``room_with_a_view.py sync-all``: Syncs all views and functions in all SQL files in the default directory specified in ``settings.yaml``. Drops and recreates existing views, and makes sure views are created in dependency order.\n\n* ``room_with_a_view.py sync --view-names my_view1 my_func1 --file-names ../sql/my_file.sql``: Syncs the specific view ``my_view1`` and function ``my_func1``, as well as all views and functions in the file ``../sql/my_file.sql``.\n\n* ``room_with_a_view.py drop-all --connection other_connection``: Drops all views and functions in the default directory, using the connection info specified in ``settings.yaml`` under the name ``other_connection`` to connect to Redshift.\n\n* ``room_with_a_view.py drop --view-names my_view1 --directories other_dir1 other_dir2 --settings /path/to/fancy_settings.yaml``: Drops the view ``my_view1``, looking for SQL files that contain the view and its dependents in the directories specified by ``other_dir1`` and ``other_dir2`` in the settings file located in ``/path/to/fancy_settings.yaml``.\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n=======\nHistory\n=======\n\n0.1.0 (2018-05-28)\n------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/b12io/room_with_a_view", "keywords": "room_with_a_view", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "room_with_a_view", "package_url": "https://pypi.org/project/room_with_a_view/", "platform": "", "project_url": "https://pypi.org/project/room_with_a_view/", "project_urls": {"Homepage": "https://github.com/b12io/room_with_a_view"}, "release_url": "https://pypi.org/project/room_with_a_view/0.1.4/", "requires_dist": ["psycopg2 (==2.7.5)", "PyYAML (==3.12)"], "requires_python": "", "summary": "View management for Amazon's Redshift", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"room-with-a-view\">\n<h2>Room with a View</h2>\n<a href=\"https://pypi.python.org/pypi/room_with_a_view\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/room_with_a_view.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52353bb1ed64356b5d16b4d47947f9137c36f734/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f726f6f6d5f776974685f615f766965772e737667\"></a>\n<a href=\"https://travis-ci.org/b12io/room_with_a_view\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/b12io/room_with_a_view.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2cfeccf0f58a6657ef4f38a4b318346a9629bfb9/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f623132696f2f726f6f6d5f776974685f615f766965772e737667\"></a>\n<a href=\"https://room-with-a-view.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a20c436e8e0a1d16b0ec8bcf04ce5523e4dd81fa/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f726f6f6d2d776974682d612d766965772f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pyup.io/repos/github/marcua/room_with_a_view/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08a483730472a0d70d4c59d7253ff441989f4b98/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f6d61726375612f726f6f6d5f776974685f615f766965772f736869656c642e737667\"></a>\n<p>View management for Amazon\u2019s Redshift</p>\n<ul>\n<li>Free software: Apache Software License 2.0</li>\n<li>Documentation: <a href=\"https://room-with-a-view.readthedocs.io\" rel=\"nofollow\">https://room-with-a-view.readthedocs.io</a>.</li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<p>Room with a view is a python script that automatically parses a collection of\nSQL files to find view and function definitions and their dependencies. It then\nmakes it easy to sync those views with Redshift, automatically dropping and\nrecreating dependent views as necessary so that there are no errors. The key\nbenefits are:</p>\n<ul>\n<li>No writing code to send view SQL to Redshift: the script does it for you.</li>\n<li>Edit any view and sync it without worrying about needing to drop or recreate\nviews that depend on it.</li>\n<li>Error handling tells you exactly where there are errors in your views.</li>\n<li>The script runs in an atomic transaction, so you can\u2019t accidentally enter a\nbroken state by syncing some views and not others.</li>\n</ul>\n</div>\n<div id=\"setup\">\n<h3>Setup</h3>\n<ul>\n<li>Install the package: <tt>pip install room_with_a_view</tt>.</li>\n<li>Create <tt>settings.yaml</tt>, and edit the file to configure your Redshift connection and the location of your .sql files. Example <tt>settings.yaml</tt> file:</li>\n</ul>\n<pre><span class=\"nt\">connections</span><span class=\"p\">:</span>\n  <span class=\"nt\">default</span><span class=\"p\">:</span>\n    <span class=\"nt\">host</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">localhost</span>\n    <span class=\"nt\">port</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">5432</span>\n    <span class=\"nt\">user</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">awsuser</span>\n    <span class=\"nt\">password</span><span class=\"p\">:</span> <span class=\"err\">*</span><span class=\"nv\">*CHANGEME</span><span class=\"err\">**</span>\n    <span class=\"nt\">dbname</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">postgres</span>\n\n<span class=\"nt\">directories</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">.</span>\n</pre>\n<ul>\n<li>You\u2019re ready to go! Try <tt>room_with_a_view <span class=\"pre\">sync-all</span></tt> to sync all your views, or <tt>room_with_a_view <span class=\"pre\">--help</span></tt> to learn more about the command.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre>usage: room_with_a_view.py [-h]\n                           [--view-names [VIEW-OR-FUNCTION-NAME [VIEW-OR-FUNCTION-NAME ...]]]\n                           [--file-names [FILE-PATH [FILE-PATH ...]]]\n                           [--connection CONNECTION]\n                           [--settings SETTINGS] [--verbosity VERBOSITY]\n                           {sync,drop-all,sync-all,list,drop}\n\nManages Redshift SQL views. Possible actions:\n    sync: Syncs specific views or functions (identified by the --view-names or --file-names parameters).\n    drop-all: Drops all views and functions in all .sql files in a set of directories (identified by the --directories parameter). The directory will be searched recursively.\n    sync-all: Syncs all views and functions in all .sql files in a set of directories (identified by the --directories parameter). The directory will be searched recursively.\n    list: lists all known views and functions.\n    drop: Drops specific views or functions (identified by the --view-names or --file-names parameters).\n\npositional arguments:\n  {sync,drop-all,sync-all,list,drop}\n                        The action to perform.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --view-names [VIEW-OR-FUNCTION-NAME [VIEW-OR-FUNCTION-NAME ...]]\n                        Names of views or functions to which to apply the action.\n  --file-names [FILE-PATH [FILE-PATH ...]]\n                        Paths to .sql files to which to apply the action.\n  --connection CONNECTION\n                        Name of the Redshift connection to use (or \"default\",\n                        if not specified). The name must match a connection in\n                        settings.yaml\n  --settings SETTINGS   Location of the settings file (settings.yaml by\n                        default)\n  --verbosity VERBOSITY\n                        Verbosity of script output. 0 will output nothing, 1\n                        will output names of views and functions being dropped\n                        and created, and 2 will output all executed sql\n</pre>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<ul>\n<li><tt>room_with_a_view.py <span class=\"pre\">sync-all</span></tt>: Syncs all views and functions in all SQL files in the default directory specified in <tt>settings.yaml</tt>. Drops and recreates existing views, and makes sure views are created in dependency order.</li>\n<li><tt>room_with_a_view.py sync <span class=\"pre\">--view-names</span> my_view1 my_func1 <span class=\"pre\">--file-names</span> <span class=\"pre\">../sql/my_file.sql</span></tt>: Syncs the specific view <tt>my_view1</tt> and function <tt>my_func1</tt>, as well as all views and functions in the file <tt><span class=\"pre\">../sql/my_file.sql</span></tt>.</li>\n<li><tt>room_with_a_view.py <span class=\"pre\">drop-all</span> <span class=\"pre\">--connection</span> other_connection</tt>: Drops all views and functions in the default directory, using the connection info specified in <tt>settings.yaml</tt> under the name <tt>other_connection</tt> to connect to Redshift.</li>\n<li><tt>room_with_a_view.py drop <span class=\"pre\">--view-names</span> my_view1 <span class=\"pre\">--directories</span> other_dir1 other_dir2 <span class=\"pre\">--settings</span> /path/to/fancy_settings.yaml</tt>: Drops the view <tt>my_view1</tt>, looking for SQL files that contain the view and its dependents in the directories specified by <tt>other_dir1</tt> and <tt>other_dir2</tt> in the settings file located in <tt>/path/to/fancy_settings.yaml</tt>.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.0 (2018-05-28)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4075436, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "618d1ba0c4ab8f408f8690d957099021", "sha256": "cc608258a9c3c044953c264052c87e591afbff6fd317ba976f6775b23d4d335e"}, "downloads": -1, "filename": "room_with_a_view-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "618d1ba0c4ab8f408f8690d957099021", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 10434, "upload_time": "2018-07-04T03:37:14", "upload_time_iso_8601": "2018-07-04T03:37:14.566827Z", "url": "https://files.pythonhosted.org/packages/fe/84/90d3bae5c525a28a0e1cd2a71061fef363e8254c399dca5925a5feb00421/room_with_a_view-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db8c75f6aa27ad94888e0e9c61d4d866", "sha256": "b728eb55deba98d59947e51339ffb9ca67c47470a2bdfa7daf9c23a0fa4384f8"}, "downloads": -1, "filename": "room_with_a_view-0.1.0.tar.gz", "has_sig": false, "md5_digest": "db8c75f6aa27ad94888e0e9c61d4d866", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13318, "upload_time": "2018-07-04T03:37:03", "upload_time_iso_8601": "2018-07-04T03:37:03.432740Z", "url": "https://files.pythonhosted.org/packages/a8/26/bf53435e81c0b6c430610d14c4da93c5b053b51ba17c3a8811226d48216d/room_with_a_view-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "5c113d5637117d49a34448f0d15305a2", "sha256": "d2a213fa6f868a9fe9b7f0bcc3c89badc0ee201684611ffa906c41a1204e287f"}, "downloads": -1, "filename": "room_with_a_view-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c113d5637117d49a34448f0d15305a2", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 10437, "upload_time": "2018-07-04T03:54:39", "upload_time_iso_8601": "2018-07-04T03:54:39.119054Z", "url": "https://files.pythonhosted.org/packages/49/99/a91fa1122429b0bedf37794ddefc41b7f71327a831a38759d1e87977c168/room_with_a_view-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e20bd0befc1c45c2fc82b40994b5736", "sha256": "da90c688804df1a0bca28eedf6c4985f4805eee90bb9e5c516f273031efb5b8d"}, "downloads": -1, "filename": "room_with_a_view-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7e20bd0befc1c45c2fc82b40994b5736", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13333, "upload_time": "2018-07-04T03:54:32", "upload_time_iso_8601": "2018-07-04T03:54:32.924739Z", "url": "https://files.pythonhosted.org/packages/65/4c/cac7baf7c7c771d8869953a4ed7be15621f13f1ea972a534dfd4adda938c/room_with_a_view-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9c76dd2792140bec3e338c4c0ce87600", "sha256": "0e3dacfb5b62e3876555f12066e375bcded9efec17a1190aefbe70b7bca0c530"}, "downloads": -1, "filename": "room_with_a_view-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9c76dd2792140bec3e338c4c0ce87600", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 10439, "upload_time": "2018-07-04T03:57:31", "upload_time_iso_8601": "2018-07-04T03:57:31.759744Z", "url": "https://files.pythonhosted.org/packages/9e/d2/fef0156ac385a68c4940372c29a8c728c3820c69d2b8b6cd022e4324cf0a/room_with_a_view-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a0779ca49dbb6ae7c2b267b6349d729", "sha256": "994cc785eefe54b9ea02abc279451925a3d86a9da55823e1f874a2596f830e6b"}, "downloads": -1, "filename": "room_with_a_view-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6a0779ca49dbb6ae7c2b267b6349d729", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13321, "upload_time": "2018-07-04T03:57:18", "upload_time_iso_8601": "2018-07-04T03:57:18.831775Z", "url": "https://files.pythonhosted.org/packages/c1/48/4d1de94289a8904968d79fafedd6447db2251d6d5e3fac18581850e1e12f/room_with_a_view-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "45c75848385b02ee93478a8f601f1d79", "sha256": "63cb68333c056e35a885a4b7067f2c9ceff1ae18d39e1e2995ca890c4e24a3e4"}, "downloads": -1, "filename": "room_with_a_view-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "45c75848385b02ee93478a8f601f1d79", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 11771, "upload_time": "2018-07-04T19:03:01", "upload_time_iso_8601": "2018-07-04T19:03:01.010219Z", "url": "https://files.pythonhosted.org/packages/9d/4f/c06d12a34f2a6a04bc19f2e2b5f9417d462aa762ae3476b77528b9a0e7d2/room_with_a_view-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aad85f3f2ac1528614cf179d2226c636", "sha256": "5e5cbccbc58edf78f065a411ec7f84765ff078e01c16aa2b847a5c8dd8267f0e"}, "downloads": -1, "filename": "room_with_a_view-0.1.3.tar.gz", "has_sig": false, "md5_digest": "aad85f3f2ac1528614cf179d2226c636", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14548, "upload_time": "2018-07-04T19:02:55", "upload_time_iso_8601": "2018-07-04T19:02:55.279057Z", "url": "https://files.pythonhosted.org/packages/08/88/8bf4e837bbf887274e261c54b80b2164ce4453b6c4714fb4579ae1a5475c/room_with_a_view-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "094b1892465af576c9b4643f78a7abcf", "sha256": "3714236e09fbb6de251418976d1c82ab60312d03e82655e15d01e562d62baed7"}, "downloads": -1, "filename": "room_with_a_view-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "094b1892465af576c9b4643f78a7abcf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11644, "upload_time": "2018-07-17T21:25:23", "upload_time_iso_8601": "2018-07-17T21:25:23.959785Z", "url": "https://files.pythonhosted.org/packages/ff/0d/78c48832994f3453a3c8d993bcc53ebdc821a2925b270a564a21f3ccd233/room_with_a_view-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d7d80eb0ff6a0c063f7f383fa798fe1", "sha256": "020d3c0a44877775e15c9a05b4aa4f4afa60f25a0036a7a396a0fb0afa957108"}, "downloads": -1, "filename": "room_with_a_view-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3d7d80eb0ff6a0c063f7f383fa798fe1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14433, "upload_time": "2018-07-17T21:25:24", "upload_time_iso_8601": "2018-07-17T21:25:24.955625Z", "url": "https://files.pythonhosted.org/packages/b7/05/1ebf8f5de7a10a554dc6d9b9b78ef99de33ed54bd51064f41b047613fa22/room_with_a_view-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "094b1892465af576c9b4643f78a7abcf", "sha256": "3714236e09fbb6de251418976d1c82ab60312d03e82655e15d01e562d62baed7"}, "downloads": -1, "filename": "room_with_a_view-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "094b1892465af576c9b4643f78a7abcf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11644, "upload_time": "2018-07-17T21:25:23", "upload_time_iso_8601": "2018-07-17T21:25:23.959785Z", "url": "https://files.pythonhosted.org/packages/ff/0d/78c48832994f3453a3c8d993bcc53ebdc821a2925b270a564a21f3ccd233/room_with_a_view-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d7d80eb0ff6a0c063f7f383fa798fe1", "sha256": "020d3c0a44877775e15c9a05b4aa4f4afa60f25a0036a7a396a0fb0afa957108"}, "downloads": -1, "filename": "room_with_a_view-0.1.4.tar.gz", "has_sig": false, "md5_digest": "3d7d80eb0ff6a0c063f7f383fa798fe1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14433, "upload_time": "2018-07-17T21:25:24", "upload_time_iso_8601": "2018-07-17T21:25:24.955625Z", "url": "https://files.pythonhosted.org/packages/b7/05/1ebf8f5de7a10a554dc6d9b9b78ef99de33ed54bd51064f41b047613fa22/room_with_a_view-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:20 2020"}