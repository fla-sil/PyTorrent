{"info": {"author": "Rayquaza01", "author_email": "rayquaza01@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Diction\nA wordnik commandline client\n\n![Example](https://i.imgur.com/1tx0CbB.gif)\n\nDiction is a python script that acts as a wrapper for Wordnik's [API](https://developer.wordnik.com)  \nBest when piped into `less`, because outputs can be pretty long\n\n## Getting Started\n * Run `pip3 install git+https://github.com/Rayquaza01/diction` or `pip3 install diction`\n * Run `diction.py` to download a sample config file to `~/diction.ini`\n * Add your API key to the config file\n\n## Arguments\nMultiple arguments can be sent at a time. `diction.py word example -d -r` returns definitions and related words for both \"word\" and \"example\".\n\n### word\nThe word(s) used when calling the API. Multiple words can be entered, separated by spaces.  \nThis is a positional argument, and must come before all other arguments.  \nEx: `diction.py word example ...`\n\n### useCanonical\nUse the canonical version of the word (e.g. cats -> cat)  \nThis argument overrides the configuration set in `diction.ini`. Each section has its own `useCanonical` option, defaulting to `false`.  \nUsed as `-c` or `--useCanonical`\n\n### limit\nThe amount of results to return per section. Accepts one number as an argument.  \nThis argument overrides the configuration set in `diction.ini`. Each section has its own `limit` option, with different defaults for each section.  \nUsed as `-l` or `--limit`  \nEx: `diction.py word -l 20 ...`\n\n### wordwrap\nThe maximum amount of characters to display on a single line. Accepts one number as an argument.  \nThis argument overrides the configuration set in `diction.ini`. The `api` section has a `wordwrap` option, defaulting to `80`.  \nSetting the value to `-1` disables wordwrapping.  \nUsed as `-ww` or `--wordwrap`  \nEx: `diction.py word -ww 100 ...`\n\n### examples\nWhether to return examples of the word.  \nUsed as `-e` or `--examples`\n\n### topExample\nSame as examples, but only returns the first example.  \nUsed as `-te` or `--topExample`\n\n### definitions\nWhether to return definitions. Accepts parts of speech as arguments, space separated. See `reference.md`  \nUsed as `-d` or `--definitions`  \nEx: `diction.py word -d noun verb ...`  \nEx: `diction.py word -d ...`\n\n### relatedWords\nWhether to return related words. Accepts related types as arguments, space separated. See `reference.md`  \nUsed as `-r` or `--relatedWords`  \nEx: `diction.py word -r synonym antonym ...`\n\n### pronunciations\nWhether to return pronunciation of the word.  \nUsed as `-p` or `--pronunciations`\n\n### hyphenation\nWhether to return hyphenation of the word.  \nUsed as `-hy` or `--hyphenation`\n\n### frequency\nWhether to open a webpage with a graph of the word's frequency. Takes a start year and an end year as arguments, or defaults to the years specified in the config.  [Chart.js](https://www.chartjs.org) is used to make the graph.  \nUsed as `-f` or `--frequency`  \nEx: `diction.py -f 1800 2012 ...`\n\n### phrases\nWhether to return two word phrases containing the word.  \nUsed as `-ph` or `--phrases`\n\n### etymologies\nWhether to return the etymologies of the word.  \nUsed as `-et` or `--etymologies`\n\n### audio\nWhether to open a webpage with audio files of pronunciations.  \nUsed as `-a` or `--audio`\n\n### randomWord\nWhether to return a random word. The word argument has no affect on this.\nUsed as `-rw` or `--randomWord`\n\n### randomWords\nSame as randomWord, but with more than one word. The word argument has no affect on this.  \nUsed as `-rws` or `--randomWords`\n\n### scrabbleScore\nWhether to return the word's scrabble score.  \nUsed as `-s` or `--scrabbleScore`\n\n# Acknowledgements\nBuilt using Python 3  \nUses [Chart.js](https://www.chartjs.org) for frequency graph (MIT)  \n[![Powered by Wordnik](https://www.wordnik.com/img/wordnik_badge_a1.png)](https://wordnik.com)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Rayquaza01/diction", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "diction", "package_url": "https://pypi.org/project/diction/", "platform": "", "project_url": "https://pypi.org/project/diction/", "project_urls": {"Homepage": "https://github.com/Rayquaza01/diction"}, "release_url": "https://pypi.org/project/diction/1.0.3/", "requires_dist": null, "requires_python": "", "summary": "A wordnik commandline client", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Diction\nA wordnik commandline client</p>\n<p>![Example](<a href=\"https://i.imgur.com/1tx0CbB.gif\" rel=\"nofollow\">https://i.imgur.com/1tx0CbB.gif</a>)</p>\n<p>Diction is a python script that acts as a wrapper for Wordnik\u2019s [API](<a href=\"https://developer.wordnik.com\" rel=\"nofollow\">https://developer.wordnik.com</a>)\nBest when piped into <cite>less</cite>, because outputs can be pretty long</p>\n<dl>\n<dt>## Getting Started</dt>\n<dd><ul>\n<li>Run <cite>pip3 install git+https://github.com/Rayquaza01/diction</cite> or <cite>pip3 install diction</cite></li>\n<li>Run <cite>diction.py</cite> to download a sample config file to <cite>~/diction.ini</cite></li>\n<li>Add your API key to the config file</li>\n</ul>\n</dd>\n</dl>\n<p>## Arguments\nMultiple arguments can be sent at a time. <cite>diction.py word example -d -r</cite> returns definitions and related words for both \u201cword\u201d and \u201cexample\u201d.</p>\n<p>### word\nThe word(s) used when calling the API. Multiple words can be entered, separated by spaces.\nThis is a positional argument, and must come before all other arguments.\nEx: <cite>diction.py word example \u2026</cite></p>\n<p>### useCanonical\nUse the canonical version of the word (e.g. cats -&gt; cat)\nThis argument overrides the configuration set in <cite>diction.ini</cite>. Each section has its own <cite>useCanonical</cite> option, defaulting to <cite>false</cite>.\nUsed as <cite>-c</cite> or <cite>\u2013useCanonical</cite></p>\n<p>### limit\nThe amount of results to return per section. Accepts one number as an argument.\nThis argument overrides the configuration set in <cite>diction.ini</cite>. Each section has its own <cite>limit</cite> option, with different defaults for each section.\nUsed as <cite>-l</cite> or <cite>\u2013limit</cite>\nEx: <cite>diction.py word -l 20 \u2026</cite></p>\n<p>### wordwrap\nThe maximum amount of characters to display on a single line. Accepts one number as an argument.\nThis argument overrides the configuration set in <cite>diction.ini</cite>. The <cite>api</cite> section has a <cite>wordwrap</cite> option, defaulting to <cite>80</cite>.\nSetting the value to <cite>-1</cite> disables wordwrapping.\nUsed as <cite>-ww</cite> or <cite>\u2013wordwrap</cite>\nEx: <cite>diction.py word -ww 100 \u2026</cite></p>\n<p>### examples\nWhether to return examples of the word.\nUsed as <cite>-e</cite> or <cite>\u2013examples</cite></p>\n<p>### topExample\nSame as examples, but only returns the first example.\nUsed as <cite>-te</cite> or <cite>\u2013topExample</cite></p>\n<p>### definitions\nWhether to return definitions. Accepts parts of speech as arguments, space separated. See <cite>reference.md</cite>\nUsed as <cite>-d</cite> or <cite>\u2013definitions</cite>\nEx: <cite>diction.py word -d noun verb \u2026</cite>\nEx: <cite>diction.py word -d \u2026</cite></p>\n<p>### relatedWords\nWhether to return related words. Accepts related types as arguments, space separated. See <cite>reference.md</cite>\nUsed as <cite>-r</cite> or <cite>\u2013relatedWords</cite>\nEx: <cite>diction.py word -r synonym antonym \u2026</cite></p>\n<p>### pronunciations\nWhether to return pronunciation of the word.\nUsed as <cite>-p</cite> or <cite>\u2013pronunciations</cite></p>\n<p>### hyphenation\nWhether to return hyphenation of the word.\nUsed as <cite>-hy</cite> or <cite>\u2013hyphenation</cite></p>\n<p>### frequency\nWhether to open a webpage with a graph of the word\u2019s frequency. Takes a start year and an end year as arguments, or defaults to the years specified in the config.  [Chart.js](<a href=\"https://www.chartjs.org\" rel=\"nofollow\">https://www.chartjs.org</a>) is used to make the graph.\nUsed as <cite>-f</cite> or <cite>\u2013frequency</cite>\nEx: <cite>diction.py -f 1800 2012 \u2026</cite></p>\n<p>### phrases\nWhether to return two word phrases containing the word.\nUsed as <cite>-ph</cite> or <cite>\u2013phrases</cite></p>\n<p>### etymologies\nWhether to return the etymologies of the word.\nUsed as <cite>-et</cite> or <cite>\u2013etymologies</cite></p>\n<p>### audio\nWhether to open a webpage with audio files of pronunciations.\nUsed as <cite>-a</cite> or <cite>\u2013audio</cite></p>\n<p>### randomWord\nWhether to return a random word. The word argument has no affect on this.\nUsed as <cite>-rw</cite> or <cite>\u2013randomWord</cite></p>\n<p>### randomWords\nSame as randomWord, but with more than one word. The word argument has no affect on this.\nUsed as <cite>-rws</cite> or <cite>\u2013randomWords</cite></p>\n<p>### scrabbleScore\nWhether to return the word\u2019s scrabble score.\nUsed as <cite>-s</cite> or <cite>\u2013scrabbleScore</cite></p>\n<p># Acknowledgements\nBuilt using Python 3\nUses [Chart.js](<a href=\"https://www.chartjs.org\" rel=\"nofollow\">https://www.chartjs.org</a>) for frequency graph (MIT)\n[![Powered by Wordnik](<a href=\"https://www.wordnik.com/img/wordnik_badge_a1.png)%5D(https://wordnik.com\" rel=\"nofollow\">https://www.wordnik.com/img/wordnik_badge_a1.png)](https://wordnik.com</a>)</p>\n\n          </div>"}, "last_serial": 5568769, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "081a95327571e01ce6ab293e94b44f72", "sha256": "e0e4adc5d0d742e110d242247fbd1df1b9a4404118409f91fea1769c0bb5f549"}, "downloads": -1, "filename": "diction-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "081a95327571e01ce6ab293e94b44f72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7401, "upload_time": "2019-07-21T16:39:56", "upload_time_iso_8601": "2019-07-21T16:39:56.744693Z", "url": "https://files.pythonhosted.org/packages/b2/b6/2e75b1e5024cdc9ac35303342514f193adacfb59ea382929dac58ed39802/diction-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1887882b933b18acdfb63b1522b8ce0", "sha256": "052f6698993ca1bfedb113e6bca81f3ea1ac766cf8ee464eabc4e4569f0dc979"}, "downloads": -1, "filename": "diction-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d1887882b933b18acdfb63b1522b8ce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5121, "upload_time": "2019-07-21T16:39:58", "upload_time_iso_8601": "2019-07-21T16:39:58.908018Z", "url": "https://files.pythonhosted.org/packages/27/16/6538cab9fdabc592e51b09f673ea07a24f3fe1c4344cd2ee38eed0171f1d/diction-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "37281e5e7e6bdf47f41aeb5083710c15", "sha256": "187a7c7dca454b971efac3fa38c943d29075f60c5a4c4c4beae61669750d6aca"}, "downloads": -1, "filename": "diction-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "37281e5e7e6bdf47f41aeb5083710c15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7430, "upload_time": "2019-07-22T15:08:54", "upload_time_iso_8601": "2019-07-22T15:08:54.045163Z", "url": "https://files.pythonhosted.org/packages/5d/7d/0acf7c152009879d7cc99439f51d7e78a3ff58ec1b3fca8783bdd399b97d/diction-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b13864bdc22c32a0cb71570163d38ab1", "sha256": "d4325eb586ef5b4576f4d3aaf7fed6d9593ffa75d55c8c3cbab069c40b436999"}, "downloads": -1, "filename": "diction-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b13864bdc22c32a0cb71570163d38ab1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5153, "upload_time": "2019-07-22T15:08:55", "upload_time_iso_8601": "2019-07-22T15:08:55.845063Z", "url": "https://files.pythonhosted.org/packages/1f/0b/60098cf08db1a8071b7aa3c48edc3516bac638753ae3ae6dbdf838572313/diction-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2b56d4820dce56a6c4aeb9890daf1760", "sha256": "9f79c46174dea324a12129c87213f793ffe0ab708787088160dd331fe51f23ba"}, "downloads": -1, "filename": "diction-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2b56d4820dce56a6c4aeb9890daf1760", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7678, "upload_time": "2019-07-22T19:25:43", "upload_time_iso_8601": "2019-07-22T19:25:43.631194Z", "url": "https://files.pythonhosted.org/packages/5b/86/483a1dd8959c454de13ae590795f26d6337479c3329f0b6bd59764cafa4e/diction-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ca7114472b5e2598989179ad93f9cac", "sha256": "eddb1a5a83caceefa25c13a1bbb1b11f6994dac691558bc1a54b218e4e63dee4"}, "downloads": -1, "filename": "diction-1.0.3.tar.gz", "has_sig": false, "md5_digest": "1ca7114472b5e2598989179ad93f9cac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5509, "upload_time": "2019-07-22T19:25:45", "upload_time_iso_8601": "2019-07-22T19:25:45.035259Z", "url": "https://files.pythonhosted.org/packages/75/f2/24465e45c6ec2f7bcbc192eb0e7505d819eca73117606838fe8dd3bf5f4c/diction-1.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b56d4820dce56a6c4aeb9890daf1760", "sha256": "9f79c46174dea324a12129c87213f793ffe0ab708787088160dd331fe51f23ba"}, "downloads": -1, "filename": "diction-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2b56d4820dce56a6c4aeb9890daf1760", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7678, "upload_time": "2019-07-22T19:25:43", "upload_time_iso_8601": "2019-07-22T19:25:43.631194Z", "url": "https://files.pythonhosted.org/packages/5b/86/483a1dd8959c454de13ae590795f26d6337479c3329f0b6bd59764cafa4e/diction-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ca7114472b5e2598989179ad93f9cac", "sha256": "eddb1a5a83caceefa25c13a1bbb1b11f6994dac691558bc1a54b218e4e63dee4"}, "downloads": -1, "filename": "diction-1.0.3.tar.gz", "has_sig": false, "md5_digest": "1ca7114472b5e2598989179ad93f9cac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5509, "upload_time": "2019-07-22T19:25:45", "upload_time_iso_8601": "2019-07-22T19:25:45.035259Z", "url": "https://files.pythonhosted.org/packages/75/f2/24465e45c6ec2f7bcbc192eb0e7505d819eca73117606838fe8dd3bf5f4c/diction-1.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:33 2020"}