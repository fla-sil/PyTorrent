{"info": {"author": "Ethan Culp", "author_email": "ethan.culp101@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "This project is to help with creating physics with Pygame\nKnowledge of Pygame is still required\n\nThis package contains 2 modules: Collisions and Physics, you only need to worry about the physics module\n\n__init__ function:\n    \u2022 This function is for creating the object. You can not use this package if you create your own Pygame rect object\n    \u2022 Args- x of object, y of object, width, height, color, the window object that you would like the object to be placed on, velocity of object (Cannot be changed later on)\n\nsetDimensions function:\n    \u2022 Args- windowWidth, windowHeight\n\nmove function:\n    \u2022 Moves the object in the direction specified (up, down, left, right)\n    \u2022 Args- velocity, direction\n\nsetGravity function:\n    \u2022 Sets the gravity for the different axis\n    \u2022 Args- x gravity, y gravity\n\nkeepInBounds function:\n    \u2022 Keeps the object in the bounds of the screen (Called in the update function)\n\nupdate function:\n    \u2022 Updates all of the objects' gravity and does collision resolution\n    \u2022 Args- A list of all of the objects\n\nprocessCollisions functions:\n    \u2022 Handles collision resolution\n    \u2022 Args- A list of all of the objects\n\ndraw function:\n    \u2022 Draws the object on the window specified in the init function\n\njump function:\n    \u2022 Makes the object jump\n    \u2022 Args- jump power, object_list (This can be left with a None value, it is not used\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SeventyFox92475/pygamePhysics", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "PygamePhysics", "package_url": "https://pypi.org/project/PygamePhysics/", "platform": "", "project_url": "https://pypi.org/project/PygamePhysics/", "project_urls": {"Homepage": "https://github.com/SeventyFox92475/pygamePhysics"}, "release_url": "https://pypi.org/project/PygamePhysics/0.0.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Help with physics in Pygame", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This project is to help with creating physics with Pygame\nKnowledge of Pygame is still required</p>\n<p>This package contains 2 modules: Collisions and Physics, you only need to worry about the physics module</p>\n<p><strong>init</strong> function:\n\u2022 This function is for creating the object. You can not use this package if you create your own Pygame rect object\n\u2022 Args- x of object, y of object, width, height, color, the window object that you would like the object to be placed on, velocity of object (Cannot be changed later on)</p>\n<p>setDimensions function:\n\u2022 Args- windowWidth, windowHeight</p>\n<p>move function:\n\u2022 Moves the object in the direction specified (up, down, left, right)\n\u2022 Args- velocity, direction</p>\n<p>setGravity function:\n\u2022 Sets the gravity for the different axis\n\u2022 Args- x gravity, y gravity</p>\n<p>keepInBounds function:\n\u2022 Keeps the object in the bounds of the screen (Called in the update function)</p>\n<p>update function:\n\u2022 Updates all of the objects' gravity and does collision resolution\n\u2022 Args- A list of all of the objects</p>\n<p>processCollisions functions:\n\u2022 Handles collision resolution\n\u2022 Args- A list of all of the objects</p>\n<p>draw function:\n\u2022 Draws the object on the window specified in the init function</p>\n<p>jump function:\n\u2022 Makes the object jump\n\u2022 Args- jump power, object_list (This can be left with a None value, it is not used</p>\n\n          </div>"}, "last_serial": 7049627, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "1f1adf4f490665a80a49b13f2971334b", "sha256": "10a7a1e9cc1260e676c95bbc6ca898bfd2e8d660d69552796f91bb0ef3e167d4"}, "downloads": -1, "filename": "PygamePhysics-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "1f1adf4f490665a80a49b13f2971334b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5", "size": 4271, "upload_time": "2020-04-18T18:55:39", "upload_time_iso_8601": "2020-04-18T18:55:39.212730Z", "url": "https://files.pythonhosted.org/packages/02/c8/da7818a3589ef2b1c21c9264cbabab5965c641d6331c5d9d2d968bbb6b2d/PygamePhysics-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b1ba43f30b79479a2270c3d9a39f80c", "sha256": "33c452c0152d0b70b883f8c4c44cdc166fdd6837b6657e2300f5c89389fd0cc8"}, "downloads": -1, "filename": "PygamePhysics-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1b1ba43f30b79479a2270c3d9a39f80c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3545, "upload_time": "2020-04-18T18:55:41", "upload_time_iso_8601": "2020-04-18T18:55:41.583138Z", "url": "https://files.pythonhosted.org/packages/8e/1e/4f20470c33020e39b9834212e76ccefe8b234edb7cb3b576dbebe7e4d42b/PygamePhysics-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f1adf4f490665a80a49b13f2971334b", "sha256": "10a7a1e9cc1260e676c95bbc6ca898bfd2e8d660d69552796f91bb0ef3e167d4"}, "downloads": -1, "filename": "PygamePhysics-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "1f1adf4f490665a80a49b13f2971334b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5", "size": 4271, "upload_time": "2020-04-18T18:55:39", "upload_time_iso_8601": "2020-04-18T18:55:39.212730Z", "url": "https://files.pythonhosted.org/packages/02/c8/da7818a3589ef2b1c21c9264cbabab5965c641d6331c5d9d2d968bbb6b2d/PygamePhysics-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b1ba43f30b79479a2270c3d9a39f80c", "sha256": "33c452c0152d0b70b883f8c4c44cdc166fdd6837b6657e2300f5c89389fd0cc8"}, "downloads": -1, "filename": "PygamePhysics-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1b1ba43f30b79479a2270c3d9a39f80c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3545, "upload_time": "2020-04-18T18:55:41", "upload_time_iso_8601": "2020-04-18T18:55:41.583138Z", "url": "https://files.pythonhosted.org/packages/8e/1e/4f20470c33020e39b9834212e76ccefe8b234edb7cb3b576dbebe7e4d42b/PygamePhysics-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:19 2020"}