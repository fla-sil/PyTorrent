{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "[![Build Status](https://travis-ci.org/wsp-sag/network_wrangler.svg?branch=master)](https://travis-ci.org/wsp-sag/network_wrangler)\n\n# network_wrangler\n\nNetwork Wrangler is a Python library for managing travel model network scenarios.\n\n## System Requirements\nNetwork Wrangler should be operating system agonistic and has been tested on Ubuntu and Mac OS.\n\nIn order to assist in installation, its helpful to have either [miniconda](https://docs.conda.io/en/latest/miniconda.html), [anaconda](https://docs.conda.io/projects/continuumio-conda/en/latest/user-guide/install/index.html#regular-installation) or [Docker CE](https://docs.docker.com/install/) installed.  If you don't have any of these already, we reommend starting with Miniconda for Python 3.7 as it has the smallest footprint. `conda` is the environment manager that is contained within both the Anaconda and mini-conda applications.\n\nNetwork Wrangler does require Python 3.7+.  If you have a different version of Python installed, `conda` will take care of installing it for you in the installation instructions below.\n\n## Installation\nNetwork Wrangler uses Python 3.6 and above.  Requirements are stored in `requirements.txt` but are automatically installed when using `pip`.\n\nIf you are managing multiple python versions, we suggest using [`virtualenv`](https://virtualenv.pypa.io/en/latest/) or [`conda`](https://conda.io/en/latest/) virtual environments. `conda` is the environment manager that is contained within both the Anaconda and mini-conda applications.\n\nExample installing and running tests using conda in the command line:\n\n```bash\nconda create python=3.7 -n wrangler_env\nsource activate wrangler_env\nconda install rtree\npip install network-wrangler\npytest -s -m travis\n```\n\n### From GitHub\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install Network Wrangler from the source on GitHub.\n\n```bash\npip install git+https://github.com/wsp-sag/network_wrangler.git@master#egg=network_wrangler\n```\n\nNote: if you wanted to install from a specific tag/version number or branch, replace `@master` with `@<branchname>`  or `@tag`\n\n### From Clone\nIf you are going to be working on Network Wrangler locally, you might want to clone it to your local machine and install it from the clone.  The -e will install it in [editable mode](https://pip.pypa.io/en/stable/reference/pip_install/?highlight=editable#editable-installs).\n\nThis is also useful if you want to continue to update your Network Wrangler as it is developed on GitHub.\n\n**1. Open a terminal to get a command prompt.**\n\n**2. Consider using a virtual environment manager like conda.**\n\nCreate a new environment by typing the following commands into the command prompt (it might take a few minutes).  \n\n```bash\nconda create python=3.7 -n wrangler_env\nconda activate wrangler_env\n```\n\nI chose `wrangler_env` as the name of my environment, but you could choose something else...just remember it so that you can access it later.\n\n**NOTE** in order to get back to this \"conda\" environment (i.e. after you close this command prompt), you will need to access it from the command line by using the following command:\n\n```bash\nconda activate wrangler_env\n```\n\n**3. \"Clone\" (aka download) network wrangler from Github on to your machine**\n\nIf you have [GitHub desktop](https://desktop.github.com/) installed, you can either do this by using the GitHub user interface by clicking on the green button \"clone or download\" in the [main network wrangler repository page](https://github.com/wsp-sag/network_wrangler).\n\nOtherwise, you can use the command prompt to navigate to the directory that you would like to store your network wrangler clone and then using a [git command](https://git-scm.com/downloads) to clone it.\n\n```bash\ncd path to where you want to put wrangler\ngit clone https://github.com/wsp-sag/network_wrangler\n```\n\nExpected output:\n\n```bash\ncloning into network_wrangler...\nremote: Enumerating objects: 53, done.\nremote: Counting objects: 100% (53/53), done.\nremote: Compressing objects: 100% (34/34), done.\nremote: Total 307 (delta 28), reused 29 (delta 19), pack-reused 254\nReceiving objects: 100% (307/307), 15.94 MiB | 10.49 MiB/s, done.\nResolving deltas: 100% (140/140), done.\n```\n**4a. If you aren't using linux, try to install these packages before network wrangler**\n\nSome packages are very finicky and don't like being installed from their version on the python package index on windows or macosx, so it is often necessary to install them ahead of network_wrangler.\n\n```bash\nconda install shapely\nconda install rtree\nconda install Fiona\n```\n\n\n**4b. Install Network Wrangler in \"develop\" mode.**\n\nNavigate your command prompt into the network wrangler folder and then install network wrangler in editable mode.\nThis will take a few minutes because it is also installing all the prerequisites.\n\n```bash\ncd network_wrangler\npip install -e .\n```\n\nThere will be a lot of messy output, but it should end with something like:\n\n```bash\nRunning setup.py develop for network-wrangler\nSuccessfully installed Rtree-0.8.3 attrs-19.1.0 cchardet-2.1.4 chardet-3.0.4 click-7.0 click-plugins-1.1.1 cligj-0.5.0 cycler-0.10.0 decorator-4.4.0 descartes-1.1.0 fiona-1.8.6 geojson-2.4.1 geopandas-0.5.1 idna-2.8 isoweek-1.3.3 jsonschema-3.0.2 kiwisolver-1.1.0 matplotlib-3.1.1 munch-2.3.2 network-wrangler networkx-2.3 numpy-1.17.0 osmnx-0.10 pandas-0.25.0 partridge-1.1.0 pyparsing-2.4.2 pyproj-2.2.1 pyrsistent-0.15.4 python-dateutil-2.8.0 pytz-2019.2 pyyaml-5.1.2 requests-2.22.0 shapely-1.6.4.post2 six-1.12.0 urllib3-1.25.3\n```\n\n**5. Test the Installation**\n\nYou can test that network wrangler was properly installed by running the tests as follows:\n\n```bash\npytest -s  -m  travis\n```\n\nUsing the `-s` flag will run all the tests in \"noisy\" mode.\nThe `-m travis` flag runs only tests that are marked as for \"travis\" continuous  integration\n\nNote: if you are not part of the project team and want to contribute code back to the project, please fork before you clone and then add the original repository to your upstream origin list per [these directions on github](https://help.github.com/en/articles/fork-a-repo).\n\n### Using Docker\n\n1. Install [Docker](https://docs.docker.com/install/)\n2. Clone git repository (see instructions above) *NOTE: this is easiest way right now since repo is private. When it is public we can clone right from github without having to muck around with logins or keys*\n3. From the cloned repository, open a terminal from the `/docker` folder and build and run the docker container corresponding to what you want to do by running `docker-compose run <container name> <entry point (optional)> --build`\n4. Command to exit container: `exit`\n\nContainers:\n - `wrangler-jupyter` started by running `docker-compose run wrangler-jupyter --build` is appropriate for running and testing wrangler.\n   - Default action is to start [jupyter notebook](https://jupyter.org/) which can be found at http://127.0.0.1:8888\n   - Safe: It creates an empty folder to store jupyter notebooks within the container but wont overwrite the source files on your actual machine.\n   - Starting Bash: You can also start the container with a command line using `docker-compose run wrangler-jupyter /bin/bash --build`.  \n   - Doesn't install development dependencies (although they can be installed from within the container)\n - `wrangler-ci` is a small image without extras meant for running tests and deploying to continuous integration server.\n   - default command is to run [pytest](https://docs.pytest.org/en/latest/).\n   - contains development dependencies so that it can run tests and build docs.\n - `wrangler-dev` is the most powerful but dangerous container `docker-compose run wrangler-dev /bin/bash --build`\n   - Warning: It will synchronize code edited from the container to your wrangler clone.  This is great for developing within an IDE, but please take this into account.\n\n### Common Installation Issues\n\n**Issue: `clang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]`**\nIf you are using MacOS, you might need to update your [xcode command line tools and headers](https://developer.apple.com/downloads/)\n\n**Issue: `OSError: Could not find libspatialindex_c library file`***\nTry installing rtree on its own from the Anaconda cloud\n\n```bash\nconda install rtree\n```\n**Issue: Shapely, a pre-requisite, doesn't install propertly because it is missing GEOS module**\nTry installing shapely on its own from the Anaconda cloud\n\n```bash\nconda install shapely\n```\n## Quickstart\n\nTo get a feel for the API and using project cards, please refer to the \"Wrangler Quickstart\" jupyter notebook.\n\nTo start the notebook, open a command line in the network_wrangler top-level directory and type:\n\n`jupyter notebook`\n\n\n## Documentation\nDocumentation can be built from the `/docs` folder using the command: `make html`\n\n## Usage\n```python\nimport network_wrangler\n\n##todo this is just an example for now\n\n## Network Manipulation\nmy_network = network_wrangler.read_roadway_network(...) # returns\nmy_network.apply_project_card(...) # returns\nmy_network.write_roadway_network(...) # returns\n\n## Scenario Building\nmy_scenario = scenario_from_network(roadway_network, transit_network)\nmy_scenario.add_projects(directory, keyword)\nmy_scenario.write_networks(directory, format)\n\n```\n## Attribution  \nThis project is built upon the ideas and concepts implemented in the [network wrangler project](https://github.com/sfcta/networkwrangler) by the [San Francisco County Transportation Authority](http://github.com/sfcta) and expanded upon by the [Metropolitan Transportation Commission](https://github.com/BayAreaMetro/NetworkWrangler).\n\nWhile Network Wrangler as written here is based on these concepts, the code is distinct and builds upon other packages such as `geopandas` and `partridge` which hadn't been implemented when networkwrangler 1.0 was developed.\n\n## Contributing\nPull requests are welcome. Please open an issue first to discuss what you would like to change.\nPlease make sure to update tests as appropriate.\n\n\n## License\n[Apache-2.0](https://choosealicense.com/licenses/apache-2.0/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wsp-sag/network_wrangler", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "network-wrangler", "package_url": "https://pypi.org/project/network-wrangler/", "platform": "any", "project_url": "https://pypi.org/project/network-wrangler/", "project_urls": {"Homepage": "https://github.com/wsp-sag/network_wrangler"}, "release_url": "https://pypi.org/project/network-wrangler/0.0.2/", "requires_dist": ["pandas (<0.26)", "geopandas", "osmnx (<0.11.4)", "partridge (>=1.1)", "pyyaml", "geojson", "jsonschema", "folium", "pytest", "jupyter", "notebook", "sphinx", "sphinx-autodoc-typehints", "sphinx-rtd-theme", "black"], "requires_python": "", "summary": "", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/wsp-sag/network_wrangler\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/102a382b10ccadaf077195d3938e5873507c3a38/68747470733a2f2f7472617669732d63692e6f72672f7773702d7361672f6e6574776f726b5f7772616e676c65722e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>network_wrangler</h1>\n<p>Network Wrangler is a Python library for managing travel model network scenarios.</p>\n<h2>System Requirements</h2>\n<p>Network Wrangler should be operating system agonistic and has been tested on Ubuntu and Mac OS.</p>\n<p>In order to assist in installation, its helpful to have either <a href=\"https://docs.conda.io/en/latest/miniconda.html\" rel=\"nofollow\">miniconda</a>, <a href=\"https://docs.conda.io/projects/continuumio-conda/en/latest/user-guide/install/index.html#regular-installation\" rel=\"nofollow\">anaconda</a> or <a href=\"https://docs.docker.com/install/\" rel=\"nofollow\">Docker CE</a> installed.  If you don't have any of these already, we reommend starting with Miniconda for Python 3.7 as it has the smallest footprint. <code>conda</code> is the environment manager that is contained within both the Anaconda and mini-conda applications.</p>\n<p>Network Wrangler does require Python 3.7+.  If you have a different version of Python installed, <code>conda</code> will take care of installing it for you in the installation instructions below.</p>\n<h2>Installation</h2>\n<p>Network Wrangler uses Python 3.6 and above.  Requirements are stored in <code>requirements.txt</code> but are automatically installed when using <code>pip</code>.</p>\n<p>If you are managing multiple python versions, we suggest using <a href=\"https://virtualenv.pypa.io/en/latest/\" rel=\"nofollow\"><code>virtualenv</code></a> or <a href=\"https://conda.io/en/latest/\" rel=\"nofollow\"><code>conda</code></a> virtual environments. <code>conda</code> is the environment manager that is contained within both the Anaconda and mini-conda applications.</p>\n<p>Example installing and running tests using conda in the command line:</p>\n<pre>conda create <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.7 -n wrangler_env\n<span class=\"nb\">source</span> activate wrangler_env\nconda install rtree\npip install network-wrangler\npytest -s -m travis\n</pre>\n<h3>From GitHub</h3>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install Network Wrangler from the source on GitHub.</p>\n<pre>pip install git+https://github.com/wsp-sag/network_wrangler.git@master#egg<span class=\"o\">=</span>network_wrangler\n</pre>\n<p>Note: if you wanted to install from a specific tag/version number or branch, replace <code>@master</code> with <code>@&lt;branchname&gt;</code>  or <code>@tag</code></p>\n<h3>From Clone</h3>\n<p>If you are going to be working on Network Wrangler locally, you might want to clone it to your local machine and install it from the clone.  The -e will install it in <a href=\"https://pip.pypa.io/en/stable/reference/pip_install/?highlight=editable#editable-installs\" rel=\"nofollow\">editable mode</a>.</p>\n<p>This is also useful if you want to continue to update your Network Wrangler as it is developed on GitHub.</p>\n<p><strong>1. Open a terminal to get a command prompt.</strong></p>\n<p><strong>2. Consider using a virtual environment manager like conda.</strong></p>\n<p>Create a new environment by typing the following commands into the command prompt (it might take a few minutes).</p>\n<pre>conda create <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.7 -n wrangler_env\nconda activate wrangler_env\n</pre>\n<p>I chose <code>wrangler_env</code> as the name of my environment, but you could choose something else...just remember it so that you can access it later.</p>\n<p><strong>NOTE</strong> in order to get back to this \"conda\" environment (i.e. after you close this command prompt), you will need to access it from the command line by using the following command:</p>\n<pre>conda activate wrangler_env\n</pre>\n<p><strong>3. \"Clone\" (aka download) network wrangler from Github on to your machine</strong></p>\n<p>If you have <a href=\"https://desktop.github.com/\" rel=\"nofollow\">GitHub desktop</a> installed, you can either do this by using the GitHub user interface by clicking on the green button \"clone or download\" in the <a href=\"https://github.com/wsp-sag/network_wrangler\" rel=\"nofollow\">main network wrangler repository page</a>.</p>\n<p>Otherwise, you can use the command prompt to navigate to the directory that you would like to store your network wrangler clone and then using a <a href=\"https://git-scm.com/downloads\" rel=\"nofollow\">git command</a> to clone it.</p>\n<pre><span class=\"nb\">cd</span> path to where you want to put wrangler\ngit clone https://github.com/wsp-sag/network_wrangler\n</pre>\n<p>Expected output:</p>\n<pre>cloning into network_wrangler...\nremote: Enumerating objects: <span class=\"m\">53</span>, <span class=\"k\">done</span>.\nremote: Counting objects: <span class=\"m\">100</span>% <span class=\"o\">(</span><span class=\"m\">53</span>/53<span class=\"o\">)</span>, <span class=\"k\">done</span>.\nremote: Compressing objects: <span class=\"m\">100</span>% <span class=\"o\">(</span><span class=\"m\">34</span>/34<span class=\"o\">)</span>, <span class=\"k\">done</span>.\nremote: Total <span class=\"m\">307</span> <span class=\"o\">(</span>delta <span class=\"m\">28</span><span class=\"o\">)</span>, reused <span class=\"m\">29</span> <span class=\"o\">(</span>delta <span class=\"m\">19</span><span class=\"o\">)</span>, pack-reused <span class=\"m\">254</span>\nReceiving objects: <span class=\"m\">100</span>% <span class=\"o\">(</span><span class=\"m\">307</span>/307<span class=\"o\">)</span>, <span class=\"m\">15</span>.94 MiB <span class=\"p\">|</span> <span class=\"m\">10</span>.49 MiB/s, <span class=\"k\">done</span>.\nResolving deltas: <span class=\"m\">100</span>% <span class=\"o\">(</span><span class=\"m\">140</span>/140<span class=\"o\">)</span>, <span class=\"k\">done</span>.\n</pre>\n<p><strong>4a. If you aren't using linux, try to install these packages before network wrangler</strong></p>\n<p>Some packages are very finicky and don't like being installed from their version on the python package index on windows or macosx, so it is often necessary to install them ahead of network_wrangler.</p>\n<pre>conda install shapely\nconda install rtree\nconda install Fiona\n</pre>\n<p><strong>4b. Install Network Wrangler in \"develop\" mode.</strong></p>\n<p>Navigate your command prompt into the network wrangler folder and then install network wrangler in editable mode.\nThis will take a few minutes because it is also installing all the prerequisites.</p>\n<pre><span class=\"nb\">cd</span> network_wrangler\npip install -e .\n</pre>\n<p>There will be a lot of messy output, but it should end with something like:</p>\n<pre>Running setup.py develop <span class=\"k\">for</span> network-wrangler\nSuccessfully installed Rtree-0.8.3 attrs-19.1.0 cchardet-2.1.4 chardet-3.0.4 click-7.0 click-plugins-1.1.1 cligj-0.5.0 cycler-0.10.0 decorator-4.4.0 descartes-1.1.0 fiona-1.8.6 geojson-2.4.1 geopandas-0.5.1 idna-2.8 isoweek-1.3.3 jsonschema-3.0.2 kiwisolver-1.1.0 matplotlib-3.1.1 munch-2.3.2 network-wrangler networkx-2.3 numpy-1.17.0 osmnx-0.10 pandas-0.25.0 partridge-1.1.0 pyparsing-2.4.2 pyproj-2.2.1 pyrsistent-0.15.4 python-dateutil-2.8.0 pytz-2019.2 pyyaml-5.1.2 requests-2.22.0 shapely-1.6.4.post2 six-1.12.0 urllib3-1.25.3\n</pre>\n<p><strong>5. Test the Installation</strong></p>\n<p>You can test that network wrangler was properly installed by running the tests as follows:</p>\n<pre>pytest -s  -m  travis\n</pre>\n<p>Using the <code>-s</code> flag will run all the tests in \"noisy\" mode.\nThe <code>-m travis</code> flag runs only tests that are marked as for \"travis\" continuous  integration</p>\n<p>Note: if you are not part of the project team and want to contribute code back to the project, please fork before you clone and then add the original repository to your upstream origin list per <a href=\"https://help.github.com/en/articles/fork-a-repo\" rel=\"nofollow\">these directions on github</a>.</p>\n<h3>Using Docker</h3>\n<ol>\n<li>Install <a href=\"https://docs.docker.com/install/\" rel=\"nofollow\">Docker</a></li>\n<li>Clone git repository (see instructions above) <em>NOTE: this is easiest way right now since repo is private. When it is public we can clone right from github without having to muck around with logins or keys</em></li>\n<li>From the cloned repository, open a terminal from the <code>/docker</code> folder and build and run the docker container corresponding to what you want to do by running <code>docker-compose run &lt;container name&gt; &lt;entry point (optional)&gt; --build</code></li>\n<li>Command to exit container: <code>exit</code></li>\n</ol>\n<p>Containers:</p>\n<ul>\n<li><code>wrangler-jupyter</code> started by running <code>docker-compose run wrangler-jupyter --build</code> is appropriate for running and testing wrangler.\n<ul>\n<li>Default action is to start <a href=\"https://jupyter.org/\" rel=\"nofollow\">jupyter notebook</a> which can be found at <a href=\"http://127.0.0.1:8888\" rel=\"nofollow\">http://127.0.0.1:8888</a></li>\n<li>Safe: It creates an empty folder to store jupyter notebooks within the container but wont overwrite the source files on your actual machine.</li>\n<li>Starting Bash: You can also start the container with a command line using <code>docker-compose run wrangler-jupyter /bin/bash --build</code>.</li>\n<li>Doesn't install development dependencies (although they can be installed from within the container)</li>\n</ul>\n</li>\n<li><code>wrangler-ci</code> is a small image without extras meant for running tests and deploying to continuous integration server.\n<ul>\n<li>default command is to run <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a>.</li>\n<li>contains development dependencies so that it can run tests and build docs.</li>\n</ul>\n</li>\n<li><code>wrangler-dev</code> is the most powerful but dangerous container <code>docker-compose run wrangler-dev /bin/bash --build</code>\n<ul>\n<li>Warning: It will synchronize code edited from the container to your wrangler clone.  This is great for developing within an IDE, but please take this into account.</li>\n</ul>\n</li>\n</ul>\n<h3>Common Installation Issues</h3>\n<p><strong>Issue: <code>clang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]</code></strong>\nIf you are using MacOS, you might need to update your <a href=\"https://developer.apple.com/downloads/\" rel=\"nofollow\">xcode command line tools and headers</a></p>\n<p><strong>Issue: <code>OSError: Could not find libspatialindex_c library file</code></strong>*\nTry installing rtree on its own from the Anaconda cloud</p>\n<pre>conda install rtree\n</pre>\n<p><strong>Issue: Shapely, a pre-requisite, doesn't install propertly because it is missing GEOS module</strong>\nTry installing shapely on its own from the Anaconda cloud</p>\n<pre>conda install shapely\n</pre>\n<h2>Quickstart</h2>\n<p>To get a feel for the API and using project cards, please refer to the \"Wrangler Quickstart\" jupyter notebook.</p>\n<p>To start the notebook, open a command line in the network_wrangler top-level directory and type:</p>\n<p><code>jupyter notebook</code></p>\n<h2>Documentation</h2>\n<p>Documentation can be built from the <code>/docs</code> folder using the command: <code>make html</code></p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">network_wrangler</span>\n\n<span class=\"c1\">##todo this is just an example for now</span>\n\n<span class=\"c1\">## Network Manipulation</span>\n<span class=\"n\">my_network</span> <span class=\"o\">=</span> <span class=\"n\">network_wrangler</span><span class=\"o\">.</span><span class=\"n\">read_roadway_network</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"c1\"># returns</span>\n<span class=\"n\">my_network</span><span class=\"o\">.</span><span class=\"n\">apply_project_card</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"c1\"># returns</span>\n<span class=\"n\">my_network</span><span class=\"o\">.</span><span class=\"n\">write_roadway_network</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span> <span class=\"c1\"># returns</span>\n\n<span class=\"c1\">## Scenario Building</span>\n<span class=\"n\">my_scenario</span> <span class=\"o\">=</span> <span class=\"n\">scenario_from_network</span><span class=\"p\">(</span><span class=\"n\">roadway_network</span><span class=\"p\">,</span> <span class=\"n\">transit_network</span><span class=\"p\">)</span>\n<span class=\"n\">my_scenario</span><span class=\"o\">.</span><span class=\"n\">add_projects</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"n\">keyword</span><span class=\"p\">)</span>\n<span class=\"n\">my_scenario</span><span class=\"o\">.</span><span class=\"n\">write_networks</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">,</span> <span class=\"nb\">format</span><span class=\"p\">)</span>\n</pre>\n<h2>Attribution</h2>\n<p>This project is built upon the ideas and concepts implemented in the <a href=\"https://github.com/sfcta/networkwrangler\" rel=\"nofollow\">network wrangler project</a> by the <a href=\"http://github.com/sfcta\" rel=\"nofollow\">San Francisco County Transportation Authority</a> and expanded upon by the <a href=\"https://github.com/BayAreaMetro/NetworkWrangler\" rel=\"nofollow\">Metropolitan Transportation Commission</a>.</p>\n<p>While Network Wrangler as written here is based on these concepts, the code is distinct and builds upon other packages such as <code>geopandas</code> and <code>partridge</code> which hadn't been implemented when networkwrangler 1.0 was developed.</p>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. Please open an issue first to discuss what you would like to change.\nPlease make sure to update tests as appropriate.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/apache-2.0/\" rel=\"nofollow\">Apache-2.0</a></p>\n\n          </div>"}, "last_serial": 6579329, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "93fa7108697753ab7c3b5749f918d327", "sha256": "68a8aeb0f3089b80875aedbd654ca0b137646a5c710b22af99a68ed1125106dd"}, "downloads": -1, "filename": "network_wrangler-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "93fa7108697753ab7c3b5749f918d327", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47077, "upload_time": "2020-02-05T20:37:45", "upload_time_iso_8601": "2020-02-05T20:37:45.338782Z", "url": "https://files.pythonhosted.org/packages/ff/a9/05b86dbaa595319026e69855dd5cdd6088f11a53c9a941f8e1df8d690b4c/network_wrangler-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1743821f831dbee083bb009a821d6400", "sha256": "2306de9db6956a9e30d3b04d6bddc45df11bc38003e4fb742d1adf54b7875556"}, "downloads": -1, "filename": "network_wrangler-0.0.0.tar.gz", "has_sig": false, "md5_digest": "1743821f831dbee083bb009a821d6400", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 340471, "upload_time": "2020-02-05T20:37:49", "upload_time_iso_8601": "2020-02-05T20:37:49.382081Z", "url": "https://files.pythonhosted.org/packages/02/4e/1c1c397b04daa94c91adb02476e061da8bae060478463773d9e576a5617d/network_wrangler-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "7c78abdb331917fc96645e210414ab2a", "sha256": "74cc0e0ebf07908fbfe4c1abb742c5fe00ac899ac7ff4169b4ced18ca8962369"}, "downloads": -1, "filename": "network_wrangler-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7c78abdb331917fc96645e210414ab2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47083, "upload_time": "2020-02-05T21:06:52", "upload_time_iso_8601": "2020-02-05T21:06:52.795161Z", "url": "https://files.pythonhosted.org/packages/9b/0e/728fefaeef817b25a212d67d9040b406fd7ed1486d6b835b3b2c0e9ae8a1/network_wrangler-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4986a732bc69fa24ef285ae87abc1044", "sha256": "b6f3821dd3e829759c7619e5ed7b72c4aede2cc7064551a5cdf581042f22b0c1"}, "downloads": -1, "filename": "network_wrangler-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4986a732bc69fa24ef285ae87abc1044", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 340482, "upload_time": "2020-02-05T21:06:55", "upload_time_iso_8601": "2020-02-05T21:06:55.060124Z", "url": "https://files.pythonhosted.org/packages/f1/68/bc835fa4754fdc7fd12482bf3fe099ab16356bf73f53ce32dca34b509b02/network_wrangler-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "62e1a58cd43b4e0d1e5cb06474840ae6", "sha256": "4fb4b3bc6409a7bf5ffc178412751e31ca6e47d7914f73eb28c38cfbf7e83063"}, "downloads": -1, "filename": "network_wrangler-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "62e1a58cd43b4e0d1e5cb06474840ae6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47032, "upload_time": "2020-02-05T23:06:48", "upload_time_iso_8601": "2020-02-05T23:06:48.631660Z", "url": "https://files.pythonhosted.org/packages/26/a5/b12913e3e741c8b039210dac2dc834b4d2c9a3eb56b4c1592922bc23d951/network_wrangler-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "099c3bbeb39e492e386dfe77e9319208", "sha256": "361e07c12ef52c6fa16ef03ccccaeb68977c41e73c53a621a48a874746921b12"}, "downloads": -1, "filename": "network_wrangler-0.0.2.tar.gz", "has_sig": false, "md5_digest": "099c3bbeb39e492e386dfe77e9319208", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 340371, "upload_time": "2020-02-05T23:06:51", "upload_time_iso_8601": "2020-02-05T23:06:51.597859Z", "url": "https://files.pythonhosted.org/packages/ce/4f/68335a4c64cb70a7072bcca14c41764eb9ba44b2e33282cee0702ecf0968/network_wrangler-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "62e1a58cd43b4e0d1e5cb06474840ae6", "sha256": "4fb4b3bc6409a7bf5ffc178412751e31ca6e47d7914f73eb28c38cfbf7e83063"}, "downloads": -1, "filename": "network_wrangler-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "62e1a58cd43b4e0d1e5cb06474840ae6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47032, "upload_time": "2020-02-05T23:06:48", "upload_time_iso_8601": "2020-02-05T23:06:48.631660Z", "url": "https://files.pythonhosted.org/packages/26/a5/b12913e3e741c8b039210dac2dc834b4d2c9a3eb56b4c1592922bc23d951/network_wrangler-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "099c3bbeb39e492e386dfe77e9319208", "sha256": "361e07c12ef52c6fa16ef03ccccaeb68977c41e73c53a621a48a874746921b12"}, "downloads": -1, "filename": "network_wrangler-0.0.2.tar.gz", "has_sig": false, "md5_digest": "099c3bbeb39e492e386dfe77e9319208", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 340371, "upload_time": "2020-02-05T23:06:51", "upload_time_iso_8601": "2020-02-05T23:06:51.597859Z", "url": "https://files.pythonhosted.org/packages/ce/4f/68335a4c64cb70a7072bcca14c41764eb9ba44b2e33282cee0702ecf0968/network_wrangler-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:50 2020"}