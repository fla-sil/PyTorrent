{"info": {"author": "Randall Degges", "author_email": "r@rdegges.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "python-ipify\n============\n\nThe official client library for `ipify <http://www.ipify.org/>`_: *A Simple IP\nAddress API*.\n\n.. image:: https://img.shields.io/pypi/v/ipify.svg\n    :alt: python-ipify Release\n    :target: https://pypi.python.org/pypi/ipify\n\n.. image:: https://img.shields.io/pypi/dm/ipify.svg\n    :alt: python-ipify Downloads\n    :target: https://pypi.python.org/pypi/ipify\n\n.. image:: https://img.shields.io/travis/rdegges/python-ipify.svg\n    :alt: python-ipify Build\n    :target: https://travis-ci.org/rdegges/python-ipify\n\n.. image:: https://coveralls.io/repos/rdegges/python-ipify/badge.svg?branch=master\n    :target: https://coveralls.io/r/rdegges/python-ipify?branch=master\n\n\nMeta\n----\n\n- Author: Randall Degges\n- Email: r@rdegges.com\n- Site: http://www.rdegges.com\n- Status: maintained, active\n\n\nPurpose\n-------\n\n`ipify <http://www.ipify.org/>`_ is the best IP address lookup service on the\ninternet.  It's fast, simple, scalable, open source, and well-funded (*by me!*).\n\nIn short: if you need a way to pragmatically get your public IP address, ipify\nis the best possible choice!\n\nThis library will retrieve your public IP address from ipify's API service, and\nreturn it as a string.  It can't get any simpler than that.\n\nThis library also has some other nice features you might care about:\n\n- If a request fails for any reason, it is re-attempted 3 times using an\n  exponential backoff algorithm for maximum effectiveness.\n- This library handles exceptions properly, and usage examples below show you\n  how to deal with errors in a foolproof way.\n- This library only makes API requests over HTTPS.\n\n\nInstallation\n------------\n\nTo install ``ipify``, simply run:\n\n.. code-block:: console\n\n    $ pip install ipify\n\nThis will install the latest version of the library automatically.\n\n\nUsage\n-----\n\nUsing this library is very simple.  Here's a simple example:\n\n.. code-block:: python\n\n    >>> from ipify import get_ip\n    >>> ip = get_ip()\n    >>> ip\n    u'96.41.136.144'\n\nNow, in regards to exception handling, there are several ways this can fail:\n\n- The ipify service is down (*not likely*), or:\n- Your machine is unable to get the request to ipify because of a network error\n  of some sort (DNS, no internet, etc.).\n\nHere's how you can handle all of these edge cases:\n\n.. code-block:: python\n\n    from ipify import get_ip\n    from ipify.exceptions import ConnectionError, ServiceError\n\n    try:\n        ip = get_ip()\n    except ConnectionError:\n        # If you get here, it means you were unable to reach the ipify service,\n        # most likely because of a network error on your end.\n    except ServiceError:\n        # If you get here, it means ipify is having issues, so the request\n        # couldn't be completed :(\n    except:\n        # Something else happened (non-ipify related). Maybe you hit CTRL-C\n        # while the program was running, the kernel is killing your process, or\n        # something else all together.\n\nIf you want to simplify the above error handling, you could also do the\nfollowing (*it will catch any sort of ipify related errors regardless of what\ntype they may be*):\n\n.. code-block:: python\n\n    from ipify import get_ip\n    from ipify.exceptions import IpifyException\n\n    try:\n        ip = get_ip()\n    except IpifyException:\n        # If you get here, then some ipify exception occurred.\n    except:\n        # If you get here, some non-ipify related exception occurred.\n\nOne thing to keep in mind: regardless of how you decide to handle exceptions,\nthe ipify library will retry any failed requests 3 times before ever raising\nexceptions -- so if you *do* need to handle exceptions, just remember that retry\nlogic has already been attempted.\n\n\nContributing\n------------\n\nThis project is only possible due to the amazing contributors who work on it!\n\nIf you'd like to improve this library, please send me a pull request! I'm happy\nto review and merge pull requests.\n\nThe standard contribution workflow should look something like this:\n\n- Fork this project on Github.\n- Make some changes in the master branch (*this project is simple, so no need to\n  complicate things*).\n- Send a pull request when ready.\n\nAlso, if you're making changes, please write tests for your changes -- this\nproject has a full test suite you can easily modify / test.\n\nTo run the test suite, you can use the following commands:\n\n.. code-block:: console\n\n    $ pip install -e .\n    $ pip install -r requirements.txt\n    $ python manage.py test\n\n\nChange Log\n----------\n\nAll library changes, in descending order.\n\n\nVersion 1.0.0\n*************\n\n**Released May 6, 2015.**\n\n- First release!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rdegges/python-ipify", "keywords": "python api client ipify ip address public ipv4 ipv6 service", "license": "UNLICENSE", "maintainer": null, "maintainer_email": null, "name": "ipify", "package_url": "https://pypi.org/project/ipify/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ipify/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rdegges/python-ipify"}, "release_url": "https://pypi.org/project/ipify/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "The official client library for ipify: A Simple IP Address API.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The official client library for <a href=\"http://www.ipify.org/\" rel=\"nofollow\">ipify</a>: <em>A Simple IP\nAddress API</em>.</p>\n<a href=\"https://pypi.python.org/pypi/ipify\" rel=\"nofollow\"><img alt=\"python-ipify Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e39affe792e3d2926e617f5e4c70386b4f57fbc9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f69706966792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/ipify\" rel=\"nofollow\"><img alt=\"python-ipify Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8efc22349049be0ac2f41b0e7a102ecbac91f00/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f69706966792e737667\"></a>\n<a href=\"https://travis-ci.org/rdegges/python-ipify\" rel=\"nofollow\"><img alt=\"python-ipify Build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94ab07122eb3989e39d9ee0f518632d5b52d03c9/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f726465676765732f707974686f6e2d69706966792e737667\"></a>\n<a href=\"https://coveralls.io/r/rdegges/python-ipify?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/rdegges/python-ipify/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2020f66e7f3e5dbe8294706b964162b7c07b76c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f726465676765732f707974686f6e2d69706966792f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"meta\">\n<h2>Meta</h2>\n<ul>\n<li>Author: Randall Degges</li>\n<li>Email: <a href=\"mailto:r%40rdegges.com\">r<span>@</span>rdegges<span>.</span>com</a></li>\n<li>Site: <a href=\"http://www.rdegges.com\" rel=\"nofollow\">http://www.rdegges.com</a></li>\n<li>Status: maintained, active</li>\n</ul>\n</div>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p><a href=\"http://www.ipify.org/\" rel=\"nofollow\">ipify</a> is the best IP address lookup service on the\ninternet.  It\u2019s fast, simple, scalable, open source, and well-funded (<em>by me!</em>).</p>\n<p>In short: if you need a way to pragmatically get your public IP address, ipify\nis the best possible choice!</p>\n<p>This library will retrieve your public IP address from ipify\u2019s API service, and\nreturn it as a string.  It can\u2019t get any simpler than that.</p>\n<p>This library also has some other nice features you might care about:</p>\n<ul>\n<li>If a request fails for any reason, it is re-attempted 3 times using an\nexponential backoff algorithm for maximum effectiveness.</li>\n<li>This library handles exceptions properly, and usage examples below show you\nhow to deal with errors in a foolproof way.</li>\n<li>This library only makes API requests over HTTPS.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install <tt>ipify</tt>, simply run:</p>\n<pre><span class=\"gp\">$</span> pip install ipify\n</pre>\n<p>This will install the latest version of the library automatically.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Using this library is very simple.  Here\u2019s a simple example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">ipify</span> <span class=\"kn\">import</span> <span class=\"n\">get_ip</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"n\">get_ip</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ip</span>\n<span class=\"sa\">u</span><span class=\"s1\">'96.41.136.144'</span>\n</pre>\n<p>Now, in regards to exception handling, there are several ways this can fail:</p>\n<ul>\n<li>The ipify service is down (<em>not likely</em>), or:</li>\n<li>Your machine is unable to get the request to ipify because of a network error\nof some sort (DNS, no internet, etc.).</li>\n</ul>\n<p>Here\u2019s how you can handle all of these edge cases:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ipify</span> <span class=\"kn\">import</span> <span class=\"n\">get_ip</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ipify.exceptions</span> <span class=\"kn\">import</span> <span class=\"ne\">ConnectionError</span><span class=\"p\">,</span> <span class=\"n\">ServiceError</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"n\">get_ip</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">ConnectionError</span><span class=\"p\">:</span>\n    <span class=\"c1\"># If you get here, it means you were unable to reach the ipify service,</span>\n    <span class=\"c1\"># most likely because of a network error on your end.</span>\n<span class=\"k\">except</span> <span class=\"n\">ServiceError</span><span class=\"p\">:</span>\n    <span class=\"c1\"># If you get here, it means ipify is having issues, so the request</span>\n    <span class=\"c1\"># couldn't be completed :(</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Something else happened (non-ipify related). Maybe you hit CTRL-C</span>\n    <span class=\"c1\"># while the program was running, the kernel is killing your process, or</span>\n    <span class=\"c1\"># something else all together.</span>\n</pre>\n<p>If you want to simplify the above error handling, you could also do the\nfollowing (<em>it will catch any sort of ipify related errors regardless of what\ntype they may be</em>):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ipify</span> <span class=\"kn\">import</span> <span class=\"n\">get_ip</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ipify.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">IpifyException</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"n\">get_ip</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"n\">IpifyException</span><span class=\"p\">:</span>\n    <span class=\"c1\"># If you get here, then some ipify exception occurred.</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"c1\"># If you get here, some non-ipify related exception occurred.</span>\n</pre>\n<p>One thing to keep in mind: regardless of how you decide to handle exceptions,\nthe ipify library will retry any failed requests 3 times before ever raising\nexceptions \u2013 so if you <em>do</em> need to handle exceptions, just remember that retry\nlogic has already been attempted.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>This project is only possible due to the amazing contributors who work on it!</p>\n<p>If you\u2019d like to improve this library, please send me a pull request! I\u2019m happy\nto review and merge pull requests.</p>\n<p>The standard contribution workflow should look something like this:</p>\n<ul>\n<li>Fork this project on Github.</li>\n<li>Make some changes in the master branch (<em>this project is simple, so no need to\ncomplicate things</em>).</li>\n<li>Send a pull request when ready.</li>\n</ul>\n<p>Also, if you\u2019re making changes, please write tests for your changes \u2013 this\nproject has a full test suite you can easily modify / test.</p>\n<p>To run the test suite, you can use the following commands:</p>\n<pre><span class=\"gp\">$</span> pip install -e .\n<span class=\"gp\">$</span> pip install -r requirements.txt\n<span class=\"gp\">$</span> python manage.py <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"change-log\">\n<h2>Change Log</h2>\n<p>All library changes, in descending order.</p>\n<div id=\"version-1-0-0\">\n<h3>Version 1.0.0</h3>\n<p><strong>Released May 6, 2015.</strong></p>\n<ul>\n<li>First release!</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1536715, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4b60638caaef9f4179b7b2fc773a4838", "sha256": "e0d486997e484adbf49008a22b4b5370f675320100ab1af4aaba7e3070fb5d35"}, "downloads": -1, "filename": "ipify-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b60638caaef9f4179b7b2fc773a4838", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8932, "upload_time": "2015-05-07T05:25:06", "upload_time_iso_8601": "2015-05-07T05:25:06.548706Z", "url": "https://files.pythonhosted.org/packages/6e/f0/eeeea218faaef1cd4db0ef7578ec43be1c9ea4e56fc2df797d4b0df8e2e7/ipify-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee9260258d72fd6e85f78de96e5818d7", "sha256": "9941659b9a89a09478b491ec355446b97b8dec1770e317dd56b4c26bbab50840"}, "downloads": -1, "filename": "ipify-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ee9260258d72fd6e85f78de96e5818d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7205, "upload_time": "2015-05-07T05:25:10", "upload_time_iso_8601": "2015-05-07T05:25:10.142484Z", "url": "https://files.pythonhosted.org/packages/2e/18/4fbcf738517e3d21cd79f4e822c588491a9b09e3c639bf50c4ceadfa80b0/ipify-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b60638caaef9f4179b7b2fc773a4838", "sha256": "e0d486997e484adbf49008a22b4b5370f675320100ab1af4aaba7e3070fb5d35"}, "downloads": -1, "filename": "ipify-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b60638caaef9f4179b7b2fc773a4838", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8932, "upload_time": "2015-05-07T05:25:06", "upload_time_iso_8601": "2015-05-07T05:25:06.548706Z", "url": "https://files.pythonhosted.org/packages/6e/f0/eeeea218faaef1cd4db0ef7578ec43be1c9ea4e56fc2df797d4b0df8e2e7/ipify-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee9260258d72fd6e85f78de96e5818d7", "sha256": "9941659b9a89a09478b491ec355446b97b8dec1770e317dd56b4c26bbab50840"}, "downloads": -1, "filename": "ipify-1.0.0.tar.gz", "has_sig": false, "md5_digest": "ee9260258d72fd6e85f78de96e5818d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7205, "upload_time": "2015-05-07T05:25:10", "upload_time_iso_8601": "2015-05-07T05:25:10.142484Z", "url": "https://files.pythonhosted.org/packages/2e/18/4fbcf738517e3d21cd79f4e822c588491a9b09e3c639bf50c4ceadfa80b0/ipify-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:37 2020"}