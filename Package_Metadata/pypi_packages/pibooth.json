{"info": {"author": "Vincent Verdeil, Antoine Rousseaux", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Other Environment", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Natural Language :: French", "Natural Language :: German", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera"], "description": "\n.. image:: https://raw.githubusercontent.com/werdeil/pibooth/master/templates/pibooth.png\n   :align: center\n   :alt: Pibooth\n\n\nThe ``pibooth`` project provides a photobooth application *out-of-the-box* in pure Python\nfor Raspberry Pi. Have a look to the `wiki <https://github.com/werdeil/pibooth/wiki>`_\nto discover some realizations from GitHub users.\n\n.. image:: https://raw.githubusercontent.com/werdeil/pibooth/master/templates/background_samples.png\n   :align: center\n   :alt: Settings\n\n.. note:: Even if designed for a Raspberry Pi, this software may be installed on any Unix/Linux\n          based OS (tested on Ubuntu 16 and Mac OSX 10.14.6).\n\nFeatures\n--------\n\n* Graphical interface available in English, French, German, Dutch and Spanish (customizable)\n* Capture from 1 to 4 photos and concatenate them in a final picture\n* Support all cameras compatible with gPhoto2, OpenCV and Raspberry Pi\n* Support for hardware buttons and lamps on Raspberry Pi GPIO\n* Fully driven from hardware buttons / keyboard / mouse / touchscreen\n* Preview during countdown\n* Auto-start at the Raspberry Pi startup\n* Animate last pictures during idle time\n* Store final pictures and the individual captures\n* Printing final pictures using CUPS server (printing queue indication)\n* Custom texts can be added on the final pictures (customizable fonts, colors, alignments)\n* Custom background(s) and overlay(s) can be added on final pictures\n* All settings available in a configuration file (most common options in a graphical interface)\n\n.. image:: https://raw.githubusercontent.com/werdeil/pibooth/master/templates/gallery.png\n   :align: center\n   :alt: gallery\n   :target: https://github.com/werdeil/pibooth/blob/master/docs/examples.rst\n\nRequirements\n------------\n\nThe requirements listed below are the ones used for the development of ``pibooth``, but\nother configuration may work fine. **All hardware buttons, lights and printer are optional**,\nthe application can be entirely controlled using a keyboard, a mouse or a touchscreen.\n\nHardware\n^^^^^^^^\n\n* 1 Raspberry Pi 3 Model B (or higher)\n* 1 Camera (Raspberry Pi Camera v2.1 8 MP 1080p\n  or any DSLR camera `compatible with gPhoto2 <http://www.gphoto.org/proj/libgphoto2/support.php>`_\n  or any webcam `compatible with OpenCV <https://opencv.org>`_ )\n* 2 push buttons\n* 4 LEDs\n* 4 resistors of 100 Ohm\n* 1 printer\n\nSoftware\n^^^^^^^^\n\n* Raspbian ``Buster with desktop and recommended software``\n* Python ``3.5.3``\n* libgphoto2 ``2.5.23``\n* libcups ``2.2.1``\n\nInstall\n-------\n\nA brief description on how to set-up a Raspberry Pi to use this software.\n\n1. Download the Raspbian image and set-up an SD-card. You can follow\n   `these instructions <https://www.raspberrypi.org/documentation/installation/installing-images/README.md>`_ .\n\n2. Insert the SD-card into the Raspberry Pi and fire it up. Use the ``raspi-config`` tool\n   to configure your system (e.g., expand partition, change hostname, password, enable SSH,\n   configure to boot into GUI, etc.).\n\n   .. hint:: Don't forget to enable the camera in raspi-config.\n\n3. Upgrade all installed software:\n\n   ::\n\n        $ sudo apt-get update\n        $ sudo apt-get upgrade\n\n4. Optionally install the last stable ``gPhoto2`` version (required only for DSLR camera):\n\n   ::\n\n        $ sudo wget raw.github.com/gonzalo/gphoto2-updater/master/gphoto2-updater.sh\n        $ sudo chmod 755 gphoto2-updater.sh\n        $ sudo ./gphoto2-updater.sh\n\n5. Optionally install ``CUPS`` to handle printers (more instructions to add a new printer can be found\n   `here <https://www.howtogeek.com/169679/how-to-add-a-printer-to-your-raspberry-pi-or-other-linux-computer>`_):\n\n   ::\n\n        $ sudo apt-get install cups libcups2-dev\n\n6. Optionally install ``OpenCV`` to improve images generation efficiency or if a Webcam is used:\n\n   ::\n\n        $ sudo apt-get install python3-opencv\n\n7. Install ``pibooth`` from the `pypi repository <https://pypi.org/project/pibooth/>`_:\n\n   ::\n\n        $ sudo pip3 install pibooth[dslr,printer]\n\n   .. hint:: If you don't have ``gPhoto2`` and/or ``CUPS`` installed (steps 5. and/or 6. skipped), remove\n             printer or dslr under the []\n\n.. note:: An editable/customizable version of ``pibooth`` can be installed by following\n          these `instructions <https://github.com/werdeil/pibooth/blob/master/docs/dev.rst>`_ .\n          Be aware that the code on the `master` branch may be unstable.\n\nRun\n---\n\nStart the photobooth application using the command::\n\n    $ pibooth\n\nAll pictures taken are stored in the folder defined in ``[GENERAL][directory]``. They are named\n**YYYY-mm-dd-hh-mm-ss_pibooth.jpg** which is the time when first capture of the sequence was taken.\nA subfolder **raw/YYYY-mm-dd-hh-mm-ss** is created to store the single raw captures.\n\n.. note:: if you have both ``Pi`` and ``DSLR`` cameras connected to the Raspberry Pi, **both are used**,\n          this is called the **Hybrid** mode. The preview is taken using the ``Pi`` one for a better\n          video rendering and the capture is taken using the ``DSLR`` one for better picture rendering.\n\nYou can display a basic help on application options by using the command::\n\n    $ pibooth --help\n\nStates and lights management\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe application follows the states sequence defined in the diagram below:\n\n.. image:: https://raw.githubusercontent.com/werdeil/pibooth/master/templates/state_sequence.png\n   :align: center\n   :alt: State sequence\n\nThe states of the **LED 1** and **LED 2** are modified depending on the actions available\nfor the user. The **LED 3** is switched on when the application starts and the **LED 4**\nis switched on during the preview and photo capture.\n\nCommands\n^^^^^^^^\n\nAfter the graphical interface is started, the following actions are available:\n\n======================= ================ =====================\nAction                  Keyboard key     Physical button\n======================= ================ =====================\nToggle Full screen      Ctrl + F         \\-\nChoose layout           LEFT or RIGHT    Button 1 or Button 2\nTake pictures           P                Button 1\nExport Printer/Cloud    Ctrl + E         Button 2\nOpen/close settings     ESC              Button 1 + Button 2\nSelect option           UP or DOWN       Button 1\nChange option value     LEFT or RIGHT    Button 2\n======================= ================ =====================\n\nFinal picture rendering\n^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``pibooth`` application  handle the rendering of the final picture using 2 variables defined in\nthe configuration (see `Configuration`_ below):\n\n* ``[CAMERA][resolution] = (width, height)`` is the resolution of the captured picture in pixels.\n  As explained in the configuration file, the preview size is directly dependent from this parameter.\n* ``[PICTURE][orientation] = auto/landscape/portrait`` is the orientation of the final picture\n  (after concatenation of all captures). If the value is **auto**, the orientation is automatically\n  chosen depending on the resolution.\n\n.. note:: The resolution is an important parameter, it is responsible for the quality of the final\n          picture. Have a look to `picamera possible resolutions <http://picamera.readthedocs.io/en/latest/fov.html#sensor-modes>`_ .\n\nImage effects can be applied on the capture using the ``[PICTURE][effect]`` variable defined in the\nconfiguration.\n\n.. code-block:: ini\n\n    [PICTURE]\n\n    # Effect applied on all captures\n    captures_effects = film\n\nInstead of one effect name, a list of names can be provided. In this case, the effects are applied\nsequentially on the captures sequence.\n\n.. code-block:: ini\n\n    [PICTURE]\n\n    # Define a rolling sequence of effects. For each capture the corresponding effect is applied.\n    captures_effects = ('film', 'cartoon', 'washedout', 'film')\n\nHave a look to the predefined effects available depending on the camera used:\n\n* `picamera effects <https://picamera.readthedocs.io/en/latest/api_camera.html#picamera.PiCamera.image_effect>`_\n* `gPhoto2 effects (PIL based) <https://pillow.readthedocs.io/en/latest/reference/ImageFilter.html>`_\n\nTexts can be defined by setting the option ``[PICTURE][footer_text1]`` and ``[PICTURE][footer_text2]``\n(lets them empty to hide any text). For each one, the font, the color and the alignment can be chosen.\nFor instance:\n\n.. code-block:: ini\n\n    [PICTURE]\n\n    # Same font applied on footer_text1 and footer_text2\n    text_fonts = Amatic-Bold\n\nThis key can also take two names or TTF file paths:\n\n.. code-block:: ini\n\n    [PICTURE]\n\n    # 'arial' font applied on footer_text1, 'Roboto-BoldItalic' font on footer_text2\n    text_fonts = ('arial', 'Roboto-BoldItalic')\n\nThe available fonts can be listed using the following the command::\n\n \u00a0  $ pibooth --fonts\n\nConfiguration\n-------------\n\nAt the first run, a configuration file is generated in ``~/.config/pibooth/pibooth.cfg``\nwhich permits to configure the behavior of the application.\n\nA quick configuration GUI menu (see `Commands`_ ) gives access to the most common options:\n\n.. image:: https://raw.githubusercontent.com/werdeil/pibooth/master/templates/settings.png\n   :align: center\n   :alt: Settings\n\nMore options are available by editing the configuration file which is easily\ndone using the command::\n\n \u00a0  $ pibooth --config\n\nThe default configuration can be restored with the command (strongly recommended when\nupgrading ``pibooth``)::\n\n \u00a0 \u00a0$ pibooth --reset\n\nSee the `default configuration file <https://github.com/werdeil/pibooth/blob/master/docs/config.rst>`_\nfor further details.\n\nGUI translations\n----------------\n\nThe graphical interface texts are available in 4 languages by default: English, French,\nGerman, Dutch and Spanish. The default translations can be easily edited using the command::\n\n \u00a0  $ pibooth --translate\n\nA new language can be added by adding a new section (``[alpha-2-code]``).\nIf you want to have Pibooth in your language feel free to send us the corresponding keywords via a GitHub issue.\n\nPrinter\n-------\n\nThe print button (see `Commands`_) and print states are automatically activated/shown if:\n\n* `pycups <https://pypi.python.org/pypi/pycups>`_ is installed\n* at least one printer is configured in ``CUPS``\n\nTo avoid paper waste, set the option ``[PRINTER][max_duplicates]`` to the maximum\nof identical pictures that can be sent to the printer.\n\nSet the option ``[PRINTER][max_pages]`` to the number of paper sheets available on the\nprinter. When this number is reached, the print function will be disabled and an icon\nindicates the printer failure. To reset the counter, open then close the settings\ngraphical interface (see `Commands`_).\n\nHere is the default configuration used for this project in CUPS, it may depend on\nthe printer used:\n\n================ =============================\nOptions          Value\n================ =============================\nMedia Size       10cm x 15cm\nColor Model      CMYK\nMedia Type       Glossy Photo Paper\nResolution       Automatic\n2-Sided Printing Off\nShrink page ...  Shrink (print the whole page)\n================ =============================\n\nCircuit diagram\n---------------\n\nHere is the diagram for hardware connections. Please refer to the\n`default configuration file <https://github.com/werdeil/pibooth/blob/master/docs/config.rst>`_\nto know the default pins used.\n\n.. image:: https://raw.githubusercontent.com/werdeil/pibooth/master/templates/sketch.png\n   :align: center\n   :alt: Electronic sketch\n\nCredits\n-------\n\nIcons from the Noun Project\n\n- Polaroid by icon 54\n- Up hand drawn arrow by Kid A\n- Cameraman and Friends Posing For Camera by Gan Khoon Lay\n\nSupport us on Beerpay\n---------------------\n\nIf you want to help us you can by clicking on the following links!\n\n|BeerPay| |BeerPay2|\n\n.. |BeerPay| image:: https://beerpay.io/werdeil/pibooth/badge.svg?style=beer-square\n   :align: middle\n   :target: https://beerpay.io/werdeil/pibooth\n\n.. |BeerPay2| image:: https://beerpay.io/werdeil/pibooth/make-wish.svg?style=flat-square\n   :align: middle\n   :target: https://beerpay.io/werdeil/pibooth?focus=wish\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/werdeil/pibooth/archive/1.2.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/werdeil/pibooth", "keywords": "Raspberry Pi,camera,photobooth", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "pibooth", "package_url": "https://pypi.org/project/pibooth/", "platform": "unix", "project_url": "https://pypi.org/project/pibooth/", "project_urls": {"Download": "https://github.com/werdeil/pibooth/archive/1.2.0.tar.gz", "Homepage": "https://github.com/werdeil/pibooth"}, "release_url": "https://pypi.org/project/pibooth/1.2.0/", "requires_dist": ["Pillow (>=6.1.0)", "Pygame (>=1.9.4)", "pygame-menu (>=2.0.4)", "psutil (>=5.5.1)", "RPi.GPIO (>=0.6.3) ; platform_machine >= \"armv0l\" and platform_machine <= \"armv9l\"", "picamera (>=1.13) ; platform_machine >= \"armv0l\" and platform_machine <= \"armv9l\"", "gphoto2 (>=2.0.0) ; extra == 'dslr'", "pycups (>=1.9.73) ; extra == 'printer'", "pycups-notify (>=0.0.4) ; extra == 'printer'"], "requires_python": "", "summary": "A photo booth application in pure Python for the Raspberry Pi.", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"Pibooth\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/661a165217b1925c6f957feb4c5599fd803d7ae1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7765726465696c2f7069626f6f74682f6d61737465722f74656d706c617465732f7069626f6f74682e706e67\">\n<p>The <tt>pibooth</tt> project provides a photobooth application <em>out-of-the-box</em> in pure Python\nfor Raspberry Pi. Have a look to the <a href=\"https://github.com/werdeil/pibooth/wiki\" rel=\"nofollow\">wiki</a>\nto discover some realizations from GitHub users.</p>\n<img alt=\"Settings\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a22ddaf08a2e39d614d0a4a5cd450a1eda8384b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7765726465696c2f7069626f6f74682f6d61737465722f74656d706c617465732f6261636b67726f756e645f73616d706c65732e706e67\">\n<div>\n<p>Note</p>\n<p>Even if designed for a Raspberry Pi, this software may be installed on any Unix/Linux\nbased OS (tested on Ubuntu 16 and Mac OSX 10.14.6).</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Graphical interface available in English, French, German, Dutch and Spanish (customizable)</li>\n<li>Capture from 1 to 4 photos and concatenate them in a final picture</li>\n<li>Support all cameras compatible with gPhoto2, OpenCV and Raspberry Pi</li>\n<li>Support for hardware buttons and lamps on Raspberry Pi GPIO</li>\n<li>Fully driven from hardware buttons / keyboard / mouse / touchscreen</li>\n<li>Preview during countdown</li>\n<li>Auto-start at the Raspberry Pi startup</li>\n<li>Animate last pictures during idle time</li>\n<li>Store final pictures and the individual captures</li>\n<li>Printing final pictures using CUPS server (printing queue indication)</li>\n<li>Custom texts can be added on the final pictures (customizable fonts, colors, alignments)</li>\n<li>Custom background(s) and overlay(s) can be added on final pictures</li>\n<li>All settings available in a configuration file (most common options in a graphical interface)</li>\n</ul>\n<a href=\"https://github.com/werdeil/pibooth/blob/master/docs/examples.rst\" rel=\"nofollow\"><img alt=\"gallery\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49484c10ddff0a2afac70832d1f9baa6ea92949f/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7765726465696c2f7069626f6f74682f6d61737465722f74656d706c617465732f67616c6c6572792e706e67\"></a>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>The requirements listed below are the ones used for the development of <tt>pibooth</tt>, but\nother configuration may work fine. <strong>All hardware buttons, lights and printer are optional</strong>,\nthe application can be entirely controlled using a keyboard, a mouse or a touchscreen.</p>\n<div id=\"hardware\">\n<h3>Hardware</h3>\n<ul>\n<li>1 Raspberry Pi 3 Model B (or higher)</li>\n<li>1 Camera (Raspberry Pi Camera v2.1 8 MP 1080p\nor any DSLR camera <a href=\"http://www.gphoto.org/proj/libgphoto2/support.php\" rel=\"nofollow\">compatible with gPhoto2</a>\nor any webcam <a href=\"https://opencv.org\" rel=\"nofollow\">compatible with OpenCV</a> )</li>\n<li>2 push buttons</li>\n<li>4 LEDs</li>\n<li>4 resistors of 100 Ohm</li>\n<li>1 printer</li>\n</ul>\n</div>\n<div id=\"software\">\n<h3>Software</h3>\n<ul>\n<li>Raspbian <tt>Buster with desktop and recommended software</tt></li>\n<li>Python <tt>3.5.3</tt></li>\n<li>libgphoto2 <tt>2.5.23</tt></li>\n<li>libcups <tt>2.2.1</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>A brief description on how to set-up a Raspberry Pi to use this software.</p>\n<ol>\n<li><p>Download the Raspbian image and set-up an SD-card. You can follow\n<a href=\"https://www.raspberrypi.org/documentation/installation/installing-images/README.md\" rel=\"nofollow\">these instructions</a> .</p>\n</li>\n<li><p>Insert the SD-card into the Raspberry Pi and fire it up. Use the <tt><span class=\"pre\">raspi-config</span></tt> tool\nto configure your system (e.g., expand partition, change hostname, password, enable SSH,\nconfigure to boot into GUI, etc.).</p>\n<div>\n<p>Hint</p>\n<p>Don\u2019t forget to enable the camera in raspi-config.</p>\n</div>\n</li>\n<li><p>Upgrade all installed software:</p>\n<pre>$ sudo apt-get update\n$ sudo apt-get upgrade\n</pre>\n</li>\n<li><p>Optionally install the last stable <tt>gPhoto2</tt> version (required only for DSLR camera):</p>\n<pre>$ sudo wget raw.github.com/gonzalo/gphoto2-updater/master/gphoto2-updater.sh\n$ sudo chmod 755 gphoto2-updater.sh\n$ sudo ./gphoto2-updater.sh\n</pre>\n</li>\n<li><p>Optionally install <tt>CUPS</tt> to handle printers (more instructions to add a new printer can be found\n<a href=\"https://www.howtogeek.com/169679/how-to-add-a-printer-to-your-raspberry-pi-or-other-linux-computer\" rel=\"nofollow\">here</a>):</p>\n<pre>$ sudo apt-get install cups libcups2-dev\n</pre>\n</li>\n<li><p>Optionally install <tt>OpenCV</tt> to improve images generation efficiency or if a Webcam is used:</p>\n<pre>$ sudo apt-get install python3-opencv\n</pre>\n</li>\n<li><p>Install <tt>pibooth</tt> from the <a href=\"https://pypi.org/project/pibooth/\" rel=\"nofollow\">pypi repository</a>:</p>\n<pre>$ sudo pip3 install pibooth[dslr,printer]\n</pre>\n<div>\n<p>Hint</p>\n<p>If you don\u2019t have <tt>gPhoto2</tt> and/or <tt>CUPS</tt> installed (steps 5. and/or 6. skipped), remove\nprinter or dslr under the []</p>\n</div>\n</li>\n</ol>\n<div>\n<p>Note</p>\n<p>An editable/customizable version of <tt>pibooth</tt> can be installed by following\nthese <a href=\"https://github.com/werdeil/pibooth/blob/master/docs/dev.rst\" rel=\"nofollow\">instructions</a> .\nBe aware that the code on the <cite>master</cite> branch may be unstable.</p>\n</div>\n</div>\n<div id=\"run\">\n<h2>Run</h2>\n<p>Start the photobooth application using the command:</p>\n<pre>$ pibooth\n</pre>\n<p>All pictures taken are stored in the folder defined in <tt><span class=\"pre\">[GENERAL][directory]</span></tt>. They are named\n<strong>YYYY-mm-dd-hh-mm-ss_pibooth.jpg</strong> which is the time when first capture of the sequence was taken.\nA subfolder <strong>raw/YYYY-mm-dd-hh-mm-ss</strong> is created to store the single raw captures.</p>\n<div>\n<p>Note</p>\n<p>if you have both <tt>Pi</tt> and <tt>DSLR</tt> cameras connected to the Raspberry Pi, <strong>both are used</strong>,\nthis is called the <strong>Hybrid</strong> mode. The preview is taken using the <tt>Pi</tt> one for a better\nvideo rendering and the capture is taken using the <tt>DSLR</tt> one for better picture rendering.</p>\n</div>\n<p>You can display a basic help on application options by using the command:</p>\n<pre>$ pibooth --help\n</pre>\n<div id=\"states-and-lights-management\">\n<h3>States and lights management</h3>\n<p>The application follows the states sequence defined in the diagram below:</p>\n<img alt=\"State sequence\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24e4fb92d5bb03f779d2fa43a477f05bcf7ed3cd/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7765726465696c2f7069626f6f74682f6d61737465722f74656d706c617465732f73746174655f73657175656e63652e706e67\">\n<p>The states of the <strong>LED 1</strong> and <strong>LED 2</strong> are modified depending on the actions available\nfor the user. The <strong>LED 3</strong> is switched on when the application starts and the <strong>LED 4</strong>\nis switched on during the preview and photo capture.</p>\n</div>\n<div id=\"commands\">\n<h3>Commands</h3>\n<p>After the graphical interface is started, the following actions are available:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Action</th>\n<th>Keyboard key</th>\n<th>Physical button</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Toggle Full screen</td>\n<td>Ctrl + F</td>\n<td>-</td>\n</tr>\n<tr><td>Choose layout</td>\n<td>LEFT or RIGHT</td>\n<td>Button 1 or Button 2</td>\n</tr>\n<tr><td>Take pictures</td>\n<td>P</td>\n<td>Button 1</td>\n</tr>\n<tr><td>Export Printer/Cloud</td>\n<td>Ctrl + E</td>\n<td>Button 2</td>\n</tr>\n<tr><td>Open/close settings</td>\n<td>ESC</td>\n<td>Button 1 + Button 2</td>\n</tr>\n<tr><td>Select option</td>\n<td>UP or DOWN</td>\n<td>Button 1</td>\n</tr>\n<tr><td>Change option value</td>\n<td>LEFT or RIGHT</td>\n<td>Button 2</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"final-picture-rendering\">\n<h3>Final picture rendering</h3>\n<p>The <tt>pibooth</tt> application  handle the rendering of the final picture using 2 variables defined in\nthe configuration (see <a href=\"#configuration\" rel=\"nofollow\">Configuration</a> below):</p>\n<ul>\n<li><tt><span class=\"pre\">[CAMERA][resolution]</span> = (width, height)</tt> is the resolution of the captured picture in pixels.\nAs explained in the configuration file, the preview size is directly dependent from this parameter.</li>\n<li><tt><span class=\"pre\">[PICTURE][orientation]</span> = auto/landscape/portrait</tt> is the orientation of the final picture\n(after concatenation of all captures). If the value is <strong>auto</strong>, the orientation is automatically\nchosen depending on the resolution.</li>\n</ul>\n<div>\n<p>Note</p>\n<p>The resolution is an important parameter, it is responsible for the quality of the final\npicture. Have a look to <a href=\"http://picamera.readthedocs.io/en/latest/fov.html#sensor-modes\" rel=\"nofollow\">picamera possible resolutions</a> .</p>\n</div>\n<p>Image effects can be applied on the capture using the <tt><span class=\"pre\">[PICTURE][effect]</span></tt> variable defined in the\nconfiguration.</p>\n<pre><span class=\"k\">[PICTURE]</span>\n\n<span class=\"c1\"># Effect applied on all captures</span>\n<span class=\"na\">captures_effects</span> <span class=\"o\">=</span> <span class=\"s\">film</span>\n</pre>\n<p>Instead of one effect name, a list of names can be provided. In this case, the effects are applied\nsequentially on the captures sequence.</p>\n<pre><span class=\"k\">[PICTURE]</span>\n\n<span class=\"c1\"># Define a rolling sequence of effects. For each capture the corresponding effect is applied.</span>\n<span class=\"na\">captures_effects</span> <span class=\"o\">=</span> <span class=\"s\">('film', 'cartoon', 'washedout', 'film')</span>\n</pre>\n<p>Have a look to the predefined effects available depending on the camera used:</p>\n<ul>\n<li><a href=\"https://picamera.readthedocs.io/en/latest/api_camera.html#picamera.PiCamera.image_effect\" rel=\"nofollow\">picamera effects</a></li>\n<li><a href=\"https://pillow.readthedocs.io/en/latest/reference/ImageFilter.html\" rel=\"nofollow\">gPhoto2 effects (PIL based)</a></li>\n</ul>\n<p>Texts can be defined by setting the option <tt><span class=\"pre\">[PICTURE][footer_text1]</span></tt> and <tt><span class=\"pre\">[PICTURE][footer_text2]</span></tt>\n(lets them empty to hide any text). For each one, the font, the color and the alignment can be chosen.\nFor instance:</p>\n<pre><span class=\"k\">[PICTURE]</span>\n\n<span class=\"c1\"># Same font applied on footer_text1 and footer_text2</span>\n<span class=\"na\">text_fonts</span> <span class=\"o\">=</span> <span class=\"s\">Amatic-Bold</span>\n</pre>\n<p>This key can also take two names or TTF file paths:</p>\n<pre><span class=\"k\">[PICTURE]</span>\n\n<span class=\"c1\"># 'arial' font applied on footer_text1, 'Roboto-BoldItalic' font on footer_text2</span>\n<span class=\"na\">text_fonts</span> <span class=\"o\">=</span> <span class=\"s\">('arial', 'Roboto-BoldItalic')</span>\n</pre>\n<p>The available fonts can be listed using the following the command:</p>\n<pre>$ pibooth --fonts\n</pre>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>At the first run, a configuration file is generated in <tt><span class=\"pre\">~/.config/pibooth/pibooth.cfg</span></tt>\nwhich permits to configure the behavior of the application.</p>\n<p>A quick configuration GUI menu (see <a href=\"#commands\" rel=\"nofollow\">Commands</a> ) gives access to the most common options:</p>\n<img alt=\"Settings\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21de0d6488248b7e3e48baa5f1c8d09d2731654b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7765726465696c2f7069626f6f74682f6d61737465722f74656d706c617465732f73657474696e67732e706e67\">\n<p>More options are available by editing the configuration file which is easily\ndone using the command:</p>\n<pre>$ pibooth --config\n</pre>\n<p>The default configuration can be restored with the command (strongly recommended when\nupgrading <tt>pibooth</tt>):</p>\n<pre>$ pibooth --reset\n</pre>\n<p>See the <a href=\"https://github.com/werdeil/pibooth/blob/master/docs/config.rst\" rel=\"nofollow\">default configuration file</a>\nfor further details.</p>\n</div>\n<div id=\"gui-translations\">\n<h2>GUI translations</h2>\n<p>The graphical interface texts are available in 4 languages by default: English, French,\nGerman, Dutch and Spanish. The default translations can be easily edited using the command:</p>\n<pre>$ pibooth --translate\n</pre>\n<p>A new language can be added by adding a new section (<tt><span class=\"pre\">[alpha-2-code]</span></tt>).\nIf you want to have Pibooth in your language feel free to send us the corresponding keywords via a GitHub issue.</p>\n</div>\n<div id=\"printer\">\n<h2>Printer</h2>\n<p>The print button (see <a href=\"#commands\" rel=\"nofollow\">Commands</a>) and print states are automatically activated/shown if:</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/pycups\" rel=\"nofollow\">pycups</a> is installed</li>\n<li>at least one printer is configured in <tt>CUPS</tt></li>\n</ul>\n<p>To avoid paper waste, set the option <tt><span class=\"pre\">[PRINTER][max_duplicates]</span></tt> to the maximum\nof identical pictures that can be sent to the printer.</p>\n<p>Set the option <tt><span class=\"pre\">[PRINTER][max_pages]</span></tt> to the number of paper sheets available on the\nprinter. When this number is reached, the print function will be disabled and an icon\nindicates the printer failure. To reset the counter, open then close the settings\ngraphical interface (see <a href=\"#commands\" rel=\"nofollow\">Commands</a>).</p>\n<p>Here is the default configuration used for this project in CUPS, it may depend on\nthe printer used:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Options</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Media Size</td>\n<td>10cm x 15cm</td>\n</tr>\n<tr><td>Color Model</td>\n<td>CMYK</td>\n</tr>\n<tr><td>Media Type</td>\n<td>Glossy Photo Paper</td>\n</tr>\n<tr><td>Resolution</td>\n<td>Automatic</td>\n</tr>\n<tr><td>2-Sided Printing</td>\n<td>Off</td>\n</tr>\n<tr><td>Shrink page \u2026</td>\n<td>Shrink (print the whole page)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"circuit-diagram\">\n<h2>Circuit diagram</h2>\n<p>Here is the diagram for hardware connections. Please refer to the\n<a href=\"https://github.com/werdeil/pibooth/blob/master/docs/config.rst\" rel=\"nofollow\">default configuration file</a>\nto know the default pins used.</p>\n<img alt=\"Electronic sketch\" class=\"align-center\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c20f2474de7f4c310eee60d4fc268d68d38f4f26/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7765726465696c2f7069626f6f74682f6d61737465722f74656d706c617465732f736b657463682e706e67\">\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Icons from the Noun Project</p>\n<ul>\n<li>Polaroid by icon 54</li>\n<li>Up hand drawn arrow by Kid A</li>\n<li>Cameraman and Friends Posing For Camera by Gan Khoon Lay</li>\n</ul>\n</div>\n<div id=\"support-us-on-beerpay\">\n<h2>Support us on Beerpay</h2>\n<p>If you want to help us you can by clicking on the following links!</p>\n<p><a href=\"https://beerpay.io/werdeil/pibooth\" rel=\"nofollow\"><img alt=\"BeerPay\" class=\"align-middle\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b34706fe7dca923ba9ab237ed40277f4feed7051/68747470733a2f2f626565727061792e696f2f7765726465696c2f7069626f6f74682f62616467652e7376673f7374796c653d626565722d737175617265\"></a> <a href=\"https://beerpay.io/werdeil/pibooth?focus=wish\" rel=\"nofollow\"><img alt=\"BeerPay2\" class=\"align-middle\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6385f923a5d6d34b155f45d7c8261e5b9aa7a5c6/68747470733a2f2f626565727061792e696f2f7765726465696c2f7069626f6f74682f6d616b652d776973682e7376673f7374796c653d666c61742d737175617265\"></a></p>\n</div>\n\n          </div>"}, "last_serial": 6091906, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "8c88aa409298c4046304c1cc1ee2cccc", "sha256": "af14bc98657f03cebf82e6c97add17cabb99b835316f535bd1aa1a436f10612d"}, "downloads": -1, "filename": "pibooth-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "8c88aa409298c4046304c1cc1ee2cccc", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 358160, "upload_time": "2018-01-07T18:34:20", "upload_time_iso_8601": "2018-01-07T18:34:20.258568Z", "url": "https://files.pythonhosted.org/packages/86/7a/a46c741929e218cb73341fa61c4127955650cac30efea1da01c5b2164371/pibooth-0.0.2-py2-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "bec1484bb5dc2c57e657fc5925d0defe", "sha256": "48b509895fe64973650225d8916747ae355efd2b58763106ce2ec12593c86b11"}, "downloads": -1, "filename": "pibooth-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bec1484bb5dc2c57e657fc5925d0defe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 278349, "upload_time": "2018-01-21T22:51:08", "upload_time_iso_8601": "2018-01-21T22:51:08.799796Z", "url": "https://files.pythonhosted.org/packages/c2/3e/feea62aacc472fe710ac8166c415f7a8e2b8a8485a83139b15fecaa35cde/pibooth-0.0.4-py2.py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5b2faad9a42a07a77e12ff35f2d8afb2", "sha256": "4045c321ed491accf8683a1896cfb6b2e7baff5cd6a4b454ade399c7ebe921d4"}, "downloads": -1, "filename": "pibooth-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5b2faad9a42a07a77e12ff35f2d8afb2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 654411, "upload_time": "2018-02-07T22:48:54", "upload_time_iso_8601": "2018-02-07T22:48:54.440080Z", "url": "https://files.pythonhosted.org/packages/b7/5e/bae98ca9059b48a1698789f6cf73311f07942b469321d921b186e5c2c3d5/pibooth-0.0.5-py2.py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "b13b55dd9835de95e792b3f6bf62872f", "sha256": "b8f2b56cbebe1f7ab137b8b9ef878a94dba384ae229b7f846ad298d00a23f2fa"}, "downloads": -1, "filename": "pibooth-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b13b55dd9835de95e792b3f6bf62872f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 740274, "upload_time": "2018-03-04T17:36:13", "upload_time_iso_8601": "2018-03-04T17:36:13.074091Z", "url": "https://files.pythonhosted.org/packages/d6/dd/5fdbb4de15f47150d6791fab7d7cf527631557cdd2f5fd27f10b4aab38a1/pibooth-0.0.6-py2.py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "ade3fb185f651362ed4954ac220c0a16", "sha256": "728dafb1f47d13d6f7d14975e30bb7be3fc26fb8add74c691ffc981a9854a51f"}, "downloads": -1, "filename": "pibooth-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ade3fb185f651362ed4954ac220c0a16", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1327884, "upload_time": "2018-03-18T13:39:41", "upload_time_iso_8601": "2018-03-18T13:39:41.270223Z", "url": "https://files.pythonhosted.org/packages/7d/ad/52ae431cf53bb518b156a82bd9bd88602539283268abf4947a86b74fcde0/pibooth-0.0.7-py2.py3-none-any.whl", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "f89cd1cddb7cf2428a4f804c226880aa", "sha256": "4ab96c90dcba4ed7ef2db656f2d41543eddcd4ab375a3f77a6c1aab4c7b2ee0c"}, "downloads": -1, "filename": "pibooth-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f89cd1cddb7cf2428a4f804c226880aa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1326628, "upload_time": "2018-03-18T16:35:54", "upload_time_iso_8601": "2018-03-18T16:35:54.382349Z", "url": "https://files.pythonhosted.org/packages/19/e6/b1f831a97d47b6e8395a86522215d2c1fec1e09b8a0431a6fe0418409849/pibooth-0.0.8-py2.py3-none-any.whl", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "1bb4292467831f531b028ec8efccb693", "sha256": "1d53b29430b3da7d6f94782cd8e3c42db95219ed9506cf62c354a8c125b27581"}, "downloads": -1, "filename": "pibooth-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1bb4292467831f531b028ec8efccb693", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1327661, "upload_time": "2018-03-20T21:31:03", "upload_time_iso_8601": "2018-03-20T21:31:03.585912Z", "url": "https://files.pythonhosted.org/packages/e6/9f/ebaaae9650fda79eec0ec81ee5a9129e43e4a69182cb0889ab84e89677b2/pibooth-0.0.9-py2.py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "de9991c6d7c18d07269f6c15e8817475", "sha256": "87158752bb03e156d5890d2cad831e38fe7a6f0139f4a4f5beecea2e7c51eb4b"}, "downloads": -1, "filename": "pibooth-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "de9991c6d7c18d07269f6c15e8817475", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1272868, "upload_time": "2018-04-04T20:44:58", "upload_time_iso_8601": "2018-04-04T20:44:58.616613Z", "url": "https://files.pythonhosted.org/packages/90/d2/f77e155909af3853bdb8145e766b0b6862e5d4283508bdad1d985ef342f5/pibooth-1.0.0-py2.py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "13caaa54a785c6dc6e27f2487ecb1053", "sha256": "fb421d8a53e31e640825b2427c7e08cebffa0bb47449d12b1ebe89da82218e5a"}, "downloads": -1, "filename": "pibooth-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "13caaa54a785c6dc6e27f2487ecb1053", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1274424, "upload_time": "2018-05-01T21:52:31", "upload_time_iso_8601": "2018-05-01T21:52:31.084041Z", "url": "https://files.pythonhosted.org/packages/cc/28/1f143b3b801bdc4d718e23c4d1d7fc93e5b3fa84191a47c1be3fbd6a6c6e/pibooth-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "75003cadacacd98b1bf6e0997878ad21", "sha256": "8da58d8cf4a7f9c3bd9ca67b8addbdaa9f6e802548f0d7b09bdd1b3cd406fbe0"}, "downloads": -1, "filename": "pibooth-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75003cadacacd98b1bf6e0997878ad21", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1273578, "upload_time": "2018-08-12T10:53:48", "upload_time_iso_8601": "2018-08-12T10:53:48.898462Z", "url": "https://files.pythonhosted.org/packages/8f/e5/5ddb5618cc0fcf9e8f4bdff68885779ef43c0f5424ab045d71dacab755e6/pibooth-1.0.2-py2.py3-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "4edd21f63f99a452745fcb3cfa04314b", "sha256": "c0dd972fdaf836a41268dc12ee066337c5fd3970605ff39518518c21c6514afe"}, "downloads": -1, "filename": "pibooth-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4edd21f63f99a452745fcb3cfa04314b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1274868, "upload_time": "2018-09-25T21:31:53", "upload_time_iso_8601": "2018-09-25T21:31:53.760050Z", "url": "https://files.pythonhosted.org/packages/2e/2d/afad1a38a1234dc530fbc6e154e980cefa3bae3085c787e5ac49355f577a/pibooth-1.0.3-py2.py3-none-any.whl", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "fb7413601e2893b8219681ce01b40977", "sha256": "dceaf3bd4eab5fec1d1aa2c08404d2cab2b1fb8275bf9c229d6b3af90c1fb54a"}, "downloads": -1, "filename": "pibooth-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb7413601e2893b8219681ce01b40977", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1182424, "upload_time": "2019-06-09T16:54:45", "upload_time_iso_8601": "2019-06-09T16:54:45.004521Z", "url": "https://files.pythonhosted.org/packages/17/f9/09be095b0abe66841cc8cd08a45e0d631aa58ae265880b01ea2d0a854bcc/pibooth-1.0.4-py2.py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "83caddce4f4d49e828abe7eacc13218c", "sha256": "8e947abd1ab157bd40b8eca487a83d0442a234e68b7e2ddf1edbace96709f701"}, "downloads": -1, "filename": "pibooth-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83caddce4f4d49e828abe7eacc13218c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1229671, "upload_time": "2019-08-06T21:59:43", "upload_time_iso_8601": "2019-08-06T21:59:43.723187Z", "url": "https://files.pythonhosted.org/packages/ea/f7/9e2bc9c3bc5c4a8bb2b6d7c7586da83149ac0ed702f3faff637bc3c56c96/pibooth-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "47856d8bc7ad8d5f9df6855a23cfe6d7", "sha256": "42b74ebfa319364a164cc8f3cee8230866fb38d6489d05ca0596d0fabbadd02c"}, "downloads": -1, "filename": "pibooth-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "47856d8bc7ad8d5f9df6855a23cfe6d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1533284, "upload_time": "2019-08-24T18:57:00", "upload_time_iso_8601": "2019-08-24T18:57:00.852036Z", "url": "https://files.pythonhosted.org/packages/bf/29/abcb7144ca9bc59640c83451f33b0fcd17eaa6cd13ed3437f2b7f9e40ddd/pibooth-1.1.1-py2.py3-none-any.whl", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "e86af135080b29bb273fd6ef1f546917", "sha256": "94892b691bcf113b4259b66c2df5192810fc4e6c8053e33da614537b2a3ccbce"}, "downloads": -1, "filename": "pibooth-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e86af135080b29bb273fd6ef1f546917", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1541993, "upload_time": "2019-09-05T20:44:17", "upload_time_iso_8601": "2019-09-05T20:44:17.059536Z", "url": "https://files.pythonhosted.org/packages/b5/29/1c396a6ce74daa7b6146f7db2584b87a06ef84b99dee8d2dfae03635085e/pibooth-1.1.2-py2.py3-none-any.whl", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "214d35b1d6be533e2d9c011602fc6c46", "sha256": "0c9075842fea92ff5504bb26c1c0afa176cd8171a5b75529e253498b3addf38d"}, "downloads": -1, "filename": "pibooth-1.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "214d35b1d6be533e2d9c011602fc6c46", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1478357, "upload_time": "2019-09-25T20:06:53", "upload_time_iso_8601": "2019-09-25T20:06:53.062328Z", "url": "https://files.pythonhosted.org/packages/b8/71/9a9215c08ed425432303321d8fbd625c36b7b9ccbe273a984f32b40922f9/pibooth-1.1.3-py2.py3-none-any.whl", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "056475b5ceb0e5ef06268112fae86e9d", "sha256": "2a984996234ec443e43c9b5f8e2eeec345e9ff87730e347c62c2a93e8c8d0357"}, "downloads": -1, "filename": "pibooth-1.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "056475b5ceb0e5ef06268112fae86e9d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 1472991, "upload_time": "2019-09-27T15:17:27", "upload_time_iso_8601": "2019-09-27T15:17:27.003101Z", "url": "https://files.pythonhosted.org/packages/c2/b9/a62644b80d68cb4c79fd5a252a8f330b470f40bb15172b4afa4b423df123/pibooth-1.1.4-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "7da726c2ff71c8edfbd84c545704910d", "sha256": "9f62a6dba9f8eaec9c7aa0715a03a2a7637d9b91523b2e542bb6fa68f3bed4b8"}, "downloads": -1, "filename": "pibooth-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7da726c2ff71c8edfbd84c545704910d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 605629, "upload_time": "2019-11-07T07:52:47", "upload_time_iso_8601": "2019-11-07T07:52:47.689150Z", "url": "https://files.pythonhosted.org/packages/39/17/2069e27baefd8998487d16350e5c3bf5b24fc8f33e5c0bcfea66915fa5a8/pibooth-1.2.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7da726c2ff71c8edfbd84c545704910d", "sha256": "9f62a6dba9f8eaec9c7aa0715a03a2a7637d9b91523b2e542bb6fa68f3bed4b8"}, "downloads": -1, "filename": "pibooth-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7da726c2ff71c8edfbd84c545704910d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 605629, "upload_time": "2019-11-07T07:52:47", "upload_time_iso_8601": "2019-11-07T07:52:47.689150Z", "url": "https://files.pythonhosted.org/packages/39/17/2069e27baefd8998487d16350e5c3bf5b24fc8f33e5c0bcfea66915fa5a8/pibooth-1.2.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:55:09 2020"}