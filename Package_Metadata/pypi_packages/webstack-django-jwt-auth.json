{"info": {"author": "St\u00e9phane Raimbault", "author_email": "stephane.raimbault@webstack.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP"], "description": "# Django JWT Auth\n\n[![build-status-image]][travis]\n[![pypi-version]][pypi]\n\n## Overview\nThis package provides [JSON Web Token\nAuthentication](http://tools.ietf.org/html/draft-ietf-oauth-json-web-token)\nsupport for Django by using [PyJWT](https://github.com/jpadilla/pyjwt).\n\nThe project is a fork of (https://github.com/jpadilla/django-jwt-auth) created\nby Jos\u00e9 Padilla (maintainer of PyJWT too). Jos\u00e9 doesn't seem to have the time\nanymore to work on django-jwt-auth.\n\nNew features from original code:\n\n- refresh token\n- provides 2 middlewares\n- Django 2.0\n- better coverage and packaging\n\n## Installation\n\nInstall using `pip`...\n\n```\n$ pip install webstack-django-jwt-auth\n```\n\n## Usage\n\nIn your `urls.py` add the following URL route to enable obtaining a token via a\nPOST included the user's username and password.\n\n```python\nfrom jwt_auth import views as jwt_auth_views\n\nfrom your_app.views import RestrictedView\n\nurlpatterns = [\n    # ...\n    path(\"token-auth/\", jwt_auth_views.jwt_token),\n    path(\"token-refresh/\", jwt_auth_views.refresh_jwt_token),\n    path(\"protected-url/\", RestrictedView.as_view()),\n]\n```\n\nInside your_app, create a Django restricted view:\n\n```python\nimport json\n\nfrom django.http import JsonResponse\nfrom django.views.generic import View\nfrom jwt_auth.mixins import JSONWebTokenAuthMixin\n\nclass RestrictedView(JSONWebTokenAuthMixin, View):\n    def get(self, request):\n        data = {\n            \"foo\": \"bar\",\n            \"username\": request.user.username,\n        }\n        return JsonResponse(data)\n```\n\nYou can easily test if the endpoint is working by doing the following in your\nterminal, if you had a user created with the username **admin** and password\n**abc123**.\n\n```bash\n$ curl -X POST -H \"Content-Type: application/json\" -d '{\"username\":\"admin\",\"password\":\"abc123\"}' http://localhost:8000/token-auth/\n```\n\nNow in order to access protected api urls you must include the `Authorization:\nBearer <your_token>` header.\n\n```bash\n$ curl -H \"Authorization: Bearer <your_token>\" http://localhost:8000/protected-url/\n```\n\nThere is also a provided middleware if you would prefer that to the view\nintegration.  Just add the following to your middleware:\n\n```python\nMIDDLEWARE = (\n    # ...\n    'jwt_auth.middleware.JWTAuthenticationMiddleware',\n)\n```\n\n## Additional Settings\nThere are some additional settings that you can override similar to how you'd do\nit with Django REST framework itself. Here are all the available defaults.\n\n```python\nJWT_ALGORITHM = 'HS256'\nJWT_ALLOW_REFRESH = False\nJWT_AUDIENCE = None\nJWT_AUTH_HEADER_PREFIX = 'Bearer'\nJWT_DECODE_HANDLER = 'jwt_auth.utils.jwt_decode_handler',\nJWT_ENCODE_HANDLER = 'jwt_auth.utils.jwt_encode_handler'\nJWT_EXPIRATION_DELTA = datetime.timedelta(seconds=300)\nJWT_LEEWAY = 0\nJWT_LOGIN_URLS = [settings.LOGIN_URL]\nJWT_PAYLOAD_GET_USER_ID_HANDLER = 'jwt_auth.utils.jwt_get_user_id_from_payload_handler'\nJWT_PAYLOAD_HANDLER = 'jwt_auth.utils.jwt_payload_handler'\nJWT_REFRESH_EXPIRATION_DELTA = datetime.timedelta(days=7)\nJWT_SECRET_KEY: SECRET_KEY\nJWT_VERIFY = True\nJWT_VERIFY_EXPIRATION = True\n```\nThis packages uses the JSON Web Token Python implementation,\n[PyJWT](https://github.com/progrium/pyjwt) and allows to modify some of it's\navailable options.\n\n### JWT_ALGORITHM\n\nPossible values:\n\n> * HS256 - HMAC using SHA-256 hash algorithm (default)\n> * HS384 - HMAC using SHA-384 hash algorithm\n> * HS512 - HMAC using SHA-512 hash algorithm\n> * RS256 - RSASSA-PKCS1-v1_5 signature algorithm using SHA-256 hash algorithm\n> * RS384 - RSASSA-PKCS1-v1_5 signature algorithm using SHA-384 hash algorithm\n> * RS512 - RSASSA-PKCS1-v1_5 signature algorithm using SHA-512 hash algorithm\n\nNote:\n> For the RSASSA-PKCS1-v1_5 algorithms, the \"secret\" argument in jwt.encode is\n> supposed to be a private RSA key as imported with\n> Crypto.PublicKey.RSA.importKey. Likewise, the \"secret\" argument in jwt.decode\n> is supposed to be the public RSA key imported with the same method.\n\nDefault is `\"HS256\"`.\n\n### JWT_ALLOW_REFRESH\nEnable token refresh functionality. Token issued from `jwt_auth.views.jwt_token`\nwill have an `orig_iat` field.\n\nDefault is `False`\n\n### JWT_AUDIENCE\n\nTypically, the base address of the resource being accessed, eg `https://example.com`.\n\n### JWT_AUTH_HEADER_PREFIX\nYou can modify the Authorization header value prefix that is required to be sent\ntogether with the token.\n\nDefault is `Bearer`.\n\n### JWT_EXPIRATION_DELTA\nThis is an instance of Python's `datetime.timedelta`. This will be added to\n`datetime.utcnow()` to set the expiration time.\n\nDefault is `datetime.timedelta(seconds=300)`(5 minutes).\n\n### JWT_LEEWAY\n\n> This allows you to validate an expiration time which is in the past but no\n> very far. For example, if you have a JWT payload with an expiration time set\n> to 30 seconds after creation but you know that sometimes you will process it\n> after 30 seconds, you can set a leeway of 10 seconds in order to have some\n> margin.\n\nDefault is `0` seconds.\n\n### JWT_LOGIN_URLS\n\nSet the list of URLs that will be used to authenticate the user, you should take\ncare to set only required URLs because the middleware will accept\nnon-authenticated requests (no JWT) to these endpoints.\n\n### JWT_PAYLOAD_GET_USER_ID_HANDLER\nIf you store `user_id` differently than the default payload handler does,\nimplement this function to fetch `user_id` from the payload.\n\n### JWT_PAYLOAD_HANDLER\nSpecify a custom function to generate the token payload\n\n### JWT_REFRESH_EXPIRATION_DELTA\nLimit on token refresh, is a `datetime.timedelta` instance. This is how much\ntime after the original token that future tokens can be refreshed from.\n\nDefault is `datetime.timedelta(days=7)` (7 days).\n\n### JWT_SECRET_KEY\nThis is the secret key used to encrypt the JWT. Make sure this is safe and not\nshared or public.\n\nDefault is your project's `settings.SECRET_KEY`.\n\n### JWT_VERIFY\n\nIf the secret is wrong, it will raise a jwt.DecodeError telling you as such. You\ncan still get at the payload by setting the `JWT_VERIFY` to `False`.\n\nDefault is `True`.\n\n### JWT_VERIFY_EXPIRATION\n\nYou can turn off expiration time verification with by setting\n`JWT_VERIFY_EXPIRATION` to `False`.\n\nDefault is `True`.\n\n\n[build-status-image]: https://secure.travis-ci.org/webstack/django-jwt-auth.svg?branch=master\n[travis]: https://travis-ci.org/webstack/django-jwt-auth?branch=master\n[pypi-version]: https://img.shields.io/pypi/v/webstack-django-jwt-auth.svg\n[pypi]: https://pypi.python.org/pypi/webstack-django-jwt-auth\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/webstack/django-jwt-auth", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "webstack-django-jwt-auth", "package_url": "https://pypi.org/project/webstack-django-jwt-auth/", "platform": "", "project_url": "https://pypi.org/project/webstack-django-jwt-auth/", "project_urls": {"Homepage": "https://github.com/webstack/django-jwt-auth"}, "release_url": "https://pypi.org/project/webstack-django-jwt-auth/1.2.1/", "requires_dist": ["Django (<3.0,>=2.0)", "PyJWT (>=1.7.1)"], "requires_python": "", "summary": "JSON Web Token based authentication for Django", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django JWT Auth</h1>\n<p><a href=\"https://travis-ci.org/webstack/django-jwt-auth?branch=master\" rel=\"nofollow\"><img alt=\"build-status-image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87dbba084f93ae22aeb7f89f5021de394f9f3f31/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f776562737461636b2f646a616e676f2d6a77742d617574682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/webstack-django-jwt-auth\" rel=\"nofollow\"><img alt=\"pypi-version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/395d5ab88ebd9a907cd485586997c17263507974/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f776562737461636b2d646a616e676f2d6a77742d617574682e737667\"></a></p>\n<h2>Overview</h2>\n<p>This package provides <a href=\"http://tools.ietf.org/html/draft-ietf-oauth-json-web-token\" rel=\"nofollow\">JSON Web Token\nAuthentication</a>\nsupport for Django by using <a href=\"https://github.com/jpadilla/pyjwt\" rel=\"nofollow\">PyJWT</a>.</p>\n<p>The project is a fork of (<a href=\"https://github.com/jpadilla/django-jwt-auth\" rel=\"nofollow\">https://github.com/jpadilla/django-jwt-auth</a>) created\nby Jos\u00e9 Padilla (maintainer of PyJWT too). Jos\u00e9 doesn't seem to have the time\nanymore to work on django-jwt-auth.</p>\n<p>New features from original code:</p>\n<ul>\n<li>refresh token</li>\n<li>provides 2 middlewares</li>\n<li>Django 2.0</li>\n<li>better coverage and packaging</li>\n</ul>\n<h2>Installation</h2>\n<p>Install using <code>pip</code>...</p>\n<pre><code>$ pip install webstack-django-jwt-auth\n</code></pre>\n<h2>Usage</h2>\n<p>In your <code>urls.py</code> add the following URL route to enable obtaining a token via a\nPOST included the user's username and password.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">jwt_auth</span> <span class=\"kn\">import</span> <span class=\"n\">views</span> <span class=\"k\">as</span> <span class=\"n\">jwt_auth_views</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">your_app.views</span> <span class=\"kn\">import</span> <span class=\"n\">RestrictedView</span>\n\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">\"token-auth/\"</span><span class=\"p\">,</span> <span class=\"n\">jwt_auth_views</span><span class=\"o\">.</span><span class=\"n\">jwt_token</span><span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">\"token-refresh/\"</span><span class=\"p\">,</span> <span class=\"n\">jwt_auth_views</span><span class=\"o\">.</span><span class=\"n\">refresh_jwt_token</span><span class=\"p\">),</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s2\">\"protected-url/\"</span><span class=\"p\">,</span> <span class=\"n\">RestrictedView</span><span class=\"o\">.</span><span class=\"n\">as_view</span><span class=\"p\">()),</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Inside your_app, create a Django restricted view:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">JsonResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.views.generic</span> <span class=\"kn\">import</span> <span class=\"n\">View</span>\n<span class=\"kn\">from</span> <span class=\"nn\">jwt_auth.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">JSONWebTokenAuthMixin</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">RestrictedView</span><span class=\"p\">(</span><span class=\"n\">JSONWebTokenAuthMixin</span><span class=\"p\">,</span> <span class=\"n\">View</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">\"foo\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"username\"</span><span class=\"p\">:</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">username</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">JsonResponse</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<p>You can easily test if the endpoint is working by doing the following in your\nterminal, if you had a user created with the username <strong>admin</strong> and password\n<strong>abc123</strong>.</p>\n<pre>$ curl -X POST -H <span class=\"s2\">\"Content-Type: application/json\"</span> -d <span class=\"s1\">'{\"username\":\"admin\",\"password\":\"abc123\"}'</span> http://localhost:8000/token-auth/\n</pre>\n<p>Now in order to access protected api urls you must include the <code>Authorization: Bearer &lt;your_token&gt;</code> header.</p>\n<pre>$ curl -H <span class=\"s2\">\"Authorization: Bearer &lt;your_token&gt;\"</span> http://localhost:8000/protected-url/\n</pre>\n<p>There is also a provided middleware if you would prefer that to the view\nintegration.  Just add the following to your middleware:</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'jwt_auth.middleware.JWTAuthenticationMiddleware'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Additional Settings</h2>\n<p>There are some additional settings that you can override similar to how you'd do\nit with Django REST framework itself. Here are all the available defaults.</p>\n<pre><span class=\"n\">JWT_ALGORITHM</span> <span class=\"o\">=</span> <span class=\"s1\">'HS256'</span>\n<span class=\"n\">JWT_ALLOW_REFRESH</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n<span class=\"n\">JWT_AUDIENCE</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"n\">JWT_AUTH_HEADER_PREFIX</span> <span class=\"o\">=</span> <span class=\"s1\">'Bearer'</span>\n<span class=\"n\">JWT_DECODE_HANDLER</span> <span class=\"o\">=</span> <span class=\"s1\">'jwt_auth.utils.jwt_decode_handler'</span><span class=\"p\">,</span>\n<span class=\"n\">JWT_ENCODE_HANDLER</span> <span class=\"o\">=</span> <span class=\"s1\">'jwt_auth.utils.jwt_encode_handler'</span>\n<span class=\"n\">JWT_EXPIRATION_DELTA</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">)</span>\n<span class=\"n\">JWT_LEEWAY</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">JWT_LOGIN_URLS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">LOGIN_URL</span><span class=\"p\">]</span>\n<span class=\"n\">JWT_PAYLOAD_GET_USER_ID_HANDLER</span> <span class=\"o\">=</span> <span class=\"s1\">'jwt_auth.utils.jwt_get_user_id_from_payload_handler'</span>\n<span class=\"n\">JWT_PAYLOAD_HANDLER</span> <span class=\"o\">=</span> <span class=\"s1\">'jwt_auth.utils.jwt_payload_handler'</span>\n<span class=\"n\">JWT_REFRESH_EXPIRATION_DELTA</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"n\">JWT_SECRET_KEY</span><span class=\"p\">:</span> <span class=\"n\">SECRET_KEY</span>\n<span class=\"n\">JWT_VERIFY</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"n\">JWT_VERIFY_EXPIRATION</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<p>This packages uses the JSON Web Token Python implementation,\n<a href=\"https://github.com/progrium/pyjwt\" rel=\"nofollow\">PyJWT</a> and allows to modify some of it's\navailable options.</p>\n<h3>JWT_ALGORITHM</h3>\n<p>Possible values:</p>\n<blockquote>\n<ul>\n<li>HS256 - HMAC using SHA-256 hash algorithm (default)</li>\n<li>HS384 - HMAC using SHA-384 hash algorithm</li>\n<li>HS512 - HMAC using SHA-512 hash algorithm</li>\n<li>RS256 - RSASSA-PKCS1-v1_5 signature algorithm using SHA-256 hash algorithm</li>\n<li>RS384 - RSASSA-PKCS1-v1_5 signature algorithm using SHA-384 hash algorithm</li>\n<li>RS512 - RSASSA-PKCS1-v1_5 signature algorithm using SHA-512 hash algorithm</li>\n</ul>\n</blockquote>\n<p>Note:</p>\n<blockquote>\n<p>For the RSASSA-PKCS1-v1_5 algorithms, the \"secret\" argument in jwt.encode is\nsupposed to be a private RSA key as imported with\nCrypto.PublicKey.RSA.importKey. Likewise, the \"secret\" argument in jwt.decode\nis supposed to be the public RSA key imported with the same method.</p>\n</blockquote>\n<p>Default is <code>\"HS256\"</code>.</p>\n<h3>JWT_ALLOW_REFRESH</h3>\n<p>Enable token refresh functionality. Token issued from <code>jwt_auth.views.jwt_token</code>\nwill have an <code>orig_iat</code> field.</p>\n<p>Default is <code>False</code></p>\n<h3>JWT_AUDIENCE</h3>\n<p>Typically, the base address of the resource being accessed, eg <code>https://example.com</code>.</p>\n<h3>JWT_AUTH_HEADER_PREFIX</h3>\n<p>You can modify the Authorization header value prefix that is required to be sent\ntogether with the token.</p>\n<p>Default is <code>Bearer</code>.</p>\n<h3>JWT_EXPIRATION_DELTA</h3>\n<p>This is an instance of Python's <code>datetime.timedelta</code>. This will be added to\n<code>datetime.utcnow()</code> to set the expiration time.</p>\n<p>Default is <code>datetime.timedelta(seconds=300)</code>(5 minutes).</p>\n<h3>JWT_LEEWAY</h3>\n<blockquote>\n<p>This allows you to validate an expiration time which is in the past but no\nvery far. For example, if you have a JWT payload with an expiration time set\nto 30 seconds after creation but you know that sometimes you will process it\nafter 30 seconds, you can set a leeway of 10 seconds in order to have some\nmargin.</p>\n</blockquote>\n<p>Default is <code>0</code> seconds.</p>\n<h3>JWT_LOGIN_URLS</h3>\n<p>Set the list of URLs that will be used to authenticate the user, you should take\ncare to set only required URLs because the middleware will accept\nnon-authenticated requests (no JWT) to these endpoints.</p>\n<h3>JWT_PAYLOAD_GET_USER_ID_HANDLER</h3>\n<p>If you store <code>user_id</code> differently than the default payload handler does,\nimplement this function to fetch <code>user_id</code> from the payload.</p>\n<h3>JWT_PAYLOAD_HANDLER</h3>\n<p>Specify a custom function to generate the token payload</p>\n<h3>JWT_REFRESH_EXPIRATION_DELTA</h3>\n<p>Limit on token refresh, is a <code>datetime.timedelta</code> instance. This is how much\ntime after the original token that future tokens can be refreshed from.</p>\n<p>Default is <code>datetime.timedelta(days=7)</code> (7 days).</p>\n<h3>JWT_SECRET_KEY</h3>\n<p>This is the secret key used to encrypt the JWT. Make sure this is safe and not\nshared or public.</p>\n<p>Default is your project's <code>settings.SECRET_KEY</code>.</p>\n<h3>JWT_VERIFY</h3>\n<p>If the secret is wrong, it will raise a jwt.DecodeError telling you as such. You\ncan still get at the payload by setting the <code>JWT_VERIFY</code> to <code>False</code>.</p>\n<p>Default is <code>True</code>.</p>\n<h3>JWT_VERIFY_EXPIRATION</h3>\n<p>You can turn off expiration time verification with by setting\n<code>JWT_VERIFY_EXPIRATION</code> to <code>False</code>.</p>\n<p>Default is <code>True</code>.</p>\n\n          </div>"}, "last_serial": 6022421, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "089497b919508b31ed401079047063de", "sha256": "22752eef0419693d186490f0f816f5e21849c1eacf57087cfd0869a83993637e"}, "downloads": -1, "filename": "webstack_django_jwt_auth-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "089497b919508b31ed401079047063de", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 8172, "upload_time": "2018-12-17T22:31:59", "upload_time_iso_8601": "2018-12-17T22:31:59.215220Z", "url": "https://files.pythonhosted.org/packages/68/c7/8989a8a2d4c417cb94b6a7fef943a42393f4d57594713780159d8321665b/webstack_django_jwt_auth-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "916ff712a47a4e4d069761db07d34130", "sha256": "62778e03e64e5b5318195a9706a02d726c30a01cf110b38f61f4bc5b0a18f510"}, "downloads": -1, "filename": "webstack-django-jwt-auth-0.2.0.tar.gz", "has_sig": false, "md5_digest": "916ff712a47a4e4d069761db07d34130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8794, "upload_time": "2018-12-17T22:31:55", "upload_time_iso_8601": "2018-12-17T22:31:55.887406Z", "url": "https://files.pythonhosted.org/packages/1e/81/e3d208cb39fcb0064ed4751c261f5faa9064874948fc019f50ac75630d56/webstack-django-jwt-auth-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "27a9a5a707644dc3c8fdf39ab3e40176", "sha256": "f180e7551dcfa183acd1d77ceb19d1d8d8f29a00a9ed890889c14e52793857cf"}, "downloads": -1, "filename": "webstack_django_jwt_auth-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "27a9a5a707644dc3c8fdf39ab3e40176", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9026, "upload_time": "2018-12-17T22:33:34", "upload_time_iso_8601": "2018-12-17T22:33:34.355180Z", "url": "https://files.pythonhosted.org/packages/51/37/6aab8bb93fe94738e971268c353076528f487873825b1cf75005711e7e71/webstack_django_jwt_auth-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bd9c36c89e259814380fdecf93e6ac8", "sha256": "683bac2cedfc97b643156db126f60776757da6d551fd1253972263b7804a440b"}, "downloads": -1, "filename": "webstack-django-jwt-auth-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8bd9c36c89e259814380fdecf93e6ac8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9274, "upload_time": "2018-12-17T22:33:35", "upload_time_iso_8601": "2018-12-17T22:33:35.685209Z", "url": "https://files.pythonhosted.org/packages/e1/54/4b31f83eaf65b9ec6736d29df90cb6eadcf05d83420ca2d6647f7760be34/webstack-django-jwt-auth-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "276a8d83af170e8a2c87b5bfd5988b63", "sha256": "00c86cdc7356262b2bcb696d56fe8f6ae13904119bda7e97c6fa98c36e94306f"}, "downloads": -1, "filename": "webstack_django_jwt_auth-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "276a8d83af170e8a2c87b5bfd5988b63", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9256, "upload_time": "2018-12-20T11:17:07", "upload_time_iso_8601": "2018-12-20T11:17:07.602790Z", "url": "https://files.pythonhosted.org/packages/e4/8a/9d51cbf35174ddbbcd0208e08399dcbca4979696f410c0d0c31c5d44ea60/webstack_django_jwt_auth-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "492d76d61bb417665513daf3a67df08b", "sha256": "417c1240c34d0d016b784a75ea30cdf5c7785e13eb10e0958c29a403c02c9cd5"}, "downloads": -1, "filename": "webstack-django-jwt-auth-0.4.0.tar.gz", "has_sig": false, "md5_digest": "492d76d61bb417665513daf3a67df08b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9585, "upload_time": "2018-12-20T11:17:09", "upload_time_iso_8601": "2018-12-20T11:17:09.891853Z", "url": "https://files.pythonhosted.org/packages/32/3e/818c44578cc8371cb913f909f6a77c683a05e515d05e9c0651a5d80fb742/webstack-django-jwt-auth-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "ab5a2acbca0c6638099db979b87f3451", "sha256": "3695b344febc8be33eda10c8d82cd08febacad6ffb1d547ad3dad6704f538e76"}, "downloads": -1, "filename": "webstack_django_jwt_auth-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab5a2acbca0c6638099db979b87f3451", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9253, "upload_time": "2018-12-20T17:40:26", "upload_time_iso_8601": "2018-12-20T17:40:26.440511Z", "url": "https://files.pythonhosted.org/packages/9c/ac/970a1a0d6b67e33febf8388650a11e5997c6801a9275395563d1a524bd9e/webstack_django_jwt_auth-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "273e13ea28f93d7d45f6e315278ccf17", "sha256": "a7ee708766b7ef620a789aea2652506bd20b3eae333417592032e870582f6616"}, "downloads": -1, "filename": "webstack-django-jwt-auth-0.5.0.tar.gz", "has_sig": false, "md5_digest": "273e13ea28f93d7d45f6e315278ccf17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9656, "upload_time": "2018-12-20T17:40:29", "upload_time_iso_8601": "2018-12-20T17:40:29.662259Z", "url": "https://files.pythonhosted.org/packages/f2/f5/372badb8a9ec2aae0d91ff8ae3546f5f146a6845aa5b33c16ba3b311fb66/webstack-django-jwt-auth-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "1b68bd251ae266444ddede84066238cd", "sha256": "311fcd389b05481047b2024a160c0c09b2cd7be2a387e423b6ca7270bdb7bbd7"}, "downloads": -1, "filename": "webstack_django_jwt_auth-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1b68bd251ae266444ddede84066238cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11841, "upload_time": "2019-01-10T18:39:41", "upload_time_iso_8601": "2019-01-10T18:39:41.725833Z", "url": "https://files.pythonhosted.org/packages/4b/a3/63135e5150f4b391b487a0d783e4bbdef33e4eefd7ca6b8f1d73c2416ca3/webstack_django_jwt_auth-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c112e891bf9291e2e474e5a3c30821f6", "sha256": "a9a752df18f19a16e652c6070c28e214436a0f56fef74359e7e15be046bf4afd"}, "downloads": -1, "filename": "webstack-django-jwt-auth-0.5.1.tar.gz", "has_sig": false, "md5_digest": "c112e891bf9291e2e474e5a3c30821f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12682, "upload_time": "2019-01-10T18:39:43", "upload_time_iso_8601": "2019-01-10T18:39:43.512904Z", "url": "https://files.pythonhosted.org/packages/f2/37/756d865efdd5eae007570eb41de0f488b8acf1a7e5a0d4d987a222a5af4f/webstack-django-jwt-auth-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "0e1f334184582c3792d09f97a1c569ee", "sha256": "c5d8d2eaf6ee996e11da91860c73806e5622efb47f08b1d6672b1d459fd518a2"}, "downloads": -1, "filename": "webstack_django_jwt_auth-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0e1f334184582c3792d09f97a1c569ee", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11837, "upload_time": "2019-01-24T22:34:31", "upload_time_iso_8601": "2019-01-24T22:34:31.666425Z", "url": "https://files.pythonhosted.org/packages/f9/da/840682be20347bd97b01a2670a9c57ef8db1d910feddfa5a19608b4e40ba/webstack_django_jwt_auth-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d639b7555c4666eeaf0d27e3f3af53e2", "sha256": "96d4a5a2e8422cbce53da2e093da4206e067fc553b3aa1a54ecd9df8404d4f14"}, "downloads": -1, "filename": "webstack-django-jwt-auth-0.5.2.tar.gz", "has_sig": false, "md5_digest": "d639b7555c4666eeaf0d27e3f3af53e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12676, "upload_time": "2019-01-24T22:34:33", "upload_time_iso_8601": "2019-01-24T22:34:33.889700Z", "url": "https://files.pythonhosted.org/packages/5e/11/0978515a6ea6c33ca662608605f1cbb41445646886465344e882bcbc0d4f/webstack-django-jwt-auth-0.5.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "e8e9e2f357d5abf9a19409279a3ff486", "sha256": "cf4c22a88d54f910fffc48e697155344e0ca85ef8ea985b45d2318cad8231c61"}, "downloads": -1, "filename": "webstack_django_jwt_auth-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e8e9e2f357d5abf9a19409279a3ff486", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11844, "upload_time": "2019-01-29T14:51:12", "upload_time_iso_8601": "2019-01-29T14:51:12.119112Z", "url": "https://files.pythonhosted.org/packages/39/64/3628faf1ef18d96bfb5eebfae8c1cf7d590ef1b099b6bdfbf743d3636e52/webstack_django_jwt_auth-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8726593f4593b7c8bf47790a4be1112e", "sha256": "e6cdef733e46eec355f092e57205bd172f8afe299a738dfd842a0363136777a2"}, "downloads": -1, "filename": "webstack-django-jwt-auth-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8726593f4593b7c8bf47790a4be1112e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12707, "upload_time": "2019-01-29T14:51:14", "upload_time_iso_8601": "2019-01-29T14:51:14.186780Z", "url": "https://files.pythonhosted.org/packages/09/cd/17d73a4e8363c55c922254961b01861d97c4f5e75aa2cf38c2aa52c1a693/webstack-django-jwt-auth-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d2b578b7f25b504758f688631c71d31e", "sha256": "043879adc457845319572e2425f58d619ff6708926642d258d8d11e7bfea0d9d"}, "downloads": -1, "filename": "webstack_django_jwt_auth-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d2b578b7f25b504758f688631c71d31e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11762, "upload_time": "2019-01-30T14:59:53", "upload_time_iso_8601": "2019-01-30T14:59:53.067789Z", "url": "https://files.pythonhosted.org/packages/86/be/0d25da6534b694859096ed8a7a244c29536e5864d45b15ce9361018db82b/webstack_django_jwt_auth-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2141910d1e88376261f47428d5ed7b86", "sha256": "77dda1ed7ed6ba2ea872f1d9037b5d982b7b05a742b8db301f7d1317f2a69ce5"}, "downloads": -1, "filename": "webstack-django-jwt-auth-1.1.0.tar.gz", "has_sig": false, "md5_digest": "2141910d1e88376261f47428d5ed7b86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12553, "upload_time": "2019-01-30T14:59:54", "upload_time_iso_8601": "2019-01-30T14:59:54.319831Z", "url": "https://files.pythonhosted.org/packages/59/a5/3671ef894d84ab2391b9b7279aef4c4633758cece17b747196a8de7e4e81/webstack-django-jwt-auth-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "8a9f852025b656f0fb85d46a77e57d8d", "sha256": "e1cca6ccb59fe8ecfe655dabbbeba38f7ddc1492be2ac441dad7675ac986e7b3"}, "downloads": -1, "filename": "webstack_django_jwt_auth-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8a9f852025b656f0fb85d46a77e57d8d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11787, "upload_time": "2019-03-07T16:14:14", "upload_time_iso_8601": "2019-03-07T16:14:14.586782Z", "url": "https://files.pythonhosted.org/packages/d8/c4/4006c40ee7229c0dfa79c8a5e4b6ae9f592472786b2bc01ed8a8247c2989/webstack_django_jwt_auth-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87740311f6931c8d71faa8637d1e22ac", "sha256": "1afdf5f2016b1fcedb23e2f9e9dfffded390b5989c0ddc9593f02c8123f003cc"}, "downloads": -1, "filename": "webstack-django-jwt-auth-1.1.1.tar.gz", "has_sig": false, "md5_digest": "87740311f6931c8d71faa8637d1e22ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12564, "upload_time": "2019-03-07T16:14:17", "upload_time_iso_8601": "2019-03-07T16:14:17.210795Z", "url": "https://files.pythonhosted.org/packages/81/7d/cf452c2338772b9f91fc9701107069ea4937f93fc227bcda29f2fc61182e/webstack-django-jwt-auth-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "411c8994535ff578db58444343e843c0", "sha256": "d5725aa4c9f4b5fadc8c0c45fbba22d2a5129a88889298d275974abc145ad5d7"}, "downloads": -1, "filename": "webstack_django_jwt_auth-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "411c8994535ff578db58444343e843c0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11841, "upload_time": "2019-03-07T18:29:23", "upload_time_iso_8601": "2019-03-07T18:29:23.029415Z", "url": "https://files.pythonhosted.org/packages/9f/7e/abb5920feb5cc8dc0c1445a3779cbc16c59539e1d39ec573d01e3faa2142/webstack_django_jwt_auth-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f8c4a979639d3910b05bef923ea3ebf", "sha256": "ed057ef2c541c9b95fd43dbe049495a2fa10003bf135cbf6a3ef35987ffccde6"}, "downloads": -1, "filename": "webstack-django-jwt-auth-1.1.2.tar.gz", "has_sig": false, "md5_digest": "9f8c4a979639d3910b05bef923ea3ebf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12622, "upload_time": "2019-03-07T18:29:28", "upload_time_iso_8601": "2019-03-07T18:29:28.131643Z", "url": "https://files.pythonhosted.org/packages/c3/53/72cf147ed5bcdc99f7119086fab325f81e3212a4d28ce8b803b28bd6fe30/webstack-django-jwt-auth-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "e1691c4d47c3bed973d2cbc59bede2e9", "sha256": "5a1292e36ae04b971ffe3b94df9dc093d0708dc35e105bcb687d1e2cb4c87d10"}, "downloads": -1, "filename": "webstack_django_jwt_auth-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1691c4d47c3bed973d2cbc59bede2e9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11993, "upload_time": "2019-10-24T08:31:27", "upload_time_iso_8601": "2019-10-24T08:31:27.445222Z", "url": "https://files.pythonhosted.org/packages/dc/90/686577435dd34dfba65f73a2fba0913d2ec3b571b25d260d0b1e138fde8d/webstack_django_jwt_auth-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a6d3e4be2846e0afbcaf8214ac8b4cd", "sha256": "c4526ca494e789be953da0756bf2adb0abf68a8d2ce85df53399706ad724622c"}, "downloads": -1, "filename": "webstack-django-jwt-auth-1.2.0.tar.gz", "has_sig": false, "md5_digest": "4a6d3e4be2846e0afbcaf8214ac8b4cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12897, "upload_time": "2019-10-24T08:31:29", "upload_time_iso_8601": "2019-10-24T08:31:29.101718Z", "url": "https://files.pythonhosted.org/packages/86/cc/06547af0138f2a4134c113c36005b9202362a1c1aaac1bb85d53abb6ddab/webstack-django-jwt-auth-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "292e0ee4651f1601099b8743a7017599", "sha256": "2f2a4d48712363d1ab9d6afef7dca125a76652cbda67afb9351c852cf95ee455"}, "downloads": -1, "filename": "webstack_django_jwt_auth-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "292e0ee4651f1601099b8743a7017599", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11991, "upload_time": "2019-10-24T08:35:20", "upload_time_iso_8601": "2019-10-24T08:35:20.783950Z", "url": "https://files.pythonhosted.org/packages/97/cf/de56ca9d6a7e296241f6d999a349541e194d61810839c2449197fff33f75/webstack_django_jwt_auth-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94df0f92bc634c78485287a5e6a301de", "sha256": "4caa7e34b89ca8e367d5268e0db35749e1a7431c212b7ef108536ca01969d063"}, "downloads": -1, "filename": "webstack-django-jwt-auth-1.2.1.tar.gz", "has_sig": false, "md5_digest": "94df0f92bc634c78485287a5e6a301de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12900, "upload_time": "2019-10-24T08:35:26", "upload_time_iso_8601": "2019-10-24T08:35:26.367760Z", "url": "https://files.pythonhosted.org/packages/ec/f2/d7cb2ff876e34554b8897a897179bb74ee99ca0ab52c70538c056920c50b/webstack-django-jwt-auth-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "292e0ee4651f1601099b8743a7017599", "sha256": "2f2a4d48712363d1ab9d6afef7dca125a76652cbda67afb9351c852cf95ee455"}, "downloads": -1, "filename": "webstack_django_jwt_auth-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "292e0ee4651f1601099b8743a7017599", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11991, "upload_time": "2019-10-24T08:35:20", "upload_time_iso_8601": "2019-10-24T08:35:20.783950Z", "url": "https://files.pythonhosted.org/packages/97/cf/de56ca9d6a7e296241f6d999a349541e194d61810839c2449197fff33f75/webstack_django_jwt_auth-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94df0f92bc634c78485287a5e6a301de", "sha256": "4caa7e34b89ca8e367d5268e0db35749e1a7431c212b7ef108536ca01969d063"}, "downloads": -1, "filename": "webstack-django-jwt-auth-1.2.1.tar.gz", "has_sig": false, "md5_digest": "94df0f92bc634c78485287a5e6a301de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12900, "upload_time": "2019-10-24T08:35:26", "upload_time_iso_8601": "2019-10-24T08:35:26.367760Z", "url": "https://files.pythonhosted.org/packages/ec/f2/d7cb2ff876e34554b8897a897179bb74ee99ca0ab52c70538c056920c50b/webstack-django-jwt-auth-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:42 2020"}