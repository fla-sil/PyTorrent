{"info": {"author": "Pedro Buteri Gonring", "author_email": "pedro@bigode.net", "bugtrack_url": null, "classifiers": [], "description": "|Downloads|\n\nhecho\n=====\n\nhecho is a fast and simple HTTP echo server.\n\nAn example is running on \"http://hecho.bigode.net/\".\n\nIt uses Falcon_ HTTP library and Bjoern_ WSGI server to serve thousands\nrequests per second using just one CPU Core and approximately 15MB of RAM.\n\nThe response is a \"prettified\" json containing the request.\n\nSimple request/response example::\n\n    $ curl --header \"Content-Type: application/json\" \\\n        --request POST --data '{\"user\": \"john\", \"pass\": \"1234\"}' \\\n        http://localhost:8000?p=param\n\n    {\n        \"headers\": {\n            \"ACCEPT\": \"*/*\",\n            \"CONTENT-LENGTH\": \"32\",\n            \"CONTENT-TYPE\": \"application/json\",\n            \"HOST\": \"localhost:8000\",\n            \"USER-AGENT\": \"curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.27.1 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\"\n        },\n        \"json\": {\n            \"pass\": \"1234\",\n            \"user\": \"john\"\n        },\n        \"method\": \"POST\",\n        \"origin\": \"127.0.0.1\",\n        \"params\": {\n            \"p\": \"param\"\n        },\n        \"url\": \"http://localhost:8000/?p=param\"\n    }\n\nIt supports get, post, put, patch and delete methods.\n\nThe request data must be JSON or x-www-form-urlencoded (standard simple post).\n\n\nNotes\n=====\n\n- Works on Python 2.7 and Python3.4+\n\n\nInstall\n=======\n\nInstall using pip::\n\n    pip install hecho\n\n\nUsage\n=====\n\n::\n\n    Usage: hecho [options] start|stop|restart\n\n    simple and fast http echo server\n\n    Options:\n    --version           show program's version number and exit\n    -h, --help          show this help message and exit\n    -l ADDRESS          address to listen (default: localhost)\n    -p PORT             application port (default: 8000)\n    --log-path=LOGPATH  logfile path (default: ~/.hecho/hecho.log)\n    --pid-path=PIDPATH  pidfile path (default: ~/.hecho/hecho.pid)\n    --foreground        run in foreground mode (default: disabled)\n    --disable-log       disable logging (default: disabled)\n\n\nRunning\n=======\n\nStarting the server::\n\n    $ hecho start\n\nVerify log, process and tcp listen address::\n\n    $ tail ~/.hecho/hecho.log\n    [28/Dec/2018 16:23:10] Starting server...\n\n    $  ps aux | grep hecho\n    myuser  23648  0.0  1.5 214444 15720 ?  S  15:54  0:00 python hecho.py start\n\n    $ netstat -nlp | grep python\n    tcp  0  0 127.0.0.1:8000  0.0.0.0:*  LISTEN  23648/python\n\nSimple test::\n\n    $ curl localhost:8000\n\n    {\n        \"headers\": {\n            \"ACCEPT\": \"*/*\",\n            \"HOST\": \"localhost:8000\",\n            \"USER-AGENT\": \"curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.27.1 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\"\n        },\n        \"method\": \"GET\",\n        \"origin\": \"127.0.0.1\",\n        \"params\": {},\n        \"url\": \"http://localhost:8000/\"\n    }\n\nVerify log::\n\n    $ tail ~/.hecho/hecho.log\n    [28/Dec/2018 16:23:10] Starting server...\n    [28/Dec/2018 16:24:55] 127.0.0.1 GET http://localhost:8000/ 200 313 curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.27.1 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\n\nStopping the server::\n\n    $ hecho stop\n\n\n.. _Falcon: https://github.com/falconry/falcon\n.. _Bjoern: https://github.com/jonashaag/bjoern\n\n\n.. |Downloads| image:: https://pepy.tech/badge/hecho", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pdrb/hecho", "keywords": "fast http echo server", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hecho", "package_url": "https://pypi.org/project/hecho/", "platform": "", "project_url": "https://pypi.org/project/hecho/", "project_urls": {"Homepage": "https://github.com/pdrb/hecho"}, "release_url": "https://pypi.org/project/hecho/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Simple fast HTTP echo server", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5da758dd734b21304b14e4f1464c72b6c6c9e83f/68747470733a2f2f706570792e746563682f62616467652f686563686f\"></p>\n<div id=\"hecho\">\n<h2>hecho</h2>\n<p>hecho is a fast and simple HTTP echo server.</p>\n<p>An example is running on \u201c<a href=\"http://hecho.bigode.net/\" rel=\"nofollow\">http://hecho.bigode.net/</a>\u201d.</p>\n<p>It uses <a href=\"https://github.com/falconry/falcon\" rel=\"nofollow\">Falcon</a> HTTP library and <a href=\"https://github.com/jonashaag/bjoern\" rel=\"nofollow\">Bjoern</a> WSGI server to serve thousands\nrequests per second using just one CPU Core and approximately 15MB of RAM.</p>\n<p>The response is a \u201cprettified\u201d json containing the request.</p>\n<p>Simple request/response example:</p>\n<pre>$ curl --header \"Content-Type: application/json\" \\\n    --request POST --data '{\"user\": \"john\", \"pass\": \"1234\"}' \\\n    http://localhost:8000?p=param\n\n{\n    \"headers\": {\n        \"ACCEPT\": \"*/*\",\n        \"CONTENT-LENGTH\": \"32\",\n        \"CONTENT-TYPE\": \"application/json\",\n        \"HOST\": \"localhost:8000\",\n        \"USER-AGENT\": \"curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.27.1 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\"\n    },\n    \"json\": {\n        \"pass\": \"1234\",\n        \"user\": \"john\"\n    },\n    \"method\": \"POST\",\n    \"origin\": \"127.0.0.1\",\n    \"params\": {\n        \"p\": \"param\"\n    },\n    \"url\": \"http://localhost:8000/?p=param\"\n}\n</pre>\n<p>It supports get, post, put, patch and delete methods.</p>\n<p>The request data must be JSON or x-www-form-urlencoded (standard simple post).</p>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<ul>\n<li>Works on Python 2.7 and Python3.4+</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Install using pip:</p>\n<pre>pip install hecho\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage: hecho [options] start|stop|restart\n\nsimple and fast http echo server\n\nOptions:\n--version           show program's version number and exit\n-h, --help          show this help message and exit\n-l ADDRESS          address to listen (default: localhost)\n-p PORT             application port (default: 8000)\n--log-path=LOGPATH  logfile path (default: ~/.hecho/hecho.log)\n--pid-path=PIDPATH  pidfile path (default: ~/.hecho/hecho.pid)\n--foreground        run in foreground mode (default: disabled)\n--disable-log       disable logging (default: disabled)\n</pre>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>Starting the server:</p>\n<pre>$ hecho start\n</pre>\n<p>Verify log, process and tcp listen address:</p>\n<pre>$ tail ~/.hecho/hecho.log\n[28/Dec/2018 16:23:10] Starting server...\n\n$  ps aux | grep hecho\nmyuser  23648  0.0  1.5 214444 15720 ?  S  15:54  0:00 python hecho.py start\n\n$ netstat -nlp | grep python\ntcp  0  0 127.0.0.1:8000  0.0.0.0:*  LISTEN  23648/python\n</pre>\n<p>Simple test:</p>\n<pre>$ curl localhost:8000\n\n{\n    \"headers\": {\n        \"ACCEPT\": \"*/*\",\n        \"HOST\": \"localhost:8000\",\n        \"USER-AGENT\": \"curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.27.1 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\"\n    },\n    \"method\": \"GET\",\n    \"origin\": \"127.0.0.1\",\n    \"params\": {},\n    \"url\": \"http://localhost:8000/\"\n}\n</pre>\n<p>Verify log:</p>\n<pre>$ tail ~/.hecho/hecho.log\n[28/Dec/2018 16:23:10] Starting server...\n[28/Dec/2018 16:24:55] 127.0.0.1 GET http://localhost:8000/ 200 313 curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.27.1 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\n</pre>\n<p>Stopping the server:</p>\n<pre>$ hecho stop\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5898807, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ffb9dd5eaddf73c31f7f1bf1cdfc644e", "sha256": "5b1cc43700b9b214f66e8bbf8108d58eef1c6e06607525b8c096515b75781138"}, "downloads": -1, "filename": "hecho-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ffb9dd5eaddf73c31f7f1bf1cdfc644e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6597, "upload_time": "2018-12-28T18:50:00", "upload_time_iso_8601": "2018-12-28T18:50:00.895053Z", "url": "https://files.pythonhosted.org/packages/20/80/a0dfdd151748f6865ae3f8e63c3b00afce8988f75ecac1870d52b8a980de/hecho-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6064300f36fe109e2b7e958e9faac1a7", "sha256": "8af007dead072ce58ff8cd824bfca8af6d3f40d8506abf345231134c0bb25299"}, "downloads": -1, "filename": "hecho-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6064300f36fe109e2b7e958e9faac1a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6882, "upload_time": "2018-12-28T18:54:18", "upload_time_iso_8601": "2018-12-28T18:54:18.697561Z", "url": "https://files.pythonhosted.org/packages/be/1a/da2031dca8abd3b2d40ecbd7f7e08f22b8ab224d6b34308f518b17e0f4d8/hecho-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "af59c9051727ffc84ef6bd618345950b", "sha256": "dcd4734993f2820bbb20694a7230245696f17bd5ff0d8d1af3611b0487d84d26"}, "downloads": -1, "filename": "hecho-0.1.2.tar.gz", "has_sig": false, "md5_digest": "af59c9051727ffc84ef6bd618345950b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6655, "upload_time": "2018-12-28T19:01:34", "upload_time_iso_8601": "2018-12-28T19:01:34.608764Z", "url": "https://files.pythonhosted.org/packages/06/72/05f57885efc24b6de497ee0fa7bca73f797fab360dcc3a90f271a6e362b4/hecho-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fe58ca2555229a58d05a2487d69ad7da", "sha256": "e6bbd378b1d69f5c809c686bb3c9b611d55cdababdeba3ddc54a43af2604fdc2"}, "downloads": -1, "filename": "hecho-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fe58ca2555229a58d05a2487d69ad7da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6949, "upload_time": "2018-12-28T19:10:26", "upload_time_iso_8601": "2018-12-28T19:10:26.298412Z", "url": "https://files.pythonhosted.org/packages/e5/32/0f820e0e0418c912d59f3c8e4240cfbd5b142e98050a8e08c7b13d9e5da6/hecho-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "6f9c869fa57b7420ecbd0e370a70348a", "sha256": "5b4257a039117b8d55bec18ccef4a9ee57ff4373d7c6e53468d910732ab2728c"}, "downloads": -1, "filename": "hecho-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6f9c869fa57b7420ecbd0e370a70348a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7117, "upload_time": "2019-09-28T03:41:14", "upload_time_iso_8601": "2019-09-28T03:41:14.697211Z", "url": "https://files.pythonhosted.org/packages/d7/bc/e547fbcb09f4d433ec5d4b1e4a0b68c8114c28d9597eadbbb95460846c6a/hecho-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f9c869fa57b7420ecbd0e370a70348a", "sha256": "5b4257a039117b8d55bec18ccef4a9ee57ff4373d7c6e53468d910732ab2728c"}, "downloads": -1, "filename": "hecho-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6f9c869fa57b7420ecbd0e370a70348a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7117, "upload_time": "2019-09-28T03:41:14", "upload_time_iso_8601": "2019-09-28T03:41:14.697211Z", "url": "https://files.pythonhosted.org/packages/d7/bc/e547fbcb09f4d433ec5d4b1e4a0b68c8114c28d9597eadbbb95460846c6a/hecho-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:53 2020"}