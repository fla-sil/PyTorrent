{"info": {"author": "Microsoft Corporation", "author_email": "azpysdkhelp@microsoft.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Azure Text Analytics client library for Python\nText Analytics is a cloud-based service that provides advanced natural language processing over raw text, and includes six main functions:\n\n* Sentiment Analysis\n* Named Entity Recognition\n* Linked Entity Recognition\n* Language Detection\n* Key Phrase Extraction\n\n[Source code][source_code] | [Package (PyPI)][TA_pypi] | [API reference documentation][TA_ref_docs]| [Product documentation][TA_product_documentation] | [Samples][TA_samples]\n\n## Getting started\n\n### Prerequisites\n* Python 2.7, or 3.5 or later is required to use this package.\n* You must have an [Azure subscription][azure_subscription] and a\n[Cognitive Services or Text Analytics resource][TA_or_CS_resource] to use this package.\n\n### Install the package\nInstall the Azure Text Analytics client library for Python with [pip][pip]:\n\n```bash\npip install azure-ai-textanalytics --pre\n```\n\n### Authenticate the client\n#### Create a Cognitive Services or Text Analytics resource\nText Analytics supports both [multi-service and single-service access][multi_and_single_service].\nCreate a Cognitive Services resource if you plan to access multiple cognitive services under a single endpoint/key. For Text Analytics access only, create a Text Analytics resource.\n\nYou can create the resource using\n\n**Option 1:** [Azure Portal][azure_portal_create_TA_resource]\n\n**Option 2:** [Azure CLI][azure_cli_create_TA_resource].\nBelow is an example of how you can create a Text Analytics resource using the CLI:\n\n```bash\n# Create a new resource group to hold the text analytics resource -\n# if using an existing resource group, skip this step\naz group create --name my-resource-group --location westus2\n```\n\n```bash\n# Create text analytics\naz cognitiveservices account create \\\n    --name text-analytics-resource \\\n    --resource-group my-resource-group \\\n    --kind TextAnalytics \\\n    --sku F0 \\\n    --location westus2 \\\n    --yes\n```\n\nInteraction with this service begins with an instance of a [client](#client \"ta-client\").\nTo create a client object, you will need the cognitive services or text analytics `endpoint` to\nyour resource and a `credential` that allows you access:\n\n```python\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\ntext_analytics_client  = TextAnalyticsClient(endpoint=\"https://<region>.api.cognitive.microsoft.com/\", credential=credential)\n```\n\nNote that if you create a [custom subdomain][cognitive_custom_subdomain]\nname for your resource the endpoint may look different than in the above code snippet.\nFor example, `https://<my-custom-subdomain>.cognitiveservices.azure.com/`.\n\n#### Looking up the endpoint\nYou can find the endpoint for your text analytics resource using the\n[Azure Portal][azure_portal_get_endpoint]\nor [Azure CLI][azure_cli_endpoint_lookup]:\n\n```bash\n# Get the endpoint for the text analytics resource\naz cognitiveservices account show --name \"resource-name\" --resource-group \"resource-group-name\" --query \"endpoint\"\n```\n\n#### Types of credentials\nThe `credential` parameter may be provided as a `AzureKeyCredential` from azure.core.credentials or as a token from Azure Active Directory.\nSee the full details regarding [authentication][cognitive_authentication] of\ncognitive services.\n\n1. To use an [API key][cognitive_authentication_api_key],\n   pass the key as a string into an instance of `AzureKeyCredential(\"<api_key>\")`.\n   The API key can be found in the Azure Portal or by running the following Azure CLI command:\n\n    ```az cognitiveservices account keys list --name \"resource-name\" --resource-group \"resource-group-name\"```\n\n    Use the key as the credential parameter to authenticate the client:\n    ```python\n    from azure.core.credentials import AzureKeyCredential\n    from azure.ai.textanalytics import TextAnalyticsClient\n\n    credential = AzureKeyCredential(\"<api_key>\")\n    text = TextAnalyticsClient(endpoint=\"https://<region>.api.cognitive.microsoft.com/\", credential=credential)\n    ```\n\n2. To use an [Azure Active Directory (AAD) token credential][cognitive_authentication_aad],\n   provide an instance of the desired credential type obtained from the\n   [azure-identity][azure_identity_credentials] library.\n   Note that regional endpoints do not support AAD authentication. Create a [custom subdomain][custom_subdomain]\n   name for your resource in order to use this type of authentication.\n\n   Authentication with AAD requires some initial setup:\n   * [Install azure-identity][install_azure_identity]\n   * [Register a new AAD application][register_aad_app]\n   * [Grant access][grant_role_access] to Text Analytics by assigning the `\"Cognitive Services User\"` role to your service principal.\n\n   After setup, you can choose which type of [credential][azure_identity_credentials] from azure.identity to use.\n   As an example, [DefaultAzureCredential][default_azure_credential]\n   can be used to authenticate the client:\n\n   Set the values of the client ID, tenant ID, and client secret of the AAD application as environment variables:\n   AZURE_CLIENT_ID, AZURE_TENANT_ID, AZURE_CLIENT_SECRET\n\n   Use the returned token credential to authenticate the client:\n    ```python\n    from azure.identity import DefaultAzureCredential\n    from azure.ai.textanalytics import TextAnalyticsClient\n    token_credential = DefaultAzureCredential()\n\n    text_analytics_client = TextAnalyticsClient(\n        endpoint=\"https://<my-custom-subdomain>.cognitiveservices.azure.com/\",\n        credential=token_credential\n    )\n    ```\n\n## Key concepts\n\n### Client\nThe Text Analytics client library provides a [TextAnalyticsClient][text_analytics_client] to do analysis on [batches of documents](#Examples \"examples\").\nIt provides both synchronous and asynchronous operations to access a specific use of Text Analytics, such as language detection or key phrase extraction.\n\n### Input\nA **document** is a single unit to be analyzed by the predictive models in the Text Analytics service.\nThe input for each operation is passed as a **list** of documents.\n\nEach document can be passed as a string in the list, e.g.\n```python\ndocuments = [\"I hated the movie. It was so slow!\", \"The movie made it into my top ten favorites.\", \"What a great movie!\"]\n```\n\nor, if you wish to pass in a per-item document `id` or `language`/`country_hint`, they can be passed as a list of\n[DetectLanguageInput][detect_language_input] or\n[TextDocumentInput][text_document_input]\nor a dict-like representation of the object:\n\n```python\ndocuments = [\n    {\"id\": \"1\", \"language\": \"en\", \"text\": \"I hated the movie. It was so slow!\"},\n    {\"id\": \"2\", \"language\": \"en\", \"text\": \"The movie made it into my top ten favorites.\"},\n    {\"id\": \"3\", \"language\": \"en\", \"text\": \"What a great movie!\"}\n]\n```\n\nSee [service limitations][service_limits] for the input, including document length limits, maximum batch size, and supported text encoding.\n\n### Return Value\nThe return value for a single document can be a result or error object.\nA heterogeneous list containing a collection of result and error objects is returned from each operation.\nThese results/errors are index-matched with the order of the provided documents.\n\nA **result**, such as [AnalyzeSentimentResult][analyze_sentiment_result],\nis the result of a Text Analytics operation and contains a prediction or predictions about a document input.\n\nThe **error** object, [DocumentError][document_error], indicates that the service had trouble processing the document and contains\nthe reason it was unsuccessful.\n\n### Document Error Handling\nYou can filter for a result or error object in the list by using the `is_error` attribute. For a result object this is always `False` and for a\n[DocumentError][document_error] this is `True`.\n\nFor example, to filter out all DocumentErrors you might use list comprehension:\n```python\nresponse = text_analytics_client.analyze_sentiment(documents)\nsuccessful_responses = [doc for doc in response if not doc.is_error]\n```\n\n\n## Examples\nThe following section provides several code snippets covering some of the most common Text Analytics tasks, including:\n\n* [Analyze Sentiment](#analyze-sentiment \"Analyze sentiment\")\n* [Recognize Entities](#recognize-entities \"Recognize entities\")\n* [Recognize Linked Entities](#recognize-linked-entities \"Recognize linked entities\")\n* [Extract Key Phrases](#extract-key-phrases \"Extract key phrases\")\n* [Detect Language](#detect-language \"Detect language\")\n\n### Analyze sentiment\n[analyze_sentiment][analyze_sentiment] looks at its input text and determines whether its sentiment is positive, negative, neutral or mixed. It's response includes per-sentence sentiment analysis and confidence scores.\n\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\ntext_analytics_client = TextAnalyticsClient(endpoint, AzureKeyCredential(key))\n\ndocuments = [\n    \"I did not like the restaurant. The food was too spicy.\",\n    \"The restaurant was decorated beautifully. The atmosphere was unlike any other restaurant I've been to.\",\n    \"The food was yummy. :)\"\n]\n\nresponse = text_analytics_client.analyze_sentiment(documents, language=\"en\")\nresult = [doc for doc in response if not doc.is_error]\n\nfor doc in result:\n    print(\"Overall sentiment: {}\".format(doc.sentiment))\n    print(\"Scores: positive={}; neutral={}; negative={} \\n\".format(\n        doc.confidence_scores.positive,\n        doc.confidence_scores.neutral,\n        doc.confidence_scores.negative,\n    ))\n```\n\nThe returned response is a heterogeneous list of result and error objects: list[[AnalyzeSentimentResult][analyze_sentiment_result], [DocumentError][document_error]]\n\nPlease refer to the service documentation for a conceptual discussion of [sentiment analysis][sentiment_analysis].\n\n### Recognize entities\n[recognize_entities][recognize_entities] recognizes and categories entities in its input text as people, places, organizations, date/time, quantities, percentages, currencies, and more.\n\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\ntext_analytics_client = TextAnalyticsClient(endpoint, AzureKeyCredential(key))\n\ndocuments = [\n    \"Microsoft was founded by Bill Gates and Paul Allen.\",\n    \"Redmond is a city in King County, Washington, United States, located 15 miles east of Seattle.\",\n    \"Jeff bought three dozen eggs because there was a 50% discount.\"\n]\n\nresponse = text_analytics_client.recognize_entities(documents, language=\"en\")\nresult = [doc for doc in response if not doc.is_error]\n\nfor doc in result:\n    for entity in doc.entities:\n        print(\"Entity: \\t\", entity.text, \"\\tCategory: \\t\", entity.category,\n              \"\\tConfidence Score: \\t\", entity.confidence_score)\n```\n\nThe returned response is a heterogeneous list of result and error objects: list[[RecognizeEntitiesResult][recognize_entities_result], [DocumentError][document_error]]\n\nPlease refer to the service documentation for a conceptual discussion of [named entity recognition][named_entity_recognition]\nand [supported types][named_entity_categories].\n\n### Recognize linked entities\n[recognize_linked_entities][recognize_linked_entities] recognizes and disambiguates the identity of each entity found in its input text (for example,\ndetermining whether an occurrence of the word Mars refers to the planet, or to the\nRoman god of war). Recognized entities are associated with URLs to a well-known knowledge base, like Wikipedia.\n\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\ntext_analytics_client = TextAnalyticsClient(endpoint, AzureKeyCredential(key))\n\ndocuments = [\n    \"Microsoft was founded by Bill Gates and Paul Allen.\",\n    \"Easter Island, a Chilean territory, is a remote volcanic island in Polynesia.\"\n]\n\nresponse = text_analytics_client.recognize_linked_entities(documents, language=\"en\")\nresult = [doc for doc in response if not doc.is_error]\n\nfor doc in result:\n    for entity in doc.entities:\n        print(\"Entity: {}\".format(entity.name))\n        print(\"URL: {}\".format(entity.url))\n        print(\"Data Source: {}\".format(entity.data_source))\n        for match in entity.matches:\n            print(\"Confidence Score: {}\".format(match.confidence_score))\n            print(\"Entity as appears in request: {}\".format(match.text))\n```\n\nThe returned response is a heterogeneous list of result and error objects: list[[RecognizeLinkedEntitiesResult][recognize_linked_entities_result], [DocumentError][document_error]]\n\nPlease refer to the service documentation for a conceptual discussion of [entity linking][linked_entity_recognition]\nand [supported types][linked_entities_categories].\n\n### Extract key phrases\n[extract_key_phrases][extract_key_phrases] determines the main talking points in its input text. For example, for the input text \"The food was delicious and there were wonderful staff\", the API returns: \"food\" and \"wonderful staff\".\n\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\ntext_analytics_client = TextAnalyticsClient(endpoint, AzureKeyCredential(key))\n\ndocuments = [\n    \"Redmond is a city in King County, Washington, United States, located 15 miles east of Seattle.\",\n    \"I need to take my cat to the veterinarian.\",\n    \"I will travel to South America in the summer.\"\n]\n\nresponse = text_analytics_client.extract_key_phrases(documents, language=\"en\")\nresult = [doc for doc in response if not doc.is_error]\n\nfor doc in result:\n    print(doc.key_phrases)\n```\n\nThe returned response is a heterogeneous list of result and error objects: list[[ExtractKeyPhrasesResult][extract_key_phrases_result], [DocumentError][document_error]]\n\nPlease refer to the service documentation for a conceptual discussion of [key phrase extraction][key_phrase_extraction].\n\n### Detect language\n[detect_language][detect_language] determines the language of its input text, including the confidence score of the predicted language.\n\n```python\nfrom azure.core.credentials import AzureKeyCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\ntext_analytics_client = TextAnalyticsClient(endpoint, AzureKeyCredential(key))\n\ndocuments = [\n    \"This is written in English.\",\n    \"Il documento scritto in italiano.\",\n    \"Dies ist in deutsche Sprache verfasst.\"\n]\n\nresponse = text_analytics_client.detect_language(documents)\nresult = [doc for doc in response if not doc.is_error]\n\nfor doc in result:\n    print(\"Language detected: {}\".format(doc.primary_language.name))\n    print(\"ISO6391 name: {}\".format(doc.primary_language.iso6391_name))\n    print(\"Confidence score: {}\\n\".format(doc.primary_language.score))\n```\n\nThe returned response is a heterogeneous list of result and error objects: list[[DetectLanguageResult][detect_language_result], [DocumentError][document_error]]\n\nPlease refer to the service documentation for a conceptual discussion of [language detection][language_detection]\nand [language and regional support][language_and_regional_support].\n\n## Optional Configuration\n\nOptional keyword arguments can be passed in at the client and per-operation level.\nThe azure-core [reference documentation][azure_core_ref_docs]\ndescribes available configurations for retries, logging, transport protocols, and more.\n\n## Troubleshooting\n\n### General\nThe Text Analytics client will raise exceptions defined in [Azure Core][azure_core].\n\n### Logging\nThis library uses the standard\n[logging][python_logging] library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.\n\nDetailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the `logging_enable` keyword argument:\n```python\nimport sys\nimport logging\nfrom azure.identity import DefaultAzureCredential\nfrom azure.ai.textanalytics import TextAnalyticsClient\n\n# Create a logger for the 'azure' SDK\nlogger = logging.getLogger('azure')\nlogger.setLevel(logging.DEBUG)\n\n# Configure a console output\nhandler = logging.StreamHandler(stream=sys.stdout)\nlogger.addHandler(handler)\n\nendpoint = \"https://<my-custom-subdomain>.cognitiveservices.azure.com/\"\ncredential = DefaultAzureCredential()\n\n# This client will log detailed information about its HTTP sessions, at DEBUG level\ntext_analytics_client = TextAnalyticsClient(endpoint, credential, logging_enable=True)\n```\n\nSimilarly, `logging_enable` can enable detailed logging for a single operation,\neven when it isn't enabled for the client:\n```python\nresult = text_analytics_client.analyze_sentiment(documents, logging_enable=True)\n```\n\n## Next steps\n\n### More sample code\n\nThese code samples show common scenario operations with the Azure Text Analytics client library.\nThe async versions of the samples (the python sample files appended with `_async`) show asynchronous operations\nwith Text Analytics and require Python 3.5 or later.\n\nAuthenticate the client with a Cognitive Services/Text Analytics API key or a token credential from [azure-identity][azure_identity]:\n* [sample_authentication.py][sample_authentication] ([async version][sample_authentication_async])\n\nIn a batch of documents:\n* Detect language: [sample_detect_language.py][detect_language_sample] ([async version][detect_language_sample_async])\n* Recognize entities: [sample_recognize_entities.py][recognize_entities_sample] ([async version][recognize_entities_sample_async])\n* Recognize linked entities: [sample_recognize_linked_entities.py][recognize_linked_entities_sample] ([async version][recognize_linked_entities_sample_async])\n* Extract key phrases: [sample_extract_key_phrases.py][extract_key_phrases_sample] ([async version][extract_key_phrases_sample_async])\n* Analyze sentiment: [sample_analyze_sentiment.py][analyze_sentiment_sample] ([async version][analyze_sentiment_sample_async])\n\n### Additional documentation\nFor more extensive documentation on Azure Cognitive Services Text Analytics, see the [Text Analytics documentation][TA_product_documentation] on docs.microsoft.com.\n\n## Contributing\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit [cla.microsoft.com][cla].\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct][code_of_conduct]. For more information see the [Code of Conduct FAQ][coc_faq] or contact [opencode@microsoft.com][coc_contact] with any additional questions or comments.\n\n<!-- LINKS -->\n\n[source_code]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/azure/ai/textanalytics\n[TA_pypi]: https://pypi.org/project/azure-ai-textanalytics/\n[TA_ref_docs]: https://aka.ms/azsdk-python-textanalytics-ref-docs\n[TA_samples]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples\n[TA_product_documentation]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview\n[azure_subscription]: https://azure.microsoft.com/free/\n[TA_or_CS_resource]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows\n[pip]: https://pypi.org/project/pip/\n\n[azure_portal_create_TA_resource]: https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesTextAnalytics\n[azure_cli_create_TA_resource]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows\n[multi_and_single_service]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows\n[azure_cli_endpoint_lookup]: https://docs.microsoft.com/cli/azure/cognitiveservices/account?view=azure-cli-latest#az-cognitiveservices-account-show\n[azure_portal_get_endpoint]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows#get-the-keys-for-your-resource\n[cognitive_authentication]: https://docs.microsoft.com/azure/cognitive-services/authentication\n[cognitive_authentication_api_key]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows#get-the-keys-for-your-resource\n[install_azure_identity]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity#install-the-package\n[register_aad_app]: https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\n[grant_role_access]: https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\n[cognitive_custom_subdomain]: https://docs.microsoft.com/azure/cognitive-services/cognitive-services-custom-subdomains\n[custom_subdomain]: https://docs.microsoft.com/azure/cognitive-services/authentication#create-a-resource-with-a-custom-subdomain\n[cognitive_authentication_aad]: https://docs.microsoft.com/azure/cognitive-services/authentication#authenticate-with-azure-active-directory\n[azure_identity_credentials]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity#credentials\n[default_azure_credential]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity#defaultazurecredential\n[service_limits]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\n\n[document_error]: https://aka.ms/azsdk-python-textanalytics-documenterror\n[detect_language_result]: https://aka.ms/azsdk-python-textanalytics-detectlanguageresult\n[recognize_entities_result]: https://aka.ms/azsdk-python-textanalytics-recognizeentitiesresult\n[recognize_linked_entities_result]: https://aka.ms/azsdk-python-textanalytics-recognizelinkedentitiesresult\n[analyze_sentiment_result]: https://aka.ms/azsdk-python-textanalytics-analyzesentimentresult\n[extract_key_phrases_result]: https://aka.ms/azsdk-python-textanalytics-extractkeyphrasesresult\n[text_document_input]: https://aka.ms/azsdk-python-textanalytics-textdocumentinput\n[detect_language_input]: https://aka.ms/azsdk-python-textanalytics-detectlanguageinput\n[text_analytics_client]: https://aka.ms/azsdk-python-textanalytics-textanalyticsclient\n\n[analyze_sentiment]: https://aka.ms/azsdk-python-textanalytics-analyzesentiment\n[recognize_entities]: https://aka.ms/azsdk-python-textanalytics-recognizeentities\n[recognize_linked_entities]: https://aka.ms/azsdk-python-textanalytics-recognizelinkedentities\n[extract_key_phrases]: https://aka.ms/azsdk-python-textanalytics-extractkeyphrases\n[detect_language]: https://aka.ms/azsdk-python-textanalytics-detectlanguage\n\n[language_detection]: https://docs.microsoft.com/azure/cognitive-services/Text-Analytics/how-tos/text-analytics-how-to-language-detection\n[language_and_regional_support]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support\n[sentiment_analysis]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-sentiment-analysis\n[key_phrase_extraction]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-keyword-extraction\n[linked_entities_categories]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/named-entity-types?tabs=general\n[linked_entity_recognition]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-entity-linking\n[named_entity_recognition]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-entity-linking\n[named_entity_categories]: https://docs.microsoft.com/azure/cognitive-services/text-analytics/named-entity-types?tabs=general\n\n[azure_core_ref_docs]: https://aka.ms/azsdk-python-core-policies\n[azure_core]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/core/azure-core/README.md\n[azure_identity]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity\n[python_logging]: https://docs.python.org/3.5/library/logging.html\n[sample_authentication]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_authentication.py\n[sample_authentication_async]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_authentication_async.py\n[detect_language_sample]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_detect_language.py\n[detect_language_sample_async]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_detect_language_async.py\n[analyze_sentiment_sample]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_analyze_sentiment.py\n[analyze_sentiment_sample_async]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_analyze_sentiment_async.py\n[extract_key_phrases_sample]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_extract_key_phrases.py\n[extract_key_phrases_sample_async]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_extract_key_phrases_async.py\n[recognize_entities_sample]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_recognize_entities.py\n[recognize_entities_sample_async]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_recognize_entities_async.py\n[recognize_linked_entities_sample]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_recognize_linked_entities.py\n[recognize_linked_entities_sample_async]: https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_recognize_linked_entities_async.py\n\n[cla]: https://cla.microsoft.com\n[code_of_conduct]: https://opensource.microsoft.com/codeofconduct/\n[coc_faq]: https://opensource.microsoft.com/codeofconduct/faq/\n[coc_contact]: mailto:opencode@microsoft.com\n\n\n# Change Log azure-ai-textanalytics\n\n## 1.0.0b4 (2020-04-07)\n\n**Breaking changes**\n- Removed the `recognize_pii_entities` endpoint and all related models (`RecognizePiiEntitiesResult` and `PiiEntity`)\nfrom this library.\n- Removed `TextAnalyticsApiKeyCredential` and now using `AzureKeyCredential` from azure.core.credentials as key credential\n- `score` attribute has been renamed to `confidence_score` for the `CategorizedEntity`, `LinkedEntityMatch`, and\n`PiiEntity` models\n- All input parameters `inputs` have been renamed to `documents`\n\n## 1.0.0b3 (2020-03-10)\n\n**Breaking changes**\n- `SentimentScorePerLabel` has been renamed to `SentimentConfidenceScores`\n- `AnalyzeSentimentResult` and `SentenceSentiment` attribute `sentiment_scores` has been renamed to `confidence_scores`\n- `TextDocumentStatistics` attribute `character_count` has been renamed to `grapheme_count`\n- `LinkedEntity` attribute `id` has been renamed to `data_source_entity_id`\n- Parameters `country_hint` and `language` are now passed as keyword arguments\n- The keyword argument `response_hook` has been renamed to `raw_response_hook`\n- `length` and `offset` attributes have been renamed to `grapheme_length` and `grapheme_offset` for the `SentenceSentiment`,\n`CategorizedEntity`, `PiiEntity`, and `LinkedEntityMatch` models\n\n**New features**\n- Pass `country_hint=\"none\"` to not use the default country hint of `\"US\"`.\n\n**Dependency updates**\n- Adopted [azure-core](https://pypi.org/project/azure-core/) version 1.3.0 or greater\n\n## 1.0.0b2 (2020-02-11)\n\n**Breaking changes**\n\n- The single text, module-level operations `single_detect_language()`, `single_recognize_entities()`, `single_extract_key_phrases()`, `single_analyze_sentiment()`, `single_recognize_pii_entities()`, and `single_recognize_linked_entities()`\nhave been removed from the client library. Use the batching methods for optimal performance in production environments.\n- To use an API key as the credential for authenticating the client, a new credential class `TextAnalyticsApiKeyCredential(\"<api_key>\")` must be passed in for the `credential` parameter.\nPassing the API key as a string is no longer supported.\n- `detect_languages()` is renamed to `detect_language()`.\n- The `TextAnalyticsError` model has been simplified to an object with only attributes `code`, `message`, and `target`.\n- `NamedEntity` has been renamed to `CategorizedEntity` and its attributes `type` to `category` and `subtype` to `subcategory`.\n- `RecognizePiiEntitiesResult` now contains on the object a list of `PiiEntity` instead of `NamedEntity`.\n- `AnalyzeSentimentResult` attribute `document_scores` has been renamed to `sentiment_scores`.\n- `SentenceSentiment` attribute `sentence_scores` has been renamed to `sentiment_scores`.\n- `SentimentConfidenceScorePerLabel` has been renamed to `SentimentScorePerLabel`.\n- `DetectLanguageResult` no longer has attribute `detected_languages`. Use `primary_language` to access the detected language in text.\n\n**New features**\n\n- Credential class `TextAnalyticsApiKeyCredential` provides an `update_key()` method which allows you to update the API key for long-lived clients.\n\n**Fixes and improvements**\n\n- `__repr__` has been added to all of the response objects.\n- If you try to access a result attribute on a `DocumentError` object, an `AttributeError` is raised with a custom error message that provides the document ID and error of the invalid document.\n\n\n## 1.0.0b1 (2020-01-09)\n\nVersion (1.0.0b1) is the first preview of our efforts to create a user-friendly and Pythonic client library for Azure Text Analytics. For more information about this, and preview releases of other Azure SDK libraries, please visit\nhttps://azure.github.io/azure-sdk/releases/latest/python.html.\n\n**Breaking changes: New API design**\n\n- New namespace/package name:\n  - The namespace/package name for Azure Text Analytics client library has changed from `azure.cognitiveservices.language.textanalytics` to `azure.ai.textanalytics`\n\n- New operations and naming:\n  - `detect_language` is renamed to `detect_languages`\n  - `entities` is renamed to `recognize_entities`\n  - `key_phrases` is renamed to `extract_key_phrases`\n  - `sentiment` is renamed to `analyze_sentiment`\n  - New operation `recognize_pii_entities` finds personally identifiable information entities in text\n  - New operation `recognize_linked_entities` provides links from a well-known knowledge base for each recognized entity\n  - New module-level operations `single_detect_language`, `single_recognize_entities`, `single_extract_key_phrases`, `single_analyze_sentiment`, `single_recognize_pii_entities`, and `single_recognize_linked_entities` perform\n  function on a single string instead of a batch of text documents and can be imported from the `azure.ai.textanalytics` namespace.\n  - New client and module-level async APIs added to subnamespace `azure.ai.textanalytics.aio`.\n  - `MultiLanguageInput` has been renamed to `TextDocumentInput`\n  - `LanguageInput` has been renamed to `DetectLanguageInput`\n  - `DocumentLanguage` has been renamed to `DetectLanguageResult`\n  - `DocumentEntities` has been renamed to `RecognizeEntitiesResult`\n  - `DocumentLinkedEntities` has been renamed to `RecognizeLinkedEntitiesResult`\n  - `DocumentKeyPhrases` has been renamed to `ExtractKeyPhrasesResult`\n  - `DocumentSentiment` has been renamed to `AnalyzeSentimentResult`\n  - `DocumentStatistics` has been renamed to `TextDocumentStatistics`\n  - `RequestStatistics` has been renamed to `TextDocumentBatchStatistics`\n  - `Entity` has been renamed to `NamedEntity`\n  - `Match` has been renamed to `LinkedEntityMatch`\n  - The batching methods' `documents` parameter has been renamed `inputs`\n\n- New input types:\n  - `detect_languages` can take as input a `list[DetectLanguageInput]` or a `list[str]`. A list of dict-like objects in the same shape as `DetectLanguageInput` is still accepted as input.\n  - `recognize_entities`, `recognize_pii_entities`, `recognize_linked_entities`, `extract_key_phrases`, `analyze_sentiment` can take as input a `list[TextDocumentInput]` or `list[str]`.\n  A list of dict-like objects in the same shape as `TextDocumentInput` is still accepted as input.\n\n- New parameters/keyword arguments:\n  - All operations now take a keyword argument `model_version` which allows the user to specify a string referencing the desired model version to be used for analysis. If no string specified, it will default to the latest, non-preview version.\n  - `detect_languages` now takes a parameter `country_hint` which allows you to specify the country hint for the entire batch. Any per-item country hints will take precedence over a whole batch hint.\n  - `recognize_entities`, `recognize_pii_entities`, `recognize_linked_entities`, `extract_key_phrases`, `analyze_sentiment` now take a parameter `language` which allows you to specify the language for the entire batch.\n  Any per-item specified language will take precedence over a whole batch hint.\n  - A `default_country_hint` or `default_language` keyword argument can be passed at client instantiation to set the default values for all operations.\n  - A `response_hook` keyword argument can be passed with a callback to use the raw response from the service. Additionally, values returned for `TextDocumentBatchStatistics` and `model_version` used must be retrieved using a response hook.\n  - `show_stats` and `model_version` parameters move to keyword only arguments.\n\n- New return types\n  - The return types for the batching methods (`detect_languages`, `recognize_entities`, `recognize_pii_entities`, `recognize_linked_entities`, `extract_key_phrases`, `analyze_sentiment`) now return a heterogeneous list of\n  result objects and document errors in the order passed in with the request. To iterate over the list and filter for result or error, a boolean property on each object called `is_error` can be used to determine whether the returned response object at\n  that index is a result or an error:\n  - `detect_languages` now returns a List[Union[`DetectLanguageResult`, `DocumentError`]]\n  - `recognize_entities` now returns a List[Union[`RecognizeEntitiesResult`, `DocumentError`]]\n  - `recognize_pii_entities` now returns a List[Union[`RecognizePiiEntitiesResult`, `DocumentError`]]\n  - `recognize_linked_entities` now returns a List[Union[`RecognizeLinkedEntitiesResult`, `DocumentError`]]\n  - `extract_key_phrases` now returns a List[Union[`ExtractKeyPhrasesResult`, `DocumentError`]]\n  - `analyze_sentiment` now returns a List[Union[`AnalyzeSentimentResult`, `DocumentError`]]\n  - The module-level, single text operations will return a single result object or raise the error found on the document:\n  - `single_detect_languages` returns a `DetectLanguageResult`\n  - `single_recognize_entities` returns a `RecognizeEntitiesResult`\n  - `single_recognize_pii_entities` returns a `RecognizePiiEntitiesResult`\n  - `single_recognize_linked_entities` returns a `RecognizeLinkedEntitiesResult`\n  - `single_extract_key_phrases` returns a `ExtractKeyPhrasesResult`\n  - `single_analyze_sentiment` returns a `AnalyzeSentimentResult`\n\n- New underlying REST pipeline implementation, based on the new `azure-core` library.\n- Client and pipeline configuration is now available via keyword arguments at both the client level, and per-operation. See README for a full list of optional configuration arguments.\n- Authentication using `azure-identity` credentials\n  - see the\n  [Azure Identity documentation](https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity/README.md)\n  for more information\n- New error hierarchy:\n    - All service errors will now use the base type: `azure.core.exceptions.HttpResponseError`\n    - There is one exception type derived from this base type for authentication errors:\n        - `ClientAuthenticationError`: Authentication failed.\n\n## 0.2.0 (2019-03-12)\n\n**Features**\n\n- Client class can be used as a context manager to keep the underlying HTTP session open for performance\n- New method \"entities\"\n- Model KeyPhraseBatchResultItem has a new parameter statistics\n- Model KeyPhraseBatchResult has a new parameter statistics\n- Model LanguageBatchResult has a new parameter statistics\n- Model LanguageBatchResultItem has a new parameter statistics\n- Model SentimentBatchResult has a new parameter statistics\n\n**Breaking changes**\n\n- TextAnalyticsAPI main client has been renamed TextAnalyticsClient\n- TextAnalyticsClient parameter is no longer a region but a complete endpoint\n\n**General Breaking changes**\n\nThis version uses a next-generation code generator that *might* introduce breaking changes.\n\n- Model signatures now use only keyword-argument syntax. All positional arguments must be re-written as keyword-arguments.\n  To keep auto-completion in most cases, models are now generated for Python 2 and Python 3. Python 3 uses the \"*\" syntax for keyword-only arguments.\n- Enum types now use the \"str\" mixin (class AzureEnum(str, Enum)) to improve the behavior when unrecognized enum values are encountered.\n  While this is not a breaking change, the distinctions are important, and are documented here:\n  https://docs.python.org/3/library/enum.html#others\n  At a glance:\n\n  - \"is\" should not be used at all.\n  - \"format\" will return the string value, where \"%s\" string formatting will return `NameOfEnum.stringvalue`. Format syntax should be prefered.\n\n**Bugfixes**\n\n- Compatibility of the sdist with wheel 0.31.0\n\n\n## 0.1.0 (2018-01-12)\n\n* Initial Release\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Azure/azure-sdk-for-python", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "azure-ai-textanalytics", "package_url": "https://pypi.org/project/azure-ai-textanalytics/", "platform": "", "project_url": "https://pypi.org/project/azure-ai-textanalytics/", "project_urls": {"Homepage": "https://github.com/Azure/azure-sdk-for-python"}, "release_url": "https://pypi.org/project/azure-ai-textanalytics/1.0.0b4/", "requires_dist": ["azure-core (<2.0.0,>=1.4.0)", "msrest (>=0.6.0)", "azure-common (~=1.1)", "six (>=1.6)", "azure-ai-nspkg ; python_version<'3.0'", "typing ; python_version<'3.5'"], "requires_python": "", "summary": "Microsoft Azure Text Analytics Client Library for Python", "version": "1.0.0b4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Azure Text Analytics client library for Python</h1>\n<p>Text Analytics is a cloud-based service that provides advanced natural language processing over raw text, and includes six main functions:</p>\n<ul>\n<li>Sentiment Analysis</li>\n<li>Named Entity Recognition</li>\n<li>Linked Entity Recognition</li>\n<li>Language Detection</li>\n<li>Key Phrase Extraction</li>\n</ul>\n<p><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/azure/ai/textanalytics\" rel=\"nofollow\">Source code</a> | <a href=\"https://pypi.org/project/azure-ai-textanalytics/\" rel=\"nofollow\">Package (PyPI)</a> | <a href=\"https://aka.ms/azsdk-python-textanalytics-ref-docs\" rel=\"nofollow\">API reference documentation</a>| <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview\" rel=\"nofollow\">Product documentation</a> | <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples\" rel=\"nofollow\">Samples</a></p>\n<h2>Getting started</h2>\n<h3>Prerequisites</h3>\n<ul>\n<li>Python 2.7, or 3.5 or later is required to use this package.</li>\n<li>You must have an <a href=\"https://azure.microsoft.com/free/\" rel=\"nofollow\">Azure subscription</a> and a\n<a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows\" rel=\"nofollow\">Cognitive Services or Text Analytics resource</a> to use this package.</li>\n</ul>\n<h3>Install the package</h3>\n<p>Install the Azure Text Analytics client library for Python with <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a>:</p>\n<pre>pip install azure-ai-textanalytics --pre\n</pre>\n<h3>Authenticate the client</h3>\n<h4>Create a Cognitive Services or Text Analytics resource</h4>\n<p>Text Analytics supports both <a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows\" rel=\"nofollow\">multi-service and single-service access</a>.\nCreate a Cognitive Services resource if you plan to access multiple cognitive services under a single endpoint/key. For Text Analytics access only, create a Text Analytics resource.</p>\n<p>You can create the resource using</p>\n<p><strong>Option 1:</strong> <a href=\"https://ms.portal.azure.com/#create/Microsoft.CognitiveServicesTextAnalytics\" rel=\"nofollow\">Azure Portal</a></p>\n<p><strong>Option 2:</strong> <a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account-cli?tabs=windows\" rel=\"nofollow\">Azure CLI</a>.\nBelow is an example of how you can create a Text Analytics resource using the CLI:</p>\n<pre><span class=\"c1\"># Create a new resource group to hold the text analytics resource -</span>\n<span class=\"c1\"># if using an existing resource group, skip this step</span>\naz group create --name my-resource-group --location westus2\n</pre>\n<pre><span class=\"c1\"># Create text analytics</span>\naz cognitiveservices account create <span class=\"se\">\\</span>\n    --name text-analytics-resource <span class=\"se\">\\</span>\n    --resource-group my-resource-group <span class=\"se\">\\</span>\n    --kind TextAnalytics <span class=\"se\">\\</span>\n    --sku F0 <span class=\"se\">\\</span>\n    --location westus2 <span class=\"se\">\\</span>\n    --yes\n</pre>\n<p>Interaction with this service begins with an instance of a <a href=\"#client\" rel=\"nofollow\" title=\"ta-client\">client</a>.\nTo create a client object, you will need the cognitive services or text analytics <code>endpoint</code> to\nyour resource and a <code>credential</code> that allows you access:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n\n<span class=\"n\">text_analytics_client</span>  <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s2\">\"https://&lt;region&gt;.api.cognitive.microsoft.com/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n</pre>\n<p>Note that if you create a <a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-custom-subdomains\" rel=\"nofollow\">custom subdomain</a>\nname for your resource the endpoint may look different than in the above code snippet.\nFor example, <code>https://&lt;my-custom-subdomain&gt;.cognitiveservices.azure.com/</code>.</p>\n<h4>Looking up the endpoint</h4>\n<p>You can find the endpoint for your text analytics resource using the\n<a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows#get-the-keys-for-your-resource\" rel=\"nofollow\">Azure Portal</a>\nor <a href=\"https://docs.microsoft.com/cli/azure/cognitiveservices/account?view=azure-cli-latest#az-cognitiveservices-account-show\" rel=\"nofollow\">Azure CLI</a>:</p>\n<pre><span class=\"c1\"># Get the endpoint for the text analytics resource</span>\naz cognitiveservices account show --name <span class=\"s2\">\"resource-name\"</span> --resource-group <span class=\"s2\">\"resource-group-name\"</span> --query <span class=\"s2\">\"endpoint\"</span>\n</pre>\n<h4>Types of credentials</h4>\n<p>The <code>credential</code> parameter may be provided as a <code>AzureKeyCredential</code> from azure.core.credentials or as a token from Azure Active Directory.\nSee the full details regarding <a href=\"https://docs.microsoft.com/azure/cognitive-services/authentication\" rel=\"nofollow\">authentication</a> of\ncognitive services.</p>\n<ol>\n<li>\n<p>To use an <a href=\"https://docs.microsoft.com/azure/cognitive-services/cognitive-services-apis-create-account?tabs=multiservice%2Cwindows#get-the-keys-for-your-resource\" rel=\"nofollow\">API key</a>,\npass the key as a string into an instance of <code>AzureKeyCredential(\"&lt;api_key&gt;\")</code>.\nThe API key can be found in the Azure Portal or by running the following Azure CLI command:</p>\n<p><code>az cognitiveservices account keys list --name \"resource-name\" --resource-group \"resource-group-name\"</code></p>\n<p>Use the key as the credential parameter to authenticate the client:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;api_key&gt;\"</span><span class=\"p\">)</span>\n<span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s2\">\"https://&lt;region&gt;.api.cognitive.microsoft.com/\"</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">credential</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>To use an <a href=\"https://docs.microsoft.com/azure/cognitive-services/authentication#authenticate-with-azure-active-directory\" rel=\"nofollow\">Azure Active Directory (AAD) token credential</a>,\nprovide an instance of the desired credential type obtained from the\n<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity#credentials\" rel=\"nofollow\">azure-identity</a> library.\nNote that regional endpoints do not support AAD authentication. Create a <a href=\"https://docs.microsoft.com/azure/cognitive-services/authentication#create-a-resource-with-a-custom-subdomain\" rel=\"nofollow\">custom subdomain</a>\nname for your resource in order to use this type of authentication.</p>\n<p>Authentication with AAD requires some initial setup:</p>\n<ul>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity#install-the-package\" rel=\"nofollow\">Install azure-identity</a></li>\n<li><a href=\"https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\" rel=\"nofollow\">Register a new AAD application</a></li>\n<li><a href=\"https://docs.microsoft.com/azure/cognitive-services/authentication#assign-a-role-to-a-service-principal\" rel=\"nofollow\">Grant access</a> to Text Analytics by assigning the <code>\"Cognitive Services User\"</code> role to your service principal.</li>\n</ul>\n<p>After setup, you can choose which type of <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity#credentials\" rel=\"nofollow\">credential</a> from azure.identity to use.\nAs an example, <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity#defaultazurecredential\" rel=\"nofollow\">DefaultAzureCredential</a>\ncan be used to authenticate the client:</p>\n<p>Set the values of the client ID, tenant ID, and client secret of the AAD application as environment variables:\nAZURE_CLIENT_ID, AZURE_TENANT_ID, AZURE_CLIENT_SECRET</p>\n<p>Use the returned token credential to authenticate the client:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n<span class=\"n\">token_credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"n\">text_analytics_client</span> <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span>\n    <span class=\"n\">endpoint</span><span class=\"o\">=</span><span class=\"s2\">\"https://&lt;my-custom-subdomain&gt;.cognitiveservices.azure.com/\"</span><span class=\"p\">,</span>\n    <span class=\"n\">credential</span><span class=\"o\">=</span><span class=\"n\">token_credential</span>\n<span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n<h2>Key concepts</h2>\n<h3>Client</h3>\n<p>The Text Analytics client library provides a <a href=\"https://aka.ms/azsdk-python-textanalytics-textanalyticsclient\" rel=\"nofollow\">TextAnalyticsClient</a> to do analysis on <a href=\"#Examples\" rel=\"nofollow\" title=\"examples\">batches of documents</a>.\nIt provides both synchronous and asynchronous operations to access a specific use of Text Analytics, such as language detection or key phrase extraction.</p>\n<h3>Input</h3>\n<p>A <strong>document</strong> is a single unit to be analyzed by the predictive models in the Text Analytics service.\nThe input for each operation is passed as a <strong>list</strong> of documents.</p>\n<p>Each document can be passed as a string in the list, e.g.</p>\n<pre><span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"I hated the movie. It was so slow!\"</span><span class=\"p\">,</span> <span class=\"s2\">\"The movie made it into my top ten favorites.\"</span><span class=\"p\">,</span> <span class=\"s2\">\"What a great movie!\"</span><span class=\"p\">]</span>\n</pre>\n<p>or, if you wish to pass in a per-item document <code>id</code> or <code>language</code>/<code>country_hint</code>, they can be passed as a list of\n<a href=\"https://aka.ms/azsdk-python-textanalytics-detectlanguageinput\" rel=\"nofollow\">DetectLanguageInput</a> or\n<a href=\"https://aka.ms/azsdk-python-textanalytics-textdocumentinput\" rel=\"nofollow\">TextDocumentInput</a>\nor a dict-like representation of the object:</p>\n<pre><span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"language\"</span><span class=\"p\">:</span> <span class=\"s2\">\"en\"</span><span class=\"p\">,</span> <span class=\"s2\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"I hated the movie. It was so slow!\"</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"language\"</span><span class=\"p\">:</span> <span class=\"s2\">\"en\"</span><span class=\"p\">,</span> <span class=\"s2\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"The movie made it into my top ten favorites.\"</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"3\"</span><span class=\"p\">,</span> <span class=\"s2\">\"language\"</span><span class=\"p\">:</span> <span class=\"s2\">\"en\"</span><span class=\"p\">,</span> <span class=\"s2\">\"text\"</span><span class=\"p\">:</span> <span class=\"s2\">\"What a great movie!\"</span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>See <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview#data-limits\" rel=\"nofollow\">service limitations</a> for the input, including document length limits, maximum batch size, and supported text encoding.</p>\n<h3>Return Value</h3>\n<p>The return value for a single document can be a result or error object.\nA heterogeneous list containing a collection of result and error objects is returned from each operation.\nThese results/errors are index-matched with the order of the provided documents.</p>\n<p>A <strong>result</strong>, such as <a href=\"https://aka.ms/azsdk-python-textanalytics-analyzesentimentresult\" rel=\"nofollow\">AnalyzeSentimentResult</a>,\nis the result of a Text Analytics operation and contains a prediction or predictions about a document input.</p>\n<p>The <strong>error</strong> object, <a href=\"https://aka.ms/azsdk-python-textanalytics-documenterror\" rel=\"nofollow\">DocumentError</a>, indicates that the service had trouble processing the document and contains\nthe reason it was unsuccessful.</p>\n<h3>Document Error Handling</h3>\n<p>You can filter for a result or error object in the list by using the <code>is_error</code> attribute. For a result object this is always <code>False</code> and for a\n<a href=\"https://aka.ms/azsdk-python-textanalytics-documenterror\" rel=\"nofollow\">DocumentError</a> this is <code>True</code>.</p>\n<p>For example, to filter out all DocumentErrors you might use list comprehension:</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">text_analytics_client</span><span class=\"o\">.</span><span class=\"n\">analyze_sentiment</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">)</span>\n<span class=\"n\">successful_responses</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">doc</span> <span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">response</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">is_error</span><span class=\"p\">]</span>\n</pre>\n<h2>Examples</h2>\n<p>The following section provides several code snippets covering some of the most common Text Analytics tasks, including:</p>\n<ul>\n<li><a href=\"#analyze-sentiment\" rel=\"nofollow\" title=\"Analyze sentiment\">Analyze Sentiment</a></li>\n<li><a href=\"#recognize-entities\" rel=\"nofollow\" title=\"Recognize entities\">Recognize Entities</a></li>\n<li><a href=\"#recognize-linked-entities\" rel=\"nofollow\" title=\"Recognize linked entities\">Recognize Linked Entities</a></li>\n<li><a href=\"#extract-key-phrases\" rel=\"nofollow\" title=\"Extract key phrases\">Extract Key Phrases</a></li>\n<li><a href=\"#detect-language\" rel=\"nofollow\" title=\"Detect language\">Detect Language</a></li>\n</ul>\n<h3>Analyze sentiment</h3>\n<p><a href=\"https://aka.ms/azsdk-python-textanalytics-analyzesentiment\" rel=\"nofollow\">analyze_sentiment</a> looks at its input text and determines whether its sentiment is positive, negative, neutral or mixed. It's response includes per-sentence sentiment analysis and confidence scores.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n\n<span class=\"n\">text_analytics_client</span> <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">))</span>\n\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"I did not like the restaurant. The food was too spicy.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"The restaurant was decorated beautifully. The atmosphere was unlike any other restaurant I've been to.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"The food was yummy. :)\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">text_analytics_client</span><span class=\"o\">.</span><span class=\"n\">analyze_sentiment</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">,</span> <span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s2\">\"en\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">doc</span> <span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">response</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">is_error</span><span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Overall sentiment: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">sentiment</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Scores: positive=</span><span class=\"si\">{}</span><span class=\"s2\">; neutral=</span><span class=\"si\">{}</span><span class=\"s2\">; negative=</span><span class=\"si\">{}</span><span class=\"s2\"> </span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n        <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">confidence_scores</span><span class=\"o\">.</span><span class=\"n\">positive</span><span class=\"p\">,</span>\n        <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">confidence_scores</span><span class=\"o\">.</span><span class=\"n\">neutral</span><span class=\"p\">,</span>\n        <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">confidence_scores</span><span class=\"o\">.</span><span class=\"n\">negative</span><span class=\"p\">,</span>\n    <span class=\"p\">))</span>\n</pre>\n<p>The returned response is a heterogeneous list of result and error objects: list[<a href=\"https://aka.ms/azsdk-python-textanalytics-analyzesentimentresult\" rel=\"nofollow\">AnalyzeSentimentResult</a>, <a href=\"https://aka.ms/azsdk-python-textanalytics-documenterror\" rel=\"nofollow\">DocumentError</a>]</p>\n<p>Please refer to the service documentation for a conceptual discussion of <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-sentiment-analysis\" rel=\"nofollow\">sentiment analysis</a>.</p>\n<h3>Recognize entities</h3>\n<p><a href=\"https://aka.ms/azsdk-python-textanalytics-recognizeentities\" rel=\"nofollow\">recognize_entities</a> recognizes and categories entities in its input text as people, places, organizations, date/time, quantities, percentages, currencies, and more.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n\n<span class=\"n\">text_analytics_client</span> <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">))</span>\n\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"Microsoft was founded by Bill Gates and Paul Allen.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Redmond is a city in King County, Washington, United States, located 15 miles east of Seattle.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Jeff bought three dozen eggs because there was a 50</span><span class=\"si\">% d</span><span class=\"s2\">iscount.\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">text_analytics_client</span><span class=\"o\">.</span><span class=\"n\">recognize_entities</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">,</span> <span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s2\">\"en\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">doc</span> <span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">response</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">is_error</span><span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">entity</span> <span class=\"ow\">in</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">entities</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Entity: </span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Category: </span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">category</span><span class=\"p\">,</span>\n              <span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Confidence Score: </span><span class=\"se\">\\t</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">confidence_score</span><span class=\"p\">)</span>\n</pre>\n<p>The returned response is a heterogeneous list of result and error objects: list[<a href=\"https://aka.ms/azsdk-python-textanalytics-recognizeentitiesresult\" rel=\"nofollow\">RecognizeEntitiesResult</a>, <a href=\"https://aka.ms/azsdk-python-textanalytics-documenterror\" rel=\"nofollow\">DocumentError</a>]</p>\n<p>Please refer to the service documentation for a conceptual discussion of <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-entity-linking\" rel=\"nofollow\">named entity recognition</a>\nand <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/named-entity-types?tabs=general\" rel=\"nofollow\">supported types</a>.</p>\n<h3>Recognize linked entities</h3>\n<p><a href=\"https://aka.ms/azsdk-python-textanalytics-recognizelinkedentities\" rel=\"nofollow\">recognize_linked_entities</a> recognizes and disambiguates the identity of each entity found in its input text (for example,\ndetermining whether an occurrence of the word Mars refers to the planet, or to the\nRoman god of war). Recognized entities are associated with URLs to a well-known knowledge base, like Wikipedia.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n\n<span class=\"n\">text_analytics_client</span> <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">))</span>\n\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"Microsoft was founded by Bill Gates and Paul Allen.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Easter Island, a Chilean territory, is a remote volcanic island in Polynesia.\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">text_analytics_client</span><span class=\"o\">.</span><span class=\"n\">recognize_linked_entities</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">,</span> <span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s2\">\"en\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">doc</span> <span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">response</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">is_error</span><span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">entity</span> <span class=\"ow\">in</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">entities</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Entity: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"URL: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">))</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Data Source: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">data_source</span><span class=\"p\">))</span>\n        <span class=\"k\">for</span> <span class=\"n\">match</span> <span class=\"ow\">in</span> <span class=\"n\">entity</span><span class=\"o\">.</span><span class=\"n\">matches</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Confidence Score: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">confidence_score</span><span class=\"p\">))</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Entity as appears in request: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">))</span>\n</pre>\n<p>The returned response is a heterogeneous list of result and error objects: list[<a href=\"https://aka.ms/azsdk-python-textanalytics-recognizelinkedentitiesresult\" rel=\"nofollow\">RecognizeLinkedEntitiesResult</a>, <a href=\"https://aka.ms/azsdk-python-textanalytics-documenterror\" rel=\"nofollow\">DocumentError</a>]</p>\n<p>Please refer to the service documentation for a conceptual discussion of <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-entity-linking\" rel=\"nofollow\">entity linking</a>\nand <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/named-entity-types?tabs=general\" rel=\"nofollow\">supported types</a>.</p>\n<h3>Extract key phrases</h3>\n<p><a href=\"https://aka.ms/azsdk-python-textanalytics-extractkeyphrases\" rel=\"nofollow\">extract_key_phrases</a> determines the main talking points in its input text. For example, for the input text \"The food was delicious and there were wonderful staff\", the API returns: \"food\" and \"wonderful staff\".</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n\n<span class=\"n\">text_analytics_client</span> <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">))</span>\n\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"Redmond is a city in King County, Washington, United States, located 15 miles east of Seattle.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"I need to take my cat to the veterinarian.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"I will travel to South America in the summer.\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">text_analytics_client</span><span class=\"o\">.</span><span class=\"n\">extract_key_phrases</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">,</span> <span class=\"n\">language</span><span class=\"o\">=</span><span class=\"s2\">\"en\"</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">doc</span> <span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">response</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">is_error</span><span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">key_phrases</span><span class=\"p\">)</span>\n</pre>\n<p>The returned response is a heterogeneous list of result and error objects: list[<a href=\"https://aka.ms/azsdk-python-textanalytics-extractkeyphrasesresult\" rel=\"nofollow\">ExtractKeyPhrasesResult</a>, <a href=\"https://aka.ms/azsdk-python-textanalytics-documenterror\" rel=\"nofollow\">DocumentError</a>]</p>\n<p>Please refer to the service documentation for a conceptual discussion of <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-keyword-extraction\" rel=\"nofollow\">key phrase extraction</a>.</p>\n<h3>Detect language</h3>\n<p><a href=\"https://aka.ms/azsdk-python-textanalytics-detectlanguage\" rel=\"nofollow\">detect_language</a> determines the language of its input text, including the confidence score of the predicted language.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">azure.core.credentials</span> <span class=\"kn\">import</span> <span class=\"n\">AzureKeyCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n\n<span class=\"n\">text_analytics_client</span> <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">AzureKeyCredential</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">))</span>\n\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"This is written in English.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Il documento scritto in italiano.\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"Dies ist in deutsche Sprache verfasst.\"</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">text_analytics_client</span><span class=\"o\">.</span><span class=\"n\">detect_language</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">doc</span> <span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">response</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">is_error</span><span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">doc</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Language detected: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">primary_language</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"ISO6391 name: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">primary_language</span><span class=\"o\">.</span><span class=\"n\">iso6391_name</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Confidence score: </span><span class=\"si\">{}</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"o\">.</span><span class=\"n\">primary_language</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">))</span>\n</pre>\n<p>The returned response is a heterogeneous list of result and error objects: list[<a href=\"https://aka.ms/azsdk-python-textanalytics-detectlanguageresult\" rel=\"nofollow\">DetectLanguageResult</a>, <a href=\"https://aka.ms/azsdk-python-textanalytics-documenterror\" rel=\"nofollow\">DocumentError</a>]</p>\n<p>Please refer to the service documentation for a conceptual discussion of <a href=\"https://docs.microsoft.com/azure/cognitive-services/Text-Analytics/how-tos/text-analytics-how-to-language-detection\" rel=\"nofollow\">language detection</a>\nand <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/language-support\" rel=\"nofollow\">language and regional support</a>.</p>\n<h2>Optional Configuration</h2>\n<p>Optional keyword arguments can be passed in at the client and per-operation level.\nThe azure-core <a href=\"https://aka.ms/azsdk-python-core-policies\" rel=\"nofollow\">reference documentation</a>\ndescribes available configurations for retries, logging, transport protocols, and more.</p>\n<h2>Troubleshooting</h2>\n<h3>General</h3>\n<p>The Text Analytics client will raise exceptions defined in <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/core/azure-core/README.md\" rel=\"nofollow\">Azure Core</a>.</p>\n<h3>Logging</h3>\n<p>This library uses the standard\n<a href=\"https://docs.python.org/3.5/library/logging.html\" rel=\"nofollow\">logging</a> library for logging.\nBasic information about HTTP sessions (URLs, headers, etc.) is logged at INFO\nlevel.</p>\n<p>Detailed DEBUG level logging, including request/response bodies and unredacted\nheaders, can be enabled on a client with the <code>logging_enable</code> keyword argument:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.identity</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultAzureCredential</span>\n<span class=\"kn\">from</span> <span class=\"nn\">azure.ai.textanalytics</span> <span class=\"kn\">import</span> <span class=\"n\">TextAnalyticsClient</span>\n\n<span class=\"c1\"># Create a logger for the 'azure' SDK</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'azure'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Configure a console output</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n\n<span class=\"n\">endpoint</span> <span class=\"o\">=</span> <span class=\"s2\">\"https://&lt;my-custom-subdomain&gt;.cognitiveservices.azure.com/\"</span>\n<span class=\"n\">credential</span> <span class=\"o\">=</span> <span class=\"n\">DefaultAzureCredential</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># This client will log detailed information about its HTTP sessions, at DEBUG level</span>\n<span class=\"n\">text_analytics_client</span> <span class=\"o\">=</span> <span class=\"n\">TextAnalyticsClient</span><span class=\"p\">(</span><span class=\"n\">endpoint</span><span class=\"p\">,</span> <span class=\"n\">credential</span><span class=\"p\">,</span> <span class=\"n\">logging_enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Similarly, <code>logging_enable</code> can enable detailed logging for a single operation,\neven when it isn't enabled for the client:</p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">text_analytics_client</span><span class=\"o\">.</span><span class=\"n\">analyze_sentiment</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">,</span> <span class=\"n\">logging_enable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h2>Next steps</h2>\n<h3>More sample code</h3>\n<p>These code samples show common scenario operations with the Azure Text Analytics client library.\nThe async versions of the samples (the python sample files appended with <code>_async</code>) show asynchronous operations\nwith Text Analytics and require Python 3.5 or later.</p>\n<p>Authenticate the client with a Cognitive Services/Text Analytics API key or a token credential from <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/identity/azure-identity\" rel=\"nofollow\">azure-identity</a>:</p>\n<ul>\n<li><a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_authentication.py\" rel=\"nofollow\">sample_authentication.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_authentication_async.py\" rel=\"nofollow\">async version</a>)</li>\n</ul>\n<p>In a batch of documents:</p>\n<ul>\n<li>Detect language: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_detect_language.py\" rel=\"nofollow\">sample_detect_language.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_detect_language_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Recognize entities: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_recognize_entities.py\" rel=\"nofollow\">sample_recognize_entities.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_recognize_entities_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Recognize linked entities: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_recognize_linked_entities.py\" rel=\"nofollow\">sample_recognize_linked_entities.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_recognize_linked_entities_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Extract key phrases: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_extract_key_phrases.py\" rel=\"nofollow\">sample_extract_key_phrases.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_extract_key_phrases_async.py\" rel=\"nofollow\">async version</a>)</li>\n<li>Analyze sentiment: <a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/sample_analyze_sentiment.py\" rel=\"nofollow\">sample_analyze_sentiment.py</a> (<a href=\"https://github.com/Azure/azure-sdk-for-python/tree/3e9fefa0145cccc2a31e560470fed5536f16f16a/sdk/textanalytics/azure-ai-textanalytics/samples/async_samples/sample_analyze_sentiment_async.py\" rel=\"nofollow\">async version</a>)</li>\n</ul>\n<h3>Additional documentation</h3>\n<p>For more extensive documentation on Azure Cognitive Services Text Analytics, see the <a href=\"https://docs.microsoft.com/azure/cognitive-services/text-analytics/overview\" rel=\"nofollow\">Text Analytics documentation</a> on docs.microsoft.com.</p>\n<h2>Contributing</h2>\n<p>This project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit <a href=\"https://cla.microsoft.com\" rel=\"nofollow\">cla.microsoft.com</a>.</p>\n<p>When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.</p>\n<p>This project has adopted the <a href=\"https://opensource.microsoft.com/codeofconduct/\" rel=\"nofollow\">Microsoft Open Source Code of Conduct</a>. For more information see the <a href=\"https://opensource.microsoft.com/codeofconduct/faq/\" rel=\"nofollow\">Code of Conduct FAQ</a> or contact <a href=\"mailto:opencode@microsoft.com\">opencode@microsoft.com</a> with any additional questions or comments.</p>\n\n<h1>Change Log azure-ai-textanalytics</h1>\n<h2>1.0.0b4 (2020-04-07)</h2>\n<p><strong>Breaking changes</strong></p>\n<ul>\n<li>Removed the <code>recognize_pii_entities</code> endpoint and all related models (<code>RecognizePiiEntitiesResult</code> and <code>PiiEntity</code>)\nfrom this library.</li>\n<li>Removed <code>TextAnalyticsApiKeyCredential</code> and now using <code>AzureKeyCredential</code> from azure.core.credentials as key credential</li>\n<li><code>score</code> attribute has been renamed to <code>confidence_score</code> for the <code>CategorizedEntity</code>, <code>LinkedEntityMatch</code>, and\n<code>PiiEntity</code> models</li>\n<li>All input parameters <code>inputs</code> have been renamed to <code>documents</code></li>\n</ul>\n<h2>1.0.0b3 (2020-03-10)</h2>\n<p><strong>Breaking changes</strong></p>\n<ul>\n<li><code>SentimentScorePerLabel</code> has been renamed to <code>SentimentConfidenceScores</code></li>\n<li><code>AnalyzeSentimentResult</code> and <code>SentenceSentiment</code> attribute <code>sentiment_scores</code> has been renamed to <code>confidence_scores</code></li>\n<li><code>TextDocumentStatistics</code> attribute <code>character_count</code> has been renamed to <code>grapheme_count</code></li>\n<li><code>LinkedEntity</code> attribute <code>id</code> has been renamed to <code>data_source_entity_id</code></li>\n<li>Parameters <code>country_hint</code> and <code>language</code> are now passed as keyword arguments</li>\n<li>The keyword argument <code>response_hook</code> has been renamed to <code>raw_response_hook</code></li>\n<li><code>length</code> and <code>offset</code> attributes have been renamed to <code>grapheme_length</code> and <code>grapheme_offset</code> for the <code>SentenceSentiment</code>,\n<code>CategorizedEntity</code>, <code>PiiEntity</code>, and <code>LinkedEntityMatch</code> models</li>\n</ul>\n<p><strong>New features</strong></p>\n<ul>\n<li>Pass <code>country_hint=\"none\"</code> to not use the default country hint of <code>\"US\"</code>.</li>\n</ul>\n<p><strong>Dependency updates</strong></p>\n<ul>\n<li>Adopted <a href=\"https://pypi.org/project/azure-core/\" rel=\"nofollow\">azure-core</a> version 1.3.0 or greater</li>\n</ul>\n<h2>1.0.0b2 (2020-02-11)</h2>\n<p><strong>Breaking changes</strong></p>\n<ul>\n<li>The single text, module-level operations <code>single_detect_language()</code>, <code>single_recognize_entities()</code>, <code>single_extract_key_phrases()</code>, <code>single_analyze_sentiment()</code>, <code>single_recognize_pii_entities()</code>, and <code>single_recognize_linked_entities()</code>\nhave been removed from the client library. Use the batching methods for optimal performance in production environments.</li>\n<li>To use an API key as the credential for authenticating the client, a new credential class <code>TextAnalyticsApiKeyCredential(\"&lt;api_key&gt;\")</code> must be passed in for the <code>credential</code> parameter.\nPassing the API key as a string is no longer supported.</li>\n<li><code>detect_languages()</code> is renamed to <code>detect_language()</code>.</li>\n<li>The <code>TextAnalyticsError</code> model has been simplified to an object with only attributes <code>code</code>, <code>message</code>, and <code>target</code>.</li>\n<li><code>NamedEntity</code> has been renamed to <code>CategorizedEntity</code> and its attributes <code>type</code> to <code>category</code> and <code>subtype</code> to <code>subcategory</code>.</li>\n<li><code>RecognizePiiEntitiesResult</code> now contains on the object a list of <code>PiiEntity</code> instead of <code>NamedEntity</code>.</li>\n<li><code>AnalyzeSentimentResult</code> attribute <code>document_scores</code> has been renamed to <code>sentiment_scores</code>.</li>\n<li><code>SentenceSentiment</code> attribute <code>sentence_scores</code> has been renamed to <code>sentiment_scores</code>.</li>\n<li><code>SentimentConfidenceScorePerLabel</code> has been renamed to <code>SentimentScorePerLabel</code>.</li>\n<li><code>DetectLanguageResult</code> no longer has attribute <code>detected_languages</code>. Use <code>primary_language</code> to access the detected language in text.</li>\n</ul>\n<p><strong>New features</strong></p>\n<ul>\n<li>Credential class <code>TextAnalyticsApiKeyCredential</code> provides an <code>update_key()</code> method which allows you to update the API key for long-lived clients.</li>\n</ul>\n<p><strong>Fixes and improvements</strong></p>\n<ul>\n<li><code>__repr__</code> has been added to all of the response objects.</li>\n<li>If you try to access a result attribute on a <code>DocumentError</code> object, an <code>AttributeError</code> is raised with a custom error message that provides the document ID and error of the invalid document.</li>\n</ul>\n<h2>1.0.0b1 (2020-01-09)</h2>\n<p>Version (1.0.0b1) is the first preview of our efforts to create a user-friendly and Pythonic client library for Azure Text Analytics. For more information about this, and preview releases of other Azure SDK libraries, please visit\n<a href=\"https://azure.github.io/azure-sdk/releases/latest/python.html\" rel=\"nofollow\">https://azure.github.io/azure-sdk/releases/latest/python.html</a>.</p>\n<p><strong>Breaking changes: New API design</strong></p>\n<ul>\n<li>\n<p>New namespace/package name:</p>\n<ul>\n<li>The namespace/package name for Azure Text Analytics client library has changed from <code>azure.cognitiveservices.language.textanalytics</code> to <code>azure.ai.textanalytics</code></li>\n</ul>\n</li>\n<li>\n<p>New operations and naming:</p>\n<ul>\n<li><code>detect_language</code> is renamed to <code>detect_languages</code></li>\n<li><code>entities</code> is renamed to <code>recognize_entities</code></li>\n<li><code>key_phrases</code> is renamed to <code>extract_key_phrases</code></li>\n<li><code>sentiment</code> is renamed to <code>analyze_sentiment</code></li>\n<li>New operation <code>recognize_pii_entities</code> finds personally identifiable information entities in text</li>\n<li>New operation <code>recognize_linked_entities</code> provides links from a well-known knowledge base for each recognized entity</li>\n<li>New module-level operations <code>single_detect_language</code>, <code>single_recognize_entities</code>, <code>single_extract_key_phrases</code>, <code>single_analyze_sentiment</code>, <code>single_recognize_pii_entities</code>, and <code>single_recognize_linked_entities</code> perform\nfunction on a single string instead of a batch of text documents and can be imported from the <code>azure.ai.textanalytics</code> namespace.</li>\n<li>New client and module-level async APIs added to subnamespace <code>azure.ai.textanalytics.aio</code>.</li>\n<li><code>MultiLanguageInput</code> has been renamed to <code>TextDocumentInput</code></li>\n<li><code>LanguageInput</code> has been renamed to <code>DetectLanguageInput</code></li>\n<li><code>DocumentLanguage</code> has been renamed to <code>DetectLanguageResult</code></li>\n<li><code>DocumentEntities</code> has been renamed to <code>RecognizeEntitiesResult</code></li>\n<li><code>DocumentLinkedEntities</code> has been renamed to <code>RecognizeLinkedEntitiesResult</code></li>\n<li><code>DocumentKeyPhrases</code> has been renamed to <code>ExtractKeyPhrasesResult</code></li>\n<li><code>DocumentSentiment</code> has been renamed to <code>AnalyzeSentimentResult</code></li>\n<li><code>DocumentStatistics</code> has been renamed to <code>TextDocumentStatistics</code></li>\n<li><code>RequestStatistics</code> has been renamed to <code>TextDocumentBatchStatistics</code></li>\n<li><code>Entity</code> has been renamed to <code>NamedEntity</code></li>\n<li><code>Match</code> has been renamed to <code>LinkedEntityMatch</code></li>\n<li>The batching methods' <code>documents</code> parameter has been renamed <code>inputs</code></li>\n</ul>\n</li>\n<li>\n<p>New input types:</p>\n<ul>\n<li><code>detect_languages</code> can take as input a <code>list[DetectLanguageInput]</code> or a <code>list[str]</code>. A list of dict-like objects in the same shape as <code>DetectLanguageInput</code> is still accepted as input.</li>\n<li><code>recognize_entities</code>, <code>recognize_pii_entities</code>, <code>recognize_linked_entities</code>, <code>extract_key_phrases</code>, <code>analyze_sentiment</code> can take as input a <code>list[TextDocumentInput]</code> or <code>list[str]</code>.\nA list of dict-like objects in the same shape as <code>TextDocumentInput</code> is still accepted as input.</li>\n</ul>\n</li>\n<li>\n<p>New parameters/keyword arguments:</p>\n<ul>\n<li>All operations now take a keyword argument <code>model_version</code> which allows the user to specify a string referencing the desired model version to be used for analysis. If no string specified, it will default to the latest, non-preview version.</li>\n<li><code>detect_languages</code> now takes a parameter <code>country_hint</code> which allows you to specify the country hint for the entire batch. Any per-item country hints will take precedence over a whole batch hint.</li>\n<li><code>recognize_entities</code>, <code>recognize_pii_entities</code>, <code>recognize_linked_entities</code>, <code>extract_key_phrases</code>, <code>analyze_sentiment</code> now take a parameter <code>language</code> which allows you to specify the language for the entire batch.\nAny per-item specified language will take precedence over a whole batch hint.</li>\n<li>A <code>default_country_hint</code> or <code>default_language</code> keyword argument can be passed at client instantiation to set the default values for all operations.</li>\n<li>A <code>response_hook</code> keyword argument can be passed with a callback to use the raw response from the service. Additionally, values returned for <code>TextDocumentBatchStatistics</code> and <code>model_version</code> used must be retrieved using a response hook.</li>\n<li><code>show_stats</code> and <code>model_version</code> parameters move to keyword only arguments.</li>\n</ul>\n</li>\n<li>\n<p>New return types</p>\n<ul>\n<li>The return types for the batching methods (<code>detect_languages</code>, <code>recognize_entities</code>, <code>recognize_pii_entities</code>, <code>recognize_linked_entities</code>, <code>extract_key_phrases</code>, <code>analyze_sentiment</code>) now return a heterogeneous list of\nresult objects and document errors in the order passed in with the request. To iterate over the list and filter for result or error, a boolean property on each object called <code>is_error</code> can be used to determine whether the returned response object at\nthat index is a result or an error:</li>\n<li><code>detect_languages</code> now returns a List[Union[<code>DetectLanguageResult</code>, <code>DocumentError</code>]]</li>\n<li><code>recognize_entities</code> now returns a List[Union[<code>RecognizeEntitiesResult</code>, <code>DocumentError</code>]]</li>\n<li><code>recognize_pii_entities</code> now returns a List[Union[<code>RecognizePiiEntitiesResult</code>, <code>DocumentError</code>]]</li>\n<li><code>recognize_linked_entities</code> now returns a List[Union[<code>RecognizeLinkedEntitiesResult</code>, <code>DocumentError</code>]]</li>\n<li><code>extract_key_phrases</code> now returns a List[Union[<code>ExtractKeyPhrasesResult</code>, <code>DocumentError</code>]]</li>\n<li><code>analyze_sentiment</code> now returns a List[Union[<code>AnalyzeSentimentResult</code>, <code>DocumentError</code>]]</li>\n<li>The module-level, single text operations will return a single result object or raise the error found on the document:</li>\n<li><code>single_detect_languages</code> returns a <code>DetectLanguageResult</code></li>\n<li><code>single_recognize_entities</code> returns a <code>RecognizeEntitiesResult</code></li>\n<li><code>single_recognize_pii_entities</code> returns a <code>RecognizePiiEntitiesResult</code></li>\n<li><code>single_recognize_linked_entities</code> returns a <code>RecognizeLinkedEntitiesResult</code></li>\n<li><code>single_extract_key_phrases</code> returns a <code>ExtractKeyPhrasesResult</code></li>\n<li><code>single_analyze_sentiment</code> returns a <code>AnalyzeSentimentResult</code></li>\n</ul>\n</li>\n<li>\n<p>New underlying REST pipeline implementation, based on the new <code>azure-core</code> library.</p>\n</li>\n<li>\n<p>Client and pipeline configuration is now available via keyword arguments at both the client level, and per-operation. See README for a full list of optional configuration arguments.</p>\n</li>\n<li>\n<p>Authentication using <code>azure-identity</code> credentials</p>\n<ul>\n<li>see the\n<a href=\"https://github.com/Azure/azure-sdk-for-python/blob/master/sdk/identity/azure-identity/README.md\" rel=\"nofollow\">Azure Identity documentation</a>\nfor more information</li>\n</ul>\n</li>\n<li>\n<p>New error hierarchy:</p>\n<ul>\n<li>All service errors will now use the base type: <code>azure.core.exceptions.HttpResponseError</code></li>\n<li>There is one exception type derived from this base type for authentication errors:\n<ul>\n<li><code>ClientAuthenticationError</code>: Authentication failed.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>0.2.0 (2019-03-12)</h2>\n<p><strong>Features</strong></p>\n<ul>\n<li>Client class can be used as a context manager to keep the underlying HTTP session open for performance</li>\n<li>New method \"entities\"</li>\n<li>Model KeyPhraseBatchResultItem has a new parameter statistics</li>\n<li>Model KeyPhraseBatchResult has a new parameter statistics</li>\n<li>Model LanguageBatchResult has a new parameter statistics</li>\n<li>Model LanguageBatchResultItem has a new parameter statistics</li>\n<li>Model SentimentBatchResult has a new parameter statistics</li>\n</ul>\n<p><strong>Breaking changes</strong></p>\n<ul>\n<li>TextAnalyticsAPI main client has been renamed TextAnalyticsClient</li>\n<li>TextAnalyticsClient parameter is no longer a region but a complete endpoint</li>\n</ul>\n<p><strong>General Breaking changes</strong></p>\n<p>This version uses a next-generation code generator that <em>might</em> introduce breaking changes.</p>\n<ul>\n<li>\n<p>Model signatures now use only keyword-argument syntax. All positional arguments must be re-written as keyword-arguments.\nTo keep auto-completion in most cases, models are now generated for Python 2 and Python 3. Python 3 uses the \"*\" syntax for keyword-only arguments.</p>\n</li>\n<li>\n<p>Enum types now use the \"str\" mixin (class AzureEnum(str, Enum)) to improve the behavior when unrecognized enum values are encountered.\nWhile this is not a breaking change, the distinctions are important, and are documented here:\n<a href=\"https://docs.python.org/3/library/enum.html#others\" rel=\"nofollow\">https://docs.python.org/3/library/enum.html#others</a>\nAt a glance:</p>\n<ul>\n<li>\"is\" should not be used at all.</li>\n<li>\"format\" will return the string value, where \"%s\" string formatting will return <code>NameOfEnum.stringvalue</code>. Format syntax should be prefered.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Bugfixes</strong></p>\n<ul>\n<li>Compatibility of the sdist with wheel 0.31.0</li>\n</ul>\n<h2>0.1.0 (2018-01-12)</h2>\n<ul>\n<li>Initial Release</li>\n</ul>\n\n          </div>"}, "last_serial": 6971054, "releases": {"1.0.0b1": [{"comment_text": "", "digests": {"md5": "46d9009a20ed5c5e938221c1903a3b42", "sha256": "517389e0ebc9995d7cc5828384ba0365a4e3cf2e54eaa96b710ba980b6f892e1"}, "downloads": -1, "filename": "azure_ai_textanalytics-1.0.0b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46d9009a20ed5c5e938221c1903a3b42", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55880, "upload_time": "2020-01-09T21:52:49", "upload_time_iso_8601": "2020-01-09T21:52:49.306292Z", "url": "https://files.pythonhosted.org/packages/6f/57/9e2e3357245e32bf31706d6b80ddbe3befbd60cce21ff4af79ade008dd88/azure_ai_textanalytics-1.0.0b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2be8099d0da7a95ab8ca20518953a511", "sha256": "c488eca6bebedf3253b1be2e9ab8174beb68c8f50af7c080a91eb0b3394c5bf0"}, "downloads": -1, "filename": "azure-ai-textanalytics-1.0.0b1.zip", "has_sig": false, "md5_digest": "2be8099d0da7a95ab8ca20518953a511", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133792, "upload_time": "2020-01-09T21:52:53", "upload_time_iso_8601": "2020-01-09T21:52:53.366782Z", "url": "https://files.pythonhosted.org/packages/ba/3e/d1c9399354145739ffe2f58ef8f29f3f7ccc3fd68cef447c1febe84d39cf/azure-ai-textanalytics-1.0.0b1.zip", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "5ba15b01779b635056870f04154abc13", "sha256": "aded682704ba4c85ed0a836f885a5ce0f4d008b25394f49e4ceddcda7c8190f2"}, "downloads": -1, "filename": "azure_ai_textanalytics-1.0.0b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ba15b01779b635056870f04154abc13", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 55408, "upload_time": "2020-02-11T20:47:04", "upload_time_iso_8601": "2020-02-11T20:47:04.634434Z", "url": "https://files.pythonhosted.org/packages/63/e0/137ce79a8b094adb82f4e404c5583e84c40e08225d8fa444797494e1079d/azure_ai_textanalytics-1.0.0b2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a232e20be372dbde2853de056bca950", "sha256": "09ebf9010d29d3c3a244bbaabf0731d381952331b8521334fccf3512a2bb14a0"}, "downloads": -1, "filename": "azure-ai-textanalytics-1.0.0b2.zip", "has_sig": false, "md5_digest": "6a232e20be372dbde2853de056bca950", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117862, "upload_time": "2020-02-11T20:47:06", "upload_time_iso_8601": "2020-02-11T20:47:06.836304Z", "url": "https://files.pythonhosted.org/packages/26/7e/65aba8ca848f46263e49c40e50816d0586e617deb91ab127e5b1131123ee/azure-ai-textanalytics-1.0.0b2.zip", "yanked": false}], "1.0.0b3": [{"comment_text": "", "digests": {"md5": "d6d8e82d1793ebb532dbfa0f1b0a79ec", "sha256": "a1151a5a3247276f367e9bdb86563e48c2a7bbcd4418cee03f8a3b92cbfb3ca6"}, "downloads": -1, "filename": "azure_ai_textanalytics-1.0.0b3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d6d8e82d1793ebb532dbfa0f1b0a79ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 56363, "upload_time": "2020-03-10T18:37:59", "upload_time_iso_8601": "2020-03-10T18:37:59.722805Z", "url": "https://files.pythonhosted.org/packages/71/7c/9bde6e0c7356444a92670b2f89bec9b42581a2429b5962a20723b55f0f43/azure_ai_textanalytics-1.0.0b3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "936727c7888fa2422d37a90d001c9fb6", "sha256": "35dac2d9e602a98b0b9cd6e79fe57c293d78e4c31b71f9226e4bd1323999d0b6"}, "downloads": -1, "filename": "azure-ai-textanalytics-1.0.0b3.zip", "has_sig": false, "md5_digest": "936727c7888fa2422d37a90d001c9fb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 153511, "upload_time": "2020-03-10T18:38:01", "upload_time_iso_8601": "2020-03-10T18:38:01.723131Z", "url": "https://files.pythonhosted.org/packages/61/d1/3076df8bde17b3048c8c610b706d85e73d0dbd2f5bf65dbe4976a631b53b/azure-ai-textanalytics-1.0.0b3.zip", "yanked": false}], "1.0.0b4": [{"comment_text": "", "digests": {"md5": "9d8725a688bca824dc703c92562c6b6e", "sha256": "0d79f2a2a8af763e2834860bc9202d288b300b4e93f01f87db640407f070e404"}, "downloads": -1, "filename": "azure_ai_textanalytics-1.0.0b4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d8725a688bca824dc703c92562c6b6e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 54328, "upload_time": "2020-04-07T16:04:57", "upload_time_iso_8601": "2020-04-07T16:04:57.383036Z", "url": "https://files.pythonhosted.org/packages/a0/cd/38a707942ef5fea393c0dd9b9110606ecea61603dfdee1829f951d1dd45c/azure_ai_textanalytics-1.0.0b4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62dc64d51cc88fbb19fe9b7bc9b4d9aa", "sha256": "af811693b130301470e5c964958a64f1811a27a8d507fa70ffbec2c98454d341"}, "downloads": -1, "filename": "azure-ai-textanalytics-1.0.0b4.zip", "has_sig": false, "md5_digest": "62dc64d51cc88fbb19fe9b7bc9b4d9aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 145217, "upload_time": "2020-04-07T16:04:59", "upload_time_iso_8601": "2020-04-07T16:04:59.505516Z", "url": "https://files.pythonhosted.org/packages/5a/4a/0386e101f20afe878c87a689ae89ef6de7543e60f1c0a19be2b1bfdf4280/azure-ai-textanalytics-1.0.0b4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d8725a688bca824dc703c92562c6b6e", "sha256": "0d79f2a2a8af763e2834860bc9202d288b300b4e93f01f87db640407f070e404"}, "downloads": -1, "filename": "azure_ai_textanalytics-1.0.0b4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d8725a688bca824dc703c92562c6b6e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 54328, "upload_time": "2020-04-07T16:04:57", "upload_time_iso_8601": "2020-04-07T16:04:57.383036Z", "url": "https://files.pythonhosted.org/packages/a0/cd/38a707942ef5fea393c0dd9b9110606ecea61603dfdee1829f951d1dd45c/azure_ai_textanalytics-1.0.0b4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62dc64d51cc88fbb19fe9b7bc9b4d9aa", "sha256": "af811693b130301470e5c964958a64f1811a27a8d507fa70ffbec2c98454d341"}, "downloads": -1, "filename": "azure-ai-textanalytics-1.0.0b4.zip", "has_sig": false, "md5_digest": "62dc64d51cc88fbb19fe9b7bc9b4d9aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 145217, "upload_time": "2020-04-07T16:04:59", "upload_time_iso_8601": "2020-04-07T16:04:59.505516Z", "url": "https://files.pythonhosted.org/packages/5a/4a/0386e101f20afe878c87a689ae89ef6de7543e60f1c0a19be2b1bfdf4280/azure-ai-textanalytics-1.0.0b4.zip", "yanked": false}], "timestamp": "Thu May  7 18:15:28 2020"}