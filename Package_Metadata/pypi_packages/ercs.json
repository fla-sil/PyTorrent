{"info": {"author": "Jerome Kelleher", "author_email": "jerome.kelleher@ed.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "==============================================\nExtinction/recolonisation coalescent simulator\n==============================================\n\nSimulates the coalescent for populations evolving in a spatial \ncontinuum under the extinction/recolonisation model. The simulations \nsupport:\n        \n- A sample of ``n`` individuals with ``m`` loci at arbitrary locations on a \n  torus of diameter ``L``.\n- Arbitrary recombination rates between adjacent loci.\n- An arbitrary number of classes of event occuring at fixed\n  rates. \n\nErcs supports both Python 2 and 3.\n\n\n-------------\nDocumentation\n-------------\n\nHere's a quick example for the impatient::\n\n        import ercs\n        sim = ercs.Simulator(10)\n        sim.sample = [None, (3, 2), (6, 4), (7, 0)]\n        sim.event_classes = [ercs.DiscEventClass(u=0.5, r=1)]\n        pi, tau = sim.run(1)\n\nFull documentation for ``ercs`` is available at `<http://jeromekelleher.github.com/ercs>`_.\n\n------------\nInstallation\n------------\n\nErcs depends on the `GNU Scientific Library <http://www.gnu.org/software/gsl/>`_,\nwhich must be installed before the ``ercs`` module can be built.\nFortunately, this is straightforward on most platforms. For example, \non Debian or Ubuntu use::\n\n        $ sudo apt-get install libgsl0-dev\n\nor on Fedora::\n\n        $ sudo yum install gsl-devel\n\nGSL is available on most packaging systems; if it is not available on your\nplatform, it can be installed from source.\n\nOnce GSL has been installed we can build the ``ercs`` module using the \nstandard Python `methods <http://docs.python.org/install/index.html>`_. For \nexample, using pip we have ::\n        \n        $ sudo pip install ercs\n\nOr, we can manually download the package, unpack it and then run::\n        \n        $ python setup.py build\n        $ sudo python setup.py install\n\nMost of the time this will compile and install the module without difficulty.\n\nIt is also possible to download the latest development version of \n``ercs`` from `github <https://github.com/jeromekelleher/ercs>`_. \n\n******************\nPotential problems\n******************\n\nOn platforms that GSL is not available as part of the native packaging \nsystem (or GSL was installed locally because of non-root access)\nthere can be issues with finding the correct headers and libraries\nwhen compiling ``ercs``. For example, on FreeBSD we get something \nlike this::\n\n        $ python setup.py build\n        ... [Messages cut for brevity] ...\n        In file included from _ercsmodule.c:27:\n        lib/ercs.h:26:25: error: gsl/gsl_rng.h: No such file or directory\n        In file included from _ercsmodule.c:27:\n        lib/ercs.h:73: error: expected declaration specifiers or '...' before 'gsl_rng'\n        lib/ercs.h:94: error: expected specifier-qualifier-list before 'gsl_rng'\n        _ercsmodule.c: In function 'pyercs_simulate':\n        _ercsmodule.c:351: error: 'ercs_t' has no member named 'pi'\n        _ercsmodule.c:356: error: 'ercs_t' has no member named 'tau'\n        error: command 'cc' failed with exit status 1\n\nThis can be remedied by using the ``gsl-config`` program to set the \nthe ``LDFLAGS`` and ``CFLAGS`` environment variables to \ntheir correct values::\n        \n         $ CFLAGS=`gsl-config --cflags` LDFLAGS=`gsl-config --libs` python setup.py build\n\n*****\nTests\n*****\n\nErcs provides some test cases to ensure that the installation has gone smoothly.\nIt is a good idea to run these immediately after installation::\n\n        $ python tests.py\n\nIt is also possible to run some tests on the low-level C library.\nTo do this, ``cd`` to the ``lib`` directory and run::\n\n        $ make check \n\nThis will build the C library test cases and run them. If compilation fails, it \nmay be necessary set ``LDFLAGS`` and ``CFLAGS`` as before:: \n\n        $ make CFLAGS=\"`gsl-config --cflags`\" LDFLAGS=\"`gsl-config --libs`\" check \n\n\n****************\nTested platforms\n****************\n\nErcs has been successfully built and tested on the following platforms:\n\n================        ========        ======          ========\nOperating system        Platform        Python          Compiler\n================        ========        ======          ========\nUbuntu 8.04             i386            2.5.2           gcc 4.2.3 \nNetBSD 5.0              i386            2.7.3           gcc 4.1.3\nFedora 17               i386            2.7.3           gcc 4.7.2\nFedora 17               i386            3.2.3           gcc 4.7.2\nCygwin                  i386            2.6.8           gcc 4.5.3\nUbuntu 12.04            x86-64          2.7.3           gcc 4.6.3\nUbuntu 12.04            x86-64          3.2.3           gcc 4.6.3\nFreeBSD 9.0             i386            3.2.2           gcc 4.2.2        \nFreeBSD 9.0             i386            2.7.2           gcc 4.2.2        \nFreeBSD 9.0             i386            3.1.4           clang 3.0 \nSolaris 11              x86-64          2.6.4           Sun C 5.12\nMac OSX 10.6.8          x86-64          2.6.1           gcc 4.2.1\nMac OSX 10.6.8          x86-64          3.2.3           gcc 4.2.1\nMac OS X 10.4.11        ppc             3.2.3           gcc 4.0.1\nMac OS X 10.4.11        ppc             2.7.3           gcc 4.0.1\nDebian wheezy           armv6l          2.7.3           gcc 4.6.3\nDebian squeeze          ppc64           2.6.6           gcc 4.4.5\t\nDebian squeeze          ppc64           3.1.3           gcc 4.4.5\t\n================        ========        ======          ========\n\nThe C library has additionally been compiled and tested with the \nfollowing processors and compilers:\n\n==========================================        ========\nPlatform                                          Compiler\n==========================================        ========\nLinux 2.6.18-164.15.1.el5 x86_64 GNU/Linux        Intel(R) C 11.0\nLinux 2.6.32-5-amd64 x86_64 GNU/Linux             gcc 4.4.5\nLinux 2.6.32-5-amd64 x86_64 GNU/Linux             clang 1.1 \nLinux 3.2.0-32-generic x86_64 GNU/Linux           gcc 4.6.3\nLinux 3.2.0-32-generic x86_64 GNU/Linux           clang 3.0 \nLinux 3.2.27+ armv6l GNU/Linux                    gcc 4.6.3\nLinux 2.6.32-5-powerpc64 ppc64 GNU/Linux          gcc 4.4.5\nLinux 2.6.32-5-powerpc64 ppc64 GNU/Linux          clang 1.1 \nSunOS 5.11 11.0 i86pc i386 i86pc                  Sun C 5.12\nSunOS 5.10 sun4u sparc SUNW,Ultra-4               Sun C 5.8\n==========================================        ========", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/ercs", "keywords": "simulation,coalescent,continuous space,isolation by distance,population genetics,evolution", "license": "GNU GPLv3", "maintainer": null, "maintainer_email": null, "name": "ercs", "package_url": "https://pypi.org/project/ercs/", "platform": "POSIX", "project_url": "https://pypi.org/project/ercs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/ercs"}, "release_url": "https://pypi.org/project/ercs/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Coalescent simulations in continuous space", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simulates the coalescent for populations evolving in a spatial\ncontinuum under the extinction/recolonisation model. The simulations\nsupport:</p>\n<ul>\n<li>A sample of <tt>n</tt> individuals with <tt>m</tt> loci at arbitrary locations on a\ntorus of diameter <tt>L</tt>.</li>\n<li>Arbitrary recombination rates between adjacent loci.</li>\n<li>An arbitrary number of classes of event occuring at fixed\nrates.</li>\n</ul>\n<p>Ercs supports both Python 2 and 3.</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Here\u2019s a quick example for the impatient:</p>\n<pre>import ercs\nsim = ercs.Simulator(10)\nsim.sample = [None, (3, 2), (6, 4), (7, 0)]\nsim.event_classes = [ercs.DiscEventClass(u=0.5, r=1)]\npi, tau = sim.run(1)\n</pre>\n<p>Full documentation for <tt>ercs</tt> is available at <a href=\"http://jeromekelleher.github.com/ercs\" rel=\"nofollow\">http://jeromekelleher.github.com/ercs</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Ercs depends on the <a href=\"http://www.gnu.org/software/gsl/\" rel=\"nofollow\">GNU Scientific Library</a>,\nwhich must be installed before the <tt>ercs</tt> module can be built.\nFortunately, this is straightforward on most platforms. For example,\non Debian or Ubuntu use:</p>\n<pre>$ sudo apt-get install libgsl0-dev\n</pre>\n<p>or on Fedora:</p>\n<pre>$ sudo yum install gsl-devel\n</pre>\n<p>GSL is available on most packaging systems; if it is not available on your\nplatform, it can be installed from source.</p>\n<p>Once GSL has been installed we can build the <tt>ercs</tt> module using the\nstandard Python <a href=\"http://docs.python.org/install/index.html\" rel=\"nofollow\">methods</a>. For\nexample, using pip we have</p>\n<pre>$ sudo pip install ercs\n</pre>\n<p>Or, we can manually download the package, unpack it and then run:</p>\n<pre>$ python setup.py build\n$ sudo python setup.py install\n</pre>\n<p>Most of the time this will compile and install the module without difficulty.</p>\n<p>It is also possible to download the latest development version of\n<tt>ercs</tt> from <a href=\"https://github.com/jeromekelleher/ercs\" rel=\"nofollow\">github</a>.</p>\n<div id=\"potential-problems\">\n<h3>Potential problems</h3>\n<p>On platforms that GSL is not available as part of the native packaging\nsystem (or GSL was installed locally because of non-root access)\nthere can be issues with finding the correct headers and libraries\nwhen compiling <tt>ercs</tt>. For example, on FreeBSD we get something\nlike this:</p>\n<pre>$ python setup.py build\n... [Messages cut for brevity] ...\nIn file included from _ercsmodule.c:27:\nlib/ercs.h:26:25: error: gsl/gsl_rng.h: No such file or directory\nIn file included from _ercsmodule.c:27:\nlib/ercs.h:73: error: expected declaration specifiers or '...' before 'gsl_rng'\nlib/ercs.h:94: error: expected specifier-qualifier-list before 'gsl_rng'\n_ercsmodule.c: In function 'pyercs_simulate':\n_ercsmodule.c:351: error: 'ercs_t' has no member named 'pi'\n_ercsmodule.c:356: error: 'ercs_t' has no member named 'tau'\nerror: command 'cc' failed with exit status 1\n</pre>\n<p>This can be remedied by using the <tt><span class=\"pre\">gsl-config</span></tt> program to set the\nthe <tt>LDFLAGS</tt> and <tt>CFLAGS</tt> environment variables to\ntheir correct values:</p>\n<pre>$ CFLAGS=`gsl-config --cflags` LDFLAGS=`gsl-config --libs` python setup.py build\n</pre>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>Ercs provides some test cases to ensure that the installation has gone smoothly.\nIt is a good idea to run these immediately after installation:</p>\n<pre>$ python tests.py\n</pre>\n<p>It is also possible to run some tests on the low-level C library.\nTo do this, <tt>cd</tt> to the <tt>lib</tt> directory and run:</p>\n<pre>$ make check\n</pre>\n<p>This will build the C library test cases and run them. If compilation fails, it\nmay be necessary set <tt>LDFLAGS</tt> and <tt>CFLAGS</tt> as before:</p>\n<pre>$ make CFLAGS=\"`gsl-config --cflags`\" LDFLAGS=\"`gsl-config --libs`\" check\n</pre>\n</div>\n<div id=\"tested-platforms\">\n<h3>Tested platforms</h3>\n<p>Ercs has been successfully built and tested on the following platforms:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Operating system</th>\n<th>Platform</th>\n<th>Python</th>\n<th>Compiler</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Ubuntu 8.04</td>\n<td>i386</td>\n<td>2.5.2</td>\n<td>gcc 4.2.3</td>\n</tr>\n<tr><td>NetBSD 5.0</td>\n<td>i386</td>\n<td>2.7.3</td>\n<td>gcc 4.1.3</td>\n</tr>\n<tr><td>Fedora 17</td>\n<td>i386</td>\n<td>2.7.3</td>\n<td>gcc 4.7.2</td>\n</tr>\n<tr><td>Fedora 17</td>\n<td>i386</td>\n<td>3.2.3</td>\n<td>gcc 4.7.2</td>\n</tr>\n<tr><td>Cygwin</td>\n<td>i386</td>\n<td>2.6.8</td>\n<td>gcc 4.5.3</td>\n</tr>\n<tr><td>Ubuntu 12.04</td>\n<td>x86-64</td>\n<td>2.7.3</td>\n<td>gcc 4.6.3</td>\n</tr>\n<tr><td>Ubuntu 12.04</td>\n<td>x86-64</td>\n<td>3.2.3</td>\n<td>gcc 4.6.3</td>\n</tr>\n<tr><td>FreeBSD 9.0</td>\n<td>i386</td>\n<td>3.2.2</td>\n<td>gcc 4.2.2</td>\n</tr>\n<tr><td>FreeBSD 9.0</td>\n<td>i386</td>\n<td>2.7.2</td>\n<td>gcc 4.2.2</td>\n</tr>\n<tr><td>FreeBSD 9.0</td>\n<td>i386</td>\n<td>3.1.4</td>\n<td>clang 3.0</td>\n</tr>\n<tr><td>Solaris 11</td>\n<td>x86-64</td>\n<td>2.6.4</td>\n<td>Sun C 5.12</td>\n</tr>\n<tr><td>Mac OSX 10.6.8</td>\n<td>x86-64</td>\n<td>2.6.1</td>\n<td>gcc 4.2.1</td>\n</tr>\n<tr><td>Mac OSX 10.6.8</td>\n<td>x86-64</td>\n<td>3.2.3</td>\n<td>gcc 4.2.1</td>\n</tr>\n<tr><td>Mac OS X 10.4.11</td>\n<td>ppc</td>\n<td>3.2.3</td>\n<td>gcc 4.0.1</td>\n</tr>\n<tr><td>Mac OS X 10.4.11</td>\n<td>ppc</td>\n<td>2.7.3</td>\n<td>gcc 4.0.1</td>\n</tr>\n<tr><td>Debian wheezy</td>\n<td>armv6l</td>\n<td>2.7.3</td>\n<td>gcc 4.6.3</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>ppc64</td>\n<td>2.6.6</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>ppc64</td>\n<td>3.1.3</td>\n<td>gcc 4.4.5</td>\n</tr>\n</tbody>\n</table>\n<p>The C library has additionally been compiled and tested with the\nfollowing processors and compilers:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Platform</th>\n<th>Compiler</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Linux 2.6.18-164.15.1.el5 x86_64 GNU/Linux</td>\n<td>Intel(R) C 11.0</td>\n</tr>\n<tr><td>Linux 2.6.32-5-amd64 x86_64 GNU/Linux</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Linux 2.6.32-5-amd64 x86_64 GNU/Linux</td>\n<td>clang 1.1</td>\n</tr>\n<tr><td>Linux 3.2.0-32-generic x86_64 GNU/Linux</td>\n<td>gcc 4.6.3</td>\n</tr>\n<tr><td>Linux 3.2.0-32-generic x86_64 GNU/Linux</td>\n<td>clang 3.0</td>\n</tr>\n<tr><td>Linux 3.2.27+ armv6l GNU/Linux</td>\n<td>gcc 4.6.3</td>\n</tr>\n<tr><td>Linux 2.6.32-5-powerpc64 ppc64 GNU/Linux</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Linux 2.6.32-5-powerpc64 ppc64 GNU/Linux</td>\n<td>clang 1.1</td>\n</tr>\n<tr><td>SunOS 5.11 11.0 i86pc i386 i86pc</td>\n<td>Sun C 5.12</td>\n</tr>\n<tr><td>SunOS 5.10 sun4u sparc SUNW,Ultra-4</td>\n<td>Sun C 5.8</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 740288, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "28d62c567f7bf9de04d974580aa208f1", "sha256": "eb5a63995583c9261895ff9a332e35aaba1ca47e28dcc5abdddec79bb3d674e3"}, "downloads": -1, "filename": "ercs-1.0.1.tar.gz", "has_sig": false, "md5_digest": "28d62c567f7bf9de04d974580aa208f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127060, "upload_time": "2013-01-30T14:18:36", "upload_time_iso_8601": "2013-01-30T14:18:36.400064Z", "url": "https://files.pythonhosted.org/packages/ca/e1/cb1d6d5cf885b4062d60d16efb282d5c83ff4179eea64ca1920d0b58d27a/ercs-1.0.1.tar.gz", "yanked": false}], "1.0.1b1": [{"comment_text": "", "digests": {"md5": "a40160ae780177b26cce4d8727fcb175", "sha256": "f31a74762550df61d3a1f60aa7705f7ec347ef0254c1cd4487d304ecf5bfac96"}, "downloads": -1, "filename": "ercs-1.0.1b1.tar.gz", "has_sig": false, "md5_digest": "a40160ae780177b26cce4d8727fcb175", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101137, "upload_time": "2012-11-16T16:13:37", "upload_time_iso_8601": "2012-11-16T16:13:37.307853Z", "url": "https://files.pythonhosted.org/packages/9f/a0/6958300d313d7a30e967244871e8d863d9a586c976fa119dbd73f2cb5ace/ercs-1.0.1b1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28d62c567f7bf9de04d974580aa208f1", "sha256": "eb5a63995583c9261895ff9a332e35aaba1ca47e28dcc5abdddec79bb3d674e3"}, "downloads": -1, "filename": "ercs-1.0.1.tar.gz", "has_sig": false, "md5_digest": "28d62c567f7bf9de04d974580aa208f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127060, "upload_time": "2013-01-30T14:18:36", "upload_time_iso_8601": "2013-01-30T14:18:36.400064Z", "url": "https://files.pythonhosted.org/packages/ca/e1/cb1d6d5cf885b4062d60d16efb282d5c83ff4179eea64ca1920d0b58d27a/ercs-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:49 2020"}