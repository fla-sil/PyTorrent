{"info": {"author": "Nikita Chistikov", "author_email": "chistikov@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "pychrone\n=============\n\n.. image:: https://api.travis-ci.org/headshaker/pychrone.svg?branch=master\n   :target: http://travis-ci.org/headshaker/pychrone\n.. image:: https://img.shields.io/pypi/v/pychrone.svg\n   :target: https://pypi.python.org/pypi/pychrone\n.. image:: https://img.shields.io/pypi/pyversions/pychrone.svg\n   :target: https://pypi.python.org/pypi/pychrone\n\nPython 3 module for generatings isochrones from point\n\n\nHistory\n-------\n\n0.0.2 - Added several types of isochrone generation: walking, driving or biking.\n\n0.0.1 - Initial version, only walking isochrones supported.\n\nHow to install\n--------------\n\nYou can install ``pychrone`` using ``pip``:\n\n::\n\n   pip install -U pychrone\n\nor via sources:\n\n::\n\n   python setup.py install\n\nIf you have serveral python versions installed you will probably use ``pip3`` and ``python3`` commands accordingly.\n\n\n\nFeatures\n--------\n\nThis module generates `isochrone <https://en.wiktionary.org/wiki/isochrone>`__ from the set point with defined latitude and longtitude with defined time.\n\nAll details of walking routes and coordinates are from OpenStreetMap, so you will need an internet connection for this module to work.\n\nAlso module will try to optimize isochrone shape with `\u03b1-shape algorithm <https://en.wikipedia.org/wiki/Alpha_shape>`__ to make it more natural and clean.\n\nMain function of module takes the following arguments:\n\n**Create_isochrone(** *longtitude, latitude, speed=4.5, output=\"geojson\", route=\"walk\"* **)**\n\n- *longitude* - longitude of point to create isochrone from;\n- *latitude* - latitude of point to create isochrone from;\n- *speed* - pedestrian speed in km/h, default is 4.5;\n- *output* - output format, default is \"geojson\", wich generates valid `GeoJSON <http://geojson.org>`__ polygon. Other option is \"shape\", that generates `Shapely <http://shapely.readthedocs.io/>`__ object;\n- *route* - type of routing for isochrone generation. Default is \"walk\", that means that isochrone will be generated for pedestrians. Other possible options are \"drive\" (for cars) and \"bike\" (for bikes).\n\nUsage:\n------\n\nIn this small example ``pychrone`` will return 5-minute walking isochrone from point with coordinates (37.847591, 55.920284) in GeoJSON format assuming pedestrian speed as 4.5 km/h:\n\n``IN:``\n\n.. code:: python\n\n   from pychrone import Create_isochrone\n\n   Create_isochrone(37.847591, 55.920284, 5)\n\n``OUT:``\n\n.. code:: json\n\n   {\"coordinates\": [[[37.8460729, 55.9174363], [37.8464059, 55.9175894], [37.847672, 55.9178994], [37.8485452, 55.9179112], [37.8489915, 55.9179172], [37.8490785, 55.9179534], [37.8502528, 55.918252], [37.8508537, 55.9190215], [37.8521326, 55.9193121], [37.8523401, 55.9195966], [37.8523826, 55.9196535], [37.8526471, 55.920433], [37.8527015, 55.9206193], [37.852584, 55.9210867], [37.8512857, 55.9218685], [37.8500913, 55.9216824], [37.8481064, 55.9218883], [37.8480311, 55.9218827], [37.8464856, 55.9216235], [37.8458339, 55.9220129], [37.8452347, 55.9223078], [37.8451153, 55.9223076], [37.843753, 55.9214498], [37.8434385, 55.9211565], [37.8432352, 55.9210091], [37.843344, 55.9201537], [37.8436392, 55.9200188], [37.8442215, 55.9195563], [37.8445491, 55.9189478], [37.8453806, 55.9179848], [37.8458505, 55.9173872], [37.8460729, 55.9174363]]], \"type\": \"Polygon\"}\n\n\nAnd here we will build a 5-minute biking isochrone from the same point in GeoJSON format assuming bike speed as 15 km/h:\n\n``IN:``\n\n.. code:: python\n\n   from pychrone import Create_isochrone\n\n   Create_isochrone(37.847591, 55.920284, 5, speed=15, route='bike')\n\n``OUT:``\n\n.. code:: json\n\n   {\"coordinates\": [[[37.8567192, 55.9159054], [37.8566902, 55.917482], [37.8574327, 55.9183582], [37.8596827, 55.9179265], [37.8606264, 55.9174921], [37.8607145, 55.9174898], [37.8616878, 55.9182527], [37.8623098, 55.9184031], [37.8623315, 55.9186923], [37.8623347, 55.9187348], [37.8617334, 55.9187584], [37.8601876, 55.9216012], [37.8601928, 55.9216375], [37.8625041, 55.9234816], [37.8606823, 55.9239551], [37.8602133, 55.9240344], [37.859944, 55.9240621], [37.8596538, 55.9240835], [37.858323, 55.9265212], [37.858095, 55.9258876], [37.8579296, 55.9254856], [37.8577715, 55.9252287], [37.857535, 55.9249517], [37.8571648, 55.9246052], [37.8570523, 55.9244923], [37.8567998, 55.9242646], [37.8564721, 55.9239992], [37.8551838, 55.9236002], [37.8550675, 55.9236167], [37.854535, 55.9236923], [37.8539227, 55.9237794], [37.8537368, 55.9238044], [37.8517414, 55.9236685], [37.8506852, 55.9233489], [37.8503534, 55.9223657], [37.8481771, 55.9215311], [37.8461656, 55.9213583], [37.8453504, 55.9211411], [37.8434385, 55.9211565], [37.8424404, 55.922531], [37.8414824, 55.9219328], [37.839682, 55.9204985], [37.8381736, 55.919545], [37.8379558, 55.9195288], [37.8378175, 55.9195185], [37.8368864, 55.9194489], [37.8355386, 55.9177032], [37.8349836, 55.9175541], [37.8351224, 55.9173399], [37.8353122, 55.91707], [37.8354487, 55.9168568], [37.8357087, 55.9170776], [37.8382045, 55.9171129], [37.8392138, 55.9171165], [37.8404943, 55.9171611], [37.8418891, 55.9172097], [37.8435035, 55.915587], [37.8435064, 55.9154623], [37.841976, 55.9137454], [37.8421039, 55.9136196], [37.842337, 55.9138113], [37.8445747, 55.9138635], [37.8453206, 55.9139934], [37.8453969, 55.9139946], [37.8456471, 55.9139985], [37.8458805, 55.9140022], [37.8461503, 55.9140065], [37.8466495, 55.9139142], [37.8470988, 55.9138738], [37.8472903, 55.9138372], [37.8485149, 55.9145846], [37.8494446, 55.9152114], [37.8494888, 55.9152412], [37.850287, 55.9162542], [37.8526657, 55.9159628], [37.8546403, 55.9159654], [37.8549614, 55.9159579], [37.8565237, 55.9159109], [37.8566544, 55.915907], [37.8567192, 55.9159054]]], \"type\": \"Polygon\"}\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/headshaker/pychrone", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pychrone", "package_url": "https://pypi.org/project/pychrone/", "platform": "", "project_url": "https://pypi.org/project/pychrone/", "project_urls": {"Homepage": "https://github.com/headshaker/pychrone"}, "release_url": "https://pypi.org/project/pychrone/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Small python module for building isochrones", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/headshaker/pychrone\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/headshaker/pychrone.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/916dd2bd5182def4d005f11e5bc0d255bbeb46ea/68747470733a2f2f6170692e7472617669732d63692e6f72672f686561647368616b65722f70796368726f6e652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/pychrone\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pychrone.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ddd4b7efad958669af9798729e58cec86fd8387/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796368726f6e652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pychrone\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pychrone.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efa3c43203516c43df8ac145e15fb530a610b569/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796368726f6e652e737667\"></a>\n<p>Python 3 module for generatings isochrones from point</p>\n<div id=\"history\">\n<h2>History</h2>\n<p>0.0.2 - Added several types of isochrone generation: walking, driving or biking.</p>\n<p>0.0.1 - Initial version, only walking isochrones supported.</p>\n</div>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<p>You can install <tt>pychrone</tt> using <tt>pip</tt>:</p>\n<pre>pip install -U pychrone\n</pre>\n<p>or via sources:</p>\n<pre>python setup.py install\n</pre>\n<p>If you have serveral python versions installed you will probably use <tt>pip3</tt> and <tt>python3</tt> commands accordingly.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>This module generates <a href=\"https://en.wiktionary.org/wiki/isochrone\" rel=\"nofollow\">isochrone</a> from the set point with defined latitude and longtitude with defined time.</p>\n<p>All details of walking routes and coordinates are from OpenStreetMap, so you will need an internet connection for this module to work.</p>\n<p>Also module will try to optimize isochrone shape with <a href=\"https://en.wikipedia.org/wiki/Alpha_shape\" rel=\"nofollow\">\u03b1-shape algorithm</a> to make it more natural and clean.</p>\n<p>Main function of module takes the following arguments:</p>\n<p><strong>Create_isochrone(</strong> <em>longtitude, latitude, speed=4.5, output=\u201dgeojson\u201d, route=\u201dwalk\u201d</em> <strong>)</strong></p>\n<ul>\n<li><em>longitude</em> - longitude of point to create isochrone from;</li>\n<li><em>latitude</em> - latitude of point to create isochrone from;</li>\n<li><em>speed</em> - pedestrian speed in km/h, default is 4.5;</li>\n<li><em>output</em> - output format, default is \u201cgeojson\u201d, wich generates valid <a href=\"http://geojson.org\" rel=\"nofollow\">GeoJSON</a> polygon. Other option is \u201cshape\u201d, that generates <a href=\"http://shapely.readthedocs.io/\" rel=\"nofollow\">Shapely</a> object;</li>\n<li><em>route</em> - type of routing for isochrone generation. Default is \u201cwalk\u201d, that means that isochrone will be generated for pedestrians. Other possible options are \u201cdrive\u201d (for cars) and \u201cbike\u201d (for bikes).</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<p>In this small example <tt>pychrone</tt> will return 5-minute walking isochrone from point with coordinates (37.847591, 55.920284) in GeoJSON format assuming pedestrian speed as 4.5 km/h:</p>\n<p><tt>IN:</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pychrone</span> <span class=\"kn\">import</span> <span class=\"n\">Create_isochrone</span>\n\n<span class=\"n\">Create_isochrone</span><span class=\"p\">(</span><span class=\"mf\">37.847591</span><span class=\"p\">,</span> <span class=\"mf\">55.920284</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p><tt>OUT:</tt></p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"coordinates\"</span><span class=\"p\">:</span> <span class=\"p\">[[[</span><span class=\"mf\">37.8460729</span><span class=\"p\">,</span> <span class=\"mf\">55.9174363</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8464059</span><span class=\"p\">,</span> <span class=\"mf\">55.9175894</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.847672</span><span class=\"p\">,</span> <span class=\"mf\">55.9178994</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8485452</span><span class=\"p\">,</span> <span class=\"mf\">55.9179112</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8489915</span><span class=\"p\">,</span> <span class=\"mf\">55.9179172</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8490785</span><span class=\"p\">,</span> <span class=\"mf\">55.9179534</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8502528</span><span class=\"p\">,</span> <span class=\"mf\">55.918252</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8508537</span><span class=\"p\">,</span> <span class=\"mf\">55.9190215</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8521326</span><span class=\"p\">,</span> <span class=\"mf\">55.9193121</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8523401</span><span class=\"p\">,</span> <span class=\"mf\">55.9195966</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8523826</span><span class=\"p\">,</span> <span class=\"mf\">55.9196535</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8526471</span><span class=\"p\">,</span> <span class=\"mf\">55.920433</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8527015</span><span class=\"p\">,</span> <span class=\"mf\">55.9206193</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.852584</span><span class=\"p\">,</span> <span class=\"mf\">55.9210867</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8512857</span><span class=\"p\">,</span> <span class=\"mf\">55.9218685</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8500913</span><span class=\"p\">,</span> <span class=\"mf\">55.9216824</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8481064</span><span class=\"p\">,</span> <span class=\"mf\">55.9218883</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8480311</span><span class=\"p\">,</span> <span class=\"mf\">55.9218827</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8464856</span><span class=\"p\">,</span> <span class=\"mf\">55.9216235</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8458339</span><span class=\"p\">,</span> <span class=\"mf\">55.9220129</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8452347</span><span class=\"p\">,</span> <span class=\"mf\">55.9223078</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8451153</span><span class=\"p\">,</span> <span class=\"mf\">55.9223076</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.843753</span><span class=\"p\">,</span> <span class=\"mf\">55.9214498</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8434385</span><span class=\"p\">,</span> <span class=\"mf\">55.9211565</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8432352</span><span class=\"p\">,</span> <span class=\"mf\">55.9210091</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.843344</span><span class=\"p\">,</span> <span class=\"mf\">55.9201537</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8436392</span><span class=\"p\">,</span> <span class=\"mf\">55.9200188</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8442215</span><span class=\"p\">,</span> <span class=\"mf\">55.9195563</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8445491</span><span class=\"p\">,</span> <span class=\"mf\">55.9189478</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8453806</span><span class=\"p\">,</span> <span class=\"mf\">55.9179848</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8458505</span><span class=\"p\">,</span> <span class=\"mf\">55.9173872</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8460729</span><span class=\"p\">,</span> <span class=\"mf\">55.9174363</span><span class=\"p\">]]],</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Polygon\"</span><span class=\"p\">}</span>\n</pre>\n<p>And here we will build a 5-minute biking isochrone from the same point in GeoJSON format assuming bike speed as 15 km/h:</p>\n<p><tt>IN:</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pychrone</span> <span class=\"kn\">import</span> <span class=\"n\">Create_isochrone</span>\n\n<span class=\"n\">Create_isochrone</span><span class=\"p\">(</span><span class=\"mf\">37.847591</span><span class=\"p\">,</span> <span class=\"mf\">55.920284</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">speed</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"n\">route</span><span class=\"o\">=</span><span class=\"s1\">'bike'</span><span class=\"p\">)</span>\n</pre>\n<p><tt>OUT:</tt></p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"coordinates\"</span><span class=\"p\">:</span> <span class=\"p\">[[[</span><span class=\"mf\">37.8567192</span><span class=\"p\">,</span> <span class=\"mf\">55.9159054</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8566902</span><span class=\"p\">,</span> <span class=\"mf\">55.917482</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8574327</span><span class=\"p\">,</span> <span class=\"mf\">55.9183582</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8596827</span><span class=\"p\">,</span> <span class=\"mf\">55.9179265</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8606264</span><span class=\"p\">,</span> <span class=\"mf\">55.9174921</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8607145</span><span class=\"p\">,</span> <span class=\"mf\">55.9174898</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8616878</span><span class=\"p\">,</span> <span class=\"mf\">55.9182527</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8623098</span><span class=\"p\">,</span> <span class=\"mf\">55.9184031</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8623315</span><span class=\"p\">,</span> <span class=\"mf\">55.9186923</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8623347</span><span class=\"p\">,</span> <span class=\"mf\">55.9187348</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8617334</span><span class=\"p\">,</span> <span class=\"mf\">55.9187584</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8601876</span><span class=\"p\">,</span> <span class=\"mf\">55.9216012</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8601928</span><span class=\"p\">,</span> <span class=\"mf\">55.9216375</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8625041</span><span class=\"p\">,</span> <span class=\"mf\">55.9234816</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8606823</span><span class=\"p\">,</span> <span class=\"mf\">55.9239551</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8602133</span><span class=\"p\">,</span> <span class=\"mf\">55.9240344</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.859944</span><span class=\"p\">,</span> <span class=\"mf\">55.9240621</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8596538</span><span class=\"p\">,</span> <span class=\"mf\">55.9240835</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.858323</span><span class=\"p\">,</span> <span class=\"mf\">55.9265212</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.858095</span><span class=\"p\">,</span> <span class=\"mf\">55.9258876</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8579296</span><span class=\"p\">,</span> <span class=\"mf\">55.9254856</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8577715</span><span class=\"p\">,</span> <span class=\"mf\">55.9252287</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.857535</span><span class=\"p\">,</span> <span class=\"mf\">55.9249517</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8571648</span><span class=\"p\">,</span> <span class=\"mf\">55.9246052</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8570523</span><span class=\"p\">,</span> <span class=\"mf\">55.9244923</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8567998</span><span class=\"p\">,</span> <span class=\"mf\">55.9242646</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8564721</span><span class=\"p\">,</span> <span class=\"mf\">55.9239992</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8551838</span><span class=\"p\">,</span> <span class=\"mf\">55.9236002</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8550675</span><span class=\"p\">,</span> <span class=\"mf\">55.9236167</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.854535</span><span class=\"p\">,</span> <span class=\"mf\">55.9236923</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8539227</span><span class=\"p\">,</span> <span class=\"mf\">55.9237794</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8537368</span><span class=\"p\">,</span> <span class=\"mf\">55.9238044</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8517414</span><span class=\"p\">,</span> <span class=\"mf\">55.9236685</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8506852</span><span class=\"p\">,</span> <span class=\"mf\">55.9233489</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8503534</span><span class=\"p\">,</span> <span class=\"mf\">55.9223657</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8481771</span><span class=\"p\">,</span> <span class=\"mf\">55.9215311</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8461656</span><span class=\"p\">,</span> <span class=\"mf\">55.9213583</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8453504</span><span class=\"p\">,</span> <span class=\"mf\">55.9211411</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8434385</span><span class=\"p\">,</span> <span class=\"mf\">55.9211565</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8424404</span><span class=\"p\">,</span> <span class=\"mf\">55.922531</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8414824</span><span class=\"p\">,</span> <span class=\"mf\">55.9219328</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.839682</span><span class=\"p\">,</span> <span class=\"mf\">55.9204985</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8381736</span><span class=\"p\">,</span> <span class=\"mf\">55.919545</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8379558</span><span class=\"p\">,</span> <span class=\"mf\">55.9195288</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8378175</span><span class=\"p\">,</span> <span class=\"mf\">55.9195185</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8368864</span><span class=\"p\">,</span> <span class=\"mf\">55.9194489</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8355386</span><span class=\"p\">,</span> <span class=\"mf\">55.9177032</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8349836</span><span class=\"p\">,</span> <span class=\"mf\">55.9175541</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8351224</span><span class=\"p\">,</span> <span class=\"mf\">55.9173399</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8353122</span><span class=\"p\">,</span> <span class=\"mf\">55.91707</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8354487</span><span class=\"p\">,</span> <span class=\"mf\">55.9168568</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8357087</span><span class=\"p\">,</span> <span class=\"mf\">55.9170776</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8382045</span><span class=\"p\">,</span> <span class=\"mf\">55.9171129</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8392138</span><span class=\"p\">,</span> <span class=\"mf\">55.9171165</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8404943</span><span class=\"p\">,</span> <span class=\"mf\">55.9171611</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8418891</span><span class=\"p\">,</span> <span class=\"mf\">55.9172097</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8435035</span><span class=\"p\">,</span> <span class=\"mf\">55.915587</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8435064</span><span class=\"p\">,</span> <span class=\"mf\">55.9154623</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.841976</span><span class=\"p\">,</span> <span class=\"mf\">55.9137454</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8421039</span><span class=\"p\">,</span> <span class=\"mf\">55.9136196</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.842337</span><span class=\"p\">,</span> <span class=\"mf\">55.9138113</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8445747</span><span class=\"p\">,</span> <span class=\"mf\">55.9138635</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8453206</span><span class=\"p\">,</span> <span class=\"mf\">55.9139934</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8453969</span><span class=\"p\">,</span> <span class=\"mf\">55.9139946</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8456471</span><span class=\"p\">,</span> <span class=\"mf\">55.9139985</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8458805</span><span class=\"p\">,</span> <span class=\"mf\">55.9140022</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8461503</span><span class=\"p\">,</span> <span class=\"mf\">55.9140065</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8466495</span><span class=\"p\">,</span> <span class=\"mf\">55.9139142</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8470988</span><span class=\"p\">,</span> <span class=\"mf\">55.9138738</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8472903</span><span class=\"p\">,</span> <span class=\"mf\">55.9138372</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8485149</span><span class=\"p\">,</span> <span class=\"mf\">55.9145846</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8494446</span><span class=\"p\">,</span> <span class=\"mf\">55.9152114</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8494888</span><span class=\"p\">,</span> <span class=\"mf\">55.9152412</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.850287</span><span class=\"p\">,</span> <span class=\"mf\">55.9162542</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8526657</span><span class=\"p\">,</span> <span class=\"mf\">55.9159628</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8546403</span><span class=\"p\">,</span> <span class=\"mf\">55.9159654</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8549614</span><span class=\"p\">,</span> <span class=\"mf\">55.9159579</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8565237</span><span class=\"p\">,</span> <span class=\"mf\">55.9159109</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8566544</span><span class=\"p\">,</span> <span class=\"mf\">55.915907</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">37.8567192</span><span class=\"p\">,</span> <span class=\"mf\">55.9159054</span><span class=\"p\">]]],</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Polygon\"</span><span class=\"p\">}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4432547, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "813ed8c9dd714eb1a226f7c6fa1caac9", "sha256": "db7ed82a0e6cf325da6c7c0a08905a107eada4b8db0da8eabf529ab49fa6936f"}, "downloads": -1, "filename": "pychrone-0.0.1.tar.gz", "has_sig": false, "md5_digest": "813ed8c9dd714eb1a226f7c6fa1caac9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3465, "upload_time": "2018-07-02T12:32:39", "upload_time_iso_8601": "2018-07-02T12:32:39.096092Z", "url": "https://files.pythonhosted.org/packages/8b/fa/06ce7641335e90ab0718a4eaf2d62ddef2a2e11e65a766471c6d2af3ba9e/pychrone-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9461f87620a9bf5c76e2295730464685", "sha256": "574658fc2a3b4b6cfbcc52c2a3462a9234fadf99a15e548a0a4ea09635cf6d26"}, "downloads": -1, "filename": "pychrone-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9461f87620a9bf5c76e2295730464685", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4753, "upload_time": "2018-07-03T08:01:00", "upload_time_iso_8601": "2018-07-03T08:01:00.075245Z", "url": "https://files.pythonhosted.org/packages/0d/51/ee05703fe4a68fea01bcee4aee912cbd33d418a499c4df1b205d9ad32aad/pychrone-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5701eb2603eb7ebe35117ba76f2cd3cc", "sha256": "98757822106bf22469abbb59fe10ec8a31bb5e090de6735ccef68d01d7a72138"}, "downloads": -1, "filename": "pychrone-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5701eb2603eb7ebe35117ba76f2cd3cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5914, "upload_time": "2018-10-30T18:05:53", "upload_time_iso_8601": "2018-10-30T18:05:53.656673Z", "url": "https://files.pythonhosted.org/packages/13/91/c2d5a01f1ffb3c325f981a9230d479e0623450e14db171f1c0807491c5d5/pychrone-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99905fe753128040c54777945d4114d1", "sha256": "49289f63a90a1b67ca214cf23fc5de0f3a538b92bf46540f3cab069b7adc8a27"}, "downloads": -1, "filename": "pychrone-0.0.3.tar.gz", "has_sig": false, "md5_digest": "99905fe753128040c54777945d4114d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4760, "upload_time": "2018-10-30T18:05:54", "upload_time_iso_8601": "2018-10-30T18:05:54.745032Z", "url": "https://files.pythonhosted.org/packages/6e/cb/088f31605e4335155fc2060963a354b16fcbfa84266053bb4bfa0a98656d/pychrone-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5701eb2603eb7ebe35117ba76f2cd3cc", "sha256": "98757822106bf22469abbb59fe10ec8a31bb5e090de6735ccef68d01d7a72138"}, "downloads": -1, "filename": "pychrone-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5701eb2603eb7ebe35117ba76f2cd3cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5914, "upload_time": "2018-10-30T18:05:53", "upload_time_iso_8601": "2018-10-30T18:05:53.656673Z", "url": "https://files.pythonhosted.org/packages/13/91/c2d5a01f1ffb3c325f981a9230d479e0623450e14db171f1c0807491c5d5/pychrone-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99905fe753128040c54777945d4114d1", "sha256": "49289f63a90a1b67ca214cf23fc5de0f3a538b92bf46540f3cab069b7adc8a27"}, "downloads": -1, "filename": "pychrone-0.0.3.tar.gz", "has_sig": false, "md5_digest": "99905fe753128040c54777945d4114d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4760, "upload_time": "2018-10-30T18:05:54", "upload_time_iso_8601": "2018-10-30T18:05:54.745032Z", "url": "https://files.pythonhosted.org/packages/6e/cb/088f31605e4335155fc2060963a354b16fcbfa84266053bb4bfa0a98656d/pychrone-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:30 2020"}