{"info": {"author": "IIIF Contributors", "author_email": "simeon.warner@cornell.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==============\nIIIF Validator\n==============\n\n.. image:: https://travis-ci.org/IIIF/image-validator.svg?branch=master\n  :target: https://travis-ci.org/IIIF/image-validator\n    \n.. image:: https://coveralls.io/repos/github/IIIF/image-validator/badge.svg?branch=master\n  :target: https://coveralls.io/github/IIIF/image-validator?branch=master\n\n\nThis validator supports the same validations that are available on the\n`IIIF\n<http://iiif.io/>`_ website at\n`<http://iiif.io/api/image/validator/>`_.\n\n\nInstallation\n------------\n\nInstallation from pypi\n~~~~~~~~~~~~~~~~~~~~~~\n\nThe following should install scripts, library, and the necessary dependencies::\n\n   pip install iiif-validator\n\nManual installation\n~~~~~~~~~~~~~~~~~~~\n\nInstallation from `source code\n<https://github.com/IIIF/image-validator>` can de done with::\n\n   python setup.py install\n\nwhich should install scripts, library, and the necessary dependencies. Note that ``setup.py`` includes directives to pin certain libraries to particular versions for compatibility.\n\nThe ``python-magic`` module requires ``libmagic`` which, on a mac, one can install with::\n\n    brew install libmagic\n\n\nCommand line validator, ``iiif-validate.py``\n--------------------------------------------\n\nThen for an image served at ``http://localhost:8000/prefix/image_id``\nthe validator can be run with::\n\n    iiif-validate.py -s localhost:8000 -p prefix -i image_id --version=2.0 -v\n\nor similar to validate server with the test image. Use\n``iiif-validate -h`` for parameter details.\n\n\nUse with Travis CI\n~~~~~~~~~~~~~~~~~~\n\nTo install dependencies for this code the following lines must\nbe present in the ``install:`` section of ``.travis.yml``::\n\n    install:\n      - sudo apt-get update\n      - sudo apt-get install libmagic-dev\n      - pip install iiif_validator\n      ...\n\nand then a single validation can be added to the commands under\nthe ``script:`` section of ``.travis.yml``. For example, to test a\nserver running with base URI ``http://localhost:8000/prefix`` with\nimage ``image_id1`` at version 1.1, level 1, one might use::\n\n    script:\n      ...\n      - iiif-validate.py -s localhost:8000 -p prefix -i image_id1 --version=1.1 --level 1 --quiet\n\nThe ``iiif-validate.py`` script returns 0 exit code on success, non-zero\non failure, in order to work easily with Travis CI.\n\n\nRunning the validator server, ``iiif-validator.py``\n---------------------------------------------------\n\nThe primary installation of the validator server is on the `IIIF\n<http://iiif.io/>`_ website at\n`<http://iiif.io/api/image/validator/>`_.\n\nStand-alone server\n~~~~~~~~~~~~~~~~~~\n\nThe validator server runs at `<http://localhost:8080/>`_ by\ndefault, the URI path is the test name and then the query\nparameters give the details of the server and image to\nbe tested. The URI pattern is::\n\n    http://localhost:8080/{test_name}?server={server}&prefix={prefix}&identifer={id}&version={api_version}\n\nAs an example, if the test server <https://pypi.python.org/pypi/iiif> is installed and run locally::\n\n    easy_install iiif\n    iiif_testserver.py\n\nwhich will set up a server at `<http://localhost:8000/>`_ and write the log of accesses to STDOUT. The one can run validation tests against this with requests like `<http://localhost:8080/info_json?server=localhost:8000&prefix=/2.0_pil_none&identifier=67352ccc-d1b0-11e1-89ae-279075081939.png&version=2.0>`_ which tests the `info.json` response and gives JSON output (pretty formatted here)::\n\n    {\n      \"test\": \"info_json\",\n      \"status\": \"success\",\n      \"tests\": [\"required-field: width\", \"required-field: height\", \"type-is-int: height\", \"type-is-int: width\", \"required-field: @id\", \"type-is-uri: @id\", \"@id is correct URI\", \"required-field: @context\", \"correct-context\", \"required-field: protocol\", \"correct-protocol\", \"required-field: profile\", \"is-list\", \"profile-compliance\", \"is-list\", \"is-object\", \"required-field: scaleFactors\", \"required-field: width\", \"type-is-int: width\"],\n      \"url\": [\"http://localhost:8000/2.0_pil_none/67352ccc-d1b0-11e1-89ae-279075081939.png/info.json\"],\n      \"label\": \"Check Image Information\"\n    }\n\nand `<http://localhost:8080/rot_mirror?server=localhost:8000&prefix=/2.0_pil_none&identifier=67352ccc-d1b0-11e1-89ae-279075081939.png&version=2.0>`_ which tests mirroring and will give JSON output (again pretty formatted)::\n\n    {\n      \"test\": \"rot_mirror\",\n      \"status\": \"success\",\n      \"tests\": [\"9,0:True\", \"0,9:True\"],\n      \"url\": [\"http://localhost:8000/2.0_pil_none/67352ccc-d1b0-11e1-89ae-279075081939.png/full/full/!0/default.jpg\"],\n      \"label\": \"Mirroring\"\n    }\n\n\nValidator server under WSGI\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*need docs here*\n\nRunning with Vagrant\n--------------------\n\nFor ease of development and local testing, you can provision a virtual machine using Vagrant. To start Vagrant, ssh in, and run the validator on a site::\n\n    vagrant up\n    vagrant ssh\n    cd /vagrant\n    ./iiif-validate.py -h\n    ./iiif-validate.py --scheme=https -s iiif.lib.ncsu.edu -p iiif --level=2 -i 67352ccc-d1b0-11e1-89ae-279075081939\n\nIn addition, the Vagrant configuration runs the validator as a WSGI application using ``mod_wsgi`` and Apache ``httpd``, accessible both from with the VM as well as the host machine at `<http://localhost:8080/>`_.\n\nEditing this README\n-------------------\n\nThis README is in reStructuredText and not gfm because that is what pypi will render. An editor like `<http://rst.ninjs.org/>`_ is useful for editing/checking interactively.\n\nLicense\n-------\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\nSee ``LICENSE.txt``.\n\nData included with this software, such as the test image files in the ``html`` directory, may be freely reused under `CC0\n<https://creativecommons.org/publicdomain/zero/1.0/>`_\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/IIIF/image-api", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "iiif-validator", "package_url": "https://pypi.org/project/iiif-validator/", "platform": "", "project_url": "https://pypi.org/project/iiif-validator/", "project_urls": {"Homepage": "http://github.com/IIIF/image-api"}, "release_url": "https://pypi.org/project/iiif-validator/1.0.5/", "requires_dist": null, "requires_python": "", "summary": "IIIF Image API Validator", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/IIIF/image-validator\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/IIIF/image-validator.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e682791cdbce8b8131e57a50d9cb08b361e9f09/68747470733a2f2f7472617669732d63692e6f72672f494949462f696d6167652d76616c696461746f722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/IIIF/image-validator?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/IIIF/image-validator/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/416c7131606b4ff3f989c3609234336cd4b33dc8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f494949462f696d6167652d76616c696461746f722f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>This validator supports the same validations that are available on the\n<a href=\"http://iiif.io/\" rel=\"nofollow\">IIIF</a> website at\n<a href=\"http://iiif.io/api/image/validator/\" rel=\"nofollow\">http://iiif.io/api/image/validator/</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"installation-from-pypi\">\n<h3>Installation from pypi</h3>\n<p>The following should install scripts, library, and the necessary dependencies:</p>\n<pre>pip install iiif-validator\n</pre>\n</div>\n<div id=\"manual-installation\">\n<h3>Manual installation</h3>\n<p>Installation from <cite>source code\n&lt;https://github.com/IIIF/image-validator&gt;</cite> can de done with:</p>\n<pre>python setup.py install\n</pre>\n<p>which should install scripts, library, and the necessary dependencies. Note that <tt>setup.py</tt> includes directives to pin certain libraries to particular versions for compatibility.</p>\n<p>The <tt><span class=\"pre\">python-magic</span></tt> module requires <tt>libmagic</tt> which, on a mac, one can install with:</p>\n<pre>brew install libmagic\n</pre>\n</div>\n</div>\n<div id=\"command-line-validator-iiif-validate-py\">\n<h2>Command line validator, <tt><span class=\"pre\">iiif-validate.py</span></tt></h2>\n<p>Then for an image served at <tt><span class=\"pre\">http://localhost:8000/prefix/image_id</span></tt>\nthe validator can be run with:</p>\n<pre>iiif-validate.py -s localhost:8000 -p prefix -i image_id --version=2.0 -v\n</pre>\n<p>or similar to validate server with the test image. Use\n<tt><span class=\"pre\">iiif-validate</span> <span class=\"pre\">-h</span></tt> for parameter details.</p>\n<div id=\"use-with-travis-ci\">\n<h3>Use with Travis CI</h3>\n<p>To install dependencies for this code the following lines must\nbe present in the <tt>install:</tt> section of <tt>.travis.yml</tt>:</p>\n<pre>install:\n  - sudo apt-get update\n  - sudo apt-get install libmagic-dev\n  - pip install iiif_validator\n  ...\n</pre>\n<p>and then a single validation can be added to the commands under\nthe <tt>script:</tt> section of <tt>.travis.yml</tt>. For example, to test a\nserver running with base URI <tt><span class=\"pre\">http://localhost:8000/prefix</span></tt> with\nimage <tt>image_id1</tt> at version 1.1, level 1, one might use:</p>\n<pre>script:\n  ...\n  - iiif-validate.py -s localhost:8000 -p prefix -i image_id1 --version=1.1 --level 1 --quiet\n</pre>\n<p>The <tt><span class=\"pre\">iiif-validate.py</span></tt> script returns 0 exit code on success, non-zero\non failure, in order to work easily with Travis CI.</p>\n</div>\n</div>\n<div id=\"running-the-validator-server-iiif-validator-py\">\n<h2>Running the validator server, <tt><span class=\"pre\">iiif-validator.py</span></tt></h2>\n<p>The primary installation of the validator server is on the <a href=\"http://iiif.io/\" rel=\"nofollow\">IIIF</a> website at\n<a href=\"http://iiif.io/api/image/validator/\" rel=\"nofollow\">http://iiif.io/api/image/validator/</a>.</p>\n<div id=\"stand-alone-server\">\n<h3>Stand-alone server</h3>\n<p>The validator server runs at <a href=\"http://localhost:8080/\" rel=\"nofollow\">http://localhost:8080/</a> by\ndefault, the URI path is the test name and then the query\nparameters give the details of the server and image to\nbe tested. The URI pattern is:</p>\n<pre>http://localhost:8080/{test_name}?server={server}&amp;prefix={prefix}&amp;identifer={id}&amp;version={api_version}\n</pre>\n<p>As an example, if the test server &lt;<a href=\"https://pypi.python.org/pypi/iiif\" rel=\"nofollow\">https://pypi.python.org/pypi/iiif</a>&gt; is installed and run locally:</p>\n<pre>easy_install iiif\niiif_testserver.py\n</pre>\n<p>which will set up a server at <a href=\"http://localhost:8000/\" rel=\"nofollow\">http://localhost:8000/</a> and write the log of accesses to STDOUT. The one can run validation tests against this with requests like <a href=\"http://localhost:8080/info_json?server=localhost:8000&amp;prefix=/2.0_pil_none&amp;identifier=67352ccc-d1b0-11e1-89ae-279075081939.png&amp;version=2.0\" rel=\"nofollow\">http://localhost:8080/info_json?server=localhost:8000&amp;prefix=/2.0_pil_none&amp;identifier=67352ccc-d1b0-11e1-89ae-279075081939.png&amp;version=2.0</a> which tests the <cite>info.json</cite> response and gives JSON output (pretty formatted here):</p>\n<pre>{\n  \"test\": \"info_json\",\n  \"status\": \"success\",\n  \"tests\": [\"required-field: width\", \"required-field: height\", \"type-is-int: height\", \"type-is-int: width\", \"required-field: @id\", \"type-is-uri: @id\", \"@id is correct URI\", \"required-field: @context\", \"correct-context\", \"required-field: protocol\", \"correct-protocol\", \"required-field: profile\", \"is-list\", \"profile-compliance\", \"is-list\", \"is-object\", \"required-field: scaleFactors\", \"required-field: width\", \"type-is-int: width\"],\n  \"url\": [\"http://localhost:8000/2.0_pil_none/67352ccc-d1b0-11e1-89ae-279075081939.png/info.json\"],\n  \"label\": \"Check Image Information\"\n}\n</pre>\n<p>and <a href=\"http://localhost:8080/rot_mirror?server=localhost:8000&amp;prefix=/2.0_pil_none&amp;identifier=67352ccc-d1b0-11e1-89ae-279075081939.png&amp;version=2.0\" rel=\"nofollow\">http://localhost:8080/rot_mirror?server=localhost:8000&amp;prefix=/2.0_pil_none&amp;identifier=67352ccc-d1b0-11e1-89ae-279075081939.png&amp;version=2.0</a> which tests mirroring and will give JSON output (again pretty formatted):</p>\n<pre>{\n  \"test\": \"rot_mirror\",\n  \"status\": \"success\",\n  \"tests\": [\"9,0:True\", \"0,9:True\"],\n  \"url\": [\"http://localhost:8000/2.0_pil_none/67352ccc-d1b0-11e1-89ae-279075081939.png/full/full/!0/default.jpg\"],\n  \"label\": \"Mirroring\"\n}\n</pre>\n</div>\n<div id=\"validator-server-under-wsgi\">\n<h3>Validator server under WSGI</h3>\n<p><em>need docs here</em></p>\n</div>\n</div>\n<div id=\"running-with-vagrant\">\n<h2>Running with Vagrant</h2>\n<p>For ease of development and local testing, you can provision a virtual machine using Vagrant. To start Vagrant, ssh in, and run the validator on a site:</p>\n<pre>vagrant up\nvagrant ssh\ncd /vagrant\n./iiif-validate.py -h\n./iiif-validate.py --scheme=https -s iiif.lib.ncsu.edu -p iiif --level=2 -i 67352ccc-d1b0-11e1-89ae-279075081939\n</pre>\n<p>In addition, the Vagrant configuration runs the validator as a WSGI application using <tt>mod_wsgi</tt> and Apache <tt>httpd</tt>, accessible both from with the VM as well as the host machine at <a href=\"http://localhost:8080/\" rel=\"nofollow\">http://localhost:8080/</a>.</p>\n</div>\n<div id=\"editing-this-readme\">\n<h2>Editing this README</h2>\n<p>This README is in reStructuredText and not gfm because that is what pypi will render. An editor like <a href=\"http://rst.ninjs.org/\" rel=\"nofollow\">http://rst.ninjs.org/</a> is useful for editing/checking interactively.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<blockquote>\n<p>Licensed under the Apache License, Version 2.0 (the \u201cLicense\u201d);\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n<p><a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a></p>\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \u201cAS IS\u201d BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n</blockquote>\n<p>See <tt>LICENSE.txt</tt>.</p>\n<p>Data included with this software, such as the test image files in the <tt>html</tt> directory, may be freely reused under <a href=\"https://creativecommons.org/publicdomain/zero/1.0/\" rel=\"nofollow\">CC0</a></p>\n</div>\n\n          </div>"}, "last_serial": 5709782, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "6cd7fa9d7e2eb2e2ddf1a1b90fdc537f", "sha256": "c48a354bfc57384a450b07dba73f9243759aa353ab8cedead960267ff27c6e93"}, "downloads": -1, "filename": "iiif-validator-0.9.1.tar.gz", "has_sig": false, "md5_digest": "6cd7fa9d7e2eb2e2ddf1a1b90fdc537f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15231, "upload_time": "2014-11-11T23:59:39", "upload_time_iso_8601": "2014-11-11T23:59:39.799383Z", "url": "https://files.pythonhosted.org/packages/00/71/0bd400787a67bcff1b231db2b7fe2045ed8e58aa86d93353276e9678a89a/iiif-validator-0.9.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "2c83bafb26b456884d96b3b84f14c938", "sha256": "c09248dae5746b7eddb2e1b9f630a8d45cf2ee20e645564182abf6f6d378033a"}, "downloads": -1, "filename": "iiif-validator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2c83bafb26b456884d96b3b84f14c938", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16584, "upload_time": "2015-02-16T16:54:32", "upload_time_iso_8601": "2015-02-16T16:54:32.577150Z", "url": "https://files.pythonhosted.org/packages/d9/f8/a22bea69abce67defa2799718db8645ced23736430deed32e881cc842429/iiif-validator-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b8bc6a57106009ab6dd812b651828543", "sha256": "6e12668c03b793a706dea9442a22a0eac6e054bb6dbb593e6236a4e0a658186c"}, "downloads": -1, "filename": "iiif-validator-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b8bc6a57106009ab6dd812b651828543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17147, "upload_time": "2016-05-20T15:54:03", "upload_time_iso_8601": "2016-05-20T15:54:03.606461Z", "url": "https://files.pythonhosted.org/packages/72/28/1eecbc61139b16bad0c86d8e9b7853e61f6dcc0373becdfe83ab894db6b8/iiif-validator-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "029d902ada3fb7adf3313d3d7fed3464", "sha256": "33afebe9725419765307ababa3758ba3882f0ef1d04d986ac5b93d76d765893c"}, "downloads": -1, "filename": "iiif-validator-1.0.2.tar.gz", "has_sig": false, "md5_digest": "029d902ada3fb7adf3313d3d7fed3464", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17454, "upload_time": "2017-01-20T03:15:27", "upload_time_iso_8601": "2017-01-20T03:15:27.362326Z", "url": "https://files.pythonhosted.org/packages/42/e9/153abf2336ac855c605a933ed39954d492b00aecc83448d088481ae58007/iiif-validator-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "7b4a2abd92daf729a78305bade2b5a2f", "sha256": "d3112a6ca6a311b3ba7330c545866717e70f7b0c2907c7f5adc3e14b5d2f72ed"}, "downloads": -1, "filename": "iiif-validator-1.0.3.tar.gz", "has_sig": false, "md5_digest": "7b4a2abd92daf729a78305bade2b5a2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17487, "upload_time": "2017-01-20T04:41:50", "upload_time_iso_8601": "2017-01-20T04:41:50.728567Z", "url": "https://files.pythonhosted.org/packages/92/d0/4e5438a8ae30a4757b425724cad4943f1b96d9160eb81480a1164fa8dc13/iiif-validator-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "0117d2eba41590c0785e6b7be0e82cca", "sha256": "e0c44e3ea65a67891aa6d7601f4070f254f4c08aaf8addfe9943535a386df14b"}, "downloads": -1, "filename": "iiif-validator-1.0.4.tar.gz", "has_sig": false, "md5_digest": "0117d2eba41590c0785e6b7be0e82cca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18152, "upload_time": "2017-09-08T18:28:06", "upload_time_iso_8601": "2017-09-08T18:28:06.103987Z", "url": "https://files.pythonhosted.org/packages/b0/3d/6ad788969bf672230ce75c8e8dd0d61248c33427510467c15f5ce9916b37/iiif-validator-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "276c9eab79c044e6eb51b1f8854125f0", "sha256": "c8a5faee9561166827868ed1212525fc98995d2ef993def601854f3b1ab1c8c3"}, "downloads": -1, "filename": "iiif-validator-1.0.5.tar.gz", "has_sig": false, "md5_digest": "276c9eab79c044e6eb51b1f8854125f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21748, "upload_time": "2019-08-21T13:34:51", "upload_time_iso_8601": "2019-08-21T13:34:51.062937Z", "url": "https://files.pythonhosted.org/packages/e0/d9/35d1f09584338addd56cab7540370f55d2a76aa21482ff3e32e64be60da1/iiif-validator-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "276c9eab79c044e6eb51b1f8854125f0", "sha256": "c8a5faee9561166827868ed1212525fc98995d2ef993def601854f3b1ab1c8c3"}, "downloads": -1, "filename": "iiif-validator-1.0.5.tar.gz", "has_sig": false, "md5_digest": "276c9eab79c044e6eb51b1f8854125f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21748, "upload_time": "2019-08-21T13:34:51", "upload_time_iso_8601": "2019-08-21T13:34:51.062937Z", "url": "https://files.pythonhosted.org/packages/e0/d9/35d1f09584338addd56cab7540370f55d2a76aa21482ff3e32e64be60da1/iiif-validator-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:03 2020"}