{"info": {"author": "Vi Engineering", "author_email": "voiceai-eng@dialpad.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet"], "description": "(Asyncio OR Threadsafe) Python Client for Google Cloud Auth\n===========================================================\n\n    This is a shared codebase for ``gcloud-rest-auth`` and ``gcloud-rest-auth``\n\nThis library implements an ``IamClient`` class, which can be used to interact\nwith GCP public keys and URL sign blobs.\n\nIt additionally implements a ``Token`` class, which is used for authorizing\nagainst Google Cloud. The other ``gcloud-rest-*`` package components accept a\n``Token`` instance as an argument; you can define a single token for all of\nthese components or define one for each. Each component corresponds to a given\nGoogle Cloud service and each service requires \"`scopes`_\".\n\n|pypi| |pythons-aio| |pythons-rest|\n\nInstallation\n------------\n\n.. code-block:: console\n\n    $ pip install --upgrade gcloud-{aio,rest}-auth\n\nUsage\n-----\n\n.. code-block:: python\n\n    from gcloud.rest.auth import IamClient\n\n    client = IamClient()\n    pubkeys = await client.list_public_keys()\n\n\n    from gcloud.rest.auth import Token\n\n    token = Token()\n    print(token.get())\n\nAdditionally, the ``Token`` constructor accepts the following optional\narguments:\n\n* ``service_file``: path to a `service account`_, authorized user file, or any\n  other application credentials. Alternatively, you can pass a file-like\n  object, like an ``io.StringIO`` instance, in case your credentials are not\n  stored in a file but in memory. If omitted, will attempt to find one on your\n  path or fallback to generating a token from GCE metadata.\n* ``session``: an ``aiohttp.ClientSession`` instance to be used for all\n  requests. If omitted, a default session will be created. If you use the\n  default session, you may be interested in using ``Token()`` as a context\n  manager (``async with Token(..) as token:``) or explicitly calling the\n  ``Token.close()`` method to ensure the session is cleaned up appropriately.\n* ``scopes``: an optional list of GCP `scopes`_ for which to generate our\n  token. Only valid (and required!) for `service account`_ authentication.\n\nCLI\n~~~\n\nThis project can also be used to help you manually authenticate to test GCP\nroutes, eg. we can list our project's uptime checks with a tool such as\n``curl``:\n\n.. code-block:: console\n\n    # using default application credentials\n    curl \\\n      -H \"Authorization: Bearer $(python3 -c 'from gcloud.rest.auth import Token; print(Token().get())')\" \\\n      \"https://monitoring.googleapis.com/v3/projects/PROJECT_ID/uptimeCheckConfigs\"\n\n    # using a service account (make sure to provide a scope!)\n    export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service.json\n    curl \\\n      -H \"Authorization: Bearer $(python3 -c 'from gcloud.rest.auth import Token; print(Token(scopes=[\"'\"https://www.googleapis.com/auth/cloud-platform\"'\"]).get())')\" \\\n      \"https://monitoring.googleapis.com/v3/projects/PROJECT_ID/uptimeCheckConfigs\"\n\n    # using legacy account credentials\n    export GOOGLE_APPLICATION_CREDENTIALS=~/.config/gcloud/legacy_credentials/EMAIL@DOMAIN.TLD/adc.json\n    curl \\\n      -H \"Authorization: Bearer $(python3 -c 'from gcloud.rest.auth import Token; print(Token().get())')\" \\\n      \"https://monitoring.googleapis.com/v3/projects/PROJECT_ID/uptimeCheckConfigs\"\n\nContributing\n------------\n\nPlease see our `contributing guide`_.\n\n.. _contributing guide: https://github.com/talkiq/gcloud-rest/blob/master/.github/CONTRIBUTING.rst\n.. _scopes: https://developers.google.com/identity/protocols/googlescopes\n.. _service account: https://console.cloud.google.com/iam-admin/serviceaccounts\n.. _smoke test: https://github.com/talkiq/gcloud-rest/blob/master/auth/tests/integration/smoke_test.py\n\n.. |pypi| image:: https://img.shields.io/pypi/v/gcloud-rest-auth.svg?style=flat-square\n    :alt: Latest PyPI Version (gcloud-rest-auth)\n    :target: https://pypi.org/project/gcloud-rest-auth/\n\n.. |pythons-aio| image:: https://img.shields.io/pypi/pyversions/gcloud-rest-auth.svg?style=flat-square&label=python (aio)\n    :alt: Python Version Support (gcloud-rest-auth)\n    :target: https://pypi.org/project/gcloud-rest-auth/\n\n.. |pythons-rest| image:: https://img.shields.io/pypi/pyversions/gcloud-rest-auth.svg?style=flat-square&label=python (rest)\n    :alt: Python Version Support (gcloud-rest-auth)\n    :target: https://pypi.org/project/gcloud-rest-auth/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/talkiq/gcloud-rest", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "gcloud-rest-auth", "package_url": "https://pypi.org/project/gcloud-rest-auth/", "platform": "Posix; MacOS X; Windows", "project_url": "https://pypi.org/project/gcloud-rest-auth/", "project_urls": {"Homepage": "https://github.com/talkiq/gcloud-rest"}, "release_url": "https://pypi.org/project/gcloud-rest-auth/3.1.0/", "requires_dist": ["backoff (<2.0.0,>=1.0.0)", "cryptography (<3.0.0,>=2.0.0)", "future (<0.18.3,>=0.17.0)", "pyjwt (<2.0.0,>=1.5.3)", "requests (<2.23.0,>=2.20.0)", "six (<2.0.0,>=1.11.0)", "typing (<4.0.0,>=3.7.4.1)"], "requires_python": ">= 2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "summary": "Python Client for Google Cloud Auth", "version": "3.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\nThis is a shared codebase for <tt><span class=\"pre\">gcloud-rest-auth</span></tt> and <tt><span class=\"pre\">gcloud-rest-auth</span></tt></blockquote>\n<p>This library implements an <tt>IamClient</tt> class, which can be used to interact\nwith GCP public keys and URL sign blobs.</p>\n<p>It additionally implements a <tt>Token</tt> class, which is used for authorizing\nagainst Google Cloud. The other <tt><span class=\"pre\">gcloud-rest-*</span></tt> package components accept a\n<tt>Token</tt> instance as an argument; you can define a single token for all of\nthese components or define one for each. Each component corresponds to a given\nGoogle Cloud service and each service requires \u201c<a href=\"https://developers.google.com/identity/protocols/googlescopes\" rel=\"nofollow\">scopes</a>\u201d.</p>\n<p><a href=\"https://pypi.org/project/gcloud-rest-auth/\" rel=\"nofollow\"><img alt=\"Latest PyPI Version (gcloud-rest-auth)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/311338b6e7bd1300b4bf8348c1903ece13833b0e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f67636c6f75642d726573742d617574682e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.org/project/gcloud-rest-auth/\" rel=\"nofollow\"><img alt=\"Python Version Support (gcloud-rest-auth)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f05ad53356a3edd5cf8395b30a9b737f23fd605/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f67636c6f75642d726573742d617574682e7376673f7374796c653d666c61742d737175617265266c6162656c3d707974686f6e2861696f29\"></a> <a href=\"https://pypi.org/project/gcloud-rest-auth/\" rel=\"nofollow\"><img alt=\"Python Version Support (gcloud-rest-auth)\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e99415520954ec061123645135b1f5bbdf031b5f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f67636c6f75642d726573742d617574682e7376673f7374796c653d666c61742d737175617265266c6162656c3d707974686f6e287265737429\"></a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"gp\">$</span> pip install --upgrade gcloud-<span class=\"o\">{</span>aio,rest<span class=\"o\">}</span>-auth\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.auth</span> <span class=\"kn\">import</span> <span class=\"n\">IamClient</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">IamClient</span><span class=\"p\">()</span>\n<span class=\"n\">pubkeys</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">list_public_keys</span><span class=\"p\">()</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">gcloud.rest.auth</span> <span class=\"kn\">import</span> <span class=\"n\">Token</span>\n\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">Token</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">())</span>\n</pre>\n<p>Additionally, the <tt>Token</tt> constructor accepts the following optional\narguments:</p>\n<ul>\n<li><tt>service_file</tt>: path to a <a href=\"https://console.cloud.google.com/iam-admin/serviceaccounts\" rel=\"nofollow\">service account</a>, authorized user file, or any\nother application credentials. Alternatively, you can pass a file-like\nobject, like an <tt>io.StringIO</tt> instance, in case your credentials are not\nstored in a file but in memory. If omitted, will attempt to find one on your\npath or fallback to generating a token from GCE metadata.</li>\n<li><tt>session</tt>: an <tt>aiohttp.ClientSession</tt> instance to be used for all\nrequests. If omitted, a default session will be created. If you use the\ndefault session, you may be interested in using <tt>Token()</tt> as a context\nmanager (<tt>async with <span class=\"pre\">Token(..)</span> as token:</tt>) or explicitly calling the\n<tt>Token.close()</tt> method to ensure the session is cleaned up appropriately.</li>\n<li><tt>scopes</tt>: an optional list of GCP <a href=\"https://developers.google.com/identity/protocols/googlescopes\" rel=\"nofollow\">scopes</a> for which to generate our\ntoken. Only valid (and required!) for <a href=\"https://console.cloud.google.com/iam-admin/serviceaccounts\" rel=\"nofollow\">service account</a> authentication.</li>\n</ul>\n<div id=\"cli\">\n<h3>CLI</h3>\n<p>This project can also be used to help you manually authenticate to test GCP\nroutes, eg. we can list our project\u2019s uptime checks with a tool such as\n<tt>curl</tt>:</p>\n<pre><span class=\"gp\">#</span> using default application credentials\n<span class=\"go\">curl \\\n  -H \"Authorization: Bearer $(python3 -c 'from gcloud.rest.auth import Token; print(Token().get())')\" \\\n  \"https://monitoring.googleapis.com/v3/projects/PROJECT_ID/uptimeCheckConfigs\"\n\n</span><span class=\"gp\">#</span> using a service account <span class=\"o\">(</span>make sure to provide a scope!<span class=\"o\">)</span>\n<span class=\"go\">export GOOGLE_APPLICATION_CREDENTIALS=/path/to/service.json\ncurl \\\n  -H \"Authorization: Bearer $(python3 -c 'from gcloud.rest.auth import Token; print(Token(scopes=[\"'\"https://www.googleapis.com/auth/cloud-platform\"'\"]).get())')\" \\\n  \"https://monitoring.googleapis.com/v3/projects/PROJECT_ID/uptimeCheckConfigs\"\n\n</span><span class=\"gp\">#</span> using legacy account credentials\n<span class=\"go\">export GOOGLE_APPLICATION_CREDENTIALS=~/.config/gcloud/legacy_credentials/EMAIL@DOMAIN.TLD/adc.json\ncurl \\\n  -H \"Authorization: Bearer $(python3 -c 'from gcloud.rest.auth import Token; print(Token().get())')\" \\\n  \"https://monitoring.googleapis.com/v3/projects/PROJECT_ID/uptimeCheckConfigs\"</span>\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Please see our <a href=\"https://github.com/talkiq/gcloud-rest/blob/master/.github/CONTRIBUTING.rst\" rel=\"nofollow\">contributing guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6939802, "releases": {"3.0.0": [{"comment_text": "", "digests": {"md5": "a299050bd2fc1c4d2ef514970e5c773d", "sha256": "1703b872e8e99b59682ad818529d37454ca0fe62f6443ca2d8b873accf7503a0"}, "downloads": -1, "filename": "gcloud_rest_auth-3.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a299050bd2fc1c4d2ef514970e5c773d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 2.7", "size": 15321, "upload_time": "2019-10-15T01:57:14", "upload_time_iso_8601": "2019-10-15T01:57:14.949757Z", "url": "https://files.pythonhosted.org/packages/dd/4b/a6c25b264b184d109c23f0a01e1b1a73d7fca06399783329d1f207b222b0/gcloud_rest_auth-3.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bf6492a92c7dc147ebb7aceac5f4e63", "sha256": "aefeecf047cfa27e583079b4b7fd0b61f8b422457faf7a447301f5183cf32e43"}, "downloads": -1, "filename": "gcloud-rest-auth-3.0.0.tar.gz", "has_sig": false, "md5_digest": "3bf6492a92c7dc147ebb7aceac5f4e63", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 2.7", "size": 12438, "upload_time": "2019-10-15T01:57:18", "upload_time_iso_8601": "2019-10-15T01:57:18.257497Z", "url": "https://files.pythonhosted.org/packages/50/4e/3bb95363ecab40089f8afef1e38f8f3f027cf44ece5540f6208a90e0b43e/gcloud-rest-auth-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "30d799be20166b544c05ccaa50b892a4", "sha256": "103409d16210507b680021c2e64223c3cb39935245e776098cbd0c2029cbe523"}, "downloads": -1, "filename": "gcloud_rest_auth-3.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "30d799be20166b544c05ccaa50b892a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 15422, "upload_time": "2020-01-04T00:10:15", "upload_time_iso_8601": "2020-01-04T00:10:15.173335Z", "url": "https://files.pythonhosted.org/packages/fb/f6/2b24d87cf3f2b06e74f9bd35beb1348417b80afa141cdc1eecfc27ab8c01/gcloud_rest_auth-3.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c97a7e6cdbe05c4e44070422d8eecf1", "sha256": "ba4f94e88e258a28214f9ebf78fe0536aa49d1413353b0e3d14dc4c4c9d96afc"}, "downloads": -1, "filename": "gcloud-rest-auth-3.0.1.tar.gz", "has_sig": false, "md5_digest": "4c97a7e6cdbe05c4e44070422d8eecf1", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 12510, "upload_time": "2020-01-04T00:10:16", "upload_time_iso_8601": "2020-01-04T00:10:16.672320Z", "url": "https://files.pythonhosted.org/packages/91/1c/b03c658f2801ea5f75f4b9ce59392a8ba1ab30a9aaa3f32a7ad8be0c15f8/gcloud-rest-auth-3.0.1.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "b1e35693e43feed16a0f31656674a8ae", "sha256": "8edfca2c14e9e7ab689d3d249cb368d4a41e969e01e48206b7ba166c10afc429"}, "downloads": -1, "filename": "gcloud_rest_auth-3.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1e35693e43feed16a0f31656674a8ae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 15643, "upload_time": "2020-04-03T00:23:42", "upload_time_iso_8601": "2020-04-03T00:23:42.635559Z", "url": "https://files.pythonhosted.org/packages/46/46/06778ad482d0c10fe2045b4a3bac8c6e6ce682213610dcfba786d3fad840/gcloud_rest_auth-3.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10cd40aff5db54b751dd6d1a30501e74", "sha256": "866d6dd82da259a75b9d30b50ef17e698d92b9180103df3f59303d7df126fac6"}, "downloads": -1, "filename": "gcloud-rest-auth-3.1.0.tar.gz", "has_sig": false, "md5_digest": "10cd40aff5db54b751dd6d1a30501e74", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 13810, "upload_time": "2020-04-03T00:23:43", "upload_time_iso_8601": "2020-04-03T00:23:43.847527Z", "url": "https://files.pythonhosted.org/packages/d5/d1/c2f820f6e5a9eecd96fbef9b425402bd2668283b6f2c1d98f90c5aa18be3/gcloud-rest-auth-3.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1e35693e43feed16a0f31656674a8ae", "sha256": "8edfca2c14e9e7ab689d3d249cb368d4a41e969e01e48206b7ba166c10afc429"}, "downloads": -1, "filename": "gcloud_rest_auth-3.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1e35693e43feed16a0f31656674a8ae", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">= 2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 15643, "upload_time": "2020-04-03T00:23:42", "upload_time_iso_8601": "2020-04-03T00:23:42.635559Z", "url": "https://files.pythonhosted.org/packages/46/46/06778ad482d0c10fe2045b4a3bac8c6e6ce682213610dcfba786d3fad840/gcloud_rest_auth-3.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10cd40aff5db54b751dd6d1a30501e74", "sha256": "866d6dd82da259a75b9d30b50ef17e698d92b9180103df3f59303d7df126fac6"}, "downloads": -1, "filename": "gcloud-rest-auth-3.1.0.tar.gz", "has_sig": false, "md5_digest": "10cd40aff5db54b751dd6d1a30501e74", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 13810, "upload_time": "2020-04-03T00:23:43", "upload_time_iso_8601": "2020-04-03T00:23:43.847527Z", "url": "https://files.pythonhosted.org/packages/d5/d1/c2f820f6e5a9eecd96fbef9b425402bd2668283b6f2c1d98f90c5aa18be3/gcloud-rest-auth-3.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:48 2020"}