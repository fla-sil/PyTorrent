{"info": {"author": "Radu Boncea", "author_email": "radu.boncea@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.0", "Programming Language :: Python :: 3.1", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Database :: Front-Ends", "Topic :: Office/Business :: Financial :: Accounting", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# A wrapper API of ANAF web services\n\n\n## Compatibility\n>=Python 2.6\nTested on python 2.6, 3.4, 3.5 and 3.6\n\n## Installation\n\n    $ pip install pyAnaf\n\n\n## Usage\n\n##### From Python:\n\n```python\nimport datetime\nfrom pyAnaf.api import Anaf\n\nanaf = Anaf()\nanaf.setLimit(500) #optional\n\n# adding a list of CUIs and an optional query date\nanaf.setCUIList( [36804251, 2785503], date =  datetime.date.today())\n\n# adding a CUI one by one\nanaf.addCUI(36804251)\nanaf.addCUI(2785503)\n\n# submit the request to ANAF and hope for the best\nanaf.Request()\n\n# printing the json returned from ANAF\nprint (anaf.result)\n\n# or doing more programmatic stuff\nfirst_cui = anaf.getCUIData(36804251)\nprint (first_cui.cui)\nprint (first_cui.name)\nprint (first_cui.address)\nprint (first_cui.is_active)\nprint (first_cui.vat_eligible)\nprint (first_cui.vat_split_eligible)\nprint (first_cui.vat_collection_eligible)\n\n```\n\n##### From the console:\n\n\t$ pyanaf <list_of_CUIs> <max_limit>\n\nFor python3 you might have to set python encoding for your environment (e.g. export PYTHONIOENCODING=utf-8)\n\nE.g.:\n\n    $ pyanaf 36804251,2785503 500\n    $ {   'adresa': '',\n    'cui': 34434,\n    'data': '2018-12-12',\n    'dataActualizareTvaInc': '',\n    'dataAnulareSplitTVA': '',\n    'dataInactivare': ' ',\n    'dataInceputSplitTVA': '',\n    'dataInceputTvaInc': '',\n    'dataPublicare': ' ',\n    'dataPublicareTvaInc': '',\n    'dataRadiere': ' ',\n    'dataReactivare': ' ',\n    'dataSfarsitTvaInc': '',\n    'data_anul_imp_ScpTVA': '',\n    'data_inceput_ScpTVA': '',\n    'data_sfarsit_ScpTVA': '',\n    'denumire': '',\n    'mesaj_ScpTVA': '',\n    'scpTVA': False,\n    'statusInactivi': False,\n    'statusSplitTVA': False,\n    'statusTvaIncasare': False,\n    'tipActTvaInc': ''}\n\t{   'adresa': '',\n    'cui': 2,\n    'data': '2018-12-12',\n    'dataActualizareTvaInc': '',\n    'dataAnulareSplitTVA': '',\n    'dataInactivare': ' ',\n    'dataInceputSplitTVA': '',\n    'dataInceputTvaInc': '',\n    'dataPublicare': ' ',\n    'dataPublicareTvaInc': '',\n    'dataRadiere': ' ',\n    'dataReactivare': ' ',\n    'dataSfarsitTvaInc': '',\n    'data_anul_imp_ScpTVA': '',\n    'data_inceput_ScpTVA': '',\n    'data_sfarsit_ScpTVA': '',\n    'denumire': '',\n    'mesaj_ScpTVA': '',\n    'scpTVA': False,\n    'statusInactivi': False,\n    'statusSplitTVA': False,\n    'statusTvaIncasare': False,\n    'tipActTvaInc': ''}\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/agilegeeks/pyAnaf.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyAnaf", "package_url": "https://pypi.org/project/pyAnaf/", "platform": "", "project_url": "https://pypi.org/project/pyAnaf/", "project_urls": {"Homepage": "https://github.com/agilegeeks/pyAnaf.git"}, "release_url": "https://pypi.org/project/pyAnaf/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "A wrapper API of ANAF web services", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>A wrapper API of ANAF web services</h1>\n<h2>Compatibility</h2>\n<blockquote>\n<p>=Python 2.6\nTested on python 2.6, 3.4, 3.5 and 3.6</p>\n</blockquote>\n<h2>Installation</h2>\n<pre><code>$ pip install pyAnaf\n</code></pre>\n<h2>Usage</h2>\n<h5>From Python:</h5>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyAnaf.api</span> <span class=\"kn\">import</span> <span class=\"n\">Anaf</span>\n\n<span class=\"n\">anaf</span> <span class=\"o\">=</span> <span class=\"n\">Anaf</span><span class=\"p\">()</span>\n<span class=\"n\">anaf</span><span class=\"o\">.</span><span class=\"n\">setLimit</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">)</span> <span class=\"c1\">#optional</span>\n\n<span class=\"c1\"># adding a list of CUIs and an optional query date</span>\n<span class=\"n\">anaf</span><span class=\"o\">.</span><span class=\"n\">setCUIList</span><span class=\"p\">(</span> <span class=\"p\">[</span><span class=\"mi\">36804251</span><span class=\"p\">,</span> <span class=\"mi\">2785503</span><span class=\"p\">],</span> <span class=\"n\">date</span> <span class=\"o\">=</span>  <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># adding a CUI one by one</span>\n<span class=\"n\">anaf</span><span class=\"o\">.</span><span class=\"n\">addCUI</span><span class=\"p\">(</span><span class=\"mi\">36804251</span><span class=\"p\">)</span>\n<span class=\"n\">anaf</span><span class=\"o\">.</span><span class=\"n\">addCUI</span><span class=\"p\">(</span><span class=\"mi\">2785503</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># submit the request to ANAF and hope for the best</span>\n<span class=\"n\">anaf</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># printing the json returned from ANAF</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">anaf</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or doing more programmatic stuff</span>\n<span class=\"n\">first_cui</span> <span class=\"o\">=</span> <span class=\"n\">anaf</span><span class=\"o\">.</span><span class=\"n\">getCUIData</span><span class=\"p\">(</span><span class=\"mi\">36804251</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">first_cui</span><span class=\"o\">.</span><span class=\"n\">cui</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">first_cui</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">first_cui</span><span class=\"o\">.</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">first_cui</span><span class=\"o\">.</span><span class=\"n\">is_active</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">first_cui</span><span class=\"o\">.</span><span class=\"n\">vat_eligible</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">first_cui</span><span class=\"o\">.</span><span class=\"n\">vat_split_eligible</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">first_cui</span><span class=\"o\">.</span><span class=\"n\">vat_collection_eligible</span><span class=\"p\">)</span>\n</pre>\n<h5>From the console:</h5>\n<pre><code>$ pyanaf &lt;list_of_CUIs&gt; &lt;max_limit&gt;\n</code></pre>\n<p>For python3 you might have to set python encoding for your environment (e.g. export PYTHONIOENCODING=utf-8)</p>\n<p>E.g.:</p>\n<pre><code>$ pyanaf 36804251,2785503 500\n$ {   'adresa': '',\n'cui': 34434,\n'data': '2018-12-12',\n'dataActualizareTvaInc': '',\n'dataAnulareSplitTVA': '',\n'dataInactivare': ' ',\n'dataInceputSplitTVA': '',\n'dataInceputTvaInc': '',\n'dataPublicare': ' ',\n'dataPublicareTvaInc': '',\n'dataRadiere': ' ',\n'dataReactivare': ' ',\n'dataSfarsitTvaInc': '',\n'data_anul_imp_ScpTVA': '',\n'data_inceput_ScpTVA': '',\n'data_sfarsit_ScpTVA': '',\n'denumire': '',\n'mesaj_ScpTVA': '',\n'scpTVA': False,\n'statusInactivi': False,\n'statusSplitTVA': False,\n'statusTvaIncasare': False,\n'tipActTvaInc': ''}\n{   'adresa': '',\n'cui': 2,\n'data': '2018-12-12',\n'dataActualizareTvaInc': '',\n'dataAnulareSplitTVA': '',\n'dataInactivare': ' ',\n'dataInceputSplitTVA': '',\n'dataInceputTvaInc': '',\n'dataPublicare': ' ',\n'dataPublicareTvaInc': '',\n'dataRadiere': ' ',\n'dataReactivare': ' ',\n'dataSfarsitTvaInc': '',\n'data_anul_imp_ScpTVA': '',\n'data_inceput_ScpTVA': '',\n'data_sfarsit_ScpTVA': '',\n'denumire': '',\n'mesaj_ScpTVA': '',\n'scpTVA': False,\n'statusInactivi': False,\n'statusSplitTVA': False,\n'statusTvaIncasare': False,\n'tipActTvaInc': ''}\n</code></pre>\n\n          </div>"}, "last_serial": 4591648, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "3fb0c3682aea53bce221dc5650348600", "sha256": "44a2a25c66c95a1d4c1eb79021a562beb5e832c5f6e7c8e26d3c06e2d2ba3beb"}, "downloads": -1, "filename": "pyAnaf-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3fb0c3682aea53bce221dc5650348600", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6155, "upload_time": "2018-12-12T20:19:35", "upload_time_iso_8601": "2018-12-12T20:19:35.841728Z", "url": "https://files.pythonhosted.org/packages/58/b2/8ce74bdf6d3bfbbbf377a0fe576e45ebde8874a9d5db3fcca8b0299a12c6/pyAnaf-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b576a1d82576899879bf2776d8bcae7f", "sha256": "2923abf5882698c3730339a81015b35a76478f2db56df9cada9158e671bf6884"}, "downloads": -1, "filename": "pyAnaf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b576a1d82576899879bf2776d8bcae7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4364, "upload_time": "2018-12-12T20:19:37", "upload_time_iso_8601": "2018-12-12T20:19:37.140922Z", "url": "https://files.pythonhosted.org/packages/d7/1f/ff10cd9dd251f25dad73a153a9c8c3c93029dca51e974d15a4cc204d24dc/pyAnaf-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3fb0c3682aea53bce221dc5650348600", "sha256": "44a2a25c66c95a1d4c1eb79021a562beb5e832c5f6e7c8e26d3c06e2d2ba3beb"}, "downloads": -1, "filename": "pyAnaf-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3fb0c3682aea53bce221dc5650348600", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6155, "upload_time": "2018-12-12T20:19:35", "upload_time_iso_8601": "2018-12-12T20:19:35.841728Z", "url": "https://files.pythonhosted.org/packages/58/b2/8ce74bdf6d3bfbbbf377a0fe576e45ebde8874a9d5db3fcca8b0299a12c6/pyAnaf-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b576a1d82576899879bf2776d8bcae7f", "sha256": "2923abf5882698c3730339a81015b35a76478f2db56df9cada9158e671bf6884"}, "downloads": -1, "filename": "pyAnaf-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b576a1d82576899879bf2776d8bcae7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4364, "upload_time": "2018-12-12T20:19:37", "upload_time_iso_8601": "2018-12-12T20:19:37.140922Z", "url": "https://files.pythonhosted.org/packages/d7/1f/ff10cd9dd251f25dad73a153a9c8c3c93029dca51e974d15a4cc204d24dc/pyAnaf-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:40 2020"}