{"info": {"author": "Rouzbeh Afrasiabi", "author_email": "rouzbeh.afrasiabi@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# Traintorch (alpha)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/d4b74c08973343128d17532b4b84e154)](https://www.codacy.com/manual/rouzbeh-afrasiabi/traintorch?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=rouzbeh-afrasiabi/traintorch&amp;utm_campaign=Badge_Grade)\n\n\n<p align=\"justify\">\nPackage for live visualization of model validation metrics during training of a machine learning model in jupyter notebooks. The package utilizes a sliding window mechanism to reduce memory usage.\n</p> \n\n## Requirements:\n\n```\npandas==0.25.1\nmatplotlib==3.1.1\nipython==7.8.0\nnumpy==1.17.2\npycm==2.2\n```\n ## Installation:\n \n ### Latest release:\n ```\n pip install traintorch\n  ```\n  \n### Latest Version\n\n ```\n pip install git+https://github.com/rouzbeh-afrasiabi/traintorch.git\n ```\n\n## Example \n\n### Simple Usage\n```python\nfrom traintorch import *\n\n#custom metrics\nfirst=metric('Loss',w_size=10,average=False)\nsecond=metric('Accuracy',w_size=10,average=False)\n\n\n#create an instance of traintorch\ntracker=traintorch(n_custom_plots=2,main_grid_hspace=.1, figsize=(15,10),show_table=True)\n#combine all metrics together\ntracker.append([first,second])\n\n\nrange_max=1000\nfor i in range(0,range_max,1):\n    \n    first.update(train_loss=1/(i+1),test_loss=1/(i**2+1))\n    second.update(y=i/(i*2+1))\n    tracker.plot()\n```\n <p align='center'>\n <img src='./images/dash_a.png'></img>\n \n </p>\n\n\n\n### Using pycm metrics and doing comparison\n\n\n```python\nfrom traintorch import *\n\n\n#custom metric\nfirst=metric('Loss',w_size=10,average=False)\n\n#pycm metrics\noverall_selected=['ACC Macro']\ncm_metrics_a=pycmMetrics(overall_selected,name='train',w_size=10)\ncm_metrics_b=pycmMetrics(overall_selected,name='test',w_size=10)\n\n#compare two metrics of the same kind\ncompare_a=collate(cm_metrics_a,cm_metrics_b,'ACC Macro')\n\n#create an instance of traintorch\ntracker=traintorch(n_custom_plots=1,main_grid_hspace=.1,figsize=(15,15),show_table=True)\n\n#combine all metrics together\ntracker.append([first,cm_metrics_a,cm_metrics_b,compare_a])\n\n\nrange_max=1000\nfor i in range(0,range_max,1):\n    \n    actual_a=np.random.choice([0, 1], size=(20,), p=[1./3, 2./3])\n    predicted_a=np.random.choice([0, 1], size=(20,),p=[1-(i/range_max), i/range_max])\n    actual_b=np.random.choice([0, 1], size=(20,), p=[1./3, 2./3])\n    predicted_b=np.random.choice([0, 1], size=(20,),p=[1-(i/range_max), i/range_max])\n    cm_metrics_a.update(actual_a,predicted_a)\n    cm_metrics_b.update(actual_b,predicted_b)\n    first.update(train=1/(i+1),test=1/(i**2+1))\n    compare_a.update()\n    tracker.plot()\n\n```\n <p align='center'>\n <img src='./images/dash.png'></img>\n \n </p>", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/rouzbeh-afrasiabi/traintorch/archive/v.1.0.2-alpha.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rouzbeh-afrasiabi/traintorch", "keywords": "training,visualization,loss,plot,live,jupyter notebook,matplotlib", "license": "", "maintainer": "", "maintainer_email": "", "name": "traintorch", "package_url": "https://pypi.org/project/traintorch/", "platform": "", "project_url": "https://pypi.org/project/traintorch/", "project_urls": {"Download": "https://github.com/rouzbeh-afrasiabi/traintorch/archive/v.1.0.2-alpha.tar.gz", "Homepage": "https://github.com/rouzbeh-afrasiabi/traintorch"}, "release_url": "https://pypi.org/project/traintorch/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Package for live visualization of metrics during training of a machine learning model", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Traintorch (alpha)</h1>\n<p><a href=\"https://www.codacy.com/manual/rouzbeh-afrasiabi/traintorch?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=rouzbeh-afrasiabi/traintorch&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0399861399d781eff6f223260e056a85c834f16/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6434623734633038393733333433313238643137353332623462383465313534\"></a></p>\n<p align=\"justify\">\nPackage for live visualization of model validation metrics during training of a machine learning model in jupyter notebooks. The package utilizes a sliding window mechanism to reduce memory usage.\n</p> \n<h2>Requirements:</h2>\n<pre><code>pandas==0.25.1\nmatplotlib==3.1.1\nipython==7.8.0\nnumpy==1.17.2\npycm==2.2\n</code></pre>\n<h2>Installation:</h2>\n<h3>Latest release:</h3>\n<pre><code>pip install traintorch\n</code></pre>\n<h3>Latest Version</h3>\n<pre><code>pip install git+https://github.com/rouzbeh-afrasiabi/traintorch.git\n</code></pre>\n<h2>Example</h2>\n<h3>Simple Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">traintorch</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\">#custom metrics</span>\n<span class=\"n\">first</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">(</span><span class=\"s1\">'Loss'</span><span class=\"p\">,</span><span class=\"n\">w_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">average</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">second</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">(</span><span class=\"s1\">'Accuracy'</span><span class=\"p\">,</span><span class=\"n\">w_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">average</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\">#create an instance of traintorch</span>\n<span class=\"n\">tracker</span><span class=\"o\">=</span><span class=\"n\">traintorch</span><span class=\"p\">(</span><span class=\"n\">n_custom_plots</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"n\">main_grid_hspace</span><span class=\"o\">=.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">),</span><span class=\"n\">show_table</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\">#combine all metrics together</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">first</span><span class=\"p\">,</span><span class=\"n\">second</span><span class=\"p\">])</span>\n\n\n<span class=\"n\">range_max</span><span class=\"o\">=</span><span class=\"mi\">1000</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">range_max</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    \n    <span class=\"n\">first</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">train_loss</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"n\">test_loss</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">second</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n <p align=\"center\">\n <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32debe61b2a7eabab3b30b6fc1884408ca1bca46/2e2f696d616765732f646173685f612e706e67\">\n </p>\n<h3>Using pycm metrics and doing comparison</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">traintorch</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n\n<span class=\"c1\">#custom metric</span>\n<span class=\"n\">first</span><span class=\"o\">=</span><span class=\"n\">metric</span><span class=\"p\">(</span><span class=\"s1\">'Loss'</span><span class=\"p\">,</span><span class=\"n\">w_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">average</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#pycm metrics</span>\n<span class=\"n\">overall_selected</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'ACC Macro'</span><span class=\"p\">]</span>\n<span class=\"n\">cm_metrics_a</span><span class=\"o\">=</span><span class=\"n\">pycmMetrics</span><span class=\"p\">(</span><span class=\"n\">overall_selected</span><span class=\"p\">,</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'train'</span><span class=\"p\">,</span><span class=\"n\">w_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"n\">cm_metrics_b</span><span class=\"o\">=</span><span class=\"n\">pycmMetrics</span><span class=\"p\">(</span><span class=\"n\">overall_selected</span><span class=\"p\">,</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">,</span><span class=\"n\">w_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#compare two metrics of the same kind</span>\n<span class=\"n\">compare_a</span><span class=\"o\">=</span><span class=\"n\">collate</span><span class=\"p\">(</span><span class=\"n\">cm_metrics_a</span><span class=\"p\">,</span><span class=\"n\">cm_metrics_b</span><span class=\"p\">,</span><span class=\"s1\">'ACC Macro'</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#create an instance of traintorch</span>\n<span class=\"n\">tracker</span><span class=\"o\">=</span><span class=\"n\">traintorch</span><span class=\"p\">(</span><span class=\"n\">n_custom_plots</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">main_grid_hspace</span><span class=\"o\">=.</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">15</span><span class=\"p\">),</span><span class=\"n\">show_table</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#combine all metrics together</span>\n<span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">([</span><span class=\"n\">first</span><span class=\"p\">,</span><span class=\"n\">cm_metrics_a</span><span class=\"p\">,</span><span class=\"n\">cm_metrics_b</span><span class=\"p\">,</span><span class=\"n\">compare_a</span><span class=\"p\">])</span>\n\n\n<span class=\"n\">range_max</span><span class=\"o\">=</span><span class=\"mi\">1000</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">range_max</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    \n    <span class=\"n\">actual_a</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,),</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">1.</span><span class=\"o\">/</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"o\">/</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n    <span class=\"n\">predicted_a</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,),</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">/</span><span class=\"n\">range_max</span><span class=\"p\">),</span> <span class=\"n\">i</span><span class=\"o\">/</span><span class=\"n\">range_max</span><span class=\"p\">])</span>\n    <span class=\"n\">actual_b</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,),</span> <span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mf\">1.</span><span class=\"o\">/</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mf\">2.</span><span class=\"o\">/</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n    <span class=\"n\">predicted_b</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,),</span><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">/</span><span class=\"n\">range_max</span><span class=\"p\">),</span> <span class=\"n\">i</span><span class=\"o\">/</span><span class=\"n\">range_max</span><span class=\"p\">])</span>\n    <span class=\"n\">cm_metrics_a</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">actual_a</span><span class=\"p\">,</span><span class=\"n\">predicted_a</span><span class=\"p\">)</span>\n    <span class=\"n\">cm_metrics_b</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">actual_b</span><span class=\"p\">,</span><span class=\"n\">predicted_b</span><span class=\"p\">)</span>\n    <span class=\"n\">first</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">train</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"n\">test</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">compare_a</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n    <span class=\"n\">tracker</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n <p align=\"center\">\n <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b28a748a413328c713833d4bad96193ad5a536e0/2e2f696d616765732f646173682e706e67\">\n </p>\n\n          </div>"}, "last_serial": 5972138, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "cd4ff3fbb1ebf8d2511a8d598a835e11", "sha256": "f5967449a64269d1af6de9d820da9fc9af7b82089650e2ec21462ffb46c10fed"}, "downloads": -1, "filename": "traintorch-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cd4ff3fbb1ebf8d2511a8d598a835e11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4238, "upload_time": "2019-10-09T17:00:20", "upload_time_iso_8601": "2019-10-09T17:00:20.207019Z", "url": "https://files.pythonhosted.org/packages/41/c9/15a1ac63534118022196a672a373b0b79f924251d80eadd60f743612a5e0/traintorch-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "ba24761f1bbc97cc02bec52676528e06", "sha256": "1bcf0c870db3aada9c1403ac3f79688eeaae4912943bccfb55ba1790cbe8cda5"}, "downloads": -1, "filename": "traintorch-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ba24761f1bbc97cc02bec52676528e06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8745, "upload_time": "2019-10-14T15:45:49", "upload_time_iso_8601": "2019-10-14T15:45:49.696373Z", "url": "https://files.pythonhosted.org/packages/f5/70/a993a6d454eb22d2346361e22732cc1bbaa7bdfd935cb8a40da554382054/traintorch-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba24761f1bbc97cc02bec52676528e06", "sha256": "1bcf0c870db3aada9c1403ac3f79688eeaae4912943bccfb55ba1790cbe8cda5"}, "downloads": -1, "filename": "traintorch-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ba24761f1bbc97cc02bec52676528e06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8745, "upload_time": "2019-10-14T15:45:49", "upload_time_iso_8601": "2019-10-14T15:45:49.696373Z", "url": "https://files.pythonhosted.org/packages/f5/70/a993a6d454eb22d2346361e22732cc1bbaa7bdfd935cb8a40da554382054/traintorch-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:48:31 2020"}