{"info": {"author": "Pawel Lampe", "author_email": "pawel.lampe@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# GDScript Toolkit\n[![](https://travis-ci.com/Scony/godot-gdscript-toolkit.svg?branch=master)](https://travis-ci.com/Scony/godot-gdscript-toolkit)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nThis project provides a set of tools for daily work with `GDScript`. At the moment it provides:\n\n- A parser that produces a parse tree for debugging and educational purposes.\n- A linter that performs a static analysis according to some predefined configuration.\n- A formatter that formats the code according to some predefined rules.\n\n## Installation\n\nTo install this project you need `python3` and `pip`. \n\nUse this command in your terminal to install from this git repository:\n\n```\npip3 install gdtoolkit\n```\n\n## Linting with gdlint\n\nTo run a linter you need to perform installation first. Once done, you can run e.g.:\n\n```\n$ gdlint misc/MarkovianPCG.gd\n```\n\nWhich outputs messages like:\n\n```\nmisc/MarkovianPCG.gd:96: Error: Function argument name \"aOrigin\" is not valid (function-argument-name)\nmisc/MarkovianPCG.gd:96: Error: Function argument name \"aPos\" is not valid (function-argument-name)\n```\n\nTo tweak the default check settings, you can dump the default config to a file:\n\n```\n$ gdlint -d\n$ cat gdlintrc\nclass-load-variable-name: (([A-Z][a-z0-9]*)+|_?[a-z][a-z0-9]*(_[a-z0-9]+)*)\nclass-name: ([A-Z][a-z0-9]*)+\nclass-variable-name: _?[a-z][a-z0-9]*(_[a-z0-9]+)*\nconstant-name: '[A-Z][A-Z0-9]*(_[A-Z0-9]+)*'\ndisable: []\nenum-element-name: '[A-Z][A-Z0-9]*(_[A-Z0-9]+)*'\nenum-name: ([A-Z][a-z0-9]*)+\nfunction-argument-name: _?[a-z][a-z0-9]*(_[a-z0-9]+)*\nfunction-arguments-number: 10\nfunction-load-variable-name: ([A-Z][a-z0-9]*)+\nfunction-name: (_on_([A-Z][a-z0-9]*)+(_[a-z0-9]+)*|_?[a-z][a-z0-9]*(_[a-z0-9]+)*)\nfunction-variable-name: '[a-z][a-z0-9]*(_[a-z0-9]+)*'\nload-constant-name: (([A-Z][a-z0-9]*)+|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*)\nloop-variable-name: _?[a-z][a-z0-9]*(_[a-z0-9]+)*\nsignal-name: '[a-z][a-z0-9]*(_[a-z0-9]+)*'\nsub-class-name: _?([A-Z][a-z0-9]*)+\n```\n\nOnce the dump is performed, you can modify the `gdlintrc` file and optionally rename it to `.gdlintrc`.\nFrom now on, linter will use this config file to override the default config.\n\n## Formatting with gdformat\n\n**Formatting may lead to data loss, so it's highly recommended to use it along with Version Control System (VCS) e.g. `git`**\n\n`gdformat` is the uncompromising GDScript code formatter. The only configurable thing is max line length allowed (`--line-length`). The rest will be taken care of by `gdformat` in a one, consistent way.\n\nTo run a formatter you need to perform installation first. Once done, given a `test.gd` file:\n\n```\nclass X:\n\tvar x=[1,2,{'a':1}]\n\tvar y=[1,2,3,]     # trailing comma\n\tfunc foo(a:int,b,c=[1,2,3]):\n\t\tif a in c and \\\n\t\t   b > 100:\n\t\t\tprint('foo')\nfunc bar():\n\tprint('bar')\n```\n\nwhen you run `gdformat test.gd`, the `test.gd` file will be reformatted as follows:\n\n```\nclass X:\n\tvar x = [1, 2, {'a': 1}]\n\tvar y = [\n\t\t1,\n\t\t2,\n\t\t3,\n\t]  # trailing comma\n\n\tfunc foo(a: int, b, c = [1, 2, 3]):\n\t\tif a in c and b > 100:\n\t\t\tprint('foo')\n\n\nfunc bar():\n\tprint('bar')\n```\n\nIf the program formats your files successfully, it will return the exit code `0`. Non-zero code will be returned otherwise.\n\n## Parsing with gdparse\n\nTo parse a file, use the `gdparse` program:\n\n```\ngdparse tests/valid-gd-scripts/recursive_tool.gd -p\n```\n\nThe parser outputs a tree that represents your code's structure:\n\n```\nstart\n  class_def\n    X\n    class_body\n      tool_stmt\n      signal_stmt\tsss\n  class_def\n    Y\n    class_body\n      tool_stmt\n      signal_stmt\tsss\n  tool_stmt\n```\n\nIf the program parses your file sucessfully, it will return the exit code `0`.\n\n## Running tests\n\nTo run tests you need [tox](https://tox.readthedocs.io/en/latest/), a tool to automate testing in Python.\n\nInstall it with:\n\n```\npip3 install tox\n```\n\nTo invoke entire test suite, in the `godot-gdscript-toolkit` project directory, run:\n\n```\ntox\n```\n\nYou can run only selected test cases:\n\n```\ntox -e py3 -- -k lint\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Scony/godot-gdscript-toolkit", "keywords": "GODOT,GDSCRIPT,PARSER,LINTER,FORMATTER", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gdtoolkit", "package_url": "https://pypi.org/project/gdtoolkit/", "platform": "", "project_url": "https://pypi.org/project/gdtoolkit/", "project_urls": {"Homepage": "https://github.com/Scony/godot-gdscript-toolkit"}, "release_url": "https://pypi.org/project/gdtoolkit/3.2.6/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Independent set of tools for working with GDScript - parser, linter and formatter", "version": "3.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GDScript Toolkit</h1>\n<p><a href=\"https://travis-ci.com/Scony/godot-gdscript-toolkit\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/99d8f535f953ca4e0035806ec05b013ee2e510da/68747470733a2f2f7472617669732d63692e636f6d2f53636f6e792f676f646f742d67647363726970742d746f6f6c6b69742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>This project provides a set of tools for daily work with <code>GDScript</code>. At the moment it provides:</p>\n<ul>\n<li>A parser that produces a parse tree for debugging and educational purposes.</li>\n<li>A linter that performs a static analysis according to some predefined configuration.</li>\n<li>A formatter that formats the code according to some predefined rules.</li>\n</ul>\n<h2>Installation</h2>\n<p>To install this project you need <code>python3</code> and <code>pip</code>.</p>\n<p>Use this command in your terminal to install from this git repository:</p>\n<pre><code>pip3 install gdtoolkit\n</code></pre>\n<h2>Linting with gdlint</h2>\n<p>To run a linter you need to perform installation first. Once done, you can run e.g.:</p>\n<pre><code>$ gdlint misc/MarkovianPCG.gd\n</code></pre>\n<p>Which outputs messages like:</p>\n<pre><code>misc/MarkovianPCG.gd:96: Error: Function argument name \"aOrigin\" is not valid (function-argument-name)\nmisc/MarkovianPCG.gd:96: Error: Function argument name \"aPos\" is not valid (function-argument-name)\n</code></pre>\n<p>To tweak the default check settings, you can dump the default config to a file:</p>\n<pre><code>$ gdlint -d\n$ cat gdlintrc\nclass-load-variable-name: (([A-Z][a-z0-9]*)+|_?[a-z][a-z0-9]*(_[a-z0-9]+)*)\nclass-name: ([A-Z][a-z0-9]*)+\nclass-variable-name: _?[a-z][a-z0-9]*(_[a-z0-9]+)*\nconstant-name: '[A-Z][A-Z0-9]*(_[A-Z0-9]+)*'\ndisable: []\nenum-element-name: '[A-Z][A-Z0-9]*(_[A-Z0-9]+)*'\nenum-name: ([A-Z][a-z0-9]*)+\nfunction-argument-name: _?[a-z][a-z0-9]*(_[a-z0-9]+)*\nfunction-arguments-number: 10\nfunction-load-variable-name: ([A-Z][a-z0-9]*)+\nfunction-name: (_on_([A-Z][a-z0-9]*)+(_[a-z0-9]+)*|_?[a-z][a-z0-9]*(_[a-z0-9]+)*)\nfunction-variable-name: '[a-z][a-z0-9]*(_[a-z0-9]+)*'\nload-constant-name: (([A-Z][a-z0-9]*)+|[A-Z][A-Z0-9]*(_[A-Z0-9]+)*)\nloop-variable-name: _?[a-z][a-z0-9]*(_[a-z0-9]+)*\nsignal-name: '[a-z][a-z0-9]*(_[a-z0-9]+)*'\nsub-class-name: _?([A-Z][a-z0-9]*)+\n</code></pre>\n<p>Once the dump is performed, you can modify the <code>gdlintrc</code> file and optionally rename it to <code>.gdlintrc</code>.\nFrom now on, linter will use this config file to override the default config.</p>\n<h2>Formatting with gdformat</h2>\n<p><strong>Formatting may lead to data loss, so it's highly recommended to use it along with Version Control System (VCS) e.g. <code>git</code></strong></p>\n<p><code>gdformat</code> is the uncompromising GDScript code formatter. The only configurable thing is max line length allowed (<code>--line-length</code>). The rest will be taken care of by <code>gdformat</code> in a one, consistent way.</p>\n<p>To run a formatter you need to perform installation first. Once done, given a <code>test.gd</code> file:</p>\n<pre><code>class X:\n\tvar x=[1,2,{'a':1}]\n\tvar y=[1,2,3,]     # trailing comma\n\tfunc foo(a:int,b,c=[1,2,3]):\n\t\tif a in c and \\\n\t\t   b &gt; 100:\n\t\t\tprint('foo')\nfunc bar():\n\tprint('bar')\n</code></pre>\n<p>when you run <code>gdformat test.gd</code>, the <code>test.gd</code> file will be reformatted as follows:</p>\n<pre><code>class X:\n\tvar x = [1, 2, {'a': 1}]\n\tvar y = [\n\t\t1,\n\t\t2,\n\t\t3,\n\t]  # trailing comma\n\n\tfunc foo(a: int, b, c = [1, 2, 3]):\n\t\tif a in c and b &gt; 100:\n\t\t\tprint('foo')\n\n\nfunc bar():\n\tprint('bar')\n</code></pre>\n<p>If the program formats your files successfully, it will return the exit code <code>0</code>. Non-zero code will be returned otherwise.</p>\n<h2>Parsing with gdparse</h2>\n<p>To parse a file, use the <code>gdparse</code> program:</p>\n<pre><code>gdparse tests/valid-gd-scripts/recursive_tool.gd -p\n</code></pre>\n<p>The parser outputs a tree that represents your code's structure:</p>\n<pre><code>start\n  class_def\n    X\n    class_body\n      tool_stmt\n      signal_stmt\tsss\n  class_def\n    Y\n    class_body\n      tool_stmt\n      signal_stmt\tsss\n  tool_stmt\n</code></pre>\n<p>If the program parses your file sucessfully, it will return the exit code <code>0</code>.</p>\n<h2>Running tests</h2>\n<p>To run tests you need <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">tox</a>, a tool to automate testing in Python.</p>\n<p>Install it with:</p>\n<pre><code>pip3 install tox\n</code></pre>\n<p>To invoke entire test suite, in the <code>godot-gdscript-toolkit</code> project directory, run:</p>\n<pre><code>tox\n</code></pre>\n<p>You can run only selected test cases:</p>\n<pre><code>tox -e py3 -- -k lint\n</code></pre>\n\n          </div>"}, "last_serial": 6956150, "releases": {"3.2.1": [{"comment_text": "", "digests": {"md5": "46d48dbb5c5f94d40dc91f72bb29ff77", "sha256": "47613d34d366f0bfea0ee14b3450e01ef99c33357db0a93529e60ae1b26930bf"}, "downloads": -1, "filename": "gdtoolkit-3.2.1.tar.gz", "has_sig": false, "md5_digest": "46d48dbb5c5f94d40dc91f72bb29ff77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 26580, "upload_time": "2020-02-02T20:45:21", "upload_time_iso_8601": "2020-02-02T20:45:21.328258Z", "url": "https://files.pythonhosted.org/packages/12/62/59cc65653707a24e8dc27f19fb757e02c0bff3dab481986fc63e4e206f12/gdtoolkit-3.2.1.tar.gz", "yanked": false}], "3.2.2": [{"comment_text": "", "digests": {"md5": "a37b3402fb043e2d413c9c826d486016", "sha256": "90717d9f1f61768a0415c021edddf96cfad06fc721a9cedaf9f486c0f37b0ee0"}, "downloads": -1, "filename": "gdtoolkit-3.2.2.tar.gz", "has_sig": false, "md5_digest": "a37b3402fb043e2d413c9c826d486016", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 27633, "upload_time": "2020-02-03T09:30:05", "upload_time_iso_8601": "2020-02-03T09:30:05.009147Z", "url": "https://files.pythonhosted.org/packages/cb/68/ecad2a3a97b917f52379ae0ceaa5c746fb0621595c8e10a0f62cd0310fa8/gdtoolkit-3.2.2.tar.gz", "yanked": false}], "3.2.3": [{"comment_text": "", "digests": {"md5": "53857060eb5784b6fb2601f658cf6630", "sha256": "891acb5d52910446b906c9ef87babfe2f960aafd0db25e3cc5615afecacfc838"}, "downloads": -1, "filename": "gdtoolkit-3.2.3.tar.gz", "has_sig": false, "md5_digest": "53857060eb5784b6fb2601f658cf6630", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 29015, "upload_time": "2020-02-04T18:43:20", "upload_time_iso_8601": "2020-02-04T18:43:20.405829Z", "url": "https://files.pythonhosted.org/packages/26/7a/2759b6345ef3a3a89eab872ce061fbb8d66a9bfc41f024211df09ee72641/gdtoolkit-3.2.3.tar.gz", "yanked": false}], "3.2.4": [{"comment_text": "", "digests": {"md5": "85109fbd862298bdd2543f8591e432a2", "sha256": "1ec42eec14ec0138f61e0f88bc40f1112e1adfbd54ab7215693d8056354a8052"}, "downloads": -1, "filename": "gdtoolkit-3.2.4.tar.gz", "has_sig": false, "md5_digest": "85109fbd862298bdd2543f8591e432a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 27825, "upload_time": "2020-02-06T20:18:58", "upload_time_iso_8601": "2020-02-06T20:18:58.770125Z", "url": "https://files.pythonhosted.org/packages/f9/c7/3b2375f0fe7798dfa38c36990bfd76ad61bd604555641de3d7b52f6439e4/gdtoolkit-3.2.4.tar.gz", "yanked": false}], "3.2.5": [{"comment_text": "", "digests": {"md5": "48643ed462e8cb76c31db37ca01e4f4a", "sha256": "bd00848fd8545bc8628b922967070cded5c0ff64b6ad0040baa69f788451e44e"}, "downloads": -1, "filename": "gdtoolkit-3.2.5.tar.gz", "has_sig": false, "md5_digest": "48643ed462e8cb76c31db37ca01e4f4a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 29578, "upload_time": "2020-02-09T19:20:46", "upload_time_iso_8601": "2020-02-09T19:20:46.333018Z", "url": "https://files.pythonhosted.org/packages/b8/e0/5281538e10c2b6d65f3d4057b41e60f2f2ee2ae90d28b0076077ef6f5e6a/gdtoolkit-3.2.5.tar.gz", "yanked": false}], "3.2.6": [{"comment_text": "", "digests": {"md5": "01dc16de7011c93faf1d1d121a49a906", "sha256": "6694a1347c5da8cab22ac5f3312f1c981e287dbcb00ec135afb269cdec08be5e"}, "downloads": -1, "filename": "gdtoolkit-3.2.6.tar.gz", "has_sig": false, "md5_digest": "01dc16de7011c93faf1d1d121a49a906", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 29205, "upload_time": "2020-04-05T14:56:44", "upload_time_iso_8601": "2020-04-05T14:56:44.159837Z", "url": "https://files.pythonhosted.org/packages/97/41/e3e44a85bcd73409cb4013818b70eec64d36f87cc1ec6360a397665efd38/gdtoolkit-3.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "01dc16de7011c93faf1d1d121a49a906", "sha256": "6694a1347c5da8cab22ac5f3312f1c981e287dbcb00ec135afb269cdec08be5e"}, "downloads": -1, "filename": "gdtoolkit-3.2.6.tar.gz", "has_sig": false, "md5_digest": "01dc16de7011c93faf1d1d121a49a906", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 29205, "upload_time": "2020-04-05T14:56:44", "upload_time_iso_8601": "2020-04-05T14:56:44.159837Z", "url": "https://files.pythonhosted.org/packages/97/41/e3e44a85bcd73409cb4013818b70eec64d36f87cc1ec6360a397665efd38/gdtoolkit-3.2.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:40 2020"}