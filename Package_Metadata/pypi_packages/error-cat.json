{"info": {"author": "Robert Morgan", "author_email": "robert.morgan@wisc.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# error_cat\n\n### A fun way to display python errors.\n\n\nDo you find long python error tracebacks annoying? Personally, they make me painfully aware of the fact that I don't know what I'm doing. And while that is certainly the case, sometimes I'd like that news to be delivered to me in a nicer way. For that, there is `error_cat`.\n\n### Installation\n\n```pip install error_cat```\n\n### Usage\n\n```error_cat python <name of your favorite python script>.py```\n\nIf `<name of your favorite python script>.py` runs successfully, you will see a fun, reassuring message from `error_cat`:\n\n```\n                ________________________\n               /                        \\\n               |   Everything worked!   |\n               \\  ______________________/\n              /  /\n ,_     _    / /\n |\\\\_,-~/   /'\n / _  _ |    ,--.\n(  @  @ )   / ,-'\n \\  _T_/-._( (\n /         `. \\\n|         _  \\ |\n \\ \\ ,  /      |\n  || |-_\\__   /\n ((_/`(____,-'\n\n```\n\nOn the other hand, if `<name of your favorite python script>.py` produces an error, `error_cat` will break the news to you. Here is an example script that will lead to an error:\n\n`fake_error.py`\n\n```python\ndef func():\n\tfunc2()\n\ndef func2():\n\tprint(5 + \"5\")\n\nfunc()\n```\n\nHere is what `error_cat` will tell you:\n\n```\n$ error_cat python fake_error.py\n\n                _________________________________________________________________\n               /                                                                 \\\n               |   File \"fake_error.py\", line 5, in func2                        |\n               |   TypeError: unsupported operand types for +: 'int' and 'str'   |\n               \\  _______________________________________________________________/\n              /  /\n ,_     _    / /\n |\\\\_,-~/   /'\n / _  _ |    ,--.\n(  @  @ )   / ,-'\n \\  _T_/-._( (\n /         `. \\\n|         _  \\ |\n \\ \\ ,  /      |\n  || |-_\\__   /\n ((_/`(____,-'\n ```\n\n## Artwork Credit\n\nAll ascii artwork is from the [ASCII Art Archive](https://www.asciiart.eu/). Individual artworks are credited to the artist (if known) in the comments of `error_cat/characters.py`. A big thank you to the following artists whose art has been incorporated into `error_cat`:\n\n- Morfina\n- Joan G. Stark \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rmorgan10/error_cat", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "error-cat", "package_url": "https://pypi.org/project/error-cat/", "platform": "", "project_url": "https://pypi.org/project/error-cat/", "project_urls": {"Homepage": "https://github.com/rmorgan10/error_cat"}, "release_url": "https://pypi.org/project/error-cat/0.5/", "requires_dist": null, "requires_python": ">=2.6", "summary": "A fun way to display python errors", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>error_cat</h1>\n<h3>A fun way to display python errors.</h3>\n<p>Do you find long python error tracebacks annoying? Personally, they make me painfully aware of the fact that I don't know what I'm doing. And while that is certainly the case, sometimes I'd like that news to be delivered to me in a nicer way. For that, there is <code>error_cat</code>.</p>\n<h3>Installation</h3>\n<p><code>pip install error_cat</code></p>\n<h3>Usage</h3>\n<p><code>error_cat python &lt;name of your favorite python script&gt;.py</code></p>\n<p>If <code>&lt;name of your favorite python script&gt;.py</code> runs successfully, you will see a fun, reassuring message from <code>error_cat</code>:</p>\n<pre><code>                ________________________\n               /                        \\\n               |   Everything worked!   |\n               \\  ______________________/\n              /  /\n ,_     _    / /\n |\\\\_,-~/   /'\n / _  _ |    ,--.\n(  @  @ )   / ,-'\n \\  _T_/-._( (\n /         `. \\\n|         _  \\ |\n \\ \\ ,  /      |\n  || |-_\\__   /\n ((_/`(____,-'\n\n</code></pre>\n<p>On the other hand, if <code>&lt;name of your favorite python script&gt;.py</code> produces an error, <code>error_cat</code> will break the news to you. Here is an example script that will lead to an error:</p>\n<p><code>fake_error.py</code></p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">():</span>\n\t<span class=\"n\">func2</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func2</span><span class=\"p\">():</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"mi\">5</span> <span class=\"o\">+</span> <span class=\"s2\">\"5\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">func</span><span class=\"p\">()</span>\n</pre>\n<p>Here is what <code>error_cat</code> will tell you:</p>\n<pre><code>$ error_cat python fake_error.py\n\n                _________________________________________________________________\n               /                                                                 \\\n               |   File \"fake_error.py\", line 5, in func2                        |\n               |   TypeError: unsupported operand types for +: 'int' and 'str'   |\n               \\  _______________________________________________________________/\n              /  /\n ,_     _    / /\n |\\\\_,-~/   /'\n / _  _ |    ,--.\n(  @  @ )   / ,-'\n \\  _T_/-._( (\n /         `. \\\n|         _  \\ |\n \\ \\ ,  /      |\n  || |-_\\__   /\n ((_/`(____,-'\n</code></pre>\n<h2>Artwork Credit</h2>\n<p>All ascii artwork is from the <a href=\"https://www.asciiart.eu/\" rel=\"nofollow\">ASCII Art Archive</a>. Individual artworks are credited to the artist (if known) in the comments of <code>error_cat/characters.py</code>. A big thank you to the following artists whose art has been incorporated into <code>error_cat</code>:</p>\n<ul>\n<li>Morfina</li>\n<li>Joan G. Stark</li>\n</ul>\n\n          </div>"}, "last_serial": 6035035, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dda15b8a539342388463f19eec65548e", "sha256": "993b39a4b46cbc2016b29a34fd7146d38940548e2ca82e7b67cad96d903bc6d7"}, "downloads": -1, "filename": "error_cat-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dda15b8a539342388463f19eec65548e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3164, "upload_time": "2019-10-25T22:14:05", "upload_time_iso_8601": "2019-10-25T22:14:05.206065Z", "url": "https://files.pythonhosted.org/packages/82/7b/0a62fb1ea77ff575da36d3611c4d176f5d06849e9bd985b2fbf41784d9ac/error_cat-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "3ac18fc393b54d1dc9f7f27e598c8202", "sha256": "9f7621957a208c0076e27e06d95ee46599ba6132211bbb94a6e3a71fe0d37f1a"}, "downloads": -1, "filename": "error_cat-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3ac18fc393b54d1dc9f7f27e598c8202", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3167, "upload_time": "2019-10-25T22:14:07", "upload_time_iso_8601": "2019-10-25T22:14:07.151175Z", "url": "https://files.pythonhosted.org/packages/8f/04/0b6e34eade91cc863494004fb98e4466bfac9b1bb57128bb4a0e18f54db3/error_cat-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "1e59a87eb21e6692eb4fd9fe0af8aae4", "sha256": "1023145a98c95d7ca8d58c2460acdd6545d6a5f3488eb6a0002965b6b235dbfb"}, "downloads": -1, "filename": "error_cat-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1e59a87eb21e6692eb4fd9fe0af8aae4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3966, "upload_time": "2019-10-25T22:44:08", "upload_time_iso_8601": "2019-10-25T22:44:08.539636Z", "url": "https://files.pythonhosted.org/packages/7c/75/0ce7e1075cf8e6d8eb3ef056d8a9ad23e7bcb5f25e7474a4863fa458e111/error_cat-0.3-py3-none-any.whl", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "05a7fbf0aa40f19d3097b649c8c78f5d", "sha256": "2613a313aa9c5d5788b5fb1d46c40963ba9c1ea3558e1f48e5bb4cea7a2c77ca"}, "downloads": -1, "filename": "error_cat-0.4-py2-none-any.whl", "has_sig": false, "md5_digest": "05a7fbf0aa40f19d3097b649c8c78f5d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.6", "size": 4386, "upload_time": "2019-10-26T15:32:57", "upload_time_iso_8601": "2019-10-26T15:32:57.956885Z", "url": "https://files.pythonhosted.org/packages/3b/0e/383fe51c6840c80392d43f6d7e767deaff91430b03d487f6a36cb6c12ae0/error_cat-0.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c127da2f3b627747e8cdd77db06c1bac", "sha256": "48375dced5469d3b773f8be678f9adb6c56bacb4f683cfc8d9b169f568a99ba3"}, "downloads": -1, "filename": "error_cat-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c127da2f3b627747e8cdd77db06c1bac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6", "size": 3576, "upload_time": "2019-10-26T16:07:36", "upload_time_iso_8601": "2019-10-26T16:07:36.661120Z", "url": "https://files.pythonhosted.org/packages/a4/27/843b97249fea0781e1dfdacabb20cae6f6ed3253e975413c8bdab7192eb3/error_cat-0.4-py3-none-any.whl", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "13cda809190b0ca749da0612ed080cda", "sha256": "8368e475c59b1fcc8697a7e09b1ac91d35b9a1bec0c5adb93e904803a9e24e5e"}, "downloads": -1, "filename": "error_cat-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "13cda809190b0ca749da0612ed080cda", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.6", "size": 5539, "upload_time": "2019-10-26T20:46:05", "upload_time_iso_8601": "2019-10-26T20:46:05.228306Z", "url": "https://files.pythonhosted.org/packages/b1/bf/f11fb0407a98847192527e91df5d236fd4a722e7ff5fd0fd46baf976eb71/error_cat-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a010d941a49b2006ebda0a9edaa5cd0d", "sha256": "86ca6ae0d431de87360b88fba27f363c4bdc61f535c9369a0ec9b787ef244ff0"}, "downloads": -1, "filename": "error_cat-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a010d941a49b2006ebda0a9edaa5cd0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6", "size": 4730, "upload_time": "2019-10-26T20:46:07", "upload_time_iso_8601": "2019-10-26T20:46:07.175532Z", "url": "https://files.pythonhosted.org/packages/96/86/27f2f2976d892b10423d400640c4cd632f6e3665a4b05d502c3c9162c5cc/error_cat-0.5-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13cda809190b0ca749da0612ed080cda", "sha256": "8368e475c59b1fcc8697a7e09b1ac91d35b9a1bec0c5adb93e904803a9e24e5e"}, "downloads": -1, "filename": "error_cat-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "13cda809190b0ca749da0612ed080cda", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.6", "size": 5539, "upload_time": "2019-10-26T20:46:05", "upload_time_iso_8601": "2019-10-26T20:46:05.228306Z", "url": "https://files.pythonhosted.org/packages/b1/bf/f11fb0407a98847192527e91df5d236fd4a722e7ff5fd0fd46baf976eb71/error_cat-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a010d941a49b2006ebda0a9edaa5cd0d", "sha256": "86ca6ae0d431de87360b88fba27f363c4bdc61f535c9369a0ec9b787ef244ff0"}, "downloads": -1, "filename": "error_cat-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a010d941a49b2006ebda0a9edaa5cd0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.6", "size": 4730, "upload_time": "2019-10-26T20:46:07", "upload_time_iso_8601": "2019-10-26T20:46:07.175532Z", "url": "https://files.pythonhosted.org/packages/96/86/27f2f2976d892b10423d400640c4cd632f6e3665a4b05d502c3c9162c5cc/error_cat-0.5-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:45:45 2020"}