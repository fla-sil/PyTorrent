{"info": {"author": "Nils Koelling", "author_email": "git@nk.gl", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Unix", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "``dnacol`` and ``pcol``\n========================\n\nColor DNA/RNA bases, protein amino acid codes and quality scores in terminal output\n\nAbout\n-----\n\nThis is a python script to color DNA, RNA and protein sequences in the terminal.\nIf called using ``dnacol``, it will read lines from STDIN or from a file and color all strings of\nDNA/RNA it can find. In addition, it can also color phred-encoded\nquality scores in FASTQ/SAM files.\nIf called using ``pcol``, it will instead color protein sequences encoded as amino acid one-letter codes.\n\nScreenshots\n~~~~~~~~~~~\n\n.. image:: https://raw.githubusercontent.com/koelling/dnacol/master/screenshots_v0.4.png\n\nFormat-specific coloring\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nBy default, ``dnacol`` will find and color all strings of one or more DNA/RNA letters and\n``pcol`` will color all strings of the twenty standard amino acid letters.\nHowever, they will also recognize a few standard file formats and apply more\ntargeting coloring. When reading a file, these formats will\nautomatically be recognized based on their file extensions. When reading\nfrom STDIN, ``dnacol`` and ``pcol`` will try to identify the format based on the data\nitself (for FASTQ/SAM/VCF files). The format can also be specified using\nthe ``--format`` option.\n\n-  SAM format (``--format=sam``, automatically enabled when filename\n   ends in ``.sam`` or a line matching the SAM format is found)\n\n   -  Ignore headers, color the SEQ column as DNA and the QUAL column as\n      quality scores\n\n-  FASTQ format (``--format=fastq``, automatically enabled when filename\n   ends in ``.fastq`` or ``.fq`` or the first four lines match the FASTQ\n   format)\n\n   -  Color the second line of every read as DNA\n   -  Color the fourth line of every read as quality scores\n\n-  VCF format (``--format=vcf``, automatically enabled when filename\n   ends in ``.vcf`` or a VCF header line is found)\n\n   -  Ignore comments, only color the REF and ALT column\n\n-  FASTA format (``--format=fasta``, automatically enabled when filename\n   ends in ``.fasta`` or ``.fa``)\n\n   -  Ignore sequence identifiers\n\n\nColormaps\n~~~~~~~~~\nThe script support different colormaps, which specify a color for each possible letter of the sequence.\nThese are shown in ``dnacol --help``. When called using ``dnacol``, the script will use the ``dna_brgy`` colormap by default,\nwhile ``pcol`` will use the ``protein`` colormap. You can change the ``dnacol`` colormap using a configuration file (see below).\n\nOptions\n-------\n\n::\n\n    -w, --wide\n        wide output (add spaces around each base)\n    -f FORMAT, --format FORMAT\n        file format (auto|text|sam|vcf|fastq|fasta)\n\nConfiguration\n-------------\nYou can create a configuration file in YAML format called ``/etc/dnacol`` or ``~/.dnacol`` to change the behavior of this script.\nAt the moment, the only setting available is the colormap to use for DNA sequences.\nSee see ``dnacol --help`` for examples of the colormaps that are available.\n\nTo use the ``gbyr`` instead of the ``brgy`` colormap, set the ``dna_colormap`` option like this:\n\n::\n  \n  dna_colormap: gbyr\n\nDownload/Install\n----------------\n\nTo install, use ``pip``::\n\n    pip install dnacol\n\nIf the system-wide directory is not writable, you can install to your home directory with::\n\n    pip install dnacol --user\n\nAlternatively, you can clone this git\nrepository and use the provided ``setup.py`` script.\n\n::\n\n    git clone https://github.com/koelling/dnacol.git\n    cd dnacol && python setup.py install\n\n``dnacol`` has been tested with Python 2.7 and Python 3.5 and 3.6.\n\nExamples\n--------\n\n::\n\n    #read gzipped file\n    dnacol examples/phix.fa.gz | head\n\n    #pipe from stdin\n    head examples/reads.txt | dnacol --wide\n\n    #use `pcol` for protein sequences\n    pcol examples/hras.fa\n\n    #use `less -R` to display colors in less\n    dnacol examples/phix.fa.gz | less -R\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/koelling/dnacol/archive/v0.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/koelling/dnacol/", "keywords": "dnacol rnacol pcol rna dna protein amino acid quality phred color colour bases console terminal stdout", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dnacol", "package_url": "https://pypi.org/project/dnacol/", "platform": "any", "project_url": "https://pypi.org/project/dnacol/", "project_urls": {"Download": "https://github.com/koelling/dnacol/archive/v0.4.tar.gz", "Homepage": "https://github.com/koelling/dnacol/"}, "release_url": "https://pypi.org/project/dnacol/0.4/", "requires_dist": null, "requires_python": "", "summary": "Display FASTA/FASTQ/SAM/VCF files with colored DNA/RNA bases and quality scores (`dnacol`) or a protein sequence with colored amino acid codes (`pcol`) in the terminal", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Color DNA/RNA bases, protein amino acid codes and quality scores in terminal output</p>\n<div id=\"about\">\n<h2>About</h2>\n<p>This is a python script to color DNA, RNA and protein sequences in the terminal.\nIf called using <tt>dnacol</tt>, it will read lines from STDIN or from a file and color all strings of\nDNA/RNA it can find. In addition, it can also color phred-encoded\nquality scores in FASTQ/SAM files.\nIf called using <tt>pcol</tt>, it will instead color protein sequences encoded as amino acid one-letter codes.</p>\n<div id=\"screenshots\">\n<h3>Screenshots</h3>\n<img alt=\"https://raw.githubusercontent.com/koelling/dnacol/master/screenshots_v0.4.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7074b05c70a227ac167595558293ac55de7407f6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6b6f656c6c696e672f646e61636f6c2f6d61737465722f73637265656e73686f74735f76302e342e706e67\">\n</div>\n<div id=\"format-specific-coloring\">\n<h3>Format-specific coloring</h3>\n<p>By default, <tt>dnacol</tt> will find and color all strings of one or more DNA/RNA letters and\n<tt>pcol</tt> will color all strings of the twenty standard amino acid letters.\nHowever, they will also recognize a few standard file formats and apply more\ntargeting coloring. When reading a file, these formats will\nautomatically be recognized based on their file extensions. When reading\nfrom STDIN, <tt>dnacol</tt> and <tt>pcol</tt> will try to identify the format based on the data\nitself (for FASTQ/SAM/VCF files). The format can also be specified using\nthe <tt><span class=\"pre\">--format</span></tt> option.</p>\n<ul>\n<li>SAM format (<tt><span class=\"pre\">--format=sam</span></tt>, automatically enabled when filename\nends in <tt>.sam</tt> or a line matching the SAM format is found)<ul>\n<li>Ignore headers, color the SEQ column as DNA and the QUAL column as\nquality scores</li>\n</ul>\n</li>\n<li>FASTQ format (<tt><span class=\"pre\">--format=fastq</span></tt>, automatically enabled when filename\nends in <tt>.fastq</tt> or <tt>.fq</tt> or the first four lines match the FASTQ\nformat)<ul>\n<li>Color the second line of every read as DNA</li>\n<li>Color the fourth line of every read as quality scores</li>\n</ul>\n</li>\n<li>VCF format (<tt><span class=\"pre\">--format=vcf</span></tt>, automatically enabled when filename\nends in <tt>.vcf</tt> or a VCF header line is found)<ul>\n<li>Ignore comments, only color the REF and ALT column</li>\n</ul>\n</li>\n<li>FASTA format (<tt><span class=\"pre\">--format=fasta</span></tt>, automatically enabled when filename\nends in <tt>.fasta</tt> or <tt>.fa</tt>)<ul>\n<li>Ignore sequence identifiers</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"colormaps\">\n<h3>Colormaps</h3>\n<p>The script support different colormaps, which specify a color for each possible letter of the sequence.\nThese are shown in <tt>dnacol <span class=\"pre\">--help</span></tt>. When called using <tt>dnacol</tt>, the script will use the <tt>dna_brgy</tt> colormap by default,\nwhile <tt>pcol</tt> will use the <tt>protein</tt> colormap. You can change the <tt>dnacol</tt> colormap using a configuration file (see below).</p>\n</div>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<pre>-w, --wide\n    wide output (add spaces around each base)\n-f FORMAT, --format FORMAT\n    file format (auto|text|sam|vcf|fastq|fasta)\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>You can create a configuration file in YAML format called <tt>/etc/dnacol</tt> or <tt><span class=\"pre\">~/.dnacol</span></tt> to change the behavior of this script.\nAt the moment, the only setting available is the colormap to use for DNA sequences.\nSee see <tt>dnacol <span class=\"pre\">--help</span></tt> for examples of the colormaps that are available.</p>\n<p>To use the <tt>gbyr</tt> instead of the <tt>brgy</tt> colormap, set the <tt>dna_colormap</tt> option like this:</p>\n<pre>dna_colormap: gbyr\n</pre>\n</div>\n<div id=\"download-install\">\n<h2>Download/Install</h2>\n<p>To install, use <tt>pip</tt>:</p>\n<pre>pip install dnacol\n</pre>\n<p>If the system-wide directory is not writable, you can install to your home directory with:</p>\n<pre>pip install dnacol --user\n</pre>\n<p>Alternatively, you can clone this git\nrepository and use the provided <tt>setup.py</tt> script.</p>\n<pre>git clone https://github.com/koelling/dnacol.git\ncd dnacol &amp;&amp; python setup.py install\n</pre>\n<p><tt>dnacol</tt> has been tested with Python 2.7 and Python 3.5 and 3.6.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre>#read gzipped file\ndnacol examples/phix.fa.gz | head\n\n#pipe from stdin\nhead examples/reads.txt | dnacol --wide\n\n#use `pcol` for protein sequences\npcol examples/hras.fa\n\n#use `less -R` to display colors in less\ndnacol examples/phix.fa.gz | less -R\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3135046, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "c85cd94a96eedbe3ea56349529e5c70b", "sha256": "ef9d5b85b6f59abf59d47b3f6a3aff4b9aee83a386473d2bfe42a997ee6f4a31"}, "downloads": -1, "filename": "dnacol-0.3.1.tar.gz", "has_sig": false, "md5_digest": "c85cd94a96eedbe3ea56349529e5c70b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6414, "upload_time": "2017-08-01T13:07:01", "upload_time_iso_8601": "2017-08-01T13:07:01.415645Z", "url": "https://files.pythonhosted.org/packages/fe/4e/69b6deec09ba3158b6bb64ab33e517c3bdcdf6fdfd476cf2104e4cdbd020/dnacol-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "f39c5c328f4d8df3cc96dac27a326688", "sha256": "d094d80d13c44c7ff6b5a8ca268ba5d18a6a042c709ef7ad8532742381b52d51"}, "downloads": -1, "filename": "dnacol-0.3.2.tar.gz", "has_sig": false, "md5_digest": "f39c5c328f4d8df3cc96dac27a326688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6492, "upload_time": "2017-08-01T13:34:19", "upload_time_iso_8601": "2017-08-01T13:34:19.802717Z", "url": "https://files.pythonhosted.org/packages/80/77/91c570ef68486250ecf273608b8838b8c118b9dfa2c87d4d03edf798a1ed/dnacol-0.3.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "2aecf1c35fef40ba9790e53974c361e0", "sha256": "3f9e4d22a28993ba40473f6698767a551ccc55479d8b74c85fe4b0247f181bc4"}, "downloads": -1, "filename": "dnacol-0.4.tar.gz", "has_sig": false, "md5_digest": "2aecf1c35fef40ba9790e53974c361e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8108, "upload_time": "2017-08-30T15:06:56", "upload_time_iso_8601": "2017-08-30T15:06:56.352865Z", "url": "https://files.pythonhosted.org/packages/ee/39/cece018d186c50f9cf58df3467291b42c5858373371f813218670e03d728/dnacol-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2aecf1c35fef40ba9790e53974c361e0", "sha256": "3f9e4d22a28993ba40473f6698767a551ccc55479d8b74c85fe4b0247f181bc4"}, "downloads": -1, "filename": "dnacol-0.4.tar.gz", "has_sig": false, "md5_digest": "2aecf1c35fef40ba9790e53974c361e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8108, "upload_time": "2017-08-30T15:06:56", "upload_time_iso_8601": "2017-08-30T15:06:56.352865Z", "url": "https://files.pythonhosted.org/packages/ee/39/cece018d186c50f9cf58df3467291b42c5858373371f813218670e03d728/dnacol-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:09 2020"}