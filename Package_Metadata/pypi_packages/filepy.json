{"info": {"author": "KordianD", "author_email": "not_valid@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "[![Build Status](https://travis-ci.com/KordianD/filepy.svg?branch=master)](https://travis-ci.com/KordianD/filepy)\n[![PyPI version](https://badge.fury.io/py/filepy.svg)](https://badge.fury.io/py/filepy)\n\n# Goal\nThis is a package which converts files to different types.\n\n# Supported extensions \n- CSV\n- ARFF\n\n# Installation\n``pip install filepy --upgrade`` \n\n# Usage\n\nThis library is mainly divided into 2 ideas, namely writers and readers.\nReaders will read your files, writer will write in appropriate format.\n\n# Available classes:\n- CsvReader\n- CsvWriter\n- ArffReader\n- ArffWriter\n\n\nSuppose that you have a csv file: `example1.csv`.\n\nYou want to convert this file to an arff format for instance `converted.arff`\n\n    from filepy.csv_reader import CsvReader\n    from filepy.arff_writer import ArffWriter\n    from filepy.file_converter import convert\n\n    csv_reader = CsvReader('example1.csv', delimiter=';')\n    arff_writer = ArffWriter('converted.arff', delimiter=',')\n\n    convert(input_reader=csv_reader, output_writer=arff_writer)\n\n# Additional options\n\nEach writer and reader has additional options to use.\n\n# CsvReader\nCsvReader(path_to_file, delimiter = ',', first_line_column_names = True, skip_first_column = False)\n\n    delimiter - how data is separated, can be regex\n    first_line_column_names - uses first line to read columns\n    skip_first_column - skips first column of data \n\nAfter creating object you can get data from it.\n\n    csv_reader = CsvReader('your/path/to/file')\n    data = csv_reader.dto.data\n    column_names = csv_reader.dto.data\n\n# CsvWriter    \nCsvWriter(path_to_file, delimiter = ',', skip_writing_columns = False)\n\n    delimiter - how data will be separated in generated file\n    skip_writing_column - whether first line in generated file should have columns names\n\n# ArffReader\nArffReader(path_to_file, delimiter = ',')\n\n    delimiter - how data is separated, can be regex\n\nAfter creating object you can get data from it.\n\n    csv_reader = CsvReader('your/path/to/file')\n    data = csv_reader.dto.data\n    column_names = csv_reader.dto.columns\n\n# ArffWriter\nArffWriter(path_to_file, delimiter= ',')\n\n    delimiter - how data will be separated in generated file\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/KordianD/filepy", "keywords": "file,convert,extensions,csv,arff", "license": "", "maintainer": "", "maintainer_email": "", "name": "filepy", "package_url": "https://pypi.org/project/filepy/", "platform": "", "project_url": "https://pypi.org/project/filepy/", "project_urls": {"Homepage": "https://github.com/KordianD/filepy"}, "release_url": "https://pypi.org/project/filepy/0.17/", "requires_dist": null, "requires_python": "", "summary": "File converter to different extensions", "version": "0.17", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/KordianD/filepy\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d88fea5b095ab7e63ff343494d6d9db07e951a1d/68747470733a2f2f7472617669732d63692e636f6d2f4b6f726469616e442f66696c6570792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/filepy\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a19ce7f332437c5a6e01ce11ca34034452c15f16/68747470733a2f2f62616467652e667572792e696f2f70792f66696c6570792e737667\"></a></p>\n<h1>Goal</h1>\n<p>This is a package which converts files to different types.</p>\n<h1>Supported extensions</h1>\n<ul>\n<li>CSV</li>\n<li>ARFF</li>\n</ul>\n<h1>Installation</h1>\n<p><code>pip install filepy --upgrade</code></p>\n<h1>Usage</h1>\n<p>This library is mainly divided into 2 ideas, namely writers and readers.\nReaders will read your files, writer will write in appropriate format.</p>\n<h1>Available classes:</h1>\n<ul>\n<li>CsvReader</li>\n<li>CsvWriter</li>\n<li>ArffReader</li>\n<li>ArffWriter</li>\n</ul>\n<p>Suppose that you have a csv file: <code>example1.csv</code>.</p>\n<p>You want to convert this file to an arff format for instance <code>converted.arff</code></p>\n<pre><code>from filepy.csv_reader import CsvReader\nfrom filepy.arff_writer import ArffWriter\nfrom filepy.file_converter import convert\n\ncsv_reader = CsvReader('example1.csv', delimiter=';')\narff_writer = ArffWriter('converted.arff', delimiter=',')\n\nconvert(input_reader=csv_reader, output_writer=arff_writer)\n</code></pre>\n<h1>Additional options</h1>\n<p>Each writer and reader has additional options to use.</p>\n<h1>CsvReader</h1>\n<p>CsvReader(path_to_file, delimiter = ',', first_line_column_names = True, skip_first_column = False)</p>\n<pre><code>delimiter - how data is separated, can be regex\nfirst_line_column_names - uses first line to read columns\nskip_first_column - skips first column of data \n</code></pre>\n<p>After creating object you can get data from it.</p>\n<pre><code>csv_reader = CsvReader('your/path/to/file')\ndata = csv_reader.dto.data\ncolumn_names = csv_reader.dto.data\n</code></pre>\n<h1>CsvWriter</h1>\n<p>CsvWriter(path_to_file, delimiter = ',', skip_writing_columns = False)</p>\n<pre><code>delimiter - how data will be separated in generated file\nskip_writing_column - whether first line in generated file should have columns names\n</code></pre>\n<h1>ArffReader</h1>\n<p>ArffReader(path_to_file, delimiter = ',')</p>\n<pre><code>delimiter - how data is separated, can be regex\n</code></pre>\n<p>After creating object you can get data from it.</p>\n<pre><code>csv_reader = CsvReader('your/path/to/file')\ndata = csv_reader.dto.data\ncolumn_names = csv_reader.dto.columns\n</code></pre>\n<h1>ArffWriter</h1>\n<p>ArffWriter(path_to_file, delimiter= ',')</p>\n<pre><code>delimiter - how data will be separated in generated file\n</code></pre>\n\n          </div>"}, "last_serial": 4576145, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "49b31be5a3c700757ef68fc3e7c11c7c", "sha256": "14e9ba25345ee1a43b016fdadcd3f5595eb891f58c8099d022e81a398fb0324f"}, "downloads": -1, "filename": "filepy-0.1.tar.gz", "has_sig": false, "md5_digest": "49b31be5a3c700757ef68fc3e7c11c7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 668, "upload_time": "2018-11-19T17:19:06", "upload_time_iso_8601": "2018-11-19T17:19:06.788688Z", "url": "https://files.pythonhosted.org/packages/77/8d/c54547a4406db6eed49ce9b5d84046a459ff1ba19ee7f1252b3792571d97/filepy-0.1.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "85dec0b09c235925352766fa5af5f02b", "sha256": "98a443089255b0db6a97093b7102b00e05b01a876afdddaddb85757f6da5f606"}, "downloads": -1, "filename": "filepy-0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "85dec0b09c235925352766fa5af5f02b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1923, "upload_time": "2018-11-20T21:07:56", "upload_time_iso_8601": "2018-11-20T21:07:56.715594Z", "url": "https://files.pythonhosted.org/packages/59/72/c0b575b537811985ec91dd8b6f930b6def8971c84261d3ee2dab6511e691/filepy-0.11-py3-none-any.whl", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "43ef9e6368f83c1f98f1bed8c1c4f5c6", "sha256": "807e15b0276f9a5cb3e189c437582eb12fb907056540cce6d15cb779b3794aed"}, "downloads": -1, "filename": "filepy-0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "43ef9e6368f83c1f98f1bed8c1c4f5c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1950, "upload_time": "2018-11-20T21:20:23", "upload_time_iso_8601": "2018-11-20T21:20:23.317598Z", "url": "https://files.pythonhosted.org/packages/20/68/98187f1ab7f4a2243507488ade5d0032da568281976cf5ed310979e0fd8d/filepy-0.12-py3-none-any.whl", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "492db20a8ec174ddc735c9a55380e38d", "sha256": "56d82771322131ff199805102824ea674893cf1baabe022312c2acd3988f7f14"}, "downloads": -1, "filename": "filepy-0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "492db20a8ec174ddc735c9a55380e38d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5046, "upload_time": "2018-11-24T22:45:00", "upload_time_iso_8601": "2018-11-24T22:45:00.640391Z", "url": "https://files.pythonhosted.org/packages/65/eb/49881f5c9e42b9cbeaeaff3db10c7ba2aadafcd8e26ec2bbb5b5eba7da48/filepy-0.13-py3-none-any.whl", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "c66f8af280ba31794d880caa505f3da0", "sha256": "18b34840f62aa3f91327cdfc5b09869bb9906298a9855b085c1dad8e5d96381f"}, "downloads": -1, "filename": "filepy-0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "c66f8af280ba31794d880caa505f3da0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5085, "upload_time": "2018-11-24T23:02:51", "upload_time_iso_8601": "2018-11-24T23:02:51.693408Z", "url": "https://files.pythonhosted.org/packages/00/bb/7c2cb469ad000ae750a10a7025e63643f2628731432243a27d2df439188a/filepy-0.14-py3-none-any.whl", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "25d1d7d994d568ac73f90ee73cad25e0", "sha256": "8c0628c767e70818b7890da5e027bdb61042e044917b9f87c387473fe33f9b7b"}, "downloads": -1, "filename": "filepy-0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "25d1d7d994d568ac73f90ee73cad25e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5829, "upload_time": "2018-11-29T21:52:03", "upload_time_iso_8601": "2018-11-29T21:52:03.070590Z", "url": "https://files.pythonhosted.org/packages/5a/22/bcbb30095f46136b9dec6a4e49e5ba9bad2c342172d48ab09006875b4600/filepy-0.15-py3-none-any.whl", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "f7fbc1bac507db91dc576db9f9a41bc8", "sha256": "3c14de6ca6a70e356fe99eb004c766f443db163246abe850dfd63f4c5296dca3"}, "downloads": -1, "filename": "filepy-0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "f7fbc1bac507db91dc576db9f9a41bc8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6201, "upload_time": "2018-12-06T18:54:40", "upload_time_iso_8601": "2018-12-06T18:54:40.407431Z", "url": "https://files.pythonhosted.org/packages/04/9a/786872625269871b076a772381dd9171a08860cc208868d483604aabb005/filepy-0.16-py3-none-any.whl", "yanked": false}], "0.17": [{"comment_text": "", "digests": {"md5": "5937f71e9129fa643472a279c5d9d6cd", "sha256": "951d998bbd7324393c3d00700091ca34da49742971f111e27cd25554f8bfd9e5"}, "downloads": -1, "filename": "filepy-0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "5937f71e9129fa643472a279c5d9d6cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6199, "upload_time": "2018-12-08T21:53:41", "upload_time_iso_8601": "2018-12-08T21:53:41.502538Z", "url": "https://files.pythonhosted.org/packages/cf/87/0e2f59cd0d896701b4ccd5198dc98792a2e200c1074012466ce7fc8a8cbb/filepy-0.17-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5937f71e9129fa643472a279c5d9d6cd", "sha256": "951d998bbd7324393c3d00700091ca34da49742971f111e27cd25554f8bfd9e5"}, "downloads": -1, "filename": "filepy-0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "5937f71e9129fa643472a279c5d9d6cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6199, "upload_time": "2018-12-08T21:53:41", "upload_time_iso_8601": "2018-12-08T21:53:41.502538Z", "url": "https://files.pythonhosted.org/packages/cf/87/0e2f59cd0d896701b4ccd5198dc98792a2e200c1074012466ce7fc8a8cbb/filepy-0.17-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:42:33 2020"}