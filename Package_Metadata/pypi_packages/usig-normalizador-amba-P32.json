{"info": {"author": "USIG - GCBA", "author_email": "Hern\u00e1n Ogasawara <hogasawara@buenosaires.gob.ar>", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: Spanish", "Operating System :: Unix", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: GIS", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Normalizador de Direcciones AMBA\n================================\nEl procedimiento de normalizaci\u00f3n de direcciones tiene por objetivo unificar la escritura de direcciones con respecto a un callejero de referencia.\nA su vez ofrece herramientas para consultar de manera transparente la existencia de cruces de calle, calles pertenecientes a\npartidos, calle con altura con y sin partido determinado. 'Normalizador de Direcciones AMBA' es una componente python para normalizar direcciones del AMBA (conurbano y CABA).\n\nPartidos disponibles\n~~~~~~~~~~~~~~~~~~~~\nServicio de callejeros: http://servicios.usig.buenosaires.gov.ar/callejero-amba\n\n+-------------------------+-------------------------+\n| * CABA                  | * La Plata              |\n| * Almirante Brown       | * Lomas de Zamora       |\n| * Avellaneda            | * Malvinas Argentinas   |\n| * Berazategui           | * Marcos Paz            |\n| * Berisso               | * Merlo                 |\n| * Ca\u00f1uelas              | * Moreno                |\n| * Ensenada              | * Mor\u00f3n                 |\n| * Escobar               | * Pilar                 |\n| * Esteban Echeverr\u00eda    | * Presidente Per\u00f3n      |\n| * Ezeiza                | * Quilmes               |\n| * Florencio Varela      | * San Fernando          |\n| * General Rodr\u00edguez     | * San Isidro            |\n| * General San Mart\u00edn    | * San Miguel            |\n| * Hurlingham            | * San Vicente           |\n| * Ituzaing\u00f3             | * Tigre                 |\n| * Jos\u00e9 C. Paz           | * Tres de Febrero       |\n| * La Matanza            | * Vicente L\u00f3pez         |\n| * Lan\u00fas                 |                         |\n+-------------------------+-------------------------+\n\n\nInstalaci\u00f3n\n-----------\n\nPyPi\n~~~~\n.. code:: bash\n\n    $ pip install -i https://test.pypi.org/simple/usig-normalizador-amba-P32\n\nGit\n~~~\n.. code:: bash\n\n    $ git clone https://github.com/santiagocastellano/normalizador-amba-Python3.git\n    $ cd normalizador-amba\n    $ python setup.py install\n\nEasy Install\n~~~~~~~~~~~~\n.. code:: bash\n\n    $ git clone https://github.com/santiagocastellano/normalizador-amba-Python3.git\n    $ cd normalizador-amba\n    $ make prepare-package\n    $ easy_install dist/usig-normalizador-amba-x.x.x.tar.gz\n\n\nGeneraci\u00f3n del paquete de instalaci\u00f3n\n-------------------------------------\n.. code:: bash\n\n    $ make prepare-package\n\n\nTesting\n-------\nEn el root del proyecto ejecutar:\n\n.. code:: bash\n\n    $ make run-test\n\n\n\nEjemplos\n--------\n\n.. code:: python\n    \n    from usig_normalizador_amba import NormalizadorAMBA\n\n    nd = NormalizadorAMBA()\n    res = nd.normalizar('callao y corrientes')\n    for r in res:\n        print r\n\nPara instanciar el normalizador para alg\u00fan/os partido/s en particular:\n\n.. code:: python\n    \n    from usig_normalizador_amba import NormalizadorAMBA\n\n    nd = NormalizadorAMBA(include_list=['caba']) # lista de codigos de partido\n    res = nd.normalizar(u'San Mart\u00edn 153')\n    for r in res:\n        print r\n\n\nPara excluir del normalizador alg\u00fan partido en particular:\n\n.. code:: python\n    \n    from usig_normalizador_amba import NormalizadorAMBA\n\n    nd = NormalizadorAMBA(exclude_list=['caba']) # lista de codigos de partido\n    res = nd.normalizar(u'San Mart\u00edn 153')\n    for r in res:\n        print r\n\n\nPara buscar una direcci\u00f3n en un texto:\n\n.. code:: python\n    \n    from usig_normalizador_amba import NormalizadorAMBA\n\n    nd = NormalizadorAMBA() # lista de codigos de partido\n    res = nd.buscarDireccion(u'Ubicado en Monse\u00f1or Alejandro Schell 166, a metros de la estaci\u00f3n de Lomas de Zamora.')\n    print res[0][0]['direcciones'][0]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/santiagocastellano/normalizador-amba-Python3.git", "keywords": "usig gcba gis normalizador direcciones amba", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "usig-normalizador-amba-P32", "package_url": "https://pypi.org/project/usig-normalizador-amba-P32/", "platform": "Unix/Linux", "project_url": "https://pypi.org/project/usig-normalizador-amba-P32/", "project_urls": {"Homepage": "https://github.com/santiagocastellano/normalizador-amba-Python3.git"}, "release_url": "https://pypi.org/project/usig-normalizador-amba-P32/1.2.5/", "requires_dist": null, "requires_python": "", "summary": "Normalizador de Direcciones AMBA", "version": "1.2.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>El procedimiento de normalizaci\u00f3n de direcciones tiene por objetivo unificar la escritura de direcciones con respecto a un callejero de referencia.\nA su vez ofrece herramientas para consultar de manera transparente la existencia de cruces de calle, calles pertenecientes a\npartidos, calle con altura con y sin partido determinado. \u2018Normalizador de Direcciones AMBA\u2019 es una componente python para normalizar direcciones del AMBA (conurbano y CABA).</p>\n<div id=\"partidos-disponibles\">\n<h2>Partidos disponibles</h2>\n<p>Servicio de callejeros: <a href=\"http://servicios.usig.buenosaires.gov.ar/callejero-amba\" rel=\"nofollow\">http://servicios.usig.buenosaires.gov.ar/callejero-amba</a></p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><ul>\n<li>CABA</li>\n<li>Almirante Brown</li>\n<li>Avellaneda</li>\n<li>Berazategui</li>\n<li>Berisso</li>\n<li>Ca\u00f1uelas</li>\n<li>Ensenada</li>\n<li>Escobar</li>\n<li>Esteban Echeverr\u00eda</li>\n<li>Ezeiza</li>\n<li>Florencio Varela</li>\n<li>General Rodr\u00edguez</li>\n<li>General San Mart\u00edn</li>\n<li>Hurlingham</li>\n<li>Ituzaing\u00f3</li>\n<li>Jos\u00e9 C. Paz</li>\n<li>La Matanza</li>\n<li>Lan\u00fas</li>\n</ul>\n</td>\n<td><ul>\n<li>La Plata</li>\n<li>Lomas de Zamora</li>\n<li>Malvinas Argentinas</li>\n<li>Marcos Paz</li>\n<li>Merlo</li>\n<li>Moreno</li>\n<li>Mor\u00f3n</li>\n<li>Pilar</li>\n<li>Presidente Per\u00f3n</li>\n<li>Quilmes</li>\n<li>San Fernando</li>\n<li>San Isidro</li>\n<li>San Miguel</li>\n<li>San Vicente</li>\n<li>Tigre</li>\n<li>Tres de Febrero</li>\n<li>Vicente L\u00f3pez</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n<div id=\"instalacion\">\n<h3>Instalaci\u00f3n</h3>\n</div>\n</div>\n<div id=\"pypi\">\n<h2>PyPi</h2>\n<pre>$ pip install -i https://test.pypi.org/simple/usig-normalizador-amba-P32\n</pre>\n</div>\n<div id=\"git\">\n<h2>Git</h2>\n<pre>$ git clone https://github.com/santiagocastellano/normalizador-amba-Python3.git\n$ <span class=\"nb\">cd</span> normalizador-amba\n$ python setup.py install\n</pre>\n</div>\n<div id=\"easy-install\">\n<h2>Easy Install</h2>\n<pre>$ git clone https://github.com/santiagocastellano/normalizador-amba-Python3.git\n$ <span class=\"nb\">cd</span> normalizador-amba\n$ make prepare-package\n$ easy_install dist/usig-normalizador-amba-x.x.x.tar.gz\n</pre>\n<div id=\"generacion-del-paquete-de-instalacion\">\n<h3>Generaci\u00f3n del paquete de instalaci\u00f3n</h3>\n<pre>$ make prepare-package\n</pre>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>En el root del proyecto ejecutar:</p>\n<pre>$ make run-test\n</pre>\n</div>\n<div id=\"ejemplos\">\n<h3>Ejemplos</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">usig_normalizador_amba</span> <span class=\"kn\">import</span> <span class=\"n\">NormalizadorAMBA</span>\n\n<span class=\"n\">nd</span> <span class=\"o\">=</span> <span class=\"n\">NormalizadorAMBA</span><span class=\"p\">()</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nd</span><span class=\"o\">.</span><span class=\"n\">normalizar</span><span class=\"p\">(</span><span class=\"s1\">'callao y corrientes'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">res</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"n\">r</span>\n</pre>\n<p>Para instanciar el normalizador para alg\u00fan/os partido/s en particular:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">usig_normalizador_amba</span> <span class=\"kn\">import</span> <span class=\"n\">NormalizadorAMBA</span>\n\n<span class=\"n\">nd</span> <span class=\"o\">=</span> <span class=\"n\">NormalizadorAMBA</span><span class=\"p\">(</span><span class=\"n\">include_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'caba'</span><span class=\"p\">])</span> <span class=\"c1\"># lista de codigos de partido</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nd</span><span class=\"o\">.</span><span class=\"n\">normalizar</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'San Mart\u00edn 153'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">res</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"n\">r</span>\n</pre>\n<p>Para excluir del normalizador alg\u00fan partido en particular:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">usig_normalizador_amba</span> <span class=\"kn\">import</span> <span class=\"n\">NormalizadorAMBA</span>\n\n<span class=\"n\">nd</span> <span class=\"o\">=</span> <span class=\"n\">NormalizadorAMBA</span><span class=\"p\">(</span><span class=\"n\">exclude_list</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'caba'</span><span class=\"p\">])</span> <span class=\"c1\"># lista de codigos de partido</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nd</span><span class=\"o\">.</span><span class=\"n\">normalizar</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'San Mart\u00edn 153'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">r</span> <span class=\"ow\">in</span> <span class=\"n\">res</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"n\">r</span>\n</pre>\n<p>Para buscar una direcci\u00f3n en un texto:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">usig_normalizador_amba</span> <span class=\"kn\">import</span> <span class=\"n\">NormalizadorAMBA</span>\n\n<span class=\"n\">nd</span> <span class=\"o\">=</span> <span class=\"n\">NormalizadorAMBA</span><span class=\"p\">()</span> <span class=\"c1\"># lista de codigos de partido</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">nd</span><span class=\"o\">.</span><span class=\"n\">buscarDireccion</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'Ubicado en Monse\u00f1or Alejandro Schell 166, a metros de la estaci\u00f3n de Lomas de Zamora.'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'direcciones'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4621340, "releases": {"1.2.5": [{"comment_text": "", "digests": {"md5": "27f893b83f9209625902da57f18084a1", "sha256": "a04cbc6b931e41ee2468d86837b8b3a400937e72e2fd079878cb7c9e74e943e1"}, "downloads": -1, "filename": "usig-normalizador-amba-P32-1.2.5.tar.gz", "has_sig": false, "md5_digest": "27f893b83f9209625902da57f18084a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15308, "upload_time": "2018-12-20T15:32:31", "upload_time_iso_8601": "2018-12-20T15:32:31.898004Z", "url": "https://files.pythonhosted.org/packages/4d/30/0a0b781361e18df6a81a4800712db8b570752f718f097d0dfca9021fabdd/usig-normalizador-amba-P32-1.2.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27f893b83f9209625902da57f18084a1", "sha256": "a04cbc6b931e41ee2468d86837b8b3a400937e72e2fd079878cb7c9e74e943e1"}, "downloads": -1, "filename": "usig-normalizador-amba-P32-1.2.5.tar.gz", "has_sig": false, "md5_digest": "27f893b83f9209625902da57f18084a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15308, "upload_time": "2018-12-20T15:32:31", "upload_time_iso_8601": "2018-12-20T15:32:31.898004Z", "url": "https://files.pythonhosted.org/packages/4d/30/0a0b781361e18df6a81a4800712db8b570752f718f097d0dfca9021fabdd/usig-normalizador-amba-P32-1.2.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:00 2020"}