{"info": {"author": "Christophe de Vienne", "author_email": "cdevienne@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Topic :: Utilities"], "description": "Toxgen\n======\n\nProduces a tox.ini file from a template config file.\n\nThe template config file is a standard tox.ini file with additional sections.\nTheses sections will be combined to create new testenv: sections if they do\nnot exists yet.\n\nThe added sections are:\n\n[axes]\n    options::\n\n        axis1name = value1(*)[,value2(*)[, ...]]\n        axis2name = value1(*)[,value2[, ...]]\n\n    In this section, a list of test axes are given and for each of them a\n    list of possible values.\n\n    A tailing '*' on a value means it is this axis default value. Hence it can\n    be set on only one value.\n    The default value will create additional sections with this axis value\n    removed from the section name (see below)\n\n    Example:\n        To test a lib against different python version with and without\n        'lxml'::\n\n            [axes]\n            python = py25,py32\n            lxml = lxml*,nolxml\n\n        This will generate the following [testenv:] sections::\n\n            [testenv:py25-lxml]\n            # ...\n\n            [testenv:py25]\n            # A copy of testenv:py25-lxml\n\n            [testenv:py25-nolxml]\n            # ...\n\n            [testenv:py32-lxml]\n            # ...\n\n            [testenv:py32]\n            # A copy of testenv:py27-lxml\n\n            [testenv:py32-nolxml]\n            # ...\n\n[axis:name]\n    The default options for an axis.\n\n    Any option can be added, and if not overridden for a specific value,\n    combined with the same option in the other axis\n\n[axis:name:value]\n    Options for a specific axis value.\n\n    The only option that will be interpreted by gentox is 'constraints', a\n    multi-lines option that allow to exclude other axis values.\n\n    For example, if we want not to test py25 without lxml::\n\n        [axis:lxml:nolxml]\n        constraints=\n            !python:py25\n\n    The other options will be combined.\n\nComplete example::\n\n    [tox]\n    envlist = py25-nolxml,py32\n\n    [axes]\n    python = py25,py32\n    lxml = lxml*,nolxml\n\n    [axis:python]\n    deps =\n        six\n\n    [axis:python:py25]\n    basepython=python2.5\n\n    [axis:python:py32]\n    basepython=python3.2\n\n    [axis:lxml:nolxml]\n    constraints =\n        !python:py25\n\n    [axis:lxml:lxml]\n    deps =\n        lxml\n\nThis will generate the following tox file::\n\n    [tox]\n    envlist = py25-nolxml,py32\n\n    [testenv:py25-lxml]\n    deps = \n        six\n        lxml\n    basepython = python2.5\n\n    [testenv:py25]\n    deps = \n        six\n        lxml\n    basepython = python2.5\n\n    [testenv:py32-lxml]\n    deps = \n        six\n        lxml\n    basepython = python3.2\n\n    [testenv:py32]\n    deps = \n        six\n        lxml\n    basepython = python3.2\n\n    [testenv:py32-nolxml]\n    deps = \n        six\n    basepython = python3.2\n\n\nRunning\n-------\n\n::\n\n    Usage: toxgen.py [options]\n\n    Options:\n      -h, --help            show this help message and exit\n      -i FILE, --input=FILE\n                            input template file to process [default: tox-tmpl.ini]\n      -o FILE, --output=FILE\n                            output file to generate [default: tox.ini]\n      -r, --rewrite         rewrite [tox] envlist [default: False]\n    \n    Produce a tox.ini file from a template config file.  The template config file\n    is a standard tox.ini file with additional sections. Theses sections will be\n    combined to create new testenv: sections if they do not exists yet.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/cdevienne/toxgen", "keywords": "tox template generator combinations test", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "toxgen", "package_url": "https://pypi.org/project/toxgen/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/toxgen/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/cdevienne/toxgen"}, "release_url": "https://pypi.org/project/toxgen/0.1/", "requires_dist": null, "requires_python": null, "summary": "Tox.ini generator", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Produces a tox.ini file from a template config file.</p>\n<p>The template config file is a standard tox.ini file with additional sections.\nTheses sections will be combined to create new testenv: sections if they do\nnot exists yet.</p>\n<p>The added sections are:</p>\n<dl>\n<dt>[axes]</dt>\n<dd><p>options:</p>\n<pre>axis1name = value1(*)[,value2(*)[, ...]]\naxis2name = value1(*)[,value2[, ...]]\n</pre>\n<p>In this section, a list of test axes are given and for each of them a\nlist of possible values.</p>\n<p>A tailing \u2018*\u2019 on a value means it is this axis default value. Hence it can\nbe set on only one value.\nThe default value will create additional sections with this axis value\nremoved from the section name (see below)</p>\n<dl>\n<dt>Example:</dt>\n<dd><p>To test a lib against different python version with and without\n\u2018lxml\u2019:</p>\n<pre>[axes]\npython = py25,py32\nlxml = lxml*,nolxml\n</pre>\n<p>This will generate the following [testenv:] sections:</p>\n<pre>[testenv:py25-lxml]\n# ...\n\n[testenv:py25]\n# A copy of testenv:py25-lxml\n\n[testenv:py25-nolxml]\n# ...\n\n[testenv:py32-lxml]\n# ...\n\n[testenv:py32]\n# A copy of testenv:py27-lxml\n\n[testenv:py32-nolxml]\n# ...\n</pre>\n</dd>\n</dl>\n</dd>\n<dt>[axis:name]</dt>\n<dd><p>The default options for an axis.</p>\n<p>Any option can be added, and if not overridden for a specific value,\ncombined with the same option in the other axis</p>\n</dd>\n<dt>[axis:name:value]</dt>\n<dd><p>Options for a specific axis value.</p>\n<p>The only option that will be interpreted by gentox is \u2018constraints\u2019, a\nmulti-lines option that allow to exclude other axis values.</p>\n<p>For example, if we want not to test py25 without lxml:</p>\n<pre>[axis:lxml:nolxml]\nconstraints=\n    !python:py25\n</pre>\n<p>The other options will be combined.</p>\n</dd>\n</dl>\n<p>Complete example:</p>\n<pre>[tox]\nenvlist = py25-nolxml,py32\n\n[axes]\npython = py25,py32\nlxml = lxml*,nolxml\n\n[axis:python]\ndeps =\n    six\n\n[axis:python:py25]\nbasepython=python2.5\n\n[axis:python:py32]\nbasepython=python3.2\n\n[axis:lxml:nolxml]\nconstraints =\n    !python:py25\n\n[axis:lxml:lxml]\ndeps =\n    lxml\n</pre>\n<p>This will generate the following tox file:</p>\n<pre>[tox]\nenvlist = py25-nolxml,py32\n\n[testenv:py25-lxml]\ndeps =\n    six\n    lxml\nbasepython = python2.5\n\n[testenv:py25]\ndeps =\n    six\n    lxml\nbasepython = python2.5\n\n[testenv:py32-lxml]\ndeps =\n    six\n    lxml\nbasepython = python3.2\n\n[testenv:py32]\ndeps =\n    six\n    lxml\nbasepython = python3.2\n\n[testenv:py32-nolxml]\ndeps =\n    six\nbasepython = python3.2\n</pre>\n<div id=\"running\">\n<h2>Running</h2>\n<pre>Usage: toxgen.py [options]\n\nOptions:\n  -h, --help            show this help message and exit\n  -i FILE, --input=FILE\n                        input template file to process [default: tox-tmpl.ini]\n  -o FILE, --output=FILE\n                        output file to generate [default: tox.ini]\n  -r, --rewrite         rewrite [tox] envlist [default: False]\n\nProduce a tox.ini file from a template config file.  The template config file\nis a standard tox.ini file with additional sections. Theses sections will be\ncombined to create new testenv: sections if they do not exists yet.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 966570, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8a1d2278f3ecaf2f0b6309ea23c147f7", "sha256": "6aeefd1c54d732c3dec5c9fa89d4021594f86ce60d0f9cc46b93f4f36d65d7ad"}, "downloads": -1, "filename": "toxgen-0.1.tar.gz", "has_sig": false, "md5_digest": "8a1d2278f3ecaf2f0b6309ea23c147f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4388, "upload_time": "2014-01-12T13:35:00", "upload_time_iso_8601": "2014-01-12T13:35:00.647366Z", "url": "https://files.pythonhosted.org/packages/d0/16/1bbf87c76f79163c7e101ed61143870cd7111e1b6bd7d13951fed7352b74/toxgen-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a1d2278f3ecaf2f0b6309ea23c147f7", "sha256": "6aeefd1c54d732c3dec5c9fa89d4021594f86ce60d0f9cc46b93f4f36d65d7ad"}, "downloads": -1, "filename": "toxgen-0.1.tar.gz", "has_sig": false, "md5_digest": "8a1d2278f3ecaf2f0b6309ea23c147f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4388, "upload_time": "2014-01-12T13:35:00", "upload_time_iso_8601": "2014-01-12T13:35:00.647366Z", "url": "https://files.pythonhosted.org/packages/d0/16/1bbf87c76f79163c7e101ed61143870cd7111e1b6bd7d13951fed7352b74/toxgen-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:20 2020"}