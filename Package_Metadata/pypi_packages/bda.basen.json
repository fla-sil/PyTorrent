{"info": {"author": "BlueDynamics Alliance", "author_email": "dev@bluedynamics.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Utilities"], "description": "=========\nbda.basen\n=========\n\nModule to represent integers as any other based representation string.\n\nThere exist direct converter functions.\n\n::\n\n    >>> from bda.basen import str2int\n    >>> from bda.basen import int2str\n\n    >>> ref = 'abcde'\n\n    >>> int2str(12345, ref)\n    'deddea'\n\n    >>> str2int('abcde', ref)\n    194\n\nOr a direct representation call for a 62 ascii based base.\n\n::\n\n    >>> from bda.basen import base62\n    >>> term = base62(100)\n    >>> str(term)\n    '1C'\n\n    >>> term = base62('1D')\n    >>> int(term)\n    101\n\nThis works also with uuids, which is with ~22 chars less than the default hex with 32 chars::\n\n    >>> term = base62(uuid.uuid4())\n\n``basej`` uses 91 chars ascii as base (no backslash, no single/double quotes, no control chars).\nWith this a chance to get 20 chars for a uuid is high::\n\n    >>> term = basej(uuid.uuid4())\n\n\nSource Code and Contributions\n=============================\n\nIf you want to help with the development (improvement, update, bug-fixing, ...) of ``bda.basen`` this is a great idea!\nSubmit issues or pull requests!\n\nThe code is located at `github <https://github.com/bluedynamics/bda.basen>`_.\n\nMaintainer is Jens Klein, Robert Niederreiter and the BlueDynamics Alliance developer team.\nWe appreciate any contribution and if a release is needed to be done on pypi,\nplease just contact one of us `dev@bluedynamics dot com <mailto:dev@bluedynamics.com>`_\n\nCode is licensed under GPL v2.\nHistory\n=======\n\n1.2 (2019-09-09)\n----------------\n\n- Support for Python 3\n  [jensens]\n\n\n1.1 (2016-05-25)\n----------------\n\n- Support for python ``uuid`` module\n  [jensens]\n\n- more generic ``basex`` base class and special ``basej`` class.\n  [jensens]\n\n\n1.0\n---\n\n- initial implementation [rnixx, jensens]", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "GNU General Public Licence", "maintainer": "", "maintainer_email": "", "name": "bda.basen", "package_url": "https://pypi.org/project/bda.basen/", "platform": "", "project_url": "https://pypi.org/project/bda.basen/", "project_urls": null, "release_url": "https://pypi.org/project/bda.basen/1.2/", "requires_dist": null, "requires_python": "", "summary": "bda.basen", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Module to represent integers as any other based representation string.</p>\n<p>There exist direct converter functions.</p>\n<pre>&gt;&gt;&gt; from bda.basen import str2int\n&gt;&gt;&gt; from bda.basen import int2str\n\n&gt;&gt;&gt; ref = 'abcde'\n\n&gt;&gt;&gt; int2str(12345, ref)\n'deddea'\n\n&gt;&gt;&gt; str2int('abcde', ref)\n194\n</pre>\n<p>Or a direct representation call for a 62 ascii based base.</p>\n<pre>&gt;&gt;&gt; from bda.basen import base62\n&gt;&gt;&gt; term = base62(100)\n&gt;&gt;&gt; str(term)\n'1C'\n\n&gt;&gt;&gt; term = base62('1D')\n&gt;&gt;&gt; int(term)\n101\n</pre>\n<p>This works also with uuids, which is with ~22 chars less than the default hex with 32 chars:</p>\n<pre>&gt;&gt;&gt; term = base62(uuid.uuid4())\n</pre>\n<p><tt>basej</tt> uses 91 chars ascii as base (no backslash, no single/double quotes, no control chars).\nWith this a chance to get 20 chars for a uuid is high:</p>\n<pre>&gt;&gt;&gt; term = basej(uuid.uuid4())\n</pre>\n<div id=\"source-code-and-contributions\">\n<h2>Source Code and Contributions</h2>\n<p>If you want to help with the development (improvement, update, bug-fixing, \u2026) of <tt>bda.basen</tt> this is a great idea!\nSubmit issues or pull requests!</p>\n<p>The code is located at <a href=\"https://github.com/bluedynamics/bda.basen\" rel=\"nofollow\">github</a>.</p>\n<p>Maintainer is Jens Klein, Robert Niederreiter and the BlueDynamics Alliance developer team.\nWe appreciate any contribution and if a release is needed to be done on pypi,\nplease just contact one of us <a href=\"mailto:dev%40bluedynamics.com\">dev<span>@</span>bluedynamics dot com</a></p>\n<p>Code is licensed under GPL v2.\nHistory\n=======</p>\n<div id=\"id1\">\n<h3>1.2 (2019-09-09)</h3>\n<ul>\n<li>Support for Python 3\n[jensens]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.1 (2016-05-25)</h3>\n<ul>\n<li>Support for python <tt>uuid</tt> module\n[jensens]</li>\n<li>more generic <tt>basex</tt> base class and special <tt>basej</tt> class.\n[jensens]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0</h3>\n<ul>\n<li>initial implementation [rnixx, jensens]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5803382, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b79be9e8be880d3d32734a1a9945d438", "sha256": "875e94495f8eab616820fa731e313a3581da8227e008e521c24685934bf001af"}, "downloads": -1, "filename": "bda.basen-1.0.tar.gz", "has_sig": false, "md5_digest": "b79be9e8be880d3d32734a1a9945d438", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2554, "upload_time": "2009-07-16T11:52:32", "upload_time_iso_8601": "2009-07-16T11:52:32.409516Z", "url": "https://files.pythonhosted.org/packages/67/17/bd8fec256829bcfe834a6c04128cbddcb1998a6efffa6f1f5c0da8c26b92/bda.basen-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "6828fc33a42416f662b97f692ee27900", "sha256": "a716102ebb2d7d6067df88ba4dab373dd254ece5693345718e5cdb8fbfbdeab0"}, "downloads": -1, "filename": "bda.basen-1.1.tar.gz", "has_sig": false, "md5_digest": "6828fc33a42416f662b97f692ee27900", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3437, "upload_time": "2016-05-25T15:02:23", "upload_time_iso_8601": "2016-05-25T15:02:23.662535Z", "url": "https://files.pythonhosted.org/packages/5f/1b/4c03c420caa9d75f93925d62c5756351f8204bd3bc6470fd39f6375407bb/bda.basen-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "76d88463c74f545bd35f7d4c8214cae3", "sha256": "a1ce771afa58be9515dcc4b73cb5e8656f357eb1e24623340bb70836a8e24c1d"}, "downloads": -1, "filename": "bda.basen-1.2.tar.gz", "has_sig": false, "md5_digest": "76d88463c74f545bd35f7d4c8214cae3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3412, "upload_time": "2019-09-09T12:29:22", "upload_time_iso_8601": "2019-09-09T12:29:22.891071Z", "url": "https://files.pythonhosted.org/packages/68/79/65945fd4778c3a1fe9e5ac6636683846ca002231a521e1773bf60a9d79dc/bda.basen-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "76d88463c74f545bd35f7d4c8214cae3", "sha256": "a1ce771afa58be9515dcc4b73cb5e8656f357eb1e24623340bb70836a8e24c1d"}, "downloads": -1, "filename": "bda.basen-1.2.tar.gz", "has_sig": false, "md5_digest": "76d88463c74f545bd35f7d4c8214cae3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3412, "upload_time": "2019-09-09T12:29:22", "upload_time_iso_8601": "2019-09-09T12:29:22.891071Z", "url": "https://files.pythonhosted.org/packages/68/79/65945fd4778c3a1fe9e5ac6636683846ca002231a521e1773bf60a9d79dc/bda.basen-1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:35 2020"}