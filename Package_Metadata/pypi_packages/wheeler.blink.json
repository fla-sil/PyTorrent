{"info": {"author": "Christian Fobel", "author_email": "christian@fobel.net", "bugtrack_url": null, "classifiers": [], "description": "# `blink` #\n\nThis project demonstrates how an Arduino sketch may be distributed as a Python package.\n\n## Programming sketch using `arduino_helpers` and `avr_helpers` ##\n\nAlthough not strict dependencies of the `blink` package, by using\n[`arduino_helpers`][1] and [`avr_helpers`][2], we can easily flash the compiled\n`.hex` firmware files included in the `blink` package.\n\nFor example:\n\n    >>> import blink\n    >>> board = 'diecimila'\n    >>> firmware = blink.get_firmwares()[board][0]\n    >>> firmware.name\n    path('blink.hex')\n    >>> from arduino_helpers.context import ArduinoContext, Board, Uploader\n    >>> # For Ubuntu systems, Arduino IDE is installed at `/usr/share/arduino`.\n    >>> context = ArduinoContext('/usr/share/arduino')\n    >>> uploader = Uploader(Board(context, board))\n    >>> from avr_helpers import AvrDude\n    >>> # Automatically select port, by iterating through available serial\n    >>> # ports until a connection can be established.\n    >>> avr_dude = AvrDude(uploader.protocol, uploader.board_context.mcu, uploader.speed)\n    >>> stdout, stderr = avr_dude.flash(firmware, ['-D'])\n    >>> print stderr\n\n    avrdude-x64: AVR device initialized and ready to accept instructions\n\n    Reading | ################################################## | 100% 0.00s\n\n    avrdude-x64: Device signature = 0x1e9406\n    avrdude-x64: reading input file \"blink.hex\"\n    avrdude-x64: writing flash (1056 bytes):\n\n    Writing | ################################################## | 100% 0.76s\n\n    avrdude-x64: 1056 bytes of flash written\n    avrdude-x64: verifying flash memory against blink.hex:\n    avrdude-x64: load data flash data from input file blink.hex:\n    avrdude-x64: input file blink.hex contains 1056 bytes\n    avrdude-x64: reading on-chip flash data:\n\n    Reading | ################################################## | 100% 0.67s\n\n    avrdude-x64: verifying ...\n    avrdude-x64: 1056 bytes of flash verified\n\n    avrdude-x64 done.  Thank you.\n\n\n[1]: https://github.com/wheeler-microfluidics/arduino_helpers\n[2]: https://github.com/wheeler-microfluidics/avr_helpers\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/wheeler-microfluidics/blink.git", "keywords": null, "license": "GPLv2", "maintainer": null, "maintainer_email": null, "name": "wheeler.blink", "package_url": "https://pypi.org/project/wheeler.blink/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wheeler.blink/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/wheeler-microfluidics/blink.git"}, "release_url": "https://pypi.org/project/wheeler.blink/0.1.post2.dev193877662/", "requires_dist": null, "requires_python": null, "summary": "Example Arduino sketch packaged as Python package.", "version": "0.1.post2.dev193877662", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># <cite>blink</cite> #</p>\n<p>This project demonstrates how an Arduino sketch may be distributed as a Python package.</p>\n<p>## Programming sketch using <cite>arduino_helpers</cite> and <cite>avr_helpers</cite> ##</p>\n<p>Although not strict dependencies of the <cite>blink</cite> package, by using\n[<cite>arduino_helpers</cite>][1] and [<cite>avr_helpers</cite>][2], we can easily flash the compiled\n<cite>.hex</cite> firmware files included in the <cite>blink</cite> package.</p>\n<p>For example:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import blink\n&gt;&gt;&gt; board = 'diecimila'\n&gt;&gt;&gt; firmware = blink.get_firmwares()[board][0]\n&gt;&gt;&gt; firmware.name\npath('blink.hex')\n&gt;&gt;&gt; from arduino_helpers.context import ArduinoContext, Board, Uploader\n&gt;&gt;&gt; # For Ubuntu systems, Arduino IDE is installed at `/usr/share/arduino`.\n&gt;&gt;&gt; context = ArduinoContext('/usr/share/arduino')\n&gt;&gt;&gt; uploader = Uploader(Board(context, board))\n&gt;&gt;&gt; from avr_helpers import AvrDude\n&gt;&gt;&gt; # Automatically select port, by iterating through available serial\n&gt;&gt;&gt; # ports until a connection can be established.\n&gt;&gt;&gt; avr_dude = AvrDude(uploader.protocol, uploader.board_context.mcu, uploader.speed)\n&gt;&gt;&gt; stdout, stderr = avr_dude.flash(firmware, ['-D'])\n&gt;&gt;&gt; print stderr\n</pre>\n<p>avrdude-x64: AVR device initialized and ready to accept instructions</p>\n<p>Reading | ################################################## | 100% 0.00s</p>\n<p>avrdude-x64: Device signature = 0x1e9406\navrdude-x64: reading input file \u201cblink.hex\u201d\navrdude-x64: writing flash (1056 bytes):</p>\n<p>Writing | ################################################## | 100% 0.76s</p>\n<p>avrdude-x64: 1056 bytes of flash written\navrdude-x64: verifying flash memory against blink.hex:\navrdude-x64: load data flash data from input file blink.hex:\navrdude-x64: input file blink.hex contains 1056 bytes\navrdude-x64: reading on-chip flash data:</p>\n<p>Reading | ################################################## | 100% 0.67s</p>\n<p>avrdude-x64: verifying \u2026\navrdude-x64: 1056 bytes of flash verified</p>\n<p>avrdude-x64 done.  Thank you.</p>\n</blockquote>\n<p>[1]: <a href=\"https://github.com/wheeler-microfluidics/arduino_helpers\" rel=\"nofollow\">https://github.com/wheeler-microfluidics/arduino_helpers</a>\n[2]: <a href=\"https://github.com/wheeler-microfluidics/avr_helpers\" rel=\"nofollow\">https://github.com/wheeler-microfluidics/avr_helpers</a></p>\n\n          </div>"}, "last_serial": 1071853, "releases": {"0.1.post2.dev193877662": [{"comment_text": "", "digests": {"md5": "4785e45d8b313ed8b7123ffaa84261f4", "sha256": "9c1fd0d4f984b3032e0e4ac41b84c6f09dff4af618c79aa70ed8ba85308ae9d8"}, "downloads": -1, "filename": "wheeler.blink-0.1.post2.dev193877662.tar.gz", "has_sig": false, "md5_digest": "4785e45d8b313ed8b7123ffaa84261f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49194, "upload_time": "2014-04-25T15:59:58", "upload_time_iso_8601": "2014-04-25T15:59:58.165771Z", "url": "https://files.pythonhosted.org/packages/78/29/442210c580feea9069c66df621d84fe5e669cd26fb3ae267040b52fb0afc/wheeler.blink-0.1.post2.dev193877662.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4785e45d8b313ed8b7123ffaa84261f4", "sha256": "9c1fd0d4f984b3032e0e4ac41b84c6f09dff4af618c79aa70ed8ba85308ae9d8"}, "downloads": -1, "filename": "wheeler.blink-0.1.post2.dev193877662.tar.gz", "has_sig": false, "md5_digest": "4785e45d8b313ed8b7123ffaa84261f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49194, "upload_time": "2014-04-25T15:59:58", "upload_time_iso_8601": "2014-04-25T15:59:58.165771Z", "url": "https://files.pythonhosted.org/packages/78/29/442210c580feea9069c66df621d84fe5e669cd26fb3ae267040b52fb0afc/wheeler.blink-0.1.post2.dev193877662.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:52 2020"}