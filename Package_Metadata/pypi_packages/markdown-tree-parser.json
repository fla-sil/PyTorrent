{"info": {"author": "phpusr", "author_email": "phpusr@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\nmarkdown-tree-parser\n====================\n\nParse markdown file to python object, which contains markdown tree headings\n\n### Usage examples\n\n```python\nimport unittest\n\nfrom markdown_tree_parser.parser import parse_string\n\n\nclass TestParser(unittest.TestCase):\n\n    def test_code_block(self):\n        text = '''\nTitle\n=====\n\n# Code\n\nCode 1\n------\nSome text\n\\```\n# TODO\n\\```\n\nCode 2\n------\n\\```python\n# TODO\nprint('test')\n\\```\n\n# Heading\n'''\n        out = parse_string(text)\n        self.assertEqual(out.title, 'Title')\n        self.assertEqual(out[0][0].text, 'Code 1')\n        self.assertEqual(out[0][0].source, 'Some text\\n```\\n# TODO\\n```\\n')\n        self.assertEqual(out[0][1].text, 'Code 2')\n        self.assertEqual(out[0][1].source, \"```python\\n# TODO\\nprint('test')\\n```\\n\")\n        self.assertEqual(out[1].text, 'Heading')\n\n\nif __name__ == '__main__':\n    unittest.main()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/phpusr/markdown-tree-parser", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "markdown-tree-parser", "package_url": "https://pypi.org/project/markdown-tree-parser/", "platform": "", "project_url": "https://pypi.org/project/markdown-tree-parser/", "project_urls": {"Homepage": "https://github.com/phpusr/markdown-tree-parser"}, "release_url": "https://pypi.org/project/markdown-tree-parser/0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Markdown tree parser", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>markdown-tree-parser</h1>\n<p>Parse markdown file to python object, which contains markdown tree headings</p>\n<h3>Usage examples</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">unittest</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">markdown_tree_parser.parser</span> <span class=\"kn\">import</span> <span class=\"n\">parse_string</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TestParser</span><span class=\"p\">(</span><span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">TestCase</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_code_block</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"s1\">'''</span>\n<span class=\"s1\">Title</span>\n<span class=\"s1\">=====</span>\n\n<span class=\"s1\"># Code</span>\n\n<span class=\"s1\">Code 1</span>\n<span class=\"s1\">------</span>\n<span class=\"s1\">Some text</span>\n<span class=\"s1\">\\```</span>\n<span class=\"s1\"># TODO</span>\n<span class=\"s1\">\\```</span>\n\n<span class=\"s1\">Code 2</span>\n<span class=\"s1\">------</span>\n<span class=\"s1\">\\```python</span>\n<span class=\"s1\"># TODO</span>\n<span class=\"s1\">print('test')</span>\n<span class=\"s1\">\\```</span>\n\n<span class=\"s1\"># Heading</span>\n<span class=\"s1\">'''</span>\n        <span class=\"n\">out</span> <span class=\"o\">=</span> <span class=\"n\">parse_string</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">,</span> <span class=\"s1\">'Title'</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"s1\">'Code 1'</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s1\">'Some text</span><span class=\"se\">\\n</span><span class=\"s1\">```</span><span class=\"se\">\\n</span><span class=\"s1\"># TODO</span><span class=\"se\">\\n</span><span class=\"s1\">```</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"s1\">'Code 2'</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"s2\">\"```python</span><span class=\"se\">\\n</span><span class=\"s2\"># TODO</span><span class=\"se\">\\n</span><span class=\"s2\">print('test')</span><span class=\"se\">\\n</span><span class=\"s2\">```</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">assertEqual</span><span class=\"p\">(</span><span class=\"n\">out</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"s1\">'Heading'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">unittest</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6272890, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5d131adeef4c4c21a33b225dca530667", "sha256": "3677cd3407f231599b0402a2cf6d6bcd54991c7c634f10ac2597270622847177"}, "downloads": -1, "filename": "markdown_tree_parser-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5d131adeef4c4c21a33b225dca530667", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5930, "upload_time": "2019-12-10T13:30:00", "upload_time_iso_8601": "2019-12-10T13:30:00.523468Z", "url": "https://files.pythonhosted.org/packages/30/75/809064911f0df86734d995d5d6529e59338a52c440eebfebdd357642d13b/markdown_tree_parser-0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5d131adeef4c4c21a33b225dca530667", "sha256": "3677cd3407f231599b0402a2cf6d6bcd54991c7c634f10ac2597270622847177"}, "downloads": -1, "filename": "markdown_tree_parser-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5d131adeef4c4c21a33b225dca530667", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5930, "upload_time": "2019-12-10T13:30:00", "upload_time_iso_8601": "2019-12-10T13:30:00.523468Z", "url": "https://files.pythonhosted.org/packages/30/75/809064911f0df86734d995d5d6529e59338a52c440eebfebdd357642d13b/markdown_tree_parser-0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:57:43 2020"}