{"info": {"author": "Daniel Greenfeld, Bartek Ogryczak", "author_email": "danny@eventbrite.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "===============================\neventbrite-sdk-python\n===============================\n\n.. image:: https://badge.fury.io/py/eventbrite.png\n    :target: http://badge.fury.io/py/eventbrite\n\n.. image:: https://travis-ci.org/eventbrite/eventbrite-sdk-python.svg?branch=master\n        :target: https://travis-ci.org/eventbrite/eventbrite-sdk-python\n\n.. image:: https://pypip.in/d/eventbrite/badge.png\n        :target: https://pypi.python.org/pypi/eventbrite\n\n\nOfficial Eventbrite_ SDK for Python\n\n* Free software: Apache 2 license\n* Documentation: https://eventbrite.readthedocs.org.\n\nUsage\n--------\n\nThe Eventbrite Python SDK makes it trivial to interact with the Eventbrite API:\n\n.. code-block:: python\n\n    >>> from eventbrite import Eventbrite\n    >>> eventbrite = Eventbrite('my-oauth-token')\n    >>> user = eventbrite.get_user()  # Not passing an argument returns yourself\n    >>> user['id']\n    1234567890\n    >>> user['name']\n    Daniel Roy Greenfeld\n\nYou can also specify API endpoints manually:\n\n.. code-block:: python\n\n    >>> user = eventbrite.get('/users/me')\n    >>> user['id']\n    1234567890\n    >>> user['name']\n    Daniel Roy Greenfeld\n\nUsage with Frameworks\n----------------------\n\nWhen using Flask, you can convert incoming webhook requests into Eventbrite\nAPI objects using the `webhook_to_object()` method:\n\n.. code-block:: python\n\n    @app.route('/webhook', methods=['POST'])\n    def webhook():\n\n\n        # Use the API client to convert from a webhook to an API object\n        api_object = eventbrite.webhook_to_object(request)\n\n        # Process the API object\n        if api_object.type == 'User':\n            do_user_process(api_object)\n\n        if api_object.type == 'Event':\n            do_event_process(api_object)\n\n        return \"\"\n\n.. _requests: https://pypi.python.org/pypi/requests\n.. _Eventbrite: https://www.eventbrite.com\n\n\nTODOS\n--------\n\nAbstract the HTTP calls so they can work with all of the below:\n\n* requests\n* Google's HTTP client\n* Tornado\n\nCalling different HTTP libraries::\n\n    Eventbrite(OAUTH_TOKEN, \"requests\")\n    Eventbrite(OAUTH_TOKEN, \"google\")\n    Eventbrite(OAUTH_TOKEN, \"tornado\")\n\n\n\n\nHistory\n-------\n\n3.0.0-alpha{%d} (2014-12-04)\n-----------------------------\n\nAlpha series for initial development\n\n* Inception", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pydanny/eventbrite", "keywords": "eventbrite", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "workthing", "package_url": "https://pypi.org/project/workthing/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/workthing/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/pydanny/eventbrite"}, "release_url": "https://pypi.org/project/workthing/3.0.1/", "requires_dist": null, "requires_python": null, "summary": "Official Eventbrite SDK for Python", "version": "3.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/eventbrite\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/eventbrite.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5edebad63dc6cfef726d3f597b938f444ef6a216/68747470733a2f2f62616467652e667572792e696f2f70792f6576656e7462726974652e706e67\"></a>\n<a href=\"https://travis-ci.org/eventbrite/eventbrite-sdk-python\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/eventbrite/eventbrite-sdk-python.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a81d2b73739358819773318cddd6869a053ae39c/68747470733a2f2f7472617669732d63692e6f72672f6576656e7462726974652f6576656e7462726974652d73646b2d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/eventbrite\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/eventbrite/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5942a71da6dc5c75b09aa26300a6e118c4f41732/68747470733a2f2f70797069702e696e2f642f6576656e7462726974652f62616467652e706e67\"></a>\n<p>Official <a href=\"https://www.eventbrite.com\" rel=\"nofollow\">Eventbrite</a> SDK for Python</p>\n<ul>\n<li>Free software: Apache 2 license</li>\n<li>Documentation: <a href=\"https://eventbrite.readthedocs.org\" rel=\"nofollow\">https://eventbrite.readthedocs.org</a>.</li>\n</ul>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The Eventbrite Python SDK makes it trivial to interact with the Eventbrite API:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">eventbrite</span> <span class=\"kn\">import</span> <span class=\"n\">Eventbrite</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">eventbrite</span> <span class=\"o\">=</span> <span class=\"n\">Eventbrite</span><span class=\"p\">(</span><span class=\"s1\">'my-oauth-token'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">eventbrite</span><span class=\"o\">.</span><span class=\"n\">get_user</span><span class=\"p\">()</span>  <span class=\"c1\"># Not passing an argument returns yourself</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n<span class=\"mi\">1234567890</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n<span class=\"n\">Daniel</span> <span class=\"n\">Roy</span> <span class=\"n\">Greenfeld</span>\n</pre>\n<p>You can also specify API endpoints manually:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">eventbrite</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/users/me'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n<span class=\"mi\">1234567890</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">user</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n<span class=\"n\">Daniel</span> <span class=\"n\">Roy</span> <span class=\"n\">Greenfeld</span>\n</pre>\n</div>\n<div id=\"usage-with-frameworks\">\n<h2>Usage with Frameworks</h2>\n<p>When using Flask, you can convert incoming webhook requests into Eventbrite\nAPI objects using the <cite>webhook_to_object()</cite> method:</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/webhook'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">webhook</span><span class=\"p\">():</span>\n\n\n    <span class=\"c1\"># Use the API client to convert from a webhook to an API object</span>\n    <span class=\"n\">api_object</span> <span class=\"o\">=</span> <span class=\"n\">eventbrite</span><span class=\"o\">.</span><span class=\"n\">webhook_to_object</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Process the API object</span>\n    <span class=\"k\">if</span> <span class=\"n\">api_object</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'User'</span><span class=\"p\">:</span>\n        <span class=\"n\">do_user_process</span><span class=\"p\">(</span><span class=\"n\">api_object</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">api_object</span><span class=\"o\">.</span><span class=\"n\">type</span> <span class=\"o\">==</span> <span class=\"s1\">'Event'</span><span class=\"p\">:</span>\n        <span class=\"n\">do_event_process</span><span class=\"p\">(</span><span class=\"n\">api_object</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"s2\">\"\"</span>\n</pre>\n</div>\n<div id=\"todos\">\n<h2>TODOS</h2>\n<p>Abstract the HTTP calls so they can work with all of the below:</p>\n<ul>\n<li>requests</li>\n<li>Google\u2019s HTTP client</li>\n<li>Tornado</li>\n</ul>\n<p>Calling different HTTP libraries:</p>\n<pre>Eventbrite(OAUTH_TOKEN, \"requests\")\nEventbrite(OAUTH_TOKEN, \"google\")\nEventbrite(OAUTH_TOKEN, \"tornado\")\n</pre>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n</div>\n<div id=\"alpha-d-2014-12-04\">\n<h2>3.0.0-alpha{%d} (2014-12-04)</h2>\n<p>Alpha series for initial development</p>\n<ul>\n<li>Inception</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1400600, "releases": {"3.0.0": [{"comment_text": "", "digests": {"md5": "4443eaa83d254e8c8601d9982a23443f", "sha256": "b84e60cbe66b4e1d320775e50acaf25d84feb7a0633c1dc8ba94dd580e042c8a"}, "downloads": -1, "filename": "workthing-3.0.0.tar.gz", "has_sig": false, "md5_digest": "4443eaa83d254e8c8601d9982a23443f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23177, "upload_time": "2015-01-27T23:08:05", "upload_time_iso_8601": "2015-01-27T23:08:05.279393Z", "url": "https://files.pythonhosted.org/packages/05/d0/32847f5fc9c33a9fb001cc4195f337203fa851ff6d85bba133b45d14dead/workthing-3.0.0.tar.gz", "yanked": false}], "3.0.1": [{"comment_text": "", "digests": {"md5": "981affc74ca3eab5dde7fe0e67a1fb23", "sha256": "24c62f474c88a1abf27a5c965da3e05c51dcab4f42fb5985a5255748699b130d"}, "downloads": -1, "filename": "workthing-3.0.1.tar.gz", "has_sig": false, "md5_digest": "981affc74ca3eab5dde7fe0e67a1fb23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24185, "upload_time": "2015-01-27T23:54:27", "upload_time_iso_8601": "2015-01-27T23:54:27.342549Z", "url": "https://files.pythonhosted.org/packages/ba/68/479c4040e736826ef35800c422df355f4a9f2814780abc2dfb43f29c0162/workthing-3.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "981affc74ca3eab5dde7fe0e67a1fb23", "sha256": "24c62f474c88a1abf27a5c965da3e05c51dcab4f42fb5985a5255748699b130d"}, "downloads": -1, "filename": "workthing-3.0.1.tar.gz", "has_sig": false, "md5_digest": "981affc74ca3eab5dde7fe0e67a1fb23", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24185, "upload_time": "2015-01-27T23:54:27", "upload_time_iso_8601": "2015-01-27T23:54:27.342549Z", "url": "https://files.pythonhosted.org/packages/ba/68/479c4040e736826ef35800c422df355f4a9f2814780abc2dfb43f29c0162/workthing-3.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:48 2020"}