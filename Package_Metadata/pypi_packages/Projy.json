{"info": {"author": "St\u00e9phane P\u00e9chard", "author_email": "stephanepechard@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: System :: Filesystems", "Topic :: System :: Installation/Setup", "Topic :: System :: Software Distribution", "Topic :: System :: System Shells", "Topic :: Utilities"], "description": "Projy\n=====\n\n**Projy is a template-based skeleton generator**. In one command line,\nyou can generate project skeletons like Python packages, LaTeX document\nor any file structure composed of directories and files.\n\nEach file is generated by a different template. It uses the simple core\ntemplating system from Python, nothing fancy on that part. You can\neasily add new templates and new ways to collect data to insert in the\ncreated files. As much as possible, Projy tries to be simple to use and\nextend.\n\nSee `the complete documentation <http://projy.readthedocs.org/>`__.\n\nInstallation\n============\n\nIf you are familiar with Python, it is strongly suggested that you\ninstall Projy in\n`virtualenv <http://pypi.python.org/pypi/virtualenv>`__.\n\nPip and Distribute\n------------------\n\nIf you are on Linux or Mac OS X, just type:\n\n::\n\n    $ sudo pip install projy\n\nIf no pip available, try ``easy_install``:\n\n::\n\n    $ sudo easy_install projy\n\nInstall from git\n----------------\n\nIf you prefer git, that is ok too. You can get the very latest code at\nGithub:\n\n::\n\n    $ git clone http://github.com/stephanepechard/projy\n\nUsage\n=====\n\nAs an example, let's create a Python package. The Projy template mostly\nfollows recommendations from `The Hitchhiker's Guide to\nPackaging <http://guide.python-distribute.org/>`__.\n\nA simple example\n----------------\n\nUse simply:\n\n::\n\n    $ projy PythonPackage TowelStuff\n\nIn the same directory as you typed this command, you now have a\n*TowelStuff* directory, with the following structure:\n\n::\n\n    TowelStuff/\n        bin/\n        bootstrap\n        CHANGES.txt\n        docs/\n            index.rst\n        LICENSE.txt\n        MANIFEST.in\n        README.txt\n        setup.py\n        towelstuff/\n            __init__.py\n\nEach file has been created with a specific template, so the package is\nfully functional, yet empty. You can find `further information\nhere <http://guide.python-distribute.org/creation.html>`__.\n\nSpecify substitutions\n---------------------\n\nYou can specify template substitutions directly from the command line.\nAdd them at the end of the previous example:\n\n::\n\n    $ projy PythonPackage TowelStuff \"author,Emmett Brown\" \"date,1851-09-24\"\n\nThen the substitutes *author* and *date* (defaulted to the current day)\nare defined by the given values, not those computed by Projy. The format\nof such substitutions should be \"key,value\". Neither the key or the\nvalue should therefore include a comma. Leading and trailing spaces are\nremoved from both key and value.\n\nTo know which substitutions can be overwritten this way, use the *-i*\noption as described in the dedicated section. You can add substitutions\nthat are not listed with the *-i* but they won't have any effect if the\ntemplate file does not consider them.\n\nOptions\n-------\n\nProjy comes with some command line options. Type:\n\n::\n\n    $ projy -l\n\nand you'll see the list of available templates in your installation.\nThat's an easy way to copy/paste the name of the template you want to\nuse next.\n\nType\n\n::\n\n    $ projy -i PythonPackage\n\nand you'll see the details of the Python package template. It shows the\ncreated directories and files, with the substitutions included in the\ntemplate.\n\nAvailable templates\n===================\n\nThe currently available templates are:\n\n-  a full `Django <http://djangoproject.com>`__ project, following most\n   of the recommandations from `Two scoops of\n   Django <https://2scoops.org/>`__ ;\n-  a `Fabric <http://fabfile.org>`__ file ;\n-  a `LaTeX <http://www.latex-project.org/>`__ book ;\n-  a `Python <http://python.org/>`__ package ;\n-  a Python script ;\n-  a `Projy <https://github.com/stephanepechard/projy>`__ template,\n   meta-style.\n-  a bootstrap file, to manage your virtualenv happiness.\n\nSee the official doc for more details on created files into these\ntemplates. Soon to come, more templates around Django. Of course, anyone\ncan propose some templates, they'll be integrated into Projy.", "description_content_type": null, "docs_url": "https://pythonhosted.org/Projy/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://stephanepechard.github.com/projy", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "Projy", "package_url": "https://pypi.org/project/Projy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Projy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://stephanepechard.github.com/projy"}, "release_url": "https://pypi.org/project/Projy/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "Projy is a template-based skeleton generator.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"projy\">\n<h2>Projy</h2>\n<p><strong>Projy is a template-based skeleton generator</strong>. In one command line,\nyou can generate project skeletons like Python packages, LaTeX document\nor any file structure composed of directories and files.</p>\n<p>Each file is generated by a different template. It uses the simple core\ntemplating system from Python, nothing fancy on that part. You can\neasily add new templates and new ways to collect data to insert in the\ncreated files. As much as possible, Projy tries to be simple to use and\nextend.</p>\n<p>See <a href=\"http://projy.readthedocs.org/\" rel=\"nofollow\">the complete documentation</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>If you are familiar with Python, it is strongly suggested that you\ninstall Projy in\n<a href=\"http://pypi.python.org/pypi/virtualenv\" rel=\"nofollow\">virtualenv</a>.</p>\n<div id=\"pip-and-distribute\">\n<h3>Pip and Distribute</h3>\n<p>If you are on Linux or Mac OS X, just type:</p>\n<pre>$ sudo pip install projy\n</pre>\n<p>If no pip available, try <tt>easy_install</tt>:</p>\n<pre>$ sudo easy_install projy\n</pre>\n</div>\n<div id=\"install-from-git\">\n<h3>Install from git</h3>\n<p>If you prefer git, that is ok too. You can get the very latest code at\nGithub:</p>\n<pre>$ git clone http://github.com/stephanepechard/projy\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>As an example, let\u2019s create a Python package. The Projy template mostly\nfollows recommendations from <a href=\"http://guide.python-distribute.org/\" rel=\"nofollow\">The Hitchhiker\u2019s Guide to\nPackaging</a>.</p>\n<div id=\"a-simple-example\">\n<h3>A simple example</h3>\n<p>Use simply:</p>\n<pre>$ projy PythonPackage TowelStuff\n</pre>\n<p>In the same directory as you typed this command, you now have a\n<em>TowelStuff</em> directory, with the following structure:</p>\n<pre>TowelStuff/\n    bin/\n    bootstrap\n    CHANGES.txt\n    docs/\n        index.rst\n    LICENSE.txt\n    MANIFEST.in\n    README.txt\n    setup.py\n    towelstuff/\n        __init__.py\n</pre>\n<p>Each file has been created with a specific template, so the package is\nfully functional, yet empty. You can find <a href=\"http://guide.python-distribute.org/creation.html\" rel=\"nofollow\">further information\nhere</a>.</p>\n</div>\n<div id=\"specify-substitutions\">\n<h3>Specify substitutions</h3>\n<p>You can specify template substitutions directly from the command line.\nAdd them at the end of the previous example:</p>\n<pre>$ projy PythonPackage TowelStuff \"author,Emmett Brown\" \"date,1851-09-24\"\n</pre>\n<p>Then the substitutes <em>author</em> and <em>date</em> (defaulted to the current day)\nare defined by the given values, not those computed by Projy. The format\nof such substitutions should be \u201ckey,value\u201d. Neither the key or the\nvalue should therefore include a comma. Leading and trailing spaces are\nremoved from both key and value.</p>\n<p>To know which substitutions can be overwritten this way, use the <em>-i</em>\noption as described in the dedicated section. You can add substitutions\nthat are not listed with the <em>-i</em> but they won\u2019t have any effect if the\ntemplate file does not consider them.</p>\n</div>\n<div id=\"options\">\n<h3>Options</h3>\n<p>Projy comes with some command line options. Type:</p>\n<pre>$ projy -l\n</pre>\n<p>and you\u2019ll see the list of available templates in your installation.\nThat\u2019s an easy way to copy/paste the name of the template you want to\nuse next.</p>\n<p>Type</p>\n<pre>$ projy -i PythonPackage\n</pre>\n<p>and you\u2019ll see the details of the Python package template. It shows the\ncreated directories and files, with the substitutions included in the\ntemplate.</p>\n</div>\n</div>\n<div id=\"available-templates\">\n<h2>Available templates</h2>\n<p>The currently available templates are:</p>\n<ul>\n<li>a full <a href=\"http://djangoproject.com\" rel=\"nofollow\">Django</a> project, following most\nof the recommandations from <a href=\"https://2scoops.org/\" rel=\"nofollow\">Two scoops of\nDjango</a> ;</li>\n<li>a <a href=\"http://fabfile.org\" rel=\"nofollow\">Fabric</a> file ;</li>\n<li>a <a href=\"http://www.latex-project.org/\" rel=\"nofollow\">LaTeX</a> book ;</li>\n<li>a <a href=\"http://python.org/\" rel=\"nofollow\">Python</a> package ;</li>\n<li>a Python script ;</li>\n<li>a <a href=\"https://github.com/stephanepechard/projy\" rel=\"nofollow\">Projy</a> template,\nmeta-style.</li>\n<li>a bootstrap file, to manage your virtualenv happiness.</li>\n</ul>\n<p>See the official doc for more details on created files into these\ntemplates. Soon to come, more templates around Django. Of course, anyone\ncan propose some templates, they\u2019ll be integrated into Projy.</p>\n</div>\n\n          </div>"}, "last_serial": 899446, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "5238cb680f422892bb4a143f5e3fa8e7", "sha256": "e70495740bc728e73abd9fd44d753e66927a773e21b1eb1aae5083b33305ceff"}, "downloads": -1, "filename": "Projy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5238cb680f422892bb4a143f5e3fa8e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473104, "upload_time": "2012-07-05T22:28:57", "upload_time_iso_8601": "2012-07-05T22:28:57.087168Z", "url": "https://files.pythonhosted.org/packages/05/20/18a10fd92b9e7e91698c73e0ead2224db45b119f1c3c0adc81a499ecc79f/Projy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "6d3735ab02d1866bf1b944bddd56d9dd", "sha256": "f4e7e73a7e7504ad06fc7dc7057fe5555f635355e62f64b74971a93c58c4be76"}, "downloads": -1, "filename": "Projy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6d3735ab02d1866bf1b944bddd56d9dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 85023, "upload_time": "2012-07-11T22:39:30", "upload_time_iso_8601": "2012-07-11T22:39:30.796223Z", "url": "https://files.pythonhosted.org/packages/0f/d4/37e77779c4baed3e6ccf79d6bda8f01263b58a4d65d55bc4d77e5cdf2ff2/Projy-0.1.3.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "72504bdc3c20bacbaf7ddb38c4418071", "sha256": "dc4a8d170bd70df450e7a6519d964f7b5ebc9d60070415b4f6b81b425b9fb9fe"}, "downloads": -1, "filename": "Projy-0.2.tar.gz", "has_sig": false, "md5_digest": "72504bdc3c20bacbaf7ddb38c4418071", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86297, "upload_time": "2012-08-14T10:48:35", "upload_time_iso_8601": "2012-08-14T10:48:35.058827Z", "url": "https://files.pythonhosted.org/packages/f9/72/ef12ca8f3d3282b770947f945e65b98fa60ec5f58cea6b1c63200bd0a20b/Projy-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "5da2d1e8b7bde44dada488ced6f9282e", "sha256": "8e5a4263241747ab858933ebeb76dd60ac02f5edfbc02ee6ac16c6e3101ea081"}, "downloads": -1, "filename": "Projy-0.3.tar.gz", "has_sig": false, "md5_digest": "5da2d1e8b7bde44dada488ced6f9282e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87229, "upload_time": "2012-11-18T19:36:09", "upload_time_iso_8601": "2012-11-18T19:36:09.558080Z", "url": "https://files.pythonhosted.org/packages/5d/ec/1f4434e5a8509248caf208d0790d1b03a17e1d236fcb445ec6dab74fa878/Projy-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4ed2b4b58ba3f57d66c9bb080bac441d", "sha256": "522f8b730d1d7512bda1b4ee3c4de87d3bf2f58b6ba6f76aa855d130736a5efb"}, "downloads": -1, "filename": "Projy-0.4.tar.gz", "has_sig": false, "md5_digest": "4ed2b4b58ba3f57d66c9bb080bac441d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92604, "upload_time": "2013-10-16T13:55:55", "upload_time_iso_8601": "2013-10-16T13:55:55.306063Z", "url": "https://files.pythonhosted.org/packages/83/2e/effb0558c538a0ec5a977841cd0f26d23dc04e6e20cf674a068fa8f17184/Projy-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7a644d40ac466bf5cd6a4777d4d140a5", "sha256": "345e69eb6717bae377b824e95546000a062c4052836084d87c5e987bcccf900f"}, "downloads": -1, "filename": "Projy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "7a644d40ac466bf5cd6a4777d4d140a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 445369, "upload_time": "2013-10-21T13:32:55", "upload_time_iso_8601": "2013-10-21T13:32:55.842350Z", "url": "https://files.pythonhosted.org/packages/12/2f/f737d94a9c0f496ef6153fbcff0cd2bd9197769e09e63d880fcc5a106a7b/Projy-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a644d40ac466bf5cd6a4777d4d140a5", "sha256": "345e69eb6717bae377b824e95546000a062c4052836084d87c5e987bcccf900f"}, "downloads": -1, "filename": "Projy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "7a644d40ac466bf5cd6a4777d4d140a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 445369, "upload_time": "2013-10-21T13:32:55", "upload_time_iso_8601": "2013-10-21T13:32:55.842350Z", "url": "https://files.pythonhosted.org/packages/12/2f/f737d94a9c0f496ef6153fbcff0cd2bd9197769e09e63d880fcc5a106a7b/Projy-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:14 2020"}