{"info": {"author": "StephenKwen", "author_email": "hyuncankun@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: SQL"], "description": "# Zugh\n\n**[WIP] Access to database in pythonic way**\n\n- [Zugh](#zugh)\n  - [Status](#status)\n  - [Required](#required)\n  - [Licence](#licence)\n  - [Install](#install)\n- [Usage](#usage)\n  - [Connection](#connection)\n    - [Config](#config)\n    - [Pool](#pool)\n  - [Database](#database)\n  - [Table](#table)\n  - [Query Object](#query-object)\n  - [Insert](#insert)\n    - [Insert a Row](#insert-a-row)\n    - [Insert Ignore](#insert-ignore)\n    - [Insert Or Update](#insert-or-update)\n    - [Insert Multi Rows](#insert-multi-rows)\n  - [Select](#select)\n    - [Filter](#filter)\n      - [Logic Express](#logic-express)\n      - [Compare](#compare)\n    - [Alias](#alias)\n    - [Sort](#sort)\n    - [Limit](#limit)\n    - [Aggregate](#aggregate)\n    - [Distinct](#distinct)\n    - [Subquery](#subquery)\n    - [Join In](#join-in)\n    - [Union](#union)\n  - [Update](#update)\n    - [F Object](#f-object)\n  - [Delete](#delete)\n  - [Decorator](#decorator)\n    - [db.query.query](#dbqueryquery)\n    - [db.query.transaction](#dbquerytransaction)\n  - [String](#string)\n    - [S Object](#s-object)\n  - [Math](#math)\n\n**Zugh** is a tool for generating SQL and accessing databases flexibly in pythonic way. It empower you to use complex SQL, but didn't need to write them directly.\n\n## Status\n\nWork in progress.\n\nNow we support MySQL only.\n\n## Required\n\n- Python >= 3.6\n- PyMySQL >= 0.9.3\n\n## Licence\n\nMIT.\n\n## Install\n\nUse pip:\n\n```sh\npip install zugh\n```\n\n# Usage\n\n>Note !\\\n>The time of writing each part of this document is out of order. So the results before and after the execution of SQL may not match. Nevertheless, I recommend that you start reading from scratch and try the code.\n\n## Connection\n\n### Config\n\n```py\n>>> from zugh.db.connection import connect_config\n>>> conn_config = connect_config('localhost', 'your_username', 'your_password')\n# You can use conn_config dict to configure connection for DdataBase object\n# or initial a connection pool\n```\n\n### Pool\n\n```py\n>>> from zugh.db.pool import ConnectionPool\n>>> pool = ConnectionPool(conn_config)\n```\n\n## Database\n\nCreate a database:\n\n```py\n>>> from zugh.schema.db import DataBase\n>>> db = DataBase('zugh', conn_config=conn_config)\n# or db = DataBase('zugh', pool=pool)\n>>> db.create()\n```\n\n## Table\n\nCreate a table.\n\nWe haven't implemented those APIs to create a table yet, so just execute SQL with a connection:\n\n```py\n>>> from zugh.db import connect\n>>> sql = \"\"\"\nCREATE TABLE zugh.users (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `age` int(11) NOT NULL,\n  `score` int(11) NOT NULL DEFAULT '0',\n  PRIMARY KEY (`id`)\n) Engine=InnoDB DEFAULT CHARSET=utf8mb4;\n\"\"\"\n>>> conn = connect(conn_config) # return a connection context\n>>> with conn as cn:\n        with cn.cursor() as cursor:\n            cursor.execute(sql)\n```\n\nInitial a `Table` object:\n\n```py\n>>> from zugh.schema.table import Table\n>>> tb = Table('users', db)\n```\n\n## Query Object\n\n`zugh.query.core.QueryBase` provide a base class for Query class below:\n\n- `zugh.query.core.SelectBase`\n- `zugh.query.core.Update`\n- `zugh.query.core.Insert`\n- `zugh.query.core.Delete`\n- or subclass of above class\n\n`Query object` is a instance of above class. If they were printed, a string of SQL statement would output.If configure properly, they can call `.exe()` method to execute. Usually, you don't use them\ndirectly.\n\nMostly, you would initial a `zugh.schema.table.Table` instance and call relative method, then will return a new `Query object`.\n\nDangerous queries, such as `update`, `delete` or similar mothed are expose after `Table.where()` method.\n\n```py\n>>> q_1 = tb.where().select()\n>>> type(q_1)\n<class 'zugh.query.core.Select'>\n>>> q_2 = tb.where().update(age=10)\n>>> type(q_2)\n<class 'zugh.query.core.Update'>\n>>> q_3 = tb.where().delete()\n>>> type(q_3)\n<class 'zugh.query.core.Delete'>\n>>> q_4 = tb.insert(dict(age=10, score=18))\n>>> type(q_4)\n<class 'zugh.query.core.Insert'>\n>>> q_5 = q_1.order_by()\n>> type(q_5)\n<class 'zugh.query.core.OrderBy'>\n```\n\n## Insert\n\n### Insert a Row\n\n```py\n>>> q1 = tb.insert(age=16, score=7)\n>>> print(q1)\nINSERT INTO zugh.users (age, score) VALUES (16, 7)\n>>> q2 = tb.where().select()\n>>> print(q2)\nSELECT * FROM zugh.users\n>>> q2.exe() # execute q2\n((), 0)\n>>> q1.exe() # execute q1\n1\n>>> q2.exe() # execute q2 again\n(((1, 16, 7),), 1)\n```\n\n### Insert Ignore\n\n```py\n>>> q3 = tb.insert_ignore(id=1, age=16, score=7)\n>>> print(q3)\nINSERT IGNORE INTO zugh.users (id, age, score) VALUES (1, 16, 7)\n>>> q3.exe() # would show a duplicate key warning\n```\n\n### Insert Or Update\n\nYou can use `F` object or `values` object to complete complex query.\n\n```py\nfrom zugh.query.others import F, values\n>>> row = dict(id=1, age=16, score=7)\n>>> q4 = tb.upsert(row, dict(age=9))\n>>> print(q4)\nINSERT INTO zugh.users (id, age, score) VALUES (1, 16, 7) ON DUPLICATE KEY UPDATE age = 9\n>>> update_fv = dict(age=F('age')-1, score=values('age')+1)\n>>> q5 = tb.upsert(row, update_fv=update_fv)\n>>> print(q5)\nINSERT INTO zugh.users (id, age, score) VALUES (1, 16, 7) ON DUPLICATE KEY UPDATE age = age - 1, score = VALUES(age) + 1\n```\n\n### Insert Multi Rows\n\n```py\n>>> rows = [\n    dict(age=9, score=8),\n    dict(age=7, score=9),\n    dict(age=17, score=7),\n    dict(age=23, score=7),\n  ]\n\n>>> q6 = tb.insert_multi(rows)\n>>> print(q6)\nINSERT INTO zugh.users (age, score) VALUES (9, 8), (7, 9), (17, 7), (23, 7)\n>>> q6.exe() # execute q6\n4\n>>> q2.exe()\n(((1, 16, 7), (2, 9, 8), (3, 7, 9), (4, 17, 7), (5, 23, 7)), 5)\n```\n\n## Select\n\n```py\n>>> q7 = tb.where(id=3).select()\n>>> print(q7)\nSELECT * FROM zugh.users WHERE id = 3\n>>> q7.exe()\n(((3, 7, 9),), 1)\n>>> q8 = tb.where().select('id', 'age')\n>>> print(q8)\nSELECT id, age FROM zugh.users\n>>> q8.exe()\n(((1, 16), (2, 9), (3, 7), (4, 17), (5, 23)), 5)\n```\n\nBy default,  when call `.exe()` of Select Query, it will return a `tuple` which contain queryset and number of rows.\nThe format of queryset format is still `tuple`. If you prefer a dict-format queryset, you should pass a parameter `cursorclass=pymysql.cursors.DictCursor` to configure connection. For more infomation, please refer docs of `PyMySQL`.\n\n### Filter\n\nthe `Table.where()` method of Table instance act as a filter.\n\nIf don't need to filter table, You can call `Table.select()` directly. It is a shortup of `Table.where().select()`.\n\n#### Logic Express\n\n```py\n>>> from zugh.query.logic import AND, OR, L\n>>> q9 = tb.where('id>3', 'id<7').select()\n>>> print(q9)\nSELECT * FROM zugh.users WHERE id>3 AND id<7\n>>> q9.exe()\n(((4, 17, 7), (5, 23, 7)), 2)\n\n>>> w1 = L('id<3')|L('id>7') # equal to OR('id<3', 'id>7')\n>>> w2 = OR('id<3', 'id>7')\n>>> w1\nOR(L(id<3),L(id>7))\n>>> w2\nOR(L(id<3),L(id>7))\n>>> print(w1)\nid<3 OR id>7\n>>> print(w2)\nid<3 OR id>7\n\n>>> q10 = tb.where(w2).select()\n>>> print(q10)\nSELECT * FROM zugh.users WHERE (id<3 OR id>7)\n>>> q10.exe()\n(((1, 16, 7), (2, 9, 8)), 2)\n\n# you can combine complex Logic object use L, OR and AND\n\n>>> w3 = L('id>3') & L('id<7') # equal to AND('id>3', 'id<7')\n>>> print(w3)\nid>3 AND id<7\n>>> w4 = L('age>3') & L('age<20')\n>>> print(w4)\nage>3 AND age<20\n\n>>> print(OR(w3, w4))\n(id>3 AND id<7) OR (age>3 AND age<20)\n>>> print(w3|w4)\n(id>3 AND id<7) OR (age>3 AND age<20)\n```\n\n#### Compare\n\nWe use class or their instance to deal with compare express.You can find them in `zugh.query.condition` module.\n\n| SQL Operator | Python Class/Instance/Operator |           example            |\n| ------------ | ------------------------------ | ---------------------------- |\n| =            | `eq`, `=`                      | .where(name='lisa')          |\n| !=           | `ne`                           | .where(name=ne('lisa'))      |\n| >            | `gt`                           | .where(amount=gt(9))         |\n| >=           | `ge`                           | .where(amount=ge(9))         |\n| <            | `lt`                           | .where(amount=lt(6))         |\n| <=           | `le`                           | .where(amount=le(5))         |\n| IN           | `In`                           | .where(id=In(1,2,3,4))       |\n| NOT IN       | `NIn`                          | .where(id=NIn(98,34,2))      |\n| LIKE         | `like`                         | .where(name=like('lisa%'))   |\n| NOT LIKE     | `unlike`                       | .where(name=unlike('john%')) |\n| IS NULL      | `NULL`                         | .where(age=NULL)             |\n| IS NOT NULL  | `NOT_NULL`                     | .where(age=NOT_NULL)         |\n\nThough works, `eq` is meaningless. For convenience, you would always use `=` .\n\n```py\n>>> from zugh.query.condition import NOT_NULL, NULL, In, NIn, ge, gt, le, like, lt, ne, unlike\n>>> q11 = tb.where(id=gt(3)).select()\n>>> print(q11)\nSELECT * FROM zugh.users WHERE id > 3\n\n>>> q12 = tb.where(id=gt(3), age=lt(18)).select()\n>>> print(q12)\nSELECT * FROM zugh.users WHERE id > 3 AND age < 18\n>>> q12.exe()\n(((4, 17, 7),), 1)\n\n>>> q13 = tb.where(id=In(1,3,5,7,9)).select('id', 'score')\n>>> print(q13)\nSELECT id, score FROM zugh.users WHERE id IN (1,3,5,7,9)\n>>> q13.exe()\n(((1, 7), (3, 9), (5, 7)), 3)\n\n>>> q14 = tb.where(score=NULL).select()\n>>> print(q14)\nSELECT * FROM zugh.users WHERE score IS NULL\n```\n\n### Alias\n\n```py\n>>> from zugh.query.others import As\n>>> from zugh.query.aggregate import Max\n>>> qa = tb.where().select(max_age=Max('age'))\n>>> print(qa)\nSELECT max(age) AS max_age FROM zugh.users\n>>> print(tb.where().select(As(Max('age'), 'max_age')))\nSELECT max(age) AS max_age FROM zugh.users\n```\n\nWe support alias, but the default `cursorclass` of PyMySQL will return query set in tuple. In this case, alias is useless.\nIf you want to return dict, you need to configure connection parameter `cursorclass=pymysql.cursors.DictCursor`. For more information, please refer PyMySQL's documents.\n\n### Sort\n\n```py\n>>> q15 = tb.where().select().order_by('age')\n>>> print(q15)\nSELECT * FROM zugh.users ORDER BY age\n>>> q15.exe()\n(((3, 7, 9), (2, 9, 8), (1, 16, 7), (4, 17, 7), (5, 23, 7)), 5)\n\n# You can use prefix '-' to sort reverse.\n>>> q16 = tb.where().select().order_by('-age', 'score')\n>>> print(q16)\nSELECT * FROM zugh.users ORDER BY age DESC, score\n>>> q16.exe()\n(((5, 23, 7), (4, 17, 7), (1, 16, 7), (2, 9, 8), (3, 7, 9)), 5)\n```\n\n### Limit\n\nWe use a magical `slice` to act limit/offset, `Select Query`' slice will return a instance of\n`zugh.query.core.Limit`, which is a subclass of `zugh.query.core.SelectBase`.\n\n```py\n>>> qm = tb.where().select()\n>>> qm1 = qm[:3] # fetch frist three\n>>> print(qm1)\nSELECT * FROM zugh.users LIMIT 3\n>>> qm2 = qm[2:4]\n>>> print(qm2)\nSELECT * FROM zugh.users LIMIT 2, 2\n>>> qm3 = qm[2:]\n>>> print(qm3)\nSELECT * FROM zugh.users LIMIT 2, 18446744073709551614\n```\n\nExcept for instances of `Limit`, all the others instance of `SelectBase` could use slice to return a instance of `Limit`.\n\nThe slice here don't accept negative numbers.\n\n### Aggregate\n\nWe provide some aggregation functions in `zugh.query.aggregate` moulde.\n\n```py\n>>> from zugh.query.aggregate import Avg, Count, Max, Min, Sum\n>>> q17 = tb.where().select(Avg('age'))\n>>> print(q17)\nSELECT avg(age) FROM zugh.users\n>>> q17.exe()\n(((Decimal('14.4000'),),), 1)\n\n>>> q18 = tb.where().select('score', Count('id')).group_by('score')\n>>> print(q18)\nSELECT score, count(id) FROM zugh.users GROUP BY score\n>>> q18.exe()\n(((7, 3), (8, 1), (9, 1)), 3)\n```\n\nYou can also use write 'raw' functions as long as you like it, such as:\n\n```py\nq17 = tb.where().select('avg(age)')\n```\n\n### Distinct\n\n```py\nfrom zugh.query.others import distinct\n>>> q19 = tb.where().select('distinct age', 'score')\n>>> print(q15)\nSELECT distinct age, score FROM zugh.users\n>>> q19.exe()\n(((16, 7), (9, 8), (7, 9), (17, 7), (23, 7)), 5)\n\n>>> q20 = tb.where().select(distinct('age'), 'score')\n>>> print(q20)\nSELECT DISTINCT age, score FROM zugh.users\n\n>>> q21 = tb.where().select(Count(distinct('age')))\n>>> print(q21)\nSELECT count(DISTINCT age) FROM zugh.users\n```\n\n### Subquery\n\nAt present, `In` and `NIn` express support subquery, it could accept a instance of `SelectBase` as a parameter.But they can not accept instance of `zugh.schema.table.TempTable` as a parameter.\n\n`TempTable` accept a `Select Query` as frist parameter and a alias string as second parameter. It would act like a normal read-only table, you could join it with others, or query data as a new instance `TempTable`.\n\n```py\n>>> from zugh.schema.table import TempTable\n>>> q22 = tb.where().select(Max('age'))\n>>> print(q22)\nSELECT max(age) FROM zugh.users\n\n>>> q23 = tb.where(age=In(q22)).select()\n>>> print(q23)\nSELECT * FROM zugh.users WHERE age IN (SELECT max(age) FROM zugh.users)\n>>> q23.exe()\n(((5, 23, 7),), 1)\n\n>>> q_t = tb.where(id=gt(2)).select()\n>>> tb_t1 = q_t.as_table('ak') # equal to tb_t1 = TempTable(q_t, 'ak')\n>>> tb_t1\nTempTable(SELECT * FROM zugh.users WHERE id > 2)\n>>>\n>>> sql2  = \"\"\"\nCREATE TABLE zugh.account (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `user_id` int(11) NOT NULL,\n  `amount` decimal(11,2) NOT NULL DEFAULT '0',\n  PRIMARY KEY (`id`)\n) Engine=InnoDB DEFAULT CHARSET=utf8mb4;\n\"\"\"\n>>> with conn as cn:\n        with cn.cursor() as cursor:\n            cursor.execute(sql2)\n>>> tb2 = Table('account', db, alias='a') # If tend to join table, alias is necessary\n>>> rows2 = (\n  dict(user_id=1, amount='99.89'),\n  dict(user_id=2, amount='292.2'),\n  dict(user_id=3, amount='299.89'),\n  dict(user_id=4, amount='192.1'),\n  dict(user_id=5, amount='183.7'),\n)\n>>> tb2.insert_multi(rows2).exe()\n>>>\n>>> tb_t2 = tb_t1.inner_join(tb2, on='a.user_id = ak.id')\n>>> q_t2 = tb_t2.select()\n>>> print(q_t2)\nSELECT * FROM (SELECT * FROM zugh.users WHERE id > 2) AS ak INNER JOIN zugh.account AS a ON a.user_id = ak.id\n>>> q_t2.exe()\n(((3, 7, 8, 3, 3, Decimal('299.89')), (4, 17, 8, 4, 4, Decimal('192.10'))), 2)\n```\n\n### Join In\n\nLet's add a new table and query from the join table:\n\n```py\n>>> tb3 = Table('users', db, alias='b') # If tend to join table, alias is necessary\n>>> tb_i = tb2.inner_join(tb3, on='a.user_id=b.id')\n>>> q_i = tb_i.where(a__id=gt(2)).select('a.id', 'a.user_id', 'a.amount', 'b.score', 'b.age')\n>>> print(q_i)\nSELECT a.id, a.user_id, a.amount, b.score, b.age FROM zugh.account AS a INNER JOIN zugh.users AS b ON a.user_id=b.id WHERE a.id > 2\n>>> q_i.exe()\n(((3, 3, Decimal('299.89'), 8, 7), (4, 4, Decimal('192.10'), 8, 17)), 2)\n```\n\nIf two underscores are used in the keyword of `where` method, the two underscores will be replaced by solid point.\nFor example, `a__id` will be replaced with `a.id`. This idea was copied from the Django project.\n\nWe provide `Table.inner_join()`, `Table.left_join()` and `Table.right_join()` methods to support Table join.\n\n### Union\n\nYou can call `union` or `union_all` method from `Select object`. For example:\n\n```py\n>>> from zugh.query.condition import gt, lt\n>>> q_u1 = tb.where(id=lt(5)).select()\n>>> q_u2 = tb.where(age=gt(20)).select()\n>>> q_u = q_u1.union_all(q_u2)\n>>> print(q_u)\nSELECT * FROM zugh.users WHERE id < 5 UNION ALL SELECT * FROM zugh.users WHERE age > 20\n```\n\n## Update\n\n```py\n>>> tb.where(id=1).select().exe()\n(((1, 16, 7),), 1)\n>>> q24 = tb.where(id=1).update(age=28)\n>>> print(q24)\nUPDATE zugh.users SET age = 28 WHERE id = 1\n>>> q24.exe()\n1\n>>> tb.where(id=1).select().exe()\n(((1, 28, 7),), 1)\n```\n\n### F Object\n\nF object means that it is a field, not a string. It could be used in `Table.where()` or `Where.update()`.\nF class is a subclass of `ArithmeticBase`. So F objects can perform mathematical operations, and it will return a new `ArithmeticBase` instance.\n\nSee the following examples:\n\n```py\n>>> from zugh.query.others import F\n>>> tb.where(id=1).select().exe()\n(((1, 28, 7),), 1)\n\n>>> q25 = tb.where(id=1).update(age=F('age') - 2, score=F('score') + 6)\n>>> print(q25)\nUPDATE zugh.users SET age = age - 2, score = score + 6 WHERE id = 1\n>>> q25.exe()\n1\n>>> tb.where(id=1).select().exe()\n(((1, 26, 13),), 1)\n\n# F object also use in filter\n>>> q26 = tb.where(score=gt(F('age')*2)).select()\n>>> print(q26)\nSELECT * FROM zugh.users WHERE score > age * 2\n>>> q26.exe()\n((), 0)\n```\n\n## Delete\n\n```py\n>>> tb.where(id=5).select().exe()\n(((5, 23, 7),), 1)\n>>> q23 = tb.where(id=5).delete()\n>>> print(q23)\nDELETE FROM zugh.users WHERE id = 5\n>>> q23.exe()\n1\n>>> tb.where(id=5).select().exe()\n((), 0)\n```\n\n## Decorator\n\n### db.query.query\n\n`query` decorator wraps a function which return a Query object. When call the wrapped function,\nit would execute a Query object. For example:\n\n```py\n>>> from zugh.query.aggregate import Max\n>>> from zugh.db.query import query\n\n>>> @query()\n    def query_max_score():\n      q1 = tb.where().select(Max('score'))\n      q2 = tb.where(score=In(q1)).select()\n      return q2\n\n>>> query_max_score()\n(((1, 26, 13),), 1)\n```\n\n`query` accept 2 parameters: `conn_config` and `conn_pool`. If the Query object returned don't\nconfigure connection, you can pass a `conn_config` dict  or a connection pool to it.\n\n### db.query.transaction\n\n`transaction` decorator wrap a function which return a list of `Query ojbect`. When call the wrapped\nfunction, it would execute the list of `Query object` as a transaction. If transaction succeed, return True, otherwise return False.\n\nFor example:\n\n```py\nfrom zugh.db.query import transaction\nfrom zugh.query.others import F\n\n@transaction(conn_pool=pool)\ndef mv_score():\n    q1 = tb.where(id=3).update(score=F('score') - 1)\n    q2 = tb.where(id=4).update(score=F('score') + 1)\n    return (q1, q2)\n\n>>> mv_score()\nTrue\n```\n\n## String\n\nSome string function awailable in `zugh.query.string` module.\n\nconcat 2 field:\n\n```py\nfrom zugh.query.string import Concat, S, Substring\n>>> q24 = tb.where().select(Concat('age', 'score'))\n>>> print(q24)\nSELECT concat(age, score) FROM zugh.users\n```\n\n### S Object\n\nIn string functions, str meaning field name instead of string. You should use `S object` to represent string.\n\n```py\nfrom zugh.query.string import Concat, S, Substring\n>>> q25 = tb.where().select(Concat(S('PRI-'), 'age'))\n>>> print(q25)\nSELECT concat('PRI-', age) FROM zugh.users\n>>> q25.exe()\n((('PRI-26',), ('PRI-9',), ('PRI-7',), ('PRI-17',)), 4)\n\n>>> print(tb.where().select(Substring('age', 2)))\nSELECT substring(age, 2) FROM zugh.users\n```\n\n## Math\n\nSome math functions are awailable in `zugh.query.math` module.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/StephenKwen/zugh", "keywords": "SQL,MySQL", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "zugh", "package_url": "https://pypi.org/project/zugh/", "platform": "", "project_url": "https://pypi.org/project/zugh/", "project_urls": {"Homepage": "https://github.com/StephenKwen/zugh"}, "release_url": "https://pypi.org/project/zugh/0.0.1b3/", "requires_dist": ["PyMySQL (>=0.9.3)"], "requires_python": ">=3.6", "summary": "Access to database flexibly", "version": "0.0.1b3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Zugh</h1>\n<p><strong>[WIP] Access to database in pythonic way</strong></p>\n<ul>\n<li><a href=\"#zugh\" rel=\"nofollow\">Zugh</a>\n<ul>\n<li><a href=\"#status\" rel=\"nofollow\">Status</a></li>\n<li><a href=\"#required\" rel=\"nofollow\">Required</a></li>\n<li><a href=\"#licence\" rel=\"nofollow\">Licence</a></li>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#connection\" rel=\"nofollow\">Connection</a>\n<ul>\n<li><a href=\"#config\" rel=\"nofollow\">Config</a></li>\n<li><a href=\"#pool\" rel=\"nofollow\">Pool</a></li>\n</ul>\n</li>\n<li><a href=\"#database\" rel=\"nofollow\">Database</a></li>\n<li><a href=\"#table\" rel=\"nofollow\">Table</a></li>\n<li><a href=\"#query-object\" rel=\"nofollow\">Query Object</a></li>\n<li><a href=\"#insert\" rel=\"nofollow\">Insert</a>\n<ul>\n<li><a href=\"#insert-a-row\" rel=\"nofollow\">Insert a Row</a></li>\n<li><a href=\"#insert-ignore\" rel=\"nofollow\">Insert Ignore</a></li>\n<li><a href=\"#insert-or-update\" rel=\"nofollow\">Insert Or Update</a></li>\n<li><a href=\"#insert-multi-rows\" rel=\"nofollow\">Insert Multi Rows</a></li>\n</ul>\n</li>\n<li><a href=\"#select\" rel=\"nofollow\">Select</a>\n<ul>\n<li><a href=\"#filter\" rel=\"nofollow\">Filter</a>\n<ul>\n<li><a href=\"#logic-express\" rel=\"nofollow\">Logic Express</a></li>\n<li><a href=\"#compare\" rel=\"nofollow\">Compare</a></li>\n</ul>\n</li>\n<li><a href=\"#alias\" rel=\"nofollow\">Alias</a></li>\n<li><a href=\"#sort\" rel=\"nofollow\">Sort</a></li>\n<li><a href=\"#limit\" rel=\"nofollow\">Limit</a></li>\n<li><a href=\"#aggregate\" rel=\"nofollow\">Aggregate</a></li>\n<li><a href=\"#distinct\" rel=\"nofollow\">Distinct</a></li>\n<li><a href=\"#subquery\" rel=\"nofollow\">Subquery</a></li>\n<li><a href=\"#join-in\" rel=\"nofollow\">Join In</a></li>\n<li><a href=\"#union\" rel=\"nofollow\">Union</a></li>\n</ul>\n</li>\n<li><a href=\"#update\" rel=\"nofollow\">Update</a>\n<ul>\n<li><a href=\"#f-object\" rel=\"nofollow\">F Object</a></li>\n</ul>\n</li>\n<li><a href=\"#delete\" rel=\"nofollow\">Delete</a></li>\n<li><a href=\"#decorator\" rel=\"nofollow\">Decorator</a>\n<ul>\n<li><a href=\"#dbqueryquery\" rel=\"nofollow\">db.query.query</a></li>\n<li><a href=\"#dbquerytransaction\" rel=\"nofollow\">db.query.transaction</a></li>\n</ul>\n</li>\n<li><a href=\"#string\" rel=\"nofollow\">String</a>\n<ul>\n<li><a href=\"#s-object\" rel=\"nofollow\">S Object</a></li>\n</ul>\n</li>\n<li><a href=\"#math\" rel=\"nofollow\">Math</a></li>\n</ul>\n</li>\n</ul>\n<p><strong>Zugh</strong> is a tool for generating SQL and accessing databases flexibly in pythonic way. It empower you to use complex SQL, but didn't need to write them directly.</p>\n<h2>Status</h2>\n<p>Work in progress.</p>\n<p>Now we support MySQL only.</p>\n<h2>Required</h2>\n<ul>\n<li>Python &gt;= 3.6</li>\n<li>PyMySQL &gt;= 0.9.3</li>\n</ul>\n<h2>Licence</h2>\n<p>MIT.</p>\n<h2>Install</h2>\n<p>Use pip:</p>\n<pre>pip install zugh\n</pre>\n<h1>Usage</h1>\n<blockquote>\n<p>Note !<br>\nThe time of writing each part of this document is out of order. So the results before and after the execution of SQL may not match. Nevertheless, I recommend that you start reading from scratch and try the code.</p>\n</blockquote>\n<h2>Connection</h2>\n<h3>Config</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.db.connection</span> <span class=\"kn\">import</span> <span class=\"n\">connect_config</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">conn_config</span> <span class=\"o\">=</span> <span class=\"n\">connect_config</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'your_username'</span><span class=\"p\">,</span> <span class=\"s1\">'your_password'</span><span class=\"p\">)</span>\n<span class=\"c1\"># You can use conn_config dict to configure connection for DdataBase object</span>\n<span class=\"c1\"># or initial a connection pool</span>\n</pre>\n<h3>Pool</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.db.pool</span> <span class=\"kn\">import</span> <span class=\"n\">ConnectionPool</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pool</span> <span class=\"o\">=</span> <span class=\"n\">ConnectionPool</span><span class=\"p\">(</span><span class=\"n\">conn_config</span><span class=\"p\">)</span>\n</pre>\n<h2>Database</h2>\n<p>Create a database:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.schema.db</span> <span class=\"kn\">import</span> <span class=\"n\">DataBase</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">DataBase</span><span class=\"p\">(</span><span class=\"s1\">'zugh'</span><span class=\"p\">,</span> <span class=\"n\">conn_config</span><span class=\"o\">=</span><span class=\"n\">conn_config</span><span class=\"p\">)</span>\n<span class=\"c1\"># or db = DataBase('zugh', pool=pool)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n</pre>\n<h2>Table</h2>\n<p>Create a table.</p>\n<p>We haven't implemented those APIs to create a table yet, so just execute SQL with a connection:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.db</span> <span class=\"kn\">import</span> <span class=\"n\">connect</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">CREATE TABLE zugh.users (</span>\n<span class=\"s2\">  `id` int(11) NOT NULL AUTO_INCREMENT,</span>\n<span class=\"s2\">  `age` int(11) NOT NULL,</span>\n<span class=\"s2\">  `score` int(11) NOT NULL DEFAULT '0',</span>\n<span class=\"s2\">  PRIMARY KEY (`id`)</span>\n<span class=\"s2\">) Engine=InnoDB DEFAULT CHARSET=utf8mb4;</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">conn_config</span><span class=\"p\">)</span> <span class=\"c1\"># return a connection context</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"n\">conn</span> <span class=\"k\">as</span> <span class=\"n\">cn</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">cn</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">cursor</span><span class=\"p\">:</span>\n            <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">sql</span><span class=\"p\">)</span>\n</pre>\n<p>Initial a <code>Table</code> object:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.schema.table</span> <span class=\"kn\">import</span> <span class=\"n\">Table</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">)</span>\n</pre>\n<h2>Query Object</h2>\n<p><code>zugh.query.core.QueryBase</code> provide a base class for Query class below:</p>\n<ul>\n<li><code>zugh.query.core.SelectBase</code></li>\n<li><code>zugh.query.core.Update</code></li>\n<li><code>zugh.query.core.Insert</code></li>\n<li><code>zugh.query.core.Delete</code></li>\n<li>or subclass of above class</li>\n</ul>\n<p><code>Query object</code> is a instance of above class. If they were printed, a string of SQL statement would output.If configure properly, they can call <code>.exe()</code> method to execute. Usually, you don't use them\ndirectly.</p>\n<p>Mostly, you would initial a <code>zugh.schema.table.Table</code> instance and call relative method, then will return a new <code>Query object</code>.</p>\n<p>Dangerous queries, such as <code>update</code>, <code>delete</code> or similar mothed are expose after <code>Table.where()</code> method.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_1</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">q_1</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">zugh</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Select</span><span class=\"s1\">'&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_2</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">q_2</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">zugh</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Update</span><span class=\"s1\">'&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_3</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">q_3</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">zugh</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Delete</span><span class=\"s1\">'&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_4</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mi\">18</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">q_4</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">zugh</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">Insert</span><span class=\"s1\">'&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_5</span> <span class=\"o\">=</span> <span class=\"n\">q_1</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">q_5</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">zugh</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">OrderBy</span><span class=\"s1\">'&gt;</span>\n</pre>\n<h2>Insert</h2>\n<h3>Insert a Row</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q1</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q1</span><span class=\"p\">)</span>\n<span class=\"n\">INSERT</span> <span class=\"n\">INTO</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">)</span> <span class=\"n\">VALUES</span> <span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q2</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q2</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q2</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span> <span class=\"c1\"># execute q2</span>\n<span class=\"p\">((),</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q1</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span> <span class=\"c1\"># execute q1</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q2</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span> <span class=\"c1\"># execute q2 again</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h3>Insert Ignore</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q3</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">insert_ignore</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q3</span><span class=\"p\">)</span>\n<span class=\"n\">INSERT</span> <span class=\"n\">IGNORE</span> <span class=\"n\">INTO</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">)</span> <span class=\"n\">VALUES</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q3</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span> <span class=\"c1\"># would show a duplicate key warning</span>\n</pre>\n<h3>Insert Or Update</h3>\n<p>You can use <code>F</code> object or <code>values</code> object to complete complex query.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zugh.query.others</span> <span class=\"kn\">import</span> <span class=\"n\">F</span><span class=\"p\">,</span> <span class=\"n\">values</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">row</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q4</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">upsert</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q4</span><span class=\"p\">)</span>\n<span class=\"n\">INSERT</span> <span class=\"n\">INTO</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">)</span> <span class=\"n\">VALUES</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"n\">ON</span> <span class=\"n\">DUPLICATE</span> <span class=\"n\">KEY</span> <span class=\"n\">UPDATE</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"mi\">9</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">update_fv</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">)</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"n\">values</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q5</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">upsert</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"p\">,</span> <span class=\"n\">update_fv</span><span class=\"o\">=</span><span class=\"n\">update_fv</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q5</span><span class=\"p\">)</span>\n<span class=\"n\">INSERT</span> <span class=\"n\">INTO</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">)</span> <span class=\"n\">VALUES</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"n\">ON</span> <span class=\"n\">DUPLICATE</span> <span class=\"n\">KEY</span> <span class=\"n\">UPDATE</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">age</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">VALUES</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n</pre>\n<h3>Insert Multi Rows</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rows</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mi\">8</span><span class=\"p\">),</span>\n    <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mi\">9</span><span class=\"p\">),</span>\n    <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">),</span>\n    <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">),</span>\n  <span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q6</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">insert_multi</span><span class=\"p\">(</span><span class=\"n\">rows</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q6</span><span class=\"p\">)</span>\n<span class=\"n\">INSERT</span> <span class=\"n\">INTO</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">)</span> <span class=\"n\">VALUES</span> <span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q6</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span> <span class=\"c1\"># execute q6</span>\n<span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q2</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<h2>Select</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q7</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q7</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q7</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q8</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q8</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">age</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q8</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">)),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>By default,  when call <code>.exe()</code> of Select Query, it will return a <code>tuple</code> which contain queryset and number of rows.\nThe format of queryset format is still <code>tuple</code>. If you prefer a dict-format queryset, you should pass a parameter <code>cursorclass=pymysql.cursors.DictCursor</code> to configure connection. For more infomation, please refer docs of <code>PyMySQL</code>.</p>\n<h3>Filter</h3>\n<p>the <code>Table.where()</code> method of Table instance act as a filter.</p>\n<p>If don't need to filter table, You can call <code>Table.select()</code> directly. It is a shortup of <code>Table.where().select()</code>.</p>\n<h4>Logic Express</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.query.logic</span> <span class=\"kn\">import</span> <span class=\"n\">AND</span><span class=\"p\">,</span> <span class=\"n\">OR</span><span class=\"p\">,</span> <span class=\"n\">L</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q9</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"s1\">'id&gt;3'</span><span class=\"p\">,</span> <span class=\"s1\">'id&lt;7'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q9</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span> <span class=\"n\">AND</span> <span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">7</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q9</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">w1</span> <span class=\"o\">=</span> <span class=\"n\">L</span><span class=\"p\">(</span><span class=\"s1\">'id&lt;3'</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"n\">L</span><span class=\"p\">(</span><span class=\"s1\">'id&gt;7'</span><span class=\"p\">)</span> <span class=\"c1\"># equal to OR('id&lt;3', 'id&gt;7')</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">w2</span> <span class=\"o\">=</span> <span class=\"n\">OR</span><span class=\"p\">(</span><span class=\"s1\">'id&lt;3'</span><span class=\"p\">,</span> <span class=\"s1\">'id&gt;7'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">w1</span>\n<span class=\"n\">OR</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"n\">L</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">7</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">w2</span>\n<span class=\"n\">OR</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"n\">L</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">7</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">w1</span><span class=\"p\">)</span>\n<span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span> <span class=\"n\">OR</span> <span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">7</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">w2</span><span class=\"p\">)</span>\n<span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span> <span class=\"n\">OR</span> <span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">7</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q10</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">w2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q10</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">3</span> <span class=\"n\">OR</span> <span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">7</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q10</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">)),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># you can combine complex Logic object use L, OR and AND</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">w3</span> <span class=\"o\">=</span> <span class=\"n\">L</span><span class=\"p\">(</span><span class=\"s1\">'id&gt;3'</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"n\">L</span><span class=\"p\">(</span><span class=\"s1\">'id&lt;7'</span><span class=\"p\">)</span> <span class=\"c1\"># equal to AND('id&gt;3', 'id&lt;7')</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">w3</span><span class=\"p\">)</span>\n<span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span> <span class=\"n\">AND</span> <span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">7</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">w4</span> <span class=\"o\">=</span> <span class=\"n\">L</span><span class=\"p\">(</span><span class=\"s1\">'age&gt;3'</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"n\">L</span><span class=\"p\">(</span><span class=\"s1\">'age&lt;20'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">w4</span><span class=\"p\">)</span>\n<span class=\"n\">age</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span> <span class=\"n\">AND</span> <span class=\"n\">age</span><span class=\"o\">&lt;</span><span class=\"mi\">20</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">OR</span><span class=\"p\">(</span><span class=\"n\">w3</span><span class=\"p\">,</span> <span class=\"n\">w4</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span> <span class=\"n\">AND</span> <span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"n\">OR</span> <span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span> <span class=\"n\">AND</span> <span class=\"n\">age</span><span class=\"o\">&lt;</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">w3</span><span class=\"o\">|</span><span class=\"n\">w4</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span> <span class=\"n\">AND</span> <span class=\"nb\">id</span><span class=\"o\">&lt;</span><span class=\"mi\">7</span><span class=\"p\">)</span> <span class=\"n\">OR</span> <span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span> <span class=\"n\">AND</span> <span class=\"n\">age</span><span class=\"o\">&lt;</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n</pre>\n<h4>Compare</h4>\n<p>We use class or their instance to deal with compare express.You can find them in <code>zugh.query.condition</code> module.</p>\n<table>\n<thead>\n<tr>\n<th>SQL Operator</th>\n<th>Python Class/Instance/Operator</th>\n<th>example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>=</td>\n<td><code>eq</code>, <code>=</code></td>\n<td>.where(name='lisa')</td>\n</tr>\n<tr>\n<td>!=</td>\n<td><code>ne</code></td>\n<td>.where(name=ne('lisa'))</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td><code>gt</code></td>\n<td>.where(amount=gt(9))</td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td><code>ge</code></td>\n<td>.where(amount=ge(9))</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td><code>lt</code></td>\n<td>.where(amount=lt(6))</td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td><code>le</code></td>\n<td>.where(amount=le(5))</td>\n</tr>\n<tr>\n<td>IN</td>\n<td><code>In</code></td>\n<td>.where(id=In(1,2,3,4))</td>\n</tr>\n<tr>\n<td>NOT IN</td>\n<td><code>NIn</code></td>\n<td>.where(id=NIn(98,34,2))</td>\n</tr>\n<tr>\n<td>LIKE</td>\n<td><code>like</code></td>\n<td>.where(name=like('lisa%'))</td>\n</tr>\n<tr>\n<td>NOT LIKE</td>\n<td><code>unlike</code></td>\n<td>.where(name=unlike('john%'))</td>\n</tr>\n<tr>\n<td>IS NULL</td>\n<td><code>NULL</code></td>\n<td>.where(age=NULL)</td>\n</tr>\n<tr>\n<td>IS NOT NULL</td>\n<td><code>NOT_NULL</code></td>\n<td>.where(age=NOT_NULL)</td>\n</tr></tbody></table>\n<p>Though works, <code>eq</code> is meaningless. For convenience, you would always use <code>=</code> .</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.query.condition</span> <span class=\"kn\">import</span> <span class=\"n\">NOT_NULL</span><span class=\"p\">,</span> <span class=\"n\">NULL</span><span class=\"p\">,</span> <span class=\"n\">In</span><span class=\"p\">,</span> <span class=\"n\">NIn</span><span class=\"p\">,</span> <span class=\"n\">ge</span><span class=\"p\">,</span> <span class=\"n\">gt</span><span class=\"p\">,</span> <span class=\"n\">le</span><span class=\"p\">,</span> <span class=\"n\">like</span><span class=\"p\">,</span> <span class=\"n\">lt</span><span class=\"p\">,</span> <span class=\"n\">ne</span><span class=\"p\">,</span> <span class=\"n\">unlike</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q11</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">gt</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q11</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q12</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">gt</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">lt</span><span class=\"p\">(</span><span class=\"mi\">18</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q12</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">&gt;</span> <span class=\"mi\">3</span> <span class=\"n\">AND</span> <span class=\"n\">age</span> <span class=\"o\">&lt;</span> <span class=\"mi\">18</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q12</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q13</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">In</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'score'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q13</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"n\">IN</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q13</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)),</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q14</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"o\">=</span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q14</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"n\">score</span> <span class=\"n\">IS</span> <span class=\"n\">NULL</span>\n</pre>\n<h3>Alias</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.query.others</span> <span class=\"kn\">import</span> <span class=\"n\">As</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.query.aggregate</span> <span class=\"kn\">import</span> <span class=\"n\">Max</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qa</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">max_age</span><span class=\"o\">=</span><span class=\"n\">Max</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qa</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">)</span> <span class=\"n\">AS</span> <span class=\"n\">max_age</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">As</span><span class=\"p\">(</span><span class=\"n\">Max</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">),</span> <span class=\"s1\">'max_age'</span><span class=\"p\">)))</span>\n<span class=\"n\">SELECT</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">)</span> <span class=\"n\">AS</span> <span class=\"n\">max_age</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n</pre>\n<p>We support alias, but the default <code>cursorclass</code> of PyMySQL will return query set in tuple. In this case, alias is useless.\nIf you want to return dict, you need to configure connection parameter <code>cursorclass=pymysql.cursors.DictCursor</code>. For more information, please refer PyMySQL's documents.</p>\n<h3>Sort</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q15</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q15</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">ORDER</span> <span class=\"n\">BY</span> <span class=\"n\">age</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q15</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can use prefix '-' to sort reverse.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q16</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'-age'</span><span class=\"p\">,</span> <span class=\"s1\">'score'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q16</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">ORDER</span> <span class=\"n\">BY</span> <span class=\"n\">age</span> <span class=\"n\">DESC</span><span class=\"p\">,</span> <span class=\"n\">score</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q16</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">)),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<h3>Limit</h3>\n<p>We use a magical <code>slice</code> to act limit/offset, <code>Select Query</code>' slice will return a instance of\n<code>zugh.query.core.Limit</code>, which is a subclass of <code>zugh.query.core.SelectBase</code>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qm</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qm1</span> <span class=\"o\">=</span> <span class=\"n\">qm</span><span class=\"p\">[:</span><span class=\"mi\">3</span><span class=\"p\">]</span> <span class=\"c1\"># fetch frist three</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qm1</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">LIMIT</span> <span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qm2</span> <span class=\"o\">=</span> <span class=\"n\">qm</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qm2</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">LIMIT</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">qm3</span> <span class=\"o\">=</span> <span class=\"n\">qm</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">:]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">qm3</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">LIMIT</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">18446744073709551614</span>\n</pre>\n<p>Except for instances of <code>Limit</code>, all the others instance of <code>SelectBase</code> could use slice to return a instance of <code>Limit</code>.</p>\n<p>The slice here don't accept negative numbers.</p>\n<h3>Aggregate</h3>\n<p>We provide some aggregation functions in <code>zugh.query.aggregate</code> moulde.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.query.aggregate</span> <span class=\"kn\">import</span> <span class=\"n\">Avg</span><span class=\"p\">,</span> <span class=\"n\">Count</span><span class=\"p\">,</span> <span class=\"n\">Max</span><span class=\"p\">,</span> <span class=\"n\">Min</span><span class=\"p\">,</span> <span class=\"n\">Sum</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q17</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">Avg</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q17</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">avg</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">)</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q17</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s1\">'14.4000'</span><span class=\"p\">),),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q18</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'score'</span><span class=\"p\">,</span> <span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">group_by</span><span class=\"p\">(</span><span class=\"s1\">'score'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q18</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">score</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">)</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">GROUP</span> <span class=\"n\">BY</span> <span class=\"n\">score</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q18</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)),</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>You can also use write 'raw' functions as long as you like it, such as:</p>\n<pre><span class=\"n\">q17</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'avg(age)'</span><span class=\"p\">)</span>\n</pre>\n<h3>Distinct</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zugh.query.others</span> <span class=\"kn\">import</span> <span class=\"n\">distinct</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q19</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'distinct age'</span><span class=\"p\">,</span> <span class=\"s1\">'score'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q15</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">distinct</span> <span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q19</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)),</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q20</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">distinct</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">),</span> <span class=\"s1\">'score'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q20</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">DISTINCT</span> <span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q21</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"n\">distinct</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">)))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q21</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">DISTINCT</span> <span class=\"n\">age</span><span class=\"p\">)</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n</pre>\n<h3>Subquery</h3>\n<p>At present, <code>In</code> and <code>NIn</code> express support subquery, it could accept a instance of <code>SelectBase</code> as a parameter.But they can not accept instance of <code>zugh.schema.table.TempTable</code> as a parameter.</p>\n<p><code>TempTable</code> accept a <code>Select Query</code> as frist parameter and a alias string as second parameter. It would act like a normal read-only table, you could join it with others, or query data as a new instance <code>TempTable</code>.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.schema.table</span> <span class=\"kn\">import</span> <span class=\"n\">TempTable</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q22</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">Max</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q22</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">)</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q23</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">In</span><span class=\"p\">(</span><span class=\"n\">q22</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q23</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"n\">age</span> <span class=\"n\">IN</span> <span class=\"p\">(</span><span class=\"n\">SELECT</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">)</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q23</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_t</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">gt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb_t1</span> <span class=\"o\">=</span> <span class=\"n\">q_t</span><span class=\"o\">.</span><span class=\"n\">as_table</span><span class=\"p\">(</span><span class=\"s1\">'ak'</span><span class=\"p\">)</span> <span class=\"c1\"># equal to tb_t1 = TempTable(q_t, 'ak')</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb_t1</span>\n<span class=\"n\">TempTable</span><span class=\"p\">(</span><span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sql2</span>  <span class=\"o\">=</span> <span class=\"s2\">\"\"\"</span>\n<span class=\"s2\">CREATE TABLE zugh.account (</span>\n<span class=\"s2\">  `id` int(11) NOT NULL AUTO_INCREMENT,</span>\n<span class=\"s2\">  `user_id` int(11) NOT NULL,</span>\n<span class=\"s2\">  `amount` decimal(11,2) NOT NULL DEFAULT '0',</span>\n<span class=\"s2\">  PRIMARY KEY (`id`)</span>\n<span class=\"s2\">) Engine=InnoDB DEFAULT CHARSET=utf8mb4;</span>\n<span class=\"s2\">\"\"\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"n\">conn</span> <span class=\"k\">as</span> <span class=\"n\">cn</span><span class=\"p\">:</span>\n        <span class=\"k\">with</span> <span class=\"n\">cn</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">cursor</span><span class=\"p\">:</span>\n            <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">sql2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb2</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'account'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s1\">'a'</span><span class=\"p\">)</span> <span class=\"c1\"># If tend to join table, alias is necessary</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rows2</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n  <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'99.89'</span><span class=\"p\">),</span>\n  <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'292.2'</span><span class=\"p\">),</span>\n  <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'299.89'</span><span class=\"p\">),</span>\n  <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'192.1'</span><span class=\"p\">),</span>\n  <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"o\">=</span><span class=\"s1\">'183.7'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb2</span><span class=\"o\">.</span><span class=\"n\">insert_multi</span><span class=\"p\">(</span><span class=\"n\">rows2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb_t2</span> <span class=\"o\">=</span> <span class=\"n\">tb_t1</span><span class=\"o\">.</span><span class=\"n\">inner_join</span><span class=\"p\">(</span><span class=\"n\">tb2</span><span class=\"p\">,</span> <span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">'a.user_id = ak.id'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_t2</span> <span class=\"o\">=</span> <span class=\"n\">tb_t2</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q_t2</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"p\">(</span><span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"n\">AS</span> <span class=\"n\">ak</span> <span class=\"n\">INNER</span> <span class=\"n\">JOIN</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">account</span> <span class=\"n\">AS</span> <span class=\"n\">a</span> <span class=\"n\">ON</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">ak</span><span class=\"o\">.</span><span class=\"n\">id</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_t2</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s1\">'299.89'</span><span class=\"p\">)),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s1\">'192.10'</span><span class=\"p\">))),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n<h3>Join In</h3>\n<p>Let's add a new table and query from the join table:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb3</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'users'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s1\">'b'</span><span class=\"p\">)</span> <span class=\"c1\"># If tend to join table, alias is necessary</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb_i</span> <span class=\"o\">=</span> <span class=\"n\">tb2</span><span class=\"o\">.</span><span class=\"n\">inner_join</span><span class=\"p\">(</span><span class=\"n\">tb3</span><span class=\"p\">,</span> <span class=\"n\">on</span><span class=\"o\">=</span><span class=\"s1\">'a.user_id=b.id'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_i</span> <span class=\"o\">=</span> <span class=\"n\">tb_i</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">a__id</span><span class=\"o\">=</span><span class=\"n\">gt</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'a.id'</span><span class=\"p\">,</span> <span class=\"s1\">'a.user_id'</span><span class=\"p\">,</span> <span class=\"s1\">'a.amount'</span><span class=\"p\">,</span> <span class=\"s1\">'b.score'</span><span class=\"p\">,</span> <span class=\"s1\">'b.age'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q_i</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">user_id</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">amount</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">age</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">account</span> <span class=\"n\">AS</span> <span class=\"n\">a</span> <span class=\"n\">INNER</span> <span class=\"n\">JOIN</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">AS</span> <span class=\"n\">b</span> <span class=\"n\">ON</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"n\">WHERE</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_i</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s1\">'299.89'</span><span class=\"p\">),</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">Decimal</span><span class=\"p\">(</span><span class=\"s1\">'192.10'</span><span class=\"p\">),</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">17</span><span class=\"p\">)),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n</pre>\n<p>If two underscores are used in the keyword of <code>where</code> method, the two underscores will be replaced by solid point.\nFor example, <code>a__id</code> will be replaced with <code>a.id</code>. This idea was copied from the Django project.</p>\n<p>We provide <code>Table.inner_join()</code>, <code>Table.left_join()</code> and <code>Table.right_join()</code> methods to support Table join.</p>\n<h3>Union</h3>\n<p>You can call <code>union</code> or <code>union_all</code> method from <code>Select object</code>. For example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.query.condition</span> <span class=\"kn\">import</span> <span class=\"n\">gt</span><span class=\"p\">,</span> <span class=\"n\">lt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_u1</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">lt</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_u2</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">gt</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q_u</span> <span class=\"o\">=</span> <span class=\"n\">q_u1</span><span class=\"o\">.</span><span class=\"n\">union_all</span><span class=\"p\">(</span><span class=\"n\">q_u2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q_u</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">&lt;</span> <span class=\"mi\">5</span> <span class=\"n\">UNION</span> <span class=\"n\">ALL</span> <span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"n\">age</span> <span class=\"o\">&gt;</span> <span class=\"mi\">20</span>\n</pre>\n<h2>Update</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q24</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">28</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q24</span><span class=\"p\">)</span>\n<span class=\"n\">UPDATE</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">SET</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"mi\">28</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q24</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h3>F Object</h3>\n<p>F object means that it is a field, not a string. It could be used in <code>Table.where()</code> or <code>Where.update()</code>.\nF class is a subclass of <code>ArithmeticBase</code>. So F objects can perform mathematical operations, and it will return a new <code>ArithmeticBase</code> instance.</p>\n<p>See the following examples:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.query.others</span> <span class=\"kn\">import</span> <span class=\"n\">F</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q25</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"o\">=</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s1\">'score'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q25</span><span class=\"p\">)</span>\n<span class=\"n\">UPDATE</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">SET</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">age</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">score</span> <span class=\"o\">+</span> <span class=\"mi\">6</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q25</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># F object also use in filter</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q26</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"o\">=</span><span class=\"n\">gt</span><span class=\"p\">(</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q26</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"o\">*</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"n\">score</span> <span class=\"o\">&gt;</span> <span class=\"n\">age</span> <span class=\"o\">*</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q26</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">((),</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<h2>Delete</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q23</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q23</span><span class=\"p\">)</span>\n<span class=\"n\">DELETE</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span> <span class=\"n\">WHERE</span> <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q23</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">((),</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<h2>Decorator</h2>\n<h3>db.query.query</h3>\n<p><code>query</code> decorator wraps a function which return a Query object. When call the wrapped function,\nit would execute a Query object. For example:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.query.aggregate</span> <span class=\"kn\">import</span> <span class=\"n\">Max</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">zugh.db.query</span> <span class=\"kn\">import</span> <span class=\"n\">query</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@query</span><span class=\"p\">()</span>\n    <span class=\"k\">def</span> <span class=\"nf\">query_max_score</span><span class=\"p\">():</span>\n      <span class=\"n\">q1</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">Max</span><span class=\"p\">(</span><span class=\"s1\">'score'</span><span class=\"p\">))</span>\n      <span class=\"n\">q2</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"o\">=</span><span class=\"n\">In</span><span class=\"p\">(</span><span class=\"n\">q1</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">()</span>\n      <span class=\"k\">return</span> <span class=\"n\">q2</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">query_max_score</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">),),</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p><code>query</code> accept 2 parameters: <code>conn_config</code> and <code>conn_pool</code>. If the Query object returned don't\nconfigure connection, you can pass a <code>conn_config</code> dict  or a connection pool to it.</p>\n<h3>db.query.transaction</h3>\n<p><code>transaction</code> decorator wrap a function which return a list of <code>Query ojbect</code>. When call the wrapped\nfunction, it would execute the list of <code>Query object</code> as a transaction. If transaction succeed, return True, otherwise return False.</p>\n<p>For example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zugh.db.query</span> <span class=\"kn\">import</span> <span class=\"n\">transaction</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zugh.query.others</span> <span class=\"kn\">import</span> <span class=\"n\">F</span>\n\n<span class=\"nd\">@transaction</span><span class=\"p\">(</span><span class=\"n\">conn_pool</span><span class=\"o\">=</span><span class=\"n\">pool</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">mv_score</span><span class=\"p\">():</span>\n    <span class=\"n\">q1</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"o\">=</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s1\">'score'</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">q2</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">score</span><span class=\"o\">=</span><span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s1\">'score'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">q1</span><span class=\"p\">,</span> <span class=\"n\">q2</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mv_score</span><span class=\"p\">()</span>\n<span class=\"kc\">True</span>\n</pre>\n<h2>String</h2>\n<p>Some string function awailable in <code>zugh.query.string</code> module.</p>\n<p>concat 2 field:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zugh.query.string</span> <span class=\"kn\">import</span> <span class=\"n\">Concat</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">Substring</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q24</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">Concat</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">,</span> <span class=\"s1\">'score'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q24</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">)</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n</pre>\n<h3>S Object</h3>\n<p>In string functions, str meaning field name instead of string. You should use <code>S object</code> to represent string.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">zugh.query.string</span> <span class=\"kn\">import</span> <span class=\"n\">Concat</span><span class=\"p\">,</span> <span class=\"n\">S</span><span class=\"p\">,</span> <span class=\"n\">Substring</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q25</span> <span class=\"o\">=</span> <span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">Concat</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"p\">(</span><span class=\"s1\">'PRI-'</span><span class=\"p\">),</span> <span class=\"s1\">'age'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">q25</span><span class=\"p\">)</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"s1\">'PRI-'</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">)</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">q25</span><span class=\"o\">.</span><span class=\"n\">exe</span><span class=\"p\">()</span>\n<span class=\"p\">(((</span><span class=\"s1\">'PRI-26'</span><span class=\"p\">,),</span> <span class=\"p\">(</span><span class=\"s1\">'PRI-9'</span><span class=\"p\">,),</span> <span class=\"p\">(</span><span class=\"s1\">'PRI-7'</span><span class=\"p\">,),</span> <span class=\"p\">(</span><span class=\"s1\">'PRI-17'</span><span class=\"p\">,)),</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tb</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">Substring</span><span class=\"p\">(</span><span class=\"s1\">'age'</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n<span class=\"n\">SELECT</span> <span class=\"n\">substring</span><span class=\"p\">(</span><span class=\"n\">age</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"n\">FROM</span> <span class=\"n\">zugh</span><span class=\"o\">.</span><span class=\"n\">users</span>\n</pre>\n<h2>Math</h2>\n<p>Some math functions are awailable in <code>zugh.query.math</code> module.</p>\n\n          </div>"}, "last_serial": 5612716, "releases": {"0.0.1b2": [{"comment_text": "", "digests": {"md5": "b196547d89f50d3ec67e4f7bb7e44a50", "sha256": "fc97ef9b452a5e143181e9d7bcad8ad0457f5fa1ac82ad2f15df4e00b5ee66f7"}, "downloads": -1, "filename": "zugh-0.0.1b2-py3-none-any.whl", "has_sig": false, "md5_digest": "b196547d89f50d3ec67e4f7bb7e44a50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19461, "upload_time": "2019-07-29T08:39:39", "upload_time_iso_8601": "2019-07-29T08:39:39.831126Z", "url": "https://files.pythonhosted.org/packages/bb/54/032066ecde760b73a18f1131f442122394caa007918baebd62ef5507eabb/zugh-0.0.1b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1c857f9b72c865ebd49764464824e31", "sha256": "57d31ea2f5fea2129ff57814f4dcb664bf1fa283dbf24291779b0afab95e2ead"}, "downloads": -1, "filename": "zugh-0.0.1b2.tar.gz", "has_sig": false, "md5_digest": "a1c857f9b72c865ebd49764464824e31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20627, "upload_time": "2019-07-29T08:39:42", "upload_time_iso_8601": "2019-07-29T08:39:42.150778Z", "url": "https://files.pythonhosted.org/packages/f0/d9/2b880ab730340068178bef768ed90e519e4978a794ff41e3177f23f25d4e/zugh-0.0.1b2.tar.gz", "yanked": false}], "0.0.1b3": [{"comment_text": "", "digests": {"md5": "cace88de3076797c31381280d1245f66", "sha256": "71596677773c280c09d452ea281311bcd4fb78344a3c57b12c6f6248f12de2d9"}, "downloads": -1, "filename": "zugh-0.0.1b3-py3-none-any.whl", "has_sig": false, "md5_digest": "cace88de3076797c31381280d1245f66", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19463, "upload_time": "2019-07-31T10:33:30", "upload_time_iso_8601": "2019-07-31T10:33:30.128303Z", "url": "https://files.pythonhosted.org/packages/b9/3a/75b39adc4bc3c7284ac5f1c833ded2db01bc5dea8999ea834d6bfdb30e71/zugh-0.0.1b3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e96b5a262a09523e69a8f36edf341fe2", "sha256": "84d9c5c02c6e12eac30cabab88f651b9d05bcc514d001d5c792a37b91607fb66"}, "downloads": -1, "filename": "zugh-0.0.1b3.tar.gz", "has_sig": false, "md5_digest": "e96b5a262a09523e69a8f36edf341fe2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20648, "upload_time": "2019-07-31T10:33:32", "upload_time_iso_8601": "2019-07-31T10:33:32.121273Z", "url": "https://files.pythonhosted.org/packages/97/48/6834ed6276036ef79928cac8e48cd3370550019d7877c117de2a1df349d3/zugh-0.0.1b3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cace88de3076797c31381280d1245f66", "sha256": "71596677773c280c09d452ea281311bcd4fb78344a3c57b12c6f6248f12de2d9"}, "downloads": -1, "filename": "zugh-0.0.1b3-py3-none-any.whl", "has_sig": false, "md5_digest": "cace88de3076797c31381280d1245f66", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19463, "upload_time": "2019-07-31T10:33:30", "upload_time_iso_8601": "2019-07-31T10:33:30.128303Z", "url": "https://files.pythonhosted.org/packages/b9/3a/75b39adc4bc3c7284ac5f1c833ded2db01bc5dea8999ea834d6bfdb30e71/zugh-0.0.1b3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e96b5a262a09523e69a8f36edf341fe2", "sha256": "84d9c5c02c6e12eac30cabab88f651b9d05bcc514d001d5c792a37b91607fb66"}, "downloads": -1, "filename": "zugh-0.0.1b3.tar.gz", "has_sig": false, "md5_digest": "e96b5a262a09523e69a8f36edf341fe2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20648, "upload_time": "2019-07-31T10:33:32", "upload_time_iso_8601": "2019-07-31T10:33:32.121273Z", "url": "https://files.pythonhosted.org/packages/97/48/6834ed6276036ef79928cac8e48cd3370550019d7877c117de2a1df349d3/zugh-0.0.1b3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:17 2020"}