{"info": {"author": "David Stanek", "author_email": "dstanek@dstanek.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Testing"], "description": "tox-run-command\n===============\n\nA tox plugin to run an arbitrary command in a tox managed virtualenv.\n\nExample:\n  ``tox -e py27 --run-command \"server --port 8080\"``\n\nIn the example tox will will run ``server --port 8080`` inside of the py27\nvirualenv.\n\nNotes:\n\n* Any env defined in your tox.ini will work\n* The env will be created if it doesn't exist (just like tox normally\n  does)\n* The commands from your tox.ini will not be run and instead the command\n  you wanted to run is run\n* `tox substitutions`_ will also work.\n  (e.g. ``tox -e py27 --run-command \"server --config={homedir}/server.conf\"``)\n\nWhy?\n----\n\nAlmost all of the projects I work on use `tox`_ for test automation. Many\nof those projects, one such example is `Keystone`_, carry custom Python\nand/or shell scripts to create virtualenvs to run server processes for\nmanual testing. Other projects advise the developer to create a tox\nvirtualenv by running ``tox -e py27 --notest`` and then running the\nserver from within that virtualenv like ``.tox/py27/bin/server --port\n8080``.\n\nBoth of those options suck. Since I couldn't find a tool that already existed\nto do this, I created one using the new `tox plugin API`_.\n\n.. _tox: https://testrun.org/tox/latest/\n.. _Keystone: http://docs.openstack.org/developer/keystone/\n.. _tox plugin API: https://testrun.org/tox/latest/plugins.html\n.. _tox substitutions: https://testrun.org/tox/latest/config.html#substitutions", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dstanek/tox-run-command", "keywords": null, "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "tox-run-command", "package_url": "https://pypi.org/project/tox-run-command/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tox-run-command/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dstanek/tox-run-command"}, "release_url": "https://pypi.org/project/tox-run-command/0.4/", "requires_dist": null, "requires_python": null, "summary": "tox plugin to run arbitrary commands in a virtualenv", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A tox plugin to run an arbitrary command in a tox managed virtualenv.</p>\n<dl>\n<dt>Example:</dt>\n<dd><tt>tox <span class=\"pre\">-e</span> py27 <span class=\"pre\">--run-command</span> \"server <span class=\"pre\">--port</span> 8080\"</tt></dd>\n</dl>\n<p>In the example tox will will run <tt>server <span class=\"pre\">--port</span> 8080</tt> inside of the py27\nvirualenv.</p>\n<p>Notes:</p>\n<ul>\n<li>Any env defined in your tox.ini will work</li>\n<li>The env will be created if it doesn\u2019t exist (just like tox normally\ndoes)</li>\n<li>The commands from your tox.ini will not be run and instead the command\nyou wanted to run is run</li>\n<li><a href=\"https://testrun.org/tox/latest/config.html#substitutions\" rel=\"nofollow\">tox substitutions</a> will also work.\n(e.g. <tt>tox <span class=\"pre\">-e</span> py27 <span class=\"pre\">--run-command</span> \"server <span class=\"pre\">--config={homedir}/server.conf\"</span></tt>)</li>\n</ul>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>Almost all of the projects I work on use <a href=\"https://testrun.org/tox/latest/\" rel=\"nofollow\">tox</a> for test automation. Many\nof those projects, one such example is <a href=\"http://docs.openstack.org/developer/keystone/\" rel=\"nofollow\">Keystone</a>, carry custom Python\nand/or shell scripts to create virtualenvs to run server processes for\nmanual testing. Other projects advise the developer to create a tox\nvirtualenv by running <tt>tox <span class=\"pre\">-e</span> py27 <span class=\"pre\">--notest</span></tt> and then running the\nserver from within that virtualenv like <tt>.tox/py27/bin/server <span class=\"pre\">--port</span>\n8080</tt>.</p>\n<p>Both of those options suck. Since I couldn\u2019t find a tool that already existed\nto do this, I created one using the new <a href=\"https://testrun.org/tox/latest/plugins.html\" rel=\"nofollow\">tox plugin API</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1994791, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5d0d2c88637cb606a55f6c793c7c053c", "sha256": "6fbf2592962654118be2f8d127c739ed76d15dda163c2fb7ce39fef8ef29c76a"}, "downloads": -1, "filename": "tox-run-command-0.1.tar.gz", "has_sig": false, "md5_digest": "5d0d2c88637cb606a55f6c793c7c053c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2275, "upload_time": "2015-08-25T20:44:43", "upload_time_iso_8601": "2015-08-25T20:44:43.295342Z", "url": "https://files.pythonhosted.org/packages/40/0c/0ecf37515230992a474f7d9fca6f66fdf226e1c4855874f7394231823e15/tox-run-command-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "baeec081064694bb4c6651aa4372457b", "sha256": "0f75635e102355f6a62b39ec06598fe4259ab3bc6bb71c230cd3ba8dcb7950f9"}, "downloads": -1, "filename": "tox-run-command-0.2.tar.gz", "has_sig": false, "md5_digest": "baeec081064694bb4c6651aa4372457b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2239, "upload_time": "2015-08-26T02:36:09", "upload_time_iso_8601": "2015-08-26T02:36:09.320318Z", "url": "https://files.pythonhosted.org/packages/5c/9d/1dac50855a19ad6715aaf1be80fe11d0b4e8afa1fcfd90fcf2a1d9ee85e9/tox-run-command-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "430e4803bb86bdd4650c677066194367", "sha256": "575d075835e54f03f683a10f345674ae1b38121b353d4124f605195177a39e0c"}, "downloads": -1, "filename": "tox-run-command-0.3.tar.gz", "has_sig": false, "md5_digest": "430e4803bb86bdd4650c677066194367", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2230, "upload_time": "2015-08-26T02:37:55", "upload_time_iso_8601": "2015-08-26T02:37:55.856307Z", "url": "https://files.pythonhosted.org/packages/3d/7f/c171a757898f942ddea03f5a1514e7ae48c43a6ab6828b3f91517ae7d0fd/tox-run-command-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "987ba1989d09a6af916f3b3de848fe69", "sha256": "5c5fe892f732d20276c8b2d29ce079bbbcadc153d696b31cdd8fb3edf5c29ec6"}, "downloads": -1, "filename": "tox-run-command-0.4.tar.gz", "has_sig": false, "md5_digest": "987ba1989d09a6af916f3b3de848fe69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2342, "upload_time": "2016-03-08T02:58:40", "upload_time_iso_8601": "2016-03-08T02:58:40.072430Z", "url": "https://files.pythonhosted.org/packages/0a/2f/1aa1b8edf308d6a62c1234759859fb10292e96595e4595cb47558347ed80/tox-run-command-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "987ba1989d09a6af916f3b3de848fe69", "sha256": "5c5fe892f732d20276c8b2d29ce079bbbcadc153d696b31cdd8fb3edf5c29ec6"}, "downloads": -1, "filename": "tox-run-command-0.4.tar.gz", "has_sig": false, "md5_digest": "987ba1989d09a6af916f3b3de848fe69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2342, "upload_time": "2016-03-08T02:58:40", "upload_time_iso_8601": "2016-03-08T02:58:40.072430Z", "url": "https://files.pythonhosted.org/packages/0a/2f/1aa1b8edf308d6a62c1234759859fb10292e96595e4595cb47558347ed80/tox-run-command-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:18 2020"}