{"info": {"author": "Alex Gaynor, Alessandro Dentella", "author_email": "sandro@e-den.it", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "jmb.filter\n=============\n\njmb.filter is a fork of django-filter_ whose main goal is to make \nlife easy integrating django_filter in the django admin interface \ncreating advanced search forms based on a description similar to \nsearch_list definition.\n\njmb.filter is a reusable Django application for allowing users to filter\nquerysets dynamically.\n\nDocumentation on thunder-site_.\n\nOriginal documentation on `read the docs`_\n\nRequirements\n------------\n\n* Python 2.7+\n* Django 1.4+\n\nInstallation\n------------\n\nInstall using pip::\n\n    pip install jmb.filter\n\nOr clone the repo and add to your PYTHONPATH::\n\n    hg clone https://hg@bitbucket.org/jumboteam/jmb.filters\n\n\nUsage\n-----\n\njmb.filter can be used for generating interfaces similar to the Django\nadmin's ``list_filter`` interface.  It has an API very similar to Django's\n``ModelForms``.  For example, if you had a Product model you could have a\nfilterset for it with the code::\n\n    import jmb.filters\n\n    class ProductFilter(jmb.filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ['name', 'price', 'manufacturer']\n\n\nAnd then in your view you could do::\n\n    def product_list(request):\n        filter = ProductFilter(request.GET, queryset=Product.objects.all())\n        return render_to_response('my_app/template.html', {'filter': filter})\n\nSupport\n-------\n\n\n.. _`read the docs`: https://django-filter.readthedocs.org/en/latest/\n.. _django-filter: https://pypi.python.org/pypi/django-filter\n.. _thunder-site: http://docs.thux.it/jmb.filters", "description_content_type": null, "docs_url": null, "download_url": "https://bitbucket.org/jumboteam/jmb.filters", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://docs.thux.it/jmb.filters", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "jmb.filters", "package_url": "https://pypi.org/project/jmb.filters/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/jmb.filters/", "project_urls": {"Download": "https://bitbucket.org/jumboteam/jmb.filters", "Homepage": "http://docs.thux.it/jmb.filters"}, "release_url": "https://pypi.org/project/jmb.filters/0.1.7/", "requires_dist": null, "requires_python": null, "summary": "jmb.filters is a reusable Django application for allowing users to filter querysets dynamically.", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>jmb.filter is a fork of <a href=\"https://pypi.python.org/pypi/django-filter\" rel=\"nofollow\">django-filter</a> whose main goal is to make\nlife easy integrating django_filter in the django admin interface\ncreating advanced search forms based on a description similar to\nsearch_list definition.</p>\n<p>jmb.filter is a reusable Django application for allowing users to filter\nquerysets dynamically.</p>\n<p>Documentation on <a href=\"http://docs.thux.it/jmb.filters\" rel=\"nofollow\">thunder-site</a>.</p>\n<p>Original documentation on <a href=\"https://django-filter.readthedocs.org/en/latest/\" rel=\"nofollow\">read the docs</a></p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7+</li>\n<li>Django 1.4+</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<pre>pip install jmb.filter\n</pre>\n<p>Or clone the repo and add to your PYTHONPATH:</p>\n<pre>hg clone https://hg@bitbucket.org/jumboteam/jmb.filters\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>jmb.filter can be used for generating interfaces similar to the Django\nadmin\u2019s <tt>list_filter</tt> interface.  It has an API very similar to Django\u2019s\n<tt>ModelForms</tt>.  For example, if you had a Product model you could have a\nfilterset for it with the code:</p>\n<pre>import jmb.filters\n\nclass ProductFilter(jmb.filters.FilterSet):\n    class Meta:\n        model = Product\n        fields = ['name', 'price', 'manufacturer']\n</pre>\n<p>And then in your view you could do:</p>\n<pre>def product_list(request):\n    filter = ProductFilter(request.GET, queryset=Product.objects.all())\n    return render_to_response('my_app/template.html', {'filter': filter})\n</pre>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n</div>\n\n          </div>"}, "last_serial": 1509977, "releases": {"0.1.6": [{"comment_text": "", "digests": {"md5": "f07e0ef386a05cb0b69b4fe3d35f1be6", "sha256": "12241d1e7b87f82f8c45cd370802549983e5d9cced3b10d3e8ed164755fe28a2"}, "downloads": -1, "filename": "jmb.filters-0.1.6.tar.gz", "has_sig": false, "md5_digest": "f07e0ef386a05cb0b69b4fe3d35f1be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 636876, "upload_time": "2015-04-16T22:42:59", "upload_time_iso_8601": "2015-04-16T22:42:59.591025Z", "url": "https://files.pythonhosted.org/packages/10/f6/d2a8998fb47d97ba4e5b300e442d896d4b2c700f4a2d2b45399020573bab/jmb.filters-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "7168ea049ea18d290984e55af3263180", "sha256": "378a0277effbc3ab4ee7d88f03b84ed8f1472df5f705b4f1b9439b67d41d5108"}, "downloads": -1, "filename": "jmb.filters-0.1.7.tar.gz", "has_sig": false, "md5_digest": "7168ea049ea18d290984e55af3263180", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 665991, "upload_time": "2015-04-17T22:49:25", "upload_time_iso_8601": "2015-04-17T22:49:25.830612Z", "url": "https://files.pythonhosted.org/packages/16/7c/a873cda59e003b45442df831e7e5e1f59c0449d4c0afee681367e7318a49/jmb.filters-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7168ea049ea18d290984e55af3263180", "sha256": "378a0277effbc3ab4ee7d88f03b84ed8f1472df5f705b4f1b9439b67d41d5108"}, "downloads": -1, "filename": "jmb.filters-0.1.7.tar.gz", "has_sig": false, "md5_digest": "7168ea049ea18d290984e55af3263180", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 665991, "upload_time": "2015-04-17T22:49:25", "upload_time_iso_8601": "2015-04-17T22:49:25.830612Z", "url": "https://files.pythonhosted.org/packages/16/7c/a873cda59e003b45442df831e7e5e1f59c0449d4c0afee681367e7318a49/jmb.filters-0.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:25 2020"}