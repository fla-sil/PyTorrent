{"info": {"author": "Leiden University Medical Center", "author_email": "sasc@lumc.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only"], "description": "# chunked_scatter\n\nThis tool takes a bed file or sequence dictionary as input and divides the\ncontigs/chromosomes into overlapping chunks of a given size. These chunks will\nthen be placed in new bed files, one chromosomes per file. Small chromosomes\nwill be put together to avoid the creation of thousands of files.\n\n## Installation\nInstall from github:\n- Clone the repository: `git clone https://github.com/biowdl/chunked-scatter.git`\n- Enter the repository: `cd chunked-scatter`\n- Install using pip: `pip install .`\n\n## Usage\n```\nchunked-scatter -p output_prefix -i input.bed\n```\nThe input is expected to end in `.bed` or `.dict`!\n\n| option | arguments | definition |\n|-|-|-|\n| -c | a number | The size of the chunks. |\n| -o | a number | The size of the overlap. |\n| -m | a number | The minimum number of bases to be put in a single output file, before a new scatter will be made. |\n\n## Examples\n### bed file\nGiven a bed file located at `/data/regions.bed`:\n```\nchr1\t100\t1000\nchr1\t2000\t16000\nchr2\t5000\t10000\n```\n\nThe command:\n```\nchunked-scatter -p /data/scatter_ -i /data/regions.bed -m 1000 -c 5000\n```\n\nWill produce the following two output files:\n- `/data/scatter_0.bed`:\n  ```\n  chr1\t100\t1000\n  chr1\t2000\t7000\n  chr1\t6850\t12000\n  chr1\t11850\t16000\n  ```\n- `/data/scatter_1.bed`:\n  ```\n  chr2\t5000\t10000\n  ```\n\n### dict file\nGiven a dict file located at `/data/ref.dict`:\n```\n@SQ\tSN:chr1\tLN:3000000\n@SQ SN:chr2 LN:500000\n```\n\nThe command:\n```\nchunked-scatter -p /data/scatter_ -i /data/regions.bed\n```\n\nWill produce the following output file at `/data/scatter_0.bed`:\n```\nchr1\t0\t1000000\nchr1\t999850\t2000000\nchr1\t1999850\t3000000\nchr2\t0\t500000\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/biowdl/chunked-scatter", "keywords": "bioinformatics", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "chunked-scatter", "package_url": "https://pypi.org/project/chunked-scatter/", "platform": "", "project_url": "https://pypi.org/project/chunked-scatter/", "project_urls": {"Homepage": "https://github.com/biowdl/chunked-scatter"}, "release_url": "https://pypi.org/project/chunked-scatter/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Chunk and scatter the regions in a bed or sequence dictfile", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>chunked_scatter</h1>\n<p>This tool takes a bed file or sequence dictionary as input and divides the\ncontigs/chromosomes into overlapping chunks of a given size. These chunks will\nthen be placed in new bed files, one chromosomes per file. Small chromosomes\nwill be put together to avoid the creation of thousands of files.</p>\n<h2>Installation</h2>\n<p>Install from github:</p>\n<ul>\n<li>Clone the repository: <code>git clone https://github.com/biowdl/chunked-scatter.git</code></li>\n<li>Enter the repository: <code>cd chunked-scatter</code></li>\n<li>Install using pip: <code>pip install .</code></li>\n</ul>\n<h2>Usage</h2>\n<pre><code>chunked-scatter -p output_prefix -i input.bed\n</code></pre>\n<p>The input is expected to end in <code>.bed</code> or <code>.dict</code>!</p>\n<table>\n<thead>\n<tr>\n<th>option</th>\n<th>arguments</th>\n<th>definition</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-c</td>\n<td>a number</td>\n<td>The size of the chunks.</td>\n</tr>\n<tr>\n<td>-o</td>\n<td>a number</td>\n<td>The size of the overlap.</td>\n</tr>\n<tr>\n<td>-m</td>\n<td>a number</td>\n<td>The minimum number of bases to be put in a single output file, before a new scatter will be made.</td>\n</tr></tbody></table>\n<h2>Examples</h2>\n<h3>bed file</h3>\n<p>Given a bed file located at <code>/data/regions.bed</code>:</p>\n<pre><code>chr1\t100\t1000\nchr1\t2000\t16000\nchr2\t5000\t10000\n</code></pre>\n<p>The command:</p>\n<pre><code>chunked-scatter -p /data/scatter_ -i /data/regions.bed -m 1000 -c 5000\n</code></pre>\n<p>Will produce the following two output files:</p>\n<ul>\n<li><code>/data/scatter_0.bed</code>:\n<pre><code>chr1\t100\t1000\nchr1\t2000\t7000\nchr1\t6850\t12000\nchr1\t11850\t16000\n</code></pre>\n</li>\n<li><code>/data/scatter_1.bed</code>:\n<pre><code>chr2\t5000\t10000\n</code></pre>\n</li>\n</ul>\n<h3>dict file</h3>\n<p>Given a dict file located at <code>/data/ref.dict</code>:</p>\n<pre><code>@SQ\tSN:chr1\tLN:3000000\n@SQ SN:chr2 LN:500000\n</code></pre>\n<p>The command:</p>\n<pre><code>chunked-scatter -p /data/scatter_ -i /data/regions.bed\n</code></pre>\n<p>Will produce the following output file at <code>/data/scatter_0.bed</code>:</p>\n<pre><code>chr1\t0\t1000000\nchr1\t999850\t2000000\nchr1\t1999850\t3000000\nchr2\t0\t500000\n</code></pre>\n\n          </div>"}, "last_serial": 5413922, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f60a2faf7ae95438452025f5d8afc72c", "sha256": "7e5f3af742d7e0fb97b29b9f3cd29342581e6f892c72d0bdfef80708220fd7f6"}, "downloads": -1, "filename": "chunked_scatter-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f60a2faf7ae95438452025f5d8afc72c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6665, "upload_time": "2019-06-18T08:03:21", "upload_time_iso_8601": "2019-06-18T08:03:21.163314Z", "url": "https://files.pythonhosted.org/packages/b7/be/d660f4764eff0bf54cc399b734044fb6d87559cd691ec68c6c792bbc04d8/chunked_scatter-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d04e79946424ee0e993d68abffedecc", "sha256": "694ad0dcb7a158d5bf8646e030d45a70fcf7aeb99b85f1b788d67aa762fa49cb"}, "downloads": -1, "filename": "chunked-scatter-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8d04e79946424ee0e993d68abffedecc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4689, "upload_time": "2019-06-18T08:03:23", "upload_time_iso_8601": "2019-06-18T08:03:23.301923Z", "url": "https://files.pythonhosted.org/packages/3a/cc/5e59938cfdcff3e833194e3b917a486a9a573f336b2ccf474c36f98a6ec9/chunked-scatter-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f60a2faf7ae95438452025f5d8afc72c", "sha256": "7e5f3af742d7e0fb97b29b9f3cd29342581e6f892c72d0bdfef80708220fd7f6"}, "downloads": -1, "filename": "chunked_scatter-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f60a2faf7ae95438452025f5d8afc72c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6665, "upload_time": "2019-06-18T08:03:21", "upload_time_iso_8601": "2019-06-18T08:03:21.163314Z", "url": "https://files.pythonhosted.org/packages/b7/be/d660f4764eff0bf54cc399b734044fb6d87559cd691ec68c6c792bbc04d8/chunked_scatter-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d04e79946424ee0e993d68abffedecc", "sha256": "694ad0dcb7a158d5bf8646e030d45a70fcf7aeb99b85f1b788d67aa762fa49cb"}, "downloads": -1, "filename": "chunked-scatter-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8d04e79946424ee0e993d68abffedecc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4689, "upload_time": "2019-06-18T08:03:23", "upload_time_iso_8601": "2019-06-18T08:03:23.301923Z", "url": "https://files.pythonhosted.org/packages/3a/cc/5e59938cfdcff3e833194e3b917a486a9a573f336b2ccf474c36f98a6ec9/chunked-scatter-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:26 2020"}