{"info": {"author": "Leon Weber <leon@leonweber.de>, Chris AtLee <chris@atlee.ca>", "author_email": "leon@leonweber.de", "bugtrack_url": null, "classifiers": [], "description": "simplepam\r\n=========\r\n\r\nAn interface to the Pluggable Authentication Modules (PAM) library on\r\nlinux, written in pure python (using ctypes)\r\n\r\nOverview\r\n--------\r\n\r\nThis module provides an ``authenticate`` function that allows the caller\r\nto authenticate a given username / password against the PAM system on\r\nLinux.\r\n\r\nUsage\r\n-----\r\n\r\nRun ``python3 setup.py install`` as root to install the module, then\r\nimport the ``authenticate`` function, and use it as follows:\r\n\r\n.. code:: python\r\n\r\n        from simplepam import authenticate\r\n        authenticate(username, password, service)\r\n\r\nThe full function signature is as follows:\r\n\r\n.. code:: python\r\n\r\n        authenticate(username, password, service='login', encoding='utf-8',\r\n                     resetcred=True)\r\n\r\nThe ``service`` argument specifies the PAM service to authenticate\r\nagainst. Defaults to ``login``.\r\n\r\n``username``, ``password`` and ``service`` can be given as strings or\r\nbytes. If they are strings, they will be encoded using the encoding\r\ngiven by the ``encoding`` parameter, or, if omitted, as UTF-8.\r\n\r\nThe function returns ``True`` if the authentication succeeds and returns\r\n``False`` if authentication fails (or if PAM returns an error (FIXME)).\r\n\r\nPython versions\r\n---------------\r\nThis module works with both Python 2 and Python 3.\r\n\r\nLicense\r\n-------\r\n\r\nThe `original python-pam module`_ was written by Chris AtLee, see the\r\noriginal copyright notice:\r\n\r\n::\r\n\r\n    Copyright (C) 2007-2009 Chris AtLee <chris@atlee.ca>.\r\n    Licensed under the MIT license. \r\n\r\nModifications 2013-2014 by Leon Weber leon@leonweber.de:\r\n\r\n* Ported to Python3\r\n* Add call to ``pam_end()``\r\n* Use ``ctypes.byref()`` instead of ``ctypes.pointer()`` to pass arguments by reference\r\n* Properly handle encoding of password, username and service (Patch by Sebastian Riese)\r\n* Add call to ``pam_reset()`` (Patch by Lertsenem)\r\n* Re-add Python2 support (Patch by Victor Stinner of eNovance)\r\n\r\nThis module is licensed under the `MIT license`_.\r\n\r\n.. _original python-pam module: http://atlee.ca/software/pam/\r\n.. _MIT license: http://www.opensource.org/licenses/mit-license.php", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/leonnnn/python3-simplepam", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "simplepam", "package_url": "https://pypi.org/project/simplepam/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/simplepam/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/leonnnn/python3-simplepam"}, "release_url": "https://pypi.org/project/simplepam/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "An interface to the Pluggable Authentication Modules (PAM) library on linux, written in pure python (using ctypes)", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An interface to the Pluggable Authentication Modules (PAM) library on\nlinux, written in pure python (using ctypes)</p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>This module provides an <tt>authenticate</tt> function that allows the caller\nto authenticate a given username / password against the PAM system on\nLinux.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Run <tt>python3 setup.py install</tt> as root to install the module, then\nimport the <tt>authenticate</tt> function, and use it as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simplepam</span> <span class=\"kn\">import</span> <span class=\"n\">authenticate</span>\n<span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">service</span><span class=\"p\">)</span>\n</pre>\n<p>The full function signature is as follows:</p>\n<pre><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"p\">,</span> <span class=\"n\">service</span><span class=\"o\">=</span><span class=\"s1\">'login'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf-8'</span><span class=\"p\">,</span>\n             <span class=\"n\">resetcred</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The <tt>service</tt> argument specifies the PAM service to authenticate\nagainst. Defaults to <tt>login</tt>.</p>\n<p><tt>username</tt>, <tt>password</tt> and <tt>service</tt> can be given as strings or\nbytes. If they are strings, they will be encoded using the encoding\ngiven by the <tt>encoding</tt> parameter, or, if omitted, as UTF-8.</p>\n<p>The function returns <tt>True</tt> if the authentication succeeds and returns\n<tt>False</tt> if authentication fails (or if PAM returns an error (FIXME)).</p>\n</div>\n<div id=\"python-versions\">\n<h2>Python versions</h2>\n<p>This module works with both Python 2 and Python 3.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The <a href=\"http://atlee.ca/software/pam/\" rel=\"nofollow\">original python-pam module</a> was written by Chris AtLee, see the\noriginal copyright notice:</p>\n<pre>Copyright (C) 2007-2009 Chris AtLee &lt;chris@atlee.ca&gt;.\nLicensed under the MIT license.\n</pre>\n<p>Modifications 2013-2014 by Leon Weber <a href=\"mailto:leon%40leonweber.de\">leon<span>@</span>leonweber<span>.</span>de</a>:</p>\n<ul>\n<li>Ported to Python3</li>\n<li>Add call to <tt>pam_end()</tt></li>\n<li>Use <tt>ctypes.byref()</tt> instead of <tt>ctypes.pointer()</tt> to pass arguments by reference</li>\n<li>Properly handle encoding of password, username and service (Patch by Sebastian Riese)</li>\n<li>Add call to <tt>pam_reset()</tt> (Patch by Lertsenem)</li>\n<li>Re-add Python2 support (Patch by Victor Stinner of eNovance)</li>\n</ul>\n<p>This module is licensed under the <a href=\"http://www.opensource.org/licenses/mit-license.php\" rel=\"nofollow\">MIT license</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1040338, "releases": {"0.1.5": [{"comment_text": "", "digests": {"md5": "5454db514625bbfa3faed2277754c92a", "sha256": "9b4dd50da41a04dd6afff932b8b7e33c015af05beb3b3e5bcd323b64c2390a5f"}, "downloads": -1, "filename": "simplepam-0.1.5.tar.gz", "has_sig": false, "md5_digest": "5454db514625bbfa3faed2277754c92a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2442, "upload_time": "2014-03-25T11:08:32", "upload_time_iso_8601": "2014-03-25T11:08:32.940321Z", "url": "https://files.pythonhosted.org/packages/f5/86/6e4446ea0b6a244a27d4cb806936bc00d349183669754287746ccf3a6c75/simplepam-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5454db514625bbfa3faed2277754c92a", "sha256": "9b4dd50da41a04dd6afff932b8b7e33c015af05beb3b3e5bcd323b64c2390a5f"}, "downloads": -1, "filename": "simplepam-0.1.5.tar.gz", "has_sig": false, "md5_digest": "5454db514625bbfa3faed2277754c92a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2442, "upload_time": "2014-03-25T11:08:32", "upload_time_iso_8601": "2014-03-25T11:08:32.940321Z", "url": "https://files.pythonhosted.org/packages/f5/86/6e4446ea0b6a244a27d4cb806936bc00d349183669754287746ccf3a6c75/simplepam-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:25 2020"}