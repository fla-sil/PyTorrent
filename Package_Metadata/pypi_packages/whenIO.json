{"info": {"author": "Roy Hyunjin Han", "author_email": "starsareblueandfaraway@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python"], "description": "whenIO\n======\nHere are some methods for formatting and parsing friendly timestamps.\n\n\nInstallation\n------------\n::\n\n    easy_install -U whenIO\n\n\nUsage\n-----\n::\n\n    >>> import whenIO\n    >>> import datetime\n    >>> w = whenIO.WhenIO(timezone='US/Eastern')\n\n    >>> w.format(datetime.datetime.now(), fromUTC=False)\n    'Today 2:30pm'\n    >>> w.format(datetime.datetime.utcnow())\n    'Today 2:30pm'\n    >>> w.format(datetime.datetime.utcnow(), forceDate=True)\n    'Today 3/10/2013 2:30pm'\n    >>> date1 = datetime.datetime(2000, 1, 1, 0, 0)\n    >>> date2 = datetime.datetime(2000, 1, 1, 1, 0)\n    >>> w.format([date1, date2], fromUTC=False)\n    '1/1/2000 12am 1am'\n\n    >>> w.parse('10am', toUTC=False)[0]\n    [datetime.datetime(2013, 3, 10, 10, 0)]\n    >>> w.parse('today 10am', toUTC=False)[0]\n    [datetime.datetime(2013, 3, 10, 10, 0)]\n    >>> w.parse('tom 8pm', toUTC=False)[0]\n    [datetime.datetime(2013, 3, 11, 20, 0)]\n    >>> w.parse('mon 10am 12pm', toUTC=False)[0]\n    [datetime.datetime(2013, 3, 11, 10, 0), \n     datetime.datetime(2013, 3, 11, 12, 0)]\n\n    >>> rdelta = whenIO.parse_duration('111 weeks')\n    >>> whenIO.format_duration(rdelta)\n    '2 years 3 months 3 weeks'\n    >>> whenIO.format_duration(rdelta, precision=2, style='abbreviations')\n    '2 yrs 4 mos'\n\n\n1.5\n---\n- Added unit abbreviations and letters to parse_duration(), format_duration()\n- Added control over rounding behavior to format_duration()\n- Added microseconds to format_duration() thanks to `Javier Ruere <https://github.com/jruere>`_\n\n1.4\n---\n- Added forceDate to format(), format_date()\n- Replaced withStartDate to omitStartDate\n\n1.3\n---\n- Changed constructor to use timezones from pytz and tzlocal\n- Added weeks to format_duration()\n- Added withLeadingZero to format(), format_date(), format_time()\n- Added withStartDate to format()\n- Removed parse_offset(), format_offset()\n\n1.2\n---\n- Removed python-dateutil==1.5 requirement\n- Restored test coverage to 100%\n\n1.1\n---\n- Added format_duration() for formatting relativedelta objects\n- Added parse_duration() for parsing text into relativedelta objects\n\n1.0\n---\n- Expanded test coverage to 100%", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/invisibleroads/whenIO", "keywords": "datetime time", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "whenIO", "package_url": "https://pypi.org/project/whenIO/", "platform": "", "project_url": "https://pypi.org/project/whenIO/", "project_urls": {"Homepage": "https://github.com/invisibleroads/whenIO"}, "release_url": "https://pypi.org/project/whenIO/1.5.2/", "requires_dist": null, "requires_python": "", "summary": "Methods for formatting and parsing friendly timestamps", "version": "1.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Here are some methods for formatting and parsing friendly timestamps.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>easy_install -U whenIO\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>&gt;&gt;&gt; import whenIO\n&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; w = whenIO.WhenIO(timezone='US/Eastern')\n\n&gt;&gt;&gt; w.format(datetime.datetime.now(), fromUTC=False)\n'Today 2:30pm'\n&gt;&gt;&gt; w.format(datetime.datetime.utcnow())\n'Today 2:30pm'\n&gt;&gt;&gt; w.format(datetime.datetime.utcnow(), forceDate=True)\n'Today 3/10/2013 2:30pm'\n&gt;&gt;&gt; date1 = datetime.datetime(2000, 1, 1, 0, 0)\n&gt;&gt;&gt; date2 = datetime.datetime(2000, 1, 1, 1, 0)\n&gt;&gt;&gt; w.format([date1, date2], fromUTC=False)\n'1/1/2000 12am 1am'\n\n&gt;&gt;&gt; w.parse('10am', toUTC=False)[0]\n[datetime.datetime(2013, 3, 10, 10, 0)]\n&gt;&gt;&gt; w.parse('today 10am', toUTC=False)[0]\n[datetime.datetime(2013, 3, 10, 10, 0)]\n&gt;&gt;&gt; w.parse('tom 8pm', toUTC=False)[0]\n[datetime.datetime(2013, 3, 11, 20, 0)]\n&gt;&gt;&gt; w.parse('mon 10am 12pm', toUTC=False)[0]\n[datetime.datetime(2013, 3, 11, 10, 0),\n datetime.datetime(2013, 3, 11, 12, 0)]\n\n&gt;&gt;&gt; rdelta = whenIO.parse_duration('111 weeks')\n&gt;&gt;&gt; whenIO.format_duration(rdelta)\n'2 years 3 months 3 weeks'\n&gt;&gt;&gt; whenIO.format_duration(rdelta, precision=2, style='abbreviations')\n'2 yrs 4 mos'\n</pre>\n</div>\n<div id=\"id1\">\n<h2>1.5</h2>\n<ul>\n<li>Added unit abbreviations and letters to parse_duration(), format_duration()</li>\n<li>Added control over rounding behavior to format_duration()</li>\n<li>Added microseconds to format_duration() thanks to <a href=\"https://github.com/jruere\" rel=\"nofollow\">Javier Ruere</a></li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>1.4</h2>\n<ul>\n<li>Added forceDate to format(), format_date()</li>\n<li>Replaced withStartDate to omitStartDate</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>1.3</h2>\n<ul>\n<li>Changed constructor to use timezones from pytz and tzlocal</li>\n<li>Added weeks to format_duration()</li>\n<li>Added withLeadingZero to format(), format_date(), format_time()</li>\n<li>Added withStartDate to format()</li>\n<li>Removed parse_offset(), format_offset()</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>1.2</h2>\n<ul>\n<li>Removed python-dateutil==1.5 requirement</li>\n<li>Restored test coverage to 100%</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>1.1</h2>\n<ul>\n<li>Added format_duration() for formatting relativedelta objects</li>\n<li>Added parse_duration() for parsing text into relativedelta objects</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>1.0</h2>\n<ul>\n<li>Expanded test coverage to 100%</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3366506, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "906255740714fefffc04d054348aeef2", "sha256": "d80901b600a5fa39a7d1303f7f10e090c11f0a0e7cbd451577fb9272ad410230"}, "downloads": -1, "filename": "whenIO-1.0.tar.gz", "has_sig": false, "md5_digest": "906255740714fefffc04d054348aeef2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5169, "upload_time": "2011-04-24T22:36:08", "upload_time_iso_8601": "2011-04-24T22:36:08.877391Z", "url": "https://files.pythonhosted.org/packages/b7/32/549f0b763067fd43f7d559b4af61877f81ac8c88422f7a7f845babae3fc6/whenIO-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "fcd66deb5663e06153a0c28355576e65", "sha256": "51d7636cb8ea9347c88e13724188a27fbcc9e286dbb59777b2c008bd4ffb0b28"}, "downloads": -1, "filename": "whenIO-1.1.tar.gz", "has_sig": false, "md5_digest": "fcd66deb5663e06153a0c28355576e65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6031, "upload_time": "2011-08-26T20:13:50", "upload_time_iso_8601": "2011-08-26T20:13:50.692049Z", "url": "https://files.pythonhosted.org/packages/2a/33/31bae177d982a956c61a225553c7a7afb170c420a7c1e56bf64e03121465/whenIO-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "7657ca18d2c205be415d280d8d3aa3de", "sha256": "2eb3057e30dd3ac4ce33a90eefe96d8dfbd3795864a6ef80d6c08f6431ad6f95"}, "downloads": -1, "filename": "whenIO-1.2.tar.gz", "has_sig": false, "md5_digest": "7657ca18d2c205be415d280d8d3aa3de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6033, "upload_time": "2012-06-19T10:20:15", "upload_time_iso_8601": "2012-06-19T10:20:15.825834Z", "url": "https://files.pythonhosted.org/packages/d2/86/24757995bada29d774bd6a3911690c00f773922677cb7ca6bf7d251c4941/whenIO-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "58703275a6b4592b87e401994a5f9574", "sha256": "b789ce76b6a425a0551197f5e4fe11982cf4960dd100bfc954d84b9830376491"}, "downloads": -1, "filename": "whenIO-1.3.tar.gz", "has_sig": false, "md5_digest": "58703275a6b4592b87e401994a5f9574", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5818, "upload_time": "2013-03-11T08:26:50", "upload_time_iso_8601": "2013-03-11T08:26:50.947903Z", "url": "https://files.pythonhosted.org/packages/82/7b/bb8048ca8fd07c13847b8471be32979ee4daacac68b30bac270a8c7b3c39/whenIO-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "234f3fe0d3044bf1e84f5791dd548bbb", "sha256": "fe5024ba55bdef679d45a3c6ae4389b354cc11afbff968977baf441b2ad33754"}, "downloads": -1, "filename": "whenIO-1.4.tar.gz", "has_sig": false, "md5_digest": "234f3fe0d3044bf1e84f5791dd548bbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5842, "upload_time": "2013-03-18T15:30:24", "upload_time_iso_8601": "2013-03-18T15:30:24.671809Z", "url": "https://files.pythonhosted.org/packages/85/bf/6ac07a909a6663019c358676daac8d76f89be044bf150a029adb8efb8464/whenIO-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "8f5f6b35236d08f54551c14c5a9adfca", "sha256": "51bec1eaa3c2664f7a3d82a4e0aa7079775f47e3faed3e98e55531c8434dfd7d"}, "downloads": -1, "filename": "whenIO-1.5.tar.gz", "has_sig": false, "md5_digest": "8f5f6b35236d08f54551c14c5a9adfca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6497, "upload_time": "2013-05-13T07:20:30", "upload_time_iso_8601": "2013-05-13T07:20:30.129174Z", "url": "https://files.pythonhosted.org/packages/18/ab/d304cf2a6d408a0e7788592de0711bf40f4ad51757b11df35159d0f73e7f/whenIO-1.5.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "bdea883d42496366c83b5cb232f1dff9", "sha256": "83959a445c5cd95ef7bee40d5e943d51a6feeddef247e766376c86e2be8b7e36"}, "downloads": -1, "filename": "whenIO-1.5.1.tar.gz", "has_sig": false, "md5_digest": "bdea883d42496366c83b5cb232f1dff9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6520, "upload_time": "2013-11-28T23:33:13", "upload_time_iso_8601": "2013-11-28T23:33:13.701673Z", "url": "https://files.pythonhosted.org/packages/b2/bb/c76dfbb93fd6319489885af8c7ceaffe2ace5f70bb4b11fb232c0a6f8d30/whenIO-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "d4bd1247b5ece32c97d053e030c2c190", "sha256": "df02aa62793e278af99c45cbeff6158409b4aea978b6f9cb33f5112a5942e8a0"}, "downloads": -1, "filename": "whenIO-1.5.2.tar.gz", "has_sig": false, "md5_digest": "d4bd1247b5ece32c97d053e030c2c190", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6567, "upload_time": "2017-11-27T02:28:59", "upload_time_iso_8601": "2017-11-27T02:28:59.800575Z", "url": "https://files.pythonhosted.org/packages/e9/ea/1167f413904d36811a9d9132b5ad40c1998d0bc00c5c9c2cec3c88619ce7/whenIO-1.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d4bd1247b5ece32c97d053e030c2c190", "sha256": "df02aa62793e278af99c45cbeff6158409b4aea978b6f9cb33f5112a5942e8a0"}, "downloads": -1, "filename": "whenIO-1.5.2.tar.gz", "has_sig": false, "md5_digest": "d4bd1247b5ece32c97d053e030c2c190", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6567, "upload_time": "2017-11-27T02:28:59", "upload_time_iso_8601": "2017-11-27T02:28:59.800575Z", "url": "https://files.pythonhosted.org/packages/e9/ea/1167f413904d36811a9d9132b5ad40c1998d0bc00c5c9c2cec3c88619ce7/whenIO-1.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:29:46 2020"}