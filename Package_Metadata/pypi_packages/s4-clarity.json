{"info": {"author": "Semaphore Solutions", "author_email": "info@semaphoresolutions.ca", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: PyPy"], "description": "==================\nS4-Clarity Library\n==================\n\n\n.. image:: https://travis-ci.com/SemaphoreSolutions/s4-clarity-lib.svg?branch=master\n    :target: https://travis-ci.com/SemaphoreSolutions/s4-clarity-lib\n\n\nUsed in numerous labs around the world, the S4-Clarity library provides an easy-to-use integration with the BaseSpace Clarity LIMS API. The package includes:\n   - Classes representing familiar Clarity API entities that provide read-write access to most properties.\n   - Helper methods that simplify common operations.\n   - Base classes for scripts that integrate with Clarity: EPPs, DSAs, and shell scripts.\n   - Utilities that help with Clarity-related tasks, such as managing config slices, or automating the completion of a Step.\n\nThe S4-Clarity library lets developers interact with the Clarity API in fewer lines of code. With HTTP and XML boilerplate out of the way, you'll have your integration built in no time at all.\n\n\n.. code-block:: python\n\n    from s4.clarity.scripts import TriggeredStepEPP\n\n    LibraryVolume = 2.0\n    MolWeightBasePair = 660 * 1e6  # micrograms / mol\n    AssumedBasePairs = 400.0\n    TargetMolarity = 4.0\n    Overage = 4\n\n\n    class Normalization (TriggeredStepEPP):\n        def on_record_details_enter(self):\n            self.prefetch(self.PREFETCH_INPUTS, self.PREFETCH_OUTPUTS)\n\n            for iomap in self.step.details.iomaps:\n                library_concentration = iomap.input[\"Concentration\"]\n                library_molarity = library_concentration / (AssumedBasePairs * MolWeightBasePair)\n                iomap.output[\"Concentration\"] = library_concentration\n                iomap.output[\"Molarity (nM)\"] = library_molarity\n                iomap.output[\"Library Vol (uL)\"] = LibraryVolume\n                iomap.output[\"Tris HCl (uL)\"] = LibraryVolume * (library_molarity / TargetMolarity - 1)\n\n            self.lims.artifacts.batch_update(self.step.details.outputs)\n            self.step.details.commit()\n\n\n    if __name__ == \"__main__\":\n        Normalization.main()\n\nDocumentation\n-------------\nTo build the documentation, run ``make html`` from the docs directory.\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SemaphoreSolutions/s4-clarity-lib", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "s4-clarity", "package_url": "https://pypi.org/project/s4-clarity/", "platform": "", "project_url": "https://pypi.org/project/s4-clarity/", "project_urls": {"Homepage": "https://github.com/SemaphoreSolutions/s4-clarity-lib"}, "release_url": "https://pypi.org/project/s4-clarity/1.0.0/", "requires_dist": ["requests", "argparse", "python-dateutil", "six", "future", "typing"], "requires_python": ">=2.7", "summary": "A general purpose library for interacting with Clarity LIMS", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.com/SemaphoreSolutions/s4-clarity-lib\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/SemaphoreSolutions/s4-clarity-lib.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91011dce35027b664c5da18e47da6eb8e4201c74/68747470733a2f2f7472617669732d63692e636f6d2f53656d6170686f7265536f6c7574696f6e732f73342d636c61726974792d6c69622e7376673f6272616e63683d6d6173746572\"></a>\n<dl>\n<dt>Used in numerous labs around the world, the S4-Clarity library provides an easy-to-use integration with the BaseSpace Clarity LIMS API. The package includes:</dt>\n<dd><ul>\n<li>Classes representing familiar Clarity API entities that provide read-write access to most properties.</li>\n<li>Helper methods that simplify common operations.</li>\n<li>Base classes for scripts that integrate with Clarity: EPPs, DSAs, and shell scripts.</li>\n<li>Utilities that help with Clarity-related tasks, such as managing config slices, or automating the completion of a Step.</li>\n</ul>\n</dd>\n</dl>\n<p>The S4-Clarity library lets developers interact with the Clarity API in fewer lines of code. With HTTP and XML boilerplate out of the way, you\u2019ll have your integration built in no time at all.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">s4.clarity.scripts</span> <span class=\"kn\">import</span> <span class=\"n\">TriggeredStepEPP</span>\n\n<span class=\"n\">LibraryVolume</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>\n<span class=\"n\">MolWeightBasePair</span> <span class=\"o\">=</span> <span class=\"mi\">660</span> <span class=\"o\">*</span> <span class=\"mf\">1e6</span>  <span class=\"c1\"># micrograms / mol</span>\n<span class=\"n\">AssumedBasePairs</span> <span class=\"o\">=</span> <span class=\"mf\">400.0</span>\n<span class=\"n\">TargetMolarity</span> <span class=\"o\">=</span> <span class=\"mf\">4.0</span>\n<span class=\"n\">Overage</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Normalization</span> <span class=\"p\">(</span><span class=\"n\">TriggeredStepEPP</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_record_details_enter</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prefetch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PREFETCH_INPUTS</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">PREFETCH_OUTPUTS</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">iomap</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"o\">.</span><span class=\"n\">iomaps</span><span class=\"p\">:</span>\n            <span class=\"n\">library_concentration</span> <span class=\"o\">=</span> <span class=\"n\">iomap</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">[</span><span class=\"s2\">\"Concentration\"</span><span class=\"p\">]</span>\n            <span class=\"n\">library_molarity</span> <span class=\"o\">=</span> <span class=\"n\">library_concentration</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"n\">AssumedBasePairs</span> <span class=\"o\">*</span> <span class=\"n\">MolWeightBasePair</span><span class=\"p\">)</span>\n            <span class=\"n\">iomap</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s2\">\"Concentration\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">library_concentration</span>\n            <span class=\"n\">iomap</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s2\">\"Molarity (nM)\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">library_molarity</span>\n            <span class=\"n\">iomap</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s2\">\"Library Vol (uL)\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">LibraryVolume</span>\n            <span class=\"n\">iomap</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">[</span><span class=\"s2\">\"Tris HCl (uL)\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">LibraryVolume</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">library_molarity</span> <span class=\"o\">/</span> <span class=\"n\">TargetMolarity</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">lims</span><span class=\"o\">.</span><span class=\"n\">artifacts</span><span class=\"o\">.</span><span class=\"n\">batch_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"o\">.</span><span class=\"n\">outputs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"o\">.</span><span class=\"n\">commit</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">Normalization</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>To build the documentation, run <tt>make html</tt> from the docs directory.</p>\n</div>\n\n          </div>"}, "last_serial": 5119571, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "86b0edaf3924265c7af45618b1d3b17d", "sha256": "a1614f912db7b25405378b6c5813693d1a7db1781d77030370e234890b508800"}, "downloads": -1, "filename": "s4_clarity-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "86b0edaf3924265c7af45618b1d3b17d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 89114, "upload_time": "2019-04-09T16:13:22", "upload_time_iso_8601": "2019-04-09T16:13:22.502602Z", "url": "https://files.pythonhosted.org/packages/40/e7/f35bdd4be47093ab1f121ccd10def5d947e6336cbe0aa4f9dceb6ca64527/s4_clarity-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f35f2905073f3638367a5f94024d295", "sha256": "c503db8bb772a3e0fee8b64d203fe81f892b8abcd38ffd9eda17e02e14e6fbb8"}, "downloads": -1, "filename": "s4-clarity-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1f35f2905073f3638367a5f94024d295", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 64611, "upload_time": "2019-04-09T16:13:24", "upload_time_iso_8601": "2019-04-09T16:13:24.706890Z", "url": "https://files.pythonhosted.org/packages/ca/a6/15811ae2d49be55805eb68370bb82b9f6311d7ca6a782586d73aa2c4b160/s4-clarity-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86b0edaf3924265c7af45618b1d3b17d", "sha256": "a1614f912db7b25405378b6c5813693d1a7db1781d77030370e234890b508800"}, "downloads": -1, "filename": "s4_clarity-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "86b0edaf3924265c7af45618b1d3b17d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 89114, "upload_time": "2019-04-09T16:13:22", "upload_time_iso_8601": "2019-04-09T16:13:22.502602Z", "url": "https://files.pythonhosted.org/packages/40/e7/f35bdd4be47093ab1f121ccd10def5d947e6336cbe0aa4f9dceb6ca64527/s4_clarity-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f35f2905073f3638367a5f94024d295", "sha256": "c503db8bb772a3e0fee8b64d203fe81f892b8abcd38ffd9eda17e02e14e6fbb8"}, "downloads": -1, "filename": "s4-clarity-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1f35f2905073f3638367a5f94024d295", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 64611, "upload_time": "2019-04-09T16:13:24", "upload_time_iso_8601": "2019-04-09T16:13:24.706890Z", "url": "https://files.pythonhosted.org/packages/ca/a6/15811ae2d49be55805eb68370bb82b9f6311d7ca6a782586d73aa2c4b160/s4-clarity-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:32 2020"}