{"info": {"author": "Alec Thomas", "author_email": "alec@swapoff.org", "bugtrack_url": null, "classifiers": [], "description": "Lightweight Aspect-oriented Module for Python\n=============================================\nHooks advice to a function or method.\n\nadvise() is a decorator that takes a set of functions or methods and injects\nthe decorated function in their place. There is no concept of before/after\ncallbacks. Instead, the intercepting function is responsible for calling (or\nnot) the intercepted function.\n\nThe \"classic\" logging example::\n\n  class A(object):\n    def a_function(self):\n      print 'a_function()'\n\n  @advise(A.a_function)\n  def logit(on, next, *args, **kwargs):\n    logging.debug('%r.%r(%r, %r)', on, next, args, kwargs)\n    return next(*args, **kwargs)\n\nSee the function documentation for more information.", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/pypi/aspect", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/alecthomas/aspect", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "aspect", "package_url": "https://pypi.org/project/aspect/", "platform": "any", "project_url": "https://pypi.org/project/aspect/", "project_urls": {"Download": "http://pypi.python.org/pypi/aspect", "Homepage": "http://github.com/alecthomas/aspect"}, "release_url": "https://pypi.org/project/aspect/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Lightweight Aspect-oriented Module for Python", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Hooks advice to a function or method.</p>\n<p>advise() is a decorator that takes a set of functions or methods and injects\nthe decorated function in their place. There is no concept of before/after\ncallbacks. Instead, the intercepting function is responsible for calling (or\nnot) the intercepted function.</p>\n<p>The \u201cclassic\u201d logging example:</p>\n<pre>class A(object):\n  def a_function(self):\n    print 'a_function()'\n\n@advise(A.a_function)\ndef logit(on, next, *args, **kwargs):\n  logging.debug('%r.%r(%r, %r)', on, next, args, kwargs)\n  return next(*args, **kwargs)\n</pre>\n<p>See the function documentation for more information.</p>\n\n          </div>"}, "last_serial": 479835, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Thu May  7 18:16:57 2020"}