{"info": {"author": "portasynthinca3", "author_email": "portasynthinca3@gmail.com", "bugtrack_url": null, "classifiers": ["License :: Freeware", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ppfun\nppfun allows you to use the PixelPlanet.Fun's (hence the name) API in your Python code. I personally didn't come up with any use case besides auto-drawing bots. But you may. Please e-mail me if you come up with any idea, I will truly be interested.\n\nExample code:\n```python\n# import the library\nimport ppfun\n\n# create an API object\npp = ppfun.PPFun_api()\n# print the list of available canvases\nprint('---------')\nprint('Canvases:')\nfor c in pp.list_canv():\n    print(c['title'] + '\\t\\t' +\n          c['description'] + '\\t\\t' +\n          str(c['size']) + 'x' + str(c['size']) + '\\t\\t' +\n          '(' + c['identifier'] + ')')\nprint('---------')\n# get the main canvas (Earth)\ncanv = pp.get_canv('d')\n# print the approximation of the lime color for this canvas\nprint('Lime color ID: ' + str(canv.approx_color((0, 255, 0))))\n# set a pixel at (-1532, -550) and print the cooldown time\ncanv.set_pixel((-1532, -550), canv.approx_color((0, 255, 0)))\nprint('Cooldown after setting the pixel: ' + str(canv.remaining_cooldown()))\n```\n# installation\n`pip install ppfun`\n\n# documentation\n## PPFun_api class\nThis is where the journey starts. You create a client by creating an instance of this class. The library then fetches some data from the server.\nIt is available through these functions:\n* `list_canv()` - returns a list of canvas descriptors. Each descriptor is a dictionary that contains the `title`, `description`, `size` and `identifier` keys\n* `get_canv(ident)` - returns a canvas object of the canvas with a specific identifier\n## PPFun_canv class\nThis class contains all the functions you need to create your masterpiece. Here they are:\n* `approx_color(rgb_tuple)` - returns a color index that approximates the given color the most\n* `set_pixel(pos_tuple, color_index)` - places a pixel on the map. Throws an exception on error, returns True on success\n* `remaining_cooldown()` - returns the remaining cooldown in seconds\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/portasynthinca3/ppfun", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ppfun", "package_url": "https://pypi.org/project/ppfun/", "platform": "", "project_url": "https://pypi.org/project/ppfun/", "project_urls": {"Homepage": "https://github.com/portasynthinca3/ppfun"}, "release_url": "https://pypi.org/project/ppfun/1.0.5/", "requires_dist": ["requests"], "requires_python": ">=3.6", "summary": "Allows you to use the PixelPlanet.Fun API", "version": "1.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ppfun</h1>\n<p>ppfun allows you to use the PixelPlanet.Fun's (hence the name) API in your Python code. I personally didn't come up with any use case besides auto-drawing bots. But you may. Please e-mail me if you come up with any idea, I will truly be interested.</p>\n<p>Example code:</p>\n<pre><span class=\"c1\"># import the library</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ppfun</span>\n\n<span class=\"c1\"># create an API object</span>\n<span class=\"n\">pp</span> <span class=\"o\">=</span> <span class=\"n\">ppfun</span><span class=\"o\">.</span><span class=\"n\">PPFun_api</span><span class=\"p\">()</span>\n<span class=\"c1\"># print the list of available canvases</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'---------'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Canvases:'</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">pp</span><span class=\"o\">.</span><span class=\"n\">list_canv</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\t\\t</span><span class=\"s1\">'</span> <span class=\"o\">+</span>\n          <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s1\">'description'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\t\\t</span><span class=\"s1\">'</span> <span class=\"o\">+</span>\n          <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s1\">'size'</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s1\">'x'</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s1\">'size'</span><span class=\"p\">])</span> <span class=\"o\">+</span> <span class=\"s1\">'</span><span class=\"se\">\\t\\t</span><span class=\"s1\">'</span> <span class=\"o\">+</span>\n          <span class=\"s1\">'('</span> <span class=\"o\">+</span> <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"s1\">'identifier'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"s1\">')'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'---------'</span><span class=\"p\">)</span>\n<span class=\"c1\"># get the main canvas (Earth)</span>\n<span class=\"n\">canv</span> <span class=\"o\">=</span> <span class=\"n\">pp</span><span class=\"o\">.</span><span class=\"n\">get_canv</span><span class=\"p\">(</span><span class=\"s1\">'d'</span><span class=\"p\">)</span>\n<span class=\"c1\"># print the approximation of the lime color for this canvas</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Lime color ID: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">canv</span><span class=\"o\">.</span><span class=\"n\">approx_color</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))))</span>\n<span class=\"c1\"># set a pixel at (-1532, -550) and print the cooldown time</span>\n<span class=\"n\">canv</span><span class=\"o\">.</span><span class=\"n\">set_pixel</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1532</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">550</span><span class=\"p\">),</span> <span class=\"n\">canv</span><span class=\"o\">.</span><span class=\"n\">approx_color</span><span class=\"p\">((</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Cooldown after setting the pixel: '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">canv</span><span class=\"o\">.</span><span class=\"n\">remaining_cooldown</span><span class=\"p\">()))</span>\n</pre>\n<h1>installation</h1>\n<p><code>pip install ppfun</code></p>\n<h1>documentation</h1>\n<h2>PPFun_api class</h2>\n<p>This is where the journey starts. You create a client by creating an instance of this class. The library then fetches some data from the server.\nIt is available through these functions:</p>\n<ul>\n<li><code>list_canv()</code> - returns a list of canvas descriptors. Each descriptor is a dictionary that contains the <code>title</code>, <code>description</code>, <code>size</code> and <code>identifier</code> keys</li>\n<li><code>get_canv(ident)</code> - returns a canvas object of the canvas with a specific identifier</li>\n</ul>\n<h2>PPFun_canv class</h2>\n<p>This class contains all the functions you need to create your masterpiece. Here they are:</p>\n<ul>\n<li><code>approx_color(rgb_tuple)</code> - returns a color index that approximates the given color the most</li>\n<li><code>set_pixel(pos_tuple, color_index)</code> - places a pixel on the map. Throws an exception on error, returns True on success</li>\n<li><code>remaining_cooldown()</code> - returns the remaining cooldown in seconds</li>\n</ul>\n\n          </div>"}, "last_serial": 7066322, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0d6cbbe7bd609e331db9b64409d32fee", "sha256": "73417cd93b51701a9abb076bb112c4c05ce38fcdb65bfd7844d4fcc64f3d33a6"}, "downloads": -1, "filename": "ppfun-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0d6cbbe7bd609e331db9b64409d32fee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3491, "upload_time": "2020-04-18T17:44:30", "upload_time_iso_8601": "2020-04-18T17:44:30.928311Z", "url": "https://files.pythonhosted.org/packages/e3/27/68d9d94c66f6119f67810bb7d293ba3efdfc0ceb600d9227395ff1b1317d/ppfun-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9ddac4e91bcf25ef8315e1db01bf710", "sha256": "cd0b8d30f7068329468e88a4b2a1b6aa25d4b5df20bd374aa348b734484d97cd"}, "downloads": -1, "filename": "ppfun-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d9ddac4e91bcf25ef8315e1db01bf710", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3010, "upload_time": "2020-04-18T17:44:33", "upload_time_iso_8601": "2020-04-18T17:44:33.050005Z", "url": "https://files.pythonhosted.org/packages/b9/94/cfb53913f4f0072e7d7eb4cfdaac21055a6a089dedc57e3969595aaf86de/ppfun-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d6d48cbb8d262bc3c39c3e047b8f844e", "sha256": "88844ce9771f45ae9a15257bad6ebbac59fc4ceee777b5aacfdfbd92f11f4891"}, "downloads": -1, "filename": "ppfun-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d6d48cbb8d262bc3c39c3e047b8f844e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3455, "upload_time": "2020-04-18T18:59:08", "upload_time_iso_8601": "2020-04-18T18:59:08.469714Z", "url": "https://files.pythonhosted.org/packages/3e/f3/cd40c1c3a951af7ffd97e088a13705595c7a5f0e405b69fa8c40b4232aa9/ppfun-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "873d376c89349b1e91ad962581849153", "sha256": "3b6cda68d9fa233554319707f2d307fe955e01ed82e6265215c1ce0c670bc635"}, "downloads": -1, "filename": "ppfun-1.0.1.tar.gz", "has_sig": false, "md5_digest": "873d376c89349b1e91ad962581849153", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2949, "upload_time": "2020-04-18T18:59:10", "upload_time_iso_8601": "2020-04-18T18:59:10.226115Z", "url": "https://files.pythonhosted.org/packages/a1/ae/82887b1fdb784fe02af09f1d5494163c5bb9f6cfa299e5290ae06a6be609/ppfun-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "c85a680fcf4ba788b84ed1594b0eabb4", "sha256": "e9c711253982f18f8b5ad12cfe60eaa2ccdde9d6dd08fbcd84ede2589e240ebf"}, "downloads": -1, "filename": "ppfun-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c85a680fcf4ba788b84ed1594b0eabb4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3841, "upload_time": "2020-04-18T22:09:28", "upload_time_iso_8601": "2020-04-18T22:09:28.517492Z", "url": "https://files.pythonhosted.org/packages/0f/44/2d8afa1294c78b97c31ceea58bd4b12d3c3b7a623311aa4bb389bc3f2137/ppfun-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "748e64e9443f8ff225f22e976da89590", "sha256": "126c30b5c2abc70a0e77dc85a14fc659a04b31f2a7b2581bbfa5b2e29cefabd4"}, "downloads": -1, "filename": "ppfun-1.0.2.tar.gz", "has_sig": false, "md5_digest": "748e64e9443f8ff225f22e976da89590", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3394, "upload_time": "2020-04-18T22:09:30", "upload_time_iso_8601": "2020-04-18T22:09:30.866722Z", "url": "https://files.pythonhosted.org/packages/3d/ee/4c8184b03106d83633352ce4d0579c420e87f69963f5f633cffed85d517d/ppfun-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "7db23f85f06f3c2752737dd948ab2e60", "sha256": "8a07c47d86b28e4c897df7f38b672e193dcc97532babddaed71c0d68b0c1084d"}, "downloads": -1, "filename": "ppfun-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7db23f85f06f3c2752737dd948ab2e60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3956, "upload_time": "2020-04-19T10:25:51", "upload_time_iso_8601": "2020-04-19T10:25:51.805240Z", "url": "https://files.pythonhosted.org/packages/5b/85/5af3f97ea427895a4b3ac8f5778bf1b90b6944b9a2bfda8f5626cd9f153f/ppfun-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f838c9bb803db82771b3844de273c62", "sha256": "d3fb9ccca4eff48a4a31d616bb0eb36af14c6dd79fcf88e1877ec9ef93a216f2"}, "downloads": -1, "filename": "ppfun-1.0.3.tar.gz", "has_sig": false, "md5_digest": "7f838c9bb803db82771b3844de273c62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3485, "upload_time": "2020-04-19T10:25:54", "upload_time_iso_8601": "2020-04-19T10:25:54.423026Z", "url": "https://files.pythonhosted.org/packages/b9/ea/22f849e08d416821bbc31f38ccefa4caa440861e25dc387b5a3e0f003c90/ppfun-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "409602d58b39c7edf0c28a570d193247", "sha256": "6d119fcff0c15b3df1431b9a1b2fafdc0d415131d1784035ff5d885f3f78a766"}, "downloads": -1, "filename": "ppfun-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "409602d58b39c7edf0c28a570d193247", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4050, "upload_time": "2020-04-19T17:20:22", "upload_time_iso_8601": "2020-04-19T17:20:22.974537Z", "url": "https://files.pythonhosted.org/packages/b8/cf/530b1a020f20228607cddcfc54f8562e9797ce48bd00b21ba5623b1c21ae/ppfun-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0693faff8acc2d61eed670401209a0a", "sha256": "8be3accd9f3931a4ab867f476162834357c6f5589de3cd213c9e42723d059b0e"}, "downloads": -1, "filename": "ppfun-1.0.4.tar.gz", "has_sig": false, "md5_digest": "f0693faff8acc2d61eed670401209a0a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3572, "upload_time": "2020-04-19T17:20:26", "upload_time_iso_8601": "2020-04-19T17:20:26.650457Z", "url": "https://files.pythonhosted.org/packages/9f/f0/a72248a843da85ff084f52c4453495ba0f17ba51ad812c83efe9b5c2df61/ppfun-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "d5bc9774b1802d4e27cd863f64343d3e", "sha256": "2d8d757fd1e89db101d69bf212783ae450a85fe05d57e00509d4199900c27376"}, "downloads": -1, "filename": "ppfun-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d5bc9774b1802d4e27cd863f64343d3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4052, "upload_time": "2020-04-21T08:21:15", "upload_time_iso_8601": "2020-04-21T08:21:15.526823Z", "url": "https://files.pythonhosted.org/packages/d8/52/8b3e96ecb6ecf03dacf18c3374e16eb5b831da582e096312e771e3d1ff96/ppfun-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abac7e9b38e83ec95c63e2f5a9c4834c", "sha256": "9fd1f9928ee3be3226d95dffbc6a06bfbc83bcdf8d85f3eba6fb2537e7a2e15a"}, "downloads": -1, "filename": "ppfun-1.0.5.tar.gz", "has_sig": false, "md5_digest": "abac7e9b38e83ec95c63e2f5a9c4834c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3566, "upload_time": "2020-04-21T08:21:16", "upload_time_iso_8601": "2020-04-21T08:21:16.823422Z", "url": "https://files.pythonhosted.org/packages/9a/8a/9c4c7bbf85060543526c3203f67b398df863fb229aec8a44a094e54117cb/ppfun-1.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d5bc9774b1802d4e27cd863f64343d3e", "sha256": "2d8d757fd1e89db101d69bf212783ae450a85fe05d57e00509d4199900c27376"}, "downloads": -1, "filename": "ppfun-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "d5bc9774b1802d4e27cd863f64343d3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4052, "upload_time": "2020-04-21T08:21:15", "upload_time_iso_8601": "2020-04-21T08:21:15.526823Z", "url": "https://files.pythonhosted.org/packages/d8/52/8b3e96ecb6ecf03dacf18c3374e16eb5b831da582e096312e771e3d1ff96/ppfun-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "abac7e9b38e83ec95c63e2f5a9c4834c", "sha256": "9fd1f9928ee3be3226d95dffbc6a06bfbc83bcdf8d85f3eba6fb2537e7a2e15a"}, "downloads": -1, "filename": "ppfun-1.0.5.tar.gz", "has_sig": false, "md5_digest": "abac7e9b38e83ec95c63e2f5a9c4834c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3566, "upload_time": "2020-04-21T08:21:16", "upload_time_iso_8601": "2020-04-21T08:21:16.823422Z", "url": "https://files.pythonhosted.org/packages/9a/8a/9c4c7bbf85060543526c3203f67b398df863fb229aec8a44a094e54117cb/ppfun-1.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:31 2020"}