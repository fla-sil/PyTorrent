{"info": {"author": "Barcelona Biomedical Genomics Lab", "author_email": "bbglab@irbbarcelona.org", "bugtrack_url": null, "classifiers": [], "description": ".. |bs| replace:: **bgsignature**\n\nBGSignature\n===========\n\n|bs| is a package used to compute signatures.\n\nThe most basic type of computation is the computation\nof the counts of the different k-mers (e.g. 3 or 5).\nThis computation can be done for a set of mutations,\nfor a set of regions or for a set of mutation\nthat fall within certain regions.\n\n\n|bs| consists of 3 tools:\n\n- **count**: count different k-mers\n- **frequency**: divide the counts by the total counts\n- **normalize**: divide the counts by counts obtained\n  separately and normalize the results.\n\n**Advanced features** include:\n\n- ability to group the counts (e.g. group mutations by sample)\n- normalize the counts by the context taken from a regions file\n- collapse (add together) reverse complementary sequences\n\n\n\nInstallation\n------------\n\nThis project is a Python package\nand can be installed with ``pip``.\nDownload the source code, get into this\nproject directory and execute:\n\n.. code:: bash\n\n   pip install .\n\n\nUsage\n-----\n\nCommand line interface\n**********************\n\nThe 3 tools can be called using\n\n- *bgsignature count*\n- *bgsignature frequency*\n- *bgsignature normalize*\n\nSome examples:\n\n- getting help:\n\n    .. code:: bash\n\n       bgsignature -h\n       bgsignature frequency -h\n\n- count triplets in mutation that fall in certain regions using hg38:\n\n    .. code:: bash\n\n       bgsignature count -m my/muts/file -r my/regions/file\n       -g hg38 -o my/output.json --cores 4\n\n\nPython\n******\n\nAlternative, the command line options have an equivalent in Python:\n\n.. code:: python\n\n   from bgsignature import count, relative_frequency, normalize\n\nthat accept similar parameters except the output.\nThe return object can be used as a dictionary.\n\nIf you already have your files loaded in Python\nyou can use directly count function\nin the corresponding module.\nE.g.:\n\n.. code:: python\n\n   from bgsignature.count import mutation\n   mutation.count(mutations, 'hg38', 3)\n\nIn addition, you can also\nuse the the \"low-level\" functions that\ndo the count (``count_all``\nand ``count_group``)\nwhich are much simple and do not\nperform any kind of parallelization.\nE.g.:\n\n.. code:: python\n\n   from bgsignature.count import mutation\n   mutation.count_all(mutations, 'hg38', 3)\n   # or to group mutations by sample\n   mutation.count_group(mutations, 'hg38', 3, 'SAMPLE')\n\n\nThe return object can be normalized to 1,\nusing the ``sum1()`` method\nor divided by some normalization counts\nusing the ``normalize()`` method.\n\n\n\nImportant\n---------\n\nThere are some behavioural characteristics that\nmust be taken into account:\n\n- |bs| filters out mutations whose reference nucleotide\n  (as provided in the file), and the\n  corresponding one in the reference genome do not match.\n\n- when using the ``collapse`` option (enabled by default),\n  |bs| does not remove one of the collapsed sequences but keeps both.\n  This means that you need to manually remove the ones you\n  are not interested in.\n\n- when using ``bgsignature.count.mutation.count``\n  or ``bgsignature.count.region.count`` function\n  and a number of ``cores`` for paralelization,\n  the ``chunk`` parameter must be selected\n  adequately, as a it can have a huge impact on performance.\n\nFile formats\n------------\n\nMutations file\n**************\n\nTab separated file\n(can be compressed into ``gz``, ``bgz`` or ``xz`` formats)\nwith a header and at least these columns:\n``CHROMOSOME``, ``POSITION``, ``REF``, ``ALT``.\nIn addition, ``SAMPLE``, ``CANCER_TYPE`` and ``SIGNATURE``\nare optional columns that can be used for\ngrouping the signature.\n\n\nRegions file\n************\n\nTab separated file\n(can be compressed into ``gz``, ``bgz`` or ``xz`` formats)\nwith a header and at least these columns:\n``CHROMOSOME``, ``START``, ``END``, ``ELEMENT``.\nIn addition, ``SYMBOL``, and ``SEGMENT``\nare optional columns that can be used for\ngrouping the signature.\n\n\n\nSupport\n-------\n\nIf you are having issues, please let us know.\nYou can contact us at: bbglab@irbbarcelona.org", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/bgframework/bgsignature", "keywords": "", "license": "Apache Software License 2.0", "maintainer": "", "maintainer_email": "", "name": "bgsignature", "package_url": "https://pypi.org/project/bgsignature/", "platform": "", "project_url": "https://pypi.org/project/bgsignature/", "project_urls": {"Homepage": "https://bitbucket.org/bgframework/bgsignature"}, "release_url": "https://pypi.org/project/bgsignature/0.2/", "requires_dist": null, "requires_python": "", "summary": "Compute genome signatures", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>bgsignature</strong> is a package used to compute signatures.</p>\n<p>The most basic type of computation is the computation\nof the counts of the different k-mers (e.g. 3 or 5).\nThis computation can be done for a set of mutations,\nfor a set of regions or for a set of mutation\nthat fall within certain regions.</p>\n<p><strong>bgsignature</strong> consists of 3 tools:</p>\n<ul>\n<li><strong>count</strong>: count different k-mers</li>\n<li><strong>frequency</strong>: divide the counts by the total counts</li>\n<li><strong>normalize</strong>: divide the counts by counts obtained\nseparately and normalize the results.</li>\n</ul>\n<p><strong>Advanced features</strong> include:</p>\n<ul>\n<li>ability to group the counts (e.g. group mutations by sample)</li>\n<li>normalize the counts by the context taken from a regions file</li>\n<li>collapse (add together) reverse complementary sequences</li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This project is a Python package\nand can be installed with <tt>pip</tt>.\nDownload the source code, get into this\nproject directory and execute:</p>\n<pre>pip install .\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"command-line-interface\">\n<h3>Command line interface</h3>\n<p>The 3 tools can be called using</p>\n<ul>\n<li><em>bgsignature count</em></li>\n<li><em>bgsignature frequency</em></li>\n<li><em>bgsignature normalize</em></li>\n</ul>\n<p>Some examples:</p>\n<ul>\n<li><p>getting help:</p>\n<blockquote>\n<pre>bgsignature -h\nbgsignature frequency -h\n</pre>\n</blockquote>\n</li>\n<li><p>count triplets in mutation that fall in certain regions using hg38:</p>\n<blockquote>\n<pre>bgsignature count -m my/muts/file -r my/regions/file\n-g hg38 -o my/output.json --cores <span class=\"m\">4</span>\n</pre>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"python\">\n<h3>Python</h3>\n<p>Alternative, the command line options have an equivalent in Python:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bgsignature</span> <span class=\"kn\">import</span> <span class=\"n\">count</span><span class=\"p\">,</span> <span class=\"n\">relative_frequency</span><span class=\"p\">,</span> <span class=\"n\">normalize</span>\n</pre>\n<p>that accept similar parameters except the output.\nThe return object can be used as a dictionary.</p>\n<p>If you already have your files loaded in Python\nyou can use directly count function\nin the corresponding module.\nE.g.:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bgsignature.count</span> <span class=\"kn\">import</span> <span class=\"n\">mutation</span>\n<span class=\"n\">mutation</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"n\">mutations</span><span class=\"p\">,</span> <span class=\"s1\">'hg38'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<p>In addition, you can also\nuse the the \u201clow-level\u201d functions that\ndo the count (<tt>count_all</tt>\nand <tt>count_group</tt>)\nwhich are much simple and do not\nperform any kind of parallelization.\nE.g.:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">bgsignature.count</span> <span class=\"kn\">import</span> <span class=\"n\">mutation</span>\n<span class=\"n\">mutation</span><span class=\"o\">.</span><span class=\"n\">count_all</span><span class=\"p\">(</span><span class=\"n\">mutations</span><span class=\"p\">,</span> <span class=\"s1\">'hg38'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"c1\"># or to group mutations by sample</span>\n<span class=\"n\">mutation</span><span class=\"o\">.</span><span class=\"n\">count_group</span><span class=\"p\">(</span><span class=\"n\">mutations</span><span class=\"p\">,</span> <span class=\"s1\">'hg38'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'SAMPLE'</span><span class=\"p\">)</span>\n</pre>\n<p>The return object can be normalized to 1,\nusing the <tt>sum1()</tt> method\nor divided by some normalization counts\nusing the <tt>normalize()</tt> method.</p>\n</div>\n</div>\n<div id=\"important\">\n<h2>Important</h2>\n<p>There are some behavioural characteristics that\nmust be taken into account:</p>\n<ul>\n<li><strong>bgsignature</strong> filters out mutations whose reference nucleotide\n(as provided in the file), and the\ncorresponding one in the reference genome do not match.</li>\n<li>when using the <tt>collapse</tt> option (enabled by default),\n<strong>bgsignature</strong> does not remove one of the collapsed sequences but keeps both.\nThis means that you need to manually remove the ones you\nare not interested in.</li>\n<li>when using <tt>bgsignature.count.mutation.count</tt>\nor <tt>bgsignature.count.region.count</tt> function\nand a number of <tt>cores</tt> for paralelization,\nthe <tt>chunk</tt> parameter must be selected\nadequately, as a it can have a huge impact on performance.</li>\n</ul>\n</div>\n<div id=\"file-formats\">\n<h2>File formats</h2>\n<div id=\"mutations-file\">\n<h3>Mutations file</h3>\n<p>Tab separated file\n(can be compressed into <tt>gz</tt>, <tt>bgz</tt> or <tt>xz</tt> formats)\nwith a header and at least these columns:\n<tt>CHROMOSOME</tt>, <tt>POSITION</tt>, <tt>REF</tt>, <tt>ALT</tt>.\nIn addition, <tt>SAMPLE</tt>, <tt>CANCER_TYPE</tt> and <tt>SIGNATURE</tt>\nare optional columns that can be used for\ngrouping the signature.</p>\n</div>\n<div id=\"regions-file\">\n<h3>Regions file</h3>\n<p>Tab separated file\n(can be compressed into <tt>gz</tt>, <tt>bgz</tt> or <tt>xz</tt> formats)\nwith a header and at least these columns:\n<tt>CHROMOSOME</tt>, <tt>START</tt>, <tt>END</tt>, <tt>ELEMENT</tt>.\nIn addition, <tt>SYMBOL</tt>, and <tt>SEGMENT</tt>\nare optional columns that can be used for\ngrouping the signature.</p>\n</div>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you are having issues, please let us know.\nYou can contact us at: <a href=\"mailto:bbglab%40irbbarcelona.org\">bbglab<span>@</span>irbbarcelona<span>.</span>org</a></p>\n</div>\n\n          </div>"}, "last_serial": 4929187, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f5c38fd17e4a00d8a436bc8d44085905", "sha256": "992f94de3285bd2d5421bab762311eb3bd16b9b8eda4c28e6419e63a96ebc490"}, "downloads": -1, "filename": "bgsignature-0.1.tar.gz", "has_sig": false, "md5_digest": "f5c38fd17e4a00d8a436bc8d44085905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11719, "upload_time": "2019-03-08T11:31:53", "upload_time_iso_8601": "2019-03-08T11:31:53.598655Z", "url": "https://files.pythonhosted.org/packages/69/86/3896d0d162bdd23c2a7153ee197eb4c2d950e6463aae83f1425b01136581/bgsignature-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "75a4a63e8a9a6a5ebcc1dad320d223bb", "sha256": "dc25683856e1c65d409ac288b7f8c252582c8660036373efce8728622697751d"}, "downloads": -1, "filename": "bgsignature-0.2.tar.gz", "has_sig": false, "md5_digest": "75a4a63e8a9a6a5ebcc1dad320d223bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11729, "upload_time": "2019-03-12T09:15:26", "upload_time_iso_8601": "2019-03-12T09:15:26.808036Z", "url": "https://files.pythonhosted.org/packages/11/52/2121e332f2582edbb82732857ec5d3af12407d8d98a9e4e7390dffd8d6e1/bgsignature-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75a4a63e8a9a6a5ebcc1dad320d223bb", "sha256": "dc25683856e1c65d409ac288b7f8c252582c8660036373efce8728622697751d"}, "downloads": -1, "filename": "bgsignature-0.2.tar.gz", "has_sig": false, "md5_digest": "75a4a63e8a9a6a5ebcc1dad320d223bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11729, "upload_time": "2019-03-12T09:15:26", "upload_time_iso_8601": "2019-03-12T09:15:26.808036Z", "url": "https://files.pythonhosted.org/packages/11/52/2121e332f2582edbb82732857ec5d3af12407d8d98a9e4e7390dffd8d6e1/bgsignature-0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:39 2020"}