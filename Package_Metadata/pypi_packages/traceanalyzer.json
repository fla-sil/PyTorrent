{"info": {"author": "Stany Mwamba Bakajika", "author_email": "mwambastany@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Education", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: General"], "description": "# traceanalyzer\nThis library  provides analyzing and plotting functions for ns2 trace file in Python. Bellow, example of   ns2 trace file content.\n#### Example: content of ns2 trace file\n```\n+ 4.451157 6 10 tcp 1540 ------- 0 32.0 33.0 197 2293\n- 4.451157 6 10 tcp 1540 ------- 0 32.0 33.0 197 2293\nr 4.45128 2 6 tcp 1540 ------- 0 32.0 33.0 198 2294\n+ 4.45128 6 10 tcp 1540 ------- 0 32.0 33.0 198 2294\n- 4.45128 6 10 tcp 1540 ------- 0 32.0 33.0 198 2294\nr 4.451289 20 19 rtProtoDV 34 ------- 0 20.1 19.1 -1 2308\nr 4.451289 20 21 rtProtoDV 34 ------- 0 20.1 21.1 -1 2309\nr 4.451289 20 24 rtProtoDV 34 ------- 0 20.1 24.1 -1 2310\nr 4.451403 2 6 tcp 1540 ------- 0 32.0 33.0 199 2295\n+ 4.451403 6 10 tcp 1540 ------- 0 32.0 33.0 199 2295\n- 4.451403 6 10 tcp 1540 ------- 0 32.0 33.0 199 2295\nr 4.451526 2 6 tcp 1540 ------- 0 32.0 33.0 200 2296\nr 4.531403 23 33 tcp 1540 ------- 0 32.0 33.0 191 2287\n+ 4.531403 33 23 ack 40 ------- 0 33.0 32.0 191 2313\n- 4.531403 33 23 ack 40 ------- 0 33.0 32.0 191 2313\nr 4.531526 23 33 tcp 1540 ------- 0 32.0 33.0 192 2288\n+ 4.531526 33 23 ack 40 ------- 0 33.0 32.0 192 2314\n- 4.531526 33 23 ack 40 ------- 0 33.0 32.0 192 2314\nr 4.53165 23 33 tcp 1540 ------- 0 32.0 33.0 193 2289\n+ 4.53165 33 23 ack 40 ------- 0 33.0 32.0 193 2315\n- 4.53165 33 23 ack 40 ------- 0 33.0 32.0 193 2315\n```\n## Structure\n`traceanalyzer` provide four main classes : `Eedelay`, `Pdr`, `Throughput` and `Nrl`.<br>\nAccording to [`RFC` (Request for comments)](https://rfc-editor.org) those main classes compute the average of end-to-end delay, the Packet Delivery Ratio, the Throughput and the Normalized Routing Load from `ns2 trace file`. Those provide also plotting and data array extracted from ns2 trace file.\n\n\n### `Eedelay` class\nFor managing (computing, sampling and plotting) the average of end-to-end delay of simulation from trace file.<br>\n`end-to-end delay=Time/No.Sample`\n#### arguments\n-1st: trace file<br>\n-2nd: node\n#### outputs\n##### data array\nData without sampling.<br>\n`eedelay_array` <br>\n`time_array` <br>\nData with sampling.<br>\n`eedelay_sample` <br>\n`time_sample` <br>\n##### constant\nvalue      \n### `Pdr` class\nFor managing (computing, sampling and plotting) the Packet Delivery Ratio (`PDR`) of simulation from trace file.<br>\n`PDR=No.delivered Packet/No.Sent Packet`\n#### arguments\n-1st: trace file<br>\n-2nd: node\n#### outputs\n##### data array\nData without sampling.<br>\n`pdr_array` <br>\n`time_array` <br>\nData with sampling.<br>\n`pdr_sample` <br>\n`time_sample` <br>\n##### constant\nvalue  \n\n### `Throughput` class\nFor managing (computing, sampling and plotting) the Throughput average of simulation from trace file.<br>\n`Average Throughput=Packet received/Time Taken`\n#### arguments\n-1st: trace file<br>\n-2nd: node\n#### outputs\n##### data array\nData without sampling.<br>\n`throughput_array` <br>\n`time_array` <br>\nData with sampling.<br>\n`throughput_sample` <br>\n`time_sample` <br>\n##### constant\nvalue \n### `Nrl` class\nFor managing (computing, sampling and plotting) the Normalized Routing Load (`NRL`) of simulation from trace file.<br>\n`NRL=No.Routed packet/No.Delivery packet`\n#### arguments\n-1st: trace file<br>\n-2nd: routing packet type\n#### outputs\n##### data array\nData without sampling.<br>\n`nrl_array` <br>\n`time_array` <br>\nData with sampling.<br>\n`nrl_sample` <br>\n`time_sample` <br>\n##### constant\nvalue \n### `Common` methods\n#### sample()\nFor sampling data, by default sampling step is 1 sec.\n#### plot()\nfor plotting data, the arguments are the same than matplotlib.\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install traceanalyzer.\n\n```bash\npip3 install traceanalyzer\n\n```\n\n## Usage\n### Eedelay: End-to-End delay\n#### code\n```python\nimport  traceanalyzer as tr\n#end-to-end delay\needelay1=tr.Eedelay('out1.tr','33')\needelay2=tr.Eedelay('out2.tr','33')\needelay2.sample()#eedelay2.sample(1.5) for sampling with step=1.5\needelay1.plot()\needelay2.plot()\n#getting data\ntime=eedelay2.time_sample\needelay=eedelay2.eedelay_sample\nidx=0\nfor instant in time:\n    print(instant,' ',eedelay[idx]) \n    idx+=1\n```\n#### output\n![alt eedelay](https://raw.githubusercontent.com/StanyMwamba/traceanalyzer/master/doc/eedelay.png)\n\n```\n0   0\n1.13904   0.56952\n2.13904   0.016842834645669293\n3.13904   0.012456507936507938\n4.14704   0.01097100529100529\n5.14704   0.010232683896620277\n6.14704   0.009788280254777069\n7.14704   0.009491420982735723\n8.14704   0.009279088838268792\n9.14704   0.009119680957128614\n10.14704   0.008995602836879434\n11.14704   0.008896280925778132\n12.14704   0.008814978229317852\n13.14704   0.008747198935462408\n14.14704   0.00868982800982801\n15.14704   0.008640638904734741\n16.14704   0.008597997870074548\n17.14704   0.008560678981527708\n18.14704   0.008527744360902256\n19.14704   0.008498464269862406\n```\n### Pdr: Packet Delivery Ratio\n#### code\n```python\nimport traceanalyzer as tr\n#Packet Delivery Ratio\npdr1=tr.Pdr('out1.tr','33')\npdr1.sample()\npdr1.plot('sr-') #plotting with argument\n#getting data\ntime=pdr1.time_sample\npdr=pdr1.pdr_sample\nidx=0\nfor instant in time:\n    print(instant,' ',pdr[idx]) \n    idx+=1\n```\n#### output\n![alt pdr](https://raw.githubusercontent.com/StanyMwamba/traceanalyzer/master/doc/pdr.png)\n\n\n```\n0   0\n1.0   0\n2.0   0.9889106327462491\n3.0   0.9946168461051298\n4.0   0.9964457453481079\n5.0   0.9973470661672909\n6.0   0.9978837296153368\n7.0   0.9982398012010768\n8.0   0.9984933085172383\n9.0   0.998682987294701\n10.0   0.9988302484001926\n11.0   0.9989478895902958\n12.0   0.9990440308159478\n13.0   0.9991240725474031\n14.0   0.999191746303428\n15.0   0.9992497131256068\n16.0   0.9992999217559609\n17.0   0.9993438320209974\n18.0   0.9993825591108851\n19.0   0.9994169696138281\n20.0   0.9994477471331579\n21.235556   1.0\n22.238848   1.0\n23.322692   1.0\n24.352604   1.0\n```\n### Throughput\n#### code\n```python\nimport  traceanalyzer as tr\n#Throughput\nthroughput1=tr.Throughput('out1.tr','33')\nthroughput1.sample()#eedelay2.sample(1.5) for sampling with step=1.5\nthroughput1.plot()\n#getting data\ntime=throughput1.time_sample\nthroughput=throughput1.throughput_sample\nidx=0\nfor instant in time:\n    print(instant,' ',throughput[idx]) \n    idx+=1\n```\n#### output\n![alt throughput](https://raw.githubusercontent.com/StanyMwamba/traceanalyzer/master/doc/throughput.png)\n\n\n```\n1.0   0.0\n2.0   436.0\n3.0   624.0\n4.0   718.0\n5.0   774.4\n6.0   812.0\n7.0   838.8571428571429\n8.0   859.0\n9.0   874.6666666666666\n10.0   887.2\n11.0   897.4545454545454\n12.0   906.0\n13.0   913.2307692307693\n14.0   919.4285714285714\n15.0   924.8\n16.0   929.5\n17.0   933.6470588235294\n18.0   937.3333333333334\n19.0   940.6315789473684\n20.0   943.6\n21.235556   895.1025346357779\n22.238848   854.7205322865644\n23.322692   815.0002581177164\n24.352604   780.5325459240416\n```\n### Nrl: Normalized Routing Load\n#### code\n```python\nimport  traceanalyzer as tr\n#Normalized Routing Load\nnrl1=tr.Nrl('out1.tr','rtProtoDV')\nnrl1.sample()\nnrl1.plot()\n#getting data\ntime=nrl1.time_sample\nnrl=nrl1.nrl_sample\nidx=0\nfor instant in time:\n    print(instant,' ',nrl[idx]) \n    idx+=1\n```\n#### output\n![alt nrl](https://raw.githubusercontent.com/StanyMwamba/traceanalyzer/master/doc/nrl.png)\n\n```\n0   0\n1.0   0\n2.0   1.5052770448548813\n3.0   0.7503979624323464\n4.0   0.49685270667226183\n5.0   0.38319511813487717\n6.0   0.3070109780439122\n7.0   0.2635618711751893\n8.0   0.2274099059115924\n9.0   0.20425102784888682\n10.0   0.1831771837971893\n11.0   0.1688247320488198\n12.0   0.15484633569739953\n13.0   0.14527358052704864\n14.0   0.13513513513513514\n15.0   0.12839538889625016\n16.0   0.12107475480095607\n17.0   0.11583175620872117\n18.0   0.11004506468963512\n19.0   0.10613911670841769\n20.0   0.10147565494376909\n21.235556   0.10311447811447812\n22.238848   0.10495985495985496\n23.322692   0.1060929810929811\n24.352604   0.10816498316498316\n```\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "http://packages.python.org/tracenalyzer", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/StanyMwamba/traceanalyzer", "keywords": "NS2 trace file", "license": "http://opensource.org/licenses/MIT", "maintainer": "", "maintainer_email": "", "name": "traceanalyzer", "package_url": "https://pypi.org/project/traceanalyzer/", "platform": "ALL", "project_url": "https://pypi.org/project/traceanalyzer/", "project_urls": {"Download": "http://packages.python.org/tracenalyzer", "Homepage": "https://github.com/StanyMwamba/traceanalyzer"}, "release_url": "https://pypi.org/project/traceanalyzer/1.0.4/", "requires_dist": ["awk (>=1.2.1)", "matplotlib (>=3.1.1)"], "requires_python": ">=3.6", "summary": "This library  provides analyzing and plotting functions for ns2 trace file in Python.", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>traceanalyzer</h1>\n<p>This library  provides analyzing and plotting functions for ns2 trace file in Python. Bellow, example of   ns2 trace file content.</p>\n<h4>Example: content of ns2 trace file</h4>\n<pre><code>+ 4.451157 6 10 tcp 1540 ------- 0 32.0 33.0 197 2293\n- 4.451157 6 10 tcp 1540 ------- 0 32.0 33.0 197 2293\nr 4.45128 2 6 tcp 1540 ------- 0 32.0 33.0 198 2294\n+ 4.45128 6 10 tcp 1540 ------- 0 32.0 33.0 198 2294\n- 4.45128 6 10 tcp 1540 ------- 0 32.0 33.0 198 2294\nr 4.451289 20 19 rtProtoDV 34 ------- 0 20.1 19.1 -1 2308\nr 4.451289 20 21 rtProtoDV 34 ------- 0 20.1 21.1 -1 2309\nr 4.451289 20 24 rtProtoDV 34 ------- 0 20.1 24.1 -1 2310\nr 4.451403 2 6 tcp 1540 ------- 0 32.0 33.0 199 2295\n+ 4.451403 6 10 tcp 1540 ------- 0 32.0 33.0 199 2295\n- 4.451403 6 10 tcp 1540 ------- 0 32.0 33.0 199 2295\nr 4.451526 2 6 tcp 1540 ------- 0 32.0 33.0 200 2296\nr 4.531403 23 33 tcp 1540 ------- 0 32.0 33.0 191 2287\n+ 4.531403 33 23 ack 40 ------- 0 33.0 32.0 191 2313\n- 4.531403 33 23 ack 40 ------- 0 33.0 32.0 191 2313\nr 4.531526 23 33 tcp 1540 ------- 0 32.0 33.0 192 2288\n+ 4.531526 33 23 ack 40 ------- 0 33.0 32.0 192 2314\n- 4.531526 33 23 ack 40 ------- 0 33.0 32.0 192 2314\nr 4.53165 23 33 tcp 1540 ------- 0 32.0 33.0 193 2289\n+ 4.53165 33 23 ack 40 ------- 0 33.0 32.0 193 2315\n- 4.53165 33 23 ack 40 ------- 0 33.0 32.0 193 2315\n</code></pre>\n<h2>Structure</h2>\n<p><code>traceanalyzer</code> provide four main classes : <code>Eedelay</code>, <code>Pdr</code>, <code>Throughput</code> and <code>Nrl</code>.<br>\nAccording to <a href=\"https://rfc-editor.org\" rel=\"nofollow\"><code>RFC</code> (Request for comments)</a> those main classes compute the average of end-to-end delay, the Packet Delivery Ratio, the Throughput and the Normalized Routing Load from <code>ns2 trace file</code>. Those provide also plotting and data array extracted from ns2 trace file.</p>\n<h3><code>Eedelay</code> class</h3>\n<p>For managing (computing, sampling and plotting) the average of end-to-end delay of simulation from trace file.<br>\n<code>end-to-end delay=Time/No.Sample</code></p>\n<h4>arguments</h4>\n<p>-1st: trace file<br>\n-2nd: node</p>\n<h4>outputs</h4>\n<h5>data array</h5>\n<p>Data without sampling.<br>\n<code>eedelay_array</code> <br>\n<code>time_array</code> <br>\nData with sampling.<br>\n<code>eedelay_sample</code> <br>\n<code>time_sample</code> <br></p>\n<h5>constant</h5>\n<p>value</p>\n<h3><code>Pdr</code> class</h3>\n<p>For managing (computing, sampling and plotting) the Packet Delivery Ratio (<code>PDR</code>) of simulation from trace file.<br>\n<code>PDR=No.delivered Packet/No.Sent Packet</code></p>\n<h4>arguments</h4>\n<p>-1st: trace file<br>\n-2nd: node</p>\n<h4>outputs</h4>\n<h5>data array</h5>\n<p>Data without sampling.<br>\n<code>pdr_array</code> <br>\n<code>time_array</code> <br>\nData with sampling.<br>\n<code>pdr_sample</code> <br>\n<code>time_sample</code> <br></p>\n<h5>constant</h5>\n<p>value</p>\n<h3><code>Throughput</code> class</h3>\n<p>For managing (computing, sampling and plotting) the Throughput average of simulation from trace file.<br>\n<code>Average Throughput=Packet received/Time Taken</code></p>\n<h4>arguments</h4>\n<p>-1st: trace file<br>\n-2nd: node</p>\n<h4>outputs</h4>\n<h5>data array</h5>\n<p>Data without sampling.<br>\n<code>throughput_array</code> <br>\n<code>time_array</code> <br>\nData with sampling.<br>\n<code>throughput_sample</code> <br>\n<code>time_sample</code> <br></p>\n<h5>constant</h5>\n<p>value</p>\n<h3><code>Nrl</code> class</h3>\n<p>For managing (computing, sampling and plotting) the Normalized Routing Load (<code>NRL</code>) of simulation from trace file.<br>\n<code>NRL=No.Routed packet/No.Delivery packet</code></p>\n<h4>arguments</h4>\n<p>-1st: trace file<br>\n-2nd: routing packet type</p>\n<h4>outputs</h4>\n<h5>data array</h5>\n<p>Data without sampling.<br>\n<code>nrl_array</code> <br>\n<code>time_array</code> <br>\nData with sampling.<br>\n<code>nrl_sample</code> <br>\n<code>time_sample</code> <br></p>\n<h5>constant</h5>\n<p>value</p>\n<h3><code>Common</code> methods</h3>\n<h4>sample()</h4>\n<p>For sampling data, by default sampling step is 1 sec.</p>\n<h4>plot()</h4>\n<p>for plotting data, the arguments are the same than matplotlib.</p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install traceanalyzer.</p>\n<pre>pip3 install traceanalyzer\n</pre>\n<h2>Usage</h2>\n<h3>Eedelay: End-to-End delay</h3>\n<h4>code</h4>\n<pre><span class=\"kn\">import</span>  <span class=\"nn\">traceanalyzer</span> <span class=\"k\">as</span> <span class=\"nn\">tr</span>\n<span class=\"c1\">#end-to-end delay</span>\n<span class=\"n\">eedelay1</span><span class=\"o\">=</span><span class=\"n\">tr</span><span class=\"o\">.</span><span class=\"n\">Eedelay</span><span class=\"p\">(</span><span class=\"s1\">'out1.tr'</span><span class=\"p\">,</span><span class=\"s1\">'33'</span><span class=\"p\">)</span>\n<span class=\"n\">eedelay2</span><span class=\"o\">=</span><span class=\"n\">tr</span><span class=\"o\">.</span><span class=\"n\">Eedelay</span><span class=\"p\">(</span><span class=\"s1\">'out2.tr'</span><span class=\"p\">,</span><span class=\"s1\">'33'</span><span class=\"p\">)</span>\n<span class=\"n\">eedelay2</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span><span class=\"c1\">#eedelay2.sample(1.5) for sampling with step=1.5</span>\n<span class=\"n\">eedelay1</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n<span class=\"n\">eedelay2</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n<span class=\"c1\">#getting data</span>\n<span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">eedelay2</span><span class=\"o\">.</span><span class=\"n\">time_sample</span>\n<span class=\"n\">eedelay</span><span class=\"o\">=</span><span class=\"n\">eedelay2</span><span class=\"o\">.</span><span class=\"n\">eedelay_sample</span>\n<span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"k\">for</span> <span class=\"n\">instant</span> <span class=\"ow\">in</span> <span class=\"n\">time</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">instant</span><span class=\"p\">,</span><span class=\"s1\">' '</span><span class=\"p\">,</span><span class=\"n\">eedelay</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">])</span> \n    <span class=\"n\">idx</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n</pre>\n<h4>output</h4>\n<p><img alt=\"alt eedelay\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0572525dbf8f65d7f7ca9f88cad2b072ee106b9c/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f5374616e794d77616d62612f7472616365616e616c797a65722f6d61737465722f646f632f656564656c61792e706e67\"></p>\n<pre><code>0   0\n1.13904   0.56952\n2.13904   0.016842834645669293\n3.13904   0.012456507936507938\n4.14704   0.01097100529100529\n5.14704   0.010232683896620277\n6.14704   0.009788280254777069\n7.14704   0.009491420982735723\n8.14704   0.009279088838268792\n9.14704   0.009119680957128614\n10.14704   0.008995602836879434\n11.14704   0.008896280925778132\n12.14704   0.008814978229317852\n13.14704   0.008747198935462408\n14.14704   0.00868982800982801\n15.14704   0.008640638904734741\n16.14704   0.008597997870074548\n17.14704   0.008560678981527708\n18.14704   0.008527744360902256\n19.14704   0.008498464269862406\n</code></pre>\n<h3>Pdr: Packet Delivery Ratio</h3>\n<h4>code</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">traceanalyzer</span> <span class=\"k\">as</span> <span class=\"nn\">tr</span>\n<span class=\"c1\">#Packet Delivery Ratio</span>\n<span class=\"n\">pdr1</span><span class=\"o\">=</span><span class=\"n\">tr</span><span class=\"o\">.</span><span class=\"n\">Pdr</span><span class=\"p\">(</span><span class=\"s1\">'out1.tr'</span><span class=\"p\">,</span><span class=\"s1\">'33'</span><span class=\"p\">)</span>\n<span class=\"n\">pdr1</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span>\n<span class=\"n\">pdr1</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"s1\">'sr-'</span><span class=\"p\">)</span> <span class=\"c1\">#plotting with argument</span>\n<span class=\"c1\">#getting data</span>\n<span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">pdr1</span><span class=\"o\">.</span><span class=\"n\">time_sample</span>\n<span class=\"n\">pdr</span><span class=\"o\">=</span><span class=\"n\">pdr1</span><span class=\"o\">.</span><span class=\"n\">pdr_sample</span>\n<span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"k\">for</span> <span class=\"n\">instant</span> <span class=\"ow\">in</span> <span class=\"n\">time</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">instant</span><span class=\"p\">,</span><span class=\"s1\">' '</span><span class=\"p\">,</span><span class=\"n\">pdr</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">])</span> \n    <span class=\"n\">idx</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n</pre>\n<h4>output</h4>\n<p><img alt=\"alt pdr\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cddcde4d57ba4c681caae0aa709e507a334fc4c1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f5374616e794d77616d62612f7472616365616e616c797a65722f6d61737465722f646f632f7064722e706e67\"></p>\n<pre><code>0   0\n1.0   0\n2.0   0.9889106327462491\n3.0   0.9946168461051298\n4.0   0.9964457453481079\n5.0   0.9973470661672909\n6.0   0.9978837296153368\n7.0   0.9982398012010768\n8.0   0.9984933085172383\n9.0   0.998682987294701\n10.0   0.9988302484001926\n11.0   0.9989478895902958\n12.0   0.9990440308159478\n13.0   0.9991240725474031\n14.0   0.999191746303428\n15.0   0.9992497131256068\n16.0   0.9992999217559609\n17.0   0.9993438320209974\n18.0   0.9993825591108851\n19.0   0.9994169696138281\n20.0   0.9994477471331579\n21.235556   1.0\n22.238848   1.0\n23.322692   1.0\n24.352604   1.0\n</code></pre>\n<h3>Throughput</h3>\n<h4>code</h4>\n<pre><span class=\"kn\">import</span>  <span class=\"nn\">traceanalyzer</span> <span class=\"k\">as</span> <span class=\"nn\">tr</span>\n<span class=\"c1\">#Throughput</span>\n<span class=\"n\">throughput1</span><span class=\"o\">=</span><span class=\"n\">tr</span><span class=\"o\">.</span><span class=\"n\">Throughput</span><span class=\"p\">(</span><span class=\"s1\">'out1.tr'</span><span class=\"p\">,</span><span class=\"s1\">'33'</span><span class=\"p\">)</span>\n<span class=\"n\">throughput1</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span><span class=\"c1\">#eedelay2.sample(1.5) for sampling with step=1.5</span>\n<span class=\"n\">throughput1</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n<span class=\"c1\">#getting data</span>\n<span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">throughput1</span><span class=\"o\">.</span><span class=\"n\">time_sample</span>\n<span class=\"n\">throughput</span><span class=\"o\">=</span><span class=\"n\">throughput1</span><span class=\"o\">.</span><span class=\"n\">throughput_sample</span>\n<span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"k\">for</span> <span class=\"n\">instant</span> <span class=\"ow\">in</span> <span class=\"n\">time</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">instant</span><span class=\"p\">,</span><span class=\"s1\">' '</span><span class=\"p\">,</span><span class=\"n\">throughput</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">])</span> \n    <span class=\"n\">idx</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n</pre>\n<h4>output</h4>\n<p><img alt=\"alt throughput\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d483a5ae9c2b4825ca435a7c5648452fa7c3921/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f5374616e794d77616d62612f7472616365616e616c797a65722f6d61737465722f646f632f7468726f7567687075742e706e67\"></p>\n<pre><code>1.0   0.0\n2.0   436.0\n3.0   624.0\n4.0   718.0\n5.0   774.4\n6.0   812.0\n7.0   838.8571428571429\n8.0   859.0\n9.0   874.6666666666666\n10.0   887.2\n11.0   897.4545454545454\n12.0   906.0\n13.0   913.2307692307693\n14.0   919.4285714285714\n15.0   924.8\n16.0   929.5\n17.0   933.6470588235294\n18.0   937.3333333333334\n19.0   940.6315789473684\n20.0   943.6\n21.235556   895.1025346357779\n22.238848   854.7205322865644\n23.322692   815.0002581177164\n24.352604   780.5325459240416\n</code></pre>\n<h3>Nrl: Normalized Routing Load</h3>\n<h4>code</h4>\n<pre><span class=\"kn\">import</span>  <span class=\"nn\">traceanalyzer</span> <span class=\"k\">as</span> <span class=\"nn\">tr</span>\n<span class=\"c1\">#Normalized Routing Load</span>\n<span class=\"n\">nrl1</span><span class=\"o\">=</span><span class=\"n\">tr</span><span class=\"o\">.</span><span class=\"n\">Nrl</span><span class=\"p\">(</span><span class=\"s1\">'out1.tr'</span><span class=\"p\">,</span><span class=\"s1\">'rtProtoDV'</span><span class=\"p\">)</span>\n<span class=\"n\">nrl1</span><span class=\"o\">.</span><span class=\"n\">sample</span><span class=\"p\">()</span>\n<span class=\"n\">nrl1</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n<span class=\"c1\">#getting data</span>\n<span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">nrl1</span><span class=\"o\">.</span><span class=\"n\">time_sample</span>\n<span class=\"n\">nrl</span><span class=\"o\">=</span><span class=\"n\">nrl1</span><span class=\"o\">.</span><span class=\"n\">nrl_sample</span>\n<span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"k\">for</span> <span class=\"n\">instant</span> <span class=\"ow\">in</span> <span class=\"n\">time</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">instant</span><span class=\"p\">,</span><span class=\"s1\">' '</span><span class=\"p\">,</span><span class=\"n\">nrl</span><span class=\"p\">[</span><span class=\"n\">idx</span><span class=\"p\">])</span> \n    <span class=\"n\">idx</span><span class=\"o\">+=</span><span class=\"mi\">1</span>\n</pre>\n<h4>output</h4>\n<p><img alt=\"alt nrl\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d851b6005091a44547e6a2d5c3c637832b27cc35/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f5374616e794d77616d62612f7472616365616e616c797a65722f6d61737465722f646f632f6e726c2e706e67\"></p>\n<pre><code>0   0\n1.0   0\n2.0   1.5052770448548813\n3.0   0.7503979624323464\n4.0   0.49685270667226183\n5.0   0.38319511813487717\n6.0   0.3070109780439122\n7.0   0.2635618711751893\n8.0   0.2274099059115924\n9.0   0.20425102784888682\n10.0   0.1831771837971893\n11.0   0.1688247320488198\n12.0   0.15484633569739953\n13.0   0.14527358052704864\n14.0   0.13513513513513514\n15.0   0.12839538889625016\n16.0   0.12107475480095607\n17.0   0.11583175620872117\n18.0   0.11004506468963512\n19.0   0.10613911670841769\n20.0   0.10147565494376909\n21.235556   0.10311447811447812\n22.238848   0.10495985495985496\n23.322692   0.1060929810929811\n24.352604   0.10816498316498316\n</code></pre>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6153831, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f9d44e72de64973261e33ec321e59a8e", "sha256": "7d79a7e9e4a84eee9ad06ad699ad248a1cdcedece98a1c92c4ef406c0d596197"}, "downloads": -1, "filename": "traceanalyzer-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f9d44e72de64973261e33ec321e59a8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 4721, "upload_time": "2019-11-16T05:36:03", "upload_time_iso_8601": "2019-11-16T05:36:03.278226Z", "url": "https://files.pythonhosted.org/packages/27/70/6579e29d7f6f5038510a326f43265dcf17fcfb8c02a4b5cd7f76da1ab81f/traceanalyzer-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc82b8be513173df8b4269cfa05f1f46", "sha256": "4dd349da634f80899d6f1abeff7653e52b40c43c604b86583ab25a33e5b39f13"}, "downloads": -1, "filename": "traceanalyzer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "bc82b8be513173df8b4269cfa05f1f46", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4269, "upload_time": "2019-11-16T05:36:05", "upload_time_iso_8601": "2019-11-16T05:36:05.931719Z", "url": "https://files.pythonhosted.org/packages/0b/93/cb1348a2c6ccc8d0a1b968b6279f4532c73a4ee3e32ae31a5c3af99733de/traceanalyzer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "82fdc4e697a9b220e4edf20977daba10", "sha256": "093b2057d989a217e9165c89a6e717fa2712e43509a223e94a1f92fc99fd5bcc"}, "downloads": -1, "filename": "traceanalyzer-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "82fdc4e697a9b220e4edf20977daba10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7233, "upload_time": "2019-11-18T03:19:53", "upload_time_iso_8601": "2019-11-18T03:19:53.558589Z", "url": "https://files.pythonhosted.org/packages/e9/79/034d4214ec37b7c85c1ee436bb10fa175b5f68716d087194193297170e24/traceanalyzer-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "194cb8a98f3bb6e747236e49460f6f8e", "sha256": "287eccb4af1aff311f1dd04f2cdaa66ef1df895a796c0cfec70c05b472e51295"}, "downloads": -1, "filename": "traceanalyzer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "194cb8a98f3bb6e747236e49460f6f8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10698, "upload_time": "2019-11-18T03:19:55", "upload_time_iso_8601": "2019-11-18T03:19:55.267805Z", "url": "https://files.pythonhosted.org/packages/03/4f/12798fb0f7177be6c8a3f50dda5b5e74ff008221b57a03622111739ca90c/traceanalyzer-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "177d16db9ae0cd11cc07786f470da46f", "sha256": "3d1af25b79712671dcee38bcb8354c3fd360a1140dd02d1ffba9bfee29937b7e"}, "downloads": -1, "filename": "traceanalyzer-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "177d16db9ae0cd11cc07786f470da46f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7235, "upload_time": "2019-11-18T03:25:27", "upload_time_iso_8601": "2019-11-18T03:25:27.013872Z", "url": "https://files.pythonhosted.org/packages/4c/35/06b6cc6a063c0aef1ab76be5534b8525a7b00a14040215b78570e09ec8ae/traceanalyzer-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8eb919dae1c90e68627bb9f06057e96a", "sha256": "02b8dba51213744ac8ba620d689137822f258b493ac81ca60c538fcbf19ef324"}, "downloads": -1, "filename": "traceanalyzer-1.0.2.tar.gz", "has_sig": false, "md5_digest": "8eb919dae1c90e68627bb9f06057e96a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10703, "upload_time": "2019-11-18T03:25:29", "upload_time_iso_8601": "2019-11-18T03:25:29.157100Z", "url": "https://files.pythonhosted.org/packages/45/4d/911f25af484396b5dcce6d30b4362176cbec9c5ce1888f9eba89026c41cf/traceanalyzer-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "d74255f21b8699c19b73ab1581f6c51a", "sha256": "f6321d1baa61da13f5a4a6bf790efaf136be66a960ba7196e46028f8453b76d0"}, "downloads": -1, "filename": "traceanalyzer-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d74255f21b8699c19b73ab1581f6c51a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7258, "upload_time": "2019-11-18T05:43:55", "upload_time_iso_8601": "2019-11-18T05:43:55.369035Z", "url": "https://files.pythonhosted.org/packages/2e/8a/b1b7ecdb1feca429a962fc7d82455cca729e225e1b84d8b8707a720ac4e3/traceanalyzer-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ff1194d37ffe58830ef7fc552c12942", "sha256": "b78067bea51f22b16f1d14298cbfdd3598ac68bbf22cbc72ce2339d276bf0147"}, "downloads": -1, "filename": "traceanalyzer-1.0.3.tar.gz", "has_sig": false, "md5_digest": "2ff1194d37ffe58830ef7fc552c12942", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10760, "upload_time": "2019-11-18T05:43:57", "upload_time_iso_8601": "2019-11-18T05:43:57.345760Z", "url": "https://files.pythonhosted.org/packages/4e/62/ce8bef823e1d326de95abbea43648acdcebab02dbeb818aa1264243a4fc6/traceanalyzer-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "44997bed1332e029a0c910d28c51f279", "sha256": "6ebcfd8c462e03ed0cb9eb11266918a7eb0de1ea9e02f2ab0d5f8954e8e9cfda"}, "downloads": -1, "filename": "traceanalyzer-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "44997bed1332e029a0c910d28c51f279", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7251, "upload_time": "2019-11-18T05:47:57", "upload_time_iso_8601": "2019-11-18T05:47:57.039574Z", "url": "https://files.pythonhosted.org/packages/32/1c/5e885eba4ec1a58612a33bd248e40e6ab97254326aff280b24fb5a0d6ceb/traceanalyzer-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dab57f7576206d863c14f2ad4854cf09", "sha256": "76cf8f0c81503244d302928d9b9bbfee27a2136a9419ae926146d036ecde6173"}, "downloads": -1, "filename": "traceanalyzer-1.0.4.tar.gz", "has_sig": false, "md5_digest": "dab57f7576206d863c14f2ad4854cf09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10750, "upload_time": "2019-11-18T05:48:00", "upload_time_iso_8601": "2019-11-18T05:48:00.023108Z", "url": "https://files.pythonhosted.org/packages/c7/27/c2d986e3fa9de23d4527d8426f708488887246dd1572d33d76945ce42c75/traceanalyzer-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44997bed1332e029a0c910d28c51f279", "sha256": "6ebcfd8c462e03ed0cb9eb11266918a7eb0de1ea9e02f2ab0d5f8954e8e9cfda"}, "downloads": -1, "filename": "traceanalyzer-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "44997bed1332e029a0c910d28c51f279", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7251, "upload_time": "2019-11-18T05:47:57", "upload_time_iso_8601": "2019-11-18T05:47:57.039574Z", "url": "https://files.pythonhosted.org/packages/32/1c/5e885eba4ec1a58612a33bd248e40e6ab97254326aff280b24fb5a0d6ceb/traceanalyzer-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dab57f7576206d863c14f2ad4854cf09", "sha256": "76cf8f0c81503244d302928d9b9bbfee27a2136a9419ae926146d036ecde6173"}, "downloads": -1, "filename": "traceanalyzer-1.0.4.tar.gz", "has_sig": false, "md5_digest": "dab57f7576206d863c14f2ad4854cf09", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10750, "upload_time": "2019-11-18T05:48:00", "upload_time_iso_8601": "2019-11-18T05:48:00.023108Z", "url": "https://files.pythonhosted.org/packages/c7/27/c2d986e3fa9de23d4527d8426f708488887246dd1572d33d76945ce42c75/traceanalyzer-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:48:58 2020"}