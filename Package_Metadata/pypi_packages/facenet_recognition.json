{"info": {"author": "Ishwar Sawale", "author_email": "ishwar.code@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "Face Recognition\n================\n\nFace Recognition Based on Facenet\n\nBuilt using `Facenet <https://github.com/davidsandberg/facenet>`__'s\nstate-of-the-art face recognition built with deep learning. The model\nhas an accuracy of 99.2% on the `Labeled Faces in the\nWild <http://vis-www.cs.umass.edu/lfw/>`__ benchmark.\n\nFeatures\n--------\n\n-  Out of Box Working Face Recognition\n-  Choose Any Pre-Trained Model from Facenet\n-  For training just provide the proper folder structure\n-  Faster than other available solutions\n\nPrerequisites\n~~~~~~~~~~~~~\n\n-  You need Python(2.6 to 3.5) installed\n-  X-based System supported *(does work on Windows but not tested)*\n\nInstalling\n~~~~~~~~~~\n\n.. code:: python\n\n    pip install facenet_recognition\n\nSetup\n^^^^^\n\n**Create setup as follows:**\n\n1. Create input directory eg: input\\_images\n2. Create aligned images directory eg: aligned\\_images *Create this\n   directory we will store aligned images here*\n3. Create pre-trained model directory eg: pretrained\\_facenet\\_model\n   *Download Pre-Trained model from\n   `Facenet`* and keep it\n   in the pre\\_model directory\n4. Create my trained classifier directory eg: my\\_classifier *In this\n   directory we will save our trained model*\n\nLet's Begin\n-----------\n\nFor Facial Recognition we need to align images as follows:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    import facenet_recognition\n    facenet_recognition.align_input('input_images','aligned_images')\n\n*Above command will create our input images into aligned format and save\nit in given aligned images folder*\n\nTrain & Test Classifier on Images\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAfter we have aligned images now we can train our classifier.\n\n.. code:: python\n\n    pre_model='./pretrained_facenet_model/20170511-185253.pb' #locaiton of pret-trained model from Facenet\n    my_class ='./my_classifier/my_classifier.pkl' #location where we want to save\n    test_classifier_type = 'svm' #type of model either svm or nn\n    weight= './my_classifier/model_small.yaml' #local stored weights\n\n    facenet_recognition.test_train_classifier(aligned_images,pre_model,my_class,weight,test_classifier_type,nrof_train_images_per_class=30, seed=102)\n\n*Mininum Required Image per person*: *1* *Number of Images for Training\nper Person*: *30 (configurable)*\n\nTrain Classifer on Images(only Training)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis API is used to Train our Classifier on Aligned Images\n\n.. code:: python\n\n    pre_model='./pretrained_facenet_model/20170511-185253.pb' #locaiton of pret-trained model from Facenet\n    my_class ='./my_classifier/my_classifier.pkl' #location where we want to save\n    test_classifier_type = 'nn' #type of model either svm or nn\n    weight= './my_classifier/model_small.yaml' #local stored weights\n\n    facenet_recognition.create_classifier(aligned_images,pre_model,my_class,weight,test_classifier_type)\n\n*Mininum Required Image per person*: *1* *Number of Images for Training\nper Person*: *30 (fixed)*\n\nTest Classifer on Images\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis API is used to test our Trained Classifer\n\n.. code:: python\n\n    pre_model='./pretrained_facenet_model/20170511-185253.pb' #locaiton of pret-trained model from Facenet\n    my_class ='./my_classifier/my_classifier.pkl' #location where we want to save\n    test_classifier_type = 'nn' #type of model either svm or nn\n    weight= './my_classifier/model_small.yaml' #local stored weights\n\n    facenet_recognition.test_classifier(aligned_images,pre_model,my_class,weight,test_classifier_type)\n\n*Mininum Required Image per person*: *1*\n\nAuthors\n-------\n\n-  **Ishwar Sawale** -- `Visit Portfolio <http://ishwarsawale.com>`__\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the\n`LICENSE.md <LICENSE.md>`__ file for details\n\nAcknowledgments\n---------------\n\n-  Big Thanks to David Sandberg for Facent\n-  Inspired by Dlib based library face\\_recognition\n\n\nHistory\n=======\n\n0.1.4 (2018-28-03)\n------------------\n\n* First beta release.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ishwarsawale/facenet_recognition", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "facenet_recognition", "package_url": "https://pypi.org/project/facenet_recognition/", "platform": "", "project_url": "https://pypi.org/project/facenet_recognition/", "project_urls": {"Homepage": "http://github.com/ishwarsawale/facenet_recognition"}, "release_url": "https://pypi.org/project/facenet_recognition/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Face recognition based on Facenet", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"face-recognition\">\n<h2>Face Recognition</h2>\n<p>Face Recognition Based on Facenet</p>\n<p>Built using <a href=\"https://github.com/davidsandberg/facenet\" rel=\"nofollow\">Facenet</a>\u2019s\nstate-of-the-art face recognition built with deep learning. The model\nhas an accuracy of 99.2% on the <a href=\"http://vis-www.cs.umass.edu/lfw/\" rel=\"nofollow\">Labeled Faces in the\nWild</a> benchmark.</p>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Out of Box Working Face Recognition</li>\n<li>Choose Any Pre-Trained Model from Facenet</li>\n<li>For training just provide the proper folder structure</li>\n<li>Faster than other available solutions</li>\n</ul>\n<div id=\"prerequisites\">\n<h4>Prerequisites</h4>\n<ul>\n<li>You need Python(2.6 to 3.5) installed</li>\n<li>X-based System supported <em>(does work on Windows but not tested)</em></li>\n</ul>\n</div>\n<div id=\"installing\">\n<h4>Installing</h4>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">facenet_recognition</span>\n</pre>\n<div id=\"setup\">\n<h5>Setup</h5>\n<p><strong>Create setup as follows:</strong></p>\n<ol>\n<li>Create input directory eg: input_images</li>\n<li>Create aligned images directory eg: aligned_images <em>Create this\ndirectory we will store aligned images here</em></li>\n<li>Create pre-trained model directory eg: pretrained_facenet_model\n<em>Download Pre-Trained model from\n`Facenet`</em> and keep it\nin the pre_model directory</li>\n<li>Create my trained classifier directory eg: my_classifier <em>In this\ndirectory we will save our trained model</em></li>\n</ol>\n</div>\n</div>\n</div>\n<div id=\"let-s-begin\">\n<h3>Let\u2019s Begin</h3>\n<div id=\"for-facial-recognition-we-need-to-align-images-as-follows\">\n<h4>For Facial Recognition we need to align images as follows:</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">facenet_recognition</span>\n<span class=\"n\">facenet_recognition</span><span class=\"o\">.</span><span class=\"n\">align_input</span><span class=\"p\">(</span><span class=\"s1\">'input_images'</span><span class=\"p\">,</span><span class=\"s1\">'aligned_images'</span><span class=\"p\">)</span>\n</pre>\n<p><em>Above command will create our input images into aligned format and save\nit in given aligned images folder</em></p>\n</div>\n<div id=\"train-test-classifier-on-images\">\n<h4>Train &amp; Test Classifier on Images</h4>\n<p>After we have aligned images now we can train our classifier.</p>\n<pre><span class=\"n\">pre_model</span><span class=\"o\">=</span><span class=\"s1\">'./pretrained_facenet_model/20170511-185253.pb'</span> <span class=\"c1\">#locaiton of pret-trained model from Facenet</span>\n<span class=\"n\">my_class</span> <span class=\"o\">=</span><span class=\"s1\">'./my_classifier/my_classifier.pkl'</span> <span class=\"c1\">#location where we want to save</span>\n<span class=\"n\">test_classifier_type</span> <span class=\"o\">=</span> <span class=\"s1\">'svm'</span> <span class=\"c1\">#type of model either svm or nn</span>\n<span class=\"n\">weight</span><span class=\"o\">=</span> <span class=\"s1\">'./my_classifier/model_small.yaml'</span> <span class=\"c1\">#local stored weights</span>\n\n<span class=\"n\">facenet_recognition</span><span class=\"o\">.</span><span class=\"n\">test_train_classifier</span><span class=\"p\">(</span><span class=\"n\">aligned_images</span><span class=\"p\">,</span><span class=\"n\">pre_model</span><span class=\"p\">,</span><span class=\"n\">my_class</span><span class=\"p\">,</span><span class=\"n\">weight</span><span class=\"p\">,</span><span class=\"n\">test_classifier_type</span><span class=\"p\">,</span><span class=\"n\">nrof_train_images_per_class</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">102</span><span class=\"p\">)</span>\n</pre>\n<p><em>Mininum Required Image per person</em>: <em>1</em> <em>Number of Images for Training\nper Person</em>: <em>30 (configurable)</em></p>\n</div>\n<div id=\"train-classifer-on-images-only-training\">\n<h4>Train Classifer on Images(only Training)</h4>\n<p>This API is used to Train our Classifier on Aligned Images</p>\n<pre><span class=\"n\">pre_model</span><span class=\"o\">=</span><span class=\"s1\">'./pretrained_facenet_model/20170511-185253.pb'</span> <span class=\"c1\">#locaiton of pret-trained model from Facenet</span>\n<span class=\"n\">my_class</span> <span class=\"o\">=</span><span class=\"s1\">'./my_classifier/my_classifier.pkl'</span> <span class=\"c1\">#location where we want to save</span>\n<span class=\"n\">test_classifier_type</span> <span class=\"o\">=</span> <span class=\"s1\">'nn'</span> <span class=\"c1\">#type of model either svm or nn</span>\n<span class=\"n\">weight</span><span class=\"o\">=</span> <span class=\"s1\">'./my_classifier/model_small.yaml'</span> <span class=\"c1\">#local stored weights</span>\n\n<span class=\"n\">facenet_recognition</span><span class=\"o\">.</span><span class=\"n\">create_classifier</span><span class=\"p\">(</span><span class=\"n\">aligned_images</span><span class=\"p\">,</span><span class=\"n\">pre_model</span><span class=\"p\">,</span><span class=\"n\">my_class</span><span class=\"p\">,</span><span class=\"n\">weight</span><span class=\"p\">,</span><span class=\"n\">test_classifier_type</span><span class=\"p\">)</span>\n</pre>\n<p><em>Mininum Required Image per person</em>: <em>1</em> <em>Number of Images for Training\nper Person</em>: <em>30 (fixed)</em></p>\n</div>\n<div id=\"test-classifer-on-images\">\n<h4>Test Classifer on Images</h4>\n<p>This API is used to test our Trained Classifer</p>\n<pre><span class=\"n\">pre_model</span><span class=\"o\">=</span><span class=\"s1\">'./pretrained_facenet_model/20170511-185253.pb'</span> <span class=\"c1\">#locaiton of pret-trained model from Facenet</span>\n<span class=\"n\">my_class</span> <span class=\"o\">=</span><span class=\"s1\">'./my_classifier/my_classifier.pkl'</span> <span class=\"c1\">#location where we want to save</span>\n<span class=\"n\">test_classifier_type</span> <span class=\"o\">=</span> <span class=\"s1\">'nn'</span> <span class=\"c1\">#type of model either svm or nn</span>\n<span class=\"n\">weight</span><span class=\"o\">=</span> <span class=\"s1\">'./my_classifier/model_small.yaml'</span> <span class=\"c1\">#local stored weights</span>\n\n<span class=\"n\">facenet_recognition</span><span class=\"o\">.</span><span class=\"n\">test_classifier</span><span class=\"p\">(</span><span class=\"n\">aligned_images</span><span class=\"p\">,</span><span class=\"n\">pre_model</span><span class=\"p\">,</span><span class=\"n\">my_class</span><span class=\"p\">,</span><span class=\"n\">weight</span><span class=\"p\">,</span><span class=\"n\">test_classifier_type</span><span class=\"p\">)</span>\n</pre>\n<p><em>Mininum Required Image per person</em>: <em>1</em></p>\n</div>\n</div>\n<div id=\"authors\">\n<h3>Authors</h3>\n<ul>\n<li><strong>Ishwar Sawale</strong> \u2013 <a href=\"http://ishwarsawale.com\" rel=\"nofollow\">Visit Portfolio</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>This project is licensed under the MIT License - see the\n<a href=\"LICENSE.md\" rel=\"nofollow\">LICENSE.md</a> file for details</p>\n</div>\n<div id=\"acknowledgments\">\n<h3>Acknowledgments</h3>\n<ul>\n<li>Big Thanks to David Sandberg for Facent</li>\n<li>Inspired by Dlib based library face_recognition</li>\n</ul>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.1.4 (2018-28-03)</span></h2>\n<ul>\n<li>First beta release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3717224, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "b7c1b2a51028a951c07483a1dbc6cd4a", "sha256": "756f8879990c33e07f6e78db258587e79bf7ee63097061691736b21ffd6633e4"}, "downloads": -1, "filename": "facenet_recognition-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b7c1b2a51028a951c07483a1dbc6cd4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1884807, "upload_time": "2018-03-29T14:19:51", "upload_time_iso_8601": "2018-03-29T14:19:51.390368Z", "url": "https://files.pythonhosted.org/packages/f4/ca/bc3517970eb7b2e1b5bad99603f1c0313d3a6bf1a0aeaf60edf7973ac821/facenet_recognition-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7c1b2a51028a951c07483a1dbc6cd4a", "sha256": "756f8879990c33e07f6e78db258587e79bf7ee63097061691736b21ffd6633e4"}, "downloads": -1, "filename": "facenet_recognition-0.1.4.tar.gz", "has_sig": false, "md5_digest": "b7c1b2a51028a951c07483a1dbc6cd4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1884807, "upload_time": "2018-03-29T14:19:51", "upload_time_iso_8601": "2018-03-29T14:19:51.390368Z", "url": "https://files.pythonhosted.org/packages/f4/ca/bc3517970eb7b2e1b5bad99603f1c0313d3a6bf1a0aeaf60edf7973ac821/facenet_recognition-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:06 2020"}