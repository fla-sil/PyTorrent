{"info": {"author": "Matthias K\u00fcmmerer", "author_email": "matthias.kuemmerer@bethgelab.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: Eclipse Public License 1.0 (EPL-1.0)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "**This repository was forked from https://bitbucket.org/amitibo/cyipopt and is\nnow considered the primary repository.** The fork includes a SciPy-style\ninterface, ability to handle exceptions in the callback functions, and docker\ncontainer for easy usage.\n\n==================\nREADME for cyipopt\n==================\n\nIpopt_ (Interior Point OPTimizer, pronounced eye-pea-opt) is a software package\nfor large-scale nonlinear optimization. Ipopt is available from the COIN-OR_\ninitiative, under the Eclipse Public License (EPL).\n\ncyipopt is a Python wrapper around Ipopt. It enables using Ipopt from the\ncomfort of the Python programming language.\n\n.. _Ipopt: https://projects.coin-or.org/Ipopt\n.. _COIN-OR: https://projects.coin-or.org/\n\nUsage\n=====\n\nFor simple cases where you do not need the full power of sparse and structured\nJacobians etc, ``cyipopt`` provides the function ``minimize_ipopt`` which has\nthe same behaviour as ``scipy.optimize.minimize``, for example:\n\n.. code:: python\n\n    from scipy.optimize import rosen, rosen_der\n    from ipopt import minimize_ipopt\n    x0 = [1.3, 0.7, 0.8, 1.9, 1.2]\n    res = minimize_ipopt(rosen, x0, jac=rosen_der)\n    print(res)\n\nInstallation\n============\n\nThe `Anaconda Python Distribution <https://www.continuum.io/why-anaconda>`_ is\none of the easiest ways to install Python and associated packages for Linux,\nMac, and Windows. Once Anaconda (or miniconda) is installed, you can install\ncyipopt on Linux and Mac from the Conda Forge channel with::\n\n   $ conda install -c conda-forge cyipopt\n\nThe above command will install binary versions of all the necessary\ndependencies and cyipopt. Note that there currently are no Windows binaries.\nYou will have to install from source from Windows or if you want a customized\ninstallation, e.g. with MKL, HSL, etc.\n\nTo begin installing from source you will need to install the following\ndependencies:\n\n  * C/C++ compiler\n  * pkg-config [only for Linux and Mac]\n  * Ipopt\n  * Python 2.7 or 3.4+\n  * setuptools\n  * cython\n  * numpy\n  * six\n  * future\n  * scipy [optiional]\n\nThe binaries and header files of the Ipopt package can be obtained from\nhttp://www.coin-or.org/download/binary/Ipopt/. These include a version compiled\nagainst the MKL library. Or you can build Ipopt from source. The remaining\ndependencies can be installed with conda or other package managers.\n\nDownload the source files of cyipopt and update ``setup.py`` to point to the\nheader files and binaries of the Ipopt package, if ``LD_LIBRARY_PATH`` and\n``pkg_config`` are not setup to find ipopt on their own.\n\nThen, execute::\n\n   $ python setup.py install\n\nDocker container\n================\n\nThe subdirectory ``docker`` contains a docker container with preinstalled ipopt\nand cyipopt.  To build the container, cd into the ``docker`` directory and run\n``make``. Then you can start the container by::\n\n   $ docker run -it matthiask/ipopt /bin/bash\n\nand either call ``ipopt`` directly or start a ipython shell and ``import ipopt``.\n\nVagrant environment\n===================\n\nThe subdirectory ``vagrant`` contains a ``Vagrantfile`` that installs ipopt and\ncyipopt in OS provision. To build the environment, cd into the ``vagrant``\ndirectory and run ``vagrant up`` (Requires that you have Vagrant+VirtualBox\ninstalled). Then you can access the system by::\n\n   $ vagrant ssh\n\nand either call ``ipopt`` directly or start a python shell and ``import\nipopt``.  Also, if you get `source files\n<http://www.coin-or.org/download/binary/Ipopt/>` of coinhsl and put it in the\n``vagrant`` directory, the vagrant provision will detect and add them in the\nipopt compiling process, and then you will have ma57, ma27, and other solvers\navailable on ipopt binary (ma97 and mc68 were removed to avoid compilation\nerrors).\n\nReading the docs\n================\n\nAfter installing::\n\n   $ cd doc\n   $ make html\n\nThen, direct your browser to ``build/html/index.html``.\n\nTesting\n=======\n\nYou can test the installation by running the examples under the folder ``test\\``.\n\nConditions of use\n=================\n\ncyipopt is open-source code released under the EPL_ license.\n\n.. _EPL: http://www.eclipse.org/legal/epl-v10.html\n\nContributing\n============\n\nFor bug reports use the github issue tracker. You can also send wishes,\ncomments, patches, etc. to matthias.kuemmerer@bethgelab.org", "description_content_type": "", "docs_url": "https://pythonhosted.org/ipopt/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/matthias-k/cyipopt", "keywords": "optimization", "license": "EPL-1.0", "maintainer": "", "maintainer_email": "", "name": "ipopt", "package_url": "https://pypi.org/project/ipopt/", "platform": "", "project_url": "https://pypi.org/project/ipopt/", "project_urls": {"Homepage": "https://github.com/matthias-k/cyipopt"}, "release_url": "https://pypi.org/project/ipopt/0.1.9/", "requires_dist": null, "requires_python": "", "summary": "A Cython wrapper to the IPOPT optimization package", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>This repository was forked from https://bitbucket.org/amitibo/cyipopt and is\nnow considered the primary repository.</strong> The fork includes a SciPy-style\ninterface, ability to handle exceptions in the callback functions, and docker\ncontainer for easy usage.</p>\n<div id=\"readme-for-cyipopt\">\n<h2>README for cyipopt</h2>\n<p><a href=\"https://projects.coin-or.org/Ipopt\" rel=\"nofollow\">Ipopt</a> (Interior Point OPTimizer, pronounced eye-pea-opt) is a software package\nfor large-scale nonlinear optimization. Ipopt is available from the <a href=\"https://projects.coin-or.org/\" rel=\"nofollow\">COIN-OR</a>\ninitiative, under the Eclipse Public License (EPL).</p>\n<p>cyipopt is a Python wrapper around Ipopt. It enables using Ipopt from the\ncomfort of the Python programming language.</p>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>For simple cases where you do not need the full power of sparse and structured\nJacobians etc, <tt>cyipopt</tt> provides the function <tt>minimize_ipopt</tt> which has\nthe same behaviour as <tt>scipy.optimize.minimize</tt>, for example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">scipy.optimize</span> <span class=\"kn\">import</span> <span class=\"n\">rosen</span><span class=\"p\">,</span> <span class=\"n\">rosen_der</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ipopt</span> <span class=\"kn\">import</span> <span class=\"n\">minimize_ipopt</span>\n<span class=\"n\">x0</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">1.3</span><span class=\"p\">,</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span> <span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"mf\">1.9</span><span class=\"p\">,</span> <span class=\"mf\">1.2</span><span class=\"p\">]</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">minimize_ipopt</span><span class=\"p\">(</span><span class=\"n\">rosen</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"p\">,</span> <span class=\"n\">jac</span><span class=\"o\">=</span><span class=\"n\">rosen_der</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>The <a href=\"https://www.continuum.io/why-anaconda\" rel=\"nofollow\">Anaconda Python Distribution</a> is\none of the easiest ways to install Python and associated packages for Linux,\nMac, and Windows. Once Anaconda (or miniconda) is installed, you can install\ncyipopt on Linux and Mac from the Conda Forge channel with:</p>\n<pre>$ conda install -c conda-forge cyipopt\n</pre>\n<p>The above command will install binary versions of all the necessary\ndependencies and cyipopt. Note that there currently are no Windows binaries.\nYou will have to install from source from Windows or if you want a customized\ninstallation, e.g. with MKL, HSL, etc.</p>\n<p>To begin installing from source you will need to install the following\ndependencies:</p>\n<blockquote>\n<ul>\n<li>C/C++ compiler</li>\n<li>pkg-config [only for Linux and Mac]</li>\n<li>Ipopt</li>\n<li>Python 2.7 or 3.4+</li>\n<li>setuptools</li>\n<li>cython</li>\n<li>numpy</li>\n<li>six</li>\n<li>future</li>\n<li>scipy [optiional]</li>\n</ul>\n</blockquote>\n<p>The binaries and header files of the Ipopt package can be obtained from\n<a href=\"http://www.coin-or.org/download/binary/Ipopt/\" rel=\"nofollow\">http://www.coin-or.org/download/binary/Ipopt/</a>. These include a version compiled\nagainst the MKL library. Or you can build Ipopt from source. The remaining\ndependencies can be installed with conda or other package managers.</p>\n<p>Download the source files of cyipopt and update <tt>setup.py</tt> to point to the\nheader files and binaries of the Ipopt package, if <tt>LD_LIBRARY_PATH</tt> and\n<tt>pkg_config</tt> are not setup to find ipopt on their own.</p>\n<p>Then, execute:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"docker-container\">\n<h3>Docker container</h3>\n<p>The subdirectory <tt>docker</tt> contains a docker container with preinstalled ipopt\nand cyipopt.  To build the container, cd into the <tt>docker</tt> directory and run\n<tt>make</tt>. Then you can start the container by:</p>\n<pre>$ docker run -it matthiask/ipopt /bin/bash\n</pre>\n<p>and either call <tt>ipopt</tt> directly or start a ipython shell and <tt>import ipopt</tt>.</p>\n</div>\n<div id=\"vagrant-environment\">\n<h3>Vagrant environment</h3>\n<p>The subdirectory <tt>vagrant</tt> contains a <tt>Vagrantfile</tt> that installs ipopt and\ncyipopt in OS provision. To build the environment, cd into the <tt>vagrant</tt>\ndirectory and run <tt>vagrant up</tt> (Requires that you have Vagrant+VirtualBox\ninstalled). Then you can access the system by:</p>\n<pre>$ vagrant ssh\n</pre>\n<p>and either call <tt>ipopt</tt> directly or start a python shell and <tt>import\nipopt</tt>.  Also, if you get <cite>source files\n&lt;http://www.coin-or.org/download/binary/Ipopt/&gt;</cite> of coinhsl and put it in the\n<tt>vagrant</tt> directory, the vagrant provision will detect and add them in the\nipopt compiling process, and then you will have ma57, ma27, and other solvers\navailable on ipopt binary (ma97 and mc68 were removed to avoid compilation\nerrors).</p>\n</div>\n<div id=\"reading-the-docs\">\n<h3>Reading the docs</h3>\n<p>After installing:</p>\n<pre>$ cd doc\n$ make html\n</pre>\n<p>Then, direct your browser to <tt>build/html/index.html</tt>.</p>\n</div>\n<div id=\"testing\">\n<h3>Testing</h3>\n<p>You can test the installation by running the examples under the folder <tt>test\\</tt>.</p>\n</div>\n<div id=\"conditions-of-use\">\n<h3>Conditions of use</h3>\n<p>cyipopt is open-source code released under the <a href=\"http://www.eclipse.org/legal/epl-v10.html\" rel=\"nofollow\">EPL</a> license.</p>\n</div>\n<div id=\"contributing\">\n<h3>Contributing</h3>\n<p>For bug reports use the github issue tracker. You can also send wishes,\ncomments, patches, etc. to <a href=\"mailto:matthias.kuemmerer%40bethgelab.org\">matthias<span>.</span>kuemmerer<span>@</span>bethgelab<span>.</span>org</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4304725, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "62ad52c590406aabea4ad874329914bc", "sha256": "58567510425d43566934a77cd8e7022aa2538a83eaaf8ec01ac09a0bb7437092"}, "downloads": -1, "filename": "ipopt-0.1.3.zip", "has_sig": false, "md5_digest": "62ad52c590406aabea4ad874329914bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109517, "upload_time": "2012-06-10T08:09:39", "upload_time_iso_8601": "2012-06-10T08:09:39.949623Z", "url": "https://files.pythonhosted.org/packages/c3/38/805ae1e59a4fc51831d04fd8b6d7b54cc055a40d2049d7daf2845e34e34a/ipopt-0.1.3.zip", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2a59a5055a88a70710f042bb01838b5b", "sha256": "c78406505e5c89fcdd184401d0482c6a29980c876250530ee3e015f3d72825f9"}, "downloads": -1, "filename": "ipopt-0.1.7.tar.gz", "has_sig": false, "md5_digest": "2a59a5055a88a70710f042bb01838b5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39272, "upload_time": "2018-09-20T04:21:37", "upload_time_iso_8601": "2018-09-20T04:21:37.036011Z", "url": "https://files.pythonhosted.org/packages/e6/1b/808efe1697386b150290b784d8c8d04515637fffa0a8d7bcbc2b0f8d0bc0/ipopt-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "d7673ab026c389a7f0695d8749ac2253", "sha256": "ec7a22334353e50f1a7ae36865771a6c08e1fd4b165cf63676ea3cc1cad770c9"}, "downloads": -1, "filename": "ipopt-0.1.8.tar.gz", "has_sig": false, "md5_digest": "d7673ab026c389a7f0695d8749ac2253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41580, "upload_time": "2018-09-22T20:46:20", "upload_time_iso_8601": "2018-09-22T20:46:20.807259Z", "url": "https://files.pythonhosted.org/packages/f1/4a/b2d9b4e4290337ed74b0cbaf020c3b7724f9d90763b9dfcdec9d93a5d2b8/ipopt-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "0fd70fb9157198fc63dde95814aef74e", "sha256": "b5f443062327d534283cbc499ecab294edca9d7ae0b46c26c459172ce9cc7bed"}, "downloads": -1, "filename": "ipopt-0.1.9.tar.gz", "has_sig": false, "md5_digest": "0fd70fb9157198fc63dde95814aef74e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 143451, "upload_time": "2018-09-24T13:34:50", "upload_time_iso_8601": "2018-09-24T13:34:50.595685Z", "url": "https://files.pythonhosted.org/packages/05/57/a7c5a86a8f899c5c109f30b8cdb278b64c43bd2ea04172cbfed721a98fac/ipopt-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0fd70fb9157198fc63dde95814aef74e", "sha256": "b5f443062327d534283cbc499ecab294edca9d7ae0b46c26c459172ce9cc7bed"}, "downloads": -1, "filename": "ipopt-0.1.9.tar.gz", "has_sig": false, "md5_digest": "0fd70fb9157198fc63dde95814aef74e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 143451, "upload_time": "2018-09-24T13:34:50", "upload_time_iso_8601": "2018-09-24T13:34:50.595685Z", "url": "https://files.pythonhosted.org/packages/05/57/a7c5a86a8f899c5c109f30b8cdb278b64c43bd2ea04172cbfed721a98fac/ipopt-0.1.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:35 2020"}