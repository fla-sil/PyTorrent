{"info": {"author": "ExportComments", "author_email": "support@exportcomments.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# ExportComments API for Python\n\nOfficial Python client for the [ExportComments API](https://exportcomments.com/api/). Build and run machine learning models for language processing from your Python apps.\n\n\nInstallation\n---------------\n\n\nYou can use pip to install the library:\n\n```bash\n$ pip install exportcomments\n```\n\nAlternatively, you can just clone the repository and run the setup.py script:\n\n```bash\n$ python setup.py install\n```\n\n\nUsage\n------\n\n\nBefore making requests to the API, you need to create an instance of the ExportComments client. You will have to use your [account API Key](https://exportcomments.com/pricing):\n\n```python\nfrom exportcomments import ExportComments\n\n# Instantiate the client Using your API key\nex = ExportComments('<YOUR API TOKEN HERE>')\n```\n\n### Usage Examples\n\nFrom the ExportComments client instance, you can call any endpoint:\n\n## Check export\n\n```python\nresponse = ex.exports.check(\n    uniqueId='dfd6a2f2-5579-421f-96ac-98993d0edea1'\n)\n\n```\n\n### Responses\n\nThe response object returned by every endpoint call is a `ExportCommentsResponse` object. The `body` attribute has the parsed response from the API:\n\n```python\nprint(response.body)\n# =>  [\n# =>    {\n# =>      \"url\": \"https://www.instagram.com/p/1234567\",\n# =>      \"datecreated\": \"2016-08-26T07:32:09+00:00\",\n# =>      \"uniqueId\": \"dfd6a2f2-5579-421f-96ac-98993d0edea1\",\n# =>      \"done\": true,\n# =>      \"dateexported\": \"2016-08-26T07:32:27+00:00\",\n# =>      \"error\": null,\n# =>      \"total\": 306,\n# =>      \"totalExported\": 306,\n# =>      \"replies\": true,\n# =>      \"dateNotified\": null,\n# =>      \"repliesCount\": 0,\n# =>      \"downloadUrl\": \"/exports/comments5d638af93ab70-1234567.xlsx\",\n# =>      \"rawUrl\": \"/exports/6dbf1a87e0fb1f7f16b25be55bb37647-148d4d42-9db8-4e5a-9b51-a860e3646cb0.json\"\n# =>    }\n# =>  ]\n```\n\n\n## Create export\n\n```python\nresponse = ex.export.create(\n    url='https://www.instagram.com/p/1234567', replies='false', twitterType=None\n)\n\n```\n\n### Responses\n\nThe response object returned by every endpoint call is a `ExportCommentsResponse` object. The `body` attribute has the parsed response from the API:\n\n```python\nprint(response.body)\n# =>    {\n# =>        \"uniqueId\": \"dfd6a2f2-5579-421f-96ac-98993d0edea1\",\n# =>        \"date_created\": \"2016-08-26T07:32:09+00:00\",\n# =>        \"status\": false,\n# =>        \"error\": null\n# =>    }\n\n```\n\n\n### Errors\n\nEndpoint calls may raise exceptions. Here is an example on how to handle them:\n\n```python\nfrom exportcomments.exceptions import PlanQueryLimitError, ExportCommentsException\n\ntry:\n    response = ex.export.create(url='https://www.instagram.com/p/1234567', replies='false', twitterType=None)\nexcept PlanQueryLimitError as e:\n    # No monthly queries left\n    # e.response contains the ExportCommentsResponse object\n    print(e.error_code, e.detail)\nexcept ExportCommentsException:\n    raise\n```\n\nAvailable exceptions:\n\n| class                       | Description |\n|-----------------------------|-------------|\n| `ExportCommentsException`      | Base class for every exception below.                                  |\n| `RequestParamsError`        | An invalid parameter was sent. Check the exception message or response object for more information. |\n| `AuthenticationError`       | Authentication failed, usually because an invalid token was provided. Check the exception message. |\n| `ForbiddenError`            | You don't have permissions to perform the action on the given resource. |\n| `PlanRateLimitError`        | You have sent too many requests in the last minute.|\n| `ConcurrencyRateLimitError` | You have sent too many requests in the last second. |", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/exportcomments/exportcomments-python/tarball/v1.0.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/exportcomments/exportcomments-python", "keywords": "exportcomments,export social media comments,python", "license": "", "maintainer": "", "maintainer_email": "", "name": "exportcomments", "package_url": "https://pypi.org/project/exportcomments/", "platform": "", "project_url": "https://pypi.org/project/exportcomments/", "project_urls": {"Download": "https://github.com/exportcomments/exportcomments-python/tarball/v1.0.0", "Homepage": "https://github.com/exportcomments/exportcomments-python"}, "release_url": "https://pypi.org/project/exportcomments/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Official Python client for the ExportComments API", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ExportComments API for Python</h1>\n<p>Official Python client for the <a href=\"https://exportcomments.com/api/\" rel=\"nofollow\">ExportComments API</a>. Build and run machine learning models for language processing from your Python apps.</p>\n<h2>Installation</h2>\n<p>You can use pip to install the library:</p>\n<pre>$ pip install exportcomments\n</pre>\n<p>Alternatively, you can just clone the repository and run the setup.py script:</p>\n<pre>$ python setup.py install\n</pre>\n<h2>Usage</h2>\n<p>Before making requests to the API, you need to create an instance of the ExportComments client. You will have to use your <a href=\"https://exportcomments.com/pricing\" rel=\"nofollow\">account API Key</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">exportcomments</span> <span class=\"kn\">import</span> <span class=\"n\">ExportComments</span>\n\n<span class=\"c1\"># Instantiate the client Using your API key</span>\n<span class=\"n\">ex</span> <span class=\"o\">=</span> <span class=\"n\">ExportComments</span><span class=\"p\">(</span><span class=\"s1\">'&lt;YOUR API TOKEN HERE&gt;'</span><span class=\"p\">)</span>\n</pre>\n<h3>Usage Examples</h3>\n<p>From the ExportComments client instance, you can call any endpoint:</p>\n<h2>Check export</h2>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">ex</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span>\n    <span class=\"n\">uniqueId</span><span class=\"o\">=</span><span class=\"s1\">'dfd6a2f2-5579-421f-96ac-98993d0edea1'</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Responses</h3>\n<p>The response object returned by every endpoint call is a <code>ExportCommentsResponse</code> object. The <code>body</code> attribute has the parsed response from the API:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n<span class=\"c1\"># =&gt;  [</span>\n<span class=\"c1\"># =&gt;    {</span>\n<span class=\"c1\"># =&gt;      \"url\": \"https://www.instagram.com/p/1234567\",</span>\n<span class=\"c1\"># =&gt;      \"datecreated\": \"2016-08-26T07:32:09+00:00\",</span>\n<span class=\"c1\"># =&gt;      \"uniqueId\": \"dfd6a2f2-5579-421f-96ac-98993d0edea1\",</span>\n<span class=\"c1\"># =&gt;      \"done\": true,</span>\n<span class=\"c1\"># =&gt;      \"dateexported\": \"2016-08-26T07:32:27+00:00\",</span>\n<span class=\"c1\"># =&gt;      \"error\": null,</span>\n<span class=\"c1\"># =&gt;      \"total\": 306,</span>\n<span class=\"c1\"># =&gt;      \"totalExported\": 306,</span>\n<span class=\"c1\"># =&gt;      \"replies\": true,</span>\n<span class=\"c1\"># =&gt;      \"dateNotified\": null,</span>\n<span class=\"c1\"># =&gt;      \"repliesCount\": 0,</span>\n<span class=\"c1\"># =&gt;      \"downloadUrl\": \"/exports/comments5d638af93ab70-1234567.xlsx\",</span>\n<span class=\"c1\"># =&gt;      \"rawUrl\": \"/exports/6dbf1a87e0fb1f7f16b25be55bb37647-148d4d42-9db8-4e5a-9b51-a860e3646cb0.json\"</span>\n<span class=\"c1\"># =&gt;    }</span>\n<span class=\"c1\"># =&gt;  ]</span>\n</pre>\n<h2>Create export</h2>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">ex</span><span class=\"o\">.</span><span class=\"n\">export</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'https://www.instagram.com/p/1234567'</span><span class=\"p\">,</span> <span class=\"n\">replies</span><span class=\"o\">=</span><span class=\"s1\">'false'</span><span class=\"p\">,</span> <span class=\"n\">twitterType</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n<span class=\"p\">)</span>\n</pre>\n<h3>Responses</h3>\n<p>The response object returned by every endpoint call is a <code>ExportCommentsResponse</code> object. The <code>body</code> attribute has the parsed response from the API:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">body</span><span class=\"p\">)</span>\n<span class=\"c1\"># =&gt;    {</span>\n<span class=\"c1\"># =&gt;        \"uniqueId\": \"dfd6a2f2-5579-421f-96ac-98993d0edea1\",</span>\n<span class=\"c1\"># =&gt;        \"date_created\": \"2016-08-26T07:32:09+00:00\",</span>\n<span class=\"c1\"># =&gt;        \"status\": false,</span>\n<span class=\"c1\"># =&gt;        \"error\": null</span>\n<span class=\"c1\"># =&gt;    }</span>\n</pre>\n<h3>Errors</h3>\n<p>Endpoint calls may raise exceptions. Here is an example on how to handle them:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">exportcomments.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">PlanQueryLimitError</span><span class=\"p\">,</span> <span class=\"n\">ExportCommentsException</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">ex</span><span class=\"o\">.</span><span class=\"n\">export</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'https://www.instagram.com/p/1234567'</span><span class=\"p\">,</span> <span class=\"n\">replies</span><span class=\"o\">=</span><span class=\"s1\">'false'</span><span class=\"p\">,</span> <span class=\"n\">twitterType</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">PlanQueryLimitError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"c1\"># No monthly queries left</span>\n    <span class=\"c1\"># e.response contains the ExportCommentsResponse object</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">error_code</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">detail</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">ExportCommentsException</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span>\n</pre>\n<p>Available exceptions:</p>\n<table>\n<thead>\n<tr>\n<th>class</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>ExportCommentsException</code></td>\n<td>Base class for every exception below.</td>\n</tr>\n<tr>\n<td><code>RequestParamsError</code></td>\n<td>An invalid parameter was sent. Check the exception message or response object for more information.</td>\n</tr>\n<tr>\n<td><code>AuthenticationError</code></td>\n<td>Authentication failed, usually because an invalid token was provided. Check the exception message.</td>\n</tr>\n<tr>\n<td><code>ForbiddenError</code></td>\n<td>You don't have permissions to perform the action on the given resource.</td>\n</tr>\n<tr>\n<td><code>PlanRateLimitError</code></td>\n<td>You have sent too many requests in the last minute.</td>\n</tr>\n<tr>\n<td><code>ConcurrencyRateLimitError</code></td>\n<td>You have sent too many requests in the last second.</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6047031, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "b9fb8eadaa60c21419dc494fba1f3b29", "sha256": "2aed02b03ac983c4083cad36eae6dbe1ec79a21e34ef9cbe778096c3b5a9d7b8"}, "downloads": -1, "filename": "exportcomments-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b9fb8eadaa60c21419dc494fba1f3b29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6014, "upload_time": "2019-10-29T13:08:03", "upload_time_iso_8601": "2019-10-29T13:08:03.640833Z", "url": "https://files.pythonhosted.org/packages/ec/2c/dc52976effe138adc6b8f5484c1802bb4664ca6b977e2ac1e3d414b8903e/exportcomments-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b9fb8eadaa60c21419dc494fba1f3b29", "sha256": "2aed02b03ac983c4083cad36eae6dbe1ec79a21e34ef9cbe778096c3b5a9d7b8"}, "downloads": -1, "filename": "exportcomments-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b9fb8eadaa60c21419dc494fba1f3b29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6014, "upload_time": "2019-10-29T13:08:03", "upload_time_iso_8601": "2019-10-29T13:08:03.640833Z", "url": "https://files.pythonhosted.org/packages/ec/2c/dc52976effe138adc6b8f5484c1802bb4664ca6b977e2ac1e3d414b8903e/exportcomments-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:36 2020"}