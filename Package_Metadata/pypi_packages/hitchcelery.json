{"info": {"author": "Colm O'Connor", "author_email": "colm.oconnor.github@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: Unix", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Utilities"], "description": "HitchCelery\n===========\n\nHitchCelery is a plugin for the Hitch test framework that lets you run and\ninteract with Celery as part of a test.\n\n\nUse with Hitch\n==============\n\nInstall like so::\n\n    $ hitch install hitchcelery\n\n\n.. code-block:: python\n\n        # Service definition in engine's setUp:\n        self.services['Celery'] = hitchcelery.CeleryService(\n            version=\"3.1.17\",                                       # Mandatory\n            python=\"{}/venv/bin/python\".format(PROJECT_DIRECTORY),  # Mandatory\n            app=\"remindme\",                                         # Mandatory\n            beat=False,                                             # Optional (default: False)\n            concurrency=2,                                          # Optional (default: 2)\n            loglevel=\"INFO\",                                        # Optional (default: INFO)\n            broker=None,                                            # Optional (default: None)\n            needs=[ self.services['Redis'], ]                       # Optional (default: no prerequisites)\n        )\n\n\n        # Interact during the test:\n        self.services['Celery'].help().run()\n        [ Prints output ]\n\n        self.services['Celery'].status().run()\n        [ Prints status output ]\n\n        self.services['Celery'].control(*args).run()\n        [ Prints output ]\n\n        self.services['Celery'].inspect(*args).run()\n        [ Prints output ]\n\n\nSee this service in action at the DjangoRemindMe_ project.\n\n\n.. _HitchServe: https://github.com/hitchtest/hitchserve\n.. _DjangoRemindMe: https://github.com/hitchtest/django-remindme", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://hitch.readthedocs.org/", "keywords": "hitch testing framework bdd tdd declarative tests testing service celery django", "license": "AGPL", "maintainer": null, "maintainer_email": null, "name": "hitchcelery", "package_url": "https://pypi.org/project/hitchcelery/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/hitchcelery/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://hitch.readthedocs.org/"}, "release_url": "https://pypi.org/project/hitchcelery/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Plugin to run Celery using the Hitch testing framework.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"hitchcelery\">\n<h2>HitchCelery</h2>\n<p>HitchCelery is a plugin for the Hitch test framework that lets you run and\ninteract with Celery as part of a test.</p>\n</div>\n<div id=\"use-with-hitch\">\n<h2>Use with Hitch</h2>\n<p>Install like so:</p>\n<pre>$ hitch install hitchcelery\n</pre>\n<pre><span class=\"c1\"># Service definition in engine's setUp:</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"p\">[</span><span class=\"s1\">'Celery'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">hitchcelery</span><span class=\"o\">.</span><span class=\"n\">CeleryService</span><span class=\"p\">(</span>\n    <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">\"3.1.17\"</span><span class=\"p\">,</span>                                       <span class=\"c1\"># Mandatory</span>\n    <span class=\"n\">python</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">/venv/bin/python\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">PROJECT_DIRECTORY</span><span class=\"p\">),</span>  <span class=\"c1\"># Mandatory</span>\n    <span class=\"n\">app</span><span class=\"o\">=</span><span class=\"s2\">\"remindme\"</span><span class=\"p\">,</span>                                         <span class=\"c1\"># Mandatory</span>\n    <span class=\"n\">beat</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>                                             <span class=\"c1\"># Optional (default: False)</span>\n    <span class=\"n\">concurrency</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>                                          <span class=\"c1\"># Optional (default: 2)</span>\n    <span class=\"n\">loglevel</span><span class=\"o\">=</span><span class=\"s2\">\"INFO\"</span><span class=\"p\">,</span>                                        <span class=\"c1\"># Optional (default: INFO)</span>\n    <span class=\"n\">broker</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>                                            <span class=\"c1\"># Optional (default: None)</span>\n    <span class=\"n\">needs</span><span class=\"o\">=</span><span class=\"p\">[</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"p\">[</span><span class=\"s1\">'Redis'</span><span class=\"p\">],</span> <span class=\"p\">]</span>                       <span class=\"c1\"># Optional (default: no prerequisites)</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Interact during the test:</span>\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"p\">[</span><span class=\"s1\">'Celery'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">help</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"p\">[</span> <span class=\"n\">Prints</span> <span class=\"n\">output</span> <span class=\"p\">]</span>\n\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"p\">[</span><span class=\"s1\">'Celery'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"p\">[</span> <span class=\"n\">Prints</span> <span class=\"n\">status</span> <span class=\"n\">output</span> <span class=\"p\">]</span>\n\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"p\">[</span><span class=\"s1\">'Celery'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">control</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"p\">[</span> <span class=\"n\">Prints</span> <span class=\"n\">output</span> <span class=\"p\">]</span>\n\n<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">services</span><span class=\"p\">[</span><span class=\"s1\">'Celery'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">inspect</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"p\">[</span> <span class=\"n\">Prints</span> <span class=\"n\">output</span> <span class=\"p\">]</span>\n</pre>\n<p>See this service in action at the <a href=\"https://github.com/hitchtest/django-remindme\" rel=\"nofollow\">DjangoRemindMe</a> project.</p>\n</div>\n\n          </div>"}, "last_serial": 1601459, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b7dc43d9fb4f842fe075864e65bc40a1", "sha256": "11060adeebdb585fa56d9d19db816aa783ebd2cb6ef25aed33b9429ee2256a07"}, "downloads": -1, "filename": "hitchcelery-0.1.tar.gz", "has_sig": false, "md5_digest": "b7dc43d9fb4f842fe075864e65bc40a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3041, "upload_time": "2015-06-07T05:49:17", "upload_time_iso_8601": "2015-06-07T05:49:17.153098Z", "url": "https://files.pythonhosted.org/packages/84/57/6679290f1ada2068a800dea3998a8c4c987991e41925eaef231e7e4dd97d/hitchcelery-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "d50062e07edec6598b3a6628c35ac093", "sha256": "7ac67415cc64358821c127abd32749761e93aff258b6c49da06346f22c6a311a"}, "downloads": -1, "filename": "hitchcelery-0.2.tar.gz", "has_sig": false, "md5_digest": "d50062e07edec6598b3a6628c35ac093", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3033, "upload_time": "2015-06-21T06:02:51", "upload_time_iso_8601": "2015-06-21T06:02:51.696380Z", "url": "https://files.pythonhosted.org/packages/17/7c/050985a6b9b24b6ae242a69121b0a6363b8ea6fc388e8bd1edc30a62b552/hitchcelery-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "67abb13c9a9361b0f9b185256d0336b2", "sha256": "ec472f354137893fc1b247c23f545ec74ccee3bbf42b7de0033f6444bb797a22"}, "downloads": -1, "filename": "hitchcelery-0.2.1.tar.gz", "has_sig": false, "md5_digest": "67abb13c9a9361b0f9b185256d0336b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3049, "upload_time": "2015-06-22T04:46:37", "upload_time_iso_8601": "2015-06-22T04:46:37.602897Z", "url": "https://files.pythonhosted.org/packages/2a/38/60173dc7ce8798f599d4ea48012fc72baf67696a909e81188ce5371735f4/hitchcelery-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "67abb13c9a9361b0f9b185256d0336b2", "sha256": "ec472f354137893fc1b247c23f545ec74ccee3bbf42b7de0033f6444bb797a22"}, "downloads": -1, "filename": "hitchcelery-0.2.1.tar.gz", "has_sig": false, "md5_digest": "67abb13c9a9361b0f9b185256d0336b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3049, "upload_time": "2015-06-22T04:46:37", "upload_time_iso_8601": "2015-06-22T04:46:37.602897Z", "url": "https://files.pythonhosted.org/packages/2a/38/60173dc7ce8798f599d4ea48012fc72baf67696a909e81188ce5371735f4/hitchcelery-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:03 2020"}