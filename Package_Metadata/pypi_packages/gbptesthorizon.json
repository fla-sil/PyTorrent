{"info": {"author": "OpenStack", "author_email": "openstack-dev@lists.openstack.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: OpenStack", "Framework :: Django", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP"], "description": "=============================\r\nHorizon (OpenStack Dashboard)\r\n=============================\r\n\r\nHorizon is a Django-based project aimed at providing a complete OpenStack\r\nDashboard along with an extensible framework for building new dashboards\r\nfrom reusable components. The ``openstack_dashboard`` module is a reference\r\nimplementation of a Django site that uses the ``horizon`` app to provide\r\nweb-based interactions with the various OpenStack projects.\r\n\r\nFor release management:\r\n\r\n * https://launchpad.net/horizon\r\n\r\nFor blueprints and feature specifications:\r\n\r\n * https://blueprints.launchpad.net/horizon\r\n\r\nFor issue tracking:\r\n\r\n * https://bugs.launchpad.net/horizon\r\n\r\n\r\nGetting Started\r\n===============\r\n\r\nFor local development, first create a virtualenv for the project.\r\nIn the ``tools`` directory there is a script to create one for you::\r\n\r\n  $ python tools/install_venv.py\r\n\r\nAlternatively, the ``run_tests.sh`` script will also install the environment\r\nfor you and then run the full test suite to verify everything is installed\r\nand functioning correctly.\r\n\r\nNow that the virtualenv is created, you need to configure your local\r\nenvironment.  To do this, create a ``local_settings.py`` file in the\r\n``openstack_dashboard/local/`` directory.  There is a\r\n``local_settings.py.example`` file there that may be used as a template.\r\n\r\nIf all is well you should able to run the development server locally::\r\n\r\n  $ tools/with_venv.sh ./manage.py runserver\r\n\r\nor, as a shortcut::\r\n\r\n  $ ./run_tests.sh --runserver\r\n\r\n\r\nSetting Up OpenStack\r\n====================\r\n\r\nThe recommended tool for installing and configuring the core OpenStack\r\ncomponents is `Devstack`_. Refer to their documentation for getting\r\nNova, Keystone, Glance, etc. up and running.\r\n\r\n.. _Devstack: http://devstack.org/\r\n\r\n.. note::\r\n\r\n    The minimum required set of OpenStack services running includes the\r\n    following:\r\n\r\n    * Nova (compute, api, scheduler, network, *and* volume services)\r\n    * Glance\r\n    * Keystone\r\n\r\n    Optional support is provided for Swift.\r\n\r\n\r\nDevelopment\r\n===========\r\n\r\nFor development, start with the getting started instructions above.\r\nOnce you have a working virtualenv and all the necessary packages, read on.\r\n\r\nIf dependencies are added to either ``horizon`` or ``openstack_dashboard``,\r\nthey should be added to ``requirements.txt``.\r\n\r\nThe ``run_tests.sh`` script invokes tests and analyses on both of these\r\ncomponents in its process, and it is what Jenkins uses to verify the\r\nstability of the project. If run before an environment is set up, it will\r\nask if you wish to install one.\r\n\r\nTo run the unit tests::\r\n\r\n    $ ./run_tests.sh\r\n\r\nBuilding Contributor Documentation\r\n==================================\r\n\r\nThis documentation is written by contributors, for contributors.\r\n\r\nThe source is maintained in the ``doc/source`` directory using\r\n`reStructuredText`_ and built by `Sphinx`_\r\n\r\n.. _reStructuredText: http://docutils.sourceforge.net/rst.html\r\n.. _Sphinx: http://sphinx-doc.org/\r\n\r\n* Building Automatically::\r\n\r\n    $ ./run_tests.sh --docs\r\n\r\n* Building Manually::\r\n\r\n    $ tools/with_venv.sh sphinx-build doc/source doc/build/html\r\n\r\nResults are in the ``doc/build/html`` directory", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.openstack.org/", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "gbptesthorizon", "package_url": "https://pypi.org/project/gbptesthorizon/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gbptesthorizon/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.openstack.org/"}, "release_url": "https://pypi.org/project/gbptesthorizon/2014.2/", "requires_dist": null, "requires_python": null, "summary": "OpenStack Dashboard", "version": "2014.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Horizon is a Django-based project aimed at providing a complete OpenStack\nDashboard along with an extensible framework for building new dashboards\nfrom reusable components. The <tt>openstack_dashboard</tt> module is a reference\nimplementation of a Django site that uses the <tt>horizon</tt> app to provide\nweb-based interactions with the various OpenStack projects.</p>\n<p>For release management:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://launchpad.net/horizon\" rel=\"nofollow\">https://launchpad.net/horizon</a></li>\n</ul>\n</blockquote>\n<p>For blueprints and feature specifications:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blueprints.launchpad.net/horizon\" rel=\"nofollow\">https://blueprints.launchpad.net/horizon</a></li>\n</ul>\n</blockquote>\n<p>For issue tracking:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://bugs.launchpad.net/horizon\" rel=\"nofollow\">https://bugs.launchpad.net/horizon</a></li>\n</ul>\n</blockquote>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>For local development, first create a virtualenv for the project.\nIn the <tt>tools</tt> directory there is a script to create one for you:</p>\n<pre>$ python tools/install_venv.py\n</pre>\n<p>Alternatively, the <tt>run_tests.sh</tt> script will also install the environment\nfor you and then run the full test suite to verify everything is installed\nand functioning correctly.</p>\n<p>Now that the virtualenv is created, you need to configure your local\nenvironment.  To do this, create a <tt>local_settings.py</tt> file in the\n<tt>openstack_dashboard/local/</tt> directory.  There is a\n<tt>local_settings.py.example</tt> file there that may be used as a template.</p>\n<p>If all is well you should able to run the development server locally:</p>\n<pre>$ tools/with_venv.sh ./manage.py runserver\n</pre>\n<p>or, as a shortcut:</p>\n<pre>$ ./run_tests.sh --runserver\n</pre>\n</div>\n<div id=\"setting-up-openstack\">\n<h2>Setting Up OpenStack</h2>\n<p>The recommended tool for installing and configuring the core OpenStack\ncomponents is <a href=\"http://devstack.org/\" rel=\"nofollow\">Devstack</a>. Refer to their documentation for getting\nNova, Keystone, Glance, etc. up and running.</p>\n<div>\n<p>Note</p>\n<p>The minimum required set of OpenStack services running includes the\nfollowing:</p>\n<ul>\n<li>Nova (compute, api, scheduler, network, <em>and</em> volume services)</li>\n<li>Glance</li>\n<li>Keystone</li>\n</ul>\n<p>Optional support is provided for Swift.</p>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>For development, start with the getting started instructions above.\nOnce you have a working virtualenv and all the necessary packages, read on.</p>\n<p>If dependencies are added to either <tt>horizon</tt> or <tt>openstack_dashboard</tt>,\nthey should be added to <tt>requirements.txt</tt>.</p>\n<p>The <tt>run_tests.sh</tt> script invokes tests and analyses on both of these\ncomponents in its process, and it is what Jenkins uses to verify the\nstability of the project. If run before an environment is set up, it will\nask if you wish to install one.</p>\n<p>To run the unit tests:</p>\n<pre>$ ./run_tests.sh\n</pre>\n</div>\n<div id=\"building-contributor-documentation\">\n<h2>Building Contributor Documentation</h2>\n<p>This documentation is written by contributors, for contributors.</p>\n<p>The source is maintained in the <tt>doc/source</tt> directory using\n<a href=\"http://docutils.sourceforge.net/rst.html\" rel=\"nofollow\">reStructuredText</a> and built by <a href=\"http://sphinx-doc.org/\" rel=\"nofollow\">Sphinx</a></p>\n<ul>\n<li><p>Building Automatically:</p>\n<pre>$ ./run_tests.sh --docs\n</pre>\n</li>\n<li><p>Building Manually:</p>\n<pre>$ tools/with_venv.sh sphinx-build doc/source doc/build/html\n</pre>\n</li>\n</ul>\n<p>Results are in the <tt>doc/build/html</tt> directory</p>\n</div>\n\n          </div>"}, "last_serial": 1239593, "releases": {"2014.2": [{"comment_text": "", "digests": {"md5": "d9dc598b608d0467c115a524583e3e95", "sha256": "eaa13261d4f69ec2d22b2670690fbcec4b18bc231d2cac806115ced13505b907"}, "downloads": -1, "filename": "gbptesthorizon-2014.2.tar.gz", "has_sig": false, "md5_digest": "d9dc598b608d0467c115a524583e3e95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3104185, "upload_time": "2014-09-26T23:37:38", "upload_time_iso_8601": "2014-09-26T23:37:38.333496Z", "url": "https://files.pythonhosted.org/packages/70/fa/6bebdf61e3df9cb72241bc1092e1d5e24cc5eac67b74525985f130768259/gbptesthorizon-2014.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9dc598b608d0467c115a524583e3e95", "sha256": "eaa13261d4f69ec2d22b2670690fbcec4b18bc231d2cac806115ced13505b907"}, "downloads": -1, "filename": "gbptesthorizon-2014.2.tar.gz", "has_sig": false, "md5_digest": "d9dc598b608d0467c115a524583e3e95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3104185, "upload_time": "2014-09-26T23:37:38", "upload_time_iso_8601": "2014-09-26T23:37:38.333496Z", "url": "https://files.pythonhosted.org/packages/70/fa/6bebdf61e3df9cb72241bc1092e1d5e24cc5eac67b74525985f130768259/gbptesthorizon-2014.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:55 2020"}