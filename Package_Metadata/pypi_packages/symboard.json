{"info": {"author": "Andrew J. Young", "author_email": "andrewjunyoung1@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Build: [![CircleCI](https://circleci.com/gh/andrewjunyoung/symboard.svg?style=svg)](https://circleci.com/gh/andrewjunyoung/symboard)\n\n# \u1e60ym\u03b2oar\u00f0 (Symboard)\n\n<!-- vim-markdown-toc GFM -->\n\n* [About](#about)\n* [Making your own keyboard](#making-your-own-keyboard)\n  * [Syntax](#syntax)\n* [Future features](#future-features)\n  * [Specifying keyboard states (not yet implemented)](#specifying-keyboard-states-not-yet-implemented)\n    * [List of modal keys](#list-of-modal-keys)\n  * [Creating dead keys (not yet implemented)](#creating-dead-keys-not-yet-implemented)\n\n<!-- vim-markdown-toc -->\n\n# About\n\nSymboard (stylized as \u00ab\u1e60ym\u03b2oar\u00f0\u00bb) is a versatile text-based keyboard creator.\nSymboard has a defined syntax which allows you to create text files which\ndescribe the specification for a keyboard layout, and will compile these files\nto automatically create a fully functional, UNIX compatible `keylayout` file.\n\nThe syntax of Symboard (described below) currently allows for 3 different type\nof operation:\n- Setting global keyboard variables, such as keyboard type and layout\n- Specifying different keyboard states, such as shift, or alt\n- A concise syntax to create dead keys, such as for accents and diacritics.\n\n# Making your own keyboard\n\n## Syntax\n\nSymboard creates keyboards according to a _specification_ (spec) which is provided to it. This spec should be written as a [yaml](https://en.wikipedia.org/wiki/YAML) file.\n\nYaml can be a little technical at times, so here's what you need to know when using symboard.\n\nYaml is made up of keys (headers) which point to values, like this:\n\n```\ngiven_name: noam\nsurname: chomsky\nage: 91\ninstitutions:\n    - University of Arizona\n      start: 2017\n    - Massachusetts Institute of Technology\n      start: 1955\n    - Institute for Advanced Study\n      start: 1958\n      end: 1959\n```\n\nValues can be numbers, strings, booleans (true / false), or lists.\n\nSymboard has some required headings, while others are optional. Optional headings, if not included in your specification, will be set to some default value. This default value is usually picked to be the most appropriate for the keyboard layout you're trying to create.\n\nWhich headings are available, and which are required, is detailed [here](https://github.com/andrewjunyoung/symboard/wiki/Symboard-yaml-syntax) in the symboard wiki. All symboard settings are written using lower_camel_case.\n\n# Future features\n\n## Specifying keyboard states (not yet implemented)\n\n```\nkeyboard_state:\n  condition: ...\n  state: |\n    ...\n```\n\nExample:\n\n```\nkeyboard_state:\n  condition: (shift? & control) | shift & control?)\n  state: |\n    ~&@#$%^<>()\\{\\}\n    :!?PYFGCRL*+|\n    AOEUIDHTNS-\n    \"QJKXBMWVZ\n```\n\n### List of modal keys\n  - `shift`\n  - `alt`\n  - `command`\n  - `control`\n  - `function`\n  - `caps_lock`\n\n\n## Creating dead keys (not yet implemented)\n\n```\ndead_key:\n  name: ...\n  modified_from: ...\n  modified_to: ...\n```\n\nExample:\n\n\n```\ndead_key:\n  name: acute\n  modified_from: abc\n  modified_to: \u00e1b\u0301\u0107\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andrewjunyoung/symboard", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "symboard", "package_url": "https://pypi.org/project/symboard/", "platform": "", "project_url": "https://pypi.org/project/symboard/", "project_urls": {"Homepage": "https://github.com/andrewjunyoung/symboard"}, "release_url": "https://pypi.org/project/symboard/0.2.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A text-based keyboard layout creator. Change or add keys to your keyboard with ease.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Build: <a href=\"https://circleci.com/gh/andrewjunyoung/symboard\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fd477548749deea519b4e1c313dc8570fe1fd4c/68747470733a2f2f636972636c6563692e636f6d2f67682f616e647265776a756e796f756e672f73796d626f6172642e7376673f7374796c653d737667\"></a></p>\n<h1>\u1e60ym\u03b2oar\u00f0 (Symboard)</h1>\n\n<ul>\n<li><a href=\"#about\" rel=\"nofollow\">About</a></li>\n<li><a href=\"#making-your-own-keyboard\" rel=\"nofollow\">Making your own keyboard</a>\n<ul>\n<li><a href=\"#syntax\" rel=\"nofollow\">Syntax</a></li>\n</ul>\n</li>\n<li><a href=\"#future-features\" rel=\"nofollow\">Future features</a>\n<ul>\n<li><a href=\"#specifying-keyboard-states-not-yet-implemented\" rel=\"nofollow\">Specifying keyboard states (not yet implemented)</a>\n<ul>\n<li><a href=\"#list-of-modal-keys\" rel=\"nofollow\">List of modal keys</a></li>\n</ul>\n</li>\n<li><a href=\"#creating-dead-keys-not-yet-implemented\" rel=\"nofollow\">Creating dead keys (not yet implemented)</a></li>\n</ul>\n</li>\n</ul>\n\n<h1>About</h1>\n<p>Symboard (stylized as \u00ab\u1e60ym\u03b2oar\u00f0\u00bb) is a versatile text-based keyboard creator.\nSymboard has a defined syntax which allows you to create text files which\ndescribe the specification for a keyboard layout, and will compile these files\nto automatically create a fully functional, UNIX compatible <code>keylayout</code> file.</p>\n<p>The syntax of Symboard (described below) currently allows for 3 different type\nof operation:</p>\n<ul>\n<li>Setting global keyboard variables, such as keyboard type and layout</li>\n<li>Specifying different keyboard states, such as shift, or alt</li>\n<li>A concise syntax to create dead keys, such as for accents and diacritics.</li>\n</ul>\n<h1>Making your own keyboard</h1>\n<h2>Syntax</h2>\n<p>Symboard creates keyboards according to a <em>specification</em> (spec) which is provided to it. This spec should be written as a <a href=\"https://en.wikipedia.org/wiki/YAML\" rel=\"nofollow\">yaml</a> file.</p>\n<p>Yaml can be a little technical at times, so here's what you need to know when using symboard.</p>\n<p>Yaml is made up of keys (headers) which point to values, like this:</p>\n<pre><code>given_name: noam\nsurname: chomsky\nage: 91\ninstitutions:\n    - University of Arizona\n      start: 2017\n    - Massachusetts Institute of Technology\n      start: 1955\n    - Institute for Advanced Study\n      start: 1958\n      end: 1959\n</code></pre>\n<p>Values can be numbers, strings, booleans (true / false), or lists.</p>\n<p>Symboard has some required headings, while others are optional. Optional headings, if not included in your specification, will be set to some default value. This default value is usually picked to be the most appropriate for the keyboard layout you're trying to create.</p>\n<p>Which headings are available, and which are required, is detailed <a href=\"https://github.com/andrewjunyoung/symboard/wiki/Symboard-yaml-syntax\" rel=\"nofollow\">here</a> in the symboard wiki. All symboard settings are written using lower_camel_case.</p>\n<h1>Future features</h1>\n<h2>Specifying keyboard states (not yet implemented)</h2>\n<pre><code>keyboard_state:\n  condition: ...\n  state: |\n    ...\n</code></pre>\n<p>Example:</p>\n<pre><code>keyboard_state:\n  condition: (shift? &amp; control) | shift &amp; control?)\n  state: |\n    ~&amp;@#$%^&lt;&gt;()\\{\\}\n    :!?PYFGCRL*+|\n    AOEUIDHTNS-\n    \"QJKXBMWVZ\n</code></pre>\n<h3>List of modal keys</h3>\n<ul>\n<li><code>shift</code></li>\n<li><code>alt</code></li>\n<li><code>command</code></li>\n<li><code>control</code></li>\n<li><code>function</code></li>\n<li><code>caps_lock</code></li>\n</ul>\n<h2>Creating dead keys (not yet implemented)</h2>\n<pre><code>dead_key:\n  name: ...\n  modified_from: ...\n  modified_to: ...\n</code></pre>\n<p>Example:</p>\n<pre><code>dead_key:\n  name: acute\n  modified_from: abc\n  modified_to: \u00e1b\u0301\u0107\n</code></pre>\n\n          </div>"}, "last_serial": 6366889, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "b6001d44dac2503952c082595ffa5e8e", "sha256": "f0259edbe38c16f76dd0277738bfadac80900876b0c53bc931640c7e45d7d40a"}, "downloads": -1, "filename": "symboard-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b6001d44dac2503952c082595ffa5e8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29792, "upload_time": "2019-12-27T22:35:01", "upload_time_iso_8601": "2019-12-27T22:35:01.134075Z", "url": "https://files.pythonhosted.org/packages/cb/fb/08ee2b8318d35b606ccf1955e375bc59f9960045b703ed50233a39f56776/symboard-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f438a85a4a230255b739236f8a9782a", "sha256": "0df0a205fcce4e770e0770014a8f2f28eee978ceb354137161406ee17986893f"}, "downloads": -1, "filename": "symboard-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0f438a85a4a230255b739236f8a9782a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19055, "upload_time": "2019-12-27T22:35:03", "upload_time_iso_8601": "2019-12-27T22:35:03.583936Z", "url": "https://files.pythonhosted.org/packages/81/13/59b6c878b0f919ed2ac2b5571e467d6c753b8892027899d10b7914988903/symboard-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b6001d44dac2503952c082595ffa5e8e", "sha256": "f0259edbe38c16f76dd0277738bfadac80900876b0c53bc931640c7e45d7d40a"}, "downloads": -1, "filename": "symboard-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b6001d44dac2503952c082595ffa5e8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29792, "upload_time": "2019-12-27T22:35:01", "upload_time_iso_8601": "2019-12-27T22:35:01.134075Z", "url": "https://files.pythonhosted.org/packages/cb/fb/08ee2b8318d35b606ccf1955e375bc59f9960045b703ed50233a39f56776/symboard-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f438a85a4a230255b739236f8a9782a", "sha256": "0df0a205fcce4e770e0770014a8f2f28eee978ceb354137161406ee17986893f"}, "downloads": -1, "filename": "symboard-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0f438a85a4a230255b739236f8a9782a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19055, "upload_time": "2019-12-27T22:35:03", "upload_time_iso_8601": "2019-12-27T22:35:03.583936Z", "url": "https://files.pythonhosted.org/packages/81/13/59b6c878b0f919ed2ac2b5571e467d6c753b8892027899d10b7914988903/symboard-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:13 2020"}