{"info": {"author": "Laurens Van Houtven", "author_email": "_@lvh.io", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Twisted", "Intended Audience :: Education", "License :: OSI Approved :: ISC License (ISCL)", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 2 :: Only", "Topic :: Education", "Topic :: Games/Entertainment", "Topic :: Security :: Cryptography"], "description": "========\n merlyn\n========\n\nA server backend for interactive online exercises.\n\n.. image:: https://travis-ci.org/crypto101/merlyn.png\n   :target: https://travis-ci.org/crypto101/merlyn\n.. image:: https://coveralls.io/repos/crypto101/merlyn/badge.png?branch=master\n   :target: https://coveralls.io/r/crypto101/merlyn?branch=master\n\nTesting and documentation\n=========================\n\nTesting is done using tox_. Install it, and run it from the command\nline in the repository root. This will create a virtualenv_ for each\nsupported environment, install the necessary things in it, run the\ntests, and build the documentation.\n\nSpeeding up builds\n------------------\n\nFor a faster experience, it is recommended that you configure pip_ to\nuse wheel_ by default, by placing the following in your\n``~/.pip/pip.conf`` or equivalent::\n\n  [global]\n  use-wheel = True\n\n  [install]\n  find-links = /tmp/wheelhouse\n\n  [wheel]\n  wheel-dir = /tmp/wheelhouse\n\nAfter that, build wheels out of the requirements by running the\nfollowing command once::\n\n  pip wheel -r requirements.txt -r requirements-docs.txt -r requirements-testing.txt\n\nThat will build wheels, which are faster to install than regular\npackages. You can make installations even faster by adding ``no-index\n= True`` to the ``[install]`` section; that way, installations won't\neven hit PyPI, further reducing latency. Keep in mind that you will\nthen no longer be able to use ``pip install`` to install anything,\nunless you've first made a wheel out of it.\n\n.. _tox: https://testrun.org/tox/\n.. _virtualenv: https://pypi.python.org/pypi/virtualenv/\n.. _pip: http://www.pip-installer.org/en/latest/\n.. _wheel: http://wheel.readthedocs.org/en/latest/\n\nRelease notes\n=============\n\n0.0.9\n-----\n\nAdded per-user secrets. Once pyca/cryptography will have HKDF support,\nthis will turn into per-user entropy.\n\nAlso minor fixes, version upgrades.\n\n0.0.8\n-----\n\nNow being continuously tested on Travis, with coverage monitoring\nthanks to Coveralls.\n\nSeveral other minor improvements:\n\n- A useful mixin for resources that represent exercises, for helping\n  them resolve and notify when an exercise is completed.\n- User e-mails are indexed.\n- Persisted factories are now unary callables that take a store. This\n  prevents some otherwise icky global mutable state.\n- New behavior for adding persisted factories: addOrUpdate; don't just\n  blindly add more factories with the same identifier.\n\n0.0.7\n-----\n\n- Added support for a ``dhparam.pem``, enabling DH-based PFS\n  ciphersuites. ECDH-based PFS ciphersuites is a work in progress, see\n  #6.\n\n0.0.6\n-----\n\n- Moved requirements into setup.py for easier installs\n- ``clarent`` version requirement bump\n\n0.0.5\n-----\n\nFeatures:\n\n- localhost manhole support for debugging\n- Only support good ciphersuites.\n\n0.0.4\n-----\n\nRenamed to merlyn (see \"Whence the name\" below).\n\nFeatures:\n\n- Drastically simplified exercise API\n- Authentication API based on SSL certificate verification\n\n0.0.3\n-----\n\nFeatures:\n\n- Basic documentation for steps and exercises\n- Interfaces: IStep, IRenderer, IValidator (see docs)\n- A renderer based on string templating (str.format)\n\nUpgrades:\n\n- repoze.sphinx.autointerface -> sphinxcontrib-zopeext, which appears\n  to be a shinier, more updated version of the same thing\n\nCommon things between merlyn and arthur_, such as shared AMP command\nclasses, were moved to clarent_.\n\n0.0.2\n-----\n\nFeatures:\n\n- Exercise and Step classes\n- Step validation draft\n- Step solution submission interface\n\n0.0.1\n-----\n\nInitial public release. Nothing much to see here.\n\nWhence the name?\n================\n\nThis project was originally called merlin, because the step-by-step\noracle-like model reminded me of Merlin in the AM complexity class and\n`Arthur-Merlin protocols`_. It's since been renamed to merlyn, because\nthe primo merlin PyPI real estate has been taken up by some kind of\nweird setuptools fork.\n\nSince Arthur is the person who performs the protocol together with\nMerlin, it only made sense to name the client side project `arthur`.\nFinally, clarent_, named after king Arthur's ceremonial sword, holds\ncommon tools.\n\n.. _arthur: https://github.com/crypto101/arthur\n.. _clarent: https://github.com/crypto101/clarent\n.. _`Arthur-Merlin protocols`: https://en.wikipedia.org/wiki/Merlin-Arthur_protocol", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/crypto101/merlyn", "keywords": "crypto twisted", "license": "ISC", "maintainer": null, "maintainer_email": null, "name": "merlyn", "package_url": "https://pypi.org/project/merlyn/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/merlyn/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/crypto101/merlyn"}, "release_url": "https://pypi.org/project/merlyn/0.0.9/", "requires_dist": null, "requires_python": null, "summary": "A server backend for interactive online exercises.", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A server backend for interactive online exercises.</p>\n<a href=\"https://travis-ci.org/crypto101/merlyn\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/crypto101/merlyn.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f451df594fa5b875debd87f6e03c73576fa8bfe7/68747470733a2f2f7472617669732d63692e6f72672f63727970746f3130312f6d65726c796e2e706e67\"></a>\n<a href=\"https://coveralls.io/r/crypto101/merlyn?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/crypto101/merlyn/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c6b7bdb38ee6b030c4425d11ac0f3c0edb44b6cf/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f63727970746f3130312f6d65726c796e2f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<div id=\"testing-and-documentation\">\n<h2>Testing and documentation</h2>\n<p>Testing is done using <a href=\"https://testrun.org/tox/\" rel=\"nofollow\">tox</a>. Install it, and run it from the command\nline in the repository root. This will create a <a href=\"https://pypi.python.org/pypi/virtualenv/\" rel=\"nofollow\">virtualenv</a> for each\nsupported environment, install the necessary things in it, run the\ntests, and build the documentation.</p>\n<div id=\"speeding-up-builds\">\n<h3>Speeding up builds</h3>\n<p>For a faster experience, it is recommended that you configure <a href=\"http://www.pip-installer.org/en/latest/\" rel=\"nofollow\">pip</a> to\nuse <a href=\"http://wheel.readthedocs.org/en/latest/\" rel=\"nofollow\">wheel</a> by default, by placing the following in your\n<tt><span class=\"pre\">~/.pip/pip.conf</span></tt> or equivalent:</p>\n<pre>[global]\nuse-wheel = True\n\n[install]\nfind-links = /tmp/wheelhouse\n\n[wheel]\nwheel-dir = /tmp/wheelhouse\n</pre>\n<p>After that, build wheels out of the requirements by running the\nfollowing command once:</p>\n<pre>pip wheel -r requirements.txt -r requirements-docs.txt -r requirements-testing.txt\n</pre>\n<p>That will build wheels, which are faster to install than regular\npackages. You can make installations even faster by adding <tt><span class=\"pre\">no-index</span>\n= True</tt> to the <tt>[install]</tt> section; that way, installations won\u2019t\neven hit PyPI, further reducing latency. Keep in mind that you will\nthen no longer be able to use <tt>pip install</tt> to install anything,\nunless you\u2019ve first made a wheel out of it.</p>\n</div>\n</div>\n<div id=\"release-notes\">\n<h2>Release notes</h2>\n<div id=\"id1\">\n<h3>0.0.9</h3>\n<p>Added per-user secrets. Once pyca/cryptography will have HKDF support,\nthis will turn into per-user entropy.</p>\n<p>Also minor fixes, version upgrades.</p>\n</div>\n<div id=\"id2\">\n<h3>0.0.8</h3>\n<p>Now being continuously tested on Travis, with coverage monitoring\nthanks to Coveralls.</p>\n<p>Several other minor improvements:</p>\n<ul>\n<li>A useful mixin for resources that represent exercises, for helping\nthem resolve and notify when an exercise is completed.</li>\n<li>User e-mails are indexed.</li>\n<li>Persisted factories are now unary callables that take a store. This\nprevents some otherwise icky global mutable state.</li>\n<li>New behavior for adding persisted factories: addOrUpdate; don\u2019t just\nblindly add more factories with the same identifier.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.0.7</h3>\n<ul>\n<li>Added support for a <tt>dhparam.pem</tt>, enabling DH-based PFS\nciphersuites. ECDH-based PFS ciphersuites is a work in progress, see\n#6.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.0.6</h3>\n<ul>\n<li>Moved requirements into setup.py for easier installs</li>\n<li><tt>clarent</tt> version requirement bump</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.0.5</h3>\n<p>Features:</p>\n<ul>\n<li>localhost manhole support for debugging</li>\n<li>Only support good ciphersuites.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.0.4</h3>\n<p>Renamed to merlyn (see \u201cWhence the name\u201d below).</p>\n<p>Features:</p>\n<ul>\n<li>Drastically simplified exercise API</li>\n<li>Authentication API based on SSL certificate verification</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.0.3</h3>\n<p>Features:</p>\n<ul>\n<li>Basic documentation for steps and exercises</li>\n<li>Interfaces: IStep, IRenderer, IValidator (see docs)</li>\n<li>A renderer based on string templating (str.format)</li>\n</ul>\n<p>Upgrades:</p>\n<ul>\n<li>repoze.sphinx.autointerface -&gt; sphinxcontrib-zopeext, which appears\nto be a shinier, more updated version of the same thing</li>\n</ul>\n<p>Common things between merlyn and <a href=\"https://github.com/crypto101/arthur\" rel=\"nofollow\">arthur</a>, such as shared AMP command\nclasses, were moved to <a href=\"https://github.com/crypto101/clarent\" rel=\"nofollow\">clarent</a>.</p>\n</div>\n<div id=\"id8\">\n<h3>0.0.2</h3>\n<p>Features:</p>\n<ul>\n<li>Exercise and Step classes</li>\n<li>Step validation draft</li>\n<li>Step solution submission interface</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.0.1</h3>\n<p>Initial public release. Nothing much to see here.</p>\n</div>\n</div>\n<div id=\"whence-the-name\">\n<h2>Whence the name?</h2>\n<p>This project was originally called merlin, because the step-by-step\noracle-like model reminded me of Merlin in the AM complexity class and\n<a href=\"https://en.wikipedia.org/wiki/Merlin-Arthur_protocol\" rel=\"nofollow\">Arthur-Merlin protocols</a>. It\u2019s since been renamed to merlyn, because\nthe primo merlin PyPI real estate has been taken up by some kind of\nweird setuptools fork.</p>\n<p>Since Arthur is the person who performs the protocol together with\nMerlin, it only made sense to name the client side project <cite>arthur</cite>.\nFinally, <a href=\"https://github.com/crypto101/clarent\" rel=\"nofollow\">clarent</a>, named after king Arthur\u2019s ceremonial sword, holds\ncommon tools.</p>\n</div>\n\n          </div>"}, "last_serial": 974145, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "c0f24c2af9a61f4801a7786eaea94233", "sha256": "3a9cf3bc8136f42590f1cd5dd1c0af79da49c197e2319dd1ad2874bc0632862b"}, "downloads": -1, "filename": "merlyn-0.0.3.tar.gz", "has_sig": true, "md5_digest": "c0f24c2af9a61f4801a7786eaea94233", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5098, "upload_time": "2013-12-02T10:53:55", "upload_time_iso_8601": "2013-12-02T10:53:55.674774Z", "url": "https://files.pythonhosted.org/packages/b6/7e/0545784888a55f34c38de19b9aa1792004b8e96c8ce6353c3fd3625f1c34/merlyn-0.0.3.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f1829ff72a3dae23884f5b614cbda04c", "sha256": "a3c9ee1c112eaf161c4f5689cf4d42194240f9dd3ebdc3fc09a843390d4e5696"}, "downloads": -1, "filename": "merlyn-0.0.5.tar.gz", "has_sig": true, "md5_digest": "f1829ff72a3dae23884f5b614cbda04c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19031, "upload_time": "2013-12-26T17:31:27", "upload_time_iso_8601": "2013-12-26T17:31:27.194332Z", "url": "https://files.pythonhosted.org/packages/c3/89/46173b310e63f5e1a0024fa977cd05022c2fc37fb673a205aace9a7e7d6d/merlyn-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "25529eff3a48b3ab3908f0d19b5e6ea8", "sha256": "fbb8f21ae3ae9a0541379d26e305832c50864ff7bdd717974707d1a0c33cfd77"}, "downloads": -1, "filename": "merlyn-0.0.6.tar.gz", "has_sig": true, "md5_digest": "25529eff3a48b3ab3908f0d19b5e6ea8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19287, "upload_time": "2013-12-27T14:10:15", "upload_time_iso_8601": "2013-12-27T14:10:15.134871Z", "url": "https://files.pythonhosted.org/packages/0d/8a/894e55bdaebdf7e884fffc9dce124aaaff9102204c4a2fe13d086dd966f0/merlyn-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "0d8ede953f57594b16f998b9ad791d66", "sha256": "652b7c2e82c6ca3dedb34c55b3456d02405a8c0a32f895b13d9c761f2927f2d3"}, "downloads": -1, "filename": "merlyn-0.0.7.tar.gz", "has_sig": true, "md5_digest": "0d8ede953f57594b16f998b9ad791d66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19400, "upload_time": "2013-12-28T23:14:52", "upload_time_iso_8601": "2013-12-28T23:14:52.256930Z", "url": "https://files.pythonhosted.org/packages/76/0b/3a469c4184db95691dabe62d1fd3065c240bf0bf3a97758cafb363753aba/merlyn-0.0.7.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "b001c333d21131fd78b046291c70b747", "sha256": "54fb3e53aceef9998f276c09a2019bbfc7873ef9521624779353d0ce38adfa6e"}, "downloads": -1, "filename": "merlyn-0.0.9.tar.gz", "has_sig": true, "md5_digest": "b001c333d21131fd78b046291c70b747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21124, "upload_time": "2014-01-19T19:36:22", "upload_time_iso_8601": "2014-01-19T19:36:22.556287Z", "url": "https://files.pythonhosted.org/packages/12/30/f53944fb2513d16f1fad19987202af6de8ea4a319c77501bc27b36bd375b/merlyn-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b001c333d21131fd78b046291c70b747", "sha256": "54fb3e53aceef9998f276c09a2019bbfc7873ef9521624779353d0ce38adfa6e"}, "downloads": -1, "filename": "merlyn-0.0.9.tar.gz", "has_sig": true, "md5_digest": "b001c333d21131fd78b046291c70b747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21124, "upload_time": "2014-01-19T19:36:22", "upload_time_iso_8601": "2014-01-19T19:36:22.556287Z", "url": "https://files.pythonhosted.org/packages/12/30/f53944fb2513d16f1fad19987202af6de8ea4a319c77501bc27b36bd375b/merlyn-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:07 2020"}