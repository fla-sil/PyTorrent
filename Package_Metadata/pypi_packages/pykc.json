{"info": {"author": "buckket", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: Public Domain", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "pyKC\n####\n\nThis Python library provides high-level access to a KC thread and/or post (including all available metadata) by parsing the HTML source, additionally various endpoints of the KC AJAX API can be called.\n\nMinimal Requirements:\n---------------------\n\n**Core:**\n\n- Python >= 2.6\n\n**Modules:**\n\n- `lxml <http://lxml.de/>`_\n- `enum34 <https://pypi.python.org/pypi/enum34>`_\n- `requests <http://docs.python-requests.org/en/latest/index.html>`_\n- `BeautifulSoup4 <http://www.crummy.com/software/BeautifulSoup/>`_\n\nFeatures:\n---------\n- Check ``pykc/core.py`` and ``pykc.py`` or the example code below. :-)\n\n.. code:: python\n\n    from pykc import Krautchan\n\n    # Create a Krautchan instance.\n    #\n    # If you happen to be a mod/admin try the following:\n    # kc = Krautchan(username='foo', password='bar')\n    #\n    # Congratulations, you now have access to some nifty special features! :3\n    kc = Krautchan()\n\n    # Search for a specific file using the AJAX API.\n    print(kc.search_file(name='rfk'))\n\n    # Parse a complete thread and return a thread object.\n    thread = kc.get_thread('prog', '1698')\n    print(thread.__dict__)\n\n    # You can even JSONify the object! :)\n    print(thread.to_json())\n\nCredits:\n--------\n**Main author:** buckket\n\nLicense:\n--------\n\n::\n\n        DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                    Version 2, December 2004\n\n Copyright (C) 2004 Sam Hocevar <sam@hocevar.net>\n\n Everyone is permitted to copy and distribute verbatim or modified\n copies of this license document, and changing it is allowed as long\n as the name is changed.\n\n            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. You just DO WHAT THE FUCK YOU WANT TO.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/buckket/pykc", "keywords": "imageboard,kc,parser", "license": "WTFPL", "maintainer": null, "maintainer_email": null, "name": "pykc", "package_url": "https://pypi.org/project/pykc/", "platform": "any", "project_url": "https://pypi.org/project/pykc/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/buckket/pykc"}, "release_url": "https://pypi.org/project/pykc/1.0/", "requires_dist": null, "requires_python": null, "summary": "Feed your snake with your favourite imageboard.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This Python library provides high-level access to a KC thread and/or post (including all available metadata) by parsing the HTML source, additionally various endpoints of the KC AJAX API can be called.</p>\n<div id=\"minimal-requirements\">\n<h2>Minimal Requirements:</h2>\n<p><strong>Core:</strong></p>\n<ul>\n<li>Python &gt;= 2.6</li>\n</ul>\n<p><strong>Modules:</strong></p>\n<ul>\n<li><a href=\"http://lxml.de/\" rel=\"nofollow\">lxml</a></li>\n<li><a href=\"https://pypi.python.org/pypi/enum34\" rel=\"nofollow\">enum34</a></li>\n<li><a href=\"http://docs.python-requests.org/en/latest/index.html\" rel=\"nofollow\">requests</a></li>\n<li><a href=\"http://www.crummy.com/software/BeautifulSoup/\" rel=\"nofollow\">BeautifulSoup4</a></li>\n</ul>\n</div>\n<div id=\"features\">\n<h2>Features:</h2>\n<ul>\n<li>Check <tt>pykc/core.py</tt> and <tt>pykc.py</tt> or the example code below. :-)</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pykc</span> <span class=\"kn\">import</span> <span class=\"n\">Krautchan</span>\n\n<span class=\"c1\"># Create a Krautchan instance.</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># If you happen to be a mod/admin try the following:</span>\n<span class=\"c1\"># kc = Krautchan(username='foo', password='bar')</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Congratulations, you now have access to some nifty special features! :3</span>\n<span class=\"n\">kc</span> <span class=\"o\">=</span> <span class=\"n\">Krautchan</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Search for a specific file using the AJAX API.</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">kc</span><span class=\"o\">.</span><span class=\"n\">search_file</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'rfk'</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Parse a complete thread and return a thread object.</span>\n<span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"n\">kc</span><span class=\"o\">.</span><span class=\"n\">get_thread</span><span class=\"p\">(</span><span class=\"s1\">'prog'</span><span class=\"p\">,</span> <span class=\"s1\">'1698'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can even JSONify the object! :)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">())</span>\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits:</h2>\n<p><strong>Main author:</strong> buckket</p>\n</div>\n<div id=\"license\">\n<h2>License:</h2>\n<pre>       DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n                   Version 2, December 2004\n\nCopyright (C) 2004 Sam Hocevar &lt;sam@hocevar.net&gt;\n\nEveryone is permitted to copy and distribute verbatim or modified\ncopies of this license document, and changing it is allowed as long\nas the name is changed.\n\n           DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE\n  TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n 0. You just DO WHAT THE FUCK YOU WANT TO.\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1238407, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "71481845fba4364dc31a6c05b0f2df31", "sha256": "743e4e3dd6fbd40f2be99a45581ff59cbb056514cfb3a752d271a0365318eb13"}, "downloads": -1, "filename": "pykc-1.0.tar.gz", "has_sig": false, "md5_digest": "71481845fba4364dc31a6c05b0f2df31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6706, "upload_time": "2014-09-26T03:03:08", "upload_time_iso_8601": "2014-09-26T03:03:08.485553Z", "url": "https://files.pythonhosted.org/packages/52/e5/3eb99722f726362003714da59099505312c253a6fa743d3e748ff0b2df09/pykc-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71481845fba4364dc31a6c05b0f2df31", "sha256": "743e4e3dd6fbd40f2be99a45581ff59cbb056514cfb3a752d271a0365318eb13"}, "downloads": -1, "filename": "pykc-1.0.tar.gz", "has_sig": false, "md5_digest": "71481845fba4364dc31a6c05b0f2df31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6706, "upload_time": "2014-09-26T03:03:08", "upload_time_iso_8601": "2014-09-26T03:03:08.485553Z", "url": "https://files.pythonhosted.org/packages/52/e5/3eb99722f726362003714da59099505312c253a6fa743d3e748ff0b2df09/pykc-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:37 2020"}