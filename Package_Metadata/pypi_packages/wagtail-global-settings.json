{"info": {"author": "Jordan Markov", "author_email": "jmarkov@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Wagtail Global Settings\n=======================\n\nGlobal settings editor for Wagtail using django-solo\n----------------------------------------------------\n\n``wagtail-global-settings`` provides a global singleton model editing\ninterface and frontend access for Wagtail. It uses\n`django-solo <https://github.com/lazybird/django-solo>`__ for the model.\n\nInstallation\n------------\n\n1. Install ``wagtail-global-settings``.\n2. Add ``wagtail_global_settings`` to ``INSTALLED_APPS`` in your\n   ``settings.py``. It should be after any apps that use the\n   ``global_settings_tags`` template tags.\n\nUsage\n-----\n\nGlobal settings\n~~~~~~~~~~~~~~~\n\nTo use the global settings of ``wagtail-global-settings`` you need to\ndefine a model, which inherits from\n``AbstractGlobalSettingsCollection``:\n\n.. code:: python\n\n    from django.db import models\n    from wagtail.wagtailadmin.edit_handlers import FieldPanel\n    from wagtail_global_settings.models import AbstractGlobalSettingsCollection\n\n    class GlobalSettings(AbstractGlobalSettingsCollection):\n        facebook_app_id = models.CharField(max_length=256)\n        google_app_id = models.CharField(max_length=256)\n        analytics_id = models.CharField(max_length=256)\n        \n        panels = [\n            FieldPanel('facebook_app_id'),\n            FieldPanel('google_app_id'),\n            FieldPanel('analytics_id'),\n        ]\n        \n        class Meta:\n            verbose_name = \"Global settings\"\n\nFor the frontend you have three options:\n\n-  use the context processor:\n\nAdd ``'wagtail_global_settings.context_processors.global_settings'`` to\nyour ``TEMPLATE_CONTEXT_PROCESSORS`` and then use the settings in your\ntemplate: ``{{ global_settings.home.GlobalSettings.facebook_app_id }}``\n\n-  use the template tags:\n\nAdd ``{% load global_settings_tags %}`` at the beginning of your\ntemplate and then use the tags in your template:\n``{% global_settings 'home' 'GlobalSettings' 'facebook_app_id' %}`` or\n``{% get_global_settings 'home' 'GlobalSettings' 'facebook_app_id' as facebook_app_id %} {{ facebook_app_id }}``.\nIt's possible to skip the field name, in which case you'll get the\nsingleton model instance:\n``{% get_global_settings 'home' 'GlobalSettings' as global_settings %} {{ global_settings.facebook_app_id }}``\n\n-  use the template tags provided by ``django-solo``:\n\nAdd ``{% load solo_tags %}`` at the beginning of your template and then\nuse the tag in your template:\n``{% get_solo 'home.GlobalSettings' as global_settings %} {{ global_settings.facebook_app_id }}``\n\nSite specific settings\n~~~~~~~~~~~~~~~~~~~~~~\n\nTo use the site specific settings of ``wagtail-global-settings`` you\nneed to define a model, which inherits from\n``AbstractSiteSettingsCollection``:\n\n.. code:: python\n\n    from django.db import models\n    from wagtail.wagtailadmin.edit_handlers import FieldPanel\n    from wagtail_global_settings.models import AbstractSiteSettingsCollection\n\n    class GlobalSettings(AbstractSiteSettingsCollection):\n        facebook_app_id = models.CharField(max_length=256)\n        google_app_id = models.CharField(max_length=256)\n        analytics_id = models.CharField(max_length=256)\n        \n        panels = [\n            FieldPanel('facebook_app_id'),\n            FieldPanel('google_app_id'),\n            FieldPanel('analytics_id'),\n        ]\n        \n        class Meta:\n            verbose_name = \"Global site settings\"\n\nThe usage is the same as with ``AbstractGlobalSettingsCollection``,\nexcept:\n\n-  make sure ``'wagtail.wagtailcore.middleware.SiteMiddleware'`` is in\n   ``MIDDLEWARE_CLASSES``\n-  use ``'wagtail_global_settings.context_processors.site_settings'``\n   instead of\n   ``'wagtail_global_settings.context_processors.global_settings'`` and\n   put it after ``'django.template.context_processors.request'`` in\n   ``TEMPLATE_CONTEXT_PROCESSORS``\n-  use ``{% load site_settings_tags %}`` instead of\n   ``{% load global_settings_tags %}``\n-  use ``{% site_settings %}`` instead of ``{% global_settings %}`` in\n   the template\n-  use ``{% get_site_settings %}`` instead of\n   ``{% get_global_settings %}`` in the template\n-  ``django-solo`` cannot be used with site specific settings\n\nThe template tags for site specific settings allow passing and optional\nsite argument:\n``{% site_settings 'home' 'GlobalSettings' 'facebook_app_id' the_site %}``.\nIf this argument is missing the settings for the current site will be\nreturned.\n\nUsage in views\n~~~~~~~~~~~~~~\n\nFor AbstractGlobalSettingsCollection:\n\n.. code:: python\n\n    from home.models import GlobalSettings\n\n    def view_func_global(request):\n        global_settings = GlobalSettings.get_solo()\n        return render(request, 'home/the_template.html', {\n            'facebook_app_id': global_settings.facebook_app_id,\n        })\n\nFor AbstractSiteSettingsCollection:\n\n.. code:: python\n\n    from home.models import GlobalSettings\n\n    def view_func_global(request):\n        site_settings = GlobalSettings.objects.for_site(request.site)\n        return render(request, 'home/the_template.html', {\n            'facebook_app_id': site_settings.facebook_app_id,\n        })\n\nGeneral\n~~~~~~~\n\nThe template tags may be used in two ways:\n``{% site_settings 'home' 'GlobalSettings' 'facebook_app_id' %}`` and\n``{% site_settings 'home.GlobalSettings.facebook_app_id' %}``.\n\nFor more information about configuration and caching see\n`django-solo <https://github.com/lazybird/django-solo>`__.", "description_content_type": null, "docs_url": null, "download_url": "https://bitbucket.org/jordanmarkov/wagtail-global-settings/get/0.1.4.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/jordanmarkov/wagtail-global-settings", "keywords": "django,wagtail,cms,settings", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "wagtail-global-settings", "package_url": "https://pypi.org/project/wagtail-global-settings/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/wagtail-global-settings/", "project_urls": {"Download": "https://bitbucket.org/jordanmarkov/wagtail-global-settings/get/0.1.4.tar.gz", "Homepage": "https://bitbucket.org/jordanmarkov/wagtail-global-settings"}, "release_url": "https://pypi.org/project/wagtail-global-settings/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Global settings editor for Wagtail using django-solo", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"global-settings-editor-for-wagtail-using-django-solo\">\n<h2>Global settings editor for Wagtail using django-solo</h2>\n<p><tt><span class=\"pre\">wagtail-global-settings</span></tt> provides a global singleton model editing\ninterface and frontend access for Wagtail. It uses\n<a href=\"https://github.com/lazybird/django-solo\" rel=\"nofollow\">django-solo</a> for the model.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>Install <tt><span class=\"pre\">wagtail-global-settings</span></tt>.</li>\n<li>Add <tt>wagtail_global_settings</tt> to <tt>INSTALLED_APPS</tt> in your\n<tt>settings.py</tt>. It should be after any apps that use the\n<tt>global_settings_tags</tt> template tags.</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"global-settings\">\n<h3>Global settings</h3>\n<p>To use the global settings of <tt><span class=\"pre\">wagtail-global-settings</span></tt> you need to\ndefine a model, which inherits from\n<tt>AbstractGlobalSettingsCollection</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wagtail.wagtailadmin.edit_handlers</span> <span class=\"kn\">import</span> <span class=\"n\">FieldPanel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wagtail_global_settings.models</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractGlobalSettingsCollection</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GlobalSettings</span><span class=\"p\">(</span><span class=\"n\">AbstractGlobalSettingsCollection</span><span class=\"p\">):</span>\n    <span class=\"n\">facebook_app_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n    <span class=\"n\">google_app_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n    <span class=\"n\">analytics_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n\n    <span class=\"n\">panels</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">FieldPanel</span><span class=\"p\">(</span><span class=\"s1\">'facebook_app_id'</span><span class=\"p\">),</span>\n        <span class=\"n\">FieldPanel</span><span class=\"p\">(</span><span class=\"s1\">'google_app_id'</span><span class=\"p\">),</span>\n        <span class=\"n\">FieldPanel</span><span class=\"p\">(</span><span class=\"s1\">'analytics_id'</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Global settings\"</span>\n</pre>\n<p>For the frontend you have three options:</p>\n<ul>\n<li>use the context processor:</li>\n</ul>\n<p>Add <tt>'wagtail_global_settings.context_processors.global_settings'</tt> to\nyour <tt>TEMPLATE_CONTEXT_PROCESSORS</tt> and then use the settings in your\ntemplate: <tt>{{ global_settings.home.GlobalSettings.facebook_app_id }}</tt></p>\n<ul>\n<li>use the template tags:</li>\n</ul>\n<p>Add <tt>{% load global_settings_tags %}</tt> at the beginning of your\ntemplate and then use the tags in your template:\n<tt>{% global_settings 'home' 'GlobalSettings' 'facebook_app_id' %}</tt> or\n<tt>{% get_global_settings 'home' 'GlobalSettings' 'facebook_app_id' as facebook_app_id %} {{ facebook_app_id }}</tt>.\nIt\u2019s possible to skip the field name, in which case you\u2019ll get the\nsingleton model instance:\n<tt>{% get_global_settings 'home' 'GlobalSettings' as global_settings %} {{ global_settings.facebook_app_id }}</tt></p>\n<ul>\n<li>use the template tags provided by <tt><span class=\"pre\">django-solo</span></tt>:</li>\n</ul>\n<p>Add <tt>{% load solo_tags %}</tt> at the beginning of your template and then\nuse the tag in your template:\n<tt>{% get_solo 'home.GlobalSettings' as global_settings %} {{ global_settings.facebook_app_id }}</tt></p>\n</div>\n<div id=\"site-specific-settings\">\n<h3>Site specific settings</h3>\n<p>To use the site specific settings of <tt><span class=\"pre\">wagtail-global-settings</span></tt> you\nneed to define a model, which inherits from\n<tt>AbstractSiteSettingsCollection</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wagtail.wagtailadmin.edit_handlers</span> <span class=\"kn\">import</span> <span class=\"n\">FieldPanel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wagtail_global_settings.models</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractSiteSettingsCollection</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">GlobalSettings</span><span class=\"p\">(</span><span class=\"n\">AbstractSiteSettingsCollection</span><span class=\"p\">):</span>\n    <span class=\"n\">facebook_app_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n    <span class=\"n\">google_app_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n    <span class=\"n\">analytics_id</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">256</span><span class=\"p\">)</span>\n\n    <span class=\"n\">panels</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"n\">FieldPanel</span><span class=\"p\">(</span><span class=\"s1\">'facebook_app_id'</span><span class=\"p\">),</span>\n        <span class=\"n\">FieldPanel</span><span class=\"p\">(</span><span class=\"s1\">'google_app_id'</span><span class=\"p\">),</span>\n        <span class=\"n\">FieldPanel</span><span class=\"p\">(</span><span class=\"s1\">'analytics_id'</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Global site settings\"</span>\n</pre>\n<p>The usage is the same as with <tt>AbstractGlobalSettingsCollection</tt>,\nexcept:</p>\n<ul>\n<li>make sure <tt>'wagtail.wagtailcore.middleware.SiteMiddleware'</tt> is in\n<tt>MIDDLEWARE_CLASSES</tt></li>\n<li>use <tt>'wagtail_global_settings.context_processors.site_settings'</tt>\ninstead of\n<tt>'wagtail_global_settings.context_processors.global_settings'</tt> and\nput it after <tt>'django.template.context_processors.request'</tt> in\n<tt>TEMPLATE_CONTEXT_PROCESSORS</tt></li>\n<li>use <tt>{% load site_settings_tags %}</tt> instead of\n<tt>{% load global_settings_tags %}</tt></li>\n<li>use <tt>{% site_settings %}</tt> instead of <tt>{% global_settings %}</tt> in\nthe template</li>\n<li>use <tt>{% get_site_settings %}</tt> instead of\n<tt>{% get_global_settings %}</tt> in the template</li>\n<li><tt><span class=\"pre\">django-solo</span></tt> cannot be used with site specific settings</li>\n</ul>\n<p>The template tags for site specific settings allow passing and optional\nsite argument:\n<tt>{% site_settings 'home' 'GlobalSettings' 'facebook_app_id' the_site %}</tt>.\nIf this argument is missing the settings for the current site will be\nreturned.</p>\n</div>\n<div id=\"usage-in-views\">\n<h3>Usage in views</h3>\n<p>For AbstractGlobalSettingsCollection:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">home.models</span> <span class=\"kn\">import</span> <span class=\"n\">GlobalSettings</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">view_func_global</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">global_settings</span> <span class=\"o\">=</span> <span class=\"n\">GlobalSettings</span><span class=\"o\">.</span><span class=\"n\">get_solo</span><span class=\"p\">()</span>\n    <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'home/the_template.html'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'facebook_app_id'</span><span class=\"p\">:</span> <span class=\"n\">global_settings</span><span class=\"o\">.</span><span class=\"n\">facebook_app_id</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n</pre>\n<p>For AbstractSiteSettingsCollection:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">home.models</span> <span class=\"kn\">import</span> <span class=\"n\">GlobalSettings</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">view_func_global</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">site_settings</span> <span class=\"o\">=</span> <span class=\"n\">GlobalSettings</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">for_site</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">site</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'home/the_template.html'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'facebook_app_id'</span><span class=\"p\">:</span> <span class=\"n\">site_settings</span><span class=\"o\">.</span><span class=\"n\">facebook_app_id</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"general\">\n<h3>General</h3>\n<p>The template tags may be used in two ways:\n<tt>{% site_settings 'home' 'GlobalSettings' 'facebook_app_id' %}</tt> and\n<tt>{% site_settings 'home.GlobalSettings.facebook_app_id' %}</tt>.</p>\n<p>For more information about configuration and caching see\n<a href=\"https://github.com/lazybird/django-solo\" rel=\"nofollow\">django-solo</a>.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1718535, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e82aa5f4e4566cd744b8c6e827ec2bb0", "sha256": "f613712b7156b9a5b9f3de51ccb3281ee68fa878ce544e3652f33292db513da1"}, "downloads": -1, "filename": "wagtail-global-settings-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e82aa5f4e4566cd744b8c6e827ec2bb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6462, "upload_time": "2015-08-29T19:10:31", "upload_time_iso_8601": "2015-08-29T19:10:31.421764Z", "url": "https://files.pythonhosted.org/packages/63/cf/4b5ed602fe2788fc05d5354794d4d27eeb5ea93ee7adbb92069f12404a92/wagtail-global-settings-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e70946d0c4415f335cf3b36e085c0498", "sha256": "5d372d4d5341af20e144ffc8f1403402bfa45c2eb41a63a2e33ad041d992e33f"}, "downloads": -1, "filename": "wagtail-global-settings-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e70946d0c4415f335cf3b36e085c0498", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7143, "upload_time": "2015-08-29T19:40:45", "upload_time_iso_8601": "2015-08-29T19:40:45.483466Z", "url": "https://files.pythonhosted.org/packages/57/5b/21a3001e3336590c6f75c652b9d0eb0d5b0b2a6972f1dff0ff3114f13574/wagtail-global-settings-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4991217c1ca6ad371140c5a0dd03bf12", "sha256": "e5b4e54e691b211a603872b760c07fefaf91f3190d793054030b5b3803d4e061"}, "downloads": -1, "filename": "wagtail-global-settings-0.1.2.tar.gz", "has_sig": false, "md5_digest": "4991217c1ca6ad371140c5a0dd03bf12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11072, "upload_time": "2015-08-30T11:59:34", "upload_time_iso_8601": "2015-08-30T11:59:34.796080Z", "url": "https://files.pythonhosted.org/packages/c2/1d/44372f5cdbaa15fcee5b550e377bed921aa59ee6c80c6df2ad8f749c9567/wagtail-global-settings-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ff1822d3ff249bc33ff86a1862c952c7", "sha256": "62926e60b3ea00c3260bfb53c66a6bc23b0d3bf22ce0b7730219490ca5dcf487"}, "downloads": -1, "filename": "wagtail-global-settings-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ff1822d3ff249bc33ff86a1862c952c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11190, "upload_time": "2015-08-30T13:34:00", "upload_time_iso_8601": "2015-08-30T13:34:00.853848Z", "url": "https://files.pythonhosted.org/packages/95/9c/a5773ee90a0884d53c997ccce23bfbf26126855026e2872821ae73e5a53d/wagtail-global-settings-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "640346d2703bc557cffc7a28d641cd7d", "sha256": "df44092babc5f40c2046ce32b92976b442a74d8be3d1fbd9351c2282ecf00512"}, "downloads": -1, "filename": "wagtail-global-settings-0.1.4.tar.gz", "has_sig": false, "md5_digest": "640346d2703bc557cffc7a28d641cd7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11343, "upload_time": "2015-08-30T20:19:31", "upload_time_iso_8601": "2015-08-30T20:19:31.272786Z", "url": "https://files.pythonhosted.org/packages/99/71/d788b98664357cfbddb74cef9d7f0cc3c6948b344cb647c05872bc1cbc99/wagtail-global-settings-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "640346d2703bc557cffc7a28d641cd7d", "sha256": "df44092babc5f40c2046ce32b92976b442a74d8be3d1fbd9351c2282ecf00512"}, "downloads": -1, "filename": "wagtail-global-settings-0.1.4.tar.gz", "has_sig": false, "md5_digest": "640346d2703bc557cffc7a28d641cd7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11343, "upload_time": "2015-08-30T20:19:31", "upload_time_iso_8601": "2015-08-30T20:19:31.272786Z", "url": "https://files.pythonhosted.org/packages/99/71/d788b98664357cfbddb74cef9d7f0cc3c6948b344cb647c05872bc1cbc99/wagtail-global-settings-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:04 2020"}