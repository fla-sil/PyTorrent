{"info": {"author": "Felix Brezo and Yaiza Rubio", "author_email": "contacto@i3visio.com", "bugtrack_url": null, "classifiers": [], "description": "::\n\n    =========================================================\n    usufy  Copyright (C) 2014  F. Brezo and Y. Rubio, i3visio\n    =========================================================\n\nDescription:\n============\n\nusufy is a GPLv3+ piece of software that checks the existence of a\nprofile for a given user in a bunch of different platforms using the\nerror messages displayed by most platforms when a user profile has not\nbeen found as the evidence of the existence or not of a given profile.\nIts inheritance system has been designed to allow an easy development of\nnew wrappers while its multiprocessing conception shows the results\nfastly.\n\nThe supported networks include by 2014-12-26 are: '500px', 'adtriboo',\n'anarchy101', 'aporrealos', 'apsense', 'arduino', 'ariva', 'armorgames',\n'artbreak', 'artician', 'arto', 'askfm', 'audiob', 'audioboo',\n'authorstream', 'autospies', 'backyardchickens', 'badoo', 'behance',\n'bennugd', 'bitbucket', 'bitcointalk', 'bitly', 'blackplanet', 'bladna',\n'blip', 'blogspot', 'bookmarky', 'bookofmatches', 'boonex', 'bordom',\n'boxedup', 'breakcom', 'bucketlistly', 'burbuja.info', 'burdastyle',\n'buzznet', 'cafemom', 'carbonmade', 'cardomain', 'care2', 'castroller',\n'causes', 'ccsinfo', 'chess', 'cockos', 'connectingsingles',\n'dailymail', 'dailymotion', 'deviantart', 'digitalspy', 'disqus',\n'doodle', 'douban', 'dribbble', 'drugbuyersforum', 'drupal', 'ebay',\n'echatta', 'elmundo', 'enfemenino', 'epinions', 'eqe', 'ethereum',\n'etsy', 'evilzone', 'facebook', 'fanpop', 'fark', 'favstar', 'flickr',\n'flixster', 'foodspotting', 'forobtc', 'forocoches', 'foursquare',\n'freebase', 'freerepublic', 'friendfeed', 'gametracker', 'gapyear',\n'garage4hackers', 'gather', 'geeksphone', 'genspot', 'getsatisfaction',\n'github', 'gitorious', 'gogobot', 'goodreads', 'googleplus', 'gsmspain',\n'hellboundhackers', 'hi5', 'ibosocial', 'identica', 'imgur',\n'instagram', 'instructables', 'intersect', 'intfiction',\n'islamicawakening', 'issuu', 'ixgames', 'jamiiforums', 'kaboodle',\n'kali', 'karmacracy', 'kickstarter', 'kinja', 'klout', 'kongregate',\n'kupika', 'lastfm', 'linkedin', 'livejournal', 'looki', 'marca',\n'matchdoctor', 'mcneel', 'mediavida', 'medium', 'meneame', 'metacafe',\n'migente', 'minecraft', 'musicasacra', 'myeloma', 'myspace', 'naver',\n'netlog', 'netvibes', 'occupywallst', 'odnoklassniki', 'openframeworks',\n'oroom', 'pastebin', 'pearltrees', 'peerbackers', 'photobucket',\n'pinterest', 'pixinsight', 'pjrc', 'plancast', 'pokerred',\n'pokerstrategy', 'pornhub', 'proboards', 'pz', 'qq',\n'quartermoonsaloon', 'rankia', 'rapid', 'ratemypoo', 'rawtherapee',\n'rebelmouse', 'redtube', 'relatious', 'researchgate', 'rojadirecta',\n'ruby', 'scribd', 'sencha', 'skype', 'slashdot', 'slideshare',\n'smartcitizen', 'sokule', 'soundcloud', 'sourceforge', 'spaniards',\n'spoj', 'spotify', 'squidoo', 'steamcommunity', 'steinberg',\n'streakgaming', 'stuff', 'stumbleupon', 'teamtreehouse', 'techcrunch',\n'thecarcommunity', 'theguardian', 'thehoodup', 'thesims',\n'thestudentroom', 'tradimo', 'travian', 'tripadvisor', 'tripit',\n'trulia', 'tumblr', 'tuporno', 'tvtag', 'twicsy', 'twitch', 'twitpic',\n'twitter', 'twoplustwo', 'ummahforum', 'unsystem', 'ustream',\n'vexforum', 'videohelp', 'vimeo', 'virustotal', 'vk', 'wefollow',\n'wikipedia', 'winamp', 'wishlistr', 'wordpress', 'wykop', 'xanga',\n'xat', 'xing', 'xtube', 'youku', 'youtube', 'zabbix', 'zentyal'\n\nLicense: GPLv3+\n===============\n\nThis is free software, and you are welcome to redistribute it under\ncertain conditions.\n\n::\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nFor more details on this issue, run:\n``python usufy-launcher.py --license``\n\nInstallation:\n=============\n\nThe instructions may vary in the different OS. However, we strongly\nrecommend to install the i3visiotools package separately, as you will be\nable to configure your credentials for the different platforms and\nprivate API. If you don't have any, you can go on with this tutorial.\n\nUnder Linux\n-----------\n\nWe recommend you to create a folder under /var owned by the current\nuser. For instance:\n``# You will need superuser privileges to create this folder  sudo mkdir /var/i3visio # You will need to change the owner to your user to work with it safely # If your user was alice sudo chown alice:alice /var/i3visio``\n\nThe rest of the installation under Python 2.7 is as follows:\n``# Navigate to the destiny's folder cd /var/i3visio # Cloning the repository. Recommended for developers. git clone http://github.com/i3visio/usufy usufy-master cd usufy-master``\nor\n``# Navigate to the destiny's folder cd /var/i3visio # Download wget http://github.com/i3visio/usufy/archive/master.zip # Unzip unzip usufy-master.zip cd usufy-master``\n\nThen you can resume the installation.\n``# Superuser privileges are required so as to complete the installation. sudo python setup.py build sudo python setup.py install``\nAfterwards, the module will be importable from any python code. You can\ncheck this by typing: ``python -c \"import usufy\"`` If no error is\ndisplayed, the installation would have been performed correctly.\n\nUsage:\n======\n\nSo as to run the program, navigate to /var/i3visio/usufy-mster/usufy and\nrun: ``python usufy-launcher.py -h`` The usage is described as follows:\n``usage: usufy-launcher.py                 (--info <action> | -l <path_to_nick_list> | -n <nick> [<nick> ...])                 [-p <platform> [<platform> ...]] [-t <tag> [<tag> ...]] [-a]                 [-e <sum_ext> [<sum_ext> ...]] [-o <path_to_output_folder>]                 [-v <verbosity>] [-h] [--license] [--version]``\n\nThe functionalities are described as follows: \\`\\`\\` Input options (one\nrequired): There are two different ways of receiving the nicks in\nusufy-launcher.py:\n\n--info select the action to be performed amongst the following:\nlist\\_platforms (list the details of the selected platforms) or\nlist\\_tags (list the tags of the selected platforms). -l , --list path\nto the file where the list of nicks to verify is stored (one per line).\n-n [ ...], --nicks [ ...] the list of nicks to process (at least one is\nrequired).\n\nPlatform selection arguments: Criteria for selecting the platforms where\nperforming the search.\n\n-p [ ...], --platforms [ ...] select the platforms where you want to\nperform the search amongst the following: all, badoo, blip, delicious,\nebay, facebook, foursquare, googleplus, karmacracy, klout,\nmyspace,pastebin, pinterest, slideshare, twitter, vk, youtube. More than\none option can be selected. -t [ ...], --tags [ ...] select the list of\ntags that fit the platforms in which you want to perform the search.\nMore than one option can be selected.\n\nProcessing arguments: Configuring the way in which usufy will process\nthe identified profiles.\n\n-a, --avoid\\_processing argument to force usufy NOT to process the\ndownloaded valid profiles. -e [ ...], --extension [ ...] output\nextension for the summary file (at least, one required). Currently\nsupported: csv, json. -o , --output\\_folder output folder for the\ngenerated documents. While if the paths does not exist,\nusufy-launcher.py will try to create; if this argument is not provided,\nusufy will NOT write any down any data. Check permissions if something\ngoes wrong.\n\nAbout arguments: Showing additional information about this program.\n\n-h, --help shows the version of the program and exists. --license shows\nthe GPLv3 license. --version shows the version of the program and\nexists. \\`\\`\\`\n\nExamples:\n=========\n\nThe capabilities of the tool can be divided as informative, basic\nsearches and processing.\n\nInformative:\n------------\n\nThese commands can be used to gather information about the state of the\napplication. - Checking some details of all the platforms to be\nprocessed: ``python usufy-launcher.py --info list_platforms`` - Checking\nsome details of the platforms labelled as 'social' and 'contact':\n``python usufy-launcher.py -p social contact --info list_platforms`` -\nChecking the number of platforms categorised under each and every tag:\n``python usufy-launcher.py --info list_tags`` To gather additional\ninformation about the tool, you may type: - Checking the help of the\napplication: ``python usufy-launcher.py -h`` It may be recommended to be\nrun as to read it step by step: ``python usufy-launcher.py -h | less`` -\nChecking the current version of the application:\n``python usufy-launcher.py --version`` - Checking the terms of the\nlicense: ``python usufy-launcher.py --license`` Again, it may be\nrecommended to be run as to read it step by step:\n``python usufy-launcher.py --license | less``\n\nBasic Searches:\n---------------\n\nThe basic searches will only print the results in the terminal. Here are\nsome examples: - Checking if the user 'example' exist in all the\nplatforms ('-p all' is not needed):\n``python usufy-launcher.py -n example`` We can also use the long version\nof the commands. In this case, the long version of '-n' is '--nick'.\nCheck the section before for further details.\n``python usufy-launcher.py --nick example`` - Checking if the users\n'example1' and 'example2' exist in all the platforms ('-p all' is not\nneeded): ``python usufy-launcher.py -n example1 example2`` - Checking if\nthe users 'example1' and 'example2' exist ONLY in Facebook and Twitter:\n``python usufy-launcher.py -n example1 example2 - p facebook twitter`` -\nChecking if the users existing in 'test.txt' exist in the Platforms\ntagged as 'social': ``python usufy-launcher.py -l test.txt -t social``\n\nAdditional processing:\n----------------------\n\nApart from the console output, usufy-launcher.py is capable of\ngenerating additional resources: - Checking if the user 'example' exist\nin all the platforms and storing the information of the successfully\nfound profiles in a folder called './results' (this will create the\nfolder if it does not exist):\n``python usufy-launcher.py -n example -o ./results`` This option will\ndownload the information of the profiles as well as creating a .csv file\nby default with the profiles found. This .csv file can be changed for a\nJson file: ``python usufy-launcher.py -n example -o ./results -e json``\n- Checking if the users listed in a 'test.txt' file exist in all the\nplatforms WITHOUT stotring\nthe successfully found profiles but keeping the results in a Json file:\n``python usufy-launcher.py -n example -o ./results -e json --avoid_processing``", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/i3visio/usufy", "keywords": null, "license": "COPYING", "maintainer": null, "maintainer_email": null, "name": "usufy", "package_url": "https://pypi.org/project/usufy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/usufy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/i3visio/usufy"}, "release_url": "https://pypi.org/project/usufy/v2.0.1/", "requires_dist": null, "requires_python": null, "summary": "usufy - Piece of software to check the existence of a given profile in different platforms developed by i3visio.", "version": "v2.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <pre>=========================================================\nusufy  Copyright (C) 2014  F. Brezo and Y. Rubio, i3visio\n=========================================================\n</pre>\n<div id=\"description\">\n<h2>Description:</h2>\n<p>usufy is a GPLv3+ piece of software that checks the existence of a\nprofile for a given user in a bunch of different platforms using the\nerror messages displayed by most platforms when a user profile has not\nbeen found as the evidence of the existence or not of a given profile.\nIts inheritance system has been designed to allow an easy development of\nnew wrappers while its multiprocessing conception shows the results\nfastly.</p>\n<p>The supported networks include by 2014-12-26 are: \u2018500px\u2019, \u2018adtriboo\u2019,\n\u2018anarchy101\u2019, \u2018aporrealos\u2019, \u2018apsense\u2019, \u2018arduino\u2019, \u2018ariva\u2019, \u2018armorgames\u2019,\n\u2018artbreak\u2019, \u2018artician\u2019, \u2018arto\u2019, \u2018askfm\u2019, \u2018audiob\u2019, \u2018audioboo\u2019,\n\u2018authorstream\u2019, \u2018autospies\u2019, \u2018backyardchickens\u2019, \u2018badoo\u2019, \u2018behance\u2019,\n\u2018bennugd\u2019, \u2018bitbucket\u2019, \u2018bitcointalk\u2019, \u2018bitly\u2019, \u2018blackplanet\u2019, \u2018bladna\u2019,\n\u2018blip\u2019, \u2018blogspot\u2019, \u2018bookmarky\u2019, \u2018bookofmatches\u2019, \u2018boonex\u2019, \u2018bordom\u2019,\n\u2018boxedup\u2019, \u2018breakcom\u2019, \u2018bucketlistly\u2019, \u2018burbuja.info\u2019, \u2018burdastyle\u2019,\n\u2018buzznet\u2019, \u2018cafemom\u2019, \u2018carbonmade\u2019, \u2018cardomain\u2019, \u2018care2\u2019, \u2018castroller\u2019,\n\u2018causes\u2019, \u2018ccsinfo\u2019, \u2018chess\u2019, \u2018cockos\u2019, \u2018connectingsingles\u2019,\n\u2018dailymail\u2019, \u2018dailymotion\u2019, \u2018deviantart\u2019, \u2018digitalspy\u2019, \u2018disqus\u2019,\n\u2018doodle\u2019, \u2018douban\u2019, \u2018dribbble\u2019, \u2018drugbuyersforum\u2019, \u2018drupal\u2019, \u2018ebay\u2019,\n\u2018echatta\u2019, \u2018elmundo\u2019, \u2018enfemenino\u2019, \u2018epinions\u2019, \u2018eqe\u2019, \u2018ethereum\u2019,\n\u2018etsy\u2019, \u2018evilzone\u2019, \u2018facebook\u2019, \u2018fanpop\u2019, \u2018fark\u2019, \u2018favstar\u2019, \u2018flickr\u2019,\n\u2018flixster\u2019, \u2018foodspotting\u2019, \u2018forobtc\u2019, \u2018forocoches\u2019, \u2018foursquare\u2019,\n\u2018freebase\u2019, \u2018freerepublic\u2019, \u2018friendfeed\u2019, \u2018gametracker\u2019, \u2018gapyear\u2019,\n\u2018garage4hackers\u2019, \u2018gather\u2019, \u2018geeksphone\u2019, \u2018genspot\u2019, \u2018getsatisfaction\u2019,\n\u2018github\u2019, \u2018gitorious\u2019, \u2018gogobot\u2019, \u2018goodreads\u2019, \u2018googleplus\u2019, \u2018gsmspain\u2019,\n\u2018hellboundhackers\u2019, \u2018hi5\u2019, \u2018ibosocial\u2019, \u2018identica\u2019, \u2018imgur\u2019,\n\u2018instagram\u2019, \u2018instructables\u2019, \u2018intersect\u2019, \u2018intfiction\u2019,\n\u2018islamicawakening\u2019, \u2018issuu\u2019, \u2018ixgames\u2019, \u2018jamiiforums\u2019, \u2018kaboodle\u2019,\n\u2018kali\u2019, \u2018karmacracy\u2019, \u2018kickstarter\u2019, \u2018kinja\u2019, \u2018klout\u2019, \u2018kongregate\u2019,\n\u2018kupika\u2019, \u2018lastfm\u2019, \u2018linkedin\u2019, \u2018livejournal\u2019, \u2018looki\u2019, \u2018marca\u2019,\n\u2018matchdoctor\u2019, \u2018mcneel\u2019, \u2018mediavida\u2019, \u2018medium\u2019, \u2018meneame\u2019, \u2018metacafe\u2019,\n\u2018migente\u2019, \u2018minecraft\u2019, \u2018musicasacra\u2019, \u2018myeloma\u2019, \u2018myspace\u2019, \u2018naver\u2019,\n\u2018netlog\u2019, \u2018netvibes\u2019, \u2018occupywallst\u2019, \u2018odnoklassniki\u2019, \u2018openframeworks\u2019,\n\u2018oroom\u2019, \u2018pastebin\u2019, \u2018pearltrees\u2019, \u2018peerbackers\u2019, \u2018photobucket\u2019,\n\u2018pinterest\u2019, \u2018pixinsight\u2019, \u2018pjrc\u2019, \u2018plancast\u2019, \u2018pokerred\u2019,\n\u2018pokerstrategy\u2019, \u2018pornhub\u2019, \u2018proboards\u2019, \u2018pz\u2019, \u2018qq\u2019,\n\u2018quartermoonsaloon\u2019, \u2018rankia\u2019, \u2018rapid\u2019, \u2018ratemypoo\u2019, \u2018rawtherapee\u2019,\n\u2018rebelmouse\u2019, \u2018redtube\u2019, \u2018relatious\u2019, \u2018researchgate\u2019, \u2018rojadirecta\u2019,\n\u2018ruby\u2019, \u2018scribd\u2019, \u2018sencha\u2019, \u2018skype\u2019, \u2018slashdot\u2019, \u2018slideshare\u2019,\n\u2018smartcitizen\u2019, \u2018sokule\u2019, \u2018soundcloud\u2019, \u2018sourceforge\u2019, \u2018spaniards\u2019,\n\u2018spoj\u2019, \u2018spotify\u2019, \u2018squidoo\u2019, \u2018steamcommunity\u2019, \u2018steinberg\u2019,\n\u2018streakgaming\u2019, \u2018stuff\u2019, \u2018stumbleupon\u2019, \u2018teamtreehouse\u2019, \u2018techcrunch\u2019,\n\u2018thecarcommunity\u2019, \u2018theguardian\u2019, \u2018thehoodup\u2019, \u2018thesims\u2019,\n\u2018thestudentroom\u2019, \u2018tradimo\u2019, \u2018travian\u2019, \u2018tripadvisor\u2019, \u2018tripit\u2019,\n\u2018trulia\u2019, \u2018tumblr\u2019, \u2018tuporno\u2019, \u2018tvtag\u2019, \u2018twicsy\u2019, \u2018twitch\u2019, \u2018twitpic\u2019,\n\u2018twitter\u2019, \u2018twoplustwo\u2019, \u2018ummahforum\u2019, \u2018unsystem\u2019, \u2018ustream\u2019,\n\u2018vexforum\u2019, \u2018videohelp\u2019, \u2018vimeo\u2019, \u2018virustotal\u2019, \u2018vk\u2019, \u2018wefollow\u2019,\n\u2018wikipedia\u2019, \u2018winamp\u2019, \u2018wishlistr\u2019, \u2018wordpress\u2019, \u2018wykop\u2019, \u2018xanga\u2019,\n\u2018xat\u2019, \u2018xing\u2019, \u2018xtube\u2019, \u2018youku\u2019, \u2018youtube\u2019, \u2018zabbix\u2019, \u2018zentyal\u2019</p>\n</div>\n<div id=\"license-gplv3\">\n<h2>License: GPLv3+</h2>\n<p>This is free software, and you are welcome to redistribute it under\ncertain conditions.</p>\n<pre>This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</pre>\n<p>For more details on this issue, run:\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">--license</span></tt></p>\n</div>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p>The instructions may vary in the different OS. However, we strongly\nrecommend to install the i3visiotools package separately, as you will be\nable to configure your credentials for the different platforms and\nprivate API. If you don\u2019t have any, you can go on with this tutorial.</p>\n<div id=\"under-linux\">\n<h3>Under Linux</h3>\n<p>We recommend you to create a folder under /var owned by the current\nuser. For instance:\n<tt># You will need superuser privileges to create this folder\u00a0 sudo mkdir /var/i3visio # You will need to change the owner to your user to work with it safely # If your user was alice sudo chown alice:alice /var/i3visio</tt></p>\n<p>The rest of the installation under Python 2.7 is as follows:\n<tt># Navigate to the destiny's folder cd /var/i3visio # Cloning the repository. Recommended for developers. git clone <span class=\"pre\">http://github.com/i3visio/usufy</span> <span class=\"pre\">usufy-master</span> cd <span class=\"pre\">usufy-master</span></tt>\nor\n<tt># Navigate to the destiny's folder cd /var/i3visio # Download wget <span class=\"pre\">http://github.com/i3visio/usufy/archive/master.zip</span> # Unzip unzip <span class=\"pre\">usufy-master.zip</span> cd <span class=\"pre\">usufy-master</span></tt></p>\n<p>Then you can resume the installation.\n<tt># Superuser privileges are required so as to complete the installation. sudo python setup.py build sudo python setup.py install</tt>\nAfterwards, the module will be importable from any python code. You can\ncheck this by typing: <tt>python <span class=\"pre\">-c</span> \"import usufy\"</tt> If no error is\ndisplayed, the installation would have been performed correctly.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<p>So as to run the program, navigate to /var/i3visio/usufy-mster/usufy and\nrun: <tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-h</span></tt> The usage is described as follows:\n<tt>usage: <span class=\"pre\">usufy-launcher.py</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pre\">(--info</span> &lt;action&gt; | <span class=\"pre\">-l</span> &lt;path_to_nick_list&gt; | <span class=\"pre\">-n</span> &lt;nick&gt; [&lt;nick&gt; <span class=\"pre\">...])</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pre\">[-p</span> &lt;platform&gt; [&lt;platform&gt; <span class=\"pre\">...]]</span> <span class=\"pre\">[-t</span> &lt;tag&gt; [&lt;tag&gt; <span class=\"pre\">...]]</span> <span class=\"pre\">[-a]</span>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pre\">[-e</span> &lt;sum_ext&gt; [&lt;sum_ext&gt; <span class=\"pre\">...]]</span> <span class=\"pre\">[-o</span> &lt;path_to_output_folder&gt;]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 <span class=\"pre\">[-v</span> &lt;verbosity&gt;] <span class=\"pre\">[-h]</span> <span class=\"pre\">[--license]</span> <span class=\"pre\">[--version]</span></tt></p>\n<p>The functionalities are described as follows: ``` Input options (one\nrequired): There are two different ways of receiving the nicks in\nusufy-launcher.py:</p>\n<p>\u2013info select the action to be performed amongst the following:\nlist_platforms (list the details of the selected platforms) or\nlist_tags (list the tags of the selected platforms). -l , \u2013list path\nto the file where the list of nicks to verify is stored (one per line).\n-n [ \u2026], \u2013nicks [ \u2026] the list of nicks to process (at least one is\nrequired).</p>\n<p>Platform selection arguments: Criteria for selecting the platforms where\nperforming the search.</p>\n<p>-p [ \u2026], \u2013platforms [ \u2026] select the platforms where you want to\nperform the search amongst the following: all, badoo, blip, delicious,\nebay, facebook, foursquare, googleplus, karmacracy, klout,\nmyspace,pastebin, pinterest, slideshare, twitter, vk, youtube. More than\none option can be selected. -t [ \u2026], \u2013tags [ \u2026] select the list of\ntags that fit the platforms in which you want to perform the search.\nMore than one option can be selected.</p>\n<p>Processing arguments: Configuring the way in which usufy will process\nthe identified profiles.</p>\n<p>-a, \u2013avoid_processing argument to force usufy NOT to process the\ndownloaded valid profiles. -e [ \u2026], \u2013extension [ \u2026] output\nextension for the summary file (at least, one required). Currently\nsupported: csv, json. -o , \u2013output_folder output folder for the\ngenerated documents. While if the paths does not exist,\nusufy-launcher.py will try to create; if this argument is not provided,\nusufy will NOT write any down any data. Check permissions if something\ngoes wrong.</p>\n<p>About arguments: Showing additional information about this program.</p>\n<p>-h, \u2013help shows the version of the program and exists. \u2013license shows\nthe GPLv3 license. \u2013version shows the version of the program and\nexists. ```</p>\n</div>\n<div id=\"examples\">\n<h2>Examples:</h2>\n<p>The capabilities of the tool can be divided as informative, basic\nsearches and processing.</p>\n<div id=\"informative\">\n<h3>Informative:</h3>\n<p>These commands can be used to gather information about the state of the\napplication. - Checking some details of all the platforms to be\nprocessed: <tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">--info</span> list_platforms</tt> - Checking\nsome details of the platforms labelled as \u2018social\u2019 and \u2018contact\u2019:\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-p</span> social contact <span class=\"pre\">--info</span> list_platforms</tt> -\nChecking the number of platforms categorised under each and every tag:\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">--info</span> list_tags</tt> To gather additional\ninformation about the tool, you may type: - Checking the help of the\napplication: <tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-h</span></tt> It may be recommended to be\nrun as to read it step by step: <tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-h</span> | less</tt> -\nChecking the current version of the application:\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">--version</span></tt> - Checking the terms of the\nlicense: <tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">--license</span></tt> Again, it may be\nrecommended to be run as to read it step by step:\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">--license</span> | less</tt></p>\n</div>\n<div id=\"basic-searches\">\n<h3>Basic Searches:</h3>\n<p>The basic searches will only print the results in the terminal. Here are\nsome examples: - Checking if the user \u2018example\u2019 exist in all the\nplatforms (\u2018-p all\u2019 is not needed):\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-n</span> example</tt> We can also use the long version\nof the commands. In this case, the long version of \u2018-n\u2019 is \u2018\u2013nick\u2019.\nCheck the section before for further details.\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">--nick</span> example</tt> - Checking if the users\n\u2018example1\u2019 and \u2018example2\u2019 exist in all the platforms (\u2018-p all\u2019 is not\nneeded): <tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-n</span> example1 example2</tt> - Checking if\nthe users \u2018example1\u2019 and \u2018example2\u2019 exist ONLY in Facebook and Twitter:\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-n</span> example1 example2 - p facebook twitter</tt> -\nChecking if the users existing in \u2018test.txt\u2019 exist in the Platforms\ntagged as \u2018social\u2019: <tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-l</span> test.txt <span class=\"pre\">-t</span> social</tt></p>\n</div>\n<div id=\"additional-processing\">\n<h3>Additional processing:</h3>\n<p>Apart from the console output, usufy-launcher.py is capable of\ngenerating additional resources: - Checking if the user \u2018example\u2019 exist\nin all the platforms and storing the information of the successfully\nfound profiles in a folder called \u2018./results\u2019 (this will create the\nfolder if it does not exist):\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-n</span> example <span class=\"pre\">-o</span> ./results</tt> This option will\ndownload the information of the profiles as well as creating a .csv file\nby default with the profiles found. This .csv file can be changed for a\nJson file: <tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-n</span> example <span class=\"pre\">-o</span> ./results <span class=\"pre\">-e</span> json</tt>\n- Checking if the users listed in a \u2018test.txt\u2019 file exist in all the\nplatforms WITHOUT stotring\nthe successfully found profiles but keeping the results in a Json file:\n<tt>python <span class=\"pre\">usufy-launcher.py</span> <span class=\"pre\">-n</span> example <span class=\"pre\">-o</span> ./results <span class=\"pre\">-e</span> json <span class=\"pre\">--avoid_processing</span></tt></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1361227, "releases": {"v2.0.1": [{"comment_text": "built for Linux-3.14-kali1-686-pae-i686-with-glibc2.7", "digests": {"md5": "922d1e1595799207e2720c505339fab8", "sha256": "70f4efe8f3a7826a3600e321e4123a761fb863da26cf7237b39e79ee64198d4e"}, "downloads": -1, "filename": "usufy-v2.0.1.linux-i686.tar.gz", "has_sig": false, "md5_digest": "922d1e1595799207e2720c505339fab8", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 19877, "upload_time": "2014-12-26T09:37:29", "upload_time_iso_8601": "2014-12-26T09:37:29.242265Z", "url": "https://files.pythonhosted.org/packages/af/c8/f6994bb0ac8afe9db4ea7f99f9f1ec2e7ae30037d19a2cd23860c78a18c0/usufy-v2.0.1.linux-i686.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Linux-3.14-kali1-686-pae-i686-with-glibc2.7", "digests": {"md5": "922d1e1595799207e2720c505339fab8", "sha256": "70f4efe8f3a7826a3600e321e4123a761fb863da26cf7237b39e79ee64198d4e"}, "downloads": -1, "filename": "usufy-v2.0.1.linux-i686.tar.gz", "has_sig": false, "md5_digest": "922d1e1595799207e2720c505339fab8", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 19877, "upload_time": "2014-12-26T09:37:29", "upload_time_iso_8601": "2014-12-26T09:37:29.242265Z", "url": "https://files.pythonhosted.org/packages/af/c8/f6994bb0ac8afe9db4ea7f99f9f1ec2e7ae30037d19a2cd23860c78a18c0/usufy-v2.0.1.linux-i686.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:38:56 2020"}