{"info": {"author": "Matthias Urlichs", "author_email": "matthias@urlichs.de", "bugtrack_url": null, "classifiers": [], "description": "trio-serf\n=========\n\ntrio-serf is an async Python interface to Serf, the decentralised solution\nfor service discovery and orchestration.\n\nIt uses `trio <https://github.com/python-trio/trio>` as its underlying\nasync framework. Previous versions used the `anyio\n<https://github.com/agronholm/anyio>` wrapper, thus worked with ``asyncio``,\n``trio``, and ``curio``, but this has been discontinued because of issues\nwith error handling.\n\n.. image:: https://badge.fury.io/py/trio-serf.svg\n    :alt: PyPI latest version badge\n    :target: https://pypi.python.org/pypi/trio-serf\n.. image:: https://coveralls.io/repos/smurfix/trio-serf/badge.png?branch=master\n    :alt: Code coverage badge\n    :target: https://coveralls.io/r/smurfix/trio-serf?branch=master\n\nInstallation\n------------\n\ntrio-serf requires a running Serf agent. See `Serf's agent documentation\n<http://www.serfdom.io/docs/agent/basics.html>`_ for instructions.\n\nTo install trio-serf, run the following command:\n\n.. code-block:: bash\n\n    $ pip install trio-serf\n\nor alternatively (you really should be using pip though):\n\n.. code-block:: bash\n\n    $ easy_install trio-serf\n\nor from source:\n\n.. code-block:: bash\n\n    $ python setup.py install\n\nGetting Started\n---------------\n\nThese examples require a running async loop.\n`Trio <https://github.com/python-trio/trio>` is recommended, though\n``asyncio`` works too.\n\n.. code-block:: python\n\n    from trio_serf import serf_client\n\n    async with serf_client() as client:\n        await client.event('foo', 'bar')\n\nStream usage:\n\n.. code-block:: python\n\n    from trio_serf import serf_client\n\n    async with serf_client() as client:\n        async with client.stream('*') as stream:\n            async for resp in stream:\n                print(resp)\n\nDevelopment\n------------\n\nYou can run the tests using the following commands:\n\n.. code-block:: bash\n\n    $ serf agent --tag foo=bar & # start serf agent\n    $ python3 -mpytest tests\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/smurfix/trio-serf", "keywords": "Serf", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "trio_serf", "package_url": "https://pypi.org/project/trio_serf/", "platform": "", "project_url": "https://pypi.org/project/trio_serf/", "project_urls": {"Homepage": "https://github.com/smurfix/trio-serf"}, "release_url": "https://pypi.org/project/trio_serf/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Python client for the Serf orchestration tool", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>trio-serf is an async Python interface to Serf, the decentralised solution\nfor service discovery and orchestration.</p>\n<p>It uses <cite>trio &lt;https://github.com/python-trio/trio&gt;</cite> as its underlying\nasync framework. Previous versions used the <cite>anyio\n&lt;https://github.com/agronholm/anyio&gt;</cite> wrapper, thus worked with <tt>asyncio</tt>,\n<tt>trio</tt>, and <tt>curio</tt>, but this has been discontinued because of issues\nwith error handling.</p>\n<a href=\"https://pypi.python.org/pypi/trio-serf\" rel=\"nofollow\"><img alt=\"PyPI latest version badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c6b35b1a3ea62ff7d446fe13ee004c660d3a294a/68747470733a2f2f62616467652e667572792e696f2f70792f7472696f2d736572662e737667\"></a>\n<a href=\"https://coveralls.io/r/smurfix/trio-serf?branch=master\" rel=\"nofollow\"><img alt=\"Code coverage badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94534d01483103847455c9dadcee0f6298e28222/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f736d75726669782f7472696f2d736572662f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>trio-serf requires a running Serf agent. See <a href=\"http://www.serfdom.io/docs/agent/basics.html\" rel=\"nofollow\">Serf\u2019s agent documentation</a> for instructions.</p>\n<p>To install trio-serf, run the following command:</p>\n<pre>$ pip install trio-serf\n</pre>\n<p>or alternatively (you really should be using pip though):</p>\n<pre>$ easy_install trio-serf\n</pre>\n<p>or from source:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>These examples require a running async loop.\n<cite>Trio &lt;https://github.com/python-trio/trio&gt;</cite> is recommended, though\n<tt>asyncio</tt> works too.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">trio_serf</span> <span class=\"kn\">import</span> <span class=\"n\">serf_client</span>\n\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">serf_client</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span><span class=\"p\">)</span>\n</pre>\n<p>Stream usage:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">trio_serf</span> <span class=\"kn\">import</span> <span class=\"n\">serf_client</span>\n\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">serf_client</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"p\">(</span><span class=\"s1\">'*'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">stream</span><span class=\"p\">:</span>\n        <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">resp</span> <span class=\"ow\">in</span> <span class=\"n\">stream</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>You can run the tests using the following commands:</p>\n<pre>$ serf agent --tag <span class=\"nv\">foo</span><span class=\"o\">=</span>bar <span class=\"p\">&amp;</span> <span class=\"c1\"># start serf agent\n</span>$ python3 -mpytest tests\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4963963, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "f22c9c1859b09f58170d91ed8d166611", "sha256": "5073428a554b598c549c7f29d737002a36d4a0ecd3865733f1681124a315f39d"}, "downloads": -1, "filename": "trio_serf-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f22c9c1859b09f58170d91ed8d166611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30429, "upload_time": "2019-03-20T14:25:46", "upload_time_iso_8601": "2019-03-20T14:25:46.841742Z", "url": "https://files.pythonhosted.org/packages/a2/8d/deafd4937e63e536289f6ebf16cea303594aa45b287fdb050b53ecebfdf0/trio_serf-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f22c9c1859b09f58170d91ed8d166611", "sha256": "5073428a554b598c549c7f29d737002a36d4a0ecd3865733f1681124a315f39d"}, "downloads": -1, "filename": "trio_serf-0.4.0.tar.gz", "has_sig": false, "md5_digest": "f22c9c1859b09f58170d91ed8d166611", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30429, "upload_time": "2019-03-20T14:25:46", "upload_time_iso_8601": "2019-03-20T14:25:46.841742Z", "url": "https://files.pythonhosted.org/packages/a2/8d/deafd4937e63e536289f6ebf16cea303594aa45b287fdb050b53ecebfdf0/trio_serf-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:47:04 2020"}