{"info": {"author": "Andrew Leech", "author_email": "andrew@alelec.net", "bugtrack_url": null, "classifiers": [], "description": "=================\nwindows_entry_exe\n=================\n\nThis is a simple launcher for Python files, which is functionally equivalent to\nthe launchers in setuptools but not based on setuptools code. There are two\nversions of the launcher - console and GUI - built from the same source code.\n\nThis project is based on simple_launcher by Vinay Sajip (https://bitbucket.org/vinay.sajip/simple_launcher).\nWhere the original project launches the script via a python child process however,\nthis launcher embeds python and launches the script directly. \n\nThe main benefit of this is seen with gui projects on windows, such that the program\nin the taskbar is the launcher exe rather than the python.exe in `simple_launcher`.\nThis change means pinning the program to the taskbar works, as does any application icons set.\n\nThe launcher is intended to facilitate script execution under Windows where a\nPEP 397-compatible launcher is not available. The idea is that each Python\nscript has a copy of the launcher (symlinks not being generally available\nunder Windows). For scripts to work with the launcher, they have to have a name\nending in -script.py (for a console script) or -script.pyw (for a GUI script).\nThe deployment system (e.g. packaging) will ensure that for foo-script.py, a\nconsole launcher opy named foo.exe is placed in the same directory; for\nbar-script.pyw, a GUI launcher copy named bar.exe is placed in the same\ndirectory.\n\nAssuming that the relevant directories are on the path, the scripts can be\ninvoked using just \"foo\" or \"bar\". The foo.exe or bar.exe executable then\nruns: it looks for a script with the appropriate suffix (\"-script.py\" or\n\"-script.pyw\") in the same directory, and if found, opens that script to read a\nshebang line indicating which Python executable to use for the script. The folder\nof that executable, if found, is used to specify which python.dll the launcher is run against.\n\nThe above scheme is used automatically by `setuptools` when `entry_points` aree defined. \n`distutil` however works with an archive appended to the executable, rather than a separate file. \nThis scheme is also supported natively; if an archive is found it will be used preferentially, if not a companion script\nwill be used.\n\nThese launchers can be used automatically for a project by including this module in \nyour `setup.py` configuration like so ::\n\n    setup(\n        name=\"my_proj\",\n        ...,\n        use_windows_entry_exe=True,\n        setup_requires=['windows_entry_exe'],\n        entry_points={\n            'gui_scripts': [\n                'MyProj = my_proj:main',\n            ]\n        },\n    )\n\nsetuptools will then build entry_point exe's using these launchers rather than its own bundled ones.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/alelec/windows_entry_exe/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "windows-entry-exe", "package_url": "https://pypi.org/project/windows-entry-exe/", "platform": "", "project_url": "https://pypi.org/project/windows-entry-exe/", "project_urls": {"Homepage": "https://gitlab.com/alelec/windows_entry_exe/"}, "release_url": "https://pypi.org/project/windows-entry-exe/1.2/", "requires_dist": null, "requires_python": ">=3.2", "summary": "Replacement exe launchers for setuptools entry_points", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a simple launcher for Python files, which is functionally equivalent to\nthe launchers in setuptools but not based on setuptools code. There are two\nversions of the launcher - console and GUI - built from the same source code.</p>\n<p>This project is based on simple_launcher by Vinay Sajip (<a href=\"https://bitbucket.org/vinay.sajip/simple_launcher\" rel=\"nofollow\">https://bitbucket.org/vinay.sajip/simple_launcher</a>).\nWhere the original project launches the script via a python child process however,\nthis launcher embeds python and launches the script directly.</p>\n<p>The main benefit of this is seen with gui projects on windows, such that the program\nin the taskbar is the launcher exe rather than the python.exe in <cite>simple_launcher</cite>.\nThis change means pinning the program to the taskbar works, as does any application icons set.</p>\n<p>The launcher is intended to facilitate script execution under Windows where a\nPEP 397-compatible launcher is not available. The idea is that each Python\nscript has a copy of the launcher (symlinks not being generally available\nunder Windows). For scripts to work with the launcher, they have to have a name\nending in -script.py (for a console script) or -script.pyw (for a GUI script).\nThe deployment system (e.g. packaging) will ensure that for foo-script.py, a\nconsole launcher opy named foo.exe is placed in the same directory; for\nbar-script.pyw, a GUI launcher copy named bar.exe is placed in the same\ndirectory.</p>\n<p>Assuming that the relevant directories are on the path, the scripts can be\ninvoked using just \u201cfoo\u201d or \u201cbar\u201d. The foo.exe or bar.exe executable then\nruns: it looks for a script with the appropriate suffix (\u201c-script.py\u201d or\n\u201c-script.pyw\u201d) in the same directory, and if found, opens that script to read a\nshebang line indicating which Python executable to use for the script. The folder\nof that executable, if found, is used to specify which python.dll the launcher is run against.</p>\n<p>The above scheme is used automatically by <cite>setuptools</cite> when <cite>entry_points</cite> aree defined.\n<cite>distutil</cite> however works with an archive appended to the executable, rather than a separate file.\nThis scheme is also supported natively; if an archive is found it will be used preferentially, if not a companion script\nwill be used.</p>\n<p>These launchers can be used automatically for a project by including this module in\nyour <cite>setup.py</cite> configuration like so</p>\n<pre>setup(\n    name=\"my_proj\",\n    ...,\n    use_windows_entry_exe=True,\n    setup_requires=['windows_entry_exe'],\n    entry_points={\n        'gui_scripts': [\n            'MyProj = my_proj:main',\n        ]\n    },\n)\n</pre>\n<p>setuptools will then build entry_point exe\u2019s using these launchers rather than its own bundled ones.</p>\n\n          </div>"}, "last_serial": 5423986, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "8ae83543f0b099e7393c8c5f897739a9", "sha256": "85442de862ca4093326e671d9e7e01fbda4b3468ecf6afc555b0e12a3889298d"}, "downloads": -1, "filename": "windows_entry_exe-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8ae83543f0b099e7393c8c5f897739a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.2", "size": 4511, "upload_time": "2019-04-12T12:13:18", "upload_time_iso_8601": "2019-04-12T12:13:18.459809Z", "url": "https://files.pythonhosted.org/packages/27/2a/a5407c85a1974cb5be68f7c95a5ddff865883994350c86eef6234ba67690/windows_entry_exe-1.0-py3-none-any.whl", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f28fe48a16bfcd74d2b368fc125bfda8", "sha256": "f55347e75e379a26d588f4d33b04e056a6a31bafc07ea73e7781ccdf7c96da27"}, "downloads": -1, "filename": "windows_entry_exe-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f28fe48a16bfcd74d2b368fc125bfda8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.2", "size": 328735, "upload_time": "2019-04-18T05:49:57", "upload_time_iso_8601": "2019-04-18T05:49:57.995467Z", "url": "https://files.pythonhosted.org/packages/34/3c/4a24db71807e4f69554f13ba76c9edb008a761bae1fddd8e9c038c93311a/windows_entry_exe-1.1-py3-none-any.whl", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "0fdcaf11bda2a45f19cd4ba6fb75d4d0", "sha256": "a92608335b554ceca1bf76f32f3c819a0bb894b0ecf4afc21f1eabaf008aae14"}, "downloads": -1, "filename": "windows_entry_exe-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0fdcaf11bda2a45f19cd4ba6fb75d4d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.2", "size": 329188, "upload_time": "2019-06-20T05:56:41", "upload_time_iso_8601": "2019-06-20T05:56:41.594047Z", "url": "https://files.pythonhosted.org/packages/ec/26/8f65b0b146e307e1408e498f1bb18012c91e717cd224e1057a38e65b5f38/windows_entry_exe-1.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0fdcaf11bda2a45f19cd4ba6fb75d4d0", "sha256": "a92608335b554ceca1bf76f32f3c819a0bb894b0ecf4afc21f1eabaf008aae14"}, "downloads": -1, "filename": "windows_entry_exe-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0fdcaf11bda2a45f19cd4ba6fb75d4d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.2", "size": 329188, "upload_time": "2019-06-20T05:56:41", "upload_time_iso_8601": "2019-06-20T05:56:41.594047Z", "url": "https://files.pythonhosted.org/packages/ec/26/8f65b0b146e307e1408e498f1bb18012c91e717cd224e1057a38e65b5f38/windows_entry_exe-1.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:28:58 2020"}