{"info": {"author": "Trey Smith", "author_email": "trey.smith@nasa.gov", "bugtrack_url": null, "classifiers": ["Framework :: Django", "License :: OSI Approved"], "description": "``geocamUtilWeb`` is a set of utilities used by Django web apps in the\nGeoCam Share app collection.  It includes the following utilities.\n\nMultiSettings\n~~~~~~~~~~~~~\n\nA settings container object built out of an ordered list of child\nsettings objects.  When you request the value of an attribute, it\nreturns the value found in the first child that defines that attribute.\n\nWe typically use ``MultiSettings`` when apps extend Django settings by\ndefining new app-specific variables.  For example, if you have an app\n``geocamAwesome`` you can put the following in\n``geocamAwesome/defaultSettings.py``::\n\n  GEOCAM_AWESOME_ENABLED = True\n\nand in ``geocamAwesome/__init__.py``::\n\n  import django.conf.settings\n  from geocamUtil.MultiSettings import MultiSettings\n  from geocamAwesome import defaultSettings\n  \n  settings = MultiSettings(django.conf.settings, defaultSettings)\n\nthen you can run::\n\n  $ ./manage.py shell\n  >>> from geocamAwesome import settings\n  >>> settings.GEOCAM_AWESOME_ENABLED\n  True\n\nbut if a site administrator adds this line to their site-level\n``settings.py``::\n\n  GEOCAM_AWESOME_ENABLED = False\n\nyou would see::\n\n  $ ./manage.py shell\n  >>> from geocamAwesome import settings\n  >>> settings.GEOCAM_AWESOME_ENABLED\n  False\n\nThe advantage of this approach is that site administrators don't need to\nadd all of your app's extended settings to their ``settings.py`` file if\nthey like the defaults, but they can override any setting in a uniform\nway.\n\nActually, ``MultiSettings`` does not depend on Django at all.  It will\nwork with any kind of child container object as long as its fields can\nbe accessed using dot notation.\n\nmodels.UuidField\n~~~~~~~~~~~~~~~~\n\nA Django model field that stores a `universally unique identifier`_.\nWhen you first save a model with a ``UuidField``, if the UUID value is\nnot already set, it is automatically populated with a random (or \"type\n4\") UUID encoded as a ``CharField`` in the standard UUID display format,\nwhich is a series of hex digits separated by hyphens.\n\n.. _universally unique identifier: XXX\n\nYou might want to use a ``UuidField`` if you have multiple instances of\nyour Django app on different hosts and you need to identify the same\nobject across instances.  We typically do *not* use a ``UuidField`` as the\nprimary key for a model to avoid a performance penalty.\n\nforms.UuidField\n~~~~~~~~~~~~~~~\n\nA Django form field corresponding to the same-name model field.\nValidates that the user entered a sequence of hex digits separated by\nhyphens.\n\nmodels.ExtrasField\n~~~~~~~~~~~~~~~~~~\n\nA Django model field for storing extra schema-free data.  You can get\nand set arbitrary properties on the extra field, which can be comprised\nof strings, numbers, dictionaries, arrays, booleans, and ``None``.\nThese properties are stored in a database ``TextField`` as a\nJSON-encoded set of key-value pairs.\n\n.. o  __BEGIN_LICENSE__\n.. o  Copyright (C) 2008-2010 United States Government as represented by\n.. o  the Administrator of the National Aeronautics and Space Administration.\n.. o  All Rights Reserved.\n.. o  __END_LICENSE__", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/geocam/geocamUtilWeb", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "geocamUtil", "package_url": "https://pypi.org/project/geocamUtil/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/geocamUtil/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/geocam/geocamUtilWeb"}, "release_url": "https://pypi.org/project/geocamUtil/0.1/", "requires_dist": null, "requires_python": null, "summary": "geocamUtil -- Utilities used by Django apps in the GeoCam Share app collection.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>geocamUtilWeb</tt> is a set of utilities used by Django web apps in the\nGeoCam Share app collection.  It includes the following utilities.</p>\n<div id=\"multisettings\">\n<h2>MultiSettings</h2>\n<p>A settings container object built out of an ordered list of child\nsettings objects.  When you request the value of an attribute, it\nreturns the value found in the first child that defines that attribute.</p>\n<p>We typically use <tt>MultiSettings</tt> when apps extend Django settings by\ndefining new app-specific variables.  For example, if you have an app\n<tt>geocamAwesome</tt> you can put the following in\n<tt>geocamAwesome/defaultSettings.py</tt>:</p>\n<pre>GEOCAM_AWESOME_ENABLED = True\n</pre>\n<p>and in <tt>geocamAwesome/__init__.py</tt>:</p>\n<pre>import django.conf.settings\nfrom geocamUtil.MultiSettings import MultiSettings\nfrom geocamAwesome import defaultSettings\n\nsettings = MultiSettings(django.conf.settings, defaultSettings)\n</pre>\n<p>then you can run:</p>\n<pre>$ ./manage.py shell\n&gt;&gt;&gt; from geocamAwesome import settings\n&gt;&gt;&gt; settings.GEOCAM_AWESOME_ENABLED\nTrue\n</pre>\n<p>but if a site administrator adds this line to their site-level\n<tt>settings.py</tt>:</p>\n<pre>GEOCAM_AWESOME_ENABLED = False\n</pre>\n<p>you would see:</p>\n<pre>$ ./manage.py shell\n&gt;&gt;&gt; from geocamAwesome import settings\n&gt;&gt;&gt; settings.GEOCAM_AWESOME_ENABLED\nFalse\n</pre>\n<p>The advantage of this approach is that site administrators don\u2019t need to\nadd all of your app\u2019s extended settings to their <tt>settings.py</tt> file if\nthey like the defaults, but they can override any setting in a uniform\nway.</p>\n<p>Actually, <tt>MultiSettings</tt> does not depend on Django at all.  It will\nwork with any kind of child container object as long as its fields can\nbe accessed using dot notation.</p>\n</div>\n<div id=\"models-uuidfield\">\n<h2>models.UuidField</h2>\n<p>A Django model field that stores a <a href=\"XXX\" rel=\"nofollow\">universally unique identifier</a>.\nWhen you first save a model with a <tt>UuidField</tt>, if the UUID value is\nnot already set, it is automatically populated with a random (or \u201ctype\n4\u201d) UUID encoded as a <tt>CharField</tt> in the standard UUID display format,\nwhich is a series of hex digits separated by hyphens.</p>\n<p>You might want to use a <tt>UuidField</tt> if you have multiple instances of\nyour Django app on different hosts and you need to identify the same\nobject across instances.  We typically do <em>not</em> use a <tt>UuidField</tt> as the\nprimary key for a model to avoid a performance penalty.</p>\n</div>\n<div id=\"forms-uuidfield\">\n<h2>forms.UuidField</h2>\n<p>A Django form field corresponding to the same-name model field.\nValidates that the user entered a sequence of hex digits separated by\nhyphens.</p>\n</div>\n<div id=\"models-extrasfield\">\n<h2>models.ExtrasField</h2>\n<p>A Django model field for storing extra schema-free data.  You can get\nand set arbitrary properties on the extra field, which can be comprised\nof strings, numbers, dictionaries, arrays, booleans, and <tt>None</tt>.\nThese properties are stored in a database <tt>TextField</tt> as a\nJSON-encoded set of key-value pairs.</p>\n</div>\n\n          </div>"}, "last_serial": 792325, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "08598bce4c323641d3b9026f2f46a929", "sha256": "fd0705e237346c3a48c3aac7fbe17da688d00d977032541f88e874e7e2024618"}, "downloads": -1, "filename": "geocamUtil-0.1.tar.gz", "has_sig": false, "md5_digest": "08598bce4c323641d3b9026f2f46a929", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75660, "upload_time": "2012-03-30T01:47:00", "upload_time_iso_8601": "2012-03-30T01:47:00.579142Z", "url": "https://files.pythonhosted.org/packages/01/df/c4e9baa13dd6aa5591e42f79c28f264af7578055435c7cb1ff92f14e9493/geocamUtil-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "08598bce4c323641d3b9026f2f46a929", "sha256": "fd0705e237346c3a48c3aac7fbe17da688d00d977032541f88e874e7e2024618"}, "downloads": -1, "filename": "geocamUtil-0.1.tar.gz", "has_sig": false, "md5_digest": "08598bce4c323641d3b9026f2f46a929", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75660, "upload_time": "2012-03-30T01:47:00", "upload_time_iso_8601": "2012-03-30T01:47:00.579142Z", "url": "https://files.pythonhosted.org/packages/01/df/c4e9baa13dd6aa5591e42f79c28f264af7578055435c7cb1ff92f14e9493/geocamUtil-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:58:09 2020"}