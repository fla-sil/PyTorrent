{"info": {"author": "Astzweig UG(haftungsbeschr\u00e4nkt) & Co. KG", "author_email": "it@astzweig.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Database", "Topic :: Terminals", "Topic :: Text Processing", "Topic :: Utilities"], "description": "# Cocof\n[![Build Status](https://travis-ci.org/astzweig/cocof-py.svg?branch=master)](https://travis-ci.org/astzweig/cocof-py)\n[![PyPI version](https://badge.fury.io/py/cocof.svg)](https://badge.fury.io/py/cocof)\n\nCocof, short for consistent config file, is a python module that allows the\nmodification of different key-value config files on the comand line.\n\nMost importantly: For YAML and TOML it _It will keep line breaks and comments\nthe same._ So the file will look more or less like the original (depending on\nthe operations on it of course).\n\nCurrently supported formats are TOML, YAML, JSON and PLIST.\n\n### Install\n```bash\n$ pip install cocof\n```\n\n### Usage\n```bash\n$ cocof --help\nUsage: cocof [OPTIONS] FILEPATH JSONPATCH\n\n  Cocof runs the provided 'jsonpatch' modifications on the configuration\n  file given with the 'filepath' argument. Use the '--format' option to tell\n  the file format. If not given cocof will try to guess the file format\n  based on the file extension. Use '-' as filepath for stdin, in which case\n  the output goes to stdout and you must provide the format of the data via\n  the '--format' option.\n\nOptions:\n  -f, --format [toml|yaml|json|plist]\n                                  The format of the file. Obligatory if\n                                  filepath is '-' (stdin).\n  --help                          Show this message and exit.\n```\n\nCocof takes a file path and a [JSON patch][json_patch] string as arguments.\nIt then modifies the datastructure given by the file's content accordingly and\nwrities it back to the same file (in-place editing).\nYou can also tell `cocof` to read from `stdin`, in which case it will output\nit's result to `stdout`. TOML, YAML and JSON expect their content to be `utf-8`\nencoded. PLIST expects either an `utf-8` encoded xml content or binary content.\n\n\n### Examples\n```TOML\n# example.toml\ntitle = \"Example\"\n\n[owner]\nname = \"Tom Preston-Werner\"\ndob = 1979-05-27T07:32:00-08:00 # Inline comment\n\n[database]\nserver = \"192.168.1.1\"\nports = [ 8001, 8001, 8002 ]\n```\n\nUsing `{\"op\": \"add\", \"path\": \"/subtitle\", \"value\": \"Sub\"}` as modification\nyields:\n\n```bash\n$ cocof ./example.toml '[{\"op\": \"add\", \"path\": \"/subtitle\", \"value\": \"Sub\"}]'`\n$ cat ./example.toml\n# example.toml\ntitle = \"Example\"\nsubtitle = \"Sub\"\n\n[owner]\nname = \"Tom Preston-Werner\"\ndob = 1979-05-27T07:32:00-08:00 # Inline comment\n\n[database]\nserver = \"192.168.1.1\"\nports = [ 8001, 8001, 8002 ]\n```\n\n[json_patch]: https://tools.ietf.org/html/rfc6902", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/astzweig/cocof-py", "keywords": "toml,yaml,json,terminal,cli,edit", "license": "", "maintainer": "", "maintainer_email": "", "name": "cocof", "package_url": "https://pypi.org/project/cocof/", "platform": "", "project_url": "https://pypi.org/project/cocof/", "project_urls": {"Homepage": "https://github.com/astzweig/cocof-py"}, "release_url": "https://pypi.org/project/cocof/1.2.2/", "requires_dist": null, "requires_python": "", "summary": "Consistent CLI config file modifier", "version": "1.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Cocof</h1>\n<p><a href=\"https://travis-ci.org/astzweig/cocof-py\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f52ef364ab70dd6bb0768d8d09355befc7b15c33/68747470733a2f2f7472617669732d63692e6f72672f6173747a776569672f636f636f662d70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/cocof\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4071f5ee6ffdf87095e9d3ab597bc4d0328680ce/68747470733a2f2f62616467652e667572792e696f2f70792f636f636f662e737667\"></a></p>\n<p>Cocof, short for consistent config file, is a python module that allows the\nmodification of different key-value config files on the comand line.</p>\n<p>Most importantly: For YAML and TOML it <em>It will keep line breaks and comments\nthe same.</em> So the file will look more or less like the original (depending on\nthe operations on it of course).</p>\n<p>Currently supported formats are TOML, YAML, JSON and PLIST.</p>\n<h3>Install</h3>\n<pre>$ pip install cocof\n</pre>\n<h3>Usage</h3>\n<pre>$ cocof --help\nUsage: cocof <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> FILEPATH JSONPATCH\n\n  Cocof runs the provided <span class=\"s1\">'jsonpatch'</span> modifications on the configuration\n  file given with the <span class=\"s1\">'filepath'</span> argument. Use the <span class=\"s1\">'--format'</span> option to tell\n  the file format. If not given cocof will try to guess the file format\n  based on the file extension. Use <span class=\"s1\">'-'</span> as filepath <span class=\"k\">for</span> stdin, in which <span class=\"k\">case</span>\n  the output goes to stdout and you must provide the format of the data via\n  the <span class=\"s1\">'--format'</span> option.\n\nOptions:\n  -f, --format <span class=\"o\">[</span>toml<span class=\"p\">|</span>yaml<span class=\"p\">|</span>json<span class=\"p\">|</span>plist<span class=\"o\">]</span>\n                                  The format of the file. Obligatory <span class=\"k\">if</span>\n                                  filepath is <span class=\"s1\">'-'</span> <span class=\"o\">(</span>stdin<span class=\"o\">)</span>.\n  --help                          Show this message and exit.\n</pre>\n<p>Cocof takes a file path and a <a href=\"https://tools.ietf.org/html/rfc6902\" rel=\"nofollow\">JSON patch</a> string as arguments.\nIt then modifies the datastructure given by the file's content accordingly and\nwrities it back to the same file (in-place editing).\nYou can also tell <code>cocof</code> to read from <code>stdin</code>, in which case it will output\nit's result to <code>stdout</code>. TOML, YAML and JSON expect their content to be <code>utf-8</code>\nencoded. PLIST expects either an <code>utf-8</code> encoded xml content or binary content.</p>\n<h3>Examples</h3>\n<pre><span class=\"c1\"># example.toml</span>\n<span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"s\">\"Example\"</span>\n\n<span class=\"k\">[owner]</span>\n<span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">\"Tom Preston-Werner\"</span>\n<span class=\"n\">dob</span> <span class=\"o\">=</span> <span class=\"mi\">1979-05-27T07:32:00-08:00</span> <span class=\"c1\"># Inline comment</span>\n\n<span class=\"k\">[database]</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"s\">\"192.168.1.1\"</span>\n<span class=\"n\">ports</span> <span class=\"o\">=</span> <span class=\"k\">[ 8001, 8001, 8002 ]</span>\n</pre>\n<p>Using <code>{\"op\": \"add\", \"path\": \"/subtitle\", \"value\": \"Sub\"}</code> as modification\nyields:</p>\n<pre>$ cocof ./example.toml <span class=\"s1\">'[{\"op\": \"add\", \"path\": \"/subtitle\", \"value\": \"Sub\"}]'</span><span class=\"sb\">`</span>\n$ cat ./example.toml\n<span class=\"c1\"># example.toml</span>\n<span class=\"nv\">title</span> <span class=\"o\">=</span> <span class=\"s2\">\"Example\"</span>\n<span class=\"nv\">subtitle</span> <span class=\"o\">=</span> <span class=\"s2\">\"Sub\"</span>\n\n<span class=\"o\">[</span>owner<span class=\"o\">]</span>\n<span class=\"nv\">name</span> <span class=\"o\">=</span> <span class=\"s2\">\"Tom Preston-Werner\"</span>\n<span class=\"nv\">dob</span> <span class=\"o\">=</span> <span class=\"m\">1979</span>-05-27T07:32:00-08:00 <span class=\"c1\"># Inline comment</span>\n\n<span class=\"o\">[</span>database<span class=\"o\">]</span>\n<span class=\"nv\">server</span> <span class=\"o\">=</span> <span class=\"s2\">\"192.168.1.1\"</span>\n<span class=\"nv\">ports</span> <span class=\"o\">=</span> <span class=\"o\">[</span> <span class=\"m\">8001</span>, <span class=\"m\">8001</span>, <span class=\"m\">8002</span> <span class=\"o\">]</span>\n</pre>\n\n          </div>"}, "last_serial": 4746226, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "aba37f0d71140faefc2927182779019f", "sha256": "d411739370761eb119459b4073c416a96333a6359e5af4dc4232e22ea3f8b0f9"}, "downloads": -1, "filename": "cocof-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aba37f0d71140faefc2927182779019f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11006, "upload_time": "2019-01-04T01:15:43", "upload_time_iso_8601": "2019-01-04T01:15:43.079959Z", "url": "https://files.pythonhosted.org/packages/a8/d6/ceda73731e1dfa0d77ebafd757a48f9e516339beaaf0b38b4d2b1282697a/cocof-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "962c2fb8cdf83cbbd5959ee1489b1af0", "sha256": "89b7b8a6d686a1234179f8377df2c2565a00ab202fbb29c60003b990c2bf9c7f"}, "downloads": -1, "filename": "cocof-1.0.0.tar.gz", "has_sig": false, "md5_digest": "962c2fb8cdf83cbbd5959ee1489b1af0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4706, "upload_time": "2019-01-04T01:15:45", "upload_time_iso_8601": "2019-01-04T01:15:45.934800Z", "url": "https://files.pythonhosted.org/packages/e3/60/b764d931051244e7ea0043963bfca988b7c112b787f4f2784a173ad70cd5/cocof-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f293ef39687562ed2cadad1157f0070c", "sha256": "7c7c9a21d75bc7ae06bf14bfedd82dfa3fd820f42ce56b442e5814888b5ed370"}, "downloads": -1, "filename": "cocof-1.0.1.tar.gz", "has_sig": false, "md5_digest": "f293ef39687562ed2cadad1157f0070c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4835, "upload_time": "2019-01-05T02:00:54", "upload_time_iso_8601": "2019-01-05T02:00:54.708627Z", "url": "https://files.pythonhosted.org/packages/2f/79/49b052d9f18da242508a8154e49e1d86ebe9b5d632f4293988e0b5b05ef2/cocof-1.0.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "61f616ce28a36ace3e8be667bf322422", "sha256": "36d59408fae0df995ff88b554a779373bd5e8189f99ffe3c058bdfbf8d6ae439"}, "downloads": -1, "filename": "cocof-1.2.0.tar.gz", "has_sig": false, "md5_digest": "61f616ce28a36ace3e8be667bf322422", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5199, "upload_time": "2019-01-18T16:57:44", "upload_time_iso_8601": "2019-01-18T16:57:44.267581Z", "url": "https://files.pythonhosted.org/packages/0a/1a/13b697749fa480e09e8356641b8816f21e3f4b01b0be186e22e60c0a6dbe/cocof-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "f728615991632c6b7505f817d74fa84c", "sha256": "933f5ec6da4652801a5c3b83716e702f53d32121557fa6e7b057fd2672317231"}, "downloads": -1, "filename": "cocof-1.2.1.tar.gz", "has_sig": false, "md5_digest": "f728615991632c6b7505f817d74fa84c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5193, "upload_time": "2019-01-27T05:21:50", "upload_time_iso_8601": "2019-01-27T05:21:50.781370Z", "url": "https://files.pythonhosted.org/packages/1d/91/51b11b9e506143938f24a187c695f73bdab401488ae2975eeb6a759f7b80/cocof-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "337b318a7ec080417306640dc4cab9b1", "sha256": "36a05eca9aa8000a1a204a97ca6d703a9513713d7908325d91bf26309ac29204"}, "downloads": -1, "filename": "cocof-1.2.2.tar.gz", "has_sig": false, "md5_digest": "337b318a7ec080417306640dc4cab9b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5177, "upload_time": "2019-01-27T14:20:35", "upload_time_iso_8601": "2019-01-27T14:20:35.003144Z", "url": "https://files.pythonhosted.org/packages/e4/cb/6b267413a3987671f73bd5637f1ced076585b31702923ce8fa0869289076/cocof-1.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "337b318a7ec080417306640dc4cab9b1", "sha256": "36a05eca9aa8000a1a204a97ca6d703a9513713d7908325d91bf26309ac29204"}, "downloads": -1, "filename": "cocof-1.2.2.tar.gz", "has_sig": false, "md5_digest": "337b318a7ec080417306640dc4cab9b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5177, "upload_time": "2019-01-27T14:20:35", "upload_time_iso_8601": "2019-01-27T14:20:35.003144Z", "url": "https://files.pythonhosted.org/packages/e4/cb/6b267413a3987671f73bd5637f1ced076585b31702923ce8fa0869289076/cocof-1.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:20 2020"}