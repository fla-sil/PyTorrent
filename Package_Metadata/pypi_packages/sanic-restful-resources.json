{"info": {"author": "Michael Krukov", "author_email": "krukov.michael@ya.ru", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only"], "description": "# sanic-restful-resources\n\n[![PyPI version](https://badge.fury.io/py/sanic-restful-resources.svg)](https://badge.fury.io/py/sanic-restful-resources)\n[![CodeFactor](https://www.codefactor.io/repository/github/michaelkrukov/sanic-restful-resources/badge)](https://www.codefactor.io/repository/github/michaelkrukov/sanic-restful-resources)\n[![codebeat badge](https://codebeat.co/badges/3e8d5fda-c43d-4700-be78-11f5a2ad6dfa)](https://codebeat.co/projects/github-com-michaelkrukov-sanic-restful-resources-master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/315b7536ee7e4a59af03230b6738bde9)](https://www.codacy.com/manual/michaelkrukov/sanic-restful-resources?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=michaelkrukov/sanic-restful-resources&amp;utm_campaign=Badge_Grade)\n[![Coverage Status](https://coveralls.io/repos/github/michaelkrukov/sanic-restful-resources/badge.svg?branch=master)](https://coveralls.io/github/michaelkrukov/sanic-restful-resources?branch=master)\n\n> Simple library for creating RESTful APIs with sanic\n\n## Features\n\n- simplicity\n- schematics integration\n- exceptions handling\n- unified response format\n- 100% coverage\n\n## Usage\n\n```bash\npython3 -m pip install sanic-restful-resources\n```\n\n## Example\n\n```py\nusers = [{'name': 'Michael'}, {'name': 'Ivan'}]\n\n\nclass UserPostSchema(Model):\n    name = StringType(required=True)\n\n\n@resource('/users')\nclass Users:\n    async def get(self, request):\n        return users\n\n    @validate(user_data=UserPostSchema)\n    async def post(self, request, user_data):\n        users.append({'name': user_data.name})\n        return '', 204\n```\n\nMore examples in [this folder](examples).\n\n## Guide\n\n- `resource(uri='')` - return decorator for classes that will be\n  considered RESTful resources. This decorator automatically extends\n  HTTPMethodView (refer to sanic documentation for details). You can\n  provide resource URI through decorator or by class attribute `uri`.\n  You can provide decorators for all the methods through class\n  attribute `decorators`.\n\n  Examples of possible return values for handlers:\n\n  ```py\n  return \"data\", 200, {\"X-Custom-Header\": \"Value\"}\n  return \"data\", 200\n  return \"data\"\n  return {\"arg\": \"val\"}\n  return [\"val1\", \"val2\"]\n  return \"\", 201\n\n  return sanic.response.json # .text, .html, e.t.c.\n  ```\n\n- `Api(name='API', url_prefix)` - class for aggregating resources\n  and registrating them in the sanic application. Internally it uses\n  blueprints. Basic workflow:\n\n  ```py\n  from sanic import Sanic\n  from resources import User, Users\n\n  app = Sanic()\n\n  api = Api(url_prefix='/api/v1')\n  api.add_resource(User)\n  api.add_resource(Users)\n  api.init_app(app)\n\n  # ...\n  ```\n\n- `validate(**models)` - decorator for methods, that will validate\n  incoming data with provided models from Schematics library. Successfully\n  validated and parsed models will be passed as keyword arguments to\n  the handler method. If any model fails to validate - handler will\n  not be called.\n\n- `error(description=None, details=None, status=400, **kwargs` - method\n  for returning errors from handlers.\n\n- `collect_args(request)` - method for getting data from all possible\n  sources of data in the request.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/michaelkrukov/sanic-restful-resources", "keywords": "restful,rest,api,sanic,web,server", "license": "", "maintainer": "", "maintainer_email": "", "name": "sanic-restful-resources", "package_url": "https://pypi.org/project/sanic-restful-resources/", "platform": "", "project_url": "https://pypi.org/project/sanic-restful-resources/", "project_urls": {"Homepage": "https://github.com/michaelkrukov/sanic-restful-resources"}, "release_url": "https://pypi.org/project/sanic-restful-resources/0.2.0/", "requires_dist": ["sanic (>=19.12.2)", "schematics (>=2.1.0)"], "requires_python": ">=3.5", "summary": "The library for writing RESTful APIs with sanic", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sanic-restful-resources</h1>\n<p><a href=\"https://badge.fury.io/py/sanic-restful-resources\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fceb71531d873a20631f87c0de1d6af247b6e26b/68747470733a2f2f62616467652e667572792e696f2f70792f73616e69632d7265737466756c2d7265736f75726365732e737667\"></a>\n<a href=\"https://www.codefactor.io/repository/github/michaelkrukov/sanic-restful-resources\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1e66adca0ff5dc0e6b2db5c6585980b729d8479/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6d69636861656c6b72756b6f762f73616e69632d7265737466756c2d7265736f75726365732f6261646765\"></a>\n<a href=\"https://codebeat.co/projects/github-com-michaelkrukov-sanic-restful-resources-master\" rel=\"nofollow\"><img alt=\"codebeat badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5daffe32c4c333faee93e8041166500a43a181d3/68747470733a2f2f636f6465626561742e636f2f6261646765732f33653864356664612d633433642d343730302d626537382d313166356132616436646661\"></a>\n<a href=\"https://www.codacy.com/manual/michaelkrukov/sanic-restful-resources?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=michaelkrukov/sanic-restful-resources&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/666f5309f3a49bce5a52d1314821755b50b02200/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3331356237353336656537653461353961663033323330623637333862646539\"></a>\n<a href=\"https://coveralls.io/github/michaelkrukov/sanic-restful-resources?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ac9f424e13f91ff8b19f177d2901db5c97e20c6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d69636861656c6b72756b6f762f73616e69632d7265737466756c2d7265736f75726365732f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<blockquote>\n<p>Simple library for creating RESTful APIs with sanic</p>\n</blockquote>\n<h2>Features</h2>\n<ul>\n<li>simplicity</li>\n<li>schematics integration</li>\n<li>exceptions handling</li>\n<li>unified response format</li>\n<li>100% coverage</li>\n</ul>\n<h2>Usage</h2>\n<pre>python3 -m pip install sanic-restful-resources\n</pre>\n<h2>Example</h2>\n<pre><span class=\"n\">users</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Michael'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Ivan'</span><span class=\"p\">}]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserPostSchema</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">StringType</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@resource</span><span class=\"p\">(</span><span class=\"s1\">'/users'</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Users</span><span class=\"p\">:</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">users</span>\n\n    <span class=\"nd\">@validate</span><span class=\"p\">(</span><span class=\"n\">user_data</span><span class=\"o\">=</span><span class=\"n\">UserPostSchema</span><span class=\"p\">)</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">post</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">user_data</span><span class=\"p\">):</span>\n        <span class=\"n\">users</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"n\">user_data</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"mi\">204</span>\n</pre>\n<p>More examples in <a href=\"examples\" rel=\"nofollow\">this folder</a>.</p>\n<h2>Guide</h2>\n<ul>\n<li>\n<p><code>resource(uri='')</code> - return decorator for classes that will be\nconsidered RESTful resources. This decorator automatically extends\nHTTPMethodView (refer to sanic documentation for details). You can\nprovide resource URI through decorator or by class attribute <code>uri</code>.\nYou can provide decorators for all the methods through class\nattribute <code>decorators</code>.</p>\n<p>Examples of possible return values for handlers:</p>\n<pre><span class=\"k\">return</span> <span class=\"s2\">\"data\"</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s2\">\"X-Custom-Header\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Value\"</span><span class=\"p\">}</span>\n<span class=\"k\">return</span> <span class=\"s2\">\"data\"</span><span class=\"p\">,</span> <span class=\"mi\">200</span>\n<span class=\"k\">return</span> <span class=\"s2\">\"data\"</span>\n<span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s2\">\"arg\"</span><span class=\"p\">:</span> <span class=\"s2\">\"val\"</span><span class=\"p\">}</span>\n<span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"s2\">\"val1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"val2\"</span><span class=\"p\">]</span>\n<span class=\"k\">return</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"mi\">201</span>\n\n<span class=\"k\">return</span> <span class=\"n\">sanic</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">json</span> <span class=\"c1\"># .text, .html, e.t.c.</span>\n</pre>\n</li>\n<li>\n<p><code>Api(name='API', url_prefix)</code> - class for aggregating resources\nand registrating them in the sanic application. Internally it uses\nblueprints. Basic workflow:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sanic</span> <span class=\"kn\">import</span> <span class=\"n\">Sanic</span>\n<span class=\"kn\">from</span> <span class=\"nn\">resources</span> <span class=\"kn\">import</span> <span class=\"n\">User</span><span class=\"p\">,</span> <span class=\"n\">Users</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Sanic</span><span class=\"p\">()</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">Api</span><span class=\"p\">(</span><span class=\"n\">url_prefix</span><span class=\"o\">=</span><span class=\"s1\">'/api/v1'</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">add_resource</span><span class=\"p\">(</span><span class=\"n\">Users</span><span class=\"p\">)</span>\n<span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ...</span>\n</pre>\n</li>\n<li>\n<p><code>validate(**models)</code> - decorator for methods, that will validate\nincoming data with provided models from Schematics library. Successfully\nvalidated and parsed models will be passed as keyword arguments to\nthe handler method. If any model fails to validate - handler will\nnot be called.</p>\n</li>\n<li>\n<p><code>error(description=None, details=None, status=400, **kwargs</code> - method\nfor returning errors from handlers.</p>\n</li>\n<li>\n<p><code>collect_args(request)</code> - method for getting data from all possible\nsources of data in the request.</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6765888, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3df1b3c5c3f947bb0e82b55c41a4a749", "sha256": "7a7c0c35a58b48b2cc4de0bf9e58cfa34bb6f4c72a7b397ba6a5cae70ced6284"}, "downloads": -1, "filename": "sanic_restful_resources-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3df1b3c5c3f947bb0e82b55c41a4a749", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 5622, "upload_time": "2019-12-06T09:48:44", "upload_time_iso_8601": "2019-12-06T09:48:44.803990Z", "url": "https://files.pythonhosted.org/packages/5f/1d/3b3b11e0f2323e81216d2bb3257c2cdeacb8ed8dcd999c6bd6e7b9d2c2e5/sanic_restful_resources-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26edfaea90180f826c40a6f361edc152", "sha256": "296e3e9c2087164d82a35d32ba90bb93088898419e3f192ec659ef537530956c"}, "downloads": -1, "filename": "sanic_restful_resources-0.1.0.tar.gz", "has_sig": false, "md5_digest": "26edfaea90180f826c40a6f361edc152", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4579, "upload_time": "2019-12-06T09:48:46", "upload_time_iso_8601": "2019-12-06T09:48:46.683078Z", "url": "https://files.pythonhosted.org/packages/f7/23/178bc6db846b9ffd573dfb2aa3b8319ac4256a8c2cf587e90835c9fbe2f3/sanic_restful_resources-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3f152b8e9a3d5fe1ccadc8c2623e15c9", "sha256": "a9759d13acd1e01adf448191d53b48cc1a3c4992af703af73e96862cc53ea0bc"}, "downloads": -1, "filename": "sanic_restful_resources-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3f152b8e9a3d5fe1ccadc8c2623e15c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6066, "upload_time": "2020-02-06T21:56:23", "upload_time_iso_8601": "2020-02-06T21:56:23.325790Z", "url": "https://files.pythonhosted.org/packages/61/39/426eeb6b9c0dde922f25ce1b0081972132994cbc50a882a3a4bdc6b1f14a/sanic_restful_resources-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ed378d68f2c706fa17d694945f2ae7f", "sha256": "2fe0acaedd64492bf7ab957f4af4443856cbce1b364695f6160f132094e7f53b"}, "downloads": -1, "filename": "sanic_restful_resources-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1ed378d68f2c706fa17d694945f2ae7f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5030, "upload_time": "2020-02-06T21:56:29", "upload_time_iso_8601": "2020-02-06T21:56:29.134774Z", "url": "https://files.pythonhosted.org/packages/9e/ca/f2377cdf9098273e93ac5ceb32ee41bae6c6453d1450548355f4867b6731/sanic_restful_resources-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "447e7a01c726fc1dcfeeaaad70a0e9bc", "sha256": "a303f36c0e69201f1c63411345f7123a026bb539e5596c998a5c359a7c17435b"}, "downloads": -1, "filename": "sanic_restful_resources-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "447e7a01c726fc1dcfeeaaad70a0e9bc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6285, "upload_time": "2020-02-29T01:19:56", "upload_time_iso_8601": "2020-02-29T01:19:56.098008Z", "url": "https://files.pythonhosted.org/packages/a6/14/ac4eecff1ad7131ce05e5ce0c3fb5223e930b1d515f20de4b01426aadddb/sanic_restful_resources-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c6c624a874da83341d1388bbd7d661be", "sha256": "1211bfbd9a79368e57d8e68900c2cdb661722493cb2f2b30582275ff467b9743"}, "downloads": -1, "filename": "sanic_restful_resources-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c6c624a874da83341d1388bbd7d661be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5249, "upload_time": "2020-02-29T01:19:57", "upload_time_iso_8601": "2020-02-29T01:19:57.924897Z", "url": "https://files.pythonhosted.org/packages/8f/36/3705cb16ac1664397ffbb9a762608a90d1a2f7167143b06f7eb332ca81c5/sanic_restful_resources-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c41b1f0ff06c5d3f0518db5940149872", "sha256": "864c7c92a923153f1747236530ec552bc347bca4db8bde61ad5f94809d37bc14"}, "downloads": -1, "filename": "sanic_restful_resources-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c41b1f0ff06c5d3f0518db5940149872", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6148, "upload_time": "2020-03-06T23:57:00", "upload_time_iso_8601": "2020-03-06T23:57:00.291984Z", "url": "https://files.pythonhosted.org/packages/e0/57/e53826f3a7ac9a0061c29a7d345d1bce904f997a68beca5de187fb2bdf19/sanic_restful_resources-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfd5c1fdff4a5bf8ae4042535a27c4c4", "sha256": "52d912ee46e00ead072920e29891e702e1c16c75720a18fee810e7a1ef754fb4"}, "downloads": -1, "filename": "sanic_restful_resources-0.2.0.tar.gz", "has_sig": false, "md5_digest": "dfd5c1fdff4a5bf8ae4042535a27c4c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5101, "upload_time": "2020-03-06T23:57:01", "upload_time_iso_8601": "2020-03-06T23:57:01.730860Z", "url": "https://files.pythonhosted.org/packages/d0/c5/93f8fac9fea374075a4e69137891db6f1569c7c85b0b8c523f6c0101d51a/sanic_restful_resources-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c41b1f0ff06c5d3f0518db5940149872", "sha256": "864c7c92a923153f1747236530ec552bc347bca4db8bde61ad5f94809d37bc14"}, "downloads": -1, "filename": "sanic_restful_resources-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c41b1f0ff06c5d3f0518db5940149872", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6148, "upload_time": "2020-03-06T23:57:00", "upload_time_iso_8601": "2020-03-06T23:57:00.291984Z", "url": "https://files.pythonhosted.org/packages/e0/57/e53826f3a7ac9a0061c29a7d345d1bce904f997a68beca5de187fb2bdf19/sanic_restful_resources-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dfd5c1fdff4a5bf8ae4042535a27c4c4", "sha256": "52d912ee46e00ead072920e29891e702e1c16c75720a18fee810e7a1ef754fb4"}, "downloads": -1, "filename": "sanic_restful_resources-0.2.0.tar.gz", "has_sig": false, "md5_digest": "dfd5c1fdff4a5bf8ae4042535a27c4c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 5101, "upload_time": "2020-03-06T23:57:01", "upload_time_iso_8601": "2020-03-06T23:57:01.730860Z", "url": "https://files.pythonhosted.org/packages/d0/c5/93f8fac9fea374075a4e69137891db6f1569c7c85b0b8c523f6c0101d51a/sanic_restful_resources-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:42 2020"}