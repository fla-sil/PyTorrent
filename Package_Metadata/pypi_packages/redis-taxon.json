{"info": {"author": "Justin Poliey", "author_email": "justin@getglue.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Topic :: Database :: Front-Ends", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Software Distribution", "Topic :: System :: Systems Administration"], "description": "-----\nTaxon\n-----\n\nTaxon is a tagged data store with persistence to a Redis backend. It allows you to organize and query Redis data sets with tags, and is implemented as a library instead of a stand-alone server.\n\nFeatures\n--------\n\n- **Fully queryable.** Supports expressions using ``And``, ``Or``, and ``Not`` operations as well as direct tag lookup.\n- **Persistent.** Data is stored in Redis.\n\nGetting Started\n---------------\n\nFirst install the taxon package with pip:\n\n::\n    \n    $ pip install -U redis-taxon\n\nThen you can instantiate Taxon stores in your code that wrap ``Redis`` objects from `redis-py`_.\n\n.. _redis-py: https://github.com/andymccurdy/redis-py\n\n::\n    \n    import redis\n    import taxon\n\n    t = taxon.Taxon(redis.Redis())\n\nTo tag data, use the ``tag`` method on a ``taxon.Taxon`` object. The first argument is the tag to use, and the following variable arguments are the items to tag.\n\n::\n    \n    t.tag('feature', 'issue-312', 'issue-199', 'issue-321')\n    t.tag('experimental', 'issue-199')\n\nQuerying\n--------\n\nTaxon allows the dataset to be queried with arbitrary expressions and supports ``And``, ``Or``, and ``Not`` operations. The query syntax is a small DSL implemented directly in Python. Most queries are issued with the ``find`` method, which returns a `set` of items.\n\n::\n    \n    from taxon import Taxon\n    from taxon.query import And, Or, Not\n\n    # get issue tracker items with no action required\n    t = Taxon(my_redis_object)\n    items = t.find(Or('invalid', 'closed', 'wontfix'))\n\nQuery expressions can also be arbitrarily complex. Queries issued through the ``query`` method return both the name of the Redis key and a list of items.\n\n::\n    \n    # get issue tracker items marked feature or bugfix, but not experimental\n    _, items = t.query(And(Or('feature', 'bugfix'), Not('experimental')))\n\nThere is an alternate query syntax available using the ``Tag`` member from ``taxon.query`` which uses operators instead of classes. The operators are ``&`` for ``And``, ``|`` for ``Or``, and ``~`` for ``Not``. The above query in operator syntax looks like this:\n\n::\n    \n    from taxon.query import Tag\n    items = t.find((Tag('feature') | Tag('bugfix')) & ~Tag('experimental'))\n\nData Encoding\n-------------\n\nYou can also interface better with Python data types by subclassing ``Taxon`` and providing ``encode`` and ``decode`` methods.\n\n::\n\n    import json\n    from redis import Redis\n    from taxon import Taxon\n    from taxon.query import Tag\n\n    class JsonTaxon(Taxon):\n        def encode(self, data): return json.dumps(data)\n        def decode(self, data): return json.loads(data)\n\n    t = JsonTaxon(Redis())\n    t.tag('foo', {'foo': 'bar'})\n    _, items = t.query(Tag('foo'))\n\nMIT License\n-----------\n\nCopyright (c) 2012 Justin Poliey <justin@getglue.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jdp/taxon", "keywords": "redis,key-value,store,tag,taxonomy", "license": "The MIT License (MIT)\nCopyright (c) 2012 Justin Poliey <justin@getglue.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "redis-taxon", "package_url": "https://pypi.org/project/redis-taxon/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/redis-taxon/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jdp/taxon"}, "release_url": "https://pypi.org/project/redis-taxon/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Redis-backed tagged data store", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Taxon is a tagged data store with persistence to a Redis backend. It allows you to organize and query Redis data sets with tags, and is implemented as a library instead of a stand-alone server.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><strong>Fully queryable.</strong> Supports expressions using <tt>And</tt>, <tt>Or</tt>, and <tt>Not</tt> operations as well as direct tag lookup.</li>\n<li><strong>Persistent.</strong> Data is stored in Redis.</li>\n</ul>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>First install the taxon package with pip:</p>\n<pre>$ pip install -U redis-taxon\n</pre>\n<p>Then you can instantiate Taxon stores in your code that wrap <tt>Redis</tt> objects from <a href=\"https://github.com/andymccurdy/redis-py\" rel=\"nofollow\">redis-py</a>.</p>\n<pre>import redis\nimport taxon\n\nt = taxon.Taxon(redis.Redis())\n</pre>\n<p>To tag data, use the <tt>tag</tt> method on a <tt>taxon.Taxon</tt> object. The first argument is the tag to use, and the following variable arguments are the items to tag.</p>\n<pre>t.tag('feature', 'issue-312', 'issue-199', 'issue-321')\nt.tag('experimental', 'issue-199')\n</pre>\n</div>\n<div id=\"querying\">\n<h2>Querying</h2>\n<p>Taxon allows the dataset to be queried with arbitrary expressions and supports <tt>And</tt>, <tt>Or</tt>, and <tt>Not</tt> operations. The query syntax is a small DSL implemented directly in Python. Most queries are issued with the <tt>find</tt> method, which returns a <cite>set</cite> of items.</p>\n<pre>from taxon import Taxon\nfrom taxon.query import And, Or, Not\n\n# get issue tracker items with no action required\nt = Taxon(my_redis_object)\nitems = t.find(Or('invalid', 'closed', 'wontfix'))\n</pre>\n<p>Query expressions can also be arbitrarily complex. Queries issued through the <tt>query</tt> method return both the name of the Redis key and a list of items.</p>\n<pre># get issue tracker items marked feature or bugfix, but not experimental\n_, items = t.query(And(Or('feature', 'bugfix'), Not('experimental')))\n</pre>\n<p>There is an alternate query syntax available using the <tt>Tag</tt> member from <tt>taxon.query</tt> which uses operators instead of classes. The operators are <tt>&amp;</tt> for <tt>And</tt>, <tt>|</tt> for <tt>Or</tt>, and <tt>~</tt> for <tt>Not</tt>. The above query in operator syntax looks like this:</p>\n<pre>from taxon.query import Tag\nitems = t.find((Tag('feature') | Tag('bugfix')) &amp; ~Tag('experimental'))\n</pre>\n</div>\n<div id=\"data-encoding\">\n<h2>Data Encoding</h2>\n<p>You can also interface better with Python data types by subclassing <tt>Taxon</tt> and providing <tt>encode</tt> and <tt>decode</tt> methods.</p>\n<pre>import json\nfrom redis import Redis\nfrom taxon import Taxon\nfrom taxon.query import Tag\n\nclass JsonTaxon(Taxon):\n    def encode(self, data): return json.dumps(data)\n    def decode(self, data): return json.loads(data)\n\nt = JsonTaxon(Redis())\nt.tag('foo', {'foo': 'bar'})\n_, items = t.query(Tag('foo'))\n</pre>\n</div>\n<div id=\"mit-license\">\n<h2>MIT License</h2>\n<p>Copyright (c) 2012 Justin Poliey &lt;<a href=\"mailto:justin%40getglue.com\">justin<span>@</span>getglue<span>.</span>com</a>&gt;</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 798658, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "e091fe527abe7de06447bc0b22434758", "sha256": "4f3869a95a452b84841231ca8dc2832b0033393453a031119f4f565c618940a6"}, "downloads": -1, "filename": "redis_taxon-0.2.0-py2.7.egg", "has_sig": false, "md5_digest": "e091fe527abe7de06447bc0b22434758", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 8584, "upload_time": "2012-05-01T20:19:44", "upload_time_iso_8601": "2012-05-01T20:19:44.622608Z", "url": "https://files.pythonhosted.org/packages/49/94/d69576da3f52078d561a5b74229cd36c435df5adcbc941040928e783ba2f/redis_taxon-0.2.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae75c3ac2d014f1249fcaad31467e70d", "sha256": "8fa970765b786dce3693da716f47a0e6d36103eb83ab7375561faf0a5ce30701"}, "downloads": -1, "filename": "redis-taxon-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ae75c3ac2d014f1249fcaad31467e70d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4359, "upload_time": "2012-05-01T20:19:43", "upload_time_iso_8601": "2012-05-01T20:19:43.543219Z", "url": "https://files.pythonhosted.org/packages/39/60/06ab78a9d5d41595122fba76dc780e97bc503f9a4f165f426f928386b329/redis-taxon-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "built for Darwin-11.3.0", "digests": {"md5": "27868fd95d13eb11de1a8244fea5774f", "sha256": "ce164127836c9b43b836a6bed97b925dbf8a3efcea248ccd22a7fda505cb17d1"}, "downloads": -1, "filename": "redis-taxon-0.2.1.macosx-10.7-intel.tar.gz", "has_sig": false, "md5_digest": "27868fd95d13eb11de1a8244fea5774f", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 7030, "upload_time": "2012-05-01T20:36:40", "upload_time_iso_8601": "2012-05-01T20:36:40.657842Z", "url": "https://files.pythonhosted.org/packages/ba/52/0cd707866a593e28d26b16ba7a6f81364be016139f2676689452a13483e4/redis-taxon-0.2.1.macosx-10.7-intel.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "28d701e83c36721d4c0daeec49b3d181", "sha256": "d008d7deec3683918335a25b20891cc8b3fe06ec82b8fedcc58260a7c431c794"}, "downloads": -1, "filename": "redis-taxon-0.2.1.tar.gz", "has_sig": false, "md5_digest": "28d701e83c36721d4c0daeec49b3d181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4745, "upload_time": "2012-05-01T20:36:18", "upload_time_iso_8601": "2012-05-01T20:36:18.106875Z", "url": "https://files.pythonhosted.org/packages/bd/8f/6205286462cc42e0475853ccc4e924992db37beab153e0773c7c270aa2ce/redis-taxon-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "built for Darwin-11.3.0", "digests": {"md5": "878c15b97b8ac550ebfcbefdba6de9ea", "sha256": "de5d3f80d4aad11a2d7f3e8496f3e3030de85f98fb84188901943b26b422b283"}, "downloads": -1, "filename": "redis-taxon-0.2.2.macosx-10.7-intel.tar.gz", "has_sig": false, "md5_digest": "878c15b97b8ac550ebfcbefdba6de9ea", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 7028, "upload_time": "2012-05-01T20:38:11", "upload_time_iso_8601": "2012-05-01T20:38:11.627262Z", "url": "https://files.pythonhosted.org/packages/cb/ae/b0aa15301ee35c7ba526655b2b03738c93231512ba123aa84311b7a482a4/redis-taxon-0.2.2.macosx-10.7-intel.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "286e5b1a0c69c110dcd91a4e5c11cdd9", "sha256": "86351aa4823d3d32f69cdf574876ce5b567abf35310d871fc6d429ce612a6961"}, "downloads": -1, "filename": "redis_taxon-0.2.2-py2.7.egg", "has_sig": false, "md5_digest": "286e5b1a0c69c110dcd91a4e5c11cdd9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 8608, "upload_time": "2012-05-01T20:38:13", "upload_time_iso_8601": "2012-05-01T20:38:13.700308Z", "url": "https://files.pythonhosted.org/packages/f0/1f/877244475b004cab08c57d147d9e0161ccd672d82843b148ae3321334739/redis_taxon-0.2.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "929fdf707bcf61336bf84fecb88fba48", "sha256": "e410b73b13ffb071618760b7a1b1491c2f4ec2609cddc210c2f8f45700d9cc63"}, "downloads": -1, "filename": "redis-taxon-0.2.2.tar.gz", "has_sig": false, "md5_digest": "929fdf707bcf61336bf84fecb88fba48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4745, "upload_time": "2012-05-01T20:38:12", "upload_time_iso_8601": "2012-05-01T20:38:12.426112Z", "url": "https://files.pythonhosted.org/packages/ee/33/f3f37873dac4557e6ff06c539b8a529dd37b6e4d349974710ab1f14878a4/redis-taxon-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "built for Darwin-11.3.0", "digests": {"md5": "bb94c9a7cda873ecc79c047efa43aed8", "sha256": "3cbadf186401e4a99118d4a2a5d0340f89ff6c0865e51c091fbd885e23cc03d6"}, "downloads": -1, "filename": "redis-taxon-0.2.3.macosx-10.7-intel.tar.gz", "has_sig": false, "md5_digest": "bb94c9a7cda873ecc79c047efa43aed8", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 7032, "upload_time": "2012-05-01T20:39:06", "upload_time_iso_8601": "2012-05-01T20:39:06.355745Z", "url": "https://files.pythonhosted.org/packages/0e/cf/95445323c98e60a786823a358da982f422a45384a89e41c2f592cb29957e/redis-taxon-0.2.3.macosx-10.7-intel.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "561fa6e1ac8ef7cf239753ff7701e28e", "sha256": "8d3a77b14fe0e2c2c2d058262faefe72486ca1a2db67edcb237bedaa7f8ece95"}, "downloads": -1, "filename": "redis_taxon-0.2.3-py2.7.egg", "has_sig": false, "md5_digest": "561fa6e1ac8ef7cf239753ff7701e28e", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 8609, "upload_time": "2012-05-01T20:39:08", "upload_time_iso_8601": "2012-05-01T20:39:08.610151Z", "url": "https://files.pythonhosted.org/packages/41/2e/100a0be2232a9ea783d58556428b86c097e2efb84fc5555cf298e91be679/redis_taxon-0.2.3-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "12e0df4055c9fa19a67ce772d95ac8c3", "sha256": "57d0b9092bc748bb5e594df21d33611861c3a464242597f1200a3ec53fe89c4d"}, "downloads": -1, "filename": "redis-taxon-0.2.3.tar.gz", "has_sig": false, "md5_digest": "12e0df4055c9fa19a67ce772d95ac8c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4746, "upload_time": "2012-05-01T20:39:07", "upload_time_iso_8601": "2012-05-01T20:39:07.797353Z", "url": "https://files.pythonhosted.org/packages/25/5f/3efe88d3cf212d221b1b2b22644ce9a70aeee273094bea33790593610efe/redis-taxon-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "0647ea323d1dbfd5e711217116c45488", "sha256": "2d27b2fc16b6a5c841e6d9c823444f52750ae7b9b331377c3e172a471136ede7"}, "downloads": -1, "filename": "redis-taxon-0.2.4.tar.gz", "has_sig": false, "md5_digest": "0647ea323d1dbfd5e711217116c45488", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4746, "upload_time": "2012-05-01T20:42:43", "upload_time_iso_8601": "2012-05-01T20:42:43.719472Z", "url": "https://files.pythonhosted.org/packages/e5/c8/a6f285d5136bcdaf1920dd18b4b4523a3308da8525bc1582d6f0609730d0/redis-taxon-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "03332d4c502c94a99c02eaed7dee5da7", "sha256": "120b433d7bf8bca4792e84ecef1de985e6cfe1a7a4fab0ca18fcdb284f56d551"}, "downloads": -1, "filename": "redis-taxon-0.3.0.tar.gz", "has_sig": false, "md5_digest": "03332d4c502c94a99c02eaed7dee5da7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5740, "upload_time": "2012-09-24T04:12:00", "upload_time_iso_8601": "2012-09-24T04:12:00.415524Z", "url": "https://files.pythonhosted.org/packages/58/48/4f05f74244c3625e141ed85f4ca5e197edf5df20ddf90b7cda3258a6c926/redis-taxon-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03332d4c502c94a99c02eaed7dee5da7", "sha256": "120b433d7bf8bca4792e84ecef1de985e6cfe1a7a4fab0ca18fcdb284f56d551"}, "downloads": -1, "filename": "redis-taxon-0.3.0.tar.gz", "has_sig": false, "md5_digest": "03332d4c502c94a99c02eaed7dee5da7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5740, "upload_time": "2012-09-24T04:12:00", "upload_time_iso_8601": "2012-09-24T04:12:00.415524Z", "url": "https://files.pythonhosted.org/packages/58/48/4f05f74244c3625e141ed85f4ca5e197edf5df20ddf90b7cda3258a6c926/redis-taxon-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:44 2020"}