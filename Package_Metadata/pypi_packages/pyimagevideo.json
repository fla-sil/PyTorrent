{"info": {"author": "Michael Hirsch, Ph.D.", "author_email": "scivision@users.noreply.github.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Multimedia :: Graphics :: 3D Rendering", "Topic :: Multimedia :: Graphics :: Presentation", "Topic :: Multimedia :: Graphics :: Viewers", "Topic :: Multimedia :: Sound/Audio :: Players", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Utilities"], "description": "[![Travis CI status](https://travis-ci.org/scivision/pyimagevideo.svg?branch=master)](https://travis-ci.org/scivision/pyimagevideo)\n[![coverage](https://coveralls.io/repos/github/scivision/pyimagevideo/badge.svg?branch=master)](https://coveralls.io/github/scivision/pyimagevideo?branch=master)\n[![AppVeyor CI](https://ci.appveyor.com/api/projects/status/b55xigknwgd8m0y7?svg=true)](https://ci.appveyor.com/project/scivision/pyimagevideo)\n[![Maintainability](https://api.codeclimate.com/v1/badges/f9bdbab86e37a3680cfe/maintainability)](https://codeclimate.com/github/scivision/pyimagevideo/maintainability)\n[![pypi versions](https://img.shields.io/pypi/pyversions/pyimagevideo.svg)](https://pypi.python.org/pypi/pyimagevideo)\n[![PyPi Download stats](http://pepy.tech/badge/pyimagevideo)](http://pepy.tech/project/pyimagevideo)\n\n# Python Image and Video Read/Write Examples\n\nFunctions to **write multipage images** and **make videos** from Numpy arrays. \nAlso includes functions to test Matlab and Python OpenCV codecs.\n\n## Install\n\n```sh\npython -m pip install -e .\n```\n\n## Scripts\n\n\n`Convert_HDF5_to_AVI.py` converts HDF5 video data to AVI. \nTypically used in biomedical and science imaging, where they use HDF5 instead of TIFF,\nsince HDF5 is a very widespread, fast file format that can store arbitrarily large datasets and metadata. \nIt is recommended to researchers to use HDF5 instead of TIFF, FITS, CDF or proprietary\nformats for large data streams, including lossless video.\n\n`image_write_multipage.py` demonstration of writing multipage TIFF from\nNumpy arrays, using `tifffile` and freeimage (tifffile is 20x faster and\nmuch more featureful)\n\n`imageconv.py` converts large directory of files with same prefix to multipage TIFFs\n\n## Audio\n\nThe `audio_*.py` scripts show several methods for generating audio\noutput from Python.\n\n## Python lossless AVI writing\n\nYou can write AVI from Python without axes labels (openCV) or with labels/axes (Matplotlib)\n\n### OpenCV AVI writing\n\n[Demo_OpenCV_writeAVI.py](Demo_OpenCV_writeAVI.py) demonstrates using\nOpenCV to write video, with a lot of codecs to try. This does not insert\nany of the axes stuff that Matplotlib does, so it can be useful for\nmachine vision work. You can optinally overlay dynamic text on the\nvideo.\n\n### Matplotlib AVI writing\n\n[matplotlib_writeavi.py](matplotlib_writeavi.py) writes axes labels\nAVIs lossless using Matplotlib. Note that file-based\n`matplotlib.animation.writers['ffmpeg_file']` is used for better\nreliability, even though it takes twice as long as the pipe-based\n`ffmpeg`. On some computers, pipe-based\n`matplotlib.animation.writers['ffmpeg']` results in very distorted,\nscrambled output for some reason, with Matplotlib 1.5 and 2.0. In that\ncase, I have empirically found `ffmpeg_file` to Just Work.\n\n## Notes\n\n-   errors: `libfreeimage`, how to fix them: https://www.scivision.co/writing-multipage-tiff-with-python/", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scivision/pyimagevideo", "keywords": "video,audio,media,ffmpeg", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyimagevideo", "package_url": "https://pypi.org/project/pyimagevideo/", "platform": "", "project_url": "https://pypi.org/project/pyimagevideo/", "project_urls": {"Homepage": "https://github.com/scivision/pyimagevideo"}, "release_url": "https://pypi.org/project/pyimagevideo/1.0.1/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "Demos of OpenCV, read/write videos, etc.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/scivision/pyimagevideo\" rel=\"nofollow\"><img alt=\"Travis CI status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f2709ab5ae5ac8238bff59f0e2490ae9cdc3a4e/68747470733a2f2f7472617669732d63692e6f72672f736369766973696f6e2f7079696d616765766964656f2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/scivision/pyimagevideo?branch=master\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/444ca314f8e0bdb6141c73d3684378fd3b0a0837/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f736369766973696f6e2f7079696d616765766964656f2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/scivision/pyimagevideo\" rel=\"nofollow\"><img alt=\"AppVeyor CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e708a6a90d82a620f7647e0cd3bb18d93e458f72/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6235357869676b6e776764386d3079373f7376673d74727565\"></a>\n<a href=\"https://codeclimate.com/github/scivision/pyimagevideo/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ffb0cfb9c614299907fb4922666f1ace3b56a5c9/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f66396264626162383665333761333638306366652f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://pypi.python.org/pypi/pyimagevideo\" rel=\"nofollow\"><img alt=\"pypi versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3ebc5b0627b71e5bf1217dda2b19e29efdfe440/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7079696d616765766964656f2e737667\"></a>\n<a href=\"http://pepy.tech/project/pyimagevideo\" rel=\"nofollow\"><img alt=\"PyPi Download stats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb81abacb4b1b6e69b0099082faaf5004aafafdb/687474703a2f2f706570792e746563682f62616467652f7079696d616765766964656f\"></a></p>\n<h1>Python Image and Video Read/Write Examples</h1>\n<p>Functions to <strong>write multipage images</strong> and <strong>make videos</strong> from Numpy arrays.\nAlso includes functions to test Matlab and Python OpenCV codecs.</p>\n<h2>Install</h2>\n<pre>python -m pip install -e .\n</pre>\n<h2>Scripts</h2>\n<p><code>Convert_HDF5_to_AVI.py</code> converts HDF5 video data to AVI.\nTypically used in biomedical and science imaging, where they use HDF5 instead of TIFF,\nsince HDF5 is a very widespread, fast file format that can store arbitrarily large datasets and metadata.\nIt is recommended to researchers to use HDF5 instead of TIFF, FITS, CDF or proprietary\nformats for large data streams, including lossless video.</p>\n<p><code>image_write_multipage.py</code> demonstration of writing multipage TIFF from\nNumpy arrays, using <code>tifffile</code> and freeimage (tifffile is 20x faster and\nmuch more featureful)</p>\n<p><code>imageconv.py</code> converts large directory of files with same prefix to multipage TIFFs</p>\n<h2>Audio</h2>\n<p>The <code>audio_*.py</code> scripts show several methods for generating audio\noutput from Python.</p>\n<h2>Python lossless AVI writing</h2>\n<p>You can write AVI from Python without axes labels (openCV) or with labels/axes (Matplotlib)</p>\n<h3>OpenCV AVI writing</h3>\n<p><a href=\"Demo_OpenCV_writeAVI.py\" rel=\"nofollow\">Demo_OpenCV_writeAVI.py</a> demonstrates using\nOpenCV to write video, with a lot of codecs to try. This does not insert\nany of the axes stuff that Matplotlib does, so it can be useful for\nmachine vision work. You can optinally overlay dynamic text on the\nvideo.</p>\n<h3>Matplotlib AVI writing</h3>\n<p><a href=\"matplotlib_writeavi.py\" rel=\"nofollow\">matplotlib_writeavi.py</a> writes axes labels\nAVIs lossless using Matplotlib. Note that file-based\n<code>matplotlib.animation.writers['ffmpeg_file']</code> is used for better\nreliability, even though it takes twice as long as the pipe-based\n<code>ffmpeg</code>. On some computers, pipe-based\n<code>matplotlib.animation.writers['ffmpeg']</code> results in very distorted,\nscrambled output for some reason, with Matplotlib 1.5 and 2.0. In that\ncase, I have empirically found <code>ffmpeg_file</code> to Just Work.</p>\n<h2>Notes</h2>\n<ul>\n<li>errors: <code>libfreeimage</code>, how to fix them: <a href=\"https://www.scivision.co/writing-multipage-tiff-with-python/\" rel=\"nofollow\">https://www.scivision.co/writing-multipage-tiff-with-python/</a></li>\n</ul>\n\n          </div>"}, "last_serial": 5331059, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "df6905975015ee4d68e5224792774801", "sha256": "577713df81a4b6ecd5b6d2c617736a791d8a2393a9183e4be9d0727820477cda"}, "downloads": -1, "filename": "pyimagevideo-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "df6905975015ee4d68e5224792774801", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21101, "upload_time": "2018-06-21T02:11:09", "upload_time_iso_8601": "2018-06-21T02:11:09.839690Z", "url": "https://files.pythonhosted.org/packages/ee/3f/f1071af0ab352edb8d3959c41af5b839492e29ee665670d40b63268ab15d/pyimagevideo-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d74f22e6b79272b60ab9c2de667b879", "sha256": "b2cc92fef5c027ea07e3ea591c77de08744dcccad0907bf6d9dab63ec8e9adba"}, "downloads": -1, "filename": "pyimagevideo-0.6.0.tar.gz", "has_sig": false, "md5_digest": "4d74f22e6b79272b60ab9c2de667b879", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13964, "upload_time": "2018-06-21T02:11:11", "upload_time_iso_8601": "2018-06-21T02:11:11.365693Z", "url": "https://files.pythonhosted.org/packages/d5/35/cf0d33b7a507ff359335b3893c38fe6684851b1c062077a818324ea8fa39/pyimagevideo-0.6.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "9d5e6c5cbef75bf89c0f632cf47e7ebb", "sha256": "92b5de0efc045d9f41b0d8759a01d8085a4de9a6907b3712a7214d6c0d05218f"}, "downloads": -1, "filename": "pyimagevideo-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9d5e6c5cbef75bf89c0f632cf47e7ebb", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 13416, "upload_time": "2018-12-31T18:08:58", "upload_time_iso_8601": "2018-12-31T18:08:58.918641Z", "url": "https://files.pythonhosted.org/packages/7e/af/499a5b4403dfaf674382d66192fba8cfcf86baabaa439dbfc7ce9029d0d8/pyimagevideo-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "5fe32df46ecf8b6c56a217af54d63ca6", "sha256": "ce9cf8a7bcb910ca53ab38119b016c986c2b978efdbfabaa1c76ac310e59a911"}, "downloads": -1, "filename": "pyimagevideo-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5fe32df46ecf8b6c56a217af54d63ca6", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 27060, "upload_time": "2019-05-29T08:16:56", "upload_time_iso_8601": "2019-05-29T08:16:56.416057Z", "url": "https://files.pythonhosted.org/packages/4b/aa/3951785ec81b02742e5c00f3b94739521e720097d3e1aef518853a5f8f64/pyimagevideo-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5fe32df46ecf8b6c56a217af54d63ca6", "sha256": "ce9cf8a7bcb910ca53ab38119b016c986c2b978efdbfabaa1c76ac310e59a911"}, "downloads": -1, "filename": "pyimagevideo-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5fe32df46ecf8b6c56a217af54d63ca6", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 27060, "upload_time": "2019-05-29T08:16:56", "upload_time_iso_8601": "2019-05-29T08:16:56.416057Z", "url": "https://files.pythonhosted.org/packages/4b/aa/3951785ec81b02742e5c00f3b94739521e720097d3e1aef518853a5f8f64/pyimagevideo-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:06 2020"}