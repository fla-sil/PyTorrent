{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "libauthkit documentation 0.5.1\n\nChanges\n=======\n\n0.4.6\n\n* Added new authentication module for Schevo in \n  authkit.users.schevo_04_driver \n* Added decorator functions for view-based authentication and authorization \n  in Django \n\n0.4.5\n\n* Bumped SQLAlchemy version to 0.5\n* Fixed ticket 67 to add Python 2.4 support, patch by Kumar McMillan\n\n**NOTE**: The old trac system is no longer used. Any outstanding bugs should be\nsubmitted **with patches and tests** to the AuthKit mailing list.\n\n0.4.4\n\n* Added patch by Phil Kershaw for Attribute exhange in OpenID\n* Added patch by Phil Kershaw for hiding the continue button during\n  OpenID redirection\n* Changed cookie handling so that if nouserincookie is set, the user data as\n  well as the username is stored in the session rather than the cookie\n* Added a user_data function to the form method so you can set arbitrary\n  user data messages via the same mechanism as other options\n\n0.4.3\n\n* Updated authkit.authenticate.form to handle the suggest change in #61\n* Added powerpack adaptors\n* Changed the multi middleware to return the WSGI response rather than\n  iterating over it and yielding results.\n* Fixed #50 OpenID problem and tested on blogger.com\n* Added the ability to pass the environ dictionary to render() functions\n* Added bad cookie customisation options to fix #65 but also to allow\n  bad cookie template customisation. See the docstring of the \n  authkit.authenticate.cookie module.\n* Added a new algorithm based on ideas from #61 to guess the correct action\n  for the form produced by the form middleware but also added support for\n  an authkit.form.action option which allows you to manually override \n  AuthKit's guess. (The OpenID middleware calls this baseurl)\n* Added user_set_password() methods to users API. Fixes #64.\n* Removed arabic letters from the form handler. Fixes #40.\n* Added headers to the form handling for IE. Fixes #54.\n* Adding SQLAlchemy 0.5 support, uses session.add() instead of session.save()\n* The multi handler now handles WSGI applications implemented as iterators,\n  it already supported generators. The multi2.py example demonstrates this.\n* Set the pylons.status_code_redirect environment variable on all redirected \n  AuthKit responses\n* Set the pylons.error_call environment variable on all redirected AuthKit\n  responses\n* Trigger an error when trying to use server-side password encryption with \n  digest authentication\n\n0.4.2\n\n* Applied most of #59 and tested the two OpenID examples\n* Added support for WebOb HTTPExceptions to remove a deprecation warning in \n  Pylons 0.9.7\n* Fixed a missing md5 import in the cookie module\n* Applied patch in ticket #52\n   \n0.4.1 \n\n* Added ``setup.fakeuser`` option which automatically sets the REMOTE_USER\n  so that it appears someone has signed in. Useful with setup.enable = False\n\n* The ``setup.enable = false`` option now also disables  authorisation          \n  checks (reported by Rick Flosi)                                               \n\n* Applied patch from Pawel Niewiadomski to fix #53\n* Changed the import of the openid.sreg module to openid.extensions.sreg\n* Fixed the encoding of the form.py file\n* Updated the examples to use the latest syntax\n* Updated the tests for the new SQLAlchemy drivers\n* Added Daniel Pronych's SQLAlchemy drivers but with significant changes\n* Fixed a bug due to a change in the latest version of Python OpenID\n  so that AuthKit OpenID works with Yahoo sign-ins. Phil Kershaw #50\n* Updated the user/database example, it now works #43\n* Updated user tokens code to fix #17\n* Updated authkit.authenticate.multi so that it should fix #41 and pass\n  the WSGI writable from start_response() correctly.\n* Added a form.method option so you can choose GET authentication for\n  cases when another piece of middleware has already parsed the form \n  variables (eg with repoze?).\n* Fixed bug in form action generation for non-standard ports\n* Fixed bug reported by Sam Gentle where remote addr is obtained from \n  X_FORWARDED_FOR after multiple proxies.\n* AuthKit form authentication now picks up HTTP_X_FORWARDED_HOST and\n  HTTP_X_FORWARDED_PORT when generating an action. This allows you to run\n  an AuthKit app on port 80, proxied from 443 as long as you set up these\n  two (slightly unstandard) variables.\n* Fixed #38, cookie sign out path should match the path specified in \n  the config file.\n* Fixed #37, missing import of sys in digest authentication\n* Updated SQLAlchemy code to use SQLAlchemyManager. Needs installing \n  manually with ``easy_install SQLAlchemyManager``.\n* Added a user management api_version attribute and changed the API so that\n  the users object is set up on each request and recieves an environ\n  argument.\n* OpenID middleware now no longer sets up beaker middleware itself. This \n  should now be done manually in the middleware stack. See the example in \n  examples/docs/open_id.py\n* OpenID support now upgraded to use 2.0 (from Dalius Dobravolskas)\n* Fixed encrypt typo with postgres users driver\n* The cookie middleware now has a nouserincookie option which forces the \n  middleware to store the username in a Beaker session rather than in plain\n  text in the cookie. See examples/docs/form_no_user_in_cookie.py for an\n  example of its use.\n* Form authentication method now defaults to 200 OK rather than 401 when \n  the sign in form is displayed so that it works with Safari 3 Beta. \n* The cookie middleware Bad Ticket page now also uses 200 OK, also to \n  support Safari 3 Beta.\n* The cookie middleware bad ticket now logs to debug rather than error to \n  avoid the ``No handlers could be found for logger \n  \"authkit.authenticate.cookie\"`` message you get with a bad cookie if no\n  error logging is specifically set up.\n* Added a user management api_version attribute and changed the API so that\n  the users object is set up on each request and recieves an environ\n  argument.\n* Fixed encrypt typo with postgres users driver\n* Renamed the config_paste option to app_conf in authenticate middleware. If \n  you get an \"No authkit.setup.method was specified\" error when you are sure\n  it is specified, this might be why.\n\n0.4.0 \n\n* Added support for encrypted passwords\n* Fixed the IE7 bug in digest middleware\n* Adding SSO sub-directory, redirecting API, and CAS auth handler.\n* Fixed binding check to return none, instead of throwing an Exception (for\n  performance reasons).\n* Moved start_response check outside of app_iter consumption since it must be\n  called by this point to comply with WSGI.\n* Fixed consumption app iter in multi, loading entire response into ram.\n* Adding changelog\n* Added IP and Time based permission objects\n* Started unit tests\n* Extended the user management API and added SQLAlchemy driver and example\n* Restructured the authenticate middleware into induvidual pluggable components\n* Simplified the configuration file system\n* Added OpenID dependencies\n* Removed the larger SQLAlchemy based demos\n* The cookie module uses ``authkit`` as a default cookie name, not ``auth_tkt``.\n  Any code which does anything manually with this cookie needs the name changing\n  if it wasn't explicitly set to ``auth_tkt`` in the config file.\n\n0.3.0pre5\n\n* Changed the arguments to the authkit.authenticate.middleware() factory. You\n  will need to update your middleware setup to use app_conf instead of\n  config_paste for the app_conf dictionary.\n\n0.3 \n\n* Re-written from scratch to be a modular toolkit for building your own auth\n  framework rather than an all-in-one solution.\n\t\n0.2\n\n* Re-written from scratch so to use SQLAlchemy only, old driver system considered\n  unnecessary and limiting. Also doesn't fit in with current Pylons\n  best-practice.\n\n0.1 \n\n* Based on the web.auth 0.6 module from www.pythonweb.org, support for SQLObject\n  driver included\n\n\nCopyright (C) 2007-2019 Etienne Robillard <tkadm30 at yandex dot ru>\nCopyright (C) 2005-2007 James Gardner <james at pythonweb dot org>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nPermission is hereby granted, free of charge, to any person obtaining a \ncopy of this software and associated documentation files (the \"Software\"), \nto deal in the Software without restriction, including without limitation \nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the \nSoftware is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included \nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n\nDownload\n========", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.isotopesoftware.ca/software/libauthkit", "keywords": "", "license": "ISC", "maintainer": "Etienne Robillard", "maintainer_email": "tkadm30@yandex.com", "name": "libauthkit", "package_url": "https://pypi.org/project/libauthkit/", "platform": "", "project_url": "https://pypi.org/project/libauthkit/", "project_urls": {"Homepage": "https://www.isotopesoftware.ca/software/libauthkit"}, "release_url": "https://pypi.org/project/libauthkit/0.5.2/", "requires_dist": null, "requires_python": "", "summary": "An extensible authentication and authorization framework on top of WSGI", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>libauthkit documentation 0.5.1</p>\n<div id=\"changes\">\n<h2>Changes</h2>\n<p>0.4.6</p>\n<ul>\n<li>Added new authentication module for Schevo in\nauthkit.users.schevo_04_driver</li>\n<li>Added decorator functions for view-based authentication and authorization\nin Django</li>\n</ul>\n<p>0.4.5</p>\n<ul>\n<li>Bumped SQLAlchemy version to 0.5</li>\n<li>Fixed ticket 67 to add Python 2.4 support, patch by Kumar McMillan</li>\n</ul>\n<p><strong>NOTE</strong>: The old trac system is no longer used. Any outstanding bugs should be\nsubmitted <strong>with patches and tests</strong> to the AuthKit mailing list.</p>\n<p>0.4.4</p>\n<ul>\n<li>Added patch by Phil Kershaw for Attribute exhange in OpenID</li>\n<li>Added patch by Phil Kershaw for hiding the continue button during\nOpenID redirection</li>\n<li>Changed cookie handling so that if nouserincookie is set, the user data as\nwell as the username is stored in the session rather than the cookie</li>\n<li>Added a user_data function to the form method so you can set arbitrary\nuser data messages via the same mechanism as other options</li>\n</ul>\n<p>0.4.3</p>\n<ul>\n<li>Updated authkit.authenticate.form to handle the suggest change in #61</li>\n<li>Added powerpack adaptors</li>\n<li>Changed the multi middleware to return the WSGI response rather than\niterating over it and yielding results.</li>\n<li>Fixed #50 OpenID problem and tested on blogger.com</li>\n<li>Added the ability to pass the environ dictionary to render() functions</li>\n<li>Added bad cookie customisation options to fix #65 but also to allow\nbad cookie template customisation. See the docstring of the\nauthkit.authenticate.cookie module.</li>\n<li>Added a new algorithm based on ideas from #61 to guess the correct action\nfor the form produced by the form middleware but also added support for\nan authkit.form.action option which allows you to manually override\nAuthKit\u2019s guess. (The OpenID middleware calls this baseurl)</li>\n<li>Added user_set_password() methods to users API. Fixes #64.</li>\n<li>Removed arabic letters from the form handler. Fixes #40.</li>\n<li>Added headers to the form handling for IE. Fixes #54.</li>\n<li>Adding SQLAlchemy 0.5 support, uses session.add() instead of session.save()</li>\n<li>The multi handler now handles WSGI applications implemented as iterators,\nit already supported generators. The multi2.py example demonstrates this.</li>\n<li>Set the pylons.status_code_redirect environment variable on all redirected\nAuthKit responses</li>\n<li>Set the pylons.error_call environment variable on all redirected AuthKit\nresponses</li>\n<li>Trigger an error when trying to use server-side password encryption with\ndigest authentication</li>\n</ul>\n<p>0.4.2</p>\n<ul>\n<li>Applied most of #59 and tested the two OpenID examples</li>\n<li>Added support for WebOb HTTPExceptions to remove a deprecation warning in\nPylons 0.9.7</li>\n<li>Fixed a missing md5 import in the cookie module</li>\n<li>Applied patch in ticket #52</li>\n</ul>\n<p>0.4.1</p>\n<ul>\n<li>Added <tt>setup.fakeuser</tt> option which automatically sets the REMOTE_USER\nso that it appears someone has signed in. Useful with setup.enable = False</li>\n<li>The <tt>setup.enable = false</tt> option now also disables  authorisation\nchecks (reported by Rick Flosi)</li>\n<li>Applied patch from Pawel Niewiadomski to fix #53</li>\n<li>Changed the import of the openid.sreg module to openid.extensions.sreg</li>\n<li>Fixed the encoding of the form.py file</li>\n<li>Updated the examples to use the latest syntax</li>\n<li>Updated the tests for the new SQLAlchemy drivers</li>\n<li>Added Daniel Pronych\u2019s SQLAlchemy drivers but with significant changes</li>\n<li>Fixed a bug due to a change in the latest version of Python OpenID\nso that AuthKit OpenID works with Yahoo sign-ins. Phil Kershaw #50</li>\n<li>Updated the user/database example, it now works #43</li>\n<li>Updated user tokens code to fix #17</li>\n<li>Updated authkit.authenticate.multi so that it should fix #41 and pass\nthe WSGI writable from start_response() correctly.</li>\n<li>Added a form.method option so you can choose GET authentication for\ncases when another piece of middleware has already parsed the form\nvariables (eg with repoze?).</li>\n<li>Fixed bug in form action generation for non-standard ports</li>\n<li>Fixed bug reported by Sam Gentle where remote addr is obtained from\nX_FORWARDED_FOR after multiple proxies.</li>\n<li>AuthKit form authentication now picks up HTTP_X_FORWARDED_HOST and\nHTTP_X_FORWARDED_PORT when generating an action. This allows you to run\nan AuthKit app on port 80, proxied from 443 as long as you set up these\ntwo (slightly unstandard) variables.</li>\n<li>Fixed #38, cookie sign out path should match the path specified in\nthe config file.</li>\n<li>Fixed #37, missing import of sys in digest authentication</li>\n<li>Updated SQLAlchemy code to use SQLAlchemyManager. Needs installing\nmanually with <tt>easy_install SQLAlchemyManager</tt>.</li>\n<li>Added a user management api_version attribute and changed the API so that\nthe users object is set up on each request and recieves an environ\nargument.</li>\n<li>OpenID middleware now no longer sets up beaker middleware itself. This\nshould now be done manually in the middleware stack. See the example in\nexamples/docs/open_id.py</li>\n<li>OpenID support now upgraded to use 2.0 (from Dalius Dobravolskas)</li>\n<li>Fixed encrypt typo with postgres users driver</li>\n<li>The cookie middleware now has a nouserincookie option which forces the\nmiddleware to store the username in a Beaker session rather than in plain\ntext in the cookie. See examples/docs/form_no_user_in_cookie.py for an\nexample of its use.</li>\n<li>Form authentication method now defaults to 200 OK rather than 401 when\nthe sign in form is displayed so that it works with Safari 3 Beta.</li>\n<li>The cookie middleware Bad Ticket page now also uses 200 OK, also to\nsupport Safari 3 Beta.</li>\n<li>The cookie middleware bad ticket now logs to debug rather than error to\navoid the <tt>No handlers could be found for logger\n\"authkit.authenticate.cookie\"</tt> message you get with a bad cookie if no\nerror logging is specifically set up.</li>\n<li>Added a user management api_version attribute and changed the API so that\nthe users object is set up on each request and recieves an environ\nargument.</li>\n<li>Fixed encrypt typo with postgres users driver</li>\n<li>Renamed the config_paste option to app_conf in authenticate middleware. If\nyou get an \u201cNo authkit.setup.method was specified\u201d error when you are sure\nit is specified, this might be why.</li>\n</ul>\n<p>0.4.0</p>\n<ul>\n<li>Added support for encrypted passwords</li>\n<li>Fixed the IE7 bug in digest middleware</li>\n<li>Adding SSO sub-directory, redirecting API, and CAS auth handler.</li>\n<li>Fixed binding check to return none, instead of throwing an Exception (for\nperformance reasons).</li>\n<li>Moved start_response check outside of app_iter consumption since it must be\ncalled by this point to comply with WSGI.</li>\n<li>Fixed consumption app iter in multi, loading entire response into ram.</li>\n<li>Adding changelog</li>\n<li>Added IP and Time based permission objects</li>\n<li>Started unit tests</li>\n<li>Extended the user management API and added SQLAlchemy driver and example</li>\n<li>Restructured the authenticate middleware into induvidual pluggable components</li>\n<li>Simplified the configuration file system</li>\n<li>Added OpenID dependencies</li>\n<li>Removed the larger SQLAlchemy based demos</li>\n<li>The cookie module uses <tt>authkit</tt> as a default cookie name, not <tt>auth_tkt</tt>.\nAny code which does anything manually with this cookie needs the name changing\nif it wasn\u2019t explicitly set to <tt>auth_tkt</tt> in the config file.</li>\n</ul>\n<p>0.3.0pre5</p>\n<ul>\n<li>Changed the arguments to the authkit.authenticate.middleware() factory. You\nwill need to update your middleware setup to use app_conf instead of\nconfig_paste for the app_conf dictionary.</li>\n</ul>\n<p>0.3</p>\n<ul>\n<li>Re-written from scratch to be a modular toolkit for building your own auth\nframework rather than an all-in-one solution.</li>\n</ul>\n<p>0.2</p>\n<ul>\n<li>Re-written from scratch so to use SQLAlchemy only, old driver system considered\nunnecessary and limiting. Also doesn\u2019t fit in with current Pylons\nbest-practice.</li>\n</ul>\n<p>0.1</p>\n<ul>\n<li>Based on the web.auth 0.6 module from www.pythonweb.org, support for SQLObject\ndriver included</li>\n</ul>\n<p>Copyright (C) 2007-2019 Etienne Robillard &lt;tkadm30 at yandex dot ru&gt;\nCopyright (C) 2005-2007 James Gardner &lt;james at pythonweb dot org&gt;</p>\n<p>Permission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \u201cSoftware\u201d),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</p>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n</div>\n\n          </div>"}, "last_serial": 5009292, "releases": {"0.5.1": [{"comment_text": "", "digests": {"md5": "df3b18b8874b8ae9eb41caf2f5a36b44", "sha256": "30e99f81be08aff9ce08221a724c37df8a16885032cde0a717eaa416ab4da3be"}, "downloads": -1, "filename": "libauthkit-0.5.1.tar.gz", "has_sig": false, "md5_digest": "df3b18b8874b8ae9eb41caf2f5a36b44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 76938, "upload_time": "2018-04-16T10:24:25", "upload_time_iso_8601": "2018-04-16T10:24:25.363192Z", "url": "https://files.pythonhosted.org/packages/23/f1/3a5dff6245bad279150d4b67fc76588ab3c30aa55c936fdd77fdcb3efd73/libauthkit-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "9a753efba7eaf9e79041562e6b245031", "sha256": "116f9380b6a8f2af42bb9d2666183144c247fa705056644b16d5fea0bac2a9c8"}, "downloads": -1, "filename": "libauthkit-0.5.2.tar.gz", "has_sig": false, "md5_digest": "9a753efba7eaf9e79041562e6b245031", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75201, "upload_time": "2019-03-31T12:20:12", "upload_time_iso_8601": "2019-03-31T12:20:12.584232Z", "url": "https://files.pythonhosted.org/packages/79/fe/b281d5614626b8083b8438ea04d664c287d7d5e5d393215f977c526f5532/libauthkit-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9a753efba7eaf9e79041562e6b245031", "sha256": "116f9380b6a8f2af42bb9d2666183144c247fa705056644b16d5fea0bac2a9c8"}, "downloads": -1, "filename": "libauthkit-0.5.2.tar.gz", "has_sig": false, "md5_digest": "9a753efba7eaf9e79041562e6b245031", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75201, "upload_time": "2019-03-31T12:20:12", "upload_time_iso_8601": "2019-03-31T12:20:12.584232Z", "url": "https://files.pythonhosted.org/packages/79/fe/b281d5614626b8083b8438ea04d664c287d7d5e5d393215f977c526f5532/libauthkit-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:41 2020"}