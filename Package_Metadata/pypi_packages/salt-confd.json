{"info": {"author": "Mircea Ulinic", "author_email": "ping@mirceaulinic.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Cython", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: System :: Clustering", "Topic :: System :: Distributed Computing", "Topic :: System :: Operating System", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "salt-confd\n==========\n\nLightweight Salt package \u00e0 la `confd \n<https://github.com/kelseyhightower/confd>`__\nmanagement of local application configuration files.\n\nWhy\n---\n\nPlease note that the intent of this software package is not to compete against\n``confd`` or other popular equivalents; it was born purely out of my personal\npreference / bias of using Salt for managing files (and others). Salt is\ntypically at the opposite end of \"lightweight\" and this package aims to\nalleviate this, however it still cannot get better than ``confd`` - from this\nperspective. Alas, it's written in Python (please let's not have this discussion\nover here \ud83d\ude04).\n\nIn short, here's why I took this approach:\n\n* Why not? It's fun.\n* I like Salt, and it offers a variety of well-known templating languages to\n  manage the files, including Jinja, Mako, Cheetah, or even pure Python - and\n  others. In other words, I find that I prefer to use something I'm already\n  comfortable with, particularly in environments where Salt is already a\n  requirement.\n* What I find missing in ``confd`` is the possibility to manage the local config\n  files based on more environment parameters - e.g., have idempotent templates\n  that can be used across a number of distributions (as in opposite to having\n  separate files / directory tree / or even repositories for different\n  base operating system distribution); with Salt, this can be very easily done\n  using the Grains.\n* Not only local templates: it often happens to have your template on a server\n  elsewhere; at the end of the day, you need the resulting config file, not its\n  source.\n  With Salt Confd, you can use source files directly available via HTTP, S3,\n  SWIFT, SVN, or FTP.\n* Salt covers a large variety of backends to fetch the data from (including \n  Redis, Vault, Consul, etcd, and so on).\n* Salt is easily extensible (not by forking the project), but in\n  your own environment by simply putting the module for your backend of choice\n  under a specific path.\n\n  Or, to put this differently, if you need a different backend, or an additional\n  feature, you won't need to fork the entire project and re-compile it; instead,\n  you can preserve the existing usage and just provide it with your own code\n  implementing the feature or backend you need.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install salt-confd", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mirceaulinic/salt-confd", "keywords": "confd,docker,kubernetes,configuration,application", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "salt-confd", "package_url": "https://pypi.org/project/salt-confd/", "platform": "", "project_url": "https://pypi.org/project/salt-confd/", "project_urls": {"Homepage": "https://github.com/mirceaulinic/salt-confd"}, "release_url": "https://pypi.org/project/salt-confd/2019.9.0a1/", "requires_dist": null, "requires_python": "", "summary": "Lightweight Salt package for confd-style management of local application configuration files", "version": "2019.9.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Lightweight Salt package \u00e0 la <a href=\"https://github.com/kelseyhightower/confd\" rel=\"nofollow\">confd</a>\nmanagement of local application configuration files.</p>\n<div id=\"why\">\n<h2>Why</h2>\n<p>Please note that the intent of this software package is not to compete against\n<tt>confd</tt> or other popular equivalents; it was born purely out of my personal\npreference / bias of using Salt for managing files (and others). Salt is\ntypically at the opposite end of \u201clightweight\u201d and this package aims to\nalleviate this, however it still cannot get better than <tt>confd</tt> - from this\nperspective. Alas, it\u2019s written in Python (please let\u2019s not have this discussion\nover here \ud83d\ude04).</p>\n<p>In short, here\u2019s why I took this approach:</p>\n<ul>\n<li><p>Why not? It\u2019s fun.</p>\n</li>\n<li><p>I like Salt, and it offers a variety of well-known templating languages to\nmanage the files, including Jinja, Mako, Cheetah, or even pure Python - and\nothers. In other words, I find that I prefer to use something I\u2019m already\ncomfortable with, particularly in environments where Salt is already a\nrequirement.</p>\n</li>\n<li><p>What I find missing in <tt>confd</tt> is the possibility to manage the local config\nfiles based on more environment parameters - e.g., have idempotent templates\nthat can be used across a number of distributions (as in opposite to having\nseparate files / directory tree / or even repositories for different\nbase operating system distribution); with Salt, this can be very easily done\nusing the Grains.</p>\n</li>\n<li><p>Not only local templates: it often happens to have your template on a server\nelsewhere; at the end of the day, you need the resulting config file, not its\nsource.\nWith Salt Confd, you can use source files directly available via HTTP, S3,\nSWIFT, SVN, or FTP.</p>\n</li>\n<li><p>Salt covers a large variety of backends to fetch the data from (including\nRedis, Vault, Consul, etcd, and so on).</p>\n</li>\n<li><p>Salt is easily extensible (not by forking the project), but in\nyour own environment by simply putting the module for your backend of choice\nunder a specific path.</p>\n<p>Or, to put this differently, if you need a different backend, or an additional\nfeature, you won\u2019t need to fork the entire project and re-compile it; instead,\nyou can preserve the existing usage and just provide it with your own code\nimplementing the feature or backend you need.</p>\n</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install salt-confd\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5785932, "releases": {"2019.7.0a1": [{"comment_text": "", "digests": {"md5": "9845da15413122fcabb6b64d5ff9b0e4", "sha256": "be959924a3db8adb043d6b094b5d87edc3db1539712ee487be2e444870fe5df6"}, "downloads": -1, "filename": "salt-confd-2019.7.0a1.tar.gz", "has_sig": false, "md5_digest": "9845da15413122fcabb6b64d5ff9b0e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2844, "upload_time": "2019-07-08T08:24:57", "upload_time_iso_8601": "2019-07-08T08:24:57.268212Z", "url": "https://files.pythonhosted.org/packages/80/43/2ca165eea958039af93f1e2d85eb4be30e1b9078bf3de221627819f22544/salt-confd-2019.7.0a1.tar.gz", "yanked": false}], "2019.9.0a1": [{"comment_text": "", "digests": {"md5": "90833c3e64c429eb49a1a36e9dd99a43", "sha256": "8b347770a035526bb1e7b78bcdb3cab0002efba16ae758ee08d3f49aab5ad062"}, "downloads": -1, "filename": "salt-confd-2019.9.0a1.tar.gz", "has_sig": false, "md5_digest": "90833c3e64c429eb49a1a36e9dd99a43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6947, "upload_time": "2019-09-05T11:08:20", "upload_time_iso_8601": "2019-09-05T11:08:20.210732Z", "url": "https://files.pythonhosted.org/packages/78/e2/79164b2ea45ea4f4fa2c405d6eb62591a94a69a1a476f38a85c1b459e4f4/salt-confd-2019.9.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "90833c3e64c429eb49a1a36e9dd99a43", "sha256": "8b347770a035526bb1e7b78bcdb3cab0002efba16ae758ee08d3f49aab5ad062"}, "downloads": -1, "filename": "salt-confd-2019.9.0a1.tar.gz", "has_sig": false, "md5_digest": "90833c3e64c429eb49a1a36e9dd99a43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6947, "upload_time": "2019-09-05T11:08:20", "upload_time_iso_8601": "2019-09-05T11:08:20.210732Z", "url": "https://files.pythonhosted.org/packages/78/e2/79164b2ea45ea4f4fa2c405d6eb62591a94a69a1a476f38a85c1b459e4f4/salt-confd-2019.9.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:05 2020"}