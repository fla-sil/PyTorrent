{"info": {"author": "R\u00e9mi Duraffort", "author_email": "ivoire@videolan.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Communications", "Topic :: Software Development :: Testing", "Topic :: System :: Distributed Computing", "Topic :: System :: Networking"], "description": "|Build Status| |Coverage Status| |Code Health|\n\nReactOBus\n=========\n\nReactOBus is a message broker that helps to create software bus over the\nnetwork and to react to some messages.\n\nFeatures\n========\n\nReactOBus is able to:\n\n-  collect events (as network messages) from different sources\n-  publish the stream of events\n-  store the events in a database\n-  launch specific commands when an event match some conditions\n\nIn a near future, ReactOBus will be able to:\n\n-  filter-out some events\n-  modify on-the-fly event format\n-  ...\n\nUsing ReactOBus\n===============\n\nRequirements\n------------\n\nReactOBus is known to work with Python3.4 and Python3.5 under Linux.\n\nIt depends on (see **requirements.txt**):\n\n-  pyzmq\n-  pyYAML\n-  SQLAlchemy (if you wish to store events in a database)\n-  setproctitle\n\nInstalling\n----------\n\nReactOBus is available on\n`pypi <https://pypi.python.org/pypi/ReactOBus>`__ and can be installed\nwith:\n\n::\n\n    pip install ReactOBus\n\nBy default, **pip** will not install SQLAlchemy. If need, install it\nmanually afterward or ask pip to include the right ReactOBus variant\nwith:\n\n::\n\n    pip install ReactOBus[db]\n\nIt's also possible to execute ReactOBus directly from the sources:\n\n::\n\n    git clone https://github.com/ivoire/ReactOBus.git\n    cd ReactOBus\n    virtualenv -p python3.5 venv\n    source venv/bin/activate\n    pip install -r requirements.txt\n    python reactobus --level DEBUG --conf share/examples/reactobus.yaml\n\nConfiguration\n-------------\n\nThe configuration file is a YAML dictionary with:\n\n-  *inputs*: a list of input streams\n-  *outputs*: a list of output streams\n-  *core*: configuration of the internal sockets\n-  *reactor*: the reacting part of ReactOBus\n-  *db*: the database configuration\n\nAll keys except *core* and *inputs* are optional. If the optional keys\nare not found in the configuration, the corresponding modules won't be\nloaded.\n\nMessage format\n--------------\n\nFor the moment, ReactOBus only accepts one type of messages. The\nmessages should be multipart ZMQ messages with the following meaning:\n\n-  **topic**\n-  **uuid** (as generated by uuid.uuid1() in Python)\n-  **datetime** when the message was generated (isoformat)\n-  **username** of the sending process or user\n-  **data** as JSON\n\nTesting ReactOBus\n=================\n\nIn order to run ReactOBus automatic tests, you will have to install\n*py.test*:\n\n::\n\n    pip install pytest\n\nThen run the tests using:\n\n::\n\n    py.test tests -v\n    [...]\n    tests/test_core.py::test_core PASSED\n    tests/test_db.py::test_run PASSED\n    tests/test_db.py::test_errors PASSED\n    [...]\n\nOn each push, the tests and the coverage are computed on:\n\n-  `Test results <https://travis-ci.org/ivoire/ReactOBus>`__\n-  `Coverage report <https://coveralls.io/github/ivoire/ReactOBus>`__\n-  `Static analysis <https://landscape.io/github/ivoire/ReactOBus>`__\n\n.. |Build Status| image:: https://travis-ci.org/ivoire/ReactOBus.svg?branch=master\n   :target: https://travis-ci.org/ivoire/ReactOBus\n.. |Coverage Status| image:: https://coveralls.io/repos/github/ivoire/ReactOBus/badge.svg?branch=master\n   :target: https://coveralls.io/github/ivoire/ReactOBus?branch=master\n.. |Code Health| image:: https://landscape.io/github/ivoire/ReactOBus/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/ivoire/ReactOBus/master", "description_content_type": null, "docs_url": "https://pythonhosted.org/ReactOBus/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ivoire/ReactOBus", "keywords": null, "license": "AGPLv3+", "maintainer": null, "maintainer_email": null, "name": "ReactOBus", "package_url": "https://pypi.org/project/ReactOBus/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ReactOBus/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ivoire/ReactOBus"}, "release_url": "https://pypi.org/project/ReactOBus/0.2/", "requires_dist": null, "requires_python": null, "summary": "A message broker to create software bus over the network", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/ivoire/ReactOBus\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c27ebe2d1518b08b134c8862194430e69d973303/68747470733a2f2f7472617669732d63692e6f72672f69766f6972652f52656163744f4275732e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/ivoire/ReactOBus?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc58ecaff6290eb8183399993050acee59aa0614/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f69766f6972652f52656163744f4275732f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://landscape.io/github/ivoire/ReactOBus/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66514a00f3ebba62ccfd14544d99ab0219f61c89/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f69766f6972652f52656163744f4275732f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a></p>\n<div id=\"reactobus\">\n<h2>ReactOBus</h2>\n<p>ReactOBus is a message broker that helps to create software bus over the\nnetwork and to react to some messages.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>ReactOBus is able to:</p>\n<ul>\n<li>collect events (as network messages) from different sources</li>\n<li>publish the stream of events</li>\n<li>store the events in a database</li>\n<li>launch specific commands when an event match some conditions</li>\n</ul>\n<p>In a near future, ReactOBus will be able to:</p>\n<ul>\n<li>filter-out some events</li>\n<li>modify on-the-fly event format</li>\n<li>\u2026</li>\n</ul>\n</div>\n<div id=\"using-reactobus\">\n<h2>Using ReactOBus</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>ReactOBus is known to work with Python3.4 and Python3.5 under Linux.</p>\n<p>It depends on (see <strong>requirements.txt</strong>):</p>\n<ul>\n<li>pyzmq</li>\n<li>pyYAML</li>\n<li>SQLAlchemy (if you wish to store events in a database)</li>\n<li>setproctitle</li>\n</ul>\n</div>\n<div id=\"installing\">\n<h3>Installing</h3>\n<p>ReactOBus is available on\n<a href=\"https://pypi.python.org/pypi/ReactOBus\" rel=\"nofollow\">pypi</a> and can be installed\nwith:</p>\n<pre>pip install ReactOBus\n</pre>\n<p>By default, <strong>pip</strong> will not install SQLAlchemy. If need, install it\nmanually afterward or ask pip to include the right ReactOBus variant\nwith:</p>\n<pre>pip install ReactOBus[db]\n</pre>\n<p>It\u2019s also possible to execute ReactOBus directly from the sources:</p>\n<pre>git clone https://github.com/ivoire/ReactOBus.git\ncd ReactOBus\nvirtualenv -p python3.5 venv\nsource venv/bin/activate\npip install -r requirements.txt\npython reactobus --level DEBUG --conf share/examples/reactobus.yaml\n</pre>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>The configuration file is a YAML dictionary with:</p>\n<ul>\n<li><em>inputs</em>: a list of input streams</li>\n<li><em>outputs</em>: a list of output streams</li>\n<li><em>core</em>: configuration of the internal sockets</li>\n<li><em>reactor</em>: the reacting part of ReactOBus</li>\n<li><em>db</em>: the database configuration</li>\n</ul>\n<p>All keys except <em>core</em> and <em>inputs</em> are optional. If the optional keys\nare not found in the configuration, the corresponding modules won\u2019t be\nloaded.</p>\n</div>\n<div id=\"message-format\">\n<h3>Message format</h3>\n<p>For the moment, ReactOBus only accepts one type of messages. The\nmessages should be multipart ZMQ messages with the following meaning:</p>\n<ul>\n<li><strong>topic</strong></li>\n<li><strong>uuid</strong> (as generated by uuid.uuid1() in Python)</li>\n<li><strong>datetime</strong> when the message was generated (isoformat)</li>\n<li><strong>username</strong> of the sending process or user</li>\n<li><strong>data</strong> as JSON</li>\n</ul>\n</div>\n</div>\n<div id=\"testing-reactobus\">\n<h2>Testing ReactOBus</h2>\n<p>In order to run ReactOBus automatic tests, you will have to install\n<em>py.test</em>:</p>\n<pre>pip install pytest\n</pre>\n<p>Then run the tests using:</p>\n<pre>py.test tests -v\n[...]\ntests/test_core.py::test_core PASSED\ntests/test_db.py::test_run PASSED\ntests/test_db.py::test_errors PASSED\n[...]\n</pre>\n<p>On each push, the tests and the coverage are computed on:</p>\n<ul>\n<li><a href=\"https://travis-ci.org/ivoire/ReactOBus\" rel=\"nofollow\">Test results</a></li>\n<li><a href=\"https://coveralls.io/github/ivoire/ReactOBus\" rel=\"nofollow\">Coverage report</a></li>\n<li><a href=\"https://landscape.io/github/ivoire/ReactOBus\" rel=\"nofollow\">Static analysis</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2482783, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "560117c891c72898ce52ead44b51c19a", "sha256": "83e5776081a54eca6d290d31d6ea6dcafb516ac20b9be1230aaa4e18b7a59c9d"}, "downloads": -1, "filename": "ReactOBus-0.1.tar.gz", "has_sig": false, "md5_digest": "560117c891c72898ce52ead44b51c19a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6456, "upload_time": "2016-11-16T15:09:17", "upload_time_iso_8601": "2016-11-16T15:09:17.140974Z", "url": "https://files.pythonhosted.org/packages/2d/eb/82ecab8d157885e802bacd757ceeaa238aa096d2821ad77dd2a14b6f3e42/ReactOBus-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "21d449fe8adba63118acb19e5d237bfb", "sha256": "e5aede9bb154e784fa32257c408c627f3e4965a66563027f49209f43e95730d8"}, "downloads": -1, "filename": "ReactOBus-0.2.tar.gz", "has_sig": false, "md5_digest": "21d449fe8adba63118acb19e5d237bfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23349, "upload_time": "2016-11-25T15:39:37", "upload_time_iso_8601": "2016-11-25T15:39:37.607599Z", "url": "https://files.pythonhosted.org/packages/3b/bf/997f5d63501452fff39223a8d62a9c55cb2194657073ae7c6654917b6dda/ReactOBus-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21d449fe8adba63118acb19e5d237bfb", "sha256": "e5aede9bb154e784fa32257c408c627f3e4965a66563027f49209f43e95730d8"}, "downloads": -1, "filename": "ReactOBus-0.2.tar.gz", "has_sig": false, "md5_digest": "21d449fe8adba63118acb19e5d237bfb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23349, "upload_time": "2016-11-25T15:39:37", "upload_time_iso_8601": "2016-11-25T15:39:37.607599Z", "url": "https://files.pythonhosted.org/packages/3b/bf/997f5d63501452fff39223a8d62a9c55cb2194657073ae7c6654917b6dda/ReactOBus-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:31 2020"}