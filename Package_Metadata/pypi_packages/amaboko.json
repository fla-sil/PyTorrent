{"info": {"author": "9cumber team", "author_email": "micfall.romtin@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# amaboko - Amazon Book Information API\n\njust wrapping [Amazon Simple Product API](https://github.com/yoavaviram/python-amazon-simple-product-api)\n\n### Dependencies\n* Python 2.7.x\n* Amazon Product Advertising account (for APIAccessKey, APISecretKey)\n* AWS account (for AmazonAssociateTag)\n\n```\n$ pip install -r requirements.txt\n```\n\n### Description\n\nChoose 2 regions for endpoints, primary and secondary. If specified book information was not found in primary region, instead of that, this module will automatically get the information from secondary region. Of course, you can't necessarily get the information you want.\n\n### Preparation for test\n\nset environment variable **APIAccessKey, APISecretKey, AssocTag**.\n\n```\n$ AMAZON_ACCESS_KEY = \"APIAccessKey\"\n$ AMAZON_SECRET_KEY = \"APISecretKey\"\n$ AMAZON_ASSOC_TAG = \"AssocTag\"\n```\n\nor create `test_settings.py`\n\n```\n$ vim test_settings.py\n```\n\n```\nAMAZON_ACCESS_KEY = \"APIAccessKey\"\nAMAZON_SECRET_KEY = \"APISecretKey\"\nAMAZON_ASSOC_TAG = \"AssocTag\"\n```\n\nIf you didn't do above both of the above settings, you should pass those variables when you instantiate AmazonBook class. In the case of you imported this module, you have got to pass variables to AmazonBook constructor.\n\n### Usage\n\nYou can set primary and secondary regions from `[\"US\", \"FR\", \"CN\", \"UK\", \"IN\", \"CA\", \"DE\", \"JP\", \"IT\", \"ES\"]` in instantiation. (default regions are \"JP\" and \"US\")\n\n```\n>>> from amabako import AmazonBook, is_isbn_validate\n>>> a = AmazonBook(access_key, secret_key, assoc_tag)\n\n>>> isbn = \"9784048816592\"\n>>> print is_isbn_validate(isbn)\nFalse\n\n>>> isbn = \"9781433551666\"\n>>> print is_isbn_validate(isbn)\nTrue\n\n>>> book = a.lookup(isbn, IdType=\"ISBN\", SearchIndex=\"Books\")\n\n>>> print book.title\nHoly Bible: English Standard Version, Value Compact Bible, Trutone Turquoise, Emblem Design\n\n>>> print book.large_image_url\nhttp://ecx.images-amazon.com/images/I/412mbT1AvIL.jpg\n\n>>> print book.get_attribute('Publisher')\nCrossway Books\n\n>>> print book.price_and_currency\n('1531', 'JPY')\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/9cumber/amaboko", "keywords": "amazon", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "amaboko", "package_url": "https://pypi.org/project/amaboko/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/amaboko/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/9cumber/amaboko"}, "release_url": "https://pypi.org/project/amaboko/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "get book information by ISBN in some regions", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # amaboko - Amazon Book Information API<br><br>just wrapping [Amazon Simple Product API](https://github.com/yoavaviram/python-amazon-simple-product-api)<br><br>### Dependencies<br>* Python 2.7.x<br>* Amazon Product Advertising account (for APIAccessKey, APISecretKey)<br>* AWS account (for AmazonAssociateTag)<br><br>```<br>$ pip install -r requirements.txt<br>```<br><br>### Description<br><br>Choose 2 regions for endpoints, primary and secondary. If specified book information was not found in primary region, instead of that, this module will automatically get the information from secondary region. Of course, you can't necessarily get the information you want.<br><br>### Preparation for test<br><br>set environment variable **APIAccessKey, APISecretKey, AssocTag**.<br><br>```<br>$ AMAZON_ACCESS_KEY = \"APIAccessKey\"<br>$ AMAZON_SECRET_KEY = \"APISecretKey\"<br>$ AMAZON_ASSOC_TAG = \"AssocTag\"<br>```<br><br>or create `test_settings.py`<br><br>```<br>$ vim test_settings.py<br>```<br><br>```<br>AMAZON_ACCESS_KEY = \"APIAccessKey\"<br>AMAZON_SECRET_KEY = \"APISecretKey\"<br>AMAZON_ASSOC_TAG = \"AssocTag\"<br>```<br><br>If you didn't do above both of the above settings, you should pass those variables when you instantiate AmazonBook class. In the case of you imported this module, you have got to pass variables to AmazonBook constructor.<br><br>### Usage<br><br>You can set primary and secondary regions from `[\"US\", \"FR\", \"CN\", \"UK\", \"IN\", \"CA\", \"DE\", \"JP\", \"IT\", \"ES\"]` in instantiation. (default regions are \"JP\" and \"US\")<br><br>```<br>&gt;&gt;&gt; from amabako import AmazonBook, is_isbn_validate<br>&gt;&gt;&gt; a = AmazonBook(access_key, secret_key, assoc_tag)<br><br>&gt;&gt;&gt; isbn = \"9784048816592\"<br>&gt;&gt;&gt; print is_isbn_validate(isbn)<br>False<br><br>&gt;&gt;&gt; isbn = \"9781433551666\"<br>&gt;&gt;&gt; print is_isbn_validate(isbn)<br>True<br><br>&gt;&gt;&gt; book = a.lookup(isbn, IdType=\"ISBN\", SearchIndex=\"Books\")<br><br>&gt;&gt;&gt; print book.title<br>Holy Bible: English Standard Version, Value Compact Bible, Trutone Turquoise, Emblem Design<br><br>&gt;&gt;&gt; print book.large_image_url<br>http://ecx.images-amazon.com/images/I/412mbT1AvIL.jpg<br><br>&gt;&gt;&gt; print book.get_attribute('Publisher')<br>Crossway Books<br><br>&gt;&gt;&gt; print book.price_and_currency<br>('1531', 'JPY')<br>```\n          </div>"}, "last_serial": 2762623, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e29941656ab55b16dc9181e0f7eabe84", "sha256": "cec36d1fae6b44b5d9b0e438e9ae561ea90c84127e654073462be875ea840234"}, "downloads": -1, "filename": "amaboko-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e29941656ab55b16dc9181e0f7eabe84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2736, "upload_time": "2017-04-01T11:10:33", "upload_time_iso_8601": "2017-04-01T11:10:33.191699Z", "url": "https://files.pythonhosted.org/packages/21/79/2818aa0289ddec84f6ac52f679d1cc856c57d00c17e9b1760e685a0a5d48/amaboko-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "7ae1f2505db9a2d24f499e715e515721", "sha256": "465efb69f6a407f6e0575f10addc97433f1762dc3b2b3f106037581bfea37e29"}, "downloads": -1, "filename": "amaboko-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7ae1f2505db9a2d24f499e715e515721", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2744, "upload_time": "2017-04-01T15:16:25", "upload_time_iso_8601": "2017-04-01T15:16:25.597319Z", "url": "https://files.pythonhosted.org/packages/7e/bc/9350aaa05ec56a03b19af648eb5f01d3e479a461818a0342d8655915bd85/amaboko-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "57a767adfba7d23ea074974303075c8a", "sha256": "bcf81142d97bc979074eee1559bfa46bca5d9f5d7c5f6a6bdb205f8763bcec6d"}, "downloads": -1, "filename": "amaboko-0.0.3.tar.gz", "has_sig": false, "md5_digest": "57a767adfba7d23ea074974303075c8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2795, "upload_time": "2017-04-08T14:52:54", "upload_time_iso_8601": "2017-04-08T14:52:54.165846Z", "url": "https://files.pythonhosted.org/packages/05/8e/eaf5bdc240053723224cbeb917aa32d4e6487e320fcd67627760d2daa524/amaboko-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "57a767adfba7d23ea074974303075c8a", "sha256": "bcf81142d97bc979074eee1559bfa46bca5d9f5d7c5f6a6bdb205f8763bcec6d"}, "downloads": -1, "filename": "amaboko-0.0.3.tar.gz", "has_sig": false, "md5_digest": "57a767adfba7d23ea074974303075c8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2795, "upload_time": "2017-04-08T14:52:54", "upload_time_iso_8601": "2017-04-08T14:52:54.165846Z", "url": "https://files.pythonhosted.org/packages/05/8e/eaf5bdc240053723224cbeb917aa32d4e6487e320fcd67627760d2daa524/amaboko-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:25 2020"}