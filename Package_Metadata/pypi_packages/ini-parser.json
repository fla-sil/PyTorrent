{"info": {"author": "Andrew Lane", "author_email": "contact@lungers.com", "bugtrack_url": null, "classifiers": [], "description": "# ini-parser\n\n> An ini format parser and serializer for Python.\n\nSections are treated as nested dictionaries. Items before the first heading are saved on the object directly.\n\n## Usage\n\nConsider an ini-file `config.ini` that looks like this:\n\n```ini\n; this comment is being ignored\nscope = global\n\n[database]\nuser = dbuser\npassword = dbpassword\ndatabase = use_this_database\n\n[paths.default]\ndatadir = /var/lib/data\narray[] = first value\narray[] = second value\narray[] = third value\n```\n\nYou can read, manipulate and write the ini-file like so:\n\n```python\nimport ini\n\nconfig = ini.parse(open('config.ini').read())\n\nconfig['scope'] = 'local'\nconfig['database']['database'] = 'use_another_database'\nconfig['paths']['default']['tmpdir'] = '/tmp'\ndel config['paths']['default']['datadir']\nconfig['paths']['default']['array'].append('fourth value')\n\nwith open('config_modified.ini', 'w+') as f:\n    f.write(ini.stringify(config, {'section': 'section'}))\n```\n\nThis will result in a file called `config_modified.ini` being written to the filesystem with the following content:\n\n```ini\n[section]\nscope = local\n\n[section.database]\nuser = dbuser\npassword = dbpassword\ndatabase = use_another_database\n\n[section.paths.default]\narray[] = first value\narray[] = second value\narray[] = third value\narray[] = fourth value\ntmpdir = /tmp\n```\n\n## API\n\n### decode(inistring)\n\nDecode the ini-style formatted `inistring` into a nested object.\n\n### parse(inistring)\n\nAlias for `decode(inistring)`\n\n### encode(object, [options])\n\nEncode the object `object` into an ini-style formatted string. If the\noptional parameter `section` is given, then all top-level properties\nof the object are put into this section and the `section`-string is\nprepended to all sub-sections, see the usage example above.\n\nThe `options` object may contain the following:\n\n- `section` A string which will be the first `section` in the encoded\n    ini data. Defaults to none.\n- `whitespace` Boolean to specify whether to put whitespace around the\n    `=` character. By default, whitespace is omitted, to be friendly to\n    some persnickety old parsers that don't tolerate it well. But some\n    find that it's more human-readable and pretty with the whitespace.\n\nIf a `string` options is passed in, then it is assumed to be the `section` value.\n\n### stringify(object, [options])\n\nAlias for `encode(object, [options])`\n\n### safe(val)\n\nEscapes the string `val` such that it is safe to be used as a key or\nvalue in an ini-file. Basically escapes quotes. For example\n\n```python\nini.safe('\"unsafe string\"')\n```\n\nwould result in\n\n```python\n\"\\\"unsafe string\\\"\"\n```\n\n### unsafe(val)\n\nUnescapes the string `val`", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/YouTwitFace/ini-parser", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ini-parser", "package_url": "https://pypi.org/project/ini-parser/", "platform": "", "project_url": "https://pypi.org/project/ini-parser/", "project_urls": {"Homepage": "https://github.com/YouTwitFace/ini-parser"}, "release_url": "https://pypi.org/project/ini-parser/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "An ini parser/serializer in Python", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ini-parser</h1>\n<blockquote>\n<p>An ini format parser and serializer for Python.</p>\n</blockquote>\n<p>Sections are treated as nested dictionaries. Items before the first heading are saved on the object directly.</p>\n<h2>Usage</h2>\n<p>Consider an ini-file <code>config.ini</code> that looks like this:</p>\n<pre><span class=\"c1\">; this comment is being ignored</span>\n<span class=\"na\">scope</span> <span class=\"o\">=</span> <span class=\"s\">global</span>\n\n<span class=\"k\">[database]</span>\n<span class=\"na\">user</span> <span class=\"o\">=</span> <span class=\"s\">dbuser</span>\n<span class=\"na\">password</span> <span class=\"o\">=</span> <span class=\"s\">dbpassword</span>\n<span class=\"na\">database</span> <span class=\"o\">=</span> <span class=\"s\">use_this_database</span>\n\n<span class=\"k\">[paths.default]</span>\n<span class=\"na\">datadir</span> <span class=\"o\">=</span> <span class=\"s\">/var/lib/data</span>\n<span class=\"na\">array[]</span> <span class=\"o\">=</span> <span class=\"s\">first value</span>\n<span class=\"na\">array[]</span> <span class=\"o\">=</span> <span class=\"s\">second value</span>\n<span class=\"na\">array[]</span> <span class=\"o\">=</span> <span class=\"s\">third value</span>\n</pre>\n<p>You can read, manipulate and write the ini-file like so:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">ini</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ini</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'config.ini'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'scope'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'local'</span>\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'database'</span><span class=\"p\">][</span><span class=\"s1\">'database'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'use_another_database'</span>\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'paths'</span><span class=\"p\">][</span><span class=\"s1\">'default'</span><span class=\"p\">][</span><span class=\"s1\">'tmpdir'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'/tmp'</span>\n<span class=\"k\">del</span> <span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'paths'</span><span class=\"p\">][</span><span class=\"s1\">'default'</span><span class=\"p\">][</span><span class=\"s1\">'datadir'</span><span class=\"p\">]</span>\n<span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'paths'</span><span class=\"p\">][</span><span class=\"s1\">'default'</span><span class=\"p\">][</span><span class=\"s1\">'array'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"s1\">'fourth value'</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'config_modified.ini'</span><span class=\"p\">,</span> <span class=\"s1\">'w+'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">ini</span><span class=\"o\">.</span><span class=\"n\">stringify</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'section'</span><span class=\"p\">:</span> <span class=\"s1\">'section'</span><span class=\"p\">}))</span>\n</pre>\n<p>This will result in a file called <code>config_modified.ini</code> being written to the filesystem with the following content:</p>\n<pre><span class=\"k\">[section]</span>\n<span class=\"na\">scope</span> <span class=\"o\">=</span> <span class=\"s\">local</span>\n\n<span class=\"k\">[section.database]</span>\n<span class=\"na\">user</span> <span class=\"o\">=</span> <span class=\"s\">dbuser</span>\n<span class=\"na\">password</span> <span class=\"o\">=</span> <span class=\"s\">dbpassword</span>\n<span class=\"na\">database</span> <span class=\"o\">=</span> <span class=\"s\">use_another_database</span>\n\n<span class=\"k\">[section.paths.default]</span>\n<span class=\"na\">array[]</span> <span class=\"o\">=</span> <span class=\"s\">first value</span>\n<span class=\"na\">array[]</span> <span class=\"o\">=</span> <span class=\"s\">second value</span>\n<span class=\"na\">array[]</span> <span class=\"o\">=</span> <span class=\"s\">third value</span>\n<span class=\"na\">array[]</span> <span class=\"o\">=</span> <span class=\"s\">fourth value</span>\n<span class=\"na\">tmpdir</span> <span class=\"o\">=</span> <span class=\"s\">/tmp</span>\n</pre>\n<h2>API</h2>\n<h3>decode(inistring)</h3>\n<p>Decode the ini-style formatted <code>inistring</code> into a nested object.</p>\n<h3>parse(inistring)</h3>\n<p>Alias for <code>decode(inistring)</code></p>\n<h3>encode(object, [options])</h3>\n<p>Encode the object <code>object</code> into an ini-style formatted string. If the\noptional parameter <code>section</code> is given, then all top-level properties\nof the object are put into this section and the <code>section</code>-string is\nprepended to all sub-sections, see the usage example above.</p>\n<p>The <code>options</code> object may contain the following:</p>\n<ul>\n<li><code>section</code> A string which will be the first <code>section</code> in the encoded\nini data. Defaults to none.</li>\n<li><code>whitespace</code> Boolean to specify whether to put whitespace around the\n<code>=</code> character. By default, whitespace is omitted, to be friendly to\nsome persnickety old parsers that don't tolerate it well. But some\nfind that it's more human-readable and pretty with the whitespace.</li>\n</ul>\n<p>If a <code>string</code> options is passed in, then it is assumed to be the <code>section</code> value.</p>\n<h3>stringify(object, [options])</h3>\n<p>Alias for <code>encode(object, [options])</code></p>\n<h3>safe(val)</h3>\n<p>Escapes the string <code>val</code> such that it is safe to be used as a key or\nvalue in an ini-file. Basically escapes quotes. For example</p>\n<pre><span class=\"n\">ini</span><span class=\"o\">.</span><span class=\"n\">safe</span><span class=\"p\">(</span><span class=\"s1\">'\"unsafe string\"'</span><span class=\"p\">)</span>\n</pre>\n<p>would result in</p>\n<pre><span class=\"s2\">\"</span><span class=\"se\">\\\"</span><span class=\"s2\">unsafe string</span><span class=\"se\">\\\"</span><span class=\"s2\">\"</span>\n</pre>\n<h3>unsafe(val)</h3>\n<p>Unescapes the string <code>val</code></p>\n\n          </div>"}, "last_serial": 5542731, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f4da8301a6e44b34f1cce4b507791093", "sha256": "e7d3ece6e98728af0870d95f6b363d9e29755dfb1a5e141c891bbeb890f38261"}, "downloads": -1, "filename": "ini-parser-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f4da8301a6e44b34f1cce4b507791093", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3902, "upload_time": "2019-07-16T18:18:18", "upload_time_iso_8601": "2019-07-16T18:18:18.058410Z", "url": "https://files.pythonhosted.org/packages/6b/64/89ce35569171afe624a10a9efe339d231190323ab1f99412e07d503a2657/ini-parser-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f1900e6ef679313861e969dae4b2e6ab", "sha256": "a9be131f488ba6bba5abd440b2e6c02e2032d9b578cef024864c78ad02d6f609"}, "downloads": -1, "filename": "ini-parser-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f1900e6ef679313861e969dae4b2e6ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3982, "upload_time": "2019-07-16T21:18:07", "upload_time_iso_8601": "2019-07-16T21:18:07.971750Z", "url": "https://files.pythonhosted.org/packages/2e/ed/843d77644173bc9c3d8598a232112431c53561592b79aaef7449f14ec61e/ini-parser-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f1900e6ef679313861e969dae4b2e6ab", "sha256": "a9be131f488ba6bba5abd440b2e6c02e2032d9b578cef024864c78ad02d6f609"}, "downloads": -1, "filename": "ini-parser-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f1900e6ef679313861e969dae4b2e6ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3982, "upload_time": "2019-07-16T21:18:07", "upload_time_iso_8601": "2019-07-16T21:18:07.971750Z", "url": "https://files.pythonhosted.org/packages/2e/ed/843d77644173bc9c3d8598a232112431c53561592b79aaef7449f14ec61e/ini-parser-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:57 2020"}