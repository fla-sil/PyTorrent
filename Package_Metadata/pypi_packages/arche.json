{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Programming Language :: Python :: 3.7"], "description": "# Arche\n\n[![PyPI](https://img.shields.io/pypi/v/arche.svg)](https://pypi.org/project/arche)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/arche.svg)](https://pypi.org/project/arche)\n![GitHub](https://img.shields.io/github/license/scrapinghub/arche.svg)\n[![Build Status](https://travis-ci.com/scrapinghub/arche.svg?branch=master)](https://travis-ci.com/scrapinghub/arche)\n[![Codecov](https://img.shields.io/codecov/c/github/scrapinghub/arche.svg)](https://codecov.io/gh/scrapinghub/arche)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n[![GitHub commit activity](https://img.shields.io/github/commit-activity/m/scrapinghub/arche.svg)](https://github.com/scrapinghub/arche/commits/master)\n\n    pip install arche\n\nArche (pronounced *Arkey*) helps to verify scraped data using set of defined rules, for example:\n  * Validation with [JSON schema](https://json-schema.org/)\n  * Coverage (items, fields, categorical data, including booleans and enums)\n  * Duplicates\n  * Garbage symbols\n  * Comparison of two jobs\n  \n_We use it in Scrapinghub, among the other tools, to ensure quality of scraped data_\n\n## Installation\n\nArche requires [Jupyter](https://jupyter.org/install) environment, supporting both [JupyterLab](https://github.com/jupyterlab/jupyterlab#installation) and [Notebook](https://github.com/jupyter/notebook) UI\n\nFor JupyterLab, you will need to properly install [plotly extensions](https://github.com/plotly/plotly.py#jupyterlab-support-python-35)\n\nThen just `pip install arche`\n\n## Why\nTo check the quality of scraped data continuously. For example, if you scraped a website, a typical approach would be to validate the data with Arche. You can also create a schema and then set up [Spidermon](https://spidermon.readthedocs.io/en/latest/item-validation.html#with-json-schema)\n\n## Developer Setup\n\n\tpipenv install --dev\n\tpipenv shell\n\ttox\n\n## Contribution\nAny contributions are welcome! See https://github.com/scrapinghub/arche/issues if you want to take on something or suggest an improvement/report a bug.\n\n# Changes\nMost recent releases are shown at the top. Each release shows:\n\n- **Added**: New classes, methods, functions, etc\n- **Changed**: Additional parameters, changes to inputs or outputs, etc\n- **Fixed**: Bug fixes that don't change documented behaviour\n\nNote that the top-most release is changes in the unreleased master branch on Github. Parentheses after an item show the name or github id of the contributor of that change.\n\n[Keep a Changelog](https://keepachangelog.com/en/1.0.0/), [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n\n## [0.3.6] (2019-07-12)\n### Added\n- **Categories** rule with a plot showing unique values and count per field. By default, `report_all()` only includes fields which have less or equal to 10 unique values. See https://arche.readthedocs.io/en/latest/nbs/Rules.html#Category-fields, #100\n- Category documentation\n### Changed\n- `Arche.report_all()` does not shorten report by default, added `short` parameter.\n- Data is consistent with Dash and Spidermon: `_type, _key` fields are dropped from dataframe, raw data, basic schema, #104, #106\n- `df.index` now stores `_key` instead\n- `basic_json_schema()` works with `deleted` jobs\n- `start` is supported for Collections, #112\n- `enum` is counted as a `category` tag, #18\n- `Garbage Symbols` searches in str representation of nested fields instead of expanded df, #130\n- Show real coverage difference (negative\\positive) instead of absolute, #114\n### Fixed\n- `Arche.glance()`, #88\n- Item links in Schema validation errors, #89\n- Empty NAN bars on category graphs, #93\n- `data_quality_report()`, #95\n- Wrong number of Collection Items if it contains item 0, #112\n### Removed\n- **Responses Per Item Ratio** rule\n- Deprecated `expand` parameter and removed `flat_df`, since `Garbage Rule` deal with nested data itself, #133\n\n\n## [0.3.5] (2019-05-14)\n### Added\n- `Arche()` supports any iterables with item dicts, fixing jsonschema consistency, #83\n- `Items.from_array` to read raw data from iterables, #83\n### Changed\n- If reading from pandas df directly, store raw data in numpy array. See gotchas http://pandas.pydata.org/pandas-docs/stable/user_guide/gotchas.html#support-for-integer-na\n### Fixed\n### Removed\n\n\n## [0.3.4] (2019-05-06)\n### Fixed\n- basic_json_schema() fails with long `1.0` types, #80\n\n\n## [0.3.3] (2019-05-03)\n### Added\n- Accept dataframes as source or target, #69\n### Changed\n- data_quality_report plots the same \"Fields Coverage\" instead of green \"Scraped Fields Coverage\"\n- Plot theme changed from ggplot2 to seaborn, #62\n- Same target and source raise an error, was a warning before\n- Passed rules marked with green PASSED.\n### Fixed\n- Online documentation now renders graphs https://arche.readthedocs.io/en/latest/, #41\n- Error colours are back in `report_all()`. \n### Removed\n- Deprecated `Arche.basic_json_schema()`, use `basic_json_schema()`\n- Removed Quickstart.md as redundant - documentation lives in notebooks\n\n\n## [0.3.2] (2019-04-18)\n### Added\n- Allow reading private raw schemas directly from bitbucket, #58\n### Changed\n- Progress widgets are removed before printing graphs\n- New plotly v4 API\n### Fixed\n- Failing `Compare Prices For Same Urls` when url is `nan`, #67\n- Empty graphs in Jupyter Notebook, #63\n### Removed\n- Scraped Items History graphs\n\n\n## [0.3.1] (2019-04-12)\n### Fixed\n- Empty graphs due to lack of plotlyjs, #61\n\n\n## [0.3.0] (2019-04-12)\n### Fixed\n- Big notebook size, replaced cufflinks with plotly and ipython, #39\n### Changed\n- *Fields Coverage* now is printed as a bar plot, #9\n- *Fields Counts* renamed to *Coverage Difference* and results in 2 bar plots, #9, #51:\n   * *Coverage from job stats fields counts* which reflects coverage for each field for both jobs\n   * *Coverage difference more than 5%* which prints >5% difference between the coverages (was ratio difference before)\n- *Compare Scraped Categories* renamed to *Category Coverage Difference* and results in 2 bar plots for each category, #52:\n   * *Coverage for `field`* which reflects value counts (categories) coverage for the field for both jobs\n   * *Coverage difference more than 10% for `field`* which shows >10% differences between the category coverages\n- *Boolean Fields* plots *Coverage for boolean fields* graph which reflects normalized value counts for boolean fields for both jobs, #53\n### Removed\n- `cufflinks` dependency\n- Deprecated `category_field` tag\n\n\n## [2019.03.25]\n### Added\n- CHANGES.md\n- new `arche.rules.duplicates.find_by()` to find duplicates by chosen columns\n```\nimport arche\nfrom arche.readers.items import JobItems\ndf = JobItems(0, \"235801/1/15\").df\narche.rules.duplicates.find_by(df, [\"title\", \"category\"]).show()\n```\n- `basic_json_schema().json()` prints a schema in JSON format\n- `Result.show()` to print a rule result, e.g.\n```\nfrom arche.rules.garbage_symbols import garbage_symbols\nfrom arche.readers.items import JobItems\nitems = JobItems(0, \"235801/1/15\")\ngarbage_symbols(items).show()\n```\n- notebooks to documentation\n### Changed\n- Tags rule returns unused tags, #2\n- `basic_json_schema()` prints a schema as a python dict\n### Deprecated\n- `Arche().basic_json_schema()` deprecated in favor of `arche.basic_json_schema()`\n### Removed\n### Fixed\n- `Arche().basic_json_schema()` not using `items_numbers` argument\n\n\n## 2019.03.18\n- Last release without CHANGES updates", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/scrapinghub/arche", "keywords": "scrapinghub,scraping,data,data-visualization,data-analysis,pandas", "license": "MIT", "maintainer": "Scrapinghub, manycoding", "maintainer_email": "info@scrapinghub.com", "name": "arche", "package_url": "https://pypi.org/project/arche/", "platform": "", "project_url": "https://pypi.org/project/arche/", "project_urls": {"Homepage": "http://github.com/scrapinghub/arche"}, "release_url": "https://pypi.org/project/arche/0.3.6/", "requires_dist": null, "requires_python": "", "summary": "Analyze Scrapy Cloud data", "version": "0.3.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Arche</h1>\n<p><a href=\"https://pypi.org/project/arche\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/be88ec40b4b52a952a39e83eb21245cd7ae90939/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61726368652e737667\"></a>\n<a href=\"https://pypi.org/project/arche\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/56de26ce2f284ba89a5c88ee1a6a566da479e9a9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61726368652e737667\"></a>\n<img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f907d141cc549b5d8e96060aca0938269a832a78/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7363726170696e676875622f61726368652e737667\">\n<a href=\"https://travis-ci.com/scrapinghub/arche\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bc4c18155875fa7a1b78b69c7e0ff704759e00f/68747470733a2f2f7472617669732d63692e636f6d2f7363726170696e676875622f61726368652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/scrapinghub/arche\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd4001aff163a5f81778c27e96b13e80e6a74cf9/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f7363726170696e676875622f61726368652e737667\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://github.com/scrapinghub/arche/commits/master\" rel=\"nofollow\"><img alt=\"GitHub commit activity\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/199ed679a925ab92616dabf933933454f50fbb50/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f7363726170696e676875622f61726368652e737667\"></a></p>\n<pre><code>pip install arche\n</code></pre>\n<p>Arche (pronounced <em>Arkey</em>) helps to verify scraped data using set of defined rules, for example:</p>\n<ul>\n<li>Validation with <a href=\"https://json-schema.org/\" rel=\"nofollow\">JSON schema</a></li>\n<li>Coverage (items, fields, categorical data, including booleans and enums)</li>\n<li>Duplicates</li>\n<li>Garbage symbols</li>\n<li>Comparison of two jobs</li>\n</ul>\n<p><em>We use it in Scrapinghub, among the other tools, to ensure quality of scraped data</em></p>\n<h2>Installation</h2>\n<p>Arche requires <a href=\"https://jupyter.org/install\" rel=\"nofollow\">Jupyter</a> environment, supporting both <a href=\"https://github.com/jupyterlab/jupyterlab#installation\" rel=\"nofollow\">JupyterLab</a> and <a href=\"https://github.com/jupyter/notebook\" rel=\"nofollow\">Notebook</a> UI</p>\n<p>For JupyterLab, you will need to properly install <a href=\"https://github.com/plotly/plotly.py#jupyterlab-support-python-35\" rel=\"nofollow\">plotly extensions</a></p>\n<p>Then just <code>pip install arche</code></p>\n<h2>Why</h2>\n<p>To check the quality of scraped data continuously. For example, if you scraped a website, a typical approach would be to validate the data with Arche. You can also create a schema and then set up <a href=\"https://spidermon.readthedocs.io/en/latest/item-validation.html#with-json-schema\" rel=\"nofollow\">Spidermon</a></p>\n<h2>Developer Setup</h2>\n<pre><code>pipenv install --dev\npipenv shell\ntox\n</code></pre>\n<h2>Contribution</h2>\n<p>Any contributions are welcome! See <a href=\"https://github.com/scrapinghub/arche/issues\" rel=\"nofollow\">https://github.com/scrapinghub/arche/issues</a> if you want to take on something or suggest an improvement/report a bug.</p>\n<h1>Changes</h1>\n<p>Most recent releases are shown at the top. Each release shows:</p>\n<ul>\n<li><strong>Added</strong>: New classes, methods, functions, etc</li>\n<li><strong>Changed</strong>: Additional parameters, changes to inputs or outputs, etc</li>\n<li><strong>Fixed</strong>: Bug fixes that don't change documented behaviour</li>\n</ul>\n<p>Note that the top-most release is changes in the unreleased master branch on Github. Parentheses after an item show the name or github id of the contributor of that change.</p>\n<p><a href=\"https://keepachangelog.com/en/1.0.0/\" rel=\"nofollow\">Keep a Changelog</a>, <a href=\"https://semver.org/spec/v2.0.0.html\" rel=\"nofollow\">Semantic Versioning</a>.</p>\n<h2>[0.3.6] (2019-07-12)</h2>\n<h3>Added</h3>\n<ul>\n<li><strong>Categories</strong> rule with a plot showing unique values and count per field. By default, <code>report_all()</code> only includes fields which have less or equal to 10 unique values. See <a href=\"https://arche.readthedocs.io/en/latest/nbs/Rules.html#Category-fields\" rel=\"nofollow\">https://arche.readthedocs.io/en/latest/nbs/Rules.html#Category-fields</a>, #100</li>\n<li>Category documentation</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li><code>Arche.report_all()</code> does not shorten report by default, added <code>short</code> parameter.</li>\n<li>Data is consistent with Dash and Spidermon: <code>_type, _key</code> fields are dropped from dataframe, raw data, basic schema, #104, #106</li>\n<li><code>df.index</code> now stores <code>_key</code> instead</li>\n<li><code>basic_json_schema()</code> works with <code>deleted</code> jobs</li>\n<li><code>start</code> is supported for Collections, #112</li>\n<li><code>enum</code> is counted as a <code>category</code> tag, #18</li>\n<li><code>Garbage Symbols</code> searches in str representation of nested fields instead of expanded df, #130</li>\n<li>Show real coverage difference (negative\\positive) instead of absolute, #114</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li><code>Arche.glance()</code>, #88</li>\n<li>Item links in Schema validation errors, #89</li>\n<li>Empty NAN bars on category graphs, #93</li>\n<li><code>data_quality_report()</code>, #95</li>\n<li>Wrong number of Collection Items if it contains item 0, #112</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li><strong>Responses Per Item Ratio</strong> rule</li>\n<li>Deprecated <code>expand</code> parameter and removed <code>flat_df</code>, since <code>Garbage Rule</code> deal with nested data itself, #133</li>\n</ul>\n<h2>[0.3.5] (2019-05-14)</h2>\n<h3>Added</h3>\n<ul>\n<li><code>Arche()</code> supports any iterables with item dicts, fixing jsonschema consistency, #83</li>\n<li><code>Items.from_array</code> to read raw data from iterables, #83</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>If reading from pandas df directly, store raw data in numpy array. See gotchas <a href=\"http://pandas.pydata.org/pandas-docs/stable/user_guide/gotchas.html#support-for-integer-na\" rel=\"nofollow\">http://pandas.pydata.org/pandas-docs/stable/user_guide/gotchas.html#support-for-integer-na</a></li>\n</ul>\n<h3>Fixed</h3>\n<h3>Removed</h3>\n<h2>[0.3.4] (2019-05-06)</h2>\n<h3>Fixed</h3>\n<ul>\n<li>basic_json_schema() fails with long <code>1.0</code> types, #80</li>\n</ul>\n<h2>[0.3.3] (2019-05-03)</h2>\n<h3>Added</h3>\n<ul>\n<li>Accept dataframes as source or target, #69</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>data_quality_report plots the same \"Fields Coverage\" instead of green \"Scraped Fields Coverage\"</li>\n<li>Plot theme changed from ggplot2 to seaborn, #62</li>\n<li>Same target and source raise an error, was a warning before</li>\n<li>Passed rules marked with green PASSED.</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>Online documentation now renders graphs <a href=\"https://arche.readthedocs.io/en/latest/\" rel=\"nofollow\">https://arche.readthedocs.io/en/latest/</a>, #41</li>\n<li>Error colours are back in <code>report_all()</code>.</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li>Deprecated <code>Arche.basic_json_schema()</code>, use <code>basic_json_schema()</code></li>\n<li>Removed Quickstart.md as redundant - documentation lives in notebooks</li>\n</ul>\n<h2>[0.3.2] (2019-04-18)</h2>\n<h3>Added</h3>\n<ul>\n<li>Allow reading private raw schemas directly from bitbucket, #58</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Progress widgets are removed before printing graphs</li>\n<li>New plotly v4 API</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>Failing <code>Compare Prices For Same Urls</code> when url is <code>nan</code>, #67</li>\n<li>Empty graphs in Jupyter Notebook, #63</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li>Scraped Items History graphs</li>\n</ul>\n<h2>[0.3.1] (2019-04-12)</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Empty graphs due to lack of plotlyjs, #61</li>\n</ul>\n<h2>[0.3.0] (2019-04-12)</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Big notebook size, replaced cufflinks with plotly and ipython, #39</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li><em>Fields Coverage</em> now is printed as a bar plot, #9</li>\n<li><em>Fields Counts</em> renamed to <em>Coverage Difference</em> and results in 2 bar plots, #9, #51:\n<ul>\n<li><em>Coverage from job stats fields counts</em> which reflects coverage for each field for both jobs</li>\n<li><em>Coverage difference more than 5%</em> which prints &gt;5% difference between the coverages (was ratio difference before)</li>\n</ul>\n</li>\n<li><em>Compare Scraped Categories</em> renamed to <em>Category Coverage Difference</em> and results in 2 bar plots for each category, #52:\n<ul>\n<li><em>Coverage for <code>field</code></em> which reflects value counts (categories) coverage for the field for both jobs</li>\n<li><em>Coverage difference more than 10% for <code>field</code></em> which shows &gt;10% differences between the category coverages</li>\n</ul>\n</li>\n<li><em>Boolean Fields</em> plots <em>Coverage for boolean fields</em> graph which reflects normalized value counts for boolean fields for both jobs, #53</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li><code>cufflinks</code> dependency</li>\n<li>Deprecated <code>category_field</code> tag</li>\n</ul>\n<h2>[2019.03.25]</h2>\n<h3>Added</h3>\n<ul>\n<li>CHANGES.md</li>\n<li>new <code>arche.rules.duplicates.find_by()</code> to find duplicates by chosen columns</li>\n</ul>\n<pre><code>import arche\nfrom arche.readers.items import JobItems\ndf = JobItems(0, \"235801/1/15\").df\narche.rules.duplicates.find_by(df, [\"title\", \"category\"]).show()\n</code></pre>\n<ul>\n<li><code>basic_json_schema().json()</code> prints a schema in JSON format</li>\n<li><code>Result.show()</code> to print a rule result, e.g.</li>\n</ul>\n<pre><code>from arche.rules.garbage_symbols import garbage_symbols\nfrom arche.readers.items import JobItems\nitems = JobItems(0, \"235801/1/15\")\ngarbage_symbols(items).show()\n</code></pre>\n<ul>\n<li>notebooks to documentation</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Tags rule returns unused tags, #2</li>\n<li><code>basic_json_schema()</code> prints a schema as a python dict</li>\n</ul>\n<h3>Deprecated</h3>\n<ul>\n<li><code>Arche().basic_json_schema()</code> deprecated in favor of <code>arche.basic_json_schema()</code></li>\n</ul>\n<h3>Removed</h3>\n<h3>Fixed</h3>\n<ul>\n<li><code>Arche().basic_json_schema()</code> not using <code>items_numbers</code> argument</li>\n</ul>\n<h2>2019.03.18</h2>\n<ul>\n<li>Last release without CHANGES updates</li>\n</ul>\n\n          </div>"}, "last_serial": 5524468, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "4153fc7a8529482c0d5b991af6563f7d", "sha256": "0295f7752d0f8c7805103e5470ad2c2e51231e38f3be0fbb8996a3843bec8196"}, "downloads": -1, "filename": "arche-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4153fc7a8529482c0d5b991af6563f7d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 26531, "upload_time": "2019-04-12T23:49:53", "upload_time_iso_8601": "2019-04-12T23:49:53.352087Z", "url": "https://files.pythonhosted.org/packages/2d/a9/2350b81db2e7b040572835e035eaf3942abdcef35b835e6c7a0ac5627c1e/arche-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "967fbdc46adb60f9ff85d80d0f5fee9c", "sha256": "5104fc33d03a5786ede58c4f086d390b54cac285ee0bf4ff16ad0d61a95180b9"}, "downloads": -1, "filename": "arche-0.3.1.tar.gz", "has_sig": false, "md5_digest": "967fbdc46adb60f9ff85d80d0f5fee9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 26575, "upload_time": "2019-04-13T00:57:03", "upload_time_iso_8601": "2019-04-13T00:57:03.953349Z", "url": "https://files.pythonhosted.org/packages/7d/ba/74e06088b53796039d5821f705974becc081f07091ca76e560b21cb19a76/arche-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "2a6148ded293af8460d875ea030febfc", "sha256": "a58eee20e960ee77a19342d975e1cb12b24156935b5903c6f6c4f4f5f23b1e78"}, "downloads": -1, "filename": "arche-0.3.2.tar.gz", "has_sig": false, "md5_digest": "2a6148ded293af8460d875ea030febfc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 442651, "upload_time": "2019-04-18T20:45:57", "upload_time_iso_8601": "2019-04-18T20:45:57.829757Z", "url": "https://files.pythonhosted.org/packages/c6/2b/ffe6ffe40d8bb4796c677c1d399ae91e02e5eb6b849f7212e7892e7572a6/arche-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "965e7e970685c7eab83d5f9df430f3f5", "sha256": "4bad14c3abc187a3415418d5e9ab35ca6ba60915a0214e3bda445a5c3ab081a3"}, "downloads": -1, "filename": "arche-0.3.3.tar.gz", "has_sig": false, "md5_digest": "965e7e970685c7eab83d5f9df430f3f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1213686, "upload_time": "2019-05-03T23:10:56", "upload_time_iso_8601": "2019-05-03T23:10:56.366665Z", "url": "https://files.pythonhosted.org/packages/99/46/83c47352b5a3069c213ad6cc6537dee56bc67a6b41c5239f3782e59f0d79/arche-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "470e71a8e055ea3ed09fa610470c8e7d", "sha256": "54bf46b03943e5136fa54955e5e33f78c6b60652d2cbd636f5b4d98895d63ca8"}, "downloads": -1, "filename": "arche-0.3.4.tar.gz", "has_sig": false, "md5_digest": "470e71a8e055ea3ed09fa610470c8e7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1213759, "upload_time": "2019-05-06T18:35:30", "upload_time_iso_8601": "2019-05-06T18:35:30.847671Z", "url": "https://files.pythonhosted.org/packages/29/33/4267857e162b3279a2264017f09650802f3b39111c369ff05ef7d3080c44/arche-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "0a7e47f69ffacc12d4aa292a08183793", "sha256": "b948983b97a7ebdb93ca4b2764d9f195b21e36a97ade9c59e901366f6df560a3"}, "downloads": -1, "filename": "arche-0.3.5.tar.gz", "has_sig": false, "md5_digest": "0a7e47f69ffacc12d4aa292a08183793", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1693489, "upload_time": "2019-05-14T19:24:35", "upload_time_iso_8601": "2019-05-14T19:24:35.220034Z", "url": "https://files.pythonhosted.org/packages/46/b8/c85d1500a846434525325953d081490a5f51800df523211a973e25755553/arche-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "47c8a8f3dcc0879a43bc6a2868c48c86", "sha256": "f19aca0d572e4cb25da064adbec898a27924b80c36205d5c50717ae83a986e4d"}, "downloads": -1, "filename": "arche-0.3.6.tar.gz", "has_sig": false, "md5_digest": "47c8a8f3dcc0879a43bc6a2868c48c86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2691897, "upload_time": "2019-07-12T18:27:05", "upload_time_iso_8601": "2019-07-12T18:27:05.306397Z", "url": "https://files.pythonhosted.org/packages/3c/20/ba1b60a885cd417d18ec00c4a86246cb6ffbf71745332db0b65be5d8f64f/arche-0.3.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "47c8a8f3dcc0879a43bc6a2868c48c86", "sha256": "f19aca0d572e4cb25da064adbec898a27924b80c36205d5c50717ae83a986e4d"}, "downloads": -1, "filename": "arche-0.3.6.tar.gz", "has_sig": false, "md5_digest": "47c8a8f3dcc0879a43bc6a2868c48c86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2691897, "upload_time": "2019-07-12T18:27:05", "upload_time_iso_8601": "2019-07-12T18:27:05.306397Z", "url": "https://files.pythonhosted.org/packages/3c/20/ba1b60a885cd417d18ec00c4a86246cb6ffbf71745332db0b65be5d8f64f/arche-0.3.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:25 2020"}