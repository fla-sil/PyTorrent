{"info": {"author": "CERN", "author_email": "admin@inspirehep.net", "bugtrack_url": null, "classifiers": [], "description": "jsonschema2rst\n++++++++++++++\n\nThis project aims to parse *JSON schemas* or *YAML* schemas in order to create\nRestructuredText documentation.\nUsing a tool like Sphinx, it is possible to create high readable documentation\nfrom the files generated, which are RST formatted text.\n\nThe outcome RST can be customized by defining a blacklist in csv and using a\ncustom CSS file. that will inherit the Sphinx one. For the latter, an\nexample is provided.\n\n\nUsage\n-----\nTo create **RST** files from **JSON schemas** (or **YAML**) run the command:\n\n.. code-block:: bash\n\n    jsonschema2rst input_folder output_folder\n\nThis command will take all JSON or YAML files in this path, sub-folders\nincluded, and wll create a new directory - removing it if already exists -\nwhere all parsed RST file will be placed.\n\n\nExample\n-------\nLet's assume you run the following command:\n\n.. code-block:: bash\n\n    jsonschema2rst json_folder rst_output_folder\n\nand also let's assume the folder ``json_folder`` contains the file\n``url.json``, which contains the following schema:\n\n\n.. code-block::\n\n    {\n        \"title\": \"URL of related document\",\n        \"properties\": {\n            \"description\": {\n                \"type\": \"string\"\n            },\n            \"value\": {\n                \"format\": \"url\",\n                \"type\": \"string\"\n            }\n        },\n        \"type\": \"object\"\n    }\n\n\nAs result, *jsonschema2rst* will create a file called ``url.rst`` in\nthe ``rst_output_folder`` that will contain the following rst code:\n\n.. code-block:: bash\n\n    .. contents:: Table of Contents\n    .. section-numbering::\n    .. container:: section-title\n     url.json\n\n    .. container:: title\n\n     URL of related document\n\n    **type** : ``object``\n\n    **Properties:** description_, value_\n\n\n    .. description:\n\n    description\n    +++++++++++\n\n    **type** : ``string``\n\n\n    .. value:\n\n    value\n    +++++\n\n\n    **type** : ``string``\n\n    **format** : ``url``\n\n\n\nExtra\n-----\nIn case you want to generate HTML documentation using a tool like *Sphinx*, we\nsuggest you to try the `custom.css` file in the `contribution` folder to make\nyour schemas documentation looking better. What you need is just replace the \ndefault css used by Sphinx in the *conf.py* file with the one proposed, then \nenjoy!", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/inspirehep/jsonschema2rst", "keywords": "jsonschema yaml rst parser documentation", "license": "GPLv2", "maintainer": "", "maintainer_email": "", "name": "jsonschema2rst", "package_url": "https://pypi.org/project/jsonschema2rst/", "platform": "", "project_url": "https://pypi.org/project/jsonschema2rst/", "project_urls": {"Homepage": "https://github.com/inspirehep/jsonschema2rst"}, "release_url": "https://pypi.org/project/jsonschema2rst/0.0.9/", "requires_dist": null, "requires_python": "", "summary": "Parser for yaml/json schemas to rst", "version": "0.0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This project aims to parse <em>JSON schemas</em> or <em>YAML</em> schemas in order to create\nRestructuredText documentation.\nUsing a tool like Sphinx, it is possible to create high readable documentation\nfrom the files generated, which are RST formatted text.</p>\n<p>The outcome RST can be customized by defining a blacklist in csv and using a\ncustom CSS file. that will inherit the Sphinx one. For the latter, an\nexample is provided.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To create <strong>RST</strong> files from <strong>JSON schemas</strong> (or <strong>YAML</strong>) run the command:</p>\n<pre>jsonschema2rst input_folder output_folder\n</pre>\n<p>This command will take all JSON or YAML files in this path, sub-folders\nincluded, and wll create a new directory - removing it if already exists -\nwhere all parsed RST file will be placed.</p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>Let\u2019s assume you run the following command:</p>\n<pre>jsonschema2rst json_folder rst_output_folder\n</pre>\n<p>and also let\u2019s assume the folder <tt>json_folder</tt> contains the file\n<tt>url.json</tt>, which contains the following schema:</p>\n<pre>{\n    \"title\": \"URL of related document\",\n    \"properties\": {\n        \"description\": {\n            \"type\": \"string\"\n        },\n        \"value\": {\n            \"format\": \"url\",\n            \"type\": \"string\"\n        }\n    },\n    \"type\": \"object\"\n}\n</pre>\n<p>As result, <em>jsonschema2rst</em> will create a file called <tt>url.rst</tt> in\nthe <tt>rst_output_folder</tt> that will contain the following rst code:</p>\n<pre>.. contents:: Table of Contents\n.. section-numbering::\n.. container:: section-title\n url.json\n\n.. container:: title\n\n URL of related document\n\n**type** : <span class=\"sb\">``</span>object<span class=\"sb\">``</span>\n\n**Properties:** description_, value_\n\n\n.. description:\n\ndescription\n+++++++++++\n\n**type** : <span class=\"sb\">``</span>string<span class=\"sb\">``</span>\n\n\n.. value:\n\nvalue\n+++++\n\n\n**type** : <span class=\"sb\">``</span>string<span class=\"sb\">``</span>\n\n**format** : <span class=\"sb\">``</span>url<span class=\"sb\">``</span>\n</pre>\n</div>\n<div id=\"extra\">\n<h2>Extra</h2>\n<p>In case you want to generate HTML documentation using a tool like <em>Sphinx</em>, we\nsuggest you to try the <cite>custom.css</cite> file in the <cite>contribution</cite> folder to make\nyour schemas documentation looking better. What you need is just replace the\ndefault css used by Sphinx in the <em>conf.py</em> file with the one proposed, then\nenjoy!</p>\n</div>\n\n          </div>"}, "last_serial": 3895828, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "9cfe11ec12b936665a8ad7f380a272f1", "sha256": "0b45c2188e4594c3c5b42e3af1f919e5ac09f379862874e508b88c4b41217754"}, "downloads": -1, "filename": "jsonschema2rst-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9cfe11ec12b936665a8ad7f380a272f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13881, "upload_time": "2017-06-22T07:31:45", "upload_time_iso_8601": "2017-06-22T07:31:45.513276Z", "url": "https://files.pythonhosted.org/packages/2d/2d/c9f083c9c90c39ba78e94867bf002ea033463cd138242f08ebe52b051efd/jsonschema2rst-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "57d55ea7d53f70c395db8f34837fd9bb", "sha256": "92ad9da71fb53641290cee7493898522c8ca232e82417d12009be6b9bcfe41f5"}, "downloads": -1, "filename": "jsonschema2rst-0.0.7.tar.gz", "has_sig": false, "md5_digest": "57d55ea7d53f70c395db8f34837fd9bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13778, "upload_time": "2017-06-22T11:01:30", "upload_time_iso_8601": "2017-06-22T11:01:30.592536Z", "url": "https://files.pythonhosted.org/packages/66/af/c0143c02e412e99c4940327a62c1e437db72bbdef7783e4cc0c48916af50/jsonschema2rst-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "dc17673476efe3cf9f183bc234a71adf", "sha256": "58de9acb98d9317d6598eecc0a3add3f2eed2bccb3673ac86b72e53a85aedc20"}, "downloads": -1, "filename": "jsonschema2rst-0.0.8.tar.gz", "has_sig": false, "md5_digest": "dc17673476efe3cf9f183bc234a71adf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13861, "upload_time": "2017-11-15T15:25:13", "upload_time_iso_8601": "2017-11-15T15:25:13.101180Z", "url": "https://files.pythonhosted.org/packages/1f/83/8eeef549f3acdea80524e0649c05abab440438d36b70a5a5f4b78115aedc/jsonschema2rst-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "326a3be2db053ab4ef1cbdaf3aba027b", "sha256": "74ef01479d75cc9e1efd77412e89f4d76fb2d40628cf27f8039f04c41d162f75"}, "downloads": -1, "filename": "jsonschema2rst-0.0.9.tar.gz", "has_sig": false, "md5_digest": "326a3be2db053ab4ef1cbdaf3aba027b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13959, "upload_time": "2018-05-24T16:04:01", "upload_time_iso_8601": "2018-05-24T16:04:01.661436Z", "url": "https://files.pythonhosted.org/packages/b4/1b/4f72167fa0a5c190cf061b86b4fb3282964f0c877b97ea9ff947f0a2fd51/jsonschema2rst-0.0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "326a3be2db053ab4ef1cbdaf3aba027b", "sha256": "74ef01479d75cc9e1efd77412e89f4d76fb2d40628cf27f8039f04c41d162f75"}, "downloads": -1, "filename": "jsonschema2rst-0.0.9.tar.gz", "has_sig": false, "md5_digest": "326a3be2db053ab4ef1cbdaf3aba027b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13959, "upload_time": "2018-05-24T16:04:01", "upload_time_iso_8601": "2018-05-24T16:04:01.661436Z", "url": "https://files.pythonhosted.org/packages/b4/1b/4f72167fa0a5c190cf061b86b4fb3282964f0c877b97ea9ff947f0a2fd51/jsonschema2rst-0.0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:38 2020"}