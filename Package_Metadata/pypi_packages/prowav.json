{"info": {"author": "Soh", "author_email": "wildgeece96@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.6"], "description": "# ProWav  \nYou can use this for preprocessing wave files.  \n\n## Usage\nPlease install prowav by using pip.\n```\npip install prowav  \n```\n\n\n### Usage  \n\nProWav can calculate mfcc spectrogram and pad for batch execution  \n```python  \nfrom prowav import ProWav  \n\nprowav = ProWav([\"path/to/wave/data_1.wav\", \"path/to/wave/data_2.wav\"])  \n\nframe_width = 20 # the length of a frame (ms)\nstride_width = 20 # the frame interval (ms)\nn_mfcc = 26 # the number of features by mfcc features (If you want to use mfcc preprocessing, you should specify this value)  \nmode = 'MFCC'\nwindow_func = 'hamming' # the name for window function\ndata = prowav.prepro(frame_width=frame_width,stride_width=stride_width,mode=mode,\n                                       n_mfcc=n_mfcc, window_func=window_func)\n# >> (num_files, num_frames, n_mfcc)    \n```\nIf you want use fft spectrogram, please specify the mode, \"fft\".  \n```python\nprowav = ProWav([\"path/to/wave/data_1.wav\", \"path/to/wave/data_2.wav\"])\nframe_width = 20\nstride_width = 20\nmode='fft'\nwindow_func='hamming'  \ndata = prowav.prepro(frame_width=20,stride_width=20,\\\n      mode=mode, window_func=window_func)  \n# >> (num_files, num_frames, num_features)\n```\nYou can also use mel-spectrogram. Specify the mode, \"mel_spec\"\n```python\nprowav = ProWav([\"path/to/wave/data_1.wav\", \"path/to/wave/data_2.wav\"])\nframe_width = 50 \nstride_width = 50 \nmode='MFCC'\nn_mfcc = 26\nwindow_func='hamming'\ndata = prowav.prepro(frame_widh=frame_width, stride_width=stride_width,\n                  mode=mode, window_func=window_func, n_mfcc=n_mfcc)\n```\n\nYou can use zero-padding or repeat-padding.\n```python \nprowav = ProWav([\"path/to/wave/data_1.wav\", \"path/to/wave/data_2.wav\"])\nframe_width = 50 \nstride_width = 50 \nmode='mel_spec'\nn_mels = 50\nwindow_func='hamming'\ndata_zero = prowav.prepro(frame_widh=frame_width, stride_width=stride_width,\n                  mode=mode, n_mels=n_mels,window_func=window_func, zero_padding=True) # zero padding \ndata_repeat = prowav.prepro(frame_widh=frame_width, stride_width=stride_width,\n                  mode=mode, ne_mels=n_mels, window_func=window_func, repeat_padding=True) # repeat padding \n```\n\nJust loading wave data is possible.  \n\n```python \nprowav = ProWav([\"path/to/wave/data_1.wav\", \"path/to/wave/data_2.wav\"]) \n\nprowav.load_wav() # loading wav file into this class.\n\nprowav.data # the list of ndarray. Raw data are listed.\n```\n\nYou can choose parallel option.\n\n```python \nprowav.load_wav(parallel=True)\n\nprowav.load_wav(parallel=True, verbose=5)\n```\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wildgeece96/prowav", "keywords": "wave mfcc fft", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "prowav", "package_url": "https://pypi.org/project/prowav/", "platform": "", "project_url": "https://pypi.org/project/prowav/", "project_urls": {"Homepage": "https://github.com/wildgeece96/prowav"}, "release_url": "https://pypi.org/project/prowav/0.4/", "requires_dist": ["scipy (>=1.3.0)", "numpy (>=1.16.1)", "librosa (>=0.6.3)", "wavio (>=0.0.4)", "joblib"], "requires_python": "", "summary": "The package for preprocessing wave data", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ProWav</h1>\n<p>You can use this for preprocessing wave files.</p>\n<h2>Usage</h2>\n<p>Please install prowav by using pip.</p>\n<pre><code>pip install prowav  \n</code></pre>\n<h3>Usage</h3>\n<p>ProWav can calculate mfcc spectrogram and pad for batch execution</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">prowav</span> <span class=\"kn\">import</span> <span class=\"n\">ProWav</span>  \n\n<span class=\"n\">prowav</span> <span class=\"o\">=</span> <span class=\"n\">ProWav</span><span class=\"p\">([</span><span class=\"s2\">\"path/to/wave/data_1.wav\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/wave/data_2.wav\"</span><span class=\"p\">])</span>  \n\n<span class=\"n\">frame_width</span> <span class=\"o\">=</span> <span class=\"mi\">20</span> <span class=\"c1\"># the length of a frame (ms)</span>\n<span class=\"n\">stride_width</span> <span class=\"o\">=</span> <span class=\"mi\">20</span> <span class=\"c1\"># the frame interval (ms)</span>\n<span class=\"n\">n_mfcc</span> <span class=\"o\">=</span> <span class=\"mi\">26</span> <span class=\"c1\"># the number of features by mfcc features (If you want to use mfcc preprocessing, you should specify this value)  </span>\n<span class=\"n\">mode</span> <span class=\"o\">=</span> <span class=\"s1\">'MFCC'</span>\n<span class=\"n\">window_func</span> <span class=\"o\">=</span> <span class=\"s1\">'hamming'</span> <span class=\"c1\"># the name for window function</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">prepro</span><span class=\"p\">(</span><span class=\"n\">frame_width</span><span class=\"o\">=</span><span class=\"n\">frame_width</span><span class=\"p\">,</span><span class=\"n\">stride_width</span><span class=\"o\">=</span><span class=\"n\">stride_width</span><span class=\"p\">,</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">mode</span><span class=\"p\">,</span>\n                                       <span class=\"n\">n_mfcc</span><span class=\"o\">=</span><span class=\"n\">n_mfcc</span><span class=\"p\">,</span> <span class=\"n\">window_func</span><span class=\"o\">=</span><span class=\"n\">window_func</span><span class=\"p\">)</span>\n<span class=\"c1\"># &gt;&gt; (num_files, num_frames, n_mfcc)    </span>\n</pre>\n<p>If you want use fft spectrogram, please specify the mode, \"fft\".</p>\n<pre><span class=\"n\">prowav</span> <span class=\"o\">=</span> <span class=\"n\">ProWav</span><span class=\"p\">([</span><span class=\"s2\">\"path/to/wave/data_1.wav\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/wave/data_2.wav\"</span><span class=\"p\">])</span>\n<span class=\"n\">frame_width</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n<span class=\"n\">stride_width</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'fft'</span>\n<span class=\"n\">window_func</span><span class=\"o\">=</span><span class=\"s1\">'hamming'</span>  \n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">prepro</span><span class=\"p\">(</span><span class=\"n\">frame_width</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span><span class=\"n\">stride_width</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span>\\\n      <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">mode</span><span class=\"p\">,</span> <span class=\"n\">window_func</span><span class=\"o\">=</span><span class=\"n\">window_func</span><span class=\"p\">)</span>  \n<span class=\"c1\"># &gt;&gt; (num_files, num_frames, num_features)</span>\n</pre>\n<p>You can also use mel-spectrogram. Specify the mode, \"mel_spec\"</p>\n<pre><span class=\"n\">prowav</span> <span class=\"o\">=</span> <span class=\"n\">ProWav</span><span class=\"p\">([</span><span class=\"s2\">\"path/to/wave/data_1.wav\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/wave/data_2.wav\"</span><span class=\"p\">])</span>\n<span class=\"n\">frame_width</span> <span class=\"o\">=</span> <span class=\"mi\">50</span> \n<span class=\"n\">stride_width</span> <span class=\"o\">=</span> <span class=\"mi\">50</span> \n<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'MFCC'</span>\n<span class=\"n\">n_mfcc</span> <span class=\"o\">=</span> <span class=\"mi\">26</span>\n<span class=\"n\">window_func</span><span class=\"o\">=</span><span class=\"s1\">'hamming'</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">prepro</span><span class=\"p\">(</span><span class=\"n\">frame_widh</span><span class=\"o\">=</span><span class=\"n\">frame_width</span><span class=\"p\">,</span> <span class=\"n\">stride_width</span><span class=\"o\">=</span><span class=\"n\">stride_width</span><span class=\"p\">,</span>\n                  <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">mode</span><span class=\"p\">,</span> <span class=\"n\">window_func</span><span class=\"o\">=</span><span class=\"n\">window_func</span><span class=\"p\">,</span> <span class=\"n\">n_mfcc</span><span class=\"o\">=</span><span class=\"n\">n_mfcc</span><span class=\"p\">)</span>\n</pre>\n<p>You can use zero-padding or repeat-padding.</p>\n<pre><span class=\"n\">prowav</span> <span class=\"o\">=</span> <span class=\"n\">ProWav</span><span class=\"p\">([</span><span class=\"s2\">\"path/to/wave/data_1.wav\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/wave/data_2.wav\"</span><span class=\"p\">])</span>\n<span class=\"n\">frame_width</span> <span class=\"o\">=</span> <span class=\"mi\">50</span> \n<span class=\"n\">stride_width</span> <span class=\"o\">=</span> <span class=\"mi\">50</span> \n<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'mel_spec'</span>\n<span class=\"n\">n_mels</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>\n<span class=\"n\">window_func</span><span class=\"o\">=</span><span class=\"s1\">'hamming'</span>\n<span class=\"n\">data_zero</span> <span class=\"o\">=</span> <span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">prepro</span><span class=\"p\">(</span><span class=\"n\">frame_widh</span><span class=\"o\">=</span><span class=\"n\">frame_width</span><span class=\"p\">,</span> <span class=\"n\">stride_width</span><span class=\"o\">=</span><span class=\"n\">stride_width</span><span class=\"p\">,</span>\n                  <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">mode</span><span class=\"p\">,</span> <span class=\"n\">n_mels</span><span class=\"o\">=</span><span class=\"n\">n_mels</span><span class=\"p\">,</span><span class=\"n\">window_func</span><span class=\"o\">=</span><span class=\"n\">window_func</span><span class=\"p\">,</span> <span class=\"n\">zero_padding</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># zero padding </span>\n<span class=\"n\">data_repeat</span> <span class=\"o\">=</span> <span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">prepro</span><span class=\"p\">(</span><span class=\"n\">frame_widh</span><span class=\"o\">=</span><span class=\"n\">frame_width</span><span class=\"p\">,</span> <span class=\"n\">stride_width</span><span class=\"o\">=</span><span class=\"n\">stride_width</span><span class=\"p\">,</span>\n                  <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">mode</span><span class=\"p\">,</span> <span class=\"n\">ne_mels</span><span class=\"o\">=</span><span class=\"n\">n_mels</span><span class=\"p\">,</span> <span class=\"n\">window_func</span><span class=\"o\">=</span><span class=\"n\">window_func</span><span class=\"p\">,</span> <span class=\"n\">repeat_padding</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"c1\"># repeat padding </span>\n</pre>\n<p>Just loading wave data is possible.</p>\n<pre><span class=\"n\">prowav</span> <span class=\"o\">=</span> <span class=\"n\">ProWav</span><span class=\"p\">([</span><span class=\"s2\">\"path/to/wave/data_1.wav\"</span><span class=\"p\">,</span> <span class=\"s2\">\"path/to/wave/data_2.wav\"</span><span class=\"p\">])</span> \n\n<span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">load_wav</span><span class=\"p\">()</span> <span class=\"c1\"># loading wav file into this class.</span>\n\n<span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"c1\"># the list of ndarray. Raw data are listed.</span>\n</pre>\n<p>You can choose parallel option.</p>\n<pre><span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">load_wav</span><span class=\"p\">(</span><span class=\"n\">parallel</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">prowav</span><span class=\"o\">.</span><span class=\"n\">load_wav</span><span class=\"p\">(</span><span class=\"n\">parallel</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5616598, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "31e9a0f805b01665282e9bb61105470a", "sha256": "da2f15556674cf7dedb8dfca4a43c885992f2be1ab90b37916c6e1e279764235"}, "downloads": -1, "filename": "prowav-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "31e9a0f805b01665282e9bb61105470a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4256, "upload_time": "2019-05-24T07:25:23", "upload_time_iso_8601": "2019-05-24T07:25:23.321424Z", "url": "https://files.pythonhosted.org/packages/1f/0e/324a5ba76fde48624a2ee4a300cc6e88a34286862ccf2eceb20731c57ca8/prowav-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "deb9dff85f121580cc647b21645effb6", "sha256": "069194c0fe7e6d6361ea4ba4d79505243968697191b6d99a9d5a2285ef418fe1"}, "downloads": -1, "filename": "prowav-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "deb9dff85f121580cc647b21645effb6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4305, "upload_time": "2019-05-24T07:51:20", "upload_time_iso_8601": "2019-05-24T07:51:20.842779Z", "url": "https://files.pythonhosted.org/packages/7d/da/98ee52989e552bbb03cf46b7df613a38ee048cf74ae2899b429f868196d2/prowav-0.2-py3-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "6da232bb544017ceea2758c6956f7ff5", "sha256": "f8871b11c0f24a46f74441ba405378dc6a5f88727295d3315b76237a8906641e"}, "downloads": -1, "filename": "prowav-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6da232bb544017ceea2758c6956f7ff5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5118, "upload_time": "2019-07-02T07:29:54", "upload_time_iso_8601": "2019-07-02T07:29:54.018847Z", "url": "https://files.pythonhosted.org/packages/31/f2/86689d08f4f2f6d316d2bd934de495c4b6de1fb22b7cb851cdb29ca8dcf4/prowav-0.3-py3-none-any.whl", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "e10cdd5e31cd43f6075dea4379da70b8", "sha256": "82cbbd6ec8e8a24abfbc7e0d8dff7c62b64cc60d3ec0ed9ce51e7c3a5bdfe705"}, "downloads": -1, "filename": "prowav-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e10cdd5e31cd43f6075dea4379da70b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7191, "upload_time": "2019-08-01T04:20:15", "upload_time_iso_8601": "2019-08-01T04:20:15.330279Z", "url": "https://files.pythonhosted.org/packages/ad/4a/7a9ee50b780662cb9b6c43422389a33e650b28b704311a5be21d9c505f01/prowav-0.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e10cdd5e31cd43f6075dea4379da70b8", "sha256": "82cbbd6ec8e8a24abfbc7e0d8dff7c62b64cc60d3ec0ed9ce51e7c3a5bdfe705"}, "downloads": -1, "filename": "prowav-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e10cdd5e31cd43f6075dea4379da70b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7191, "upload_time": "2019-08-01T04:20:15", "upload_time_iso_8601": "2019-08-01T04:20:15.330279Z", "url": "https://files.pythonhosted.org/packages/ad/4a/7a9ee50b780662cb9b6c43422389a33e650b28b704311a5be21d9c505f01/prowav-0.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:16:24 2020"}