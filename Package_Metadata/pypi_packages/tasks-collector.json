{"info": {"author": "Daniel Engvall", "author_email": "daniel@engvalls.eu", "bugtrack_url": null, "classifiers": ["Environment :: MacOS X", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Topic :: Office/Business"], "description": "# README Tasks Collector\n\n[![Build Status](https://travis-ci.com/engdan77/tasks_collector.svg?branch=master)](https://travis-ci.com/engdan77/tasks_collector)\n[![Documentation Status](https://readthedocs.org/projects/tasks-collector/badge/?version=latest)](https://tasks-collector.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/engdan77/tasks_collector/branch/master/graph/badge.svg)](https://codecov.io/gh//engdan77/tasks_collector)\n[![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/release/python-370/)\n\n## Read The Docs\nYou can find the documentation including generated API docs at https://tasks-collector.readthedocs.io/en/latest/\n\n## Background\nThe purpose with this project was to address the headache of collecting and organizing the tasks are/have worked with.\nThese tasks spread across different platforms such as Outlook, Jira, Trello and other platforms and felt like I had to structure and\n store these into a database and being able to create some charts based on this. \n\n## Requirements\nAt this moment this application has yet only been tested from MacOS High Sierra and above.\nSome parts of the application related to Outlook (trough AppleScript) and CopyQ only available to MacOS.\n\n## Introduction\nThis below is a brief run through how one could use this tool from your terminal and how you can use this package in your own Python applications.\n\n[![asciicast](https://asciinema.org/a/MJUyCoJXqPlvzqIxG8PX04f5x.svg)](https://asciinema.org/a/MJUyCoJXqPlvzqIxG8PX04f5x)\n\n## Installation\n```bash\nbash-4.4$ python -m venv venv\nbash-4.4$ source venv/bin/activate\n(venv) bash-4.4$ pip install tasks-collector\n```\n\n## Usage graphical interface\nThe default entry-point for this application is GUI (based on the great module Gooey) to simplify building a window presenting all options.\n\n<img src=\"https://github.com/engdan77/tasks_collector/raw/master/docs/tasks_collector_gui.png\" width=\"300\">\n\n## Usage command-line\nTo use command-line you need always supply the **--ignore-gooey** flag do disable GUI (graphical interface)\nIn general you only need to pass the sqlite database where you'd like to store it together with the flag depending which source to use\n```bash\n$ tasks_collector collect --help --ignore-gooey\nusage: tasks_collector collect [-h] [--outlook] [--jira JIRA]\n                               [--trello TRELLO]\n                               [--sqlite_database SQLITE_DATABASE]\n                               [--loglevel {INFO,DEBUG}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --outlook\n  --jira JIRA           username@jiraserver\n  --trello TRELLO       api_key:token:token_secret:my_name\n  --sqlite_database SQLITE_DATABASE\n                        name of sqlite to export/update to\n  --loglevel {INFO,DEBUG}\n```\n\n### Collect\n#### Outlook\nWhen passing --outlook argument you just need to make sure you've selected all Outlook-tasks including those completed.\nWhile using Outlook you can add the following naming convention of Outlooks \"Categories\" \n\n```\n(client1)\n(client2)\n(client3)\n...\n```\nfor giving you possibility to assign clients associated with task.\n\n```\n{project1}\n{project2}\n{project3}\n...\n```\n\nfor assigning the task specific project.\n\n#### Jira\nThe script will use the username@jiraserver supplied to detect all tasks that are assigned to you and collect their most recent details into the database.\nName of the board will become the representation of \"client\"\n\n#### Trello\nThe script will use an argument structured as 'api-key:token:token_secret:my_name' \nYou will get api-key, token and token secret from https://trello.com/app-key\nThe my_name is the name as your logged in user has, this is to be able to identify \"your\" tasks amongst others in boards.\nThe board name will be the representation of \"client\"\n\n##### Credentials\n\nCurrently use keyring to allow you to store credentials locally not being exposed.\nFirst time you run it will prompt you for password.\n\n#### Report\n\nInstall CopyQ according to https://hluk.github.io/CopyQ/ if you like to be able to export your report to your clipboard using the --copyq flag.\nBut you can also get the graph when using the --show\n\n```bash\n$ tasks_collector report --help --ignore-gooey\n2019-11-25 18:46:09.199 | INFO     | tasks_collector.__main__:main:79 - no gui\n2019-11-25 18:46:09.200 | DEBUG    | tasks_collector.tasksdb.api:get_default_db_path:48 - no local config directory, directory will be used /Users/edo/Library/Application Support/tasks_collector.tasksdb\nusage: tasks_collector report [-h] [--days number_of_days_in_past]\n                              [--sqlite_database SQLITE_DATABASE] [--copyq]\n                              [--show]\n                              [--default_client name of default client]\n                              [--loglevel {INFO,DEBUG}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --days number_of_days_in_past\n                        Number of days to cover in the report\n  --sqlite_database SQLITE_DATABASE\n                        name of sqlite to export/update to\n  --copyq               paste output as MIME to pastebin, good for sending by\n                        e-mail\n  --show                show gantt image\n  --default_client name of default client\n  --loglevel {INFO,DEBUG}\n```\n\nA sample of the output after pasting into e.g. a email for you manager might look like this\n\n<img src=\"https://github.com/engdan77/tasks_collector/raw/master/docs/tasks_collector_report_screenshot.png\" width=\"600\">\n\n\n#### Cleanup\nThis is useful if for example ownership changes of tickets in Jira end you'd like to close them in your report.\n```bash\n$ tasks_collector cleanup --help --ignore-gooey\nusage: tasks_collector cleanup [-h] [--before DAYS]\n                               [--sqlite_database SQLITE_DATABASE]\n                               [--loglevel {INFO,DEBUG}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --before DAYS         tickets before this number of days back to be closed\n  --sqlite_database SQLITE_DATABASE\n                        name of sqlite to export/update to\n  --loglevel {INFO,DEBUG}\n```\n\n## Create sphinx documentation\nTo create documentation in docs/build/html\n```bash\n$ cd docs\n$ sphinx-apidoc -o build/ ../tasks_collector\n$ make html\n```\n\n## Test the code with coverage\nThanks to tox this has been automated so all that you need to run \"tox\" from projects root directory e.g.\n````bash\n$ tox\n...\npy3.8.0 run-test: commands[0] | pytest --cov=tasks_collector tests/\n...........................                                                                                                                                                                                                            [100%]\n---------- coverage: platform darwin, python 3.8.0-final-0 -----------\nName                                             Stmts   Miss  Cover\n--------------------------------------------------------------------\ntasks_collector/__init__.py                          1      0   100%\ntasks_collector/reportgenerator/__init__.py          0      0   100%\ntasks_collector/reportgenerator/api.py             234    117    50%\ntasks_collector/tasksconverter/__init__.py           0      0   100%\ntasks_collector/tasksconverter/api.py              100      6    94%\ntasks_collector/tasksdb/__init__.py                  0      0   100%\ntasks_collector/tasksdb/api.py                      80      8    90%\ntasks_collector/tasksscraper/__init__.py             0      0   100%\ntasks_collector/tasksscraper/jirascraper.py         17      3    82%\ntasks_collector/tasksscraper/outlookscraper.py      43      1    98%\ntasks_collector/tasksscraper/trelloscraper.py       37     13    65%\n--------------------------------------------------------------------\nTOTAL                                              512    148    71%\n\n29 passed, 4 warnings in 17.32s\n______________________________________________________________________________________________________________________________________________________________________________ summary ______________________________________________________________________________________________________________________________________________________________________________\n  py3.8.0: commands succeeded\n  congratulations :)\n````\n\n## API documentation\n\nCould be found at https://tasks-collector.readthedocs.io\n\n## Troubleshooting\n\nI get the following message when I run tasks_collector in GUI (not --ignore-gooey) mode\n```\nThis program needs access to the screen. Please run with a\nFramework build of python, and only when you are logged in\non the main display of your Mac.\n```\nReasons for this happening on MacOS is that your built of Python3 does not include \"framework\" (e.g. when you installed through homebrew) rather than from https://www.python.org/downloads/mac-osx/\n\nOne way around this if you'd be using pyenv (one of my favourites) found at https://github.com/pyenv/pyenv is to install Python using the following\n```bash\nenv PYTHON_CONFIGURE_OPTS=\"--enable-framework=$(pyenv root)/versions/3.8.0 CC=clang --enable-unicode --with-threads\" pyenv install 3.8.0 -v\n```\n\n## Contact\n\nYou can easiest contact me by my email daniel@engvalls.eu or my linked-in profile https://www.linkedin.com/in/danielengvall/\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/engdan77/tasks_collector", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tasks-collector", "package_url": "https://pypi.org/project/tasks-collector/", "platform": "", "project_url": "https://pypi.org/project/tasks-collector/", "project_urls": {"Homepage": "https://github.com/engdan77/tasks_collector"}, "release_url": "https://pypi.org/project/tasks-collector/0.9.5/", "requires_dist": ["shiboken2 (==5.12.0)", "loguru (==0.3.2)", "jira (==2.0.0)", "dateparser (==0.7.0)", "peewee (==3.7.1)", "numpy (==1.17.4)", "keyring (==15.1.0)", "matplotlib (==3.0.0)", "PySimpleGUIQt (==0.22.0)", "PySide2 (==5.12.0)", "Gooey (==1.0.2)", "pandas (==0.23.4)", "dictdiffer (==0.7.1)", "appdirs (==1.4.3)", "scipy (==1.3.3)", "py-trello (==0.15.0)", "osascript (==2019.4.13)", "tox (==3.14.1)", "pytest-mock (==1.11.2)", "commonmark (==0.9.1)", "recommonmark (==0.6.0)", "sphinx (==2.2.1)", "sphinx-git (==11.0.0)", "sphinx-rtd-theme (==0.4.3)", "sphinxcontrib-applehelp (==1.0.1)", "sphinxcontrib-devhelp (==1.0.1)", "sphinxcontrib-htmlhelp (==1.0.2)", "sphinxcontrib-jsmath (==1.0.1)", "sphinxcontrib-qthelp (==1.0.2)", "sphinxcontrib-serializinghtml (==1.1.3)"], "requires_python": "", "summary": "A small project for collecting tasks", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>README Tasks Collector</h1>\n<p><a href=\"https://travis-ci.com/engdan77/tasks_collector\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f0486903480b2fb0a14539545ee27b761f18fad/68747470733a2f2f7472617669732d63692e636f6d2f656e6764616e37372f7461736b735f636f6c6c6563746f722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://tasks-collector.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54f25341318efceaa8fdde69b953a34d607ecef2/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7461736b732d636f6c6c6563746f722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh//engdan77/tasks_collector\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e4cab6378539e362db68ae831e536f93d2a9727c/68747470733a2f2f636f6465636f762e696f2f67682f656e6764616e37372f7461736b735f636f6c6c6563746f722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://www.python.org/downloads/release/python-370/\" rel=\"nofollow\"><img alt=\"Python 3.8\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f8a5f68d8d76185564998e2d4814ac79bc72a7c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e382d626c75652e737667\"></a></p>\n<h2>Read The Docs</h2>\n<p>You can find the documentation including generated API docs at <a href=\"https://tasks-collector.readthedocs.io/en/latest/\" rel=\"nofollow\">https://tasks-collector.readthedocs.io/en/latest/</a></p>\n<h2>Background</h2>\n<p>The purpose with this project was to address the headache of collecting and organizing the tasks are/have worked with.\nThese tasks spread across different platforms such as Outlook, Jira, Trello and other platforms and felt like I had to structure and\nstore these into a database and being able to create some charts based on this.</p>\n<h2>Requirements</h2>\n<p>At this moment this application has yet only been tested from MacOS High Sierra and above.\nSome parts of the application related to Outlook (trough AppleScript) and CopyQ only available to MacOS.</p>\n<h2>Introduction</h2>\n<p>This below is a brief run through how one could use this tool from your terminal and how you can use this package in your own Python applications.</p>\n<p><a href=\"https://asciinema.org/a/MJUyCoJXqPlvzqIxG8PX04f5x\" rel=\"nofollow\"><img alt=\"asciicast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8041b3b71b14b99f052e85d361a08ecbc3c2c3d/68747470733a2f2f61736369696e656d612e6f72672f612f4d4a5579436f4a5871506c767a7149784738505830346635782e737667\"></a></p>\n<h2>Installation</h2>\n<pre>bash-4.4$ python -m venv venv\nbash-4.4$ <span class=\"nb\">source</span> venv/bin/activate\n<span class=\"o\">(</span>venv<span class=\"o\">)</span> bash-4.4$ pip install tasks-collector\n</pre>\n<h2>Usage graphical interface</h2>\n<p>The default entry-point for this application is GUI (based on the great module Gooey) to simplify building a window presenting all options.</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8076013d507846ff73f12b44e11219e8ddeef098/68747470733a2f2f6769746875622e636f6d2f656e6764616e37372f7461736b735f636f6c6c6563746f722f7261772f6d61737465722f646f63732f7461736b735f636f6c6c6563746f725f6775692e706e67\" width=\"300\">\n<h2>Usage command-line</h2>\n<p>To use command-line you need always supply the <strong>--ignore-gooey</strong> flag do disable GUI (graphical interface)\nIn general you only need to pass the sqlite database where you'd like to store it together with the flag depending which source to use</p>\n<pre>$ tasks_collector collect --help --ignore-gooey\nusage: tasks_collector collect <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--outlook<span class=\"o\">]</span> <span class=\"o\">[</span>--jira JIRA<span class=\"o\">]</span>\n                               <span class=\"o\">[</span>--trello TRELLO<span class=\"o\">]</span>\n                               <span class=\"o\">[</span>--sqlite_database SQLITE_DATABASE<span class=\"o\">]</span>\n                               <span class=\"o\">[</span>--loglevel <span class=\"o\">{</span>INFO,DEBUG<span class=\"o\">}]</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --outlook\n  --jira JIRA           username@jiraserver\n  --trello TRELLO       api_key:token:token_secret:my_name\n  --sqlite_database SQLITE_DATABASE\n                        name of sqlite to export/update to\n  --loglevel <span class=\"o\">{</span>INFO,DEBUG<span class=\"o\">}</span>\n</pre>\n<h3>Collect</h3>\n<h4>Outlook</h4>\n<p>When passing --outlook argument you just need to make sure you've selected all Outlook-tasks including those completed.\nWhile using Outlook you can add the following naming convention of Outlooks \"Categories\"</p>\n<pre><code>(client1)\n(client2)\n(client3)\n...\n</code></pre>\n<p>for giving you possibility to assign clients associated with task.</p>\n<pre><code>{project1}\n{project2}\n{project3}\n...\n</code></pre>\n<p>for assigning the task specific project.</p>\n<h4>Jira</h4>\n<p>The script will use the username@jiraserver supplied to detect all tasks that are assigned to you and collect their most recent details into the database.\nName of the board will become the representation of \"client\"</p>\n<h4>Trello</h4>\n<p>The script will use an argument structured as 'api-key:token:token_secret:my_name'\nYou will get api-key, token and token secret from <a href=\"https://trello.com/app-key\" rel=\"nofollow\">https://trello.com/app-key</a>\nThe my_name is the name as your logged in user has, this is to be able to identify \"your\" tasks amongst others in boards.\nThe board name will be the representation of \"client\"</p>\n<h5>Credentials</h5>\n<p>Currently use keyring to allow you to store credentials locally not being exposed.\nFirst time you run it will prompt you for password.</p>\n<h4>Report</h4>\n<p>Install CopyQ according to <a href=\"https://hluk.github.io/CopyQ/\" rel=\"nofollow\">https://hluk.github.io/CopyQ/</a> if you like to be able to export your report to your clipboard using the --copyq flag.\nBut you can also get the graph when using the --show</p>\n<pre>$ tasks_collector report --help --ignore-gooey\n<span class=\"m\">2019</span>-11-25 <span class=\"m\">18</span>:46:09.199 <span class=\"p\">|</span> INFO     <span class=\"p\">|</span> tasks_collector.__main__:main:79 - no gui\n<span class=\"m\">2019</span>-11-25 <span class=\"m\">18</span>:46:09.200 <span class=\"p\">|</span> DEBUG    <span class=\"p\">|</span> tasks_collector.tasksdb.api:get_default_db_path:48 - no <span class=\"nb\">local</span> config directory, directory will be used /Users/edo/Library/Application Support/tasks_collector.tasksdb\nusage: tasks_collector report <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--days number_of_days_in_past<span class=\"o\">]</span>\n                              <span class=\"o\">[</span>--sqlite_database SQLITE_DATABASE<span class=\"o\">]</span> <span class=\"o\">[</span>--copyq<span class=\"o\">]</span>\n                              <span class=\"o\">[</span>--show<span class=\"o\">]</span>\n                              <span class=\"o\">[</span>--default_client name of default client<span class=\"o\">]</span>\n                              <span class=\"o\">[</span>--loglevel <span class=\"o\">{</span>INFO,DEBUG<span class=\"o\">}]</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --days number_of_days_in_past\n                        Number of days to cover in the report\n  --sqlite_database SQLITE_DATABASE\n                        name of sqlite to export/update to\n  --copyq               paste output as MIME to pastebin, good <span class=\"k\">for</span> sending by\n                        e-mail\n  --show                show gantt image\n  --default_client name of default client\n  --loglevel <span class=\"o\">{</span>INFO,DEBUG<span class=\"o\">}</span>\n</pre>\n<p>A sample of the output after pasting into e.g. a email for you manager might look like this</p>\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bfdb1022e016ad4af0b8a0fabee37c79344b13b6/68747470733a2f2f6769746875622e636f6d2f656e6764616e37372f7461736b735f636f6c6c6563746f722f7261772f6d61737465722f646f63732f7461736b735f636f6c6c6563746f725f7265706f72745f73637265656e73686f742e706e67\" width=\"600\">\n<h4>Cleanup</h4>\n<p>This is useful if for example ownership changes of tickets in Jira end you'd like to close them in your report.</p>\n<pre>$ tasks_collector cleanup --help --ignore-gooey\nusage: tasks_collector cleanup <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--before DAYS<span class=\"o\">]</span>\n                               <span class=\"o\">[</span>--sqlite_database SQLITE_DATABASE<span class=\"o\">]</span>\n                               <span class=\"o\">[</span>--loglevel <span class=\"o\">{</span>INFO,DEBUG<span class=\"o\">}]</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --before DAYS         tickets before this number of days back to be closed\n  --sqlite_database SQLITE_DATABASE\n                        name of sqlite to export/update to\n  --loglevel <span class=\"o\">{</span>INFO,DEBUG<span class=\"o\">}</span>\n</pre>\n<h2>Create sphinx documentation</h2>\n<p>To create documentation in docs/build/html</p>\n<pre>$ <span class=\"nb\">cd</span> docs\n$ sphinx-apidoc -o build/ ../tasks_collector\n$ make html\n</pre>\n<h2>Test the code with coverage</h2>\n<p>Thanks to tox this has been automated so all that you need to run \"tox\" from projects root directory e.g.</p>\n<pre>$ tox\n...\npy3.8.0 run-test: commands<span class=\"o\">[</span><span class=\"m\">0</span><span class=\"o\">]</span> <span class=\"p\">|</span> pytest --cov<span class=\"o\">=</span>tasks_collector tests/\n...........................                                                                                                                                                                                                            <span class=\"o\">[</span><span class=\"m\">100</span>%<span class=\"o\">]</span>\n---------- coverage: platform darwin, python <span class=\"m\">3</span>.8.0-final-0 -----------\nName                                             Stmts   Miss  Cover\n--------------------------------------------------------------------\ntasks_collector/__init__.py                          <span class=\"m\">1</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\ntasks_collector/reportgenerator/__init__.py          <span class=\"m\">0</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\ntasks_collector/reportgenerator/api.py             <span class=\"m\">234</span>    <span class=\"m\">117</span>    <span class=\"m\">50</span>%\ntasks_collector/tasksconverter/__init__.py           <span class=\"m\">0</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\ntasks_collector/tasksconverter/api.py              <span class=\"m\">100</span>      <span class=\"m\">6</span>    <span class=\"m\">94</span>%\ntasks_collector/tasksdb/__init__.py                  <span class=\"m\">0</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\ntasks_collector/tasksdb/api.py                      <span class=\"m\">80</span>      <span class=\"m\">8</span>    <span class=\"m\">90</span>%\ntasks_collector/tasksscraper/__init__.py             <span class=\"m\">0</span>      <span class=\"m\">0</span>   <span class=\"m\">100</span>%\ntasks_collector/tasksscraper/jirascraper.py         <span class=\"m\">17</span>      <span class=\"m\">3</span>    <span class=\"m\">82</span>%\ntasks_collector/tasksscraper/outlookscraper.py      <span class=\"m\">43</span>      <span class=\"m\">1</span>    <span class=\"m\">98</span>%\ntasks_collector/tasksscraper/trelloscraper.py       <span class=\"m\">37</span>     <span class=\"m\">13</span>    <span class=\"m\">65</span>%\n--------------------------------------------------------------------\nTOTAL                                              <span class=\"m\">512</span>    <span class=\"m\">148</span>    <span class=\"m\">71</span>%\n\n<span class=\"m\">29</span> passed, <span class=\"m\">4</span> warnings in <span class=\"m\">17</span>.32s\n______________________________________________________________________________________________________________________________________________________________________________ summary ______________________________________________________________________________________________________________________________________________________________________________\n  py3.8.0: commands succeeded\n  congratulations :<span class=\"o\">)</span>\n</pre>\n<h2>API documentation</h2>\n<p>Could be found at <a href=\"https://tasks-collector.readthedocs.io\" rel=\"nofollow\">https://tasks-collector.readthedocs.io</a></p>\n<h2>Troubleshooting</h2>\n<p>I get the following message when I run tasks_collector in GUI (not --ignore-gooey) mode</p>\n<pre><code>This program needs access to the screen. Please run with a\nFramework build of python, and only when you are logged in\non the main display of your Mac.\n</code></pre>\n<p>Reasons for this happening on MacOS is that your built of Python3 does not include \"framework\" (e.g. when you installed through homebrew) rather than from <a href=\"https://www.python.org/downloads/mac-osx/\" rel=\"nofollow\">https://www.python.org/downloads/mac-osx/</a></p>\n<p>One way around this if you'd be using pyenv (one of my favourites) found at <a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">https://github.com/pyenv/pyenv</a> is to install Python using the following</p>\n<pre>env <span class=\"nv\">PYTHON_CONFIGURE_OPTS</span><span class=\"o\">=</span><span class=\"s2\">\"--enable-framework=</span><span class=\"k\">$(</span>pyenv root<span class=\"k\">)</span><span class=\"s2\">/versions/3.8.0 CC=clang --enable-unicode --with-threads\"</span> pyenv install <span class=\"m\">3</span>.8.0 -v\n</pre>\n<h2>Contact</h2>\n<p>You can easiest contact me by my email <a href=\"mailto:daniel@engvalls.eu\">daniel@engvalls.eu</a> or my linked-in profile <a href=\"https://www.linkedin.com/in/danielengvall/\" rel=\"nofollow\">https://www.linkedin.com/in/danielengvall/</a></p>\n\n          </div>"}, "last_serial": 6865036, "releases": {"0.9.1": [{"comment_text": "", "digests": {"md5": "3976c95b0335327fc42ab014907ca272", "sha256": "dfed65a24bc2b67ed30ace9c4b492a23eede4bd61da78b32926dd82abd5699a6"}, "downloads": -1, "filename": "tasks_collector-0.9.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3976c95b0335327fc42ab014907ca272", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24958, "upload_time": "2019-11-29T20:27:38", "upload_time_iso_8601": "2019-11-29T20:27:38.514302Z", "url": "https://files.pythonhosted.org/packages/c2/ee/3707e5a3ac6cd59dca566c5d236a3a1527359aa4852a14fc079cfe42b487/tasks_collector-0.9.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8ed70c1208c7b89d66efc08588c8f63", "sha256": "df9e64bffcd1bff2e3f9d93017f8cd41b750af679df48a31ef80c17a0b9479a4"}, "downloads": -1, "filename": "tasks_collector-0.9.1.tar.gz", "has_sig": false, "md5_digest": "a8ed70c1208c7b89d66efc08588c8f63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22563, "upload_time": "2019-11-29T20:27:41", "upload_time_iso_8601": "2019-11-29T20:27:41.170056Z", "url": "https://files.pythonhosted.org/packages/40/a9/97e3f3ee16ccfd10cf4166db704c0bd6360b2bb2d7b27670060b5759b527/tasks_collector-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "62ec59a44ef3ab24d9f3b82ed0c86a3d", "sha256": "870c1adc134a7c79e7c829afc30519ab9b7482f875e59886f7ca992770d0f4f5"}, "downloads": -1, "filename": "tasks_collector-0.9.2-py3-none-any.whl", "has_sig": false, "md5_digest": "62ec59a44ef3ab24d9f3b82ed0c86a3d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24995, "upload_time": "2019-11-29T20:39:00", "upload_time_iso_8601": "2019-11-29T20:39:00.814688Z", "url": "https://files.pythonhosted.org/packages/2f/c7/bd255d6082d1b479e3fb6bb864aee4251520f72be46ecdab88f8f71946f3/tasks_collector-0.9.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8de1cf747bcba6e09966f7fef079bd3b", "sha256": "69785d66dc35091e28682b9827236020e1763bf603ead9789658ec53b74e5943"}, "downloads": -1, "filename": "tasks_collector-0.9.2.tar.gz", "has_sig": false, "md5_digest": "8de1cf747bcba6e09966f7fef079bd3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22634, "upload_time": "2019-11-29T20:39:02", "upload_time_iso_8601": "2019-11-29T20:39:02.549396Z", "url": "https://files.pythonhosted.org/packages/3e/b6/4ea43b352f3a63b16629aec9de6e89ab4664ea080193773a705b076e74e1/tasks_collector-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "21231fa0b15358c9d3a36e01e3c98328", "sha256": "aadaa77cc69de3ce9ce099ebc9f07b2ed8d85d48d0741a1f1bf3c1e77a45d4dd"}, "downloads": -1, "filename": "tasks_collector-0.9.3-py3-none-any.whl", "has_sig": false, "md5_digest": "21231fa0b15358c9d3a36e01e3c98328", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25030, "upload_time": "2019-11-29T20:45:38", "upload_time_iso_8601": "2019-11-29T20:45:38.124315Z", "url": "https://files.pythonhosted.org/packages/07/0c/c8e1f5f2cf27576932327626b760f2f59033c2a6dd3ce892a4b2b570afaf/tasks_collector-0.9.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34ed1b2897eedfd91e33d35110c92ec8", "sha256": "1e0ba5fc49efc8edaa92455e631ff67cda27a082b8a71ab89e03e4d465b11b8b"}, "downloads": -1, "filename": "tasks_collector-0.9.3.tar.gz", "has_sig": false, "md5_digest": "34ed1b2897eedfd91e33d35110c92ec8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22702, "upload_time": "2019-11-29T20:45:39", "upload_time_iso_8601": "2019-11-29T20:45:39.530484Z", "url": "https://files.pythonhosted.org/packages/13/a5/1f01d67c943bb1dc582b5f100906f784ce5269710df3766a37c1d2c2d7ca/tasks_collector-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "fc4f36a00cc2f59d2560cfe0eccf2421", "sha256": "d15331282219f0dc9e06900e8d08df7f7d72c40dec45e6579b03ba23970cbba3"}, "downloads": -1, "filename": "tasks_collector-0.9.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fc4f36a00cc2f59d2560cfe0eccf2421", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25969, "upload_time": "2019-12-15T17:31:03", "upload_time_iso_8601": "2019-12-15T17:31:03.263039Z", "url": "https://files.pythonhosted.org/packages/f0/bc/2154bb22ec6790eb2d81b1cad316aec926dabeb977b437662c38500c4a5a/tasks_collector-0.9.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c46357f00b585f10695a2ac4d065f42", "sha256": "d32c8511f66a43a92b1719de2cde8cdb44c8e66322a14dc589597a31691cdd63"}, "downloads": -1, "filename": "tasks_collector-0.9.4.tar.gz", "has_sig": false, "md5_digest": "4c46357f00b585f10695a2ac4d065f42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24336, "upload_time": "2019-12-15T17:31:05", "upload_time_iso_8601": "2019-12-15T17:31:05.216086Z", "url": "https://files.pythonhosted.org/packages/8d/72/9a10500642dd3951e03aece37448025da650f64f770b12f3ab2db3b480be/tasks_collector-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "4c371e4aa7a3b5c2e8c85a9cdd53ebc1", "sha256": "5c5de6ec9be7ab6298970b4330490ef6ce533142d8f3e37e7e64ee569611152a"}, "downloads": -1, "filename": "tasks_collector-0.9.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4c371e4aa7a3b5c2e8c85a9cdd53ebc1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26131, "upload_time": "2020-03-23T11:58:36", "upload_time_iso_8601": "2020-03-23T11:58:36.606082Z", "url": "https://files.pythonhosted.org/packages/4f/88/9a5ae532012d3890c16a4fd2260b74e8ae785d6ba0bc36eb57acf60b7a9e/tasks_collector-0.9.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cce373f67042989e1317c9153d6cbc9", "sha256": "25e015ba90ac56f8b7c64355c7ca62967bdff61028cfad4f0a2f107416991f85"}, "downloads": -1, "filename": "tasks_collector-0.9.5.tar.gz", "has_sig": false, "md5_digest": "4cce373f67042989e1317c9153d6cbc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24505, "upload_time": "2020-03-23T11:58:38", "upload_time_iso_8601": "2020-03-23T11:58:38.642778Z", "url": "https://files.pythonhosted.org/packages/eb/43/c1ce5ec284ed1fda42e78e97c683b61f786c564584009edec23ab3b6a7cf/tasks_collector-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c371e4aa7a3b5c2e8c85a9cdd53ebc1", "sha256": "5c5de6ec9be7ab6298970b4330490ef6ce533142d8f3e37e7e64ee569611152a"}, "downloads": -1, "filename": "tasks_collector-0.9.5-py3-none-any.whl", "has_sig": false, "md5_digest": "4c371e4aa7a3b5c2e8c85a9cdd53ebc1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26131, "upload_time": "2020-03-23T11:58:36", "upload_time_iso_8601": "2020-03-23T11:58:36.606082Z", "url": "https://files.pythonhosted.org/packages/4f/88/9a5ae532012d3890c16a4fd2260b74e8ae785d6ba0bc36eb57acf60b7a9e/tasks_collector-0.9.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cce373f67042989e1317c9153d6cbc9", "sha256": "25e015ba90ac56f8b7c64355c7ca62967bdff61028cfad4f0a2f107416991f85"}, "downloads": -1, "filename": "tasks_collector-0.9.5.tar.gz", "has_sig": false, "md5_digest": "4cce373f67042989e1317c9153d6cbc9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24505, "upload_time": "2020-03-23T11:58:38", "upload_time_iso_8601": "2020-03-23T11:58:38.642778Z", "url": "https://files.pythonhosted.org/packages/eb/43/c1ce5ec284ed1fda42e78e97c683b61f786c564584009edec23ab3b6a7cf/tasks_collector-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:44 2020"}