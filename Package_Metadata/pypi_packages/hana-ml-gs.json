{"info": {"author": "SAP SE", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Operating System :: Microsoft", "Operating System :: Other OS", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "Introduction\n------------\nWelcome to the SAP HANA Python Client API for machine learning algorithms. This API enables Python data scientists to access SAP HANA data and build machine learning models using that data directly in SAP HANA.\n\nOverview\n--------\nThe SAP HANA Python Client API for machine learning algorithms provides a set of client-side Python functions for accessing and querying SAP HANA data, and a set of functions for developing machine learning models.\n\nThe Python Client API for Machine Learning consists of two main parts:\n\n - A set of machine learning APIs for different algorithms.\n\n - The SAP HANA DataFrame, which provides a set of methods for analyzing data in SAP HANA without bringing the data to the client.\n\nThis set of APIs is composed of two packages:\n\n - PAL package\n\n - APL package\n\nThe Predictive Analysis Library (PAL) package consists of a set of Python algorithms and functions which provide access to the machine learning capabilities in SAP HANA. The PAL Python functions cover a variety of different machine learning algorithms for training a model and then the trained model is used for scoring. For details on which specific algorithms are available in this release, please refer to the documentation.\n\nThe Automated Predictive Library (APL) package exposes the data mining capabilities of the Automated Analytics engine in SAP HANA through a set of functions. These functions develop a predictive modeling process that analysts can use to answer simple questions on their customer datasets stored in SAP HANA.\n\nThis Python library uses the SAP HANA Python driver (hdbcli) to connect to and access SAP HANA.\n\nGetting Started\n---------------\n\nInstall via ``pip install hana-ml`` \nQuick Start\n-----------\n\n - For HANA tenant databases, use the port number 3**NN**13 (where **NN** is the SAP instance number - e.g. 30013).\n - For HANA system databases in a multitenant system, the port number is 3**NN**13.\n - For HANA single-tenant databases, the port number is 3**NN**15.\n\n\n    >>> from hana_ml import dataframe\n    >>> conn = dataframe.ConnectionContext(\n            address=\"<hostname>\",\n            port=3<NN>MM,\n            user=\"<username>\",\n            password=\"<password>\")\n\nReturn a DataFrame referenced to SAP HANA table.\n\n\n    >>> df = conn.table('MY_TABLE', schema='MY_SCHEMA').filter('COL3>5').select('COL1', 'COL2')\n\nReturn a DataFrame from select statement.\n\n\n    >>> df = dataframe.DataFrame(conn, 'select * from MY_SCHEMA.MY_TABLE')\n\nConvert to pandas DataFrame.\n\n\n    >>> pandas_df = df.collect()\n\nConvert to HANA DataFrame from pandas DataFrame.\n\n\n    >>> df = dataframe.create_dataframe_from_pandas(conn, pandas_df, 'MY_TABLE', force=True)\n\nCall SAP HANA Machine Learning Algorithms.\n\n\n    >>> rfc = RandomForestClassifier(conn_context=conn, n_estimators=3,\n                                max_features=3, random_state=2,\n                                split_threshold=0.00001,\n                                calculate_oob=True,\n                                min_samples_leaf=1, thread_ratio=1.0)\n    >>> rfc.fit(data=df, features=['OUTLOOK', 'TEMP', 'HUMIDITY', 'WINDY'],\n             label='LABEL')\n    >>> rfc.feature_importances_.collect()\n    VARIABLE_NAME  IMPORTANCE\n    0       OUTLOOK    0.449550\n    1          TEMP    0.216216\n    2      HUMIDITY    0.208108\n    3         WINDY    0.126126\n    >>> result = rfc.predict(data=df2, key='ID', verbose=False)\n    >>> result.collect()\n    ID SCORE  CONFIDENCE\n    0   0  Play    0.666667\n    1   1  Play    0.666667\n\nHelp\n----\n\nSee the `SAP HANA ML API Reference <https://help.sap.com/doc/DRAFT/0172e3957b5946da85d3fde85ee8f33d/2.0.040/en-US/html/index.html>`_ for details about developing with the SAP HANA ML API.\n\nLicense\n-------\n\nThe SAP HANA ML API is provided via the `SAP Developer License Agreement <https://tools.hana.ondemand.com/developer-license-3_1.txt>`_.\n\nBy using this software, you agree that the following text is incorporated into the terms of the Developer Agreement:\n\n    If you are an existing SAP customer for On Premise software, your use of this current software is also covered by the\n    terms of your software license agreement with SAP, including the Use Rights, the current version of which can be found at:\n    `https://www.sap.com/about/agreements/product-use-and-support-terms.html?tag=agreements:product-use-support-terms/on-premise-software/software-use-rights <https://www.sap.com/about/agreements/product-use-and-support-terms.html?tag=agreements:product-use-support-terms/on-premise-software/software-use-rights>`_\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.sap.com/", "keywords": "SAP HANA machine learning intelligent enterprise cloud PAL APL client", "license": "Other/Proprietary License(SAP DEVELOPER LICENSE AGREEMENT)", "maintainer": "", "maintainer_email": "", "name": "hana-ml-gs", "package_url": "https://pypi.org/project/hana-ml-gs/", "platform": "", "project_url": "https://pypi.org/project/hana-ml-gs/", "project_urls": {"Documentation": "https://help.sap.com/doc/1d0ebfe5e8dd44d09606814d83308d4b/2.0.04/en-US/index.html", "Homepage": "https://www.sap.com/"}, "release_url": "https://pypi.org/project/hana-ml-gs/2.5.200427/", "requires_dist": ["hdbcli (>=2.4.167)", "Shapely (==1.7.0)", "geopandas (==0.7.0)", "pydot", "Deprecated", "uuid", "numpy (<1.16.4) ; python_version < \"3\"", "matplotlib (<3) ; python_version < \"3\"", "pandas (<0.24.2) ; python_version < \"3.4\"", "numpy (>=1.16.4) ; python_version >= \"3\"", "matplotlib ; python_version >= \"3\"", "pandas (>=0.24.2) ; python_version >= \"3.4\""], "requires_python": ">=2.7", "summary": "SAP HANA Python Client API for Machine Learning", "version": "2.5.200427", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Introduction</h2>\n<p>Welcome to the SAP HANA Python Client API for machine learning algorithms. This API enables Python data scientists to access SAP HANA data and build machine learning models using that data directly in SAP HANA.</p>\n<h2>Overview</h2>\n<p>The SAP HANA Python Client API for machine learning algorithms provides a set of client-side Python functions for accessing and querying SAP HANA data, and a set of functions for developing machine learning models.</p>\n<p>The Python Client API for Machine Learning consists of two main parts:</p>\n<ul>\n<li>\n<p>A set of machine learning APIs for different algorithms.</p>\n</li>\n<li>\n<p>The SAP HANA DataFrame, which provides a set of methods for analyzing data in SAP HANA without bringing the data to the client.</p>\n</li>\n</ul>\n<p>This set of APIs is composed of two packages:</p>\n<ul>\n<li>\n<p>PAL package</p>\n</li>\n<li>\n<p>APL package</p>\n</li>\n</ul>\n<p>The Predictive Analysis Library (PAL) package consists of a set of Python algorithms and functions which provide access to the machine learning capabilities in SAP HANA. The PAL Python functions cover a variety of different machine learning algorithms for training a model and then the trained model is used for scoring. For details on which specific algorithms are available in this release, please refer to the documentation.</p>\n<p>The Automated Predictive Library (APL) package exposes the data mining capabilities of the Automated Analytics engine in SAP HANA through a set of functions. These functions develop a predictive modeling process that analysts can use to answer simple questions on their customer datasets stored in SAP HANA.</p>\n<p>This Python library uses the SAP HANA Python driver (hdbcli) to connect to and access SAP HANA.</p>\n<h2>Getting Started</h2>\n<h2>Install via <code>pip install hana-ml</code>\nQuick Start</h2>\n<ul>\n<li>\n<p>For HANA tenant databases, use the port number 3<strong>NN</strong>13 (where <strong>NN</strong> is the SAP instance number - e.g. 30013).</p>\n</li>\n<li>\n<p>For HANA system databases in a multitenant system, the port number is 3<strong>NN</strong>13.</p>\n</li>\n<li>\n<p>For HANA single-tenant databases, the port number is 3<strong>NN</strong>15.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>from hana_ml import dataframe\nconn = dataframe.ConnectionContext(\naddress=\"&lt;hostname&gt;\",\nport=3&lt;NN&gt;MM,\nuser=\"&lt;username&gt;\",\npassword=\"&lt;password&gt;\")</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n<p>Return a DataFrame referenced to SAP HANA table.</p>\n<pre><code>&gt;&gt;&gt; df = conn.table('MY_TABLE', schema='MY_SCHEMA').filter('COL3&gt;5').select('COL1', 'COL2')\n</code></pre>\n<p>Return a DataFrame from select statement.</p>\n<pre><code>&gt;&gt;&gt; df = dataframe.DataFrame(conn, 'select * from MY_SCHEMA.MY_TABLE')\n</code></pre>\n<p>Convert to pandas DataFrame.</p>\n<pre><code>&gt;&gt;&gt; pandas_df = df.collect()\n</code></pre>\n<p>Convert to HANA DataFrame from pandas DataFrame.</p>\n<pre><code>&gt;&gt;&gt; df = dataframe.create_dataframe_from_pandas(conn, pandas_df, 'MY_TABLE', force=True)\n</code></pre>\n<p>Call SAP HANA Machine Learning Algorithms.</p>\n<pre><code>&gt;&gt;&gt; rfc = RandomForestClassifier(conn_context=conn, n_estimators=3,\n                            max_features=3, random_state=2,\n                            split_threshold=0.00001,\n                            calculate_oob=True,\n                            min_samples_leaf=1, thread_ratio=1.0)\n&gt;&gt;&gt; rfc.fit(data=df, features=['OUTLOOK', 'TEMP', 'HUMIDITY', 'WINDY'],\n         label='LABEL')\n&gt;&gt;&gt; rfc.feature_importances_.collect()\nVARIABLE_NAME  IMPORTANCE\n0       OUTLOOK    0.449550\n1          TEMP    0.216216\n2      HUMIDITY    0.208108\n3         WINDY    0.126126\n&gt;&gt;&gt; result = rfc.predict(data=df2, key='ID', verbose=False)\n&gt;&gt;&gt; result.collect()\nID SCORE  CONFIDENCE\n0   0  Play    0.666667\n1   1  Play    0.666667\n</code></pre>\n<h2>Help</h2>\n<p>See the <code>SAP HANA ML API Reference &lt;https://help.sap.com/doc/DRAFT/0172e3957b5946da85d3fde85ee8f33d/2.0.040/en-US/html/index.html&gt;</code>_ for details about developing with the SAP HANA ML API.</p>\n<h2>License</h2>\n<p>The SAP HANA ML API is provided via the <code>SAP Developer License Agreement &lt;https://tools.hana.ondemand.com/developer-license-3_1.txt&gt;</code>_.</p>\n<p>By using this software, you agree that the following text is incorporated into the terms of the Developer Agreement:</p>\n<pre><code>If you are an existing SAP customer for On Premise software, your use of this current software is also covered by the\nterms of your software license agreement with SAP, including the Use Rights, the current version of which can be found at:\n`https://www.sap.com/about/agreements/product-use-and-support-terms.html?tag=agreements:product-use-support-terms/on-premise-software/software-use-rights &lt;https://www.sap.com/about/agreements/product-use-and-support-terms.html?tag=agreements:product-use-support-terms/on-premise-software/software-use-rights&gt;`_\n</code></pre>\n\n          </div>"}, "last_serial": 7111606, "releases": {"2.5.200427": [{"comment_text": "", "digests": {"md5": "87ac64c07239e1ee283f8aa7e338ec6b", "sha256": "3b0fb2dedbf8f09641197ae91785423bc832521a2fa61f8c999ff5046bbd1637"}, "downloads": -1, "filename": "hana_ml_gs-2.5.200427-py3-none-any.whl", "has_sig": false, "md5_digest": "87ac64c07239e1ee283f8aa7e338ec6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 458482, "upload_time": "2020-04-27T13:10:19", "upload_time_iso_8601": "2020-04-27T13:10:19.745593Z", "url": "https://files.pythonhosted.org/packages/7f/2e/ef6975d0431e0970266a3d63a94a02b3bd0319caaa197f4994b210b2aaba/hana_ml_gs-2.5.200427-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87ac64c07239e1ee283f8aa7e338ec6b", "sha256": "3b0fb2dedbf8f09641197ae91785423bc832521a2fa61f8c999ff5046bbd1637"}, "downloads": -1, "filename": "hana_ml_gs-2.5.200427-py3-none-any.whl", "has_sig": false, "md5_digest": "87ac64c07239e1ee283f8aa7e338ec6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 458482, "upload_time": "2020-04-27T13:10:19", "upload_time_iso_8601": "2020-04-27T13:10:19.745593Z", "url": "https://files.pythonhosted.org/packages/7f/2e/ef6975d0431e0970266a3d63a94a02b3bd0319caaa197f4994b210b2aaba/hana_ml_gs-2.5.200427-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:52:38 2020"}