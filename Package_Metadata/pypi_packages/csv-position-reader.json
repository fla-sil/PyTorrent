{"info": {"author": "@LoisaidaSam", "author_email": "sam.sandberg@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# csv-position-reader\n\nA custom CSV reader implementation with direct file access\n\nThe default builtin Python `csv` lib uses an `8KB` read-ahead buffer on the file pointer, making `fp.tell()` yield inaccurate results. This library addresses that head on, explicitly passing back the file pointer position with each row, as well as allowing for direct seeking.\n\nReferences:\n\n- https://docs.python.org/2/library/csv.html\n- https://stackoverflow.com/questions/14145082/file-tell-inconsistency/14145118#14145118\n- https://stackoverflow.com/questions/12109622/how-to-know-the-byte-position-of-a-row-of-a-csv-file-in-python/12110160#12110160\n\n## Usage\n\n```python\n>>> import csv_position_reader\n\n>>> with open('tests/data/basic.csv', 'r') as fp:\n...     reader = csv_position_reader.DictReader(fp)\n...     position, row = reader.next()\n...     print \"position: %s\" % position\n...     print \"row: %s\" % row\n...     reader.seek(position)\n...     position_new, row_new = reader.next()\n...     assert position == position_new\n...     assert row == row_new\n... \nposition: 26\nrow: {'city': 'Atlanta', 'favorite_color': 'black', 'name': 'Sam'}\n```\n\n## Why? / Who Cares?\n\nBecause after poring through a CSV one time, you can now build a dictionary/cache of where each row lives for future `O(1)` access! You're now a stone's throw away from a CSV-driven database!\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/loisaidasam/csv-position-reader", "keywords": "csv", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "csv-position-reader", "package_url": "https://pypi.org/project/csv-position-reader/", "platform": "", "project_url": "https://pypi.org/project/csv-position-reader/", "project_urls": {"Homepage": "https://github.com/loisaidasam/csv-position-reader"}, "release_url": "https://pypi.org/project/csv-position-reader/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A custom CSV reader implementation with direct file access", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>csv-position-reader</h1>\n<p>A custom CSV reader implementation with direct file access</p>\n<p>The default builtin Python <code>csv</code> lib uses an <code>8KB</code> read-ahead buffer on the file pointer, making <code>fp.tell()</code> yield inaccurate results. This library addresses that head on, explicitly passing back the file pointer position with each row, as well as allowing for direct seeking.</p>\n<p>References:</p>\n<ul>\n<li><a href=\"https://docs.python.org/2/library/csv.html\" rel=\"nofollow\">https://docs.python.org/2/library/csv.html</a></li>\n<li><a href=\"https://stackoverflow.com/questions/14145082/file-tell-inconsistency/14145118#14145118\" rel=\"nofollow\">https://stackoverflow.com/questions/14145082/file-tell-inconsistency/14145118#14145118</a></li>\n<li><a href=\"https://stackoverflow.com/questions/12109622/how-to-know-the-byte-position-of-a-row-of-a-csv-file-in-python/12110160#12110160\" rel=\"nofollow\">https://stackoverflow.com/questions/12109622/how-to-know-the-byte-position-of-a-row-of-a-csv-file-in-python/12110160#12110160</a></li>\n</ul>\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">csv_position_reader</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'tests/data/basic.csv'</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">csv_position_reader</span><span class=\"o\">.</span><span class=\"n\">DictReader</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">position</span><span class=\"p\">,</span> <span class=\"n\">row</span> <span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span> <span class=\"s2\">\"position: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">position</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span> <span class=\"s2\">\"row: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">row</span>\n<span class=\"o\">...</span>     <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">position_new</span><span class=\"p\">,</span> <span class=\"n\">row_new</span> <span class=\"o\">=</span> <span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">next</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>     <span class=\"k\">assert</span> <span class=\"n\">position</span> <span class=\"o\">==</span> <span class=\"n\">position_new</span>\n<span class=\"o\">...</span>     <span class=\"k\">assert</span> <span class=\"n\">row</span> <span class=\"o\">==</span> <span class=\"n\">row_new</span>\n<span class=\"o\">...</span> \n<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"mi\">26</span>\n<span class=\"n\">row</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Atlanta'</span><span class=\"p\">,</span> <span class=\"s1\">'favorite_color'</span><span class=\"p\">:</span> <span class=\"s1\">'black'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Sam'</span><span class=\"p\">}</span>\n</pre>\n<h2>Why? / Who Cares?</h2>\n<p>Because after poring through a CSV one time, you can now build a dictionary/cache of where each row lives for future <code>O(1)</code> access! You're now a stone's throw away from a CSV-driven database!</p>\n\n          </div>"}, "last_serial": 4158102, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8c272fb0dd865941233ee818a9ccddac", "sha256": "2e07e479946b0f9fc7a9ad227653abd12f89f5e2f6973d91624c28b4df542afd"}, "downloads": -1, "filename": "csv_position_reader-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c272fb0dd865941233ee818a9ccddac", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3107, "upload_time": "2018-08-10T19:16:22", "upload_time_iso_8601": "2018-08-10T19:16:22.736896Z", "url": "https://files.pythonhosted.org/packages/25/4b/2f1a0f5941263573a44ab956358417f54e6c1b3f6dc30f043d3db042470e/csv_position_reader-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0c7117666eceb9da9ef880fb23cc0a2", "sha256": "4737871b2b23b3f88b5e3f396d1b41ece7d7477c8aa1f44398cbb660b57ca992"}, "downloads": -1, "filename": "csv-position-reader-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e0c7117666eceb9da9ef880fb23cc0a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2434, "upload_time": "2018-08-10T19:16:24", "upload_time_iso_8601": "2018-08-10T19:16:24.153139Z", "url": "https://files.pythonhosted.org/packages/e7/88/895c475df026c17db44fd4b9d5c773123844c58e6395f0e99f713e72d124/csv-position-reader-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c272fb0dd865941233ee818a9ccddac", "sha256": "2e07e479946b0f9fc7a9ad227653abd12f89f5e2f6973d91624c28b4df542afd"}, "downloads": -1, "filename": "csv_position_reader-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c272fb0dd865941233ee818a9ccddac", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3107, "upload_time": "2018-08-10T19:16:22", "upload_time_iso_8601": "2018-08-10T19:16:22.736896Z", "url": "https://files.pythonhosted.org/packages/25/4b/2f1a0f5941263573a44ab956358417f54e6c1b3f6dc30f043d3db042470e/csv_position_reader-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e0c7117666eceb9da9ef880fb23cc0a2", "sha256": "4737871b2b23b3f88b5e3f396d1b41ece7d7477c8aa1f44398cbb660b57ca992"}, "downloads": -1, "filename": "csv-position-reader-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e0c7117666eceb9da9ef880fb23cc0a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2434, "upload_time": "2018-08-10T19:16:24", "upload_time_iso_8601": "2018-08-10T19:16:24.153139Z", "url": "https://files.pythonhosted.org/packages/e7/88/895c475df026c17db44fd4b9d5c773123844c58e6395f0e99f713e72d124/csv-position-reader-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:40 2020"}