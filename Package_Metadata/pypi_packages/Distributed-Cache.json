{"info": {"author": "@balex", "author_email": "balex@ucdavis.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Build Tools"], "description": "# Zookeeper-Watcher\n\nWatches a designated node in Zookeeper for data or member changes. \nImplements a Watch class which can be used as a decorator to trigger functions when changes are detected on a specified node in Zookeeper.\n\n[![Latest Version](https://pypip.in/version/Zookeeper-Watcher/badge.png)]\n(https://pypi.python.org/pypi/Zookeeper-Watcher/)\n[![Downloads](https://pypip.in/download/Zookeeper-Watcher/badge.png)]\n(https://pypi.python.org/pypi/Zookeeper-Watcher/)\n[![Download format](https://pypip.in/format/Zookeeper-Watcher/badge.png)]\n(https://pypi.python.org/pypi/Zookeeper-Watcher/)\n[![License](https://pypip.in/license/Zookeeper-Watcher/badge.png)]\n(https://pypi.python.org/pypi/Zookeeper-Watcher/)\n\n\n## Supported Platforms\n\n* OSX and Linux.\n* Python 2.7\n\nProbably works with other versions as well.\n\n## Quickstart\n\nInstall:\n```bash\npip install Zookeeper-Watcher\n```\n\nExample:\n```python\nfrom zookeeper_watcher import ZookeeperWatcher\n\n#instantiate the watcher object by passing it the Zookeeper server address and a optional logger.\nwatcher = ZookeperWatcher('zookeeper_host:port') #can receive also a custom logger by adding logger=some_logger.\n\n#start the async connection with the Zookeeper server\nwatcher.start()\n\n#decorate a function that will be triggered once at runtime and on every detected event\n@watcher.Watch('/zookeeper/path/to/the/node/that/we/want/to/watch')\ndef test_function(children, data):\n  \"\"\"decorated function that receives a list of children nodes of the given path \n  and a list of data objects (dictionaries) that are read from each child node\"\"\"\n  print \"list of children nodes\", children\n  print \"list of data objects\", data\n\n```\n\n## Changelog\n\n#### 0.1.4\n\n* Fixed some logging bugs.\n\n#### 0.1.3\n\n* Added custom logging.\n\n#### 0.1.2\n\n* Fixed some logging errors.\n\n#### 0.1.1\n\n* Fixed some distribution packaging bug.\n\n#### 0.1.0\n\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Bogdan-Alexandrescu/", "keywords": "consistent hash cache distributed twitter", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "Distributed-Cache", "package_url": "https://pypi.org/project/Distributed-Cache/", "platform": "any", "project_url": "https://pypi.org/project/Distributed-Cache/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Bogdan-Alexandrescu/"}, "release_url": "https://pypi.org/project/Distributed-Cache/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Watches a designated node in Zookeeper for data or member changes and trigger a function when an event is detected.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Zookeeper-Watcher<br><br>Watches a designated node in Zookeeper for data or member changes. <br>Implements a Watch class which can be used as a decorator to trigger functions when changes are detected on a specified node in Zookeeper.<br><br>[![Latest Version](https://pypip.in/version/Zookeeper-Watcher/badge.png)]<br>(https://pypi.python.org/pypi/Zookeeper-Watcher/)<br>[![Downloads](https://pypip.in/download/Zookeeper-Watcher/badge.png)]<br>(https://pypi.python.org/pypi/Zookeeper-Watcher/)<br>[![Download format](https://pypip.in/format/Zookeeper-Watcher/badge.png)]<br>(https://pypi.python.org/pypi/Zookeeper-Watcher/)<br>[![License](https://pypip.in/license/Zookeeper-Watcher/badge.png)]<br>(https://pypi.python.org/pypi/Zookeeper-Watcher/)<br><br><br>## Supported Platforms<br><br>* OSX and Linux.<br>* Python 2.7<br><br>Probably works with other versions as well.<br><br>## Quickstart<br><br>Install:<br>```bash<br>pip install Zookeeper-Watcher<br>```<br><br>Example:<br>```python<br>from zookeeper_watcher import ZookeeperWatcher<br><br>#instantiate the watcher object by passing it the Zookeeper server address and a optional logger.<br>watcher = ZookeperWatcher('zookeeper_host:port') #can receive also a custom logger by adding logger=some_logger.<br><br>#start the async connection with the Zookeeper server<br>watcher.start()<br><br>#decorate a function that will be triggered once at runtime and on every detected event<br>@watcher.Watch('/zookeeper/path/to/the/node/that/we/want/to/watch')<br>def test_function(children, data):<br>  \"\"\"decorated function that receives a list of children nodes of the given path <br>  and a list of data objects (dictionaries) that are read from each child node\"\"\"<br>  print \"list of children nodes\", children<br>  print \"list of data objects\", data<br><br>```<br><br>## Changelog<br><br>#### 0.1.4<br><br>* Fixed some logging bugs.<br><br>#### 0.1.3<br><br>* Added custom logging.<br><br>#### 0.1.2<br><br>* Fixed some logging errors.<br><br>#### 0.1.1<br><br>* Fixed some distribution packaging bug.<br><br>#### 0.1.0<br><br>* Initial release.\n          </div>"}, "last_serial": 1246347, "releases": {"0.1.0": []}, "urls": [], "timestamp": "Fri May  8 00:38:03 2020"}