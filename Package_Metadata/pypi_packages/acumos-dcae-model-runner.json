{"info": {"author": "Paul Triantafyllou", "author_email": "trianta@research.att.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": ".. ===============LICENSE_START=======================================================\n.. Acumos CC-BY-4.0\n.. ===================================================================================\n.. Copyright (C) 2017-2018 AT&T Intellectual Property & Tech Mahindra. All rights reserved.\n.. ===================================================================================\n.. This Acumos documentation file is distributed by AT&T and Tech Mahindra\n.. under the Creative Commons Attribution 4.0 International License (the \"License\");\n.. you may not use this file except in compliance with the License.\n.. You may obtain a copy of the License at\n..\n..      http://creativecommons.org/licenses/by/4.0\n..\n.. This file is distributed on an \"AS IS\" BASIS,\n.. WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n.. See the License for the specific language governing permissions and\n.. limitations under the License.\n.. ===============LICENSE_END=========================================================\n\n========================\nAcumos DCAE Model Runner\n========================\n\nThe Acumos DCAE model runner enables Acumos Python models to be run as if they were\nDCAE components.\n\nEach Acumos model method is mapped to a subscriber and publisher stream,\nwith ``_subscriber`` and ``_publisher`` suffixes respectively. For example,\na model with a ``transform`` method would have ``transform_subscriber`` and\n``transform_publisher`` streams.\n\nThe model runner implements DCAE APIs such as health checks and configuration\nupdates.\n\nThe ``acumos_dcae_model_runner`` Python package provides a command line utility\nthat can be used to instantiate the model runner. See the tutorial for more information.\n\nThe ``acumos_dcae_model_runner`` package should be installed in the docker image\nthat is ultimately on-boarded into DCAE. The model runner CLI utility should be\nthe entry point of that Docker image, as shown in the Dockerfile provided\nin ``example/`` directory in the root of the `Acumos DCAE Model Runner repository\n<https://gerrit.acumos.org/r/gitweb?p=python-dcae-model-runner.git;a=summary>`__.\n\nInstallation\n============\n\nThe ``acumos_dcae_model_runner`` package can be installed with pip like so:\n\n.. code:: bash\n\n    pip install acumos_dcae_model_runner\n\n**Note**: installing ``acumos_dcae_model_runner`` will also install the latest version\nof `dcaeapplib <https://pypi.org/project/dcaeapplib/>`__, which is only compatible\nwith DCAE Dublin or later. To use ``acumos_dcae_model_runner`` with earlier versions\nof DCAE, be sure to pin or bound the version of ``dcaeapplib`` appropriately. Consult\nthe DCAE documentation for more information.\n\n.. ===============LICENSE_START=======================================================\n.. Acumos CC-BY-4.0\n.. ===================================================================================\n.. Copyright (C) 2017-2018 AT&T Intellectual Property & Tech Mahindra. All rights reserved.\n.. ===================================================================================\n.. This Acumos documentation file is distributed by AT&T and Tech Mahindra\n.. under the Creative Commons Attribution 4.0 International License (the \"License\");\n.. you may not use this file except in compliance with the License.\n.. You may obtain a copy of the License at\n..\n..      http://creativecommons.org/licenses/by/4.0\n..\n.. This file is distributed on an \"AS IS\" BASIS,\n.. WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n.. See the License for the specific language governing permissions and\n.. limitations under the License.\n.. ===============LICENSE_END=========================================================\n\n========\nTutorial\n========\n\nCLI Usage\n=========\n\nTo execute the model runner, use the provided CLI:\n\n.. code:: bash\n\n    $ acumos_dcae_model_runner --help\n    usage: acumos_dcae_model_runner [-h] [--timeout TIMEOUT] [--debug] model_dir\n\n    positional arguments:\n      model_dir          Directory that contains either the dumped model.zip or\n                         its unzipped contents.\n\n    optional arguments:\n      -h, --help         show this help message and exit\n      --timeout TIMEOUT  Timeout (ms) used when fetching.\n      --debug            Sets the log level to DEBUG\n\nDCAE Onboarding Example\n=======================\n\nThe ``python-dcae-model-runner`` repository has an ``example/`` directory\nthat shows how an Acumos model can be onboarded as a DCAE component.\n\nAfter executing the steps below, the directory should have this\nstructure:\n\n.. code:: bash\n\n    example/\n    \u251c\u2500\u2500 Dockerfile\n    \u251c\u2500\u2500 dcae-artifacts\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 component.json\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 number-out.json\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 numbers-in.json\n    \u251c\u2500\u2500 example-model\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 metadata.json\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 model.proto\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 model.zip\n    \u251c\u2500\u2500 example_model.py\n    \u2514\u2500\u2500 requirements.txt\n\n**Note:** For this example, the ``requirements.txt`` file should reflect the\npackages and versions listed in ``example-model/metadata.json``.\n\nSteps\n-----\n\n1) Create the Acumos model\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe ``example_model.py`` script defines a simple Acumos model that can\nadd two integers together. The following will generate\n``example-model/``:\n\n.. code:: bash\n\n    python example_model.py\n\n2) Build the docker image\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    docker build -t acumos-python-model-test:0.1.0 .\n\n3) Onboard the Acumos model to DCAE\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe onboarding procedure involves adding the component and data format\nartifacts provided in ``example/dcae-artifacts`` to the DCAE catalog.\n\nRefer to the official DCAE onboarding documentation for the full\nprocedure.\n\n.. ===============LICENSE_START=======================================================\n.. Acumos CC-BY-4.0\n.. ===================================================================================\n.. Copyright (C) 2017-2018 AT&T Intellectual Property & Tech Mahindra. All rights reserved.\n.. ===================================================================================\n.. This Acumos documentation file is distributed by AT&T and Tech Mahindra\n.. under the Creative Commons Attribution 4.0 International License (the \"License\");\n.. you may not use this file except in compliance with the License.\n.. You may obtain a copy of the License at\n..\n..      http://creativecommons.org/licenses/by/4.0\n..\n.. This file is distributed on an \"AS IS\" BASIS,\n.. WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n.. See the License for the specific language governing permissions and\n.. limitations under the License.\n.. ===============LICENSE_END=========================================================\n\n======================================\nAcumos DCAE Model Runner Release Notes\n======================================\n\nv0.1.3\n======\n\n- Updated major release bound for ``dcaeapplib``\n\nv0.1.2\n======\n\n- Removed dependency link for ``dcaeapplib``\n\nv0.1.1\n======\n\n- Updated dependency link for ``dcaeapplib``. It released a patch that fixed an authentication error. The ``dcaeapplib`` dependency link will be removed once ``dcaeapplib`` is hosted in PyPI.\n\nv0.1.0\n======\n\n-  Initial release of the Acumos DCAE Python model runner\n\n.. ===============LICENSE_START=======================================================\n.. Acumos CC-BY-4.0\n.. ===================================================================================\n.. Copyright (C) 2017-2018 AT&T Intellectual Property & Tech Mahindra. All rights reserved.\n.. ===================================================================================\n.. This Acumos documentation file is distributed by AT&T and Tech Mahindra\n.. under the Creative Commons Attribution 4.0 International License (the \"License\");\n.. you may not use this file except in compliance with the License.\n.. You may obtain a copy of the License at\n..\n..      http://creativecommons.org/licenses/by/4.0\n..\n.. This file is distributed on an \"AS IS\" BASIS,\n.. WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n.. See the License for the specific language governing permissions and\n.. limitations under the License.\n.. ===============LICENSE_END=========================================================\n\n=======================\nContributing Guidelines\n=======================\n\nTesting\n=======\n\nWe use a combination of ``tox``, ``pytest``, and ``flake8`` to test\n``acumos``. Code which is not PEP8 compliant (aside from E501) will be\nconsidered a failing test. You can use tools like ``autopep8`` to\n\u201cclean\u201d your code as follows:\n\n.. code:: bash\n\n    $ pip install autopep8\n    $ cd python-dcae-model-runner\n    $ autopep8 -r --in-place --ignore E501 acumos_dcae_model_runner/\n\nRun tox directly:\n\n.. code:: bash\n\n    $ cd python-dcae-model-runner\n    $ export WORKSPACE=$(pwd)  # env var normally provided by Jenkins\n    $ tox\n\nYou can also specify certain tox environments to test:\n\n.. code:: bash\n\n    $ tox -e py34  # only test against Python 3.4\n    $ tox -e flake8  # only lint code\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gerrit.acumos.org/r/gitweb?p=python-dcae-model-runner.git", "keywords": "acumos dcae", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "acumos-dcae-model-runner", "package_url": "https://pypi.org/project/acumos-dcae-model-runner/", "platform": "", "project_url": "https://pypi.org/project/acumos-dcae-model-runner/", "project_urls": {"Homepage": "https://gerrit.acumos.org/r/gitweb?p=python-dcae-model-runner.git"}, "release_url": "https://pypi.org/project/acumos-dcae-model-runner/0.1.3/", "requires_dist": ["acumos (>=0.5.0)", "dcaeapplib (<2.0.0)"], "requires_python": ">=3.5", "summary": "Provides an Acumos model runner for DCAE", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"acumos-dcae-model-runner\">\n<h2>Acumos DCAE Model Runner</h2>\n<p>The Acumos DCAE model runner enables Acumos Python models to be run as if they were\nDCAE components.</p>\n<p>Each Acumos model method is mapped to a subscriber and publisher stream,\nwith <tt>_subscriber</tt> and <tt>_publisher</tt> suffixes respectively. For example,\na model with a <tt>transform</tt> method would have <tt>transform_subscriber</tt> and\n<tt>transform_publisher</tt> streams.</p>\n<p>The model runner implements DCAE APIs such as health checks and configuration\nupdates.</p>\n<p>The <tt>acumos_dcae_model_runner</tt> Python package provides a command line utility\nthat can be used to instantiate the model runner. See the tutorial for more information.</p>\n<p>The <tt>acumos_dcae_model_runner</tt> package should be installed in the docker image\nthat is ultimately on-boarded into DCAE. The model runner CLI utility should be\nthe entry point of that Docker image, as shown in the Dockerfile provided\nin <tt>example/</tt> directory in the root of the <a href=\"https://gerrit.acumos.org/r/gitweb?p=python-dcae-model-runner.git;a=summary\" rel=\"nofollow\">Acumos DCAE Model Runner repository</a>.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>The <tt>acumos_dcae_model_runner</tt> package can be installed with pip like so:</p>\n<pre>pip install acumos_dcae_model_runner\n</pre>\n<p><strong>Note</strong>: installing <tt>acumos_dcae_model_runner</tt> will also install the latest version\nof <a href=\"https://pypi.org/project/dcaeapplib/\" rel=\"nofollow\">dcaeapplib</a>, which is only compatible\nwith DCAE Dublin or later. To use <tt>acumos_dcae_model_runner</tt> with earlier versions\nof DCAE, be sure to pin or bound the version of <tt>dcaeapplib</tt> appropriately. Consult\nthe DCAE documentation for more information.</p>\n</div>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<div id=\"cli-usage\">\n<h3>CLI Usage</h3>\n<p>To execute the model runner, use the provided CLI:</p>\n<pre>$ acumos_dcae_model_runner --help\nusage: acumos_dcae_model_runner <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--timeout TIMEOUT<span class=\"o\">]</span> <span class=\"o\">[</span>--debug<span class=\"o\">]</span> model_dir\n\npositional arguments:\n  model_dir          Directory that contains either the dumped model.zip or\n                     its unzipped contents.\n\noptional arguments:\n  -h, --help         show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --timeout TIMEOUT  Timeout <span class=\"o\">(</span>ms<span class=\"o\">)</span> used when fetching.\n  --debug            Sets the log level to DEBUG\n</pre>\n</div>\n<div id=\"dcae-onboarding-example\">\n<h3>DCAE Onboarding Example</h3>\n<p>The <tt><span class=\"pre\">python-dcae-model-runner</span></tt> repository has an <tt>example/</tt> directory\nthat shows how an Acumos model can be onboarded as a DCAE component.</p>\n<p>After executing the steps below, the directory should have this\nstructure:</p>\n<pre>example/\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 dcae-artifacts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 component.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 number-out.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 numbers-in.json\n\u251c\u2500\u2500 example-model\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 metadata.json\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 model.proto\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 model.zip\n\u251c\u2500\u2500 example_model.py\n\u2514\u2500\u2500 requirements.txt\n</pre>\n<p><strong>Note:</strong> For this example, the <tt>requirements.txt</tt> file should reflect the\npackages and versions listed in <tt><span class=\"pre\">example-model/metadata.json</span></tt>.</p>\n<div id=\"steps\">\n<h4>Steps</h4>\n<div id=\"create-the-acumos-model\">\n<h5>1) Create the Acumos model</h5>\n<p>The <tt>example_model.py</tt> script defines a simple Acumos model that can\nadd two integers together. The following will generate\n<tt><span class=\"pre\">example-model/</span></tt>:</p>\n<pre>python example_model.py\n</pre>\n</div>\n<div id=\"build-the-docker-image\">\n<h5>2) Build the docker image</h5>\n<pre>docker build -t acumos-python-model-test:0.1.0 .\n</pre>\n</div>\n<div id=\"onboard-the-acumos-model-to-dcae\">\n<h5>3) Onboard the Acumos model to DCAE</h5>\n<p>The onboarding procedure involves adding the component and data format\nartifacts provided in <tt><span class=\"pre\">example/dcae-artifacts</span></tt> to the DCAE catalog.</p>\n<p>Refer to the official DCAE onboarding documentation for the full\nprocedure.</p>\n</div>\n</div>\n</div>\n</div>\n<div id=\"acumos-dcae-model-runner-release-notes\">\n<h2>Acumos DCAE Model Runner Release Notes</h2>\n<div id=\"v0-1-3\">\n<h3>v0.1.3</h3>\n<ul>\n<li>Updated major release bound for <tt>dcaeapplib</tt></li>\n</ul>\n</div>\n<div id=\"v0-1-2\">\n<h3>v0.1.2</h3>\n<ul>\n<li>Removed dependency link for <tt>dcaeapplib</tt></li>\n</ul>\n</div>\n<div id=\"v0-1-1\">\n<h3>v0.1.1</h3>\n<ul>\n<li>Updated dependency link for <tt>dcaeapplib</tt>. It released a patch that fixed an authentication error. The <tt>dcaeapplib</tt> dependency link will be removed once <tt>dcaeapplib</tt> is hosted in PyPI.</li>\n</ul>\n</div>\n<div id=\"v0-1-0\">\n<h3>v0.1.0</h3>\n<ul>\n<li>Initial release of the Acumos DCAE Python model runner</li>\n</ul>\n</div>\n</div>\n<div id=\"contributing-guidelines\">\n<h2>Contributing Guidelines</h2>\n<h2 id=\"testing\"><span class=\"section-subtitle\">Testing</span></h2>\n<p>We use a combination of <tt>tox</tt>, <tt>pytest</tt>, and <tt>flake8</tt> to test\n<tt>acumos</tt>. Code which is not PEP8 compliant (aside from E501) will be\nconsidered a failing test. You can use tools like <tt>autopep8</tt> to\n\u201cclean\u201d your code as follows:</p>\n<pre>$ pip install autopep8\n$ <span class=\"nb\">cd</span> python-dcae-model-runner\n$ autopep8 -r --in-place --ignore E501 acumos_dcae_model_runner/\n</pre>\n<p>Run tox directly:</p>\n<pre>$ <span class=\"nb\">cd</span> python-dcae-model-runner\n$ <span class=\"nb\">export</span> <span class=\"nv\">WORKSPACE</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>  <span class=\"c1\"># env var normally provided by Jenkins\n</span>$ tox\n</pre>\n<p>You can also specify certain tox environments to test:</p>\n<pre>$ tox -e py34  <span class=\"c1\"># only test against Python 3.4\n</span>$ tox -e flake8  <span class=\"c1\"># only lint code</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5614951, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "04b26acc9f83d151d4e2d19f4ee4d309", "sha256": "aa8252506330f8dd9fc58073b5acc08a02618d04a810e4c3227b16a0815ba2f1"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "04b26acc9f83d151d4e2d19f4ee4d309", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10476, "upload_time": "2018-03-09T19:35:54", "upload_time_iso_8601": "2018-03-09T19:35:54.013778Z", "url": "https://files.pythonhosted.org/packages/56/1a/b1a82541e267b78dcd00279b9865684b637974ba831f1ffb2806028a63ed/acumos_dcae_model_runner-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aac3c981d30f17a35165f8e129de6439", "sha256": "bd2555b26b675c7ebba710bcb7247ce85e28faab77d6612bbaf83e83ce36d86a"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.0.tar.gz", "has_sig": false, "md5_digest": "aac3c981d30f17a35165f8e129de6439", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7270, "upload_time": "2018-03-09T19:35:55", "upload_time_iso_8601": "2018-03-09T19:35:55.616911Z", "url": "https://files.pythonhosted.org/packages/cb/76/6135a8ddccf6f00fd217c19edbe965eb68d586dd54b2cd2cb18ace6ceebd/acumos_dcae_model_runner-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b6ad3db477216a5181711b8ffe55e540", "sha256": "acb8ac6676a8015bbcd4c903e5040662aa828da5350b2522d8e2a80201d02a8b"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "b6ad3db477216a5181711b8ffe55e540", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10476, "upload_time": "2018-03-19T21:42:06", "upload_time_iso_8601": "2018-03-19T21:42:06.398533Z", "url": "https://files.pythonhosted.org/packages/87/54/6f92f7b7a1d37c48aaea03efec1f334feb194be1b15c17fb0b133edd1591/acumos_dcae_model_runner-0.1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59ac83adee53ec4324732ec9b2243116", "sha256": "69f31264519eef11096441db11700d81afcc4a75fcf4dede6093c31982051646"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.1.tar.gz", "has_sig": false, "md5_digest": "59ac83adee53ec4324732ec9b2243116", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7236, "upload_time": "2018-03-19T21:42:07", "upload_time_iso_8601": "2018-03-19T21:42:07.671694Z", "url": "https://files.pythonhosted.org/packages/f5/51/10bf1ede9a766bf9205325f8bfb411fe386ba306950df9649521825f88f7/acumos_dcae_model_runner-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a468332dcac38d6a317e693b42438290", "sha256": "adada27bba87d811e8d2a03e63b7711a63979ff10487ac70a939ab7235449563"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "a468332dcac38d6a317e693b42438290", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6890, "upload_time": "2018-06-20T01:11:21", "upload_time_iso_8601": "2018-06-20T01:11:21.417011Z", "url": "https://files.pythonhosted.org/packages/4f/68/46f9654ed7913c66787ddc9e43e31a7a11ee640b672bae7c8f195f10fb3c/acumos_dcae_model_runner-0.1.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30b6bf3d74684468c903148dd41a85a9", "sha256": "5668b85dd5a4590d311715995bca20345f04477ecba7efea43e3b561020fa1da"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.2.tar.gz", "has_sig": false, "md5_digest": "30b6bf3d74684468c903148dd41a85a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7127, "upload_time": "2018-06-20T01:11:22", "upload_time_iso_8601": "2018-06-20T01:11:22.147846Z", "url": "https://files.pythonhosted.org/packages/f2/2f/97460b8c209dc94a151fc84297533bd891941975d28e2f28b1abff532264/acumos_dcae_model_runner-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fa50ea87de67b6b0de152aa1cdd734f2", "sha256": "f0777cd62032f887c1f778ab91d56f6f35a5579706d8bc9f77c823fea8efbec7"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "fa50ea87de67b6b0de152aa1cdd734f2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5", "size": 10457, "upload_time": "2019-07-31T18:43:01", "upload_time_iso_8601": "2019-07-31T18:43:01.944706Z", "url": "https://files.pythonhosted.org/packages/50/b6/5d988a62c3b1648db2ef7d0384db0d9d0e75648b4b501cba2ac3e58f7592/acumos_dcae_model_runner-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "218a47046d5f8010e2ad2dcab9addfd0", "sha256": "b10478dd4d826a3786cc6c29dda51fa1ddd0d7e2b77e84becc3a9403e2ae5a7d"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.3.tar.gz", "has_sig": false, "md5_digest": "218a47046d5f8010e2ad2dcab9addfd0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7418, "upload_time": "2019-07-31T18:43:03", "upload_time_iso_8601": "2019-07-31T18:43:03.518066Z", "url": "https://files.pythonhosted.org/packages/70/51/bf001d0304d0350cde194989ea0f3748732ee2168d005b279a2de3b66b0c/acumos_dcae_model_runner-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa50ea87de67b6b0de152aa1cdd734f2", "sha256": "f0777cd62032f887c1f778ab91d56f6f35a5579706d8bc9f77c823fea8efbec7"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "fa50ea87de67b6b0de152aa1cdd734f2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.5", "size": 10457, "upload_time": "2019-07-31T18:43:01", "upload_time_iso_8601": "2019-07-31T18:43:01.944706Z", "url": "https://files.pythonhosted.org/packages/50/b6/5d988a62c3b1648db2ef7d0384db0d9d0e75648b4b501cba2ac3e58f7592/acumos_dcae_model_runner-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "218a47046d5f8010e2ad2dcab9addfd0", "sha256": "b10478dd4d826a3786cc6c29dda51fa1ddd0d7e2b77e84becc3a9403e2ae5a7d"}, "downloads": -1, "filename": "acumos_dcae_model_runner-0.1.3.tar.gz", "has_sig": false, "md5_digest": "218a47046d5f8010e2ad2dcab9addfd0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7418, "upload_time": "2019-07-31T18:43:03", "upload_time_iso_8601": "2019-07-31T18:43:03.518066Z", "url": "https://files.pythonhosted.org/packages/70/51/bf001d0304d0350cde194989ea0f3748732ee2168d005b279a2de3b66b0c/acumos_dcae_model_runner-0.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:14 2020"}