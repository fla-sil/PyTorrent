{"info": {"author": "Tony Roberts", "author_email": "tony@pyxll.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "A Python package to ease writing tables to Excel\n================================================\n\n|Status| |Docs|\n\nDocumentation here: https://xltable.readthedocs.org/en/latest\n\nxltable is an API for writing tabular data and charts to Excel. It is not a replacement for other Excel writing\npackages such as xlsxwriter, xlwt or pywin32. Instead it uses those packages as a back end to write the Excel files\n(or to write to Excel directly in the case of pywin32) and provides a higer level abstraction that allows the\nprogrammer to deal with tables of data rather than worry about writing individual cells.\n\nThe main feature that makes xltable more useful than just writing the Excel files directly is that it can\nhandle tables with formulas that relate to cells in the workbook without having to know in advance where\nthose tables will be placed on a worksheet. Only when all the tables have been added to the workbook and\nthe workbook is being written are formulas resolved to their final cell addresses.\n\nTables of data are constructed using pandas.DataFrame objects. These can contain formulas relating to columns or\ncells in the same table or other tables in the same workbook.\n\nAs well as writing tables to Excel, xltable can also write charts using tables as source data.\n\nIntegrating xltable into Excel can be done using PyXLL, https://www.pyxll.com.\nPyXLL embeds a Python interpreter within Excel and makes it possible to use Excel as a front end user interface\nto Python code. For example, you could configure a custom ribbon control for users to run Python reports and have\nthe results written back to Excel.\n\nExample::\n\n    from xltable import *\n    import pandas as pa\n\n    # create a dataframe with three columns where the last is the sum of the first two\n    dataframe = pa.DataFrame({\n            \"col_1\": [1, 2, 3],\n            \"col_2\": [4, 5, 6],\n            \"col_3\": Cell(\"col_1\") + Cell(\"col_2\"),\n    }, columns=[\"col_1\", \"col_2\", \"col_3\"])\n\n    # create the named xlwriter Table instance\n    table = Table(\"table\", dataframe)\n\n    # create the Workbook and Worksheet objects and add table to the sheet\n    sheet = Worksheet(\"Sheet1\")\n    sheet.add_table(table)\n\n    workbook = Workbook(\"example.xlsx\")\n    workbook.add_sheet(sheet)\n\n    # write the workbook to the file (requires xlsxwriter)\n    workbook.to_xlsx()\n\n.. |Status| image:: https://travis-ci.org/renshawbay/xltable.svg?branch=master\n   :target: https://travis-ci.org/renshawbay/xltable\n\n.. |Docs| image:: https://readthedocs.org/projects/xltable/badge/?version=latest\n   :target: https://readthedocs.org/projects/xltable/?badge=latest\n   :alt: Documentation Status\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fkarb/xltable", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "xltable", "package_url": "https://pypi.org/project/xltable/", "platform": "", "project_url": "https://pypi.org/project/xltable/", "project_urls": {"Homepage": "https://github.com/fkarb/xltable"}, "release_url": "https://pypi.org/project/xltable/0.2.13/", "requires_dist": null, "requires_python": "", "summary": "A Python package to ease writing tables of data to Excel", "version": "0.2.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/renshawbay/xltable\" rel=\"nofollow\"><img alt=\"Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dcd27e1a0e144cd58457a7705353964c834f28eb/68747470733a2f2f7472617669732d63692e6f72672f72656e736861776261792f786c7461626c652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://readthedocs.org/projects/xltable/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/407ab370ad35a262c7b1bee9e1d5bdd483966082/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f786c7461626c652f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Documentation here: <a href=\"https://xltable.readthedocs.org/en/latest\" rel=\"nofollow\">https://xltable.readthedocs.org/en/latest</a></p>\n<p>xltable is an API for writing tabular data and charts to Excel. It is not a replacement for other Excel writing\npackages such as xlsxwriter, xlwt or pywin32. Instead it uses those packages as a back end to write the Excel files\n(or to write to Excel directly in the case of pywin32) and provides a higer level abstraction that allows the\nprogrammer to deal with tables of data rather than worry about writing individual cells.</p>\n<p>The main feature that makes xltable more useful than just writing the Excel files directly is that it can\nhandle tables with formulas that relate to cells in the workbook without having to know in advance where\nthose tables will be placed on a worksheet. Only when all the tables have been added to the workbook and\nthe workbook is being written are formulas resolved to their final cell addresses.</p>\n<p>Tables of data are constructed using pandas.DataFrame objects. These can contain formulas relating to columns or\ncells in the same table or other tables in the same workbook.</p>\n<p>As well as writing tables to Excel, xltable can also write charts using tables as source data.</p>\n<p>Integrating xltable into Excel can be done using PyXLL, <a href=\"https://www.pyxll.com\" rel=\"nofollow\">https://www.pyxll.com</a>.\nPyXLL embeds a Python interpreter within Excel and makes it possible to use Excel as a front end user interface\nto Python code. For example, you could configure a custom ribbon control for users to run Python reports and have\nthe results written back to Excel.</p>\n<p>Example:</p>\n<pre>from xltable import *\nimport pandas as pa\n\n# create a dataframe with three columns where the last is the sum of the first two\ndataframe = pa.DataFrame({\n        \"col_1\": [1, 2, 3],\n        \"col_2\": [4, 5, 6],\n        \"col_3\": Cell(\"col_1\") + Cell(\"col_2\"),\n}, columns=[\"col_1\", \"col_2\", \"col_3\"])\n\n# create the named xlwriter Table instance\ntable = Table(\"table\", dataframe)\n\n# create the Workbook and Worksheet objects and add table to the sheet\nsheet = Worksheet(\"Sheet1\")\nsheet.add_table(table)\n\nworkbook = Workbook(\"example.xlsx\")\nworkbook.add_sheet(sheet)\n\n# write the workbook to the file (requires xlsxwriter)\nworkbook.to_xlsx()\n</pre>\n\n          </div>"}, "last_serial": 3531569, "releases": {"0.2.10": [{"comment_text": "", "digests": {"md5": "685595497cefdd4da7c877488d0bf11e", "sha256": "c7f0ae8899b4a193c7385fdc3429dcca7db98663008e163ee76a129fa0658074"}, "downloads": -1, "filename": "xltable-0.2.10.tar.gz", "has_sig": false, "md5_digest": "685595497cefdd4da7c877488d0bf11e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18066, "upload_time": "2016-12-05T14:17:00", "upload_time_iso_8601": "2016-12-05T14:17:00.268684Z", "url": "https://files.pythonhosted.org/packages/be/52/26ff922c674ee6c27c4c1ea2206972244159c1f8f3885bacf818c72d8f58/xltable-0.2.10.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "f7f1e4b2f5e69ee420cb103ea69fd8fb", "sha256": "f316c86dbf7c5a383e4ad2e6d0d8c24932ac313f9e8bbcc6cc08422250d0f899"}, "downloads": -1, "filename": "xltable-0.2.11.tar.gz", "has_sig": false, "md5_digest": "f7f1e4b2f5e69ee420cb103ea69fd8fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19158, "upload_time": "2017-09-30T16:02:02", "upload_time_iso_8601": "2017-09-30T16:02:02.052337Z", "url": "https://files.pythonhosted.org/packages/b8/89/ee4d75295a9ab945cf27b1231383cab4bb156d194ad350f256d90f40eadd/xltable-0.2.11.tar.gz", "yanked": false}], "0.2.12": [{"comment_text": "", "digests": {"md5": "a61e5e7750f2e50b183655337c7032e8", "sha256": "4e05be8d23271db1f650e63fc3a5fbb00ade4d403c5e007f61f2bc563473758a"}, "downloads": -1, "filename": "xltable-0.2.12.tar.gz", "has_sig": false, "md5_digest": "a61e5e7750f2e50b183655337c7032e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19907, "upload_time": "2017-12-06T16:22:45", "upload_time_iso_8601": "2017-12-06T16:22:45.356954Z", "url": "https://files.pythonhosted.org/packages/88/07/85702bd5f80e2315959481bd165be79b6dd22cbfbdd1e5498d0ed1cd3776/xltable-0.2.12.tar.gz", "yanked": false}], "0.2.13": [{"comment_text": "", "digests": {"md5": "6f24c5dad3a13a88dc4c2bd17cf4abb1", "sha256": "3976bca3c63a1f4bbd0e4aaf5ec21f34a886da22cceb762a51621a7a56056724"}, "downloads": -1, "filename": "xltable-0.2.13.tar.gz", "has_sig": false, "md5_digest": "6f24c5dad3a13a88dc4c2bd17cf4abb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19910, "upload_time": "2018-01-29T14:16:33", "upload_time_iso_8601": "2018-01-29T14:16:33.593068Z", "url": "https://files.pythonhosted.org/packages/b4/55/dfb1d482566f05e2254019c3e313b177ebe7a22d0121f38c400d7b1339f4/xltable-0.2.13.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "d7000bdbc2f462c9affcbbf406c68831", "sha256": "218491f28620a6b70421a9d75f1af92dba24119491ba272813d9c9a14a184935"}, "downloads": -1, "filename": "xltable-0.2.3.zip", "has_sig": false, "md5_digest": "d7000bdbc2f462c9affcbbf406c68831", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20736, "upload_time": "2016-01-18T15:40:25", "upload_time_iso_8601": "2016-01-18T15:40:25.985605Z", "url": "https://files.pythonhosted.org/packages/db/b0/e6cf76dda9f296b34b297dc2a1dca0483fb8fbb37889375d10517dcc527c/xltable-0.2.3.zip", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "7c3a978a5fb77c5e51598e62b3437f10", "sha256": "a6089807d724fcb7187266e20f44b15b739c4d936e445ab425e12650646bff04"}, "downloads": -1, "filename": "xltable-0.2.5.zip", "has_sig": false, "md5_digest": "7c3a978a5fb77c5e51598e62b3437f10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21247, "upload_time": "2016-06-20T10:59:48", "upload_time_iso_8601": "2016-06-20T10:59:48.974343Z", "url": "https://files.pythonhosted.org/packages/da/b3/91177f7dcfdde286bb1461ccbf0c68c40be86adc2ea8ba67554ad10d6447/xltable-0.2.5.zip", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "bb353d5d62165b29332c18f8d62368b8", "sha256": "29c043b66b3f0db0e3553c591778d5f9380bac67b7ce6f4a5a7a4861f17ba118"}, "downloads": -1, "filename": "xltable-0.2.6.zip", "has_sig": false, "md5_digest": "bb353d5d62165b29332c18f8d62368b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21326, "upload_time": "2016-06-22T18:16:46", "upload_time_iso_8601": "2016-06-22T18:16:46.842481Z", "url": "https://files.pythonhosted.org/packages/49/3a/65a37afde9ce8697a6b1329ca95469489a51ef98ec3ca86d1d250b57b1e6/xltable-0.2.6.zip", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "da3e25474fbbffa700ee34645991adb6", "sha256": "59e5460c4197e9761b10a6c9d4791ce7a8eef7a6e9728b96d22504ab798c39a5"}, "downloads": -1, "filename": "xltable-0.2.7.tar.gz", "has_sig": false, "md5_digest": "da3e25474fbbffa700ee34645991adb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16978, "upload_time": "2016-07-11T15:51:09", "upload_time_iso_8601": "2016-07-11T15:51:09.680955Z", "url": "https://files.pythonhosted.org/packages/e3/a9/b3aed53398bab25499292f0eeab6c7fa2b91f3a929d16caf2deb8f6bada0/xltable-0.2.7.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "b567b2ab9152dbc9d34a59e4ac541067", "sha256": "b38b1217ad298ded30c8817fdab1a3f595bfeef815a2ea8d68f3414460b3cf37"}, "downloads": -1, "filename": "xltable-0.2.7.zip", "has_sig": false, "md5_digest": "b567b2ab9152dbc9d34a59e4ac541067", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21403, "upload_time": "2016-07-08T12:31:37", "upload_time_iso_8601": "2016-07-08T12:31:37.077831Z", "url": "https://files.pythonhosted.org/packages/f3/fa/d728762f4476a1a90a9509a6ec8397df531235f17be43017699448412dd9/xltable-0.2.7.zip", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "134876f08991ba200fb181346e12a7cc", "sha256": "c268f5b91218dd623358831b4323037eedc46aa0d3f9be38288ba12d54c8ed3c"}, "downloads": -1, "filename": "xltable-0.2.8.zip", "has_sig": false, "md5_digest": "134876f08991ba200fb181346e12a7cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21815, "upload_time": "2016-07-21T16:23:52", "upload_time_iso_8601": "2016-07-21T16:23:52.892174Z", "url": "https://files.pythonhosted.org/packages/f5/49/8c872b5f2063da4c5795147b7564968320f62a06ea56afa7d059ef0fcf25/xltable-0.2.8.zip", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "454159526a780f5433a85778ba1ec186", "sha256": "62b26a57ecd00264cee1ac81acd37e4acc22a52e6229cfa99bfdea8563f38891"}, "downloads": -1, "filename": "xltable-0.2.9.tar.gz", "has_sig": false, "md5_digest": "454159526a780f5433a85778ba1ec186", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18019, "upload_time": "2016-12-01T13:40:53", "upload_time_iso_8601": "2016-12-01T13:40:53.666723Z", "url": "https://files.pythonhosted.org/packages/3a/be/a3466a0cd3a355504a831af9b23809ce3663f7a8c643aab10572d138b115/xltable-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f24c5dad3a13a88dc4c2bd17cf4abb1", "sha256": "3976bca3c63a1f4bbd0e4aaf5ec21f34a886da22cceb762a51621a7a56056724"}, "downloads": -1, "filename": "xltable-0.2.13.tar.gz", "has_sig": false, "md5_digest": "6f24c5dad3a13a88dc4c2bd17cf4abb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19910, "upload_time": "2018-01-29T14:16:33", "upload_time_iso_8601": "2018-01-29T14:16:33.593068Z", "url": "https://files.pythonhosted.org/packages/b4/55/dfb1d482566f05e2254019c3e313b177ebe7a22d0121f38c400d7b1339f4/xltable-0.2.13.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:12 2020"}