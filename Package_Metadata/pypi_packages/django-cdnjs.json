{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# Django CDNJS\n\nDjango CDNJS is the small template tag, that allows you to load external cdn\nresources by name. You can download any required CDN as well as use only CDN's\nURL by disabling/enabling resource downloading.\n\n# How it works\n\nWebsite https://cdnjs.com has an [API](https://cdnjs.com/api) for all cdn \nrepositories stored at database. This API was used in `django-cdnjs`.\n\n# Installation\n\nInstall pip-package\n\n    pip install django-cdnjs\n\nAdd `cdnjs` to your installed apps:\n\n    INSTALLED_APPS = (\n        ...\n        'cdnjs',\n    )\n    \n    # Configure settings\n    CDNJS_STATIC_ROOT = os.path.join(BASE_DIR, 'static', 'cdn')\n    CDNJS_STATIC_URL = '/static/cdn/' # With \"/\" at end of string\n\n# Usage example\n\nIf you will not provide filename from repository, which url you need, \ndjango-cdnjs will return default repository file. For example `font-awesome` \ndefault file is `css/font-awesome.min.css`\n\nSame for version - django-cdnjs will load latest available version and **not\nalways stable**\n\n**default-files.html**\n\n    {% load cdnjstag %}\n    \n    <!DOCTYPE html>\n    ...\n    \n    <link rel=\"stylesheet\" href=\"{% cdn \"font-awesome\" %}\">\n    <script type=\"text/javascript\" src=\"{% cdn \"jquery\" %}\"></script>\n    ...\n    \nUsually you can specify which version you need to be loaded. Just add slash \nafter repository name and specify version. Example:\n    \n**specify-version.html**\n\n    {% load cdnjstag %}\n    \n    <!DOCTYPE html>\n    ...\n    \n    <link rel=\"stylesheet\" href=\"{% cdn \"font-awesome/4.7.0\" %}\">\n    <script type=\"text/javascript\" src=\"{% cdn \"jquery/3.2.1\" %}\"></script>\n    ...\n    \nSecond optional argument of `cdn` tag is the file which should be selected to\nbuild cdn-url or local-uri. For example, repository of the `boostrap` css \nframework has css-files as well as js. CDNJS provides js-file as the default,\nso we need to specify manually which file do we need.\n    \n**specify-file.html**\n\n    {% load cdnjstag %}\n    \n    <!DOCTYPE html>\n    ...\n    \n    <link rel=\"stylesheet\" href=\"{% cdn \"bootstrap/3.3.7\" \"bootstrap.min.css\" %}\">\n    <script type=\"text/javascript\" src=\"{% cdn \"jquery/3.2.1\" %}\"></script>\n    <script type=\"text/javascript\" src=\"{% cdn \"bootstrap/3.3.7\" \"bootstrap.min.js\" %}\"></script>\n    ...\n    \nAnd here you can see that I had some typo in repository name. But `cdnjs` API \nreturns results by query term `bootstrap` and `twitter-bootstrap` is the first\nof them. So you can make typos. \n \n# Configuration\n\n### Required options\n\nAnyway, you should provide two django settings module properties\n\n    # This property uses not only for storing remote repositories,\n    # but for cdn urls cache too. So this option is required. \n    CDNJS_STATIC_ROOT = os.path.join(BASE_DIR, 'static', 'cdn')\n        \n    # This option is required, because I don't now why. You should\n    # know that it's so. Even if you using FORCE_CDN.\n    # If you want, you can contribute it and fix. =)\n    CDNJS_STATIC_URL = '/static/cdn/' # With \"/\" at end of string\n    \n\n### Do not load remote repository\n\nBy default `cdnjs` downloads remote repository to be used without accessing \nremote resources.\n\n    # If you need to use only local urli without CDN loading,\n    # just set this option to True\n    CDNJS_USE_LOCAL = True\n     \n    # True - download remote repository and use local URI\n    # False - (default) do not download remote repository and use CDN URI\n    \n    \n### Settings\n\n|Option|Default|Required|Comment|\n|---|---|---|---|\n|CDNJS_STATIC_ROOT|None|True|Absolute path to the cdn static root.|\n|CDNJS_STATIC_URL|None|True|Absolute path to the cdn static url.|\n|CDNJS_USE_LOCAL|False|False|Should tag download requested repository and use local URI instead of CDN URI.|", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/duverse/django-cdnjs/tarball/v2017.10.20-2.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/duverse/django-cdnjs", "keywords": "django,cdn,cdnjs,templatetag", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-cdnjs", "package_url": "https://pypi.org/project/django-cdnjs/", "platform": "", "project_url": "https://pypi.org/project/django-cdnjs/", "project_urls": {"Download": "https://github.com/duverse/django-cdnjs/tarball/v2017.10.20-2.zip", "Homepage": "https://github.com/duverse/django-cdnjs"}, "release_url": "https://pypi.org/project/django-cdnjs/2018.10.11.post1/", "requires_dist": null, "requires_python": "", "summary": "Django template plugin to be used to simplify static CDN resources connecting.", "version": "2018.10.11.post1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Django CDNJS</h1>\n<p>Django CDNJS is the small template tag, that allows you to load external cdn\nresources by name. You can download any required CDN as well as use only CDN's\nURL by disabling/enabling resource downloading.</p>\n<h1>How it works</h1>\n<p>Website <a href=\"https://cdnjs.com\" rel=\"nofollow\">https://cdnjs.com</a> has an <a href=\"https://cdnjs.com/api\" rel=\"nofollow\">API</a> for all cdn\nrepositories stored at database. This API was used in <code>django-cdnjs</code>.</p>\n<h1>Installation</h1>\n<p>Install pip-package</p>\n<pre><code>pip install django-cdnjs\n</code></pre>\n<p>Add <code>cdnjs</code> to your installed apps:</p>\n<pre><code>INSTALLED_APPS = (\n    ...\n    'cdnjs',\n)\n\n# Configure settings\nCDNJS_STATIC_ROOT = os.path.join(BASE_DIR, 'static', 'cdn')\nCDNJS_STATIC_URL = '/static/cdn/' # With \"/\" at end of string\n</code></pre>\n<h1>Usage example</h1>\n<p>If you will not provide filename from repository, which url you need,\ndjango-cdnjs will return default repository file. For example <code>font-awesome</code>\ndefault file is <code>css/font-awesome.min.css</code></p>\n<p>Same for version - django-cdnjs will load latest available version and <strong>not\nalways stable</strong></p>\n<p><strong>default-files.html</strong></p>\n<pre><code>{% load cdnjstag %}\n\n&lt;!DOCTYPE html&gt;\n...\n\n&lt;link rel=\"stylesheet\" href=\"{% cdn \"font-awesome\" %}\"&gt;\n&lt;script type=\"text/javascript\" src=\"{% cdn \"jquery\" %}\"&gt;&lt;/script&gt;\n...\n</code></pre>\n<p>Usually you can specify which version you need to be loaded. Just add slash\nafter repository name and specify version. Example:</p>\n<p><strong>specify-version.html</strong></p>\n<pre><code>{% load cdnjstag %}\n\n&lt;!DOCTYPE html&gt;\n...\n\n&lt;link rel=\"stylesheet\" href=\"{% cdn \"font-awesome/4.7.0\" %}\"&gt;\n&lt;script type=\"text/javascript\" src=\"{% cdn \"jquery/3.2.1\" %}\"&gt;&lt;/script&gt;\n...\n</code></pre>\n<p>Second optional argument of <code>cdn</code> tag is the file which should be selected to\nbuild cdn-url or local-uri. For example, repository of the <code>boostrap</code> css\nframework has css-files as well as js. CDNJS provides js-file as the default,\nso we need to specify manually which file do we need.</p>\n<p><strong>specify-file.html</strong></p>\n<pre><code>{% load cdnjstag %}\n\n&lt;!DOCTYPE html&gt;\n...\n\n&lt;link rel=\"stylesheet\" href=\"{% cdn \"bootstrap/3.3.7\" \"bootstrap.min.css\" %}\"&gt;\n&lt;script type=\"text/javascript\" src=\"{% cdn \"jquery/3.2.1\" %}\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"{% cdn \"bootstrap/3.3.7\" \"bootstrap.min.js\" %}\"&gt;&lt;/script&gt;\n...\n</code></pre>\n<p>And here you can see that I had some typo in repository name. But <code>cdnjs</code> API\nreturns results by query term <code>bootstrap</code> and <code>twitter-bootstrap</code> is the first\nof them. So you can make typos.</p>\n<h1>Configuration</h1>\n<h3>Required options</h3>\n<p>Anyway, you should provide two django settings module properties</p>\n<pre><code># This property uses not only for storing remote repositories,\n# but for cdn urls cache too. So this option is required. \nCDNJS_STATIC_ROOT = os.path.join(BASE_DIR, 'static', 'cdn')\n    \n# This option is required, because I don't now why. You should\n# know that it's so. Even if you using FORCE_CDN.\n# If you want, you can contribute it and fix. =)\nCDNJS_STATIC_URL = '/static/cdn/' # With \"/\" at end of string\n</code></pre>\n<h3>Do not load remote repository</h3>\n<p>By default <code>cdnjs</code> downloads remote repository to be used without accessing\nremote resources.</p>\n<pre><code># If you need to use only local urli without CDN loading,\n# just set this option to True\nCDNJS_USE_LOCAL = True\n \n# True - download remote repository and use local URI\n# False - (default) do not download remote repository and use CDN URI\n</code></pre>\n<h3>Settings</h3>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Default</th>\n<th>Required</th>\n<th>Comment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CDNJS_STATIC_ROOT</td>\n<td>None</td>\n<td>True</td>\n<td>Absolute path to the cdn static root.</td>\n</tr>\n<tr>\n<td>CDNJS_STATIC_URL</td>\n<td>None</td>\n<td>True</td>\n<td>Absolute path to the cdn static url.</td>\n</tr>\n<tr>\n<td>CDNJS_USE_LOCAL</td>\n<td>False</td>\n<td>False</td>\n<td>Should tag download requested repository and use local URI instead of CDN URI.</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 4364320, "releases": {"2017.10.19.post0": [{"comment_text": "", "digests": {"md5": "ce79fd6b6eadfb4ef409f7d0926e9423", "sha256": "f1a8fea22bf4fe40d920b49318d879d164354029caf1ffe7db342679581ca882"}, "downloads": -1, "filename": "django-cdnjs-2017.10.19.post0.tar.gz", "has_sig": false, "md5_digest": "ce79fd6b6eadfb4ef409f7d0926e9423", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5783, "upload_time": "2017-10-20T08:30:15", "upload_time_iso_8601": "2017-10-20T08:30:15.102883Z", "url": "https://files.pythonhosted.org/packages/dc/0b/e48f273986903cef689cb3d3e50bf48b47418abef72cffe586e947dfdf74/django-cdnjs-2017.10.19.post0.tar.gz", "yanked": false}], "2017.10.20.post1": [{"comment_text": "", "digests": {"md5": "534ca12fa6a4e960f086cde8b237d47c", "sha256": "e06fb55137538cea7c513306105d90e49e11c396fe2f3a0694abcbe16036e87c"}, "downloads": -1, "filename": "django-cdnjs-2017.10.20.post1.tar.gz", "has_sig": false, "md5_digest": "534ca12fa6a4e960f086cde8b237d47c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5777, "upload_time": "2017-10-20T09:54:06", "upload_time_iso_8601": "2017-10-20T09:54:06.974943Z", "url": "https://files.pythonhosted.org/packages/75/21/4aa65b0f7486c8ae0d32226872c9afb703220590af049cfbef58df7987e9/django-cdnjs-2017.10.20.post1.tar.gz", "yanked": false}], "2017.10.20.post2": [{"comment_text": "", "digests": {"md5": "625fae4a07e84c1cdfe35e0725020e5c", "sha256": "3044347c62a15196128aebf9bd1a08a4bdcf442e25ab23da28e2d195281c9683"}, "downloads": -1, "filename": "django-cdnjs-2017.10.20.post2.tar.gz", "has_sig": false, "md5_digest": "625fae4a07e84c1cdfe35e0725020e5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5789, "upload_time": "2017-10-20T10:31:33", "upload_time_iso_8601": "2017-10-20T10:31:33.779684Z", "url": "https://files.pythonhosted.org/packages/2b/6f/66a81e31c4970d84c3cc47807174f6fcea150f545730849a63596e068b84/django-cdnjs-2017.10.20.post2.tar.gz", "yanked": false}], "2018.10.11.post1": [{"comment_text": "", "digests": {"md5": "7c349e919fe5a369cf8452e557387061", "sha256": "bbf6a77346ebd7cbc7496b9a9b75b220a44f54a21d2de3a3eafb68b5cd4d0607"}, "downloads": -1, "filename": "django-cdnjs-2018.10.11.post1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "7c349e919fe5a369cf8452e557387061", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9626, "upload_time": "2018-10-11T13:13:19", "upload_time_iso_8601": "2018-10-11T13:13:19.385410Z", "url": "https://files.pythonhosted.org/packages/bb/46/4084f38816860dcc7f132f9af60a36e9a0a1e1e564822323b74e8c3f7fae/django-cdnjs-2018.10.11.post1.linux-x86_64.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c349e919fe5a369cf8452e557387061", "sha256": "bbf6a77346ebd7cbc7496b9a9b75b220a44f54a21d2de3a3eafb68b5cd4d0607"}, "downloads": -1, "filename": "django-cdnjs-2018.10.11.post1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "7c349e919fe5a369cf8452e557387061", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9626, "upload_time": "2018-10-11T13:13:19", "upload_time_iso_8601": "2018-10-11T13:13:19.385410Z", "url": "https://files.pythonhosted.org/packages/bb/46/4084f38816860dcc7f132f9af60a36e9a0a1e1e564822323b74e8c3f7fae/django-cdnjs-2018.10.11.post1.linux-x86_64.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:13 2020"}