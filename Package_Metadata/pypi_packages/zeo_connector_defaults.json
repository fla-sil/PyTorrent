{"info": {"author": "Bystroushaak", "author_email": "bystrousak@kitakitsune.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7"], "description": "Introduction\n============\n\n.. image:: https://badge.fury.io/py/zeo_connector_defaults.png\n    :target: https://pypi.python.org/pypi/zeo_connector_defaults\n\n.. image:: https://img.shields.io/pypi/dm/zeo_connector_defaults.svg\n    :target: https://pypi.python.org/pypi/zeo_connector_defaults\n\n.. image:: https://img.shields.io/pypi/l/zeo_connector_defaults.svg\n\n.. image:: https://img.shields.io/github/issues/Bystroushaak/zeo_connector_defaults.svg\n    :target: https://github.com/Bystroushaak/zeo_connector_defaults/issues\n\nDefault configuration files and configuration file generator for zeo_connector_.\n\n.. _zeo_connector: https://github.com/Bystroushaak/zeo_connector\n\nDocumentation\n-------------\n\nThis project provides generators of the testing environment for the ZEO-related tests. It also provides generator, for the basic ZEO configuration files.\n\nzeo_connector_gen_defaults.py\n+++++++++++++++++++++++++++++\n\nThis script simplifies the process of generation of ZEO configuration files.\n\nZEO tests\n+++++++++\n\nTypically, when you test your program which is using the ZEO database, you need to generate the database files, then run new thread with ``runzeo`` program, do tests, cleanup and stop the thread.\n\nThis module provides two functions, which do exactly this:\n\n    - zeo_connector_defaults.generate_environment()\n    - zeo_connector_defaults.cleanup_environment()\n\ngenerate_environment\n^^^^^^^^^^^^^^^^^^^^\nThis function will create temporary directory in ``/tmp`` and copy template files for ZEO client and server into this directory. Then it starts new thread with ``runzeo`` program using the temporary server configuration file.\n\nNames of the files may be resolved using ``tmp_context_name()`` function.\n\nNote:\n    This function works best, if added to setup part of your test environment.\n\ncleanup_environment\n^^^^^^^^^^^^^^^^^^^\n\nFunction, which stops the running ``runzeo`` thread and delete all the temporary files.\n\nNote:\n    This function works best, if added to setup part of your test environment.\n\nContext functions\n^^^^^^^^^^^^^^^^^\n\nThere is also two `temp environment access functions`:\n\n    - tmp_context_name()\n    - tmp_context()\n\nBoth of them take one `fn` argument and return name of the file (``tmp_context_name()``) or content of the file (``tmp_context()``) in context of random temporary directory.\n\nFor example:\n\n.. code-block:: python\n\n    tmp_context_name(\"zeo_client.conf\")\n\nreturns the absolute path to the file ``zeo_client.conf``, which may be for example ``/tmp/tmp1r5keh/zeo_client.conf``.\n\nYou may also call it without the arguments, which will return just the name of the temporary directory:\n\n.. code-block:: python\n\n    tmp_context_name()\n\nwhich should return something like ``/tmp/tmp1r5keh``.\n\nTests example\n+++++++++++++\n\nHere is the example how your test may look like:\n\n.. code-block:: python\n\n    #! /usr/bin/env python\n    # -*- coding: utf-8 -*-\n    #\n    # Interpreter version: python 2.7\n    #\n    # Imports =====================================================================\n    import pytest\n\n    from zeo_connector_defaults import generate_environment\n    from zeo_connector_defaults import cleanup_environment\n    from zeo_connector_defaults import tmp_context_name\n\n\n    # Setup =======================================================================\n    def setup_module(module):\n        generate_environment()\n\n\n    def teardown_module(module):\n        cleanup_environment()\n\n\n    # Fixtures ====================================================================\n    @pytest.fixture\n    def zeo_conf_wrapper():\n        return ZEOConfWrapper(\n            conf_path=tmp_context_name(\"zeo_client.conf\"),\n        ...\n\n    # Tests =======================================================================\n    def test_something(zeo_conf_wrapper):\n        ...\n\nInstallation\n------------\n\nModule is `hosted at PYPI <https://pypi.python.org/pypi/zeo_connector_defaults>`_, and can be easily installed using `PIP`_::\n\n    sudo pip install zeo_connector_defaults\n\n.. _PIP: http://en.wikipedia.org/wiki/Pip_%28package_manager%29\n\n\nSource code\n-----------\n\nProject is released under the MIT license. Source code can be found at GitHub:\n\n- https://github.com/Bystroushaak/zeo_connector_defaults\n\n\nChangelog\n=========\n\n0.2.2\n-----\n    - Small bugfix.\n    - Removed unused files.\n\n0.2.1\n-----\n    - Switched to complete randomly generated ZEO environment (random name in /tmp, and random ports for ZEO server process).\n\n0.2.0\n-----\n    - Bugfix of path parsing.\n\n0.1.0\n-----\n    - Project created.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Bystroushaak/zeo_connector_defaults", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "zeo_connector_defaults", "package_url": "https://pypi.org/project/zeo_connector_defaults/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zeo_connector_defaults/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Bystroushaak/zeo_connector_defaults"}, "release_url": "https://pypi.org/project/zeo_connector_defaults/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Default conf. files and conf. file generator for `zeo_connector`.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://pypi.python.org/pypi/zeo_connector_defaults\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/zeo_connector_defaults.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/178b4ef024288d589b0d5e2e55a93b261d9e0fcc/68747470733a2f2f62616467652e667572792e696f2f70792f7a656f5f636f6e6e6563746f725f64656661756c74732e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/zeo_connector_defaults\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/zeo_connector_defaults.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9b4befbd2d4ca1aa65338accfe59de93eda34a9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7a656f5f636f6e6e6563746f725f64656661756c74732e737667\"></a>\n<img alt=\"https://img.shields.io/pypi/l/zeo_connector_defaults.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f1364713eca8cb4365a457321692f67f0cc8c62/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7a656f5f636f6e6e6563746f725f64656661756c74732e737667\">\n<a href=\"https://github.com/Bystroushaak/zeo_connector_defaults/issues\" rel=\"nofollow\"><img alt=\"https://img.shields.io/github/issues/Bystroushaak/zeo_connector_defaults.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b40f89c37987c2df4da9572e7ff68a8b14508eb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f42797374726f75736861616b2f7a656f5f636f6e6e6563746f725f64656661756c74732e737667\"></a>\n<p>Default configuration files and configuration file generator for <a href=\"https://github.com/Bystroushaak/zeo_connector\" rel=\"nofollow\">zeo_connector</a>.</p>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>This project provides generators of the testing environment for the ZEO-related tests. It also provides generator, for the basic ZEO configuration files.</p>\n<div id=\"zeo-connector-gen-defaults-py\">\n<h4>zeo_connector_gen_defaults.py</h4>\n<p>This script simplifies the process of generation of ZEO configuration files.</p>\n</div>\n<div id=\"zeo-tests\">\n<h4>ZEO tests</h4>\n<p>Typically, when you test your program which is using the ZEO database, you need to generate the database files, then run new thread with <tt>runzeo</tt> program, do tests, cleanup and stop the thread.</p>\n<p>This module provides two functions, which do exactly this:</p>\n<blockquote>\n<ul>\n<li>zeo_connector_defaults.generate_environment()</li>\n<li>zeo_connector_defaults.cleanup_environment()</li>\n</ul>\n</blockquote>\n<div id=\"generate-environment\">\n<h5>generate_environment</h5>\n<p>This function will create temporary directory in <tt>/tmp</tt> and copy template files for ZEO client and server into this directory. Then it starts new thread with <tt>runzeo</tt> program using the temporary server configuration file.</p>\n<p>Names of the files may be resolved using <tt>tmp_context_name()</tt> function.</p>\n<dl>\n<dt>Note:</dt>\n<dd>This function works best, if added to setup part of your test environment.</dd>\n</dl>\n</div>\n<div id=\"cleanup-environment\">\n<h5>cleanup_environment</h5>\n<p>Function, which stops the running <tt>runzeo</tt> thread and delete all the temporary files.</p>\n<dl>\n<dt>Note:</dt>\n<dd>This function works best, if added to setup part of your test environment.</dd>\n</dl>\n</div>\n<div id=\"context-functions\">\n<h5>Context functions</h5>\n<p>There is also two <cite>temp environment access functions</cite>:</p>\n<blockquote>\n<ul>\n<li>tmp_context_name()</li>\n<li>tmp_context()</li>\n</ul>\n</blockquote>\n<p>Both of them take one <cite>fn</cite> argument and return name of the file (<tt>tmp_context_name()</tt>) or content of the file (<tt>tmp_context()</tt>) in context of random temporary directory.</p>\n<p>For example:</p>\n<pre><span class=\"n\">tmp_context_name</span><span class=\"p\">(</span><span class=\"s2\">\"zeo_client.conf\"</span><span class=\"p\">)</span>\n</pre>\n<p>returns the absolute path to the file <tt>zeo_client.conf</tt>, which may be for example <tt>/tmp/tmp1r5keh/zeo_client.conf</tt>.</p>\n<p>You may also call it without the arguments, which will return just the name of the temporary directory:</p>\n<pre><span class=\"n\">tmp_context_name</span><span class=\"p\">()</span>\n</pre>\n<p>which should return something like <tt>/tmp/tmp1r5keh</tt>.</p>\n</div>\n</div>\n<div id=\"tests-example\">\n<h4>Tests example</h4>\n<p>Here is the example how your test may look like:</p>\n<pre><span class=\"ch\">#! /usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Interpreter version: python 2.7</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Imports =====================================================================</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">zeo_connector_defaults</span> <span class=\"kn\">import</span> <span class=\"n\">generate_environment</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zeo_connector_defaults</span> <span class=\"kn\">import</span> <span class=\"n\">cleanup_environment</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zeo_connector_defaults</span> <span class=\"kn\">import</span> <span class=\"n\">tmp_context_name</span>\n\n\n<span class=\"c1\"># Setup =======================================================================</span>\n<span class=\"k\">def</span> <span class=\"nf\">setup_module</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">):</span>\n    <span class=\"n\">generate_environment</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">teardown_module</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"p\">):</span>\n    <span class=\"n\">cleanup_environment</span><span class=\"p\">()</span>\n\n\n<span class=\"c1\"># Fixtures ====================================================================</span>\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span>\n<span class=\"k\">def</span> <span class=\"nf\">zeo_conf_wrapper</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">ZEOConfWrapper</span><span class=\"p\">(</span>\n        <span class=\"n\">conf_path</span><span class=\"o\">=</span><span class=\"n\">tmp_context_name</span><span class=\"p\">(</span><span class=\"s2\">\"zeo_client.conf\"</span><span class=\"p\">),</span>\n    <span class=\"o\">...</span>\n\n<span class=\"c1\"># Tests =======================================================================</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">zeo_conf_wrapper</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Module is <a href=\"https://pypi.python.org/pypi/zeo_connector_defaults\" rel=\"nofollow\">hosted at PYPI</a>, and can be easily installed using <a href=\"http://en.wikipedia.org/wiki/Pip_%28package_manager%29\" rel=\"nofollow\">PIP</a>:</p>\n<pre>sudo pip install zeo_connector_defaults\n</pre>\n</div>\n<div id=\"source-code\">\n<h3>Source code</h3>\n<p>Project is released under the MIT license. Source code can be found at GitHub:</p>\n<ul>\n<li><a href=\"https://github.com/Bystroushaak/zeo_connector_defaults\" rel=\"nofollow\">https://github.com/Bystroushaak/zeo_connector_defaults</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.2.2</h3>\n<blockquote>\n<ul>\n<li>Small bugfix.</li>\n<li>Removed unused files.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h3>0.2.1</h3>\n<blockquote>\n<ul>\n<li>Switched to complete randomly generated ZEO environment (random name in /tmp, and random ports for ZEO server process).</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id3\">\n<h3>0.2.0</h3>\n<blockquote>\n<ul>\n<li>Bugfix of path parsing.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id4\">\n<h3>0.1.0</h3>\n<blockquote>\n<ul>\n<li>Project created.</li>\n</ul>\n</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1830663, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2f8287a3fa480122ddcfa537e99662e3", "sha256": "6b65d2515b95d2d4f96853d2a55248b9ad85791b177d08b6b18cca5f3158e6d8"}, "downloads": -1, "filename": "zeo_connector_defaults-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2f8287a3fa480122ddcfa537e99662e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5796, "upload_time": "2015-10-23T13:05:21", "upload_time_iso_8601": "2015-10-23T13:05:21.124746Z", "url": "https://files.pythonhosted.org/packages/8a/e9/4665780fac3b7af12e6994eee66802b23fede4511dd76e94628655f360c5/zeo_connector_defaults-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "24f5315477b1192d16983cebfd883d7f", "sha256": "325f28267b9224e1cfe01815611957d5d7a0a6ab4496e61e77147e004b4e0f31"}, "downloads": -1, "filename": "zeo_connector_defaults-0.2.0.tar.gz", "has_sig": false, "md5_digest": "24f5315477b1192d16983cebfd883d7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5827, "upload_time": "2015-10-23T13:21:55", "upload_time_iso_8601": "2015-10-23T13:21:55.931261Z", "url": "https://files.pythonhosted.org/packages/72/d8/9b70128000b8757a256419626ac2e1c0bd1d6debc044d0d0b856de557b1b/zeo_connector_defaults-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "bc70c8cf5eef34a9624c2ff6dd6cf3a0", "sha256": "ad7d154a911eb911122ce4ee6f5da5972c00c7f64336bc0860094c9019b82760"}, "downloads": -1, "filename": "zeo_connector_defaults-0.2.1.tar.gz", "has_sig": false, "md5_digest": "bc70c8cf5eef34a9624c2ff6dd6cf3a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6635, "upload_time": "2015-11-24T03:50:16", "upload_time_iso_8601": "2015-11-24T03:50:16.967414Z", "url": "https://files.pythonhosted.org/packages/2f/bf/31222bc361d5baa123f52381b6946060f3b408038097bdb13e516cb2e9c6/zeo_connector_defaults-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "2dfb0ad5525cf5793bca0050897ee812", "sha256": "fee39b89e4994f2ac48a3b792a324cc39ed2a020899c1caeb1b89fa970c7cde7"}, "downloads": -1, "filename": "zeo_connector_defaults-0.2.2.tar.gz", "has_sig": false, "md5_digest": "2dfb0ad5525cf5793bca0050897ee812", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6539, "upload_time": "2015-11-24T03:54:03", "upload_time_iso_8601": "2015-11-24T03:54:03.400565Z", "url": "https://files.pythonhosted.org/packages/3f/f0/52a856fb00ef7474cf884c6feb0e56def0ee3cc406bdd8eaeba61a0a7125/zeo_connector_defaults-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2dfb0ad5525cf5793bca0050897ee812", "sha256": "fee39b89e4994f2ac48a3b792a324cc39ed2a020899c1caeb1b89fa970c7cde7"}, "downloads": -1, "filename": "zeo_connector_defaults-0.2.2.tar.gz", "has_sig": false, "md5_digest": "2dfb0ad5525cf5793bca0050897ee812", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6539, "upload_time": "2015-11-24T03:54:03", "upload_time_iso_8601": "2015-11-24T03:54:03.400565Z", "url": "https://files.pythonhosted.org/packages/3f/f0/52a856fb00ef7474cf884c6feb0e56def0ee3cc406bdd8eaeba61a0a7125/zeo_connector_defaults-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:54 2020"}