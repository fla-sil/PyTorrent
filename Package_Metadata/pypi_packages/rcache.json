{"info": {"author": "Michal Klich", "author_email": "michal@michalklich.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# rcache.py\n\n[![pipeline status](https://gitlab.com/the_speedball/redis.cache.py/badges/master/pipeline.svg)](https://gitlab.com/the_speedball/redis.cache.py/commits/master)\n\n# What is it\n\nrcache.py is a cache and works on redis so it is suitable for multi threaded and multi process applications.\nIt has been inspired and based on `cache.py` library https://github.com/bwasti/cache.py\n\n# Usage\n\nTo use the file, `import rcache` and annotate functions with `@rcache.rcache()`.\n\n```python\nimport rcache\n\n@rcache.rcache()\ndef expensive_func(arg, kwarg=None):\n  # Expensive stuff here\n  return arg\n\n```\n\nThe `@rcache.rcache()` function can take multiple arguments.\n\n- `@rcache.rcache(timeout=20)` - Only caches the function for 20 seconds.\n- `@rcache.rcache(url=\"http://other_redis:6379\")` - Saves cache to specified Redis url (defaults to `http://localhost:6379`)\n- `@rcache.rcache(key=rcache.ARGS[KWARGS,NONE])` - Check against args, kwargs or neither of them when doing a cache lookup.\n\n# How it works\n\n`rcache.py` queries `redis` and checks against the name, arguments and hash of a function's source\nto decide if the function has been run before.  If it has it returns the cached result immediately.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/the_speedball/redis.cache.py", "keywords": "", "license": "MIT", "maintainer": "Michal Klich", "maintainer_email": "michal@michalklich.com", "name": "rcache", "package_url": "https://pypi.org/project/rcache/", "platform": "", "project_url": "https://pypi.org/project/rcache/", "project_urls": {"Homepage": "https://gitlab.com/the_speedball/redis.cache.py", "Repository": "https://gitlab.com/the_speedball/redis.cache.py"}, "release_url": "https://pypi.org/project/rcache/1.0.0/", "requires_dist": ["redis (>=3.1,<4.0)"], "requires_python": ">=3.6,<4.0", "summary": "Redis memoize cache", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>rcache.py</h1>\n<p><a href=\"https://gitlab.com/the_speedball/redis.cache.py/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c1bbfb232d9542cb2124eee4652569d82a2bca5b/68747470733a2f2f6769746c61622e636f6d2f7468655f737065656462616c6c2f72656469732e63616368652e70792f6261646765732f6d61737465722f706970656c696e652e737667\"></a></p>\n<h1>What is it</h1>\n<p>rcache.py is a cache and works on redis so it is suitable for multi threaded and multi process applications.\nIt has been inspired and based on <code>cache.py</code> library <a href=\"https://github.com/bwasti/cache.py\" rel=\"nofollow\">https://github.com/bwasti/cache.py</a></p>\n<h1>Usage</h1>\n<p>To use the file, <code>import rcache</code> and annotate functions with <code>@rcache.rcache()</code>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">rcache</span>\n\n<span class=\"nd\">@rcache</span><span class=\"o\">.</span><span class=\"n\">rcache</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">expensive_func</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">,</span> <span class=\"n\">kwarg</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n  <span class=\"c1\"># Expensive stuff here</span>\n  <span class=\"k\">return</span> <span class=\"n\">arg</span>\n</pre>\n<p>The <code>@rcache.rcache()</code> function can take multiple arguments.</p>\n<ul>\n<li><code>@rcache.rcache(timeout=20)</code> - Only caches the function for 20 seconds.</li>\n<li><code>@rcache.rcache(url=\"http://other_redis:6379\")</code> - Saves cache to specified Redis url (defaults to <code>http://localhost:6379</code>)</li>\n<li><code>@rcache.rcache(key=rcache.ARGS[KWARGS,NONE])</code> - Check against args, kwargs or neither of them when doing a cache lookup.</li>\n</ul>\n<h1>How it works</h1>\n<p><code>rcache.py</code> queries <code>redis</code> and checks against the name, arguments and hash of a function's source\nto decide if the function has been run before.  If it has it returns the cached result immediately.</p>\n\n          </div>"}, "last_serial": 4800047, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "51970214a7dc323e1ad1376b14ee34a0", "sha256": "c0e7fad9d695c12320d5c07b9487601c3496f9401abffa06591ec34815e13265"}, "downloads": -1, "filename": "rcache-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51970214a7dc323e1ad1376b14ee34a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6099, "upload_time": "2019-02-09T19:02:38", "upload_time_iso_8601": "2019-02-09T19:02:38.447178Z", "url": "https://files.pythonhosted.org/packages/7c/b5/7567ffc16f819716210a4f6327d0a505f00e312506d4fbe99c164705a302/rcache-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df47f600f37aaf96d2e18d86398a800c", "sha256": "35ec2195ff7df7925a345e8a2d4550d42a92129ae93635960ee3616a77e40c7c"}, "downloads": -1, "filename": "rcache-1.0.0.tar.gz", "has_sig": false, "md5_digest": "df47f600f37aaf96d2e18d86398a800c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3151, "upload_time": "2019-02-09T19:02:40", "upload_time_iso_8601": "2019-02-09T19:02:40.331497Z", "url": "https://files.pythonhosted.org/packages/50/8f/23449080ccbd420093a7e08540720b2afdd425b09c85a75af8d93e49554d/rcache-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51970214a7dc323e1ad1376b14ee34a0", "sha256": "c0e7fad9d695c12320d5c07b9487601c3496f9401abffa06591ec34815e13265"}, "downloads": -1, "filename": "rcache-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "51970214a7dc323e1ad1376b14ee34a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4.0", "size": 6099, "upload_time": "2019-02-09T19:02:38", "upload_time_iso_8601": "2019-02-09T19:02:38.447178Z", "url": "https://files.pythonhosted.org/packages/7c/b5/7567ffc16f819716210a4f6327d0a505f00e312506d4fbe99c164705a302/rcache-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df47f600f37aaf96d2e18d86398a800c", "sha256": "35ec2195ff7df7925a345e8a2d4550d42a92129ae93635960ee3616a77e40c7c"}, "downloads": -1, "filename": "rcache-1.0.0.tar.gz", "has_sig": false, "md5_digest": "df47f600f37aaf96d2e18d86398a800c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4.0", "size": 3151, "upload_time": "2019-02-09T19:02:40", "upload_time_iso_8601": "2019-02-09T19:02:40.331497Z", "url": "https://files.pythonhosted.org/packages/50/8f/23449080ccbd420093a7e08540720b2afdd425b09c85a75af8d93e49554d/rcache-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:49 2020"}