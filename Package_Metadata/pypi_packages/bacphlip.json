{"info": {"author": "Adam J Hockenberry", "author_email": "adam.hockenberry@utexas.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# BACPHLIP - a bacteriophage lifestyle prediction tool\n\n*Adam J. Hockenberry and Claus O. Wilke*\n\n[![PyPI version](https://badge.fury.io/py/bacphlip.svg)](https://badge.fury.io/py/bacphlip)\n![PyPI - Downloads](https://img.shields.io/pypi/dm/bacphlip)\n![PyPI - License](https://img.shields.io/pypi/l/bacphlip)\n[![Build Status](https://travis-ci.com/adamhockenberry/bacphlip.svg?branch=master)](https://travis-ci.com/adamhockenberry/bacphlip)\n[![Coverage Status](https://img.shields.io/codecov/c/github/adamhockenberry/bacphlip/master.svg)](https://codecov.io/github/adamhockenberry/bacphlip?branch=master)\n\n**Reference:**\n\n(eventual manuscript reference here)\n\n## Installation\n\nYou can install BACPHLIP with pip (NOTE: NOT YET WORKING):\n```\npip install bacphlip\n```\n\nAlternatively, users can pull/download the github repository, navigate to the directory where BACPHLIP was downloaded and run:\n```\npip install .\n```\n\nBACPHLIP has several required dependencies outside of the standard library: [biopython](https://pypi.org/project/biopython/), [pandas](https://pypi.org/project/pandas/), [joblib](https://pypi.org/project/joblib/), and [scikit-learn](https://pypi.org/project/scikit-learn/).\n\nAdditionally, users are required to install the [HMMER3 software suite](http://hmmer.org/) (in addition to the installation routes listed on the HMMER3 website we note that this tool can also be installed via [conda](https://anaconda.org/bioconda/hmmer)). By default, BACPHLIP assumes that HMMER3 is installed in the system path, but local paths may be provided as run-time flags (see below). \n\n## Examples\n\nThe most straightforwad usage of BACPHLIP is as a command line tool. Assuming that `/valid/path/to/a/genome.fasta` exists, you can call BACPHLIP with the command:\n```\npython -m bacphlip -i /valid/path/to/a/genome.fasta\n```\n\nThis command should create 4 seperate files in the path of the target `genome.fasta` with `genome.fasta.bacphlip` containing the final model predictions (tab-separated format) in terms of probability of the input phage being either \"Virulent\" or \"Temperate\" (the other files append `.6frame`, `.hmmsearch`, and `.hmmsearch.tsv` to the genome file). Attempting to run this command a second time, assuming the first worked, should create an error since the output files already exist. This behavior can be altered with a flag to force overwrite the files:\n```\npython -m bacphlip -i /valid/path/to/a/genome.fasta -f \n```\n\nFinally, a path to a local HMMER3 install (specifically, the `hmmsearch` tool) can be specified in the command line:\n```\npython -m bacphlip -i /valid/path/to/a/genome.fasta --local_hmmsearch /valid/path/to/hmmsearch\n```\n\n\n## Next steps\n\nWe have several planned next steps, including:\n1. adding a tutorial for library usage as a jupyter notebook in a forthcoming `examples` folder. \n2. adding the ability to run the pipeline in a \"quiet\" mode\n3. adding a flag for batch input of sequences. \n\n## Misc\n\nThe software is provided to you under the MIT license (see file `LICENSE.txt`).\nThe most up-to-date version of this software is available at\nhttps://github.com/adamhockenberry/bacphlip.\n\nThe development of `BACPHLIP` is provided in a separate repository for transparency. See [bacphlip-model-dev](https://github.com/adamhockenberry/bacphlip-model-dev).\n\n## Contributing\n\nPull requests addressing errors or adding new functionalities are welcome on GitHub. However, to be accepted, contributions must pass the `pytest` unit tests.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adamhockenberry/bacphlip", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bacphlip", "package_url": "https://pypi.org/project/bacphlip/", "platform": "", "project_url": "https://pypi.org/project/bacphlip/", "project_urls": {"Homepage": "https://github.com/adamhockenberry/bacphlip"}, "release_url": "https://pypi.org/project/bacphlip/0.9.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A Random Forest classifier to predict bacteriophage lifestyle", "version": "0.9.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>BACPHLIP - a bacteriophage lifestyle prediction tool</h1>\n<p><em>Adam J. Hockenberry and Claus O. Wilke</em></p>\n<p><a href=\"https://badge.fury.io/py/bacphlip\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef7e5f1454122e44ff4717f95ebc8e85695769ec/68747470733a2f2f62616467652e667572792e696f2f70792f62616370686c69702e737667\"></a>\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce2ddec8049860f6ab525c876f61ced8286adf25/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f62616370686c6970\">\n<img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/667d89a7e66f325531147a0804d6ecefaa297841/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f62616370686c6970\">\n<a href=\"https://travis-ci.com/adamhockenberry/bacphlip\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0d00ddda2ba13a49070f5169ddd5e6c96791fd51/68747470733a2f2f7472617669732d63692e636f6d2f6164616d686f636b656e62657272792f62616370686c69702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/adamhockenberry/bacphlip?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5f204e1f867114b2f78f5e65b794323a8bedbe18/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6164616d686f636b656e62657272792f62616370686c69702f6d61737465722e737667\"></a></p>\n<p><strong>Reference:</strong></p>\n<p>(eventual manuscript reference here)</p>\n<h2>Installation</h2>\n<p>You can install BACPHLIP with pip (NOTE: NOT YET WORKING):</p>\n<pre><code>pip install bacphlip\n</code></pre>\n<p>Alternatively, users can pull/download the github repository, navigate to the directory where BACPHLIP was downloaded and run:</p>\n<pre><code>pip install .\n</code></pre>\n<p>BACPHLIP has several required dependencies outside of the standard library: <a href=\"https://pypi.org/project/biopython/\" rel=\"nofollow\">biopython</a>, <a href=\"https://pypi.org/project/pandas/\" rel=\"nofollow\">pandas</a>, <a href=\"https://pypi.org/project/joblib/\" rel=\"nofollow\">joblib</a>, and <a href=\"https://pypi.org/project/scikit-learn/\" rel=\"nofollow\">scikit-learn</a>.</p>\n<p>Additionally, users are required to install the <a href=\"http://hmmer.org/\" rel=\"nofollow\">HMMER3 software suite</a> (in addition to the installation routes listed on the HMMER3 website we note that this tool can also be installed via <a href=\"https://anaconda.org/bioconda/hmmer\" rel=\"nofollow\">conda</a>). By default, BACPHLIP assumes that HMMER3 is installed in the system path, but local paths may be provided as run-time flags (see below).</p>\n<h2>Examples</h2>\n<p>The most straightforwad usage of BACPHLIP is as a command line tool. Assuming that <code>/valid/path/to/a/genome.fasta</code> exists, you can call BACPHLIP with the command:</p>\n<pre><code>python -m bacphlip -i /valid/path/to/a/genome.fasta\n</code></pre>\n<p>This command should create 4 seperate files in the path of the target <code>genome.fasta</code> with <code>genome.fasta.bacphlip</code> containing the final model predictions (tab-separated format) in terms of probability of the input phage being either \"Virulent\" or \"Temperate\" (the other files append <code>.6frame</code>, <code>.hmmsearch</code>, and <code>.hmmsearch.tsv</code> to the genome file). Attempting to run this command a second time, assuming the first worked, should create an error since the output files already exist. This behavior can be altered with a flag to force overwrite the files:</p>\n<pre><code>python -m bacphlip -i /valid/path/to/a/genome.fasta -f \n</code></pre>\n<p>Finally, a path to a local HMMER3 install (specifically, the <code>hmmsearch</code> tool) can be specified in the command line:</p>\n<pre><code>python -m bacphlip -i /valid/path/to/a/genome.fasta --local_hmmsearch /valid/path/to/hmmsearch\n</code></pre>\n<h2>Next steps</h2>\n<p>We have several planned next steps, including:</p>\n<ol>\n<li>adding a tutorial for library usage as a jupyter notebook in a forthcoming <code>examples</code> folder.</li>\n<li>adding the ability to run the pipeline in a \"quiet\" mode</li>\n<li>adding a flag for batch input of sequences.</li>\n</ol>\n<h2>Misc</h2>\n<p>The software is provided to you under the MIT license (see file <code>LICENSE.txt</code>).\nThe most up-to-date version of this software is available at\n<a href=\"https://github.com/adamhockenberry/bacphlip\" rel=\"nofollow\">https://github.com/adamhockenberry/bacphlip</a>.</p>\n<p>The development of <code>BACPHLIP</code> is provided in a separate repository for transparency. See <a href=\"https://github.com/adamhockenberry/bacphlip-model-dev\" rel=\"nofollow\">bacphlip-model-dev</a>.</p>\n<h2>Contributing</h2>\n<p>Pull requests addressing errors or adding new functionalities are welcome on GitHub. However, to be accepted, contributions must pass the <code>pytest</code> unit tests.</p>\n\n          </div>"}, "last_serial": 7182480, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "8d7c79a2a115b9b40e899fde06f208e8", "sha256": "9ada32c22ba329e76ddbabefed42fc7d45c307e73e5ec6d8e534a1b4dfa10274"}, "downloads": -1, "filename": "bacphlip-0.9.tar.gz", "has_sig": false, "md5_digest": "8d7c79a2a115b9b40e899fde06f208e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2931, "upload_time": "2020-05-06T18:29:37", "upload_time_iso_8601": "2020-05-06T18:29:37.492801Z", "url": "https://files.pythonhosted.org/packages/2b/74/5e998f583cf6561adca649d8d848c84a9cbf3d0ae7cbb67e729723f4e341/bacphlip-0.9.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "a9957fd6a6c86b2d7acfac212966f477", "sha256": "4581c520f2d0c549b2a838589a05737d4a1f4bb30ec3df895d2aaaab8a2192ca"}, "downloads": -1, "filename": "bacphlip-0.9.1.tar.gz", "has_sig": false, "md5_digest": "a9957fd6a6c86b2d7acfac212966f477", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6369, "upload_time": "2020-05-06T19:06:33", "upload_time_iso_8601": "2020-05-06T19:06:33.298575Z", "url": "https://files.pythonhosted.org/packages/ae/15/8d3cfb9894d07d399d0f4cfcc24852dee5785545dcc49a4166addf2eec10/bacphlip-0.9.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a9957fd6a6c86b2d7acfac212966f477", "sha256": "4581c520f2d0c549b2a838589a05737d4a1f4bb30ec3df895d2aaaab8a2192ca"}, "downloads": -1, "filename": "bacphlip-0.9.1.tar.gz", "has_sig": false, "md5_digest": "a9957fd6a6c86b2d7acfac212966f477", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6369, "upload_time": "2020-05-06T19:06:33", "upload_time_iso_8601": "2020-05-06T19:06:33.298575Z", "url": "https://files.pythonhosted.org/packages/ae/15/8d3cfb9894d07d399d0f4cfcc24852dee5785545dcc49a4166addf2eec10/bacphlip-0.9.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:05 2020"}