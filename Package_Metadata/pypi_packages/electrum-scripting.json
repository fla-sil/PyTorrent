{"info": {"author": "Stefan Liu", "author_email": "stefanliu@outlook.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development"], "description": "# electrum-scripting\nScripting interface wrapper for electrum wallet\n\n[![PYPI Version][pypi-image]][pypi-url]\n[![Build Status][travis-image]][travis-url]\n\n\n## Setup\n\nYou would need to setup electrum wallet first and start the daemon if required.\n\nSample setup\n```\n# Download from https://electrum.org/#download\nsudo apt-get install python3-pyqt5\nwget https://download.electrum.org/3.3.8/Electrum-3.3.8.tar.gz\ntar -xvf Electrum-3.3.8.tar.gz\ncd Electrum-3.3.8\npython3 -m pip install .[fast]\n\n# Start deamon\n./run_electrum daemon start\n./run_electrum daemon load_wallet\n```\n\nInstall electrum scripting\n```\npython3 -m pip install electrum-scripting\n```\n\n## Get Started\n\n```\n\n> from electrum_scripting.wallet import WalletScripting as ws\n\n# Call electrum command\n> unspents = ws.call('listunspent')\n[{'address': 'bc1q9tguzkmqul768z9hxkeg8hd6yrrhexymwmykygwk4m6g4t8msheq3z0rxm', 'value': '0.00258', 'prevout_n': 1, 'prevout_hash': '18810325792ff18d52fa65f1724d13750a584bfec8f44a4670f7baecac6d1510', 'height': 587939, 'coinbase': False}]\n\n> tx = ws.call('paytomany', unsigned=True, password=\"password\", outputs=[['address1', 'amount1']])\n{'hex': '45505446ff000200000000010110156dacecbaf770464af4c8fe4b580a75134d72f165fa528df12f79250381180100000000fdffffff02a0860100000000002200202ad1c15b60e7fda388b735b283ddba20c77c989b76c96221d6aef48aacfb85f2164d020000000000220020ab8433b505b64af499a5561951404ad86c7ae93b894febc457acf6420fce75a6feffffffffd0ef0300000000000000050001ff01ff01fffd0201534c53ff02aa7ed301638c8c3b80000001cb70696dad3ba23bc1899b72be25bf489eb954fb61e5f7037bad5ed00366f37f036317daa8d96ef7023909f3551853df43a40999505bd846d377f04f5b523e2def000000004c53ff02aa7ed3015c8338c880000001657348468a9482ae1bc5090b8823e8628e6fbaf0673d98777eec1407b5ed43ee0272c445a9a82c43c69eb091b26f3872bcb46449387392bee44a1b4b7951d7ec85000000004c53ff02aa7ed301bc696fad8000000152b96b078f8ee0f02603dc6852ad00cc1a9083ddc0901499cb36da1732d79b570222b0d8e6260969dfc02f8090c875c865a75da175c02b5dc054f6d2ae9f0d78100000000053ae7ef90800', 'complete': False, 'final': False}\n\n# Set default configurations\n> ws.setup(password='password')\n\n# Other utils\n> ws.qr(tx, 'unsigned_tx.svg')\n\n```\n\nFor full supported command list, please check electrum documentation. Here's listing for your information:\n\n    addrequest          Create a payment request, using the first unused\n                        address of the wallet\n    addtransaction      Add a transaction to the wallet history\n    broadcast           Broadcast a transaction to the network\n    clearrequests       Remove all payment requests\n    commands            List of commands\n    convert_xkey        Convert xtype of a master key\n    create              Create a new wallet\n    createmultisig      Create multisig address\n    createnewaddress    Create a new receiving address, beyond the gap limit\n                        of the wallet\n    decrypt             Decrypt a message encrypted with a public key\n    deserialize         Deserialize a serialized transaction\n    dumpprivkeys        Deprecated\n    encrypt             Encrypt a message with a public key\n    freeze              Freeze address\n    get                 Return item from wallet storage\n    get_tx_status       Returns some information regarding the tx\n    getaddressbalance   Return the balance of any address\n    getaddresshistory   Return the transaction history of any address\n    getaddressunspent   Returns the UTXO list of any address\n    getalias            Retrieve alias\n    getbalance          Return the balance of your wallet\n    getconfig           Return a configuration variable\n    getfeerate          Return current suggested fee rate (in sat/kvByte),\n                        according to config settings or supplied parameters\n    getmasterprivate    Get master private key\n    getmerkle           Get Merkle branch of a transaction included in a block\n    getmpk              Get master public key\n    getprivatekeys      Get private keys of addresses\n    getpubkeys          Return the public keys for a wallet address\n    getrequest          Return a payment request\n    getseed             Get seed phrase\n    getservers          Return the list of available servers\n    gettransaction      Retrieve a transaction\n    getunusedaddress    Returns the first unused address of the wallet, or\n                        None if all addresses are used\n    help\n    history             Wallet history\n    importprivkey       Import a private key\n    is_synchronized     return wallet synchronization status\n    ismine              Check if address is in wallet\n    listaddresses       List wallet addresses\n    listcontacts        Show your list of contacts\n    listrequests        List the payment requests you made\n    listunspent         List unspent outputs\n    make_seed           Create a seed\n    notify              Watch an address\n    password            Change wallet password\n    payto               Create a transaction\n    paytomany           Create a multi-output transaction\n    removelocaltx       Remove a 'local' transaction from the wallet, and its\n                        dependent transactions\n    restore             Restore a wallet from text\n    rmrequest           Remove a payment request\n    searchcontacts      Search through contacts, return matching entries\n    serialize           Create a transaction from json inputs\n    setconfig           Set a configuration variable\n    setlabel            Assign a label to an item\n    signmessage         Sign a message with a key\n    signrequest         Sign payment request with an OpenAlias\n    signtransaction     Sign a transaction\n    sweep               Sweep private keys\n    unfreeze            Unfreeze address\n    validateaddress     Check that an address is valid\n    verifymessage       Verify a signature\n\n\n[pypi-image]: https://img.shields.io/pypi/v/electrum-scripting.svg\n[pypi-url]: https://pypi.org/project/electrum-scripting/\n[travis-image]: https://img.shields.io/travis/devfans/electrum-scripting/master.svg\n[travis-url]: https://travis-ci.org/devfans/electrum-scripting\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/devfans/electrum-scripting", "keywords": "Electrum Scripting Wallet Bitcoin Crypto", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "electrum-scripting", "package_url": "https://pypi.org/project/electrum-scripting/", "platform": "", "project_url": "https://pypi.org/project/electrum-scripting/", "project_urls": {"Homepage": "http://github.com/devfans/electrum-scripting"}, "release_url": "https://pypi.org/project/electrum-scripting/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Electrum wallet scripting interface wrapper", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>electrum-scripting</h1>\n<p>Scripting interface wrapper for electrum wallet</p>\n<p><a href=\"https://pypi.org/project/electrum-scripting/\" rel=\"nofollow\"><img alt=\"PYPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a214ecf9a4a8976a19ae4cb74f95258372d7828e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f656c65637472756d2d736372697074696e672e737667\"></a>\n<a href=\"https://travis-ci.org/devfans/electrum-scripting\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1de0ed398c25a8a008dc89a13e37a39a40b4a0ec/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f64657666616e732f656c65637472756d2d736372697074696e672f6d61737465722e737667\"></a></p>\n<h2>Setup</h2>\n<p>You would need to setup electrum wallet first and start the daemon if required.</p>\n<p>Sample setup</p>\n<pre><code># Download from https://electrum.org/#download\nsudo apt-get install python3-pyqt5\nwget https://download.electrum.org/3.3.8/Electrum-3.3.8.tar.gz\ntar -xvf Electrum-3.3.8.tar.gz\ncd Electrum-3.3.8\npython3 -m pip install .[fast]\n\n# Start deamon\n./run_electrum daemon start\n./run_electrum daemon load_wallet\n</code></pre>\n<p>Install electrum scripting</p>\n<pre><code>python3 -m pip install electrum-scripting\n</code></pre>\n<h2>Get Started</h2>\n<pre><code>\n&gt; from electrum_scripting.wallet import WalletScripting as ws\n\n# Call electrum command\n&gt; unspents = ws.call('listunspent')\n[{'address': 'bc1q9tguzkmqul768z9hxkeg8hd6yrrhexymwmykygwk4m6g4t8msheq3z0rxm', 'value': '0.00258', 'prevout_n': 1, 'prevout_hash': '18810325792ff18d52fa65f1724d13750a584bfec8f44a4670f7baecac6d1510', 'height': 587939, 'coinbase': False}]\n\n&gt; tx = ws.call('paytomany', unsigned=True, password=\"password\", outputs=[['address1', 'amount1']])\n{'hex': '45505446ff000200000000010110156dacecbaf770464af4c8fe4b580a75134d72f165fa528df12f79250381180100000000fdffffff02a0860100000000002200202ad1c15b60e7fda388b735b283ddba20c77c989b76c96221d6aef48aacfb85f2164d020000000000220020ab8433b505b64af499a5561951404ad86c7ae93b894febc457acf6420fce75a6feffffffffd0ef0300000000000000050001ff01ff01fffd0201534c53ff02aa7ed301638c8c3b80000001cb70696dad3ba23bc1899b72be25bf489eb954fb61e5f7037bad5ed00366f37f036317daa8d96ef7023909f3551853df43a40999505bd846d377f04f5b523e2def000000004c53ff02aa7ed3015c8338c880000001657348468a9482ae1bc5090b8823e8628e6fbaf0673d98777eec1407b5ed43ee0272c445a9a82c43c69eb091b26f3872bcb46449387392bee44a1b4b7951d7ec85000000004c53ff02aa7ed301bc696fad8000000152b96b078f8ee0f02603dc6852ad00cc1a9083ddc0901499cb36da1732d79b570222b0d8e6260969dfc02f8090c875c865a75da175c02b5dc054f6d2ae9f0d78100000000053ae7ef90800', 'complete': False, 'final': False}\n\n# Set default configurations\n&gt; ws.setup(password='password')\n\n# Other utils\n&gt; ws.qr(tx, 'unsigned_tx.svg')\n\n</code></pre>\n<p>For full supported command list, please check electrum documentation. Here's listing for your information:</p>\n<pre><code>addrequest          Create a payment request, using the first unused\n                    address of the wallet\naddtransaction      Add a transaction to the wallet history\nbroadcast           Broadcast a transaction to the network\nclearrequests       Remove all payment requests\ncommands            List of commands\nconvert_xkey        Convert xtype of a master key\ncreate              Create a new wallet\ncreatemultisig      Create multisig address\ncreatenewaddress    Create a new receiving address, beyond the gap limit\n                    of the wallet\ndecrypt             Decrypt a message encrypted with a public key\ndeserialize         Deserialize a serialized transaction\ndumpprivkeys        Deprecated\nencrypt             Encrypt a message with a public key\nfreeze              Freeze address\nget                 Return item from wallet storage\nget_tx_status       Returns some information regarding the tx\ngetaddressbalance   Return the balance of any address\ngetaddresshistory   Return the transaction history of any address\ngetaddressunspent   Returns the UTXO list of any address\ngetalias            Retrieve alias\ngetbalance          Return the balance of your wallet\ngetconfig           Return a configuration variable\ngetfeerate          Return current suggested fee rate (in sat/kvByte),\n                    according to config settings or supplied parameters\ngetmasterprivate    Get master private key\ngetmerkle           Get Merkle branch of a transaction included in a block\ngetmpk              Get master public key\ngetprivatekeys      Get private keys of addresses\ngetpubkeys          Return the public keys for a wallet address\ngetrequest          Return a payment request\ngetseed             Get seed phrase\ngetservers          Return the list of available servers\ngettransaction      Retrieve a transaction\ngetunusedaddress    Returns the first unused address of the wallet, or\n                    None if all addresses are used\nhelp\nhistory             Wallet history\nimportprivkey       Import a private key\nis_synchronized     return wallet synchronization status\nismine              Check if address is in wallet\nlistaddresses       List wallet addresses\nlistcontacts        Show your list of contacts\nlistrequests        List the payment requests you made\nlistunspent         List unspent outputs\nmake_seed           Create a seed\nnotify              Watch an address\npassword            Change wallet password\npayto               Create a transaction\npaytomany           Create a multi-output transaction\nremovelocaltx       Remove a 'local' transaction from the wallet, and its\n                    dependent transactions\nrestore             Restore a wallet from text\nrmrequest           Remove a payment request\nsearchcontacts      Search through contacts, return matching entries\nserialize           Create a transaction from json inputs\nsetconfig           Set a configuration variable\nsetlabel            Assign a label to an item\nsignmessage         Sign a message with a key\nsignrequest         Sign payment request with an OpenAlias\nsigntransaction     Sign a transaction\nsweep               Sweep private keys\nunfreeze            Unfreeze address\nvalidateaddress     Check that an address is valid\nverifymessage       Verify a signature\n</code></pre>\n\n          </div>"}, "last_serial": 5632330, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c768be75dbb76280d2d30cff2f454f5d", "sha256": "cd378ad10768de6e3a9dcbf50b6680510eb54ece0cd1db18ae14bb14b3bbcd39"}, "downloads": -1, "filename": "electrum_scripting-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c768be75dbb76280d2d30cff2f454f5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6993, "upload_time": "2019-08-02T09:46:48", "upload_time_iso_8601": "2019-08-02T09:46:48.481251Z", "url": "https://files.pythonhosted.org/packages/7d/97/acc017f01073f57fb1edf93e9c097d4a8d82cfc131cd9145ecb1c35a3500/electrum_scripting-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42a2caea7ed2388037f283951e6c12bf", "sha256": "ae7c70d61dfa34608ca808c61a2b7379b1fa2e581040a8d12fce7aa042c72a20"}, "downloads": -1, "filename": "electrum_scripting-0.0.1.tar.gz", "has_sig": false, "md5_digest": "42a2caea7ed2388037f283951e6c12bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5726, "upload_time": "2019-08-02T09:46:51", "upload_time_iso_8601": "2019-08-02T09:46:51.018100Z", "url": "https://files.pythonhosted.org/packages/c5/34/576b1ec87ae32dff7a30d10f363de5139950d019022c2b7e6863fa9043c1/electrum_scripting-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "659552bd4a72c9fac0247d55ff9d14e9", "sha256": "4e1b78d46dd3d5553f1bed46ade56b069b8a1fa79b8f298fe2277b2a9a3cc796"}, "downloads": -1, "filename": "electrum_scripting-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "659552bd4a72c9fac0247d55ff9d14e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8230, "upload_time": "2019-08-05T03:06:20", "upload_time_iso_8601": "2019-08-05T03:06:20.690551Z", "url": "https://files.pythonhosted.org/packages/e9/eb/c9e311c05cbc0a95f82c180b995aa4e07a63fafe296651238041366cdc59/electrum_scripting-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cbb9b186f9d6477467e030e3b8652ce", "sha256": "0721b7f0b7e6b857a40e5b49a84a4531ce2a345efc7b62a22fa023582d0a2171"}, "downloads": -1, "filename": "electrum_scripting-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2cbb9b186f9d6477467e030e3b8652ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7187, "upload_time": "2019-08-05T03:06:23", "upload_time_iso_8601": "2019-08-05T03:06:23.623272Z", "url": "https://files.pythonhosted.org/packages/38/c7/5878f6946a69a4106c818aeab3ff126b2d57fe5de1d5a6baef8c87028323/electrum_scripting-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "659552bd4a72c9fac0247d55ff9d14e9", "sha256": "4e1b78d46dd3d5553f1bed46ade56b069b8a1fa79b8f298fe2277b2a9a3cc796"}, "downloads": -1, "filename": "electrum_scripting-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "659552bd4a72c9fac0247d55ff9d14e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8230, "upload_time": "2019-08-05T03:06:20", "upload_time_iso_8601": "2019-08-05T03:06:20.690551Z", "url": "https://files.pythonhosted.org/packages/e9/eb/c9e311c05cbc0a95f82c180b995aa4e07a63fafe296651238041366cdc59/electrum_scripting-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cbb9b186f9d6477467e030e3b8652ce", "sha256": "0721b7f0b7e6b857a40e5b49a84a4531ce2a345efc7b62a22fa023582d0a2171"}, "downloads": -1, "filename": "electrum_scripting-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2cbb9b186f9d6477467e030e3b8652ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7187, "upload_time": "2019-08-05T03:06:23", "upload_time_iso_8601": "2019-08-05T03:06:23.623272Z", "url": "https://files.pythonhosted.org/packages/38/c7/5878f6946a69a4106c818aeab3ff126b2d57fe5de1d5a6baef8c87028323/electrum_scripting-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:54 2020"}