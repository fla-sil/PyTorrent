{"info": {"author": "Jacob Kaplan-Moss and Robert Roskam", "author_email": "raiderrobert@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "django-multiurl\n===============\n.. image:: https://travis-ci.org/raiderrobert/django-multiurl.svg?branch=master\n    :target: http://travis-ci.org/raiderrobert/django-multiurl\n.. image:: https://coveralls.io/repos/github/raiderrobert/django-multiurl/badge.svg?branch=master\n    :target: https://coveralls.io/github/raiderrobert/django-multiurl?branch=master\n    \nHave you ever wanted multiple views to match to the same URL? Now you can.\n\nYou may once have tried something like this::\n\n    urlpatterns = [\n        url('/app/(\\w+)/$', app.views.people),\n        url('/app/(\\w+)/$', app.views.place),\n    ]\n\nHowever, if you try this, ``/app/san-francisco/`` will only map to\n``app.views.people``. Raising an ``Http404`` from ``app.views.people`` doesn't\nhelp: you only get a 404 in the browser because Django stops resolving\nURLs at the first match.\n\nWell, ``django-multiurl`` solves this problem. Just \n``pip install django-multiurl``, then do this::\n\n    from multiurl import multiurl\n\n    urlpatterns = [\n        multiurl(\n            url('/app/(\\w+)/$', app.views.people),\n            url('/app/(\\w+)/$', app.views.place),\n        )\n    ]\n\nNow in your views, raise ``multiurl.ContinueResolving`` anywhere you'd like\nto break out of the view and keep resolving. For example, here's what\n``app.views.people`` might look like::\n\n    from multiurl import ContinueResolving\n\n    def people(request, name):\n        try:\n            person = Person.objects.get(name=name)\n        except Person.DoesNotExist:\n            raise ContinueResolving\n        return render(...)\n\nThat's it! ``ContinueResolving`` will cause ``multiurl`` to continue onto the\nnext view (``app.views.place``, in this example).\n\nA few notes to round things out:\n\n* If you don't want to use ``ContinueResolving`` -- perhaps you'd rather\n  continue using ``get_object_or_404``, or you're using third-party views\n  that you can't modify to raise ``ContinueResolving``, you can pass a\n  ``catch`` argument into ``multiurl`` to control which exceptions are\n  considered \"continue\" statements. For example, to allow ``Http404``\n  exceptions to continue resolving, do this::\n\n        urlpatterns = [\n            multiurl(\n                url('/app/(\\w+)/$', app.views.people),\n                url('/app/(\\w+)/$', app.views.place),\n                catch = (Http404, ContinueResolving)\n            )\n        ]\n\n  As you can see, ``catch`` should be a tuple of exceptions. It's probably a\n  good idea to always include ``ContinueResolving`` in the tuple.\n\n* If the last view in a ``multiurl`` raises ``ContinueResolving`` (or another\n  \"continuing\" exception), a 404 will be raised instead. That is, if resolving\n  \"falls off the end\" of some multi-urls, you'll get the 404 you expect.\n\n* Reverse URL resolution just works as expected. Name your sub-URLs and then\n  reverse your heart out.\n\nContributing\n------------\n\nDevelopment takes place\n`on GitHub <http://github.com/jacobian/django-multiurl>`_; pull requests are\nwelcome. Run tests with `tox <http://tox.readthedocs.org/>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "https://github.com/raiderrobert/django-multiurl/tarball/v1.4.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/raiderrobert/django-multiurl", "keywords": "django urls", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "django-multiurl", "package_url": "https://pypi.org/project/django-multiurl/", "platform": "", "project_url": "https://pypi.org/project/django-multiurl/", "project_urls": {"Download": "https://github.com/raiderrobert/django-multiurl/tarball/v1.4.0", "Homepage": "https://github.com/raiderrobert/django-multiurl"}, "release_url": "https://pypi.org/project/django-multiurl/1.4.0/", "requires_dist": null, "requires_python": "", "summary": "Allow multiple views to match the same URL.", "version": "1.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/raiderrobert/django-multiurl\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/raiderrobert/django-multiurl.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5c96da206b4e2ba2d54baff0ee9e378cb72eefa/68747470733a2f2f7472617669732d63692e6f72672f726169646572726f626572742f646a616e676f2d6d756c746975726c2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/raiderrobert/django-multiurl?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/raiderrobert/django-multiurl/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a1583a5a8d092624950b79bcc9630cf98be081e/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f726169646572726f626572742f646a616e676f2d6d756c746975726c2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Have you ever wanted multiple views to match to the same URL? Now you can.</p>\n<p>You may once have tried something like this:</p>\n<pre>urlpatterns = [\n    url('/app/(\\w+)/$', app.views.people),\n    url('/app/(\\w+)/$', app.views.place),\n]\n</pre>\n<p>However, if you try this, <tt><span class=\"pre\">/app/san-francisco/</span></tt> will only map to\n<tt>app.views.people</tt>. Raising an <tt>Http404</tt> from <tt>app.views.people</tt> doesn\u2019t\nhelp: you only get a 404 in the browser because Django stops resolving\nURLs at the first match.</p>\n<p>Well, <tt><span class=\"pre\">django-multiurl</span></tt> solves this problem. Just\n<tt>pip install <span class=\"pre\">django-multiurl</span></tt>, then do this:</p>\n<pre>from multiurl import multiurl\n\nurlpatterns = [\n    multiurl(\n        url('/app/(\\w+)/$', app.views.people),\n        url('/app/(\\w+)/$', app.views.place),\n    )\n]\n</pre>\n<p>Now in your views, raise <tt>multiurl.ContinueResolving</tt> anywhere you\u2019d like\nto break out of the view and keep resolving. For example, here\u2019s what\n<tt>app.views.people</tt> might look like:</p>\n<pre>from multiurl import ContinueResolving\n\ndef people(request, name):\n    try:\n        person = Person.objects.get(name=name)\n    except Person.DoesNotExist:\n        raise ContinueResolving\n    return render(...)\n</pre>\n<p>That\u2019s it! <tt>ContinueResolving</tt> will cause <tt>multiurl</tt> to continue onto the\nnext view (<tt>app.views.place</tt>, in this example).</p>\n<p>A few notes to round things out:</p>\n<ul>\n<li><p>If you don\u2019t want to use <tt>ContinueResolving</tt> \u2013 perhaps you\u2019d rather\ncontinue using <tt>get_object_or_404</tt>, or you\u2019re using third-party views\nthat you can\u2019t modify to raise <tt>ContinueResolving</tt>, you can pass a\n<tt>catch</tt> argument into <tt>multiurl</tt> to control which exceptions are\nconsidered \u201ccontinue\u201d statements. For example, to allow <tt>Http404</tt>\nexceptions to continue resolving, do this:</p>\n<pre>urlpatterns = [\n    multiurl(\n        url('/app/(\\w+)/$', app.views.people),\n        url('/app/(\\w+)/$', app.views.place),\n        catch = (Http404, ContinueResolving)\n    )\n]\n</pre>\n<p>As you can see, <tt>catch</tt> should be a tuple of exceptions. It\u2019s probably a\ngood idea to always include <tt>ContinueResolving</tt> in the tuple.</p>\n</li>\n<li><p>If the last view in a <tt>multiurl</tt> raises <tt>ContinueResolving</tt> (or another\n\u201ccontinuing\u201d exception), a 404 will be raised instead. That is, if resolving\n\u201cfalls off the end\u201d of some multi-urls, you\u2019ll get the 404 you expect.</p>\n</li>\n<li><p>Reverse URL resolution just works as expected. Name your sub-URLs and then\nreverse your heart out.</p>\n</li>\n</ul>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Development takes place\n<a href=\"http://github.com/jacobian/django-multiurl\" rel=\"nofollow\">on GitHub</a>; pull requests are\nwelcome. Run tests with <a href=\"http://tox.readthedocs.org/\" rel=\"nofollow\">tox</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6081127, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e9933a7ffb91655734b2e94e52b0b7ba", "sha256": "da715d01272f6d56c2b6fba6722a6a621b5c435bf6ba433301f02c699bfd294d"}, "downloads": -1, "filename": "django-multiurl-1.0.tar.gz", "has_sig": false, "md5_digest": "e9933a7ffb91655734b2e94e52b0b7ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3270, "upload_time": "2013-04-02T19:01:22", "upload_time_iso_8601": "2013-04-02T19:01:22.956463Z", "url": "https://files.pythonhosted.org/packages/70/4e/8d5947169122d58d33b0e5dfbba5a767cdc2d68dd0ae00325101fa364257/django-multiurl-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1daf58e31e2237b3fe5f86d5f5032d2e", "sha256": "700acb9b2c424a83e88eba2959677a45f2d1b728349d4a406c3fb3d944796be8"}, "downloads": -1, "filename": "django-multiurl-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1daf58e31e2237b3fe5f86d5f5032d2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3349, "upload_time": "2013-04-03T19:19:48", "upload_time_iso_8601": "2013-04-03T19:19:48.631592Z", "url": "https://files.pythonhosted.org/packages/4a/1f/6418d23eb6412e159157e52401d4a01ea7ed105978dd5322561cb42e6078/django-multiurl-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "c50311564482c76479200807fbaeaafd", "sha256": "2c6770a0fae4e30dec6f2d7b9a068fe1ca25d24e7cefee618ce5fe71b1e456fa"}, "downloads": -1, "filename": "django_multiurl-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c50311564482c76479200807fbaeaafd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3335, "upload_time": "2016-01-28T03:13:05", "upload_time_iso_8601": "2016-01-28T03:13:05.357228Z", "url": "https://files.pythonhosted.org/packages/4c/71/b394c73820175e9c166d4dfec49b936bc3c9b37efce524c96a4a56e80723/django_multiurl-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a28e0d56447cd91c2a717e63a17356e6", "sha256": "8321080e70f6c87b513d344244d84bca903ee460e406c8c63ea05485b10aefb8"}, "downloads": -1, "filename": "django-multiurl-1.1.0.zip", "has_sig": false, "md5_digest": "a28e0d56447cd91c2a717e63a17356e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6430, "upload_time": "2016-01-28T03:13:17", "upload_time_iso_8601": "2016-01-28T03:13:17.291949Z", "url": "https://files.pythonhosted.org/packages/fc/a6/4a2c0ef895c4ebbb8ea0ca2fedc5b70bd1cc7298cd115d050e31a2a046b5/django-multiurl-1.1.0.zip", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "ab57fc0faa7e3dc6bc351680b82d7f74", "sha256": "0324d56775c291f7e2d202d9b17cf2c90412f216199bbde433dac84eebd8e04f"}, "downloads": -1, "filename": "django-multiurl-1.2.0.tar.gz", "has_sig": false, "md5_digest": "ab57fc0faa7e3dc6bc351680b82d7f74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4163, "upload_time": "2018-03-08T20:21:20", "upload_time_iso_8601": "2018-03-08T20:21:20.203966Z", "url": "https://files.pythonhosted.org/packages/e5/8f/a509839247b88499860a64c1b8a10b0cfb5f8abebc053ad21f857f5519b4/django-multiurl-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "19551fa2b8ffadb30f798d8bc0f9e8d6", "sha256": "2f6d48928e2779ed9893aa5b336b02f5e4de3d81c87299723876414bdc2e5791"}, "downloads": -1, "filename": "django_multiurl-1.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "19551fa2b8ffadb30f798d8bc0f9e8d6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3448, "upload_time": "2019-07-01T16:46:18", "upload_time_iso_8601": "2019-07-01T16:46:18.711374Z", "url": "https://files.pythonhosted.org/packages/36/b7/e9ce21f7a95a3cc4058cc4bb3efd7ca26bf7c012907333563a19a712b609/django_multiurl-1.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a1c2d183121930f211298791b527513", "sha256": "306e68c80adb8323335c4127d2a0658bb14dd46deb625c14d0b42df85b5c75e5"}, "downloads": -1, "filename": "django-multiurl-1.3.0.tar.gz", "has_sig": false, "md5_digest": "6a1c2d183121930f211298791b527513", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4166, "upload_time": "2019-07-01T16:46:19", "upload_time_iso_8601": "2019-07-01T16:46:19.706227Z", "url": "https://files.pythonhosted.org/packages/37/35/407afd32eb2453fed2fedee5e3dbc8df2afb9bf32b08eb5d4a5ee96270aa/django-multiurl-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "998dd747a2ba4d8d1c4addb5dad79623", "sha256": "25268eaff4ae2fb929c88657d9fd73eb650758303cac8818cc5b838bdbf1a5f1"}, "downloads": -1, "filename": "django-multiurl-1.4.0.tar.gz", "has_sig": false, "md5_digest": "998dd747a2ba4d8d1c4addb5dad79623", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4496, "upload_time": "2019-11-05T14:25:45", "upload_time_iso_8601": "2019-11-05T14:25:45.134120Z", "url": "https://files.pythonhosted.org/packages/a5/7e/ecb104f482bf9e529b4b05151328debf0583d7f9087fd730db375bbc3fb6/django-multiurl-1.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "998dd747a2ba4d8d1c4addb5dad79623", "sha256": "25268eaff4ae2fb929c88657d9fd73eb650758303cac8818cc5b838bdbf1a5f1"}, "downloads": -1, "filename": "django-multiurl-1.4.0.tar.gz", "has_sig": false, "md5_digest": "998dd747a2ba4d8d1c4addb5dad79623", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4496, "upload_time": "2019-11-05T14:25:45", "upload_time_iso_8601": "2019-11-05T14:25:45.134120Z", "url": "https://files.pythonhosted.org/packages/a5/7e/ecb104f482bf9e529b4b05151328debf0583d7f9087fd730db375bbc3fb6/django-multiurl-1.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:47 2020"}