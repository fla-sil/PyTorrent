{"info": {"author": "Tuenti Technologies S.L.", "author_email": "sre@tuenti.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Topic :: Software Development :: Version Control"], "description": "Repoman\n=======\n\nRepoman is a python library designed to automate repository operations\nin release processes.\n\nIt provides a unified API to work with different SCMs, and the\nmechanisms to quickly have ready and clean working copies. It currently\nsupports git and mercurial.\n\nThere are some basic concepts that are needed to start working with\nRepoman:\n\n-  A ``Repository`` is an instance with the usual operations of a SCM.\n-  A ``Depot`` contains a repository, and the operations to interact\n   with Repoman managers.\n-  A ``DepotManager`` provides ``Depots`` with an specific code, each\n   ``DepotManager`` is intended to manage ``Depots`` of the same\n   project.\n-  Each ``Depot`` is locked to the task that requests it to the manager\n   and belongs to this task till it's freed.\n\nBut the best way to see how it works is with an example:\n\n.. code:: python\n\n    from repoman import depot_manager\n\n    repo_kind = 'git'\n    repo_url = 'https://github.com/tuenti/python-repoman.git'\n\n    manager = depot_manager.DepotManager(repo_kind=repo_kind)\n\n    depot = manager.give_me_depot('task_id', 'Owner task name')\n\n    try:\n        depot.request_refresh({ repo_url: ['master'] })\n\n        # Do work...\n        depot.repository.tag('example')\n        # ...\n\n        # If you were going to continue the task in other process,\n        # it needs to receive the path of the depot to request it\n        depot = manager.give_me_depot_from_path(depot.path)\n        assert 'example' in depot.repository.tags()\n\n    finally:\n        # And when the repository is not needed anymore, free its depot\n        manager.free_depot(depot, 'task_id')\n\nYou can know more by looking to the examples in the ``doc/examples``\ndirectory, and to the full `API reference`_.\n\nInstallation\n------------\n\nRepoman is intended to be used as part of a more complex release\nautomation infrastructure, it requires a quite specific set of\ndependencies, see ``Requirements`` section to know more about this.\n\nTo install it in your development environment, you can use pip:\n\n::\n\n    pip install -e git+https://github.com/tuenti/python-repoman.git@v0.6#egg=repoman\n\nTo install it in your production environment, it's recommended to\ngenerate your own packages, usual tools can be used for that, e.g:\n\n::\n\n    python setup.py bdist_egg\n\nRequirements\n------------\n\nRepoman should play well with any Linux distribution with Python > 2.6,\nit's daily used in Debian, and has been also tested in Ubuntu and\nFedora.\n\nAs a general rule, ``pip install -r requirements.txt`` is able to\ninstall everything, but some things need to be taken into account.\n\n``pygit2`` needs to be compiled, for that you need a ``gcc`` toolchain\nand the development files of ``libgit2`` (see `pygit2 installation notes`_).\nYou have to use the same version of ``pygit2`` and ``libgit2``. Currently\nrepoman only works with 0.20 series. It's recommended to prepare your own\nset of pre-built packages for your production enviroment.\n\n``mercurial`` > 2.1 is also required, as well as ``python-hglib``, the\nversion specified in the ``requirements.txt`` file should be fine.\n\nSome Dockerfiles are provided in the ``docker`` directory that can serve\nas examples about how to prepare an environment to work with repoman in\ndifferent distributions.\n\nCredits & Contact\n-----------------\n\nRepoman was created by `Tuenti Technologies S.L.`_. You can follow\nTuenti engineering team on Twitter `@tuentieng`_.\n\nLicense\n-------\n\nRepoman is available under the Apache License, Version 2.0. See LICENSE\nfile for more info.\n\n.. _`API reference`: http://tuenti.github.io/python-repoman\n.. _`pygit2 installation notes`: http://www.pygit2.org/install.html\n.. _`@tuentieng`: http://twitter.com/tuentieng\n.. _`Tuenti Technologies S.L.`: http://github.com/tuenti", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/tuenti/python-repoman/tarball/v0.7.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tuenti/python-repoman", "keywords": "DVCS git mercurial", "license": "Apache Software License", "maintainer": null, "maintainer_email": null, "name": "repoman-scm", "package_url": "https://pypi.org/project/repoman-scm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/repoman-scm/", "project_urls": {"Download": "https://github.com/tuenti/python-repoman/tarball/v0.7.1", "Homepage": "https://github.com/tuenti/python-repoman"}, "release_url": "https://pypi.org/project/repoman-scm/0.7.1/", "requires_dist": null, "requires_python": null, "summary": "Library and tools to manage pools of code repositories", "version": "0.7.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Repoman is a python library designed to automate repository operations\nin release processes.</p>\n<p>It provides a unified API to work with different SCMs, and the\nmechanisms to quickly have ready and clean working copies. It currently\nsupports git and mercurial.</p>\n<p>There are some basic concepts that are needed to start working with\nRepoman:</p>\n<ul>\n<li>A <tt>Repository</tt> is an instance with the usual operations of a SCM.</li>\n<li>A <tt>Depot</tt> contains a repository, and the operations to interact\nwith Repoman managers.</li>\n<li>A <tt>DepotManager</tt> provides <tt>Depots</tt> with an specific code, each\n<tt>DepotManager</tt> is intended to manage <tt>Depots</tt> of the same\nproject.</li>\n<li>Each <tt>Depot</tt> is locked to the task that requests it to the manager\nand belongs to this task till it\u2019s freed.</li>\n</ul>\n<p>But the best way to see how it works is with an example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">repoman</span> <span class=\"kn\">import</span> <span class=\"n\">depot_manager</span>\n\n<span class=\"n\">repo_kind</span> <span class=\"o\">=</span> <span class=\"s1\">'git'</span>\n<span class=\"n\">repo_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://github.com/tuenti/python-repoman.git'</span>\n\n<span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">depot_manager</span><span class=\"o\">.</span><span class=\"n\">DepotManager</span><span class=\"p\">(</span><span class=\"n\">repo_kind</span><span class=\"o\">=</span><span class=\"n\">repo_kind</span><span class=\"p\">)</span>\n\n<span class=\"n\">depot</span> <span class=\"o\">=</span> <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">give_me_depot</span><span class=\"p\">(</span><span class=\"s1\">'task_id'</span><span class=\"p\">,</span> <span class=\"s1\">'Owner task name'</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">depot</span><span class=\"o\">.</span><span class=\"n\">request_refresh</span><span class=\"p\">({</span> <span class=\"n\">repo_url</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'master'</span><span class=\"p\">]</span> <span class=\"p\">})</span>\n\n    <span class=\"c1\"># Do work...</span>\n    <span class=\"n\">depot</span><span class=\"o\">.</span><span class=\"n\">repository</span><span class=\"o\">.</span><span class=\"n\">tag</span><span class=\"p\">(</span><span class=\"s1\">'example'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># ...</span>\n\n    <span class=\"c1\"># If you were going to continue the task in other process,</span>\n    <span class=\"c1\"># it needs to receive the path of the depot to request it</span>\n    <span class=\"n\">depot</span> <span class=\"o\">=</span> <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">give_me_depot_from_path</span><span class=\"p\">(</span><span class=\"n\">depot</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"s1\">'example'</span> <span class=\"ow\">in</span> <span class=\"n\">depot</span><span class=\"o\">.</span><span class=\"n\">repository</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"p\">()</span>\n\n<span class=\"k\">finally</span><span class=\"p\">:</span>\n    <span class=\"c1\"># And when the repository is not needed anymore, free its depot</span>\n    <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">free_depot</span><span class=\"p\">(</span><span class=\"n\">depot</span><span class=\"p\">,</span> <span class=\"s1\">'task_id'</span><span class=\"p\">)</span>\n</pre>\n<p>You can know more by looking to the examples in the <tt>doc/examples</tt>\ndirectory, and to the full <a href=\"http://tuenti.github.io/python-repoman\" rel=\"nofollow\">API reference</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Repoman is intended to be used as part of a more complex release\nautomation infrastructure, it requires a quite specific set of\ndependencies, see <tt>Requirements</tt> section to know more about this.</p>\n<p>To install it in your development environment, you can use pip:</p>\n<pre>pip install -e git+https://github.com/tuenti/python-repoman.git@v0.6#egg=repoman\n</pre>\n<p>To install it in your production environment, it\u2019s recommended to\ngenerate your own packages, usual tools can be used for that, e.g:</p>\n<pre>python setup.py bdist_egg\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Repoman should play well with any Linux distribution with Python &gt; 2.6,\nit\u2019s daily used in Debian, and has been also tested in Ubuntu and\nFedora.</p>\n<p>As a general rule, <tt>pip install <span class=\"pre\">-r</span> requirements.txt</tt> is able to\ninstall everything, but some things need to be taken into account.</p>\n<p><tt>pygit2</tt> needs to be compiled, for that you need a <tt>gcc</tt> toolchain\nand the development files of <tt>libgit2</tt> (see <a href=\"http://www.pygit2.org/install.html\" rel=\"nofollow\">pygit2 installation notes</a>).\nYou have to use the same version of <tt>pygit2</tt> and <tt>libgit2</tt>. Currently\nrepoman only works with 0.20 series. It\u2019s recommended to prepare your own\nset of pre-built packages for your production enviroment.</p>\n<p><tt>mercurial</tt> &gt; 2.1 is also required, as well as <tt><span class=\"pre\">python-hglib</span></tt>, the\nversion specified in the <tt>requirements.txt</tt> file should be fine.</p>\n<p>Some Dockerfiles are provided in the <tt>docker</tt> directory that can serve\nas examples about how to prepare an environment to work with repoman in\ndifferent distributions.</p>\n</div>\n<div id=\"credits-contact\">\n<h2>Credits &amp; Contact</h2>\n<p>Repoman was created by <a href=\"http://github.com/tuenti\" rel=\"nofollow\">Tuenti Technologies S.L.</a>. You can follow\nTuenti engineering team on Twitter <a href=\"http://twitter.com/tuentieng\" rel=\"nofollow\">@tuentieng</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Repoman is available under the Apache License, Version 2.0. See LICENSE\nfile for more info.</p>\n</div>\n\n          </div>"}, "last_serial": 1213937, "releases": {"0.6.0": [], "0.6.3": [{"comment_text": "", "digests": {"md5": "ff2b80f1a1d1628862ef3a668a80c184", "sha256": "7eb6bf55b67e2a4afef5301c56a4b86d9679adec45985da1ed42af8178a2978b"}, "downloads": -1, "filename": "repoman-scm-0.6.3.tar.gz", "has_sig": false, "md5_digest": "ff2b80f1a1d1628862ef3a668a80c184", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29642, "upload_time": "2014-07-28T11:20:56", "upload_time_iso_8601": "2014-07-28T11:20:56.570909Z", "url": "https://files.pythonhosted.org/packages/6e/8d/3b0b9e8323fd563dc8b18b99fb26c72417fdf701530762b578d4d8e19391/repoman-scm-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "c7b5217800630fb4d0a1284bf2efb148", "sha256": "68949f072926064465b7af9d43949ae221c673181c1ba2375c0b389e2a7293a1"}, "downloads": -1, "filename": "repoman-scm-0.6.4.tar.gz", "has_sig": false, "md5_digest": "c7b5217800630fb4d0a1284bf2efb148", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32521, "upload_time": "2014-07-28T11:29:18", "upload_time_iso_8601": "2014-07-28T11:29:18.752346Z", "url": "https://files.pythonhosted.org/packages/d7/b9/577d621ece9486320e9cdc7e441d5195f39bde8acefc6604b7273a51a598/repoman-scm-0.6.4.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "95f58f8764b64ad55fa1b56e8427f18a", "sha256": "05569cfd39179ba784e423c0dcbdb9d086f84548899688401fa3cfd4233c632f"}, "downloads": -1, "filename": "repoman-scm-0.7.1.tar.gz", "has_sig": false, "md5_digest": "95f58f8764b64ad55fa1b56e8427f18a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32203, "upload_time": "2014-09-05T10:54:20", "upload_time_iso_8601": "2014-09-05T10:54:20.060579Z", "url": "https://files.pythonhosted.org/packages/c3/25/59b9b362cbafb0762cc66ed1493a4b53342d55c0eaf10389a62282c14639/repoman-scm-0.7.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "95f58f8764b64ad55fa1b56e8427f18a", "sha256": "05569cfd39179ba784e423c0dcbdb9d086f84548899688401fa3cfd4233c632f"}, "downloads": -1, "filename": "repoman-scm-0.7.1.tar.gz", "has_sig": false, "md5_digest": "95f58f8764b64ad55fa1b56e8427f18a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32203, "upload_time": "2014-09-05T10:54:20", "upload_time_iso_8601": "2014-09-05T10:54:20.060579Z", "url": "https://files.pythonhosted.org/packages/c3/25/59b9b362cbafb0762cc66ed1493a4b53342d55c0eaf10389a62282c14639/repoman-scm-0.7.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:35 2020"}