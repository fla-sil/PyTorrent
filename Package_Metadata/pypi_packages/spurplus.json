{"info": {"author": "Marko Ristin", "author_email": "marko.ristin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "Spur+\n=====\n\n.. image:: https://api.travis-ci.com/Parquery/spurplus.svg?branch=master\n    :target: https://api.travis-ci.com/Parquery/spurplus.svg?branch=master\n    :alt: Build Status\n\n.. image:: https://coveralls.io/repos/github/Parquery/spurplus/badge.svg?branch=master\n    :target: https://coveralls.io/github/Parquery/spurplus?branch=master\n    :alt: Coverage\n\n.. image:: https://readthedocs.org/projects/spurplus/badge/?version=latest\n    :target: https://spurplus.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n    \n.. image:: https://badge.fury.io/py/spurplus.svg\n    :target: https://pypi.org/project/spurplus/\n    :alt: PyPi\n\n.. image:: https://img.shields.io/pypi/pyversions/spurplus.svg\n    :alt: PyPI - Python Version\n\nSpur+ is a library to manage remote machines and perform file operations over SSH.\n\nIt builds on top of Spur_ and Paramiko_ libraries. While we already find that Spur_ and Paramiko_ provide most of the\nfunctionality out-of-the-box, we missed certain features:\n\n- typing. Since spur supports both Python 2 and 3, it does not provide any type annotations which makes it harder to use\n  with type checkers such as mypy.\n\n- pathlib.Path support. We find it easier to manipulate paths using pathlib.Path instead of plain strings. spur+\n  provides support for both.\n\n- a function for creating directories. spur relies on sftp client. While it is fairly straightforward to get an sftp\n  client from ``spur.SshShell`` and create a directory, we think that it merits a wrapper function akin to\n  ``pathlib.Path.mkdir()`` provided how often this functionality is needed.\n\n- reading/writing text and binary data in one go. Similarly to creating directories, ``spur.SshShell.open()`` already\n  provides all the functionality you need to read/write files. However, we found the usage code to be more readable when\n  written in one line and no extra variables for file descriptors are introduced.\n\n- a function for putting and getting files to/from the remote host, respectively.\n\n- a function to sync a local directory to a remote directory (similar to ``rsync``).\n\n- a function for computing MD5 checksums.\n\n- a function to check if a file exists.\n\n- a more elaborate context manager for a temporary directory which allows for specifying prefix, suffix and\n  base directory and gives you a pathlib.Path. In contrast, ``spur.temporary_directory()`` gives you only a string with\n  no knobs.\n\n- an initializer function to repeatedly re-connect on connection failure. We found this function particularly important\n  when you spin a virtual instance in the cloud and need to wait for it to initialize.\n\n- a wrapper around paramiko's SFTP client (``spurplus.sftp.ReconnectingSFTP``) to automatically reconnect if the SFTP\n  client experienced a connection failure. While original ``spur.SshShell.open()`` creates a new SFTP client on every\n  call in order to prevent issues with time-outs, `spurplus.SshShell` is able to re-use the SFTP client over multiple\n  calls via ``spurplus.sftp.ReconnectingSFTP``.\n\n  This can lead up to 10x speed-up (see the benchmark in ``tests/live_test.py``).\n\n.. _Spur: https://github.com/mwilliamson/spur.py\n.. _Paramiko: https://github.com/paramiko/paramiko\n\nUsage\n=====\n.. code-block:: python\n\n    import pathlib\n\n    import spurplus\n\n    # Re-try on connection failure; sftp client and the underlying spur SshShell\n    # are automatically closed when the shell is closed.\n    with spurplus.connect_with_retries(\n            hostname='some-machine.example.com', username='devop') as shell:\n        p = pathlib.Path('/some/directory')\n\n        # Create a directory\n        shell.mkdir(remote_path=p, parents=True, exist_ok=True)\n\n        # Write a file\n        shell.write_text(remote_path=p/'some-file', text='hello world!')\n\n        # Read from a file\n        text = shell.read_text(remote_path=p/'some-file')\n\n        # Change the permissions\n        shell.chmod(remote_path=p/'some-file', mode=0o444)\n\n        # Sync a local directory to a remote.\n        # Only differing files are uploaded,\n        # files missing locally are deleted before the transfer and\n        # the permissions are mirrored from the local.\n        sync_to_remote(\n            local_path=\"/some/local/directory\",\n            remote_path=\"/some/remote/directory\",\n            delete=spurplus.Delete.BEFORE,\n            preserve_permissions = True)\n\n        # Stat the file\n        print(\"The stat of {}: {}\".format(p/'some-file', shell.stat(p/'some-file')))\n\n        # Use a wrapped SFTP client\n        sftp = shell.as_sftp()\n        # Do something with the SFTP\n        for attr in sftp.listdir_attr(path=p.as_posix()):\n            do_something(attr.filename, attr.st_size)\n\nDocumentation\n=============\nThe documentation is available on `readthedocs <https://spurplus.readthedocs.io/en/latest/>`_.\n\nInstallation\n============\n\n* Create a virtual environment:\n\n.. code-block:: bash\n\n    python3 -m venv venv3\n\n* Activate it:\n\n.. code-block:: bash\n\n    source venv3/bin/activate\n\n* Install spur+ with pip:\n\n.. code-block:: bash\n\n    pip3 install spurplus\n\nDevelopment\n===========\n\n* Check out the repository.\n\n* In the repository root, create the virtual environment:\n\n.. code-block:: bash\n\n    python3 -m venv venv3\n\n* Activate the virtual environment:\n\n.. code-block:: bash\n\n    source venv3/bin/activate\n\n* Install the development dependencies:\n\n.. code-block:: bash\n\n    pip3 install -e .[dev]\n\n* There are live tests for which you need to have a running SSH server. The parameters of the tests\n  are passed via environment variables:\n\n    - ``TEST_SSH_HOSTNAME`` (host name of the SSH server, defaults to \"127.0.0.1\"),\n    - ``TEST_SSH_PORT`` (optional, defaults to 22),\n    - ``TEST_SSH_USERNAME`` (optional, uses paramiko's default),\n    - ``TEST_SSH_PASSWORD`` (optional, uses private key file if not specified) and\n    - ``TEST_SSH_PRIVATE_KEY_FILE`` (optional, looks for private key in expected places if not specified).\n\nWe use tox for testing and packaging the distribution. Assuming that the above-mentioned environment variables has\nbeen set, the virutal environment has been activated and the development dependencies have been installed, run:\n\n.. code-block:: bash\n\n    tox\n\nPre-commit Checks\n-----------------\nWe provide a set of pre-commit checks that lint and check code for formatting.\n\nNamely, we use:\n\n* `yapf <https://github.com/google/yapf>`_ to check the formatting.\n* The style of the docstrings is checked with `pydocstyle <https://github.com/PyCQA/pydocstyle>`_.\n* Static type analysis is performed with `mypy <http://mypy-lang.org/>`_.\n* Various linter checks are done with `pylint <https://www.pylint.org/>`_.\n* Doctests are executed using the Python `doctest module <https://docs.python.org/3.5/library/doctest.html>`_.\n\nRun the pre-commit checks locally from an activated virtual environment with development dependencies:\n\n.. code-block:: bash\n\n    ./precommit.py\n\n* The pre-commit script can also automatically format the code:\n\n.. code-block:: bash\n\n    ./precommit.py  --overwrite\n\n\nVersioning\n==========\nWe follow `Semantic Versioning <http://semver.org/spec/v1.0.0.html>`_. The version X.Y.Z indicates:\n\n* X is the major version (backward-incompatible),\n* Y is the minor version (backward-compatible), and\n* Z is the patch version (backward-compatible bug fix).", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/Parquery/spurplus", "keywords": "ssh sftp spur paramiko execute remote commands modify files", "license": "License :: OSI Approved :: MIT License", "maintainer": "", "maintainer_email": "", "name": "spurplus", "package_url": "https://pypi.org/project/spurplus/", "platform": "", "project_url": "https://pypi.org/project/spurplus/", "project_urls": {"Homepage": "http://github.com/Parquery/spurplus"}, "release_url": "https://pypi.org/project/spurplus/2.3.3/", "requires_dist": null, "requires_python": "", "summary": "Manage remote machines and file operations over SSH.", "version": "2.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"spur\">\n<h2>Spur+</h2>\n<a href=\"https://api.travis-ci.com/Parquery/spurplus.svg?branch=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbff7f2f0670c7397b6138757d2dd568476a2cc7/68747470733a2f2f6170692e7472617669732d63692e636f6d2f50617271756572792f73707572706c75732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/Parquery/spurplus?branch=master\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34e52efd20bc1fa6f3f7302bc694619e1fed47fb/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f50617271756572792f73707572706c75732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://spurplus.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5978742b69d9a65daeb1086d6ab9482f311fddd8/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73707572706c75732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pypi.org/project/spurplus/\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd34a22e47543d04d08bf85046190d79e4ad8813/68747470733a2f2f62616467652e667572792e696f2f70792f73707572706c75732e737667\"></a>\n<img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b8dc4a0c5b4c584bef7a3e6ba75e69d4be66567/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f73707572706c75732e737667\">\n<p>Spur+ is a library to manage remote machines and perform file operations over SSH.</p>\n<p>It builds on top of <a href=\"https://github.com/mwilliamson/spur.py\" rel=\"nofollow\">Spur</a> and <a href=\"https://github.com/paramiko/paramiko\" rel=\"nofollow\">Paramiko</a> libraries. While we already find that <a href=\"https://github.com/mwilliamson/spur.py\" rel=\"nofollow\">Spur</a> and <a href=\"https://github.com/paramiko/paramiko\" rel=\"nofollow\">Paramiko</a> provide most of the\nfunctionality out-of-the-box, we missed certain features:</p>\n<ul>\n<li><p>typing. Since spur supports both Python 2 and 3, it does not provide any type annotations which makes it harder to use\nwith type checkers such as mypy.</p>\n</li>\n<li><p>pathlib.Path support. We find it easier to manipulate paths using pathlib.Path instead of plain strings. spur+\nprovides support for both.</p>\n</li>\n<li><p>a function for creating directories. spur relies on sftp client. While it is fairly straightforward to get an sftp\nclient from <tt>spur.SshShell</tt> and create a directory, we think that it merits a wrapper function akin to\n<tt>pathlib.Path.mkdir()</tt> provided how often this functionality is needed.</p>\n</li>\n<li><p>reading/writing text and binary data in one go. Similarly to creating directories, <tt>spur.SshShell.open()</tt> already\nprovides all the functionality you need to read/write files. However, we found the usage code to be more readable when\nwritten in one line and no extra variables for file descriptors are introduced.</p>\n</li>\n<li><p>a function for putting and getting files to/from the remote host, respectively.</p>\n</li>\n<li><p>a function to sync a local directory to a remote directory (similar to <tt>rsync</tt>).</p>\n</li>\n<li><p>a function for computing MD5 checksums.</p>\n</li>\n<li><p>a function to check if a file exists.</p>\n</li>\n<li><p>a more elaborate context manager for a temporary directory which allows for specifying prefix, suffix and\nbase directory and gives you a pathlib.Path. In contrast, <tt>spur.temporary_directory()</tt> gives you only a string with\nno knobs.</p>\n</li>\n<li><p>an initializer function to repeatedly re-connect on connection failure. We found this function particularly important\nwhen you spin a virtual instance in the cloud and need to wait for it to initialize.</p>\n</li>\n<li><p>a wrapper around paramiko\u2019s SFTP client (<tt>spurplus.sftp.ReconnectingSFTP</tt>) to automatically reconnect if the SFTP\nclient experienced a connection failure. While original <tt>spur.SshShell.open()</tt> creates a new SFTP client on every\ncall in order to prevent issues with time-outs, <cite>spurplus.SshShell</cite> is able to re-use the SFTP client over multiple\ncalls via <tt>spurplus.sftp.ReconnectingSFTP</tt>.</p>\n<p>This can lead up to 10x speed-up (see the benchmark in <tt>tests/live_test.py</tt>).</p>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pathlib</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">spurplus</span>\n\n<span class=\"c1\"># Re-try on connection failure; sftp client and the underlying spur SshShell</span>\n<span class=\"c1\"># are automatically closed when the shell is closed.</span>\n<span class=\"k\">with</span> <span class=\"n\">spurplus</span><span class=\"o\">.</span><span class=\"n\">connect_with_retries</span><span class=\"p\">(</span>\n        <span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s1\">'some-machine.example.com'</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'devop'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">shell</span><span class=\"p\">:</span>\n    <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"s1\">'/some/directory'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Create a directory</span>\n    <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">parents</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Write a file</span>\n    <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">write_text</span><span class=\"p\">(</span><span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">/</span><span class=\"s1\">'some-file'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'hello world!'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Read from a file</span>\n    <span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">read_text</span><span class=\"p\">(</span><span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">/</span><span class=\"s1\">'some-file'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Change the permissions</span>\n    <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">/</span><span class=\"s1\">'some-file'</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"mo\">0o444</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Sync a local directory to a remote.</span>\n    <span class=\"c1\"># Only differing files are uploaded,</span>\n    <span class=\"c1\"># files missing locally are deleted before the transfer and</span>\n    <span class=\"c1\"># the permissions are mirrored from the local.</span>\n    <span class=\"n\">sync_to_remote</span><span class=\"p\">(</span>\n        <span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">\"/some/local/directory\"</span><span class=\"p\">,</span>\n        <span class=\"n\">remote_path</span><span class=\"o\">=</span><span class=\"s2\">\"/some/remote/directory\"</span><span class=\"p\">,</span>\n        <span class=\"n\">delete</span><span class=\"o\">=</span><span class=\"n\">spurplus</span><span class=\"o\">.</span><span class=\"n\">Delete</span><span class=\"o\">.</span><span class=\"n\">BEFORE</span><span class=\"p\">,</span>\n        <span class=\"n\">preserve_permissions</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Stat the file</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"The stat of </span><span class=\"si\">{}</span><span class=\"s2\">: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">/</span><span class=\"s1\">'some-file'</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">/</span><span class=\"s1\">'some-file'</span><span class=\"p\">)))</span>\n\n    <span class=\"c1\"># Use a wrapped SFTP client</span>\n    <span class=\"n\">sftp</span> <span class=\"o\">=</span> <span class=\"n\">shell</span><span class=\"o\">.</span><span class=\"n\">as_sftp</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Do something with the SFTP</span>\n    <span class=\"k\">for</span> <span class=\"n\">attr</span> <span class=\"ow\">in</span> <span class=\"n\">sftp</span><span class=\"o\">.</span><span class=\"n\">listdir_attr</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">as_posix</span><span class=\"p\">()):</span>\n        <span class=\"n\">do_something</span><span class=\"p\">(</span><span class=\"n\">attr</span><span class=\"o\">.</span><span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"o\">.</span><span class=\"n\">st_size</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>The documentation is available on <a href=\"https://spurplus.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>Create a virtual environment:</li>\n</ul>\n<pre>python3 -m venv venv3\n</pre>\n<ul>\n<li>Activate it:</li>\n</ul>\n<pre><span class=\"nb\">source</span> venv3/bin/activate\n</pre>\n<ul>\n<li>Install spur+ with pip:</li>\n</ul>\n<pre>pip3 install spurplus\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<ul>\n<li>Check out the repository.</li>\n<li>In the repository root, create the virtual environment:</li>\n</ul>\n<pre>python3 -m venv venv3\n</pre>\n<ul>\n<li>Activate the virtual environment:</li>\n</ul>\n<pre><span class=\"nb\">source</span> venv3/bin/activate\n</pre>\n<ul>\n<li>Install the development dependencies:</li>\n</ul>\n<pre>pip3 install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<ul>\n<li><p>There are live tests for which you need to have a running SSH server. The parameters of the tests\nare passed via environment variables:</p>\n<blockquote>\n<ul>\n<li><tt>TEST_SSH_HOSTNAME</tt> (host name of the SSH server, defaults to \u201c127.0.0.1\u201d),</li>\n<li><tt>TEST_SSH_PORT</tt> (optional, defaults to 22),</li>\n<li><tt>TEST_SSH_USERNAME</tt> (optional, uses paramiko\u2019s default),</li>\n<li><tt>TEST_SSH_PASSWORD</tt> (optional, uses private key file if not specified) and</li>\n<li><tt>TEST_SSH_PRIVATE_KEY_FILE</tt> (optional, looks for private key in expected places if not specified).</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<p>We use tox for testing and packaging the distribution. Assuming that the above-mentioned environment variables has\nbeen set, the virutal environment has been activated and the development dependencies have been installed, run:</p>\n<pre>tox\n</pre>\n<div id=\"pre-commit-checks\">\n<h3>Pre-commit Checks</h3>\n<p>We provide a set of pre-commit checks that lint and check code for formatting.</p>\n<p>Namely, we use:</p>\n<ul>\n<li><a href=\"https://github.com/google/yapf\" rel=\"nofollow\">yapf</a> to check the formatting.</li>\n<li>The style of the docstrings is checked with <a href=\"https://github.com/PyCQA/pydocstyle\" rel=\"nofollow\">pydocstyle</a>.</li>\n<li>Static type analysis is performed with <a href=\"http://mypy-lang.org/\" rel=\"nofollow\">mypy</a>.</li>\n<li>Various linter checks are done with <a href=\"https://www.pylint.org/\" rel=\"nofollow\">pylint</a>.</li>\n<li>Doctests are executed using the Python <a href=\"https://docs.python.org/3.5/library/doctest.html\" rel=\"nofollow\">doctest module</a>.</li>\n</ul>\n<p>Run the pre-commit checks locally from an activated virtual environment with development dependencies:</p>\n<pre>./precommit.py\n</pre>\n<ul>\n<li>The pre-commit script can also automatically format the code:</li>\n</ul>\n<pre>./precommit.py  --overwrite\n</pre>\n</div>\n</div>\n<div id=\"versioning\">\n<h2>Versioning</h2>\n<p>We follow <a href=\"http://semver.org/spec/v1.0.0.html\" rel=\"nofollow\">Semantic Versioning</a>. The version X.Y.Z indicates:</p>\n<ul>\n<li>X is the major version (backward-incompatible),</li>\n<li>Y is the minor version (backward-compatible), and</li>\n<li>Z is the patch version (backward-compatible bug fix).</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6548177, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3db283405a9df37a6fffc0bb8a4322a0", "sha256": "3d2a9b73dc8f4429388bbce1b849d0d60dcf29ba1fb91ded16f361cb3b673392"}, "downloads": -1, "filename": "spurplus-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3db283405a9df37a6fffc0bb8a4322a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13424, "upload_time": "2018-04-30T07:36:35", "upload_time_iso_8601": "2018-04-30T07:36:35.921609Z", "url": "https://files.pythonhosted.org/packages/28/f7/6d1b9577bc781c7fc2f2b7b9091cb0e3e34c139262293b778e12167b7336/spurplus-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4f4b25de5ffe33bb0216bc78b69b0fea", "sha256": "9882cc120db31b4d998d4caf5d4aa93421789e54877e1420c7206e725cf103ae"}, "downloads": -1, "filename": "spurplus-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4f4b25de5ffe33bb0216bc78b69b0fea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14197, "upload_time": "2018-05-03T05:59:12", "upload_time_iso_8601": "2018-05-03T05:59:12.581837Z", "url": "https://files.pythonhosted.org/packages/cc/72/e52179b8547505c435ae1659fce7416b5ec70ced01fc70af616c56bf45e7/spurplus-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e897de395b6ebdbcdd0082190278dad0", "sha256": "952cb18782aa26ba88fc1d5ad15ac71b5b7bf38ff531ca1914882740107c770f"}, "downloads": -1, "filename": "spurplus-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e897de395b6ebdbcdd0082190278dad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15056, "upload_time": "2018-06-08T08:06:39", "upload_time_iso_8601": "2018-06-08T08:06:39.678880Z", "url": "https://files.pythonhosted.org/packages/66/b4/6abdd8338e904eb192d1d8719b2f65f5d7f740eec7fc595ff83967b48624/spurplus-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "f368243f331662b40ec9b2102706e228", "sha256": "0b7a18b637218f808ba818d5332b731106b8f1137436bd8b2ec59c64b8df4610"}, "downloads": -1, "filename": "spurplus-1.1.1.tar.gz", "has_sig": false, "md5_digest": "f368243f331662b40ec9b2102706e228", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15009, "upload_time": "2018-08-03T14:30:27", "upload_time_iso_8601": "2018-08-03T14:30:27.522350Z", "url": "https://files.pythonhosted.org/packages/aa/a8/fe6c5d6041600345e70671d7bc1c6288adfd4d8ef66380ac3c7176e12600/spurplus-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "b590bb89b5a0551bb384f4a8da5181f0", "sha256": "1e57dfcc5a2dfd55f3c9ff8f3476f9904ed4ed5f383cce4e321b719ba4fb2434"}, "downloads": -1, "filename": "spurplus-1.1.2.tar.gz", "has_sig": false, "md5_digest": "b590bb89b5a0551bb384f4a8da5181f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15078, "upload_time": "2018-08-03T15:08:44", "upload_time_iso_8601": "2018-08-03T15:08:44.055972Z", "url": "https://files.pythonhosted.org/packages/1c/61/3eeebc5598e6680f6f973ce6c888d58178a93d5120e1ad6ad760bcbbaf06/spurplus-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "8e09ce81e6e0cc33d6e1591ef04801a0", "sha256": "0b43d10be4bee926ac7b03a8716a86d1a933a56312ac049ff715b5eb79db410b"}, "downloads": -1, "filename": "spurplus-1.2.0.tar.gz", "has_sig": false, "md5_digest": "8e09ce81e6e0cc33d6e1591ef04801a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18458, "upload_time": "2018-08-21T15:02:55", "upload_time_iso_8601": "2018-08-21T15:02:55.544426Z", "url": "https://files.pythonhosted.org/packages/8e/e2/fe6aa4f845ff8714061992616455c8a31a9d86f397523936a684f4452fde/spurplus-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "774a782150b9870d9afe8901879c7ba3", "sha256": "2c6083703d5c851bda0210f5f70ac38ab0f412b698278220c5b54a055d16c8bb"}, "downloads": -1, "filename": "spurplus-1.2.1.tar.gz", "has_sig": false, "md5_digest": "774a782150b9870d9afe8901879c7ba3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18978, "upload_time": "2018-08-22T00:29:04", "upload_time_iso_8601": "2018-08-22T00:29:04.124996Z", "url": "https://files.pythonhosted.org/packages/69/37/880cbe8355744dd04c60e14ab344809f1cf6a2560c9cf076d919592c95b9/spurplus-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "d8802e9a96fa0d5ff7426ad98fa63968", "sha256": "f64b94bd22497fdfbc4188cd66ea74cc6b704b27371736306693806bf25e7cb2"}, "downloads": -1, "filename": "spurplus-1.2.2.tar.gz", "has_sig": false, "md5_digest": "d8802e9a96fa0d5ff7426ad98fa63968", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19461, "upload_time": "2018-08-24T11:53:33", "upload_time_iso_8601": "2018-08-24T11:53:33.824018Z", "url": "https://files.pythonhosted.org/packages/3b/1d/253c79b659315c9265f8cef5bff8e5de5a7f76facb41a263d48d92341f21/spurplus-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "6329249ac0d4fca1e185bbb473d1b9a6", "sha256": "220c51754b45a7568816235ba6c57c51d91c98911c330d6bbe3a5d592ef17b74"}, "downloads": -1, "filename": "spurplus-1.2.3.tar.gz", "has_sig": false, "md5_digest": "6329249ac0d4fca1e185bbb473d1b9a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20272, "upload_time": "2018-08-24T12:15:52", "upload_time_iso_8601": "2018-08-24T12:15:52.936351Z", "url": "https://files.pythonhosted.org/packages/dc/4a/3557e2288fd773978f63cfb1c08f39226bc7fbd6c53a3c6d6c7cd5a3ab61/spurplus-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "72358990ec58ca0350f1bf8d9f3af4f9", "sha256": "18b9b7b81fa521c95563667644f50534522ee1e89de4e368a027ce67c5c2f7d7"}, "downloads": -1, "filename": "spurplus-1.2.4.tar.gz", "has_sig": false, "md5_digest": "72358990ec58ca0350f1bf8d9f3af4f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20271, "upload_time": "2018-08-24T12:50:02", "upload_time_iso_8601": "2018-08-24T12:50:02.304106Z", "url": "https://files.pythonhosted.org/packages/a7/c2/8c33831a004537470ca0cf21e54eb46bf950f300a3bd8ab16e7e64dd5c1a/spurplus-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "2038ffcf7907ae8826318bde7277a53d", "sha256": "e670f307f750cfa7e9fa18c14bc4e3fab27d15cee6d656cebcd0dd3cbb537538"}, "downloads": -1, "filename": "spurplus-1.2.5.tar.gz", "has_sig": false, "md5_digest": "2038ffcf7907ae8826318bde7277a53d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20417, "upload_time": "2018-08-28T10:20:49", "upload_time_iso_8601": "2018-08-28T10:20:49.227208Z", "url": "https://files.pythonhosted.org/packages/12/32/059b15b45e3ad8f7fc0e5958d68e53b4c1e57ab922a739d62eff1aed3111/spurplus-1.2.5.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "d5456cbe685d970acb544014e49bbff2", "sha256": "e0233874d14d00ab41a4822e6ccbbfe472528469ce7d1477633e4624bdc5d4d0"}, "downloads": -1, "filename": "spurplus-2.0.0.tar.gz", "has_sig": false, "md5_digest": "d5456cbe685d970acb544014e49bbff2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20000, "upload_time": "2018-10-02T15:20:46", "upload_time_iso_8601": "2018-10-02T15:20:46.157430Z", "url": "https://files.pythonhosted.org/packages/bd/68/0bcea1cd065db2511302569c4e16411dc85c43227773612bf974718bc210/spurplus-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "a017295825c57f3fc5a52e349f728e39", "sha256": "9c90ff2a087a5930a5fe28a6dad6f1aab5b2ed02b3fe71c84089ee1b39ec7ad6"}, "downloads": -1, "filename": "spurplus-2.1.0.tar.gz", "has_sig": false, "md5_digest": "a017295825c57f3fc5a52e349f728e39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20084, "upload_time": "2018-10-05T08:40:20", "upload_time_iso_8601": "2018-10-05T08:40:20.049186Z", "url": "https://files.pythonhosted.org/packages/b9/1a/a69efe92c59889885dfb5411d749d20162c1056397a6f67726178fc7855a/spurplus-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "094e56e671fe7579550275f87bae75d2", "sha256": "c5a5cd219e649834ec7e3193dcbfaf80b9f0c47d07ed54a175a20c29c29d6302"}, "downloads": -1, "filename": "spurplus-2.1.1.tar.gz", "has_sig": false, "md5_digest": "094e56e671fe7579550275f87bae75d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20208, "upload_time": "2018-10-19T10:09:46", "upload_time_iso_8601": "2018-10-19T10:09:46.620008Z", "url": "https://files.pythonhosted.org/packages/2b/44/179ee3da95c6b29fb2a09a66a20d717aa7bf5137720134cdd1b9aa22aa0e/spurplus-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "9157280453c39e88b81070da815ab828", "sha256": "bfb376dea8ef3dc84318633af838cc8c631c6a01e1990d9f88f5acaadfb6b9ca"}, "downloads": -1, "filename": "spurplus-2.1.2.tar.gz", "has_sig": false, "md5_digest": "9157280453c39e88b81070da815ab828", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20222, "upload_time": "2018-10-23T12:20:28", "upload_time_iso_8601": "2018-10-23T12:20:28.326207Z", "url": "https://files.pythonhosted.org/packages/9a/cc/4ff38b4ab92c75896fe0949fd649f8379212832d32a2867cfffd6309535d/spurplus-2.1.2.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "789186323a537856d1bf02f5ca10ac1b", "sha256": "f02f631aeb13d20982a9135784f99e76092dae780b0f703a432fb2c4bcbbec1e"}, "downloads": -1, "filename": "spurplus-2.2.0.tar.gz", "has_sig": false, "md5_digest": "789186323a537856d1bf02f5ca10ac1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20251, "upload_time": "2018-10-30T11:02:19", "upload_time_iso_8601": "2018-10-30T11:02:19.485588Z", "url": "https://files.pythonhosted.org/packages/d5/f1/049a08facd290777b12bf96f9dec8c1210a98bd854c68abf599536033a83/spurplus-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "b534fe27bef893683a477482f672594e", "sha256": "5635cab365bd51936d6491364e27f095e6376acca58b4f86d3d797055c7c65bf"}, "downloads": -1, "filename": "spurplus-2.2.1.tar.gz", "has_sig": false, "md5_digest": "b534fe27bef893683a477482f672594e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20252, "upload_time": "2019-03-01T10:17:53", "upload_time_iso_8601": "2019-03-01T10:17:53.258625Z", "url": "https://files.pythonhosted.org/packages/0a/20/c917c027f7cfad96e2967e8edc2bbba56b805292e73f0da4b41906db51d1/spurplus-2.2.1.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "cba3a374d0d4bbca72a014e6dd5b86d4", "sha256": "94547d40eebcbbd3eea771b92dc34fc9caccaeb596d3d4df6392bdb4481ba3d1"}, "downloads": -1, "filename": "spurplus-2.3.0.tar.gz", "has_sig": false, "md5_digest": "cba3a374d0d4bbca72a014e6dd5b86d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20619, "upload_time": "2019-03-01T13:25:00", "upload_time_iso_8601": "2019-03-01T13:25:00.945051Z", "url": "https://files.pythonhosted.org/packages/40/97/82678772a988074b84ea64b99fa0ced80e0bd9bc67cd8f5a5c4541518fe1/spurplus-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "8ed660a68365e98b89f2401187deae49", "sha256": "dd6423f6189976c30f82ed4493d21c19dc1fdbb01977b748ff76456a354c583c"}, "downloads": -1, "filename": "spurplus-2.3.1.tar.gz", "has_sig": false, "md5_digest": "8ed660a68365e98b89f2401187deae49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20693, "upload_time": "2019-04-09T16:04:28", "upload_time_iso_8601": "2019-04-09T16:04:28.016529Z", "url": "https://files.pythonhosted.org/packages/aa/34/1e7f8011553d10aa3351571288617eb2923da02d7a7c68c4c6fba9584d12/spurplus-2.3.1.tar.gz", "yanked": false}], "2.3.2": [{"comment_text": "", "digests": {"md5": "d4b3947b3bcc78eeaf3035d1906001ea", "sha256": "2ede4daae1339da5c296ec2f81316f87a6de52e231471499eee4bc18a6b3bfe2"}, "downloads": -1, "filename": "spurplus-2.3.2.tar.gz", "has_sig": false, "md5_digest": "d4b3947b3bcc78eeaf3035d1906001ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19460, "upload_time": "2019-09-11T15:01:16", "upload_time_iso_8601": "2019-09-11T15:01:16.991172Z", "url": "https://files.pythonhosted.org/packages/3d/17/72bd715c6fdcc53ba7c693cd400aecf745c2836cca41a9340270a984cc37/spurplus-2.3.2.tar.gz", "yanked": false}], "2.3.3": [{"comment_text": "", "digests": {"md5": "209475ede404089f77d8b2cc0a57070e", "sha256": "71c734a0827a68235d5b610c3570c3abc0c6be56708a340ba7bebc0a6eb77e92"}, "downloads": -1, "filename": "spurplus-2.3.3.tar.gz", "has_sig": false, "md5_digest": "209475ede404089f77d8b2cc0a57070e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19646, "upload_time": "2019-10-11T07:42:07", "upload_time_iso_8601": "2019-10-11T07:42:07.388723Z", "url": "https://files.pythonhosted.org/packages/84/88/073f7f5b573bb2eae397ba94f4f40116bdb5c3f9ae4d65bb1b645e6dc26f/spurplus-2.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "209475ede404089f77d8b2cc0a57070e", "sha256": "71c734a0827a68235d5b610c3570c3abc0c6be56708a340ba7bebc0a6eb77e92"}, "downloads": -1, "filename": "spurplus-2.3.3.tar.gz", "has_sig": false, "md5_digest": "209475ede404089f77d8b2cc0a57070e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19646, "upload_time": "2019-10-11T07:42:07", "upload_time_iso_8601": "2019-10-11T07:42:07.388723Z", "url": "https://files.pythonhosted.org/packages/84/88/073f7f5b573bb2eae397ba94f4f40116bdb5c3f9ae4d65bb1b645e6dc26f/spurplus-2.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:12 2020"}