{"info": {"author": "Konstantin Novichikhin", "author_email": "konstantin.novichikhin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "PyEMV\n-----\n\n|pypi| |coverage|\n\nThis package provides methods for the generation of the\nApplication Cryptograms (TC, ARQC, or AAC) generated by the ICC and the\nAuthorisation Response Cryptogram (ARPC) generated by the issuer and\nverified by the ICC. In addition, this package supports secure messaging\nintegrity and confidentiality.\n\nInstall::\n\n    pip install pyemv\n\nPyEMV consists of the following modules:\n\n    - ``kd`` - Key Derivation support for ICC master keys and session keys\n    - ``ac`` - Application Cryptogram support for ARQC, AAC, TC, and\n      ARPC\n    - ``sm`` - Secure Messaging support for script command integrity\n      and confidentiality. It also provides support for PIN blocks.\n    - ``cvn`` - Putting it all together for various Cryptogram Version Numbers\n\nKey Derivation\n~~~~~~~~~~~~~~\n\nICC Master Key derivation method A and B:\n\n.. code-block:: python\n\n    >>> from pyemv import kd\n    >>> iss_mk = bytes.fromhex('0123456789ABCDEFFEDCBA9876543210')\n    >>> pan = b'99012345678901234'\n    >>> psn = b'45'\n    >>> icc_mk_a = kd.derive_icc_mk_a(iss_mk, pan, psn)\n    >>> icc_mk_a.hex().upper()\n    '67F8292358083E5EA7AB7FDA58D53B6B'\n    >>> icc_mk_b = kd.derive_icc_mk_b(iss_mk, pan, psn)\n    >>> icc_mk_b.hex().upper()\n    '985EC4FD3EDF6162E31AF1C7D0543416'\n\nCommon Session Key derivation:\n\n.. code-block:: python\n\n    >>> r = bytes.fromhex('1234567890123456')\n    >>> sk = kd.derive_common_sk(icc_mk_a, r)\n    >>> sk.hex().upper()\n    '29B33180E567CE38EA4CBC9D753B0E61'\n\nCryptogram Generation\n~~~~~~~~~~~~~~~~~~~~~\n\nApplication Request Cryptogram generation:\n\n.. code-block:: python\n\n    >>> from pyemv import ac\n    >>> ac_data = bytes.fromhex('0123456789ABCDEF0123456789ABCDEF')\n    >>> arqc = ac.generate_ac(sk, ac_data)\n    >>> arqc.hex().upper()\n    'FA624250B008B59A'\n\nApplication Response Cryptogram generation method 1 and 2:\n\n.. code-block:: python\n\n    >>> arpc_rc = bytes.fromhex('0000')\n    >>> arpc = ac.generate_arpc_1(sk, arqc, arpc_rc)\n    >>> arpc.hex().upper()\n    '45D4255EEF10C920'\n    >>> csu = bytes.fromhex('00000000')\n    >>> arpc = ac.generate_arpc_2(sk, arqc, csu)\n    >>> arpc.hex().upper()\n    'CB56FA40'\n\nSecure Messaging\n~~~~~~~~~~~~~~~~\n\nSecure Messaging Integrity (MAC):\n\n.. code-block:: python\n\n    >>> from pyemv import sm\n    >>> sk_smi = bytes.fromhex('0123456789ABCDEFFEDCBA9876543210')\n    >>> command = bytes.fromhex('8424000008')\n    >>> mac = sm.generate_command_mac(sk_smi, command)\n    >>> mac.hex().upper()\n    '0BFFF5DF3FAA24E1'\n\nSecure Messaging Confidentiality:\n\n.. code-block:: python\n\n    >>> pin_block = sm.format_iso9564_2_pin_block(b'9999')\n    >>> pin_block.hex().upper()\n    '249999FFFFFFFFFF'\n    >>> sk_smc = bytes.fromhex('0123456789ABCDEFFEDCBA9876543210')\n    >>> enc_data = sm.encrypt_command_data(sk_smc, pin_block,\n    ...                                    sm.EncryptionType.EMV)\n    >>> enc_data.hex().upper()\n    '5A862D1381CCB94822CFDD706A376178'\n\nCryptogram Version Number\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCryptogram Version Number (CVN) module demonstrates how\napplication cryptogram generation, key derivation and secure messaging\ncome together.\n\n.. code-block:: python\n\n    >>> from pyemv import cvn\n    >>> cvn18 = cvn.VisaCVN18(\n    ...     iss_mk_ac=bytes.fromhex('AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'),\n    ...     iss_mk_smi=bytes.fromhex('BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB'),\n    ...     iss_mk_smc=bytes.fromhex('CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC'),\n    ...     pan=b'1234567890123456',\n    ...     psn=b'00')\n    >>> atc = bytes.fromhex('0FFF')\n    >>> arqc = cvn18.generate_ac(\n    ...     tag_9f02=bytes.fromhex('000000009999'),\n    ...     tag_9f03=bytes.fromhex('000000000000'),\n    ...     tag_9f1a=bytes.fromhex('0840'),\n    ...     tag_95=bytes.fromhex('8000048000'),\n    ...     tag_5f2a=bytes.fromhex('0840'),\n    ...     tag_9a=bytes.fromhex('991231'),\n    ...     tag_9c=bytes.fromhex('01'),\n    ...     tag_9f37=bytes.fromhex('52BF4585'),\n    ...     tag_82=bytes.fromhex('1800'),\n    ...     tag_9f36=atc,\n    ...     tag_9f10=bytes.fromhex('06011203A0B800'))\n    >>> arqc.hex().upper()\n    '769577B5ABE9FE62'\n    >>> arpc = cvn18.generate_arpc(\n    ...     tag_9f26=arqc,\n    ...     tag_9f36=atc,\n    ...     csu=bytes.fromhex('00000000'))\n    >>> arpc.hex().upper()\n    '76503F48'\n    >>> command_mac = cvn18.generate_command_mac(\n    ...         command_header=bytes.fromhex('8418000008'),\n    ...         tag_9f26=arqc,\n    ...         tag_9f36=atc)\n    >>> command_mac.hex().upper()\n    'B5CB29759F9C3919'\n    >>> pin_command = cvn18.generate_pin_change_command(\n    ...         pin=b'9999',\n    ...         tag_9f26=arqc,\n    ...         tag_9f36=atc)\n    >>> pin_command.hex().upper()\n    '84240002182DC7A061323BA62472BC5308BD291B5F665B3A927E60661E'\n\nContribute\n----------\n\n`PyEMV` is hosted on `GitHub <https://github.com/manoutoftime/pyemv>`_.\n\nFeel free to fork and send contributions over.\n\n.. |pypi| image:: https://img.shields.io/pypi/v/pyemv.svg\n    :alt: PyPI\n    :target:  https://pypi.org/project/pyemv/\n\n.. |coverage| image:: https://codecov.io/gh/manoutoftime/pyemv/branch/master/graph/badge.svg\n    :alt: Test coverage\n    :target: https://codecov.io/gh/manoutoftime/pyemv\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/manoutoftime/pyemv", "keywords": "emv arqc arpc", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyemv", "package_url": "https://pypi.org/project/pyemv/", "platform": "", "project_url": "https://pypi.org/project/pyemv/", "project_urls": {"Homepage": "https://github.com/manoutoftime/pyemv"}, "release_url": "https://pypi.org/project/pyemv/1.1.0/", "requires_dist": ["cryptography (>=2.8)"], "requires_python": ">=3.5", "summary": "A Python package for EMV cryptography in payment systems", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyemv\">\n<h2>PyEMV</h2>\n<p><a href=\"https://pypi.org/project/pyemv/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71eb55165c6bb7d003979daef6fff4512229dd8a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079656d762e737667\"></a> <a href=\"https://codecov.io/gh/manoutoftime/pyemv\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c82dfafcdd509e88c6c9d7eff904ec0d003e3f1c/68747470733a2f2f636f6465636f762e696f2f67682f6d616e6f75746f6674696d652f7079656d762f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>This package provides methods for the generation of the\nApplication Cryptograms (TC, ARQC, or AAC) generated by the ICC and the\nAuthorisation Response Cryptogram (ARPC) generated by the issuer and\nverified by the ICC. In addition, this package supports secure messaging\nintegrity and confidentiality.</p>\n<p>Install:</p>\n<pre>pip install pyemv\n</pre>\n<p>PyEMV consists of the following modules:</p>\n<blockquote>\n<ul>\n<li><tt>kd</tt> - Key Derivation support for ICC master keys and session keys</li>\n<li><tt>ac</tt> - Application Cryptogram support for ARQC, AAC, TC, and\nARPC</li>\n<li><tt>sm</tt> - Secure Messaging support for script command integrity\nand confidentiality. It also provides support for PIN blocks.</li>\n<li><tt>cvn</tt> - Putting it all together for various Cryptogram Version Numbers</li>\n</ul>\n</blockquote>\n<div id=\"key-derivation\">\n<h3>Key Derivation</h3>\n<p>ICC Master Key derivation method A and B:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyemv</span> <span class=\"kn\">import</span> <span class=\"n\">kd</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">iss_mk</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'0123456789ABCDEFFEDCBA9876543210'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pan</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'99012345678901234'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">psn</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'45'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">icc_mk_a</span> <span class=\"o\">=</span> <span class=\"n\">kd</span><span class=\"o\">.</span><span class=\"n\">derive_icc_mk_a</span><span class=\"p\">(</span><span class=\"n\">iss_mk</span><span class=\"p\">,</span> <span class=\"n\">pan</span><span class=\"p\">,</span> <span class=\"n\">psn</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">icc_mk_a</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'67F8292358083E5EA7AB7FDA58D53B6B'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">icc_mk_b</span> <span class=\"o\">=</span> <span class=\"n\">kd</span><span class=\"o\">.</span><span class=\"n\">derive_icc_mk_b</span><span class=\"p\">(</span><span class=\"n\">iss_mk</span><span class=\"p\">,</span> <span class=\"n\">pan</span><span class=\"p\">,</span> <span class=\"n\">psn</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">icc_mk_b</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'985EC4FD3EDF6162E31AF1C7D0543416'</span>\n</pre>\n<p>Common Session Key derivation:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'1234567890123456'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sk</span> <span class=\"o\">=</span> <span class=\"n\">kd</span><span class=\"o\">.</span><span class=\"n\">derive_common_sk</span><span class=\"p\">(</span><span class=\"n\">icc_mk_a</span><span class=\"p\">,</span> <span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sk</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'29B33180E567CE38EA4CBC9D753B0E61'</span>\n</pre>\n</div>\n<div id=\"cryptogram-generation\">\n<h3>Cryptogram Generation</h3>\n<p>Application Request Cryptogram generation:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyemv</span> <span class=\"kn\">import</span> <span class=\"n\">ac</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ac_data</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'0123456789ABCDEF0123456789ABCDEF'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arqc</span> <span class=\"o\">=</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">generate_ac</span><span class=\"p\">(</span><span class=\"n\">sk</span><span class=\"p\">,</span> <span class=\"n\">ac_data</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arqc</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'FA624250B008B59A'</span>\n</pre>\n<p>Application Response Cryptogram generation method 1 and 2:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arpc_rc</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'0000'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arpc</span> <span class=\"o\">=</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">generate_arpc_1</span><span class=\"p\">(</span><span class=\"n\">sk</span><span class=\"p\">,</span> <span class=\"n\">arqc</span><span class=\"p\">,</span> <span class=\"n\">arpc_rc</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arpc</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'45D4255EEF10C920'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">csu</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'00000000'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arpc</span> <span class=\"o\">=</span> <span class=\"n\">ac</span><span class=\"o\">.</span><span class=\"n\">generate_arpc_2</span><span class=\"p\">(</span><span class=\"n\">sk</span><span class=\"p\">,</span> <span class=\"n\">arqc</span><span class=\"p\">,</span> <span class=\"n\">csu</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arpc</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'CB56FA40'</span>\n</pre>\n</div>\n<div id=\"secure-messaging\">\n<h3>Secure Messaging</h3>\n<p>Secure Messaging Integrity (MAC):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyemv</span> <span class=\"kn\">import</span> <span class=\"n\">sm</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sk_smi</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'0123456789ABCDEFFEDCBA9876543210'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">command</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'8424000008'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mac</span> <span class=\"o\">=</span> <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">generate_command_mac</span><span class=\"p\">(</span><span class=\"n\">sk_smi</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mac</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'0BFFF5DF3FAA24E1'</span>\n</pre>\n<p>Secure Messaging Confidentiality:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pin_block</span> <span class=\"o\">=</span> <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">format_iso9564_2_pin_block</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'9999'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pin_block</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'249999FFFFFFFFFF'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sk_smc</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'0123456789ABCDEFFEDCBA9876543210'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">enc_data</span> <span class=\"o\">=</span> <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">encrypt_command_data</span><span class=\"p\">(</span><span class=\"n\">sk_smc</span><span class=\"p\">,</span> <span class=\"n\">pin_block</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                                    <span class=\"n\">sm</span><span class=\"o\">.</span><span class=\"n\">EncryptionType</span><span class=\"o\">.</span><span class=\"n\">EMV</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">enc_data</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'5A862D1381CCB94822CFDD706A376178'</span>\n</pre>\n</div>\n<div id=\"cryptogram-version-number\">\n<h3>Cryptogram Version Number</h3>\n<p>Cryptogram Version Number (CVN) module demonstrates how\napplication cryptogram generation, key derivation and secure messaging\ncome together.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyemv</span> <span class=\"kn\">import</span> <span class=\"n\">cvn</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cvn18</span> <span class=\"o\">=</span> <span class=\"n\">cvn</span><span class=\"o\">.</span><span class=\"n\">VisaCVN18</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">iss_mk_ac</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">iss_mk_smi</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">iss_mk_smc</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">pan</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'1234567890123456'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">psn</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'00'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">atc</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'0FFF'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arqc</span> <span class=\"o\">=</span> <span class=\"n\">cvn18</span><span class=\"o\">.</span><span class=\"n\">generate_ac</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9f02</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'000000009999'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9f03</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'000000000000'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9f1a</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'0840'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_95</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'8000048000'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_5f2a</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'0840'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9a</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'991231'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9c</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'01'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9f37</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'52BF4585'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_82</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'1800'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9f36</span><span class=\"o\">=</span><span class=\"n\">atc</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9f10</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'06011203A0B800'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arqc</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'769577B5ABE9FE62'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arpc</span> <span class=\"o\">=</span> <span class=\"n\">cvn18</span><span class=\"o\">.</span><span class=\"n\">generate_arpc</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9f26</span><span class=\"o\">=</span><span class=\"n\">arqc</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">tag_9f36</span><span class=\"o\">=</span><span class=\"n\">atc</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">csu</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'00000000'</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arpc</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'76503F48'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">command_mac</span> <span class=\"o\">=</span> <span class=\"n\">cvn18</span><span class=\"o\">.</span><span class=\"n\">generate_command_mac</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>         <span class=\"n\">command_header</span><span class=\"o\">=</span><span class=\"nb\">bytes</span><span class=\"o\">.</span><span class=\"n\">fromhex</span><span class=\"p\">(</span><span class=\"s1\">'8418000008'</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>         <span class=\"n\">tag_9f26</span><span class=\"o\">=</span><span class=\"n\">arqc</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"n\">tag_9f36</span><span class=\"o\">=</span><span class=\"n\">atc</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">command_mac</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'B5CB29759F9C3919'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pin_command</span> <span class=\"o\">=</span> <span class=\"n\">cvn18</span><span class=\"o\">.</span><span class=\"n\">generate_pin_change_command</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>         <span class=\"n\">pin</span><span class=\"o\">=</span><span class=\"sa\">b</span><span class=\"s1\">'9999'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"n\">tag_9f26</span><span class=\"o\">=</span><span class=\"n\">arqc</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>         <span class=\"n\">tag_9f36</span><span class=\"o\">=</span><span class=\"n\">atc</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pin_command</span><span class=\"o\">.</span><span class=\"n\">hex</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span>\n<span class=\"s1\">'84240002182DC7A061323BA62472BC5308BD291B5F665B3A927E60661E'</span>\n</pre>\n</div>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p><cite>PyEMV</cite> is hosted on <a href=\"https://github.com/manoutoftime/pyemv\" rel=\"nofollow\">GitHub</a>.</p>\n<p>Feel free to fork and send contributions over.</p>\n</div>\n\n          </div>"}, "last_serial": 7149668, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3cba350f38183d58cbd8de655f96838d", "sha256": "4d13715af5920c9af35c47d585fd39c1d0501f2896468a62595d6549c3f79072"}, "downloads": -1, "filename": "pyemv-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3cba350f38183d58cbd8de655f96838d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15282, "upload_time": "2020-01-28T04:28:03", "upload_time_iso_8601": "2020-01-28T04:28:03.250120Z", "url": "https://files.pythonhosted.org/packages/49/10/bcb7791158a25764137e694a13a418a134f61bee6279db5fea06eb74f34a/pyemv-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e575791f4c951c20d5a7025c6fdd3755", "sha256": "01479f7cbd4e9197b0610afa6612cce5f35b8962d1bc90ccff3f49d27cee729d"}, "downloads": -1, "filename": "pyemv-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e575791f4c951c20d5a7025c6fdd3755", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18367, "upload_time": "2020-01-28T04:28:04", "upload_time_iso_8601": "2020-01-28T04:28:04.812624Z", "url": "https://files.pythonhosted.org/packages/98/99/545d8fd93b1d6584a4e45c5646da4338af5e6a386a3b1064c667b2409e3e/pyemv-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d1fd725d4f73dd60dfa078ebfb39dc30", "sha256": "4fe1ff9a406d04a4ea8550b55aac380bf4f5bc4d386f12d2c84bb1eec92de77e"}, "downloads": -1, "filename": "pyemv-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d1fd725d4f73dd60dfa078ebfb39dc30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19252, "upload_time": "2020-05-02T04:30:11", "upload_time_iso_8601": "2020-05-02T04:30:11.458391Z", "url": "https://files.pythonhosted.org/packages/46/ca/f73ebf71d105e5ca5925b7ed3ed7871e33d753ad43e63029b5dcb3fe4944/pyemv-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ead5fe9c216387d8f426d10a9f8ceb85", "sha256": "262393114e94991fbff9f5577dc63df874f461af073a708a969b7354b9a46d5f"}, "downloads": -1, "filename": "pyemv-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ead5fe9c216387d8f426d10a9f8ceb85", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 23143, "upload_time": "2020-05-02T04:30:12", "upload_time_iso_8601": "2020-05-02T04:30:12.841703Z", "url": "https://files.pythonhosted.org/packages/1c/44/c5c8a2f68e08d1ecf49ed623753e8df9f6dfb5b56bbe525c5effaffc9b2e/pyemv-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1fd725d4f73dd60dfa078ebfb39dc30", "sha256": "4fe1ff9a406d04a4ea8550b55aac380bf4f5bc4d386f12d2c84bb1eec92de77e"}, "downloads": -1, "filename": "pyemv-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d1fd725d4f73dd60dfa078ebfb39dc30", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19252, "upload_time": "2020-05-02T04:30:11", "upload_time_iso_8601": "2020-05-02T04:30:11.458391Z", "url": "https://files.pythonhosted.org/packages/46/ca/f73ebf71d105e5ca5925b7ed3ed7871e33d753ad43e63029b5dcb3fe4944/pyemv-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ead5fe9c216387d8f426d10a9f8ceb85", "sha256": "262393114e94991fbff9f5577dc63df874f461af073a708a969b7354b9a46d5f"}, "downloads": -1, "filename": "pyemv-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ead5fe9c216387d8f426d10a9f8ceb85", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 23143, "upload_time": "2020-05-02T04:30:12", "upload_time_iso_8601": "2020-05-02T04:30:12.841703Z", "url": "https://files.pythonhosted.org/packages/1c/44/c5c8a2f68e08d1ecf49ed623753e8df9f6dfb5b56bbe525c5effaffc9b2e/pyemv-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:24 2020"}