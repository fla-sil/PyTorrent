{"info": {"author": "Alberto Bonsanto", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# polygon-geohasher\nPolygon Geohasher is a Open source Python package which converts a\npolygon into a set of geohashes with arbitrary precision. More\nconversely, it can obtain the set of geohashes inside a polygon or\ngeohashes that touch (intersects) the polygon. This library uses\n    [python-geohash](https://pypi.python.org/pypi/Geohash/) and\n[shapely](http://toblerity.org/shapely/).\n\n\n## Requirements\nPolygon Geohasher requires:\n\n- Python >= 3.x.\n- GEOS >= 3.3 (due to shapely).\n\n## Installing\nLinux users can get Polygon Geohasher from the Python Package Index with\npip (8+):\n\n`todo`\n`$ pip install polygon-geohasher`\n\n## Usage\nHere are some simple examples:\n\n```python\nfrom shapely import geometry\n\npolygon = geometry.Polygon([(-99.1795917, 19.432134), (-99.1656847, 19.429034),\n                            (-99.1776492, 19.414236), (-99.1795917, 19.432134)])\ninner_geohashes_polygon = geohashes_to_polygon(polygon_to_geohashes(test_polygon, 7))\nouter_geohashes_polygon = geohashes_to_polygon(polygon_to_geohashes(test_polygon, 7, False))\n```\n\n\n`geohash_to_polygon(geohash)`:\n\nThis function receives a geohash, and returns a Shapely's Polygon.\n\n`geohashes_to_polygon(geohashes)`:\n\nThis function receives a set of geohashes, and returns a Shapely's Polygon or MultiPolygon.\n\n\n`polygon_to_geohashes(polygon, precision, inner(optional))`:\n\nThis function receives a Shapely's Polygon, the precision of geohashes that\nwill be used to create a polygon and returns a set of geohashes\n(strings) which covers the polygon. It also receives an optional\nparameter `inner` that defines the way how those polygons will be created.\nIf inner only contained geohashes will be used, otherwise intersected will.\n\nFor instance you can see resulted geohashed polygons with both options.\n\n![Example](./docs/images/geohashed-polygon-1.jpg)\n\n#### Donations\n\nIf you want to make any donation you can send to:\n\n- [BTC](bitcoin.org): 1H6VrFKCEabn3rbE9JJUSRXB7PU8Bm4SND\n- [BCC](bitcoincash.org): 1CmuSwFD9qghEfJ4DdSiRWLxfvK5Srfqsg\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Bonsanto/polygon-geohasher", "keywords": "polygon,geohashes", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "polygon-geohasher", "package_url": "https://pypi.org/project/polygon-geohasher/", "platform": "", "project_url": "https://pypi.org/project/polygon-geohasher/", "project_urls": {"Homepage": "https://github.com/Bonsanto/polygon-geohasher"}, "release_url": "https://pypi.org/project/polygon-geohasher/0.0.1/", "requires_dist": ["python-geohash", "shapely"], "requires_python": "", "summary": "Wrapper over Shapely that returns the set of geohashes that form a Polygon", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # polygon-geohasher<br>Polygon Geohasher is a Open source Python package which converts a<br>polygon into a set of geohashes with arbitrary precision. More<br>conversely, it can obtain the set of geohashes inside a polygon or<br>geohashes that touch (intersects) the polygon. This library uses<br>    [python-geohash](https://pypi.python.org/pypi/Geohash/) and<br>[shapely](http://toblerity.org/shapely/).<br><br><br>## Requirements<br>Polygon Geohasher requires:<br><br>- Python &gt;= 3.x.<br>- GEOS &gt;= 3.3 (due to shapely).<br><br>## Installing<br>Linux users can get Polygon Geohasher from the Python Package Index with<br>pip (8+):<br><br>`todo`<br>`$ pip install polygon-geohasher`<br><br>## Usage<br>Here are some simple examples:<br><br>```python<br>from shapely import geometry<br><br>polygon = geometry.Polygon([(-99.1795917, 19.432134), (-99.1656847, 19.429034),<br>                            (-99.1776492, 19.414236), (-99.1795917, 19.432134)])<br>inner_geohashes_polygon = geohashes_to_polygon(polygon_to_geohashes(test_polygon, 7))<br>outer_geohashes_polygon = geohashes_to_polygon(polygon_to_geohashes(test_polygon, 7, False))<br>```<br><br><br>`geohash_to_polygon(geohash)`:<br><br>This function receives a geohash, and returns a Shapely's Polygon.<br><br>`geohashes_to_polygon(geohashes)`:<br><br>This function receives a set of geohashes, and returns a Shapely's Polygon or MultiPolygon.<br><br><br>`polygon_to_geohashes(polygon, precision, inner(optional))`:<br><br>This function receives a Shapely's Polygon, the precision of geohashes that<br>will be used to create a polygon and returns a set of geohashes<br>(strings) which covers the polygon. It also receives an optional<br>parameter `inner` that defines the way how those polygons will be created.<br>If inner only contained geohashes will be used, otherwise intersected will.<br><br>For instance you can see resulted geohashed polygons with both options.<br><br>![Example](./docs/images/geohashed-polygon-1.jpg)<br><br>#### Donations<br><br>If you want to make any donation you can send to:<br><br>- [BTC](bitcoin.org): 1H6VrFKCEabn3rbE9JJUSRXB7PU8Bm4SND<br>- [BCC](bitcoincash.org): 1CmuSwFD9qghEfJ4DdSiRWLxfvK5Srfqsg<br><br>\n          </div>"}, "last_serial": 3478278, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "99ed25eba7b225786d9b0c437ecd8d99", "sha256": "c5072aa504705ad59c6454cee6093e8941447e83035a1903182a8eba6dc76f77"}, "downloads": -1, "filename": "polygon_geohasher-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "99ed25eba7b225786d9b0c437ecd8d99", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6020, "upload_time": "2018-01-10T17:28:20", "upload_time_iso_8601": "2018-01-10T17:28:20.420007Z", "url": "https://files.pythonhosted.org/packages/85/36/37e6bfedde5b7a743859b3ba1c40db85eb8a7c063aee997fa0fef6512b94/polygon_geohasher-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03e435437fb72bfc5a6a71a370999048", "sha256": "5c9f8788fa38df1606c7bd9e85fce636c8520a19a675c106ee387c0f613697ef"}, "downloads": -1, "filename": "polygon-geohasher-0.0.1.tar.gz", "has_sig": false, "md5_digest": "03e435437fb72bfc5a6a71a370999048", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3381, "upload_time": "2018-01-10T17:28:21", "upload_time_iso_8601": "2018-01-10T17:28:21.348189Z", "url": "https://files.pythonhosted.org/packages/2b/55/51fc667ed4b660382fd77bb8c51da42fd231dda6c63e7ab7a27a7088a587/polygon-geohasher-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "99ed25eba7b225786d9b0c437ecd8d99", "sha256": "c5072aa504705ad59c6454cee6093e8941447e83035a1903182a8eba6dc76f77"}, "downloads": -1, "filename": "polygon_geohasher-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "99ed25eba7b225786d9b0c437ecd8d99", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6020, "upload_time": "2018-01-10T17:28:20", "upload_time_iso_8601": "2018-01-10T17:28:20.420007Z", "url": "https://files.pythonhosted.org/packages/85/36/37e6bfedde5b7a743859b3ba1c40db85eb8a7c063aee997fa0fef6512b94/polygon_geohasher-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03e435437fb72bfc5a6a71a370999048", "sha256": "5c9f8788fa38df1606c7bd9e85fce636c8520a19a675c106ee387c0f613697ef"}, "downloads": -1, "filename": "polygon-geohasher-0.0.1.tar.gz", "has_sig": false, "md5_digest": "03e435437fb72bfc5a6a71a370999048", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3381, "upload_time": "2018-01-10T17:28:21", "upload_time_iso_8601": "2018-01-10T17:28:21.348189Z", "url": "https://files.pythonhosted.org/packages/2b/55/51fc667ed4b660382fd77bb8c51da42fd231dda6c63e7ab7a27a7088a587/polygon-geohasher-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:45 2020"}