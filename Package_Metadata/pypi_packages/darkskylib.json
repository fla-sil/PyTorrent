{"info": {"author": "Lukas Kubis", "author_email": "contact@lukaskubis.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Home Automation", "Topic :: Scientific/Engineering :: Atmospheric Science"], "description": "darkskylib\n==========\n\nThis  library for the `Dark Sky\nAPI <https://darksky.net/dev/docs>`__ provides access to detailed\nweather information from around the globe.\n\nQuick start\n-----------\n\nBefore you start using this library, you need to get your API key\n`here <https://darksky.net/dev/register>`__.\n\n\nAPI Calls\n~~~~~~~~~\n\nFunction ``forecast`` handles all request parameters and returns a\n``Forecast`` object.\n\n.. code:: python\n\n    >>> from darksky import forecast\n    >>> boston = forecast(key, 42.3601, -71.0589)\n    >>>\n\nThe first 3 positional arguments are identical to the 3 required\nparameters for API call. The optional query parameters need to be\nprovided as keyword arguments.\n\nUsing ``time`` argument will get you a **time machine call**.\nUsing ``timeout`` argument will set default `request timeout <http://docs.python-requests.org/en/master/api/#requests.request>`__ .\n\n.. code:: python\n\n    >>> BOSTON = key, 42.3601, -71.0589\n    >>> from datetime import datetime as dt\n    >>> t = dt(2013, 5, 6, 12).isoformat()\n    >>> boston = forecast(*BOSTON, time=t)\n    >>> boston.time\n    1367866800\n\nData Points and Data Blocks\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe values as well as ``DataPoint`` and ``DataBlock`` objects are\naccessed using instance attributes or dictionary keys. You can access\ncurrent values directly, without going through ``currently`` data point.\n\n.. code:: python\n\n    >>> boston['currently']['temperature']\n    60.72\n    >>> boston.temperature\n    60.72\n\n**Data blocks** are indexable and iterable by their ``data`` values.\n\n.. code:: python\n\n    >>> len(boston.hourly)\n    24\n    >>>\n    >>> boston.hourly[1].temperature\n    59.49\n    >>>\n    >>> # list temperatures for next 10 hours\n    ... [hour.temperature for hour in boston.hourly[:10]]\n    [60.83, 59.49, 58.93, 57.95, 56.01, 53.95, 51.21, 49.21, 47.95, 46.31]\n\nNonexistent attributes will raise ``AttributeError`` and dictionary keys\n``KeyError`` the way you'd expect.\n\nRaw data\n~~~~~~~~\n\nTo get the raw data dictionary, you can either access it through\ninstance attributes or navigate to it through dictionary keys, the same\nway you would navigate the actual dictionary.\n\n.. code:: python\n\n    >>> boston.hourly[2]\n    {'ozone': 290.06, 'temperature': 58.93, 'pressure': 1017.8, 'windBearing': 274, 'dewPoint': 52.58, 'cloudCover': 0.29, 'apparentTemperature': 58.93, 'windSpeed': 7.96, 'summary': 'Partly Cloudy', 'icon': 'partly-cloudy-night', 'humidity': 0.79, 'precipProbability': 0, 'precipIntensity': 0, 'visibility': 8.67, 'time': 1476410400}\n    >>>\n    >>> boston['hourly']['data'][2]\n    {'ozone': 290.06, 'temperature': 58.93, 'pressure': 1017.8, 'windBearing': 274, 'dewPoint': 52.58, 'cloudCover': 0.29, 'apparentTemperature': 58.93, 'windSpeed': 7.96, 'summary': 'Partly Cloudy', 'icon': 'partly-cloudy-night', 'humidity': 0.79, 'precipProbability': 0, 'precipIntensity': 0, 'visibility': 8.67, 'time': 1476410400}\n\nFlags and Alerts\n~~~~~~~~~~~~~~~~\n\nAll dashes ``-`` in attribute names of **Flags** objects are replaced by\nunderscores ``_``. This doesn't affect the dictionary keys.\n\n.. code:: python\n\n    >>> # instead of 'boston.flags.isd-stations'\n    ... boston.flags.isd_stations\n    ['383340-99999', '383390-99999', '383410-99999', '384620-99999', '384710-99999']\n    >>>\n    >>> boston.flags['isd-stations']\n    ['383340-99999', '383390-99999', '383410-99999', '384620-99999', '384710-99999']\n\nEven though **Alerts** are represented by a list, the data accessibility\nthrough instance attributes is preserved for alerts in the list.\n\n.. code:: python\n\n    >>> boston.alerts[0].title\n    'Freeze Watch for Norfolk, MA'\n\nUpdating data\n~~~~~~~~~~~~~\n\nUse ``refresh()`` method to update data of a ``Forecast`` object. The\n``refresh()`` method takes optional queries (including ``time``, making\nit a **Time machine** object) as keyword arguments. Calling\n``refresh()`` without any arguments will set all queries to default\nvalues. Use ``timeout`` argument to set the request timeout.\n\n.. code:: python\n\n    >>> boston.refresh()\n    >>> (boston.time, boston.temperature, len(boston.hourly))\n    (1476403500, 60.72, 49)\n    >>>\n    >>> boston.refresh(units='si', extend='hourly')\n    >>> (boston.time, boston.temperature, len(boston.hourly))\n    (1476404205, 15.81, 169)\n    >>>\n    >>> boston.refresh(units='us')\n    >>> (boston.time, boston.temperature, len(boston.hourly))\n    (1476404489, 60.57, 49)\n\nFor Developers\n~~~~~~~~~~~~~~\n\nResponse headers are stored in a dictionary under ``response_headers``\nattribute.\n\n.. code:: python\n\n    >>> boston.response_headers['X-response-Time']\n    '146.035ms'\n\nExample script\n--------------\n\n.. code:: python\n\n    from darksky import forecast\n    from datetime import date, timedelta\n\n    BOSTON = 42.3601, 71.0589\n\n    weekday = date.today()\n    with forecast('API_KEY', *BOSTON) as boston:\n        print(boston.daily.summary, end='\\n---\\n')\n        for day in boston.daily:\n            day = dict(day = date.strftime(weekday, '%a'),\n                       sum = day.summary,\n                       tempMin = day.temperatureMin,\n                       tempMax = day.temperatureMax\n                       )\n            print('{day}: {sum} Temp range: {tempMin} - {tempMax}'.format(**day))\n            weekday += timedelta(days=1)\n\nOutput:\n\n::\n\n    Light rain on Friday and Saturday, with temperatures bottoming out at 48\u00b0F on Tuesday.\n    ---\n    Sun: Partly cloudy in the morning. Temp range: 44.86 - 57.26\u00b0F\n    Mon: Mostly cloudy in the morning. Temp range: 44.26 - 55.28\u00b0F\n    Tue: Clear throughout the day. Temp range: 36.85 - 47.9\u00b0F\n    Wed: Partly cloudy starting in the afternoon, continuing until evening. Temp range: 33.23 - 47.93\u00b0F\n    Thu: Light rain overnight. Temp range: 35.75 - 49.71\u00b0F\n    Fri: Light rain in the morning and afternoon. Temp range: 45.47 - 57.11\u00b0F\n    Sat: Drizzle in the morning. Temp range: 43.3 - 62.08\u00b0F\n    Sun: Clear throughout the day. Temp range: 39.81 - 60.84\u00b0F\n\nLicense\n-------\n\nThe code is available under terms of `MIT\nLicense <https://raw.githubusercontent.com/lukaskubis/darkskylib/master/LICENSE>`__\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lukaskubis/darkskylib", "keywords": "darksky dark-sky dark sky forecast home weather home-weather weather-station", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "darkskylib", "package_url": "https://pypi.org/project/darkskylib/", "platform": "", "project_url": "https://pypi.org/project/darkskylib/", "project_urls": {"Homepage": "https://github.com/lukaskubis/darkskylib"}, "release_url": "https://pypi.org/project/darkskylib/0.3.91/", "requires_dist": ["future", "requests"], "requires_python": "", "summary": "The Dark Sky API wrapper", "version": "0.3.91", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This  library for the <a href=\"https://darksky.net/dev/docs\" rel=\"nofollow\">Dark Sky\nAPI</a> provides access to detailed\nweather information from around the globe.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<p>Before you start using this library, you need to get your API key\n<a href=\"https://darksky.net/dev/register\" rel=\"nofollow\">here</a>.</p>\n<div id=\"api-calls\">\n<h3>API Calls</h3>\n<p>Function <tt>forecast</tt> handles all request parameters and returns a\n<tt>Forecast</tt> object.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">darksky</span> <span class=\"kn\">import</span> <span class=\"n\">forecast</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span> <span class=\"o\">=</span> <span class=\"n\">forecast</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"mf\">42.3601</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">71.0589</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>The first 3 positional arguments are identical to the 3 required\nparameters for API call. The optional query parameters need to be\nprovided as keyword arguments.</p>\n<p>Using <tt>time</tt> argument will get you a <strong>time machine call</strong>.\nUsing <tt>timeout</tt> argument will set default <a href=\"http://docs.python-requests.org/en/master/api/#requests.request\" rel=\"nofollow\">request timeout</a> .</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">BOSTON</span> <span class=\"o\">=</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"mf\">42.3601</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">71.0589</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span> <span class=\"k\">as</span> <span class=\"n\">dt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"p\">(</span><span class=\"mi\">2013</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span> <span class=\"o\">=</span> <span class=\"n\">forecast</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">BOSTON</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">t</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">time</span>\n<span class=\"mi\">1367866800</span>\n</pre>\n</div>\n<div id=\"data-points-and-data-blocks\">\n<h3>Data Points and Data Blocks</h3>\n<p>The values as well as <tt>DataPoint</tt> and <tt>DataBlock</tt> objects are\naccessed using instance attributes or dictionary keys. You can access\ncurrent values directly, without going through <tt>currently</tt> data point.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"p\">[</span><span class=\"s1\">'currently'</span><span class=\"p\">][</span><span class=\"s1\">'temperature'</span><span class=\"p\">]</span>\n<span class=\"mf\">60.72</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">temperature</span>\n<span class=\"mf\">60.72</span>\n</pre>\n<p><strong>Data blocks</strong> are indexable and iterable by their <tt>data</tt> values.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">hourly</span><span class=\"p\">)</span>\n<span class=\"mi\">24</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">hourly</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">temperature</span>\n<span class=\"mf\">59.49</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># list temperatures for next 10 hours</span>\n<span class=\"o\">...</span> <span class=\"p\">[</span><span class=\"n\">hour</span><span class=\"o\">.</span><span class=\"n\">temperature</span> <span class=\"k\">for</span> <span class=\"n\">hour</span> <span class=\"ow\">in</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">hourly</span><span class=\"p\">[:</span><span class=\"mi\">10</span><span class=\"p\">]]</span>\n<span class=\"p\">[</span><span class=\"mf\">60.83</span><span class=\"p\">,</span> <span class=\"mf\">59.49</span><span class=\"p\">,</span> <span class=\"mf\">58.93</span><span class=\"p\">,</span> <span class=\"mf\">57.95</span><span class=\"p\">,</span> <span class=\"mf\">56.01</span><span class=\"p\">,</span> <span class=\"mf\">53.95</span><span class=\"p\">,</span> <span class=\"mf\">51.21</span><span class=\"p\">,</span> <span class=\"mf\">49.21</span><span class=\"p\">,</span> <span class=\"mf\">47.95</span><span class=\"p\">,</span> <span class=\"mf\">46.31</span><span class=\"p\">]</span>\n</pre>\n<p>Nonexistent attributes will raise <tt>AttributeError</tt> and dictionary keys\n<tt>KeyError</tt> the way you\u2019d expect.</p>\n</div>\n<div id=\"raw-data\">\n<h3>Raw data</h3>\n<p>To get the raw data dictionary, you can either access it through\ninstance attributes or navigate to it through dictionary keys, the same\nway you would navigate the actual dictionary.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">hourly</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"p\">{</span><span class=\"s1\">'ozone'</span><span class=\"p\">:</span> <span class=\"mf\">290.06</span><span class=\"p\">,</span> <span class=\"s1\">'temperature'</span><span class=\"p\">:</span> <span class=\"mf\">58.93</span><span class=\"p\">,</span> <span class=\"s1\">'pressure'</span><span class=\"p\">:</span> <span class=\"mf\">1017.8</span><span class=\"p\">,</span> <span class=\"s1\">'windBearing'</span><span class=\"p\">:</span> <span class=\"mi\">274</span><span class=\"p\">,</span> <span class=\"s1\">'dewPoint'</span><span class=\"p\">:</span> <span class=\"mf\">52.58</span><span class=\"p\">,</span> <span class=\"s1\">'cloudCover'</span><span class=\"p\">:</span> <span class=\"mf\">0.29</span><span class=\"p\">,</span> <span class=\"s1\">'apparentTemperature'</span><span class=\"p\">:</span> <span class=\"mf\">58.93</span><span class=\"p\">,</span> <span class=\"s1\">'windSpeed'</span><span class=\"p\">:</span> <span class=\"mf\">7.96</span><span class=\"p\">,</span> <span class=\"s1\">'summary'</span><span class=\"p\">:</span> <span class=\"s1\">'Partly Cloudy'</span><span class=\"p\">,</span> <span class=\"s1\">'icon'</span><span class=\"p\">:</span> <span class=\"s1\">'partly-cloudy-night'</span><span class=\"p\">,</span> <span class=\"s1\">'humidity'</span><span class=\"p\">:</span> <span class=\"mf\">0.79</span><span class=\"p\">,</span> <span class=\"s1\">'precipProbability'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'precipIntensity'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'visibility'</span><span class=\"p\">:</span> <span class=\"mf\">8.67</span><span class=\"p\">,</span> <span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"mi\">1476410400</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"p\">[</span><span class=\"s1\">'hourly'</span><span class=\"p\">][</span><span class=\"s1\">'data'</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n<span class=\"p\">{</span><span class=\"s1\">'ozone'</span><span class=\"p\">:</span> <span class=\"mf\">290.06</span><span class=\"p\">,</span> <span class=\"s1\">'temperature'</span><span class=\"p\">:</span> <span class=\"mf\">58.93</span><span class=\"p\">,</span> <span class=\"s1\">'pressure'</span><span class=\"p\">:</span> <span class=\"mf\">1017.8</span><span class=\"p\">,</span> <span class=\"s1\">'windBearing'</span><span class=\"p\">:</span> <span class=\"mi\">274</span><span class=\"p\">,</span> <span class=\"s1\">'dewPoint'</span><span class=\"p\">:</span> <span class=\"mf\">52.58</span><span class=\"p\">,</span> <span class=\"s1\">'cloudCover'</span><span class=\"p\">:</span> <span class=\"mf\">0.29</span><span class=\"p\">,</span> <span class=\"s1\">'apparentTemperature'</span><span class=\"p\">:</span> <span class=\"mf\">58.93</span><span class=\"p\">,</span> <span class=\"s1\">'windSpeed'</span><span class=\"p\">:</span> <span class=\"mf\">7.96</span><span class=\"p\">,</span> <span class=\"s1\">'summary'</span><span class=\"p\">:</span> <span class=\"s1\">'Partly Cloudy'</span><span class=\"p\">,</span> <span class=\"s1\">'icon'</span><span class=\"p\">:</span> <span class=\"s1\">'partly-cloudy-night'</span><span class=\"p\">,</span> <span class=\"s1\">'humidity'</span><span class=\"p\">:</span> <span class=\"mf\">0.79</span><span class=\"p\">,</span> <span class=\"s1\">'precipProbability'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'precipIntensity'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'visibility'</span><span class=\"p\">:</span> <span class=\"mf\">8.67</span><span class=\"p\">,</span> <span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"mi\">1476410400</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"flags-and-alerts\">\n<h3>Flags and Alerts</h3>\n<p>All dashes <tt>-</tt> in attribute names of <strong>Flags</strong> objects are replaced by\nunderscores <tt>_</tt>. This doesn\u2019t affect the dictionary keys.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># instead of 'boston.flags.isd-stations'</span>\n<span class=\"o\">...</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">flags</span><span class=\"o\">.</span><span class=\"n\">isd_stations</span>\n<span class=\"p\">[</span><span class=\"s1\">'383340-99999'</span><span class=\"p\">,</span> <span class=\"s1\">'383390-99999'</span><span class=\"p\">,</span> <span class=\"s1\">'383410-99999'</span><span class=\"p\">,</span> <span class=\"s1\">'384620-99999'</span><span class=\"p\">,</span> <span class=\"s1\">'384710-99999'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">flags</span><span class=\"p\">[</span><span class=\"s1\">'isd-stations'</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"s1\">'383340-99999'</span><span class=\"p\">,</span> <span class=\"s1\">'383390-99999'</span><span class=\"p\">,</span> <span class=\"s1\">'383410-99999'</span><span class=\"p\">,</span> <span class=\"s1\">'384620-99999'</span><span class=\"p\">,</span> <span class=\"s1\">'384710-99999'</span><span class=\"p\">]</span>\n</pre>\n<p>Even though <strong>Alerts</strong> are represented by a list, the data accessibility\nthrough instance attributes is preserved for alerts in the list.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">alerts</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">title</span>\n<span class=\"s1\">'Freeze Watch for Norfolk, MA'</span>\n</pre>\n</div>\n<div id=\"updating-data\">\n<h3>Updating data</h3>\n<p>Use <tt>refresh()</tt> method to update data of a <tt>Forecast</tt> object. The\n<tt>refresh()</tt> method takes optional queries (including <tt>time</tt>, making\nit a <strong>Time machine</strong> object) as keyword arguments. Calling\n<tt>refresh()</tt> without any arguments will set all queries to default\nvalues. Use <tt>timeout</tt> argument to set the request timeout.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">refresh</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">temperature</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">hourly</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"mi\">1476403500</span><span class=\"p\">,</span> <span class=\"mf\">60.72</span><span class=\"p\">,</span> <span class=\"mi\">49</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">refresh</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s1\">'si'</span><span class=\"p\">,</span> <span class=\"n\">extend</span><span class=\"o\">=</span><span class=\"s1\">'hourly'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">temperature</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">hourly</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"mi\">1476404205</span><span class=\"p\">,</span> <span class=\"mf\">15.81</span><span class=\"p\">,</span> <span class=\"mi\">169</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">refresh</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"s1\">'us'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">temperature</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">hourly</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"mi\">1476404489</span><span class=\"p\">,</span> <span class=\"mf\">60.57</span><span class=\"p\">,</span> <span class=\"mi\">49</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"for-developers\">\n<h3>For Developers</h3>\n<p>Response headers are stored in a dictionary under <tt>response_headers</tt>\nattribute.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">response_headers</span><span class=\"p\">[</span><span class=\"s1\">'X-response-Time'</span><span class=\"p\">]</span>\n<span class=\"s1\">'146.035ms'</span>\n</pre>\n</div>\n</div>\n<div id=\"example-script\">\n<h2>Example script</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">darksky</span> <span class=\"kn\">import</span> <span class=\"n\">forecast</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">date</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span>\n\n<span class=\"n\">BOSTON</span> <span class=\"o\">=</span> <span class=\"mf\">42.3601</span><span class=\"p\">,</span> <span class=\"mf\">71.0589</span>\n\n<span class=\"n\">weekday</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">()</span>\n<span class=\"k\">with</span> <span class=\"n\">forecast</span><span class=\"p\">(</span><span class=\"s1\">'API_KEY'</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">BOSTON</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">boston</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">daily</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">---</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">day</span> <span class=\"ow\">in</span> <span class=\"n\">boston</span><span class=\"o\">.</span><span class=\"n\">daily</span><span class=\"p\">:</span>\n        <span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">day</span> <span class=\"o\">=</span> <span class=\"n\">date</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"n\">weekday</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"si\">%a</span><span class=\"s1\">'</span><span class=\"p\">),</span>\n                   <span class=\"nb\">sum</span> <span class=\"o\">=</span> <span class=\"n\">day</span><span class=\"o\">.</span><span class=\"n\">summary</span><span class=\"p\">,</span>\n                   <span class=\"n\">tempMin</span> <span class=\"o\">=</span> <span class=\"n\">day</span><span class=\"o\">.</span><span class=\"n\">temperatureMin</span><span class=\"p\">,</span>\n                   <span class=\"n\">tempMax</span> <span class=\"o\">=</span> <span class=\"n\">day</span><span class=\"o\">.</span><span class=\"n\">temperatureMax</span>\n                   <span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{day}</span><span class=\"s1\">: </span><span class=\"si\">{sum}</span><span class=\"s1\"> Temp range: </span><span class=\"si\">{tempMin}</span><span class=\"s1\"> - </span><span class=\"si\">{tempMax}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">day</span><span class=\"p\">))</span>\n        <span class=\"n\">weekday</span> <span class=\"o\">+=</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre>Light rain on Friday and Saturday, with temperatures bottoming out at 48\u00b0F on Tuesday.\n---\nSun: Partly cloudy in the morning. Temp range: 44.86 - 57.26\u00b0F\nMon: Mostly cloudy in the morning. Temp range: 44.26 - 55.28\u00b0F\nTue: Clear throughout the day. Temp range: 36.85 - 47.9\u00b0F\nWed: Partly cloudy starting in the afternoon, continuing until evening. Temp range: 33.23 - 47.93\u00b0F\nThu: Light rain overnight. Temp range: 35.75 - 49.71\u00b0F\nFri: Light rain in the morning and afternoon. Temp range: 45.47 - 57.11\u00b0F\nSat: Drizzle in the morning. Temp range: 43.3 - 62.08\u00b0F\nSun: Clear throughout the day. Temp range: 39.81 - 60.84\u00b0F\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The code is available under terms of <a href=\"https://raw.githubusercontent.com/lukaskubis/darkskylib/master/LICENSE\" rel=\"nofollow\">MIT\nLicense</a></p>\n</div>\n\n          </div>"}, "last_serial": 3487716, "releases": {"0.2.2": [{"comment_text": "", "digests": {"md5": "ceff5216d30507f072e046b89f962af4", "sha256": "d42bdd0fb6ff362ed3162673d1263f1fe1d33a53c0d47e23013829b220c9d12c"}, "downloads": -1, "filename": "darkskylib-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ceff5216d30507f072e046b89f962af4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5111, "upload_time": "2016-09-25T12:37:37", "upload_time_iso_8601": "2016-09-25T12:37:37.244978Z", "url": "https://files.pythonhosted.org/packages/a3/1e/c5ae9525f3a78e441a1b14aa52d370ce7acfe119853896e59c5b15077b9b/darkskylib-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40f07203ddeab82a00e440b0d28057d0", "sha256": "5ff110b6a72518ca322418044fa62e86f7af2988b7a49e1cd4bd8fc8dc65e3f8"}, "downloads": -1, "filename": "darkskylib-0.2.2.tar.gz", "has_sig": false, "md5_digest": "40f07203ddeab82a00e440b0d28057d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3254, "upload_time": "2016-09-25T12:37:40", "upload_time_iso_8601": "2016-09-25T12:37:40.293532Z", "url": "https://files.pythonhosted.org/packages/52/fa/9ada0bd736c257be4f24b1316ea77000aba30e9ce4a129e51b78e46701a5/darkskylib-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "412b3a7f7c3d2e6a142c852fb58f763d", "sha256": "b5c2c7ef1ba63763350faa0225c357be06ee41b1e20720a4317f1f0e57de8167"}, "downloads": -1, "filename": "darkskylib-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "412b3a7f7c3d2e6a142c852fb58f763d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4582, "upload_time": "2016-10-14T12:59:31", "upload_time_iso_8601": "2016-10-14T12:59:31.938856Z", "url": "https://files.pythonhosted.org/packages/e6/54/ffdd2360b0e0d1fde18edcb805caa17a3f02624942d071be9c44625ca65d/darkskylib-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd70d299703d6efd65ef605b22b87100", "sha256": "38584ad776f3cb88c13a76742f690d66405a438648bd7ed5d913ebcc745b373b"}, "downloads": -1, "filename": "darkskylib-0.2.3.tar.gz", "has_sig": false, "md5_digest": "cd70d299703d6efd65ef605b22b87100", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2860, "upload_time": "2016-10-14T12:59:34", "upload_time_iso_8601": "2016-10-14T12:59:34.404483Z", "url": "https://files.pythonhosted.org/packages/52/c5/d2869b36dd26e5052bc1a377a2e0fab6d405d497c3f4531cf77191a75fa8/darkskylib-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "b7af57ee499fdd43ae177abd975bc5f6", "sha256": "bccdcaf701ea96255086b0226cc1df7585bcfc8e0f95edc201499d76d99f5825"}, "downloads": -1, "filename": "darkskylib-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b7af57ee499fdd43ae177abd975bc5f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4015, "upload_time": "2017-05-18T08:48:43", "upload_time_iso_8601": "2017-05-18T08:48:43.640510Z", "url": "https://files.pythonhosted.org/packages/23/18/4f81cb17db8feb003d095b01b5badfeecb27b74e6470d165b6e6a974bc8a/darkskylib-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04f78ab1040ae69a9c701e25d9be9a42", "sha256": "dca98213ea8a81bffdf47887e486ccaa89a5b70a456d603d66e80c6cd94ee93b"}, "downloads": -1, "filename": "darkskylib-0.2.4.tar.gz", "has_sig": false, "md5_digest": "04f78ab1040ae69a9c701e25d9be9a42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2331, "upload_time": "2017-05-18T08:48:45", "upload_time_iso_8601": "2017-05-18T08:48:45.569771Z", "url": "https://files.pythonhosted.org/packages/32/03/f7c140e39308bc8834e9819f24f3d10450cf31f4cb5a0686a3793c30ea1d/darkskylib-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "876525f38292efaf0f588ff14e6444f6", "sha256": "6837252bb728de86502a92cb75e8d9eca279f8e05610aeebd5952e6ef161f1c2"}, "downloads": -1, "filename": "darkskylib-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "876525f38292efaf0f588ff14e6444f6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8896, "upload_time": "2017-05-19T10:57:53", "upload_time_iso_8601": "2017-05-19T10:57:53.093271Z", "url": "https://files.pythonhosted.org/packages/be/8b/25f9ca2c2a929eb77d41c0b6cade668922693e2b7d7e8f5d3c76820b6ce2/darkskylib-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef2219e9b5dab7549e8140e3eb545ab2", "sha256": "253787d525fde31a5ee9da8ce7ff629cd980374caf3af99e78037d83939b9396"}, "downloads": -1, "filename": "darkskylib-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ef2219e9b5dab7549e8140e3eb545ab2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4991, "upload_time": "2017-05-19T10:57:55", "upload_time_iso_8601": "2017-05-19T10:57:55.585133Z", "url": "https://files.pythonhosted.org/packages/77/76/5736e03e68c3895a1a96e3809a367d49fa99019807f97838dfc344927c3b/darkskylib-0.3.0.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "dd0b80c3663f9ce0192ffc7be449110a", "sha256": "f4326237e01f0638adef690711e58fa7d24d25fd01c831550bd87727deb88ced"}, "downloads": -1, "filename": "darkskylib-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dd0b80c3663f9ce0192ffc7be449110a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9298, "upload_time": "2017-07-06T15:02:48", "upload_time_iso_8601": "2017-07-06T15:02:48.329595Z", "url": "https://files.pythonhosted.org/packages/6e/6c/b226908b41c8412b9d383ec2a73e33365d5d5aa527358c843c875457e99f/darkskylib-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be6f6a091794a08f8a0ac8cfb9fb5e39", "sha256": "05cfae74def24e76610de1c84a0afc6438b1dbd687cff78814d4b4c9e534e20e"}, "downloads": -1, "filename": "darkskylib-0.3.2.tar.gz", "has_sig": false, "md5_digest": "be6f6a091794a08f8a0ac8cfb9fb5e39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5105, "upload_time": "2017-07-06T15:02:49", "upload_time_iso_8601": "2017-07-06T15:02:49.267673Z", "url": "https://files.pythonhosted.org/packages/a2/50/e4a45ba0c518dc80110959e70024aaf07c8507b65f3973ea56d15cbaa9c1/darkskylib-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "0fd41b570ae00c9162565d230bd3fd0c", "sha256": "eb581101221c3e5f92b2d9087f0582bc046a22127864ace11c20a604e41fc9c2"}, "downloads": -1, "filename": "darkskylib-0.3.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0fd41b570ae00c9162565d230bd3fd0c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8744, "upload_time": "2017-07-06T15:19:10", "upload_time_iso_8601": "2017-07-06T15:19:10.653858Z", "url": "https://files.pythonhosted.org/packages/c0/bd/1855523c2e6c00f66252ea9632373a239f01028fc19ce975bd16a22e3f5e/darkskylib-0.3.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "781f6aa425bc2342a2ef330e308fa605", "sha256": "b19c1b14b398f41d8a53378bc829fc0d26926077a2ed354ef53bbb9e7fd525d5"}, "downloads": -1, "filename": "darkskylib-0.3.3.tar.gz", "has_sig": false, "md5_digest": "781f6aa425bc2342a2ef330e308fa605", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4820, "upload_time": "2017-07-06T15:19:12", "upload_time_iso_8601": "2017-07-06T15:19:12.423522Z", "url": "https://files.pythonhosted.org/packages/c6/6b/b75f0f2f47bd3f2bba9002fd3d2303cff24273d64791098aae6d875c5725/darkskylib-0.3.3.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "2d76cb28da38164543135ae063ac24e2", "sha256": "44025c6b46606741bc126cf6fecd58c5adfaab6d2d7716104b1e7b5176b4a67b"}, "downloads": -1, "filename": "darkskylib-0.3.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2d76cb28da38164543135ae063ac24e2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8702, "upload_time": "2017-07-06T15:25:10", "upload_time_iso_8601": "2017-07-06T15:25:10.311301Z", "url": "https://files.pythonhosted.org/packages/b4/60/3e9e55c32e848453569723b0cc6c58b8c1f615788dba65bf2bb33e7322c3/darkskylib-0.3.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d3660e0ddd1419272a2eb036f6086a5", "sha256": "5a0dfa9b80785d3f3c898f7f22554ea277d1045ffd84940857043376ef9bb496"}, "downloads": -1, "filename": "darkskylib-0.3.5.tar.gz", "has_sig": false, "md5_digest": "8d3660e0ddd1419272a2eb036f6086a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4803, "upload_time": "2017-07-06T15:25:13", "upload_time_iso_8601": "2017-07-06T15:25:13.548017Z", "url": "https://files.pythonhosted.org/packages/f1/94/e09c80e573a5cb0dce255eb80be13687d56e24114acc1d825587f7055e02/darkskylib-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "bd723256cf74a4136d1752f22acff05b", "sha256": "8580ff2c5abb75199463748a5302be3471624a89b099f8c2de6d70cdc2338f7c"}, "downloads": -1, "filename": "darkskylib-0.3.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd723256cf74a4136d1752f22acff05b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8730, "upload_time": "2017-07-06T15:40:09", "upload_time_iso_8601": "2017-07-06T15:40:09.906527Z", "url": "https://files.pythonhosted.org/packages/8f/f4/faae7adc459d749bea2466adbf215aa5c77ff0cb2f9882c2dd59bdd0c903/darkskylib-0.3.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f59d261690a38eacd3b0ba2a1091bc0", "sha256": "05ba9406b2c5ec4c091ba299a0c47dfb2a2eaa3ee1f23000af3b8be2d37997b6"}, "downloads": -1, "filename": "darkskylib-0.3.6.tar.gz", "has_sig": false, "md5_digest": "5f59d261690a38eacd3b0ba2a1091bc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4815, "upload_time": "2017-07-06T15:40:12", "upload_time_iso_8601": "2017-07-06T15:40:12.216983Z", "url": "https://files.pythonhosted.org/packages/94/91/052647f4b050a961b7e3d8daba2907dda17fa9d9eb2e221aa688e62f06bc/darkskylib-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "e1a13044760cdb111cf5dbbe292eefa6", "sha256": "df747f0ed3249c6838df30546b78dd2731a35d65eec2936a22fdddeea98c89a8"}, "downloads": -1, "filename": "darkskylib-0.3.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e1a13044760cdb111cf5dbbe292eefa6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8792, "upload_time": "2018-01-13T19:59:04", "upload_time_iso_8601": "2018-01-13T19:59:04.291383Z", "url": "https://files.pythonhosted.org/packages/47/fb/a4ece7aee7cdd2cac0e97745a0bf0ed225e29fe213a68b98a769cbcd4d52/darkskylib-0.3.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09533e01df92d7ad5feca86ce8d802ea", "sha256": "40827de72b32a419aa081ac70552ee6b08439aa44a6b1048d59b91bbdbdccb15"}, "downloads": -1, "filename": "darkskylib-0.3.7.tar.gz", "has_sig": false, "md5_digest": "09533e01df92d7ad5feca86ce8d802ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5699, "upload_time": "2018-01-13T19:59:07", "upload_time_iso_8601": "2018-01-13T19:59:07.036088Z", "url": "https://files.pythonhosted.org/packages/63/2f/bf5bde432beff78394ae393b9abaf875231afafe0f745fc65f36ab475bd7/darkskylib-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "cd61c028d454e463ba329a67234c1197", "sha256": "8febcd7605bfea1f1c26b694318ac0170a507b69b563e9da36e3ca5a1b8a89e8"}, "downloads": -1, "filename": "darkskylib-0.3.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd61c028d454e463ba329a67234c1197", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8730, "upload_time": "2018-01-13T20:37:45", "upload_time_iso_8601": "2018-01-13T20:37:45.275969Z", "url": "https://files.pythonhosted.org/packages/88/54/25248ae8e665f61e2de75c26b5ecd18c8fa43cda5ffa36565ee58715d5e6/darkskylib-0.3.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a0610c6b809a5e996fb31d705b03484", "sha256": "d71fe232d06dc1a0d0d43a9ecb1475a3f6a91d8c69530090b34f9ad035840707"}, "downloads": -1, "filename": "darkskylib-0.3.8.tar.gz", "has_sig": false, "md5_digest": "3a0610c6b809a5e996fb31d705b03484", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5265, "upload_time": "2018-01-13T20:37:46", "upload_time_iso_8601": "2018-01-13T20:37:46.418845Z", "url": "https://files.pythonhosted.org/packages/31/f0/1dfabbfab09204eecc81db75e7669bba05dff713fb76273004ba215728f2/darkskylib-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "14bd939f28b67826c86c426b9cc8317a", "sha256": "e48a687280c0b4ba64181815f8c7199d683bcba3106849f9cdb7a3e61555918a"}, "downloads": -1, "filename": "darkskylib-0.3.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "14bd939f28b67826c86c426b9cc8317a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8858, "upload_time": "2018-01-13T21:07:49", "upload_time_iso_8601": "2018-01-13T21:07:49.505437Z", "url": "https://files.pythonhosted.org/packages/24/25/cb096eac6c32758822dd3f341f31c0ef0bff12d1392850356d133c844b11/darkskylib-0.3.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "653e1da2379e10ee6d3d9f984109b7ce", "sha256": "b5ac595a28edff5df01edcb0ce650b7ce7f3f71a2f8e73acf5ff5b77e8d8d7b6"}, "downloads": -1, "filename": "darkskylib-0.3.9.tar.gz", "has_sig": false, "md5_digest": "653e1da2379e10ee6d3d9f984109b7ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5336, "upload_time": "2018-01-13T21:07:51", "upload_time_iso_8601": "2018-01-13T21:07:51.350820Z", "url": "https://files.pythonhosted.org/packages/ef/2e/f096218bb44215ce4c0394a3d0076a6272bbd3f956622d97184344b14099/darkskylib-0.3.9.tar.gz", "yanked": false}], "0.3.91": [{"comment_text": "", "digests": {"md5": "a43f8b85e1ea170a30254f5ce260a096", "sha256": "b8add8ad220469ee53928c5c0d09bd144095ec23374e9027ad615cf6b97ffb9a"}, "downloads": -1, "filename": "darkskylib-0.3.91-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a43f8b85e1ea170a30254f5ce260a096", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8875, "upload_time": "2018-01-14T00:35:25", "upload_time_iso_8601": "2018-01-14T00:35:25.290783Z", "url": "https://files.pythonhosted.org/packages/ab/b2/0e12ecc76862e2b4b88cb8e211adc321511e7cf4c3bfc0fd1a13617fbd63/darkskylib-0.3.91-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3422832031b8cb43f77e7be727855de", "sha256": "061a5f84a45ede1320cd845c954eb6d63ade2d630738d9a3be8f489d24e92551"}, "downloads": -1, "filename": "darkskylib-0.3.91.tar.gz", "has_sig": false, "md5_digest": "a3422832031b8cb43f77e7be727855de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5342, "upload_time": "2018-01-14T00:35:27", "upload_time_iso_8601": "2018-01-14T00:35:27.412490Z", "url": "https://files.pythonhosted.org/packages/70/68/c797e1643dc2cc9eba9e8157a208ec5283ef4fc60bb4d9796d066361eb26/darkskylib-0.3.91.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a43f8b85e1ea170a30254f5ce260a096", "sha256": "b8add8ad220469ee53928c5c0d09bd144095ec23374e9027ad615cf6b97ffb9a"}, "downloads": -1, "filename": "darkskylib-0.3.91-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a43f8b85e1ea170a30254f5ce260a096", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8875, "upload_time": "2018-01-14T00:35:25", "upload_time_iso_8601": "2018-01-14T00:35:25.290783Z", "url": "https://files.pythonhosted.org/packages/ab/b2/0e12ecc76862e2b4b88cb8e211adc321511e7cf4c3bfc0fd1a13617fbd63/darkskylib-0.3.91-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3422832031b8cb43f77e7be727855de", "sha256": "061a5f84a45ede1320cd845c954eb6d63ade2d630738d9a3be8f489d24e92551"}, "downloads": -1, "filename": "darkskylib-0.3.91.tar.gz", "has_sig": false, "md5_digest": "a3422832031b8cb43f77e7be727855de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5342, "upload_time": "2018-01-14T00:35:27", "upload_time_iso_8601": "2018-01-14T00:35:27.412490Z", "url": "https://files.pythonhosted.org/packages/70/68/c797e1643dc2cc9eba9e8157a208ec5283ef4fc60bb4d9796d066361eb26/darkskylib-0.3.91.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:39 2020"}