{"info": {"author": "Exahilosys", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "## Server Usage\n```py\nimport aiochat\nimport aiohttp.web\n\nclass Agent(aiochat.ServerAgent):\n\n    @aiochat.use\n    async def join(self, *args, delimit = ','):\n\n        return delimit.join(map(str, args))\n\napp = aiohttp.web.Application()\n\nroutes = aiohttp.web.RouteTableDef()\n\n@routes.get('/connect')\nasync def handle(request):\n\n    websocket = aiohttp.web.WebSocketResponse()\n\n    await websocket.prepare(request)\n\n    agent = Agent()\n\n    await agent.start(websocket)\n\n    value = 'eggs and bacon and salad'\n\n    # remote call\n    result = await agent.split(value, delimit = ' and ')\n\n    print('result:', result)\n\n    # wait until disconnection\n    await agent.wait()\n\n    return websocket\n\napp.router.add_routes(routes)\n\naiohttp.web.run_app(app)\n```\n## Client Usage\n```py\nimport aiochat\nimport aiohttp\nimport asyncio\n\nclass Agent(aiochat.ClientAgent):\n\n    @aiochat.use\n    async def split(self, value, delimit = ','):\n\n        return value.split(delimit)\n\nloop = asyncio.get_event_loop()\n\nurl = 'http://localhost:8080/connect'\n\nasync def main():\n\n    session = aiohttp.ClientSession(loop = loop)\n\n    async def connect():\n\n        while not session.closed:\n\n            try:\n\n                websocket = await session.ws_connect(url)\n\n            except aiohttp.ClientError:\n\n                await asyncio.sleep(0.5)\n\n            else:\n\n                break\n\n        return websocket\n\n    agent = Agent(connect)\n\n    await agent.start()\n\n    values = ('crooked man', 'mile', 'sixpence', 'stile')\n\n    # remote call\n    result = await agent.join(*values, delimit = ' ')\n\n    print('result:', result)\n\n    # disconnect\n    await agent.stop()\n\n    await session.close()\n\ncoroutine = main()\n\nloop.run_until_complete(coroutine)\n```\n## Details\n- Clients will attempt to auto-reconnect until told to stop.\n- Method names have to follow python function name limitations.\n- The reconnection protocol reserves the `hello` `alert` methods.\n- Implementation reserves the `bind` `wait` `start` `stop` methods.\n- Annotations are not considered; schema checking should be done manually.\n- Keyword arguments cannot be passed in a positional manner and vice versa.\n- WebSockets should not be used outside of Agent context while connected.\n## Installing\n```\npython3 -m pip install aiochat\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Exahilosys/aiochat", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aiochat", "package_url": "https://pypi.org/project/aiochat/", "platform": "", "project_url": "https://pypi.org/project/aiochat/", "project_urls": {"Homepage": "https://github.com/Exahilosys/aiochat"}, "release_url": "https://pypi.org/project/aiochat/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "Simple RPC server/client framework.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Server Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aiochat</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp.web</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Agent</span><span class=\"p\">(</span><span class=\"n\">aiochat</span><span class=\"o\">.</span><span class=\"n\">ServerAgent</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@aiochat</span><span class=\"o\">.</span><span class=\"n\">use</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"n\">delimit</span> <span class=\"o\">=</span> <span class=\"s1\">','</span><span class=\"p\">):</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">delimit</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"p\">))</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">()</span>\n\n<span class=\"n\">routes</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">RouteTableDef</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@routes</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/connect'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">handle</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n\n    <span class=\"n\">websocket</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">WebSocketResponse</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">websocket</span><span class=\"o\">.</span><span class=\"n\">prepare</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">websocket</span><span class=\"p\">)</span>\n\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s1\">'eggs and bacon and salad'</span>\n\n    <span class=\"c1\"># remote call</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">delimit</span> <span class=\"o\">=</span> <span class=\"s1\">' and '</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'result:'</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># wait until disconnection</span>\n    <span class=\"k\">await</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">websocket</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">router</span><span class=\"o\">.</span><span class=\"n\">add_routes</span><span class=\"p\">(</span><span class=\"n\">routes</span><span class=\"p\">)</span>\n\n<span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">run_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h2>Client Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aiochat</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Agent</span><span class=\"p\">(</span><span class=\"n\">aiochat</span><span class=\"o\">.</span><span class=\"n\">ClientAgent</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@aiochat</span><span class=\"o\">.</span><span class=\"n\">use</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">split</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">delimit</span> <span class=\"o\">=</span> <span class=\"s1\">','</span><span class=\"p\">):</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">delimit</span><span class=\"p\">)</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n\n<span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'http://localhost:8080/connect'</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">(</span><span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"p\">)</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">connect</span><span class=\"p\">():</span>\n\n        <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">closed</span><span class=\"p\">:</span>\n\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n\n                <span class=\"n\">websocket</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">ws_connect</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n            <span class=\"k\">except</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientError</span><span class=\"p\">:</span>\n\n                <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n\n                <span class=\"k\">break</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">websocket</span>\n\n    <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">Agent</span><span class=\"p\">(</span><span class=\"n\">connect</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n    <span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'crooked man'</span><span class=\"p\">,</span> <span class=\"s1\">'mile'</span><span class=\"p\">,</span> <span class=\"s1\">'sixpence'</span><span class=\"p\">,</span> <span class=\"s1\">'stile'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># remote call</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">values</span><span class=\"p\">,</span> <span class=\"n\">delimit</span> <span class=\"o\">=</span> <span class=\"s1\">' '</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'result:'</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># disconnect</span>\n    <span class=\"k\">await</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"n\">coroutine</span> <span class=\"o\">=</span> <span class=\"n\">main</span><span class=\"p\">()</span>\n\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">coroutine</span><span class=\"p\">)</span>\n</pre>\n<h2>Details</h2>\n<ul>\n<li>Clients will attempt to auto-reconnect until told to stop.</li>\n<li>Method names have to follow python function name limitations.</li>\n<li>The reconnection protocol reserves the <code>hello</code> <code>alert</code> methods.</li>\n<li>Implementation reserves the <code>bind</code> <code>wait</code> <code>start</code> <code>stop</code> methods.</li>\n<li>Annotations are not considered; schema checking should be done manually.</li>\n<li>Keyword arguments cannot be passed in a positional manner and vice versa.</li>\n<li>WebSockets should not be used outside of Agent context while connected.</li>\n</ul>\n<h2>Installing</h2>\n<pre><code>python3 -m pip install aiochat\n</code></pre>\n\n          </div>"}, "last_serial": 6534265, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "b0bf09a87796a47d110dc78f03efa4cb", "sha256": "260946251db0e848c11edd205c1d8f877da5ebb6226219e4d414d42a23b266ce"}, "downloads": -1, "filename": "aiochat-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b0bf09a87796a47d110dc78f03efa4cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6874, "upload_time": "2019-04-22T13:26:17", "upload_time_iso_8601": "2019-04-22T13:26:17.769152Z", "url": "https://files.pythonhosted.org/packages/13/08/84f7525bd1f86302c1ee1ef0291827d1466cf896aa855dcca59878ed2bea/aiochat-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45548d01ed84f5a846367739982e1fc2", "sha256": "0568888fa3be5012b068a926fe24d37af326da04e7f7c190f1e8fc9ed702777d"}, "downloads": -1, "filename": "aiochat-0.0.0.tar.gz", "has_sig": false, "md5_digest": "45548d01ed84f5a846367739982e1fc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5079, "upload_time": "2019-04-22T13:26:19", "upload_time_iso_8601": "2019-04-22T13:26:19.977771Z", "url": "https://files.pythonhosted.org/packages/10/1d/8064afc58f9195c90666d2bc2a5ef7171be11737d35098eab183ee4ecdb5/aiochat-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "7e819f771f818baac07a9d1f5f729d19", "sha256": "2a578e642aa33e0d7843714ca83146088131e69a3571ee8bf1779fca25e23f59"}, "downloads": -1, "filename": "aiochat-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7e819f771f818baac07a9d1f5f729d19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6943, "upload_time": "2019-04-22T13:46:21", "upload_time_iso_8601": "2019-04-22T13:46:21.787029Z", "url": "https://files.pythonhosted.org/packages/7a/eb/dafb628fa6e92fa5d314541617b3397a32b538896be16286d740d051a9cb/aiochat-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "104adb13ab1c4ea89990eaf6a842bb18", "sha256": "35e8f9bffca824e312edae32e8afacf60b298a92a1e38e6868ca0dd0b6641d23"}, "downloads": -1, "filename": "aiochat-0.0.1.tar.gz", "has_sig": false, "md5_digest": "104adb13ab1c4ea89990eaf6a842bb18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5162, "upload_time": "2019-04-22T13:46:23", "upload_time_iso_8601": "2019-04-22T13:46:23.181006Z", "url": "https://files.pythonhosted.org/packages/d5/e9/6246dc14df71a27552b0668b7ecdc1f236adf012c542982d5b0a4abf81b8/aiochat-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f4483f62fb635da0ba0c17bf6633d69b", "sha256": "10fa04548c994c63da8eca2f7391352245bb1a3c82dde6bf6afa78762b2204d2"}, "downloads": -1, "filename": "aiochat-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f4483f62fb635da0ba0c17bf6633d69b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6924, "upload_time": "2020-01-28T20:13:32", "upload_time_iso_8601": "2020-01-28T20:13:32.323694Z", "url": "https://files.pythonhosted.org/packages/81/94/d07b5f1cf49c0d9f1aa1180414f4f556e778f20e97e14de0ee9868f472e3/aiochat-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5431b15c56855a6a266567affe7aa3a2", "sha256": "c3686ec549b22877c3be40b0eaa16b58a165d9c502eeae315efa9c878b8d59a6"}, "downloads": -1, "filename": "aiochat-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5431b15c56855a6a266567affe7aa3a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5137, "upload_time": "2020-01-28T20:13:34", "upload_time_iso_8601": "2020-01-28T20:13:34.626779Z", "url": "https://files.pythonhosted.org/packages/cb/e0/35e5e564ea95754fda2d3c3be292c08adf0aac427a0d18b4637d5959673f/aiochat-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "261ba08cea8da09b5a3bede109972175", "sha256": "a93ba0fd31a2bb20892f3bc128351029b6543eb1713cac7efb0e29a1c86cf556"}, "downloads": -1, "filename": "aiochat-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "261ba08cea8da09b5a3bede109972175", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6752, "upload_time": "2020-01-28T20:13:33", "upload_time_iso_8601": "2020-01-28T20:13:33.514598Z", "url": "https://files.pythonhosted.org/packages/2e/ae/9da7b5be51974bc51cf0d7174b942fd991d5e35fa8e91c1f50a24668f0bb/aiochat-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0132def37e9f4fa67eb4ef8faf2410d6", "sha256": "57af3dfc03caeadae565106265dfc3c872b75e84e80798ea10f79ca6a974a290"}, "downloads": -1, "filename": "aiochat-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0132def37e9f4fa67eb4ef8faf2410d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5142, "upload_time": "2020-01-28T20:13:35", "upload_time_iso_8601": "2020-01-28T20:13:35.926777Z", "url": "https://files.pythonhosted.org/packages/7f/c4/cb9cedaf8af0b70f4f636068b0d9e61a4ec3eee3766e12ff0d31575d9174/aiochat-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "261ba08cea8da09b5a3bede109972175", "sha256": "a93ba0fd31a2bb20892f3bc128351029b6543eb1713cac7efb0e29a1c86cf556"}, "downloads": -1, "filename": "aiochat-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "261ba08cea8da09b5a3bede109972175", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6752, "upload_time": "2020-01-28T20:13:33", "upload_time_iso_8601": "2020-01-28T20:13:33.514598Z", "url": "https://files.pythonhosted.org/packages/2e/ae/9da7b5be51974bc51cf0d7174b942fd991d5e35fa8e91c1f50a24668f0bb/aiochat-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0132def37e9f4fa67eb4ef8faf2410d6", "sha256": "57af3dfc03caeadae565106265dfc3c872b75e84e80798ea10f79ca6a974a290"}, "downloads": -1, "filename": "aiochat-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0132def37e9f4fa67eb4ef8faf2410d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5142, "upload_time": "2020-01-28T20:13:35", "upload_time_iso_8601": "2020-01-28T20:13:35.926777Z", "url": "https://files.pythonhosted.org/packages/7f/c4/cb9cedaf8af0b70f4f636068b0d9e61a4ec3eee3766e12ff0d31575d9174/aiochat-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:43 2020"}