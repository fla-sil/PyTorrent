{"info": {"author": "Ankur Singh", "author_email": "ankur310794@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Model_X\n\nModel_X package is a collection of different NLP architecture models.\n\n# Implementation\n\n## 1. BiLSTM+BiGRU Architectures\n\n### a. BiLSTMGRUSpatialDropout1D\n\n    from model_X.bilstm_architectures import *\n    from model_X.dense_architectures import DenseLayerModel\n    from tensorflow.keras.layers import *\n    from tensorflow.keras.models import Model\n\n    input_shape = (100,)\n    model_input = Input(shape=input_shape)\n    bilstm_layers = BiLSTMGRUSpatialDropout1D(10, 100)(model_input)\n    dense_layers = DenseLayerModel()(bilstm_layers)\n    output = Dense(3, activation='softmax')(dense_layers)\n    full_model = Model(inputs=model_input, outputs=output)\n    print(full_model.summary())\n\n### b. BiLSTMGRUSelfAttention\n\n    from model_X.bilstm_architectures import *\n    from model_X.dense_architectures import DenseLayerModel\n    from tensorflow.keras.layers import *\n    from tensorflow.keras.models import Model\n\n    input_shape = (100,)\n    model_input = Input(shape=input_shape)\n    bilstm_layers = BiLSTMGRUAttention(10, 100)(model_input)\n    dense_layers = DenseLayerModel()(bilstm_layers)\n    output = Dense(3, activation='softmax')(dense_layers)\n    full_model = Model(inputs=model_input, outputs=output)\n    print(full_model.summary())\n\n### c.  BiLSTMGRUMultiHeadAttention\n\n    from model_X.bilstm_architectures import *\n    from model_X.dense_architectures import DenseLayerModel\n    from tensorflow.keras.layers import *\n    from tensorflow.keras.models import Model\n\n    input_shape = (100,)\n    model_input = Input(shape=input_shape)\n    bilstm_layers = BiLSTMGRUMultiHeadAttention(10, 100)(model_input)\n    dense_layers = DenseLayerModel()(bilstm_layers)\n    output = Dense(3, activation='softmax')(dense_layers)\n    full_model = Model(inputs=model_input, outputs=output)\n    print(full_model.summary())\n\n### d.  SplitBiLSTMGRUSpatialDropout1D\n\n    from model_X.bilstm_architectures import *\n    from model_X.dense_architectures import DenseLayerModel\n    from tensorflow.keras.layers import *\n    from tensorflow.keras.models import Model\n\n    input_shape = (100,)\n    model_input = Input(shape=input_shape)\n    bilstm_layers = SplitBiLSTMGRUSpatialDropout1D(10, 100)(model_input)\n    dense_layers = DenseLayerModel()(bilstm_layers)\n    output = Dense(3, activation='softmax')(dense_layers)\n    full_model = Model(inputs=model_input, outputs=output)\n    print(full_model.summary())\n\n### e.  SplitBiLSTMGRU\n\n    from model_X.bilstm_architectures import *\n    from model_X.dense_architectures import DenseLayerModel\n    from tensorflow.keras.layers import *\n    from tensorflow.keras.models import Model\n\n    input_shape = (100,)\n    model_input = Input(shape=input_shape)\n    bilstm_layers = SplitBiLSTMGRU(10, 100)(model_input)\n    dense_layers = DenseLayerModel()(bilstm_layers)\n    output = Dense(3, activation='softmax')(dense_layers)\n    full_model = Model(inputs=model_input, outputs=output)\n    print(full_model.summary())\n\n## 2. Dense Architectures\n\n\n### a. DenseLayerModel\n\n    from model_X.dense_architectures import DenseLayerModel\n    from tensorflow.keras.layers import *\n    from tensorflow.keras.models import Model\n\n    input_shape = (100,)\n    model_input = Input(shape=input_shape)\n    dense_layers = DenseLayerModel()(model_input)\n    output = Dense(3, activation='softmax')(dense_layers)\n    full_model = Model(inputs=model_input, outputs=output)\n    print(full_model.summary())\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ankur3107/ModelX", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "model-X", "package_url": "https://pypi.org/project/model-X/", "platform": "", "project_url": "https://pypi.org/project/model-X/", "project_urls": {"Homepage": "https://github.com/Ankur3107/ModelX"}, "release_url": "https://pypi.org/project/model-X/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "This package contains collection of models", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Model_X</h1>\n<p>Model_X package is a collection of different NLP architecture models.</p>\n<h1>Implementation</h1>\n<h2>1. BiLSTM+BiGRU Architectures</h2>\n<h3>a. BiLSTMGRUSpatialDropout1D</h3>\n<pre><code>from model_X.bilstm_architectures import *\nfrom model_X.dense_architectures import DenseLayerModel\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.models import Model\n\ninput_shape = (100,)\nmodel_input = Input(shape=input_shape)\nbilstm_layers = BiLSTMGRUSpatialDropout1D(10, 100)(model_input)\ndense_layers = DenseLayerModel()(bilstm_layers)\noutput = Dense(3, activation='softmax')(dense_layers)\nfull_model = Model(inputs=model_input, outputs=output)\nprint(full_model.summary())\n</code></pre>\n<h3>b. BiLSTMGRUSelfAttention</h3>\n<pre><code>from model_X.bilstm_architectures import *\nfrom model_X.dense_architectures import DenseLayerModel\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.models import Model\n\ninput_shape = (100,)\nmodel_input = Input(shape=input_shape)\nbilstm_layers = BiLSTMGRUAttention(10, 100)(model_input)\ndense_layers = DenseLayerModel()(bilstm_layers)\noutput = Dense(3, activation='softmax')(dense_layers)\nfull_model = Model(inputs=model_input, outputs=output)\nprint(full_model.summary())\n</code></pre>\n<h3>c.  BiLSTMGRUMultiHeadAttention</h3>\n<pre><code>from model_X.bilstm_architectures import *\nfrom model_X.dense_architectures import DenseLayerModel\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.models import Model\n\ninput_shape = (100,)\nmodel_input = Input(shape=input_shape)\nbilstm_layers = BiLSTMGRUMultiHeadAttention(10, 100)(model_input)\ndense_layers = DenseLayerModel()(bilstm_layers)\noutput = Dense(3, activation='softmax')(dense_layers)\nfull_model = Model(inputs=model_input, outputs=output)\nprint(full_model.summary())\n</code></pre>\n<h3>d.  SplitBiLSTMGRUSpatialDropout1D</h3>\n<pre><code>from model_X.bilstm_architectures import *\nfrom model_X.dense_architectures import DenseLayerModel\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.models import Model\n\ninput_shape = (100,)\nmodel_input = Input(shape=input_shape)\nbilstm_layers = SplitBiLSTMGRUSpatialDropout1D(10, 100)(model_input)\ndense_layers = DenseLayerModel()(bilstm_layers)\noutput = Dense(3, activation='softmax')(dense_layers)\nfull_model = Model(inputs=model_input, outputs=output)\nprint(full_model.summary())\n</code></pre>\n<h3>e.  SplitBiLSTMGRU</h3>\n<pre><code>from model_X.bilstm_architectures import *\nfrom model_X.dense_architectures import DenseLayerModel\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.models import Model\n\ninput_shape = (100,)\nmodel_input = Input(shape=input_shape)\nbilstm_layers = SplitBiLSTMGRU(10, 100)(model_input)\ndense_layers = DenseLayerModel()(bilstm_layers)\noutput = Dense(3, activation='softmax')(dense_layers)\nfull_model = Model(inputs=model_input, outputs=output)\nprint(full_model.summary())\n</code></pre>\n<h2>2. Dense Architectures</h2>\n<h3>a. DenseLayerModel</h3>\n<pre><code>from model_X.dense_architectures import DenseLayerModel\nfrom tensorflow.keras.layers import *\nfrom tensorflow.keras.models import Model\n\ninput_shape = (100,)\nmodel_input = Input(shape=input_shape)\ndense_layers = DenseLayerModel()(model_input)\noutput = Dense(3, activation='softmax')(dense_layers)\nfull_model = Model(inputs=model_input, outputs=output)\nprint(full_model.summary())\n</code></pre>\n\n          </div>"}, "last_serial": 7048484, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f907f54c48fad7f6e2bf51506aa51cec", "sha256": "2e36b967c35509f9c3552e700b8e770990a48a148d3afb3a83e022fb5ebe5b9d"}, "downloads": -1, "filename": "model_X-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f907f54c48fad7f6e2bf51506aa51cec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9196, "upload_time": "2020-04-11T16:50:11", "upload_time_iso_8601": "2020-04-11T16:50:11.609829Z", "url": "https://files.pythonhosted.org/packages/8f/40/81e6b70120364340ed80fe5ff95ff46177bd919f03126147943c25954147/model_X-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47f3d86acde829ab369e97696fccc401", "sha256": "fa81e4d7b61088e2e5af99ce92e7633cfcb051a04a5f0fb24183880ad1e2fde2"}, "downloads": -1, "filename": "model_X-0.1.0.tar.gz", "has_sig": false, "md5_digest": "47f3d86acde829ab369e97696fccc401", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8347, "upload_time": "2020-04-11T16:50:14", "upload_time_iso_8601": "2020-04-11T16:50:14.649250Z", "url": "https://files.pythonhosted.org/packages/a7/4e/b26fae685f19d21a973fed7f9bae4241f5f43e5ba5ca6abe78a1a697d517/model_X-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1891b47773583d570d5547fc6cfce5be", "sha256": "d756684524a2155314d7c13e1245915337d49350d50ff685058f28560ee70712"}, "downloads": -1, "filename": "model_X-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1891b47773583d570d5547fc6cfce5be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9353, "upload_time": "2020-04-12T13:43:56", "upload_time_iso_8601": "2020-04-12T13:43:56.255335Z", "url": "https://files.pythonhosted.org/packages/68/de/fc684bd4ae2c7f472b92c53f8f87681c5dcbdf258abce1f48b4dca4201de/model_X-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77e2e70d5ea96c5ab00f4de170b9406d", "sha256": "67c6325c2b3d9ed341a09517b7a98f45639f93dbc066016042b978cbb318af17"}, "downloads": -1, "filename": "model_X-0.1.1.tar.gz", "has_sig": false, "md5_digest": "77e2e70d5ea96c5ab00f4de170b9406d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8499, "upload_time": "2020-04-12T13:43:57", "upload_time_iso_8601": "2020-04-12T13:43:57.652888Z", "url": "https://files.pythonhosted.org/packages/a7/88/bec846e49c6a5e549278fd572492f7e6749a819cc3e9c01068662a6f2144/model_X-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7f91899d47d405446ab9124728ad1559", "sha256": "faea25cb9d4c10bdb3a767f0cb89973c27595ed346f48d2d712c38f85f3b4458"}, "downloads": -1, "filename": "model_X-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "7f91899d47d405446ab9124728ad1559", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9657, "upload_time": "2020-04-14T15:54:28", "upload_time_iso_8601": "2020-04-14T15:54:28.159926Z", "url": "https://files.pythonhosted.org/packages/33/d9/541f65786648979f3b3e1192d043ece2f3c16c6ccd0dd1300b5c2d65a838/model_X-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a8233f9a71f39ba5d9ac2c81e67a907", "sha256": "b2e1c3e604e65a3b80cce797fea7ba70233a331293db4d04ade3866d72aa7788"}, "downloads": -1, "filename": "model_X-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1a8233f9a71f39ba5d9ac2c81e67a907", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9134, "upload_time": "2020-04-14T15:54:30", "upload_time_iso_8601": "2020-04-14T15:54:30.068720Z", "url": "https://files.pythonhosted.org/packages/a5/db/2b954079685bdd0e4d25500c424f5c25af37153679521e65d26ce59d839b/model_X-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "ae3adae6aa3258243ea00ba1f035b043", "sha256": "62d711ceb484da76b29ca3314d83b752edc63dbe74886e707dce32d3a2eca676"}, "downloads": -1, "filename": "model_X-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "ae3adae6aa3258243ea00ba1f035b043", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9724, "upload_time": "2020-04-14T15:58:17", "upload_time_iso_8601": "2020-04-14T15:58:17.681961Z", "url": "https://files.pythonhosted.org/packages/bb/a7/600ac956bf5ad3c24d2045882d45ea7f08fa3819d51599ad279e8ad9dc05/model_X-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca9335ccbe1362637971db3e5fb0b148", "sha256": "cdfc7c90598bd6bc4493059f3d806b2a4a68b9286f2c196525564e541e358a32"}, "downloads": -1, "filename": "model_X-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ca9335ccbe1362637971db3e5fb0b148", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9231, "upload_time": "2020-04-14T15:58:19", "upload_time_iso_8601": "2020-04-14T15:58:19.178780Z", "url": "https://files.pythonhosted.org/packages/4b/35/795c037543fcd5111d11b9b8078e280bc05920ff7d985b94c2732e569277/model_X-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e42267954a8feea8ee59b0790895741c", "sha256": "8da7dc2e2a25b54647b98833873d31ce2636f9ed6577a2273596d5f5ff4cff6d"}, "downloads": -1, "filename": "model_X-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e42267954a8feea8ee59b0790895741c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9853, "upload_time": "2020-04-18T14:59:09", "upload_time_iso_8601": "2020-04-18T14:59:09.445493Z", "url": "https://files.pythonhosted.org/packages/e8/3a/b6f0e54fd51098e01707227e002d9ebdcd9127ee703b1d95a28d3be1dd5b/model_X-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c086ef21f86995a2860ae4663e430bf9", "sha256": "a0f967e43e6d1d980db86a53973ac15d544e51149b1bfaa697cfc2ac84305273"}, "downloads": -1, "filename": "model_X-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c086ef21f86995a2860ae4663e430bf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9325, "upload_time": "2020-04-18T14:59:10", "upload_time_iso_8601": "2020-04-18T14:59:10.657998Z", "url": "https://files.pythonhosted.org/packages/d6/1d/67abf8565a2d5d4a62958610569864b1b4dfc7a0e73151f863868d7510bb/model_X-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e42267954a8feea8ee59b0790895741c", "sha256": "8da7dc2e2a25b54647b98833873d31ce2636f9ed6577a2273596d5f5ff4cff6d"}, "downloads": -1, "filename": "model_X-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "e42267954a8feea8ee59b0790895741c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9853, "upload_time": "2020-04-18T14:59:09", "upload_time_iso_8601": "2020-04-18T14:59:09.445493Z", "url": "https://files.pythonhosted.org/packages/e8/3a/b6f0e54fd51098e01707227e002d9ebdcd9127ee703b1d95a28d3be1dd5b/model_X-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c086ef21f86995a2860ae4663e430bf9", "sha256": "a0f967e43e6d1d980db86a53973ac15d544e51149b1bfaa697cfc2ac84305273"}, "downloads": -1, "filename": "model_X-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c086ef21f86995a2860ae4663e430bf9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9325, "upload_time": "2020-04-18T14:59:10", "upload_time_iso_8601": "2020-04-18T14:59:10.657998Z", "url": "https://files.pythonhosted.org/packages/d6/1d/67abf8565a2d5d4a62958610569864b1b4dfc7a0e73151f863868d7510bb/model_X-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:51 2020"}