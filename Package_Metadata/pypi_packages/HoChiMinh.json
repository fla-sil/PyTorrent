{"info": {"author": "Egor Urvanov", "author_email": "hedgehogues@bk.ru", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3.7"], "description": "# Ho Chi Minh\n\n## Overview\n\nHo Chi Minh is designed to extract textual information from tables presented in PDF, pictures or other format.\nIf the table is strongly tilted, the data will not be extracted correctly. PDF is transformed into pictures (page by page),\nand then each image is processed separately.\n\nThe utility ignores the text layer and treats any pdf as a picture.\n\nIt is assumed that on one page there is exactly one table, which is not transferred to the next page. If\non the page there are several tables, then most likely the recognition will be incorrect.\n\nHo Chi Minh City does not know how to work with complex tables, in which several cells are united together:\n\n![Complex table](data/README/clever_table.png)\n\nThen, in the majority of cases, simple tables are correctly recognized:\n\n![Simple table](data/README/simple_table.png) \n\nIf the table occupies only a small part of the image or does not have\nobvious boundaries, then it probably will not be is recognized.\n\nHo Chi Minh allows to get the frame of the table in the form of a list of cells, each of which is represented by four points\n(cell angles). Cell is a class:\n\n    class Cell:\n        def __init__(self, x_min=0, x_max=0, y_min=0, y_max=0, prob=0.0, text=''):\n            # Coordinates of the cell in the picture\n            self.x_min = x_min\n            self.x_max = x_max\n            self.y_min = y_min\n            self.y_max = y_max\n\n            # Probability of correct extraction of cell coordinates\n            self.prob = prob\n            # Text inside the cell\n            self.text = text\n\nTo extract the text, you can use the following code:\n\n    templator = TableRecognizer(\n            reader=ImageFromPDFReader(\n                PDFConverter(in_path=path + 'pdf/', out_path=path + 'pdf/images/', resolution=130)\n            ),\n            hough_transformer=SobelDirector(),\n            connected_components=ConnectedComponents(),\n            cross_detector=CrossDetector(max_steps=15, detected_steps=8, line_width=8),\n            ocr=TesseractWrapper(),\n            binarization=210\n        )\n        table = []\n        for i in range(4):\n            table.append(templator.next_points())\n\n# How to install\n\n    pip install opencv-python=3.4.0.12 scikit-learn=0.19.1 numpy=1.14.0 scikit-image=0.13.1 pytesseract=0.2.0 scipy=1.0.0\n    pip install pdf2image=0.1.8 pillow=5.0.0 xlrd=1.1.0\n    apt-get install tesseract-ocr\n    apt-get install tesseract-ocr-rus\n    apt-get install poppler-utils\n\n# NOTICE\n\nIf the assembly fails, then there is probably a problem with the dependency versions and you should fix them yourself. \n\nIf you have a problem with openCV, you can study the workpiece for the docker file, which describes how to set \ndependencies for openCV, as well as openCV itself.\n\n## Other objects\n\nHoChiMinh consists of several parts (objects), which it must be initialized. More details about most of these parts can be found in the section ** Algorithm **. There are other objects that are not directly related to the algorithm, but, when this is important enough. This, for example, is the ImagePDFReader class, which provides downloading images from PDF. Its component is the PDFConverter.\n\nPDFConverter processes all files that lie in a specific directory. ImagePDFReader takes one file from the PDFConverter.\n\n## Algorithm\n\nThe principle of operation of the algorithm can be described with the help of the following scheme:\n\n![Flowchart](data/README/block_scheme.png)\n\n* Reader. Reading the next picture from the pool using the reader.\n* Detector of Horisontal and vertical lines. The image shows the most obvious and long horizontal and vertical lines.\n\n![\u0418\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](data/README/etalon_image.png)\n![\u0412\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b](data/README/horisontal_edge.png)\n![\u0413\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b](data/README/vertical_edge.png)\n\nFor each line, its coordinate is memorized (for horizontal lines - $ y $, for vertical ones - $ x $). Then, all \npossible pairs of points $ (x, y) $ are constructed. All of them are candidates for the corners of the cells of the\n table.\n\n![\u0422\u043e\u0447\u043a\u0438-\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b](data/README/detected_points.png)\n\n* Detector the largest connected components. We select the largest (we consider the area of \u200b\u200bthe rectangle in which it\nis) a connected component. All candidate points that belong to it are left, we forget about the others.\n\n* Detect cross of table. Some of the points highlighted in the table render superfluous. Some of them lie not at the intersection\nparties, and in an arbitrary place on the side of the table. All extra points are deleted.\n\n![Selected points](data/README/connected_components_points.png)\n\n* Uniques points. As a result of the operation performed in the previous step, only those points that lie in the nodes remain\ntables. In this case, in some nodes there are more than 1 point. This stage is aimed at obtaining a single point in each\nnode.\n\n* Building table. The table is constructed. In connection with the fact that part of the node points $ (x, y) $ may not be\nis recognized, we construct a table as the Cartesian product of the set $\\{x\\}\\times\\{y\\} $. In this case, if some cells\ntables were unified, then there is an erroneous recognition.\n\n![Table](data/README/table.png)\n\n* OCR. Each cell is considered separately. Recognition is carried out.\n\n## Links\n\n[1] http://www.machinelearning.ru/wiki/index.php?title=\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f_\u0444\u0443\u043d\u043a\u0446\u0438\u044f\n\n[2] http://www.sibran.ru/upload/iblock/0e1/0e15d76aff003e3879db51f21ae7f694.pdf\n\n[3] https://www.osapublishing.org/DirectPDFAccess/0CF96649-F614-A5CD-5F118AF53F660BAB_383046/copp-2-1-69.pdf?da=1&id=383046&seq=0&mobile=no\n\n[4] https://www.hindawi.com/journals/cmmm/2015/607407/\n\n[5] http://research.ijcaonline.org/volume55/number4/pxc3882634.pdf\n\n[6] http://article.sapub.org/pdf/10.5923.j.ajis.20120206.01.pdf\n\n[7] https://pdfs.semanticscholar.org/f07f/ec524e5a6dd08163e9f56599ea712cbd0a31.pdf\n\n[8] https://arxiv.org/abs/1505.04597\n\n[9] https://tyvik.ru/posts/pillow-almighty/\n\n[10] https://www.youtube.com/watch?v=jzZ3WVhgi5w\n\n[11] http://lab.alexkuk.ru/ocr/\n\n[12] https://github.com/ulikoehler/OTR\n\n[13] https://github.com/inuyasha2012/answer-sheet-scan\n\n[14] https://github.com/pavitrakumar78/Python-Custom-Digit-Recognition\n\n[15] https://github.com/enigma-ml/textify\n\n[17] https://www.ph4.ru/fonts_fonts.php?fn=all&l=rus&id=2\n\n[18] https://arxiv.org/pdf/1706.07422.pdf\n\n[19] https://github.com/Belval/pdf2image\n\n[20] https://habrahabr.ru/post/351266/\n\n[21] https://habrahabr.ru/post/181580/\n\n# Other projects\n\n[1] http://tabula.technology/\n\n[2] https://github.com/mpasternak/pdf-table-extractor\n\n[3] https://github.com/DustBytes/PdfTableExtraction\n\n[4] https://github.com/ferhatelmas/docker-pdf-table-extract\n\n[5] https://github.com/jsvine/pdfplumber\n\n[6] https://github.com/tfmorris/pdf2table\n\n[7] https://github.com/ashima/pdf-table-extract\n\n[8] https://github.com/BIDS/agri_tables\n\n[9] https://github.com/BIDS/agri_tables\n\n[10] https://github.com/nsi-iff/pypdf2table\n\n[11] https://github.com/mgedmin/pdf2html\n\n[12] https://github.com/maxbelyanin/pdf-tbl-extract\n\n# \u0425\u043e\u0448\u0438\u043c\u0438\u043d\n\n## \u041e\u0431\u0437\u043e\u0440\n\n\u0425\u043e\u0448\u0438\u043c\u0438\u043d \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 PDF, \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0430\u0445 \u0438\u043b\u0438 \u0438\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435.\n\u0415\u0441\u043b\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441\u0438\u043b\u044c\u043d\u043e \u043d\u0430\u043a\u043b\u043e\u043d\u0435\u043d\u0430, \u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437\u0432\u043b\u0435\u043a\u0443\u0442\u0441\u044f \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. PDF \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 (\u043f\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u043e),\n\u0430 \u0437\u0430\u0442\u0435\u043c \u043a\u0430\u0436\u0434\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e.\n\n\u0423\u0442\u0438\u043b\u0438\u0442\u0430 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0439 \u0438 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442 \u043b\u044e\u0431\u043e\u0439 pdf \u043a\u0430\u043a \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443.\n\n\u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u0415\u0441\u043b\u0438\n\u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0430\u0431\u043b\u0438\u0446, \u0442\u043e \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0451\u0442 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e.\n\n\u0425\u043e\u0448\u0438\u043c\u0438\u043d \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u043c\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430\u043c\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044f\u0447\u0435\u0435\u043a \u043e\u0431\u044a\u0435\u0434\u0435\u043d\u0435\u043d\u044b \u0432\u043e\u0435\u0434\u0438\u043d\u043e:\n\n![\u0421\u043b\u043e\u0436\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430](data/README/clever_table.png)\n\n\u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b:\n\n![\u041f\u0440\u043e\u0441\u0442\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430](data/README/simple_table.png)\n\n\u0415\u0441\u043b\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 \u043b\u0438\u0448\u044c \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u0436\u0435 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u044f\u0432\u043d\u044b\u0445 \u0433\u0440\u0430\u043d\u0438\u0446, \u0442\u043e, \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u043e\u043d\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442\n\u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u043d\u0430.\n\n\u0425\u043e\u0448\u0438\u043c\u0438\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0430\u0440\u043a\u0430\u0441 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432 \u0432\u0438\u0434\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u044f\u0447\u0435\u0435\u043a, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0447\u0435\u0442\u044b\u0440\u044c\u043c\u044f \u0442\u043e\u0447\u0435\u043a\u0430\u043c\u0438\n(\u0443\u0433\u043b\u044b \u044f\u0447\u0435\u0439\u043a\u0438). \u042f\u0447\u0435\u0439\u043a\u0430 (Cell) \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043a\u043b\u0430\u0441\u0441:\n\n    class Cell:\n        def __init__(self, x_min=0, x_max=0, y_min=0, y_max=0, prob=0.0, text=''):\n            # \u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u044f\u0447\u0435\u0439\u043a\u0438 \u043d\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0435\n            self.x_min = x_min\n            self.x_max = x_max\n            self.y_min = y_min\n            self.y_max = y_max\n\n            # \u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u044f\u0447\u0435\u0439\u043a\u0438\n            self.prob = prob\n            # \u0422\u0435\u043a\u0441\u0442 \u0432\u043d\u0443\u0442\u0440\u0438 \u044f\u0447\u0435\u0439\u043a\u0438\n            self.text = text\n\n\u0414\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0439 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043a\u043e\u0434\u043e\u043c:\n\n    templator = TableRecognizer(\n        reader=ImageFromPDFReader(\n            PDFConverter(in_path=path + 'pdf/', out_path=path + 'pdf/images/', resolution=130)\n        ),\n        hough_transformer=SobelDirector(),\n        connected_components=ConnectedComponents(),\n        cross_detector=CrossDetector(max_steps=15, detected_steps=8, line_width=8),\n        ocr=TesseractWrapper(),\n        binarization=210\n    )\n    table = []\n    for i in range(4):\n        table.append(templator.next_points())\n\n# How to install without pip\n\n    apt-get install tesseract-ocr\n    apt-get install tesseract-ocr-rus\n    apt-get install poppler-utils\n    pip install opencv-python=3.4.0.12 scikit-learn=0.19.1 numpy=1.14.0 scikit-image=0.13.1 pytesseract=0.2.0 scipy=1.0.0\n    pip install pdf2image=0.1.8 pillow=5.0.0 xlrd=1.1.0\n\n# How to install WITH pip\n\n    apt-get install tesseract-ocr\n    apt-get install tesseract-ocr-rus\n    apt-get install poppler-utils\n    pip install HoChiMinh\n\n## \u0417\u0430\u043c\u0435\u0447\u0435\u043d\u0438\u0435\n\n\u0415\u0441\u043b\u0438 \u0441\u0431\u043e\u0440\u043a\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439, \u0442\u043e, \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u0432\u0435\u0440\u0441\u0438\u044f\u043c\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0438 \u0412\u0430\u043c \u0441\u0442\u043e\u0438\u0442 \u0438\u0445 \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \n\u043f\u043e\u043f\u0440\u0430\u0432\u0438\u0442\u044c.\n\n\u0415\u0441\u043b\u0438 \u0443 \u0412\u0430\u0441 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 openCV, \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u0433\u043e\u0442\u043e\u0432\u043a\u0443 \u0434\u043b\u044f \u0434\u043e\u043a\u0435\u0440\u0444\u0430\u0439\u043b\u0430, \u0433\u0434\u0435 \u043e\u043f\u0438\u0441\u0430\u043d \u0441\u043f\u043e\u0441\u043e\u0431 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \n\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f openCV, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u0430\u043c\u043e\u0433\u043e openCV.\n\n## \u0421\u043e\u043f\u043e\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0443\u0442\u0438\u043b\u0438\u0442\u044b\n\n\u0425\u043e\u0448\u0438\u043c\u0438\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0447\u0430\u0441\u0442\u0435\u0439 (\u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432), \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0435\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c. \n\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435, \u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0438\u0437 \u044d\u0442\u0438\u0445 \u0447\u0430\u0441\u0442\u0435\u0439, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 **\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c**. \n\u0415\u0441\u0442\u044c \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u043a \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0443, \u043d\u043e, \u043f\u0440\u0438 \n\u044d\u0442\u043e\u043c \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0432\u0430\u0436\u043d\u044b\u043c\u0438 \u0447\u0430\u0441\u0442\u044f\u043c\u0438. \u042d\u0442\u043e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u043b\u0430\u0441\u0441 ImagePDFReader, \u043a\u043e\u0442\u043e\u0440\u044b\u0439\n\u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0438\u0437 PDF. \u0415\u0433\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f PDFConverter.\n\nPDFConverter \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u0444\u0430\u0439\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043b\u0435\u0436\u0430\u0442 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438. ImagePDFReader\n\u0431\u0435\u0440\u0451\u0442 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0444\u0430\u0439\u043b\u0443 \u043e\u0442 PDFConverter.\n\n## \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c\n\n\u041f\u0440\u0438\u043d\u0446\u0438\u043f \u0440\u0430\u0431\u043e\u0442\u044b \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0445\u0435\u043c\u044b:\n\n![\u0411\u043b\u043e\u043a-\u0441\u0445\u0435\u043c\u0430](data/README/block_scheme.png)\n\n* Reader. \u041f\u0440\u043e\u0447\u0442\u0435\u043d\u0438\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0439 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0438\u0437 \u043f\u0443\u043b\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0440\u0438\u0434\u0435\u0440\u0430.\n\n* Detector of Horisontal and vertical lines. \u041d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u0432\u044b\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u044f\u0432\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0442\u044f\u0436\u0451\u043d\u043d\u044b\u0435 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\n\u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043b\u0438\u043d\u0438\u0438.\n\n![\u0418\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](data/README/etalon_image.png)\n![\u0412\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b](data/README/horisontal_edge.png)\n![\u0413\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b](data/README/vertical_edge.png)\n\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043b\u0438\u043d\u0438\u0438 \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0435\u0451 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 (\u0434\u043b\u044f \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0445 - $y$, \u0434\u043b\u044f \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 - $x$). \u0417\u0430\u0442\u0435\u043c,\n\u0441\u0442\u0440\u043e\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u0442\u043e\u0447\u0435\u043a $(x, y)$. \u0412\u0441\u0435 \u043e\u043d\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u0430\u043c\u0438 \u0434\u043b\u044f \u0443\u0433\u043b\u043e\u0432 \u044f\u0447\u0435\u0435\u043a \u0442\u0430\u0431\u043b\u0438\u0446\u044b.\n\n![\u0422\u043e\u0447\u043a\u0438-\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b](data/README/detected_points.png)\n\n* Detector the largest connected components. \u0412\u044b\u0434\u0435\u043b\u044f\u0435\u043c \u0441\u0430\u043c\u0443\u044e \u0431\u043e\u043b\u044c\u0448\u0443\u044e (\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u0430\n\u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f) \u0441\u0432\u044f\u0437\u043d\u0443\u044e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443. \u0412\u0441\u0435 \u0442\u043e\u0447\u043a\u0438-\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b, \u043f\u0440\u0435\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u0435 \u0435\u0439, \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c, \u043f\u0440\u043e \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c.\n\n* Detect cross of table. \u0427\u0430\u0441\u0442\u044c \u0442\u043e\u0447\u0435\u043a, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0438\u0437\u043b\u0438\u0448\u043d\u0438\u043c\u0438. \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0437 \u043d\u0438\u0445 \u043b\u0435\u0436\u0430\u0442 \u043d\u0435 \u043d\u0430 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0438\n\u0441\u0442\u043e\u0440\u043e\u043d, \u0430 \u0432 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u041d\u0430 \u0432\u0441\u0435 \u043b\u0438\u0448\u043d\u0438\u0435 \u0442\u043e\u0447\u043a\u0438 \u0443\u0434\u0430\u043b\u044f\u044e\u0442\u0441\u044f.\n\n![\u041e\u0442\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438](data/README/connected_components_points.png)\n\n* Uniques points. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0451\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u0430 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0448\u0430\u0433\u0435, \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u043b\u0438\u0448\u044c \u0442\u0435 \u0442\u043e\u0447\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0435\u0436\u0430\u0442 \u0432 \u0443\u0437\u043b\u0430\u0445\n\u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0443\u0437\u043b\u0430\u0445 \u043b\u0435\u0436\u0438\u0442 \u0431\u043e\u043b\u0435\u0435 1 \u0442\u043e\u0447\u043a\u0438. \u0414\u0430\u043d\u043d\u044b\u0439 \u044d\u0442\u0430\u043f \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c\n\u0443\u0437\u043b\u0435.\n\n* Building table. \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u0412 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u0447\u0430\u0441\u0442\u044c \u0443\u0437\u043b\u043e\u0432\u044b\u0445 \u0442\u043e\u0447\u0435\u043a $(x, y)$ \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\n\u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u043d\u043e, \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443, \u043a\u0430\u043a \u0434\u0435\u043a\u0430\u0440\u0442\u043e\u0432\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 $\\{x\\} \\times \\{y\\}$. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0435\u0441\u043b\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0447\u0435\u0439\u043a\u0438\n\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0431\u044b\u043b\u0438 \u043e\u0431\u044a\u0435\u0434\u0435\u043d\u0435\u043d\u044b, \u0442\u043e \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043e\u0447\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u043e\u0432\u0430\u043d\u0438\u0435.\n\n![\u0422\u0430\u0431\u043b\u0438\u0446\u0430](data/README/table.png)\n\n* OCR. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u0430\u044f, \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0432\u0437\u044f\u0442\u0430\u044f \u044f\u0447\u0435\u0439\u043a\u0430. \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u043e\u0432\u0430\u043d\u0438\u0435.\n\n## \u0421\u0441\u044b\u043b\u043a\u0438\n[1] http://www.machinelearning.ru/wiki/index.php?title=\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f_\u0444\u0443\u043d\u043a\u0446\u0438\u044f\n\n[2] http://www.sibran.ru/upload/iblock/0e1/0e15d76aff003e3879db51f21ae7f694.pdf\n\n[3] https://www.osapublishing.org/DirectPDFAccess/0CF96649-F614-A5CD-5F118AF53F660BAB_383046/copp-2-1-69.pdf?da=1&id=383046&seq=0&mobile=no\n\n[4] https://www.hindawi.com/journals/cmmm/2015/607407/\n\n[5] http://research.ijcaonline.org/volume55/number4/pxc3882634.pdf\n\n[6] http://article.sapub.org/pdf/10.5923.j.ajis.20120206.01.pdf\n\n[7] https://pdfs.semanticscholar.org/f07f/ec524e5a6dd08163e9f56599ea712cbd0a31.pdf\n\n[8] https://arxiv.org/abs/1505.04597\n\n[9] https://tyvik.ru/posts/pillow-almighty/\n\n[10] https://www.youtube.com/watch?v=jzZ3WVhgi5w\n\n[11] http://lab.alexkuk.ru/ocr/\n\n[12] https://github.com/ulikoehler/OTR\n\n[13] https://github.com/inuyasha2012/answer-sheet-scan\n\n[14] https://github.com/pavitrakumar78/Python-Custom-Digit-Recognition\n\n[15] https://github.com/enigma-ml/textify\n\n[17] https://www.ph4.ru/fonts_fonts.php?fn=all&l=rus&id=2\n\n[18] https://arxiv.org/pdf/1706.07422.pdf\n\n[19] https://github.com/Belval/pdf2image\n\n[20] https://habrahabr.ru/post/351266/\n\n[21] https://habrahabr.ru/post/181580/\n\n# \u0414\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b\n\n[1] http://tabula.technology/\n\n[2] https://github.com/mpasternak/pdf-table-extractor\n\n[3] https://github.com/DustBytes/PdfTableExtraction\n\n[4] https://github.com/ferhatelmas/docker-pdf-table-extract\n\n[5] https://github.com/jsvine/pdfplumber\n\n[6] https://github.com/tfmorris/pdf2table\n\n[7] https://github.com/ashima/pdf-table-extract\n\n[8] https://github.com/BIDS/agri_tables\n\n[9] https://github.com/BIDS/agri_tables\n\n[10] https://github.com/nsi-iff/pypdf2table\n\n[11] https://github.com/mgedmin/pdf2html\n\n[12] https://github.com/maxbelyanin/pdf-tbl-extract\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Hedgehogues/HoChiMinh", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "HoChiMinh", "package_url": "https://pypi.org/project/HoChiMinh/", "platform": "", "project_url": "https://pypi.org/project/HoChiMinh/", "project_urls": {"Homepage": "https://github.com/Hedgehogues/HoChiMinh"}, "release_url": "https://pypi.org/project/HoChiMinh/1.0.0/", "requires_dist": ["opencv-python (==3.4.2.17)", "scikit-learn (==0.21.0)", "scikit-image (==0.16.2)", "pytesseract (==0.2.0)", "scipy (==1.3.1)", "pdf2image (==0.1.9)", "xlrd (==1.1.0)", "pillow (==5.2.0)"], "requires_python": "", "summary": "Ho Chi Minh is designed to extract textual information from tables presented in PDF, pictures or other format. \u0425\u043e\u0448\u0438\u043c\u0438\u043d \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 PDF, \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0430\u0445 \u0438\u043b\u0438 \u0438\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Ho Chi Minh</h1>\n<h2>Overview</h2>\n<p>Ho Chi Minh is designed to extract textual information from tables presented in PDF, pictures or other format.\nIf the table is strongly tilted, the data will not be extracted correctly. PDF is transformed into pictures (page by page),\nand then each image is processed separately.</p>\n<p>The utility ignores the text layer and treats any pdf as a picture.</p>\n<p>It is assumed that on one page there is exactly one table, which is not transferred to the next page. If\non the page there are several tables, then most likely the recognition will be incorrect.</p>\n<p>Ho Chi Minh City does not know how to work with complex tables, in which several cells are united together:</p>\n<p><img alt=\"Complex table\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dcb5cc8d72feb6db9d04fa69679e0824205c7e80/646174612f524541444d452f636c657665725f7461626c652e706e67\"></p>\n<p>Then, in the majority of cases, simple tables are correctly recognized:</p>\n<p><img alt=\"Simple table\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97cb688e4cb6b9b9ffb634831993ae4651850a91/646174612f524541444d452f73696d706c655f7461626c652e706e67\"></p>\n<p>If the table occupies only a small part of the image or does not have\nobvious boundaries, then it probably will not be is recognized.</p>\n<p>Ho Chi Minh allows to get the frame of the table in the form of a list of cells, each of which is represented by four points\n(cell angles). Cell is a class:</p>\n<pre><code>class Cell:\n    def __init__(self, x_min=0, x_max=0, y_min=0, y_max=0, prob=0.0, text=''):\n        # Coordinates of the cell in the picture\n        self.x_min = x_min\n        self.x_max = x_max\n        self.y_min = y_min\n        self.y_max = y_max\n\n        # Probability of correct extraction of cell coordinates\n        self.prob = prob\n        # Text inside the cell\n        self.text = text\n</code></pre>\n<p>To extract the text, you can use the following code:</p>\n<pre><code>templator = TableRecognizer(\n        reader=ImageFromPDFReader(\n            PDFConverter(in_path=path + 'pdf/', out_path=path + 'pdf/images/', resolution=130)\n        ),\n        hough_transformer=SobelDirector(),\n        connected_components=ConnectedComponents(),\n        cross_detector=CrossDetector(max_steps=15, detected_steps=8, line_width=8),\n        ocr=TesseractWrapper(),\n        binarization=210\n    )\n    table = []\n    for i in range(4):\n        table.append(templator.next_points())\n</code></pre>\n<h1>How to install</h1>\n<pre><code>pip install opencv-python=3.4.0.12 scikit-learn=0.19.1 numpy=1.14.0 scikit-image=0.13.1 pytesseract=0.2.0 scipy=1.0.0\npip install pdf2image=0.1.8 pillow=5.0.0 xlrd=1.1.0\napt-get install tesseract-ocr\napt-get install tesseract-ocr-rus\napt-get install poppler-utils\n</code></pre>\n<h1>NOTICE</h1>\n<p>If the assembly fails, then there is probably a problem with the dependency versions and you should fix them yourself.</p>\n<p>If you have a problem with openCV, you can study the workpiece for the docker file, which describes how to set\ndependencies for openCV, as well as openCV itself.</p>\n<h2>Other objects</h2>\n<p>HoChiMinh consists of several parts (objects), which it must be initialized. More details about most of these parts can be found in the section ** Algorithm **. There are other objects that are not directly related to the algorithm, but, when this is important enough. This, for example, is the ImagePDFReader class, which provides downloading images from PDF. Its component is the PDFConverter.</p>\n<p>PDFConverter processes all files that lie in a specific directory. ImagePDFReader takes one file from the PDFConverter.</p>\n<h2>Algorithm</h2>\n<p>The principle of operation of the algorithm can be described with the help of the following scheme:</p>\n<p><img alt=\"Flowchart\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdeb8fab9ed4db4702e0611089868d6d29a52e26/646174612f524541444d452f626c6f636b5f736368656d652e706e67\"></p>\n<ul>\n<li>Reader. Reading the next picture from the pool using the reader.</li>\n<li>Detector of Horisontal and vertical lines. The image shows the most obvious and long horizontal and vertical lines.</li>\n</ul>\n<p><img alt=\"\u0418\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ea035fb479b51b44ce59808fe241773653f9e70/646174612f524541444d452f6574616c6f6e5f696d6167652e706e67\">\n<img alt=\"\u0412\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b3c070c58378253770307d78f6aa5ab824e840f/646174612f524541444d452f686f7269736f6e74616c5f656467652e706e67\">\n<img alt=\"\u0413\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ddd955dce6ec3aace93a5a1baee08f0ac8d09dc8/646174612f524541444d452f766572746963616c5f656467652e706e67\"></p>\n<p>For each line, its coordinate is memorized (for horizontal lines - $ y $, for vertical ones - $ x $). Then, all\npossible pairs of points $ (x, y) $ are constructed. All of them are candidates for the corners of the cells of the\ntable.</p>\n<p><img alt=\"\u0422\u043e\u0447\u043a\u0438-\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7932bb354e8a16628a558b61aa23093db1c9b35e/646174612f524541444d452f64657465637465645f706f696e74732e706e67\"></p>\n<ul>\n<li>\n<p>Detector the largest connected components. We select the largest (we consider the area of \u200b\u200bthe rectangle in which it\nis) a connected component. All candidate points that belong to it are left, we forget about the others.</p>\n</li>\n<li>\n<p>Detect cross of table. Some of the points highlighted in the table render superfluous. Some of them lie not at the intersection\nparties, and in an arbitrary place on the side of the table. All extra points are deleted.</p>\n</li>\n</ul>\n<p><img alt=\"Selected points\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/602f29b5238c8749ea9fb28bb5b222cc0120534b/646174612f524541444d452f636f6e6e65637465645f636f6d706f6e656e74735f706f696e74732e706e67\"></p>\n<ul>\n<li>\n<p>Uniques points. As a result of the operation performed in the previous step, only those points that lie in the nodes remain\ntables. In this case, in some nodes there are more than 1 point. This stage is aimed at obtaining a single point in each\nnode.</p>\n</li>\n<li>\n<p>Building table. The table is constructed. In connection with the fact that part of the node points $ (x, y) $ may not be\nis recognized, we construct a table as the Cartesian product of the set ${x}\\times{y} $. In this case, if some cells\ntables were unified, then there is an erroneous recognition.</p>\n</li>\n</ul>\n<p><img alt=\"Table\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/959af8fe6eb9bd61e87885970cbb32b003ab9805/646174612f524541444d452f7461626c652e706e67\"></p>\n<ul>\n<li>OCR. Each cell is considered separately. Recognition is carried out.</li>\n</ul>\n<h2>Links</h2>\n<p>[1] <a href=\"http://www.machinelearning.ru/wiki/index.php?title=%D0%9B%D0%BE%D0%B3%D0%B8%D1%81%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F\" rel=\"nofollow\">http://www.machinelearning.ru/wiki/index.php?title=\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f_\u0444\u0443\u043d\u043a\u0446\u0438\u044f</a></p>\n<p>[2] <a href=\"http://www.sibran.ru/upload/iblock/0e1/0e15d76aff003e3879db51f21ae7f694.pdf\" rel=\"nofollow\">http://www.sibran.ru/upload/iblock/0e1/0e15d76aff003e3879db51f21ae7f694.pdf</a></p>\n<p>[3] <a href=\"https://www.osapublishing.org/DirectPDFAccess/0CF96649-F614-A5CD-5F118AF53F660BAB_383046/copp-2-1-69.pdf?da=1&amp;id=383046&amp;seq=0&amp;mobile=no\" rel=\"nofollow\">https://www.osapublishing.org/DirectPDFAccess/0CF96649-F614-A5CD-5F118AF53F660BAB_383046/copp-2-1-69.pdf?da=1&amp;id=383046&amp;seq=0&amp;mobile=no</a></p>\n<p>[4] <a href=\"https://www.hindawi.com/journals/cmmm/2015/607407/\" rel=\"nofollow\">https://www.hindawi.com/journals/cmmm/2015/607407/</a></p>\n<p>[5] <a href=\"http://research.ijcaonline.org/volume55/number4/pxc3882634.pdf\" rel=\"nofollow\">http://research.ijcaonline.org/volume55/number4/pxc3882634.pdf</a></p>\n<p>[6] <a href=\"http://article.sapub.org/pdf/10.5923.j.ajis.20120206.01.pdf\" rel=\"nofollow\">http://article.sapub.org/pdf/10.5923.j.ajis.20120206.01.pdf</a></p>\n<p>[7] <a href=\"https://pdfs.semanticscholar.org/f07f/ec524e5a6dd08163e9f56599ea712cbd0a31.pdf\" rel=\"nofollow\">https://pdfs.semanticscholar.org/f07f/ec524e5a6dd08163e9f56599ea712cbd0a31.pdf</a></p>\n<p>[8] <a href=\"https://arxiv.org/abs/1505.04597\" rel=\"nofollow\">https://arxiv.org/abs/1505.04597</a></p>\n<p>[9] <a href=\"https://tyvik.ru/posts/pillow-almighty/\" rel=\"nofollow\">https://tyvik.ru/posts/pillow-almighty/</a></p>\n<p>[10] <a href=\"https://www.youtube.com/watch?v=jzZ3WVhgi5w\" rel=\"nofollow\">https://www.youtube.com/watch?v=jzZ3WVhgi5w</a></p>\n<p>[11] <a href=\"http://lab.alexkuk.ru/ocr/\" rel=\"nofollow\">http://lab.alexkuk.ru/ocr/</a></p>\n<p>[12] <a href=\"https://github.com/ulikoehler/OTR\" rel=\"nofollow\">https://github.com/ulikoehler/OTR</a></p>\n<p>[13] <a href=\"https://github.com/inuyasha2012/answer-sheet-scan\" rel=\"nofollow\">https://github.com/inuyasha2012/answer-sheet-scan</a></p>\n<p>[14] <a href=\"https://github.com/pavitrakumar78/Python-Custom-Digit-Recognition\" rel=\"nofollow\">https://github.com/pavitrakumar78/Python-Custom-Digit-Recognition</a></p>\n<p>[15] <a href=\"https://github.com/enigma-ml/textify\" rel=\"nofollow\">https://github.com/enigma-ml/textify</a></p>\n<p>[17] <a href=\"https://www.ph4.ru/fonts_fonts.php?fn=all&amp;l=rus&amp;id=2\" rel=\"nofollow\">https://www.ph4.ru/fonts_fonts.php?fn=all&amp;l=rus&amp;id=2</a></p>\n<p>[18] <a href=\"https://arxiv.org/pdf/1706.07422.pdf\" rel=\"nofollow\">https://arxiv.org/pdf/1706.07422.pdf</a></p>\n<p>[19] <a href=\"https://github.com/Belval/pdf2image\" rel=\"nofollow\">https://github.com/Belval/pdf2image</a></p>\n<p>[20] <a href=\"https://habrahabr.ru/post/351266/\" rel=\"nofollow\">https://habrahabr.ru/post/351266/</a></p>\n<p>[21] <a href=\"https://habrahabr.ru/post/181580/\" rel=\"nofollow\">https://habrahabr.ru/post/181580/</a></p>\n<h1>Other projects</h1>\n<p>[1] <a href=\"http://tabula.technology/\" rel=\"nofollow\">http://tabula.technology/</a></p>\n<p>[2] <a href=\"https://github.com/mpasternak/pdf-table-extractor\" rel=\"nofollow\">https://github.com/mpasternak/pdf-table-extractor</a></p>\n<p>[3] <a href=\"https://github.com/DustBytes/PdfTableExtraction\" rel=\"nofollow\">https://github.com/DustBytes/PdfTableExtraction</a></p>\n<p>[4] <a href=\"https://github.com/ferhatelmas/docker-pdf-table-extract\" rel=\"nofollow\">https://github.com/ferhatelmas/docker-pdf-table-extract</a></p>\n<p>[5] <a href=\"https://github.com/jsvine/pdfplumber\" rel=\"nofollow\">https://github.com/jsvine/pdfplumber</a></p>\n<p>[6] <a href=\"https://github.com/tfmorris/pdf2table\" rel=\"nofollow\">https://github.com/tfmorris/pdf2table</a></p>\n<p>[7] <a href=\"https://github.com/ashima/pdf-table-extract\" rel=\"nofollow\">https://github.com/ashima/pdf-table-extract</a></p>\n<p>[8] <a href=\"https://github.com/BIDS/agri_tables\" rel=\"nofollow\">https://github.com/BIDS/agri_tables</a></p>\n<p>[9] <a href=\"https://github.com/BIDS/agri_tables\" rel=\"nofollow\">https://github.com/BIDS/agri_tables</a></p>\n<p>[10] <a href=\"https://github.com/nsi-iff/pypdf2table\" rel=\"nofollow\">https://github.com/nsi-iff/pypdf2table</a></p>\n<p>[11] <a href=\"https://github.com/mgedmin/pdf2html\" rel=\"nofollow\">https://github.com/mgedmin/pdf2html</a></p>\n<p>[12] <a href=\"https://github.com/maxbelyanin/pdf-tbl-extract\" rel=\"nofollow\">https://github.com/maxbelyanin/pdf-tbl-extract</a></p>\n<h1>\u0425\u043e\u0448\u0438\u043c\u0438\u043d</h1>\n<h2>\u041e\u0431\u0437\u043e\u0440</h2>\n<p>\u0425\u043e\u0448\u0438\u043c\u0438\u043d \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0438\u0437 \u0442\u0430\u0431\u043b\u0438\u0446, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 PDF, \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0430\u0445 \u0438\u043b\u0438 \u0438\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435.\n\u0415\u0441\u043b\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441\u0438\u043b\u044c\u043d\u043e \u043d\u0430\u043a\u043b\u043e\u043d\u0435\u043d\u0430, \u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437\u0432\u043b\u0435\u043a\u0443\u0442\u0441\u044f \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e. PDF \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 (\u043f\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u043e),\n\u0430 \u0437\u0430\u0442\u0435\u043c \u043a\u0430\u0436\u0434\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e.</p>\n<p>\u0423\u0442\u0438\u043b\u0438\u0442\u0430 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0439 \u0438 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442 \u043b\u044e\u0431\u043e\u0439 pdf \u043a\u0430\u043a \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0443.</p>\n<p>\u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043d\u0430 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u043f\u0435\u0440\u0435\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043d\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u0415\u0441\u043b\u0438\n\u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0430\u0431\u043b\u0438\u0446, \u0442\u043e \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u0435\u0435 \u0432\u0441\u0435\u0433\u043e \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0434\u0451\u0442 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e.</p>\n<p>\u0425\u043e\u0448\u0438\u043c\u0438\u043d \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441\u043e \u0441\u043b\u043e\u0436\u043d\u044b\u043c\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430\u043c\u0438, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044f\u0447\u0435\u0435\u043a \u043e\u0431\u044a\u0435\u0434\u0435\u043d\u0435\u043d\u044b \u0432\u043e\u0435\u0434\u0438\u043d\u043e:</p>\n<p><img alt=\"\u0421\u043b\u043e\u0436\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dcb5cc8d72feb6db9d04fa69679e0824205c7e80/646174612f524541444d452f636c657665725f7461626c652e706e67\"></p>\n<p>\u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0442\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b:</p>\n<p><img alt=\"\u041f\u0440\u043e\u0441\u0442\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97cb688e4cb6b9b9ffb634831993ae4651850a91/646174612f524541444d452f73696d706c655f7461626c652e706e67\"></p>\n<p>\u0415\u0441\u043b\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0435\u0442 \u043b\u0438\u0448\u044c \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u0436\u0435 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u044f\u0432\u043d\u044b\u0445 \u0433\u0440\u0430\u043d\u0438\u0446, \u0442\u043e, \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u043e\u043d\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442\n\u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u043d\u0430.</p>\n<p>\u0425\u043e\u0448\u0438\u043c\u0438\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0430\u0440\u043a\u0430\u0441 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432 \u0432\u0438\u0434\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u044f\u0447\u0435\u0435\u043a, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u0447\u0435\u0442\u044b\u0440\u044c\u043c\u044f \u0442\u043e\u0447\u0435\u043a\u0430\u043c\u0438\n(\u0443\u0433\u043b\u044b \u044f\u0447\u0435\u0439\u043a\u0438). \u042f\u0447\u0435\u0439\u043a\u0430 (Cell) \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043a\u043b\u0430\u0441\u0441:</p>\n<pre><code>class Cell:\n    def __init__(self, x_min=0, x_max=0, y_min=0, y_max=0, prob=0.0, text=''):\n        # \u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u044f\u0447\u0435\u0439\u043a\u0438 \u043d\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0435\n        self.x_min = x_min\n        self.x_max = x_max\n        self.y_min = y_min\n        self.y_max = y_max\n\n        # \u0412\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442 \u044f\u0447\u0435\u0439\u043a\u0438\n        self.prob = prob\n        # \u0422\u0435\u043a\u0441\u0442 \u0432\u043d\u0443\u0442\u0440\u0438 \u044f\u0447\u0435\u0439\u043a\u0438\n        self.text = text\n</code></pre>\n<p>\u0414\u043b\u044f \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0439 \u043c\u043e\u0436\u043d\u043e \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043a\u043e\u0434\u043e\u043c:</p>\n<pre><code>templator = TableRecognizer(\n    reader=ImageFromPDFReader(\n        PDFConverter(in_path=path + 'pdf/', out_path=path + 'pdf/images/', resolution=130)\n    ),\n    hough_transformer=SobelDirector(),\n    connected_components=ConnectedComponents(),\n    cross_detector=CrossDetector(max_steps=15, detected_steps=8, line_width=8),\n    ocr=TesseractWrapper(),\n    binarization=210\n)\ntable = []\nfor i in range(4):\n    table.append(templator.next_points())\n</code></pre>\n<h1>How to install without pip</h1>\n<pre><code>apt-get install tesseract-ocr\napt-get install tesseract-ocr-rus\napt-get install poppler-utils\npip install opencv-python=3.4.0.12 scikit-learn=0.19.1 numpy=1.14.0 scikit-image=0.13.1 pytesseract=0.2.0 scipy=1.0.0\npip install pdf2image=0.1.8 pillow=5.0.0 xlrd=1.1.0\n</code></pre>\n<h1>How to install WITH pip</h1>\n<pre><code>apt-get install tesseract-ocr\napt-get install tesseract-ocr-rus\napt-get install poppler-utils\npip install HoChiMinh\n</code></pre>\n<h2>\u0417\u0430\u043c\u0435\u0447\u0435\u043d\u0438\u0435</h2>\n<p>\u0415\u0441\u043b\u0438 \u0441\u0431\u043e\u0440\u043a\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u043e\u0448\u0438\u0431\u043a\u043e\u0439, \u0442\u043e, \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e, \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u0432\u0435\u0440\u0441\u0438\u044f\u043c\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0438 \u0412\u0430\u043c \u0441\u0442\u043e\u0438\u0442 \u0438\u0445 \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e\n\u043f\u043e\u043f\u0440\u0430\u0432\u0438\u0442\u044c.</p>\n<p>\u0415\u0441\u043b\u0438 \u0443 \u0412\u0430\u0441 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 openCV, \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u0443\u0447\u0438\u0442\u044c \u0437\u0430\u0433\u043e\u0442\u043e\u0432\u043a\u0443 \u0434\u043b\u044f \u0434\u043e\u043a\u0435\u0440\u0444\u0430\u0439\u043b\u0430, \u0433\u0434\u0435 \u043e\u043f\u0438\u0441\u0430\u043d \u0441\u043f\u043e\u0441\u043e\u0431 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438\n\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f openCV, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u0430\u043c\u043e\u0433\u043e openCV.</p>\n<h2>\u0421\u043e\u043f\u043e\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0443\u0442\u0438\u043b\u0438\u0442\u044b</h2>\n<p>\u0425\u043e\u0448\u0438\u043c\u0438\u043d \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0447\u0430\u0441\u0442\u0435\u0439 (\u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432), \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0435\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c.\n\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435, \u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0438\u0437 \u044d\u0442\u0438\u0445 \u0447\u0430\u0441\u0442\u0435\u0439, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 <strong>\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c</strong>.\n\u0415\u0441\u0442\u044c \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u043a \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0443, \u043d\u043e, \u043f\u0440\u0438\n\u044d\u0442\u043e\u043c \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0432\u0430\u0436\u043d\u044b\u043c\u0438 \u0447\u0430\u0441\u0442\u044f\u043c\u0438. \u042d\u0442\u043e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043a\u043b\u0430\u0441\u0441 ImagePDFReader, \u043a\u043e\u0442\u043e\u0440\u044b\u0439\n\u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0438\u0437 PDF. \u0415\u0433\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f PDFConverter.</p>\n<p>PDFConverter \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0435 \u0444\u0430\u0439\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043b\u0435\u0436\u0430\u0442 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438. ImagePDFReader\n\u0431\u0435\u0440\u0451\u0442 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0444\u0430\u0439\u043b\u0443 \u043e\u0442 PDFConverter.</p>\n<h2>\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c</h2>\n<p>\u041f\u0440\u0438\u043d\u0446\u0438\u043f \u0440\u0430\u0431\u043e\u0442\u044b \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0445\u0435\u043c\u044b:</p>\n<p><img alt=\"\u0411\u043b\u043e\u043a-\u0441\u0445\u0435\u043c\u0430\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdeb8fab9ed4db4702e0611089868d6d29a52e26/646174612f524541444d452f626c6f636b5f736368656d652e706e67\"></p>\n<ul>\n<li>\n<p>Reader. \u041f\u0440\u043e\u0447\u0442\u0435\u043d\u0438\u0435 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0439 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438 \u0438\u0437 \u043f\u0443\u043b\u0430 \u043f\u0440\u0438 \u043f\u043e\u043c\u043e\u0449\u0438 \u0440\u0438\u0434\u0435\u0440\u0430.</p>\n</li>\n<li>\n<p>Detector of Horisontal and vertical lines. \u041d\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u0432\u044b\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u044f\u0432\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0442\u044f\u0436\u0451\u043d\u043d\u044b\u0435 \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0438\n\u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043b\u0438\u043d\u0438\u0438.</p>\n</li>\n</ul>\n<p><img alt=\"\u0418\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6ea035fb479b51b44ce59808fe241773653f9e70/646174612f524541444d452f6574616c6f6e5f696d6167652e706e67\">\n<img alt=\"\u0412\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b3c070c58378253770307d78f6aa5ab824e840f/646174612f524541444d452f686f7269736f6e74616c5f656467652e706e67\">\n<img alt=\"\u0413\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ddd955dce6ec3aace93a5a1baee08f0ac8d09dc8/646174612f524541444d452f766572746963616c5f656467652e706e67\"></p>\n<p>\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043b\u0438\u043d\u0438\u0438 \u0437\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0435\u0451 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0430 (\u0434\u043b\u044f \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u044b\u0445 - $y$, \u0434\u043b\u044f \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0445 - $x$). \u0417\u0430\u0442\u0435\u043c,\n\u0441\u0442\u0440\u043e\u044f\u0442\u0441\u044f \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u0442\u043e\u0447\u0435\u043a $(x, y)$. \u0412\u0441\u0435 \u043e\u043d\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u0430\u043c\u0438 \u0434\u043b\u044f \u0443\u0433\u043b\u043e\u0432 \u044f\u0447\u0435\u0435\u043a \u0442\u0430\u0431\u043b\u0438\u0446\u044b.</p>\n<p><img alt=\"\u0422\u043e\u0447\u043a\u0438-\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7932bb354e8a16628a558b61aa23093db1c9b35e/646174612f524541444d452f64657465637465645f706f696e74732e706e67\"></p>\n<ul>\n<li>\n<p>Detector the largest connected components. \u0412\u044b\u0434\u0435\u043b\u044f\u0435\u043c \u0441\u0430\u043c\u0443\u044e \u0431\u043e\u043b\u044c\u0448\u0443\u044e (\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u0430\n\u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f) \u0441\u0432\u044f\u0437\u043d\u0443\u044e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443. \u0412\u0441\u0435 \u0442\u043e\u0447\u043a\u0438-\u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u044b, \u043f\u0440\u0435\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0449\u0438\u0435 \u0435\u0439, \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c, \u043f\u0440\u043e \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0431\u044b\u0432\u0430\u0435\u043c.</p>\n</li>\n<li>\n<p>Detect cross of table. \u0427\u0430\u0441\u0442\u044c \u0442\u043e\u0447\u0435\u043a, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0445 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0438\u0437\u043b\u0438\u0448\u043d\u0438\u043c\u0438. \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0437 \u043d\u0438\u0445 \u043b\u0435\u0436\u0430\u0442 \u043d\u0435 \u043d\u0430 \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0438\n\u0441\u0442\u043e\u0440\u043e\u043d, \u0430 \u0432 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u041d\u0430 \u0432\u0441\u0435 \u043b\u0438\u0448\u043d\u0438\u0435 \u0442\u043e\u0447\u043a\u0438 \u0443\u0434\u0430\u043b\u044f\u044e\u0442\u0441\u044f.</p>\n</li>\n</ul>\n<p><img alt=\"\u041e\u0442\u043e\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/602f29b5238c8749ea9fb28bb5b222cc0120534b/646174612f524541444d452f636f6e6e65637465645f636f6d706f6e656e74735f706f696e74732e706e67\"></p>\n<ul>\n<li>\n<p>Uniques points. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0434\u0451\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u0430 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0448\u0430\u0433\u0435, \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u043b\u0438\u0448\u044c \u0442\u0435 \u0442\u043e\u0447\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0435\u0436\u0430\u0442 \u0432 \u0443\u0437\u043b\u0430\u0445\n\u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0432 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0443\u0437\u043b\u0430\u0445 \u043b\u0435\u0436\u0438\u0442 \u0431\u043e\u043b\u0435\u0435 1 \u0442\u043e\u0447\u043a\u0438. \u0414\u0430\u043d\u043d\u044b\u0439 \u044d\u0442\u0430\u043f \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c\n\u0443\u0437\u043b\u0435.</p>\n</li>\n<li>\n<p>Building table. \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u0412 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u0447\u0430\u0441\u0442\u044c \u0443\u0437\u043b\u043e\u0432\u044b\u0445 \u0442\u043e\u0447\u0435\u043a $(x, y)$ \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\n\u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u043d\u043e, \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443, \u043a\u0430\u043a \u0434\u0435\u043a\u0430\u0440\u0442\u043e\u0432\u043e \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0430 ${x} \\times {y}$. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0435\u0441\u043b\u0438 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0447\u0435\u0439\u043a\u0438\n\u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0431\u044b\u043b\u0438 \u043e\u0431\u044a\u0435\u0434\u0435\u043d\u0435\u043d\u044b, \u0442\u043e \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442 \u043e\u0448\u0438\u0431\u043e\u0447\u043d\u043e\u0435 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u043e\u0432\u0430\u043d\u0438\u0435.</p>\n</li>\n</ul>\n<p><img alt=\"\u0422\u0430\u0431\u043b\u0438\u0446\u0430\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/959af8fe6eb9bd61e87885970cbb32b003ab9805/646174612f524541444d452f7461626c652e706e67\"></p>\n<ul>\n<li>OCR. \u0420\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442 \u043a\u0430\u0436\u0434\u0430\u044f, \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e \u0432\u0437\u044f\u0442\u0430\u044f \u044f\u0447\u0435\u0439\u043a\u0430. \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u043e\u0432\u0430\u043d\u0438\u0435.</li>\n</ul>\n<h2>\u0421\u0441\u044b\u043b\u043a\u0438</h2>\n<p>[1] <a href=\"http://www.machinelearning.ru/wiki/index.php?title=%D0%9B%D0%BE%D0%B3%D0%B8%D1%81%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D1%8F\" rel=\"nofollow\">http://www.machinelearning.ru/wiki/index.php?title=\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f_\u0444\u0443\u043d\u043a\u0446\u0438\u044f</a></p>\n<p>[2] <a href=\"http://www.sibran.ru/upload/iblock/0e1/0e15d76aff003e3879db51f21ae7f694.pdf\" rel=\"nofollow\">http://www.sibran.ru/upload/iblock/0e1/0e15d76aff003e3879db51f21ae7f694.pdf</a></p>\n<p>[3] <a href=\"https://www.osapublishing.org/DirectPDFAccess/0CF96649-F614-A5CD-5F118AF53F660BAB_383046/copp-2-1-69.pdf?da=1&amp;id=383046&amp;seq=0&amp;mobile=no\" rel=\"nofollow\">https://www.osapublishing.org/DirectPDFAccess/0CF96649-F614-A5CD-5F118AF53F660BAB_383046/copp-2-1-69.pdf?da=1&amp;id=383046&amp;seq=0&amp;mobile=no</a></p>\n<p>[4] <a href=\"https://www.hindawi.com/journals/cmmm/2015/607407/\" rel=\"nofollow\">https://www.hindawi.com/journals/cmmm/2015/607407/</a></p>\n<p>[5] <a href=\"http://research.ijcaonline.org/volume55/number4/pxc3882634.pdf\" rel=\"nofollow\">http://research.ijcaonline.org/volume55/number4/pxc3882634.pdf</a></p>\n<p>[6] <a href=\"http://article.sapub.org/pdf/10.5923.j.ajis.20120206.01.pdf\" rel=\"nofollow\">http://article.sapub.org/pdf/10.5923.j.ajis.20120206.01.pdf</a></p>\n<p>[7] <a href=\"https://pdfs.semanticscholar.org/f07f/ec524e5a6dd08163e9f56599ea712cbd0a31.pdf\" rel=\"nofollow\">https://pdfs.semanticscholar.org/f07f/ec524e5a6dd08163e9f56599ea712cbd0a31.pdf</a></p>\n<p>[8] <a href=\"https://arxiv.org/abs/1505.04597\" rel=\"nofollow\">https://arxiv.org/abs/1505.04597</a></p>\n<p>[9] <a href=\"https://tyvik.ru/posts/pillow-almighty/\" rel=\"nofollow\">https://tyvik.ru/posts/pillow-almighty/</a></p>\n<p>[10] <a href=\"https://www.youtube.com/watch?v=jzZ3WVhgi5w\" rel=\"nofollow\">https://www.youtube.com/watch?v=jzZ3WVhgi5w</a></p>\n<p>[11] <a href=\"http://lab.alexkuk.ru/ocr/\" rel=\"nofollow\">http://lab.alexkuk.ru/ocr/</a></p>\n<p>[12] <a href=\"https://github.com/ulikoehler/OTR\" rel=\"nofollow\">https://github.com/ulikoehler/OTR</a></p>\n<p>[13] <a href=\"https://github.com/inuyasha2012/answer-sheet-scan\" rel=\"nofollow\">https://github.com/inuyasha2012/answer-sheet-scan</a></p>\n<p>[14] <a href=\"https://github.com/pavitrakumar78/Python-Custom-Digit-Recognition\" rel=\"nofollow\">https://github.com/pavitrakumar78/Python-Custom-Digit-Recognition</a></p>\n<p>[15] <a href=\"https://github.com/enigma-ml/textify\" rel=\"nofollow\">https://github.com/enigma-ml/textify</a></p>\n<p>[17] <a href=\"https://www.ph4.ru/fonts_fonts.php?fn=all&amp;l=rus&amp;id=2\" rel=\"nofollow\">https://www.ph4.ru/fonts_fonts.php?fn=all&amp;l=rus&amp;id=2</a></p>\n<p>[18] <a href=\"https://arxiv.org/pdf/1706.07422.pdf\" rel=\"nofollow\">https://arxiv.org/pdf/1706.07422.pdf</a></p>\n<p>[19] <a href=\"https://github.com/Belval/pdf2image\" rel=\"nofollow\">https://github.com/Belval/pdf2image</a></p>\n<p>[20] <a href=\"https://habrahabr.ru/post/351266/\" rel=\"nofollow\">https://habrahabr.ru/post/351266/</a></p>\n<p>[21] <a href=\"https://habrahabr.ru/post/181580/\" rel=\"nofollow\">https://habrahabr.ru/post/181580/</a></p>\n<h1>\u0414\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u044b</h1>\n<p>[1] <a href=\"http://tabula.technology/\" rel=\"nofollow\">http://tabula.technology/</a></p>\n<p>[2] <a href=\"https://github.com/mpasternak/pdf-table-extractor\" rel=\"nofollow\">https://github.com/mpasternak/pdf-table-extractor</a></p>\n<p>[3] <a href=\"https://github.com/DustBytes/PdfTableExtraction\" rel=\"nofollow\">https://github.com/DustBytes/PdfTableExtraction</a></p>\n<p>[4] <a href=\"https://github.com/ferhatelmas/docker-pdf-table-extract\" rel=\"nofollow\">https://github.com/ferhatelmas/docker-pdf-table-extract</a></p>\n<p>[5] <a href=\"https://github.com/jsvine/pdfplumber\" rel=\"nofollow\">https://github.com/jsvine/pdfplumber</a></p>\n<p>[6] <a href=\"https://github.com/tfmorris/pdf2table\" rel=\"nofollow\">https://github.com/tfmorris/pdf2table</a></p>\n<p>[7] <a href=\"https://github.com/ashima/pdf-table-extract\" rel=\"nofollow\">https://github.com/ashima/pdf-table-extract</a></p>\n<p>[8] <a href=\"https://github.com/BIDS/agri_tables\" rel=\"nofollow\">https://github.com/BIDS/agri_tables</a></p>\n<p>[9] <a href=\"https://github.com/BIDS/agri_tables\" rel=\"nofollow\">https://github.com/BIDS/agri_tables</a></p>\n<p>[10] <a href=\"https://github.com/nsi-iff/pypdf2table\" rel=\"nofollow\">https://github.com/nsi-iff/pypdf2table</a></p>\n<p>[11] <a href=\"https://github.com/mgedmin/pdf2html\" rel=\"nofollow\">https://github.com/mgedmin/pdf2html</a></p>\n<p>[12] <a href=\"https://github.com/maxbelyanin/pdf-tbl-extract\" rel=\"nofollow\">https://github.com/maxbelyanin/pdf-tbl-extract</a></p>\n\n          </div>"}, "last_serial": 6028750, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8b44a8017ee443a6ece4e837b14c36a1", "sha256": "e439551f759f8657a3c8a9f15157a0683bdd194a687f23df1f811b00856fa878"}, "downloads": -1, "filename": "HoChiMinh-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8b44a8017ee443a6ece4e837b14c36a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29381, "upload_time": "2019-10-25T10:42:19", "upload_time_iso_8601": "2019-10-25T10:42:19.961329Z", "url": "https://files.pythonhosted.org/packages/ed/30/4b249c1888e39f42dd7af8251897b497abef91f4266df92dd90bf72f4c58/HoChiMinh-1.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b44a8017ee443a6ece4e837b14c36a1", "sha256": "e439551f759f8657a3c8a9f15157a0683bdd194a687f23df1f811b00856fa878"}, "downloads": -1, "filename": "HoChiMinh-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8b44a8017ee443a6ece4e837b14c36a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29381, "upload_time": "2019-10-25T10:42:19", "upload_time_iso_8601": "2019-10-25T10:42:19.961329Z", "url": "https://files.pythonhosted.org/packages/ed/30/4b249c1888e39f42dd7af8251897b497abef91f4266df92dd90bf72f4c58/HoChiMinh-1.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:52 2020"}