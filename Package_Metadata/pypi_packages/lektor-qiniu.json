{"info": {"author": "Aaron Peng", "author_email": "arstman@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Plugins", "Environment :: Web Environment", "Framework :: Lektor", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: Site Management", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# lektor-qiniu  Lektor CMS \u4e03\u725b\u4e91\u63d2\u4ef6\n\nlektor-qiniu is a plugin to deploy your lektor site to a qiniu cloud bucket.\n\n[\u7b80\u4f53\u4e2d\u6587\u8bf4\u660e](https://github.com/Arstman/lektor-qiniu/blob/master/README-CN.md)\n\n## Main Features\n\n1. deploy your site to your qiniu bucket\n2. deploy your site to a folder in a qiniu bucket\n3. exclude files and directories from deployment.\n4. refresh your qiniu cdn.\n\n## Before Installation\n\nYou may need a bucket from qiniu cloud to deploy your lektor project. Qiniu Cloud provides 10GB storage and cdn for free, that should be enough for most small projects.\n\nGo to [`QINIU Cloud`](https://portal.qiniu.com/signup?code=1hltq2pevt7bm) for more details.\n\n **This plugin does not do anything to help you create or configure qiniu account or bucket.**  You will have to make it done by yourself. \n\n## Installation\n\nThere ways to install plugin in Lektor, the easy ways is run below command in your project.\n\n```console\nlektor plugins add lektor-qiniu\n```\n\nPress Enter and lektor will automatically download and install this plugin for you.\n\n## Usage\n\nAfter Installation, open your lektorproject file, first it should have a section like this:\n\n```ini\n[packages]\nlektor-qiniu= 0.1.3\n```\n\nthen below this section, you need add your bucket and folder(optional) as a target of a deploy server, like this:\n\n```ini\n[servers.qiniu]\nname = qiniu\nenabled = yes\ntarget = qiniu://<YOUR-BUCKET>\n```\n\nor if you want deploy your site to a folder in a bucket, mostly for backups, you can add server section as below:\n\n```ini\n[servers.qiniu]\nname = qiniu\nenabled = yes\ntarget = qiniu://<YOUR-BUCKET>/<NAME-OF-FOLDER>\n```\n\nfor example, if you want to deploy your site to a bucket name \"abcde\", folder \"fjhi\", you will need to add a server section as below:\n\n```ini\n[servers.qiniu]\nname = qiniu\nenabled = yes\ntarget = qiniu://abcde/fjhi\n```\n\nafter this you should see a server shows when you push the deploy button in your Lektor Admin Dashboard.\n\nbut still you will need just 5 minutes to configure this plugin to make it works.\n\n## Configuration\n\nAfter setup your target server, you need to configure the plugin to make it works.\n\nGo to your project's configs folder, which should be in root directory of your project. this folder is where Lektor keep the configuration files of all plugins. If you can't find any **configs** folder in your project's root directory, you need create it.\n\nIn configs folder, create a configuration file exactly named **qiniu.ini**.\n\n#### Attention: DO NOT name the configuration file with other names, otherwise this plugin will not work properly.\n\nIn this configuration file, you will need add few more sections, you can copy a sample configuration ini file from the sample_config folder, it looks like this:\n\n```ini\n[auth]\nAccess_Key = replace_with_your_own_AK\nSecret_Key = replace_with_your_won_SK\n\n[cdn]\nrefresh_enable =  yes\nrefresh_url = https://www.your-own-site.com/\n\n[exclusions]\ndirs = .lektor\nfiles =  \n```\n\n#### Credentials\n\nYou need to get your own Access Key and Secret Key from Qiniu Admin Dashboard, and put them in the **auth**  section.\n\n#### Refresh cdn cache\n\nmostly, Qiniu provides a free(with limitations) cdn for your bucket site, after you update your bucket file, the cdn wouldn't update automatically, therefore you will need to refresh your bucket site's directory (via your site's root url), for more details you can check Qiniu's documentation.\n\nfortunately, you don't need to do refresh manually, you can just set the **refresh_enable** to **yes** in your **cdn** section, and change the refresh_url to your site's root url. this plugin will automatically refresh your cdn site after all files are uploaded.\n\n#### exclusions\n\nAnother function this plugin provides is exclude folders or files you want to upload during deployment. \n\nTo exclude files or folders, just put the name of the folders or files in the **exclusions** section of configuration file, separated each one with commas. \n\n```ini\n[exclusions]\ndirs = .lektor, dir1, dir2\nfiles =  file1, file2,file3\n```\n\nOne special folder here is **.lektor**, which Lektor officially suggests that this folder should be exclude during deployment, therefore you should keep at least this one, unless you have other needs for this folder.\n\n### About Lektor CMS\n\nLektor CMS is one of my favorite static website generators, I have use this in production for several projects, you can see some of my sites as below:\n\n[`\u65b0\u98ce\u7f51`](https://www.xinfengtv.com) \n[`Intersonic Group`](https://www.intersonicgroup.com) \n[`F&S Always Auto Parts`](https://www.fnsalways.com) \n[`THEORING Seal Rings`](https://theoring.com) \n[`THORING \u5bc6\u5c01\u5708`](https://www.theoring.com) \n\nLooks pretty good, right? Thanks for lektor, you can try this best Static CMS as well via [`Lektor CMS Official Site`](https://www.getlektor.com) \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Arstman/lektor-qiniu", "keywords": "Lektor plugin for qiniu", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lektor-qiniu", "package_url": "https://pypi.org/project/lektor-qiniu/", "platform": "any", "project_url": "https://pypi.org/project/lektor-qiniu/", "project_urls": {"Homepage": "https://github.com/Arstman/lektor-qiniu"}, "release_url": "https://pypi.org/project/lektor-qiniu/0.1.3/", "requires_dist": ["Lektor", "qiniu", "inifile"], "requires_python": "", "summary": "A plugin for lektor to deploy to qiniu cloud, Use qiniu://<bucket>[/name_of_dir] to deploy to a bucket", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>lektor-qiniu  Lektor CMS \u4e03\u725b\u4e91\u63d2\u4ef6</h1>\n<p>lektor-qiniu is a plugin to deploy your lektor site to a qiniu cloud bucket.</p>\n<p><a href=\"https://github.com/Arstman/lektor-qiniu/blob/master/README-CN.md\" rel=\"nofollow\">\u7b80\u4f53\u4e2d\u6587\u8bf4\u660e</a></p>\n<h2>Main Features</h2>\n<ol>\n<li>deploy your site to your qiniu bucket</li>\n<li>deploy your site to a folder in a qiniu bucket</li>\n<li>exclude files and directories from deployment.</li>\n<li>refresh your qiniu cdn.</li>\n</ol>\n<h2>Before Installation</h2>\n<p>You may need a bucket from qiniu cloud to deploy your lektor project. Qiniu Cloud provides 10GB storage and cdn for free, that should be enough for most small projects.</p>\n<p>Go to <a href=\"https://portal.qiniu.com/signup?code=1hltq2pevt7bm\" rel=\"nofollow\"><code>QINIU Cloud</code></a> for more details.</p>\n<p><strong>This plugin does not do anything to help you create or configure qiniu account or bucket.</strong>  You will have to make it done by yourself.</p>\n<h2>Installation</h2>\n<p>There ways to install plugin in Lektor, the easy ways is run below command in your project.</p>\n<pre><span class=\"go\">lektor plugins add lektor-qiniu</span>\n</pre>\n<p>Press Enter and lektor will automatically download and install this plugin for you.</p>\n<h2>Usage</h2>\n<p>After Installation, open your lektorproject file, first it should have a section like this:</p>\n<pre><span class=\"k\">[packages]</span>\n<span class=\"na\">lektor-qiniu</span><span class=\"o\">=</span> <span class=\"s\">0.1.3</span>\n</pre>\n<p>then below this section, you need add your bucket and folder(optional) as a target of a deploy server, like this:</p>\n<pre><span class=\"k\">[servers.qiniu]</span>\n<span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"s\">qiniu</span>\n<span class=\"na\">enabled</span> <span class=\"o\">=</span> <span class=\"s\">yes</span>\n<span class=\"na\">target</span> <span class=\"o\">=</span> <span class=\"s\">qiniu://&lt;YOUR-BUCKET&gt;</span>\n</pre>\n<p>or if you want deploy your site to a folder in a bucket, mostly for backups, you can add server section as below:</p>\n<pre><span class=\"k\">[servers.qiniu]</span>\n<span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"s\">qiniu</span>\n<span class=\"na\">enabled</span> <span class=\"o\">=</span> <span class=\"s\">yes</span>\n<span class=\"na\">target</span> <span class=\"o\">=</span> <span class=\"s\">qiniu://&lt;YOUR-BUCKET&gt;/&lt;NAME-OF-FOLDER&gt;</span>\n</pre>\n<p>for example, if you want to deploy your site to a bucket name \"abcde\", folder \"fjhi\", you will need to add a server section as below:</p>\n<pre><span class=\"k\">[servers.qiniu]</span>\n<span class=\"na\">name</span> <span class=\"o\">=</span> <span class=\"s\">qiniu</span>\n<span class=\"na\">enabled</span> <span class=\"o\">=</span> <span class=\"s\">yes</span>\n<span class=\"na\">target</span> <span class=\"o\">=</span> <span class=\"s\">qiniu://abcde/fjhi</span>\n</pre>\n<p>after this you should see a server shows when you push the deploy button in your Lektor Admin Dashboard.</p>\n<p>but still you will need just 5 minutes to configure this plugin to make it works.</p>\n<h2>Configuration</h2>\n<p>After setup your target server, you need to configure the plugin to make it works.</p>\n<p>Go to your project's configs folder, which should be in root directory of your project. this folder is where Lektor keep the configuration files of all plugins. If you can't find any <strong>configs</strong> folder in your project's root directory, you need create it.</p>\n<p>In configs folder, create a configuration file exactly named <strong>qiniu.ini</strong>.</p>\n<h4>Attention: DO NOT name the configuration file with other names, otherwise this plugin will not work properly.</h4>\n<p>In this configuration file, you will need add few more sections, you can copy a sample configuration ini file from the sample_config folder, it looks like this:</p>\n<pre><span class=\"k\">[auth]</span>\n<span class=\"na\">Access_Key</span> <span class=\"o\">=</span> <span class=\"s\">replace_with_your_own_AK</span>\n<span class=\"na\">Secret_Key</span> <span class=\"o\">=</span> <span class=\"s\">replace_with_your_won_SK</span>\n\n<span class=\"k\">[cdn]</span>\n<span class=\"na\">refresh_enable</span> <span class=\"o\">=</span>  <span class=\"s\">yes</span>\n<span class=\"na\">refresh_url</span> <span class=\"o\">=</span> <span class=\"s\">https://www.your-own-site.com/</span>\n\n<span class=\"k\">[exclusions]</span>\n<span class=\"na\">dirs</span> <span class=\"o\">=</span> <span class=\"s\">.lektor</span>\n<span class=\"na\">files</span> <span class=\"o\">=</span>  \n</pre>\n<h4>Credentials</h4>\n<p>You need to get your own Access Key and Secret Key from Qiniu Admin Dashboard, and put them in the <strong>auth</strong>  section.</p>\n<h4>Refresh cdn cache</h4>\n<p>mostly, Qiniu provides a free(with limitations) cdn for your bucket site, after you update your bucket file, the cdn wouldn't update automatically, therefore you will need to refresh your bucket site's directory (via your site's root url), for more details you can check Qiniu's documentation.</p>\n<p>fortunately, you don't need to do refresh manually, you can just set the <strong>refresh_enable</strong> to <strong>yes</strong> in your <strong>cdn</strong> section, and change the refresh_url to your site's root url. this plugin will automatically refresh your cdn site after all files are uploaded.</p>\n<h4>exclusions</h4>\n<p>Another function this plugin provides is exclude folders or files you want to upload during deployment.</p>\n<p>To exclude files or folders, just put the name of the folders or files in the <strong>exclusions</strong> section of configuration file, separated each one with commas.</p>\n<pre><span class=\"k\">[exclusions]</span>\n<span class=\"na\">dirs</span> <span class=\"o\">=</span> <span class=\"s\">.lektor, dir1, dir2</span>\n<span class=\"na\">files</span> <span class=\"o\">=</span>  <span class=\"s\">file1, file2,file3</span>\n</pre>\n<p>One special folder here is <strong>.lektor</strong>, which Lektor officially suggests that this folder should be exclude during deployment, therefore you should keep at least this one, unless you have other needs for this folder.</p>\n<h3>About Lektor CMS</h3>\n<p>Lektor CMS is one of my favorite static website generators, I have use this in production for several projects, you can see some of my sites as below:</p>\n<p><a href=\"https://www.xinfengtv.com\" rel=\"nofollow\"><code>\u65b0\u98ce\u7f51</code></a>\n<a href=\"https://www.intersonicgroup.com\" rel=\"nofollow\"><code>Intersonic Group</code></a>\n<a href=\"https://www.fnsalways.com\" rel=\"nofollow\"><code>F&amp;S Always Auto Parts</code></a>\n<a href=\"https://theoring.com\" rel=\"nofollow\"><code>THEORING Seal Rings</code></a>\n<a href=\"https://www.theoring.com\" rel=\"nofollow\"><code>THORING \u5bc6\u5c01\u5708</code></a></p>\n<p>Looks pretty good, right? Thanks for lektor, you can try this best Static CMS as well via <a href=\"https://www.getlektor.com\" rel=\"nofollow\"><code>Lektor CMS Official Site</code></a></p>\n\n          </div>"}, "last_serial": 5784158, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "984e5249a2586765d1759940759e2de2", "sha256": "a68d59bc186fb29cfd5facc5c7d3c5f71c21f6a336625d3dd3c9bf83724482a6"}, "downloads": -1, "filename": "lektor_qiniu-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "984e5249a2586765d1759940759e2de2", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 3201, "upload_time": "2019-09-04T14:03:53", "upload_time_iso_8601": "2019-09-04T14:03:53.082782Z", "url": "https://files.pythonhosted.org/packages/33/b7/024669b50eece1076b9e8a93b2b3890dca7cbd28ecff4c938b83b567d992/lektor_qiniu-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d39d5f090e3763f92540acd25b3cfb5a", "sha256": "45ef742c031a542dc97b8593ea30d2a0602b5da8f3335f9bba495716d26f34e8"}, "downloads": -1, "filename": "lektor-qiniu-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d39d5f090e3763f92540acd25b3cfb5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2817, "upload_time": "2019-09-04T14:03:49", "upload_time_iso_8601": "2019-09-04T14:03:49.277019Z", "url": "https://files.pythonhosted.org/packages/69/3b/4e258ddf7111d18dacb82d346f4bd5f12a688645d7130271e2881e9a5850/lektor-qiniu-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "a1fa10525729e6cb161bfac357824e3e", "sha256": "60bbe6b580a8b8b5791b154374a4882454f692aaf2c4fa54ca4e907348d7822e"}, "downloads": -1, "filename": "lektor_qiniu-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a1fa10525729e6cb161bfac357824e3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4504, "upload_time": "2019-09-05T00:34:23", "upload_time_iso_8601": "2019-09-05T00:34:23.104273Z", "url": "https://files.pythonhosted.org/packages/57/34/0ec1975f3cec323d46428041d3b7cafd4c17b3cb9d43a5b69a9f73d3ceda/lektor_qiniu-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "893a6b91f39c014338a568ed2096c1a7", "sha256": "edfe3d5abbb67cc90da527ae42fa58103eb006e931b0b2f1aad180ebac5eb8f6"}, "downloads": -1, "filename": "lektor-qiniu-0.1.2.tar.gz", "has_sig": false, "md5_digest": "893a6b91f39c014338a568ed2096c1a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4379, "upload_time": "2019-09-05T00:34:25", "upload_time_iso_8601": "2019-09-05T00:34:25.899427Z", "url": "https://files.pythonhosted.org/packages/b6/80/3c03aaacb4653d76c8aabfa6d40568b788e063f9f94cd5ff0d86ad230c3f/lektor-qiniu-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "0c3bfff6d1edc3f175c62e150b714542", "sha256": "986827cb1c1d454ffa80e4890c154e89909a6f2c9f898aafb323a38257f602dd"}, "downloads": -1, "filename": "lektor_qiniu-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0c3bfff6d1edc3f175c62e150b714542", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5077, "upload_time": "2019-09-05T01:51:44", "upload_time_iso_8601": "2019-09-05T01:51:44.993787Z", "url": "https://files.pythonhosted.org/packages/33/d5/f3d1839728671ba9816ce5a2aaaaeec928d7763be8b97181fbd7da9a02f3/lektor_qiniu-0.1.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c3bfff6d1edc3f175c62e150b714542", "sha256": "986827cb1c1d454ffa80e4890c154e89909a6f2c9f898aafb323a38257f602dd"}, "downloads": -1, "filename": "lektor_qiniu-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "0c3bfff6d1edc3f175c62e150b714542", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5077, "upload_time": "2019-09-05T01:51:44", "upload_time_iso_8601": "2019-09-05T01:51:44.993787Z", "url": "https://files.pythonhosted.org/packages/33/d5/f3d1839728671ba9816ce5a2aaaaeec928d7763be8b97181fbd7da9a02f3/lektor_qiniu-0.1.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:47:06 2020"}