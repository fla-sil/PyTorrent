{"info": {"author": "Alex Gaynor", "author_email": "alex.gaynor@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "Django Filter EX\n================\n\nDjango-filter is a reusable Django application allowing users to declaratively\nadd dynamic ``QuerySet`` filtering from URL parameters.\n\nFull documentation on `read the docs`_.\n\n.. image:: https://travis-ci.org/carltongibson/django-filter.svg?branch=master\n    :target: https://travis-ci.org/carltongibson/django-filter\n\n.. image:: https://codecov.io/gh/carltongibson/django-filter/branch/develop/graph/badge.svg\n    :target: https://codecov.io/gh/carltongibson/django-filter\n\n.. image:: https://badge.fury.io/py/django-filter.svg\n    :target: http://badge.fury.io/py/django-filter\n\n\nRequirements\n------------\n\n* **Python**: 2.7, 3.6\n* **Django**: 1.11\n* **DRF**: 3.7, 3.8\n\nDjango filter EX is a fork from Django filter 1.1.0 witch contains a small patch to improve performance of \nthe default filterset on chained filters. It passes all the tests and works for my use-case.\n\n\nInstallation\n------------\n\nInstall using pip:\n\n.. code-block:: sh\n\n    pip install django-filter\n\nThen add ``'django_filters'`` to your ``INSTALLED_APPS``.\n\n.. code-block:: python\n\n    INSTALLED_APPS = [\n        ...\n        'django_filters',\n    ]\n\n\nUsage\n-----\n\nDjango-filter can be used for generating interfaces similar to the Django\nadmin's ``list_filter`` interface.  It has an API very similar to Django's\n``ModelForms``.  For example, if you had a Product model you could have a\nfilterset for it with the code:\n\n.. code-block:: python\n\n    import django_filters\n\n    class ProductFilter(django_filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ['name', 'price', 'manufacturer']\n\n\nAnd then in your view you could do:\n\n.. code-block:: python\n\n    def product_list(request):\n        filter = ProductFilter(request.GET, queryset=Product.objects.all())\n        return render(request, 'my_app/template.html', {'filter': filter})\n\n\nUsage with Django REST Framework\n--------------------------------\n\nDjango-filter provides a custom ``FilterSet`` and filter backend for use with\nDjango REST Framework.\n\nTo use this adjust your import to use\n``django_filters.rest_framework.FilterSet``.\n\n.. code-block:: python\n\n    from django_filters import rest_framework as filters\n\n    class ProductFilter(filters.FilterSet):\n        class Meta:\n            model = Product\n            fields = ('category', 'in_stock')\n\n\nFor more details see the `DRF integration docs`_.\n\n\nSupport\n-------\n\nIf you have questions about usage or development you can join the\n`mailing list`_.\n\n.. _`read the docs`: https://django-filter.readthedocs.io/en/develop/\n.. _`mailing list`: http://groups.google.com/group/django-filter\n.. _`DRF integration docs`: https://django-filter.readthedocs.io/en/develop/guide/rest_framework.html\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tikal.tech/django-filter/tree/py2-compat", "keywords": "", "license": "BSD", "maintainer": "Tikal Tech", "maintainer_email": "bruno@tikal.tech", "name": "django-filter-ex", "package_url": "https://pypi.org/project/django-filter-ex/", "platform": "", "project_url": "https://pypi.org/project/django-filter-ex/", "project_urls": {"Homepage": "https://github.com/tikal.tech/django-filter/tree/py2-compat"}, "release_url": "https://pypi.org/project/django-filter-ex/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Django-filter is a reusable Django application for allowing users to filter querysets dynamically.", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django-filter is a reusable Django application allowing users to declaratively\nadd dynamic <tt>QuerySet</tt> filtering from URL parameters.</p>\n<p>Full documentation on <a href=\"https://django-filter.readthedocs.io/en/develop/\" rel=\"nofollow\">read the docs</a>.</p>\n<a href=\"https://travis-ci.org/carltongibson/django-filter\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/carltongibson/django-filter.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7c8b08492a241bea84d44ca26ff20298b4f91e3/68747470733a2f2f7472617669732d63692e6f72672f6361726c746f6e676962736f6e2f646a616e676f2d66696c7465722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/carltongibson/django-filter\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/carltongibson/django-filter/branch/develop/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c92c9d0d87536842b26929530d7c366f29a08c3d/68747470733a2f2f636f6465636f762e696f2f67682f6361726c746f6e676962736f6e2f646a616e676f2d66696c7465722f6272616e63682f646576656c6f702f67726170682f62616467652e737667\"></a>\n<a href=\"http://badge.fury.io/py/django-filter\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-filter.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91a84c2be299fd8362045b2147078897d29bafd8/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d66696c7465722e737667\"></a>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><strong>Python</strong>: 2.7, 3.6</li>\n<li><strong>Django</strong>: 1.11</li>\n<li><strong>DRF</strong>: 3.7, 3.8</li>\n</ul>\n<p>Django filter EX is a fork from Django filter 1.1.0 witch contains a small patch to improve performance of\nthe default filterset on chained filters. It passes all the tests and works for my use-case.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<pre>pip install django-filter\n</pre>\n<p>Then add <tt>'django_filters'</tt> to your <tt>INSTALLED_APPS</tt>.</p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_filters'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Django-filter can be used for generating interfaces similar to the Django\nadmin\u2019s <tt>list_filter</tt> interface.  It has an API very similar to Django\u2019s\n<tt>ModelForms</tt>.  For example, if you had a Product model you could have a\nfilterset for it with the code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">django_filters</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ProductFilter</span><span class=\"p\">(</span><span class=\"n\">django_filters</span><span class=\"o\">.</span><span class=\"n\">FilterSet</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Product</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'price'</span><span class=\"p\">,</span> <span class=\"s1\">'manufacturer'</span><span class=\"p\">]</span>\n</pre>\n<p>And then in your view you could do:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">product_list</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"nb\">filter</span> <span class=\"o\">=</span> <span class=\"n\">ProductFilter</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">GET</span><span class=\"p\">,</span> <span class=\"n\">queryset</span><span class=\"o\">=</span><span class=\"n\">Product</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">())</span>\n    <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'my_app/template.html'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'filter'</span><span class=\"p\">:</span> <span class=\"nb\">filter</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"usage-with-django-rest-framework\">\n<h2>Usage with Django REST Framework</h2>\n<p>Django-filter provides a custom <tt>FilterSet</tt> and filter backend for use with\nDjango REST Framework.</p>\n<p>To use this adjust your import to use\n<tt>django_filters.rest_framework.FilterSet</tt>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_filters</span> <span class=\"kn\">import</span> <span class=\"n\">rest_framework</span> <span class=\"k\">as</span> <span class=\"n\">filters</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ProductFilter</span><span class=\"p\">(</span><span class=\"n\">filters</span><span class=\"o\">.</span><span class=\"n\">FilterSet</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Product</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'category'</span><span class=\"p\">,</span> <span class=\"s1\">'in_stock'</span><span class=\"p\">)</span>\n</pre>\n<p>For more details see the <a href=\"https://django-filter.readthedocs.io/en/develop/guide/rest_framework.html\" rel=\"nofollow\">DRF integration docs</a>.</p>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you have questions about usage or development you can join the\n<a href=\"http://groups.google.com/group/django-filter\" rel=\"nofollow\">mailing list</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4298432, "releases": {"1.2.0": [{"comment_text": "", "digests": {"md5": "47682e40ad1586a92de3f548af47676b", "sha256": "0600025783c4ae0d2d40d641253527378c09a54627bb839a5684d05fbe44222d"}, "downloads": -1, "filename": "django_filter_ex-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "47682e40ad1586a92de3f548af47676b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 43952, "upload_time": "2018-09-22T00:11:14", "upload_time_iso_8601": "2018-09-22T00:11:14.144294Z", "url": "https://files.pythonhosted.org/packages/a2/a7/fed89619ba3f6fc040d83286eff4c998fad3d963f2e2a1e335c82b4090fb/django_filter_ex-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2da787d22ef487552e4f20e33315708", "sha256": "6e609ec5ac145f2ed6687921840cb65c34d1016e7adf5d2c7e17ec758d50cff6"}, "downloads": -1, "filename": "django-filter-ex-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f2da787d22ef487552e4f20e33315708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110855, "upload_time": "2018-09-22T00:11:16", "upload_time_iso_8601": "2018-09-22T00:11:16.141455Z", "url": "https://files.pythonhosted.org/packages/7c/d1/52a84272736a209a28a6aade7ab76a2d67ef396d782500ee062f78ec11aa/django-filter-ex-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "47682e40ad1586a92de3f548af47676b", "sha256": "0600025783c4ae0d2d40d641253527378c09a54627bb839a5684d05fbe44222d"}, "downloads": -1, "filename": "django_filter_ex-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "47682e40ad1586a92de3f548af47676b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 43952, "upload_time": "2018-09-22T00:11:14", "upload_time_iso_8601": "2018-09-22T00:11:14.144294Z", "url": "https://files.pythonhosted.org/packages/a2/a7/fed89619ba3f6fc040d83286eff4c998fad3d963f2e2a1e335c82b4090fb/django_filter_ex-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2da787d22ef487552e4f20e33315708", "sha256": "6e609ec5ac145f2ed6687921840cb65c34d1016e7adf5d2c7e17ec758d50cff6"}, "downloads": -1, "filename": "django-filter-ex-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f2da787d22ef487552e4f20e33315708", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110855, "upload_time": "2018-09-22T00:11:16", "upload_time_iso_8601": "2018-09-22T00:11:16.141455Z", "url": "https://files.pythonhosted.org/packages/7c/d1/52a84272736a209a28a6aade7ab76a2d67ef396d782500ee062f78ec11aa/django-filter-ex-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:08 2020"}