{"info": {"author": "Zachary Priddy", "author_email": "py@zpriddy.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "# Defang API\nDefang API runs a local server or Docker that can assist in defanging URLs to make them safe to \npost in various apps or tp log in case logs. \n\nCapabilities:\n- Defang URL\n- Refang URL\n- Base64 Decode\n- Base64 Encode\n\nThe defang functionality is ran using a a modified version of the defang package from Johan Nestaas. \nI currently a pull request in to incorporate the changes I have made to it to better support more \nprotocols and defanging options.\n\nOriginal: https://bitbucket.org/johannestaas/defang/src/master/\n\nMine: https://bitbucket.org/zpriddy/defang/src/master/\n\nPull Request: https://bitbucket.org/johannestaas/defang/pull-requests/4/add-better-support-for-defanging/diff\n\n\n## Installing and Running\n\n----\n### Using PIP (Easy)\n#### Install\nRun : `pip install defang-api`\n\n#### Running\nRun: `defang-server`\n\nBy default this will run on `localhost` on port `5000` but that can be changed at runtime:\n\n`defang-server --port=8080 --host-0.0.0.0`\n\n---\n### Using Docker (Advanced)\n#### Install\nRequirements: \n  - Docker Installed\n    - `brew install docker`\n  - Docker Compose installed\n    - `brew install docker-compose`\n\nClone the repo: `git clone https://github.com/zpriddy/defang_api.git`\n\n#### Running\n\nRun: `cd defang_api`\n\nRun: `docker-compose up`\n\n----\n## Using Defang API\n\nWhen you launch the server by default it will run on `localhost:5000`. \nThere is full [Swagger](https://swagger.io/) documentation if you point your browser at \n`http://localhost:5000`. This will give you full details on all of the available options for each \nendpoint of the API as well as the ability to test each of the endpoints.\n\nBy default the API will return its results in JSON but if `accept` header is set to `text/plain` \nthen it will return the results in plain text.\n\n## Examples\nIf you run:\n```bash\ncurl -X GET \"http://localhost:5000/api/defang?url=http%3A%2F%2Fexample.com\" -H \"accept: text/plain\"\n```\nYou will get back\n```\nhXXp://example[.]com\n```\n___\n```bash\ncurl -X GET \"http://localhost:5000/api/defang?url=http%3A%2F%2Fexample.com\" -H \"accept: application/json\"\n```\nWill give you back JSON:\n```\n{\n  \"error\": [],\n  \"output\": \"hXXp://example[.]com\"\n}\n```\n----\nIf you have a list of URLS:\n```bash\ncurl -X POST \"http://localhost:5000/api/defang\" -H \"accept: application/json\" -H \"Content-Type: \"\\\n\"application/json\" -d \"{ \\\"colons\\\": false, \\\"dots\\\": false, \\\"url\\\": [ \\\"https://example.com\\\", \\\"https://foo.bar\\\" ]}\"\n```\nWill give you:\n```\n{\n  \"error\": [],\n  \"output\": [\n    \"hXXps://example[.]com\",\n    \"hXXps://foo[.]bar\"\n  ]\n}\n```\nBut if you set the accept to `text/plain` you will get:\n```\nhXXps://example[.]com,hXXps://foo[.]bar\n```\n## Notes\nThe simple `GET` method endpoints are limited on the scope of options that there are in passing \ndata in. For this reason I recommend using the `POST` method endpoints\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zpriddy/defang_api", "keywords": "defang", "license": "BSD-derived (http://www.repoze.org/LICENSE.txt)", "maintainer": "", "maintainer_email": "", "name": "defang-api", "package_url": "https://pypi.org/project/defang-api/", "platform": "", "project_url": "https://pypi.org/project/defang-api/", "project_urls": {"Blog": "https:/zpriddy.com", "Bug Tracker": "https://github.com/zpriddy/defang_api/issues", "Homepage": "https://github.com/zpriddy/defang_api", "Source Code": "https://github.com/zpriddy/defang_api/"}, "release_url": "https://pypi.org/project/defang-api/0.0.1/", "requires_dist": ["Flask", "flask-restx", "pytest ; extra == 'testing'", "pytest-cov ; extra == 'testing'", "coverage ; extra == 'testing'"], "requires_python": ">=3.7", "summary": "Example defang API Server", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Defang API</h1>\n<p>Defang API runs a local server or Docker that can assist in defanging URLs to make them safe to\npost in various apps or tp log in case logs.</p>\n<p>Capabilities:</p>\n<ul>\n<li>Defang URL</li>\n<li>Refang URL</li>\n<li>Base64 Decode</li>\n<li>Base64 Encode</li>\n</ul>\n<p>The defang functionality is ran using a a modified version of the defang package from Johan Nestaas.\nI currently a pull request in to incorporate the changes I have made to it to better support more\nprotocols and defanging options.</p>\n<p>Original: <a href=\"https://bitbucket.org/johannestaas/defang/src/master/\" rel=\"nofollow\">https://bitbucket.org/johannestaas/defang/src/master/</a></p>\n<p>Mine: <a href=\"https://bitbucket.org/zpriddy/defang/src/master/\" rel=\"nofollow\">https://bitbucket.org/zpriddy/defang/src/master/</a></p>\n<p>Pull Request: <a href=\"https://bitbucket.org/johannestaas/defang/pull-requests/4/add-better-support-for-defanging/diff\" rel=\"nofollow\">https://bitbucket.org/johannestaas/defang/pull-requests/4/add-better-support-for-defanging/diff</a></p>\n<h2>Installing and Running</h2>\n<hr>\n<h3>Using PIP (Easy)</h3>\n<h4>Install</h4>\n<p>Run : <code>pip install defang-api</code></p>\n<h4>Running</h4>\n<p>Run: <code>defang-server</code></p>\n<p>By default this will run on <code>localhost</code> on port <code>5000</code> but that can be changed at runtime:</p>\n<p><code>defang-server --port=8080 --host-0.0.0.0</code></p>\n<hr>\n<h3>Using Docker (Advanced)</h3>\n<h4>Install</h4>\n<p>Requirements:</p>\n<ul>\n<li>Docker Installed\n<ul>\n<li><code>brew install docker</code></li>\n</ul>\n</li>\n<li>Docker Compose installed\n<ul>\n<li><code>brew install docker-compose</code></li>\n</ul>\n</li>\n</ul>\n<p>Clone the repo: <code>git clone https://github.com/zpriddy/defang_api.git</code></p>\n<h4>Running</h4>\n<p>Run: <code>cd defang_api</code></p>\n<p>Run: <code>docker-compose up</code></p>\n<hr>\n<h2>Using Defang API</h2>\n<p>When you launch the server by default it will run on <code>localhost:5000</code>.\nThere is full <a href=\"https://swagger.io/\" rel=\"nofollow\">Swagger</a> documentation if you point your browser at\n<code>http://localhost:5000</code>. This will give you full details on all of the available options for each\nendpoint of the API as well as the ability to test each of the endpoints.</p>\n<p>By default the API will return its results in JSON but if <code>accept</code> header is set to <code>text/plain</code>\nthen it will return the results in plain text.</p>\n<h2>Examples</h2>\n<p>If you run:</p>\n<pre>curl -X GET <span class=\"s2\">\"http://localhost:5000/api/defang?url=http%3A%2F%2Fexample.com\"</span> -H <span class=\"s2\">\"accept: text/plain\"</span>\n</pre>\n<p>You will get back</p>\n<pre><code>hXXp://example[.]com\n</code></pre>\n<hr>\n<pre>curl -X GET <span class=\"s2\">\"http://localhost:5000/api/defang?url=http%3A%2F%2Fexample.com\"</span> -H <span class=\"s2\">\"accept: application/json\"</span>\n</pre>\n<p>Will give you back JSON:</p>\n<pre><code>{\n  \"error\": [],\n  \"output\": \"hXXp://example[.]com\"\n}\n</code></pre>\n<hr>\n<p>If you have a list of URLS:</p>\n<pre>curl -X POST <span class=\"s2\">\"http://localhost:5000/api/defang\"</span> -H <span class=\"s2\">\"accept: application/json\"</span> -H <span class=\"s2\">\"Content-Type: \"</span><span class=\"se\">\\</span>\n<span class=\"s2\">\"application/json\"</span> -d <span class=\"s2\">\"{ \\\"colons\\\": false, \\\"dots\\\": false, \\\"url\\\": [ \\\"https://example.com\\\", \\\"https://foo.bar\\\" ]}\"</span>\n</pre>\n<p>Will give you:</p>\n<pre><code>{\n  \"error\": [],\n  \"output\": [\n    \"hXXps://example[.]com\",\n    \"hXXps://foo[.]bar\"\n  ]\n}\n</code></pre>\n<p>But if you set the accept to <code>text/plain</code> you will get:</p>\n<pre><code>hXXps://example[.]com,hXXps://foo[.]bar\n</code></pre>\n<h2>Notes</h2>\n<p>The simple <code>GET</code> method endpoints are limited on the scope of options that there are in passing\ndata in. For this reason I recommend using the <code>POST</code> method endpoints</p>\n\n          </div>"}, "last_serial": 7089058, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3245d246b94d1c515c4493c052f2a9c2", "sha256": "efc137f401e70b3854a0fc0543fc8721e50fa832bad431b386dc7501e7a72ffc"}, "downloads": -1, "filename": "defang_api-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3245d246b94d1c515c4493c052f2a9c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6256, "upload_time": "2020-04-24T01:25:27", "upload_time_iso_8601": "2020-04-24T01:25:27.529890Z", "url": "https://files.pythonhosted.org/packages/83/3f/4baf60d87447c0b57a6eacd19878aa0e43cdd74d407f695ade8f9ec14982/defang_api-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e424aea2cc030d3a340d7b5cd515bc9c", "sha256": "23c5eebb1e96d6de2b8328fa4dda74e430eddb2c2cc69608b98f81d09cdf0612"}, "downloads": -1, "filename": "defang_api-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e424aea2cc030d3a340d7b5cd515bc9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10368, "upload_time": "2020-04-24T01:25:29", "upload_time_iso_8601": "2020-04-24T01:25:29.290266Z", "url": "https://files.pythonhosted.org/packages/2a/5c/85438d8f43ee5cce9d2f3e0e0f9ecbda047ec0f767b17fce280a2f1a0a7d/defang_api-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3245d246b94d1c515c4493c052f2a9c2", "sha256": "efc137f401e70b3854a0fc0543fc8721e50fa832bad431b386dc7501e7a72ffc"}, "downloads": -1, "filename": "defang_api-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3245d246b94d1c515c4493c052f2a9c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6256, "upload_time": "2020-04-24T01:25:27", "upload_time_iso_8601": "2020-04-24T01:25:27.529890Z", "url": "https://files.pythonhosted.org/packages/83/3f/4baf60d87447c0b57a6eacd19878aa0e43cdd74d407f695ade8f9ec14982/defang_api-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e424aea2cc030d3a340d7b5cd515bc9c", "sha256": "23c5eebb1e96d6de2b8328fa4dda74e430eddb2c2cc69608b98f81d09cdf0612"}, "downloads": -1, "filename": "defang_api-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e424aea2cc030d3a340d7b5cd515bc9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 10368, "upload_time": "2020-04-24T01:25:29", "upload_time_iso_8601": "2020-04-24T01:25:29.290266Z", "url": "https://files.pythonhosted.org/packages/2a/5c/85438d8f43ee5cce9d2f3e0e0f9ecbda047ec0f767b17fce280a2f1a0a7d/defang_api-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:17 2020"}