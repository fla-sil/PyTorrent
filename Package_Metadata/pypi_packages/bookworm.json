{"info": {"author": "Crawlica", "author_email": "tech@crawlica.com", "bugtrack_url": null, "classifiers": [], "description": "Bookworm\n========\n\nThis is a Python client for the Bookworm natural language API, made available by Crawlica.\n\nYou can register to receive an API key at https://bookworm.crawlica.com/request_api_key/\n\n\nExample usage\n-------------\n\n.. code-block:: python\n\n    import tabulate\n    from bookworm import Bookworm\n\n\n    API_KEY = '...'\n\n    documents = ['De tv\u00e5 st\u00f6rsta st\u00e4derna i Sverige \u00e4r Stockholm och G\u00f6teborg',\n                 'Donald Trump blir Barack Obamas eftertr\u00e4dare']\n\n    b = Bookworm(API_KEY, 'sv')\n    res = b.entities(documents)\n\n    for ents in res:\n        data = [[ent['entity'], ent['type'], ', '.join(ent['variants'])] for ent in ents]\n        print(tabulate.tabulate(data, headers=['Entity', 'Type', 'Variants']))\n        print('')\n\n\n\n::\n\n    Entity     Type    Variants\n    ---------  ------  ----------\n    Sverige    geo     Sverige\n    Stockholm  geo     Stockholm\n    G\u00f6teborg   geo     G\u00f6teborg\n\n    Entity        Type    Variants\n    ------------  ------  -------------\n    Donald Trump  person  Donald Trump\n    Barack Obama  person  Barack Obamas\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n  $ pip install bookworm\n\n\n\nFunctionality currently available\n---------------------------------\n\n* *autotag* - Automatically tag documents with the best matching tags from our large database of tags.\n* *wordsmash* - Compare document sets to get the essence of what makes a subset special. Get the defining words and phrases.\n* *entities* - Extract named entities (people, organisations, and places) from each document\n* *sentiment* - Get a numerical representation of how positive or negative each document is\n* *wordcount* - Get a count of the distinct words in the documents. Declinations are grouped into the base form and stop words can be removed.\n* *cluster* - Automatically collect documents into groups, based on their topics, and describe those groups.\n* *categorize* - Automatically put documents in a set of categories that you choose. The categories are defined by topic words, but the documents need not contain any of those words, just \u201cclose\u201d words.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/crawlica/bookworm-client/tarball/0.2.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/crawlica/bookworm-client", "keywords": null, "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "bookworm", "package_url": "https://pypi.org/project/bookworm/", "platform": "POSIX", "project_url": "https://pypi.org/project/bookworm/", "project_urls": {"Download": "https://github.com/crawlica/bookworm-client/tarball/0.2.1", "Homepage": "https://github.com/crawlica/bookworm-client"}, "release_url": "https://pypi.org/project/bookworm/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Text analysis api", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a Python client for the Bookworm natural language API, made available by Crawlica.</p>\n<p>You can register to receive an API key at <a href=\"https://bookworm.crawlica.com/request_api_key/\" rel=\"nofollow\">https://bookworm.crawlica.com/request_api_key/</a></p>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tabulate</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bookworm</span> <span class=\"kn\">import</span> <span class=\"n\">Bookworm</span>\n\n\n<span class=\"n\">API_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'...'</span>\n\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'De tv\u00e5 st\u00f6rsta st\u00e4derna i Sverige \u00e4r Stockholm och G\u00f6teborg'</span><span class=\"p\">,</span>\n             <span class=\"s1\">'Donald Trump blir Barack Obamas eftertr\u00e4dare'</span><span class=\"p\">]</span>\n\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">Bookworm</span><span class=\"p\">(</span><span class=\"n\">API_KEY</span><span class=\"p\">,</span> <span class=\"s1\">'sv'</span><span class=\"p\">)</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">entities</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">ents</span> <span class=\"ow\">in</span> <span class=\"n\">res</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[[</span><span class=\"n\">ent</span><span class=\"p\">[</span><span class=\"s1\">'entity'</span><span class=\"p\">],</span> <span class=\"n\">ent</span><span class=\"p\">[</span><span class=\"s1\">'type'</span><span class=\"p\">],</span> <span class=\"s1\">', '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">ent</span><span class=\"p\">[</span><span class=\"s1\">'variants'</span><span class=\"p\">])]</span> <span class=\"k\">for</span> <span class=\"n\">ent</span> <span class=\"ow\">in</span> <span class=\"n\">ents</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tabulate</span><span class=\"o\">.</span><span class=\"n\">tabulate</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Entity'</span><span class=\"p\">,</span> <span class=\"s1\">'Type'</span><span class=\"p\">,</span> <span class=\"s1\">'Variants'</span><span class=\"p\">]))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n</pre>\n<pre>Entity     Type    Variants\n---------  ------  ----------\nSverige    geo     Sverige\nStockholm  geo     Stockholm\nG\u00f6teborg   geo     G\u00f6teborg\n\nEntity        Type    Variants\n------------  ------  -------------\nDonald Trump  person  Donald Trump\nBarack Obama  person  Barack Obamas\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install bookworm\n</pre>\n</div>\n<div id=\"functionality-currently-available\">\n<h2>Functionality currently available</h2>\n<ul>\n<li><em>autotag</em> - Automatically tag documents with the best matching tags from our large database of tags.</li>\n<li><em>wordsmash</em> - Compare document sets to get the essence of what makes a subset special. Get the defining words and phrases.</li>\n<li><em>entities</em> - Extract named entities (people, organisations, and places) from each document</li>\n<li><em>sentiment</em> - Get a numerical representation of how positive or negative each document is</li>\n<li><em>wordcount</em> - Get a count of the distinct words in the documents. Declinations are grouped into the base form and stop words can be removed.</li>\n<li><em>cluster</em> - Automatically collect documents into groups, based on their topics, and describe those groups.</li>\n<li><em>categorize</em> - Automatically put documents in a set of categories that you choose. The categories are defined by topic words, but the documents need not contain any of those words, just \u201cclose\u201d words.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2725351, "releases": {"0.1.5": [{"comment_text": "", "digests": {"md5": "73daee7112b3d722d795b29e3f7c4e87", "sha256": "376d2f9f22e679c25b10bfec9a758936733b03cb92acd0cc8159ca527fc5daf0"}, "downloads": -1, "filename": "bookworm-0.1.5.tar.gz", "has_sig": false, "md5_digest": "73daee7112b3d722d795b29e3f7c4e87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3317, "upload_time": "2016-11-17T21:25:24", "upload_time_iso_8601": "2016-11-17T21:25:24.326927Z", "url": "https://files.pythonhosted.org/packages/b8/49/ed7970c2c9e289e77775eeff620043f7e24fce7654b328d81a778c57feb5/bookworm-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "bb32cf47b76cc461afbf0b7b96a3ff8a", "sha256": "a7087af5f8e50558b32e90a098d10f3aa353919cc9a1ff4b4477524ac72bae60"}, "downloads": -1, "filename": "bookworm-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bb32cf47b76cc461afbf0b7b96a3ff8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3491, "upload_time": "2017-03-03T08:07:31", "upload_time_iso_8601": "2017-03-03T08:07:31.922111Z", "url": "https://files.pythonhosted.org/packages/08/6f/b01b52ca15beaa46e6b8d0f2cf946932f1135a0811dba8875ec57985f206/bookworm-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "78df7dc937f9c3ec2a9b35da2f9a939f", "sha256": "61e50e606440db4884502bd481b890d97645836cdc485157939f338dfa16ae25"}, "downloads": -1, "filename": "bookworm-0.2.1.tar.gz", "has_sig": false, "md5_digest": "78df7dc937f9c3ec2a9b35da2f9a939f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3414, "upload_time": "2017-03-23T10:05:28", "upload_time_iso_8601": "2017-03-23T10:05:28.074360Z", "url": "https://files.pythonhosted.org/packages/fb/49/f320f2204929d40107a11d47739604df4f333a2ca419d9d6ade12b983045/bookworm-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "78df7dc937f9c3ec2a9b35da2f9a939f", "sha256": "61e50e606440db4884502bd481b890d97645836cdc485157939f338dfa16ae25"}, "downloads": -1, "filename": "bookworm-0.2.1.tar.gz", "has_sig": false, "md5_digest": "78df7dc937f9c3ec2a9b35da2f9a939f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3414, "upload_time": "2017-03-23T10:05:28", "upload_time_iso_8601": "2017-03-23T10:05:28.074360Z", "url": "https://files.pythonhosted.org/packages/fb/49/f320f2204929d40107a11d47739604df4f333a2ca419d9d6ade12b983045/bookworm-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:43 2020"}