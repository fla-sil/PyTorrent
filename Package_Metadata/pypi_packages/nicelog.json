{"info": {"author": "Samuele Santi", "author_email": "samuele@samuelesanti.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "Nice Log\n########\n\n.. image:: https://circleci.com/gh/rshk/nicelog.svg?&style=shield\n   :target: https://circleci.com/gh/rshk/nicelog\n   :alt: CircleCI build status\n\n\nProvide formatters to nicely display colorful logging output on the console.\n\n`Fork this project on GitHub <https://github.com/rshk/nicelog>`_\n\nRight now, it contains only one formatter, coloring log lines\ndepending on the log level and adding nice line prefixes containing\nlogger name, but future plans are to add more formatters and allow\nbetter ways to customize them.\n\n\nInstallation\n============\n\n::\n\n   pip install nicelog\n\n\nQuick usage\n===========\n\nSince version ``0.3``, nicelog comes with a helper function to quickly\nset up logging for basic needs.\n\n.. code-block:: python\n\n    from nicelog import setup_logging\n\n    setup_logging()\n\nOr, if you want to include debug messages too:\n\n.. code-block:: python\n\n    setup_logging(debug=True)\n\n\nAdvanced usage\n==============\n\n.. code-block:: python\n\n    import logging\n    import sys\n\n    from nicelog.formatters import Colorful\n\n    # Setup a logger\n    logger = logging.getLogger('foo')\n    logger.setLevel(logging.DEBUG)\n\n    # Setup a handler, writing colorful output\n    # to the console\n    handler = logging.StreamHandler(sys.stderr)\n    handler.setFormatter(Colorful())\n    handler.setLevel(logging.DEBUG)\n    logger.addHandler(handler)\n\n    # Now log some messages..\n    logger.debug('Debug message')\n    logger.info('Info message')\n    logger.warning('Warning message')\n    logger.error('Error message')\n    logger.critical('Critical message')\n    try:\n        raise ValueError('This is an exception')\n    except:\n        logger.exception(\"An error occurred\")\n\n\nExample output\n==============\n\nHere it is, in all its glory:\n\n.. image:: .screenshots/nicelog-150408.png\n    :alt: Screenshot\n\n\nThe output format can be further customized, eg. if you want to reduce\ncolorfulness or verbosity.\n\n\nIntegrations\n============\n\nDjango\n------\n\nI usually put something like this in my (local) settings:\n\n.. code-block:: python\n\n    LOGGING['formatters']['standard'] = {\n        '()': 'nicelog.formatters.Colorful',\n        'show_date': True,\n        'show_function': True,\n        'show_filename': True,\n        'message_inline': False,\n    }\n\n\nChangelog\n=========\n\nv0.2\n----\n\n- More decoupling between \"colorer\" and \"style\"\n- Support for pretty tracebacks (colorful + code context + locals)\n- Added some tests\n- Python3 support via six\n\n\nv0.1.9\n------\n\n- Replaced ``strftime(3)`` conversion specifiers ``%F`` and ``%T``\n  aren't available on all platforms: replaced with long versions\n  ``%Y-%m-%d`` and ``%H:%M:%S``.\n\n\nv0.1.8\n------\n\n- Prevent failure in case the ``TERM`` environment variable is not set (PR #1)\n\n\nv0.1.7\n------\n\n- Added support for ``message_inline`` argument. If set to ``False``,\n  messages will be displayed on their own line (useful when enabling a lot of\n  information)\n\n\nv0.1.6\n------\n\n- Added support for showing more information:\n\n  - record date\n  - file name / line number\n  - module / function\n\n\nv0.1.5\n------\n\n- Added support for nicer colors in 256-color mode\n- Removed dependency from termcolor (now shipping better implementation)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rshk/nicelog", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "nicelog", "package_url": "https://pypi.org/project/nicelog/", "platform": "", "project_url": "https://pypi.org/project/nicelog/", "project_urls": {"Homepage": "http://github.com/rshk/nicelog"}, "release_url": "https://pypi.org/project/nicelog/0.3/", "requires_dist": null, "requires_python": "", "summary": "Nice colorful formatters for Python logging.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://circleci.com/gh/rshk/nicelog\" rel=\"nofollow\"><img alt=\"CircleCI build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef7d4be2f5c1750d888d238efda8d57f43f0f8ee/68747470733a2f2f636972636c6563692e636f6d2f67682f7273686b2f6e6963656c6f672e7376673f267374796c653d736869656c64\"></a>\n<p>Provide formatters to nicely display colorful logging output on the console.</p>\n<p><a href=\"https://github.com/rshk/nicelog\" rel=\"nofollow\">Fork this project on GitHub</a></p>\n<p>Right now, it contains only one formatter, coloring log lines\ndepending on the log level and adding nice line prefixes containing\nlogger name, but future plans are to add more formatters and allow\nbetter ways to customize them.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install nicelog\n</pre>\n</div>\n<div id=\"quick-usage\">\n<h2>Quick usage</h2>\n<p>Since version <tt>0.3</tt>, nicelog comes with a helper function to quickly\nset up logging for basic needs.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">nicelog</span> <span class=\"kn\">import</span> <span class=\"n\">setup_logging</span>\n\n<span class=\"n\">setup_logging</span><span class=\"p\">()</span>\n</pre>\n<p>Or, if you want to include debug messages too:</p>\n<pre><span class=\"n\">setup_logging</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"advanced-usage\">\n<h2>Advanced usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">nicelog.formatters</span> <span class=\"kn\">import</span> <span class=\"n\">Colorful</span>\n\n<span class=\"c1\"># Setup a logger</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Setup a handler, writing colorful output</span>\n<span class=\"c1\"># to the console</span>\n<span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"p\">)</span>\n<span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">setFormatter</span><span class=\"p\">(</span><span class=\"n\">Colorful</span><span class=\"p\">())</span>\n<span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now log some messages..</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'Debug message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'Info message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s1\">'Warning message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s1\">'Error message'</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">critical</span><span class=\"p\">(</span><span class=\"s1\">'Critical message'</span><span class=\"p\">)</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'This is an exception'</span><span class=\"p\">)</span>\n<span class=\"k\">except</span><span class=\"p\">:</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"s2\">\"An error occurred\"</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-output\">\n<h2>Example output</h2>\n<p>Here it is, in all its glory:</p>\n<img alt=\"Screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77ad2decc164d7a005fec428b860fe237aad12e4/2e73637265656e73686f74732f6e6963656c6f672d3135303430382e706e67\">\n<p>The output format can be further customized, eg. if you want to reduce\ncolorfulness or verbosity.</p>\n</div>\n<div id=\"integrations\">\n<h2>Integrations</h2>\n<h2 id=\"django\"><span class=\"section-subtitle\">Django</span></h2>\n<p>I usually put something like this in my (local) settings:</p>\n<pre><span class=\"n\">LOGGING</span><span class=\"p\">[</span><span class=\"s1\">'formatters'</span><span class=\"p\">][</span><span class=\"s1\">'standard'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'()'</span><span class=\"p\">:</span> <span class=\"s1\">'nicelog.formatters.Colorful'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'show_date'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'show_function'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'show_filename'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'message_inline'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"v0-2\">\n<h3>v0.2</h3>\n<ul>\n<li>More decoupling between \u201ccolorer\u201d and \u201cstyle\u201d</li>\n<li>Support for pretty tracebacks (colorful + code context + locals)</li>\n<li>Added some tests</li>\n<li>Python3 support via six</li>\n</ul>\n</div>\n<div id=\"v0-1-9\">\n<h3>v0.1.9</h3>\n<ul>\n<li>Replaced <tt>strftime(3)</tt> conversion specifiers <tt>%F</tt> and <tt>%T</tt>\naren\u2019t available on all platforms: replaced with long versions\n<tt><span class=\"pre\">%Y-%m-%d</span></tt> and <tt><span class=\"pre\">%H:%M:%S</span></tt>.</li>\n</ul>\n</div>\n<div id=\"v0-1-8\">\n<h3>v0.1.8</h3>\n<ul>\n<li>Prevent failure in case the <tt>TERM</tt> environment variable is not set (PR #1)</li>\n</ul>\n</div>\n<div id=\"v0-1-7\">\n<h3>v0.1.7</h3>\n<ul>\n<li>Added support for <tt>message_inline</tt> argument. If set to <tt>False</tt>,\nmessages will be displayed on their own line (useful when enabling a lot of\ninformation)</li>\n</ul>\n</div>\n<div id=\"v0-1-6\">\n<h3>v0.1.6</h3>\n<ul>\n<li>Added support for showing more information:<ul>\n<li>record date</li>\n<li>file name / line number</li>\n<li>module / function</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-1-5\">\n<h3>v0.1.5</h3>\n<ul>\n<li>Added support for nicer colors in 256-color mode</li>\n<li>Removed dependency from termcolor (now shipping better implementation)</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4211249, "releases": {"0.1.10": [{"comment_text": "", "digests": {"md5": "31926a429f7b16452210cd6a164ffc19", "sha256": "5faf92d42360ee4b909047e1998ad97b7d4813668fd1ae48ce82294e90e2e08b"}, "downloads": -1, "filename": "nicelog-0.1.10.tar.gz", "has_sig": false, "md5_digest": "31926a429f7b16452210cd6a164ffc19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7939, "upload_time": "2015-08-19T12:37:28", "upload_time_iso_8601": "2015-08-19T12:37:28.131576Z", "url": "https://files.pythonhosted.org/packages/c8/60/58390342dc18da277242ec0ba754994b7dacea5d7aa9f5a49a34fd775285/nicelog-0.1.10.tar.gz", "yanked": false}], "0.1.11": [], "0.1.4": [{"comment_text": "", "digests": {"md5": "1b6fbdfb5f10e1018fdcdc19c795eff7", "sha256": "a7de148c7ce6bc7de2147b87680f7377bc8cf55bbc924f20a9e5a7042724e1e8"}, "downloads": -1, "filename": "nicelog-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1b6fbdfb5f10e1018fdcdc19c795eff7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2750, "upload_time": "2014-05-30T10:40:45", "upload_time_iso_8601": "2014-05-30T10:40:45.348066Z", "url": "https://files.pythonhosted.org/packages/e5/c6/39243369b8102710810b9c77b30cdd60ba123db003fb611da77b88c81965/nicelog-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "22c053ea6246eb39d5171ec22ee1cfc4", "sha256": "ae56716a7b9a754c48ec6b4798fef0312788052fb34221179d41cd9b0d401138"}, "downloads": -1, "filename": "nicelog-0.1.5.tar.gz", "has_sig": false, "md5_digest": "22c053ea6246eb39d5171ec22ee1cfc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3960, "upload_time": "2014-07-04T14:56:41", "upload_time_iso_8601": "2014-07-04T14:56:41.748338Z", "url": "https://files.pythonhosted.org/packages/93/b7/4214f42b828117041393f8ca1eb9f523f50cf511586a852755447f451c20/nicelog-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "a3f4e3238dc17e06476efcfdbb536681", "sha256": "032ccbebe93b507e1d17751e99c1508a505a8a18fa153c1571c454a6ff21a9e5"}, "downloads": -1, "filename": "nicelog-0.1.6.tar.gz", "has_sig": false, "md5_digest": "a3f4e3238dc17e06476efcfdbb536681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4225, "upload_time": "2014-07-04T15:18:50", "upload_time_iso_8601": "2014-07-04T15:18:50.718392Z", "url": "https://files.pythonhosted.org/packages/ba/1b/28ea95803aeaf2a1c4f546f578b7184a2c9d32d62b1df36344682b7b1acd/nicelog-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "65e95e31b3bf6fe2bb1eaf9b888b2af4", "sha256": "b65c5e82dc2f4d5139b6115a6d059b880e69afe03a9dc83ab846cf0ae15eaebf"}, "downloads": -1, "filename": "nicelog-0.1.7.tar.gz", "has_sig": false, "md5_digest": "65e95e31b3bf6fe2bb1eaf9b888b2af4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4523, "upload_time": "2014-07-06T17:08:47", "upload_time_iso_8601": "2014-07-06T17:08:47.910331Z", "url": "https://files.pythonhosted.org/packages/37/2e/0fb5452438af33f48f2f1eb326520852db688586f283bb566183ea112dac/nicelog-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "dbf787ae9c10b135f39701f520fd3250", "sha256": "6fdd00acf63a389c42748559139de65bd798a8bad6146a4468185483e913cf6e"}, "downloads": -1, "filename": "nicelog-0.1.8.tar.gz", "has_sig": false, "md5_digest": "dbf787ae9c10b135f39701f520fd3250", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4721, "upload_time": "2014-10-17T11:17:58", "upload_time_iso_8601": "2014-10-17T11:17:58.194160Z", "url": "https://files.pythonhosted.org/packages/55/7c/988be4554d538440c310225f0d25efa022d7700d842c6adf981cd2c3788d/nicelog-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "d4c47d37696ed8f0d6cdcb9c72be8268", "sha256": "24769bd26f01e002fecccbdf5c61cd41f877d30898d6e9d6cffb9c98f9085d4f"}, "downloads": -1, "filename": "nicelog-0.1.9.tar.gz", "has_sig": false, "md5_digest": "d4c47d37696ed8f0d6cdcb9c72be8268", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4746, "upload_time": "2014-12-04T15:23:46", "upload_time_iso_8601": "2014-12-04T15:23:46.367490Z", "url": "https://files.pythonhosted.org/packages/d0/62/92caf338a93947d79b49d180e7018f74398db69aa73403b1b49bc3836393/nicelog-0.1.9.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5f92908de5867f3445307d51da518985", "sha256": "d69f05b9d81a98ca71d236e47712c631f101979a80bffaa9c4741bcd6a0817e4"}, "downloads": -1, "filename": "nicelog-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "5f92908de5867f3445307d51da518985", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11182, "upload_time": "2015-11-30T17:26:43", "upload_time_iso_8601": "2015-11-30T17:26:43.142230Z", "url": "https://files.pythonhosted.org/packages/fb/61/e04e26fe3f03e8ed5b59b05d46aa6116a9761ded8f26075d23788b1b89f0/nicelog-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9754cd2e71d5799af96cbf3017641a53", "sha256": "578bdfc09f5d8d692c508668888287c468ee25291668fda913941a201be5e142"}, "downloads": -1, "filename": "nicelog-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9754cd2e71d5799af96cbf3017641a53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11182, "upload_time": "2015-11-30T17:27:00", "upload_time_iso_8601": "2015-11-30T17:27:00.761456Z", "url": "https://files.pythonhosted.org/packages/bf/6e/303f70e6e242957769b843929f5216349bcb19743d342f0912f44d9024ae/nicelog-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "30dfafc9997af8886d136e6941437707", "sha256": "1d0e6fcf7fa1123d6ecbd6901b186b4a59c47969e09a93bd6464e5cdd8fc0230"}, "downloads": -1, "filename": "nicelog-0.2.tar.gz", "has_sig": false, "md5_digest": "30dfafc9997af8886d136e6941437707", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7959, "upload_time": "2015-11-30T17:26:26", "upload_time_iso_8601": "2015-11-30T17:26:26.673498Z", "url": "https://files.pythonhosted.org/packages/dc/8f/d56ac78d2253bb6fceffc7a4c5fc83fe1ca3b9939977ba97eacdf5f47540/nicelog-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0127b151ff163d1df7da500d08a29c5d", "sha256": "43f46b688b711f12bc12f59cb88ac4d8b088eeddbe6f8cda14ff898a6bf5a35d"}, "downloads": -1, "filename": "nicelog-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0127b151ff163d1df7da500d08a29c5d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11143, "upload_time": "2015-12-01T11:33:04", "upload_time_iso_8601": "2015-12-01T11:33:04.513860Z", "url": "https://files.pythonhosted.org/packages/94/9f/43755ee48aeea86ca7380be4093866dfa7eafaa23b4c53a2545b0296152d/nicelog-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad8a6083736a6ef472e9f970dc7d7080", "sha256": "1664783db89c2337b010817fe103c5d2db5eeb8da1d3287c48adb2c8eb2f12a4"}, "downloads": -1, "filename": "nicelog-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad8a6083736a6ef472e9f970dc7d7080", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11142, "upload_time": "2015-12-01T11:33:18", "upload_time_iso_8601": "2015-12-01T11:33:18.577780Z", "url": "https://files.pythonhosted.org/packages/32/33/d60248642c6fceab700be263ed6e42ba46f8432491f725b7488e28d8efb0/nicelog-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77ee7b9ec654eb8097a1f93cdc776518", "sha256": "611cd74405b505ad5c4877e5ec59522a324232d1c4b29e5fa411b601a0212bf4"}, "downloads": -1, "filename": "nicelog-0.2.1.tar.gz", "has_sig": false, "md5_digest": "77ee7b9ec654eb8097a1f93cdc776518", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7839, "upload_time": "2015-12-01T11:33:32", "upload_time_iso_8601": "2015-12-01T11:33:32.684728Z", "url": "https://files.pythonhosted.org/packages/46/1c/6ca0865d9fe9aebf788383b621829c6d2b0c10afa83bd08248c4a3bb5d51/nicelog-0.2.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "a0f9f3e809a63cb616434d8f17492d6f", "sha256": "4483edd1935a336a96e6634766751502dde08417f010b2296175bbec9febb5fb"}, "downloads": -1, "filename": "nicelog-0.3.tar.gz", "has_sig": false, "md5_digest": "a0f9f3e809a63cb616434d8f17492d6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9134, "upload_time": "2018-08-27T14:20:01", "upload_time_iso_8601": "2018-08-27T14:20:01.661979Z", "url": "https://files.pythonhosted.org/packages/15/1c/50cb8e72adc12f2fa4629269389e6502dcfa780eee684aecdcc73e08f132/nicelog-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0f9f3e809a63cb616434d8f17492d6f", "sha256": "4483edd1935a336a96e6634766751502dde08417f010b2296175bbec9febb5fb"}, "downloads": -1, "filename": "nicelog-0.3.tar.gz", "has_sig": false, "md5_digest": "a0f9f3e809a63cb616434d8f17492d6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9134, "upload_time": "2018-08-27T14:20:01", "upload_time_iso_8601": "2018-08-27T14:20:01.661979Z", "url": "https://files.pythonhosted.org/packages/15/1c/50cb8e72adc12f2fa4629269389e6502dcfa780eee684aecdcc73e08f132/nicelog-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:26 2020"}