{"info": {"author": "Santiment", "author_email": "admin@santiment.net", "bugtrack_url": null, "classifiers": [], "description": "# sanpy\n\n[![PyPI version](https://badge.fury.io/py/sanpy.svg)](https://badge.fury.io/py/sanpy)\n\nSantiment API python client.\n\n## Table of contents\n\n- [Table of contents](#table-of-contents)\n  - [Installation](#installation)\n  - [Upgrade to latest version](#upgrade-to-latest-version)\n  - [Configuration](#configuration)\n  - [Retrieving data from the API](#retrieving-data-from-the-api)\n    - [Fetch single metric](#fetch-single-metric)\n    - [Batching multiple queries](#batching-multiple-queries)\n  - [Available metrics](#available-metrics)\n    - [Full list of on-chain metrics (including timebounded)](#full-list-of-on-chain-metrics-including-timebounded)\n    - [All Projects](#all-projects)\n    - [ERC20 Projects](#erc20-projects)\n    - [Daily Active Addresses](#daily-active-addresses)\n    - [Network Growth](#network-growth)\n    - [Burn Rate - deprecated, replaced by 'Token Age Consumed'](#burn-rate---deprecated-replaced-by-token-age-consumed)\n    - [Token Age Consumed](#token-age-consumed)\n    - [Average Token Age Consumed in Days](#average-token-age-consumed-in-days)\n    - [Transaction volume](#transaction-volume)\n    - [Token Velocity](#token-velocity)\n    - [Token Circulation](#token-circulation)\n    - [Realized Value](#realized-value)\n    - [MVRV Ratio](#mvrv-ratio)\n    - [NVT Ratio](#nvt-ratio)\n    - [Daily Active Deposits](#daily-active-deposits)\n    - [Github Activity](#github-activity)\n    - [Prices](#prices)\n    - [Open, High, Close, Low Prices, Volume, Marketcap](#open-high-close-low-prices-volume-marketcap)\n    - [Exchange Funds Flow](#exchange-funds-flow)\n    - [Social Volume Projects](#social-volume-projects)\n    - [Social Volume](#social-volume)\n    - [Gas Used](#gas-used)\n    - [Miners Balance](#miners-balance)\n    - [Mining Pools Distribution](#mining-pools-distribution)\n    - [Historical Balance](#historical-balance)\n    - [Social Dominance](#social-dominance)\n    - [Top Holders Percent of Total Supply](#top-holders-percent-of-total-supply)\n    - [History Twitter Data](#history-twitter-data)\n    - [Price Volume Difference](#price-volume-difference)\n    - [Ethereum Top Transactions](#ethereum-top-transactions)\n    - [Ethereum Spent Over Time](#ethereum-spent-over-time)\n    - [Token Top Transactions](#token-top-transactions)\n    - [Emerging Trends](#emerging-trends)\n    - [Top Social Gainers Losers](#top-social-gainers-losers)\n    - [Available metrics](#available-metrics)\n    - [Metadata](#metadata)\n  - [Extras](#extras)\n  - [Development](#development)\n  - [Running tests](#running-tests)\n  - [Running integration tests](#running-integration-tests)\n\n## Installation\n\n```\npip install sanpy\n```\n\n## Upgrade to latest version\n\n```\npip install --upgrade sanpy\n```\n\n## Install extra packages\n\nThere are few scripts under [extras](/san/extras) directory. To install their dependencies use:\n\n```\npip install sanpy[extras]\n```\n\n## Premium metrics\n\nIn order to access real time data or historical data (older than 3 months),\nyou'll need to set the [api key](#configuration) and have some SAN tokens in your account.\nAll premium metrics are free for \"santiment\" token.\n\n## Configuration\n\nOptionally you can provide an api key which gives access to some premium metrics:\n\n```python\nimport san\nsan.ApiConfig.api_key = 'api-key-provided-by-sanbase'\n```\n\nTo obtain an api key you should [log in to sanbase](https://app.santiment.net/login)\nand go to the `account` page - [https://app.santiment.net/account](https://app.santiment.net/account).\nThere is an `API Keys` section and a `Generate new api key` button.\n\nIf the account used for generating the api key has enough SAN tokens, the api key will give you\naccess to the data that requires SAN token staking. The api key can only be used to fetch data and not to execute graphql mutations.\n\n## Retrieving data from the API\n\nThe data is fetched by providing a string in the format `query/slug` and additional parameters.\n\n- `query`: Available queries can be found in section: [Available metrics](#available-metrics)\n- `slug`: A list of projects with their slugs, names, etc. can be fetched like this:\n\n```python\nimport san\nsan.get(\"projects/all\")\n```\n\n```\n                name             slug ticker   totalSupply\n0             0chain           0chain    ZCN     400000000\n1                 0x               0x    ZRX    1000000000\n2          0xBitcoin            0xbtc  0xBTC      20999984\n...\n```\n\nParameters:\n\n- `from_date`, `to_date` - A date or datetime in iso8601 format specifying the start and end datetime for the returned data for ex: `2018-06-01`\n- `interval` - The interval of the returned data - an integer followed by one of: `s`, `m`, `h`, `d` or `w`\n\nDefault values for parameters:\n\n- `from_date`: `datetime.now() - 365 days`\n- `to_date`: `datetime.now()`\n- `interval`: `'1d'`\n\nThe returned value for time-series data is in `pandas DataFrame` format indexed by `datetime`.\n\n### Fetch single metric\n\n```python\nimport san\n\nsan.get(\n    \"daily_active_addresses/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n\nsan.get(\n    \"prices/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nUsing the defaults params:\n\n```python\nsan.get(\"daily_active_addresses/santiment\")\nsan.get(\"prices/santiment\")\n```\n\n### Batching multiple queries\n\n```python\nfrom san import Batch\n\nbatch = Batch()\n\nbatch.get(\n    \"daily_active_addresses/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n\nbatch.get(\n    \"daily_active_addresses/santiment\",\n    from_date=\"2018-06-06\",\n    to_date=\"2018-06-10\",\n    interval=\"1d\"\n)\n\n[daa1, daa2] = batch.execute()\n```\n\n## Available metrics\n\nGetting all of the metrics as a list is done, using the following code:\n\n```python\nsan.available_metrics()\n```\n\nBelow are described some available metrics and are given examples for fetching and for the returned format.\n\n### All Projects\n\nReturns a DataFrame with all the projects available in the Santiment API. Not all\nmetrics will be available for all the projects. The `slug` is a unique identifier\nwhich can be used to retrieve most of the metrics.\n\n```python\nsan.get(\"projects/all\")\n```\n\nExample result:\n\n```csv\n                 name             slug ticker   totalSupply\n0              0chain           0chain    ZCN     400000000\n1                  0x               0x    ZRX    1000000000\n2           0xBitcoin            0xbtc  0xBTC      20999984\n3     0xcert Protocol           0xcert    ZXC     500000000\n4              1World           1world    1WO      37219453\n5        AB-Chain RTB     ab-chain-rtb    RTB      27857813\n6             Abulaba          abulaba    AAA     397000000\n7                 AC3              ac3    AC3    80235326.0\n...\n```\n\n### ERC20 Projects\n\nReturns a DataFrame with all the ERC20 projects available in the Santiment API.\nNot all metrics will be available for all the projects. The `slug` is a unique\nidentifier which can be used to retrieve most of the metrics.\n\n```python\nsan.get(\"projects/erc20\")\n```\n\nExample result:\n\n```\n                      name                   slug ticker   totalSupply\n0                   0chain                 0chain    ZCN     400000000\n1                       0x                     0x    ZRX    1000000000\n2                0xBitcoin                  0xbtc  0xBTC      20999984\n3          0xcert Protocol                 0xcert    ZXC     500000000\n4                   1World                 1world    1WO      37219453\n5             AB-Chain RTB           ab-chain-rtb    RTB      27857813\n6                  Abulaba                abulaba    AAA     397000000\n7                   adbank                 adbank    ADB    1000000000\n...\n```\n\n### Daily Active Addresses\n\nThis metric includes the number of unique addresses that participated in the transfers of given token during the day.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"daily_active_addresses/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                                     value\ndatetime\n2018-06-01 00:00:00+00:00                2\n2018-06-02 00:00:00+00:00                4\n2018-06-03 00:00:00+00:00                6\n2018-06-04 00:00:00+00:00                6\n2018-06-05 00:00:00+00:00               14\n```\n\n### Network Growth\n\nNetwork Growth shows the number of new addresses being created on the project network each day.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"network_growth/santiment\",\n    from_date=\"2018-12-01\",\n    to_date=\"2018-12-05\",\n    interval=\"1d\"\n)\n```\n\n```\n                          newAddresses\ndatetime\n2018-12-01 00:00:00+00:00            3\n2018-12-02 00:00:00+00:00            2\n2018-12-03 00:00:00+00:00            6\n2018-12-04 00:00:00+00:00            2\n2018-12-05 00:00:00+00:00            1\n```\n\n### Burn Rate - deprecated, replaced by 'Token Age Consumed'\n\nEach transaction has an equivalent burn rate record. The burn rate is calculated by multiplying\nthe number of tokens moved by the number of blocks in which they appeared.\nSpikes in burn rate could indicate large transactions or movement of tokens that have been held for a long time.\n\n[Premium metric](#premium-metrics)\n\nBurn rate returns the same results as 'Token Age Consumed' and will be removed in the near future.\n\n```python\nsan.get(\n    \"burn_rate/santiment\",\n    from_date=\"2018-05-01\",\n    to_date=\"2018-05-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                               burnRate\ndatetime\n2018-05-01 00:00:00+00:00      2.514926e+09\n2018-05-02 00:00:00+00:00      1.363158e+10\n2018-05-03 00:00:00+00:00      2.182971e+09\n2018-05-04 00:00:00+00:00      9.731035e+09\n2018-05-05 00:00:00+00:00      2.867054e+10\n```\n\n### Token Age Consumed\n\nEach transaction has an equivalent 'Age consumed' record. The consumed age is calculated by multiplying\nthe number of tokens moved by the number of blocks in which they appeared.\nSpikes in consumed token age could indicate large transactions or movement of tokens that\nhave been held for a long time.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"token_age_consumed/santiment\",\n    from_date=\"2018-05-01\",\n    to_date=\"2018-05-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                           tokenAgeConsumed\ndatetime\n2018-05-01 00:00:00+00:00      2.514926e+09\n2018-05-02 00:00:00+00:00      1.363158e+10\n2018-05-03 00:00:00+00:00      2.182971e+09\n2018-05-04 00:00:00+00:00      9.731035e+09\n2018-05-05 00:00:00+00:00      2.867054e+10\n```\n\n### Average Token Age Consumed in Days\n\nBased on 'Token Age Consumed' above, this returns the Token Age that gets consumed on\naverage over the interval. The result is given in days instead of blocks.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"average_token_age_consumed_in_days/santiment\",\n    from_date=\"2018-05-01\",\n    to_date=\"2018-05-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                             tokenAge\ndatetime\n2018-05-01 00:00:00+00:00    6.353738\n2018-05-02 00:00:00+00:00   22.303985\n2018-05-03 00:00:00+00:00    3.873644\n2018-05-04 00:00:00+00:00  140.566428\n2018-05-05 00:00:00+00:00   56.730010\n```\n\n### Transaction Volume\n\nTotal amount of tokens for a project that were transacted on the blockchain.\nThis metric includes only on-chain volume, not volume in exchanges.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"transaction_volume/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                                       value\ndatetime\n2018-06-01 00:00:00+00:00          46.848943\n2018-06-02 00:00:00+00:00         666.194095\n2018-06-03 00:00:00+00:00       31326.856743\n2018-06-04 00:00:00+00:00        1371.245641\n2018-06-05 00:00:00+00:00       42825.036598\n```\n\n### Token Velocity\n\nToken Velocity returns the average number of times that a token changes wallets over the interval.\nSimply put, a higher token velocity means that the same token is used in transactions more\noften within a set time frame.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"token_velocity/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\")\n```\n\nExample result:\n\n```\n                           tokenVelocity\ndatetime\n2018-06-01 00:00:00+00:00           1.00\n2018-06-02 00:00:00+00:00           3.00\n2018-06-03 00:00:00+00:00           1.97\n2018-06-04 00:00:00+00:00           1.00\n2018-06-05 00:00:00+00:00           2.92\n```\n\n### Token Circulation\n\nToken Circulation returns the total amount of tokens that have been sent at least once during\neach given time period. Minimum interval is '1d'.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"token_circulation/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n```\n\nExample result:\n\n```\n                           tokenCirculation\ndatetime\n2018-06-01 00:00:00+00:00         46.848943\n2018-06-02 00:00:00+00:00        222.194095\n2018-06-03 00:00:00+00:00      15933.955221\n2018-06-04 00:00:00+00:00       1371.245641\n2018-06-05 00:00:00+00:00      14678.249398\n```\n\n### Realized Value\n\nRealized Value returns the total acquisition cost of all tokens on the network,\nbased on the historical price when each coin was last sent, in USD.\nReturns RV for all tokens and RV for all tokens known to be on exchanges.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"realized_value/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                           nonExchangeRealizedValue  realizedValue\ndatetime\n2018-06-01 00:00:00+00:00              2.334917e+07   9.248495e+07\n2018-06-02 00:00:00+00:00              2.334917e+07   9.248498e+07\n2018-06-03 00:00:00+00:00              2.335106e+07   9.248275e+07\n2018-06-04 00:00:00+00:00              2.335138e+07   9.248269e+07\n2018-06-05 00:00:00+00:00              2.335073e+07   9.243114e+07\n```\n\n### MVRV Ratio\n\nMVRV ratio returns the ratio of the market value of all tokens (market cap) to the\nrealized value of all tokens.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"mvrv_ratio/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                              ratio\ndatetime\n2018-06-01 00:00:00+00:00  0.836489\n2018-06-02 00:00:00+00:00  0.850379\n2018-06-03 00:00:00+00:00  0.848195\n2018-06-04 00:00:00+00:00  0.822243\n2018-06-05 00:00:00+00:00  0.781964\n```\n\n### NVT Ratio\n\nNVT ratio returns the Network-Value-to-Transactions ratio. We use the market cap as network value\nand either token circulation or transaction volume as a measurement for transactions, returning two values.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"nvt_ratio/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                           nvtRatioCirculation  nvtRatioTxVolume\ndatetime\n2018-06-01 00:00:00+00:00         1.337498e+06      1.337498e+06\n2018-06-02 00:00:00+00:00         2.820074e+05      9.405723e+04\n2018-06-03 00:00:00+00:00         3.868500e+03      2.000213e+03\n2018-06-04 00:00:00+00:00         4.569595e+04      4.569595e+04\n2018-06-05 00:00:00+00:00         4.268927e+03      1.463171e+03\n```\n\n### Daily Active Deposits\n\nDaily Active Deposits, similar to Daily Active Addresses, returns the number of unique addresses\nthat participated in the transfers of tokens to exchange deposit addresses during the day.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"daily_active_deposits/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                           activeDeposits\ndatetime\n2018-06-01 00:00:00+00:00               0\n2018-06-02 00:00:00+00:00               2\n2018-06-03 00:00:00+00:00               0\n2018-06-04 00:00:00+00:00               2\n2018-06-05 00:00:00+00:00               6\n```\n\n### Github Activity\n\nReturns a list of github activity for a given slug and time interval.\n\n[Premium metric](#premium-metrics)\n\n[An article explaining the github activity tracking](https://medium.com/santiment/tracking-github-activity-of-crypto-projects-introducing-a-better-approach-9fb1af3f1c32)\n\n```python\nsan.get(\n    \"github_activity/santiment\",\n    from_date=\"2018-05-01\",\n    to_date=\"2018-05-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                           activity\ndatetime\n2018-05-02 00:00:00+00:00        32\n2018-05-03 00:00:00+00:00         9\n2018-05-04 00:00:00+00:00        18\n```\n\nYou can also fetch only events connected to development activity by using the `devActivity` query.\n\n```python\nsan.get(\n    \"dev_activity/santiment\",\n    from_date=\"2018-05-01\",\n    to_date=\"2018-05-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                           activity\ndatetime\n2018-05-02 00:00:00+00:00        29\n2018-05-03 00:00:00+00:00         9\n2018-05-04 00:00:00+00:00        16\n```\n\n### Prices\n\nFetch history price in USD or BTC, traded volume and marketcap for a given slug.\n\n```python\nsan.get(\n    \"prices/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n\nsan.get(\n    \"prices/ethereum\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                              marketcap  priceBtc  priceUsd   volume\ndatetime\n2018-06-01 00:00:00+00:00  7.736268e+07  0.000165  1.234635   852857\n2018-06-02 00:00:00+00:00  7.864724e+07  0.000165  1.255135  1242520\n2018-06-03 00:00:00+00:00  7.844339e+07  0.000163  1.251882  1032910\n2018-06-04 00:00:00+00:00  7.604326e+07  0.000160  1.213578   617451\n\n                              marketcap  priceBtc    priceUsd      volume\ndatetime\n2018-06-01 00:00:00+00:00  5.756716e+10  0.077083  576.825315  1945890000\n2018-06-02 00:00:00+00:00  5.875660e+10  0.077475  588.620775  1880390000\n2018-06-03 00:00:00+00:00  6.097134e+10  0.079460  610.682490  1832550000\n2018-06-04 00:00:00+00:00  6.015676e+10  0.079466  602.399792  1903430000\n```\n\n### Open, High, Close, Low Prices, Volume, Marketcap\n\nNote: this query cannot be batched!\n\n```python\nsan.get(\n    \"ohlcv/santiment\",\n    from_date=\"2018-06-01\",\n    to_date=\"2018-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                           openPriceUsd  closePriceUsd  highPriceUsd  lowPriceUsd   volume     marketcap\ndatetime\n2018-06-01 00:00:00+00:00       1.24380        1.27668       1.26599      1.19099   852857  7.736268e+07\n2018-06-02 00:00:00+00:00       1.26136        1.30779       1.27612      1.20958  1242520  7.864724e+07\n2018-06-03 00:00:00+00:00       1.28270        1.28357       1.24625      1.21872  1032910  7.844339e+07\n2018-06-04 00:00:00+00:00       1.23276        1.24910       1.18528      1.18010   617451  7.604326e+07\n```\n\n### Exchange Funds Flow\n\nFetch the difference between the tokens that were deposited minus the tokens that were withdrawn\nfrom an exchange for a given slug in the selected time period.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"exchange_funds_flow/santiment\",\n    from_date=\"2018-04-16T10:02:19Z\",\n    to_date=\"2018-05-23T10:02:19Z\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\n                         inOutDifference\ndatetime\n2018-04-16 10:02:19+00:00    -208.797310\n2018-04-17 00:00:00+00:00     164.006467\n2018-04-18 00:00:00+00:00       0.000000\n2018-04-19 00:00:00+00:00  -45213.112849\n2018-04-20 00:00:00+00:00 -135364.839572\n```\n\n### Social Volume Projects\n\nFetch a list of slugs for which there is social volume data.\n\n```python\nsan.get(\"social_volume_projects\")\n```\n\nExample result:\n\n```\n                   0\n0            cardano\n1       bitcoin-cash\n2            bitcoin\n3        dragonchain\n4                eos\n5   ethereum-classic\n6           ethereum\n7      kyber-network\n8           litecoin\n9               iota\n10          ontology\n11              tron\n12          wanchain\n13           stellar\n14            ripple\n15             verge\n16                0x\n```\n\n### Social Volume\n\nFetch a list of mentions count for a given project and time interval.\n\n[Premium metric](#premium-metrics)\n\nArguments description:\n\n- `endpoint` - social_volume/project_slug\n- `interval` - an integer followed by one of: `m`, `h`, `d`, `w`\n- `from_date` - a string representation of datetime value according to the iso8601 standard, e.g. \"2018-04-16T10:02:19Z\"\n- `to_date` - a string representation of datetime value according to the iso8601 standard, e.g. \"2018-05-23T10:02:19Z\"\n- `social_volume_type` - the source of mention counts, one of the following:\n  - \"PROFESSIONAL_TRADERS_CHAT_OVERVIEW\" - shows how many times the given project was mentioned in the professional traders chat\n  - \"TELEGRAM_CHATS_OVERVIEW\" - shows how many times the given project was mentioned across all telegram chats, except the project's own community chat (if there is one)\n  - \"TELEGRAM_DISCUSSION_OVERVIEW\" - the general volume of messages in the project's community chat (if there is one)\n  - \"DISCORD_DISCUSSION_OVERVIEW\" - shows how many times the given project has been mentioned in the discord channels\n\n```python\nsan.get(\n    \"social_volume/dragonchain\",\n    interval=\"1d\",\n    from_date=\"2018-04-16T10:02:19Z\",\n    to_date=\"2018-05-23T10:02:19Z\",\n    social_volume_type=\"PROFESSIONAL_TRADERS_CHAT_OVERVIEW\"\n)\n```\n\nExample result:\n\n```\n                           mentionsCount\ndatetime\n2018-04-17 00:00:00+00:00              4\n2018-04-18 00:00:00+00:00              8\n2018-04-19 00:00:00+00:00              7\n2018-04-20 00:00:00+00:00              1\n2018-04-21 00:00:00+00:00              3\n2018-04-22 00:00:00+00:00              2\n2018-04-23 00:00:00+00:00              1\n```\n\n### Topic search\n\nReturns lists with the mentions of the search phrase from the selected source.\nThe results are in two formats - the messages themselves and the data for building graph representation of the result.\n\n[Premium metric](#premium-metrics)\n\nArguments description:\n\n- `endpoint` - a string in the format \"topic_search\"\n- `source` - one of the following:\n  - TELEGRAM\n  - PROFESSIONAL_TRADERS_CHAT\n  - REDDIT\n  - DISCORD\n- `search_text` - a string containing the key words for which the sources should be searched.\n- `from_date` - a string representation of datetime value according to the iso8601 standard, e.g. \"2018-04-16T10:02:19Z\"\n- `to_date` - a string representation of datetime value according to the iso8601 standard, e.g. \"2018-04-16T10:02:19Z\"\n- `interval` - an integer followed by one of: `m`, `h`, `d`, `w`\n\n```python\nsan.get(\n    \"topic_search\",\n    source=\"TELEGRAM\",\n    search_text=\"btc moon\",\n    from_date=\"2019-08-01T12:00:00Z\",\n    to_date=\"2019-08-02T12:00:00Z\",\n    interval=\"6h\"\n)\n```\n\nExample result:\n\n```\ndatetime                   mentionsCount\n2019-08-01 12:00:00+00:00            208\n2019-08-01 18:00:00+00:00            265\n2019-08-02 00:00:00+00:00            115\n2019-08-02 06:00:00+00:00            219\n2019-08-02 12:00:00+00:00            358\n2019-08-02 18:00:00+00:00            212\n2019-08-03 00:00:00+00:00            229\n2019-08-03 06:00:00+00:00            225\n```\n\n### Gas Used\n\nReturns used Gas by a blockchain. When you send tokens, interact with a contract or\ndo anything else on the blockchain, you must pay for that computation.\nThat payment is calculated in Gas. Currently only ETH is supported.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"gas_used/ethereum\",\n    from_date=\"2019-06-01\",\n    to_date=\"2019-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\ndatetime                       gasUsed\n2019-06-01 00:00:00+00:00  47405557702\n2019-06-02 00:00:00+00:00  44769162038\n2019-06-03 00:00:00+00:00  46415901420\n2019-06-04 00:00:00+00:00  46907686393\n2019-06-05 00:00:00+00:00  45925073341\n```\n\n### Miners Balance\n\nReturns miner balances over time. Currently only ETH is supported.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"miners_balance/ethereum\",\n    from_date=\"2019-06-01\",\n    to_date=\"2019-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\ndatetime                        balance\n2019-06-01 00:00:00+00:00  1.529488e+06\n2019-06-02 00:00:00+00:00  1.533494e+06\n2019-06-03 00:00:00+00:00  1.527438e+06\n2019-06-04 00:00:00+00:00  1.525666e+06\n2019-06-05 00:00:00+00:00  1.527563e+06\n```\n\n### Mining Pools Distribution\n\nReturns distribution of miners between mining pools. What part of the miners are using top3, top10 and all the other pools. Currently only ETH is supported.\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"mining_pools_distribution/ethereum\",\n    from_date=\"2019-06-01\",\n    to_date=\"2019-06-05\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\ndatetime                      other     top10      top3\n2019-06-01 00:00:00+00:00  0.129237  0.249906  0.620857\n2019-06-02 00:00:00+00:00  0.127432  0.251903  0.620666\n2019-06-03 00:00:00+00:00  0.122058  0.249603  0.628339\n2019-06-04 00:00:00+00:00  0.127726  0.254982  0.617293\n2019-06-05 00:00:00+00:00  0.120436  0.265842  0.613722\n```\n\n### Historical Balance\n\nHistorical balance for erc20 token or eth address. Returns the historical balance for a given address in the given interval.\n\n```python\nsan.get(\n    \"historical_balance/santiment\",\n    address=\"0x1f3df0b8390bb8e9e322972c5e75583e87608ec2\",\n    from_date=\"2019-04-18\",\n    to_date=\"2019-04-23\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\ndatetime                     balance\n2019-04-18 00:00:00+00:00  382338.33\n2019-04-19 00:00:00+00:00  382338.33\n2019-04-20 00:00:00+00:00  382338.33\n2019-04-21 00:00:00+00:00  215664.33\n2019-04-22 00:00:00+00:00  215664.33\n```\n\n### Social Dominance\n\nReturns the % of the social dominance a given project has over time in a given social channel.\n\nAvailable sources are:\n\n- PROFESSIONAL_TRADERS_CHAT\n- TELEGRAM\n- DISCORD\n- REDDIT\n- ALL\n\n[Premium metric](#premium-metrics)\n\n```python\nsan.get(\n    \"social_dominance/santiment\",\n    from_date=\"2019-04-08\",\n    to_date=\"2019-04-13\",\n    interval=\"1d\",\n    source=\"ALL\"\n)\n```\n\nExample result:\n\n```\ndatetime                   dominance\n2019-04-08 00:00:00+00:00   0.043028\n2019-04-09 00:00:00+00:00   0.025337\n2019-04-10 00:00:00+00:00   0.045376\n2019-04-11 00:00:00+00:00   0.036051\n2019-04-12 00:00:00+00:00   0.035585\n2019-04-13 00:00:00+00:00   0.034957\n```\n\n### Top Holders Percent Of Total Supply\n\nReturns the top holders' percent of total supply - in exchanges, outside exchanges and combined.\n\n```python\nsan.get(\n    \"top_holders_percent_of_total_supply/ethereum\",\n    number_of_holders=10,\n    from_date=\"2019-04-08\",\n    to_date=\"2019-04-11\"\n)\n```\n\nExample Result:\n\n```\ndatetime                   inExchanges  inTopHoldersTotal  outsideExchanges\n2019-04-09 00:00:00+00:00     7.977318          13.277961          5.300643\n2019-04-10 00:00:00+00:00     7.976282          13.310953          5.334671\n2019-04-11 00:00:00+00:00     7.975260          13.296356          5.321096\n```\n\n### History Twitter Data\n\nFetch the historical count of twitter followers.\n\n```python\nsan.get(\n    \"history_twitter_data/santiment\",\n    from_date=\"2019-04-08\",\n    to_date=\"2019-04-13\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\ndatetime                   followers_count\n2019-04-08 00:00:00+00:00            10524\n2019-04-09 00:00:00+00:00            10524\n2019-04-10 00:00:00+00:00            10525\n2019-04-11 00:00:00+00:00            10520\n2019-04-12 00:00:00+00:00            10526\n2019-04-13 00:00:00+00:00            10529\n```\n\n### Price Volume Difference\n\nFetch the price-volume difference technical indicator for a given slug, display currency and time period. This indicator measures the difference in trend between price and volume, specifically when price goes up as volume goes down.\n\n```python\nsan.get(\n    \"price_volume_difference/santiment\",\n    from_date=\"2019-04-18\",\n    to_date=\"2019-04-23\",\n    interval=\"1d\",\n    currency=\"USD\"\n)\n```\n\nExample result:\n\n```\ndatetime                   priceChange  priceVolumeDiff  volumeChange\n2019-04-18 00:00:00+00:00     0.017779         0.013606 -39908.007476\n2019-04-19 00:00:00+00:00     0.012587         0.007332 -31195.568878\n2019-04-20 00:00:00+00:00     0.009062         0.004169 -24550.100411\n2019-04-21 00:00:00+00:00     0.002573         0.001035 -19307.845911\n2019-04-22 00:00:00+00:00     0.001527         0.000703 -20317.934666\n```\n\n### Ethereum Top Transactions\n\nTop ETH transactions for project's team wallets.\n\nAvailable transaction types:\n\n- ALL\n- IN\n- OUT\n\n```python\nsan.get(\n    \"eth_top_transactions/santiment\",\n    from_date=\"2019-04-18\",\n    to_date=\"2019-04-30\",\n    limit=5,\n    transaction_type=\"ALL\"\n)\n```\n\nExample result:\n\n**The result is shortened for convenience**\n\n```\ndatetime                           fromAddress  fromAddressInExchange           toAddress  toAddressInExchange              trxHash      trxValue\n2019-04-29 21:33:31+00:00  0xe76fe52a251c8f...                  False  0x45d6275d9496b...                False  0x776cd57382456a...        100.00\n2019-04-29 21:21:18+00:00  0xe76fe52a251c8f...                  False  0x468bdccdc334f...                False  0x848414fb5c382f...         40.95\n2019-04-19 14:14:52+00:00  0x1f3df0b8390bb8...                  False  0xd69bc0585e05e...                False  0x590512e1f1fbcf...         19.48\n2019-04-19 14:09:58+00:00  0x1f3df0b8390bb8...                  False  0x723fb5c14eaff...                False  0x78e0720b9e72d1...         15.15\n```\n\n### Ethereum Spent Over Time\n\nETH spent for each interval from the project's team wallet and time period\n\n```python\nsan.get(\n    \"eth_spent_over_time/santiment\",\n    from_date=\"2019-04-18\",\n    to_date=\"2019-04-23\",\n    interval=\"1d\"\n)\n```\n\nExample result:\n\n```\ndatetime                    ethSpent\n2019-04-18 00:00:00+00:00   0.000000\n2019-04-19 00:00:00+00:00  34.630284\n2019-04-20 00:00:00+00:00   0.000000\n2019-04-21 00:00:00+00:00   0.000158\n2019-04-22 00:00:00+00:00   0.000000\n```\n\n### Token Top Transactions\n\nTop transactions for the token of a given project\n\n```python\nsan.get(\n    \"token_top_transactions/santiment\",\n    from_date=\"2019-04-18\",\n    to_date=\"2019-04-30\",\n    limit=5\n)\n```\n\nExample result:\n\n**The result is shortened for convenience**\n\n```\ndatetime                           fromAddress  fromAddressInExchange           toAddress  toAddressInExchange              trxHash      trxValue\n2019-04-21 13:51:59+00:00  0x1f3df0b8390bb8...                  False  0x5eaae5e949952...                False  0xdbced935b09dd0...  166674.00000\n2019-04-28 07:43:38+00:00  0x0a920bfdf7f977...                  False  0x868074aab18ea...                False  0x5f2214d34bcdc3...   33181.82279\n2019-04-28 07:53:32+00:00  0x868074aab18ea3...                  False  0x876eabf441b2e...                 True  0x90bd286da38a2b...   33181.82279\n2019-04-26 14:38:45+00:00  0x876eabf441b2ee...                   True  0x76af586d041d6...                False  0xe45b86f415e930...   28999.64023\n2019-04-30 15:17:28+00:00  0x876eabf441b2ee...                   True  0x1f4a90043cf2d...                False  0xc85892b9ef8c64...   20544.42975\n```\n\n### Full list of on-chain metrics (including timebounded)\n\nThis list includes:\n\n- MVRV\n- Age Destroyed\n- Transaction Volume\n- Circulation\n- NVT\n- Realized Value\n- Realized Price\n- Velocity\n- Mean Age\n- Exchange Metrics\n\nAll of the following metrics have accept the same parameters and have the same response structure\n\nReturns data for a given metric. The input, that is needed, is the string 'metric/slug', a 'from' date, a 'to' date, a string for the interval and an aggregation, which is optional (When not given, the aggregation is determined automatically by the API).\n\nThe available metrics can be seen [here](./on-chain-metrics.md):\n\n```python\nsan.get(\n   \"daily_active_addresses/santiment\",\n   from_date=\"2019-08-31\",\n   to_date=\"2019-09-03\",\n   interval=\"2d\",\n   aggregation=\"AVG\"\n)\n```\n\nExample result:\n\n```\ndatetime                      value\n2019-08-30 00:00:00+00:00    4.0\n2019-09-01 00:00:00+00:00    5.5\n2019-09-03 00:00:00+00:00    9.0\n```\n\n### Emerging Trends\n\nEmerging trends for a given period of time\n\n```python\nsan.get(\n    \"emerging_trends\",\n    from_date=\"2019-07-01\",\n    to_date=\"2019-07-02\",\n    interval=\"1d\",\n    size=5\n)\n```\n\nExample result:\n\n```\ndatetime                        score    word\n2019-07-01 00:00:00+00:00  375.160034    lnbc\n2019-07-01 00:00:00+00:00  355.323281    dent\n2019-07-01 00:00:00+00:00  268.653820    link\n2019-07-01 00:00:00+00:00  231.721809  shorts\n2019-07-01 00:00:00+00:00  206.812798     btt\n2019-07-02 00:00:00+00:00  209.343752  bounce\n2019-07-02 00:00:00+00:00  135.412811    vidt\n2019-07-02 00:00:00+00:00  116.842801     bat\n2019-07-02 00:00:00+00:00   98.517600  bottom\n2019-07-02 00:00:00+00:00   89.309975   haiku\n```\n\n### Top Social Gainers Losers\n\nTop social gainers/losers returns the social volume changes for crypto projects.\n\n```python\nsan.get(\n    \"top_social_gainers_losers\",\n    from_date=\"2019-07-18\",\n    to_date=\"2019-07-30\",\n    size=5,\n    time_window=\"2d\",\n    status=\"ALL\"\n)\n```\n\nExample result:\n\n**The result is shortened for convenience**\n\n```\ndatetime                              slug     change    status\n2019-07-28 01:00:00+00:00     libra-credit  21.000000    GAINER\n2019-07-28 01:00:00+00:00             aeon  -1.000000     LOSER\n2019-07-28 01:00:00+00:00    thunder-token   5.000000  NEWCOMER\n2019-07-28 02:00:00+00:00     libra-credit  43.000000    GAINER\n...                                    ...        ...       ...\n2019-07-30 07:00:00+00:00            storj  12.000000  NEWCOMER\n2019-07-30 11:00:00+00:00            storj  21.000000    GAINER\n2019-07-30 11:00:00+00:00            aergo  -1.000000     LOSER\n2019-07-30 11:00:00+00:00            litex   8.000000  NEWCOMER\n```\n\n### Metadata\n\nFetching the metadata for an on-chain metric.\n\n```python\nsan.metadata(\n    \"nvt\",\n    arr=['metric', 'defaultAggregation']\n)\n```\n\nExample result:\n\n```\n{'defaultAggregation': 'AVG', 'metric': 'nvt'}\n\n```\n\n## Extras\n\nTake a look at the [examples](/examples/extras) folder.\n\n## Development\n\nIt is recommended to use [pipenv](https://github.com/pypa/pipenv) for managing your local environment.\n\nSetup project:\n\n```\npipenv install\n```\n\nInstall main dependencies:\n\n```\npipenv run pip install -e .\n```\n\nInstall extra dependencies:\n\n```\npipenv run pip install -e '.[extras]'\n```\n\n## Running tests\n\n```\npython setup.py test\n```\n\n## Running integration tests\n\n```\npython setup.py nosetests -a integration\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/santiment/sanpy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sanpy", "package_url": "https://pypi.org/project/sanpy/", "platform": "", "project_url": "https://pypi.org/project/sanpy/", "project_urls": {"Homepage": "https://github.com/santiment/sanpy"}, "release_url": "https://pypi.org/project/sanpy/0.7.18/", "requires_dist": ["pandas", "requests", "iso8601", "setuptools", "numpy ; extra == 'extras'", "matplotlib ; extra == 'extras'"], "requires_python": "", "summary": "Package for Santiment API access with python", "version": "0.7.18", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sanpy</h1>\n<p><a href=\"https://badge.fury.io/py/sanpy\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0aaae38601aac8b9e7c23d8e6527694262b4e9c/68747470733a2f2f62616467652e667572792e696f2f70792f73616e70792e737667\"></a></p>\n<p>Santiment API python client.</p>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#table-of-contents\" rel=\"nofollow\">Table of contents</a>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#upgrade-to-latest-version\" rel=\"nofollow\">Upgrade to latest version</a></li>\n<li><a href=\"#configuration\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#retrieving-data-from-the-api\" rel=\"nofollow\">Retrieving data from the API</a>\n<ul>\n<li><a href=\"#fetch-single-metric\" rel=\"nofollow\">Fetch single metric</a></li>\n<li><a href=\"#batching-multiple-queries\" rel=\"nofollow\">Batching multiple queries</a></li>\n</ul>\n</li>\n<li><a href=\"#available-metrics\" rel=\"nofollow\">Available metrics</a>\n<ul>\n<li><a href=\"#full-list-of-on-chain-metrics-including-timebounded\" rel=\"nofollow\">Full list of on-chain metrics (including timebounded)</a></li>\n<li><a href=\"#all-projects\" rel=\"nofollow\">All Projects</a></li>\n<li><a href=\"#erc20-projects\" rel=\"nofollow\">ERC20 Projects</a></li>\n<li><a href=\"#daily-active-addresses\" rel=\"nofollow\">Daily Active Addresses</a></li>\n<li><a href=\"#network-growth\" rel=\"nofollow\">Network Growth</a></li>\n<li><a href=\"#burn-rate---deprecated-replaced-by-token-age-consumed\" rel=\"nofollow\">Burn Rate - deprecated, replaced by 'Token Age Consumed'</a></li>\n<li><a href=\"#token-age-consumed\" rel=\"nofollow\">Token Age Consumed</a></li>\n<li><a href=\"#average-token-age-consumed-in-days\" rel=\"nofollow\">Average Token Age Consumed in Days</a></li>\n<li><a href=\"#transaction-volume\" rel=\"nofollow\">Transaction volume</a></li>\n<li><a href=\"#token-velocity\" rel=\"nofollow\">Token Velocity</a></li>\n<li><a href=\"#token-circulation\" rel=\"nofollow\">Token Circulation</a></li>\n<li><a href=\"#realized-value\" rel=\"nofollow\">Realized Value</a></li>\n<li><a href=\"#mvrv-ratio\" rel=\"nofollow\">MVRV Ratio</a></li>\n<li><a href=\"#nvt-ratio\" rel=\"nofollow\">NVT Ratio</a></li>\n<li><a href=\"#daily-active-deposits\" rel=\"nofollow\">Daily Active Deposits</a></li>\n<li><a href=\"#github-activity\" rel=\"nofollow\">Github Activity</a></li>\n<li><a href=\"#prices\" rel=\"nofollow\">Prices</a></li>\n<li><a href=\"#open-high-close-low-prices-volume-marketcap\" rel=\"nofollow\">Open, High, Close, Low Prices, Volume, Marketcap</a></li>\n<li><a href=\"#exchange-funds-flow\" rel=\"nofollow\">Exchange Funds Flow</a></li>\n<li><a href=\"#social-volume-projects\" rel=\"nofollow\">Social Volume Projects</a></li>\n<li><a href=\"#social-volume\" rel=\"nofollow\">Social Volume</a></li>\n<li><a href=\"#gas-used\" rel=\"nofollow\">Gas Used</a></li>\n<li><a href=\"#miners-balance\" rel=\"nofollow\">Miners Balance</a></li>\n<li><a href=\"#mining-pools-distribution\" rel=\"nofollow\">Mining Pools Distribution</a></li>\n<li><a href=\"#historical-balance\" rel=\"nofollow\">Historical Balance</a></li>\n<li><a href=\"#social-dominance\" rel=\"nofollow\">Social Dominance</a></li>\n<li><a href=\"#top-holders-percent-of-total-supply\" rel=\"nofollow\">Top Holders Percent of Total Supply</a></li>\n<li><a href=\"#history-twitter-data\" rel=\"nofollow\">History Twitter Data</a></li>\n<li><a href=\"#price-volume-difference\" rel=\"nofollow\">Price Volume Difference</a></li>\n<li><a href=\"#ethereum-top-transactions\" rel=\"nofollow\">Ethereum Top Transactions</a></li>\n<li><a href=\"#ethereum-spent-over-time\" rel=\"nofollow\">Ethereum Spent Over Time</a></li>\n<li><a href=\"#token-top-transactions\" rel=\"nofollow\">Token Top Transactions</a></li>\n<li><a href=\"#emerging-trends\" rel=\"nofollow\">Emerging Trends</a></li>\n<li><a href=\"#top-social-gainers-losers\" rel=\"nofollow\">Top Social Gainers Losers</a></li>\n<li><a href=\"#available-metrics\" rel=\"nofollow\">Available metrics</a></li>\n<li><a href=\"#metadata\" rel=\"nofollow\">Metadata</a></li>\n</ul>\n</li>\n<li><a href=\"#extras\" rel=\"nofollow\">Extras</a></li>\n<li><a href=\"#development\" rel=\"nofollow\">Development</a></li>\n<li><a href=\"#running-tests\" rel=\"nofollow\">Running tests</a></li>\n<li><a href=\"#running-integration-tests\" rel=\"nofollow\">Running integration tests</a></li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install sanpy\n</code></pre>\n<h2>Upgrade to latest version</h2>\n<pre><code>pip install --upgrade sanpy\n</code></pre>\n<h2>Install extra packages</h2>\n<p>There are few scripts under <a href=\"/san/extras\" rel=\"nofollow\">extras</a> directory. To install their dependencies use:</p>\n<pre><code>pip install sanpy[extras]\n</code></pre>\n<h2>Premium metrics</h2>\n<p>In order to access real time data or historical data (older than 3 months),\nyou'll need to set the <a href=\"#configuration\" rel=\"nofollow\">api key</a> and have some SAN tokens in your account.\nAll premium metrics are free for \"santiment\" token.</p>\n<h2>Configuration</h2>\n<p>Optionally you can provide an api key which gives access to some premium metrics:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">san</span>\n<span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">ApiConfig</span><span class=\"o\">.</span><span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'api-key-provided-by-sanbase'</span>\n</pre>\n<p>To obtain an api key you should <a href=\"https://app.santiment.net/login\" rel=\"nofollow\">log in to sanbase</a>\nand go to the <code>account</code> page - <a href=\"https://app.santiment.net/account\" rel=\"nofollow\">https://app.santiment.net/account</a>.\nThere is an <code>API Keys</code> section and a <code>Generate new api key</code> button.</p>\n<p>If the account used for generating the api key has enough SAN tokens, the api key will give you\naccess to the data that requires SAN token staking. The api key can only be used to fetch data and not to execute graphql mutations.</p>\n<h2>Retrieving data from the API</h2>\n<p>The data is fetched by providing a string in the format <code>query/slug</code> and additional parameters.</p>\n<ul>\n<li><code>query</code>: Available queries can be found in section: <a href=\"#available-metrics\" rel=\"nofollow\">Available metrics</a></li>\n<li><code>slug</code>: A list of projects with their slugs, names, etc. can be fetched like this:</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">san</span>\n<span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"projects/all\"</span><span class=\"p\">)</span>\n</pre>\n<pre><code>                name             slug ticker   totalSupply\n0             0chain           0chain    ZCN     400000000\n1                 0x               0x    ZRX    1000000000\n2          0xBitcoin            0xbtc  0xBTC      20999984\n...\n</code></pre>\n<p>Parameters:</p>\n<ul>\n<li><code>from_date</code>, <code>to_date</code> - A date or datetime in iso8601 format specifying the start and end datetime for the returned data for ex: <code>2018-06-01</code></li>\n<li><code>interval</code> - The interval of the returned data - an integer followed by one of: <code>s</code>, <code>m</code>, <code>h</code>, <code>d</code> or <code>w</code></li>\n</ul>\n<p>Default values for parameters:</p>\n<ul>\n<li><code>from_date</code>: <code>datetime.now() - 365 days</code></li>\n<li><code>to_date</code>: <code>datetime.now()</code></li>\n<li><code>interval</code>: <code>'1d'</code></li>\n</ul>\n<p>The returned value for time-series data is in <code>pandas DataFrame</code> format indexed by <code>datetime</code>.</p>\n<h3>Fetch single metric</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">san</span>\n\n<span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"daily_active_addresses/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"prices/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Using the defaults params:</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"daily_active_addresses/santiment\"</span><span class=\"p\">)</span>\n<span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"prices/santiment\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Batching multiple queries</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">san</span> <span class=\"kn\">import</span> <span class=\"n\">Batch</span>\n\n<span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"n\">Batch</span><span class=\"p\">()</span>\n\n<span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"daily_active_addresses/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"daily_active_addresses/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-06\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-10\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"n\">daa1</span><span class=\"p\">,</span> <span class=\"n\">daa2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">()</span>\n</pre>\n<h2>Available metrics</h2>\n<p>Getting all of the metrics as a list is done, using the following code:</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">available_metrics</span><span class=\"p\">()</span>\n</pre>\n<p>Below are described some available metrics and are given examples for fetching and for the returned format.</p>\n<h3>All Projects</h3>\n<p>Returns a DataFrame with all the projects available in the Santiment API. Not all\nmetrics will be available for all the projects. The <code>slug</code> is a unique identifier\nwhich can be used to retrieve most of the metrics.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"projects/all\"</span><span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre>                 name             slug ticker   totalSupply\n0              0chain           0chain    ZCN     400000000\n1                  0x               0x    ZRX    1000000000\n2           0xBitcoin            0xbtc  0xBTC      20999984\n3     0xcert Protocol           0xcert    ZXC     500000000\n4              1World           1world    1WO      37219453\n5        AB-Chain RTB     ab-chain-rtb    RTB      27857813\n6             Abulaba          abulaba    AAA     397000000\n7                 AC3              ac3    AC3    80235326.0\n...\n</pre>\n<h3>ERC20 Projects</h3>\n<p>Returns a DataFrame with all the ERC20 projects available in the Santiment API.\nNot all metrics will be available for all the projects. The <code>slug</code> is a unique\nidentifier which can be used to retrieve most of the metrics.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"projects/erc20\"</span><span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                      name                   slug ticker   totalSupply\n0                   0chain                 0chain    ZCN     400000000\n1                       0x                     0x    ZRX    1000000000\n2                0xBitcoin                  0xbtc  0xBTC      20999984\n3          0xcert Protocol                 0xcert    ZXC     500000000\n4                   1World                 1world    1WO      37219453\n5             AB-Chain RTB           ab-chain-rtb    RTB      27857813\n6                  Abulaba                abulaba    AAA     397000000\n7                   adbank                 adbank    ADB    1000000000\n...\n</code></pre>\n<h3>Daily Active Addresses</h3>\n<p>This metric includes the number of unique addresses that participated in the transfers of given token during the day.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"daily_active_addresses/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                                     value\ndatetime\n2018-06-01 00:00:00+00:00                2\n2018-06-02 00:00:00+00:00                4\n2018-06-03 00:00:00+00:00                6\n2018-06-04 00:00:00+00:00                6\n2018-06-05 00:00:00+00:00               14\n</code></pre>\n<h3>Network Growth</h3>\n<p>Network Growth shows the number of new addresses being created on the project network each day.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"network_growth/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-12-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-12-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<pre><code>                          newAddresses\ndatetime\n2018-12-01 00:00:00+00:00            3\n2018-12-02 00:00:00+00:00            2\n2018-12-03 00:00:00+00:00            6\n2018-12-04 00:00:00+00:00            2\n2018-12-05 00:00:00+00:00            1\n</code></pre>\n<h3>Burn Rate - deprecated, replaced by 'Token Age Consumed'</h3>\n<p>Each transaction has an equivalent burn rate record. The burn rate is calculated by multiplying\nthe number of tokens moved by the number of blocks in which they appeared.\nSpikes in burn rate could indicate large transactions or movement of tokens that have been held for a long time.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<p>Burn rate returns the same results as 'Token Age Consumed' and will be removed in the near future.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"burn_rate/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                               burnRate\ndatetime\n2018-05-01 00:00:00+00:00      2.514926e+09\n2018-05-02 00:00:00+00:00      1.363158e+10\n2018-05-03 00:00:00+00:00      2.182971e+09\n2018-05-04 00:00:00+00:00      9.731035e+09\n2018-05-05 00:00:00+00:00      2.867054e+10\n</code></pre>\n<h3>Token Age Consumed</h3>\n<p>Each transaction has an equivalent 'Age consumed' record. The consumed age is calculated by multiplying\nthe number of tokens moved by the number of blocks in which they appeared.\nSpikes in consumed token age could indicate large transactions or movement of tokens that\nhave been held for a long time.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"token_age_consumed/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           tokenAgeConsumed\ndatetime\n2018-05-01 00:00:00+00:00      2.514926e+09\n2018-05-02 00:00:00+00:00      1.363158e+10\n2018-05-03 00:00:00+00:00      2.182971e+09\n2018-05-04 00:00:00+00:00      9.731035e+09\n2018-05-05 00:00:00+00:00      2.867054e+10\n</code></pre>\n<h3>Average Token Age Consumed in Days</h3>\n<p>Based on 'Token Age Consumed' above, this returns the Token Age that gets consumed on\naverage over the interval. The result is given in days instead of blocks.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"average_token_age_consumed_in_days/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                             tokenAge\ndatetime\n2018-05-01 00:00:00+00:00    6.353738\n2018-05-02 00:00:00+00:00   22.303985\n2018-05-03 00:00:00+00:00    3.873644\n2018-05-04 00:00:00+00:00  140.566428\n2018-05-05 00:00:00+00:00   56.730010\n</code></pre>\n<h3>Transaction Volume</h3>\n<p>Total amount of tokens for a project that were transacted on the blockchain.\nThis metric includes only on-chain volume, not volume in exchanges.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"transaction_volume/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                                       value\ndatetime\n2018-06-01 00:00:00+00:00          46.848943\n2018-06-02 00:00:00+00:00         666.194095\n2018-06-03 00:00:00+00:00       31326.856743\n2018-06-04 00:00:00+00:00        1371.245641\n2018-06-05 00:00:00+00:00       42825.036598\n</code></pre>\n<h3>Token Velocity</h3>\n<p>Token Velocity returns the average number of times that a token changes wallets over the interval.\nSimply put, a higher token velocity means that the same token is used in transactions more\noften within a set time frame.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"token_velocity/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span><span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           tokenVelocity\ndatetime\n2018-06-01 00:00:00+00:00           1.00\n2018-06-02 00:00:00+00:00           3.00\n2018-06-03 00:00:00+00:00           1.97\n2018-06-04 00:00:00+00:00           1.00\n2018-06-05 00:00:00+00:00           2.92\n</code></pre>\n<h3>Token Circulation</h3>\n<p>Token Circulation returns the total amount of tokens that have been sent at least once during\neach given time period. Minimum interval is '1d'.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"token_circulation/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           tokenCirculation\ndatetime\n2018-06-01 00:00:00+00:00         46.848943\n2018-06-02 00:00:00+00:00        222.194095\n2018-06-03 00:00:00+00:00      15933.955221\n2018-06-04 00:00:00+00:00       1371.245641\n2018-06-05 00:00:00+00:00      14678.249398\n</code></pre>\n<h3>Realized Value</h3>\n<p>Realized Value returns the total acquisition cost of all tokens on the network,\nbased on the historical price when each coin was last sent, in USD.\nReturns RV for all tokens and RV for all tokens known to be on exchanges.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"realized_value/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           nonExchangeRealizedValue  realizedValue\ndatetime\n2018-06-01 00:00:00+00:00              2.334917e+07   9.248495e+07\n2018-06-02 00:00:00+00:00              2.334917e+07   9.248498e+07\n2018-06-03 00:00:00+00:00              2.335106e+07   9.248275e+07\n2018-06-04 00:00:00+00:00              2.335138e+07   9.248269e+07\n2018-06-05 00:00:00+00:00              2.335073e+07   9.243114e+07\n</code></pre>\n<h3>MVRV Ratio</h3>\n<p>MVRV ratio returns the ratio of the market value of all tokens (market cap) to the\nrealized value of all tokens.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"mvrv_ratio/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                              ratio\ndatetime\n2018-06-01 00:00:00+00:00  0.836489\n2018-06-02 00:00:00+00:00  0.850379\n2018-06-03 00:00:00+00:00  0.848195\n2018-06-04 00:00:00+00:00  0.822243\n2018-06-05 00:00:00+00:00  0.781964\n</code></pre>\n<h3>NVT Ratio</h3>\n<p>NVT ratio returns the Network-Value-to-Transactions ratio. We use the market cap as network value\nand either token circulation or transaction volume as a measurement for transactions, returning two values.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"nvt_ratio/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           nvtRatioCirculation  nvtRatioTxVolume\ndatetime\n2018-06-01 00:00:00+00:00         1.337498e+06      1.337498e+06\n2018-06-02 00:00:00+00:00         2.820074e+05      9.405723e+04\n2018-06-03 00:00:00+00:00         3.868500e+03      2.000213e+03\n2018-06-04 00:00:00+00:00         4.569595e+04      4.569595e+04\n2018-06-05 00:00:00+00:00         4.268927e+03      1.463171e+03\n</code></pre>\n<h3>Daily Active Deposits</h3>\n<p>Daily Active Deposits, similar to Daily Active Addresses, returns the number of unique addresses\nthat participated in the transfers of tokens to exchange deposit addresses during the day.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"daily_active_deposits/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           activeDeposits\ndatetime\n2018-06-01 00:00:00+00:00               0\n2018-06-02 00:00:00+00:00               2\n2018-06-03 00:00:00+00:00               0\n2018-06-04 00:00:00+00:00               2\n2018-06-05 00:00:00+00:00               6\n</code></pre>\n<h3>Github Activity</h3>\n<p>Returns a list of github activity for a given slug and time interval.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<p><a href=\"https://medium.com/santiment/tracking-github-activity-of-crypto-projects-introducing-a-better-approach-9fb1af3f1c32\" rel=\"nofollow\">An article explaining the github activity tracking</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"github_activity/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           activity\ndatetime\n2018-05-02 00:00:00+00:00        32\n2018-05-03 00:00:00+00:00         9\n2018-05-04 00:00:00+00:00        18\n</code></pre>\n<p>You can also fetch only events connected to development activity by using the <code>devActivity</code> query.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"dev_activity/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           activity\ndatetime\n2018-05-02 00:00:00+00:00        29\n2018-05-03 00:00:00+00:00         9\n2018-05-04 00:00:00+00:00        16\n</code></pre>\n<h3>Prices</h3>\n<p>Fetch history price in USD or BTC, traded volume and marketcap for a given slug.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"prices/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"prices/ethereum\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                              marketcap  priceBtc  priceUsd   volume\ndatetime\n2018-06-01 00:00:00+00:00  7.736268e+07  0.000165  1.234635   852857\n2018-06-02 00:00:00+00:00  7.864724e+07  0.000165  1.255135  1242520\n2018-06-03 00:00:00+00:00  7.844339e+07  0.000163  1.251882  1032910\n2018-06-04 00:00:00+00:00  7.604326e+07  0.000160  1.213578   617451\n\n                              marketcap  priceBtc    priceUsd      volume\ndatetime\n2018-06-01 00:00:00+00:00  5.756716e+10  0.077083  576.825315  1945890000\n2018-06-02 00:00:00+00:00  5.875660e+10  0.077475  588.620775  1880390000\n2018-06-03 00:00:00+00:00  6.097134e+10  0.079460  610.682490  1832550000\n2018-06-04 00:00:00+00:00  6.015676e+10  0.079466  602.399792  1903430000\n</code></pre>\n<h3>Open, High, Close, Low Prices, Volume, Marketcap</h3>\n<p>Note: this query cannot be batched!</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"ohlcv/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           openPriceUsd  closePriceUsd  highPriceUsd  lowPriceUsd   volume     marketcap\ndatetime\n2018-06-01 00:00:00+00:00       1.24380        1.27668       1.26599      1.19099   852857  7.736268e+07\n2018-06-02 00:00:00+00:00       1.26136        1.30779       1.27612      1.20958  1242520  7.864724e+07\n2018-06-03 00:00:00+00:00       1.28270        1.28357       1.24625      1.21872  1032910  7.844339e+07\n2018-06-04 00:00:00+00:00       1.23276        1.24910       1.18528      1.18010   617451  7.604326e+07\n</code></pre>\n<h3>Exchange Funds Flow</h3>\n<p>Fetch the difference between the tokens that were deposited minus the tokens that were withdrawn\nfrom an exchange for a given slug in the selected time period.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"exchange_funds_flow/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-04-16T10:02:19Z\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-23T10:02:19Z\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                         inOutDifference\ndatetime\n2018-04-16 10:02:19+00:00    -208.797310\n2018-04-17 00:00:00+00:00     164.006467\n2018-04-18 00:00:00+00:00       0.000000\n2018-04-19 00:00:00+00:00  -45213.112849\n2018-04-20 00:00:00+00:00 -135364.839572\n</code></pre>\n<h3>Social Volume Projects</h3>\n<p>Fetch a list of slugs for which there is social volume data.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"social_volume_projects\"</span><span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                   0\n0            cardano\n1       bitcoin-cash\n2            bitcoin\n3        dragonchain\n4                eos\n5   ethereum-classic\n6           ethereum\n7      kyber-network\n8           litecoin\n9               iota\n10          ontology\n11              tron\n12          wanchain\n13           stellar\n14            ripple\n15             verge\n16                0x\n</code></pre>\n<h3>Social Volume</h3>\n<p>Fetch a list of mentions count for a given project and time interval.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<p>Arguments description:</p>\n<ul>\n<li><code>endpoint</code> - social_volume/project_slug</li>\n<li><code>interval</code> - an integer followed by one of: <code>m</code>, <code>h</code>, <code>d</code>, <code>w</code></li>\n<li><code>from_date</code> - a string representation of datetime value according to the iso8601 standard, e.g. \"2018-04-16T10:02:19Z\"</li>\n<li><code>to_date</code> - a string representation of datetime value according to the iso8601 standard, e.g. \"2018-05-23T10:02:19Z\"</li>\n<li><code>social_volume_type</code> - the source of mention counts, one of the following:\n<ul>\n<li>\"PROFESSIONAL_TRADERS_CHAT_OVERVIEW\" - shows how many times the given project was mentioned in the professional traders chat</li>\n<li>\"TELEGRAM_CHATS_OVERVIEW\" - shows how many times the given project was mentioned across all telegram chats, except the project's own community chat (if there is one)</li>\n<li>\"TELEGRAM_DISCUSSION_OVERVIEW\" - the general volume of messages in the project's community chat (if there is one)</li>\n<li>\"DISCORD_DISCUSSION_OVERVIEW\" - shows how many times the given project has been mentioned in the discord channels</li>\n</ul>\n</li>\n</ul>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"social_volume/dragonchain\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-04-16T10:02:19Z\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2018-05-23T10:02:19Z\"</span><span class=\"p\">,</span>\n    <span class=\"n\">social_volume_type</span><span class=\"o\">=</span><span class=\"s2\">\"PROFESSIONAL_TRADERS_CHAT_OVERVIEW\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>                           mentionsCount\ndatetime\n2018-04-17 00:00:00+00:00              4\n2018-04-18 00:00:00+00:00              8\n2018-04-19 00:00:00+00:00              7\n2018-04-20 00:00:00+00:00              1\n2018-04-21 00:00:00+00:00              3\n2018-04-22 00:00:00+00:00              2\n2018-04-23 00:00:00+00:00              1\n</code></pre>\n<h3>Topic search</h3>\n<p>Returns lists with the mentions of the search phrase from the selected source.\nThe results are in two formats - the messages themselves and the data for building graph representation of the result.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<p>Arguments description:</p>\n<ul>\n<li><code>endpoint</code> - a string in the format \"topic_search\"</li>\n<li><code>source</code> - one of the following:\n<ul>\n<li>TELEGRAM</li>\n<li>PROFESSIONAL_TRADERS_CHAT</li>\n<li>REDDIT</li>\n<li>DISCORD</li>\n</ul>\n</li>\n<li><code>search_text</code> - a string containing the key words for which the sources should be searched.</li>\n<li><code>from_date</code> - a string representation of datetime value according to the iso8601 standard, e.g. \"2018-04-16T10:02:19Z\"</li>\n<li><code>to_date</code> - a string representation of datetime value according to the iso8601 standard, e.g. \"2018-04-16T10:02:19Z\"</li>\n<li><code>interval</code> - an integer followed by one of: <code>m</code>, <code>h</code>, <code>d</code>, <code>w</code></li>\n</ul>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"topic_search\"</span><span class=\"p\">,</span>\n    <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s2\">\"TELEGRAM\"</span><span class=\"p\">,</span>\n    <span class=\"n\">search_text</span><span class=\"o\">=</span><span class=\"s2\">\"btc moon\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-08-01T12:00:00Z\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-08-02T12:00:00Z\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"6h\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                   mentionsCount\n2019-08-01 12:00:00+00:00            208\n2019-08-01 18:00:00+00:00            265\n2019-08-02 00:00:00+00:00            115\n2019-08-02 06:00:00+00:00            219\n2019-08-02 12:00:00+00:00            358\n2019-08-02 18:00:00+00:00            212\n2019-08-03 00:00:00+00:00            229\n2019-08-03 06:00:00+00:00            225\n</code></pre>\n<h3>Gas Used</h3>\n<p>Returns used Gas by a blockchain. When you send tokens, interact with a contract or\ndo anything else on the blockchain, you must pay for that computation.\nThat payment is calculated in Gas. Currently only ETH is supported.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"gas_used/ethereum\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                       gasUsed\n2019-06-01 00:00:00+00:00  47405557702\n2019-06-02 00:00:00+00:00  44769162038\n2019-06-03 00:00:00+00:00  46415901420\n2019-06-04 00:00:00+00:00  46907686393\n2019-06-05 00:00:00+00:00  45925073341\n</code></pre>\n<h3>Miners Balance</h3>\n<p>Returns miner balances over time. Currently only ETH is supported.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"miners_balance/ethereum\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                        balance\n2019-06-01 00:00:00+00:00  1.529488e+06\n2019-06-02 00:00:00+00:00  1.533494e+06\n2019-06-03 00:00:00+00:00  1.527438e+06\n2019-06-04 00:00:00+00:00  1.525666e+06\n2019-06-05 00:00:00+00:00  1.527563e+06\n</code></pre>\n<h3>Mining Pools Distribution</h3>\n<p>Returns distribution of miners between mining pools. What part of the miners are using top3, top10 and all the other pools. Currently only ETH is supported.</p>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"mining_pools_distribution/ethereum\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-06-05\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                      other     top10      top3\n2019-06-01 00:00:00+00:00  0.129237  0.249906  0.620857\n2019-06-02 00:00:00+00:00  0.127432  0.251903  0.620666\n2019-06-03 00:00:00+00:00  0.122058  0.249603  0.628339\n2019-06-04 00:00:00+00:00  0.127726  0.254982  0.617293\n2019-06-05 00:00:00+00:00  0.120436  0.265842  0.613722\n</code></pre>\n<h3>Historical Balance</h3>\n<p>Historical balance for erc20 token or eth address. Returns the historical balance for a given address in the given interval.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"historical_balance/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">address</span><span class=\"o\">=</span><span class=\"s2\">\"0x1f3df0b8390bb8e9e322972c5e75583e87608ec2\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-18\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-23\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                     balance\n2019-04-18 00:00:00+00:00  382338.33\n2019-04-19 00:00:00+00:00  382338.33\n2019-04-20 00:00:00+00:00  382338.33\n2019-04-21 00:00:00+00:00  215664.33\n2019-04-22 00:00:00+00:00  215664.33\n</code></pre>\n<h3>Social Dominance</h3>\n<p>Returns the % of the social dominance a given project has over time in a given social channel.</p>\n<p>Available sources are:</p>\n<ul>\n<li>PROFESSIONAL_TRADERS_CHAT</li>\n<li>TELEGRAM</li>\n<li>DISCORD</li>\n<li>REDDIT</li>\n<li>ALL</li>\n</ul>\n<p><a href=\"#premium-metrics\" rel=\"nofollow\">Premium metric</a></p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"social_dominance/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-08\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-13\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span><span class=\"p\">,</span>\n    <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"s2\">\"ALL\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                   dominance\n2019-04-08 00:00:00+00:00   0.043028\n2019-04-09 00:00:00+00:00   0.025337\n2019-04-10 00:00:00+00:00   0.045376\n2019-04-11 00:00:00+00:00   0.036051\n2019-04-12 00:00:00+00:00   0.035585\n2019-04-13 00:00:00+00:00   0.034957\n</code></pre>\n<h3>Top Holders Percent Of Total Supply</h3>\n<p>Returns the top holders' percent of total supply - in exchanges, outside exchanges and combined.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"top_holders_percent_of_total_supply/ethereum\"</span><span class=\"p\">,</span>\n    <span class=\"n\">number_of_holders</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-08\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-11\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example Result:</p>\n<pre><code>datetime                   inExchanges  inTopHoldersTotal  outsideExchanges\n2019-04-09 00:00:00+00:00     7.977318          13.277961          5.300643\n2019-04-10 00:00:00+00:00     7.976282          13.310953          5.334671\n2019-04-11 00:00:00+00:00     7.975260          13.296356          5.321096\n</code></pre>\n<h3>History Twitter Data</h3>\n<p>Fetch the historical count of twitter followers.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"history_twitter_data/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-08\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-13\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                   followers_count\n2019-04-08 00:00:00+00:00            10524\n2019-04-09 00:00:00+00:00            10524\n2019-04-10 00:00:00+00:00            10525\n2019-04-11 00:00:00+00:00            10520\n2019-04-12 00:00:00+00:00            10526\n2019-04-13 00:00:00+00:00            10529\n</code></pre>\n<h3>Price Volume Difference</h3>\n<p>Fetch the price-volume difference technical indicator for a given slug, display currency and time period. This indicator measures the difference in trend between price and volume, specifically when price goes up as volume goes down.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"price_volume_difference/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-18\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-23\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span><span class=\"p\">,</span>\n    <span class=\"n\">currency</span><span class=\"o\">=</span><span class=\"s2\">\"USD\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                   priceChange  priceVolumeDiff  volumeChange\n2019-04-18 00:00:00+00:00     0.017779         0.013606 -39908.007476\n2019-04-19 00:00:00+00:00     0.012587         0.007332 -31195.568878\n2019-04-20 00:00:00+00:00     0.009062         0.004169 -24550.100411\n2019-04-21 00:00:00+00:00     0.002573         0.001035 -19307.845911\n2019-04-22 00:00:00+00:00     0.001527         0.000703 -20317.934666\n</code></pre>\n<h3>Ethereum Top Transactions</h3>\n<p>Top ETH transactions for project's team wallets.</p>\n<p>Available transaction types:</p>\n<ul>\n<li>ALL</li>\n<li>IN</li>\n<li>OUT</li>\n</ul>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"eth_top_transactions/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-18\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-30\"</span><span class=\"p\">,</span>\n    <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">transaction_type</span><span class=\"o\">=</span><span class=\"s2\">\"ALL\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<p><strong>The result is shortened for convenience</strong></p>\n<pre><code>datetime                           fromAddress  fromAddressInExchange           toAddress  toAddressInExchange              trxHash      trxValue\n2019-04-29 21:33:31+00:00  0xe76fe52a251c8f...                  False  0x45d6275d9496b...                False  0x776cd57382456a...        100.00\n2019-04-29 21:21:18+00:00  0xe76fe52a251c8f...                  False  0x468bdccdc334f...                False  0x848414fb5c382f...         40.95\n2019-04-19 14:14:52+00:00  0x1f3df0b8390bb8...                  False  0xd69bc0585e05e...                False  0x590512e1f1fbcf...         19.48\n2019-04-19 14:09:58+00:00  0x1f3df0b8390bb8...                  False  0x723fb5c14eaff...                False  0x78e0720b9e72d1...         15.15\n</code></pre>\n<h3>Ethereum Spent Over Time</h3>\n<p>ETH spent for each interval from the project's team wallet and time period</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"eth_spent_over_time/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-18\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-23\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                    ethSpent\n2019-04-18 00:00:00+00:00   0.000000\n2019-04-19 00:00:00+00:00  34.630284\n2019-04-20 00:00:00+00:00   0.000000\n2019-04-21 00:00:00+00:00   0.000158\n2019-04-22 00:00:00+00:00   0.000000\n</code></pre>\n<h3>Token Top Transactions</h3>\n<p>Top transactions for the token of a given project</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"token_top_transactions/santiment\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-18\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-04-30\"</span><span class=\"p\">,</span>\n    <span class=\"n\">limit</span><span class=\"o\">=</span><span class=\"mi\">5</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<p><strong>The result is shortened for convenience</strong></p>\n<pre><code>datetime                           fromAddress  fromAddressInExchange           toAddress  toAddressInExchange              trxHash      trxValue\n2019-04-21 13:51:59+00:00  0x1f3df0b8390bb8...                  False  0x5eaae5e949952...                False  0xdbced935b09dd0...  166674.00000\n2019-04-28 07:43:38+00:00  0x0a920bfdf7f977...                  False  0x868074aab18ea...                False  0x5f2214d34bcdc3...   33181.82279\n2019-04-28 07:53:32+00:00  0x868074aab18ea3...                  False  0x876eabf441b2e...                 True  0x90bd286da38a2b...   33181.82279\n2019-04-26 14:38:45+00:00  0x876eabf441b2ee...                   True  0x76af586d041d6...                False  0xe45b86f415e930...   28999.64023\n2019-04-30 15:17:28+00:00  0x876eabf441b2ee...                   True  0x1f4a90043cf2d...                False  0xc85892b9ef8c64...   20544.42975\n</code></pre>\n<h3>Full list of on-chain metrics (including timebounded)</h3>\n<p>This list includes:</p>\n<ul>\n<li>MVRV</li>\n<li>Age Destroyed</li>\n<li>Transaction Volume</li>\n<li>Circulation</li>\n<li>NVT</li>\n<li>Realized Value</li>\n<li>Realized Price</li>\n<li>Velocity</li>\n<li>Mean Age</li>\n<li>Exchange Metrics</li>\n</ul>\n<p>All of the following metrics have accept the same parameters and have the same response structure</p>\n<p>Returns data for a given metric. The input, that is needed, is the string 'metric/slug', a 'from' date, a 'to' date, a string for the interval and an aggregation, which is optional (When not given, the aggregation is determined automatically by the API).</p>\n<p>The available metrics can be seen <a href=\"./on-chain-metrics.md\" rel=\"nofollow\">here</a>:</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n   <span class=\"s2\">\"daily_active_addresses/santiment\"</span><span class=\"p\">,</span>\n   <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-08-31\"</span><span class=\"p\">,</span>\n   <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-09-03\"</span><span class=\"p\">,</span>\n   <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"2d\"</span><span class=\"p\">,</span>\n   <span class=\"n\">aggregation</span><span class=\"o\">=</span><span class=\"s2\">\"AVG\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                      value\n2019-08-30 00:00:00+00:00    4.0\n2019-09-01 00:00:00+00:00    5.5\n2019-09-03 00:00:00+00:00    9.0\n</code></pre>\n<h3>Emerging Trends</h3>\n<p>Emerging trends for a given period of time</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"emerging_trends\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-07-01\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-07-02\"</span><span class=\"p\">,</span>\n    <span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"s2\">\"1d\"</span><span class=\"p\">,</span>\n    <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>datetime                        score    word\n2019-07-01 00:00:00+00:00  375.160034    lnbc\n2019-07-01 00:00:00+00:00  355.323281    dent\n2019-07-01 00:00:00+00:00  268.653820    link\n2019-07-01 00:00:00+00:00  231.721809  shorts\n2019-07-01 00:00:00+00:00  206.812798     btt\n2019-07-02 00:00:00+00:00  209.343752  bounce\n2019-07-02 00:00:00+00:00  135.412811    vidt\n2019-07-02 00:00:00+00:00  116.842801     bat\n2019-07-02 00:00:00+00:00   98.517600  bottom\n2019-07-02 00:00:00+00:00   89.309975   haiku\n</code></pre>\n<h3>Top Social Gainers Losers</h3>\n<p>Top social gainers/losers returns the social volume changes for crypto projects.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"top_social_gainers_losers\"</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-07-18\"</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s2\">\"2019-07-30\"</span><span class=\"p\">,</span>\n    <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">time_window</span><span class=\"o\">=</span><span class=\"s2\">\"2d\"</span><span class=\"p\">,</span>\n    <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"s2\">\"ALL\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<p><strong>The result is shortened for convenience</strong></p>\n<pre><code>datetime                              slug     change    status\n2019-07-28 01:00:00+00:00     libra-credit  21.000000    GAINER\n2019-07-28 01:00:00+00:00             aeon  -1.000000     LOSER\n2019-07-28 01:00:00+00:00    thunder-token   5.000000  NEWCOMER\n2019-07-28 02:00:00+00:00     libra-credit  43.000000    GAINER\n...                                    ...        ...       ...\n2019-07-30 07:00:00+00:00            storj  12.000000  NEWCOMER\n2019-07-30 11:00:00+00:00            storj  21.000000    GAINER\n2019-07-30 11:00:00+00:00            aergo  -1.000000     LOSER\n2019-07-30 11:00:00+00:00            litex   8.000000  NEWCOMER\n</code></pre>\n<h3>Metadata</h3>\n<p>Fetching the metadata for an on-chain metric.</p>\n<pre><span class=\"n\">san</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"nvt\"</span><span class=\"p\">,</span>\n    <span class=\"n\">arr</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'metric'</span><span class=\"p\">,</span> <span class=\"s1\">'defaultAggregation'</span><span class=\"p\">]</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Example result:</p>\n<pre><code>{'defaultAggregation': 'AVG', 'metric': 'nvt'}\n\n</code></pre>\n<h2>Extras</h2>\n<p>Take a look at the <a href=\"/examples/extras\" rel=\"nofollow\">examples</a> folder.</p>\n<h2>Development</h2>\n<p>It is recommended to use <a href=\"https://github.com/pypa/pipenv\" rel=\"nofollow\">pipenv</a> for managing your local environment.</p>\n<p>Setup project:</p>\n<pre><code>pipenv install\n</code></pre>\n<p>Install main dependencies:</p>\n<pre><code>pipenv run pip install -e .\n</code></pre>\n<p>Install extra dependencies:</p>\n<pre><code>pipenv run pip install -e '.[extras]'\n</code></pre>\n<h2>Running tests</h2>\n<pre><code>python setup.py test\n</code></pre>\n<h2>Running integration tests</h2>\n<pre><code>python setup.py nosetests -a integration\n</code></pre>\n\n          </div>"}, "last_serial": 6879701, "releases": {"0.0.12": [{"comment_text": "", "digests": {"md5": "ccb7cdaae939ebfbda449774c85daac6", "sha256": "056b17f525e0a23d65d2d73717812909af84536819c4b9480d9da79409f0ea12"}, "downloads": -1, "filename": "sanpy-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "ccb7cdaae939ebfbda449774c85daac6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11008, "upload_time": "2018-08-15T12:29:21", "upload_time_iso_8601": "2018-08-15T12:29:21.442793Z", "url": "https://files.pythonhosted.org/packages/b6/b9/481304875d3d46de00200783c0c5fe06b98e52fd21c5de9b499b781aa0b4/sanpy-0.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a45f82df8b58317e58dbe9f13e2d957b", "sha256": "e92e9bc1e6e52ca98113eae644a18fe7d6c3ff939eaeb48019135fbbe2d33224"}, "downloads": -1, "filename": "sanpy-0.0.12.tar.gz", "has_sig": false, "md5_digest": "a45f82df8b58317e58dbe9f13e2d957b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10434, "upload_time": "2018-08-15T12:29:22", "upload_time_iso_8601": "2018-08-15T12:29:22.995109Z", "url": "https://files.pythonhosted.org/packages/09/69/6b1371937f7db2309ae30d43221fffc33d0221879cde7799fdc7e77a90b2/sanpy-0.0.12.tar.gz", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "3942ff248c0beafd00d7f22c0dc28c1f", "sha256": "e01e30f88a58e1c4592174db759c5b600cd7b22d8e67952978518bd6bee36c19"}, "downloads": -1, "filename": "sanpy-0.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "3942ff248c0beafd00d7f22c0dc28c1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11640, "upload_time": "2018-09-11T14:11:52", "upload_time_iso_8601": "2018-09-11T14:11:52.266661Z", "url": "https://files.pythonhosted.org/packages/17/68/5d5eb95e852c5061171a3da08bfb526ace8be86e1ea07342fa6c91f83769/sanpy-0.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc12f587eb7457fb47a91276b4052356", "sha256": "1e34146187374f5fcad099fcb1aa7c257d4734bd42ce4822660b6da656b48cfa"}, "downloads": -1, "filename": "sanpy-0.0.13.tar.gz", "has_sig": false, "md5_digest": "fc12f587eb7457fb47a91276b4052356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14286, "upload_time": "2018-09-11T14:11:53", "upload_time_iso_8601": "2018-09-11T14:11:53.808580Z", "url": "https://files.pythonhosted.org/packages/25/ef/b1c54d9de42cc457865724438991109592980dcc05d9e3c98b257047bcd0/sanpy-0.0.13.tar.gz", "yanked": false}], "0.0.16": [{"comment_text": "", "digests": {"md5": "d0221b645b8ac9a08290cb4132a9712c", "sha256": "265be58405b08a131160619aff91879b0304c2f2eb438058e4bcb542dc8a240b"}, "downloads": -1, "filename": "sanpy-0.0.16-py3-none-any.whl", "has_sig": false, "md5_digest": "d0221b645b8ac9a08290cb4132a9712c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11722, "upload_time": "2018-09-19T14:54:13", "upload_time_iso_8601": "2018-09-19T14:54:13.061133Z", "url": "https://files.pythonhosted.org/packages/08/b2/3c612167a593fba3e834d95ab5330341a15b212b362487983702b7afd3d1/sanpy-0.0.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cb6674f3f10e27547255b9fe80c64fd", "sha256": "f519c3dfc8b497744d352c3ebfa2eddbc811b52cc5d22322346223e2a40437e3"}, "downloads": -1, "filename": "sanpy-0.0.16.tar.gz", "has_sig": false, "md5_digest": "1cb6674f3f10e27547255b9fe80c64fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14440, "upload_time": "2018-09-19T14:54:14", "upload_time_iso_8601": "2018-09-19T14:54:14.698511Z", "url": "https://files.pythonhosted.org/packages/32/14/53f4d171e848cf7839e4283f2e5d733b228abaec92f246f092213c683639/sanpy-0.0.16.tar.gz", "yanked": false}], "0.0.17": [{"comment_text": "", "digests": {"md5": "e36d60497883aa40c08d968554124fc9", "sha256": "1c0516455c3f67fad8094407e296b5604bb187fe22e93e470471b684b65b1e48"}, "downloads": -1, "filename": "sanpy-0.0.17-py3-none-any.whl", "has_sig": false, "md5_digest": "e36d60497883aa40c08d968554124fc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12366, "upload_time": "2018-09-20T13:26:53", "upload_time_iso_8601": "2018-09-20T13:26:53.659455Z", "url": "https://files.pythonhosted.org/packages/14/59/30a1a55bf3f4728d7954c184a414fd6305c6ac221abac712f03456db6dd0/sanpy-0.0.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b045b7f7f3e340385fd67349e01abf74", "sha256": "89b90f05b51fc219a2ccf107dbba3e17ed8a7441c2f9c253e4cec2f1ff9003aa"}, "downloads": -1, "filename": "sanpy-0.0.17.tar.gz", "has_sig": false, "md5_digest": "b045b7f7f3e340385fd67349e01abf74", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15000, "upload_time": "2018-09-20T13:26:54", "upload_time_iso_8601": "2018-09-20T13:26:54.871292Z", "url": "https://files.pythonhosted.org/packages/a8/38/e1df98018cc3222c3f2eaf5ad6c8496329bfb5b71e9955e831ecf1bf3746/sanpy-0.0.17.tar.gz", "yanked": false}], "0.0.18": [{"comment_text": "", "digests": {"md5": "180d1b199cf8dd5c647943a7123f7614", "sha256": "98a678d4d5d35fe94980f1a1960fd93f4c67edee6c120024035a3c38b29c95c9"}, "downloads": -1, "filename": "sanpy-0.0.18-py3-none-any.whl", "has_sig": false, "md5_digest": "180d1b199cf8dd5c647943a7123f7614", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12422, "upload_time": "2018-09-21T09:10:14", "upload_time_iso_8601": "2018-09-21T09:10:14.961689Z", "url": "https://files.pythonhosted.org/packages/92/9a/a91514b56807f02a9530945074e8f2fbc9fbc76eb619f81e91f77d494df1/sanpy-0.0.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "599ee44555c9484582a22b4e42703fc2", "sha256": "b7a4d33f3ef5b88256a08be9d36f79d83e1df8ec08eaa149733cd224b6a3df10"}, "downloads": -1, "filename": "sanpy-0.0.18.tar.gz", "has_sig": false, "md5_digest": "599ee44555c9484582a22b4e42703fc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15108, "upload_time": "2018-09-21T09:10:16", "upload_time_iso_8601": "2018-09-21T09:10:16.488906Z", "url": "https://files.pythonhosted.org/packages/87/c3/5b72ef5427115e272d7046083fe7d323f5d8328888c81bd6f01126a8fb59/sanpy-0.0.18.tar.gz", "yanked": false}], "0.0.19": [{"comment_text": "", "digests": {"md5": "f7b7297c51ba8d339e90a13788e84451", "sha256": "453ab5d4d1df7301cd02435d39308ebb403ce9b09900dbf27ddf590d2a4ee40c"}, "downloads": -1, "filename": "sanpy-0.0.19-py3-none-any.whl", "has_sig": false, "md5_digest": "f7b7297c51ba8d339e90a13788e84451", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13234, "upload_time": "2018-10-09T14:33:36", "upload_time_iso_8601": "2018-10-09T14:33:36.982668Z", "url": "https://files.pythonhosted.org/packages/41/97/ac0d4bcd140b77a4ca851d9c886cd787d73d23dbc23cfe65c8e8a27bd783/sanpy-0.0.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0494536ef97c9edc0eace6c34e59dba4", "sha256": "88940409fdc9b70ca583da525c4bb359d98c173c14ada6155844a93e437972ac"}, "downloads": -1, "filename": "sanpy-0.0.19.tar.gz", "has_sig": false, "md5_digest": "0494536ef97c9edc0eace6c34e59dba4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15162, "upload_time": "2018-10-09T14:33:38", "upload_time_iso_8601": "2018-10-09T14:33:38.820487Z", "url": "https://files.pythonhosted.org/packages/ef/e3/5c4b17a62890075695ac8ef3aa45735669993e6302e14044fc30b1a40971/sanpy-0.0.19.tar.gz", "yanked": false}], "0.0.20": [{"comment_text": "", "digests": {"md5": "799e0d64f098027bcf1891136dbb5779", "sha256": "4e91e3436c6384e3346e9f8962d1cea31c6f52e3cca5b7a1dc8e182481006808"}, "downloads": -1, "filename": "sanpy-0.0.20-py3-none-any.whl", "has_sig": false, "md5_digest": "799e0d64f098027bcf1891136dbb5779", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13282, "upload_time": "2018-10-10T14:59:36", "upload_time_iso_8601": "2018-10-10T14:59:36.048250Z", "url": "https://files.pythonhosted.org/packages/2d/ae/fbf7b2c1c00f69e52d38c284e45381feb3f0a30b60d86d6f9c3b3a7bbeab/sanpy-0.0.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c11c5d6a0e8b0578842599fbc0bae28", "sha256": "3274973b08f23a31cc28c66a4a34886d88ce7a780606663eb400cec1e66625af"}, "downloads": -1, "filename": "sanpy-0.0.20.tar.gz", "has_sig": false, "md5_digest": "6c11c5d6a0e8b0578842599fbc0bae28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15193, "upload_time": "2018-10-10T14:59:37", "upload_time_iso_8601": "2018-10-10T14:59:37.983632Z", "url": "https://files.pythonhosted.org/packages/60/a5/8a9d513932321040f3182a130dade26789633450d9346dcc785647b9307f/sanpy-0.0.20.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "6fc60ea980985974d9de8b5e87571725", "sha256": "9c188365d4ee293cb04998cb85004de64af7e836a880283e9b46f8d287d13836"}, "downloads": -1, "filename": "sanpy-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6fc60ea980985974d9de8b5e87571725", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8510, "upload_time": "2018-07-06T09:18:54", "upload_time_iso_8601": "2018-07-06T09:18:54.236925Z", "url": "https://files.pythonhosted.org/packages/42/a0/e88033e54220061279d2c9b652c0dcf236eedbacb814066a7307c8778f06/sanpy-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d47a9a8a5837043c52d58b1ba6ac1d04", "sha256": "a335cf60b75f8ae43fae0326d6312123bc37217f1f36a1698237264e99713ad2"}, "downloads": -1, "filename": "sanpy-0.0.6.tar.gz", "has_sig": false, "md5_digest": "d47a9a8a5837043c52d58b1ba6ac1d04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6884, "upload_time": "2018-07-06T09:18:55", "upload_time_iso_8601": "2018-07-06T09:18:55.505791Z", "url": "https://files.pythonhosted.org/packages/63/81/a2ffb4d7f12da5eacdffb397ffca964ef5705cab5cd3d4bff2d62f62a3ea/sanpy-0.0.6.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "e4e89118bfe1bb681c76b02188fbf48b", "sha256": "832bde54651c605b78a47e2ac0bf637c6763bb5b63e38df1e6293f26af211710"}, "downloads": -1, "filename": "sanpy-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "e4e89118bfe1bb681c76b02188fbf48b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15886, "upload_time": "2018-08-15T08:57:45", "upload_time_iso_8601": "2018-08-15T08:57:45.091708Z", "url": "https://files.pythonhosted.org/packages/60/60/0363cdec6b7f878698b147420ab32734d292e4bc551a36f87b820ce63dc7/sanpy-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48b28230cd06dc2a02b8b9d83a002598", "sha256": "b0a32b749e9fc70ad01eeaa4373be074b635f357ac0f757ba6fc179de23861c5"}, "downloads": -1, "filename": "sanpy-0.0.9.tar.gz", "has_sig": false, "md5_digest": "48b28230cd06dc2a02b8b9d83a002598", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10423, "upload_time": "2018-08-15T08:57:47", "upload_time_iso_8601": "2018-08-15T08:57:47.185911Z", "url": "https://files.pythonhosted.org/packages/18/dc/15271a688355a5570b017fbf60b9ad2e109fba29c58ca66c509a10070974/sanpy-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "e6d98530201b21947939f3a6ae5a1edc", "sha256": "d18c6cfc6fb5840b95173f4883e21bbf98bebfac67f985a3e46308fe0f2e1b01"}, "downloads": -1, "filename": "sanpy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e6d98530201b21947939f3a6ae5a1edc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14263, "upload_time": "2018-10-11T15:19:12", "upload_time_iso_8601": "2018-10-11T15:19:12.958210Z", "url": "https://files.pythonhosted.org/packages/23/c7/0b758a0a16effe55c9bd0ff5b5622a743724f7bf429b7b9329e973669282/sanpy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19c9c528db5e185a75a9e714144ba385", "sha256": "27176b1e1aeec2189d2c28ada3eeba36f5eee7b8f843074bc9d05d3ae6d0fdd7"}, "downloads": -1, "filename": "sanpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "19c9c528db5e185a75a9e714144ba385", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15775, "upload_time": "2018-10-11T15:19:14", "upload_time_iso_8601": "2018-10-11T15:19:14.647211Z", "url": "https://files.pythonhosted.org/packages/70/08/946791b93f935a225a0ed986b28cafb406425032999393a87fb5a51a2e2b/sanpy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "50a5d5ed9395f6ab567fb6a6075c3c23", "sha256": "f4ec3d87ae97941c3cac26b2522b4c53f499b2ed7e3d6a44c29638e4069d293e"}, "downloads": -1, "filename": "sanpy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "50a5d5ed9395f6ab567fb6a6075c3c23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14755, "upload_time": "2018-10-18T12:09:31", "upload_time_iso_8601": "2018-10-18T12:09:31.028742Z", "url": "https://files.pythonhosted.org/packages/18/58/8c952d46fd894249a890d3b95becfa3fb6ead6868128423d17b2bdcabe18/sanpy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68a5a5d1f4f9aa64e24b8ca4c2a1ef66", "sha256": "b25d913b1a038371a0fd0ab500795a1061eaff5b3d8d15be77c056d529ac4eea"}, "downloads": -1, "filename": "sanpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "68a5a5d1f4f9aa64e24b8ca4c2a1ef66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16669, "upload_time": "2018-10-18T12:09:32", "upload_time_iso_8601": "2018-10-18T12:09:32.315857Z", "url": "https://files.pythonhosted.org/packages/d5/ea/4270a013b4e087f7898e0209bdc32b7db24020476d4d434533743c4f875b/sanpy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8d7c592ef4d448c9bb8edec418ccb92d", "sha256": "cbdcff491e278e91486b407000730ea24bc28964fee23a73dc4a7222484f929b"}, "downloads": -1, "filename": "sanpy-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "8d7c592ef4d448c9bb8edec418ccb92d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14762, "upload_time": "2018-10-19T06:34:04", "upload_time_iso_8601": "2018-10-19T06:34:04.442447Z", "url": "https://files.pythonhosted.org/packages/b9/03/429b5cd618ac047030dec4f11a0b4b9499faf6063068fea1c8c673f457b7/sanpy-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "879764797402ca9561c534c12b5a81a4", "sha256": "d4e00a6b40b521cabb8301e7f914a0c3d1bef12796a6c848ecfa66f16c43dc38"}, "downloads": -1, "filename": "sanpy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "879764797402ca9561c534c12b5a81a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16679, "upload_time": "2018-10-19T06:34:05", "upload_time_iso_8601": "2018-10-19T06:34:05.836722Z", "url": "https://files.pythonhosted.org/packages/b1/0e/c3d7152cadf1e268cc1fb051bd7ff44b1baaed670e2bdc4288e4121a8603/sanpy-0.1.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "73e97e8bb7831acd8244e5cddb7fba79", "sha256": "5fb9064c5b78d420687c8ab0e32e9551dc21e1476d764a11d5ca48b314147c71"}, "downloads": -1, "filename": "sanpy-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "73e97e8bb7831acd8244e5cddb7fba79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14900, "upload_time": "2018-10-25T18:24:30", "upload_time_iso_8601": "2018-10-25T18:24:30.364891Z", "url": "https://files.pythonhosted.org/packages/58/0e/a8b13c6a737669e7c6f909c7ea4d30a26428a78cd4ee052e0ec99a23af18/sanpy-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9311a519a3aa57782196515ca5779a1", "sha256": "d9fd0f1a99ee0d9dccfd2dce1f786b33e91bffb7234ad4419932cf544e9e5c2c"}, "downloads": -1, "filename": "sanpy-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e9311a519a3aa57782196515ca5779a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16835, "upload_time": "2018-10-25T18:24:31", "upload_time_iso_8601": "2018-10-25T18:24:31.796702Z", "url": "https://files.pythonhosted.org/packages/4b/21/f3a5f9111ec5a38a112f385c3edf389b3c0367287ebf19463752b3b40606/sanpy-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "14ad8b9844bf8c670f397a3409d1dc9a", "sha256": "50528a99d10f3990f424658203a3d8af869a77f2fa9377a82f79828b7f7b198a"}, "downloads": -1, "filename": "sanpy-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "14ad8b9844bf8c670f397a3409d1dc9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14999, "upload_time": "2018-10-26T13:06:12", "upload_time_iso_8601": "2018-10-26T13:06:12.657711Z", "url": "https://files.pythonhosted.org/packages/66/d3/ee86dde60f12a1fd141657561459df6e6d29a31d519cbd657b8bd2a4cb57/sanpy-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95b4d2d4af7925694defe46cad2ace6d", "sha256": "2d846a8f46893743942ca6d2ae52373a97b62cd146a0311947ccc892d66b0dfa"}, "downloads": -1, "filename": "sanpy-0.1.5.tar.gz", "has_sig": false, "md5_digest": "95b4d2d4af7925694defe46cad2ace6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17096, "upload_time": "2018-10-26T13:06:14", "upload_time_iso_8601": "2018-10-26T13:06:14.452498Z", "url": "https://files.pythonhosted.org/packages/98/8c/75ab2c7e60a4f07bf0b9b148ab28d21290cf4224cbda3a8c97d48bfe877f/sanpy-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "71a774b12af77ceeed027614227913ee", "sha256": "b6ffda985b68e4cb960d0835250491077d606901b999546fbcc982df4506366d"}, "downloads": -1, "filename": "sanpy-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "71a774b12af77ceeed027614227913ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15024, "upload_time": "2018-11-13T09:40:45", "upload_time_iso_8601": "2018-11-13T09:40:45.612933Z", "url": "https://files.pythonhosted.org/packages/d8/8f/fefd0528c8f6a98c95e22ab0ec4388b694edc8401f84041b9b08c47a3047/sanpy-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98de5ffac215aea27da77e734c2fb07d", "sha256": "5138c1a251c784d0f378a390875c07aa7d3a2feedbfa6a24213201566038bc6c"}, "downloads": -1, "filename": "sanpy-0.1.6.tar.gz", "has_sig": false, "md5_digest": "98de5ffac215aea27da77e734c2fb07d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17150, "upload_time": "2018-11-13T09:40:47", "upload_time_iso_8601": "2018-11-13T09:40:47.806609Z", "url": "https://files.pythonhosted.org/packages/10/bb/3936b1919533c0749816df7c045b6d55abdf5d5c1cbc661b7dd2ae1f4db1/sanpy-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "59abfec0f43ea7b9b9f32b81ddcb1fbf", "sha256": "1d58fceb46d7d107c9118705c536ee8d6eb1c9bd5bf3d5c07480f3a53c0758ea"}, "downloads": -1, "filename": "sanpy-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "59abfec0f43ea7b9b9f32b81ddcb1fbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15102, "upload_time": "2018-12-04T14:51:45", "upload_time_iso_8601": "2018-12-04T14:51:45.867167Z", "url": "https://files.pythonhosted.org/packages/86/69/9fb476d43f19903e4302ca032eb8dd7c35f3c72282a55b188b1db29435fe/sanpy-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d90f3e697fc57c24ccd6a03393209b1", "sha256": "98b403a2666c38aa4d809928a8e16682bc50591e24281a7ad1a2ca5c898c0a58"}, "downloads": -1, "filename": "sanpy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1d90f3e697fc57c24ccd6a03393209b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17303, "upload_time": "2018-12-04T14:51:47", "upload_time_iso_8601": "2018-12-04T14:51:47.815238Z", "url": "https://files.pythonhosted.org/packages/8b/3a/0d264f62bd4ec0d6c1384f325d98b33d0acd0cd42492e87ff623830562c6/sanpy-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "b1f0e9899575873ad8fc1f522db217da", "sha256": "0e00bf73da1a8caed9b09a0451fe4735c95f50c3860cbebeb35c994451f14cfd"}, "downloads": -1, "filename": "sanpy-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b1f0e9899575873ad8fc1f522db217da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15112, "upload_time": "2018-12-11T16:20:58", "upload_time_iso_8601": "2018-12-11T16:20:58.687867Z", "url": "https://files.pythonhosted.org/packages/95/31/e6b058345fa3ba896c224affae4b9353903005f11df88678f27b40a4f10a/sanpy-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "894137939af3df899b38fc99f7843588", "sha256": "e7a835d1c607bc2c3ee76e9162f17df33ad2b0aebad358ad1fdff196fd3f5e57"}, "downloads": -1, "filename": "sanpy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "894137939af3df899b38fc99f7843588", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17313, "upload_time": "2018-12-11T16:21:00", "upload_time_iso_8601": "2018-12-11T16:21:00.414978Z", "url": "https://files.pythonhosted.org/packages/47/3b/111f37823859ff59b3df654f85443d69fdb806e5b6eeee720e0b42ff9f10/sanpy-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "36645a1d2400456366bebe02a93eb512", "sha256": "c396ce52626e9c4b2e840e556e57f7b552740d1e5b3e3392a84f592bc8564682"}, "downloads": -1, "filename": "sanpy-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36645a1d2400456366bebe02a93eb512", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15259, "upload_time": "2018-12-20T13:19:59", "upload_time_iso_8601": "2018-12-20T13:19:59.291162Z", "url": "https://files.pythonhosted.org/packages/a6/9a/4d53ce6f005147804e726c3478b498d0c70caf2b595ea13bd923a3e08baa/sanpy-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "801a872ad01a257739fa03e76630528e", "sha256": "4b30f03107e5c7db4dc66e38b10ad7cdb2b0d86ea96524f7edfad0e57e822bbb"}, "downloads": -1, "filename": "sanpy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "801a872ad01a257739fa03e76630528e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17622, "upload_time": "2018-12-20T13:20:01", "upload_time_iso_8601": "2018-12-20T13:20:01.160687Z", "url": "https://files.pythonhosted.org/packages/3b/ea/d40b9c7eb44c6d2a0a38ac0938ee04d7d82c99f79afa1e4443d12ae5e22f/sanpy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9ad53e0eaf0cfe9c68d90d3df15d787d", "sha256": "89af96b931e2fabe0a544a07ce01dfcd1a0dddc477001d46515d40c371c68b59"}, "downloads": -1, "filename": "sanpy-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9ad53e0eaf0cfe9c68d90d3df15d787d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15264, "upload_time": "2019-01-14T11:01:17", "upload_time_iso_8601": "2019-01-14T11:01:17.495713Z", "url": "https://files.pythonhosted.org/packages/34/df/7d3cfecd090a85e76fc28bde8be0438ffb9d8fae023d9b659e6fb2862d9b/sanpy-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46d5743aaa67ebd501cad3f54045f3c3", "sha256": "dca46d91ba46a593e6b47a84b4a10c100e5524ae088ed313e029213a3162d8ad"}, "downloads": -1, "filename": "sanpy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "46d5743aaa67ebd501cad3f54045f3c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17636, "upload_time": "2019-01-14T11:01:18", "upload_time_iso_8601": "2019-01-14T11:01:18.823549Z", "url": "https://files.pythonhosted.org/packages/1d/54/f4966d1b7e2abe3466cb6d4c509814ea430b07abab539a5cfbf34545a570/sanpy-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "596bbf2855c324d8b5494c67ae6985a2", "sha256": "e522ffc040772012ce6836931bf6e8286bc6cf2723843a64371250b923a7b0ec"}, "downloads": -1, "filename": "sanpy-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "596bbf2855c324d8b5494c67ae6985a2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15707, "upload_time": "2019-01-25T06:57:00", "upload_time_iso_8601": "2019-01-25T06:57:00.154887Z", "url": "https://files.pythonhosted.org/packages/18/d4/f112a581273eabfd7e90314725a17f7b1b76d6befe7a8243014fcf54aa28/sanpy-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84a5a104b2d0116ae0c9bbda9c9a790c", "sha256": "bedc92d13ca8518a9ead69b5229b525fee943c0deb5eb6d9220cfbfe1c39d8e1"}, "downloads": -1, "filename": "sanpy-0.3.2.tar.gz", "has_sig": false, "md5_digest": "84a5a104b2d0116ae0c9bbda9c9a790c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18063, "upload_time": "2019-01-25T06:57:02", "upload_time_iso_8601": "2019-01-25T06:57:02.253885Z", "url": "https://files.pythonhosted.org/packages/f8/af/afb4aa273a5f7c9d6683ac7eac61f4d8c50b432d04f835115847dc74a89b/sanpy-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "c5b6cd20363f7f78d9f61a00104a83d3", "sha256": "b4207368d70478ce3df15de767c345bbeb4bd4d823c980c00a9f4b5d981824eb"}, "downloads": -1, "filename": "sanpy-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c5b6cd20363f7f78d9f61a00104a83d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15621, "upload_time": "2019-02-07T08:56:05", "upload_time_iso_8601": "2019-02-07T08:56:05.573760Z", "url": "https://files.pythonhosted.org/packages/64/ab/6242d57bbd6a923552a25f2d4df387ae7cadc50239286005dcba1b5d2f42/sanpy-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11dcfacba06d916aa2faedc363063a93", "sha256": "addf87f98451874b2eb8778c48046fe31c4e0070682d0f764728a034f5779ece"}, "downloads": -1, "filename": "sanpy-0.3.3.tar.gz", "has_sig": false, "md5_digest": "11dcfacba06d916aa2faedc363063a93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17986, "upload_time": "2019-02-07T08:56:06", "upload_time_iso_8601": "2019-02-07T08:56:06.825366Z", "url": "https://files.pythonhosted.org/packages/2a/eb/a4d64d13c4b7495bf853303acd37a5cece5247e33071acbcda914b6e96a9/sanpy-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "7af13b477ecc6f928861135848a207ce", "sha256": "fd0ed35555fb232c5fb7ff1b087d5b36f1d472cfa536710ea904f715a8f0bc0e"}, "downloads": -1, "filename": "sanpy-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7af13b477ecc6f928861135848a207ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15675, "upload_time": "2019-02-11T09:34:41", "upload_time_iso_8601": "2019-02-11T09:34:41.244362Z", "url": "https://files.pythonhosted.org/packages/ed/51/db8c112706d4741eaa627df0464f1ea4310f1677c3fef77f9b7805544927/sanpy-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8ec1d52048a1048ebef5db79d9e8288", "sha256": "0c7b4ea977e78c4c6ab7a64a4c77c6b1fd6ab1e8045c83273ab72b21b24504ae"}, "downloads": -1, "filename": "sanpy-0.3.4.tar.gz", "has_sig": false, "md5_digest": "a8ec1d52048a1048ebef5db79d9e8288", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18038, "upload_time": "2019-02-11T09:34:42", "upload_time_iso_8601": "2019-02-11T09:34:42.605354Z", "url": "https://files.pythonhosted.org/packages/77/1d/ef8254741d9ebb842f5212fc72367b4b3a7bda98fdfb32f35efa9b0d3833/sanpy-0.3.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "1ee9b13e9212214d685f58cf880a2f06", "sha256": "9bad5a2b3c3d9f8b71748a0e51accea441a036de9f0f969a0d6e8e9dc9393419"}, "downloads": -1, "filename": "sanpy-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1ee9b13e9212214d685f58cf880a2f06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14247, "upload_time": "2019-04-08T18:28:11", "upload_time_iso_8601": "2019-04-08T18:28:11.600166Z", "url": "https://files.pythonhosted.org/packages/25/d6/378048917629b66f65b3cab16b4352ed0ba62ef848579f3daf4662af95bb/sanpy-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c9e7b2a1139e455b828a22f0daa55a7f", "sha256": "ea80df95b515ca070ace39164d0bb55a3cafa4b8dee1e62564d4c313e333080f"}, "downloads": -1, "filename": "sanpy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "c9e7b2a1139e455b828a22f0daa55a7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15026, "upload_time": "2019-04-08T18:28:13", "upload_time_iso_8601": "2019-04-08T18:28:13.113667Z", "url": "https://files.pythonhosted.org/packages/e0/f9/bd0e525bd9718fd63ed182596e66b725e0b60d353e02853ffab43b2e0bba/sanpy-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "b4c3525dbae788810c7784b506ce5d02", "sha256": "b0483cf12f34e0e4dafc93093c1cf7cc2909a823b3ca56fbcaa867afcd93c5e1"}, "downloads": -1, "filename": "sanpy-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b4c3525dbae788810c7784b506ce5d02", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14633, "upload_time": "2019-05-02T19:14:24", "upload_time_iso_8601": "2019-05-02T19:14:24.195418Z", "url": "https://files.pythonhosted.org/packages/d3/93/15a9d0d70c081515ac5ff6e214a973ba443f57edf78f52f695c259a4b7e5/sanpy-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fbbe7d9b6d3ecb1912431efc01b5cc0", "sha256": "88a5313feae30aa623f37ca88753a780c2a83487bc4d6676782860bd1ddb618b"}, "downloads": -1, "filename": "sanpy-0.4.2.tar.gz", "has_sig": false, "md5_digest": "4fbbe7d9b6d3ecb1912431efc01b5cc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15776, "upload_time": "2019-05-02T19:14:25", "upload_time_iso_8601": "2019-05-02T19:14:25.839645Z", "url": "https://files.pythonhosted.org/packages/a8/21/d61f5c631ecf93dc1ccc0974dfe5849edc0717a622fc0bec3f57b6d8bfc0/sanpy-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "f4b9590ab125a542bb01fc4fe0bd4ae1", "sha256": "c6b2c1a70ad88f88ca8c2196f0d32523f6a91e14eee890d17bd3b620f56afd05"}, "downloads": -1, "filename": "sanpy-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f4b9590ab125a542bb01fc4fe0bd4ae1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15755, "upload_time": "2019-05-07T07:49:20", "upload_time_iso_8601": "2019-05-07T07:49:20.140235Z", "url": "https://files.pythonhosted.org/packages/6c/b9/7df0407fe330e72a433fd7b2b136938490085bd4b6670acd3979664121f2/sanpy-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44cd67063ffd5a824b2335023a4219c4", "sha256": "9529369a798f52b52707742a897fcbe60eb791241c8e1b11fd203fce1605ee1d"}, "downloads": -1, "filename": "sanpy-0.5.0.tar.gz", "has_sig": false, "md5_digest": "44cd67063ffd5a824b2335023a4219c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18202, "upload_time": "2019-05-07T07:49:21", "upload_time_iso_8601": "2019-05-07T07:49:21.505958Z", "url": "https://files.pythonhosted.org/packages/50/5c/b53b40ac1fdb76353e2a46266cd64c71899369f0dba15310aa0fbd4fed4a/sanpy-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "e4b34b6f52d9b5a6df8eb612c6196566", "sha256": "d1835b9b70d75fc66f53df6b865d69116badf46822907f43165e523e0a4ab384"}, "downloads": -1, "filename": "sanpy-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e4b34b6f52d9b5a6df8eb612c6196566", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16178, "upload_time": "2019-06-20T13:31:37", "upload_time_iso_8601": "2019-06-20T13:31:37.908019Z", "url": "https://files.pythonhosted.org/packages/c2/7a/0816906c2ff9c9bad64eb64ee202d23e2e909bb6f167fab2ae9224d7f95b/sanpy-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ceb98a10aacd9ec87b59e3edf9889ca", "sha256": "1f32fdcd78b8a57b76ac01793e73bc1bab7455cfbf888e22644e8826f9273a41"}, "downloads": -1, "filename": "sanpy-0.5.1.tar.gz", "has_sig": false, "md5_digest": "6ceb98a10aacd9ec87b59e3edf9889ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19199, "upload_time": "2019-06-20T13:31:40", "upload_time_iso_8601": "2019-06-20T13:31:40.717055Z", "url": "https://files.pythonhosted.org/packages/a0/fc/56c00f93372bc0bc185c4b2fb1ca7310495e62ffd39c31a8d67d975a8f51/sanpy-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "57cdf6dc1eefe07572cbdfe60f0d55e0", "sha256": "bae7cd5f99fd0841395390d9d611b47b9ef16c7349c70ba099176240d1b7e796"}, "downloads": -1, "filename": "sanpy-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "57cdf6dc1eefe07572cbdfe60f0d55e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16148, "upload_time": "2019-06-28T09:22:05", "upload_time_iso_8601": "2019-06-28T09:22:05.951272Z", "url": "https://files.pythonhosted.org/packages/d2/c4/5b21add911688491d6aa7bbabfbaffe6b927976d5b9ebd19f0a33c0b06f6/sanpy-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa3233332bdaccf76d34cc6fa8ee1cc4", "sha256": "cb3bf6494dfdb6ab2b502739af048fec38b3bc6a8a91df8867005a5e5f8abce4"}, "downloads": -1, "filename": "sanpy-0.5.2.tar.gz", "has_sig": false, "md5_digest": "aa3233332bdaccf76d34cc6fa8ee1cc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19177, "upload_time": "2019-06-28T09:22:07", "upload_time_iso_8601": "2019-06-28T09:22:07.728057Z", "url": "https://files.pythonhosted.org/packages/d2/cd/4b0803d115190f9a9f3948ffb150610f433323770e9181202d8109f44a9f/sanpy-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "569a9f6572089d03aae9f706ff66562b", "sha256": "af86c2b5c80af86d58e1fc94ce6b17a7e3d4ab600171c06fdcddea3d7c132ea3"}, "downloads": -1, "filename": "sanpy-0.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "569a9f6572089d03aae9f706ff66562b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16761, "upload_time": "2019-07-09T11:05:00", "upload_time_iso_8601": "2019-07-09T11:05:00.827174Z", "url": "https://files.pythonhosted.org/packages/38/5b/95e07fcb9df5105849462b18e9a6fb0fe7f4347d91aec82d7537059f84ea/sanpy-0.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eac97a4440db4bd11203609bb83101b0", "sha256": "b4fe33e3b75b8c1cd094f2ab0eff3c66aeb3ad260707d488ef489efaf769e84a"}, "downloads": -1, "filename": "sanpy-0.5.3.tar.gz", "has_sig": false, "md5_digest": "eac97a4440db4bd11203609bb83101b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21596, "upload_time": "2019-07-09T11:05:04", "upload_time_iso_8601": "2019-07-09T11:05:04.195212Z", "url": "https://files.pythonhosted.org/packages/9a/cc/e1192c494c8ffc7862ff843a11974393e42a6799ec3d342447828534b46f/sanpy-0.5.3.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "864857afa0c58755cc63ef2260e9d5a8", "sha256": "34b4f10823a480565b39642be61643f16a11927087e6eeba7e445aaae7f7faf5"}, "downloads": -1, "filename": "sanpy-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "864857afa0c58755cc63ef2260e9d5a8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21920, "upload_time": "2019-07-22T08:33:53", "upload_time_iso_8601": "2019-07-22T08:33:53.299211Z", "url": "https://files.pythonhosted.org/packages/ba/87/05c4cf7f3cad3c6340e4f08832bce032990a3990abb0b840e5ede3728807/sanpy-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99f60172332776a51dfd17ff34c08f32", "sha256": "cfb8c238f22363d242f903e749e611e5182be7ee93e624e7129c6fb47429a7a5"}, "downloads": -1, "filename": "sanpy-0.6.0.tar.gz", "has_sig": false, "md5_digest": "99f60172332776a51dfd17ff34c08f32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34151, "upload_time": "2019-07-22T08:33:55", "upload_time_iso_8601": "2019-07-22T08:33:55.244647Z", "url": "https://files.pythonhosted.org/packages/2c/c9/82ad08ab160940a058b31519af532e21966f5a5c74c81409646668ff3602/sanpy-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "082ff244c137443059c1292b272004ca", "sha256": "72a82882c1bd38e961e4a81edf9c8661f90262c9f334573850951f5fb53045ee"}, "downloads": -1, "filename": "sanpy-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "082ff244c137443059c1292b272004ca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21954, "upload_time": "2019-07-22T12:11:54", "upload_time_iso_8601": "2019-07-22T12:11:54.861987Z", "url": "https://files.pythonhosted.org/packages/1e/61/632392eba447197cd0758c35b8904a2c2b7b1a04d0e8372204905e391164/sanpy-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e1e0cd0f850a86528b9ab675ae245b0", "sha256": "6774d327c6dcb9bd0a93f0c7f661c30c269112f1eb9966ed6d61347d5e5f509e"}, "downloads": -1, "filename": "sanpy-0.6.1.tar.gz", "has_sig": false, "md5_digest": "5e1e0cd0f850a86528b9ab675ae245b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34174, "upload_time": "2019-07-22T12:11:56", "upload_time_iso_8601": "2019-07-22T12:11:56.650653Z", "url": "https://files.pythonhosted.org/packages/d6/1d/9a2ed60bbc923693f26d325701974dcba57600c43a651fa7793252d99326/sanpy-0.6.1.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "3110946d3ac7ff1c5af0985fa286701d", "sha256": "61e28d9cc76be1c2a00075538cf3460734f62b6a8cd860a6165551bb84e4856a"}, "downloads": -1, "filename": "sanpy-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3110946d3ac7ff1c5af0985fa286701d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25580, "upload_time": "2019-09-18T14:45:54", "upload_time_iso_8601": "2019-09-18T14:45:54.789180Z", "url": "https://files.pythonhosted.org/packages/30/48/37038bbd26cec5d9855f30014b51ddf8992682026ba1ec417d7be47280dc/sanpy-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4230df42b894333eaffe05748440ca2", "sha256": "cee503f29a08c8d9e882257916959bf92379b650fa167ff0415d8b47a9df9efd"}, "downloads": -1, "filename": "sanpy-0.7.0.tar.gz", "has_sig": false, "md5_digest": "f4230df42b894333eaffe05748440ca2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38782, "upload_time": "2019-09-18T14:45:56", "upload_time_iso_8601": "2019-09-18T14:45:56.625504Z", "url": "https://files.pythonhosted.org/packages/ad/b4/c4da8a7d01564b6d4a29014ed7edccb397e9863a8f539c85b3c5a37f1606/sanpy-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "0d68dace39e4bac62562636792a1f4bf", "sha256": "c0e4a4c0e5e477085bae3a9d2964bbbb5b30265e9ef3be9495e8c958d6abaddf"}, "downloads": -1, "filename": "sanpy-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0d68dace39e4bac62562636792a1f4bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 27156, "upload_time": "2019-10-07T13:56:31", "upload_time_iso_8601": "2019-10-07T13:56:31.342377Z", "url": "https://files.pythonhosted.org/packages/15/f6/18956da0fab8650c029c417a26b8f52c39316bb92718a4698d7a10fa3554/sanpy-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bec7f6120f2c5e9f9e306a3cc5d02745", "sha256": "a15a586e2fc69e61bd399992e1203ed69815e9376ed399569c0c7dacf5e8ccc1"}, "downloads": -1, "filename": "sanpy-0.7.1.tar.gz", "has_sig": false, "md5_digest": "bec7f6120f2c5e9f9e306a3cc5d02745", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40100, "upload_time": "2019-10-07T13:56:33", "upload_time_iso_8601": "2019-10-07T13:56:33.366785Z", "url": "https://files.pythonhosted.org/packages/b3/0c/fa373fe3c0eb5dc2b555dbfd03e5f255248c8a15d684c9a3bfc53f782904/sanpy-0.7.1.tar.gz", "yanked": false}], "0.7.10": [{"comment_text": "", "digests": {"md5": "c8a6764e7fd9885e7acb7a6ec5fa0ca6", "sha256": "2d14cf464ca83785cb00ada114ae96d2b2678c384ad613c01b6794f84bf59f36"}, "downloads": -1, "filename": "sanpy-0.7.10-py3-none-any.whl", "has_sig": false, "md5_digest": "c8a6764e7fd9885e7acb7a6ec5fa0ca6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29580, "upload_time": "2019-12-19T19:05:45", "upload_time_iso_8601": "2019-12-19T19:05:45.752698Z", "url": "https://files.pythonhosted.org/packages/22/28/ae9b3b267d82c23d375657b99760a550266ff20fbca1fad2df8f42b5b3db/sanpy-0.7.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7690c01a48831d4233a0bf111e533966", "sha256": "601e33d32874af898cf72eed82a073ea673f49e58441fdd2afeacc4da35c7c56"}, "downloads": -1, "filename": "sanpy-0.7.10.tar.gz", "has_sig": false, "md5_digest": "7690c01a48831d4233a0bf111e533966", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41703, "upload_time": "2019-12-19T19:05:47", "upload_time_iso_8601": "2019-12-19T19:05:47.791206Z", "url": "https://files.pythonhosted.org/packages/96/9a/efc5716c5cb67ff8ef1ce27c8c56d3939984a1c8abed7d3599388f945c9f/sanpy-0.7.10.tar.gz", "yanked": false}], "0.7.11": [{"comment_text": "", "digests": {"md5": "671e11490e47e1a96616712d9f1d8c83", "sha256": "932dfa5586412ee5e7b4615062e8f5ac1179a87199950e12f1e21a096b03de84"}, "downloads": -1, "filename": "sanpy-0.7.11-py3-none-any.whl", "has_sig": false, "md5_digest": "671e11490e47e1a96616712d9f1d8c83", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29568, "upload_time": "2020-01-07T09:59:03", "upload_time_iso_8601": "2020-01-07T09:59:03.359399Z", "url": "https://files.pythonhosted.org/packages/95/10/3f1db87da7ca70ad38e63d8f184785f98ff0561b07c4464f1e2c17544cfa/sanpy-0.7.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ead1256aed371b3a39536b9b147d58c", "sha256": "803ca4875f76e2308ed61786c5136b72562c17bc1de27ceab6006a04a030835f"}, "downloads": -1, "filename": "sanpy-0.7.11.tar.gz", "has_sig": false, "md5_digest": "3ead1256aed371b3a39536b9b147d58c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41695, "upload_time": "2020-01-07T09:59:05", "upload_time_iso_8601": "2020-01-07T09:59:05.147648Z", "url": "https://files.pythonhosted.org/packages/c8/67/4c0c4e94ba253df12e99c5699860d1e3990c1a2d1fe191f6776b4dfbaf10/sanpy-0.7.11.tar.gz", "yanked": false}], "0.7.13": [{"comment_text": "", "digests": {"md5": "8f8446318182fdc8b8d8db83e7dbf2c5", "sha256": "f5b56ae0cd3474af57b8e170757cc8d8f42faa98525710890ebf179c736bd7fe"}, "downloads": -1, "filename": "sanpy-0.7.13-py3-none-any.whl", "has_sig": false, "md5_digest": "8f8446318182fdc8b8d8db83e7dbf2c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29124, "upload_time": "2020-01-21T13:32:21", "upload_time_iso_8601": "2020-01-21T13:32:21.332968Z", "url": "https://files.pythonhosted.org/packages/9c/9f/c7b99a7657565b8e596384fdd0cb6da8d40ab59efefdfa9582f1a95f116d/sanpy-0.7.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "81dbfefe2f7d20b0122497500bc9a8bd", "sha256": "f4826bcf589796cac54d6265e17ce54559e815aae93e81e0806e3649d7847e8a"}, "downloads": -1, "filename": "sanpy-0.7.13.tar.gz", "has_sig": false, "md5_digest": "81dbfefe2f7d20b0122497500bc9a8bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40133, "upload_time": "2020-01-21T13:32:23", "upload_time_iso_8601": "2020-01-21T13:32:23.601947Z", "url": "https://files.pythonhosted.org/packages/a4/48/ba8b00290c12ed391e5b6bad741c6066e8cbffb04396491b7b22ecb0f901/sanpy-0.7.13.tar.gz", "yanked": false}], "0.7.14": [{"comment_text": "", "digests": {"md5": "2ad018bc4e0f625fba7de875732c5d27", "sha256": "e8f17610bbe0f959ddcc8b35d0047f030e941fa34cd96b491885a697a2aa3fe1"}, "downloads": -1, "filename": "sanpy-0.7.14-py3-none-any.whl", "has_sig": false, "md5_digest": "2ad018bc4e0f625fba7de875732c5d27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29635, "upload_time": "2020-01-27T10:22:31", "upload_time_iso_8601": "2020-01-27T10:22:31.213687Z", "url": "https://files.pythonhosted.org/packages/04/c2/dee93ca69df8f3527e3eb1ef19066fb22e73da673bf4c3549c60e9471723/sanpy-0.7.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f002e434a48a7e2f18f999746bb5e40", "sha256": "853691d74f9355d0ce5fd458d167a7d3c41e520c574bf3bfe7e6f7b51f4e1490"}, "downloads": -1, "filename": "sanpy-0.7.14.tar.gz", "has_sig": false, "md5_digest": "9f002e434a48a7e2f18f999746bb5e40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40676, "upload_time": "2020-01-27T10:22:33", "upload_time_iso_8601": "2020-01-27T10:22:33.534413Z", "url": "https://files.pythonhosted.org/packages/91/d1/7dd5259db323b0998d988cf84359d1da252da324ca5b0a36f00e14a9453e/sanpy-0.7.14.tar.gz", "yanked": false}], "0.7.15": [{"comment_text": "", "digests": {"md5": "d5bf2459fd3e821f83bdd1674b74e1d6", "sha256": "bbd3b71368eef7b730c1229fa3e7f32431cce20dabddff942926f1e67ca31508"}, "downloads": -1, "filename": "sanpy-0.7.15-py3-none-any.whl", "has_sig": false, "md5_digest": "d5bf2459fd3e821f83bdd1674b74e1d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29636, "upload_time": "2020-02-04T11:16:00", "upload_time_iso_8601": "2020-02-04T11:16:00.996679Z", "url": "https://files.pythonhosted.org/packages/48/8d/82b5d0bf15f2105e4b36d40fc629dd32576edbd79bf84c8dd0b468778885/sanpy-0.7.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fee62c3b851c955c8f4c25a0084a0777", "sha256": "ef1539123d10c1745d063f6b356ddec62bd47ce6f72dda87d3f214fc2e127c0d"}, "downloads": -1, "filename": "sanpy-0.7.15.tar.gz", "has_sig": false, "md5_digest": "fee62c3b851c955c8f4c25a0084a0777", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40675, "upload_time": "2020-02-04T11:16:02", "upload_time_iso_8601": "2020-02-04T11:16:02.996223Z", "url": "https://files.pythonhosted.org/packages/2f/1a/3657ba414eb3b72218eadd479f1d9897f5d01eac7f93f352777e04de75f0/sanpy-0.7.15.tar.gz", "yanked": false}], "0.7.16": [{"comment_text": "", "digests": {"md5": "b33ecd4523e5915e84955ba855535075", "sha256": "bf72746441a48e089dbee60d1113b24a0654fcc0c39841f16aa444069366517f"}, "downloads": -1, "filename": "sanpy-0.7.16-py3-none-any.whl", "has_sig": false, "md5_digest": "b33ecd4523e5915e84955ba855535075", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30071, "upload_time": "2020-02-20T14:46:31", "upload_time_iso_8601": "2020-02-20T14:46:31.095343Z", "url": "https://files.pythonhosted.org/packages/a6/47/62197d32bb79bb9d1b71ae74ae5343a01c33bc4ca5772bcc788e15020667/sanpy-0.7.16-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e573f3906e63db333d9d1437e619117", "sha256": "b323e22c3046429a87f87bd639020195acabba95ecc3f52c1e15eb536dd0000f"}, "downloads": -1, "filename": "sanpy-0.7.16.tar.gz", "has_sig": false, "md5_digest": "9e573f3906e63db333d9d1437e619117", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41515, "upload_time": "2020-02-20T14:46:33", "upload_time_iso_8601": "2020-02-20T14:46:33.198779Z", "url": "https://files.pythonhosted.org/packages/13/59/8accdb4dad13c61ee3ab04dd0235ee7440591c2e8534ad3f2d70640d0c2a/sanpy-0.7.16.tar.gz", "yanked": false}], "0.7.18": [{"comment_text": "", "digests": {"md5": "0bd4c79d3cdb15714ac04db0831d2dd1", "sha256": "4cd0e41f76a2322f24f287e8000c6d2cf6ab206014e00b0f77f2884d2cf53f19"}, "downloads": -1, "filename": "sanpy-0.7.18-py3-none-any.whl", "has_sig": false, "md5_digest": "0bd4c79d3cdb15714ac04db0831d2dd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32863, "upload_time": "2020-03-25T10:10:28", "upload_time_iso_8601": "2020-03-25T10:10:28.775136Z", "url": "https://files.pythonhosted.org/packages/96/fe/fdb1452b74a8b05cb01ab2339fd8ede1139b3bdf878edaf017b269191650/sanpy-0.7.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14fa8f1b11f9af3fdfba94389ef52d56", "sha256": "6aa92542893c12f02bd0ff1372d469f3f6fff3d4ceb3fbfab85a14704f7416fc"}, "downloads": -1, "filename": "sanpy-0.7.18.tar.gz", "has_sig": false, "md5_digest": "14fa8f1b11f9af3fdfba94389ef52d56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43628, "upload_time": "2020-03-25T10:10:30", "upload_time_iso_8601": "2020-03-25T10:10:30.817157Z", "url": "https://files.pythonhosted.org/packages/0c/c8/d5357c496a40a6318ce0656242078df3b02a5e85ab53597078d455c5ea54/sanpy-0.7.18.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "73434067341e95eb1f2a7a658da1b9f2", "sha256": "6ecd9fdaba711e5afac33ca4b6f57928b058a644b95b889ffcb5a60dc3db1e57"}, "downloads": -1, "filename": "sanpy-0.7.4-py3-none-any.whl", "has_sig": false, "md5_digest": "73434067341e95eb1f2a7a658da1b9f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29313, "upload_time": "2019-11-01T10:36:16", "upload_time_iso_8601": "2019-11-01T10:36:16.640760Z", "url": "https://files.pythonhosted.org/packages/44/25/aafb04bb9e8f5f187d34bf93e8a6923a820ef9f35deaf35734546aa7024e/sanpy-0.7.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b06d400517919039fe15986c26112402", "sha256": "ae04ff90f66b5a025ed9857a85b5e6ca4eed7fe7859ac213ac0a2abe07976766"}, "downloads": -1, "filename": "sanpy-0.7.4.tar.gz", "has_sig": false, "md5_digest": "b06d400517919039fe15986c26112402", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41499, "upload_time": "2019-11-01T10:36:19", "upload_time_iso_8601": "2019-11-01T10:36:19.251128Z", "url": "https://files.pythonhosted.org/packages/84/c3/caa2a9acff7342131636eed49c3e1654b2949cb5ff7bb3077baf8f80870e/sanpy-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "91f40ced0b5000ddb1faf604bcc722b4", "sha256": "6cf011e864c572e2516ff98cd9cf442da2e92915746d25a8adc6d9eef4114146"}, "downloads": -1, "filename": "sanpy-0.7.5-py3-none-any.whl", "has_sig": false, "md5_digest": "91f40ced0b5000ddb1faf604bcc722b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29365, "upload_time": "2019-11-04T13:20:47", "upload_time_iso_8601": "2019-11-04T13:20:47.244198Z", "url": "https://files.pythonhosted.org/packages/b3/95/e03572f8807ede9e1914b972f86e342f8d148e19bc562436876a477ca787/sanpy-0.7.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "004a57dc505dd1eb00122bc508184208", "sha256": "d34c59cc2f5b27af5849eef9a375152f0cec4a9aeba8ee9a027c11195a983109"}, "downloads": -1, "filename": "sanpy-0.7.5.tar.gz", "has_sig": false, "md5_digest": "004a57dc505dd1eb00122bc508184208", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41555, "upload_time": "2019-11-04T13:20:48", "upload_time_iso_8601": "2019-11-04T13:20:48.969403Z", "url": "https://files.pythonhosted.org/packages/3b/10/656094543d827236236564d531eab9c5e17eba11231c1cdf8c4710aa5dbc/sanpy-0.7.5.tar.gz", "yanked": false}], "0.7.8": [{"comment_text": "", "digests": {"md5": "68fb201a7ffb204f7745940a6d576f1d", "sha256": "b44f0fdafaf9715bf8200d5237ddac5f2c583e417d0258ed102e732844bb5eab"}, "downloads": -1, "filename": "sanpy-0.7.8-py3-none-any.whl", "has_sig": false, "md5_digest": "68fb201a7ffb204f7745940a6d576f1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29532, "upload_time": "2019-11-29T13:27:41", "upload_time_iso_8601": "2019-11-29T13:27:41.272416Z", "url": "https://files.pythonhosted.org/packages/01/c6/65eb5ddeeeffe3e816865144594a31593de213076892ee7ce829e545dd58/sanpy-0.7.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93dffdb3cd60364676674548525842bf", "sha256": "01d8f513fc452b7854b0425bc6bac0ede5babc905c9ae9158546fc217eb001c3"}, "downloads": -1, "filename": "sanpy-0.7.8.tar.gz", "has_sig": false, "md5_digest": "93dffdb3cd60364676674548525842bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41696, "upload_time": "2019-11-29T13:27:43", "upload_time_iso_8601": "2019-11-29T13:27:43.264026Z", "url": "https://files.pythonhosted.org/packages/03/63/ee94bc37079f7cfb695b60f5e61e5ed6a0e3696d8f9af25b56eda024d317/sanpy-0.7.8.tar.gz", "yanked": false}], "0.7.9": [{"comment_text": "", "digests": {"md5": "495d82df02600bd386de3abd3a2b8a90", "sha256": "919d780e3d06a4ed884d1ab77493f2b55cce36aa51d7b5856ea3a955fa0754aa"}, "downloads": -1, "filename": "sanpy-0.7.9-py3-none-any.whl", "has_sig": false, "md5_digest": "495d82df02600bd386de3abd3a2b8a90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29541, "upload_time": "2019-12-10T11:00:30", "upload_time_iso_8601": "2019-12-10T11:00:30.413933Z", "url": "https://files.pythonhosted.org/packages/d3/91/9a2fefe466562b3943219e37f36134b503cf05c85b02b873cd98074c85e4/sanpy-0.7.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f4f2132b416d531e37889de93948c678", "sha256": "81f9f26548bbdb7f16467e7a6225b2d3fda8eddb8d572f7e14606c303a9022c1"}, "downloads": -1, "filename": "sanpy-0.7.9.tar.gz", "has_sig": false, "md5_digest": "f4f2132b416d531e37889de93948c678", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41696, "upload_time": "2019-12-10T11:00:32", "upload_time_iso_8601": "2019-12-10T11:00:32.990781Z", "url": "https://files.pythonhosted.org/packages/e0/fb/8ffa86404c320955016adf09d373f496f1773ce8e773c6299fbde097983f/sanpy-0.7.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0bd4c79d3cdb15714ac04db0831d2dd1", "sha256": "4cd0e41f76a2322f24f287e8000c6d2cf6ab206014e00b0f77f2884d2cf53f19"}, "downloads": -1, "filename": "sanpy-0.7.18-py3-none-any.whl", "has_sig": false, "md5_digest": "0bd4c79d3cdb15714ac04db0831d2dd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32863, "upload_time": "2020-03-25T10:10:28", "upload_time_iso_8601": "2020-03-25T10:10:28.775136Z", "url": "https://files.pythonhosted.org/packages/96/fe/fdb1452b74a8b05cb01ab2339fd8ede1139b3bdf878edaf017b269191650/sanpy-0.7.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14fa8f1b11f9af3fdfba94389ef52d56", "sha256": "6aa92542893c12f02bd0ff1372d469f3f6fff3d4ceb3fbfab85a14704f7416fc"}, "downloads": -1, "filename": "sanpy-0.7.18.tar.gz", "has_sig": false, "md5_digest": "14fa8f1b11f9af3fdfba94389ef52d56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43628, "upload_time": "2020-03-25T10:10:30", "upload_time_iso_8601": "2020-03-25T10:10:30.817157Z", "url": "https://files.pythonhosted.org/packages/0c/c8/d5357c496a40a6318ce0656242078df3b02a5e85ab53597078d455c5ea54/sanpy-0.7.18.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:39 2020"}