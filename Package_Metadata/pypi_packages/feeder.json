{"info": {"author": "nir0s", "author_email": "nir36g@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: Microsoft", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing", "Topic :: System :: Logging"], "description": "feeder\n======\n\n|Build Status|\n\n|Gitter chat|\n\n|PyPI|\n\n|PypI|\n\nfeeder generates events/logs using a specified formatter and sends them\nusing the specified transport. It can also generate fake data using\nfake-factory.\n\nQuick Start\n~~~~~~~~~~~\n\n`Quick\nStart <http://feeder.readthedocs.org/en/latest/quick_start.html>`__\n\nDocumentation\n~~~~~~~~~~~~~\n\n`feeder Documentation <http://feeder.readthedocs.org>`__\n\nInstallation\n~~~~~~~~~~~~\n\n.. code:: shell\n\n     pip install feeder\n     # or, for dev:\n     pip install https://github.com/nir0s/feeder/archive/master.tar.gz\n\nUsage Examples\n~~~~~~~~~~~~~~\n\nsee `feeder\nconfig <http://feeder.readthedocs.org/en/latest/configuration.html>`__\nand `advanced\nconfig <http://feeder.readthedocs.org/en/latest/advanced_configuration.html>`__\nto configure your transports and formatters.\n\n.. code:: shell\n\n     # this will assume config.py in the cwd and assume default for each option\n     mouth feed\n     # or.. you can specify whatever you want in the cli..\n     mouth feed -c /my/config/file/path.py -t AMQP -f Json -g 0.001 -m 100000000\n     mouth feed -t UDP -f Custom -g 0.00001 -m 102831028\n     # you can also send in batches\n     mouth feed -t UDP -f Custom -g 0.01 -m 102831028 -b 1000\n     # and even use some common formatters like apache's..\n     mouth feed -t Stream -f ApacheError\n     # print fake data types that you can use in the config...\n     mouth list fake\n     # print a list of available transports\n     mouth list transports\n     # print a list of available formatters\n     mouth list formatters\n\nAdditional Information\n~~~~~~~~~~~~~~~~~~~~~~\n\n-  `Use\n   Case <http://feeder.readthedocs.org/en/latest/case_study.html>`__\n-  `Configuration <http://feeder.readthedocs.org/en/latest/configuration.html>`__\n-  `formatters <http://feeder.readthedocs.org/en/latest/formatters.html>`__\n-  `transports <http://feeder.readthedocs.org/en/latest/transports.html>`__\n-  `API <http://feeder.readthedocs.org/en/latest/api.html>`__\n-  `InHouseFaker <http://feeder.readthedocs.org/en/latest/in_house_faker.html>`__\n\nVagrant\n~~~~~~~\n\nA vagrantfile is provided: It will load a machine and install feeder on\nit in a virtualenv so that you can experiment with it. For a machine\ncontaining feeder, ELK and RabbitMQ see the `elk-workshop\nrepo <https://github.com/nir0s/elk-workshop>`__.\n\n.. |Build Status| image:: https://travis-ci.org/nir0s/feeder.svg?branch=master\n   :target: https://travis-ci.org/nir0s/feeder\n.. |Gitter chat| image:: https://badges.gitter.im/nir0s/feeder.png\n   :target: https://gitter.im/nir0s/feeder\n.. |PyPI| image:: http://img.shields.io/pypi/dm/feeder.svg\n   :target: http://img.shields.io/pypi/dm/feeder.svg\n.. |PypI| image:: http://img.shields.io/pypi/v/feeder.svg\n   :target: http://img.shields.io/pypi/v/feeder.svg", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/nir0s/feeder/tarball/0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nir0s/feeder", "keywords": null, "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "feeder", "package_url": "https://pypi.org/project/feeder/", "platform": "All", "project_url": "https://pypi.org/project/feeder/", "project_urls": {"Download": "https://github.com/nir0s/feeder/tarball/0.1", "Homepage": "https://github.com/nir0s/feeder"}, "release_url": "https://pypi.org/project/feeder/0.4.3/", "requires_dist": null, "requires_python": null, "summary": "Data Feeder using different transports", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/nir0s/feeder\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/914b784c2d271696b68306903f115992ade497c4/68747470733a2f2f7472617669732d63692e6f72672f6e697230732f6665656465722e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><a href=\"https://gitter.im/nir0s/feeder\" rel=\"nofollow\"><img alt=\"Gitter chat\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ea69d3f2e951d67c7a0f67ef91cb595a7fca94c/68747470733a2f2f6261646765732e6769747465722e696d2f6e697230732f6665656465722e706e67\"></a></p>\n<p><a href=\"http://img.shields.io/pypi/dm/feeder.svg\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6edf6da2a1b7c6d7b9506809a9411b876e01b0b/687474703a2f2f696d672e736869656c64732e696f2f707970692f646d2f6665656465722e737667\"></a></p>\n<p><a href=\"http://img.shields.io/pypi/v/feeder.svg\" rel=\"nofollow\"><img alt=\"PypI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8573ee4cb0868da56e1d94c0fc5f32fe34f69eee/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f6665656465722e737667\"></a></p>\n<p>feeder generates events/logs using a specified formatter and sends them\nusing the specified transport. It can also generate fake data using\nfake-factory.</p>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p><a href=\"http://feeder.readthedocs.org/en/latest/quick_start.html\" rel=\"nofollow\">Quick\nStart</a></p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"http://feeder.readthedocs.org\" rel=\"nofollow\">feeder Documentation</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install feeder\n<span class=\"c1\"># or, for dev:\n</span>pip install https://github.com/nir0s/feeder/archive/master.tar.gz\n</pre>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage Examples</h2>\n<p>see <a href=\"http://feeder.readthedocs.org/en/latest/configuration.html\" rel=\"nofollow\">feeder\nconfig</a>\nand <a href=\"http://feeder.readthedocs.org/en/latest/advanced_configuration.html\" rel=\"nofollow\">advanced\nconfig</a>\nto configure your transports and formatters.</p>\n<pre><span class=\"c1\"># this will assume config.py in the cwd and assume default for each option\n</span>mouth feed\n<span class=\"c1\"># or.. you can specify whatever you want in the cli..\n</span>mouth feed -c /my/config/file/path.py -t AMQP -f Json -g <span class=\"m\">0</span>.001 -m <span class=\"m\">100000000</span>\nmouth feed -t UDP -f Custom -g <span class=\"m\">0</span>.00001 -m <span class=\"m\">102831028</span>\n<span class=\"c1\"># you can also send in batches\n</span>mouth feed -t UDP -f Custom -g <span class=\"m\">0</span>.01 -m <span class=\"m\">102831028</span> -b <span class=\"m\">1000</span>\n<span class=\"c1\"># and even use some common formatters like apache's..\n</span>mouth feed -t Stream -f ApacheError\n<span class=\"c1\"># print fake data types that you can use in the config...\n</span>mouth list fake\n<span class=\"c1\"># print a list of available transports\n</span>mouth list transports\n<span class=\"c1\"># print a list of available formatters\n</span>mouth list formatters\n</pre>\n</div>\n<div id=\"additional-information\">\n<h2>Additional Information</h2>\n<ul>\n<li><a href=\"http://feeder.readthedocs.org/en/latest/case_study.html\" rel=\"nofollow\">Use\nCase</a></li>\n<li><a href=\"http://feeder.readthedocs.org/en/latest/configuration.html\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"http://feeder.readthedocs.org/en/latest/formatters.html\" rel=\"nofollow\">formatters</a></li>\n<li><a href=\"http://feeder.readthedocs.org/en/latest/transports.html\" rel=\"nofollow\">transports</a></li>\n<li><a href=\"http://feeder.readthedocs.org/en/latest/api.html\" rel=\"nofollow\">API</a></li>\n<li><a href=\"http://feeder.readthedocs.org/en/latest/in_house_faker.html\" rel=\"nofollow\">InHouseFaker</a></li>\n</ul>\n</div>\n<div id=\"vagrant\">\n<h2>Vagrant</h2>\n<p>A vagrantfile is provided: It will load a machine and install feeder on\nit in a virtualenv so that you can experiment with it. For a machine\ncontaining feeder, ELK and RabbitMQ see the <a href=\"https://github.com/nir0s/elk-workshop\" rel=\"nofollow\">elk-workshop\nrepo</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 1304991, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "00fd51c1a7f2dff0c41699dda7441472", "sha256": "dac30d85d461543839f1841d5111c46d1e9aa8e43837a15dfa32b2e1dae10543"}, "downloads": -1, "filename": "feeder-0.3.0.tar.gz", "has_sig": false, "md5_digest": "00fd51c1a7f2dff0c41699dda7441472", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13896, "upload_time": "2014-07-29T08:48:37", "upload_time_iso_8601": "2014-07-29T08:48:37.161846Z", "url": "https://files.pythonhosted.org/packages/e1/6a/e310503468a0f029fa6446e8cd18746bf46f1d8636897179d2a1e135da67/feeder-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "1f0e4a034f523a5d07f8f36dd80958e9", "sha256": "9954068c124bcb6f91be9564e6cdd8598061fdd376a12ec5722836288a67b52e"}, "downloads": -1, "filename": "feeder-0.3.1.tar.gz", "has_sig": false, "md5_digest": "1f0e4a034f523a5d07f8f36dd80958e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13919, "upload_time": "2014-08-04T10:19:50", "upload_time_iso_8601": "2014-08-04T10:19:50.340736Z", "url": "https://files.pythonhosted.org/packages/0b/55/9431b33b25aed385770274ef97b82a48622d8a79a22831aadc7c8b632edf/feeder-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "043ba7b6384f19750360647b403c12ec", "sha256": "a35efc1d747fca112792cddf3260fb80b9794a88c3b1c7f3d4c442db14b6f5e0"}, "downloads": -1, "filename": "feeder-0.3.2.tar.gz", "has_sig": false, "md5_digest": "043ba7b6384f19750360647b403c12ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13941, "upload_time": "2014-08-04T10:21:53", "upload_time_iso_8601": "2014-08-04T10:21:53.952590Z", "url": "https://files.pythonhosted.org/packages/de/64/a3214e88199789d977a88f615f8234b03aed436801883d616dd99a2639a7/feeder-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "b893df4ae6618e34ab4fcf07777e421d", "sha256": "8bb3a85eb891f717bd0fa35b938c1760c891173fd8f458443a5df14cedfdf918"}, "downloads": -1, "filename": "feeder-0.3.3.tar.gz", "has_sig": false, "md5_digest": "b893df4ae6618e34ab4fcf07777e421d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14068, "upload_time": "2014-08-04T10:33:59", "upload_time_iso_8601": "2014-08-04T10:33:59.810611Z", "url": "https://files.pythonhosted.org/packages/98/6a/7be5b177ad223d6aaef7c6a0edc6707bc0c2f17ff6e89d4c5c66d3bfa8f9/feeder-0.3.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "97371ba325033f8c7ba900d045122563", "sha256": "4f01f316b55cef88b4a018f8155b081d191450636b58628f94f921ede7896a61"}, "downloads": -1, "filename": "feeder-0.4.0.tar.gz", "has_sig": false, "md5_digest": "97371ba325033f8c7ba900d045122563", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25350, "upload_time": "2014-10-08T05:32:17", "upload_time_iso_8601": "2014-10-08T05:32:17.897351Z", "url": "https://files.pythonhosted.org/packages/90/44/919c50d58d3cd8556c12657ab6c2b84a885a0a8f934421d3b73332651954/feeder-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "80dbdad75311c8105410e9aba4c77cf4", "sha256": "27067fffbb3f8c00ec6fc7fcee0753061fe0fb4a875e8a877c61fd6687a78c79"}, "downloads": -1, "filename": "feeder-0.4.1.tar.gz", "has_sig": false, "md5_digest": "80dbdad75311c8105410e9aba4c77cf4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25333, "upload_time": "2014-10-11T19:21:21", "upload_time_iso_8601": "2014-10-11T19:21:21.643074Z", "url": "https://files.pythonhosted.org/packages/13/1c/32a05208321c2daac6348633baf356381c82bbbedc3da81c17975eb910a6/feeder-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "15b5917be0bc54e287b2534964df6292", "sha256": "e212b7c21db86d54b585f6944fa51644984b057c9a9d3523d553b780fe04cdf2"}, "downloads": -1, "filename": "feeder-0.4.2.tar.gz", "has_sig": false, "md5_digest": "15b5917be0bc54e287b2534964df6292", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25584, "upload_time": "2014-11-01T09:39:01", "upload_time_iso_8601": "2014-11-01T09:39:01.529656Z", "url": "https://files.pythonhosted.org/packages/12/8e/3d05d65a367b5208027ae0bd774e4cc282466dd0f88d66981363a7a4cfe4/feeder-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "ba4fda8e80f429ce6c7d9f556383a1ba", "sha256": "4a031aceed1b132b57750942f88f069f671edccf4716bc6344b6cb9f96442f1f"}, "downloads": -1, "filename": "feeder-0.4.3.tar.gz", "has_sig": false, "md5_digest": "ba4fda8e80f429ce6c7d9f556383a1ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25593, "upload_time": "2014-11-13T07:07:29", "upload_time_iso_8601": "2014-11-13T07:07:29.263652Z", "url": "https://files.pythonhosted.org/packages/5f/ea/7bad4649c26880251e26ad9890c1c3263c1f335496bd9ce57374e3fb1ccc/feeder-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba4fda8e80f429ce6c7d9f556383a1ba", "sha256": "4a031aceed1b132b57750942f88f069f671edccf4716bc6344b6cb9f96442f1f"}, "downloads": -1, "filename": "feeder-0.4.3.tar.gz", "has_sig": false, "md5_digest": "ba4fda8e80f429ce6c7d9f556383a1ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25593, "upload_time": "2014-11-13T07:07:29", "upload_time_iso_8601": "2014-11-13T07:07:29.263652Z", "url": "https://files.pythonhosted.org/packages/5f/ea/7bad4649c26880251e26ad9890c1c3263c1f335496bd9ce57374e3fb1ccc/feeder-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:00 2020"}