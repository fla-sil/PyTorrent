{"info": {"author": "Bernard Zhao", "author_email": "bernardzhao@berkeley.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "# pixelsort\n\n### What is Pixel Sorting?\n\nHave a look at [this post](http://satyarth.me/articles/pixel-sorting/) or [/r/pixelsorting](http://www.reddit.com/r/pixelsorting/top/)\n\n### Dependencies\n\nShould work in both Python 2 and 3, but Python 3 is recommended.\n\n## Usage\n\nFrom the command line:\n\n```\npip install pixelsort\npython3 -m pixelsort %PathToImage% [options]\n```\n\nTip: To replicate Kim Asendorf's original [processing script](https://github.com/kimasendorf/ASDFPixelSort), first sort vertically and then horizontally in `threshold` (default) mode:\n\n```\npython3 -m pixelsort %PathToImage% -a 90\npython3 -m pixelsort %PathToSortedImage%\n```\n\nAs a package:\n\n```\n>>> from pixelsort import pixelsort\n>>> from PIL import Image\n>>> a = Image.open(\"examples/image.jpg\")\n>>> a\n<PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=576x324 at 0x7F8F6A2AC208>\n>>> pixelsort(a)\n<PIL.Image.Image image mode=RGBA size=576x324 at 0x7F8F66AA57B8>\n```\n\n#### Parameters:\n\nParameter \t\t\t        | Flag \t| Description\n------------------------|-------|------------\nInterval function     \t| `-i`\t| Controls how the intervals used for sorting are defined. See below for more details and examples. Threshold by default.\nOutput path             | `-o`\t| Path of output file. Uses the current time for the file name by default.\nRandomness \t\t\t        | `-r`\t| What percentage of intervals *not* to sort. 0 by default.\nThreshold (lower)     \t| `-t`\t| How dark must a pixel be to be considered as a 'border' for sorting? Takes values from 0-1. 0.25 by default. Used in `edges` and `threshold` modes.\nThreshold (upper)     \t| `-u`\t| How bright must a pixel be to be considered as a 'border' for sorting? Takes values from 0-1. 0.8 by default. Used in `threshold` mode.\nChar. length\t\t        | `-c`\t| Characteristic length for the random width generator. Used in mode `random` and `waves`.\nAngle \t\t\t\t          | `-a`\t| Angle at which you're pixel sorting in degrees. `0` (horizontal) by default.\nExternal interval file \t| `-f` \t| Image used to define intervals. Must be black and white.\nSorting function        | `-s`  | Sorting function to use for sorting the pixels. Lightness by default.\nMask                    | `-m`  | Image used for masking parts of the image.\nLogging level           | `-l`  | Level of logging statements made visible. Choices include `DEBUG`, `INFO`, `WARNING`, `ERROR`, and `CRITICAL`. `WARNING` by default.\n\n#### Interval Functions\n\nInterval function | Description\n------------------|------------\n`random`\t\t\t    | Randomly generate intervals. Distribution of widths is linear by default. Interval widths can be scaled using `clength`.\n`edges`\t\t\t\t    | Performs an edge detection, which is used to define intervals. Tweak threshold with `threshold`.\n`threshold`\t\t  \t| Intervals defined by lightness thresholds; only pixels with a lightness between the upper and lower thresholds are sorted.\n`waves`\t\t\t    \t| Intervals are waves of nearly uniform widths. Control width of waves with `clength`.\n`file`\t\t\t    \t| Intervals taken from another specified input image. Must be black and white, and the same size as the input image.\n`file-edges`\t  \t| Intevals defined by performing edge detection on the file specified by `-f`. Must be the same size as the input image.\n`none`\t\t\t    \t| Sort whole rows, only stopping at image borders.\n\n\n#### Sorting Functions\n\nSorting function  | Description\n------------------|------------\n`lightness`       | Sort by the lightness of a pixel according to a HSV representation.\n`hue`             | Sort by the hue of a pixel according to a HSV representation.\n`saturation`      | Sort by the saturation of a pixel according to a HSV representation.\n`intensity`       | Sort by the intensity of a pixel, i.e. the sum of all the RGB values.\n`minimum`         | Sort on the minimum RGB value of a pixel (either the R, G or B).\n\n#### Examples\n\n`python3 -m pixelsort examples/image.jpg -i random -c 20`\n\n![random](/examples/random.png)\n\n`python3 -m pixelsort examples/image.jpg -i edges -t .5`\n\n![edges](/examples/edges.png)\n\n* `file`: Intervals taken from image specified with `-f`. Must be black and white.\n\n`python3 -m pixelsort examples/image.jpg -i file -f examples/intervals.png `\n\n![file](/examples/intervals.png)\n\n(generated with [elementary-ca](https://github.com/satyarth/elementary-ca))\n\n![file](/examples/file.png)\n\n* `mask`: Mask taken from image specified with `-m`. Must be black and white.\n\n`python3 -m pixelsort examples/image.jpg -i random -c 20 -m examples/mask.png`\n\n![file](/examples/mask.png)\n\n![file](/examples/masked.png)\n\n### Todo\n\n* Allow defining different intervals for different channels.\n\n---\n\nBased on https://gist.github.com/prophetgoddess/667c5554e5d9d9a25ae6\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/satyarth/pixelsort", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pixelsort", "package_url": "https://pypi.org/project/pixelsort/", "platform": "", "project_url": "https://pypi.org/project/pixelsort/", "project_urls": {"Homepage": "https://github.com/satyarth/pixelsort"}, "release_url": "https://pypi.org/project/pixelsort/1.0.1/", "requires_dist": ["Pillow"], "requires_python": "", "summary": "An image pixelsorter for Python.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pixelsort</h1>\n<h3>What is Pixel Sorting?</h3>\n<p>Have a look at <a href=\"http://satyarth.me/articles/pixel-sorting/\" rel=\"nofollow\">this post</a> or <a href=\"http://www.reddit.com/r/pixelsorting/top/\" rel=\"nofollow\">/r/pixelsorting</a></p>\n<h3>Dependencies</h3>\n<p>Should work in both Python 2 and 3, but Python 3 is recommended.</p>\n<h2>Usage</h2>\n<p>From the command line:</p>\n<pre><code>pip install pixelsort\npython3 -m pixelsort %PathToImage% [options]\n</code></pre>\n<p>Tip: To replicate Kim Asendorf's original <a href=\"https://github.com/kimasendorf/ASDFPixelSort\" rel=\"nofollow\">processing script</a>, first sort vertically and then horizontally in <code>threshold</code> (default) mode:</p>\n<pre><code>python3 -m pixelsort %PathToImage% -a 90\npython3 -m pixelsort %PathToSortedImage%\n</code></pre>\n<p>As a package:</p>\n<pre><code>&gt;&gt;&gt; from pixelsort import pixelsort\n&gt;&gt;&gt; from PIL import Image\n&gt;&gt;&gt; a = Image.open(\"examples/image.jpg\")\n&gt;&gt;&gt; a\n&lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=576x324 at 0x7F8F6A2AC208&gt;\n&gt;&gt;&gt; pixelsort(a)\n&lt;PIL.Image.Image image mode=RGBA size=576x324 at 0x7F8F66AA57B8&gt;\n</code></pre>\n<h4>Parameters:</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Flag</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Interval function</td>\n<td><code>-i</code></td>\n<td>Controls how the intervals used for sorting are defined. See below for more details and examples. Threshold by default.</td>\n</tr>\n<tr>\n<td>Output path</td>\n<td><code>-o</code></td>\n<td>Path of output file. Uses the current time for the file name by default.</td>\n</tr>\n<tr>\n<td>Randomness</td>\n<td><code>-r</code></td>\n<td>What percentage of intervals <em>not</em> to sort. 0 by default.</td>\n</tr>\n<tr>\n<td>Threshold (lower)</td>\n<td><code>-t</code></td>\n<td>How dark must a pixel be to be considered as a 'border' for sorting? Takes values from 0-1. 0.25 by default. Used in <code>edges</code> and <code>threshold</code> modes.</td>\n</tr>\n<tr>\n<td>Threshold (upper)</td>\n<td><code>-u</code></td>\n<td>How bright must a pixel be to be considered as a 'border' for sorting? Takes values from 0-1. 0.8 by default. Used in <code>threshold</code> mode.</td>\n</tr>\n<tr>\n<td>Char. length</td>\n<td><code>-c</code></td>\n<td>Characteristic length for the random width generator. Used in mode <code>random</code> and <code>waves</code>.</td>\n</tr>\n<tr>\n<td>Angle</td>\n<td><code>-a</code></td>\n<td>Angle at which you're pixel sorting in degrees. <code>0</code> (horizontal) by default.</td>\n</tr>\n<tr>\n<td>External interval file</td>\n<td><code>-f</code></td>\n<td>Image used to define intervals. Must be black and white.</td>\n</tr>\n<tr>\n<td>Sorting function</td>\n<td><code>-s</code></td>\n<td>Sorting function to use for sorting the pixels. Lightness by default.</td>\n</tr>\n<tr>\n<td>Mask</td>\n<td><code>-m</code></td>\n<td>Image used for masking parts of the image.</td>\n</tr>\n<tr>\n<td>Logging level</td>\n<td><code>-l</code></td>\n<td>Level of logging statements made visible. Choices include <code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>, and <code>CRITICAL</code>. <code>WARNING</code> by default.</td>\n</tr></tbody></table>\n<h4>Interval Functions</h4>\n<table>\n<thead>\n<tr>\n<th>Interval function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>random</code></td>\n<td>Randomly generate intervals. Distribution of widths is linear by default. Interval widths can be scaled using <code>clength</code>.</td>\n</tr>\n<tr>\n<td><code>edges</code></td>\n<td>Performs an edge detection, which is used to define intervals. Tweak threshold with <code>threshold</code>.</td>\n</tr>\n<tr>\n<td><code>threshold</code></td>\n<td>Intervals defined by lightness thresholds; only pixels with a lightness between the upper and lower thresholds are sorted.</td>\n</tr>\n<tr>\n<td><code>waves</code></td>\n<td>Intervals are waves of nearly uniform widths. Control width of waves with <code>clength</code>.</td>\n</tr>\n<tr>\n<td><code>file</code></td>\n<td>Intervals taken from another specified input image. Must be black and white, and the same size as the input image.</td>\n</tr>\n<tr>\n<td><code>file-edges</code></td>\n<td>Intevals defined by performing edge detection on the file specified by <code>-f</code>. Must be the same size as the input image.</td>\n</tr>\n<tr>\n<td><code>none</code></td>\n<td>Sort whole rows, only stopping at image borders.</td>\n</tr></tbody></table>\n<h4>Sorting Functions</h4>\n<table>\n<thead>\n<tr>\n<th>Sorting function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>lightness</code></td>\n<td>Sort by the lightness of a pixel according to a HSV representation.</td>\n</tr>\n<tr>\n<td><code>hue</code></td>\n<td>Sort by the hue of a pixel according to a HSV representation.</td>\n</tr>\n<tr>\n<td><code>saturation</code></td>\n<td>Sort by the saturation of a pixel according to a HSV representation.</td>\n</tr>\n<tr>\n<td><code>intensity</code></td>\n<td>Sort by the intensity of a pixel, i.e. the sum of all the RGB values.</td>\n</tr>\n<tr>\n<td><code>minimum</code></td>\n<td>Sort on the minimum RGB value of a pixel (either the R, G or B).</td>\n</tr></tbody></table>\n<h4>Examples</h4>\n<p><code>python3 -m pixelsort examples/image.jpg -i random -c 20</code></p>\n<p><img alt=\"random\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f9679e1f7d622876c38af6f88f04be8c27bb52e/2f6578616d706c65732f72616e646f6d2e706e67\"></p>\n<p><code>python3 -m pixelsort examples/image.jpg -i edges -t .5</code></p>\n<p><img alt=\"edges\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e89657d45047d1a548860e0524caa2a982c249f5/2f6578616d706c65732f65646765732e706e67\"></p>\n<ul>\n<li><code>file</code>: Intervals taken from image specified with <code>-f</code>. Must be black and white.</li>\n</ul>\n<p><code>python3 -m pixelsort examples/image.jpg -i file -f examples/intervals.png</code></p>\n<p><img alt=\"file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a834762a98b22eb6cf726c0b68b9ad6fb0bf83e3/2f6578616d706c65732f696e74657276616c732e706e67\"></p>\n<p>(generated with <a href=\"https://github.com/satyarth/elementary-ca\" rel=\"nofollow\">elementary-ca</a>)</p>\n<p><img alt=\"file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae04c3f1e00e67f7b4366aa7bdb4e626507d8aaf/2f6578616d706c65732f66696c652e706e67\"></p>\n<ul>\n<li><code>mask</code>: Mask taken from image specified with <code>-m</code>. Must be black and white.</li>\n</ul>\n<p><code>python3 -m pixelsort examples/image.jpg -i random -c 20 -m examples/mask.png</code></p>\n<p><img alt=\"file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3cd028ee7306c85b175dfd82a59d8406d0e0f32c/2f6578616d706c65732f6d61736b2e706e67\"></p>\n<p><img alt=\"file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d101ebe5e495cbcf1db22349416454aa286e043/2f6578616d706c65732f6d61736b65642e706e67\"></p>\n<h3>Todo</h3>\n<ul>\n<li>Allow defining different intervals for different channels.</li>\n</ul>\n<hr>\n<p>Based on <a href=\"https://gist.github.com/prophetgoddess/667c5554e5d9d9a25ae6\" rel=\"nofollow\">https://gist.github.com/prophetgoddess/667c5554e5d9d9a25ae6</a></p>\n\n          </div>"}, "last_serial": 6385327, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "222eea454045a44920085fbb86fac2ad", "sha256": "6bc1364656ac334ccd4fea693eb72e26f21acf56acc7746b46a73ecc3273ad00"}, "downloads": -1, "filename": "pixelsort-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "222eea454045a44920085fbb86fac2ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9523, "upload_time": "2019-09-08T04:46:51", "upload_time_iso_8601": "2019-09-08T04:46:51.510349Z", "url": "https://files.pythonhosted.org/packages/63/c6/4d75cf3873427a35efe23b2a4f0bccb6498bd21a2642e99551aace460ae8/pixelsort-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e7839bc432e4215664226bd4a940fd7", "sha256": "1ed66c44270e1da9f1ec3c7ca2ebd9d95a32635f3c553cfd5d48a6ac2767ec28"}, "downloads": -1, "filename": "pixelsort-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1e7839bc432e4215664226bd4a940fd7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6964, "upload_time": "2019-09-08T04:46:52", "upload_time_iso_8601": "2019-09-08T04:46:52.939538Z", "url": "https://files.pythonhosted.org/packages/90/cb/b1f6147c259439a3ff779606ef1e72b746732e275711af7e933bb6542edc/pixelsort-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "ff6b3c747b18e18f2f1c406d6688e562", "sha256": "50518736ca2c41b94ce2fcbe0afa9e71e3431f4d654bd2da0eb61f48ca6e909c"}, "downloads": -1, "filename": "pixelsort-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "ff6b3c747b18e18f2f1c406d6688e562", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9406, "upload_time": "2019-09-08T04:46:15", "upload_time_iso_8601": "2019-09-08T04:46:15.936815Z", "url": "https://files.pythonhosted.org/packages/b6/97/0bbdd274df85b2d2d6c9a8695d8e7b65f354f6d0be4932c9d44842f6dad4/pixelsort-0.0.10-py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "82cbc846982659cee67593f905336345", "sha256": "ce8fe5fd021639d9d56b7c3efd675a198556df95d91f2f08f9cf334298c37052"}, "downloads": -1, "filename": "pixelsort-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "82cbc846982659cee67593f905336345", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10443, "upload_time": "2019-12-29T03:41:47", "upload_time_iso_8601": "2019-12-29T03:41:47.957206Z", "url": "https://files.pythonhosted.org/packages/6e/b2/9cf1a6322d391905a5f53a173a23b0bfcc8410f560d6bf79ccbf03a18932/pixelsort-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d5ef6148e7632ec09ed828029345617d", "sha256": "dafe757c34b5320838741cac08dddbc584a08dd2552109fa4f654d52ea4bdec8"}, "downloads": -1, "filename": "pixelsort-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d5ef6148e7632ec09ed828029345617d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7127, "upload_time": "2019-12-29T03:41:49", "upload_time_iso_8601": "2019-12-29T03:41:49.226780Z", "url": "https://files.pythonhosted.org/packages/09/18/72285d8072d4c348c3a91e152e4f956b8efdf32300c6c8b5496db682d42d/pixelsort-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "fc0f03cb99601cccfeeeed62f77829a6", "sha256": "0aa79e47eb1932a16d865d3afdfb713c0137896488061e0be53cc9ff619795bf"}, "downloads": -1, "filename": "pixelsort-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fc0f03cb99601cccfeeeed62f77829a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9940, "upload_time": "2020-01-02T09:44:29", "upload_time_iso_8601": "2020-01-02T09:44:29.028990Z", "url": "https://files.pythonhosted.org/packages/a5/57/148fc3f542dd9d3daaa7af5f99490beb60b5eb3b168ddf13007e9152a820/pixelsort-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccd7b004b0f60ce3d993fc5d098543c6", "sha256": "86ec9bbddb54a6ba2876d0b41ffdca02bc7c6796f1ecadfdc51feda3337479b9"}, "downloads": -1, "filename": "pixelsort-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ccd7b004b0f60ce3d993fc5d098543c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6178, "upload_time": "2020-01-02T09:44:30", "upload_time_iso_8601": "2020-01-02T09:44:30.388032Z", "url": "https://files.pythonhosted.org/packages/d0/c8/05cafa75d56489a648a79e352c8ed0125c17ef5aa646230a8ab2084d7d58/pixelsort-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc0f03cb99601cccfeeeed62f77829a6", "sha256": "0aa79e47eb1932a16d865d3afdfb713c0137896488061e0be53cc9ff619795bf"}, "downloads": -1, "filename": "pixelsort-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fc0f03cb99601cccfeeeed62f77829a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9940, "upload_time": "2020-01-02T09:44:29", "upload_time_iso_8601": "2020-01-02T09:44:29.028990Z", "url": "https://files.pythonhosted.org/packages/a5/57/148fc3f542dd9d3daaa7af5f99490beb60b5eb3b168ddf13007e9152a820/pixelsort-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccd7b004b0f60ce3d993fc5d098543c6", "sha256": "86ec9bbddb54a6ba2876d0b41ffdca02bc7c6796f1ecadfdc51feda3337479b9"}, "downloads": -1, "filename": "pixelsort-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ccd7b004b0f60ce3d993fc5d098543c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6178, "upload_time": "2020-01-02T09:44:30", "upload_time_iso_8601": "2020-01-02T09:44:30.388032Z", "url": "https://files.pythonhosted.org/packages/d0/c8/05cafa75d56489a648a79e352c8ed0125c17ef5aa646230a8ab2084d7d58/pixelsort-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:55 2020"}