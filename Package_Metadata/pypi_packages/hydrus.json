{"info": {"author": "Hydra Ecosystem", "author_email": "hydraecosystem@googlegroups.com", "bugtrack_url": null, "classifiers": [], "description": "hydrus [![Build Status](https://travis-ci.com/HTTP-APIs/hydrus.svg?branch=master)](https://travis-ci.com/HTTP-APIs/hydrus)\n===================\nhydrus is a set of **Python** based tools for easier and efficient creation of Hypermedia driven REST-APIs. hydrus utilises the power of [Linked Data](https://en.wikipedia.org/wiki/Linked_data) to create a powerful REST APIs to serve data.\nhydrus uses the [Hydra(W3C)](http://www.hydra-cg.com/) standard for creation and documentation of it's APIs.\n\nStart-up the demo\n-----------------\n* with *Docker* and *docker-compose* installed, run `docker-compose up --build`\n* open the browser at `http://localhost:8000/api/vocab`\n\nYou should be displaying the example API as served by the server.\n\nAdd your own Hydra documentation file\n-------------------------------------\nTo serve your own Hydra-RDF documentation file:\n* create a `doc.py` file as the ones in `examples/` directory containing your own *ApiDoc*\n* set the `APIDOC_REL_PATH` variable in `docker-compose.yml`. This should the relative path from the project root\n* start-up the demo as above.\n\nYou should be displaying your API as served by the server.\n\nTable of contents\n-------------\n* [Features](#features)\n* [Requirements](#req)\n* [Demo](#demo)\n* [Usage](#usage)\n\n<a name=\"features\"></a>\nFeatures\n-------------\nhydrus supports the following features:\n- A client that can understand Hydra vocabulary and interacts with a Hydra supporting server to basic [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) operations on data.\n- A generic server that can serve required data and metadata(in the form of API documentation) to a client over HTTP.\n- A middleware that allows users to use the client to interact with the server using Natural Language which is processed machine consumable language. **(under development)**\n\n<a name=\"req\"></a>\nRequirements\n-------------\nThe system is built over the following standards and tools:\n- [Flask](http://flask.pocoo.org/) a Python based micro-framework for handling server requests and responses.\n- [JSON-LD](http://json-ld.org/spec/latest/json-ld/) as the preferred data format.\n- [Hydra](http://www.hydra-cg.com/) as the API standard.\n- [SQLAlchemy](http://www.sqlalchemy.org/) as the backend database connector for storage and related operations.\n\nApart from this, there are also various Python packages that hydrus uses. Using `python setup.py install` installs all the required dependencies.\n\n**NOTE:** You'll need to use `python3` not `python2`.\n\n<a name=\"demo\"></a>\nDemo\n-------------\nTo run a demo for hydrus using the sample API, just do the following:\n\nClone hydrus:\n```bash\ngit clone https://github.com/HTTP-APIs/hydrus\n```\nChange directory and switch to the develop branch:\n```bash\ncd hydrus\n\ngit checkout -b develop origin/develop\n```\n\nInstall hydrus using:\n```bash\npip3 install -r requirements.txt\n\npython3 setup.py install\n```\n \nand run the server using:\n\n```bash\nhydrus serve\n```\n\nThe demo should be up and running on `http://localhost:8080/serverapi/`.\n\n<a name=\"usage\"></a>\nUsage\n-------------\nFor more info, head to the [Usage](http://www.hydraecosystem.org/01-Usage.html) section of the [wiki](http://www.hydraecosystem.org/).\n=======\nhydrus [![Build Status](https://travis-ci.com/HTTP-APIs/hydrus.svg?branch=master)](https://travis-ci.com/HTTP-APIs/hydrus)\n===================\nhydrus is a set of **Python**-based tools for easier and more efficient creation of Hypermedia driven REST-APIs. hydrus utilises the power of [Linked Data](https://en.wikipedia.org/wiki/Linked_data) to create powerful REST APIs to serve data.\nhydrus uses the [Hydra(W3C)](http://www.hydra-cg.com/) standard for creation and documentation of its APIs.\n\nStart-up the demo\n-----------------\n\n#### Automatic with Docker:\n* with *Docker* and *docker-compose* installed, run `docker-compose up --build`\n* open the browser at `http://localhost:8000/api/vocab`\n\nYou should be displaying the example API as served by the server.\n\n#### Manually:\nYou can install the library in your project from latest Github release with `pip install git+git://github.com/http-apis/hydrus.git#egg=hydrus`; or from PyPi with: `pip install hydrus`.  \n\nAdd your own Hydra documentation file\n-------------------------------------\nTo serve your own Hydra-RDF documentation file:\n* create a `doc.py` file as the ones in `examples/` directory containing your own *ApiDoc*\n* set the `APIDOC_REL_PATH` variable in `docker-compose.yml`. This should the relative path from the project root\n* start-up the demo as above.\n\nYou should be displaying your API as served by the server.\n\nTable of Contents\n=======\n* [Features](#features)\n* [Requirements](#req)\n* [Demo](#demo)\n* [Usage](#usage)\n\n<a name=\"features\"></a>\nFeatures\n-------------\nhydrus supports the following features:\n- Be a REST server that understands Hydra vocabulary and performs basic [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) operations on data in a Hydra supporting server. \n- Be a generic server that provides the required data and metadata (in the form of API documentation) to a client over HTTP.\n\n<a name=\"req\"></a>\nRequirements\n-------------\nThe system is built over the following standards and tools:\n- [Flask](http://flask.pocoo.org/), a Python-based micro-framework for handling server requests and responses.\n- [JSON-LD](http://json-ld.org/spec/latest/json-ld/) as the preferred data format.\n- [Hydra](http://www.hydra-cg.com/) as the API standard.\n- [SQLAlchemy](http://www.sqlalchemy.org/) as the backend database connector for storage and related operations.\n\nOther than this, there are also various Python packages that hydrus uses. Running `python setup.py install` installs all the required dependencies.\n\n**NOTE:** `python3` should be used, not `python2`.\n\n<a name=\"demo\"></a>\nDemo\n-------------\nTo run a demo for hydrus using the sample API, do the following:\n\nClone hydrus:\n```bash\ngit clone https://github.com/HTTP-APIs/hydrus\n```\nChange directory and switch to the develop branch:\n```bash\ncd hydrus\n\ngit checkout -b develop origin/develop\n```\n\nInstall hydrus:\n```bash\npip install .\n```\nor\n```bash\npython setup.py install\n```\n\nand run the server:\n\n```bash\nhydrus serve\n```\n\nThe demo should now be running on `http://localhost:8080/serverapi/`.\n\n<a name=\"usage\"></a>\nUsage\n-------------\nFor more info, head to the [Usage](http://www.hydraecosystem.org/01-Usage.html) section of the [wiki](http://www.hydraecosystem.org/).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HTTP-APIs/hydrus", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "hydrus", "package_url": "https://pypi.org/project/hydrus/", "platform": "", "project_url": "https://pypi.org/project/hydrus/", "project_urls": {"Homepage": "https://github.com/HTTP-APIs/hydrus"}, "release_url": "https://pypi.org/project/hydrus/0.3.1/", "requires_dist": null, "requires_python": ">=3.5.2", "summary": "Hydra Ecosystem Flagship Server. Deploy REST data for Web 3.0", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hydrus <a href=\"https://travis-ci.com/HTTP-APIs/hydrus\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97709f90fc987d9b8cfe2351caeb1af3ac6df675/68747470733a2f2f7472617669732d63692e636f6d2f485454502d415049732f6879647275732e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p>hydrus is a set of <strong>Python</strong> based tools for easier and efficient creation of Hypermedia driven REST-APIs. hydrus utilises the power of <a href=\"https://en.wikipedia.org/wiki/Linked_data\" rel=\"nofollow\">Linked Data</a> to create a powerful REST APIs to serve data.\nhydrus uses the <a href=\"http://www.hydra-cg.com/\" rel=\"nofollow\">Hydra(W3C)</a> standard for creation and documentation of it's APIs.</p>\n<h2>Start-up the demo</h2>\n<ul>\n<li>with <em>Docker</em> and <em>docker-compose</em> installed, run <code>docker-compose up --build</code></li>\n<li>open the browser at <code>http://localhost:8000/api/vocab</code></li>\n</ul>\n<p>You should be displaying the example API as served by the server.</p>\n<h2>Add your own Hydra documentation file</h2>\n<p>To serve your own Hydra-RDF documentation file:</p>\n<ul>\n<li>create a <code>doc.py</code> file as the ones in <code>examples/</code> directory containing your own <em>ApiDoc</em></li>\n<li>set the <code>APIDOC_REL_PATH</code> variable in <code>docker-compose.yml</code>. This should the relative path from the project root</li>\n<li>start-up the demo as above.</li>\n</ul>\n<p>You should be displaying your API as served by the server.</p>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#req\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#demo\" rel=\"nofollow\">Demo</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n</ul>\n<h2><a></a>\nFeatures</h2>\n<p>hydrus supports the following features:</p>\n<ul>\n<li>A client that can understand Hydra vocabulary and interacts with a Hydra supporting server to basic <a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\" rel=\"nofollow\">CRUD</a> operations on data.</li>\n<li>A generic server that can serve required data and metadata(in the form of API documentation) to a client over HTTP.</li>\n<li>A middleware that allows users to use the client to interact with the server using Natural Language which is processed machine consumable language. <strong>(under development)</strong></li>\n</ul>\n<h2><a></a>\nRequirements</h2>\n<p>The system is built over the following standards and tools:</p>\n<ul>\n<li><a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> a Python based micro-framework for handling server requests and responses.</li>\n<li><a href=\"http://json-ld.org/spec/latest/json-ld/\" rel=\"nofollow\">JSON-LD</a> as the preferred data format.</li>\n<li><a href=\"http://www.hydra-cg.com/\" rel=\"nofollow\">Hydra</a> as the API standard.</li>\n<li><a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> as the backend database connector for storage and related operations.</li>\n</ul>\n<p>Apart from this, there are also various Python packages that hydrus uses. Using <code>python setup.py install</code> installs all the required dependencies.</p>\n<p><strong>NOTE:</strong> You'll need to use <code>python3</code> not <code>python2</code>.</p>\n<h2><a></a>\nDemo</h2>\n<p>To run a demo for hydrus using the sample API, just do the following:</p>\n<p>Clone hydrus:</p>\n<pre>git clone https://github.com/HTTP-APIs/hydrus\n</pre>\n<p>Change directory and switch to the develop branch:</p>\n<pre><span class=\"nb\">cd</span> hydrus\n\ngit checkout -b develop origin/develop\n</pre>\n<p>Install hydrus using:</p>\n<pre>pip3 install -r requirements.txt\n\npython3 setup.py install\n</pre>\n<p>and run the server using:</p>\n<pre>hydrus serve\n</pre>\n<p>The demo should be up and running on <code>http://localhost:8080/serverapi/</code>.</p>\n<h2><a></a>\nUsage</h2>\n<h1>For more info, head to the <a href=\"http://www.hydraecosystem.org/01-Usage.html\" rel=\"nofollow\">Usage</a> section of the <a href=\"http://www.hydraecosystem.org/\" rel=\"nofollow\">wiki</a>.</h1>\n<h1>hydrus <a href=\"https://travis-ci.com/HTTP-APIs/hydrus\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97709f90fc987d9b8cfe2351caeb1af3ac6df675/68747470733a2f2f7472617669732d63692e636f6d2f485454502d415049732f6879647275732e7376673f6272616e63683d6d6173746572\"></a></h1>\n<p>hydrus is a set of <strong>Python</strong>-based tools for easier and more efficient creation of Hypermedia driven REST-APIs. hydrus utilises the power of <a href=\"https://en.wikipedia.org/wiki/Linked_data\" rel=\"nofollow\">Linked Data</a> to create powerful REST APIs to serve data.\nhydrus uses the <a href=\"http://www.hydra-cg.com/\" rel=\"nofollow\">Hydra(W3C)</a> standard for creation and documentation of its APIs.</p>\n<h2>Start-up the demo</h2>\n<h4>Automatic with Docker:</h4>\n<ul>\n<li>with <em>Docker</em> and <em>docker-compose</em> installed, run <code>docker-compose up --build</code></li>\n<li>open the browser at <code>http://localhost:8000/api/vocab</code></li>\n</ul>\n<p>You should be displaying the example API as served by the server.</p>\n<h4>Manually:</h4>\n<p>You can install the library in your project from latest Github release with <code>pip install git+git://github.com/http-apis/hydrus.git#egg=hydrus</code>; or from PyPi with: <code>pip install hydrus</code>.</p>\n<h2>Add your own Hydra documentation file</h2>\n<p>To serve your own Hydra-RDF documentation file:</p>\n<ul>\n<li>create a <code>doc.py</code> file as the ones in <code>examples/</code> directory containing your own <em>ApiDoc</em></li>\n<li>set the <code>APIDOC_REL_PATH</code> variable in <code>docker-compose.yml</code>. This should the relative path from the project root</li>\n<li>start-up the demo as above.</li>\n</ul>\n<p>You should be displaying your API as served by the server.</p>\n<h1>Table of Contents</h1>\n<ul>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#req\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#demo\" rel=\"nofollow\">Demo</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n</ul>\n<h2><a></a>\nFeatures</h2>\n<p>hydrus supports the following features:</p>\n<ul>\n<li>Be a REST server that understands Hydra vocabulary and performs basic <a href=\"https://en.wikipedia.org/wiki/Create,_read,_update_and_delete\" rel=\"nofollow\">CRUD</a> operations on data in a Hydra supporting server.</li>\n<li>Be a generic server that provides the required data and metadata (in the form of API documentation) to a client over HTTP.</li>\n</ul>\n<h2><a></a>\nRequirements</h2>\n<p>The system is built over the following standards and tools:</p>\n<ul>\n<li><a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a>, a Python-based micro-framework for handling server requests and responses.</li>\n<li><a href=\"http://json-ld.org/spec/latest/json-ld/\" rel=\"nofollow\">JSON-LD</a> as the preferred data format.</li>\n<li><a href=\"http://www.hydra-cg.com/\" rel=\"nofollow\">Hydra</a> as the API standard.</li>\n<li><a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> as the backend database connector for storage and related operations.</li>\n</ul>\n<p>Other than this, there are also various Python packages that hydrus uses. Running <code>python setup.py install</code> installs all the required dependencies.</p>\n<p><strong>NOTE:</strong> <code>python3</code> should be used, not <code>python2</code>.</p>\n<h2><a></a>\nDemo</h2>\n<p>To run a demo for hydrus using the sample API, do the following:</p>\n<p>Clone hydrus:</p>\n<pre>git clone https://github.com/HTTP-APIs/hydrus\n</pre>\n<p>Change directory and switch to the develop branch:</p>\n<pre><span class=\"nb\">cd</span> hydrus\n\ngit checkout -b develop origin/develop\n</pre>\n<p>Install hydrus:</p>\n<pre>pip install .\n</pre>\n<p>or</p>\n<pre>python setup.py install\n</pre>\n<p>and run the server:</p>\n<pre>hydrus serve\n</pre>\n<p>The demo should now be running on <code>http://localhost:8080/serverapi/</code>.</p>\n<h2><a></a>\nUsage</h2>\n<p>For more info, head to the <a href=\"http://www.hydraecosystem.org/01-Usage.html\" rel=\"nofollow\">Usage</a> section of the <a href=\"http://www.hydraecosystem.org/\" rel=\"nofollow\">wiki</a>.</p>\n\n          </div>"}, "last_serial": 5724413, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "d916806e05e2c0ca9ee5fa37e867c2b6", "sha256": "354dff3611c82e0f079c88e014e947a134936f99ae3d4c05ffa329bc8f9d41b3"}, "downloads": -1, "filename": "hydrus-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d916806e05e2c0ca9ee5fa37e867c2b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 31419, "upload_time": "2019-03-18T15:26:49", "upload_time_iso_8601": "2019-03-18T15:26:49.209656Z", "url": "https://files.pythonhosted.org/packages/22/75/6a45fb1fc0c7913d874a0df17a216cedfdb486c9361c61c8ba6ba982b722/hydrus-0.2.1.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b7944297a2e3e2fa2ac35edb1b7db006", "sha256": "85eaeecf5be9d7e3a921ebad69d7982f6b8c0e5dd67d0b6c9f69c6151d3f3170"}, "downloads": -1, "filename": "hydrus-0.2.3.tar.gz", "has_sig": false, "md5_digest": "b7944297a2e3e2fa2ac35edb1b7db006", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 32171, "upload_time": "2019-03-25T16:56:57", "upload_time_iso_8601": "2019-03-25T16:56:57.653875Z", "url": "https://files.pythonhosted.org/packages/04/d1/64c639784818840b9c37b525102e5e2f24199d7a79d1c9e8e85e34af0f60/hydrus-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "10cb16c2a836604e25510f3e6cfeeb6a", "sha256": "ee08c0050a0b7d3ff4c1888da812cc51096f0c296acf7eb1eb56c33defe1629e"}, "downloads": -1, "filename": "hydrus-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "10cb16c2a836604e25510f3e6cfeeb6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 44174, "upload_time": "2019-05-31T12:44:02", "upload_time_iso_8601": "2019-05-31T12:44:02.796907Z", "url": "https://files.pythonhosted.org/packages/7d/bf/0e6f93b28a7f744ba15704a5f946adb86de584ed2e2215265b2850be4840/hydrus-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05f386c9de5058f87e04ce5878efdd3a", "sha256": "112c656addfeba86046540c3e04c7a54b414589dd2d3314a6b7a5a6f7c95edfd"}, "downloads": -1, "filename": "hydrus-0.2.4.tar.gz", "has_sig": false, "md5_digest": "05f386c9de5058f87e04ce5878efdd3a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 36719, "upload_time": "2019-05-31T12:44:05", "upload_time_iso_8601": "2019-05-31T12:44:05.082969Z", "url": "https://files.pythonhosted.org/packages/49/e9/9e66f5ba6f9f0348c5247826d953042849516b15a40e996a2a7a073c4a1c/hydrus-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "ead413f4dfac0fad474625b29c0999f8", "sha256": "e766f7481d2bb43f0ab81c36d07f4c4e475f6c67bf64715be3c2899cf5897373"}, "downloads": -1, "filename": "hydrus-0.2.5.tar.gz", "has_sig": false, "md5_digest": "ead413f4dfac0fad474625b29c0999f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 39377, "upload_time": "2019-07-07T12:58:31", "upload_time_iso_8601": "2019-07-07T12:58:31.164055Z", "url": "https://files.pythonhosted.org/packages/ae/1a/3bc1f587f0b71887b9a56f7ba90a69a9060d380dd5ec7c75cbd586efe79d/hydrus-0.2.5.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e0ac363a2b9c2cad3f1fc8cf1e68d294", "sha256": "cb6e8d5f33d4e9532a131e2451a2db2e36f1cc2e07d5f83f89d11a20a430a6af"}, "downloads": -1, "filename": "hydrus-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e0ac363a2b9c2cad3f1fc8cf1e68d294", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 45668, "upload_time": "2019-08-16T13:10:39", "upload_time_iso_8601": "2019-08-16T13:10:39.724221Z", "url": "https://files.pythonhosted.org/packages/89/45/8f2de9d51ed7068322914a3bdf33fe49bae7a83b895e514570517bdec334/hydrus-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e0730bdb7947185bfb09e05140a4b054", "sha256": "566e63aef542a0d645fe73b2a0060ed23052bfae443b7c3824f85b6365e6c404"}, "downloads": -1, "filename": "hydrus-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e0730bdb7947185bfb09e05140a4b054", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 45984, "upload_time": "2019-08-24T13:01:44", "upload_time_iso_8601": "2019-08-24T13:01:44.563264Z", "url": "https://files.pythonhosted.org/packages/06/db/a9253b75e1927b2274e2f7be7b225e3d2beb5d4a6f629b0839a7a74a9c51/hydrus-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e0730bdb7947185bfb09e05140a4b054", "sha256": "566e63aef542a0d645fe73b2a0060ed23052bfae443b7c3824f85b6365e6c404"}, "downloads": -1, "filename": "hydrus-0.3.1.tar.gz", "has_sig": false, "md5_digest": "e0730bdb7947185bfb09e05140a4b054", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 45984, "upload_time": "2019-08-24T13:01:44", "upload_time_iso_8601": "2019-08-24T13:01:44.563264Z", "url": "https://files.pythonhosted.org/packages/06/db/a9253b75e1927b2274e2f7be7b225e3d2beb5d4a6f629b0839a7a74a9c51/hydrus-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:37 2020"}