{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "This is the Python core library of the Ethereum project.\n\nFor the python based command line client see:\nhttps://github.com/ethereum/pyethapp\n\nInstallation:\n-------------\n\n``sudo apt-get install libssl-dev build-essential automake pkg-config libtool libffi-dev libgmp-dev``\n\n``git clone https://github.com/ethereum/pyethereum/``\n\n``cd pyethereum``\n\n``python setup.py install``\n\nComponents\n----------\n\nethereum.pow.chain\n~~~~~~~~~~~~~~~~~~\n\nContains the Chain class, which can be used to manage a blockchain. Main\nmethods are:\n\n-  ``__init__(genesis=None, env=None, new_head_cb=None, reset_genesis=False, localtime=None)``\n   - initializes with the given genesis. ``env`` specifies the\n   *environment* (including chain config and database), ``new_head_cb``\n   is a callback called when a new head is added, and ``localtime`` is\n   what the chain assumes is the current timestamp. The genesis can be:\n\n   -  None - in which case it assumes ``env`` is given, and creates a\n      Chain object with the data saved in ``env.db``. If\n      ``reset_genesis`` is set, it re-initializes the chain.\n   -  A ``State`` object\n   -  A genesis declaration\n   -  A state snapshot (``State.snapshot()``)\n   -  An allocation (ie. dict\n      ``{address: {balance: 1, nonce: 2, code: b'\\x03\\x04\\x05', storage: {\"0x06\": \"0x07\"}}}``)\n\n-  ``add_block(block)`` - adds a block to the chain\n-  ``process_time_queue(timestamp)`` - tells the chain that the current\n   time has increased to the new timestamp. The chain will then process\n   any blocks that were unprocessed because they appeared too \"early\"\n-  ``get_blockhash_by_number(num)`` - get the block hash of a block at\n   the given block number\n-  ``get_block(hash)`` - gets the block with the given blockhash\n-  ``get_block_by_number(num)`` - equivalent to\n   ``get_block(get_blockhash_by_number(num))``\n-  ``get_parent(block)`` - gets the parent of a block\n-  ``get_children(block)`` - gets the children of a block\n-  ``head`` (property) - gets the block at the head of the chain\n-  ``state`` (property) - gets the state at the head of the chain\n-  ``mk_poststate_of_blockhash(hash)`` - creates a state object after a\n   given block\n-  ``has_block(block)`` - is that block in the chain? Returns True/False\n-  ``get_chain(from, to)`` - roughly equivalent to\n   ``[get_block_by_number(i) for i in range(from, to)]``, though\n   automatically stops if it reaches the head. ``from`` can be elided to\n   start from genesis, ``to`` can be elided to go up to the head.\n-  ``get_tx_position(tx)`` - if the transaction is in the chain, returns\n   ``(blknum, index)`` where ``blknum`` is the block number of the block\n   that contains the transaction and ``index`` is its position in the\n   block\n\nethereum.state\n~~~~~~~~~~~~~~\n\nContains the State class, which is used to manage a state. Main methods\nare:\n\n-  ``__init__(root_hash, env, **kwargs)`` - initializes a state with the\n   given root hash, the given env (which includes a config and database)\n   and the given auxiliary arguments. These include:\n\n   -  ``txindex`` - the transaction index\n   -  ``gas_used`` - amount of gas used\n   -  ``gas_limit`` - block gas limit\n   -  ``block_number`` - block number\n   -  ``block_coinbase`` - block coinbase address\n   -  ``block_difficulty`` - block difficulty\n   -  ``timestamp`` - timestamp\n   -  ``logs`` - logs created so far\n   -  ``receipts`` - receipts created so far (from previous transactions\n      in the current block)\n   -  ``bloom`` - the bloom filter\n   -  ``suicides`` - suicides (or selfdestructs, the newer more\n      politically correct synonym)\n   -  ``recent_uncles`` - recent uncle blocks in the chain\n   -  ``prev_headers`` - previous block headers\n   -  ``refunds`` - suicide/selfdestruct refund counter\n\nPyethereum follows a **maximally state-centric model**; the ONLY\ninformation needed to process a transaction or a block is located within\nthe state itself, allowing the actual state transition logic to be a\nvery clean ``apply_transaction(state, tx)`` and\n``apply_block(state, block)``.\n\n-  ``get_balance``- gets the balance of an account\n-  ``get_code`` - gets the code of an account\n-  ``get_storage_data(addr, k)`` - gets the storage at the given key of\n   the given address. Expects a key in **numerical** form (eg. b\"cow\" or\n   \"0x636f77\" is represented as 6516599).\n-  ``to_snapshot(root_only=False, no_prevblocks=False)`` - creates a\n   snapshot for the current state. If ``root_only`` is set, only adds\n   the state root, not the entire state. If ``no_prevblocks`` is set,\n   does not add previous headers and uncles. Setting either of those\n   flags means that the same database would be required to recover from\n   the snapshot.\n-  ``from_snapshot(snapshot, env)`` (classmethod) - creates a state from\n   the given snapshot with the given ``env``.\n-  ``ephemeral_clone()`` - creates a clone of the state that you can\n   work with without affecting the original\n\nThere are also many methods that modify the state, eg. ``set_code``,\n``set_storage_data``, but it is generally recommended to avoid using\nthese, and instead modify the state ONLY through ``apply_transaction``\nand ``apply_block``.\n\nethereum.meta\n~~~~~~~~~~~~~\n\nThis file contains two functions:\n\n-  ``apply_block(state, block)`` - takes a state and processes a block\n   onto that state\n-  ``make_head_candidate(chain, txqueue=None, parent=None, timestamp, coinbase, extra_data, min_gasprice=0)``\n   - creates a candidate block for the chain on top of the given parent\n   block (default: head of the chain). Gets transactions from the given\n   ``txqueue`` object with the given ``mingasprice`` (otherwise does not\n   add transactions). ``timestamp``, ``coinbase`` and ``extra_data`` can\n   be used to specify those parameters in the block; otherwise defaults\n   are used\n\nethereum.messages\n~~~~~~~~~~~~~~~~~\n\nThe main function that should be called from here is\n``apply_transaction(state, tx)``.\n\nethereum.utils\n~~~~~~~~~~~~~~\n\nContains a bunch of utility functions, including:\n\nNumerical and hex conversions\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n-  ``encode_int(i)`` - converts an integer into big-endian binary\n   representation\n-  ``zpad(data, length)`` - pads the data up to the desired length by\n   adding zero bytes on the left\n-  ``encode_int32(i)`` - equivalent to ``zpad(encode_int(i), 32)`` but\n   faster\n-  ``big_endian_to_int(d)`` - converts binary data into an integer\n-  ``encode_hex(b)`` - converts bytes to hex\n-  ``decode_hex(h)`` - converts hex to bytes\n-  ``int_to_addr(i)`` - converts integer to address\n-  ``is_numeric(i)`` - returns True if the value is int or long,\n   otherwise False\n\nCryptography\n^^^^^^^^^^^^\n\n-  ``sha3(data)`` - computes the SHA3 (or more precisely, keccak256)\n   hash\n-  ``ecrecover_to_pub(hash, v, r, s)`` - recovers the public key that\n   made the signature as a 64-byte binary blob of\n   ``encode_int32(x) + encode_int32(y)``. Hashing this and taking the\n   last 20 bytes gives the *address* that signed a message.\n-  ``ecsign(hash, key)`` - returns the v, r, s values of a signature\n-  ``normalize_key(key)`` - converts a key from many formats into\n   32-byte binary\n-  ``privtoaddr(key)`` - converts a key to an address\n\nAddresses\n^^^^^^^^^\n\n-  ``normalize_address(addr)`` - converts an address into 20-byte binary\n   form\n-  ``check_checksum(addr)`` - returns True if the address checksum\n   passes, otherwise False\n-  ``checksum_encode(addr)`` - converts an address into hex form with a\n   checksum\n-  ``mk_contract_address(addr, nonce)`` - creates the address of a\n   contract created by the given address with the given nonce\n\nMiscellaneous\n^^^^^^^^^^^^^\n\n-  ``denoms`` - contains the denominations of ether, eg.\n   ``denoms.finney = 10**15``, ``denoms.shannon = 10**9``,\n   ``denoms.gwei = 10**9``\n\nethereum.block\n~~~~~~~~~~~~~~\n\nContains the ``Block`` and ``BlockHeader`` classes. Generally\nrecommended to avoid creating blocks and block headers directly, instead\nusing ``mk_head_candidate``. The member variables are straightforward:\n\n-  ``block.transactions`` - transactions in a block\n-  ``block.uncles`` - uncles in a block\n-  ``block.header`` - header of a block\n\nAnd in the header:\n\n-  ``header.hash`` - the hash (also the block hash)\n-  ``header.mining_hash`` - the hash used for proof of work mining\n-  ``header.to_dict()`` - serializes into a human-readable dict\n-  ``header.prevhash`` - previous block hash\n-  ``header.uncles_hash`` - hash of the uncle list\n-  ``header.coinbase`` - coinbase (miner) address\n-  ``header.state_root`` - root hash of the post-state\n-  ``header.tx_list_root`` - hash of the transactions in the block\n-  ``header.receipts_root`` - hash of the receipt trie\n-  ``header.bloom`` - bloom filter\n-  ``header.difficulty`` - block difficulty\n-  ``header.number`` - block number\n-  ``header.gas_limit`` - gas limit\n-  ``header.gas_used`` - gas used\n-  ``header.timestamp`` - timestamp\n-  ``header.extra_data`` - block extra data\n-  ``header.mixhash`` and ``header.nonce`` - Ethash proof of work values\n\nethereum.transactions\n~~~~~~~~~~~~~~~~~~~~~\n\nContains the Transaction class, with the following methods and values:\n\n-  ``__init__(nonce, gasprice, startgas, to, value, data, (v, r, s optional))``\n   - constructor\n-  ``sign(key, network_id=None)`` - signs the transaction with the given\n   key, and with the given EIP155 chain ID (leaving as None will create\n   a pre-EIP155 tx, be warned of replay attacks if you do this!)\n-  ``sender`` - the sender address of the transaction\n-  ``network_id`` - the EIP155 chain ID of the transaction\n-  ``hash`` - the hash of the transaction\n-  ``to_dict()`` - serializes into a human-readable dict\n-  ``intrinsic_gas_used`` - the amount of gas consumed by the\n   transaction, including the cost of the tx data\n-  ``creates`` - if the transaction creates a contract, returns the\n   contract address\n-  ``nonce``, ``gasprice``, ``startgas``, ``to``, ``value``, ``data``,\n   ``v``, ``r``, ``s`` - parameters in the transaction\n\nethereum.tools.keys\n~~~~~~~~~~~~~~~~~~~\n\nCreates encrypted private key storaes\n\n-  ``decode_keystore_json(jsondata, password)`` - returns the private\n   key from an encrypted keystore object. NOTE: if you are loading from\n   a file, the most convenient way to do this is\n   ``import json; key = decode_keystore_json(json.load(open('filename.json')), 'password')``\n-  ``make_keystore_json(key, pw, kdf='pbkdf2', cipher='aes-128-ctr')`` -\n   creates an encrypted keystore object for the key. Keeping ``kdf`` and\n   ``cipher`` at their default values is recommended.\n\nethereum.abi\n~~~~~~~~~~~~\n\nMost compilers for HLLs (solidity, serpent, viper, etc) on top of\nEthereum have the option to output an ABI declaration for a program.\nThis is a json object that looks something like this:\n\n::\n\n    [{\"name\": \"ecrecover(uint256,uint256,uint256,uint256)\", \"type\": \"function\", \"constant\": false,\n     \"inputs\": [{\"name\": \"h\", \"type\": \"uint256\"}, {\"name\": \"v\", \"type\": \"uint256\"}, {\"name\": \"r\", \"type\": \"uint256\"}, {\"name\": \"s\", \"type\": \"uint256\"}],\n     \"outputs\": [{\"name\": \"out\", \"type\": \"int256[]\"}]},\n     {\"name\": \"PubkeyTripleLogEvent(uint256,uint256,uint256)\", \"type\": \"event\",\n     \"inputs\": [{\"name\": \"x\", \"type\": \"uint256\", \"indexed\": false}, {\"name\": \"y\", \"type\": \"uint256\", \"indexed\": false}, {\"name\": \"z\", \"type\": \"uint256\", \"indexed\": false}]}]\n\nYou can initialize an ``abi.ContractTranslator`` object to encode and\ndecode data for contracts as follows:\n\n::\n\n    true, false = True, False  \n    ct = abi.ContractTranslator(<json here>)  \n    txdata = ct.encode('function_name', [arg1, arg2, arg3])  \n\nYou can also call ``ct.decode_event([topic1, topic2...], logdata)`` to\ndecode a log.\n\nRLP encoding and decoding\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor any transaction or block, you can simply do:\n\n::\n\n    import rlp  \n    bindata = rlp.encode(<tx or block>)  \n\nTo decode:\n\n::\n\n    import rlp  \n    from ethereum.transactions import Transaction  \n    rlp.decode(blob, Transaction)  \n\nOr:\n\n::\n\n    import rlp  \n    from ethereum.blocks import Block  \n    rlp.decode(blob, Block)  \n\nConsensus abstraction\n~~~~~~~~~~~~~~~~~~~~~\n\nThe pyethereum codebase is designed to be maximally friendly for use\nacross many different consensus algorithms. If you want to add a new\nconsensus algo, you'll need to take the following steps:\n\n-  Add a directory alongside ``pow``, and in it create a ``chain.py``\n   class that implements a ``Chain`` module. This may have a totally\n   different fork choice rule for proof of work (GHOST, signature\n   counting, Casper, etc).\n-  Add an entry to ``consensus_strategy.py``. You will need to\n   implement:\n\n   -  ``check_seal`` - check that a block is correctly \"sealed\" (mined,\n      signed, etc)\n   -  ``validate_uncles(state, block)`` - check that uncles are valid\n   -  ``initialize(state, block)`` - called in ``apply_block`` before\n      transactions are processed\n   -  ``finalize(state, block)`` - called in ``apply_block`` after\n      transactions are processed\n   -  ``get_uncle_candidates(chain, state)`` - called in\n      ``mk_head_candidate`` to include uncles in a block\n\n-  Create a chain config with the ``CONSENSUS_STRATEGY`` set to whatever\n   you named your new consensus strategy\n\nTester module\n-------------\n\nSee https://github.com/ethereum/pyethereum/wiki/Using-pyethereum.tester\n\nTests\n-----\n\nRun ``python3.6 -m pytest ethereum/tests/<filename>`` for any .py file\nin that directory. Currently all tests are passing except for a few\nMetropolis-specific state tests and block tests.\n\nTo make your own state tests, use the tester module as follows:\n\n::\n\n    from ethereum.tools import tester as t  \n    import json  \n    c = t.Chain()  \n    x = c.contract(<code>, language=<language>)  \n    pre = t.mk_state_test_prefill(c)  \n    x.foo(<args>)  \n    post = t.mk_state_test_postfill(c, pre)  \n    open('output.json', 'w').write(json.dumps(post, indent=4))  \n\nTo make a test filler file instead, do\n``post = t.mk_state_test_postfill(c, pre, True)``.\n\nLicense\n-------\n\nSee `LICENSE <LICENSE>`_", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ethereum/pyethereum/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ethereum", "package_url": "https://pypi.org/project/ethereum/", "platform": "", "project_url": "https://pypi.org/project/ethereum/", "project_urls": {"Homepage": "https://github.com/ethereum/pyethereum/"}, "release_url": "https://pypi.org/project/ethereum/2.3.2/", "requires_dist": null, "requires_python": "", "summary": "Next generation cryptocurrency network", "version": "2.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is the Python core library of the Ethereum project.</p>\n<p>For the python based command line client see:\n<a href=\"https://github.com/ethereum/pyethapp\" rel=\"nofollow\">https://github.com/ethereum/pyethapp</a></p>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p><tt>sudo <span class=\"pre\">apt-get</span> install <span class=\"pre\">libssl-dev</span> <span class=\"pre\">build-essential</span> automake <span class=\"pre\">pkg-config</span> libtool <span class=\"pre\">libffi-dev</span> <span class=\"pre\">libgmp-dev</span></tt></p>\n<p><tt>git clone <span class=\"pre\">https://github.com/ethereum/pyethereum/</span></tt></p>\n<p><tt>cd pyethereum</tt></p>\n<p><tt>python setup.py install</tt></p>\n</div>\n<div id=\"components\">\n<h2>Components</h2>\n<div id=\"ethereum-pow-chain\">\n<h3>ethereum.pow.chain</h3>\n<p>Contains the Chain class, which can be used to manage a blockchain. Main\nmethods are:</p>\n<ul>\n<li><tt>__init__(genesis=None, env=None, new_head_cb=None, reset_genesis=False, localtime=None)</tt>\n- initializes with the given genesis. <tt>env</tt> specifies the\n<em>environment</em> (including chain config and database), <tt>new_head_cb</tt>\nis a callback called when a new head is added, and <tt>localtime</tt> is\nwhat the chain assumes is the current timestamp. The genesis can be:<ul>\n<li>None - in which case it assumes <tt>env</tt> is given, and creates a\nChain object with the data saved in <tt>env.db</tt>. If\n<tt>reset_genesis</tt> is set, it re-initializes the chain.</li>\n<li>A <tt>State</tt> object</li>\n<li>A genesis declaration</li>\n<li>A state snapshot (<tt>State.snapshot()</tt>)</li>\n<li>An allocation (ie. dict\n<tt>{address: {balance: 1, nonce: 2, code: <span class=\"pre\">b'\\x03\\x04\\x05',</span> storage: {\"0x06\": <span class=\"pre\">\"0x07\"}}}</span></tt>)</li>\n</ul>\n</li>\n<li><tt>add_block(block)</tt> - adds a block to the chain</li>\n<li><tt>process_time_queue(timestamp)</tt> - tells the chain that the current\ntime has increased to the new timestamp. The chain will then process\nany blocks that were unprocessed because they appeared too \u201cearly\u201d</li>\n<li><tt>get_blockhash_by_number(num)</tt> - get the block hash of a block at\nthe given block number</li>\n<li><tt>get_block(hash)</tt> - gets the block with the given blockhash</li>\n<li><tt>get_block_by_number(num)</tt> - equivalent to\n<tt>get_block(get_blockhash_by_number(num))</tt></li>\n<li><tt>get_parent(block)</tt> - gets the parent of a block</li>\n<li><tt>get_children(block)</tt> - gets the children of a block</li>\n<li><tt>head</tt> (property) - gets the block at the head of the chain</li>\n<li><tt>state</tt> (property) - gets the state at the head of the chain</li>\n<li><tt>mk_poststate_of_blockhash(hash)</tt> - creates a state object after a\ngiven block</li>\n<li><tt>has_block(block)</tt> - is that block in the chain? Returns True/False</li>\n<li><tt>get_chain(from, to)</tt> - roughly equivalent to\n<tt>[get_block_by_number(i) for i in range(from, to)]</tt>, though\nautomatically stops if it reaches the head. <tt>from</tt> can be elided to\nstart from genesis, <tt>to</tt> can be elided to go up to the head.</li>\n<li><tt>get_tx_position(tx)</tt> - if the transaction is in the chain, returns\n<tt>(blknum, index)</tt> where <tt>blknum</tt> is the block number of the block\nthat contains the transaction and <tt>index</tt> is its position in the\nblock</li>\n</ul>\n</div>\n<div id=\"ethereum-state\">\n<h3>ethereum.state</h3>\n<p>Contains the State class, which is used to manage a state. Main methods\nare:</p>\n<ul>\n<li><tt>__init__(root_hash, env, **kwargs)</tt> - initializes a state with the\ngiven root hash, the given env (which includes a config and database)\nand the given auxiliary arguments. These include:<ul>\n<li><tt>txindex</tt> - the transaction index</li>\n<li><tt>gas_used</tt> - amount of gas used</li>\n<li><tt>gas_limit</tt> - block gas limit</li>\n<li><tt>block_number</tt> - block number</li>\n<li><tt>block_coinbase</tt> - block coinbase address</li>\n<li><tt>block_difficulty</tt> - block difficulty</li>\n<li><tt>timestamp</tt> - timestamp</li>\n<li><tt>logs</tt> - logs created so far</li>\n<li><tt>receipts</tt> - receipts created so far (from previous transactions\nin the current block)</li>\n<li><tt>bloom</tt> - the bloom filter</li>\n<li><tt>suicides</tt> - suicides (or selfdestructs, the newer more\npolitically correct synonym)</li>\n<li><tt>recent_uncles</tt> - recent uncle blocks in the chain</li>\n<li><tt>prev_headers</tt> - previous block headers</li>\n<li><tt>refunds</tt> - suicide/selfdestruct refund counter</li>\n</ul>\n</li>\n</ul>\n<p>Pyethereum follows a <strong>maximally state-centric model</strong>; the ONLY\ninformation needed to process a transaction or a block is located within\nthe state itself, allowing the actual state transition logic to be a\nvery clean <tt>apply_transaction(state, tx)</tt> and\n<tt>apply_block(state, block)</tt>.</p>\n<ul>\n<li><tt>get_balance</tt>- gets the balance of an account</li>\n<li><tt>get_code</tt> - gets the code of an account</li>\n<li><tt>get_storage_data(addr, k)</tt> - gets the storage at the given key of\nthe given address. Expects a key in <strong>numerical</strong> form (eg. b\u201dcow\u201d or\n\u201c0x636f77\u201d is represented as 6516599).</li>\n<li><tt>to_snapshot(root_only=False, no_prevblocks=False)</tt> - creates a\nsnapshot for the current state. If <tt>root_only</tt> is set, only adds\nthe state root, not the entire state. If <tt>no_prevblocks</tt> is set,\ndoes not add previous headers and uncles. Setting either of those\nflags means that the same database would be required to recover from\nthe snapshot.</li>\n<li><tt>from_snapshot(snapshot, env)</tt> (classmethod) - creates a state from\nthe given snapshot with the given <tt>env</tt>.</li>\n<li><tt>ephemeral_clone()</tt> - creates a clone of the state that you can\nwork with without affecting the original</li>\n</ul>\n<p>There are also many methods that modify the state, eg. <tt>set_code</tt>,\n<tt>set_storage_data</tt>, but it is generally recommended to avoid using\nthese, and instead modify the state ONLY through <tt>apply_transaction</tt>\nand <tt>apply_block</tt>.</p>\n</div>\n<div id=\"ethereum-meta\">\n<h3>ethereum.meta</h3>\n<p>This file contains two functions:</p>\n<ul>\n<li><tt>apply_block(state, block)</tt> - takes a state and processes a block\nonto that state</li>\n<li><tt>make_head_candidate(chain, txqueue=None, parent=None, timestamp, coinbase, extra_data, min_gasprice=0)</tt>\n- creates a candidate block for the chain on top of the given parent\nblock (default: head of the chain). Gets transactions from the given\n<tt>txqueue</tt> object with the given <tt>mingasprice</tt> (otherwise does not\nadd transactions). <tt>timestamp</tt>, <tt>coinbase</tt> and <tt>extra_data</tt> can\nbe used to specify those parameters in the block; otherwise defaults\nare used</li>\n</ul>\n</div>\n<div id=\"ethereum-messages\">\n<h3>ethereum.messages</h3>\n<p>The main function that should be called from here is\n<tt>apply_transaction(state, tx)</tt>.</p>\n</div>\n<div id=\"ethereum-utils\">\n<h3>ethereum.utils</h3>\n<p>Contains a bunch of utility functions, including:</p>\n<div id=\"numerical-and-hex-conversions\">\n<h4>Numerical and hex conversions</h4>\n<ul>\n<li><tt>encode_int(i)</tt> - converts an integer into big-endian binary\nrepresentation</li>\n<li><tt>zpad(data, length)</tt> - pads the data up to the desired length by\nadding zero bytes on the left</li>\n<li><tt>encode_int32(i)</tt> - equivalent to <tt>zpad(encode_int(i), 32)</tt> but\nfaster</li>\n<li><tt>big_endian_to_int(d)</tt> - converts binary data into an integer</li>\n<li><tt>encode_hex(b)</tt> - converts bytes to hex</li>\n<li><tt>decode_hex(h)</tt> - converts hex to bytes</li>\n<li><tt>int_to_addr(i)</tt> - converts integer to address</li>\n<li><tt>is_numeric(i)</tt> - returns True if the value is int or long,\notherwise False</li>\n</ul>\n</div>\n<div id=\"cryptography\">\n<h4>Cryptography</h4>\n<ul>\n<li><tt>sha3(data)</tt> - computes the SHA3 (or more precisely, keccak256)\nhash</li>\n<li><tt>ecrecover_to_pub(hash, v, r, s)</tt> - recovers the public key that\nmade the signature as a 64-byte binary blob of\n<tt>encode_int32(x) + encode_int32(y)</tt>. Hashing this and taking the\nlast 20 bytes gives the <em>address</em> that signed a message.</li>\n<li><tt>ecsign(hash, key)</tt> - returns the v, r, s values of a signature</li>\n<li><tt>normalize_key(key)</tt> - converts a key from many formats into\n32-byte binary</li>\n<li><tt>privtoaddr(key)</tt> - converts a key to an address</li>\n</ul>\n</div>\n<div id=\"addresses\">\n<h4>Addresses</h4>\n<ul>\n<li><tt>normalize_address(addr)</tt> - converts an address into 20-byte binary\nform</li>\n<li><tt>check_checksum(addr)</tt> - returns True if the address checksum\npasses, otherwise False</li>\n<li><tt>checksum_encode(addr)</tt> - converts an address into hex form with a\nchecksum</li>\n<li><tt>mk_contract_address(addr, nonce)</tt> - creates the address of a\ncontract created by the given address with the given nonce</li>\n</ul>\n</div>\n<div id=\"miscellaneous\">\n<h4>Miscellaneous</h4>\n<ul>\n<li><tt>denoms</tt> - contains the denominations of ether, eg.\n<tt>denoms.finney = <span class=\"pre\">10**15</span></tt>, <tt>denoms.shannon = <span class=\"pre\">10**9</span></tt>,\n<tt>denoms.gwei = <span class=\"pre\">10**9</span></tt></li>\n</ul>\n</div>\n</div>\n<div id=\"ethereum-block\">\n<h3>ethereum.block</h3>\n<p>Contains the <tt>Block</tt> and <tt>BlockHeader</tt> classes. Generally\nrecommended to avoid creating blocks and block headers directly, instead\nusing <tt>mk_head_candidate</tt>. The member variables are straightforward:</p>\n<ul>\n<li><tt>block.transactions</tt> - transactions in a block</li>\n<li><tt>block.uncles</tt> - uncles in a block</li>\n<li><tt>block.header</tt> - header of a block</li>\n</ul>\n<p>And in the header:</p>\n<ul>\n<li><tt>header.hash</tt> - the hash (also the block hash)</li>\n<li><tt>header.mining_hash</tt> - the hash used for proof of work mining</li>\n<li><tt>header.to_dict()</tt> - serializes into a human-readable dict</li>\n<li><tt>header.prevhash</tt> - previous block hash</li>\n<li><tt>header.uncles_hash</tt> - hash of the uncle list</li>\n<li><tt>header.coinbase</tt> - coinbase (miner) address</li>\n<li><tt>header.state_root</tt> - root hash of the post-state</li>\n<li><tt>header.tx_list_root</tt> - hash of the transactions in the block</li>\n<li><tt>header.receipts_root</tt> - hash of the receipt trie</li>\n<li><tt>header.bloom</tt> - bloom filter</li>\n<li><tt>header.difficulty</tt> - block difficulty</li>\n<li><tt>header.number</tt> - block number</li>\n<li><tt>header.gas_limit</tt> - gas limit</li>\n<li><tt>header.gas_used</tt> - gas used</li>\n<li><tt>header.timestamp</tt> - timestamp</li>\n<li><tt>header.extra_data</tt> - block extra data</li>\n<li><tt>header.mixhash</tt> and <tt>header.nonce</tt> - Ethash proof of work values</li>\n</ul>\n</div>\n<div id=\"ethereum-transactions\">\n<h3>ethereum.transactions</h3>\n<p>Contains the Transaction class, with the following methods and values:</p>\n<ul>\n<li><tt>__init__(nonce, gasprice, startgas, to, value, data, (v, r, s optional))</tt>\n- constructor</li>\n<li><tt>sign(key, network_id=None)</tt> - signs the transaction with the given\nkey, and with the given EIP155 chain ID (leaving as None will create\na pre-EIP155 tx, be warned of replay attacks if you do this!)</li>\n<li><tt>sender</tt> - the sender address of the transaction</li>\n<li><tt>network_id</tt> - the EIP155 chain ID of the transaction</li>\n<li><tt>hash</tt> - the hash of the transaction</li>\n<li><tt>to_dict()</tt> - serializes into a human-readable dict</li>\n<li><tt>intrinsic_gas_used</tt> - the amount of gas consumed by the\ntransaction, including the cost of the tx data</li>\n<li><tt>creates</tt> - if the transaction creates a contract, returns the\ncontract address</li>\n<li><tt>nonce</tt>, <tt>gasprice</tt>, <tt>startgas</tt>, <tt>to</tt>, <tt>value</tt>, <tt>data</tt>,\n<tt>v</tt>, <tt>r</tt>, <tt>s</tt> - parameters in the transaction</li>\n</ul>\n</div>\n<div id=\"ethereum-tools-keys\">\n<h3>ethereum.tools.keys</h3>\n<p>Creates encrypted private key storaes</p>\n<ul>\n<li><tt>decode_keystore_json(jsondata, password)</tt> - returns the private\nkey from an encrypted keystore object. NOTE: if you are loading from\na file, the most convenient way to do this is\n<tt>import json; key = <span class=\"pre\">decode_keystore_json(json.load(open('filename.json')),</span> 'password')</tt></li>\n<li><tt>make_keystore_json(key, pw, <span class=\"pre\">kdf='pbkdf2',</span> <span class=\"pre\">cipher='aes-128-ctr')</span></tt> -\ncreates an encrypted keystore object for the key. Keeping <tt>kdf</tt> and\n<tt>cipher</tt> at their default values is recommended.</li>\n</ul>\n</div>\n<div id=\"ethereum-abi\">\n<h3>ethereum.abi</h3>\n<p>Most compilers for HLLs (solidity, serpent, viper, etc) on top of\nEthereum have the option to output an ABI declaration for a program.\nThis is a json object that looks something like this:</p>\n<pre>[{\"name\": \"ecrecover(uint256,uint256,uint256,uint256)\", \"type\": \"function\", \"constant\": false,\n \"inputs\": [{\"name\": \"h\", \"type\": \"uint256\"}, {\"name\": \"v\", \"type\": \"uint256\"}, {\"name\": \"r\", \"type\": \"uint256\"}, {\"name\": \"s\", \"type\": \"uint256\"}],\n \"outputs\": [{\"name\": \"out\", \"type\": \"int256[]\"}]},\n {\"name\": \"PubkeyTripleLogEvent(uint256,uint256,uint256)\", \"type\": \"event\",\n \"inputs\": [{\"name\": \"x\", \"type\": \"uint256\", \"indexed\": false}, {\"name\": \"y\", \"type\": \"uint256\", \"indexed\": false}, {\"name\": \"z\", \"type\": \"uint256\", \"indexed\": false}]}]\n</pre>\n<p>You can initialize an <tt>abi.ContractTranslator</tt> object to encode and\ndecode data for contracts as follows:</p>\n<pre>true, false = True, False\nct = abi.ContractTranslator(&lt;json here&gt;)\ntxdata = ct.encode('function_name', [arg1, arg2, arg3])\n</pre>\n<p>You can also call <tt><span class=\"pre\">ct.decode_event([topic1,</span> <span class=\"pre\">topic2...],</span> logdata)</tt> to\ndecode a log.</p>\n</div>\n<div id=\"rlp-encoding-and-decoding\">\n<h3>RLP encoding and decoding</h3>\n<p>For any transaction or block, you can simply do:</p>\n<pre>import rlp\nbindata = rlp.encode(&lt;tx or block&gt;)\n</pre>\n<p>To decode:</p>\n<pre>import rlp\nfrom ethereum.transactions import Transaction\nrlp.decode(blob, Transaction)\n</pre>\n<p>Or:</p>\n<pre>import rlp\nfrom ethereum.blocks import Block\nrlp.decode(blob, Block)\n</pre>\n</div>\n<div id=\"consensus-abstraction\">\n<h3>Consensus abstraction</h3>\n<p>The pyethereum codebase is designed to be maximally friendly for use\nacross many different consensus algorithms. If you want to add a new\nconsensus algo, you\u2019ll need to take the following steps:</p>\n<ul>\n<li>Add a directory alongside <tt>pow</tt>, and in it create a <tt>chain.py</tt>\nclass that implements a <tt>Chain</tt> module. This may have a totally\ndifferent fork choice rule for proof of work (GHOST, signature\ncounting, Casper, etc).</li>\n<li>Add an entry to <tt>consensus_strategy.py</tt>. You will need to\nimplement:<ul>\n<li><tt>check_seal</tt> - check that a block is correctly \u201csealed\u201d (mined,\nsigned, etc)</li>\n<li><tt>validate_uncles(state, block)</tt> - check that uncles are valid</li>\n<li><tt>initialize(state, block)</tt> - called in <tt>apply_block</tt> before\ntransactions are processed</li>\n<li><tt>finalize(state, block)</tt> - called in <tt>apply_block</tt> after\ntransactions are processed</li>\n<li><tt>get_uncle_candidates(chain, state)</tt> - called in\n<tt>mk_head_candidate</tt> to include uncles in a block</li>\n</ul>\n</li>\n<li>Create a chain config with the <tt>CONSENSUS_STRATEGY</tt> set to whatever\nyou named your new consensus strategy</li>\n</ul>\n</div>\n</div>\n<div id=\"tester-module\">\n<h2>Tester module</h2>\n<p>See <a href=\"https://github.com/ethereum/pyethereum/wiki/Using-pyethereum.tester\" rel=\"nofollow\">https://github.com/ethereum/pyethereum/wiki/Using-pyethereum.tester</a></p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Run <tt>python3.6 <span class=\"pre\">-m</span> pytest <span class=\"pre\">ethereum/tests/&lt;filename&gt;</span></tt> for any .py file\nin that directory. Currently all tests are passing except for a few\nMetropolis-specific state tests and block tests.</p>\n<p>To make your own state tests, use the tester module as follows:</p>\n<pre>from ethereum.tools import tester as t\nimport json\nc = t.Chain()\nx = c.contract(&lt;code&gt;, language=&lt;language&gt;)\npre = t.mk_state_test_prefill(c)\nx.foo(&lt;args&gt;)\npost = t.mk_state_test_postfill(c, pre)\nopen('output.json', 'w').write(json.dumps(post, indent=4))\n</pre>\n<p>To make a test filler file instead, do\n<tt>post = t.mk_state_test_postfill(c, pre, True)</tt>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a></p>\n</div>\n\n          </div>"}, "last_serial": 4034784, "releases": {"0.9.70": [{"comment_text": "", "digests": {"md5": "3c3c7d255e27660e2d89bcf9a6e6a05f", "sha256": "3717de25945fe8024d0461ad6e18ca5619511f4c1bd0e784db037dc87dd04c96"}, "downloads": -1, "filename": "ethereum-0.9.70-py2-none-any.whl", "has_sig": false, "md5_digest": "3c3c7d255e27660e2d89bcf9a6e6a05f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 137400, "upload_time": "2015-08-10T16:52:41", "upload_time_iso_8601": "2015-08-10T16:52:41.647918Z", "url": "https://files.pythonhosted.org/packages/c5/4f/37366f9580bea45ee70b181df473b52bc1be5c5ec6168a959d19eba31c5c/ethereum-0.9.70-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c0143b3610f3c73fbda47f04c8aade8", "sha256": "5eb049ccca4a09106e4dd5334a3d66e97726792f4fce0cdd92e0fb69488efde9"}, "downloads": -1, "filename": "ethereum-0.9.70.tar.gz", "has_sig": false, "md5_digest": "4c0143b3610f3c73fbda47f04c8aade8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113759, "upload_time": "2015-08-10T16:52:36", "upload_time_iso_8601": "2015-08-10T16:52:36.672063Z", "url": "https://files.pythonhosted.org/packages/3e/dd/37e6232a72c17781ecb9c795973d418964a82ade0a671746976dfd02796f/ethereum-0.9.70.tar.gz", "yanked": false}], "0.9.71": [{"comment_text": "", "digests": {"md5": "2c2fbe0c2f408b561d0c24d225a5580e", "sha256": "5d791952c3aa623d1d1e1b781d316aca49c752e5dcb397d7d57eecf102430e42"}, "downloads": -1, "filename": "ethereum-0.9.71-py2-none-any.whl", "has_sig": false, "md5_digest": "2c2fbe0c2f408b561d0c24d225a5580e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 137383, "upload_time": "2015-08-11T07:08:38", "upload_time_iso_8601": "2015-08-11T07:08:38.155097Z", "url": "https://files.pythonhosted.org/packages/10/c3/fb479316ea53099e7431a16821ed78b567ce1c43831125248cd323719077/ethereum-0.9.71-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d7cbd82fa3bf015f9a9a08858acc955", "sha256": "b1fb18eb767c49dfc8d2b9e36f25ee5971c03f1cf168029f2abdc76963e4a0c6"}, "downloads": -1, "filename": "ethereum-0.9.71.tar.gz", "has_sig": false, "md5_digest": "4d7cbd82fa3bf015f9a9a08858acc955", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113739, "upload_time": "2015-08-11T07:08:32", "upload_time_iso_8601": "2015-08-11T07:08:32.348482Z", "url": "https://files.pythonhosted.org/packages/49/27/f76532c6362660870e4a0f0c0c08a1e72f48a82684c8019f800516fd0b93/ethereum-0.9.71.tar.gz", "yanked": false}], "0.9.72": [{"comment_text": "", "digests": {"md5": "63fb121ea9b13450a642eb9d1607f8c0", "sha256": "f0ae7a873b9d5e912936e19bc33a8af14a3dfb5d642edc75e08b1d27adb3e75b"}, "downloads": -1, "filename": "ethereum-0.9.72-py2-none-any.whl", "has_sig": false, "md5_digest": "63fb121ea9b13450a642eb9d1607f8c0", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 137394, "upload_time": "2015-08-11T07:11:05", "upload_time_iso_8601": "2015-08-11T07:11:05.309648Z", "url": "https://files.pythonhosted.org/packages/99/d3/293ee6666cde23d097c8f805aff245d293934e00a0d93300796ff7b8c69e/ethereum-0.9.72-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5045ec95d410e604ddc3ee7813f64ebf", "sha256": "6dad1431d278ca0f61c2d4281935e0cc4e02d53b07b1e6825bb92fa8cbba8ee0"}, "downloads": -1, "filename": "ethereum-0.9.72.tar.gz", "has_sig": false, "md5_digest": "5045ec95d410e604ddc3ee7813f64ebf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113734, "upload_time": "2015-08-11T07:10:59", "upload_time_iso_8601": "2015-08-11T07:10:59.439128Z", "url": "https://files.pythonhosted.org/packages/04/2c/f63f3ea12fa446572a973f0c29952db7f64c7ec4d3f7bd94d8670337d823/ethereum-0.9.72.tar.gz", "yanked": false}], "0.9.73": [{"comment_text": "", "digests": {"md5": "01e2a4005b8d3fcb463c832277a7da79", "sha256": "b2aa9bb1c476b91aa28521a3601d34113417b38925b2466db3a11a5d896a8401"}, "downloads": -1, "filename": "ethereum-0.9.73-py2-none-any.whl", "has_sig": false, "md5_digest": "01e2a4005b8d3fcb463c832277a7da79", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 137397, "upload_time": "2015-08-11T18:18:52", "upload_time_iso_8601": "2015-08-11T18:18:52.310065Z", "url": "https://files.pythonhosted.org/packages/22/a7/5be96e09e053315236601746a2b0e51de861f85e7187594e1cc84313da77/ethereum-0.9.73-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "561ef9470137f72269dda33b7fc85a84", "sha256": "4bfd01998c39af7d15cc32813a2a982d8acf46dcc7b867936a91ab8b85d97be0"}, "downloads": -1, "filename": "ethereum-0.9.73.tar.gz", "has_sig": false, "md5_digest": "561ef9470137f72269dda33b7fc85a84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113755, "upload_time": "2015-08-11T18:18:46", "upload_time_iso_8601": "2015-08-11T18:18:46.288394Z", "url": "https://files.pythonhosted.org/packages/b2/10/c70cfa5775856a6474da5880f10321e7f6dc3887bf17dfb46901ead25425/ethereum-0.9.73.tar.gz", "yanked": false}], "0.9.74": [{"comment_text": "", "digests": {"md5": "a3a111492b380de6803f1d3d5ba3b047", "sha256": "ff621a4cfe42b3328c06c716e790baf04e449022a69ad84a25f570a68cc2a301"}, "downloads": -1, "filename": "ethereum-0.9.74-py2-none-any.whl", "has_sig": false, "md5_digest": "a3a111492b380de6803f1d3d5ba3b047", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 140247, "upload_time": "2015-08-21T08:22:26", "upload_time_iso_8601": "2015-08-21T08:22:26.916963Z", "url": "https://files.pythonhosted.org/packages/e1/65/a5bef45220650efcba28dd49dc4873c2f2634d3776108c90489ae3710b7f/ethereum-0.9.74-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fd7489b27bd84f7883bc7de000a6a7e", "sha256": "98933dab8e4992b5c3cbc40dd3c6bb5b179e81386812772527fbd45174d6e3a5"}, "downloads": -1, "filename": "ethereum-0.9.74.tar.gz", "has_sig": false, "md5_digest": "9fd7489b27bd84f7883bc7de000a6a7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116553, "upload_time": "2015-08-21T08:22:20", "upload_time_iso_8601": "2015-08-21T08:22:20.433955Z", "url": "https://files.pythonhosted.org/packages/93/65/1e7b3434ba1ebdd502e867d798f16921a0f86c6e8a5166241e9703ae4d0c/ethereum-0.9.74.tar.gz", "yanked": false}], "0.9.75": [{"comment_text": "", "digests": {"md5": "ecf97a2d056f3530d9729c81e93ed833", "sha256": "be87528952f982c5db21c80cd676200c48018ab9192bbbc0ba40e9bb846b1f26"}, "downloads": -1, "filename": "ethereum-0.9.75-py2-none-any.whl", "has_sig": false, "md5_digest": "ecf97a2d056f3530d9729c81e93ed833", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 140718, "upload_time": "2015-08-28T07:36:18", "upload_time_iso_8601": "2015-08-28T07:36:18.061321Z", "url": "https://files.pythonhosted.org/packages/4d/ae/db60243199faadb632c137fddb3b13f8428e33d005f76d143a075ef56aef/ethereum-0.9.75-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "289c6f14a8271607408c85065679d371", "sha256": "84dda3346b3c784d443e5a1a136bbee3d6f14a3a4a0d665db62d71006dc7680d"}, "downloads": -1, "filename": "ethereum-0.9.75.tar.gz", "has_sig": false, "md5_digest": "289c6f14a8271607408c85065679d371", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116952, "upload_time": "2015-08-28T07:36:01", "upload_time_iso_8601": "2015-08-28T07:36:01.073481Z", "url": "https://files.pythonhosted.org/packages/91/10/a1d7ad0441d63dcfe8a45dd8b2b63f2820cab64376a9e655496aa11463b9/ethereum-0.9.75.tar.gz", "yanked": false}], "0.9.76": [{"comment_text": "", "digests": {"md5": "f68f91a2f16ebcad9e3829b1748e93ec", "sha256": "92a6997a554f006bb649ad1dda048efdd289962582513bda5631275c9e98a7dc"}, "downloads": -1, "filename": "ethereum-0.9.76-py2-none-any.whl", "has_sig": false, "md5_digest": "f68f91a2f16ebcad9e3829b1748e93ec", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 139456, "upload_time": "2015-09-01T21:59:10", "upload_time_iso_8601": "2015-09-01T21:59:10.187578Z", "url": "https://files.pythonhosted.org/packages/9e/22/6e5b60b564aff2599136165b4faf79916a6e8a8f4bb3a915caef47dac1d7/ethereum-0.9.76-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36c735d0e747278de04f2b42081149f1", "sha256": "24c22f8b1556b9c48284ec4ad0bcd23fd6a17ae265957cbf4e8b1548f7f59af1"}, "downloads": -1, "filename": "ethereum-0.9.76.tar.gz", "has_sig": false, "md5_digest": "36c735d0e747278de04f2b42081149f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115363, "upload_time": "2015-09-01T21:58:45", "upload_time_iso_8601": "2015-09-01T21:58:45.643192Z", "url": "https://files.pythonhosted.org/packages/8a/26/aabc155b49de63397bae4b6492ad5c3d8a363b7dd4bd485d1fbb966d6bc1/ethereum-0.9.76.tar.gz", "yanked": false}], "0.9.77": [{"comment_text": "", "digests": {"md5": "1f9178316e684ff2dba6801282e25175", "sha256": "2da6192a7dc4da11c2d5a6d965e3a774654a1686bad5172098d1d994a20676ab"}, "downloads": -1, "filename": "ethereum-0.9.77-py2-none-any.whl", "has_sig": false, "md5_digest": "1f9178316e684ff2dba6801282e25175", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 139228, "upload_time": "2015-09-01T22:21:12", "upload_time_iso_8601": "2015-09-01T22:21:12.549887Z", "url": "https://files.pythonhosted.org/packages/ce/37/350de8d58c32ff4c3fc80e4561efd311330bd2f539e13193cfc881be68fa/ethereum-0.9.77-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "541859942760b31b0f73b24d840076db", "sha256": "0a234e0bcdd87192f8e276e525435f98be90c8ed9b2de4cd59574fb0abc40d92"}, "downloads": -1, "filename": "ethereum-0.9.77.tar.gz", "has_sig": false, "md5_digest": "541859942760b31b0f73b24d840076db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115336, "upload_time": "2015-09-01T22:21:00", "upload_time_iso_8601": "2015-09-01T22:21:00.648528Z", "url": "https://files.pythonhosted.org/packages/69/e6/a479939e59572aeb22bc32b580291e8948e5a1811351e6173b1833bc6a61/ethereum-0.9.77.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "b4dc25fa28d01d1c547b515d6ab4d9da", "sha256": "c7dbf9d5537668ce0ebe7c12e21a9baf09d2d5aa6376f3d255ffc7224b3dc2e5"}, "downloads": -1, "filename": "ethereum-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "b4dc25fa28d01d1c547b515d6ab4d9da", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 139459, "upload_time": "2015-09-04T08:29:31", "upload_time_iso_8601": "2015-09-04T08:29:31.032765Z", "url": "https://files.pythonhosted.org/packages/5e/10/1247786bc98e35e3b7f13f617e4494145c235a1975162b62b0cd84113214/ethereum-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94d570c7e95647be1b4fc98b000e030d", "sha256": "77f7bb5a12cf7206f25e1fbb81d342da63c0de009fa2748de4544bb1904b91f4"}, "downloads": -1, "filename": "ethereum-1.0.0.tar.gz", "has_sig": false, "md5_digest": "94d570c7e95647be1b4fc98b000e030d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115420, "upload_time": "2015-09-04T08:29:25", "upload_time_iso_8601": "2015-09-04T08:29:25.316335Z", "url": "https://files.pythonhosted.org/packages/42/a8/7cca7c79643c92e851e127949af22192b6046f5385cd2fcdae46dc834c0c/ethereum-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "78fe61a6d7500a8c58d540f3cbe2089a", "sha256": "216735781272c6ff68a0fd9e9ee279149cd7bfcbe647d841aa03f52a932e883c"}, "downloads": -1, "filename": "ethereum-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "78fe61a6d7500a8c58d540f3cbe2089a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 141030, "upload_time": "2015-09-10T14:47:32", "upload_time_iso_8601": "2015-09-10T14:47:32.730964Z", "url": "https://files.pythonhosted.org/packages/1e/66/a0767c476f0c90b63c6a40bb2ee26390856d556c382e94c8ca60c98f14cc/ethereum-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee03888f6cadcd0bdc7b4643263ded0a", "sha256": "cfb324a3c46a60a1d426c7979beb454ac6dd635c55b3c9ffcf05904958b4aef4"}, "downloads": -1, "filename": "ethereum-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ee03888f6cadcd0bdc7b4643263ded0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116538, "upload_time": "2015-09-10T14:47:27", "upload_time_iso_8601": "2015-09-10T14:47:27.605818Z", "url": "https://files.pythonhosted.org/packages/73/e4/d8c6f4ac23a60e67662f43da1b9fd5aa613b04d7144abde02cab0e0525aa/ethereum-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "81c27e79973d2013e43944bf3b3cd090", "sha256": "ae5f9962cebc7b230ff1671f54c20b2a08b01280be92df1e11378fc8d5545977"}, "downloads": -1, "filename": "ethereum-1.0.2.tar.gz", "has_sig": false, "md5_digest": "81c27e79973d2013e43944bf3b3cd090", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107996, "upload_time": "2015-09-15T11:29:33", "upload_time_iso_8601": "2015-09-15T11:29:33.214964Z", "url": "https://files.pythonhosted.org/packages/66/b9/9caa9ca6b25e80704d079676da89913f8c8864e41931931d95666c138b7e/ethereum-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "96966710a8f933e42cdc7da779015c4c", "sha256": "7a52fa2cb825e85e28b5f830461679100f18b403f3e4b1002010e43c447a64d1"}, "downloads": -1, "filename": "ethereum-1.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "96966710a8f933e42cdc7da779015c4c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 138024, "upload_time": "2015-09-25T09:37:01", "upload_time_iso_8601": "2015-09-25T09:37:01.904425Z", "url": "https://files.pythonhosted.org/packages/3c/e3/3629b569b33ed4308e87abe7ba8bbe48afdaed33ec9a8de213dba1b3ab24/ethereum-1.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc5f7012b4ad9442e2db4e25a132f0cf", "sha256": "e8c11ef734cb14e18d7fe9fa3e5f39640e8bbd1d95777be44b4bdc99e5ca5a87"}, "downloads": -1, "filename": "ethereum-1.0.3.tar.gz", "has_sig": false, "md5_digest": "dc5f7012b4ad9442e2db4e25a132f0cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113234, "upload_time": "2015-09-25T09:36:53", "upload_time_iso_8601": "2015-09-25T09:36:53.696399Z", "url": "https://files.pythonhosted.org/packages/1c/96/c21f65464284a029df8b1aeba74935ff3d8e1bff8e4e556ca0df94ff0d96/ethereum-1.0.3.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "d3f7fc55fd5d186131143ae220e31419", "sha256": "4cf3b5ee244f976388061996e8b7854948164402130b4fc9e62c2a4d27b603ab"}, "downloads": -1, "filename": "ethereum-1.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "d3f7fc55fd5d186131143ae220e31419", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 138430, "upload_time": "2015-10-09T23:52:32", "upload_time_iso_8601": "2015-10-09T23:52:32.665236Z", "url": "https://files.pythonhosted.org/packages/63/cf/5cecb60a4134c4152529096adca97c78b3aa550abe3cd1ce3d568cd95042/ethereum-1.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8bef8accd5dcda14f5062dbc45cd19b", "sha256": "6e1a7841e414642ba57aa4cff828358fddcb1d59bbd17707b0b961e84d429473"}, "downloads": -1, "filename": "ethereum-1.0.5.tar.gz", "has_sig": false, "md5_digest": "a8bef8accd5dcda14f5062dbc45cd19b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113476, "upload_time": "2015-10-09T23:52:27", "upload_time_iso_8601": "2015-10-09T23:52:27.117031Z", "url": "https://files.pythonhosted.org/packages/e6/ed/d80a63c1c6a62a00be196b766480ff73039023f6ec5fd76a0e63d7099e44/ethereum-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "83319b511a43f5f7ad6e2e93c0521602", "sha256": "45804c73f1bc4fcab39eb004c8a95443743f817f1636b251ab955a8b20281782"}, "downloads": -1, "filename": "ethereum-1.0.6-py2-none-any.whl", "has_sig": false, "md5_digest": "83319b511a43f5f7ad6e2e93c0521602", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 138389, "upload_time": "2015-10-11T15:05:43", "upload_time_iso_8601": "2015-10-11T15:05:43.760227Z", "url": "https://files.pythonhosted.org/packages/84/fc/61787ddcdd3272413bd7fdb36dec309b1ab74e41ccf38ca977cfc31b7da4/ethereum-1.0.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a2d8789c7092267832ebdc559904ed0", "sha256": "2acdc69f597d1e1ac3fa2db6cdcca0a5d6c7583f2bb0838f6625345eeddbb8bc"}, "downloads": -1, "filename": "ethereum-1.0.6.tar.gz", "has_sig": false, "md5_digest": "7a2d8789c7092267832ebdc559904ed0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113608, "upload_time": "2015-10-11T15:05:32", "upload_time_iso_8601": "2015-10-11T15:05:32.152918Z", "url": "https://files.pythonhosted.org/packages/a2/a6/25101f242040a8d2778aa3773353693324ab72a848a21b3b8e12d021e528/ethereum-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "dba11be37569ed6c15082603012a7cd3", "sha256": "edd2e9915f8dc6b156e764b7f4b3ee026306fb98d0610c008dce35998871ebee"}, "downloads": -1, "filename": "ethereum-1.0.7-py2-none-any.whl", "has_sig": false, "md5_digest": "dba11be37569ed6c15082603012a7cd3", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 139728, "upload_time": "2015-12-08T14:37:43", "upload_time_iso_8601": "2015-12-08T14:37:43.645777Z", "url": "https://files.pythonhosted.org/packages/47/96/a897b1ab26bb77140bb389d436ab6fa162a25a9170ee118ed916765fb1e8/ethereum-1.0.7-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ffab9364fff6aa3e9ae54bdec369098", "sha256": "765a68ac81117aed65dddd57f8c5aa19b3ce70c664c25d0f918d4a9634f6b8af"}, "downloads": -1, "filename": "ethereum-1.0.7.tar.gz", "has_sig": false, "md5_digest": "1ffab9364fff6aa3e9ae54bdec369098", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114747, "upload_time": "2015-12-08T14:37:37", "upload_time_iso_8601": "2015-12-08T14:37:37.962334Z", "url": "https://files.pythonhosted.org/packages/16/8e/d2116a371be6637102906fe91ca8f736bf623d7fb628da5b3023e434bed7/ethereum-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "b7f6281e966d31c6e0db3e708d97c733", "sha256": "169759f93b8cf39ecde10e46436807f43ea31d514b3b1ad369404976bbc6411b"}, "downloads": -1, "filename": "ethereum-1.0.8.tar.gz", "has_sig": false, "md5_digest": "b7f6281e966d31c6e0db3e708d97c733", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108435, "upload_time": "2015-12-10T17:10:27", "upload_time_iso_8601": "2015-12-10T17:10:27.595099Z", "url": "https://files.pythonhosted.org/packages/f2/46/9aa05bbdde8d7f105f93e546120de83d5e078c3e6dccaed46bf754b2c578/ethereum-1.0.8.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d53d989ae1421397d681b12919972d6a", "sha256": "002fb23efaa21c0a84056c84afbe30751534dc3cfb385d7115add20542a61dd6"}, "downloads": -1, "filename": "ethereum-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "d53d989ae1421397d681b12919972d6a", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 142459, "upload_time": "2016-03-01T09:50:20", "upload_time_iso_8601": "2016-03-01T09:50:20.559122Z", "url": "https://files.pythonhosted.org/packages/e0/a5/50c90ab76182744bfd18dd6de4cb28ac0463f6a7f219f2152af9360b577f/ethereum-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb870412f51dc5336729665db03dcdd0", "sha256": "67947bc9d203dc2fc6e5907b714786e103912c7a1e9d091245681878bd309715"}, "downloads": -1, "filename": "ethereum-1.1.0.tar.gz", "has_sig": false, "md5_digest": "cb870412f51dc5336729665db03dcdd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 117367, "upload_time": "2016-03-01T09:50:10", "upload_time_iso_8601": "2016-03-01T09:50:10.204020Z", "url": "https://files.pythonhosted.org/packages/6f/6c/51f500b2f4206306e4617f8d870f0ae594c69fdbf8adaff775a938cbd15e/ethereum-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "996bfc0eebc3effec2cc8e2ab0949327", "sha256": "59d527ccd3d328ee85423ca6497db8e2e35d2a1b20a9452fb514ac7d86d58ae6"}, "downloads": -1, "filename": "ethereum-1.2.0.tar.gz", "has_sig": false, "md5_digest": "996bfc0eebc3effec2cc8e2ab0949327", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112853, "upload_time": "2016-04-21T14:20:33", "upload_time_iso_8601": "2016-04-21T14:20:33.169270Z", "url": "https://files.pythonhosted.org/packages/25/09/32d46897a9a7a48ab71058a3856b847767f73a4a68d99e3042b190d9230a/ethereum-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "523b8a45bd52fb5bd319473bcf2669e8", "sha256": "7e63f0b35a57e4ea15f1c1561dd83dce175386b8a89e4112c44902f596832384"}, "downloads": -1, "filename": "ethereum-1.3.0.tar.gz", "has_sig": false, "md5_digest": "523b8a45bd52fb5bd319473bcf2669e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112876, "upload_time": "2016-05-10T15:55:42", "upload_time_iso_8601": "2016-05-10T15:55:42.271215Z", "url": "https://files.pythonhosted.org/packages/8c/2c/699798b99b3245d656b27cf93f4780d9a4c77f869aeb1fdf611f4870d4ab/ethereum-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "b93909e3d51aaa18760a27ee8e518e53", "sha256": "74120cfc8040b048b721b39096c84f0993ae0d19b82b9b4aabe258ec56f2db90"}, "downloads": -1, "filename": "ethereum-1.3.1.tar.gz", "has_sig": false, "md5_digest": "b93909e3d51aaa18760a27ee8e518e53", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 113359, "upload_time": "2016-05-13T17:21:04", "upload_time_iso_8601": "2016-05-13T17:21:04.297623Z", "url": "https://files.pythonhosted.org/packages/f0/21/cdd76a5d5e097bfd45e42951b2dbd5a62cca7ed1ade15c3626db1ecd16f4/ethereum-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "3d5fd0e65b4b1fb885633a09dcbdd092", "sha256": "8806840579e3fbfcd0504533a384d3ea0e94c27091f1a438aa2c8dbf33ef40f7"}, "downloads": -1, "filename": "ethereum-1.3.2.tar.gz", "has_sig": false, "md5_digest": "3d5fd0e65b4b1fb885633a09dcbdd092", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110153, "upload_time": "2016-05-20T15:47:56", "upload_time_iso_8601": "2016-05-20T15:47:56.478817Z", "url": "https://files.pythonhosted.org/packages/ca/84/23158cbbfc2d97ab64e595fb2ea499bb8d67541450c0b11b77975b0b1530/ethereum-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "0ccafb31ac4bc96f5999a635fed96075", "sha256": "2fb02299797d26e6ecf8812c617b4c67326ae315b11577a485ae1406eb59e997"}, "downloads": -1, "filename": "ethereum-1.3.3.tar.gz", "has_sig": false, "md5_digest": "0ccafb31ac4bc96f5999a635fed96075", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111739, "upload_time": "2016-06-03T14:20:53", "upload_time_iso_8601": "2016-06-03T14:20:53.864945Z", "url": "https://files.pythonhosted.org/packages/94/75/21283be743edb96777dd482081708965238bafcbd960b548c96825031197/ethereum-1.3.3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "adcb599b5c2b354f0d63f31b52cffd65", "sha256": "a6ef5b1f19261a9d8bf773eea4b70d2cc655b87213ae5989ef7da965b79f51ab"}, "downloads": -1, "filename": "ethereum-1.3.4.tar.gz", "has_sig": false, "md5_digest": "adcb599b5c2b354f0d63f31b52cffd65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111863, "upload_time": "2016-06-06T15:52:29", "upload_time_iso_8601": "2016-06-06T15:52:29.580426Z", "url": "https://files.pythonhosted.org/packages/92/2f/8dbc0b49f18777c036620c385d02c9c5beb8ca3b88d28fbcf6945e0aee58/ethereum-1.3.4.tar.gz", "yanked": false}], "1.3.5": [{"comment_text": "", "digests": {"md5": "b59f9958003d1985938657b6d8b24d05", "sha256": "969c9a9f64930d21b8e3dd72ca70f6ceafe3ce4e1b139695e00ccb0784214367"}, "downloads": -1, "filename": "ethereum-1.3.5.tar.gz", "has_sig": false, "md5_digest": "b59f9958003d1985938657b6d8b24d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114015, "upload_time": "2016-06-08T07:58:05", "upload_time_iso_8601": "2016-06-08T07:58:05.036405Z", "url": "https://files.pythonhosted.org/packages/78/a4/37bdf7317e7bee16d33a496ec8fe88e0050a909a2895ba0938965471adb3/ethereum-1.3.5.tar.gz", "yanked": false}], "1.3.6": [{"comment_text": "", "digests": {"md5": "f94c70aaa709a11a4a4457173c586900", "sha256": "fc803d7b458d3429b36676fc6fc56b25c90ed6cdda00c27317f4be4c4a4f3018"}, "downloads": -1, "filename": "ethereum-1.3.6.tar.gz", "has_sig": false, "md5_digest": "f94c70aaa709a11a4a4457173c586900", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 114017, "upload_time": "2016-06-10T06:04:11", "upload_time_iso_8601": "2016-06-10T06:04:11.669391Z", "url": "https://files.pythonhosted.org/packages/6f/da/866869655c62f1a58016a58fe1538cd69b33ce4161abd568cc481223a6bf/ethereum-1.3.6.tar.gz", "yanked": false}], "1.3.7": [{"comment_text": "", "digests": {"md5": "e4c7ee5531e008dfabde7e7297778be6", "sha256": "47bdb7c8081dd2e3894acb63ea9458c0e366004ae3e7156e41fd816c0eb4250b"}, "downloads": -1, "filename": "ethereum-1.3.7.tar.gz", "has_sig": false, "md5_digest": "e4c7ee5531e008dfabde7e7297778be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133777, "upload_time": "2016-11-13T01:10:12", "upload_time_iso_8601": "2016-11-13T01:10:12.122888Z", "url": "https://files.pythonhosted.org/packages/8d/be/e066754e102333bfe1f042a9cbdd5f8a6f5300861a8b0f1d9446eef70f7c/ethereum-1.3.7.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "4d48cce577a439daa3d67e20940cf06b", "sha256": "17625387c9a89ed100265033a6e9ec832bd8bffbc7f82a972d812d0c45eb80b5"}, "downloads": -1, "filename": "ethereum-1.4.0.tar.gz", "has_sig": false, "md5_digest": "4d48cce577a439daa3d67e20940cf06b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115822, "upload_time": "2016-07-11T10:17:02", "upload_time_iso_8601": "2016-07-11T10:17:02.614813Z", "url": "https://files.pythonhosted.org/packages/4a/a4/4d5d9d25bb202906b584b087ef8c9dc548490068b8ef74aa29fa9e14f59d/ethereum-1.4.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "153e9a28fe5fb73c65f51efa59c0baff", "sha256": "4af8ac80acae9217926b5710c3c191b3dd1c4f71f8a9810610d81c0489500d3b"}, "downloads": -1, "filename": "ethereum-1.5.1.tar.gz", "has_sig": false, "md5_digest": "153e9a28fe5fb73c65f51efa59c0baff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 116293, "upload_time": "2016-07-21T13:29:30", "upload_time_iso_8601": "2016-07-21T13:29:30.431392Z", "url": "https://files.pythonhosted.org/packages/68/53/fac2d3185678ab020cd6336005882ce12989dd102bba09a6c69b65a0d072/ethereum-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "e05aaee91f4b43abca277f1a4b53d484", "sha256": "9ff7e96ec434e55acac747c0be4e388530122ac55158df429cacf56b78822ffd"}, "downloads": -1, "filename": "ethereum-1.5.2.tar.gz", "has_sig": false, "md5_digest": "e05aaee91f4b43abca277f1a4b53d484", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119942, "upload_time": "2016-07-22T09:44:20", "upload_time_iso_8601": "2016-07-22T09:44:20.796535Z", "url": "https://files.pythonhosted.org/packages/f9/44/54ab08d12e7e67456a694c7c8da94c136b8ebe93f4ec8d0051f726aecdd5/ethereum-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "2f125f777c44396773570e064196b5f3", "sha256": "db527fc0100160e4b9622b16b24b6eafea12620af4e6d6a668be836920e2d2f9"}, "downloads": -1, "filename": "ethereum-1.5.3.tar.gz", "has_sig": false, "md5_digest": "2f125f777c44396773570e064196b5f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125823, "upload_time": "2016-10-04T14:33:58", "upload_time_iso_8601": "2016-10-04T14:33:58.966824Z", "url": "https://files.pythonhosted.org/packages/7e/0d/afd10785b2bbfe9dd311a51026d2c99e9695dcc092516b4f34fe73b2be94/ethereum-1.5.3.tar.gz", "yanked": false}], "1.5.4": [{"comment_text": "", "digests": {"md5": "a0b352ba435fcf88ba548655b387d3f7", "sha256": "b6a1936c4dc00374bc1b47e2f5b2175db0f60f4ec114196ebd41329f3fc93897"}, "downloads": -1, "filename": "ethereum-1.5.4.tar.gz", "has_sig": false, "md5_digest": "a0b352ba435fcf88ba548655b387d3f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 125980, "upload_time": "2016-10-13T14:01:45", "upload_time_iso_8601": "2016-10-13T14:01:45.528197Z", "url": "https://files.pythonhosted.org/packages/5d/b9/6d974ca2363048d7679bcac527b581aebc76a30652841e48d99c2695a9a1/ethereum-1.5.4.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "b23fe8bb8b12814b7708413d852af927", "sha256": "9dc10f2042160aace6ac22f03e525637838754e8d47c6facd7f989531005239d"}, "downloads": -1, "filename": "ethereum-1.6.0.tar.gz", "has_sig": false, "md5_digest": "b23fe8bb8b12814b7708413d852af927", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 127136, "upload_time": "2016-11-01T14:17:52", "upload_time_iso_8601": "2016-11-01T14:17:52.438584Z", "url": "https://files.pythonhosted.org/packages/0f/2b/f2f6702832733e5f0fbecc23015823ac2a00971ab85b86fbf51e0d7cf85f/ethereum-1.6.0.tar.gz", "yanked": false}], "1.6.1": [{"comment_text": "", "digests": {"md5": "fa983157f32d108d7d7505b882022021", "sha256": "2c3baa6ff41398088c9d35541c551f194eadc57dc70d56068af3381780fe234d"}, "downloads": -1, "filename": "ethereum-1.6.1.tar.gz", "has_sig": false, "md5_digest": "fa983157f32d108d7d7505b882022021", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 128417, "upload_time": "2017-03-03T18:01:46", "upload_time_iso_8601": "2017-03-03T18:01:46.329087Z", "url": "https://files.pythonhosted.org/packages/8d/d2/f20638de4c3ab6a28a64c079a7e20cede57491d872c6ce62b2e6839adfe6/ethereum-1.6.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "3d4f22ad24f76d180b246e3f44317b39", "sha256": "d66f0d84a1448a7d4e1760fb5826c19c71930db39a04d4be3ec96dd374bf117a"}, "downloads": -1, "filename": "ethereum-2.0.0.tar.gz", "has_sig": false, "md5_digest": "3d4f22ad24f76d180b246e3f44317b39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137114, "upload_time": "2017-06-22T06:26:31", "upload_time_iso_8601": "2017-06-22T06:26:31.882782Z", "url": "https://files.pythonhosted.org/packages/54/b6/0d40933bc65e1c3c306200e42dc64f53b68c64f90c212f1ed46426ce9eaf/ethereum-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "a960ab3401ec9833b3ca2563b76a30a3", "sha256": "cdac18f52a271d77cbca77449aa77bfa4939657b319a6f0992fcdd70af8b78fe"}, "downloads": -1, "filename": "ethereum-2.0.1.tar.gz", "has_sig": false, "md5_digest": "a960ab3401ec9833b3ca2563b76a30a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137096, "upload_time": "2017-06-22T06:30:10", "upload_time_iso_8601": "2017-06-22T06:30:10.903916Z", "url": "https://files.pythonhosted.org/packages/80/6a/fc4024508e253665098eb00aa53968ebc023d8a96ed0c21c3e98adb9c2d5/ethereum-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "4e312da8b5168127c5a5587070965f6e", "sha256": "9433e9df73ed8d4970016ff91e838f8d67415974e791a47468f9b6095a2d7b48"}, "downloads": -1, "filename": "ethereum-2.0.2.tar.gz", "has_sig": false, "md5_digest": "4e312da8b5168127c5a5587070965f6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139032, "upload_time": "2017-06-22T06:36:46", "upload_time_iso_8601": "2017-06-22T06:36:46.699003Z", "url": "https://files.pythonhosted.org/packages/05/74/e53bfa51f4f682042befbbb4a3f3d7c3853ad6ebc5eb9e076104b9356b76/ethereum-2.0.2.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "2bb071c951cc09f6af01c5b02214742a", "sha256": "617e34786fee497c1f2991d2d1ee8a2409aa846f0a564dc0ecd465c77942d139"}, "downloads": -1, "filename": "ethereum-2.0.4.tar.gz", "has_sig": false, "md5_digest": "2bb071c951cc09f6af01c5b02214742a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 139119, "upload_time": "2017-06-22T06:38:49", "upload_time_iso_8601": "2017-06-22T06:38:49.336539Z", "url": "https://files.pythonhosted.org/packages/24/35/9ed38db22a2996108475f2e59bbc35b8eddc056c77c686dad6d9522a4ba6/ethereum-2.0.4.tar.gz", "yanked": false}], "2.0.5": [{"comment_text": "", "digests": {"md5": "14df257b4c729852576c4165e1426597", "sha256": "39c7c9ba533d37a295589b2577956ed63d9b337f265e9ca3329705cfa3421684"}, "downloads": -1, "filename": "ethereum-2.0.5.tar.gz", "has_sig": false, "md5_digest": "14df257b4c729852576c4165e1426597", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 144017, "upload_time": "2017-10-01T06:28:28", "upload_time_iso_8601": "2017-10-01T06:28:28.452466Z", "url": "https://files.pythonhosted.org/packages/d5/69/f5cc6979c51422ee670325c50f62f035b3bc1bdbecc2b1a32a7da05ecacb/ethereum-2.0.5.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "48421849d21063b7b17fe2933762aee6", "sha256": "99d4c1b7a5af567bb41523df8f6a6aa3d5de6e73bfd830a2ba79c6b266fa84b3"}, "downloads": -1, "filename": "ethereum-2.1.0.tar.gz", "has_sig": false, "md5_digest": "48421849d21063b7b17fe2933762aee6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 156635, "upload_time": "2017-10-11T07:59:27", "upload_time_iso_8601": "2017-10-11T07:59:27.245275Z", "url": "https://files.pythonhosted.org/packages/5c/0d/1ca85eb4ddcac8ef9612d7f635ebb37b7e651a86a4c03705c7b681d168b6/ethereum-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "5ed709ea3f05165edec5d36dace7699d", "sha256": "4603c5b2d3c2f67dcbb22c0253295de1118247a59930af83b01516b29d3b5735"}, "downloads": -1, "filename": "ethereum-2.1.1.tar.gz", "has_sig": false, "md5_digest": "5ed709ea3f05165edec5d36dace7699d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 158694, "upload_time": "2017-10-29T19:22:16", "upload_time_iso_8601": "2017-10-29T19:22:16.939939Z", "url": "https://files.pythonhosted.org/packages/14/72/93b920c969017294841722d0aa2c8bd14fc699665f85c3d7436c8d017f7e/ethereum-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "3e2ba12153c0fbf8c8ab8e80f9cc6b71", "sha256": "73b1a948100d03e2ba4d0ed5698ac280fa7f5f87c74f9de1583bf1c45a398349"}, "downloads": -1, "filename": "ethereum-2.1.2.tar.gz", "has_sig": false, "md5_digest": "3e2ba12153c0fbf8c8ab8e80f9cc6b71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152661, "upload_time": "2017-10-29T20:47:42", "upload_time_iso_8601": "2017-10-29T20:47:42.673675Z", "url": "https://files.pythonhosted.org/packages/7f/80/175acfdbc1f2ab700503657f269a5d566b08c6d8f77e5191fe0380581207/ethereum-2.1.2.tar.gz", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "ddfabd6a58db92665141d0c24d2c3608", "sha256": "9f5583961693f547fe302777fc5129de7802cfc2b7d881fc2a7b2de8850382d8"}, "downloads": -1, "filename": "ethereum-2.1.3.tar.gz", "has_sig": false, "md5_digest": "ddfabd6a58db92665141d0c24d2c3608", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152662, "upload_time": "2017-11-27T05:24:12", "upload_time_iso_8601": "2017-11-27T05:24:12.807821Z", "url": "https://files.pythonhosted.org/packages/f6/c0/2db29fe2dca3059b2bc83756743f5b6458435b7b073673d5e6ccc4de73a5/ethereum-2.1.3.tar.gz", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "3989aa1b81277351ee2a1605c027cdcb", "sha256": "cbcb310a7e3b11fa07b5ccfd01a3ed36550e5e14ba4673bcc9052158d72ea086"}, "downloads": -1, "filename": "ethereum-2.1.4.tar.gz", "has_sig": false, "md5_digest": "3989aa1b81277351ee2a1605c027cdcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152732, "upload_time": "2017-12-08T01:48:35", "upload_time_iso_8601": "2017-12-08T01:48:35.588328Z", "url": "https://files.pythonhosted.org/packages/44/29/d6e7dc391612536802e7d515f2d195694bfcc8bbd8f922ef99bed054af01/ethereum-2.1.4.tar.gz", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "9aeddd3e81b9d43db2f93faff203484e", "sha256": "4ce8cfb59b795ff648441ce644fa74aafa38a15f967fcba4bff83ed0bfc816f5"}, "downloads": -1, "filename": "ethereum-2.1.5.tar.gz", "has_sig": false, "md5_digest": "9aeddd3e81b9d43db2f93faff203484e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152730, "upload_time": "2017-12-10T18:16:45", "upload_time_iso_8601": "2017-12-10T18:16:45.750412Z", "url": "https://files.pythonhosted.org/packages/50/2e/59e1d8d717974cc8e7dfc418853ef9951c1037c725bb132e34c178ae59fe/ethereum-2.1.5.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "7a8b56336dedc3e91bb4442aae028cb7", "sha256": "d7b83eb7144e28efcffabe780fc995ef37531c37e190e488a01dd2ea3042d9cd"}, "downloads": -1, "filename": "ethereum-2.2.0.tar.gz", "has_sig": false, "md5_digest": "7a8b56336dedc3e91bb4442aae028cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152655, "upload_time": "2017-10-29T20:45:58", "upload_time_iso_8601": "2017-10-29T20:45:58.389631Z", "url": "https://files.pythonhosted.org/packages/3f/09/4147180567abc6364d68a1620d50f81dd313765297065efcc9b42029c5bd/ethereum-2.2.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "6966382fca5d8fee45d576053834f16f", "sha256": "ba247c0852554241917a4f191507a94a41a29cf22b5ed07c1fb7c66421d1defc"}, "downloads": -1, "filename": "ethereum-2.3.0.tar.gz", "has_sig": false, "md5_digest": "6966382fca5d8fee45d576053834f16f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 153425, "upload_time": "2018-01-01T19:36:20", "upload_time_iso_8601": "2018-01-01T19:36:20.864942Z", "url": "https://files.pythonhosted.org/packages/74/ce/0444f1e6fbb8b0995732c92979a8118929631fd8ea72bd30c62d4cf8a196/ethereum-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "93ddb086bbfdd82ff09df372ec1c7031", "sha256": "69a22c2f793970d184777bb92589e67d0f622d56eda7c3c1bfc1f0edad522c1c"}, "downloads": -1, "filename": "ethereum-2.3.1.tar.gz", "has_sig": false, "md5_digest": "93ddb086bbfdd82ff09df372ec1c7031", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 153416, "upload_time": "2018-03-28T23:13:44", "upload_time_iso_8601": "2018-03-28T23:13:44.793365Z", "url": "https://files.pythonhosted.org/packages/a3/5b/95c917c54820f746e570f69b9c50e16519212173f62f54080f1bf12128fa/ethereum-2.3.1.tar.gz", "yanked": false}], "2.3.2": [{"comment_text": "", "digests": {"md5": "4e69293c701e120bf5cf927abbce5f9a", "sha256": "a7c05edb538aed10f3f6fe165ebc4999b47cd05821fed0064b07b699350b16e3"}, "downloads": -1, "filename": "ethereum-2.3.2.tar.gz", "has_sig": false, "md5_digest": "4e69293c701e120bf5cf927abbce5f9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 155640, "upload_time": "2018-07-05T23:19:24", "upload_time_iso_8601": "2018-07-05T23:19:24.987879Z", "url": "https://files.pythonhosted.org/packages/ca/48/bd2484ff00fad56bfabad46af8d91f0ab4c6844e389e00b00c7609b405e0/ethereum-2.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4e69293c701e120bf5cf927abbce5f9a", "sha256": "a7c05edb538aed10f3f6fe165ebc4999b47cd05821fed0064b07b699350b16e3"}, "downloads": -1, "filename": "ethereum-2.3.2.tar.gz", "has_sig": false, "md5_digest": "4e69293c701e120bf5cf927abbce5f9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 155640, "upload_time": "2018-07-05T23:19:24", "upload_time_iso_8601": "2018-07-05T23:19:24.987879Z", "url": "https://files.pythonhosted.org/packages/ca/48/bd2484ff00fad56bfabad46af8d91f0ab4c6844e389e00b00c7609b405e0/ethereum-2.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:30 2020"}