{"info": {"author": "Tim Kutcher", "author_email": "tkutcher@dicorp.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 3"], "description": "# prettyrepo\nA wrapper for common [invoke](http://docs.pyinvoke.org/en/stable/) tasks to make repos extra pretty.\n\n\n[![pipeline status](https://gitlab.com/tkutcher/prettyrepo/badges/dev/pipeline.svg)](https://gitlab.com/tkutcher/prettyrepo/-/commits/dev)\n[![PyPI version](https://badge.fury.io/py/prettyrepo.svg)](https://badge.fury.io/py/prettyrepo)\n[![coverage report](https://gitlab.com/tkutcher/prettyrepo/badges/dev/coverage.svg)](https://gitlab.com/tkutcher/prettyrepo/-/commits/dev)\n[![docs](https://img.shields.io/static/v1?label=docs&message=wiki&color=purple)](https://gitlab.com/tkutcher/prettyrepo/-/wikis/home)\n\n\n## Overview\nAll of the functionality as [invoke](http://docs.pyinvoke.org/en/stable/) with a smidge more flexibility (maybe just for me?) than something like [invocations](https://github.com/pyinvoke/invocations). \n\nIn general, this project (as well as invoke), give an OS-agnostic solution for automating common commands during development (cleaning build files, running unit tests, etc.). Similar to how a Makefile might be used, prettyrepo makes it so that with a small set of commands you can run any typical task. Furthermore, you can have configurable arguments for each of those tasks being run (see [example](#example)).  \n\nThis project introduces a `TaskManager` so every available task can be tweaked as desired and persistent for a project. Reference [tasks.py](tasks.py) for this project's own tasks file.\n\n\n### Example\n\n```python\n\nfrom invoke import task\n\nfrom prettyrepo import TaskManager\nfrom prettyrepo.utils import run_unittest\nfrom prettyrepo.utils import get_python_cleans\n\n# Create a TaskManager that knows the root of your project\nmgr = TaskManager(source_root='prettyrepo', tasks_module=__name__)\n\n# Add tasks from the \"task library\" or a simple command (by specifying the cmd kwarg)\nmgr.add_task('clean', cleans=get_python_cleans())\nmgr.add_task('test', lib='unittest', dir_='tests')\nmgr.add_task('cov', aliases=['cover'], lib='coverage', func=run_unittest, dir_='tests')\nmgr.add_task('lint', aliases=['flake8'], cmd='flake8 prettyrepo', doc='Run flake8 lints.')\n\n# You can use the normal invoke task decorator in conjunction with prettyrepo tasks.\n@task(name='bleh', help={'times': 'number of times to say blah'})\ndef blah(_, times=1):\n    \"\"\"Say blah.\"\"\"\n    print('\\n'.join(['blah']*times))\n\n\nns = mgr.namespace\n```\n\nWith this in your `tasks.py` file in the root of your repository, you can run \n\n`inv <command> [-h] [<command options...>]`\n\nWhere `-h` is available to show the help message. For example, running `inv clean -h` yields:\n\n```\nDocstring:\n  Clean unnecessary files.\n\nOptions:\n  -l INT, --level=INT       the level of \"cleanliness\" [0-2], default 1\n  -v INT, --verbosity=INT   how verbose information to log to the console [0-3], default 1\n```\n\nWhere `-l` and `-v` can be used to specify what the clean task does (the higher the level, the more files it removes - i.e. venv, dist files; the higher the verbosity, the more info it logs):\n\n\n<img src=\"https://gitlab.com/tkutcher/prettyrepo/-/raw/dev/gfx/clean-demo.gif\" alt=\"command line screenshot\" height=\"400px\">\n\n\n Documentation available in the [repository wiki](https://gitlab.com/tkutcher/prettyrepo/-/wikis/home/documentation/setup).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/tkutcher/prettyrepo/-/wikis/home", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "prettyrepo", "package_url": "https://pypi.org/project/prettyrepo/", "platform": "any", "project_url": "https://pypi.org/project/prettyrepo/", "project_urls": {"Bug Tracker": "https://gitlab.com/tkutcher/prettyrepo/issues", "Homepage": "https://gitlab.com/tkutcher/prettyrepo/-/wikis/home", "Source Code": "https://gitlab.com/tkutcher/prettyrepo/"}, "release_url": "https://pypi.org/project/prettyrepo/0.1.0/", "requires_dist": ["invoke"], "requires_python": "", "summary": "Common invoke tasks wrapper/library", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>prettyrepo</h1>\n<p>A wrapper for common <a href=\"http://docs.pyinvoke.org/en/stable/\" rel=\"nofollow\">invoke</a> tasks to make repos extra pretty.</p>\n<p><a href=\"https://gitlab.com/tkutcher/prettyrepo/-/commits/dev\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcaafabbda969d4bb9fb82327d155e983cc1cf87/68747470733a2f2f6769746c61622e636f6d2f746b7574636865722f7072657474797265706f2f6261646765732f6465762f706970656c696e652e737667\"></a>\n<a href=\"https://badge.fury.io/py/prettyrepo\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdb687c548e54c8480b3589a60415b7ff8b7bd9b/68747470733a2f2f62616467652e667572792e696f2f70792f7072657474797265706f2e737667\"></a>\n<a href=\"https://gitlab.com/tkutcher/prettyrepo/-/commits/dev\" rel=\"nofollow\"><img alt=\"coverage report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/504cf87b4595a3f3b4e069d72806e483877e8668/68747470733a2f2f6769746c61622e636f6d2f746b7574636865722f7072657474797265706f2f6261646765732f6465762f636f7665726167652e737667\"></a>\n<a href=\"https://gitlab.com/tkutcher/prettyrepo/-/wikis/home\" rel=\"nofollow\"><img alt=\"docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f4eeee62903713c9d500a5040a76d56f1054d1c6/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d646f6373266d6573736167653d77696b6926636f6c6f723d707572706c65\"></a></p>\n<h2>Overview</h2>\n<p>All of the functionality as <a href=\"http://docs.pyinvoke.org/en/stable/\" rel=\"nofollow\">invoke</a> with a smidge more flexibility (maybe just for me?) than something like <a href=\"https://github.com/pyinvoke/invocations\" rel=\"nofollow\">invocations</a>.</p>\n<p>In general, this project (as well as invoke), give an OS-agnostic solution for automating common commands during development (cleaning build files, running unit tests, etc.). Similar to how a Makefile might be used, prettyrepo makes it so that with a small set of commands you can run any typical task. Furthermore, you can have configurable arguments for each of those tasks being run (see <a href=\"#example\" rel=\"nofollow\">example</a>).</p>\n<p>This project introduces a <code>TaskManager</code> so every available task can be tweaked as desired and persistent for a project. Reference <a href=\"tasks.py\" rel=\"nofollow\">tasks.py</a> for this project's own tasks file.</p>\n<h3>Example</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">invoke</span> <span class=\"kn\">import</span> <span class=\"n\">task</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">prettyrepo</span> <span class=\"kn\">import</span> <span class=\"n\">TaskManager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">prettyrepo.utils</span> <span class=\"kn\">import</span> <span class=\"n\">run_unittest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">prettyrepo.utils</span> <span class=\"kn\">import</span> <span class=\"n\">get_python_cleans</span>\n\n<span class=\"c1\"># Create a TaskManager that knows the root of your project</span>\n<span class=\"n\">mgr</span> <span class=\"o\">=</span> <span class=\"n\">TaskManager</span><span class=\"p\">(</span><span class=\"n\">source_root</span><span class=\"o\">=</span><span class=\"s1\">'prettyrepo'</span><span class=\"p\">,</span> <span class=\"n\">tasks_module</span><span class=\"o\">=</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add tasks from the \"task library\" or a simple command (by specifying the cmd kwarg)</span>\n<span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s1\">'clean'</span><span class=\"p\">,</span> <span class=\"n\">cleans</span><span class=\"o\">=</span><span class=\"n\">get_python_cleans</span><span class=\"p\">())</span>\n<span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">,</span> <span class=\"n\">lib</span><span class=\"o\">=</span><span class=\"s1\">'unittest'</span><span class=\"p\">,</span> <span class=\"n\">dir_</span><span class=\"o\">=</span><span class=\"s1\">'tests'</span><span class=\"p\">)</span>\n<span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s1\">'cov'</span><span class=\"p\">,</span> <span class=\"n\">aliases</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'cover'</span><span class=\"p\">],</span> <span class=\"n\">lib</span><span class=\"o\">=</span><span class=\"s1\">'coverage'</span><span class=\"p\">,</span> <span class=\"n\">func</span><span class=\"o\">=</span><span class=\"n\">run_unittest</span><span class=\"p\">,</span> <span class=\"n\">dir_</span><span class=\"o\">=</span><span class=\"s1\">'tests'</span><span class=\"p\">)</span>\n<span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">add_task</span><span class=\"p\">(</span><span class=\"s1\">'lint'</span><span class=\"p\">,</span> <span class=\"n\">aliases</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'flake8'</span><span class=\"p\">],</span> <span class=\"n\">cmd</span><span class=\"o\">=</span><span class=\"s1\">'flake8 prettyrepo'</span><span class=\"p\">,</span> <span class=\"n\">doc</span><span class=\"o\">=</span><span class=\"s1\">'Run flake8 lints.'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># You can use the normal invoke task decorator in conjunction with prettyrepo tasks.</span>\n<span class=\"nd\">@task</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'bleh'</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'times'</span><span class=\"p\">:</span> <span class=\"s1\">'number of times to say blah'</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">blah</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">times</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Say blah.\"\"\"</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"s1\">'blah'</span><span class=\"p\">]</span><span class=\"o\">*</span><span class=\"n\">times</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">ns</span> <span class=\"o\">=</span> <span class=\"n\">mgr</span><span class=\"o\">.</span><span class=\"n\">namespace</span>\n</pre>\n<p>With this in your <code>tasks.py</code> file in the root of your repository, you can run</p>\n<p><code>inv &lt;command&gt; [-h] [&lt;command options...&gt;]</code></p>\n<p>Where <code>-h</code> is available to show the help message. For example, running <code>inv clean -h</code> yields:</p>\n<pre><code>Docstring:\n  Clean unnecessary files.\n\nOptions:\n  -l INT, --level=INT       the level of \"cleanliness\" [0-2], default 1\n  -v INT, --verbosity=INT   how verbose information to log to the console [0-3], default 1\n</code></pre>\n<p>Where <code>-l</code> and <code>-v</code> can be used to specify what the clean task does (the higher the level, the more files it removes - i.e. venv, dist files; the higher the verbosity, the more info it logs):</p>\n<img alt=\"command line screenshot\" height=\"400px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6aee56ccca0b66deb61db998afe91a55fd2dc20/68747470733a2f2f6769746c61622e636f6d2f746b7574636865722f7072657474797265706f2f2d2f7261772f6465762f6766782f636c65616e2d64656d6f2e676966\">\n<p>Documentation available in the <a href=\"https://gitlab.com/tkutcher/prettyrepo/-/wikis/home/documentation/setup\" rel=\"nofollow\">repository wiki</a>.</p>\n\n          </div>"}, "last_serial": 6794447, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "eae0d335a596a28388ca6bfddaefbb4a", "sha256": "00286c9e2df8fd830f7f5b62d433919acdfc74e95265598e4c81cab5afbd113d"}, "downloads": -1, "filename": "prettyrepo-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eae0d335a596a28388ca6bfddaefbb4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10614, "upload_time": "2020-03-11T18:53:15", "upload_time_iso_8601": "2020-03-11T18:53:15.406778Z", "url": "https://files.pythonhosted.org/packages/8b/de/6a7ba58ebd3b2b8c097638bc562de4c22fb39eaf8c96c904edd387620a82/prettyrepo-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23a6b2a2753507fa26116e7b4b96786f", "sha256": "436debc2fdebbd41a4553331095e5096ce8456aea0fb18f05cf1d42b0e20631d"}, "downloads": -1, "filename": "prettyrepo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "23a6b2a2753507fa26116e7b4b96786f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9450, "upload_time": "2020-03-11T18:53:16", "upload_time_iso_8601": "2020-03-11T18:53:16.778538Z", "url": "https://files.pythonhosted.org/packages/a2/5a/2f1280986d74c706f98e8712280cc2f7e9e94456dc233deb89b649c7b868/prettyrepo-0.1.0.tar.gz", "yanked": false}], "0.1.0a0": [{"comment_text": "", "digests": {"md5": "d153badc2b9bcae8b7f4eeb07910d05b", "sha256": "dc9fa8f2a44980ac2e0b2d8785d46bf850aca55e94f88318de9da66e10f7b309"}, "downloads": -1, "filename": "prettyrepo-0.1.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "d153badc2b9bcae8b7f4eeb07910d05b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9053, "upload_time": "2020-02-18T18:33:05", "upload_time_iso_8601": "2020-02-18T18:33:05.280892Z", "url": "https://files.pythonhosted.org/packages/d7/ce/be806d211dc4165adf8b7720da5aa858583618569722e75558dccd46cf71/prettyrepo-0.1.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ba54a179d94ace7df2090c51469aed0", "sha256": "8fa9099fa6f34fd1f554ee5c3ebbcb6d5fef276f1e871122981173377fafc55d"}, "downloads": -1, "filename": "prettyrepo-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "4ba54a179d94ace7df2090c51469aed0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6856, "upload_time": "2020-02-18T18:33:06", "upload_time_iso_8601": "2020-02-18T18:33:06.664644Z", "url": "https://files.pythonhosted.org/packages/7d/9d/ca1f43e2eedf7ef23386d51fc3e4a6165b272933929dd79c3829dc60805b/prettyrepo-0.1.0a0.tar.gz", "yanked": false}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "60696194da180c1064338e902782289d", "sha256": "ec1a95dac304bb685beb481dd600b0f0f63949e99843a4bcdbd3e865d3462d51"}, "downloads": -1, "filename": "prettyrepo-0.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "60696194da180c1064338e902782289d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10491, "upload_time": "2020-02-25T16:09:52", "upload_time_iso_8601": "2020-02-25T16:09:52.438426Z", "url": "https://files.pythonhosted.org/packages/96/1c/5a2b9469826b81f7b7f2209ad0802e42a0e466a06762d285547b450cc9f5/prettyrepo-0.1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6119c1cdfd37043ba0c920bfc7c542b9", "sha256": "2913eb0ab9a36d6d3e468c797275bae32bb8c2ff77265fdeb9a5b72a6adbef93"}, "downloads": -1, "filename": "prettyrepo-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "6119c1cdfd37043ba0c920bfc7c542b9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8964, "upload_time": "2020-02-25T16:09:54", "upload_time_iso_8601": "2020-02-25T16:09:54.150998Z", "url": "https://files.pythonhosted.org/packages/5e/de/57a5fd0a447af0d402ef518d40812d3e29329b50f5b45e92a11af0fc6fab/prettyrepo-0.1.0a1.tar.gz", "yanked": false}], "0.1.0a2": [{"comment_text": "", "digests": {"md5": "e31c20d17b73171197e4765bb84a48e5", "sha256": "de756fc4da3733875d594b416029a1e1b10389bbd6b5ecbdcd2f78cdd591ab57"}, "downloads": -1, "filename": "prettyrepo-0.1.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "e31c20d17b73171197e4765bb84a48e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10574, "upload_time": "2020-03-02T02:14:23", "upload_time_iso_8601": "2020-03-02T02:14:23.753161Z", "url": "https://files.pythonhosted.org/packages/c3/1e/50063ae6f0b2a43ff4d70c91f61e846c7617639e91f0d5a395ec342f71e0/prettyrepo-0.1.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c3c2fe4cb9b517310d581a5524cc278", "sha256": "4a1665c2697c263cda89f5fb97d2aa72d45b42b07a588f05e798437356967847"}, "downloads": -1, "filename": "prettyrepo-0.1.0a2.tar.gz", "has_sig": false, "md5_digest": "3c3c2fe4cb9b517310d581a5524cc278", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9214, "upload_time": "2020-03-02T02:14:24", "upload_time_iso_8601": "2020-03-02T02:14:24.823303Z", "url": "https://files.pythonhosted.org/packages/68/fe/45d9437b006c6ba7c6bbe9999796c03116ed02c485558f2ec37d467b38ce/prettyrepo-0.1.0a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eae0d335a596a28388ca6bfddaefbb4a", "sha256": "00286c9e2df8fd830f7f5b62d433919acdfc74e95265598e4c81cab5afbd113d"}, "downloads": -1, "filename": "prettyrepo-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eae0d335a596a28388ca6bfddaefbb4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10614, "upload_time": "2020-03-11T18:53:15", "upload_time_iso_8601": "2020-03-11T18:53:15.406778Z", "url": "https://files.pythonhosted.org/packages/8b/de/6a7ba58ebd3b2b8c097638bc562de4c22fb39eaf8c96c904edd387620a82/prettyrepo-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "23a6b2a2753507fa26116e7b4b96786f", "sha256": "436debc2fdebbd41a4553331095e5096ce8456aea0fb18f05cf1d42b0e20631d"}, "downloads": -1, "filename": "prettyrepo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "23a6b2a2753507fa26116e7b4b96786f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9450, "upload_time": "2020-03-11T18:53:16", "upload_time_iso_8601": "2020-03-11T18:53:16.778538Z", "url": "https://files.pythonhosted.org/packages/a2/5a/2f1280986d74c706f98e8712280cc2f7e9e94456dc233deb89b649c7b868/prettyrepo-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:33 2020"}