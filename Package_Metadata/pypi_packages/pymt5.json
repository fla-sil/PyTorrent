{"info": {"author": "DevCartel", "author_email": "support@devcartel.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# PyMT5\n[![version](https://img.shields.io/pypi/v/pymt5.svg)](https://pypi.org/project/pymt5)\n[![pyversion](https://img.shields.io/pypi/pyversions/pymt5.svg)](#)\n[![platform](https://img.shields.io/badge/platform-linux|%20win-lightgray.svg)](#platform-availability)\n[![license](https://img.shields.io/pypi/l/pymt5.svg)](https://github.com/devcartel/pymt5/blob/master/LICENSE.txt)\n[![downloads](https://img.shields.io/pypi/dm/pymt5.svg)](https://pypi.org/project/pymt5)\n[![Sponsor](https://img.shields.io/badge/Sponsor%20PyMT5-%2419.99%2Fmonth-orange.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=CKHUBNTFNDCB8)\n\nProvides simplified, multithreaded, socket-based Python interfaces to MT5 gateways. PyMT5 requires a [DevCartel MT5 gateway](https://github.com/devcartel/devcartelgateway64) installed on the MT5 platform to work with PyMT5.\n\n<p align=\"center\">\n    <img src=\"http://media.virbcdn.com/cdn_images/resize_1024x1365/5b/ac5a58aa5703cc1b-ScreenShot2018-09-08at103035.png\" alt=\"application\" width=\"800\"/>\n</p>\n\n## Installation\nPyMT5 supports both Python 2 and 3. Simply install from [PyPI](https://pypi.org/project/pymt5) using `pip`:\n\n    pip install pymt5\n\n## Example\n```python\nimport pymt5\n\ndef onData(data):\n    client = data.get('client_id')\n    # Login\n    if data.get('type') == '1':\n        # Send heartbeat\n        m.send(client, {'ver':'3','type':'6'})\n        # Send login OK response\n        m.send(client, {'ver':'3',\n                        'type':'1',\n                        'login':data.get('login'),\n                        'password':data.get('password'),\n                        'res':'0'})\n\nm = pymt5.PyMT5()\nm.onConnected = onConnected\nm.onDisconnected = onDisconnected\nm.onData = onData\n\n```\n\nCheckout more message [examples](https://github.com/devcartel/pymt5/tree/master/examples).\n\n## API\n__pymt5.PyMT5([_host=''_], [_port=16838_])__  \n_host: str_  \n_port: int_  \n_\u27a5return: object_  \nStarts a PyMT5 server and listening on a port defined by _port_.\n\n    >> m = pymt5.PyMT5()\n\nUpon incoming connection from a gateway, PyMT5 stores client information in `pymt5.requests` in dict format as\n\n__pymt5.stop()__  \nDisconnects all MT5 gateway connections and stop the server.\n\n    >> m.stop()\n\n__pymt5.broadcast(_data_)__  \n_data: dict_  \nSends a message to all connected gateways. Consider using this when sending market data.\n\n    >> #send a tick\n    >> m.broadcast({'ver':'3','type':'4','symbol':'EURUSD.TEST','bank':'dc','bid':'1.2661','ask':'1.2665','last':'1.2665','volume':'1','datetime':'0'})\n\n__pymt5.send(<i>client_id</i>, _data_)__  \n<i>client_id: int</i>  \n_data: dict_  \nSends a message to a connected gateway.\n\n    >> #send heartbeat\n    >> m.send(123145536110592, {'ver':'3','type':'6'})\n\n__pymt5.disconnect(<i>client_id</i>)__  \n<i>client_id: int</i>  \nTerminates a connection.\n\n    >> m.disconnect(123145536110592)\n\n__pymt5.onConnected(<i>client_info</i>)__  \n<i>client_info: dict</i>  \nA callback `onConnected`, if assigned, is called upon a successful connection from a client. Client information can be accessed from `client_info`'s values as `client_id`, `client_address` and `client_port`.\n\n    >> def onConnected(client_info):\n    >>     print(str(client_info))\n    >>     # print {'client_port': 64941, 'client_address': '127.0.0.1', 'client_id': 123145536110592}\n    >>\n    >> m = pymt5.PyMT5()\n    >> m.onConnected = onConnected\n\n__pymt5.onDisconnected(<i>client_info</i>)__   \n<i>client_info: dict</i>  \nA callback `onDisconnected`, if assigned, is called upon a disconnection from a client. Client information can be accessed from `client_info`'s values as `client_id`, `client_address` and `client_port`.\n\n    >> def onDisonnected(client_info):\n    >>     print(str(client_info))\n    >>\n    >> m = pymt5.PyMT5()\n    >> m.onDisconnected = onDisconnected\n\n__pymt5.onData(_data_)__  \n_data: dict_  \nA callback `onData`, if assigned, is called upon receiving messages from gateways. See [Data Format](#data-format) for more information.\n\n    >> def onData(data):\n    >>     print(json.dumps(data))\n    >>\n    >> m = pymt5.PyMT5()\n    >> m.onData = onData\n\n## Data Format\nData is to be composed as a dict with key/value defined below to be sent and received from a gateway.\n\n| Data type     | Header                 | Tags|\n| ------------- | ---------------------- ||\n| Login         | `'ver':'3','type':1'`  | `'login'`,`'password'`,`'res'`|\n| Logout        | `'ver':'3','type':2'`  | _None|\n| Symbol        | `'ver':'3','type':3'`  | `'index'`,`'symbol'`,`'path'`,`'description'`,`'page'`,<br/>`'currency_base'`,`'currency_profit'`,`'currency_margin'`,<br/>`'digits'`,`'tick_flags'`,`'calc_mode'`,`'exec_mode'`,<br/>`'chart_mode'`,`'fill_flags'`,`'expir_flags'`,`'tick_value'`,<br/>`'tick_size'`,`'contract_size'`,`'volume_min'`,`'volume_max'`,<br/>`'volume_step'`,`'market_depth'`,`'margin_flags'`,<br/>`'margin_initial'`,`'margin_maintenance'`,`'margin_long'`,<br/>`'margin_short'`,`'margin_limit'`,<br/>`'margin_stop'`,`'margin_stop_limit'`,`'settlement_price'`,<br/>`'price_limit_max'`,`'price_limit_min'`,`'time_start'`,<br/>`'time_expiration'`,`'trade_mode'` |\n| Tick          | `'ver':'3','type':4'`  | `'symbol'`,`'bank'`,`'bid'`,`'ask'`,`'last'`,`'volume'`,`'datetime'`|\n| Order         | `'ver':'3','type':5'`  | `'symbol'`,`'bank'`,`'bid'`,`'ask'`,`'last'`,`'volume'`,`'datetime'`,<br/>`'order_action'`,`'state'`,`'order'`,`'exchange_id'`,<br/>`'custom_data'`,`'request_id'`,`'symbol'`,`'login'`,<br/>`'type_order'`,`'type_time'`,`'action'`,`'price_order'`,<br/>`'price_sl'`,`'price_tp'`,`'price_tick_bid'`,`'price_tick_ask'`,<br/>`'volume'`,`'expiration_time'`,`'result'`                                                                                                                                                                                                                                                                               |\n| Heartbeat     | `'ver':'3','type':6'`  | _None|\n| Deal          | `'ver':'3','type':7'`  | `'exchange_id'`,`'order'`,`'symbol'`,`'login'`,`'type_deal'`,<br/>`'volume'`,`'volume_rem'`,`'price'`|\n| External Deal | `'ver':'3','type':50'` | `'exchange_id'`,`'order'`,`'symbol'`,`'login'`,`'type_deal'`,<br/>`'volume'`,`'volume_rem'`,`'price'`,`'datetime'`|\n\n## Support\n* Get a [DevCartel MT5 Gateway](http://devcartel.com/devcartelgateway64) in order to work with PyMT5\n* Report an issue in [issue tracker](https://github.com/devcartel/pymt5/issues)\n\n## Changelog\n1.2.0\n* 8 July 2019\n* Support for Python 3.7\n* Update support links\n* Add examples\n\n1.1.0\n* 21 April 2018\n* Released on PyPI\n* Added README\n\n1.0.0\n* 13 April 2018\n* Initial release\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/devcartel/pymt5", "keywords": "metatrader,metaquotes,mt5,gateway,api,python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pymt5", "package_url": "https://pypi.org/project/pymt5/", "platform": "", "project_url": "https://pypi.org/project/pymt5/", "project_urls": {"Homepage": "https://github.com/devcartel/pymt5"}, "release_url": "https://pypi.org/project/pymt5/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Python API for MetaTrader 5 gateways", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyMT5</h1>\n<p><a href=\"https://pypi.org/project/pymt5\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fcb13dd1e121131b98ad0c5c86745d717d0f397/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796d74352e737667\"></a>\n<a href=\"#\" rel=\"nofollow\"><img alt=\"pyversion\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6244efc86381916bfd6e88b7cfcc771bf4d1ddd0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796d74352e737667\"></a>\n<a href=\"#platform-availability\" rel=\"nofollow\"><img alt=\"platform\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14de72ea72c13fba8e0f5b6393d6011f1cbabc77/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d6c696e757825374325323077696e2d6c69676874677261792e737667\"></a>\n<a href=\"https://github.com/devcartel/pymt5/blob/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69df30b070997f84e8d79373b345be9ca7c3b294/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70796d74352e737667\"></a>\n<a href=\"https://pypi.org/project/pymt5\" rel=\"nofollow\"><img alt=\"downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0586527ac7e0591c49b6f27582fe5bf8b77b1b0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70796d74352e737667\"></a>\n<a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=CKHUBNTFNDCB8\" rel=\"nofollow\"><img alt=\"Sponsor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4d5056e08b6ab88b1d542d5bccb51d5e2555db24/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53706f6e736f7225323050794d54352d25323431392e39392532466d6f6e74682d6f72616e67652e737667\"></a></p>\n<p>Provides simplified, multithreaded, socket-based Python interfaces to MT5 gateways. PyMT5 requires a <a href=\"https://github.com/devcartel/devcartelgateway64\" rel=\"nofollow\">DevCartel MT5 gateway</a> installed on the MT5 platform to work with PyMT5.</p>\n<p align=\"center\">\n    <img alt=\"application\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/152ba32a23cd42b0e38d1af0abbd994c5a2eb7e3/687474703a2f2f6d656469612e7669726263646e2e636f6d2f63646e5f696d616765732f726573697a655f3130323478313336352f35622f616335613538616135373033636331622d53637265656e53686f74323031382d30392d303861743130333033352e706e67\" width=\"800\">\n</p>\n<h2>Installation</h2>\n<p>PyMT5 supports both Python 2 and 3. Simply install from <a href=\"https://pypi.org/project/pymt5\" rel=\"nofollow\">PyPI</a> using <code>pip</code>:</p>\n<pre><code>pip install pymt5\n</code></pre>\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pymt5</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">onData</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'client_id'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Login</span>\n    <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'type'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'1'</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Send heartbeat</span>\n        <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'ver'</span><span class=\"p\">:</span><span class=\"s1\">'3'</span><span class=\"p\">,</span><span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'6'</span><span class=\"p\">})</span>\n        <span class=\"c1\"># Send login OK response</span>\n        <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'ver'</span><span class=\"p\">:</span><span class=\"s1\">'3'</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'1'</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'login'</span><span class=\"p\">:</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'login'</span><span class=\"p\">),</span>\n                        <span class=\"s1\">'password'</span><span class=\"p\">:</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'password'</span><span class=\"p\">),</span>\n                        <span class=\"s1\">'res'</span><span class=\"p\">:</span><span class=\"s1\">'0'</span><span class=\"p\">})</span>\n\n<span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">pymt5</span><span class=\"o\">.</span><span class=\"n\">PyMT5</span><span class=\"p\">()</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">onConnected</span> <span class=\"o\">=</span> <span class=\"n\">onConnected</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">onDisconnected</span> <span class=\"o\">=</span> <span class=\"n\">onDisconnected</span>\n<span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">onData</span> <span class=\"o\">=</span> <span class=\"n\">onData</span>\n</pre>\n<p>Checkout more message <a href=\"https://github.com/devcartel/pymt5/tree/master/examples\" rel=\"nofollow\">examples</a>.</p>\n<h2>API</h2>\n<p><strong>pymt5.PyMT5([<em>host=''</em>], [<em>port=16838</em>])</strong><br>\n<em>host: str</em><br>\n<em>port: int</em><br>\n<em>\u27a5return: object</em><br>\nStarts a PyMT5 server and listening on a port defined by <em>port</em>.</p>\n<pre><code>&gt;&gt; m = pymt5.PyMT5()\n</code></pre>\n<p>Upon incoming connection from a gateway, PyMT5 stores client information in <code>pymt5.requests</code> in dict format as</p>\n<p><strong>pymt5.stop()</strong><br>\nDisconnects all MT5 gateway connections and stop the server.</p>\n<pre><code>&gt;&gt; m.stop()\n</code></pre>\n<p><strong>pymt5.broadcast(<em>data</em>)</strong><br>\n<em>data: dict</em><br>\nSends a message to all connected gateways. Consider using this when sending market data.</p>\n<pre><code>&gt;&gt; #send a tick\n&gt;&gt; m.broadcast({'ver':'3','type':'4','symbol':'EURUSD.TEST','bank':'dc','bid':'1.2661','ask':'1.2665','last':'1.2665','volume':'1','datetime':'0'})\n</code></pre>\n<p><strong>pymt5.send(<i>client_id</i>, <em>data</em>)</strong><br>\n<i>client_id: int</i><br>\n<em>data: dict</em><br>\nSends a message to a connected gateway.</p>\n<pre><code>&gt;&gt; #send heartbeat\n&gt;&gt; m.send(123145536110592, {'ver':'3','type':'6'})\n</code></pre>\n<p><strong>pymt5.disconnect(<i>client_id</i>)</strong><br>\n<i>client_id: int</i><br>\nTerminates a connection.</p>\n<pre><code>&gt;&gt; m.disconnect(123145536110592)\n</code></pre>\n<p><strong>pymt5.onConnected(<i>client_info</i>)</strong><br>\n<i>client_info: dict</i><br>\nA callback <code>onConnected</code>, if assigned, is called upon a successful connection from a client. Client information can be accessed from <code>client_info</code>'s values as <code>client_id</code>, <code>client_address</code> and <code>client_port</code>.</p>\n<pre><code>&gt;&gt; def onConnected(client_info):\n&gt;&gt;     print(str(client_info))\n&gt;&gt;     # print {'client_port': 64941, 'client_address': '127.0.0.1', 'client_id': 123145536110592}\n&gt;&gt;\n&gt;&gt; m = pymt5.PyMT5()\n&gt;&gt; m.onConnected = onConnected\n</code></pre>\n<p><strong>pymt5.onDisconnected(<i>client_info</i>)</strong><br>\n<i>client_info: dict</i><br>\nA callback <code>onDisconnected</code>, if assigned, is called upon a disconnection from a client. Client information can be accessed from <code>client_info</code>'s values as <code>client_id</code>, <code>client_address</code> and <code>client_port</code>.</p>\n<pre><code>&gt;&gt; def onDisonnected(client_info):\n&gt;&gt;     print(str(client_info))\n&gt;&gt;\n&gt;&gt; m = pymt5.PyMT5()\n&gt;&gt; m.onDisconnected = onDisconnected\n</code></pre>\n<p><strong>pymt5.onData(<em>data</em>)</strong><br>\n<em>data: dict</em><br>\nA callback <code>onData</code>, if assigned, is called upon receiving messages from gateways. See <a href=\"#data-format\" rel=\"nofollow\">Data Format</a> for more information.</p>\n<pre><code>&gt;&gt; def onData(data):\n&gt;&gt;     print(json.dumps(data))\n&gt;&gt;\n&gt;&gt; m = pymt5.PyMT5()\n&gt;&gt; m.onData = onData\n</code></pre>\n<h2>Data Format</h2>\n<p>Data is to be composed as a dict with key/value defined below to be sent and received from a gateway.</p>\n<table>\n<thead>\n<tr>\n<th>Data type</th>\n<th>Header</th>\n<th>Tags</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Login</td>\n<td><code>'ver':'3','type':1'</code></td>\n<td><code>'login'</code>,<code>'password'</code>,<code>'res'</code></td>\n</tr>\n<tr>\n<td>Logout</td>\n<td><code>'ver':'3','type':2'</code></td>\n<td><em>None</em></td>\n</tr>\n<tr>\n<td>Symbol</td>\n<td><code>'ver':'3','type':3'</code></td>\n<td><code>'index'</code>,<code>'symbol'</code>,<code>'path'</code>,<code>'description'</code>,<code>'page'</code>,<br><code>'currency_base'</code>,<code>'currency_profit'</code>,<code>'currency_margin'</code>,<br><code>'digits'</code>,<code>'tick_flags'</code>,<code>'calc_mode'</code>,<code>'exec_mode'</code>,<br><code>'chart_mode'</code>,<code>'fill_flags'</code>,<code>'expir_flags'</code>,<code>'tick_value'</code>,<br><code>'tick_size'</code>,<code>'contract_size'</code>,<code>'volume_min'</code>,<code>'volume_max'</code>,<br><code>'volume_step'</code>,<code>'market_depth'</code>,<code>'margin_flags'</code>,<br><code>'margin_initial'</code>,<code>'margin_maintenance'</code>,<code>'margin_long'</code>,<br><code>'margin_short'</code>,<code>'margin_limit'</code>,<br><code>'margin_stop'</code>,<code>'margin_stop_limit'</code>,<code>'settlement_price'</code>,<br><code>'price_limit_max'</code>,<code>'price_limit_min'</code>,<code>'time_start'</code>,<br><code>'time_expiration'</code>,<code>'trade_mode'</code></td>\n</tr>\n<tr>\n<td>Tick</td>\n<td><code>'ver':'3','type':4'</code></td>\n<td><code>'symbol'</code>,<code>'bank'</code>,<code>'bid'</code>,<code>'ask'</code>,<code>'last'</code>,<code>'volume'</code>,<code>'datetime'</code></td>\n</tr>\n<tr>\n<td>Order</td>\n<td><code>'ver':'3','type':5'</code></td>\n<td><code>'symbol'</code>,<code>'bank'</code>,<code>'bid'</code>,<code>'ask'</code>,<code>'last'</code>,<code>'volume'</code>,<code>'datetime'</code>,<br><code>'order_action'</code>,<code>'state'</code>,<code>'order'</code>,<code>'exchange_id'</code>,<br><code>'custom_data'</code>,<code>'request_id'</code>,<code>'symbol'</code>,<code>'login'</code>,<br><code>'type_order'</code>,<code>'type_time'</code>,<code>'action'</code>,<code>'price_order'</code>,<br><code>'price_sl'</code>,<code>'price_tp'</code>,<code>'price_tick_bid'</code>,<code>'price_tick_ask'</code>,<br><code>'volume'</code>,<code>'expiration_time'</code>,<code>'result'</code></td>\n</tr>\n<tr>\n<td>Heartbeat</td>\n<td><code>'ver':'3','type':6'</code></td>\n<td><em>None</em></td>\n</tr>\n<tr>\n<td>Deal</td>\n<td><code>'ver':'3','type':7'</code></td>\n<td><code>'exchange_id'</code>,<code>'order'</code>,<code>'symbol'</code>,<code>'login'</code>,<code>'type_deal'</code>,<br><code>'volume'</code>,<code>'volume_rem'</code>,<code>'price'</code></td>\n</tr>\n<tr>\n<td>External Deal</td>\n<td><code>'ver':'3','type':50'</code></td>\n<td><code>'exchange_id'</code>,<code>'order'</code>,<code>'symbol'</code>,<code>'login'</code>,<code>'type_deal'</code>,<br><code>'volume'</code>,<code>'volume_rem'</code>,<code>'price'</code>,<code>'datetime'</code></td>\n</tr></tbody></table>\n<h2>Support</h2>\n<ul>\n<li>Get a <a href=\"http://devcartel.com/devcartelgateway64\" rel=\"nofollow\">DevCartel MT5 Gateway</a> in order to work with PyMT5</li>\n<li>Report an issue in <a href=\"https://github.com/devcartel/pymt5/issues\" rel=\"nofollow\">issue tracker</a></li>\n</ul>\n<h2>Changelog</h2>\n<p>1.2.0</p>\n<ul>\n<li>8 July 2019</li>\n<li>Support for Python 3.7</li>\n<li>Update support links</li>\n<li>Add examples</li>\n</ul>\n<p>1.1.0</p>\n<ul>\n<li>21 April 2018</li>\n<li>Released on PyPI</li>\n<li>Added README</li>\n</ul>\n<p>1.0.0</p>\n<ul>\n<li>13 April 2018</li>\n<li>Initial release</li>\n</ul>\n\n          </div>"}, "last_serial": 5499163, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "48ebf4f734740d4d7cb7f1ecc322b57f", "sha256": "8de9ca806bebb33fd43862132c30d389c1ed9f864cc36ab6ee9d869d77b3e719"}, "downloads": -1, "filename": "pymt5-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "48ebf4f734740d4d7cb7f1ecc322b57f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5410, "upload_time": "2018-04-21T06:01:15", "upload_time_iso_8601": "2018-04-21T06:01:15.035494Z", "url": "https://files.pythonhosted.org/packages/1b/16/b092081cd6beadc9fa01400a2bbac4023a0bb593a50d5e0f66fc35256f23/pymt5-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "a2141560db6c9911c7e340e38329814b", "sha256": "3f28e1c62400b9b293f581d8df6d7375436b6bec87bbbcdf3b77739d1a64b90b"}, "downloads": -1, "filename": "pymt5-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a2141560db6c9911c7e340e38329814b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5809, "upload_time": "2019-07-08T04:37:32", "upload_time_iso_8601": "2019-07-08T04:37:32.559840Z", "url": "https://files.pythonhosted.org/packages/31/dd/fd3ec4e4c0799515e952e648f9d4861e328f469242dd74636393fa35235d/pymt5-1.2.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a2141560db6c9911c7e340e38329814b", "sha256": "3f28e1c62400b9b293f581d8df6d7375436b6bec87bbbcdf3b77739d1a64b90b"}, "downloads": -1, "filename": "pymt5-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a2141560db6c9911c7e340e38329814b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5809, "upload_time": "2019-07-08T04:37:32", "upload_time_iso_8601": "2019-07-08T04:37:32.559840Z", "url": "https://files.pythonhosted.org/packages/31/dd/fd3ec4e4c0799515e952e648f9d4861e328f469242dd74636393fa35235d/pymt5-1.2.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:01:34 2020"}