{"info": {"author": "Angel Alonso", "author_email": "alonsofonseca.angel@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3"], "description": "# paramctl\nA Python library to match positional parameters based on a json file\n\nWhen integrated properly to your script, you should be able to trigger actions like this:  \n```script.py action object extra_parameter_1 extra_parameter_n```\n\n## How does it work\nYou will need a Json file to define the accepted actions and objects  \n\nThe Json file should look like this:\n```{ \"params\": \n    {\"action1\":\n      { \"object_a\": {\n        \"help\": \"Description for what action1 does to object_a\",\n        \"action\": \"the_name_of_your_function_for_action1_on_object_a\"\n        },\n        \"object_b\": {\n        \"help\": \"Description for what action1 does to object_b\",\n        \"action\": \"the_name_of_your_function_for_action1_on_object_b\"\n        }\n      },\n     \"action2\":\n      { \"object_a\": {\n        \"help\": \"Description for what action2 does to object_a\",\n        \"action\": \"the_name_of_your_function_for_action2_on_object_a\"\n        },\n        \"object_y\": {\n        \"help\": \"Description for what action2 does to object_y\",\n        \"action\": \"the_name_of_your_function_for_action2_on_object_y\"\n        }\n      }\n  }\n}\n```\n\nOn your python code (e.g.: myscript.py) add the following:\n```\nimport paramctl\n\nparams = paramctl.ParameterMap(\"parametermap.json\")\ntry:\n    print(globals()[function[0]](function[1:]))\nexcept KeyError:\n    print(\"No function available like \" + \" \".join(function[:]))\n\n```\n, finally, create the functions defined on the Json (under \"action\") like this: \n```\ndef get_nodes(*argv):\n    ...\n```\n...and manage the arguments as you please.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/angelalonso/pctl", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "paramctl", "package_url": "https://pypi.org/project/paramctl/", "platform": "", "project_url": "https://pypi.org/project/paramctl/", "project_urls": {"Homepage": "https://github.com/angelalonso/pctl"}, "release_url": "https://pypi.org/project/paramctl/0.56/", "requires_dist": null, "requires_python": ">=3", "summary": "Manage nested parameters through a json file", "version": "0.56", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>paramctl</h1>\n<p>A Python library to match positional parameters based on a json file</p>\n<p>When integrated properly to your script, you should be able to trigger actions like this:<br>\n<code>script.py action object extra_parameter_1 extra_parameter_n</code></p>\n<h2>How does it work</h2>\n<p>You will need a Json file to define the accepted actions and objects</p>\n<p>The Json file should look like this:</p>\n<pre>    {\"action1\":\n      { \"object_a\": {\n        \"help\": \"Description for what action1 does to object_a\",\n        \"action\": \"the_name_of_your_function_for_action1_on_object_a\"\n        },\n        \"object_b\": {\n        \"help\": \"Description for what action1 does to object_b\",\n        \"action\": \"the_name_of_your_function_for_action1_on_object_b\"\n        }\n      },\n     \"action2\":\n      { \"object_a\": {\n        \"help\": \"Description for what action2 does to object_a\",\n        \"action\": \"the_name_of_your_function_for_action2_on_object_a\"\n        },\n        \"object_y\": {\n        \"help\": \"Description for what action2 does to object_y\",\n        \"action\": \"the_name_of_your_function_for_action2_on_object_y\"\n        }\n      }\n  }\n}\n</pre>\n<p>On your python code (e.g.: myscript.py) add the following:</p>\n<pre><code>import paramctl\n\nparams = paramctl.ParameterMap(\"parametermap.json\")\ntry:\n    print(globals()[function[0]](function[1:]))\nexcept KeyError:\n    print(\"No function available like \" + \" \".join(function[:]))\n\n</code></pre>\n<p>, finally, create the functions defined on the Json (under \"action\") like this:</p>\n<pre><code>def get_nodes(*argv):\n    ...\n</code></pre>\n<p>...and manage the arguments as you please.</p>\n\n          </div>"}, "last_serial": 5666677, "releases": {"0.54": [{"comment_text": "", "digests": {"md5": "f041343fe16371c00a0aded3f5cbfc71", "sha256": "7da8053dbbffa36f1c2c3ce31e47967ab11ff52d8ef421f92777e0788909522d"}, "downloads": -1, "filename": "paramctl-0.54-py3-none-any.whl", "has_sig": false, "md5_digest": "f041343fe16371c00a0aded3f5cbfc71", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 4425, "upload_time": "2019-08-11T10:55:06", "upload_time_iso_8601": "2019-08-11T10:55:06.924095Z", "url": "https://files.pythonhosted.org/packages/cc/20/965f6a30f8f3655e94632ed636099120f3ea51c114ed06e6d42c25048681/paramctl-0.54-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75094ef48a8db8933ced24ce58835b26", "sha256": "fb9fa86aa7056565ddc7c57f1a18ca1e1c7c1a55eea050c8509804f4997d76e2"}, "downloads": -1, "filename": "paramctl-0.54.tar.gz", "has_sig": false, "md5_digest": "75094ef48a8db8933ced24ce58835b26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 2108, "upload_time": "2019-08-11T10:55:08", "upload_time_iso_8601": "2019-08-11T10:55:08.583030Z", "url": "https://files.pythonhosted.org/packages/b5/5b/8d808ee4105f6ab9459d63af7d23022ccbbbc58491e729ac45f3c8f34036/paramctl-0.54.tar.gz", "yanked": false}], "0.55": [{"comment_text": "", "digests": {"md5": "4fae4ac723ebc0ceff69672d46a933d6", "sha256": "be1b248ce2b5f96140b4a1fada0fdd7e121809bc426be6ee5956e4148b1330d0"}, "downloads": -1, "filename": "paramctl-0.55-py3-none-any.whl", "has_sig": false, "md5_digest": "4fae4ac723ebc0ceff69672d46a933d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 3472, "upload_time": "2019-08-11T13:15:25", "upload_time_iso_8601": "2019-08-11T13:15:25.949152Z", "url": "https://files.pythonhosted.org/packages/7d/fa/f7ce3d3c45b28a4a5ee817918cad59a6cf8165c902a48048452c80f0cc0c/paramctl-0.55-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c13a0ae7da61e2477a81af4bc44c223", "sha256": "0ba02561189d1c0f52e63c38e2ac65aeeab54de9b30e2fdde156afd5cc4d88cb"}, "downloads": -1, "filename": "paramctl-0.55.tar.gz", "has_sig": false, "md5_digest": "6c13a0ae7da61e2477a81af4bc44c223", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 2099, "upload_time": "2019-08-11T13:15:27", "upload_time_iso_8601": "2019-08-11T13:15:27.469877Z", "url": "https://files.pythonhosted.org/packages/c4/03/cb51b90b7606afa9ec5d14d9b149878482fecbf51b1a7cfd265137324dd6/paramctl-0.55.tar.gz", "yanked": false}], "0.56": [{"comment_text": "", "digests": {"md5": "565bfc4c48a12ec46ade7171854f9216", "sha256": "76e98885e8a948b3147a77ee93d97bc92f061650c3b4f9eea092eac42269c453"}, "downloads": -1, "filename": "paramctl-0.56.tar.gz", "has_sig": false, "md5_digest": "565bfc4c48a12ec46ade7171854f9216", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 2810, "upload_time": "2019-08-12T14:17:30", "upload_time_iso_8601": "2019-08-12T14:17:30.517239Z", "url": "https://files.pythonhosted.org/packages/c5/89/0e22eb934bcad12d1b1e16fe5e3a7a5817a7f57dcb7c4afcbb9f68211970/paramctl-0.56.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "565bfc4c48a12ec46ade7171854f9216", "sha256": "76e98885e8a948b3147a77ee93d97bc92f061650c3b4f9eea092eac42269c453"}, "downloads": -1, "filename": "paramctl-0.56.tar.gz", "has_sig": false, "md5_digest": "565bfc4c48a12ec46ade7171854f9216", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 2810, "upload_time": "2019-08-12T14:17:30", "upload_time_iso_8601": "2019-08-12T14:17:30.517239Z", "url": "https://files.pythonhosted.org/packages/c5/89/0e22eb934bcad12d1b1e16fe5e3a7a5817a7f57dcb7c4afcbb9f68211970/paramctl-0.56.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:35 2020"}