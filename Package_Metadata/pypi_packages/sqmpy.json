{"info": {"author": "Mehdi Sadeghi", "author_email": "sade@iwm.fraunhofer.de", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "====================\nSimple Queue Manager\n====================\n\nsqmpy stands for simple queue manager written in python and is a web application which is based on Flask miroframework\nand SAGA-Python distributed computing access layer.\nSqmpy lets user to submit simple python or shell scripts on remote machines. Then user can monitor the running job in\njob detail page. The notification system will send emails after status changes to the user. Moreover sqmpy lets user\nto have a history of previous jobs and all files related to those jobs.\n\nDependencies\n------------\nSqmpy has a few dependencies which will be installed while installing with *python setup* or *pip*:\n\n- SAGA-python\n- Flask\n- Flask-SQLAlchemy\n- Flask-Login\n- Flask-WTF\n- Flask-Admin\n- Flask-CSRF\n- enum34\n- py-bcrypt\n\nInstallation\n------------\nI suggest to install a virtaul environment to try sqmpy or if you want to run it on your local machine. If you have\nvirtual-env installed then:\n\n::\n\n    $ virtual-env --no-site-packages sqmpy-env\n    $ . sqmpy-env/bin/activate\n    \nIf you don't have virutal-env on your machine then try to download it. **Please be aware that this is outdated\nsince new versions of virtualenv do not download and install pip and setuptools for security reasons**:\n\n::\n\n    $ wget https://raw.githubusercontent.com/pypa/virtualenv/1.9.X/virtualenv.py\n    $ python virtualenv.py --no-site-packages sqmpy-env\n    $ . sqmpy-env/bin/activate\n    \nTo install sqmpy from pypi:\n\n::\n\n    $ pip install sqmpy\n    \nTo install from git:\n\n::\n\n    $ git clone git://github.com/mehdix/simple-queue-manager.git\n    $ cd simple-queue-manager\n    $ python setup install\n    \nConfiguration\n-------------\nThere are a few settings which sqmpy can read from a configuration file. There is a *default_config* python module\nin sqmpy package that contains default configuration values. The same configurations can be read from a user defined\nconfig file via **SQMPY_CONFIG** environment variable:\n\n::\n\n    $ export SQMPY_CONFIG = /path/to/config/file/config.py\n    $ python run.py\n\nRun With No Configuration\n-------------------------\nIn this case sqmpy will user in-memory sqlite db, logging to stdout, and a temp folder for staging files. State\nwill lost after restarting the application.\n\nUsing Sqmpy\n-----------\nSqmpy is a flask web application therefor it runs like any other flask applications. Put the following code in\napython file called run.py and run it:\n\n::\n\n    from sqmpy import app\n    app.run('0.0.0.0', port=5001, debug=True)\n    \nAbout Files and Folders, Local or Remote\n----------------------------------------\nSqmpy will create a *sqmpy.log* and *sqmpy.db* and a staging folder called *staging*. The path to these files are\nbeing read from config values: ``LOG_FILE``, ``SQLALCHEMY_DATABASE_URI`` and ``STAGING_FOLDER``.\nStaginf folder will contain uploaded files and script files created by sqmpy. Moreover on remote machiens\nSqmpy will create another folder called *sqmpy* in user home directory and will upload files there before \nrunning tasks. For each job one folder will be created and will be set as job working directory. This folder\nwill contain input and output files as well as script file and any other files being produced or consumed by\nthe remote job.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mehdix/simple-queue-manager", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "sqmpy", "package_url": "https://pypi.org/project/sqmpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/sqmpy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/mehdix/simple-queue-manager"}, "release_url": "https://pypi.org/project/sqmpy/v1.0.0-alpha.3/", "requires_dist": null, "requires_python": null, "summary": "Simple Queue Manager, also sqmpy, is a web interface for submitting jobs to HPC resources.", "version": "v1.0.0-alpha.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>sqmpy stands for simple queue manager written in python and is a web application which is based on Flask miroframework\nand SAGA-Python distributed computing access layer.\nSqmpy lets user to submit simple python or shell scripts on remote machines. Then user can monitor the running job in\njob detail page. The notification system will send emails after status changes to the user. Moreover sqmpy lets user\nto have a history of previous jobs and all files related to those jobs.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>Sqmpy has a few dependencies which will be installed while installing with <em>python setup</em> or <em>pip</em>:</p>\n<ul>\n<li>SAGA-python</li>\n<li>Flask</li>\n<li>Flask-SQLAlchemy</li>\n<li>Flask-Login</li>\n<li>Flask-WTF</li>\n<li>Flask-Admin</li>\n<li>Flask-CSRF</li>\n<li>enum34</li>\n<li>py-bcrypt</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>I suggest to install a virtaul environment to try sqmpy or if you want to run it on your local machine. If you have\nvirtual-env installed then:</p>\n<pre>$ virtual-env --no-site-packages sqmpy-env\n$ . sqmpy-env/bin/activate\n</pre>\n<p>If you don\u2019t have virutal-env on your machine then try to download it. <strong>Please be aware that this is outdated\nsince new versions of virtualenv do not download and install pip and setuptools for security reasons</strong>:</p>\n<pre>$ wget https://raw.githubusercontent.com/pypa/virtualenv/1.9.X/virtualenv.py\n$ python virtualenv.py --no-site-packages sqmpy-env\n$ . sqmpy-env/bin/activate\n</pre>\n<p>To install sqmpy from pypi:</p>\n<pre>$ pip install sqmpy\n</pre>\n<p>To install from git:</p>\n<pre>$ git clone git://github.com/mehdix/simple-queue-manager.git\n$ cd simple-queue-manager\n$ python setup install\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>There are a few settings which sqmpy can read from a configuration file. There is a <em>default_config</em> python module\nin sqmpy package that contains default configuration values. The same configurations can be read from a user defined\nconfig file via <strong>SQMPY_CONFIG</strong> environment variable:</p>\n<pre>$ export SQMPY_CONFIG = /path/to/config/file/config.py\n$ python run.py\n</pre>\n</div>\n<div id=\"run-with-no-configuration\">\n<h2>Run With No Configuration</h2>\n<p>In this case sqmpy will user in-memory sqlite db, logging to stdout, and a temp folder for staging files. State\nwill lost after restarting the application.</p>\n</div>\n<div id=\"using-sqmpy\">\n<h2>Using Sqmpy</h2>\n<p>Sqmpy is a flask web application therefor it runs like any other flask applications. Put the following code in\napython file called run.py and run it:</p>\n<pre>from sqmpy import app\napp.run('0.0.0.0', port=5001, debug=True)\n</pre>\n</div>\n<div id=\"about-files-and-folders-local-or-remote\">\n<h2>About Files and Folders, Local or Remote</h2>\n<p>Sqmpy will create a <em>sqmpy.log</em> and <em>sqmpy.db</em> and a staging folder called <em>staging</em>. The path to these files are\nbeing read from config values: <tt>LOG_FILE</tt>, <tt>SQLALCHEMY_DATABASE_URI</tt> and <tt>STAGING_FOLDER</tt>.\nStaginf folder will contain uploaded files and script files created by sqmpy. Moreover on remote machiens\nSqmpy will create another folder called <em>sqmpy</em> in user home directory and will upload files there before\nrunning tasks. For each job one folder will be created and will be set as job working directory. This folder\nwill contain input and output files as well as script file and any other files being produced or consumed by\nthe remote job.</p>\n</div>\n\n          </div>"}, "last_serial": 1175547, "releases": {"v1.0.0-alpha.3": [{"comment_text": "", "digests": {"md5": "2888f2c95489acfd18391f4007a144f6", "sha256": "812ee566166a2e036c15baf7d6a901a300f61086a6dba4f4596cf49e0bd775b2"}, "downloads": -1, "filename": "sqmpy-v1.0.0-alpha.3.tar.gz", "has_sig": false, "md5_digest": "2888f2c95489acfd18391f4007a144f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 238911, "upload_time": "2014-07-31T13:47:18", "upload_time_iso_8601": "2014-07-31T13:47:18.512083Z", "url": "https://files.pythonhosted.org/packages/6e/8c/eae29bf19402a7e3912c1aff9fb8410bb8869b84a2de64d902ea63421ff7/sqmpy-v1.0.0-alpha.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2888f2c95489acfd18391f4007a144f6", "sha256": "812ee566166a2e036c15baf7d6a901a300f61086a6dba4f4596cf49e0bd775b2"}, "downloads": -1, "filename": "sqmpy-v1.0.0-alpha.3.tar.gz", "has_sig": false, "md5_digest": "2888f2c95489acfd18391f4007a144f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 238911, "upload_time": "2014-07-31T13:47:18", "upload_time_iso_8601": "2014-07-31T13:47:18.512083Z", "url": "https://files.pythonhosted.org/packages/6e/8c/eae29bf19402a7e3912c1aff9fb8410bb8869b84a2de64d902ea63421ff7/sqmpy-v1.0.0-alpha.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:31 2020"}