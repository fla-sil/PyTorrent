{"info": {"author": "Thamme Gowda", "author_email": "tgowdan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3 :: Only", "Topic :: Text Processing", "Topic :: Text Processing :: Filters", "Topic :: Text Processing :: General", "Topic :: Text Processing :: Linguistic", "Topic :: Utilities"], "description": "# MTData\nMTData tool is written to reduce the burden of preparing the datasets for machine translation.\nIt provides commandline and python APIs that can be either used as a standalone tool, \nor call it from shell scripts or embed it in python application for preparing MT experiments.\n\nWith this you DON'T have to :\n- Know where the URLs are for data sets: WMT tests and devs for \\[2014, 2015, ... 2020], Paracrawl, \n  Europarl, News Commentary, WikiTitles ...\n- Know how to extract files : .tar, .tar.gz, .tgz, .zip, .gz, ...\n- Know how to parse .tmx, .sgm, .tsv\n- Know if parallel data is in one .tsv file or two sgm files \n- (And more over the time. Create an issue discuss more of such \"you dont have to\" topics)\n\nbecause, [MTData](https://github.com/thammegowda/mtdata) does all the above under the hood.\n\n## Installation\n```bash\n# coming soon to pypi\n# pip install mtdata \n\ngit clone https://github.com/thammegowda/mtdata \ncd mtdata\npip install .  # add \"--editable\" flag for development mode \n\n\n```\n\n## CLI Usage\n- After pip installation, the CLI can be called using `mtdata` command  or `python -m mtdata`\n- There are two sub commands: `list` for listing the datasets, and `get` for getting them   \n### `mtdata list`\n```bash\nmtdata list -h\nusage: mtdata list [-h] [-l LANGS] [-n [NAMES [NAMES ...]]]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LANGS, --langs LANGS\n                        Language pairs; e.g.: de-en\n  -n [NAMES [NAMES ...]], --names [NAMES [NAMES ...]]\n                        Name of dataset set; eg europarl_v9.\n``` \n\n```bash\n# List everything\nmtdata list\n\n# List a lang pair \nmtdata list -l de-en\n\n# List a dataset by name(s)\nmtdata list -n europarl_v9\nmtdata list -n europarl_v9 news_commentary_v14\n\n# list by both language pair and dataset name\nmtdata list -l de-en -n europarl_v9 news_commentary_v14 newstest201{4,5,6,7,8,9}_deen\n```\n\n## `mtdata get`\n```bash\nmtdata get -h\nusage: mtdata get [-h] -l LANGS [-n [NAMES [NAMES ...]]] -o OUT\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -l LANGS, --langs LANGS\n                        Language pairs; e.g.: de-en\n  -n [NAMES [NAMES ...]], --names [NAMES [NAMES ...]]\n                        Name of dataset set; eg europarl_v9.\n  -o OUT, --out OUT     Output directory name\n```\nHere is an example showing collection and preparation of DE-EN datasets. \n```bash\nmtdata get  -l de-en -n europarl_v9 news_commentary_v14 newstest201{4,5,6,7,8,9}_deen -o de-en\n```\n\n## How to extend:\nPlease help grow the datasets by adding missing+new datasets to `index.py` module.\nHere is an example listing europarl-v9 corpus.\n```python\nfrom mtdata.index import entries, Entry\nEUROPARL_v9 = 'http://www.statmt.org/europarl/v9/training/europarl-v9.%s-%s.tsv.gz'\nfor pair in ['de en', 'cs en', 'cs pl', 'es pt', 'fi en', 'lt en']:\n    l1, l2 = pair.split()\n    entries.append(Entry(langs=(l1, l2), name='europarl_v9', url=EUROPARL_v9 % (l1, l2)))\n```\nIf a datset is inside an archive such as `zip` or `tar`\n```python\nfrom mtdata.index import entries, Entry\nwmt_sets = {\n    'newstest2014': [('de', 'en'), ('cs', 'en'), ('fr', 'en'), ('ru', 'en'), ('hi', 'en')],\n    'newsdev2015': [('fi', 'en'), ('en', 'fi')]\n}\nfor set_name, pairs in wmt_sets.items():\n    for l1, l2 in pairs:\n        src = f'dev/{set_name}-{l1}{l2}-src.{l1}.sgm'\n        ref = f'dev/{set_name}-{l1}{l2}-ref.{l2}.sgm'\n        name = f'{set_name}_{l1}{l2}'\n        entries.append(Entry((l1, l2), name=name, filename='wmt20dev.tgz', in_paths=[src, ref],\n                             url='http://data.statmt.org/wmt20/translation-task/dev.tgz'))\n# filename='wmt20dev.tgz' -- is manually set, because url has dev.gz that can be confusing\n# in_paths=[src, ref]  -- listing two sgm files inside the tarball\n```\n\n## Developers:\n- [Thamme Gowda](https://twitter.com/thammegowda) \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/thammegowda/mtdata", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thammegowda/mtdata", "keywords": "machine translation,datasets,NLP,natural language processing,computational linguistics", "license": "University of Southern California (USC) Restricted License", "maintainer": "", "maintainer_email": "", "name": "mtdata", "package_url": "https://pypi.org/project/mtdata/", "platform": "any", "project_url": "https://pypi.org/project/mtdata/", "project_urls": {"Download": "https://github.com/thammegowda/mtdata", "Homepage": "https://github.com/thammegowda/mtdata"}, "release_url": "https://pypi.org/project/mtdata/0.1/", "requires_dist": ["wget"], "requires_python": ">=3.7", "summary": "mtdata is a tool to download datasets for machine translation", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MTData</h1>\n<p>MTData tool is written to reduce the burden of preparing the datasets for machine translation.\nIt provides commandline and python APIs that can be either used as a standalone tool,\nor call it from shell scripts or embed it in python application for preparing MT experiments.</p>\n<p>With this you DON'T have to :</p>\n<ul>\n<li>Know where the URLs are for data sets: WMT tests and devs for [2014, 2015, ... 2020], Paracrawl,\nEuroparl, News Commentary, WikiTitles ...</li>\n<li>Know how to extract files : .tar, .tar.gz, .tgz, .zip, .gz, ...</li>\n<li>Know how to parse .tmx, .sgm, .tsv</li>\n<li>Know if parallel data is in one .tsv file or two sgm files</li>\n<li>(And more over the time. Create an issue discuss more of such \"you dont have to\" topics)</li>\n</ul>\n<p>because, <a href=\"https://github.com/thammegowda/mtdata\" rel=\"nofollow\">MTData</a> does all the above under the hood.</p>\n<h2>Installation</h2>\n<pre><span class=\"c1\"># coming soon to pypi</span>\n<span class=\"c1\"># pip install mtdata </span>\n\ngit clone https://github.com/thammegowda/mtdata \n<span class=\"nb\">cd</span> mtdata\npip install .  <span class=\"c1\"># add \"--editable\" flag for development mode </span>\n</pre>\n<h2>CLI Usage</h2>\n<ul>\n<li>After pip installation, the CLI can be called using <code>mtdata</code> command  or <code>python -m mtdata</code></li>\n<li>There are two sub commands: <code>list</code> for listing the datasets, and <code>get</code> for getting them</li>\n</ul>\n<h3><code>mtdata list</code></h3>\n<pre>mtdata list -h\nusage: mtdata list <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-l LANGS<span class=\"o\">]</span> <span class=\"o\">[</span>-n <span class=\"o\">[</span>NAMES <span class=\"o\">[</span>NAMES ...<span class=\"o\">]]]</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -l LANGS, --langs LANGS\n                        Language pairs<span class=\"p\">;</span> e.g.: de-en\n  -n <span class=\"o\">[</span>NAMES <span class=\"o\">[</span>NAMES ...<span class=\"o\">]]</span>, --names <span class=\"o\">[</span>NAMES <span class=\"o\">[</span>NAMES ...<span class=\"o\">]]</span>\n                        Name of dataset set<span class=\"p\">;</span> eg europarl_v9.\n</pre>\n<pre><span class=\"c1\"># List everything</span>\nmtdata list\n\n<span class=\"c1\"># List a lang pair </span>\nmtdata list -l de-en\n\n<span class=\"c1\"># List a dataset by name(s)</span>\nmtdata list -n europarl_v9\nmtdata list -n europarl_v9 news_commentary_v14\n\n<span class=\"c1\"># list by both language pair and dataset name</span>\nmtdata list -l de-en -n europarl_v9 news_commentary_v14 newstest201<span class=\"o\">{</span><span class=\"m\">4</span>,5,6,7,8,9<span class=\"o\">}</span>_deen\n</pre>\n<h2><code>mtdata get</code></h2>\n<pre>mtdata get -h\nusage: mtdata get <span class=\"o\">[</span>-h<span class=\"o\">]</span> -l LANGS <span class=\"o\">[</span>-n <span class=\"o\">[</span>NAMES <span class=\"o\">[</span>NAMES ...<span class=\"o\">]]]</span> -o OUT\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -l LANGS, --langs LANGS\n                        Language pairs<span class=\"p\">;</span> e.g.: de-en\n  -n <span class=\"o\">[</span>NAMES <span class=\"o\">[</span>NAMES ...<span class=\"o\">]]</span>, --names <span class=\"o\">[</span>NAMES <span class=\"o\">[</span>NAMES ...<span class=\"o\">]]</span>\n                        Name of dataset set<span class=\"p\">;</span> eg europarl_v9.\n  -o OUT, --out OUT     Output directory name\n</pre>\n<p>Here is an example showing collection and preparation of DE-EN datasets.</p>\n<pre>mtdata get  -l de-en -n europarl_v9 news_commentary_v14 newstest201<span class=\"o\">{</span><span class=\"m\">4</span>,5,6,7,8,9<span class=\"o\">}</span>_deen -o de-en\n</pre>\n<h2>How to extend:</h2>\n<p>Please help grow the datasets by adding missing+new datasets to <code>index.py</code> module.\nHere is an example listing europarl-v9 corpus.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mtdata.index</span> <span class=\"kn\">import</span> <span class=\"n\">entries</span><span class=\"p\">,</span> <span class=\"n\">Entry</span>\n<span class=\"n\">EUROPARL_v9</span> <span class=\"o\">=</span> <span class=\"s1\">'http://www.statmt.org/europarl/v9/training/europarl-v9.</span><span class=\"si\">%s</span><span class=\"s1\">-</span><span class=\"si\">%s</span><span class=\"s1\">.tsv.gz'</span>\n<span class=\"k\">for</span> <span class=\"n\">pair</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">'de en'</span><span class=\"p\">,</span> <span class=\"s1\">'cs en'</span><span class=\"p\">,</span> <span class=\"s1\">'cs pl'</span><span class=\"p\">,</span> <span class=\"s1\">'es pt'</span><span class=\"p\">,</span> <span class=\"s1\">'fi en'</span><span class=\"p\">,</span> <span class=\"s1\">'lt en'</span><span class=\"p\">]:</span>\n    <span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">l2</span> <span class=\"o\">=</span> <span class=\"n\">pair</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n    <span class=\"n\">entries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Entry</span><span class=\"p\">(</span><span class=\"n\">langs</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">l2</span><span class=\"p\">),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'europarl_v9'</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">EUROPARL_v9</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">l2</span><span class=\"p\">)))</span>\n</pre>\n<p>If a datset is inside an archive such as <code>zip</code> or <code>tar</code></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mtdata.index</span> <span class=\"kn\">import</span> <span class=\"n\">entries</span><span class=\"p\">,</span> <span class=\"n\">Entry</span>\n<span class=\"n\">wmt_sets</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'newstest2014'</span><span class=\"p\">:</span> <span class=\"p\">[(</span><span class=\"s1\">'de'</span><span class=\"p\">,</span> <span class=\"s1\">'en'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'cs'</span><span class=\"p\">,</span> <span class=\"s1\">'en'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'fr'</span><span class=\"p\">,</span> <span class=\"s1\">'en'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'ru'</span><span class=\"p\">,</span> <span class=\"s1\">'en'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'hi'</span><span class=\"p\">,</span> <span class=\"s1\">'en'</span><span class=\"p\">)],</span>\n    <span class=\"s1\">'newsdev2015'</span><span class=\"p\">:</span> <span class=\"p\">[(</span><span class=\"s1\">'fi'</span><span class=\"p\">,</span> <span class=\"s1\">'en'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'en'</span><span class=\"p\">,</span> <span class=\"s1\">'fi'</span><span class=\"p\">)]</span>\n<span class=\"p\">}</span>\n<span class=\"k\">for</span> <span class=\"n\">set_name</span><span class=\"p\">,</span> <span class=\"n\">pairs</span> <span class=\"ow\">in</span> <span class=\"n\">wmt_sets</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n    <span class=\"k\">for</span> <span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">l2</span> <span class=\"ow\">in</span> <span class=\"n\">pairs</span><span class=\"p\">:</span>\n        <span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">'dev/</span><span class=\"si\">{</span><span class=\"n\">set_name</span><span class=\"si\">}</span><span class=\"s1\">-</span><span class=\"si\">{</span><span class=\"n\">l1</span><span class=\"si\">}{</span><span class=\"n\">l2</span><span class=\"si\">}</span><span class=\"s1\">-src.</span><span class=\"si\">{</span><span class=\"n\">l1</span><span class=\"si\">}</span><span class=\"s1\">.sgm'</span>\n        <span class=\"n\">ref</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">'dev/</span><span class=\"si\">{</span><span class=\"n\">set_name</span><span class=\"si\">}</span><span class=\"s1\">-</span><span class=\"si\">{</span><span class=\"n\">l1</span><span class=\"si\">}{</span><span class=\"n\">l2</span><span class=\"si\">}</span><span class=\"s1\">-ref.</span><span class=\"si\">{</span><span class=\"n\">l2</span><span class=\"si\">}</span><span class=\"s1\">.sgm'</span>\n        <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">set_name</span><span class=\"si\">}</span><span class=\"s1\">_</span><span class=\"si\">{</span><span class=\"n\">l1</span><span class=\"si\">}{</span><span class=\"n\">l2</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n        <span class=\"n\">entries</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Entry</span><span class=\"p\">((</span><span class=\"n\">l1</span><span class=\"p\">,</span> <span class=\"n\">l2</span><span class=\"p\">),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'wmt20dev.tgz'</span><span class=\"p\">,</span> <span class=\"n\">in_paths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">ref</span><span class=\"p\">],</span>\n                             <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'http://data.statmt.org/wmt20/translation-task/dev.tgz'</span><span class=\"p\">))</span>\n<span class=\"c1\"># filename='wmt20dev.tgz' -- is manually set, because url has dev.gz that can be confusing</span>\n<span class=\"c1\"># in_paths=[src, ref]  -- listing two sgm files inside the tarball</span>\n</pre>\n<h2>Developers:</h2>\n<ul>\n<li><a href=\"https://twitter.com/thammegowda\" rel=\"nofollow\">Thamme Gowda</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6959901, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "87fba2db26994a93890bdc6e62e9e115", "sha256": "0e0eef2f2627eedd29e7ca38010670f0a51f9355de46720fab0931498957ce09"}, "downloads": -1, "filename": "mtdata-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "87fba2db26994a93890bdc6e62e9e115", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 17858, "upload_time": "2020-04-06T08:01:37", "upload_time_iso_8601": "2020-04-06T08:01:37.068632Z", "url": "https://files.pythonhosted.org/packages/69/b3/fa0338849183beb610e0b9fda98f7c0974a4bb01bd9684b2fd858322d3c3/mtdata-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f93911d75927b507507a38c68e1d9fd", "sha256": "4530d954305ffe24e8ede4409421da4dfa1f006fe1b2980777d0826a456e2ee2"}, "downloads": -1, "filename": "mtdata-0.1.tar.gz", "has_sig": false, "md5_digest": "9f93911d75927b507507a38c68e1d9fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11768, "upload_time": "2020-04-06T08:01:39", "upload_time_iso_8601": "2020-04-06T08:01:39.517153Z", "url": "https://files.pythonhosted.org/packages/8d/5b/6f3bed524faaa9992fd7820eabfcfb0a38df83e4db527308d706d9218786/mtdata-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87fba2db26994a93890bdc6e62e9e115", "sha256": "0e0eef2f2627eedd29e7ca38010670f0a51f9355de46720fab0931498957ce09"}, "downloads": -1, "filename": "mtdata-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "87fba2db26994a93890bdc6e62e9e115", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 17858, "upload_time": "2020-04-06T08:01:37", "upload_time_iso_8601": "2020-04-06T08:01:37.068632Z", "url": "https://files.pythonhosted.org/packages/69/b3/fa0338849183beb610e0b9fda98f7c0974a4bb01bd9684b2fd858322d3c3/mtdata-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f93911d75927b507507a38c68e1d9fd", "sha256": "4530d954305ffe24e8ede4409421da4dfa1f006fe1b2980777d0826a456e2ee2"}, "downloads": -1, "filename": "mtdata-0.1.tar.gz", "has_sig": false, "md5_digest": "9f93911d75927b507507a38c68e1d9fd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11768, "upload_time": "2020-04-06T08:01:39", "upload_time_iso_8601": "2020-04-06T08:01:39.517153Z", "url": "https://files.pythonhosted.org/packages/8d/5b/6f3bed524faaa9992fd7820eabfcfb0a38df83e4db527308d706d9218786/mtdata-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:43 2020"}