{"info": {"author": "Emanuele Palazzetti", "author_email": "hello@palazzetti.me", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Elmo\n\n[![CircleCI](https://circleci.com/gh/palazzem/elmo-alerting/tree/master.svg?style=svg)](https://circleci.com/gh/palazzem/elmo-alerting/tree/master)\n[![codecov](https://codecov.io/gh/palazzem/elmo-alerting/branch/master/graph/badge.svg)](https://codecov.io/gh/palazzem/elmo-alerting)\n\nElmo is an API adapter used to control programmatically an Elmo alarm system.\nThrough a generic configuration, the client allows:\n\n* Retrieving access tokens to make API calls\n* Obtaining/releasing the system `Lock()` to have exclusive control of the system\n* Arm/disarm all the alarms registered in the system\n\nThis project is a **Work in Progress** and the following functionalities are part\nof the roadmap:\n\n* Retrieve alarm status (armed/disarmed) via read-only API\n* Arm/disarm a single alarm or a subset\n* REST stateless API on top of the `ElmoClient` to expose these functionalities\n  via [Google Cloud Functions](https://cloud.google.com/functions/)\n\n## Requirements\n\n* Python 3.5+\n* `requests`\n\n## Getting Started\n\nElmo is not available on PyPI so installation from this repository is required:\n\n```bash\n$ pip install git+https://github.com/palazzem/elmo-alerting.git\n```\n\n### Arm/disarm the System\n\n```python\nfrom elmo.api.client import ElmoClient\n\n# Initialize the client with an API endpoint and a vendor and\n# authenticate your connection to retrieve the access token\nclient = ElmoClient(\"https://example.com\", \"vendor\")\nclient.auth(\"username\", \"password\")\n\n# To arm/disarm the system you must gain the exclusive Lock()\nwith client.lock(\"secret-code\") as c:\n    c.arm()     # Arms all alarms\n    c.disarm()  # Disarms all alarms\n```\n\nThe access token is valid for 10 minutes after that you need to authenticate again to\nrefresh the token. Obtaining the lock via `client.lock(\"code\")` is mandatory to arm or\ndisarm the alert, otherwise the API returns `403`.\n\nOnce the lock is obtained, other clients cannot connect to the alarm system and only a\nmanual override on the terminal is allowed. Outside the context manager, the lock is\nautomatically released.\n\n## Development\n\nWe accept external contributions even though the project is mostly designed for personal\nneeds. If you think some parts can be exposed with a more generic interface, feel free\nto open a GitHub issue and to discuss your suggestion.\n\n### Coding Guidelines\n\nWe use [flake8][1] as a style guide enforcement. Said that, we also use [black][2] to\nreformat our code, keeping a well defined style even for quotes, multi-lines blocks and other.\nBefore submitting your code, be sure to launch `black` to reformat your PR.\n\n[1]: https://pypi.org/project/flake8/\n[2]: https://github.com/ambv/black\n\n### Testing\n\n`tox` is used to execute the following test matrix:\n* `lint`: launches `flake8` and `black --check` to be sure the code honors our style guideline\n* `py{35,36,37}`: launches `py.test` to execute all tests under Python 3.5, 3.6 and 3.7.\n\nTo launch the full test matrix, just:\n\n```bash\n$ tox\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/palazzem/elmo-alerting", "keywords": "", "license": "BSD 3-Clause", "maintainer": "", "maintainer_email": "", "name": "elmo", "package_url": "https://pypi.org/project/elmo/", "platform": "", "project_url": "https://pypi.org/project/elmo/", "project_urls": {"Homepage": "https://github.com/palazzem/elmo-alerting"}, "release_url": "https://pypi.org/project/elmo/0.1.2/", "requires_dist": null, "requires_python": ">=3.5.0", "summary": "API adapter used to control programmatically an Elmo alarm system.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Elmo</h1>\n<p><a href=\"https://circleci.com/gh/palazzem/elmo-alerting/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d6b546c1ab55c48d592c9050520b3672be008af/68747470733a2f2f636972636c6563692e636f6d2f67682f70616c617a7a656d2f656c6d6f2d616c657274696e672f747265652f6d61737465722e7376673f7374796c653d737667\"></a>\n<a href=\"https://codecov.io/gh/palazzem/elmo-alerting\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba38ae55101f498a4eb61306f44ae081f1388fe5/68747470733a2f2f636f6465636f762e696f2f67682f70616c617a7a656d2f656c6d6f2d616c657274696e672f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>Elmo is an API adapter used to control programmatically an Elmo alarm system.\nThrough a generic configuration, the client allows:</p>\n<ul>\n<li>Retrieving access tokens to make API calls</li>\n<li>Obtaining/releasing the system <code>Lock()</code> to have exclusive control of the system</li>\n<li>Arm/disarm all the alarms registered in the system</li>\n</ul>\n<p>This project is a <strong>Work in Progress</strong> and the following functionalities are part\nof the roadmap:</p>\n<ul>\n<li>Retrieve alarm status (armed/disarmed) via read-only API</li>\n<li>Arm/disarm a single alarm or a subset</li>\n<li>REST stateless API on top of the <code>ElmoClient</code> to expose these functionalities\nvia <a href=\"https://cloud.google.com/functions/\" rel=\"nofollow\">Google Cloud Functions</a></li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.5+</li>\n<li><code>requests</code></li>\n</ul>\n<h2>Getting Started</h2>\n<p>Elmo is not available on PyPI so installation from this repository is required:</p>\n<pre>$ pip install git+https://github.com/palazzem/elmo-alerting.git\n</pre>\n<h3>Arm/disarm the System</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">elmo.api.client</span> <span class=\"kn\">import</span> <span class=\"n\">ElmoClient</span>\n\n<span class=\"c1\"># Initialize the client with an API endpoint and a vendor and</span>\n<span class=\"c1\"># authenticate your connection to retrieve the access token</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">ElmoClient</span><span class=\"p\">(</span><span class=\"s2\">\"https://example.com\"</span><span class=\"p\">,</span> <span class=\"s2\">\"vendor\"</span><span class=\"p\">)</span>\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"p\">(</span><span class=\"s2\">\"username\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># To arm/disarm the system you must gain the exclusive Lock()</span>\n<span class=\"k\">with</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">lock</span><span class=\"p\">(</span><span class=\"s2\">\"secret-code\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">c</span><span class=\"p\">:</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">arm</span><span class=\"p\">()</span>     <span class=\"c1\"># Arms all alarms</span>\n    <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">disarm</span><span class=\"p\">()</span>  <span class=\"c1\"># Disarms all alarms</span>\n</pre>\n<p>The access token is valid for 10 minutes after that you need to authenticate again to\nrefresh the token. Obtaining the lock via <code>client.lock(\"code\")</code> is mandatory to arm or\ndisarm the alert, otherwise the API returns <code>403</code>.</p>\n<p>Once the lock is obtained, other clients cannot connect to the alarm system and only a\nmanual override on the terminal is allowed. Outside the context manager, the lock is\nautomatically released.</p>\n<h2>Development</h2>\n<p>We accept external contributions even though the project is mostly designed for personal\nneeds. If you think some parts can be exposed with a more generic interface, feel free\nto open a GitHub issue and to discuss your suggestion.</p>\n<h3>Coding Guidelines</h3>\n<p>We use <a href=\"https://pypi.org/project/flake8/\" rel=\"nofollow\">flake8</a> as a style guide enforcement. Said that, we also use <a href=\"https://github.com/ambv/black\" rel=\"nofollow\">black</a> to\nreformat our code, keeping a well defined style even for quotes, multi-lines blocks and other.\nBefore submitting your code, be sure to launch <code>black</code> to reformat your PR.</p>\n<h3>Testing</h3>\n<p><code>tox</code> is used to execute the following test matrix:</p>\n<ul>\n<li><code>lint</code>: launches <code>flake8</code> and <code>black --check</code> to be sure the code honors our style guideline</li>\n<li><code>py{35,36,37}</code>: launches <code>py.test</code> to execute all tests under Python 3.5, 3.6 and 3.7.</li>\n</ul>\n<p>To launch the full test matrix, just:</p>\n<pre>$ tox\n</pre>\n\n          </div>"}, "last_serial": 6639687, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e10c6aa70ab95e6469f82417ff425cbc", "sha256": "df5bdbb7a983b363c4809b1a3cbaf5d224594b9929d3d2ede6d9865fd60e067d"}, "downloads": -1, "filename": "elmo-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e10c6aa70ab95e6469f82417ff425cbc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 11143, "upload_time": "2020-02-11T06:58:28", "upload_time_iso_8601": "2020-02-11T06:58:28.595153Z", "url": "https://files.pythonhosted.org/packages/9e/6a/17ea47eb5ecd128177248c5755e397070a757ef75b5693a363a502f3d596/elmo-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b79b83b36824149458f5ce8a3d9352ec", "sha256": "4d96ffc7f4567d3a3a19262c880f43dd1194998b5dd8f67825703e39f61f9fec"}, "downloads": -1, "filename": "elmo-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b79b83b36824149458f5ce8a3d9352ec", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 11162, "upload_time": "2020-02-11T10:59:21", "upload_time_iso_8601": "2020-02-11T10:59:21.194030Z", "url": "https://files.pythonhosted.org/packages/8f/12/03fad73af9b4e4df6775b693d76cf6415955579eff17601fceee963b9a9c/elmo-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "89ae5404a853e16f6b421f1b9d5c3a26", "sha256": "ddfe120e94a2e5f4a678f34c025dc44ab8adeb4b3ab300c5fe31c03092f449fe"}, "downloads": -1, "filename": "elmo-0.1.2.tar.gz", "has_sig": false, "md5_digest": "89ae5404a853e16f6b421f1b9d5c3a26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 10170, "upload_time": "2020-02-16T10:31:30", "upload_time_iso_8601": "2020-02-16T10:31:30.425503Z", "url": "https://files.pythonhosted.org/packages/14/76/417a91b3128dbd22c8d6d763dfbb88490de284279c4e90904c17bca484c1/elmo-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "89ae5404a853e16f6b421f1b9d5c3a26", "sha256": "ddfe120e94a2e5f4a678f34c025dc44ab8adeb4b3ab300c5fe31c03092f449fe"}, "downloads": -1, "filename": "elmo-0.1.2.tar.gz", "has_sig": false, "md5_digest": "89ae5404a853e16f6b421f1b9d5c3a26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.0", "size": 10170, "upload_time": "2020-02-16T10:31:30", "upload_time_iso_8601": "2020-02-16T10:31:30.425503Z", "url": "https://files.pythonhosted.org/packages/14/76/417a91b3128dbd22c8d6d763dfbb88490de284279c4e90904c17bca484c1/elmo-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:47 2020"}