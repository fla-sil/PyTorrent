{"info": {"author": "Devhouse Spindle", "author_email": "opensource@wearespindle.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "Swamper\n=======\n\n|Build Status|\n\nSwamper is here for you to simplify cleaning input data and building\npython objects from this data.\n\nStatus\n------\n\nCurrently actively used and watched.\n\nUsage\n-----\n\nRequirements\n~~~~~~~~~~~~\n\n-  python 2.7\n-  python 3.3\n-  python 3.4\n-  python 3.5\n\nInstallation\n~~~~~~~~~~~~\n\nInstallation can be done from github or PyPI.\n\nRunning\n~~~~~~~\n\n``models.py``\n\n.. code:: python\n\n\n    # Pretend this is some model.\n    class Company(object):\n        # name = fields.Str(ascii_only=True)\n        # github_address = fields.Str()\n\n        def __init__(self, **kwargs):\n            self.__dict__ = kwargs\n\n``validate.py``\n\n.. code:: python\n\n    import unicodedata\n\n    from swamper.base import BaseSwamper\n\n\n    class CompanySwamper(BaseSwamper):\n        fields = [\n            'name',\n            'github_address',\n        ]\n\n        def __init__(self, data):\n            super(CompanySwamper, self).__init__(self.fields, data)\n\n        def clean_name(self, name, is_blank):\n            if is_blank or len(name.strip()) == 0:\n                raise ValueError('Field \"name\" is required.')\n\n            # Keep only ascii characters.\n            return unicodedata.normalize('NFKD', name).encode('ascii', 'ignore')\n\n        def clean_github_address(self, address, is_blank):\n            if is_blank or len(address.strip()) == 0:\n                raise ValueError('Field \"github_address\" cannot be empty.')\n\n            return 'https://github.com/%s' % address\n\n``app.py``\n\n.. code:: python\n\n\n    from .models import Company\n    from .validate import CompanySwamper\n\n\n    data = {\n        'name': u'Devhouse Spindl\\xe9',\n        'github_address': 'wearespindle',\n    }\n    swamper = CompanySwamper(data)\n    assert swamper.is_clean()\n    company = swamper.build_or_update(Company, ['name', 'github_address'])\n\n    assert company.name == 'Devhouse Spindle'\n    assert company.github_address == 'https://github.com/wearespindle'\n\nContributing\n------------\n\nSee the `CONTRIBUTING.md <CONTRIBUTING.md>`__ file on how to contribute\nto this project.\n\nContributors\n------------\n\nSee the `CONTRIBUTORS.md <CONTRIBUTORS.md>`__ file for a list of\ncontributors to the project.\n\nRoadmap\n-------\n\nChangelog\n~~~~~~~~~\n\nThe changelog can be found in the `CHANGELOG.md <CHANGELOG.md>`__ file.\n\nIn progress\n~~~~~~~~~~~\n\n-  Nothing at the moment\n\nFuture\n~~~~~~\n\n-  Nothing planned at the moment\n\nGet in touch with a developer\n-----------------------------\n\nIf you want to report an issue see the\n`CONTRIBUTING.md <CONTRIBUTING.md>`__ file for more info.\n\nWe will be happy to answer your other questions at\nopensource@wearespindle.com\n\n.. |Build Status| image:: https://travis-ci.org/wearespindle/swamper.svg?branch=master\n   :target: https://travis-ci.org/wearespindle/swamper", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wearespindle/swamper", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "swamper", "package_url": "https://pypi.org/project/swamper/", "platform": "", "project_url": "https://pypi.org/project/swamper/", "project_urls": {"Homepage": "https://github.com/wearespindle/swamper"}, "release_url": "https://pypi.org/project/swamper/0.1/", "requires_dist": null, "requires_python": "", "summary": "Swamper is a simple interface to clean input data and turn this data into objects.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/wearespindle/swamper\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/de42e857930f1aeeeea8694b9fb01410bfb81c08/68747470733a2f2f7472617669732d63692e6f72672f77656172657370696e646c652f7377616d7065722e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>Swamper is here for you to simplify cleaning input data and building\npython objects from this data.</p>\n<div id=\"status\">\n<h2>Status</h2>\n<p>Currently actively used and watched.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>python 2.7</li>\n<li>python 3.3</li>\n<li>python 3.4</li>\n<li>python 3.5</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Installation can be done from github or PyPI.</p>\n</div>\n<div id=\"running\">\n<h3>Running</h3>\n<p><tt>models.py</tt></p>\n<pre><span class=\"c1\"># Pretend this is some model.</span>\n<span class=\"k\">class</span> <span class=\"nc\">Company</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"c1\"># name = fields.Str(ascii_only=True)</span>\n    <span class=\"c1\"># github_address = fields.Str()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span>\n</pre>\n<p><tt>validate.py</tt></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">unicodedata</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">swamper.base</span> <span class=\"kn\">import</span> <span class=\"n\">BaseSwamper</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CompanySwamper</span><span class=\"p\">(</span><span class=\"n\">BaseSwamper</span><span class=\"p\">):</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'github_address'</span><span class=\"p\">,</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">CompanySwamper</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">is_blank</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_blank</span> <span class=\"ow\">or</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'Field \"name\" is required.'</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Keep only ascii characters.</span>\n        <span class=\"k\">return</span> <span class=\"n\">unicodedata</span><span class=\"o\">.</span><span class=\"n\">normalize</span><span class=\"p\">(</span><span class=\"s1\">'NFKD'</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'ascii'</span><span class=\"p\">,</span> <span class=\"s1\">'ignore'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">clean_github_address</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"p\">,</span> <span class=\"n\">is_blank</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">is_blank</span> <span class=\"ow\">or</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s1\">'Field \"github_address\" cannot be empty.'</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"s1\">'https://github.com/</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">address</span>\n</pre>\n<p><tt>app.py</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Company</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.validate</span> <span class=\"kn\">import</span> <span class=\"n\">CompanySwamper</span>\n\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"sa\">u</span><span class=\"s1\">'Devhouse Spindl</span><span class=\"se\">\\xe9</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'github_address'</span><span class=\"p\">:</span> <span class=\"s1\">'wearespindle'</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"n\">swamper</span> <span class=\"o\">=</span> <span class=\"n\">CompanySwamper</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">swamper</span><span class=\"o\">.</span><span class=\"n\">is_clean</span><span class=\"p\">()</span>\n<span class=\"n\">company</span> <span class=\"o\">=</span> <span class=\"n\">swamper</span><span class=\"o\">.</span><span class=\"n\">build_or_update</span><span class=\"p\">(</span><span class=\"n\">Company</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'github_address'</span><span class=\"p\">])</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">'Devhouse Spindle'</span>\n<span class=\"k\">assert</span> <span class=\"n\">company</span><span class=\"o\">.</span><span class=\"n\">github_address</span> <span class=\"o\">==</span> <span class=\"s1\">'https://github.com/wearespindle'</span>\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>See the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> file on how to contribute\nto this project.</p>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>See the <a href=\"CONTRIBUTORS.md\" rel=\"nofollow\">CONTRIBUTORS.md</a> file for a list of\ncontributors to the project.</p>\n</div>\n<div id=\"roadmap\">\n<h2>Roadmap</h2>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<p>The changelog can be found in the <a href=\"CHANGELOG.md\" rel=\"nofollow\">CHANGELOG.md</a> file.</p>\n</div>\n<div id=\"in-progress\">\n<h3>In progress</h3>\n<ul>\n<li>Nothing at the moment</li>\n</ul>\n</div>\n<div id=\"future\">\n<h3>Future</h3>\n<ul>\n<li>Nothing planned at the moment</li>\n</ul>\n</div>\n</div>\n<div id=\"get-in-touch-with-a-developer\">\n<h2>Get in touch with a developer</h2>\n<p>If you want to report an issue see the\n<a href=\"CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a> file for more info.</p>\n<p>We will be happy to answer your other questions at\n<a href=\"mailto:opensource%40wearespindle.com\">opensource<span>@</span>wearespindle<span>.</span>com</a></p>\n</div>\n\n          </div>"}, "last_serial": 3129237, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1511584980f6c3821462dcda0cbf1115", "sha256": "19f594936d10e53a2a9b81d533695a0816f93c026375b56e383baf225e43d481"}, "downloads": -1, "filename": "swamper-0.1.tar.gz", "has_sig": false, "md5_digest": "1511584980f6c3821462dcda0cbf1115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5115, "upload_time": "2017-08-28T14:54:43", "upload_time_iso_8601": "2017-08-28T14:54:43.950303Z", "url": "https://files.pythonhosted.org/packages/c9/15/6f386ad995faeed6b0e5d2bc03da0b44546d03f0f708992f7c469b08a7fd/swamper-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1511584980f6c3821462dcda0cbf1115", "sha256": "19f594936d10e53a2a9b81d533695a0816f93c026375b56e383baf225e43d481"}, "downloads": -1, "filename": "swamper-0.1.tar.gz", "has_sig": false, "md5_digest": "1511584980f6c3821462dcda0cbf1115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5115, "upload_time": "2017-08-28T14:54:43", "upload_time_iso_8601": "2017-08-28T14:54:43.950303Z", "url": "https://files.pythonhosted.org/packages/c9/15/6f386ad995faeed6b0e5d2bc03da0b44546d03f0f708992f7c469b08a7fd/swamper-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:42 2020"}