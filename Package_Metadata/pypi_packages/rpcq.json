{"info": {"author": "Rigetti Computing", "author_email": "info@rigetti.com", "bugtrack_url": null, "classifiers": [], "description": "rpcq\n====\n\n[![pypi version](https://img.shields.io/pypi/v/rpcq.svg)](https://pypi.org/project/rpcq/)\n[![conda-forge version](https://img.shields.io/conda/vn/conda-forge/rpcq.svg)](https://anaconda.org/conda-forge/rpcq)\n[![docker pulls](https://img.shields.io/docker/pulls/rigetti/rpcq.svg)](https://hub.docker.com/r/rigetti/rpcq)\n\nThe asynchronous RPC client-server framework and message specification for\n[Rigetti Quantum Cloud Services (QCS)](https://www.rigetti.com/).\n\nImplements an efficient transport protocol by using [ZeroMQ](http://zeromq.org/) (ZMQ) sockets and\n[MessagePack](https://msgpack.org/index.html) (`msgpack`) serialization.\n\nNot intended to be a full-featured replacement for other frameworks like\n[gRPC](https://grpc.io/) or [Apache Thrift](https://thrift.apache.org/).\n\nPython Installation\n-------------------\n\nTo install directly from the source, run `pip install -e .` from within the top-level\ndirectory of the `rpcq` repository. To additionally install the requirements for testing,\nmake sure to run `pip install -r requirements.txt`.\n\nTo instead install the latest released verson of `rpcq` from the Python package manager PyPi,\nrun `pip install rpcq`.\n\n**NOTE**: We strongly encourage users of `rpcq` to install the software within a (Python)\nvirtual environment (read up on [`virtualenv`](https://github.com/pypa/virtualenv),\n[`pyenv`](https://github.com/pyenv/pyenv), or [`conda`](https://github.com/conda/conda)\nfor more info).\n\nLisp Installation\n-----------------\n\nInstallation is easier with QuickLisp. After placing the source for RPCQ within your local\nLisp projects directory (cf. `ql:*local-project-directories*`), run `(ql:quickload :rpcq)`\nand QuickLisp will download the necessary Lisp dependencies.\n\nIn addition to the Lisp dependencies, RPCQ depends on ZeroMQ.  Be sure to install both the\nlibrary *and* its development headers (which are necessary for the Lisp foreign-function\ninterface to get its bearings).\n\nUsing the Client-Server Framework\n---------------------------------\n\nThe following two code samples (first in Python, then in Lisp) demonstrate how to create a server, add a test handler, and spin it up.\n\n```python\nfrom rpcq import Server\n\nserver = Server()\n\n@server.rpc_handler\ndef test():\n    return 'test'\n\nserver.run('tcp://*:5555')\n```\n\n```lisp\n(defun test ()\n  \"test\")\n\n(let ((dt (rpcq:make-dispatch-table)))\n  (rpcq:dispatch-table-add-handler dt 'test)\n  (rpcq:start-server :dispatch-table dt\n                     :listen-addresses '(\"tcp://*:5555\")))\n```\n\nIn another window, we can (again first in Python, then in Lisp) create a client that points to the same socket, and call the test method.\n\n```python\nfrom rpcq import Client\n\nclient = Client('tcp://localhost:5555')\n\nclient.call('test')\n```\n\n```lisp\n(rpcq:with-rpc-client (client \"tcp://localhost:5555\")\n  (rpcq:rpc-call client \"test\"))\n```\n\nIn all cases (including interoperating a client/server pair written in different languages), this will return the string `'test'`.\n\nUsing the Message Spec\n----------------------\n\nThe message spec as defined in `src/messages.lisp` (which in turn produces `rpcq/messages.py`)\nis meant to be used with the [Rigetti QCS](https://www.rigetti.com/qcs) platform. Therefore,\nthese messages are used in [`pyquil`](https://github.com/rigetticomputing/pyquil), in order\nto allow users to communicate with the Rigetti Quil compiler and quantum processing units (QPUs).\nPyQuil provides utilities for users to interact with the QCS API and write programs in\n[Quil](https://arxiv.org/abs/1608.03355), the quantum instruction language developed at Rigetti.\n\nThus, most users will not interact with `rpcq.messages` directly. However, for those interested\nin building their own implementation of the QCS API utilities in pyQuil, becoming acquainted\nwith the client-server framework, the available messages in the message spec, and how they\nare used in the `pyquil.api` module would be a good place to start!\n\nUpdating the Python Message Bindings\n------------------------------------\n\nCurrently only Python bindings are available for the message spec, but more language bindings\nare in the works. To update the Python message bindings after editing `src/messages.lisp`,\nopen `rlwrap sbcl` and run:\n\n```lisp\n(ql:quickload :rpcq)\n(with-open-file (f \"rpcq/messages.py\" :direction :output :if-exists :supersede)\n  (rpcq:python-message-spec f))\n```\n\n**NOTE**: Requires pre-installed\n[`sbcl`](http://www.sbcl.org/),\n[`quicklisp`](https://www.quicklisp.org/beta/), and\n(optionally) [`rlwrap`](https://github.com/hanslub42/rlwrap).\n\nWe can also use the rpcq docker container to update the message spec without to install the\nrequirements.\n\n```bash\n./docker_update_python_spec.sh\n```\n\nRunning the Unit Tests\n----------------------\n\nThe `rpcq` repository is configured with GitLab CI to automatically run the unit tests.\nThe tests run within a container based off of the\n[`rigetti/lisp`](https://hub.docker.com/r/rigetti/lisp) Docker image, which is pinned to a specific\ntag. If you need a more recent version of the image, update the tag in the `.gitlab-ci.yml`.\n\nThe Python unit tests can be executed locally by running `pytest` from the top-level\ndirectory of the repository (assuming you have installed the test requirements).\n\nThe Lisp unit tests can be run locally by doing the following from within `rlwrap sbcl`:\n\n```lisp\n(ql:quickload :rpcq)\n(asdf:test-system :rpcq)\n```\n\nThere may be some instances of `STYLE-WARNING`, but if the test run successfully,\nthere should be something near the bottom of the output that looks like:\n\n```\nRPCQ-TESTS (Suite)\n  TEST-DEFMESSAGE                                                         [ OK ]\n```\n\nAutomated Packaging with Docker\n-------------------------------\n\nThe CI pipeline for `rpcq` produces a Docker image, available at\n[`rigetti/rpcq`](https://hub.docker.com/r/rigetti/rpcq). To get the latest stable\nversion of `rpcq`, run `docker pull rigetti/rpcq`. The image is built from the\n[`rigetti/lisp`](https://hub.docker.com/r/rigetti/lisp) Docker image, which is pinned to a specific\ntag. If you need a more recent version of the image, update the tag in the `Dockerfile`.\n\nTo learn more about the `rigetti/lisp` Docker image, check out the\n[`docker-lisp`](https://github.com/rigetti/docker-lisp) repository.\n\nRelease Process\n---------------\n\n1. Update `VERSION.txt` and dependency versions (if applicable) and push the commit to `master`.\n2. Push a git tag `vX.Y.Z` that contains the same version number as in `VERSION.txt`.\n3. Verify that the resulting build (triggered by pushing the tag) completes successfully.\n4. Push the tagged commit to `pypi` and verify it appears [here](https://pypi.org/project/rpcq/).\n5. Publish a [release](https://github.com/rigetti/rpcq/releases) using the tag as the name.\n6. Close the [milestone](https://github.com/rigetti/rpcq/milestones) associated with this release,\n   and migrate incomplete issues to the next one.\n\nAuthors\n-------\n\nDeveloped at [Rigetti Computing](https://github.com/rigetticomputing) by\n[Nikolas Tezak](https://github.com/ntezak),\n[Steven Heidel](https://github.com/stevenheidel),\n[Eric Peterson](https://github.com/ecp-rigetti),\n[Colm Ryan](https://github.com/caryan),\n[Peter Karalekas](https://github.com/karalekas),\n[Guen Prawiroatmodjo](https://github.com/guenp),\n[Erik Davis](https://github.com/kilimanjaro), and\n[Robert Smith](https://github.com/tarballs-are-good).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rigetticomputing/rpcq.git", "keywords": "quantum rpc qcs", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "rpcq", "package_url": "https://pypi.org/project/rpcq/", "platform": "", "project_url": "https://pypi.org/project/rpcq/", "project_urls": {"Homepage": "https://github.com/rigetticomputing/rpcq.git"}, "release_url": "https://pypi.org/project/rpcq/3.3.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "The RPC framework and message specification for Rigetti QCS.", "version": "3.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>rpcq</h1>\n<p><a href=\"https://pypi.org/project/rpcq/\" rel=\"nofollow\"><img alt=\"pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2d3701bb3de97e78f96bc6ed3a4aa9a1174dd30/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f727063712e737667\"></a>\n<a href=\"https://anaconda.org/conda-forge/rpcq\" rel=\"nofollow\"><img alt=\"conda-forge version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bd7a0ddbf1a19f84870e956c1194b5dcc029ba6/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f727063712e737667\"></a>\n<a href=\"https://hub.docker.com/r/rigetti/rpcq\" rel=\"nofollow\"><img alt=\"docker pulls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e9866da228bfb53ca2acc35dc1e9d44026427d7/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f726967657474692f727063712e737667\"></a></p>\n<p>The asynchronous RPC client-server framework and message specification for\n<a href=\"https://www.rigetti.com/\" rel=\"nofollow\">Rigetti Quantum Cloud Services (QCS)</a>.</p>\n<p>Implements an efficient transport protocol by using <a href=\"http://zeromq.org/\" rel=\"nofollow\">ZeroMQ</a> (ZMQ) sockets and\n<a href=\"https://msgpack.org/index.html\" rel=\"nofollow\">MessagePack</a> (<code>msgpack</code>) serialization.</p>\n<p>Not intended to be a full-featured replacement for other frameworks like\n<a href=\"https://grpc.io/\" rel=\"nofollow\">gRPC</a> or <a href=\"https://thrift.apache.org/\" rel=\"nofollow\">Apache Thrift</a>.</p>\n<h2>Python Installation</h2>\n<p>To install directly from the source, run <code>pip install -e .</code> from within the top-level\ndirectory of the <code>rpcq</code> repository. To additionally install the requirements for testing,\nmake sure to run <code>pip install -r requirements.txt</code>.</p>\n<p>To instead install the latest released verson of <code>rpcq</code> from the Python package manager PyPi,\nrun <code>pip install rpcq</code>.</p>\n<p><strong>NOTE</strong>: We strongly encourage users of <code>rpcq</code> to install the software within a (Python)\nvirtual environment (read up on <a href=\"https://github.com/pypa/virtualenv\" rel=\"nofollow\"><code>virtualenv</code></a>,\n<a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\"><code>pyenv</code></a>, or <a href=\"https://github.com/conda/conda\" rel=\"nofollow\"><code>conda</code></a>\nfor more info).</p>\n<h2>Lisp Installation</h2>\n<p>Installation is easier with QuickLisp. After placing the source for RPCQ within your local\nLisp projects directory (cf. <code>ql:*local-project-directories*</code>), run <code>(ql:quickload :rpcq)</code>\nand QuickLisp will download the necessary Lisp dependencies.</p>\n<p>In addition to the Lisp dependencies, RPCQ depends on ZeroMQ.  Be sure to install both the\nlibrary <em>and</em> its development headers (which are necessary for the Lisp foreign-function\ninterface to get its bearings).</p>\n<h2>Using the Client-Server Framework</h2>\n<p>The following two code samples (first in Python, then in Lisp) demonstrate how to create a server, add a test handler, and spin it up.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rpcq</span> <span class=\"kn\">import</span> <span class=\"n\">Server</span>\n\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"p\">()</span>\n\n<span class=\"nd\">@server</span><span class=\"o\">.</span><span class=\"n\">rpc_handler</span>\n<span class=\"k\">def</span> <span class=\"nf\">test</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'test'</span>\n\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'tcp://*:5555'</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">(</span><span class=\"nb\">defun</span> <span class=\"nv\">test</span> <span class=\"p\">()</span>\n  <span class=\"s\">\"test\"</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">let</span> <span class=\"p\">((</span><span class=\"nv\">dt</span> <span class=\"p\">(</span><span class=\"nv\">rpcq:make-dispatch-table</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"nv\">rpcq:dispatch-table-add-handler</span> <span class=\"nv\">dt</span> <span class=\"ss\">'test</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nv\">rpcq:start-server</span> <span class=\"ss\">:dispatch-table</span> <span class=\"nv\">dt</span>\n                     <span class=\"ss\">:listen-addresses</span> <span class=\"o\">'</span><span class=\"p\">(</span><span class=\"s\">\"tcp://*:5555\"</span><span class=\"p\">)))</span>\n</pre>\n<p>In another window, we can (again first in Python, then in Lisp) create a client that points to the same socket, and call the test method.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">rpcq</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'tcp://localhost:5555'</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">(</span><span class=\"nv\">rpcq:with-rpc-client</span> <span class=\"p\">(</span><span class=\"nv\">client</span> <span class=\"s\">\"tcp://localhost:5555\"</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nv\">rpcq:rpc-call</span> <span class=\"nv\">client</span> <span class=\"s\">\"test\"</span><span class=\"p\">))</span>\n</pre>\n<p>In all cases (including interoperating a client/server pair written in different languages), this will return the string <code>'test'</code>.</p>\n<h2>Using the Message Spec</h2>\n<p>The message spec as defined in <code>src/messages.lisp</code> (which in turn produces <code>rpcq/messages.py</code>)\nis meant to be used with the <a href=\"https://www.rigetti.com/qcs\" rel=\"nofollow\">Rigetti QCS</a> platform. Therefore,\nthese messages are used in <a href=\"https://github.com/rigetticomputing/pyquil\" rel=\"nofollow\"><code>pyquil</code></a>, in order\nto allow users to communicate with the Rigetti Quil compiler and quantum processing units (QPUs).\nPyQuil provides utilities for users to interact with the QCS API and write programs in\n<a href=\"https://arxiv.org/abs/1608.03355\" rel=\"nofollow\">Quil</a>, the quantum instruction language developed at Rigetti.</p>\n<p>Thus, most users will not interact with <code>rpcq.messages</code> directly. However, for those interested\nin building their own implementation of the QCS API utilities in pyQuil, becoming acquainted\nwith the client-server framework, the available messages in the message spec, and how they\nare used in the <code>pyquil.api</code> module would be a good place to start!</p>\n<h2>Updating the Python Message Bindings</h2>\n<p>Currently only Python bindings are available for the message spec, but more language bindings\nare in the works. To update the Python message bindings after editing <code>src/messages.lisp</code>,\nopen <code>rlwrap sbcl</code> and run:</p>\n<pre><span class=\"p\">(</span><span class=\"nv\">ql:quickload</span> <span class=\"ss\">:rpcq</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nb\">with-open-file</span> <span class=\"p\">(</span><span class=\"nv\">f</span> <span class=\"s\">\"rpcq/messages.py\"</span> <span class=\"ss\">:direction</span> <span class=\"ss\">:output</span> <span class=\"ss\">:if-exists</span> <span class=\"ss\">:supersede</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"nv\">rpcq:python-message-spec</span> <span class=\"nv\">f</span><span class=\"p\">))</span>\n</pre>\n<p><strong>NOTE</strong>: Requires pre-installed\n<a href=\"http://www.sbcl.org/\" rel=\"nofollow\"><code>sbcl</code></a>,\n<a href=\"https://www.quicklisp.org/beta/\" rel=\"nofollow\"><code>quicklisp</code></a>, and\n(optionally) <a href=\"https://github.com/hanslub42/rlwrap\" rel=\"nofollow\"><code>rlwrap</code></a>.</p>\n<p>We can also use the rpcq docker container to update the message spec without to install the\nrequirements.</p>\n<pre>./docker_update_python_spec.sh\n</pre>\n<h2>Running the Unit Tests</h2>\n<p>The <code>rpcq</code> repository is configured with GitLab CI to automatically run the unit tests.\nThe tests run within a container based off of the\n<a href=\"https://hub.docker.com/r/rigetti/lisp\" rel=\"nofollow\"><code>rigetti/lisp</code></a> Docker image, which is pinned to a specific\ntag. If you need a more recent version of the image, update the tag in the <code>.gitlab-ci.yml</code>.</p>\n<p>The Python unit tests can be executed locally by running <code>pytest</code> from the top-level\ndirectory of the repository (assuming you have installed the test requirements).</p>\n<p>The Lisp unit tests can be run locally by doing the following from within <code>rlwrap sbcl</code>:</p>\n<pre><span class=\"p\">(</span><span class=\"nv\">ql:quickload</span> <span class=\"ss\">:rpcq</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">asdf:test-system</span> <span class=\"ss\">:rpcq</span><span class=\"p\">)</span>\n</pre>\n<p>There may be some instances of <code>STYLE-WARNING</code>, but if the test run successfully,\nthere should be something near the bottom of the output that looks like:</p>\n<pre><code>RPCQ-TESTS (Suite)\n  TEST-DEFMESSAGE                                                         [ OK ]\n</code></pre>\n<h2>Automated Packaging with Docker</h2>\n<p>The CI pipeline for <code>rpcq</code> produces a Docker image, available at\n<a href=\"https://hub.docker.com/r/rigetti/rpcq\" rel=\"nofollow\"><code>rigetti/rpcq</code></a>. To get the latest stable\nversion of <code>rpcq</code>, run <code>docker pull rigetti/rpcq</code>. The image is built from the\n<a href=\"https://hub.docker.com/r/rigetti/lisp\" rel=\"nofollow\"><code>rigetti/lisp</code></a> Docker image, which is pinned to a specific\ntag. If you need a more recent version of the image, update the tag in the <code>Dockerfile</code>.</p>\n<p>To learn more about the <code>rigetti/lisp</code> Docker image, check out the\n<a href=\"https://github.com/rigetti/docker-lisp\" rel=\"nofollow\"><code>docker-lisp</code></a> repository.</p>\n<h2>Release Process</h2>\n<ol>\n<li>Update <code>VERSION.txt</code> and dependency versions (if applicable) and push the commit to <code>master</code>.</li>\n<li>Push a git tag <code>vX.Y.Z</code> that contains the same version number as in <code>VERSION.txt</code>.</li>\n<li>Verify that the resulting build (triggered by pushing the tag) completes successfully.</li>\n<li>Push the tagged commit to <code>pypi</code> and verify it appears <a href=\"https://pypi.org/project/rpcq/\" rel=\"nofollow\">here</a>.</li>\n<li>Publish a <a href=\"https://github.com/rigetti/rpcq/releases\" rel=\"nofollow\">release</a> using the tag as the name.</li>\n<li>Close the <a href=\"https://github.com/rigetti/rpcq/milestones\" rel=\"nofollow\">milestone</a> associated with this release,\nand migrate incomplete issues to the next one.</li>\n</ol>\n<h2>Authors</h2>\n<p>Developed at <a href=\"https://github.com/rigetticomputing\" rel=\"nofollow\">Rigetti Computing</a> by\n<a href=\"https://github.com/ntezak\" rel=\"nofollow\">Nikolas Tezak</a>,\n<a href=\"https://github.com/stevenheidel\" rel=\"nofollow\">Steven Heidel</a>,\n<a href=\"https://github.com/ecp-rigetti\" rel=\"nofollow\">Eric Peterson</a>,\n<a href=\"https://github.com/caryan\" rel=\"nofollow\">Colm Ryan</a>,\n<a href=\"https://github.com/karalekas\" rel=\"nofollow\">Peter Karalekas</a>,\n<a href=\"https://github.com/guenp\" rel=\"nofollow\">Guen Prawiroatmodjo</a>,\n<a href=\"https://github.com/kilimanjaro\" rel=\"nofollow\">Erik Davis</a>, and\n<a href=\"https://github.com/tarballs-are-good\" rel=\"nofollow\">Robert Smith</a>.</p>\n\n          </div>"}, "last_serial": 7113401, "releases": {"1.0.0.dev0": [{"comment_text": "", "digests": {"md5": "876428a351927c0aabbcd39216c06c26", "sha256": "2b01dee39e3586b4daa4312f0219f90ba3a97b72ccc013f893e5b1e86de7aa2b"}, "downloads": -1, "filename": "rpcq-1.0.0.dev0.tar.gz", "has_sig": false, "md5_digest": "876428a351927c0aabbcd39216c06c26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16181, "upload_time": "2018-10-03T03:15:57", "upload_time_iso_8601": "2018-10-03T03:15:57.475711Z", "url": "https://files.pythonhosted.org/packages/ff/32/fa463504c682647ab76a4ee8e07957efb34e802f8e3161de67b014909801/rpcq-1.0.0.dev0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "588d13dd6bbb0d33aa3b54d71188e75c", "sha256": "90ac222f3734c66591cc74bb4ed9b921e365e9f2203f4311fcfc907836270886"}, "downloads": -1, "filename": "rpcq-2.0.0.tar.gz", "has_sig": false, "md5_digest": "588d13dd6bbb0d33aa3b54d71188e75c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21496, "upload_time": "2018-10-14T00:14:30", "upload_time_iso_8601": "2018-10-14T00:14:30.046329Z", "url": "https://files.pythonhosted.org/packages/ba/0f/1aafde0a9e7de591098f9569df544843c708072c7fabfa950c4594be1d1f/rpcq-2.0.0.tar.gz", "yanked": false}], "2.0.0.dev0": [{"comment_text": "", "digests": {"md5": "b7c6fc20e8313c8a10efa0c19322a9bb", "sha256": "977720dd40ee29f9f3cb18a8ccea431e226c078bc044bd99b3c7d3d5e9a61329"}, "downloads": -1, "filename": "rpcq-2.0.0.dev0.tar.gz", "has_sig": false, "md5_digest": "b7c6fc20e8313c8a10efa0c19322a9bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17314, "upload_time": "2018-10-13T23:26:41", "upload_time_iso_8601": "2018-10-13T23:26:41.378167Z", "url": "https://files.pythonhosted.org/packages/6c/5e/e46f6c6fc011b227f5d448ba27094fceae15b458cb3c733770ea3b1384d0/rpcq-2.0.0.dev0.tar.gz", "yanked": false}], "2.0.0.dev1": [{"comment_text": "", "digests": {"md5": "00ac97f53df385151e28629afe8f74b2", "sha256": "d5f1f5e068ab392de9426019a7a133551a26f997af1d35f9082ec14a2c48f9fc"}, "downloads": -1, "filename": "rpcq-2.0.0.dev1.tar.gz", "has_sig": false, "md5_digest": "00ac97f53df385151e28629afe8f74b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21390, "upload_time": "2018-10-13T23:39:39", "upload_time_iso_8601": "2018-10-13T23:39:39.064628Z", "url": "https://files.pythonhosted.org/packages/28/e1/bafca03e61dbb04ca8e687388ea5782a174e676b9d588153c85d30c8fba1/rpcq-2.0.0.dev1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "7e061b442639f7154fcc6baa6697d5ba", "sha256": "7100ba0856edfc789232fd714a303a849b1e186e0a4a54f96696b0eac97ec848"}, "downloads": -1, "filename": "rpcq-2.1.0.tar.gz", "has_sig": false, "md5_digest": "7e061b442639f7154fcc6baa6697d5ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22286, "upload_time": "2018-10-25T16:22:03", "upload_time_iso_8601": "2018-10-25T16:22:03.488543Z", "url": "https://files.pythonhosted.org/packages/07/27/704a6b0afe1a904ce8d1fdb88963673f666ec4da977b518d1943d5bfdbc6/rpcq-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "61255b372bd091d5cc0ae580eaf8d879", "sha256": "28630f9d4f7d5566f47b50ed84da64cef7ecd063dc299d671a26f1574c4795ce"}, "downloads": -1, "filename": "rpcq-2.2.0.tar.gz", "has_sig": false, "md5_digest": "61255b372bd091d5cc0ae580eaf8d879", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20901, "upload_time": "2018-11-21T02:58:28", "upload_time_iso_8601": "2018-11-21T02:58:28.265063Z", "url": "https://files.pythonhosted.org/packages/15/76/2f0b4213ba1690b3f12400f5f3348681257ed4b38776f5f018df51d4ed41/rpcq-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "0bc46459224c09e1b90e1efd80b4063f", "sha256": "b57487ffaea19d427fb280d30138f11e9f40ebf2b7ebe9aa23ce4785847db460"}, "downloads": -1, "filename": "rpcq-2.2.1.tar.gz", "has_sig": false, "md5_digest": "0bc46459224c09e1b90e1efd80b4063f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20890, "upload_time": "2018-11-26T17:56:03", "upload_time_iso_8601": "2018-11-26T17:56:03.921853Z", "url": "https://files.pythonhosted.org/packages/d2/94/739592b39c546c6893846990f54591c86423f138074de1d24d8bc3177442/rpcq-2.2.1.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "d97a715de52b6eca6ce6f7916d73f1e2", "sha256": "463c7741a0a8479c52aca147c52528891f48ba1b54348512694b84740d95f579"}, "downloads": -1, "filename": "rpcq-2.3.0.tar.gz", "has_sig": false, "md5_digest": "d97a715de52b6eca6ce6f7916d73f1e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17029, "upload_time": "2018-12-07T06:36:59", "upload_time_iso_8601": "2018-12-07T06:36:59.489293Z", "url": "https://files.pythonhosted.org/packages/de/fe/b0023e197ecb051968700a95f3e5096a92954e0b943ba4e9135acba21121/rpcq-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "8f033ee9af25591ae40e1099fe20bb8d", "sha256": "a84f6810b194b96caa0689870ce8ae7a8f150d04d8cf320da9faefe60d52e0dc"}, "downloads": -1, "filename": "rpcq-2.3.1.tar.gz", "has_sig": false, "md5_digest": "8f033ee9af25591ae40e1099fe20bb8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17057, "upload_time": "2018-12-12T21:00:33", "upload_time_iso_8601": "2018-12-12T21:00:33.124570Z", "url": "https://files.pythonhosted.org/packages/8b/e1/fd904537b74fa709e5e74b0b5a34ac2ab951a02efa4807f51c1e7586fff7/rpcq-2.3.1.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "52b949ee60d5edd449cc355be8b845ba", "sha256": "95d8e5493e9a0d423d04e758f3fbc0f1201f52cb05e45ac456462543e5950521"}, "downloads": -1, "filename": "rpcq-2.4.0.tar.gz", "has_sig": false, "md5_digest": "52b949ee60d5edd449cc355be8b845ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17327, "upload_time": "2019-01-02T20:54:19", "upload_time_iso_8601": "2019-01-02T20:54:19.587288Z", "url": "https://files.pythonhosted.org/packages/61/18/8a886c423df71570a00dda2d07416422783da385a3a088ee012228e51a50/rpcq-2.4.0.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "aa4620db3e8071eb5ada09e4467866f6", "sha256": "44ef1f613fcf3e58beef67db0b0f6f99ef13e5970db27cc3d61eb3fcad8f0121"}, "downloads": -1, "filename": "rpcq-2.4.1.tar.gz", "has_sig": false, "md5_digest": "aa4620db3e8071eb5ada09e4467866f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18400, "upload_time": "2019-03-27T18:39:46", "upload_time_iso_8601": "2019-03-27T18:39:46.497961Z", "url": "https://files.pythonhosted.org/packages/4b/a9/2a70a8e182d7a99b0d73b6c15c7fd71c289782ea98c75bb57568749566ce/rpcq-2.4.1.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "ac3eccc4e97e0a9da94e0c70eba91e19", "sha256": "661c9f5b1bf0adf708d9dbeea89e60c071211e137447cc6d2d73d2e75954824b"}, "downloads": -1, "filename": "rpcq-2.5.0.tar.gz", "has_sig": false, "md5_digest": "ac3eccc4e97e0a9da94e0c70eba91e19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37837, "upload_time": "2019-05-01T01:30:36", "upload_time_iso_8601": "2019-05-01T01:30:36.246929Z", "url": "https://files.pythonhosted.org/packages/7e/11/07465159995ba88828836402840e807e11d22e6febbc7c72442cc600a67b/rpcq-2.5.0.tar.gz", "yanked": false}], "2.5.1": [{"comment_text": "", "digests": {"md5": "d71647931b1036b5c964178a9f585fdb", "sha256": "75593916f8619460c89859e3475b0147c1ee840c267e742a7117ee20088e1751"}, "downloads": -1, "filename": "rpcq-2.5.1.tar.gz", "has_sig": false, "md5_digest": "d71647931b1036b5c964178a9f585fdb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37921, "upload_time": "2019-05-01T22:47:24", "upload_time_iso_8601": "2019-05-01T22:47:24.998227Z", "url": "https://files.pythonhosted.org/packages/74/4f/c01ad31db3c1f67782b45943e7e79cc9c1d13c0b4a10f778ed03a1e89958/rpcq-2.5.1.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "a1ba02658f22b7af8f1c94f38b87ccbb", "sha256": "c329317930f06a2c6b9dddf868ae1512fa36199ef021d8a7fd2a286eccae6dd2"}, "downloads": -1, "filename": "rpcq-2.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a1ba02658f22b7af8f1c94f38b87ccbb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37800, "upload_time": "2019-05-17T19:38:07", "upload_time_iso_8601": "2019-05-17T19:38:07.678783Z", "url": "https://files.pythonhosted.org/packages/79/20/b0791ed16f8ecabd6edddf9e5b4974fff00c90f70807bef9bb4122a3e500/rpcq-2.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9a316d88314f2dc9ee706d28fb8f878", "sha256": "536fbe1ed6551300990a75bc0fd66a2dc25a31d7f3bd04d79de5c9357e066b87"}, "downloads": -1, "filename": "rpcq-2.6.0.tar.gz", "has_sig": false, "md5_digest": "e9a316d88314f2dc9ee706d28fb8f878", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38050, "upload_time": "2019-05-17T19:40:33", "upload_time_iso_8601": "2019-05-17T19:40:33.351020Z", "url": "https://files.pythonhosted.org/packages/85/30/e30592a439c496192a7da2c9c61b4aafbd41383dbf7962d546b010670073/rpcq-2.6.0.tar.gz", "yanked": false}], "2.6.1": [{"comment_text": "", "digests": {"md5": "48ed924771f9e8b3f354cc05f3edcdbc", "sha256": "510a90b0f2caad084729195f294afc1908ca783e66f5e7a48d16c1d5e647d98c"}, "downloads": -1, "filename": "rpcq-2.6.1.tar.gz", "has_sig": false, "md5_digest": "48ed924771f9e8b3f354cc05f3edcdbc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38047, "upload_time": "2019-05-17T23:39:25", "upload_time_iso_8601": "2019-05-17T23:39:25.463078Z", "url": "https://files.pythonhosted.org/packages/3e/2e/5f1630c682278154422138381d7736bcf2de1def38faef53ca18196b038b/rpcq-2.6.1.tar.gz", "yanked": false}], "2.7.0": [{"comment_text": "", "digests": {"md5": "1408058f0f8abd5169ed8fb8f845d146", "sha256": "020efbed1e664dd792118d7e5ae8997aa7ce34edf5300863588eaacfa625aaf1"}, "downloads": -1, "filename": "rpcq-2.7.0.tar.gz", "has_sig": false, "md5_digest": "1408058f0f8abd5169ed8fb8f845d146", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38320, "upload_time": "2019-06-24T20:45:33", "upload_time_iso_8601": "2019-06-24T20:45:33.209908Z", "url": "https://files.pythonhosted.org/packages/a1/00/62f96aa9c6d28aa988a63a40d7bad3737728d49fa943a25347c53bb14bd0/rpcq-2.7.0.tar.gz", "yanked": false}], "2.7.1": [{"comment_text": "", "digests": {"md5": "5e37e34a6693eb238ccb246777b6ddd4", "sha256": "21356e3ba4d5068f9b73e08013a8342073d55d367830310ab02874c558d924ed"}, "downloads": -1, "filename": "rpcq-2.7.1.tar.gz", "has_sig": false, "md5_digest": "5e37e34a6693eb238ccb246777b6ddd4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 38344, "upload_time": "2019-06-25T05:30:05", "upload_time_iso_8601": "2019-06-25T05:30:05.514890Z", "url": "https://files.pythonhosted.org/packages/31/75/c479bfb9eae84ab62885f4d3de2ebb6005796c17a7ef0d6886df31224e88/rpcq-2.7.1.tar.gz", "yanked": false}], "2.7.2": [{"comment_text": "", "digests": {"md5": "21fb9fb23f9d170c34982126f13e2b89", "sha256": "e13edde1128a5ca5f5a2e9112a3aecf2b949ed57e75d1e1879dc43357fbbb2ff"}, "downloads": -1, "filename": "rpcq-2.7.2.tar.gz", "has_sig": false, "md5_digest": "21fb9fb23f9d170c34982126f13e2b89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 39238, "upload_time": "2019-07-29T06:45:46", "upload_time_iso_8601": "2019-07-29T06:45:46.050173Z", "url": "https://files.pythonhosted.org/packages/f1/00/88998432273ee457ee32171342706144c30fb80e7c1bd21704db8d24fb07/rpcq-2.7.2.tar.gz", "yanked": false}], "2.7.3": [{"comment_text": "", "digests": {"md5": "ebab8d4b5235a3aadbf41a8b66d379fa", "sha256": "ad3a72f2b9d7658bd59f7d3e9d90997e131d627a8408b23aad2fd6797b33be20"}, "downloads": -1, "filename": "rpcq-2.7.3.tar.gz", "has_sig": false, "md5_digest": "ebab8d4b5235a3aadbf41a8b66d379fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 39238, "upload_time": "2019-08-27T22:06:58", "upload_time_iso_8601": "2019-08-27T22:06:58.104194Z", "url": "https://files.pythonhosted.org/packages/52/d8/62f38429b2ffd19c09a67271dfacf1a112e8ff73774e9a64453ed8c10110/rpcq-2.7.3.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "a66b7fa0186b78d91191c9f2cf3ae519", "sha256": "72ea2d469c5bee870e47e439c1e98ff24de59d0117ef76887938350dddf545a5"}, "downloads": -1, "filename": "rpcq-3.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a66b7fa0186b78d91191c9f2cf3ae519", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 44868, "upload_time": "2019-12-03T21:34:10", "upload_time_iso_8601": "2019-12-03T21:34:10.480012Z", "url": "https://files.pythonhosted.org/packages/c3/c3/e919a14883d029fa4e91e1a6d58e2d855e9ed9a15739fab09b80d3e128d3/rpcq-3.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2410ef97a5a8814709025009161dcc3", "sha256": "5a0ebb6df50db9d468ad352e79e38c4e61d884ef2eb134cc32083f9ea7e62be8"}, "downloads": -1, "filename": "rpcq-3.0.0.tar.gz", "has_sig": false, "md5_digest": "b2410ef97a5a8814709025009161dcc3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 43328, "upload_time": "2019-12-03T21:34:12", "upload_time_iso_8601": "2019-12-03T21:34:12.379945Z", "url": "https://files.pythonhosted.org/packages/79/56/5bb15649a2d68f844cc9bf19b75df551c82d492e7bae5a05f703e6643745/rpcq-3.0.0.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "d4bc325b12b94793f8cd0b4b0e5f994b", "sha256": "c5585af7c3d0ec605d8cf952e7e6fb4bdd3cf6f7109df66d7e976fb75c38c8cf"}, "downloads": -1, "filename": "rpcq-3.1.0.tar.gz", "has_sig": false, "md5_digest": "d4bc325b12b94793f8cd0b4b0e5f994b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 41951, "upload_time": "2020-03-02T23:39:32", "upload_time_iso_8601": "2020-03-02T23:39:32.331528Z", "url": "https://files.pythonhosted.org/packages/ad/35/708efedb6d18c2edda7ec59418d00cab469a1d975017f40ee26107773326/rpcq-3.1.0.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "1c377d6ba05ac57b7f33cf222dcfb1cc", "sha256": "9e586ba47c5ef3cbff8167e07df55e94fd68acb222510f270ccafef9f87cf9cf"}, "downloads": -1, "filename": "rpcq-3.2.0.tar.gz", "has_sig": false, "md5_digest": "1c377d6ba05ac57b7f33cf222dcfb1cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42168, "upload_time": "2020-03-26T21:31:44", "upload_time_iso_8601": "2020-03-26T21:31:44.510340Z", "url": "https://files.pythonhosted.org/packages/02/2e/385d3d78bf182c19ce4a875e209e2746144438a1c92c1e7c8ce70c9412e8/rpcq-3.2.0.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "c7a5197469cc5bf40200ba5be0e39421", "sha256": "034d1722a40543401274d27de944d2fd0bc1cc242a33b5068a519155f83b4310"}, "downloads": -1, "filename": "rpcq-3.3.0.tar.gz", "has_sig": false, "md5_digest": "c7a5197469cc5bf40200ba5be0e39421", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42203, "upload_time": "2020-04-27T17:26:56", "upload_time_iso_8601": "2020-04-27T17:26:56.922824Z", "url": "https://files.pythonhosted.org/packages/47/4f/5c4efa03839fb6692c840c058cffe65cd4e459dc5d80e926504fc5b903e7/rpcq-3.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c7a5197469cc5bf40200ba5be0e39421", "sha256": "034d1722a40543401274d27de944d2fd0bc1cc242a33b5068a519155f83b4310"}, "downloads": -1, "filename": "rpcq-3.3.0.tar.gz", "has_sig": false, "md5_digest": "c7a5197469cc5bf40200ba5be0e39421", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 42203, "upload_time": "2020-04-27T17:26:56", "upload_time_iso_8601": "2020-04-27T17:26:56.922824Z", "url": "https://files.pythonhosted.org/packages/47/4f/5c4efa03839fb6692c840c058cffe65cd4e459dc5d80e926504fc5b903e7/rpcq-3.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:59 2020"}