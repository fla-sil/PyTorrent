{"info": {"author": "Mozilla Services", "author_email": "services-dev@mozilla.org", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "============================\nrepoze.who.plugins.memcached\n============================\n\nThis is a repoze.who IAuthenticator/IMetadataProvider plugin that can\ncache the results of *other* plugins using memcached.  It's useful for\nreducing load on e.g. a backend LDAP auth system.\n\nTo use it, give it the name of an authenticator and/or metadata provider\nwhose results it should wrap::\n\n    [plugin:ldap]\n    use = my.ldap.authenticator\n\n    [plugin:cached_ldap]\n    use = repoze.who.plugins.memcached\n    authenticator_name = ldap\n\n    [authenticators]\n    plugins = cached_ldap ldap;unused\n\n(The \"ldap;unused\" bit ensures that the wrapped ldap plugin still gets\nloaded, but is not used for matching any requests. Yeah, it's yuck.)\n\nTo prevent a compromise of the cache from revealing auth credentials, this\nplugin calculates a HMAC hash of the items in the incoming identity and\nuses that as the cache key.  This makes it possible to check the cache for\na match to an incoming identity, while preventing the cache keys from being \nreversed back into a valid identity.\n\nItems added to the identity by the wrapped plugin will be stored in the\ncached value and will *not* be encryped or obfuscated in any way.\n\nThe following configuration options are available:\n\n    * memcached_urls:  A list of URLs for the underlying memcached store.\n\n    * authenticator_name:  The name of an IAuthenticator plugin to wrap.\n\n    * mdprovider_name:  The name of an IMetadataProvider plugin to wrap.\n\n    * key_items:  A list of names from the identity dict that should be\n                  hashed to produce the cache key.  These items should\n                  uniquely and validly identity a user.  By default it\n                  will use all keys in the identity in sorted order.\n\n    * value_items:  A list of names from the identity dict that should be\n                    stored in the cache.  These would typically be items\n                    of metadata such as the user's email address.  By \n                    default this will include all items that the wrapped\n                    plugin adds to the identity.\n\n    * secret:  A string used when calculating the HMAC the cache keys.\n               All servers accessing a shared cache should use the same\n               secret so they produce the same set of cache keys.\n\n    * ttl:  The time for which cache entries should persist, in seconds.\n\n\n0.1.1 - 2012-01-30\n==================\n\n * Update license to MPL 2.0\n\n\n0.1.0 - 2011-12-01\n==================\n\n * Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mozilla-services/repoze.who.plugins.memcached", "keywords": "authentication repoze http memcache cache", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "repoze.who.plugins.memcached", "package_url": "https://pypi.org/project/repoze.who.plugins.memcached/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/repoze.who.plugins.memcached/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mozilla-services/repoze.who.plugins.memcached"}, "release_url": "https://pypi.org/project/repoze.who.plugins.memcached/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "repoze.who.plugins.memcached", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a repoze.who IAuthenticator/IMetadataProvider plugin that can\ncache the results of <em>other</em> plugins using memcached.  It\u2019s useful for\nreducing load on e.g. a backend LDAP auth system.</p>\n<p>To use it, give it the name of an authenticator and/or metadata provider\nwhose results it should wrap:</p>\n<pre>[plugin:ldap]\nuse = my.ldap.authenticator\n\n[plugin:cached_ldap]\nuse = repoze.who.plugins.memcached\nauthenticator_name = ldap\n\n[authenticators]\nplugins = cached_ldap ldap;unused\n</pre>\n<p>(The \u201cldap;unused\u201d bit ensures that the wrapped ldap plugin still gets\nloaded, but is not used for matching any requests. Yeah, it\u2019s yuck.)</p>\n<p>To prevent a compromise of the cache from revealing auth credentials, this\nplugin calculates a HMAC hash of the items in the incoming identity and\nuses that as the cache key.  This makes it possible to check the cache for\na match to an incoming identity, while preventing the cache keys from being\nreversed back into a valid identity.</p>\n<p>Items added to the identity by the wrapped plugin will be stored in the\ncached value and will <em>not</em> be encryped or obfuscated in any way.</p>\n<p>The following configuration options are available:</p>\n<blockquote>\n<ul>\n<li>memcached_urls:  A list of URLs for the underlying memcached store.</li>\n<li>authenticator_name:  The name of an IAuthenticator plugin to wrap.</li>\n<li>mdprovider_name:  The name of an IMetadataProvider plugin to wrap.</li>\n<li><dl>\n<dt>key_items:  A list of names from the identity dict that should be</dt>\n<dd>hashed to produce the cache key.  These items should\nuniquely and validly identity a user.  By default it\nwill use all keys in the identity in sorted order.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>value_items:  A list of names from the identity dict that should be</dt>\n<dd>stored in the cache.  These would typically be items\nof metadata such as the user\u2019s email address.  By\ndefault this will include all items that the wrapped\nplugin adds to the identity.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>secret:  A string used when calculating the HMAC the cache keys.</dt>\n<dd>All servers accessing a shared cache should use the same\nsecret so they produce the same set of cache keys.</dd>\n</dl>\n</li>\n<li>ttl:  The time for which cache entries should persist, in seconds.</li>\n</ul>\n</blockquote>\n<div id=\"id1\">\n<h2>0.1.1 - 2012-01-30</h2>\n<blockquote>\n<ul>\n<li>Update license to MPL 2.0</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h2>0.1.0 - 2011-12-01</h2>\n<blockquote>\n<ul>\n<li>Initial release.</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 798858, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "706fbee797632f6936340ae842eb334f", "sha256": "02d1f7814360c1197810bf6ce59743da9d7c6370dd97aac950ec375a4b034a56"}, "downloads": -1, "filename": "repoze.who.plugins.memcached-0.1.1.tar.gz", "has_sig": false, "md5_digest": "706fbee797632f6936340ae842eb334f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7695, "upload_time": "2012-01-30T02:00:07", "upload_time_iso_8601": "2012-01-30T02:00:07.378285Z", "url": "https://files.pythonhosted.org/packages/d0/53/9a40234a97dc40eae605f584a2ee784a9f960e52d7087ea3583184446894/repoze.who.plugins.memcached-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "706fbee797632f6936340ae842eb334f", "sha256": "02d1f7814360c1197810bf6ce59743da9d7c6370dd97aac950ec375a4b034a56"}, "downloads": -1, "filename": "repoze.who.plugins.memcached-0.1.1.tar.gz", "has_sig": false, "md5_digest": "706fbee797632f6936340ae842eb334f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7695, "upload_time": "2012-01-30T02:00:07", "upload_time_iso_8601": "2012-01-30T02:00:07.378285Z", "url": "https://files.pythonhosted.org/packages/d0/53/9a40234a97dc40eae605f584a2ee784a9f960e52d7087ea3583184446894/repoze.who.plugins.memcached-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:22 2020"}