{"info": {"author": "Jonas Tarnstrom, Pawel Troka", "author_email": "jonas.tarnstrom@esn.me, pawel.troka@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: C", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "UltraJSON-x-legacy\n=============\n.. image:: https://travis-ci.org/PawelTroka/ultrajson-x.svg?branch=legacy\n    :target: https://travis-ci.org/PawelTroka/ultrajson-x?branch=legacy\n\nUltraJSON-x-legacy is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 2.5+ and 3.\n\nFor a more painless day to day C/C++ JSON decoder experience please checkout ujson4c_, based on UltraJSON.\n\n.. _ujson4c: http://github.com/esnme/ujson4c/\n\n| Please checkout the rest of the projects in the Ultra series:\n| http://github.com/esnme/ultramemcache\n| http://github.com/esnme/ultramysql\n\nTo install it just run Pip as usual::\n\n    $ pip install ujson-x-legacy\n\n============\nUsage\n============\nMay be used as a drop in replacement for most other JSON parsers for Python::\n\n    >>> import ujson\n    >>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n    '[{\"key\":\"value\"},81,true]'\n    >>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n    [{u'key': u'value'}, 81, True]\n\n~~~~~~~~~~~~~~~\nEncoder options\n~~~~~~~~~~~~~~~\nencode_html_chars\n-----------------\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode sequences. Default is false::\n\n    >>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n    '\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n\nensure_ascii\n-------------\nLimits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space::\n\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\")\n    '\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\", ensure_ascii=False)\n    '\"\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6\"'\n\ndouble_precision\n----------------\nControls how many decimals to encode for double or decimal values. Default is 9::\n\n    >>> ujson.dumps(math.pi)\n    '3.1415926536'\n    >>> ujson.dumps(math.pi, double_precision=1)\n    '3.1'\n    >>> ujson.dumps(math.pi, double_precision=0)\n    '3'\n    >>> ujson.dumps(math.pi, double_precision=4)\n    '3.1416'\n\nescape_forward_slashes\n----------------------\nControls whether forward slashes (``/``) are escaped. Default is True::\n\n    >>> ujson.dumps(\"http://esn.me\")\n    '\"http:\\/\\/esn.me\"'\n    >>> ujson.dumps(\"http://esn.me\", escape_forward_slashes=False)\n    '\"http://esn.me\"'\n\nindent\n----------------------\nControls whether indention (\"pretty output\") is enabled. Default is 0 (disabled)::\n\n    >>> ujson.dumps({\"foo\": \"bar\"})\n    '{\"foo\":\"bar\"}'\n    >>> ujson.dumps({\"foo\": \"bar\"}, indent=4)\n    {\n        \"foo\":\"bar\"\n    }\n\n~~~~~~~~~~~~~~~~\nDecoders options\n~~~~~~~~~~~~~~~~\nprecise_float\n-------------\nSet to enable usage of higher precision (strtod) function when decoding string to double values. Default is to use fast but less precise builtin functionality::\n\n    >>> ujson.loads(\"4.56\")\n    4.5600000000000005\n    >>> ujson.loads(\"4.56\", precise_float=True)\n    4.5599999999999996\n\n~~~~~~~~~~~~~\nTest machine:\n~~~~~~~~~~~~~\n\nLinux 3.13.0-66-generic x86_64 #108-Ubuntu SMP Wed Oct 7 15:20:27 UTC 2015\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3508.19 |    5742.00 |    3232.38 |    3309.09 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   25103.37 |   11257.83 |   11696.26 |   11871.04 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3189.71 |    2717.14 |    2006.38 |    2961.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1354.94 |     630.54 |     356.35 |     344.05 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   18127.47 |   12537.39 |   12541.23 |   20001.00 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23264.70 |   12788.85 |   25427.88 |    9352.36 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10519.38 |    5021.29 |    3686.86 |    4643.47 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    9676.53 |    5326.79 |    8515.77 |    3017.30 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  105998.03 |  102067.28 |   44758.51 |   60424.80 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  163869.96 |   78341.57 |  110859.36 |  115013.90 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   13471.32 |   12109.09 |    3876.40 |    8833.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   16890.63 |    8946.07 |   12218.55 |    3350.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      50.25 |      46.45 |      13.82 |      29.28 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      33.27 |      22.10 |      27.91 |      10.43 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      27.19 |            |       7.75 |       2.39 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     577.98 |            |     387.81 |     470.02 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     496.73 |     234.44 |     151.00 |     145.16 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3477.15 |    5732.24 |    3016.76 |    3071.99 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23625.20 |    9731.45 |    9501.57 |    9901.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    1995.89 |    2151.61 |    1771.98 |    1817.20 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1425.04 |     625.38 |     327.14 |     305.95 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   25461.75 |   12188.64 |   13054.76 |   14429.81 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   21981.31 |   17014.22 |   23869.48 |   22483.58 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10821.46 |    4837.04 |    3114.04 |    4254.46 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    7887.77 |    5126.67 |    4934.60 |    6204.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  100452.86 |   94639.42 |   46657.63 |   60358.63 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  148312.69 |   75485.90 |   88434.91 |  116395.51 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   11698.13 |    8886.96 |    3043.69 |    6302.35 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   10686.40 |    7061.77 |    5646.80 |    7702.29 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      44.26 |      34.43 |      10.40 |      21.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      28.46 |      23.95 |      18.70 |      22.83 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      33.60 |            |       6.94 |      22.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     432.30 |            |     351.47 |     379.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     434.40 |     221.97 |     149.57 |     147.79 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+", "description_content_type": "", "docs_url": null, "download_url": "http://github.com/PawelTroka/ultrajson-x", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/PawelTroka/ultrajson-x", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "ujson-x-legacy", "package_url": "https://pypi.org/project/ujson-x-legacy/", "platform": "any", "project_url": "https://pypi.org/project/ujson-x-legacy/", "project_urls": {"Download": "http://github.com/PawelTroka/ultrajson-x", "Homepage": "http://github.com/PawelTroka/ultrajson-x"}, "release_url": "https://pypi.org/project/ujson-x-legacy/1.35.1/", "requires_dist": null, "requires_python": "", "summary": "Ultra fast JSON encoder and decoder for Python", "version": "1.35.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            UltraJSON-x-legacy<br>=============<br>.. image:: https://travis-ci.org/PawelTroka/ultrajson-x.svg?branch=legacy<br>    :target: https://travis-ci.org/PawelTroka/ultrajson-x?branch=legacy<br><br>UltraJSON-x-legacy is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 2.5+ and 3.<br><br>For a more painless day to day C/C++ JSON decoder experience please checkout ujson4c_, based on UltraJSON.<br><br>.. _ujson4c: http://github.com/esnme/ujson4c/<br><br>| Please checkout the rest of the projects in the Ultra series:<br>| http://github.com/esnme/ultramemcache<br>| http://github.com/esnme/ultramysql<br><br>To install it just run Pip as usual::<br><br>    $ pip install ujson-x-legacy<br><br>============<br>Usage<br>============<br>May be used as a drop in replacement for most other JSON parsers for Python::<br><br>    &gt;&gt;&gt; import ujson<br>    &gt;&gt;&gt; ujson.dumps([{\"key\": \"value\"}, 81, True])<br>    '[{\"key\":\"value\"},81,true]'<br>    &gt;&gt;&gt; ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")<br>    [{u'key': u'value'}, 81, True]<br><br>~~~~~~~~~~~~~~~<br>Encoder options<br>~~~~~~~~~~~~~~~<br>encode_html_chars<br>-----------------<br>Used to enable special encoding of \"unsafe\" HTML characters into safer Unicode sequences. Default is false::<br><br>    &gt;&gt;&gt; ujson.dumps(\"&lt;script&gt;John&amp;Doe\", encode_html_chars=True)<br>    '\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'<br><br>ensure_ascii<br>-------------<br>Limits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space::<br><br>    &gt;&gt;&gt; ujson.dumps(u\"\\xe5\\xe4\\xf6\")<br>    '\"\\\\u00e5\\\\u00e4\\\\u00f6\"'<br>    &gt;&gt;&gt; ujson.dumps(u\"\\xe5\\xe4\\xf6\", ensure_ascii=False)<br>    '\"\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6\"'<br><br>double_precision<br>----------------<br>Controls how many decimals to encode for double or decimal values. Default is 9::<br><br>    &gt;&gt;&gt; ujson.dumps(math.pi)<br>    '3.1415926536'<br>    &gt;&gt;&gt; ujson.dumps(math.pi, double_precision=1)<br>    '3.1'<br>    &gt;&gt;&gt; ujson.dumps(math.pi, double_precision=0)<br>    '3'<br>    &gt;&gt;&gt; ujson.dumps(math.pi, double_precision=4)<br>    '3.1416'<br><br>escape_forward_slashes<br>----------------------<br>Controls whether forward slashes (``/``) are escaped. Default is True::<br><br>    &gt;&gt;&gt; ujson.dumps(\"http://esn.me\")<br>    '\"http:\\/\\/esn.me\"'<br>    &gt;&gt;&gt; ujson.dumps(\"http://esn.me\", escape_forward_slashes=False)<br>    '\"http://esn.me\"'<br><br>indent<br>----------------------<br>Controls whether indention (\"pretty output\") is enabled. Default is 0 (disabled)::<br><br>    &gt;&gt;&gt; ujson.dumps({\"foo\": \"bar\"})<br>    '{\"foo\":\"bar\"}'<br>    &gt;&gt;&gt; ujson.dumps({\"foo\": \"bar\"}, indent=4)<br>    {<br>        \"foo\":\"bar\"<br>    }<br><br>~~~~~~~~~~~~~~~~<br>Decoders options<br>~~~~~~~~~~~~~~~~<br>precise_float<br>-------------<br>Set to enable usage of higher precision (strtod) function when decoding string to double values. Default is to use fast but less precise builtin functionality::<br><br>    &gt;&gt;&gt; ujson.loads(\"4.56\")<br>    4.5600000000000005<br>    &gt;&gt;&gt; ujson.loads(\"4.56\", precise_float=True)<br>    4.5599999999999996<br><br>~~~~~~~~~~~~~<br>Test machine:<br>~~~~~~~~~~~~~<br><br>Linux 3.13.0-66-generic x86_64 #108-Ubuntu SMP Wed Oct 7 15:20:27 UTC 2015<br><br>~~~~~~~~~<br>Versions:<br>~~~~~~~~~<br><br>- CPython 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2]<br>- blist     : 1.3.6<br>- simplejson: 3.8.1<br>- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)<br>- yajl      : 0.3.5<br><br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>|                                                                               | ujson      | yajl       | simplejson | json       |<br>+===============================================================================+============+============+============+============+<br>| Array with 256 doubles                                                        |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |    3508.19 |    5742.00 |    3232.38 |    3309.09 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |   25103.37 |   11257.83 |   11696.26 |   11871.04 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Array with 256 UTF-8 strings                                                  |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |    3189.71 |    2717.14 |    2006.38 |    2961.72 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |    1354.94 |     630.54 |     356.35 |     344.05 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Array with 256 strings                                                        |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |   18127.47 |   12537.39 |   12541.23 |   20001.00 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |   23264.70 |   12788.85 |   25427.88 |    9352.36 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Medium complex object                                                         |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |   10519.38 |    5021.29 |    3686.86 |    4643.47 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |    9676.53 |    5326.79 |    8515.77 |    3017.30 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Array with 256 True values                                                    |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |  105998.03 |  102067.28 |   44758.51 |   60424.80 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |  163869.96 |   78341.57 |  110859.36 |  115013.90 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Array with 256 dict{string, int} pairs                                        |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |   13471.32 |   12109.09 |    3876.40 |    8833.92 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |   16890.63 |    8946.07 |   12218.55 |    3350.72 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |      50.25 |      46.45 |      13.82 |      29.28 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |      33.27 |      22.10 |      27.91 |      10.43 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |      27.19 |            |       7.75 |       2.39 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Complex object                                                                |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |     577.98 |            |     387.81 |     470.02 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |     496.73 |     234.44 |     151.00 |     145.16 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br><br>~~~~~~~~~<br>Versions:<br>~~~~~~~~~<br><br>- CPython 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4]<br>- blist     : 1.3.6<br>- simplejson: 3.8.1<br>- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)<br>- yajl      : 0.3.5<br><br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>|                                                                               | ujson      | yajl       | simplejson | json       |<br>+===============================================================================+============+============+============+============+<br>| Array with 256 doubles                                                        |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |    3477.15 |    5732.24 |    3016.76 |    3071.99 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |   23625.20 |    9731.45 |    9501.57 |    9901.92 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Array with 256 UTF-8 strings                                                  |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |    1995.89 |    2151.61 |    1771.98 |    1817.20 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |    1425.04 |     625.38 |     327.14 |     305.95 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Array with 256 strings                                                        |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |   25461.75 |   12188.64 |   13054.76 |   14429.81 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |   21981.31 |   17014.22 |   23869.48 |   22483.58 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Medium complex object                                                         |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |   10821.46 |    4837.04 |    3114.04 |    4254.46 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |    7887.77 |    5126.67 |    4934.60 |    6204.97 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Array with 256 True values                                                    |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |  100452.86 |   94639.42 |   46657.63 |   60358.63 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |  148312.69 |   75485.90 |   88434.91 |  116395.51 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Array with 256 dict{string, int} pairs                                        |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |   11698.13 |    8886.96 |    3043.69 |    6302.35 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |   10686.40 |    7061.77 |    5646.80 |    7702.29 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |      44.26 |      34.43 |      10.40 |      21.97 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |      28.46 |      23.95 |      18.70 |      22.83 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |      33.60 |            |       6.94 |      22.34 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| Complex object                                                                |            |            |            |            |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| encode                                                                        |     432.30 |            |     351.47 |     379.34 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+<br>| decode                                                                        |     434.40 |     221.97 |     149.57 |     147.79 |<br>+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n          </div>"}, "last_serial": 4953776, "releases": {"1.35.1": [{"comment_text": "", "digests": {"md5": "44eab7a47904e3d508a7c4e7cbe46e4a", "sha256": "6374045f888c3492bc7d655d4b9444043b8f4ac913b778e1d6701f11687dd7e5"}, "downloads": -1, "filename": "ujson-x-legacy-1.35.1.tar.gz", "has_sig": false, "md5_digest": "44eab7a47904e3d508a7c4e7cbe46e4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 192001, "upload_time": "2019-03-18T12:56:14", "upload_time_iso_8601": "2019-03-18T12:56:14.698621Z", "url": "https://files.pythonhosted.org/packages/4d/31/1e5b2767c79c03aa7a837f3119d0078f177a5983a42bb3593a207eb0325d/ujson-x-legacy-1.35.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44eab7a47904e3d508a7c4e7cbe46e4a", "sha256": "6374045f888c3492bc7d655d4b9444043b8f4ac913b778e1d6701f11687dd7e5"}, "downloads": -1, "filename": "ujson-x-legacy-1.35.1.tar.gz", "has_sig": false, "md5_digest": "44eab7a47904e3d508a7c4e7cbe46e4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 192001, "upload_time": "2019-03-18T12:56:14", "upload_time_iso_8601": "2019-03-18T12:56:14.698621Z", "url": "https://files.pythonhosted.org/packages/4d/31/1e5b2767c79c03aa7a837f3119d0078f177a5983a42bb3593a207eb0325d/ujson-x-legacy-1.35.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:41:20 2020"}