{"info": {"author": "Flask-Admin team", "author_email": "serge.koval+github@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-Admin\n===========\n\nThe project was recently moved into its own organization. Please update your\nreferences to *git@github.com:flask-admin/flask-admin.git*.\n\n.. image:: https://d322cqt584bo4o.cloudfront.net/flask-admin/localized.svg\n\t:target: https://crowdin.com/project/flask-admin\n\n.. image:: https://travis-ci.org/flask-admin/flask-admin.svg?branch=master\n\t:target: https://travis-ci.org/flask-admin/flask-admin\n\nIntroduction\n------------\n\nFlask-Admin is a batteries-included, simple-to-use `Flask <http://flask.pocoo.org/>`_ extension that lets you\nadd admin interfaces to Flask applications. It is inspired by the *django-admin* package, but implemented in such\na way that the developer has total control of the look, feel and functionality of the resulting application.\n\nOut-of-the-box, Flask-Admin plays nicely with various ORM's, including\n\n- `SQLAlchemy <http://www.sqlalchemy.org/>`_,\n\n- `MongoEngine <http://mongoengine.org/>`_,\n\n- `pymongo <http://api.mongodb.org/python/current/>`_ and\n\n- `Peewee <https://github.com/coleifer/peewee>`_.\n\nIt also boasts a simple file management interface and a `redis client <http://redis.io/>`_ console.\n\nThe biggest feature of Flask-Admin is flexibility. It aims to provide a set of simple tools that can be used for\nbuilding admin interfaces of any complexity. So, to start off with you can create a very simple application in no time,\nwith auto-generated CRUD-views for each of your models. But then you can go further and customize those views & forms\nas the need arises.\n\nFlask-Admin is an active project, well-tested and production ready.\n\nExamples\n--------\nSeveral usage examples are included in the */examples* folder. Please add your own, or improve\non the existing examples, and submit a *pull-request*.\n\nTo run the examples in your local environment::\n\n  1. Clone the repository::\n\n        git clone https://github.com/flask-admin/flask-admin.git\n        cd flask-admin\n\n  2. Create and activate a virtual environment::\n\n        virtualenv env -p python3\n        source env/bin/activate\n\n  3. Install requirements::\n\n        pip install -r 'examples/sqla/requirements.txt'\n\n  4. Run the application::\n\n        python examples/sqla/app.py\n\nDocumentation\n-------------\nFlask-Admin is extensively documented, you can find all of the documentation at `https://flask-admin.readthedocs.io/en/latest/ <https://flask-admin.readthedocs.io/en/latest/>`_.\n\nThe docs are auto-generated from the *.rst* files in the */doc* folder. So if you come across any errors, or\nif you think of anything else that should be included, then please make the changes and submit them as a *pull-request*.\n\nTo build the docs in your local environment, from the project directory::\n\n    tox -e docs-html\n\nAnd if you want to preview any *.rst* snippets that you may want to contribute, go to `http://rst.ninjs.org/ <http://rst.ninjs.org/>`_.\n\nInstallation\n------------\nTo install Flask-Admin, simply::\n\n    pip install flask-admin\n\nOr alternatively, you can download the repository and install manually by doing::\n\n    git clone git@github.com:flask-admin/flask-admin.git\n    cd flask-admin\n    python setup.py install\n\nTests\n-----\nTest are run with *nose*. If you are not familiar with this package you can get some more info from `their website <https://nose.readthedocs.io/>`_.\n\nTo run the tests, from the project directory, simply::\n\n    pip install -r requirements-dev.txt\n    nosetests\n\nYou should see output similar to::\n\n    .............................................\n    ----------------------------------------------------------------------\n    Ran 102 tests in 13.132s\n\n    OK\n\nFor all the tests to pass successfully, you'll need Postgres & MongoDB to be running locally. For Postgres::\n\n    > psql postgres\n    CREATE DATABASE flask_admin_test;\n    \\q\n\n    > psql flask_admin_test\n    CREATE EXTENSION postgis;\n    CREATE EXTENSION hstore;\n\nYou can also run the tests on multiple environments using *tox*.\n\n3rd Party Stuff\n---------------\n\nFlask-Admin is built with the help of `Bootstrap <http://getbootstrap.com/>`_,  `Select2 <https://github.com/ivaynberg/select2>`_\nand `Bootswatch <http://bootswatch.com/>`_.\n\nIf you want to localize your application, install the `Flask-BabelEx <https://pypi.python.org/pypi/Flask-BabelEx>`_ package.\n\nYou can help improve Flask-Admin's translations through Crowdin: https://crowdin.com/project/flask-admin\n\n\nChangelog\n=========\n\n1.5.3\n-----\n\n* Fixed XSS vulnerability\n* Support nested categories in the navbar menu\n* SQLAlchemy\n    * sort on multiple columns with `column_default_sort`\n    * sort on related models in `column_sortable_list`\n    * fix: inline model forms can now also be used for models with multiple primary keys\n    * support for using mapped `column_property`\n* Upgrade Leaflet and Leaflet.draw plugins, used for geoalchemy integration\n* Specify `minimum_input_length` for ajax widget\n* Peewee: support composite keys\n* MongoEngine: when searching/filtering the input is now regarded as case-insensitive by default\n* FileAdmin\n    * handle special characters in filename\n    * fix a bug with listing directories on Windows\n    * avoid raising an exception when unknown sort parameter is encountered\n* WTForms 3 support\n\n1.5.2\n-----\n\n* Fixed XSS vulnerability\n* Fixed Peewee support\n* Added detail view column formatters\n* Updated Flask-Login example to work with the newer version of the library\n* Various SQLAlchemy-related fixes\n* Various Windows related fixes for the file admin\n\n1.5.1\n-----\n\n* Dropped Python 2.6 support\n* Fixed SQLAlchemy >= 1.2 compatibility\n* Fixed Pewee 3.0 compatibility\n* Fixed max year for a combo date inline editor\n* Lots of small bug fixes\n\n1.5.0\n-----\n\n* Fixed CSRF generation logic for multi-process deployments\n* Added WTForms >= 3.0 support\n* Flask-Admin would not recursively save inline models, allowing arbitrary nesting\n* Added configuration properties that allow injection of additional CSS and JS dependencies into templates without overriding them\n* SQLAlchemy backend\n  - Updated hybrid property detection using new SQLAlchemy APIs\n  - Added support for association proxies\n  - Added support for remote hybrid properties filters\n  - Added support for ARRAY column type\n* Localization-related fixes\n* MongoEngine backend is now properly formats model labels\n* Improved Google App Engine support:\n  - Added TextProperty, KeyProperty and SelectField support\n  - Added support for form_args, excluded_columns, page_size and after_model_update\n* Fixed URL generation with localized named filters\n* FileAdmin has Bootstrap 2 support now\n* Geoalchemy fixes\n  - Use Google Places (by default) for place search\n* Updated translations\n* Bug fixes\n\n1.4.2\n-----\n* Small bug fix release. Fixes regression that prevented usage of \"virtual\" columns with a custom formatter.\n\n1.4.1\n-----\n\n* Official Python 3.5 support\n* Customizable row actions\n* Tablib support (exporting to XLS, XLSX, CSV, etc)\n* Updated external dependencies (jQuery, x-editable, etc)\n* Added settings that allows exceptions to be raised on view errors\n* Bug fixes\n\n1.4.0\n-----\n\n* Updated and reworked documentation\n* FileAdmin went through minor refactoring and now supports remote file systems. Comes with the new, optional, AWS S3 file management interface\n* Configurable CSV export for model views\n* Added overridable URL generation logic. Allows using custom URLs with parameters for administrative views\n* Added column_display_actions to ModelView control visibility of the action column without overriding the template\n* Added support for the latest MongoEngine\n* New SecureForm base class for easier CSRF validation\n* Lots of translation-related fixes and updated translations\n* Bug fixes\n\n1.3.0\n-----\n\n* New feature: Edit models in the list view in a popup\n* New feature: Read-only model details view\n* Fixed XSS in column_editable_list values\n* Improved navigation consistency in model create and edit views\n* Ability to choose page size in model list view\n* Updated client-side dependencies (jQuery, Select2, etc)\n* Updated documentation and examples\n* Updated translations\n* Bug fixes\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/flask-admin/flask-admin/", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "oy-libs-Flask-Admin", "package_url": "https://pypi.org/project/oy-libs-Flask-Admin/", "platform": "any", "project_url": "https://pypi.org/project/oy-libs-Flask-Admin/", "project_urls": {"Homepage": "https://github.com/flask-admin/flask-admin/"}, "release_url": "https://pypi.org/project/oy-libs-Flask-Admin/1.5.3/", "requires_dist": ["Flask (>=0.7)", "wtforms", "boto ; extra == 'aws'", "azure-storage-blob ; extra == 'azure'"], "requires_python": "", "summary": "Simple and extensible admin interface framework for Flask", "version": "1.5.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"flask-admin\">\n<h2>Flask-Admin</h2>\n<p>The project was recently moved into its own organization. Please update your\nreferences to <em>git@github.com:flask-admin/flask-admin.git</em>.</p>\n<a href=\"https://crowdin.com/project/flask-admin\" rel=\"nofollow\"><img alt=\"https://d322cqt584bo4o.cloudfront.net/flask-admin/localized.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d518d8e9601c5c20541948543fe0b99a5497ff2c/68747470733a2f2f64333232637174353834626f346f2e636c6f756466726f6e742e6e65742f666c61736b2d61646d696e2f6c6f63616c697a65642e737667\"></a>\n<a href=\"https://travis-ci.org/flask-admin/flask-admin\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/flask-admin/flask-admin.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/325d56a40a8769e11d70d3ae791337106f63b0c4/68747470733a2f2f7472617669732d63692e6f72672f666c61736b2d61646d696e2f666c61736b2d61646d696e2e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n<p>Flask-Admin is a batteries-included, simple-to-use <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> extension that lets you\nadd admin interfaces to Flask applications. It is inspired by the <em>django-admin</em> package, but implemented in such\na way that the developer has total control of the look, feel and functionality of the resulting application.</p>\n<p>Out-of-the-box, Flask-Admin plays nicely with various ORM\u2019s, including</p>\n<ul>\n<li><a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a>,</li>\n<li><a href=\"http://mongoengine.org/\" rel=\"nofollow\">MongoEngine</a>,</li>\n<li><a href=\"http://api.mongodb.org/python/current/\" rel=\"nofollow\">pymongo</a> and</li>\n<li><a href=\"https://github.com/coleifer/peewee\" rel=\"nofollow\">Peewee</a>.</li>\n</ul>\n<p>It also boasts a simple file management interface and a <a href=\"http://redis.io/\" rel=\"nofollow\">redis client</a> console.</p>\n<p>The biggest feature of Flask-Admin is flexibility. It aims to provide a set of simple tools that can be used for\nbuilding admin interfaces of any complexity. So, to start off with you can create a very simple application in no time,\nwith auto-generated CRUD-views for each of your models. But then you can go further and customize those views &amp; forms\nas the need arises.</p>\n<p>Flask-Admin is an active project, well-tested and production ready.</p>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Several usage examples are included in the <em>/examples</em> folder. Please add your own, or improve\non the existing examples, and submit a <em>pull-request</em>.</p>\n<p>To run the examples in your local environment:</p>\n<pre>1. Clone the repository::\n\n      git clone https://github.com/flask-admin/flask-admin.git\n      cd flask-admin\n\n2. Create and activate a virtual environment::\n\n      virtualenv env -p python3\n      source env/bin/activate\n\n3. Install requirements::\n\n      pip install -r 'examples/sqla/requirements.txt'\n\n4. Run the application::\n\n      python examples/sqla/app.py\n</pre>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Flask-Admin is extensively documented, you can find all of the documentation at <a href=\"https://flask-admin.readthedocs.io/en/latest/\" rel=\"nofollow\">https://flask-admin.readthedocs.io/en/latest/</a>.</p>\n<p>The docs are auto-generated from the <em>.rst</em> files in the <em>/doc</em> folder. So if you come across any errors, or\nif you think of anything else that should be included, then please make the changes and submit them as a <em>pull-request</em>.</p>\n<p>To build the docs in your local environment, from the project directory:</p>\n<pre>tox -e docs-html\n</pre>\n<p>And if you want to preview any <em>.rst</em> snippets that you may want to contribute, go to <a href=\"http://rst.ninjs.org/\" rel=\"nofollow\">http://rst.ninjs.org/</a>.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To install Flask-Admin, simply:</p>\n<pre>pip install flask-admin\n</pre>\n<p>Or alternatively, you can download the repository and install manually by doing:</p>\n<pre>git clone git@github.com:flask-admin/flask-admin.git\ncd flask-admin\npython setup.py install\n</pre>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p>Test are run with <em>nose</em>. If you are not familiar with this package you can get some more info from <a href=\"https://nose.readthedocs.io/\" rel=\"nofollow\">their website</a>.</p>\n<p>To run the tests, from the project directory, simply:</p>\n<pre>pip install -r requirements-dev.txt\nnosetests\n</pre>\n<p>You should see output similar to:</p>\n<pre>.............................................\n----------------------------------------------------------------------\nRan 102 tests in 13.132s\n\nOK\n</pre>\n<p>For all the tests to pass successfully, you\u2019ll need Postgres &amp; MongoDB to be running locally. For Postgres:</p>\n<pre>&gt; psql postgres\nCREATE DATABASE flask_admin_test;\n\\q\n\n&gt; psql flask_admin_test\nCREATE EXTENSION postgis;\nCREATE EXTENSION hstore;\n</pre>\n<p>You can also run the tests on multiple environments using <em>tox</em>.</p>\n</div>\n<div id=\"rd-party-stuff\">\n<h3>3rd Party Stuff</h3>\n<p>Flask-Admin is built with the help of <a href=\"http://getbootstrap.com/\" rel=\"nofollow\">Bootstrap</a>,  <a href=\"https://github.com/ivaynberg/select2\" rel=\"nofollow\">Select2</a>\nand <a href=\"http://bootswatch.com/\" rel=\"nofollow\">Bootswatch</a>.</p>\n<p>If you want to localize your application, install the <a href=\"https://pypi.python.org/pypi/Flask-BabelEx\" rel=\"nofollow\">Flask-BabelEx</a> package.</p>\n<p>You can help improve Flask-Admin\u2019s translations through Crowdin: <a href=\"https://crowdin.com/project/flask-admin\" rel=\"nofollow\">https://crowdin.com/project/flask-admin</a></p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.5.3</h3>\n<ul>\n<li>Fixed XSS vulnerability</li>\n<li>Support nested categories in the navbar menu</li>\n<li><dl>\n<dt>SQLAlchemy</dt>\n<dd><ul>\n<li>sort on multiple columns with <cite>column_default_sort</cite></li>\n<li>sort on related models in <cite>column_sortable_list</cite></li>\n<li>fix: inline model forms can now also be used for models with multiple primary keys</li>\n<li>support for using mapped <cite>column_property</cite></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Upgrade Leaflet and Leaflet.draw plugins, used for geoalchemy integration</li>\n<li>Specify <cite>minimum_input_length</cite> for ajax widget</li>\n<li>Peewee: support composite keys</li>\n<li>MongoEngine: when searching/filtering the input is now regarded as case-insensitive by default</li>\n<li><dl>\n<dt>FileAdmin</dt>\n<dd><ul>\n<li>handle special characters in filename</li>\n<li>fix a bug with listing directories on Windows</li>\n<li>avoid raising an exception when unknown sort parameter is encountered</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>WTForms 3 support</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.5.2</h3>\n<ul>\n<li>Fixed XSS vulnerability</li>\n<li>Fixed Peewee support</li>\n<li>Added detail view column formatters</li>\n<li>Updated Flask-Login example to work with the newer version of the library</li>\n<li>Various SQLAlchemy-related fixes</li>\n<li>Various Windows related fixes for the file admin</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.5.1</h3>\n<ul>\n<li>Dropped Python 2.6 support</li>\n<li>Fixed SQLAlchemy &gt;= 1.2 compatibility</li>\n<li>Fixed Pewee 3.0 compatibility</li>\n<li>Fixed max year for a combo date inline editor</li>\n<li>Lots of small bug fixes</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.5.0</h3>\n<ul>\n<li>Fixed CSRF generation logic for multi-process deployments</li>\n<li>Added WTForms &gt;= 3.0 support</li>\n<li>Flask-Admin would not recursively save inline models, allowing arbitrary nesting</li>\n<li>Added configuration properties that allow injection of additional CSS and JS dependencies into templates without overriding them</li>\n<li>SQLAlchemy backend\n- Updated hybrid property detection using new SQLAlchemy APIs\n- Added support for association proxies\n- Added support for remote hybrid properties filters\n- Added support for ARRAY column type</li>\n<li>Localization-related fixes</li>\n<li>MongoEngine backend is now properly formats model labels</li>\n<li>Improved Google App Engine support:\n- Added TextProperty, KeyProperty and SelectField support\n- Added support for form_args, excluded_columns, page_size and after_model_update</li>\n<li>Fixed URL generation with localized named filters</li>\n<li>FileAdmin has Bootstrap 2 support now</li>\n<li>Geoalchemy fixes\n- Use Google Places (by default) for place search</li>\n<li>Updated translations</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.4.2</h3>\n<ul>\n<li>Small bug fix release. Fixes regression that prevented usage of \u201cvirtual\u201d columns with a custom formatter.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.4.1</h3>\n<ul>\n<li>Official Python 3.5 support</li>\n<li>Customizable row actions</li>\n<li>Tablib support (exporting to XLS, XLSX, CSV, etc)</li>\n<li>Updated external dependencies (jQuery, x-editable, etc)</li>\n<li>Added settings that allows exceptions to be raised on view errors</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.4.0</h3>\n<ul>\n<li>Updated and reworked documentation</li>\n<li>FileAdmin went through minor refactoring and now supports remote file systems. Comes with the new, optional, AWS S3 file management interface</li>\n<li>Configurable CSV export for model views</li>\n<li>Added overridable URL generation logic. Allows using custom URLs with parameters for administrative views</li>\n<li>Added column_display_actions to ModelView control visibility of the action column without overriding the template</li>\n<li>Added support for the latest MongoEngine</li>\n<li>New SecureForm base class for easier CSRF validation</li>\n<li>Lots of translation-related fixes and updated translations</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.3.0</h3>\n<ul>\n<li>New feature: Edit models in the list view in a popup</li>\n<li>New feature: Read-only model details view</li>\n<li>Fixed XSS in column_editable_list values</li>\n<li>Improved navigation consistency in model create and edit views</li>\n<li>Ability to choose page size in model list view</li>\n<li>Updated client-side dependencies (jQuery, Select2, etc)</li>\n<li>Updated documentation and examples</li>\n<li>Updated translations</li>\n<li>Bug fixes</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4810412, "releases": {"1.5.3": [{"comment_text": "", "digests": {"md5": "932552c29a6e4ef4c46d7bb23f237c04", "sha256": "6fc30b397b4ccaf007cb92dae5d5d9ef3800381ac1ec86fd49948c86883fb338"}, "downloads": -1, "filename": "oy_libs_Flask_Admin-1.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "932552c29a6e4ef4c46d7bb23f237c04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1857236, "upload_time": "2019-02-12T11:49:14", "upload_time_iso_8601": "2019-02-12T11:49:14.363744Z", "url": "https://files.pythonhosted.org/packages/2c/db/f84fe1d68305321e23812ca36923e6aed097c716f0b3b2e9e0076dc384ec/oy_libs_Flask_Admin-1.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "939692b3b95618d98097267332bf8ade", "sha256": "9869159f6578f258098c8493a659ee1bb505772762ef02d3cdfcf5fe50024565"}, "downloads": -1, "filename": "oy-libs-Flask-Admin-1.5.3.tar.gz", "has_sig": false, "md5_digest": "939692b3b95618d98097267332bf8ade", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1661172, "upload_time": "2019-02-12T12:02:44", "upload_time_iso_8601": "2019-02-12T12:02:44.930795Z", "url": "https://files.pythonhosted.org/packages/bf/79/6eb964fabbd9e00961d51ea625b74430d64f0d96d4605392924ae9707ccb/oy-libs-Flask-Admin-1.5.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "932552c29a6e4ef4c46d7bb23f237c04", "sha256": "6fc30b397b4ccaf007cb92dae5d5d9ef3800381ac1ec86fd49948c86883fb338"}, "downloads": -1, "filename": "oy_libs_Flask_Admin-1.5.3-py3-none-any.whl", "has_sig": false, "md5_digest": "932552c29a6e4ef4c46d7bb23f237c04", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 1857236, "upload_time": "2019-02-12T11:49:14", "upload_time_iso_8601": "2019-02-12T11:49:14.363744Z", "url": "https://files.pythonhosted.org/packages/2c/db/f84fe1d68305321e23812ca36923e6aed097c716f0b3b2e9e0076dc384ec/oy_libs_Flask_Admin-1.5.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "939692b3b95618d98097267332bf8ade", "sha256": "9869159f6578f258098c8493a659ee1bb505772762ef02d3cdfcf5fe50024565"}, "downloads": -1, "filename": "oy-libs-Flask-Admin-1.5.3.tar.gz", "has_sig": false, "md5_digest": "939692b3b95618d98097267332bf8ade", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1661172, "upload_time": "2019-02-12T12:02:44", "upload_time_iso_8601": "2019-02-12T12:02:44.930795Z", "url": "https://files.pythonhosted.org/packages/bf/79/6eb964fabbd9e00961d51ea625b74430d64f0d96d4605392924ae9707ccb/oy-libs-Flask-Admin-1.5.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:26 2020"}