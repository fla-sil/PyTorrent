{"info": {"author": "Thomas Robitaille", "author_email": "thomas.robitaille@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "A PyPI time machine\n-------------------\n\nDo you wish you could just install packages with pip as if you were at\nsome fixed date in the past? If so, the PyPI time machine is for you!\n\nInstalling\n~~~~~~~~~~\n\nTo install::\n\n   pip install pypi-timemachine\n\nUsing\n~~~~~\n\nOnce installed, you can run a PyPI server with::\n\n   pypi-timemachine 2014-02-03\n\nor if you need to specify a precise time (in UTC)::\n\n   pypi-timemachine 2014-02-03T12:33:02\n\nThis will start up a Flask app, and will print out a line such as::\n\n   Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n\nYou can then call pip with::\n\n   pip install --index-url http://127.0.0.1:5000/ astropy\n\nand this will then install the requested packages and all dependencies,\nignoring any releases after the cutoff date specified above.\n\nCaveats/warnings\n~~~~~~~~~~~~~~~~\n\nIf a package is already installed, pip will not try installing it again.\nThis means that if e.g.\u00a0you try and run pip as described above, but the\npackage you are trying to install (or any of its dependencies) is\nalready installed, no matter how recent the version, it will not be\ninstalled again. Therefore, I recommend using pip with the custom index\nURL inside a clean environment (but you can run the ``pypi-timemachine``\ncommand inside your regular environment.)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/astrofrog/pypi-timemachine", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pypi-timemachine", "package_url": "https://pypi.org/project/pypi-timemachine/", "platform": "", "project_url": "https://pypi.org/project/pypi-timemachine/", "project_urls": {"Homepage": "https://github.com/astrofrog/pypi-timemachine"}, "release_url": "https://pypi.org/project/pypi-timemachine/0.1/", "requires_dist": ["click", "requests", "flask"], "requires_python": "", "summary": "Run a PyPI server from the past", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Do you wish you could just install packages with pip as if you were at\nsome fixed date in the past? If so, the PyPI time machine is for you!</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>To install:</p>\n<pre>pip install pypi-timemachine\n</pre>\n</div>\n<div id=\"using\">\n<h2>Using</h2>\n<p>Once installed, you can run a PyPI server with:</p>\n<pre>pypi-timemachine 2014-02-03\n</pre>\n<p>or if you need to specify a precise time (in UTC):</p>\n<pre>pypi-timemachine 2014-02-03T12:33:02\n</pre>\n<p>This will start up a Flask app, and will print out a line such as:</p>\n<pre>Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n</pre>\n<p>You can then call pip with:</p>\n<pre>pip install --index-url http://127.0.0.1:5000/ astropy\n</pre>\n<p>and this will then install the requested packages and all dependencies,\nignoring any releases after the cutoff date specified above.</p>\n</div>\n<div id=\"caveats-warnings\">\n<h2>Caveats/warnings</h2>\n<p>If a package is already installed, pip will not try installing it again.\nThis means that if e.g.\u00a0you try and run pip as described above, but the\npackage you are trying to install (or any of its dependencies) is\nalready installed, no matter how recent the version, it will not be\ninstalled again. Therefore, I recommend using pip with the custom index\nURL inside a clean environment (but you can run the <tt><span class=\"pre\">pypi-timemachine</span></tt>\ncommand inside your regular environment.)</p>\n</div>\n\n          </div>"}, "last_serial": 5513923, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "225b00e2782fe1f285542f900498d477", "sha256": "ca1d632657ac05946159b8adf475a7dc04b139e4a2a541c0505ac634ec5b59c4"}, "downloads": -1, "filename": "pypi_timemachine-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "225b00e2782fe1f285542f900498d477", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4391, "upload_time": "2019-07-10T20:39:33", "upload_time_iso_8601": "2019-07-10T20:39:33.712704Z", "url": "https://files.pythonhosted.org/packages/ba/7d/dfe94a964bf94045bba12929a3a5c566f9b1cb41639c580777ef7799e10c/pypi_timemachine-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63fd75b10c7681384b4ea05893678a46", "sha256": "48a9ba7c9d814a9a0279195fc700f7a3117ec259a19c36bd75523317ebd9a589"}, "downloads": -1, "filename": "pypi-timemachine-0.1.tar.gz", "has_sig": false, "md5_digest": "63fd75b10c7681384b4ea05893678a46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3418, "upload_time": "2019-07-10T20:39:36", "upload_time_iso_8601": "2019-07-10T20:39:36.109610Z", "url": "https://files.pythonhosted.org/packages/4c/82/2e8dab5867646821a8d05200907a99fa07041dabc7cde2776f7a767364fe/pypi-timemachine-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "225b00e2782fe1f285542f900498d477", "sha256": "ca1d632657ac05946159b8adf475a7dc04b139e4a2a541c0505ac634ec5b59c4"}, "downloads": -1, "filename": "pypi_timemachine-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "225b00e2782fe1f285542f900498d477", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4391, "upload_time": "2019-07-10T20:39:33", "upload_time_iso_8601": "2019-07-10T20:39:33.712704Z", "url": "https://files.pythonhosted.org/packages/ba/7d/dfe94a964bf94045bba12929a3a5c566f9b1cb41639c580777ef7799e10c/pypi_timemachine-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63fd75b10c7681384b4ea05893678a46", "sha256": "48a9ba7c9d814a9a0279195fc700f7a3117ec259a19c36bd75523317ebd9a589"}, "downloads": -1, "filename": "pypi-timemachine-0.1.tar.gz", "has_sig": false, "md5_digest": "63fd75b10c7681384b4ea05893678a46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3418, "upload_time": "2019-07-10T20:39:36", "upload_time_iso_8601": "2019-07-10T20:39:36.109610Z", "url": "https://files.pythonhosted.org/packages/4c/82/2e8dab5867646821a8d05200907a99fa07041dabc7cde2776f7a767364fe/pypi-timemachine-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:27 2020"}