{"info": {"author": "Vitalij Gotovskij", "author_email": "vitalij@cdeveloper.eu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Build Tools"], "description": "![Upload Python Package](https://github.com/vitalij555/event-notifier/workflows/Upload%20Python%20Package/badge.svg)\n\n# event-notifier\n\nLibrary providing event registration and routing infrastructure.\n\n## Contents\n\n- [Background](#background)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Constructor](#constructor)\n- [API Overview](#api-overview)\n- [Tests](#tests)\n- [License](#license)\n- [Contributing](#contributing)\n\n## Background\n\nThis is implementation of event notifier (also known as emitter or dispatcher) allowing to notify one or more subscribers of an event that just happen.\n\nAny python object inheriting from or containing notifier can act as event sender and any callable object can act as event receiver.\nAllows to register receivers having variable number of arguments. \n\nIt is thread-safe. This means you can freely rise events from one thread while registering new receivers in another.\n\n\n## Installation\n\n```\npip install -U event-notifier\n```\n\n## Usage\n\n```python\nfrom EventNotifier import Notifier\n\n\nclass FileWatchDog():\n\tdef onOpen(self, fileName, openMode):\n\t\tprint(f\"File {fileName} opened with {openMode} mode\")\n\n\n\tdef onClose(self, fileName):\n\t\tprint(f\"File {fileName} closed\")\n\n\nwatchDog = FileWatchDog()\t\n\n\nnotifier = Notifier([\"onCreate\", \"onOpen\", \"onModify\", \"onClose\", \"onDelete\"])\n\nnotifier.subscribe(\"onOpen\",  watchDog.onOpen)\nnotifier.subscribe(\"onClose\", watchDog.onClose)\n\nnotifier.fireEvent(\"onOpen\", openMode=\"w+\", fileName=\"test_file.txt\")  # order of named parameters is not important\nnotifier.fireEvent(\"onClose\", fileName=\"test_file.txt\")\n```\nWill produce:\n```console\n$ python test.py\nFile test_file.txt opened with w+ mode\nFile test_file.txt closed\n```\n\n## Constructor\n\n```python\nNotifier(eventNames, logger=None)\n```\n\n**Parameters**\n\n- `eventNames` - `list of any` - mandatory, provides list of all supported events. Values provided here can be used for raising events later.\n Values provided in this list can be of any type.\n- `logger` - `object` - optional, logger supporting standard logging methods (info, warning error, etc..), default: `None`. \nIf None is provided, then internal logger outputting warnings and errors to console will be created.\n\n\n**Example**\n\nAny object can be used as event name. Example below illustrates that:\n\n```python\nclass Box:\n    def __init__(self, name):\n        self.name = name\n\na = Box(\"name_BoxA\")\nb = Box(\"name_BoxB\")\n\n\nnotifier = Notifier([\"onCreate\", 5, 22.58, \"onDelete\", a, b])\n\nnotifier.subscribe(\"onCreate\", onCreateCallback)\nnotifier.subscribe(5, on5Callback)\nnotifier.subscribe(22.58, onFloatCallback)\nnotifier.subscribe(a, onBoxACallback)\nnotifier.subscribe(b, onBoxBCallback)\n\n\nnotifier.fireEvent(5, \"event: ! 5 !\")  # on5Callback will be called with \"event: ! 5 !\" as parameter\nnotifier.fireEvent(22.58, \"event: ! 22.58 !\")    # onFloatCallback will be called with \"event: ! 22.58 !\" as parameter\nnotifier.fireEvent(b, \"event: Box b\")   # onBoxBCallback will be called with \"event: Box b\" as parameter\n```\n\n\n## API Overview\n\n### subscribe(eventName, subscriber)\n\n**Description**\n\nAdds callable subscribers interested in some particular event. \n\n**Parameters**\n\n- `eventName` - `any` - mandatory, specifies event, subscriber will be interested in.\n- `subscriber` - `any` - mandatory, callable subscriber (function, class method or class with __call__ implemented)\n\n**Example**\n\n```python\nclass CallableFileWatchdog:\n\tdef __init__(self, pathToWatch):\n\t\tself.pathToWatch = pathToWatch\n\n\n\tdef __call__(self, *args, **kwargs):\n\t\tif len(args) > 0:\n\t\t\tprint(f\"Event {args[0]} at path {self.pathToWatch} is called with following simple args: {[*args]} and with following keyword args: { {**kwargs} }\")\n\n\ncallableWatchdog = CallableFileWatchdog(\"some\\path\\here\")\n\n\nnotifier.subscribe(\"onCreate\", callableWatchdog)\nnotifier.subscribe(\"onOpen\",   callableWatchdog)\n\n\nnotifier.fireEvent(\"onCreate\", \"onCreate\", fileName=\"test_file.txt\")\nnotifier.fireEvent(\"onOpen\", \"onOpen\", openMode=\"w+\", fileName=\"test_file.txt\") \n```\ngives:\n```console\nEvent onCreate at path some\\path\\here is called with following simple args: ['onCreate'] and with following keyword args: {'fileName': 'test_file.txt'}\nEvent onOpen at path some\\path\\here is called with following simple args: ['onOpen'] and with following keyword args: {'openMode': 'w+', 'fileName': 'test_file.txt'}\n```\n\n### subscribeToAll(subscriber):\n\n**Description**\n\nMethod allows to register one callable for all events supported by notifier.\n\n**Parameters**\n\n- `subscriber` - `callable` - mandatory, will be called when event rises.\n\n**Example**\n\n\n\n### getSupportedEvents():\n\n**Description**\n\nReturns all supported events as a list.\n\n**Example**\n\n```python\nfrom EventNotifier import Notifier\n\nnotifier = Notifier([\"onCreate\", \"onOpen\", \"onModify\", \"onClose\", \"onDelete\"])\nprint(notifier.getSupportedEvents())\n```\nwill output:\n```console\n['onCreate', 'onOpen', 'onModify', 'onClose', 'onDelete']\n```\n\n### fireEvent(eventName, *args, **kwargs)\n\n**Description**\n\nRises specific event registered during initialization.\n\n**Parameters**\n\n- `eventName` - `any` - mandatory, provides list of all supported events. Values provided here later can be used for raising events  \n- `*args` - `list` - optional, all simple parameters we want to pass to our subscribers (param1, param2, param3...).\n- `**kwargs` - `dictionary` - optional, all named parameters we want to pass (param1=value1, param2=value2, param3=value3) \n\n**Example**\n\n```python\n\n```\n\n```console\n\n```\n\n### removeSubscribersByEventName(eventName)\n\n**Description**\n\n**Parameters**\n\n\n\n**Example**\n\n```python\n\n```\n\n```console\n\n```\n\n### removeAllSubscribers()\n\n**Description**\n\n\n**Example**\n\n```python\n\n```\n\n```console\n\n```\n\n\n\n## Tests\n\n[PyTest][pytest] is used for tests. Python 2 is not supported.\n\n**Install PyTest**\n\n```sh\n$ pip install pytest\n```\n\n**Run tests**\n\n```sh\n$ pytest test/*\n```\n\n[pytest]: http://pytest.org/\n\n**Check test coverage**\n\nIn order to generate test coverage report install pytest-cov:\n\n```sh\n$ pip install pytest-cov\n```\n\nThen inside test subdirectory call: \n\n```sh\npytest --cov=../EventNotifier --cov-report=html\n```\n\n## License\n\nLicense\nCopyright (C) 2020 Vitalij Gotovskij\n\nevent-notifier binaries and source code can be used according to the MIT License\n\n\n## Contribute\nTBD\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vitalij555/event-notifier", "keywords": "EVENT,NOTIFY,SUBSCRIBE,OBSERVER", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "event-notifier", "package_url": "https://pypi.org/project/event-notifier/", "platform": "", "project_url": "https://pypi.org/project/event-notifier/", "project_urls": {"Homepage": "https://github.com/vitalij555/event-notifier"}, "release_url": "https://pypi.org/project/event-notifier/0.1.11/", "requires_dist": null, "requires_python": "", "summary": "Event notifier with many subscribers support", "version": "0.1.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Upload Python Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3f19fef247bc2d6394f607846e6e418f1dbb874/68747470733a2f2f6769746875622e636f6d2f766974616c696a3535352f6576656e742d6e6f7469666965722f776f726b666c6f77732f55706c6f6164253230507974686f6e2532305061636b6167652f62616467652e737667\"></p>\n<h1>event-notifier</h1>\n<p>Library providing event registration and routing infrastructure.</p>\n<h2>Contents</h2>\n<ul>\n<li><a href=\"#background\" rel=\"nofollow\">Background</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#constructor\" rel=\"nofollow\">Constructor</a></li>\n<li><a href=\"#api-overview\" rel=\"nofollow\">API Overview</a></li>\n<li><a href=\"#tests\" rel=\"nofollow\">Tests</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n</ul>\n<h2>Background</h2>\n<p>This is implementation of event notifier (also known as emitter or dispatcher) allowing to notify one or more subscribers of an event that just happen.</p>\n<p>Any python object inheriting from or containing notifier can act as event sender and any callable object can act as event receiver.\nAllows to register receivers having variable number of arguments.</p>\n<p>It is thread-safe. This means you can freely rise events from one thread while registering new receivers in another.</p>\n<h2>Installation</h2>\n<pre><code>pip install -U event-notifier\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">EventNotifier</span> <span class=\"kn\">import</span> <span class=\"n\">Notifier</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">FileWatchDog</span><span class=\"p\">():</span>\n\t<span class=\"k\">def</span> <span class=\"nf\">onOpen</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fileName</span><span class=\"p\">,</span> <span class=\"n\">openMode</span><span class=\"p\">):</span>\n\t\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"File </span><span class=\"si\">{</span><span class=\"n\">fileName</span><span class=\"si\">}</span><span class=\"s2\"> opened with </span><span class=\"si\">{</span><span class=\"n\">openMode</span><span class=\"si\">}</span><span class=\"s2\"> mode\"</span><span class=\"p\">)</span>\n\n\n\t<span class=\"k\">def</span> <span class=\"nf\">onClose</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fileName</span><span class=\"p\">):</span>\n\t\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"File </span><span class=\"si\">{</span><span class=\"n\">fileName</span><span class=\"si\">}</span><span class=\"s2\"> closed\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">watchDog</span> <span class=\"o\">=</span> <span class=\"n\">FileWatchDog</span><span class=\"p\">()</span>\t\n\n\n<span class=\"n\">notifier</span> <span class=\"o\">=</span> <span class=\"n\">Notifier</span><span class=\"p\">([</span><span class=\"s2\">\"onCreate\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onOpen\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onModify\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onClose\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onDelete\"</span><span class=\"p\">])</span>\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s2\">\"onOpen\"</span><span class=\"p\">,</span>  <span class=\"n\">watchDog</span><span class=\"o\">.</span><span class=\"n\">onOpen</span><span class=\"p\">)</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s2\">\"onClose\"</span><span class=\"p\">,</span> <span class=\"n\">watchDog</span><span class=\"o\">.</span><span class=\"n\">onClose</span><span class=\"p\">)</span>\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">fireEvent</span><span class=\"p\">(</span><span class=\"s2\">\"onOpen\"</span><span class=\"p\">,</span> <span class=\"n\">openMode</span><span class=\"o\">=</span><span class=\"s2\">\"w+\"</span><span class=\"p\">,</span> <span class=\"n\">fileName</span><span class=\"o\">=</span><span class=\"s2\">\"test_file.txt\"</span><span class=\"p\">)</span>  <span class=\"c1\"># order of named parameters is not important</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">fireEvent</span><span class=\"p\">(</span><span class=\"s2\">\"onClose\"</span><span class=\"p\">,</span> <span class=\"n\">fileName</span><span class=\"o\">=</span><span class=\"s2\">\"test_file.txt\"</span><span class=\"p\">)</span>\n</pre>\n<p>Will produce:</p>\n<pre><span class=\"gp\">$</span> python test.py\n<span class=\"go\">File test_file.txt opened with w+ mode</span>\n<span class=\"go\">File test_file.txt closed</span>\n</pre>\n<h2>Constructor</h2>\n<pre><span class=\"n\">Notifier</span><span class=\"p\">(</span><span class=\"n\">eventNames</span><span class=\"p\">,</span> <span class=\"n\">logger</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>eventNames</code> - <code>list of any</code> - mandatory, provides list of all supported events. Values provided here can be used for raising events later.\nValues provided in this list can be of any type.</li>\n<li><code>logger</code> - <code>object</code> - optional, logger supporting standard logging methods (info, warning error, etc..), default: <code>None</code>.\nIf None is provided, then internal logger outputting warnings and errors to console will be created.</li>\n</ul>\n<p><strong>Example</strong></p>\n<p>Any object can be used as event name. Example below illustrates that:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Box</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n\n<span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">Box</span><span class=\"p\">(</span><span class=\"s2\">\"name_BoxA\"</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">Box</span><span class=\"p\">(</span><span class=\"s2\">\"name_BoxB\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">notifier</span> <span class=\"o\">=</span> <span class=\"n\">Notifier</span><span class=\"p\">([</span><span class=\"s2\">\"onCreate\"</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mf\">22.58</span><span class=\"p\">,</span> <span class=\"s2\">\"onDelete\"</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">])</span>\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s2\">\"onCreate\"</span><span class=\"p\">,</span> <span class=\"n\">onCreateCallback</span><span class=\"p\">)</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">on5Callback</span><span class=\"p\">)</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"mf\">22.58</span><span class=\"p\">,</span> <span class=\"n\">onFloatCallback</span><span class=\"p\">)</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">onBoxACallback</span><span class=\"p\">)</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">onBoxBCallback</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">fireEvent</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s2\">\"event: ! 5 !\"</span><span class=\"p\">)</span>  <span class=\"c1\"># on5Callback will be called with \"event: ! 5 !\" as parameter</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">fireEvent</span><span class=\"p\">(</span><span class=\"mf\">22.58</span><span class=\"p\">,</span> <span class=\"s2\">\"event: ! 22.58 !\"</span><span class=\"p\">)</span>    <span class=\"c1\"># onFloatCallback will be called with \"event: ! 22.58 !\" as parameter</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">fireEvent</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"s2\">\"event: Box b\"</span><span class=\"p\">)</span>   <span class=\"c1\"># onBoxBCallback will be called with \"event: Box b\" as parameter</span>\n</pre>\n<h2>API Overview</h2>\n<h3>subscribe(eventName, subscriber)</h3>\n<p><strong>Description</strong></p>\n<p>Adds callable subscribers interested in some particular event.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>eventName</code> - <code>any</code> - mandatory, specifies event, subscriber will be interested in.</li>\n<li><code>subscriber</code> - <code>any</code> - mandatory, callable subscriber (function, class method or class with <strong>call</strong> implemented)</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">CallableFileWatchdog</span><span class=\"p\">:</span>\n\t<span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pathToWatch</span><span class=\"p\">):</span>\n\t\t<span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pathToWatch</span> <span class=\"o\">=</span> <span class=\"n\">pathToWatch</span>\n\n\n\t<span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n\t\t<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n\t\t\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Event </span><span class=\"si\">{</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\"> at path </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pathToWatch</span><span class=\"si\">}</span><span class=\"s2\"> is called with following simple args: </span><span class=\"si\">{</span><span class=\"p\">[</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\"> and with following keyword args: </span><span class=\"si\">{</span> <span class=\"p\">{</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">}</span> <span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">callableWatchdog</span> <span class=\"o\">=</span> <span class=\"n\">CallableFileWatchdog</span><span class=\"p\">(</span><span class=\"s2\">\"some\\path\\here\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s2\">\"onCreate\"</span><span class=\"p\">,</span> <span class=\"n\">callableWatchdog</span><span class=\"p\">)</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s2\">\"onOpen\"</span><span class=\"p\">,</span>   <span class=\"n\">callableWatchdog</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">fireEvent</span><span class=\"p\">(</span><span class=\"s2\">\"onCreate\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onCreate\"</span><span class=\"p\">,</span> <span class=\"n\">fileName</span><span class=\"o\">=</span><span class=\"s2\">\"test_file.txt\"</span><span class=\"p\">)</span>\n<span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">fireEvent</span><span class=\"p\">(</span><span class=\"s2\">\"onOpen\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onOpen\"</span><span class=\"p\">,</span> <span class=\"n\">openMode</span><span class=\"o\">=</span><span class=\"s2\">\"w+\"</span><span class=\"p\">,</span> <span class=\"n\">fileName</span><span class=\"o\">=</span><span class=\"s2\">\"test_file.txt\"</span><span class=\"p\">)</span> \n</pre>\n<p>gives:</p>\n<pre><span class=\"go\">Event onCreate at path some\\path\\here is called with following simple args: ['onCreate'] and with following keyword args: {'fileName': 'test_file.txt'}</span>\n<span class=\"go\">Event onOpen at path some\\path\\here is called with following simple args: ['onOpen'] and with following keyword args: {'openMode': 'w+', 'fileName': 'test_file.txt'}</span>\n</pre>\n<h3>subscribeToAll(subscriber):</h3>\n<p><strong>Description</strong></p>\n<p>Method allows to register one callable for all events supported by notifier.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>subscriber</code> - <code>callable</code> - mandatory, will be called when event rises.</li>\n</ul>\n<p><strong>Example</strong></p>\n<h3>getSupportedEvents():</h3>\n<p><strong>Description</strong></p>\n<p>Returns all supported events as a list.</p>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">EventNotifier</span> <span class=\"kn\">import</span> <span class=\"n\">Notifier</span>\n\n<span class=\"n\">notifier</span> <span class=\"o\">=</span> <span class=\"n\">Notifier</span><span class=\"p\">([</span><span class=\"s2\">\"onCreate\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onOpen\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onModify\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onClose\"</span><span class=\"p\">,</span> <span class=\"s2\">\"onDelete\"</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">notifier</span><span class=\"o\">.</span><span class=\"n\">getSupportedEvents</span><span class=\"p\">())</span>\n</pre>\n<p>will output:</p>\n<pre><span class=\"go\">['onCreate', 'onOpen', 'onModify', 'onClose', 'onDelete']</span>\n</pre>\n<h3>fireEvent(eventName, *args, **kwargs)</h3>\n<p><strong>Description</strong></p>\n<p>Rises specific event registered during initialization.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><code>eventName</code> - <code>any</code> - mandatory, provides list of all supported events. Values provided here later can be used for raising events</li>\n<li><code>*args</code> - <code>list</code> - optional, all simple parameters we want to pass to our subscribers (param1, param2, param3...).</li>\n<li><code>**kwargs</code> - <code>dictionary</code> - optional, all named parameters we want to pass (param1=value1, param2=value2, param3=value3)</li>\n</ul>\n<p><strong>Example</strong></p>\n<pre></pre>\n<pre></pre>\n<h3>removeSubscribersByEventName(eventName)</h3>\n<p><strong>Description</strong></p>\n<p><strong>Parameters</strong></p>\n<p><strong>Example</strong></p>\n<pre></pre>\n<pre></pre>\n<h3>removeAllSubscribers()</h3>\n<p><strong>Description</strong></p>\n<p><strong>Example</strong></p>\n<pre></pre>\n<pre></pre>\n<h2>Tests</h2>\n<p><a href=\"http://pytest.org/\" rel=\"nofollow\">PyTest</a> is used for tests. Python 2 is not supported.</p>\n<p><strong>Install PyTest</strong></p>\n<pre>$ pip install pytest\n</pre>\n<p><strong>Run tests</strong></p>\n<pre>$ pytest test/*\n</pre>\n<p><strong>Check test coverage</strong></p>\n<p>In order to generate test coverage report install pytest-cov:</p>\n<pre>$ pip install pytest-cov\n</pre>\n<p>Then inside test subdirectory call:</p>\n<pre>pytest --cov<span class=\"o\">=</span>../EventNotifier --cov-report<span class=\"o\">=</span>html\n</pre>\n<h2>License</h2>\n<p>License\nCopyright (C) 2020 Vitalij Gotovskij</p>\n<p>event-notifier binaries and source code can be used according to the MIT License</p>\n<h2>Contribute</h2>\n<p>TBD</p>\n\n          </div>"}, "last_serial": 6866998, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9e6f36b6602cb1368aabb212d882731e", "sha256": "dd196e94df968df5eacbbdc6d141a12ea56c89490dce5a18835e18dd676480f9"}, "downloads": -1, "filename": "event_notifier-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9e6f36b6602cb1368aabb212d882731e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3719, "upload_time": "2020-03-08T15:57:57", "upload_time_iso_8601": "2020-03-08T15:57:57.225782Z", "url": "https://files.pythonhosted.org/packages/55/ac/4decbcfb903ec8a86adc014db305da5eef0c7f87424cbe76bc5a2827003c/event_notifier-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "490404bfac513ceabda770eb6e83783c", "sha256": "c417aade23bbebc14bed1ba1e7a98a1cec2b762a994b4fb697f48bc224abf1f9"}, "downloads": -1, "filename": "event-notifier-0.1.tar.gz", "has_sig": false, "md5_digest": "490404bfac513ceabda770eb6e83783c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1981, "upload_time": "2020-03-08T15:57:59", "upload_time_iso_8601": "2020-03-08T15:57:59.477345Z", "url": "https://files.pythonhosted.org/packages/8c/27/57b466c44ce70b0a439aaa7b05ea1239be6b885be312d60119e45ff8c35b/event-notifier-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c0e5d7d2a761559bbb7b7c391d209b42", "sha256": "48f3c25b73c1370bb21ad235536e556c605e5a18021766e382dbab12b3b02f72"}, "downloads": -1, "filename": "event_notifier-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c0e5d7d2a761559bbb7b7c391d209b42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4529, "upload_time": "2020-03-08T19:17:28", "upload_time_iso_8601": "2020-03-08T19:17:28.857502Z", "url": "https://files.pythonhosted.org/packages/fb/8f/db4f7bbf51eb6594a8dbf02c672847d12fa8e362f3e688373f916444fede/event_notifier-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab093a0be9656f41bbfff78a11de2415", "sha256": "6bea3a18d1b14f98dec44f3f9827366cc5053fcf5611014e49a5802d7cffef58"}, "downloads": -1, "filename": "event-notifier-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ab093a0be9656f41bbfff78a11de2415", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3029, "upload_time": "2020-03-08T19:17:30", "upload_time_iso_8601": "2020-03-08T19:17:30.244888Z", "url": "https://files.pythonhosted.org/packages/76/ec/8ccbf810d996b95e6a87b08aac967ffd54c58ce9ed69581a73948951f861/event-notifier-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "6f238bde7a1b45f03c9c3da312f675dd", "sha256": "70a977dbebf4b75632cb26f2450b3a8594c1e4fcf4063b2c475fd99ebdde17e7"}, "downloads": -1, "filename": "event_notifier-0.1.10-py3-none-any.whl", "has_sig": false, "md5_digest": "6f238bde7a1b45f03c9c3da312f675dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5782, "upload_time": "2020-03-12T07:08:26", "upload_time_iso_8601": "2020-03-12T07:08:26.886740Z", "url": "https://files.pythonhosted.org/packages/be/26/66d53cb7370b7fc135d3fc0521f27f227ea126d5d9ac8487b5b75468a2a2/event_notifier-0.1.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa17893c39f131ec6ccf75b93f3ff651", "sha256": "9f070899d7acbae82634084d9d7bfaf382cd9c321484559b6cb8fa83c152179a"}, "downloads": -1, "filename": "event-notifier-0.1.10.tar.gz", "has_sig": false, "md5_digest": "aa17893c39f131ec6ccf75b93f3ff651", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4630, "upload_time": "2020-03-12T07:08:27", "upload_time_iso_8601": "2020-03-12T07:08:27.990691Z", "url": "https://files.pythonhosted.org/packages/16/80/2d818763a7a1f213accb77e15936da8039f074ac50e3a72679070ee3e4a1/event-notifier-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "5139e101ec75765a4496b1b295541ccf", "sha256": "0d0c20bace607da3e206f7171e4dc4fbb9c0d1b49ba8d256171c3c88a8a27c1d"}, "downloads": -1, "filename": "event_notifier-0.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "5139e101ec75765a4496b1b295541ccf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6008, "upload_time": "2020-03-23T17:11:18", "upload_time_iso_8601": "2020-03-23T17:11:18.967074Z", "url": "https://files.pythonhosted.org/packages/83/99/57e54af76dbfeb9e0190c30d678b52c4fe986a6232aa3b09be38bd702cfe/event_notifier-0.1.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b11607d4dba143b4c904a0ef89bc4260", "sha256": "e8e00f8569fa11fdb148f57d65ec30026f0dbbb876fc3f411f7b90f38623c1ee"}, "downloads": -1, "filename": "event-notifier-0.1.11.tar.gz", "has_sig": false, "md5_digest": "b11607d4dba143b4c904a0ef89bc4260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4990, "upload_time": "2020-03-23T17:11:20", "upload_time_iso_8601": "2020-03-23T17:11:20.481449Z", "url": "https://files.pythonhosted.org/packages/da/58/6c2c1aff5f4170df41291189c42f8be31d19a46d6a369b1e6f04bfd4a6f2/event-notifier-0.1.11.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9632cb5edea999d97d08bb7ebf4250c7", "sha256": "08d3e2a8a1d0c52105a566fc3e56c48f483e282b4640c69d6ca41d89574c5192"}, "downloads": -1, "filename": "event_notifier-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9632cb5edea999d97d08bb7ebf4250c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4575, "upload_time": "2020-03-08T21:11:31", "upload_time_iso_8601": "2020-03-08T21:11:31.274780Z", "url": "https://files.pythonhosted.org/packages/5e/e0/b83ca8c7564bd6d0937f2ef0299368222713c3039135b462d38fee1701a0/event_notifier-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f2264151717a4cf723ea8ded13dfb20", "sha256": "39b6a549cdf349eee2546b9c0f55e67e550fb085efd9a531360fbd77622d7727"}, "downloads": -1, "filename": "event-notifier-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1f2264151717a4cf723ea8ded13dfb20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3092, "upload_time": "2020-03-08T21:11:32", "upload_time_iso_8601": "2020-03-08T21:11:32.599918Z", "url": "https://files.pythonhosted.org/packages/e3/ba/39187e56b7dc7d0bb4f9cecec5d4fc2ed82c0fa3bf7b0f899d8298a3d0f4/event-notifier-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "80ac70e52a6f5e35e16957aa2b3a2d11", "sha256": "4f695e50a2d2ea5c99e4aa1bd045b3502086f3173a19f5cd5a1fd615d280f892"}, "downloads": -1, "filename": "event_notifier-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "80ac70e52a6f5e35e16957aa2b3a2d11", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4567, "upload_time": "2020-03-08T22:15:50", "upload_time_iso_8601": "2020-03-08T22:15:50.263060Z", "url": "https://files.pythonhosted.org/packages/99/33/4d3b5850e4c337af667027ffca02ae5fcd68e8557fb0ac1ae50b21d1cd19/event_notifier-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67a410dbdac3c16697c4d6c40dfd6d7c", "sha256": "91a439ff4fc9e35b29925bf607c60a52c7b65d6b9d662963c662107e8fc7b924"}, "downloads": -1, "filename": "event-notifier-0.1.3.tar.gz", "has_sig": false, "md5_digest": "67a410dbdac3c16697c4d6c40dfd6d7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3091, "upload_time": "2020-03-08T22:15:51", "upload_time_iso_8601": "2020-03-08T22:15:51.672554Z", "url": "https://files.pythonhosted.org/packages/02/b8/787c926a4731d829b89e354f644b7ca6e03fa4f9f02b14e611404ee58759/event-notifier-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "bc193aafaadb845fdb709c9da424ecf8", "sha256": "6b254b865a69c21f0d291ebd697b3b45b5cc8dbd8f6f58399fa4c4766adb4a1a"}, "downloads": -1, "filename": "event_notifier-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bc193aafaadb845fdb709c9da424ecf8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4578, "upload_time": "2020-03-08T22:49:30", "upload_time_iso_8601": "2020-03-08T22:49:30.349969Z", "url": "https://files.pythonhosted.org/packages/af/71/b6fd5bb71c017eb6455f27ac3eb3b70c6978d87d24c894d715a1a15db855/event_notifier-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be678b05c84d2e97b400583855c7e783", "sha256": "f6a60409037b36e3af2176fbbcc717787e376a9c37978e5e6ebb46563bdea8f7"}, "downloads": -1, "filename": "event-notifier-0.1.4.tar.gz", "has_sig": false, "md5_digest": "be678b05c84d2e97b400583855c7e783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3089, "upload_time": "2020-03-08T22:49:31", "upload_time_iso_8601": "2020-03-08T22:49:31.184322Z", "url": "https://files.pythonhosted.org/packages/e4/75/cf3928e201657d4326b4378ace91d553412fb6d36cf81a316d53c8af6c15/event-notifier-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "fd56f6d6d374201d9b8ff6fb6b2c1c03", "sha256": "65b9aad5d67af813225cf643c225e8ed60b6f72cc3feaa47c88bc1fc9a4aa079"}, "downloads": -1, "filename": "event_notifier-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "fd56f6d6d374201d9b8ff6fb6b2c1c03", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4578, "upload_time": "2020-03-08T23:09:35", "upload_time_iso_8601": "2020-03-08T23:09:35.752672Z", "url": "https://files.pythonhosted.org/packages/ce/05/8de69e9908d17b9e1db73fbfc7aa3b44cc0849f7f3971b09120b413be1cc/event_notifier-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fe6f07a93d3bc8454e2f23df7d7becb", "sha256": "d512b00d0bfd83bf0dce6f969ce9460e7f19b42454b0a7beb0accbdab65c6f92"}, "downloads": -1, "filename": "event-notifier-0.1.5.tar.gz", "has_sig": false, "md5_digest": "4fe6f07a93d3bc8454e2f23df7d7becb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3096, "upload_time": "2020-03-08T23:09:36", "upload_time_iso_8601": "2020-03-08T23:09:36.727409Z", "url": "https://files.pythonhosted.org/packages/45/d8/ab65c4f8810a9df187ed84cd49997aedeceb7ac811d82f607c69ff809ef2/event-notifier-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "cad24f6f5b224e8fc06bccb203831e53", "sha256": "d7732b627ba110ceb4ba444031fd4d34fb0ebd090d1b7d463fdf1d1142d42725"}, "downloads": -1, "filename": "event_notifier-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "cad24f6f5b224e8fc06bccb203831e53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4792, "upload_time": "2020-03-09T08:43:56", "upload_time_iso_8601": "2020-03-09T08:43:56.519158Z", "url": "https://files.pythonhosted.org/packages/22/6a/8fdf880e369791edb6d51a7304d28f5a6d3be49a6d12202d418df78279b8/event_notifier-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f2d9ac18f8179e11d1b5641be293452c", "sha256": "6908104f3ac53d7302648cc9fd54ca06e7785ef87de54b8cff5542879fc25e1d"}, "downloads": -1, "filename": "event-notifier-0.1.6.tar.gz", "has_sig": false, "md5_digest": "f2d9ac18f8179e11d1b5641be293452c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3367, "upload_time": "2020-03-09T08:43:57", "upload_time_iso_8601": "2020-03-09T08:43:57.874753Z", "url": "https://files.pythonhosted.org/packages/20/78/b80741d923fc5d6ef811400435f5f337b0fa3fda5b1ee309546de99ccfe5/event-notifier-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "67f7daad79ee0359c599bc698a2518de", "sha256": "a1dfe30b810b570fe122ef45e5a07e051cb6777dd48afad16a470e023caf584b"}, "downloads": -1, "filename": "event_notifier-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "67f7daad79ee0359c599bc698a2518de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4982, "upload_time": "2020-03-10T06:39:45", "upload_time_iso_8601": "2020-03-10T06:39:45.413006Z", "url": "https://files.pythonhosted.org/packages/55/69/453676a4ca005b4b3ee2360ea6f54aca8be7cfe65902d6b80636776442a2/event_notifier-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "deb82e07526e4212c9cb23595f6a3f24", "sha256": "e7ca83e01a8203ed087d219095cad069a9575ab7ba2af9f903e93860af7637d3"}, "downloads": -1, "filename": "event-notifier-0.1.7.tar.gz", "has_sig": false, "md5_digest": "deb82e07526e4212c9cb23595f6a3f24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3670, "upload_time": "2020-03-10T06:39:46", "upload_time_iso_8601": "2020-03-10T06:39:46.404130Z", "url": "https://files.pythonhosted.org/packages/4b/3e/9cc2b84ae0a15a506dc435d8f581abb902daec86632d81521b7e3759be76/event-notifier-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "fc07c1d550363d072027b3db32226449", "sha256": "bafb72794e24a4ee667399768412121cae8277a90c52051aaac6fa91797dd599"}, "downloads": -1, "filename": "event_notifier-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "fc07c1d550363d072027b3db32226449", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5135, "upload_time": "2020-03-11T06:14:46", "upload_time_iso_8601": "2020-03-11T06:14:46.656342Z", "url": "https://files.pythonhosted.org/packages/81/10/8bd19938e0c715d47bad5b580ee501650c63efbf6c7a0ab316b07d0917bd/event_notifier-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5510541b62712d3f1a5af0526d8a6368", "sha256": "c4f78dbe66596559c8927155ecb9f1d1b219fd4a88757a7321aeca03c83b2a35"}, "downloads": -1, "filename": "event-notifier-0.1.8.tar.gz", "has_sig": false, "md5_digest": "5510541b62712d3f1a5af0526d8a6368", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3803, "upload_time": "2020-03-11T06:14:47", "upload_time_iso_8601": "2020-03-11T06:14:47.916908Z", "url": "https://files.pythonhosted.org/packages/f5/03/48d98983f090713cabc9451a87e11293fa10b40a6a4f333165039c367a1f/event-notifier-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "d25783b6d261a617889b89ad49a3f805", "sha256": "579e8707d342093d439fa5c98d9d0220fff67c0b0e7a40e35294180f65dac612"}, "downloads": -1, "filename": "event_notifier-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "d25783b6d261a617889b89ad49a3f805", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5757, "upload_time": "2020-03-11T17:57:00", "upload_time_iso_8601": "2020-03-11T17:57:00.161504Z", "url": "https://files.pythonhosted.org/packages/99/b7/9ef72e69b7155165ba64bc304de76cc9f9b9e4902254ddf9ff64a69a1ef6/event_notifier-0.1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f3062b47959713e62bb0540cbf278ec", "sha256": "89a7e0fa82f8a5a09c860303cf30827ed420a893d8ecc387d26447a59dc26982"}, "downloads": -1, "filename": "event-notifier-0.1.9.tar.gz", "has_sig": false, "md5_digest": "8f3062b47959713e62bb0540cbf278ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4621, "upload_time": "2020-03-11T17:57:01", "upload_time_iso_8601": "2020-03-11T17:57:01.079904Z", "url": "https://files.pythonhosted.org/packages/3d/05/609a497fb5534b28cfd30a7ae3ab0023709cb8a0c946b279df589f42d687/event-notifier-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5139e101ec75765a4496b1b295541ccf", "sha256": "0d0c20bace607da3e206f7171e4dc4fbb9c0d1b49ba8d256171c3c88a8a27c1d"}, "downloads": -1, "filename": "event_notifier-0.1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "5139e101ec75765a4496b1b295541ccf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6008, "upload_time": "2020-03-23T17:11:18", "upload_time_iso_8601": "2020-03-23T17:11:18.967074Z", "url": "https://files.pythonhosted.org/packages/83/99/57e54af76dbfeb9e0190c30d678b52c4fe986a6232aa3b09be38bd702cfe/event_notifier-0.1.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b11607d4dba143b4c904a0ef89bc4260", "sha256": "e8e00f8569fa11fdb148f57d65ec30026f0dbbb876fc3f411f7b90f38623c1ee"}, "downloads": -1, "filename": "event-notifier-0.1.11.tar.gz", "has_sig": false, "md5_digest": "b11607d4dba143b4c904a0ef89bc4260", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4990, "upload_time": "2020-03-23T17:11:20", "upload_time_iso_8601": "2020-03-23T17:11:20.481449Z", "url": "https://files.pythonhosted.org/packages/da/58/6c2c1aff5f4170df41291189c42f8be31d19a46d6a369b1e6f04bfd4a6f2/event-notifier-0.1.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:12 2020"}