{"info": {"author": "Bert JW Regeer", "author_email": "bertjw@regeer.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Pyramid", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: WSGI"], "description": "pyramid_pluggable_session\n=========================\n\nWant to be able to change out session backends using a simple configuration\nchange, want to store your session data in a new location but re-implementing\nISession from Pyramid looks too daunting, fear not, pyramid_pluggable_session\nmakes this really simple.\n\nIs this a pyramid_beaker replacement?\n=====================================\n\nYes. Although I've already been told that unless I implement ALL existing\nbeaker backends that I am not doing it right, so I am hereby doing it wrong\n;-).\n\nPull requests\n=============\n\nWant to add a new backend? Perfect. Want to write some tests? Documentation?\nThe whole nine yards? Please!\n\n1. Clone this repo, create a new topic branch, and hack hack hack.\n2. Push your topic branch to Github\n3. Create a new pull request\n4. I will review it, and if all is well pull it into this source tree!\n\n\n0.0.0a2\n=======\n\n- Add better protection against session fixation:\n    - Upon failure to deserialize/unpack/expiration of session a new session id\n      is generated.\n    - Upon calling invalidate() a new session is generated with a new session\n      id\n\n- Add more clean-up using the new clear() functionality. When a session fails\n  to deserialize, we remove it from the backends, if a session fails to unpack\n  we remove it from the backends, and if it has expired we also remove it from\n  the backends.\n\n- Update the included backends memory/file/chain to add the new clear()\n  function required by IPlugSession.\n\n- Add clear() to IPlugSession interface to allow the session to explicitly have\n  the backend plugs remove the session data associated with a certain session\n  id.\n\n- On _save_session we set the cookie to response that is provided to us by the\n  callback, and not request.response which may not be the users response.\n\n0.0.0a1\n=======\n\nNew features:\n\n- A file based session storage now exists.\n\n- A chain can now be constructed for session storage\n\n0.0.0dev\n========\n\n- A new ISession compliant Pyramid session provider appears.\n\n- A single backend exists, it is based on local Pyramid memory.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/usingnamespace/pyramid_pluggable_session", "keywords": "pyramid", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pyramid_pluggable_session", "package_url": "https://pypi.org/project/pyramid_pluggable_session/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyramid_pluggable_session/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/usingnamespace/pyramid_pluggable_session"}, "release_url": "https://pypi.org/project/pyramid_pluggable_session/0.0.0a2/", "requires_dist": null, "requires_python": null, "summary": "A pluggable session implementation for Pyramid", "version": "0.0.0a2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyramid-pluggable-session\">\n<h2>pyramid_pluggable_session</h2>\n<p>Want to be able to change out session backends using a simple configuration\nchange, want to store your session data in a new location but re-implementing\nISession from Pyramid looks too daunting, fear not, pyramid_pluggable_session\nmakes this really simple.</p>\n</div>\n<div id=\"is-this-a-pyramid-beaker-replacement\">\n<h2>Is this a pyramid_beaker replacement?</h2>\n<p>Yes. Although I\u2019ve already been told that unless I implement ALL existing\nbeaker backends that I am not doing it right, so I am hereby doing it wrong\n;-).</p>\n</div>\n<div id=\"pull-requests\">\n<h2>Pull requests</h2>\n<p>Want to add a new backend? Perfect. Want to write some tests? Documentation?\nThe whole nine yards? Please!</p>\n<ol>\n<li>Clone this repo, create a new topic branch, and hack hack hack.</li>\n<li>Push your topic branch to Github</li>\n<li>Create a new pull request</li>\n<li>I will review it, and if all is well pull it into this source tree!</li>\n</ol>\n</div>\n<div id=\"a2\">\n<h2>0.0.0a2</h2>\n<ul>\n<li><dl>\n<dt>Add better protection against session fixation:</dt>\n<dd><ul>\n<li>Upon failure to deserialize/unpack/expiration of session a new session id\nis generated.</li>\n<li>Upon calling invalidate() a new session is generated with a new session\nid</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Add more clean-up using the new clear() functionality. When a session fails\nto deserialize, we remove it from the backends, if a session fails to unpack\nwe remove it from the backends, and if it has expired we also remove it from\nthe backends.</li>\n<li>Update the included backends memory/file/chain to add the new clear()\nfunction required by IPlugSession.</li>\n<li>Add clear() to IPlugSession interface to allow the session to explicitly have\nthe backend plugs remove the session data associated with a certain session\nid.</li>\n<li>On _save_session we set the cookie to response that is provided to us by the\ncallback, and not request.response which may not be the users response.</li>\n</ul>\n</div>\n<div id=\"a1\">\n<h2>0.0.0a1</h2>\n<p>New features:</p>\n<ul>\n<li>A file based session storage now exists.</li>\n<li>A chain can now be constructed for session storage</li>\n</ul>\n</div>\n<div id=\"dev\">\n<h2>0.0.0dev</h2>\n<ul>\n<li>A new ISession compliant Pyramid session provider appears.</li>\n<li>A single backend exists, it is based on local Pyramid memory.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1084815, "releases": {"0.0.0a1": [{"comment_text": "", "digests": {"md5": "1a622e5558c8e7bad24f9ec357f078a7", "sha256": "0e38d8eaf1b721382ff345e9df9dd9e2c9d9a3c2d0afde777454ed2c75da729e"}, "downloads": -1, "filename": "pyramid_pluggable_session-0.0.0a1.tar.gz", "has_sig": false, "md5_digest": "1a622e5558c8e7bad24f9ec357f078a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10813, "upload_time": "2014-04-29T06:50:39", "upload_time_iso_8601": "2014-04-29T06:50:39.330286Z", "url": "https://files.pythonhosted.org/packages/fd/5f/7e153862a66ee33eca7f0bc4dc3f9ae8b22080063c4e70f606f72312f8a6/pyramid_pluggable_session-0.0.0a1.tar.gz", "yanked": false}], "0.0.0a2": [{"comment_text": "", "digests": {"md5": "e6bbeeab48f882701b0aa6f6ca76bd97", "sha256": "788a5cb01ba5a0b4ca48639a2941740b51974fc59c0ad6ee886b2ed1154b8b68"}, "downloads": -1, "filename": "pyramid_pluggable_session-0.0.0a2.tar.gz", "has_sig": false, "md5_digest": "e6bbeeab48f882701b0aa6f6ca76bd97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11426, "upload_time": "2014-04-30T09:08:03", "upload_time_iso_8601": "2014-04-30T09:08:03.632509Z", "url": "https://files.pythonhosted.org/packages/00/55/85f788f7f9d2c807a011d244bd50d4acb610e7b5cdf75dc6fb018cbad232/pyramid_pluggable_session-0.0.0a2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e6bbeeab48f882701b0aa6f6ca76bd97", "sha256": "788a5cb01ba5a0b4ca48639a2941740b51974fc59c0ad6ee886b2ed1154b8b68"}, "downloads": -1, "filename": "pyramid_pluggable_session-0.0.0a2.tar.gz", "has_sig": false, "md5_digest": "e6bbeeab48f882701b0aa6f6ca76bd97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11426, "upload_time": "2014-04-30T09:08:03", "upload_time_iso_8601": "2014-04-30T09:08:03.632509Z", "url": "https://files.pythonhosted.org/packages/00/55/85f788f7f9d2c807a011d244bd50d4acb610e7b5cdf75dc6fb018cbad232/pyramid_pluggable_session-0.0.0a2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:16 2020"}