{"info": {"author": "Rodrigo Palacios", "author_email": "rodrigopala91@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "StatsCounter: A statistics-enabled Python container\r\n---------------------------------------------------\r\n\r\n::\r\n\r\n         _        _                             _\r\n     ___| |_ __ _| |_ ___  ___ ___  _   _ _ __ | |_ ___ _ __\r\n    / __| __/ _` | __/ __|/ __/ _ \\| | | | '_ \\| __/ _ \\ '__|\r\n    \\__ \\ || (_| | |_\\__ \\ (_| (_) | |_| | | | | ||  __/ |\r\n    |___/\\__\\__,_|\\__|___/\\___\\___/ \\__,_|_| |_|\\__\\___|_|\r\n\r\n\r\nStatsCounter is a GNU Licensed, statistics powered version\r\nof Python's standard library ``Counter`` class. It attaches\r\nseveral helpful methods that can be used to make your\r\ndata-driven uses a breeze.\r\n\r\nUsage\r\n-----\r\n\r\nAs a histogram\r\n~~~~~~~~~~~~~~\r\n\r\n.. code-block:: python\r\n\r\n    >>> import statscounter as stats\r\n    >>> letter_freq = stats.StatsCounter(a=1, b=2, c=3, d=4, e=4, f=6)\r\n    >>> letter_freq.mean()      # average frequency\r\n    3.3333333333333335\r\n    >>> letter_freq.mode()      # most frequent element\r\n    4\r\n    >>> letter_freq.median()    # the median number (avg if even # of items)\r\n    3.5\r\n    >>> letter_freq.variance()  # sample variance\r\n    3.066666666666667\r\n    >>> letter_freq.stdev()     # sample standard deviation\r\n    1.7511900715418263\r\n    >>> letter_freq.pvariance() # population variance\r\n    2.555555555555556\r\n    >>> letter_freq.pstdev()    # population std. dev.\r\n    1.5986105077709065\r\n    >>> letter_freq.max()       # the maximum value\r\n    6\r\n    >>> letter_freq.argmax()    # the argument yielding the maximum value\r\n    \"f\"\r\n\r\nAs a utility\r\n~~~~~~~~~~~~\r\n\r\n.. code-block:: python\r\n\r\n    >>> import statscounter as stats\r\n    >>> stats.mean([1, 2, 3, 4, 4, 6])      # average frequency\r\n    3.3333333333333335\r\n    >>> stats.mode([1, 2, 3, 4, 4, 6])      # most frequent element\r\n    4\r\n    >>> stats.median([1, 2, 3, 4, 4, 6])    # the median number (avg if even # of items)\r\n    3.5\r\n    >>> stats.variance([1, 2, 3, 4, 4, 6])  # sample variance\r\n    3.066666666666667\r\n    >>> stats.stdev([1, 2, 3, 4, 4, 6])     # sample standard deviation\r\n    1.7511900715418263\r\n    >>> stats.pvariance([1, 2, 3, 4, 4, 6]) # population variance\r\n    2.555555555555556\r\n    >>> stats.pstdev([1, 2, 3, 4, 4, 6])    # population std. dev.\r\n    1.5986105077709065\r\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datalib/statscounter", "keywords": "stats statistics statistic statistical measurements              mean average avg standard deviation std dev stddev              variance Counter StatsCounter collection measurement              measure count sum elements items", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "statscounter", "package_url": "https://pypi.org/project/statscounter/", "platform": "any", "project_url": "https://pypi.org/project/statscounter/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/datalib/statscounter"}, "release_url": "https://pypi.org/project/statscounter/0.0.010/", "requires_dist": null, "requires_python": null, "summary": "Python's missing statistical Swiss Army knife", "version": "0.0.010", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"statscounter-a-statistics-enabled-python-container\">\n<h2>StatsCounter: A statistics-enabled Python container</h2>\n<pre>     _        _                             _\n ___| |_ __ _| |_ ___  ___ ___  _   _ _ __ | |_ ___ _ __\n/ __| __/ _` | __/ __|/ __/ _ \\| | | | '_ \\| __/ _ \\ '__|\n\\__ \\ || (_| | |_\\__ \\ (_| (_) | |_| | | | | ||  __/ |\n|___/\\__\\__,_|\\__|___/\\___\\___/ \\__,_|_| |_|\\__\\___|_|\n</pre>\n<p>StatsCounter is a GNU Licensed, statistics powered version\nof Python\u2019s standard library <tt>Counter</tt> class. It attaches\nseveral helpful methods that can be used to make your\ndata-driven uses a breeze.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"as-a-histogram\">\n<h3>As a histogram</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">statscounter</span> <span class=\"k\">as</span> <span class=\"nn\">stats</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span> <span class=\"o\">=</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">StatsCounter</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">()</span>      <span class=\"c1\"># average frequency</span>\n<span class=\"mf\">3.3333333333333335</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">mode</span><span class=\"p\">()</span>      <span class=\"c1\"># most frequent element</span>\n<span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">median</span><span class=\"p\">()</span>    <span class=\"c1\"># the median number (avg if even # of items)</span>\n<span class=\"mf\">3.5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">variance</span><span class=\"p\">()</span>  <span class=\"c1\"># sample variance</span>\n<span class=\"mf\">3.066666666666667</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">stdev</span><span class=\"p\">()</span>     <span class=\"c1\"># sample standard deviation</span>\n<span class=\"mf\">1.7511900715418263</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">pvariance</span><span class=\"p\">()</span> <span class=\"c1\"># population variance</span>\n<span class=\"mf\">2.555555555555556</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">pstdev</span><span class=\"p\">()</span>    <span class=\"c1\"># population std. dev.</span>\n<span class=\"mf\">1.5986105077709065</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">()</span>       <span class=\"c1\"># the maximum value</span>\n<span class=\"mi\">6</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">letter_freq</span><span class=\"o\">.</span><span class=\"n\">argmax</span><span class=\"p\">()</span>    <span class=\"c1\"># the argument yielding the maximum value</span>\n<span class=\"s2\">\"f\"</span>\n</pre>\n</div>\n<div id=\"as-a-utility\">\n<h3>As a utility</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">statscounter</span> <span class=\"k\">as</span> <span class=\"nn\">stats</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">mean</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>      <span class=\"c1\"># average frequency</span>\n<span class=\"mf\">3.3333333333333335</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">mode</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>      <span class=\"c1\"># most frequent element</span>\n<span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">median</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>    <span class=\"c1\"># the median number (avg if even # of items)</span>\n<span class=\"mf\">3.5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">variance</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>  <span class=\"c1\"># sample variance</span>\n<span class=\"mf\">3.066666666666667</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">stdev</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>     <span class=\"c1\"># sample standard deviation</span>\n<span class=\"mf\">1.7511900715418263</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">pvariance</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span> <span class=\"c1\"># population variance</span>\n<span class=\"mf\">2.555555555555556</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">stats</span><span class=\"o\">.</span><span class=\"n\">pstdev</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">])</span>    <span class=\"c1\"># population std. dev.</span>\n<span class=\"mf\">1.5986105077709065</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1986681, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "ff99e699596ec55b7b3ae73b00da1d9b", "sha256": "0dd106461fb52ac2d1121299c717ee3ab9cae24153b1a197adbde5f0ff09f63e"}, "downloads": -1, "filename": "statscounter-0.0.0.zip", "has_sig": false, "md5_digest": "ff99e699596ec55b7b3ae73b00da1d9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8281, "upload_time": "2015-04-16T23:20:40", "upload_time_iso_8601": "2015-04-16T23:20:40.362700Z", "url": "https://files.pythonhosted.org/packages/a2/70/64cb76d35206961fd167a581b936e95fa017e9930a72ae2657bf09498f21/statscounter-0.0.0.zip", "yanked": false}], "0.0.010": [{"comment_text": "", "digests": {"md5": "0a3484f10a8874f1a5df31568c24c889", "sha256": "d45f06f95133fda4266a7612397af284622fbc7964cdd0c80d9f1dee56e59d0e"}, "downloads": -1, "filename": "statscounter-0.0.010.win-amd64.exe", "has_sig": false, "md5_digest": "0a3484f10a8874f1a5df31568c24c889", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 231182, "upload_time": "2016-03-02T21:22:32", "upload_time_iso_8601": "2016-03-02T21:22:32.085051Z", "url": "https://files.pythonhosted.org/packages/20/bc/e7de87b24d5d6f332dcba64d6ee6eb5ff46ffcdf3f0cbe72951102fd2ca6/statscounter-0.0.010.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f514792560b95ba4a76c1bc2ad8992b", "sha256": "c020000a2754a2b9041c9b2bf8946c48b68659b9c6fd0d910943c3611a5e8e47"}, "downloads": -1, "filename": "statscounter-0.0.010.zip", "has_sig": false, "md5_digest": "8f514792560b95ba4a76c1bc2ad8992b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9194, "upload_time": "2016-03-02T21:22:26", "upload_time_iso_8601": "2016-03-02T21:22:26.699131Z", "url": "https://files.pythonhosted.org/packages/83/83/ca692cbb010b1a34d1eea175f6e9f1deb50461dcca57d533f55529ab460b/statscounter-0.0.010.zip", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "38e92fa6d0e3b301ecf2726e95cbc15f", "sha256": "e80786010189e97705e613397fbd8b8413fad6fe57a84891a8afb5db8bd4dfc4"}, "downloads": -1, "filename": "statscounter-0.0.1.win-amd64.exe", "has_sig": false, "md5_digest": "38e92fa6d0e3b301ecf2726e95cbc15f", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 231348, "upload_time": "2016-03-02T21:34:41", "upload_time_iso_8601": "2016-03-02T21:34:41.214312Z", "url": "https://files.pythonhosted.org/packages/35/a9/ea81bab8cec3ca053b030326198e8f30e938b82a1475f115cf56f93c2c39/statscounter-0.0.1.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "351a0ad608fdc016db41d67f9ad18241", "sha256": "abd10fe62794089f8e782b4b6990d9a1f45e294306b006da990b8cbd469ade27"}, "downloads": -1, "filename": "statscounter-0.0.1.zip", "has_sig": false, "md5_digest": "351a0ad608fdc016db41d67f9ad18241", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9333, "upload_time": "2016-03-02T21:34:27", "upload_time_iso_8601": "2016-03-02T21:34:27.877849Z", "url": "https://files.pythonhosted.org/packages/d5/19/364d7d958ff63d6d097368ca2e0069204641a52eb68d8fcf735bd0c8a9c0/statscounter-0.0.1.zip", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "df20a80f257904c573348d074ac63e81", "sha256": "0962c87c1871b3dcaa66d9b7ccd9d2cee948216c1495c525a17b7529cc81e3e2"}, "downloads": -1, "filename": "statscounter-0.0.2.win-amd64.exe", "has_sig": false, "md5_digest": "df20a80f257904c573348d074ac63e81", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 231354, "upload_time": "2016-03-02T23:51:22", "upload_time_iso_8601": "2016-03-02T23:51:22.062930Z", "url": "https://files.pythonhosted.org/packages/ac/e9/7f5e9b5a8171493e46f759d76339f03dc6fe5463952ac32819a605c8f132/statscounter-0.0.2.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9847be7e72c6fc7514bcb56d3ad4d7d", "sha256": "ca1b6150e75a9a3e324fc51dd74fa3119d938e8435b9ac921fd56cf8a3a55f02"}, "downloads": -1, "filename": "statscounter-0.0.2.zip", "has_sig": false, "md5_digest": "a9847be7e72c6fc7514bcb56d3ad4d7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9340, "upload_time": "2016-03-02T23:51:17", "upload_time_iso_8601": "2016-03-02T23:51:17.363787Z", "url": "https://files.pythonhosted.org/packages/13/e6/5e692db6abf35446aa00ea6d0946f9fc21bd9d83f393d61a52c61c2cc8d5/statscounter-0.0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a3484f10a8874f1a5df31568c24c889", "sha256": "d45f06f95133fda4266a7612397af284622fbc7964cdd0c80d9f1dee56e59d0e"}, "downloads": -1, "filename": "statscounter-0.0.010.win-amd64.exe", "has_sig": false, "md5_digest": "0a3484f10a8874f1a5df31568c24c889", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 231182, "upload_time": "2016-03-02T21:22:32", "upload_time_iso_8601": "2016-03-02T21:22:32.085051Z", "url": "https://files.pythonhosted.org/packages/20/bc/e7de87b24d5d6f332dcba64d6ee6eb5ff46ffcdf3f0cbe72951102fd2ca6/statscounter-0.0.010.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f514792560b95ba4a76c1bc2ad8992b", "sha256": "c020000a2754a2b9041c9b2bf8946c48b68659b9c6fd0d910943c3611a5e8e47"}, "downloads": -1, "filename": "statscounter-0.0.010.zip", "has_sig": false, "md5_digest": "8f514792560b95ba4a76c1bc2ad8992b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9194, "upload_time": "2016-03-02T21:22:26", "upload_time_iso_8601": "2016-03-02T21:22:26.699131Z", "url": "https://files.pythonhosted.org/packages/83/83/ca692cbb010b1a34d1eea175f6e9f1deb50461dcca57d533f55529ab460b/statscounter-0.0.010.zip", "yanked": false}], "timestamp": "Fri May  8 03:02:21 2020"}