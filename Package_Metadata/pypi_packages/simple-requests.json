{"info": {"author": "Corey Theiss", "author_email": "corey@exploringsolutions.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Simple-requests allows you to get the performance benefit of asynchronous\nrequests, without needing to use any asynchronous coding paradigms.\n\nUsage\n-----\n.. code-block:: python\n\n    from simple_requests import Requests\n\n    # Creates a session and thread pool\n    requests = Requests()\n\n    # Sends one simple request; the response is returned synchronously.\n    login_response = requests.one('http://cat-videos.net/login?user=fanatic&password=c4tl0v3r')\n\n    # Cookies are maintained in this instance of Requests, so subsequent requests\n    # will still be logged-in.\n    profile_urls = [\n        'http://cat-videos.net/profile/mookie',\n        'http://cat-videos.net/profile/kenneth',\n        'http://cat-videos.net/profile/itchy' ]\n\n    # Asynchronously send all the requests for profile pages\n    for profile_response in requests.swarm(profile_urls):\n\n        # Asynchronously send requests for each link found on the profile pages\n        # These requests take precedence over those in the outer loop to minimize overall waiting\n        # Order doesn't matter this time either, so turn that off for a performance gain\n        for friends_response in requests.swarm(profile_response.links, maintainOrder = False):\n\n            # Do something intelligent with the responses, like using\n            # regex to parse the HTML (see http://stackoverflow.com/a/1732454)\n            friends_response.html\n\nRelease History\n---------------\n1.1.1 (June 27, 2014)\n======================\n**API Changes**\n * ``bundleParam`` parameter added to ``Requests.one``, ``Requests.swarm``, ``Requests.each``\n\n1.1.0 (May 01, 2014)\n======================\n**API Changes**\n * ``defaultTimeout`` parameter added to ``Requests.__init__``\n**Bug Fixes**\n * No more errors / warnings on exit\n * Fixes due to API changes in gevent 1.0\n * Fixed a couple documentation errors\n**Features**\n * Added a patch class, with monkey patches of urllib3 (to reduce the likelihood of too many\n   open connections/files at once) and httplib (to disregard servers that incorrectly report the content-length)", "description_content_type": null, "docs_url": "https://pythonhosted.org/simple-requests/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ctheiss/simple-requests", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "simple-requests", "package_url": "https://pypi.org/project/simple-requests/", "platform": "any", "project_url": "https://pypi.org/project/simple-requests/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ctheiss/simple-requests"}, "release_url": "https://pypi.org/project/simple-requests/1.1.1/", "requires_dist": null, "requires_python": null, "summary": "Asynchronous requests in Python without thinking about it.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple-requests allows you to get the performance benefit of asynchronous\nrequests, without needing to use any asynchronous coding paradigms.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">simple_requests</span> <span class=\"kn\">import</span> <span class=\"n\">Requests</span>\n\n<span class=\"c1\"># Creates a session and thread pool</span>\n<span class=\"n\">requests</span> <span class=\"o\">=</span> <span class=\"n\">Requests</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Sends one simple request; the response is returned synchronously.</span>\n<span class=\"n\">login_response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">(</span><span class=\"s1\">'http://cat-videos.net/login?user=fanatic&amp;password=c4tl0v3r'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Cookies are maintained in this instance of Requests, so subsequent requests</span>\n<span class=\"c1\"># will still be logged-in.</span>\n<span class=\"n\">profile_urls</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s1\">'http://cat-videos.net/profile/mookie'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'http://cat-videos.net/profile/kenneth'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'http://cat-videos.net/profile/itchy'</span> <span class=\"p\">]</span>\n\n<span class=\"c1\"># Asynchronously send all the requests for profile pages</span>\n<span class=\"k\">for</span> <span class=\"n\">profile_response</span> <span class=\"ow\">in</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">swarm</span><span class=\"p\">(</span><span class=\"n\">profile_urls</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># Asynchronously send requests for each link found on the profile pages</span>\n    <span class=\"c1\"># These requests take precedence over those in the outer loop to minimize overall waiting</span>\n    <span class=\"c1\"># Order doesn't matter this time either, so turn that off for a performance gain</span>\n    <span class=\"k\">for</span> <span class=\"n\">friends_response</span> <span class=\"ow\">in</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">swarm</span><span class=\"p\">(</span><span class=\"n\">profile_response</span><span class=\"o\">.</span><span class=\"n\">links</span><span class=\"p\">,</span> <span class=\"n\">maintainOrder</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n\n        <span class=\"c1\"># Do something intelligent with the responses, like using</span>\n        <span class=\"c1\"># regex to parse the HTML (see http://stackoverflow.com/a/1732454)</span>\n        <span class=\"n\">friends_response</span><span class=\"o\">.</span><span class=\"n\">html</span>\n</pre>\n</div>\n<div id=\"release-history\">\n<h2>Release History</h2>\n<div id=\"june-27-2014\">\n<h3>1.1.1 (June 27, 2014)</h3>\n<dl>\n<dt><strong>API Changes</strong></dt>\n<dd><ul>\n<li><tt>bundleParam</tt> parameter added to <tt>Requests.one</tt>, <tt>Requests.swarm</tt>, <tt>Requests.each</tt></li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"may-01-2014\">\n<h3>1.1.0 (May 01, 2014)</h3>\n<dl>\n<dt><strong>API Changes</strong></dt>\n<dd><ul>\n<li><tt>defaultTimeout</tt> parameter added to <tt>Requests.__init__</tt></li>\n</ul>\n</dd>\n<dt><strong>Bug Fixes</strong></dt>\n<dd><ul>\n<li>No more errors / warnings on exit</li>\n<li>Fixes due to API changes in gevent 1.0</li>\n<li>Fixed a couple documentation errors</li>\n</ul>\n</dd>\n<dt><strong>Features</strong></dt>\n<dd><ul>\n<li>Added a patch class, with monkey patches of urllib3 (to reduce the likelihood of too many\nopen connections/files at once) and httplib (to disregard servers that incorrectly report the content-length)</li>\n</ul>\n</dd>\n</dl>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1139920, "releases": {"1.0.0": [], "1.0.1": [{"comment_text": "", "digests": {"md5": "fb5c4fd844d293d758aa9244af31728d", "sha256": "44b51d760b0fb813273a5e9f03251765ba39256aed6130fc17dd7960ac750190"}, "downloads": -1, "filename": "simple-requests-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fb5c4fd844d293d758aa9244af31728d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7017, "upload_time": "2013-10-21T20:36:29", "upload_time_iso_8601": "2013-10-21T20:36:29.291423Z", "url": "https://files.pythonhosted.org/packages/51/1f/d6d54ed63bc5bae5b18f06d86f7a7f79cfe9bc7aab716ad015c67c6be60e/simple-requests-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "93167c44afa3ddba00d709d179356405", "sha256": "9298cfcfc2b2376e31970fc01da8a9270265d2e2564ad509fb80e49f9b46229a"}, "downloads": -1, "filename": "simple-requests-1.0.2.tar.gz", "has_sig": false, "md5_digest": "93167c44afa3ddba00d709d179356405", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7557, "upload_time": "2013-10-22T21:03:06", "upload_time_iso_8601": "2013-10-22T21:03:06.255707Z", "url": "https://files.pythonhosted.org/packages/f4/0f/73b8531a5b43bea1d4588238ce8f07f4a3627d98a3ed49ea149ad05d652f/simple-requests-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "4e4d233e4006b7e61eff5d1ac257955a", "sha256": "228ea494ac2ab2208d3e69f91c5f08fd7a18a034cd9b74edfc7b4d4f0335ff59"}, "downloads": -1, "filename": "simple-requests-1.0.3.tar.gz", "has_sig": false, "md5_digest": "4e4d233e4006b7e61eff5d1ac257955a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7606, "upload_time": "2013-10-23T14:54:09", "upload_time_iso_8601": "2013-10-23T14:54:09.907095Z", "url": "https://files.pythonhosted.org/packages/94/24/ae556f18d5793fa07badf1be1414c0622743e4a29295d51a0270d568ebed/simple-requests-1.0.3.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "f4bee251c969a61586d564adc95d056b", "sha256": "6ea83dea6c31558e3d8dbc1684877ff9996d639916f9e9c101a2b6be2b05fa1a"}, "downloads": -1, "filename": "simple-requests-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f4bee251c969a61586d564adc95d056b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12715, "upload_time": "2014-05-01T21:24:19", "upload_time_iso_8601": "2014-05-01T21:24:19.200394Z", "url": "https://files.pythonhosted.org/packages/12/a2/ddd4aa1c71d41fa85a3b1adb5b3762f86b06ce7be5e717ca1ae1b73c69d1/simple-requests-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "aa1b13ece344ce21dbfffcec5928ede8", "sha256": "5b6e9596cf1fd9f6dacd377101d6790f2ac911eb1e80f13acd0d81418068d2ec"}, "downloads": -1, "filename": "simple-requests-1.1.1.tar.gz", "has_sig": false, "md5_digest": "aa1b13ece344ce21dbfffcec5928ede8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12872, "upload_time": "2014-06-27T16:59:53", "upload_time_iso_8601": "2014-06-27T16:59:53.006803Z", "url": "https://files.pythonhosted.org/packages/e6/27/f20343729052db1db8a478cdb348e6f66b2768797aaa00f33c24d94a5e7b/simple-requests-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa1b13ece344ce21dbfffcec5928ede8", "sha256": "5b6e9596cf1fd9f6dacd377101d6790f2ac911eb1e80f13acd0d81418068d2ec"}, "downloads": -1, "filename": "simple-requests-1.1.1.tar.gz", "has_sig": false, "md5_digest": "aa1b13ece344ce21dbfffcec5928ede8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12872, "upload_time": "2014-06-27T16:59:53", "upload_time_iso_8601": "2014-06-27T16:59:53.006803Z", "url": "https://files.pythonhosted.org/packages/e6/27/f20343729052db1db8a478cdb348e6f66b2768797aaa00f33c24d94a5e7b/simple-requests-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:16 2020"}