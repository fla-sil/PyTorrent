{"info": {"author": "Kieran O'Mahony", "author_email": "kieranom@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Overview\n========\n\n`Interactive Brokers`_ Python API, auto generated from C++ API using `SWIG`_.\n\nLatest version: 0.4.1 (TWS API v9.68)\n\nInstall\n=======\n\nUse pip (recommended)::\n\n    $ pip install swigibpy\n\nAlternatively download your archive of choice and run::\n\n    $ python setup.py install\n\nNotes for Windows Users\n=======================\n\nswigibpy just provides a wrapper around the TWS C++ API so this needs to be\ncompiled for your target platform during installation. While this should\n'just work' for Linux and OSX, Windows users might need to do some extra work.\n\nCompile with MinGW\n------------------\n\nDownload and install `MinGW`_ and follow the steps to `add MinGW\nto your path`_.  Note there is a `compatability problem`_ between the latest\nversion of MinGW and disutils so it is recommended to install an older version\nuntil this is resolved (mingw-get-inst-20110802.exe has been known to work).\n\nTo get pip to use MinGW as the compiler edit or create a\nfile named ``distutils.cfg`` in ``[PYTHON LOCATION]\\Lib\\distutils`` where\n``[PYTHON LOCATION]`` is the path to your Python install, e.g. ``C:\\Python27``.\nAdd the following to ``distutils.cfg``::\n\n\t[build]\n\tcompiler=mingw32\n\nthen use the pip command above and with a bit of luck, you're done!\n\nAlternatively you can download and build the package directly. To build and\ninstall use::\n\n\t$ python setup.py build -c mingw32\n\t$ python setup.py install\n\nThis has been verified to work using MinGW and Python 2.7 on Windows 7, Vista,\nand XP.\n\nCompile with Visual Studio\n--------------------------\n\nSeveral users have reported success building swigibpy with Visual Studio, with \na few caveats:\n\n- Distutils has issues building with anything later than Visual Studio 2008\n  (version 9).\n- Visual Studio 11 doesn't like the ``/MD`` compile flag, which distutils adds.\n  For a workaround see `here`_.\n\nUsage\n=====\n\nTo use simply import the swigibpy module. The minimum you will need to do is \ndefine an ``EWrapper`` sub-class whose methods will be invoked when a message\nis received from TWS, see the `examples`_ for more.\n\nBy default swigibpy will automatically poll TWS for messages, see `Notes`_ for\nmore about this.\n\nFor API reference refer to the `C++ API documentation`_.\n\nNotes\n-----\n\nThe ``yield`` parameter in ``CommissionReport`` clashes with a Python reserved\nkeyword so it is renamed to ``_yield``.\n\nBy default swigibpy will create a background thread to automatically poll TWS \nfor messages.  If you wish to disable this behaviour and handle polling \nyourself use the ``poll_auto`` argument when calling ``eConnect``::\n    \n    tws.eConnect(\"\", 7496, 42, poll_auto=False)\n\nThe TWS C++ API performs synchronous I/O using socket receive, swigibpy does \nnot alter this behaviour (hence the background thread).\n\nApart from a few trivial `patches`_ to aid compilation and interoperability \nwith Python swigibpy does not alter the TWS C++ API code in any way.\n\nDevelop\n=======\n\nContributions are welcome! For development you can build the extension in the\ncurrent dir::\n\n    $ python setup.py build_ext --build-lib .\n\nThe majority of the swigibpy code is auto-generated by SWIG and swigibpy also\nincludes a number of trivial patches for TWS's C++ code. The TWS API included \nin the repository has already been patched and the SWIG code has already been \ngenerated, but if you need to rerun these steps the commands are::\n\n    $ python setup.py swigify\n\nto regenerate the SWIG wrappers (SWIG 2.0+ required), and::\n\n    $ python setup.py patchify\n\nto reapply the patches to the TWS API (specify the option ``-r`` if you want to \nun-apply the patches and get back to unaltered TWS code).\n\nLicense\n=======\n\nswigibpy original code is free software under the New BSD license.\n\nInteractive Brokers propriety C++ API is copyright Interactive Brokers LLC.\nswigibpy is in no way supported or endorsed by Interactive Brokers LLC.\n\n--------------\n\n.. _Interactive Brokers: http://www.interactivebrokers.co.uk/\n.. _SWIG: http://www.swig.org/\n.. _C++ API documentation: http://www.interactivebrokers.com/en/software/api/api.htm\n.. _MinGW: http://www.mingw.org/\n.. _add MinGW to your path: http://www.mingw.org/wiki/Getting_Started#toc5\n.. _compatability problem: http://bugs.python.org/issue12641\n.. _here: https://github.com/Komnomnomnom/swigibpy/issues/2\n.. _patches: https://github.com/Komnomnomnom/swigibpy/tree/master/patches\n.. _examples: https://github.com/Komnomnomnom/swigibpy/tree/master/examples", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Komnomnomnom/swigibpy/", "keywords": "interactive brokers,tws", "license": "New BSD License", "maintainer": null, "maintainer_email": null, "name": "swigibpy", "package_url": "https://pypi.org/project/swigibpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/swigibpy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Komnomnomnom/swigibpy/"}, "release_url": "https://pypi.org/project/swigibpy/0.4.1/", "requires_dist": null, "requires_python": null, "summary": "Third party Python API for Interactive Brokers", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p><a href=\"http://www.interactivebrokers.co.uk/\" rel=\"nofollow\">Interactive Brokers</a> Python API, auto generated from C++ API using <a href=\"http://www.swig.org/\" rel=\"nofollow\">SWIG</a>.</p>\n<p>Latest version: 0.4.1 (TWS API v9.68)</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Use pip (recommended):</p>\n<pre>$ pip install swigibpy\n</pre>\n<p>Alternatively download your archive of choice and run:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"notes-for-windows-users\">\n<h2>Notes for Windows Users</h2>\n<p>swigibpy just provides a wrapper around the TWS C++ API so this needs to be\ncompiled for your target platform during installation. While this should\n\u2018just work\u2019 for Linux and OSX, Windows users might need to do some extra work.</p>\n<div id=\"compile-with-mingw\">\n<h3>Compile with MinGW</h3>\n<p>Download and install <a href=\"http://www.mingw.org/\" rel=\"nofollow\">MinGW</a> and follow the steps to <a href=\"http://www.mingw.org/wiki/Getting_Started#toc5\" rel=\"nofollow\">add MinGW\nto your path</a>.  Note there is a <a href=\"http://bugs.python.org/issue12641\" rel=\"nofollow\">compatability problem</a> between the latest\nversion of MinGW and disutils so it is recommended to install an older version\nuntil this is resolved (mingw-get-inst-20110802.exe has been known to work).</p>\n<p>To get pip to use MinGW as the compiler edit or create a\nfile named <tt>distutils.cfg</tt> in <tt>[PYTHON <span class=\"pre\">LOCATION]\\Lib\\distutils</span></tt> where\n<tt>[PYTHON LOCATION]</tt> is the path to your Python install, e.g. <tt><span class=\"pre\">C:\\Python27</span></tt>.\nAdd the following to <tt>distutils.cfg</tt>:</p>\n<pre>[build]\ncompiler=mingw32\n</pre>\n<p>then use the pip command above and with a bit of luck, you\u2019re done!</p>\n<p>Alternatively you can download and build the package directly. To build and\ninstall use:</p>\n<pre>$ python setup.py build -c mingw32\n$ python setup.py install\n</pre>\n<p>This has been verified to work using MinGW and Python 2.7 on Windows 7, Vista,\nand XP.</p>\n</div>\n<div id=\"compile-with-visual-studio\">\n<h3>Compile with Visual Studio</h3>\n<p>Several users have reported success building swigibpy with Visual Studio, with\na few caveats:</p>\n<ul>\n<li>Distutils has issues building with anything later than Visual Studio 2008\n(version 9).</li>\n<li>Visual Studio 11 doesn\u2019t like the <tt>/MD</tt> compile flag, which distutils adds.\nFor a workaround see <a href=\"https://github.com/Komnomnomnom/swigibpy/issues/2\" rel=\"nofollow\">here</a>.</li>\n</ul>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use simply import the swigibpy module. The minimum you will need to do is\ndefine an <tt>EWrapper</tt> sub-class whose methods will be invoked when a message\nis received from TWS, see the <a href=\"https://github.com/Komnomnomnom/swigibpy/tree/master/examples\" rel=\"nofollow\">examples</a> for more.</p>\n<p>By default swigibpy will automatically poll TWS for messages, see <a href=\"#notes\" rel=\"nofollow\">Notes</a> for\nmore about this.</p>\n<p>For API reference refer to the <a href=\"http://www.interactivebrokers.com/en/software/api/api.htm\" rel=\"nofollow\">C++ API documentation</a>.</p>\n<div id=\"notes\">\n<h3>Notes</h3>\n<p>The <tt>yield</tt> parameter in <tt>CommissionReport</tt> clashes with a Python reserved\nkeyword so it is renamed to <tt>_yield</tt>.</p>\n<p>By default swigibpy will create a background thread to automatically poll TWS\nfor messages.  If you wish to disable this behaviour and handle polling\nyourself use the <tt>poll_auto</tt> argument when calling <tt>eConnect</tt>:</p>\n<pre>tws.eConnect(\"\", 7496, 42, poll_auto=False)\n</pre>\n<p>The TWS C++ API performs synchronous I/O using socket receive, swigibpy does\nnot alter this behaviour (hence the background thread).</p>\n<p>Apart from a few trivial <a href=\"https://github.com/Komnomnomnom/swigibpy/tree/master/patches\" rel=\"nofollow\">patches</a> to aid compilation and interoperability\nwith Python swigibpy does not alter the TWS C++ API code in any way.</p>\n</div>\n</div>\n<div id=\"develop\">\n<h2>Develop</h2>\n<p>Contributions are welcome! For development you can build the extension in the\ncurrent dir:</p>\n<pre>$ python setup.py build_ext --build-lib .\n</pre>\n<p>The majority of the swigibpy code is auto-generated by SWIG and swigibpy also\nincludes a number of trivial patches for TWS\u2019s C++ code. The TWS API included\nin the repository has already been patched and the SWIG code has already been\ngenerated, but if you need to rerun these steps the commands are:</p>\n<pre>$ python setup.py swigify\n</pre>\n<p>to regenerate the SWIG wrappers (SWIG 2.0+ required), and:</p>\n<pre>$ python setup.py patchify\n</pre>\n<p>to reapply the patches to the TWS API (specify the option <tt><span class=\"pre\">-r</span></tt> if you want to\nun-apply the patches and get back to unaltered TWS code).</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>swigibpy original code is free software under the New BSD license.</p>\n<p>Interactive Brokers propriety C++ API is copyright Interactive Brokers LLC.\nswigibpy is in no way supported or endorsed by Interactive Brokers LLC.</p>\n<hr class=\"docutils\">\n</div>\n\n          </div>"}, "last_serial": 752607, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "852bd203f7698caddf412e6babbed52b", "sha256": "e9f65bcb6828985f163b8ccc7f509cfdc472c63b611e4b2a43d3b0bfb9608543"}, "downloads": -1, "filename": "swigibpy-0.2.tar.gz", "has_sig": false, "md5_digest": "852bd203f7698caddf412e6babbed52b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107821, "upload_time": "2011-08-31T14:15:56", "upload_time_iso_8601": "2011-08-31T14:15:56.892050Z", "url": "https://files.pythonhosted.org/packages/28/0c/46541018e3706c9a2bd7613fee6b23d6bef1d9bc7b79212584d3131db10b/swigibpy-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2c79c5d7a43991942562329b17c3bd12", "sha256": "553d4e74722a58735af8e0933c4b71d1a31ce16706c10f99efb6f977036ce3d4"}, "downloads": -1, "filename": "swigibpy-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2c79c5d7a43991942562329b17c3bd12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124245, "upload_time": "2011-09-19T15:26:05", "upload_time_iso_8601": "2011-09-19T15:26:05.248623Z", "url": "https://files.pythonhosted.org/packages/aa/33/a4b776592957e50073d953b5e13d5bdffd5cb462358e1ee17979e00bec2f/swigibpy-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "24887f38406451f05fdc35c3bb1649bc", "sha256": "82b36f30155e67f73c06d240cba842fcc666131b78c7a109aaaa217f2806dfb7"}, "downloads": -1, "filename": "swigibpy-0.2.2-0.tar.gz", "has_sig": false, "md5_digest": "24887f38406451f05fdc35c3bb1649bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124785, "upload_time": "2011-10-10T13:45:21", "upload_time_iso_8601": "2011-10-10T13:45:21.626713Z", "url": "https://files.pythonhosted.org/packages/43/b6/3fd90b81f444f3f83c7fb3ee9dc05cf2e7f2c7158bb100865d4ced7fa6f6/swigibpy-0.2.2-0.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "d66f97893f267081d49d0ab57796b098", "sha256": "9139e9d69a41a45470d3e134c39bcbd47d00bdb457b9dd57a9c6e7dea8f246bf"}, "downloads": -1, "filename": "swigibpy-0.2.3.tar.gz", "has_sig": false, "md5_digest": "d66f97893f267081d49d0ab57796b098", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 124058, "upload_time": "2012-04-03T18:38:14", "upload_time_iso_8601": "2012-04-03T18:38:14.413342Z", "url": "https://files.pythonhosted.org/packages/9e/73/0f12c29b5422b2c7f245816e6561a5fef195dec60f25f7974f5c93d376f2/swigibpy-0.2.3.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "56135ed5dbb174ddec38b35659d34732", "sha256": "d7d8274f7445b18ee0f0e19298f874e26861b94877194e12c4350a5c8f29b540"}, "downloads": -1, "filename": "swigibpy-0.3.tar.gz", "has_sig": false, "md5_digest": "56135ed5dbb174ddec38b35659d34732", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140166, "upload_time": "2012-08-08T13:57:06", "upload_time_iso_8601": "2012-08-08T13:57:06.860155Z", "url": "https://files.pythonhosted.org/packages/fb/e6/bf07ce551802e0bd5041f6928806d99bb71e70c2be1150e4fe039243411c/swigibpy-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "57738239c8bee30c1f1bc8f1ab5c7b39", "sha256": "2de72e820b89dc3f3c9cdd250c5ce67cc76f2a279eb3491a7d9a484e0a4a7db7"}, "downloads": -1, "filename": "swigibpy-0.4.tar.gz", "has_sig": false, "md5_digest": "57738239c8bee30c1f1bc8f1ab5c7b39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 170358, "upload_time": "2013-03-24T18:25:18", "upload_time_iso_8601": "2013-03-24T18:25:18.765199Z", "url": "https://files.pythonhosted.org/packages/a2/18/aa99e7d9304f54cd66c1bd6c7154fc485271a0bbaf6986d6a8794fb5bf8c/swigibpy-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "2dee942f21c2e57ef50c024562005449", "sha256": "ae27ac45eb2f61032113175bef38d9f8714283179d726aeb12c383d814aa4109"}, "downloads": -1, "filename": "swigibpy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "2dee942f21c2e57ef50c024562005449", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 169936, "upload_time": "2013-05-04T12:10:28", "upload_time_iso_8601": "2013-05-04T12:10:28.017068Z", "url": "https://files.pythonhosted.org/packages/ea/1e/be62bba0191ecea775916ec4d335a637babb501b60d5c8649cc6059b1912/swigibpy-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2dee942f21c2e57ef50c024562005449", "sha256": "ae27ac45eb2f61032113175bef38d9f8714283179d726aeb12c383d814aa4109"}, "downloads": -1, "filename": "swigibpy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "2dee942f21c2e57ef50c024562005449", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 169936, "upload_time": "2013-05-04T12:10:28", "upload_time_iso_8601": "2013-05-04T12:10:28.017068Z", "url": "https://files.pythonhosted.org/packages/ea/1e/be62bba0191ecea775916ec4d335a637babb501b60d5c8649cc6059b1912/swigibpy-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:29 2020"}