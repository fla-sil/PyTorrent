{"info": {"author": "Jon Crall", "author_email": "erotemic@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "|CircleCI| |Travis| |Appveyor| |Codecov| |Pypi| |Downloads| |ReadTheDocs| |CodeQuality|\n\nTimerit\n=======\n\nA powerful multiline alternative to Python's builtin ``timeit`` module.\n\nDocs are being written at https://timerit.readthedocs.io/en/latest/\n\nDescription\n-----------\n\nEasily do robust timings on existing blocks of code by simply indenting\nthem. There is no need to refactor into a string representation or\nconvert to a single line.\n\nThis is a standalone version of a utility distributed with \n`ubelt <https://github.com/Erotemic/ubelt>`__.\n\nInstallation\n------------\n\nFrom pypi:\n^^^^^^^^^^\n\n::\n\n    pip install timerit\n\nFrom github:\n^^^^^^^^^^^^\n\n::\n\n    pip install git+https://github.com/Erotemic/timerit.git\n\nExamples\n--------\n\nThe quick and dirty way just requires one indent.\n\n.. code:: python\n\n    >>> import math\n    >>> from timerit import Timerit\n    >>> for _ in Timerit(num=200, verbose=2):\n    >>>     math.factorial(10000)\n    Timing for 200 loops\n    Timed for: 200 loops, best of 3\n        time per loop: best=2.469 ms, mean=2.49 \u00b1 0.037 ms\n\nUse the loop variable as a context manager for more accurate timings or\nto incorporate an setup phase that is not timed. You can also access\nproperties of the ``Timerit`` class to programmatically use results.\n\n.. code:: python\n\n    >>> import math\n    >>> from timerit import Timerit\n    >>> t1 = Timerit(num=200, verbose=2)\n    >>> for timer in t1:\n    >>>     setup_vars = 10000\n    >>>     with timer:\n    >>>         math.factorial(setup_vars)\n    >>> print('t1.total_time = %r' % (t1.total_time,))\n    Timing for 200 loops\n    Timed for: 200 loops, best of 3\n        time per loop: best=2.064 ms, mean=2.115 \u00b1 0.05 ms\n    t1.total_time = 0.4427177629695507\n\nThere is also a simple one-liner that is comparable to IPython magic:\n\nCompare the timeit version:\n\n.. code:: python\n\n    >>> %timeit math.factorial(100)\n    564 ns \u00b1 5.46 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\n\nWith the Timerit version:\n\n.. code:: python\n\n    >>> Timerit(100000).call(math.factorial, 100).print()\n    Timed for: 1 loops, best of 1\n        time per loop: best=4.828 \u00b5s, mean=4.828 \u00b1 0.0 \u00b5s\n\n.. |Travis| image:: https://img.shields.io/travis/Erotemic/timerit/master.svg?label=Travis%20CI\n   :target: https://travis-ci.org/Erotemic/timerit?branch=master\n.. |Codecov| image:: https://codecov.io/github/Erotemic/timerit/badge.svg?branch=master&service=github\n   :target: https://codecov.io/github/Erotemic/timerit?branch=master\n.. |Appveyor| image:: https://ci.appveyor.com/api/projects/status/github/Erotemic/timerit?branch=master&svg=True\n   :target: https://ci.appveyor.com/project/Erotemic/timerit/branch/master\n.. |Pypi| image:: https://img.shields.io/pypi/v/timerit.svg\n   :target: https://pypi.python.org/pypi/timerit\n.. |Downloads| image:: https://img.shields.io/pypi/dm/timerit.svg\n   :target: https://pypistats.org/packages/timerit\n.. |CircleCI| image:: https://circleci.com/gh/Erotemic/timerit.svg?style=svg\n    :target: https://circleci.com/gh/Erotemic/timerit\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/timerit/badge/?version=latest\n    :target: http://timerit.readthedocs.io/en/latest/\n.. |CodeQuality| image:: https://api.codacy.com/project/badge/Grade/fdcedca723f24ec4be9c7067d91cb43b \n    :target: https://www.codacy.com/manual/Erotemic/timerit?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Erotemic/timerit&amp;utm_campaign=Badge_Grade", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Erotemic/timerit", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "timerit", "package_url": "https://pypi.org/project/timerit/", "platform": "", "project_url": "https://pypi.org/project/timerit/", "project_urls": {"Homepage": "https://github.com/Erotemic/timerit"}, "release_url": "https://pypi.org/project/timerit/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "A powerful multiline alternative to timeit", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/Erotemic/timerit\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/863e6da66f8403ac45641a21a9831765d089f917/68747470733a2f2f636972636c6563692e636f6d2f67682f45726f74656d69632f74696d657269742e7376673f7374796c653d737667\"></a> <a href=\"https://travis-ci.org/Erotemic/timerit?branch=master\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac4ea24ac41dd4837096dd827dcc3f32e02db875/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f45726f74656d69632f74696d657269742f6d61737465722e7376673f6c6162656c3d5472617669732532304349\"></a> <a href=\"https://ci.appveyor.com/project/Erotemic/timerit/branch/master\" rel=\"nofollow\"><img alt=\"Appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c4bfeff654b79b6fe47c07603f64f5a4082bfae2/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f45726f74656d69632f74696d657269743f6272616e63683d6d6173746572267376673d54727565\"></a> <a href=\"https://codecov.io/github/Erotemic/timerit?branch=master\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6c7fdbf26ab7aea132fb0be53e191b4ca577eb8/68747470733a2f2f636f6465636f762e696f2f6769746875622f45726f74656d69632f74696d657269742f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a> <a href=\"https://pypi.python.org/pypi/timerit\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c621d98f938486efe219ff9cab8f8f2c0c575766/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f74696d657269742e737667\"></a> <a href=\"https://pypistats.org/packages/timerit\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9824c1136038792d055cbe3a44a5bb7f9825a03/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f74696d657269742e737667\"></a> <a href=\"http://timerit.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"ReadTheDocs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5214701ab768b90217d6f1beca169532dc73aafd/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f74696d657269742f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://www.codacy.com/manual/Erotemic/timerit?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Erotemic/timerit&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"CodeQuality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6344d66c0938c9861e125a178df3be138070b9f/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6664636564636137323366323465633462653963373036376439316362343362\"></a></p>\n<div id=\"timerit\">\n<h2>Timerit</h2>\n<p>A powerful multiline alternative to Python\u2019s builtin <tt>timeit</tt> module.</p>\n<p>Docs are being written at <a href=\"https://timerit.readthedocs.io/en/latest/\" rel=\"nofollow\">https://timerit.readthedocs.io/en/latest/</a></p>\n<div id=\"description\">\n<h3>Description</h3>\n<p>Easily do robust timings on existing blocks of code by simply indenting\nthem. There is no need to refactor into a string representation or\nconvert to a single line.</p>\n<p>This is a standalone version of a utility distributed with\n<a href=\"https://github.com/Erotemic/ubelt\" rel=\"nofollow\">ubelt</a>.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<div id=\"from-pypi\">\n<h4>From pypi:</h4>\n<pre>pip install timerit\n</pre>\n</div>\n<div id=\"from-github\">\n<h4>From github:</h4>\n<pre>pip install git+https://github.com/Erotemic/timerit.git\n</pre>\n</div>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>The quick and dirty way just requires one indent.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">timerit</span> <span class=\"kn\">import</span> <span class=\"n\">Timerit</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">Timerit</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"mi\">10000</span><span class=\"p\">)</span>\n<span class=\"n\">Timing</span> <span class=\"k\">for</span> <span class=\"mi\">200</span> <span class=\"n\">loops</span>\n<span class=\"n\">Timed</span> <span class=\"k\">for</span><span class=\"p\">:</span> <span class=\"mi\">200</span> <span class=\"n\">loops</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span>\n    <span class=\"n\">time</span> <span class=\"n\">per</span> <span class=\"n\">loop</span><span class=\"p\">:</span> <span class=\"n\">best</span><span class=\"o\">=</span><span class=\"mf\">2.469</span> <span class=\"n\">ms</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"o\">=</span><span class=\"mf\">2.49</span> <span class=\"err\">\u00b1</span> <span class=\"mf\">0.037</span> <span class=\"n\">ms</span>\n</pre>\n<p>Use the loop variable as a context manager for more accurate timings or\nto incorporate an setup phase that is not timed. You can also access\nproperties of the <tt>Timerit</tt> class to programmatically use results.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">math</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">timerit</span> <span class=\"kn\">import</span> <span class=\"n\">Timerit</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">Timerit</span><span class=\"p\">(</span><span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">timer</span> <span class=\"ow\">in</span> <span class=\"n\">t1</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">setup_vars</span> <span class=\"o\">=</span> <span class=\"mi\">10000</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"k\">with</span> <span class=\"n\">timer</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"n\">setup_vars</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'t1.total_time = </span><span class=\"si\">%r</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">t1</span><span class=\"o\">.</span><span class=\"n\">total_time</span><span class=\"p\">,))</span>\n<span class=\"n\">Timing</span> <span class=\"k\">for</span> <span class=\"mi\">200</span> <span class=\"n\">loops</span>\n<span class=\"n\">Timed</span> <span class=\"k\">for</span><span class=\"p\">:</span> <span class=\"mi\">200</span> <span class=\"n\">loops</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">3</span>\n    <span class=\"n\">time</span> <span class=\"n\">per</span> <span class=\"n\">loop</span><span class=\"p\">:</span> <span class=\"n\">best</span><span class=\"o\">=</span><span class=\"mf\">2.064</span> <span class=\"n\">ms</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"o\">=</span><span class=\"mf\">2.115</span> <span class=\"err\">\u00b1</span> <span class=\"mf\">0.05</span> <span class=\"n\">ms</span>\n<span class=\"n\">t1</span><span class=\"o\">.</span><span class=\"n\">total_time</span> <span class=\"o\">=</span> <span class=\"mf\">0.4427177629695507</span>\n</pre>\n<p>There is also a simple one-liner that is comparable to IPython magic:</p>\n<p>Compare the timeit version:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">%</span><span class=\"n\">timeit</span> <span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">factorial</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"mi\">564</span> <span class=\"n\">ns</span> <span class=\"err\">\u00b1</span> <span class=\"mf\">5.46</span> <span class=\"n\">ns</span> <span class=\"n\">per</span> <span class=\"n\">loop</span> <span class=\"p\">(</span><span class=\"n\">mean</span> <span class=\"err\">\u00b1</span> <span class=\"n\">std</span><span class=\"o\">.</span> <span class=\"n\">dev</span><span class=\"o\">.</span> <span class=\"n\">of</span> <span class=\"mi\">7</span> <span class=\"n\">runs</span><span class=\"p\">,</span> <span class=\"mi\">1000000</span> <span class=\"n\">loops</span> <span class=\"n\">each</span><span class=\"p\">)</span>\n</pre>\n<p>With the Timerit version:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Timerit</span><span class=\"p\">(</span><span class=\"mi\">100000</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">factorial</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">print</span><span class=\"p\">()</span>\n<span class=\"n\">Timed</span> <span class=\"k\">for</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"n\">loops</span><span class=\"p\">,</span> <span class=\"n\">best</span> <span class=\"n\">of</span> <span class=\"mi\">1</span>\n    <span class=\"n\">time</span> <span class=\"n\">per</span> <span class=\"n\">loop</span><span class=\"p\">:</span> <span class=\"n\">best</span><span class=\"o\">=</span><span class=\"mf\">4.828</span> <span class=\"n\">\u00b5s</span><span class=\"p\">,</span> <span class=\"n\">mean</span><span class=\"o\">=</span><span class=\"mf\">4.828</span> <span class=\"err\">\u00b1</span> <span class=\"mf\">0.0</span> <span class=\"n\">\u00b5s</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6373155, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a3815f310b602ee3190bad5e52dbd168", "sha256": "7215da4d51e148ca57b3f33a5991cfb2daaf74ed841e658306737699fc882373"}, "downloads": -1, "filename": "timerit-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a3815f310b602ee3190bad5e52dbd168", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8431, "upload_time": "2018-05-27T19:52:55", "upload_time_iso_8601": "2018-05-27T19:52:55.298475Z", "url": "https://files.pythonhosted.org/packages/04/02/2b3e461b0634994dce16df71c9b0019ef5e19d82b881997c5a9c9a289c56/timerit-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "fa136124ee67a337debab676208bbd66", "sha256": "6d2018a1d8470324196d6e234dcb4b95637b35cbe3bf4a8f5a4195cd04400285"}, "downloads": -1, "filename": "timerit-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fa136124ee67a337debab676208bbd66", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9557, "upload_time": "2018-06-28T03:43:24", "upload_time_iso_8601": "2018-06-28T03:43:24.722572Z", "url": "https://files.pythonhosted.org/packages/c0/66/f7b4c9737286fe055f2c46d403015b47e61d4fe8cb81b0d95d3d9f039cd2/timerit-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "b71d7170cf45a789c797ef1a1c12002c", "sha256": "b0a4deaecd1baccf846d97f1862e8f6a5508d686ae35bf55028ca4b370f36153"}, "downloads": -1, "filename": "timerit-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b71d7170cf45a789c797ef1a1c12002c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9754, "upload_time": "2018-07-19T15:00:08", "upload_time_iso_8601": "2018-07-19T15:00:08.997017Z", "url": "https://files.pythonhosted.org/packages/e6/7e/dbea0d3b88eda9740ad6439c30ee34761f213e4d475cee6f32c94a4dcfa6/timerit-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "52435903589906a8a120fbbacc40c430", "sha256": "a3ff3f7c42ff6f0b49ec9073e11a6cec9a86ecfed163cce2410706e7a422407d"}, "downloads": -1, "filename": "timerit-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "52435903589906a8a120fbbacc40c430", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9864, "upload_time": "2019-03-04T01:20:45", "upload_time_iso_8601": "2019-03-04T01:20:45.302927Z", "url": "https://files.pythonhosted.org/packages/6c/c5/f324c4a7da93b6cf5a91d2cfddad50926248597751a91d096b951a801549/timerit-0.2.0-py2.py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "683167921405f8a02e93a0c46e73b9ab", "sha256": "04d90100d124ec1c58c2091c299d84ce1e143b4f7e321f5f39bc3f12bd66a4f7"}, "downloads": -1, "filename": "timerit-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "683167921405f8a02e93a0c46e73b9ab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9926, "upload_time": "2019-03-04T02:28:05", "upload_time_iso_8601": "2019-03-04T02:28:05.548234Z", "url": "https://files.pythonhosted.org/packages/6c/dc/1bea352d27a736193fea2bf726cd0a39927cbb5529c72038aed7fcac7bc4/timerit-0.2.1-py2.py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "583efd202420d88637d8412de56c5474", "sha256": "e869b929c8e7e569c2122eb7ad6bbc938704445f60557318df05b19343b65a6e"}, "downloads": -1, "filename": "timerit-0.3.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "583efd202420d88637d8412de56c5474", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13793, "upload_time": "2019-12-30T00:30:39", "upload_time_iso_8601": "2019-12-30T00:30:39.509981Z", "url": "https://files.pythonhosted.org/packages/0d/35/31fdb25ac646c41fe89faa5c5c78f223aed184c8aa6f1fc9faf2aa98ce0d/timerit-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a94aea6e3e84619c4ede88ac6a336f7", "sha256": "594178d0ff1b05909285b71dac1f1200d32cce45e9516b2824f2c3c76f154530"}, "downloads": -1, "filename": "timerit-0.3.0.tar.gz", "has_sig": true, "md5_digest": "6a94aea6e3e84619c4ede88ac6a336f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10607, "upload_time": "2019-12-30T00:30:37", "upload_time_iso_8601": "2019-12-30T00:30:37.780328Z", "url": "https://files.pythonhosted.org/packages/21/c1/ee92ecfd6842cacb71c0ededb7fa73d204c6f8a77d28b0a7a6a86fbf1f50/timerit-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "583efd202420d88637d8412de56c5474", "sha256": "e869b929c8e7e569c2122eb7ad6bbc938704445f60557318df05b19343b65a6e"}, "downloads": -1, "filename": "timerit-0.3.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "583efd202420d88637d8412de56c5474", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13793, "upload_time": "2019-12-30T00:30:39", "upload_time_iso_8601": "2019-12-30T00:30:39.509981Z", "url": "https://files.pythonhosted.org/packages/0d/35/31fdb25ac646c41fe89faa5c5c78f223aed184c8aa6f1fc9faf2aa98ce0d/timerit-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6a94aea6e3e84619c4ede88ac6a336f7", "sha256": "594178d0ff1b05909285b71dac1f1200d32cce45e9516b2824f2c3c76f154530"}, "downloads": -1, "filename": "timerit-0.3.0.tar.gz", "has_sig": true, "md5_digest": "6a94aea6e3e84619c4ede88ac6a336f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10607, "upload_time": "2019-12-30T00:30:37", "upload_time_iso_8601": "2019-12-30T00:30:37.780328Z", "url": "https://files.pythonhosted.org/packages/21/c1/ee92ecfd6842cacb71c0ededb7fa73d204c6f8a77d28b0a7a6a86fbf1f50/timerit-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:27 2020"}