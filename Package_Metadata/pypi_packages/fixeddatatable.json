{"info": {"author": "Jeff Roche", "author_email": "jeff.roche@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Build Tools"], "description": "FixedDataTablePy\n================\n\nPython utilities for building and rendering FixedDataTable components that can\neasily be sorted, filtered, and exported to Excel.\n\nInstallation\n------------\n\nInstall the python package::\n\n  pip install fixeddatatable\n\nInstall the javascript libary with bower::\n\n  bower install fixed-data-table-py\n\nUsage Overview\n--------------\n\n1. Build table rows as a list of lists or a list of dicts\n2. Build ``Column`` objects with arguments that match the column props in the fixed-data-table `column API`_\n3. Create a ``Table`` object and pass the rows and columns as arguments\n4. In your template, create the ``FixedDataTablePy`` React component and pass in the ``Table.json`` as the options property.\n\nOther Functionality\n-------------------\n\n- number formatting: give the column a ``num_format`` property with a `numeral.js`_ format string\n- filtering: pass the ``Table`` constructor the data key to filter by and a placeholder to enable filtering\n- exporting: pass the ``Table`` constructor the filename and the table header will include a button to export the table data to a .xlsx file\n\nExample\n-------\n\nSee the sample_project for a full example of a Flask app.\n\nIn your view::\n\n  from fixeddatatable import Table, Column\n\n  rows = [\n      {'col1': 'a1', 'col2': 'b1', 'col3': '0.99'},\n      {'col1': 'a2', 'col2': 'b2', 'col3': '0.12313'},\n      {'col1': 'a3', 'col2': 'b3', 'col3': '1.04'},\n  ]\n  cols = [\n      Column(label='Col 1', key='col1', width=100),\n      Column(label='Col 2', key='col2', width=100),\n      Column(label='Col 3', key='col3', width=100, num_format='0.0%'),\n  ]\n  tbl = Table(row_height=50, width=300, height=500, columns=cols, rows=rows,\n              filter={'key': 'col2', 'placeholder': 'Filter by Col 2'},\n              export_filename='SampleProject.xlsx')\n\n\nIn your template::\n\n  <div id=\"datatable\"></div>\n\n  <script type=\"text/javascript\">\n    var tableData = tbl.json|safe;\n    React.render(\n      React.createElement(FixedDataTablePy, {options: tableData}),\n      document.getElementById('yourid')\n    );\n  </script>\n\n\n.. _`column API`: https://facebook.github.io/fixed-data-table/api-column.html\n.. _`numeral.js`: http://numeraljs.com/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeffroche/fixed-data-table-py", "keywords": "js", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "fixeddatatable", "package_url": "https://pypi.org/project/fixeddatatable/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fixeddatatable/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jeffroche/fixed-data-table-py"}, "release_url": "https://pypi.org/project/fixeddatatable/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Utilities for interfacing with FixedDataTable.js", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python utilities for building and rendering FixedDataTable components that can\neasily be sorted, filtered, and exported to Excel.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install the python package:</p>\n<pre>pip install fixeddatatable\n</pre>\n<p>Install the javascript libary with bower:</p>\n<pre>bower install fixed-data-table-py\n</pre>\n</div>\n<div id=\"usage-overview\">\n<h2>Usage Overview</h2>\n<ol>\n<li>Build table rows as a list of lists or a list of dicts</li>\n<li>Build <tt>Column</tt> objects with arguments that match the column props in the fixed-data-table <a href=\"https://facebook.github.io/fixed-data-table/api-column.html\" rel=\"nofollow\">column API</a></li>\n<li>Create a <tt>Table</tt> object and pass the rows and columns as arguments</li>\n<li>In your template, create the <tt>FixedDataTablePy</tt> React component and pass in the <tt>Table.json</tt> as the options property.</li>\n</ol>\n</div>\n<div id=\"other-functionality\">\n<h2>Other Functionality</h2>\n<ul>\n<li>number formatting: give the column a <tt>num_format</tt> property with a <a href=\"http://numeraljs.com/\" rel=\"nofollow\">numeral.js</a> format string</li>\n<li>filtering: pass the <tt>Table</tt> constructor the data key to filter by and a placeholder to enable filtering</li>\n<li>exporting: pass the <tt>Table</tt> constructor the filename and the table header will include a button to export the table data to a .xlsx file</li>\n</ul>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>See the sample_project for a full example of a Flask app.</p>\n<p>In your view:</p>\n<pre>from fixeddatatable import Table, Column\n\nrows = [\n    {'col1': 'a1', 'col2': 'b1', 'col3': '0.99'},\n    {'col1': 'a2', 'col2': 'b2', 'col3': '0.12313'},\n    {'col1': 'a3', 'col2': 'b3', 'col3': '1.04'},\n]\ncols = [\n    Column(label='Col 1', key='col1', width=100),\n    Column(label='Col 2', key='col2', width=100),\n    Column(label='Col 3', key='col3', width=100, num_format='0.0%'),\n]\ntbl = Table(row_height=50, width=300, height=500, columns=cols, rows=rows,\n            filter={'key': 'col2', 'placeholder': 'Filter by Col 2'},\n            export_filename='SampleProject.xlsx')\n</pre>\n<p>In your template:</p>\n<pre>&lt;div id=\"datatable\"&gt;&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n  var tableData = tbl.json|safe;\n  React.render(\n    React.createElement(FixedDataTablePy, {options: tableData}),\n    document.getElementById('yourid')\n  );\n&lt;/script&gt;\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1664770, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7f288c3519dd61d4615f3c616c18325e", "sha256": "1641c466b025c3f20d1a3cce173b1ae0674bb8ea0514644b6e0005a31d584994"}, "downloads": -1, "filename": "fixeddatatable-0.0.1.tar.gz", "has_sig": false, "md5_digest": "7f288c3519dd61d4615f3c616c18325e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2258, "upload_time": "2015-08-02T17:30:21", "upload_time_iso_8601": "2015-08-02T17:30:21.760196Z", "url": "https://files.pythonhosted.org/packages/5e/33/02c0848b4095583b44d240bd2a141551b4a05a24a2704fa98a394e7abafc/fixeddatatable-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2f10909b92087d5294b483bae9024731", "sha256": "a1c68e74ccf311baa03f9b0471b3e6c31960abd95b46cec85ca9a1986231d7e8"}, "downloads": -1, "filename": "fixeddatatable-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2f10909b92087d5294b483bae9024731", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2889, "upload_time": "2015-08-05T02:56:12", "upload_time_iso_8601": "2015-08-05T02:56:12.166392Z", "url": "https://files.pythonhosted.org/packages/3c/57/df683a54638ed5c43a5668cb8a9c115e37def23155dd5f75cc3a8c63b658/fixeddatatable-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f10909b92087d5294b483bae9024731", "sha256": "a1c68e74ccf311baa03f9b0471b3e6c31960abd95b46cec85ca9a1986231d7e8"}, "downloads": -1, "filename": "fixeddatatable-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2f10909b92087d5294b483bae9024731", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2889, "upload_time": "2015-08-05T02:56:12", "upload_time_iso_8601": "2015-08-05T02:56:12.166392Z", "url": "https://files.pythonhosted.org/packages/3c/57/df683a54638ed5c43a5668cb8a9c115e37def23155dd5f75cc3a8c63b658/fixeddatatable-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:03 2020"}