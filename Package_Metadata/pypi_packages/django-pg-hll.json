{"info": {"author": "Mikhail Shvein", "author_email": "work_shvein_mihail@mail.ru", "bugtrack_url": null, "classifiers": [], "description": "# django-pg-hll\nProvides a django wrapper for [postgresql-hll library by CitusData](https://github.com/citusdata/postgresql-hll#the-importance-of-hashing)\n\n## Requirements\n* Python 2.7 or Python 3.4+\n* django >= 1.9\n* pytz\n* six\n* typing\n* psycopg2\n* PostgreSQL 9.4+   \n\n## Installation\nInstall via pip:  \n`pip install django-pg-hll`    \nor via setup.py:  \n`python setup.py install`\n\n## Usage\n### Prerequisites\nInstall [postgresql-hll extension](https://github.com/citusdata/postgresql-hll#install)\n\n### Creating table with hll field\n* Add HllField to your model:\n  ```python\n  from django.db import models\n  from django_pg_hll import HllField\n\n  class MyModel(models.Model):\n      hll = HllField()\n  ```\n* Call [makemigrations](https://docs.djangoproject.com/en/2.1/ref/django-admin/#django-admin-makemigrations) to create a migration\n* Call [migrate](https://docs.djangoproject.com/en/2.1/ref/django-admin/#django-admin-migrate) to apply migration.\n\n### Hll values\nIn order to create and update Hll this library introduces a set of functions \n(corresponding to [postgres-hll hash functions](https://github.com/citusdata/postgresql-hll#hashing)),\n to hash values:\n```python\nfrom django_pg_hll import HllField\n\n# Empty hll\nHllEmpty()\n\n# Hash from boolean\nHllBoolean(True)\n\n# Hash from integer with different ranges\nHllSmallInt(1)\nHllInteger(65540)\nHllBigint(2147483650)\n\n# Hash from bytes sequence\nHllByteA(b'test')\n\n# Hash from text\nHllText('test')\n\n# Auto detection of type by postgres-hll\nHllAny('some data')\n```\n\nTo save a value to HllField, you can pass any of these functions as a value:\n```python\nfrom django_pg_hll import HllInteger\n\ninstance = MyModel.objects.create(hll=HllInteger(123))\ninstance.hll |= HllInteger(456)\ninstance.save()\n```\n\n#### Chaining hll values\nHll values can be chained with each other and functions like `django.db.models.F` using `|` operator.  \nThe chaining result will be `django_pg_hll.values.HllSet` instance, which can be also saved to database.  \nYou can also chain simple values and iterables. \nIn this case, library will try to detect appropriate hashing function, based on value.  \n*Important*: Native django functions can't be used as chain start, as `|` operator is redeclared for HllValue instances.  \nExample:\n```python\nfrom django_pg_hll import HllInteger\nfrom django.db.models import F\n\ninstance = MyModel.objects.create(hll=HllInteger(123))\n\n# This works\ninstance.hll |= HllInteger(456)\ninstance.hll = HllInteger(456) | F('hll')\ninstance.hll |= 789  # HllSmallInt will be used\ninstance.hll |= 100500  # HllInteger will be used\ninstance.hll |= True  # HllBoolean will be used\ninstance.hll |= {1, 2, 3, 4, 5}  # set. HllSmallInt will be used.\n\n# This throws exception, as F function doesn't support bitor operator\ninstance.hll = F('hll') | HllInteger(456)\n```\n\n#### Hashing seed\nYou can pass `hash_seed` optional argument to any HllValue, expecting data.  \n[Look here](https://github.com/citusdata/postgresql-hll#the-importance-of-hashing) for more details about hashing.\n\n\n### Filtering QuerySet\nHllField realizes `cardinality` lookup (returning integer value) in order to make filtering easier:\n```python\nMyModel.objects.filter(hll__cardinality=3).count()\n```\n\n### Aggregate functions\nIn order to count aggregations and annotations, library provides 4 aggregate functions:\n* `django_pg_hll.aggregate.Cardinality`\n  Counts cardinality of hll field\n* `django_pg_hll.aggregate.UnionAgg`\n  Aggregates multiple hll fields to one hll.\n* `django_pg_hll.aggregate.UnionAggCardinality`\n  Counts cardinality of hll, combined by UnionAgg function. In fact, it does `Cardinality(UnionAgg(hll))`.  \n  P. s. django doesn't give ability to use function inside function.\n* `django_pg_hll.aggregate.CardinalitySum`\n  Counts sum of multiple rows hll cardinalities. In fact, it does `Sum(Cardinality(hll))`.  \n  P. s. django doesn't give ability to use function inside function.\n```python\nfrom django.db import models\nfrom django_pg_hll import HllField, HllInteger\nfrom django_pg_hll.aggregate import Cardinality, UnionAggCardinality, CardinalitySum\n\n\nclass ForeignModel(models.Model):\n    pass\n\n\nclass MyModel(models.Model):\n    hll = HllField()\n    fk = models.ForeignKey(ForeignModel)\n\nMyModel.objects.bulk_create([\n   MyModel(fk=1, hll=HllInteger(1)),\n   MyModel(fk=2, hll=HllInteger(2) | HllInteger(3) | HllInteger(4)),\n   MyModel(fk=3, hll=HllInteger(4))\n])\n\nMyModel.objects.annotate(card=Cardinality('hll_field')).values_list('id', 'card')\n# outputs (1, 1), (2, 3), (3, 1)\n\n# Count cardinality for hll, build by union of all rows\n# 4 element exists in rows with fk=2 and fk=3. After union it gives single result \nForeignModel.objects.annotate(card=UnionAggCardinality('testmodel__hll_field')).values_list('card', flat=True)\n# outputs [4]\n\n# Count sum of cardinalities for each row\nForeignModel.objects.annotate(card=CardinalitySum('testmodel__hll_field')).values_list('card', flat=True)\n# outputs [5]\n```\n\n### [django-pg-bulk-update](https://github.com/M1hacka/django-pg-bulk-update) integration\nThis library provides a `hll_concat` set function,\nallowing to use hll in `bulk_update` and `bulk_update_or_create` queries.\n```python\n# !!! Don't forget to import function, or django_pg_bulk_update will not find it\nfrom django_pg_hll.bulk_update import HllConcatFunction\n\nMyModel.objects.bulk_update_or_create([\n    {'id': 100501, 'hll_field': HllInteger(1)},\n    {'id': 100502, 'hll_field': HllInteger(2) | HllInteger(3)}\n    ], set_functions={'hll_field': 'hll_concat'}\n)\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/M1hacka/django-pg-hll", "keywords": "", "license": "BSD 3-clause \"New\" or \"Revised\" License", "maintainer": "", "maintainer_email": "", "name": "django-pg-hll", "package_url": "https://pypi.org/project/django-pg-hll/", "platform": "", "project_url": "https://pypi.org/project/django-pg-hll/", "project_urls": {"Homepage": "https://github.com/M1hacka/django-pg-hll"}, "release_url": "https://pypi.org/project/django-pg-hll/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Provides a django wrapper for postgresql-hll library by CitusData", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-pg-hll</h1>\n<p>Provides a django wrapper for <a href=\"https://github.com/citusdata/postgresql-hll#the-importance-of-hashing\" rel=\"nofollow\">postgresql-hll library by CitusData</a></p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7 or Python 3.4+</li>\n<li>django &gt;= 1.9</li>\n<li>pytz</li>\n<li>six</li>\n<li>typing</li>\n<li>psycopg2</li>\n<li>PostgreSQL 9.4+</li>\n</ul>\n<h2>Installation</h2>\n<p>Install via pip:<br>\n<code>pip install django-pg-hll</code><br>\nor via setup.py:<br>\n<code>python setup.py install</code></p>\n<h2>Usage</h2>\n<h3>Prerequisites</h3>\n<p>Install <a href=\"https://github.com/citusdata/postgresql-hll#install\" rel=\"nofollow\">postgresql-hll extension</a></p>\n<h3>Creating table with hll field</h3>\n<ul>\n<li>Add HllField to your model:\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_pg_hll</span> <span class=\"kn\">import</span> <span class=\"n\">HllField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">hll</span> <span class=\"o\">=</span> <span class=\"n\">HllField</span><span class=\"p\">()</span>\n</pre>\n</li>\n<li>Call <a href=\"https://docs.djangoproject.com/en/2.1/ref/django-admin/#django-admin-makemigrations\" rel=\"nofollow\">makemigrations</a> to create a migration</li>\n<li>Call <a href=\"https://docs.djangoproject.com/en/2.1/ref/django-admin/#django-admin-migrate\" rel=\"nofollow\">migrate</a> to apply migration.</li>\n</ul>\n<h3>Hll values</h3>\n<p>In order to create and update Hll this library introduces a set of functions\n(corresponding to <a href=\"https://github.com/citusdata/postgresql-hll#hashing\" rel=\"nofollow\">postgres-hll hash functions</a>),\nto hash values:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_pg_hll</span> <span class=\"kn\">import</span> <span class=\"n\">HllField</span>\n\n<span class=\"c1\"># Empty hll</span>\n<span class=\"n\">HllEmpty</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Hash from boolean</span>\n<span class=\"n\">HllBoolean</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Hash from integer with different ranges</span>\n<span class=\"n\">HllSmallInt</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">65540</span><span class=\"p\">)</span>\n<span class=\"n\">HllBigint</span><span class=\"p\">(</span><span class=\"mi\">2147483650</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Hash from bytes sequence</span>\n<span class=\"n\">HllByteA</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Hash from text</span>\n<span class=\"n\">HllText</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Auto detection of type by postgres-hll</span>\n<span class=\"n\">HllAny</span><span class=\"p\">(</span><span class=\"s1\">'some data'</span><span class=\"p\">)</span>\n</pre>\n<p>To save a value to HllField, you can pass any of these functions as a value:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_pg_hll</span> <span class=\"kn\">import</span> <span class=\"n\">HllInteger</span>\n\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">hll</span><span class=\"o\">=</span><span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">))</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">hll</span> <span class=\"o\">|=</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">456</span><span class=\"p\">)</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<h4>Chaining hll values</h4>\n<p>Hll values can be chained with each other and functions like <code>django.db.models.F</code> using <code>|</code> operator.<br>\nThe chaining result will be <code>django_pg_hll.values.HllSet</code> instance, which can be also saved to database.<br>\nYou can also chain simple values and iterables.\nIn this case, library will try to detect appropriate hashing function, based on value.<br>\n<em>Important</em>: Native django functions can't be used as chain start, as <code>|</code> operator is redeclared for HllValue instances.<br>\nExample:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_pg_hll</span> <span class=\"kn\">import</span> <span class=\"n\">HllInteger</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">F</span>\n\n<span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">hll</span><span class=\"o\">=</span><span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">123</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># This works</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">hll</span> <span class=\"o\">|=</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">456</span><span class=\"p\">)</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">hll</span> <span class=\"o\">=</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">456</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s1\">'hll'</span><span class=\"p\">)</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">hll</span> <span class=\"o\">|=</span> <span class=\"mi\">789</span>  <span class=\"c1\"># HllSmallInt will be used</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">hll</span> <span class=\"o\">|=</span> <span class=\"mi\">100500</span>  <span class=\"c1\"># HllInteger will be used</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">hll</span> <span class=\"o\">|=</span> <span class=\"kc\">True</span>  <span class=\"c1\"># HllBoolean will be used</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">hll</span> <span class=\"o\">|=</span> <span class=\"p\">{</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">}</span>  <span class=\"c1\"># set. HllSmallInt will be used.</span>\n\n<span class=\"c1\"># This throws exception, as F function doesn't support bitor operator</span>\n<span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">hll</span> <span class=\"o\">=</span> <span class=\"n\">F</span><span class=\"p\">(</span><span class=\"s1\">'hll'</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">456</span><span class=\"p\">)</span>\n</pre>\n<h4>Hashing seed</h4>\n<p>You can pass <code>hash_seed</code> optional argument to any HllValue, expecting data.<br>\n<a href=\"https://github.com/citusdata/postgresql-hll#the-importance-of-hashing\" rel=\"nofollow\">Look here</a> for more details about hashing.</p>\n<h3>Filtering QuerySet</h3>\n<p>HllField realizes <code>cardinality</code> lookup (returning integer value) in order to make filtering easier:</p>\n<pre><span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">hll__cardinality</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n</pre>\n<h3>Aggregate functions</h3>\n<p>In order to count aggregations and annotations, library provides 4 aggregate functions:</p>\n<ul>\n<li><code>django_pg_hll.aggregate.Cardinality</code>\nCounts cardinality of hll field</li>\n<li><code>django_pg_hll.aggregate.UnionAgg</code>\nAggregates multiple hll fields to one hll.</li>\n<li><code>django_pg_hll.aggregate.UnionAggCardinality</code>\nCounts cardinality of hll, combined by UnionAgg function. In fact, it does <code>Cardinality(UnionAgg(hll))</code>.<br>\nP. s. django doesn't give ability to use function inside function.</li>\n<li><code>django_pg_hll.aggregate.CardinalitySum</code>\nCounts sum of multiple rows hll cardinalities. In fact, it does <code>Sum(Cardinality(hll))</code>.<br>\nP. s. django doesn't give ability to use function inside function.</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_pg_hll</span> <span class=\"kn\">import</span> <span class=\"n\">HllField</span><span class=\"p\">,</span> <span class=\"n\">HllInteger</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_pg_hll.aggregate</span> <span class=\"kn\">import</span> <span class=\"n\">Cardinality</span><span class=\"p\">,</span> <span class=\"n\">UnionAggCardinality</span><span class=\"p\">,</span> <span class=\"n\">CardinalitySum</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ForeignModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">hll</span> <span class=\"o\">=</span> <span class=\"n\">HllField</span><span class=\"p\">()</span>\n    <span class=\"n\">fk</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"n\">ForeignModel</span><span class=\"p\">)</span>\n\n<span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">bulk_create</span><span class=\"p\">([</span>\n   <span class=\"n\">MyModel</span><span class=\"p\">(</span><span class=\"n\">fk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">hll</span><span class=\"o\">=</span><span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)),</span>\n   <span class=\"n\">MyModel</span><span class=\"p\">(</span><span class=\"n\">fk</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">hll</span><span class=\"o\">=</span><span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)),</span>\n   <span class=\"n\">MyModel</span><span class=\"p\">(</span><span class=\"n\">fk</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">hll</span><span class=\"o\">=</span><span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n<span class=\"p\">])</span>\n\n<span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">card</span><span class=\"o\">=</span><span class=\"n\">Cardinality</span><span class=\"p\">(</span><span class=\"s1\">'hll_field'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">values_list</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'card'</span><span class=\"p\">)</span>\n<span class=\"c1\"># outputs (1, 1), (2, 3), (3, 1)</span>\n\n<span class=\"c1\"># Count cardinality for hll, build by union of all rows</span>\n<span class=\"c1\"># 4 element exists in rows with fk=2 and fk=3. After union it gives single result </span>\n<span class=\"n\">ForeignModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">card</span><span class=\"o\">=</span><span class=\"n\">UnionAggCardinality</span><span class=\"p\">(</span><span class=\"s1\">'testmodel__hll_field'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">values_list</span><span class=\"p\">(</span><span class=\"s1\">'card'</span><span class=\"p\">,</span> <span class=\"n\">flat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># outputs [4]</span>\n\n<span class=\"c1\"># Count sum of cardinalities for each row</span>\n<span class=\"n\">ForeignModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">card</span><span class=\"o\">=</span><span class=\"n\">CardinalitySum</span><span class=\"p\">(</span><span class=\"s1\">'testmodel__hll_field'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">values_list</span><span class=\"p\">(</span><span class=\"s1\">'card'</span><span class=\"p\">,</span> <span class=\"n\">flat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"c1\"># outputs [5]</span>\n</pre>\n<h3><a href=\"https://github.com/M1hacka/django-pg-bulk-update\" rel=\"nofollow\">django-pg-bulk-update</a> integration</h3>\n<p>This library provides a <code>hll_concat</code> set function,\nallowing to use hll in <code>bulk_update</code> and <code>bulk_update_or_create</code> queries.</p>\n<pre><span class=\"c1\"># !!! Don't forget to import function, or django_pg_bulk_update will not find it</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django_pg_hll.bulk_update</span> <span class=\"kn\">import</span> <span class=\"n\">HllConcatFunction</span>\n\n<span class=\"n\">MyModel</span><span class=\"o\">.</span><span class=\"n\">objects</span><span class=\"o\">.</span><span class=\"n\">bulk_update_or_create</span><span class=\"p\">([</span>\n    <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">100501</span><span class=\"p\">,</span> <span class=\"s1\">'hll_field'</span><span class=\"p\">:</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">100502</span><span class=\"p\">,</span> <span class=\"s1\">'hll_field'</span><span class=\"p\">:</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"o\">|</span> <span class=\"n\">HllInteger</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)}</span>\n    <span class=\"p\">],</span> <span class=\"n\">set_functions</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'hll_field'</span><span class=\"p\">:</span> <span class=\"s1\">'hll_concat'</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5943835, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "72ee2fcd5ac401596f71163036e0164d", "sha256": "39b410b828d5932bc4e856ee4d36c84d3c8aac1ff9afd242441df84688c5e433"}, "downloads": -1, "filename": "django_pg_hll-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "72ee2fcd5ac401596f71163036e0164d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9272, "upload_time": "2019-03-25T17:37:24", "upload_time_iso_8601": "2019-03-25T17:37:24.976708Z", "url": "https://files.pythonhosted.org/packages/90/c6/1a74959a737dda29c54451980ea2c159b03247779243ff44d824927bdaa1/django_pg_hll-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c54f15c4c798672797e87642170b7661", "sha256": "44bfdebf3778f0f3d368dcdeae92b56002dddff296071bb7cb2ec23b4fc62533"}, "downloads": -1, "filename": "django-pg-hll-1.0.0.tar.gz", "has_sig": false, "md5_digest": "c54f15c4c798672797e87642170b7661", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7691, "upload_time": "2019-03-25T17:37:27", "upload_time_iso_8601": "2019-03-25T17:37:27.229647Z", "url": "https://files.pythonhosted.org/packages/8e/83/0ba795035f981db2cc4f3f18a46d8ea9d0bfccaca8f566f6ffff11ccaf81/django-pg-hll-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "eaa5f7bfed896aa5207af919afe1da42", "sha256": "838936adadd9066d8695dd3e7554e6fb8d0ddb9ce4bf5271fb252ffc39908379"}, "downloads": -1, "filename": "django_pg_hll-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eaa5f7bfed896aa5207af919afe1da42", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9349, "upload_time": "2019-03-31T18:45:33", "upload_time_iso_8601": "2019-03-31T18:45:33.926625Z", "url": "https://files.pythonhosted.org/packages/f9/48/a3b51eaeb3f2082d7a0de21ac8230713aa4605a8c48eb71155743885dd14/django_pg_hll-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0286fe679d747d3f93411babfee69127", "sha256": "b295d5089ce5d85a0cdb505d37376658d60f6181a25a602e31d6aeedc9e8247b"}, "downloads": -1, "filename": "django-pg-hll-1.0.1.tar.gz", "has_sig": false, "md5_digest": "0286fe679d747d3f93411babfee69127", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7718, "upload_time": "2019-03-31T18:45:35", "upload_time_iso_8601": "2019-03-31T18:45:35.679424Z", "url": "https://files.pythonhosted.org/packages/ed/ba/17d88fffa970b74ac6dc4e83fd69d95375e67d8cfe08d99566d01da73b75/django-pg-hll-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "12e4a6f798f47a498a3b112e16c02666", "sha256": "5fdd87abd97d6adbda913847fd67e6812bb3e496a4e27478fb7743aef58a1481"}, "downloads": -1, "filename": "django_pg_hll-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "12e4a6f798f47a498a3b112e16c02666", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9814, "upload_time": "2019-05-08T09:42:38", "upload_time_iso_8601": "2019-05-08T09:42:38.780416Z", "url": "https://files.pythonhosted.org/packages/4e/9a/8e5da5ef5f152089ead6e42dd80ac60514048536d7782d020fa3af96c89e/django_pg_hll-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74c3d05ce917da9a5f48b9cb7486f38f", "sha256": "75e3a25ae333771538fc09fb3f6e9c15cc548895dfc1f295ac8e4aaeae292f8b"}, "downloads": -1, "filename": "django-pg-hll-1.1.0.tar.gz", "has_sig": false, "md5_digest": "74c3d05ce917da9a5f48b9cb7486f38f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8053, "upload_time": "2019-05-08T09:42:40", "upload_time_iso_8601": "2019-05-08T09:42:40.277910Z", "url": "https://files.pythonhosted.org/packages/1a/84/99662622eca6ee6e11aa1b93c524948602d1bb8c65679d69f6eb635ec809/django-pg-hll-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "375a325d8f8413ea138fe8d37daab182", "sha256": "232d0b5b4ea369e5fc23b0ac7ea5d0f2a738664d11ccd4d88a95efbcda04429a"}, "downloads": -1, "filename": "django_pg_hll-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "375a325d8f8413ea138fe8d37daab182", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9950, "upload_time": "2019-10-08T09:27:02", "upload_time_iso_8601": "2019-10-08T09:27:02.014663Z", "url": "https://files.pythonhosted.org/packages/3a/49/b38de1a4b5e9c74966a9336c6ccb0b62904e34129d097ecdc2c6ad8ea41a/django_pg_hll-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d05f5db50d8b5ebd500ad6c4a5723e19", "sha256": "a78fa82185aa06058aaf3fefa5cfb063766511c789005a80b89c93c0cb9c6374"}, "downloads": -1, "filename": "django-pg-hll-1.2.0.tar.gz", "has_sig": false, "md5_digest": "d05f5db50d8b5ebd500ad6c4a5723e19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8078, "upload_time": "2019-10-08T09:27:03", "upload_time_iso_8601": "2019-10-08T09:27:03.807944Z", "url": "https://files.pythonhosted.org/packages/ca/65/d098baddb702beefaf92d4095bde5fe223dbfb278e81aaf49497bdffd8fe/django-pg-hll-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "375a325d8f8413ea138fe8d37daab182", "sha256": "232d0b5b4ea369e5fc23b0ac7ea5d0f2a738664d11ccd4d88a95efbcda04429a"}, "downloads": -1, "filename": "django_pg_hll-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "375a325d8f8413ea138fe8d37daab182", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9950, "upload_time": "2019-10-08T09:27:02", "upload_time_iso_8601": "2019-10-08T09:27:02.014663Z", "url": "https://files.pythonhosted.org/packages/3a/49/b38de1a4b5e9c74966a9336c6ccb0b62904e34129d097ecdc2c6ad8ea41a/django_pg_hll-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d05f5db50d8b5ebd500ad6c4a5723e19", "sha256": "a78fa82185aa06058aaf3fefa5cfb063766511c789005a80b89c93c0cb9c6374"}, "downloads": -1, "filename": "django-pg-hll-1.2.0.tar.gz", "has_sig": false, "md5_digest": "d05f5db50d8b5ebd500ad6c4a5723e19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8078, "upload_time": "2019-10-08T09:27:03", "upload_time_iso_8601": "2019-10-08T09:27:03.807944Z", "url": "https://files.pythonhosted.org/packages/ca/65/d098baddb702beefaf92d4095bde5fe223dbfb278e81aaf49497bdffd8fe/django-pg-hll-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:06 2020"}