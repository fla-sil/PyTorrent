{"info": {"author": "Harshvardhan Gupta", "author_email": "theharshvardhangupta@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Sympyle \nSimple Symbolic Graphs in Python\n\n\n[![Build Status](https://travis-ci.com/harveyslash/sympyle.svg?branch=master)](https://travis-ci.com/harveyslash/sympyle)\n[![codecov](https://codecov.io/gh/harveyslash/Sympyle/branch/master/graph/badge.svg)](https://codecov.io/gh/harveyslash/Sympyle)\n[![CodeFactor](https://www.codefactor.io/repository/github/harveyslash/sympyle/badge/master)](https://www.codefactor.io/repository/github/harveyslash/sympyle/overview/master)\n\n\n## About\n\n##### Project documentation: http://harveyslash.github.io/sympyle/\n\n\nSympyle is a Python library to demonstrate the inner workings of Computational\nGraphs. Computational Graphs are used by highly optimised computational\nframeworks like [tensorflow](https://tensorflow.org) and\n[pytorch](https://pytorch.org).\n\nHowever, these frameworks make several assumptions and optimisations in order\nto optimise for speed and memory. This often makes it harder to understand\nthe inner workings of how these libraries work.\n\nSympyle is a simplified model library to demonstrate the working of\ncomputational graphs, and how\n[backpropagation](https://en.wikipedia.org/wiki/Backpropagation)\nworks on arbitrary 'networks'.\n\n### Examples and tutorials coming soon\n\nFor now , you can see tests/ folder for usage \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/harveyslash/sympyle", "keywords": "", "license": "GNU GENERAL PUBLIC LICENSE", "maintainer": "", "maintainer_email": "", "name": "sympyle", "package_url": "https://pypi.org/project/sympyle/", "platform": "", "project_url": "https://pypi.org/project/sympyle/", "project_urls": {"Homepage": "https://github.com/harveyslash/sympyle"}, "release_url": "https://pypi.org/project/sympyle/0.0.12/", "requires_dist": ["numpy"], "requires_python": "", "summary": "Simple Automatic Differentiation in Python", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sympyle</h1>\n<p>Simple Symbolic Graphs in Python</p>\n<p><a href=\"https://travis-ci.com/harveyslash/sympyle\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7416b285e72b48d88213f957d9fc39bd627bf081/68747470733a2f2f7472617669732d63692e636f6d2f686172766579736c6173682f73796d70796c652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/harveyslash/Sympyle\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e33fd10ccf4aad92293a7c82e7225d1a0c61a1f/68747470733a2f2f636f6465636f762e696f2f67682f686172766579736c6173682f53796d70796c652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://www.codefactor.io/repository/github/harveyslash/sympyle/overview/master\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4e1ea8b822d79abed14108a54780bd238713ca0b/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f686172766579736c6173682f73796d70796c652f62616467652f6d6173746572\"></a></p>\n<h2>About</h2>\n<h5>Project documentation: <a href=\"http://harveyslash.github.io/sympyle/\" rel=\"nofollow\">http://harveyslash.github.io/sympyle/</a></h5>\n<p>Sympyle is a Python library to demonstrate the inner workings of Computational\nGraphs. Computational Graphs are used by highly optimised computational\nframeworks like <a href=\"https://tensorflow.org\" rel=\"nofollow\">tensorflow</a> and\n<a href=\"https://pytorch.org\" rel=\"nofollow\">pytorch</a>.</p>\n<p>However, these frameworks make several assumptions and optimisations in order\nto optimise for speed and memory. This often makes it harder to understand\nthe inner workings of how these libraries work.</p>\n<p>Sympyle is a simplified model library to demonstrate the working of\ncomputational graphs, and how\n<a href=\"https://en.wikipedia.org/wiki/Backpropagation\" rel=\"nofollow\">backpropagation</a>\nworks on arbitrary 'networks'.</p>\n<h3>Examples and tutorials coming soon</h3>\n<p>For now , you can see tests/ folder for usage</p>\n\n          </div>"}, "last_serial": 4061200, "releases": {"0.0.12": [{"comment_text": "", "digests": {"md5": "a130a9f1c33259f0f1037534c8512cf7", "sha256": "54189c9fcc6a6d75847d06bb48350de738836db1d58fbf474959c32cf6109f41"}, "downloads": -1, "filename": "sympyle-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "a130a9f1c33259f0f1037534c8512cf7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9241, "upload_time": "2018-07-14T13:13:59", "upload_time_iso_8601": "2018-07-14T13:13:59.573470Z", "url": "https://files.pythonhosted.org/packages/fc/e0/da188863dcf199abb9813b0a9c162e7555462a40b1dfb9f9520669fc2519/sympyle-0.0.12-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a130a9f1c33259f0f1037534c8512cf7", "sha256": "54189c9fcc6a6d75847d06bb48350de738836db1d58fbf474959c32cf6109f41"}, "downloads": -1, "filename": "sympyle-0.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "a130a9f1c33259f0f1037534c8512cf7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9241, "upload_time": "2018-07-14T13:13:59", "upload_time_iso_8601": "2018-07-14T13:13:59.573470Z", "url": "https://files.pythonhosted.org/packages/fc/e0/da188863dcf199abb9813b0a9c162e7555462a40b1dfb9f9520669fc2519/sympyle-0.0.12-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:10 2020"}