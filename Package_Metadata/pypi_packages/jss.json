{"info": {"author": "Dan Vanderkam", "author_email": "danvdk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Topic :: Text Processing", "Topic :: Utilities"], "description": "jss\n===\n\njss is a JSON processing command line tool (like jq).\n\nUnlike `jq <http://stedolan.github.io/jq/>`__, its selection language is\n`JSONSelect <http://jsonselect.org/#overview>`__, which is based on CSS\nselectors. No need to learn an ad-hoc language for processing your JSON\nfiles. Just use one you already know! Your time with jss won't be\nwasted\u2014it will make you better at writing CSS selectors.\n\nUsage\n-----\n\n::\n\n    $ pip install -g jss\n\n    $ cat file.json\n    {\n      \"foo\": [\n        \"bar\",\n        {\n          \"baz\": \"quux\"\n        }\n      ],\n      \"wut\": {\n        \"name\": \"foo\",\n        \"metadata\": {\n          \"owner\": \"danvk\",\n          \"blah\": \"whatever\"\n        }\n      },\n      \"name\": \"dan\"\n    }\n\n    # Pull out all values with key \"name\", from anywhere in the JSON.\n    $ jss .name file.json\n    \"foo\"\n    \"dan\"\n\n    # Remove fields named \"metadata\", wherever they occur (JSON\u2192JSON transform):\n    $ jss -v .metadata file.json\n    {\n      \"foo\": [\n        \"bar\",\n        {\n          \"baz\": \"quux\"\n        }\n      ],\n      \"wut\": {\n        \"name\": \"foo\"\n      },\n      \"name\": \"dan\"\n    }\n\n    # Keep only fields named \"name\", plus their ancestors (JSON\u2192JSON transform):\n    $ jss -k .name file.json\n    {\n      \"wut\": {\n        \"name\": \"foo\"\n      },\n      \"name\": \"dan\"\n    }\n\n    # Keep only top-level entries with \"whatever\" in some value underneath them:\n    # (JSON\u2192JSON transform using jQuery-style selectors):\n    $ jss -k ':root>*:has(:contains(\"whatever\"))' file.json\n    {\n      \"wut\": {\n        \"name\": \"foo\",\n        \"metadata\": {\n          \"owner\": \"danvk\",\n          \"blah\": \"whatever\"\n        }\n      }\n    }", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danvk/jss/", "keywords": "css,json,jsonselect", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "jss", "package_url": "https://pypi.org/project/jss/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/jss/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/danvk/jss/"}, "release_url": "https://pypi.org/project/jss/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "JSON processing command line tool based on JSONSelect", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>jss is a JSON processing command line tool (like jq).</p>\n<p>Unlike <a href=\"http://stedolan.github.io/jq/\" rel=\"nofollow\">jq</a>, its selection language is\n<a href=\"http://jsonselect.org/#overview\" rel=\"nofollow\">JSONSelect</a>, which is based on CSS\nselectors. No need to learn an ad-hoc language for processing your JSON\nfiles. Just use one you already know! Your time with jss won\u2019t be\nwasted\u2014it will make you better at writing CSS selectors.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ pip install -g jss\n\n$ cat file.json\n{\n  \"foo\": [\n    \"bar\",\n    {\n      \"baz\": \"quux\"\n    }\n  ],\n  \"wut\": {\n    \"name\": \"foo\",\n    \"metadata\": {\n      \"owner\": \"danvk\",\n      \"blah\": \"whatever\"\n    }\n  },\n  \"name\": \"dan\"\n}\n\n# Pull out all values with key \"name\", from anywhere in the JSON.\n$ jss .name file.json\n\"foo\"\n\"dan\"\n\n# Remove fields named \"metadata\", wherever they occur (JSON\u2192JSON transform):\n$ jss -v .metadata file.json\n{\n  \"foo\": [\n    \"bar\",\n    {\n      \"baz\": \"quux\"\n    }\n  ],\n  \"wut\": {\n    \"name\": \"foo\"\n  },\n  \"name\": \"dan\"\n}\n\n# Keep only fields named \"name\", plus their ancestors (JSON\u2192JSON transform):\n$ jss -k .name file.json\n{\n  \"wut\": {\n    \"name\": \"foo\"\n  },\n  \"name\": \"dan\"\n}\n\n# Keep only top-level entries with \"whatever\" in some value underneath them:\n# (JSON\u2192JSON transform using jQuery-style selectors):\n$ jss -k ':root&gt;*:has(:contains(\"whatever\"))' file.json\n{\n  \"wut\": {\n    \"name\": \"foo\",\n    \"metadata\": {\n      \"owner\": \"danvk\",\n      \"blah\": \"whatever\"\n    }\n  }\n}\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1269360, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "435e3de5cd0263c07b1b5875280b8e81", "sha256": "8fd59a953af1249c1941e068311b236c81bcb93cb3cc9dd90ba30f712990a39b"}, "downloads": -1, "filename": "jss-0.1.0.tar.gz", "has_sig": false, "md5_digest": "435e3de5cd0263c07b1b5875280b8e81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4011, "upload_time": "2014-10-13T22:40:10", "upload_time_iso_8601": "2014-10-13T22:40:10.687144Z", "url": "https://files.pythonhosted.org/packages/a0/a6/6835f2dd02de41ed123661382ba70110d876afd960368e34d4689eb34cc5/jss-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "435e3de5cd0263c07b1b5875280b8e81", "sha256": "8fd59a953af1249c1941e068311b236c81bcb93cb3cc9dd90ba30f712990a39b"}, "downloads": -1, "filename": "jss-0.1.0.tar.gz", "has_sig": false, "md5_digest": "435e3de5cd0263c07b1b5875280b8e81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4011, "upload_time": "2014-10-13T22:40:10", "upload_time_iso_8601": "2014-10-13T22:40:10.687144Z", "url": "https://files.pythonhosted.org/packages/a0/a6/6835f2dd02de41ed123661382ba70110d876afd960368e34d4689eb34cc5/jss-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:32 2020"}