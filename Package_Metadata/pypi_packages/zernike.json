{"info": {"author": "Jacopo Antonello", "author_email": "jacopo@antonello.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Physics"], "description": "# Zernike\n\n[![DOI](https://img.shields.io/badge/DOI-10.1364%2FJOSAA.32.001160-blue)](https://doi.org/10.1364/JOSAA.32.001160)\n\nPython code to handle complex- and real-valued Zernike polynomials. This module\nwas part of [enzpy](https://github.com/jacopoantonello/enzpy) but will be\nfurther developed here instead.\n\n![](./media/table.png)\n\n## Installation\n\nYou can install `zernike` using `pip`\n\n```bash\npip install --user zernike\n```\n\n## Example: plot the first 9 Zernike polynomials\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom zernike import RZern\n\ncart = RZern(6)\nL, K = 200, 250\nddx = np.linspace(-1.0, 1.0, K)\nddy = np.linspace(-1.0, 1.0, L)\nxv, yv = np.meshgrid(ddx, ddy)\ncart.make_cart_grid(xv, yv)\n\nc = np.zeros(cart.nk)\nplt.figure(1)\nfor i in range(1, 10):\n    plt.subplot(3, 3, i)\n    c *= 0.0\n    c[i] = 1.0\n    Phi = cart.eval_grid(c, matrix=True)\n    plt.imshow(Phi, origin='lower', extent=(-1, 1, -1, 1))\n    plt.axis('off')\n\nplt.show()\n```\n\n## Example: fit Zernike polynomials Cartesian coordinates\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom zernike import RZern\n\ncart = RZern(6)\nL, K = 200, 250\nddx = np.linspace(-1.0, 1.0, K)\nddy = np.linspace(-1.0, 1.0, L)\nxv, yv = np.meshgrid(ddx, ddy)\ncart.make_cart_grid(xv, yv)\n\nc0 = np.random.normal(size=cart.nk)\nPhi = cart.eval_grid(c0, matrix=True)\nc1 = cart.fit_cart_grid(Phi)[0]\nplt.figure(1)\nplt.subplot(1, 2, 1)\nplt.imshow(Phi, origin='lower', extent=(-1, 1, -1, 1))\nplt.axis('off')\nplt.subplot(1, 2, 2)\nplt.plot(range(1, cart.nk + 1), c0, marker='.')\nplt.plot(range(1, cart.nk + 1), c1, marker='.')\n\nplt.show()\n```\n\n## Example: fit Zernike polynomials in polar coordinates\n\n```python\nimport numpy as np\nfrom zernike import RZern, FitZern\n\npol = RZern(6)\nL, K = 200, 250\nip = FitZern(pol, L, K)\n\npol.make_pol_grid(ip.rho_j, ip.theta_i)\nc_true = np.random.normal(size=pol.nk)\nPhi = pol.eval_grid(c_true)\nc_hat = ip.fit(Phi)\nR = np.zeros((pol.nk, 3))\nR[:, 0] = c_true\nR[:, 1] = c_hat\nR[:, 2] = np.abs(c_true - c_hat)\nprint(R)\nnp.linalg.norm(c_true - c_hat)/np.linalg.norm(c_true)\n```\n\n## Installation from the GitHub repository\n\n- You should first install the following requirements:\n    - [Anaconda for Python 3](https://www.anaconda.com/download). This includes\n      Python as well as some necessary scientific libraries.\n    - [Git](https://git-scm.com/download/win). This is necessary for the\n      automatic version numbering of this package. Also, make sure you choose\n      *Git from the command line and also 3rd-party software* in *Adjusting\n      your PATH environment*.\n- *Clone* this repository using Git. From any folder in File Explorer,\n  right-click and hit *Git Bash here*. Paste `git clone\n  https://github.com/jacopoantonello/zernike` and hit enter. Do not use\n  GitHub's *Download ZIP* button above, as the installation script will not\n  work in that case.\n- Finally, double-click on `install.bat`.\n\n## Tests\n\n```bash\ncd tests\nnosetests -v -x --pdb *.py\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jacopoantonello/zernike", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "zernike", "package_url": "https://pypi.org/project/zernike/", "platform": "", "project_url": "https://pypi.org/project/zernike/", "project_urls": {"Homepage": "https://github.com/jacopoantonello/zernike"}, "release_url": "https://pypi.org/project/zernike/0.0.14/", "requires_dist": ["numpy", "h5py", "matplotlib"], "requires_python": ">=3.7", "summary": "Python code for Zernike polynomials", "version": "0.0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Zernike</h1>\n<p><a href=\"https://doi.org/10.1364/JOSAA.32.001160\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3914327df8946e8c74a48c032b85ef5a23d99a78/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f444f492d31302e313336342532464a4f5341412e33322e3030313136302d626c7565\"></a></p>\n<p>Python code to handle complex- and real-valued Zernike polynomials. This module\nwas part of <a href=\"https://github.com/jacopoantonello/enzpy\" rel=\"nofollow\">enzpy</a> but will be\nfurther developed here instead.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/acfa480a65ef46b566e6ef85c0f12db95bc24a6c/2e2f6d656469612f7461626c652e706e67\"></p>\n<h2>Installation</h2>\n<p>You can install <code>zernike</code> using <code>pip</code></p>\n<pre>pip install --user zernike\n</pre>\n<h2>Example: plot the first 9 Zernike polynomials</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zernike</span> <span class=\"kn\">import</span> <span class=\"n\">RZern</span>\n\n<span class=\"n\">cart</span> <span class=\"o\">=</span> <span class=\"n\">RZern</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">250</span>\n<span class=\"n\">ddx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"n\">ddy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"p\">)</span>\n<span class=\"n\">xv</span><span class=\"p\">,</span> <span class=\"n\">yv</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">ddx</span><span class=\"p\">,</span> <span class=\"n\">ddy</span><span class=\"p\">)</span>\n<span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">make_cart_grid</span><span class=\"p\">(</span><span class=\"n\">xv</span><span class=\"p\">,</span> <span class=\"n\">yv</span><span class=\"p\">)</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">(</span><span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">nk</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span>\n    <span class=\"n\">c</span> <span class=\"o\">*=</span> <span class=\"mf\">0.0</span>\n    <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>\n    <span class=\"n\">Phi</span> <span class=\"o\">=</span> <span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">eval_grid</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">Phi</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">'lower'</span><span class=\"p\">,</span> <span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axis</span><span class=\"p\">(</span><span class=\"s1\">'off'</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h2>Example: fit Zernike polynomials Cartesian coordinates</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zernike</span> <span class=\"kn\">import</span> <span class=\"n\">RZern</span>\n\n<span class=\"n\">cart</span> <span class=\"o\">=</span> <span class=\"n\">RZern</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">250</span>\n<span class=\"n\">ddx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n<span class=\"n\">ddy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"p\">)</span>\n<span class=\"n\">xv</span><span class=\"p\">,</span> <span class=\"n\">yv</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">meshgrid</span><span class=\"p\">(</span><span class=\"n\">ddx</span><span class=\"p\">,</span> <span class=\"n\">ddy</span><span class=\"p\">)</span>\n<span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">make_cart_grid</span><span class=\"p\">(</span><span class=\"n\">xv</span><span class=\"p\">,</span> <span class=\"n\">yv</span><span class=\"p\">)</span>\n\n<span class=\"n\">c0</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">nk</span><span class=\"p\">)</span>\n<span class=\"n\">Phi</span> <span class=\"o\">=</span> <span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">eval_grid</span><span class=\"p\">(</span><span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">matrix</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">c1</span> <span class=\"o\">=</span> <span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">fit_cart_grid</span><span class=\"p\">(</span><span class=\"n\">Phi</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">Phi</span><span class=\"p\">,</span> <span class=\"n\">origin</span><span class=\"o\">=</span><span class=\"s1\">'lower'</span><span class=\"p\">,</span> <span class=\"n\">extent</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axis</span><span class=\"p\">(</span><span class=\"s1\">'off'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">nk</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">cart</span><span class=\"o\">.</span><span class=\"n\">nk</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">c1</span><span class=\"p\">,</span> <span class=\"n\">marker</span><span class=\"o\">=</span><span class=\"s1\">'.'</span><span class=\"p\">)</span>\n\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<h2>Example: fit Zernike polynomials in polar coordinates</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zernike</span> <span class=\"kn\">import</span> <span class=\"n\">RZern</span><span class=\"p\">,</span> <span class=\"n\">FitZern</span>\n\n<span class=\"n\">pol</span> <span class=\"o\">=</span> <span class=\"n\">RZern</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span>\n<span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">K</span> <span class=\"o\">=</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">250</span>\n<span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"n\">FitZern</span><span class=\"p\">(</span><span class=\"n\">pol</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">K</span><span class=\"p\">)</span>\n\n<span class=\"n\">pol</span><span class=\"o\">.</span><span class=\"n\">make_pol_grid</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">.</span><span class=\"n\">rho_j</span><span class=\"p\">,</span> <span class=\"n\">ip</span><span class=\"o\">.</span><span class=\"n\">theta_i</span><span class=\"p\">)</span>\n<span class=\"n\">c_true</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">pol</span><span class=\"o\">.</span><span class=\"n\">nk</span><span class=\"p\">)</span>\n<span class=\"n\">Phi</span> <span class=\"o\">=</span> <span class=\"n\">pol</span><span class=\"o\">.</span><span class=\"n\">eval_grid</span><span class=\"p\">(</span><span class=\"n\">c_true</span><span class=\"p\">)</span>\n<span class=\"n\">c_hat</span> <span class=\"o\">=</span> <span class=\"n\">ip</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">Phi</span><span class=\"p\">)</span>\n<span class=\"n\">R</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">pol</span><span class=\"o\">.</span><span class=\"n\">nk</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">))</span>\n<span class=\"n\">R</span><span class=\"p\">[:,</span> <span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">c_true</span>\n<span class=\"n\">R</span><span class=\"p\">[:,</span> <span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">c_hat</span>\n<span class=\"n\">R</span><span class=\"p\">[:,</span> <span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">c_true</span> <span class=\"o\">-</span> <span class=\"n\">c_hat</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">R</span><span class=\"p\">)</span>\n<span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">c_true</span> <span class=\"o\">-</span> <span class=\"n\">c_hat</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">c_true</span><span class=\"p\">)</span>\n</pre>\n<h2>Installation from the GitHub repository</h2>\n<ul>\n<li>You should first install the following requirements:\n<ul>\n<li><a href=\"https://www.anaconda.com/download\" rel=\"nofollow\">Anaconda for Python 3</a>. This includes\nPython as well as some necessary scientific libraries.</li>\n<li><a href=\"https://git-scm.com/download/win\" rel=\"nofollow\">Git</a>. This is necessary for the\nautomatic version numbering of this package. Also, make sure you choose\n<em>Git from the command line and also 3rd-party software</em> in <em>Adjusting\nyour PATH environment</em>.</li>\n</ul>\n</li>\n<li><em>Clone</em> this repository using Git. From any folder in File Explorer,\nright-click and hit <em>Git Bash here</em>. Paste <code>git clone https://github.com/jacopoantonello/zernike</code> and hit enter. Do not use\nGitHub's <em>Download ZIP</em> button above, as the installation script will not\nwork in that case.</li>\n<li>Finally, double-click on <code>install.bat</code>.</li>\n</ul>\n<h2>Tests</h2>\n<pre><span class=\"nb\">cd</span> tests\nnosetests -v -x --pdb *.py\n</pre>\n\n          </div>"}, "last_serial": 6955594, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "7adca8571a13e889dfeed8e2a3213e8a", "sha256": "37caf6acc87a37ec92c898d54b2c99b9cc4dddbeea36a4211644dd57438cc914"}, "downloads": -1, "filename": "zernike-0.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "7adca8571a13e889dfeed8e2a3213e8a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 22613, "upload_time": "2020-03-27T15:32:27", "upload_time_iso_8601": "2020-03-27T15:32:27.731409Z", "url": "https://files.pythonhosted.org/packages/13/42/6ee352a6b717f544f889b1622c26e6f1237947d8cddc85e6ac980c69cbc0/zernike-0.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7911688fb68b214465a21b3e13a0e57", "sha256": "ba3148a93bafb3f10642b2e4bd3f365f7f7aa9a0f30784d3d13cebab7cc8c73b"}, "downloads": -1, "filename": "zernike-0.0.10.tar.gz", "has_sig": false, "md5_digest": "f7911688fb68b214465a21b3e13a0e57", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11189, "upload_time": "2020-03-27T15:32:29", "upload_time_iso_8601": "2020-03-27T15:32:29.059284Z", "url": "https://files.pythonhosted.org/packages/63/50/9da5f5754fe89d8f5944777abfb9956e636ce97f7ba3f529338c40ca4a10/zernike-0.0.10.tar.gz", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "6e18c864878c6e2d4436ceda1734a51c", "sha256": "4d161345d726bf1125b4172b9aeb6084c5ff0ce413018586c3b38ca77d04fb8e"}, "downloads": -1, "filename": "zernike-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "6e18c864878c6e2d4436ceda1734a51c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 23032, "upload_time": "2020-04-05T12:50:47", "upload_time_iso_8601": "2020-04-05T12:50:47.513056Z", "url": "https://files.pythonhosted.org/packages/64/28/775556233e3eaea011857a0bfdad7e021a9df616657de6003eafeb9cfdf5/zernike-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "717f3d622dc664d041cca332a47dcd70", "sha256": "b74bc87758691e8ad87116f849133ab458d69ec9aca6dfbb48aa9ac05979f72a"}, "downloads": -1, "filename": "zernike-0.0.14.tar.gz", "has_sig": false, "md5_digest": "717f3d622dc664d041cca332a47dcd70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11866, "upload_time": "2020-04-05T12:50:48", "upload_time_iso_8601": "2020-04-05T12:50:48.588427Z", "url": "https://files.pythonhosted.org/packages/76/4d/9ea15708a68d2bf32d043586c342b4518de8f6c9b04718e3eb2e2d1d7a20/zernike-0.0.14.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "dc0b79a646f47ae13d9bdcba49f69393", "sha256": "b38a0fce92fb1fa69894ba76e007a4abe15d501eb8ba2e71b1f259bd34c89e5a"}, "downloads": -1, "filename": "zernike-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "dc0b79a646f47ae13d9bdcba49f69393", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 22599, "upload_time": "2020-03-27T13:20:08", "upload_time_iso_8601": "2020-03-27T13:20:08.527253Z", "url": "https://files.pythonhosted.org/packages/81/1e/ad103e899f90dc7718c1c1f0a42d5770b36b2aa8908783f84188ef63c63c/zernike-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66c8157bc3c0d71babbfb44ba8fa0ccd", "sha256": "3656c44f6f7eb92f973e5a7c1676e32eb16ec3d2686b0f204dc78a8e9bf15fdf"}, "downloads": -1, "filename": "zernike-0.0.6.tar.gz", "has_sig": false, "md5_digest": "66c8157bc3c0d71babbfb44ba8fa0ccd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11181, "upload_time": "2020-03-27T13:20:10", "upload_time_iso_8601": "2020-03-27T13:20:10.828419Z", "url": "https://files.pythonhosted.org/packages/99/bb/17c02c131ead8a6b9ae2eee755e6cb9e9fe14ebd730a7c308d3baba05e81/zernike-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e18c864878c6e2d4436ceda1734a51c", "sha256": "4d161345d726bf1125b4172b9aeb6084c5ff0ce413018586c3b38ca77d04fb8e"}, "downloads": -1, "filename": "zernike-0.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "6e18c864878c6e2d4436ceda1734a51c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 23032, "upload_time": "2020-04-05T12:50:47", "upload_time_iso_8601": "2020-04-05T12:50:47.513056Z", "url": "https://files.pythonhosted.org/packages/64/28/775556233e3eaea011857a0bfdad7e021a9df616657de6003eafeb9cfdf5/zernike-0.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "717f3d622dc664d041cca332a47dcd70", "sha256": "b74bc87758691e8ad87116f849133ab458d69ec9aca6dfbb48aa9ac05979f72a"}, "downloads": -1, "filename": "zernike-0.0.14.tar.gz", "has_sig": false, "md5_digest": "717f3d622dc664d041cca332a47dcd70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11866, "upload_time": "2020-04-05T12:50:48", "upload_time_iso_8601": "2020-04-05T12:50:48.588427Z", "url": "https://files.pythonhosted.org/packages/76/4d/9ea15708a68d2bf32d043586c342b4518de8f6c9b04718e3eb2e2d1d7a20/zernike-0.0.14.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:49 2020"}