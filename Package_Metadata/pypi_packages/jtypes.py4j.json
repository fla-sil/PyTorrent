{"info": {"author": "Adam Karpierz", "author_email": "adam@karpierz.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: Polish", "Operating System :: OS Independent", "Programming Language :: Java", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: IronPython", "Programming Language :: Python :: Implementation :: PyPy", "Programming Language :: Python :: Implementation :: Stackless", "Topic :: Software Development :: Libraries :: Java Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "**Currently only as placeholder (because a base package jtypes.jvm is still in development)**\n\njtypes.py4j\n===========\n\nEnables Python to dynamically access arbitrary Java objects.\n\nOverview\n========\n\n  **jtypes.py4j** enables Python programs to dynamically access arbitrary Java objects via\n  Java's Native Invocation Interface (JNI).\n\n  `PyPI record`_.\n\n  | **jtypes.py4j** is a lightweight Python package, based on the *ctypes* or *cffi* library.\n  | It is an almost fully compliant implementation of Barthelemy Dagenais's **Py4J** package\n    by reimplementing its functionality in a clean Python via JNI instead of Python and\n    Java via custom API service.\n\nAbout Py4J:\n-----------\n\nBorrowed from the `original website`_:\n\n  **Py4J** enables Python programs running in a Python interpreter to dynamically\n  access Java objects in a Java Virtual Machine. Methods are called as if the\n  Java objects resided in the Python interpreter and Java collections can be\n  accessed through standard Python collection methods. **Py4J** also enables Java\n  programs to call back Python objects.\n\n  | Here is a brief example of what you can do with **Py4J**.\n  | The following Python program creates a java.util.Random instance from a JVM\n    and calls some of its methods.\n\n  .. code:: python\n\n     >>> from py4j.java_gateway import JavaGateway\n     >>> gateway = JavaGateway()                  # connect to the JVM\n     >>> random = gateway.jvm.java.util.Random()  # create a java.util.Random instance\n     >>> number1 = random.nextInt(10)             # call the Random.nextInt method\n     >>> number2 = random.nextInt(10)\n     >>> print(number1,number2)\n     (2, 7)\n\nRequirements\n============\n\n- Java Runtime (JRE) or Java Development Kit (JDK), and NumPy.\n\nInstallation\n============\n\nPrerequisites:\n\n+ Python 2.7 or higher or 3.4 or higher\n\n  * http://www.python.org/\n  * 2.7 and 3.6 are primary test environments.\n\n+ pip and setuptools\n\n  * http://pypi.python.org/pypi/pip\n  * http://pypi.python.org/pypi/setuptools\n\nTo install run::\n\n    python -m pip install --upgrade jtypes.py4j\n\nTo ensure everything is running correctly you can run the tests using::\n\n    python -m jt.py4j.tests\n\nDevelopment\n===========\n\nVisit `development page`_\n\nInstallation from sources:\n\nClone the `sources`_ and run::\n\n    python -m pip install ./jtypes.py4j\n\nor on development mode::\n\n    python -m pip install --editable ./jtypes.py4j\n\nPrerequisites:\n\n+ Development is strictly based on *tox*. To install it run::\n\n    python -m pip install tox\n\nLicense\n=======\n\n  | Copyright (c) 2015-2018, Adam Karpierz\n  |\n  | Licensed under the BSD license\n  | http://opensource.org/licenses/BSD-3-Clause\n  | Please refer to the accompanying LICENSE file.\n\nAuthors\n=======\n\n* Adam Karpierz <adam@karpierz.net>\n\n.. _PyPI record: https://pypi.python.org/pypi/jtypes.py4j\n.. _original website: https://www.py4j.org\n.. _development page: https://github.com/karpierz/jtypes.py4j\n.. _sources: https://github.com/karpierz/jtypes.py4j\n\nChangelog\n=========\n\n0.10.8a1 (2018-11-08)\n---------------------\n- Synchro with Py4J master branch (v.0.10.8).\n- Update of the required setuptools version.\n- Minor setup and tests improvements.\n\n0.10.7a2 (2018-09-14)\n---------------------\n- Synchro with Py4J master branch (v.0.10.7).\n\n0.10.7a1 (2018-06-15)\n---------------------\n- Synchro with Py4J master branch (v.0.10.7).\n\n0.10.6a4 (2018-05-22)\n---------------------\n- Update of the required setuptools version.\n\n0.10.6a3 (2018-02-26)\n---------------------\n- Improvement and simplification of setup and packaging.\n\n0.10.6a2 (2018-01-29)\n---------------------\n- Development moved to github.\n- Version numbering in sync. with the original Py4J.\n\n0.0.1a1 (2017-01-10)\n--------------------\n- First alpha release.\n\n0.0.1a0 (2015-08-05)\n--------------------\n- Initial version.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "http://pypi.python.org/pypi/jtypes.py4j/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/jtypes.py4j/", "keywords": "jtypes, jt, jpype, jep, pyjnius, jpy, javabridge, pyjava, jcc,,py4j, jython, java, pythonjava", "license": "BSD license", "maintainer": "Adam Karpierz", "maintainer_email": "adam@karpierz.net", "name": "jtypes.py4j", "package_url": "https://pypi.org/project/jtypes.py4j/", "platform": "any", "project_url": "https://pypi.org/project/jtypes.py4j/", "project_urls": {"Download": "http://pypi.python.org/pypi/jtypes.py4j/", "Homepage": "http://pypi.python.org/pypi/jtypes.py4j/"}, "release_url": "https://pypi.org/project/jtypes.py4j/0.10.8a1/", "requires_dist": null, "requires_python": ">=2.7.0,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "summary": "Enables Python to dynamically access arbitrary Java objects (ctypes/cffi-based Py4J)", "version": "0.10.8a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Currently only as placeholder (because a base package jtypes.jvm is still in development)</strong></p>\n<div id=\"jtypes-py4j\">\n<h2>jtypes.py4j</h2>\n<p>Enables Python to dynamically access arbitrary Java objects.</p>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<blockquote>\n<p><strong>jtypes.py4j</strong> enables Python programs to dynamically access arbitrary Java objects via\nJava\u2019s Native Invocation Interface (JNI).</p>\n<p><a href=\"https://pypi.python.org/pypi/jtypes.py4j\" rel=\"nofollow\">PyPI record</a>.</p>\n<div>\n<div><strong>jtypes.py4j</strong> is a lightweight Python package, based on the <em>ctypes</em> or <em>cffi</em> library.</div>\n<div>It is an almost fully compliant implementation of Barthelemy Dagenais\u2019s <strong>Py4J</strong> package\nby reimplementing its functionality in a clean Python via JNI instead of Python and\nJava via custom API service.</div>\n</div>\n</blockquote>\n<div id=\"about-py4j\">\n<h3>About Py4J:</h3>\n<p>Borrowed from the <a href=\"https://www.py4j.org\" rel=\"nofollow\">original website</a>:</p>\n<blockquote>\n<p><strong>Py4J</strong> enables Python programs running in a Python interpreter to dynamically\naccess Java objects in a Java Virtual Machine. Methods are called as if the\nJava objects resided in the Python interpreter and Java collections can be\naccessed through standard Python collection methods. <strong>Py4J</strong> also enables Java\nprograms to call back Python objects.</p>\n<div>\n<div>Here is a brief example of what you can do with <strong>Py4J</strong>.</div>\n<div>The following Python program creates a java.util.Random instance from a JVM\nand calls some of its methods.</div>\n</div>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">py4j.java_gateway</span> <span class=\"kn\">import</span> <span class=\"n\">JavaGateway</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">gateway</span> <span class=\"o\">=</span> <span class=\"n\">JavaGateway</span><span class=\"p\">()</span>                  <span class=\"c1\"># connect to the JVM</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">random</span> <span class=\"o\">=</span> <span class=\"n\">gateway</span><span class=\"o\">.</span><span class=\"n\">jvm</span><span class=\"o\">.</span><span class=\"n\">java</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">Random</span><span class=\"p\">()</span>  <span class=\"c1\"># create a java.util.Random instance</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">number1</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">nextInt</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>             <span class=\"c1\"># call the Random.nextInt method</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">number2</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">nextInt</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">number1</span><span class=\"p\">,</span><span class=\"n\">number2</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Java Runtime (JRE) or Java Development Kit (JDK), and NumPy.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Prerequisites:</p>\n<ul>\n<li>Python 2.7 or higher or 3.4 or higher<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">http://www.python.org/</a></li>\n<li>2.7 and 3.6 are primary test environments.</li>\n</ul>\n</li>\n<li>pip and setuptools<ul>\n<li><a href=\"http://pypi.python.org/pypi/pip\" rel=\"nofollow\">http://pypi.python.org/pypi/pip</a></li>\n<li><a href=\"http://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">http://pypi.python.org/pypi/setuptools</a></li>\n</ul>\n</li>\n</ul>\n<p>To install run:</p>\n<pre>python -m pip install --upgrade jtypes.py4j\n</pre>\n<p>To ensure everything is running correctly you can run the tests using:</p>\n<pre>python -m jt.py4j.tests\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Visit <a href=\"https://github.com/karpierz/jtypes.py4j\" rel=\"nofollow\">development page</a></p>\n<p>Installation from sources:</p>\n<p>Clone the <a href=\"https://github.com/karpierz/jtypes.py4j\" rel=\"nofollow\">sources</a> and run:</p>\n<pre>python -m pip install ./jtypes.py4j\n</pre>\n<p>or on development mode:</p>\n<pre>python -m pip install --editable ./jtypes.py4j\n</pre>\n<p>Prerequisites:</p>\n<ul>\n<li><p>Development is strictly based on <em>tox</em>. To install it run:</p>\n<pre>python -m pip install tox\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<blockquote>\n<div>\n<div>Copyright (c) 2015-2018, Adam Karpierz</div>\n<div><br></div>\n<div>Licensed under the BSD license</div>\n<div><a href=\"http://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\">http://opensource.org/licenses/BSD-3-Clause</a></div>\n<div>Please refer to the accompanying LICENSE file.</div>\n</div>\n</blockquote>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Adam Karpierz &lt;<a href=\"mailto:adam%40karpierz.net\">adam<span>@</span>karpierz<span>.</span>net</a>&gt;</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"a1-2018-11-08\">\n<h3>0.10.8a1 (2018-11-08)</h3>\n<ul>\n<li>Synchro with Py4J master branch (v.0.10.8).</li>\n<li>Update of the required setuptools version.</li>\n<li>Minor setup and tests improvements.</li>\n</ul>\n</div>\n<div id=\"a2-2018-09-14\">\n<h3>0.10.7a2 (2018-09-14)</h3>\n<ul>\n<li>Synchro with Py4J master branch (v.0.10.7).</li>\n</ul>\n</div>\n<div id=\"a1-2018-06-15\">\n<h3>0.10.7a1 (2018-06-15)</h3>\n<ul>\n<li>Synchro with Py4J master branch (v.0.10.7).</li>\n</ul>\n</div>\n<div id=\"a4-2018-05-22\">\n<h3>0.10.6a4 (2018-05-22)</h3>\n<ul>\n<li>Update of the required setuptools version.</li>\n</ul>\n</div>\n<div id=\"a3-2018-02-26\">\n<h3>0.10.6a3 (2018-02-26)</h3>\n<ul>\n<li>Improvement and simplification of setup and packaging.</li>\n</ul>\n</div>\n<div id=\"a2-2018-01-29\">\n<h3>0.10.6a2 (2018-01-29)</h3>\n<ul>\n<li>Development moved to github.</li>\n<li>Version numbering in sync. with the original Py4J.</li>\n</ul>\n</div>\n<div id=\"a1-2017-01-10\">\n<h3>0.0.1a1 (2017-01-10)</h3>\n<ul>\n<li>First alpha release.</li>\n</ul>\n</div>\n<div id=\"a0-2015-08-05\">\n<h3>0.0.1a0 (2015-08-05)</h3>\n<ul>\n<li>Initial version.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5853276, "releases": {"0.10.8a1": [{"comment_text": "", "digests": {"md5": "077834864d0ff57725183104117da002", "sha256": "a351fe621c86339f560bb48efc61e2699729afa7ea55c28f6c763a9736727cd8"}, "downloads": -1, "filename": "jtypes.py4j-0.10.8a1.zip", "has_sig": false, "md5_digest": "077834864d0ff57725183104117da002", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.0,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 646271, "upload_time": "2018-11-13T15:59:36", "upload_time_iso_8601": "2018-11-13T15:59:36.072774Z", "url": "https://files.pythonhosted.org/packages/bd/67/9e83b47fb681b7e3343c5a3760b3fd9fa52db67c287ffc2dfd12880ac67f/jtypes.py4j-0.10.8a1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "077834864d0ff57725183104117da002", "sha256": "a351fe621c86339f560bb48efc61e2699729afa7ea55c28f6c763a9736727cd8"}, "downloads": -1, "filename": "jtypes.py4j-0.10.8a1.zip", "has_sig": false, "md5_digest": "077834864d0ff57725183104117da002", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.0,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 646271, "upload_time": "2018-11-13T15:59:36", "upload_time_iso_8601": "2018-11-13T15:59:36.072774Z", "url": "https://files.pythonhosted.org/packages/bd/67/9e83b47fb681b7e3343c5a3760b3fd9fa52db67c287ffc2dfd12880ac67f/jtypes.py4j-0.10.8a1.zip", "yanked": false}], "timestamp": "Fri May  8 00:51:28 2020"}