{"info": {"author": "Nathan Muir", "author_email": "ndmuir@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "#Celery CloudWatch\n\nMonitor your [celery](http://www.celeryproject.org/) application from within [AWS CloudWatch](http://aws.amazon.com/cloudwatch/)!\n\n##Metrics\n\nThe following events are tallied per task:\n\n * CeleryEventSent\n * CeleryEventStarted\n * CeleryEventSucceeded\n * CeleryEventFailed\n\nYou can then see how many tasks/day, tasks/week etc are being completed.\n\nAlso, we record the total waiting/running per task:\n\n * CeleryNumWaiting\n * CeleryNumRunning\n\nAlso, statistics on task duration are sent in the metrics:\n\n * CeleryWaitingTime\n * CeleryProcessingTime\n\nThese metrics are sent with all supported stats (No. Events, Sum, Max, Min), allowing you to gain insight into your task processing and match requests and capacity.\n\n\n#Getting Started\n\n1. Set up an [IAM Role](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html) for your instance.\n\n    It must include a policy to perform 'PutMetricData', eg:\n\n    ```json\n    {\n      \"Version\": \"2000-01-01\",\n      \"Statement\": [\n        {\n          \"Effect\": \"Allow\",\n          \"Action\": [\n            \"cloudwatch:PutMetricData\"\n          ],\n          \"Resource\": [\n            \"*\"\n          ]\n        }\n      ]\n    }\n\n    ```\n\n    (Note: Alternatively, you can set up a `User` with the same policy and provide access details that way)\n\n2. Install via `python-pip` (and upgrade pip & boto)\n\n    ```sh\n    sudo apt-get install -y python-pip\n    sudo pip install --upgrade pip boto\n\n    # Install directly\n    sudo pip install celery-cloudwatch\n\n    # OR, install in a virtualenv\n    sudo apt-get install -y python-virtualenv\n    mkdir /var/python-envs\n    virtualenv /var/python-envs/ccwatch\n    source /var/python-envs/ccwatch/bin/activate\n    pip install celery-cloudwatch\n    ```\n\n3. Create your own `boto.cfg` at `/etc/boto.cfg`-\n\n    ```\n    [Credentials]\n    # if not using an IAM Role - provide aws key/secret\n    aws_access_key_id = xxx\n    aws_secret_access_key = yyy\n\n    [Boto]\n    cloudwatch_region_name = my-region\n    cloudwatch_region_endpoint = monitoring.my-region.amazonaws.com\n\n    ```\n\n4. Create your own config file in `/etc/ccwatch.yaml`\n\n    ```\n    ccwatch:\n      broker: null\n      camera: celery_cloudwatch.CloudWatchCamera\n      verbose: no\n    camera:\n      frequency: 60.0\n      verbose: no\n    cloudwatch-camera:\n      dryrun: no\n      namespace: celery\n      tasks:\n        - myapp.mytasks.taskname\n        - myapp.mytasks.anothertask\n        - myapp.mytasks.thirdtask\n        - name: myapp.secondarytasks\n          dimensions:\n            task: myapp.secondarytasks\n            customDim: value\n        - name: myapp.tertiarytasks\n          dimensions:\n            task: myapp.tertiarytasks\n            customDim: value\n\n    ```\n\n5. Install upstart\n\n    Create a file `/etc/init/celery-cloudwatch.conf`-\n\n    ```\n    description \"Celery CloudWatch\"\n    author \"nathan muir <ndmuir@gmail.com>\"\n\n    setuid nobody\n    setgid nogroup\n\n    start on runlevel [234]\n    stop on runlevel [0156]\n\n    exec /var/python-envs/ccwatch/bin/ccwatch\n    respawn\n    ```\n\n    then-\n\n    ```sh\n    sudo initctl reload-configuration\n    sudo service celery-cloudwatch start\n    ```\n\n\n6. Start Celery your celery workers with the `-E` (or `CELERY_SEND_EVENTS=1` and `CELERY_TRACK_STARTED=1`) options, and, start celery clients with `CELERY_SEND_TASK_SENT_EVENT=1`\n\n7. All done! head over to your CloudWatch monitoring page to see the results!", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/3stack-software/celery-cloudwatch", "keywords": "celery cloudwatch monitor stats", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "celery-cloudwatch", "package_url": "https://pypi.org/project/celery-cloudwatch/", "platform": "", "project_url": "https://pypi.org/project/celery-cloudwatch/", "project_urls": {"Homepage": "https://github.com/3stack-software/celery-cloudwatch"}, "release_url": "https://pypi.org/project/celery-cloudwatch/2.0.0/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "A monitor for celery queues that reports to AWS CloudWatch", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>#Celery CloudWatch</p>\n<p>Monitor your <a href=\"http://www.celeryproject.org/\" rel=\"nofollow\">celery</a> application from within <a href=\"http://aws.amazon.com/cloudwatch/\" rel=\"nofollow\">AWS CloudWatch</a>!</p>\n<p>##Metrics</p>\n<p>The following events are tallied per task:</p>\n<ul>\n<li>CeleryEventSent</li>\n<li>CeleryEventStarted</li>\n<li>CeleryEventSucceeded</li>\n<li>CeleryEventFailed</li>\n</ul>\n<p>You can then see how many tasks/day, tasks/week etc are being completed.</p>\n<p>Also, we record the total waiting/running per task:</p>\n<ul>\n<li>CeleryNumWaiting</li>\n<li>CeleryNumRunning</li>\n</ul>\n<p>Also, statistics on task duration are sent in the metrics:</p>\n<ul>\n<li>CeleryWaitingTime</li>\n<li>CeleryProcessingTime</li>\n</ul>\n<p>These metrics are sent with all supported stats (No. Events, Sum, Max, Min), allowing you to gain insight into your task processing and match requests and capacity.</p>\n<p>#Getting Started</p>\n<ol>\n<li>\n<p>Set up an <a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/iam-roles-for-amazon-ec2.html\" rel=\"nofollow\">IAM Role</a> for your instance.</p>\n<p>It must include a policy to perform 'PutMetricData', eg:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"Version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2000-01-01\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"Statement\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"Effect\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"Action\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"cloudwatch:PutMetricData\"</span>\n      <span class=\"p\">],</span>\n      <span class=\"nt\">\"Resource\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"*\"</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>(Note: Alternatively, you can set up a <code>User</code> with the same policy and provide access details that way)</p>\n</li>\n<li>\n<p>Install via <code>python-pip</code> (and upgrade pip &amp; boto)</p>\n<pre>sudo apt-get install -y python-pip\nsudo pip install --upgrade pip boto\n\n<span class=\"c1\"># Install directly</span>\nsudo pip install celery-cloudwatch\n\n<span class=\"c1\"># OR, install in a virtualenv</span>\nsudo apt-get install -y python-virtualenv\nmkdir /var/python-envs\nvirtualenv /var/python-envs/ccwatch\n<span class=\"nb\">source</span> /var/python-envs/ccwatch/bin/activate\npip install celery-cloudwatch\n</pre>\n</li>\n<li>\n<p>Create your own <code>boto.cfg</code> at <code>/etc/boto.cfg</code>-</p>\n<pre><code>[Credentials]\n# if not using an IAM Role - provide aws key/secret\naws_access_key_id = xxx\naws_secret_access_key = yyy\n\n[Boto]\ncloudwatch_region_name = my-region\ncloudwatch_region_endpoint = monitoring.my-region.amazonaws.com\n\n</code></pre>\n</li>\n<li>\n<p>Create your own config file in <code>/etc/ccwatch.yaml</code></p>\n<pre><code>ccwatch:\n  broker: null\n  camera: celery_cloudwatch.CloudWatchCamera\n  verbose: no\ncamera:\n  frequency: 60.0\n  verbose: no\ncloudwatch-camera:\n  dryrun: no\n  namespace: celery\n  tasks:\n    - myapp.mytasks.taskname\n    - myapp.mytasks.anothertask\n    - myapp.mytasks.thirdtask\n    - name: myapp.secondarytasks\n      dimensions:\n        task: myapp.secondarytasks\n        customDim: value\n    - name: myapp.tertiarytasks\n      dimensions:\n        task: myapp.tertiarytasks\n        customDim: value\n\n</code></pre>\n</li>\n<li>\n<p>Install upstart</p>\n<p>Create a file <code>/etc/init/celery-cloudwatch.conf</code>-</p>\n<pre><code>description \"Celery CloudWatch\"\nauthor \"nathan muir &lt;ndmuir@gmail.com&gt;\"\n\nsetuid nobody\nsetgid nogroup\n\nstart on runlevel [234]\nstop on runlevel [0156]\n\nexec /var/python-envs/ccwatch/bin/ccwatch\nrespawn\n</code></pre>\n<p>then-</p>\n<pre>sudo initctl reload-configuration\nsudo service celery-cloudwatch start\n</pre>\n</li>\n<li>\n<p>Start Celery your celery workers with the <code>-E</code> (or <code>CELERY_SEND_EVENTS=1</code> and <code>CELERY_TRACK_STARTED=1</code>) options, and, start celery clients with <code>CELERY_SEND_TASK_SENT_EVENT=1</code></p>\n</li>\n<li>\n<p>All done! head over to your CloudWatch monitoring page to see the results!</p>\n</li>\n</ol>\n\n          </div>"}, "last_serial": 6932782, "releases": {"1.0.0a": [{"comment_text": "", "digests": {"md5": "f9e53812e64d7411ebb20f2ace1277d3", "sha256": "da1067749c63721c4f057ca507bd3888df1e92957c0475d7937cf8c8e0c0d779"}, "downloads": -1, "filename": "celery-cloudwatch-1.0.0a.tar.gz", "has_sig": false, "md5_digest": "f9e53812e64d7411ebb20f2ace1277d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9128, "upload_time": "2015-02-15T12:36:01", "upload_time_iso_8601": "2015-02-15T12:36:01.067829Z", "url": "https://files.pythonhosted.org/packages/d4/74/cdf40f49e08b89be15bf3263abdf24b4c78b7e1893fffae407e156361cdd/celery-cloudwatch-1.0.0a.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "02823e53732ea42dc9af625db0945f2c", "sha256": "ff6bed24179da38acd7b261b6d83374f3e142fdb8dd4bb28647c75401d1d7886"}, "downloads": -1, "filename": "celery-cloudwatch-1.1.0.tar.gz", "has_sig": false, "md5_digest": "02823e53732ea42dc9af625db0945f2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10944, "upload_time": "2016-09-21T23:41:33", "upload_time_iso_8601": "2016-09-21T23:41:33.369364Z", "url": "https://files.pythonhosted.org/packages/60/5a/f3eca614c3d67b5ca0e84deef1940e9a39009a7f8121e235c78837ffe6cc/celery-cloudwatch-1.1.0.tar.gz", "yanked": false}], "1.1.0.post0": [{"comment_text": "", "digests": {"md5": "12829777241c20c741d6bf0d94dc573e", "sha256": "beb566154b158619ceafc4c017370cce2bf80b59a206c9b46c9c641f7037c855"}, "downloads": -1, "filename": "celery-cloudwatch-1.1.0.post0.tar.gz", "has_sig": false, "md5_digest": "12829777241c20c741d6bf0d94dc573e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10887, "upload_time": "2016-09-22T01:09:28", "upload_time_iso_8601": "2016-09-22T01:09:28.062997Z", "url": "https://files.pythonhosted.org/packages/be/41/3e9979da76f30231e1011a6d2d547ef5b9135262c0eeea745f307a45efa3/celery-cloudwatch-1.1.0.post0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "0b5bead1633c7a365b0a16bff46d66ce", "sha256": "745cde10fb98829cafe78e8908ecbba6a6de01e7811e8ac3427a01757f10c21d"}, "downloads": -1, "filename": "celery-cloudwatch-1.1.1.tar.gz", "has_sig": false, "md5_digest": "0b5bead1633c7a365b0a16bff46d66ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10873, "upload_time": "2017-04-04T22:33:45", "upload_time_iso_8601": "2017-04-04T22:33:45.226304Z", "url": "https://files.pythonhosted.org/packages/83/75/4c4bfe146c822ca53770fc5466e7f486b0315bcce01dfe6ad6e680f358bf/celery-cloudwatch-1.1.1.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "8a0e3d961e83a52bc125aee6f4b81f1d", "sha256": "1a4295b572868ff3044beb7aa755665f3538eb7c9349e2a22563bc7beb6a519a"}, "downloads": -1, "filename": "celery-cloudwatch-2.0.0.tar.gz", "has_sig": false, "md5_digest": "8a0e3d961e83a52bc125aee6f4b81f1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 10381, "upload_time": "2020-04-02T03:08:38", "upload_time_iso_8601": "2020-04-02T03:08:38.557465Z", "url": "https://files.pythonhosted.org/packages/be/03/9b5cd4f61745c7d5725927826efbead5f32e66b24fdec4e0205160c69eb5/celery-cloudwatch-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8a0e3d961e83a52bc125aee6f4b81f1d", "sha256": "1a4295b572868ff3044beb7aa755665f3538eb7c9349e2a22563bc7beb6a519a"}, "downloads": -1, "filename": "celery-cloudwatch-2.0.0.tar.gz", "has_sig": false, "md5_digest": "8a0e3d961e83a52bc125aee6f4b81f1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 10381, "upload_time": "2020-04-02T03:08:38", "upload_time_iso_8601": "2020-04-02T03:08:38.557465Z", "url": "https://files.pythonhosted.org/packages/be/03/9b5cd4f61745c7d5725927826efbead5f32e66b24fdec4e0205160c69eb5/celery-cloudwatch-2.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:52 2020"}