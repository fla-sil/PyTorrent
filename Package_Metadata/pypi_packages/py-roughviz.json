{"info": {"author": "Kaiqi Dong", "author_email": "kaiqidong1991@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries"], "description": "# py-roughviz\n\n<p align=\"left\">\n    <a href=\"https://badge.fury.io/py/py-roughviz\">\n        <img src=\"https://badge.fury.io/py/py-roughviz.svg\" alt=\"Package Version\">\n    </a>\n    <a href=\"https://badge.fury.io/py/py-roughviz\">\n        <img src=\"https://travis-ci.org/charlesdong1991/py-roughviz.svg?branch=master\" alt=\"build\">\n    </a>\n     <a href=\"https://github.com/charlesdong1991/py-roughviz/pulls\">\n        <img src=\"https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat\" alt=\"Contributions welcome\">\n    </a>\n    <a href=\"https://opensource.org/licenses/MIT\">\n        <img src=\"https://img.shields.io/badge/License-MIT-brightgreen.svg\" alt=\"License\">\n    </a>\n</p>\n\nThis is the Python wrapper of the JaveScript Library RoughViz which you could\nuse to visualize sketchy/hand-drawn styled charts.\nYou could check out original JS libarary here: [RoughViz](https://github.com/jwilber/roughViz)\n\n## Implemented Charts\n\nCurrently, there are seven types of charts available on JS RoughViz project, and I implemented all of them:\n\n- Bar\n- Barh\n- Pie\n- Line\n- Scatter\n- Donut\n- StackedBar\n\n## Before Use it\n\n- Cloning:\nIf you clone the repo, please install the dependencies in order to use them, and simply do below if you are using\n`pip`.\n\n```bash\npip install -r requirements.txt\n```\n\n- Downloading the pakcage:\nThis package is also available on PyPi, so you could do below to download the package\n```bash\npip install py-roughviz\n```\n\n\n## How to use it\n\nDue to design of original RoughViz, there are some restrictions on the format of input data. The\ndetailed description can be found in the documentation.\n\nTo use the tool, you could either define all options during chart in the initialization, or to \ndefine the options later. And in order to make it easier to use, there are several options provided.\n\n1. You could define all options using `set_options`\n2. For common options shared across different charts, you could define it in a more intuitive way, e.g.\n`set_title(title=\"The plot\", fontsize=2)`, or `set_xlabel(\"X Label\", fontsize=3)`\n\nCurrently available options are:\n- `set_options`: this can be used to set all available options for charts\n- `set_title`: this can be used to set title and title fontsize\n- `set_xlabel`: this can be used to set xlabel and its fontsize\n- `set_ylabel`: this can be used to set ylabel and its fontsize\n- `set_figsize`: this can be used to set the figsize for plots\n- `set_legend`: this can be used to determine if legend is presented, and if so, which position to put legend\n\n\n## Pandas DataFrame is accepted as input data\n\nOne of major characters of this package is you could take pandas DataFrame as data type (this is not available\nin original JS tool), and this feature could make people use this in a more familiar way, similar to `seaborn`.\n\nCurrently, plot types below are supported to take pandas DataFrame as input data:\n - Barh\n - Bar\n - Scatter\n - Pie\n - Donut\n\nFor example:\n\n```python\nimport pandas as pd\nfrom roughviz.charts import Pie, Scatter\n\ndf = pd.DataFrame({\"a\": [\"a\", \"b\"], \"b\": [1, 2], \"c\": [2, 3]})\n\n# pie plot\npie = Pie(data=df, labels=\"a\", values=\"b\")\n\n# scatter plot\nscatter = Scatter(data=df, x=\"b\", y=\"c\")\n\n```\n \n## Examples\n\n- Example 1\n\n```python\nfrom roughviz.charts import Line\n\nline = Line(data=\"examples/example_datasets/vis1.csv\", y1=\"a\", y2=\"b\", y3=\"c\")\nline.set_legend(legend_position=\"left\")\nline.set_title(\"Line Plot\", fontsize=2)\nline.set_options(colors=[\"tan\", \"orange\", \"coral\"])\n\nline.show()\n```\n\n\n![Example 1](https://github.com/charlesdong1991/py-roughviz/blob/master/examples/example_plots/example1.png)\n\n\n\n- Example 2\n\n```python\nfrom roughviz.charts import Bar\n\ndata = {\n    \"labels\": [\"North\", \"South\", \"East\", \"West\"],\n    \"values\": [10, 5, 8, 3]\n}\n\nbar = Bar(data=data, title=\"Regions\", title_fontsize=3)\nbar.set_xlabel(\"Region\", fontsize=2)\nbar.set_ylabel(\"Number\", fontsize=2)\n\nbar.show()\n```\n\n![Example 2](https://github.com/charlesdong1991/py-roughviz/blob/master/examples/example_plots/example2.png)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/charlesdong1991/py-roughviz/archive/v0.5.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/charlesdong1991/py-roughviz", "keywords": "py-roughviz,visualization,sketchy charts,hand-drawn charts", "license": "", "maintainer": "", "maintainer_email": "", "name": "py-roughviz", "package_url": "https://pypi.org/project/py-roughviz/", "platform": "", "project_url": "https://pypi.org/project/py-roughviz/", "project_urls": {"Download": "https://github.com/charlesdong1991/py-roughviz/archive/v0.5.1.tar.gz", "Homepage": "https://github.com/charlesdong1991/py-roughviz"}, "release_url": "https://pypi.org/project/py-roughviz/0.5.1/", "requires_dist": null, "requires_python": "", "summary": "The Python implementation of JavaScript Library RoughViz to create sketchy charts.", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py-roughviz</h1>\n<p align=\"left\">\n    <a href=\"https://badge.fury.io/py/py-roughviz\" rel=\"nofollow\">\n        <img alt=\"Package Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf6389b53a399a241b10edc08e4c789b14098ee1/68747470733a2f2f62616467652e667572792e696f2f70792f70792d726f75676876697a2e737667\">\n    </a>\n    <a href=\"https://badge.fury.io/py/py-roughviz\" rel=\"nofollow\">\n        <img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3570e1ab2c5fccbd45fed08e1a3c6467c35b0d5d/68747470733a2f2f7472617669732d63692e6f72672f636861726c6573646f6e67313939312f70792d726f75676876697a2e7376673f6272616e63683d6d6173746572\">\n    </a>\n     <a href=\"https://github.com/charlesdong1991/py-roughviz/pulls\" rel=\"nofollow\">\n        <img alt=\"Contributions welcome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/793ef3fadef48113e66f3c652ebc9b591bcb1745/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c6174\">\n    </a>\n    <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">\n        <img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/13402995be86cde517cc34ba2cc02d3de74b86c4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d627269676874677265656e2e737667\">\n    </a>\n</p>\n<p>This is the Python wrapper of the JaveScript Library RoughViz which you could\nuse to visualize sketchy/hand-drawn styled charts.\nYou could check out original JS libarary here: <a href=\"https://github.com/jwilber/roughViz\" rel=\"nofollow\">RoughViz</a></p>\n<h2>Implemented Charts</h2>\n<p>Currently, there are seven types of charts available on JS RoughViz project, and I implemented all of them:</p>\n<ul>\n<li>Bar</li>\n<li>Barh</li>\n<li>Pie</li>\n<li>Line</li>\n<li>Scatter</li>\n<li>Donut</li>\n<li>StackedBar</li>\n</ul>\n<h2>Before Use it</h2>\n<ul>\n<li>Cloning:\nIf you clone the repo, please install the dependencies in order to use them, and simply do below if you are using\n<code>pip</code>.</li>\n</ul>\n<pre>pip install -r requirements.txt\n</pre>\n<ul>\n<li>Downloading the pakcage:\nThis package is also available on PyPi, so you could do below to download the package</li>\n</ul>\n<pre>pip install py-roughviz\n</pre>\n<h2>How to use it</h2>\n<p>Due to design of original RoughViz, there are some restrictions on the format of input data. The\ndetailed description can be found in the documentation.</p>\n<p>To use the tool, you could either define all options during chart in the initialization, or to\ndefine the options later. And in order to make it easier to use, there are several options provided.</p>\n<ol>\n<li>You could define all options using <code>set_options</code></li>\n<li>For common options shared across different charts, you could define it in a more intuitive way, e.g.\n<code>set_title(title=\"The plot\", fontsize=2)</code>, or <code>set_xlabel(\"X Label\", fontsize=3)</code></li>\n</ol>\n<p>Currently available options are:</p>\n<ul>\n<li><code>set_options</code>: this can be used to set all available options for charts</li>\n<li><code>set_title</code>: this can be used to set title and title fontsize</li>\n<li><code>set_xlabel</code>: this can be used to set xlabel and its fontsize</li>\n<li><code>set_ylabel</code>: this can be used to set ylabel and its fontsize</li>\n<li><code>set_figsize</code>: this can be used to set the figsize for plots</li>\n<li><code>set_legend</code>: this can be used to determine if legend is presented, and if so, which position to put legend</li>\n</ul>\n<h2>Pandas DataFrame is accepted as input data</h2>\n<p>One of major characters of this package is you could take pandas DataFrame as data type (this is not available\nin original JS tool), and this feature could make people use this in a more familiar way, similar to <code>seaborn</code>.</p>\n<p>Currently, plot types below are supported to take pandas DataFrame as input data:</p>\n<ul>\n<li>Barh</li>\n<li>Bar</li>\n<li>Scatter</li>\n<li>Pie</li>\n<li>Donut</li>\n</ul>\n<p>For example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">roughviz.charts</span> <span class=\"kn\">import</span> <span class=\"n\">Pie</span><span class=\"p\">,</span> <span class=\"n\">Scatter</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">({</span><span class=\"s2\">\"a\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"s2\">\"b\"</span><span class=\"p\">],</span> <span class=\"s2\">\"b\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"s2\">\"c\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]})</span>\n\n<span class=\"c1\"># pie plot</span>\n<span class=\"n\">pie</span> <span class=\"o\">=</span> <span class=\"n\">Pie</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"s2\">\"b\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># scatter plot</span>\n<span class=\"n\">scatter</span> <span class=\"o\">=</span> <span class=\"n\">Scatter</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"s2\">\"c\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Examples</h2>\n<ul>\n<li>Example 1</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">roughviz.charts</span> <span class=\"kn\">import</span> <span class=\"n\">Line</span>\n\n<span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">Line</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"s2\">\"examples/example_datasets/vis1.csv\"</span><span class=\"p\">,</span> <span class=\"n\">y1</span><span class=\"o\">=</span><span class=\"s2\">\"a\"</span><span class=\"p\">,</span> <span class=\"n\">y2</span><span class=\"o\">=</span><span class=\"s2\">\"b\"</span><span class=\"p\">,</span> <span class=\"n\">y3</span><span class=\"o\">=</span><span class=\"s2\">\"c\"</span><span class=\"p\">)</span>\n<span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">set_legend</span><span class=\"p\">(</span><span class=\"n\">legend_position</span><span class=\"o\">=</span><span class=\"s2\">\"left\"</span><span class=\"p\">)</span>\n<span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">set_title</span><span class=\"p\">(</span><span class=\"s2\">\"Line Plot\"</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">set_options</span><span class=\"p\">(</span><span class=\"n\">colors</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"tan\"</span><span class=\"p\">,</span> <span class=\"s2\">\"orange\"</span><span class=\"p\">,</span> <span class=\"s2\">\"coral\"</span><span class=\"p\">])</span>\n\n<span class=\"n\">line</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Example 1\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93c461dd805b9ef3b5f8cd1fe22941cb398e6bb7/68747470733a2f2f6769746875622e636f6d2f636861726c6573646f6e67313939312f70792d726f75676876697a2f626c6f622f6d61737465722f6578616d706c65732f6578616d706c655f706c6f74732f6578616d706c65312e706e67\"></p>\n<ul>\n<li>Example 2</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">roughviz.charts</span> <span class=\"kn\">import</span> <span class=\"n\">Bar</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"labels\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"North\"</span><span class=\"p\">,</span> <span class=\"s2\">\"South\"</span><span class=\"p\">,</span> <span class=\"s2\">\"East\"</span><span class=\"p\">,</span> <span class=\"s2\">\"West\"</span><span class=\"p\">],</span>\n    <span class=\"s2\">\"values\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">Bar</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">\"Regions\"</span><span class=\"p\">,</span> <span class=\"n\">title_fontsize</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s2\">\"Region\"</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s2\">\"Number\"</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Example 2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58a6e3df02bb88e04c0273c282409a54c8504039/68747470733a2f2f6769746875622e636f6d2f636861726c6573646f6e67313939312f70792d726f75676876697a2f626c6f622f6d61737465722f6578616d706c65732f6578616d706c655f706c6f74732f6578616d706c65322e706e67\"></p>\n\n          </div>"}, "last_serial": 6595236, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "ae4d529e22f9f883b2ab25c1f4c7c0e0", "sha256": "ae1f64c69e382d40483f80500258381e71b8a412a0038a3f9fe2c483533050fe"}, "downloads": -1, "filename": "py-roughviz-0.1.0.tar.gz", "has_sig": false, "md5_digest": "ae4d529e22f9f883b2ab25c1f4c7c0e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 467305, "upload_time": "2019-12-27T14:54:43", "upload_time_iso_8601": "2019-12-27T14:54:43.628425Z", "url": "https://files.pythonhosted.org/packages/7b/1a/c8336afd8886f3e44decc1e82bef675c3dbaf5572f167644c0ce5431a32e/py-roughviz-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "8384e3322380b1f775b3ade756cff912", "sha256": "e441a5a87b5bd1399d33118deb370e86471dd3217c2eb32eae8dec741bc63040"}, "downloads": -1, "filename": "py-roughviz-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8384e3322380b1f775b3ade756cff912", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 467351, "upload_time": "2019-12-27T15:13:16", "upload_time_iso_8601": "2019-12-27T15:13:16.539099Z", "url": "https://files.pythonhosted.org/packages/5d/88/b2f7b06ed9a1ad0af2bac69714045f5edb6430d790801424a6821a723b68/py-roughviz-0.1.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "9485ff5c8bdf9df394fa9d34f3be3494", "sha256": "c7753a5735483717478b788e6f417f030a38f1e353225ec892e9ecebb94520bd"}, "downloads": -1, "filename": "py-roughviz-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9485ff5c8bdf9df394fa9d34f3be3494", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 471398, "upload_time": "2019-12-27T21:34:57", "upload_time_iso_8601": "2019-12-27T21:34:57.729473Z", "url": "https://files.pythonhosted.org/packages/c6/50/e372e197eb2d7d3854287f919b494530b0889ed5a67fc8b9760538f6f6a5/py-roughviz-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "f31eeabd711bc4a49145a6597ac12fd4", "sha256": "b71d741e0fbb759ecf459ba74d2e44ab7fbf3f3d6cc9d5350d995b802707557d"}, "downloads": -1, "filename": "py-roughviz-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f31eeabd711bc4a49145a6597ac12fd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 471411, "upload_time": "2019-12-27T21:35:00", "upload_time_iso_8601": "2019-12-27T21:35:00.210268Z", "url": "https://files.pythonhosted.org/packages/fc/7f/d90b5936576ced79af3b353387fcf6d45a3e555a5bed691c3bd0b612acf1/py-roughviz-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "00044f1ddbc07a430f427a5d6fc4fd0b", "sha256": "075cc95839593a1cef1714f27a444a8290413712c92f5cd767e61e99d20b8574"}, "downloads": -1, "filename": "py-roughviz-0.3.1.tar.gz", "has_sig": false, "md5_digest": "00044f1ddbc07a430f427a5d6fc4fd0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 471916, "upload_time": "2019-12-28T19:28:18", "upload_time_iso_8601": "2019-12-28T19:28:18.198780Z", "url": "https://files.pythonhosted.org/packages/75/e8/38a1137770852deff3317a4be5e5740404285a381464f585b09ece947dc5/py-roughviz-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "79ed13d55f3acf37afb546ab7946dd63", "sha256": "3bf96b1ac54478eac8bcb97e3a3913c889bcc015f1baca88baf4fcbbd21866da"}, "downloads": -1, "filename": "py-roughviz-0.4.0.tar.gz", "has_sig": false, "md5_digest": "79ed13d55f3acf37afb546ab7946dd63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473103, "upload_time": "2019-12-31T23:03:35", "upload_time_iso_8601": "2019-12-31T23:03:35.528180Z", "url": "https://files.pythonhosted.org/packages/aa/5c/e3935088420e3748602c8086cfce111f73710b8dd3a5458966f6739b2c9a/py-roughviz-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "3f2aa93d8ccd1666985c487aff6cec2d", "sha256": "1ad1518cb6e354020314c6fc1a45d2931d69e0f99605c28041836baaf7f941bf"}, "downloads": -1, "filename": "py-roughviz-0.4.1.tar.gz", "has_sig": false, "md5_digest": "3f2aa93d8ccd1666985c487aff6cec2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473131, "upload_time": "2020-02-08T19:55:59", "upload_time_iso_8601": "2020-02-08T19:55:59.330798Z", "url": "https://files.pythonhosted.org/packages/ba/cd/df39793f17fa25a2d2bc3bc6f48aaf295600f42d10bfb9a1fcd47ae38132/py-roughviz-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "e74e0b2fb6c0175ede03066997687f1d", "sha256": "bc398796ddf209bd4bcb80e1f39aae7ad548ae255ce69935248b8bd80fd9e4aa"}, "downloads": -1, "filename": "py-roughviz-0.4.2.tar.gz", "has_sig": false, "md5_digest": "e74e0b2fb6c0175ede03066997687f1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473245, "upload_time": "2020-02-08T20:20:20", "upload_time_iso_8601": "2020-02-08T20:20:20.893102Z", "url": "https://files.pythonhosted.org/packages/03/4d/59c31a81a1ea28c0f8a2b049b537477d9039e85d2b4e14f851f45382397a/py-roughviz-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "ed98b7c6323684406332012409dcb3e7", "sha256": "f394a8479d284e5fd49334207ad55d24cc8a3c07109ed604ce80fd1a6190efc5"}, "downloads": -1, "filename": "py-roughviz-0.4.3.tar.gz", "has_sig": false, "md5_digest": "ed98b7c6323684406332012409dcb3e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473246, "upload_time": "2020-02-08T20:27:32", "upload_time_iso_8601": "2020-02-08T20:27:32.524403Z", "url": "https://files.pythonhosted.org/packages/49/ec/12f25596b0656b3d855e9db928310cd7f900c23853e277854549b810c536/py-roughviz-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "3bebefbc21d5096f1a2f08793aee6af7", "sha256": "69df1d8f4dd38b8f2639aacbf688b168b4686f180d8b0ee2fde69da8932d52fc"}, "downloads": -1, "filename": "py-roughviz-0.5.0.tar.gz", "has_sig": false, "md5_digest": "3bebefbc21d5096f1a2f08793aee6af7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473132, "upload_time": "2020-02-08T20:33:05", "upload_time_iso_8601": "2020-02-08T20:33:05.251934Z", "url": "https://files.pythonhosted.org/packages/ef/3f/3f971f62f69da81a648428186f15c7032ce73ad805a6a50ce8209f25bca6/py-roughviz-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "f254f34c24414cd5fe4e7e8099dc872a", "sha256": "d75468fdeb2e52bb198566e3b076528ece144af3c9b93e3c7cb72ac411943f3e"}, "downloads": -1, "filename": "py-roughviz-0.5.1.tar.gz", "has_sig": false, "md5_digest": "f254f34c24414cd5fe4e7e8099dc872a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473149, "upload_time": "2020-02-08T20:43:23", "upload_time_iso_8601": "2020-02-08T20:43:23.487200Z", "url": "https://files.pythonhosted.org/packages/ad/e5/66407b67ec0a0cf5c2f18e106840689a40c509cb71b1dc319e94ff71e356/py-roughviz-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f254f34c24414cd5fe4e7e8099dc872a", "sha256": "d75468fdeb2e52bb198566e3b076528ece144af3c9b93e3c7cb72ac411943f3e"}, "downloads": -1, "filename": "py-roughviz-0.5.1.tar.gz", "has_sig": false, "md5_digest": "f254f34c24414cd5fe4e7e8099dc872a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 473149, "upload_time": "2020-02-08T20:43:23", "upload_time_iso_8601": "2020-02-08T20:43:23.487200Z", "url": "https://files.pythonhosted.org/packages/ad/e5/66407b67ec0a0cf5c2f18e106840689a40c509cb71b1dc319e94ff71e356/py-roughviz-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:36 2020"}