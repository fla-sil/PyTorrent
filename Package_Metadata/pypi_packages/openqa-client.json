{"info": {"author": "Adam Williamson", "author_email": "awilliam@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Utilities"], "description": "# openqa_client\n\nThis is a client for the [openQA](https://os-autoinst.github.io/openQA/)\nAPI, based on [requests](https://python-requests.org). It requires Python\n3.6 or later.\n\n## Usage\n\nHere's a simple example of reading the status of a job:\n\n    from openqa_client.client import OpenQA_Client\n    client = OpenQA_Client(server='openqa.opensuse.org')\n    print(client.openqa_request('GET', 'jobs/1'))\n\nHere's an example of triggering jobs for an ISO:\n\n    # This is a Fedora server.\n    client = OpenQA_Client(server='openqa.happyassassin.net')\n    params = {}\n    params['ISO'] = '22_Beta_TC2_server_x86_64_boot.iso'\n    params['DISTRI'] = 'fedora'\n    params['VERSION'] = '22'\n    params['FLAVOR'] = 'server_boot'\n    params['ARCH'] = 'x86_64'\n    params['BUILD'] = '22_Beta_TC2'\n    print(cl.openqa_request('POST', 'isos', params))\n\nAll methods other than `GET` require authentication. This client uses\nthe same configuration file format as the reference (perl) client in\nopenQA itself. Configuration will be read from `/etc/openqa/client.conf`\nor `~/.config/openqa/client.conf`. A configuration file looks like this:\n\n    [openqa.happyassassin.net]\n    key = APIKEY\n    secret = APISECRET\n\nYou can get the API key and secret from the web UI after logging in. Your\nconfiguration file may include credentials for multiple servers; each\nsection contains the credentials for the server named in the section\ntitle.\n\nIf you create an `OpenQA_Client` instance without passing the `server`\nargument, it will use the first server listed in the configuration file\nif there is one, otherwise it will use 'localhost'. Note: this is a\ndifference in behaviour from the perl client, which *always* uses 'localhost'\nunless a server name is passed.\n\nTLS/SSL connections are the default (except for localhost). You can\npass the argument `scheme` to `OpenQA_Client` to force the use of\nunencrypted HTTP, e.g.\n`OpenQA_Client(server='openqa.happyassassin.net', scheme='http')`.\n\nThe API always returns JSON responses; this client's request functions\nparse the response before returning it.\n\nIf you need for some reason to make a request which does not fall into\nthe `openqa_request()` method's expected pattern, you can construct a\n`requests.Request` and pass it to `do_request()`, which will attach the\nrequired headers, execute the request, and return the parsed JSON response.\n\nThe `const` module provides several constants that are shadowed from the\nupstream openQA code, including job states, results, and the 'scenario\nkeys'.\n\n## Licensing\n\nThis software is available under the GPL, version 2 or any later version.\nA copy is included as COPYING.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/os-autoinst/openQA-python-client", "keywords": "openqa opensuse fedora client", "license": "GPLv2+", "maintainer": "", "maintainer_email": "", "name": "openqa-client", "package_url": "https://pypi.org/project/openqa-client/", "platform": "", "project_url": "https://pypi.org/project/openqa-client/", "project_urls": {"Homepage": "https://github.com/os-autoinst/openQA-python-client"}, "release_url": "https://pypi.org/project/openqa-client/4.1.0/", "requires_dist": ["pyyaml", "requests"], "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "summary": "Python client library for openQA API", "version": "4.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>openqa_client</h1>\n<p>This is a client for the <a href=\"https://os-autoinst.github.io/openQA/\" rel=\"nofollow\">openQA</a>\nAPI, based on <a href=\"https://python-requests.org\" rel=\"nofollow\">requests</a>. It requires Python\n3.6 or later.</p>\n<h2>Usage</h2>\n<p>Here's a simple example of reading the status of a job:</p>\n<pre><code>from openqa_client.client import OpenQA_Client\nclient = OpenQA_Client(server='openqa.opensuse.org')\nprint(client.openqa_request('GET', 'jobs/1'))\n</code></pre>\n<p>Here's an example of triggering jobs for an ISO:</p>\n<pre><code># This is a Fedora server.\nclient = OpenQA_Client(server='openqa.happyassassin.net')\nparams = {}\nparams['ISO'] = '22_Beta_TC2_server_x86_64_boot.iso'\nparams['DISTRI'] = 'fedora'\nparams['VERSION'] = '22'\nparams['FLAVOR'] = 'server_boot'\nparams['ARCH'] = 'x86_64'\nparams['BUILD'] = '22_Beta_TC2'\nprint(cl.openqa_request('POST', 'isos', params))\n</code></pre>\n<p>All methods other than <code>GET</code> require authentication. This client uses\nthe same configuration file format as the reference (perl) client in\nopenQA itself. Configuration will be read from <code>/etc/openqa/client.conf</code>\nor <code>~/.config/openqa/client.conf</code>. A configuration file looks like this:</p>\n<pre><code>[openqa.happyassassin.net]\nkey = APIKEY\nsecret = APISECRET\n</code></pre>\n<p>You can get the API key and secret from the web UI after logging in. Your\nconfiguration file may include credentials for multiple servers; each\nsection contains the credentials for the server named in the section\ntitle.</p>\n<p>If you create an <code>OpenQA_Client</code> instance without passing the <code>server</code>\nargument, it will use the first server listed in the configuration file\nif there is one, otherwise it will use 'localhost'. Note: this is a\ndifference in behaviour from the perl client, which <em>always</em> uses 'localhost'\nunless a server name is passed.</p>\n<p>TLS/SSL connections are the default (except for localhost). You can\npass the argument <code>scheme</code> to <code>OpenQA_Client</code> to force the use of\nunencrypted HTTP, e.g.\n<code>OpenQA_Client(server='openqa.happyassassin.net', scheme='http')</code>.</p>\n<p>The API always returns JSON responses; this client's request functions\nparse the response before returning it.</p>\n<p>If you need for some reason to make a request which does not fall into\nthe <code>openqa_request()</code> method's expected pattern, you can construct a\n<code>requests.Request</code> and pass it to <code>do_request()</code>, which will attach the\nrequired headers, execute the request, and return the parsed JSON response.</p>\n<p>The <code>const</code> module provides several constants that are shadowed from the\nupstream openQA code, including job states, results, and the 'scenario\nkeys'.</p>\n<h2>Licensing</h2>\n<p>This software is available under the GPL, version 2 or any later version.\nA copy is included as COPYING.</p>\n\n          </div>"}, "last_serial": 6807487, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "e900fb20bc4cf5815e8571d2ace5eccd", "sha256": "19ec9a8e817ac9bdc4c25346465c8258c1b5c7dc3a9d4d8fe6e04bac7e38a366"}, "downloads": -1, "filename": "openqa_client-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e900fb20bc4cf5815e8571d2ace5eccd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16759, "upload_time": "2020-02-26T21:03:54", "upload_time_iso_8601": "2020-02-26T21:03:54.751698Z", "url": "https://files.pythonhosted.org/packages/a6/bf/c282e60f08da4afec5cf829542e8d4b10e1687f13cbdaaa1b524dc9fd522/openqa_client-2.0.0-py3-none-any.whl", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "f2e6ee83d540e85f25e28f341c30a084", "sha256": "07cb6babf238f46d47c88206644390d16f433f9bfb94d6d52635ef44f0a2fdef"}, "downloads": -1, "filename": "openqa_client-2.0.1.tar.gz", "has_sig": false, "md5_digest": "f2e6ee83d540e85f25e28f341c30a084", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16402, "upload_time": "2020-02-26T21:47:45", "upload_time_iso_8601": "2020-02-26T21:47:45.754411Z", "url": "https://files.pythonhosted.org/packages/e2/07/e57e3a927df2f0e7645effcee0ef87b33e17c870924aa38bb857b7ca8519/openqa_client-2.0.1.tar.gz", "yanked": false}], "3.0.2": [{"comment_text": "", "digests": {"md5": "644e2dcc99afd51148915c2898112f68", "sha256": "9bdd7762ac51745d88c5d73a43d272a6eed6628cb509f0a2b8b727a9f404db04"}, "downloads": -1, "filename": "openqa_client-3.0.2.tar.gz", "has_sig": false, "md5_digest": "644e2dcc99afd51148915c2898112f68", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 21111, "upload_time": "2020-02-28T01:56:18", "upload_time_iso_8601": "2020-02-28T01:56:18.953918Z", "url": "https://files.pythonhosted.org/packages/b4/ca/68a977f0024665380bc0ce655de778281af3b27f809a5eea98e007882836/openqa_client-3.0.2.tar.gz", "yanked": false}], "3.0.3": [{"comment_text": "", "digests": {"md5": "93a3c35316ad50b6f9edac41cdf6797c", "sha256": "7389cf0eff500b89d7a6f15eac19b9d8a78ae94574e945dd051b6a3789a3aab3"}, "downloads": -1, "filename": "openqa_client-3.0.3.tar.gz", "has_sig": false, "md5_digest": "93a3c35316ad50b6f9edac41cdf6797c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 21170, "upload_time": "2020-02-28T02:43:38", "upload_time_iso_8601": "2020-02-28T02:43:38.286640Z", "url": "https://files.pythonhosted.org/packages/b9/31/2e4170c501ae4613a445a6e32ca34aa254c2ab7c80abb9910615f433606f/openqa_client-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "944f1e5ba995c38a06ac1d6f48531eb3", "sha256": "61df6ac4c5bf3536f7068d7d07c98cf7db29d538d4dd24de752121cfd1d49f10"}, "downloads": -1, "filename": "openqa_client-3.0.4.tar.gz", "has_sig": false, "md5_digest": "944f1e5ba995c38a06ac1d6f48531eb3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 21577, "upload_time": "2020-02-28T05:44:35", "upload_time_iso_8601": "2020-02-28T05:44:35.532504Z", "url": "https://files.pythonhosted.org/packages/ef/48/5976c9da81377352ada0480fd8317ee7c4d4e8c80e2b8a0706ecb6293609/openqa_client-3.0.4.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "0f57dce51adbb9dfd52bc6221e9e1c08", "sha256": "1bc368bdf2e3042d0bc2133931debdecd05ae2ea7ad0f28d11fede874550b353"}, "downloads": -1, "filename": "openqa_client-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0f57dce51adbb9dfd52bc6221e9e1c08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 16722, "upload_time": "2020-02-29T01:03:47", "upload_time_iso_8601": "2020-02-29T01:03:47.757262Z", "url": "https://files.pythonhosted.org/packages/52/1c/0e0c954081a6e9791ea9fa86b03ecfdb07e080197854e993b3888416cd4c/openqa_client-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff7fefa706e935438515ca2019cd2430", "sha256": "421c798de61e63eeed0372196f613e8028f3396fc57578d7bfeb80c267726eaa"}, "downloads": -1, "filename": "openqa_client-4.0.0.tar.gz", "has_sig": false, "md5_digest": "ff7fefa706e935438515ca2019cd2430", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 20864, "upload_time": "2020-02-29T01:03:50", "upload_time_iso_8601": "2020-02-29T01:03:50.220062Z", "url": "https://files.pythonhosted.org/packages/b6/1d/9a2150555702f154c9c3bdb4fb15e9aac4020c2e6eb80acb36b43b4c6f55/openqa_client-4.0.0.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "93a4218067e161d1d3fa2b60ca388028", "sha256": "18e3be9173391ced696ba1cb49b25cb984ed046ec62479a3da8af2bc3d19b226"}, "downloads": -1, "filename": "openqa_client-4.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "93a4218067e161d1d3fa2b60ca388028", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 16975, "upload_time": "2020-03-13T17:37:19", "upload_time_iso_8601": "2020-03-13T17:37:19.597455Z", "url": "https://files.pythonhosted.org/packages/05/3d/231a0398f8a66b58e2ad9cc1db6d27d4a1fcfb338b36e3f6844d33869ff4/openqa_client-4.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "531ca080f7627a2ec28d2d0807e06a24", "sha256": "afa4bdb31ba0e6c6bd4f629528595233c6da291014dead2a2ef598b6abb3f964"}, "downloads": -1, "filename": "openqa_client-4.1.0.tar.gz", "has_sig": false, "md5_digest": "531ca080f7627a2ec28d2d0807e06a24", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 21585, "upload_time": "2020-03-13T17:37:20", "upload_time_iso_8601": "2020-03-13T17:37:20.605253Z", "url": "https://files.pythonhosted.org/packages/84/6a/0dd482612c09253b7928ff814de25e57e0c0efad5db8f4a1c4dc578966a7/openqa_client-4.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "93a4218067e161d1d3fa2b60ca388028", "sha256": "18e3be9173391ced696ba1cb49b25cb984ed046ec62479a3da8af2bc3d19b226"}, "downloads": -1, "filename": "openqa_client-4.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "93a4218067e161d1d3fa2b60ca388028", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 16975, "upload_time": "2020-03-13T17:37:19", "upload_time_iso_8601": "2020-03-13T17:37:19.597455Z", "url": "https://files.pythonhosted.org/packages/05/3d/231a0398f8a66b58e2ad9cc1db6d27d4a1fcfb338b36e3f6844d33869ff4/openqa_client-4.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "531ca080f7627a2ec28d2d0807e06a24", "sha256": "afa4bdb31ba0e6c6bd4f629528595233c6da291014dead2a2ef598b6abb3f964"}, "downloads": -1, "filename": "openqa_client-4.1.0.tar.gz", "has_sig": false, "md5_digest": "531ca080f7627a2ec28d2d0807e06a24", "packagetype": "sdist", "python_version": "source", "requires_python": "!=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4", "size": 21585, "upload_time": "2020-03-13T17:37:20", "upload_time_iso_8601": "2020-03-13T17:37:20.605253Z", "url": "https://files.pythonhosted.org/packages/84/6a/0dd482612c09253b7928ff814de25e57e0c0efad5db8f4a1c4dc578966a7/openqa_client-4.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:39 2020"}