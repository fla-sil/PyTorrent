{"info": {"author": "Brian Thorne, Allan McInnes", "author_email": "hardbyte@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Topic :: Scientific/Engineering"], "description": "===============\nScipy Simulator\n===============\n\nScipy Simulator provides a **concurrent** way of modelling and simulating \nheterogeneous systems in Python using scipy. You might find it most useful \nfor tasks involving *embedded systems* or *signal processing*. \n\nScipysim models are created in pure Python code, by instantiating various\nactors representing different components of a systems, and connecting \nthe actors to each other through channels. Here's a simple example of what\na model looks like::\n\n    #!/usr/bin/env python\n\n    from scipysim.actors.signal import Ramp\n    from scipysim.actors.display import Plotter\n    from scipysim.actors import Channel, Model\n\n    class RampPlot( Model ):\n        def __init__( self ):\n\t        super( RampPlot, self ).__init__()\n\t        connection = Channel()\n\t        src = Ramp( connection )\n\t        dst = Plotter( connection )\n    \t    self.components = [src, dst]\n\n    RampPlot().run()\n\nYou can find a number of other examples of models in the 'models' directory.\n\nThe scipysim project is inspired by the UC Berkeley Ptolemy project, but \nwe are taking a slightly different approach to implementing the \nsimulation engine. Our approach is based on implementing the simulator \nas a Kahn network of actors that communicate via tagged-signals. Each of \nthese actors run in their own thread, and communicate via dedicated \nChannels - which are based on the thread safe FIFO queue implementation \nin the Python standard library. These base level actors can be composed \ntogether to create models, which are also actors in their own right - \nrunning in their own thread with all communication occurring through \ninput and output channels.\n\nScipysim is still very much under active development, and contains a \nnumber of experimental or prototype components. The structure of the \nsimulator is in a state of flux, so there are no guarantees that models\ndeveloped to work with a particular release will still work with the next release.\n\nTesting Scipy Simulator\n=======================\n\nScipy Simulator comes with a large collection of unit tests.\nAll the tests can be run as a suite using nosetests::\n\n\tnosetests\n\t\nA helper script called test_scipysim.py has been placed in the scipysim \nmodule to launch nosetests::\n\n\t./scipysim/test_scipysim.py\n\nIf you downloaded from the repository the tests can be run with setuptools::\n\n\tpython setup.py test\n\nThe tests can also be found in the module hierarchy and run individually::\n\n\tpython ./scipysim/actors/io/test_io.py\n\n\nInstalling Scipy Simulator\n==========================\n\nYou can install scipysim to your main site-packages folder with::\n\n\tsudo python setup.py install\n\t\non Linux or Mac OS X; and::\n\t\n\tpython setup.py install\n\t\non Windows. To install in a more sandboxed \"development\" environment\nsubstitute develop for install, e.g.::\n\n\tsudo python setup.py develop\n\nThis installs an egg at the current directory and links to the package \nin your site-packages folder.\n \nCreating Binary Installers\n==========================\n\nFirstly to clean the obsolete .pyc or .pyo files use::\n\n\tpython setup.py clean --all\n\nGenerate a built distribution like so::\n\n\tpython setup.py bdist\n\t\nOn Windows, to make a nice pretty GUI installer::\n\n\tpython setup.py bdist --format wininst\n\nSimilarly a source distribution can be created with::\n\n\tpython setup.py sdist\n\nContributors\n============\n\nThis project was initiated in the Department of Electrical & Computer \nEngineering at the University of Canterbury (http://www.elec.canterbury.ac.nz/) by:\n\n* Brian Thorne (brian dot thorne at canterbury dot ac dot nz)\n\n* Allan McInnes (allan dot mcinnes at canterbury dot ac dot nz)\n\n\nProject Site\n============\nThe main development occurs on Google Code at http://scipy-sim.googlecode.com\n\n\nContribute to scipysim\n======================\n\nFirst get the source code with mercurial:\n\n\thg clone https://scipy-sim.googlecode.com/hg/ scipy-sim\n\t\nAnd send us a patch by creating a new issue http://code.google.com/p/scipy-sim/issues/entry", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://code.google.com/p/scipy-sim/", "keywords": "simulation,scipy,discrete events", "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "ScipySim", "package_url": "https://pypi.org/project/ScipySim/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ScipySim/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://code.google.com/p/scipy-sim/"}, "release_url": "https://pypi.org/project/ScipySim/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Simulation in Python.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Scipy Simulator provides a <strong>concurrent</strong> way of modelling and simulating\nheterogeneous systems in Python using scipy. You might find it most useful\nfor tasks involving <em>embedded systems</em> or <em>signal processing</em>.</p>\n<p>Scipysim models are created in pure Python code, by instantiating various\nactors representing different components of a systems, and connecting\nthe actors to each other through channels. Here\u2019s a simple example of what\na model looks like:</p>\n<pre>#!/usr/bin/env python\n\nfrom scipysim.actors.signal import Ramp\nfrom scipysim.actors.display import Plotter\nfrom scipysim.actors import Channel, Model\n\nclass RampPlot( Model ):\n    def __init__( self ):\n            super( RampPlot, self ).__init__()\n            connection = Channel()\n            src = Ramp( connection )\n            dst = Plotter( connection )\n        self.components = [src, dst]\n\nRampPlot().run()\n</pre>\n<p>You can find a number of other examples of models in the \u2018models\u2019 directory.</p>\n<p>The scipysim project is inspired by the UC Berkeley Ptolemy project, but\nwe are taking a slightly different approach to implementing the\nsimulation engine. Our approach is based on implementing the simulator\nas a Kahn network of actors that communicate via tagged-signals. Each of\nthese actors run in their own thread, and communicate via dedicated\nChannels - which are based on the thread safe FIFO queue implementation\nin the Python standard library. These base level actors can be composed\ntogether to create models, which are also actors in their own right -\nrunning in their own thread with all communication occurring through\ninput and output channels.</p>\n<p>Scipysim is still very much under active development, and contains a\nnumber of experimental or prototype components. The structure of the\nsimulator is in a state of flux, so there are no guarantees that models\ndeveloped to work with a particular release will still work with the next release.</p>\n<div id=\"testing-scipy-simulator\">\n<h2>Testing Scipy Simulator</h2>\n<p>Scipy Simulator comes with a large collection of unit tests.\nAll the tests can be run as a suite using nosetests:</p>\n<pre>nosetests\n</pre>\n<p>A helper script called test_scipysim.py has been placed in the scipysim\nmodule to launch nosetests:</p>\n<pre>./scipysim/test_scipysim.py\n</pre>\n<p>If you downloaded from the repository the tests can be run with setuptools:</p>\n<pre>python setup.py test\n</pre>\n<p>The tests can also be found in the module hierarchy and run individually:</p>\n<pre>python ./scipysim/actors/io/test_io.py\n</pre>\n</div>\n<div id=\"installing-scipy-simulator\">\n<h2>Installing Scipy Simulator</h2>\n<p>You can install scipysim to your main site-packages folder with:</p>\n<pre>sudo python setup.py install\n</pre>\n<p>on Linux or Mac OS X; and:</p>\n<pre>python setup.py install\n</pre>\n<p>on Windows. To install in a more sandboxed \u201cdevelopment\u201d environment\nsubstitute develop for install, e.g.:</p>\n<pre>sudo python setup.py develop\n</pre>\n<p>This installs an egg at the current directory and links to the package\nin your site-packages folder.</p>\n</div>\n<div id=\"creating-binary-installers\">\n<h2>Creating Binary Installers</h2>\n<p>Firstly to clean the obsolete .pyc or .pyo files use:</p>\n<pre>python setup.py clean --all\n</pre>\n<p>Generate a built distribution like so:</p>\n<pre>python setup.py bdist\n</pre>\n<p>On Windows, to make a nice pretty GUI installer:</p>\n<pre>python setup.py bdist --format wininst\n</pre>\n<p>Similarly a source distribution can be created with:</p>\n<pre>python setup.py sdist\n</pre>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<p>This project was initiated in the Department of Electrical &amp; Computer\nEngineering at the University of Canterbury (<a href=\"http://www.elec.canterbury.ac.nz/\" rel=\"nofollow\">http://www.elec.canterbury.ac.nz/</a>) by:</p>\n<ul>\n<li>Brian Thorne (brian dot thorne at canterbury dot ac dot nz)</li>\n<li>Allan McInnes (allan dot mcinnes at canterbury dot ac dot nz)</li>\n</ul>\n</div>\n<div id=\"project-site\">\n<h2>Project Site</h2>\n<p>The main development occurs on Google Code at <a href=\"http://scipy-sim.googlecode.com\" rel=\"nofollow\">http://scipy-sim.googlecode.com</a></p>\n</div>\n<div id=\"contribute-to-scipysim\">\n<h2>Contribute to scipysim</h2>\n<p>First get the source code with mercurial:</p>\n<blockquote>\nhg clone <a href=\"https://scipy-sim.googlecode.com/hg/\" rel=\"nofollow\">https://scipy-sim.googlecode.com/hg/</a> scipy-sim</blockquote>\n<p>And send us a patch by creating a new issue <a href=\"http://code.google.com/p/scipy-sim/issues/entry\" rel=\"nofollow\">http://code.google.com/p/scipy-sim/issues/entry</a></p>\n</div>\n\n          </div>"}, "last_serial": 169159, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "ef1a64ca020280c11507a1bcba68bb38", "sha256": "ac4d95e740adecccb222bacc95f4a365f8703157fbafb4dbeab50385ff372ad3"}, "downloads": -1, "filename": "ScipySim-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ef1a64ca020280c11507a1bcba68bb38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45070, "upload_time": "2010-03-17T06:45:40", "upload_time_iso_8601": "2010-03-17T06:45:40.913944Z", "url": "https://files.pythonhosted.org/packages/3a/95/54dba9c7a9fc62eb9fa66b1ddb9f4d8b726e6cf222a9adec38827130621e/ScipySim-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dacd540c3e9f085bfe2b071e5c135e15", "sha256": "5ae12b01c6fbaae8d145c34a99fafc134fc8308441034f806e1f3426602a0a1a"}, "downloads": -1, "filename": "ScipySim-0.1.2-py2.6.egg", "has_sig": false, "md5_digest": "dacd540c3e9f085bfe2b071e5c135e15", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 189771, "upload_time": "2010-03-19T01:03:27", "upload_time_iso_8601": "2010-03-19T01:03:27.581195Z", "url": "https://files.pythonhosted.org/packages/a9/6e/3e7b3991834f997fb367f2567e9c015b0d7eadb56e4543cfac8de2c5bd74/ScipySim-0.1.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e224c04033f04fa40fad05dbeef9904e", "sha256": "a050b59977085e0aac312ffcf067c984f89e16d3f6dfb82832eb17da9957982b"}, "downloads": -1, "filename": "ScipySim-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e224c04033f04fa40fad05dbeef9904e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46900, "upload_time": "2010-03-19T01:03:24", "upload_time_iso_8601": "2010-03-19T01:03:24.784938Z", "url": "https://files.pythonhosted.org/packages/99/64/118386cd8eebf3e919c490d8550a2dd4eebde5788de1280f85cd64809e05/ScipySim-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "856121b18d59394e967aacf82e8e2692", "sha256": "2f98b868796a31261d19eda435792e685c929e6dd624e732b47cb2a87824fd1c"}, "downloads": -1, "filename": "ScipySim-0.1.3-py2.6.egg", "has_sig": false, "md5_digest": "856121b18d59394e967aacf82e8e2692", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 189838, "upload_time": "2010-03-19T02:18:25", "upload_time_iso_8601": "2010-03-19T02:18:25.448683Z", "url": "https://files.pythonhosted.org/packages/2d/35/0a17f0a60cc5393ee7a5b3f4e995095da5b54f1561e5c12449e80908b631/ScipySim-0.1.3-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "89859c6cb3019f7a5a45ee045a964430", "sha256": "4b6964e113c4cf10eea7061063835243966aa5a65e60c80eceb308e28c6f537d"}, "downloads": -1, "filename": "ScipySim-0.1.3.tar.gz", "has_sig": false, "md5_digest": "89859c6cb3019f7a5a45ee045a964430", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48776, "upload_time": "2010-03-19T02:18:22", "upload_time_iso_8601": "2010-03-19T02:18:22.116134Z", "url": "https://files.pythonhosted.org/packages/da/60/fb3c78661b7e28c3cd73c588078b620738b280326c8a09eccf98b5c176ad/ScipySim-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4576d1cf03a6e82e2be66f35c4870131", "sha256": "ce7ec60a4ee5a0ee22872a6c84f7c60bb4a87983a21aa293f9e14c7ff40df838"}, "downloads": -1, "filename": "ScipySim-0.1.4-py2.6.egg", "has_sig": false, "md5_digest": "4576d1cf03a6e82e2be66f35c4870131", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 203768, "upload_time": "2010-04-22T15:18:48", "upload_time_iso_8601": "2010-04-22T15:18:48.857037Z", "url": "https://files.pythonhosted.org/packages/e4/d1/5b21bc774cdaa781937a1f651b15102a858670958635111abe36903eacb4/ScipySim-0.1.4-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "78ac6c256188bac56cf520ddaa243c7d", "sha256": "d26387089412c8c64b931ccb80c5cb5ad2a7787fa097b905fba9c01100948352"}, "downloads": -1, "filename": "ScipySim-0.1.4.tar.gz", "has_sig": false, "md5_digest": "78ac6c256188bac56cf520ddaa243c7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51838, "upload_time": "2010-04-22T15:18:45", "upload_time_iso_8601": "2010-04-22T15:18:45.638053Z", "url": "https://files.pythonhosted.org/packages/8f/8c/4904277c865128990507f33bb714e2e770eb1043277418fe60cb3409ec85/ScipySim-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "f9413e940a45a505b5f4cf7014daa53a", "sha256": "97b4fad82bb1de894933f43bc1a21d0ac3cc53f314198d8ed454fbcc6f6347ab"}, "downloads": -1, "filename": "ScipySim-0.1.5-py2.6.egg", "has_sig": false, "md5_digest": "f9413e940a45a505b5f4cf7014daa53a", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 208308, "upload_time": "2010-04-23T02:15:23", "upload_time_iso_8601": "2010-04-23T02:15:23.248546Z", "url": "https://files.pythonhosted.org/packages/7e/a2/cc7c8e9718fba40e86ed37c9f8878bd2a5aa763ad992d84d43447d5c5f18/ScipySim-0.1.5-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c408eddc3097d2cb632c5e873a7d00d2", "sha256": "0ad75691c2e74a6b8ce770cc278d16254d3aa02029b1c81c8da1a5a3b42c4cef"}, "downloads": -1, "filename": "ScipySim-0.1.5.tar.gz", "has_sig": false, "md5_digest": "c408eddc3097d2cb632c5e873a7d00d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56025, "upload_time": "2010-04-23T02:15:19", "upload_time_iso_8601": "2010-04-23T02:15:19.803757Z", "url": "https://files.pythonhosted.org/packages/77/72/fefaa7a0c1df04196658c878394f6eddf7f06c87ef497bed0b01443b3dcf/ScipySim-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f9413e940a45a505b5f4cf7014daa53a", "sha256": "97b4fad82bb1de894933f43bc1a21d0ac3cc53f314198d8ed454fbcc6f6347ab"}, "downloads": -1, "filename": "ScipySim-0.1.5-py2.6.egg", "has_sig": false, "md5_digest": "f9413e940a45a505b5f4cf7014daa53a", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 208308, "upload_time": "2010-04-23T02:15:23", "upload_time_iso_8601": "2010-04-23T02:15:23.248546Z", "url": "https://files.pythonhosted.org/packages/7e/a2/cc7c8e9718fba40e86ed37c9f8878bd2a5aa763ad992d84d43447d5c5f18/ScipySim-0.1.5-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c408eddc3097d2cb632c5e873a7d00d2", "sha256": "0ad75691c2e74a6b8ce770cc278d16254d3aa02029b1c81c8da1a5a3b42c4cef"}, "downloads": -1, "filename": "ScipySim-0.1.5.tar.gz", "has_sig": false, "md5_digest": "c408eddc3097d2cb632c5e873a7d00d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56025, "upload_time": "2010-04-23T02:15:19", "upload_time_iso_8601": "2010-04-23T02:15:19.803757Z", "url": "https://files.pythonhosted.org/packages/77/72/fefaa7a0c1df04196658c878394f6eddf7f06c87ef497bed0b01443b3dcf/ScipySim-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:14 2020"}