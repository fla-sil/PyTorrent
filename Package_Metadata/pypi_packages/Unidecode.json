{"info": {"author": "Tomaz Solc", "author_email": "tomaz.solc@tablix.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Text Processing", "Topic :: Text Processing :: Filters"], "description": "Unidecode, lossy ASCII transliterations of Unicode text\n=======================================================\n\nIt often happens that you have text data in Unicode, but you need to\nrepresent it in ASCII. For example when integrating with legacy code that\ndoesn't support Unicode, or for ease of entry of non-Roman names on a US\nkeyboard, or when constructing ASCII machine identifiers from\nhuman-readable Unicode strings that should still be somewhat intelligible\n(a popular example of this is when making an URL slug from an article\ntitle).\n\nIn most of these examples you could represent Unicode characters as ``???`` or\n``\\\\15BA\\\\15A0\\\\1610``, to mention two extreme cases. But that's nearly useless\nto someone who actually wants to read what the text says.\n\nWhat Unidecode provides is a middle road: the function ``unidecode()`` takes\nUnicode data and tries to represent it in ASCII characters (i.e., the\nuniversally displayable characters between 0x00 and 0x7F), where the\ncompromises taken when mapping between two character sets are chosen to be\nnear what a human with a US keyboard would choose.\n\nThe quality of resulting ASCII representation varies. For languages of\nwestern origin it should be between perfect and good. On the other hand\ntransliteration (i.e., conveying, in Roman letters, the pronunciation\nexpressed by the text in some other writing system) of languages like\nChinese, Japanese or Korean is a very complex issue and this library does\nnot even attempt to address it. It draws the line at context-free\ncharacter-by-character mapping. So a good rule of thumb is that the further\nthe script you are transliterating is from Latin alphabet, the worse the\ntransliteration will be.\n\nNote that this module generally produces better results than simply\nstripping accents from characters (which can be done in Python with\nbuilt-in functions). It is based on hand-tuned character mappings that for\nexample also contain ASCII approximations for symbols and non-Latin\nalphabets.\n\nThis is a Python port of ``Text::Unidecode`` Perl module by Sean M. Burke\n<sburke@cpan.org>.\n\n\nModule content\n--------------\n\nThe module exports a function that takes an Unicode object (Python 2.x) or\nstring (Python 3.x) and returns a string (that can be encoded to ASCII bytes in\nPython 3.x)::\n\n    >>> from unidecode import unidecode\n    >>> unidecode(u'ko\\u017eu\\u0161\\u010dek')\n    'kozuscek'\n    >>> unidecode(u'30 \\U0001d5c4\\U0001d5c6/\\U0001d5c1')\n    '30 km/h'\n    >>> unidecode(u\"\\u5317\\u4EB0\")\n    'Bei Jing '\n\nA utility is also included that allows you to transliterate text from the\ncommand line in several ways. Reading from standard input::\n\n    $ echo hello | unidecode\n    hello\n\nfrom a command line argument::\n\n    $ unidecode -c hello\n    hello\n\nor from a file::\n\n    $ unidecode hello.txt\n    hello\n\nThe default encoding used by the utility depends on your system locale. You can\nspecify another encoding with the ``-e`` argument. See ``unidecode --help`` for\na full list of available options.\n\nRequirements\n------------\n\nNothing except Python itself. Unidecode supports Python 2.7 and 3.4 or later.\n\nYou need a Python build with \"wide\" Unicode characters (also called \"UCS-4\nbuild\") in order for Unidecode to work correctly with characters outside of\nBasic Multilingual Plane (BMP). Common characters outside BMP are bold, italic,\nscript, etc. variants of the Latin alphabet intended for mathematical notation.\nSurrogate pair encoding of \"narrow\" builds is not supported in Unidecode.\n\nIf your Python build supports \"wide\" Unicode the following expression will\nreturn True::\n\n    >>> import sys\n    >>> sys.maxunicode > 0xffff\n    True\n\nSee `PEP 261 <https://www.python.org/dev/peps/pep-0261/>`_ for details\nregarding support for \"wide\" Unicode characters in Python.\n\n\nInstallation\n------------\n\nTo install the latest version of Unidecode from the Python package index, use\nthese commands::\n\n    $ pip install unidecode\n\nTo install Unidecode from the source distribution and run unit tests, use::\n\n    $ python setup.py install\n    $ python setup.py test\n\nFrequently asked questions\n--------------------------\n\nGerman umlauts are transliterated incorrectly\n    Latin letters \"a\", \"o\" and \"u\" with diaeresis are transliterated by\n    Unidecode as \"a\", \"o\", \"u\", *not* according to German rules \"ae\", \"oe\",\n    \"ue\". This is intentional and will not be changed. Rationale is that these\n    letters are used in languages other than German (for example, Finnish and\n    Turkish). German text transliterated without the extra \"e\" is much more\n    readable than other languages transliterated using German rules. A\n    workaround is to do your own replacements of these characters before\n    passing the string to ``unidecode()``.\n\nUnidecode should support localization (e.g. a language or country parameter, inspecting system locale, etc.)\n    Language-specific transliteration is a complicated problem and beyond the\n    scope of this library. Changes related to this will not be accepted. Please\n    consider using other libraries which do provide this capability, such as\n    `Unihandecode <https://github.com/miurahr/unihandecode>`_.\n\nUnidecode should use a permissive license such as MIT or the BSD license.\n    The maintainer of Unidecode believes that providing access to source code\n    on redistribution is a fair and reasonable request when basing products on\n    voluntary work of many contributors. If the license is not suitable for\n    you, please consider using other libraries, such as `text-unidecode\n    <https://github.com/kmike/text-unidecode>`_.\n\nUnidecode produces completely wrong results (e.g. \"u\" with diaeresis transliterating as \"A 1/4 \")\n    The strings you are passing to Unidecode have been wrongly decoded\n    somewhere in your program. For example, you might be decoding utf-8 encoded\n    strings as latin1. With a misconfigured terminal, locale and/or a text\n    editor this might not be immediately apparent. Inspect your strings with\n    ``repr()`` and consult the\n    `Unicode HOWTO <https://docs.python.org/3/howto/unicode.html>`_.\n\nI've upgraded Unidecode and now some URLs on my website return 404 Not Found.\n    This is an issue with the software that is running your website, not\n    Unidecode. Occasionally, new versions of Unidecode library are released\n    which contain improvements to the transliteration tables. This means that\n    you cannot rely that ``unidecode()`` output will not change across\n    different versions of Unidecode library. If you use ``unidecode()`` to\n    generate URLs for your website, either generate the URL slug once and store\n    it in the database or lock your dependency of Unidecode to one specific\n    version.\n\nSome of the issues in this section are discussed in more detail in `this blog\npost <https://www.tablix.org/~avian/blog/archives/2013/09/python_unidecode_release_0_04_14/>`_.\n\n\nPerformance notes\n-----------------\n\nBy default, ``unidecode()`` optimizes for the use case where most of the strings\npassed to it are already ASCII-only and no transliteration is necessary (this\ndefault might change in future versions).\n\nFor performance critical applications, two additional functions are exposed:\n\n``unidecode_expect_ascii()`` is optimized for ASCII-only inputs (approximately\n5 times faster than ``unidecode_expect_nonascii()`` on 10 character strings,\nmore on longer strings), but slightly slower for non-ASCII inputs.\n\n``unidecode_expect_nonascii()`` takes approximately the same amount of time on\nASCII and non-ASCII inputs, but is slightly faster for non-ASCII inputs than\n``unidecode_expect_ascii()``.\n\nApart from differences in run time, both functions produce identical results.\nFor most users of Unidecode, the difference in performance should be\nnegligible.\n\n\nSource\n------\n\nYou can get the latest development version of Unidecode with::\n\n    $ git clone https://www.tablix.org/~avian/git/unidecode.git\n\nThere is also an official mirror of this repository on GitHub at\nhttps://github.com/avian2/unidecode\n\n\nContact\n-------\n\nPlease make sure to read the `Frequently asked questions`_ section above before\ncontacting the maintainer.\n\nBug reports, patches and suggestions for Unidecode can be sent to\ntomaz.solc@tablix.org.\n\nAlternatively, you can also open a ticket or pull request at\nhttps://github.com/avian2/unidecode\n\n\nCopyright\n---------\n\nOriginal character transliteration tables:\n\nCopyright 2001, Sean M. Burke <sburke@cpan.org>, all rights reserved.\n\nPython code and later additions:\n\nCopyright 2019, Tomaz Solc <tomaz.solc@tablix.org>\n\nThis program is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 2 of the License, or (at your option)\nany later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\nmore details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc., 51\nFranklin Street, Fifth Floor, Boston, MA 02110-1301 USA.  The programs and\ndocumentation in this dist are distributed in the hope that they will be\nuseful, but without any warranty; without even the implied warranty of\nmerchantability or fitness for a particular purpose.\n\n..\n    vim: set filetype=rst:\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "Unidecode", "package_url": "https://pypi.org/project/Unidecode/", "platform": "", "project_url": "https://pypi.org/project/Unidecode/", "project_urls": null, "release_url": "https://pypi.org/project/Unidecode/1.1.1/", "requires_dist": null, "requires_python": "", "summary": "ASCII transliterations of Unicode text", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>It often happens that you have text data in Unicode, but you need to\nrepresent it in ASCII. For example when integrating with legacy code that\ndoesn\u2019t support Unicode, or for ease of entry of non-Roman names on a US\nkeyboard, or when constructing ASCII machine identifiers from\nhuman-readable Unicode strings that should still be somewhat intelligible\n(a popular example of this is when making an URL slug from an article\ntitle).</p>\n<p>In most of these examples you could represent Unicode characters as <tt><span class=\"pre\">???</span></tt> or\n<tt><span class=\"pre\">\\\\15BA\\\\15A0\\\\1610</span></tt>, to mention two extreme cases. But that\u2019s nearly useless\nto someone who actually wants to read what the text says.</p>\n<p>What Unidecode provides is a middle road: the function <tt>unidecode()</tt> takes\nUnicode data and tries to represent it in ASCII characters (i.e., the\nuniversally displayable characters between 0x00 and 0x7F), where the\ncompromises taken when mapping between two character sets are chosen to be\nnear what a human with a US keyboard would choose.</p>\n<p>The quality of resulting ASCII representation varies. For languages of\nwestern origin it should be between perfect and good. On the other hand\ntransliteration (i.e., conveying, in Roman letters, the pronunciation\nexpressed by the text in some other writing system) of languages like\nChinese, Japanese or Korean is a very complex issue and this library does\nnot even attempt to address it. It draws the line at context-free\ncharacter-by-character mapping. So a good rule of thumb is that the further\nthe script you are transliterating is from Latin alphabet, the worse the\ntransliteration will be.</p>\n<p>Note that this module generally produces better results than simply\nstripping accents from characters (which can be done in Python with\nbuilt-in functions). It is based on hand-tuned character mappings that for\nexample also contain ASCII approximations for symbols and non-Latin\nalphabets.</p>\n<p>This is a Python port of <tt><span class=\"pre\">Text::Unidecode</span></tt> Perl module by Sean M. Burke\n&lt;<a href=\"mailto:sburke%40cpan.org\">sburke<span>@</span>cpan<span>.</span>org</a>&gt;.</p>\n<div id=\"module-content\">\n<h2>Module content</h2>\n<p>The module exports a function that takes an Unicode object (Python 2.x) or\nstring (Python 3.x) and returns a string (that can be encoded to ASCII bytes in\nPython 3.x):</p>\n<pre>&gt;&gt;&gt; from unidecode import unidecode\n&gt;&gt;&gt; unidecode(u'ko\\u017eu\\u0161\\u010dek')\n'kozuscek'\n&gt;&gt;&gt; unidecode(u'30 \\U0001d5c4\\U0001d5c6/\\U0001d5c1')\n'30 km/h'\n&gt;&gt;&gt; unidecode(u\"\\u5317\\u4EB0\")\n'Bei Jing '\n</pre>\n<p>A utility is also included that allows you to transliterate text from the\ncommand line in several ways. Reading from standard input:</p>\n<pre>$ echo hello | unidecode\nhello\n</pre>\n<p>from a command line argument:</p>\n<pre>$ unidecode -c hello\nhello\n</pre>\n<p>or from a file:</p>\n<pre>$ unidecode hello.txt\nhello\n</pre>\n<p>The default encoding used by the utility depends on your system locale. You can\nspecify another encoding with the <tt><span class=\"pre\">-e</span></tt> argument. See <tt>unidecode <span class=\"pre\">--help</span></tt> for\na full list of available options.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Nothing except Python itself. Unidecode supports Python 2.7 and 3.4 or later.</p>\n<p>You need a Python build with \u201cwide\u201d Unicode characters (also called \u201cUCS-4\nbuild\u201d) in order for Unidecode to work correctly with characters outside of\nBasic Multilingual Plane (BMP). Common characters outside BMP are bold, italic,\nscript, etc. variants of the Latin alphabet intended for mathematical notation.\nSurrogate pair encoding of \u201cnarrow\u201d builds is not supported in Unidecode.</p>\n<p>If your Python build supports \u201cwide\u201d Unicode the following expression will\nreturn True:</p>\n<pre>&gt;&gt;&gt; import sys\n&gt;&gt;&gt; sys.maxunicode &gt; 0xffff\nTrue\n</pre>\n<p>See <a href=\"https://www.python.org/dev/peps/pep-0261/\" rel=\"nofollow\">PEP 261</a> for details\nregarding support for \u201cwide\u201d Unicode characters in Python.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install the latest version of Unidecode from the Python package index, use\nthese commands:</p>\n<pre>$ pip install unidecode\n</pre>\n<p>To install Unidecode from the source distribution and run unit tests, use:</p>\n<pre>$ python setup.py install\n$ python setup.py test\n</pre>\n</div>\n<div id=\"frequently-asked-questions\">\n<h2>Frequently asked questions</h2>\n<dl>\n<dt>German umlauts are transliterated incorrectly</dt>\n<dd>Latin letters \u201ca\u201d, \u201co\u201d and \u201cu\u201d with diaeresis are transliterated by\nUnidecode as \u201ca\u201d, \u201co\u201d, \u201cu\u201d, <em>not</em> according to German rules \u201cae\u201d, \u201coe\u201d,\n\u201cue\u201d. This is intentional and will not be changed. Rationale is that these\nletters are used in languages other than German (for example, Finnish and\nTurkish). German text transliterated without the extra \u201ce\u201d is much more\nreadable than other languages transliterated using German rules. A\nworkaround is to do your own replacements of these characters before\npassing the string to <tt>unidecode()</tt>.</dd>\n<dt>Unidecode should support localization (e.g. a language or country parameter, inspecting system locale, etc.)</dt>\n<dd>Language-specific transliteration is a complicated problem and beyond the\nscope of this library. Changes related to this will not be accepted. Please\nconsider using other libraries which do provide this capability, such as\n<a href=\"https://github.com/miurahr/unihandecode\" rel=\"nofollow\">Unihandecode</a>.</dd>\n<dt>Unidecode should use a permissive license such as MIT or the BSD license.</dt>\n<dd>The maintainer of Unidecode believes that providing access to source code\non redistribution is a fair and reasonable request when basing products on\nvoluntary work of many contributors. If the license is not suitable for\nyou, please consider using other libraries, such as <a href=\"https://github.com/kmike/text-unidecode\" rel=\"nofollow\">text-unidecode</a>.</dd>\n<dt>Unidecode produces completely wrong results (e.g. \u201cu\u201d with diaeresis transliterating as \u201cA 1/4 \u201c)</dt>\n<dd>The strings you are passing to Unidecode have been wrongly decoded\nsomewhere in your program. For example, you might be decoding utf-8 encoded\nstrings as latin1. With a misconfigured terminal, locale and/or a text\neditor this might not be immediately apparent. Inspect your strings with\n<tt>repr()</tt> and consult the\n<a href=\"https://docs.python.org/3/howto/unicode.html\" rel=\"nofollow\">Unicode HOWTO</a>.</dd>\n<dt>I\u2019ve upgraded Unidecode and now some URLs on my website return 404 Not Found.</dt>\n<dd>This is an issue with the software that is running your website, not\nUnidecode. Occasionally, new versions of Unidecode library are released\nwhich contain improvements to the transliteration tables. This means that\nyou cannot rely that <tt>unidecode()</tt> output will not change across\ndifferent versions of Unidecode library. If you use <tt>unidecode()</tt> to\ngenerate URLs for your website, either generate the URL slug once and store\nit in the database or lock your dependency of Unidecode to one specific\nversion.</dd>\n</dl>\n<p>Some of the issues in this section are discussed in more detail in <a href=\"https://www.tablix.org/~avian/blog/archives/2013/09/python_unidecode_release_0_04_14/\" rel=\"nofollow\">this blog\npost</a>.</p>\n</div>\n<div id=\"performance-notes\">\n<h2>Performance notes</h2>\n<p>By default, <tt>unidecode()</tt> optimizes for the use case where most of the strings\npassed to it are already ASCII-only and no transliteration is necessary (this\ndefault might change in future versions).</p>\n<p>For performance critical applications, two additional functions are exposed:</p>\n<p><tt>unidecode_expect_ascii()</tt> is optimized for ASCII-only inputs (approximately\n5 times faster than <tt>unidecode_expect_nonascii()</tt> on 10 character strings,\nmore on longer strings), but slightly slower for non-ASCII inputs.</p>\n<p><tt>unidecode_expect_nonascii()</tt> takes approximately the same amount of time on\nASCII and non-ASCII inputs, but is slightly faster for non-ASCII inputs than\n<tt>unidecode_expect_ascii()</tt>.</p>\n<p>Apart from differences in run time, both functions produce identical results.\nFor most users of Unidecode, the difference in performance should be\nnegligible.</p>\n</div>\n<div id=\"source\">\n<h2>Source</h2>\n<p>You can get the latest development version of Unidecode with:</p>\n<pre>$ git clone https://www.tablix.org/~avian/git/unidecode.git\n</pre>\n<p>There is also an official mirror of this repository on GitHub at\n<a href=\"https://github.com/avian2/unidecode\" rel=\"nofollow\">https://github.com/avian2/unidecode</a></p>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>Please make sure to read the <a href=\"#frequently-asked-questions\" rel=\"nofollow\">Frequently asked questions</a> section above before\ncontacting the maintainer.</p>\n<p>Bug reports, patches and suggestions for Unidecode can be sent to\n<a href=\"mailto:tomaz.solc%40tablix.org\">tomaz<span>.</span>solc<span>@</span>tablix<span>.</span>org</a>.</p>\n<p>Alternatively, you can also open a ticket or pull request at\n<a href=\"https://github.com/avian2/unidecode\" rel=\"nofollow\">https://github.com/avian2/unidecode</a></p>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Original character transliteration tables:</p>\n<p>Copyright 2001, Sean M. Burke &lt;<a href=\"mailto:sburke%40cpan.org\">sburke<span>@</span>cpan<span>.</span>org</a>&gt;, all rights reserved.</p>\n<p>Python code and later additions:</p>\n<p>Copyright 2019, Tomaz Solc &lt;<a href=\"mailto:tomaz.solc%40tablix.org\">tomaz<span>.</span>solc<span>@</span>tablix<span>.</span>org</a>&gt;</p>\n<p>This program is free software; you can redistribute it and/or modify it\nunder the terms of the GNU General Public License as published by the Free\nSoftware Foundation; either version 2 of the License, or (at your option)\nany later version.</p>\n<p>This program is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\nFITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for\nmore details.</p>\n<p>You should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc., 51\nFranklin Street, Fifth Floor, Boston, MA 02110-1301 USA.  The programs and\ndocumentation in this dist are distributed in the hope that they will be\nuseful, but without any warranty; without even the implied warranty of\nmerchantability or fitness for a particular purpose.</p>\n</div>\n\n          </div>"}, "last_serial": 5429814, "releases": {"0.04.1": [{"comment_text": "", "digests": {"md5": "853ca8bc15fad39d0024f6c669188af6", "sha256": "ccb0e0fedc8cb25f8c6475af0f0a6e59126ac3a22281a5805be030d112a82d78"}, "downloads": -1, "filename": "Unidecode-0.04.1-py2.6.egg", "has_sig": false, "md5_digest": "853ca8bc15fad39d0024f6c669188af6", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 397100, "upload_time": "2009-06-17T00:37:32", "upload_time_iso_8601": "2009-06-17T00:37:32.454400Z", "url": "https://files.pythonhosted.org/packages/a9/d8/de6df0427e853a2db7d33967b01d1dd087e6450842e1a041ecb565035956/Unidecode-0.04.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4c9ed8d40cff25c390ff5d5112b9308", "sha256": "e3687492791cf9088fb17ac69b3d77223eeb13107fa6eff1806d6b63f9306343"}, "downloads": -1, "filename": "Unidecode-0.04.1.tar.gz", "has_sig": false, "md5_digest": "c4c9ed8d40cff25c390ff5d5112b9308", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167029, "upload_time": "2009-06-17T00:37:34", "upload_time_iso_8601": "2009-06-17T00:37:34.350799Z", "url": "https://files.pythonhosted.org/packages/d2/c0/fd82d57ad948f005c8d96211249d3cb34ee57289d8e9eecf6bdda70b4bd6/Unidecode-0.04.1.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "ccfd7281fff1c9fd2ebdec8be59673b8", "sha256": "50729029478df1199034ea9afc832e75d8d0989df87e4cd73596def9dad2d5a3"}, "downloads": -1, "filename": "Unidecode-0.04.5.tar.gz", "has_sig": false, "md5_digest": "ccfd7281fff1c9fd2ebdec8be59673b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 186629, "upload_time": "2010-10-15T19:32:14", "upload_time_iso_8601": "2010-10-15T19:32:14.353483Z", "url": "https://files.pythonhosted.org/packages/92/a8/74ec4a74c52aa909c32abc2b04c7dce42a53f69b5ff75f991f7fbdb1bf2a/Unidecode-0.04.5.tar.gz", "yanked": false}], "0.04.10": [{"comment_text": "", "digests": {"md5": "a9540c5f2cb04307e9eabed33c1d64aa", "sha256": "0e550250cdd7e3d7574226cfebcab21004424e95e334b1ff65877a8c4fba7641"}, "downloads": -1, "filename": "Unidecode-0.04.10.tar.gz", "has_sig": false, "md5_digest": "a9540c5f2cb04307e9eabed33c1d64aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 196411, "upload_time": "2012-12-01T16:01:39", "upload_time_iso_8601": "2012-12-01T16:01:39.277365Z", "url": "https://files.pythonhosted.org/packages/00/c7/906e37b3c23e454e5b4c5c9bd6634e14b59701ed980278b30e36c5d1b765/Unidecode-0.04.10.tar.gz", "yanked": false}], "0.04.11": [{"comment_text": "", "digests": {"md5": "671dd719fe1ed55fc3aefa1080d1dd01", "sha256": "8c120a6f7ffe3428d41072ab28edb7813aeea38aaab05ab073eb74eb2390173a"}, "downloads": -1, "filename": "Unidecode-0.04.11.tar.gz", "has_sig": false, "md5_digest": "671dd719fe1ed55fc3aefa1080d1dd01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 195635, "upload_time": "2013-01-17T08:40:41", "upload_time_iso_8601": "2013-01-17T08:40:41.116195Z", "url": "https://files.pythonhosted.org/packages/62/e3/3cd0700a9fd0a9b49a2929303cb6716ef09c5257ee2b21b55d1ae7bc92c0/Unidecode-0.04.11.tar.gz", "yanked": false}], "0.04.12": [{"comment_text": "", "digests": {"md5": "351dc98f4512bdd2e93f7a6c498730eb", "sha256": "a042a7284b36da63440f58c32fabdf723b716082cb3c4b093b421e7c4d6ea5b9"}, "downloads": -1, "filename": "Unidecode-0.04.12.tar.gz", "has_sig": false, "md5_digest": "351dc98f4512bdd2e93f7a6c498730eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 195729, "upload_time": "2013-01-28T08:12:01", "upload_time_iso_8601": "2013-01-28T08:12:01.177243Z", "url": "https://files.pythonhosted.org/packages/02/28/8bbf89cd585383cdd10a138930c58d68890a025416cac793939eae967c94/Unidecode-0.04.12.tar.gz", "yanked": false}], "0.04.13": [{"comment_text": "", "digests": {"md5": "74fabcc0aa3c3b185181df7fce8cab09", "sha256": "ca58bf0ce984a20ad3a5d7fdbb7e773d8d1e5fd1570951e47c1908eed8fe0442"}, "downloads": -1, "filename": "Unidecode-0.04.13.tar.gz", "has_sig": false, "md5_digest": "74fabcc0aa3c3b185181df7fce8cab09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200125, "upload_time": "2013-05-30T16:35:09", "upload_time_iso_8601": "2013-05-30T16:35:09.250929Z", "url": "https://files.pythonhosted.org/packages/31/86/0b3072be432028641901d463a9c634b34012a75750c80cad66bf84a33a4c/Unidecode-0.04.13.tar.gz", "yanked": false}], "0.04.14": [{"comment_text": "", "digests": {"md5": "d4106bcfdef39625944f4294ef4666de", "sha256": "a66f8a527ee0709742caa16745cc882b85d6cfc12b37fa2f56024d07031f230c"}, "downloads": -1, "filename": "Unidecode-0.04.14.tar.gz", "has_sig": false, "md5_digest": "d4106bcfdef39625944f4294ef4666de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200860, "upload_time": "2013-09-20T18:03:22", "upload_time_iso_8601": "2013-09-20T18:03:22.348478Z", "url": "https://files.pythonhosted.org/packages/ec/bf/3fb5b08eca45b835b60c5de17bf8193986511d59dba4ae481e73c10f9559/Unidecode-0.04.14.tar.gz", "yanked": false}], "0.04.16": [{"comment_text": "", "digests": {"md5": "cd6e265fd61010a1cbfeb9dd42c6bcce", "sha256": "4cd218737d1a807bbaba9a6534fc3c80d129cff76cf7d7fdbd71e744d836657b"}, "downloads": -1, "filename": "Unidecode-0.04.16.tar.gz", "has_sig": false, "md5_digest": "cd6e265fd61010a1cbfeb9dd42c6bcce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 200525, "upload_time": "2014-05-11T18:36:25", "upload_time_iso_8601": "2014-05-11T18:36:25.679716Z", "url": "https://files.pythonhosted.org/packages/ec/d8/97c4c7ed5ad3cd2511d8896b2973b1f403110e07b38ea310f8703ba8485f/Unidecode-0.04.16.tar.gz", "yanked": false}], "0.04.17": [{"comment_text": "", "digests": {"md5": "5862c893d5aac49f5eefbd96e9e9e682", "sha256": "f0f8d53d39877da4849293d548eecb5e79364b573643296869dbc7f5b86709ef"}, "downloads": -1, "filename": "Unidecode-0.04.17.tar.gz", "has_sig": false, "md5_digest": "5862c893d5aac49f5eefbd96e9e9e682", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 201090, "upload_time": "2014-12-18T14:32:11", "upload_time_iso_8601": "2014-12-18T14:32:11.390124Z", "url": "https://files.pythonhosted.org/packages/72/37/98cb40a22c2bfa83af71ad036253392e9afb6053068de6151399520a8460/Unidecode-0.04.17.tar.gz", "yanked": false}], "0.04.18": [{"comment_text": "", "digests": {"md5": "148a6b31e4fdedc444fe2c6430af3f82", "sha256": "f19150c74de2fe6847b13efeeaee402f2bd2c309a446346a8b5baae0315d108a"}, "downloads": -1, "filename": "Unidecode-0.04.18.tar.gz", "has_sig": false, "md5_digest": "148a6b31e4fdedc444fe2c6430af3f82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 206191, "upload_time": "2015-06-13T12:17:29", "upload_time_iso_8601": "2015-06-13T12:17:29.439825Z", "url": "https://files.pythonhosted.org/packages/d8/11/d6cb1086729a0596a98323ba177871cbda7c390af74fda40941e6f382729/Unidecode-0.04.18.tar.gz", "yanked": false}], "0.04.19": [{"comment_text": "", "digests": {"md5": "9b3ab9bfe5a58124609840f0c2accfe4", "sha256": "51477646a9169469e37e791b13ae65fcc75b7f7f570d0d3e514d077805c02e1e"}, "downloads": -1, "filename": "Unidecode-0.04.19.tar.gz", "has_sig": false, "md5_digest": "9b3ab9bfe5a58124609840f0c2accfe4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 204613, "upload_time": "2016-01-21T17:14:57", "upload_time_iso_8601": "2016-01-21T17:14:57.727338Z", "url": "https://files.pythonhosted.org/packages/5a/73/053be0fafe387d41ce705585412808093f5a333aaa71cabbab641f677c11/Unidecode-0.04.19.tar.gz", "yanked": false}], "0.04.20": [{"comment_text": "", "digests": {"md5": "638716968b21c06b2e1ff9c4770bcc42", "sha256": "eedac7bfd886f43484787206f6a141b232e2b2a58652c54d06499b187fd84660"}, "downloads": -1, "filename": "Unidecode-0.04.20-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "638716968b21c06b2e1ff9c4770bcc42", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 228276, "upload_time": "2017-01-09T16:49:00", "upload_time_iso_8601": "2017-01-09T16:49:00.807522Z", "url": "https://files.pythonhosted.org/packages/c3/6f/05f5deb753d0594583aa1cc0d2fe9d631d9a00e9b28d0da49f8d3763755b/Unidecode-0.04.20-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec6905c68230b63f2cea8b982da07614", "sha256": "ed4418b4b1b190487753f1cca6299e8076079258647284414e6d607d1f8a00e0"}, "downloads": -1, "filename": "Unidecode-0.04.20.tar.gz", "has_sig": false, "md5_digest": "ec6905c68230b63f2cea8b982da07614", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205830, "upload_time": "2017-01-09T16:47:52", "upload_time_iso_8601": "2017-01-09T16:47:52.086285Z", "url": "https://files.pythonhosted.org/packages/ba/64/410af95d27f2a8824112d17ed41ea7ce6d2cbc8a4832c2e548d3408fad0a/Unidecode-0.04.20.tar.gz", "yanked": false}], "0.04.21": [{"comment_text": "", "digests": {"md5": "5c974925b5e37747d505a0d1e67fc736", "sha256": "61f807220eda0203a774a09f84b4304a3f93b5944110cc132af29ddb81366883"}, "downloads": -1, "filename": "Unidecode-0.04.21-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c974925b5e37747d505a0d1e67fc736", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 228285, "upload_time": "2017-06-28T11:56:53", "upload_time_iso_8601": "2017-06-28T11:56:53.617204Z", "url": "https://files.pythonhosted.org/packages/01/a1/9d7f3138ee3d79a1ab865a2cb38200ca778d85121db19fe264c76c981184/Unidecode-0.04.21-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "089031ed00637d7078f33dad9d6a3c12", "sha256": "280a6ab88e1f2eb5af79edff450021a0d3f0448952847cd79677e55e58bad051"}, "downloads": -1, "filename": "Unidecode-0.04.21.tar.gz", "has_sig": false, "md5_digest": "089031ed00637d7078f33dad9d6a3c12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 205931, "upload_time": "2017-06-28T11:56:50", "upload_time_iso_8601": "2017-06-28T11:56:50.781932Z", "url": "https://files.pythonhosted.org/packages/0e/26/6a4295c494e381d56bba986893382b5dd5e82e2643fc72e4e49b6c99ce15/Unidecode-0.04.21.tar.gz", "yanked": false}], "0.04.6": [{"comment_text": "", "digests": {"md5": "ca5b9cc4de8d215da046b55e8e294151", "sha256": "675147f16e5d1584588cf5ad88d2c2fd71d1b06878ae10ec0c3176dcdfb2310d"}, "downloads": -1, "filename": "Unidecode-0.04.6.tar.gz", "has_sig": false, "md5_digest": "ca5b9cc4de8d215da046b55e8e294151", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 188463, "upload_time": "2011-02-16T12:51:47", "upload_time_iso_8601": "2011-02-16T12:51:47.483585Z", "url": "https://files.pythonhosted.org/packages/87/98/b66cb1c228f19ea309fbe932ac3d1ccf7dfc40a649f20b6af43a31d71387/Unidecode-0.04.6.tar.gz", "yanked": false}], "0.04.7": [{"comment_text": "", "digests": {"md5": "c67bc90041ffc45a1d0f5cba5feb0e14", "sha256": "f75cd9c7a8dee02be23dcc6c516236e55ae7a60184fdb1e925d65d544c200c4c"}, "downloads": -1, "filename": "Unidecode-0.04.7.tar.gz", "has_sig": false, "md5_digest": "c67bc90041ffc45a1d0f5cba5feb0e14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 187480, "upload_time": "2011-04-04T09:31:59", "upload_time_iso_8601": "2011-04-04T09:31:59.350858Z", "url": "https://files.pythonhosted.org/packages/f0/dd/86c6d331c0ac004db772c75212de93e5ec74ca38ceac24fed80ff807ec5b/Unidecode-0.04.7.tar.gz", "yanked": false}], "0.04.8": [{"comment_text": "", "digests": {"md5": "d90ec0979a47bba5accf383c23a97699", "sha256": "25d913c9e187bac94c7c29f86ed26b47e96b1dd55892ebadbff6707bd8e065de"}, "downloads": -1, "filename": "Unidecode-0.04.8.tar.gz", "has_sig": false, "md5_digest": "d90ec0979a47bba5accf383c23a97699", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 196740, "upload_time": "2011-09-22T18:08:48", "upload_time_iso_8601": "2011-09-22T18:08:48.199583Z", "url": "https://files.pythonhosted.org/packages/04/e5/38fe9552148f8d73b840d663e61d15ba87a3cbeb89039fac5a52bae4d6d9/Unidecode-0.04.8.tar.gz", "yanked": false}], "0.04.9": [{"comment_text": "", "digests": {"md5": "c156f2cf31dd186532f8b993629b5b91", "sha256": "95df723427e7e1872349e2c3aef54c77c1df48fa57563d050bf56f43ba1d4d14"}, "downloads": -1, "filename": "Unidecode-0.04.9.tar.gz", "has_sig": false, "md5_digest": "c156f2cf31dd186532f8b993629b5b91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 196659, "upload_time": "2011-09-23T08:51:30", "upload_time_iso_8601": "2011-09-23T08:51:30.136282Z", "url": "https://files.pythonhosted.org/packages/69/8a/de936836c087769b23d5937da47bc141fb302013fc7ca89599c3dd2f2f9f/Unidecode-0.04.9.tar.gz", "yanked": false}], "1.0.22": [{"comment_text": "", "digests": {"md5": "3cd519af14671835bae24c6c25fe02f5", "sha256": "72f49d3729f3d8f5799f710b97c1451c5163102e76d64d20e170aedbbd923582"}, "downloads": -1, "filename": "Unidecode-1.0.22-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3cd519af14671835bae24c6c25fe02f5", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 235421, "upload_time": "2018-01-05T16:16:24", "upload_time_iso_8601": "2018-01-05T16:16:24.849830Z", "url": "https://files.pythonhosted.org/packages/59/ef/67085e30e8bbcdd76e2f0a4ad8151c13a2c5bce77c85f8cad6e1f16fb141/Unidecode-1.0.22-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6156f9d73ea18d56794802fe28e1b7ae", "sha256": "8c33dd588e0c9bc22a76eaa0c715a5434851f726131bd44a6c26471746efabf5"}, "downloads": -1, "filename": "Unidecode-1.0.22.tar.gz", "has_sig": false, "md5_digest": "6156f9d73ea18d56794802fe28e1b7ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 208877, "upload_time": "2018-01-05T16:16:22", "upload_time_iso_8601": "2018-01-05T16:16:22.425191Z", "url": "https://files.pythonhosted.org/packages/9d/36/49d0ee152b6a1631f03a541532c6201942430060aa97fe011cf01a2cce64/Unidecode-1.0.22.tar.gz", "yanked": false}], "1.0.23": [{"comment_text": "", "digests": {"md5": "ab964b8da46ee0aaebbd01cdc91025cf", "sha256": "092cdf7ad9d1052c50313426a625b717dab52f7ac58f859e09ea020953b1ad8f"}, "downloads": -1, "filename": "Unidecode-1.0.23-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ab964b8da46ee0aaebbd01cdc91025cf", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 237408, "upload_time": "2018-11-19T07:38:24", "upload_time_iso_8601": "2018-11-19T07:38:24.000659Z", "url": "https://files.pythonhosted.org/packages/31/39/53096f9217b057cb049fe872b7fc7ce799a1a89b76cf917d9639e7a558b5/Unidecode-1.0.23-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2282cfe97e1b8a2b27ce2f4ab57dc4e5", "sha256": "8b85354be8fd0c0e10adbf0675f6dc2310e56fda43fa8fe049123b6c475e52fb"}, "downloads": -1, "filename": "Unidecode-1.0.23.tar.gz", "has_sig": false, "md5_digest": "2282cfe97e1b8a2b27ce2f4ab57dc4e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 210727, "upload_time": "2018-11-19T07:38:21", "upload_time_iso_8601": "2018-11-19T07:38:21.125311Z", "url": "https://files.pythonhosted.org/packages/9b/d8/c1b658ed7ff6e63a745eda483d7d917eb63a79c59fcb422469b85ff47e94/Unidecode-1.0.23.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "138f0301622da8a725691d5c7e82eba9", "sha256": "8c698f567aa098aeacfbad2d4a416f9803236bdc5ece09653b6e6dfe3f03f102"}, "downloads": -1, "filename": "Unidecode-1.1.0.tar.gz", "has_sig": false, "md5_digest": "138f0301622da8a725691d5c7e82eba9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212038, "upload_time": "2019-06-14T14:35:43", "upload_time_iso_8601": "2019-06-14T14:35:43.220621Z", "url": "https://files.pythonhosted.org/packages/eb/d3/fce426dbc311c2fd849ab04a7bc2579adaaf6109620ed4828d7705cff951/Unidecode-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "0fec7705626e8b521ec26c0351664bc5", "sha256": "1d7a042116536098d05d599ef2b8616759f02985c85b4fef50c78a5aaf10822a"}, "downloads": -1, "filename": "Unidecode-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0fec7705626e8b521ec26c0351664bc5", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 238337, "upload_time": "2019-06-21T09:09:22", "upload_time_iso_8601": "2019-06-21T09:09:22.100884Z", "url": "https://files.pythonhosted.org/packages/d0/42/d9edfed04228bacea2d824904cae367ee9efd05e6cce7ceaaedd0b0ad964/Unidecode-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3497dde89fe129d709d9e6c6824aaa1", "sha256": "2b6aab710c2a1647e928e36d69c21e76b453cd455f4e2621000e54b2a9b8cce8"}, "downloads": -1, "filename": "Unidecode-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e3497dde89fe129d709d9e6c6824aaa1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212151, "upload_time": "2019-06-21T09:09:02", "upload_time_iso_8601": "2019-06-21T09:09:02.092668Z", "url": "https://files.pythonhosted.org/packages/b1/d6/7e2a98e98c43cf11406de6097e2656d31559f788e9210326ce6544bd7d40/Unidecode-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0fec7705626e8b521ec26c0351664bc5", "sha256": "1d7a042116536098d05d599ef2b8616759f02985c85b4fef50c78a5aaf10822a"}, "downloads": -1, "filename": "Unidecode-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0fec7705626e8b521ec26c0351664bc5", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 238337, "upload_time": "2019-06-21T09:09:22", "upload_time_iso_8601": "2019-06-21T09:09:22.100884Z", "url": "https://files.pythonhosted.org/packages/d0/42/d9edfed04228bacea2d824904cae367ee9efd05e6cce7ceaaedd0b0ad964/Unidecode-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3497dde89fe129d709d9e6c6824aaa1", "sha256": "2b6aab710c2a1647e928e36d69c21e76b453cd455f4e2621000e54b2a9b8cce8"}, "downloads": -1, "filename": "Unidecode-1.1.1.tar.gz", "has_sig": false, "md5_digest": "e3497dde89fe129d709d9e6c6824aaa1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 212151, "upload_time": "2019-06-21T09:09:02", "upload_time_iso_8601": "2019-06-21T09:09:02.092668Z", "url": "https://files.pythonhosted.org/packages/b1/d6/7e2a98e98c43cf11406de6097e2656d31559f788e9210326ce6544bd7d40/Unidecode-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:36 2020"}