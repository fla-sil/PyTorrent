{"info": {"author": "joke2k", "author_email": "daniele.faraglia@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "Django-environ\n==============\n\n|pypi| |unix_build| |windows_build| |coverage| |contributors| |license| |say_thanks| |ocbackers| |ocsponsors| \n\n**django-environ** allows you to use `Twelve-factor methodology`_ to configure your Django application with environment variables.\n\n|cover|\n\n.. _settings.py:\n\n.. code-block:: python\n\n    import environ\n    env = environ.Env(\n        # set casting, default value\n        DEBUG=(bool, False)\n    )\n    # reading .env file\n    environ.Env.read_env()\n\n    # False if not in os.environ\n    DEBUG = env('DEBUG')\n\n    # Raises django's ImproperlyConfigured exception if SECRET_KEY not in os.environ\n    SECRET_KEY = env('SECRET_KEY')\n\n    # Parse database connection url strings like psql://user:pass@127.0.0.1:8458/db\n    DATABASES = {\n        # read os.environ['DATABASE_URL'] and raises ImproperlyConfigured exception if not found\n        'default': env.db(),\n        # read os.environ['SQLITE_URL']\n        'extra': env.db('SQLITE_URL', default='sqlite:////tmp/my-tmp-sqlite.db')\n    }\n\n    CACHES = {\n        # read os.environ['CACHE_URL'] and raises ImproperlyConfigured exception if not found\n        'default': env.cache(),\n        # read os.environ['REDIS_URL']\n        'redis': env.cache('REDIS_URL')\n    }\n\nSee the `similar code, sans django-environ <https://gist.github.com/joke2k/cc30ed2d5ccda52d5b551ccbc17e536b>`_.\n\n::\n\n         _ _                                              _\n        | (_)                                            (_)\n      __| |_  __ _ _ __   __ _  ___ ______ ___ _ ____   ___ _ __ ___  _ __\n     / _` | |/ _` | '_ \\ / _` |/ _ \\______/ _ \\ '_ \\ \\ / / | '__/ _ \\| '_ \\\n    | (_| | | (_| | | | | (_| | (_) |    |  __/ | | \\ V /| | | | (_) | | | |\n     \\__,_| |\\__,_|_| |_|\\__, |\\___/      \\___|_| |_|\\_/ |_|_|  \\___/|_| |_|\n         _/ |             __/ |\n        |__/             |___/\n\n\nThe idea of this package is to unify a lot of packages that make the same stuff:\nTake a string from ``os.environ``, parse and cast it to some of useful python typed variables.\nTo do that and to use the `12factor`_ approach, some connection strings are expressed as url,\nso this package can parse it and return a ``urllib.parse.ParseResult``.\nThese strings from ``os.environ`` are loaded from a `.env` file and filled in ``os.environ`` with ``setdefault`` method,\nto avoid to overwrite the real environ.\nA similar approach is used in `Two Scoops of Django`_ book and explained in `12factor-django`_ article.\n\nUsing django-environ you can stop to make a lot of unversioned ``settings_*.py`` to configure your app.\nSee `cookiecutter-django`_ for a concrete example on using with a django project.\n\nFeature Support\n---------------\n- Fast and easy multi environment for deploy\n- Fill ``os.environ`` with .env file variables\n- Variables casting (see supported_types_ below)\n- Url variables exploded to django specific package settings\n\nDjango-environ officially supports Django 1.8 ~ 2.0.\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install django-environ\n\n*NOTE: No need to add it to INSTALLED_APPS.*\n\n\nThen create a ``.env`` file:\n\n.. code-block:: bash\n\n    DEBUG=on\n    SECRET_KEY=your-secret-key\n    DATABASE_URL=psql://user:un-githubbedpassword@127.0.0.1:8458/database\n    SQLITE_URL=sqlite:///my-local-sqlite.db\n    CACHE_URL=memcache://127.0.0.1:11211,127.0.0.1:11212,127.0.0.1:11213\n    REDIS_URL=rediscache://127.0.0.1:6379/1?client_class=django_redis.client.DefaultClient&password=ungithubbed-secret\n\nAnd use it with `settings.py`_ above.\nDon't forget to add ``.env`` in your ``.gitignore`` (tip: add ``.env.example`` with a template of your variables).\n\nDocumentation\n-------------\n\nDocumentation is available at `RTFD <http://django-environ.rtfd.io/>`_.\n\n.. _supported_types:\n\nSupported types\n---------------\n\n- str\n- bool\n- int\n- float\n- json\n- list (FOO=a,b,c)\n- tuple (FOO=(a,b,c))\n- dict (BAR=key=val,foo=bar) #environ.Env(BAR=(dict, {}))\n- dict (BAR=key=val;foo=1.1;baz=True) #environ.Env(BAR=(dict(value=unicode, cast=dict(foo=float,baz=bool)), {}))\n- url\n- path (environ.Path)\n- db_url\n    -  PostgreSQL: postgres://, pgsql://, psql:// or postgresql://\n    -  PostGIS: postgis://\n    -  MySQL: mysql:// or mysql2://\n    -  MySQL for GeoDjango: mysqlgis://\n    -  Mysql Connector Python from Oracle: mysql-connector://\n    -  SQLITE: sqlite://\n    -  SQLITE with SPATIALITE for GeoDjango: spatialite://\n    -  Oracle: oracle://\n    -  MSSQL: mssql://\n    -  PyODBC: pyodbc://\n    -  Redshift: redshift://\n    -  LDAP: ldap://\n- cache_url\n    -  Database: dbcache://\n    -  Dummy: dummycache://\n    -  File: filecache://\n    -  Memory: locmemcache://\n    -  Memcached: memcache://\n    -  Python memory: pymemcache://\n    -  Redis: rediscache://, redis://, or rediss://\n- search_url\n    - ElasticSearch: elasticsearch://\n    - Solr: solr://\n    - Whoosh: whoosh://\n    - Xapian: xapian://\n    - Simple cache: simple://\n- email_url\n    - SMTP: smtp://\n    - SMTP+SSL: smtp+ssl://\n    - SMTP+TLS: smtp+tls://\n    - Console mail: consolemail://\n    - File mail: filemail://\n    - LocMem mail: memorymail://\n    - Dummy mail: dummymail://\n\nTips\n----\n\nUsing unsafe characters in URLs\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIn order to use unsafe characters you have to encode with ``urllib.parse.encode`` before you set into ``.env`` file.\n\n.. code-block:: bash\n\n    DATABASE_URL=mysql://user:%23password@127.0.0.1:3306/dbname\n\nSee https://perishablepress.com/stop-using-unsafe-characters-in-urls/ for reference.\n\nSmart Casting\n~~~~~~~~~~~~~\n\ndjango-environ has a \"Smart-casting\" enabled by default, if you don't provide a ``cast`` type, it will be detected from ``default`` type.\nThis could raise side effects (see `#192 <https://github.com/joke2k/django-environ/issues/192>`_).\nTo disable it use ``env.smart_caset = False``.\nNew major release will disable it as default. \n\n\nMultiple redis cache locations\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor redis cache, `multiple master/slave or shard locations <http://niwinz.github.io/django-redis/latest/#_pluggable_clients>`_ can be configured as follows:\n\n.. code-block:: bash\n\n    CACHE_URL='rediscache://master:6379,slave1:6379,slave2:6379/1'\n\nEmail settings\n~~~~~~~~~~~~~~\n\nIn order to set email configuration for django you can use this code:\n\n.. code-block:: python\n\n    EMAIL_CONFIG = env.email_url(\n        'EMAIL_URL', default='smtp://user:password@localhost:25')\n\n    vars().update(EMAIL_CONFIG)\n\nSQLite urls\n~~~~~~~~~~~\n\nSQLite connects to file based databases. The same URL format is used, omitting the hostname,\nand using the \"file\" portion as the filename of the database.\nThis has the effect of four slashes being present for an absolute\n\nfile path: ``sqlite:////full/path/to/your/database/file.sqlite``.\n\nNested lists\n------------\n\nSome settings such as Django's ``ADMINS`` make use of nested lists. You can use something like this to handle similar cases.\n\n.. code-block:: python\n\n    # DJANGO_ADMINS=John:john@admin.com,Jane:jane@admin.com\n    ADMINS = [x.split(':') for x in env.list('DJANGO_ADMINS')]\n\n    # or use more specific function\n\n    from email.utils import getaddresses\n\n    # DJANGO_ADMINS=Full Name <email-with-name@example.com>,anotheremailwithoutname@example.com\n    ADMINS = getaddresses([env('DJANGO_ADMINS')])\n\nMultiline value\n---------------\n\nYou can set a multiline variable value:\n\n.. code-block:: python\n\n    # MULTILINE_TEXT=Hello\\\\nWorld\n    >>> print env.str('MULTILINE_TEXT', multiline=True)\n    Hello\n    World\n\n\nProxy value\n-----------\n\nYou can set a value prefixed by ``$`` to use as a proxy to another variable value:\n\n.. code-block:: python\n\n    # BAR=FOO\n    # PROXY=$BAR\n    >>> print env.str('PROXY')\n    FOO\n\nMultiple env files\n------------------\nIt is possible to have multiple env files and select one using environment variables.\n\n.. code-block:: python\n\n    env = environ.Env()\n    env.read_env(env.str('ENV_PATH', '.env'))\n\nNow ``ENV_PATH=other-env ./manage.py runserver`` uses ``other-env`` while ``./manage.py runserver`` uses ``.env``.\n\nTests\n=====\n\n::\n\n    $ git clone git@github.com:joke2k/django-environ.git\n    $ cd django-environ/\n    $ python setup.py test\n\nHow to Contribute\n-----------------\n#. Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug. There is a `Contributor Friendly`_ tag for issues that should be ideal for people who are not very familiar with the codebase yet.\n#. Fork `the repository`_ on GitHub to start making your changes to the **develop** branch (or branch off of it).\n#. Write a test which shows that the bug was fixed or that the feature works as expected.\n#. Send a pull request and bug the maintainer until it gets merged and published. :) Make sure to add yourself to `Authors file`_.\n\nLicense\n-------\n\nThis project is licensed under the MIT License - see the `License file`_ file for details\n\nChangelog\n---------\n\nSee the `Changelog file`_ which format is *inspired* by `Keep a Changelog <http://keepachangelog.com/en/1.0.0/>`_.\n\nCredits\n-------\n- See `Authors file`_\n- `12factor`_\n- `12factor-django`_\n- `Two Scoops of Django`_\n- `rconradharris`_ / `envparse`_\n- `migonzalvar`_ / `dj-email-url`_\n- `ghickman`_ / `django-cache-url`_\n- `dstufft`_ / `dj-search-url`_\n- `julianwachholz`_ / `dj-config-url`_\n- `nickstenning`_ / `honcho`_\n- `rconradharris`_ / `envparse`_\n- `Distribute`_\n- `modern-package-template`_\n\nContributors\n-----------------\nThank you to all the people who have already contributed. \n|occontributorimage|\n\nBackers\n-----------------\nThank you to all our backers! \n|ocbackerimage|\n\nSponsors\n-----------------\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. `Became sponsor`_.\n\n|ocsponsor0| |ocsponsor1| |ocsponsor2|\n\n.. _rconradharris: https://github.com/rconradharris\n.. _envparse: https://github.com/rconradharris/envparse\n\n.. _jacobian: https://github.com/jacobian\n.. _dj-database-url: https://github.com/jacobian/dj-database-url\n\n.. _migonzalvar: https://github.com/migonzalvar\n.. _dj-email-url: https://github.com/migonzalvar/dj-email-url\n\n.. _ghickman: https://github.com/ghickman\n.. _django-cache-url: https://github.com/ghickman/django-cache-url\n\n.. _julianwachholz: https://github.com/julianwachholz\n.. _dj-config-url: https://github.com/julianwachholz/dj-config-url\n\n.. _dstufft: https://github.com/dstufft\n.. _dj-search-url: https://github.com/dstufft/dj-search-url\n\n.. _nickstenning: https://github.com/nickstenning\n.. _honcho: https://github.com/nickstenning/honcho\n\n.. _12factor: http://www.12factor.net/\n.. _`Twelve-factor methodology`: http://www.12factor.net/\n.. _12factor-django: http://www.wellfireinteractive.com/blog/easier-12-factor-django/\n.. _`Two Scoops of Django`: http://twoscoopspress.org/\n\n.. _Distribute: http://pypi.python.org/pypi/distribute\n.. _`modern-package-template`: http://pypi.python.org/pypi/modern-package-template\n\n.. _cookiecutter-django: https://github.com/pydanny/cookiecutter-django\n\n.. |pypi| image:: https://img.shields.io/pypi/v/django-environ.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/django-environ\n    :alt: Latest version released on PyPi\n\n.. |coverage| image:: https://img.shields.io/coveralls/joke2k/django-environ/master.svg?style=flat-square\n    :target: https://coveralls.io/r/joke2k/django-environ?branch=master\n    :alt: Test coverage\n\n.. |unix_build| image:: https://img.shields.io/travis/joke2k/django-environ/master.svg?style=flat-square&logo=travis\n    :target: http://travis-ci.org/joke2k/django-environ\n    :alt: Build status of the master branch on Mac/Linux\n\n.. |windows_build|  image:: https://img.shields.io/appveyor/ci/joke2k/django-environ.svg?style=flat-square&logo=windows\n    :target: https://ci.appveyor.com/project/joke2k/django-environ\n    :alt: Build status of the master branch on Windows\n\n.. |contributors| image:: https://img.shields.io/github/contributors/joke2k/django-environ.svg?style=flat-square\n    :target: https://github.com/joke2k/django-environ/graphs/contributors\n\n.. |license| image:: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n    :target: https://raw.githubusercontent.com/joke2k/django-environ/master/LICENSE.txt\n    :alt: Package license\n\n.. |say_thanks| image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg?style=flat-square\n    :target: https://saythanks.io/to/joke2k\n    :alt: Say Thanks!\n\n.. |cover| image:: https://farm2.staticflickr.com/1745/42580036751_35f76a92fe_h.jpg\n    :alt: Photo by Singkham from Pexels\n\n.. _`License file`: https://github.com/joke2k/django-environ/blob/develop/LICENSE.txt\n.. _`Changelog file`: https://github.com/joke2k/django-environ/blob/develop/CHANGELOG.rst\n.. _`Authors file`: https://github.com/joke2k/django-environ/blob/develop/AUTHORS.rst\n.. _`Contributor Friendly`: https://github.com/joke2k/django-environ/issues?direction=desc&labels=contributor-friendly&page=1&sort=updated&state=open\n.. _`the repository`: https://github.com/joke2k/django-environ\n\n.. |ocbackers| image:: https://opencollective.com/django-environ/backers/badge.svg\n    :target: https://opencollective.com/django-environ\n    :alt: Backers on Open Collective\n.. |ocsponsors| image:: https://opencollective.com/django-environ/sponsors/badge.svg\n    :target: https://opencollective.com/django-environ\n    :alt: Sponsors on Open Collective\n    \n.. |ocbackerimage| image:: https://opencollective.com/django-environ/backers.svg?width=890\n    :target: https://opencollective.com/django-environ\n    :alt: Backers on Open Collective\n.. |occontributorimage| image:: https://opencollective.com/django-environ/contributors.svg?width=890&button=false\n    :target: https://opencollective.com/django-environ\n    :alt: Repo Contributors\n\n.. _`Became sponsor`: https://opencollective.com/django-environ#sponsor\n\n.. |ocsponsor0| image:: https://opencollective.com/django-environ/sponsor/0/avatar.svg\n    :target: https://opencollective.com/django-environ/sponsor/0/website\n    :alt: Sponsor\n.. |ocsponsor1| image:: https://opencollective.com/django-environ/sponsor/1/avatar.svg\n    :target: https://opencollective.com/django-environ/sponsor/1/website\n    :alt: Sponsor\n.. |ocsponsor2| image:: https://opencollective.com/django-environ/sponsor/2/avatar.svg\n    :target: https://opencollective.com/django-environ/sponsor/2/website\n    :alt: Sponsor", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pjialin/django-environ", "keywords": "django environment variables 12factor", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-environ", "package_url": "https://pypi.org/project/python-environ/", "platform": "any", "project_url": "https://pypi.org/project/python-environ/", "project_urls": {"Homepage": "https://github.com/pjialin/django-environ"}, "release_url": "https://pypi.org/project/python-environ/0.4.54/", "requires_dist": null, "requires_python": "", "summary": "Django-environ allows you to utilize 12factor inspired environment variables to configure your Django application.", "version": "0.4.54", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-environ\">\n<h2>Django-environ</h2>\n<p><a href=\"https://pypi.python.org/pypi/django-environ\" rel=\"nofollow\"><img alt=\"Latest version released on PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b65bb9ff451640272c33ea46244dd7b683434b4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d656e7669726f6e2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"http://travis-ci.org/joke2k/django-environ\" rel=\"nofollow\"><img alt=\"Build status of the master branch on Mac/Linux\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02144f3fba9da2904c1cdcd101e72b5790400c9d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a6f6b65326b2f646a616e676f2d656e7669726f6e2f6d61737465722e7376673f7374796c653d666c61742d737175617265266c6f676f3d747261766973\"></a> <a href=\"https://ci.appveyor.com/project/joke2k/django-environ\" rel=\"nofollow\"><img alt=\"Build status of the master branch on Windows\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63e41095378e812b8fd3b28b8316d512723e9176/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f6a6f6b65326b2f646a616e676f2d656e7669726f6e2e7376673f7374796c653d666c61742d737175617265266c6f676f3d77696e646f7773\"></a> <a href=\"https://coveralls.io/r/joke2k/django-environ?branch=master\" rel=\"nofollow\"><img alt=\"Test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3036d9dd42c06c7bda38b5c1c8f2929ef8469902/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6a6f6b65326b2f646a616e676f2d656e7669726f6e2f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/joke2k/django-environ/graphs/contributors\" rel=\"nofollow\"><img alt=\"contributors\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3da8b9ccfb213c40c5d5af63a647dc934b6b7505/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f6a6f6b65326b2f646a616e676f2d656e7669726f6e2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://raw.githubusercontent.com/joke2k/django-environ/master/LICENSE.txt\" rel=\"nofollow\"><img alt=\"Package license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d01dca179e5892f8f0e2e136225f10faa1ca41f9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://saythanks.io/to/joke2k\" rel=\"nofollow\"><img alt=\"Say Thanks!\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e59ebf922bcc06186287f5acc92f53df9feee49/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://opencollective.com/django-environ\" rel=\"nofollow\"><img alt=\"Backers on Open Collective\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52c0d92c6d6a81f57a1479126e905bcdc1e32df4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f646a616e676f2d656e7669726f6e2f6261636b6572732f62616467652e737667\"></a> <a href=\"https://opencollective.com/django-environ\" rel=\"nofollow\"><img alt=\"Sponsors on Open Collective\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e359f8296aec30773ca3eeee460ea531123dd0c1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f646a616e676f2d656e7669726f6e2f73706f6e736f72732f62616467652e737667\"></a></p>\n<p><strong>django-environ</strong> allows you to use <a href=\"http://www.12factor.net/\" rel=\"nofollow\">Twelve-factor methodology</a> to configure your Django application with environment variables.</p>\n<p><img alt=\"Photo by Singkham from Pexels\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1b528b0a601145163ec302d768aaa483d2c36732/68747470733a2f2f6661726d322e737461746963666c69636b722e636f6d2f313734352f34323538303033363735315f333566373661393266655f682e6a7067\"></p>\n<pre id=\"settings-py\"><span class=\"kn\">import</span> <span class=\"nn\">environ</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">Env</span><span class=\"p\">(</span>\n    <span class=\"c1\"># set casting, default value</span>\n    <span class=\"n\">DEBUG</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n<span class=\"c1\"># reading .env file</span>\n<span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">Env</span><span class=\"o\">.</span><span class=\"n\">read_env</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># False if not in os.environ</span>\n<span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'DEBUG'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Raises django's ImproperlyConfigured exception if SECRET_KEY not in os.environ</span>\n<span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'SECRET_KEY'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Parse database connection url strings like psql://user:pass@127.0.0.1:8458/db</span>\n<span class=\"n\">DATABASES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># read os.environ['DATABASE_URL'] and raises ImproperlyConfigured exception if not found</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">(),</span>\n    <span class=\"c1\"># read os.environ['SQLITE_URL']</span>\n    <span class=\"s1\">'extra'</span><span class=\"p\">:</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">db</span><span class=\"p\">(</span><span class=\"s1\">'SQLITE_URL'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'sqlite:////tmp/my-tmp-sqlite.db'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">CACHES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># read os.environ['CACHE_URL'] and raises ImproperlyConfigured exception if not found</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">(),</span>\n    <span class=\"c1\"># read os.environ['REDIS_URL']</span>\n    <span class=\"s1\">'redis'</span><span class=\"p\">:</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">cache</span><span class=\"p\">(</span><span class=\"s1\">'REDIS_URL'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</pre>\n<p>See the <a href=\"https://gist.github.com/joke2k/cc30ed2d5ccda52d5b551ccbc17e536b\" rel=\"nofollow\">similar code, sans django-environ</a>.</p>\n<pre>     _ _                                              _\n    | (_)                                            (_)\n  __| |_  __ _ _ __   __ _  ___ ______ ___ _ ____   ___ _ __ ___  _ __\n / _` | |/ _` | '_ \\ / _` |/ _ \\______/ _ \\ '_ \\ \\ / / | '__/ _ \\| '_ \\\n| (_| | | (_| | | | | (_| | (_) |    |  __/ | | \\ V /| | | | (_) | | | |\n \\__,_| |\\__,_|_| |_|\\__, |\\___/      \\___|_| |_|\\_/ |_|_|  \\___/|_| |_|\n     _/ |             __/ |\n    |__/             |___/\n</pre>\n<p>The idea of this package is to unify a lot of packages that make the same stuff:\nTake a string from <tt>os.environ</tt>, parse and cast it to some of useful python typed variables.\nTo do that and to use the <a href=\"http://www.12factor.net/\" rel=\"nofollow\">12factor</a> approach, some connection strings are expressed as url,\nso this package can parse it and return a <tt>urllib.parse.ParseResult</tt>.\nThese strings from <tt>os.environ</tt> are loaded from a <cite>.env</cite> file and filled in <tt>os.environ</tt> with <tt>setdefault</tt> method,\nto avoid to overwrite the real environ.\nA similar approach is used in <a href=\"http://twoscoopspress.org/\" rel=\"nofollow\">Two Scoops of Django</a> book and explained in <a href=\"http://www.wellfireinteractive.com/blog/easier-12-factor-django/\" rel=\"nofollow\">12factor-django</a> article.</p>\n<p>Using django-environ you can stop to make a lot of unversioned <tt><span class=\"pre\">settings_*.py</span></tt> to configure your app.\nSee <a href=\"https://github.com/pydanny/cookiecutter-django\" rel=\"nofollow\">cookiecutter-django</a> for a concrete example on using with a django project.</p>\n<div id=\"feature-support\">\n<h3>Feature Support</h3>\n<ul>\n<li>Fast and easy multi environment for deploy</li>\n<li>Fill <tt>os.environ</tt> with .env file variables</li>\n<li>Variables casting (see <a href=\"#supported-types\" rel=\"nofollow\">supported_types</a> below)</li>\n<li>Url variables exploded to django specific package settings</li>\n</ul>\n<p>Django-environ officially supports Django 1.8 ~ 2.0.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install django-environ\n</pre>\n<p><em>NOTE: No need to add it to INSTALLED_APPS.</em></p>\n<p>Then create a <tt>.env</tt> file:</p>\n<pre><span class=\"nv\">DEBUG</span><span class=\"o\">=</span>on\n<span class=\"nv\">SECRET_KEY</span><span class=\"o\">=</span>your-secret-key\n<span class=\"nv\">DATABASE_URL</span><span class=\"o\">=</span>psql://user:un-githubbedpassword@127.0.0.1:8458/database\n<span class=\"nv\">SQLITE_URL</span><span class=\"o\">=</span>sqlite:///my-local-sqlite.db\n<span class=\"nv\">CACHE_URL</span><span class=\"o\">=</span>memcache://127.0.0.1:11211,127.0.0.1:11212,127.0.0.1:11213\n<span class=\"nv\">REDIS_URL</span><span class=\"o\">=</span>rediscache://127.0.0.1:6379/1?client_class<span class=\"o\">=</span>django_redis.client.DefaultClient<span class=\"p\">&amp;</span><span class=\"nv\">password</span><span class=\"o\">=</span>ungithubbed-secret\n</pre>\n<p>And use it with <a href=\"#settings-py\" rel=\"nofollow\">settings.py</a> above.\nDon\u2019t forget to add <tt>.env</tt> in your <tt>.gitignore</tt> (tip: add <tt>.env.example</tt> with a template of your variables).</p>\n</div>\n<div id=\"documentation\">\n<h3>Documentation</h3>\n<p>Documentation is available at <a href=\"http://django-environ.rtfd.io/\" rel=\"nofollow\">RTFD</a>.</p>\n</div>\n<div id=\"id1\">\n<span id=\"supported-types\"></span><h3>Supported types</h3>\n<ul>\n<li>str</li>\n<li>bool</li>\n<li>int</li>\n<li>float</li>\n<li>json</li>\n<li>list (FOO=a,b,c)</li>\n<li>tuple (FOO=(a,b,c))</li>\n<li>dict (BAR=key=val,foo=bar) #environ.Env(BAR=(dict, {}))</li>\n<li>dict (BAR=key=val;foo=1.1;baz=True) #environ.Env(BAR=(dict(value=unicode, cast=dict(foo=float,baz=bool)), {}))</li>\n<li>url</li>\n<li>path (environ.Path)</li>\n<li><dl>\n<dt>db_url</dt>\n<dd><ul>\n<li>PostgreSQL: postgres://, pgsql://, psql:// or postgresql://</li>\n<li>PostGIS: postgis://</li>\n<li>MySQL: mysql:// or mysql2://</li>\n<li>MySQL for GeoDjango: mysqlgis://</li>\n<li>Mysql Connector Python from Oracle: mysql-connector://</li>\n<li>SQLITE: sqlite://</li>\n<li>SQLITE with SPATIALITE for GeoDjango: spatialite://</li>\n<li>Oracle: oracle://</li>\n<li>MSSQL: mssql://</li>\n<li>PyODBC: pyodbc://</li>\n<li>Redshift: redshift://</li>\n<li>LDAP: <a>ldap://</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>cache_url</dt>\n<dd><ul>\n<li>Database: dbcache://</li>\n<li>Dummy: dummycache://</li>\n<li>File: filecache://</li>\n<li>Memory: locmemcache://</li>\n<li>Memcached: memcache://</li>\n<li>Python memory: pymemcache://</li>\n<li>Redis: rediscache://, redis://, or rediss://</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>search_url</dt>\n<dd><ul>\n<li>ElasticSearch: elasticsearch://</li>\n<li>Solr: solr://</li>\n<li>Whoosh: whoosh://</li>\n<li>Xapian: xapian://</li>\n<li>Simple cache: simple://</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>email_url</dt>\n<dd><ul>\n<li>SMTP: smtp://</li>\n<li>SMTP+SSL: smtp+ssl://</li>\n<li>SMTP+TLS: smtp+tls://</li>\n<li>Console mail: consolemail://</li>\n<li>File mail: filemail://</li>\n<li>LocMem mail: memorymail://</li>\n<li>Dummy mail: dummymail://</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"tips\">\n<h3>Tips</h3>\n<div id=\"using-unsafe-characters-in-urls\">\n<h4>Using unsafe characters in URLs</h4>\n<p>In order to use unsafe characters you have to encode with <tt>urllib.parse.encode</tt> before you set into <tt>.env</tt> file.</p>\n<pre><span class=\"nv\">DATABASE_URL</span><span class=\"o\">=</span>mysql://user:%23password@127.0.0.1:3306/dbname\n</pre>\n<p>See <a href=\"https://perishablepress.com/stop-using-unsafe-characters-in-urls/\" rel=\"nofollow\">https://perishablepress.com/stop-using-unsafe-characters-in-urls/</a> for reference.</p>\n</div>\n<div id=\"smart-casting\">\n<h4>Smart Casting</h4>\n<p>django-environ has a \u201cSmart-casting\u201d enabled by default, if you don\u2019t provide a <tt>cast</tt> type, it will be detected from <tt>default</tt> type.\nThis could raise side effects (see <a href=\"https://github.com/joke2k/django-environ/issues/192\" rel=\"nofollow\">#192</a>).\nTo disable it use <tt>env.smart_caset = False</tt>.\nNew major release will disable it as default.</p>\n</div>\n<div id=\"multiple-redis-cache-locations\">\n<h4>Multiple redis cache locations</h4>\n<p>For redis cache, <a href=\"http://niwinz.github.io/django-redis/latest/#_pluggable_clients\" rel=\"nofollow\">multiple master/slave or shard locations</a> can be configured as follows:</p>\n<pre><span class=\"nv\">CACHE_URL</span><span class=\"o\">=</span><span class=\"s1\">'rediscache://master:6379,slave1:6379,slave2:6379/1'</span>\n</pre>\n</div>\n<div id=\"email-settings\">\n<h4>Email settings</h4>\n<p>In order to set email configuration for django you can use this code:</p>\n<pre><span class=\"n\">EMAIL_CONFIG</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">email_url</span><span class=\"p\">(</span>\n    <span class=\"s1\">'EMAIL_URL'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"s1\">'smtp://user:password@localhost:25'</span><span class=\"p\">)</span>\n\n<span class=\"nb\">vars</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">EMAIL_CONFIG</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"sqlite-urls\">\n<h4>SQLite urls</h4>\n<p>SQLite connects to file based databases. The same URL format is used, omitting the hostname,\nand using the \u201cfile\u201d portion as the filename of the database.\nThis has the effect of four slashes being present for an absolute</p>\n<p>file path: <tt><span class=\"pre\">sqlite:////full/path/to/your/database/file.sqlite</span></tt>.</p>\n</div>\n</div>\n<div id=\"nested-lists\">\n<h3>Nested lists</h3>\n<p>Some settings such as Django\u2019s <tt>ADMINS</tt> make use of nested lists. You can use something like this to handle similar cases.</p>\n<pre><span class=\"c1\"># DJANGO_ADMINS=John:john@admin.com,Jane:jane@admin.com</span>\n<span class=\"n\">ADMINS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">':'</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">list</span><span class=\"p\">(</span><span class=\"s1\">'DJANGO_ADMINS'</span><span class=\"p\">)]</span>\n\n<span class=\"c1\"># or use more specific function</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">email.utils</span> <span class=\"kn\">import</span> <span class=\"n\">getaddresses</span>\n\n<span class=\"c1\"># DJANGO_ADMINS=Full Name &lt;email-with-name@example.com&gt;,anotheremailwithoutname@example.com</span>\n<span class=\"n\">ADMINS</span> <span class=\"o\">=</span> <span class=\"n\">getaddresses</span><span class=\"p\">([</span><span class=\"n\">env</span><span class=\"p\">(</span><span class=\"s1\">'DJANGO_ADMINS'</span><span class=\"p\">)])</span>\n</pre>\n</div>\n<div id=\"multiline-value\">\n<h3>Multiline value</h3>\n<p>You can set a multiline variable value:</p>\n<pre><span class=\"c1\"># MULTILINE_TEXT=Hello\\\\nWorld</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">str</span><span class=\"p\">(</span><span class=\"s1\">'MULTILINE_TEXT'</span><span class=\"p\">,</span> <span class=\"n\">multiline</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">Hello</span>\n<span class=\"n\">World</span>\n</pre>\n</div>\n<div id=\"proxy-value\">\n<h3>Proxy value</h3>\n<p>You can set a value prefixed by <tt>$</tt> to use as a proxy to another variable value:</p>\n<pre><span class=\"c1\"># BAR=FOO</span>\n<span class=\"c1\"># PROXY=$BAR</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">str</span><span class=\"p\">(</span><span class=\"s1\">'PROXY'</span><span class=\"p\">)</span>\n<span class=\"n\">FOO</span>\n</pre>\n</div>\n<div id=\"multiple-env-files\">\n<h3>Multiple env files</h3>\n<p>It is possible to have multiple env files and select one using environment variables.</p>\n<pre><span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">Env</span><span class=\"p\">()</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">read_env</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">str</span><span class=\"p\">(</span><span class=\"s1\">'ENV_PATH'</span><span class=\"p\">,</span> <span class=\"s1\">'.env'</span><span class=\"p\">))</span>\n</pre>\n<p>Now <tt><span class=\"pre\">ENV_PATH=other-env</span> ./manage.py runserver</tt> uses <tt><span class=\"pre\">other-env</span></tt> while <tt>./manage.py runserver</tt> uses <tt>.env</tt>.</p>\n</div>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<pre>$ git clone git@github.com:joke2k/django-environ.git\n$ cd django-environ/\n$ python setup.py test\n</pre>\n<div id=\"how-to-contribute\">\n<h3>How to Contribute</h3>\n<ol>\n<li>Check for open issues or open a fresh issue to start a discussion around a feature idea or a bug. There is a <a href=\"https://github.com/joke2k/django-environ/issues?direction=desc&amp;labels=contributor-friendly&amp;page=1&amp;sort=updated&amp;state=open\" rel=\"nofollow\">Contributor Friendly</a> tag for issues that should be ideal for people who are not very familiar with the codebase yet.</li>\n<li>Fork <a href=\"https://github.com/joke2k/django-environ\" rel=\"nofollow\">the repository</a> on GitHub to start making your changes to the <strong>develop</strong> branch (or branch off of it).</li>\n<li>Write a test which shows that the bug was fixed or that the feature works as expected.</li>\n<li>Send a pull request and bug the maintainer until it gets merged and published. :) Make sure to add yourself to <a href=\"https://github.com/joke2k/django-environ/blob/develop/AUTHORS.rst\" rel=\"nofollow\">Authors file</a>.</li>\n</ol>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>This project is licensed under the MIT License - see the <a href=\"https://github.com/joke2k/django-environ/blob/develop/LICENSE.txt\" rel=\"nofollow\">License file</a> file for details</p>\n</div>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<p>See the <a href=\"https://github.com/joke2k/django-environ/blob/develop/CHANGELOG.rst\" rel=\"nofollow\">Changelog file</a> which format is <em>inspired</em> by <a href=\"http://keepachangelog.com/en/1.0.0/\" rel=\"nofollow\">Keep a Changelog</a>.</p>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<ul>\n<li>See <a href=\"https://github.com/joke2k/django-environ/blob/develop/AUTHORS.rst\" rel=\"nofollow\">Authors file</a></li>\n<li><a href=\"http://www.12factor.net/\" rel=\"nofollow\">12factor</a></li>\n<li><a href=\"http://www.wellfireinteractive.com/blog/easier-12-factor-django/\" rel=\"nofollow\">12factor-django</a></li>\n<li><a href=\"http://twoscoopspress.org/\" rel=\"nofollow\">Two Scoops of Django</a></li>\n<li><a href=\"https://github.com/rconradharris\" rel=\"nofollow\">rconradharris</a> / <a href=\"https://github.com/rconradharris/envparse\" rel=\"nofollow\">envparse</a></li>\n<li><a href=\"https://github.com/migonzalvar\" rel=\"nofollow\">migonzalvar</a> / <a href=\"https://github.com/migonzalvar/dj-email-url\" rel=\"nofollow\">dj-email-url</a></li>\n<li><a href=\"https://github.com/ghickman\" rel=\"nofollow\">ghickman</a> / <a href=\"https://github.com/ghickman/django-cache-url\" rel=\"nofollow\">django-cache-url</a></li>\n<li><a href=\"https://github.com/dstufft\" rel=\"nofollow\">dstufft</a> / <a href=\"https://github.com/dstufft/dj-search-url\" rel=\"nofollow\">dj-search-url</a></li>\n<li><a href=\"https://github.com/julianwachholz\" rel=\"nofollow\">julianwachholz</a> / <a href=\"https://github.com/julianwachholz/dj-config-url\" rel=\"nofollow\">dj-config-url</a></li>\n<li><a href=\"https://github.com/nickstenning\" rel=\"nofollow\">nickstenning</a> / <a href=\"https://github.com/nickstenning/honcho\" rel=\"nofollow\">honcho</a></li>\n<li><a href=\"https://github.com/rconradharris\" rel=\"nofollow\">rconradharris</a> / <a href=\"https://github.com/rconradharris/envparse\" rel=\"nofollow\">envparse</a></li>\n<li><a href=\"http://pypi.python.org/pypi/distribute\" rel=\"nofollow\">Distribute</a></li>\n<li><a href=\"http://pypi.python.org/pypi/modern-package-template\" rel=\"nofollow\">modern-package-template</a></li>\n</ul>\n</div>\n<div id=\"contributors\">\n<h3>Contributors</h3>\n<p>Thank you to all the people who have already contributed.\n<a href=\"https://opencollective.com/django-environ\" rel=\"nofollow\"><img alt=\"Repo Contributors\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2952967d0e63d509d9c7258488359c61db91d153/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f646a616e676f2d656e7669726f6e2f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365\"></a></p>\n</div>\n<div id=\"backers\">\n<h3>Backers</h3>\n<p>Thank you to all our backers!\n<a href=\"https://opencollective.com/django-environ\" rel=\"nofollow\"><img alt=\"Backers on Open Collective\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc1586d5c76509201560eda402ab8886522506e1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f646a616e676f2d656e7669726f6e2f6261636b6572732e7376673f77696474683d383930\"></a></p>\n</div>\n<div id=\"sponsors\">\n<h3>Sponsors</h3>\n<p>Support this project by becoming a sponsor. Your logo will show up here with a link to your website. <a href=\"https://opencollective.com/django-environ#sponsor\" rel=\"nofollow\">Became sponsor</a>.</p>\n<p><a href=\"https://opencollective.com/django-environ/sponsor/0/website\" rel=\"nofollow\"><img alt=\"Sponsor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/276726d60692c751212832f2dd1548c0bc064d41/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f646a616e676f2d656e7669726f6e2f73706f6e736f722f302f6176617461722e737667\"></a> <a href=\"https://opencollective.com/django-environ/sponsor/1/website\" rel=\"nofollow\"><img alt=\"Sponsor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a0d090cd0a1eead8c00d04f7bed91838b072ecf/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f646a616e676f2d656e7669726f6e2f73706f6e736f722f312f6176617461722e737667\"></a> <a href=\"https://opencollective.com/django-environ/sponsor/2/website\" rel=\"nofollow\"><img alt=\"Sponsor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0286844341421fcd5b55f0c69f758a71e360154e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f646a616e676f2d656e7669726f6e2f73706f6e736f722f322f6176617461722e737667\"></a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7008060, "releases": {"0.4.51": [{"comment_text": "", "digests": {"md5": "91db8386ebb2fcf447b3ec32596e0ca0", "sha256": "70f4d74e09f2f11ef88ae08d47379a6eaa5ee0605d17fedab8fde1889e0179c8"}, "downloads": -1, "filename": "python-environ-0.4.51.tar.gz", "has_sig": false, "md5_digest": "91db8386ebb2fcf447b3ec32596e0ca0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22931, "upload_time": "2020-04-10T10:34:50", "upload_time_iso_8601": "2020-04-10T10:34:50.647241Z", "url": "https://files.pythonhosted.org/packages/84/4b/87152244ffb8b6d2983e640af300166ee31f1990f9a116ae585c905ac044/python-environ-0.4.51.tar.gz", "yanked": false}], "0.4.52": [{"comment_text": "", "digests": {"md5": "3fe8e61994dc9aae9bc2fcba493238d3", "sha256": "333a733fe3b40a2593bb1c927ed721fe4111521d5548c0204d4266bda193b6dd"}, "downloads": -1, "filename": "python-environ-0.4.52.tar.gz", "has_sig": false, "md5_digest": "3fe8e61994dc9aae9bc2fcba493238d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22934, "upload_time": "2020-04-13T02:33:17", "upload_time_iso_8601": "2020-04-13T02:33:17.864626Z", "url": "https://files.pythonhosted.org/packages/1f/57/3dd149c2cc817ab2416d1c3dceea60554fe97a14f2b10a6995e6d7f0b197/python-environ-0.4.52.tar.gz", "yanked": false}], "0.4.53": [{"comment_text": "", "digests": {"md5": "7d8a964c9e8bbd3e4c757f8a687a22c2", "sha256": "90fb77f4a2d75bfcd94c2262b70327866a35e891c4e9c3182d11ccde00e80583"}, "downloads": -1, "filename": "python-environ-0.4.53.tar.gz", "has_sig": false, "md5_digest": "7d8a964c9e8bbd3e4c757f8a687a22c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22943, "upload_time": "2020-04-13T04:06:59", "upload_time_iso_8601": "2020-04-13T04:06:59.776176Z", "url": "https://files.pythonhosted.org/packages/89/d1/58bade00951135bfa7368620620d548959c1adf25d92f419e9eb7392af06/python-environ-0.4.53.tar.gz", "yanked": false}], "0.4.54": [{"comment_text": "", "digests": {"md5": "3e5fa48e070f4373c09f2afc4bb14cb9", "sha256": "6249a14057f95aba3b4906d73276f770e01e659f8098b3f3b34295feac42865b"}, "downloads": -1, "filename": "python-environ-0.4.54.tar.gz", "has_sig": false, "md5_digest": "3e5fa48e070f4373c09f2afc4bb14cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22947, "upload_time": "2020-04-13T06:42:49", "upload_time_iso_8601": "2020-04-13T06:42:49.443504Z", "url": "https://files.pythonhosted.org/packages/0c/5d/8d4462fe29d3d3357eaac0f8321b7d0e77d0a4ea64505be1e6a90fba42dc/python-environ-0.4.54.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3e5fa48e070f4373c09f2afc4bb14cb9", "sha256": "6249a14057f95aba3b4906d73276f770e01e659f8098b3f3b34295feac42865b"}, "downloads": -1, "filename": "python-environ-0.4.54.tar.gz", "has_sig": false, "md5_digest": "3e5fa48e070f4373c09f2afc4bb14cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22947, "upload_time": "2020-04-13T06:42:49", "upload_time_iso_8601": "2020-04-13T06:42:49.443504Z", "url": "https://files.pythonhosted.org/packages/0c/5d/8d4462fe29d3d3357eaac0f8321b7d0e77d0a4ea64505be1e6a90fba42dc/python-environ-0.4.54.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:48 2020"}