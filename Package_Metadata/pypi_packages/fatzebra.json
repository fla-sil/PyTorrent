{"info": {"author": "Fat Zebra", "author_email": "support@fatzebra.com.au", "bugtrack_url": null, "classifiers": [], "description": "========================\nFat Zebra Python Library\n========================\n\nThis library provides *basic* functionality for the Fat Zebra Payment Gateway.\n\nCurrently the only features supported are:\n\n * Creating Purchases\n * Tokenizing Cards\n * Purchasing with a tokenized card\n * Creating Refunds\n\nFurther support for additional functionality will be added as time permits, however if you require this funcitonality and are not able to\nadd it yourself please contact support@fatzebra.com.au and request the changes.\n\n\nUsage\n=====\n\nPurchases\n---------\n\n    import fatzebra\n\n    gw = fatzebra.gateway.Gateway(\"your username\", \"your token\", True) # The final param indicates whether or not to use the sandbox\n    try:\n        result = gw.purchase(100, \"Jim Smith\", \"5123456789012346\", \"05/2014\", \"123\", \"122.99.99.111\")\n        if result.successful:\n            print \"Purchase approved - ID: \" + result.id\n        else:\n            print \"Purchase declined. Message:  \" + result.message\n    except fatzebra.errors.GatewayError, e:\n        print \"Gateway error: \" + str(e.errors) # <-- e.errors is an array.\n    except fatzebra.errors.AuthenticationError:\n        print \"Authentication error - please check your username and token\"\n\nTokenization\n------------\n\n    import fatzebra\n\n    gw = fatzebra.gateway.Gateway(\"your username\", \"your token\", True) # The final param indicates whether or not to use the sandbox\n    try:\n        card = gw.tokenize(\"Jim Smith\", \"5123456789012346\", \"05/2014\", \"123\")\n        print \"Card Tokenized - token: \" + card.token\n    except fatzebra.errors.GatewayError, e:\n        print \"Gateway error: \" + str(e.errors) # <-- e.errors is an array.\n    except fatzebra.errors.AuthenticationError:\n        print \"Authentication error - please check your username and token\"\n\n\nPurchase with Token\n-------------------\n\n    import fatzebra\n\n    gw = fatzebra.gateway.Gateway(\"your username\", \"your token\", True) # The final param indicates whether or not to use the sandbox\n    try:\n     token = \"abc12345\"\n     result = gw.purchase(100, token, \"122.99.99.111\")\n     if result.successful:\n         print \"Purchase approved - ID: \" + result.id\n     else:\n         print \"Purchase declined. Message:  \" + result.message\n    except fatzebra.errors.GatewayError, e:\n     print \"Gateway error: \" + str(e.errors) # <-- e.errors is an array.\n    except fatzebra.errors.AuthenticationError:\n     print \"Authentication error - please check your username and token\"\n\n\nRefund\n------\n\n    import fatzebra\n\n    gw = fatzebra.gateway.Gateway(\"your username\", \"your token\", True) # The final param indicates whether or not to use the sandbox\n    try:\n        original_transaction = \"013-P-ABJU879H\"\n        result = gw.refund(original_transaction, 100, \"my refund reference\")\n        if result.successful:\n            print \"Refund approved - ID: \" + result.id\n        else:\n            print \"Refund declined. Message:  \" + result.message\n    except fatzebra.errors.GatewayError, e:\n        print \"Gateway error: \" + str(e.errors) # <-- e.errors is an array.\n    except fatzebra.errors.AuthenticationError:\n        print \"Authentication error - please check your username and token\"\n\n\nNotes\n=====\n\nThe gateway class utilizes 3 error classes:\n\n * `fatzebra.errors.GatewayError` - this represents an unsuccessful response from the gateway (invalid card number, expiry etc). Check the `errors` attribute for messages (array)\n * `fatzebra.errors.GatewayUnknownError` - this represents an unknown error. Check the `code` and `response` attributes for details\n * `fatzebra.errors.AuthenticationError` - this indicates your username and token are incorrect. Confirm that you have the right details and you are using the right gateway. Sandbox credentials will begin with **TEST**\n\nCredits\n=======\n\nThis library was developed by Matthew Savage (Fat Zebra) with the assistance of Simon Meers (Digital Eskimo). It there are any questions or problems with this library\nplease contact Fat Zebra (support@fatzebra.com.au) or open an `issue <https://github.com/fatzebra/fatzebra-python/issues>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.fatzebra.com.au/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "fatzebra", "package_url": "https://pypi.org/project/fatzebra/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fatzebra/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://www.fatzebra.com.au/"}, "release_url": "https://pypi.org/project/fatzebra/0.0.7/", "requires_dist": null, "requires_python": null, "summary": "Fat Zebra Python Library", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            ========================<br>Fat Zebra Python Library<br>========================<br><br>This library provides *basic* functionality for the Fat Zebra Payment Gateway.<br><br>Currently the only features supported are:<br><br> * Creating Purchases<br> * Tokenizing Cards<br> * Purchasing with a tokenized card<br> * Creating Refunds<br><br>Further support for additional functionality will be added as time permits, however if you require this funcitonality and are not able to<br>add it yourself please contact support@fatzebra.com.au and request the changes.<br><br><br>Usage<br>=====<br><br>Purchases<br>---------<br><br>    import fatzebra<br><br>    gw = fatzebra.gateway.Gateway(\"your username\", \"your token\", True) # The final param indicates whether or not to use the sandbox<br>    try:<br>        result = gw.purchase(100, \"Jim Smith\", \"5123456789012346\", \"05/2014\", \"123\", \"122.99.99.111\")<br>        if result.successful:<br>            print \"Purchase approved - ID: \" + result.id<br>        else:<br>            print \"Purchase declined. Message:  \" + result.message<br>    except fatzebra.errors.GatewayError, e:<br>        print \"Gateway error: \" + str(e.errors) # &lt;-- e.errors is an array.<br>    except fatzebra.errors.AuthenticationError:<br>        print \"Authentication error - please check your username and token\"<br><br>Tokenization<br>------------<br><br>    import fatzebra<br><br>    gw = fatzebra.gateway.Gateway(\"your username\", \"your token\", True) # The final param indicates whether or not to use the sandbox<br>    try:<br>        card = gw.tokenize(\"Jim Smith\", \"5123456789012346\", \"05/2014\", \"123\")<br>        print \"Card Tokenized - token: \" + card.token<br>    except fatzebra.errors.GatewayError, e:<br>        print \"Gateway error: \" + str(e.errors) # &lt;-- e.errors is an array.<br>    except fatzebra.errors.AuthenticationError:<br>        print \"Authentication error - please check your username and token\"<br><br><br>Purchase with Token<br>-------------------<br><br>    import fatzebra<br><br>    gw = fatzebra.gateway.Gateway(\"your username\", \"your token\", True) # The final param indicates whether or not to use the sandbox<br>    try:<br>     token = \"abc12345\"<br>     result = gw.purchase(100, token, \"122.99.99.111\")<br>     if result.successful:<br>         print \"Purchase approved - ID: \" + result.id<br>     else:<br>         print \"Purchase declined. Message:  \" + result.message<br>    except fatzebra.errors.GatewayError, e:<br>     print \"Gateway error: \" + str(e.errors) # &lt;-- e.errors is an array.<br>    except fatzebra.errors.AuthenticationError:<br>     print \"Authentication error - please check your username and token\"<br><br><br>Refund<br>------<br><br>    import fatzebra<br><br>    gw = fatzebra.gateway.Gateway(\"your username\", \"your token\", True) # The final param indicates whether or not to use the sandbox<br>    try:<br>        original_transaction = \"013-P-ABJU879H\"<br>        result = gw.refund(original_transaction, 100, \"my refund reference\")<br>        if result.successful:<br>            print \"Refund approved - ID: \" + result.id<br>        else:<br>            print \"Refund declined. Message:  \" + result.message<br>    except fatzebra.errors.GatewayError, e:<br>        print \"Gateway error: \" + str(e.errors) # &lt;-- e.errors is an array.<br>    except fatzebra.errors.AuthenticationError:<br>        print \"Authentication error - please check your username and token\"<br><br><br>Notes<br>=====<br><br>The gateway class utilizes 3 error classes:<br><br> * `fatzebra.errors.GatewayError` - this represents an unsuccessful response from the gateway (invalid card number, expiry etc). Check the `errors` attribute for messages (array)<br> * `fatzebra.errors.GatewayUnknownError` - this represents an unknown error. Check the `code` and `response` attributes for details<br> * `fatzebra.errors.AuthenticationError` - this indicates your username and token are incorrect. Confirm that you have the right details and you are using the right gateway. Sandbox credentials will begin with **TEST**<br><br>Credits<br>=======<br><br>This library was developed by Matthew Savage (Fat Zebra) with the assistance of Simon Meers (Digital Eskimo). It there are any questions or problems with this library<br>please contact Fat Zebra (support@fatzebra.com.au) or open an `issue &lt;https://github.com/fatzebra/fatzebra-python/issues&gt;`_.\n          </div>"}, "last_serial": 2365493, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "4ee635f58fdc8e0498406e56832e601c", "sha256": "75c686a94eeb6f432ad04338a1e767d7abb8619bffbe1885a1b9fc9a771e3f11"}, "downloads": -1, "filename": "fatzebra-0.0.4.tar.gz", "has_sig": false, "md5_digest": "4ee635f58fdc8e0498406e56832e601c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5810, "upload_time": "2012-11-27T12:08:37", "upload_time_iso_8601": "2012-11-27T12:08:37.481378Z", "url": "https://files.pythonhosted.org/packages/0d/d9/7505152992e51eec974309dab05601f485b672f181be8824f625191c1c91/fatzebra-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "built for Darwin-14.3.0", "digests": {"md5": "bb9d09877c40d77763c2d7c9e55a52b4", "sha256": "f885adde9d8a393b56bd3f87a4bca74b8bf8bdc469654a623e5d8525d09adad2"}, "downloads": -1, "filename": "fatzebra-0.0.5.macosx-10.10-x86_64.tar.gz", "has_sig": false, "md5_digest": "bb9d09877c40d77763c2d7c9e55a52b4", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 6321, "upload_time": "2015-06-23T02:18:16", "upload_time_iso_8601": "2015-06-23T02:18:16.212040Z", "url": "https://files.pythonhosted.org/packages/21/bb/a3c5395eb868f5094650db5aa3c4ec42715e74ae589255450202c3ca0d79/fatzebra-0.0.5.macosx-10.10-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a989f9ac46db778f273bc3ed6383fcf", "sha256": "6da57da0ce7504e756bf86b2311993288ae15fe3fa37db989491a89473907f3d"}, "downloads": -1, "filename": "fatzebra-0.0.5.tar.gz", "has_sig": false, "md5_digest": "1a989f9ac46db778f273bc3ed6383fcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5815, "upload_time": "2015-06-23T02:18:11", "upload_time_iso_8601": "2015-06-23T02:18:11.942087Z", "url": "https://files.pythonhosted.org/packages/05/b0/40f561367f5b528aadea7f5c7e5360aeab5b9649cbb3d57a0f4986ef5f84/fatzebra-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "3cb2ca83c1b92b7fcd205b4a000d1136", "sha256": "8c31857f3fc727142e1a2cb3fc83cd556f96b1e2a06d2345bfdc3a4bf2e99093"}, "downloads": -1, "filename": "fatzebra-0.0.6.tar.gz", "has_sig": false, "md5_digest": "3cb2ca83c1b92b7fcd205b4a000d1136", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5915, "upload_time": "2016-08-07T22:14:36", "upload_time_iso_8601": "2016-08-07T22:14:36.802615Z", "url": "https://files.pythonhosted.org/packages/ab/d9/6a6ba370bc9a0653c9ffc0589fba17c58bd1deb101499373e3d89fd237a1/fatzebra-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "1a5897f37c5944dca62c2849b0c00c3f", "sha256": "a7eb6bd14883141020be8c8e102807f578d13555576fb6aef185e16dc301571d"}, "downloads": -1, "filename": "fatzebra-0.0.7.tar.gz", "has_sig": false, "md5_digest": "1a5897f37c5944dca62c2849b0c00c3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6052, "upload_time": "2016-09-27T04:10:18", "upload_time_iso_8601": "2016-09-27T04:10:18.381771Z", "url": "https://files.pythonhosted.org/packages/d2/ee/782157424f1acac449a84f44acd317215b947475372e7570a83166b453ab/fatzebra-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a5897f37c5944dca62c2849b0c00c3f", "sha256": "a7eb6bd14883141020be8c8e102807f578d13555576fb6aef185e16dc301571d"}, "downloads": -1, "filename": "fatzebra-0.0.7.tar.gz", "has_sig": false, "md5_digest": "1a5897f37c5944dca62c2849b0c00c3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6052, "upload_time": "2016-09-27T04:10:18", "upload_time_iso_8601": "2016-09-27T04:10:18.381771Z", "url": "https://files.pythonhosted.org/packages/d2/ee/782157424f1acac449a84f44acd317215b947475372e7570a83166b453ab/fatzebra-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:20 2020"}