{"info": {"author": "Ron Frederick", "author_email": "<ronf@timeheart.net>", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python :: 3.4", "Topic :: Internet", "Topic :: Security :: Cryptography", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking"], "description": "AsyncSSH Overview\n=================\n\nAsyncSSH is a Python package which provides an asynchronous client and\nserver implementation of the SSHv2 protocol on top of the Python asyncio\nframework. It requires Python 3.4 or later and either the PyCA library or\nthe PyCrypto library for some cryptographic functions.\n\nThis package is released under the following terms:\n\n    Copyright (c) 2013-2014 by Ron Frederick <ronf@timeheart.net>.\n    All rights reserved.\n\n    This program and the accompanying materials are made available under\n    the terms of the Eclipse Public License v1.0 which accompanies this\n    distribution and is available at:\n\n        http://www.eclipse.org/legal/epl-v10.html\n\n    Contributors:\n        Ron Frederick - initial implementation, API, and documentation\n\nNotable features include:\n\n* Written from the ground up to be based on Python 3\n* Support for a number of key exchange methods\n    - Diffie Hellman group1 and group14 with SHA1\n    - Diffie Hellman group exchange with SHA1 and SHA256\n    - Elliptic Curve Diffie Hellman (nistp256, nistp384, and nistp521)\n    - Curve25519 (if curve25519-donna Python wrapper is installed)\n* Support for multiple authentication methods\n    - Password, public key, and keyboard-interactive\n* Support for a variety of public key formats\n    - DSA, RSA, and ECDSA keys\n    - PKCS#1/PKCS#8 DER and PEM, OpenSSH, and RFC4716 formats\n    - Password-based encryption of private keys\n* Support for a variety of ciphers (provided via PyCA or PyCrypto)\n    - AES, ARC4, Blowfish, CAST, and Triple DES\n* Support for a variety of MAC algorithms\n    - HMAC with MD5, SHA1, SHA256, and SHA512\n* Support for gzip compression\n    - Including OpenSSH variant to delay compression until after auth\n* Support for passing environment variables, terminal type, and window size\n* Support for multiple simultaneous sessions on a single SSH connection\n* Support for handling multiple SSH connections in a single event loop\n* Support for direct and forwarded TCP/IP channels\n* Support for both byte and string based I/O with settable encoding\n* Compatibility with OpenSSH \"Encrypt then MAC\" option for better security\n* Time and byte-count based session key renegotiation\n* Designed to be easy to extend to support new forms of key exchange,\n  authentication methods, ciphers, and compression algorithms\n\nPrerequisites\n=============\n\nTo use ``asyncssh``, you need the following:\n\n* Python 3.4 or later\n* PyCrypto 2.6 or later and/or PyCA 0.6.1 or later\n\nInstallation\n============\n\n#. Install Python 3.4 or later from http://www.python.org or your\n   favorite packaging system.\n\n#. Optionally install PyCrypto 2.6 or later from http://www.pycrypto.org\n   or your favorite packaging system.\n\n#. Optionally install PyCA 0.6.1 or later from https://cryptography.io\n   or your favorite packaging system.\n\n#. Optionally install curve25519-donna from\n   http://github.com/agl/curve25519-donna if you want support for\n   Curve25519 Diffie Hellman key exchange.\n\n#. Install AsyncSSH by running::\n\n   % pip install asyncssh\n    \n#. Check out the `examples`__ to get started!\n     __ http://asyncssh.timeheart.net/#clientexamples\n\nMailing Lists\n=============\n\nThree mailing lists are available for AsyncSSH:\n\n* `asyncssh-announce@googlegroups.com`__: Project announcements\n* `asyncssh-dev@googlegroups.com`__: Development discussions\n* `asyncssh-users@googlegroups.com`__: End-user discussions\n    __ http://groups.google.com/d/forum/asyncssh-announce\n    __ http://groups.google.com/d/forum/asyncssh-dev\n    __ http://groups.google.com/d/forum/asyncssh-users", "description_content_type": null, "docs_url": null, "download_url": "http://asyncssh.timeheart.net/asyncssh-0.9.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://asyncssh.timeheart.net/", "keywords": null, "license": "Eclipse Public License v1.0", "maintainer": null, "maintainer_email": null, "name": "asyncssh-unofficial", "package_url": "https://pypi.org/project/asyncssh-unofficial/", "platform": "Any", "project_url": "https://pypi.org/project/asyncssh-unofficial/", "project_urls": {"Download": "http://asyncssh.timeheart.net/asyncssh-0.9.2.tar.gz", "Homepage": "http://asyncssh.timeheart.net/"}, "release_url": "https://pypi.org/project/asyncssh-unofficial/0.9.2/", "requires_dist": null, "requires_python": null, "summary": "AsyncSSH: Asynchronous SSHv2 client and server library", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"asyncssh-overview\">\n<h2>AsyncSSH Overview</h2>\n<p>AsyncSSH is a Python package which provides an asynchronous client and\nserver implementation of the SSHv2 protocol on top of the Python asyncio\nframework. It requires Python 3.4 or later and either the PyCA library or\nthe PyCrypto library for some cryptographic functions.</p>\n<p>This package is released under the following terms:</p>\n<blockquote>\n<p>Copyright (c) 2013-2014 by Ron Frederick &lt;<a href=\"mailto:ronf%40timeheart.net\">ronf<span>@</span>timeheart<span>.</span>net</a>&gt;.\nAll rights reserved.</p>\n<p>This program and the accompanying materials are made available under\nthe terms of the Eclipse Public License v1.0 which accompanies this\ndistribution and is available at:</p>\n<blockquote>\n<a href=\"http://www.eclipse.org/legal/epl-v10.html\" rel=\"nofollow\">http://www.eclipse.org/legal/epl-v10.html</a></blockquote>\n<dl>\n<dt>Contributors:</dt>\n<dd>Ron Frederick - initial implementation, API, and documentation</dd>\n</dl>\n</blockquote>\n<p>Notable features include:</p>\n<ul>\n<li>Written from the ground up to be based on Python 3</li>\n<li><dl>\n<dt>Support for a number of key exchange methods</dt>\n<dd><ul>\n<li>Diffie Hellman group1 and group14 with SHA1</li>\n<li>Diffie Hellman group exchange with SHA1 and SHA256</li>\n<li>Elliptic Curve Diffie Hellman (nistp256, nistp384, and nistp521)</li>\n<li>Curve25519 (if curve25519-donna Python wrapper is installed)</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Support for multiple authentication methods</dt>\n<dd><ul>\n<li>Password, public key, and keyboard-interactive</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Support for a variety of public key formats</dt>\n<dd><ul>\n<li>DSA, RSA, and ECDSA keys</li>\n<li>PKCS#1/PKCS#8 DER and PEM, OpenSSH, and RFC4716 formats</li>\n<li>Password-based encryption of private keys</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Support for a variety of ciphers (provided via PyCA or PyCrypto)</dt>\n<dd><ul>\n<li>AES, ARC4, Blowfish, CAST, and Triple DES</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Support for a variety of MAC algorithms</dt>\n<dd><ul>\n<li>HMAC with MD5, SHA1, SHA256, and SHA512</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Support for gzip compression</dt>\n<dd><ul>\n<li>Including OpenSSH variant to delay compression until after auth</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Support for passing environment variables, terminal type, and window size</li>\n<li>Support for multiple simultaneous sessions on a single SSH connection</li>\n<li>Support for handling multiple SSH connections in a single event loop</li>\n<li>Support for direct and forwarded TCP/IP channels</li>\n<li>Support for both byte and string based I/O with settable encoding</li>\n<li>Compatibility with OpenSSH \u201cEncrypt then MAC\u201d option for better security</li>\n<li>Time and byte-count based session key renegotiation</li>\n<li>Designed to be easy to extend to support new forms of key exchange,\nauthentication methods, ciphers, and compression algorithms</li>\n</ul>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>To use <tt>asyncssh</tt>, you need the following:</p>\n<ul>\n<li>Python 3.4 or later</li>\n<li>PyCrypto 2.6 or later and/or PyCA 0.6.1 or later</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Install Python 3.4 or later from <a href=\"http://www.python.org\" rel=\"nofollow\">http://www.python.org</a> or your\nfavorite packaging system.</p>\n</li>\n<li><p>Optionally install PyCrypto 2.6 or later from <a href=\"http://www.pycrypto.org\" rel=\"nofollow\">http://www.pycrypto.org</a>\nor your favorite packaging system.</p>\n</li>\n<li><p>Optionally install PyCA 0.6.1 or later from <a href=\"https://cryptography.io\" rel=\"nofollow\">https://cryptography.io</a>\nor your favorite packaging system.</p>\n</li>\n<li><p>Optionally install curve25519-donna from\n<a href=\"http://github.com/agl/curve25519-donna\" rel=\"nofollow\">http://github.com/agl/curve25519-donna</a> if you want support for\nCurve25519 Diffie Hellman key exchange.</p>\n</li>\n<li><p>Install AsyncSSH by running:</p>\n<pre>% pip install asyncssh\n</pre>\n</li>\n<li><dl>\n<dt>Check out the <a href=\"http://asyncssh.timeheart.net/#clientexamples\" rel=\"nofollow\">examples</a> to get started!</dt>\n<dd></dd>\n</dl>\n</li>\n</ol>\n</div>\n<div id=\"mailing-lists\">\n<h2>Mailing Lists</h2>\n<p>Three mailing lists are available for AsyncSSH:</p>\n<ul>\n<li><a href=\"http://groups.google.com/d/forum/asyncssh-announce\" rel=\"nofollow\">asyncssh-announce@googlegroups.com</a>: Project announcements</li>\n<li><a href=\"http://groups.google.com/d/forum/asyncssh-dev\" rel=\"nofollow\">asyncssh-dev@googlegroups.com</a>: Development discussions</li>\n<li><dl>\n<dt><a href=\"http://groups.google.com/d/forum/asyncssh-users\" rel=\"nofollow\">asyncssh-users@googlegroups.com</a>: End-user discussions</dt>\n<dd></dd>\n</dl>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1330432, "releases": {"0.9.2": [{"comment_text": "", "digests": {"md5": "8426ec48b3807112dbf10fe2f6cd211b", "sha256": "541878744aeb7b66096530f46ad8952397750f2011ece9a9a55c6f5543a22a3c"}, "downloads": -1, "filename": "asyncssh-unofficial-0.9.2.tar.gz", "has_sig": false, "md5_digest": "8426ec48b3807112dbf10fe2f6cd211b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80232, "upload_time": "2014-12-03T23:26:54", "upload_time_iso_8601": "2014-12-03T23:26:54.276250Z", "url": "https://files.pythonhosted.org/packages/de/61/fa089f9ac5f1080f7a2ed5a1a5e8f828d8d44502244a1836cf43b9cbcb66/asyncssh-unofficial-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8426ec48b3807112dbf10fe2f6cd211b", "sha256": "541878744aeb7b66096530f46ad8952397750f2011ece9a9a55c6f5543a22a3c"}, "downloads": -1, "filename": "asyncssh-unofficial-0.9.2.tar.gz", "has_sig": false, "md5_digest": "8426ec48b3807112dbf10fe2f6cd211b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80232, "upload_time": "2014-12-03T23:26:54", "upload_time_iso_8601": "2014-12-03T23:26:54.276250Z", "url": "https://files.pythonhosted.org/packages/de/61/fa089f9ac5f1080f7a2ed5a1a5e8f828d8d44502244a1836cf43b9cbcb66/asyncssh-unofficial-0.9.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:40 2020"}