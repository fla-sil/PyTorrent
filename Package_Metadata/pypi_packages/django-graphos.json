{"info": {"author": "Agiliq", "author_email": "hello@agiliq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Graphos\n=======\n\n|Build Status|\n\nGraphos is a Django app to normalize data to create beautiful charts. It\nprovides a JS agnostic way to work with charts and allows seamless and\nquick switching between different chart providers.\n\n-  Demo: http://agiliq.com/demo/graphos/.\n-  Docs: http://agiliq.com/docs/django-graphos/.\n\nSupported Backends:\n-------------------\n\n-  Python Nested lists\n-  Django ORM\n-  CSV Files\n-  MongoDB\n\nCharting API Supported\n----------------------\n\n-  `Flot <http://flotcharts.org>`__\n-  `Google Charts API <https://developers.google.com/chart/>`__\n-  `YUI Charts <http://yuilibrary.com/yui/docs/charts/>`__\n-  `Morris.js <http://morrisjs.github.io/morris.js/>`__\n-  `Highcharts <http://www.highcharts.com/>`__\n-  `Matplotlib <http://matplotlib.org/api/pyplot_api.html>`__\n\nChart types supported\n---------------------\n\nFlot\n~~~~\n\n-  Line chart\n-  Bar Chart\n-  Column chart\n-  Pie chart\n-  Point Chart\n\nGoogle Charts\n~~~~~~~~~~~~~\n\n-  Line chart\n-  Bar chart\n-  Column chart\n-  Pie chart\n-  Area chart\n-  Candlestick chart\n-  Treemap chart\n-  Gauge chart\n\nYUI\n~~~\n\n-  Line chart\n-  Bar chart\n-  Column chart\n-  Pie chart\n-  Area chart\n-  Spline chart\n-  Areaspline chart\n\nMorris.js\n~~~~~~~~~\n\n-  Line chart\n-  Bar chart\n-  Donut chart\n-  Area chart\n\nHighcharts\n~~~~~~~~~~\n\n(You will need to buy a license if you use highcharts for commerical\nuse)\n\n-  Line Chart\n-  Bar Chart\n-  Column Chart\n-  Pie Chart\n-  Area Chart\n\nC3.js\n~~~~~\n\n-  Line chart\n-  Column chart (You need to rotate the axis of bar chart to render\n   column chart)\n-  Bar chart\n-  Donut chart\n-  Pie chart\n-  Spline chart\n\nMatplotlib\n~~~~~~~~~~\n\n-  LineChart\n-  BarChart\n\nWith Graphos, switching from google's LineChart to yui LineChart can be\ndone within minutes. So would be the case in switching from yui\nAreaChart to morris AreaChart.\n\nRunning demo project locally\n----------------------------\n\n-  Clone the project\n\n   git clone https://github.com/agiliq/django-graphos.git\n\n-  Cd to demo directory\n\n   cd django-graphos/demo\\_project/\n\n-  Create local settings.\n\n   cp demo\\_project/settings/local.py-dist\n   demo\\_project/settings/local.py\n\n-  Install requirements\n\n   pip install -r requirements.txt\n\n-  Run migrate\n\n   python manage.py migrate\n\n-  Run server\n\n   python manage.py runserver\n\nThe installed demo app shows the various suported chart types.\n\nIn case you want to use mongo data while charting, you must have mongodb\nproperly setup and **pymongo** installed. Make sure mongo server is\nrunning.\n\n::\n\n    mongod --dbpath ~/data/db\n\nMongo setup is optional and is not needed to get running with demo\nproject.\n\nOverview of Plot generation\n---------------------------\n\nGenerating a plot requires two things. A DataSource object and a Chart\nobject.\n\nIn your view, you do something like this:\n\n::\n\n    from graphos.sources.simple import SimpleDataSource\n    from graphos.renderers.gchart import LineChart\n\n    data =  [\n            ['Year', 'Sales', 'Expenses'],\n            [2004, 1000, 400],\n            [2005, 1170, 460],\n            [2006, 660, 1120],\n            [2007, 1030, 540]\n        ]\n    # DataSource object\n    data_source = SimpleDataSource(data=data)\n    # Chart object\n    chart = LineChart(data_source)\n    context = {'chart': chart}\n    return render(request, 'yourtemplate.html', context)\n\nAnd then in the template:\n\n::\n\n    {{ chart.as_html }}\n\nIn this example we are planning to use Google chart, as is evident from\nthe import statement in the view, we import gchart.LineChart. So we must\nalso include the google chart javascript in our template.\n\n::\n\n    <script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\n    <script type=\"text/javascript\">\n        google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n    </script>\n\nSo the template would look like\n\n::\n\n    <script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\n    <script type=\"text/javascript\">\n        google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n    </script>\n\n    {{ chart.as_html }}\n\nIf we want to use yui LineChart instead of google LineChart, our view\nwould have:\n\n::\n\n    from graphos.renderers.yui import LineChart\n    chart = LineChart(data_source)\n\nAnd our template would inclue yui javascript and it would look like:\n\n::\n\n    <script src=\"http://yui.yahooapis.com/3.10.0/build/yui/yui-min.js\"></script>\n    {{ chart.as_html }}\n\nSee, how easy it was to switch from gchart to yui. You did not have to\nwrite or change a single line of javascript to switch from gchart to\nyui. All that was taken care of by as\\_html() of the chart object.\n\nDataSources\n-----------\n\nSimpleDataSource\n~~~~~~~~~~~~~~~~\n\nThis should be used if you want to generate a chart from Python list.\n\n::\n\n    from graphos.sources.simple import SimpleDataSource\n    data = SimpleDataSource(data=data)\n\nData could be:\n\n::\n\n    data = [\n           ['Year', 'Sales', 'Expenses', 'Items Sold', 'Net Profit'],\n           ['2004', 1000, 400, 100, 600],\n           ['2005', 1170, 460, 120, 710],\n           ['2006', 660, 1120, 50, -460],\n           ['2007', 1030, 540, 100, 490],\n           ]\n\nor it could be\n\n::\n\n    data = [\n           ['Year', 'Sales', 'Expenses'],\n           ['2004', 1000, 400],\n           ['2005', 1170, 460],\n           ['2006', 660, 1120],\n           ['2007', 1030, 540],\n           ]\n\nor it could be\n\n::\n\n    data = [\n           ['Year', 'Sales', 'Expenses'],\n           ['2004', 1000, 400],\n           ['2005', 1170, 460],\n           ]\n\nYou got the idea.\n\ndata has to be a list of lists. First row of data tells the headers.\nFirst element of each list elementis the x axis.\n\nThis data essentially tells that in year 2004, sales was 1000 units and\nexpense was 400 units. And in year 2005, sales was 1170 units and\nexpense was 460 units.\n\nModelDataSource\n~~~~~~~~~~~~~~~\n\nThis should be used if you want to generate a chart from a Django\nqueryset.\n\n::\n\n    from graphos.sources.model import ModelDataSource\n    queryset = Account.objects.all()\n    data_source = ModelDataSource(queryset,\n                                  fields=['year', 'sales'])\n\nThis assumes that there is a Django model called Account which has\nfields ``year`` and ``sales``. And you plan to plot year on x axis and\nsales on y axis.\n\nOr you could say\n\n::\n\n    data_source = ModelDataSource(queryset,\n                                  fields=['year', 'sales', 'expenses'])\n\nThis would plot the yearly sale and yearly expense\n\nCSVDataSource\n~~~~~~~~~~~~~\n\nThis should be used if you want to generate a chart from a CSV file.\n\n::\n\n    from graphos.sources.csv_file import CSVDataSource\n    csv_file = open(\"hello.csv\")\n    data_source = CSVDataSource(csv_file)\n\nMongoDataSource\n~~~~~~~~~~~~~~~\n\nTODO\n\nCharts\n------\n\nWe have following charts\n\n-  Gchart\n\n   -  gchart.LineChart\n   -  gchart.BarChart\n   -  gchart.ColumnChart\n   -  gchart.PieChart\n   -  gchart.AreaChart\n   -  gchart.TreeMapChart\n   -  gchart.CandlestickChart\n   -  gchart.GaugeChart\n\n-  Yui\n\n   -  yui.LineChart\n   -  yui.BarChart\n   -  yui.ColumnChart\n   -  yui.PieChart\n   -  yui.AreaChart\n   -  yui.SplineChart\n   -  yui.AreaSplineChart\n\n-  Flot\n\n   -  flot.LineChart\n   -  flot.BarChart\n   -  flot.ColumnChart\n   -  flot.PieChart\n   -  flot.PointChart\n\n-  Morris\n\n   -  morris.LineChart\n   -  morris.BarChart\n   -  morris.AreaChart\n   -  morris.DonutChart\n\n-  Highcharts\n\n   -  highcharts.LineChart\n   -  highcharts.BarChart\n   -  highcharts.ColumnChart\n   -  highcharts.PieChart\n   -  highcharts.AreaChart\n\nMost of the chart providers support LineChart, BarChart, ColumnChart and\nPieChart, and it is very easy to switch from specific chart type of one\nprovider to other. eg: It is super quick to switch from gchart LineChart\nto flot LineChart.\n\nMore Examples\n-------------\n\nUsing SimpleDataSource with gchart LineChart\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nView\n^^^^\n\n::\n\n    data =  [\n            ['Year', 'Sales', 'Expenses'],\n            [2004, 1000, 400],\n            [2005, 1170, 460],\n            [2006, 660, 1120],\n            [2007, 1030, 540]\n        ]\n    from graphos.sources.simple import SimpleDataSource\n    from graphos.renderers.gchart import LineChart\n    chart = LineChart(SimpleDataSource(data=data))\n\nTemplate\n^^^^^^^^\n\n::\n\n    <script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\n    <script type=\"text/javascript\">\n        google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n    </script>\n\n    {{ chart.as_html }}\n\nUsing SimpleDataSource with yui LineChart\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nView\n^^^^\n\n::\n\n    data =  [\n            ['Year', 'Sales', 'Expenses'],\n            [2004, 1000, 400],\n            [2005, 1170, 460],\n            [2006, 660, 1120],\n            [2007, 1030, 540]\n        ]\n    from graphos.sources.simple import SimpleDataSource\n    from graphos.renderers.yui import LineChart\n    chart = LineChart(SimpleDataSource(data=data))\n\nTemplate\n^^^^^^^^\n\n::\n\n    <script src=\"http://yui.yahooapis.com/3.10.0/build/yui/yui-min.js\"></script>\n    {{ chart.as_html }}\n\nUsing SimpleDataSource with yui BarChart\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nView\n^^^^\n\n::\n\n    data =  [\n            ['Year', 'Sales', 'Expenses'],\n            [2004, 1000, 400],\n            [2005, 1170, 460],\n            [2006, 660, 1120],\n            [2007, 1030, 540]\n        ]\n    from graphos.sources.simple import SimpleDataSource\n    from graphos.renderers.yui import BarChart\n    chart = BarChart(SimpleDataSource(data=data))\n\nTemplate\n^^^^^^^^\n\n::\n\n    <script src=\"http://yui.yahooapis.com/3.10.0/build/yui/yui-min.js\"></script>\n    {{ chart.as_html }}\n\nUsing SimpleDataSource with gchart BarChart\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nView\n^^^^\n\n::\n\n    data =  [\n            ['Year', 'Sales', 'Expenses'],\n            [2004, 1000, 400],\n            [2005, 1170, 460],\n            [2006, 660, 1120],\n            [2007, 1030, 540]\n        ]\n    from graphos.sources.simple import SimpleDataSource\n    from graphos.renderers.gchart import BarChart\n    chart = BarChart(SimpleDataSource(data=data))\n\nTemplate\n^^^^^^^^\n\n::\n\n    <script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"></script>\n    <script type=\"text/javascript\">\n        google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n    </script>\n    {{ chart.as_html }}\n\nOptions\n-------\n\nYour rendered chart is contained in a div.\n\nSetting id of chart containing div\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou might want to do additional jquery or javascript operations with\nyour chart containing div. In such case you might want to set an id on\nthe div. You can do this while instantiating the chart element.\n\n::\n\n    chart = gchart.LineChart(html_id='gchart_div')\n\nSetting width and height of chart containing div\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can control the width and height of chart containing div while\ninstantiating the chart element.\n\n::\n\n    chart = gchart.LineChart(simple_data_source, height=100, width=100)\n\nChart specific options\n~~~~~~~~~~~~~~~~~~~~~~\n\nDifferent chart providers give different options to customise the chart.\n\nGoogle chart api allows setting title for the rendered chart, see\n`Gchart\ndocumentation <https://developers.google.com/chart/interactive/docs/quick_start>`__,\nusing ``title`` attribute. You can accomplish this by adding a keyword\nargument called ``options`` while instantiating the chart element.\n\n::\n\n    chart = gchart.LineChart(simple_data_source, height=100, width=100, options={'title': 'Sales growth'})\n\nGoogle pie chart allows making the chart as 3 dimensional. You can\naccomplish this by using keyword argument ``options``.\n\n::\n\n    pie_chart = gchart.PieChart(simple_data_source, options={'is3D': True})\n\nMorris.js allows options like lineWidth, smooth etc. You can find more\n`here <http://morrisjs.github.io/morris.js/lines.html#lines>`__. You can\naccomplish this by using ``options``.\n\n::\n\n    chart = morris.LineChart(simple_data_source, options={'lineWidth': 50, 'smooth': False})\n\nInstallation\n------------\n\npip install django-graphos\n\nCompatibility\n-------------\n\nGraphos is compatible with Python 2.7 and Python 3.3+\n\n`available on pypi <https://pypi.python.org/pypi/django-graphos/>`__\n\nHandling non serializable fields\n--------------------------------\n\nYou need to override get\\_data() of existing DataSource and convert\ndatetime field into something which could be serialized.\n\nAssuming you are using a Python list as data, then you need to do:\n\n::\n\n    from graphos.sources.simple import SimpleDataSource\n    class MySimpleDataSource(SimpleDataSource):\n        def get_data(self):\n            data = super(MySimpleDataSource, self).get_data()\n            header = data[0]\n            data_without_header = data[1:]\n            for row in data_without_header:\n                # Assuming first column contains datetime\n                row[0] = row[0].year\n            data_without_header.insert(0, header)\n            return data_without_header\n\nAnd data has\n\n::\n\n    d1 = datetime(2015, 7, 8, 1, 1)\n    d2 = datetime(2016, 7, 8, 3, 1)\n\n    data1 = [\n             ['Year', 'Sales', 'Expenses', 'Items Sold', 'Net Profit'],\n             [d1, 1000, 400, 100, 600],\n             [d2, 1170, 460, 120, 310],\n     ]\n\n    chart = flot.LineChart(MySimpleDataSource(data=data1))\n\nIf you are planning to use queryset with ModelDataSource, then you would\ncreate following class\n\n::\n\n    from graphos.sources.model import ModelDataSource\n    class MyModelDataSource(ModelDataSource):\n        def get_data(self):\n            data = super(MyModelDataSource, self).get_data()\n            header = data[0]\n            data_without_header = data[1:]\n            for row in data_without_header:\n                # Assuming second column contains datetime\n                row[1] = row[1].year\n            data_without_header.insert(0, header)\n            return data_without_header\n\nAnd you would use this class like:\n\n::\n\n    queryset = Account.objects.all()\n    chart = flot.LineChart(MyModelDataSource(queryset=queryset, fields=['sales', 'datetime_field','expenses']))\n\nCreating new DataSource\n-----------------------\n\nA DataSource is a class which has these three methods.\n\n::\n\n    get_data\n    get_header\n    get_first_column\n\n``get_header`` is used by a ``Renderer`` to create the labels.\n``get_first_column`` is used to set the x axis labels ``get_data`` is\nused to get the data for display. It should always return a nested list.\nEg:\n\n::\n\n    [\n        ['Year', 'Sales', 'Expenses'],\n        [2004, 1000, 400],\n        [2005, 1170, 460],\n        [2006, 660, 1120],\n        [2007, 1030, 540]\n    ]\n\nIf you create a class extending ``SimpleDataSource``, and implement\n``get_data``. You get ``get_header`` and ``get_first_column`` for free.\n\nCreating new Renderer\n---------------------\n\nA renderer is a class which takes a ``DataSource`` and can convert it to\nthe html to display.\n\nThe only required method on a ``Renderer`` is ``as_html``. This will\nconvert the data to a format which can display the chart.\n\nGenerally you will convert the data to json and pass it to the template\nwhich you return.\n\nLicense\n-------\n\nBSD\n\n.. |Build Status| image:: https://travis-ci.org/agiliq/django-graphos.png\n   :target: https://travis-ci.org/agiliq/django-graphos", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/agiliq/django-graphos", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-graphos", "package_url": "https://pypi.org/project/django-graphos/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-graphos/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/agiliq/django-graphos"}, "release_url": "https://pypi.org/project/django-graphos/0.3.41/", "requires_dist": null, "requires_python": null, "summary": "Django app to provide a JS agnostic way to work with charts.", "version": "0.3.41", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/agiliq/django-graphos\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a50de9ac7d9cd18445de8f994477df606bdd35f8/68747470733a2f2f7472617669732d63692e6f72672f6167696c69712f646a616e676f2d67726170686f732e706e67\"></a></p>\n<p>Graphos is a Django app to normalize data to create beautiful charts. It\nprovides a JS agnostic way to work with charts and allows seamless and\nquick switching between different chart providers.</p>\n<ul>\n<li>Demo: <a href=\"http://agiliq.com/demo/graphos/\" rel=\"nofollow\">http://agiliq.com/demo/graphos/</a>.</li>\n<li>Docs: <a href=\"http://agiliq.com/docs/django-graphos/\" rel=\"nofollow\">http://agiliq.com/docs/django-graphos/</a>.</li>\n</ul>\n<div id=\"supported-backends\">\n<h2>Supported Backends:</h2>\n<ul>\n<li>Python Nested lists</li>\n<li>Django ORM</li>\n<li>CSV Files</li>\n<li>MongoDB</li>\n</ul>\n</div>\n<div id=\"charting-api-supported\">\n<h2>Charting API Supported</h2>\n<ul>\n<li><a href=\"http://flotcharts.org\" rel=\"nofollow\">Flot</a></li>\n<li><a href=\"https://developers.google.com/chart/\" rel=\"nofollow\">Google Charts API</a></li>\n<li><a href=\"http://yuilibrary.com/yui/docs/charts/\" rel=\"nofollow\">YUI Charts</a></li>\n<li><a href=\"http://morrisjs.github.io/morris.js/\" rel=\"nofollow\">Morris.js</a></li>\n<li><a href=\"http://www.highcharts.com/\" rel=\"nofollow\">Highcharts</a></li>\n<li><a href=\"http://matplotlib.org/api/pyplot_api.html\" rel=\"nofollow\">Matplotlib</a></li>\n</ul>\n</div>\n<div id=\"chart-types-supported\">\n<h2>Chart types supported</h2>\n<div id=\"flot\">\n<h3>Flot</h3>\n<ul>\n<li>Line chart</li>\n<li>Bar Chart</li>\n<li>Column chart</li>\n<li>Pie chart</li>\n<li>Point Chart</li>\n</ul>\n</div>\n<div id=\"google-charts\">\n<h3>Google Charts</h3>\n<ul>\n<li>Line chart</li>\n<li>Bar chart</li>\n<li>Column chart</li>\n<li>Pie chart</li>\n<li>Area chart</li>\n<li>Candlestick chart</li>\n<li>Treemap chart</li>\n<li>Gauge chart</li>\n</ul>\n</div>\n<div id=\"yui\">\n<h3>YUI</h3>\n<ul>\n<li>Line chart</li>\n<li>Bar chart</li>\n<li>Column chart</li>\n<li>Pie chart</li>\n<li>Area chart</li>\n<li>Spline chart</li>\n<li>Areaspline chart</li>\n</ul>\n</div>\n<div id=\"morris-js\">\n<h3>Morris.js</h3>\n<ul>\n<li>Line chart</li>\n<li>Bar chart</li>\n<li>Donut chart</li>\n<li>Area chart</li>\n</ul>\n</div>\n<div id=\"highcharts\">\n<h3>Highcharts</h3>\n<p>(You will need to buy a license if you use highcharts for commerical\nuse)</p>\n<ul>\n<li>Line Chart</li>\n<li>Bar Chart</li>\n<li>Column Chart</li>\n<li>Pie Chart</li>\n<li>Area Chart</li>\n</ul>\n</div>\n<div id=\"c3-js\">\n<h3>C3.js</h3>\n<ul>\n<li>Line chart</li>\n<li>Column chart (You need to rotate the axis of bar chart to render\ncolumn chart)</li>\n<li>Bar chart</li>\n<li>Donut chart</li>\n<li>Pie chart</li>\n<li>Spline chart</li>\n</ul>\n</div>\n<div id=\"matplotlib\">\n<h3>Matplotlib</h3>\n<ul>\n<li>LineChart</li>\n<li>BarChart</li>\n</ul>\n<p>With Graphos, switching from google\u2019s LineChart to yui LineChart can be\ndone within minutes. So would be the case in switching from yui\nAreaChart to morris AreaChart.</p>\n</div>\n</div>\n<div id=\"running-demo-project-locally\">\n<h2>Running demo project locally</h2>\n<ul>\n<li><p>Clone the project</p>\n<p>git clone <a href=\"https://github.com/agiliq/django-graphos.git\" rel=\"nofollow\">https://github.com/agiliq/django-graphos.git</a></p>\n</li>\n<li><p>Cd to demo directory</p>\n<p>cd django-graphos/demo_project/</p>\n</li>\n<li><p>Create local settings.</p>\n<p>cp demo_project/settings/local.py-dist\ndemo_project/settings/local.py</p>\n</li>\n<li><p>Install requirements</p>\n<p>pip install -r requirements.txt</p>\n</li>\n<li><p>Run migrate</p>\n<p>python manage.py migrate</p>\n</li>\n<li><p>Run server</p>\n<p>python manage.py runserver</p>\n</li>\n</ul>\n<p>The installed demo app shows the various suported chart types.</p>\n<p>In case you want to use mongo data while charting, you must have mongodb\nproperly setup and <strong>pymongo</strong> installed. Make sure mongo server is\nrunning.</p>\n<pre>mongod --dbpath ~/data/db\n</pre>\n<p>Mongo setup is optional and is not needed to get running with demo\nproject.</p>\n</div>\n<div id=\"overview-of-plot-generation\">\n<h2>Overview of Plot generation</h2>\n<p>Generating a plot requires two things. A DataSource object and a Chart\nobject.</p>\n<p>In your view, you do something like this:</p>\n<pre>from graphos.sources.simple import SimpleDataSource\nfrom graphos.renderers.gchart import LineChart\n\ndata =  [\n        ['Year', 'Sales', 'Expenses'],\n        [2004, 1000, 400],\n        [2005, 1170, 460],\n        [2006, 660, 1120],\n        [2007, 1030, 540]\n    ]\n# DataSource object\ndata_source = SimpleDataSource(data=data)\n# Chart object\nchart = LineChart(data_source)\ncontext = {'chart': chart}\nreturn render(request, 'yourtemplate.html', context)\n</pre>\n<p>And then in the template:</p>\n<pre>{{ chart.as_html }}\n</pre>\n<p>In this example we are planning to use Google chart, as is evident from\nthe import statement in the view, we import gchart.LineChart. So we must\nalso include the google chart javascript in our template.</p>\n<pre>&lt;script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n&lt;/script&gt;\n</pre>\n<p>So the template would look like</p>\n<pre>&lt;script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n&lt;/script&gt;\n\n{{ chart.as_html }}\n</pre>\n<p>If we want to use yui LineChart instead of google LineChart, our view\nwould have:</p>\n<pre>from graphos.renderers.yui import LineChart\nchart = LineChart(data_source)\n</pre>\n<p>And our template would inclue yui javascript and it would look like:</p>\n<pre>&lt;script src=\"http://yui.yahooapis.com/3.10.0/build/yui/yui-min.js\"&gt;&lt;/script&gt;\n{{ chart.as_html }}\n</pre>\n<p>See, how easy it was to switch from gchart to yui. You did not have to\nwrite or change a single line of javascript to switch from gchart to\nyui. All that was taken care of by as_html() of the chart object.</p>\n</div>\n<div id=\"datasources\">\n<h2>DataSources</h2>\n<div id=\"simpledatasource\">\n<h3>SimpleDataSource</h3>\n<p>This should be used if you want to generate a chart from Python list.</p>\n<pre>from graphos.sources.simple import SimpleDataSource\ndata = SimpleDataSource(data=data)\n</pre>\n<p>Data could be:</p>\n<pre>data = [\n       ['Year', 'Sales', 'Expenses', 'Items Sold', 'Net Profit'],\n       ['2004', 1000, 400, 100, 600],\n       ['2005', 1170, 460, 120, 710],\n       ['2006', 660, 1120, 50, -460],\n       ['2007', 1030, 540, 100, 490],\n       ]\n</pre>\n<p>or it could be</p>\n<pre>data = [\n       ['Year', 'Sales', 'Expenses'],\n       ['2004', 1000, 400],\n       ['2005', 1170, 460],\n       ['2006', 660, 1120],\n       ['2007', 1030, 540],\n       ]\n</pre>\n<p>or it could be</p>\n<pre>data = [\n       ['Year', 'Sales', 'Expenses'],\n       ['2004', 1000, 400],\n       ['2005', 1170, 460],\n       ]\n</pre>\n<p>You got the idea.</p>\n<p>data has to be a list of lists. First row of data tells the headers.\nFirst element of each list elementis the x axis.</p>\n<p>This data essentially tells that in year 2004, sales was 1000 units and\nexpense was 400 units. And in year 2005, sales was 1170 units and\nexpense was 460 units.</p>\n</div>\n<div id=\"modeldatasource\">\n<h3>ModelDataSource</h3>\n<p>This should be used if you want to generate a chart from a Django\nqueryset.</p>\n<pre>from graphos.sources.model import ModelDataSource\nqueryset = Account.objects.all()\ndata_source = ModelDataSource(queryset,\n                              fields=['year', 'sales'])\n</pre>\n<p>This assumes that there is a Django model called Account which has\nfields <tt>year</tt> and <tt>sales</tt>. And you plan to plot year on x axis and\nsales on y axis.</p>\n<p>Or you could say</p>\n<pre>data_source = ModelDataSource(queryset,\n                              fields=['year', 'sales', 'expenses'])\n</pre>\n<p>This would plot the yearly sale and yearly expense</p>\n</div>\n<div id=\"csvdatasource\">\n<h3>CSVDataSource</h3>\n<p>This should be used if you want to generate a chart from a CSV file.</p>\n<pre>from graphos.sources.csv_file import CSVDataSource\ncsv_file = open(\"hello.csv\")\ndata_source = CSVDataSource(csv_file)\n</pre>\n</div>\n<div id=\"mongodatasource\">\n<h3>MongoDataSource</h3>\n<p>TODO</p>\n</div>\n</div>\n<div id=\"charts\">\n<h2>Charts</h2>\n<p>We have following charts</p>\n<ul>\n<li>Gchart<ul>\n<li>gchart.LineChart</li>\n<li>gchart.BarChart</li>\n<li>gchart.ColumnChart</li>\n<li>gchart.PieChart</li>\n<li>gchart.AreaChart</li>\n<li>gchart.TreeMapChart</li>\n<li>gchart.CandlestickChart</li>\n<li>gchart.GaugeChart</li>\n</ul>\n</li>\n<li>Yui<ul>\n<li>yui.LineChart</li>\n<li>yui.BarChart</li>\n<li>yui.ColumnChart</li>\n<li>yui.PieChart</li>\n<li>yui.AreaChart</li>\n<li>yui.SplineChart</li>\n<li>yui.AreaSplineChart</li>\n</ul>\n</li>\n<li>Flot<ul>\n<li>flot.LineChart</li>\n<li>flot.BarChart</li>\n<li>flot.ColumnChart</li>\n<li>flot.PieChart</li>\n<li>flot.PointChart</li>\n</ul>\n</li>\n<li>Morris<ul>\n<li>morris.LineChart</li>\n<li>morris.BarChart</li>\n<li>morris.AreaChart</li>\n<li>morris.DonutChart</li>\n</ul>\n</li>\n<li>Highcharts<ul>\n<li>highcharts.LineChart</li>\n<li>highcharts.BarChart</li>\n<li>highcharts.ColumnChart</li>\n<li>highcharts.PieChart</li>\n<li>highcharts.AreaChart</li>\n</ul>\n</li>\n</ul>\n<p>Most of the chart providers support LineChart, BarChart, ColumnChart and\nPieChart, and it is very easy to switch from specific chart type of one\nprovider to other. eg: It is super quick to switch from gchart LineChart\nto flot LineChart.</p>\n</div>\n<div id=\"more-examples\">\n<h2>More Examples</h2>\n<div id=\"using-simpledatasource-with-gchart-linechart\">\n<h3>Using SimpleDataSource with gchart LineChart</h3>\n<div id=\"view\">\n<h4>View</h4>\n<pre>data =  [\n        ['Year', 'Sales', 'Expenses'],\n        [2004, 1000, 400],\n        [2005, 1170, 460],\n        [2006, 660, 1120],\n        [2007, 1030, 540]\n    ]\nfrom graphos.sources.simple import SimpleDataSource\nfrom graphos.renderers.gchart import LineChart\nchart = LineChart(SimpleDataSource(data=data))\n</pre>\n</div>\n<div id=\"template\">\n<h4>Template</h4>\n<pre>&lt;script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n&lt;/script&gt;\n\n{{ chart.as_html }}\n</pre>\n</div>\n</div>\n<div id=\"using-simpledatasource-with-yui-linechart\">\n<h3>Using SimpleDataSource with yui LineChart</h3>\n<div id=\"id1\">\n<h4>View</h4>\n<pre>data =  [\n        ['Year', 'Sales', 'Expenses'],\n        [2004, 1000, 400],\n        [2005, 1170, 460],\n        [2006, 660, 1120],\n        [2007, 1030, 540]\n    ]\nfrom graphos.sources.simple import SimpleDataSource\nfrom graphos.renderers.yui import LineChart\nchart = LineChart(SimpleDataSource(data=data))\n</pre>\n</div>\n<div id=\"id2\">\n<h4>Template</h4>\n<pre>&lt;script src=\"http://yui.yahooapis.com/3.10.0/build/yui/yui-min.js\"&gt;&lt;/script&gt;\n{{ chart.as_html }}\n</pre>\n</div>\n</div>\n<div id=\"using-simpledatasource-with-yui-barchart\">\n<h3>Using SimpleDataSource with yui BarChart</h3>\n<div id=\"id3\">\n<h4>View</h4>\n<pre>data =  [\n        ['Year', 'Sales', 'Expenses'],\n        [2004, 1000, 400],\n        [2005, 1170, 460],\n        [2006, 660, 1120],\n        [2007, 1030, 540]\n    ]\nfrom graphos.sources.simple import SimpleDataSource\nfrom graphos.renderers.yui import BarChart\nchart = BarChart(SimpleDataSource(data=data))\n</pre>\n</div>\n<div id=\"id4\">\n<h4>Template</h4>\n<pre>&lt;script src=\"http://yui.yahooapis.com/3.10.0/build/yui/yui-min.js\"&gt;&lt;/script&gt;\n{{ chart.as_html }}\n</pre>\n</div>\n</div>\n<div id=\"using-simpledatasource-with-gchart-barchart\">\n<h3>Using SimpleDataSource with gchart BarChart</h3>\n<div id=\"id5\">\n<h4>View</h4>\n<pre>data =  [\n        ['Year', 'Sales', 'Expenses'],\n        [2004, 1000, 400],\n        [2005, 1170, 460],\n        [2006, 660, 1120],\n        [2007, 1030, 540]\n    ]\nfrom graphos.sources.simple import SimpleDataSource\nfrom graphos.renderers.gchart import BarChart\nchart = BarChart(SimpleDataSource(data=data))\n</pre>\n</div>\n<div id=\"id6\">\n<h4>Template</h4>\n<pre>&lt;script type=\"text/javascript\" src=\"https://www.google.com/jsapi\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    google.load(\"visualization\", \"1\", {packages:[\"corechart\"]});\n&lt;/script&gt;\n{{ chart.as_html }}\n</pre>\n</div>\n</div>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<p>Your rendered chart is contained in a div.</p>\n<div id=\"setting-id-of-chart-containing-div\">\n<h3>Setting id of chart containing div</h3>\n<p>You might want to do additional jquery or javascript operations with\nyour chart containing div. In such case you might want to set an id on\nthe div. You can do this while instantiating the chart element.</p>\n<pre>chart = gchart.LineChart(html_id='gchart_div')\n</pre>\n</div>\n<div id=\"setting-width-and-height-of-chart-containing-div\">\n<h3>Setting width and height of chart containing div</h3>\n<p>You can control the width and height of chart containing div while\ninstantiating the chart element.</p>\n<pre>chart = gchart.LineChart(simple_data_source, height=100, width=100)\n</pre>\n</div>\n<div id=\"chart-specific-options\">\n<h3>Chart specific options</h3>\n<p>Different chart providers give different options to customise the chart.</p>\n<p>Google chart api allows setting title for the rendered chart, see\n<a href=\"https://developers.google.com/chart/interactive/docs/quick_start\" rel=\"nofollow\">Gchart\ndocumentation</a>,\nusing <tt>title</tt> attribute. You can accomplish this by adding a keyword\nargument called <tt>options</tt> while instantiating the chart element.</p>\n<pre>chart = gchart.LineChart(simple_data_source, height=100, width=100, options={'title': 'Sales growth'})\n</pre>\n<p>Google pie chart allows making the chart as 3 dimensional. You can\naccomplish this by using keyword argument <tt>options</tt>.</p>\n<pre>pie_chart = gchart.PieChart(simple_data_source, options={'is3D': True})\n</pre>\n<p>Morris.js allows options like lineWidth, smooth etc. You can find more\n<a href=\"http://morrisjs.github.io/morris.js/lines.html#lines\" rel=\"nofollow\">here</a>. You can\naccomplish this by using <tt>options</tt>.</p>\n<pre>chart = morris.LineChart(simple_data_source, options={'lineWidth': 50, 'smooth': False})\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>pip install django-graphos</p>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>Graphos is compatible with Python 2.7 and Python 3.3+</p>\n<p><a href=\"https://pypi.python.org/pypi/django-graphos/\" rel=\"nofollow\">available on pypi</a></p>\n</div>\n<div id=\"handling-non-serializable-fields\">\n<h2>Handling non serializable fields</h2>\n<p>You need to override get_data() of existing DataSource and convert\ndatetime field into something which could be serialized.</p>\n<p>Assuming you are using a Python list as data, then you need to do:</p>\n<pre>from graphos.sources.simple import SimpleDataSource\nclass MySimpleDataSource(SimpleDataSource):\n    def get_data(self):\n        data = super(MySimpleDataSource, self).get_data()\n        header = data[0]\n        data_without_header = data[1:]\n        for row in data_without_header:\n            # Assuming first column contains datetime\n            row[0] = row[0].year\n        data_without_header.insert(0, header)\n        return data_without_header\n</pre>\n<p>And data has</p>\n<pre>d1 = datetime(2015, 7, 8, 1, 1)\nd2 = datetime(2016, 7, 8, 3, 1)\n\ndata1 = [\n         ['Year', 'Sales', 'Expenses', 'Items Sold', 'Net Profit'],\n         [d1, 1000, 400, 100, 600],\n         [d2, 1170, 460, 120, 310],\n ]\n\nchart = flot.LineChart(MySimpleDataSource(data=data1))\n</pre>\n<p>If you are planning to use queryset with ModelDataSource, then you would\ncreate following class</p>\n<pre>from graphos.sources.model import ModelDataSource\nclass MyModelDataSource(ModelDataSource):\n    def get_data(self):\n        data = super(MyModelDataSource, self).get_data()\n        header = data[0]\n        data_without_header = data[1:]\n        for row in data_without_header:\n            # Assuming second column contains datetime\n            row[1] = row[1].year\n        data_without_header.insert(0, header)\n        return data_without_header\n</pre>\n<p>And you would use this class like:</p>\n<pre>queryset = Account.objects.all()\nchart = flot.LineChart(MyModelDataSource(queryset=queryset, fields=['sales', 'datetime_field','expenses']))\n</pre>\n</div>\n<div id=\"creating-new-datasource\">\n<h2>Creating new DataSource</h2>\n<p>A DataSource is a class which has these three methods.</p>\n<pre>get_data\nget_header\nget_first_column\n</pre>\n<p><tt>get_header</tt> is used by a <tt>Renderer</tt> to create the labels.\n<tt>get_first_column</tt> is used to set the x axis labels <tt>get_data</tt> is\nused to get the data for display. It should always return a nested list.\nEg:</p>\n<pre>[\n    ['Year', 'Sales', 'Expenses'],\n    [2004, 1000, 400],\n    [2005, 1170, 460],\n    [2006, 660, 1120],\n    [2007, 1030, 540]\n]\n</pre>\n<p>If you create a class extending <tt>SimpleDataSource</tt>, and implement\n<tt>get_data</tt>. You get <tt>get_header</tt> and <tt>get_first_column</tt> for free.</p>\n</div>\n<div id=\"creating-new-renderer\">\n<h2>Creating new Renderer</h2>\n<p>A renderer is a class which takes a <tt>DataSource</tt> and can convert it to\nthe html to display.</p>\n<p>The only required method on a <tt>Renderer</tt> is <tt>as_html</tt>. This will\nconvert the data to a format which can display the chart.</p>\n<p>Generally you will convert the data to json and pass it to the template\nwhich you return.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>BSD</p>\n</div>\n\n          </div>"}, "last_serial": 2680856, "releases": {"0.0.1a0": [{"comment_text": "", "digests": {"md5": "b65810b5ac051596f3f52fd591eb5531", "sha256": "f1c0d50651b9ef53a54fd3f1be2cab94bd243c51288de22fea8122fd5265e228"}, "downloads": -1, "filename": "django-graphos-0.0.1a0.tar.gz", "has_sig": false, "md5_digest": "b65810b5ac051596f3f52fd591eb5531", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9043, "upload_time": "2013-05-30T09:41:05", "upload_time_iso_8601": "2013-05-30T09:41:05.222828Z", "url": "https://files.pythonhosted.org/packages/72/d0/9f27ed591cd226c1c5974f24003edaa3f0cab7eaa6ea56253f0624eafc4b/django-graphos-0.0.1a0.tar.gz", "yanked": false}], "0.0.2a0": [{"comment_text": "", "digests": {"md5": "0ef2a4d9882972148df66b2332c1a6f1", "sha256": "0ba609386dbb530ddee16dcafd628cefc8a810b1dbf257adc095f36d4957abc6"}, "downloads": -1, "filename": "django-graphos-0.0.2a0.tar.gz", "has_sig": false, "md5_digest": "0ef2a4d9882972148df66b2332c1a6f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12657, "upload_time": "2013-05-31T08:27:01", "upload_time_iso_8601": "2013-05-31T08:27:01.314225Z", "url": "https://files.pythonhosted.org/packages/23/8e/38f1c84392e4bb39d9da753a5289c685dc5321967a9d01e54cdcbb0af72c/django-graphos-0.0.2a0.tar.gz", "yanked": false}], "0.1": [{"comment_text": "", "digests": {"md5": "47c272d23f5c897aef3bfb54bcc9d2a1", "sha256": "a60a95c06f9920916630af540d13ec89876ffdcf00df3aeefb47a4da404198fe"}, "downloads": -1, "filename": "django-graphos-0.1.tar.gz", "has_sig": false, "md5_digest": "47c272d23f5c897aef3bfb54bcc9d2a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57900, "upload_time": "2015-09-18T11:09:53", "upload_time_iso_8601": "2015-09-18T11:09:53.940153Z", "url": "https://files.pythonhosted.org/packages/df/42/d3a201a97d1cd2f371a0014ee0df56ab35e25fabc5d6bd8fb29c89116351/django-graphos-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "de5d2a029fa59ba61f368a70282954eb", "sha256": "222cc2932fb1aee200bb379e29e0543a2539669121ef18f70fd66dba87256db4"}, "downloads": -1, "filename": "django-graphos-0.1.1.tar.gz", "has_sig": false, "md5_digest": "de5d2a029fa59ba61f368a70282954eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58473, "upload_time": "2015-09-18T12:40:43", "upload_time_iso_8601": "2015-09-18T12:40:43.044305Z", "url": "https://files.pythonhosted.org/packages/2d/dd/d16ef21f9aa5225535c5afb3d5d3f359db44030bfab9b2ac8811538ce610/django-graphos-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7a04722742db1b45caa9ab6938c3e475", "sha256": "382faa8dd27877fee29f0f4d672818e01ded2bd6ba663e088d207a120de0cfd9"}, "downloads": -1, "filename": "django-graphos-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7a04722742db1b45caa9ab6938c3e475", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60455, "upload_time": "2016-07-20T12:08:08", "upload_time_iso_8601": "2016-07-20T12:08:08.536271Z", "url": "https://files.pythonhosted.org/packages/09/e3/1a56ed04b7ee8defc2e0a4ea4f8dd2a0de26ac0a5368bfc44f5242a93185/django-graphos-0.1.2.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f1cc5e077ee67b03bd88ef05c915de3c", "sha256": "f6952101d68aa803e7c89ee7edd233fd7b1357faf3716c9d72cb765287284470"}, "downloads": -1, "filename": "django-graphos-0.2.tar.gz", "has_sig": false, "md5_digest": "f1cc5e077ee67b03bd88ef05c915de3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63422, "upload_time": "2016-07-26T08:52:30", "upload_time_iso_8601": "2016-07-26T08:52:30.593837Z", "url": "https://files.pythonhosted.org/packages/5e/29/d6120c4948a06ce73f175490023bf54780a9d22b1521a0109dba3dd1c65c/django-graphos-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "e4b3dc7c267ccf59ee6c180676c5b8eb", "sha256": "add905f546b38868a949b71283bfe60243eaca8dc4d58543c683bb783847c355"}, "downloads": -1, "filename": "django-graphos-0.3.tar.gz", "has_sig": false, "md5_digest": "e4b3dc7c267ccf59ee6c180676c5b8eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67718, "upload_time": "2016-09-20T08:08:14", "upload_time_iso_8601": "2016-09-20T08:08:14.078839Z", "url": "https://files.pythonhosted.org/packages/ef/ab/da7f7182925af8a51e2ec532f48cb91bd1151fc39bce3824ad4d1993d812/django-graphos-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "6992d479209d948c7635624466b906f4", "sha256": "4c309b53de4d89192d70d3732762a1359deced157b20052d20bbde0097549c49"}, "downloads": -1, "filename": "django-graphos-0.3.1.tar.gz", "has_sig": false, "md5_digest": "6992d479209d948c7635624466b906f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68402, "upload_time": "2016-09-20T10:04:34", "upload_time_iso_8601": "2016-09-20T10:04:34.856329Z", "url": "https://files.pythonhosted.org/packages/d3/ea/cbc5a993a49078a71ae2a4932588bbca70d780fe2b5be2cb17e83e0f84ca/django-graphos-0.3.1.tar.gz", "yanked": false}], "0.3.10": [{"comment_text": "", "digests": {"md5": "707679b31800df32414e9d2ed2ff33b5", "sha256": "f472b8324a3f75798149fa3cbb95fb86120505ef46aa130b7073d7c69c4e82f9"}, "downloads": -1, "filename": "django-graphos-0.3.10.tar.gz", "has_sig": false, "md5_digest": "707679b31800df32414e9d2ed2ff33b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70018, "upload_time": "2016-12-04T07:03:34", "upload_time_iso_8601": "2016-12-04T07:03:34.803796Z", "url": "https://files.pythonhosted.org/packages/bc/9f/c93b81a73005c5ac1f1fea5d0a9acffbb26ef9e61330a23eedf8114a30b5/django-graphos-0.3.10.tar.gz", "yanked": false}], "0.3.11": [{"comment_text": "", "digests": {"md5": "2959a125b9286f2cdc4eae22e0b2b6db", "sha256": "a8331cc43e43082f0138e704bbfdeabcd4a30031d7702b09d3711ea15f43f1bc"}, "downloads": -1, "filename": "django-graphos-0.3.11.tar.gz", "has_sig": false, "md5_digest": "2959a125b9286f2cdc4eae22e0b2b6db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70126, "upload_time": "2016-12-24T11:32:47", "upload_time_iso_8601": "2016-12-24T11:32:47.574586Z", "url": "https://files.pythonhosted.org/packages/c5/5c/2bceaef32bdc51449363ece7ed314cf4d770d569f2090502cf1f7662b100/django-graphos-0.3.11.tar.gz", "yanked": false}], "0.3.12": [{"comment_text": "", "digests": {"md5": "e2cd96aea17c52fe65015e0e1bd494df", "sha256": "b5e222f3525b87edf275c94ee04cea445000a065e552968e2322c4f3fec1ab8d"}, "downloads": -1, "filename": "django-graphos-0.3.12.tar.gz", "has_sig": false, "md5_digest": "e2cd96aea17c52fe65015e0e1bd494df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65123, "upload_time": "2017-01-17T11:35:57", "upload_time_iso_8601": "2017-01-17T11:35:57.409557Z", "url": "https://files.pythonhosted.org/packages/96/a4/7d26dafd13e5324065fd8bcd599288995a36bb1119e8913d2283911e363a/django-graphos-0.3.12.tar.gz", "yanked": false}], "0.3.13": [{"comment_text": "", "digests": {"md5": "1705b2c5eeada6bcb8252ad67ce7546c", "sha256": "388e538b6686970726038055f479460d7aaffdcd690d713b9e9dacd0dab0d3dd"}, "downloads": -1, "filename": "django-graphos-0.3.13.tar.gz", "has_sig": false, "md5_digest": "1705b2c5eeada6bcb8252ad67ce7546c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65589, "upload_time": "2017-01-18T14:10:33", "upload_time_iso_8601": "2017-01-18T14:10:33.380804Z", "url": "https://files.pythonhosted.org/packages/1a/a4/2ea630fe6b913fa30e4f37ee3a879d8e1bf98097477c8d3e04c7f366e7b1/django-graphos-0.3.13.tar.gz", "yanked": false}], "0.3.14": [{"comment_text": "", "digests": {"md5": "e19ea0d063966e362eb6508da48ddf69", "sha256": "b61c3037e9040068dd66b46bf7aa9d275a5832046a633a05940d19892306fa27"}, "downloads": -1, "filename": "django-graphos-0.3.14.tar.gz", "has_sig": false, "md5_digest": "e19ea0d063966e362eb6508da48ddf69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65625, "upload_time": "2017-01-19T09:05:08", "upload_time_iso_8601": "2017-01-19T09:05:08.882265Z", "url": "https://files.pythonhosted.org/packages/13/93/c693e3e0113cff07c66fd01e520e799dd8e95907c9f2c6e33d28f799e47d/django-graphos-0.3.14.tar.gz", "yanked": false}], "0.3.15": [{"comment_text": "", "digests": {"md5": "06ee66b67eff6da4e153391f9d7e7813", "sha256": "1ffff18640ccb835d0483b993751ffbd8c9396d85797e73a92571e7ca8a19043"}, "downloads": -1, "filename": "django-graphos-0.3.15.tar.gz", "has_sig": false, "md5_digest": "06ee66b67eff6da4e153391f9d7e7813", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71003, "upload_time": "2017-01-19T15:38:07", "upload_time_iso_8601": "2017-01-19T15:38:07.768134Z", "url": "https://files.pythonhosted.org/packages/37/90/c30fc1aa1d25565f8d9bf8300a96956024def604d864d5051c23d712c4db/django-graphos-0.3.15.tar.gz", "yanked": false}], "0.3.16": [{"comment_text": "", "digests": {"md5": "0fe9bbff4e07acc8a290480462566b97", "sha256": "3fefb572947932eb9bf4675d16e4cddea42ac360d3cd30ed819fcec9307370f2"}, "downloads": -1, "filename": "django-graphos-0.3.16.tar.gz", "has_sig": false, "md5_digest": "0fe9bbff4e07acc8a290480462566b97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71085, "upload_time": "2017-01-19T17:46:22", "upload_time_iso_8601": "2017-01-19T17:46:22.853394Z", "url": "https://files.pythonhosted.org/packages/74/5f/a86da12ac104d2ac139b2de8251c62a6f6728a21370cd74ab7244b13e9e7/django-graphos-0.3.16.tar.gz", "yanked": false}], "0.3.17": [{"comment_text": "", "digests": {"md5": "fc78fb6c7683392a03f01468c33b8a37", "sha256": "0ee7813de61fc5ed7a0d39001e40a55434a719cf47e86d81d25d7e45372e6b45"}, "downloads": -1, "filename": "django-graphos-0.3.17.tar.gz", "has_sig": false, "md5_digest": "fc78fb6c7683392a03f01468c33b8a37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65710, "upload_time": "2017-01-20T03:56:08", "upload_time_iso_8601": "2017-01-20T03:56:08.961315Z", "url": "https://files.pythonhosted.org/packages/1d/b9/f4151954401bae6ae942352f9e3539cc65c075cea216c1442a665fc6e17c/django-graphos-0.3.17.tar.gz", "yanked": false}], "0.3.18": [{"comment_text": "", "digests": {"md5": "3e540ec92b509b5e047459442f594c42", "sha256": "49338b3f87ada42e43f1363dddab2c1c08d206f9aa8e7c88be490328263d6645"}, "downloads": -1, "filename": "django-graphos-0.3.18.tar.gz", "has_sig": false, "md5_digest": "3e540ec92b509b5e047459442f594c42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71424, "upload_time": "2017-01-20T12:29:38", "upload_time_iso_8601": "2017-01-20T12:29:38.129152Z", "url": "https://files.pythonhosted.org/packages/d9/fb/3dc8176e3f391f1b6b1f17f199db6f84d115084389e9847cfad444c7bae4/django-graphos-0.3.18.tar.gz", "yanked": false}], "0.3.19": [{"comment_text": "", "digests": {"md5": "e6513a03d844cbf9a70c8dca58333e1e", "sha256": "e63d57577b12053e869fcc6394bf4b49dbf02328134627887c35b6571d89c74c"}, "downloads": -1, "filename": "django-graphos-0.3.19.tar.gz", "has_sig": false, "md5_digest": "e6513a03d844cbf9a70c8dca58333e1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71577, "upload_time": "2017-01-20T13:21:41", "upload_time_iso_8601": "2017-01-20T13:21:41.248193Z", "url": "https://files.pythonhosted.org/packages/ee/14/93da7015a4bae551aef64cd1b6a2f1e9e1953be8c68fab5ad89905022e4d/django-graphos-0.3.19.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "0b368670964a35b95d85e889a0b00d4b", "sha256": "7d5ae57755915aeef1100b4c737be27108e727c9100add38e1e192038524a003"}, "downloads": -1, "filename": "django-graphos-0.3.2.tar.gz", "has_sig": false, "md5_digest": "0b368670964a35b95d85e889a0b00d4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68564, "upload_time": "2016-09-21T06:35:34", "upload_time_iso_8601": "2016-09-21T06:35:34.347776Z", "url": "https://files.pythonhosted.org/packages/d5/56/55a1c33bbb27614a3c9e9f158af0ba19fd230c140e02b515b8e1d601a74d/django-graphos-0.3.2.tar.gz", "yanked": false}], "0.3.21": [{"comment_text": "", "digests": {"md5": "8c241e32a6677dbcad9c60ccb9689fa2", "sha256": "7dd89f34d3e16e65a92ed443b1adafb3e108db57849d4d62aff7769cc45eacbf"}, "downloads": -1, "filename": "django-graphos-0.3.21.tar.gz", "has_sig": false, "md5_digest": "8c241e32a6677dbcad9c60ccb9689fa2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71692, "upload_time": "2017-01-21T04:10:22", "upload_time_iso_8601": "2017-01-21T04:10:22.644791Z", "url": "https://files.pythonhosted.org/packages/f1/14/e7509c8c82e6697205a2f0a770ffe64bf4213b57adcc26fffb39f6eb0b9e/django-graphos-0.3.21.tar.gz", "yanked": false}], "0.3.22": [{"comment_text": "", "digests": {"md5": "76e1c1c95149e165ea229f9522b78386", "sha256": "e4fd53af36076096fdcdb3095e688497ea6d77ef4c5a955fd29087d0c17bc808"}, "downloads": -1, "filename": "django-graphos-0.3.22.tar.gz", "has_sig": false, "md5_digest": "76e1c1c95149e165ea229f9522b78386", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 71717, "upload_time": "2017-01-21T05:24:03", "upload_time_iso_8601": "2017-01-21T05:24:03.418567Z", "url": "https://files.pythonhosted.org/packages/a7/58/33a0260353d188ee892c320e567022ff6a9339bc407933495fb9381dc30b/django-graphos-0.3.22.tar.gz", "yanked": false}], "0.3.23": [{"comment_text": "", "digests": {"md5": "cbe762feb4fbd6f34d5f2a12cfb518c2", "sha256": "1e4e0dfb912f3296bf040bbe97e10949358176980e99373b0f413b15ece59328"}, "downloads": -1, "filename": "django-graphos-0.3.23.tar.gz", "has_sig": false, "md5_digest": "cbe762feb4fbd6f34d5f2a12cfb518c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72035, "upload_time": "2017-01-22T04:14:28", "upload_time_iso_8601": "2017-01-22T04:14:28.715553Z", "url": "https://files.pythonhosted.org/packages/32/b2/0387ac53eb8f3cf3b6a5053398ef62493e01f3d1916d108ed883c5bf383d/django-graphos-0.3.23.tar.gz", "yanked": false}], "0.3.24": [{"comment_text": "", "digests": {"md5": "6dc3f9735aa067d242504e42c1b80635", "sha256": "5ee21d92847b814e9dd19b30677cd3294dbe5ebddef3ca3e5e18ba8d816656e0"}, "downloads": -1, "filename": "django-graphos-0.3.24.tar.gz", "has_sig": false, "md5_digest": "6dc3f9735aa067d242504e42c1b80635", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72018, "upload_time": "2017-01-23T12:34:04", "upload_time_iso_8601": "2017-01-23T12:34:04.043278Z", "url": "https://files.pythonhosted.org/packages/c9/ec/4a8dd73eaabec353cee6a441845e610008f04192adea49a66abb3716715c/django-graphos-0.3.24.tar.gz", "yanked": false}], "0.3.25": [{"comment_text": "", "digests": {"md5": "5bb3d0e6fe46326b6de2a05272d2a8c1", "sha256": "8372b659a6f1b886bc233ac4d132873261cd22989cb950830ea0dc6c293fc1f1"}, "downloads": -1, "filename": "django-graphos-0.3.25.tar.gz", "has_sig": false, "md5_digest": "5bb3d0e6fe46326b6de2a05272d2a8c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72023, "upload_time": "2017-01-23T13:49:04", "upload_time_iso_8601": "2017-01-23T13:49:04.501769Z", "url": "https://files.pythonhosted.org/packages/30/23/d4d8afe48a31e593085ce392f22f9f96ebb9fc6339c9d20c3cd16d18a7bc/django-graphos-0.3.25.tar.gz", "yanked": false}], "0.3.26": [], "0.3.27": [{"comment_text": "", "digests": {"md5": "358ce48ff268e8a46f4eb6ee50690005", "sha256": "a5c3cec2b2a032770d8c355767a342ecda4cc6fda7371376771bcae5fe03fa2d"}, "downloads": -1, "filename": "django-graphos-0.3.27.tar.gz", "has_sig": false, "md5_digest": "358ce48ff268e8a46f4eb6ee50690005", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72222, "upload_time": "2017-01-24T13:18:34", "upload_time_iso_8601": "2017-01-24T13:18:34.705919Z", "url": "https://files.pythonhosted.org/packages/c4/12/49299ffd669212a13ccf8aff55278c85383e9963aebbd42302d089eb6049/django-graphos-0.3.27.tar.gz", "yanked": false}], "0.3.28": [{"comment_text": "", "digests": {"md5": "173e7b1d5f942a68d4dfd3e6d6f28e92", "sha256": "1b7509505aa6218e146ebc5f4241e3125d3e1b684434787e7ce9d257677e5821"}, "downloads": -1, "filename": "django-graphos-0.3.28.tar.gz", "has_sig": false, "md5_digest": "173e7b1d5f942a68d4dfd3e6d6f28e92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 72752, "upload_time": "2017-02-01T07:44:43", "upload_time_iso_8601": "2017-02-01T07:44:43.311358Z", "url": "https://files.pythonhosted.org/packages/4b/11/ad8257e774e81e0c149eb9c16dd18538ac1af59d30401fd5ffa671fc6f21/django-graphos-0.3.28.tar.gz", "yanked": false}], "0.3.29": [{"comment_text": "", "digests": {"md5": "53d62812d3c4beff716d9ad316d1101b", "sha256": "c4fb94a68dbba7aff26406f96ed246726993c87e10e2d85a4f8cacb0874681e7"}, "downloads": -1, "filename": "django-graphos-0.3.29.tar.gz", "has_sig": false, "md5_digest": "53d62812d3c4beff716d9ad316d1101b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73520, "upload_time": "2017-02-08T14:12:58", "upload_time_iso_8601": "2017-02-08T14:12:58.851852Z", "url": "https://files.pythonhosted.org/packages/a8/4e/92b3069d0eb8ed86e768e460b1d205813acd572543f85269ddf396a50947/django-graphos-0.3.29.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "cfbd694fab5b3f4b7d503baa1b3dc4a0", "sha256": "14ad548353b85055d43ff6281565892bb1ea59e8705e7da34e99e7e166b52eff"}, "downloads": -1, "filename": "django-graphos-0.3.3.tar.gz", "has_sig": false, "md5_digest": "cfbd694fab5b3f4b7d503baa1b3dc4a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69168, "upload_time": "2016-10-20T11:57:44", "upload_time_iso_8601": "2016-10-20T11:57:44.052137Z", "url": "https://files.pythonhosted.org/packages/52/82/98fbf88df4eac301ead1cda05931f4d65c84cf2df73bc2682964fbecaad8/django-graphos-0.3.3.tar.gz", "yanked": false}], "0.3.30": [{"comment_text": "", "digests": {"md5": "7a91431d1d2e35b7aba9713c8b7ef73c", "sha256": "868800b061bc4a2d85f040ad60b3903dbfe7f637f8b9ba84983bf6869633082b"}, "downloads": -1, "filename": "django-graphos-0.3.30.tar.gz", "has_sig": false, "md5_digest": "7a91431d1d2e35b7aba9713c8b7ef73c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73393, "upload_time": "2017-02-09T15:44:47", "upload_time_iso_8601": "2017-02-09T15:44:47.122606Z", "url": "https://files.pythonhosted.org/packages/69/8e/5b85a3a3cd4bae8772b7dcb217457289ea6ca26f815767c5f665ba82123b/django-graphos-0.3.30.tar.gz", "yanked": false}], "0.3.31": [{"comment_text": "", "digests": {"md5": "9ce06058b6426ea2fbdd0fdf8856d4f7", "sha256": "c50692d722bdbcf7add63bca47b24472edd979c3c013614c6219db03bf4a8bab"}, "downloads": -1, "filename": "django-graphos-0.3.31.tar.gz", "has_sig": false, "md5_digest": "9ce06058b6426ea2fbdd0fdf8856d4f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73495, "upload_time": "2017-02-10T07:50:39", "upload_time_iso_8601": "2017-02-10T07:50:39.290365Z", "url": "https://files.pythonhosted.org/packages/8c/fe/010ff0616f9fe55d8973baea96cd8d129b7fb025ae159d0b3872d705efba/django-graphos-0.3.31.tar.gz", "yanked": false}], "0.3.32": [{"comment_text": "", "digests": {"md5": "16eba56883f069a74189a0fc8d442d7b", "sha256": "41dac42cf784a0c442af770940271e2475da03ac077b2b171de4361878ce7e0d"}, "downloads": -1, "filename": "django-graphos-0.3.32.tar.gz", "has_sig": false, "md5_digest": "16eba56883f069a74189a0fc8d442d7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74528, "upload_time": "2017-02-14T05:38:59", "upload_time_iso_8601": "2017-02-14T05:38:59.289036Z", "url": "https://files.pythonhosted.org/packages/e0/fb/bbe879ed549ea9837e9fc0653f0e33bddf4db6a71a1f45f7f3813efaba81/django-graphos-0.3.32.tar.gz", "yanked": false}], "0.3.33": [{"comment_text": "", "digests": {"md5": "fa6059cf3207d28c68edf39abee4f16d", "sha256": "847dc689ee09595c7731751651ecbf046090bf23cc398da217e4d7b0aa876fe2"}, "downloads": -1, "filename": "django-graphos-0.3.33.tar.gz", "has_sig": false, "md5_digest": "fa6059cf3207d28c68edf39abee4f16d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74587, "upload_time": "2017-02-15T06:55:11", "upload_time_iso_8601": "2017-02-15T06:55:11.960359Z", "url": "https://files.pythonhosted.org/packages/cf/c9/6528608e2341e7ed48ba91b1a75e0f9c8b2104fc7f9f4f70b7b0f998b100/django-graphos-0.3.33.tar.gz", "yanked": false}], "0.3.34": [{"comment_text": "", "digests": {"md5": "8a85d165ffc7d4d253c529e916e00ded", "sha256": "b9dc77a8070b4ab035307b2e637677824f59b8a223578e014755023226e85f79"}, "downloads": -1, "filename": "django-graphos-0.3.34.tar.gz", "has_sig": false, "md5_digest": "8a85d165ffc7d4d253c529e916e00ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74762, "upload_time": "2017-02-17T07:14:54", "upload_time_iso_8601": "2017-02-17T07:14:54.978313Z", "url": "https://files.pythonhosted.org/packages/a7/ed/36ec89857953b5ebf4b30f51e0927233321453e741c192aa54c05883a1bc/django-graphos-0.3.34.tar.gz", "yanked": false}], "0.3.35": [{"comment_text": "", "digests": {"md5": "7473804e315364cffb91428f9bdd2ecb", "sha256": "0e782e5dd2a3a6332b40ca576d273998e7850536c86231c06de4fc53b3eb2386"}, "downloads": -1, "filename": "django-graphos-0.3.35.tar.gz", "has_sig": false, "md5_digest": "7473804e315364cffb91428f9bdd2ecb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74795, "upload_time": "2017-02-17T07:56:00", "upload_time_iso_8601": "2017-02-17T07:56:00.089461Z", "url": "https://files.pythonhosted.org/packages/ac/23/095d7135d8cc8e779004824b43c029434191ea1cb7c91e58a79f180371df/django-graphos-0.3.35.tar.gz", "yanked": false}], "0.3.36": [{"comment_text": "", "digests": {"md5": "a3f845f10f1caebe9fc34acc2403ae06", "sha256": "141d5f4c4a3e28b250a5e8fc97c0a5dbf4d3e22d69fd8c896872ad055c6f9d42"}, "downloads": -1, "filename": "django-graphos-0.3.36.tar.gz", "has_sig": false, "md5_digest": "a3f845f10f1caebe9fc34acc2403ae06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74984, "upload_time": "2017-02-19T04:15:25", "upload_time_iso_8601": "2017-02-19T04:15:25.915275Z", "url": "https://files.pythonhosted.org/packages/e9/6a/a995fde6f8217de83f750e4151212639bfd13708bf01d7f6bddf2a6edfd2/django-graphos-0.3.36.tar.gz", "yanked": false}], "0.3.37": [{"comment_text": "", "digests": {"md5": "3be408b083e1e649dd0c15ac4d70bb37", "sha256": "ae605cf2727dc68643757671f2284843214ca99cc64d76a3f23226ed60d36cda"}, "downloads": -1, "filename": "django-graphos-0.3.37.tar.gz", "has_sig": false, "md5_digest": "3be408b083e1e649dd0c15ac4d70bb37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75053, "upload_time": "2017-02-19T18:43:45", "upload_time_iso_8601": "2017-02-19T18:43:45.783896Z", "url": "https://files.pythonhosted.org/packages/69/61/32467091c17128b2e9f2b4b0e2c8e50a901e55abd6629d52c054e141bdb3/django-graphos-0.3.37.tar.gz", "yanked": false}], "0.3.38": [{"comment_text": "", "digests": {"md5": "4625d4177112f662eab9910fd3a8ff42", "sha256": "80e20f0df3051cda13e7308f10b25b557ea1b59402c9e7b3fc7fa0c9fb14b690"}, "downloads": -1, "filename": "django-graphos-0.3.38.tar.gz", "has_sig": false, "md5_digest": "4625d4177112f662eab9910fd3a8ff42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75454, "upload_time": "2017-03-02T16:58:44", "upload_time_iso_8601": "2017-03-02T16:58:44.197617Z", "url": "https://files.pythonhosted.org/packages/25/d3/8233bfdddad84366a2ca3fb6663d633fcc535372017d9b21f4ee6f940dd6/django-graphos-0.3.38.tar.gz", "yanked": false}], "0.3.39": [{"comment_text": "", "digests": {"md5": "d4c5ea40de3706e7fdcf9a57b04dc0a9", "sha256": "c0a2f21e7b09614e1641b21c226693753f03f758c9097b6c41721b0066edc44e"}, "downloads": -1, "filename": "django-graphos-0.3.39.tar.gz", "has_sig": false, "md5_digest": "d4c5ea40de3706e7fdcf9a57b04dc0a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75487, "upload_time": "2017-03-02T18:11:02", "upload_time_iso_8601": "2017-03-02T18:11:02.157127Z", "url": "https://files.pythonhosted.org/packages/73/36/aec38068ae2ea0df7a01f188cbdc1d9f9076aac41478b8a0ff38d6ef2431/django-graphos-0.3.39.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "44f5a70a9535130da76acecd01e161a3", "sha256": "545b803eea943425fe60318f7e04749d87f36834d165c402f7b21561bf523b5a"}, "downloads": -1, "filename": "django-graphos-0.3.4.tar.gz", "has_sig": false, "md5_digest": "44f5a70a9535130da76acecd01e161a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 63550, "upload_time": "2016-10-24T09:31:49", "upload_time_iso_8601": "2016-10-24T09:31:49.203494Z", "url": "https://files.pythonhosted.org/packages/d5/09/a4e1172ddbb87fdb75970136da8cd84e2bf55e10b8741bc7f9bdea467bb9/django-graphos-0.3.4.tar.gz", "yanked": false}], "0.3.40": [{"comment_text": "", "digests": {"md5": "685fa745e4af7e0020b5a6221d7a211e", "sha256": "9d387f06cf3adf749ab47a8a1d5ca22e32d955c32996a2e592ec59734e9153f8"}, "downloads": -1, "filename": "django-graphos-0.3.40.tar.gz", "has_sig": false, "md5_digest": "685fa745e4af7e0020b5a6221d7a211e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75511, "upload_time": "2017-03-03T08:10:45", "upload_time_iso_8601": "2017-03-03T08:10:45.821992Z", "url": "https://files.pythonhosted.org/packages/1d/c9/bea1f4d3510dd0c563af34c866b00479ea2a668163f54ab00e14f8f03470/django-graphos-0.3.40.tar.gz", "yanked": false}], "0.3.41": [{"comment_text": "", "digests": {"md5": "52c47e61252bebec7b39da01d734d251", "sha256": "b37b1a007991cc0d16a218430661fc99e1b6cb9b3b6be21d8429a80d9054326d"}, "downloads": -1, "filename": "django-graphos-0.3.41.tar.gz", "has_sig": false, "md5_digest": "52c47e61252bebec7b39da01d734d251", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75768, "upload_time": "2017-03-03T16:59:08", "upload_time_iso_8601": "2017-03-03T16:59:08.450819Z", "url": "https://files.pythonhosted.org/packages/ea/a9/60c03b7c5191f0066d491f54be216d7523ec1d71ce1148750d22309c564a/django-graphos-0.3.41.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "1535fee40d97da9fe614e8fd1583f851", "sha256": "08f330e644ae8508a33ff0e57d4ea2df33eddb9a3bec0f2d1ec4f705e96ed0d6"}, "downloads": -1, "filename": "django-graphos-0.3.5.tar.gz", "has_sig": false, "md5_digest": "1535fee40d97da9fe614e8fd1583f851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69502, "upload_time": "2016-10-25T08:26:49", "upload_time_iso_8601": "2016-10-25T08:26:49.784599Z", "url": "https://files.pythonhosted.org/packages/78/57/e56c42b6280658ff16c28808aff8f4d40dade553c6f5fcff121bf259ce2c/django-graphos-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "e53152195b23874a4a36eaeedec64531", "sha256": "7ff8b0ed7e8589c393aed2f9768933427f0ebd5c2a6bc2829223916e907ebfaa"}, "downloads": -1, "filename": "django-graphos-0.3.6.tar.gz", "has_sig": false, "md5_digest": "e53152195b23874a4a36eaeedec64531", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69522, "upload_time": "2016-11-03T16:40:13", "upload_time_iso_8601": "2016-11-03T16:40:13.813795Z", "url": "https://files.pythonhosted.org/packages/d6/4f/77598f334c6c92c21fede30407f8b73c1fc89c5736c0ab4432b5af0e53db/django-graphos-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "bf4b58993308b13be682665e318b649d", "sha256": "01f18b1b04b35bed597bd5ed3e6da6d28df839ccc5661c2cb397841fc4d4f898"}, "downloads": -1, "filename": "django-graphos-0.3.7.tar.gz", "has_sig": false, "md5_digest": "bf4b58993308b13be682665e318b649d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69696, "upload_time": "2016-11-09T09:51:22", "upload_time_iso_8601": "2016-11-09T09:51:22.931357Z", "url": "https://files.pythonhosted.org/packages/b5/57/44ae6e83e6d3d293593cb49aca905ad280ea61c8e989b3864a06c218b77c/django-graphos-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "bc47623fa652078e389fc077afa9fa21", "sha256": "de5c981b124f2fb86cf4c0abcff9b0cef2def40dd3408796ee57b8aff09e4011"}, "downloads": -1, "filename": "django-graphos-0.3.8.tar.gz", "has_sig": false, "md5_digest": "bc47623fa652078e389fc077afa9fa21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69823, "upload_time": "2016-11-22T17:18:20", "upload_time_iso_8601": "2016-11-22T17:18:20.539587Z", "url": "https://files.pythonhosted.org/packages/bf/bc/5d91f4383499b47341e8a80039c4c2fd9b8e1c0dc5776ca1257e857864fb/django-graphos-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "0c049f0c5f99ea00a8603218231a4c60", "sha256": "7b993b908c99bea0883b9d290d7df5d5ba92c77cd60ca98b16e9a2562dbfe19d"}, "downloads": -1, "filename": "django-graphos-0.3.9.tar.gz", "has_sig": false, "md5_digest": "0c049f0c5f99ea00a8603218231a4c60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69953, "upload_time": "2016-11-23T12:59:10", "upload_time_iso_8601": "2016-11-23T12:59:10.588314Z", "url": "https://files.pythonhosted.org/packages/02/ac/b586f47ee3b99c943ab6e453b195e2d1c9ee5625f351be082890c141a039/django-graphos-0.3.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "52c47e61252bebec7b39da01d734d251", "sha256": "b37b1a007991cc0d16a218430661fc99e1b6cb9b3b6be21d8429a80d9054326d"}, "downloads": -1, "filename": "django-graphos-0.3.41.tar.gz", "has_sig": false, "md5_digest": "52c47e61252bebec7b39da01d734d251", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 75768, "upload_time": "2017-03-03T16:59:08", "upload_time_iso_8601": "2017-03-03T16:59:08.450819Z", "url": "https://files.pythonhosted.org/packages/ea/a9/60c03b7c5191f0066d491f54be216d7523ec1d71ce1148750d22309c564a/django-graphos-0.3.41.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:48 2020"}