{"info": {"author": "Karl Lapo and Anita Freundorfer", "author_email": "karl.lapo@uni-bayreuth.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "# pyfocs\n\nversion==version==0.2.1.\n\npyfocs has been known by btmm_process (obscure non-pythonic name) and pyfox (an unmaintained package on PyPi) resulting in the new name for the library.\n\n# Getting Started\n\n## Installation\n\nThis installation assumes you have the anaconda distribution of python. If you do not have anaconda see the basic [troubleshooting section](#Troubleshooting).\n\n### Using a package manager\npyfocs can be installed by using:\n\n`pip install pyfocs`\n\nwhich installs pyfocs plus all dependencies. This install method has caused problems for Windows OS. If you encounter errors when running pyfocs using this method, we instead recommend following the below method. If installing through pip and using an anaconda environment, then this step should be performed after installing all necessary conda packages, preferably in a new anaconda environment. [`pip` and `conda` can create conflicts in the packages, especially if used interchangeably multiple times.](https://www.anaconda.com/using-pip-in-a-conda-environment/).\n\n### From source\nAlternatively you can download the source code from this repository (green button with \"Clone or Download\"), extract the package, navigate to the directory containing it, and run:\n\n`python setup.py install`\n\nNote that Windows users will need to use anaconda power prompt or a similar python environment.\n\nBoth methods should result in the `PyFOX.py` being callable from the command line.\n\n### Dependency issues\nPlease see the [troubleshooting section](#Troubleshooting). For issues not covered there please raise an issue and include details on your own system, your python version, and the versions of the packages pyfocs requires.\n\n## Example\n\nDownload the data in the `example` directory. Within that directory is an example configuration file in yaml format. Adjust the `dir_pre` and `external` paths to be those of the example folder. Then, you should be able to run\n\n`PyFOX.py path/to/example_configuration.yml`\n\nAlternatively, providing no path to the yaml file will open a file browser for selecting the configuration file.\n\n# Overview\n\nThe Bayreuth Micrometeorology python library for processing Fiber Optic Distributed Sensing (FODS) data. The library consists of a family of simple functions and a master script (`PyFOX`) that can be used to process output from a Silixa Distribute Temperature Sensing (DTS) device, such as an Ultima or XT, from the original `*.xml` files to calibrated temperatures with physical labels. This library is built around the [xarray](http://xarray.pydata.org) package for handling n-dimensional data, especially in a netcdf format.\n\n## Other libraries\n\nOther similar libraries exist, such as the [one developed at Delft University](https://github.com/bdestombe/python-geotechnical-profile), which can be more useful for some applications, especially those with double-ended configurations.\n\n# PyFOX Steps\n\nData and the surrounding directory structure is assumed to follow this outline.\n![](data_structure_scheme.jpg).\n\nEach Subdirectory corresponds to a particular step in the processing.\n\n1) Archives original `.xml` files into specified time interval.\n\n2) Creates netcdfs of the raw data, including the instrument reported temperature, stokes intensity, and anti-stokes intensity. Dimensions of Length Along the Fiber, `LAF`, and time.\n\n3) Labels the data, integrates external data streams and other reference data, performs step-loss corrections, performs single ended calibration based on Hausner et al., (2011). Splits multicore data into individual cores. Reports instrument reported temperature, calibrated temperature, log-power ratio of stoke and anti-stokes intensities, stokes intensity, anti-stokes intensities, and all data labels. Dimensions are `LAF` and `time`. New coordinates specified by location type in the location library can be used to label the data along with a `number of labels` by `number of LAF` coordinate.\n\n4) Converts data labels with physical coordinates. Drops the LAF label and only includes the physical location (`xyz`) and `time`. Each `core` dimension is saved as a separate netcdf. Cores do not share the `xyz` dimension and must be aligned with each other. They do share the `time` dimension.\n\n## Example jupyter notebook\n\nFor space reasons we only include the data for following steps 2-4 in the example notebook. The example notebook walks through the iterative approach for processing FODS data.\n\n### References\n\nHausner, M. B., Su\u00e1rez, F., Glander, K. E., & Giesen, N. Van De. (2011). Calibrating Single-Ended Fiber-Optic Raman Spectra Distributed Temperature Sensing Data. Sensors, 11, 10859\u201310879. https://doi.org/10.3390/s111110859\n\n### Muppet Archiver\n\nBatch script for scheduled archiving of `.xml` files on the Silixa DTS devices. Why muppet? Unviersity of Bayreuth Micrometeorology names their Silixa devices after muppet characters. Requires an anaconda 3.* distribution of python. Task scheduler must point to the `.bat` script and not the python script.\n\n## <a name=\"Troubleshooting\"></a>Troubleshooting/First time with python\n\n### Install the anaconda version of python\nhttps://www.anaconda.com/distribution/#download-section\n\nYou should be prompted to install python for your particular OS. Install version 3.7*.\n\n## PyYAML updating\nAn error in an old version of pip stops the updating of PyYAML. If you get an error related to this library you can solve it with:\n\n`pip install --ignore-installed PyYAML`\n\n### Windows specific stuff\nYou will always need to use the anaconda power prompt or a similar environment. You will find it difficult/impossible to run python outside of the anaconda environment.\n\nFrom https://www.correlatedsolutions.com/support/index.php?/Knowledgebase/Article/View/85/1/running-python-scripts-from-anywhere-under-windows\n\n```\nFor the first time, windows asks what application to use to run *.py files.\nSelect python in Anaconda directory: make sure check box \"Always use this app to open .py files\" is checked\nClick \"More Apps\"\nClick \"Look for another app on this PC\"\nFind path to anaconda python, e.g. \"C:\\Users\\Your Name\\Anaconda3\\python\"\nClick \"Open\"\nClick \"OK\"\n```\n\nOther issues may be related to running the anaconda prompt without administrator issues.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/klapo/pyfocs", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyfocs", "package_url": "https://pypi.org/project/pyfocs/", "platform": "", "project_url": "https://pypi.org/project/pyfocs/", "project_urls": {"Changelog": "https://github.com/klapo/pyfocs/blob/master/CHANGELOG.rst", "Homepage": "https://github.com/klapo/pyfocs", "Issue Tracker": "https://github.com/klapo/pyfocs/issues"}, "release_url": "https://pypi.org/project/pyfocs/0.2.1/", "requires_dist": ["numpy", "pandas", "scipy", "netcdf4", "xarray", "xmltodict", "pyyaml (>=5.1)", "matplotlib (>3)"], "requires_python": ">=3.5", "summary": "Processing of meteorological FODS data.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyfocs</h1>\n<p>version==version==0.2.1.</p>\n<p>pyfocs has been known by btmm_process (obscure non-pythonic name) and pyfox (an unmaintained package on PyPi) resulting in the new name for the library.</p>\n<h1>Getting Started</h1>\n<h2>Installation</h2>\n<p>This installation assumes you have the anaconda distribution of python. If you do not have anaconda see the basic <a href=\"#Troubleshooting\" rel=\"nofollow\">troubleshooting section</a>.</p>\n<h3>Using a package manager</h3>\n<p>pyfocs can be installed by using:</p>\n<p><code>pip install pyfocs</code></p>\n<p>which installs pyfocs plus all dependencies. This install method has caused problems for Windows OS. If you encounter errors when running pyfocs using this method, we instead recommend following the below method. If installing through pip and using an anaconda environment, then this step should be performed after installing all necessary conda packages, preferably in a new anaconda environment. <a href=\"https://www.anaconda.com/using-pip-in-a-conda-environment/\" rel=\"nofollow\"><code>pip</code> and <code>conda</code> can create conflicts in the packages, especially if used interchangeably multiple times.</a>.</p>\n<h3>From source</h3>\n<p>Alternatively you can download the source code from this repository (green button with \"Clone or Download\"), extract the package, navigate to the directory containing it, and run:</p>\n<p><code>python setup.py install</code></p>\n<p>Note that Windows users will need to use anaconda power prompt or a similar python environment.</p>\n<p>Both methods should result in the <code>PyFOX.py</code> being callable from the command line.</p>\n<h3>Dependency issues</h3>\n<p>Please see the <a href=\"#Troubleshooting\" rel=\"nofollow\">troubleshooting section</a>. For issues not covered there please raise an issue and include details on your own system, your python version, and the versions of the packages pyfocs requires.</p>\n<h2>Example</h2>\n<p>Download the data in the <code>example</code> directory. Within that directory is an example configuration file in yaml format. Adjust the <code>dir_pre</code> and <code>external</code> paths to be those of the example folder. Then, you should be able to run</p>\n<p><code>PyFOX.py path/to/example_configuration.yml</code></p>\n<p>Alternatively, providing no path to the yaml file will open a file browser for selecting the configuration file.</p>\n<h1>Overview</h1>\n<p>The Bayreuth Micrometeorology python library for processing Fiber Optic Distributed Sensing (FODS) data. The library consists of a family of simple functions and a master script (<code>PyFOX</code>) that can be used to process output from a Silixa Distribute Temperature Sensing (DTS) device, such as an Ultima or XT, from the original <code>*.xml</code> files to calibrated temperatures with physical labels. This library is built around the <a href=\"http://xarray.pydata.org\" rel=\"nofollow\">xarray</a> package for handling n-dimensional data, especially in a netcdf format.</p>\n<h2>Other libraries</h2>\n<p>Other similar libraries exist, such as the <a href=\"https://github.com/bdestombe/python-geotechnical-profile\" rel=\"nofollow\">one developed at Delft University</a>, which can be more useful for some applications, especially those with double-ended configurations.</p>\n<h1>PyFOX Steps</h1>\n<p>Data and the surrounding directory structure is assumed to follow this outline.\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/54cbad3232408f2b5fce0d3f9ea1c4dc62e7e8eb/646174615f7374727563747572655f736368656d652e6a7067\">.</p>\n<p>Each Subdirectory corresponds to a particular step in the processing.</p>\n<ol>\n<li>\n<p>Archives original <code>.xml</code> files into specified time interval.</p>\n</li>\n<li>\n<p>Creates netcdfs of the raw data, including the instrument reported temperature, stokes intensity, and anti-stokes intensity. Dimensions of Length Along the Fiber, <code>LAF</code>, and time.</p>\n</li>\n<li>\n<p>Labels the data, integrates external data streams and other reference data, performs step-loss corrections, performs single ended calibration based on Hausner et al., (2011). Splits multicore data into individual cores. Reports instrument reported temperature, calibrated temperature, log-power ratio of stoke and anti-stokes intensities, stokes intensity, anti-stokes intensities, and all data labels. Dimensions are <code>LAF</code> and <code>time</code>. New coordinates specified by location type in the location library can be used to label the data along with a <code>number of labels</code> by <code>number of LAF</code> coordinate.</p>\n</li>\n<li>\n<p>Converts data labels with physical coordinates. Drops the LAF label and only includes the physical location (<code>xyz</code>) and <code>time</code>. Each <code>core</code> dimension is saved as a separate netcdf. Cores do not share the <code>xyz</code> dimension and must be aligned with each other. They do share the <code>time</code> dimension.</p>\n</li>\n</ol>\n<h2>Example jupyter notebook</h2>\n<p>For space reasons we only include the data for following steps 2-4 in the example notebook. The example notebook walks through the iterative approach for processing FODS data.</p>\n<h3>References</h3>\n<p>Hausner, M. B., Su\u00e1rez, F., Glander, K. E., &amp; Giesen, N. Van De. (2011). Calibrating Single-Ended Fiber-Optic Raman Spectra Distributed Temperature Sensing Data. Sensors, 11, 10859\u201310879. <a href=\"https://doi.org/10.3390/s111110859\" rel=\"nofollow\">https://doi.org/10.3390/s111110859</a></p>\n<h3>Muppet Archiver</h3>\n<p>Batch script for scheduled archiving of <code>.xml</code> files on the Silixa DTS devices. Why muppet? Unviersity of Bayreuth Micrometeorology names their Silixa devices after muppet characters. Requires an anaconda 3.* distribution of python. Task scheduler must point to the <code>.bat</code> script and not the python script.</p>\n<h2><a></a>Troubleshooting/First time with python</h2>\n<h3>Install the anaconda version of python</h3>\n<p><a href=\"https://www.anaconda.com/distribution/#download-section\" rel=\"nofollow\">https://www.anaconda.com/distribution/#download-section</a></p>\n<p>You should be prompted to install python for your particular OS. Install version 3.7*.</p>\n<h2>PyYAML updating</h2>\n<p>An error in an old version of pip stops the updating of PyYAML. If you get an error related to this library you can solve it with:</p>\n<p><code>pip install --ignore-installed PyYAML</code></p>\n<h3>Windows specific stuff</h3>\n<p>You will always need to use the anaconda power prompt or a similar environment. You will find it difficult/impossible to run python outside of the anaconda environment.</p>\n<p>From <a href=\"https://www.correlatedsolutions.com/support/index.php?/Knowledgebase/Article/View/85/1/running-python-scripts-from-anywhere-under-windows\" rel=\"nofollow\">https://www.correlatedsolutions.com/support/index.php?/Knowledgebase/Article/View/85/1/running-python-scripts-from-anywhere-under-windows</a></p>\n<pre><code>For the first time, windows asks what application to use to run *.py files.\nSelect python in Anaconda directory: make sure check box \"Always use this app to open .py files\" is checked\nClick \"More Apps\"\nClick \"Look for another app on this PC\"\nFind path to anaconda python, e.g. \"C:\\Users\\Your Name\\Anaconda3\\python\"\nClick \"Open\"\nClick \"OK\"\n</code></pre>\n<p>Other issues may be related to running the anaconda prompt without administrator issues.</p>\n\n          </div>"}, "last_serial": 6968817, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8a401fd4c1805cbc6f2e91fe1b2c305b", "sha256": "e123f39409abb72432b8a0d8f264d9b3dc5a8d94a9603b282c18371dbe020e4b"}, "downloads": -1, "filename": "pyfocs-0.1-py3.6.egg", "has_sig": false, "md5_digest": "8a401fd4c1805cbc6f2e91fe1b2c305b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 28556, "upload_time": "2019-10-04T13:34:20", "upload_time_iso_8601": "2019-10-04T13:34:20.423403Z", "url": "https://files.pythonhosted.org/packages/9a/d8/04cd00f4ca6fad8160b8b8d75cdc8b69aa7b9a56963538cb1eb0e6192ec8/pyfocs-0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c0e9b691b6319fd91a9e2137335fa8f", "sha256": "569ef22c5bf1b7b4ce1b87b959d88c77a81ef5e7ff81d68378d9e77e7b725598"}, "downloads": -1, "filename": "pyfocs-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1c0e9b691b6319fd91a9e2137335fa8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16111, "upload_time": "2019-10-04T13:34:17", "upload_time_iso_8601": "2019-10-04T13:34:17.343533Z", "url": "https://files.pythonhosted.org/packages/95/de/4a3d93634f9e7a79fd2faffd799f69d3f13a05dff9cf17b0d933d4f60955/pyfocs-0.1-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7a9770a1ea5ddf2fb669e082a977e933", "sha256": "953d9a6ba8c02fabec9acd233a20d4b8a7388961a3ffe02bc3ab471d758e63ef"}, "downloads": -1, "filename": "pyfocs-0.1.1-py3.6.egg", "has_sig": false, "md5_digest": "7a9770a1ea5ddf2fb669e082a977e933", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 34830, "upload_time": "2019-10-04T13:49:32", "upload_time_iso_8601": "2019-10-04T13:49:32.711040Z", "url": "https://files.pythonhosted.org/packages/31/32/fa460638f8e72eb3a927571a579c4c956dd2a93165495e458f33595ccfc0/pyfocs-0.1.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cda28c5d1e589a7826b4594a69c7fb5", "sha256": "f278ec2e30acabb8d734c0aa201749c45c6904aa1d76eb234d2aa8309547dbee"}, "downloads": -1, "filename": "pyfocs-0.1.1-py3.7.egg", "has_sig": false, "md5_digest": "5cda28c5d1e589a7826b4594a69c7fb5", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 34876, "upload_time": "2019-10-04T16:11:50", "upload_time_iso_8601": "2019-10-04T16:11:50.982883Z", "url": "https://files.pythonhosted.org/packages/53/5b/03f29168b322c41dc71bfff1394bc7a300dd6dc11665a033a465f7c6ac7d/pyfocs-0.1.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8ee4b05e0c90d17637c859e7a1acd2c", "sha256": "b6a04dacc215d64066c1e0fbe58d496fe93c58ec1a2bf8fc36a4d42719bd78d7"}, "downloads": -1, "filename": "pyfocs-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e8ee4b05e0c90d17637c859e7a1acd2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22492, "upload_time": "2019-10-04T13:49:31", "upload_time_iso_8601": "2019-10-04T13:49:31.198783Z", "url": "https://files.pythonhosted.org/packages/f2/bd/486327684f0b2d8e2cc915a5f9980914c0279d8307ea99ef81c334160fb2/pyfocs-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.1b0": [{"comment_text": "", "digests": {"md5": "c2cb5e8defb85844f9e6f8f0ffa424e4", "sha256": "801e53ee48d7ac8d15cb77c0a5649ee988525409633f900371c9ba447dd3812d"}, "downloads": -1, "filename": "pyfocs-0.1.1b0-py3.6.egg", "has_sig": false, "md5_digest": "c2cb5e8defb85844f9e6f8f0ffa424e4", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 34822, "upload_time": "2019-10-04T16:55:56", "upload_time_iso_8601": "2019-10-04T16:55:56.591052Z", "url": "https://files.pythonhosted.org/packages/59/d5/4664a870e2b9d294885e4205a453ea0867cf1680d499fd1e75544e8cbbd5/pyfocs-0.1.1b0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "68e809876e11a9f7e244463520f7d36d", "sha256": "06107527369d8b413c889f808193e2cf56fa215d09b918f10b5800bc60c4f19e"}, "downloads": -1, "filename": "pyfocs-0.1.1b0-py3.7.egg", "has_sig": false, "md5_digest": "68e809876e11a9f7e244463520f7d36d", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 34870, "upload_time": "2019-10-04T16:55:58", "upload_time_iso_8601": "2019-10-04T16:55:58.437073Z", "url": "https://files.pythonhosted.org/packages/7a/5a/5f724ff06a1c0e36c609315315ae9d11dd9eba7acf27f393ce72adee62be/pyfocs-0.1.1b0-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e9ac33367ef574275de093d50fbae3e", "sha256": "326d084ff781d7ed36f95bce3f2995ebc16a603ff523e20bd2e062bebb17f3aa"}, "downloads": -1, "filename": "pyfocs-0.1.1b0-py3-none-any.whl", "has_sig": false, "md5_digest": "5e9ac33367ef574275de093d50fbae3e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22497, "upload_time": "2019-10-04T16:11:49", "upload_time_iso_8601": "2019-10-04T16:11:49.387372Z", "url": "https://files.pythonhosted.org/packages/ee/2e/a92eda31374c08e5808f37230bf6ab5a0ae77c497f2348798fc7d421d309/pyfocs-0.1.1b0-py3-none-any.whl", "yanked": false}], "0.1.1rc0": [{"comment_text": "", "digests": {"md5": "50bbf0b16db5945e522565a7d2b35fa9", "sha256": "17ee9f85457704464c20f30ad83880760f77aea3124fdc8a8692f531760de54e"}, "downloads": -1, "filename": "pyfocs-0.1.1rc0-py3.6.egg", "has_sig": false, "md5_digest": "50bbf0b16db5945e522565a7d2b35fa9", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 35279, "upload_time": "2019-10-04T16:56:00", "upload_time_iso_8601": "2019-10-04T16:56:00.175263Z", "url": "https://files.pythonhosted.org/packages/b5/8c/b51ba3b43b1ed1a38ae7e5de94217b87958507ca5a9738d326e635b65ab5/pyfocs-0.1.1rc0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "caec8967c499ba15f48a15ab276a5da4", "sha256": "5745089dda0e951836fcfaa78b41c64bee064b3bc3172fa1fb481fbc7a3487cf"}, "downloads": -1, "filename": "pyfocs-0.1.1rc0-py3-none-any.whl", "has_sig": false, "md5_digest": "caec8967c499ba15f48a15ab276a5da4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22940, "upload_time": "2019-10-04T16:55:54", "upload_time_iso_8601": "2019-10-04T16:55:54.826781Z", "url": "https://files.pythonhosted.org/packages/c3/8c/e811945133f81719040863304f262a04342b6a3dd12a448f5a8fa3409e70/pyfocs-0.1.1rc0-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4f603053a10af3a7eb553d5dc52daa1b", "sha256": "0af8cfff3db9c1b9b53b0c7d0e881c15af34313f4e209edaaa6d892e7d252824"}, "downloads": -1, "filename": "pyfocs-0.1.2-py3.6.egg", "has_sig": false, "md5_digest": "4f603053a10af3a7eb553d5dc52daa1b", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 35255, "upload_time": "2019-10-04T17:07:01", "upload_time_iso_8601": "2019-10-04T17:07:01.100445Z", "url": "https://files.pythonhosted.org/packages/a3/d5/628a0beeeed344b89093dc390d51c3cb302b480ca24dda4978134e7c1361/pyfocs-0.1.2-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "be9cfe6c0866a180c979fa28212b5360", "sha256": "e52ac1b31a193017400e72c848c9d271787b726ba9ec249d281c42efb7cff783"}, "downloads": -1, "filename": "pyfocs-0.1.2-py3.7.egg", "has_sig": false, "md5_digest": "be9cfe6c0866a180c979fa28212b5360", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 39490, "upload_time": "2019-10-09T10:35:34", "upload_time_iso_8601": "2019-10-09T10:35:34.166722Z", "url": "https://files.pythonhosted.org/packages/b5/81/9d9f60b38ae6433939fe490b6a052fcd86d3bad0f66d3a670a29e0587d13/pyfocs-0.1.2-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d56bee0d3a70832b279ba3681cdc8045", "sha256": "94dec34adab6f6f4a5e958cfa447003600bc54f28d654888d9d1e4de1ea4f5c7"}, "downloads": -1, "filename": "pyfocs-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d56bee0d3a70832b279ba3681cdc8045", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22897, "upload_time": "2019-10-04T17:06:56", "upload_time_iso_8601": "2019-10-04T17:06:56.388993Z", "url": "https://files.pythonhosted.org/packages/af/b0/e7f7401b184c1964640fa379aaef03cbff760b00c592ccea416a32c80595/pyfocs-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4f0c0033ac32e19a84bcf8e8fb3c82a0", "sha256": "a3fd62c24f08646756d65c4d21e5932f9938cb2e55b4a5b612aba376e9ca4c32"}, "downloads": -1, "filename": "pyfocs-0.1.3-py3.7.egg", "has_sig": false, "md5_digest": "4f0c0033ac32e19a84bcf8e8fb3c82a0", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 39692, "upload_time": "2019-10-09T10:35:35", "upload_time_iso_8601": "2019-10-09T10:35:35.950781Z", "url": "https://files.pythonhosted.org/packages/39/f4/1f4fae354925458d4fa4cf669e261a9d4fd6132502c15635a9acecb0f0f2/pyfocs-0.1.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfed2a0b79125c54956df983350894d6", "sha256": "604e302d0d746130d8a3188c272f474dd16ce8c14392eb3e9e5895eb81040869"}, "downloads": -1, "filename": "pyfocs-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "bfed2a0b79125c54956df983350894d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25502, "upload_time": "2019-10-09T10:35:32", "upload_time_iso_8601": "2019-10-09T10:35:32.074021Z", "url": "https://files.pythonhosted.org/packages/ae/2e/2407dae7db5d9055657924f454afd80faecf69cd6be4866af55430069f5f/pyfocs-0.1.3-py3-none-any.whl", "yanked": false}], "0.1.3.1": [{"comment_text": "", "digests": {"md5": "25d2a9206dc0ae1d734d2485bd5ff2f8", "sha256": "8daab7f6124b6680fadecd9d489ff031f918473b644e866b3d00858d601d7814"}, "downloads": -1, "filename": "pyfocs-0.1.3.1-py3.7.egg", "has_sig": false, "md5_digest": "25d2a9206dc0ae1d734d2485bd5ff2f8", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 39719, "upload_time": "2019-10-09T10:40:07", "upload_time_iso_8601": "2019-10-09T10:40:07.702780Z", "url": "https://files.pythonhosted.org/packages/0e/26/91c00f52166f24cec098d50728312fcb126305136c4dfd18f58e1d88d7b8/pyfocs-0.1.3.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3da7193cb14ccad4aee52452f57a4b1f", "sha256": "eb5d07c389d441f02ea5987618a7d995abd948f2d24937169aa14b63b753e893"}, "downloads": -1, "filename": "pyfocs-0.1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3da7193cb14ccad4aee52452f57a4b1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25533, "upload_time": "2019-10-09T10:40:05", "upload_time_iso_8601": "2019-10-09T10:40:05.671083Z", "url": "https://files.pythonhosted.org/packages/5b/93/f507f09dbf57ee20a90698b2c6039696f61c0eb8b7b0d8fd745142ee60de/pyfocs-0.1.3.1-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2e4f1a340c067693e91abfbadb988284", "sha256": "0b79502063a4af14a066090d811f91d0358b4b941dd0669e2f971c443e0d6663"}, "downloads": -1, "filename": "pyfocs-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e4f1a340c067693e91abfbadb988284", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 39414, "upload_time": "2020-04-07T11:44:37", "upload_time_iso_8601": "2020-04-07T11:44:37.367689Z", "url": "https://files.pythonhosted.org/packages/1c/02/acd2a9bda8721200cc3e359ca0a6b88c67838c384fe5ad4deae2be63a7d8/pyfocs-0.2.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e4f1a340c067693e91abfbadb988284", "sha256": "0b79502063a4af14a066090d811f91d0358b4b941dd0669e2f971c443e0d6663"}, "downloads": -1, "filename": "pyfocs-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e4f1a340c067693e91abfbadb988284", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 39414, "upload_time": "2020-04-07T11:44:37", "upload_time_iso_8601": "2020-04-07T11:44:37.367689Z", "url": "https://files.pythonhosted.org/packages/1c/02/acd2a9bda8721200cc3e359ca0a6b88c67838c384fe5ad4deae2be63a7d8/pyfocs-0.2.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:05:38 2020"}