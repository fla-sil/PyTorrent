{"info": {"author": "Keyi Zhang", "author_email": "keyi@cs.stanford.edu", "bugtrack_url": null, "classifiers": [], "description": "# Kratos Debugger Runtime\nThis is the runtime library required to debug Kratos hardware designs. It\noffers realtime interaction between the simulator and a debugger, which\ncan either be Visual Studio Code, or any debugger that talks HTTP REST\nprotocol.\n\nThis library also ships with a Python API which you can use in your Python\ncode to control the simulator. It does not implement the full-feature of\nall the protocols the runtime supports, but it's a good place to start if\nyou are going to implement your own debugger to interface the runtime.\n\n## How to install kratos-runtime\nThere are a couple ways to install kratos-runtime. You\nneed a C++17 compatible compiler, such as `g++-8` to compile the library.\nThe Python API requires Python3 to run.\n\n### Install from PyPI\nIf you're using Linux, the easiest way to install is through pip. Do\n```Bash\npip install kratos-runtime\n```\nAfter installing, do\n```Bash\npython -c \"from kratos_runtime import get_lib_path; print(get_lib_path())\"\n```\nwhich will tell you where the pre-built library is and you can use that to\nlink to your design. You can also call `get_ncsim_flag()` to get necessary\nflags.\n\n### Build from source\nIf you want the built-in Python tools:\n```Bash\n$ git clone https://github.com/Kuree/kratos-runtime\n$ cd kratos-runtime\n$ git submodule update --init --recursive\n$ pip install .\n```\nIf you just want the runtime library, do:\n\n```Bash\n$ git clone https://github.com/Kuree/kratos-runtime\n$ cd kratos-runtime\n$ git submodule update --init --recursive\n$ mkdir build\n$ cd ./build\n$ cmake ..\n$ make -j\n```\n\nAfter that, you can find the library as `build/src/libkratos-runtime.so`. You\ncan either copy that library to any place you like or simply  use symbolic\nlink.\n\n#### A note for macOS\nDue to the restriction of macOS, all symbols have to be resolved during the linking\ntime, which means all the VPI calls need to have actual symbol when linked as the\nfinal shared object. However, this is not doable in our case since the actual VPI\nimplementation is offered by the vendor. As a result, you cannot use this project,\neven if you have Verilator working on macOS.\n\n## How to use kratos-runtime\nThe following instruction is based on Linux and tested against Verilator and\nncsim.\n\n## Generate Kratos-Runtime debug database for your design\nWhen calling `verilog()` function, you can supply another argument called \n`debug_db_filename` to specify the location where kratos can output the\ndebug files,\n```Python\nverilog(your_design, debug_db_filename=\"debug.db\", insert_debug_info=True)\n```\n\n### Using Kratos-runtime with Verilator\nOnce you have compiled the shared library, you can ask\n`verialtor` to link your test bench with `kratos-runtime`. Before you do that,\nsince we need to read the internal signals, we need to inject `verilator`\nspecific info via a pass:\n```Python\nkratos.passes.insert_verilator_public(your_design.internal_generator)\n```\n\nWhen invoking the `verilator` command, you need to specify the kratos runtime\nname as well as `--vpi` switch, for instance:\n```Bash\nverilator --cc design.sv test_tb.sv libkratos-runtime.so --vpi --exe\n```\n\nYou can symbolic link `libkratos-runtime.so` inside `obj_dir` so that the linker\nand find it easily.\n\nOnce the test bench is compiled, you need to use `LD_LIBRARY_PATH` to let the\nsystem to load, such as\n```\n$ LD_LIBRARY_PATH=./obj_dir/ ./obj_dir/Vtest\n```\nOr you can let the linker to fix the shared library path in the `verilator`,\nwhich is beyond the scope of this tutorial.\n\nAn alternative is to use the built-in Python helper class.\n\nYou can use `kratos_runtime.VerilatorTester` to run your verilator design.\n```Python\nwith VerilatorTester(*files, cwd=temp) as tester:\n    tester.run()\n```\nWhere `files` is a list of files. By default the `run()` is non-blocking, so\nyou can attach your debugger with the runtime.\n\n### Using kratos-runtime with Ncsim\nNcsim is much easier to use than `verilator`. Once you have the design, simply\ntell the simulator that you want to load the vpi and dpi library, such as\n\n```\nirun test_tb.sv test.sv -sv_lib libkratos-runtime.so -loadvpi libkratos-runtime.so:initialize_runtime_vpi -access +r\n```\n\n`-access +r` is necessary to allow the runtime to read out simulation variables.\n\nYou can also use `kratos_runtime.NCSimTester` to run your design.\n```Python\nwith NCSimTester(*files) as tester:\n    tester.run()\n```\n\n### What to do after launch the simulation\nYou can now use any debugger that's compatible with the Kratos debug protocol.\nKratos has provide an open-source version of debugger extension inside VS Code.\nYou can install it\n[here](https://marketplace.visualstudio.com/items?itemName=keyiz.kratos-vscode)\nand use it to debug your design.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Kuree/kratos-runtime", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "kratos-runtime", "package_url": "https://pypi.org/project/kratos-runtime/", "platform": "", "project_url": "https://pypi.org/project/kratos-runtime/", "project_urls": {"Homepage": "https://github.com/Kuree/kratos-runtime"}, "release_url": "https://pypi.org/project/kratos-runtime/0.0.7/", "requires_dist": null, "requires_python": "", "summary": "Kratos runtime for debugging", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Kratos Debugger Runtime</h1>\n<p>This is the runtime library required to debug Kratos hardware designs. It\noffers realtime interaction between the simulator and a debugger, which\ncan either be Visual Studio Code, or any debugger that talks HTTP REST\nprotocol.</p>\n<p>This library also ships with a Python API which you can use in your Python\ncode to control the simulator. It does not implement the full-feature of\nall the protocols the runtime supports, but it's a good place to start if\nyou are going to implement your own debugger to interface the runtime.</p>\n<h2>How to install kratos-runtime</h2>\n<p>There are a couple ways to install kratos-runtime. You\nneed a C++17 compatible compiler, such as <code>g++-8</code> to compile the library.\nThe Python API requires Python3 to run.</p>\n<h3>Install from PyPI</h3>\n<p>If you're using Linux, the easiest way to install is through pip. Do</p>\n<pre>pip install kratos-runtime\n</pre>\n<p>After installing, do</p>\n<pre>python -c <span class=\"s2\">\"from kratos_runtime import get_lib_path; print(get_lib_path())\"</span>\n</pre>\n<p>which will tell you where the pre-built library is and you can use that to\nlink to your design. You can also call <code>get_ncsim_flag()</code> to get necessary\nflags.</p>\n<h3>Build from source</h3>\n<p>If you want the built-in Python tools:</p>\n<pre>$ git clone https://github.com/Kuree/kratos-runtime\n$ <span class=\"nb\">cd</span> kratos-runtime\n$ git submodule update --init --recursive\n$ pip install .\n</pre>\n<p>If you just want the runtime library, do:</p>\n<pre>$ git clone https://github.com/Kuree/kratos-runtime\n$ <span class=\"nb\">cd</span> kratos-runtime\n$ git submodule update --init --recursive\n$ mkdir build\n$ <span class=\"nb\">cd</span> ./build\n$ cmake ..\n$ make -j\n</pre>\n<p>After that, you can find the library as <code>build/src/libkratos-runtime.so</code>. You\ncan either copy that library to any place you like or simply  use symbolic\nlink.</p>\n<h4>A note for macOS</h4>\n<p>Due to the restriction of macOS, all symbols have to be resolved during the linking\ntime, which means all the VPI calls need to have actual symbol when linked as the\nfinal shared object. However, this is not doable in our case since the actual VPI\nimplementation is offered by the vendor. As a result, you cannot use this project,\neven if you have Verilator working on macOS.</p>\n<h2>How to use kratos-runtime</h2>\n<p>The following instruction is based on Linux and tested against Verilator and\nncsim.</p>\n<h2>Generate Kratos-Runtime debug database for your design</h2>\n<p>When calling <code>verilog()</code> function, you can supply another argument called\n<code>debug_db_filename</code> to specify the location where kratos can output the\ndebug files,</p>\n<pre><span class=\"n\">verilog</span><span class=\"p\">(</span><span class=\"n\">your_design</span><span class=\"p\">,</span> <span class=\"n\">debug_db_filename</span><span class=\"o\">=</span><span class=\"s2\">\"debug.db\"</span><span class=\"p\">,</span> <span class=\"n\">insert_debug_info</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<h3>Using Kratos-runtime with Verilator</h3>\n<p>Once you have compiled the shared library, you can ask\n<code>verialtor</code> to link your test bench with <code>kratos-runtime</code>. Before you do that,\nsince we need to read the internal signals, we need to inject <code>verilator</code>\nspecific info via a pass:</p>\n<pre><span class=\"n\">kratos</span><span class=\"o\">.</span><span class=\"n\">passes</span><span class=\"o\">.</span><span class=\"n\">insert_verilator_public</span><span class=\"p\">(</span><span class=\"n\">your_design</span><span class=\"o\">.</span><span class=\"n\">internal_generator</span><span class=\"p\">)</span>\n</pre>\n<p>When invoking the <code>verilator</code> command, you need to specify the kratos runtime\nname as well as <code>--vpi</code> switch, for instance:</p>\n<pre>verilator --cc design.sv test_tb.sv libkratos-runtime.so --vpi --exe\n</pre>\n<p>You can symbolic link <code>libkratos-runtime.so</code> inside <code>obj_dir</code> so that the linker\nand find it easily.</p>\n<p>Once the test bench is compiled, you need to use <code>LD_LIBRARY_PATH</code> to let the\nsystem to load, such as</p>\n<pre><code>$ LD_LIBRARY_PATH=./obj_dir/ ./obj_dir/Vtest\n</code></pre>\n<p>Or you can let the linker to fix the shared library path in the <code>verilator</code>,\nwhich is beyond the scope of this tutorial.</p>\n<p>An alternative is to use the built-in Python helper class.</p>\n<p>You can use <code>kratos_runtime.VerilatorTester</code> to run your verilator design.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">VerilatorTester</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">files</span><span class=\"p\">,</span> <span class=\"n\">cwd</span><span class=\"o\">=</span><span class=\"n\">temp</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">tester</span><span class=\"p\">:</span>\n    <span class=\"n\">tester</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>Where <code>files</code> is a list of files. By default the <code>run()</code> is non-blocking, so\nyou can attach your debugger with the runtime.</p>\n<h3>Using kratos-runtime with Ncsim</h3>\n<p>Ncsim is much easier to use than <code>verilator</code>. Once you have the design, simply\ntell the simulator that you want to load the vpi and dpi library, such as</p>\n<pre><code>irun test_tb.sv test.sv -sv_lib libkratos-runtime.so -loadvpi libkratos-runtime.so:initialize_runtime_vpi -access +r\n</code></pre>\n<p><code>-access +r</code> is necessary to allow the runtime to read out simulation variables.</p>\n<p>You can also use <code>kratos_runtime.NCSimTester</code> to run your design.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">NCSimTester</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">files</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">tester</span><span class=\"p\">:</span>\n    <span class=\"n\">tester</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>What to do after launch the simulation</h3>\n<p>You can now use any debugger that's compatible with the Kratos debug protocol.\nKratos has provide an open-source version of debugger extension inside VS Code.\nYou can install it\n<a href=\"https://marketplace.visualstudio.com/items?itemName=keyiz.kratos-vscode\" rel=\"nofollow\">here</a>\nand use it to debug your design.</p>\n\n          </div>"}, "last_serial": 6591821, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ebdb067d07d905a50a740853810f9a7b", "sha256": "c116e4c70025ca50e3e356c215f72d7a35c55ae5929bb66690b33da1c6f40663"}, "downloads": -1, "filename": "kratos_runtime-0.0.1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ebdb067d07d905a50a740853810f9a7b", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3643688, "upload_time": "2019-10-20T22:03:45", "upload_time_iso_8601": "2019-10-20T22:03:45.803167Z", "url": "https://files.pythonhosted.org/packages/d2/ef/c31dbd1bb3aa1e554b6aefb93466ce67c1aee0668c168a55415fa003e9a9/kratos_runtime-0.0.1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae4016cfca8f3a90d017d518a9f6a255", "sha256": "45bab65c14cd5bc7dd4692627acd7436dbc2d39148893e1970b4faed7ff85de5"}, "downloads": -1, "filename": "kratos_runtime-0.0.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ae4016cfca8f3a90d017d518a9f6a255", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 3643684, "upload_time": "2019-10-20T22:03:49", "upload_time_iso_8601": "2019-10-20T22:03:49.492928Z", "url": "https://files.pythonhosted.org/packages/aa/32/dacb9cb464a790a5ff4fe492685fc4080936edf33710758a0ebe3782d584/kratos_runtime-0.0.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea3c8920b06e9d647fab1b64df16d63a", "sha256": "08b91b3cfcf8abdb4790e678e67a5dea66b1b68f5916b55e74c8fd777ed0deae"}, "downloads": -1, "filename": "kratos_runtime-0.0.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "ea3c8920b06e9d647fab1b64df16d63a", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3643704, "upload_time": "2019-10-20T22:03:52", "upload_time_iso_8601": "2019-10-20T22:03:52.300219Z", "url": "https://files.pythonhosted.org/packages/64/93/4db5792d79e517f4ec6bca276f70e9356837cda1a11dba89cfc11ef1fba8/kratos_runtime-0.0.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f1636244366118ca74983c793a1f7361", "sha256": "696216ac40e31e51d7781f01f2512b145d9ca8dd5a8dbdb2b44c47eac1c7675c"}, "downloads": -1, "filename": "kratos_runtime-0.0.2-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f1636244366118ca74983c793a1f7361", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3657589, "upload_time": "2019-12-10T05:30:21", "upload_time_iso_8601": "2019-12-10T05:30:21.188682Z", "url": "https://files.pythonhosted.org/packages/b2/4e/27b02bb7ab5ef427f72afd4df1cd6c7a614ec5d437716e575dd8209293c8/kratos_runtime-0.0.2-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "314feb2e203e860b3b63f4a5e36374c8", "sha256": "2452bcae899bfb1eb520dcd6fbcc6ef87ff9c25035b73f024397f709cf94606a"}, "downloads": -1, "filename": "kratos_runtime-0.0.2-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "314feb2e203e860b3b63f4a5e36374c8", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 3657582, "upload_time": "2019-12-10T05:30:29", "upload_time_iso_8601": "2019-12-10T05:30:29.646615Z", "url": "https://files.pythonhosted.org/packages/c0/61/681ab529817906144d1ea6bb9f9fafe75c9f6fb50700f58af860741893bc/kratos_runtime-0.0.2-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a553042d73e9598a1b71a5d707ac254", "sha256": "b02543b05709f33ec72e88592cc448fa5af3c8fffc4c7af77df4b19ece6c2d18"}, "downloads": -1, "filename": "kratos_runtime-0.0.2-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4a553042d73e9598a1b71a5d707ac254", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3657589, "upload_time": "2019-12-10T05:30:31", "upload_time_iso_8601": "2019-12-10T05:30:31.889736Z", "url": "https://files.pythonhosted.org/packages/07/68/a0330af2c2aa71e93cb3827aa8d631c3a491b85f877db3759085d58a66e9/kratos_runtime-0.0.2-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "3a95b3dce22a417ee54c09c31ab609a9", "sha256": "445736074e77740a41a2c60faf5d473b24f1be99dcec9d14f82ee0782f2dbbee"}, "downloads": -1, "filename": "kratos_runtime-0.0.3-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3a95b3dce22a417ee54c09c31ab609a9", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3657859, "upload_time": "2019-12-11T07:05:40", "upload_time_iso_8601": "2019-12-11T07:05:40.482041Z", "url": "https://files.pythonhosted.org/packages/b6/c1/352e5f4de7ae789a90a56c0abbf5c89564dc8d1be12867d36cdf8dc04139/kratos_runtime-0.0.3-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73971e3a461659643314284fcb2d6885", "sha256": "cffcc4da7366e62cb47e2654a806fef04c92283ef91793c81b4e72533639d5c5"}, "downloads": -1, "filename": "kratos_runtime-0.0.3-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "73971e3a461659643314284fcb2d6885", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 3657853, "upload_time": "2019-12-11T07:05:44", "upload_time_iso_8601": "2019-12-11T07:05:44.101443Z", "url": "https://files.pythonhosted.org/packages/cb/bd/72a1f40e86fa19f5d3ffa617d40c161637721493e4cb4f514fe84830be38/kratos_runtime-0.0.3-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "deeba77f701dc7e4575c360c734e6f83", "sha256": "8f44c0884e90d5de132632bbb68c4faa965da8648e57a6d95311ca12203c5cc6"}, "downloads": -1, "filename": "kratos_runtime-0.0.3-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "deeba77f701dc7e4575c360c734e6f83", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3657860, "upload_time": "2019-12-11T07:05:46", "upload_time_iso_8601": "2019-12-11T07:05:46.389899Z", "url": "https://files.pythonhosted.org/packages/fe/58/81b04791ad4f4ceba6dd3f08d0f0594ad2037c4a4ccbe66723f414c55dd4/kratos_runtime-0.0.3-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b9bef237ac9593055a71ab30c789a725", "sha256": "7729b1e66be4610539a5262fa7002325af381613280a5a2f7c6ab67a5c6933c5"}, "downloads": -1, "filename": "kratos_runtime-0.0.4-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b9bef237ac9593055a71ab30c789a725", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3658397, "upload_time": "2019-12-12T04:19:05", "upload_time_iso_8601": "2019-12-12T04:19:05.033521Z", "url": "https://files.pythonhosted.org/packages/88/9d/443745448be1963a0b8bcd012bb481827f71133c6c47f329fcd8030c9e9b/kratos_runtime-0.0.4-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0d57a592bbc5b80c0e643fe37837ce5", "sha256": "5b4991883b0ec1c1de1f184cf075a4bedbc1f05e4ae888043854787d8c590fb6"}, "downloads": -1, "filename": "kratos_runtime-0.0.4-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f0d57a592bbc5b80c0e643fe37837ce5", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 3658391, "upload_time": "2019-12-12T04:19:07", "upload_time_iso_8601": "2019-12-12T04:19:07.487711Z", "url": "https://files.pythonhosted.org/packages/ee/fc/a90bc29f5d252549637107c7fef297773bc1341499bf1b58eae488ea79a5/kratos_runtime-0.0.4-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f4d3ccd82ef6392f130b0b6a6fc4e6e", "sha256": "bf6528c1edf25f24004e3c521392c970397335e3fa4a9a6bedd7f0994cda428f"}, "downloads": -1, "filename": "kratos_runtime-0.0.4-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "2f4d3ccd82ef6392f130b0b6a6fc4e6e", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3658408, "upload_time": "2019-12-12T04:19:09", "upload_time_iso_8601": "2019-12-12T04:19:09.969428Z", "url": "https://files.pythonhosted.org/packages/ec/4a/3fe7b5ee95887c32ff7308a03b69d27a9a9bfddb9a9bc3ebeae01f2212ca/kratos_runtime-0.0.4-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "95b832093bc9c7638dbec141584a524d", "sha256": "683b537677b3fc442e96d0f96f0ef6dfdcbd6b6ebba68222816c0c4c05758058"}, "downloads": -1, "filename": "kratos_runtime-0.0.5-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "95b832093bc9c7638dbec141584a524d", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 3658402, "upload_time": "2019-12-12T05:47:55", "upload_time_iso_8601": "2019-12-12T05:47:55.102832Z", "url": "https://files.pythonhosted.org/packages/be/d8/c306739b193f609dca867560d0b791ff5fa2dfc17ac39f0482029f127424/kratos_runtime-0.0.5-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e95066eb60967b399671ff8eb4c5df4", "sha256": "0baabae8a1801175dbdea041427db1ec79622845a1cc189cef4dadb8ede5bce9"}, "downloads": -1, "filename": "kratos_runtime-0.0.5-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "9e95066eb60967b399671ff8eb4c5df4", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 3658392, "upload_time": "2019-12-12T05:47:57", "upload_time_iso_8601": "2019-12-12T05:47:57.289997Z", "url": "https://files.pythonhosted.org/packages/4e/e4/2e3e123336f83d9986b27a252fcee6aa00decca4f8132032f3c04520aca3/kratos_runtime-0.0.5-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c8b4918de7be96c9a7e6e23245636fc", "sha256": "8f6780393aec094080ae15afee0e677bb8a5097e6d7c185b2773fc949046c36d"}, "downloads": -1, "filename": "kratos_runtime-0.0.5-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "4c8b4918de7be96c9a7e6e23245636fc", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 3658414, "upload_time": "2019-12-12T05:47:59", "upload_time_iso_8601": "2019-12-12T05:47:59.699145Z", "url": "https://files.pythonhosted.org/packages/cb/3d/51f1a15d6ef531d20aeea5df7f60e94bd2bb1bd4851f1d172d7c3f213321/kratos_runtime-0.0.5-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7d5c1a6c8763854da56ff3b5ee778ed", "sha256": "d7e5d9aa74f9281c9c6ef1213ae26e1e4c543351a06ab956e5e3566396e903b2"}, "downloads": -1, "filename": "kratos_runtime-0.0.5-py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a7d5c1a6c8763854da56ff3b5ee778ed", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3190120, "upload_time": "2020-01-28T06:03:07", "upload_time_iso_8601": "2020-01-28T06:03:07.560095Z", "url": "https://files.pythonhosted.org/packages/82/85/b9e05e38d560cc6b9049bec66c50db07dcae2de105ee6ad8b11d093a4582/kratos_runtime-0.0.5-py3-none-manylinux1_x86_64.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "059ab23f131de69a409a34b88fb4868f", "sha256": "ae78b85e2ed98171c145e88ffa8ec12b61f4a0c7e95c0606c764887ffca6774a"}, "downloads": -1, "filename": "kratos_runtime-0.0.6-py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "059ab23f131de69a409a34b88fb4868f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3190120, "upload_time": "2020-01-28T06:19:41", "upload_time_iso_8601": "2020-01-28T06:19:41.238977Z", "url": "https://files.pythonhosted.org/packages/1d/97/9f326476790874e4476aeb2595e06452ccf8f2d2fe236cd7128deb87e4ff/kratos_runtime-0.0.6-py3-none-manylinux1_x86_64.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "1428305b602ab47153e7aa6ca0940842", "sha256": "2b810b184884a84efa74202bda59b06ccca8a6c2c99ad5e9f1485bba96a9f50d"}, "downloads": -1, "filename": "kratos_runtime-0.0.7-py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1428305b602ab47153e7aa6ca0940842", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3203408, "upload_time": "2020-02-08T00:09:31", "upload_time_iso_8601": "2020-02-08T00:09:31.878196Z", "url": "https://files.pythonhosted.org/packages/e6/2a/7409828269077ba5d6927829c2aa0becc793594b425fe771e129f093cadc/kratos_runtime-0.0.7-py3-none-manylinux1_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1428305b602ab47153e7aa6ca0940842", "sha256": "2b810b184884a84efa74202bda59b06ccca8a6c2c99ad5e9f1485bba96a9f50d"}, "downloads": -1, "filename": "kratos_runtime-0.0.7-py3-none-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "1428305b602ab47153e7aa6ca0940842", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3203408, "upload_time": "2020-02-08T00:09:31", "upload_time_iso_8601": "2020-02-08T00:09:31.878196Z", "url": "https://files.pythonhosted.org/packages/e6/2a/7409828269077ba5d6927829c2aa0becc793594b425fe771e129f093cadc/kratos_runtime-0.0.7-py3-none-manylinux1_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 00:48:48 2020"}