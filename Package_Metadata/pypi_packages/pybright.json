{"info": {"author": "Petr Plavjanik", "author_email": "plavjanik@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "pybright\n========\n\nIntegration of [CA Brightside](https://www.ca.com/us/products/ca-brightside.html) to Python.\n\nFeatures\n--------\n        \n* Allow calling Brighside commands without any boilerplate code - just one function `bright(command)`\n* Output is converted to Python data structures\n  * Lists or dictionaries\n* Automatic error handling - failures are reported as exception (as a Python developer would expect)\n\n\nUsage\n-----\n\n### List all my jobs and their return code\n\n```python\n    from pybright.cli import bright\n\n    for job in bright(\"zos-jobs list jobs\"):\n        print(f\"{job['jobname']} {job['jobid']} {job['retcode']}\")\n```\n\nPrints:\n\n        PLAPE03A JOB20471 CC 0000\n        PLAPE03A JOB20380 CC 0000\n        PLAPE03A JOB17519 ABEND S222\n        PLAPE03A JOB17460 ABEND S222\n\n\n### List my failed jobs\n\n```python\n    for job in bright(\"zos-jobs list jobs\"):\n        if job['retcode'] not in ['CC 0000', None]:\n            print(f\"{job['jobname']} {job['jobid']} {job['retcode']}\")\n```            \n\nPrints:\n\n        PLAPE03A JOB17519 ABEND S222\n        PLAPE03A JOB17460 ABEND S222\n\n\n### Print SYSOUT of failed API Layer started tasks:\n\n```python\n    for job in bright(\"zos-jobs list jobs --prefix MAS* --owner MASSERV\"):\n        if job['retcode'] not in ['CC 0000', None]:\n            print(f\"{job['jobname']} {job['jobid']} {job['retcode']}\")\n            for spool_file in bright(f\"zos-jobs list spool-files-by-jobid {job['jobid']}\"):\n                if spool_file['ddname'] == 'SYSOUT':\n                    sysout = bright(f\"zos-jobs view spool-file-by-id {job['jobid']} {spool_file['id']}\")\n                    print(sysout)\n```            \n\nPrints:\n\n        MASDDS1 STC03252 CC 0101\n        ...\n        JVMJZBL2007E Stack trace follows:\n        java.io.FileNotFoundException: runtime/CA/MFSJDISV (EDC5129I No such file or directory.)\n                at java.util.zip.ZipFile.open(Native Method)\n                at java.util.zip.ZipFile.<init>(ZipFile.java:241)\n                at java.util.zip.ZipFile.<init>(ZipFile.java:171)\n                at java.util.jar.JarFile.<init>(JarFile.java:179)\n                at java.util.jar.JarFile.<init>(JarFile.java:116)  \n        ...      \n\n\n### Issue a console command\n\n```python\n        jobname = \"MASAGW1\"\n        bright(f'zos-console issue command --sysplex-system ca31 \"S {jobname}\"')\n```        \n\nSee full example at [start_api_layer.py](examples/start_api_layer.py).\n\n\nInstallation\n------------\n\n### Requirements\n\n - Python 3.6 or higher\n - CA Brightside - Community Edition\n\n\n### Installing CA Brightside\n\n1. Request access to z/OSMF as described here: https://docops.ca.com/ca-brightside-enterprise-and-essentials/1-0/en/installing/prerequisites/z-osmf-configuration-overview/configure-z-osmf-security\n\n2. Issue the following command to set the npm registry to the CA Brightside scoped package:\n\n        npm config set @brightside:registry https://api.bintray.com/npm/ca/brightside\n\n3. To install CA Brightside, issue the following command:\n\n        npm install -g @brightside/core@next\n\n4.  To create a `zosmf` profile, issue the following command. Refer to the available options in the help text to define your profile:\n\n        bright profiles create zosmf-profile --help    \n\n    Example for CA32 system:\n\n        bright profiles create zosmf-profile ca32 --host ca32.ca.com --port 1443 --user <userid> --pass <password> --reject-unauthorized false --overwrite  \n\n\nFull installation instructions are at <https://docops.ca.com/ca-brightside-community-edition/1-0/en/installing/install-ca-brightside>.\n\n### Installing pybright\n\n    pip install pybright\n\n\nLicence\n-------\n\nMIT\n\nAuthors\n-------\n\npybright was written by [Petr Plavjanik](plavjanik@gmail.com).\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/plavjanik/pybright", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pybright", "package_url": "https://pypi.org/project/pybright/", "platform": "", "project_url": "https://pypi.org/project/pybright/", "project_urls": {"Homepage": "https://github.com/plavjanik/pybright"}, "release_url": "https://pypi.org/project/pybright/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Integration of CA Brightside to Python", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            pybright<br>========<br><br>Integration of [CA Brightside](https://www.ca.com/us/products/ca-brightside.html) to Python.<br><br>Features<br>--------<br>        <br>* Allow calling Brighside commands without any boilerplate code - just one function `bright(command)`<br>* Output is converted to Python data structures<br>  * Lists or dictionaries<br>* Automatic error handling - failures are reported as exception (as a Python developer would expect)<br><br><br>Usage<br>-----<br><br>### List all my jobs and their return code<br><br>```python<br>    from pybright.cli import bright<br><br>    for job in bright(\"zos-jobs list jobs\"):<br>        print(f\"{job['jobname']} {job['jobid']} {job['retcode']}\")<br>```<br><br>Prints:<br><br>        PLAPE03A JOB20471 CC 0000<br>        PLAPE03A JOB20380 CC 0000<br>        PLAPE03A JOB17519 ABEND S222<br>        PLAPE03A JOB17460 ABEND S222<br><br><br>### List my failed jobs<br><br>```python<br>    for job in bright(\"zos-jobs list jobs\"):<br>        if job['retcode'] not in ['CC 0000', None]:<br>            print(f\"{job['jobname']} {job['jobid']} {job['retcode']}\")<br>```            <br><br>Prints:<br><br>        PLAPE03A JOB17519 ABEND S222<br>        PLAPE03A JOB17460 ABEND S222<br><br><br>### Print SYSOUT of failed API Layer started tasks:<br><br>```python<br>    for job in bright(\"zos-jobs list jobs --prefix MAS* --owner MASSERV\"):<br>        if job['retcode'] not in ['CC 0000', None]:<br>            print(f\"{job['jobname']} {job['jobid']} {job['retcode']}\")<br>            for spool_file in bright(f\"zos-jobs list spool-files-by-jobid {job['jobid']}\"):<br>                if spool_file['ddname'] == 'SYSOUT':<br>                    sysout = bright(f\"zos-jobs view spool-file-by-id {job['jobid']} {spool_file['id']}\")<br>                    print(sysout)<br>```            <br><br>Prints:<br><br>        MASDDS1 STC03252 CC 0101<br>        ...<br>        JVMJZBL2007E Stack trace follows:<br>        java.io.FileNotFoundException: runtime/CA/MFSJDISV (EDC5129I No such file or directory.)<br>                at java.util.zip.ZipFile.open(Native Method)<br>                at java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:241)<br>                at java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:171)<br>                at java.util.jar.JarFile.&lt;init&gt;(JarFile.java:179)<br>                at java.util.jar.JarFile.&lt;init&gt;(JarFile.java:116)  <br>        ...      <br><br><br>### Issue a console command<br><br>```python<br>        jobname = \"MASAGW1\"<br>        bright(f'zos-console issue command --sysplex-system ca31 \"S {jobname}\"')<br>```        <br><br>See full example at [start_api_layer.py](examples/start_api_layer.py).<br><br><br>Installation<br>------------<br><br>### Requirements<br><br> - Python 3.6 or higher<br> - CA Brightside - Community Edition<br><br><br>### Installing CA Brightside<br><br>1. Request access to z/OSMF as described here: https://docops.ca.com/ca-brightside-enterprise-and-essentials/1-0/en/installing/prerequisites/z-osmf-configuration-overview/configure-z-osmf-security<br><br>2. Issue the following command to set the npm registry to the CA Brightside scoped package:<br><br>        npm config set @brightside:registry https://api.bintray.com/npm/ca/brightside<br><br>3. To install CA Brightside, issue the following command:<br><br>        npm install -g @brightside/core@next<br><br>4.  To create a `zosmf` profile, issue the following command. Refer to the available options in the help text to define your profile:<br><br>        bright profiles create zosmf-profile --help    <br><br>    Example for CA32 system:<br><br>        bright profiles create zosmf-profile ca32 --host ca32.ca.com --port 1443 --user &lt;userid&gt; --pass &lt;password&gt; --reject-unauthorized false --overwrite  <br><br><br>Full installation instructions are at &lt;https://docops.ca.com/ca-brightside-community-edition/1-0/en/installing/install-ca-brightside&gt;.<br><br>### Installing pybright<br><br>    pip install pybright<br><br><br>Licence<br>-------<br><br>MIT<br><br>Authors<br>-------<br><br>pybright was written by [Petr Plavjanik](plavjanik@gmail.com).<br>\n          </div>"}, "last_serial": 4729234, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "9786e9e5540ee203d1e4955aca52362d", "sha256": "424996a776d9ab5b87a19cc105ae55c0a4484c00bc677a9f1fea2b543abbde95"}, "downloads": -1, "filename": "pybright-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9786e9e5540ee203d1e4955aca52362d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4685, "upload_time": "2018-12-11T09:11:26", "upload_time_iso_8601": "2018-12-11T09:11:26.389128Z", "url": "https://files.pythonhosted.org/packages/ca/dc/3a1a2677e61ae0c5461376320d8090e5d553debb11d5d1809d838a553310/pybright-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "96212d44f7cf2371f3770148f0884765", "sha256": "dacc1737e93e9b2f5f1c289c1f7ca7019311b028f6deca867ee5a046cf35b589"}, "downloads": -1, "filename": "pybright-0.1.2.tar.gz", "has_sig": false, "md5_digest": "96212d44f7cf2371f3770148f0884765", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4555, "upload_time": "2019-01-23T06:01:28", "upload_time_iso_8601": "2019-01-23T06:01:28.237127Z", "url": "https://files.pythonhosted.org/packages/59/26/fbd0c3973321b6fec2b7fce87c1d638241049e8923dd5bdf529f348c63db/pybright-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "96212d44f7cf2371f3770148f0884765", "sha256": "dacc1737e93e9b2f5f1c289c1f7ca7019311b028f6deca867ee5a046cf35b589"}, "downloads": -1, "filename": "pybright-0.1.2.tar.gz", "has_sig": false, "md5_digest": "96212d44f7cf2371f3770148f0884765", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4555, "upload_time": "2019-01-23T06:01:28", "upload_time_iso_8601": "2019-01-23T06:01:28.237127Z", "url": "https://files.pythonhosted.org/packages/59/26/fbd0c3973321b6fec2b7fce87c1d638241049e8923dd5bdf529f348c63db/pybright-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:01 2020"}