{"info": {"author": "Rodrigo Pinheiro Matias", "author_email": "rodrigopmatias@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: Apache Software License", "Natural Language :: Portuguese (Brazilian)", "Operating System :: POSIX", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: System :: Monitoring", "Topic :: Utilities"], "description": "Monitor de Sistemas\n===================\n\nColetor e gerador de gr\u00e1ficos de informa\u00e7\u00f5es de sistema.\n\nInstala\u00e7\u00e3o\n----------\n\nA instala\u00e7\u00e3o da biblioteca \u00e9 bem simples:\n\n    user@host:~$ pip install --user hwm\n\nAinda podemos instalar pelo easy_install, veja:\n\n    user@host:~$ easy_install --user hwm\n\nSupondo que tenha instalado no PYTHONPATH ou esteja utilizando o VirtualEnv agora podemos executar o aplicativo atrav\u00e9s do comando:\n\n    user@host:~$ python -m hwm.colector --help\n    user@host:~$ python -m hwm.graph --help\n\nSe voc\u00ea n\u00e3o tem o PYTHONPATH ou n\u00e3o esta utilizando o VirtualEnv adicione no inicio do comando PYTHONPATH=/home/user/.local/python, veja o exemplo:\n\n    user@host:~$ PYTHONPATH=/home/user/.local/python python -m hwm.colector --help\n\nComo coletar informa\u00e7\u00f5es\n------------------------\n\nPor enquanto contamos com tres coletores de informa\u00e7\u00f5es, o de Rede (network), de uso de Disco (disk), e informa\u00e7\u00f5es de memoria (memory), em nosso primeiro exemplo irei demonstrar com coletar informa\u00e7\u00f5es de uso de rede, veja:\n\n    user@host:~$ python -m hwm.colector --colect network interface:eth0 label:eth0-5min\n\nNo comando acima estou coletando informa\u00e7\u00f5es de uso de rede e colocando um label eth0-5min, o label ajuda a identificar a frequ\u00eancia com que \u00e9 coletada as informa\u00e7\u00f5es. Vamos a um exemplo de uso de disco:\n\n    user@host:~$ python -m hwm.colector --colect disk mount_point:/home\n\nO comando acima coleta informa\u00e7\u00f5es de uso do ponto de montagem /home pegando as informa\u00e7\u00f5es do tamanho, do que foi usado e o que temos para usar ainda.\n\nOutros plugins de coleta ainda ser\u00e3o desenvolvidos, veja a lista de pendencias:\n\n1. Sess\u00f5es do Oracle\n2. Numero de conex\u00f5es em uma determinada porta e protocolo\n\nOutros plugins podem ser desenvolvidos pela comunidade ainda, uma vez que os fontes est\u00e3o disponiveis para serem forcados.\n\nBasicamente o comando do coletor prever que seja passado um plugin e os argumentos extras que ser\u00e3o utilizados pelo plugin para tomada de decis\u00e3o, veja a sintaxe abaixo:\n\n    user@host:~$ python -m hwm.colector --[action] [plugin] [extra argument 1] ... [extra argument N]\n\nOnde **action** pode variar entre (clear,extract,colect), **plugin** pode variar de acordo com cada instala\u00e7\u00e3o, hoje temos por padr\u00e3o dois plugins **network** e **disk**.\n\nComo gerar os gr\u00e1ficos\n----------------------\n\nOs gr\u00e1ficos podem ser gerados de forma semelhante a coleta de informa\u00e7\u00f5es veja o comando abaixo:\n\n    user@host:~$ python -m hwm.graph --draw network interface:eth0 label:eth0-5min\n\nComo podemos ver houve uma pequena mudan\u00e7a aos comandos anteriores, mas mantivemos a mesma l\u00f3gica.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/rodrigopmatias/hwm/downloads", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "hwm", "package_url": "https://pypi.org/project/hwm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/hwm/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/rodrigopmatias/hwm/downloads"}, "release_url": "https://pypi.org/project/hwm/0.6.1/", "requires_dist": null, "requires_python": null, "summary": "Coletor e gerador de gr\u00e1ficos de informa\u00e7\u00f5es de sistema.", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Coletor e gerador de gr\u00e1ficos de informa\u00e7\u00f5es de sistema.</p>\n<div id=\"instalacao\">\n<h2>Instala\u00e7\u00e3o</h2>\n<p>A instala\u00e7\u00e3o da biblioteca \u00e9 bem simples:</p>\n<blockquote>\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ pip install \u2013user hwm</blockquote>\n<p>Ainda podemos instalar pelo easy_install, veja:</p>\n<blockquote>\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ easy_install \u2013user hwm</blockquote>\n<p>Supondo que tenha instalado no PYTHONPATH ou esteja utilizando o VirtualEnv agora podemos executar o aplicativo atrav\u00e9s do comando:</p>\n<blockquote>\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ python -m hwm.colector \u2013help\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ python -m hwm.graph \u2013help</blockquote>\n<p>Se voc\u00ea n\u00e3o tem o PYTHONPATH ou n\u00e3o esta utilizando o VirtualEnv adicione no inicio do comando PYTHONPATH=/home/user/.local/python, veja o exemplo:</p>\n<blockquote>\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ PYTHONPATH=/home/user/.local/python python -m hwm.colector \u2013help</blockquote>\n</div>\n<div id=\"como-coletar-informacoes\">\n<h2>Como coletar informa\u00e7\u00f5es</h2>\n<p>Por enquanto contamos com tres coletores de informa\u00e7\u00f5es, o de Rede (network), de uso de Disco (disk), e informa\u00e7\u00f5es de memoria (memory), em nosso primeiro exemplo irei demonstrar com coletar informa\u00e7\u00f5es de uso de rede, veja:</p>\n<blockquote>\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ python -m hwm.colector \u2013colect network interface:eth0 label:eth0-5min</blockquote>\n<p>No comando acima estou coletando informa\u00e7\u00f5es de uso de rede e colocando um label eth0-5min, o label ajuda a identificar a frequ\u00eancia com que \u00e9 coletada as informa\u00e7\u00f5es. Vamos a um exemplo de uso de disco:</p>\n<blockquote>\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ python -m hwm.colector \u2013colect disk mount_point:/home</blockquote>\n<p>O comando acima coleta informa\u00e7\u00f5es de uso do ponto de montagem /home pegando as informa\u00e7\u00f5es do tamanho, do que foi usado e o que temos para usar ainda.</p>\n<p>Outros plugins de coleta ainda ser\u00e3o desenvolvidos, veja a lista de pendencias:</p>\n<ol>\n<li>Sess\u00f5es do Oracle</li>\n<li>Numero de conex\u00f5es em uma determinada porta e protocolo</li>\n</ol>\n<p>Outros plugins podem ser desenvolvidos pela comunidade ainda, uma vez que os fontes est\u00e3o disponiveis para serem forcados.</p>\n<p>Basicamente o comando do coletor prever que seja passado um plugin e os argumentos extras que ser\u00e3o utilizados pelo plugin para tomada de decis\u00e3o, veja a sintaxe abaixo:</p>\n<blockquote>\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ python -m hwm.colector \u2013[action] [plugin] [extra argument 1] \u2026 [extra argument N]</blockquote>\n<p>Onde <strong>action</strong> pode variar entre (clear,extract,colect), <strong>plugin</strong> pode variar de acordo com cada instala\u00e7\u00e3o, hoje temos por padr\u00e3o dois plugins <strong>network</strong> e <strong>disk</strong>.</p>\n</div>\n<div id=\"como-gerar-os-graficos\">\n<h2>Como gerar os gr\u00e1ficos</h2>\n<p>Os gr\u00e1ficos podem ser gerados de forma semelhante a coleta de informa\u00e7\u00f5es veja o comando abaixo:</p>\n<blockquote>\n<a href=\"mailto:user%40host\">user<span>@</span>host</a>:~$ python -m hwm.graph \u2013draw network interface:eth0 label:eth0-5min</blockquote>\n<p>Como podemos ver houve uma pequena mudan\u00e7a aos comandos anteriores, mas mantivemos a mesma l\u00f3gica.</p>\n</div>\n\n          </div>"}, "last_serial": 474999, "releases": {"0.5.1": [], "0.5.3": [], "0.6.1": []}, "urls": [], "timestamp": "Fri May  8 00:49:43 2020"}