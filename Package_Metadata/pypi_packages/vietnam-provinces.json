{"info": {"author": "Nguy\u1ec5n H\u1ed3ng Qu\u00e2n", "author_email": "ng.hong.quan@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Information Technology", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: Vietnamese", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Localization"], "description": "================\nVietnamProvinces\n================\n\n.. image:: https://madewithlove.now.sh/vn?heart=true&colorA=%23ffcd00&colorB=%23da251d\n.. image:: https://badgen.net/pypi/v/vietnam-provinces\n   :target: https://pypi.org/project/vietnam-provinces/\n\nLibrary to provide list of Vietnam administrative divisions (t\u1ec9nh th\u00e0nh, qu\u1eadn huy\u1ec7n, ph\u01b0\u1eddng x\u00e3) with the name and code as defined by `General Statistics Office of Viet Nam <gso_vn_>`_ (T\u1ed5ng c\u1ee5c Th\u1ed1ng k\u00ea).\n\nExample:\n\n.. code-block:: json\n\n    {\n        \"name\": \"T\u1ec9nh C\u00e0 Mau\",\n        \"code\": 96,\n        \"codename\": \"tinh_ca_mau\",\n        \"division_type\": \"t\u1ec9nh\",\n        \"phone_code\": 290,\n        \"districts\": [\n            {\n                \"name\": \"Huy\u1ec7n \u0110\u1ea7m D\u01a1i\",\n                \"code\": 970,\n                \"codename\": \"huyen_dam_doi\",\n                \"division_type\": \"huy\u1ec7n\",\n                \"wards\": [\n                    {\n                        \"name\": \"Th\u1ecb tr\u1ea5n \u0110\u1ea7m D\u01a1i\",\n                        \"code\": 32152,\n                        \"codename\": \"thi_tran_dam_doi\",\n                        \"division_type\": \"th\u1ecb tr\u1ea5n\"\n                    },\n                    {\n                        \"name\": \"X\u00e3 T\u1ea1 An Kh\u01b0\u01a1ng\",\n                        \"code\": 32155,\n                        \"codename\": \"xa_ta_an_khuong\",\n                        \"division_type\": \"x\u00e3\"\n                    },\n                ]\n            }\n        ]\n    }\n\nThis library provides data in these forms:\n\n1. JSON\n\nThis data is suitable for applications which don't need to access the data often. They are fine with loading JSON and extract information from it. The JSON files are saved in *data* folder. You can get the file path via ``vietnam_provinces.NESTED_DIVISIONS_JSON_PATH`` variable.\n\nNote that this variable only returns the path of the file, not the content. It is up to application developer to use any method to parse the JSON. For example:\n\n.. code-block:: python\n\n    import orjson\n    import rapidjson\n    from vietnam_provinces import NESTED_DIVISIONS_JSON_PATH\n\n    NESTED_DIVISIONS_JSON_PATH.open() as f:\n        rapidjson.load(f)\n\n    # Or\n    orjson.loads(NESTED_DIVISIONS_JSON_PATH.read_bytes())\n\nDue to the big amount of data (10767 wards all over Viet Nam), this loading will be slow.\n\n\n2. Python data type\n\nThis data is useful for some applications which need to access the data more often. They are built as ``Enum``, where you can import in Python code:\n\n.. code-block:: python\n\n    >>> from vietnam_provinces.enums import ProvinceEnum, ProvinceDEnum, DistrictEnum, DistrictDEnum\n\n    >>> ProvinceEnum.P_77\n    <ProvinceEnum.P_77: Province(name='T\u1ec9nh B\u00e0 R\u1ecba - V\u0169ng T\u00e0u', code=77, division_type=<VietNamDivisionType.TINH: 't\u1ec9nh'>, codename='tinh_ba_ria_vung_tau', phone_code=254)>\n\n    >>> ProvinceDEnum.BA_RIA_VUNG_TAU\n    <ProvinceDEnum.BA_RIA_VUNG_TAU: Province(name='T\u1ec9nh B\u00e0 R\u1ecba - V\u0169ng T\u00e0u', code=77, division_type=<VietNamDivisionType.TINH: 't\u1ec9nh'>, codename='tinh_ba_ria_vung_tau', phone_code=254)>\n\n    >>> DistrictEnum.D_624\n    >>> <DistrictEnum.D_624: District(name='Th\u1ecb x\u00e3 Ayun Pa', code=624, division_type=<VietNamDivisionType.THI_XA: 'th\u1ecb x\u00e3'>, codename='thi_xa_ayun_pa', province_code=64)>\n\n    >>> DistrictDEnum.AYUN_PA_GL\n    <DistrictDEnum.AYUN_PA_GL: District(name='Th\u1ecb x\u00e3 Ayun Pa', code=624, division_type=<VietNamDivisionType.THI_XA: 'th\u1ecb x\u00e3'>, codename='thi_xa_ayun_pa', province_code=64)>\n\n    >>> from vietnam_provinces.enums.wards import WardEnum, WardDEnum\n\n    >>> WardEnum.W_7450\n    <WardEnum.W_7450: Ward(name='X\u00e3 \u0110\u00f4ng H\u01b0ng', code=7450, division_type=<VietNamDivisionType.XA: 'x\u00e3'>, codename='xa_dong_hung', district_code=218)>\n\n    >>> WardDEnum.BG_DONG_HUNG_7450\n    <WardDEnum.BG_DONG_HUNG_7450: Ward(name='X\u00e3 \u0110\u00f4ng H\u01b0ng', code=7450, division_type=<VietNamDivisionType.XA: 'x\u00e3'>, codename='xa_dong_hung', district_code=218)>\n\n\nLoading wards this way is far more faster than the JSON option.\n\nThey are made as ``Enum``, so that library user can take advantage of auto-complete feature of IDE/code editors in development. It prevents mistake due to typing wrong variable.\n\nThe Ward Enum has two variants:\n\n- ``WardEnum``: Has member name in form of numeric ward code (``W_28912``). It helps look up a ward by its code (which is a most-seen use case).\n\n- ``WardDEnum``: Has more readable member name (``D`` means \"descriptive\"), to help the application code easier to reason about. For example, looking at ``WardDEnum.BT_PHAN_RI_CUA_22972``, the programmer can guess that this ward is \"Phan R\u00ed C\u1eeda\", of \"B\u00ecnh Thu\u1eadn\" province.\n\nSimilarly, other levels (District, Province) also have two variants of Enum.\n\nExample of looking up ``Ward``, ``District``, ``Province`` with theirs numeric code:\n\n.. code-block:: python\n\n    # Assume that you are loading user info from your database\n    user_info = load_user_info()\n\n    province_code = user_info['province_code']\n    province = ProvinceEnum[f'P_{province_code}'].value\n\nUnlike ``ProvinceDEnum``, ``DistrictDEnum``, the ``WardDEnum`` has ward code in member name. It is because there are too many Vietnamese wards with the same name. There is no way to build unique ID for wards, with pure Latin letters (Vietnamese punctuations stripped), even if we add district and province info to the ID. Let's take \"X\u00e3 \u0110\u00f4ng Th\u00e0nh\" and \"X\u00e3 \u0110\u00f4ng Th\u1ea1nh\" as example. Both belong to \"Huy\u1ec7n B\u00ecnh Minh\" of \"V\u0129nh Long\", both produces ID name \"DONG_THANH\". Although Python allows Unicode as ID name, like \"\u0110\u00d4NG_TH\u1ea0NH\", but it is not practical yet because the code formatter tool (`Black`_) will still normalizes it to Latin form.\n\nBecause the ``WardEnum`` has many records (10767 at the time of wring, February 2020) and may not be needed in some applications, I move it to separate module, to avoid loading automatically to application.\n\n\nMember of these enums, the ``Province``, ``District`` and ``Ward`` data types, all are immutable.\nThey can be imported from top-level of ``vietnam_provinces``.\n\nWhile ``Province`` and ``District`` types are `namedtuple`_, ``Ward`` are a frozen `dataclass`_.\nThis is because of a difficult situation, where standard ``Enum`` is too slow to load when it has very many members, and the faster alternative, `fast-enum`_, has compatible issue with namedtuple.\n\nInstall\n-------\n\n.. code-block:: sh\n\n    pip3 install vietnam-provinces\n\n\nThis library is compatible with Python 3.7+ (due to the use of dataclass).\n\n\nDevelopment\n-----------\n\nIn development, this project has a tool to convert data from government sources.\n\nThe tool doesn't directly crawl data from government websites because the data rarely change (it doesn't worth developing the feature which you only need to use each ten years), and because those websites provide data in unfriendly Microsoft Office formats.\n\nUpdate data\n~~~~~~~~~~~\n\nIn the future, when the authority reorganize administrative divisions, we need to collect this data again from GSOVN website. Do:\n\n- Go to: https://www.gso.gov.vn/dmhc2015/ (this URL may change when `GSOVN <gso_vn_>`_ replaces their software).\n- Find the button \"Xu\u1ea5t Excel\".\n- Tick the \"Qu\u1eadn Huy\u1ec7n Ph\u01b0\u1eddng X\u00e3\" checkbox.\n- Click the button to export and download list of units in Excel (XLS) file.\n- Use LibreOffice to convert Excel file to CSV file. For example, we name it *Xa_2020-02-25.csv*.\n- Run this tool to compute data to JSON format:\n\n.. code-block:: sh\n\n    python3 -m dev -i dev/seed-data/Xa_2020-02-25.csv -o data/nested-divisions.json\n\nYou can run\n\n.. code-block:: sh\n\n    python3 -m dev --help\n\nto see more options of that tool.\n\nNote that this tool is only available in the source folder (cloned from Git). It is not included in the distributable Python package.\n\n\nGenerate Python code\n~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: sh\n\n    python3 -m dev -i dev/seed-data/Xa_2020-02-25.csv -f python\n\n\nData source\n~~~~~~~~~~~\n\n- Name and code of provinces, districts and wards:  `General Statistics Office of Viet Nam <gso_vn_>`_\n- Phone area code: `Th\u00e1i B\u00ecnh province's department of Information and Communication <tb_ic_>`_\n\n\nCredit\n------\n\nGiven to you by `Nguy\u1ec5n H\u1ed3ng Qu\u00e2n <quan_>`_, after nights and weekends.\n\n\n.. _gso_vn: https://www.gso.gov.vn/\n.. _tb_ic: https://sotttt.thaibinh.gov.vn/tin-tuc/buu-chinh-vien-thong/tra-cuu-ma-vung-dien-thoai-co-dinh-mat-dat-ma-mang-dien-thoa2.html\n.. _namedtuple: https://docs.python.org/3/library/collections.html#collections.namedtuple\n.. _dataclass: https://docs.python.org/3/library/dataclasses.html\n.. _fast-enum: https://pypi.org/project/fast-enum/\n.. _Black: https://github.com/psf/black\n.. _quan: https://quan.hoabinh.vn\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sunshine-tech/VietnamProvinces.git", "keywords": "Vietnam,administrative,division,locality", "license": "GPL-3.0-or-later", "maintainer": "", "maintainer_email": "", "name": "vietnam-provinces", "package_url": "https://pypi.org/project/vietnam-provinces/", "platform": "", "project_url": "https://pypi.org/project/vietnam-provinces/", "project_urls": {"Homepage": "https://github.com/sunshine-tech/VietnamProvinces.git", "Repository": "https://github.com/sunshine-tech/VietnamProvinces.git"}, "release_url": "https://pypi.org/project/vietnam-provinces/0.2.1/", "requires_dist": ["single-version (>=1.1,<2.0)", "logbook (>=1.5.3,<2.0.0)", "unidecode (>=1.1.1,<2.0.0)", "fast-enum (>=1.3.0,<2.0.0)"], "requires_python": ">=3.7,<4.0", "summary": "Library to provide list of Vietnam administrative divisions (t\u1ec9nh th\u00e0nh, qu\u1eadn huy\u1ec7n, ph\u01b0\u1eddng x\u00e3).", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://madewithlove.now.sh/vn?heart=true&amp;colorA=%23ffcd00&amp;colorB=%23da251d\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b6739c1e583f4f15dd55e9d69b846658c156695/68747470733a2f2f6d616465776974686c6f76652e6e6f772e73682f766e3f68656172743d7472756526636f6c6f72413d25323366666364303026636f6c6f72423d253233646132353164\">\n<a href=\"https://pypi.org/project/vietnam-provinces/\" rel=\"nofollow\"><img alt=\"https://badgen.net/pypi/v/vietnam-provinces\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3d1fd6f649cab1c2dd530f09b2bf76aa2c528a1d/68747470733a2f2f62616467656e2e6e65742f707970692f762f766965746e616d2d70726f76696e636573\"></a>\n<p>Library to provide list of Vietnam administrative divisions (t\u1ec9nh th\u00e0nh, qu\u1eadn huy\u1ec7n, ph\u01b0\u1eddng x\u00e3) with the name and code as defined by <a href=\"https://www.gso.gov.vn/\" rel=\"nofollow\">General Statistics Office of Viet Nam</a> (T\u1ed5ng c\u1ee5c Th\u1ed1ng k\u00ea).</p>\n<p>Example:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"T\u1ec9nh C\u00e0 Mau\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"mi\">96</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"codename\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tinh_ca_mau\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"division_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"t\u1ec9nh\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"phone_code\"</span><span class=\"p\">:</span> <span class=\"mi\">290</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"districts\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Huy\u1ec7n \u0110\u1ea7m D\u01a1i\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"mi\">970</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"codename\"</span><span class=\"p\">:</span> <span class=\"s2\">\"huyen_dam_doi\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"division_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"huy\u1ec7n\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"wards\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Th\u1ecb tr\u1ea5n \u0110\u1ea7m D\u01a1i\"</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"mi\">32152</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"codename\"</span><span class=\"p\">:</span> <span class=\"s2\">\"thi_tran_dam_doi\"</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"division_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"th\u1ecb tr\u1ea5n\"</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"X\u00e3 T\u1ea1 An Kh\u01b0\u01a1ng\"</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"mi\">32155</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"codename\"</span><span class=\"p\">:</span> <span class=\"s2\">\"xa_ta_an_khuong\"</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"division_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"x\u00e3\"</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>This library provides data in these forms:</p>\n<ol>\n<li>JSON</li>\n</ol>\n<p>This data is suitable for applications which don\u2019t need to access the data often. They are fine with loading JSON and extract information from it. The JSON files are saved in <em>data</em> folder. You can get the file path via <tt>vietnam_provinces.NESTED_DIVISIONS_JSON_PATH</tt> variable.</p>\n<p>Note that this variable only returns the path of the file, not the content. It is up to application developer to use any method to parse the JSON. For example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">orjson</span>\n<span class=\"kn\">import</span> <span class=\"nn\">rapidjson</span>\n<span class=\"kn\">from</span> <span class=\"nn\">vietnam_provinces</span> <span class=\"kn\">import</span> <span class=\"n\">NESTED_DIVISIONS_JSON_PATH</span>\n\n<span class=\"n\">NESTED_DIVISIONS_JSON_PATH</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">rapidjson</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or</span>\n<span class=\"n\">orjson</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">NESTED_DIVISIONS_JSON_PATH</span><span class=\"o\">.</span><span class=\"n\">read_bytes</span><span class=\"p\">())</span>\n</pre>\n<p>Due to the big amount of data (10767 wards all over Viet Nam), this loading will be slow.</p>\n<ol>\n<li>Python data type</li>\n</ol>\n<p>This data is useful for some applications which need to access the data more often. They are built as <tt>Enum</tt>, where you can import in Python code:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">vietnam_provinces.enums</span> <span class=\"kn\">import</span> <span class=\"n\">ProvinceEnum</span><span class=\"p\">,</span> <span class=\"n\">ProvinceDEnum</span><span class=\"p\">,</span> <span class=\"n\">DistrictEnum</span><span class=\"p\">,</span> <span class=\"n\">DistrictDEnum</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ProvinceEnum</span><span class=\"o\">.</span><span class=\"n\">P_77</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ProvinceEnum</span><span class=\"o\">.</span><span class=\"n\">P_77</span><span class=\"p\">:</span> <span class=\"n\">Province</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'T\u1ec9nh B\u00e0 R\u1ecba - V\u0169ng T\u00e0u'</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">77</span><span class=\"p\">,</span> <span class=\"n\">division_type</span><span class=\"o\">=&lt;</span><span class=\"n\">VietNamDivisionType</span><span class=\"o\">.</span><span class=\"n\">TINH</span><span class=\"p\">:</span> <span class=\"s1\">'t\u1ec9nh'</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">'tinh_ba_ria_vung_tau'</span><span class=\"p\">,</span> <span class=\"n\">phone_code</span><span class=\"o\">=</span><span class=\"mi\">254</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ProvinceDEnum</span><span class=\"o\">.</span><span class=\"n\">BA_RIA_VUNG_TAU</span>\n<span class=\"o\">&lt;</span><span class=\"n\">ProvinceDEnum</span><span class=\"o\">.</span><span class=\"n\">BA_RIA_VUNG_TAU</span><span class=\"p\">:</span> <span class=\"n\">Province</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'T\u1ec9nh B\u00e0 R\u1ecba - V\u0169ng T\u00e0u'</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">77</span><span class=\"p\">,</span> <span class=\"n\">division_type</span><span class=\"o\">=&lt;</span><span class=\"n\">VietNamDivisionType</span><span class=\"o\">.</span><span class=\"n\">TINH</span><span class=\"p\">:</span> <span class=\"s1\">'t\u1ec9nh'</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">'tinh_ba_ria_vung_tau'</span><span class=\"p\">,</span> <span class=\"n\">phone_code</span><span class=\"o\">=</span><span class=\"mi\">254</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">DistrictEnum</span><span class=\"o\">.</span><span class=\"n\">D_624</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"o\">&lt;</span><span class=\"n\">DistrictEnum</span><span class=\"o\">.</span><span class=\"n\">D_624</span><span class=\"p\">:</span> <span class=\"n\">District</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Th\u1ecb x\u00e3 Ayun Pa'</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">624</span><span class=\"p\">,</span> <span class=\"n\">division_type</span><span class=\"o\">=&lt;</span><span class=\"n\">VietNamDivisionType</span><span class=\"o\">.</span><span class=\"n\">THI_XA</span><span class=\"p\">:</span> <span class=\"s1\">'th\u1ecb x\u00e3'</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">'thi_xa_ayun_pa'</span><span class=\"p\">,</span> <span class=\"n\">province_code</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">DistrictDEnum</span><span class=\"o\">.</span><span class=\"n\">AYUN_PA_GL</span>\n<span class=\"o\">&lt;</span><span class=\"n\">DistrictDEnum</span><span class=\"o\">.</span><span class=\"n\">AYUN_PA_GL</span><span class=\"p\">:</span> <span class=\"n\">District</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Th\u1ecb x\u00e3 Ayun Pa'</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">624</span><span class=\"p\">,</span> <span class=\"n\">division_type</span><span class=\"o\">=&lt;</span><span class=\"n\">VietNamDivisionType</span><span class=\"o\">.</span><span class=\"n\">THI_XA</span><span class=\"p\">:</span> <span class=\"s1\">'th\u1ecb x\u00e3'</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">'thi_xa_ayun_pa'</span><span class=\"p\">,</span> <span class=\"n\">province_code</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">vietnam_provinces.enums.wards</span> <span class=\"kn\">import</span> <span class=\"n\">WardEnum</span><span class=\"p\">,</span> <span class=\"n\">WardDEnum</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">WardEnum</span><span class=\"o\">.</span><span class=\"n\">W_7450</span>\n<span class=\"o\">&lt;</span><span class=\"n\">WardEnum</span><span class=\"o\">.</span><span class=\"n\">W_7450</span><span class=\"p\">:</span> <span class=\"n\">Ward</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'X\u00e3 \u0110\u00f4ng H\u01b0ng'</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">7450</span><span class=\"p\">,</span> <span class=\"n\">division_type</span><span class=\"o\">=&lt;</span><span class=\"n\">VietNamDivisionType</span><span class=\"o\">.</span><span class=\"n\">XA</span><span class=\"p\">:</span> <span class=\"s1\">'x\u00e3'</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">'xa_dong_hung'</span><span class=\"p\">,</span> <span class=\"n\">district_code</span><span class=\"o\">=</span><span class=\"mi\">218</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">WardDEnum</span><span class=\"o\">.</span><span class=\"n\">BG_DONG_HUNG_7450</span>\n<span class=\"o\">&lt;</span><span class=\"n\">WardDEnum</span><span class=\"o\">.</span><span class=\"n\">BG_DONG_HUNG_7450</span><span class=\"p\">:</span> <span class=\"n\">Ward</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'X\u00e3 \u0110\u00f4ng H\u01b0ng'</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"mi\">7450</span><span class=\"p\">,</span> <span class=\"n\">division_type</span><span class=\"o\">=&lt;</span><span class=\"n\">VietNamDivisionType</span><span class=\"o\">.</span><span class=\"n\">XA</span><span class=\"p\">:</span> <span class=\"s1\">'x\u00e3'</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"n\">codename</span><span class=\"o\">=</span><span class=\"s1\">'xa_dong_hung'</span><span class=\"p\">,</span> <span class=\"n\">district_code</span><span class=\"o\">=</span><span class=\"mi\">218</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Loading wards this way is far more faster than the JSON option.</p>\n<p>They are made as <tt>Enum</tt>, so that library user can take advantage of auto-complete feature of IDE/code editors in development. It prevents mistake due to typing wrong variable.</p>\n<p>The Ward Enum has two variants:</p>\n<ul>\n<li><tt>WardEnum</tt>: Has member name in form of numeric ward code (<tt>W_28912</tt>). It helps look up a ward by its code (which is a most-seen use case).</li>\n<li><tt>WardDEnum</tt>: Has more readable member name (<tt>D</tt> means \u201cdescriptive\u201d), to help the application code easier to reason about. For example, looking at <tt>WardDEnum.BT_PHAN_RI_CUA_22972</tt>, the programmer can guess that this ward is \u201cPhan R\u00ed C\u1eeda\u201d, of \u201cB\u00ecnh Thu\u1eadn\u201d province.</li>\n</ul>\n<p>Similarly, other levels (District, Province) also have two variants of Enum.</p>\n<p>Example of looking up <tt>Ward</tt>, <tt>District</tt>, <tt>Province</tt> with theirs numeric code:</p>\n<pre><span class=\"c1\"># Assume that you are loading user info from your database</span>\n<span class=\"n\">user_info</span> <span class=\"o\">=</span> <span class=\"n\">load_user_info</span><span class=\"p\">()</span>\n\n<span class=\"n\">province_code</span> <span class=\"o\">=</span> <span class=\"n\">user_info</span><span class=\"p\">[</span><span class=\"s1\">'province_code'</span><span class=\"p\">]</span>\n<span class=\"n\">province</span> <span class=\"o\">=</span> <span class=\"n\">ProvinceEnum</span><span class=\"p\">[</span><span class=\"sa\">f</span><span class=\"s1\">'P_</span><span class=\"si\">{</span><span class=\"n\">province_code</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span>\n</pre>\n<p>Unlike <tt>ProvinceDEnum</tt>, <tt>DistrictDEnum</tt>, the <tt>WardDEnum</tt> has ward code in member name. It is because there are too many Vietnamese wards with the same name. There is no way to build unique ID for wards, with pure Latin letters (Vietnamese punctuations stripped), even if we add district and province info to the ID. Let\u2019s take \u201cX\u00e3 \u0110\u00f4ng Th\u00e0nh\u201d and \u201cX\u00e3 \u0110\u00f4ng Th\u1ea1nh\u201d as example. Both belong to \u201cHuy\u1ec7n B\u00ecnh Minh\u201d of \u201cV\u0129nh Long\u201d, both produces ID name \u201cDONG_THANH\u201d. Although Python allows Unicode as ID name, like \u201c\u0110\u00d4NG_TH\u1ea0NH\u201d, but it is not practical yet because the code formatter tool (<a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a>) will still normalizes it to Latin form.</p>\n<p>Because the <tt>WardEnum</tt> has many records (10767 at the time of wring, February 2020) and may not be needed in some applications, I move it to separate module, to avoid loading automatically to application.</p>\n<p>Member of these enums, the <tt>Province</tt>, <tt>District</tt> and <tt>Ward</tt> data types, all are immutable.\nThey can be imported from top-level of <tt>vietnam_provinces</tt>.</p>\n<p>While <tt>Province</tt> and <tt>District</tt> types are <a href=\"https://docs.python.org/3/library/collections.html#collections.namedtuple\" rel=\"nofollow\">namedtuple</a>, <tt>Ward</tt> are a frozen <a href=\"https://docs.python.org/3/library/dataclasses.html\" rel=\"nofollow\">dataclass</a>.\nThis is because of a difficult situation, where standard <tt>Enum</tt> is too slow to load when it has very many members, and the faster alternative, <a href=\"https://pypi.org/project/fast-enum/\" rel=\"nofollow\">fast-enum</a>, has compatible issue with namedtuple.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip3 install vietnam-provinces\n</pre>\n<p>This library is compatible with Python 3.7+ (due to the use of dataclass).</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>In development, this project has a tool to convert data from government sources.</p>\n<p>The tool doesn\u2019t directly crawl data from government websites because the data rarely change (it doesn\u2019t worth developing the feature which you only need to use each ten years), and because those websites provide data in unfriendly Microsoft Office formats.</p>\n<div id=\"update-data\">\n<h3>Update data</h3>\n<p>In the future, when the authority reorganize administrative divisions, we need to collect this data again from GSOVN website. Do:</p>\n<ul>\n<li>Go to: <a href=\"https://www.gso.gov.vn/dmhc2015/\" rel=\"nofollow\">https://www.gso.gov.vn/dmhc2015/</a> (this URL may change when <a href=\"https://www.gso.gov.vn/\" rel=\"nofollow\">GSOVN</a> replaces their software).</li>\n<li>Find the button \u201cXu\u1ea5t Excel\u201d.</li>\n<li>Tick the \u201cQu\u1eadn Huy\u1ec7n Ph\u01b0\u1eddng X\u00e3\u201d checkbox.</li>\n<li>Click the button to export and download list of units in Excel (XLS) file.</li>\n<li>Use LibreOffice to convert Excel file to CSV file. For example, we name it <em>Xa_2020-02-25.csv</em>.</li>\n<li>Run this tool to compute data to JSON format:</li>\n</ul>\n<pre>python3 -m dev -i dev/seed-data/Xa_2020-02-25.csv -o data/nested-divisions.json\n</pre>\n<p>You can run</p>\n<pre>python3 -m dev --help\n</pre>\n<p>to see more options of that tool.</p>\n<p>Note that this tool is only available in the source folder (cloned from Git). It is not included in the distributable Python package.</p>\n</div>\n<div id=\"generate-python-code\">\n<h3>Generate Python code</h3>\n<pre>python3 -m dev -i dev/seed-data/Xa_2020-02-25.csv -f python\n</pre>\n</div>\n<div id=\"data-source\">\n<h3>Data source</h3>\n<ul>\n<li>Name and code of provinces, districts and wards:  <a href=\"https://www.gso.gov.vn/\" rel=\"nofollow\">General Statistics Office of Viet Nam</a></li>\n<li>Phone area code: <a href=\"https://sotttt.thaibinh.gov.vn/tin-tuc/buu-chinh-vien-thong/tra-cuu-ma-vung-dien-thoai-co-dinh-mat-dat-ma-mang-dien-thoa2.html\" rel=\"nofollow\">Th\u00e1i B\u00ecnh province\u2019s department of Information and Communication</a></li>\n</ul>\n</div>\n</div>\n<div id=\"credit\">\n<h2>Credit</h2>\n<p>Given to you by <a href=\"https://quan.hoabinh.vn\" rel=\"nofollow\">Nguy\u1ec5n H\u1ed3ng Qu\u00e2n</a>, after nights and weekends.</p>\n</div>\n\n          </div>"}, "last_serial": 6733684, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "f8c46a65ae205e5895ef6402d66cd915", "sha256": "c0e9d318c14f7e5f3d531ede9a0ae67c80d46faab12b69d203481917e90d85c5"}, "downloads": -1, "filename": "vietnam_provinces-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f8c46a65ae205e5895ef6402d66cd915", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 726521, "upload_time": "2020-03-01T19:08:31", "upload_time_iso_8601": "2020-03-01T19:08:31.718479Z", "url": "https://files.pythonhosted.org/packages/ec/64/9676560a7e2a1c6f7f78de60c05a4a0d671b02ef580ca36237e52ed0103e/vietnam_provinces-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bef8be7ac820963ca13b83fc2bbac6c9", "sha256": "70843f688ed8490248c57f44a2560e07e4768d5a1cde2d58cba86aad09f89435"}, "downloads": -1, "filename": "vietnam-provinces-0.2.tar.gz", "has_sig": false, "md5_digest": "bef8be7ac820963ca13b83fc2bbac6c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 689978, "upload_time": "2020-03-01T19:08:26", "upload_time_iso_8601": "2020-03-01T19:08:26.084425Z", "url": "https://files.pythonhosted.org/packages/d6/93/4aa702b3b8afd48998982ad442537108d340163def937998491da73e32f1/vietnam-provinces-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "bc2decbc99b0ee67f379a6327c60dd0f", "sha256": "378ff33ab12151287aaeb0615fa7e4c7830fe2747d2bea4e93a4d9a4bd9555fa"}, "downloads": -1, "filename": "vietnam_provinces-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bc2decbc99b0ee67f379a6327c60dd0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 726792, "upload_time": "2020-03-02T14:26:10", "upload_time_iso_8601": "2020-03-02T14:26:10.517264Z", "url": "https://files.pythonhosted.org/packages/18/4f/bdc2e2a3296289180b2debb1b959395059af3568bf7d15064b5762843435/vietnam_provinces-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce38be49f618008fe3066ea0649fdb2d", "sha256": "60b590d7f163dd370766170493797834e01d847f911da489da59b096d1526526"}, "downloads": -1, "filename": "vietnam-provinces-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ce38be49f618008fe3066ea0649fdb2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 690479, "upload_time": "2020-03-02T14:26:04", "upload_time_iso_8601": "2020-03-02T14:26:04.217924Z", "url": "https://files.pythonhosted.org/packages/67/c6/0767237c2e9a2f7cd0469af2c4e0a58ac118e3a0b848b603f532dc08e04e/vietnam-provinces-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc2decbc99b0ee67f379a6327c60dd0f", "sha256": "378ff33ab12151287aaeb0615fa7e4c7830fe2747d2bea4e93a4d9a4bd9555fa"}, "downloads": -1, "filename": "vietnam_provinces-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bc2decbc99b0ee67f379a6327c60dd0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 726792, "upload_time": "2020-03-02T14:26:10", "upload_time_iso_8601": "2020-03-02T14:26:10.517264Z", "url": "https://files.pythonhosted.org/packages/18/4f/bdc2e2a3296289180b2debb1b959395059af3568bf7d15064b5762843435/vietnam_provinces-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce38be49f618008fe3066ea0649fdb2d", "sha256": "60b590d7f163dd370766170493797834e01d847f911da489da59b096d1526526"}, "downloads": -1, "filename": "vietnam-provinces-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ce38be49f618008fe3066ea0649fdb2d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 690479, "upload_time": "2020-03-02T14:26:04", "upload_time_iso_8601": "2020-03-02T14:26:04.217924Z", "url": "https://files.pythonhosted.org/packages/67/c6/0767237c2e9a2f7cd0469af2c4e0a58ac118e3a0b848b603f532dc08e04e/vietnam-provinces-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:07 2020"}