{"info": {"author": "Charles Marsh", "author_email": "crmarsh@princeton.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Human Machine Interfaces", "Topic :: Text Processing :: Linguistic"], "description": "===========\nSemantic\n===========\n\n.. image:: https://badge.fury.io/py/semantic.png\n    :target: http://badge.fury.io/py/semantic\n\nSemantic is a Python library for extracting semantic information from text, including dates, numbers, mathematical equations, and unit conversions.\n\nFor each of these four semantic types, semantic provides a service module. Typical usage often looks like this::\n\n    #!/usr/bin/env python\n    from semantic.dates import DateService\n\n    service = DateService()\n    date = service.extractDate(\"On March 3 at 12:15pm...\")\n    ...\n\nThe full documentation can be found `here <https://pythonhosted.org/semantic/>`_, while the source code itself is also available on `GitHub <https://github.com/crm416/semantic>`_.\n\nInstallation\n============\n\nInstalling semantic is simple::\n\n    $ pip install semantic\n\nFeatures\n========\n\nsemantic contains four main modules, each of which corresponds to a different semantic extractor.\n\nDates (*date.py*)\n-----------------\n\nUseful for:\n\n* Extracting relative (e.g., \"a week from today\") and absolute (e.g., \"December 11, 2013\") dates from text snippets.\n* Converting date objects to human-ready phrasing.\n\nNumbers (*number.py*)\n---------------------\n\nUseful for:\n\n* Extracting numbers (integers or floats) from text snippets.\n* Converting numbers to human-readable strings.\n\nExample usage::\n\n    #!/usr/bin/env python\n    from semantic.numbers import NumberService\n\n    service = NumberService()\n\n    print service.parse(\"Two hundred and six\")\n    # 206\n\n    print service.parse(\"Five point one five\")\n    # 5.15\n\n    print service.parse(\"Eleven and two thirds\")\n    # 11.666666666666666\n\n    print service.parseMagnitude(\"7e-05\")\n    # \"seven to the negative five\"\n\n\nMath (*solver.py*)\n------------------\n\nUseful for performing mathematical operations expressed as words.\n\nExample usage::\n\n    #!/usr/bin/env python\n    from semantic.solver import MathService\n\n    service = MathService()\n\n    print service.parseEquation(\"Log one hundred and ten\")\n    # 4.70048\n\nUnits (*units.py*)\n------------------\n\nUseful for converting between units expressed as words.\n\nExample usage::\n\n    #!/usr/bin/env python\n    from semantic.units import ConversionService\n\n    service = ConversionService()\n\n    print service.convert(\"Seven and a half kilograms to pounds\")\n    # (16.534, 'lbs')\n\n    print service.convert(\"Seven and a half pounds per square foot to kilograms per meter squared\")\n    # (36.618, 'kg/m**2')\n\n\nTesting\n=======\n\nThe test suite (*test.py*) contains tons of examples and use-cases for each of the four modules.\n\nRequirements\n============\n\nThe Dates, Numbers, and Math modules can run in isolation (i.e., without any dependencies), while the Units module requires `quantities <https://pypi.python.org/pypi/quantities>`_ and `Numpy <http://www.numpy.org>`_.\n\nLicense\n=======\n\nMIT \u00a9 `Charles Marsh <http://www.princeton.edu/~crmarsh>`_", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/crm416/semantic", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "semantic3", "package_url": "https://pypi.org/project/semantic3/", "platform": "", "project_url": "https://pypi.org/project/semantic3/", "project_urls": {"Homepage": "https://github.com/crm416/semantic"}, "release_url": "https://pypi.org/project/semantic3/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Common Natural Language Processing Tasks for Python", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://badge.fury.io/py/semantic\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/semantic.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90e02ab60aa340842879b8ae50763f6e7a35dd1b/68747470733a2f2f62616467652e667572792e696f2f70792f73656d616e7469632e706e67\"></a>\n<p>Semantic is a Python library for extracting semantic information from text, including dates, numbers, mathematical equations, and unit conversions.</p>\n<p>For each of these four semantic types, semantic provides a service module. Typical usage often looks like this:</p>\n<pre>#!/usr/bin/env python\nfrom semantic.dates import DateService\n\nservice = DateService()\ndate = service.extractDate(\"On March 3 at 12:15pm...\")\n...\n</pre>\n<p>The full documentation can be found <a href=\"https://pythonhosted.org/semantic/\" rel=\"nofollow\">here</a>, while the source code itself is also available on <a href=\"https://github.com/crm416/semantic\" rel=\"nofollow\">GitHub</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Installing semantic is simple:</p>\n<pre>$ pip install semantic\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>semantic contains four main modules, each of which corresponds to a different semantic extractor.</p>\n<div id=\"dates-date-py\">\n<h3>Dates (<em>date.py</em>)</h3>\n<p>Useful for:</p>\n<ul>\n<li>Extracting relative (e.g., \u201ca week from today\u201d) and absolute (e.g., \u201cDecember 11, 2013\u201d) dates from text snippets.</li>\n<li>Converting date objects to human-ready phrasing.</li>\n</ul>\n</div>\n<div id=\"numbers-number-py\">\n<h3>Numbers (<em>number.py</em>)</h3>\n<p>Useful for:</p>\n<ul>\n<li>Extracting numbers (integers or floats) from text snippets.</li>\n<li>Converting numbers to human-readable strings.</li>\n</ul>\n<p>Example usage:</p>\n<pre>#!/usr/bin/env python\nfrom semantic.numbers import NumberService\n\nservice = NumberService()\n\nprint service.parse(\"Two hundred and six\")\n# 206\n\nprint service.parse(\"Five point one five\")\n# 5.15\n\nprint service.parse(\"Eleven and two thirds\")\n# 11.666666666666666\n\nprint service.parseMagnitude(\"7e-05\")\n# \"seven to the negative five\"\n</pre>\n</div>\n<div id=\"math-solver-py\">\n<h3>Math (<em>solver.py</em>)</h3>\n<p>Useful for performing mathematical operations expressed as words.</p>\n<p>Example usage:</p>\n<pre>#!/usr/bin/env python\nfrom semantic.solver import MathService\n\nservice = MathService()\n\nprint service.parseEquation(\"Log one hundred and ten\")\n# 4.70048\n</pre>\n</div>\n<div id=\"units-units-py\">\n<h3>Units (<em>units.py</em>)</h3>\n<p>Useful for converting between units expressed as words.</p>\n<p>Example usage:</p>\n<pre>#!/usr/bin/env python\nfrom semantic.units import ConversionService\n\nservice = ConversionService()\n\nprint service.convert(\"Seven and a half kilograms to pounds\")\n# (16.534, 'lbs')\n\nprint service.convert(\"Seven and a half pounds per square foot to kilograms per meter squared\")\n# (36.618, 'kg/m**2')\n</pre>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>The test suite (<em>test.py</em>) contains tons of examples and use-cases for each of the four modules.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>The Dates, Numbers, and Math modules can run in isolation (i.e., without any dependencies), while the Units module requires <a href=\"https://pypi.python.org/pypi/quantities\" rel=\"nofollow\">quantities</a> and <a href=\"http://www.numpy.org\" rel=\"nofollow\">Numpy</a>.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT \u00a9 <a href=\"http://www.princeton.edu/~crmarsh\" rel=\"nofollow\">Charles Marsh</a></p>\n</div>\n\n          </div>"}, "last_serial": 2957093, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "bb5598af5827125c24a2854eafe329b1", "sha256": "1bd33892dee8b637222570f90e71dad47da1235fc1904eaff7c1f153449d2d41"}, "downloads": -1, "filename": "semantic3-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bb5598af5827125c24a2854eafe329b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14776, "upload_time": "2017-06-18T03:46:49", "upload_time_iso_8601": "2017-06-18T03:46:49.340000Z", "url": "https://files.pythonhosted.org/packages/55/db/64642ec40db6547485894bd58946bb01343c4ec8411ca8baf07607cb28f0/semantic3-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb5598af5827125c24a2854eafe329b1", "sha256": "1bd33892dee8b637222570f90e71dad47da1235fc1904eaff7c1f153449d2d41"}, "downloads": -1, "filename": "semantic3-1.0.2.tar.gz", "has_sig": false, "md5_digest": "bb5598af5827125c24a2854eafe329b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14776, "upload_time": "2017-06-18T03:46:49", "upload_time_iso_8601": "2017-06-18T03:46:49.340000Z", "url": "https://files.pythonhosted.org/packages/55/db/64642ec40db6547485894bd58946bb01343c4ec8411ca8baf07607cb28f0/semantic3-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:25 2020"}