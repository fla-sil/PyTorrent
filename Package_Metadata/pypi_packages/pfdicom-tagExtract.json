{"info": {"author": "FNNDSC", "author_email": "dev@babymri.org", "bugtrack_url": null, "classifiers": [], "description": "pfdicom_tagExtract\n==================\n\n.. image:: https://badge.fury.io/py/pfdicom_tagExtract.svg\n    :target: https://badge.fury.io/py/pfdicom_tagExtract\n\n.. image:: https://travis-ci.org/FNNDSC/pfdicom_tagExtract.svg?branch=master\n    :target: https://travis-ci.org/FNNDSC/pfdicom_tagExtract\n\n.. image:: https://img.shields.io/badge/python-3.5%2B-blue.svg\n    :target: https://badge.fury.io/py/pfdicom_tagExtract\n\n.. contents:: Table of Contents\n\n\nQuick Overview\n--------------\n\n-  ``pfdicom_tagExtract`` generates reports in various formats (txt, html, etc) based on parsing DICOM meta data (i.e. DICOM tags).\n\nOverview\n--------\n\n``pfdicom_tagExtract`` extracts the header information of DICOM files and echoes to stdout as well as to an output report-type file -- this can be a raw output, a json-type output, or html-type output.\n\nThe script accepts an ``<inputDir>``, and then from this point a recursive ``os.walk()``  is performed to probe all subdirs containing files to process. Each subdir is examined for DICOM files (in the simplest sense by a file extension mapping) and either the head, tail, middle (or other indexed) file is examined for its tag information.\n\nOptionally, the tag list can be constrained either by passing a ``<tagFile>`` containing a line-by-line list of tags to query, or by passing a comma separated list of tags directly.\n\nFinally, an image conversion can also be performed (and embedded within the output html file, if an html conversion is specified).\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\nThe following dependencies are installed on your host system/python3 virtual env (they will also be automatically installed if pulled from pypi):\n\n-  ``pfmisc`` (various misc modules and classes for the pf* family of objects)\n-  ``pftree`` (create a dictionary representation of a filesystem hierarchy)\n-  ``pfdicom`` (handle underlying DICOM file reading)\n-  ``matplotlib`` (handle saving / conversion to image formats for html reports)\n\nUsing ``PyPI``\n~~~~~~~~~~~~~~\n\nThe best method of installing this script and all of its dependencies is\nby fetching it from PyPI\n\n.. code:: bash\n\n        pip3 install pfdicom_tagExtract\n\nCommand line arguments\n----------------------\n\n.. code:: html\n\n        -I|--inputDir <inputDir>\n        Input DICOM directory to examine. By default, the first file in this\n        directory is examined for its tag information. There is an implicit\n        assumption that each <inputDir> contains a single DICOM series.\n\n        -i|--inputFile <inputFile>\n        An optional <inputFile> specified relative to the <inputDir>. If \n        specified, then do not perform a directory walk, but convert only \n        this file.\n\n        -e|--extension <DICOMextension>\n        An optional extension to filter the DICOM files of interest from the \n        <inputDir>.\n\n        [-O|--outputDir <outputDir>]\n        The directory to contain all output files.\n\n        [--outputLeafDir <outputLeafDirFormat>]\n        If specified, will apply the <outputLeafDirFormat> to the output\n        directories containing data. This is useful to blanket describe\n        final output directories with some descriptive text, such as \n        'anon' or 'preview'. \n\n        This is a formatting spec, so \n\n            --outputLeafDir 'preview-%s'\n\n        where %s is the original leaf directory node, will prefix each\n        final directory containing output with the text 'preview-' which\n        can be useful in describing some features of the output set.\n\n        -F|--tagFile <tagFile>\n        Read the tags, one-per-line in <tagFile>, and print the\n        corresponding tag information in the DICOM <inputFile>.\n\n        -T|--tagList <tagList>\n        Read the list of comma-separated tags in <tagList>, and print the\n        corresponding tag information parsed from the DICOM <inputFile>.\n\n        -m|--image <[<index>:]imageFile>\n        If specified, also convert the <inputFile> to <imageFile>. If the\n        name is preceded by an index and colon, then convert this indexed \n        file in the particular <inputDir>.\n\n        [-s|--imageScale <factor:interpolation>]\n        If an image conversion is specified, this flag will scale the image\n        by <factor> and use an interpolation <order>. This is useful in \n        increasing the size of images for the html output.\n\n        Note that certain interpolation choices can result in a significant\n        slowdown!\n\n            interpolation order:\n            \n            'none', 'nearest', 'bilinear', 'bicubic', 'spline16',\n            'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric',\n            'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos'\n\n        -o|--outputFileStem <outputFileStem>\n        The output file stem to store data. This should *not* have a file\n        extension, or rather, any \".\" in the name are considered part of \n        the stem and are *not* considered extensions.\n\n        [-t|--outputFileType <outputFileType>]\n        A comma specified list of output types. These can be:\n\n            o <type>    <ext>       <desc>\n            o raw       -raw.txt    the raw internal dcm structure to string\n            o json      .json       a json representation\n            o html      .html       an html representation with optional image\n            o dict      -dict.txt   a python dictionary\n            o col       -col.txt    a two-column text representation (tab sep)\n            o csv       .csv        a csv representation\n\n        Note that if not specified, a default type of 'raw' is assigned.\n\n        [-p|--printToScreen]\n        If specified, will print tags to screen.\n\n        [-x|--man]\n        Show full help.\n\n        [-y|--synopsis]\n        Show brief help.\n\n        [--version]\n        If specified, print the version number and exit.\n\n        [--json]\n        If specified, output a JSON dump of final return.\n\n        [--followLinks]\n        If specified, follow symbolic links.\n\n        -v|--verbosity <level>\n        Set the app verbosity level. \n\n            0: No internal output;\n            1: Run start / stop output notification;\n            2: As with level '1' but with simpleProgress bar in 'pftree';\n            3: As with level '2' but with list of input dirs/files in 'pftree';\n            5: As with level '3' but with explicit file logging for\n                    - read\n                    - analyze\n                    - write\n\nExamples\n--------\n\nRun on a target tree and output some detail and stats\n\n.. code:: bash\n\n        pfdicom_tagExtract                                      \\\n                    -I /var/www/html/normsmall -e dcm           \\\n                    -O /var/www/html/tag                        \\\n                    -o '%_md5|6_PatientID-%PatientAge'          \\\n                    -m 'm:%_nospc|-_ProtocolName.jpg'           \\\n                    -s 3:none                                   \\\n                    --useIndexhtml                              \\\n                    -t raw,json,html,dict,col,csv               \\\n                    --threads 0 -v 0 --json\n \nwhich will output only at script conclusion and will log a JSON formatted string.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FNNDSC/pfdicom_tagExtract", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pfdicom-tagExtract", "package_url": "https://pypi.org/project/pfdicom-tagExtract/", "platform": "", "project_url": "https://pypi.org/project/pfdicom-tagExtract/", "project_urls": {"Homepage": "https://github.com/FNNDSC/pfdicom_tagExtract"}, "release_url": "https://pypi.org/project/pfdicom-tagExtract/2.2.20/", "requires_dist": null, "requires_python": "", "summary": "Extract DICOM header info -- part of the pf* family.", "version": "2.2.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/pfdicom_tagExtract\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pfdicom_tagExtract.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4a2a054d013793670ae93063346a3941f412e23/68747470733a2f2f62616467652e667572792e696f2f70792f70666469636f6d5f746167457874726163742e737667\"></a>\n<a href=\"https://travis-ci.org/FNNDSC/pfdicom_tagExtract\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/FNNDSC/pfdicom_tagExtract.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d78b2e6526288f8ae84ce25cb7d29afeb1620d73/68747470733a2f2f7472617669732d63692e6f72672f464e4e4453432f70666469636f6d5f746167457874726163742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pfdicom_tagExtract\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.5%2B-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72717db1f08ff88b6b237ad21c89e86732f2fa28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352532422d626c75652e737667\"></a>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#quick-overview\" id=\"id1\" rel=\"nofollow\">Quick Overview</a></li>\n<li><a href=\"#overview\" id=\"id2\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#installation\" id=\"id3\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#dependencies\" id=\"id4\" rel=\"nofollow\">Dependencies</a></li>\n<li><a href=\"#using-pypi\" id=\"id5\" rel=\"nofollow\">Using <tt>PyPI</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#command-line-arguments\" id=\"id6\" rel=\"nofollow\">Command line arguments</a></li>\n<li><a href=\"#examples\" id=\"id7\" rel=\"nofollow\">Examples</a></li>\n</ul>\n</div>\n<div id=\"quick-overview\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Quick Overview</a></h2>\n<ul>\n<li><tt>pfdicom_tagExtract</tt> generates reports in various formats (txt, html, etc) based on parsing DICOM meta data (i.e. DICOM tags).</li>\n</ul>\n</div>\n<div id=\"overview\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Overview</a></h2>\n<p><tt>pfdicom_tagExtract</tt> extracts the header information of DICOM files and echoes to stdout as well as to an output report-type file \u2013 this can be a raw output, a json-type output, or html-type output.</p>\n<p>The script accepts an <tt>&lt;inputDir&gt;</tt>, and then from this point a recursive <tt>os.walk()</tt>  is performed to probe all subdirs containing files to process. Each subdir is examined for DICOM files (in the simplest sense by a file extension mapping) and either the head, tail, middle (or other indexed) file is examined for its tag information.</p>\n<p>Optionally, the tag list can be constrained either by passing a <tt>&lt;tagFile&gt;</tt> containing a line-by-line list of tags to query, or by passing a comma separated list of tags directly.</p>\n<p>Finally, an image conversion can also be performed (and embedded within the output html file, if an html conversion is specified).</p>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Installation</a></h2>\n<div id=\"dependencies\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Dependencies</a></h3>\n<p>The following dependencies are installed on your host system/python3 virtual env (they will also be automatically installed if pulled from pypi):</p>\n<ul>\n<li><tt>pfmisc</tt> (various misc modules and classes for the pf* family of objects)</li>\n<li><tt>pftree</tt> (create a dictionary representation of a filesystem hierarchy)</li>\n<li><tt>pfdicom</tt> (handle underlying DICOM file reading)</li>\n<li><tt>matplotlib</tt> (handle saving / conversion to image formats for html reports)</li>\n</ul>\n</div>\n<div id=\"using-pypi\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Using <tt>PyPI</tt></a></h3>\n<p>The best method of installing this script and all of its dependencies is\nby fetching it from PyPI</p>\n<pre>pip3 install pfdicom_tagExtract\n</pre>\n</div>\n</div>\n<div id=\"command-line-arguments\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Command line arguments</a></h2>\n<pre>-I|--inputDir <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>\nInput DICOM directory to examine. By default, the first file in this\ndirectory is examined for its tag information. There is an implicit\nassumption that each <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span> contains a single DICOM series.\n\n-i|--inputFile <span class=\"p\">&lt;</span><span class=\"nt\">inputFile</span><span class=\"p\">&gt;</span>\nAn optional <span class=\"p\">&lt;</span><span class=\"nt\">inputFile</span><span class=\"p\">&gt;</span> specified relative to the <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>. If\nspecified, then do not perform a directory walk, but convert only\nthis file.\n\n-e|--extension <span class=\"p\">&lt;</span><span class=\"nt\">DICOMextension</span><span class=\"p\">&gt;</span>\nAn optional extension to filter the DICOM files of interest from the\n<span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>.\n\n[-O|--outputDir <span class=\"p\">&lt;</span><span class=\"nt\">outputDir</span><span class=\"p\">&gt;</span>]\nThe directory to contain all output files.\n\n[--outputLeafDir <span class=\"p\">&lt;</span><span class=\"nt\">outputLeafDirFormat</span><span class=\"p\">&gt;</span>]\nIf specified, will apply the <span class=\"p\">&lt;</span><span class=\"nt\">outputLeafDirFormat</span><span class=\"p\">&gt;</span> to the output\ndirectories containing data. This is useful to blanket describe\nfinal output directories with some descriptive text, such as\n'anon' or 'preview'.\n\nThis is a formatting spec, so\n\n    --outputLeafDir 'preview-%s'\n\nwhere %s is the original leaf directory node, will prefix each\nfinal directory containing output with the text 'preview-' which\ncan be useful in describing some features of the output set.\n\n-F|--tagFile <span class=\"p\">&lt;</span><span class=\"nt\">tagFile</span><span class=\"p\">&gt;</span>\nRead the tags, one-per-line in <span class=\"p\">&lt;</span><span class=\"nt\">tagFile</span><span class=\"p\">&gt;</span>, and print the\ncorresponding tag information in the DICOM <span class=\"p\">&lt;</span><span class=\"nt\">inputFile</span><span class=\"p\">&gt;</span>.\n\n-T|--tagList <span class=\"p\">&lt;</span><span class=\"nt\">tagList</span><span class=\"p\">&gt;</span>\nRead the list of comma-separated tags in <span class=\"p\">&lt;</span><span class=\"nt\">tagList</span><span class=\"p\">&gt;</span>, and print the\ncorresponding tag information parsed from the DICOM <span class=\"p\">&lt;</span><span class=\"nt\">inputFile</span><span class=\"p\">&gt;</span>.\n\n-m|--image <span class=\"err\">&lt;</span>[<span class=\"p\">&lt;</span><span class=\"nt\">index</span><span class=\"p\">&gt;</span>:]imageFile&gt;\nIf specified, also convert the <span class=\"p\">&lt;</span><span class=\"nt\">inputFile</span><span class=\"p\">&gt;</span> to <span class=\"p\">&lt;</span><span class=\"nt\">imageFile</span><span class=\"p\">&gt;</span>. If the\nname is preceded by an index and colon, then convert this indexed\nfile in the particular <span class=\"p\">&lt;</span><span class=\"nt\">inputDir</span><span class=\"p\">&gt;</span>.\n\n[-s|--imageScale <span class=\"p\">&lt;</span><span class=\"nt\">factor:interpolation</span><span class=\"p\">&gt;</span>]\nIf an image conversion is specified, this flag will scale the image\nby <span class=\"p\">&lt;</span><span class=\"nt\">factor</span><span class=\"p\">&gt;</span> and use an interpolation <span class=\"p\">&lt;</span><span class=\"nt\">order</span><span class=\"p\">&gt;</span>. This is useful in\nincreasing the size of images for the html output.\n\nNote that certain interpolation choices can result in a significant\nslowdown!\n\n    interpolation order:\n\n    'none', 'nearest', 'bilinear', 'bicubic', 'spline16',\n    'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric',\n    'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos'\n\n-o|--outputFileStem <span class=\"p\">&lt;</span><span class=\"nt\">outputFileStem</span><span class=\"p\">&gt;</span>\nThe output file stem to store data. This should *not* have a file\nextension, or rather, any \".\" in the name are considered part of\nthe stem and are *not* considered extensions.\n\n[-t|--outputFileType <span class=\"p\">&lt;</span><span class=\"nt\">outputFileType</span><span class=\"p\">&gt;</span>]\nA comma specified list of output types. These can be:\n\n    o <span class=\"p\">&lt;</span><span class=\"nt\">type</span><span class=\"p\">&gt;</span>    <span class=\"p\">&lt;</span><span class=\"nt\">ext</span><span class=\"p\">&gt;</span>       <span class=\"p\">&lt;</span><span class=\"nt\">desc</span><span class=\"p\">&gt;</span>\n    o raw       -raw.txt    the raw internal dcm structure to string\n    o json      .json       a json representation\n    o html      .html       an html representation with optional image\n    o dict      -dict.txt   a python dictionary\n    o col       -col.txt    a two-column text representation (tab sep)\n    o csv       .csv        a csv representation\n\nNote that if not specified, a default type of 'raw' is assigned.\n\n[-p|--printToScreen]\nIf specified, will print tags to screen.\n\n[-x|--man]\nShow full help.\n\n[-y|--synopsis]\nShow brief help.\n\n[--version]\nIf specified, print the version number and exit.\n\n[--json]\nIf specified, output a JSON dump of final return.\n\n[--followLinks]\nIf specified, follow symbolic links.\n\n-v|--verbosity <span class=\"p\">&lt;</span><span class=\"nt\">level</span><span class=\"p\">&gt;</span>\nSet the app verbosity level.\n\n    0: No internal output;\n    1: Run start / stop output notification;\n    2: As with level '1' but with simpleProgress bar in 'pftree';\n    3: As with level '2' but with list of input dirs/files in 'pftree';\n    5: As with level '3' but with explicit file logging for\n            - read\n            - analyze\n            - write\n</pre>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Examples</a></h2>\n<p>Run on a target tree and output some detail and stats</p>\n<pre>pfdicom_tagExtract                                      <span class=\"se\">\\\n</span>            -I /var/www/html/normsmall -e dcm           <span class=\"se\">\\\n</span>            -O /var/www/html/tag                        <span class=\"se\">\\\n</span>            -o <span class=\"s1\">'%_md5|6_PatientID-%PatientAge'</span>          <span class=\"se\">\\\n</span>            -m <span class=\"s1\">'m:%_nospc|-_ProtocolName.jpg'</span>           <span class=\"se\">\\\n</span>            -s <span class=\"m\">3</span>:none                                   <span class=\"se\">\\\n</span>            --useIndexhtml                              <span class=\"se\">\\\n</span>            -t raw,json,html,dict,col,csv               <span class=\"se\">\\\n</span>            --threads <span class=\"m\">0</span> -v <span class=\"m\">0</span> --json\n</pre>\n<p>which will output only at script conclusion and will log a JSON formatted string.</p>\n</div>\n\n          </div>"}, "last_serial": 5908800, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "ddb17ae7525f2ba52cefcf726b9edf4a", "sha256": "3c2eb96bba7c6b99b3a8824c98c20e58bc82ec5dee8abbdb6d879671a7c08acf"}, "downloads": -1, "filename": "pfdicom_tagExtract-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ddb17ae7525f2ba52cefcf726b9edf4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8954, "upload_time": "2018-07-14T01:33:42", "upload_time_iso_8601": "2018-07-14T01:33:42.240518Z", "url": "https://files.pythonhosted.org/packages/b6/dc/a449f430e1017a25abde5ee26d71f433401db1c89968710bf5601025a958/pfdicom_tagExtract-1.1.0.tar.gz", "yanked": false}], "1.1.10": [{"comment_text": "", "digests": {"md5": "66792e46b97560694121040cebcb951c", "sha256": "d834c885a54db52b3f67f3f10fbdf996691a1de38d7ca00e2b63e53f539bc9e4"}, "downloads": -1, "filename": "pfdicom_tagExtract-1.1.10.tar.gz", "has_sig": false, "md5_digest": "66792e46b97560694121040cebcb951c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14791, "upload_time": "2018-07-25T19:59:48", "upload_time_iso_8601": "2018-07-25T19:59:48.091006Z", "url": "https://files.pythonhosted.org/packages/ca/e3/65272a3433bbb55b391db1881314a624bff500da53bf6e491b90991f63b4/pfdicom_tagExtract-1.1.10.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "f3a14d6e43966c68d8a9a1f4b2578dbf", "sha256": "6e4837e08499d1dbdf831d99a245946897dabb4685878f55ef21b2d57671927c"}, "downloads": -1, "filename": "pfdicom_tagExtract-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f3a14d6e43966c68d8a9a1f4b2578dbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9525, "upload_time": "2018-07-15T16:21:40", "upload_time_iso_8601": "2018-07-15T16:21:40.296093Z", "url": "https://files.pythonhosted.org/packages/54/25/8060815850808ec1dabf526ad5cf1fe1585cbb5c8c84f0837f48548e23b8/pfdicom_tagExtract-1.1.2.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "b5500947f7823032e629979d3a8e5851", "sha256": "e390cc8942e6f387484eb1ee6d9798100468903100bc39ced19c605e1af5decd"}, "downloads": -1, "filename": "pfdicom_tagExtract-1.1.4.tar.gz", "has_sig": false, "md5_digest": "b5500947f7823032e629979d3a8e5851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9534, "upload_time": "2018-07-15T21:28:51", "upload_time_iso_8601": "2018-07-15T21:28:51.577722Z", "url": "https://files.pythonhosted.org/packages/85/4a/d43b6cba338fa8e9149f9793ee574edd0b2e6072783dcfa0def5a0ea3714/pfdicom_tagExtract-1.1.4.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "6c29feac339b3b9280f18055c579c7ce", "sha256": "8c38ae5a56adfaa6189b04131a1f1b4ddb2638b592d46f0f3c44eb06e204f317"}, "downloads": -1, "filename": "pfdicom_tagExtract-1.1.6.tar.gz", "has_sig": false, "md5_digest": "6c29feac339b3b9280f18055c579c7ce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8970, "upload_time": "2018-07-17T01:11:23", "upload_time_iso_8601": "2018-07-17T01:11:23.196677Z", "url": "https://files.pythonhosted.org/packages/44/e7/d6f0faea6f3ec28945921bfd46ddf88f3d8014dbaf3958b45f53bbbefee3/pfdicom_tagExtract-1.1.6.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "206dc4784203ab90d0390e2da53cc20f", "sha256": "6d4b61eb35259a0df396387736379bfe68ef0f0ab0f5d42a6080b3f6bfcc1b3c"}, "downloads": -1, "filename": "pfdicom_tagExtract-1.1.8.tar.gz", "has_sig": false, "md5_digest": "206dc4784203ab90d0390e2da53cc20f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14804, "upload_time": "2018-07-25T19:31:49", "upload_time_iso_8601": "2018-07-25T19:31:49.567504Z", "url": "https://files.pythonhosted.org/packages/9b/1b/cf997a28d0ae73acd7e99d6a9e61111f52e979e9bda78844026e52e304b6/pfdicom_tagExtract-1.1.8.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "79a59e15e346a82a8db883636eb41c59", "sha256": "c99eb0988f1140bf7463219cf30a37b2a9235fb4b25321fcb6b473b351d6a192"}, "downloads": -1, "filename": "pfdicom_tagExtract-1.2.0.tar.gz", "has_sig": false, "md5_digest": "79a59e15e346a82a8db883636eb41c59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14795, "upload_time": "2018-07-25T20:15:37", "upload_time_iso_8601": "2018-07-25T20:15:37.212297Z", "url": "https://files.pythonhosted.org/packages/a4/05/0f0e06fd2823e6e1b91dc548ede26dcaf8b57a82ba39d83fd8c2335e4365/pfdicom_tagExtract-1.2.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "493b92ceffc1f5e0307b4ab648c45c16", "sha256": "b21ac20ea4e96fa628a10d3b32bbe1c0bf7315784371725a7d52d10d77bb5dfe"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.0.0.tar.gz", "has_sig": false, "md5_digest": "493b92ceffc1f5e0307b4ab648c45c16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15541, "upload_time": "2018-07-25T22:10:39", "upload_time_iso_8601": "2018-07-25T22:10:39.250161Z", "url": "https://files.pythonhosted.org/packages/14/bf/cbb8a5cb89cd5e1d2d47200a7066baabfb960c89057403bbc9ac6392a970/pfdicom_tagExtract-2.0.0.tar.gz", "yanked": false}], "2.0.10": [{"comment_text": "", "digests": {"md5": "5183f48c03dfd907609dc70e3944adbb", "sha256": "07312076912086c1ac780ffc40bbfb21ad7576cfb0d9e065260f697d7e58f080"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.0.10.tar.gz", "has_sig": false, "md5_digest": "5183f48c03dfd907609dc70e3944adbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16388, "upload_time": "2018-07-31T21:14:25", "upload_time_iso_8601": "2018-07-31T21:14:25.682431Z", "url": "https://files.pythonhosted.org/packages/b8/c1/3b3d21fde420448c7c2905b35d86062602800283b00b1fa7e2ca29427046/pfdicom_tagExtract-2.0.10.tar.gz", "yanked": false}], "2.0.12": [{"comment_text": "", "digests": {"md5": "cf4ef90fffb8639f753eabd180877e65", "sha256": "85e3edfb32e14aa773e0111e4dca5c374e55f8035b9176bacd9be40919162b63"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.0.12.tar.gz", "has_sig": false, "md5_digest": "cf4ef90fffb8639f753eabd180877e65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16400, "upload_time": "2018-08-01T19:06:30", "upload_time_iso_8601": "2018-08-01T19:06:30.507863Z", "url": "https://files.pythonhosted.org/packages/46/d8/1c2e03dfb386e722d044a7733976f3e46c9f8f470d214df7df039d23f545/pfdicom_tagExtract-2.0.12.tar.gz", "yanked": false}], "2.0.14": [{"comment_text": "", "digests": {"md5": "6930b7d24165ab5b7a7752618df8de68", "sha256": "43443b1535e471166c1dec1521ee9a839024d0fe806b34f81062ebe4cfbc9074"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.0.14.tar.gz", "has_sig": false, "md5_digest": "6930b7d24165ab5b7a7752618df8de68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16424, "upload_time": "2018-08-01T20:00:27", "upload_time_iso_8601": "2018-08-01T20:00:27.388265Z", "url": "https://files.pythonhosted.org/packages/76/da/c474267469fc1a8284ce8126cc11b2be1d3ba381cc78a858788c72b6d51a/pfdicom_tagExtract-2.0.14.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "9a7f5b802371fe3b8c90eab3e538726d", "sha256": "f4207f2e88e64308de6d4049d3a9cccce91c91af899d72c05697649d10a4fe20"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.0.2.tar.gz", "has_sig": false, "md5_digest": "9a7f5b802371fe3b8c90eab3e538726d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15922, "upload_time": "2018-07-27T18:45:21", "upload_time_iso_8601": "2018-07-27T18:45:21.824781Z", "url": "https://files.pythonhosted.org/packages/4f/a3/96769a86c7646ca02aa1f368250de2e01058778e735e972e78ceef4dae34/pfdicom_tagExtract-2.0.2.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "715c4c32edd747401393042ea448422a", "sha256": "b04c280f49123b5ca8254a594d587445a4e2c710d07523dd49cb0f8689e5709d"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.0.4.tar.gz", "has_sig": false, "md5_digest": "715c4c32edd747401393042ea448422a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15919, "upload_time": "2018-07-30T18:19:32", "upload_time_iso_8601": "2018-07-30T18:19:32.365730Z", "url": "https://files.pythonhosted.org/packages/ec/ec/74cb446b292dc7b213a2b5535c568979370321e2118c6b2d602d0b4c2f41/pfdicom_tagExtract-2.0.4.tar.gz", "yanked": false}], "2.0.6": [{"comment_text": "", "digests": {"md5": "6fbbe56141ec7bda1257a3c61bfeca67", "sha256": "9ae9b5b1ae198c2a94d8a7aa589c7335de9e293d787536e80c584b2cb940b59f"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.0.6.tar.gz", "has_sig": false, "md5_digest": "6fbbe56141ec7bda1257a3c61bfeca67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16194, "upload_time": "2018-07-31T16:20:33", "upload_time_iso_8601": "2018-07-31T16:20:33.737183Z", "url": "https://files.pythonhosted.org/packages/de/34/2f0662d940f822ca6022e5248dc377f1dcf21b0efdc36b12c5a2f3503cb4/pfdicom_tagExtract-2.0.6.tar.gz", "yanked": false}], "2.0.8": [{"comment_text": "", "digests": {"md5": "5ab4c1c86bfb70089a5d98b24003d51c", "sha256": "ab4fdb374e71351daf3d23721740b62acf79ffca9613c256a6c15ae81f82b26a"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.0.8.tar.gz", "has_sig": false, "md5_digest": "5ab4c1c86bfb70089a5d98b24003d51c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16316, "upload_time": "2018-07-31T21:10:28", "upload_time_iso_8601": "2018-07-31T21:10:28.618404Z", "url": "https://files.pythonhosted.org/packages/12/23/7050ed14095e9cc871221e8d98b849ced22e50d13d3c7bb421d345079f8a/pfdicom_tagExtract-2.0.8.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "79e46df7670dfbca9359c890aa9b52fe", "sha256": "8a51654d08614ec67a175e43ebd17e675be9652d23ebf5e40c46886d9c0a1d99"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.0.tar.gz", "has_sig": false, "md5_digest": "79e46df7670dfbca9359c890aa9b52fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16430, "upload_time": "2018-08-01T20:28:50", "upload_time_iso_8601": "2018-08-01T20:28:50.033201Z", "url": "https://files.pythonhosted.org/packages/40/9a/c3e537a5be46d7099b081381927b098cce8c63681d9da7a1e023fa6a3764/pfdicom_tagExtract-2.2.0.tar.gz", "yanked": false}], "2.2.10": [{"comment_text": "", "digests": {"md5": "99c6fea8cdbf7b561c0f7d1b96449ea7", "sha256": "42552f318ad2f8db28f5357ab324ca8a547bff23a510598bd20682defe900d2b"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.10.tar.gz", "has_sig": false, "md5_digest": "99c6fea8cdbf7b561c0f7d1b96449ea7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13710, "upload_time": "2018-12-04T19:26:40", "upload_time_iso_8601": "2018-12-04T19:26:40.278664Z", "url": "https://files.pythonhosted.org/packages/d7/42/563ee59901b542b08df37a37570bc0a616352e7fc9b6f90ebf085f8337a0/pfdicom_tagExtract-2.2.10.tar.gz", "yanked": false}], "2.2.12": [{"comment_text": "", "digests": {"md5": "6932cf6c84b0525e4a3f7c6fc6757dff", "sha256": "95afa59c07189248808635353d343bec9c32ba05ea964fe13b73ae6ad375e099"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.12.tar.gz", "has_sig": false, "md5_digest": "6932cf6c84b0525e4a3f7c6fc6757dff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13716, "upload_time": "2018-12-04T21:32:23", "upload_time_iso_8601": "2018-12-04T21:32:23.095753Z", "url": "https://files.pythonhosted.org/packages/df/ec/66a427b8d4ddf079f0e401f17f273a0ec962a73a393447d26bf45397c223/pfdicom_tagExtract-2.2.12.tar.gz", "yanked": false}], "2.2.14": [{"comment_text": "", "digests": {"md5": "463f2ae17e835507325d26d4a22e551e", "sha256": "03e4361699b4f4364e7a88613793eedf3a68db6c3dd3024d49e9fee7d524e0ec"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.14.tar.gz", "has_sig": false, "md5_digest": "463f2ae17e835507325d26d4a22e551e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13730, "upload_time": "2018-12-04T21:55:29", "upload_time_iso_8601": "2018-12-04T21:55:29.266393Z", "url": "https://files.pythonhosted.org/packages/49/39/b8654df55c5f178f755a9a1b4e61ea932c5a3d8d2d3673a9cb4dd135540c/pfdicom_tagExtract-2.2.14.tar.gz", "yanked": false}], "2.2.16": [{"comment_text": "", "digests": {"md5": "e27d103bb15b3044bbf42549b121a7d7", "sha256": "00573c10c37f8c76386582e26b4b26de4bf80d0a320ff996545bccb599be7467"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.16.tar.gz", "has_sig": false, "md5_digest": "e27d103bb15b3044bbf42549b121a7d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13710, "upload_time": "2018-12-05T22:08:48", "upload_time_iso_8601": "2018-12-05T22:08:48.119663Z", "url": "https://files.pythonhosted.org/packages/4c/99/9dc3d4f2ddf65d5a07d0249e93d5f60cf6afac62a6d6ccac7672404213f4/pfdicom_tagExtract-2.2.16.tar.gz", "yanked": false}], "2.2.18": [{"comment_text": "", "digests": {"md5": "458a56e724db4ee807edc79d57b2e853", "sha256": "e553e7ca47617488de4fdb2c0879405e8360620b7ed2339a0b988d1766eaa40c"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.18.tar.gz", "has_sig": false, "md5_digest": "458a56e724db4ee807edc79d57b2e853", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13730, "upload_time": "2018-12-07T19:39:37", "upload_time_iso_8601": "2018-12-07T19:39:37.838389Z", "url": "https://files.pythonhosted.org/packages/58/73/a14b5043a6de8de53093f833dbad3d3a26150ad5e9770fa9c148edf52caa/pfdicom_tagExtract-2.2.18.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "0843b39af1e1e483e7d8b75562141196", "sha256": "ceb9028dff8f6ed1db74400ffdab50eaced8edf1f57a166d8739b79d2ca00c4b"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.2.tar.gz", "has_sig": false, "md5_digest": "0843b39af1e1e483e7d8b75562141196", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23982, "upload_time": "2018-08-02T18:23:55", "upload_time_iso_8601": "2018-08-02T18:23:55.601839Z", "url": "https://files.pythonhosted.org/packages/67/af/aaf39125825fda5b3ef338a98477bc7eddbf759efbd99b204e1432814cb6/pfdicom_tagExtract-2.2.2.tar.gz", "yanked": false}], "2.2.20": [{"comment_text": "", "digests": {"md5": "44cc74d18197cc6dee00b71fca833677", "sha256": "96974d693dd5c85b81fb16b5ea5a4418bc9419cb5f653a0dcb464d6ffd78d34d"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.20.tar.gz", "has_sig": false, "md5_digest": "44cc74d18197cc6dee00b71fca833677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14016, "upload_time": "2019-09-30T20:26:04", "upload_time_iso_8601": "2019-09-30T20:26:04.196472Z", "url": "https://files.pythonhosted.org/packages/b5/80/f1baea66d75a3a5457de1bb4f85037956e3bf4784a6d5e4b5f9e5fa4360d/pfdicom_tagExtract-2.2.20.tar.gz", "yanked": false}], "2.2.4": [{"comment_text": "", "digests": {"md5": "60c2629bf69f223ebb0fe3eb8ac4e826", "sha256": "3c637bc8fac4c56053c40602de3589b82f589df6c47a1cec38a60f6520d12fd3"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.4.tar.gz", "has_sig": false, "md5_digest": "60c2629bf69f223ebb0fe3eb8ac4e826", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24220, "upload_time": "2018-08-03T21:02:07", "upload_time_iso_8601": "2018-08-03T21:02:07.131993Z", "url": "https://files.pythonhosted.org/packages/38/72/85be04c8556b1419d13b82a425353529914c30289f4e7786b20540d50cfa/pfdicom_tagExtract-2.2.4.tar.gz", "yanked": false}], "2.2.6": [{"comment_text": "", "digests": {"md5": "b251ae772654d3c70667021072c31034", "sha256": "6dbb6889a6c4b76d88aec24439d1393286243bf9c5b75f0ac5bdd90392917610"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.6.tar.gz", "has_sig": false, "md5_digest": "b251ae772654d3c70667021072c31034", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11439, "upload_time": "2018-08-28T08:46:54", "upload_time_iso_8601": "2018-08-28T08:46:54.188303Z", "url": "https://files.pythonhosted.org/packages/98/b1/671b29b349f6760c4718fa935beab8a398bbed03a4fb9ce677ce1e05ab9b/pfdicom_tagExtract-2.2.6.tar.gz", "yanked": false}], "2.2.8": [{"comment_text": "", "digests": {"md5": "1edfb7fe4281db654c7c1c32b921a1b7", "sha256": "dfed2e4d00cf879dd02d3ee80411ffee75bf3f0b8b885eb7ea2c32008a060295"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.8.tar.gz", "has_sig": false, "md5_digest": "1edfb7fe4281db654c7c1c32b921a1b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13814, "upload_time": "2018-11-19T18:49:17", "upload_time_iso_8601": "2018-11-19T18:49:17.534717Z", "url": "https://files.pythonhosted.org/packages/35/0c/b2ec5969ffc8f9daeb8bb4cc25c69bc0bcbdf260a8b67c0933aa89c351cc/pfdicom_tagExtract-2.2.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44cc74d18197cc6dee00b71fca833677", "sha256": "96974d693dd5c85b81fb16b5ea5a4418bc9419cb5f653a0dcb464d6ffd78d34d"}, "downloads": -1, "filename": "pfdicom_tagExtract-2.2.20.tar.gz", "has_sig": false, "md5_digest": "44cc74d18197cc6dee00b71fca833677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14016, "upload_time": "2019-09-30T20:26:04", "upload_time_iso_8601": "2019-09-30T20:26:04.196472Z", "url": "https://files.pythonhosted.org/packages/b5/80/f1baea66d75a3a5457de1bb4f85037956e3bf4784a6d5e4b5f9e5fa4360d/pfdicom_tagExtract-2.2.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:57 2020"}