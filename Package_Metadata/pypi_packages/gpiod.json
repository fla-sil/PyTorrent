{"info": {"author": "Hyeonki Hong", "author_email": "hhk7734@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: System :: Hardware"], "description": "![license](https://img.shields.io/github/license/hhk7734/python3-gpiod)\n![pypi](https://img.shields.io/pypi/v/gpiod)\n![language](https://img.shields.io/github/languages/top/hhk7734/python3-gpiod)\n\n# python3-gpiod\n\nIt is a pure Python library and has no dependencies on other packages !!\n\n## Installation\n\n```shell\npython3 -m pip install -U --user pip gpiod\n```\n\n## help command\n\n```python\n>>> import gpiod\n>>> help(gpiod)\n>>> help(gpiod.chip)\n>>> help(gpiod.line)\n>>> help(gpiod.chip.open)\n\nopen(self, device, how:int=1)\n    @brief Open a GPIO chip.\n\n    @param device: String or int describing the GPIO chip.\n    @param how:    Indicates how the chip should be opened.\n\n    If the object already holds a reference to an open chip, it will be\n    closed and the reference reset.\n\n    Usage:\n        chip.open(\"/dev/gpiochip0\")\n        chip.open(0, chip.OPEN_BY_NUMBER)\n```\n\n## Test\n\n```shell\npython3 -m gpiod.test.blink <chip> <line offset>\npython3 -m gpiod.test.bulk_blink <chip> <line offset1> [<line offset2> ...]\npython3 -m gpiod.test.sequential_blink <chip> <line offset1> \\\n    [<line offset2> ...]\npython3 -m gpiod.test.button <chip> <line offset> [rising|falling|both]\npython3 -m gpiod.test.bulk_button <chip> <line offset> [<line offset2> ...]\n    <[rising|falling|both]>\n```\n\n## Blink example\n\n### Python3\n\n```python\nimport gpiod\nimport sys\nimport time\n\nif len(sys.argv) > 2:\n    LED_CHIP = sys.argv[1]\n    LED_LINE_OFFSET = int(sys.argv[2])\nelse:\n    print('''Usage:\n    python3 blink.py <chip> <line offset>''')\n    sys.exit()\n\nchip = gpiod.chip(LED_CHIP)\nled = chip.get_line(LED_LINE_OFFSET)\n\nconfig = gpiod.line_request()\nconfig.consumer = \"Blink\"\nconfig.request_type = gpiod.line_request.DIRECTION_OUTPUT\n\nled.request(config)\n\nprint(led.consumer)\n\nwhile True:\n    led.set_value(0)\n    time.sleep(0.1)\n    led.set_value(1)\n    time.sleep(0.1)\n```\n\n### C++\n\n```c++\n#include <chrono>\n#include <cstdlib>\n#include <gpiod.hpp>\n#include <iostream>\n#include <string>\n#include <thread>\n\nint main(int argc, char **argv) {\n    std::string LED_CHIP;\n    int         LED_LINE_OFFSET;\n\n    if(argc > 2) {\n        LED_CHIP        = argv[1];\n        LED_LINE_OFFSET = std::stoi(argv[2]);\n    } else {\n        std::cout << \"Usage:\" << std::endl\n                  << \"    ./blink <chip> <line offset>\" << std::endl;\n        std::exit(0);\n    }\n\n    gpiod::chip chip(LED_CHIP);\n    gpiod::line led = chip.get_line(LED_LINE_OFFSET);\n\n    gpiod::line_request config;\n    config.consumer     = \"Blink\";\n    config.request_type = gpiod::line_request::DIRECTION_OUTPUT;\n\n    led.request(config);\n\n    std::cout << led.consumer() << std::endl;\n\n    while(1) {\n        led.set_value(0);\n        std::this_thread::sleep_for(std::chrono::milliseconds(100));\n        led.set_value(1);\n        std::this_thread::sleep_for(std::chrono::milliseconds(100));\n    }\n}\n```\n\n```shell\ng++ -o blink test.cpp -lgpiodcxx\n```\n\n## Changelog\n\nRef: CHANGELOG\n\npython3-gpiod (1.2.4) unstable; urgency=medium\n\n  * libgpiod: implement gpiod_chip_iter.next_noclose\n  * libgpiodcxx: implement chip/line_iter\n  * libgpiodcxx: implement find_line\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 07 May 2020 13:34:04 +0900\n\npython3-gpiod (1.2.3) unstable; urgency=medium\n\n  * github: fix pylint option\n  * README: remove gpiod installation\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 29 Apr 2020 17:25:39 +0900\n\npython3-gpiod (1.2.2) unstable; urgency=medium\n\n  * github: add python lint action\n  * libgpiod: implement gpio.h and ioctl.h\n  * Fix huge amount of functions to remove libgpiod dependency\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 29 Apr 2020 17:00:49 +0900\n\npython3-gpiod (1.2.1) unstable; urgency=medium\n\n  * libgpiodcxx: document line class\n  * pylint: create .pylintrc and run black\n  * libgpiodcxx: fix issue using list as default argument\n  * libgpiod: add gpiod_line_is_requested\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 23 Apr 2020 14:48:10 +0900\n\npython3-gpiod (1.2.0) unstable; urgency=medium\n\n  * libgpiodcxx: document chip class\n  * libgpiod: fix issue that fail to load libgpiod.so\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 16 Apr 2020 21:05:58 +0900\n\npython3-gpiod (1.1.2) unstable; urgency=medium\n\n  * pypi: version up due to pypi version problem\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 16 Apr 2020 20:55:27 +0900\n\npython3-gpiod (1.1.1) unstable; urgency=medium\n\n  * libgpiodcxx: fix issue where line_bulk.get_values does not return result\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 16 Apr 2020 20:44:47 +0900\n\npython3-gpiod (1.1.0) unstable; urgency=medium\n\n  * libgpiod: API: start certain enums from 1\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 15 Apr 2020 15:40:56 +0900\n\npython3-gpiod (1.0.1) unstable; urgency=medium\n\n  * libgpiodcxx: use gpiod_line_event_get_fd in line.event_get_fd\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 15 Apr 2020 15:31:19 +0900\n\npython3-gpiod (1.0.0) unstable; urgency=medium\n\n  * libgpiod: call libgpiod.so using ctypes\n  * libgpiodcxx: implement chip class\n  * libgpiodcxx: implement line class\n  * libgpiodcxx: implement line_bulk class\n  * libgpiodcxx: implement line_event class\n  * libgpiodcxx: implement line_request class\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 15 Apr 2020 03:47:31 +0900\n\npython3-gpiod (0.6.0) unstable; urgency=medium\n\n  * Fix issue where 'setup.py clean' is not executed\n  * Correct error messages to be noticeable\n  * Fix iterator in line_bulk class\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 02 Apr 2020 14:55:17 +0900\n\npython3-gpiod (0.5.4) unstable; urgency=medium\n\n  * Update README.md\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Mon, 30 Mar 2020 20:04:10 +0900\n\npython3-gpiod (0.5.3) unstable; urgency=medium\n\n  * Add std::bitset<32> type caster\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 26 Mar 2020 11:39:33 +0900\n\npython3-gpiod (0.5.2) unstable; urgency=medium\n\n  * Add documentation for tested methods\n  * Add test code\n  * Update README.md\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Fri, 20 Mar 2020 13:17:41 +0900\n\npython3-gpiod (0.5.1) unstable; urgency=medium\n\n  * Move xxx class into xxx_wrapper.h\n  * Add blink test module\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Fri, 20 Mar 2020 00:58:05 +0900\n\npython3-gpiod (0.5.0) unstable; urgency=medium\n\n  * Add pybind11/chrono.h for std::chrono\n  * Prevent installation if libgpiodcxx v1.0 or lower\n  * Add xxx_lines into chip class\n  * Add operators\n  * Add MAX_LINES attribute\n  * Fix issue where 'setup.py sdist' is not executed\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Sat, 14 Mar 2020 02:37:13 +0900\n\npython3-gpiod (0.4.1) unstable; urgency=medium\n\n  * Fix issue where pip does not install dependencies\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 12 Mar 2020 19:11:24 +0900\n\npython3-gpiod (0.4.0) unstable; urgency=medium\n\n  * Add libgpiodcxx version check\n  * Remove -std=c++11 option\n  * Add line_bulk, chip_iter, line_iter classes\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Thu, 12 Mar 2020 14:18:16 +0900\n\npython3-gpiod (0.3.0) unstable; urgency=medium\n\n  * Add open, reset function\n  * Add LICENSE\n  * Create README.md\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 11 Mar 2020 18:58:14 +0900\n\npython3-gpiod (0.2.0) unstable; urgency=medium\n\n  * Add chip, line_request, line, line_event class\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Wed, 11 Mar 2020 13:28:45 +0900\n\npython3-gpiod (0.1.0) unstable; urgency=medium\n\n  * Add initial setup files\n\n -- Hyeonki Hong <hhk7734@gmail.com>  Tue, 10 Mar 2020 15:40:13 +0900", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hhk7734/python3-gpiod", "keywords": "GPIO,gpiod", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "gpiod", "package_url": "https://pypi.org/project/gpiod/", "platform": "", "project_url": "https://pypi.org/project/gpiod/", "project_urls": {"Homepage": "https://github.com/hhk7734/python3-gpiod", "Source": "https://github.com/hhk7734/python3-gpiod.git"}, "release_url": "https://pypi.org/project/gpiod/1.2.4/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a206639b786a6c0e30fb21650b1cc088cf01a94c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f68686b373733342f707974686f6e332d6770696f64\">\n<img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0414c502142753bfd0df4dde811c2efb4578adb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6770696f64\">\n<img alt=\"language\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d667e53df3e6f17e0c55223a599255ad6205e37e/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f68686b373733342f707974686f6e332d6770696f64\"></p>\n<h1>python3-gpiod</h1>\n<p>It is a pure Python library and has no dependencies on other packages !!</p>\n<h2>Installation</h2>\n<pre>python3 -m pip install -U --user pip gpiod\n</pre>\n<h2>help command</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">gpiod</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">gpiod</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">gpiod</span><span class=\"o\">.</span><span class=\"n\">chip</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">gpiod</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">help</span><span class=\"p\">(</span><span class=\"n\">gpiod</span><span class=\"o\">.</span><span class=\"n\">chip</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">)</span>\n\n<span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">device</span><span class=\"p\">,</span> <span class=\"n\">how</span><span class=\"p\">:</span><span class=\"nb\">int</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nd\">@brief</span> <span class=\"n\">Open</span> <span class=\"n\">a</span> <span class=\"n\">GPIO</span> <span class=\"n\">chip</span><span class=\"o\">.</span>\n\n    <span class=\"nd\">@param</span> <span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"n\">String</span> <span class=\"ow\">or</span> <span class=\"nb\">int</span> <span class=\"n\">describing</span> <span class=\"n\">the</span> <span class=\"n\">GPIO</span> <span class=\"n\">chip</span><span class=\"o\">.</span>\n    <span class=\"nd\">@param</span> <span class=\"n\">how</span><span class=\"p\">:</span>    <span class=\"n\">Indicates</span> <span class=\"n\">how</span> <span class=\"n\">the</span> <span class=\"n\">chip</span> <span class=\"n\">should</span> <span class=\"n\">be</span> <span class=\"n\">opened</span><span class=\"o\">.</span>\n\n    <span class=\"n\">If</span> <span class=\"n\">the</span> <span class=\"nb\">object</span> <span class=\"n\">already</span> <span class=\"n\">holds</span> <span class=\"n\">a</span> <span class=\"n\">reference</span> <span class=\"n\">to</span> <span class=\"n\">an</span> <span class=\"nb\">open</span> <span class=\"n\">chip</span><span class=\"p\">,</span> <span class=\"n\">it</span> <span class=\"n\">will</span> <span class=\"n\">be</span>\n    <span class=\"n\">closed</span> <span class=\"ow\">and</span> <span class=\"n\">the</span> <span class=\"n\">reference</span> <span class=\"n\">reset</span><span class=\"o\">.</span>\n\n    <span class=\"n\">Usage</span><span class=\"p\">:</span>\n        <span class=\"n\">chip</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"/dev/gpiochip0\"</span><span class=\"p\">)</span>\n        <span class=\"n\">chip</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">chip</span><span class=\"o\">.</span><span class=\"n\">OPEN_BY_NUMBER</span><span class=\"p\">)</span>\n</pre>\n<h2>Test</h2>\n<pre>python3 -m gpiod.test.blink &lt;chip&gt; &lt;line offset&gt;\npython3 -m gpiod.test.bulk_blink &lt;chip&gt; &lt;line offset1&gt; <span class=\"o\">[</span>&lt;line offset2&gt; ...<span class=\"o\">]</span>\npython3 -m gpiod.test.sequential_blink &lt;chip&gt; &lt;line offset1&gt; <span class=\"se\">\\</span>\n    <span class=\"o\">[</span>&lt;line offset2&gt; ...<span class=\"o\">]</span>\npython3 -m gpiod.test.button &lt;chip&gt; &lt;line offset&gt; <span class=\"o\">[</span>rising<span class=\"p\">|</span>falling<span class=\"p\">|</span>both<span class=\"o\">]</span>\npython3 -m gpiod.test.bulk_button &lt;chip&gt; &lt;line offset&gt; <span class=\"o\">[</span>&lt;line offset2&gt; ...<span class=\"o\">]</span>\n    &lt;<span class=\"o\">[</span>rising<span class=\"p\">|</span>falling<span class=\"p\">|</span>both<span class=\"o\">]</span>&gt;\n</pre>\n<h2>Blink example</h2>\n<h3>Python3</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">gpiod</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">:</span>\n    <span class=\"n\">LED_CHIP</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">LED_LINE_OFFSET</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'''Usage:</span>\n<span class=\"s1\">    python3 blink.py &lt;chip&gt; &lt;line offset&gt;'''</span><span class=\"p\">)</span>\n    <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exit</span><span class=\"p\">()</span>\n\n<span class=\"n\">chip</span> <span class=\"o\">=</span> <span class=\"n\">gpiod</span><span class=\"o\">.</span><span class=\"n\">chip</span><span class=\"p\">(</span><span class=\"n\">LED_CHIP</span><span class=\"p\">)</span>\n<span class=\"n\">led</span> <span class=\"o\">=</span> <span class=\"n\">chip</span><span class=\"o\">.</span><span class=\"n\">get_line</span><span class=\"p\">(</span><span class=\"n\">LED_LINE_OFFSET</span><span class=\"p\">)</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">gpiod</span><span class=\"o\">.</span><span class=\"n\">line_request</span><span class=\"p\">()</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">consumer</span> <span class=\"o\">=</span> <span class=\"s2\">\"Blink\"</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">request_type</span> <span class=\"o\">=</span> <span class=\"n\">gpiod</span><span class=\"o\">.</span><span class=\"n\">line_request</span><span class=\"o\">.</span><span class=\"n\">DIRECTION_OUTPUT</span>\n\n<span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">consumer</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n    <span class=\"n\">led</span><span class=\"o\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n<h3>C++</h3>\n<pre><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;chrono&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;cstdlib&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;gpiod.hpp&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;string&gt;</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&lt;thread&gt;</span><span class=\"cp\"></span>\n\n<span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">argc</span><span class=\"p\">,</span> <span class=\"kt\">char</span> <span class=\"o\">**</span><span class=\"n\">argv</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span> <span class=\"n\">LED_CHIP</span><span class=\"p\">;</span>\n    <span class=\"kt\">int</span>         <span class=\"n\">LED_LINE_OFFSET</span><span class=\"p\">;</span>\n\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">argc</span> <span class=\"o\">&gt;</span> <span class=\"mi\">2</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">LED_CHIP</span>        <span class=\"o\">=</span> <span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n        <span class=\"n\">LED_LINE_OFFSET</span> <span class=\"o\">=</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">stoi</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]);</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\"Usage:\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span>\n                  <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\"    ./blink &lt;chip&gt; &lt;line offset&gt;\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">gpiod</span><span class=\"o\">::</span><span class=\"n\">chip</span> <span class=\"n\">chip</span><span class=\"p\">(</span><span class=\"n\">LED_CHIP</span><span class=\"p\">);</span>\n    <span class=\"n\">gpiod</span><span class=\"o\">::</span><span class=\"n\">line</span> <span class=\"n\">led</span> <span class=\"o\">=</span> <span class=\"n\">chip</span><span class=\"p\">.</span><span class=\"n\">get_line</span><span class=\"p\">(</span><span class=\"n\">LED_LINE_OFFSET</span><span class=\"p\">);</span>\n\n    <span class=\"n\">gpiod</span><span class=\"o\">::</span><span class=\"n\">line_request</span> <span class=\"n\">config</span><span class=\"p\">;</span>\n    <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">consumer</span>     <span class=\"o\">=</span> <span class=\"s\">\"Blink\"</span><span class=\"p\">;</span>\n    <span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">request_type</span> <span class=\"o\">=</span> <span class=\"n\">gpiod</span><span class=\"o\">::</span><span class=\"n\">line_request</span><span class=\"o\">::</span><span class=\"n\">DIRECTION_OUTPUT</span><span class=\"p\">;</span>\n\n    <span class=\"n\">led</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">);</span>\n\n    <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">led</span><span class=\"p\">.</span><span class=\"n\">consumer</span><span class=\"p\">()</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span>\n\n    <span class=\"k\">while</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">led</span><span class=\"p\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">this_thread</span><span class=\"o\">::</span><span class=\"n\">sleep_for</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">milliseconds</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">));</span>\n        <span class=\"n\">led</span><span class=\"p\">.</span><span class=\"n\">set_value</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n        <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">this_thread</span><span class=\"o\">::</span><span class=\"n\">sleep_for</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">chrono</span><span class=\"o\">::</span><span class=\"n\">milliseconds</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">));</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<pre>g++ -o blink test.cpp -lgpiodcxx\n</pre>\n<h2>Changelog</h2>\n<p>Ref: CHANGELOG</p>\n<p>python3-gpiod (1.2.4) unstable; urgency=medium</p>\n<ul>\n<li>libgpiod: implement gpiod_chip_iter.next_noclose</li>\n<li>libgpiodcxx: implement chip/line_iter</li>\n<li>libgpiodcxx: implement find_line</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 07 May 2020 13:34:04 +0900</p>\n<p>python3-gpiod (1.2.3) unstable; urgency=medium</p>\n<ul>\n<li>github: fix pylint option</li>\n<li>README: remove gpiod installation</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 29 Apr 2020 17:25:39 +0900</p>\n<p>python3-gpiod (1.2.2) unstable; urgency=medium</p>\n<ul>\n<li>github: add python lint action</li>\n<li>libgpiod: implement gpio.h and ioctl.h</li>\n<li>Fix huge amount of functions to remove libgpiod dependency</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 29 Apr 2020 17:00:49 +0900</p>\n<p>python3-gpiod (1.2.1) unstable; urgency=medium</p>\n<ul>\n<li>libgpiodcxx: document line class</li>\n<li>pylint: create .pylintrc and run black</li>\n<li>libgpiodcxx: fix issue using list as default argument</li>\n<li>libgpiod: add gpiod_line_is_requested</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 23 Apr 2020 14:48:10 +0900</p>\n<p>python3-gpiod (1.2.0) unstable; urgency=medium</p>\n<ul>\n<li>libgpiodcxx: document chip class</li>\n<li>libgpiod: fix issue that fail to load libgpiod.so</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 16 Apr 2020 21:05:58 +0900</p>\n<p>python3-gpiod (1.1.2) unstable; urgency=medium</p>\n<ul>\n<li>pypi: version up due to pypi version problem</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 16 Apr 2020 20:55:27 +0900</p>\n<p>python3-gpiod (1.1.1) unstable; urgency=medium</p>\n<ul>\n<li>libgpiodcxx: fix issue where line_bulk.get_values does not return result</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 16 Apr 2020 20:44:47 +0900</p>\n<p>python3-gpiod (1.1.0) unstable; urgency=medium</p>\n<ul>\n<li>libgpiod: API: start certain enums from 1</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 15 Apr 2020 15:40:56 +0900</p>\n<p>python3-gpiod (1.0.1) unstable; urgency=medium</p>\n<ul>\n<li>libgpiodcxx: use gpiod_line_event_get_fd in line.event_get_fd</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 15 Apr 2020 15:31:19 +0900</p>\n<p>python3-gpiod (1.0.0) unstable; urgency=medium</p>\n<ul>\n<li>libgpiod: call libgpiod.so using ctypes</li>\n<li>libgpiodcxx: implement chip class</li>\n<li>libgpiodcxx: implement line class</li>\n<li>libgpiodcxx: implement line_bulk class</li>\n<li>libgpiodcxx: implement line_event class</li>\n<li>libgpiodcxx: implement line_request class</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 15 Apr 2020 03:47:31 +0900</p>\n<p>python3-gpiod (0.6.0) unstable; urgency=medium</p>\n<ul>\n<li>Fix issue where 'setup.py clean' is not executed</li>\n<li>Correct error messages to be noticeable</li>\n<li>Fix iterator in line_bulk class</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 02 Apr 2020 14:55:17 +0900</p>\n<p>python3-gpiod (0.5.4) unstable; urgency=medium</p>\n<ul>\n<li>Update README.md</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Mon, 30 Mar 2020 20:04:10 +0900</p>\n<p>python3-gpiod (0.5.3) unstable; urgency=medium</p>\n<ul>\n<li>Add std::bitset&lt;32&gt; type caster</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 26 Mar 2020 11:39:33 +0900</p>\n<p>python3-gpiod (0.5.2) unstable; urgency=medium</p>\n<ul>\n<li>Add documentation for tested methods</li>\n<li>Add test code</li>\n<li>Update README.md</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Fri, 20 Mar 2020 13:17:41 +0900</p>\n<p>python3-gpiod (0.5.1) unstable; urgency=medium</p>\n<ul>\n<li>Move xxx class into xxx_wrapper.h</li>\n<li>Add blink test module</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Fri, 20 Mar 2020 00:58:05 +0900</p>\n<p>python3-gpiod (0.5.0) unstable; urgency=medium</p>\n<ul>\n<li>Add pybind11/chrono.h for std::chrono</li>\n<li>Prevent installation if libgpiodcxx v1.0 or lower</li>\n<li>Add xxx_lines into chip class</li>\n<li>Add operators</li>\n<li>Add MAX_LINES attribute</li>\n<li>Fix issue where 'setup.py sdist' is not executed</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Sat, 14 Mar 2020 02:37:13 +0900</p>\n<p>python3-gpiod (0.4.1) unstable; urgency=medium</p>\n<ul>\n<li>Fix issue where pip does not install dependencies</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 12 Mar 2020 19:11:24 +0900</p>\n<p>python3-gpiod (0.4.0) unstable; urgency=medium</p>\n<ul>\n<li>Add libgpiodcxx version check</li>\n<li>Remove -std=c++11 option</li>\n<li>Add line_bulk, chip_iter, line_iter classes</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Thu, 12 Mar 2020 14:18:16 +0900</p>\n<p>python3-gpiod (0.3.0) unstable; urgency=medium</p>\n<ul>\n<li>Add open, reset function</li>\n<li>Add LICENSE</li>\n<li>Create README.md</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 11 Mar 2020 18:58:14 +0900</p>\n<p>python3-gpiod (0.2.0) unstable; urgency=medium</p>\n<ul>\n<li>Add chip, line_request, line, line_event class</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Wed, 11 Mar 2020 13:28:45 +0900</p>\n<p>python3-gpiod (0.1.0) unstable; urgency=medium</p>\n<ul>\n<li>Add initial setup files</li>\n</ul>\n<p>-- Hyeonki Hong <a href=\"mailto:hhk7734@gmail.com\">hhk7734@gmail.com</a>  Tue, 10 Mar 2020 15:40:13 +0900</p>\n\n          </div>"}, "last_serial": 7185239, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "42035434fd2304cf5388d110a38989f4", "sha256": "9870357d417c41e1f5e5b05658a65d3c53cfed28a9eb91e4e1d6cafd8fa76f8a"}, "downloads": -1, "filename": "gpiod-0.2.0.tar.gz", "has_sig": false, "md5_digest": "42035434fd2304cf5388d110a38989f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4007, "upload_time": "2020-03-11T04:59:08", "upload_time_iso_8601": "2020-03-11T04:59:08.659988Z", "url": "https://files.pythonhosted.org/packages/fd/8c/5eb3018c842e2a2dc736b7c35b28b072af54aaeeca2dfdb0e33bfe302fb8/gpiod-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "32cd0f989d22eb387c1d3370bb15d037", "sha256": "052bc1df3037aa53cdb6fc9db7321ef6bbf6ab9220796ee9d5d226ae0c8132c9"}, "downloads": -1, "filename": "gpiod-0.3.0.tar.gz", "has_sig": false, "md5_digest": "32cd0f989d22eb387c1d3370bb15d037", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5374, "upload_time": "2020-03-11T10:02:22", "upload_time_iso_8601": "2020-03-11T10:02:22.881424Z", "url": "https://files.pythonhosted.org/packages/50/04/a37c575c6fd9018c24632e4a0c1e7de2a9eb66f6c13910c2931fc60dee4c/gpiod-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e1d22250b5c75fbea48f9df06b2699fc", "sha256": "d24ad31d3b1a443d7c8ec818e767a0b8ae103a49572c93bd351a4455de640163"}, "downloads": -1, "filename": "gpiod-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e1d22250b5c75fbea48f9df06b2699fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6030, "upload_time": "2020-03-12T05:24:58", "upload_time_iso_8601": "2020-03-12T05:24:58.822403Z", "url": "https://files.pythonhosted.org/packages/a1/4f/518d2daa662bab17791539e07d5e10d3883bb0af00f5e4ed018d884b11dd/gpiod-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "f2ddfb68de43c53bcefab3963a47c74f", "sha256": "dc4a770c969e8589c7d4b7cd4cc5275b22454f1f4647791e1c7d8e46061bc74b"}, "downloads": -1, "filename": "gpiod-0.4.1.tar.gz", "has_sig": false, "md5_digest": "f2ddfb68de43c53bcefab3963a47c74f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6115, "upload_time": "2020-03-12T10:12:55", "upload_time_iso_8601": "2020-03-12T10:12:55.094623Z", "url": "https://files.pythonhosted.org/packages/6e/ee/76b45baae6db392d3e016bd54e6cedc7b017915cc0470901268fc352d569/gpiod-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "5d01e182f84fcbfe525b0707e624250f", "sha256": "6d89d75d6ded33e1875400c3fba95edcdba38a97fc240cac8067f498a9d8c52f"}, "downloads": -1, "filename": "gpiod-0.5.0.tar.gz", "has_sig": false, "md5_digest": "5d01e182f84fcbfe525b0707e624250f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7001, "upload_time": "2020-03-13T17:49:57", "upload_time_iso_8601": "2020-03-13T17:49:57.362364Z", "url": "https://files.pythonhosted.org/packages/74/8a/cd82e44f1e0191d21b60491b6bce7eb5637d75f3f31deeedf2efb7869616/gpiod-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "1d809b0aee42ad6a0d7c0937483bfa97", "sha256": "99e95173ef6d12ea7327ba43151c5277ea25af5e26d47d8d3ea9028d1a4e30b7"}, "downloads": -1, "filename": "gpiod-0.5.1.tar.gz", "has_sig": false, "md5_digest": "1d809b0aee42ad6a0d7c0937483bfa97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8057, "upload_time": "2020-03-20T01:55:31", "upload_time_iso_8601": "2020-03-20T01:55:31.751902Z", "url": "https://files.pythonhosted.org/packages/12/ba/e55331edaea4343c3319469e6973df6b68dfb4b5091ae8677ba9afb169cb/gpiod-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "82ba5e3af60f98fb39e0d334cf9ce717", "sha256": "c8c06453b28a12ce48cd960e51476cfc87419c2ca243bd3604d78189acd46b06"}, "downloads": -1, "filename": "gpiod-0.5.2.tar.gz", "has_sig": false, "md5_digest": "82ba5e3af60f98fb39e0d334cf9ce717", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9682, "upload_time": "2020-03-20T04:19:47", "upload_time_iso_8601": "2020-03-20T04:19:47.199565Z", "url": "https://files.pythonhosted.org/packages/f7/de/e90079940f126535ac8ff01ba3b911809debc98095924818e3d5818974b9/gpiod-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "174df3baa34314f9979d28ef1f000567", "sha256": "eea1651692f585e9c230c72ca0350b47b64d8eb03a7bc2955a3d7ff337aaf710"}, "downloads": -1, "filename": "gpiod-0.5.3.tar.gz", "has_sig": false, "md5_digest": "174df3baa34314f9979d28ef1f000567", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10670, "upload_time": "2020-03-26T02:54:58", "upload_time_iso_8601": "2020-03-26T02:54:58.066682Z", "url": "https://files.pythonhosted.org/packages/d6/87/7213fce73646ff83784e686744456f909c4781f505de50c7bacfbcb192ee/gpiod-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "95b7d71ab392ca03953f9ffaea57f6d9", "sha256": "a34dfcbc562e37443520aae8dcddee1f006af25488c784c03e1fa5f95de2cfdb"}, "downloads": -1, "filename": "gpiod-0.5.4.tar.gz", "has_sig": false, "md5_digest": "95b7d71ab392ca03953f9ffaea57f6d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13279, "upload_time": "2020-03-30T11:05:21", "upload_time_iso_8601": "2020-03-30T11:05:21.908754Z", "url": "https://files.pythonhosted.org/packages/04/3e/3d095860f153bd8ceb691da6ed0ee03242166f5fe85343cc2d2245ae8ae9/gpiod-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "28d0005b25583ea2e18e93f06bfcc9e9", "sha256": "86c651283f2af74036fccb8f9cec65af0bbccf140a4605d1e1b81c66e510b33f"}, "downloads": -1, "filename": "gpiod-0.6.0.tar.gz", "has_sig": false, "md5_digest": "28d0005b25583ea2e18e93f06bfcc9e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11072, "upload_time": "2020-04-02T05:57:41", "upload_time_iso_8601": "2020-04-02T05:57:41.672347Z", "url": "https://files.pythonhosted.org/packages/83/bf/fca39415d29c06177f48c368705110e7052db7951468d7ab253ac80dc9a7/gpiod-0.6.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "f6c021dc043faff6b799376c840b771d", "sha256": "10f18cd489b6891328a16028048308169268b309b1d644bf0681dad8025f4926"}, "downloads": -1, "filename": "gpiod-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f6c021dc043faff6b799376c840b771d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11178, "upload_time": "2020-04-14T19:12:50", "upload_time_iso_8601": "2020-04-14T19:12:50.284075Z", "url": "https://files.pythonhosted.org/packages/84/13/8c5dafb4c471df53801b9255cba81ba0df3adc79dbe65bb3e2c73ccd2fad/gpiod-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "cd1861a77a3a58fb985ab651df8b7f13", "sha256": "b9e4ef598910f864f1b639c510628d4021082ba01a910cf1ca9b523e866a1ba9"}, "downloads": -1, "filename": "gpiod-1.0.1.tar.gz", "has_sig": false, "md5_digest": "cd1861a77a3a58fb985ab651df8b7f13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11305, "upload_time": "2020-04-15T06:36:31", "upload_time_iso_8601": "2020-04-15T06:36:31.264361Z", "url": "https://files.pythonhosted.org/packages/e8/1e/a02ca84c9444185f253ac97d3f37dda24b746bba615b8e3cf4bd587b2ab4/gpiod-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "e5039704a856c4b7e8ff9383a151ce40", "sha256": "0c307c40deb753da839249ac4efd70611aaa036f6371a21f40efbd899873bb67"}, "downloads": -1, "filename": "gpiod-1.1.0.tar.gz", "has_sig": false, "md5_digest": "e5039704a856c4b7e8ff9383a151ce40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11412, "upload_time": "2020-04-15T07:40:05", "upload_time_iso_8601": "2020-04-15T07:40:05.399942Z", "url": "https://files.pythonhosted.org/packages/da/70/ad778f9e9455523f770113ae99f23072edcfc483eac9512bcdaf0b71d934/gpiod-1.1.0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "272096af39c613d326ab2f9777b68bb9", "sha256": "191fa6f3d03d73dbbf61da19b55d9f9b5b569ec88200326112aaf0929f57e19a"}, "downloads": -1, "filename": "gpiod-1.1.2.tar.gz", "has_sig": false, "md5_digest": "272096af39c613d326ab2f9777b68bb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11532, "upload_time": "2020-04-16T12:03:36", "upload_time_iso_8601": "2020-04-16T12:03:36.761359Z", "url": "https://files.pythonhosted.org/packages/96/07/a74207a75bf9e755a4ce9dfad50a85a487eef076e54362b2a1976f473d5d/gpiod-1.1.2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "9d47791762d0b9ac63816043abffb5d1", "sha256": "8a38129c8c57ac01dcf7544f1d292c48aea07fd490d50fe51de0690c389ce023"}, "downloads": -1, "filename": "gpiod-1.2.0.tar.gz", "has_sig": false, "md5_digest": "9d47791762d0b9ac63816043abffb5d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12606, "upload_time": "2020-04-17T13:25:49", "upload_time_iso_8601": "2020-04-17T13:25:49.750030Z", "url": "https://files.pythonhosted.org/packages/af/73/820c4f428285284aa53bfae185b1d9b7141dda6a073be8f09001985504d9/gpiod-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "f1ceedbd599862f7911a2b711343c91a", "sha256": "667a156f707f60f3a68300c43b1392b6c8bf8104a9f42dcced2d9957c2a86dd0"}, "downloads": -1, "filename": "gpiod-1.2.1.tar.gz", "has_sig": false, "md5_digest": "f1ceedbd599862f7911a2b711343c91a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15122, "upload_time": "2020-04-23T06:17:10", "upload_time_iso_8601": "2020-04-23T06:17:10.983891Z", "url": "https://files.pythonhosted.org/packages/f9/93/febfbf59df80278af134d282538b2140be064e7960611e1948964f62b814/gpiod-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "df7ee7f434d5a94e031bb1ec7fe80404", "sha256": "5992ab57464ce399fce0c03e3e0a2454ad775f33d90688cd3dd865c8e91c03cb"}, "downloads": -1, "filename": "gpiod-1.2.2.tar.gz", "has_sig": false, "md5_digest": "df7ee7f434d5a94e031bb1ec7fe80404", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20842, "upload_time": "2020-04-29T08:17:02", "upload_time_iso_8601": "2020-04-29T08:17:02.112146Z", "url": "https://files.pythonhosted.org/packages/ce/41/4eb3d9400413cb35b13f47bf24045323863e7131892c498b6b8b00e8e835/gpiod-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "06f3cd69609080cd48eb6fa04b37798d", "sha256": "f9e8d6662fb0981f6b62804227949ffe349b5d4c97383b9f447710139ec482eb"}, "downloads": -1, "filename": "gpiod-1.2.3.tar.gz", "has_sig": false, "md5_digest": "06f3cd69609080cd48eb6fa04b37798d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20814, "upload_time": "2020-04-29T08:28:02", "upload_time_iso_8601": "2020-04-29T08:28:02.473992Z", "url": "https://files.pythonhosted.org/packages/0d/e3/47a67452ab7b7f0615f1192b1b5815a1e55fa694adf558061ecce7793b3a/gpiod-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "9b9df0b09744de545abf0d60b11209b6", "sha256": "68030e16cd3de21aa4ca6debaba237e28b0f718b77b585cf5afc33f884102dff"}, "downloads": -1, "filename": "gpiod-1.2.4.tar.gz", "has_sig": false, "md5_digest": "9b9df0b09744de545abf0d60b11209b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21407, "upload_time": "2020-05-07T04:40:03", "upload_time_iso_8601": "2020-05-07T04:40:03.340236Z", "url": "https://files.pythonhosted.org/packages/9d/8b/3094295aa857e57302bf159c503a69366e045fb2e97d8c195931ae602188/gpiod-1.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9b9df0b09744de545abf0d60b11209b6", "sha256": "68030e16cd3de21aa4ca6debaba237e28b0f718b77b585cf5afc33f884102dff"}, "downloads": -1, "filename": "gpiod-1.2.4.tar.gz", "has_sig": false, "md5_digest": "9b9df0b09744de545abf0d60b11209b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21407, "upload_time": "2020-05-07T04:40:03", "upload_time_iso_8601": "2020-05-07T04:40:03.340236Z", "url": "https://files.pythonhosted.org/packages/9d/8b/3094295aa857e57302bf159c503a69366e045fb2e97d8c195931ae602188/gpiod-1.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:17 2020"}