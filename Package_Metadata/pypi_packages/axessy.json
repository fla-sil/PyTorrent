{"info": {"author": "Infoporto La Spezia Srl", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "==============\nAxessy\n==============\n\nAxessy is a simple package to read and parse messages from AXESS TMC X3 devices.\n\nChangeLog\n-------------\n\n    * 0.4: Added gate error messages and events (directions); added system error messages\n    * 0.3: Fixed message() method\n    * 0.1: First release\n\nInstallation\n-------------\n\nThere are two ways to install the package:\n\n1. Using pip with the following command:\n\n    pip install axessy\n\n2. Start setup.py file from this repository:\n\n    python setup.py install\n\nUsage\n-------------\nYou can import the module in the following way:\n\n    import axessy.axessy\n\nIn this package there is the \"AxessPackage\" class defined with the following methods:\n\n    * parsePacket(params): \"params\" includes the GET parameters sent via an \"/online\" or \"/batch\" command from the device, and stores the data inside the class variables;\n\n    * message(msg, beep=100, show=2): builds a string that you can put inside an HttpResponse to send back to the device;\n\n    * sendKeepAlive(url, username, password): asks the device to send a keepalive message.\n\nAlso the \"AxessPackage().ack\" and \"AxessPackage().keepalive\" variables are defined for string responses to \"/batch\" and \"/keepalive\" commands.\n\nA dictionary with all possible errors saved into a transaction, \"AxessPackage().error_dict\", is defined and automatically used by \"parsePacket\" method.\n\nFinally there are two new Error classes used by the \"checkPacket()\" method (this method is used by \"parsePacket\" automatically):\n\n    * MacAddressError\n\n    * CardError", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/OpenInfoporto/axessy", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "axessy", "package_url": "https://pypi.org/project/axessy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/axessy/", "project_urls": {"Homepage": "https://github.com/OpenInfoporto/axessy"}, "release_url": "https://pypi.org/project/axessy/0.4/", "requires_dist": null, "requires_python": null, "summary": "A simple packet to read and parse messages from AXESS TMC X3 devices.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Axessy is a simple package to read and parse messages from AXESS TMC X3 devices.</p>\n<div id=\"changelog\">\n<h2>ChangeLog</h2>\n<blockquote>\n<ul>\n<li>0.4: Added gate error messages and events (directions); added system error messages</li>\n<li>0.3: Fixed message() method</li>\n<li>0.1: First release</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>There are two ways to install the package:</p>\n<ol>\n<li><p>Using pip with the following command:</p>\n<blockquote>\n<p>pip install axessy</p>\n</blockquote>\n</li>\n<li><p>Start setup.py file from this repository:</p>\n<blockquote>\n<p>python setup.py install</p>\n</blockquote>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>You can import the module in the following way:</p>\n<blockquote>\nimport axessy.axessy</blockquote>\n<p>In this package there is the \u201cAxessPackage\u201d class defined with the following methods:</p>\n<blockquote>\n<ul>\n<li>parsePacket(params): \u201cparams\u201d includes the GET parameters sent via an \u201c/online\u201d or \u201c/batch\u201d command from the device, and stores the data inside the class variables;</li>\n<li>message(msg, beep=100, show=2): builds a string that you can put inside an HttpResponse to send back to the device;</li>\n<li>sendKeepAlive(url, username, password): asks the device to send a keepalive message.</li>\n</ul>\n</blockquote>\n<p>Also the \u201cAxessPackage().ack\u201d and \u201cAxessPackage().keepalive\u201d variables are defined for string responses to \u201c/batch\u201d and \u201c/keepalive\u201d commands.</p>\n<p>A dictionary with all possible errors saved into a transaction, \u201cAxessPackage().error_dict\u201d, is defined and automatically used by \u201cparsePacket\u201d method.</p>\n<p>Finally there are two new Error classes used by the \u201ccheckPacket()\u201d method (this method is used by \u201cparsePacket\u201d automatically):</p>\n<blockquote>\n<ul>\n<li>MacAddressError</li>\n<li>CardError</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 2354630, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ab292193a6b3dc25b2ec1e38d081612a", "sha256": "ed8f1c6c177bd60baeccb9e78fbb340a337b7a62221ea62b1b720127e7f03ea8"}, "downloads": -1, "filename": "axessy-0.1.tar.gz", "has_sig": false, "md5_digest": "ab292193a6b3dc25b2ec1e38d081612a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9930, "upload_time": "2016-09-15T09:57:50", "upload_time_iso_8601": "2016-09-15T09:57:50.835365Z", "url": "https://files.pythonhosted.org/packages/6f/f8/4d28cdf9c5f4bb41bf81e967e52cc154d2856c3b8ddb4cd8af5e56cc745e/axessy-0.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "Fixed message() method", "digests": {"md5": "35d8a7be2ea22365c78cac1bb5b4797e", "sha256": "92089d0934fe43b5d96047704db151e446a232dc29784941c708bbcc00f024bb"}, "downloads": -1, "filename": "axessy-0.3.tar.gz", "has_sig": false, "md5_digest": "35d8a7be2ea22365c78cac1bb5b4797e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9956, "upload_time": "2016-09-19T15:28:43", "upload_time_iso_8601": "2016-09-19T15:28:43.168845Z", "url": "https://files.pythonhosted.org/packages/ef/50/dac74c3f5d5be893f9a49c96cdc1ccf5bac764df00ed4237863504ea7588/axessy-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "7d619d3ae815f4b92e35dc76d365052e", "sha256": "e1c267bfa01e2137c9ef453f62aeff54fb711f491c657485296b1cdbc573efae"}, "downloads": -1, "filename": "axessy-0.4.tar.gz", "has_sig": false, "md5_digest": "7d619d3ae815f4b92e35dc76d365052e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10207, "upload_time": "2016-09-21T09:17:28", "upload_time_iso_8601": "2016-09-21T09:17:28.237780Z", "url": "https://files.pythonhosted.org/packages/ed/ca/b8aac47638fdb4d25d6ce39abd213e241d4922c53d2a5437bd4ff4dc0750/axessy-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d619d3ae815f4b92e35dc76d365052e", "sha256": "e1c267bfa01e2137c9ef453f62aeff54fb711f491c657485296b1cdbc573efae"}, "downloads": -1, "filename": "axessy-0.4.tar.gz", "has_sig": false, "md5_digest": "7d619d3ae815f4b92e35dc76d365052e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10207, "upload_time": "2016-09-21T09:17:28", "upload_time_iso_8601": "2016-09-21T09:17:28.237780Z", "url": "https://files.pythonhosted.org/packages/ed/ca/b8aac47638fdb4d25d6ce39abd213e241d4922c53d2a5437bd4ff4dc0750/axessy-0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:31 2020"}