{"info": {"author": "Aric Coady", "author_email": "aric.coady@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![image](https://img.shields.io/pypi/v/multimethod.svg)](https://pypi.org/project/multimethod/)\n![image](https://img.shields.io/pypi/pyversions/multimethod.svg)\n[![image](https://pepy.tech/badge/multimethod)](https://pepy.tech/project/multimethod)\n![image](https://img.shields.io/pypi/status/multimethod.svg)\n[![image](https://img.shields.io/travis/coady/multimethod.svg)](https://travis-ci.org/coady/multimethod)\n[![image](https://img.shields.io/codecov/c/github/coady/multimethod.svg)](https://codecov.io/github/coady/multimethod)\n[![image](https://readthedocs.org/projects/multimethod/badge)](https://multimethod.readthedocs.io)\n[![image](https://requires.io/github/coady/multimethod/requirements.svg)](https://requires.io/github/coady/multimethod/requirements/)\n[![image](https://api.codeclimate.com/v1/badges/5a3ddcd54e550eee27f9/maintainability)](https://codeclimate.com/github/coady/multimethod/maintainability)\n[![image](https://img.shields.io/badge/code%20style-black-000000.svg)](https://pypi.org/project/black/)\n[![image](http://mypy-lang.org/static/mypy_badge.svg)](http://mypy-lang.org/)\n\nMultimethod provides a decorator for adding multiple argument dispatching to functions.\nThe decorator creates a multimethod object as needed, and registers the function with its annotations.\n\nThere are several multiple dispatch libraries on PyPI.\nThis one aims for simplicity and speed. With caching of argument types,\nit should be the fastest pure Python implementation possible.\n\n# Usage\n## multimethod\n```python\nfrom multimethod import multimethod\n\n@multimethod\ndef func(x: int, y: float):\n    ...\n```\n\n`func` is now a `multimethod` which will delegate to the above function,\nwhen called with arguments of the specified types.\nSubsequent usage will register new types and functions to the existing multimethod of the same name.\n\n```python\n@multimethod\ndef func(x: float, y: int):\n    ...\n```\n\nAlternatively, functions can be explicitly registered in the same style as\n[functools.singledispatch](https://docs.python.org/3/library/functools.html#functools.singledispatch).\n\n```python\n@func.register\ndef _(x: bool, y: bool):\n    ...\n\n\n@func.register(object, bool)\n@func.register(bool, object)\ndef _(x, y):  # stackable without annotations\n    ...\n```\n\nMultimethods are implemented as mappings from signatures to functions,\nand can be introspected as such.\n\n```python\nmethod[type, ...]           # get registered function\nmethod[type, ...] = func    # register function by explicit types\n```\n\nMultimethods support any types that satisfy the `issubclass` relation,\nincluding abstract base classes in `collections.abc` and `typing`.\nSubscripted generics are provisionally supported:\n* `Union[...]`\n* `Mapping[...]` - the first key-value pair is checked\n* `Tuple[...]` - all args are checked\n* `Iterable[...]` - the first arg is checked\n\nNaturally checking subscripts is slower, but the implementation is optimized, cached,\nand bypassed if no subscripts are in use in the multimethod.\n\nDispatch resolution details:\n* If an exact match isn't registered, the next closest method is called (and cached).\n* If the `issubclass` relation is ambiguous,\n[mro](https://docs.python.org/3/library/stdtypes.html?highlight=mro#class.mro) position is used as a tie-breaker.\n* If there are still ambiguous methods - or none - a custom `TypeError` is raised.\n* Additional `*args` or `**kwargs` may be used when calling, but won't affect the dispatching.\n* A skipped annotation is equivalent to `: object`, which implicitly supports methods by leaving `self` blank.\n* If no types are specified, it will inherently match all arguments.\n\n## overload\nOverloads dispatch on annotated predicates.\nEach predicate is checked in the reverse order of registration.\n\nThe implementation is separate from `multimethod` due to the different performance characteristics.\nInstead a simple `isa` predicate is provided for checking instance type.\n\n```python\nfrom multimethod import isa, overload\n\n@overload\ndef func(obj: isa(str)):\n    ...\n\n@overload\ndef func(obj: str.isalnum):\n    ...\n\n@overload\ndef func(obj: str.isdigit):\n    ...\n```\n\n## multimeta\n\nUse `metaclass=multimeta` to create a class with a special namespace which converts callables to multimethods, and registers duplicate callables with the original.\n\n```python\nfrom multimethod import multimeta\n\nclass Foo(metaclass=multimeta):\n    def bar(self, x: str):\n        ...\n\n    def bar(self, x: int):\n        ...\n```\n\nEquivalent to:\n\n```python\nfrom multimethod import multimethod\n\nclass Foo:\n    @multimethod\n    def bar(self, x: str):\n        ...\n\n    @bar.register\n    def bar(self, x: int):\n        ...\n```\n\n# Installation\n\n```console\n% pip install multimethod\n```\n\n# Tests\n100% branch coverage.\n\n```console\n% pytest [--cov]\n```\n\n# Changes\n1.3\n* Python 3 required\n* Support for subscripted ABCs\n\n1.2\n* Support for typing generics\n* Stricter dispatching consistent with singledispatch\n\n1.1\n* Fix for Python 2 typing backport\n* Metaclass for automatic multimethods\n\n1.0\n* Missing annotations default to object\n* Removed deprecated dispatch stacking\n\n0.7\n* Forward references allowed in type hints\n* Register method\n* Overloads with predicate dispatch\n\n0.6\n* Multimethods can be defined inside a class\n\n0.5\n* Optimized dispatching\n* Support for `functools.singledispatch` syntax\n\n0.4\n* Dispatch on Python 3 annotations\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coady/multimethod", "keywords": "multiple dispatch multidispatch generic functions methods overload", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "multimethod", "package_url": "https://pypi.org/project/multimethod/", "platform": "", "project_url": "https://pypi.org/project/multimethod/", "project_urls": {"Documentation": "https://multimethod.readthedocs.io", "Homepage": "https://github.com/coady/multimethod"}, "release_url": "https://pypi.org/project/multimethod/1.3/", "requires_dist": ["m2r ; extra == 'docs'", "nbsphinx ; extra == 'docs'", "jupyter ; extra == 'docs'"], "requires_python": ">=3.5", "summary": "Multiple argument dispatching.", "version": "1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/multimethod/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b47d1d9ec9bc3d1ae2763e351264b8b8e0119e6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d756c74696d6574686f642e737667\"></a>\n<img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/da269a31f433dbe20db133c3c9156aecbb0d8985/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d756c74696d6574686f642e737667\">\n<a href=\"https://pepy.tech/project/multimethod\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c9e3bb44bf867d72b369fba850314e03d9f2684/68747470733a2f2f706570792e746563682f62616467652f6d756c74696d6574686f64\"></a>\n<img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9b8e51c6df0a1e155ef14231eca60b2200467ba/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f6d756c74696d6574686f642e737667\">\n<a href=\"https://travis-ci.org/coady/multimethod\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/64b455fccd5e050867da9b3e7fba31dd8c896544/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6164792f6d756c74696d6574686f642e737667\"></a>\n<a href=\"https://codecov.io/github/coady/multimethod\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/159e5f05813cd828e03a1e976818d93fc8a37771/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f636f6164792f6d756c74696d6574686f642e737667\"></a>\n<a href=\"https://multimethod.readthedocs.io\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17e32c8c97264a9860e5c48eaac3d6d1723434ea/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d756c74696d6574686f642f6261646765\"></a>\n<a href=\"https://requires.io/github/coady/multimethod/requirements/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/deace154bbcec75c51914d81f73bd65190d75203/68747470733a2f2f72657175697265732e696f2f6769746875622f636f6164792f6d756c74696d6574686f642f726571756972656d656e74732e737667\"></a>\n<a href=\"https://codeclimate.com/github/coady/multimethod/maintainability\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c5bc32547c7e539031301e1bd2c4556e2067a02/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f35613364646364353465353530656565323766392f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://pypi.org/project/black/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"http://mypy-lang.org/\" rel=\"nofollow\"><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9993afbe0db44dfa421d6d5d094f2e90b25b392/687474703a2f2f6d7970792d6c616e672e6f72672f7374617469632f6d7970795f62616467652e737667\"></a></p>\n<p>Multimethod provides a decorator for adding multiple argument dispatching to functions.\nThe decorator creates a multimethod object as needed, and registers the function with its annotations.</p>\n<p>There are several multiple dispatch libraries on PyPI.\nThis one aims for simplicity and speed. With caching of argument types,\nit should be the fastest pure Python implementation possible.</p>\n<h1>Usage</h1>\n<h2>multimethod</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">multimethod</span> <span class=\"kn\">import</span> <span class=\"n\">multimethod</span>\n\n<span class=\"nd\">@multimethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<p><code>func</code> is now a <code>multimethod</code> which will delegate to the above function,\nwhen called with arguments of the specified types.\nSubsequent usage will register new types and functions to the existing multimethod of the same name.</p>\n<pre><span class=\"nd\">@multimethod</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>Alternatively, functions can be explicitly registered in the same style as\n<a href=\"https://docs.python.org/3/library/functools.html#functools.singledispatch\" rel=\"nofollow\">functools.singledispatch</a>.</p>\n<pre><span class=\"nd\">@func</span><span class=\"o\">.</span><span class=\"n\">register</span>\n<span class=\"k\">def</span> <span class=\"nf\">_</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n\n<span class=\"nd\">@func</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">)</span>\n<span class=\"nd\">@func</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">_</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>  <span class=\"c1\"># stackable without annotations</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>Multimethods are implemented as mappings from signatures to functions,\nand can be introspected as such.</p>\n<pre><span class=\"n\">method</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>           <span class=\"c1\"># get registered function</span>\n<span class=\"n\">method</span><span class=\"p\">[</span><span class=\"nb\">type</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">func</span>    <span class=\"c1\"># register function by explicit types</span>\n</pre>\n<p>Multimethods support any types that satisfy the <code>issubclass</code> relation,\nincluding abstract base classes in <code>collections.abc</code> and <code>typing</code>.\nSubscripted generics are provisionally supported:</p>\n<ul>\n<li><code>Union[...]</code></li>\n<li><code>Mapping[...]</code> - the first key-value pair is checked</li>\n<li><code>Tuple[...]</code> - all args are checked</li>\n<li><code>Iterable[...]</code> - the first arg is checked</li>\n</ul>\n<p>Naturally checking subscripts is slower, but the implementation is optimized, cached,\nand bypassed if no subscripts are in use in the multimethod.</p>\n<p>Dispatch resolution details:</p>\n<ul>\n<li>If an exact match isn't registered, the next closest method is called (and cached).</li>\n<li>If the <code>issubclass</code> relation is ambiguous,\n<a href=\"https://docs.python.org/3/library/stdtypes.html?highlight=mro#class.mro\" rel=\"nofollow\">mro</a> position is used as a tie-breaker.</li>\n<li>If there are still ambiguous methods - or none - a custom <code>TypeError</code> is raised.</li>\n<li>Additional <code>*args</code> or <code>**kwargs</code> may be used when calling, but won't affect the dispatching.</li>\n<li>A skipped annotation is equivalent to <code>: object</code>, which implicitly supports methods by leaving <code>self</code> blank.</li>\n<li>If no types are specified, it will inherently match all arguments.</li>\n</ul>\n<h2>overload</h2>\n<p>Overloads dispatch on annotated predicates.\nEach predicate is checked in the reverse order of registration.</p>\n<p>The implementation is separate from <code>multimethod</code> due to the different performance characteristics.\nInstead a simple <code>isa</code> predicate is provided for checking instance type.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">multimethod</span> <span class=\"kn\">import</span> <span class=\"n\">isa</span><span class=\"p\">,</span> <span class=\"n\">overload</span>\n\n<span class=\"nd\">@overload</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">isa</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">)):</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@overload</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"o\">.</span><span class=\"n\">isalnum</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n<span class=\"nd\">@overload</span>\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"o\">.</span><span class=\"n\">isdigit</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</pre>\n<h2>multimeta</h2>\n<p>Use <code>metaclass=multimeta</code> to create a class with a special namespace which converts callables to multimethods, and registers duplicate callables with the original.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">multimethod</span> <span class=\"kn\">import</span> <span class=\"n\">multimeta</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"n\">metaclass</span><span class=\"o\">=</span><span class=\"n\">multimeta</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n</pre>\n<p>Equivalent to:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">multimethod</span> <span class=\"kn\">import</span> <span class=\"n\">multimethod</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"nd\">@multimethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@bar</span><span class=\"o\">.</span><span class=\"n\">register</span>\n    <span class=\"k\">def</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n</pre>\n<h1>Installation</h1>\n<pre><span class=\"gp\">%</span> pip install multimethod\n</pre>\n<h1>Tests</h1>\n<p>100% branch coverage.</p>\n<pre><span class=\"gp\">%</span> pytest <span class=\"o\">[</span>--cov<span class=\"o\">]</span>\n</pre>\n<h1>Changes</h1>\n<p>1.3</p>\n<ul>\n<li>Python 3 required</li>\n<li>Support for subscripted ABCs</li>\n</ul>\n<p>1.2</p>\n<ul>\n<li>Support for typing generics</li>\n<li>Stricter dispatching consistent with singledispatch</li>\n</ul>\n<p>1.1</p>\n<ul>\n<li>Fix for Python 2 typing backport</li>\n<li>Metaclass for automatic multimethods</li>\n</ul>\n<p>1.0</p>\n<ul>\n<li>Missing annotations default to object</li>\n<li>Removed deprecated dispatch stacking</li>\n</ul>\n<p>0.7</p>\n<ul>\n<li>Forward references allowed in type hints</li>\n<li>Register method</li>\n<li>Overloads with predicate dispatch</li>\n</ul>\n<p>0.6</p>\n<ul>\n<li>Multimethods can be defined inside a class</li>\n</ul>\n<p>0.5</p>\n<ul>\n<li>Optimized dispatching</li>\n<li>Support for <code>functools.singledispatch</code> syntax</li>\n</ul>\n<p>0.4</p>\n<ul>\n<li>Dispatch on Python 3 annotations</li>\n</ul>\n\n          </div>"}, "last_serial": 6665472, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "f11fa3a710f8ecd4ec592c3fdd9a131f", "sha256": "30848df6a30cd904559430bfd001e97a385f4642d2bde1ca2ebf61c9582682ba"}, "downloads": -1, "filename": "multimethod-0.4.tar.gz", "has_sig": false, "md5_digest": "f11fa3a710f8ecd4ec592c3fdd9a131f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3691, "upload_time": "2013-11-11T01:41:43", "upload_time_iso_8601": "2013-11-11T01:41:43.319887Z", "url": "https://files.pythonhosted.org/packages/50/ce/df57c06de38fc75f53548d96a62daafb9e84c4f82c1e2b682760ce0d20f3/multimethod-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "7518a41e38e351d69df52d2e03cbcf92", "sha256": "2ddba71265cb51dfd3d078b86b2bf57d47426ccf810bd2a695dfcce75526083d"}, "downloads": -1, "filename": "multimethod-0.5.tar.gz", "has_sig": false, "md5_digest": "7518a41e38e351d69df52d2e03cbcf92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4343, "upload_time": "2015-09-04T00:18:11", "upload_time_iso_8601": "2015-09-04T00:18:11.635721Z", "url": "https://files.pythonhosted.org/packages/c1/3c/65ea1ca4f580ec9224c4d0c85cba9b0b440971e2aea147cbbb1c8115681d/multimethod-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "a79b6c7a86614e8eaf1acbb52e38e633", "sha256": "d6e57443e877b9c565eff107de760029e78c7432286cbad155ae1ec0b918f1dd"}, "downloads": -1, "filename": "multimethod-0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a79b6c7a86614e8eaf1acbb52e38e633", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5856, "upload_time": "2017-01-02T19:02:52", "upload_time_iso_8601": "2017-01-02T19:02:52.701871Z", "url": "https://files.pythonhosted.org/packages/ff/f6/ac4366395cd56dd562503c795da6fc4ab72a4d23007418c1d5263f1f3193/multimethod-0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db4f0bf1bf2497e764ea99ddcabdf22a", "sha256": "8bcd126f109ba22bcfa32053f0b56c6676204e241df0907198cbaf62326f1c7c"}, "downloads": -1, "filename": "multimethod-0.6.tar.gz", "has_sig": false, "md5_digest": "db4f0bf1bf2497e764ea99ddcabdf22a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5144, "upload_time": "2017-01-02T19:02:50", "upload_time_iso_8601": "2017-01-02T19:02:50.515612Z", "url": "https://files.pythonhosted.org/packages/23/a9/b463846378a17efcacc5e2bd5189035776a3cb0c00f643a75ffe7beb49c2/multimethod-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "a1a92b345184c5ae0bf94d619ddacd96", "sha256": "0c0efff31315fd5f9716e68c6b94955187462ae0a5861a7494f51dc63081c052"}, "downloads": -1, "filename": "multimethod-0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a1a92b345184c5ae0bf94d619ddacd96", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": "~=2.7, >=3.4", "size": 7122, "upload_time": "2017-12-08T01:38:02", "upload_time_iso_8601": "2017-12-08T01:38:02.703214Z", "url": "https://files.pythonhosted.org/packages/29/e8/8c1c31b246a1434d7860936a49dd2e7e74f6fb5f169b6e288308b3f37adf/multimethod-0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea9056e87834f5c6cf6c138cae4f0252", "sha256": "5748e620aa50d95843b0fda0e47cd616227df8ff58bafdeae9393852a93a5d47"}, "downloads": -1, "filename": "multimethod-0.7.tar.gz", "has_sig": false, "md5_digest": "ea9056e87834f5c6cf6c138cae4f0252", "packagetype": "sdist", "python_version": "source", "requires_python": "~=2.7, >=3.4", "size": 6554, "upload_time": "2017-12-08T01:38:03", "upload_time_iso_8601": "2017-12-08T01:38:03.953782Z", "url": "https://files.pythonhosted.org/packages/5c/29/f8b101ed29ac77e7298b57600550c8f211e02179785581eff7d0a6728a41/multimethod-0.7.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "79d9074fc3a46055c9fb8e2957536301", "sha256": "726cd6a07f68c5e0fdb504983ccb6cf9ce10cea58cad67195cc99ea84169f941"}, "downloads": -1, "filename": "multimethod-0.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "79d9074fc3a46055c9fb8e2957536301", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 7102, "upload_time": "2017-12-12T02:40:14", "upload_time_iso_8601": "2017-12-12T02:40:14.650560Z", "url": "https://files.pythonhosted.org/packages/9f/cc/c27b64aebe905be8ea57841a04c67e8fcc528e41568ff5b4aab146b18a3d/multimethod-0.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95bfb1a98e170291fe4ba9a2c50876f5", "sha256": "53846b22601ea4992954cb10ab30f47ac26d34c73478af2e2e32bf68b7f7cb0b"}, "downloads": -1, "filename": "multimethod-0.7.1.tar.gz", "has_sig": false, "md5_digest": "95bfb1a98e170291fe4ba9a2c50876f5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 6535, "upload_time": "2017-12-12T02:40:16", "upload_time_iso_8601": "2017-12-12T02:40:16.348100Z", "url": "https://files.pythonhosted.org/packages/13/b1/4a16ffb5b793547de6cf51ce0906258586f7cc45ed073bee01c43299747f/multimethod-0.7.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "1395b54d4f5b04c20210e32c4af73a53", "sha256": "5f20db508dfb95aa2b135299a436a68342ccfc2c275b6636b6306de435c01d66"}, "downloads": -1, "filename": "multimethod-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1395b54d4f5b04c20210e32c4af73a53", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 5226, "upload_time": "2018-12-07T23:52:14", "upload_time_iso_8601": "2018-12-07T23:52:14.788732Z", "url": "https://files.pythonhosted.org/packages/d0/98/4c9a1fe8c0383e944efcb0e9b157ea253f49ec691f310c484b1a8b8585d5/multimethod-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb6cdc2368e9893564c69aefadd6293a", "sha256": "2749fca0e36c817be90fa62ca10d60c6fd8d09dcec65aca33be0e7a1e82b8ecb"}, "downloads": -1, "filename": "multimethod-1.0.tar.gz", "has_sig": false, "md5_digest": "fb6cdc2368e9893564c69aefadd6293a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 6461, "upload_time": "2018-12-07T23:52:16", "upload_time_iso_8601": "2018-12-07T23:52:16.268023Z", "url": "https://files.pythonhosted.org/packages/40/ac/0195b2ae0665e221c40e2a9200bb19f643ef256e9b5d4108d51c0165b284/multimethod-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "725910029ec93929072cee2a81a79451", "sha256": "f15271ebd98ac5d4bd1bc7445d0b71d134d4642d62f253711774733943d499ef"}, "downloads": -1, "filename": "multimethod-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "725910029ec93929072cee2a81a79451", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 5650, "upload_time": "2019-06-18T00:37:01", "upload_time_iso_8601": "2019-06-18T00:37:01.295129Z", "url": "https://files.pythonhosted.org/packages/4f/9c/c321effe4a47e92b3a7fcd72f1375300d2b38138ec77b4f5afd84b8e0755/multimethod-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0abfa8976e4f58783fc8e35cb43fce46", "sha256": "afdc836df012b26350e38539b9cb026d62240bb293a95bccf7dbfde1a49e3bc9"}, "downloads": -1, "filename": "multimethod-1.1.tar.gz", "has_sig": false, "md5_digest": "0abfa8976e4f58783fc8e35cb43fce46", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 7123, "upload_time": "2019-06-18T00:37:03", "upload_time_iso_8601": "2019-06-18T00:37:03.001191Z", "url": "https://files.pythonhosted.org/packages/b5/c1/79cd89b6a3fa6ee562346a80b9db40784f4d596d9acb427fed92bc9bf48c/multimethod-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "6f891aa6e0bd39d934b377b16a9038d6", "sha256": "80b434bb049c2ae7f9dda29a0d20da97deb20a174353721fb91a312c63ef267d"}, "downloads": -1, "filename": "multimethod-1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6f891aa6e0bd39d934b377b16a9038d6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7", "size": 6694, "upload_time": "2019-12-07T19:26:02", "upload_time_iso_8601": "2019-12-07T19:26:02.405329Z", "url": "https://files.pythonhosted.org/packages/95/ab/f6ab079fafa46eabc33be775be5b349aa1fc195537310b0f531932df1bc7/multimethod-1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9be9b048d908470ec04f73b7f73bc4c2", "sha256": "8fbd707b0eb1841d61ba14815e62dca9fcf2826498b4f41c7ff2ce99082c6e6f"}, "downloads": -1, "filename": "multimethod-1.2.tar.gz", "has_sig": false, "md5_digest": "9be9b048d908470ec04f73b7f73bc4c2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 8741, "upload_time": "2019-12-07T19:26:03", "upload_time_iso_8601": "2019-12-07T19:26:03.993286Z", "url": "https://files.pythonhosted.org/packages/5f/79/4e3ab122cd4edabd7567526e5e35dd22c5418d690e354126621b408c8402/multimethod-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "a1c0392735c3316ba51e37541c7ba16e", "sha256": "6928d577bbf4fbd3475b8fb13cfcad9d46885d32806f6be0b52da89a30116043"}, "downloads": -1, "filename": "multimethod-1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a1c0392735c3316ba51e37541c7ba16e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 6746, "upload_time": "2020-02-20T02:45:03", "upload_time_iso_8601": "2020-02-20T02:45:03.136367Z", "url": "https://files.pythonhosted.org/packages/47/01/c0570b8bcac36c752b4c458d74fabc707fa078c464f25b1c1f0fcd247c9a/multimethod-1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9625b41d2d2fecbb7921be1108a197b", "sha256": "a5c04db3d34ceecd704166d4775eb04c224cb654f634679ac993eb61016b2c2d"}, "downloads": -1, "filename": "multimethod-1.3.tar.gz", "has_sig": false, "md5_digest": "b9625b41d2d2fecbb7921be1108a197b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8746, "upload_time": "2020-02-20T02:45:04", "upload_time_iso_8601": "2020-02-20T02:45:04.675657Z", "url": "https://files.pythonhosted.org/packages/32/d8/7fc796228c8999e3c697c0cbac5d0153c33cd98506690c79b5b606be99e0/multimethod-1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a1c0392735c3316ba51e37541c7ba16e", "sha256": "6928d577bbf4fbd3475b8fb13cfcad9d46885d32806f6be0b52da89a30116043"}, "downloads": -1, "filename": "multimethod-1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a1c0392735c3316ba51e37541c7ba16e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 6746, "upload_time": "2020-02-20T02:45:03", "upload_time_iso_8601": "2020-02-20T02:45:03.136367Z", "url": "https://files.pythonhosted.org/packages/47/01/c0570b8bcac36c752b4c458d74fabc707fa078c464f25b1c1f0fcd247c9a/multimethod-1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b9625b41d2d2fecbb7921be1108a197b", "sha256": "a5c04db3d34ceecd704166d4775eb04c224cb654f634679ac993eb61016b2c2d"}, "downloads": -1, "filename": "multimethod-1.3.tar.gz", "has_sig": false, "md5_digest": "b9625b41d2d2fecbb7921be1108a197b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 8746, "upload_time": "2020-02-20T02:45:04", "upload_time_iso_8601": "2020-02-20T02:45:04.675657Z", "url": "https://files.pythonhosted.org/packages/32/d8/7fc796228c8999e3c697c0cbac5d0153c33cd98506690c79b5b606be99e0/multimethod-1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:24 2020"}