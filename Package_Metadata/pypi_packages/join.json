{"info": {"author": "Stuart Owen", "author_email": "stuart.owen@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "====\nJOIN\n====\nSQL-style joins for Python iterables. \n\n.. image:: https://travis-ci.org/StuartAxelOwen/join.svg?branch=master\n    :target: https://travis-ci.org/StuartAxelOwen/join\n\n.. code-block:: python\n\n    >>> from join import join, merge, tuple_join\n    >>> dogs = [\n    ...     Dog('gatsby', 'Rruff!', 16),\n    ...     Dog('ein', 'wruf!', 9),\n    ... ]\n    >>> cats = [\n    ...     Cat('pleo', 'mreeeoww', 16),\n    ...     Cat('xena', 'mreow', 12),\n    ...     Cat('gatsby', 'rowr', 15),\n    ... ]\n    >>> catdogs = merge(cats, dogs, key='name')\n    >>> catdogs\n    [CatDog({'right': Dog(name='gatsby', woof='Rruff!', weight=16), 'name': 'gatsby', 'weight': 15, 'meow': 'rowr', 'woof': 'Rruff!', 'left': Cat(name='gatsby', meow='rowr', weight=15)})]\n    >>> catdogs[0].meow\n    'rowr'\n    >>> catdogs[0].woof\n    'Rruff!'\n\nInstallation\n------------\nInstall using pip:\n\n``pip install join``\n\nUse\n---\n\n``join`` does the work of associating iterable items together, but gives you all the power for customization, letting you supply your own join function, separate keys for left and right iterables, and even letting you use functions instead of attribute names.\n\n``merge`` used above, for example, is ``join`` using an object union to join matched objects.  You can use a tuple join, which is default for ``join``:\n\n.. code-block:: python\n\n    >>> join(cats, dogs, key='name', join_fn=tuple_join)\n    [(Cat(name='gatsby', meow='rowr', weight=15), Dog(name='gatsby', woof='Rruff!', weight=16))]\n\nSupplying your own join function is easy:\n\n.. code-block:: python\n\n    >>> def weight_sum(left, right):\n    ...     return left.weight + right.weight\n    ...\n    >>> join(cats, dogs, key='name', join_fn=weight_sum)\n    [31]\n\nUsing separate key functions is easy too:\n\n.. code-block:: python\n\n    >>> def cat_key(cat):\n    ...     return cat.weight % 3 == 0  # weight divisible by 3\n    ... \n    >>> def dog_key(dog):\n    ...     return dog.weight % 4 == 0  # weight divisible by 4\n    ... \n    >>> def name_join(left, right):\n    ...     return left.name + '-' + right.name\n    ... \n    >>> join(cats, dogs, left_key=cat_key, right_key=dog_key, join_fn=name_join)\n    ['pleo-ein', 'xena-gatsby', 'gatsby-gatsby']\n\nContributing\n------------\n\nPull requests and issues welcome!  Run tests from project root with ``sh run_tests.sh``.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/StuartAxelOwen/join/archive/0.1.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/StuartAxelOwen/join", "keywords": "join,joins,merge,merges,list join,iterable join", "license": "Copyright (c) 2015 Stuart Owen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "join", "package_url": "https://pypi.org/project/join/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/join/", "project_urls": {"Download": "https://github.com/StuartAxelOwen/join/archive/0.1.zip", "Homepage": "https://github.com/StuartAxelOwen/join"}, "release_url": "https://pypi.org/project/join/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "SQL-style joins for iterables.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>SQL-style joins for Python iterables.</p>\n<a href=\"https://travis-ci.org/StuartAxelOwen/join\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/StuartAxelOwen/join.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f3740e9f0f56695847c6ad9178ac8402d8013e1/68747470733a2f2f7472617669732d63692e6f72672f5374756172744178656c4f77656e2f6a6f696e2e7376673f6272616e63683d6d6173746572\"></a>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">join</span> <span class=\"kn\">import</span> <span class=\"n\">join</span><span class=\"p\">,</span> <span class=\"n\">merge</span><span class=\"p\">,</span> <span class=\"n\">tuple_join</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dogs</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>     <span class=\"n\">Dog</span><span class=\"p\">(</span><span class=\"s1\">'gatsby'</span><span class=\"p\">,</span> <span class=\"s1\">'Rruff!'</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">Dog</span><span class=\"p\">(</span><span class=\"s1\">'ein'</span><span class=\"p\">,</span> <span class=\"s1\">'wruf!'</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">),</span>\n<span class=\"o\">...</span> <span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cats</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>     <span class=\"n\">Cat</span><span class=\"p\">(</span><span class=\"s1\">'pleo'</span><span class=\"p\">,</span> <span class=\"s1\">'mreeeoww'</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">Cat</span><span class=\"p\">(</span><span class=\"s1\">'xena'</span><span class=\"p\">,</span> <span class=\"s1\">'mreow'</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>     <span class=\"n\">Cat</span><span class=\"p\">(</span><span class=\"s1\">'gatsby'</span><span class=\"p\">,</span> <span class=\"s1\">'rowr'</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">),</span>\n<span class=\"o\">...</span> <span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">catdogs</span> <span class=\"o\">=</span> <span class=\"n\">merge</span><span class=\"p\">(</span><span class=\"n\">cats</span><span class=\"p\">,</span> <span class=\"n\">dogs</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'name'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">catdogs</span>\n<span class=\"p\">[</span><span class=\"n\">CatDog</span><span class=\"p\">({</span><span class=\"s1\">'right'</span><span class=\"p\">:</span> <span class=\"n\">Dog</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'gatsby'</span><span class=\"p\">,</span> <span class=\"n\">woof</span><span class=\"o\">=</span><span class=\"s1\">'Rruff!'</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">),</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'gatsby'</span><span class=\"p\">,</span> <span class=\"s1\">'weight'</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"s1\">'meow'</span><span class=\"p\">:</span> <span class=\"s1\">'rowr'</span><span class=\"p\">,</span> <span class=\"s1\">'woof'</span><span class=\"p\">:</span> <span class=\"s1\">'Rruff!'</span><span class=\"p\">,</span> <span class=\"s1\">'left'</span><span class=\"p\">:</span> <span class=\"n\">Cat</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'gatsby'</span><span class=\"p\">,</span> <span class=\"n\">meow</span><span class=\"o\">=</span><span class=\"s1\">'rowr'</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">)})]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">catdogs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">meow</span>\n<span class=\"s1\">'rowr'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">catdogs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">woof</span>\n<span class=\"s1\">'Rruff!'</span>\n</pre>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install using pip:</p>\n<p><tt>pip install join</tt></p>\n</div>\n<div id=\"use\">\n<h2>Use</h2>\n<p><tt>join</tt> does the work of associating iterable items together, but gives you all the power for customization, letting you supply your own join function, separate keys for left and right iterables, and even letting you use functions instead of attribute names.</p>\n<p><tt>merge</tt> used above, for example, is <tt>join</tt> using an object union to join matched objects.  You can use a tuple join, which is default for <tt>join</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cats</span><span class=\"p\">,</span> <span class=\"n\">dogs</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"n\">join_fn</span><span class=\"o\">=</span><span class=\"n\">tuple_join</span><span class=\"p\">)</span>\n<span class=\"p\">[(</span><span class=\"n\">Cat</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'gatsby'</span><span class=\"p\">,</span> <span class=\"n\">meow</span><span class=\"o\">=</span><span class=\"s1\">'rowr'</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">),</span> <span class=\"n\">Dog</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'gatsby'</span><span class=\"p\">,</span> <span class=\"n\">woof</span><span class=\"o\">=</span><span class=\"s1\">'Rruff!'</span><span class=\"p\">,</span> <span class=\"n\">weight</span><span class=\"o\">=</span><span class=\"mi\">16</span><span class=\"p\">))]</span>\n</pre>\n<p>Supplying your own join function is easy:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">weight_sum</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">left</span><span class=\"o\">.</span><span class=\"n\">weight</span> <span class=\"o\">+</span> <span class=\"n\">right</span><span class=\"o\">.</span><span class=\"n\">weight</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cats</span><span class=\"p\">,</span> <span class=\"n\">dogs</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"n\">join_fn</span><span class=\"o\">=</span><span class=\"n\">weight_sum</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">31</span><span class=\"p\">]</span>\n</pre>\n<p>Using separate key functions is easy too:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">cat_key</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">weight</span> <span class=\"o\">%</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>  <span class=\"c1\"># weight divisible by 3</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">dog_key</span><span class=\"p\">(</span><span class=\"n\">dog</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">dog</span><span class=\"o\">.</span><span class=\"n\">weight</span> <span class=\"o\">%</span> <span class=\"mi\">4</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>  <span class=\"c1\"># weight divisible by 4</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">name_join</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"p\">,</span> <span class=\"n\">right</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">left</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">+</span> <span class=\"s1\">'-'</span> <span class=\"o\">+</span> <span class=\"n\">right</span><span class=\"o\">.</span><span class=\"n\">name</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">cats</span><span class=\"p\">,</span> <span class=\"n\">dogs</span><span class=\"p\">,</span> <span class=\"n\">left_key</span><span class=\"o\">=</span><span class=\"n\">cat_key</span><span class=\"p\">,</span> <span class=\"n\">right_key</span><span class=\"o\">=</span><span class=\"n\">dog_key</span><span class=\"p\">,</span> <span class=\"n\">join_fn</span><span class=\"o\">=</span><span class=\"n\">name_join</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'pleo-ein'</span><span class=\"p\">,</span> <span class=\"s1\">'xena-gatsby'</span><span class=\"p\">,</span> <span class=\"s1\">'gatsby-gatsby'</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Pull requests and issues welcome!  Run tests from project root with <tt>sh run_tests.sh</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 1555426, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c6ed42fc388c9a723f8f1a5befd834d0", "sha256": "dc8ac5208e772839b85dd70c8efce0035e913e2c5f2da87d7060d6d63d282b36"}, "downloads": -1, "filename": "join-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c6ed42fc388c9a723f8f1a5befd834d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2609, "upload_time": "2015-04-28T06:12:39", "upload_time_iso_8601": "2015-04-28T06:12:39.659088Z", "url": "https://files.pythonhosted.org/packages/15/74/4e83e70b7199f0718c295854c89ad1e6207431e180328e5d1ca768c9df86/join-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "48a8182da0c1f2944f6f4ef9698b427f", "sha256": "fc2d62e427e9b41edf9948d5b744dce69a526bee5a29e170775ba5a93803fdc2"}, "downloads": -1, "filename": "join-0.0.2.tar.gz", "has_sig": false, "md5_digest": "48a8182da0c1f2944f6f4ef9698b427f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4075, "upload_time": "2015-05-03T00:44:28", "upload_time_iso_8601": "2015-05-03T00:44:28.535163Z", "url": "https://files.pythonhosted.org/packages/c7/bf/b60ac1e21c942c1544a52e1a4d8efdaa81fcb3b1f8104fb956c07d3dcb8c/join-0.0.2.tar.gz", "yanked": false}], "0.1": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "0647c6021246f646c83afdeff670c6c7", "sha256": "7fea9c9ef2832f7f1cef9d72bbb2806f895fd4e877b714347a1700cb8ed7d06e"}, "downloads": -1, "filename": "join-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0647c6021246f646c83afdeff670c6c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4967, "upload_time": "2015-05-08T06:21:07", "upload_time_iso_8601": "2015-05-08T06:21:07.889982Z", "url": "https://files.pythonhosted.org/packages/41/27/7f7d87594c516fe823bf05e545b661b20be448ae60e08e4a01d1f5fb5144/join-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1216b6dc20b2c32f9d11bfc9749633ad", "sha256": "eb5889f72a0e74c0b12325fd14f6daff3f619a7544fc67e2aa14ce2cbc6aa07d"}, "downloads": -1, "filename": "join-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1216b6dc20b2c32f9d11bfc9749633ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5370, "upload_time": "2015-05-20T19:16:55", "upload_time_iso_8601": "2015-05-20T19:16:55.958088Z", "url": "https://files.pythonhosted.org/packages/43/91/a4e490adad247d275b5b1e18e2628805dbd8fae868d021a7bd3bc0833022/join-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1216b6dc20b2c32f9d11bfc9749633ad", "sha256": "eb5889f72a0e74c0b12325fd14f6daff3f619a7544fc67e2aa14ce2cbc6aa07d"}, "downloads": -1, "filename": "join-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1216b6dc20b2c32f9d11bfc9749633ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5370, "upload_time": "2015-05-20T19:16:55", "upload_time_iso_8601": "2015-05-20T19:16:55.958088Z", "url": "https://files.pythonhosted.org/packages/43/91/a4e490adad247d275b5b1e18e2628805dbd8fae868d021a7bd3bc0833022/join-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:16 2020"}