{"info": {"author": "moonrollersoft", "author_email": "moonrollersoft@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "description": "# log-viewer: log web-exposer toolkit\n\n## What is log-viewer for? ##\n\n**log-viewer** is just a lightweight Python package that web-exposes your log files using \n[Flask's](https://palletsprojects.com/p/flask/) interface.\n\n## How do I get set up? ##\n\n## Requisites ##\n* [python](https://www.python.org/downloads/release/python-360/) >= 3.6 running on a \nLinux environment.\n\n## Where to get it ##\n[PyPi](https://pypi.org/) repository, execute:\n```sh\npip install log-viewer\n```\n\n## Installation from sources ##\nCloning the git [repo](https://github.com/moonrollersoft/log-viewer), execute in root folder:\n```sh\npython setup.py install\n```\n\n## Use ##\nAfter package installation, execute:\n```sh\nlog-viewer\n```\n**log-viewer** will search log files and it will expose them within HTML native accordions in \nhttp://0.0.0.0:8081 (default)\n \nNo login is needed by default. In order to activate the login, just set user or password \nthrough the execution options. \n\n## Execution options ##\n**log-viewer** execution options:\n* **-a --address** Logs exposing address. Default: \"0.0.0.0\"\n* **-p --port** Logs exposing port. Default: 8081\n* **-u --user** User for login, it activates the login mode. If no password is set, the \nlogin mode will only check the \nprovided user\n* **-psw --password** Password for login, it activates the login mode. If no user is set, \nthe login mode will only check \nthe provided password\n* **-lp --logPaths** Paths to search (recursively) the logs from (\";\" separated). \nDefault: \"/var/log/\"\n\n### Example ###\n\nThe following example will activate the login mode with custom parameters:\n```sh\nlog-viewer -u admin -psw admin -p 8080 -lp \"/var/log/django;/var/log/apt\" -a \"127.0.0.1\"\n```\n\n## License\n[MIT](LICENSE.txt)\n\n\n## Dependencies\n- [Flask](https://palletsprojects.com/p/flask/) >= 1*\n\n\n## Contact ##\n[moonrollersoft@gmail.com](mailto:moonrollersoft@gmail.com)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/moonrollersoft/log-viewer/archive/v0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/moonrollersoft/log-viewer/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "log-viewer", "package_url": "https://pypi.org/project/log-viewer/", "platform": "", "project_url": "https://pypi.org/project/log-viewer/", "project_urls": {"Download": "https://github.com/moonrollersoft/log-viewer/archive/v0.1.0.tar.gz", "Homepage": "https://github.com/moonrollersoft/log-viewer/"}, "release_url": "https://pypi.org/project/log-viewer/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Project that exposes the logs.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>log-viewer: log web-exposer toolkit</h1>\n<h2>What is log-viewer for?</h2>\n<p><strong>log-viewer</strong> is just a lightweight Python package that web-exposes your log files using\n<a href=\"https://palletsprojects.com/p/flask/\" rel=\"nofollow\">Flask's</a> interface.</p>\n<h2>How do I get set up?</h2>\n<h2>Requisites</h2>\n<ul>\n<li><a href=\"https://www.python.org/downloads/release/python-360/\" rel=\"nofollow\">python</a> &gt;= 3.6 running on a\nLinux environment.</li>\n</ul>\n<h2>Where to get it</h2>\n<p><a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a> repository, execute:</p>\n<pre>pip install log-viewer\n</pre>\n<h2>Installation from sources</h2>\n<p>Cloning the git <a href=\"https://github.com/moonrollersoft/log-viewer\" rel=\"nofollow\">repo</a>, execute in root folder:</p>\n<pre>python setup.py install\n</pre>\n<h2>Use</h2>\n<p>After package installation, execute:</p>\n<pre>log-viewer\n</pre>\n<p><strong>log-viewer</strong> will search log files and it will expose them within HTML native accordions in\n<a href=\"http://0.0.0.0:8081\" rel=\"nofollow\">http://0.0.0.0:8081</a> (default)</p>\n<p>No login is needed by default. In order to activate the login, just set user or password\nthrough the execution options.</p>\n<h2>Execution options</h2>\n<p><strong>log-viewer</strong> execution options:</p>\n<ul>\n<li><strong>-a --address</strong> Logs exposing address. Default: \"0.0.0.0\"</li>\n<li><strong>-p --port</strong> Logs exposing port. Default: 8081</li>\n<li><strong>-u --user</strong> User for login, it activates the login mode. If no password is set, the\nlogin mode will only check the\nprovided user</li>\n<li><strong>-psw --password</strong> Password for login, it activates the login mode. If no user is set,\nthe login mode will only check\nthe provided password</li>\n<li><strong>-lp --logPaths</strong> Paths to search (recursively) the logs from (\";\" separated).\nDefault: \"/var/log/\"</li>\n</ul>\n<h3>Example</h3>\n<p>The following example will activate the login mode with custom parameters:</p>\n<pre>log-viewer -u admin -psw admin -p <span class=\"m\">8080</span> -lp <span class=\"s2\">\"/var/log/django;/var/log/apt\"</span> -a <span class=\"s2\">\"127.0.0.1\"</span>\n</pre>\n<h2>License</h2>\n<p><a href=\"LICENSE.txt\" rel=\"nofollow\">MIT</a></p>\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"https://palletsprojects.com/p/flask/\" rel=\"nofollow\">Flask</a> &gt;= 1*</li>\n</ul>\n<h2>Contact</h2>\n<p><a href=\"mailto:moonrollersoft@gmail.com\">moonrollersoft@gmail.com</a></p>\n\n          </div>"}, "last_serial": 6824177, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6b25fd17ec353f8f2e37a1ffe75973ff", "sha256": "7654786860e77bf085660791171f1446ef38cef2d1dc11e06c1e298d78f94c8f"}, "downloads": -1, "filename": "log_viewer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6b25fd17ec353f8f2e37a1ffe75973ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5241, "upload_time": "2020-03-16T20:55:14", "upload_time_iso_8601": "2020-03-16T20:55:14.872604Z", "url": "https://files.pythonhosted.org/packages/21/3d/94dc164df45f52a0d39d615c54244d2b53f46993dac94e20c373411f6d7c/log_viewer-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6b25fd17ec353f8f2e37a1ffe75973ff", "sha256": "7654786860e77bf085660791171f1446ef38cef2d1dc11e06c1e298d78f94c8f"}, "downloads": -1, "filename": "log_viewer-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6b25fd17ec353f8f2e37a1ffe75973ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5241, "upload_time": "2020-03-16T20:55:14", "upload_time_iso_8601": "2020-03-16T20:55:14.872604Z", "url": "https://files.pythonhosted.org/packages/21/3d/94dc164df45f52a0d39d615c54244d2b53f46993dac94e20c373411f6d7c/log_viewer-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:05 2020"}