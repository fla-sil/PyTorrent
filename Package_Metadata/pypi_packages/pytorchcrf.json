{"info": {"author": "Feiyang Niu", "author_email": "statech.forums@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# PyTorch CRF with N-best Decoding\n\nImplementation of Conditional Random Fields (CRF) in PyTorch 1.0. It supports top-N most probable paths decoding.\n\nThe package is based on [pytorch-crf](https://github.com/kmkurn/pytorch-crf) with only the following differences\n\n- Method `_viterbi_decode` that decodes the most probable path get optimized. Running time gets reduced to 50% or less with batch size 15+ and sequence length 20+\n- The class now supports decoding top-N most probable paths through the implementation of the method `_viterbi_decode_nbest`\n\n## Requirements\n\n- Python 3 (>= 3.6)\n- PyTorch (>= 1.0)\n\n## Installation\n\n```bash\npip install pytorchcrf\n```\n\n## Examples\n\n```python\n>>> import torch\n>>> from pytorchcrf import CRF\n>>> num_tags = 5                        # number of tags is 5\n>>> model = CRF(num_tags)\n>>> seq_length = 3                      # maximum sequence length in a batch\n>>> batch_size = 2                      # number of samples in the batch\n>>> emissions = torch.randn(seq_length, batch_size, num_tags)\n\n# Computing log likelihood\n>>> tags = torch.tensor([[2, 3], [1, 0], [3, 4]], dtype=torch.long)  # (seq_length, batch_size)\n>>> model(emissions, tags)\n\n# Decoding\n>>> model.decode(emissions)             # decoding the best path\n>>> model.decode(emissions, nbest=3)    # decoding the top 3 paths\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/statech/pytorchCRF", "keywords": "pytorch crf n-best", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pytorchcrf", "package_url": "https://pypi.org/project/pytorchcrf/", "platform": "", "project_url": "https://pypi.org/project/pytorchcrf/", "project_urls": {"Homepage": "https://github.com/statech/pytorchCRF"}, "release_url": "https://pypi.org/project/pytorchcrf/1.2.0/", "requires_dist": ["torch"], "requires_python": ">=3.6", "summary": "PyTorch CRF with N-best decoding", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyTorch CRF with N-best Decoding</h1>\n<p>Implementation of Conditional Random Fields (CRF) in PyTorch 1.0. It supports top-N most probable paths decoding.</p>\n<p>The package is based on <a href=\"https://github.com/kmkurn/pytorch-crf\" rel=\"nofollow\">pytorch-crf</a> with only the following differences</p>\n<ul>\n<li>Method <code>_viterbi_decode</code> that decodes the most probable path get optimized. Running time gets reduced to 50% or less with batch size 15+ and sequence length 20+</li>\n<li>The class now supports decoding top-N most probable paths through the implementation of the method <code>_viterbi_decode_nbest</code></li>\n</ul>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3 (&gt;= 3.6)</li>\n<li>PyTorch (&gt;= 1.0)</li>\n</ul>\n<h2>Installation</h2>\n<pre>pip install pytorchcrf\n</pre>\n<h2>Examples</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pytorchcrf</span> <span class=\"kn\">import</span> <span class=\"n\">CRF</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">num_tags</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>                        <span class=\"c1\"># number of tags is 5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">CRF</span><span class=\"p\">(</span><span class=\"n\">num_tags</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">seq_length</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>                      <span class=\"c1\"># maximum sequence length in a batch</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">batch_size</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>                      <span class=\"c1\"># number of samples in the batch</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">emissions</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">randn</span><span class=\"p\">(</span><span class=\"n\">seq_length</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">num_tags</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Computing log likelihood</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">tensor</span><span class=\"p\">([[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">long</span><span class=\"p\">)</span>  <span class=\"c1\"># (seq_length, batch_size)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"p\">(</span><span class=\"n\">emissions</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Decoding</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">emissions</span><span class=\"p\">)</span>             <span class=\"c1\"># decoding the best path</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">emissions</span><span class=\"p\">,</span> <span class=\"n\">nbest</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>    <span class=\"c1\"># decoding the top 3 paths</span>\n</pre>\n\n          </div>"}, "last_serial": 6891000, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "dd38ad99400135c77266ee82260a5814", "sha256": "0e0cedda07c6128c74c679db2a85720f96934e00863a0eda097aa6c071fc9a83"}, "downloads": -1, "filename": "pytorchcrf-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dd38ad99400135c77266ee82260a5814", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6997, "upload_time": "2019-11-11T08:03:45", "upload_time_iso_8601": "2019-11-11T08:03:45.666362Z", "url": "https://files.pythonhosted.org/packages/b9/3e/2e7cb52ca442e04fe1238c9fa2cd68950643af9fbe22b174b33c4f4eed27/pytorchcrf-0.1.0-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "7bed19346494537db71a02098ff13681", "sha256": "b29fc8dcf198f488273c9a0ddc29ea783dd6ae0d653e4785f51269b6b1c17b49"}, "downloads": -1, "filename": "pytorchcrf-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7bed19346494537db71a02098ff13681", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7125, "upload_time": "2020-03-07T20:22:49", "upload_time_iso_8601": "2020-03-07T20:22:49.140965Z", "url": "https://files.pythonhosted.org/packages/f3/e7/e2d2ed8674167535e0130077ef87284144f5dab6699aef4e3e507bb543e2/pytorchcrf-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6dfc46068d07cefa7aae1fed5101460", "sha256": "8dcab623c7889d04ccd3c22ddca4907baaef5a0bac468d019a7086057d381011"}, "downloads": -1, "filename": "pytorchcrf-1.1.0.tar.gz", "has_sig": false, "md5_digest": "b6dfc46068d07cefa7aae1fed5101460", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5640, "upload_time": "2020-03-07T20:22:50", "upload_time_iso_8601": "2020-03-07T20:22:50.539459Z", "url": "https://files.pythonhosted.org/packages/8e/fa/0c1f3121a841561db9b08ff1d4ec9017c7fb6e899bdc9927206c0e855ec8/pytorchcrf-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "3046f7ec02b6496c6d11f5ab9d6434c8", "sha256": "1fad8a8dba816a9a76a74c6cfc535aab226666893797e2842f2d978562064124"}, "downloads": -1, "filename": "pytorchcrf-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3046f7ec02b6496c6d11f5ab9d6434c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7127, "upload_time": "2020-03-26T20:02:50", "upload_time_iso_8601": "2020-03-26T20:02:50.624067Z", "url": "https://files.pythonhosted.org/packages/b3/3a/85ae7d34b43d833c7d1a17200a15afa4d506b5995b93604f425250ae9d06/pytorchcrf-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "baaaa3b87a8014937538afe7dfa0fb0a", "sha256": "5ee4e0c0aa0be49c0b5816513e2c40b91d293e36dc76bb3216bd26bd67d7e16a"}, "downloads": -1, "filename": "pytorchcrf-1.2.0.tar.gz", "has_sig": false, "md5_digest": "baaaa3b87a8014937538afe7dfa0fb0a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6379, "upload_time": "2020-03-26T20:02:52", "upload_time_iso_8601": "2020-03-26T20:02:52.273278Z", "url": "https://files.pythonhosted.org/packages/02/27/ac052d7dd1e1c249ee4603903cf33b0b72417cd4c728c5e02b644dbf41b3/pytorchcrf-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3046f7ec02b6496c6d11f5ab9d6434c8", "sha256": "1fad8a8dba816a9a76a74c6cfc535aab226666893797e2842f2d978562064124"}, "downloads": -1, "filename": "pytorchcrf-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3046f7ec02b6496c6d11f5ab9d6434c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7127, "upload_time": "2020-03-26T20:02:50", "upload_time_iso_8601": "2020-03-26T20:02:50.624067Z", "url": "https://files.pythonhosted.org/packages/b3/3a/85ae7d34b43d833c7d1a17200a15afa4d506b5995b93604f425250ae9d06/pytorchcrf-1.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "baaaa3b87a8014937538afe7dfa0fb0a", "sha256": "5ee4e0c0aa0be49c0b5816513e2c40b91d293e36dc76bb3216bd26bd67d7e16a"}, "downloads": -1, "filename": "pytorchcrf-1.2.0.tar.gz", "has_sig": false, "md5_digest": "baaaa3b87a8014937538afe7dfa0fb0a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6379, "upload_time": "2020-03-26T20:02:52", "upload_time_iso_8601": "2020-03-26T20:02:52.273278Z", "url": "https://files.pythonhosted.org/packages/02/27/ac052d7dd1e1c249ee4603903cf33b0b72417cd4c728c5e02b644dbf41b3/pytorchcrf-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:00 2020"}