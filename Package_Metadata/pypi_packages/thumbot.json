{"info": {"author": "Marco Rougeth", "author_email": "marco@rougeth.com", "bugtrack_url": null, "classifiers": [], "description": "# Thumbot\n![thumb](http://i.giphy.com/I83tvEbSgRy8M.gif)\n\n**Thumbot** is a :thumbsup: :thumbsdown: counter keyboard for Telegram bots and channels.\n\n![photo31331718161082944](https://cloud.githubusercontent.com/assets/431892/21070814/1a44c100-be75-11e6-9995-06a82bce7e41.jpg)\n\n\n## Requirements\n- Python;\n- Your bot/channel must be created with [pyTelegramBotAPI](https://github.com/eternnoir/pyTelegramBotAPI);\n- MongoDB;\n\n\n## Running\n\n- Your're going to need to run an instance of [MongoDB](https://mongodb.com). For tests porpuse (or even production, but with some concerns) you can use [Docker](https://docker.com/)  and get a container running in some minutes:\n\n  `$ docker run -d -p 27017:27017 mongo`\n\n- To install Thumbot is pretty easy:\n\n  `$ pip install thumbot`\n\n- Now, you're ready to include the Thumbot keyboard in your bot or channel!\n\n\n## Usage\n```py\nfrom thumbot import Thumbot\n\n# Create a new instance of Thumbot passing chat and message ids:\nthumbot = Thumbot(chat_id, message_id)\n\n# Now you can vote up and down with the methods .up() and .down(),\n# always passing the id of the user that is voting:\nthumbot.up(user_id)\nthumbot.down(user_id)\n```\n\nCheck out the [example.py](https://github.com/rougeth/thumbot/blob/master/example.py) to see a full working bot using Thumbot.\n\n\n### Bots and Channels using Thumbot:\n- [@on_sale](https://telegram.me/on_sale)\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rougeth/thumbot", "keywords": "telegram bots channels", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "thumbot", "package_url": "https://pypi.org/project/thumbot/", "platform": "", "project_url": "https://pypi.org/project/thumbot/", "project_urls": {"Homepage": "https://github.com/rougeth/thumbot"}, "release_url": "https://pypi.org/project/thumbot/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A :thumbsup: and :thumbsdown: counter keyboard for Telegram bots and channels", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Thumbot<br>![thumb](http://i.giphy.com/I83tvEbSgRy8M.gif)<br><br>**Thumbot** is a :thumbsup: :thumbsdown: counter keyboard for Telegram bots and channels.<br><br>![photo31331718161082944](https://cloud.githubusercontent.com/assets/431892/21070814/1a44c100-be75-11e6-9995-06a82bce7e41.jpg)<br><br><br>## Requirements<br>- Python;<br>- Your bot/channel must be created with [pyTelegramBotAPI](https://github.com/eternnoir/pyTelegramBotAPI);<br>- MongoDB;<br><br><br>## Running<br><br>- Your're going to need to run an instance of [MongoDB](https://mongodb.com). For tests porpuse (or even production, but with some concerns) you can use [Docker](https://docker.com/)  and get a container running in some minutes:<br><br>  `$ docker run -d -p 27017:27017 mongo`<br><br>- To install Thumbot is pretty easy:<br><br>  `$ pip install thumbot`<br><br>- Now, you're ready to include the Thumbot keyboard in your bot or channel!<br><br><br>## Usage<br>```py<br>from thumbot import Thumbot<br><br># Create a new instance of Thumbot passing chat and message ids:<br>thumbot = Thumbot(chat_id, message_id)<br><br># Now you can vote up and down with the methods .up() and .down(),<br># always passing the id of the user that is voting:<br>thumbot.up(user_id)<br>thumbot.down(user_id)<br>```<br><br>Check out the [example.py](https://github.com/rougeth/thumbot/blob/master/example.py) to see a full working bot using Thumbot.<br><br><br>### Bots and Channels using Thumbot:<br>- [@on_sale](https://telegram.me/on_sale)<br>\n          </div>"}, "last_serial": 2510253, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6e6479ee2dae6edc37a7f1ef5e897c95", "sha256": "8c521ffc9be4c46a6237a69246f2ce41472a4bb52451991f61767abbf5925626"}, "downloads": -1, "filename": "thumbot-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6e6479ee2dae6edc37a7f1ef5e897c95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2401, "upload_time": "2016-12-10T03:53:17", "upload_time_iso_8601": "2016-12-10T03:53:17.994296Z", "url": "https://files.pythonhosted.org/packages/8f/24/f3451f0d8d56750a87bf4bb4569ce4bd904cf35136bb0dc52a7e7da8a07f/thumbot-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6e6479ee2dae6edc37a7f1ef5e897c95", "sha256": "8c521ffc9be4c46a6237a69246f2ce41472a4bb52451991f61767abbf5925626"}, "downloads": -1, "filename": "thumbot-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6e6479ee2dae6edc37a7f1ef5e897c95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2401, "upload_time": "2016-12-10T03:53:17", "upload_time_iso_8601": "2016-12-10T03:53:17.994296Z", "url": "https://files.pythonhosted.org/packages/8f/24/f3451f0d8d56750a87bf4bb4569ce4bd904cf35136bb0dc52a7e7da8a07f/thumbot-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:37 2020"}