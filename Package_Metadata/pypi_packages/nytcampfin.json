{"info": {"author": "Derek Willis", "author_email": "dwillis@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "NYT Campfin\n==================\n\nA very basic Python client for the New York Times [Campaign Finance API](http://developer.nytimes.com/docs/campaign_finance_api). You'll need an API key, which should be set as an environment variable to run the tests. The client returns JSON only, not full Python objects, and attempts to implement each response in The Times' API.\n\nInstall\n-------\n\n    $ pip install nytcampfin\n\nOr download and run\n\n    $ python setup.py install\n\nRequirements\n------------\n\nNYT Campfin uses the [Kenneth Reitz's Requests library](https://github.com/kennethreitz/requests) for retrieving API endpoints and [Roman Haritonov's requests-cache library](https://github.com/reclosedev/requests-cache) for local caching. The cache is preconfigured to use a local sqlite database and set to expire after 5 minutes.\n    \nTests\n-----\n\nTo run the tests, set your API key as an environment variable NYT_CAMPFIN_API_KEY:\n\n    $ export NYT_CAMPFIN_API_KEY=YOUR-API-KEY\n\nand then run the tests:\n    \n    $ python test.py\n    \nThe use of caching is disabled in the tests.\n\nUsage\n-----\n\n    >>> from nytcampfin import NytCampfin\n    >>> finance = NytCampfin(YOUR_NYT_CAMPAIGN_FINANCE_API_KEY)\n    \n    # retrieve today's filings\n    >>> today = finance.filings.today()\n    >>> today[0]['filing_id']\n    793150\n    \n    # retrieve a committee's details\n    >>> cmte = finance.committees.get('C00490219',2012)\n    >>> cmte['id']\n    u'C00490219'\n    \n    # retrieve a candidate's details\n    >>> cand = finance.candidates.get('H4NY11138')\n    >>> cand['name']\n    u'CLARKE, YVETTE D'\n    \nSee the tests for plenty more examples.\n\nNote on Patches/Pull Requests\n-----------------------------\n\n  * Fork the project.\n  * Make your feature addition or bug fix.\n  * Add tests for it.\n  * Send a pull request. Bonus points for topic branches.\n\nAuthors\n-------\n\n  Derek Willis, dwillis@nytimes.com\n\nCopyright\n---------\n\nCopyright (c) 2012 The New York Times Company. See LICENSE for details.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "nytcampfin", "package_url": "https://pypi.org/project/nytcampfin/", "platform": "any", "project_url": "https://pypi.org/project/nytcampfin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/nytcampfin/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "A Python client for the New York Times Campaign Finance API", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A very basic Python client for the New York Times [Campaign Finance API](<a href=\"http://developer.nytimes.com/docs/campaign_finance_api\" rel=\"nofollow\">http://developer.nytimes.com/docs/campaign_finance_api</a>). You\u2019ll need an API key, which should be set as an environment variable to run the tests. The client returns JSON only, not full Python objects, and attempts to implement each response in The Times\u2019 API.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<blockquote>\n$ pip install nytcampfin</blockquote>\n<p>Or download and run</p>\n<blockquote>\n$ python setup.py install</blockquote>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>NYT Campfin uses the [Kenneth Reitz\u2019s Requests library](<a href=\"https://github.com/kennethreitz/requests\" rel=\"nofollow\">https://github.com/kennethreitz/requests</a>) for retrieving API endpoints and [Roman Haritonov\u2019s requests-cache library](<a href=\"https://github.com/reclosedev/requests-cache\" rel=\"nofollow\">https://github.com/reclosedev/requests-cache</a>) for local caching. The cache is preconfigured to use a local sqlite database and set to expire after 5 minutes.</p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>To run the tests, set your API key as an environment variable NYT_CAMPFIN_API_KEY:</p>\n<blockquote>\n$ export NYT_CAMPFIN_API_KEY=YOUR-API-KEY</blockquote>\n<p>and then run the tests:</p>\n<blockquote>\n$ python test.py</blockquote>\n<p>The use of caching is disabled in the tests.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; from nytcampfin import NytCampfin\n&gt;&gt;&gt; finance = NytCampfin(YOUR_NYT_CAMPAIGN_FINANCE_API_KEY)\n</pre>\n<p># retrieve today\u2019s filings\n&gt;&gt;&gt; today = finance.filings.today()\n&gt;&gt;&gt; today[0][\u2018filing_id\u2019]\n793150</p>\n<p># retrieve a committee\u2019s details\n&gt;&gt;&gt; cmte = finance.committees.get(\u2018C00490219\u2019,2012)\n&gt;&gt;&gt; cmte[\u2018id\u2019]\nu\u2019C00490219\u2019</p>\n<p># retrieve a candidate\u2019s details\n&gt;&gt;&gt; cand = finance.candidates.get(\u2018H4NY11138\u2019)\n&gt;&gt;&gt; cand[\u2018name\u2019]\nu\u2019CLARKE, YVETTE D\u2019</p>\n</blockquote>\n<p>See the tests for plenty more examples.</p>\n</div>\n<div id=\"note-on-patches-pull-requests\">\n<h2>Note on Patches/Pull Requests</h2>\n<blockquote>\n<ul>\n<li>Fork the project.</li>\n<li>Make your feature addition or bug fix.</li>\n<li>Add tests for it.</li>\n<li>Send a pull request. Bonus points for topic branches.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<blockquote>\nDerek Willis, <a href=\"mailto:dwillis%40nytimes.com\">dwillis<span>@</span>nytimes<span>.</span>com</a></blockquote>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Copyright (c) 2012 The New York Times Company. See LICENSE for details.</p>\n</div>\n\n          </div>"}, "last_serial": 754185, "releases": {"0.1.0": [], "0.2.0": [], "0.3.0": [{"comment_text": "", "digests": {"md5": "4c11b2639b3fb95c051e78e22efc2d50", "sha256": "193183a690e5246c481619bec414142f4a558a86a337f4205315e47c776b457d"}, "downloads": -1, "filename": "nytcampfin-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4c11b2639b3fb95c051e78e22efc2d50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6583, "upload_time": "2012-07-24T22:36:53", "upload_time_iso_8601": "2012-07-24T22:36:53.923410Z", "url": "https://files.pythonhosted.org/packages/34/42/948db4d6cd13ae5623686b12b35ca0c0cd7229ab1b1e01050be34d1962cf/nytcampfin-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "ef62395b8a7638bef9068870ae584faf", "sha256": "ac6db64f6279359e384585b8cb8cc802ad745dcb5f0295754f0d1bee3226efe4"}, "downloads": -1, "filename": "nytcampfin-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ef62395b8a7638bef9068870ae584faf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6512, "upload_time": "2012-07-25T00:21:24", "upload_time_iso_8601": "2012-07-25T00:21:24.202302Z", "url": "https://files.pythonhosted.org/packages/ea/0b/77faa0b4bb0717967bf91d4b683dfea279499d3249ae4307cc6ccc203105/nytcampfin-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ef62395b8a7638bef9068870ae584faf", "sha256": "ac6db64f6279359e384585b8cb8cc802ad745dcb5f0295754f0d1bee3226efe4"}, "downloads": -1, "filename": "nytcampfin-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ef62395b8a7638bef9068870ae584faf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6512, "upload_time": "2012-07-25T00:21:24", "upload_time_iso_8601": "2012-07-25T00:21:24.202302Z", "url": "https://files.pythonhosted.org/packages/ea/0b/77faa0b4bb0717967bf91d4b683dfea279499d3249ae4307cc6ccc203105/nytcampfin-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:00 2020"}