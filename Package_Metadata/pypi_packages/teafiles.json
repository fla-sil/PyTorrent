{"info": {"author": "discretelogics", "author_email": "pythonapi@discretelogics.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Scientific/Engineering", "Topic :: Software Development"], "description": "Time Series Peristence\n======================\nThis Python package provides Time Series storage in flat files according to the **TeaFile** file format.\n\n\nIn Use\n======\n\n>>> tf = TeaFile.create(\"acme.tea\", \"Time Price Volume\", \"qdq\", \"ACME at NYSE\", {\"decimals\": 2, \"url\": \"www.acme.com\" })\n>>> tf.write(DateTime(2011, 3, 4,  9, 0), 45.11, 4500)\n>>> tf.write(DateTime(2011, 3, 4, 10, 0), 46.33, 1100)\n>>> tf.close()\n\n>>> tf = TeaFile.openread(\"acme.tea\")\n>>> tf.read()\nTPV(Time=2011-03-04 09:00:00:000, Price=45.11, Volume=4500)\n>>> tf.read()\nTPV(Time=2011-03-04 10:00:00:000, Price=46.33, Volume=1100)\n>>> tf.read()\n>>> tf.close()\n\n\nExchange Time Series between Apps / OS\n======================================\nYou can create, read and write TeaFiles with\n\n- R,\n- C++,\n- C# or\n- other applications\n\non\n\n- Linux, Unix,\n- Mac OS\n- Windows\n\n\nPython API Examples\n===================\n- programs        http://discretelogics.com/PythonAPI/examples.html\n- interactive     http://discretelogics.com/PythonAPI/interactive.html\n- examples.py (available in the package source)\n\n\nTeaFiles\n========\nTeaFiles are a very **simple**, yet highly **efficient**, way to store time series data \nproviding data exchange between programs written in C++, C# or applications like R, Octave, \nMatlab, running on Linux, Unix, Mac OS X or Windows.\n\n- **Binary** data composed from elementary data types **signed and unsigned integers, double and float** in IEEE 754 format is prefixed by a **header** holding a description of the item structure and the content.\n- Data can be directly accessed via **memory mapping**. \n- TeaFiles are **self describing**: Containing a description of the item structure they relieve opaqueness of straight binary files. Knowing that a file is a TeaFile is enough to access its data.\n\nlink to spec http://tbd\n\n\nScope of the Python API\n=======================\nThe Python API makes TeaFiles accessible everywhere. It just needs a python installation on any OS to inspect the description and data \nof a TeaFile:\n\n\n>>> # Show the decimals and displayname for all files in a folder:\n...\n>>> def showdecimals():\n    ...     for filename in os.listdir('.'):\n    ...         with TeaFile.openread(filename) as tf:\n    ...             nvs = tf.description.namevalues\n    ...             print('{} {} {}'.format(filename, nvs.get('Decimals'), nvs.get('DisplayName')))\n    ... \n    >>> showdecimals()\n    AA.day.tea 2 Alcoa, Inc.\n    AA.tick.tea 2 Alcoa, Inc.\n    AXP.day.tea 2 American Express Co.\n    ...\n\nData download from web services is also a good fit. See the examples.py file in the package source for a Yahoo finance download function in about 30 lines.\n\n\nLimitations\n===========\nWhen it comes to high performance processing of very large time series files, this API is currently not as fast as the C++ and C# APIs (Numbers coming soon on http://tbd). There are numerous ways to improve this if necessary, but no current plans at discretelogics to do so. Using the other languages/APIs is recommended. If you wish the Python API to be faster or want to work on that contact us.\n\n\nInstallation\n============\n\n**$ pip install teafiles**\n\npackage source with examples.py at http://bitbucket.org/discretelogics/teafiles.py\n\nTests\n=====\nRun the unit tests from the package root by\n\n$ python -m pytest .\\test\n\n\nPython 2.7 / 3.2\n================\nPackage tested under CPython 2.7.\nPython 3.2 planned\n\n\nAuthor\n======\nThis API brought to you by discretelogics, company specialicing in time series analysis and event processing.\nhttp://tbd\n\n\nVersion 0.7\n===========\nThe current version is reasonably tested by doctests and some pytests. Better test coverage with unit tests (currently pytest is used) \nis desirable.\n\ntbd towards version 1.0\n    - enhance pytest coverage\n    - consider api feedack\n    - cleaner test runs, cleanup test files\n\noptional\n    - enhance performance after measuring it in python 3 (maybe struct module plays a minor role there)\n\n\nLicense\n=======\nThis package is released under the GNU GENERAL PUBLIC LICENSE, see License.txt.\n\n\nFeedback\n========\nWelcome at: pythonapi@discretelogics.com", "description_content_type": null, "docs_url": null, "download_url": "http://pypi.python.org/packages/source/t/teafiles", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://discretelogics.com", "keywords": "timeseries time series analysis event processing teatime simulation finance", "license": "Creative Commons Attribution-Noncommercial-Share Alike license", "maintainer": null, "maintainer_email": null, "name": "teafiles", "package_url": "https://pypi.org/project/teafiles/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/teafiles/", "project_urls": {"Download": "http://pypi.python.org/packages/source/t/teafiles", "Homepage": "http://discretelogics.com"}, "release_url": "https://pypi.org/project/teafiles/0.7.4/", "requires_dist": null, "requires_python": null, "summary": "Time Series storage in flat files.", "version": "0.7.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"time-series-peristence\">\n<h2>Time Series Peristence</h2>\n<p>This Python package provides Time Series storage in flat files according to the <strong>TeaFile</strong> file format.</p>\n</div>\n<div id=\"in-use\">\n<h2>In Use</h2>\n<pre>&gt;&gt;&gt; tf = TeaFile.create(\"acme.tea\", \"Time Price Volume\", \"qdq\", \"ACME at NYSE\", {\"decimals\": 2, \"url\": \"www.acme.com\" })\n&gt;&gt;&gt; tf.write(DateTime(2011, 3, 4,  9, 0), 45.11, 4500)\n&gt;&gt;&gt; tf.write(DateTime(2011, 3, 4, 10, 0), 46.33, 1100)\n&gt;&gt;&gt; tf.close()\n</pre>\n<pre>&gt;&gt;&gt; tf = TeaFile.openread(\"acme.tea\")\n&gt;&gt;&gt; tf.read()\nTPV(Time=2011-03-04 09:00:00:000, Price=45.11, Volume=4500)\n&gt;&gt;&gt; tf.read()\nTPV(Time=2011-03-04 10:00:00:000, Price=46.33, Volume=1100)\n&gt;&gt;&gt; tf.read()\n&gt;&gt;&gt; tf.close()\n</pre>\n</div>\n<div id=\"exchange-time-series-between-apps-os\">\n<h2>Exchange Time Series between Apps / OS</h2>\n<p>You can create, read and write TeaFiles with</p>\n<ul>\n<li>R,</li>\n<li>C++,</li>\n<li>C# or</li>\n<li>other applications</li>\n</ul>\n<p>on</p>\n<ul>\n<li>Linux, Unix,</li>\n<li>Mac OS</li>\n<li>Windows</li>\n</ul>\n</div>\n<div id=\"python-api-examples\">\n<h2>Python API Examples</h2>\n<ul>\n<li>programs        <a href=\"http://discretelogics.com/PythonAPI/examples.html\" rel=\"nofollow\">http://discretelogics.com/PythonAPI/examples.html</a></li>\n<li>interactive     <a href=\"http://discretelogics.com/PythonAPI/interactive.html\" rel=\"nofollow\">http://discretelogics.com/PythonAPI/interactive.html</a></li>\n<li>examples.py (available in the package source)</li>\n</ul>\n</div>\n<div id=\"teafiles\">\n<h2>TeaFiles</h2>\n<p>TeaFiles are a very <strong>simple</strong>, yet highly <strong>efficient</strong>, way to store time series data\nproviding data exchange between programs written in C++, C# or applications like R, Octave,\nMatlab, running on Linux, Unix, Mac OS X or Windows.</p>\n<ul>\n<li><strong>Binary</strong> data composed from elementary data types <strong>signed and unsigned integers, double and float</strong> in IEEE 754 format is prefixed by a <strong>header</strong> holding a description of the item structure and the content.</li>\n<li>Data can be directly accessed via <strong>memory mapping</strong>.</li>\n<li>TeaFiles are <strong>self describing</strong>: Containing a description of the item structure they relieve opaqueness of straight binary files. Knowing that a file is a TeaFile is enough to access its data.</li>\n</ul>\n<p>link to spec <a href=\"http://tbd\" rel=\"nofollow\">http://tbd</a></p>\n</div>\n<div id=\"scope-of-the-python-api\">\n<h2>Scope of the Python API</h2>\n<p>The Python API makes TeaFiles accessible everywhere. It just needs a python installation on any OS to inspect the description and data\nof a TeaFile:</p>\n<pre>&gt;&gt;&gt; # Show the decimals and displayname for all files in a folder:\n...\n&gt;&gt;&gt; def showdecimals():\n    ...     for filename in os.listdir('.'):\n    ...         with TeaFile.openread(filename) as tf:\n    ...             nvs = tf.description.namevalues\n    ...             print('{} {} {}'.format(filename, nvs.get('Decimals'), nvs.get('DisplayName')))\n    ...\n    &gt;&gt;&gt; showdecimals()\n    AA.day.tea 2 Alcoa, Inc.\n    AA.tick.tea 2 Alcoa, Inc.\n    AXP.day.tea 2 American Express Co.\n    ...\n</pre>\n<p>Data download from web services is also a good fit. See the examples.py file in the package source for a Yahoo finance download function in about 30 lines.</p>\n</div>\n<div id=\"limitations\">\n<h2>Limitations</h2>\n<p>When it comes to high performance processing of very large time series files, this API is currently not as fast as the C++ and C# APIs (Numbers coming soon on <a href=\"http://tbd\" rel=\"nofollow\">http://tbd</a>). There are numerous ways to improve this if necessary, but no current plans at discretelogics to do so. Using the other languages/APIs is recommended. If you wish the Python API to be faster or want to work on that contact us.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><strong>$ pip install teafiles</strong></p>\n<p>package source with examples.py at <a href=\"http://bitbucket.org/discretelogics/teafiles.py\" rel=\"nofollow\">http://bitbucket.org/discretelogics/teafiles.py</a></p>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>Run the unit tests from the package root by</p>\n<p>$ python -m pytest .test</p>\n</div>\n<div id=\"python-2-7-3-2\">\n<h2>Python 2.7 / 3.2</h2>\n<p>Package tested under CPython 2.7.\nPython 3.2 planned</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>This API brought to you by discretelogics, company specialicing in time series analysis and event processing.\n<a href=\"http://tbd\" rel=\"nofollow\">http://tbd</a></p>\n</div>\n<div id=\"version-0-7\">\n<h2>Version 0.7</h2>\n<p>The current version is reasonably tested by doctests and some pytests. Better test coverage with unit tests (currently pytest is used)\nis desirable.</p>\n<dl>\n<dt>tbd towards version 1.0</dt>\n<dd><ul>\n<li>enhance pytest coverage</li>\n<li>consider api feedack</li>\n<li>cleaner test runs, cleanup test files</li>\n</ul>\n</dd>\n<dt>optional</dt>\n<dd><ul>\n<li>enhance performance after measuring it in python 3 (maybe struct module plays a minor role there)</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This package is released under the GNU GENERAL PUBLIC LICENSE, see License.txt.</p>\n</div>\n<div id=\"feedback\">\n<h2>Feedback</h2>\n<p>Welcome at: <a href=\"mailto:pythonapi%40discretelogics.com\">pythonapi<span>@</span>discretelogics<span>.</span>com</a></p>\n</div>\n\n          </div>"}, "last_serial": 800399, "releases": {"0.7.2.1 dev": [{"comment_text": "", "digests": {"md5": "4eefd9c3da82d5ae5bebe06cda96f096", "sha256": "80ddeffc87ce39f032dd3fd051821feaa91e33c30772aa0bd83409b79ccd5d52"}, "downloads": -1, "filename": "teafiles-0.7.2.1 dev.zip", "has_sig": false, "md5_digest": "4eefd9c3da82d5ae5bebe06cda96f096", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45000, "upload_time": "2012-01-31T14:51:18", "upload_time_iso_8601": "2012-01-31T14:51:18.567596Z", "url": "https://files.pythonhosted.org/packages/e7/d9/2fa65fea38987dee7b0ce391e88fd57f981d5612c5bb527152c0549cf8b8/teafiles-0.7.2.1%20dev.zip", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "80c84f5ce784d21212e9da0162edfedf", "sha256": "044e0326bd32cad7f2a165c7b697d1098f263c39781c0fa3c24a2924e3f6ef73"}, "downloads": -1, "filename": "teafiles-0.7.3.zip", "has_sig": false, "md5_digest": "80c84f5ce784d21212e9da0162edfedf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45033, "upload_time": "2012-02-01T18:08:25", "upload_time_iso_8601": "2012-02-01T18:08:25.420531Z", "url": "https://files.pythonhosted.org/packages/b6/8d/15234863211ee5471d4854b1b09f4307cf41a401f5dd63c85adafef0feba/teafiles-0.7.3.zip", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "c6a4cca7fff1e5a5d01c2c59b3339b04", "sha256": "99d103b1ff58120bd7df5a9280f3cec69902603ed581d3d04e3f0e34ee640215"}, "downloads": -1, "filename": "teafiles-0.7.4.zip", "has_sig": false, "md5_digest": "c6a4cca7fff1e5a5d01c2c59b3339b04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44925, "upload_time": "2012-02-01T18:16:07", "upload_time_iso_8601": "2012-02-01T18:16:07.676236Z", "url": "https://files.pythonhosted.org/packages/c1/3e/0ff9a84afce6a9b30e625e30914899026a17408e746d4052ba49dba96eba/teafiles-0.7.4.zip", "yanked": false}], "0.71 dev": [{"comment_text": "", "digests": {"md5": "6ae4134a2717a4dd0b7957de66723fcd", "sha256": "1e7f8cc61f4386be38393b3852b6bffd11dc2a958919f7218a1e3c4e493768b1"}, "downloads": -1, "filename": "teafiles-0.71 dev.zip", "has_sig": false, "md5_digest": "6ae4134a2717a4dd0b7957de66723fcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44931, "upload_time": "2012-01-31T14:47:55", "upload_time_iso_8601": "2012-01-31T14:47:55.575925Z", "url": "https://files.pythonhosted.org/packages/24/cd/65e64495805eddf016de7787cf9d9d450027582c40cf614ebc41aba6bb00/teafiles-0.71%20dev.zip", "yanked": false}], "0.7dev": [{"comment_text": "", "digests": {"md5": "31cb2bf5ddba602c885bbc687978346a", "sha256": "79fbc7aa1a3528d868a46af4daaf167b14c2e8d32c30f2a5e06b7dc6f48d4397"}, "downloads": -1, "filename": "teafiles-0.7dev.zip", "has_sig": false, "md5_digest": "31cb2bf5ddba602c885bbc687978346a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44831, "upload_time": "2012-01-31T14:28:17", "upload_time_iso_8601": "2012-01-31T14:28:17.859746Z", "url": "https://files.pythonhosted.org/packages/85/d4/0232b7d90114d91ebc49084a6e833e83dfbe54851a5fe78a8becc6cc4341/teafiles-0.7dev.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6a4cca7fff1e5a5d01c2c59b3339b04", "sha256": "99d103b1ff58120bd7df5a9280f3cec69902603ed581d3d04e3f0e34ee640215"}, "downloads": -1, "filename": "teafiles-0.7.4.zip", "has_sig": false, "md5_digest": "c6a4cca7fff1e5a5d01c2c59b3339b04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 44925, "upload_time": "2012-02-01T18:16:07", "upload_time_iso_8601": "2012-02-01T18:16:07.676236Z", "url": "https://files.pythonhosted.org/packages/c1/3e/0ff9a84afce6a9b30e625e30914899026a17408e746d4052ba49dba96eba/teafiles-0.7.4.zip", "yanked": false}], "timestamp": "Fri May  8 02:57:07 2020"}