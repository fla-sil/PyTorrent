{"info": {"author": "BBGLab (Barcelona Biomedical Genomics Lab)", "author_email": "bbglab@irbbarcelona.org", "bugtrack_url": null, "classifiers": [], "description": ".. _readme:\n\nOncodriveCLUSTL\n================\n\nOncodriveCLUSTL is a sequence-based clustering method to identify significant clustering\nsignals in nucleotide sequence.\n\nOne of the main goals of cancer research is the identification of the genomic elements that drive tumorigenesis. OncodriveCLUSTL is a new nucleotide sequence-based clustering algorithm to detect significant clustering signals across genomic regions. OncodriveCLUSTL is based on a local background model derived from the nucleotide context mutational probabilities of the cohort under study. Our method is able to identify well-known cancer drivers in coding regions and it can be applied to non-coding regions and non-human data.\n\n.. _readme license:\n\nLicense\n-------\n\nOncodriveCLUSTL is available to the general public subject to certain conditions described in its `LICENSE <LICENSE>`_.\n\n\n.. _readme install:\n\nInstallation\n------------\n\nOncodriveCLUSTL depends on Python 3.5 and some external libraries. We recommend to install it using the `Anaconda Python distribution <https://www.anaconda.com/download/>`_::\n\n        $ conda install -c bbglab oncodriveclustl\n\n\nOncodriveCLUSTL can also be installed using pip::\n\n        $ pip install oncodriveclustl\n\nYou can obtain the latest code from the repository and install it with pip::\n\n        $ git clone git@bitbucket.org:bbglab/oncodriveclustl.git\n        $ cd oncodriveclustl\n        $ pip install .\n\n.. note::\n\n    The first time that you run OncodriveCLUSTL with a given reference genome, it will download it from our servers. By default the\n    downloaded datasets go to ``~/.bgdata``. If you want to move these datasets to another folder you have to define the\n    system environment variable BGDATA_LOCAL with an export command.\n\nThe following command will show you the help::\n\n        $ oncodriveclustl --help\n\n\nYou can also download a singularity image\nfrom the `downloads page <https://bitbucket.org/bbglab/oncodriveclustl/downloads/>`_.\nRunning the image invokes the oncodriveclustl command.\n\n.. _readme inputdata:\n\nInput data\n---------------\nOncodriveCLUSTL only requires two main inputs, the mutations file and the annotations file:\n\n- Mutations file. TSV file containing SNVs (substitutions) mapped to a reference genome (e.g., human hg19 or mouse c3h). If other mutation types are present (insertions, deletions, double base substitutions, etc), they will be filtered out during the analysis. This file must contain, at least, the following 5 columns with header:\n\n    1. CHROMOSOME: 1, 2,..., X, Y\n    2. POSITION: Integer indicating the position of the mutation\n    3. REF: Reference nucleotide\n    4. ALT: Alternate nucleotide\n    5. SAMPLE: Identifier of the sample\n\n    Additional columns are:\n\n    6. CANCER_TYPE: Type of tumor. When specified, OncodriveCLUSTL will calculate one mutational profile for each cancer type and mutations will be randomized accordingly.\n    7. SIGNATURE: User-defined group to compute k-mer nucleotide mutational probabilities. When specified, OncodriveCLUSTL will calculate one mutational profile for each group and will randomize each mutation accordingly.\n\n.. note::\n    OncodriveCLUSTL assumes all SNVs are mapped to the positive strand.\n\n.. warning::\n    When using the '--signature-group' option, please check that the number of mutations per group is sufficient for an accurate signatures calculation.\n\n\n- Annotations file. TSV file containing the coordinates of genomic elements (GEs). This file must contain, at least, the following 5 columns with header:\n\n    1. CHROMOSOME: 1, 2,..., X, Y\n    2. START: Starting position of the genomic region\n    3. END: Final position of the genomic region\n    4. ELEMENT: Identifier of the GE\n    5. SYMBOL: Symbol of the GE. OncodriveCLUSTL will analyze GEs as SYMBOL + ELEMENT.\n\n    Additional columns are:\n\n    6. STRAND: Strand of the GE coordinates (\"+\" or \"-\").\n\n.. warning::\n    Coordinates of a given GE cannot overlap.\n\nYou can check the input formats in the files provided in the example.\n\nIf you have a VCF file or directory of VCF files containing somatic mutations, you can run our VCF parser to obtain a tabular file compatible with OncodriveCLUSTL input format::\n\n       $ parse_vcf -i [INPUT_DIRECTORY] -o [OUTPUT_FILE]\n\nPlease, check 'parsers/vcf.py' module for more details.\n\nIf you would like to run OncodriveCLUSTL using a per-calculated signature or mutational profile, you need to provide a dictionary containing the reference k-mer to alternate mutational probabilities in JSON format::\n\n        {\n            \"my_dataset\": {\n                \"GCA>G\": 0.02424271083094251,\n                \"AGC>A\": 0.023005887103025254,\n                \"ACG>T\": 0.037613802858829135,\n                \"CGA>C\": 0.10691031051670515,\n                \"GAC>G\": 0.017846071811001615,\n                \"TTC>A\": 0.024003748061871697,\n                \"CTT>G\": 0.024149863672267024,\n                \"GGA>T\": 0.011178562948734577,\n                \"AGG>C\": 0.010654720767868876,\n                \"GGG>C\": 0.012031686292218055,\n                \"CAA>T\": 0.014478959792844522,\n                \"TGA>A\": 0.01255651801972085,\n                \"GGA>A\": 0.011178562948734577,\n                \"CGA>A\": 0.03563677017223505,\n                \"TCC>T\": 0.011158347971568658,\n                \"GCC>A\": 0.010952316565906438,\n                ...\n            }\n        }\n\nOncodriveCLUSTL requires non-collapsed k-mer probabilities (192 for tri-nucleotides, 3072 for penta-nucleotides).\n\n.. _readme outputdata:\n\nOutput data\n---------------\nOncodriveCLUSTL generates three output files:\n\n- Elements results file ('elements_results.txt'). TSV file containing results of the analyzed elements:\n\n    1. SYMBOL: GE symbol\n    #. ENSID: GE ID\n    #. CGC: True if GE in the COSMIC Cancer Gene Census (CGC) list (Sondka et al., 2018)\n    #. CHROMOSOME: 1, 2,..., X, Y\n    #. STRAND: Strand of the GE (\"+\" or \"-\")\n    #. LENGTH: length (bp) of the GE\n    #. TOTAL_MUT: total substitutions observed in the GE\n    #. CLUSTERED_MUT: number of substitutions in a cluster\n    #. CLUSTERS: number of clusters\n    #. SIM_CLUSTERS: number of simulated clusters\n    #. SCORE: GE score\n    #. P_EMPIRICAL: empirical p-value of the GE\n    #. Q_EMPIRICAL: empirical q-value of the GE\n    #. P_ANALYTICAL: analytical p-value of the GE\n    #. Q_ANALYTICAL: analytical q-value of the GE\n    #. P_TOPCLUSTER: analytical p-value of the cluster with highest cluster score\n    #. Q_TOPCLUSTER: analytical q-value of the cluster with highest cluster score\n\n\n- Clusters results file ('clusters_results.tsv'). TSV file containing results of the clusters observed in the analyzed elements:\n\n    1. RANK: Position of the GE in the list of\n    #. SYMBOL: GE symbol\n    #. ENSID: GE ID\n    #. CGC: True if GE in the CGC list\n    #. CHROMOSOME: 1, 2,..., X, Y\n    #. STRAND: Strand of the GE (\"+\" or \"-\")\n    #. COORDINATES: genomic coordinates of the cluster. It can be 'coord1,coord2' for clusters inside a single region or 'coord1,coord2;coord3,coord4' for those spanning regions (--concatenate flag)\n    #. MAX_COORD: genomic position with the highest smoothing score inside the cluster\n    #. WIDTH: cluster's width (pb)\n    #. N_MUT: number of substitutions in the cluster\n    #. N_SAMPLES: number of samples with a mutation in the cluster\n    #. FRA_UNIQ_SAMPLES: proportion of unique samples mutated in the cluster out of the total of mutations in the cluster\n    #. SCORE: cluster score\n    #. P: analytical p-value of the cluster\n\n- Log file ('results.log'). TXT file containing OncodriveCLUSTL's run information\n\n.. _readme usage:\n\nUsage\n---------------\nOncodriveCLUSTL is meant to be used through the command line.\n\n- '-i', '--input-file': File containing mutations (required)\n- '-r', '--regions-file': GZIP compressed file with the genomic regions to analyze (required)\n- '-o', '--output-directory': Output directory to be created (required)\n- '-sig', '--input-signature': File containing input context based mutational probabilities\n- '-ef', '--elements-file': File with the symbol of a set GEs to analyze, one per row\n- '-e', '--elements': Symbol of the GE(s) to analyze\n- '-g', '--genome': Genome to use. Default is hg19\n- '-emut', '--element-mutations': Cutoff of element mutations. Default is 2\n- '-cmut', '--cluster-mutations': Cutoff of cluster mutations. Default is 2\n- '-sw', '--smooth-window': Smoothing window. Default is 11\n- '-cw', '--cluster-window': Cluster window. Default is 11\n- '-kmer', '--kmer': K-mer nucleotide context (3 or 5) to calculate mutational probabilities. Default is 3\n- '-n', '--n-simulations': Number of simulations. Default is 1000\n- '-sim', '--simulation-mode': Simulation mode. Default is 'mutation_centered'\n- '-simw', '--simulation-window': Simulation window. Default is 31\n- '-sigcalc', '--signature-calculation': calculation of mutational probabilities as mutation frequencies ('frequencies') or k-mer mutation counts normalized by k-mer region counts ('region_normalized'). Default is frequencies\n- '-siggroup', '--signature-group': Header of the column to group signatures calculation ('SIGNATURE', 'SAMPLE', 'CANCER_TYPE'). One mutational profile will be calculated for each group.\n- '-c', '--cores': Number of cores to use in the computation. By default it uses all the available cores\n- '--seed': seed to use in the simulations\n- '--log-level': Verbosity of the logger. Default is 'info'\n- '--concatenate': Calculate clustering on concatenated genomic regions (e.g., exons in coding sequences)\n- '--clustplot': Needle plot with clusters for a GE\n- '--qqplot': Quantile-quantile (Q-Q) plot for a dataset\n- '--gzip': Gzip compress files\n\n.. note::\n    When using simulation mode 'mutation_centered', simulation windows can be simulated outside the GE.\n\n.. note::\n    When using '--signature-calculation region_normalized', k-mer mutation counts will be normalized by k-mer nucleotide counts in the genomic regions provided as input ('--regions-file').\n\n.. _readme example:\n\nRun the example\n---------------\n\nAfter installing OncodriveCLUSTL, you can run an example of TCGA pancreatic adenocarcinomas (Ellrott et al. 2018) for coding regions (Mularoni et al., 2016) using 1000 simulations.\nFirst you need to download the example folder. Then you run OncodriveCLUSTL with default mode and parameters as::\n\n        $ oncodriveclustl -i ~/example/PAAD.tsv.gz -r ~/example/cds.hg19.regions.gz -o ~/example/output_example\n\nThe results will be saved in a folder named ``output_example``.\n\nYou can compute a more sophisticated analysis using non-default parameters and generate a quantile-quantile plot by typing::\n\n        $ oncodriveclustl -i ~/example/PAAD.tsv.gz -r ~/example/cds.hg19.regions.gz -o ~/example/output_example -sw 15 -cw 15 -simw 35 -sim region_restricted --concatenate --qqplot\n\nIf you want to run a specific GE and generate a plot its observed clusters, you can type::\n\n        $ oncodriveclustl -i ~/example/PAAD.tsv.gz -r ~/example/cds.hg19.regions.gz -o ~/example/output_example -sw 15 -cw 15 -simw 35 -sim region_restricted --concatenate --clustplot -e KRAS", "description_content_type": "", "docs_url": null, "download_url": "https://bitbucket.org/bbglab/oncodriveclustl/get/1.1.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/bbglab/oncodriveclustl", "keywords": "", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "oncodriveclustl", "package_url": "https://pypi.org/project/oncodriveclustl/", "platform": "", "project_url": "https://pypi.org/project/oncodriveclustl/", "project_urls": {"Download": "https://bitbucket.org/bbglab/oncodriveclustl/get/1.1.3.tar.gz", "Homepage": "https://bitbucket.org/bbglab/oncodriveclustl"}, "release_url": "https://pypi.org/project/oncodriveclustl/1.1.3/", "requires_dist": null, "requires_python": ">=3.5", "summary": "OncodriveCLUSTL is a clustering method to identify cancer drivers", "version": "1.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>OncodriveCLUSTL is a sequence-based clustering method to identify significant clustering\nsignals in nucleotide sequence.</p>\n<p>One of the main goals of cancer research is the identification of the genomic elements that drive tumorigenesis. OncodriveCLUSTL is a new nucleotide sequence-based clustering algorithm to detect significant clustering signals across genomic regions. OncodriveCLUSTL is based on a local background model derived from the nucleotide context mutational probabilities of the cohort under study. Our method is able to identify well-known cancer drivers in coding regions and it can be applied to non-coding regions and non-human data.</p>\n<div id=\"license\">\n<span id=\"readme-license\"></span><h2>License</h2>\n<p>OncodriveCLUSTL is available to the general public subject to certain conditions described in its <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a>.</p>\n</div>\n<div id=\"installation\">\n<span id=\"readme-install\"></span><h2>Installation</h2>\n<p>OncodriveCLUSTL depends on Python 3.5 and some external libraries. We recommend to install it using the <a href=\"https://www.anaconda.com/download/\" rel=\"nofollow\">Anaconda Python distribution</a>:</p>\n<pre>$ conda install -c bbglab oncodriveclustl\n</pre>\n<p>OncodriveCLUSTL can also be installed using pip:</p>\n<pre>$ pip install oncodriveclustl\n</pre>\n<p>You can obtain the latest code from the repository and install it with pip:</p>\n<pre>$ git clone git@bitbucket.org:bbglab/oncodriveclustl.git\n$ cd oncodriveclustl\n$ pip install .\n</pre>\n<div>\n<p>Note</p>\n<p>The first time that you run OncodriveCLUSTL with a given reference genome, it will download it from our servers. By default the\ndownloaded datasets go to <tt><span class=\"pre\">~/.bgdata</span></tt>. If you want to move these datasets to another folder you have to define the\nsystem environment variable BGDATA_LOCAL with an export command.</p>\n</div>\n<p>The following command will show you the help:</p>\n<pre>$ oncodriveclustl --help\n</pre>\n<p>You can also download a singularity image\nfrom the <a href=\"https://bitbucket.org/bbglab/oncodriveclustl/downloads/\" rel=\"nofollow\">downloads page</a>.\nRunning the image invokes the oncodriveclustl command.</p>\n</div>\n<div id=\"input-data\">\n<span id=\"readme-inputdata\"></span><h2>Input data</h2>\n<p>OncodriveCLUSTL only requires two main inputs, the mutations file and the annotations file:</p>\n<ul>\n<li><p>Mutations file. TSV file containing SNVs (substitutions) mapped to a reference genome (e.g., human hg19 or mouse c3h). If other mutation types are present (insertions, deletions, double base substitutions, etc), they will be filtered out during the analysis. This file must contain, at least, the following 5 columns with header:</p>\n<blockquote>\n<ol>\n<li>CHROMOSOME: 1, 2,\u2026, X, Y</li>\n<li>POSITION: Integer indicating the position of the mutation</li>\n<li>REF: Reference nucleotide</li>\n<li>ALT: Alternate nucleotide</li>\n<li>SAMPLE: Identifier of the sample</li>\n</ol>\n<p>Additional columns are:</p>\n<ol>\n<li>CANCER_TYPE: Type of tumor. When specified, OncodriveCLUSTL will calculate one mutational profile for each cancer type and mutations will be randomized accordingly.</li>\n<li>SIGNATURE: User-defined group to compute k-mer nucleotide mutational probabilities. When specified, OncodriveCLUSTL will calculate one mutational profile for each group and will randomize each mutation accordingly.</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<div>\n<p>Note</p>\n<p>OncodriveCLUSTL assumes all SNVs are mapped to the positive strand.</p>\n</div>\n<div>\n<p>Warning</p>\n<p>When using the \u2018\u2013signature-group\u2019 option, please check that the number of mutations per group is sufficient for an accurate signatures calculation.</p>\n</div>\n<ul>\n<li><p>Annotations file. TSV file containing the coordinates of genomic elements (GEs). This file must contain, at least, the following 5 columns with header:</p>\n<blockquote>\n<ol>\n<li>CHROMOSOME: 1, 2,\u2026, X, Y</li>\n<li>START: Starting position of the genomic region</li>\n<li>END: Final position of the genomic region</li>\n<li>ELEMENT: Identifier of the GE</li>\n<li>SYMBOL: Symbol of the GE. OncodriveCLUSTL will analyze GEs as SYMBOL + ELEMENT.</li>\n</ol>\n<p>Additional columns are:</p>\n<ol>\n<li>STRAND: Strand of the GE coordinates (\u201c+\u201d or \u201c-\u201c).</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n<div>\n<p>Warning</p>\n<p>Coordinates of a given GE cannot overlap.</p>\n</div>\n<p>You can check the input formats in the files provided in the example.</p>\n<p>If you have a VCF file or directory of VCF files containing somatic mutations, you can run our VCF parser to obtain a tabular file compatible with OncodriveCLUSTL input format:</p>\n<pre>$ parse_vcf -i [INPUT_DIRECTORY] -o [OUTPUT_FILE]\n</pre>\n<p>Please, check \u2018parsers/vcf.py\u2019 module for more details.</p>\n<p>If you would like to run OncodriveCLUSTL using a per-calculated signature or mutational profile, you need to provide a dictionary containing the reference k-mer to alternate mutational probabilities in JSON format:</p>\n<pre>{\n    \"my_dataset\": {\n        \"GCA&gt;G\": 0.02424271083094251,\n        \"AGC&gt;A\": 0.023005887103025254,\n        \"ACG&gt;T\": 0.037613802858829135,\n        \"CGA&gt;C\": 0.10691031051670515,\n        \"GAC&gt;G\": 0.017846071811001615,\n        \"TTC&gt;A\": 0.024003748061871697,\n        \"CTT&gt;G\": 0.024149863672267024,\n        \"GGA&gt;T\": 0.011178562948734577,\n        \"AGG&gt;C\": 0.010654720767868876,\n        \"GGG&gt;C\": 0.012031686292218055,\n        \"CAA&gt;T\": 0.014478959792844522,\n        \"TGA&gt;A\": 0.01255651801972085,\n        \"GGA&gt;A\": 0.011178562948734577,\n        \"CGA&gt;A\": 0.03563677017223505,\n        \"TCC&gt;T\": 0.011158347971568658,\n        \"GCC&gt;A\": 0.010952316565906438,\n        ...\n    }\n}\n</pre>\n<p>OncodriveCLUSTL requires non-collapsed k-mer probabilities (192 for tri-nucleotides, 3072 for penta-nucleotides).</p>\n</div>\n<div id=\"output-data\">\n<span id=\"readme-outputdata\"></span><h2>Output data</h2>\n<p>OncodriveCLUSTL generates three output files:</p>\n<ul>\n<li><p>Elements results file (\u2018elements_results.txt\u2019). TSV file containing results of the analyzed elements:</p>\n<blockquote>\n<ol>\n<li>SYMBOL: GE symbol</li>\n<li>ENSID: GE ID</li>\n<li>CGC: True if GE in the COSMIC Cancer Gene Census (CGC) list (Sondka et al., 2018)</li>\n<li>CHROMOSOME: 1, 2,\u2026, X, Y</li>\n<li>STRAND: Strand of the GE (\u201c+\u201d or \u201c-\u201c)</li>\n<li>LENGTH: length (bp) of the GE</li>\n<li>TOTAL_MUT: total substitutions observed in the GE</li>\n<li>CLUSTERED_MUT: number of substitutions in a cluster</li>\n<li>CLUSTERS: number of clusters</li>\n<li>SIM_CLUSTERS: number of simulated clusters</li>\n<li>SCORE: GE score</li>\n<li>P_EMPIRICAL: empirical p-value of the GE</li>\n<li>Q_EMPIRICAL: empirical q-value of the GE</li>\n<li>P_ANALYTICAL: analytical p-value of the GE</li>\n<li>Q_ANALYTICAL: analytical q-value of the GE</li>\n<li>P_TOPCLUSTER: analytical p-value of the cluster with highest cluster score</li>\n<li>Q_TOPCLUSTER: analytical q-value of the cluster with highest cluster score</li>\n</ol>\n</blockquote>\n</li>\n<li><p>Clusters results file (\u2018clusters_results.tsv\u2019). TSV file containing results of the clusters observed in the analyzed elements:</p>\n<blockquote>\n<ol>\n<li>RANK: Position of the GE in the list of</li>\n<li>SYMBOL: GE symbol</li>\n<li>ENSID: GE ID</li>\n<li>CGC: True if GE in the CGC list</li>\n<li>CHROMOSOME: 1, 2,\u2026, X, Y</li>\n<li>STRAND: Strand of the GE (\u201c+\u201d or \u201c-\u201c)</li>\n<li>COORDINATES: genomic coordinates of the cluster. It can be \u2018coord1,coord2\u2019 for clusters inside a single region or \u2018coord1,coord2;coord3,coord4\u2019 for those spanning regions (\u2013concatenate flag)</li>\n<li>MAX_COORD: genomic position with the highest smoothing score inside the cluster</li>\n<li>WIDTH: cluster\u2019s width (pb)</li>\n<li>N_MUT: number of substitutions in the cluster</li>\n<li>N_SAMPLES: number of samples with a mutation in the cluster</li>\n<li>FRA_UNIQ_SAMPLES: proportion of unique samples mutated in the cluster out of the total of mutations in the cluster</li>\n<li>SCORE: cluster score</li>\n<li>P: analytical p-value of the cluster</li>\n</ol>\n</blockquote>\n</li>\n<li><p>Log file (\u2018results.log\u2019). TXT file containing OncodriveCLUSTL\u2019s run information</p>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<span id=\"readme-usage\"></span><h2>Usage</h2>\n<p>OncodriveCLUSTL is meant to be used through the command line.</p>\n<ul>\n<li>\u2018-i\u2019, \u2018\u2013input-file\u2019: File containing mutations (required)</li>\n<li>\u2018-r\u2019, \u2018\u2013regions-file\u2019: GZIP compressed file with the genomic regions to analyze (required)</li>\n<li>\u2018-o\u2019, \u2018\u2013output-directory\u2019: Output directory to be created (required)</li>\n<li>\u2018-sig\u2019, \u2018\u2013input-signature\u2019: File containing input context based mutational probabilities</li>\n<li>\u2018-ef\u2019, \u2018\u2013elements-file\u2019: File with the symbol of a set GEs to analyze, one per row</li>\n<li>\u2018-e\u2019, \u2018\u2013elements\u2019: Symbol of the GE(s) to analyze</li>\n<li>\u2018-g\u2019, \u2018\u2013genome\u2019: Genome to use. Default is hg19</li>\n<li>\u2018-emut\u2019, \u2018\u2013element-mutations\u2019: Cutoff of element mutations. Default is 2</li>\n<li>\u2018-cmut\u2019, \u2018\u2013cluster-mutations\u2019: Cutoff of cluster mutations. Default is 2</li>\n<li>\u2018-sw\u2019, \u2018\u2013smooth-window\u2019: Smoothing window. Default is 11</li>\n<li>\u2018-cw\u2019, \u2018\u2013cluster-window\u2019: Cluster window. Default is 11</li>\n<li>\u2018-kmer\u2019, \u2018\u2013kmer\u2019: K-mer nucleotide context (3 or 5) to calculate mutational probabilities. Default is 3</li>\n<li>\u2018-n\u2019, \u2018\u2013n-simulations\u2019: Number of simulations. Default is 1000</li>\n<li>\u2018-sim\u2019, \u2018\u2013simulation-mode\u2019: Simulation mode. Default is \u2018mutation_centered\u2019</li>\n<li>\u2018-simw\u2019, \u2018\u2013simulation-window\u2019: Simulation window. Default is 31</li>\n<li>\u2018-sigcalc\u2019, \u2018\u2013signature-calculation\u2019: calculation of mutational probabilities as mutation frequencies (\u2018frequencies\u2019) or k-mer mutation counts normalized by k-mer region counts (\u2018region_normalized\u2019). Default is frequencies</li>\n<li>\u2018-siggroup\u2019, \u2018\u2013signature-group\u2019: Header of the column to group signatures calculation (\u2018SIGNATURE\u2019, \u2018SAMPLE\u2019, \u2018CANCER_TYPE\u2019). One mutational profile will be calculated for each group.</li>\n<li>\u2018-c\u2019, \u2018\u2013cores\u2019: Number of cores to use in the computation. By default it uses all the available cores</li>\n<li>\u2018\u2013seed\u2019: seed to use in the simulations</li>\n<li>\u2018\u2013log-level\u2019: Verbosity of the logger. Default is \u2018info\u2019</li>\n<li>\u2018\u2013concatenate\u2019: Calculate clustering on concatenated genomic regions (e.g., exons in coding sequences)</li>\n<li>\u2018\u2013clustplot\u2019: Needle plot with clusters for a GE</li>\n<li>\u2018\u2013qqplot\u2019: Quantile-quantile (Q-Q) plot for a dataset</li>\n<li>\u2018\u2013gzip\u2019: Gzip compress files</li>\n</ul>\n<div>\n<p>Note</p>\n<p>When using simulation mode \u2018mutation_centered\u2019, simulation windows can be simulated outside the GE.</p>\n</div>\n<div>\n<p>Note</p>\n<p>When using \u2018\u2013signature-calculation region_normalized\u2019, k-mer mutation counts will be normalized by k-mer nucleotide counts in the genomic regions provided as input (\u2018\u2013regions-file\u2019).</p>\n</div>\n</div>\n<div id=\"run-the-example\">\n<span id=\"readme-example\"></span><h2>Run the example</h2>\n<p>After installing OncodriveCLUSTL, you can run an example of TCGA pancreatic adenocarcinomas (Ellrott et al. 2018) for coding regions (Mularoni et al., 2016) using 1000 simulations.\nFirst you need to download the example folder. Then you run OncodriveCLUSTL with default mode and parameters as:</p>\n<pre>$ oncodriveclustl -i ~/example/PAAD.tsv.gz -r ~/example/cds.hg19.regions.gz -o ~/example/output_example\n</pre>\n<p>The results will be saved in a folder named <tt>output_example</tt>.</p>\n<p>You can compute a more sophisticated analysis using non-default parameters and generate a quantile-quantile plot by typing:</p>\n<pre>$ oncodriveclustl -i ~/example/PAAD.tsv.gz -r ~/example/cds.hg19.regions.gz -o ~/example/output_example -sw 15 -cw 15 -simw 35 -sim region_restricted --concatenate --qqplot\n</pre>\n<p>If you want to run a specific GE and generate a plot its observed clusters, you can type:</p>\n<pre>$ oncodriveclustl -i ~/example/PAAD.tsv.gz -r ~/example/cds.hg19.regions.gz -o ~/example/output_example -sw 15 -cw 15 -simw 35 -sim region_restricted --concatenate --clustplot -e KRAS\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7172425, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "46c574ddd808ae37b84b20386a35444a", "sha256": "d72f538f839b0d46be614778de60c1c23b70249ebe8930b2b2221cbcb6c05b7f"}, "downloads": -1, "filename": "oncodriveclustl-1.0.0.tar.gz", "has_sig": false, "md5_digest": "46c574ddd808ae37b84b20386a35444a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31131, "upload_time": "2018-11-22T15:59:38", "upload_time_iso_8601": "2018-11-22T15:59:38.876980Z", "url": "https://files.pythonhosted.org/packages/c3/61/aab69961e3add8ec4cca3881595c2c28e9ac07de76955c28e48268cb88da/oncodriveclustl-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4bf0c152236033c3f84599439efed620", "sha256": "9a84dd06f37166e4884990bd787474d533cf7e3b2e2950c05ae2e14371445151"}, "downloads": -1, "filename": "oncodriveclustl-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4bf0c152236033c3f84599439efed620", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31328, "upload_time": "2018-12-19T15:02:13", "upload_time_iso_8601": "2018-12-19T15:02:13.959847Z", "url": "https://files.pythonhosted.org/packages/c8/38/74de52a5d6f770270b677edd3cac87dc9a382ef55113dc756378ec8c82f8/oncodriveclustl-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4544641e2667aebcc23168641f1758e2", "sha256": "9d3f047851fda83b6df4a00267da308992d189efc454c2eb2d8e1e1b47f7759e"}, "downloads": -1, "filename": "oncodriveclustl-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4544641e2667aebcc23168641f1758e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 31084, "upload_time": "2019-04-26T14:20:13", "upload_time_iso_8601": "2019-04-26T14:20:13.341986Z", "url": "https://files.pythonhosted.org/packages/d9/ec/2921e6e59b85b0a01cdbfe81649dfa9e83b74a91a715842500853f49603c/oncodriveclustl-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "5538d27d2c7e7f2096b60314c2140c21", "sha256": "5949d8d4278ca59c375fcabaac10ca41e19d1011da8ff82087df2414de3dad2e"}, "downloads": -1, "filename": "oncodriveclustl-1.1.1.tar.gz", "has_sig": false, "md5_digest": "5538d27d2c7e7f2096b60314c2140c21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 33069, "upload_time": "2019-04-29T08:57:02", "upload_time_iso_8601": "2019-04-29T08:57:02.850778Z", "url": "https://files.pythonhosted.org/packages/2c/ef/567a5f794b39a0e2cd8161558e7df2420caea2d120d9b96391f9c17acb9b/oncodriveclustl-1.1.1.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "fc1cd6a8483d951a110a88375eca2031", "sha256": "97f0a1e413f2f9924239bb00bf861f408eed502fd39e472a4035d65643b6896d"}, "downloads": -1, "filename": "oncodriveclustl-1.1.3.tar.gz", "has_sig": false, "md5_digest": "fc1cd6a8483d951a110a88375eca2031", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 33209, "upload_time": "2020-05-05T14:43:19", "upload_time_iso_8601": "2020-05-05T14:43:19.381615Z", "url": "https://files.pythonhosted.org/packages/08/c2/7d04c73c983d5a8037be3b4521e4e137d296793a6fea428e6826f09ba69b/oncodriveclustl-1.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fc1cd6a8483d951a110a88375eca2031", "sha256": "97f0a1e413f2f9924239bb00bf861f408eed502fd39e472a4035d65643b6896d"}, "downloads": -1, "filename": "oncodriveclustl-1.1.3.tar.gz", "has_sig": false, "md5_digest": "fc1cd6a8483d951a110a88375eca2031", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 33209, "upload_time": "2020-05-05T14:43:19", "upload_time_iso_8601": "2020-05-05T14:43:19.381615Z", "url": "https://files.pythonhosted.org/packages/08/c2/7d04c73c983d5a8037be3b4521e4e137d296793a6fea428e6826f09ba69b/oncodriveclustl-1.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:22 2020"}