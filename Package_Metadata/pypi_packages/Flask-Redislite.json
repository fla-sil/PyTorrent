{"info": {"author": "Trong-Nghia Nguyen", "author_email": "nghia@viisix.space", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Database", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-Redislite\n===============\n\n.. image:: https://travis-ci.org/ViiSiX/FlaskRedislite.svg?branch=master\n    :target: https://travis-ci.org/ViiSiX/FlaskRedislite\n.. image:: https://landscape.io/github/ViiSiX/FlaskRedislite/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/ViiSiX/FlaskRedislite/master\n   :alt: Code Health\n\nUsing Flask with *Redislite*, also *redis-collections* and *rq*.\n\nInstallation\n------------\nUsing pip\n\n.. code-block:: bash\n\n    pip install Flask-Redislite\n\nUsage\n-----\nChoose the path for your Redislite data file, then include to your application config\n\n.. code-block:: python\n\n    REDISLITE_PATH = '<path/to/redis/file.rdb>'\n    \nCreate new redis instance within your application\n\n.. code-block:: python\n\n    from flask import Flask\n    from flask_redislite import FlaskRedis\n    \n    app = Flask(__name__)\n    \n    rdb = FlaskRedis(app)\n    # with redis-collections:\n    # rdb = FlaskRedis(app, collection = True)\n    \nThen use it on your view\n\n.. code-block:: python\n\n    rdb.connection.set('foo1', 'bar1')\n    print rdb.connection.get('foo1')\n    \n    # redis-collections\n    collection = rdb.collection\n    d = collection.dict('123456')\n    d['foo'] = 'bar'\n    print d\n\nRQ\n-----\nTo use Flask-Redislite with RQ, you need to start RQ worker as a new process\n\n.. code-block:: python\n\n    from flask import Flask\n    from flask_redislite import FlaskRedis\n\n    app = Flask(__name__)\n\n    rdb = FlaskRedis(app, rq=True)\n\n    # Your other extensions load here\n    # ex: lm = LoginManager()\n    # ...\n\n    with app.app_context():\n        rdb.start_worker()\n\n    # your codes\n    # ex: views function\n\n    app.run()\n\nThen within your view enqueue the jobs:\n\n.. code-block:: python\n\n    import time\n\n    def simple_job():\n        time.sleep(2)\n        return 12345\n\n    queue = rdb.queue\n    queue['default'].enqueue(simple_job, ttl=60, result_ttl=60, job_id='321')\n    sleep(5)\n    print queue['default'].fetch_job('321').result\n\n\nHistory\n=======\n\n0.1.1 (07/11/2017)\n------------------\n- Update README.rst\n- Upgrade library\n\n0.1.0 (31/8/2016)\n-----------------\n- Support multiple queue\n\n0.0.5 (9/7/2016)\n----------------\n- Better test coverage\n- Apply PEP8\n- Resume lost Redislite process on restart, interrupted exit\n\n0.0.4 (6/7/2016)\n----------------\n- Add test\n\n0.0.3 (5/7/2016)\n----------------\n- Implement RQ\n\n0.0.2 (3/7/2016)\n----------------\n- Add documents\n- Fix minor codes\n\n0.0.1 (2/7/2016)\n----------------\n\n- Initial package\n- Allow to use Redislite and redis-collections from Flask", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/ViiSiX/FlaskRedislite", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ViiSiX/FlaskRedislite", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask-Redislite", "package_url": "https://pypi.org/project/Flask-Redislite/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Redislite/", "project_urls": {"Download": "https://github.com/ViiSiX/FlaskRedislite", "Homepage": "https://github.com/ViiSiX/FlaskRedislite"}, "release_url": "https://pypi.org/project/Flask-Redislite/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Using Flask with Redislite", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"flask-redislite\">\n<h2>Flask-Redislite</h2>\n<a href=\"https://travis-ci.org/ViiSiX/FlaskRedislite\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/ViiSiX/FlaskRedislite.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad71fe2d065acf27a95316e8b4a9f2254af76cb4/68747470733a2f2f7472617669732d63692e6f72672f5669695369582f466c61736b52656469736c6974652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://landscape.io/github/ViiSiX/FlaskRedislite/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc6856ee748e7716e61cab6e24d17a1e7a13ac90/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f5669695369582f466c61736b52656469736c6974652f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a>\n<p>Using Flask with <em>Redislite</em>, also <em>redis-collections</em> and <em>rq</em>.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Using pip</p>\n<pre>pip install Flask-Redislite\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Choose the path for your Redislite data file, then include to your application config</p>\n<pre><span class=\"n\">REDISLITE_PATH</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;path/to/redis/file.rdb&gt;'</span>\n</pre>\n<p>Create new redis instance within your application</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_redislite</span> <span class=\"kn\">import</span> <span class=\"n\">FlaskRedis</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">rdb</span> <span class=\"o\">=</span> <span class=\"n\">FlaskRedis</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"c1\"># with redis-collections:</span>\n<span class=\"c1\"># rdb = FlaskRedis(app, collection = True)</span>\n</pre>\n<p>Then use it on your view</p>\n<pre><span class=\"n\">rdb</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s1\">'foo1'</span><span class=\"p\">,</span> <span class=\"s1\">'bar1'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">rdb</span><span class=\"o\">.</span><span class=\"n\">connection</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'foo1'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># redis-collections</span>\n<span class=\"n\">collection</span> <span class=\"o\">=</span> <span class=\"n\">rdb</span><span class=\"o\">.</span><span class=\"n\">collection</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">collection</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">(</span><span class=\"s1\">'123456'</span><span class=\"p\">)</span>\n<span class=\"n\">d</span><span class=\"p\">[</span><span class=\"s1\">'foo'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'bar'</span>\n<span class=\"nb\">print</span> <span class=\"n\">d</span>\n</pre>\n</div>\n<div id=\"rq\">\n<h3>RQ</h3>\n<p>To use Flask-Redislite with RQ, you need to start RQ worker as a new process</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_redislite</span> <span class=\"kn\">import</span> <span class=\"n\">FlaskRedis</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"n\">rdb</span> <span class=\"o\">=</span> <span class=\"n\">FlaskRedis</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">rq</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Your other extensions load here</span>\n<span class=\"c1\"># ex: lm = LoginManager()</span>\n<span class=\"c1\"># ...</span>\n\n<span class=\"k\">with</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">app_context</span><span class=\"p\">():</span>\n    <span class=\"n\">rdb</span><span class=\"o\">.</span><span class=\"n\">start_worker</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># your codes</span>\n<span class=\"c1\"># ex: views function</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p>Then within your view enqueue the jobs:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">simple_job</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"mi\">12345</span>\n\n<span class=\"n\">queue</span> <span class=\"o\">=</span> <span class=\"n\">rdb</span><span class=\"o\">.</span><span class=\"n\">queue</span>\n<span class=\"n\">queue</span><span class=\"p\">[</span><span class=\"s1\">'default'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">enqueue</span><span class=\"p\">(</span><span class=\"n\">simple_job</span><span class=\"p\">,</span> <span class=\"n\">ttl</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">result_ttl</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">job_id</span><span class=\"o\">=</span><span class=\"s1\">'321'</span><span class=\"p\">)</span>\n<span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">queue</span><span class=\"p\">[</span><span class=\"s1\">'default'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">fetch_job</span><span class=\"p\">(</span><span class=\"s1\">'321'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">result</span>\n</pre>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.1 (07/11/2017)</h3>\n<ul>\n<li>Update README.rst</li>\n<li>Upgrade library</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.0 (31/8/2016)</h3>\n<ul>\n<li>Support multiple queue</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.0.5 (9/7/2016)</h3>\n<ul>\n<li>Better test coverage</li>\n<li>Apply PEP8</li>\n<li>Resume lost Redislite process on restart, interrupted exit</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.0.4 (6/7/2016)</h3>\n<ul>\n<li>Add test</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.0.3 (5/7/2016)</h3>\n<ul>\n<li>Implement RQ</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.0.2 (3/7/2016)</h3>\n<ul>\n<li>Add documents</li>\n<li>Fix minor codes</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.0.1 (2/7/2016)</h3>\n<ul>\n<li>Initial package</li>\n<li>Allow to use Redislite and redis-collections from Flask</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3312583, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "be934c9fe47e8ae36f4045c2c5c3b8a6", "sha256": "1d2f6532b41788b1c5d818aa4b37ea66630f514f03de0781e5a170862dff22f4"}, "downloads": -1, "filename": "Flask-Redislite-0.1.1.tar.gz", "has_sig": false, "md5_digest": "be934c9fe47e8ae36f4045c2c5c3b8a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5033, "upload_time": "2017-11-07T12:34:01", "upload_time_iso_8601": "2017-11-07T12:34:01.270095Z", "url": "https://files.pythonhosted.org/packages/7e/d0/68ff665271856a0a190b33c250160b514c155332270bd54a1cc8867d78ab/Flask-Redislite-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be934c9fe47e8ae36f4045c2c5c3b8a6", "sha256": "1d2f6532b41788b1c5d818aa4b37ea66630f514f03de0781e5a170862dff22f4"}, "downloads": -1, "filename": "Flask-Redislite-0.1.1.tar.gz", "has_sig": false, "md5_digest": "be934c9fe47e8ae36f4045c2c5c3b8a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5033, "upload_time": "2017-11-07T12:34:01", "upload_time_iso_8601": "2017-11-07T12:34:01.270095Z", "url": "https://files.pythonhosted.org/packages/7e/d0/68ff665271856a0a190b33c250160b514c155332270bd54a1cc8867d78ab/Flask-Redislite-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:28 2020"}