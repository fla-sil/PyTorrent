{"info": {"author": "Vincent Rasneur, Ana\u00c3\u00abl Verrier", "author_email": "elghinn@free.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: X11 Applications", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Desktop Environment :: Window Managers"], "description": "PycaWM is a window manager written in python and is distributed under the GPLv3\r\nlicense.\r\n\r\nKey ideas\r\n---------\r\n\r\n* each method/function can be hooked. The window manager can thus easily react\r\non pretty much everything. (for example, very useful for plugins.)\r\n* the configuration file is written in python, not in an obscure/abstruse\r\nsyntax.\r\n* PycaWM is designed to be dynamically modified at runtime. We can dynamically\r\nadd/remove buttons, keyboard shortcuts, plugins, and even change a window\r\nmanager method.", "description_content_type": null, "docs_url": null, "download_url": "http://pycawm.last-exile.org/sources/pycawm-0.2.tar.bz2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pycawm.last-exile.org/", "keywords": "window manager", "license": "", "maintainer": "Vincent Rasneur, Ana\u00c3\u00abl Verrier", "maintainer_email": "elghinn@free.fr", "name": "PycaWM", "package_url": "https://pypi.org/project/PycaWM/", "platform": "", "project_url": "https://pypi.org/project/PycaWM/", "project_urls": {"Download": "http://pycawm.last-exile.org/sources/pycawm-0.2.tar.bz2", "Homepage": "http://pycawm.last-exile.org/"}, "release_url": "https://pypi.org/project/PycaWM/0.2/", "requires_dist": null, "requires_python": null, "summary": "Reparenting window manager which can be easily modified/extended.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            PycaWM is a window manager written in python and is distributed under the GPLv3\n<br>license.\n<br>\n<br>Key ideas\n<br>---------\n<br>\n<br>* each method/function can be hooked. The window manager can thus easily react\n<br>on pretty much everything. (for example, very useful for plugins.)\n<br>* the configuration file is written in python, not in an obscure/abstruse\n<br>syntax.\n<br>* PycaWM is designed to be dynamically modified at runtime. We can dynamically\n<br>add/remove buttons, keyboard shortcuts, plugins, and even change a window\n<br>manager method.\n          </div>"}, "last_serial": 802656, "releases": {"0.1": [], "0.2": []}, "urls": [], "timestamp": "Fri May  8 03:08:42 2020"}