{"info": {"author": "Algis Kabaila", "author_email": "algis.Kabaila@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Education"], "description": "=====================================\nPure Python 2.7 Linear Algebra Module\n=====================================\n\nIntroduction\n============\n\nThis module, written in Python2.7, is the backport of a similar module written in Python 3.2. There are many \nPython users who have not yet moved to Python 3.x and because generally Python 3.x is not fully backwards \ncompatible with the earlier Python versions, it has been necessary to provide backports of Python 3.x modules to Python 2.x.\n\nThis module, written in pure Python 2.7, does not require other modules, only\nPython 2.x. Consequently the module is as portable as Python itself. The well documented module is easy to use and allows use of the usual \nscalar variable syntax for the more complex matrix operations. Thus, for matrix multiplication of matrices **amat** and **bmat** one can simply write::\n\n    resultmat = amat * bmat\n\nFor the inversion of **amat**, one only needs to write::\n\n    resultmat = ~ amat\n\nMatrix naming convention is freely chosen by the end user.  The module is well documented with pdf files **quickStart**, **userManual** and **referenceMatalg**. Reference can also be made to the documentation \nof the Python 3.2 module \"Matalg\". In the backport attention was given to user use compatibility between the \nmodules in Python 3.2 and Python 2.7. \n\nDocumentation and Servicing\n===========================\n\n**Quick Start** will get an experienced user up to speed very quickly. **User Manual** has an explanation and examples of most capabilities of the package, whilst the **Reference of Matalg** lists all the methods and functions of the module with brief explanation of each. In addition to the supplied pdf files, the information for the Python 2.7 module is also accessible on the web at::\n\n    http://akabaila.pcug.org.au/matalg27-doc/index.html\n\nThe author is prepared to consider all reasonable requests for extensions and improvements and/or bug fixes of the module. Your emails will be appreciated::\n\n  algis.kabaila@gmail.com\n\nLicence\n========\n\nThe module is licensed under LGPL and is Open Source Freeware. You are welcome to copy it and to share it.\n\nAlgis Kabaila, Canberra, 2011.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://akabaila.pcug.org.au/matalg27-doc/index.html", "keywords": null, "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "matalg27", "package_url": "https://pypi.org/project/matalg27/", "platform": "POSIX", "project_url": "https://pypi.org/project/matalg27/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://akabaila.pcug.org.au/matalg27-doc/index.html"}, "release_url": "https://pypi.org/project/matalg27/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Pure Python 2.7 Matrix Algebra Module.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This module, written in Python2.7, is the backport of a similar module written in Python 3.2. There are many\nPython users who have not yet moved to Python 3.x and because generally Python 3.x is not fully backwards\ncompatible with the earlier Python versions, it has been necessary to provide backports of Python 3.x modules to Python 2.x.</p>\n<p>This module, written in pure Python 2.7, does not require other modules, only\nPython 2.x. Consequently the module is as portable as Python itself. The well documented module is easy to use and allows use of the usual\nscalar variable syntax for the more complex matrix operations. Thus, for matrix multiplication of matrices <strong>amat</strong> and <strong>bmat</strong> one can simply write:</p>\n<pre>resultmat = amat * bmat\n</pre>\n<p>For the inversion of <strong>amat</strong>, one only needs to write:</p>\n<pre>resultmat = ~ amat\n</pre>\n<p>Matrix naming convention is freely chosen by the end user.  The module is well documented with pdf files <strong>quickStart</strong>, <strong>userManual</strong> and <strong>referenceMatalg</strong>. Reference can also be made to the documentation\nof the Python 3.2 module \u201cMatalg\u201d. In the backport attention was given to user use compatibility between the\nmodules in Python 3.2 and Python 2.7.</p>\n</div>\n<div id=\"documentation-and-servicing\">\n<h2>Documentation and Servicing</h2>\n<p><strong>Quick Start</strong> will get an experienced user up to speed very quickly. <strong>User Manual</strong> has an explanation and examples of most capabilities of the package, whilst the <strong>Reference of Matalg</strong> lists all the methods and functions of the module with brief explanation of each. In addition to the supplied pdf files, the information for the Python 2.7 module is also accessible on the web at:</p>\n<pre>http://akabaila.pcug.org.au/matalg27-doc/index.html\n</pre>\n<p>The author is prepared to consider all reasonable requests for extensions and improvements and/or bug fixes of the module. Your emails will be appreciated:</p>\n<pre>algis.kabaila@gmail.com\n</pre>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>The module is licensed under LGPL and is Open Source Freeware. You are welcome to copy it and to share it.</p>\n<p>Algis Kabaila, Canberra, 2011.</p>\n</div>\n\n          </div>"}, "last_serial": 794556, "releases": {"0.0.9": [{"comment_text": "", "digests": {"md5": "18da02a7be065db1fe61b63cb6303e47", "sha256": "e630d6ba9fd619d03cb24f39b882f59a55153121d3710dc34b61718d80dab844"}, "downloads": -1, "filename": "matalg27-0.0.9.tar.gz", "has_sig": false, "md5_digest": "18da02a7be065db1fe61b63cb6303e47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23500, "upload_time": "2011-07-30T13:41:24", "upload_time_iso_8601": "2011-07-30T13:41:24.128801Z", "url": "https://files.pythonhosted.org/packages/1c/74/6e937e0e7b3f4bf05692e16ff7a057f1982e1f977e8e554847b98d153475/matalg27-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "45770a9974a991c809dca039eed70409", "sha256": "85f82aac3239ca7b09be22e17067db52d5dc253abf43268ac54fe7869c9cb4f3"}, "downloads": -1, "filename": "matalg27-0.1.0.tar.gz", "has_sig": false, "md5_digest": "45770a9974a991c809dca039eed70409", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23928, "upload_time": "2011-08-02T05:59:45", "upload_time_iso_8601": "2011-08-02T05:59:45.878874Z", "url": "https://files.pythonhosted.org/packages/1b/17/d9362256cb2a2b05ec68da769b0dc0472ad8537f5d738dde312821f47c96/matalg27-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "45770a9974a991c809dca039eed70409", "sha256": "85f82aac3239ca7b09be22e17067db52d5dc253abf43268ac54fe7869c9cb4f3"}, "downloads": -1, "filename": "matalg27-0.1.0.tar.gz", "has_sig": false, "md5_digest": "45770a9974a991c809dca039eed70409", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23928, "upload_time": "2011-08-02T05:59:45", "upload_time_iso_8601": "2011-08-02T05:59:45.878874Z", "url": "https://files.pythonhosted.org/packages/1b/17/d9362256cb2a2b05ec68da769b0dc0472ad8537f5d738dde312821f47c96/matalg27-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:25 2020"}