{"info": {"author": "ponty", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "eagexp can export eagle_ partlist or image (2D/3D) of schematic or board.\n\nLinks:\n * home: https://github.com/ponty/eagexp\n * documentation: http://eagexp.readthedocs.org\n * PYPI: https://pypi.python.org/pypi/eagexp\n\n|Travis| |Coveralls| |Latest Version| |Supported Python versions| |License| |Downloads| |Code Health| |Documentation|\n\nFeatures:\n - written in python\n - it can be used as library or as a command line program\n - background processing (only if Xvfb_ and pyvirtualdisplay_ are installed)\n - timeout\n - 3D image export using Eagle3D and povray_\n - calculate airwires\n \nKnown problems:\n - slow: eagle is opened and closed for each export\n - high DPI does not work (memory problem?)\n - export can be blocked by Eagle -> timeout\n - 3D image export has a lot of options which are not supported\n   \nBasic usage\n===========\n\n    >>> from eagexp import image, partlist\n    >>> brd='~/.eagle/projects/examples/singlesided/singlesided.brd'\n    >>> image.export_image(brd, 'brd.png', resolution=600)\n    >>> print partlist.raw_partlist(brd)\n\n\nHow it works\n============\n\n#. start Xvfb_ headless X server using pyvirtualdisplay_\n#. redirect eagle display to Xvfb server by setting $DISPLAY variable.\n#. start eagle_ with EXPORT and QUIT commands\n\n\nInstallation\n============\n\nGeneral\n-------\n\n * install eagle_\n * install povray_ (optional for 3D)\n * install pip_\n * install PIL_\n * install pyvirtualdisplay_ , Xvfb_\n * install the program::\n\n    # as root\n    pip install eagexp\n\n\nUbuntu 14.04\n------------\n::\n\n    sudo apt-get install python-pip eagle povray  python-pil xvfb xdotool\n    sudo pip install eagexp\n    \nUninstall\n---------\n::\n\n    # as root\n    pip uninstall eagexp\n\nUsage\n=====\n\n\nExport from python code\n-----------------------\n\nExample::\n\n  #-- include('examples/image_example.py')--#\n  '''\n  Example for image export with various options\n  '''\n\n  from eagexp import image\n\n  brd = '/usr/share/eagle/projects/examples/tutorial/demo2.brd'\n\n  if __name__ == \"__main__\":\n      # set resolution in DPI\n      image.export_image(brd, 'api_brd_50.png', resolution=50)\n      image.export_image(brd, 'api_brd_100.png', resolution=100)\n      image.export_image(brd, 'api_brd_150.png', resolution=150)\n      \n      # mirror image\n      image.export_image(brd, 'api_brd_mirror.png', mirror=True)\n      \n      # display only 2 layers\n      image.export_image(brd, 'api_brd_layer.png', layers=['dimension', 'pads'])\n      \n      # display layer using eagle command\n      image.export_image(\n          brd, 'api_brd_command.png', command='display none dimension')\n  #-#\n\nStart the example program::\n\n    python -m eagexp.examples.image_example\n\nResult:\n\n..  #-- sh('python -m eagexp.examples.image_example')--#\n..  #-#\n\n.. image::  _img/api_brd_50.png\n\n.. image::  _img/api_brd_100.png\n\n.. image::  _img/api_brd_150.png\n\n.. image::  _img/api_brd_mirror.png\n\n.. image::  _img/api_brd_layer.png\n\n.. image::  _img/api_brd_command.png\n\nExample for 3D::\n\n  #-- include('examples/image3d_example.py')--#\n  '''\n  Example for 3D image export\n  '''\n  from eagexp import image3d\n\n  brd = '/usr/share/eagle/projects/examples/tutorial/demo2.brd'\n\n  if __name__ == \"__main__\":\n      image3d.export_image3d(brd, 'api_3d.png')\n      \n      # size\n      image3d.export_image3d(brd, 'api_3d_size1.png', size=(50, 50))\n      image3d.export_image3d(brd, 'api_3d_size2.png', size=(50, 100))\n      image3d.export_image3d(brd, 'api_3d_size3.png', size=(100, 50))\n      \n      # rotate\n      image3d.export_image3d(\n          brd, 'api_3d_xrot.png', pcb_rotate=(180, 0, 0), size=(200, 150))\n      image3d.export_image3d(\n          brd, 'api_3d_yrot1.png', pcb_rotate=(0, 45, 0), size=(200, 150))\n      image3d.export_image3d(\n          brd, 'api_3d_yrot2.png', pcb_rotate=(0, 90, 0), size=(200, 150))\n      image3d.export_image3d(\n          brd, 'api_3d_yrot3.png', pcb_rotate=(0, 135, 0), size=(200, 150))\n  #-#\n\nStart the example program::\n\n    python -m eagexp.examples.image3d_example\n\nResult:\n\n..  #-- sh('python -m eagexp.examples.image3d_example')--#\n..  #-#\n\n.. image::  _img/api_3d.png\n.. image::  _img/api_3d_xrot.png\n.. image::  _img/api_3d_yrot1.png\n.. image::  _img/api_3d_yrot2.png\n.. image::  _img/api_3d_yrot3.png\n.. image::  _img/api_3d_size1.png\n.. image::  _img/api_3d_size2.png\n.. image::  _img/api_3d_size3.png\n\nExample for partlist export::\n\n  #-- include('examples/partlist_example.py')--#\n  from eagexp import partlist\n\n  sch = '/usr/share/eagle/projects/examples/singlesided/singlesided.sch'\n  brd = '/usr/share/eagle/projects/examples/singlesided/singlesided.brd'\n\n  if __name__ == \"__main__\":\n      print( 'raw_partlist of ' + sch )\n      print( \"'''\" )\n      print( partlist.raw_partlist(sch) )\n      print( \"'''\" )\n      \n      print()\n      \n      print( 'raw_partlist of ' + brd )\n      print( \"'''\" )\n      print( partlist.raw_partlist(brd) )\n      print( \"'''\" )\n      \n      print()\n      \n      print( 'structured_partlist of ' + sch )\n      print( partlist.structured_partlist(sch) )\n      \n      print()\n      \n      print( 'structured_partlist of ' + brd )\n      print( partlist.structured_partlist(brd) )\n  #-#\n\nStart the example program::\n\n  #-- sh('python -m eagexp.examples.partlist_example')--#\n  raw_partlist of /usr/share/eagle/projects/examples/singlesided/singlesided.sch\n  '''\n  Partlist\n\n  Exported from singlesided.sch at 2016.03.05. 8:58\n\n  EAGLE Version 6.5.0 Copyright (c) 1988-2013 CadSoft\n\n  Assembly variant: \n\n  Part     Value          Device          Package      Library        Sheet\n\n  C1       10u            E2,5-6          E2,5-6       polcap         1\n  C2       10u            E2,5-6          E2,5-6       polcap         1\n  C3       10n            C-EU025-025X050 C025-025X050 rcl            1\n  C4       10n            C-EU025-025X050 C025-025X050 rcl            1\n  C5       27p            C2.5/2          C2,5-2       capacitor-wima 1\n  C6       27p            C2.5/2          C2,5-2       capacitor-wima 1\n  D1       1N4148         1N4148          DO35-10      diode          1\n  IC1      16F84          PIC16F84AP      DIL18        microchip      1\n  J1                      PINHD-1X20      1X20         PINHEAD        1\n  Q1                      XTAL/S          QS           special        1\n  R1       2.2k           R-EU_0207/10    0207/10      rcl            1\n  U1       78L05          78LXXZ          TO92         linear         1\n\n  '''\n  ()\n  raw_partlist of /usr/share/eagle/projects/examples/singlesided/singlesided.brd\n  '''\n  Partlist\n\n  Exported from singlesided.brd at 2016.03.05. 8:58\n\n  EAGLE Version 6.5.0 Copyright (c) 1988-2013 CadSoft\n\n  Assembly variant: \n\n  Part     Value          Package      Library        Position (mil)        Orientation\n\n  C1       10u            E2,5-6       polcap         (1950 400)            R0\n  C2       10u            E2,5-6       polcap         (1950 900)            R0\n  C3       10n            C025-025X050 rcl            (1950 200)            R180\n  C4       10n            C025-025X050 rcl            (1950 1100)           R180\n  C5       27p            C2,5-2       capacitor-wima (1700 500)            R270\n  C6       27p            C2,5-2       capacitor-wima (1250 250)            R90\n  D1       1N4148         DO35-10      diode          (900 200)             R0\n  IC1      16F84          DIL18        microchip      (1100 700)            R180\n  J1                      1X20         PINHEAD        (1050 1400)           R180\n  Q1                      QS           special        (1550 250)            R0\n  R1       2.2k           0207/10      rcl            (900 350)             R0\n  U1       78L05          TO92         linear         (1950 650)            R270\n\n  '''\n  ()\n  structured_partlist of /usr/share/eagle/projects/examples/singlesided/singlesided.sch\n  ([u'part', u'value', u'device', u'package', u'library', u'sheet'], [{u'sheet': u'1', u'package': u'E2,5-6', u'library': u'polcap', u'part': u'C1', u'value': u'10u', u'device': u'E2,5-6'}, {u'sheet': u'1', u'package': u'E2,5-6', u'library': u'polcap', u'part': u'C2', u'value': u'10u', u'device': u'E2,5-6'}, {u'sheet': u'1', u'package': u'C025-025X050', u'library': u'rcl', u'part': u'C3', u'value': u'10n', u'device': u'C-EU025-025X050'}, {u'sheet': u'1', u'package': u'C025-025X050', u'library': u'rcl', u'part': u'C4', u'value': u'10n', u'device': u'C-EU025-025X050'}, {u'sheet': u'1', u'package': u'C2,5-2', u'library': u'capacitor-wima', u'part': u'C5', u'value': u'27p', u'device': u'C2.5/2'}, {u'sheet': u'1', u'package': u'C2,5-2', u'library': u'capacitor-wima', u'part': u'C6', u'value': u'27p', u'device': u'C2.5/2'}, {u'sheet': u'1', u'package': u'DO35-10', u'library': u'diode', u'part': u'D1', u'value': u'1N4148', u'device': u'1N4148'}, {u'sheet': u'1', u'package': u'DIL18', u'library': u'microchip', u'part': u'IC1', u'value': u'16F84', u'device': u'PIC16F84AP'}, {u'sheet': u'1', u'package': u'1X20', u'library': u'PINHEAD', u'part': u'J1', u'value': u'', u'device': u'PINHD-1X20'}, {u'sheet': u'1', u'package': u'QS', u'library': u'special', u'part': u'Q1', u'value': u'', u'device': u'XTAL/S'}, {u'sheet': u'1', u'package': u'0207/10', u'library': u'rcl', u'part': u'R1', u'value': u'2.2k', u'device': u'R-EU_0207/10'}, {u'sheet': u'1', u'package': u'TO92', u'library': u'linear', u'part': u'U1', u'value': u'78L05', u'device': u'78LXXZ'}])\n  ()\n  structured_partlist of /usr/share/eagle/projects/examples/singlesided/singlesided.brd\n  ([u'part', u'value', u'package', u'library', u'position', u'orientation'], [{u'orientation': u'R0', u'package': u'E2,5-6', u'library': u'polcap', u'part': u'C1', u'value': u'10u', u'position': u'(1950 400)'}, {u'orientation': u'R0', u'package': u'E2,5-6', u'library': u'polcap', u'part': u'C2', u'value': u'10u', u'position': u'(1950 900)'}, {u'orientation': u'R180', u'package': u'C025-025X050', u'library': u'rcl', u'part': u'C3', u'value': u'10n', u'position': u'(1950 200)'}, {u'orientation': u'R180', u'package': u'C025-025X050', u'library': u'rcl', u'part': u'C4', u'value': u'10n', u'position': u'(1950 1100)'}, {u'orientation': u'R270', u'package': u'C2,5-2', u'library': u'capacitor-wima', u'part': u'C5', u'value': u'27p', u'position': u'(1700 500)'}, {u'orientation': u'R90', u'package': u'C2,5-2', u'library': u'capacitor-wima', u'part': u'C6', u'value': u'27p', u'position': u'(1250 250)'}, {u'orientation': u'R0', u'package': u'DO35-10', u'library': u'diode', u'part': u'D1', u'value': u'1N4148', u'position': u'(900 200)'}, {u'orientation': u'R180', u'package': u'DIL18', u'library': u'microchip', u'part': u'IC1', u'value': u'16F84', u'position': u'(1100 700)'}, {u'orientation': u'R180', u'package': u'1X20', u'library': u'PINHEAD', u'part': u'J1', u'value': u'', u'position': u'(1050 1400)'}, {u'orientation': u'R0', u'package': u'QS', u'library': u'special', u'part': u'Q1', u'value': u'', u'position': u'(1550 250)'}, {u'orientation': u'R0', u'package': u'0207/10', u'library': u'rcl', u'part': u'R1', u'value': u'2.2k', u'position': u'(900 350)'}, {u'orientation': u'R270', u'package': u'TO92', u'library': u'linear', u'part': u'U1', u'value': u'78L05', u'position': u'(1950 650)'}])\n  #-#\n\nExport schematic from command-line\n----------------------------------\n\nExport image\n++++++++++++\n\nStart the eagexp module directly with python::\n\n    python -m eagexp.image ~/.eagle/projects/examples/singlesided/singlesided.sch cli_sch.png\n\nResult:\n\n..  #-- sh('python -m eagexp.image ~/.eagle/projects/examples/singlesided/singlesided.sch cli_sch.png')--#\n..  #-#\n  \n.. image::  _img/cli_sch.png\n    :scale: 20%\n\nExport partlist\n+++++++++++++++\n\nStart the eagexp module directly with python::\n\n  #-- sh('python -m eagexp.partlist /usr/share/eagle/projects/examples/singlesided/singlesided.sch')--#\n  Partlist\n\n  Exported from singlesided.sch at 2016.03.05. 8:58\n\n  EAGLE Version 6.5.0 Copyright (c) 1988-2013 CadSoft\n\n  Assembly variant: \n\n  Part     Value          Device          Package      Library        Sheet\n\n  C1       10u            E2,5-6          E2,5-6       polcap         1\n  C2       10u            E2,5-6          E2,5-6       polcap         1\n  C3       10n            C-EU025-025X050 C025-025X050 rcl            1\n  C4       10n            C-EU025-025X050 C025-025X050 rcl            1\n  C5       27p            C2.5/2          C2,5-2       capacitor-wima 1\n  C6       27p            C2.5/2          C2,5-2       capacitor-wima 1\n  D1       1N4148         1N4148          DO35-10      diode          1\n  IC1      16F84          PIC16F84AP      DIL18        microchip      1\n  J1                      PINHD-1X20      1X20         PINHEAD        1\n  Q1                      XTAL/S          QS           special        1\n  R1       2.2k           R-EU_0207/10    0207/10      rcl            1\n  U1       78L05          78LXXZ          TO92         linear         1\n\n  #-#\n\nExport board from command-line\n------------------------------\n\nExport image\n++++++++++++\n\nStart the eagexp module directly with python::\n\n    python -m eagexp.image ~/.eagle/projects/examples/singlesided/singlesided.brd cli_brd.png\n\nResult:\n\n..  #-- sh('python -m eagexp.image ~/.eagle/projects/examples/singlesided/singlesided.brd cli_brd.png')--#\n..  #-#\n\n.. image::  _img/cli_brd.png\n\nExport 3D image\n+++++++++++++++\n\nStart the eagexp module directly with python::\n\n    python -m eagexp.image3d ~/.eagle/projects/examples/singlesided/singlesided.brd cli_3d.png\n\nResult:\n\n..  #-- sh('python -m eagexp.image3d ~/.eagle/projects/examples/singlesided/singlesided.brd cli_3d.png')--#\n..  #-#\n\n.. image::  _img/cli_3d.png\n\nExport partlist\n+++++++++++++++\n\nStart the eagexp module directly with python::\n\n  #-- sh('python -m eagexp.partlist /usr/share/eagle/projects/examples/singlesided/singlesided.brd')--#\n  Partlist\n\n  Exported from singlesided.brd at 2016.03.05. 8:59\n\n  EAGLE Version 6.5.0 Copyright (c) 1988-2013 CadSoft\n\n  Assembly variant: \n\n  Part     Value          Package      Library        Position (mil)        Orientation\n\n  C1       10u            E2,5-6       polcap         (1950 400)            R0\n  C2       10u            E2,5-6       polcap         (1950 900)            R0\n  C3       10n            C025-025X050 rcl            (1950 200)            R180\n  C4       10n            C025-025X050 rcl            (1950 1100)           R180\n  C5       27p            C2,5-2       capacitor-wima (1700 500)            R270\n  C6       27p            C2,5-2       capacitor-wima (1250 250)            R90\n  D1       1N4148         DO35-10      diode          (900 200)             R0\n  IC1      16F84          DIL18        microchip      (1100 700)            R180\n  J1                      1X20         PINHEAD        (1050 1400)           R180\n  Q1                      QS           special        (1550 250)            R0\n  R1       2.2k           0207/10      rcl            (900 350)             R0\n  U1       78L05          TO92         linear         (1950 650)            R270\n\n  #-#\n\n\nairwires\n--------\n\n::\n\n  #-- include('examples/airwires.py')--#\n  from eagexp.airwires import airwires\n\n  brd1 = '/usr/share/eagle/projects/examples/singlesided/singlesided.brd'\n  brd2 = '/usr/share/eagle/projects/examples/tutorial/demo2.brd'\n\n  if __name__ == \"__main__\":\n      print( airwires(brd1) )    \n      print( airwires(brd2) )\n\n  #-#\n\n::\n    \n  #-- sh('python -m eagexp.examples.airwires')--#\n  39\n  0\n  #-#\n    \n    \nCommand-line help\n=================\n\n::\n\n  #-- sh('python -m eagexp.image --help')--#\n  usage: image.py [-h] [-t TIMEOUT] [-p PALETTE] [-r RESOLUTION] [-l LAYERS]\n                  [-c COMMAND] [-m] [-s] [--debug] [--version]\n                  input output\n\n  Exporting eagle .sch or .brd file into image file. GUI is not displayed if\n  ``pyvirtualdisplay`` is installed. If export is blocked somehow (e.g. popup\n  window is displayed) then after timeout operation is canceled with exception.\n  Problem can be investigated by setting 'showgui' flag.\n\n  Exporting generates an image file with a format corresponding to the given\n  filename extension. The following image formats are available:\n\n  .bmp    Windows Bitmap Files\n\n  .png    Portable Network Graphics Files\n\n  .pbm    Portable Bitmap Files\n\n  .pgm    Portable Grayscale Bitmap Files\n\n  .ppm    Portable Pixelmap Files\n\n  .tif    TIFF Files\n\n  .xbm    X Bitmap Files\n\n  .xpm    X Pixmap Files\n\n  positional arguments:\n    input                 eagle .sch or .brd file name\n    output                image file name, existing file will be removed first!\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -t TIMEOUT, --timeout TIMEOUT\n                          operation is canceled after this timeout (sec)\n    -p PALETTE, --palette PALETTE\n                          background color [None,black,white,colored]\n    -r RESOLUTION, --resolution RESOLUTION\n                          image resolution in dpi (50..2400)\n    -l LAYERS, --layers LAYERS\n                          list, layers to be displayed ['top','pads']\n    -c COMMAND, --command COMMAND\n                          string, direct eagle command\n    -m, --mirror          Bool\n    -s, --showgui         eagle GUI is displayed\n    --debug               set logging level to DEBUG\n    --version             show program's version number and exit\n  #-#\n\n::\n\n  #-- sh('python -m eagexp.image3d --help')--#\n  usage: image3d.py [-h] [-s SIZE] [-p PCB_ROTATE] [-t TIMEOUT] [--showgui]\n                    [--debug] [--version]\n                    input output\n\n  Exporting eagle .brd file into 3D image file using Eagle3D and povray. GUI is\n  not displayed if ``pyvirtualdisplay`` is installed. If export is blocked\n  somehow (e.g. popup window is displayed) then after timeout operation is\n  canceled with exception. Problem can be investigated by setting 'showgui'\n  flag.\n\n  positional arguments:\n    input                 eagle .brd file name\n    output                image file name (.png)\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -s SIZE, --size SIZE  tuple(width, size), image size\n    -p PCB_ROTATE, --pcb-rotate PCB_ROTATE\n    -t TIMEOUT, --timeout TIMEOUT\n                          operation is canceled after this timeout (sec)\n    --showgui             eagle GUI is displayed\n    --debug               set logging level to DEBUG\n    --version             show program's version number and exit\n  #-#\n\n::\n\n  #-- sh('python -m eagexp.partlist --help')--#\n  usage: partlist.py [-h] [-t TIMEOUT] [-s] [--debug] [--version] input\n\n  print partlist text delivered by eagle\n\n  positional arguments:\n    input                 .sch or .brd file name\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -t TIMEOUT, --timeout TIMEOUT\n                          int\n    -s, --showgui         Bool, True -> do not hide eagle GUI\n    --debug               set logging level to DEBUG\n    --version             show program's version number and exit\n  #-#\n\n..  #-- sh('mv *.png _img')--#\n..  #-#\n\n\n.. _pip: https://pypi.python.org/pypi/pip\n.. _Xvfb: http://en.wikipedia.org/wiki/Xvfb\n.. _pyvirtualdisplay: https://github.com/ponty/PyVirtualDisplay\n.. _eagle: http://www.cadsoftusa.com/\n.. _povray: http://www.povray.org/\n.. _PIL: http://www.pythonware.com/library/pil/\n\n\n.. |Travis| image:: http://img.shields.io/travis/ponty/eagexp.svg\n   :target: https://travis-ci.org/ponty/eagexp/\n.. |Coveralls| image:: http://img.shields.io/coveralls/ponty/eagexp/master.svg\n   :target: https://coveralls.io/r/ponty/eagexp/\n.. |Latest Version| image:: https://img.shields.io/pypi/v/eagexp.svg\n   :target: https://pypi.python.org/pypi/eagexp/\n.. |Supported Python versions| image:: https://img.shields.io/pypi/pyversions/eagexp.svg\n   :target: https://pypi.python.org/pypi/eagexp/\n.. |License| image:: https://img.shields.io/pypi/l/eagexp.svg\n   :target: https://pypi.python.org/pypi/eagexp/\n.. |Downloads| image:: https://img.shields.io/pypi/dm/eagexp.svg\n   :target: https://pypi.python.org/pypi/eagexp/\n.. |Code Health| image:: https://landscape.io/github/ponty/eagexp/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/ponty/eagexp/master\n.. |Documentation| image:: https://readthedocs.org/projects/eagexp/badge/?version=latest\n   :target: http://eagexp.readthedocs.org", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ponty/eagexp", "keywords": "eagle", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "eagexp", "package_url": "https://pypi.org/project/eagexp/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/eagexp/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ponty/eagexp"}, "release_url": "https://pypi.org/project/eagexp/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "export eagle schematic or board to image or partlist", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>eagexp can export <a href=\"http://www.cadsoftusa.com/\" rel=\"nofollow\">eagle</a> partlist or image (2D/3D) of schematic or board.</p>\n<dl>\n<dt>Links:</dt>\n<dd><ul>\n<li>home: <a href=\"https://github.com/ponty/eagexp\" rel=\"nofollow\">https://github.com/ponty/eagexp</a></li>\n<li>documentation: <a href=\"http://eagexp.readthedocs.org\" rel=\"nofollow\">http://eagexp.readthedocs.org</a></li>\n<li>PYPI: <a href=\"https://pypi.python.org/pypi/eagexp\" rel=\"nofollow\">https://pypi.python.org/pypi/eagexp</a></li>\n</ul>\n</dd>\n</dl>\n<p><a href=\"https://travis-ci.org/ponty/eagexp/\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e55e17e60ae269715af63e47be55ea294aa7c1e0/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f706f6e74792f6561676578702e737667\"></a> <a href=\"https://coveralls.io/r/ponty/eagexp/\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a6ddaa394e7320909ba8b1850da410192c442f6/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f706f6e74792f6561676578702f6d61737465722e737667\"></a> <a href=\"https://pypi.python.org/pypi/eagexp/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/369e364ffa863cb04eb9fbff6cf897a7d3aa4d4a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6561676578702e737667\"></a> <a href=\"https://pypi.python.org/pypi/eagexp/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea88109b7cc6549dbfc429cdcdae809b9e29bde6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6561676578702e737667\"></a> <a href=\"https://pypi.python.org/pypi/eagexp/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c1dab5e06b476d7f888c869a6fc07711bbca0065/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6561676578702e737667\"></a> <a href=\"https://pypi.python.org/pypi/eagexp/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e1665e78b41281c330e3ccad2459e4f6c9be452/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6561676578702e737667\"></a> <a href=\"https://landscape.io/github/ponty/eagexp/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3bf8e58d903abbb56adc9efeca99998d4cc7fc9c/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f706f6e74792f6561676578702f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a> <a href=\"http://eagexp.readthedocs.org\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3e375a7f5e2085d75f00fba04a24a400ea608262/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6561676578702f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<dl>\n<dt>Features:</dt>\n<dd><ul>\n<li>written in python</li>\n<li>it can be used as library or as a command line program</li>\n<li>background processing (only if <a href=\"http://en.wikipedia.org/wiki/Xvfb\" rel=\"nofollow\">Xvfb</a> and <a href=\"https://github.com/ponty/PyVirtualDisplay\" rel=\"nofollow\">pyvirtualdisplay</a> are installed)</li>\n<li>timeout</li>\n<li>3D image export using Eagle3D and <a href=\"http://www.povray.org/\" rel=\"nofollow\">povray</a></li>\n<li>calculate airwires</li>\n</ul>\n</dd>\n<dt>Known problems:</dt>\n<dd><ul>\n<li>slow: eagle is opened and closed for each export</li>\n<li>high DPI does not work (memory problem?)</li>\n<li>export can be blocked by Eagle -&gt; timeout</li>\n<li>3D image export has a lot of options which are not supported</li>\n</ul>\n</dd>\n</dl>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; from eagexp import image, partlist\n&gt;&gt;&gt; brd='~/.eagle/projects/examples/singlesided/singlesided.brd'\n&gt;&gt;&gt; image.export_image(brd, 'brd.png', resolution=600)\n&gt;&gt;&gt; print partlist.raw_partlist(brd)\n</pre>\n</blockquote>\n</div>\n<div id=\"how-it-works\">\n<h2>How it works</h2>\n<ol>\n<li>start <a href=\"http://en.wikipedia.org/wiki/Xvfb\" rel=\"nofollow\">Xvfb</a> headless X server using <a href=\"https://github.com/ponty/PyVirtualDisplay\" rel=\"nofollow\">pyvirtualdisplay</a></li>\n<li>redirect eagle display to Xvfb server by setting $DISPLAY variable.</li>\n<li>start <a href=\"http://www.cadsoftusa.com/\" rel=\"nofollow\">eagle</a> with EXPORT and QUIT commands</li>\n</ol>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"general\">\n<h3>General</h3>\n<blockquote>\n<ul>\n<li><p>install <a href=\"http://www.cadsoftusa.com/\" rel=\"nofollow\">eagle</a></p>\n</li>\n<li><p>install <a href=\"http://www.povray.org/\" rel=\"nofollow\">povray</a> (optional for 3D)</p>\n</li>\n<li><p>install <a href=\"https://pypi.python.org/pypi/pip\" rel=\"nofollow\">pip</a></p>\n</li>\n<li><p>install <a href=\"http://www.pythonware.com/library/pil/\" rel=\"nofollow\">PIL</a></p>\n</li>\n<li><p>install <a href=\"https://github.com/ponty/PyVirtualDisplay\" rel=\"nofollow\">pyvirtualdisplay</a> , <a href=\"http://en.wikipedia.org/wiki/Xvfb\" rel=\"nofollow\">Xvfb</a></p>\n</li>\n<li><p>install the program:</p>\n<pre># as root\npip install eagexp\n</pre>\n</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"ubuntu-14-04\">\n<h3>Ubuntu 14.04</h3>\n<pre>sudo apt-get install python-pip eagle povray  python-pil xvfb xdotool\nsudo pip install eagexp\n</pre>\n</div>\n<div id=\"uninstall\">\n<h3>Uninstall</h3>\n<pre># as root\npip uninstall eagexp\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"export-from-python-code\">\n<h3>Export from python code</h3>\n<p>Example:</p>\n<pre>#-- include('examples/image_example.py')--#\n'''\nExample for image export with various options\n'''\n\nfrom eagexp import image\n\nbrd = '/usr/share/eagle/projects/examples/tutorial/demo2.brd'\n\nif __name__ == \"__main__\":\n    # set resolution in DPI\n    image.export_image(brd, 'api_brd_50.png', resolution=50)\n    image.export_image(brd, 'api_brd_100.png', resolution=100)\n    image.export_image(brd, 'api_brd_150.png', resolution=150)\n\n    # mirror image\n    image.export_image(brd, 'api_brd_mirror.png', mirror=True)\n\n    # display only 2 layers\n    image.export_image(brd, 'api_brd_layer.png', layers=['dimension', 'pads'])\n\n    # display layer using eagle command\n    image.export_image(\n        brd, 'api_brd_command.png', command='display none dimension')\n#-#\n</pre>\n<p>Start the example program:</p>\n<pre>python -m eagexp.examples.image_example\n</pre>\n<p>Result:</p>\n<img alt=\"_img/api_brd_50.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2f610021432258fb7cccfac10cf03943968704d/5f696d672f6170695f6272645f35302e706e67\">\n<img alt=\"_img/api_brd_100.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d2c947be3f8ae32293026bd053db27baf2cd644/5f696d672f6170695f6272645f3130302e706e67\">\n<img alt=\"_img/api_brd_150.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a068263be574d470f5a851473014f3969732c06/5f696d672f6170695f6272645f3135302e706e67\">\n<img alt=\"_img/api_brd_mirror.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08eca70e37423e5986524754653d6bbd5b23ffd6/5f696d672f6170695f6272645f6d6972726f722e706e67\">\n<img alt=\"_img/api_brd_layer.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e439fe5e9b565bf684e6ed88bf45d74b589670bc/5f696d672f6170695f6272645f6c617965722e706e67\">\n<img alt=\"_img/api_brd_command.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c55d58fed88b3eff1eca3b89602df2f02968b308/5f696d672f6170695f6272645f636f6d6d616e642e706e67\">\n<p>Example for 3D:</p>\n<pre>#-- include('examples/image3d_example.py')--#\n'''\nExample for 3D image export\n'''\nfrom eagexp import image3d\n\nbrd = '/usr/share/eagle/projects/examples/tutorial/demo2.brd'\n\nif __name__ == \"__main__\":\n    image3d.export_image3d(brd, 'api_3d.png')\n\n    # size\n    image3d.export_image3d(brd, 'api_3d_size1.png', size=(50, 50))\n    image3d.export_image3d(brd, 'api_3d_size2.png', size=(50, 100))\n    image3d.export_image3d(brd, 'api_3d_size3.png', size=(100, 50))\n\n    # rotate\n    image3d.export_image3d(\n        brd, 'api_3d_xrot.png', pcb_rotate=(180, 0, 0), size=(200, 150))\n    image3d.export_image3d(\n        brd, 'api_3d_yrot1.png', pcb_rotate=(0, 45, 0), size=(200, 150))\n    image3d.export_image3d(\n        brd, 'api_3d_yrot2.png', pcb_rotate=(0, 90, 0), size=(200, 150))\n    image3d.export_image3d(\n        brd, 'api_3d_yrot3.png', pcb_rotate=(0, 135, 0), size=(200, 150))\n#-#\n</pre>\n<p>Start the example program:</p>\n<pre>python -m eagexp.examples.image3d_example\n</pre>\n<p>Result:</p>\n<img alt=\"_img/api_3d.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30ca98bc07988d0348b6f1885f89b08c2e6a535e/5f696d672f6170695f33642e706e67\">\n<img alt=\"_img/api_3d_xrot.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f444c162246e6416818036bb8862c71afa8d716/5f696d672f6170695f33645f78726f742e706e67\">\n<img alt=\"_img/api_3d_yrot1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1d5a1903486cd795b9e8236353f9cd86670c8123/5f696d672f6170695f33645f79726f74312e706e67\">\n<img alt=\"_img/api_3d_yrot2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc8d5358fac3613c1bb4de016958e3d2ad56809e/5f696d672f6170695f33645f79726f74322e706e67\">\n<img alt=\"_img/api_3d_yrot3.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c4dcc427d134b01eac4112f8a991837b085637a/5f696d672f6170695f33645f79726f74332e706e67\">\n<img alt=\"_img/api_3d_size1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0be19cd7aa336bdd1ce702e4332346460d4b34a/5f696d672f6170695f33645f73697a65312e706e67\">\n<img alt=\"_img/api_3d_size2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/447c3d582c96ea8918ee224e5729f418660065c3/5f696d672f6170695f33645f73697a65322e706e67\">\n<img alt=\"_img/api_3d_size3.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b447d04f39472a0ed083a85adf310a51de5f9ccb/5f696d672f6170695f33645f73697a65332e706e67\">\n<p>Example for partlist export:</p>\n<pre>#-- include('examples/partlist_example.py')--#\nfrom eagexp import partlist\n\nsch = '/usr/share/eagle/projects/examples/singlesided/singlesided.sch'\nbrd = '/usr/share/eagle/projects/examples/singlesided/singlesided.brd'\n\nif __name__ == \"__main__\":\n    print( 'raw_partlist of ' + sch )\n    print( \"'''\" )\n    print( partlist.raw_partlist(sch) )\n    print( \"'''\" )\n\n    print()\n\n    print( 'raw_partlist of ' + brd )\n    print( \"'''\" )\n    print( partlist.raw_partlist(brd) )\n    print( \"'''\" )\n\n    print()\n\n    print( 'structured_partlist of ' + sch )\n    print( partlist.structured_partlist(sch) )\n\n    print()\n\n    print( 'structured_partlist of ' + brd )\n    print( partlist.structured_partlist(brd) )\n#-#\n</pre>\n<p>Start the example program:</p>\n<pre>#-- sh('python -m eagexp.examples.partlist_example')--#\nraw_partlist of /usr/share/eagle/projects/examples/singlesided/singlesided.sch\n'''\nPartlist\n\nExported from singlesided.sch at 2016.03.05. 8:58\n\nEAGLE Version 6.5.0 Copyright (c) 1988-2013 CadSoft\n\nAssembly variant:\n\nPart     Value          Device          Package      Library        Sheet\n\nC1       10u            E2,5-6          E2,5-6       polcap         1\nC2       10u            E2,5-6          E2,5-6       polcap         1\nC3       10n            C-EU025-025X050 C025-025X050 rcl            1\nC4       10n            C-EU025-025X050 C025-025X050 rcl            1\nC5       27p            C2.5/2          C2,5-2       capacitor-wima 1\nC6       27p            C2.5/2          C2,5-2       capacitor-wima 1\nD1       1N4148         1N4148          DO35-10      diode          1\nIC1      16F84          PIC16F84AP      DIL18        microchip      1\nJ1                      PINHD-1X20      1X20         PINHEAD        1\nQ1                      XTAL/S          QS           special        1\nR1       2.2k           R-EU_0207/10    0207/10      rcl            1\nU1       78L05          78LXXZ          TO92         linear         1\n\n'''\n()\nraw_partlist of /usr/share/eagle/projects/examples/singlesided/singlesided.brd\n'''\nPartlist\n\nExported from singlesided.brd at 2016.03.05. 8:58\n\nEAGLE Version 6.5.0 Copyright (c) 1988-2013 CadSoft\n\nAssembly variant:\n\nPart     Value          Package      Library        Position (mil)        Orientation\n\nC1       10u            E2,5-6       polcap         (1950 400)            R0\nC2       10u            E2,5-6       polcap         (1950 900)            R0\nC3       10n            C025-025X050 rcl            (1950 200)            R180\nC4       10n            C025-025X050 rcl            (1950 1100)           R180\nC5       27p            C2,5-2       capacitor-wima (1700 500)            R270\nC6       27p            C2,5-2       capacitor-wima (1250 250)            R90\nD1       1N4148         DO35-10      diode          (900 200)             R0\nIC1      16F84          DIL18        microchip      (1100 700)            R180\nJ1                      1X20         PINHEAD        (1050 1400)           R180\nQ1                      QS           special        (1550 250)            R0\nR1       2.2k           0207/10      rcl            (900 350)             R0\nU1       78L05          TO92         linear         (1950 650)            R270\n\n'''\n()\nstructured_partlist of /usr/share/eagle/projects/examples/singlesided/singlesided.sch\n([u'part', u'value', u'device', u'package', u'library', u'sheet'], [{u'sheet': u'1', u'package': u'E2,5-6', u'library': u'polcap', u'part': u'C1', u'value': u'10u', u'device': u'E2,5-6'}, {u'sheet': u'1', u'package': u'E2,5-6', u'library': u'polcap', u'part': u'C2', u'value': u'10u', u'device': u'E2,5-6'}, {u'sheet': u'1', u'package': u'C025-025X050', u'library': u'rcl', u'part': u'C3', u'value': u'10n', u'device': u'C-EU025-025X050'}, {u'sheet': u'1', u'package': u'C025-025X050', u'library': u'rcl', u'part': u'C4', u'value': u'10n', u'device': u'C-EU025-025X050'}, {u'sheet': u'1', u'package': u'C2,5-2', u'library': u'capacitor-wima', u'part': u'C5', u'value': u'27p', u'device': u'C2.5/2'}, {u'sheet': u'1', u'package': u'C2,5-2', u'library': u'capacitor-wima', u'part': u'C6', u'value': u'27p', u'device': u'C2.5/2'}, {u'sheet': u'1', u'package': u'DO35-10', u'library': u'diode', u'part': u'D1', u'value': u'1N4148', u'device': u'1N4148'}, {u'sheet': u'1', u'package': u'DIL18', u'library': u'microchip', u'part': u'IC1', u'value': u'16F84', u'device': u'PIC16F84AP'}, {u'sheet': u'1', u'package': u'1X20', u'library': u'PINHEAD', u'part': u'J1', u'value': u'', u'device': u'PINHD-1X20'}, {u'sheet': u'1', u'package': u'QS', u'library': u'special', u'part': u'Q1', u'value': u'', u'device': u'XTAL/S'}, {u'sheet': u'1', u'package': u'0207/10', u'library': u'rcl', u'part': u'R1', u'value': u'2.2k', u'device': u'R-EU_0207/10'}, {u'sheet': u'1', u'package': u'TO92', u'library': u'linear', u'part': u'U1', u'value': u'78L05', u'device': u'78LXXZ'}])\n()\nstructured_partlist of /usr/share/eagle/projects/examples/singlesided/singlesided.brd\n([u'part', u'value', u'package', u'library', u'position', u'orientation'], [{u'orientation': u'R0', u'package': u'E2,5-6', u'library': u'polcap', u'part': u'C1', u'value': u'10u', u'position': u'(1950 400)'}, {u'orientation': u'R0', u'package': u'E2,5-6', u'library': u'polcap', u'part': u'C2', u'value': u'10u', u'position': u'(1950 900)'}, {u'orientation': u'R180', u'package': u'C025-025X050', u'library': u'rcl', u'part': u'C3', u'value': u'10n', u'position': u'(1950 200)'}, {u'orientation': u'R180', u'package': u'C025-025X050', u'library': u'rcl', u'part': u'C4', u'value': u'10n', u'position': u'(1950 1100)'}, {u'orientation': u'R270', u'package': u'C2,5-2', u'library': u'capacitor-wima', u'part': u'C5', u'value': u'27p', u'position': u'(1700 500)'}, {u'orientation': u'R90', u'package': u'C2,5-2', u'library': u'capacitor-wima', u'part': u'C6', u'value': u'27p', u'position': u'(1250 250)'}, {u'orientation': u'R0', u'package': u'DO35-10', u'library': u'diode', u'part': u'D1', u'value': u'1N4148', u'position': u'(900 200)'}, {u'orientation': u'R180', u'package': u'DIL18', u'library': u'microchip', u'part': u'IC1', u'value': u'16F84', u'position': u'(1100 700)'}, {u'orientation': u'R180', u'package': u'1X20', u'library': u'PINHEAD', u'part': u'J1', u'value': u'', u'position': u'(1050 1400)'}, {u'orientation': u'R0', u'package': u'QS', u'library': u'special', u'part': u'Q1', u'value': u'', u'position': u'(1550 250)'}, {u'orientation': u'R0', u'package': u'0207/10', u'library': u'rcl', u'part': u'R1', u'value': u'2.2k', u'position': u'(900 350)'}, {u'orientation': u'R270', u'package': u'TO92', u'library': u'linear', u'part': u'U1', u'value': u'78L05', u'position': u'(1950 650)'}])\n#-#\n</pre>\n</div>\n<div id=\"export-schematic-from-command-line\">\n<h3>Export schematic from command-line</h3>\n<div id=\"export-image\">\n<h4>Export image</h4>\n<p>Start the eagexp module directly with python:</p>\n<pre>python -m eagexp.image ~/.eagle/projects/examples/singlesided/singlesided.sch cli_sch.png\n</pre>\n<p>Result:</p>\n<img alt=\"_img/cli_sch.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15ac648419c8cfdd2f3fbf3e8acbef684f045e3a/5f696d672f636c695f7363682e706e67\">\n</div>\n<div id=\"export-partlist\">\n<h4>Export partlist</h4>\n<p>Start the eagexp module directly with python:</p>\n<pre>#-- sh('python -m eagexp.partlist /usr/share/eagle/projects/examples/singlesided/singlesided.sch')--#\nPartlist\n\nExported from singlesided.sch at 2016.03.05. 8:58\n\nEAGLE Version 6.5.0 Copyright (c) 1988-2013 CadSoft\n\nAssembly variant:\n\nPart     Value          Device          Package      Library        Sheet\n\nC1       10u            E2,5-6          E2,5-6       polcap         1\nC2       10u            E2,5-6          E2,5-6       polcap         1\nC3       10n            C-EU025-025X050 C025-025X050 rcl            1\nC4       10n            C-EU025-025X050 C025-025X050 rcl            1\nC5       27p            C2.5/2          C2,5-2       capacitor-wima 1\nC6       27p            C2.5/2          C2,5-2       capacitor-wima 1\nD1       1N4148         1N4148          DO35-10      diode          1\nIC1      16F84          PIC16F84AP      DIL18        microchip      1\nJ1                      PINHD-1X20      1X20         PINHEAD        1\nQ1                      XTAL/S          QS           special        1\nR1       2.2k           R-EU_0207/10    0207/10      rcl            1\nU1       78L05          78LXXZ          TO92         linear         1\n\n#-#\n</pre>\n</div>\n</div>\n<div id=\"export-board-from-command-line\">\n<h3>Export board from command-line</h3>\n<div id=\"id1\">\n<h4>Export image</h4>\n<p>Start the eagexp module directly with python:</p>\n<pre>python -m eagexp.image ~/.eagle/projects/examples/singlesided/singlesided.brd cli_brd.png\n</pre>\n<p>Result:</p>\n<img alt=\"_img/cli_brd.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5d19650ed80f25c1e963f7c4ab038b446cba5f79/5f696d672f636c695f6272642e706e67\">\n</div>\n<div id=\"export-3d-image\">\n<h4>Export 3D image</h4>\n<p>Start the eagexp module directly with python:</p>\n<pre>python -m eagexp.image3d ~/.eagle/projects/examples/singlesided/singlesided.brd cli_3d.png\n</pre>\n<p>Result:</p>\n<img alt=\"_img/cli_3d.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4fd657382fcddac6b563bb3381d591ecd0e0e663/5f696d672f636c695f33642e706e67\">\n</div>\n<div id=\"id2\">\n<h4>Export partlist</h4>\n<p>Start the eagexp module directly with python:</p>\n<pre>#-- sh('python -m eagexp.partlist /usr/share/eagle/projects/examples/singlesided/singlesided.brd')--#\nPartlist\n\nExported from singlesided.brd at 2016.03.05. 8:59\n\nEAGLE Version 6.5.0 Copyright (c) 1988-2013 CadSoft\n\nAssembly variant:\n\nPart     Value          Package      Library        Position (mil)        Orientation\n\nC1       10u            E2,5-6       polcap         (1950 400)            R0\nC2       10u            E2,5-6       polcap         (1950 900)            R0\nC3       10n            C025-025X050 rcl            (1950 200)            R180\nC4       10n            C025-025X050 rcl            (1950 1100)           R180\nC5       27p            C2,5-2       capacitor-wima (1700 500)            R270\nC6       27p            C2,5-2       capacitor-wima (1250 250)            R90\nD1       1N4148         DO35-10      diode          (900 200)             R0\nIC1      16F84          DIL18        microchip      (1100 700)            R180\nJ1                      1X20         PINHEAD        (1050 1400)           R180\nQ1                      QS           special        (1550 250)            R0\nR1       2.2k           0207/10      rcl            (900 350)             R0\nU1       78L05          TO92         linear         (1950 650)            R270\n\n#-#\n</pre>\n</div>\n</div>\n<div id=\"airwires\">\n<h3>airwires</h3>\n<pre>#-- include('examples/airwires.py')--#\nfrom eagexp.airwires import airwires\n\nbrd1 = '/usr/share/eagle/projects/examples/singlesided/singlesided.brd'\nbrd2 = '/usr/share/eagle/projects/examples/tutorial/demo2.brd'\n\nif __name__ == \"__main__\":\n    print( airwires(brd1) )\n    print( airwires(brd2) )\n\n#-#\n</pre>\n<pre>#-- sh('python -m eagexp.examples.airwires')--#\n39\n0\n#-#\n</pre>\n</div>\n</div>\n<div id=\"command-line-help\">\n<h2>Command-line help</h2>\n<pre>#-- sh('python -m eagexp.image --help')--#\nusage: image.py [-h] [-t TIMEOUT] [-p PALETTE] [-r RESOLUTION] [-l LAYERS]\n                [-c COMMAND] [-m] [-s] [--debug] [--version]\n                input output\n\nExporting eagle .sch or .brd file into image file. GUI is not displayed if\n``pyvirtualdisplay`` is installed. If export is blocked somehow (e.g. popup\nwindow is displayed) then after timeout operation is canceled with exception.\nProblem can be investigated by setting 'showgui' flag.\n\nExporting generates an image file with a format corresponding to the given\nfilename extension. The following image formats are available:\n\n.bmp    Windows Bitmap Files\n\n.png    Portable Network Graphics Files\n\n.pbm    Portable Bitmap Files\n\n.pgm    Portable Grayscale Bitmap Files\n\n.ppm    Portable Pixelmap Files\n\n.tif    TIFF Files\n\n.xbm    X Bitmap Files\n\n.xpm    X Pixmap Files\n\npositional arguments:\n  input                 eagle .sch or .brd file name\n  output                image file name, existing file will be removed first!\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TIMEOUT, --timeout TIMEOUT\n                        operation is canceled after this timeout (sec)\n  -p PALETTE, --palette PALETTE\n                        background color [None,black,white,colored]\n  -r RESOLUTION, --resolution RESOLUTION\n                        image resolution in dpi (50..2400)\n  -l LAYERS, --layers LAYERS\n                        list, layers to be displayed ['top','pads']\n  -c COMMAND, --command COMMAND\n                        string, direct eagle command\n  -m, --mirror          Bool\n  -s, --showgui         eagle GUI is displayed\n  --debug               set logging level to DEBUG\n  --version             show program's version number and exit\n#-#\n</pre>\n<pre>#-- sh('python -m eagexp.image3d --help')--#\nusage: image3d.py [-h] [-s SIZE] [-p PCB_ROTATE] [-t TIMEOUT] [--showgui]\n                  [--debug] [--version]\n                  input output\n\nExporting eagle .brd file into 3D image file using Eagle3D and povray. GUI is\nnot displayed if ``pyvirtualdisplay`` is installed. If export is blocked\nsomehow (e.g. popup window is displayed) then after timeout operation is\ncanceled with exception. Problem can be investigated by setting 'showgui'\nflag.\n\npositional arguments:\n  input                 eagle .brd file name\n  output                image file name (.png)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SIZE, --size SIZE  tuple(width, size), image size\n  -p PCB_ROTATE, --pcb-rotate PCB_ROTATE\n  -t TIMEOUT, --timeout TIMEOUT\n                        operation is canceled after this timeout (sec)\n  --showgui             eagle GUI is displayed\n  --debug               set logging level to DEBUG\n  --version             show program's version number and exit\n#-#\n</pre>\n<pre>#-- sh('python -m eagexp.partlist --help')--#\nusage: partlist.py [-h] [-t TIMEOUT] [-s] [--debug] [--version] input\n\nprint partlist text delivered by eagle\n\npositional arguments:\n  input                 .sch or .brd file name\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -t TIMEOUT, --timeout TIMEOUT\n                        int\n  -s, --showgui         Bool, True -&gt; do not hide eagle GUI\n  --debug               set logging level to DEBUG\n  --version             show program's version number and exit\n#-#\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2588262, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "3890dd212444ec6321dc5174cd7bdfad", "sha256": "e4de0afbb9e2cde5d20a93a55d3b9e6b2f9452338371afccb16422451e31fcd8"}, "downloads": -1, "filename": "eagexp-0.0.3.tar.gz", "has_sig": false, "md5_digest": "3890dd212444ec6321dc5174cd7bdfad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111849, "upload_time": "2012-01-26T22:54:32", "upload_time_iso_8601": "2012-01-26T22:54:32.760097Z", "url": "https://files.pythonhosted.org/packages/76/bf/031b5a4ddd2e83babf43308bf17679d728099385df19000e48a894b71460/eagexp-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "5e5a8f6ebff03f40bf017840bcad8f58", "sha256": "4eba9a9b5dedb1309f7b9265d2bcf8bd2525a91c05d20394099c265de7f9f783"}, "downloads": -1, "filename": "eagexp-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5e5a8f6ebff03f40bf017840bcad8f58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1193231, "upload_time": "2012-02-06T17:55:24", "upload_time_iso_8601": "2012-02-06T17:55:24.642024Z", "url": "https://files.pythonhosted.org/packages/e6/c8/9a63fc93843be2ab14d61316be1af98852577ac345025a092c9263a6cf75/eagexp-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "8dad1642b914fe7d521571c3f36f6d8a", "sha256": "968779d59ddb40068c8ab992abfe166220e99aaea1e8ec7d33ec1d5769ca5340"}, "downloads": -1, "filename": "eagexp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8dad1642b914fe7d521571c3f36f6d8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1165027, "upload_time": "2012-12-04T17:22:48", "upload_time_iso_8601": "2012-12-04T17:22:48.454391Z", "url": "https://files.pythonhosted.org/packages/0d/19/fb5cb8a5f1600c706cd7080bcc7f9b28fea26f6b842a36cbebe926ae2feb/eagexp-0.1.0.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "055a754ffae2836458c941729cef36ef", "sha256": "f1686470a43ab909f5b3ba475692f929ce39440fad523e44be6313bd49a6b123"}, "downloads": -1, "filename": "eagexp-0.2.tar.gz", "has_sig": false, "md5_digest": "055a754ffae2836458c941729cef36ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1439671, "upload_time": "2016-03-05T17:27:24", "upload_time_iso_8601": "2016-03-05T17:27:24.832070Z", "url": "https://files.pythonhosted.org/packages/df/7d/8730561ff38bbde5c60ec4b7d0cda40020fde895c42ce03f3b02e9fcff9b/eagexp-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "177880d3e04fc1126a6bcdc9746ce88e", "sha256": "939c0ae40004b38ff413fbe71860639522bb8d61a80c6983c3e083fac4fb5f5c"}, "downloads": -1, "filename": "eagexp-0.2.1.tar.gz", "has_sig": false, "md5_digest": "177880d3e04fc1126a6bcdc9746ce88e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1439715, "upload_time": "2017-01-20T19:08:17", "upload_time_iso_8601": "2017-01-20T19:08:17.046907Z", "url": "https://files.pythonhosted.org/packages/e6/60/cc8a83af167c248b6e5d07f8e5a5d9a9ef395c58a65525f54b5f7b912830/eagexp-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "177880d3e04fc1126a6bcdc9746ce88e", "sha256": "939c0ae40004b38ff413fbe71860639522bb8d61a80c6983c3e083fac4fb5f5c"}, "downloads": -1, "filename": "eagexp-0.2.1.tar.gz", "has_sig": false, "md5_digest": "177880d3e04fc1126a6bcdc9746ce88e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1439715, "upload_time": "2017-01-20T19:08:17", "upload_time_iso_8601": "2017-01-20T19:08:17.046907Z", "url": "https://files.pythonhosted.org/packages/e6/60/cc8a83af167c248b6e5d07f8e5a5d9a9ef395c58a65525f54b5f7b912830/eagexp-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:33 2020"}