{"info": {"author": "Adam Hughes", "author_email": "hughesadam87@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Natural Language :: English", "Programming Language :: Python :: 2", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Medical Science Apps.", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization"], "description": ".. image:: https://github.com/hugadams/PAME/blob/master/screenshots/gui.png\n   :height: 100px\n   :width: 200 px\n   :scale: 50 %\n\n==========================================\nPAME: Plasmonic Assay Modeling Environment\n==========================================\n\nGraphical Python application for simulating plasmonic biosensors, particularly fiberoptic biosensors with nanoparticles.\n\nCheck out the `PAME preprint`_.\n\n    .. _PAME preprint : https://linktonowhere\n\nTutorials\n=========\n\nIPython Notebooks\n-----------------\nSome of these are traditional tutorials, others are examples of analyzed data from our lab.\n\n    - `Simultation Parsing Tutorial <https://github.com/hugadams/PAME/blob/master/Simulations/simtutorial.ipynb>`_\n    - `Gold Nanoparticle Self-Assembly Compared to Experimental Data <https://github.com/hugadams/PAME/blob/master/Notebooks/SAM_pametest.ipynb>`_\n        - Experimental datasets are preloaded in `scikit-spectra library <http://hugadams.github.io/scikit-spectra/>`_\n    - `Simulating a Refractometer <https://github.com/hugadams/PAME/blob/master/Notebooks/glycerin_simulation.ipynb>`_\n    - `Protein binding to gold nanoparticle film <https://github.com/hugadams/PAME/blob/master/Notebooks/bsa_shell_sim.ipynb>`_\n    - `Gold and Silver Nanoparticle Combined Layer 1 <https://github.com/hugadams/PAME/blob/master/Notebooks/AuAg_protein.ipynb>`_\n    - `Gold and Silver Nanoparticle Combined Layer 2 <https://github.com/hugadams/PAME/blob/master/Notebooks/AuAg_sameheight_protein.ipynb>`_\n\nScreencasts\n-----------\nTutorials are cumulative (eg screencast 2 picks up where 1 ends).\n\nPAME's tutorials are a series of screencasts.  \n    - Screencast 1: `Introduction to PAME- Anti-reflective coatings <https://youtube.com/watch?v=Na3vK8WsBHI>`_\n    - Screencast 2: `Introduction to Nanoparticles <https://www.youtube.com/watch?v=ykF67bfCSlc>`_\n    - Screencast 3: `Nanoparticle film with silica shell <https://www.youtube.com/watch?v=58y53AiB1GQ>`_\n    - Screencast 4: `Nanoparticle film with protein shell <https://www.youtube.com/watch?v=EZzoOMxI3ss>`_\n    - Screencast 5: `Intro to Fiberoptic Dip Sesnosr <https://www.youtube.com/watch?v=1xOxBkiCICs>`_\n    - Screencast 6: `Multiplexed Dip Sensor with Gold and Silver Nanoparticles <https://www.youtube.com/watch?v=r0k9215ctfw>`_\n    - Screencast 7: `Gold Nanoparticle Fiber Dip Sensor Simulation <https://www.youtube.com/watch?v=Q6H_f46dZZc>`_ \n    - Screencast 8: `Dip Sensor with Organosilane Layer <https://www.youtube.com/watch?v=FzMon52iHQo>`_  \n\nInstallation\n============\n\nBinaries (ie .exe one-click use files) are `under development <https://bitbucket.org/anthony_tuininga/cx_freeze/issue/127/collectionssys-error#comment-15016355>`_, but for now, PAME must be installed as a python library and launched through the command line.  Anyone interested in helping to develop binaries, please contact.  \n\nPAME makes heavy use of the `SciPy Stack (numpy, ipython etc...) <http://www.scipy.org/install.html>`_, and so it has a lot of dependencies.  Instead of using a bare python distribution, I'd recommend using a scientific python distribution that comes pre-loaded with the SciPy Stack (eg `canopy <https://store.enthought.com/>`_ or `conda <https://store.continuum.io/cshop/anaconda/>`_) or want to install PAME into a clean environment (this is suggested), see the `Conda` installation directions.  Otherwise, you can use `pip install` as usual.\n\n\nPyPI\n----\n\nSince PAME requires many dependencies, this may upgrade numpy, scipy, ipython and other core scipy libraries.\n\nTo install from pip\n\n    pip install PAME\n\nIf this gives you an error `(maybe for this reason) <http://stackoverflow.com/questions/30202110/pip-install-error-with-requirements>`_, do the following.\n\nDownload the `PAME sourcecode <https://github.com/hugadams/PAME>`_ as a zipfile and unzip.  `cd` into the unzipped directory\n\n   cd /path/to/PAME\n\nInstall from source\n\n   python setup.py install\n\nInstall the dependencies from pip\n\n   pip install -r requirements.txt\n\nYou also may need to `install the QT backend <http://pyqt.sourceforge.net/Docs/PyQt4/installation.html>` if it's not already configured.\n\n\n\nConda\n-----\nI use `anaconda` because it has an excellent virtual environment manager.  The advantage is here you can installed a clean working environment only for PAME without altering any of your other packages.  For a tutorial on conda virtual environments, `check this out <http://www.continuum.io/blog/conda>`_.  To configure a PAME environment in anaconda, first install anaconda and then do the following:\n\n\n1. Create a clean virtual environment (mine is named PAMEvenv)\n\n     conda create -n PAMEvenv anaconda\n\nThis installs several required scientific packages including `numpy`, `pandas` and `ipython`.\n\n2. Activate the environment\n\n     source activate PAMEvenv\n\n3. Install pame (download pame source code and unzip, then navigate into directory)\n\n     cd /path/to/PAMEdirectory\n     python setup.py install\n\n4. Conda install/upgrade dependencies\n\n     conda install traits traitsui mayavi chaco mpmath PIL\n\n5. To deactivate the virtual environment\n\n     source deactivate\n\nDependencies\n------------\n\nThe full list of PAME's dependencies is in the `requirements.txt <https://github.com/hugadams/PAME/blob/master/requirements.txt>`_ file.  You also may need to `install the QT backend <http://pyqt.sourceforge.net/Docs/PyQt4/installation.html>`.\n\n\nSupport\n=======\n\nQuestions?  Interested in developing?  Message: pame_env@googlegroups.com, or contact me directly (hughesadam87@gmail.com, @hughesadam87)\n\n\n\nWeb Utilitiles\n==============\n\nPAME doesn't run in the browser.  Check out these related tools that do!\n\n - `Mie-coefficients <http://nordlander.rice.edu/miewidget>`_\n\n - `Film Metrics (Thin Film Solver) <https://www.filmetrics.com/reflectance-calculator>`_\n\n - `Mie with shells and other tools <http://nanocomposix.com/pages/tools>`_\n\nLicense\n=======\n\n3-Clause Revised BSD_\n\n   .. _BSD : https://github.com/hugadams/PAME/blob/master/LICENSE.txt\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/hugadams/fibersim", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "PAME", "package_url": "https://pypi.org/project/PAME/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PAME/", "project_urls": {"Download": "https://github.com/hugadams/fibersim", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/PAME/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "GUI for modeling nanoparticles on optical fiber with mixing/shell-filling models", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://github.com/hugadams/PAME/blob/master/screenshots/gui.png\" height=\"100px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/438ecc966128a5e6f1dfe681eac0e7447533d5c9/68747470733a2f2f6769746875622e636f6d2f6875676164616d732f50414d452f626c6f622f6d61737465722f73637265656e73686f74732f6775692e706e67\" width=\"200px\">\n<div id=\"pame-plasmonic-assay-modeling-environment\">\n<h2>PAME: Plasmonic Assay Modeling Environment</h2>\n<p>Graphical Python application for simulating plasmonic biosensors, particularly fiberoptic biosensors with nanoparticles.</p>\n<p>Check out the <a href=\"https://linktonowhere\" rel=\"nofollow\">PAME preprint</a>.</p>\n<blockquote>\n</blockquote>\n<div id=\"tutorials\">\n<h3>Tutorials</h3>\n<div id=\"ipython-notebooks\">\n<h4>IPython Notebooks</h4>\n<p>Some of these are traditional tutorials, others are examples of analyzed data from our lab.</p>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/hugadams/PAME/blob/master/Simulations/simtutorial.ipynb\" rel=\"nofollow\">Simultation Parsing Tutorial</a></li>\n<li><dl>\n<dt><a href=\"https://github.com/hugadams/PAME/blob/master/Notebooks/SAM_pametest.ipynb\" rel=\"nofollow\">Gold Nanoparticle Self-Assembly Compared to Experimental Data</a></dt>\n<dd><ul>\n<li>Experimental datasets are preloaded in <a href=\"http://hugadams.github.io/scikit-spectra/\" rel=\"nofollow\">scikit-spectra library</a></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><a href=\"https://github.com/hugadams/PAME/blob/master/Notebooks/glycerin_simulation.ipynb\" rel=\"nofollow\">Simulating a Refractometer</a></li>\n<li><a href=\"https://github.com/hugadams/PAME/blob/master/Notebooks/bsa_shell_sim.ipynb\" rel=\"nofollow\">Protein binding to gold nanoparticle film</a></li>\n<li><a href=\"https://github.com/hugadams/PAME/blob/master/Notebooks/AuAg_protein.ipynb\" rel=\"nofollow\">Gold and Silver Nanoparticle Combined Layer 1</a></li>\n<li><a href=\"https://github.com/hugadams/PAME/blob/master/Notebooks/AuAg_sameheight_protein.ipynb\" rel=\"nofollow\">Gold and Silver Nanoparticle Combined Layer 2</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"screencasts\">\n<h4>Screencasts</h4>\n<p>Tutorials are cumulative (eg screencast 2 picks up where 1 ends).</p>\n<dl>\n<dt>PAME\u2019s tutorials are a series of screencasts.</dt>\n<dd><ul>\n<li>Screencast 1: <a href=\"https://youtube.com/watch?v=Na3vK8WsBHI\" rel=\"nofollow\">Introduction to PAME- Anti-reflective coatings</a></li>\n<li>Screencast 2: <a href=\"https://www.youtube.com/watch?v=ykF67bfCSlc\" rel=\"nofollow\">Introduction to Nanoparticles</a></li>\n<li>Screencast 3: <a href=\"https://www.youtube.com/watch?v=58y53AiB1GQ\" rel=\"nofollow\">Nanoparticle film with silica shell</a></li>\n<li>Screencast 4: <a href=\"https://www.youtube.com/watch?v=EZzoOMxI3ss\" rel=\"nofollow\">Nanoparticle film with protein shell</a></li>\n<li>Screencast 5: <a href=\"https://www.youtube.com/watch?v=1xOxBkiCICs\" rel=\"nofollow\">Intro to Fiberoptic Dip Sesnosr</a></li>\n<li>Screencast 6: <a href=\"https://www.youtube.com/watch?v=r0k9215ctfw\" rel=\"nofollow\">Multiplexed Dip Sensor with Gold and Silver Nanoparticles</a></li>\n<li>Screencast 7: <a href=\"https://www.youtube.com/watch?v=Q6H_f46dZZc\" rel=\"nofollow\">Gold Nanoparticle Fiber Dip Sensor Simulation</a></li>\n<li>Screencast 8: <a href=\"https://www.youtube.com/watch?v=FzMon52iHQo\" rel=\"nofollow\">Dip Sensor with Organosilane Layer</a></li>\n</ul>\n</dd>\n</dl>\n</div>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Binaries (ie .exe one-click use files) are <a href=\"https://bitbucket.org/anthony_tuininga/cx_freeze/issue/127/collectionssys-error#comment-15016355\" rel=\"nofollow\">under development</a>, but for now, PAME must be installed as a python library and launched through the command line.  Anyone interested in helping to develop binaries, please contact.</p>\n<p>PAME makes heavy use of the <a href=\"http://www.scipy.org/install.html\" rel=\"nofollow\">SciPy Stack (numpy, ipython etc\u2026)</a>, and so it has a lot of dependencies.  Instead of using a bare python distribution, I\u2019d recommend using a scientific python distribution that comes pre-loaded with the SciPy Stack (eg <a href=\"https://store.enthought.com/\" rel=\"nofollow\">canopy</a> or <a href=\"https://store.continuum.io/cshop/anaconda/\" rel=\"nofollow\">conda</a>) or want to install PAME into a clean environment (this is suggested), see the <cite>Conda</cite> installation directions.  Otherwise, you can use <cite>pip install</cite> as usual.</p>\n<div id=\"pypi\">\n<h4>PyPI</h4>\n<p>Since PAME requires many dependencies, this may upgrade numpy, scipy, ipython and other core scipy libraries.</p>\n<p>To install from pip</p>\n<blockquote>\npip install PAME</blockquote>\n<p>If this gives you an error <a href=\"http://stackoverflow.com/questions/30202110/pip-install-error-with-requirements\" rel=\"nofollow\">(maybe for this reason)</a>, do the following.</p>\n<p>Download the <a href=\"https://github.com/hugadams/PAME\" rel=\"nofollow\">PAME sourcecode</a> as a zipfile and unzip.  <cite>cd</cite> into the unzipped directory</p>\n<blockquote>\ncd /path/to/PAME</blockquote>\n<p>Install from source</p>\n<blockquote>\npython setup.py install</blockquote>\n<p>Install the dependencies from pip</p>\n<blockquote>\npip install -r requirements.txt</blockquote>\n<p>You also may need to <cite>install the QT backend &lt;http://pyqt.sourceforge.net/Docs/PyQt4/installation.html&gt;</cite> if it\u2019s not already configured.</p>\n</div>\n<div id=\"id1\">\n<h4>Conda</h4>\n<p>I use <cite>anaconda</cite> because it has an excellent virtual environment manager.  The advantage is here you can installed a clean working environment only for PAME without altering any of your other packages.  For a tutorial on conda virtual environments, <a href=\"http://www.continuum.io/blog/conda\" rel=\"nofollow\">check this out</a>.  To configure a PAME environment in anaconda, first install anaconda and then do the following:</p>\n<ol>\n<li><p>Create a clean virtual environment (mine is named PAMEvenv)</p>\n<blockquote>\n<p>conda create -n PAMEvenv anaconda</p>\n</blockquote>\n</li>\n</ol>\n<p>This installs several required scientific packages including <cite>numpy</cite>, <cite>pandas</cite> and <cite>ipython</cite>.</p>\n<ol>\n<li><p>Activate the environment</p>\n<blockquote>\n<p>source activate PAMEvenv</p>\n</blockquote>\n</li>\n<li><p>Install pame (download pame source code and unzip, then navigate into directory)</p>\n<blockquote>\n<p>cd /path/to/PAMEdirectory\npython setup.py install</p>\n</blockquote>\n</li>\n<li><p>Conda install/upgrade dependencies</p>\n<blockquote>\n<p>conda install traits traitsui mayavi chaco mpmath PIL</p>\n</blockquote>\n</li>\n<li><p>To deactivate the virtual environment</p>\n<blockquote>\n<p>source deactivate</p>\n</blockquote>\n</li>\n</ol>\n</div>\n<div id=\"dependencies\">\n<h4>Dependencies</h4>\n<p>The full list of PAME\u2019s dependencies is in the <a href=\"https://github.com/hugadams/PAME/blob/master/requirements.txt\" rel=\"nofollow\">requirements.txt</a> file.  You also may need to <cite>install the QT backend &lt;http://pyqt.sourceforge.net/Docs/PyQt4/installation.html&gt;</cite>.</p>\n</div>\n</div>\n<div id=\"support\">\n<h3>Support</h3>\n<p>Questions?  Interested in developing?  Message: <a href=\"mailto:pame_env%40googlegroups.com\">pame_env<span>@</span>googlegroups<span>.</span>com</a>, or contact me directly (<a href=\"mailto:hughesadam87%40gmail.com\">hughesadam87<span>@</span>gmail<span>.</span>com</a>, @hughesadam87)</p>\n</div>\n<div id=\"web-utilitiles\">\n<h3>Web Utilitiles</h3>\n<p>PAME doesn\u2019t run in the browser.  Check out these related tools that do!</p>\n<blockquote>\n<ul>\n<li><a href=\"http://nordlander.rice.edu/miewidget\" rel=\"nofollow\">Mie-coefficients</a></li>\n<li><a href=\"https://www.filmetrics.com/reflectance-calculator\" rel=\"nofollow\">Film Metrics (Thin Film Solver)</a></li>\n<li><a href=\"http://nanocomposix.com/pages/tools\" rel=\"nofollow\">Mie with shells and other tools</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>3-Clause Revised <a href=\"https://github.com/hugadams/PAME/blob/master/LICENSE.txt\" rel=\"nofollow\">BSD</a></p>\n<blockquote>\n</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1546041, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9f5061c89dabb39d634b48729a4da672", "sha256": "3ad3962dc4c38417aa1556a3ae95476c27aa70b91973f341d49d57f550e65ffc"}, "downloads": -1, "filename": "PAME-0.1.tar.gz", "has_sig": false, "md5_digest": "9f5061c89dabb39d634b48729a4da672", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119062, "upload_time": "2015-05-12T21:44:48", "upload_time_iso_8601": "2015-05-12T21:44:48.655923Z", "url": "https://files.pythonhosted.org/packages/7c/a4/e911c0100d8978cd0b4389c3692b9f031a872d10ac9c301a8a6220c46c28/PAME-0.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "3e906ffc0373e1e4b5dcda053bc2b7a8", "sha256": "c257c3b186e9c41b1e053f0df635a90ad455e81f881d722f0068d718cb45cc49"}, "downloads": -1, "filename": "PAME-0.3.tar.gz", "has_sig": false, "md5_digest": "3e906ffc0373e1e4b5dcda053bc2b7a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119053, "upload_time": "2015-05-12T21:45:54", "upload_time_iso_8601": "2015-05-12T21:45:54.724291Z", "url": "https://files.pythonhosted.org/packages/06/cb/88635f096f3e23c246713dfab5fabc9320bb8920896853cebe8bb005d534/PAME-0.3.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "9cb7d110117004923e7bcc7695ccb180", "sha256": "62694227accc623b2ca480955feb981c46aebe71166d135b7ef8a965195e8dc4"}, "downloads": -1, "filename": "PAME-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9cb7d110117004923e7bcc7695ccb180", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121622, "upload_time": "2015-05-13T19:59:41", "upload_time_iso_8601": "2015-05-13T19:59:41.036536Z", "url": "https://files.pythonhosted.org/packages/42/0c/2666296accdb0bbd163d594d493bef2f6773e2f4ab8cbc80d5718087420c/PAME-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9cb7d110117004923e7bcc7695ccb180", "sha256": "62694227accc623b2ca480955feb981c46aebe71166d135b7ef8a965195e8dc4"}, "downloads": -1, "filename": "PAME-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9cb7d110117004923e7bcc7695ccb180", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121622, "upload_time": "2015-05-13T19:59:41", "upload_time_iso_8601": "2015-05-13T19:59:41.036536Z", "url": "https://files.pythonhosted.org/packages/42/0c/2666296accdb0bbd163d594d493bef2f6773e2f4ab8cbc80d5718087420c/PAME-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:43 2020"}