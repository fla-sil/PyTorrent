{"info": {"author": "Pawe\u0142 Tomulik", "author_email": "ptomulik@meil.pw.edu.pl", "bugtrack_url": null, "classifiers": [], "description": "scons-tool-swigpy\n=================\n\n.. image:: https://badge.fury.io/py/scons-tool-swigpy.svg\n    :target: https://badge.fury.io/py/scons-tool-swigpy\n    :alt: PyPi package version\n\n.. image:: https://travis-ci.org/ptomulik/scons-tool-swigpy.svg?branch=master\n    :target: https://travis-ci.org/ptomulik/scons-tool-swigpy\n    :alt: Travis CI build status\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/ptomulik/scons-tool-swigpy?svg=true\n    :target: https://ci.appveyor.com/project/ptomulik/scons-tool-swigpy\n\nSCons_ tool to generate Python modules using Swig_.\n\nInstallation\n------------\n\nThere are few ways to install this tool for your project.\n\nFrom pypi_\n^^^^^^^^^^\n\nThis method may be preferable if you build your project under a virtualenv. To\nadd swigpy tool from pypi_, type (within your wirtualenv):\n\n.. code-block:: shell\n\n   pip install scons-tool-loader scons-tool-swigpy\n\nor, if your project uses pipenv_:\n\n.. code-block:: shell\n\n   pipenv install --dev scons-tool-loader scons-tool-swigpy\n\nAlternatively, you may add this to your ``Pipfile``\n\n.. code-block::\n\n   [dev-packages]\n   scons-tool-loader = \"*\"\n   scons-tool-swigpy = \"*\"\n\n\nThe tool will be installed as a namespaced package ``sconstool.swigpy``\nin project's virtual environment. You may further use scons-tool-loader_\nto load the tool.\n\nAs a git submodule\n^^^^^^^^^^^^^^^^^^\n\n#. Create new git repository:\n\n   .. code-block:: shell\n\n      mkdir /tmp/prj && cd /tmp/prj\n      touch README.rst\n      git init\n\n#. Add the `scons-tool-swigpy`_ as a submodule:\n\n   .. code-block:: shell\n\n      git submodule add git://github.com/ptomulik/scons-tool-swigpy.git site_scons/site_tools/swigpy\n\n#. For python 2.x create ``__init__.py`` in ``site_tools`` directory:\n\n   .. code-block:: shell\n\n      touch site_scons/site_tools/__init__.py\n\n   this will allow to directly import ``site_tools.swigpy`` (this may be required by other tools).\n\nUsage example\n-------------\n\nGit-based projects\n^^^^^^^^^^^^^^^^^^\n\n#. Create some source files, for example ``src/hello.hpp`` and\n   ``src/hello.cpp``:\n\n   .. code-block:: cpp\n\n      // src/hello.hpp\n      #ifndef HELLO_HPP\n      #define HELLO_HPP\n      void hello();\n      #endif\n\n   .. code-block:: cpp\n\n      // src/hello.cpp\n      #include \"hello.hpp\"\n      #include <iostream>\n      void hello() { std::cout << \"Hello\" << std::endl; }\n\n#. Create swig interface file ``src/hello.i``\n\n   .. code-block:: swig\n\n      // src/hello.i\n      %module hello;\n      %{\n      #include \"hello.hpp\"\n      %}\n      %include \"hello.hpp\"\n\n#. Write ``SConstruct`` file:\n\n   .. code-block:: python\n\n\n      # SConstruct\n      env = Environment(tools = [ 'default', 'swigpy' ])\n      SConscript('src/SConscript', exports=['env'], variant_dir='build', duplicate=0)\n\n#. Write ``src/SConscript``:\n\n   .. code-block:: python\n\n      # src/SConscript\n      Import(['env'])\n      env.Append( SWIGPY_CPPPATH = ['.'] )\n      env.Append( SWIGPY_LIBPATH = ['.'] )\n      env.Append( SWIGPY_SWIGFLAGS = ['-c++'] )\n      env.SharedLibrary( 'hello', ['hello.cpp'] )\n      env.SwigPyModule( 'hello', SWIGPY_LIBS = ['$SWIGPY_PYTHONLIB', 'hello'] )\n\n#. Try it out:\n\n   .. code-block:: shell\n\n      scons\n\n   This shall create a library **build/libhello.so** and all the files that\n   comprise its python wrapper:\n\n   .. code-block:: shell\n\n      ptomulik@tea:$ ls build/\n      hello.os  hello.pyc  hello_wrap.cc  libhello.so\n      hello.py  _hello.so  hello_wrap.os\n\n\n#. Test the generated wrapper:\n\n   .. code-block:: shell\n\n      cd build\n      LD_LIBRARY_PATH='.' python\n      >>> import hello\n      >>> hello.hello()\n\nDetails\n-------\n\nModule description\n^^^^^^^^^^^^^^^^^^\n\nThe module provides a ``SwigPyModule()`` builder which generates python module\nbased on a swig interface ``*.i`` file::\n\n    SwigPyModule(modname, **overrides)\n\nThe **modname** is a name of the module being generated, for example ``'foo'``\nor ``'foo.bar'`` (note, it's neither the source file name nor target file\nname). The **overrides** overwrite construction variables such as ``SWIGFLAGS``\nor ``CFLAGS``.\n\n**Example 1**:\n\nThe following code expects a ``foo.i`` interface file to be present and\ngenerates python module defined by this file.\n\n.. code-block:: python\n\n   SwigPyModule('foo')\n\n**Example 2**:\n\nThe following code expects a ``foo/bar.i`` interface file to be present\nand generates python module defined by this file undef ``foo`` subdirectory.\n\n.. code-block:: python\n\n   SwigPyModule('foo.bar')\n\nConstruction variables\n^^^^^^^^^^^^^^^^^^^^^^\n\nConstruction variables used by ``SwigPyModule`` are summarized in the following\ntable. Note that there are two groups of variables. The first group are the\nwell known variables such as ``CFLAGS`` or ``SWIGFLAGS``. The second group are\nthe variables prefixed with ``SWIGPY_``. These variables, if defined, overwrite\nthe well known variables when generating python bindings.\n\n========================= =============================================\nVariable                   Default\n========================= =============================================\nSWIG\nSWIGVERSION\nSWIGFLAGS\nSWIGDIRECTORSUFFIX\nSWIGCFILESUFFIX\nSWIGCXXFILESUFFIX\nSWIGPATH\nSWIGINCPREFIX\nSWIGINCSUFFIX\nSWIGCOM\nCPPPATH\nSHLIBPREFIX\nCCFLAGS\nCFLAGS\nCXXFLAGS\nLIBS\nLIBPATH\nLDFLAGS\nSWIGPY_SWIG\nSWIGPY_SWIGVERSION\nSWIGPY_SWIGFLAGS           ``[-python', '-builtin']``\nSWIGPY_SWIGDIRECTORSUFFIX\nSWIGPY_SWIGCFILESUFFIX\nSWIGPY_SWIGCXXFILESUFFIX\nSWIGPY_SWIGPATH\nSWIGPY_SWIGINCPREFIX\nSWIGPY_SWIGINCSUFFIX\nSWIGPY_SWIGCOM\nSWIGPY_CPPPATH             ``[\"$SWIGPY_PYTHONINCDIR\"]``\nSWIGPY_SHOBJPREFIX\nSWIGPY_SHOBJSUFFIX\nSWIGPY_SHLIBPREFIX         ``'_'``\nSWIGPY_SHLIBSUFFIX         ``.pyd`` on Windows\nSWIGPY_LIBPREFIX           ``'_'``\nSWIGPY_LIBSUFFIX\nSWIGPY_IMPLIBPREFIX        ``'_'``\nSWIGPY_IMPLIBSUFFIX\nSWIGPY_WINDOWSEXPPREFIX    ``'_'``\nSWIGPY_WINDOWSEXPSUFFIX\nSWIGPY_CC\nSWIGPY_CXX\nSWIGPY_SHCC\nSWIGPY_SHCXX\nSWIGPY_CCFLAGS\nSWIGPY_CFLAGS\nSWIGPY_CXXFLAGS\nSWIGPY_SHCCFLAGS\nSWIGPY_SHCFLAGS\nSWIGPY_SHCXXFLAGS\nSWIGPY_LIBS                ``[\"$SWIGPY_PYTHONLIB\"]``\nSWIGPY_LIBPATH             ``[\"$SWIGPY_PYTHONLIBDIR\"]``\nSWIGPY_LINKFLAGS\nSWIGPY_M2SWIGFILE          ``lambda parts: path.join(*parts) + '.i'``\nSWIGPY_M2CFILE             ``lambda parts: path.join(*parts)``\nSWIGPY_M2SHLIBFILE         ``lambda parts: path.join(*parts)``\n========================= =============================================\n\nThe **SWIGPY_M2SWIGFILE** lambda determines the name of swig interface (source\nfile). The **SWIGPY_M2CFILE** determines the name (without suffix) of the **C**\nor **C++** wrapper file being generated by **swig**. The **SWIGPY_M2SHLIBFILE**\ndetermines the name of shared library that will contain the wrapper binary code\nafter compilation (without prefix and suffix). The **parts** provided to any of\nthese macros are the parts of **modname**, that is they're result of\n``modname.split('.')``.\n\nLICENSE\n-------\n\nCopyright (c) 2014-2018 by Pawel Tomulik <ptomulik@meil.pw.edu.pl>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE\n\n.. _SCons: http://scons.org\n.. _Swig: http://swig.org\n.. _pipenv: https://pipenv.readthedocs.io/\n.. _pypi: https://pypi.org/\n.. _scons-tool-swigpy: https://github.com/ptomulik/scons-tool-swigpy\n.. _scons-tool-loader: https://github.com/ptomulik/scons-tool-loader\n\n.. <!--- vim: set expandtab tabstop=2 shiftwidth=2 syntax=rst: -->\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ptomulik/scons-tool-swigpy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "scons-tool-swigpy", "package_url": "https://pypi.org/project/scons-tool-swigpy/", "platform": "", "project_url": "https://pypi.org/project/scons-tool-swigpy/", "project_urls": {"Homepage": "https://github.com/ptomulik/scons-tool-swigpy"}, "release_url": "https://pypi.org/project/scons-tool-swigpy/0.1.2/", "requires_dist": ["scons-tool-util (>=0.1.9)"], "requires_python": ">=2.7", "summary": "SCons tool to generate Python modules using SWIG", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/scons-tool-swigpy\" rel=\"nofollow\"><img alt=\"PyPi package version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8472d1a63ca1fa2058cdd3e633fbb8aa3a3b10c5/68747470733a2f2f62616467652e667572792e696f2f70792f73636f6e732d746f6f6c2d7377696770792e737667\"></a>\n<a href=\"https://travis-ci.org/ptomulik/scons-tool-swigpy\" rel=\"nofollow\"><img alt=\"Travis CI build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ee39d16da6a00c4d5347e3fad3315dfe5e2cd49/68747470733a2f2f7472617669732d63692e6f72672f70746f6d756c696b2f73636f6e732d746f6f6c2d7377696770792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/ptomulik/scons-tool-swigpy\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/github/ptomulik/scons-tool-swigpy?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/00f71c964d10b850cfa409af8a5d89c3c12a1773/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f70746f6d756c696b2f73636f6e732d746f6f6c2d7377696770793f7376673d74727565\"></a>\n<p><a href=\"http://scons.org\" rel=\"nofollow\">SCons</a> tool to generate Python modules using <a href=\"http://swig.org\" rel=\"nofollow\">Swig</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>There are few ways to install this tool for your project.</p>\n<div id=\"from-pypi\">\n<h3>From <a href=\"https://pypi.org/\" rel=\"nofollow\">pypi</a></h3>\n<p>This method may be preferable if you build your project under a virtualenv. To\nadd swigpy tool from <a href=\"https://pypi.org/\" rel=\"nofollow\">pypi</a>, type (within your wirtualenv):</p>\n<pre>pip install scons-tool-loader scons-tool-swigpy\n</pre>\n<p>or, if your project uses <a href=\"https://pipenv.readthedocs.io/\" rel=\"nofollow\">pipenv</a>:</p>\n<pre>pipenv install --dev scons-tool-loader scons-tool-swigpy\n</pre>\n<p>Alternatively, you may add this to your <tt>Pipfile</tt></p>\n<pre>[dev-packages]\nscons-tool-loader = \"*\"\nscons-tool-swigpy = \"*\"\n</pre>\n<p>The tool will be installed as a namespaced package <tt>sconstool.swigpy</tt>\nin project\u2019s virtual environment. You may further use <a href=\"https://github.com/ptomulik/scons-tool-loader\" rel=\"nofollow\">scons-tool-loader</a>\nto load the tool.</p>\n</div>\n<div id=\"as-a-git-submodule\">\n<h3>As a git submodule</h3>\n<ol>\n<li><p>Create new git repository:</p>\n<pre>mkdir /tmp/prj <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> /tmp/prj\ntouch README.rst\ngit init\n</pre>\n</li>\n<li><p>Add the <a href=\"https://github.com/ptomulik/scons-tool-swigpy\" rel=\"nofollow\">scons-tool-swigpy</a> as a submodule:</p>\n<pre>git submodule add git://github.com/ptomulik/scons-tool-swigpy.git site_scons/site_tools/swigpy\n</pre>\n</li>\n<li><p>For python 2.x create <tt>__init__.py</tt> in <tt>site_tools</tt> directory:</p>\n<pre>touch site_scons/site_tools/__init__.py\n</pre>\n<p>this will allow to directly import <tt>site_tools.swigpy</tt> (this may be required by other tools).</p>\n</li>\n</ol>\n</div>\n</div>\n<div id=\"usage-example\">\n<h2>Usage example</h2>\n<h2 id=\"git-based-projects\"><span class=\"section-subtitle\">Git-based projects</span></h2>\n<ol>\n<li><p>Create some source files, for example <tt>src/hello.hpp</tt> and\n<tt>src/hello.cpp</tt>:</p>\n<pre><span class=\"c1\">// src/hello.hpp\n</span><span class=\"cp\">#ifndef HELLO_HPP\n#define HELLO_HPP\n</span><span class=\"kt\">void</span> <span class=\"nf\">hello</span><span class=\"p\">();</span>\n<span class=\"cp\">#endif</span>\n</pre>\n<pre><span class=\"c1\">// src/hello.cpp\n</span><span class=\"cp\">#include</span> <span class=\"cpf\">\"hello.hpp\"</span><span class=\"cp\">\n#include</span> <span class=\"cpf\">&lt;iostream&gt;</span><span class=\"cp\">\n</span><span class=\"kt\">void</span> <span class=\"nf\">hello</span><span class=\"p\">()</span> <span class=\"p\">{</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">\"Hello\"</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">endl</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n</pre>\n</li>\n<li><p>Create swig interface file <tt>src/hello.i</tt></p>\n<pre><span class=\"c1\">// src/hello.i\n</span><span class=\"nf\">%module</span> <span class=\"n\">hello</span><span class=\"p\">;</span>\n<span class=\"o\">%</span><span class=\"p\">{</span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">\"hello.hpp\"</span><span class=\"cp\">\n</span><span class=\"o\">%</span><span class=\"p\">}</span>\n<span class=\"nf\">%include</span> <span class=\"s\">\"hello.hpp\"</span>\n</pre>\n</li>\n<li><p>Write <tt>SConstruct</tt> file:</p>\n<pre><span class=\"c1\"># SConstruct</span>\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">Environment</span><span class=\"p\">(</span><span class=\"n\">tools</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s1\">'default'</span><span class=\"p\">,</span> <span class=\"s1\">'swigpy'</span> <span class=\"p\">])</span>\n<span class=\"n\">SConscript</span><span class=\"p\">(</span><span class=\"s1\">'src/SConscript'</span><span class=\"p\">,</span> <span class=\"n\">exports</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'env'</span><span class=\"p\">],</span> <span class=\"n\">variant_dir</span><span class=\"o\">=</span><span class=\"s1\">'build'</span><span class=\"p\">,</span> <span class=\"n\">duplicate</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Write <tt>src/SConscript</tt>:</p>\n<pre><span class=\"c1\"># src/SConscript</span>\n<span class=\"n\">Import</span><span class=\"p\">([</span><span class=\"s1\">'env'</span><span class=\"p\">])</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">Append</span><span class=\"p\">(</span> <span class=\"n\">SWIGPY_CPPPATH</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.'</span><span class=\"p\">]</span> <span class=\"p\">)</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">Append</span><span class=\"p\">(</span> <span class=\"n\">SWIGPY_LIBPATH</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.'</span><span class=\"p\">]</span> <span class=\"p\">)</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">Append</span><span class=\"p\">(</span> <span class=\"n\">SWIGPY_SWIGFLAGS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'-c++'</span><span class=\"p\">]</span> <span class=\"p\">)</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">SharedLibrary</span><span class=\"p\">(</span> <span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'hello.cpp'</span><span class=\"p\">]</span> <span class=\"p\">)</span>\n<span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">SwigPyModule</span><span class=\"p\">(</span> <span class=\"s1\">'hello'</span><span class=\"p\">,</span> <span class=\"n\">SWIGPY_LIBS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'$SWIGPY_PYTHONLIB'</span><span class=\"p\">,</span> <span class=\"s1\">'hello'</span><span class=\"p\">]</span> <span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Try it out:</p>\n<pre>scons\n</pre>\n<p>This shall create a library <strong>build/libhello.so</strong> and all the files that\ncomprise its python wrapper:</p>\n<pre>ptomulik@tea:$ ls build/\nhello.os  hello.pyc  hello_wrap.cc  libhello.so\nhello.py  _hello.so  hello_wrap.os\n</pre>\n</li>\n<li><p>Test the generated wrapper:</p>\n<pre><span class=\"nb\">cd</span> build\n<span class=\"nv\">LD_LIBRARY_PATH</span><span class=\"o\">=</span><span class=\"s1\">'.'</span> python\n&gt;&gt;&gt; import hello\n&gt;&gt;&gt; hello.hello<span class=\"o\">()</span>\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"details\">\n<h2>Details</h2>\n<div id=\"module-description\">\n<h3>Module description</h3>\n<p>The module provides a <tt>SwigPyModule()</tt> builder which generates python module\nbased on a swig interface <tt>*.i</tt> file:</p>\n<pre>SwigPyModule(modname, **overrides)\n</pre>\n<p>The <strong>modname</strong> is a name of the module being generated, for example <tt>'foo'</tt>\nor <tt>'foo.bar'</tt> (note, it\u2019s neither the source file name nor target file\nname). The <strong>overrides</strong> overwrite construction variables such as <tt>SWIGFLAGS</tt>\nor <tt>CFLAGS</tt>.</p>\n<p><strong>Example 1</strong>:</p>\n<p>The following code expects a <tt>foo.i</tt> interface file to be present and\ngenerates python module defined by this file.</p>\n<pre><span class=\"n\">SwigPyModule</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Example 2</strong>:</p>\n<p>The following code expects a <tt>foo/bar.i</tt> interface file to be present\nand generates python module defined by this file undef <tt>foo</tt> subdirectory.</p>\n<pre><span class=\"n\">SwigPyModule</span><span class=\"p\">(</span><span class=\"s1\">'foo.bar'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"construction-variables\">\n<h3>Construction variables</h3>\n<p>Construction variables used by <tt>SwigPyModule</tt> are summarized in the following\ntable. Note that there are two groups of variables. The first group are the\nwell known variables such as <tt>CFLAGS</tt> or <tt>SWIGFLAGS</tt>. The second group are\nthe variables prefixed with <tt>SWIGPY_</tt>. These variables, if defined, overwrite\nthe well known variables when generating python bindings.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Variable</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>SWIG</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGVERSION</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGDIRECTORSUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGCFILESUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGCXXFILESUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPATH</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGINCPREFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGINCSUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGCOM</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>CPPPATH</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SHLIBPREFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>CCFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>CFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>CXXFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>LIBS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>LIBPATH</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>LDFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIG</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIGVERSION</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIGFLAGS</td>\n<td><tt><span class=\"pre\">[-python',</span> <span class=\"pre\">'-builtin']</span></tt></td>\n</tr>\n<tr><td>SWIGPY_SWIGDIRECTORSUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIGCFILESUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIGCXXFILESUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIGPATH</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIGINCPREFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIGINCSUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SWIGCOM</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_CPPPATH</td>\n<td><tt><span class=\"pre\">[\"$SWIGPY_PYTHONINCDIR\"]</span></tt></td>\n</tr>\n<tr><td>SWIGPY_SHOBJPREFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SHOBJSUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SHLIBPREFIX</td>\n<td><tt>'_'</tt></td>\n</tr>\n<tr><td>SWIGPY_SHLIBSUFFIX</td>\n<td><tt>.pyd</tt> on Windows</td>\n</tr>\n<tr><td>SWIGPY_LIBPREFIX</td>\n<td><tt>'_'</tt></td>\n</tr>\n<tr><td>SWIGPY_LIBSUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_IMPLIBPREFIX</td>\n<td><tt>'_'</tt></td>\n</tr>\n<tr><td>SWIGPY_IMPLIBSUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_WINDOWSEXPPREFIX</td>\n<td><tt>'_'</tt></td>\n</tr>\n<tr><td>SWIGPY_WINDOWSEXPSUFFIX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_CC</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_CXX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SHCC</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SHCXX</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_CCFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_CFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_CXXFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SHCCFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SHCFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_SHCXXFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_LIBS</td>\n<td><tt><span class=\"pre\">[\"$SWIGPY_PYTHONLIB\"]</span></tt></td>\n</tr>\n<tr><td>SWIGPY_LIBPATH</td>\n<td><tt><span class=\"pre\">[\"$SWIGPY_PYTHONLIBDIR\"]</span></tt></td>\n</tr>\n<tr><td>SWIGPY_LINKFLAGS</td>\n<td>\u00a0</td>\n</tr>\n<tr><td>SWIGPY_M2SWIGFILE</td>\n<td><tt>lambda parts: <span class=\"pre\">path.join(*parts)</span> + '.i'</tt></td>\n</tr>\n<tr><td>SWIGPY_M2CFILE</td>\n<td><tt>lambda parts: <span class=\"pre\">path.join(*parts)</span></tt></td>\n</tr>\n<tr><td>SWIGPY_M2SHLIBFILE</td>\n<td><tt>lambda parts: <span class=\"pre\">path.join(*parts)</span></tt></td>\n</tr>\n</tbody>\n</table>\n<p>The <strong>SWIGPY_M2SWIGFILE</strong> lambda determines the name of swig interface (source\nfile). The <strong>SWIGPY_M2CFILE</strong> determines the name (without suffix) of the <strong>C</strong>\nor <strong>C++</strong> wrapper file being generated by <strong>swig</strong>. The <strong>SWIGPY_M2SHLIBFILE</strong>\ndetermines the name of shared library that will contain the wrapper binary code\nafter compilation (without prefix and suffix). The <strong>parts</strong> provided to any of\nthese macros are the parts of <strong>modname</strong>, that is they\u2019re result of\n<tt><span class=\"pre\">modname.split('.')</span></tt>.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>LICENSE</h2>\n<p>Copyright (c) 2014-2018 by Pawel Tomulik &lt;<a href=\"mailto:ptomulik%40meil.pw.edu.pl\">ptomulik<span>@</span>meil<span>.</span>pw<span>.</span>edu<span>.</span>pl</a>&gt;</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE</p>\n</div>\n\n          </div>"}, "last_serial": 6698154, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "eba603fccee55d3b00f9ae75846c02f0", "sha256": "cd034c373fa3e142c70411ec5a522d4a5cc1d8e8cce4855f010664eb444c9445"}, "downloads": -1, "filename": "scons_tool_swigpy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eba603fccee55d3b00f9ae75846c02f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 9358, "upload_time": "2018-11-15T07:46:54", "upload_time_iso_8601": "2018-11-15T07:46:54.386460Z", "url": "https://files.pythonhosted.org/packages/b7/16/59b27681492b28cf66c69020aced0b87be3302493b1d46a67b18343985c6/scons_tool_swigpy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbecc0b86005a7ae48d3534602a43992", "sha256": "4ea793e492475942feb24ed18241e9f299b5db58bd126151217ed09c857568a5"}, "downloads": -1, "filename": "scons-tool-swigpy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cbecc0b86005a7ae48d3534602a43992", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 7965, "upload_time": "2018-11-15T07:46:56", "upload_time_iso_8601": "2018-11-15T07:46:56.536795Z", "url": "https://files.pythonhosted.org/packages/c6/29/3b90963a9393d487fb99517aed6a131dac2d6ae34ef42c8709ecf4102fce/scons-tool-swigpy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "297fd70ac6bd4cbf13d8a845d398fe00", "sha256": "321f3488c6758f7bef8afc9cea2db98e588f63a375f9eccf9f6d0839ff745d56"}, "downloads": -1, "filename": "scons_tool_swigpy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "297fd70ac6bd4cbf13d8a845d398fe00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 9355, "upload_time": "2019-04-23T11:59:45", "upload_time_iso_8601": "2019-04-23T11:59:45.639380Z", "url": "https://files.pythonhosted.org/packages/5a/79/1136e7df372b6d57ea4c4bedc0719c3e412b69adc6e7db511d323c918e83/scons_tool_swigpy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9aa7cbdb075dd48fa084c888ac1df1e3", "sha256": "f32c7feaac3a66f8ac4adb5e860e68b303ef5a707839f5e3461137e5ccaefca3"}, "downloads": -1, "filename": "scons-tool-swigpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9aa7cbdb075dd48fa084c888ac1df1e3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 8813, "upload_time": "2019-04-23T11:59:46", "upload_time_iso_8601": "2019-04-23T11:59:46.997177Z", "url": "https://files.pythonhosted.org/packages/54/fc/af510f07392278125889d5ba71e35876cee87b2d5a83a63c9f14733c73ca/scons-tool-swigpy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "18550b3126ca4ac0a639cfc79b6964a5", "sha256": "57d18363d92cbe0e23745500297f1fd1328dc5df03a90fa3096fd92ec8345819"}, "downloads": -1, "filename": "scons_tool_swigpy-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "18550b3126ca4ac0a639cfc79b6964a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 9358, "upload_time": "2020-02-25T18:37:04", "upload_time_iso_8601": "2020-02-25T18:37:04.269495Z", "url": "https://files.pythonhosted.org/packages/c0/ee/cf1f6024e3a0f4691f402b7b2c349026d2cf8bc1d81fc44c28eb4d2b7f26/scons_tool_swigpy-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ccad3e935e326e48f2455b69b8cba1a", "sha256": "71bcd58a72b513bec6ca29b32ee0dc5ef4f123408ca56fb847cde85d3aa2ebfb"}, "downloads": -1, "filename": "scons-tool-swigpy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9ccad3e935e326e48f2455b69b8cba1a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 7959, "upload_time": "2020-02-25T18:37:06", "upload_time_iso_8601": "2020-02-25T18:37:06.158786Z", "url": "https://files.pythonhosted.org/packages/c9/9d/5c421e08c7b69ca017877dfec50efd5b59d86e555486a8ce0d029cee3bf8/scons-tool-swigpy-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18550b3126ca4ac0a639cfc79b6964a5", "sha256": "57d18363d92cbe0e23745500297f1fd1328dc5df03a90fa3096fd92ec8345819"}, "downloads": -1, "filename": "scons_tool_swigpy-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "18550b3126ca4ac0a639cfc79b6964a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 9358, "upload_time": "2020-02-25T18:37:04", "upload_time_iso_8601": "2020-02-25T18:37:04.269495Z", "url": "https://files.pythonhosted.org/packages/c0/ee/cf1f6024e3a0f4691f402b7b2c349026d2cf8bc1d81fc44c28eb4d2b7f26/scons_tool_swigpy-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ccad3e935e326e48f2455b69b8cba1a", "sha256": "71bcd58a72b513bec6ca29b32ee0dc5ef4f123408ca56fb847cde85d3aa2ebfb"}, "downloads": -1, "filename": "scons-tool-swigpy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9ccad3e935e326e48f2455b69b8cba1a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 7959, "upload_time": "2020-02-25T18:37:06", "upload_time_iso_8601": "2020-02-25T18:37:06.158786Z", "url": "https://files.pythonhosted.org/packages/c9/9d/5c421e08c7b69ca017877dfec50efd5b59d86e555486a8ce0d029cee3bf8/scons-tool-swigpy-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:08 2020"}