{"info": {"author": "Sai Kumar Yava", "author_email": "saikumar.geek@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "[Webptools v0.0.2](https://pypi.org/project/webptools/)\n\nwebptools is a Webp image conversion package for python.\n\nConvert JPG,PNG.. images to webp image format\n\nThis library uses precompiled executables of WebP for more info visit [WebP](https://developers.google.com/speed/webp)\n\nFor converting other image formats to webp, please read this documentation  [cwebp Encoder](https://developers.google.com/speed/webp/docs/cwebp)\n\nFor converting webp image to other image format, please read this documentation  [dwebp Encoder](https://developers.google.com/speed/webp/docs/dwebp)\n\nFor converting gif image to webp, please read this documentation [gif2webp Converter](https://developers.google.com/speed/webp/docs/gif2webp)\n\nFor creating animated webp image using webp images, please read this documentation [webpmux Muxer](https://developers.google.com/speed/webp/docs/webpmux)\n\n\n## What's New \n* Precompiled executables of WebP(v1.0.3) added\n\n\n# How to use\n\n# cwebp\n\n## Convert other image format to webp\n\n```python\n\nfrom webptools import webplib as webp\n\n# pass input_image(.jpeg,.pnp .....) path ,\n# output_image(give path where to save and image file name with .webp file type extension)\nprint(webp.cwebp(\"python_logo.jpg\", \"python_logo.webp\", \"-q 80\"))\n\n\n```\n\n# dwebp\n\n## Convert webp image to other image format\n\n```python\n\nfrom webptools import webplib as webp\n\n# pass input_image(.webp image) path ,output_image(.jpeg,.pnp .....)\nprint(webp.dwebp(\"python_logo.webp\",\"python_logo.jpg\",\"-o\"))\n\n```\n\n# gif2webp\n\n## Convert gif image to webp\n\n```python\nfrom webptools import webplib as webp\n\n# pass input_image(.gif) path ,output_image(give path where to save and image file name with .webp file type extension)\nprint(webp.gifwebp(\"linux_logo.gif\",\"linux_logo.webp\",\"-q 80\"))\n```\n\n# webpmux\n\n## Add ICC profile,XMP metadata and EXIF metadata\n\n```python\nfrom webptools import webplib as webp\n\n# pass input_image(.webp image) path,output_image,set options(icc image profile,XMP metadata or EXIF metadata) and file.\n# for options use keywords as below\n# for ICC: icc\n# for XMP metadata: xmp\n# for EXIF metadata: exif\nprint(webp.webpmux_add(\"in.webp\",\"icc_container.webp\",\"image_profile.icc\",\"icc\"))\n```\n\n## Extract ICC profile,XMP metadata and EXIF metadata\n\n```python\n\nfrom webptools import webplib as webp\n\n# pass input_image(.webp image) path,output_image,set options(icc image profile,XMP metadata or EXIF metadata) and file.\n# for options use keywords as below\n# for ICC: icc\n# for XMP metadata: xmp\n# for EXIF metadata: exif\nprint(webp.webpmux_extract(\"anim_container.webp\",\"image_profile.icc\",\"icc\"))\n```\n\n## Strip ICC profile,XMP metadata and EXIF metadata\n\n```python\n\nfrom webptools import webplib as webp\n\n# pass input_image(.webp image) path,output_image,set options(icc image profile,XMP metadata or EXIF metadata) and file.\n# for options use keywords as below\n# for ICC: icc\n# for XMP metadata: xmp\n# for EXIF metadata: exif\nprint(webp.webpmux_strip(\"icc_container.webp\",\"without_icc.webp\",\"icc\"))\n\n\n```\n\n## Create an animated WebP file from Webp images\n\n```python\n\nfrom webptools import webplib as webp\n\n# pass input_images(.webp image) path with FRAME_OPTIONS, as array,ouput image will be animated .webp image\n\n# https://developers.google.com/speed/webp/docs/webpmux\n# FRAME_OPTIONS\n\n# -file_i +di[+xi+yi[+mi[bi]]]\n\n# e.g -frame one.webp +100 -frame two.webp +100+50+50 -frame three.webp +100+50+50+1+b\n\n# Where: file_i is the i'th frame (WebP format), xi,yi specify the image offset for this frame,\n# di is the pause duration before next frame, mi is the dispose method for this frame (0 for NONE or 1 for BACKGROUND)\n# and bi is the blending method for this frame (+b for BLEND or -b for NO_BLEND).\n# Argument bi can be omitted and will default to +b (BLEND). Also, mi can be omitted if bi is omitted and\n# will default to 0 (NONE). Finally,\n# if mi and bi are omitted then xi and yi can be omitted and will default to +0+0.\n\n# -loop n\n\n# e.g 10\n\n# Loop the frames n number of times. 0 indicates the frames should loop forever.\n# Valid range is 0 to 65535 [Default: 0 (infinite)].\n\n# -bgcolor A,R,G,B\n\n# e.g 255,255,255,255\n\n# Background color of the canvas. Where: A, R, G and B are integers in the range 0 to 255 specifying\n# the Alpha, Red, Green and Blue component values respectively [Default: 255,255,255,255].\n\ninput=[\"./frames/tmp-0.webp +100\",\"./frames/tmp-1.webp +100\",\"./frames/tmp-2.webp +100\"]\nprint(webp.webpmux_animate(input,\"anim_container.webp\",\"10\",\"255,255,255,255\"))\n\n```\n\n## Get a frame from an animated WebP file\n\n```python\n\nfrom webptools import webplib as webp\n\n# pass input_image(.webp image) path ,output_image and frame number\nprint(webp.webpmux_getframe(\"anim_container.webp\",\"frame_2.webp\",\"2\"))\n\n\n```\n\n## Installation\n\n```shell\n$ pip install webptools\n```\n\n## License\n\n  [MIT](LICENSE)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scionoftech/webptools", "keywords": "webp,converter,image", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "webptools", "package_url": "https://pypi.org/project/webptools/", "platform": "", "project_url": "https://pypi.org/project/webptools/", "project_urls": {"Homepage": "https://github.com/scionoftech/webptools"}, "release_url": "https://pypi.org/project/webptools/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "webptools is a Webp image conversion package for python", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/webptools/\" rel=\"nofollow\">Webptools v0.0.2</a></p>\n<p>webptools is a Webp image conversion package for python.</p>\n<p>Convert JPG,PNG.. images to webp image format</p>\n<p>This library uses precompiled executables of WebP for more info visit <a href=\"https://developers.google.com/speed/webp\" rel=\"nofollow\">WebP</a></p>\n<p>For converting other image formats to webp, please read this documentation  <a href=\"https://developers.google.com/speed/webp/docs/cwebp\" rel=\"nofollow\">cwebp Encoder</a></p>\n<p>For converting webp image to other image format, please read this documentation  <a href=\"https://developers.google.com/speed/webp/docs/dwebp\" rel=\"nofollow\">dwebp Encoder</a></p>\n<p>For converting gif image to webp, please read this documentation <a href=\"https://developers.google.com/speed/webp/docs/gif2webp\" rel=\"nofollow\">gif2webp Converter</a></p>\n<p>For creating animated webp image using webp images, please read this documentation <a href=\"https://developers.google.com/speed/webp/docs/webpmux\" rel=\"nofollow\">webpmux Muxer</a></p>\n<h2>What's New</h2>\n<ul>\n<li>Precompiled executables of WebP(v1.0.3) added</li>\n</ul>\n<h1>How to use</h1>\n<h1>cwebp</h1>\n<h2>Convert other image format to webp</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webptools</span> <span class=\"kn\">import</span> <span class=\"n\">webplib</span> <span class=\"k\">as</span> <span class=\"n\">webp</span>\n\n<span class=\"c1\"># pass input_image(.jpeg,.pnp .....) path ,</span>\n<span class=\"c1\"># output_image(give path where to save and image file name with .webp file type extension)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">webp</span><span class=\"o\">.</span><span class=\"n\">cwebp</span><span class=\"p\">(</span><span class=\"s2\">\"python_logo.jpg\"</span><span class=\"p\">,</span> <span class=\"s2\">\"python_logo.webp\"</span><span class=\"p\">,</span> <span class=\"s2\">\"-q 80\"</span><span class=\"p\">))</span>\n</pre>\n<h1>dwebp</h1>\n<h2>Convert webp image to other image format</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webptools</span> <span class=\"kn\">import</span> <span class=\"n\">webplib</span> <span class=\"k\">as</span> <span class=\"n\">webp</span>\n\n<span class=\"c1\"># pass input_image(.webp image) path ,output_image(.jpeg,.pnp .....)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">webp</span><span class=\"o\">.</span><span class=\"n\">dwebp</span><span class=\"p\">(</span><span class=\"s2\">\"python_logo.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"python_logo.jpg\"</span><span class=\"p\">,</span><span class=\"s2\">\"-o\"</span><span class=\"p\">))</span>\n</pre>\n<h1>gif2webp</h1>\n<h2>Convert gif image to webp</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webptools</span> <span class=\"kn\">import</span> <span class=\"n\">webplib</span> <span class=\"k\">as</span> <span class=\"n\">webp</span>\n\n<span class=\"c1\"># pass input_image(.gif) path ,output_image(give path where to save and image file name with .webp file type extension)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">webp</span><span class=\"o\">.</span><span class=\"n\">gifwebp</span><span class=\"p\">(</span><span class=\"s2\">\"linux_logo.gif\"</span><span class=\"p\">,</span><span class=\"s2\">\"linux_logo.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"-q 80\"</span><span class=\"p\">))</span>\n</pre>\n<h1>webpmux</h1>\n<h2>Add ICC profile,XMP metadata and EXIF metadata</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webptools</span> <span class=\"kn\">import</span> <span class=\"n\">webplib</span> <span class=\"k\">as</span> <span class=\"n\">webp</span>\n\n<span class=\"c1\"># pass input_image(.webp image) path,output_image,set options(icc image profile,XMP metadata or EXIF metadata) and file.</span>\n<span class=\"c1\"># for options use keywords as below</span>\n<span class=\"c1\"># for ICC: icc</span>\n<span class=\"c1\"># for XMP metadata: xmp</span>\n<span class=\"c1\"># for EXIF metadata: exif</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">webp</span><span class=\"o\">.</span><span class=\"n\">webpmux_add</span><span class=\"p\">(</span><span class=\"s2\">\"in.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"icc_container.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"image_profile.icc\"</span><span class=\"p\">,</span><span class=\"s2\">\"icc\"</span><span class=\"p\">))</span>\n</pre>\n<h2>Extract ICC profile,XMP metadata and EXIF metadata</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webptools</span> <span class=\"kn\">import</span> <span class=\"n\">webplib</span> <span class=\"k\">as</span> <span class=\"n\">webp</span>\n\n<span class=\"c1\"># pass input_image(.webp image) path,output_image,set options(icc image profile,XMP metadata or EXIF metadata) and file.</span>\n<span class=\"c1\"># for options use keywords as below</span>\n<span class=\"c1\"># for ICC: icc</span>\n<span class=\"c1\"># for XMP metadata: xmp</span>\n<span class=\"c1\"># for EXIF metadata: exif</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">webp</span><span class=\"o\">.</span><span class=\"n\">webpmux_extract</span><span class=\"p\">(</span><span class=\"s2\">\"anim_container.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"image_profile.icc\"</span><span class=\"p\">,</span><span class=\"s2\">\"icc\"</span><span class=\"p\">))</span>\n</pre>\n<h2>Strip ICC profile,XMP metadata and EXIF metadata</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webptools</span> <span class=\"kn\">import</span> <span class=\"n\">webplib</span> <span class=\"k\">as</span> <span class=\"n\">webp</span>\n\n<span class=\"c1\"># pass input_image(.webp image) path,output_image,set options(icc image profile,XMP metadata or EXIF metadata) and file.</span>\n<span class=\"c1\"># for options use keywords as below</span>\n<span class=\"c1\"># for ICC: icc</span>\n<span class=\"c1\"># for XMP metadata: xmp</span>\n<span class=\"c1\"># for EXIF metadata: exif</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">webp</span><span class=\"o\">.</span><span class=\"n\">webpmux_strip</span><span class=\"p\">(</span><span class=\"s2\">\"icc_container.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"without_icc.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"icc\"</span><span class=\"p\">))</span>\n</pre>\n<h2>Create an animated WebP file from Webp images</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webptools</span> <span class=\"kn\">import</span> <span class=\"n\">webplib</span> <span class=\"k\">as</span> <span class=\"n\">webp</span>\n\n<span class=\"c1\"># pass input_images(.webp image) path with FRAME_OPTIONS, as array,ouput image will be animated .webp image</span>\n\n<span class=\"c1\"># https://developers.google.com/speed/webp/docs/webpmux</span>\n<span class=\"c1\"># FRAME_OPTIONS</span>\n\n<span class=\"c1\"># -file_i +di[+xi+yi[+mi[bi]]]</span>\n\n<span class=\"c1\"># e.g -frame one.webp +100 -frame two.webp +100+50+50 -frame three.webp +100+50+50+1+b</span>\n\n<span class=\"c1\"># Where: file_i is the i'th frame (WebP format), xi,yi specify the image offset for this frame,</span>\n<span class=\"c1\"># di is the pause duration before next frame, mi is the dispose method for this frame (0 for NONE or 1 for BACKGROUND)</span>\n<span class=\"c1\"># and bi is the blending method for this frame (+b for BLEND or -b for NO_BLEND).</span>\n<span class=\"c1\"># Argument bi can be omitted and will default to +b (BLEND). Also, mi can be omitted if bi is omitted and</span>\n<span class=\"c1\"># will default to 0 (NONE). Finally,</span>\n<span class=\"c1\"># if mi and bi are omitted then xi and yi can be omitted and will default to +0+0.</span>\n\n<span class=\"c1\"># -loop n</span>\n\n<span class=\"c1\"># e.g 10</span>\n\n<span class=\"c1\"># Loop the frames n number of times. 0 indicates the frames should loop forever.</span>\n<span class=\"c1\"># Valid range is 0 to 65535 [Default: 0 (infinite)].</span>\n\n<span class=\"c1\"># -bgcolor A,R,G,B</span>\n\n<span class=\"c1\"># e.g 255,255,255,255</span>\n\n<span class=\"c1\"># Background color of the canvas. Where: A, R, G and B are integers in the range 0 to 255 specifying</span>\n<span class=\"c1\"># the Alpha, Red, Green and Blue component values respectively [Default: 255,255,255,255].</span>\n\n<span class=\"nb\">input</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"./frames/tmp-0.webp +100\"</span><span class=\"p\">,</span><span class=\"s2\">\"./frames/tmp-1.webp +100\"</span><span class=\"p\">,</span><span class=\"s2\">\"./frames/tmp-2.webp +100\"</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">webp</span><span class=\"o\">.</span><span class=\"n\">webpmux_animate</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">,</span><span class=\"s2\">\"anim_container.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"10\"</span><span class=\"p\">,</span><span class=\"s2\">\"255,255,255,255\"</span><span class=\"p\">))</span>\n</pre>\n<h2>Get a frame from an animated WebP file</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">webptools</span> <span class=\"kn\">import</span> <span class=\"n\">webplib</span> <span class=\"k\">as</span> <span class=\"n\">webp</span>\n\n<span class=\"c1\"># pass input_image(.webp image) path ,output_image and frame number</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">webp</span><span class=\"o\">.</span><span class=\"n\">webpmux_getframe</span><span class=\"p\">(</span><span class=\"s2\">\"anim_container.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"frame_2.webp\"</span><span class=\"p\">,</span><span class=\"s2\">\"2\"</span><span class=\"p\">))</span>\n</pre>\n<h2>Installation</h2>\n<pre>$ pip install webptools\n</pre>\n<h2>License</h2>\n<p><a href=\"LICENSE\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 5578600, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a554b5d498ec426dc042db9b5fe7b7fe", "sha256": "d205c6370f41fe364d537a3e695ccc62605b355b5a14fd8a9fe9ef20c8069282"}, "downloads": -1, "filename": "webptools-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a554b5d498ec426dc042db9b5fe7b7fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16526938, "upload_time": "2019-01-11T17:04:34", "upload_time_iso_8601": "2019-01-11T17:04:34.759486Z", "url": "https://files.pythonhosted.org/packages/3b/bb/ac32a0cf4a5c225af8fa780782cbb43552308fcb7172a66729989bc53054/webptools-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "806543ce20c029c8daa6a74f927b4f70", "sha256": "0075bc55cdc26f78cb51d0aa4863d407f111de3ab41218e8cd00d03237ec27e0"}, "downloads": -1, "filename": "webptools-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "806543ce20c029c8daa6a74f927b4f70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18130472, "upload_time": "2019-07-24T16:53:52", "upload_time_iso_8601": "2019-07-24T16:53:52.888105Z", "url": "https://files.pythonhosted.org/packages/38/90/13594b7ea56263e7cc18a08467312783535730080836ae133a369e2dfc49/webptools-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "557085eabce65e6bfc58b2472f97412a", "sha256": "b420fcc509576fef1ce86d2d077ffd4c9e71faf6ccfd9373325c64fa3a815a68"}, "downloads": -1, "filename": "webptools-0.0.2.tar.gz", "has_sig": false, "md5_digest": "557085eabce65e6bfc58b2472f97412a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18023622, "upload_time": "2019-07-24T16:54:03", "upload_time_iso_8601": "2019-07-24T16:54:03.158450Z", "url": "https://files.pythonhosted.org/packages/17/a4/216fcc41a8f0f147489777140be8d213db4e24ac7dc703db7870a867ab78/webptools-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "806543ce20c029c8daa6a74f927b4f70", "sha256": "0075bc55cdc26f78cb51d0aa4863d407f111de3ab41218e8cd00d03237ec27e0"}, "downloads": -1, "filename": "webptools-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "806543ce20c029c8daa6a74f927b4f70", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18130472, "upload_time": "2019-07-24T16:53:52", "upload_time_iso_8601": "2019-07-24T16:53:52.888105Z", "url": "https://files.pythonhosted.org/packages/38/90/13594b7ea56263e7cc18a08467312783535730080836ae133a369e2dfc49/webptools-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "557085eabce65e6bfc58b2472f97412a", "sha256": "b420fcc509576fef1ce86d2d077ffd4c9e71faf6ccfd9373325c64fa3a815a68"}, "downloads": -1, "filename": "webptools-0.0.2.tar.gz", "has_sig": false, "md5_digest": "557085eabce65e6bfc58b2472f97412a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18023622, "upload_time": "2019-07-24T16:54:03", "upload_time_iso_8601": "2019-07-24T16:54:03.158450Z", "url": "https://files.pythonhosted.org/packages/17/a4/216fcc41a8f0f147489777140be8d213db4e24ac7dc703db7870a867ab78/webptools-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:53 2020"}