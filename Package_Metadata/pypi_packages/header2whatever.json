{"info": {"author": "Dustin Spicuzza", "author_email": "dustin@virtualroadside.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "header2whatever (h2w)\n=====================\n\nGenerate arbitrary files from C/C++ header files using CppHeaderParser to read\nthe input files and Jinja2 templates to generate the outputs.\n\nThis grew out of a desire to generate pybind11 wrapping code from C++ header\nfiles. pybind11gen was created, but then I wanted to generate more things...\n\nThere are still rough edges, and the documentation is mostly nonexistent, but\npull requests with fixes/improvements are very welcome!\n\nAs of 0.3.0, h2w requires Python 3.3+\n\nInstall\n-------\n\n::\n\n    pip install header2whatever\n\nUsage\n=====\n\nFirst, you need to create a jinja2 template that represents whatever you want\nto generate from the header file. For example, maybe you want to describe the\nfunctions in yaml::\n\n    ---\n    {% for header in headers %}\n    {% for fn in header.functions %}\n    {{ fn.name }}:\n      returns: {{ fn.returns }}\n      params:\n      {% for param in fn.parameters %}\n      - { name: {{ param.name }}, type: \"{{ param.type }}\" }\n      {% endfor %}\n\n    {% endfor %}\n    {% endfor %}\n\nAnd let's say you have the following header file ``foo.h``::\n\n    void some_fn(int i);\n    int returns_int(int p1, char* p2);\n\nYou can execute the following::\n\n    h2w foo.h -o foo.yml\n\nAnd you'll get the following output::\n\n    ---\n    returns_int:\n      returns: int\n      params:\n      - { name: p1, type: \"int\" }\n      - { name: p2, type: \"char *\" }\n\n    some_fn:\n      returns: void\n      params:\n      - { name: i, type: \"int\" }\n\nAs you can see, while this is a silly example, this approach is very flexible\nand fairly powerful.\n\nCurrently, the data structure passed to the template isn't documented -- but\nit's a filtered version of whatever CppHeaderParser outputs when it parses a\nheader.\n\nSee the examples folder for more examples.\n\nBatch mode\n----------\n\nIf you need to process multiple files, or just want to record the parameters for\nautogenerating a file without writing a shell script, batch mode is useful. You\npass two parameters: a yaml file with the configuration, and an output directory\nto write the files to.\n\n\nUsing data from external sources\n--------------------------------\n\nSometimes you want to mix in data that CppHeaderParser can't give you. If you\npass the ``--yaml`` option, it will load the yaml into a dictionary and make it\navailable to the template as the 'data' variable.\n\nYou can also pass key=value parameters via the ``--param`` option, and\nthe specified keys will be available to the template.\n\nCustom processing\n-----------------\n\nWhen you need to do more complex logic that a jinja2 template just isn't\nappropriate for, you can specify a python file to load custom hooks from.\n\nSee [the default hooks](header2whatever/default_hooks.py) for documentation.\n\nLicense\n=======\n\nApache 2\n\nAuthor\n======\n\nDustin Spicuzza (dustin@virtualroadside.com)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/virtualroadside/header2whatever", "keywords": "c++ cpp codegen generator header jinja2 template", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "header2whatever", "package_url": "https://pypi.org/project/header2whatever/", "platform": "", "project_url": "https://pypi.org/project/header2whatever/", "project_urls": {"Homepage": "https://github.com/virtualroadside/header2whatever"}, "release_url": "https://pypi.org/project/header2whatever/0.4.2/", "requires_dist": ["robotpy-cppheaderparser (>=5.0.0)", "jinja2", "pyyaml", "schematics"], "requires_python": "", "summary": "Generate files from C/C++ headers using jinja2 templates", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"header2whatever-h2w\">\n<h2>header2whatever (h2w)</h2>\n<p>Generate arbitrary files from C/C++ header files using CppHeaderParser to read\nthe input files and Jinja2 templates to generate the outputs.</p>\n<p>This grew out of a desire to generate pybind11 wrapping code from C++ header\nfiles. pybind11gen was created, but then I wanted to generate more things\u2026</p>\n<p>There are still rough edges, and the documentation is mostly nonexistent, but\npull requests with fixes/improvements are very welcome!</p>\n<p>As of 0.3.0, h2w requires Python 3.3+</p>\n<div id=\"install\">\n<h3>Install</h3>\n<pre>pip install header2whatever\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>First, you need to create a jinja2 template that represents whatever you want\nto generate from the header file. For example, maybe you want to describe the\nfunctions in yaml:</p>\n<pre>---\n{% for header in headers %}\n{% for fn in header.functions %}\n{{ fn.name }}:\n  returns: {{ fn.returns }}\n  params:\n  {% for param in fn.parameters %}\n  - { name: {{ param.name }}, type: \"{{ param.type }}\" }\n  {% endfor %}\n\n{% endfor %}\n{% endfor %}\n</pre>\n<p>And let\u2019s say you have the following header file <tt>foo.h</tt>:</p>\n<pre>void some_fn(int i);\nint returns_int(int p1, char* p2);\n</pre>\n<p>You can execute the following:</p>\n<pre>h2w foo.h -o foo.yml\n</pre>\n<p>And you\u2019ll get the following output:</p>\n<pre>---\nreturns_int:\n  returns: int\n  params:\n  - { name: p1, type: \"int\" }\n  - { name: p2, type: \"char *\" }\n\nsome_fn:\n  returns: void\n  params:\n  - { name: i, type: \"int\" }\n</pre>\n<p>As you can see, while this is a silly example, this approach is very flexible\nand fairly powerful.</p>\n<p>Currently, the data structure passed to the template isn\u2019t documented \u2013 but\nit\u2019s a filtered version of whatever CppHeaderParser outputs when it parses a\nheader.</p>\n<p>See the examples folder for more examples.</p>\n<div id=\"batch-mode\">\n<h3>Batch mode</h3>\n<p>If you need to process multiple files, or just want to record the parameters for\nautogenerating a file without writing a shell script, batch mode is useful. You\npass two parameters: a yaml file with the configuration, and an output directory\nto write the files to.</p>\n</div>\n<div id=\"using-data-from-external-sources\">\n<h3>Using data from external sources</h3>\n<p>Sometimes you want to mix in data that CppHeaderParser can\u2019t give you. If you\npass the <tt><span class=\"pre\">--yaml</span></tt> option, it will load the yaml into a dictionary and make it\navailable to the template as the \u2018data\u2019 variable.</p>\n<p>You can also pass key=value parameters via the <tt><span class=\"pre\">--param</span></tt> option, and\nthe specified keys will be available to the template.</p>\n</div>\n<div id=\"custom-processing\">\n<h3>Custom processing</h3>\n<p>When you need to do more complex logic that a jinja2 template just isn\u2019t\nappropriate for, you can specify a python file to load custom hooks from.</p>\n<p>See [the default hooks](header2whatever/default_hooks.py) for documentation.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Apache 2</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Dustin Spicuzza (<a href=\"mailto:dustin%40virtualroadside.com\">dustin<span>@</span>virtualroadside<span>.</span>com</a>)</p>\n</div>\n\n          </div>"}, "last_serial": 6614332, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bb61bf193e2fd2cc6151eee14378513b", "sha256": "7d5ade32217c08da9a4a85e19dc6d6292badd66ce4d6db2978d1eee80772272f"}, "downloads": -1, "filename": "header2whatever-0.1.tar.gz", "has_sig": false, "md5_digest": "bb61bf193e2fd2cc6151eee14378513b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7020, "upload_time": "2018-01-06T15:43:37", "upload_time_iso_8601": "2018-01-06T15:43:37.448146Z", "url": "https://files.pythonhosted.org/packages/ee/10/d7bd450ee6eb0b9d09e447d2095013443dbb188d2cb0487d094840273129/header2whatever-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fa5947df473a12179d7fc2bd0135ad6a", "sha256": "175203749ecc73a40ded3162c23e3d96522b8d29e723f7b4d78076dfd43db4d2"}, "downloads": -1, "filename": "header2whatever-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fa5947df473a12179d7fc2bd0135ad6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7040, "upload_time": "2018-01-07T01:37:27", "upload_time_iso_8601": "2018-01-07T01:37:27.795499Z", "url": "https://files.pythonhosted.org/packages/78/7f/2104ded143e0db188c756b99ceeb06ba776e7d59c3ded60a082746f3319f/header2whatever-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "2b5c4f00a0962d58f769cc95ab538853", "sha256": "6cc6e6057b895bef8a408be1d2f4a7f911a3054b0e64903c7732f43060318a8d"}, "downloads": -1, "filename": "header2whatever-0.1.2.tar.gz", "has_sig": false, "md5_digest": "2b5c4f00a0962d58f769cc95ab538853", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7102, "upload_time": "2018-01-09T22:40:53", "upload_time_iso_8601": "2018-01-09T22:40:53.790987Z", "url": "https://files.pythonhosted.org/packages/ac/e7/16e00b1889fed2393c56e50794b1ece17670b3e2b9ec857b9f6481825e3b/header2whatever-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ff6a8f7567e81b6ad3568098c14d6c90", "sha256": "dc562c328406362bcb8054551b744ead81ff2a35ec7b601b30f26db648b0fa11"}, "downloads": -1, "filename": "header2whatever-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ff6a8f7567e81b6ad3568098c14d6c90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6625, "upload_time": "2018-12-11T16:28:57", "upload_time_iso_8601": "2018-12-11T16:28:57.347730Z", "url": "https://files.pythonhosted.org/packages/ad/61/9d5a892eb1f3ae7d2a8862c344908a82a6d74a363fa8cc2d6a340a2d4903/header2whatever-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c17fa4860b2ca35077564354bdffba86", "sha256": "4ee3b8def29d0f8bef2dd496a05dcd41cef6aa579c28fc2e87b287aa18861545"}, "downloads": -1, "filename": "header2whatever-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c17fa4860b2ca35077564354bdffba86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9464, "upload_time": "2020-01-09T07:04:56", "upload_time_iso_8601": "2020-01-09T07:04:56.064771Z", "url": "https://files.pythonhosted.org/packages/d2/03/c3d584db7c91e9d57167308c11491551ad4cf3253b068188cc5883ae7dd4/header2whatever-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9bfc6cde655661a9cc3b5fe5eb6d0bee", "sha256": "41ed5e98ecfee9b872d258164dcfe03221a14da8dc788e42b2248555556757ff"}, "downloads": -1, "filename": "header2whatever-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9bfc6cde655661a9cc3b5fe5eb6d0bee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 80942, "upload_time": "2020-01-10T18:45:21", "upload_time_iso_8601": "2020-01-10T18:45:21.235559Z", "url": "https://files.pythonhosted.org/packages/ee/8a/c03d7ac524d7a03e40255a17643980bc8c0447da9969f4e7c935de354711/header2whatever-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0885caa60bbe77199b0f6a980cc78b92", "sha256": "9358294e68f5c4cf664bb5fe1d21a9c3a36852336c439e21e37cd4ba7ef912fe"}, "downloads": -1, "filename": "header2whatever-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0885caa60bbe77199b0f6a980cc78b92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80930, "upload_time": "2020-01-10T18:48:41", "upload_time_iso_8601": "2020-01-10T18:48:41.848741Z", "url": "https://files.pythonhosted.org/packages/af/94/fb61f2ae0b573d01063b35a7b8a48a96a03a3848187d985828a216bddc7a/header2whatever-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "71110b47ac5b51ceafe159e34ca88574", "sha256": "cb319f6e85cd4dfd6f0ec8bd660649d71316b3afe7003bc09bd39e62bff005d1"}, "downloads": -1, "filename": "header2whatever-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71110b47ac5b51ceafe159e34ca88574", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 80945, "upload_time": "2020-01-16T08:25:35", "upload_time_iso_8601": "2020-01-16T08:25:35.064284Z", "url": "https://files.pythonhosted.org/packages/94/ce/d5bfc5758242030d74b30698fd9d43221e1e600648210204f0b24c008661/header2whatever-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f9520d4a706a2a410d87f22c306b8fc", "sha256": "1682a5c897d003fee4e49be741a0b49c797aad1160cea8b0db50a8672f65b0e9"}, "downloads": -1, "filename": "header2whatever-0.4.0.tar.gz", "has_sig": false, "md5_digest": "1f9520d4a706a2a410d87f22c306b8fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80976, "upload_time": "2020-01-16T08:25:36", "upload_time_iso_8601": "2020-01-16T08:25:36.420185Z", "url": "https://files.pythonhosted.org/packages/8e/dc/20ed7722d3a5b57cd525c05b003b8a18bbbd0bda037593b7cd9a891ecbb4/header2whatever-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "1fdbdec839cbfda8905995edb262df69", "sha256": "13be50e3e6f5679916273859d8917a47e2db411642c2cc07ad657a9ae5f51289"}, "downloads": -1, "filename": "header2whatever-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1fdbdec839cbfda8905995edb262df69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 80946, "upload_time": "2020-01-16T18:59:48", "upload_time_iso_8601": "2020-01-16T18:59:48.378831Z", "url": "https://files.pythonhosted.org/packages/5e/21/65b788c1368a980efcd90280ea59c41faef5d3fcf55366560d0f886c7b8e/header2whatever-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba3982accd817a18c868f6fa2873ea86", "sha256": "b29f5381654b860340694a586ce1cf6dc0b258d64f5b862d61a8536a42e74c41"}, "downloads": -1, "filename": "header2whatever-0.4.1.tar.gz", "has_sig": false, "md5_digest": "ba3982accd817a18c868f6fa2873ea86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 80957, "upload_time": "2020-01-16T18:59:50", "upload_time_iso_8601": "2020-01-16T18:59:50.244512Z", "url": "https://files.pythonhosted.org/packages/76/89/31fb21d84ab001557e8102a137dfa9da90ad5d951ec68aeda45d0bb57e85/header2whatever-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "03848a5ef32370837ac73b40c6d59baf", "sha256": "07672c3397ddbc6ec2dd7b6d0be698eb88e9a7f04d439eb813e2a3417895e124"}, "downloads": -1, "filename": "header2whatever-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "03848a5ef32370837ac73b40c6d59baf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 80968, "upload_time": "2020-02-12T06:09:54", "upload_time_iso_8601": "2020-02-12T06:09:54.669651Z", "url": "https://files.pythonhosted.org/packages/b0/f4/5346b6bf7637325767f093ed9df8e227f919fa833763efb019c2cc0c07cd/header2whatever-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5d87d657ad8c0ddbc5cb10b0cf0251c", "sha256": "91daa67f42148502d80723895b793bf13f60aa73605d1746ec1d2a21040d54fb"}, "downloads": -1, "filename": "header2whatever-0.4.2.tar.gz", "has_sig": false, "md5_digest": "e5d87d657ad8c0ddbc5cb10b0cf0251c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74358, "upload_time": "2020-02-12T06:09:56", "upload_time_iso_8601": "2020-02-12T06:09:56.172148Z", "url": "https://files.pythonhosted.org/packages/7b/13/820847ad212c8d33d81dba392a75b56c29f793a9b03a5b9beda0da3818dd/header2whatever-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03848a5ef32370837ac73b40c6d59baf", "sha256": "07672c3397ddbc6ec2dd7b6d0be698eb88e9a7f04d439eb813e2a3417895e124"}, "downloads": -1, "filename": "header2whatever-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "03848a5ef32370837ac73b40c6d59baf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 80968, "upload_time": "2020-02-12T06:09:54", "upload_time_iso_8601": "2020-02-12T06:09:54.669651Z", "url": "https://files.pythonhosted.org/packages/b0/f4/5346b6bf7637325767f093ed9df8e227f919fa833763efb019c2cc0c07cd/header2whatever-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5d87d657ad8c0ddbc5cb10b0cf0251c", "sha256": "91daa67f42148502d80723895b793bf13f60aa73605d1746ec1d2a21040d54fb"}, "downloads": -1, "filename": "header2whatever-0.4.2.tar.gz", "has_sig": false, "md5_digest": "e5d87d657ad8c0ddbc5cb10b0cf0251c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74358, "upload_time": "2020-02-12T06:09:56", "upload_time_iso_8601": "2020-02-12T06:09:56.172148Z", "url": "https://files.pythonhosted.org/packages/7b/13/820847ad212c8d33d81dba392a75b56c29f793a9b03a5b9beda0da3818dd/header2whatever-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:58 2020"}