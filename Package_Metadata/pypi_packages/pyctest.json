{"info": {"author": "Jonathan R. Madsen", "author_email": "jonrobm.programming@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Utilities"], "description": "# PyCTest\n\n| Travis | AppVeyor |\n| ------ | -------- |\n| [![Build Status](https://travis-ci.org/jrmadsen/pyctest.svg?branch=master)](https://travis-ci.org/jrmadsen/pyctest) | [![Build status](https://ci.appveyor.com/api/projects/status/p7m76ovx7sg781pf/branch/master?svg=true)](https://ci.appveyor.com/project/jrmadsen/pyctest/branch/master) |\n\n[PyCTest Documentation (readthedocs)](https://pyctest.readthedocs.io/en/latest/)\n================================================================================\n\n## GitHub\n\n- `git clone https://github.com/jrmadsen/pyctest.git`\n\n## PyPi\n\n- `pip install pyctest`\n\n## Anaconda Cloud\n\n- `conda install -c jrmadsen pyctest`\n\n| Name | Version | Platforms | Downloads |\n| --- | --- | --- | --- |\n| [![Conda Recipe](https://img.shields.io/badge/recipe-pyctest-green.svg)](https://anaconda.org/jrmadsen/pyctest) | [![Anaconda-Server Badge](https://anaconda.org/jrmadsen/pyctest/badges/version.svg)](https://anaconda.org/jrmadsen/pyctest) | [![Anaconda-Server Badge](https://anaconda.org/jrmadsen/pyctest/badges/platforms.svg)](https://anaconda.org/jrmadsen/pyctest) | [![Anaconda-Server Badge](https://anaconda.org/jrmadsen/pyctest/badges/downloads.svg)](https://anaconda.org/jrmadsen/pyctest) |\n\n## conda-forge\n\n- `conda install -c conda-forge pyctest`\n\n| Name | Version | Platforms | Downloads |\n| --- | --- | --- | --- |\n| [![Conda Recipe](https://img.shields.io/badge/recipe-pyctest-green.svg)](https://anaconda.org/conda-forge/pyctest) | [![Conda Version](https://img.shields.io/conda/vn/conda-forge/pyctest.svg)](https://anaconda.org/conda-forge/pyctest) | [![Conda Platforms](https://img.shields.io/conda/pn/conda-forge/pyctest.svg)](https://anaconda.org/conda-forge/pyctest) | [![Conda Downloads](https://img.shields.io/conda/dn/conda-forge/pyctest.svg)](https://anaconda.org/conda-forge/pyctest) |\n\nBenefits\n========\n\n- Integration into continuous integration systems (e.g. Travis, AppVeyor, CircleCI, etc.) and pushing to CDash dashboard will combine all the results in one place\n  - The warnings and errors are enumerated in CDash (no more parsing stdout logs for errors)\n- Easily create platform-independent testing\n- No need to migrate build system to CMake -- just specify `pyctest.BUILD_COMMAND`\n\nGeneral Setup\n=============\n\n- Add PyCTest to conda environment: `conda install pyctest`\n- Write a driver Python script, e.g. `pyctest-runner.py`, in top of the source code tree\n\n## Example for Python project\n\nThe following is an example for a Python code with a compiled C extension that uses `nosetests` for unit-testing:\n\n```python\n#!/usr/bin/env python\n\nimport os, sys, platform\nimport pyctest.pyctest as pyctest\nimport pyctest.helpers as helpers\n\nparser = helpers.ArgumentParser(\"ProjectName\", source_dir=os.getcwd(),binary_dir=os.getcwd(), vcs_type=\"git\")\nargs = parser.parse_args()\n\npyctest.BUILD_NAME = \"{}\".format(args.build)\npyctest.BUILD_COMMAND = \"python setup.py build_ext --inplace\"\n\ntest = pyctest.test()\ntest.SetName(\"unittest\")\n# insert the command to run the tests for project\ntest.SetCommand([\"nosetests\"])\n\npyctest.run()\n```\n\n## Example for autotools project\n\n```python\n#!/usr/bin/env python\n\nimport os, sys, platform\nimport multiprocessing as mp\nimport pyctest.pyctest as pyctest\nimport pyctest.helpers as helpers\n\nparser = helpers.ArgumentParser(\"ProjectName\", source_dir=os.getcwd(), binary_dir=os.getcwd(),\n                                vcs_type=\"git\")\nparser.add_argument(\"-n\", \"--build\", type=str, required=True, help=\"Build name for identification\")\nargs = parser.parse_args()\n\n# CONFIGURE_COMMAND can only run one command so if autogen is required, just execute it here\ncmd = pyctest.command([\"./autogen.sh\"])\ncmd.SetWorkingDirectory(pyctest.SOURCE_DIRECTORY)\ncmd.SetErrorQuiet(False)\ncmd.Execute()\n\npyctest.BUILD_NAME = \"{}\".format(args.build)\npyctest.CONFIGURE_COMMAND = \"./configure\"\npyctest.BUILD_COMMAND = \"make -j{}\".format(mp.cpu_count())\n\ntest = pyctest.test()\ntest.SetName(\"unittest\")\n# insert the command to run the tests for project\ntest.SetCommand([\"./run-testing.sh\"])\n\npyctest.run()\n```\n\n## Example for CMake project\n\n```python\n#!/usr/bin/env python\n\nimport os\nimport sys\nimport platform\nimport multiprocessing as mp\nimport pyctest.pyctest as pyctest\nimport pyctest.helpers as helpers\n\nbinary_dir = os.path.join(os.getcwd(), \"build-ProjectName\")\nparser = helpers.ArgumentParser(\"ProjectName\", os.getcwd(), binary_dir)\nparser.add_argument(\"-n\", \"--build\", type=str, required=True, help=\"Build name for identification\")\nargs = parser.parse_args()\n\npyctest.BUILD_NAME = \"{}\".format(args.build)\npyctest.UPDATE_COMMAND = \"git\"\npyctest.CONFIGURE_COMMAND = \"cmake {}\".format(pyctest.SOURCE_DIRECTORY)\npyctest.BUILD_COMMAND = \"cmake --build {} --target all -- -j{}\".format(pyctest.BINARY_DIRECTORY, mp.cpu_count())\n\ntest = pyctest.test()\ntest.SetName(\"unittest\")\n# insert the command to run the tests for project\ntest.SetCommand([\"./run-testing.sh\"])\n\npyctest.run()\n```\n\n### Python Modules\n\n- `import pyctest` -- global package\n- `import pyctest.pyctest` -- CTest module\n- `import pyctest.pycmake` -- CMake module\n- `import pyctest.helpers` -- Helpers module\n  - includes command line arguments (`argparse`) for PyCTest\n\n### Direct Access to CMake/CTest/CPack Executables\n\n- `python -m pyctest.cmake <ARGS>` == `cmake <ARGS>`\n- `python -m pyctest.ctest <ARGS>` == `ctest <ARGS>`\n- `python -m pyctest.cpack <ARGS>` == `cpack <ARGS>`\n\nFollowing Python code:\n```python\nfrom pyctest.ctest import CTest\nfrom pyctest.cmake import CMake\nfrom pyctest.cpack import CPack\n\nCMake({\"CMAKE_BUILD_TYPE\":\"Release\"}, os.getcwd(), \"-G\", \"Ninja\")\nCTest(\"--build-and-test\", os.getcwd(), \"-VV\")\nCPack(\"-G\", \"TGZ\")\n```\n\nis equivalent to the following shell commands:\n\n```shell\n$ cmake -DCMAKE_BUILD_TYPE=Release ${PWD} -G Ninja\n$ ctest --build-and-test ${PWD} -VV\n$ cpack -G TGZ\n```\n\n## Standard Configuration Variables\n\n- `pyctest.PROJECT_NAME`\n- `pyctest.SOURCE_DIRECTORY`\n- `pyctest.BINARY_DIRECTORY`\n- `pyctest.SITE`\n- `pyctest.BUILD_NAME`\n- `pyctest.TRIGGER`\n- `pyctest.CHECKOUT_COMMAND`\n- `pyctest.BUILD_COMMAND`\n- `pyctest.MODEL`\n- `pyctest.CUSTOM_COVERAGE_EXCLUDE`\n- `pyctest.CUSTOM_MAXIMUM_NUMBER_OF_ERRORS`\n- `pyctest.CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS`\n- `pyctest.CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE`\n\n### Setting Arbitrary Variables\n\n```python\n    pyctest.set(\"CTEST_TOKEN_FILE\", \"${CMAKE_CURRENT_LIST_DIR}/.ctest-token\")\n```\n\n### Generating a Test\n\n```python\n    test = pyctest.test()\n    test.SetName(\"nosetests\")\n    test.SetCommand([\"nosetests\", \"test\", \"--cover-xml\", \"--cover-xml-file=coverage.xml\"])\n    # set directory to run test\n    test.SetProperty(\"WORKING_DIRECTORY\", pyctest.BINARY_DIRECTORY)\n    test.SetProperty(\"RUN_SERIAL\", \"ON\")\n    test.SetProperty(\"ENVIRONMENT\", \"OMP_NUM_THREADS=1\")\n```\n\n### Examples\n\n- [Basic example](https://github.com/jrmadsen/pyctest/blob/master/examples/Basic/README.md)\n- [Advanced example](https://github.com/jrmadsen/pyctest/blob/master/examples/TomoPy/README.md)\n  - includes submission to CDash dashboard\n\n### CDash Integration Example\n\nResults from running the TomoPy example can be found at the [TomoPy CDash Testing Dashboard @ NERSC](https://cdash.nersc.gov/index.php?project=TomoPy)\n\n- Python code with C extensions without CMake build system\n- The build logs from \"python setup.py install\" are registered in the \"Build\" section\n- The `nosetests test` command + other are wrapped into CTests\n\n## Testing Example\n\nPyCTest can be used to simple execute tests and submit to a dashboard without any configuration, build, etc. steps\n\n```python\n#!/usr/bin/env python\n\nimport os\nimport sys\nimport shutil\nimport argparse\nimport platform\nimport traceback\n\nimport pyctest.pyctest as pyctest\nimport pyctest.pycmake as pycmake\nimport pyctest.helpers as helpers\n\nif __name__ == \"__main__\":\n\n    directory = os.path.join(os.getcwd(), \"pycm-test\")\n\n    # these are required\n    pyctest.PROJECT_NAME = \"PyCTest\"\n    pyctest.SOURCE_DIRECTORY = directory\n    pyctest.BINARY_DIRECTORY = directory\n\n    args = helpers.ArgumentParser(pyctest.PROJECT_NAME,\n                                  pyctest.SOURCE_DIRECTORY,\n                                  pyctest.BINARY_DIRECTORY).parse_args()\n\n    # set explicitly\n    pyctest.MODEL = \"Continuous\"\n    pyctest.SITE = platform.node()\n\n    # create a Test object\n    test = pyctest.test()\n    test.SetName(\"list_directory\")\n    test.SetCommand([\"ls\", directory])\n    test.SetProperty(\"WORKING_DIRECTORY\", os.getcwd())\n\n    # create a second test\n    # previous test is already stored by PyCTest\n    test = pyctest.test()\n    test.SetName(\"hostname\")\n    test.SetCommand([\"hostname\"])\n    test.SetProperty(\"TIMEOUT\", \"10\")\n\n    # generate the CTestConfig.cmake and CTestCustom.cmake\n    pyctest.generate_config(directory)\n\n    # generate the CTestTestfile.cmake file\n    pyctest.generate_test_file(directory)\n\n    # run CTest -- e.g. ctest -VV ${PWD}/pycm-test\n    pyctest.run(pyctest.ARGUMENTS, directory)\n```\n\n```bash\nCTest arguments (default): '-V -DSTAGES=Start;Update;Configure;Build;Test;Coverage;MemCheck -S Stages.cmake -j1'\nWriting CTest test file: \"/Users/jrmadsen/devel/c++/pyctest-master/pycm-test/CTestTestfile.cmake\"...\nGenerating test \"list_directory\"...\nGenerating test \"hostname\"...\n-- STAGES = Start;Update;Configure;Build;Test;Coverage;MemCheck\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Running CTEST_START stage...\nRun dashboard with model Continuous\n   Source directory: /Users/jrmadsen/devel/c++/pyctest-master/pycm-test\n   Build directory: /Users/jrmadsen/devel/c++/pyctest-master/pycm-test\n   Track: Continuous\n   Reading ctest configuration file: /Users/jrmadsen/devel/c++/pyctest-master/pycm-test/CTestConfig.cmake\n   Site: JRM-macOS-DOE.local\n   Build name: [Darwin macOS 10.13.6 x86_64] [Python 3.6.7]\n   Use Continuous tag: 20181129-2118\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Skipping CTEST_UPDATE stage...\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Skipping CTEST_CONFIGURE stage...\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Skipping CTEST_BUILD stage...\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Running CTEST_TEST stage...\nTest project /Users/jrmadsen/devel/c++/pyctest-master/pycm-test\n    Start 1: list_directory\n1/2 Test #1: list_directory ...................   Passed    0.00 sec\n    Start 2: hostname\n2/2 Test #2: hostname .........................   Passed    0.00 sec\n\n100% tests passed, 0 tests failed out of 2\n\nTotal Test time (real) =   0.01 sec\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Skipping CTEST_COVERAGE stage...\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Skipping CTEST_MEMCHECK stage...\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Skipping CTEST_SUBMIT stage...\n-- [[Darwin macOS 10.13.6 x86_64] [Python 3.6.7]] Finished Continuous Stages (Start;Update;Configure;Build;Test;Coverage;MemCheck)\n```\n\n## Command Line Interface\n\n```shell\nPyCTest args: ['--help']\n  CTest args: []\n  CMake args: []\nusage: pyctest-runner.py [-h] [-F] [-S] [-A] [-j <INT>] [-m <TYPE>] [-b <NAME>] [-i <PATH>] [-o <PATH>] [-M <TYPE>] [-H <SITE>] [-P <EXE>] [-N <NAME>]\n                         [-C <PATH> [<PATH> ...]] [-L <LABEL> [<LABEL> ...]] [-T [<TYPE> [<TYPE> ...]]] [-fc <EXE>] [-cc <EXE>] [-cxx <EXE>]\n                         [--pyctest-token <TOKEN>] [--pyctest-token-file <FILE>] [--pyctest-vcs-type <TYPE>] [--pyctest-build-type <TYPE>]\n                         [--pyctest-trigger <TYPE>] [--pyctest-use-launchers <BOOL>] [--pyctest-ctest-args [<ARG> [<ARG> ...]]] [--pyctest-cdash-version <STR>]\n                         [--pyctest-submit-retry-count <INT>] [--pyctest-submit-retry-delay <INT>] [--pyctest-curl-options <LIST>]\n                         [--pyctest-drop-location <STR>] [--pyctest-drop-method <STR>] [--pyctest-drop-site <STR>] [--pyctest-drop-site-password <STR>]\n                         [--pyctest-drop-site-user <STR>] [--pyctest-nightly-start-time <STR>] [--pyctest-update-version-only]\n\nPyCTest argparse. Arguments after first '--' are passed directly to CTest, arguments after second '--' are passed directly to CMake\n\noptional arguments:\n  -h, --help                                                                   show this help message and exit\n  -F, --pyctest-clean-first                                                    Remove standard PyCTest files and binary directory (if not source directory)\n  -S, --pyctest-submit                                                         Enable submission to dashboard\n  -A, --pyctest-append                                                         Append to last invocation of CTest\n  -j <INT>, --pyctest-jobs <INT>                                               number of concurrent jobs\n  -m <TYPE>, --pyctest-mode <TYPE>                                             Run specific stage. Choices:\n                                                                               [Start,Update,Configure,Build,Test,Coverage,MemCheck,Submit,Stages]\n  -b <NAME>, --pyctest-build-name <NAME>                                       Build name for identification\n  -i <PATH>, --pyctest-source-dir <PATH>                                       Source directory\n  -o <PATH>, --pyctest-binary-dir <PATH>                                       Binary/build/working directory\n  -M <TYPE>, --pyctest-model <TYPE>                                            CTest submission model (track). Choices: [Nightly,Continuous,Experimental]\n  -H <SITE>, --pyctest-site <SITE>                                             CTest submission site\n  -P <EXE>, --pyctest-python-exe <EXE>                                         Python executable to use. This can be absolue, relative, or CMake path\n  -N <NAME>, --pyctest-project-name <NAME>                                     Name of project using PyCTest\n  -C <PATH> [<PATH> ...], --pyctest-cleanup <PATH> [<PATH> ...]                Remove standard PyCTest files and binary directory (if not source directory) and\n                                                                               exit\n  -L <LABEL> [<LABEL> ...], --pyctest-subproject-labels <LABEL> [<LABEL> ...]  Add labels for subproject\n  -T [<TYPE> [<TYPE> ...]], --pyctest-stages [<TYPE> [<TYPE> ...]]             Run multiple stages. Choices:\n                                                                               [Start,Update,Configure,Build,Test,Coverage,MemCheck,Submit]\n  -fc <EXE>, --pyctest-fortran-compiler <EXE>                                  Specify Fortan compiler (if needed)\n  -cc <EXE>, --pyctest-c-compiler <EXE>                                        Specify the C compiler (if needed)\n  -cxx <EXE>, --pyctest-cxx-compiler <EXE>                                     Specify C++ compiler (if needed)\n  --pyctest-token <TOKEN>                                                      CTest site token for submission\n  --pyctest-token-file <FILE>                                                  Path to file for CTest site token for submission\n  --pyctest-vcs-type <TYPE>                                                    Set to enable revision ID discovery during the Update stage. Choices:\n                                                                               [bzr,cvs,git,hg,p4,svn]\n  --pyctest-build-type <TYPE>                                                  Specify CMAKE_BUILD_TYPE (if using CMake). Choices:\n                                                                               [Release,RelWithDebInfo,Debug,MinSizeRel]\n  --pyctest-trigger <TYPE>                                                     DEPRECATED\n  --pyctest-use-launchers <BOOL>                                               Enable launchers\n  --pyctest-ctest-args [<ARG> [<ARG> ...]]                                     CTest arguments\n  --pyctest-cdash-version <STR>                                                Set CTest variable: 'CTEST_CDASH_VERSION'\n  --pyctest-submit-retry-count <INT>                                           Set CTest variable: 'CTEST_SUBMIT_RETRY_COUNT'\n  --pyctest-submit-retry-delay <INT>                                           Set CTest variable: 'CTEST_SUBMIT_RETRY_DELAY'\n  --pyctest-curl-options <LIST>                                                Set CTest variable: 'CTEST_CURL_OPTIONS'\n  --pyctest-drop-location <STR>                                                Set CTest variable: 'CTEST_DROP_LOCATION'\n  --pyctest-drop-method <STR>                                                  Set CTest variable: 'CTEST_DROP_METHOD'\n  --pyctest-drop-site <STR>                                                    Set CTest variable: 'CTEST_DROP_SITE'\n  --pyctest-drop-site-password <STR>                                           Set CTest variable: 'CTEST_DROP_SITE_PASSWORD'\n  --pyctest-drop-site-user <STR>                                               Set CTest variable: 'CTEST_DROP_SITE_USER'\n  --pyctest-nightly-start-time <STR>                                           Set CTest variable: 'CTEST_NIGHTLY_START_TIME'\n  --pyctest-update-version-only                                                Specify that you want the version control update command to only discover the\n                                                                               current version that is checked out, and not to update to a different version\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jrmadsen/pyctest.git", "keywords": "cmake,ctest,pybind11", "license": "MIT", "maintainer": "Jonathan R. Madsen", "maintainer_email": "jonrobm.programming@gmail.com", "name": "pyctest", "package_url": "https://pypi.org/project/pyctest/", "platform": "", "project_url": "https://pypi.org/project/pyctest/", "project_urls": {"Homepage": "https://github.com/jrmadsen/pyctest.git"}, "release_url": "https://pypi.org/project/pyctest/0.0.12/", "requires_dist": null, "requires_python": ">=2.6", "summary": "Python wrappers for generating CTest and submitting to CDash without a CMake build system", "version": "0.0.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyCTest</h1>\n<table>\n<thead>\n<tr>\n<th>Travis</th>\n<th>AppVeyor</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://travis-ci.org/jrmadsen/pyctest\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30a53237c02d4d94bb479f114b29c475e70701c0/68747470733a2f2f7472617669732d63692e6f72672f6a726d616473656e2f707963746573742e7376673f6272616e63683d6d6173746572\"></a></td>\n<td><a href=\"https://ci.appveyor.com/project/jrmadsen/pyctest/branch/master\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9918858f6ef803d123082136de02b51ebebedf79/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f70376d37366f767837736737383170662f6272616e63682f6d61737465723f7376673d74727565\"></a></td>\n</tr></tbody></table>\n<h1><a href=\"https://pyctest.readthedocs.io/en/latest/\" rel=\"nofollow\">PyCTest Documentation (readthedocs)</a></h1>\n<h2>GitHub</h2>\n<ul>\n<li><code>git clone https://github.com/jrmadsen/pyctest.git</code></li>\n</ul>\n<h2>PyPi</h2>\n<ul>\n<li><code>pip install pyctest</code></li>\n</ul>\n<h2>Anaconda Cloud</h2>\n<ul>\n<li><code>conda install -c jrmadsen pyctest</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Version</th>\n<th>Platforms</th>\n<th>Downloads</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://anaconda.org/jrmadsen/pyctest\" rel=\"nofollow\"><img alt=\"Conda Recipe\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32b8e1b452258fc0b27837cb937998530d9e78f4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7265636970652d707963746573742d677265656e2e737667\"></a></td>\n<td><a href=\"https://anaconda.org/jrmadsen/pyctest\" rel=\"nofollow\"><img alt=\"Anaconda-Server Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0276aafa14d5b9619bdbf7495d81503524303a3/68747470733a2f2f616e61636f6e64612e6f72672f6a726d616473656e2f707963746573742f6261646765732f76657273696f6e2e737667\"></a></td>\n<td><a href=\"https://anaconda.org/jrmadsen/pyctest\" rel=\"nofollow\"><img alt=\"Anaconda-Server Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb9e346a2e48130a1dba5a368a5e8db803468db4/68747470733a2f2f616e61636f6e64612e6f72672f6a726d616473656e2f707963746573742f6261646765732f706c6174666f726d732e737667\"></a></td>\n<td><a href=\"https://anaconda.org/jrmadsen/pyctest\" rel=\"nofollow\"><img alt=\"Anaconda-Server Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e493bf553734c44c27ce232b870a7186b5e4a1bf/68747470733a2f2f616e61636f6e64612e6f72672f6a726d616473656e2f707963746573742f6261646765732f646f776e6c6f6164732e737667\"></a></td>\n</tr></tbody></table>\n<h2>conda-forge</h2>\n<ul>\n<li><code>conda install -c conda-forge pyctest</code></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Version</th>\n<th>Platforms</th>\n<th>Downloads</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://anaconda.org/conda-forge/pyctest\" rel=\"nofollow\"><img alt=\"Conda Recipe\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32b8e1b452258fc0b27837cb937998530d9e78f4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7265636970652d707963746573742d677265656e2e737667\"></a></td>\n<td><a href=\"https://anaconda.org/conda-forge/pyctest\" rel=\"nofollow\"><img alt=\"Conda Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7f7ceeb4411b88cd19439c46da7abab514e7100/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f707963746573742e737667\"></a></td>\n<td><a href=\"https://anaconda.org/conda-forge/pyctest\" rel=\"nofollow\"><img alt=\"Conda Platforms\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b6f9389161e9fa7f8f593213701bda1096b6fe7/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f706e2f636f6e64612d666f7267652f707963746573742e737667\"></a></td>\n<td><a href=\"https://anaconda.org/conda-forge/pyctest\" rel=\"nofollow\"><img alt=\"Conda Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/373c2b98ba1a15847e0892ac3cd88bbbc1546116/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f646e2f636f6e64612d666f7267652f707963746573742e737667\"></a></td>\n</tr></tbody></table>\n<h1>Benefits</h1>\n<ul>\n<li>Integration into continuous integration systems (e.g. Travis, AppVeyor, CircleCI, etc.) and pushing to CDash dashboard will combine all the results in one place\n<ul>\n<li>The warnings and errors are enumerated in CDash (no more parsing stdout logs for errors)</li>\n</ul>\n</li>\n<li>Easily create platform-independent testing</li>\n<li>No need to migrate build system to CMake -- just specify <code>pyctest.BUILD_COMMAND</code></li>\n</ul>\n<h1>General Setup</h1>\n<ul>\n<li>Add PyCTest to conda environment: <code>conda install pyctest</code></li>\n<li>Write a driver Python script, e.g. <code>pyctest-runner.py</code>, in top of the source code tree</li>\n</ul>\n<h2>Example for Python project</h2>\n<p>The following is an example for a Python code with a compiled C extension that uses <code>nosetests</code> for unit-testing:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span><span class=\"o\">,</span> <span class=\"nn\">sys</span><span class=\"o\">,</span> <span class=\"nn\">platform</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.pyctest</span> <span class=\"k\">as</span> <span class=\"nn\">pyctest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.helpers</span> <span class=\"k\">as</span> <span class=\"nn\">helpers</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">helpers</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"s2\">\"ProjectName\"</span><span class=\"p\">,</span> <span class=\"n\">source_dir</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span><span class=\"n\">binary_dir</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">vcs_type</span><span class=\"o\">=</span><span class=\"s2\">\"git\"</span><span class=\"p\">)</span>\n<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BUILD_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">)</span>\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BUILD_COMMAND</span> <span class=\"o\">=</span> <span class=\"s2\">\"python setup.py build_ext --inplace\"</span>\n\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n<span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"s2\">\"unittest\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># insert the command to run the tests for project</span>\n<span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetCommand</span><span class=\"p\">([</span><span class=\"s2\">\"nosetests\"</span><span class=\"p\">])</span>\n\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h2>Example for autotools project</h2>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span><span class=\"o\">,</span> <span class=\"nn\">sys</span><span class=\"o\">,</span> <span class=\"nn\">platform</span>\n<span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span> <span class=\"k\">as</span> <span class=\"nn\">mp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.pyctest</span> <span class=\"k\">as</span> <span class=\"nn\">pyctest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.helpers</span> <span class=\"k\">as</span> <span class=\"nn\">helpers</span>\n\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">helpers</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"s2\">\"ProjectName\"</span><span class=\"p\">,</span> <span class=\"n\">source_dir</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">binary_dir</span><span class=\"o\">=</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span>\n                                <span class=\"n\">vcs_type</span><span class=\"o\">=</span><span class=\"s2\">\"git\"</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"-n\"</span><span class=\"p\">,</span> <span class=\"s2\">\"--build\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"Build name for identification\"</span><span class=\"p\">)</span>\n<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># CONFIGURE_COMMAND can only run one command so if autogen is required, just execute it here</span>\n<span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">([</span><span class=\"s2\">\"./autogen.sh\"</span><span class=\"p\">])</span>\n<span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">SetWorkingDirectory</span><span class=\"p\">(</span><span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">SOURCE_DIRECTORY</span><span class=\"p\">)</span>\n<span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">SetErrorQuiet</span><span class=\"p\">(</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">Execute</span><span class=\"p\">()</span>\n\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BUILD_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">)</span>\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">CONFIGURE_COMMAND</span> <span class=\"o\">=</span> <span class=\"s2\">\"./configure\"</span>\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BUILD_COMMAND</span> <span class=\"o\">=</span> <span class=\"s2\">\"make -j</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">cpu_count</span><span class=\"p\">())</span>\n\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n<span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"s2\">\"unittest\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># insert the command to run the tests for project</span>\n<span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetCommand</span><span class=\"p\">([</span><span class=\"s2\">\"./run-testing.sh\"</span><span class=\"p\">])</span>\n\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h2>Example for CMake project</h2>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">platform</span>\n<span class=\"kn\">import</span> <span class=\"nn\">multiprocessing</span> <span class=\"k\">as</span> <span class=\"nn\">mp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.pyctest</span> <span class=\"k\">as</span> <span class=\"nn\">pyctest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.helpers</span> <span class=\"k\">as</span> <span class=\"nn\">helpers</span>\n\n<span class=\"n\">binary_dir</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"s2\">\"build-ProjectName\"</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">helpers</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"s2\">\"ProjectName\"</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"n\">binary_dir</span><span class=\"p\">)</span>\n<span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s2\">\"-n\"</span><span class=\"p\">,</span> <span class=\"s2\">\"--build\"</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s2\">\"Build name for identification\"</span><span class=\"p\">)</span>\n<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BUILD_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">)</span>\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">UPDATE_COMMAND</span> <span class=\"o\">=</span> <span class=\"s2\">\"git\"</span>\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">CONFIGURE_COMMAND</span> <span class=\"o\">=</span> <span class=\"s2\">\"cmake </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">SOURCE_DIRECTORY</span><span class=\"p\">)</span>\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BUILD_COMMAND</span> <span class=\"o\">=</span> <span class=\"s2\">\"cmake --build </span><span class=\"si\">{}</span><span class=\"s2\"> --target all -- -j</span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BINARY_DIRECTORY</span><span class=\"p\">,</span> <span class=\"n\">mp</span><span class=\"o\">.</span><span class=\"n\">cpu_count</span><span class=\"p\">())</span>\n\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n<span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"s2\">\"unittest\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># insert the command to run the tests for project</span>\n<span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetCommand</span><span class=\"p\">([</span><span class=\"s2\">\"./run-testing.sh\"</span><span class=\"p\">])</span>\n\n<span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>Python Modules</h3>\n<ul>\n<li><code>import pyctest</code> -- global package</li>\n<li><code>import pyctest.pyctest</code> -- CTest module</li>\n<li><code>import pyctest.pycmake</code> -- CMake module</li>\n<li><code>import pyctest.helpers</code> -- Helpers module\n<ul>\n<li>includes command line arguments (<code>argparse</code>) for PyCTest</li>\n</ul>\n</li>\n</ul>\n<h3>Direct Access to CMake/CTest/CPack Executables</h3>\n<ul>\n<li><code>python -m pyctest.cmake &lt;ARGS&gt;</code> == <code>cmake &lt;ARGS&gt;</code></li>\n<li><code>python -m pyctest.ctest &lt;ARGS&gt;</code> == <code>ctest &lt;ARGS&gt;</code></li>\n<li><code>python -m pyctest.cpack &lt;ARGS&gt;</code> == <code>cpack &lt;ARGS&gt;</code></li>\n</ul>\n<p>Following Python code:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyctest.ctest</span> <span class=\"kn\">import</span> <span class=\"n\">CTest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyctest.cmake</span> <span class=\"kn\">import</span> <span class=\"n\">CMake</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pyctest.cpack</span> <span class=\"kn\">import</span> <span class=\"n\">CPack</span>\n\n<span class=\"n\">CMake</span><span class=\"p\">({</span><span class=\"s2\">\"CMAKE_BUILD_TYPE\"</span><span class=\"p\">:</span><span class=\"s2\">\"Release\"</span><span class=\"p\">},</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"s2\">\"-G\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Ninja\"</span><span class=\"p\">)</span>\n<span class=\"n\">CTest</span><span class=\"p\">(</span><span class=\"s2\">\"--build-and-test\"</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"s2\">\"-VV\"</span><span class=\"p\">)</span>\n<span class=\"n\">CPack</span><span class=\"p\">(</span><span class=\"s2\">\"-G\"</span><span class=\"p\">,</span> <span class=\"s2\">\"TGZ\"</span><span class=\"p\">)</span>\n</pre>\n<p>is equivalent to the following shell commands:</p>\n<pre>$ cmake -DCMAKE_BUILD_TYPE<span class=\"o\">=</span>Release <span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span> -G Ninja\n$ ctest --build-and-test <span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span> -VV\n$ cpack -G TGZ\n</pre>\n<h2>Standard Configuration Variables</h2>\n<ul>\n<li><code>pyctest.PROJECT_NAME</code></li>\n<li><code>pyctest.SOURCE_DIRECTORY</code></li>\n<li><code>pyctest.BINARY_DIRECTORY</code></li>\n<li><code>pyctest.SITE</code></li>\n<li><code>pyctest.BUILD_NAME</code></li>\n<li><code>pyctest.TRIGGER</code></li>\n<li><code>pyctest.CHECKOUT_COMMAND</code></li>\n<li><code>pyctest.BUILD_COMMAND</code></li>\n<li><code>pyctest.MODEL</code></li>\n<li><code>pyctest.CUSTOM_COVERAGE_EXCLUDE</code></li>\n<li><code>pyctest.CUSTOM_MAXIMUM_NUMBER_OF_ERRORS</code></li>\n<li><code>pyctest.CUSTOM_MAXIMUM_NUMBER_OF_WARNINGS</code></li>\n<li><code>pyctest.CUSTOM_MAXIMUM_PASSED_TEST_OUTPUT_SIZE</code></li>\n</ul>\n<h3>Setting Arbitrary Variables</h3>\n<pre>    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s2\">\"CTEST_TOKEN_FILE\"</span><span class=\"p\">,</span> <span class=\"s2\">\"$</span><span class=\"si\">{CMAKE_CURRENT_LIST_DIR}</span><span class=\"s2\">/.ctest-token\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Generating a Test</h3>\n<pre>    <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"s2\">\"nosetests\"</span><span class=\"p\">)</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetCommand</span><span class=\"p\">([</span><span class=\"s2\">\"nosetests\"</span><span class=\"p\">,</span> <span class=\"s2\">\"test\"</span><span class=\"p\">,</span> <span class=\"s2\">\"--cover-xml\"</span><span class=\"p\">,</span> <span class=\"s2\">\"--cover-xml-file=coverage.xml\"</span><span class=\"p\">])</span>\n    <span class=\"c1\"># set directory to run test</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetProperty</span><span class=\"p\">(</span><span class=\"s2\">\"WORKING_DIRECTORY\"</span><span class=\"p\">,</span> <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BINARY_DIRECTORY</span><span class=\"p\">)</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetProperty</span><span class=\"p\">(</span><span class=\"s2\">\"RUN_SERIAL\"</span><span class=\"p\">,</span> <span class=\"s2\">\"ON\"</span><span class=\"p\">)</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetProperty</span><span class=\"p\">(</span><span class=\"s2\">\"ENVIRONMENT\"</span><span class=\"p\">,</span> <span class=\"s2\">\"OMP_NUM_THREADS=1\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Examples</h3>\n<ul>\n<li><a href=\"https://github.com/jrmadsen/pyctest/blob/master/examples/Basic/README.md\" rel=\"nofollow\">Basic example</a></li>\n<li><a href=\"https://github.com/jrmadsen/pyctest/blob/master/examples/TomoPy/README.md\" rel=\"nofollow\">Advanced example</a>\n<ul>\n<li>includes submission to CDash dashboard</li>\n</ul>\n</li>\n</ul>\n<h3>CDash Integration Example</h3>\n<p>Results from running the TomoPy example can be found at the <a href=\"https://cdash.nersc.gov/index.php?project=TomoPy\" rel=\"nofollow\">TomoPy CDash Testing Dashboard @ NERSC</a></p>\n<ul>\n<li>Python code with C extensions without CMake build system</li>\n<li>The build logs from \"python setup.py install\" are registered in the \"Build\" section</li>\n<li>The <code>nosetests test</code> command + other are wrapped into CTests</li>\n</ul>\n<h2>Testing Example</h2>\n<p>PyCTest can be used to simple execute tests and submit to a dashboard without any configuration, build, etc. steps</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n<span class=\"kn\">import</span> <span class=\"nn\">platform</span>\n<span class=\"kn\">import</span> <span class=\"nn\">traceback</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.pyctest</span> <span class=\"k\">as</span> <span class=\"nn\">pyctest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.pycmake</span> <span class=\"k\">as</span> <span class=\"nn\">pycmake</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyctest.helpers</span> <span class=\"k\">as</span> <span class=\"nn\">helpers</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n\n    <span class=\"n\">directory</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"s2\">\"pycm-test\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># these are required</span>\n    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">PROJECT_NAME</span> <span class=\"o\">=</span> <span class=\"s2\">\"PyCTest\"</span>\n    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">SOURCE_DIRECTORY</span> <span class=\"o\">=</span> <span class=\"n\">directory</span>\n    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BINARY_DIRECTORY</span> <span class=\"o\">=</span> <span class=\"n\">directory</span>\n\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">helpers</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">PROJECT_NAME</span><span class=\"p\">,</span>\n                                  <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">SOURCE_DIRECTORY</span><span class=\"p\">,</span>\n                                  <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">BINARY_DIRECTORY</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># set explicitly</span>\n    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">MODEL</span> <span class=\"o\">=</span> <span class=\"s2\">\"Continuous\"</span>\n    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">SITE</span> <span class=\"o\">=</span> <span class=\"n\">platform</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># create a Test object</span>\n    <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"s2\">\"list_directory\"</span><span class=\"p\">)</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetCommand</span><span class=\"p\">([</span><span class=\"s2\">\"ls\"</span><span class=\"p\">,</span> <span class=\"n\">directory</span><span class=\"p\">])</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetProperty</span><span class=\"p\">(</span><span class=\"s2\">\"WORKING_DIRECTORY\"</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">())</span>\n\n    <span class=\"c1\"># create a second test</span>\n    <span class=\"c1\"># previous test is already stored by PyCTest</span>\n    <span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">test</span><span class=\"p\">()</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetName</span><span class=\"p\">(</span><span class=\"s2\">\"hostname\"</span><span class=\"p\">)</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetCommand</span><span class=\"p\">([</span><span class=\"s2\">\"hostname\"</span><span class=\"p\">])</span>\n    <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">SetProperty</span><span class=\"p\">(</span><span class=\"s2\">\"TIMEOUT\"</span><span class=\"p\">,</span> <span class=\"s2\">\"10\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># generate the CTestConfig.cmake and CTestCustom.cmake</span>\n    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">generate_config</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># generate the CTestTestfile.cmake file</span>\n    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">generate_test_file</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># run CTest -- e.g. ctest -VV ${PWD}/pycm-test</span>\n    <span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">pyctest</span><span class=\"o\">.</span><span class=\"n\">ARGUMENTS</span><span class=\"p\">,</span> <span class=\"n\">directory</span><span class=\"p\">)</span>\n</pre>\n<pre>CTest arguments <span class=\"o\">(</span>default<span class=\"o\">)</span>: <span class=\"s1\">'-V -DSTAGES=Start;Update;Configure;Build;Test;Coverage;MemCheck -S Stages.cmake -j1'</span>\nWriting CTest <span class=\"nb\">test</span> file: <span class=\"s2\">\"/Users/jrmadsen/devel/c++/pyctest-master/pycm-test/CTestTestfile.cmake\"</span>...\nGenerating <span class=\"nb\">test</span> <span class=\"s2\">\"list_directory\"</span>...\nGenerating <span class=\"nb\">test</span> <span class=\"s2\">\"hostname\"</span>...\n-- <span class=\"nv\">STAGES</span> <span class=\"o\">=</span> Start<span class=\"p\">;</span>Update<span class=\"p\">;</span>Configure<span class=\"p\">;</span>Build<span class=\"p\">;</span>Test<span class=\"p\">;</span>Coverage<span class=\"p\">;</span>MemCheck\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Running CTEST_START stage...\nRun dashboard with model Continuous\n   Source directory: /Users/jrmadsen/devel/c++/pyctest-master/pycm-test\n   Build directory: /Users/jrmadsen/devel/c++/pyctest-master/pycm-test\n   Track: Continuous\n   Reading ctest configuration file: /Users/jrmadsen/devel/c++/pyctest-master/pycm-test/CTestConfig.cmake\n   Site: JRM-macOS-DOE.local\n   Build name: <span class=\"o\">[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]</span>\n   Use Continuous tag: <span class=\"m\">20181129</span>-2118\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Skipping CTEST_UPDATE stage...\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Skipping CTEST_CONFIGURE stage...\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Skipping CTEST_BUILD stage...\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Running CTEST_TEST stage...\nTest project /Users/jrmadsen/devel/c++/pyctest-master/pycm-test\n    Start <span class=\"m\">1</span>: list_directory\n<span class=\"m\">1</span>/2 Test <span class=\"c1\">#1: list_directory ...................   Passed    0.00 sec</span>\n    Start <span class=\"m\">2</span>: hostname\n<span class=\"m\">2</span>/2 Test <span class=\"c1\">#2: hostname .........................   Passed    0.00 sec</span>\n\n<span class=\"m\">100</span>% tests passed, <span class=\"m\">0</span> tests failed out of <span class=\"m\">2</span>\n\nTotal Test <span class=\"nb\">time</span> <span class=\"o\">(</span>real<span class=\"o\">)</span> <span class=\"o\">=</span>   <span class=\"m\">0</span>.01 sec\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Skipping CTEST_COVERAGE stage...\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Skipping CTEST_MEMCHECK stage...\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Skipping CTEST_SUBMIT stage...\n-- <span class=\"o\">[[</span>Darwin macOS <span class=\"m\">10</span>.13.6 x86_64<span class=\"o\">]</span> <span class=\"o\">[</span>Python <span class=\"m\">3</span>.6.7<span class=\"o\">]]</span> Finished Continuous Stages <span class=\"o\">(</span>Start<span class=\"p\">;</span>Update<span class=\"p\">;</span>Configure<span class=\"p\">;</span>Build<span class=\"p\">;</span>Test<span class=\"p\">;</span>Coverage<span class=\"p\">;</span>MemCheck<span class=\"o\">)</span>\n</pre>\n<h2>Command Line Interface</h2>\n<pre>PyCTest args: <span class=\"o\">[</span><span class=\"s1\">'--help'</span><span class=\"o\">]</span>\n  CTest args: <span class=\"o\">[]</span>\n  CMake args: <span class=\"o\">[]</span>\nusage: pyctest-runner.py <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-F<span class=\"o\">]</span> <span class=\"o\">[</span>-S<span class=\"o\">]</span> <span class=\"o\">[</span>-A<span class=\"o\">]</span> <span class=\"o\">[</span>-j &lt;INT&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-m &lt;TYPE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-b &lt;NAME&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-i &lt;PATH&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-o &lt;PATH&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-M &lt;TYPE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-H &lt;SITE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-P &lt;EXE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-N &lt;NAME&gt;<span class=\"o\">]</span>\n                         <span class=\"o\">[</span>-C &lt;PATH&gt; <span class=\"o\">[</span>&lt;PATH&gt; ...<span class=\"o\">]]</span> <span class=\"o\">[</span>-L &lt;LABEL&gt; <span class=\"o\">[</span>&lt;LABEL&gt; ...<span class=\"o\">]]</span> <span class=\"o\">[</span>-T <span class=\"o\">[</span>&lt;TYPE&gt; <span class=\"o\">[</span>&lt;TYPE&gt; ...<span class=\"o\">]]]</span> <span class=\"o\">[</span>-fc &lt;EXE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-cc &lt;EXE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>-cxx &lt;EXE&gt;<span class=\"o\">]</span>\n                         <span class=\"o\">[</span>--pyctest-token &lt;TOKEN&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-token-file &lt;FILE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-vcs-type &lt;TYPE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-build-type &lt;TYPE&gt;<span class=\"o\">]</span>\n                         <span class=\"o\">[</span>--pyctest-trigger &lt;TYPE&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-use-launchers &lt;BOOL&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-ctest-args <span class=\"o\">[</span>&lt;ARG&gt; <span class=\"o\">[</span>&lt;ARG&gt; ...<span class=\"o\">]]]</span> <span class=\"o\">[</span>--pyctest-cdash-version &lt;STR&gt;<span class=\"o\">]</span>\n                         <span class=\"o\">[</span>--pyctest-submit-retry-count &lt;INT&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-submit-retry-delay &lt;INT&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-curl-options &lt;LIST&gt;<span class=\"o\">]</span>\n                         <span class=\"o\">[</span>--pyctest-drop-location &lt;STR&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-drop-method &lt;STR&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-drop-site &lt;STR&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-drop-site-password &lt;STR&gt;<span class=\"o\">]</span>\n                         <span class=\"o\">[</span>--pyctest-drop-site-user &lt;STR&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-nightly-start-time &lt;STR&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--pyctest-update-version-only<span class=\"o\">]</span>\n\nPyCTest argparse. Arguments after first <span class=\"s1\">'--'</span> are passed directly to CTest, arguments after second <span class=\"s1\">'--'</span> are passed directly to CMake\n\noptional arguments:\n  -h, --help                                                                   show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -F, --pyctest-clean-first                                                    Remove standard PyCTest files and binary directory <span class=\"o\">(</span><span class=\"k\">if</span> not <span class=\"nb\">source</span> directory<span class=\"o\">)</span>\n  -S, --pyctest-submit                                                         Enable submission to dashboard\n  -A, --pyctest-append                                                         Append to last invocation of CTest\n  -j &lt;INT&gt;, --pyctest-jobs &lt;INT&gt;                                               number of concurrent <span class=\"nb\">jobs</span>\n  -m &lt;TYPE&gt;, --pyctest-mode &lt;TYPE&gt;                                             Run specific stage. Choices:\n                                                                               <span class=\"o\">[</span>Start,Update,Configure,Build,Test,Coverage,MemCheck,Submit,Stages<span class=\"o\">]</span>\n  -b &lt;NAME&gt;, --pyctest-build-name &lt;NAME&gt;                                       Build name <span class=\"k\">for</span> identification\n  -i &lt;PATH&gt;, --pyctest-source-dir &lt;PATH&gt;                                       Source directory\n  -o &lt;PATH&gt;, --pyctest-binary-dir &lt;PATH&gt;                                       Binary/build/working directory\n  -M &lt;TYPE&gt;, --pyctest-model &lt;TYPE&gt;                                            CTest submission model <span class=\"o\">(</span>track<span class=\"o\">)</span>. Choices: <span class=\"o\">[</span>Nightly,Continuous,Experimental<span class=\"o\">]</span>\n  -H &lt;SITE&gt;, --pyctest-site &lt;SITE&gt;                                             CTest submission site\n  -P &lt;EXE&gt;, --pyctest-python-exe &lt;EXE&gt;                                         Python executable to use. This can be absolue, relative, or CMake path\n  -N &lt;NAME&gt;, --pyctest-project-name &lt;NAME&gt;                                     Name of project using PyCTest\n  -C &lt;PATH&gt; <span class=\"o\">[</span>&lt;PATH&gt; ...<span class=\"o\">]</span>, --pyctest-cleanup &lt;PATH&gt; <span class=\"o\">[</span>&lt;PATH&gt; ...<span class=\"o\">]</span>                Remove standard PyCTest files and binary directory <span class=\"o\">(</span><span class=\"k\">if</span> not <span class=\"nb\">source</span> directory<span class=\"o\">)</span> and\n                                                                               <span class=\"nb\">exit</span>\n  -L &lt;LABEL&gt; <span class=\"o\">[</span>&lt;LABEL&gt; ...<span class=\"o\">]</span>, --pyctest-subproject-labels &lt;LABEL&gt; <span class=\"o\">[</span>&lt;LABEL&gt; ...<span class=\"o\">]</span>  Add labels <span class=\"k\">for</span> subproject\n  -T <span class=\"o\">[</span>&lt;TYPE&gt; <span class=\"o\">[</span>&lt;TYPE&gt; ...<span class=\"o\">]]</span>, --pyctest-stages <span class=\"o\">[</span>&lt;TYPE&gt; <span class=\"o\">[</span>&lt;TYPE&gt; ...<span class=\"o\">]]</span>             Run multiple stages. Choices:\n                                                                               <span class=\"o\">[</span>Start,Update,Configure,Build,Test,Coverage,MemCheck,Submit<span class=\"o\">]</span>\n  -fc &lt;EXE&gt;, --pyctest-fortran-compiler &lt;EXE&gt;                                  Specify Fortan compiler <span class=\"o\">(</span><span class=\"k\">if</span> needed<span class=\"o\">)</span>\n  -cc &lt;EXE&gt;, --pyctest-c-compiler &lt;EXE&gt;                                        Specify the C compiler <span class=\"o\">(</span><span class=\"k\">if</span> needed<span class=\"o\">)</span>\n  -cxx &lt;EXE&gt;, --pyctest-cxx-compiler &lt;EXE&gt;                                     Specify C++ compiler <span class=\"o\">(</span><span class=\"k\">if</span> needed<span class=\"o\">)</span>\n  --pyctest-token &lt;TOKEN&gt;                                                      CTest site token <span class=\"k\">for</span> submission\n  --pyctest-token-file &lt;FILE&gt;                                                  Path to file <span class=\"k\">for</span> CTest site token <span class=\"k\">for</span> submission\n  --pyctest-vcs-type &lt;TYPE&gt;                                                    Set to <span class=\"nb\">enable</span> revision ID discovery during the Update stage. Choices:\n                                                                               <span class=\"o\">[</span>bzr,cvs,git,hg,p4,svn<span class=\"o\">]</span>\n  --pyctest-build-type &lt;TYPE&gt;                                                  Specify CMAKE_BUILD_TYPE <span class=\"o\">(</span><span class=\"k\">if</span> using CMake<span class=\"o\">)</span>. Choices:\n                                                                               <span class=\"o\">[</span>Release,RelWithDebInfo,Debug,MinSizeRel<span class=\"o\">]</span>\n  --pyctest-trigger &lt;TYPE&gt;                                                     DEPRECATED\n  --pyctest-use-launchers &lt;BOOL&gt;                                               Enable launchers\n  --pyctest-ctest-args <span class=\"o\">[</span>&lt;ARG&gt; <span class=\"o\">[</span>&lt;ARG&gt; ...<span class=\"o\">]]</span>                                     CTest arguments\n  --pyctest-cdash-version &lt;STR&gt;                                                Set CTest variable: <span class=\"s1\">'CTEST_CDASH_VERSION'</span>\n  --pyctest-submit-retry-count &lt;INT&gt;                                           Set CTest variable: <span class=\"s1\">'CTEST_SUBMIT_RETRY_COUNT'</span>\n  --pyctest-submit-retry-delay &lt;INT&gt;                                           Set CTest variable: <span class=\"s1\">'CTEST_SUBMIT_RETRY_DELAY'</span>\n  --pyctest-curl-options &lt;LIST&gt;                                                Set CTest variable: <span class=\"s1\">'CTEST_CURL_OPTIONS'</span>\n  --pyctest-drop-location &lt;STR&gt;                                                Set CTest variable: <span class=\"s1\">'CTEST_DROP_LOCATION'</span>\n  --pyctest-drop-method &lt;STR&gt;                                                  Set CTest variable: <span class=\"s1\">'CTEST_DROP_METHOD'</span>\n  --pyctest-drop-site &lt;STR&gt;                                                    Set CTest variable: <span class=\"s1\">'CTEST_DROP_SITE'</span>\n  --pyctest-drop-site-password &lt;STR&gt;                                           Set CTest variable: <span class=\"s1\">'CTEST_DROP_SITE_PASSWORD'</span>\n  --pyctest-drop-site-user &lt;STR&gt;                                               Set CTest variable: <span class=\"s1\">'CTEST_DROP_SITE_USER'</span>\n  --pyctest-nightly-start-time &lt;STR&gt;                                           Set CTest variable: <span class=\"s1\">'CTEST_NIGHTLY_START_TIME'</span>\n  --pyctest-update-version-only                                                Specify that you want the version control update <span class=\"nb\">command</span> to only discover the\n                                                                               current version that is checked out, and not to update to a different version\n</pre>\n\n          </div>"}, "last_serial": 4640506, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b1dcb131cbbbc46f46ccc741fba5d523", "sha256": "980c22c5b62796d251c0fad2fec09844f767b8b006ff73fca49dd5e9890d53da"}, "downloads": -1, "filename": "pyctest-0.0.1.tar.gz", "has_sig": true, "md5_digest": "b1dcb131cbbbc46f46ccc741fba5d523", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9117968, "upload_time": "2018-06-15T07:11:52", "upload_time_iso_8601": "2018-06-15T07:11:52.046882Z", "url": "https://files.pythonhosted.org/packages/fb/d8/5dc8c9917f0a6042c392d8bed387f2fbbd7f037f60207ef95ce9d874c8c5/pyctest-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "7172cfc1f9d37e41f412e9122a4dada7", "sha256": "28c6f154fd4953e72b42441015534a32250b265433628d232acc5befb969eed5"}, "downloads": -1, "filename": "pyctest-0.0.10.tar.gz", "has_sig": true, "md5_digest": "7172cfc1f9d37e41f412e9122a4dada7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9088232, "upload_time": "2018-12-11T09:28:50", "upload_time_iso_8601": "2018-12-11T09:28:50.068930Z", "url": "https://files.pythonhosted.org/packages/4d/c2/2d75b0e6cd7cdf185331c7ab418d9eee001876231678924345f40dcae277/pyctest-0.0.10.tar.gz", "yanked": false}], "0.0.10rc0": [{"comment_text": "", "digests": {"md5": "57bfec8f03d9385bf857415a7efa08d3", "sha256": "0829f9b7980d8333ca2d84113cfe39be0f003abfe457a58fb53e7578aa92f60a"}, "downloads": -1, "filename": "pyctest-0.0.10rc0.tar.gz", "has_sig": true, "md5_digest": "57bfec8f03d9385bf857415a7efa08d3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9092270, "upload_time": "2018-12-11T09:17:24", "upload_time_iso_8601": "2018-12-11T09:17:24.982787Z", "url": "https://files.pythonhosted.org/packages/bc/52/a641d6c186e187ad7d70a6adb8a72d3a1afca58a6456fcbc2b54ec1ef3c1/pyctest-0.0.10rc0.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "ec41fae82c314ded48e9e9faa4cf8ef5", "sha256": "4e174e3e81c8bae665d83072b267c2c450c46421c21532fca8f0e816039090dc"}, "downloads": -1, "filename": "pyctest-0.0.11.tar.gz", "has_sig": true, "md5_digest": "ec41fae82c314ded48e9e9faa4cf8ef5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9434347, "upload_time": "2018-12-28T08:44:49", "upload_time_iso_8601": "2018-12-28T08:44:49.580142Z", "url": "https://files.pythonhosted.org/packages/cc/18/5437cb68049de603de1040cbaa50cfa43a77ede7ddd34c7a713985beed79/pyctest-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "45afd65dd81b15958553c637270a26a2", "sha256": "db7b54439049fbbcfe77fc8ea38bd69a45833edd78d04af28c890001c373a884"}, "downloads": -1, "filename": "pyctest-0.0.12.tar.gz", "has_sig": true, "md5_digest": "45afd65dd81b15958553c637270a26a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9416323, "upload_time": "2018-12-28T10:09:15", "upload_time_iso_8601": "2018-12-28T10:09:15.968862Z", "url": "https://files.pythonhosted.org/packages/7a/64/1b9c316fed0834901370a7aa72fd9f2d99b0824a4cc241b8963e7e6917fd/pyctest-0.0.12.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b5faffeb74db76a973cab26c2dadb9eb", "sha256": "07c7465fbb809b4180081900e5674e354ce0aa96c4e501f5a75d8fc0d84eab2c"}, "downloads": -1, "filename": "pyctest-0.0.2.tar.gz", "has_sig": true, "md5_digest": "b5faffeb74db76a973cab26c2dadb9eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9097206, "upload_time": "2018-06-15T10:08:55", "upload_time_iso_8601": "2018-06-15T10:08:55.421347Z", "url": "https://files.pythonhosted.org/packages/17/29/414b373b1bbc7de947f909c51e5369a5d45202172f725f64b87a86582528/pyctest-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "cd6e21c0800c7a25129ef10dac775f11", "sha256": "1ee58fcb38e885532732845d6cdf3d980c5f893827db73e4cea81876dd82ef28"}, "downloads": -1, "filename": "pyctest-0.0.3.tar.gz", "has_sig": true, "md5_digest": "cd6e21c0800c7a25129ef10dac775f11", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9097966, "upload_time": "2018-06-15T19:17:21", "upload_time_iso_8601": "2018-06-15T19:17:21.665410Z", "url": "https://files.pythonhosted.org/packages/6c/01/33fe42faff3b08156746bf37bd1bd676f701bbdaf54caf5320b0b07da195/pyctest-0.0.3.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "1480bf8eaa0940027da6fde143affd19", "sha256": "7c95bfe838741d3b8eda0bc45b769443dd6ae8a8a278e71b9c2e9f91562ab5cd"}, "downloads": -1, "filename": "pyctest-0.0.5.tar.gz", "has_sig": true, "md5_digest": "1480bf8eaa0940027da6fde143affd19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9102848, "upload_time": "2018-07-06T09:44:23", "upload_time_iso_8601": "2018-07-06T09:44:23.186110Z", "url": "https://files.pythonhosted.org/packages/30/6d/75ff871a636135812ef112656a00b9fee2d461b44955a5ff75633712f679/pyctest-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "83978de146c73b78ce8c61d9b8d1b126", "sha256": "4d5dffafe130e71c7ed25c65ec48f5ddd6977e83fc3f3dbd2c69a1f8515d5f2a"}, "downloads": -1, "filename": "pyctest-0.0.6.tar.gz", "has_sig": true, "md5_digest": "83978de146c73b78ce8c61d9b8d1b126", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9103618, "upload_time": "2018-07-06T10:51:39", "upload_time_iso_8601": "2018-07-06T10:51:39.040620Z", "url": "https://files.pythonhosted.org/packages/c2/fc/a9d7922a192aea373aaf5b49229a37bbf03532410531d43ab539b465c68b/pyctest-0.0.6.tar.gz", "yanked": false}], "0.0.6.dev0": [{"comment_text": "", "digests": {"md5": "5c13ac72d69781ae97423154ab74a238", "sha256": "0a573a9704657e6c3de38dc67a2e8b9d5e9f994666b4dc6ac351e7f7b967b801"}, "downloads": -1, "filename": "pyctest-0.0.6.dev0.tar.gz", "has_sig": true, "md5_digest": "5c13ac72d69781ae97423154ab74a238", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9113745, "upload_time": "2018-07-06T10:35:03", "upload_time_iso_8601": "2018-07-06T10:35:03.111706Z", "url": "https://files.pythonhosted.org/packages/cf/0e/43cf8679d717c2e0b220356570dd3d3cf684f877735bfcb948430b70eaa7/pyctest-0.0.6.dev0.tar.gz", "yanked": false}], "0.0.6.dev1": [{"comment_text": "", "digests": {"md5": "5b4fc6869aa0248e826f6a9fd7858c53", "sha256": "d95fe97ec7704e1bd5eb49a4a2b1d58e2d8ec424873dca5156ff09adcd4e3ac7"}, "downloads": -1, "filename": "pyctest-0.0.6.dev1.tar.gz", "has_sig": true, "md5_digest": "5b4fc6869aa0248e826f6a9fd7858c53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9121214, "upload_time": "2018-07-06T10:37:02", "upload_time_iso_8601": "2018-07-06T10:37:02.465671Z", "url": "https://files.pythonhosted.org/packages/6f/c3/0cdd85f865d09bafbe7fc6c67ae1da550d0256ea7c9af1cdac8d2ed649d4/pyctest-0.0.6.dev1.tar.gz", "yanked": false}], "0.0.6.dev2": [{"comment_text": "", "digests": {"md5": "0fe2e15230f7daaf4e74291fff72ed3e", "sha256": "5488aa44a30780874c3f6d9d406dcf3b585898686e5deab0d135bee7b906b161"}, "downloads": -1, "filename": "pyctest-0.0.6.dev2.tar.gz", "has_sig": true, "md5_digest": "0fe2e15230f7daaf4e74291fff72ed3e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9121032, "upload_time": "2018-07-06T10:45:50", "upload_time_iso_8601": "2018-07-06T10:45:50.021464Z", "url": "https://files.pythonhosted.org/packages/bd/ff/87c702edc1f1b12a020a30f734b0b6d0b2b0afe2e186b380cc84064b7ed1/pyctest-0.0.6.dev2.tar.gz", "yanked": false}], "0.0.7rc0": [{"comment_text": "", "digests": {"md5": "538ef8a174e634837495090f431f890f", "sha256": "3235324af003de019857a319cf8504ec02439da5eba2bf7ca575106e71624306"}, "downloads": -1, "filename": "pyctest-0.0.7rc0.tar.gz", "has_sig": true, "md5_digest": "538ef8a174e634837495090f431f890f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9134886, "upload_time": "2018-10-30T21:53:03", "upload_time_iso_8601": "2018-10-30T21:53:03.421791Z", "url": "https://files.pythonhosted.org/packages/c3/8e/2b1e2f711f3ee7dedee83c89e4f004310b8694ccbb770a983c3cfff2f07c/pyctest-0.0.7rc0.tar.gz", "yanked": false}], "0.0.8rc0": [{"comment_text": "", "digests": {"md5": "dc8656eb539a03210d145632ce68babf", "sha256": "e52523a6892ee7d98570645bcf95f8c2e4c5a01a827173f7b7855c157a0911b9"}, "downloads": -1, "filename": "pyctest-0.0.8rc0.tar.gz", "has_sig": true, "md5_digest": "dc8656eb539a03210d145632ce68babf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9371860, "upload_time": "2018-11-28T03:47:38", "upload_time_iso_8601": "2018-11-28T03:47:38.433615Z", "url": "https://files.pythonhosted.org/packages/1b/6e/fc3a754e37ef181eecfaa4aa21613c5fcdee864a2dac6a1f50bced1c9124/pyctest-0.0.8rc0.tar.gz", "yanked": false}], "0.0.9": [], "0.0.9rc0": [{"comment_text": "", "digests": {"md5": "dc05c5b03cb865942cb72f2589c530c4", "sha256": "ca9595b9ebac21b0576c915b0bf87aca0adf4d52d155a58cca88a1d8d0cfea11"}, "downloads": -1, "filename": "pyctest-0.0.9rc0.tar.gz", "has_sig": true, "md5_digest": "dc05c5b03cb865942cb72f2589c530c4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9411318, "upload_time": "2018-12-09T02:47:31", "upload_time_iso_8601": "2018-12-09T02:47:31.423637Z", "url": "https://files.pythonhosted.org/packages/92/47/d9c82a12c161b50f666ad9182ca1cf8c339afc226b37cf0309f995bd526d/pyctest-0.0.9rc0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "45afd65dd81b15958553c637270a26a2", "sha256": "db7b54439049fbbcfe77fc8ea38bd69a45833edd78d04af28c890001c373a884"}, "downloads": -1, "filename": "pyctest-0.0.12.tar.gz", "has_sig": true, "md5_digest": "45afd65dd81b15958553c637270a26a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.6", "size": 9416323, "upload_time": "2018-12-28T10:09:15", "upload_time_iso_8601": "2018-12-28T10:09:15.968862Z", "url": "https://files.pythonhosted.org/packages/7a/64/1b9c316fed0834901370a7aa72fd9f2d99b0824a4cc241b8963e7e6917fd/pyctest-0.0.12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:36 2020"}