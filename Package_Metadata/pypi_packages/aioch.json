{"info": {"author": "Konstantin Lebedev", "author_email": "kostyan.lebedev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: SQL", "Topic :: Database", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# aioch\n**aioch** is a library for accessing a ClickHouse database over native interface from the asyncio.\nIt wraps features of [clickhouse-driver](https://github.com/mymarilyn/clickhouse-driver) for asynchronous usage.\n\n[![Coverage Status](https://coveralls.io/repos/github/mymarilyn/aioch/badge.svg?branch=master)](https://coveralls.io/github/mymarilyn/aioch?branch=master)\n[![Build Status](https://travis-ci.org/mymarilyn/aioch.svg?branch=master)](https://travis-ci.org/mymarilyn/aioch)\n\n\n## Installation\n\nThe package can be installed using `pip`:\n\n```bash\npip install aioch\n```\n\nTo install from source:\n\n```bash\ngit clone https://github.com/mymarilyn/aioch\ncd aioch\npython setup.py install\n```\n\n## Usage\n```python\nfrom datetime import datetime\n\nimport asyncio\nfrom aioch import Client\n\n\nasync def exec_progress():\n    client = Client('localhost')\n\n    progress = await client.execute_with_progress('LONG AND COMPLICATED QUERY')\n    timeout = 20\n    started_at = datetime.now()\n\n    async for num_rows, total_rows in progress:\n        done = num_rows / total_rows if total_rows else total_rows\n        now = datetime.now()\n        # Cancel query if it takes more than 20 seconds to process 50% of rows.\n        if (now - started_at).total_seconds() > timeout and done < 0.5:\n            await client.cancel()\n            break\n    else:\n        rv = await progress.get_result()\n        print(rv)\n\n\nasync def exec_no_progress():\n    client = Client('localhost')\n    rv = await client.execute('LONG AND COMPLICATED QUERY')\n    print(rv)\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(asyncio.wait([exec_progress(), exec_no_progress()]))\n```\n\nFor more information see **clickhouse-driver** usage examples.\n\n## Parameters\n\n* `executor` - instance of custom Executor, if not supplied default executor will be used\n* `loop` - asyncio compatible event loop\n\nOther parameters are passing to wrapped clickhouse-driver's Client.\n\n## License\n\naioch is distributed under the [MIT license](http://www.opensource.org/licenses/mit-license.php).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mymarilyn/aioch", "keywords": "ClickHouse db database cloud analytics asyncio", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aioch", "package_url": "https://pypi.org/project/aioch/", "platform": "", "project_url": "https://pypi.org/project/aioch/", "project_urls": {"Homepage": "https://github.com/mymarilyn/aioch"}, "release_url": "https://pypi.org/project/aioch/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Library for accessing a ClickHouse database over native interface from the asyncio", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aioch</h1>\n<p><strong>aioch</strong> is a library for accessing a ClickHouse database over native interface from the asyncio.\nIt wraps features of <a href=\"https://github.com/mymarilyn/clickhouse-driver\" rel=\"nofollow\">clickhouse-driver</a> for asynchronous usage.</p>\n<p><a href=\"https://coveralls.io/github/mymarilyn/aioch?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/14912dbcf46a75abefe2c0e72bd6a59328e0284b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d796d6172696c796e2f61696f63682f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://travis-ci.org/mymarilyn/aioch\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44cd23224985a60e17c180142154fef0d8b5729f/68747470733a2f2f7472617669732d63692e6f72672f6d796d6172696c796e2f61696f63682e7376673f6272616e63683d6d6173746572\"></a></p>\n<h2>Installation</h2>\n<p>The package can be installed using <code>pip</code>:</p>\n<pre>pip install aioch\n</pre>\n<p>To install from source:</p>\n<pre>git clone https://github.com/mymarilyn/aioch\n<span class=\"nb\">cd</span> aioch\npython setup.py install\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioch</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">exec_progress</span><span class=\"p\">():</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">)</span>\n\n    <span class=\"n\">progress</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute_with_progress</span><span class=\"p\">(</span><span class=\"s1\">'LONG AND COMPLICATED QUERY'</span><span class=\"p\">)</span>\n    <span class=\"n\">timeout</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n    <span class=\"n\">started_at</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">for</span> <span class=\"n\">num_rows</span><span class=\"p\">,</span> <span class=\"n\">total_rows</span> <span class=\"ow\">in</span> <span class=\"n\">progress</span><span class=\"p\">:</span>\n        <span class=\"n\">done</span> <span class=\"o\">=</span> <span class=\"n\">num_rows</span> <span class=\"o\">/</span> <span class=\"n\">total_rows</span> <span class=\"k\">if</span> <span class=\"n\">total_rows</span> <span class=\"k\">else</span> <span class=\"n\">total_rows</span>\n        <span class=\"n\">now</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Cancel query if it takes more than 20 seconds to process 50% of rows.</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">now</span> <span class=\"o\">-</span> <span class=\"n\">started_at</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">total_seconds</span><span class=\"p\">()</span> <span class=\"o\">&gt;</span> <span class=\"n\">timeout</span> <span class=\"ow\">and</span> <span class=\"n\">done</span> <span class=\"o\">&lt;</span> <span class=\"mf\">0.5</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">()</span>\n            <span class=\"k\">break</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">rv</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">progress</span><span class=\"o\">.</span><span class=\"n\">get_result</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rv</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">exec_no_progress</span><span class=\"p\">():</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">)</span>\n    <span class=\"n\">rv</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s1\">'LONG AND COMPLICATED QUERY'</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">rv</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n<span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">([</span><span class=\"n\">exec_progress</span><span class=\"p\">(),</span> <span class=\"n\">exec_no_progress</span><span class=\"p\">()]))</span>\n</pre>\n<p>For more information see <strong>clickhouse-driver</strong> usage examples.</p>\n<h2>Parameters</h2>\n<ul>\n<li><code>executor</code> - instance of custom Executor, if not supplied default executor will be used</li>\n<li><code>loop</code> - asyncio compatible event loop</li>\n</ul>\n<p>Other parameters are passing to wrapped clickhouse-driver's Client.</p>\n<h2>License</h2>\n<p>aioch is distributed under the <a href=\"http://www.opensource.org/licenses/mit-license.php\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 6190987, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dd2d389687e217bac7a6cd81f357bf9a", "sha256": "0baa147a80d0a5a23c5b477ef85c0520726bc04654cff6e2eb6afdbe952b04c0"}, "downloads": -1, "filename": "aioch-0.0.1.tar.gz", "has_sig": false, "md5_digest": "dd2d389687e217bac7a6cd81f357bf9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4068, "upload_time": "2017-09-27T19:07:50", "upload_time_iso_8601": "2017-09-27T19:07:50.526478Z", "url": "https://files.pythonhosted.org/packages/4e/31/5b2140ae33f5f9dabf38ceb8ef99cd90d9a52aee743eda2f225605e7350f/aioch-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "70c26dbe5199c4034d47c8c327cb9adf", "sha256": "1e36c042d54c2386b5a36bf9a0c8a8e68da10ce51209a3c0854eb79fd36e0c03"}, "downloads": -1, "filename": "aioch-0.0.2.tar.gz", "has_sig": false, "md5_digest": "70c26dbe5199c4034d47c8c327cb9adf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4750, "upload_time": "2019-11-24T20:12:40", "upload_time_iso_8601": "2019-11-24T20:12:40.897077Z", "url": "https://files.pythonhosted.org/packages/3c/1b/65c9e14966a940bcf5afa72a16f9e3924c815ba8fca8c0e133b20c73f697/aioch-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70c26dbe5199c4034d47c8c327cb9adf", "sha256": "1e36c042d54c2386b5a36bf9a0c8a8e68da10ce51209a3c0854eb79fd36e0c03"}, "downloads": -1, "filename": "aioch-0.0.2.tar.gz", "has_sig": false, "md5_digest": "70c26dbe5199c4034d47c8c327cb9adf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4750, "upload_time": "2019-11-24T20:12:40", "upload_time_iso_8601": "2019-11-24T20:12:40.897077Z", "url": "https://files.pythonhosted.org/packages/3c/1b/65c9e14966a940bcf5afa72a16f9e3924c815ba8fca8c0e133b20c73f697/aioch-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:44 2020"}