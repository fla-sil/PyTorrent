{"info": {"author": "Joost Molenaar, Jean-Christophe Fillion-Robin", "author_email": "j.j.molenaar@gmail.com, jchris.fillionr@kitware.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development :: Version Control", "Topic :: System :: Software Distribution"], "description": "# githubrelease\n\n[![Build Status](https://img.shields.io/travis/j0057/github-release.svg?maxAge=2592000)](https://travis-ci.org/j0057/github-release)\n\nThis project aims at streamlining the distribution of\n[releases](https://github.com/blog/1547-release-your-software) on Github.\n\n> I made it because it sucks to have to download a file from a server,\n> only to upload it to Github from the desktop.\n>\n> It also sucks to download a file from github to your desktop, and then\n> SCP it to a server.\n>\n> This thing works nicely from an SSH session.\n>\n> -- <cite>@j0057 on Wednesday, August 13, 2014</cite>\n\n\n# examples\n\nfrom the command-line:\n\n```bash\n# create a prerelease\n$ githubrelease release jcfr/sandbox create 1.0.0 --prerelease\n\n# upload assets\n$ githubrelease asset jcfr/sandbox upload 1.0.0 \"dist/*\"\n\n# publish the release\n$ githubrelease release jcfr/sandbox publish 1.0.0\n\n# or all together: create with custom name, upload assets, and publish\n$ githubrelease release jcfr/sandbox create 2.0.0 --publish --name \"Awesome 2.0\" \"dist/*\"\n```\n\n... or even from python:\n\n```python\nfrom github_release import gh_release_create\ngh_release_create(\"jcfr/sandbox \", \"2.0.0\", publish=True, name=\"Awesome 2.0\", asset_pattern=\"dist/*\")\n```\n\n*That said, if you are looking for a full fledged GitHub API support for\nPython, you should probably look into project like [github3py](http://github3py.readthedocs.io/en/latest/) or\n[PyGithub](https://github.com/PyGithub/PyGithub)*\n\n# Table of Contents\n\n   * [githubrelease](#githubrelease)\n   * [examples](#examples)\n   * [features](#features)\n   * [installing](#installing)\n   * [configuring](#configuring)\n   * [using the cli](#using-the-cli)\n      * [release command](#release-command)\n      * [asset command](#asset-command)\n      * [ref command](#ref-command)\n   * [using the module](#using-the-module)\n   * [testing](#testing)\n   * [maintainers: how to make a release ?](#maintainers-how-to-make-a-release-)\n   * [license](#license)\n\n<!--\n*Created by [gh-md-toc](https://github.com/ekalinin/github-markdown-toc)*\n-->\n\n# features\n\n* create release, pre-release, or draft release\n* update any release metadata including referenced commit\n* support wildcard expression (or list of wildcard expressions):\n  * for upload or download of assets\n  * for selectively deleting assets\n* report download and upload progress\n* allow deleting individual asset from a release\n* retry upload in case of server failure\n* gracefully handle release with invalid assets (the ones with *new* state)\n* authentication through `GITHUB_TOKEN` environment variable or `~/.netrc` file\n* pure python, only depends on [requests](http://docs.python-requests.org/en/master/) and [click](http://pocco-click.readthedocs.io)\n\n\n# installing\n\nReleased stable version can be installed from [pypi](https://pypi.python.org/pypi/githubrelease) using:\n\n```bash\npip install githubrelease\n```\n\nBleeding edge version can be installed using:\n\n```bash\npip intall githubrelease -f https://github.com/j0057/github-release/releases/tag/latest\n```\n\n# configuring\n\nFirst, [generate a new token](https://help.github.com/articles/creating-an-access-token-for-command-line-use). It\nshould have at least the `repo` scope.\n\nThen, there are three options:\n\n* Set the `GITHUB_TOKEN` environment variable:\n\n```bash\nexport GITHUB_TOKEN=YOUR_TOKEN\n/path/to/command\n```\n\n* Pass the ``--github-token`` CLI argument. For example:\n\n```bash\n$ githubrelease --github-token YOUR_TOKEN release jcfr/sandbox create --prerelease 1.0.0\n```\n\n\n* Put the key in `~/.netrc`, which should have mode 0600 (`-rw-------`):\n\n```\nmachine api.github.com\nlogin YOUR_TOKEN\npassword x-oauth-basic\n\nmachine uploads.github.com\nlogin YOUR_TOKEN\npassword x-oauth-basic\n```\n\nwhere ``YOUR_TOKEN`` should be replaced with the generated token.\n\n# using the cli\n\nThe package installs one CLI named ``githubrelease``.\n\n```bash\n$ githubrelease \nUsage: githubrelease [OPTIONS] COMMAND [ARGS]...\n\n  A CLI to easily manage GitHub releases, assets and references.\n\nOptions:\n  --github-token TEXT         [default: GITHUB_TOKEN env. variable]\n  --progress / --no-progress  Display progress bar (default: yes).\n  --help                      Show this message and exit.\n\nCommands:\n  asset    Manage release assets (upload, download, ...)...\n  ref      Manage references (list, create, delete, ...)...\n  release  Manage releases (list, create, delete, ...)...\n\nRun 'githubrelease COMMAND --help' for more information on a command.\n```\n\n*For backward compatibility, it also installs `github-release` and `github-asset`*\n\n## ``release`` command\n\nThis command deals with releases. The general usage is:\n\n```bash\ngithubrelease release username/reponame command [tag] [options]\n```\n\nIt understands the following commands:\n\n| command       | parameters        | description                       |\n|---------------|-------------------|-----------------------------------|\n| list          |                   | list all releases                 |\n| info          | tagname           | list one release                  |\n| create        | tagname [options] | create a release                  |\n| edit          | tagname [options] | Edit a release                    |\n| delete        | tagname                | delete a release             |\n| publish       | tagname [--prerelease] | make release public          |\n| unpublish     | tagname [--prerelease] | make release draft           |\n| release-notes | tagname           | use $EDITOR to edit release notes |\n\n**Optional parameters:**\n\n* create:\n\n```bash\n  --name NAME\n  --body BODY\n  --publish\n  --prerelease\n  --target-commitish TARGET_COMMITISH\n  [ASSET_PATTERN]...\n```\n\n* edit:\n\n```bash\n  --tag-name TAG_NAME\n  --target-commitish TARGET_COMMITISH\n  --name NAME\n  --body BODY\n  --draft/--publish\n  --prerelease/--release\n  --dry-run\n  --verbose\n```\n\n\n## ``asset`` command\n\nThis command deals with release assets. The general usage is:\n\n```bash\ngithubrelease asset username/reponame command [tag] [filename] [options]\n```\n\nIt understands the following commands:\n\n| command   | parameters                 | description                                               |\n|-----------|----------------------------|-----------------------------------------------------------|\n| list      |                            | list all assets                                           |\n| upload    | tagname filename...        | upload files to a release                                 |\n| download  |                            | download all files from all releases to current directory |\n| download  | tagname                    | download all files from a release to current directory    |\n| download  | tagname filename           | download file to current directory                        |\n| delete    | tagname filename [options] | delete a file from a release                              |\n\n\n**Optional parameters:**\n\n* delete:\n\n```bash\n--keep-pattern KEEP_PATTERN\n```\n\n\n**Remarks:**\n\nWhen specifying filenames, shell-like wildcards are supported, but make sure to\nquote using single quotes, i.e. don't let the shell expand the wildcard pattern.\n\nFor the `download` command, you also need to specify a tagname of `'*'`\n\n\n**Examples:**\n\n```bash\n# upload all example-project-1.4* files in /home/me/pkg\n$ githubrelease asset octocat/example-project upload 1.4 '/home/me/pkg/example-project-1.4*'\n\n# download all wheels from all releases\n$ githubrelease asset octocat/example-project download '*' '*.whl'\n\n# download all files from release 1.4\n$ githubrelease asset octocat/example-project download 1.4\n\n# download all files from example-project\n$ githubrelease asset octocat/example-project download\n```\n\n## ``ref`` command\n\nThis command deals with git references. The general usage is:\n\n```bash\ngithubrelease ref username/reponame command [options]\n```\n\nIt understands the following commands:\n\n| command   | parameters                             | description                                |\n|-----------|----------------------------------------|--------------------------------------------|\n| create    | ref sha                                | create reference (e.g heads/foo, tags/foo) |\n| list      | [--tags] [--pattern PATTERN]           | list all references                        |\n| delete    | pattern [--tags] [--keep-pattern KEEP_PATTERN] | delete selected references                 |\n\n\n# using the module\n\nThe python API mirrors the command-line interface. Most of the available\nfunction names follows this pattern:\n\n```\ngh_<COMMAND>_<COMMAND>\n```\n\nwhere the first ``<COMMAND>`` is either ``release``,\n``asset`` or ``ref`` and the second one is any command respectively\ndocumented above.\n\nThe parameters accepted by each function also mirrors the command-line\ninterface. The usual signature is:\n\n```python\ngh_<COMMAND>_<COMMAND>(repo_name, [param, [param,]] [option, [option]])\n```\n\nFor example, here is the signature for ``gh_release_create``:\n\n```python\ndef gh_release_create(repo_name, tag_name, \n                      name=None, publish=False, prerelease=False, target_commitish=None):\n```\n\nThe type of each parameters or options can usually be inferred from\nits name. If not, consider looking at [github_release.py](https://github.com/j0057/github-release/blob/update-readme/github_release.py).\n\n```\nrepo_name        -> str\ntag_name         -> str\nname             -> str\npublish          -> bool\nprerelease       -> bool\ntarget_commitish -> str\n```\n\n# testing\n\nThere are tests running automatically on TravisCI:\n* coding style checks\n* integration tests\n\nSince the integration tests are expecting ``GITHUB_TOKEN`` to be set, they will\n**NOT** be executed when pull request from fork are submitted. Indeed, setting\n``GITHUB_TOKEN`` is required by the tests to reset and update [github-release-bot/github-release-test-py2](https://github.com/github-release-bot/github-release-test-py2)\nand [github-release-bot/github-release-test-py3](https://github.com/github-release-bot/github-release-test-py3).\n\nTo execute the integration tests locally, and make sure your awesome contribution\nis working as expected, you will have to:\n* create a test repository with at least one commit (e.g `yourname/github-release-test`)\n* set environment variable ``INTEGRATION_TEST_REPO_NAME=yourname/github-release-test``\n* execute ``python setup.py test``\n\nTo execute a specific test, the following also works:\n\n```bash\nexport GITHUB_TOKEN=YOUR_TOKEN\nexport INTEGRATION_TEST_REPO_NAME=yourname/github-release-test\n$ pytest tests/test_integration_release_create.py::test_create_release\n```\n\nMoving forward, the plan would be to leverage tools like [betamax](http://betamax.readthedocs.io)\nallowing to intercept every request made and attempting to find a matching request\nthat has already been intercepted and recorded.\n\n\n# maintainers: how to make a release ?\n\n1. Configure `~/.pypirc` as described [here](https://packaging.python.org/distributing/#uploading-your-project-to-pypi).\n\n2. Make sure the cli and module work as expected.\n\n3. Choose the next release version number:\n\n   ```bash\n   release=\"X.Y.Z\"\n   ```\n\n4. Review [CHANGES.md](https://github.com/j0057/github-release/blob/master/README.md), replace *Next Release* into *X.Y.Z*, commit and push. Consider using `[ci skip]` in commit message:\n\n   ```bash\n   sed -i -e \"s/Next Release/${release}/\" CHANGES.md\n   sed -i -e \"s/============/=====/\" CHANGES.md\n   git add CHANGES.md\n   git commit -m \"CHANGES.md: Replace \\\"Next Release\\\" with \\\"${release}\\\"\n\n   [ci skip]\n   \"\n   ```\n\n   Review commit, then push:\n\n   ```bash\n   git push origin master\n   ```\n\n5. Tag the release. Requires a GPG key with signatures:\n\n    ```bash\n    git tag -s -m \"githubrelease ${release}\" ${release} origin/master\n    ```\n\n    And push:\n\n    ```bash\n    git push origin ${release}\n    ```\n\n6. Create the source tarball and binary wheels:\n\n    ```bash\n    rm -rf dist/\n    python setup.py sdist bdist_wheel\n    ```\n\n7. Upload the packages to the testing PyPI instance:\n\n    ```bash\n    twine upload --sign -r pypitest dist/*\n    ```\n\n8. Check the [PyPI testing package page](https://testpypi.python.org/pypi/githubrelease/).\n\n9. Upload the packages to the PyPI instance::\n\n    ```bash\n    twine upload --sign dist/*\n    ```\n\n10. Check the [PyPI package page](https://pypi.python.org/pypi/githubrelease/).\n\n11. Create a virtual env, and make sure the package can be installed:\n\n    ```bash\n    mkvirtualenv test-githubrelease-install\n    pip install githubrelease\n    ```\n\n12. Create github release and upload packages:\n\n    ```bash\n    export GITHUB_TOKEN=YOUR_TOKEN\n    githubrelease release j0057/github-release create ${release} --name ${release} --publish ./dist/*\n    ```\n\n13. Update release notes by copying relevant content from CHANGES.md\n\n    ```bash\n    export EDITOR=vim\n    githubrelease release j0057/github-release release-notes ${release}\n    ```\n\n14. Cleanup\n\n    ```bash\n    deactivate\n    rmvirtualenv test-githubrelease-install\n    ```\n\n    And update ``CHANGES.md``:\n\n    ```bash\n    sed -i '1i Next Release\\n============\\n' CHANGES.md\n    git add CHANGES.md\n    git commit -m \"Begin ${release} development\n\n    * CHANGES.md: Add \\\"Next Release\\\" section\n\n   [ci skip]\n   \"\n   git push origin master\n    ```\n\n# faq\n\n* Why do I get a ``requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url  https://api.github.com/repos/...`` ?\n\n  It probably means that the GitHub token you specified is invalid.\n\n\n# license\n\nWritten by Joost Molenaar ([@j0057](https://github.com/j0057)) and Jean-Christophe Fillion-Robin ([@jcfr](https://github.com/jcfr))\n\nIt is covered by the Apache License, Version 2.0:\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nThe license file was added at revision 0393859 on 2017-02-12, but you may\nconsider that the license applies to all prior revisions as well.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/j0057/github-release", "keywords": "", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "githubrelease", "package_url": "https://pypi.org/project/githubrelease/", "platform": "", "project_url": "https://pypi.org/project/githubrelease/", "project_urls": {"Homepage": "https://github.com/j0057/github-release"}, "release_url": "https://pypi.org/project/githubrelease/1.5.8/", "requires_dist": ["click", "linkheader", "requests"], "requires_python": "", "summary": "githubrelease is a CLI to easily manage GitHub releases, assets and references", "version": "1.5.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            # githubrelease<br><br>[![Build Status](https://img.shields.io/travis/j0057/github-release.svg?maxAge=2592000)](https://travis-ci.org/j0057/github-release)<br><br>This project aims at streamlining the distribution of<br>[releases](https://github.com/blog/1547-release-your-software) on Github.<br><br>&gt; I made it because it sucks to have to download a file from a server,<br>&gt; only to upload it to Github from the desktop.<br>&gt;<br>&gt; It also sucks to download a file from github to your desktop, and then<br>&gt; SCP it to a server.<br>&gt;<br>&gt; This thing works nicely from an SSH session.<br>&gt;<br>&gt; -- &lt;cite&gt;@j0057 on Wednesday, August 13, 2014&lt;/cite&gt;<br><br><br># examples<br><br>from the command-line:<br><br>```bash<br># create a prerelease<br>$ githubrelease release jcfr/sandbox create 1.0.0 --prerelease<br><br># upload assets<br>$ githubrelease asset jcfr/sandbox upload 1.0.0 \"dist/*\"<br><br># publish the release<br>$ githubrelease release jcfr/sandbox publish 1.0.0<br><br># or all together: create with custom name, upload assets, and publish<br>$ githubrelease release jcfr/sandbox create 2.0.0 --publish --name \"Awesome 2.0\" \"dist/*\"<br>```<br><br>... or even from python:<br><br>```python<br>from github_release import gh_release_create<br>gh_release_create(\"jcfr/sandbox \", \"2.0.0\", publish=True, name=\"Awesome 2.0\", asset_pattern=\"dist/*\")<br>```<br><br>*That said, if you are looking for a full fledged GitHub API support for<br>Python, you should probably look into project like [github3py](http://github3py.readthedocs.io/en/latest/) or<br>[PyGithub](https://github.com/PyGithub/PyGithub)*<br><br># Table of Contents<br><br>   * [githubrelease](#githubrelease)<br>   * [examples](#examples)<br>   * [features](#features)<br>   * [installing](#installing)<br>   * [configuring](#configuring)<br>   * [using the cli](#using-the-cli)<br>      * [release command](#release-command)<br>      * [asset command](#asset-command)<br>      * [ref command](#ref-command)<br>   * [using the module](#using-the-module)<br>   * [testing](#testing)<br>   * [maintainers: how to make a release ?](#maintainers-how-to-make-a-release-)<br>   * [license](#license)<br><br>&lt;!--<br>*Created by [gh-md-toc](https://github.com/ekalinin/github-markdown-toc)*<br>--&gt;<br><br># features<br><br>* create release, pre-release, or draft release<br>* update any release metadata including referenced commit<br>* support wildcard expression (or list of wildcard expressions):<br>  * for upload or download of assets<br>  * for selectively deleting assets<br>* report download and upload progress<br>* allow deleting individual asset from a release<br>* retry upload in case of server failure<br>* gracefully handle release with invalid assets (the ones with *new* state)<br>* authentication through `GITHUB_TOKEN` environment variable or `~/.netrc` file<br>* pure python, only depends on [requests](http://docs.python-requests.org/en/master/) and [click](http://pocco-click.readthedocs.io)<br><br><br># installing<br><br>Released stable version can be installed from [pypi](https://pypi.python.org/pypi/githubrelease) using:<br><br>```bash<br>pip install githubrelease<br>```<br><br>Bleeding edge version can be installed using:<br><br>```bash<br>pip intall githubrelease -f https://github.com/j0057/github-release/releases/tag/latest<br>```<br><br># configuring<br><br>First, [generate a new token](https://help.github.com/articles/creating-an-access-token-for-command-line-use). It<br>should have at least the `repo` scope.<br><br>Then, there are three options:<br><br>* Set the `GITHUB_TOKEN` environment variable:<br><br>```bash<br>export GITHUB_TOKEN=YOUR_TOKEN<br>/path/to/command<br>```<br><br>* Pass the ``--github-token`` CLI argument. For example:<br><br>```bash<br>$ githubrelease --github-token YOUR_TOKEN release jcfr/sandbox create --prerelease 1.0.0<br>```<br><br><br>* Put the key in `~/.netrc`, which should have mode 0600 (`-rw-------`):<br><br>```<br>machine api.github.com<br>login YOUR_TOKEN<br>password x-oauth-basic<br><br>machine uploads.github.com<br>login YOUR_TOKEN<br>password x-oauth-basic<br>```<br><br>where ``YOUR_TOKEN`` should be replaced with the generated token.<br><br># using the cli<br><br>The package installs one CLI named ``githubrelease``.<br><br>```bash<br>$ githubrelease <br>Usage: githubrelease [OPTIONS] COMMAND [ARGS]...<br><br>  A CLI to easily manage GitHub releases, assets and references.<br><br>Options:<br>  --github-token TEXT         [default: GITHUB_TOKEN env. variable]<br>  --progress / --no-progress  Display progress bar (default: yes).<br>  --help                      Show this message and exit.<br><br>Commands:<br>  asset    Manage release assets (upload, download, ...)...<br>  ref      Manage references (list, create, delete, ...)...<br>  release  Manage releases (list, create, delete, ...)...<br><br>Run 'githubrelease COMMAND --help' for more information on a command.<br>```<br><br>*For backward compatibility, it also installs `github-release` and `github-asset`*<br><br>## ``release`` command<br><br>This command deals with releases. The general usage is:<br><br>```bash<br>githubrelease release username/reponame command [tag] [options]<br>```<br><br>It understands the following commands:<br><br>| command       | parameters        | description                       |<br>|---------------|-------------------|-----------------------------------|<br>| list          |                   | list all releases                 |<br>| info          | tagname           | list one release                  |<br>| create        | tagname [options] | create a release                  |<br>| edit          | tagname [options] | Edit a release                    |<br>| delete        | tagname                | delete a release             |<br>| publish       | tagname [--prerelease] | make release public          |<br>| unpublish     | tagname [--prerelease] | make release draft           |<br>| release-notes | tagname           | use $EDITOR to edit release notes |<br><br>**Optional parameters:**<br><br>* create:<br><br>```bash<br>  --name NAME<br>  --body BODY<br>  --publish<br>  --prerelease<br>  --target-commitish TARGET_COMMITISH<br>  [ASSET_PATTERN]...<br>```<br><br>* edit:<br><br>```bash<br>  --tag-name TAG_NAME<br>  --target-commitish TARGET_COMMITISH<br>  --name NAME<br>  --body BODY<br>  --draft/--publish<br>  --prerelease/--release<br>  --dry-run<br>  --verbose<br>```<br><br><br>## ``asset`` command<br><br>This command deals with release assets. The general usage is:<br><br>```bash<br>githubrelease asset username/reponame command [tag] [filename] [options]<br>```<br><br>It understands the following commands:<br><br>| command   | parameters                 | description                                               |<br>|-----------|----------------------------|-----------------------------------------------------------|<br>| list      |                            | list all assets                                           |<br>| upload    | tagname filename...        | upload files to a release                                 |<br>| download  |                            | download all files from all releases to current directory |<br>| download  | tagname                    | download all files from a release to current directory    |<br>| download  | tagname filename           | download file to current directory                        |<br>| delete    | tagname filename [options] | delete a file from a release                              |<br><br><br>**Optional parameters:**<br><br>* delete:<br><br>```bash<br>--keep-pattern KEEP_PATTERN<br>```<br><br><br>**Remarks:**<br><br>When specifying filenames, shell-like wildcards are supported, but make sure to<br>quote using single quotes, i.e. don't let the shell expand the wildcard pattern.<br><br>For the `download` command, you also need to specify a tagname of `'*'`<br><br><br>**Examples:**<br><br>```bash<br># upload all example-project-1.4* files in /home/me/pkg<br>$ githubrelease asset octocat/example-project upload 1.4 '/home/me/pkg/example-project-1.4*'<br><br># download all wheels from all releases<br>$ githubrelease asset octocat/example-project download '*' '*.whl'<br><br># download all files from release 1.4<br>$ githubrelease asset octocat/example-project download 1.4<br><br># download all files from example-project<br>$ githubrelease asset octocat/example-project download<br>```<br><br>## ``ref`` command<br><br>This command deals with git references. The general usage is:<br><br>```bash<br>githubrelease ref username/reponame command [options]<br>```<br><br>It understands the following commands:<br><br>| command   | parameters                             | description                                |<br>|-----------|----------------------------------------|--------------------------------------------|<br>| create    | ref sha                                | create reference (e.g heads/foo, tags/foo) |<br>| list      | [--tags] [--pattern PATTERN]           | list all references                        |<br>| delete    | pattern [--tags] [--keep-pattern KEEP_PATTERN] | delete selected references                 |<br><br><br># using the module<br><br>The python API mirrors the command-line interface. Most of the available<br>function names follows this pattern:<br><br>```<br>gh_&lt;COMMAND&gt;_&lt;COMMAND&gt;<br>```<br><br>where the first ``&lt;COMMAND&gt;`` is either ``release``,<br>``asset`` or ``ref`` and the second one is any command respectively<br>documented above.<br><br>The parameters accepted by each function also mirrors the command-line<br>interface. The usual signature is:<br><br>```python<br>gh_&lt;COMMAND&gt;_&lt;COMMAND&gt;(repo_name, [param, [param,]] [option, [option]])<br>```<br><br>For example, here is the signature for ``gh_release_create``:<br><br>```python<br>def gh_release_create(repo_name, tag_name, <br>                      name=None, publish=False, prerelease=False, target_commitish=None):<br>```<br><br>The type of each parameters or options can usually be inferred from<br>its name. If not, consider looking at [github_release.py](https://github.com/j0057/github-release/blob/update-readme/github_release.py).<br><br>```<br>repo_name        -&gt; str<br>tag_name         -&gt; str<br>name             -&gt; str<br>publish          -&gt; bool<br>prerelease       -&gt; bool<br>target_commitish -&gt; str<br>```<br><br># testing<br><br>There are tests running automatically on TravisCI:<br>* coding style checks<br>* integration tests<br><br>Since the integration tests are expecting ``GITHUB_TOKEN`` to be set, they will<br>**NOT** be executed when pull request from fork are submitted. Indeed, setting<br>``GITHUB_TOKEN`` is required by the tests to reset and update [github-release-bot/github-release-test-py2](https://github.com/github-release-bot/github-release-test-py2)<br>and [github-release-bot/github-release-test-py3](https://github.com/github-release-bot/github-release-test-py3).<br><br>To execute the integration tests locally, and make sure your awesome contribution<br>is working as expected, you will have to:<br>* create a test repository with at least one commit (e.g `yourname/github-release-test`)<br>* set environment variable ``INTEGRATION_TEST_REPO_NAME=yourname/github-release-test``<br>* execute ``python setup.py test``<br><br>To execute a specific test, the following also works:<br><br>```bash<br>export GITHUB_TOKEN=YOUR_TOKEN<br>export INTEGRATION_TEST_REPO_NAME=yourname/github-release-test<br>$ pytest tests/test_integration_release_create.py::test_create_release<br>```<br><br>Moving forward, the plan would be to leverage tools like [betamax](http://betamax.readthedocs.io)<br>allowing to intercept every request made and attempting to find a matching request<br>that has already been intercepted and recorded.<br><br><br># maintainers: how to make a release ?<br><br>1. Configure `~/.pypirc` as described [here](https://packaging.python.org/distributing/#uploading-your-project-to-pypi).<br><br>2. Make sure the cli and module work as expected.<br><br>3. Choose the next release version number:<br><br>   ```bash<br>   release=\"X.Y.Z\"<br>   ```<br><br>4. Review [CHANGES.md](https://github.com/j0057/github-release/blob/master/README.md), replace *Next Release* into *X.Y.Z*, commit and push. Consider using `[ci skip]` in commit message:<br><br>   ```bash<br>   sed -i -e \"s/Next Release/${release}/\" CHANGES.md<br>   sed -i -e \"s/============/=====/\" CHANGES.md<br>   git add CHANGES.md<br>   git commit -m \"CHANGES.md: Replace \\\"Next Release\\\" with \\\"${release}\\\"<br><br>   [ci skip]<br>   \"<br>   ```<br><br>   Review commit, then push:<br><br>   ```bash<br>   git push origin master<br>   ```<br><br>5. Tag the release. Requires a GPG key with signatures:<br><br>    ```bash<br>    git tag -s -m \"githubrelease ${release}\" ${release} origin/master<br>    ```<br><br>    And push:<br><br>    ```bash<br>    git push origin ${release}<br>    ```<br><br>6. Create the source tarball and binary wheels:<br><br>    ```bash<br>    rm -rf dist/<br>    python setup.py sdist bdist_wheel<br>    ```<br><br>7. Upload the packages to the testing PyPI instance:<br><br>    ```bash<br>    twine upload --sign -r pypitest dist/*<br>    ```<br><br>8. Check the [PyPI testing package page](https://testpypi.python.org/pypi/githubrelease/).<br><br>9. Upload the packages to the PyPI instance::<br><br>    ```bash<br>    twine upload --sign dist/*<br>    ```<br><br>10. Check the [PyPI package page](https://pypi.python.org/pypi/githubrelease/).<br><br>11. Create a virtual env, and make sure the package can be installed:<br><br>    ```bash<br>    mkvirtualenv test-githubrelease-install<br>    pip install githubrelease<br>    ```<br><br>12. Create github release and upload packages:<br><br>    ```bash<br>    export GITHUB_TOKEN=YOUR_TOKEN<br>    githubrelease release j0057/github-release create ${release} --name ${release} --publish ./dist/*<br>    ```<br><br>13. Update release notes by copying relevant content from CHANGES.md<br><br>    ```bash<br>    export EDITOR=vim<br>    githubrelease release j0057/github-release release-notes ${release}<br>    ```<br><br>14. Cleanup<br><br>    ```bash<br>    deactivate<br>    rmvirtualenv test-githubrelease-install<br>    ```<br><br>    And update ``CHANGES.md``:<br><br>    ```bash<br>    sed -i '1i Next Release\\n============\\n' CHANGES.md<br>    git add CHANGES.md<br>    git commit -m \"Begin ${release} development<br><br>    * CHANGES.md: Add \\\"Next Release\\\" section<br><br>   [ci skip]<br>   \"<br>   git push origin master<br>    ```<br><br># faq<br><br>* Why do I get a ``requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url  https://api.github.com/repos/...`` ?<br><br>  It probably means that the GitHub token you specified is invalid.<br><br><br># license<br><br>Written by Joost Molenaar ([@j0057](https://github.com/j0057)) and Jean-Christophe Fillion-Robin ([@jcfr](https://github.com/jcfr))<br><br>It is covered by the Apache License, Version 2.0:<br><br>http://www.apache.org/licenses/LICENSE-2.0<br><br>The license file was added at revision 0393859 on 2017-02-12, but you may<br>consider that the license applies to all prior revisions as well.<br><br>\n          </div>"}, "last_serial": 3746659, "releases": {"1.3": [{"comment_text": "", "digests": {"md5": "af40c048152a81caede015d177e40b9f", "sha256": "ee156294d50df31488a83fd6e0b29b96e8d0bf841b86d720c5ca5084ac438383"}, "downloads": -1, "filename": "githubrelease-1.3-py2-none-any.whl", "has_sig": false, "md5_digest": "af40c048152a81caede015d177e40b9f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4492, "upload_time": "2014-08-13T11:42:23", "upload_time_iso_8601": "2014-08-13T11:42:23.868814Z", "url": "https://files.pythonhosted.org/packages/b8/1d/bd6c894733d553eed40ae4dd64c7e196e16c6b47550bf2ee99df730e6df1/githubrelease-1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a9a0f29f80cf982e5869b5907b0ff85", "sha256": "f85f285eef4ced1501b9b5d9fa38938cc9a1e15ea3ede8e91c044300fc2abbe9"}, "downloads": -1, "filename": "githubrelease-1.3.tar.gz", "has_sig": false, "md5_digest": "7a9a0f29f80cf982e5869b5907b0ff85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2938, "upload_time": "2014-08-13T11:42:20", "upload_time_iso_8601": "2014-08-13T11:42:20.635653Z", "url": "https://files.pythonhosted.org/packages/05/6a/4fd204aaaa77176564dd3adff557e4d279e3231c3efc8b32be12a41809ba/githubrelease-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "02c9e686785806a9f62511afd788b16d", "sha256": "67b2d5f7f655272d4ca103e44e9be35250f22a23244a3aab95d005773029a272"}, "downloads": -1, "filename": "githubrelease-1.4-py2-none-any.whl", "has_sig": false, "md5_digest": "02c9e686785806a9f62511afd788b16d", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4531, "upload_time": "2014-08-13T14:34:18", "upload_time_iso_8601": "2014-08-13T14:34:18.382060Z", "url": "https://files.pythonhosted.org/packages/4e/6d/5402f2e85e0c446a103299ac89105ac10379dc07933d675bbde57df1089d/githubrelease-1.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d920c376962b5a6c063f3534bb201ab", "sha256": "5f6105903d87431135158b3e254c1cfadd5238c3a5354c74c49d7d9a733912b5"}, "downloads": -1, "filename": "githubrelease-1.4.tar.gz", "has_sig": false, "md5_digest": "8d920c376962b5a6c063f3534bb201ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2963, "upload_time": "2014-08-13T14:34:15", "upload_time_iso_8601": "2014-08-13T14:34:15.757275Z", "url": "https://files.pythonhosted.org/packages/43/09/6ab466aa8d9790d7f7414e20d6432c8cac37a37fa7220b2cc107b1ac3b93/githubrelease-1.4.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "99886890d9e4f29bbfb3150ad372c47e", "sha256": "131907acea1393d5889e9fc5503276a43bf7a26ce835206126159543eb29f1c3"}, "downloads": -1, "filename": "githubrelease-1.4.1-py2-none-any.whl", "has_sig": false, "md5_digest": "99886890d9e4f29bbfb3150ad372c47e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4560, "upload_time": "2014-08-13T14:39:40", "upload_time_iso_8601": "2014-08-13T14:39:40.821204Z", "url": "https://files.pythonhosted.org/packages/ce/41/ca9c7f0400a2cc660927b393d6cf58bf48ab62ac75d3d075f3f7583b2048/githubrelease-1.4.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9782d5d697d10e3d5fa8a023a9da9e7", "sha256": "0c3da86096dbb1952c535b7e164c5edf3e51b76cbbc81eee1e6e877bcfd24aa1"}, "downloads": -1, "filename": "githubrelease-1.4.1.tar.gz", "has_sig": false, "md5_digest": "a9782d5d697d10e3d5fa8a023a9da9e7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2962, "upload_time": "2014-08-13T14:39:37", "upload_time_iso_8601": "2014-08-13T14:39:37.945966Z", "url": "https://files.pythonhosted.org/packages/0e/32/b6bb9a3a1993c3d99a362c030508746d719fb56a1993a032a8c705820b8d/githubrelease-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "05da5503a1b19dc6fafa1cc44372d782", "sha256": "0264dd81520542bfb440989131c1ea5dffc846ecdface960d8046563bffda8f1"}, "downloads": -1, "filename": "githubrelease-1.4.2-py2-none-any.whl", "has_sig": false, "md5_digest": "05da5503a1b19dc6fafa1cc44372d782", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 4574, "upload_time": "2014-08-13T14:50:15", "upload_time_iso_8601": "2014-08-13T14:50:15.814728Z", "url": "https://files.pythonhosted.org/packages/8d/c0/0ed1ab0306c22e5049d399010267818e0d380530ab2b3f44f996f150630d/githubrelease-1.4.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7025e6853725bd89a2718ebc6b585be6", "sha256": "05fbcc4f3b615ee233fb945daa9378c713529d0136dd0b331b3859e5a314dd52"}, "downloads": -1, "filename": "githubrelease-1.4.2.tar.gz", "has_sig": false, "md5_digest": "7025e6853725bd89a2718ebc6b585be6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2966, "upload_time": "2014-08-13T14:50:13", "upload_time_iso_8601": "2014-08-13T14:50:13.104119Z", "url": "https://files.pythonhosted.org/packages/62/50/b5d80532831376c2eb4558b93d9c45cb552915e8dfa932e3e35fd09c4747/githubrelease-1.4.2.tar.gz", "yanked": false}], "1.4.3a0": [{"comment_text": "", "digests": {"md5": "e1d58b70b3e460c9b1932b0feef2c3d1", "sha256": "581c61aac198ab6e79e26e21ca5318099f1159d1249fcb276b600d01ce48323d"}, "downloads": -1, "filename": "githubrelease-1.4.3a0-py2-none-any.whl", "has_sig": false, "md5_digest": "e1d58b70b3e460c9b1932b0feef2c3d1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4883, "upload_time": "2015-09-08T01:31:25", "upload_time_iso_8601": "2015-09-08T01:31:25.214663Z", "url": "https://files.pythonhosted.org/packages/24/d7/3789906957fbaa6933b04d4c0078fe5c19d734c5f4b9bc39ada74ada6c39/githubrelease-1.4.3a0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e1b21679eb4420200eac4a56731f25b0", "sha256": "a33d7345d10100deb181f2e90c0c52501b351adf46b53b2226e6636d041621a8"}, "downloads": -1, "filename": "githubrelease-1.4.3a0.tar.gz", "has_sig": false, "md5_digest": "e1b21679eb4420200eac4a56731f25b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3068, "upload_time": "2015-09-08T01:31:28", "upload_time_iso_8601": "2015-09-08T01:31:28.702812Z", "url": "https://files.pythonhosted.org/packages/a6/d6/dc667d7380149e9d8991a8a2c981135ddb6cadc5e3f36fbb6f23ea040450/githubrelease-1.4.3a0.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "ec6b580a05da34a3fd3b87fab4ecbdd7", "sha256": "5c222b43804332c1777d5ad42a2665ee306213cb8aff98eded04e47e97850a78"}, "downloads": -1, "filename": "githubrelease-1.5.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "ec6b580a05da34a3fd3b87fab4ecbdd7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17124, "upload_time": "2017-02-20T06:06:02", "upload_time_iso_8601": "2017-02-20T06:06:02.437956Z", "url": "https://files.pythonhosted.org/packages/4b/ce/d46e76100fc6116718d6b1ff53f753613bfee03e250f91e359ac200a454a/githubrelease-1.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15ab14fccc11df959e50faee23167b70", "sha256": "86ea7328e43de14e1a3b4d68a6f405290d62456eb3984d44486312a2559341ce"}, "downloads": -1, "filename": "githubrelease-1.5.0.tar.gz", "has_sig": true, "md5_digest": "15ab14fccc11df959e50faee23167b70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28870, "upload_time": "2017-02-20T06:06:04", "upload_time_iso_8601": "2017-02-20T06:06:04.203736Z", "url": "https://files.pythonhosted.org/packages/31/10/117baa68a18a200fb86d8d3b5c8aa53bab1329aeed95ea9fb3b9991c092c/githubrelease-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "261371bff6d267dc4933330d4ea2d56f", "sha256": "b4b9765387587b5f876ec5746d9192f8fe4236bfa0046ecb404962f7dfd43d51"}, "downloads": -1, "filename": "githubrelease-1.5.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "261371bff6d267dc4933330d4ea2d56f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19201, "upload_time": "2017-04-05T07:22:34", "upload_time_iso_8601": "2017-04-05T07:22:34.132343Z", "url": "https://files.pythonhosted.org/packages/cc/94/ec3dcda7a7082584a7abbd31c32bb2ce687e84f020c5c0b30e806bb4fd29/githubrelease-1.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95f832ea7799934102c2f1b454ea5e2a", "sha256": "daba694c84db15876b8bf91b15de33ae1717d387ef2f8317f99796d7fb17c042"}, "downloads": -1, "filename": "githubrelease-1.5.1.tar.gz", "has_sig": true, "md5_digest": "95f832ea7799934102c2f1b454ea5e2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32911, "upload_time": "2017-04-05T07:22:35", "upload_time_iso_8601": "2017-04-05T07:22:35.921440Z", "url": "https://files.pythonhosted.org/packages/03/cc/008d4a5e5f9bff842ad2129a71c7aef1a020c86f557f083c960b2c79f0cf/githubrelease-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "73158362ea59a19af570f82d41cf7a78", "sha256": "91b7a6b3bc367718315fa893967e9178d1e11b5cec594d2451780d0d26ce6f06"}, "downloads": -1, "filename": "githubrelease-1.5.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "73158362ea59a19af570f82d41cf7a78", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19708, "upload_time": "2017-04-06T19:17:32", "upload_time_iso_8601": "2017-04-06T19:17:32.551302Z", "url": "https://files.pythonhosted.org/packages/8b/90/f4d62b14e0a9eb4e481b1844cc23cb9ea38691b9b889408064590b6930bf/githubrelease-1.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2187954dc8e7ccbfa1233d06135a1f5", "sha256": "2b4289634eb184c30065fe201733b82cef2a30ce92abdd66defde12e5d673c6a"}, "downloads": -1, "filename": "githubrelease-1.5.2.tar.gz", "has_sig": true, "md5_digest": "e2187954dc8e7ccbfa1233d06135a1f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33649, "upload_time": "2017-04-06T19:17:34", "upload_time_iso_8601": "2017-04-06T19:17:34.695869Z", "url": "https://files.pythonhosted.org/packages/e0/87/aa792d990c6d9c69f728b4c5248dc008b5be81877ae54141c27805fc41ed/githubrelease-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "8b0dbda8218043d908a432c9f346d48b", "sha256": "b0ee49463ac96cc86ac8cca73925c57213eea0858968274cd839d7342c42d9d9"}, "downloads": -1, "filename": "githubrelease-1.5.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "8b0dbda8218043d908a432c9f346d48b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19736, "upload_time": "2017-04-07T09:07:22", "upload_time_iso_8601": "2017-04-07T09:07:22.233206Z", "url": "https://files.pythonhosted.org/packages/2a/9b/ffbd5544d236e88e1a48a85d0a1ae035a8d0384361f406dade756de5c442/githubrelease-1.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "66c9d3fc766c6ae15935452cb896b50f", "sha256": "2d7172ba99bd531b399262bd60b7f7defd4309f8b3ce26a5eee8f2e92eaf27cd"}, "downloads": -1, "filename": "githubrelease-1.5.3.tar.gz", "has_sig": true, "md5_digest": "66c9d3fc766c6ae15935452cb896b50f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34669, "upload_time": "2017-04-07T09:07:24", "upload_time_iso_8601": "2017-04-07T09:07:24.282335Z", "url": "https://files.pythonhosted.org/packages/14/a9/dd6859883a7a48b703bf071cc6a0bf8a1dc07548b559fe84dea7d75f4bce/githubrelease-1.5.3.tar.gz", "yanked": false}], "1.5.4": [{"comment_text": "", "digests": {"md5": "54699ac184d5323cd2a8db78fd261904", "sha256": "644f08669c40cf1685e45fd1bb6154d8544b60b2709d8dc10073d6b6f2b63124"}, "downloads": -1, "filename": "githubrelease-1.5.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "54699ac184d5323cd2a8db78fd261904", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19828, "upload_time": "2017-04-11T11:05:26", "upload_time_iso_8601": "2017-04-11T11:05:26.923645Z", "url": "https://files.pythonhosted.org/packages/b8/0c/36a607b12134e8918ef5dfb875d521c58124f491383ed71373a9c16d458b/githubrelease-1.5.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4e4c93c29a1b3f7a473425caa9c6485", "sha256": "a3022f3ab44010ab2c10f70a0cb536c8dbcb53e689c1d5b6740bd96c841652c9"}, "downloads": -1, "filename": "githubrelease-1.5.4.tar.gz", "has_sig": true, "md5_digest": "a4e4c93c29a1b3f7a473425caa9c6485", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34853, "upload_time": "2017-04-11T11:05:28", "upload_time_iso_8601": "2017-04-11T11:05:28.164803Z", "url": "https://files.pythonhosted.org/packages/b7/a5/f09dfd0ef9deea61616031c9bc9b896ff24216e7350c3b1a61bc0bcb02e5/githubrelease-1.5.4.tar.gz", "yanked": false}], "1.5.5": [{"comment_text": "", "digests": {"md5": "9e6ab1b232cddd33968395899bdc4a39", "sha256": "e422b7c0f79d080b2a20660f786fd666edd12d75e0a813f68bd25255cd8f686c"}, "downloads": -1, "filename": "githubrelease-1.5.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "9e6ab1b232cddd33968395899bdc4a39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20031, "upload_time": "2017-06-14T06:57:57", "upload_time_iso_8601": "2017-06-14T06:57:57.792042Z", "url": "https://files.pythonhosted.org/packages/ab/76/51394f8527041304b259a88f6b329baca42f2b7a8c16646a8c7fc6f13491/githubrelease-1.5.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4417a04e5f88aa13002b4bd2dfb57b85", "sha256": "b9f03f0dae68f20d64532e5b9b679f91146f3ab5fb5e52d92004d1b7d42d3efb"}, "downloads": -1, "filename": "githubrelease-1.5.5.tar.gz", "has_sig": true, "md5_digest": "4417a04e5f88aa13002b4bd2dfb57b85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35121, "upload_time": "2017-06-14T06:57:59", "upload_time_iso_8601": "2017-06-14T06:57:59.939005Z", "url": "https://files.pythonhosted.org/packages/61/4b/6926616e19972881e13b1cdabf93452808f15abf0b8936fea5783b3c98ff/githubrelease-1.5.5.tar.gz", "yanked": false}], "1.5.6": [{"comment_text": "", "digests": {"md5": "afa63ebb0565c1247a4780a294945854", "sha256": "6d54c85489f60c0061e2b7cdebf4c90f0ce873e07bfd9e65d4ab6f7c96fab19f"}, "downloads": -1, "filename": "githubrelease-1.5.6-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "afa63ebb0565c1247a4780a294945854", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20233, "upload_time": "2017-07-27T22:31:06", "upload_time_iso_8601": "2017-07-27T22:31:06.852355Z", "url": "https://files.pythonhosted.org/packages/25/85/8296d7df469b06145d9601a8d0aa8fcab92404eb391101366c3bd329e157/githubrelease-1.5.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "481b6b200787afaec7e0cdac1ca56544", "sha256": "1a5beaeff29733702f1853ab48a35566b938e7cb34618cbe339b7b8ef31a06b8"}, "downloads": -1, "filename": "githubrelease-1.5.6.tar.gz", "has_sig": true, "md5_digest": "481b6b200787afaec7e0cdac1ca56544", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35399, "upload_time": "2017-07-27T22:31:08", "upload_time_iso_8601": "2017-07-27T22:31:08.621732Z", "url": "https://files.pythonhosted.org/packages/ae/b5/ae41c245c3298b19f3bb9ee06e8d947f9ca5c97ac97b8f16f8df9972e71d/githubrelease-1.5.6.tar.gz", "yanked": false}], "1.5.7": [{"comment_text": "", "digests": {"md5": "efb665d9cfc87b350092a8a21c3f0681", "sha256": "4e13a05d8b6a47f6cde2789d5fe1c4cf1af9872100043b459ab1881071b94576"}, "downloads": -1, "filename": "githubrelease-1.5.7-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "efb665d9cfc87b350092a8a21c3f0681", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20323, "upload_time": "2017-11-08T23:54:48", "upload_time_iso_8601": "2017-11-08T23:54:48.704418Z", "url": "https://files.pythonhosted.org/packages/de/26/4db945ea8b418b8c8c761665a863f5d10255aaac15aa935822b5f12ffc5b/githubrelease-1.5.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e060b2315012e79f170db160eec7805f", "sha256": "66362ea521c14ca9aa9fe4e9f7ee962fa9c111950c67d6bdc1a32fe04db08320"}, "downloads": -1, "filename": "githubrelease-1.5.7.tar.gz", "has_sig": true, "md5_digest": "e060b2315012e79f170db160eec7805f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35673, "upload_time": "2017-11-08T23:54:50", "upload_time_iso_8601": "2017-11-08T23:54:50.379935Z", "url": "https://files.pythonhosted.org/packages/0d/16/3cd2c31a6db4049d7324e2b676b221dca9ed9dc1498b40d5faef15a2ff2b/githubrelease-1.5.7.tar.gz", "yanked": false}], "1.5.8": [{"comment_text": "", "digests": {"md5": "5f8d3e1d20dd6f28cb05f2cedfeb72de", "sha256": "38d4e571b97953aa5652024ff9d913e34a3c9c2d3c94ffa006a646d55d1c784a"}, "downloads": -1, "filename": "githubrelease-1.5.8-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "5f8d3e1d20dd6f28cb05f2cedfeb72de", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20793, "upload_time": "2018-04-08T19:46:36", "upload_time_iso_8601": "2018-04-08T19:46:36.902001Z", "url": "https://files.pythonhosted.org/packages/a3/4c/d6b3594ad70128be6167a1c9e726b1d9aeb07fdc744acb4e7055f8ec2e83/githubrelease-1.5.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b07f94e813da4b687976d0eb4a9714cc", "sha256": "e146dc03cc9d17bab87d8c9bd8eabf7503b8c1c00a808f21fd22dcfae2d63095"}, "downloads": -1, "filename": "githubrelease-1.5.8.tar.gz", "has_sig": true, "md5_digest": "b07f94e813da4b687976d0eb4a9714cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36480, "upload_time": "2018-04-08T19:46:38", "upload_time_iso_8601": "2018-04-08T19:46:38.295679Z", "url": "https://files.pythonhosted.org/packages/4b/d3/e650540baf329d9d889c228a26d89a66bc2cc44b930d94e715658c1a5360/githubrelease-1.5.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f8d3e1d20dd6f28cb05f2cedfeb72de", "sha256": "38d4e571b97953aa5652024ff9d913e34a3c9c2d3c94ffa006a646d55d1c784a"}, "downloads": -1, "filename": "githubrelease-1.5.8-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "5f8d3e1d20dd6f28cb05f2cedfeb72de", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20793, "upload_time": "2018-04-08T19:46:36", "upload_time_iso_8601": "2018-04-08T19:46:36.902001Z", "url": "https://files.pythonhosted.org/packages/a3/4c/d6b3594ad70128be6167a1c9e726b1d9aeb07fdc744acb4e7055f8ec2e83/githubrelease-1.5.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b07f94e813da4b687976d0eb4a9714cc", "sha256": "e146dc03cc9d17bab87d8c9bd8eabf7503b8c1c00a808f21fd22dcfae2d63095"}, "downloads": -1, "filename": "githubrelease-1.5.8.tar.gz", "has_sig": true, "md5_digest": "b07f94e813da4b687976d0eb4a9714cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36480, "upload_time": "2018-04-08T19:46:38", "upload_time_iso_8601": "2018-04-08T19:46:38.295679Z", "url": "https://files.pythonhosted.org/packages/4b/d3/e650540baf329d9d889c228a26d89a66bc2cc44b930d94e715658c1a5360/githubrelease-1.5.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:59 2020"}