{"info": {"author": "Matthew Zorumski", "author_email": "author@example.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# MLD Article Analysis\n\nMLD, pronounced Mold, is a command line based application that uses natural language processing (NLP) techniques to analyze the tone, sentiment, and lexical signature of a news article of a user-inputted URL. \n\n# Disclaimer \nThe project is developed and maintained by students as part of Jory Morrison's mentorship program for secondary education students. There is no affiliation, endorsement, ownership, or sponsorship with or by any commercial or non-commercial entity. Ownership of this repository should not be construed as contribution or creation of intellectual property; please reference commit history for attribution of intellectual property origin.\n\n# License\n[Apache 2.0 License](https://choosealicense.com/licenses/apache-2.0/) applies\n\n# Notes\nAs of September 2019 this project is being actively maintained. It is currently in a limited-functioning state due to changes in the Watson SDK. Please reference [issues](https://github.com/jorymorrison/MLD/issues)\n\nThis project uses the [IBM Watson Tone Analyzer API](https://www.ibm.com/watson/services/tone-analyzer/), which requires an IMB Creative Cloud account.\n\n# Prerequisites\n* Python 3.67\n* PIP3\n* GCC\n* [An IBM Creative Cloud Account](https://console.bluemix.net/registration/?target=/catalog/%3fcategory=watson&cm_mmc=Earned-_-Watson+Core+-+Platform-_-WW_WW-_-intercom&cm_mmca1=000000OF&cm_mmca2=10000409&&cm_mc_uid=27843925725315299422843&cm_mc_sid_50200000=54807401535555236296&cm_mc_sid_52640000=27596621535555236301)\n\n# Cloning the Project\nTo clone this project, use the following command:\n```\n$ git clone https://github.com/jorymorrison/MLD.git\n```\n### Installing Requirements\nUse these commands to install all required dependencies:\n```\n$ cd MLD\n$ pip install -r requirements.txt\n```\n\n# Basic Usage\nOnce a URL to a news article is inputted, the program will process the article's text and output the sentiment in terms of polarity and subjectivity, the tone, and five key words that make up the article's lexical signature.\n\n```\nEnter the URL of a news article as the first argument when calling in command line:https://abcnews.go.com/Politics/john-mccain-memorials-start-longtime-senators-body-lying/story?id=57472926\nRetrieving satus code...Successfully retrieved status code: 200\nSuccessfully retrieved representation.\nCreating results file...\nSuccessfully created results file at: /home/libbymadren/MLD\\'John McCain will always have our back': Politicians pay tribute to the late senator-2018-08-29 19:47:37.537351.txt\nSuccessfully wrote retrieval status to results file.\nSuccessfully wrote retrieval to results file.\nSuccessfully retrieved document sentiment.\nSuccessfully retrieved document tone.\nSuccessfully accessed corpus with 2 invalid documents.\nSuccessfully calculated lexical signature.\nSuccessfully wrote output to results file.\nExiting program...\n```\nThe article's title, body text, and all output results are submitted to a results txt folder found in the repository.\n\n### Obtaining Watson API Keys\n\nThe first time this program runs, the program will search for Watson API keys. If none are found, you will be instructed to set your Watson username and password. \n\nTo access the Watson API Keys, log into your IBM Creative Cloud Account and locate the [Tone Analyzer](https://console.bluemix.net/catalog/services/tone-analyzer?hideTours=true&cm_mmc=-_-Watson+Core_Watson+Core+-+Platform-_-WW_WW-_-wdc-ref&cm_mmca1=000000OF&cm_mmca2=10000409) page. Click *Create,* and a username and password will be generated for you. Copy these and set them in the application by either editing the ` config.conf ` file, or by setting environmental variables:\n```\n$ export WATSON_USER=\"username\"\n$ export WATSON_PASS=\"password\"\n```\n\n# Output Synopsis\n### Json Schema:\n{\n    \"article\": {\n        \"body\": <body-text>,\n\t\t\"date\": <date>,\n        \"title\": <title>,\n        \"url\": <url>\n    },\n    \"sentiment\": {\n        \"polarity\": <value 0-1>,\n        \"subjectivity\": <value 0-1>\n    },\n    \"signature\": {\n        <most frequent>: <value 0-1>,\n        <most frequent>: <value 0-1>,\n        <most frequent>: <value 0-1>,\n        <most frequent>: <value 0-1>,\n        <most frequent>: <value 0-1>\n    },\n    \"tone\": {\n\t\t<tone>: <value 0-1>,\n\t\t<tone>: <value 0-1>,\n\t\t<tone>: <value 0-1>,\n\t\t<tone>: <value 0-1>,\n\t\t<tone>: <value 0-1>,\n\t\t<tone>: <value 0-1>\n\t}\n}\n### Sentiment:\n**Polarity:** Scale -1 - 1 (-1 being very negative, 0 being neutral, 1 being very positive)\n**Subjectivity:** Scale 0 - 1 (0 is very objective, 1 is very subjective)\n\n### Tone:\nTonal scores are displayed on a scale from 0.5 - 1, with lower scores indicating emotions less present in the document, and higher scores indicating emotions that are likely perceived in the content. Scores higher than 0.75 should be consider very emotional.\nFor in depth documentation on the IBM Watson Tonal Analyzer go to: https://console.bluemix.net/docs/services/tone-analyzer/using-tone.html#using-the-general-purpose-endpoint\n\n### Lexical Signature:\nLexical signature is represented by the top 5 words in a document according to Term Frequency / Inverse Document Frequency (TF-IDF). \nFor in depth documentation of how TF-IDF is calculated go to: https://http//www.tfidf.com\nOutput is formatted in key-value pairs of a word and its TF-IDF score.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jorymorrison/MLD", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "example-pkg-MZorumski", "package_url": "https://pypi.org/project/example-pkg-MZorumski/", "platform": "", "project_url": "https://pypi.org/project/example-pkg-MZorumski/", "project_urls": {"Homepage": "https://github.com/jorymorrison/MLD"}, "release_url": "https://pypi.org/project/example-pkg-MZorumski/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A small example package", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MLD Article Analysis</h1>\n<p>MLD, pronounced Mold, is a command line based application that uses natural language processing (NLP) techniques to analyze the tone, sentiment, and lexical signature of a news article of a user-inputted URL.</p>\n<h1>Disclaimer</h1>\n<p>The project is developed and maintained by students as part of Jory Morrison's mentorship program for secondary education students. There is no affiliation, endorsement, ownership, or sponsorship with or by any commercial or non-commercial entity. Ownership of this repository should not be construed as contribution or creation of intellectual property; please reference commit history for attribution of intellectual property origin.</p>\n<h1>License</h1>\n<p><a href=\"https://choosealicense.com/licenses/apache-2.0/\" rel=\"nofollow\">Apache 2.0 License</a> applies</p>\n<h1>Notes</h1>\n<p>As of September 2019 this project is being actively maintained. It is currently in a limited-functioning state due to changes in the Watson SDK. Please reference <a href=\"https://github.com/jorymorrison/MLD/issues\" rel=\"nofollow\">issues</a></p>\n<p>This project uses the <a href=\"https://www.ibm.com/watson/services/tone-analyzer/\" rel=\"nofollow\">IBM Watson Tone Analyzer API</a>, which requires an IMB Creative Cloud account.</p>\n<h1>Prerequisites</h1>\n<ul>\n<li>Python 3.67</li>\n<li>PIP3</li>\n<li>GCC</li>\n<li><a href=\"https://console.bluemix.net/registration/?target=/catalog/%3fcategory=watson&amp;cm_mmc=Earned-_-Watson+Core+-+Platform-_-WW_WW-_-intercom&amp;cm_mmca1=000000OF&amp;cm_mmca2=10000409&amp;&amp;cm_mc_uid=27843925725315299422843&amp;cm_mc_sid_50200000=54807401535555236296&amp;cm_mc_sid_52640000=27596621535555236301\" rel=\"nofollow\">An IBM Creative Cloud Account</a></li>\n</ul>\n<h1>Cloning the Project</h1>\n<p>To clone this project, use the following command:</p>\n<pre><code>$ git clone https://github.com/jorymorrison/MLD.git\n</code></pre>\n<h3>Installing Requirements</h3>\n<p>Use these commands to install all required dependencies:</p>\n<pre><code>$ cd MLD\n$ pip install -r requirements.txt\n</code></pre>\n<h1>Basic Usage</h1>\n<p>Once a URL to a news article is inputted, the program will process the article's text and output the sentiment in terms of polarity and subjectivity, the tone, and five key words that make up the article's lexical signature.</p>\n<pre><code>Enter the URL of a news article as the first argument when calling in command line:https://abcnews.go.com/Politics/john-mccain-memorials-start-longtime-senators-body-lying/story?id=57472926\nRetrieving satus code...Successfully retrieved status code: 200\nSuccessfully retrieved representation.\nCreating results file...\nSuccessfully created results file at: /home/libbymadren/MLD\\'John McCain will always have our back': Politicians pay tribute to the late senator-2018-08-29 19:47:37.537351.txt\nSuccessfully wrote retrieval status to results file.\nSuccessfully wrote retrieval to results file.\nSuccessfully retrieved document sentiment.\nSuccessfully retrieved document tone.\nSuccessfully accessed corpus with 2 invalid documents.\nSuccessfully calculated lexical signature.\nSuccessfully wrote output to results file.\nExiting program...\n</code></pre>\n<p>The article's title, body text, and all output results are submitted to a results txt folder found in the repository.</p>\n<h3>Obtaining Watson API Keys</h3>\n<p>The first time this program runs, the program will search for Watson API keys. If none are found, you will be instructed to set your Watson username and password.</p>\n<p>To access the Watson API Keys, log into your IBM Creative Cloud Account and locate the <a href=\"https://console.bluemix.net/catalog/services/tone-analyzer?hideTours=true&amp;cm_mmc=-_-Watson+Core_Watson+Core+-+Platform-_-WW_WW-_-wdc-ref&amp;cm_mmca1=000000OF&amp;cm_mmca2=10000409\" rel=\"nofollow\">Tone Analyzer</a> page. Click <em>Create,</em> and a username and password will be generated for you. Copy these and set them in the application by either editing the <code>config.conf</code> file, or by setting environmental variables:</p>\n<pre><code>$ export WATSON_USER=\"username\"\n$ export WATSON_PASS=\"password\"\n</code></pre>\n<h1>Output Synopsis</h1>\n<h3>Json Schema:</h3>\n<p>{\n\"article\": {\n\"body\": &lt;body-text&gt;,\n\"date\": &lt;date&gt;,\n\"title\": &lt;title&gt;,\n\"url\": &lt;url&gt;\n},\n\"sentiment\": {\n\"polarity\": &lt;value 0-1&gt;,\n\"subjectivity\": &lt;value 0-1&gt;\n},\n\"signature\": {\n&lt;most frequent&gt;: &lt;value 0-1&gt;,\n&lt;most frequent&gt;: &lt;value 0-1&gt;,\n&lt;most frequent&gt;: &lt;value 0-1&gt;,\n&lt;most frequent&gt;: &lt;value 0-1&gt;,\n&lt;most frequent&gt;: &lt;value 0-1&gt;\n},\n\"tone\": {\n&lt;tone&gt;: &lt;value 0-1&gt;,\n&lt;tone&gt;: &lt;value 0-1&gt;,\n&lt;tone&gt;: &lt;value 0-1&gt;,\n&lt;tone&gt;: &lt;value 0-1&gt;,\n&lt;tone&gt;: &lt;value 0-1&gt;,\n&lt;tone&gt;: &lt;value 0-1&gt;\n}\n}</p>\n<h3>Sentiment:</h3>\n<p><strong>Polarity:</strong> Scale -1 - 1 (-1 being very negative, 0 being neutral, 1 being very positive)\n<strong>Subjectivity:</strong> Scale 0 - 1 (0 is very objective, 1 is very subjective)</p>\n<h3>Tone:</h3>\n<p>Tonal scores are displayed on a scale from 0.5 - 1, with lower scores indicating emotions less present in the document, and higher scores indicating emotions that are likely perceived in the content. Scores higher than 0.75 should be consider very emotional.\nFor in depth documentation on the IBM Watson Tonal Analyzer go to: <a href=\"https://console.bluemix.net/docs/services/tone-analyzer/using-tone.html#using-the-general-purpose-endpoint\" rel=\"nofollow\">https://console.bluemix.net/docs/services/tone-analyzer/using-tone.html#using-the-general-purpose-endpoint</a></p>\n<h3>Lexical Signature:</h3>\n<p>Lexical signature is represented by the top 5 words in a document according to Term Frequency / Inverse Document Frequency (TF-IDF).\nFor in depth documentation of how TF-IDF is calculated go to: <a href=\"https://http//www.tfidf.com\" rel=\"nofollow\">https://http//www.tfidf.com</a>\nOutput is formatted in key-value pairs of a word and its TF-IDF score.</p>\n\n          </div>"}, "last_serial": 6387263, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f149645c020613301410949c6ca4e890", "sha256": "f19c71125205ee9065c2122a9c3c7511c0c4198666d09f191e19b99872a8c803"}, "downloads": -1, "filename": "example_pkg_MZorumski-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f149645c020613301410949c6ca4e890", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7733, "upload_time": "2020-01-02T18:35:07", "upload_time_iso_8601": "2020-01-02T18:35:07.967331Z", "url": "https://files.pythonhosted.org/packages/05/3a/04748b54b33b472c4a61e8aa83672d809cc9b11b7696212a36fab865f7a2/example_pkg_MZorumski-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "005e28778c69c0652fb1192bb7f0e180", "sha256": "1114b1cae82228b5cf80bbbadc73b4ba4367ab392935629b1bb422024028814c"}, "downloads": -1, "filename": "example-pkg-MZorumski-0.0.1.tar.gz", "has_sig": false, "md5_digest": "005e28778c69c0652fb1192bb7f0e180", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3693, "upload_time": "2020-01-02T18:35:10", "upload_time_iso_8601": "2020-01-02T18:35:10.235581Z", "url": "https://files.pythonhosted.org/packages/b2/7b/439bb564912319d33953815834ebc31dd5e9a7f7936adabc9e7aecf0f965/example-pkg-MZorumski-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f149645c020613301410949c6ca4e890", "sha256": "f19c71125205ee9065c2122a9c3c7511c0c4198666d09f191e19b99872a8c803"}, "downloads": -1, "filename": "example_pkg_MZorumski-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f149645c020613301410949c6ca4e890", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7733, "upload_time": "2020-01-02T18:35:07", "upload_time_iso_8601": "2020-01-02T18:35:07.967331Z", "url": "https://files.pythonhosted.org/packages/05/3a/04748b54b33b472c4a61e8aa83672d809cc9b11b7696212a36fab865f7a2/example_pkg_MZorumski-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "005e28778c69c0652fb1192bb7f0e180", "sha256": "1114b1cae82228b5cf80bbbadc73b4ba4367ab392935629b1bb422024028814c"}, "downloads": -1, "filename": "example-pkg-MZorumski-0.0.1.tar.gz", "has_sig": false, "md5_digest": "005e28778c69c0652fb1192bb7f0e180", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3693, "upload_time": "2020-01-02T18:35:10", "upload_time_iso_8601": "2020-01-02T18:35:10.235581Z", "url": "https://files.pythonhosted.org/packages/b2/7b/439bb564912319d33953815834ebc31dd5e9a7f7936adabc9e7aecf0f965/example-pkg-MZorumski-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:59 2020"}