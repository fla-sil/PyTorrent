{"info": {"author": "Tomasz Knapik", "author_email": "hi@tmkn.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 2.2", "Framework :: Wagtail :: 2", "License :: OSI Approved", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet :: WWW/HTTP"], "description": ".. image:: https://github.com/torchbox/wagtail-storages/raw/master/logo.png\n\nwagtail-storages\n================\n\n.. image:: https://img.shields.io/pypi/v/wagtail-storages.svg\n   :target: https://pypi.org/project/wagtail-storages/\n.. image:: https://img.shields.io/pypi/dm/wagtail-storages.svg\n   :target: https://pypi.org/project/wagtail-storages/\n.. image:: https://travis-ci.org/torchbox/wagtail-storages.svg?branch=master\n   :target: https://travis-ci.org/torchbox/wagtail-storages\n\nThis package fills the missing gap in using AWS S3 together with Wagtail. This\npackage will be useful if you want to:\n\n- Use AWS S3 bucket for hosting Wagtail documents.\n- Put the bucket behind the CDN so that the bucket is not called directly each\n  time.\n- Allow editors to use privacy controls on documents, whilst using CDN.\n- Avoid time-outs because of downloads being proxied through Wagtail views.\n\n  *Note: you cannot use the document* `redirect view`__ *if you want your documents to be truly private.*\n\n.. _WagtailRedirectView: https://docs.wagtail.io/en/stable/advanced_topics/settings.html#wagtaildocs-serve-method\n__ WagtailRedirectView_\n\n\nWhat does it do?\n----------------\n\nThe package is a collection of signal handlers and Wagtail hooks.\n\n- Sets per-object ACLs on S3 whenever privacy settings change on a Wagtail\n  document.\n- Replaces the current document view with a redirect. Either to a signed S3\n  bucket URL for private documents or public custom domain URL for public ones.\n- Purges CDN for documents that have changed.\n\nRequirements\n------------\n\n- ``django-storages`` with the ``S3Boto3Storage`` storage backend configured in\n  a Wagtail project.\n- CDN supported by Wagtail front-end cache invalidator.\n\nManagement commands\n-------------------\n\n``django-admin fix_document_acls``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe package provider a management command that sets all the documents' ACLs\naccording to the their collection permissions. This must be called if there had\nbeen documents in a bucket before the package was used to make sure the ACLs in\nthe bucket are correct.\n\nSettings\n--------\n\nWAGTAIL_STORAGES_DOCUMENTS_FRONTENDCACHE\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUsing the same format as Wagtail's ``WAGTAILFRONTENDCACHE`` setting, but to be\nonly used by the wagtail-storages to purge the documents. If not set, the purge\nwon't happen. `Read more on how to format it in the Wagtail docs\n<https://docs.wagtail.io/en/stable/reference/contrib/frontendcache.html>`_,\ne.g.\n\n\n.. code:: python\n\n   WAGTAIL_STORAGES_DOCUMENTS_FRONTENDCACHE = {\n       'cloudfront': {\n           'BACKEND': 'wagtail.contrib.frontend_cache.backends.CloudfrontBackend',\n           'DISTRIBUTION_ID': 'your-distribution-id',\n        },\n   }\n\nWAGTAIL_STORAGES_DOCUMENT_HOOK_ORDER\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSet a custom order for the document hook order. It's set to 100 by default.\nIt's important that it runs after any of your hooks since it returns a\nresponse, e.g.\n\n.. code:: python\n\n   WAGTAIL_STORAGES_DOCUMENT_HOOK_ORDER = 900\n\n\nRecommended S3 setup with Wagtail\n---------------------------------\n\nThe following guide explains the recommended setup for using S3 with Wagtail.\nThis guide assumes that:\n\n* You serve your main website at ``llamasavers.com`` (replace\n  ``llamasavers.com`` with your actual domain name).\n* Your S3 bucket is called ``media.llamasavers.com`` and you host it from that\n  domain name.\n* You are using CDN on that domain, this guide will assume Cloudflare.\n\nSet up S3 bucket\n~~~~~~~~~~~~~~~~\n\nFirst, set up your S3 bucket. It must be configured to:\n\n- Have a name that matches the domain name, e.g. ``media.llamasavers.com``.\n- Allow the user to perform the following actions on the bucket:\n   - ``s3:ListBucket``\n   - ``s3:GetBucketLocation``\n   - ``s3:ListBucketMultipartUploads``\n   - ``s3:ListBucketVersions``\n- Allow the user to perform all the actions (``s3:*``) on the objects within the\n  bucket.\n- Allow the internet traffic to access Wagtail image renditions (``images/*``).\n\nThe user permissions can be set in the IAM or via a bucket policy. See example\nof all of those points being achieved in the bucket policy below.\n\n.. code:: json\n\n   {\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Sid\": \"PublicGetObject\",\n                \"Effect\": \"Allow\",\n                \"Principal\": \"*\",\n                \"Action\": \"s3:GetObject\",\n                \"Resource\": \"arn:aws:s3:::[BUCKET NAME]/images/*\"\n            },\n            {\n                \"Sid\": \"AllowUserManageBucket\",\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                    \"AWS\": \"arn:aws:iam::[USER ARN]\"\n                },\n                \"Action\": [\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\",\n                    \"s3:ListBucketMultipartUploads\",\n                    \"s3:ListBucketVersions\"\n                ],\n                \"Resource\": \"arn:aws:s3:::[BUCKET NAME]\"\n            },\n            {\n                \"Sid\": \"AllowUserManageBucketObjects\",\n                \"Effect\": \"Allow\",\n                \"Principal\": {\n                    \"AWS\": \"arn:aws:iam::[USER ARN]\"\n                },\n                \"Action\": \"s3:*\",\n                \"Resource\": \"arn:aws:s3:::[BUCKET NAME]/*\"\n            }\n        ]\n    }\n\n\nAfter the S3 bucket is set up on AWS, you can configure the Wagtail project to\nuse it.\n\nSet up django-storages\n~~~~~~~~~~~~~~~~~~~~~~\n\nInstall ``django-storages`` and ``boto3``.\n\n.. code:: sh\n\n   pip install django-storages[boto3]\n\nSet up your S3 bucket with ``django-storages``. The following code allows\nconfiguration via environment variables.\n\n.. code:: python\n\n    # settings.py\n    import os\n\n\n    if \"AWS_STORAGE_BUCKET_NAME\" in os.environ:\n        # Add django-storages to the installed apps\n        INSTALLED_APPS = INSTALLED_APPS + [\"storages\"]\n\n        # https://docs.djangoproject.com/en/stable/ref/settings/#default-file-storage\n        DEFAULT_FILE_STORAGE = \"storages.backends.s3boto3.S3Boto3Storage\"\n\n        AWS_STORAGE_BUCKET_NAME = os.environ[\"AWS_STORAGE_BUCKET_NAME\"]\n\n        # Disables signing of the S3 objects' URLs. When set to True it\n        # will append authorization querystring to each URL.\n        AWS_QUERYSTRING_AUTH = False\n\n        # Do not allow overriding files on S3 as per Wagtail docs recommendation:\n        # https://docs.wagtail.io/en/stable/advanced_topics/deploying.html#cloud-storage\n        # Not having this setting may have consequences such as losing files.\n        AWS_S3_FILE_OVERWRITE = False\n\n        # Default ACL for new files should be \"private\" - not accessible to the\n        # public. Images should be made available to public via the bucket policy,\n        # where the documents should use wagtail-storages.\n        AWS_DEFAULT_ACL = \"private\"\n\n        # We generally use this setting in production to put the S3 bucket\n        # behind a CDN using a custom domain, e.g. media.llamasavers.com.\n        # https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html#cloudfront\n        if \"AWS_S3_CUSTOM_DOMAIN\" in os.environ:\n            AWS_S3_CUSTOM_DOMAIN = os.environ[\"AWS_S3_CUSTOM_DOMAIN\"]\n\n        # When signing URLs is enabled, the region must be set.\n        # The global S3 endpoint does not seem to support signed URLS.\n        # Set this only if you will be using signed URLs.\n        if \"AWS_S3_REGION_NAME\" in os.environ:\n            AWS_S3_REGION_NAME = os.environ[\"AWS_S3_REGION_NAME\"]\n\n        # This settings lets you force using http or https protocol when generating\n        # the URLs to the files. Set https as default.\n        # https://github.com/jschneier/django-storages/blob/10d1929de5e0318dbd63d715db4bebc9a42257b5/storages/backends/s3boto3.py#L217\n        AWS_S3_URL_PROTOCOL = os.environ.get(\"AWS_S3_URL_PROTOCOL\", \"https:\")\n\n\nIf you use the above snippet, you can set the following environment variables:\n\n* ``AWS_STORAGE_BUCKET_NAME`` - set to ``media.llamasavers.com``.\n* ``AWS_S3_CUSTOM_DOMAIN`` - set to ``media.llamasavers.com``.\n* ``AWS_S3_REGION_NAME`` - set to your AWS region name, e.g. ``eu-west-2``.\n\nYou can use one of the methods to provide `boto3 with credentials`__. We\nsuggest you stick with the environment variables. To do that, you need to set\nthe following variables:\n\n* ``AWS_ACCESS_KEY_ID``\n* ``AWS_SECRET_ACCESS_KEY``\n\n.. _Boto3Credentials: https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html\n\n__ Boto3Credentials_\n\nNow the storage should be configured and working. Editors should be able to\nupload images and documents in Wagtail admin.\n\nSet up ``wagtail-storages``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nInstall ``wagtail-storages`` itself.\n\n.. code:: sh\n\n   pip install wagtail-storages\n\n\nAdd ``wagtail_storages`` to your ``INSTALLED_APPS`` in your settings file.\n\n.. code:: python\n\n   # settings.py\n\n   INSTALLED_APPS = [\n       # ... Other apps\n       \"wagtail_storages\",\n       # ... Other apps\n   ]\n\nWith that, ACLs should be updated if documents are moved to\nprivate collections.\n\nIf you already have files in your S3 bucket, run ``django-admin\nfix_document_acls`` to make sure all documents have the right ACLs set up.\n\nSet up front-end cache invalidation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf edge cache is set up on the custom domain (``media.llamasavers.com``) you\nshould set up the CDN purging to avoid having outdated or private documents\navailable to users via the CDN endpoint. For example, for Cloudflare you want\nto use a configuration similar to the one below:\n\n.. code:: python\n\n   # settings.py\n   import os\n\n\n   if \"S3_CACHE_CLOUDFLARE_TOKEN\" in os.environ:\n        WAGTAIL_STORAGES_DOCUMENTS_FRONTENDCACHE = {\n            \"default\": {\n                \"BACKEND\": \"wagtail.contrib.frontend_cache.backends.CloudflareBackend\",\n                \"EMAIL\": os.environ[\"S3_CACHE_CLOUDFLARE_EMAIL\"],\n                \"TOKEN\": os.environ[\"S3_CACHE_CLOUDFLARE_TOKEN\"],\n                \"ZONEID\": os.environ[\"S3_CACHE_CLOUDFLARE_ZONEID\"],\n            },\n        }\n\nThen set the following environment variables:\n\n* ``S3_CACHE_CLOUDFLARE_EMAIL``\n* ``S3_CACHE_CLOUDFLARE_TOKEN``\n* ``S3_CACHE_CLOUDFLARE_ZONEID``\n\nOnce set up, the documents will be purged from cache when they are\nmodified or their privacy settings have changed.\n\nThe setting follows configuration format of the front-end cache invalidator\nconfiguration in Wagtail. See the details `here`__. The only difference is\nthe setting name, which for wagtail-storages is\n``WAGTAIL_STORAGES_DOCUMENTS_FRONTENDCACHE``.\n\n.. _WagtailFrontEndCache: https://docs.wagtail.io/en/stable/reference/contrib/frontendcache.html\n\n__ WagtailFrontEndCache_\n\nAll done!\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/torchbox/wagtail-storages", "keywords": "wagtail,s3,django,storages,storage", "license": "BSD 2-Clause License", "maintainer": "", "maintainer_email": "", "name": "wagtail-storages", "package_url": "https://pypi.org/project/wagtail-storages/", "platform": "", "project_url": "https://pypi.org/project/wagtail-storages/", "project_urls": {"Homepage": "https://github.com/torchbox/wagtail-storages"}, "release_url": "https://pypi.org/project/wagtail-storages/0.0.4/", "requires_dist": ["Wagtail (<3,>=2)", "django-storages[boto3] (<2)", "coverage (==5.0.3) ; extra == 'testing'", "factory-boy (==2.12.0) ; extra == 'testing'", "moto (==1.3.14) ; extra == 'testing'", "black (==19.10b0) ; extra == 'testing'", "isort ; extra == 'testing'", "flake8 ; extra == 'testing'"], "requires_python": ">=3.5", "summary": "Use AWS S3 with private documents in Wagtail.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://github.com/torchbox/wagtail-storages/raw/master/logo.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7f02b34eefff5466e70ad4c43b89ab9525e3784/68747470733a2f2f6769746875622e636f6d2f746f726368626f782f7761677461696c2d73746f72616765732f7261772f6d61737465722f6c6f676f2e706e67\">\n<div id=\"wagtail-storages\">\n<h2>wagtail-storages</h2>\n<a href=\"https://pypi.org/project/wagtail-storages/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/wagtail-storages.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a4479fb7ceb736247e20fb307b89aa9d807e235e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7761677461696c2d73746f72616765732e737667\"></a>\n<a href=\"https://pypi.org/project/wagtail-storages/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/wagtail-storages.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ea71d6f1bf016029c8ab43412edae13fe6e1977/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7761677461696c2d73746f72616765732e737667\"></a>\n<a href=\"https://travis-ci.org/torchbox/wagtail-storages\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/torchbox/wagtail-storages.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43f1c4a1f6fdaf9bfc1b6c62fd4b6ff2d70e7ee9/68747470733a2f2f7472617669732d63692e6f72672f746f726368626f782f7761677461696c2d73746f72616765732e7376673f6272616e63683d6d6173746572\"></a>\n<p>This package fills the missing gap in using AWS S3 together with Wagtail. This\npackage will be useful if you want to:</p>\n<ul>\n<li><p>Use AWS S3 bucket for hosting Wagtail documents.</p>\n</li>\n<li><p>Put the bucket behind the CDN so that the bucket is not called directly each\ntime.</p>\n</li>\n<li><p>Allow editors to use privacy controls on documents, whilst using CDN.</p>\n</li>\n<li><p>Avoid time-outs because of downloads being proxied through Wagtail views.</p>\n<p><em>Note: you cannot use the document</em> <a href=\"https://docs.wagtail.io/en/stable/advanced_topics/settings.html#wagtaildocs-serve-method\" rel=\"nofollow\">redirect view</a> <em>if you want your documents to be truly private.</em></p>\n</li>\n</ul>\n<div id=\"what-does-it-do\">\n<h3>What does it do?</h3>\n<p>The package is a collection of signal handlers and Wagtail hooks.</p>\n<ul>\n<li>Sets per-object ACLs on S3 whenever privacy settings change on a Wagtail\ndocument.</li>\n<li>Replaces the current document view with a redirect. Either to a signed S3\nbucket URL for private documents or public custom domain URL for public ones.</li>\n<li>Purges CDN for documents that have changed.</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li><tt><span class=\"pre\">django-storages</span></tt> with the <tt>S3Boto3Storage</tt> storage backend configured in\na Wagtail project.</li>\n<li>CDN supported by Wagtail front-end cache invalidator.</li>\n</ul>\n</div>\n<div id=\"management-commands\">\n<h3>Management commands</h3>\n<h3 id=\"django-admin-fix-document-acls\"><span class=\"section-subtitle\"><tt><span class=\"pre\">django-admin</span> fix_document_acls</tt></span></h3>\n<p>The package provider a management command that sets all the documents\u2019 ACLs\naccording to the their collection permissions. This must be called if there had\nbeen documents in a bucket before the package was used to make sure the ACLs in\nthe bucket are correct.</p>\n</div>\n<div id=\"settings\">\n<h3>Settings</h3>\n<div id=\"wagtail-storages-documents-frontendcache\">\n<h4>WAGTAIL_STORAGES_DOCUMENTS_FRONTENDCACHE</h4>\n<p>Using the same format as Wagtail\u2019s <tt>WAGTAILFRONTENDCACHE</tt> setting, but to be\nonly used by the wagtail-storages to purge the documents. If not set, the purge\nwon\u2019t happen. <a href=\"https://docs.wagtail.io/en/stable/reference/contrib/frontendcache.html\" rel=\"nofollow\">Read more on how to format it in the Wagtail docs</a>,\ne.g.</p>\n<pre><span class=\"n\">WAGTAIL_STORAGES_DOCUMENTS_FRONTENDCACHE</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'cloudfront'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'wagtail.contrib.frontend_cache.backends.CloudfrontBackend'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'DISTRIBUTION_ID'</span><span class=\"p\">:</span> <span class=\"s1\">'your-distribution-id'</span><span class=\"p\">,</span>\n     <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"wagtail-storages-document-hook-order\">\n<h4>WAGTAIL_STORAGES_DOCUMENT_HOOK_ORDER</h4>\n<p>Set a custom order for the document hook order. It\u2019s set to 100 by default.\nIt\u2019s important that it runs after any of your hooks since it returns a\nresponse, e.g.</p>\n<pre><span class=\"n\">WAGTAIL_STORAGES_DOCUMENT_HOOK_ORDER</span> <span class=\"o\">=</span> <span class=\"mi\">900</span>\n</pre>\n</div>\n</div>\n<div id=\"recommended-s3-setup-with-wagtail\">\n<h3>Recommended S3 setup with Wagtail</h3>\n<p>The following guide explains the recommended setup for using S3 with Wagtail.\nThis guide assumes that:</p>\n<ul>\n<li>You serve your main website at <tt>llamasavers.com</tt> (replace\n<tt>llamasavers.com</tt> with your actual domain name).</li>\n<li>Your S3 bucket is called <tt>media.llamasavers.com</tt> and you host it from that\ndomain name.</li>\n<li>You are using CDN on that domain, this guide will assume Cloudflare.</li>\n</ul>\n<div id=\"set-up-s3-bucket\">\n<h4>Set up S3 bucket</h4>\n<p>First, set up your S3 bucket. It must be configured to:</p>\n<ul>\n<li>Have a name that matches the domain name, e.g. <tt>media.llamasavers.com</tt>.</li>\n<li><dl>\n<dt>Allow the user to perform the following actions on the bucket:</dt>\n<dd><ul>\n<li><tt>s3:ListBucket</tt></li>\n<li><tt>s3:GetBucketLocation</tt></li>\n<li><tt>s3:ListBucketMultipartUploads</tt></li>\n<li><tt>s3:ListBucketVersions</tt></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Allow the user to perform all the actions (<tt>s3:*</tt>) on the objects within the\nbucket.</li>\n<li>Allow the internet traffic to access Wagtail image renditions (<tt>images/*</tt>).</li>\n</ul>\n<p>The user permissions can be set in the IAM or via a bucket policy. See example\nof all of those points being achieved in the bucket policy below.</p>\n<pre><span class=\"p\">{</span>\n     <span class=\"nt\">\"Version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2012-10-17\"</span><span class=\"p\">,</span>\n     <span class=\"nt\">\"Statement\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"p\">{</span>\n             <span class=\"nt\">\"Sid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"PublicGetObject\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Effect\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Principal\"</span><span class=\"p\">:</span> <span class=\"s2\">\"*\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"s3:GetObject\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:s3:::[BUCKET NAME]/images/*\"</span>\n         <span class=\"p\">},</span>\n         <span class=\"p\">{</span>\n             <span class=\"nt\">\"Sid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"AllowUserManageBucket\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Effect\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Principal\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                 <span class=\"nt\">\"AWS\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:iam::[USER ARN]\"</span>\n             <span class=\"p\">},</span>\n             <span class=\"nt\">\"Action\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                 <span class=\"s2\">\"s3:ListBucket\"</span><span class=\"p\">,</span>\n                 <span class=\"s2\">\"s3:GetBucketLocation\"</span><span class=\"p\">,</span>\n                 <span class=\"s2\">\"s3:ListBucketMultipartUploads\"</span><span class=\"p\">,</span>\n                 <span class=\"s2\">\"s3:ListBucketVersions\"</span>\n             <span class=\"p\">],</span>\n             <span class=\"nt\">\"Resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:s3:::[BUCKET NAME]\"</span>\n         <span class=\"p\">},</span>\n         <span class=\"p\">{</span>\n             <span class=\"nt\">\"Sid\"</span><span class=\"p\">:</span> <span class=\"s2\">\"AllowUserManageBucketObjects\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Effect\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Principal\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                 <span class=\"nt\">\"AWS\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:iam::[USER ARN]\"</span>\n             <span class=\"p\">},</span>\n             <span class=\"nt\">\"Action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"s3:*\"</span><span class=\"p\">,</span>\n             <span class=\"nt\">\"Resource\"</span><span class=\"p\">:</span> <span class=\"s2\">\"arn:aws:s3:::[BUCKET NAME]/*\"</span>\n         <span class=\"p\">}</span>\n     <span class=\"p\">]</span>\n <span class=\"p\">}</span>\n</pre>\n<p>After the S3 bucket is set up on AWS, you can configure the Wagtail project to\nuse it.</p>\n</div>\n<div id=\"set-up-django-storages\">\n<h4>Set up django-storages</h4>\n<p>Install <tt><span class=\"pre\">django-storages</span></tt> and <tt>boto3</tt>.</p>\n<pre>pip install django-storages<span class=\"o\">[</span>boto3<span class=\"o\">]</span>\n</pre>\n<p>Set up your S3 bucket with <tt><span class=\"pre\">django-storages</span></tt>. The following code allows\nconfiguration via environment variables.</p>\n<pre><span class=\"c1\"># settings.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n\n<span class=\"k\">if</span> <span class=\"s2\">\"AWS_STORAGE_BUCKET_NAME\"</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Add django-storages to the installed apps</span>\n    <span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">+</span> <span class=\"p\">[</span><span class=\"s2\">\"storages\"</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># https://docs.djangoproject.com/en/stable/ref/settings/#default-file-storage</span>\n    <span class=\"n\">DEFAULT_FILE_STORAGE</span> <span class=\"o\">=</span> <span class=\"s2\">\"storages.backends.s3boto3.S3Boto3Storage\"</span>\n\n    <span class=\"n\">AWS_STORAGE_BUCKET_NAME</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"AWS_STORAGE_BUCKET_NAME\"</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Disables signing of the S3 objects' URLs. When set to True it</span>\n    <span class=\"c1\"># will append authorization querystring to each URL.</span>\n    <span class=\"n\">AWS_QUERYSTRING_AUTH</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"c1\"># Do not allow overriding files on S3 as per Wagtail docs recommendation:</span>\n    <span class=\"c1\"># https://docs.wagtail.io/en/stable/advanced_topics/deploying.html#cloud-storage</span>\n    <span class=\"c1\"># Not having this setting may have consequences such as losing files.</span>\n    <span class=\"n\">AWS_S3_FILE_OVERWRITE</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"c1\"># Default ACL for new files should be \"private\" - not accessible to the</span>\n    <span class=\"c1\"># public. Images should be made available to public via the bucket policy,</span>\n    <span class=\"c1\"># where the documents should use wagtail-storages.</span>\n    <span class=\"n\">AWS_DEFAULT_ACL</span> <span class=\"o\">=</span> <span class=\"s2\">\"private\"</span>\n\n    <span class=\"c1\"># We generally use this setting in production to put the S3 bucket</span>\n    <span class=\"c1\"># behind a CDN using a custom domain, e.g. media.llamasavers.com.</span>\n    <span class=\"c1\"># https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html#cloudfront</span>\n    <span class=\"k\">if</span> <span class=\"s2\">\"AWS_S3_CUSTOM_DOMAIN\"</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">:</span>\n        <span class=\"n\">AWS_S3_CUSTOM_DOMAIN</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"AWS_S3_CUSTOM_DOMAIN\"</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># When signing URLs is enabled, the region must be set.</span>\n    <span class=\"c1\"># The global S3 endpoint does not seem to support signed URLS.</span>\n    <span class=\"c1\"># Set this only if you will be using signed URLs.</span>\n    <span class=\"k\">if</span> <span class=\"s2\">\"AWS_S3_REGION_NAME\"</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">:</span>\n        <span class=\"n\">AWS_S3_REGION_NAME</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"AWS_S3_REGION_NAME\"</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># This settings lets you force using http or https protocol when generating</span>\n    <span class=\"c1\"># the URLs to the files. Set https as default.</span>\n    <span class=\"c1\"># https://github.com/jschneier/django-storages/blob/10d1929de5e0318dbd63d715db4bebc9a42257b5/storages/backends/s3boto3.py#L217</span>\n    <span class=\"n\">AWS_S3_URL_PROTOCOL</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"AWS_S3_URL_PROTOCOL\"</span><span class=\"p\">,</span> <span class=\"s2\">\"https:\"</span><span class=\"p\">)</span>\n</pre>\n<p>If you use the above snippet, you can set the following environment variables:</p>\n<ul>\n<li><tt>AWS_STORAGE_BUCKET_NAME</tt> - set to <tt>media.llamasavers.com</tt>.</li>\n<li><tt>AWS_S3_CUSTOM_DOMAIN</tt> - set to <tt>media.llamasavers.com</tt>.</li>\n<li><tt>AWS_S3_REGION_NAME</tt> - set to your AWS region name, e.g. <tt><span class=\"pre\">eu-west-2</span></tt>.</li>\n</ul>\n<p>You can use one of the methods to provide <a href=\"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html\" rel=\"nofollow\">boto3 with credentials</a>. We\nsuggest you stick with the environment variables. To do that, you need to set\nthe following variables:</p>\n<ul>\n<li><tt>AWS_ACCESS_KEY_ID</tt></li>\n<li><tt>AWS_SECRET_ACCESS_KEY</tt></li>\n</ul>\n<p>Now the storage should be configured and working. Editors should be able to\nupload images and documents in Wagtail admin.</p>\n</div>\n<div id=\"set-up-wagtail-storages\">\n<h4>Set up <tt><span class=\"pre\">wagtail-storages</span></tt></h4>\n<p>Install <tt><span class=\"pre\">wagtail-storages</span></tt> itself.</p>\n<pre>pip install wagtail-storages\n</pre>\n<p>Add <tt>wagtail_storages</tt> to your <tt>INSTALLED_APPS</tt> in your settings file.</p>\n<pre><span class=\"c1\"># settings.py</span>\n\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ... Other apps</span>\n    <span class=\"s2\">\"wagtail_storages\"</span><span class=\"p\">,</span>\n    <span class=\"c1\"># ... Other apps</span>\n<span class=\"p\">]</span>\n</pre>\n<p>With that, ACLs should be updated if documents are moved to\nprivate collections.</p>\n<p>If you already have files in your S3 bucket, run <tt><span class=\"pre\">django-admin</span>\nfix_document_acls</tt> to make sure all documents have the right ACLs set up.</p>\n</div>\n<div id=\"set-up-front-end-cache-invalidation\">\n<h4>Set up front-end cache invalidation</h4>\n<p>If edge cache is set up on the custom domain (<tt>media.llamasavers.com</tt>) you\nshould set up the CDN purging to avoid having outdated or private documents\navailable to users via the CDN endpoint. For example, for Cloudflare you want\nto use a configuration similar to the one below:</p>\n<pre><span class=\"c1\"># settings.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n\n<span class=\"k\">if</span> <span class=\"s2\">\"S3_CACHE_CLOUDFLARE_TOKEN\"</span> <span class=\"ow\">in</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">:</span>\n     <span class=\"n\">WAGTAIL_STORAGES_DOCUMENTS_FRONTENDCACHE</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n         <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n             <span class=\"s2\">\"BACKEND\"</span><span class=\"p\">:</span> <span class=\"s2\">\"wagtail.contrib.frontend_cache.backends.CloudflareBackend\"</span><span class=\"p\">,</span>\n             <span class=\"s2\">\"EMAIL\"</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"S3_CACHE_CLOUDFLARE_EMAIL\"</span><span class=\"p\">],</span>\n             <span class=\"s2\">\"TOKEN\"</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"S3_CACHE_CLOUDFLARE_TOKEN\"</span><span class=\"p\">],</span>\n             <span class=\"s2\">\"ZONEID\"</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"s2\">\"S3_CACHE_CLOUDFLARE_ZONEID\"</span><span class=\"p\">],</span>\n         <span class=\"p\">},</span>\n     <span class=\"p\">}</span>\n</pre>\n<p>Then set the following environment variables:</p>\n<ul>\n<li><tt>S3_CACHE_CLOUDFLARE_EMAIL</tt></li>\n<li><tt>S3_CACHE_CLOUDFLARE_TOKEN</tt></li>\n<li><tt>S3_CACHE_CLOUDFLARE_ZONEID</tt></li>\n</ul>\n<p>Once set up, the documents will be purged from cache when they are\nmodified or their privacy settings have changed.</p>\n<p>The setting follows configuration format of the front-end cache invalidator\nconfiguration in Wagtail. See the details <a href=\"https://docs.wagtail.io/en/stable/reference/contrib/frontendcache.html\" rel=\"nofollow\">here</a>. The only difference is\nthe setting name, which for wagtail-storages is\n<tt>WAGTAIL_STORAGES_DOCUMENTS_FRONTENDCACHE</tt>.</p>\n<p>All done!</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6618803, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "8a24d13fa0ae71d5e4cb572535a1918f", "sha256": "fb4ab62f48fa637ec4b1f6964b2d163bedf164f52c74a53c1e796a488a0c26d0"}, "downloads": -1, "filename": "wagtail_storages-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8a24d13fa0ae71d5e4cb572535a1918f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15557, "upload_time": "2020-01-15T17:00:49", "upload_time_iso_8601": "2020-01-15T17:00:49.690376Z", "url": "https://files.pythonhosted.org/packages/08/bf/027f4a27c4b13c196de35028fc4682e8e2e5bb12e297ddcfe54505917085/wagtail_storages-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bbe31e4e760adb3c20903daf7d0aee0", "sha256": "cfa040bcbb55672210f13ba613f828e2a5e8d91f3fdd086f3154e3cc13c8cda1"}, "downloads": -1, "filename": "wagtail-storages-0.0.1.tar.gz", "has_sig": false, "md5_digest": "1bbe31e4e760adb3c20903daf7d0aee0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 11087, "upload_time": "2020-01-15T17:00:51", "upload_time_iso_8601": "2020-01-15T17:00:51.636079Z", "url": "https://files.pythonhosted.org/packages/4c/5d/2482ae68a5655e8297e6859fde0c70a7e77ec3ca7d3c2f4d6be984ed0174/wagtail-storages-0.0.1.tar.gz", "yanked": false}], "0.0.1a0": [{"comment_text": "", "digests": {"md5": "7a8f1cbb7a54d6f8766a1f4c79b16342", "sha256": "428ce78d08795db1bf293d07bf08ffc0a252aecf63835a8d3c286135ca73126b"}, "downloads": -1, "filename": "wagtail_storages-0.0.1a0-py3-none-any.whl", "has_sig": false, "md5_digest": "7a8f1cbb7a54d6f8766a1f4c79b16342", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5812, "upload_time": "2018-08-29T23:13:25", "upload_time_iso_8601": "2018-08-29T23:13:25.773248Z", "url": "https://files.pythonhosted.org/packages/fa/72/29771d4fb70b7889d5c9f5e6b14c98a3cdeaf7afa09ae67dbe58bbdcf97d/wagtail_storages-0.0.1a0-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0524cfaea6ce9b25ad0f0204c2b37d78", "sha256": "b63cfa0dbfc57533991803100fa2f3ed86be06e8747ecba94f65026501c918d5"}, "downloads": -1, "filename": "wagtail_storages-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0524cfaea6ce9b25ad0f0204c2b37d78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 8700, "upload_time": "2020-01-16T13:17:04", "upload_time_iso_8601": "2020-01-16T13:17:04.058801Z", "url": "https://files.pythonhosted.org/packages/d2/77/80190569aa20e73b6d087eaa0200220953fa9b7b5548e9eb9b4cac289862/wagtail_storages-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2aa361a817e676480865c25bba1e9dfc", "sha256": "30049de77a27b3ca715d12decffe447617d1e12210889eb00fe3b897b779bcff"}, "downloads": -1, "filename": "wagtail-storages-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2aa361a817e676480865c25bba1e9dfc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6583, "upload_time": "2020-01-16T13:17:05", "upload_time_iso_8601": "2020-01-16T13:17:05.971342Z", "url": "https://files.pythonhosted.org/packages/01/1d/d49f25891716179f8a3ecc04e3be400fd75a298eb881669f15bf0b06a785/wagtail-storages-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6184edc2460901f99d87a8cb0dbc92e4", "sha256": "0c87b33e8e63a26c713c3d2ed86e00fc971db6901edb8dbdaa11e6108a589f5a"}, "downloads": -1, "filename": "wagtail_storages-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6184edc2460901f99d87a8cb0dbc92e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11161, "upload_time": "2020-01-21T12:31:34", "upload_time_iso_8601": "2020-01-21T12:31:34.021956Z", "url": "https://files.pythonhosted.org/packages/53/c3/6d17fac50310ad14def60461ac3b6f8df3381c8a5946b55d3fa0399c8d34/wagtail_storages-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8cd6bcfe49a2bba6ed0b8db517df225", "sha256": "cb0f95970dd1b194e93887c6228dbf37f0efa94e03b4ef430b992e0d071cbc44"}, "downloads": -1, "filename": "wagtail-storages-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f8cd6bcfe49a2bba6ed0b8db517df225", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13146, "upload_time": "2020-01-21T12:31:35", "upload_time_iso_8601": "2020-01-21T12:31:35.570919Z", "url": "https://files.pythonhosted.org/packages/45/ed/7a9db1f34198379ec65111d124fa2d50a603376b59076f837c031f23eabc/wagtail-storages-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "c4052a1af71372ba380e76113a324250", "sha256": "bd7d2c02acf71cab6fc16b2ee7ee847d58acb309eeb9b8ba0794a060551a6922"}, "downloads": -1, "filename": "wagtail_storages-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c4052a1af71372ba380e76113a324250", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11379, "upload_time": "2020-02-12T21:18:42", "upload_time_iso_8601": "2020-02-12T21:18:42.676836Z", "url": "https://files.pythonhosted.org/packages/b0/1a/26fa3c191333b73afa7568346788644110dee8dad05deab307f06532da5e/wagtail_storages-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a540abd922137d03820c4f2b63c98d31", "sha256": "823771dad39353a519be5d53907084ca0649569a57fc40792573f0d90e4355b9"}, "downloads": -1, "filename": "wagtail-storages-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a540abd922137d03820c4f2b63c98d31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14308, "upload_time": "2020-02-12T21:18:44", "upload_time_iso_8601": "2020-02-12T21:18:44.291537Z", "url": "https://files.pythonhosted.org/packages/b0/71/63cbd20c82017bc528e91fc5e42badb2d2db1873e1e9b3733fe7e86484e1/wagtail-storages-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4052a1af71372ba380e76113a324250", "sha256": "bd7d2c02acf71cab6fc16b2ee7ee847d58acb309eeb9b8ba0794a060551a6922"}, "downloads": -1, "filename": "wagtail_storages-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c4052a1af71372ba380e76113a324250", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11379, "upload_time": "2020-02-12T21:18:42", "upload_time_iso_8601": "2020-02-12T21:18:42.676836Z", "url": "https://files.pythonhosted.org/packages/b0/1a/26fa3c191333b73afa7568346788644110dee8dad05deab307f06532da5e/wagtail_storages-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a540abd922137d03820c4f2b63c98d31", "sha256": "823771dad39353a519be5d53907084ca0649569a57fc40792573f0d90e4355b9"}, "downloads": -1, "filename": "wagtail-storages-0.0.4.tar.gz", "has_sig": false, "md5_digest": "a540abd922137d03820c4f2b63c98d31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 14308, "upload_time": "2020-02-12T21:18:44", "upload_time_iso_8601": "2020-02-12T21:18:44.291537Z", "url": "https://files.pythonhosted.org/packages/b0/71/63cbd20c82017bc528e91fc5e42badb2d2db1873e1e9b3733fe7e86484e1/wagtail-storages-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:51 2020"}