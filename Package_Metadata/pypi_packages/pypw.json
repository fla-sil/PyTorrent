{"info": {"author": "Kasper Jacobsen", "author_email": "k@mackwerk.dk", "bugtrack_url": null, "classifiers": [], "description": "PyPW\n====\n\nGenerates a random password. Can be used as a stand-alone CLI program or\nimported into projects.\n\nInstallation:\n~~~~~~~~~~~~~\n\n``python setup.py install``\n\n``pip install pypw``\n\nUsage:\n~~~~~~\n\n``pypw -l 20`` - Generate a random password that is 20 characters long\n``pypw -s \"TurnTh1sIntoMyP4ssW()RD\" --no-mixed`` - Generate a password\nfrom -s without mixed casing ``pypw -h`` - Display the help screen\n\nAPI:\n~~~~\n\n::\n\n    pypw.RandomPassword(sequence=None, mixedCases=True)\n        sequence(str): The string you want to create a password from\n        mixedCases(bool): Generate mixed casing on letters\n\n        returns: <pypw.RandomPassword instance>\n\n        randomBool()\n            returns: True/False\n\n        randCase(sequence)\n            - Randomizes the casing on a string or list\n\n            sequence(str/list): The string to randomize casing on\n\n            returns: List of characters\n\n        generateRandomPW(length=None, alpha=True, digits=True, symbols=True)\n            - Generate a random password chosen by PyPW\n\n            length(int): Defines how many characters you want in the generated password\n            alpha(bool): Choose to use alphabetical characters in randomly generated password or not\n            digits(bool): Choose to use digits (0-9) in randomly generated password or not\n            symbols(bool): Choose to use symbols in randomly generated password or not\n\n            returns: Dict with result, score, ranking and phonetic\n\n        generatePW()\n            - Generate password from the arguments passed to RandomPassword\n\n            returns: Dict with result, score, ranking and phonetic\n\n        phonetic(sequence)\n            - Generate a 'phrase' to (hopefully) help the user remember the password. (Not guaranteed to make sense!)\n\n            sequence(str): The string you want to generate a phonetic phrase on\n\n            returns: Str\n\n        strength(sequence)\n            - Calculate the strength of the password based on length, digits, symbols and casing\n\n            returns: Tuple", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Dinoshauer/PyPW", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pypw", "package_url": "https://pypi.org/project/pypw/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pypw/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Dinoshauer/PyPW"}, "release_url": "https://pypi.org/project/pypw/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Generates a random password.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Generates a random password. Can be used as a stand-alone CLI program or\nimported into projects.</p>\n<div id=\"installation\">\n<h2>Installation:</h2>\n<p><tt>python setup.py install</tt></p>\n<p><tt>pip install pypw</tt></p>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<p><tt>pypw <span class=\"pre\">-l</span> 20</tt> - Generate a random password that is 20 characters long\n<tt>pypw <span class=\"pre\">-s</span> <span class=\"pre\">\"TurnTh1sIntoMyP4ssW()RD\"</span> <span class=\"pre\">--no-mixed</span></tt> - Generate a password\nfrom -s without mixed casing <tt>pypw <span class=\"pre\">-h</span></tt> - Display the help screen</p>\n</div>\n<div id=\"api\">\n<h2>API:</h2>\n<pre>pypw.RandomPassword(sequence=None, mixedCases=True)\n    sequence(str): The string you want to create a password from\n    mixedCases(bool): Generate mixed casing on letters\n\n    returns: &lt;pypw.RandomPassword instance&gt;\n\n    randomBool()\n        returns: True/False\n\n    randCase(sequence)\n        - Randomizes the casing on a string or list\n\n        sequence(str/list): The string to randomize casing on\n\n        returns: List of characters\n\n    generateRandomPW(length=None, alpha=True, digits=True, symbols=True)\n        - Generate a random password chosen by PyPW\n\n        length(int): Defines how many characters you want in the generated password\n        alpha(bool): Choose to use alphabetical characters in randomly generated password or not\n        digits(bool): Choose to use digits (0-9) in randomly generated password or not\n        symbols(bool): Choose to use symbols in randomly generated password or not\n\n        returns: Dict with result, score, ranking and phonetic\n\n    generatePW()\n        - Generate password from the arguments passed to RandomPassword\n\n        returns: Dict with result, score, ranking and phonetic\n\n    phonetic(sequence)\n        - Generate a 'phrase' to (hopefully) help the user remember the password. (Not guaranteed to make sense!)\n\n        sequence(str): The string you want to generate a phonetic phrase on\n\n        returns: Str\n\n    strength(sequence)\n        - Calculate the strength of the password based on length, digits, symbols and casing\n\n        returns: Tuple\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1416539, "releases": {"0.1.6": [], "1.0.0": [{"comment_text": "", "digests": {"md5": "d42f5a3749db1f5f4b24564235695ed0", "sha256": "e276f0e481a4e2f3da40f2558fc5c5621396202590a6b8e3479c4c0c8065139d"}, "downloads": -1, "filename": "pypw-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d42f5a3749db1f5f4b24564235695ed0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3859, "upload_time": "2015-02-09T18:34:38", "upload_time_iso_8601": "2015-02-09T18:34:38.557490Z", "url": "https://files.pythonhosted.org/packages/52/b3/797726171fb253dd617fee53d547a89536238ee7cb07a366071f46a4ef9e/pypw-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d42f5a3749db1f5f4b24564235695ed0", "sha256": "e276f0e481a4e2f3da40f2558fc5c5621396202590a6b8e3479c4c0c8065139d"}, "downloads": -1, "filename": "pypw-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d42f5a3749db1f5f4b24564235695ed0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3859, "upload_time": "2015-02-09T18:34:38", "upload_time_iso_8601": "2015-02-09T18:34:38.557490Z", "url": "https://files.pythonhosted.org/packages/52/b3/797726171fb253dd617fee53d547a89536238ee7cb07a366071f46a4ef9e/pypw-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:57 2020"}