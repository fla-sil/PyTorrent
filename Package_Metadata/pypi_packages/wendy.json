{"info": {"author": "Jo Bovy", "author_email": "bovy@astro.utoronto.ca", "bugtrack_url": null, "classifiers": [], "description": "# wendy\n\nA one-dimensional gravitational N-body code. \n\n\n## Overview\n\n``wendy`` solves the one-dimensional gravitational N-body problem to machine precision with an efficient algorithm [O(log N) / particle-collision]. Alternatively, it can solve the problem with approximate integration, but with exact forces.\n\n## Author\n\nJo Bovy (University of Toronto): bovy - at - astro - dot - utoronto - dot - ca\n\n## Installation\n\nInstall the latest release using\n```\npip install wendy\n```\nor clone/fork/download the repository and install using\n```\nsudo python setup.py install\n```\nor locally using\n```\npython setup.py install --user\n```\n\nThe behavior of the parallel sorting algorithm used when setting ``sort='parallel'`` in the approximate version of the N-body code (``approx=True``) is controlled by a few compilation-time variables: ``PARALLEL_SERIAL_SORT_SWITCH``, which sets the length of an array below which the serial sort is used, ``PARALLEL_SERIAL_MERGE_SWITCH``, which sets the length of an array below which a serial merge is used (as part of the ``mergesort`` sorting algorithm used), and ``PARALLEL_SORT_NUM_THREADS``, the number of threads used in the parallel sorting algorithm. By default, these are set to ``PARALLEL_SERIAL_MERGE_SWITCH=10000``, ``PARALLEL_SERIAL_MERGE_SWITCH=50000``, and ``PARALLEL_SORT_NUM_THREADS=32``, which appear to work well. Significant speed-ups can be obtained by optimizing these for your system and specific problem. They can be set to different values by running, e.g.,\n```\nexport CFLAGS=\"$CFLAGS -D PARALLEL_SERIAL_SORT_SWITCH=10 -D PARALLEL_SERIAL_MERGE_SWITCH=10 -D PARALLEL_SORT_NUM_THREADS=2\"\n```\nbefore compiling the code (if you are trying to change them, make sure to force a re-compilation by removing the ``build/`` directory).\n\n## Usage\n\nUse ``wendy.nbody`` to initialize a generator object for initial *(x,v)* with masses *m*. The generator then returns the state of the system at equally-spaced time intervals:\n```\ng= wendy.nbody(x,v,m,0.05) # delta t = 0.05\nnext_x, next_v= next(g) # at t=0.05\nnext_x, next_v= next(g) # at t=0.10\n...\n```\nThe generator initialization with ``wendy.nbody`` has options to (a) solve the problem exactly or not using ``approx=``, (b) include an external harmonic oscillator potential ``omega^2 x^2 / 2`` with ``omega=`` (both for exact and approximate solutions), and (c) include an arbitrary external force ``F(x,t)`` (using ``ext_force=``, only for the approximate solution).\n\n## Examples\n\n\n* Phase mixing and violent relaxation in one dimension: [example notebook](examples/PhaseMixingViolentRelaxation.ipynb) (run locally to see movies, or view on [nbviewer](http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/PhaseMixingViolentRelaxation.ipynb?flush_cache=true))\n\n<img src=\"https://cloud.githubusercontent.com/assets/1044876/26030657/e29c9efe-3826-11e7-8419-7bf96d565569.gif\" width=\"400\"><img src=\"https://cloud.githubusercontent.com/assets/1044876/26030672/1fafa9bc-3827-11e7-9167-16f10bb40b59.gif\" width=\"400\">\n\n* A self-gravitating, sech<sup>2</sup> disk: [example notebook](examples/SelfGravitatingSech2Disk.ipynb) (run locally to see movies, or view on [nbviewer](http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/SelfGravitatingSech2Disk.ipynb?flush_cache=true))\n\n<img src=\"https://user-images.githubusercontent.com/1044876/26942002-7dce9644-4c4e-11e7-90d0-43beddfd0dd9.gif\" width=\"400\"><img src=\"https://cloud.githubusercontent.com/assets/1044876/26089414/850dd7a2-39cb-11e7-9beb-73dbce2c6c4b.gif\" width=\"400\">\n\n* The _Gaia_ phase-space spiral: [example notebook](examples/GaiaPhaseSpaceSpiral.ipynb) (run locally to see movies, or view on [nbviewer](http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/GaiaPhaseSpaceSpiral.ipynb?flush_cache=true))\n\n<img src=\"https://user-images.githubusercontent.com/1044876/63739608-d5705a00-c85b-11e9-9e75-fbe106294331.gif\" width=\"400\"><img src=\"https://user-images.githubusercontent.com/1044876/63739620-e28d4900-c85b-11e9-88d9-ee284bd7ad83.gif\" width=\"400\">\n\n* Adiabatic contraction: [example notebook](examples/AdiabaticContraction.ipynb) (run locally to see movies, or view on [nbviewer](http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/AdiabaticContraction.ipynb?flush_cache=true))\n\n<img src=\"https://user-images.githubusercontent.com/1044876/26941638-2b4eed8e-4c4d-11e7-9804-a63b681b86e6.gif\" width=\"400\"><img src=\"https://user-images.githubusercontent.com/1044876/26941809-d7393b22-4c4d-11e7-97dd-cd3b259aefa7.gif\" width=\"400\">\n\n* Adiabatic vs. non-adiabatic energy injection for an exponential disk: [example notebook](examples/AdiabaticVsNonAdiabatic.ipynb) (run locally to see movies, or view on [nbviewer](http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/AdiabaticVsNonAdiabatic.ipynb?flush_cache=true))\n\n<img src=\"https://user-images.githubusercontent.com/1044876/27014815-3d5fe2de-4ece-11e7-953f-ced11d4993d2.gif\" width=\"400\"><img src=\"https://user-images.githubusercontent.com/1044876/27014825-648498f0-4ece-11e7-8360-cf1f04e13cba.gif\" width=\"400\">\n\n* ``wendy`` scaling with particle number: [example notebook](examples/WendyScaling.ipynb) (view on [nbviewer](http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/WendyScaling.ipynb?flush_cache=true))", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jobovy/wendy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wendy", "package_url": "https://pypi.org/project/wendy/", "platform": "", "project_url": "https://pypi.org/project/wendy/", "project_urls": {"Homepage": "http://github.com/jobovy/wendy"}, "release_url": "https://pypi.org/project/wendy/0.2/", "requires_dist": null, "requires_python": "", "summary": "One-dimensional gravitational N-body code", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>wendy</h1>\n<p>A one-dimensional gravitational N-body code.</p>\n<h2>Overview</h2>\n<p><code>wendy</code> solves the one-dimensional gravitational N-body problem to machine precision with an efficient algorithm [O(log N) / particle-collision]. Alternatively, it can solve the problem with approximate integration, but with exact forces.</p>\n<h2>Author</h2>\n<p>Jo Bovy (University of Toronto): bovy - at - astro - dot - utoronto - dot - ca</p>\n<h2>Installation</h2>\n<p>Install the latest release using</p>\n<pre><code>pip install wendy\n</code></pre>\n<p>or clone/fork/download the repository and install using</p>\n<pre><code>sudo python setup.py install\n</code></pre>\n<p>or locally using</p>\n<pre><code>python setup.py install --user\n</code></pre>\n<p>The behavior of the parallel sorting algorithm used when setting <code>sort='parallel'</code> in the approximate version of the N-body code (<code>approx=True</code>) is controlled by a few compilation-time variables: <code>PARALLEL_SERIAL_SORT_SWITCH</code>, which sets the length of an array below which the serial sort is used, <code>PARALLEL_SERIAL_MERGE_SWITCH</code>, which sets the length of an array below which a serial merge is used (as part of the <code>mergesort</code> sorting algorithm used), and <code>PARALLEL_SORT_NUM_THREADS</code>, the number of threads used in the parallel sorting algorithm. By default, these are set to <code>PARALLEL_SERIAL_MERGE_SWITCH=10000</code>, <code>PARALLEL_SERIAL_MERGE_SWITCH=50000</code>, and <code>PARALLEL_SORT_NUM_THREADS=32</code>, which appear to work well. Significant speed-ups can be obtained by optimizing these for your system and specific problem. They can be set to different values by running, e.g.,</p>\n<pre><code>export CFLAGS=\"$CFLAGS -D PARALLEL_SERIAL_SORT_SWITCH=10 -D PARALLEL_SERIAL_MERGE_SWITCH=10 -D PARALLEL_SORT_NUM_THREADS=2\"\n</code></pre>\n<p>before compiling the code (if you are trying to change them, make sure to force a re-compilation by removing the <code>build/</code> directory).</p>\n<h2>Usage</h2>\n<p>Use <code>wendy.nbody</code> to initialize a generator object for initial <em>(x,v)</em> with masses <em>m</em>. The generator then returns the state of the system at equally-spaced time intervals:</p>\n<pre><code>g= wendy.nbody(x,v,m,0.05) # delta t = 0.05\nnext_x, next_v= next(g) # at t=0.05\nnext_x, next_v= next(g) # at t=0.10\n...\n</code></pre>\n<p>The generator initialization with <code>wendy.nbody</code> has options to (a) solve the problem exactly or not using <code>approx=</code>, (b) include an external harmonic oscillator potential <code>omega^2 x^2 / 2</code> with <code>omega=</code> (both for exact and approximate solutions), and (c) include an arbitrary external force <code>F(x,t)</code> (using <code>ext_force=</code>, only for the approximate solution).</p>\n<h2>Examples</h2>\n<ul>\n<li>Phase mixing and violent relaxation in one dimension: <a href=\"examples/PhaseMixingViolentRelaxation.ipynb\" rel=\"nofollow\">example notebook</a> (run locally to see movies, or view on <a href=\"http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/PhaseMixingViolentRelaxation.ipynb?flush_cache=true\" rel=\"nofollow\">nbviewer</a>)</li>\n</ul>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1357be3de0e78585d14d6a68d146e5df821af112/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f313034343837362f32363033303635372f65323963396566652d333832362d313165372d383431392d3762663936643536353536392e676966\" width=\"400\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad52e6313176b5f53bca418652f95f95ddba1dde/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f313034343837362f32363033303637322f31666166613962632d333832372d313165372d393136372d3136663130626234306235392e676966\" width=\"400\"></p>\n<ul>\n<li>A self-gravitating, sech<sup>2</sup> disk: <a href=\"examples/SelfGravitatingSech2Disk.ipynb\" rel=\"nofollow\">example notebook</a> (run locally to see movies, or view on <a href=\"http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/SelfGravitatingSech2Disk.ipynb?flush_cache=true\" rel=\"nofollow\">nbviewer</a>)</li>\n</ul>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7048002e0e124978dcff79e2fc3d79aafa0d59b/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313034343837362f32363934323030322d37646365393634342d346334652d313165372d393064302d3433626564646664306464392e676966\" width=\"400\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7b19bf7802a66f96b6009e6559e1eb3028bba2b7/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f313034343837362f32363038393431342f38353064643761322d333963622d313165372d396265622d3733646263653263366334622e676966\" width=\"400\"></p>\n<ul>\n<li>The <em>Gaia</em> phase-space spiral: <a href=\"examples/GaiaPhaseSpaceSpiral.ipynb\" rel=\"nofollow\">example notebook</a> (run locally to see movies, or view on <a href=\"http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/GaiaPhaseSpaceSpiral.ipynb?flush_cache=true\" rel=\"nofollow\">nbviewer</a>)</li>\n</ul>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a9d15b0b369679956b89f6660187b9765518a44/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313034343837362f36333733393630382d64353730356130302d633835622d313165392d396537352d6662653130363239343333312e676966\" width=\"400\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef340492ddd3c3c2b53f1ef3c48cf058d4dc6924/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313034343837362f36333733393632302d65323864343930302d633835622d313165392d383864392d6565323834626437616438332e676966\" width=\"400\"></p>\n<ul>\n<li>Adiabatic contraction: <a href=\"examples/AdiabaticContraction.ipynb\" rel=\"nofollow\">example notebook</a> (run locally to see movies, or view on <a href=\"http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/AdiabaticContraction.ipynb?flush_cache=true\" rel=\"nofollow\">nbviewer</a>)</li>\n</ul>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbdb0103b8c32260e43f4e1af524fd4d118709fb/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313034343837362f32363934313633382d32623465656438652d346334642d313165372d393830342d6136336236383162383665362e676966\" width=\"400\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/298573cea1c3e71f8a996c5f219fa5e4b56d3b89/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313034343837362f32363934313830392d64373339336232322d346334642d313165372d393764642d6364336232353961656661372e676966\" width=\"400\"></p>\n<ul>\n<li>Adiabatic vs. non-adiabatic energy injection for an exponential disk: <a href=\"examples/AdiabaticVsNonAdiabatic.ipynb\" rel=\"nofollow\">example notebook</a> (run locally to see movies, or view on <a href=\"http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/AdiabaticVsNonAdiabatic.ipynb?flush_cache=true\" rel=\"nofollow\">nbviewer</a>)</li>\n</ul>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/baf6bb2a646e28811e6fa72568310f59e5047981/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313034343837362f32373031343831352d33643566653264652d346563652d313165372d393533662d6365643131643439393364322e676966\" width=\"400\"><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdc0bab0e36d63c414397d8d0d552cef2df1fea3/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313034343837362f32373031343832352d36343834393866302d346563652d313165372d383336302d6366316630346531336362612e676966\" width=\"400\"></p>\n<ul>\n<li><code>wendy</code> scaling with particle number: <a href=\"examples/WendyScaling.ipynb\" rel=\"nofollow\">example notebook</a> (view on <a href=\"http://nbviewer.jupyter.org/github/jobovy/wendy/blob/master/examples/WendyScaling.ipynb?flush_cache=true\" rel=\"nofollow\">nbviewer</a>)</li>\n</ul>\n\n          </div>"}, "last_serial": 7073038, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "90d97b737cfd99f524ab05fee4fb065e", "sha256": "f65fee7684c605fe43d1fd54cc3b7ab48eebd0edab10aceee78b5d7e55cc6a50"}, "downloads": -1, "filename": "wendy-0.1.tar.gz", "has_sig": false, "md5_digest": "90d97b737cfd99f524ab05fee4fb065e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10969, "upload_time": "2017-06-12T02:41:47", "upload_time_iso_8601": "2017-06-12T02:41:47.675029Z", "url": "https://files.pythonhosted.org/packages/81/f6/fa9100913a8cd4bd98e19d24d08022a8dca15884867aacc2508aeac95284/wendy-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4657832aa0586c4da2e8f149e673ff27", "sha256": "f3fa0b9a40637f8745864e6f37a9ce8e89dada913816189465ee2c020ed096e2"}, "downloads": -1, "filename": "wendy-0.2.tar.gz", "has_sig": false, "md5_digest": "4657832aa0586c4da2e8f149e673ff27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30805, "upload_time": "2020-04-22T02:50:07", "upload_time_iso_8601": "2020-04-22T02:50:07.871999Z", "url": "https://files.pythonhosted.org/packages/f4/d8/703513aefa5e2c63e91d88e834af502a2d9d65f624d55cd47a9a0a5b944c/wendy-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4657832aa0586c4da2e8f149e673ff27", "sha256": "f3fa0b9a40637f8745864e6f37a9ce8e89dada913816189465ee2c020ed096e2"}, "downloads": -1, "filename": "wendy-0.2.tar.gz", "has_sig": false, "md5_digest": "4657832aa0586c4da2e8f149e673ff27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30805, "upload_time": "2020-04-22T02:50:07", "upload_time_iso_8601": "2020-04-22T02:50:07.871999Z", "url": "https://files.pythonhosted.org/packages/f4/d8/703513aefa5e2c63e91d88e834af502a2d9d65f624d55cd47a9a0a5b944c/wendy-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:17 2020"}