{"info": {"author": "V\u00e1clav Vinkl\u00e1t", "author_email": "vin@email.cz", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Laporte\n\n- a gateway for processing metrics with automation and states\n- acceptor for sensors, batch jobs or messages\n- with the ability to set actuators\n- compatible with Prometheus for metric alerting, collecting and data visualization\n\n## Schema:\n\n![laporte schema](doc/laporte_schema.svg)\n\n## Features:\n\n - can evaluate, recalculate or correct metric\n - calculate new metric or state from other metrics\n - automation using a true algorithmization + data structures (python expression code)\n - can set TTL for metrics (obsolete metric disappears when time is over)\n - communicates via:\n    * RESTful API \n    * realtime, bidirectionally using Socket.IO\n    * exporting data as Prometheus metrics\n    * live www status page\n - optional bridges (extensions):\n    * [laporte-mqtt](https://github.com/vinklat/laporte-mqtt) to connect a large family of devices using MQTT protocol\n    * [laporte-journal](https://github.com/vinklat/laporte-journal) to store all events into other database\n\n## Installation:\nTo install Laporte from PyPI:\n\n`pip install laporte`\n\nOr using container image from Docker Hub:\n\n`docker pull vinklat/laporte`\n\n\n## Quick HOWTO:\n### Example: push gateway for weather sensor\n\n - manually simulate a weather sensor and send temperature and relative humidity data to this gateway using REST API\n - in this example the temperature will be corrected (slope +1% and shift + 0.5). Can be used in case of calibrate sensor, unit conversion, ...\n - other two new metrics will be calculated (dew point temperature and absolute humidity)\n - in the case of an inactive sensor, the data expires in 10 minutes\n\n#### a) run the docker image\n\n`docker run -p 9128:9128 vinklat/laporte -c conf/example_weatherstation.yml`\n\n(the content of this built-in config file can be seen here: [example_weatherstation.yml](conf/example_weatherstation.yml))\n\n#### b) send metrics from sensor via REST API\n\nTry sending data several times using curl:\n\n`curl http://localhost:9128/api/metrics/weather1 -d temp_celsius=37.5 -d hum_ratio=0.8 -X PUT`\n\n#### c) watch status\n - Laporte status page: [http://localhost:9128](http://localhost:9128)\n - JSON response of REST API: [http://localhost:9128/api/metrics/by_node](http://localhost:9128/api/metrics/by_node)\n - Prometheus metrics: [http://localhost:9128/prom](http://localhost:9128/prom)\n\n...more info on the [wiki](https://github.com/vinklat/laporte/wiki)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vinklat/laporte", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "laporte", "package_url": "https://pypi.org/project/laporte/", "platform": "", "project_url": "https://pypi.org/project/laporte/", "project_urls": {"Homepage": "https://github.com/vinklat/laporte"}, "release_url": "https://pypi.org/project/laporte/0.4.2/", "requires_dist": ["flask", "flask-restplus", "flask-socketio", "python-socketio[client]", "bootstrap-flask", "prometheus-client", "apscheduler", "gevent", "gevent-websocket", "pyyaml", "jinja2", "asteval", "numpy"], "requires_python": "", "summary": "Push gateway for processing metrics with automation and states.", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Laporte</h1>\n<ul>\n<li>a gateway for processing metrics with automation and states</li>\n<li>acceptor for sensors, batch jobs or messages</li>\n<li>with the ability to set actuators</li>\n<li>compatible with Prometheus for metric alerting, collecting and data visualization</li>\n</ul>\n<h2>Schema:</h2>\n<p><img alt=\"laporte schema\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52e5677940c967354ea39f40dc1d88a580f5030f/646f632f6c61706f7274655f736368656d612e737667\"></p>\n<h2>Features:</h2>\n<ul>\n<li>can evaluate, recalculate or correct metric</li>\n<li>calculate new metric or state from other metrics</li>\n<li>automation using a true algorithmization + data structures (python expression code)</li>\n<li>can set TTL for metrics (obsolete metric disappears when time is over)</li>\n<li>communicates via:\n<ul>\n<li>RESTful API</li>\n<li>realtime, bidirectionally using Socket.IO</li>\n<li>exporting data as Prometheus metrics</li>\n<li>live www status page</li>\n</ul>\n</li>\n<li>optional bridges (extensions):\n<ul>\n<li><a href=\"https://github.com/vinklat/laporte-mqtt\" rel=\"nofollow\">laporte-mqtt</a> to connect a large family of devices using MQTT protocol</li>\n<li><a href=\"https://github.com/vinklat/laporte-journal\" rel=\"nofollow\">laporte-journal</a> to store all events into other database</li>\n</ul>\n</li>\n</ul>\n<h2>Installation:</h2>\n<p>To install Laporte from PyPI:</p>\n<p><code>pip install laporte</code></p>\n<p>Or using container image from Docker Hub:</p>\n<p><code>docker pull vinklat/laporte</code></p>\n<h2>Quick HOWTO:</h2>\n<h3>Example: push gateway for weather sensor</h3>\n<ul>\n<li>manually simulate a weather sensor and send temperature and relative humidity data to this gateway using REST API</li>\n<li>in this example the temperature will be corrected (slope +1% and shift + 0.5). Can be used in case of calibrate sensor, unit conversion, ...</li>\n<li>other two new metrics will be calculated (dew point temperature and absolute humidity)</li>\n<li>in the case of an inactive sensor, the data expires in 10 minutes</li>\n</ul>\n<h4>a) run the docker image</h4>\n<p><code>docker run -p 9128:9128 vinklat/laporte -c conf/example_weatherstation.yml</code></p>\n<p>(the content of this built-in config file can be seen here: <a href=\"conf/example_weatherstation.yml\" rel=\"nofollow\">example_weatherstation.yml</a>)</p>\n<h4>b) send metrics from sensor via REST API</h4>\n<p>Try sending data several times using curl:</p>\n<p><code>curl http://localhost:9128/api/metrics/weather1 -d temp_celsius=37.5 -d hum_ratio=0.8 -X PUT</code></p>\n<h4>c) watch status</h4>\n<ul>\n<li>Laporte status page: <a href=\"http://localhost:9128\" rel=\"nofollow\">http://localhost:9128</a></li>\n<li>JSON response of REST API: <a href=\"http://localhost:9128/api/metrics/by_node\" rel=\"nofollow\">http://localhost:9128/api/metrics/by_node</a></li>\n<li>Prometheus metrics: <a href=\"http://localhost:9128/prom\" rel=\"nofollow\">http://localhost:9128/prom</a></li>\n</ul>\n<p>...more info on the <a href=\"https://github.com/vinklat/laporte/wiki\" rel=\"nofollow\">wiki</a></p>\n\n          </div>"}, "last_serial": 6338722, "releases": {"0.4.1": [{"comment_text": "", "digests": {"md5": "1275819bf2f9be240d2dc4ef88ac8b8d", "sha256": "411c9f1b2adc106c5f0be62654ef8dd209bc4fa2ba1372c64ecda46d15bea2a3"}, "downloads": -1, "filename": "laporte-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1275819bf2f9be240d2dc4ef88ac8b8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22974, "upload_time": "2019-12-08T20:44:28", "upload_time_iso_8601": "2019-12-08T20:44:28.851405Z", "url": "https://files.pythonhosted.org/packages/92/8c/abe72c207df9a4b5d61b3db720d2546ad522fb68072b47189b09a0fc1be0/laporte-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ed8bba333f577cdbe723929bbf1cee6c", "sha256": "6b116b2da242d840884d66cbd13ee86804b1940c39de6e1fc691bef298f1c684"}, "downloads": -1, "filename": "laporte-0.4.1.tar.gz", "has_sig": false, "md5_digest": "ed8bba333f577cdbe723929bbf1cee6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18334, "upload_time": "2019-12-08T20:44:30", "upload_time_iso_8601": "2019-12-08T20:44:30.907881Z", "url": "https://files.pythonhosted.org/packages/b8/4e/56f910bfd3678f682770b38bb3f4cb896ec83c3020b7df4d958b43698abf/laporte-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "d37c5f6d9a086f32a9bc0116c8465749", "sha256": "94cbb5be5c5124c7ae7d8c2381950c2162e15eafc92e22a0a1af3693935258a4"}, "downloads": -1, "filename": "laporte-0.4.2-py2-none-any.whl", "has_sig": false, "md5_digest": "d37c5f6d9a086f32a9bc0116c8465749", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23176, "upload_time": "2019-12-20T12:30:32", "upload_time_iso_8601": "2019-12-20T12:30:32.313343Z", "url": "https://files.pythonhosted.org/packages/d1/0b/ce12d13dbca5b4df39e44a79c9bd6243223c8b80a1d096e1c9c96a74e039/laporte-0.4.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d83478dceea72351db0ba705998f8cf2", "sha256": "64898020bb131c7568e101d03a999451c3e63edcd98731c270ddec7e1ea318e7"}, "downloads": -1, "filename": "laporte-0.4.2.tar.gz", "has_sig": false, "md5_digest": "d83478dceea72351db0ba705998f8cf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17557, "upload_time": "2019-12-20T12:30:33", "upload_time_iso_8601": "2019-12-20T12:30:33.775526Z", "url": "https://files.pythonhosted.org/packages/eb/a6/ddb1ff5229b756029cd1bd3dbb147f380788a17e1c493dc40e1aa01206b8/laporte-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d37c5f6d9a086f32a9bc0116c8465749", "sha256": "94cbb5be5c5124c7ae7d8c2381950c2162e15eafc92e22a0a1af3693935258a4"}, "downloads": -1, "filename": "laporte-0.4.2-py2-none-any.whl", "has_sig": false, "md5_digest": "d37c5f6d9a086f32a9bc0116c8465749", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 23176, "upload_time": "2019-12-20T12:30:32", "upload_time_iso_8601": "2019-12-20T12:30:32.313343Z", "url": "https://files.pythonhosted.org/packages/d1/0b/ce12d13dbca5b4df39e44a79c9bd6243223c8b80a1d096e1c9c96a74e039/laporte-0.4.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d83478dceea72351db0ba705998f8cf2", "sha256": "64898020bb131c7568e101d03a999451c3e63edcd98731c270ddec7e1ea318e7"}, "downloads": -1, "filename": "laporte-0.4.2.tar.gz", "has_sig": false, "md5_digest": "d83478dceea72351db0ba705998f8cf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17557, "upload_time": "2019-12-20T12:30:33", "upload_time_iso_8601": "2019-12-20T12:30:33.775526Z", "url": "https://files.pythonhosted.org/packages/eb/a6/ddb1ff5229b756029cd1bd3dbb147f380788a17e1c493dc40e1aa01206b8/laporte-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:54 2020"}