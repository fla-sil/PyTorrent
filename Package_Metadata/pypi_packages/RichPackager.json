{"info": {"author": "Wang", "author_email": "taptube@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "# RichPackager\nPython package suite to ship with standard package (built by Setuptools), project data files, offline dependence and others.\n\n\n### Advantage\nPack your whole python project offline.\n\nUsually there're not only code but many data like htmls or dependences needed for running in your project. \nThis suite is a single script to package your code, pip dependences and others offline, then deploy it with creating virtualenv to make every thing One-Click to run.\n\n### How to pack\n1. make an dir named 'requirements_info'.\n2. put your pypi requirements.txt into requirements_pypi.txt.\n3. put dev package link (Support git, hg, svn, or bzr) requirements.txt into requirements_dev_release.txt; And put dev package name/ver into requirements_release.txt.\n4. mark files or dirs that you want to pack and app category in the rich_package.json. \n5. make sure all things mentioned before are included and commited in your VCS path(Now only support svn.).\n6. then run \n```\npython rich_packager.py p -p /user/bin/python3 -l http://to.package.com/proj_to_package\n\n```\nto pack your whole project. The script will download all pip package and make everything offline.\n7.the dist is in ./rich_dist_center/{{ app_category }}/xx.rich\n\n### How to deploy\nrun \n```\npython rich_packager.py p -p /user/bin/python3 -l http://to.package.com/proj_to_package\n\n```\nto unpack and deploy dist to the according path. Then use {{ deploy path}}/venv/bin/python to run your code.\n\n\n###Usage\n```\nusage: rich_packager.py [-h] -p PYTHON_PATH [-l VCS_PATH] [-tp DIST_PATH]\n                        [-dp DEPLOY_PATH]\n                        {p,d}\n\nRich dist Packager!\n\npositional arguments:\n  {p,d}                 Select run mode.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p PYTHON_PATH, --python_path PYTHON_PATH\n                        Python Interpreter path.\n  -l VCS_PATH, --vcs_path VCS_PATH\n                        VCS path to fetch.\n  -tp DIST_PATH, --dist_path DIST_PATH\n                        Dist path.\n  -dp DEPLOY_PATH, --deploy_path DEPLOY_PATH\n                        Path to deploy dist to.\n```\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "RichPackager", "package_url": "https://pypi.org/project/RichPackager/", "platform": "", "project_url": "https://pypi.org/project/RichPackager/", "project_urls": null, "release_url": "https://pypi.org/project/RichPackager/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Python package suite to ship with standard package (built by Setuptools), project data files, offline dependence and others.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # RichPackager<br>Python package suite to ship with standard package (built by Setuptools), project data files, offline dependence and others.<br><br><br>### Advantage<br>Pack your whole python project offline.<br><br>Usually there're not only code but many data like htmls or dependences needed for running in your project. <br>This suite is a single script to package your code, pip dependences and others offline, then deploy it with creating virtualenv to make every thing One-Click to run.<br><br>### How to pack<br>1. make an dir named 'requirements_info'.<br>2. put your pypi requirements.txt into requirements_pypi.txt.<br>3. put dev package link (Support git, hg, svn, or bzr) requirements.txt into requirements_dev_release.txt; And put dev package name/ver into requirements_release.txt.<br>4. mark files or dirs that you want to pack and app category in the rich_package.json. <br>5. make sure all things mentioned before are included and commited in your VCS path(Now only support svn.).<br>6. then run <br>```<br>python rich_packager.py p -p /user/bin/python3 -l http://to.package.com/proj_to_package<br><br>```<br>to pack your whole project. The script will download all pip package and make everything offline.<br>7.the dist is in ./rich_dist_center/{{ app_category }}/xx.rich<br><br>### How to deploy<br>run <br>```<br>python rich_packager.py p -p /user/bin/python3 -l http://to.package.com/proj_to_package<br><br>```<br>to unpack and deploy dist to the according path. Then use {{ deploy path}}/venv/bin/python to run your code.<br><br><br>###Usage<br>```<br>usage: rich_packager.py [-h] -p PYTHON_PATH [-l VCS_PATH] [-tp DIST_PATH]<br>                        [-dp DEPLOY_PATH]<br>                        {p,d}<br><br>Rich dist Packager!<br><br>positional arguments:<br>  {p,d}                 Select run mode.<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  -p PYTHON_PATH, --python_path PYTHON_PATH<br>                        Python Interpreter path.<br>  -l VCS_PATH, --vcs_path VCS_PATH<br>                        VCS path to fetch.<br>  -tp DIST_PATH, --dist_path DIST_PATH<br>                        Dist path.<br>  -dp DEPLOY_PATH, --deploy_path DEPLOY_PATH<br>                        Path to deploy dist to.<br>```<br><br>\n          </div>"}, "last_serial": 2624764, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "4861a3eb34fa5b4f0e2a7f19178e019d", "sha256": "e37e63d846ccc819bf72bcfbb5992f2ff8a2ba249d3d48072f180cce8891cee2"}, "downloads": -1, "filename": "RichPackager-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4861a3eb34fa5b4f0e2a7f19178e019d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6114, "upload_time": "2017-02-07T10:29:40", "upload_time_iso_8601": "2017-02-07T10:29:40.195708Z", "url": "https://files.pythonhosted.org/packages/42/70/f54a16b0e046fd6757beec7ec5fd9902ccf5f387dd07e9b5cac6a0e89c0e/RichPackager-0.1.1-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4861a3eb34fa5b4f0e2a7f19178e019d", "sha256": "e37e63d846ccc819bf72bcfbb5992f2ff8a2ba249d3d48072f180cce8891cee2"}, "downloads": -1, "filename": "RichPackager-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4861a3eb34fa5b4f0e2a7f19178e019d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6114, "upload_time": "2017-02-07T10:29:40", "upload_time_iso_8601": "2017-02-07T10:29:40.195708Z", "url": "https://files.pythonhosted.org/packages/42/70/f54a16b0e046fd6757beec7ec5fd9902ccf5f387dd07e9b5cac6a0e89c0e/RichPackager-0.1.1-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:02:45 2020"}